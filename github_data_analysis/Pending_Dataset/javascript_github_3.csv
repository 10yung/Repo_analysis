,full_name,forks_count,open_issues_count,watchers_count,comment_count,star_count,issue_content
0,trekhleb/javascript-algorithms,9690,169,60168,,60168,"I have solved it. I have missed one line of code 
  it('should search number in sorted array', () => {

_Originally posted by @GharbiSlim in https://github.com/trekhleb/javascript-algorithms/issues/346#issuecomment-486598038_[[[[[Next]]]]]* Translate doubly linked list document in Korean
* Update README.md"
1,angular/angular.js,28822,471,59659,,59659,"'Whether' was misspelled and a full stop was fixed. No other changes.

# AngularJS is in LTS mode
We are no longer accepting changes that are not critical bug fixes into this project.
See https://blog.angular.io/stable-angularjs-and-long-term-support-7e077635ee9c for more detail.

<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->
**Does this PR fix a regression since 1.7.0, a security flaw, or a problem caused by a new browser version?**

<!-- If the answer is no, then we will not merge this PR -->


**What is the current behavior? (You can also link to an open issue here)**



**What is the new behavior (if this is a feature change)?**



**Does this PR introduce a breaking change?**



**Please check if the PR fulfills these requirements**
- [x] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)
- [x] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated
- [ ] Fix/Feature: Tests have been added; existing tests pass

**Other information**:

[[[[[Next]]]]]This is tiny documentation fix. Fixed the formatting to `getter`/`setter`

# AngularJS is in LTS mode
We are no longer accepting changes that are not critical bug fixes into this project.
See https://blog.angular.io/stable-angularjs-and-long-term-support-7e077635ee9c for more detail.

<!-- General PR submission guidelines https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#submit-pr -->
**Does this PR fix a regression since 1.7.0, a security flaw, or a problem caused by a new browser version?**

<!-- If the answer is no, then we will not merge this PR -->


**What is the current behavior? (You can also link to an open issue here)**



**What is the new behavior (if this is a feature change)?**



**Does this PR introduce a breaking change?**



**Please check if the PR fulfills these requirements**
- [x] The commit message follows our [guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits)
- [x] Fix/Feature: [Docs](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#documentation) have been added/updated
- [ ] Fix/Feature: Tests have been added; existing tests pass

**Other information**:

"
2,mrdoob/three.js,22038,628,57784,,57784,"[[[[[Next]]]]]The order of the shader chunks in the `physical`, `phong`, and `lambert` shaders is now repeated everywhere.

The ""best"" order can be debated, but at least we are now consistent."
3,puppeteer/puppeteer,5686,759,57470,,57470,"### Steps to reproduce

**Tell us about your environment:**

* Puppeteer version: 2.0.0
* Platform / OS version: Mac
* URLs (if applicable):
* Node.js version: v10.15.0

**What steps will reproduce the problem?**

Sorry I didn't write a minimal repro. I figure this should be easy to repro. I'm happy to write one if you want, just let me know.

1. In pptr window, either zoom in or out by a lot
2. Get an ElementHandle to a text box
3. Click on ElementHandle

**What is the expected result?**

Click in text box

**What happens instead?**

Click in text box as if zoom were 100%
But because zoom is not 100%, the click is in the wrong place.[[[[[Next]]]]]### Steps to reproduce

**Tell us about your environment:**

* Puppeteer version: 2.0.0
* Platform / OS version: MacOS 10.15.2  2014 MacBook Pro
* URLs (if applicable):
* Node.js version: 12.4

**What steps will reproduce the problem?**

`package.json`

```
{
  ""name"": ""puppeteer-issue"",
  ""version"": ""1.0.0"",
  ""dependencies"": {
    ""express"": ""^4.17.1"",
    ""puppeteer"": ""^2.0.0""
  }
}
```

Note it says it downloaded r706915 on installtion

`00_test.html`

```
<script>
const img = new Image();
img.onload = () => {
  console.log('loaded img');
}
img.src = 'beach.jpg';

const a = new Float32Array(10000000);
function loop() {
  for (let i = 0; i < a.length; ++i) {
    a[i] = a[i] + Math.random() - 0.5;
  }
  requestAnimationFrame(loop);
}
requestAnimationFrame(loop);
</script>
```

`index.js`

```
const puppeteer = require('puppeteer');
const express = require('express');
const app = express();
const port = 3000;

const dir = __dirname;
const url = `http://localhost:${port}/00-test.html`;

app.use(express.static(dir));
const server = app.listen(port, () => {
  console.log(`Example app listening on port ${port}!`);
  test.call(this, port);
});

async function test(port) {
  console.log('launching puppeteer');
  const browser = await puppeteer.launch();
  const page = await browser.newPage();

  let currentURL;
  page.on('console', (msg) => {
    console.log(msg.text());
  });


  try {
    await page.goto(url, {waitUntil: 'networkidle2', timeout: 25000});
    console.log('---success---');
  } catch (e) {
    console.error('---failure----')
  }

  await browser.close();
  server.close();
}
```

`beach.jpg`  (included in the zip below, and the files above)

[puppeteer-issue.zip](https://github.com/puppeteer/puppeteer/files/4050272/puppeteer-issue.zip)

**Steps**

1.  unzip the zip file above
2. npm install
3. node index.js

**What is the expected result?**

It prints `---sucesss---`

In particular we eventually get `networkidle2`


**What happens instead?**

In 25 seconds it times out and prints `--failure--`

**Notes**

If you are on a faster / newer machine try increasing the size of the array in 00_test.js or do something computationally expensive-ish

In reality I'm trying to use puppeteer to test some three.js code and any example which loads some data and has a semi complex scene (not really complex, < 10 cubes is enough) never gets `networkidle2`

I narrowed it down to this small sample. If remove the image loading it works (gets `networkidle2`). If make the loop smaller it also gets `networkidle2` but apparently some race or priority prevents `networkidle2` if there was ever any I/O requested by JS and if there is a rAF loop that's over some threshold of heaviness.
"
4,jquery/jquery,18977,93,52824,,52824,"### Summary ###
<!--
Describe what this PR does. All but trivial changes (e.g. typos)
should start with an issue. Mention the issue number here.
-->

This removes a needless function call in modern browsers.

+3 bytes

### Checklist ###
<!--
Mark an `[x]` for completed items, if you're not sure leave them unchecked and we can assist.
-->

* [x] All authors have signed the CLA at https://cla.js.foundation/jquery/jquery
* ~~New tests have been added to show the fix or feature works~~
* [x] Grunt build and unit tests pass locally with these changes
* ~~If needed, a docs issue/PR was created at https://github.com/jquery/api.jquery.com~~

<!--
Thanks! Bots and humans will be around shortly to check it out.
-->
[[[[[Next]]]]]### Summary ###
<!--
Describe what this PR does. All but trivial changes (e.g. typos)
should start with an issue. Mention the issue number here.
-->

Remove obsolete jQuery data tests.

The tests relied on `jQuery.cache` so they only ever worked in jQuery 1.x.

### Checklist ###
<!--
Mark an `[x]` for completed items, if you're not sure leave them unchecked and we can assist.
-->

* [x] All authors have signed the CLA at https://cla.js.foundation/jquery/jquery
* ~~New tests have been added to show the fix or feature works~~
* [x] Grunt build and unit tests pass locally with these changes
* ~~If needed, a docs issue/PR was created at https://github.com/jquery/api.jquery.com~~

<!--
Thanks! Bots and humans will be around shortly to check it out.
-->
"
