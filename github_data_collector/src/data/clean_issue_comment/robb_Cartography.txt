Header CartographySwifth not found topLayoutGuide was deprecated in Mac Catalyst Use viewsafeAreaLayoutGuidetopAnchor instead of topLayoutGuidebottomAnchor same for bottomLayoutGuide This is a doc update with the usage hints based on the problems found in Xcode and as stated in this Pull Request Because constrain function is defined in CommonUISDK looks like XCode cannot compile Cartography pod anymore Renaming constrain functions to cgconstrain seems to fix the problem closes May I know how to resolve this error Error Swift Compiler Error Group Ambiguous reference to member constraindimensionwithConstantrelation Xcode Version beta M q Thanks so much Module compiled with Swift cannot be imported by the Swift compiler Trying to build this using Carthage on XCode Getting the following errors swift public typealias LayoutAttribute NSLayoutConstraintAttribute UserswellingtonDocumentsCodeCensioiOScensioiosappCodeCarthageCheckoutsCartographyCartographyContextswift error Relation is not a member type of NSLayoutConstraint public typealias LayoutRelation NSLayoutConstraintRelation UserswellingtonDocumentsCodeCensioiOScensioiosappCodeCarthageCheckoutsCartographyCartographyLayoutProxyswift error Attribute is not a member type of NSLayoutConstraint internal func dimensionwith attribute NSLayoutConstraintAttribute Dimension UserswellingtonDocumentsCodeCensioiOScensioiosappCodeCarthageCheckoutsCartographyCartographyLayoutProxyswift error Attribute is not a member type of NSLayoutConstraint internal func edgewith attribute NSLayoutConstraintAttribute Edge Did you mean to use NSLayoutAttribute Help Right now we must use the availableiOS x preprocessor to switch between preiOS cartopLayoutGuide carbottomLayoutGuide and postiOS safeAreaLayoutGuide Isnt there any cleaner way of defining those types of constraints Invalid redeclaration of Xcode swift pod Cartography can you give me any advise thanks very much Addresses This is maybe not the best solution not DRY but with the code below weve seen swift type checking times go down from ms to ms example at bottom With this PR I wanted to start a discussion around using custom operators As I understand it the problem is the overloading of common operators like and causing confusion for the type checker and massive compile times Other than tests not sure what is missing but Id be happy to make any improvements Example code A fairly complex example here seen with the updated syntax constrain self titleLabel dialCodeButton phoneTextField submitButton proxies in var views proxies let superview viewsremoveFirst let titleLabel viewsremoveFirst let dialCodeButton viewsremoveFirst let phoneTextField viewsremoveFirst let submitButton viewsremoveFirst for view in titleLabel submitButton viewleft superviewleft GUIConstanttableInset viewright superviewright GUIConstanttableInset dialCodeButtonleft superviewleft GUIConstanttableInset phoneTextFieldleft dialCodeButtonright padding phoneTextFieldright superviewright GUIConstanttableInset dialCodeButtonwidth superviewwidth GUIConstanttableInset phoneTextFieldwidth superviewwidth GUIConstanttableInset submitButtonheight GUIConstantbuttonHeight phoneTextFieldheight GUIConstantbuttonHeight dialCodeButtonheight GUIConstantbuttonHeight titleLabeltop superviewtop GUIConstanttableInset phoneTextFieldtop titleLabelbottom GUIConstanttableInset dialCodeButtontop titleLabelbottom GUIConstanttableInset submitButtontop phoneTextFieldbottom padding 