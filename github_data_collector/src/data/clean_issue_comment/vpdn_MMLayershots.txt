Navigation Tab and Toolbars dont render their blurred background Their background views use UIVisualEffectView which apparently isnt supported Hi Did just find a bug in groups generation Actual implementation stop groups generation once groups count limit is reached but this will also stop sublayers content generation merging them all in a master layer This issue is fixed in PR By the way i think a layer grouping model based on views type would be more practical Tableview ScrollView Cell etc what do you think Regards Optimized layer content generation to reduce file size Hey First of all this is a very cool project thank you Im currently trying to render a failry large CALayerhierarchy consisting of all kinds of layers CAShapeLayer CAReplicatorLayer CATransformLayer CATextLayer etc into one single CGContext with respectiing zOrder I have tested MMLayershots wo modification on it besides reducing the quality to since it will crash due to the memory overflow youve mentioned in another thread and it renders every layer in the perfect position just the zOrder is different from the one on the screen Im using the zTranslation of the CATransform D t o change the zOrder of my layers What could I possibly do to have it render correctly with respecting zOrder Can you think of an easy way how to make it all render in to one single CGContext instead of one context per image All my tries to just render it manually ie rendering the root layer and have it render its children failed by either having a wrong zOrder or wrong xy positions I hope you can help me on this and we could possibly enhance MMLayershots with those features Best Max Hi I dont know whats going on there when UIDatePicker is on screen but that causes the output file being overbloated up to Mb of artefacts If this is the problem of UIDatePicker then I would blacklist it and simply take a snapshot of the whole control without going through its sublayers Currently because of the way the psd lib works all psd layers are kept in memory and only written to disk after all layers have been processed This causes files with large number of layers to fill up the entire space leading to a low memory situation We need to either a check for low memory situations in which case we should abort the psd creation or alter the psd generator to work in a stream based manner NSOutputStream Currently layer effects such as drop shadow are rendered on the CALayer itself onto a photoshop layer This causes the shadow to be rendered wrongly when the sublayer extends above the parent layers bounds The CALayer effects should mapped onto a group instead with the content of the CALayer as the first PS layer within the group Currently all layers are rendered in full size of the window which makes the resulting psd unnecessarily big The file is automatically trimmed by photoshop but only after the user opens and resaves the file We need to find a way to trim the whitespace out to make the PSD smaller and easier to transport via Email One way of doing it would be to Inspect the generated layer images and scan line by line This has the advantage of detecting empty layers ie layers with only transparent pixels but will require image analysis on each layer A more elegant and efficient method would be to calculate the required layer bounds by recursing through the child layers and unioning the layer rects This however wont detect empty transparent layers A combination of both might be the best approach 