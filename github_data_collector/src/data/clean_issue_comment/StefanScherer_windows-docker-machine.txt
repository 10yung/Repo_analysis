After much irritation banging my head up against how to easily resize the existing box image from the small G limit this uses the vagrantdisksize plugin to resize it to G and runs a diskpart to extend volume when the machine is created Hi Stefan first of all I wanted to say that Im impressed by this project and am using it on a daily basis for crossplatform development Its really helping a lot Thanks for the great work so far One of the things that Im missing currently is the support for easily defining insecureregistries within the daemonjson on the windows hosts I was able to quickly hack in a solution for me that works but was wondering if that could be something that might be of interest to more people what I did so far was simply extending the createmachineps Powershell script by a single line Powershell config config AddMember hosts tcp npipe tlsverify true tlscacert serverCertsPath capem tlscert serverCertsPath servercertpem tlskey serverCertsPath serverkeypem insecureregistries myinsecureregistry experimental experimental Force PassThru It probably would be great to be able to define this within the Vagrant environment Im not a Powershell nor a Vagrant guru so sorry for not providing a potential solution already Best Matthias On a Windows host with VirtualBox the provision script fails bildschirmfoto um It seems that Vagrant has to create a simpler name for the share A manually created share with only a name without drive name and without backslashes works fine Running the Vagrant box from a Windows host with HyperV shows the following error img width altbildschirmfoto um src The Vagrant box mounts the current user directory into the Windows VM through SMB It seems that this kind of mount cant be mapped into a Windows container as the docker engine complains with Access denied 