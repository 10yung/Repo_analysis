 Expected Behavior When creating a new chart we should get a nice appearing animation Current Behavior With master chart appears abrutly without any initial animation Possible Solution I did some testing it seems to be a regression appeared with At chart creation we have a second resize event with the same canvas width and height than already set in initial event Before we were not triggering a resize event in this case so everything went fine After we are triggering a resize event which stops the initial animation resulting in no more animation Steps to Reproduce for bugs This can be seen in the same jsfiddle than my other bug Open See that there is no animation at first load Change Chartjs version from master to latest and click Run See that there is an animation Environment Chartjs version master Browser name and version Chromium Expected Behavior When updating chart data updated line should be correctly filled with background color Current Behavior Sometimes portions of the line are not filled and remains white It happens in master but does not happen Steps to Reproduce for bugs Go to At first run filling is OK Click Update chart button until the issue happens Screenshot Environment Chartjs version master Browser name and version Chromium Feature Proposal If I set minBarLength and I have a bar chart with data the first bar will be displayed as a very short bar img width altScreenshot at src If however my data is the first bar is invisible img width altScreenshot at src Feature Use Case This would be great for bar charts that may display only data thats Hey there If you need help or tech support then this is not the place to ask Please post a question to or head over to our Slack workspace at You maximize your chances of having your question answered if you follow StackOverflows guidelines If your question was not answered on StackOverflow that does not mean you should post it here If you do it will be immediately closed Chartjs users vastly outnumber our small number of volunteer maintainers and we try to help as many users as we can but we may not get to every question Chartjs is a community project You can contribute towards the goal of helping every user by asking good questions answering questions on StackOverflow or Slack creating an issue or pull request for the documentation or otherwise contributing to the project Hi i would like to reopen the issue thats going on in this thread i found out that these warning pops out every milisec when i use the below plugins warnings poping out time scale timeformat is deprecated Please use timeparser instead img width alt be f ea a ebb f src since it pops out in high rate the memory will be decreased leading huge lag plugins that makes warning chartjs chartjs financial plugin chartjs streaming plugin I have made a quick sample html here please kindly confirm DOCTYPE HTML html head meta charsetutf meta nameviewport contentwidthdevicewidth initialscale maximumscale userscalableno head script src script src script src script src head body div canvas idmyChartcanvas div body script var past tDatenow o h l c var past tDatenow o h l c consolelogpast var ask Mathrandom setIntervalfunction annotationx Datenow annotationy return annotationx return annotationy function onRefreshchart var t Datenow var data chartdatadatasets data var last t t if data length data pushpast data pushpast last data data length if t lastt var c lastc last t t o c h c l c c c data pushlast lastc Mathrandom lasth Mathmaxlasth lastc lastl Mathminlastl lastc var config type candlestick data datasets data fractionalDigitsCount options title display true text Financial chart sample legend display false scales xAxes type realtime realtime duration refresh delay onRefresh onRefresh tooltips position nearest intersect false animation duration windowonload function var ctx documentgetElementByIdmyChartgetContext d windowmyChart new Chartctx config script This should hopefully allow users to import just the scales that they need and allow the others to be treeshaken out We will need to do one of two things to really make this work Create a controller registration service similar to the scale registration service instead of having users add to Chartcontrollers as suggested in the docs Or stop using strings to specify chart and scale types and use the object types instead as suggested in This would be more type safe and work better with tools like eslint Typescript etc Eg right now if you have a typo like you want to use the yime scale instead of time then you wont find out until runtime But if instead you passed in YimeScale then that should be able to be caught at build time These arent necessarily mutually exclusive and we could possibly support them both but I personally dont have time to do both and I think it would be potentially confusing to users to support multiple ways of creating charts have to document everything twice all the stackoverflow answers and docs look different etc etimberg kurkle do you have a preference on approach here This is the last one created with new Chart in tests that was not cleaned up after Hoping that removing the trash from documentbody would fix the interaction tests that occasionally fail Move the Chartplatform to live as an instance on the chart instead and add ways to override the current platform This is necessary for adding tests that use the basic platform which will be needed to test Chartjs in a web worker Closes Closes master pr 