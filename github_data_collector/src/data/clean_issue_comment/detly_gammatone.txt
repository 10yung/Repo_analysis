 By doing so you obtain always a window length two times bigger If I interpret the code right the center frequencies are calculated in function rbspace as follows divide frequency range from cutoff to fs into N frequency band number parts separate points and start point are center frequencies of N frequency bands In this way the actual upper boundary of frequency range that filter bank can cover is lower than fs especially when N is small Hi there I was glad to find this port Not sure to what extent youre intending to fix issues in this repo but fmax is in the documentation but missing from gtgram Might also rename cutoff in centrefreqs to fmin for consistency fix TypeError slice indices must be integers or None or have an index method Hi Is there a way to reconstruct the time domain signal from the gammatonegram representation Thanks Fixed the super calls to be Python compatible instead of just Python compatible Fixes I cloned the gammatone repo and tried python m gammatone a FurElisewav d Im getting TypeError super takes at least argument given error Below is the stacktrace File C Python Lib runpypy line in runmoduleasmain main fname loader pkgname File C Python Lib runpypy line in runcode exec code in runglobals File G Experiments Godrej gammatonemaster gammatonemaster gammatone mainpy line in module main File gammatone plotpy line in main return renderaudiofromfileargssoundfile argsduration argsfunction File gammatone plotpy line in renderaudiofromfile twin thop channels fmin File gammatone plotpy line in gtgramplot formatter ERBFormatterfmin fs unitHz places File gammatone plotpy line in init superinitargs kwargs TypeError super takes at least argument given While testing this for a real signal I have noticed that the Python implementation of fftgtgram results have less frames than the MATLAB implementation A test script as well as mat files containing the input audio and output from MATLAB can be found here 