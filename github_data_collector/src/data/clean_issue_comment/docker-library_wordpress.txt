Our Requirement We want to dockerize the existing wordpress appllication with external MySQL DB for that Instead of configuring DB details through UI I directly added wpconfigphp file under varwwwhtml and refreshed the page Instead of returning wpadmin panel it open a window saying wpconfigphp already exists Ive attached the screenshot clicking the blue link returns the panel as expected In case of continous deployment this will not be acceptable for users of website Is there a better way to integrate this config file make it seamless for the continuous deployment Please suggest img width altScreenshot at PM src When doing an AB Request stress test i notice by default on docker with raspberry it only uses the st core primarily Across the docker swarm I think i need to add mpm event to the apache config inside the wordpress docker image Uploading D D C D E D jpeg It seems we should be able to mount themes and plugins and uploads separately but for some reason it appears that when I remove and recreate wordpress using dockercompose wpcontent is always owned by root wordpress dependson db image wordpresslatest containername wordpress restart always volumes wordpressthemesvarwwwhtmlwpcontentthemesrw wordpresspluginsvarwwwhtmlwpcontentpluginsrw wordpressuploadsiniusrlocaletcphpconfduploadsini environment WORDPRESSDBHOST db WORDPRESSDBUSER xxx WORDPRESSDBPASSWORD xxx WORDPRESSDBNAME xxx VIRTUALHOST xxx rwrr wwwdata wwwdata K Nov wptrackbackphp rwrr wwwdata wwwdata K Nov wpmailphp rwrr wwwdata wwwdata K Nov wploadphp rwrr wwwdata wwwdata Nov wpblogheaderphp rwrr wwwdata wwwdata Nov indexphp rwrr wwwdata wwwdata K Aug xmlrpcphp rwrr wwwdata wwwdata K Jan licensetxt rwrr wwwdata wwwdata K Jan wpcronphp rwrr wwwdata wwwdata K Jan wpactivatephp rwrr wwwdata wwwdata K Jan wplinksopmlphp rwrr wwwdata wwwdata K Jan wpsignupphp rwrr wwwdata wwwdata K Jan wpcommentspostphp rwrr wwwdata wwwdata K Mar wpsettingsphp rwrr wwwdata wwwdata K Apr readmehtml rwrr wwwdata wwwdata K Jun wploginphp drwxrxrx wwwdata wwwdata K Sep wpadmin drwxrxrx wwwdata wwwdata K Sep wpincludes drwxrxrx root root K Sep drwxrxrx root root K Sep wpcontent rwrr wwwdata wwwdata Sep htaccess rwrr wwwdata wwwdata K Sep wpconfigsamplephp rwrr wwwdata wwwdata K Sep wpconfigphp drwxrwxrwx wwwdata wwwdata K Sep Remove pathdevnull so if the current directory is a wordpress directory it will load the plugins and correctly prefix wp when needed The second if is changed to elif because the conditions are exclusive and if the first test matched the second doesnt need to run For a while now WPCLI has become the official way to manage WordPress from scripts command line But if you glance through dockerentrypointsh the current way of installing WordPress and hacking wpconfigphp with sed and awk is not pretty and errorprone compared to a bunch of WPCLI commands like wp core download wp config set wp core install WPCLI doesnt take too much space and its become essential I propose to include WPCLI in all official WordPress images deprecate the standalone WPCLI image refactor dockerentrypointsh using WPCLI It will show the community the relevant way of managing WordPress from the command line and will make it easier to actually use the image later on It will also solve So that wpcontent is mountable and even moutable readonly wpconfigphp is mountable It would be very useful to have the option to define your own custom directory structure Example varwwwhtml admin wpadmin wpcontent wpincludes etc app plugins themes indexphp indexphp wpconfigphp htaccess Inside wpconfigphp if definedWPSITEURL defineWPSITEURL SERVER SERVERNAME admin if definedWPHOME defineWPHOME SERVER SERVERNAME if definedWPCONTENTDIR defineWPCONTENTDIR dirnameFILE app if definedWPCONTENTURL defineWPCONTENTURL SERVER SERVERNAME app Inside indexphp root Loads the WordPress Environment and Template require dirname FILE adminwpblogheaderphp Reference Related to This is preventing the creation of images that can do things like running an instance of nginx alongside phpfpm controlled by some process manager You kind of need to be able to change the CMD for that to work smoothly but because of the current behavior you lose all the valuable work thats done inside of dockerentrypointsh which kinda seems like the whole point of these images Im curious what the use case is for calling dockerentrypointsh without phpfpm which literally does nothing And how that use case is so valuable that it is worth blocking the extension of this image If it was really important that the contents of dockerentrypointsh where not executed ENTRYPOINT could just be changed to something else Ive seen maintainers dismiss multiple requests for nginx images on the premise that it is against the seperated services design pattern but I dont see a clean way for people to make their own images with nginx with the way it is right now tianon In reference to An empty GlusterFS volume will usually have the following default directory trashcan T WordPress not found in varwwwhtml copying now T WARNING varwwwhtml is not empty press CtrlC now if this is an error T ls A T trashcan T sleep T Complete WordPress has been successfully copied to varwwwhtml How would you feel about the following tweak being submitted as a PR that updates all dockerentrypointsh files shell if ls A trashcan then This way if the ls A returns just one result and tests inequality against trashcan it can skip the second penalty for truly empty GlusterFS volumes As it currently stands anything in Wordpress that needs to send email is broken The wpmail function that is used for sending out email by default is a thin wrapper over PHPs mail function which defaults to calling usrsbinsendmail t i cf There are phpini settings for SMTP but they are only used on Windows For my own work based on this image Ive been installing ssmtp and configuring it to use an external relay host for SMTP but thats clearly not a turnkey solution for everyone It also looks like there are many Wordpress plugins that provide SMTP support but I dont think that installing any of them by default in this image seems reasonable Perhaps all of this should just be documented but I wanted to get it on your radar 