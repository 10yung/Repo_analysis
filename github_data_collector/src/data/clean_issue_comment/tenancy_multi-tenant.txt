My situation Ive created a custom eCommerce app shoplocalhost uses the system db and is the admin panel to create shops shop localhost uses tenant db shop localhost uses tenant db Feature request Id like to be able to clone a shop including the current data Ideas A sloppy way I can think of is creating a dump of the current database change the database name and reimport it using DBunpreparedfilegetcontentsbackupstestsql Id like to hear suggestions that point me in a better way possibly using functions from this package When I run php artisan tenancymigrate the first website migrated successfully but the next one throws an exception ayoubstock ayoubbougsid php artisan tenancymigrate Migrating addvarianttosell Migrated addvarianttosell Migrating addvarianttosell In Connectionphp line Call to a member function prepare on null I tried to debug the internal code but without success couldnt figure out why this happening Description Hello I have a problem when creating a website indeed I get this error The command apache ctl t failed Exit Code General error Working directory varwwwhtmlblogpublic Output Action t failed The Apache error log may have more information Error Output AH Syntax error on line of etcapache sitesenableddefaultlesslconf SSLCertificateFile file etcletsencryptliveappatomsitsitefullchainpem does not exist or is empty I dont understand because defaultlesslconf is my application In addition when I type apache ctl t directly on my server I get Syntax OK Information hynmultitenant version laravel version database driver and version MySQL webserver software and version Apache php version tenancyphp config php php This file is part of the hynmultitenant package c Dani l Klabbers danielklabbersemail For the full copyright and license information please view the LICENSE file that was distributed with this source code see see use Hyn Tenancy Database Connection return Random key used for tenant database user password key envTENANCYKEY envAPPKEY models Specify different models to be used for the global system database connection These are also used in their relationships Models used have to implement their respective contracts and either extend the SystemModel or use the trait UsesSystemConnection Must implement Hyn Tenancy Contracts Hostname hostname App Hostnameclass Must implement Hyn Tenancy Contracts Website website App Websiteclass The package middleware Removing a middleware here will disable it You can of course extendreplace them or add your own middleware The eager identification middleware Hyn Tenancy Middleware EagerIdentificationclass The hostname actions middleware redirects https maintenance Hyn Tenancy Middleware HostnameActionsclass website Each website has a short random hash that identifies this entity to the application By default this id is randomized and fully autogenerated In case you want to force your own logic for when you need to have a better overview of the complete tenant folder structure disable this and implement your own id generation logic disablerandomid false The random Id generator is responsible for creating the hash as mentioned above You can override what generator to use by modifying this value in the configuration warn This wont work if disablerandomid is true randomidgenerator Hyn Tenancy Generators Uuid ShaGeneratorclass Enable this flag in case youre using a driver that does not support database username or database name with a length of more than characters This should be enabled for MySQL but not for MariaDB and PostgreSQL uuidlimitlengthto envLIMITUUIDLENGTH true Specify the disk you configured in the filesystemsphp file where to store the tenant specific files including media packages routes and other files for this particular website info If not set will revert to the default filesystem info If set to false will disable all tenant specific filesystem auto magic like the config vendor overrides disk public Automatically generate a tenant directory based on the random id of the website Uses the above disk to store files to override systemwide files info set to false to disable autocreatetenantdirectory true Automatically rename the tenant directory when the random id of the website changes This should not be too common but in case it happens we automatically want to move files accordingly info set to false to disable autorenametenantdirectory true Automatically deletes the tenant specific directory and all files contained within see info set to true to enable autodeletetenantdirectory false Time to cache websites in minutes Set to false to disable cache hostname If you want the multi tenant application to fall back to a default hostnamewebsite in case the requested hostname was not found in the database complete in detail the default hostname warn this must be a FQDN these have no protocol or path default envTENANCYDEFAULTHOSTNAME The package is able to identify the requested hostname by itself disable to get full control and responsibility over hostname identification The hostname identification is needed to set a specific website as currently active see srcJobsHostnameIdentificationphp autoidentification envTENANCYAUTOHOSTNAMEIDENTIFICATION true In case you want to have the tenancy environment set up early enable this flag This will run the tenant identification inside a middleware This will eager load tenancy A good use case is when you have set tenant as the default database connection earlyidentification envTENANCYEARLYIDENTIFICATION true Abort application execution in case no hostname was identified This will throw a not found in case the tenant hostname was not resolved abortwithoutidentifiedhostname envTENANCYABORTWITHOUTHOSTNAME false Time to cache hostnames in minutes Set to false to disable cache Automatically update the appurl configured inside Laravel to match the tenant FQDN whenever a hostnametenant was identified This will resolve issues with password reset mails etc using the correct domain updateappurl false db The default connection to use this overrules the Laravel databasedefault configuration setting In Laravel this is normally configured to mysql You can set a environment variable to override the default database connection to for instance the tenant connection tenant default envTENANCYDEFAULTCONNECTION Used to give names to the system and tenant database connections By default we configure system and tenant The tenant connection is set up automatically by this package see srcDatabaseConnectionphp var systemconnectionname The database connection name to use for the globalsystem database var tenantconnectionname The database connection name to use for the tenant database systemconnectionname envTENANCYSYSTEMCONNECTIONNAME ConnectionDEFAULTSYSTEMNAME tenantconnectionname envTENANCYTENANTCONNECTIONNAME ConnectionDEFAULTTENANTNAME The tenant division mode specifies to what database websites will be connecting The default setup is to use a new database per tenant If using PostgreSQL a new schema per tenant in the same database can be setup by optionally setting division mode to schema In case you prefer to use the same database with a table prefix set the mode to prefix To implement a custom division mode set this to bypass see srcDatabaseConnectionphp tenantdivisionmode envTENANCYDATABASEDIVISIONMODE database The database password generator takes care of creating a valid hashed string used for tenants to connect to the specific database Do note that this will only work in division modes that set up a connection to a separate database passwordgenerator Hyn Tenancy Generators Database DefaultPasswordGeneratorclass The tenant migrations to be run during creation of a tenant Specify a directory to run the migrations from If specified these migrations will be executed whenever a new tenant is created info set to false to disable auto migrating warn this has to be an absolute path feel free to use helper methods like basepath or databasepath to set this up tenantmigrationspath databasepathmigrationstenant The default Seeder class used on newly created databases and while running artisan commands that fire seeding info requires tenantmigrationspath in order to seed newly created websites info seeds stored in databaseseedstenants need to be configured in your composerjson classmap warn specify a valid fully qualified class name tenantseedclass TenantDatabaseSeederclass Automatically generate a tenant database based on the random id of the website info set to false to disable autocreatetenantdatabase true Automatically generate the user needed to access the database info Useful in case you use root or another predefined user to access the tenant database info Only creates in case tenant databases are set to be created info set to false to disable autocreatetenantdatabaseuser true Set of database privileges to give to the tenant database user info Useful in case your database restricts the privileges you can set for example AWS RDS info These privileges are only used in case tenant database users are set to be created info null by default means ALL PRIVILEGES Override with a list of privileges as a string eg SELECT UPDATE tenantdatabaseuserprivileges null Automatically rename the tenant database when the random id of the website changes This should not be too common but in case it happens we automatically want to move databases accordingly info set to false to disable autorenametenantdatabase true Automatically deletes the tenant specific database and all data contained within info set to true to enable autodeletetenantdatabase envTENANCYDATABASEAUTODELETE false Automatically delete the user needed to access the tenant database info Set to false to disable info Only deletes in case tenant database is set to be deleted autodeletetenantdatabaseuser envTENANCYDATABASEAUTODELETEUSER false Define a list of classes that you wish to force onto the tenant or system connection The connection will be forced when the Model has booted info Useful for overriding the connection of third party packages forcetenantconnectionofmodels App Userclass forcesystemconnectionofmodels App Websiteclass App Hostnameclass App Userclass Global tenant specific routes Making it easier to distinguish between landing and tenant routing info only works with tenancyhostnameautoidentification or identification happening before the application is booted eg inside middleware or the register method of service providers routes Routes file to load whenever a tenant was identified info Set to false or null to disable path basepathroutestenantsphp Set to true to flush all global routes before setting the routes from the tenantsphp routes file replaceglobal false Folders configuration specific per tenant The following section relates to configuration to files inside the tenancyuuid tenant directory folders config Merge configuration files from the config directory inside the tenant directory with the global configuration files enabled true List of configuration files to ignore preventing override of crucial application configurations blacklist database tenancy webserver routes Allows adding and overriding URL routes inside the tenant directory enabled true Prefix all tenant routes prefix null trans Allows reading translation files from a trans directory inside the tenant directory enabled true Will override the global translations with the tenant translations This is done by overriding the laravel default translator with the new path overrideglobal true In case you disabled global override specify a namespace here to load the tenant translation files with namespace tenant vendor Allows using a custom vendor composer driven folder inside the tenant directory enabled true media Mounts the assets directory with static files for public use enabled true views Enables reading views from tenant directories enabled true Specify a namespace to use with which to load the views eg setting tenant will allow you to use tenantsomebladephp info set to null to add to the global namespace namespace null If namespace is set to null thus using the global namespace make it override the global views Disable by setting to false overrideglobal true webserverphp config php php This file is part of the hynmultitenant package c Dani l Klabbers danielklabbersemail For the full copyright and license information please view the LICENSE file that was distributed with this source code see see return Apache is one of the most widely adopted webserver packages available see see apache Whether the integration with Apache is currently active enabled true Define the ports of your Apache service ports HTTP nonSSL port default http HTTPS SSL port default https The generator taking care of hooking into the Apache services and files generator Hyn Tenancy Generators Webserver Vhost ApacheGeneratorclass The view that holds the vhost configuration template view tenancygeneratorswebserverapachevhost Specify the disk you configured in the filesystemsphp file where to store the tenant vhost configuration files info If not set will revert to the default filesystem disk null paths Location where vhost configuration files can be found vhostfiles etcapache sitesenabled Actions to run to work with the Apache service actions Action that asserts Apache is installed exists etcinitdapache Action to run to test the apache configuration set to a boolean to force the response of the test command info true succeeds false fails testconfig apache ctl t Action to run to reload the apache service info set to null to disable reloading reload apache ctl graceful Nginx webserver support see nginx Whether the integration with nginx is currently active enabled false The php sock to be used phpsock unixvarrunphpphp fpmsock Define the ports of your nginx service ports HTTP nonSSL port default http HTTPS SSL port default https The generator taking care of hooking into the nginx services and files generator Hyn Tenancy Generators Webserver Vhost NginxGeneratorclass The view that holds the vhost configuration template view tenancygeneratorswebservernginxvhost Specify the disk you configured in the filesystemsphp file where to store the tenant vhost configuration files info If not set will revert to the default filesystem disk null paths Location where vhost configuration files can be found vhostfiles etcnginxsitesenabled Actions to run to work with the Nginx service actions Action that asserts nginx is installed exists etcinitdnginx Action to run to test the nginx configuration info set to a boolean to force the response of the test command true succeeds false fails testconfig etcinitdnginx configtest Action to run to reload the nginx service info set to null to disable reloading reload etcinitdnginx reload Error log text The command apache ctl t failed Exit Code General error Working directory varwwwhtmlblogpublic Output Action t failed The Apache error log may have more information Error Output AH Syntax error on line of etcapache sitesenableddefaultlesslconf SSLCertificateFile file etcletsencryptliveappatomsitsitefullchainpem does not exist or is empty Description Hi Im getting this error after installing and adding tenants Database tenant not configured Tried it both ways generating tenants automatically and adding a new tenant by hand I created a system DB with two tables hostnames websites I have already an active CRM running and trying to add this module afterwards I have two tenants in the websites table How does this module determine to check for the database tenant I think it should search for a database with my unique uuid name bdb d caa b b ac d d The one that is created by the system user earlyidentification is running and does work I think the only issue I have is that the right database is not getting selected Actual behavior My website is showing I can post a login but getting this error Base table or view not found Table tenancyusers doesnt exist SQL select from users where email memenl limit So its looking for a tenancy db that doesnt exists The one that exists is bdb d caa b b ac d d Expected behavior Showing login screen Information hynmultitenant version laravel version database driver and version webserver software and version php version tenancyphp config php php This file is part of the hynmultitenant package c Dani l Klabbers danielklabbersemail For the full copyright and license information please view the LICENSE file that was distributed with this source code see see use Hyn Tenancy Database Connection return Random key used for tenant database user password key envTENANCYKEY envAPPKEY models Specify different models to be used for the global system database connection These are also used in their relationships Models used have to implement their respective contracts and either extend the SystemModel or use the trait UsesSystemConnection Must implement Hyn Tenancy Contracts Hostname hostname Hyn Tenancy Models Hostnameclass Must implement Hyn Tenancy Contracts Website website Hyn Tenancy Models Websiteclass The package middleware Removing a middleware here will disable it You can of course extendreplace them or add your own middleware The eager identification middleware Hyn Tenancy Middleware EagerIdentificationclass The hostname actions middleware redirects https maintenance Hyn Tenancy Middleware HostnameActionsclass website Each website has a short random hash that identifies this entity to the application By default this id is randomized and fully autogenerated In case you want to force your own logic for when you need to have a better overview of the complete tenant folder structure disable this and implement your own id generation logic disablerandomid false The random Id generator is responsible for creating the hash as mentioned above You can override what generator to use by modifying this value in the configuration warn This wont work if disablerandomid is true randomidgenerator Hyn Tenancy Generators Uuid ShaGeneratorclass Enable this flag in case youre using a driver that does not support database username or database name with a length of more than characters This should be enabled for MySQL but not for MariaDB and PostgreSQL uuidlimitlengthto envLIMITUUIDLENGTH true Specify the disk you configured in the filesystemsphp file where to store the tenant specific files including media packages routes and other files for this particular website info If not set will revert to the default filesystem info If set to false will disable all tenant specific filesystem auto magic like the config vendor overrides disk null Automatically generate a tenant directory based on the random id of the website Uses the above disk to store files to override systemwide files info set to false to disable autocreatetenantdirectory true Automatically rename the tenant directory when the random id of the website changes This should not be too common but in case it happens we automatically want to move files accordingly info set to false to disable autorenametenantdirectory true Automatically deletes the tenant specific directory and all files contained within see info set to true to enable autodeletetenantdirectory false Time to cache websites in minutes Set to false to disable cache false hostname If you want the multi tenant application to fall back to a default hostnamewebsite in case the requested hostname was not found in the database complete in detail the default hostname warn this must be a FQDN these have no protocol or path default envTENANCYDEFAULTHOSTNAME The package is able to identify the requested hostname by itself disable to get full control and responsibility over hostname identification The hostname identification is needed to set a specific website as currently active see srcJobsHostnameIdentificationphp autoidentification envTENANCYAUTOHOSTNAMEIDENTIFICATION true In case you want to have the tenancy environment set up early enable this flag This will run the tenant identification inside a middleware This will eager load tenancy A good use case is when you have set tenant as the default database connection earlyidentification envTENANCYEARLYIDENTIFICATION true Abort application execution in case no hostname was identified This will throw a not found in case the tenant hostname was not resolved abortwithoutidentifiedhostname envTENANCYABORTWITHOUTHOSTNAME true Time to cache hostnames in minutes Set to false to disable cache false Automatically update the appurl configured inside Laravel to match the tenant FQDN whenever a hostnametenant was identified This will resolve issues with password reset mails etc using the correct domain updateappurl true db The default connection to use this overrules the Laravel databasedefault configuration setting In Laravel this is normally configured to mysql You can set a environment variable to override the default database connection to for instance the tenant connection tenant default system Used to give names to the system and tenant database connections By default we configure system and tenant The tenant connection is set up automatically by this package see srcDatabaseConnectionphp var systemconnectionname The database connection name to use for the globalsystem database var tenantconnectionname The database connection name to use for the tenant database systemconnectionname envTENANCYSYSTEMCONNECTIONNAME ConnectionDEFAULTSYSTEMNAME tenantconnectionname envTENANCYTENANTCONNECTIONNAME ConnectionDEFAULTTENANTNAME The tenant division mode specifies to what database websites will be connecting The default setup is to use a new database per tenant If using PostgreSQL a new schema per tenant in the same database can be setup by optionally setting division mode to schema In case you prefer to use the same database with a table prefix set the mode to prefix To implement a custom division mode set this to bypass see srcDatabaseConnectionphp tenantdivisionmode envTENANCYDATABASEDIVISIONMODE database The database password generator takes care of creating a valid hashed string used for tenants to connect to the specific database Do note that this will only work in division modes that set up a connection to a separate database passwordgenerator Hyn Tenancy Generators Database DefaultPasswordGeneratorclass The tenant migrations to be run during creation of a tenant Specify a directory to run the migrations from If specified these migrations will be executed whenever a new tenant is created info set to false to disable auto migrating warn this has to be an absolute path feel free to use helper methods like basepath or databasepath to set this up tenantmigrationspath databasepathmigrationstenant The default Seeder class used on newly created databases and while running artisan commands that fire seeding info requires tenantmigrationspath in order to seed newly created websites info seeds stored in databaseseedstenants need to be configured in your composerjson classmap warn specify a valid fully qualified class name tenantseedclass false eg an admin seeder under appSeedersAdminSeederphp tenantseedclass App Seeders AdminSeederclass Automatically generate a tenant database based on the random id of the website info set to false to disable autocreatetenantdatabase true Automatically generate the user needed to access the database info Useful in case you use root or another predefined user to access the tenant database info Only creates in case tenant databases are set to be created info set to false to disable autocreatetenantdatabaseuser true Set of database privileges to give to the tenant database user info Useful in case your database restricts the privileges you can set for example AWS RDS info These privileges are only used in case tenant database users are set to be created info null by default means ALL PRIVILEGES Override with a list of privileges as a string eg SELECT UPDATE tenantdatabaseuserprivileges null Automatically rename the tenant database when the random id of the website changes This should not be too common but in case it happens we automatically want to move databases accordingly info set to false to disable autorenametenantdatabase true Automatically deletes the tenant specific database and all data contained within info set to true to enable autodeletetenantdatabase envTENANCYDATABASEAUTODELETE false Automatically delete the user needed to access the tenant database info Set to false to disable info Only deletes in case tenant database is set to be deleted autodeletetenantdatabaseuser envTENANCYDATABASEAUTODELETEUSER false Define a list of classes that you wish to force onto the tenant or system connection The connection will be forced when the Model has booted info Useful for overriding the connection of third party packages forcetenantconnectionofmodels App Userclass forcesystemconnectionofmodels App Userclass Global tenant specific routes Making it easier to distinguish between landing and tenant routing info only works with tenancyhostnameautoidentification or identification happening before the application is booted eg inside middleware or the register method of service providers routes Routes file to load whenever a tenant was identified info Set to false or null to disable path basepathroutestenantsphp Set to true to flush all global routes before setting the routes from the tenantsphp routes file replaceglobal false Folders configuration specific per tenant The following section relates to configuration to files inside the tenancyuuid tenant directory folders config Merge configuration files from the config directory inside the tenant directory with the global configuration files enabled true List of configuration files to ignore preventing override of crucial application configurations blacklist database tenancy webserver routes Allows adding and overriding URL routes inside the tenant directory enabled true Prefix all tenant routes prefix null trans Allows reading translation files from a trans directory inside the tenant directory enabled true Will override the global translations with the tenant translations This is done by overriding the laravel default translator with the new path overrideglobal true In case you disabled global override specify a namespace here to load the tenant translation files with namespace tenant vendor Allows using a custom vendor composer driven folder inside the tenant directory enabled true media Mounts the assets directory with static files for public use enabled true views Enables reading views from tenant directories enabled true Specify a namespace to use with which to load the views eg setting tenant will allow you to use tenantsomebladephp info set to null to add to the global namespace namespace null If namespace is set to null thus using the global namespace make it override the global views Disable by setting to false overrideglobal true webserverphp config php php This file is part of the hynmultitenant package c Dani l Klabbers danielklabbersemail For the full copyright and license information please view the LICENSE file that was distributed with this source code see see return Apache is one of the most widely adopted webserver packages available see see apache Whether the integration with Apache is currently active enabled false Define the ports of your Apache service ports HTTP nonSSL port default http HTTPS SSL port default https The generator taking care of hooking into the Apache services and files generator Hyn Tenancy Generators Webserver Vhost ApacheGeneratorclass The view that holds the vhost configuration template view tenancygeneratorswebserverapachevhost Specify the disk you configured in the filesystemsphp file where to store the tenant vhost configuration files info If not set will revert to the default filesystem disk null paths Location where vhost configuration files can be found vhostfiles etcapache sitesenabled x Actions to run to work with the Apache service actions Action that asserts Apache is installed exists etcinitdapache Action to run to test the apache configuration set to a boolean to force the response of the test command info true succeeds false fails testconfig apache ctl t Action to run to reload the apache service info set to null to disable reloading reload apache ctl graceful Nginx webserver support see nginx Whether the integration with nginx is currently active enabled false The php sock to be used phpsock unixvarrunphpphp fpmsock Define the ports of your nginx service ports HTTP nonSSL port default http HTTPS SSL port default https The generator taking care of hooking into the nginx services and files generator Hyn Tenancy Generators Webserver Vhost NginxGeneratorclass The view that holds the vhost configuration template view tenancygeneratorswebservernginxvhost Specify the disk you configured in the filesystemsphp file where to store the tenant vhost configuration files info If not set will revert to the default filesystem disk null paths Location where vhost configuration files can be found vhostfiles etcnginxsitesenabled Actions to run to work with the Nginx service actions Action that asserts nginx is installed exists etcinitdnginx Action to run to test the nginx configuration info set to a boolean to force the response of the test command true succeeds false fails testconfig etcinitdnginx configtest Action to run to reload the nginx service info set to null to disable reloading reload etcinitdnginx reload Error log text Hi Description In an installation with Spatie Permissions package getting this error in this scenery No tenants configured Database default connection set to system System connection defined in configdatabasephp Tenant connection not defined in configdatabasephp Fallback hostname configured as mpevendastest with force https true Role Permission and User models setted up as documented in Tenancy Removing for test trait UsesTenantConnection from User model doesnt take any effect Error occurs when accessing main site Appreciate any help Thanks Actual behavior Getting the error Expected behavior Get the fallbackmain tenant showed Information hynmultitenant version laravel version database driver and version MySQL webserver software and version Nginx under Valet php version tenancyphp config php php This file is part of the hynmultitenant package c Dani l Klabbers danielklabbersemail For the full copyright and license information please view the LICENSE file that was distributed with this source code see see use Hyn Tenancy Database Connection return Random key used for tenant database user password key envTENANCYKEY envAPPKEY models Specify different models to be used for the global system database connection These are also used in their relationships Models used have to implement their respective contracts and either extend the SystemModel or use the trait UsesSystemConnection Must implement Hyn Tenancy Contracts Hostname hostname Hyn Tenancy Models Hostnameclass Must implement Hyn Tenancy Contracts Website website Hyn Tenancy Models Websiteclass The package middleware Removing a middleware here will disable it You can of course extendreplace them or add your own middleware The eager identification middleware Hyn Tenancy Middleware EagerIdentificationclass The hostname actions middleware redirects https maintenance Hyn Tenancy Middleware HostnameActionsclass website Each website has a short random hash that identifies this entity to the application By default this id is randomized and fully autogenerated In case you want to force your own logic for when you need to have a better overview of the complete tenant folder structure disable this and implement your own id generation logic disablerandomid false The random Id generator is responsible for creating the hash as mentioned above You can override what generator to use by modifying this value in the configuration warn This wont work if disablerandomid is true randomidgenerator Hyn Tenancy Generators Uuid ShaGeneratorclass Enable this flag in case youre using a driver that does not support database username or database name with a length of more than characters This should be enabled for MySQL but not for MariaDB and PostgreSQL uuidlimitlengthto envLIMITUUIDLENGTH false Specify the disk you configured in the filesystemsphp file where to store the tenant specific files including media packages routes and other files for this particular website info If not set will revert to the default filesystem info If set to false will disable all tenant specific filesystem auto magic like the config vendor overrides disk s Automatically generate a tenant directory based on the random id of the website Uses the above disk to store files to override systemwide files info set to false to disable autocreatetenantdirectory true Automatically rename the tenant directory when the random id of the website changes This should not be too common but in case it happens we automatically want to move files accordingly info set to false to disable autorenametenantdirectory true Automatically deletes the tenant specific directory and all files contained within see info set to true to enable autodeletetenantdirectory false Time to cache websites in minutes Set to false to disable cache hostname If you want the multi tenant application to fall back to a default hostnamewebsite in case the requested hostname was not found in the database complete in detail the default hostname warn this must be a FQDN these have no protocol or path default envTENANCYDEFAULTHOSTNAME The package is able to identify the requested hostname by itself disable to get full control and responsibility over hostname identification The hostname identification is needed to set a specific website as currently active see srcJobsHostnameIdentificationphp autoidentification envTENANCYAUTOHOSTNAMEIDENTIFICATION true In case you want to have the tenancy environment set up early enable this flag This will run the tenant identification inside a middleware This will eager load tenancy A good use case is when you have set tenant as the default database connection earlyidentification envTENANCYEARLYIDENTIFICATION true Abort application execution in case no hostname was identified This will throw a not found in case the tenant hostname was not resolved abortwithoutidentifiedhostname envTENANCYABORTWITHOUTHOSTNAME false Time to cache hostnames in minutes Set to false to disable cache Automatically update the appurl configured inside Laravel to match the tenant FQDN whenever a hostnametenant was identified This will resolve issues with password reset mails etc using the correct domain updateappurl true db The default connection to use this overrules the Laravel databasedefault configuration setting In Laravel this is normally configured to mysql You can set a environment variable to override the default database connection to for instance the tenant connection tenant default envTENANCYDEFAULTCONNECTION Used to give names to the system and tenant database connections By default we configure system and tenant The tenant connection is set up automatically by this package see srcDatabaseConnectionphp var systemconnectionname The database connection name to use for the globalsystem database var tenantconnectionname The database connection name to use for the tenant database systemconnectionname envTENANCYSYSTEMCONNECTIONNAME ConnectionDEFAULTSYSTEMNAME tenantconnectionname envTENANCYTENANTCONNECTIONNAME ConnectionDEFAULTTENANTNAME The tenant division mode specifies to what database websites will be connecting The default setup is to use a new database per tenant If using PostgreSQL a new schema per tenant in the same database can be setup by optionally setting division mode to schema In case you prefer to use the same database with a table prefix set the mode to prefix To implement a custom division mode set this to bypass see srcDatabaseConnectionphp tenantdivisionmode envTENANCYDATABASEDIVISIONMODE database The database password generator takes care of creating a valid hashed string used for tenants to connect to the specific database Do note that this will only work in division modes that set up a connection to a separate database passwordgenerator Hyn Tenancy Generators Database DefaultPasswordGeneratorclass The tenant migrations to be run during creation of a tenant Specify a directory to run the migrations from If specified these migrations will be executed whenever a new tenant is created info set to false to disable auto migrating warn this has to be an absolute path feel free to use helper methods like basepath or databasepath to set this up tenantmigrationspath databasepathmigrationstenant The default Seeder class used on newly created databases and while running artisan commands that fire seeding info requires tenantmigrationspath in order to seed newly created websites info seeds stored in databaseseedstenants need to be configured in your composerjson classmap warn specify a valid fully qualified class name tenantseedclass false eg an admin seeder under appSeedersAdminSeederphp tenantseedclass App Seeders AdminSeederclass Automatically generate a tenant database based on the random id of the website info set to false to disable autocreatetenantdatabase true Automatically generate the user needed to access the database info Useful in case you use root or another predefined user to access the tenant database info Only creates in case tenant databases are set to be created info set to false to disable autocreatetenantdatabaseuser true Set of database privileges to give to the tenant database user info Useful in case your database restricts the privileges you can set for example AWS RDS info These privileges are only used in case tenant database users are set to be created info null by default means ALL PRIVILEGES Override with a list of privileges as a string eg SELECT UPDATE tenantdatabaseuserprivileges null Automatically rename the tenant database when the random id of the website changes This should not be too common but in case it happens we automatically want to move databases accordingly info set to false to disable autorenametenantdatabase true Automatically deletes the tenant specific database and all data contained within info set to true to enable autodeletetenantdatabase envTENANCYDATABASEAUTODELETE false Automatically delete the user needed to access the tenant database info Set to false to disable info Only deletes in case tenant database is set to be deleted autodeletetenantdatabaseuser envTENANCYDATABASEAUTODELETEUSER false Define a list of classes that you wish to force onto the tenant or system connection The connection will be forced when the Model has booted info Useful for overriding the connection of third party packages forcetenantconnectionofmodels App Userclass forcesystemconnectionofmodels App Userclass Global tenant specific routes Making it easier to distinguish between landing and tenant routing info only works with tenancyhostnameautoidentification or identification happening before the application is booted eg inside middleware or the register method of service providers routes Routes file to load whenever a tenant was identified info Set to false or null to disable path basepathroutestenantsphp Set to true to flush all global routes before setting the routes from the tenantsphp routes file replaceglobal false Folders configuration specific per tenant The following section relates to configuration to files inside the tenancyuuid tenant directory folders config Merge configuration files from the config directory inside the tenant directory with the global configuration files enabled true List of configuration files to ignore preventing override of crucial application configurations blacklist database tenancy webserver routes Allows adding and overriding URL routes inside the tenant directory enabled true Prefix all tenant routes prefix null trans Allows reading translation files from a trans directory inside the tenant directory enabled true Will override the global translations with the tenant translations This is done by overriding the laravel default translator with the new path overrideglobal true In case you disabled global override specify a namespace here to load the tenant translation files with namespace tenant vendor Allows using a custom vendor composer driven folder inside the tenant directory enabled true media Mounts the assets directory with static files for public use enabled true views Enables reading views from tenant directories enabled true Specify a namespace to use with which to load the views eg setting tenant will allow you to use tenantsomebladephp info set to null to add to the global namespace namespace null If namespace is set to null thus using the global namespace make it override the global views Disable by setting to false overrideglobal true webserverphp config php php This file is part of the hynmultitenant package c Dani l Klabbers danielklabbersemail For the full copyright and license information please view the LICENSE file that was distributed with this source code see see return Apache is one of the most widely adopted webserver packages available see see apache Whether the integration with Apache is currently active enabled false Define the ports of your Apache service ports HTTP nonSSL port default http HTTPS SSL port default https The generator taking care of hooking into the Apache services and files generator Hyn Tenancy Generators Webserver Vhost ApacheGeneratorclass The view that holds the vhost configuration template view tenancygeneratorswebserverapachevhost Specify the disk you configured in the filesystemsphp file where to store the tenant vhost configuration files info If not set will revert to the default filesystem disk null paths Location where vhost configuration files can be found vhostfiles etcapache sitesenabled Actions to run to work with the Apache service actions Action that asserts Apache is installed exists etcinitdapache Action to run to test the apache configuration set to a boolean to force the response of the test command info true succeeds false fails testconfig apache ctl t Action to run to reload the apache service info set to null to disable reloading reload apache ctl graceful Nginx webserver support see nginx Whether the integration with nginx is currently active enabled true The php sock to be used phpsock unixvarrunphpphp fpmsock Define the ports of your nginx service ports HTTP nonSSL port default http HTTPS SSL port default https The generator taking care of hooking into the nginx services and files generator Hyn Tenancy Generators Webserver Vhost NginxGeneratorclass The view that holds the vhost configuration template view tenancygeneratorswebservernginxvhost Specify the disk you configured in the filesystemsphp file where to store the tenant vhost configuration files info If not set will revert to the default filesystem disk s paths Location where vhost configuration files can be found vhostfiles etcnginxsitesenabled Actions to run to work with the Nginx service actions Action that asserts nginx is installed exists etcinitdnginx Action to run to test the nginx configuration info set to a boolean to force the response of the test command true succeeds false fails testconfig etcinitdnginx configtest Action to run to reload the nginx service info set to null to disable reloading reload etcinitdnginx reload Error log text localERROR Database tenant not configured exception object InvalidArgumentExceptioncode Database tenant not configured at UsersjsilvaprojectssourcesmpevendasvendorlaravelframeworksrcIlluminateDatabaseDatabaseManagerphp stacktrace UsersjsilvaprojectssourcesmpevendasvendorlaravelframeworksrcIlluminateDatabaseDatabaseManagerphp Illuminate Database DatabaseManagerconfigurationtenant UsersjsilvaprojectssourcesmpevendasvendorlaravelframeworksrcIlluminateDatabaseDatabaseManagerphp Illuminate Database DatabaseManagermakeConnectiontenant UsersjsilvaprojectssourcesmpevendasvendorlaravelframeworksrcIlluminateDatabaseEloquentModelphp Illuminate Database DatabaseManagerconnectiontenant UsersjsilvaprojectssourcesmpevendasvendorlaravelframeworksrcIlluminateDatabaseEloquentModelphp Illuminate Database Eloquent ModelresolveConnectiontenant UsersjsilvaprojectssourcesmpevendasvendorlaravelframeworksrcIlluminateDatabaseEloquentModelphp Illuminate Database Eloquent ModelgetConnection UsersjsilvaprojectssourcesmpevendasvendorlaravelframeworksrcIlluminateDatabaseEloquentModelphp Illuminate Database Eloquent ModelnewBaseQueryBuilder UsersjsilvaprojectssourcesmpevendasvendorlaravelframeworksrcIlluminateDatabaseEloquentModelphp Illuminate Database Eloquent ModelnewModelQuery UsersjsilvaprojectssourcesmpevendasvendorlaravelframeworksrcIlluminateDatabaseEloquentModelphp Illuminate Database Eloquent ModelnewQueryWithoutScopes UsersjsilvaprojectssourcesmpevendasvendorlaravelframeworksrcIlluminateAuthEloquentUserProviderphp Illuminate Database Eloquent ModelnewQuery UsersjsilvaprojectssourcesmpevendasvendorlaravelframeworksrcIlluminateAuthEloquentUserProviderphp Illuminate Auth EloquentUserProvidernewModelQueryObjectApp Models User UsersjsilvaprojectssourcesmpevendasvendorlaravelframeworksrcIlluminateAuthSessionGuardphp Illuminate Auth EloquentUserProviderretrieveById UsersjsilvaprojectssourcesmpevendasvendorlaravelframeworksrcIlluminateAuthAuthManagerphp Illuminate Auth SessionGuarduser internal function Illuminate Auth AuthManagerIlluminate Auth closureNULL UsersjsilvaprojectssourcesmpevendasvendorlaravelframeworksrcIlluminateAuthAuthServiceProviderphp calluserfuncObjectClosure NULL internal function Illuminate Auth AuthServiceProviderIlluminate Auth closureNULL UsersjsilvaprojectssourcesmpevendasvendorlaravelframeworksrcIlluminateHttpRequestphp calluserfuncObjectClosure NULL UsersjsilvaprojectssourcesmpevendasvendorlaravelpassportsrcHttpMiddlewareCreateFreshApiTokenphp Illuminate Http RequestuserNULL UsersjsilvaprojectssourcesmpevendasvendorlaravelpassportsrcHttpMiddlewareCreateFreshApiTokenphp Laravel Passport Http Middleware CreateFreshApiTokenrequestShouldReceiveFreshTokenObjectIlluminate Http Request UsersjsilvaprojectssourcesmpevendasvendorlaravelpassportsrcHttpMiddlewareCreateFreshApiTokenphp Laravel Passport Http Middleware CreateFreshApiTokenshouldReceiveFreshTokenObjectIlluminate Http Request ObjectIlluminate Http RedirectResponse UsersjsilvaprojectssourcesmpevendasvendorlaravelframeworksrcIlluminatePipelinePipelinephp Laravel Passport Http Middleware CreateFreshApiTokenhandleObjectIlluminate Http Request ObjectClosure UsersjsilvaprojectssourcesmpevendasvendorlaravelframeworksrcIlluminateRoutingMiddlewareSubstituteBindingsphp Illuminate Pipeline PipelineIlluminate Pipeline closureObjectIlluminate Http Request UsersjsilvaprojectssourcesmpevendasvendorlaravelframeworksrcIlluminatePipelinePipelinephp Illuminate Routing Middleware SubstituteBindingshandleObjectIlluminate Http Request ObjectClosure UsersjsilvaprojectssourcesmpevendasvendorlaravelframeworksrcIlluminateFoundationHttpMiddlewareVerifyCsrfTokenphp Illuminate Pipeline PipelineIlluminate Pipeline closureObjectIlluminate Http Request UsersjsilvaprojectssourcesmpevendasvendorlaravelframeworksrcIlluminatePipelinePipelinephp Illuminate Foundation Http Middleware VerifyCsrfTokenhandleObjectIlluminate Http Request ObjectClosure UsersjsilvaprojectssourcesmpevendasvendorlaravelframeworksrcIlluminateViewMiddlewareShareErrorsFromSessionphp Illuminate Pipeline PipelineIlluminate Pipeline closureObjectIlluminate Http Request UsersjsilvaprojectssourcesmpevendasvendorlaravelframeworksrcIlluminatePipelinePipelinephp Illuminate View Middleware ShareErrorsFromSessionhandleObjectIlluminate Http Request ObjectClosure UsersjsilvaprojectssourcesmpevendasvendorlaravelframeworksrcIlluminateSessionMiddlewareStartSessionphp Illuminate Pipeline PipelineIlluminate Pipeline closureObjectIlluminate Http Request UsersjsilvaprojectssourcesmpevendasvendorlaravelframeworksrcIlluminatePipelinePipelinephp Illuminate Session Middleware StartSessionhandleObjectIlluminate Http Request ObjectClosure UsersjsilvaprojectssourcesmpevendasvendorlaravelframeworksrcIlluminateCookieMiddlewareAddQueuedCookiesToResponsephp Illuminate Pipeline PipelineIlluminate Pipeline closureObjectIlluminate Http Request UsersjsilvaprojectssourcesmpevendasvendorlaravelframeworksrcIlluminatePipelinePipelinephp Illuminate Cookie Middleware AddQueuedCookiesToResponsehandleObjectIlluminate Http Request ObjectClosure UsersjsilvaprojectssourcesmpevendasvendorlaravelframeworksrcIlluminateCookieMiddlewareEncryptCookiesphp Illuminate Pipeline PipelineIlluminate Pipeline closureObjectIlluminate Http Request UsersjsilvaprojectssourcesmpevendasvendorlaravelframeworksrcIlluminatePipelinePipelinephp Illuminate Cookie Middleware EncryptCookieshandleObjectIlluminate Http Request ObjectClosure UsersjsilvaprojectssourcesmpevendasvendorlaravelframeworksrcIlluminatePipelinePipelinephp Illuminate Pipeline PipelineIlluminate Pipeline closureObjectIlluminate Http Request UsersjsilvaprojectssourcesmpevendasvendorlaravelframeworksrcIlluminateRoutingRouterphp Illuminate Pipeline PipelinethenObjectClosure UsersjsilvaprojectssourcesmpevendasvendorlaravelframeworksrcIlluminateRoutingRouterphp Illuminate Routing RouterrunRouteWithinStackObjectIlluminate Routing Route ObjectIlluminate Http Request UsersjsilvaprojectssourcesmpevendasvendorlaravelframeworksrcIlluminateRoutingRouterphp Illuminate Routing RouterrunRouteObjectIlluminate Http Request ObjectIlluminate Routing Route UsersjsilvaprojectssourcesmpevendasvendorlaravelframeworksrcIlluminateRoutingRouterphp Illuminate Routing RouterdispatchToRouteObjectIlluminate Http Request UsersjsilvaprojectssourcesmpevendasvendorlaravelframeworksrcIlluminateFoundationHttpKernelphp Illuminate Routing RouterdispatchObjectIlluminate Http Request UsersjsilvaprojectssourcesmpevendasvendorlaravelframeworksrcIlluminatePipelinePipelinephp Illuminate Foundation Http KernelIlluminate Foundation Http closureObjectIlluminate Http Request UsersjsilvaprojectssourcesmpevendasvendorspatielaravelcookieconsentsrcCookieConsentMiddlewarephp Illuminate Pipeline PipelineIlluminate Pipeline closureObjectIlluminate Http Request UsersjsilvaprojectssourcesmpevendasvendorlaravelframeworksrcIlluminatePipelinePipelinephp Spatie CookieConsent CookieConsentMiddlewarehandleObjectIlluminate Http Request ObjectClosure UsersjsilvaprojectssourcesmpevendasvendorlaravelframeworksrcIlluminateFoundationHttpMiddlewareTransformsRequestphp Illuminate Pipeline PipelineIlluminate Pipeline closureObjectIlluminate Http Request UsersjsilvaprojectssourcesmpevendasvendorlaravelframeworksrcIlluminatePipelinePipelinephp Illuminate Foundation Http Middleware TransformsRequesthandleObjectIlluminate Http Request ObjectClosure UsersjsilvaprojectssourcesmpevendasvendorlaravelframeworksrcIlluminateFoundationHttpMiddlewareTransformsRequestphp Illuminate Pipeline PipelineIlluminate Pipeline closureObjectIlluminate Http Request UsersjsilvaprojectssourcesmpevendasvendorlaravelframeworksrcIlluminatePipelinePipelinephp Illuminate Foundation Http Middleware TransformsRequesthandleObjectIlluminate Http Request ObjectClosure UsersjsilvaprojectssourcesmpevendasvendorlaravelframeworksrcIlluminateFoundationHttpMiddlewareValidatePostSizephp Illuminate Pipeline PipelineIlluminate Pipeline closureObjectIlluminate Http Request UsersjsilvaprojectssourcesmpevendasvendorlaravelframeworksrcIlluminatePipelinePipelinephp Illuminate Foundation Http Middleware ValidatePostSizehandleObjectIlluminate Http Request ObjectClosure UsersjsilvaprojectssourcesmpevendasvendorlaravelframeworksrcIlluminateFoundationHttpMiddlewareCheckForMaintenanceModephp Illuminate Pipeline PipelineIlluminate Pipeline closureObjectIlluminate Http Request UsersjsilvaprojectssourcesmpevendasvendorlaravelframeworksrcIlluminatePipelinePipelinephp Illuminate Foundation Http Middleware CheckForMaintenanceModehandleObjectIlluminate Http Request ObjectClosure UsersjsilvaprojectssourcesmpevendasvendorfideloperproxysrcTrustProxiesphp Illuminate Pipeline PipelineIlluminate Pipeline closureObjectIlluminate Http Request UsersjsilvaprojectssourcesmpevendasvendorlaravelframeworksrcIlluminatePipelinePipelinephp Fideloper Proxy TrustProxieshandleObjectIlluminate Http Request ObjectClosure UsersjsilvaprojectssourcesmpevendasvendorhynmultitenantsrcMiddlewareEagerIdentificationphp Illuminate Pipeline PipelineIlluminate Pipeline closureObjectIlluminate Http Request UsersjsilvaprojectssourcesmpevendasvendorlaravelframeworksrcIlluminatePipelinePipelinephp Hyn Tenancy Middleware EagerIdentificationhandleObjectIlluminate Http Request ObjectClosure UsersjsilvaprojectssourcesmpevendasvendorhynmultitenantsrcMiddlewareHostnameActionsphp Illuminate Pipeline PipelineIlluminate Pipeline closureObjectIlluminate Http Request UsersjsilvaprojectssourcesmpevendasvendorlaravelframeworksrcIlluminatePipelinePipelinephp Hyn Tenancy Middleware HostnameActionshandleObjectIlluminate Http Request ObjectClosure UsersjsilvaprojectssourcesmpevendasvendorlaravelframeworksrcIlluminatePipelinePipelinephp Illuminate Pipeline PipelineIlluminate Pipeline closureObjectIlluminate Http Request UsersjsilvaprojectssourcesmpevendasvendorlaravelframeworksrcIlluminateFoundationHttpKernelphp Illuminate Pipeline PipelinethenObjectClosure UsersjsilvaprojectssourcesmpevendasvendorlaravelframeworksrcIlluminateFoundationHttpKernelphp Illuminate Foundation Http KernelsendRequestThroughRouterObjectIlluminate Http Request Usersjsilvaprojectssourcesmpevendaspublicindexphp Illuminate Foundation Http KernelhandleObjectIlluminate Http Request Usersjsilvacomposervendorlaravelvaletserverphp requireUsersjsilvap main Feel free to open an issue for questions and feature requests To make reporting issues easier attempt to complete the below information Delete anything that doesnt apply to your request Description of your feature If we use managed databases from DigitalOcean they support only cachingsha password as auth plugin for mysql We should add in config the option of what auth plugin tenancy should use Proposed behavior Hyn Tenancy Generators Webserver Database Drivers MariaDB return connectionstatementCREATE USER IF NOT EXISTS config username config host IDENTIFIED WITH config authmethod BY config password where authmethod should be mysqlnativepassword or cachingsha password Current behavior Hyn Tenancy Generators Webserver Database Drivers MariaDB return connectionstatementCREATE USER IF NOT EXISTS config username config host IDENTIFIED BY config password Information hynmultitenant version laravel version Hi I have a weird issue when using this package with spatielaraveleventsourcing When I am running tests with PHPUnit everything fails after the first test Illuminate Contracts Container BindingResolutionException Unresolvable dependency resolving Parameter required string storedEventRepository in class Spatie EventSourcing EventSubscriber Looks like the singleton binding for the EventSubscriber isnt usedran after the first test is run The class doesnt receive the required storedEventRepository parameter when created which should contain the value in the config file configeventsourcingstoredeventrepository If I hardcode a fallback inside the class the tests run but this isnt a viable option obviously php namespace Spatie EventSourcing final class EventSubscriber var Spatie EventSourcing StoredEventRepository private repository public function constructstring storedEventRepository if storedEventRepository storedEventRepository configeventsourcingstoredeventrepository thisrepository appstoredEventRepository Other methods My test isnt related to any functionnality provided by either of the two packages I know this is most likely not an issue with this package in particular nor with spatielaraveleventsourcing but maybe a functionality that is used by both packages and therefore creates a conflict Hoping you have an idea of where this could come from because Im shooting dd in the dark right now Happy holidays Create New Website website new Website appWebsiteRepositoryclasscreatewebsite associate the website with a hostname hostname new Hostname hostnamefqdn fqdn appHostnameRepositoryclassattachhostname website make hostname current appEnvironmentclasstenantwebsite process new Processsudo dockercompose run php php artisan passportinstall process new Processsudo dockercompose run php php artisan dbseed processrun process run tenant new Tenantwebsite hostname This artisan commands not working How can I exec artisan comand on my aws I dont install php on instance so Artisancallpassportinstall Artisancalldbseed Will be not working Description This is not an issue This is a workaround tutorial I found to get tenants identified with php artisan tenancyrun schedulerun What schedule run does it basically loops through every scheduled commands and creates a process for each one Example First lets create our ExampleCommand shell php artisan makecommand ExampleCommand We are going to make this command Tenant Aware Lets change the signature to accept a websiteid option php protected signature examplecommand websiteid We will take tenant awereness example from Tenant Aware Tinker Command The ExampleCommand should look like this detailssummaryappConsoleCommandsExampleCommandphpsummary p php namespace App Console Commands use Illuminate Console Command use Hyn Tenancy Contracts Repositories WebsiteRepository use Hyn Tenancy Database Connection use Illuminate Database Eloquent ModelNotFoundException use Symfony Component Console Exception RuntimeException class ExampleCommand extends Command The name and signature of the console command var string protected signature examplecommand websiteid The console command description var string protected description Example Command Tenant Aware var Connection private connection var WebsiteRepository private websites Create a new command instance return void public function construct parentconstruct thiswebsites appWebsiteRepositoryclass thisconnection appConnectionclass Execute the console command return mixed public function handle websiteid thisoptionwebsiteid try website thiswebsitesquerywhereid websiteidfirstOrFail thisconnectionsetwebsite thisinfoRunning Command on websiteid websiteid thiscommandHandle thisconnectionpurge catch ModelNotFoundException e throw new RuntimeExceptionsprintfThe tenancy websiteidd does not exist websiteid Execute the console command return mixed public function commandHandle You are now Tenant Aware p details Then we need to register our schedule into appConsoleKernelphp php protected function scheduleSchedule schedule schedule commandExampleCommandclass daily Finally we need to inject the websiteid option to the commands options We will use the before helper to modify the called command php schedule commandExampleCommandclass daily beforefunction Schedule schedule tenant app Hyn Tenancy Environmentclasstenant event scheduleevents eventcommand sprintf websiteidd tenantid There we go Feel free to try it and tell me if it works or you have issues with it Information hynmultitenant version laravel version php version Warning This has been tested with only one scheduled task Behaviour with multiple tasks is unknown Feel free to try it Description Setting up a tenant APP with fallback domain My regular routes Routegroup middleware web domain configtenancyhostnamedefault function Routegetteste TestControllerindex Routegetteste TestControllerindex My tenant routes Routegroup middleware web function RoutegettenantTest TenantsTestControllerindex Relevant config Eager and auto identification is on Global override is false it could be true as i am using global routes for specific domain Actual behavior Getting on tenant tenantTest route I went to page and ddapp Hyn Tenancy Environmentclasstenant Returned my actual tenant I was about to go crazy Changed configs reinstalled the package etc etc etc php artisan routeclear did the trick All routes are working Expected behavior My main domain routes are HUGE really and they probably should be cached But if I cache them I can no longer access tenant routes because they are inserted onthefly and not if routesAreCached Maybe one way of dealing with this is checking if if thisapproutesAreCached if they are tenancy should deserialize them add tenant routes and reserialize Dont even know if that is possible just wondering Best Pedro