This PR contains the following updates Package Type Update Change typesnode devDependencies patch Renovate configuration date Schedule At any time no schedule defined verticaltrafficlight Automerge Disabled by config Please merge this manually once you are satisfied recycle Rebasing Whenever PR becomes conflicted or if you modify the PR title to begin with rebase nobell Ignore Close this PR and you wont be reminded about this update again rebasecheck If you want to rebaseretry this PR check this box This PR has been generated by WhiteSource Renovate View repository job log here using latest version throwing errs ExperimentalWarning The fspromises API is experimental please change it using utilpromisify on fs dont use experimentals for production thanks Running imageSize on the attached png throws an out of bounds exeption while using Linux on Windows The package works fine for other png and jpg files The package works fine parsing the same file on macOS Error internalbufferjs throw new ERRBUFFEROUTOFBOUNDS RangeError ERRBUFFEROUTOFBOUNDS Attempt to access memory outside buffer bounds at boundsError internalbufferjs at BufferreadUInt LE internalbufferjs at Objectvalidate redactednodemodulesimagesizedisttypescurjs at finder redactednodemodulesimagesizedistdetectorjs at Arrayfind anonymous at Objectdetector redactednodemodulesimagesizedistdetectorjs at lookup redactednodemodulesimagesizedistindexjs at imageSize redactednodemodulesimagesizedistindexjs at redacted redactedmakeManifestjs code ERRBUFFEROUTOFBOUNDS Image file handseticon x System OS Ubuntu bionic Ubuntu on Windows Kernel x Linux Microsoft CPU Intel Core i U x Ghz imagesize version npm According to the example its ok to download only a few KB in order to get image sizedimensions But according to this stackoverflow answer in order to get JPEG widthheight You have to scan through the JPEG file parsing each segment until you find the segment with the information in it that you want This is described in the wikipedia article Am I missing something or your library has a workaround Since the module exports named functions instead of a toplevel function In the README the old state is still documented Not to be merged yet There is too much code duplication If WSQ is just a JPEG variant it should be handled such Do you know if this repo support HEIC photo file This constant doesnt include jpeg x and doesnt want to work with a buffer from a downloaded jpeg image Gives the error unsupported file type undefined file undefined The buffer was a buffer and not undefined I also see it is missing some other file types Edit I thought all JPEG types was supported Maybe this isnt a bug I read in your code that the file has to be xff if not the table was corrupt But I dont think that is true The picture I am trying to read is fine Currently only functions and some consts are exported in type definition But all types that are used in this functions as parameters or results should be exported too As far as I can see ISizeCalculationResult and CallbackFn are missing but there might be others When first reading the doc I did js import imageSize from imagesize But my IDE complained that there isnt any default export In fact in indexjs there is a line that makes it work js moduleexports exports imageSize backwards compatibility But its a compatibility code and its not referenced in the typings so the doc should be updated accordingly like this js import imageSize from imagesize Or with require js const imageSize requireimagesize 