Bumps handlebars from to details summaryChangelogsummary Sourced from handlebarss changelog v November th Bugfixes fix add noprototypebuiltins eslintrule and fix all occurences f f d fix add more properties required to be enumerable Chores Build fix use instead of c b f add chai and dirtychai and sinon for cleaner testassertions and spies deprecate old assertionmethods e e ba dad a Security The properties proto defineGetter defineSetter and lookupGetter have been added to the list of properties that must be enumerable If a property by that name is found and not enumerable on its parent it will silently evaluate to undefined This is done in both the compiled template and the lookuphelper This will prevent new RemoteCodeExecution exploits that have been published recently Compatibility notes Due to the securityfixes The semantics of the templates using proto defineGetter defineSetter and lookupGetter in the respect that those expression now return undefined rather than their actual value from the proto The semantics have not changed in cases where the properties are enumerable as in js proto some string The change may be breaking in that respect but we still only increase the patchversion because the incompatible usecases are not intended undocumented and far less important than fixing RemoteCodeExecution exploits on existing systems Commits v November th Bugfixes fix use Stringfield in lookup when checking for constructor d test add fluent API for testing Handlebars c ac c Compatibility notes no incompatibility are to be expected trtable truncated details details summaryCommitssummary c c b v c d Update release notes f f d fix add noprototypebuiltins eslintrule and fix all occurences fix add more properties required to be enumerable ba testchore add chaiexpect and sinon to runtimeenvironment dad test add sinon as global variable to eslint in the specs a test add sinonjs for spies deprecate current assertions e e chore add chai and dirtychai for better test assertions c b f fix use instead of de d v Additional commits viewable in compare view details br Dependabot compatibility score Dependabot will resolve any conflicts with this PR as long as you dont alter it yourself You can also trigger a rebase manually by commenting dependabot rebase dependabotautomergestart dependabotautomergeend details summaryDependabot commands and optionssummary br You can trigger Dependabot actions by commenting on this PR dependabot rebase will rebase this PR dependabot recreate will recreate this PR overwriting any edits that have been made to it dependabot merge will merge this PR after your CI passes on it dependabot squash and merge will squash and merge this PR after your CI passes on it dependabot cancel merge will cancel a previously requested merge and block automerging dependabot reopen will reopen this PR if it is closed dependabot ignore this patchminormajor version will close this PR and stop Dependabot creating any more for this minormajor version unless you reopen the PR or upgrade to it yourself dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency unless you reopen the PR or upgrade to it yourself dependabot use these labels will set the current labels as the default for future PRs for this repo and language dependabot use these reviewers will set the current reviewers as the default for future PRs for this repo and language dependabot use these assignees will set the current assignees as the default for future PRs for this repo and language dependabot use this milestone will set the current milestone as the default for future PRs for this repo and language You can disable automated security fix PRs for this repo from the Security Alerts page details The READMEmd contains a lot of advanced config examples for functional tasks We should probably add some basic ones as well js eslint fail when eslint finds issues issues js eslint fix git add automatically fix eslint issues and add to commit js prettier listdifferent fail when prettier finds issues js prettier write git add automatically fix style issues using prettier and add to commit Fixes Description Im trying to change the behaviour of one of our postinstall scripts when the commit is done through a merge rather than a typical standalone commit This doesnt seem possible at the moment because lintstaged beta removes the MERGEHEAD file and doesnt seem to restore it Steps to reproduce git merge abort during the commit git merge continue Environment lintstaged beta Ive been testing beta and noticed that if there is a watcher process that modifies files is being used lintstaged will fail ungracefully M srccomponentsprimitivesTextTextjs MM srcexercises PrimitivesTextjs M srcexercises PrimitivesfinalTextjs MM srcexercises PrimitivestemplatesTextjs componentdrivendevelopment on rerere is v via v gc husky precommit node v Preparing Running tasks Applying modifications Unstaged changes could not be restored due to a merge conflict Cleaning up Unstaged changes could not be restored due to a merge conflict husky precommit hook failed add noverify to bypass componentdrivendevelopment on rerere is v via v took s g st rerere originrerere ahead M srccomponentsprimitivesTextTextjs M srcexercises PrimitivesTextjs UU srcexercises PrimitivesfinalTextjs M srcexercises PrimitivestemplatesTextjs Notice how after the fail my index looks very differently having staged files that werent staged before the commit attempt Ultimately the new index is exactly the changes I didnt want to commit in the first attempt Also the error message isnt helpful in resolving the situation Steps to repro Checkout Run npm run generatewatch Edit srcexercises PrimitivestemplatesTextjs and see how srcexercises PrimitivesfinalTextjs and being updated Add those changes to the index by git add Try to commit I realize this is might look like a rare scenario at first but I believe most of issues with lintstaged staging algorithm came from webpack or other tools users running it in watch mode in parallel Description If this is a feature request explain why it should be added Specific usecases are best If this is a bug please check that it can be reproduced in the latest version of lintstaged Furthermore please provide as much relevant info as possible Including what is the expected and actual behavior Tslint detection fails by throwing error log when I commit code The error log is messy and unrecognizable Steps to reproduce git commit Tell us how to reproduce this issue Debug Logs Run lintstaged in debug mode using the command line flag debug You can either modify your precommit scriptcommand to include the flag or invoke lintstaged manuallynodemodulesbinlintstaged debug Read more about debug mode here NOTE This requires lintstaged version details summaryexpand to viewsummary COPY THE DEBUG LOGS HERE husky precommit node v Stashing changes started Stashing changes skipped No partially staged files found Running tasks started Running tasks for ts started Running tasks for jsonbabelrceslintrcprettierrcstylelintrc started Running tasks for cssless started Running tasks for ymlmd started Running tasks for jsonbabelrceslintrcprettierrcstylelintrc skipped No staged files match jsonbabelrceslintrcprettierrcstylelintrc Running tasks for cssless skipped No staged files match cssless Running tasks for ymlmd skipped No staged files match ymlmd tslint started tslint failed Running tasks for ts failed Running tasks failed tslint found some errors Please fix them and try committing again tslint husky precommit hook failed add noverify to bypass details Environment Tell us about your development environment OS ex Windows Ubuntu macOS High Sierra Nodejs ex v lintstaged ex v packagejson lintstaged ts tslint prettier singlequote write git add jsonbabelrceslintrcprettierrcstylelintrc prettier parser json write git add cssless stylelint syntax less fix prettier singlequote write git add ymlmd prettier singlequote write git add This PR adds a bail option that makes lintstaged exit with status when tasks modify any files In this case the modifications are staged left as unstaged and instead of restoring the original state lintstaged simply leaves modifications asis and also keeps the original backup stash instead of dropping it This is useful in situation where manual review of tasks modifications is needed The backup stash can be used to easily return to the original state before committing Fixes Description Were trying to use beta in our project This version have some fixes which I was looking for Thas why we are using this version But we have concern about the further stable releases Could you please let us know what is the release cycle After further stable release will this version be unavailable from npm repository When is the nearest stable release coming Thanks After advanced options got deprecated how to properly implement concurrent false in x version This closes replaces Since GitHub Actions is now out of beta Ive redone my branch squashed my commits and this is ready for further discussion I figured a pull request would be appropriate so that changes can be reviewed For the moment windows builds are not passing With node x this appears to be a dependency version issue although it is odd that this does not affect macos or ubuntu using node x With newer versions of node x and x there seem to be other issues that may need actual fixes to the code CodeCov is setup in githubworkflowsnodejsyml however to run correctly it will need CODECOVTOKEN per the documentation githubworkflowsnpmpublishyml is setup to only run when a release is tagged in GitHub The idea is tagging a release in GitHub would trigger this workflow to publish the package to npm I do not know the specifics of yarn and the semanticrelease package being used but I imagine this may need to be changed to something else In some cases which I havent figured out yet when running hooks it creates a rej file And Im sure its something with the library because before implementing it never created these files package husky hooks precommit ng lint fix lintstaged my config tsjsjsoncssscss nodemodulesbinprettier tsjsjsoncssscss prettierignorenamedirectory write git add 