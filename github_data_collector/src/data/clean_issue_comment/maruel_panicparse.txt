This utility has worked great for us so far but we had an incident in which panicparse not only failed to format and color the error it also completely swallowed it ie with panicparse we saw this error http panic serving string length out of range We had to reproduce without panicparse to see the actual stack trace http panic serving string length out of range goroutine running nethttpconnservefunc xc usrlocalCellargo libexecsrcnethttpservergo x panic x f xc usrlocalCellargo libexecsrcruntimepanicgo x b apollomicrointernaltradeconvConvAction xc f a x x xc e Userstshabtaygitfleetsrcapollomicrointernaltradeconvtradeconvgo x d apollomicrosvcreconinternaldatesAPIDatesGet xc d d x b xc c xc x cf x x b Userstshabtaygitfleetsrcapollomicrosvcreconinternaldatesapigo xc apollomicrosvcreconinternalrestapiHandlerAPIfunc xc x cf x a xc a Userstshabtaygitfleetsrcapollomicrosvcreconinternalrestapiconfigurerecongo x apollomicrosvcreconinternalrestapioperationsdatesDatesGetHandlerFuncHandle xc xc x cf x f xc a Userstshabtaygitfleetsrcapollomicrosvcreconinternalrestapioperationsdatesdatesgetgo x a apollomicrosvcreconinternalrestapioperationsdatesDatesGetServeHTTP xc a c x e xc c c xc Userstshabtaygitfleetsrcapollomicrosvcreconinternalrestapioperationsdatesdatesgetgo x e apollovendorgithubcomgoopenapiruntimemiddlewareNewOperationExecutorfunc x e xc c c xc Userstshabtaygitfleetsrcapollovendorgithubcomgoopenapiruntimemiddlewareoperationgo x nethttpHandlerFuncServeHTTP xc d x e xc c c xc usrlocalCellargo libexecsrcnethttpservergo x apollovendorgithubcomgoopenapiruntimemiddlewareNewRouterfunc x e xc c c xc Userstshabtaygitfleetsrcapollovendorgithubcomgoopenapiruntimemiddlewareroutergo x nethttpHandlerFuncServeHTTP xc a e x e xc c c xc usrlocalCellargo libexecsrcnethttpservergo x apollovendorgithubcomgoopenapiruntimemiddlewareRedocfunc x e xc c c xc Userstshabtaygitfleetsrcapollovendorgithubcomgoopenapiruntimemiddlewareredocgo x a nethttpHandlerFuncServeHTTP xc a x e xc c c xc usrlocalCellargo libexecsrcnethttpservergo x apollovendorgithubcomgoopenapiruntimemiddlewareSpecfunc x e xc c c xc Userstshabtaygitfleetsrcapollovendorgithubcomgoopenapiruntimemiddlewarespecgo x ad nethttpHandlerFuncServeHTTP xc a x e xc c c xc usrlocalCellargo libexecsrcnethttpservergo x apollovendorgithubcomrscorsCorsHandlerfunc x e xc c c xc Userstshabtaygitfleetsrcapollovendorgithubcomrscorscorsgo x af nethttpHandlerFuncServeHTTP xc a a x e xc c c xc usrlocalCellargo libexecsrcnethttpservergo x nethttpserverHandlerServeHTTP xc x e xc c c xc usrlocalCellargo libexecsrcnethttpservergo xa nethttpconnserve xc x b xc c usrlocalCellargo libexecsrcnethttpservergo x created by nethttpServerServe usrlocalCellargo libexecsrcnethttpservergo x f Heya Thanks for good tool It would be nice to write panic in a windows system journal like this app pp eventlogapp name htmlpanichtml Any plans for subj I would create a pull request if it makes sense how to solve unfortunately myapp has stopped Hey there I know Its not in the name but It would be nice also for panicparse to do the same for any race hit Could the stdlib entries be marked visually in some way that would make it easy to clearly separate them from my code from the first glance theres usually kinda notable difference in qualitytrust level between those groups I think either different color or some marker chars at start of a line personally Im also not quite sure if I see value in marking private vs public identifiers using different color but I assume you had a need for that Hm truth said it could also be nice if rdparty libs were marked with a distinct colormarker too but then detection can be difficult here one has them in vendor other in Godeps other in everything except GOPATHmycompanycom and GOROOTsrc So maybe some kinda HOMEconfigpanicparsecolorsini with regexpcolor patterns with some option to specify complex matches like everything except this and that Poorly defined idea I know sorry It would be cool if the tool supported an output format similar to typical compilers so that it could be easily fetched into vims quickfix window for easy jumping through the lines shown in the trace For example running foobarbaztoolgo whatever FlavorText foobarbaztoolgo whatever Something foobarbazmaingo CREATED BY main When imported to vim with cex systempanicparse formatvim only foobarlog copen this should make it trivial to jump between toolgo l maingo l etc using cn and cp commands With properly configured set errorformat in vim the lines like running would still get displayed in the quickfix window clearly separating the goroutines edit the Go oracle tool has it as formatplain short flag o like in grep after it would be nice if goroutines with only occurrence were ranked higher than merged ones I think theres slightly higher probability that they may contain something distinct than the merged ones Even if not keeping some order in the traces could help grasp their nature Unless theres already some important ordering I didnt notice Also it would be nice if the sections in output could be somewhat marked then I didnt realize the sorting is done with some meaningful order ie until I browsed through the issues What I mean is for example something like SOURCE or CULPRIT running USER UNIQUE USER REPEATING STDLIB 