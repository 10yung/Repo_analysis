 The manual currently is in DOCX format But I dont have Microsoft Word and I dont want to have it Is this really the only way to access the documentation Can you please switch to a format that is not proprietary OpenDocument Format is one option odt used by eg LibreOffice and OpenOfficeorg An export to PDF would also be fine A HTML manual would be even better add make install command to CMakeListstxt rename samples as testbed put extern folder under samples for testbed samples built standalone add conditional include for mingw build under windowns in samplesmaincpp recover GetVertexCount and GetVertex functions in b polygonshapeh for compatable purpose modification tested only under Win x with MinGW x Hello how do you integrate this into the latest xcode I didnt find any related teaching others are too old to integrate can you tell me or there are other detailed documents thank you In samplesmaincpp line const char fontPath DataDroidSansttf but dataDroidSansttf case sensitivity is found instead in the same directory box d samples maincpp dataDroidSansttf After building buildsamplessamples crashes with error Assertion failed because dataDroidSansttf is missing from buildsamples directory box d build samples samples dataDroidSansttf missing samples crashes when not present not sure if this issue is present on windows please fix src CMakeListstxt line sourcegroupTREE include PREFIX include FILES BOX DHEADERFILES to sourcegroupTREE CMAKECURRENTSOURCEDIRinclude PREFIX include FILES BOX DHEADERFILES Thanks When using the b RopeJoint I need to know when I have reached its limit However when making the call b RopeJointGetLimitState I dont receive b LimitStateeatUpperLimit as I expect When doing the following change in b RopeJointInitVelocityConstraints I seem to get the behavior that I want float C mlength mmaxLength if C f to float C mlength mmaxLength if C f It would be useful for developers to have more control over the variables defined in b Settingsh in order to tailor the physics behavior for their application It would also be preferable to be able to do this without having to fork and modify Box D Example Use Case I am writing a simulator for soccerplaying robots and need collisions to be elastic even at low speeds The default value of b velocityThreshold doesnt work in this case because all collisions happening below ms will stick Therefore Id like to be able to change that value preferably without forking the Box D repository so that there are fewer things to manage in the project Proposed Solution Wrap all or most of the defined variables in b Settingsh with ifndef blocks That way developers using the library can define the variables themselves if they want to change them but behavior is otherwise unchanged See here for an example With this change I can manually define the variables with the values I want directly within my project and buildsystem Heres an example bazel rule Im using in my project with this new ifndef system cclibrary name box d srcs glob Box Dcpp hdrs glob Box Dh includes defines b maxPolygonVertices b linearSlop f b velocityThreshold f visibility visibilitypublic Hello I created my own first programm with Box d not a test of the tesbed but my gravitation is way too strong The body falls extremely fast although I use the same values as the testbed Heres my code 