When theres only a server change on srcssr directory build only the server app part as a spa developer where often dialogs etc are used for dynamic uiux elements one problem often happens is that sending a keepalived compontentto the portal after hiding the portal it is destroyed When now reopen the dialog the forms etc are unkeeped fresh this is no error or issue by quasar it is i think the nature for handling this process after some investigation i found a issue at the offical vue portal from linusBorg where someone didnt closed the portal rightly so the component was still keepalived May this issue is a way for a solution i also find a untested global keep alive where somone caches the component instances the request for this feature is to give a way for working with the really usefull vue keepalive option also inside portaled components primary qdialogs but also qtabs qsplitter etc the state of the component inside the sleepingportal should look like this inactive comp grafik that there are other ways around like status management vuex vuexcaches display hide i know but this is always a biggerworkaround and leaving the quasarway and vuerouterkeepalived routes are also working nicely with quasar but only for clearly routed routerviewpages It would a great benefit for the quasar fw if the developer has a out of the box component caching thank you for reading this experimantl idea When I makeing some text with QEditor there can be some links like a href img src It is very useful to auto truncate link paths and to excluding base path if truncate option is true a hrefsomepath img srcsomepath Feature request to make such syntax if it is possible qeditor basePath truncateLinkstrue Or maybe simpier qeditor linksTruncatePath When fast scrolling using the scrollbar with the mouse or with touch events on mobile flicking the list to the end it snaps to the second to last item instead of the last item Codepen Screencast See screencast it jumps back to item instead of Is your feature request related to a problem Please describe QTable is missing the same expand API as QTree has Describe the solution youd like Give QTable also an expand API Describe alternatives youve considered None Additional context None my use case was to allow false to be nullundefined such as in a vfor of an object array where I want itemselected without having to append a selected property to each item in advance falsevaluenull indeterminatevalue indeterminateValue is null by default so having the void comparison was redundant and caused the bug Please make sure to read the Pull Request Guidelines PULL REQUEST TEMPLATE Update to x to check a box What kind of change does this PR introduce check at least one x Bugfix Feature Documentation Code style update Refactor Buildrelated changes Other please describe Does this PR introduce a breaking change check one Yes x No If yes please describe the impact and migration path for existing applications The PR fulfills these requirements x Its submitted to the dev branch and not the master branch x When resolving a specific issue its referenced in the PRs title eg fix xxx xxx where xxx is the issue number Its been tested on a Cordova iOS Android app Its been tested on a Electron app x Any necessary documentation has been added or updated in the docs for faster update click on Suggest an edit on GitHub at bottom of page or explained in the PRs description If adding a new feature the PRs description includes x A convincing reason for adding this feature to avoid wasting your time its best to open a suggestion issue first and wait for approval before working on it Is there any plan to beautify this ugly components you can refer to as for Uploader components i think its too complex in some occasion i just want user to select a file and i will use FileReader api to read it no upload action exists This issue is only to warn wholl get my same problem in the future maybe a disclaimer could be added to the vintersection page Can be closed right away if you think its not worth a disclaimer As stated in the API regarding the handler return value Only value of interest is the Boolean false in which case observing the element stops Rephrased if you return false from the handler the observer stops Also the observer always emit one entry when first attached and you are supposed to check for entryisIntersecting Take this snippet vue img vintersectiononceentry entryisIntersecting someMethod This could seem like a clean and concise way to express when intersecting for the first time execute this method but someMethod wont actually ever be called unless the element is already into the view The registration emission of the observer will return false because of the entryisIntersecting and never emit anything else Using normal anonymous functions will work but at this point its better to just use a Vue method and reference that instead vue img vintersectiononcefunctionentry entryisIntersecting someMethod Please add Buddhist calendar Right now It have gregorian and persian QDateQuasarFramework Describe the bug When trying a custom uploader in a ts file and doing import QUploaderBase from quasar it gives this error import QUploaderBase Module nodemodulesquasardisttypes has no exported member QUploaderBasets Expected behavior QUploaderBase type should be exported by Quasar now it is only exporting QUploader Screenshots If applicable add screenshots to help explain your problem img width altimage src 