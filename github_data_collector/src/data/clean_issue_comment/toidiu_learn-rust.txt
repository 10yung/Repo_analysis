rust extern crate reqwest extern crate xml use selfxmlreaderEventReader XmlEvent use reqwestClient use reqwestResponse fn main let client Clientnew let xml String getmtastatus client passing String wont work because String doesnt implement stdioRead parsexmlxml let readable u xmlasbytes let lines parsexmlreadable for line in linesiter println line fn getmtastatusclient Client String let mut resp Response client get send unwrap let body String resptextunwrap body deriveDebug struct Line name String status String impl Line fn empty Line Line name into status into fn adt Because we are using a XML event streaming library we need to maintain state of which tag we are processing enum XmlTag TimeStamp LineName LineStatus Ignore fn parsexmlTreadable T VecLine where T stdioRead let reader EventReadernewreadable This will hold the current tag we are processing We set it to a default value or Ignore let mut xmltag XmlTag XmlTagIgnore TODO Populate the Vec by pushing templine elements into it let lines Vecnew let templine Lineempty for e in reader match e OkXmlEventStartElement name let refname str namelocalnameasref match refname line FIXME templine Lineempty templine timestamp xmltag XmlTagTimeStamp print name name xmltag XmlTagLineName status xmltag XmlTagLineStatus xmltag XmlTagIgnore OkXmlEventCharacterstxt match xmltag XmlTagTimeStamp println txt XmlTagLineName XmlTagLineStatus OkXmlEventEndElement name let refname str namelocalnameasref match refname line FIXME we only care about subway subway break Erre printlnError e break lines 