 Version v Reproduction link Steps to reproduce I want to use this plugin in my NuxtjsVuetifyJs application For this purpose I created a pluginsdatetimepickerjs file javascript import Vue from vue import DatetimePicker from vuetifydatetimepicker VueuseDatetimePicker And in nuxtconfigjs declare the plugin as recommended on the documentation export default plugins pluginsdatetimepicker What is expected I expect the application to launch without errrors What is actually happening I run yarn run dev to launch the server I do not see any error in the Terminal but when I open the broswer on I see SyntaxError Unexpected identifier Link to reproduce Github link for the bug Why this is happening I simply followed the steps mentioned on the documentation How to fix this cmtycmtypreventhook div alignrightsubemThis bug report is available on a href community a href What problem does this feature solve nextjs was playing around with it and saw some great improvements row It reduces package sizes and especially the amount of transferred data after page navigation This feature could be easily adopted to nuxt and would reduces automatically the transmitted bytes needed for a nuxt app What does the proposed changes look like See also cmtycmtypreventhook div alignrightsubemThis feature request is available on a href community a href Provide a general summary of your changes in the title above Types of changes What types of changes does your code introduce Put an x in all the boxes that apply Bug fix a nonbreaking change which fixes an issue x New feature a nonbreaking change which adds functionality Breaking change fix or feature that would cause existing functionality to change Description See original pull request first Documentation about its usage is available on This PR is not a breaking change since it activates this new fetch only when fetch is used without expecting any arguments Old fetch js export default fetchcontext old fetch logic New fetch js export default fetch New fetch access to this Resolves and Checklist Put an x in all the boxes that apply If your change requires a documentation PR please link it appropriately If youre unsure about any of these dont hesitate to ask Were here to help x My change requires a change to the documentation I have updated the documentation accordingly PR I have added tests to cover my changes if not applicable please state why All new and existing tests are passing Version v Reproduction link Steps to reproduce Im attempting to initialise some state using basic state management with a plain object the reference being shared across components I want to initialise the state on the server with some async work eg networking This causes a mismatch between client and server node trees Im not sure how to solve it or if theres a better way of doing it Ive tried it in asyncDatafetch methods as well as the created hook but both result in the same outcome I assume its because the DOM tree is being constructed concurrently to asyncDatafetch method Therefore when those promises have resolved it will result in more nodes being present which will be different to what we see on the client Check the code sandbox for reproduction Create plain object for sharing state Add the object to data function Try to render something in template using that state In asyncData or fetch methods try to initialise some state by accessing network or faking it See the console errors What is expected Id expect that the component is built on the server to match that on the client even if Im changing what the node tree might look like via changing state in asyncData or fetch methods Not sure if I should be expecting this though What is actually happening A mismatch between server and client so cant hydrate Additional comments As I said Im not sure if this would be the correct way to achieve this cmtycmtypreventhook div alignrightsubemThis bug report is available on a href community a href Version v Reproduction link Steps to reproduce I cannot paste a reproduction link cause I cannot move packagejson into another folder but I need it to show you situation You need some files in assets folder that you get in less or css files with urlassetssomefilesvg Move all files to folder src in a root of project In console move to folder src Try to run project What is expected I see all my icons What is actually happening I dont see icons that I use in backgroundimage urlassetssomefilesvg In browser I can see backgroundimage url object Object cmtycmtypreventhook div alignrightsubemThis bug report is available on a href community a href Provide a general summary of your changes in the title above Types of changes What types of changes does your code introduce Put an x in all the boxes that apply Bug fix a nonbreaking change which fixes an issue New feature a nonbreaking change which adds functionality Breaking change fix or feature that would cause existing functionality to change Description Describe your changes in detail Why is this change required What problem does it solve If it resolves an open issue please link to the issue here For example Resolves CI lint step is failing because of babelbabel and babelbabeleslint discovered by clarkdo This should be fine for now to update other deps Checklist Wait for dependency release Rebase wit hdev Update yarnlock Version v Reproduction link Steps to reproduce Clone reproduction repository install dependencies npm run build npm run start Click on Throw error button What is expected The exception should be caught by the Nuxt main error handler which displays a nice error page as it happens when running in dev mode npm run dev What is actually happening Main error handler is ignored and exception ends up logged to console cmtycmtypreventhook div alignrightsubemThis bug report is available on a href community a href This PR contains the following updates Package Type Update Change jsdom devDependencies major Release Notes details summaryjsdomjsdomsummary v Compare Source For this release wed like to welcome pmdartus to the core team Among other work hes driven the heroic effort of constructor prototype and reform in jsdom and its dependencies over the last few months to allow us to move away from shared constructors and prototypes and set the groundwork for custom elements support coming soon Breaking changes Node v is now the minimum supported version The domrunVMScript API has been replaced with the more general domgetInternalVMContext API Each jsdom Window now creates new instances of all the web platform globals That is our old shared constructor and prototypes caveat is no longer in play Each jsdom Window now exposes all JavaScriptspecdefined globals uniformly When runScripts is disabled it exposes them as aliases of the ones from the outer Nodejs environment Whereas when runScripts is enabled it exposes fresh copies of each global from the new scripting environment Previously a few typed array classes would always be aliased and with runScripts disabled the other classes would not be exposed at all Other changes Added the AbstractRange Range StaticRange Selection and windowgetSelection APIs Added working constructors for Comment Text and DocumentFragment Added valueAsDate valueAsNumber stepUp and stepDown to input elements kraynel Added windoworigin Removed documentorigin Fixed template to work correctly inside XML documents Fixed some bugs which would cause jsdom to choose the wrong character encoding because it was failing to detect meta charset or meta httpequivcharset elements Fixed inputtype to default to text connormeredith Fixed incorrect validation errors for input with fractional values for their step attribute kontomondo Fixed incorrect validation errors on readonly input elements Fixed input typeemail multiple pattern validation Fixed fileReaderreadAsDataURL to always base encode the result ytetsuro Fixed inserting img elements into documents without a browsing context to no longer crash when the canvas package is installed Fixed a memory leak when using windowsetTimeout or windowsetInterval Improved the performance of getComputedStyle eps lon details Renovate configuration date Schedule At any time no schedule defined verticaltrafficlight Automerge Disabled by config Please merge this manually once you are satisfied recycle Rebasing Whenever PR becomes conflicted or if you modify the PR title to begin with rebase nobell Ignore Close this PR and you wont be reminded about this update again rebasecheck If you want to rebaseretry this PR check this box This PR has been generated by WhiteSource Renovate View repository job log here What problem does this feature solve Automatically load pagesapivue as API routes so that Custom server becomes unnecessary Better DX you dont need to start a nodemon process for API The possibility to optimize your API routes for serverless environment What does the proposed changes look like Reference implementation cmtycmtypreventhook div alignrightsubemThis feature request is available on a href community a href What problem does this feature solve precommit hooks can come in handy while in the Dev workflow The lint script can be made to execute automatically before making a commit and staging updated files What does the proposed changes look like It depends on husky and lintstaged which should be added as devDependencies cmtycmtypreventhook div alignrightsubemThis feature request is available on a href community a href