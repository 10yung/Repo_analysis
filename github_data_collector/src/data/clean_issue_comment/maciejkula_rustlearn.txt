Please help this error error specified package rustlearn v has no binaries In the examples shown using iris dataset y is a vector of dimension which is essentially a labelencoded vector Running that on a onehot encoded vector for y is not working out for me please help on this Below is an example code use rustlearnprelude use rustlearnensemblerandomforestHyperparameters use rustlearntreesdecisiontree fn main let data Arrayfrom vec vec vec vec vec vec vec let target Arrayfrom vec vec vec vec vec vec vec let test Arrayfrom vec vec println data println target let mut treeparams decisiontreeHyperparametersnewdatacols treeparamsminsamplessplit maxfeatures let mut model Hyperparametersnewtreeparams onevsrest modelfit data targetunwrap let prediction modelpredict testunwrap print prediction The output of this code is Array rows cols order RowMajor data Array rows cols order RowMajor data Array rows cols order RowMajor data As you can see the dimension of the predicted values is only Correct me if Im wrong but it appears that for both features and classes in the fitting of decision tress rustlearn only supports arrays of f values Is there a reason for this limitation I would think that features simply need to have the Ordering trait and classes have the Eq trait It would be useful to have at least f f i i and bool I think If no feature indices are detected clasifier will panic x f b coreoptionOptionTunwraphd b ff a at checkoutsrclibcoremacrosrs x f a rustlearntreesdecisiontreeFeatureIndicesnewh ea d acd b at homericocargogitcheckoutsrustlearn ee f d e ef de srctreesdecisiontreers x f rustlearntreesdecisiontreeDecisionTree as rustlearntraitsSupervisedModel a rustlearnarraydenseArrayfithcc df c dd cc at homericocargogitcheckoutsrustlearn ee f d e ef de srctreesdecisiontreers x f adf rustlearnensemblerandomforestRandomForest as rustlearntraitsSupervisedModel a rustlearnarraydenseArrayfithba d b d aa at homericocargogitcheckoutsrustlearn ee f d e ef de srcensemblerandomforestrs According to the readme Model serialization is supported via rustcserialize This will probably change to serde once compiler plugins land in stable Serde is stable now so this should be ready to go Im getting the error Invalid labels target data is not either or which implies to me that only classification is supported when the input is a Vecf or a VecVecf one uses move the another uses reference this is not consistent This is for performance but make this clearly in docs is better rust let array Arrayfromvec let array Arrayfrom vec vec vec a TODOmd bindings to cudnn an alternative interface to cudnn that uses OpenCL or Cilk or Rusts concurrency an API for NNs la Caffe I am learning Rust I know functional programming more than OO Id love to help Also I can write some OpenCL code too 