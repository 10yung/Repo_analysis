Background I have a pull request into a repository where the npm module isnt uptodate with master and Id like to test out my branch in a module that depends on it through a bunch of different deep dependencies It seems like patchpackage would be a great solution for this Problem When I append patch to my GitHub URL it gives me a patch but when I pass it to patch p it fails because the diff between my branch and master is not the same as the diff between my branch and the latest published npm module I tried to instead use the diff between my branch and the corresponding tag but it turns out that the npm module and the Git tag arent in sync My guess is that the import a diff from a pull request isnt documented in the readme because all of the solutions are fraught with errors like the ones Ive encountered but it would be great to have a recommendation of how to import code rather than handediting files with Vim Proposal Lets document how to import an entire module After trying a bunch of different solutions for a few hours the best I can come up with is simple albeit primitive sh Delete the currently installed module rm rf nodemodulesfoo Import your code directly into nodemodules cp r srcfoo nodemodules Generate a diff for patchpackage patchpackage foo This feels wasteful since Git already provides a diff for us but since the npm registry is divorced from the Git history it seems like the only robust solution Id be very happy to hear improvements to this workflow Thanks for your work on this module I dont suppose theres a way to do this with the current mechanism of putting patchpackage in the postinstall script which doesnt run until all other packages install scripts have run Error Command failed yarn run postinstall ERROR Failed to apply patch for package bulmartl This happened because the patch file patches bulmartl patch could not be parsed If you just upgraded patchpackage you can try running cd patches bulmartl patc patch p i h npx patchpackage bulmartl cd Looks like its due to many new files generated under new directory thirdparty after I build my project I can fix it by excluding that directory yarn patchpackage reactnative exclude thirdparty Below is the error log if not exclude yarn patchpackage reactnative yarn run v UserssamuelcaiDocumentsappnodemodulesbinpatchpackage reactnative patchpackage Creating temporary folder Installing reactnative with yarn Diffing your files with clean files error Error spawnSync git ENOBUFS at ObjectspawnSync internalchildprocessjs at ObjectspawnSync childprocessjs at FunctionspawnSync as sync UserssamuelcaiDocumentsappnodemodulespatchpackagenodemodulescrossspawnindexjs at ObjectexportsspawnSafeSync UserssamuelcaiDocumentsappnodemodulespatchpackagedistspawnSafejs at git UserssamuelcaiDocumentsappnodemodulespatchpackagedistmakePatchjs at ObjectmakePatch UserssamuelcaiDocumentsappnodemodulespatchpackagedistmakePatchjs at UserssamuelcaiDocumentsappnodemodulespatchpackagedistindexjs at ArrayforEach anonymous at Objectanonymous UserssamuelcaiDocumentsappnodemodulespatchpackagedistindexjs at Modulecompile internalmodulescjsloaderjs errno ENOBUFS code ENOBUFS syscall spawnSync git path git spawnargs diff cached nocolor ignorespaceateol noextdiff status null signal SIGTERM output null Buffer d d f e f f d f c f d e f c f more bytes Buffer pid stdout Buffer d d f e f f d f c f d e f c f more bytes stderr Buffer UserssamuelcaiDocumentsappnodemodulespatchpackagedistmakePatchjs throw e error Error spawnSync git ENOBUFS at ObjectspawnSync internalchildprocessjs at ObjectspawnSync childprocessjs at FunctionspawnSync as sync UserssamuelcaiDocumentsappnodemodulespatchpackagenodemodulescrossspawnindexjs at ObjectexportsspawnSafeSync UserssamuelcaiDocumentsappnodemodulespatchpackagedistspawnSafejs at git UserssamuelcaiDocumentsappnodemodulespatchpackagedistmakePatchjs at ObjectmakePatch UserssamuelcaiDocumentsappnodemodulespatchpackagedistmakePatchjs at UserssamuelcaiDocumentsappnodemodulespatchpackagedistindexjs at ArrayforEach anonymous at Objectanonymous UserssamuelcaiDocumentsappnodemodulespatchpackagedistindexjs at Modulecompile internalmodulescjsloaderjs errno ENOBUFS code ENOBUFS syscall spawnSync git path git spawnargs diff cached nocolor ignorespaceateol noextdiff status null signal SIGTERM output null Buffer d d f e f f d f c f d e f c f more bytes Buffer pid stdout Buffer d d f e f f d f c f d e f c f more bytes stderr Buffer error Command failed with exit code info Visit for documentation about this command Hi first up thanks for this awesome idea I only found patchpackage a couple of days ago and Im already in love Simple but so useful Im looking forward to removing lots of forked dependencies from my repo in coming days Im on a Mac and when I first asked patchpackage to create a patch I got a strange error xcodeselect note no developer tools were found at ApplicationsXcodeapp requesting install Choose an option in the dialog to download the command line developer tools This is the output from usrbingit which is a small stub on Macs that asks the user to install Xcode I already have the full git suite installed and on my PATH at usrlocalbingit and I use VS Code so I dont want to install Xcode too I found that if I change this line in makePatchjs env HOME tmpReponame to env processenv HOME tmpReponame patchpackage started running the correct version of git and was able to create a patch I think the unchanged line might discard all existing environment variables in the spawned process including PATH But I dont know how to be sure because I cant spawn set its a builtin and if I spawn a subshell like bash c set it picks up the correct path from bashrc Needless to say after getting this working I used patchpackage to patch itself D If you think this is not a bug please feel free to ignore me it may just be something is weird or broken on my system Thanks again This is not really an issue but I wanted to say Thank you for this awesome idea and package This saved me a lot of time today and in past Thank you so much Beanstalk does not change into the project directory when doing an npm install The project folder gets passed as an parameter As patchpackage does lookup the packagejson in the current directory the postinstall process fails command is optelasticbeanstalknodeinstallnodev linuxx binnode optelasticbeanstalknodeinstallnodev linuxx binnpm install tmpdeploymentapplication in the logs there is something like this T Z INFO Configuration update codepipeline nmg backendapidevbuild da fc a e e f f e ConfigDeployStage ConfigDeployPreHook npmsh Starting activity T Z INFO Configuration update codepipeline nmg backendapidevbuild da fc a e e f f e ConfigDeployStage ConfigDeployPreHook npmsh Activity execution failed because optelasticbeanstalkcontainerfilesebnodepy action npminstall backendapi postinstall tmpdeploymentapplication patchpackage internalmodulescjsloaderjs throw err Error Cannot find module packagejson at FunctionModuleresolveFilename internalmodulescjsloaderjs at FunctionModuleload internalmodulescjsloaderjs at Modulerequire internalmodulescjsloaderjs at require internalmodulescjshelpersjs at Objectanonymous tmpdeploymentapplicationnodemodulesbinpatchpackage at Modulecompile internalmodulescjsloaderjs at ObjectModuleextensionsjs internalmodulescjsloaderjs at Moduleload internalmodulescjsloaderjs at tryModuleLoad internalmodulescjsloaderjs at FunctionModuleload internalmodulescjsloaderjs npm ERR code ELIFECYCLE npm ERR errno npm ERR backendapi postinstall patchpackage npm ERR Exit status npm ERR npm ERR Failed at the backendapi postinstall script npm ERR This is probably not a problem with npm There is likely additional logging output above npm ERR A complete log of this run can be found in npm ERR tmpnpmlogs T Zdebuglog Running npm install optelasticbeanstalknodeinstallnodev linuxx binnpm Setting npm config jobs to npm config jobs set to Running npm without production flag Failed to run npm install Snapshot logs for more details UTC cannot find application npm debug log at tmpdeploymentapplicationnpmdebuglog Traceback most recent call last File optelasticbeanstalkcontainerfilesebnodepy line in module main File optelasticbeanstalkcontainerfilesebnodepy line in main nodeversionmanagerrunnpminstalloptionsapppath File optelasticbeanstalkcontainerfilesebnodepy line in runnpminstall selfnpminstallbinpath selfconfigmanagergetcontainerconfigappstagingdir File optelasticbeanstalkcontainerfilesebnodepy line in npminstall raise e subprocessCalledProcessError Command optelasticbeanstalknodeinstallnodev linuxx binnpm install returned nonzero exit status ElasticBeanstalkExternalInvocationError caused by optelasticbeanstalkcontainerfilesebnodepy action npminstall backendapi postinstall tmpdeploymentapplication patchpackage internalmodulescjsloaderjs throw err Error Cannot find module packagejson at FunctionModuleresolveFilename internalmodulescjsloaderjs at FunctionModuleload internalmodulescjsloaderjs at Modulerequire internalmodulescjsloaderjs at require internalmodulescjshelpersjs at Objectanonymous tmpdeploymentapplicationnodemodulesbinpatchpackage at Modulecompile internalmodulescjsloaderjs at ObjectModuleextensionsjs internalmodulescjsloaderjs at Moduleload internalmodulescjsloaderjs at tryModuleLoad internalmodulescjsloaderjs at FunctionModuleload internalmodulescjsloaderjs npm ERR code ELIFECYCLE npm ERR errno npm ERR backendapi postinstall patchpackage npm ERR Exit status npm ERR npm ERR Failed at the backendapi postinstall script npm ERR This is probably not a problem with npm There is likely additional logging output above npm ERR A complete log of this run can be found in npm ERR tmpnpmlogs T Zdebuglog Running npm install optelasticbeanstalknodeinstallnodev linuxx binnpm Setting npm config jobs to npm config jobs set to Running npm without production flag Failed to run npm install Snapshot logs for more details UTC cannot find application npm debug log at tmpdeploymentapplicationnpmdebuglog Hey ds Thanks for creating and maintaining patchpackage it has made my life much easier The Problem I often find myself copy pasting patches from a codebase to another While not a huge issue it would be nice to avoid it Possible Solution Instead of specifying the package name or git commit the user would provide a url pointing to where the patch is located patchpackage would detect that its a url download the patches locally and then work as it does normally Is this something you would be interested to add Happy to take a shot at a PR if you are Cheers Small reproduction Create an empty folder with only one file packagejson json name rw dependencies reactwindow Make some changes inside nodemodulesreactwindowdist files npx patchpackage reactwindow If fails with error below shell brunolemosrw patchpackage reactwindow patchpackage Creating temporary folder Installing reactwindow with yarn Diffing your files with clean files error Error spawnSync git ENOBUFS at ObjectspawnSync internalchildprocessjs at ObjectspawnSync childprocessjs at FunctionspawnSync as sync usrlocallibnodemodulespatchpackagenodemodulescrossspawnindexjs at ObjectexportsspawnSafeSync usrlocallibnodemodulespatchpackagedistspawnSafejs at git usrlocallibnodemodulespatchpackagedistmakePatchjs at ObjectmakePatch usrlocallibnodemodulespatchpackagedistmakePatchjs at usrlocallibnodemodulespatchpackagedistindexjs at ArrayforEach anonymous at Objectanonymous usrlocallibnodemodulespatchpackagedistindexjs at Modulecompile internalmodulescjsloaderjs errno ENOBUFS code ENOBUFS syscall spawnSync git path git spawnargs diff cached nocolor ignorespaceateol noextdiff status null signal SIGTERM output null Buffer d d f e f f d f c f d e f f f e d more bytes Buffer pid stdout Buffer d d f e f f d f c f d e f f f e d more bytes stderr Buffer usrlocallibnodemodulespatchpackagedistmakePatchjs throw e error Error spawnSync git ENOBUFS at ObjectspawnSync internalchildprocessjs at ObjectspawnSync childprocessjs at FunctionspawnSync as sync usrlocallibnodemodulespatchpackagenodemodulescrossspawnindexjs at ObjectexportsspawnSafeSync usrlocallibnodemodulespatchpackagedistspawnSafejs at git usrlocallibnodemodulespatchpackagedistmakePatchjs at ObjectmakePatch usrlocallibnodemodulespatchpackagedistmakePatchjs at usrlocallibnodemodulespatchpackagedistindexjs at ArrayforEach anonymous at Objectanonymous usrlocallibnodemodulespatchpackagedistindexjs at Modulecompile internalmodulescjsloaderjs errno ENOBUFS code ENOBUFS syscall spawnSync git path git spawnargs diff cached nocolor ignorespaceateol noextdiff status null signal SIGTERM output null Buffer d d f e f f d f c f d e f f f e d more bytes Buffer pid stdout Buffer d d f e f f d f c f d e f f f e d more bytes stderr Buffer brunolemosrw 