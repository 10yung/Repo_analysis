This is not an issue just a question I know I can pass nooptional to ignore the optional dependencies while installing package like this npm install rrule nooptional But if I run npm run install again on my project it installs the luxon library Either I have to ignore optional dependencies from all the packages that I have installed or I have to install luxon Is there any way I can install rrule from npm with luxon When the recurrence rule is set for every month on rd Monday and Wednesday the resulting dates are messed up Attaching a picture from the demo site new RRule freq RRuleMONTHLY count interval byweekday RRuleMO RRuleWE bysetpos String RRULEFREQMONTHLYCOUNT INTERVAL WKSTMOBYDAYMOWEBYSETPOS But the resulting text and the result are incorrect ruletoText every month on Monday Wednesday for times expected ruletoText every month on rd Monday and Wednesday NOTE bysetpos DOES work with one byweekday but not multiple days array in the demo site RRule bug Thanks for contributing to rrule To submit a pull request please verify that you have done the following x Merged in or rebased on the latest master commit x Linked to an existing bug or issue describing the bug or feature youre addressing x Written one or more tests showing that your change works as advertised RRULEMinutely not working when not consecutive days Code new RRule freq RRuleMINUTELY dtstart new DateDateUTC until new DateDateUTC count interval byweekday RRuleMO RRuleWE byhour Expected output Mon Nov GMT Mon Nov GMT Wed Nov GMT Wed Nov GMT Actual Output Mon Nov GMT Mon Nov GMT Two fixes for now you add in the list of hours the slots are generated perfectly if the days are consecutive for example Monday Tuesday Wednesday everything is working correctly Version OS macOS Mojave It appears that if dtstart is in the week before the first occurrence then it will skip that occurrence but if dtstart is in the same week then it will not Any idea why this would be happening Would be happy to open a PR js import RRule from rrule const options freq RRuleWEEKLY interval count byweekday RRuleTU const rule new RRule options dtstart new DateDateUTC const rule new RRule options dtstart new DateDateUTC rule and rule are across a week boundary rule results start a week later than rule consolelogrule allmaptoISOString consolelogrule allmaptoISOString function toISOStringd return dtoISOString Expected output js T Z T Z T Z T Z Actual output js T Z T Z T Z T Z rrule macOS PDT Hi I am generating instances from a string RRule and noticed that the first iteration will not be produced if local time HHmm is earlier than the events time regardless of the date and that the instance is in the future I am using UTC and all the dates are produced from unix timestamp values var dateStart new Date Tuesday Feb UTC var end new Date Saturday Mar UTC var nrule rrulerrulestrFREQWEEKLYBYDAYTUUNTIL T Z nruleoptionsdtstart dateStart var set nrulebetweennew DatedateStart new Dateend true In the example above if current UTC time is before the first supposed instance of this rule that should occur on Feb will not be generated although its in the future while if current UTC time is after it will be generated successfully I tried this on both and latest both yielded same result Im running on latest chrome windows my local time is GMT Thanks a lot RRule DTSTARTTZIDEuropeWarsaw T RRULEFREQWEEKLYUNTIL T ZBYSECOND BYMINUTE BYHOUR Code new RRuleSetDTSTARTTZIDEuropeWarsaw T RRULEFREQWEEKLYUNTIL T ZBYSECOND BYMINUTE BYHOUR all Expected output EuropeWarsaw Actual Output Version Windows Timezone EuropeWarsaw As an alternative solution to the issue expressed in move the demo page over to codesandboxio so potential users can more easily explore and hack on rrulejs Example I think but am not sure that codesandbox supports connecting to a github repo If not then the major downside of this approach is that maintenance of the demo would need to be handled outside this repo Addresses Didnt write tests as this was for the demo app and isnt really changing the functionality can if needed though Some libraries such as moment lodash etc expose their goodies to the window such that when on their webpage I can drop to a JS console and test stuff out myself ex I can use when on the lodash website I would be very useful if we could do the same for this library Ive pushed up a pullrequest with the appropriate changes