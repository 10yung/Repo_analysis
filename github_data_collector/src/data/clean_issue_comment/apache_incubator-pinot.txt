Upgrade maven to since maven central repo only supports https now Currently Helix will derived hostnameport from the server instanceId string as demonstrated in the test testDisableLogicalServerID if the instance id is set in server config This PR decouples the configuration of server instance id and hostnameport This allows Pinot user to set the following field independently Instance ID servernettyhost servernettyport This is done by overwriting the Helix zk data after server connects to the zk cluster It is hidden behind a flag now so the current use cases will not be affected Also added an integration test to test different configuration choices for servers JackieJiang icefury Issue link Switch UI query format from pql to sql Fix data table presentation for sql response Support for text column type for both offline and realtime This has changed after cleaning up the POC code addressing some review comments and making more changes based on the detailed design doc Issue Design doc POC doc POC PR Functional tests used Lucene phrase term regex queries and combination of them using ANDOR Datasets used Skills file each text line is a resume text It is stored as a column in Pinot table and each line of text is a column value We create a text index on this column Query log file each log line is PQLSQL query It is stored as a column in Pinot table and each line of text is a column value We create a text index on this column Additional tests to combine text search filters with other filters using ANDOR Tests for near realtime search with Lucene Tests for multithreaded readwrite scenario Tests for reference counting Cluster integration test that writes the skills file into AVRO followed by Kafka topic and starts consuming Performance tests were done as part of POC PR Will be checkedin separately NOTE the query log file is k lines It will be better if we can upload it to the repo without having to checkin through a PR as it unnecessarily bloats the PR NOTE As mentioned in the design doc there is a plan to introduce new data type TEXT and then by default we will create text index on such columns This part is not yet covered in the PR since I want to get the review going Right now the creation is controlled through knobs in TableConfigIndexingConfig IndexLoadingConfig and SegmentGeneratorConfig Best effort rebalance in the following scenario min available replicas wont be guaranteed Table with segments in ERROR state ExternalView not converged within the timeout Also add support for rebalancing Helix disabled table Add documentation to fields of important query execution stats which are not clear from variable names Fix some typos Left some TODO for followups documentations of query module This RB enables FULLAUTO rebalance mode for leadControllerResource after the first live instance shows up By doing so the first controller can start calculating the partition assignment after all the materials are fully prepared No algorithm related exception thrown any more when starting the st controller This PR will handle remove the restriction that table names and column names in the query must match what is defined in TableConfig and Schema The idea is to fix the broker request object in the beginning so that the rest of the code does not require any change Adding option to enable this via cluster config enablecaseinsensitivepql I never thought I would be the one initiating this thread But over the last year the quality of Helix code has gone down drastically and its preventing us to make a successful pinot release Many changes are not well thought out and are being designed to meet the needs of specific use cases Helix is an important component for Pinot and its important for us to have control over its behavior My proposal is to fork the helix module into Pinot Please let me know if anyone has any concerns 