 ios ios cpu Main Thread Checker UI API called on a background thread UIView layer PID TID Thread name none Queue name comapplerootdefaultqos QoS FXBlurView In iOS FXblur view is not working Blur goes blue color with UIView layer must be used from main thread only this warning It was working in iOS Hi With Xcode and device with iOS When i activate blur i get the following message in logger Main Thread Checker UI API called on a background thread UIView layer PID TID Thread name none Queue name comapplerootdefaultqos QoS Backtrace MyApp x a b FXBlurView blurLayer MyApp x a c FXBlurView blurRadius MyApp x abb c FXBlurView updateAsynchronouslycompletion blockinvoke libdispatchdylib x c dispatchcallblockandrelease libdispatchdylib x c dispatchclientcallout libdispatchdylib x d c dispatchqueueoverrideinvoke libdispatchdylib x b dispatchrootqueuedrain libdispatchdylib x dispatchworkerthread libsystempthreaddylib x c f pthreadwqthread libsystempthreaddylib x c ec startwqthread voidupdateAsynchronouslyBOOLasync completionvoid completion if self shouldUpdate UIImage snapshot self snapshotOfUnderlyingView if async dispatchasyncdispatchgetglobalqueueDISPATCHQUEUEPRIORITYDEFAULT UIImage blurredImage self blurredSnapshotsnapshot radiusselfblurRadius dispatchsyncdispatchgetmainqueue self setLayerContentsblurredImage if completion completion else self setLayerContents self blurredSnapshotsnapshot radius self blurPresentationLayer blurRadius if completion completion else if completion completion Possible to try with dispatchasyncdispatchgetmainqueue Best regards FXBlurViewm appear Potential leak of memory pointed to by tempBuffer you are could looking Ignoring result of vImageBoxConvolveARGB is something I noticed and NULL dataSource release case was detected by Xcode analyzer Hi I am currently using FXBlurView ive notice a place where there could be a bug in FXBlurViewm in UIImage snapshotOfUnderlyingView objc UIImage snapshotOfUnderlyingView strong FXBlurLayer blurLayer self blurPresentationLayer strong CALayer underlyingLayer self underlyingLayer CGRect bounds blurLayer convertRectblurLayerbounds toLayerunderlyingLayer selflastUpdate NSDate date CGFloat scale if selfiterations CGFloat blockSize selfiterations scale blockSizeMAXblockSize blurLayerblurRadius scale floor scale CGSize size boundssize In this method the blurLayer could be selflayer or selflayerpresentationLayer however the underlyingLayer will always be selfunderlyingViewlayer the issue im having is that when blurLayer is equal to selflayerpresentationLayer the bounds here is not correct and since you access the blurRadius from selflayer i assume that the first line of this method should be objc strong FXBlurLayer blurLayer self blurLayer Or am i understanding this wrong Any help would be appreciated Carthage support added separate Xcode project for building framework updated example projects Hello I have a profile coverView which contains an imageView and a blurView instance of FXBlurView When I apply a CATransform DScale to the coverView the blur completely disappears Im attaching a demo of the issue oct 