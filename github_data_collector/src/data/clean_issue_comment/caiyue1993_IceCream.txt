Is it possible to display the status to the user in UI such as Syncing please wait or Last synced at time IceCream seems like an awesome solution to RealmiCloud Ive got sync somewhat working However Im having a fatal issue In my situation I need Dogs to have the option to have more than one Owner So in Realm Owner let dogList ListDog Dog let owners LinkingObjectsfromType Ownerself property dogList Everything works fine in Realm When I create a new Dog I do this realmadddog if let owners owners for owner in owners ownerdogListappenddog Once I add the code below code however all of my dogs get removed from their owners syncEngine SyncEngineobjects SyncObjectOwner SyncObjectDog The dogs are still visible in Realm Studio they still exist in Realm but their relationship to their owners has been destroyed All of my owners show zero objects in their dogList whereas they had nonzero objects before SyncEngine runs Do you know why this is happening Again this only happens when I start the SyncEngine If I comment that out all of my relationships are maintained in subsequent app launches There was a section of my apps code where I did this swift let book Book booktitle titleTextFieldtext bookauthor authorTextFieldtext bookkey existingBookkey bookmakeKey try realmwrite realmaddbook update all If the user is adding a new book it gets a new unique primary key and everything works fine However when editing a book the code is the same as above I create a new Book object but this time it gets the same primary key as an existing book and the update all part takes care of updating the existing book instead of creating a new one That update doesnt sync to the cloud though So a while later all the updates will revert to what was stored before I fixed this by calling push in the sync engine right after the code above That shouldnt be necessary though This should fix Thank you for the wonderful library For example initializing CreamAsset causes save inside init to fail CreamAssetcreateobject SomeObject propName data someData CreamAsset generates uniqueFileName as the concatenation of Objects ID and propName Next CreamAssetfilePath use URLappendingPathComponent to generate a filePath from the uniqueFileName generated in the previous section as shown below The URL contains the directory separator Therefore the generated CreamAsset points to a file in a directory that does not exist in the generated filePath Therefore save called in init will fail I cant suggest a solution correct because I dont know the set of characters that cant be used as filenames but as far as Im concerned I can work around this problem by making init generate uniqueFileName like this selfuniqueFileName objectID propNameaddingPercentEncodingwithAllowedCharacters CharacterSetcharactersIn inverted objectID propName Of course if I dont use for the Object ID or propName I shouldnt have any problems However in my project URL is used for ID of Object so I think it is difficult to avoid this problem If possible I would appreciate it if IceCream could take care of it Thank you in advance Expected behavior let asset CreamAssetcreateobject SomeObject propName data someData assetstoredData is not return nil I know that icecream already does this But how can we interact with the error handler to update the UI accordingly How can we know if syncEngine failed Thanks for such a great repo I am having an issue When the user first downloads the app CloudKit doesn t seem to sync It syncs and UI updates the second time the user opens the app What should the logic be for when the user downloads the app for the first time So that all the data is presented from the beginning Can t seem to get it to work Setup Custom container Private database Application on tvOS tested both on Physical and Simulator devices Using the example code provided from repo with Dog Cat Owner etc Expected behavior Adding a new record for an Owner into the private container Verify it is stored properly in the private container Clear tvos cache directory either removing them manually or by Swift code and also verified all Realm data is removed After restarting tvOS app the data is synced properly from Cloudkit to Realm Clear tvos cache directory again just like before After restarting tvOS app the data should is synced properly from Cloudkit to Realm Expected Output Flow add records abc clear restart realm data at this point abc add records de clear restart realm data at this point abcde add records fg clear restart realm data at this point abcdefg Actual behavior Steps to reproduce optional Adding a new record for an Owner into the private container Verify it is stored properly in the private container Clear tvos cache directory and also verified all Realm data is removed After restarting tvOS app the data is synced properly from Cloudkit to Realm Clear tvos cache directory again just like before After restarting tvOS app again the data is not synced anymore It only syncs the last updates to the Cloudkit Actual Output Flow add records abc clear restart realm data at this point abc add records de clear restart realm data at this point de add records fg clear restart realm data at this point fg Additional Notes Not sure if I am settingup something wrong but it works perfectly and as expected when switched to public database with same logic flow Unless Im mistaken IceCream does not deals with this configuration However this configuration happens on a large part of my user base Due to network unavailability iCloud access error etc the local version of my object cannot be pushed to iCloud As a consequence the changes of these local objects are dismiss by IceCream when app is relaunched and iCloud accessible On the device the object are back to the server version In SyncEngineswift in the setup method selfdatabaseManagerfetchChangesInDatabasenil calls a CKFetchRecordZoneChangesOperation which add and potentially override a SyncObject without any conflict handling strategy This is a major issue and needs to be properly handled by the library Maybe using versioning strategy as proposed by 