Would like to read up on how strings can break a system since this is an interesting topic theres been zero updates since yet theres plenty of pull requests I suggest adding at least one character with large amounts of joinable unicode characters joined with the zerowidth joiner This serves the following purposes character limits implemented by counting unicode characters instead of codepoints can be exploited since characters of arbitrary byte length can be constructed can break layouts eg by forcing scrollbars as the character is rendered arbitrarily wide and not breakable can cause massive lag Example I produced the above character with this python script python from itertools import repeat onefamily n nfamilies u djoinrepeatonefamily n printnfamilies Theres s s in the corpus but no xs Some Mazdas and some Nissans cannot stream over Bluetooth the Invisible podcast because of the I in the name so they made an alternate invisible podcast to work around it Python scripts should run guarded meaning that they only execute when you intend and not when importing or scanning like when executing doctests This can cause issues if people bring blns into their repo as a submodule as things like test runners or doctest runners will have to manually exclude this file when they are running which is inconvenient This stack overflow answer gives more detail on why this is important ps this script doesnt actually work for me does it have tests somewhere Unicode characters such as below u u A X W t Some poorlywritten applications may treat the string EOF as an end of file without regard for context as opposed to bash 