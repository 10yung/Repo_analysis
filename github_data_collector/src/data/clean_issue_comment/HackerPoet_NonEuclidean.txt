Can u pls add a Win version or post the source code so I can compile it to Win manually It renders as a black window and my mouse cursor is centered I installed glew AS WELL as adding the files to the same directory Please help Hi the following code allows building and running this cute little engine under Linux using SDL as backend Some features are not yet there fullscreen switching cursor confining I plan to add them asap Please merge if you wish I am using prebuilt exe The more I use it the more it takes ram The ram usage is increasing rapidly First level its just takes mb per thing The next levels starts to take hundreds ram After few changes I got GB Last ram usage was GB and my laptop was frozen I had to hard shutdown it hold power button for some time My laptop x bit Win gb ram Hello folks Im an expert in cellular automatons ie conway game of life and the similar Some background about me Anyway I wonder how complex would it be to also fit inside your reality some cellular automaton but where the longer part would actually have more squares How would it influence the automaton Is there even a point in doing that And another question how hard would it be to implement inside Roblox Hi I am new to this so apologies if Im just missing something simple I keep getting the warning and error messages below no matter what I try Do you know what I need to change Thanks warning LNK defaultlib LIBCMT conflicts with use of other libs use NODEFAULTLIBlibrary fatal error LNK cannot run rcexe So when i load the Engine it seems to have a rendering problem i dont know whats causing it My computers sepces are Win bit Amd A APU with AMD radeon R GB of ram its a laptop ive also included an image of what it looks like nee Hey I spent a few hours trying to come up with a quick WebGL port using emscripten I managed to get it working fine without the occlusion queries by setting engineocclusionCullingSupported to Here take a look That worked fine but of course the rendering was extremely slow Trying to turn on occlusion queries didnt produce the desire result the portals would simply render nothing I was able to determine that the problem was the the occlusion queries simple never return Thats because a difference between WebGL and OpenGL which is summed in this paragraph from the WebGL standard In order to ensure consistent behavior across platforms queries results must only be made available when the user agents event loop is not executing a task In other words A querys result must not be made available until control has returned to the user agents main loop Repeatedly fetching a querys QUERYRESULTAVAILABLE parameter in a loop without returning control to the user agent must always return the same value In your recursive code you assume that getting GLQUERYRESULT will flush the rendering pipeline and get the result as OpenGL does WebGL however does not do that until the frame code call returns control to the browser So whats the chance youll want to try to restructure your code so that Render is not explicitly recursive so it would be possible to return control between queries Another option I was thinking about is to try to simulate occlusion queries using glReadPixels which is synchronous I dont expect this to be very fast though Since it is already written using OpenGL would it be possible to have a build for linux and Mac