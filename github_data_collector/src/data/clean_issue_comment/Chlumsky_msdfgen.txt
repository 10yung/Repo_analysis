Calling Shapes bounds function implicitly assumes that l b t and r values should be properly initialized This is not obvious and could lead to the incorrect bounding boxes For example I was default initializing this values with zero while actual frame was above zero and this resulted with bbox like r t rather than l b r t where l t r b are some concrete values Ive created PR to fix this Explicit initialization of values inside Shapes bounds function The code currently uses a definition named MSDFGENUSECPP and mostly ignores newer C features However even without this flag it uses a C feature explicit cast operators were added in C which means building it with a C compiler isnt possible Either this issue should be fixed if you want to have C support or the macro and its use removed and then the codebase could be modernizedsimplified at other places too Or as a more generic question do you have a list of supported compilersstandards I dont need C support Im only planning on submitting a CMake improvement pull request and noticed this issue during testing it I can also submit a PR about this issue based on the answer for the above question Letter that has WinDescent cuts by msdfgen REsult Hi I am working on converting any installed font to a single bitmap Most fonts I tried are fine with but some it looks inverted even with single channel sdf characters are black on white Msdf also looks similar rounded characters with no edges are black on a white background It is possible that I do something wrong but I just dont know what can it be What can be the cause of something like this Thanks MSDF is great for keeping all the sharp corners but sometimes having rounded corners is great too An example of this is when shadow effects are made Heres a comparison MSDF text using MSDF for shadow img src width MSDF text using SDF in alpha channel for shadow img src width Notice how the shadow looks much more natural on the second image A standard distance field is encoded in the alpha channel while the other channels encode the MSDF so both are accessible in the fragment shader I took these images from SmartEdge They call it MSDFA However this is a commercial library so I cant use it for generating fonts Would it be hard to implement this format into your generator Since you already have MSDF and SDF Im guessing combining them would be pretty straightforward Im not very familiar with C but I can try to make a pull request if you want The characters listed in the example are kanji called Skip StdB manufactured by Fontworks When msdf is output an unexpected line is generated from the part where the radical parts stick and the acute angle is formed If you draw a large font it will be a problem because this part will look like a line x to x outputzoom Example glyph picture Problem location picture It is attached because it reproduces even the glyph converted to SVG Output with the following options msdfgenexe msdf svg testsvg autoframe size testzip My problem is that it seems very slow to me I used bitmaps for each character at this size rendering msdf seems just perfect and conversion of glyphs of arial bold starting with space takes more than minutes Is this something I have to deal with or did I do something wrong Would you be willing to introduce a range bias param so that we can have more than shades on the outside of the outline Inside is usually too narrow to make use of shades anyway Granted that would require passing another parameter to the shader additional outside range could be worth it There is a small problem that can be fixed easily when compiling the msdfgen executable on linux following these steps git clone MyDir cd MyDir mkdir build cd build cmake make VERBOSE libmsdfgen is built successfully but as one tries to link the CXX executable msdfgen one gets the following undefined references Linking CXX executable msdfgen usrbincmake E cmakelinkscript CMakeFilesmsdfgendirlinktxt verbose usrbinc stdc O DNDEBUG rdynamic CMakeFilesmsdfgendirmaincppo o msdfgen libmsdfgena usrlocalliblibfreetypea usrlocalliblibfreetypeasfntco In function errorcallback sfntctext x undefined reference to pnggeterrorptr sfntctext x undefined reference to pngsetlongjmpfn usrlocalliblibfreetypeasfntco In function readdatafromFTStream sfntctext x d undefined reference to pnggetioptr sfntctext x b undefined reference to pnggeterrorptr sfntctext x d undefined reference to pngerror usrlocalliblibfreetypeasfntco In function LoadSBitPng sfntctext x a undefined reference to pngcreatereadstruct sfntctext x b undefined reference to pngcreateinfostruct sfntctext x ab undefined reference to pngdestroyreadstruct sfntctext x ce undefined reference to pngsetlongjmpfn sfntctext x undefined reference to pngsetreadfn sfntctext x c undefined reference to pngreadinfo sfntctext x b undefined reference to pnggetIHDR sfntctext x undefined reference to pngsetpalettetorgb sfntctext x undefined reference to pngsetexpandgray to sfntctext x a undefined reference to pnggetvalid sfntctext x b undefined reference to pngsettRNStoalpha sfntctext x d undefined reference to pngsetstrip sfntctext x eb undefined reference to pngsetpacking sfntctext x f undefined reference to pngsetgraytorgb sfntctext x undefined reference to pngsetinterlacehandling sfntctext x undefined reference to pngsetfiller sfntctext x undefined reference to pngreadupdateinfo sfntctext x undefined reference to pnggetIHDR sfntctext x f undefined reference to pngsetreadusertransformfn sfntctext x undefined reference to pngsetreadusertransformfn sfntctext x undefined reference to pngreadimage sfntctext x undefined reference to pngreadend sfntctext x undefined reference to pngdestroyreadstruct usrlocalliblibfreetypeaautofitco In function affaceglobalsnew autofitctext x undefined reference to hbftfontcreate autofitctext x undefined reference to hbbuffercreate usrlocalliblibfreetypeaautofitco In function affaceglobalsfree autofitctext x bf undefined reference to hbfontdestroy autofitctext x cf undefined reference to hbbufferdestroy usrlocalliblibfreetypeaautofitco In function afshapergetcoverage autofitctext xf undefined reference to hbfontgetface autofitctext xf ea undefined reference to hbottagsfromscript autofitctext xf a undefined reference to hbsetcreate autofitctext xf undefined reference to hbotlayoutcollectlookups autofitctext xf undefined reference to hbsetisempty autofitctext xf f undefined reference to hbsetcreate autofitctext xf c undefined reference to hbotlayoutlookupcollectglyphs autofitctext xf df undefined reference to hbsetnext autofitctext xf e undefined reference to hbsetcreate autofitctext xf undefined reference to hbotlayoutcollectlookups autofitctext xf undefined reference to hbsetcreate autofitctext xf undefined reference to hbotlayoutlookupcollectglyphs autofitctext xf undefined reference to hbsetnext autofitctext xf c undefined reference to hbotlayoutlookupwouldsubstitute autofitctext xf a undefined reference to hbsetnext autofitctext xf fe undefined reference to hbsetsubtract autofitctext xfa b undefined reference to hbsetnext autofitctext xfa undefined reference to hbsetdestroy autofitctext xfa undefined reference to hbsetdestroy autofitctext xfa c undefined reference to hbsetdestroy autofitctext xfaa undefined reference to hbsetdestroy usrlocalliblibfreetypeaautofitco In function afshaperbufcreate autofitctext xfad undefined reference to hbbuffercreate usrlocalliblibfreetypeaautofitco In function afshaperbufdestroy autofitctext xfaf undefined reference to hbbufferdestroy usrlocalliblibfreetypeaautofitco In function afshapergetcluster autofitctext xfb undefined reference to hbfontsetscale autofitctext xfc d undefined reference to hbbufferclearcontents autofitctext xfc b undefined reference to hbbufferaddutf autofitctext xfc undefined reference to hbbufferguesssegmentproperties autofitctext xfcb undefined reference to hbshape autofitctext xfcdd undefined reference to hbbufferclearcontents autofitctext xfcfb undefined reference to hbbufferaddutf autofitctext xfd undefined reference to hbbufferguesssegmentproperties autofitctext xfd undefined reference to hbshape autofitctext xfd undefined reference to hbbuffergetglyphinfos autofitctext xfd b undefined reference to hbbuffergetglyphinfos autofitctext xfdc undefined reference to hbbufferclearcontents autofitctext xfdcf undefined reference to hbbuffergetlength usrlocalliblibfreetypeaautofitco In function afshapergetelem autofitctext xfe undefined reference to hbbuffergetglyphinfos autofitctext xfe undefined reference to hbbuffergetglyphpositions usrlocalliblibfreetypeaftgzipco In function ftgzipfileinit ftgzipctext x undefined reference to inflateInit usrlocalliblibfreetypeaftgzipco In function ftgzipfiledone ftgzipctext x bd undefined reference to inflateEnd usrlocalliblibfreetypeaftgzipco In function ftgzipfilereset ftgzipctext x a undefined reference to inflateReset usrlocalliblibfreetypeaftgzipco In function ftgzipfilefilloutput ftgzipctext x da undefined reference to inflate usrlocalliblibfreetypeaftgzipco In function FTGzipUncompress ftgzipctext xe undefined reference to inflateInit ftgzipctext xe f undefined reference to inflate ftgzipctext xe a undefined reference to inflateEnd ftgzipctext xec undefined reference to inflateEnd collect error ld returned exit status CMakeFilesmsdfgendirbuildmake recipe for target msdfgen failed make msdfgen Error This can be easily fixed by manually running usrbinc stdc O DNDEBUG rdynamic CMakeFilesmsdfgendirmaincppo o msdfgen libmsdfgena freetypeconfig static libs usrlocalliblibfreetypea Instead of cmake running usrbinc stdc O DNDEBUG rdynamic CMakeFilesmsdfgendirmaincppo o msdfgen libmsdfgena usrlocalliblibfreetypea 