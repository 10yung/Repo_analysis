For using in VS include stdinth define ASMJITSTATIC define ASMJITSUPPRESSSTDTYPES include asmjitasmjith Hi what is the difference when encoding if the operand is not equal rax eax and ripdisp pointer mov raxor eax decodepointer mov decodepointer raxor eax after coding instructions movabs raxeax immpointer movabs immpointer raxor eax AsmJit is available as a port in vcpkg Adding installation instructions will help users get started by providing a single command they can use to build AsmJit and include it into their projects This is a question rather than an issue One of the most useful additions in avx is its more flexible and general masking but I wasnt able to find examplesdocumentations how to use it in asjmjit Any pointer would be really appreciated AsmJits register allocator can now change register operand to memory operand in case that a virtual register is spilled There are however few special cases that require details about the available CPU features otherwise such change could change the feature requirements of the code pextrw r xmm imm SSE pextrw r m xmm imm SSE vpslldq vec vec imm AVXAVX vpslldq vec vecmem imm AVX vpsrldq vec vec imm AVXAVX vpsrldq vec vecmem imm AVX At the moment these instructions are workarounded to never change reg to mem I would like to use the ccnewStackn a funciton in X Compiler but be able to change the size of that region of memory as I am compiling funciton Is it possible to change the n in the argument after it was created With the resurgence of the ppc le architecture on the desktop as a blobfree alternative to buggy insecure x machines there is strong interest in ppc el support for asmjit blocking among other things GZDoom on this librefriendly architecture Were willing to provide access to development hardware VPS if needed See Talos II Blackbird etc and the Linux community surrounding the POWER chip If I have multiple code holders say from different pauses of my JIT engine it would be nice to be able to share the address table with future invocations in case they call the same external functions I would have to guarantee the table is within GB of the new code but that is easy to satisfy Hello I noticed that jajbetc instructions allow Imm argument and thus immptr I see that on x jmp with immptr produces trampoline correctly if necessary However its not possible in the case of conditional jumps they silently generate invalid code Possibly improve trampolines for conditional jumps Could be solved by emitting additional jmp instruction implicitly somewhere at the end of function