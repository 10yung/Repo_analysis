Im using FormData to get some input values and convert these values to i currently I used this method to reduce duplicate code deriveDebug Default struct Numberi impl TryFromOptionFormDataEntry for Number type Error fn tryfromform OptionFormDataEntry ResultSelf SelfError let form formunwrap match form FormDataEntryStrings OkNumbersparseexpectError Not a number Err fn getnumform FormData name str i Numbertryfromformgetnameunwrap Im not familiar with Rust and I feel this code is ugly I think its better to add similar functions in FormData Then we can get the values easily eg formgetnametoi formgetnametostring stderrorError has its description function deprecated since Rust stdmemuninitialized and try since The rest were pretty mechanical fixes hinted by the compiler This other crate is being maintained and its API is simpler and more generic when using other RustCrypto crates as well See Added methods to readwrite selectionStart selectionEnd properties of a textarea element getallresponseheaders allow one to retrieve all response headers and so they can be iterated over Example converting headers to hyperhttpHeaderMap let xhr XmlHttpRequestnew let rawheaders xhrgetallresponseheaders let headers match rawheaders Somerh let mut headers httpheaderHeaderMapnew for h in rhsplit r n if hlen continue let parts Vec str hsplit collect let k parts let k httpheaderHeaderNamefrombyteskasbytesunwrap let v parts join let v httpheaderHeaderValuefromstr vunwrap headersappendk v headers None httpheaderHeaderMapnew rust macrouse extern crate stdweb macrouse extern crate serdederive deriveSerialize struct Foo bar u jsserializableFoo fn main printlnHello world let foo Foo bar js consolelogHi console foo results in Error loading Rust wasm module stdwebbug RuntimeError unreachable at ruststartpanic wasmfunction x at rustpanic wasmfunction x e at ZN std panicking rustpanicwithhook hd b d E wasmfunction x f at ZN std panicking continuepanicfmt h cda a baE wasmfunction x bf at rustbeginunwind wasmfunction x at ZN core panicking panicfmt hddbe a e b E wasmfunction x cc at ZN core result unwrapfailed h d ad da ceE wasmfunction x at ZN core result ResultLTTCEGT unwrap h deb e a fE wasmfunction x aeb at ZN LTstdwebbugFoou asu stdwebwebcoreserializationJsSerializeGT intojs h fe c d b E wasmfunction xbde at ZN LTstdwebwebcorenewtypeNewtypeLTLPstdwebwebcoreserializationNonFunctionTagCu LPRPRPCTGTu asu stdwebwebcoreserializationJsSerializeOwnedGT intojsowned h ffad c c c cE wasmfunction x e But if I change value of bar to it works as expected That is the minimal example in the full code Im using I also was able to extract this error message panicked at called Resultunwrap on an Err value ConversionError kind NumberConversionErrorOutOfRange srclibcoreresultrs toml dependencies stdweb serdederive serde cargo nightly a e cc cargoweb rustc nightly c The console macro documentation says If you want to print things to the console in a standardized way use println instead But when I use println I dont get any output in the console All Ive done is cargo new foobar add stdweb to my Cargotoml and do cargo web start and all it ever says in console is Finished loading Rust wasm module foobar I know its otherwise working though because other code I put in there does stuff like using stdwebconsolelog Hello World instead of println prints to console just fine 