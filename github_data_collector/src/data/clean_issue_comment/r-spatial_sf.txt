to roll out new sf the next things have to be done compare reverse dependencies against sf released on rcheckserver docker image compare reverse dependencies against sf released on docker image GDAL PROJ check against PROJ release candidates submit to CRAN write rspatial blog sf vignette on WKT axis order transformation pipelines and datum grids inform twitter Hi Working with spatial data I managed to calculate the mean and the max value for each polygon in this case counties But I struggle to calculate the median see code below Can anyone give me a suggestion about what goes wrong here Thanks so much r librarytidyverse librarysf rmlist ls so readsfEstGermany finalshp counties readsfGermany v shp counties sttransformcounties stcrsso epsg res stintersectionstbufferso stbuffercounties resmid ifelseresRange resmid ifelseresRange resmid resmid ifelseresRange resmid resmid ifelseresRange resmid resmid ifelseresRange resmid resmid ifelseresRange resmid rescutoffhigh ifelseresRange rescutoffhigh ifelseresRange rescutoffhigh rescutoffhigh ifelseresRange rescutoffhigh rescutoffhigh ifelseresRange rescutoffhigh rescutoffhigh ifelseresRange rescutoffhigh rescutoffhigh ifelseresRange rescutoffhigh Compute meanvalues for each county midvalues res mutatesizestareageometry values mid groupbyKREISKENN summarizescoremean sumsizevaluessumsize savemidvalues file meanSO RData Compute maxvalues for each county maxvalues res mutatesizestareageometry values cutoffhigh groupbyKREISKENN summarizescoremax maxvalues savemaxvalues file maxSO RData Compute medianvalues for each county median res mutatesizestareageometry values mid groupbyKREISKENN summarizescoremedian values maxsize Hi I have one map with SO Pollution and one map with counties of the former GDR that I like to match with stintersection That works but in this process some SO values are added for counties in Western Germany where originally no SO values existed eg G ttingen Fulda Why does this happen and how could I avoid this problem Thanks in advance for your help r librarytidyverse librarysf counties readsfGermany v shp so readsfEstGermany finalshp ggplotso aesgeometrygeometry fillfactorRange geomsf headso counties sttransformcounties stcrsso epsg res stintersectionstbufferso stbuffercounties Small changes applied in order to make stsample to work with unprojected shapes a parameter area is now computing as widthlength of the bounding box when stislonglatxTRUE Following etiennebr have you had time to look at Postgis support for PROJ Since sf is also moving towards using wkt rather than proj strings some work is needed on the PostGIS interface side This work is done in the SetFromUserInput branch of sf I currently switched PostGIS off entirely on travis to get it pass I tried to implement a number of sf spatstat conversions and vice versa A review by the spatstat team eg rubak would be appreciated Im in particular not sure whether the observation windows for the psp objects make sense Here is a demo r suppressPackageStartupMessageslibraryspatstat suppressPackageStartupMessageslibrarysf pngtmpspa dpng p stpoint p stpoint p stpointc p stsfcp p p aspppp Planar point pattern points window rectangle x units tryaspppstsetcrsp Error in aspppsfcstsetcrsp Only projected coordinates may be converted to spatstat class objects sf stsfgeom p tryaspppsf Planar point pattern points window rectangle x units sf stsfa geom p aspppsf Marked planar point pattern points marks are numeric of storage type integer window rectangle x units sf stsfa b geom p aspppsf warns Marked planar point pattern points marks are numeric of storage type integer window rectangle x units Warning message In aspppsfsf only first attribute column is used for marks w stassfcstbboxstsfcp p sf stsfa geom p p rbindstsfa geom w sf Simple feature collection with features and field geometry type GEOMETRY dimension XY bbox xmin ymin xmax ymax epsg SRID NA proj string NA a geom POLYGON POINT POINT POINT tryaspppp errors one point outside window Error in marksppptmp value value number of rows of data frame number of points In addition Warning message point was rejected as lying outside the specified window w stassfcstbboxp sf stsfa geom p p rbindstsfa geom w sf Simple feature collection with features and field geometry type GEOMETRY dimension XY bbox xmin ymin xmax ymax epsg SRID NA proj string NA a geom POLYGON POINT POINT POINT aspppp Marked planar point pattern points marks are numeric of storage type double window polygonal boundary enclosing rectangle x units librarystars Loading required package abind tif systemfiletifL ETMstif package stars s adropreadstarstif plots spa r m asowins plotm spa r tablemm FALSE TRUE asowinsf asowinsfc nc streadsystemfilegpkgncgpkg packagesf Reading layer ncgpkg from data source homeedzerRx pclinuxgnulibrary sfgpkgncgpkg using driver GPKG Simple feature collection with features and fields geometry type MULTIPOLYGON dimension XY bbox xmin ymin xmax ymax epsg SRID proj string projlonglat datumNAD nodefs tryasowinnc should be projected Error in asowinsfcMULTIPOLYGONstgeometryW Only projected coordinates may be converted to spatstat class objects nc sttransformnc plotasowinnc col grey spa r plotasowinstgeometrync col grey spa r sq rbindc c c c c pol stpolygonlist sq sq w hole plotasowinpol col grey spa r plotasowinstsfcpol col grey spa r mpol stmultipolygonlist listsq sq listsq sq plotasowinmpol col grey spa r plotasowinstsfcmpol col grey spa r plotasowinstsfcpol mpol col grey spa r plotasowinstsfa stsfcpol mpol col grey spa r o asowinstsfa stsfcpol mpol stassfco POLYGON stassfco POLYGON stassfco POLYGON plotstassfco col blue main stassfco spa r plotstassfo col blue main stassfo spa r datanztrees qNZ quadratcountnztrees nx ny ts astessqNZ plotstassfcts spa r ls stlinestringrbindc c c plotaspspls spa r mls stmultilinestringlistrbindc c c rbindc c plotaspspmls spa r plotaspspstsfcls spa r plotaspspstsfcmls spa r plotaspspstsfcls mls spa More fun See Even seems to think that the OGRSpatialReference object may be subject to shortterm volatility rgdal functions P SRIDshow and ogrP S affected All works fine in PROJ for EPSG ellps and units omitted in exportToProj I tried to check sf but dont know which branch Im checking there is an error in R check Hope PR J gives us a break in This attempts to solve for sf by avoiding changing environment variables on load Required changes are done onthefly upon calls to stcrs or sttransform and automatically reverted onexit See comments on last commit Hope this helps and makes sense PS testthat test are all passing but many differences are found on tests comparing with Routsave files However the differences seem similar to those also observed on travis build on wkt branch TLDR current crs objects are hard to move to the postproj string world we now live in I suggest to have crs objects with two fields input for user input short description and wkt for communicating tofrom GDAL this still supports specifying CRS by EPSG ID or proj string but also with other CRS formats widening the interoperability dramatically Currently crs objects have two fields epsg integer and proj string character Branch wkt added a third wkt character with the WKT representation This tries to merge the PROJ world view where CRS are expressed as proj strings and the PROJ world where proj strings are considered legacy if not to be deprecated As expected this turned out to be very messy see Spawning from branch wkt I created a branch SetFromUserInput which rethinks crs objects In short in this branch crs objects have two character fields input the string with which the object was initialised by the user or the string that characterizes the CRS briefly when an object was read through GDAL it is meant to be the humanreadable version of the CRS as opposed to WKT wkt the wkt or wkt in GDAL PROJ description of the CRS which is meant to be communicate the entire CRS to and from GDAL Only input is ever to be set by users eg as in r stcrs Coordinate Reference System User input EPSG wkt GEOGCRS WGS DATUM World Geodetic System ELLIPSOID WGS LENGTHUNIT metre PRIMEM Greenwich ANGLEUNIT degree CS ellipsoidal AXIS geodetic latitude Latnorth ORDER ANGLEUNIT degree AXIS geodetic longitude Loneast ORDER ANGLEUNIT degree USAGE SCOPE unknown AREA World BBOX ID EPSG where is converted to EPSG and input is passed on to OGRSpatialReferenceSetFromUserInput This means that not only proj strings and EPSG IDs can be input but also WKT OGC urns PROJJSON and even nonEPSG CRSs in total formats eg r stcrsurnogcdefcrsEPSG Coordinate Reference System User input urnogcdefcrsEPSG wkt GEOGCRS WGS DATUM World Geodetic System ELLIPSOID WGS LENGTHUNIT metre PRIMEM Greenwich ANGLEUNIT degree CS ellipsoidal AXIS geodetic latitude Latnorth ORDER ANGLEUNIT degree AXIS geodetic longitude Loneast ORDER ANGLEUNIT degree USAGE SCOPE unknown AREA World BBOX ID EPSG This broadens the scope of crs objects in terms of interoperability can also work with GDAL and allows everyone to move away from proj strings on their own pace For convenience the method for crs objects does a bit more than extracing input or wkt but can generate some fields that help backward compatibility r x stcrsurnogcdefcrsEPSG xepsg now a character xproj string generated onthefly projlonglat datumWGS nodefs What messes up backward compatibility to reverse dependencies is stored legacy objects eg in package tmap and possibly data packages such as bcmaps Eg r librarybcmaps Loading required package sf Linking to GEOS GDAL PROJ bcbound getlayerbcbound strstcrsbcbound List of epsg int proj string chr projaea lat lat lat lon x y ellpsGRS towgs truncated attr class chr crs stcrsbcbound Coordinate Reference System User input projaea lat lat lat lon x y ellpsGRS towgs unitsm nodefs wkt BOUNDCRS long text skipped Warning messages In crsx input oldstyle crs object found please update code In crsx input oldstyle crs object found please update code In crsx wkt oldstyle crs object found please update code In crsx wkt oldstyle crs object found please update code These should ideally have been generated at package load rather than stored to be robust against changes like this I might be able to do an autoconversion warning for backward compatibility in packages that I control and that use them sf lwgeom This is related to and It seems that there is a bug on stsample when typehexagonal is performed over an unprojected polygon r librarysf nc streadsystemfileshapencshp package sf nc sttransformnc hexsample stsamplenc size type hexagonal This returns this error r Error in seqlennrowxy argument must be coercible to nonnegative integer In addition Warning message In seqlennrowxy first element used of lengthout argument Whereas this works fine r hexsampleother stsamplesttransformnc size type hexagonal I think the issue comes from this line as it returns the area on m and then comes in meters as well and finally performs the operations mixing longitude and latitude with meters 