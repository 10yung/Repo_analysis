I start the websocketserver by call start after it start the server work well If I call start again my android application will be crashed so how can I check if the websocket server is started Hi Ive found this issue by upforgrabs label Please tell me if I missed something in the process On January there was a commit to extend all license texts to Since its should we update the licenses again Somebody cant connect to websocket Checked out nginx access log I got HTTP Normal user requests HTTP The exception user requested http Im not sure if its websocket jar sent HTTP Protocol thanksBest regards Hi Broadcasting uses connections without synchronization Send a text to all connected endpoints param text the text to send to the endpoints public void broadcastString text broadcast text connections even trying to override this method with override void broadcastString text broadcast text getConnections will lead to javautilConcurrentModificationException null at javautilHashMapHashIteratornextNodeHashMapjava at javautilHashMapKeyIteratornextHashMapjava at javautilAbstractCollectiontoArrayAbstractCollectionjava at javautilArrayListinitArrayListjava at orgjavawebsocketserverWebSocketServergetConnectionsWebSocketServerjava I just wanted to tell you that I developed a web chat app that uses this websocket library Thank you for publishing it It works really well FamChat We are running this wss server under android There is no any problem to connect with this server using wss client under android The wss client of chrome can also work with this server firstly But if we close the wss connection and connect with this WSS server again it failed mostly We found that the chrome omitted the Client Key Exchange after the first established connection The IOS websocket client had the same problem Describe the bug javalangNullPointerException Attempt to invoke virtual method void javanetSocketclose on a null object reference I have encountered this error many times but I cannot reproduce it because I found that the error seems to be caused by multithreaded concurrency I found that socketclose appears in two different threads One is the reconnect and it will call the reset private void reset Thread current ThreadcurrentThread if current writeThread current connectReadThread throw new IllegalStateExceptionYou cannot initialize a reconnect out of the websocket thread Use reconnect in another thread to insure a successful cleanup try closeBlocking if writeThread null thiswriteThreadinterrupt thiswriteThread null if connectReadThread null thisconnectReadThreadinterrupt thisconnectReadThread null thisdraftreset if thissocket null thissocketclose thissocket null catch Exception e onError e enginecloseConnection CloseFrameABNORMALCLOSE egetMessage return connectLatch new CountDownLatch closeLatch new CountDownLatch thisengine new WebSocketImpl this thisdraft One is in the WebsocketWriteThread private class WebsocketWriteThread implements Runnable Override public void run ThreadcurrentThreadsetName WebSocketWriteThread ThreadcurrentThreadgetId try runWriteData catch IOException e handleIOException e finally closeSocket writeThread null Closing the socket private void closeSocket try if socket null socketclose catch IOException ex onWebsocketError webSocketClient ex Obviously the reconnect thread and the write thread are not the same threadThis reminds me of a piece of code I saw elsewhere public class GcsTest private static String mStr null private static void printStrLength if null mStr int len mStrlength Systemoutprintlnlength len public static void mainString args GThreadA threadA new GThreadA GThreadB threadB new GThreadB threadAstart threadBstart static class GThreadA extends Thread Override public void run while true if null mStr mStr Gcs else mStr null static class GThreadB extends Thread Override public void run while true printStrLength It will have a null pointer errorIt may take some time to run before the error occursAfter threadB just judged if null mStr it switched to threadA At this time threadA also judged that mStr was not null so it set mStr to null and then switched to threadB When threadB gets the length A null pointer exception occurred So when reconnect happens is it possible that there are some conditions that triggered closeSocket in writeThreadAnd when reconnectThread sets the socket to null just writeThread switches to socketcloseSo it happened a null pointer exception and WebsocketWriteThread does not catch null pointer exceptionit only catches IOExceptionso the entire application crashed Environmentplease complete the following information Version used Java version Operating System and version Android Were getting connection timeout on Android devices for specific networks On WebSocket ErrorjavanetConnectException failed to connect to apichatcom f c fb cef bdef d port from port connect failed ETIMEDOUT Connection timed out Please suggest us how to fix this Thanks I was looking for an alternative to the chat server instructions mentioned in Apparently running the examples used to be as simple as this shell ant java cp buildexamplesdistjavawebsocketjar ChatServer java cp buildexamplesdistjavawebsocketjar ChatClient When I tried building it now using Maven or Gradle the classes under srcmainexample werent being compiled so I had to manually javac them and then download SLF J dependency jars Maybe there should be a simple build task so you can do for example gradle example or mvn example to run the examples 