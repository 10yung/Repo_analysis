Hello This pull request improves the build script of this project Specifically it adds missing Make dependencies so that the targets of the project are regenerated correctly whenever there are updates to any of the dependent source files In this way the project is incrementally built Note that this fix follows the best practices for tracking dependencies automatically through gcc MD For more details see here What do I need to do for him to run on IOS please Are these headers supposed to be used If so could we add them to the CMakeListstxt Value stored to detectblocksize during its initialization is never read Enables automatic builds of ZopfliPNG for x Windows AppVeyor only needs to be enabled on Adds continuous integration with Travis Builds both zopfli and zopflipng with both gcc and clang Is anyone aware of a golang binding for the library I tried the pure golang version gozopfli but it is significantly slower and slightly less effective In some textures for d graphics it doesnt matter what some channels are For example red doesnt matter for metallicRoughnessTexture in gltf Would it help for better compression if you could modify values in those channels When compiling zopfli for Win using MINGWW I got a warning about invalid typecasting and a malloc value being out of potential range I fixed this issue with a patch Im proving Please feel free to use it The thing is that in Win malloc takes an byte unsigned value while in Win it takes a byte value Int is always bytes even in Win That effects OptimizeHuffmanForRle mostly win fixespatchtxt This is CodeSafe Team we found a unused value in zopfli See the value assigned to detectblocksize seeme unused and it will be overwrite at Since Im unfamiliar with zopfli please forgive me if there is anything wrong with my description Qihoo CodeSafe Team