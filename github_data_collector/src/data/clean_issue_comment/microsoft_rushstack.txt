 Please prefix the issue title with the project name ie rush apiextractor etc Is this a feature or a bug Feature x Bug Please describe the actual behavior Totally new to rush and started by following the getting started docs here When I run rush update I get an error that not following policy yet my git config is valid Checking Git policy for tmandric in devscratchrushstack master rush update Rush version is not currently installed Installing Trying to acquire lock for rush Deleting old files from Usersmandricrushnodev rush Copying Usersmandricdevscratchrushstackcommonconfigrushnpmrc Usersmandricrushnodev rush npmrc Running npm install in Usersmandricrushnodev rush Successfully installed Rush version in Usersmandricrushnodev rush Rush MultiProject Build Tool Nodejs version is LTS Starting rush update Checking Git policy for this repository Hey there To keep things tidy this repo asks you to submit your Git commits using an email like one of these patterns users noreply github com travisexample org but yours is configured like this Milan Andric mandricgmailcom To fix it you can use commands like this git config local username Mr Example git config local useremail mrexampleusersnoreplygithubcom Aborting so you can go fix your settings Or use bypasspolicy to skip mandric in devscratchrushstack master cat gitconfig user email mandricgmailcom name Milan Andric If the issue is a bug how can we reproduce it Please provide detailed steps and include a GitHub branch if applicable Your issue will get resolved faster if you can make it easy to investigate What is the expected behavior My git config looks like it should be valid If this is a bug please provide the tool version Nodejs version and OS Tool rush Tool Version rush Node Version nodev Is this a LTS version yes Have you tested on a LTS version yes OS OSX Is this a feature or a bug Feature X Bug i have a package componentlibrary in my rush repo which is using rollup for build When i run the build command i get this error Error Cannot find module rollupplugintypescript Require stack Userstimothyrichardsongosrcphoenixmonorepopackagescomponentlibraryrollupconfigjs Userstimothyrichardsongosrcphoenixmonorepocommontempnodemodulesrollupdistbinrollup Error Cannot find module rollupplugintypescript Require stack Userstimothyrichardsongosrcphoenixmonorepopackagescomponentlibraryrollupconfigjs Userstimothyrichardsongosrcphoenixmonorepocommontempnodemodulesrollupdistbinrollup at FunctionModuleresolveFilename internalmodulescjsloaderjs at FunctionModuleload internalmodulescjsloaderjs at Modulerequire internalmodulescjsloaderjs at require internalmodulescjshelpersjs at Objectanonymous Userstimothyrichardsongosrcphoenixmonorepopackagescomponentlibraryrollupconfigjs at Modulecompile internalmodulescjsloaderjs at Objectrequireextensionscomputed as js Userstimothyrichardsongosrcphoenixmonorepocommontempnodemodulesrollupdistbinrollup at Moduleload internalmodulescjsloaderjs at FunctionModuleload internalmodulescjsloaderjs at Modulerequire internalmodulescjsloaderjs npm ERR code ELIFECYCLE npm ERR errno npm ERR aimlcomponentlibrary buildcomponents rollup c npm ERR Exit status npm ERR npm ERR Failed at the aimlcomponentlibrary buildcomponents script npm ERR This is probably not a problem with npm There is likely additional logging output above the rushrootpackagescomponentlibrarynodemodulesbin dir in the package is symlinked to rushrootcommontempnodemodulesbin rollupplugintypescript is intalled in rushrootcommontempnodemodules ToolRUSH Tool Version Node Versionv Is this a LTS version Have you tested on a LTS version OSOSX The reason being for use in a new Webpack plugin Coming soon Is this a feature or a bug x Feature Bug Please describe the actual behavior nonull only allows null in comparisons not What is the expected behavior It would be nice if nonull allowed null to be used in and comparisons I understand that rushstack sets eqeqeq to always so this situations does not arise in typical rushstack usage However for my project Id like to set eqeqeq error always null ignore This means eqeqeq allows me to do foo null to check against both null and undefined However nonull flags this as a bad usage of null Currently gulpcorebuildsass passes a hardcoded browser range including IE to autoprefixer Officially IE reaches end of support on January Internet Explorer IE will reach end of support on January From this point forward IE will be the only supported version of Internet Explorer on Windows Server and Windows Embedded Standard IE is available via Microsoft Update Catalog Windows Update and Windows Server Update Service WSUS Go here to learn more IE requires a number of vendor specific prefixes particularly with flex grid Dropping IE from the supported browser range will reduce emitted CSS size This change would impact both first and thirdparty SharePoint developers We may consider making the browser list configurable if devs require that level of configuration Im happy to raise the PR The above change may need to be a major bump to gulpcorebuildsass cc iclanton lijunle patmill Is this a feature or a bug x Feature Bug Please describe the actual behavior My needs would be satisfied by wberns proposal here We are looking to create a devwatch workflow based partially around a buildwatch bulk task but we need to be able to scope the run to specific projects in our monorepo In the meantime the ability to apply to and from flags to the rush list command would enable us to spawn watch processes for the required projects from a Node script JSON output would be a bonus If the issue is a bug how can we reproduce it Please provide detailed steps and include a GitHub branch if applicable Your issue will get resolved faster if you can make it easy to investigate na What is the expected behavior rush list output can be filtered by to and from and possibly output JSON If this is a bug please provide the tool version Nodejs version and OS Not a bug Please prefix the issue title with the project name ie rush apiextractor etc Is this a feature or a bug x Feature What is the expected behavior All of package managers allow to do something like npm install eslint eslintpluginnode eslintpluginreact eslintpresetairbnb However rush forces user to install every package separately and also running rush update every time rush add is executed if s flag is not passed It is worse experience in comparison to common package managers Maybe rush will support shorthand syntax for adding multiple packages at a time Eg rush add package package package By default the SassTask config is current set to tslint however as I understand the default linter has been update to rushstackeslintconfig Is there any reason this hasnt been updated Please prefix the issue title with the project name ie rush apiextractor etc Is this a feature or a bug Feature x Bug Please describe the actual behavior Assuming I have a rush project with packages in as long as Im trying to resolve some pnpm eslint issues by manual root creation of nodemodules second in packageswhatever when i type rush add p packagename in packageswhatever directory dependency is added to package at What is the expected behavior I expect rush to detect the package as close as possible and add dependency there not to the topmost one If this is a bug please provide the tool version Nodejs version and OS Tool Rush Tool Version Node Version Is this a LTS version yes Have you tested on a LTS version yes OS Mac OS X also PNPM is used