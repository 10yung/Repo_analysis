I wouldnt call this PR ready until someone can confirm that this is a real fix I attempted to use the small reproduction of the thread safety issue but could not get it to fail locally In general though this puts a semaphore around access to the ISO Dataconfig ensuring that threads arent entering this method during another threads execution of this With i ndata updated to in gemspec tests fail please fix the failures so newer version of i ndata can be used bundle install Fetching gem metadata from Resolving dependencies Using rake Using concurrentruby Using i n Using minitest Using threadsafe Using tzinfo Using zeitwerk Using activesupport Using bundler Fetching i ndata was Installing i ndata was Using sixarmrubyunaccent Using unicodeutils Using countries from source at Using difflcs Using geocoder Using miniportile Using money Using nokogiri Using retryable Using rspecsupport Using rspeccore Using rspecexpectations Using rspecmocks Using rspec Bundle complete Gemfile dependencies gems now installed Bundled gems are installed into vendorbundle debiansidpravivatapiforgedebiangitrubyteamrubycountriesupstream bundle exec rake usrbinruby Ihomepraviforgedebiangitrubyteamrubycountriesupstreamvendorbundleruby gemsrspeccore libhomepraviforgedebiangitrubyteamrubycountriesupstreamvendorbundleruby gemsrspecsupport lib homepraviforgedebiangitrubyteamrubycountriesupstreamvendorbundleruby gemsrspeccore exerspec pattern spec specrb color warnings homepraviforgedebiangitrubyteamrubycountriesupstreamlibcountriescountryrb warning method redefined discarding old startofweek homepraviforgedebiangitrubyteamrubycountriesupstreamlibcountriescountryrb warning previous definition of startofweek was here Run options include focustrue exclude perftrue All examples were filtered out ignoring focustrue homepraviforgedebiangitrubyteamrubycountriesupstreamvendorbundleruby gemsmoney libmoneymoneyrb warning method redefined discarding old localebackend homepraviforgedebiangitrubyteamrubycountriesupstreamvendorbundleruby gemsmoney libmoneymoneyrb warning method redefined discarding old usei n FFFF Failures ISO Country alltranslated should return an alphabetized list of all country names translated to the selected locale FailureError expectcountriesfirstto eqAfghanistan expected Afghanistan got Aruba compared using speccountryspecrb in block levels in top required ISO Country alltranslated should return an alphabetized list of all country names in English if no locale is passed FailureError expectcountriesfirstto eqAfghanistan expected Afghanistan got Aruba compared using speccountryspecrb in block levels in top required ISO Country translations should return an hash of all country names translated to the selected locale FailureError expectcountriesfirst to eqAF expected AF got AW compared using speccountryspecrb in block levels in top required ISO Country translations should return an hash of all country names in English if no locale is passed FailureError expectcountriesfirst to eqAF expected AF got AW compared using speccountryspecrb in block levels in top required Finished in seconds files took seconds to load examples failures Failed examples rspec speccountryspecrb ISO Country alltranslated should return an alphabetized list of all country names translated to the selected locale rspec speccountryspecrb ISO Country alltranslated should return an alphabetized list of all country names in English if no locale is passed rspec speccountryspecrb ISO Country translations should return an hash of all country names translated to the selected locale rspec speccountryspecrb ISO Country translations should return an hash of all country names in English if no locale is passed The standard lists no subdivisions for Faroe Islands Update to match current ISO for DK EE FI CZ Sorry I wasnt able to find a way to access all the ISO language codes Is that something we can easily do with this gem What we see on your github repositories branch doesnt match to what we get after bundle installing your gem To repeat this issue remove all countries gem installations create a gemfile with this line and make a bundle install gem countries go to the folder where its installed and check for this changes for example you wont find any You may even add this and theres still will be the same difference with the master branch gem countries git branch master Portugual Portugal Closes We keep having this come up at work It looks like there was already a PR for this but just incase it would reduce dev friction our side not to maintain a fork just to avoid this Fixes 