Allows to pass in array of roles not just attributes makes things a little easier when dealing w arrays and not having to use calluserfuncarrayUserwhereIs admin manager get which looks clunky In my usecase a User can view some Data in case the Data belong to Users Client Im implementing this with the Bouncer Ownership feature BouncerallowusertoOwnDataclassto view BouncerownedViaDataclass function data caller return callerclientscontainsdataclientid This works fine But now a User can also edit Data in case the Data is created by the User If I do this then the user can edit and view the same group of Data BouncerallowusertoOwnDataclassto view edit How can I have different ownerships for various abilities Like this BouncerownedViaDataclass function data caller if ability is view return callerclientscontainsdataclientid else if ability is edit return dataownerscontainscallerid I understand that this section isnt for for support but I think the question and answer could benefit more users In my application I have users and teams teams extends Illuminate Foundation Auth Access Authorizable and uses the HasRolesAndAbilities trait and when I apply permissions to specific models Im doing it by either allowing a user or team a certain ability And then one or more teams could be added to a user Now when I want to check if a user has access to something it would make sense to keep the usercanview or usercanview model But that would only check the abilities applied directly to the user or by the users roles What would be the best way to achieve this so that it would also check the teams access Right now Im overriding the can method on the user model to the following public function canability arguments check appGateclassforUserthischeckability arguments ifcheck true return check if issetthisrelations teams thisload teams foreachthisteams as team check appGateclassforUserteamcheckability arguments ifcheck true return check return false And that seems to work though I havent tested it all that well yet But is there a better way to do this One thought I had was to try using the Gateafter to make the extra check instead but it felt more messy and in the end it didnt seem that bouncer respected that at all Also keep up the good work I think bouncer is really powerfull does a good job and is very flexible when it comes to allowingdenying permissions for different stuffs In relation to issue Hi When I create following Role Model abilities php BouncerabilityfirstOrCreate name list title List roles entitytype Roleclass BouncerabilityfirstOrCreate name read title Read roles entitytype Roleclass Entries in DB have the right entitytype codeSilber Bouncer Database Rolecode When allowing a specific role to list and read Role Model with following command php Bouncerallowadministratorto list read Roleclass Its seems not finding existing abilities and create new ones with entitytype coderolescode After having a look into source code it seems that when using codeforModelentity truecode into codefindAbilitycode method from codeFindsAndCreatesAbilitiesphpcode file the model class name is retreived using codeentitygetMorphClasscode which returns coderolescode instead of the real entity class name How can I fix it regards Make query on database where authority in most cases the authuser is created At the moment if Bouncer is used on multi tenant application this query looks up in default DB which is given inside configdatabasedefault With this change nothing would break and it it will make the query in proper DB Poking around in the code I see references to Constraints Silber Bouncer Constraints and associated classes I have played around with them some and even got them to write out their configuration to the database but I cant figure out how to actually use them They appear to be completely undocumented and I cant quite figure out how they tie into things although they also appear to be VERY powerful If you could get me started on using them I could whip up some documentation for them I already created a holding page on the Wiki Hi When I use softdelete with my user Model and try to delete a user all assigned roles assigned are completely removed from my DB and I cant have a real soft delete behavior How can I activate softdelete on role assigned So Ill be able to restore my users with their origin roles regards Is it possible to query a model based on its access for a given user For example a user could own its own models but it could also have been given access to a specific model example below Bouncerallowuser toOwnPostsclass Bouncerallowuser toview post Append this query to somehow get all posts that use has view access for posts Postsget Would it be possible to fetch all Posts based on if the user has access to view it If thats not currently possible I think its something that would be really useful and make a lot of sense If it isnt currently possible what would be the best way to acheive something like this in the meanwhile Might be be same questions asked in Hi Id like to override assignedroles model to add Auditable trait which add timestamps and ID of user responsible of action on the model but I dont find any Model for tables others than Ability and Role How can I override other Bouncer Models regards