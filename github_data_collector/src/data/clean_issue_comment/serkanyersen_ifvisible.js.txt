Bumps handlebars from to details summaryChangelogsummary Sourced from handlebarss changelog v November th Bugfixes fix add noprototypebuiltins eslintrule and fix all occurences f f d fix add more properties required to be enumerable Chores Build fix use instead of c b f add chai and dirtychai and sinon for cleaner testassertions and spies deprecate old assertionmethods e e ba dad a Security The properties proto defineGetter defineSetter and lookupGetter have been added to the list of properties that must be enumerable If a property by that name is found and not enumerable on its parent it will silently evaluate to undefined This is done in both the compiled template and the lookuphelper This will prevent new RemoteCodeExecution exploits that have been published recently Compatibility notes Due to the securityfixes The semantics of the templates using proto defineGetter defineSetter and lookupGetter in the respect that those expression now return undefined rather than their actual value from the proto The semantics have not changed in cases where the properties are enumerable as in js proto some string The change may be breaking in that respect but we still only increase the patchversion because the incompatible usecases are not intended undocumented and far less important than fixing RemoteCodeExecution exploits on existing systems Commits v November th Bugfixes fix use Stringfield in lookup when checking for constructor d test add fluent API for testing Handlebars c ac c Compatibility notes no incompatibility are to be expected trtable truncated details details summaryCommitssummary c c b v c d Update release notes f f d fix add noprototypebuiltins eslintrule and fix all occurences fix add more properties required to be enumerable ba testchore add chaiexpect and sinon to runtimeenvironment dad test add sinon as global variable to eslint in the specs a test add sinonjs for spies deprecate current assertions e e chore add chai and dirtychai for better test assertions c b f fix use instead of de d v Additional commits viewable in compare view details br Dependabot compatibility score Dependabot will resolve any conflicts with this PR as long as you dont alter it yourself You can also trigger a rebase manually by commenting dependabot rebase dependabotautomergestart dependabotautomergeend details summaryDependabot commands and optionssummary br You can trigger Dependabot actions by commenting on this PR dependabot rebase will rebase this PR dependabot recreate will recreate this PR overwriting any edits that have been made to it dependabot merge will merge this PR after your CI passes on it dependabot squash and merge will squash and merge this PR after your CI passes on it dependabot cancel merge will cancel a previously requested merge and block automerging dependabot reopen will reopen this PR if it is closed dependabot ignore this patchminormajor version will close this PR and stop Dependabot creating any more for this minormajor version unless you reopen the PR or upgrade to it yourself dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency unless you reopen the PR or upgrade to it yourself dependabot use these labels will set the current labels as the default for future PRs for this repo and language dependabot use these reviewers will set the current reviewers as the default for future PRs for this repo and language dependabot use these assignees will set the current assignees as the default for future PRs for this repo and language dependabot use this milestone will set the current milestone as the default for future PRs for this repo and language You can disable automated security fix PRs for this repo from the Security Alerts page details Any way to destroy all listener for ifVisible After status changed from active to idle once idle been fired incorrect For example when i keep moving mouse after status changed from idle to active idle still fired even througn my mouse never stopped moving When idle checking is on every mouse move keystroke and scroll event calls wake which iterates through an array of old timers and clears them though only effectively clearing the last timer which would be the only one ever active This array grows unbounded with each event An array should not be used here Current coffeescript trackIdleStatus timer wakeUp timermapclearTimeout ifvisiblewakeup if status isnt active idleStartedTime new Date timerpush setTimeout ifvisibleidle if status is active idleTime Fix coffeescript trackIdleStatus timer null No array just a reference to the last timeout id wakeUp clearTimeouttimer Clear previous timeout A noop if the timeout already ran ifvisiblewakeup if status isnt active idleStartedTime new Date timer setTimeout ifvisibleidle if status is active idleTime My project is ASPNET with C Web Form My web page will open another web page by windowopen But I switch the new page on Google Chrome the original web page with countdown will be trigger idle event The idle event will run my logout mechanism and redirect to login page How can I prevent switching web page to trigger idle event Would be cool to be able to bind new ifvisible instances on procedurally created windows Ie JavaScript const w windowopen const wVisible new ifvisiblew wVisibleonblur Hello I unfortunately have to support IE in my application and I noticed that users get an invalid calling object error at the line that ifvisiblejs is loaded heres the complete JS file look at line Would you know by any chance what part of the code would trigger this and if its an easy fix Thanks for your help gnutix version I have the current code ifvisiblesetIdleDuration ifvisibleidlefunction consolelogidle documentbodystyleopacity ifvisiblewakeupfunction consolelogwakeup documentbodystyleopacity instead of setInterval this will not call the callback if the user is idle ifvisibleonEvery function consoleloginterval the interval initially gets called correctly if I switch tabs then get back to the page wakeup is fired however the interval doesnt resume documentreadyfunction ifvisiblesetIdleDuration ifvisibleidlefunction var msg No activity detected in the last seconds if auth true msg br You will be logged out in seconds alertWTF Messagespan idtimer msg span function showmsg msg br You will be logged out in count seconds documentgetElementByIdtimerinnerHTML msg countcount if count clearIntervalcounter return var count var countersetIntervalshowmsg windowlocationhref mediaphp The above code executes on page load and it shouldnt It almost seems like idle is set to true by default so it executes by default When window gets or loses focus blur and focus event callbacks are not called I expect that these will be triggered ifvisibleonblur consolelogifvisible blur callback ifvisibleonfocus consolelogifvisible focus callback Standard window events are triggered as expected windowaddEventListenerblur consolelogwindow blur windowaddEventListenerfocus consolelogwindow focus 