 Improve graph rendering in the default graphic mode Using the same symbol for ordinary and boundary commits is misleading Keep o for boundary commits only its similar to other graphic modes Use ACSBULLET for ordinary commits ACSDIAMOND for merges and for the initial commit which is similar to the symbols used in the UTF graphic mode Update tests for the new graph symbols ACSBULLET corresponds to in the alternative charset Graph v uses the initial commit symbol for all branchpoints Graph v uses that symbol only for the first commit in the repository Thats inconsistent I believe the graph v behavior is more reasonable and graph v should be changed to match Its also possible to have a separate boolean flag for branchpoints but I dont feel it would be a significant enhancement Graph v screenshotv Graph v screenshotv Putty doesnt show VT line drawing characters in the UTF mode by default Putty and older doesnt even have that option For the vertical display separator use as background then output the vertical line character on every line For the line number separator use drawgraphic in the default mode only Use drawchars in the ASCII and UTF modes Add a test for vertical lines The display separator is always captured as a line of characters The line number separators are captured correctly x corresponds to ACSVLINE Closes While the documentation from is extremely useful it appears to document one use case which i find likely to be desired Run command in background and display its output only if it failed non zero return code When run inside Putty tig renders the vertical window separator in putty using x characters However the version graph uses correct vertical lines Observed with different fonts Consolas DejaVu Sans Mono Fira Mono Fixedsys Inconsolata Lucida Console Lucida Sans Typewriter Observed with putty and Tig and the current git versions are affected usrbintig version tig version ncursesw version readline version srctig version tig version gca d ncursesw version readline version The system running Putty is Windows the system running tig is Ubuntu The described behavior corresponds to diffviewlinegraphics utf If its ascii the vertical bar is rendered using but the graph becomes less pretty For default x is used for the vertical bar and the graph looks even worse than in the ascii mode The graph is rendered using letters that dont even look like lines o makebuiltinconfig Mqk Merge pull request x o Add default bindin x o Add option to star oqj Introduce reflog v o Fix lstree treeish I suspect that the vertical window separator is rendered using the default mode even though the utf mode is in effect Apparently putty has an issue with diffviewlinegraphics default I would consider this issue resolved if the window separator renders in the utf mode correctly puttytig Not sure if this is an intended feature or a bug The behaviour of tig show when given a partial SHA on the command line appears to be if the SHA is long enough to be unique then operate on that SHA if there is no match for the given partial sha then operate on HEAD if there are multiple matches then operate on HEAD While the first case is correct the latter two cases are unexpected The behaviour differs from plain git show where the latter two cases result in error message being displayed Showing HEAD commit when it was not requested seems odd and potentially very confusing to user I see this with both tig Ubuntu and Fedora All Its possible tig does this and I dont know the right keystrokes But maybe not and Id like to make a feature request Namely I was wondering if tig blame can colorize not just the commit hash on the far left but also somehow shade the code on the right so that I can see blocks of commits per person So its easy to say Oh this chunk came from Alice this from Bob Kind of like how vcannotate or tkcvsblame work git blame supports L option with which we can supply a range of lines to blame and git outputs the blame for only those lines This comes in handy when invoking from within an editor say Vim For example to view the blame from lines to I could say git blame L Two issues with tig tig does accept the same option However tig outputs all lines in the file This means for the example above even though Im interested in the lines towards the bottom tig shows the whole file and Ive to scroll lines for the view Im interested in Any chance this can supported To tig Ive to specify it as L it seems to be confused if I say L with white space after L The spacing between the commitauthor and graph is off when there are multiple authors with a significant difference in the length of their names eg Below is an anonymized example from my own repository The first author had characters in their name the second has ABCDEFGHIJ M live originlive Merge branch stable into live ABCDEFGHIJKLMNOPQ M originstable Commit message First of all thanks for Tig I think the two features in the title would make the refs view much friendlier to use Ordering I think is a musthave as it is most likely that less traversing will be needed to access the desired branch Showing unpulledunpushed commits would remove extra steps to actively fetch and compare all recent branches for anything left out