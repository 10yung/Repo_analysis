Include some missing requirements I was confused why my build didnt work after exporting my variablesturns out its been overwritten by the one in the Makefile Im using linux kernel and the following clang and rust versions The make command succeds for me but I get the following warning Seems like the module compiles successfully but the linking to rust library is broken WARNING rustmain usrsrcrustkobuildhelloko undefined Let me know if more information is needed to debug this issue roothost rustko rustc version rustc nightly f roothost rustko clang version clang version tagsRELEASE final Target x unknownlinuxgnu Thread model posix InstalledDir optrhllvmtoolset rootusrbin rustup run nightly make KERNELBUILDPATHlibmodules arch build CARGOhomefrolcargobinxargo error failed to run rustc to learn about targetspecific information Caused by process didnt exit successfully rustc cratename printfilenames sysroot homefrolxargo Z forceunstableifunmarked target x unknownnonegnu cratetype bin cratetype rlib cratetype dylib cratetype cdylib cratetype staticlib cratetype procmacro exit code stderr error Error loading target specification Field targetcintwidth in target specification is required help Use print targetlist for a list of builtin targets I have updated the x unknownnonegnujson file with the version from rustbareboneskernel but still cannot get through error rustup run nightly make KERNELBUILDPATHlibmodules arch build CARGOhomefrolcargobinxargo Compiling core v Compiling kernel sys v Compiling log v Compiling clangsys v error Error loading target specification Could not find specification for target x unknownnonegnu help Use print targetlist for a list of builtin targets error Could not compile core warning build failed waiting for other jobs to finish error build failed make mntstorageprojectslinuxkernelbasecamprustkobuildMakefile mntstorageprojectslinuxkernelbasecamprustkobuildlibhelloa Error make Makefile modulemntstorageprojectslinuxkernelbasecamprustkobuild Error make Makefile all Error Can anyone help me The project doesnt get compiled out of the box with rustc nightly bf a e b Instead of the forked version of bindgen which doesnt get compiled I used the original one which generates a kernel binding that uses std crate everywhere A snippet looks like pub struct IncompleteArrayFieldTstdmarkerPhantomDataT impl T IncompleteArrayFieldT inline pub fn new Self IncompleteArrayFieldstdmarkerPhantomData inline pub unsafe fn asptr self const T stdmemtransmuteself inline pub unsafe fn asmutptr mut self mut T stdmemtransmuteself inline pub unsafe fn asslice self len usize T stdslicefromrawpartsselfasptr len inline pub unsafe fn asmutslice mut self len usize mut T stdslicefromrawpartsmutselfasmutptr len While compiling I get the following errors a lot of similar ones because of use of std crate error E failed to resolve Could not find marker in std stdsrcoskernelrs pub struct IncompleteArrayFieldTstdmarkerPhantomDataT Could not find marker in std I wonder how the original project was even compiled Any idea how can I get around the issue fix When I run make I get the error No rule to make target modules What am I doing wrong Ive been forced to remove the gcsections line as it removes functions including UnwindResume causing errors at link time This is only apparent if youve started using something from the stdlib that can panic as otherwise there are no references to UnwindResume but for my rot branch I have been unable to build with gcsections 