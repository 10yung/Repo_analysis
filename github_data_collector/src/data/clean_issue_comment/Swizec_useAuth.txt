Bumps handlebars from to details summaryChangelogsummary Sourced from handlebarss changelog v November th Bugfixes fix add noprototypebuiltins eslintrule and fix all occurences f f d fix add more properties required to be enumerable Chores Build fix use instead of c b f add chai and dirtychai and sinon for cleaner testassertions and spies deprecate old assertionmethods e e ba dad a Security The properties proto defineGetter defineSetter and lookupGetter have been added to the list of properties that must be enumerable If a property by that name is found and not enumerable on its parent it will silently evaluate to undefined This is done in both the compiled template and the lookuphelper This will prevent new RemoteCodeExecution exploits that have been published recently Compatibility notes Due to the securityfixes The semantics of the templates using proto defineGetter defineSetter and lookupGetter in the respect that those expression now return undefined rather than their actual value from the proto The semantics have not changed in cases where the properties are enumerable as in js proto some string The change may be breaking in that respect but we still only increase the patchversion because the incompatible usecases are not intended undocumented and far less important than fixing RemoteCodeExecution exploits on existing systems Commits v November th Bugfixes fix use Stringfield in lookup when checking for constructor d test add fluent API for testing Handlebars c ac c Compatibility notes no incompatibility are to be expected trtable truncated details details summaryCommitssummary c c b v c d Update release notes f f d fix add noprototypebuiltins eslintrule and fix all occurences fix add more properties required to be enumerable ba testchore add chaiexpect and sinon to runtimeenvironment dad test add sinon as global variable to eslint in the specs a test add sinonjs for spies deprecate current assertions e e chore add chai and dirtychai for better test assertions c b f fix use instead of de d v Additional commits viewable in compare view details br Dependabot compatibility score Dependabot will resolve any conflicts with this PR as long as you dont alter it yourself You can also trigger a rebase manually by commenting dependabot rebase dependabotautomergestart dependabotautomergeend details summaryDependabot commands and optionssummary br You can trigger Dependabot actions by commenting on this PR dependabot rebase will rebase this PR dependabot recreate will recreate this PR overwriting any edits that have been made to it dependabot merge will merge this PR after your CI passes on it dependabot squash and merge will squash and merge this PR after your CI passes on it dependabot cancel merge will cancel a previously requested merge and block automerging dependabot reopen will reopen this PR if it is closed dependabot ignore this patchminormajor version will close this PR and stop Dependabot creating any more for this minormajor version unless you reopen the PR or upgrade to it yourself dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency unless you reopen the PR or upgrade to it yourself dependabot use these labels will set the current labels as the default for future PRs for this repo and language dependabot use these reviewers will set the current reviewers as the default for future PRs for this repo and language dependabot use these assignees will set the current assignees as the default for future PRs for this repo and language dependabot use this milestone will set the current milestone as the default for future PRs for this repo and language You can disable automated security fix PRs for this repo from the Security Alerts page details The main change suggested in this PR is to start in the isAuthenticating state I have updated the createreactapp example to show a usecase for this change In the example Ive added a PrivateRoute component to handle routes which should only be visible to logged in users As you may see the logic will fail if both isAuthenticating and isAuthenticated is false in the first render The second change is to return an error object form useAuth if present Typically we want to send the user to a login page if they are not authenticated but this may result in a redirect loop if an error occurs By exposing the error object we can prevent this useAuth is doing great as an opensource project were at k stars So I recently bought useAuthdev and put the gatsby example page up This is an okay start but we need something better Unfortunately I dont have bandwidth to make the site myself And I suck as a designer too Therefore I want to open this up as a request for help for webdev newbies who want to flex their skills You can use this as a learning opportunity for Gatsby or maybe Next React design frontend whatever you like Use it in your portfolio to land paying gigs I might have some in the pipeline have a project to show at interviews etc Up to you First Im thinking of this as a volunteeropensourceforexperienceexposure project useAuth itself is pure opensource without a business model and I want to keep it that way Thats why Im looking for newbies to do this as a learning opportunity If that works for you Id be excited if something happens by mid December Going live in january would be kickass I can help with guidance and reviewing PRs I dont have bandwidth to get handson involved If you start by sketching some designs that would be wonderful The site needs to do these jobs explain why useAuth exists explain who its for explain what it does provide documentation on how to use it link to live examples preferably be a live example itself needs to link to GitHub and explain useAuth is opensource the site itself needs to be opensource site should work on mobile and web needs to be easily hostable on Zeit because I bought the domain there and Im too lazy to move I can write copy for all of this Anything else is not important as long as the site passes the looks cool test and doesnt get in the way of doing its jobs from I really like and as inspiration you are the ideal user for this site Anyone who wants to add authentication to their React app and doesnt know how Interested Leave a comment ask questions ping me on twitter or just get started I thought there was some confusing wording in the readme about using cookies and localstorage cookie in local storage with your users information I didnt think it was possible to store a cookie in localstorage You either store info in a cookie or store info in local storage but not a cookie in local storage It says user information If this is nonsecret stuff from the ID token like name I suppose thats ok but as I understood Auth was following all the best practices and not storage sensitive secrete info in localStorage since it could be compromised by rd party scripts Maybe clarify what this user information is so users dont get worried and think this library is risky useAuth works pretty great for web but what about React Native or Ionic Is there any plan to add the support Hi my question might be specific to the general way of testing Context API in React that acts as a singleton I believe its a great help to showcase how is this useAuth library is going to be tested since its seems like a singleton Thanks Hi there Does this support the pkce flow Chrome extension flow