Use the cayley web ui to add a quad ie test testvalue Do a query ie gV SavetestAll Get the following result result test value id expected result test value id This was tested in and does not happen Using windows x release builds Depends on Reviewablestart This change is img src height alignabsmiddle altReviewable Reviewableend Depends on Reviewablestart This change is img src height alignabsmiddle altReviewable Reviewableend Depends on Define a Match step in LinkedQL that accepts a subgraph pattern and return entities matching the graph Example go VertexMatch Will return all the entities which have a property pointing to Bob Reviewablestart This change is img src height alignabsmiddle altReviewable Reviewableend Followup tasks to Prefixes methods iddan rename property string IRI should replace saveIRI tag for aliasing property name to something else renameReverse There is no such operator in Gremlin but there is one in MongoDBs aggregation iddan properties called empty should save all properties requires PathsavePath dennwc entity and entities to return only entities Currently it returns values as well iddan dennwc Generic documents reverseProperties should wrap saved properties in the document with reverse Nicer API for automatic type conversion iddan Valid ID string to IRI or BNode IRI to properties path Refactor Filter and Operator iddan x Numeric operators Pattern operators matchpattern should be used for flat and deep matching of objects using structure pattern iddan For example javascript match address street id yehudahalevi number x Rename view to visit iddan Make the schema the source of truth iddan Missing Information about min cardinality of fields can be used in some type systems and in all runtimes Depends on Codegenerate LinkedQL Go client according to the LinkedQL schema This PR includes a minimal implementation of an OWL inmemory store to support the code generation Missing Documentation and example of integration with the new client library Method to unmarshal received data structures something like jsonUnmarshal but for JSONLD This PR was recreated as the previous one targeted the LinkedQL branch Reviewablestart This change is img src height alignabsmiddle altReviewable Reviewableend MVP implementation of text search based on Bleve There are many capabilities not included in this PR but anything beyond the basic text search should be added in additional PRs Resolves Tasks For KV stores Implement Bleves KV Store instead of creating a file x Update data model to create single property Bleve documents x Hook up searchIndex and searchDelete for quads write and delete x Hook up search configuration to Cayley configuration x Hookup searchConfiguration to Cayley config file and CLI Documentation x Tutorial Detailed documentation of configuration options Reviewablestart This change is img src height alignabsmiddle altReviewable Reviewableend Description When executing javascript gVoutpredicateisa b It is signifcantly slower than javascript gVhaspredicate auniongVhaspredicate b I presume it has to do with the way we use indexes for outis which is not optimized like has Description quad subject nil after removing quads with same subject and adding a new one the same transaction starting with empty store after first transaction quadQuad a to b quadQuad a updated T Z schemaDateTime after second transaction quadQuad nil updated T Z schemaDateTime expected quadQuad a updated T Z schemaDateTime Steps to reproduce the issue go package main import log os time githubcomcayleygraphcayley githubcomcayleygraphcayleygraph githubcomcayleygraphcayleygraphkvall githubcomcayleygraphquad githubcomdavecghgospewspew const dbpath dbleveldb dbtype leveldb dbpath dbbolt dbtype bolt func main dbExists err existsdbpath if err nil logFatalerr if dbExists initialize the database err graphInitQuadStoredbtype dbpath nil if err nil if err graphErrDatabaseExists logFatalerr store err cayleyNewGraphdbtype dbpath nil if err nil logFatalerr t err timeParsetimeRFC T Z t err timeParsetimeRFC T Z addQuads quadQuad quadMakea to b nil quadMakea updated t nil t cayleyNewTransaction for q range addQuads tAddQuadq err storeApplyTransactiont if err nil logFatalerr logPrintfafter first transaction it storeQuadsAllIterator for itNextnil qu storeQuaditResult logPrintfspewSdumpqu rmQuads quadQuad quadMakea to b nil quadMakea updated t nil addQuads quadQuad quadMakea updated t nil t cayleyNewTransaction for q range rmQuads tRemoveQuadq for q range addQuads tAddQuadq err storeApplyTransactiont if err nil logFatalerr logPrintfafter second transaction it storeQuadsAllIterator for itNextnil qu storeQuaditResult logPrintfspewSdumpqu logPrintfexpected for q range addQuads logPrintfspewSdumpq exists returns whether the given file or directory exists func existspath string bool error err osStatpath if err nil return true nil if osIsNotExisterr return false nil return true err Received results after first transaction quadQuad a to b quadQuad a updated T Z schemaDateTime after second transaction quadQuad nil updated T Z schemaDateTime also dump panicsNPE txTest cayley dump o d leveldb a dbleveldb I commandgo Cayley version v xdev dev snapshot I databasego using backend leveldb dbleveldb I dumpgo writing quads to stdout panic runtime error invalid memory address or nil pointer dereference signal SIGSEGV segmentation violation code x addr x pc x dbce goroutine running githubcomcayleygraphquadnquadsWriterwriteValue xc x x x x Usersmikezopkgmodgithubcomcayleygraphquadv nquadsnquadsgo x githubcomcayleygraphquadnquadsWriterWriteQuad xc x x x e c xc e x e cc xc a x x x Usersmikezopkgmodgithubcomcayleygraphquadv nquadsnquadsgo x githubcomcayleygraphquadnquadsWriterWriteQuads xc xc e x x x x d a xc da Usersmikezopkgmodgithubcomcayleygraphquadv nquadsnquadsgo x d Expected results after first transaction quadQuad a to b quadQuad a updated T Z schemaDateTime after second transaction quadQuad a updated T Z schemaDateTime Output of cayley version or commit hash v Environment details go darwinamd bolt and leveldb both affected For example 