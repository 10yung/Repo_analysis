IE Edge doesnt support the File constructor so Im having immense difficulty in being able to set the name of my blob for upload First I used the third parameter of the FormData javascript const a new FormData aappendphoto photoBlob photopng However it turns out that Edge ignores the third parameter as that simply attempts to convert the Blob into a File like so javascript const b new File photoBlob photopng Ive tried all sorts of dubious approaches ndash such as assigning name to the Blob object but no approaches change the name unless the object is literally a File object How have other people tackled this issue Ive seen many people complaining about issues when uploading files with React Native The best solution today is to use fetch which supports the blob generated in React Native but it lacks progress Libs such as rnfetchblob cant be used in Expo since youd need to eject Many libraries for React Native such as Firebase have upload method that has support for the React Native blob and it would be a great addition to Axios as well What Id like to do is basically await Axiosposturl reactNativeBlob Ive tried different methods with Axios eg by creating FormData with the file details such as uri name and type but then Axios tries to convert the file to base and upload it that way which isnt what I want I dont know how React Native blobs are different from web blobs but Im really hoping that this could be supported in Axios Describe the bug set axiosdefaultretry is not valid js axiosdefaultsretry axiosdefaultsretryDelay Expected behavior axiosdefaultsretry axiosdefaultsretryDelay is in config object Environment Axios Version Additional contextScreenshots Add any other context about the problem here If applicable add screenshots to help explain I keep getting this response when using Axios to get an access token from Instagram My Code async function mintAuthTokenreq any Promisestring const base const queryParams clientid appid clientsecret appsecret granttype authorizationcode redirecturi redirecturi code reqquerycode const endpoint base qsstringify queryParams const login await axiospostendpoint headers contenttype applicationjson consoleloglogin const accessToken logindataaccesstoken const instagramUserID logindatauserid const profilePic logindatauserprofilepicture const userName logindatauserfullname consoleloguserName const firebaseToken await createFirebaseAccountinstagramUserID userName profilePic accessToken return firebaseToken The full error status statusText Bad Request headers contenttype texthtml charsetutf vary AcceptLanguage contentlanguage en date Fri Jan GMT Fri Jan GMT stricttransportsecurity maxage cachecontrol private nocache nostore mustrevalidate pragma nocache expires Sat Jan GMT xframeoptions SAMEORIGIN contentsecuritypolicy reporturi defaultsrc self imgsrc https data blob fontsrc https data mediasrc self blob manifestsrc self scriptsrc self wsswwwinstagramcom unsafeinline unsafeeval blob stylesrc self unsafeinline connectsrc self wsswwwinstagramcom wssedgechatinstagramcom chromeextensionboadgeojelhgndaghljhdicfkmllpafd blob workersrc self blob framesrc self objectsrc none upgradeinsecurerequests xcontenttypeoptions nosniff xxssprotection xaed accesscontrolexposeheaders XIGSetWWWClaim setcookie igdidD E BB C A B B BF C AE Domaininstagramcom expiresMon Jan GMT HttpOnly MaxAge Path Secure rurFTW Domaininstagramcom HttpOnly Path Secure xfbtripid connection close contentlength config url id clientsecretsecret granttypeauthorizationcode redirecturiredirect codesomecode method post data headers Accept applicationjson textplain ContentType applicationxwwwformurlencoded UserAgent axios ContentLength transformRequest Function transformRequest transformResponse Function transformResponse timeout adapter Function httpAdapter xsrfCookieName XSRFTOKEN xsrfHeaderName XXSRFTOKEN maxContentLength validateStatus Function validateStatus request ClientRequest domain Domain domain null events Object eventsCount maxListeners undefined members Array events socket Function abort Function aborted Function error Function timeout Function prefinish Function requestOnPrefinish eventsCount maxListeners undefined output outputEncodings outputCallbacks outputSize writable true last true upgrading false chunkedEncoding false shouldKeepAlive false useChunkedEncodingByDefault true sendDate false removedConnection false removedContLen false removedTE false contentLength null hasBody true trailer finished true headerSent true socket TLSSocket tlsOptions Object secureEstablished true securePending false newSessionPending false controlReleased true SNICallback null servername apiinstagramcom npnProtocol undefined alpnProtocol false authorized true authorizationError null encrypted true events Object eventsCount connecting false hadError false handle Object parent null host apiinstagramcom readableState Object readable true domain Object Is your feature request related to a problem Please describe In our node app we find out it has a similar issue with we set the timeout of axios to ms some timeout error was found in our log while the server endpoint response time was within ms Describe the solution youd like expect timeout error not happen after looked the code Handle request timeout if configtimeout timer setTimeoutfunction handleRequestTimeout reqabort rejectcreateErrortimeout of configtimeout ms exceeded config ECONNABORTED req configtimeout Send the request if utilsisStreamdata dataonerror function handleStreamErrorerr rejectenhanceErrorerr config null req pipereq else reqenddata I suspect that requests and timers are not activated in sync manner maybe we can trigger timeout in the reqend callback or pipe finish callback Describe alternatives youve considered A clear and concise description of any alternative solutions or features youve considered Additional context Add any other context or screenshots about the feature request here introduction The error is not catched and not run debugger But when register debugger interceptorrequest first and then register other interceptorrequest to throw new Error the debugger is triggered Can you tell me why what wrong things with i trying javascript demo axiosinterceptorsrequestuse throw new ErrorMy error debugger axiosinterceptorsrequestusefunction config Do something before request is sent throw new ErrorMy error return config function error Do something with request error return Promiserejecterror axios code Hook up interceptors middleware var chain dispatchRequest undefined var promise Promiseresolveconfig thisinterceptorsrequestforEachfunction unshiftRequestInterceptorsinterceptor chainunshiftinterceptorfulfilled interceptorrejected thisinterceptorsresponseforEachfunction pushResponseInterceptorsinterceptor chainpushinterceptorfulfilled interceptorrejected while chainlength promise promisethenchainshift chainshift thanks for your answer i use headless eg puppeteercore or python s requests could get the result result code with axios let cookieJar new toughCookieJar let instance await axioscreate jarcookieJar withCredentials true httpsAgent new httpsAgent rejectUnauthorized false requestCert true keepAlive true headers useragentMozilla X Linux x AppleWebKit KHTML like Gecko Chrome Safari let res await instancegetbaseUri instancedefaultsheaders referer set the headers instancedefaultsheadersCookie resheaders setcookie res await instancepostbaseUripostUrl the result always get after compare the results that i successed with python code different session has a different token value so i question is is instance simulate to http s session if not the token must be change when i invoke instancepost thanks Fix for following XSS Cheatsheet also fixed JavaScript string problem in only preventing javascript Its impossible for current simple regex to prevent all kind of XSS attacks But I tried to prevent most frequent famous events for attacking without saying no to onlytrue My opinion is although it is good to prevent XSS by checking URL normal users should not suffer from this function Current regex is still too loose Describe the bug Function isValidXss works incorrectly To Reproduce js I just copy paste the function declaration function isValidXssrequestURL var xssRegex bon wjavascript s scriptgi return xssRegextestrequestURL Calling this will result in true isValidXss Expected behavior I expect the previous function call to result in false I see no XSS attack in there Environment Axios Version Allow baseURL to contain query parameters ie dont add in this case 