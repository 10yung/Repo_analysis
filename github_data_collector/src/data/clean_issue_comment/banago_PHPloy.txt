On a local predeploy command if the exit code is greater than stop the deploy process Hello I have a project with large binary files managed by git lfs When deploying a commit with a large file it crashes silently SERVER demo of indexhtml of frjs Back to prompt instead of file etc I managed to find that the issue comes from the memorylimit in PHP that is below the size of the file to upload A test or a specific message would be nice to help users facing this issue in the future Thanks a lot Thank you for you hard work on this project Ive been having a minor issue in that the order of a include seems to make a difference for condition includes For example an ini file with include pathacomposerlock include pathb will not include pathb in the deployment However the reverse does work include pathb include pathacomposerlock Im not certain what the exact issue is but it appears that a conditional include must be listed after the nonconditional include thank you This issue was originally raised in and seems to have been addressed in However as of today it appears that the contents of included directories are always deployed in their entirety even if no changes have been made to their contents This is obviously a big problem with composers vendor directory that may include thousands of files To reproduce Create an ignore rule in gitignore for a directory called temporary Add this line to your phployini include temporary Commit the gitignore changes Create a new directory called temporary Create a file inside it Deploy Deploy again Youll see that the file is reuploaded despite there having been no changes made I am trialing using phploy for our deployment process and everythings a dream so far thank you for your hard work The only trouble Im having is with the base option which appears to be ignored during deploy My company keeps their applications in large monorepos and in the particular test example Im using a WordPress install is included inside of a folder cleverly named wordpress I set base wordpress in the config yet it begins uploading from the parent working directory where the composer files are located Ill include the config file below which I generated using the phploy init command Any thoughts on where I should be looking for the solution yaml staging scheme ftp host HOST path publichtmlsomefolder user USERNAME pass PASSWORD base wordpress Hi Im not understanding setting purgebefore My repo contains dir dir fileindir dir dir fileindir file file phployini production scheme sftp user pass host path varwwwhtdocs port branch master permissions directoryPerm exclude bak exclude log exclude vscode purgebefore dir I do phploy fresh and see in log SERVER production Purging directory dir And in the dir directory there were files only from the repo everything is OK Next I run phploy and dir is cleared up That is the same as if I used purge Is this normal behavior I created a revision file on server with a previous commit hash but when running phploy it simply states Your branch is up to date with originmaster SERVER production No files to upload or delete When clearing the revision file it wants to upload all files When running phploy sync it updates revision to the latest hash Can any one assist Running with debug option gives me remote revision hash but still no files uploaded Is there already an opportunity to support a connection with WebDav protocol When testing what is going to change with list nothing is shown for sub modules this makes the deployment a little more risky Can we look at adding this When using base www and the server does not contain any directories wrong directories will be created On the server the directory pathwww wil be created But the files are put in path without the base directory Looking into phployphp I noticed that directory creation does not take base into account First remote directories are created with base in the filename Then base is stripped and the file is transfered Make sure the folder exists in the FTP server dir explode dirnamefile path ret true Skip mkdir if dir is basedir if dir Loop through each folder in the path abcdtxt to ensure that it exists TODO Can be improved by using filesystemwritepathtofiletxt contents for i count countdir i count i path dir i if issetpathsThatExist path if thisconnectionhaspath thisconnectioncreateDirpath thiscliout Created directory path pathsThatExist path true else pathsThatExist path true filePath thisrepothiscurrentSubmoduleName strreplacethiscurrentSubmoduleName file file data filegetcontentsfilePath It can happen the path is wrong especially with included files if data false thisclierror File not found please check path filePath continue If base is set remove it from filename remoteFile thisbase pregreplace pregquotethisbase file file 