May be more of a timing thing rather than an issue but the latest tags do not include a package manifest Packageswift in them To use with Swift Package Manager you have to specify the master branch instead of version Hey I rarely run on production into an unknown key algorithm issue regarding the crash logs Cannot reproduce the issue so cant tell which domain and which public key algorithm throw NSException exceptionWithNameUnsupported public key algorithm reasonTried to generate the SPKI hash for an unsupported key algorithm userInfonil I dont get why this goes into a crash at all Whats the best way to handle this issue Trustkit iOS iOS iPhone Last Exception Backtrace CoreFoundation x dae c exceptionPreprocess NSExceptionm libobjcAdylib x f f objcexceptionthrow objcexceptionmm TrustKit x d e c TSKSPKIHashCache hashSubjectPublicKeyInfoFromCertificate TSKSPKIHashCachem TrustKit x d c verifyPublicKeyPin sslpinverifierm TrustKit x d ece TSKPinningValidator evaluateTrustforHostname TSKPinningValidatorm TrustKit x d f b TSKPinningValidator handleChallengecompletionHandler TSKPinningValidatorm Hi A few of my users are getting NSRangeException TrustKit Fatal Exception NSRangeException NSCFString substringToIndex Index out of bounds string length Fatal Exception NSRangeException CoreFoundation x ea c exceptionPreprocess libobjcAdylib x dbf f objcexceptionthrow CoreFoundation x e b NSCache init Foundation x f a NSString substringToIndex TrustKit x af getPinningConfigurationKeyForDomain configurationutilsm TrustKit x afa TSKPinningValidator evaluateTrustforHostname TSKPinningValidatorm TrustKit x afa a TSKPinningValidator handleChallengecompletionHandler TSKPinningValidatorm Would appreciate if someone can let me know if they have successfully tested and have an iOS app IN RELEASE using Trustkit with HTTPS WEBSOCKET Since Xcode and version of Carthage static frameworks are supported It would be great if TrustKit could provide a scheme which builds a static framework instead of a dynamic one Im not sure if there will be compatibility issues if TrustKit would completely switched over to static framework if not that would also be an option Hello First and foremost thank you very much for making this excellent library In this PR we propose a new feature custom pin failure reporting Use Case Our reporting server is strict about the JSON format it will receive It cannot be updated by us because its a rdparty service ie Airbrake Using this PR we are able to customize the format that will be sent to our reporting URI thus conforming to what our rdparty service expects Implementation Define new configuration key kTSKPinFailureReportClassName When custom reporting class is used throw an exception unless it inherits from TSKPinFailureReport When no custom reporting class is used default to using original TSKPinFailureReport Write a test confirming the intended usage behavior for kTSKPinFailureReportClassName Add Custom Pin Failure Reporting section in docsgettingstartedmd God speed In version the TrustKit setLoggerBlock method does not really make sense anymore now that TrustKit can be used in nonsingleton mode The logger block will always be applied to all TrustKit instances although the way the API is designed as a class method makes it look like it only applies to the singleton instance This is confusing and inconsistent