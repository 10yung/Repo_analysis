Much thanks for the new breakswidth function in response to Would there be any objection to supporting its use for hms as well r libraryhms libraryggplot df dataframehours hms hmshours ggplotdf aesx hours y hms scaleytimebreaks scalesbreakswidth Error in UseMethodfullseq no applicable method for fullseq applied to an object of class chms difftime I made a simple change in a fork to add fullseqhms and it appears to work fine Im happy to submit as a PR if youre open to it Looking ahead it would be nice to have more intuitive specification from ggplot scaletime similar to datebreaks Although I figured Id start here Thanks for considering Using scales I get the following to my eyes unexpected result percentc percentc percentc percentc So the depending on how many digits I provide something else happens but this only occurs with multiple values If I only provide a single value the result is always no matter how many decimal digits are provided Packages such as prismatic manipulate color properties such as lightness saturation and negation Adding these effects to gradientnpal would allow convenient manipulation of color palettes in ggplot ie scalecolorviridisc and elsewhere r libraryggplot libraryscales libraryprismatic Example implementation gradientnpal function colours values NULL space Lab lighten NULL darken NULL saturate NULL desaturate NULL negate FALSE if identicalspace Lab warningNon Lab interpolation is deprecated call FALSE ramp colourrampcolours forcevalues functionx if lengthx returncharacter if isnullvalues xs seq lengthout lengthvalues f statsapproxfunvalues xs x fx pal rampx if isnulllighten pal prismaticclrlightenpal lighten if isnulldarken pal prismaticclrdarkenpal darken if isnullsaturate pal prismaticclrsaturatepal saturate if isnulldesaturate pal prismaticclrdesaturatepal desaturate if negate pal prismaticclrnegatepal pal Example ggplot scale function scalecolorviridisc function alpha begin end direction option D values NULL space Lab navalue grey guide colourbar aesthetics colour lighten NULL darken NULL saturate NULL desaturate NULL negate FALSE continuousscaleaesthetics viridisc gradientnpalviridispalalpha begin end direction option values space lighten lighten darken darken saturate saturate desaturate desaturate negate negate navalue navalue guide guide Possible uses ggplotdiamonds statdensity daesprice carat fill statdensity geom raster contour FALSE scalecolorviridiscaesthetics fill direction negate TRUE r librarydplyr diamonds groupbycolor summarizeatvarscarat mean ungroup ggplotaescolor carat fill carat geomcol scalecolorviridiscaesthetics fill option A begin end desaturate Proposed fix for TLDR labelnumbersi is currently using short scale prefixes instead of SI prefixes If youd like to keep the old version of the function please let me know what the new name should be and I can add it to this PR eg labelnumbershortscale I could also add a version for the long scale prefixes if desired Heres what changed Adjusted the labelnumbersi function so that it uses SI prefixes Fixed docs to use e instead of e etc Added example to demonstrate prefixes for values Added a couple of new tests Thanks for this release It looks like it delivers great improvements The labelnumbersi uses short scale English prefixes instead of SI prefixes The naming is confusing since with that function name I would expect labels like k M G In several European countries billion is million millions As far as I know there is no SI agreement on what a billion is and the SI recommends using metric prefixes G for E Also the documentation for that function states e when it means e e means multiplied by to the power of Either there is a rationale I am missing or without a breaking change this behaviour will last for a long time If thats the case I hope there is an early bugfix release that breaks backwards compatibility Thanks again Summary The notation with as a power index is often discussed Therefore I thought it is useful to include this notation in scales package and implemented it Example r scientific e e e e e e e e e e scientific exponent exactzero FALSE expression scientific exponent exactzero TRUE expression Im not sure if this should be fixed but it does lead to some confusing behaviour tidyverseggplot r libraryscales trans sqrttrans transinverse transtransform trans sqrttrans transinverse this is what I would expect to happen trans transnewsqrt sqrt functionx ifelsex NAreal x domain c Inf trans inverse NA supCreated on by the reprex package v sup There currently isnt any break label or trans functions for difftime objects There are some excellent functions that do this for difftimes in the bench package that could be used for inspiration And some combination of these functions could be used to generate difftime breaks even for log scales see rlibbench Some ranges seem to break the calculation of the breakstickmarks for these transformed axes It works for y y eg but I havent found an example with more than values that worked r libraryggplot df dataframex ggplotdf aesx geomblank scalexcontinuoustrans scalesexptrans Warning in selftransinverselimits NaNs produced Error in if zerorangeasnumericlimits missing value where TRUEFALSE needed ggplotdf aesx geomblank scalexcontinuoustrans scaleslogittrans Warning in qfunx NaNs produced Warning Transformation introduced infinite values in continuous xaxis supCreated on by the reprex package v sup