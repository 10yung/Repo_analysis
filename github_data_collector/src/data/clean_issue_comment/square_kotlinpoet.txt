It would be nice to be able to create PropertySpecs that do not have types declared and are autoinferred by Kotlin eg val someProperty initialiser over val someProperty type initialiser Right now PropertySpecBuilder requires a Type of some sort and PropertySpecemit also always emits the type info We track a number of issues that stem from the fact that introspecting Kotlin code through mirrors or reflection is unreliable Now that theres proper support for processing Metadata existing API that has been ported from JavaPoet needs to be deprecated and eventually removed in We might need to look into providing more documentation or migration recipes AB is a valid Java identifier but not a valid Kotlin type name escapeIfNotJavaIdentifierescapeIfKeywordfailIfEscapeInvalid none of these method respond to TypeSpecclassBuilderA Bbuild build an invalid type name TypeSpecclassBuilderA Bbuild also build an invalid type name We handle this for functions and can handle them for properties in a similar way I want to add a nullable property to an enum This doesnt currently work using the format function becuase the arg elements are not declared as nullable kotlin TypeSpecenumBuilderSample primaryConstructor FunSpecconstructorBuilder addParameter ParameterSpecbuilder myNullableString StringclassasTypeNamecopynullable true build build addEnumConstant name Rock typeSpec TypeSpecanonymousClassBuilder addSuperclassConstructorParameterS Hello build addEnumConstant name Paper typeSpec TypeSpecanonymousClassBuilder addSuperclassConstructorParameterS null this doesnt compile addSuperclassConstructorParameterCodeBlockofS null workaround build build Resolves Unclear if KotlinPoet should ship with some prebuilts but this is a good starting point at least When defining a MapStringString with Kotlin Poet some of the string values are very long and there isnt a default or way to wrap them at characters in to multiple strings concatenated with on different lines as an IDE does Current functionality kotlin val myMap mapOf key to super long text that doesnt wrap it keeps going and going and going and going and going and going and going and going Desired functionality kotlin val myMap mapOf key to super long text that doesnt wrap it keeps going and going and going and going and going and going and going and going This is kotlins equivalent of a Type and can also just be a regular class The current KTypeasTypeName is in ParameterizedTypeNamekt though and should probably be generified and moved to TypeNamekt The method jvmModifiers in FunSpec breaks the chaining by not returning the Builder There is a similar method in ParameterSpec which does return the Builder This will be a breaking change so it will have to wait till x 