Currently SCD CO sensors do not work out of the box with ESPHome This is because the current code sends an invalid start measurement command with no pressure setting This likely worked for others because they had sensors that had already been configured for continuous measurements and the sensor itself will retain that setting its on board nonvolatile memory So this fixes the start measurement command to be valid Since valid in this case also means disabling altitudepressure compensation the parameter is required and overwrites any stored one it also adds an optional setting to set the measurement altitude It also adds a setting to enabledisable automatic self calibration by the sensor This is somewhat analogous to the baseline measurement resistive VOCCO eq sensors require though the measurement principal is very different and it is not required for normal operation However mine gave somewhat odd readings until I turned it on and let it calibrate but I cant really say for sure it was required I was changing other things at the time Finally it also sets I C clock stretching when the sensor is used on ESP The interface specification says the sensor requires up to ms of stretching but this appears to only be when its doing a daily cycle of some sort Normally it only seems to require a much smaller amount but I was still getting spurious I C errors on ESP until I increased it so this just sets it the maximum the sensor would ever need Description Related issue if applicable fixes esphomeissues Pull request in esphomedocs with documentation if applicable esphomeesphomedocs Checklist x The code change is tested and works locally x Tests have been added to verify that the new code works under tests folder If user exposed functionality or configuration variables are addedchanged x Documentation addedupdated in esphomedocs Description Next set of test cases to cover code generation Also has improvements to code for Python Improved annotations Some improved docs and exceptions and messages Related issue if applicable fixes more tests Pull request in esphomedocs with documentation if applicable NA Checklist x The code change is tested and works locally Tests have been added to verify that the new code works under tests folder If user exposed functionality or configuration variables are addedchanged Documentation addedupdated in esphomedocs Description This effect allows user defined gradients which the effect shifts through The gradient is defined with the gimp gradient format and a user defined length which should be much larger then the number of pixels in the strip Setting flip to true will cause the gradient to change direction on the end Example light platform neopixelbus type GRBW variant SK pin RX numleds name Test neopixel effects addressablegradient length name Fuschia usewhite true gradient GIMP Gradient Name Fuschia Related issue if applicable fixes link to issue fixes Pull request in esphomedocs with documentation if applicable esphomeesphomedocsesphomedocs PR number goes here esphomeesphomedocs Checklist x The code change is tested and works locally Tests have been added to verify that the new code works under tests folder If user exposed functionality or configuration variables are addedchanged x Documentation addedupdated in esphomedocs Description My ESP was unable to do OTA updates with ESPHome After further investigations it turned out that the Task Watchdog kills the OTA process since it blocks all other processes for too long The simple fixworkaround was to add a sleep of ms for every ms s so that other processes could be completed within these ms Therefor the watchdog doesnt kill the OTA anymore and doesnt reset the whole chip Related issue if applicable fixes Pull request in esphomedocs with documentation if applicable Checklist x The code change is tested and works locally x Tests have been added to verify that the new code works under tests folder If user exposed functionality or configuration variables are addedchanged Documentation addedupdated in esphomedocs pauln could you test this fix with your ESP s Description Feit WiFi Smart Dimmers see checksum errors in some situations where a second command is sent to the MCU before the response is received for the first This update imposes a ms delay if there is an attempt to send a second command while a response is outstanding In testing there is a dramatic reduction in checksum errors but a few still slip through Raising the delay to ms didnt eliminate them so a more complicated patch to queue commands until the response is received is probably necessary to eliminate the issue It isnt clear that the bug is worth that level of effort Related issue if applicable fixes Pull request in esphomedocs with documentation if applicable NA Checklist x The code change is tested and works locally Tests have been added to verify that the new code works under tests folder If user exposed functionality or configuration variables are addedchanged Documentation addedupdated in esphomedocs Description This pull request implements support for multiple component libraries and loading additional packages via entry points more details in the feature request linked below The existing component locations are given priority in the existing order A sample component library package Related issue if applicable implementation of Pull request in esphomedocs with documentation if applicable Docs will be written to go with this Checklist x The code change is tested and works locally Tests have been added to verify that the new code works under tests folder If user exposed functionality or configuration variables are addedchanged Documentation addedupdated in esphomedocs Description This adds a support for Adalight protocol support over UART It works best with yaml logger baudrate uart id adalightuart txpin TX rxpin RX baudrate adalight light id adalightleds platform neopixelbus pin GPIO method ESP I S variant SK type GRBW numleds effects adalight uartid adalightuart Pull request in esphomedocs with documentation if applicable esphomeesphomedocsTBD Checklist The code change is tested and works locally Tests have been added to verify that the new code works under tests folder If user exposed functionality or configuration variables are addedchanged Documentation addedupdated in esphomedocs Also fixes Looking at the code I dont see a reason why sleep duration would be required for KEEPAWAKE mode Description Allow custom light components to use the full addressable schema Most importantly addressable effects Related issue if applicable NA Pull request in esphomedocs with documentation if applicable NA Checklist X The code change is tested and works locally Description Dont try to decode output from platformio command doing so fails on py Related issue if applicable NA Pull request in esphomedocs with documentation if applicable NA Checklist x The code change is tested and works locally Tests have been added to verify that the new code works under tests folder I dont think we can test for this since its triggered on reading a stack trace from the logs but it would be nice