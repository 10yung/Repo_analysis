 Reporting an Issue or Missing Feature ToddKlindt and I have been using the module to do some migrations along with Sharegates PowerShell module Its fantastic what weve been able to accomplish if I may be so bold Weve built a module psm file with a bunch of functions we use to drive the migrations In many of the functions the Begin block does connections to common locations Those connections may have been created already by other functions but we dont want to make that assumption because we may call the functions independently We could build some logic into each function but it would be redundant Instead Ive put together a ResolveConnection function that adds new connections to an array and plucks them back out if they already exist powershell ResolveConnection Url Url Credentials Credentials Were calling some of those those functions many times in foreach loops It would be great if we could cache connections wherever we make them so we wouldnt incur the overhead every time we enter one of the functions Thinking it through it seems it could work by adding a Cache switch to ConnectPnPOnline like so powershell newConnection ConnectPnPOnline Cache Url Url Credentials Credentials ReturnConnection The Cache switch would basically be saying Save this connection based on the Url and Credentials If I ask for it again send me the cached version I dont need to reconnect If the Cache switch wasnt there everything would work as it always has This may not prove useful to a lot of people but in situations where weve got lots of iteration it could potentially decrease execution time considerably as well as reducing some of the load on the servers Which version of the PnPPowerShell Cmdlets are you using PnP PowerShell for SharePoint PnP PowerShell for SharePoint X PnP PowerShell for SharePoint PnP PowerShell for SharePoint Online How did you install the PnPPowerShell Cmdlets MSI Installed downloaded from GitHub X Installed through the PowerShell Gallery with InstallModule Other means Reporting an Issue or Missing Feature The returned object for Group using GetPnPUnifiedGroup is missing SiteUrl This happens when I delete a group and then restore the group After restoration the site url is not retrieved and gives an unknown error found Below is a screenshot of the issue However when the same group is accessed via Exchange Online PowerShell the SharePointSiteUrl is populated fine Expected behavior The object returned by GetPnPUnifiedGroup should provide the SiteUrl Actual behavior There is an unspecified error found on the site Url Steps to reproduce behavior Steps Create a group Then delete the group in SharePoint admin center Then restore the group from SharePoint admin center from Recycle bin Use Azure AD app with application permissions to connect to MS Graph in PnP PowerShell Then do GetPnPUnifiedGroup and check the siteurl property Which version of the PnPPowerShell Cmdlets are you using PnP PowerShell for SharePoint PnP PowerShell for SharePoint X PnP PowerShell for SharePoint Online What is the version of the Cmdlet module you are running How did you install the PnPPowerShell Cmdlets MSI Installed downloaded from GitHub X Installed through the PowerShell Gallery with InstallModule Other means Category Question Typo x Bug Additional article idea Expected or Desired Behavior When using PnP Powershell with application permissions and authentication using certificate adding a file to a document library using AddPnpFile should work without error if SitesReadWriteAll permissions are given and consented Observed Behavior In the described setup I get Access denied when trying to upload a file into the library when there are only SitesReadWriteAll permissions Using SitesFullControlAll it works Steps to Reproduce Create a certificate as described here but add only SitesReadWriteAll application permissions Give admin consent WriteHost Login ConnectPnPOnline CertificateBase Encoded BASE ENCODEDPFX Tenant contosoonmicrosoftcom ClientId CLIENTID Url Verbose WriteHost Try to get web w GetPnPWeb WriteHost Web wId WriteHost Try to read the library GetPnPList Identity Documents SPFolderName Documents Upload template list WriteHost Upload file to Location SPFolderName te AddPnPFile Path testtxt Folder SPFolderName Verbose WriteHost Logout DisconnectPnPOnline Result is Login AUSF HRLICH PnP PowerShell Cmdlets Connected to Try to get web Web a f c e f fff a Try to read the library Title Id Url Documents b c d b bba b cfbd sitescommonShared Documents Upload file to Location Documents AddPnPFile Access denied You do not have permission to perform this action or access this resource In C temp testuploadps Zeichen te AddPnPFile Path testtxt Folder SPFolderName Verbose CategoryInfo WriteError AddPnPFile ServerUnauthorizedAccessException FullyQualifiedErrorId EXCEPTIONSharePointPnPPowerShellCommandsFilesAddFile Logout Reading the web and the library works but uploading files failes Why I was also able to add Listitems to a custom list using this permissions Then give the application SitesFullControllAll permissions and consent Works without changes to the code Why is FullControl needed for the upload Using SitesReadWriteAll should be sufficient Or am I wrong Please let me know if something is missing in my issue Could be related to this comment Best regards Tobias Reporting an Issue As of January the Cmdlet GetPnPFolder stopped working Expected behavior Using the cmdlet folder GetPnPFolder RelativeUrl url I used to get a folder reference to the folder object to be able to process files in that folder using the following code folder GetPnPFolder RelativeUrl url total folderFilesCount For i i lt total i file folderFiles i WriteHost Downloading fileName GetPnPFile ServerRelativeUrl fileServerRelativeUrl Path destinationfolder FileName fileName AsFile targeturl movefolder fileName MovePnPFile ServerRelativeUrl fileServerRelativeUrl TargetUrl target Force Actual behavior The cmdlet fails with the following error GetPnPFolder Method not found SystemArrayEmpty At line char folder GetPnPFolder Url url CategoryInfo WriteError GetPnPFolder MissingMethodException FullyQualifiedErrorId EXCEPTIONSharePointPnPPowerShellCommandsFilesGetFolder Which version of the PnPPowerShell Cmdlets are you using PnP PowerShell for SharePoint PnP PowerShell for SharePoint X PnP PowerShell for SharePoint Online What is the version of the Cmdlet module you are running problem existed before updating How did you install the PnPPowerShell Cmdlets MSI Installed downloaded from GitHub X Installed through the PowerShell Gallery with InstallModule Other means Resubmit of PR Resubmit of PR containing new functionality to access the Unified Audit Logs of Office Reporting an Issue or Missing Feature AddPnPFolder Name test Folder Documents not working ApplyPnPProvisioningTemplate with xml template containing folders with character Working with docList GetPnPList Documents rootFolder docListRootFolder rootFolderFoldersAddTest InvokePnPQuery Expected behavior Working on PnP commands Actual behavior Error AddPnPFolder The argument must be a single folder name and cannot contain path characters Steps to reproduce behavior Use above commands Which version of the PnPPowerShell Cmdlets are you using PnP PowerShell for SharePoint PnP PowerShell for SharePoint X PnP PowerShell for SharePoint Online What is the version of the Cmdlet module you are running How did you install the PnPPowerShell Cmdlets MSI Installed downloaded from GitHub X Installed through the PowerShell Gallery with InstallModule Other means Type Bug Fix X New Feature Sample Related Issues NA What is in this Pull Request Adding HostProperties support to AddPnPCustomAction using ClientSideComponentProperties argument See for documentation on what this can be utilized for Depends on to be merged first in PnP Sites Core Lines to of Contains the examples to use the cmdlet but some of the examples use obsolete syntax While they technically work at the moment with a warning the docsmicrosoftcom page for this cmdlet omits the obsolete parameters which means the examples use effectively undocumented syntax Example uses syntax GetPnPNavigationNode QuickLaunch this could be replaced with GetPnPNavigationNode Location QuickLaunch Examples and use RemovePnPNavigationNode Title and Location the simplest replacements I know of for these would be GetPnPNavigationNode Location QuickLaunch WhereObject Title eq Recent RemovePnPNavigationNode GetPnPNavigationNode Location ToNavigationBar WhereObject Title eq Home RemovePnPNavigationNode Force Since the parameters to RemoveNavigationNode have been simplified from when these examples were written it might not actually be necessary to have both examples and Example could be removed Notice many issues bugs reported are actually related to the PnP Core Library which is used behind the scenes Consider carefully where to report an issue Are you using ApplySPOProvisioningTemplate or GetSPOProvisioningTemplate The issue is most likely related to the Provisioning Engine The Provisioning engine is not located in the PowerShell repo Please report the issue here Is the issue related to the cmdlet itself its parameters the syntax or do you suspect it is the code of the cmdlet that is causing the issue Then please continue reporting the issue in this repo If you think that the functionality might be related to the underlying libraries that the cmdlet is calling We realize that might be difficult to determine please first double check the code of the cmdlet which can be found here If related to the cmdlet continue reporting the issue here otherwise report the issue at Reporting an Issue or Missing Feature Reporting an issue Expected behavior When applying the provisioning template I am expecting the lists field to be overridden with any new field types or changes Actual behavior The field is skipped if the field is found but the type does not match Steps to reproduce behavior Please include complete code samples inline or linked from gists To reproduce this behavior I have created a list in two different environments a model site and a target site I extracted the templatexml from the model site and applied it to the target site then changes were made to one of the fields on the model site the field was changed from checkbox to dropdown menu The field is still of type choice I then extracted a new template from the model site with the changes made and tried applying to the target site this is when the field was skipped over and no changes were applied to the target site on the field that was updated below is the code involved in portion of templatexml that changed format from checkbox to dropdown Field NameSourcePermissions FromBaseTypeFALSE TypeChoice DisplayNameSourcePermissions RequiredTRUE EnforceUniqueValuesFALSE IndexedFALSE FormatDropdown FillInChoiceFALSE ID b e cc a e b f f ab c b Version StaticNameSourcePermissions SourceIDlistidSubscriptions ColNamenvarchar RowOrdinal CustomFormatter DefaultAll ITADefault CHOICES CHOICEAll ITACHOICE CHOICEHCHBCHOICE CHOICES Field applying the template WriteHost Started applying template SetCulture CultureInfo enus ApplyPnPProvisioningTemplate Path envSYSTEMDEFAULTWORKINGDIRECTORYCIsharepointtemplatexml Connection newSiteConnection WriteHost Finished applying template message recieved Which version of the PnPPowerShell Cmdlets are you using PnP PowerShell for SharePoint PnP PowerShell for SharePoint x PnP PowerShell for SharePoint Online What is the version of the Cmdlet module you are running SharePointPnPPowershellOnline version How did you install the PnPPowerShell Cmdlets MSI Installed downloaded from GitHub Installed through the PowerShell Gallery with InstallModule x Other means 