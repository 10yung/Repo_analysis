Thats the first something with README that reads Much Ado and nothing specific Needs rewriing ENOTEMPTY directory not empty occasionally on some windows machines when removing a directory on buildclean Hi Im trying to use a requirejs config speciically the paths option Ive followed the guide and added a requirejsconfigjson file at the root of my bundle however the built code does not seem to be using the config My project structure looks like this scripts nested path wibblejs mainjs requirejs requirejsconfigjson my urequire config looks like javascript use strict var config bundle path scripts name urequire testing build dstPath scriptsbuild template AMD verbose true debugLevel globalWindow true moduleexports config my mainjs looks like javascript require wibble function my requirejsconfigjson looks like json paths wibble nestedpathwibble Do I need to call requireconfig in mainjs If so what do I pass to it It also doesnt seem like requirejsconfigjson is being copied to the build folder I tried adding it explicitly to the urequireconfig bundlecopy array which did copy it but it is still not being used Thanks for any help Use adapt madge Allow levels and better error handling Instead of having bundlepath and its corresponding bundlefilez we should have src an array of objects with path filez or shortcut path filez like coffee src otherpathlibA thispathfromlibA nodemodulesdistlibB f f isnt badfile or the boring path somepath filez somefilespecs that all together define a virtual files source Notes We should also have some option to allow override think of overwrite as we are writting with cases like truefalse or older newer larger smaller etc Order does matter and the st one left side has precedence inlining can use urequire browerify commonjseverywhere etc to convert the module and its nested deps if needed It can also use the bibrarys source if available Could we have this coffee bowercomponentslodashdist lodashjs or better lodash that resolves to the above that effectivelly is inlining lodash in bundle UMD or combined as a normal module of bundles root Add UMD around a single file rather easily possible if it has only external global dependencies ie its only a single module or a result of concatenation Harder case for multiple modules could perhaps use another library that gathers requireonly files together but not something like cause it has its own overhead Allow uRequire configs to share derive from a single bundle then uRequire loading that bundle only a single time but build it against multiple builds Needs some rethinking of which keys are where and what dependends on what but the main concept is there 