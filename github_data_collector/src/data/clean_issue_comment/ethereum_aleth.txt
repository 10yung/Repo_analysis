 void ClientTestmodifyTimestampint t timestamp Block blockchainParamsaccountStartNonce DEVREADGUARDEDxpreSeal block mpreSeal Transactions transactions DEVREADGUARDEDxpostSeal transactions mpostSealpending blockresetCurrenttimestamp DEVWRITEGUARDEDxpreSeal mpreSeal block auto lastHashes bclastBlockHashes assertbccurrentHash blockinfoparentHash for auto const t transactions blockexecutelastHashes t DEVWRITEGUARDEDxworking mworking block DEVREADGUARDEDxpostSeal mpostSeal block onPostStateChanged does someone remember why this line assertbccurrentHash blockinfoparentHash when block is rewind and then modify timestamp is called this line is triggered Parity Ethereum version the newest one Operating system Linuxubuntu Installation built from source Fully synchronized no Aleth Ethereum version the newest one Operating system Linuxubuntu Installation built from source Fully synchronized no steps to reproduce import subprocess retcodealethout subprocesscall parityevm stats json code a c ffffffff fdde b ea b ddd ab b dd d ce b a c da cb b e d b a a cbb ca dd ed e f b b fd b fd b c fd b b a b b cb f b f a b f b fd b ffffffffffffffffffffffffffffffffffffffff b f b b fd b c b f b e fd b ffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffff b f b fd b b ff ff f b fd b cd ffffffffffffffffffffffffffffffffffffffff b f b ef fd b f dd b ffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffff f b fd b f a b b f b f bc a b f b d fd b ffffffffffffffffffffffffffffffffffffffff aa b f b b fd b ffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffff c b f b f c f c b b f f b b ffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffff fd b ffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffff f c be e ebec d bd f d e f dd c f b e b ac c c b a b b ffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffff d fd b ffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffff fd b ffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffff f fd b ffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffff fddf ad be c b c b fc daa ba f c a f a df b ef a b a ff b ffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffff b a ffffffffffffffffffffffffffffffffffffffff b f a f a e a b b a c f b b ab fd b ffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffff afe fd b ffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffff b a fd b ffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffff fddf ad be c b c b fc daa ba f c a f a df b ef a b ffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffff a a a a b ba f f c e edd c ce a ee bf c f input fdde timeout shellTrue printretcodealethout retcodealethtrace subprocesscall benchmarkEVMsalethvm trace code a c ffffffff fdde b ea b ddd ab b dd d ce b a c da cb b e d b a a cbb ca dd ed e f b b fd b fd b c fd b b a b b cb f b f a b f b fd b ffffffffffffffffffffffffffffffffffffffff b f b b fd b c b f b e fd b ffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffff b f b fd b b ff ff f b fd b cd ffffffffffffffffffffffffffffffffffffffff b f b ef fd b f dd b ffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffff f b fd b f a b b f b f bc a b f b d fd b ffffffffffffffffffffffffffffffffffffffff aa b f b b fd b ffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffff c b f b f c f c b b f f b b ffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffff fd b ffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffff f c be e ebec d bd f d e f dd c f b e b ac c c b a b b ffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffff d fd b ffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffff fd b ffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffff f fd b ffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffff fddf ad be c b c b fc daa ba f c a f a df b ef a b a ff b ffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffff b a ffffffffffffffffffffffffffffffffffffffff b f a f a e a b b a c f b b ab fd b ffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffff afe fd b ffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffff b a fd b ffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffff fddf ad be c b c b fc daa ba f c a f a df b ef a b ffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffff ffffffffffffffffffffffffffffffffffffffff a a a a b ba f f c e edd c ce a ee bf c f mnemonics input fdde aletraceout timeout shellTrue printretcodealethtrace actual behavior Invalid code Invalid input length depth gas gasCost memory op MOD pc stack storage expected bahaviour should be the same I want to figure whats the meaning of Invalid input length and why alethvm can run the binruntime code normallyretcode is and the parityevm run the same binruntime code with errorretcode is Many thanks The line always return zero number of synced blocks It happens because BlockQueuedrain can take mlock and it always does before BlockQueueverifierBody So tries to extract from empty mverified queue The solution is to wait until all unverified blocks gone and then sync In goethereum theres a way to simulate the blockchain where I can send transactionsuch as deploying a smart contract to the blockchain and get a result from itsuch as getting a result from a contract See details here I wonder if Aleth provides a similar way or not Log INFO p p snap Requested chunk ac e from b de INFO p p snap Requested chunk a a from b de INFO p p net Active peer count INFO p p net Looking for peers INFO p p snap Requested chunk d b from b de INFO p p net Active peer count INFO p p net Looking for peers INFO p p snap Requested chunk be ce from ac ff INFO p p snap Saved chunk be ce Chunks left peer ac ff INFO p p snap Requested chunk bf c c from ac ff INFO p p snap Requested chunk f dff from a ceb INFO p p snap Saved chunk f dff Chunks left peer a ceb INFO p p snap Requested chunk a f from a ceb INFO p p snap Saved chunk a f Chunks left peer a ceb INFO p p snap Requested chunk b a f from a ceb INFO p p snap Saved chunk b a f Chunks left peer a ceb INFO p p snap Requested chunk df bd from a ceb INFO p p net Active peer count INFO p p net Looking for peers INFO p p snap Requested chunk c cf from ac ff INFO p p snap Saved chunk df bd Chunks left peer a ceb INFO p p snap Requested chunk c fb from a ceb INFO p p snap Requested chunk c a from a ceb INFO p p snap Saved chunk c a Chunks left peer a ceb INFO p p snap Requested chunk c e c from a ceb INFO p p snap Saved chunk c e c Chunks left peer a ceb INFO p p snap Requested chunk d e b from a ceb INFO p p snap Saved chunk c cf Chunks left peer ac ff INFO p p snap Requested chunk c ff from ac ff INFO p p snap Saved chunk d e b Chunks left peer a ceb INFO p p snap Requested chunk ce ac c from a ceb terminate called after throwing an instance of boostwrapexceptdevBadCast what homebuilderprojectlibdevcoreRLPh Throw in function T devRLPtoIntint const T boostmultiprecisionnumberboostmultiprecisionbackendscppintbackend boostmultiprecisionunsignedmagnitude boostmultiprecisionunchecked void boostmultiprecisionetoff Dynamic exception type boostwrapexceptdevBadCast TRACE p p rlpx ingress Frame header contents validated TRACE p p rlpx ingress Frame body from TRACE p p rlpx ingress Hello verified Starting session with DEBUG p p net Starting peer session with ParityEthereumv beta bc x linuxgnurustc protocol V b c capabi ities par port DEBUG p p net New session for capability par idOffset with b c TRACE p p net WarpStatus to b c TRACE p p p pcap Ping to b c TRACE p p net Ping to b c DEBUG p p net Peer connection successfully established with b c DEBUG p p discov Pong from d d c a DEBUG p p discov Active node d d c a DEBUG p p discov Evicting node ef a DEBUG p p discov Ping to ef a DEBUG p p discov Ping from d d c a DEBUG p p discov Adding node d d c a DEBUG p p discov Pending d d c a DEBUG p p discov Pong to d d c a DEBUG p p discov Ping to d d c a DEBUG p p discov Pong from d d c a DEBUG p p discov Active node d d c a DEBUG p p discov Evicting node ef a DEBUG p p discov Ignoring request to ping ef a because its already pinged DEBUG p p discov Ping from d d c a DEBUG p p discov Adding node d d c a DEBUG p p discov Pending d d c a DEBUG p p discov Pong to d d c a DEBUG p p discov Ping to d d c a DEBUG p p discov Pong from ef a DEBUG p p discov Active node ef a DEBUG p p discov Ping from ef a DEBUG p p discov Adding node ef a DEBUG p p discov Pong to ef a DEBUG p p discov Active node ef a what The future has already been retrieved from the promise or packagedtask TRACE p p net Received Ping from b c TRACE p p p pcap Ping from b c TRACE p p p pcap Pong to b c TRACE p p net Pong to b c Aborted core dumped Im seeing Aleth syncing repeatedly restart due to it receiving what I suspect to be an ETC block header for dao hard fork block INFO p p net Looking for peers INFO p p net Active peer count INFO p p net Looking for peers INFO p p net Active peer count INFO p p net Looking for peers INFO p p net Active peer count INFO p p net Looking for peers WARN p p sync Unknown block header ab df Restart syncing with e cc INFO p p sync Starting full sync INFO eth client blocks imported in ms blockss in INFO p p net Active peer count INFO p p net Looking for peers INFO eth client blocks imported in ms blockss in INFO eth client blocks imported in ms blockss in INFO p p net Active peer count INFO p p net Looking for peers INFO p p net Active peer count INFO p p net Looking for peers INFO p p net Active peer count INFO p p net Looking for peers INFO p p net Active peer count INFO p p net Looking for peers INFO p p net Active peer count INFO p p net Looking for peers INFO p p net Active peer count INFO p p net Looking for peers INFO p p net Active peer count INFO p p net Looking for peers INFO p p net Active peer count INFO p p net Looking for peers INFO p p net Active peer count INFO p p net Looking for peers INFO p p net Active peer count INFO p p net Looking for peers INFO p p net Active peer count INFO p p net Looking for peers INFO p p net Active peer count INFO p p net Looking for peers INFO p p net Active peer count INFO p p net Looking for peers INFO p p net Active peer count INFO p p net Looking for peers INFO p p net Active peer count INFO p p net Looking for peers INFO p p net Active peer count INFO p p net Looking for peers INFO p p net Active peer count INFO p p net Looking for peers INFO p p net Active peer count INFO p p net Looking for peers INFO p p net Active peer count INFO p p net Looking for peers INFO p p net Active peer count INFO p p net Looking for peers INFO p p net Active peer count INFO p p net Looking for peers INFO p p net Active peer count INFO p p net Looking for peers INFO p p net Active peer count INFO p p net Looking for peers WARN p p sync Unknown block header ab df Restart syncing with e cc INFO p p sync Starting full sync INFO eth client blocks imported in ms blockss in INFO eth client blocks imported in ms blockss in INFO eth client blocks imported in ms blockss in INFO eth client blocks imported in ms blockss in INFO p p net Active peer count INFO p p net Looking for peers INFO p p net Active peer count INFO p p net Looking for peers INFO p p net Active peer count INFO p p net Looking for peers INFO p p net Active peer count INFO p p net Looking for peers INFO p p net Active peer count INFO p p net Looking for peers INFO p p net Active peer count INFO p p net Looking for peers INFO p p net Active peer count INFO p p net Looking for peers INFO p p net Active peer count INFO p p net Looking for peers INFO p p net Active peer count INFO p p net Looking for peers INFO p p net Active peer count INFO p p net Looking for peers INFO p p net Active peer count INFO p p net Looking for peers INFO p p net Active peer count INFO p p net Looking for peers INFO p p net Active peer count INFO p p net Looking for peers INFO p p net Active peer count INFO p p net Looking for peers INFO p p net Active peer count INFO p p net Looking for peers INFO p p net Active peer count INFO p p net Looking for peers INFO p p net Active peer count INFO p p net Looking for peers INFO p p net Active peer count INFO p p net Looking for peers INFO p p net Active peer count INFO p p net Looking for peers INFO p p net Active peer count INFO p p net Looking for peers INFO p p net Active peer count INFO p p net Looking for peers INFO p p net Active peer count INFO p p net Looking for peers INFO p p net Active peer count INFO p p net Looking for peers INFO p p net Active peer count INFO p p net Looking for peers INFO p p net Active peer count INFO p p net Looking for peers WARN p p sync Unknown block header ab df Restart syncing with e cc INFO p p sync Starting full sync INFO eth client blocks imported in ms blockss in Heres where the header check is failing Aleths databases are currently created in HOME Ethereum on nix and APPDATA Ethereum on Windows Geth creates its databases in HOME Ethereum geth and APPDATA Ethereum geth Aleths databases should be created in an Aleth subdirectory so that when one runs multiple clients its easier to delete the Aleth databases without affecting other clients