Hi I try to create a virtualenv based on miniconda see the following steps pyenv install miniconda pyenv local miniconda python version Python Anaconda Inc pyenv virtualenv miniconda testminiconda pyenv local testminiconda python version Python As you can see the python version of miniconda is while I obtained a python version of Any hints for this issue Regards Hi I try to create the environment for this project based on anaconda with pyenvvirtualenv But the pyenvvirtualenv failed to do this job See the following steps Ive done git clone opencvmachinelearninggit pyenv install anaconda cd opencvmachinelearninggit pyenv local anaconda pyenv virtualenv ml pyenv local ml conda install file requirementstxt Collecting package metadata currentrepodatajson done Solving environment failed with initial frozen solve Retrying with flexible solve Solving environment failed with repodata from currentrepodatajson will retry with next repodata source Collecting package metadata repodatajson done Solving environment failed with initial frozen solve Retrying with flexible solve Solving environment Found conflicts Looking for incompatible packages This can take several minutes Press CTRLC to abort failed CondaError KeyboardInterrupt But the following steps without using pyenvvirtualenv will do the trick git clone opencvmachinelearninggit pyenv install anaconda cd opencvmachinelearninggit pyenv local anaconda conda create n ml file requirementstxt I noticed that the condabased env create will install l lot of packages while the pyenvvirtualenv based method will only install fewer packages But if pyenvvirtualenv cannot construct the env successfully I still cannot use this method Any hints for this issue Regards Hi thanks for this awesome project at first I noticed that my fish shell got really slow when just pressing enter compared to bash and I figured out that the line status isinteractive and source pyenv virtualenvinit psub in my fish config caused this to happen It looks like this line creates a function that listens to the fishprompt event shell function pyenvvirtualenvhook onevent fishprompt set l ret status if n VIRTUALENV pyenv activate quiet or pyenv deactivate quiet or true else pyenv activate quiet or true end return ret end Im not sure what this function does but it seems to get executed every time the fishprompt is shown which causes indeed performance problems Would it maybe be enough to just listen to onvariable PWD which would cause it to be executed every time the working directory changes best jochen Corrects outdated bats source location Makes it easier to test the code by using make Configure travis to use the same make file It would be great if I could use the next commnad pyenv virtualenv myvirtualenvpy And this case the latest installed py would be used And in the feature the last installed py would be used even if I installed a new one Because without this I have to recreate my every virtualenv when I would like to use the newer patch version It seems to create conda env fine but they are not listed Can be related to issue current virtualenv anaconda KunsMacBookPro kundeng pyenv version anaconda set by Userskundengpyenvversion create one based on anaconda anaconda KunsMacBookPro kundeng pyenv virtualenv coursera Collecting package metadata currentrepodatajson done Solving environment done Preparing transaction done Verifying transaction done Executing transaction done To activate this environment use conda activate coursera To deactivate an active environment use conda deactivate Looking in links varfolders z zdx n zg ll xtk w gnTtmpptb a Requirement already satisfied setuptools in Userskundengpyenvversionsanaconda envscourseralibpython sitepackages post Requirement already satisfied pip in Userskundengpyenvversionsanaconda envscourseralibpython sitepackages The following should list the newly created one but it doesnt anaconda KunsMacBookPro kundeng pyenv virtualenvs anaconda created from Userskundengpyenvversionsanaconda If you list the versions the newly created virtualenv is there but it is somewhat wrong and cant be activated by pyenv activate You can however use conda activate to activate it Too many issues will kill our teams development velocity drastically Make sure you have checked all steps below Prerequisite x Make sure your problem is not listed in the common build problems x Make sure no duplicated issue has already been reported in the pyenv issues You should look for closed issues too x Make sure you are not asking us to help solving your specific issue GitHub issues is opened mainly for development purposes If you want to ask someone to help solving your problem go to some community site like Gitter StackOverflow etc x Make sure your problem is not derived from packaging eg Homebrew Please refer to the package documentation for the installation issues etc x Make sure your problem is not derived from plugins This repository is maintaining pyenv and the default pythonbuild plugin only Please refrain from reporting issues of other plugins here Description x Platform information eg Ubuntu Linux Manjaro latest x OS architecture eg amd x x pyenv version x Python versionsystem Im using zsh and got the completions as below when input pyenv hmank versions pyenv version pyenv PYENVROOT pyenvuninstall pyenvvirtualenvinit pyenvactivate pyenvshactivate PYENVVERSIONOLD PYENVVIRTUALENVINIT pyenvdeactivate pyenvshdeactivate pyenvvirtualenv pyenvvirtualenvprefix pyenvinstall PYENVSHELL pyenvvirtualenvdelete pyenvvirtualenvs I install a python version by pyenv install then create a virtualenv by pyenvvirtualenv by pyenv virtualenv nn And pyenv activate nn active the nn successfully But the zsh completion pyenvactivate nn failed got error Failed to activate virtualenv Perhaps pyenvvirtualenv has not been loaded into your shell properly Please restart current shell and try again Same error when I use pyenvactivate Whats the difference between pyenvactivate and pyenv activate Why pyenvactivate not work I have noticed that using pyenv system can cause PATH issues for the running python program This is because for system pyenv adds the python system path to PATH So all the executables in that system path are overridden Here is an example User has the PATH myjavausrbin In myjava is the executable java Their system python is at usrbinpython They have a script dojavastuffpy that runs calls java They have pyenv set to system If user runs java it runs myjavajava If user runs usrbinpython dojavastuffpy the script also runs myjavajava But if user runs python dojavastuffpy the script runs usrbinjava This is because pyenv has prefixed the path with usrbin This isnt a problem with nonsystem pyenvs because they only have the python executables But with system that prefixing overrides a lot more methods One possible fix might be for pyenv to create a pyenvversionsystem directory with links for the python executables It would then prefix pyenvversionsystem rather than usrbin So like nonsystem pyenvs only the python executables would be added The readme file has this tidbit I guess its nice to finally have an answer as to why pyenv uninstalled the virtualenv I didnt ask for But what I am not guessing but am very confidently and adamantly saying is that this kind of thing shouldnt happen If I order pyenv to uninstall something it should clearly say what other virtualenvs symlinks it is going to delete If anything pyenv virtualenvs command should better tell that there are symlinks and what installationssymlinks are connected When pyenv virtualenvdelete f nonexistentvirtualenv is run then an error message is displayed and the return code is This is contrary to the behavior described by pyenv virtualenvdelete help Usage pyenv virtualenvdelete fforce virtualenv f Attempt to remove the specified virtualenv without prompting for confirmation If the virtualenv does not exist do not display an error message See pyenv virtualenvs for a complete list of installed versions Specifically for the force flag If the virtualenv does not exist do not display an error message This PR addresses this by checking that the force flag is not set before continuing with standard behavior displaying the error message and returning the nonzero code