Hi are there any plans to upgrade prost to its version It includes a security fix as in addition to lots of other updates I know there are many upstream places that its used as well in rafts toolchain if someone could tell me where they all are I can open PRs upgrading all the specific components I just want to make sure I get them all in one pass Ported to etcd I suggest add an customize quorum function hook The hook can produce any number between n n where n is the number of available voters So that we can make data safer in some cases cc siddontang disksing hicqu Add a bot to close stale issuesPRs automatically Signedoffby Fullstop fullstop gmailcom Relate to In Raftnew we always create a ProgressSet with setting nextidx in each Progress In the situation where recovering the raft node I think maybe we can just use the current Snapshots meta index as same as the implementation in restoreraft trybatch doesnt check the entries size after batched which might cause the overflow Do we need to worry about this hicqu BusyJay Raft doesnt requires follower reports its commit index But aggregated them can help us find out whether a log is committed in all nodes which is quite useful in some cases For example in TiKV when enabling hibernate regions its better to let all the followers to commit to latest logs before going to sleep otherwise follower can wait for a long time before committing and applying logs which can hurt follower reads It can also be used in merge too the Raft Paper link in the Links for Further Research part is not available the file is not found Is your feature request related to a problem Please describe This is related to the raftrs callbacks do not include logic to truncate logs that the Leader knows to be applied to all followers In combination with this forces full snapshot replication to be the only viable form of catching up leaders Describe the solution youd like The leader keeps track of the last good log on all followers it seems sensible for the leader to truncate logs that are know to be replicated and applied to all Followers A callback in the Storage trait seems to be useful Describe alternatives youve considered Exposing all the needed information on the leader to introspect follower indexes and commits to manually implement truncation