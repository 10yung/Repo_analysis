Upon running and executing railsbestpractices it labels searchdata as unused model method whereas searchdata is used from searchkick to control the type of indexing def searchdata attributesmerge groupid groupstryids end This should be ignored Hey there Some weeks ago I tried out the RailsBestPractices hook with Overcommit to no avail I opened an issue to ask about my problem and it turns out it may be related to how railsbestpractices expect explicit files to be passed However I still have not found the cause of the problem I tried running this which is what overcommit ends up running to my understanding echo appcontrollersapplicationcontrollerrb configroutesrb tr n xargs bundle exec railsbestpractices And this works perfectly by this I mean it detectes warnings in those two files correctly so I dont really know what could be going wrong with that Can anyone give me a hand with this Thanks gem install railsbestpractices went fine I even tried installing old releases Ive tried installing via command line and Gemfile but any time I invoke the gem I get the same result homebrianhrvmgemsruby p gemsrequireall librequireallrb in require homebrianhrvmgemsruby p gemsrailsbestpractices librailsbestpracticescorecheckrb unknown type of string SyntaxError if i symbolliteral stringliteral homebrianhrvmgemsruby p gemsrailsbestpractices librailsbestpracticescorecheckrb syntax error unexpected end if i symbolliteral stringliteral from homebrianhrvmgemsruby p gemsrequireall librequireallrb in require from homebrianhrvmgemsruby p gemsrequireall librequireallrb in block in requireall from homebrianhrvmgemsruby p gemsrequireall librequireallrb in each from homebrianhrvmgemsruby p gemsrequireall librequireallrb in requireall from homebrianhrvmgemsruby p gemsrequireall librequireallrb in block in requirerel from homebrianhrvmgemsruby p gemsrequireall librequireallrb in each from homebrianhrvmgemsruby p gemsrequireall librequireallrb in requirerel from homebrianhrvmgemsruby p gemsrailsbestpractices librailsbestpracticescorerb in top required from homebrianhrvmgemsruby p gemsrailsbestpractices librailsbestpracticesrb in require from homebrianhrvmgemsruby p gemsrailsbestpractices librailsbestpracticesrb in top required from homebrianhrvmgemsruby p gemsrailsbestpractices binrailsbestpractices in require from homebrianhrvmgemsruby p gemsrailsbestpractices binrailsbestpractices in top required from homebrianhrvmgemsruby p binrailsbestpractices in load from homebrianhrvmgemsruby p binrailsbestpractices in main from homebrianhrvmgemsruby p binrubyexecutablehooks in eval from homebrianhrvmgemsruby p binrubyexecutablehooks in main I know Im running an old version of Ruby but I just joined a new team and this is all part of cleaning up and modernizing Hi Im using rails and railsbestpractices Im trying to use resources with a concern in the routesrb but Im having this error restrict autogenerated routes only This is the code that generates the error with the concern in the resources groceries concern shopperactions do scope module shops do member do resources orders only index end end end namespace shoppers do resources groceries param shopid controller shops only index concerns shopperactions end and this is the code that works fine without the concern namespace shoppers do resources groceries param shopid controller shops only index do scope module shops do member do resources orders only index end end end end When i run results in html format i sometimes get stmtsadd and unary in my line number column What does it mean As the title says an unused helper method was crashing the system I fixed it by monkey patching into corecheckrb and changing this like exceptmethods internalexceptmethods to exceptmethodstoa internalexceptmethods So if its already an array nothing happens otherwise it converts nil into an empty array allowing the method to function It would be good to put this into the actual code instead of monkey patches Hi Im making railsbestpractices plugin for precommit gem So I want to call railsbestpractices checks from program like this code ruby RuboCopCLInewrunargs I check commandrb file and it looks it cant be called from program Are there some way to call from program or if it need CLI class Im glad to make it thanks move model logic into model command usecount I got this error while calling a service from controller Isnt services the best way rather than making models fat Heres an enhancement idea In Rails flashnow should never end up with redirectto and flash without now should normally not end up at render However its not that hard to make that mistake especially after making other changes I think itd be useful for railsbestpractices to detect that case Eg detect misuses like this ruby flashnow danger tadminonly redirectto def show code here end alias index show Will generate a message like configroutesrb restrict autogenerated routes apimodel only show 