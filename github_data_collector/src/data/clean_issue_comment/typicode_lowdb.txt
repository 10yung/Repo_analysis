Bumps handlebars from to details summaryChangelogsummary Sourced from handlebarss changelog v November th Bugfixes fix add noprototypebuiltins eslintrule and fix all occurences f f d fix add more properties required to be enumerable Chores Build fix use instead of c b f add chai and dirtychai and sinon for cleaner testassertions and spies deprecate old assertionmethods e e ba dad a Security The properties proto defineGetter defineSetter and lookupGetter have been added to the list of properties that must be enumerable If a property by that name is found and not enumerable on its parent it will silently evaluate to undefined This is done in both the compiled template and the lookuphelper This will prevent new RemoteCodeExecution exploits that have been published recently Compatibility notes Due to the securityfixes The semantics of the templates using proto defineGetter defineSetter and lookupGetter in the respect that those expression now return undefined rather than their actual value from the proto The semantics have not changed in cases where the properties are enumerable as in js proto some string The change may be breaking in that respect but we still only increase the patchversion because the incompatible usecases are not intended undocumented and far less important than fixing RemoteCodeExecution exploits on existing systems Commits v November th Bugfixes fix use Stringfield in lookup when checking for constructor d test add fluent API for testing Handlebars c ac c Compatibility notes no incompatibility are to be expected trtable truncated details details summaryCommitssummary c c b v c d Update release notes f f d fix add noprototypebuiltins eslintrule and fix all occurences fix add more properties required to be enumerable ba testchore add chaiexpect and sinon to runtimeenvironment dad test add sinon as global variable to eslint in the specs a test add sinonjs for spies deprecate current assertions e e chore add chai and dirtychai for better test assertions c b f fix use instead of de d v Additional commits viewable in compare view details br Dependabot compatibility score Dependabot will resolve any conflicts with this PR as long as you dont alter it yourself You can also trigger a rebase manually by commenting dependabot rebase dependabotautomergestart dependabotautomergeend details summaryDependabot commands and optionssummary br You can trigger Dependabot actions by commenting on this PR dependabot rebase will rebase this PR dependabot recreate will recreate this PR overwriting any edits that have been made to it dependabot merge will merge this PR after your CI passes on it dependabot squash and merge will squash and merge this PR after your CI passes on it dependabot cancel merge will cancel a previously requested merge and block automerging dependabot reopen will reopen this PR if it is closed dependabot ignore this patchminormajor version will close this PR and stop Dependabot creating any more for this minormajor version unless you reopen the PR or upgrade to it yourself dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency unless you reopen the PR or upgrade to it yourself dependabot use these labels will set the current labels as the default for future PRs for this repo and language dependabot use these reviewers will set the current reviewers as the default for future PRs for this repo and language dependabot use these assignees will set the current assignees as the default for future PRs for this repo and language dependabot use this milestone will set the current milestone as the default for future PRs for this repo and language You can disable automated security fix PRs for this repo from the Security Alerts page details Following the README for inserting new items on an array gives error insert is not existent should be corrected to push I use the lowdb in an electron project Everything is good in the development modeBut after package the app and run it will throw the error It looks like the app can not find the dbjson and how can I fix it Thanks Below is my code const adapter new FileSyncmaindbjson I use webpack and for the sake of importing only what is necessary thinking about the final size of the client build I use the lodashes Can I use lowdb without loadsh for the sake of optimizing the final bundle size I am wanting to use lowdb to generate some basic settings and save in json files inside a DB folder in assets can I do this in the client side browser or only with nodejs in the server Briefly can I use FileSync or FileAsync on the client side Hi at all first I have to say that english is NOT my native language so I hope you understand my problem I try to write a small application on a local Node server I use lowdb databases In the first I write usernames and the corresponding IDs then I use a request to get userstats to write the second one But if I put for eg users in the first database and the run the second part I got the message that NO zero users are in the json file If I open the file with an editor I can see the entries If I restart node I can read the users and all works fine If I add an dbread I get the stats immediatly but if I reset the first database and start from beginning I get doubled entries in the second database If I delete the two files instead of removing the entries it works but I have to delete them using the explorer windows based How can I fix that Michael Is it possible to check if a push was successful on the file Example Getting from the readme page dbgetposts push id title lowdb is awesome write Is it possible to check if the post was really pushed into db I believe this should be reversed I want to use or on my project i love the syntax of lowdb what can i do 