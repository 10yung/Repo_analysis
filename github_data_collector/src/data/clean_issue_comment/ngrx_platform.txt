 ngrx Please consider supporting our collective donate Please search GitHub for a similar issue or PR before submitting a new issue Minimal reproduction of the bugregression with instructions Here is a jasmine test demonstrating the inconsistency Run this where backingStore is just a Store object ts itgets consistent values when subscribing backingStoreaddReducertestKey state any action any state counter actioncounter function setAndGetcounter number backingStoredispatch type set counter backingStorepipetake subscribestate expectstatetestKeycountertoBecounter setAndGet passes backingStorepipetake subscribe setAndGet passes backingStore pipe skip take subscribe setAndGet fails backingStoredispatch type set counter Expected behavior I expect setAndGet to either always pass or always fail Having the behavior depend on when it is called leads to surprising and hard to find bugs Personally I thought it would always pass Versions of NgRx Angular Node affected browsers and operating systems NgRx Angular Node na browser na Other information It seems that dispatch will trigger reducers synchronously in most cases But if called within a subscriber that is reacting to a state change it is queued up to run later I would be willing to submit a PR to fix this issue Yes Assistance is provided if you need help submitting a pull request X No I often find myself copying pasting actions before editing the new action name if by mistake I forgot to rename the action param I end up with two actions and actions should always be unique I did this as a workaround to avoid issues export const actionEnterpriseUpdateApps createActionuniqueActionNameEnterprise API update apps tx propsIEnterpriseApps export function uniqueActionNamesegment name return segmenttoUpperCase nametoLowerCase uniqueIdaction but would be great if createAction would just append a unique value to the string as no two actions should ever be same when defined this will also give an opportunisticway to standardize the name of action as in lower case and upper case etc Thanks Sean PR Checklist Please check if your PR fulfills the following requirements x The commit message follows our guidelines Tests for the changes have been added for bug fixes features Documentation has been added updated for bug fixes features PR Type What kind of change does this PR introduce Please check the one that applies to this PR using x Bugfix Feature Code style update formatting local variables x Refactoring no functional changes no api changes Build related changes CI related changes Documentation content changes Other Please describe What is the current behavior Please describe the current behavior that you are modifying or link to a relevant issue Closes What is the new behavior Does this PR introduce a breaking change Yes x No If this PR contains a breaking change please describe the impact and migration path for existing applications below Other information PR Checklist Please check if your PR fulfills the following requirements X The commit message follows our guidelines Tests for the changes have been added for bug fixes features Documentation has been added updated for bug fixes features What is the currentnew behavior Closes Does this PR introduce a breaking change Kindof See Hello I would need to pass a dynamic configuration to EntityDataModuleforRoot Instead of being forced to declared entityMetadata and pluralNames statically I need to calculate them from a common and statically declared object Something like export const moduleEntityMap ModuleEntityMap httpContext lookup entities AreaBisogno plural AreeBisogno metadata DestinatarioTariffa plural DestinatariTariffe metadata httpContext adminsgq entities Tariffe plural Tariffe metadata Nodo plural Nodi metadata From this I can calculate the EntityDataModuleConfig instance need by EntityDataModuleforRoot Nothing fancy no services or http requests just trying to aggregate everything in one config object of mine Ive been trying to achieve this but with no luck I cannot use the forRoot pattern because theres no ModuleWithProviders counterpart that allows to dynamically declare the imports array Ive then tried to put my logic into a pure js file inject it directly into the indexhtml file and save the resulting calculated EntityDataModuleConfig instance to the window object something like entityConfig extractConfigmyConfig windowentityConfig entityConfig and then read it from my module NgModule imports EntityDataModuleforRootwindow entityConfig but I always get a null as the forRoot parameter dont really know why Is there a way to pass something that is not statically declared to EntityDataModuleforRoot That is can I execute some code before declaring the imports array of my module This seems a fairly common requirement but I cannot find a way Thanks a lot img width altimage src Is there a reason why projector function does not have a typesafety for its parameters yet This quickly becomes a nightmare when having a lot of unit tests for complicated projectors Ive looked into internals and found that for some reason the MemoizedSelector is using a default type DefaultProjectorFn for its projector which does not know anything about parameter types but only Result ts export function createSelectorState S Result s SelectorState S projector s S Result MemoizedSelectorState Result third type is a DefaultProjectorFn This could be easily fixed by explicitly providing a type of projector function for every createSelector of course ts export function createSelectorState S Result s SelectorState S projector s S Result MemoizedSelectorState Result s S Result img width altimage src Maybe this was already discussed Are there any hidden issues that Im not aware of Otherwise its strange why this was not escalated yet If accepted I would be willing to submit a PR for this feature x Yes No I have all the changes ready to be reviewed just let me know if the solution here is appropriate ngrx Please consider supporting our collective donate Please search GitHub for a similar request before submitting a new request Describe any alternativesworkarounds youre currently using Manually mock effect instances Other information TODO created the issue to not forget about it If accepted I would be willing to submit a PR for this feature x Yes Assistance is provided if you need help submitting a pull request No A WIP can be found at The docs for ngrxstore point out that the spread operator only makes shallow copies of objects and direct users to look into using deep copy libraries My understanding is that they only make sense if state contains nested objects or collections of objects From what Ive read deep copies seem to be required only for time travel functionality Change detection is done via shallow comparison of the state or its slices ie root objects not by comparing each object in the state ngrxentity however doesnt specify if deep copies would be required if the entities it manages are nested objects instead of flat ones Ive tried to go through the code on my mobile and have only seen the spread operator being used which would indicate deep copies should probably still be made when modifying entities but I probably missed some finer details Can you please confirm if my assumptions are correct and especially if deep copying eg using immerjs is advisable when using ngrxentity or if its taken care ofunnecessary Happy to draft a few sentences for the docs and submit a PR Other information I would be willing to submit a PR for the docs heart x Yes Assistance is provided if you need help submitting a pull request No ngrx Please consider supporting our collective donate Please search GitHub for a similar request before submitting a new request Info The overview page of ngrxentity contains a broken link when referring to reduxs FAQ when instead should be this link I would be willing to submit a PR for the docs heart X Yes Assistance is provided if you need help submitting a pull request No ngrx Please consider supporting our collective donate Please search GitHub for a similar request before submitting a new request I think it would be helpful if the actual navigation event would be passed to a Custom Router State Serializer of the routerstore module The NavigationStart event has for example a navigationTrigger property which is not available in the RouterStateSnapshot Describe any alternativesworkarounds youre currently using Im currently using my own custom router store Other information If accepted I would be willing to submit a PR for this feature x Yes Assistance is provided if you need help submitting a pull request No 