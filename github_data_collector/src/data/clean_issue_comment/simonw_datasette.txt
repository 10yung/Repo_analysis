While its sometimes valuable to know how a project has developed there is usually little justification for including this information in the README and certainly not immediately after other key information such as what does this package do and who might want to use it Might I recommend that the feature history is migrated to an Appendix in the documentation Simon Im trying to use the appcss in static folder as style sheet but the datasette on Heroku simply ignore it I read everything about customization here and on readthedocs but still cant Is this possible Thanks Hi Ive been experimenting with SQLite reading from huge datasets using this excellent Parquet extension from cldellow This works really well but I was keen to see if I could combine datasette with this Having previously experimented with the spatialite extension I knew that datasette supports loading extensions in the underlying sqlite instance However I hit a blocker as the current design only allows SELECT statements to be executed and so I am unable to execute the crucial CREATE VIRTUAL TABLE command that is required to load the data from the parquet file into the table It seems like this would be a simpleish change but I dont know enough about the architecture of datasette to start implementing this myself Could this be done as a datasette plugin or would this require more fundamental changes at initialisation time My thoughts are that something at init time could detect that the user was loading a parquet file and then switch to a mode were it loads that via the CREATE VIRTUAL TABLE rather than loading the db file in the default case Im happy to contribute code and testing I just need some pointers on the best approach Thanks Darren Hello Is the nice display of headers and definitions at the top of is configured in the metadatajson file Thank you Im having a lot of trouble copying and pasting from the codemirror editor on my iPhone this changes the SQL validation to allow for lines that are commented out my main use case for this is that I like to write a succession of queries when trying to solve a problem In most native SQL clients there is a key binding that will run just the current highlighted query or the program is smart enough to run just the query that the cursor is in if its properly delimited with a Typically my workflow will start with a single simple query and Ill copypaste it to a new query below when I want to make big changes while debugging This makes it easy to go back to a working version above when the query doesnt work Since datasette sends the whole query to the DB I have to comment out the older queries by prefixing each line with This gets caught by the validators when I use my typical strategy of copypasting each successive query below the last one so this is just a simple fix to allow for a query to be sent to the DB with leading comments As usual I dont really know what Im doing so this is just a suggested approach Ive not written tests Ive not run the tests I dont know if Ive missed some absolute URLs that would need to have the leading slash dropped BUT I tested it with config baseurl on the command line and from what little I know about datasette its at least working in some obvious cases My changes are based on what I saw in thanks Im happy to be more thorough on this if you think its worth pursuing Fixes he said optimistically Call it glossaryrst it can use a definition list something like this rst glossary Glossary Term A definition of the term Another term Another definition Since the index page has attempted to optimistically count times My personal Dogsheep has enough connected databases and tables that the page can still take way too long to load sometimes more than twenty seconds For wwwnichemuseumscom I solved this by creating an empty aboutdb database file see I want a neater mechanism for this