Readline should not use System namespace This will make it not possible to use this library in any enterprise project that has any package reviewing process I suggest the root namespace be created called something eg Tonerdo or similar and a new release be created version with the new namespace Great library btw nice D New async method with the ability to interrupt input from the console The last version of Readline was published There are great PRs but I dont see responses Is this repo still alive I tried to use the our tool on Windows system in a MINGW terminal that is installed when I installed Git client to access github Unhandled Exception SystemInvalidOperationException Cannot read keys when either application does not have a console or when console input has been redirected Try ConsoleRead at SystemConsolePalReadKeyBoolean intercept at SystemReadLineGetTextKeyHandler keyHandler at SystemReadLineReadString prompt String default at CampaignProgramRunAddAndReturnExitCodeOptions options A little googling efforts directed me to run it on the default command prompt and it worked like a charm Please guide if there is any configuration required for the same Thanks This is in line with how some REPLs work eg Python When using ReadLine in my NET Core app running through dotnet run I sometimes get this Unhandled exception SystemReflectionTargetInvocationException Exception has been thrown by the target of an invocation SystemIOIOException The process cannot access the file because it is being used by another process at InteropThrowExceptionForIoErrnoErrorInfo errorInfo String path Boolean isDirectory Func errorRewriter at InteropCheckIoInt result String path Boolean isDirectory Func errorRewriter at SystemIOStdInReaderReadKeyBoolean previouslyProcessed at SystemIOSyncTextReaderReadKeyBoolean previouslyProcessed at SystemConsolePalReadKeyBoolean intercept at SystemReadLineGetTextKeyHandler keyHandler at SystemReadLineReadString prompt String default at FlareCliCommandsReplCommandRunOptions options CancellationToken token in homealexrpflareflaresrccliCommandsReplCommandcsline End of inner exception stack trace at SystemRuntimeMethodHandleInvokeMethodObject target Object arguments Signature sig Boolean constructor Boolean wrapExceptions at SystemReflectionRuntimeMethodInfoInvokeObject obj BindingFlags invokeAttr Binder binder Object parameters CultureInfo culture at SystemDelegateDynamicInvokeImplObject args at SystemDelegateDynamicInvokeObject args at SystemCommandLineInvocationModelBindingCommandHandlerInvokeAsyncInvocationContext context at SystemCommandLineInvocationInvocationPipelinecDisplayClass InvokeAsyncb dMoveNext End of stack trace from previous location where exception was thrown at SystemCommandLineInvocationInvocationExtensionscUseParseErrorReportingb dMoveNext End of stack trace from previous location where exception was thrown at SystemCommandLineInvocationInvocationExtensionscDisplayClass UseTypoCorrectionsb dMoveNext End of stack trace from previous location where exception was thrown at SystemCommandLineInvocationInvocationExtensionscUseSuggestDirectiveb dMoveNext End of stack trace from previous location where exception was thrown at SystemCommandLineInvocationInvocationExtensionscUseParseDirectiveb dMoveNext End of stack trace from previous location where exception was thrown at SystemCommandLineInvocationInvocationExtensionscUseHelpb dMoveNext End of stack trace from previous location where exception was thrown at SystemCommandLineBuilderCommandLineBuilderExtensionscDisplayClass UseVersionOptionb dMoveNext End of stack trace from previous location where exception was thrown at SystemCommandLineInvocationInvocationExtensionscRegisterWithDotnetSuggestb dMoveNext End of stack trace from previous location where exception was thrown at SystemCommandLineInvocationInvocationExtensionscDisplayClass UseExceptionHandlerb dMoveNext Its not consistent and Im not sure how to reliably reproduce it I am also using SystemCommandLine in this app so at first I thought there might be some kind of conflict but I dont believe that is the case as SystemCommandLine does not appear to touch ConsoleIn anywhere If you type abd ShiftBackspace c then then resulting string is abc bd with the b escape char for backspace If you use Backspace instead of ShiftBackspace then it is fine Is this on purpose and if so is there a recommended way to sanitise the string when there are escape chars Ive made some changes that allows for faster tab completion by backspacing all the needed characters at once as opposed to one at a time Prior to this change Ive noticed some issues with very slow tab completion especially when using a readline project over an ssh connection I think this addresses those issues This PR is similar to the goal of but makes much smaller changes and passes all unit tests Thanks so much for this project hope this change is useful You may or may not want to adopt this code I really needed it Hello Thanks for creating this awesome package I love what you are doing to improve CLICI scenario on the net environment Im using this package and Ive noticed that when you press space outputs which outputs only one char in other softwares I think that this might be related on how you read the input reading keys vs reading inserted data assuming this not sure This happens because when using US International it has dead keys which can be used to change the next key In this case I just want the so I need to press space after 