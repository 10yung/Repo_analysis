 What is the problem youre trying to solve AnimationsTransitions that take less than ms should be omitted since this time is too short to provide a visual improvement On the other hand Im using a delay of ms to defer style changes for hover effects Eg if you quickly move the cursor over a input box scrollbar or button it should not change its style Only if you leave the cursor on the element for atleast ms This prevents flickering while quickly moving the cursor What solution would you like to see The timeminmilliseconds rule should provide options to specify different values for delay and duration Please answer the following Issues that do not will be closed Clearly describe the bug Certain input see below causes a crash in the indentation rule I can repro locally and also on the online demo page Which rule if any is the bug related to indentation What CSS is needed to reproduce the bug css notenabled color gray What stylelint configuration is needed to reproduce the bug js moduleexports rules indentation Which version of stylelint are you using How are you running stylelint CLI PostCSS plugin Nodejs API CLI with yarn stylelint scss Does the bug relate to nonstandard syntax eg SCSS Less etc No What did you expect to happen Rule does not crash What actually happened eg what warnings or errors did you get Rule crashes with the following exception and stack trace text RangeError Invalid count value at workdirclientredactedfilescss at Stringrepeat anonymous at workdirclientnodemodulesstylelintlibrulesindentationindexjs at handleMatch workdirclientnodemodulesstylesearchindexjs at moduleexports workdirclientnodemodulesstylesearchindexjs at checkMultilineBit workdirclientnodemodulesstylelintlibrulesindentationindexjs at checkSelector workdirclientnodemodulesstylelintlibrulesindentationindexjs at workdirclientnodemodulesstylelintlibrulesindentationindexjs at workdirclientnodemodulespostcsslibcontainerjs at Ruleeach workdirclientnodemodulespostcsslibcontainerjs at Rulewalk workdirclientnodemodulespostcsslibcontainerjs Before posting please check that the bug hasnt already been fixed in the next release discussed previously You can help us fix the bug more quickly by Figuring out what needs to be done and proposing it Submitting a PR with failing tests Once the bug has been confirmed you can help out further by Writing the code and submitting a PR Which issue if any is this issue related to Fixes Is there anything in the PR that needs further explanation Bumps dependency to include this upstream PR which has tests Theres a bit of extra noice in the packagelock but thats just the result of me running npm install seems something was outdated previously What is the problem youre trying to solve The current rule for fontweightnotation has two options numeric and namedwherepossible While numeric is unambiguous namedwherepossible allows for a mix of values Other rules like this control for value type eg colornamed colornohex and in our case we wish to only allow named values in the CSS What solution would you like to see Two options stand out add an additional option to fontweightnotation such that only named values are allowed Possible name for the option could be namedonly add a new rule fontweightnamed that is similar to colornamed and only allows the fixed and relative named values for fontweight eg lighter normal bold etc This might necessitate a refactor of the existing fontweightnotation rule for naming consistency purposes In either implementation the new behavior would be to only allow nonnumeric values for fontweight inline CSS variable values and the named values would be allowed Related to previous rulesfunctionality in always option was removed from fontweightnotation Im not sure what that behavior was but its the only relevant functionality I could find that could be related to this new functionality Which issue if any is this issue related to None as its a documentation fix Is there anything in the PR that needs further explanation No its self explanatory The CLI document says about the exit codes as follow However the current stylelint never exits with the code The following commands can reproduce the issue shellsession nodemodulesbinstylelint version nodemodulesbinstylelint css Error No files matching the pattern css were found at privatetmpworknodemodulesstylelintlibstandalonejs at processTicksAndRejections internalprocesstaskqueuesjs echo This issue does NOT occur on stylelint v shellsession nodemodulesbinstylelint version nodemodulesbinstylelint css Error css does not match any files at privatetmpworknodemodulesstylelintlibstandalonejs echo And stylelint v exits with the code shellsession nodemodulesbinstylelint version nodemodulesbinstylelint css echo About this issue which is correct the document or the current behavior Other I noticed that Running stylelint with invalid options exits with the code instead of shellsession nodemodulesbinstylelint foo Invalid option foo Did you mean f echo I think appropriate to exit with the code because passing invalid options is not a violation of rules I think we should reconsider the document and code about exit codes and add more system test cases What do you think about it What does this do Remove the workaround for Node Now Node is required Inline unnecessary Promiseresolve Convert to an arrow function for consistency in a file Convert to async functions for readability Which issue if any is this issue related to None as its refactoring for the system test code Is there anything in the PR that needs further explanation No its self explanatory It appears that the propertynounknown rule is incorrectly flagging SCSS use namespaces when setting a variable within a namespace This occurs only within mixins and functions it doesnt occur when reading or writing module properties in the global scope It also only occurs while setting a variable it doesnt occur when reading the variable SCSS use and module namespaces are relatively new theyre described here scss use accoutrementsass as a use sasslist No stylelint error asizes function clearsizes Lint error Unexpected unknown property asizes propertynounknown asizes return asizes No lint error s clearsizes mixin dumpsizes No stylelint error sizes asizes debug of sizes registered listlengthsizes include dumpsizes The linked file provides a simple repro case with dependencies stylelintmodulepropertyzip Which rule if any is the bug related to propertynounknown What CSS is needed to reproduce the bug scss use accoutrementsass as a function clearsizes Lint error Unexpected unknown property asizes propertynounknown asizes return asizes No error What stylelint configuration is needed to reproduce the bug stylelintconfigjs js moduleexports rules propertynounknown true Which version of stylelint are you using How are you running stylelint CLI PostCSS plugin Nodejs API CLI stylelint scss Does the bug relate to nonstandard syntax eg SCSS Less etc Yes its related to SCSS module namespaces What did you expect to happen No lint error What actually happened eg what warnings or errors did you get shell stylelint scss srcstylelintusenamespacescss Unexpected unknown property asizes propertynounknown error Command failed with exit code I originally posted this bug in the stylelintscss project but I was directed to post it here Weve got a set of conventions for managing issues Ive retroactively applied these to the open issues that Ive come across while combing through the last months of fantastic work on the project I think it would be beneficial for new contributors to add descriptions to our labels as the distinction between labels can be quiet subtle eg meta vs infrastructure However it will make the dropdown list longer but I think the benefits outweigh this We could possibly do with a new welcome doc that directs new contributors to these developer guide resources too We should use prettier to format the markdown documentation for consistency See At the moment Im using Save without formatting whenever I work on markdown files in stylelint However this will require us to add prettierignore comments inside our CSS examples which show idiosyncratic patterns This should only be for the whitespace rules Well also probably need to strip out these comments as part of the website transformation script Any objections to this proposal