This would give a native way to consume changes A possible example of usage import withProps from proppy const P withProps counter const p P for await const value of psubscribe consolelog value Cannot find distproppyminjs in proppy WIP branch exists here Background React hooks will land soon in stable version and currently already available in alpha version More info Set up For the examples below we will be using these providers js import React from react import ProppyProvider from proppyreact const providers foo foo value bar bar value export default function Root return ProppyProvider providersproviders MyComponent ProppyProvider And the sample factory js import compose withProps withState shouldUpdate from proppy const P compose withPropsprops providers withStatecounter setCounter shouldUpdateprops propscounter Usage APIs useProppy Using Proppy factory inside Components js import React from react import useProppy from x new package const P factory export default function MyComponentprops const counter setCounter useProppyP props return p onClick setCountercounter counter p useProviders Access all the providers js import React from react import useProviders from x export default function MyComponentprops const foo bar useProviders return pp useProvider Access individual providers js import React from react import useProvider from x export default function MyComponentprops const foo useProviderfoo return pp Hi I am really excited about replacing reactrecomposereactrouter with much lighter alternatives but I am having some issues fitting it all together I am coming from reactrecompose so Im sure I am doing something just a bit wrong but I cant seem to figure it out Any ideas would be much appreciated I have a demo that illustrates what I am trying to accomplish I want global provider for modal user state Here is a code sandbox Basically I cant seem to work out subscribing to a global state and updating the app To reproduce click login and login with any emailpassword This should trigger provider state changes show modal with login form update user hide modal with login form which in turn should change these componentstate things change menu items in Header showhide modal in Header change routes for from PageHome to PageDashboard for logged in users I did this which seems like a terrible hack js when global state changes render app if typeof window undefined providerssubscribeprops consolelogPROVIDERS props renderApp documentbody It works a little better at refreshing when it should show the modal but only about half the time show modal works but not hide Initial userstate seem to work ok derive user from JWT works fine so you can login then refresh page and it looks how it should You can click LOGOUT and refresh and it kills the token and userstate and goes back to anonymous view Using proppy directly when i subscribe in my instance when the elements are updating the state the subscription its not called If i return the instance in the module bad practice it works Fix for When using withHandlers or any other hoc the props that are passed to the component are inside of a parentProps object while I expect them to be directly inside of the props object Example In this example the prop foo is inside of parentProps when logged in withHandlers Attempting to call a state handler using onChange results in an infinite loop It would be nice if there was a didUpdate function that mirrored the capabilities of preacts componentDidUpdate that allows you to immediately call setState given some conditional This feature is important when utilizing routing or similar functionality where a change in props would cause a reset refetch of data As a workaround calling the state handler in a setTimeout worked fine In original connect from reactredux you can pass a function as a mapDispatch which accepts dispatch and own component props Here the full description Do you plan to add this feature PS proppyredux npm page points to package So I created issue in this scope I have been wondering if it is possible to use this library with components defined like so js Component class SomeComponent extends Vue mount Thanks