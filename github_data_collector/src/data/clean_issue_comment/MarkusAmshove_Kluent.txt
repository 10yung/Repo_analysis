Description This PR adds the verification mode times for mock verification described in this issue Verify times on mock that mockgetPerson was called we can also add a wide scope verification mode Verify mode times on mock that mockgetPerson was called Ps I know it doesnt have the best syntax but performancewise its the best approach alternatively we can try to curry the verify method but it creates a lot of overhead Checklist Wed like to thank you for your help appreciate them and give you credit for it Please check the checkboxes below as you complete them x Ive added my name to the AUTHORS file if it wasnt already present Hi Currently we have comparion related assertions such as shouldBeLessThan for numbers only It would be nice to have it for all comparable type kotlin fun T ComparableT TshouldBeLessThanother T I updated mockitokotlin to and after that we saw unit tests failing with javalangNoSuchMethodError comnhaarmanmockitokotlin MockingKtwithSettings LkotlinreflectKClassLjavalangStringLjavalangObjectLorgmockitostubbingAnswerZLorgmockitomockSerializableModeZ LorgmockitolistenersInvocationListenerZLcomnhaarmanmockitokotlin UseConstructorLjavalangObjectLorgmockitoMockSettings This only happened in cases where autocomplete mixed up the mock functions and we where using orgamshovekluentmock once we switched to comnhaarmanmockitokotlin mock the tests go through again There is also a ticket inside the mockitokotlin repository about this Hi I think it is reasonable to say that xshouldBeNearx delta should always pass I think for any value of x it is correct to say x is near x If you agree with this statement then we have to fix the current implementation which fails in the following case kotlin val delta val x DoubleNaN xshouldBeNearx delta Throws an assertion error because NaN is not between NaN and NaN Hi Markus Im trying to do this kotlin Test fun assert throws exceptions invoking factorycreate should throw IllegalArgumentExceptionclass But have a compile error orgjunitComparisonFailure javalangNoClassDefFoundError orgjunitComparisonFailure at orgamshovekluentExceptionsKtshouldThrowExceptionskt at orgamshovekluentExceptionsBacktickKtshould throwExceptionsBacktickkt Do you have any clues Steps to reproduce gradlew clean gradlew test Issue Description When running the above commands the output shows warnings Task kluentcommoncompileTestKotlinCommon w Classpath entry points to a nonexistent location projectspersonalKluentcommonbuildclassesjavamain w Classpath entry points to a nonexistent location projectspersonalKluentcommonbuildresourcesmain Hello I just wanna ask something Is it possible to support multi language beside english for this library For example like bahasa or spanish or italian I hope I can support on bahasa if thats really possible Thank you x Setup CI x Add macOS as target x Enable Android Verify published Android artifact in actual app development Get test results from CI Remove deprecated features Implement dont forget attribution x Implement dont forget attribution Implement dont forget attribution x Implement dont forget attribution Implement dont forget attribution Implement dont forget attribution Implement dont forget attribution Implement dont forget attribution Implement dont forget attribution Implement Implement Add PR at Description the itReturns method doesnt let to return multiple values something that Mockito resolve with an implementation of thenReturnfirstvalue arrayofnextvalues Expected result we can return several values in case we need it example When calling mockViewisReady itReturnsConsecutively listOftrue false Checklist Wed like to thank you for your help appreciate them and give you credit for it Please check the checkboxes below as you complete them x Ive added my name to the AUTHORS file if it wasnt already present here is a reallife scenario that made me very confused listOf fizz buzz shouldEqual listOf fizz buzz ok listOf fizz buzz shouldEqual listOf fizz buzz fail The reason of the confusion was this error message javalangAssertionError Expected fizz buzz actual fizz buzz I think we should consider custom toString conversion to make distinction Int vs String more explicit for all string prints The code is not the best but we will get the idea val list listOf fizz buzz printlnlist prints fizz buzz printlnlistjoinToString transform if it is String it else ittoString prefix postfix prints fizz buzz As a result we would get much better error message giving instant hint what is wrong Before javalangAssertionError Expected fizz buzz actual fizz buzz After javalangAssertionError Expected fizz buzz actual fizz buzz As an alternative we could consider handling in special wahy the case where test fails but actualltoString expectedtoString Then we could make decision about display more information like data types in error message Also keep in mind this is a simplified example in reality we will have a function that returns the list making mistake harder to spot in code listOf fizz buzz shouldEqual getMyList fail 