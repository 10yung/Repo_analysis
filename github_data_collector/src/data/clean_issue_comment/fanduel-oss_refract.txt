So far every time Ive used Refract Ive built this exact functionality into every custom handler think it makes sense for this to be included in the library Similar to toProps and asProps its a helper function which triggers a special case in the combined effect handler Its called like toCallbackpropNamedata if propspropName exists it calls propspropNamedata This is super useful when building reusable components for example my goto example of a debounced input component would look like this js import withEffects toCallback toProps from refractrxjs import BehaviorSubject merge of from rxjs import debounceTime map startWith from rxjsoperators import Input from Input const aperture component timeout value const value new BehaviorSubjectvalue const onChange e valuenextetargetvalue const onChange valuepipe maptoCallbackonChange const onCommit valuepipe debounceTimetimeout maptoCallbackonCommit const render valuepipe mapvalue toProps value return merge oftoProps onChange render onChange onCommit export default withEffectsapertureInput Bumps handlebars from to details summaryChangelogsummary Sourced from handlebarss changelog v November th Bugfixes fix add noprototypebuiltins eslintrule and fix all occurences f f d fix add more properties required to be enumerable Chores Build fix use instead of c b f add chai and dirtychai and sinon for cleaner testassertions and spies deprecate old assertionmethods e e ba dad a Security The properties proto defineGetter defineSetter and lookupGetter have been added to the list of properties that must be enumerable If a property by that name is found and not enumerable on its parent it will silently evaluate to undefined This is done in both the compiled template and the lookuphelper This will prevent new RemoteCodeExecution exploits that have been published recently Compatibility notes Due to the securityfixes The semantics of the templates using proto defineGetter defineSetter and lookupGetter in the respect that those expression now return undefined rather than their actual value from the proto The semantics have not changed in cases where the properties are enumerable as in js proto some string The change may be breaking in that respect but we still only increase the patchversion because the incompatible usecases are not intended undocumented and far less important than fixing RemoteCodeExecution exploits on existing systems Commits v November th Bugfixes fix use Stringfield in lookup when checking for constructor d test add fluent API for testing Handlebars c ac c Compatibility notes no incompatibility are to be expected trtable truncated details details summaryCommitssummary c c b v c d Update release notes f f d fix add noprototypebuiltins eslintrule and fix all occurences fix add more properties required to be enumerable ba testchore add chaiexpect and sinon to runtimeenvironment dad test add sinon as global variable to eslint in the specs a test add sinonjs for spies deprecate current assertions e e chore add chai and dirtychai for better test assertions c b f fix use instead of de d v Additional commits viewable in compare view details br Dependabot compatibility score Dependabot will resolve any conflicts with this PR as long as you dont alter it yourself You can also trigger a rebase manually by commenting dependabot rebase dependabotautomergestart dependabotautomergeend details summaryDependabot commands and optionssummary br You can trigger Dependabot actions by commenting on this PR dependabot rebase will rebase this PR dependabot recreate will recreate this PR overwriting any edits that have been made to it dependabot merge will merge this PR after your CI passes on it dependabot squash and merge will squash and merge this PR after your CI passes on it dependabot cancel merge will cancel a previously requested merge and block automerging dependabot reopen will reopen this PR if it is closed dependabot ignore this patchminormajor version will close this PR and stop Dependabot creating any more for this minormajor version unless you reopen the PR or upgrade to it yourself dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency unless you reopen the PR or upgrade to it yourself dependabot use these labels will set the current labels as the default for future PRs for this repo and language dependabot use these reviewers will set the current reviewers as the default for future PRs for this repo and language dependabot use these assignees will set the current assignees as the default for future PRs for this repo and language dependabot use this milestone will set the current milestone as the default for future PRs for this repo and language You can disable automated security fix PRs for this repo from the Security Alerts page details The license text is currently not provided with the npm bundle In order to allow automation tools like licensewebpackplugin to pick it up it should be included there Also the license states The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software This includes the npm registry Hi Ive already discussed this with jtmcgrath but Id like to get everyone involved One thing that I really like to do when trying out a new library is to do the introduction example Id like to add one for Refract The introduction Since the power of Refract lies in the way it handles side effects it makes sense to include side effects in the tutorial which will be handled by Refract I thought of having a simulated environment where you develop a dashboard that receives data and interact with iot devices iot devices being JS modules This dashboard acts as the smart hub of this environment Goals As of now I have a couple of requirements in the back of my mind Takes at max h For some parts of the intro first write how youd handle the event in the nonrefract way and then refactor it to use refract To give users a feel of how it improves the code Users should both be inspired and educated about Refract Please let me know your thoughts Ive already started a bit on the dashboard environment and I have several questions related to the PR but first Id like to hear here what you guys think of it 