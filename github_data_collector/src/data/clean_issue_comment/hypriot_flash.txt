When I flash a raspberry pi zero w it seems to be unable to run docker containers from the runcmd part of the userdata First of all it throws the following error wpasupplicant sbinwpasupplicant daemon failed to start runparts etcnetworkifpreupdwpasupplicant exited with return code Failed to bring up wlan However it is connected to my wifi as I can see in my router Moreover it was able to fetch my github ssh keys and performs apt update fine Ive put this in runcmd to make sure it is done after wifi has been connected However after that I try to pull the portainer image but then it throws an error error response from daemon get https registry dockeriov dial tcp lookup registry dockerio on read udp read connection refused I know wifi isnt officially supported by cloudinit but Im not sure its a wifi related issue All other internet related things seem to work Also the error message seems to suggest it wasnt unable to connect but the connection was refused somehow When I ssh into the device the docker run command works as normal Also when i try the rainbow example which uses docker swarm everything seems to work fine My userdatayml for reference cloudconfig vim syntaxyaml The current version of cloudinit in the Hypriot rpi is When dealing with cloudinit it is SUPER important to know the version I have wasted many hours creating servers to find out the module I was trying to use wasnt in the cloudinit version I had Documentation Set your hostname here the manageetchosts will update the hosts file entries as well hostname roger manageetchosts true You could modify this for your own user information users name someusername use any user name you like primarygroup users shell binbash sudo ALLALL NOPASSWDALL groups usersdockeradmdialoutaudioplugdevnetdevvideo lockpasswd false sshimportid ghsomegithubid name pirate gecos Hypriot Pirate sudo ALLALL NOPASSWDALL shell binbash groups usersdockervideo plaintextpasswd hypriot lockpasswd false sshpwauth true chpasswd expire false Set the locale of the system locale enUSUTF Set the timezone Value of timezone must exist in usrsharezoneinfo timezone EuropeAmsterdam Update apt packages on first boot packageupdate true packageupgrade true packagerebootifrequired true packageupgrade false Install any additional apt packages you need here packages ntp WiFi connect to HotSpot To make wifi work with RPi and RPi you also have to set enableuart in configtxt See nouartconfigtxt for an example use wpapassphrase SSID PASSWORD to encrypt the psk writefiles content allowhotplug wlan iface wlan inet dhcp wpaconf etcwpasupplicantwpasupplicantconf iface default inet dhcp path etcnetworkinterfacesdwlan content countryNL ctrlinterfaceDIRvarrunwpasupplicant GROUPnetdev updateconfig network ssidsomessid psksomepassword protoRSN keymgmtWPAPSK pairwiseCCMP authalgOPEN path etcwpasupplicantwpasupplicantconf These commands will be ran once on first boot only runcmd Pickup the hostname changes systemctl restart avahidaemon Activate WiFi interface ifup wlan sleep to wait for wifi to get up sleep Update apt packages on first boot aptget update aptget upgrade startup my docker containers sh c echo Starting Portainer now sh c docker volume create portainerdata sh c docker run d p p name portainer restart always v varrundockersockvarrundockersock v portainerdatadata portainerportainer sh c echo Finished starting Portainer At the very least a warning would be helpful if hostname is used but there is nothing to replace Hello Im a newbie on docker swarm and userdata file I tried to add a new node to a cluster directly at boot setup with docker swarm join token command in userdata file with no avail Here is a sample of the file img width altScreenshot at src I successfully ran the command with the same token directly into the node though The purpose is to create a whole raspberry cluster with all workers and managers by configuring datauser file into each Hypriotos thus directly set up with hostnames services workers managers etc at boot stage Whether Im totally wrong or missing something I would be glad hearing advices from any of you Thank you After reading I now know that its possible to enable ssh and configure WiFi for a Raspberry Pi Zero on first boot with standard Raspbian LITE It would be useful to do that with flash flash ssid xxx password yyy raspbianbusterlitezip Default root passwords are a horribly bad security practice that leads to things like the Mirai botnet and a long history of similar malware that take advantage of default passwords or no password on the root account at all on millions of internetconnected devices to perform devastating Distributed Denial of Services DDoS attacks A survey by Jerry Gamblin found that Nearly of the Most Popular Docker Containers Have No Root Password which is just compounded by an OS that has a default root password Unfortunately there are too many examples of this poor practice in use all for the sake of having something so simple anyone can do it and not enough examples of how to do things more securely There is a better way that I would like to propose for you to consider Arguably this is easier than the kind of ssid YourSSID password YourSecretPreSharedKey type of manualeditingrequired examples in the sample directory which if you accidentally commit and push the edited values is yet another Bad PracticeTM that leads to secrets leakage I have a tool I wrote to make it really easy to preconfigure something like HypriotOS or any other RaspberryPi OS distribution hint hint Raspbian It is called pythonsecrets We recently spoke about the problem and this program at Toorcon XX In that talk I demonstrated how to use psec using HypriotOS and flash for the use case no less with this asciicast The steps in the goSecure prototype repository are documented here Before I start spending a lot of time trying to update the blog and flash repos in order to make a pull request Id like to get your input on whether you would like to work with me on integrating psec into the flash process to get a more secure result without much extra effort for users In my use case the progress soon gets but the dd command is still working at MBs It seems the image is preloaded in memory clhut wfsample flash userdata staticyml d devsdd Downloadsinstallerhypriotosrpiv img Is devsdd correct y Unmounting devsdd Flashing homeclhuDownloadsinstallerhypriotosrpiv img to devsdd MiB MiBs Running flash f hostname kube device devdisk bootconf kubesbootyml userdata kubesinityml Downloadshypriotosrpiv img bootconf gets applied hdmidrive HDMI sound hdmigroup DMT hdmimode x Hz overscanleft overscanright overscantop overscanbottom disablesplash gpumem using this file hostname kube locale enUSUTF timezone EuropeBerlin manageetchosts true aptpreservesourceslist true packageupgrade false packages ntp runcmd systemctl restart avahidaemon users name tcurdt primarygroup users shell binbash sudo ALLALL NOPASSWDALL groups usersdockeradm password plaintextpasswd tcurdt sshpwauth true chpasswd expire false lockpasswd false pubkey lockpasswd true sshauthorizedkeys sshrsa AAAAVqU w the cloud init gives problems When booting its strange that eth is not up Then the cloud prints initpy WARNING Unhandled nonmulitpart textxnotmultipart userdata bhostname kube It then waits and eventually creates some keys Then login appears Wrongdefault hostname though Then cloud init says enUSUTF done which means its not ignoring the file completely I guess Then it regenerates a machine id and prints fingerprints for user debian Later it says no authorized ssh keys fingerprints found for user debian A little confused I am wondering are things broken Then I found issue and realized that all that was missing was the cloudconfig shebang It would be fantastic if this could be checked by the script and not just thats a valid yml file Hi Im using Hypriot and a custom couldinit file to configure my RPi setup The yaml file looks as follows cloudconfig hostname qw p manageetchosts true aptpreservesourceslist true users name client primarygroup users shell binbash sudo ALLALL NOPASSWDALL groups usersdockeradmdialoutaudioplugdevnetdevvideo sshimportid None lockpasswd true sshauthorizedkeys sshrsa A locale enUSUTF timezone EuropeStockholm writefiles content testkey testvalue mykey anothervalue path homeclientsetupdatajson and after sshing into the pi using the ssh key Im faced with the following ssh client The authenticity of host cant be established ECDSA key fingerprint is SHA wpDOD kZRTNm I SEM kvL XEL Ov heeQvCFvvTw Are you sure you want to continue connecting yesno yes Warning Permanently added ECDSA to the list of known hosts Enter passphrase for key sshidrsa Linux qw p hypriotosv SMP Sun Apr UTC armv l HypriotOS Debian GNULinux The programs included with the Debian GNULinux system are free software the exact distribution terms for each program are described in the individual files in usrsharedoccopyright Debian GNULinux comes with ABSOLUTELY NO WARRANTY to the extent permitted by applicable law WARNING Your environment specifies an invalid locale The unknown environment variables are LCCTYPEUTF LCALL This can affect your user experience significantly including the ability to manage packages You may install the locales by running sudo aptget install languagepackUTF or sudo localegen UTF To see all available language packs run aptcache search languagepack az az To disable this message for all users run sudo touch varlibcloudinstancelocalecheckskip bash homeclientcloudlocaletestskip Permission denied clientqw p ls lhsa total K K drwxrxrx root root K Apr K drwxrxrx root root K Apr K drwx client users K Apr ssh K drwxrxrx root root K Apr setup clientqw p I have tried to change the content in the yaml file to be in base encoding in case some invalid characters was present but it has the same result I believe the main problem is that the file that I am writing makes the user client not owner of its own home directory Im unable to create any filesfolders and as can be seen in the ls lhsa output the file created setupdatajson is owned by root I dont really understand what I am doing wrong here What is the correct way to write JSON files using hypriot and cloudinit Hello Im using the flash utility to flash an sdcard with a userdata yml file with the following command flash d devmmcblk f hypriotosrpiv img u node yml But the node yml file does not get copied to bootusermeta Its still the default usermeta The syntax is correct If I manually copy the file to bootusermeta and boot the rpi everything is working Log Output from the flash command ansible mneadmtp hypriot flash d devmmcblk f hypriotosrpiv img sudo password for mneadm Unmounting devmmcblk Flashing hypriotosrpiv img to devmmcblk MiB GiBs records in records out bytes GB MiB copied s MBs Waiting for device devmmcblk devmmcblk rereading partition table Mounting Disk Mounting devmmcblk to customize total drwxrxrx mneadm mneadm Jan drwxrwxrx mneadm mneadm May rwxrxrx mneadm mneadm Apr bcm rpi wdtb rwxrxrx mneadm mneadm Apr bcm rpibdtb rwxrxrx mneadm mneadm Apr bcm rpibplusdtb rwxrxrx mneadm mneadm Apr bcm rpicmdtb rwxrxrx mneadm mneadm Apr bcm rpi bdtb rwxrxrx mneadm mneadm Apr bcm rpi bdtb rwxrxrx mneadm mneadm Apr bcm rpi bplusdtb rwxrxrx mneadm mneadm Apr bcm rpicm dtb rwxrxrx mneadm mneadm Mar bootcodebin rwxrxrx mneadm mneadm Apr cmdlinetxt rwxrxrx mneadm mneadm Apr configtxt rwxrxrx mneadm mneadm Apr COPYINGlinux rwxrxrx mneadm mneadm Apr fixupcddat rwxrxrx mneadm mneadm Apr fixupdat rwxrxrx mneadm mneadm Apr fixupdbdat rwxrxrx mneadm mneadm Apr fixupxdat rwxrxrx mneadm mneadm Apr kernel img rwxrxrx mneadm mneadm Apr kernelimg rwxrxrx mneadm mneadm Mar LICENCEbroadcom rwxrxrx mneadm mneadm Apr metadata rwxrxrx mneadm mneadm Apr osrelease drwxrxrx mneadm mneadm Apr overlays rwxrxrx mneadm mneadm Apr startcdelf rwxrxrx mneadm mneadm Apr startdbelf rwxrxrx mneadm mneadm Apr startelf rwxrxrx mneadm mneadm Apr startxelf rwxrxrx mneadm mneadm Apr userdata Unmounting devmmcblk Finished Kind Regards Madic I fail to connect to the wireless LAN with the ssid option and the password option hypriot is version flash is the latest version The same is true when using deviceinityaml Please help me