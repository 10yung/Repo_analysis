I know the issue sounds supervague but its all I have none of the example code is interactive at all sprites and meshes either flicker or stay completely still I dont even know where to begin in terms of debugging this not really a graphics kind of guy so ask me any information you need on my system and I will gladly share it to solve this I am using Ubuntu cargo and ggez Any will help will be greatly appreciated Im working on a pixel artish game and using a SpriteBatch to render groups of sprites at a time Sometimes these renders include transforms on the batch itself such as flipping the batch horizontally via scaling it by from the center of the image According to the documentation for DrawParamoffset this should be doable via offset a la rust let params DrawParamnew scale offset graphicsdraw mut ctx batch params However that does not work Instead I need to scale by the dimensions of the batch itself rust let batchdims batchdimensions mut ctxunwraporelseRectzero let params DrawParamnew scale offset batchdimsw batchdimsh graphicsdraw mut ctx batch params Is this intended behavior If so can the documentation be updated to reflect that Ive added a new exampletutorial to the Projectsmd This is an example of using specs with ggez including some basic systems for movement and collision detection Added a link to a version of the ggeztemplate using legion in place of specs Hi My application involves some distance field rendering on the GPU which needs a floating point render target Ive added an extra parameter to Canvasnew function and a bunch of other really minor things The other thing is the MeshBatch struct that can be used to render instanced geometry works similarly to the current SpriteBatches but tries to cache instance data and only update it when necessary Thanks Describe the bug WindowModemaximized has no effect unless WindowModeresizable is set to true Note I actually want resizable to be true so this bug has no negative effect on me I just noticed it and thought Id report it hoping it will save someone else some trouble To Reproduce Run this program depends on ggez rust use stdenv use ggez Context ContextBuilder GameResult conf FullscreenType WindowMode event EventHandler run fn main GameResult Workaround for I dont know if this is required to reproduce this bug Its just the only way I found to get ggez working on my machine envsetvarWINITUNIXBACKEND x let mut context mut eventloop ContextBuildernewwindowmaximizebug Hanno Braun windowmode WindowModedefault fullscreentypeFullscreenTypeWindowed This has no effect maximizedtrue build let mut eventhandler Handler run mut context mut eventloop mut eventhandler Ok struct Handler Expected behavior The program starts with a maximized window Hardware and Software ggez version latest release at the time of writing OS Arch Linux Graphics card Intel UHD Graphics Graphics card drivers Whatever the default is lshw says driveri And miniquad Osspial have you considered creating a ggezspecific Path struct The stdPath struct is pretty clearly intended to map onto the actual filesystem and I can definitely see why repurposing that directly for ggezs virtual filesystem would be confusing icefox Not until minutes ago but it might be worth trying stdpathPath s assumptions make the internals of ggezfilesystem a bit more of a headache than they need to be also Anyone have any thoughts for or against Describe the bug Keycodes to represent certain keys are missing or not recognised To Reproduce add printlnKeyDownEvent Key Mods keycode keymod to the keydownevent function in your event handler Use the output to note the results of pushing various keys Expected behaviour I expect every key to return something even if it is incorrect current behaviour has multiple dead keys in my layout including the and shift and on my keyboard notibly LBracket and RBracket are fired on the square brackets Altgr and Also noteworthy is the key doesnt even have an associated keycode listed in the docs and is also dead on my layout On my system the following lablelled key functions result in no event being fired Capslock PrintScrn WinKey Hardware and Software ggez version OS Linux Arch Graphics card Not applicable Graphics card drivers Not applicable Keyboard layout German fixes 