 Not only is it low but also decreasing from about And so I was wondering is there a way to fix it I checked the system clock is fine Could there be anything else Fixes dependencies readds boostpython as boostpython which was removed in screenshot SIGSEGV i pdataPrivateKeysSign Identitycpp x d be i pclientClientDestinationSign Destinationh x cfcd f i pclientClientDestinationCreateNewLeaseSet Destinationcpp x cfe af i pclientLeaseSetDestinationUpdateLeaseSet Destinationcpp x cfe cee i pclientLeaseSetDestinationSetLeaseSetUpdated Destinationcpp x cfe e i ptunnelTunnelPoolTunnelCreated TunnelPoolcpp x d b b i ptunnelTunnelsAddInboundTunnel Tunnelcpp x d i pHandleVariableTunnelBuildMsg I NPProtocolcpp x d fe i pHandleI NPMessage I NPProtocolcpp x d i ptunnelTunnelsRun Tunnelcpp x d f stdinvokeimplvoid void i ptunnelTunnels i ptunnelTunnels invokeh x d a e stdinvokevoid i ptunnelTunnels i ptunnelTunnels invokeh x d a aa stdBindvoid i ptunnelTunnels i ptunnelTunnels callvoid ulstdtuple stdIndextuple ul functional x d a b stdBindvoid i ptunnelTunnels i ptunnelTunnels operator void functional x d a faf stdinvokeimplvoid stdBindvoid i ptunnelTunnels i ptunnelTunnels stdinvokeother stdBindvoid i ptunnelTunnels i ptunnelTunnels invokeh x d d af stdinvokestdBindvoid i ptunnelTunnels i ptunnelTunnels stdBindvoid i ptunnelTunnels i ptunnelTunnels invokeh x d ad stdthreadInvokerstdtuplestdBindvoid i ptunnelTunnels i ptunnelTunnels Minvoke ulstdIndextuple ul thread x d ada stdthreadInvokerstdtuplestdBindvoid i ptunnelTunnels i ptunnelTunnels operator thread x d ad d stdthreadStateimplstdthreadInvokerstdtuplestdBindvoid i ptunnelTunnels i ptunnelTunnels Mrun thread x d ad x f cfc f stacks of all threadstxt flatpak run websitei pdi pd appbini pdqtwrapper i pdqt datadirXDGDATAHOMEi pd gdb bt full x fce e in No symbol table info available x in No symbol table info available btn Restart Restart i pd irckeysdat transient General Log stdout file flatpak info websitei pdi pd Ref appwebsitei pdi pdx stable ID websitei pdi pd Arch x Branch stable Origin flathub Collection ID orgflathubStable Date Subject Update to bfbc Commit ec fa b b c da c af e ea a f dc b ff d Parent ee d d fb b a de d f eb fd cd c d ae f Location varlibflatpakappwebsitei pdi pdx stable ec fa b b c da c af e ea a f dc b ff d Installed size Runtime orgkdePlatformx Sdk orgkdeSdkx Log pane is linked to Log button gdb bt full x df in No symbol table info available x f f d in No symbol table info available x ffa in No symbol table info available x f f a in No symbol table info available x f e in No symbol table info available x f ffa in No symbol table info available x dec aa in No symbol table info available x f f d in No symbol table info available x deef in No symbol table info available x f f a in No symbol table info available x f e f in No symbol table info available x f ffa a in No symbol table info available x dedecb in No symbol table info available x f ffa d in No symbol table info available x f e f in No symbol table info available x f f f in No symbol table info available x ffa f in No symbol table info available x f f in No symbol table info available x f f in No symbol table info available x in No symbol table info available gdb tunnelsconf x typeclient address port destinationircilitai p destinationport signaturetype keystransient Ive read the following BNTCP address can be declared as a separate NTCP address or as an oldstyle NTCP address with additional parameters in which case it will accept both NTCP and NTCP connections Java I P implementation uses the second approach i pd C implementation uses the firstB Is it true So what about the situation when a person reside in a bad country where use of I P is forbidden and DPI is used by authorities to uncover such internet users Is it possible to block NTCP and SSU in i pd program and use only NTCP and hidden mode of a router in such country Hi Im looking for the basic info to get started I want to link and use libi pd with a c socket and client server Thanks 