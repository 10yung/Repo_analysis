When trying to import a module via moduleimport I receive the following error message r Error in if oldusage argument is of length zero I am using modules full sessionInfo below I am suspecting its got something to do with the new API which is as I understand still in dev status so I am using the syntax described on the master branch This is the actual line I am trying to run followed by traceback of error message r autofd modulesimportfractalanalysisprocessing Error in if oldusage argument is of length zero wrapusagename formatname formals oldusage oldusage functionusagexalias formalsxvalue identity oldusage oldusage objectusagefunctionattrblock object oldusage oldusage objectusageattrblock object oldusage oldusage topicaddusagerd block oldusage globaloptionsoldusage blocktordblock basepath env globaloptions rocletprocessrocletrdroclet blocks parsedblocks env parsedenv basepath dirnamemodulepath roxygen rocletprocessroclet blocks parsedblocks env parsedenv basepath dirnamemodulepath parsedocumentationnamespace doimportmodule modulepath doc importsummaryFD evalexpr p evalexpr p evalparentcall importsummaryFD at initr evalparsemodulepath encoding UTF envir namespace evalparsemodulepath encoding UTF envir namespace doimportmodule modulepath doc modulesimportfractalanalysisprocessing Thanks for your help r sessionInfo R version Platform x appledarwin bit Running under macOS Mojave Matrix products default BLAS SystemLibraryFrameworksAccelerateframeworkVersionsAFrameworksvecLibframeworkVersionsAlibBLASdylib LAPACK LibraryFrameworksRframeworkVersions ResourcesliblibRlapackdylib locale enGBUTF enGBUTF enGBUTF CenGBUTF enGBUTF attached base packages stats graphics grDevices utils datasets methods base loaded via a namespace and not attached Rcpp rstudioapi xml roxygen magrittr getopt tidyselect munsell colorspace R rlang stringr plyr dplyr tools grid datatable gtable lazyeval assertthat optparse tibble crayon purrr reshape ggplot glue stringi compiler pillar scales pkgconfig What should the following code importing a nested module yield and why r modusex xa xb xc xr r export a xa modusey a b c d b xb export c xc export modusey y a c b yr r export a ya export b yb export c yc export d yd Using modules which please please please change the name to not clash with wahanimodules makes RStudios static analysis freak out It seems unable to resolve symbols that modules is used to import For members of packages loaded with attach TRUE the linter says no symbol named For a package P loaded with attach FALSE the linter will accept any name that comes after P It cant differentiate between purrrmap which is real and purrrmap which doesnt exist Static analysis is for me as a mere mortal indispensable Are other modules users simply going without Going forward this package is intended to be used without being attached It therefore can t simply shadow the definition of base by exporting it Instead consider providing an appropriate onLoad hook that attaches a shim environment similar to devtoolsloadall In addition this should hook into pkgload s onLoad and somehow patch pkgloadinsertglobalshims if possible without violating CRAN guidelines note we also need to do this for old versions of devtools Update the Design rationale klmrmoduleswikiDesignrationale Add illustration of a complex project structure eg tree d gatksrcmainjavaorg to show why R packages fundamentally put an upper bound on R project complexity Show that current R packages lead to name conflicts eg conflicted and bad strategies to avoid them eg str prefix in stringr or fct gss lvls prefixes in forcats Add justification does R need to support such complex projects Well maybe not but in other aspects R software development is up there with the best eg CI documentation esp vignettes testing code coverage Point to other domains where R is being refined typing support Add references eg How to write a productionlevel code in Data Science first point Keep it modular Coalesce the Wiki into a coherent document that can be generated via a vignette and which serves as a blueprint of a potential paper which obviously needs to be a drastically shortened version Points to address in a paper Reproducibility Jupyter RMarkdown vs reusability Code modularisation Typing and use of NSE Usecases modusestr stringr leads to redundant function prefixes strstrmatch etc Ideally there should be a way of importing them as strmatch etc Unify API naming conventions Is it possible in the new syntax to make moduseraster crs also attach crs I dont think klmrmodules wahanimodules or smbacheimport can currently do anything like this Opening new issue as instructed in Rebuilding the vignette foreignfunctioninterfacermd occasionally results in the deletion of the vignettesrcpp folder This also causes R CMD check to fail Another thought modulefile should break with systemfile and allow an ext argument for file extensions never return NA this is just not helpful potentially allow positional existsmustWork to make sure a part of a path exists