 Proposed changes Added a link to MacDriver caps like other drivers Types of changes What types of changes does your code introduce to Appium Put an x in the boxes that apply Bugfix nonbreaking change which fixes an issue New feature nonbreaking change which adds functionality Breaking change fix or feature that would cause existing functionality to not work as expected x Documentation Update if none of the other choices apply Checklist Put an x in the boxes that apply You can also fill these out after creating the PR If youre unsure about any of them dont hesitate to ask Were here to help This is simply a reminder of what we are going to look for before merging your code x I have read the CONTRIBUTING doc x I have signed the CLA Lint and unit tests pass locally with my changes I have added tests that prove my fix is effective or that my feature works I have added necessary documentation if appropriate Any dependent changes have been merged and published in downstream modules Further comments If this is a relatively large or complex change kick off the discussion by explaining why you chose the solution you did and what alternatives you considered etc The problem Appium forces ListView to create view for all items This can hang up the app when the ListView contains a lot of items Environment Appium version or git revision that exhibits the issue Last Appium version that did not exhibit the issue if applicable Desktop OSversion used to run Appium macOS Catalina Nodejs version unless using Appiumappexe Mobile platformversion under test iOS Real device or emulatorsimulator simulator Appium CLI or Appiumappexe Appiumapp Xcode Visual Studio Details AppiumDesktop For comparison the hierarchy receiving from appium and the real hierarchy of visible elements pageSourceappiumtxt UIHierarchytxt Link to Appium logs appiumserverlogstxt Code To Reproduce Issue App zip Expected behavior Appium creates a hierarchy for visible items only Proposed changes document for JS the image detection based on forums discussion Duplicated PR to try the CLA signing again Types of changes Bugfix nonbreaking change which fixes an issue New feature nonbreaking change which adds functionality Breaking change fix or feature that would cause existing functionality to not work as expected x Documentation Update if none of the other choices apply Checklist Put an x in the boxes that apply You can also fill these out after creating the PR If youre unsure about any of them dont hesitate to ask Were here to help This is simply a reminder of what we are going to look for before merging your code x I have read the CONTRIBUTING doc x I have signed the CLA x Lint and unit tests pass locally with my changes x I have added tests that prove my fix is effective or that my feature works x I have added necessary documentation if appropriate x Any dependent changes have been merged and published in downstream modules Further comments If this is a relatively large or complex change kick off the discussion by explaining why you chose the solution you did and what alternatives you considered etc The problem WebDriverAgentRunner Xcode testRunner encountered an error Encountered a problem with the test runner after launch Underlying error Lost connection to DTServiceHub Difficult to upgrade to latest version Is there any workaround or solution to avoid these issue with same configuration Environment Appium version or git revision that exhibits the issue v Last Appium version that did not exhibit the issue if applicable Desktop OSversion used to run Appium Mac Mojave Nodejs version unless using Appiumappexe Npm or Yarn package manager npm Mobile platformversion under test iOS Real device or emulatorsimulator Real Device Appium CLI or Appiumappexe Appium CLI Xcode Details Getting WebDriverAgentRunner Xcode testRunner encountered an error Encountered a problem with the test runner after launch Underlying error Lost connection to DTServiceHub after few minutes of run Link to Appium logs Code To Reproduce Issue Good To Have The problem The app crashes whenever the automation framework opens a specific app activity This issue cannot be reproduced by manually accessing the screen in question Environment Appium version Last Appium version that did not exhibit the issue if applicable Desktop OSversion used to run Appium Mac OS Catalina Nodejs version v Mobile platformversion under test iOS Simulator Appium CLI Xcode Details This issue occurred as a result of compiling the app under test with Xcode Appium the Appium Java bindings Selenium or anything else were not changed between tests and did not exhibit this issue while the app was compiled with Xcode The only reference i found to this issue is I was wondering if anyone else encountered any similar issues with native apps after switching to Xcode Link to Appium logs Link to the error message i managed to catch that had any meaningful info on the cause of the crash EDIT Reproduced with Xcode as well The problem TouchActions such as swipe scroll or drag and drop do not work on CoordinatorLayout Environment Appium WindowsiOS Nodejs v Npm Android iOS Samsung A iPhone X Emulators Details The app I am trying to test has a part of screen that needs to be pulled upwards so you can enter data The problem is appium sees the pull action as done but in reality no action is taken I have made a simple method for pulling the CoordinatorLayout up public void dragWebElement el String direction TouchAction drag new TouchActiond int startX el getLocationgetX int startY el getLocationgetY int endY startY draglongPressPointOptionpointstartXstartYwaitActionwaitOptionsofMillis moveToPointOptionpointstartX endYperformrelease Now this works everywhere and I mean everywhere in the app except on that one place with CoordinatorLayout Just nothing happens and it continues to next steps Is there a way to switch focus on that layout Or frame I have seen these kinda issues around on internet but no one answered them yet Pls help tyvm The problem Hello i try to start my test in jenkins ci In my application i wanna test facebook login Environment Appium v Operating System Ubuntu LTS Kernel Linux generic Architecture x Mobile platformversion under test Android api Real device or emulatorsimulator emulator Details I read about context and my test code look like this checkoutToWebContext driverfindElementByidmloginemailsendKeyslogin driverfindElementByidmloginpasswordsendKeyspassword driverfindElementByidu click waituntilExpectedConditionselementToBeClickable BynameCONFIRMclick checkoutToNativeContext private void checkoutToWebContext for final String s drivergetContextHandles SystemoutprintlnContext s if scontainsWEBVIEW drivercontexts private void checkoutToNativeContext for final String s drivergetContextHandles if scontainsNATIVEAPP SystemoutprintlnContext s drivercontexts When i run test in my mac all its ok I see contexts Native and Web in log but when i run test in ci i see only one context Native My shell script set e set v adb killserver true adb startserver start AVD ANDROIDHOMEemulatoremulator AppiumDevice ports noaudio nowindow nosnapshot emulatorlog sleep adb s emulator waitfordevice shell getprop devbootcomplete start Appium appium appiumlog sleep adb s emulator uninstall comtesttest true adb s emulator install openplaybuildoutputsapkappreleaseappapk gradlew appiumteststestReleaseUnitTest stop AVD adb s emulator emu kill Is it possible that appium cant find web context because my emulator run without display I dont shore because when i run seem configuration in my laptop its fine with out display too How can i run appium test in ci What can affect the application server after which it starts to process only context I read about chromedriver but its not help Please help me iOS app is built using Xamarin library When we use Appium XCUITest inspector to identify the elements it identifies pickercontrol elements in app But when I print the pagesource those pickerelements are not being shown These controls are shown with class as XCUIElementTypeOther instead of XCUIElementTypeTextFieldas found in inspector Environment Appium version or git revision that exhibits the issue Last Appium version that did not exhibit the issue if applicable NA Desktop OSversion used to run Appium Mac OS Nodejs version unless using Appiumappexe Npm or Yarn package managerNPM Mobile platformversion under test iOS iOS Real device or emulatorsimulator Simulator Appium CLI or Appiumappexe Both Details Xamarin Nuget Package version Proposed changes Update caps for Types of changes What types of changes does your code introduce to Appium Put an x in the boxes that apply Bugfix nonbreaking change which fixes an issue New feature nonbreaking change which adds functionality Breaking change fix or feature that would cause existing functionality to not work as expected x Documentation Update if none of the other choices apply Checklist Put an x in the boxes that apply You can also fill these out after creating the PR If youre unsure about any of them dont hesitate to ask Were here to help This is simply a reminder of what we are going to look for before merging your code x I have read the CONTRIBUTING doc x I have signed the CLA Lint and unit tests pass locally with my changes I have added tests that prove my fix is effective or that my feature works I have added necessary documentation if appropriate Any dependent changes have been merged and published in downstream modules Further comments If this is a relatively large or complex change kick off the discussion by explaining why you chose the solution you did and what alternatives you considered etc The problem While running testNG tests on a real device I noticed that basic actions of login and sign up are taking up to mins on OS iPhone XS Max when the same flows run on OS iPhone take only mins Accessibility IDs and code is exactly the same iOS app code is in Swift and we write tests in Java run via testngxml Environment Appium version or git revision that exhibits the issue Appium version Last Appium version that did not exhibit the issue if applicable NA Desktop OSversion used to run Appium MacOS v Nodejs version unless using Appiumappexe NA using Appiumapp Npm or Yarn package manager NPM v Mobile platformversion under test iPhone OS and OS comparison Real device or emulatorsimulator Real device Appium CLI or Appiumappexe Appiumapp There are no error logs since tests dont fail Just that they take exponentially longer Any known solutions I can try out 