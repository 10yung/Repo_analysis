Even without any parameter the notification title still has around it This is a fantastic package thanks for doing it Is there any chance the HTTP Listener could have a variation where it converts the connections to websocket Its not particularly difficult just my powershell skill is at the level I can read it OK but not really write anything advanced I want to use clients with a connection to a message router via websockets and they received the toast packet from there Itll be used by an app to send messages with a url to users who are not using the app with a link to the page they need to open Imagine a workflow scenario where the workflow is handed off to someone who may not be in the app itself but logged and reachable It is not obvious what values are acceptable for the Sound argument I expect there will be some list of sound identifiers defined by the OS as it does not appear to be a path It would be nice if the documentation listed those identifiers or linked to a webpage that provides this list Its not clear to me how to use RemoveBTNotification C Users SkyLinedPOWERSHELL NewBurntToastNotification UniqueIdentifier ab Text test bla C Users SkyLinedPOWERSHELL RemoveBTNotification Tag ab Exception calling Remove with arguments Element not found Exception from HRESULT x At C Program Files WindowsPowerShell Modules BurntToast BurntToastpsm char WindowsUINotificationsToastNotificationManager History CategoryInfo NotSpecified MethodInvocationException FullyQualifiedErrorId Exception This also does not work C Users SkyLinedPOWERSHELL RemoveBTNotification NewBurntToastNotification UniqueIdentifier ab Text test bla Exception calling Clear with arguments The parameter is incorrect applicationId At C Program Files WindowsPowerShell Modules BurntToast BurntToastpsm char WindowsUINotificationsToastNotificationManager History CategoryInfo NotSpecified MethodInvocationException FullyQualifiedErrorId ArgumentException Also the source refers to a help file does not exist First off I think this tool is great Keep up the great work As for my problem Ive been experimenting with version of this tool on two Win machines one physical the other virtual When I try running NewBurntToastNotification on my physical machine the toast is created but the title text is encapsulated in curly braces and I get the error below It works fine on my VM however img width altCapture src Unable to find type WindowsUINotificationsNotificationData At C Program Files WindowsPowerShell Modules BurntToast BurntToastpsm char ToastData WindowsUINotificationsNotificationData newD CategoryInfo InvalidOperation WindowsUINotiotificationDataTypeName RuntimeException FullyQualifiedErrorId TypeNotFound Here are the PS and OS build differences between the two machines Physical PSVersion BuildVersion Version VM PSVersion BuildVersion Version As you can see my physical machine is running a much older version of Windows I assume it has something to do with that On the physical machine I first tried importing the module in a PS session without installing it as I dont like installing modules Im just playing around with For the sake of troubleshooting I then tried installing the module from the PowerShell Gallery Both ways resulted in the error above On my VM I can do a temporary import of the module and it works fine Id really like to be able to use on Win Is it possible Hi did you considered adding handling Hero image into NewBurntToastNotification Like in no time Ive manged to do this function NewBurntToastNotification SYNOPSIS Creates and displays a Toast Notification DESCRIPTION The NewBurntToastNotification function creates and displays a Toast Notification on Microsoft Windows You can specify the text andor image displayed as well as selecting the sound that is played when the Toast Notification is displayed You can optionally call the NewBurntToastNotification function with the Toast alias INPUTS None You cannot pipe input to this function OUTPUTS None NewBurntToastNotification displays the Toast Notification that is created EXAMPLE NewBurntToastNotification This command creates and displays a Toast Notification with all default values EXAMPLE NewBurntToastNotification Text Example Script The example script has run successfully This command creates and displays a Toast Notification with customized title and display text EXAMPLE NewBurntToastNotification Text WAKE UP Sound Alarm This command creates and displays a Toast Notification which plays a looping alarm sound and lasts longer than a default Toast EXAMPLE BlogButton NewBTButton Content Open Blog Arguments NewBurntToastNotification Text New Blog Post Button BlogButton This exmaple creates a Toast Notification with a button which will open a link to when clicked EXAMPLE ToastHeader NewBTHeader Id Title Stack Overflow Questions NewBurntToastNotification Text New Stack Overflow Question More details Header ToastHeader This example creates a Toast Notification which will be displayed under the header Stack Overflow Questions EXAMPLE Progress NewBTProgressBar Status Copying files Value NewBurntToastNotification Text File copy script running More details ProgressBar Progress This example creates a Toast Notification which will include a progress bar EXAMPLE NewBurntToastNotification Text Professional Content And gr spelling UniqueIdentifier Toast NewBurntToastNotification Text Professional Content And great spelling UniqueIdentifier Toast This example will show a toast with a spelling error which is replaced by a second toast because they both shared a unique identifier NOTES Im really sorry about the number of Parameter Sets The best explanation is You cannot specify a sound and mark the toast as silent at the same time You cannot specify SnoozeAndDismiss and custom buttons at the same time LINK aliasToast CmdletBindingDefaultParameterSetName Sound SupportsShouldProcess true param Specifies the text to show on the Toast Notification Up to three strings can be displayed the first of which will be embolden as a title ValidateCount String Text Default Notification TODO ValidateScript TestToastImage Path Specifies the path to an image that will override the default image displayed with a Toast Notification String AppLogo Specifies the path to an image that will be displayed with a Toast Notification in Hero section String Hero Selects the sound to acompany the Toast Notification Any Alarm or Call tones will automatically loop and extent the amount of time that a Toast is displayed on screen Cannot be used in conjunction with the Silent switch ParameterParameterSetName Sound ParameterMandatory true ParameterSetName SoundSnD ParameterMandatory true ParameterSetName SoundButton ValidateSetDefault IM Mail Reminder SMS Alarm Alarm Alarm Alarm Alarm Alarm Alarm Alarm Alarm Alarm Call Call Call Call Call Call Call Call Call Call String Sound Default Indicates that the Toast Notification will be displayed on screen without an accompanying sound Cannot be used in conjunction with the Sound parameter ParameterMandatory true ParameterSetName Silent ParameterMandatory true ParameterSetName SilentSnD ParameterMandatory true ParameterSetName SilentButton Switch Silent Adds a default selection box and snoozedismiss buttons to the bottom of the Toast Notification ParameterMandatory true ParameterSetName SnD ParameterMandatory true ParameterSetName SilentSnD ParameterMandatory true ParameterSetName SoundSnD Switch SnoozeAndDismiss Allows up to five buttons to be added to the bottom of the Toast Notification These buttons should be created using the NewBTButton function ParameterMandatory true ParameterSetName Button ParameterMandatory true ParameterSetName SilentButton ParameterMandatory true ParameterSetName SoundButton MicrosoftToolkitUwpNotificationsIToastButton Button Specify the Toast Header object created using the NewBTHeader function for seperationcategorization of toasts from the same AppId MicrosoftToolkitUwpNotificationsToastHeader Header Specify one or more Progress Bar object created using the NewBTProgressBar function MicrosoftToolkitUwpNotificationsAdaptiveProgressBar ProgressBar A string that uniquely identifies a toast notification Submitting a new toast with the same identifier as a previous toast will replace the previous toast This is useful when updating the progress of a process using a progress bar or otherwise correctingupdating the information on a toast string UniqueIdentifier A hashtable that binds strings to keys in a toast notification In order to update a toast the original toast needs to include a databinding hashtable hashtable DataBinding The time after which the notification is no longer relevant and should be removed from the Action Center datetime ExpirationTime Bypasses display to the screen and sends the notification directly to the Action Center switch SuppressPopup Sets the time at which Windows should consider the notification to have been created If not specified the time at which the notification was recieved will be used The time stamp affects sorting of notifications in the Action Center datetime CustomTimestamp ChildObjects foreach Txt in Text ChildObjects NewBTText Text Txt WhatIffalse if ProgressBar foreach Bar in ProgressBar ChildObjects Bar if AppLogo AppLogoImage NewBTImage Source AppLogo AppLogoOverride Crop Circle WhatIffalse else AppLogoImage NewBTImage AppLogoOverride Crop Circle WhatIffalse if Hero HeroImage NewBTImage Source Hero HeroImage WhatIffalse if Silent Audio NewBTAudio Silent WhatIffalse else if Sound ne Default if Sound like Alarm or Sound like Call Audio NewBTAudio Source mswinsoundeventNotificationLoopingSound Loop WhatIffalse Long True else Audio NewBTAudio Source mswinsoundeventNotificationSound WhatIffalse Binding NewBTBinding Children ChildObjects AppLogoOverride AppLogoImage HeroImage HeroImage WhatIffalse Visual NewBTVisual BindingGeneric Binding WhatIffalse ContentSplat Audio Audio Visual Visual if Long ContentSplatAddDuration MicrosoftToolkitUwpNotificationsToastDuration Long if SnoozeAndDismiss ContentSplatAddActions NewBTAction SnoozeAndDismiss WhatIffalse elseif Button ContentSplatAddActions NewBTAction Buttons Button WhatIffalse if Header ContentSplatAddHeader Header if CustomTimestamp ContentSplatAddCustomTimestamp CustomTimestamp Content NewBTContent ContentSplat WhatIffalse ToastSplat Content Content AppId ScriptConfigAppId if UniqueIdentifier ToastSplatAddUniqueIdentifier UniqueIdentifier if ExpirationTime ToastSplatAddExpirationTime ExpirationTime if SuppressPopupIsPresent ToastSplatAddSuppressPopup true if DataBinding ToastSplatAddDataBinding DataBinding ifPSCmdletShouldProcess submitting ContentGetContent SubmitBTNotification ToastSplat Cheers The documentation on many functions in this module especially around the examples is lacking If youve got the documentation bug please help I have been successful in using all of the builtin windows options via NewBTAudio Source but no custom audio is working using NewBTAudio Path I have tried mp and wav files I dont get an error of any sort the notification simply appears but the default notification sound is played instead of the custome file specified Hey there Im digging into this awesome tool at the moment and I came around a bug Im triggering a reminder that the device hasnt rebooted for a specifc time with a Snooze Button The first time I fire up the Notification I have a good presentation of my toast Then I press the Snooze Button and wait for it to appear again This time the text has curly braces around the text I am using Windows for my tests but it also happens on Here is my code int Uptimehours getdate gcim Win OperatingSystemLastBootUpTimeTotalHours if Uptimehours gt Text NewBTText Content Its time for a reboot Style Header Text NewBTText Content Your device is running for UptimeHours hours Style Body Image NewBTImage Source C Temp Images BurntToastpng AppLogoOverride Crop Circle Binding NewBTBinding Children Text Text AppLogoOverride Image Visual NewBTVisual BindingGeneric Binding Button NewBTButton Snooze Content Snooze Id ToastUptimeSnooze Action NewBTAction Buttons Button Content NewBTContent Visual Visual Actions Action SubmitBTNotification Content Content UniqueIdentifier ToastUptime I am having trouble figuring this one out I see this is supposed to be able to be bound but with a lack of example I have been unable to figure out just how to do that I have a dropdown with time options and want to bind the output to the snooze option Cheers