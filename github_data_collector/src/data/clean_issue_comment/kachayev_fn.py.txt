Closes There is a small typo in fnimmutableheappy Should read pairing rather than pairingi nested options can arise in reasonable APIs Collapsing options can be done with a separately defined join operation Could fnpy do something like this functional concatenation def f a return a def f b return b def f a b return ab f f f Hi I wrote a little trampoline decorator for mutually recursive functions using generators I was going to upload to pypi but I saw your recurtco is similar so probably better to contribute here if youre interested Thanks Hi Im not sure whether this is supposed to work python from fn import as X Xendswithtifimagetif This prints False Looking at the tests I see this form python from fn import as X Xcallendswith tifimagetif This correctly evaluates to True but is significantly uglier Whats happening in the first form isstringorbytes checks for str instances which is correct only for python while in python the right type is basestring Fixes Bug demo in the build after adding tests Has anyone considered starting an active fork of this repo I see it has been forked a number of times but no forks are being actively maintained I dont feel qualified to maintain a project like this but it is such a great library I dont want it to die If no one else steps up within a month Ill create a fork and pledge to provide active updates The fork will have to be deployed on PyPi as well I tried this code for function currying python from fnfunc import curried curried def sum a b c d e return a b c d e sum sum but when I call the function I get the following error Traceback most recent call last File stdin line in module File fnfuncpy line in curried return curriedpartialfunc args kwargs File fnfuncpy line in curried wrapsfunc File usrlibpython functoolspy line in updatewrapper setattrwrapper attr getattrwrapped attr AttributeError functoolspartial object has no attribute module Following on from pull request I have closed and made this new pull request I have limited the my pep ing to just the funcpy file where I have made separate commits One to fix the white spacing and one to fix the unused import Purely to appease my OCD I have made a new unit test to show exactly which bit of the curried functions where not be wrapped correct by the functools when creating a decorator I have applied the same bugfix as before to use the functools to fix this problem The test run I hope that covers everything from your feedback Thank you 