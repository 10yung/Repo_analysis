Fixes Checklist x My code follows the style guidelines of this project x I have performed a selfreview of my own code I have commented my code particularly in hardtounderstand areas I have made corresponding changes to the existing documentation x My changes generate no new warnings I have updated the change log AddChangeFix I have cleaned up the commit history use rebase and squash Changes proposed in this pull request use stbuf params in readdir callback which can improve performance Environment Windows version Pro N Processor architecture x Dokany version Library type DokanyFUSE Dokany Check List x I checked my issue doesnt exist yet x My issue is valid with mirror default sample and not specific to my usermode driver implementation x I can always reproduce the issue with the provided description below x I have updated Dokany to the latest version and have reboot my computer after x I tested one of the last snapshot from appveyor CI Description Windows offers the user the feature Controlled Folder Access which is an additional layer of security against ransom ware When mounting a directory watched by this feature with Dokany the user gets repeatedly warnings about blocked memory acces There seems no loss in functionality Is the reason for these warning known Of course the regarding application using the Dokany library can be whitelisted but this may point to some error in the library Logs Will be added later Please take a look at this link Im not sure this issue is related to encfs or fuse Thanks In Dokan still support some old VC code This ticket is here to remove this old compatibility Environment Windows version Windows Hey just a quick question as I could not find mention of this in Issues I just wonder if you have plan to Integrate to either of those for the backend infrastructure for newer Windows so it is more native kernel Quang Fixes When reading data with a large delay the IRP times out which will cause the file object to be accidentally released When reading data in multiple reads due to the dependency on the file object hndl getname uncontrollable pointer errors will result This question has also been asked before I fixed this problem and through actual testing I found that there would be no more file reading problems but I do n t know if the data returned by read can still be received by the kernel and processed correctly when the file object is released At least my application looks normal Checklist x My code follows the style guidelines of this project x I have performed a selfreview of my own code I have commented my code particularly in hardtounderstand areas I have made corresponding changes to the existing documentation x My changes generate no new warnings I have updated the change log AddChangeFix I have cleaned up the commit history use rebase and squash Changes proposed in this pull request Compare the code only two lines of code changed Feature request can skip this form Bug report must complete it Check List must be match or it will be automatically closed without further discussion Please remove this line Environment Windows version WIN SP Processor architecture x Dokany version Library type DokanyFUSE dokan Check List v I checked my issue doesnt exist yet v My issue is valid with mirror default sample and not specific to my usermode driver implementation v I can always reproduce the issue with the provided description below v I have updated Dokany to the latest version and have reboot my computer after I tested one of the last snapshot from appveyor CI Description Gets BSOD crash when uses procmon to capture events from the dokan network drive Below is stack trace of this issue seems the procmon crashes on creating filename kd k ChildSP RetAddr Call Site fffff bcd fffff b a b ntKeBugCheckEx fffff bcd fffff abcfdc ntMmAccessFault x fffff bcdad fffff a ef ntKiPageFault x c fffff bcdc fffff d dd ntmemmove xb fffff bcdc fffff d ntObpCaptureObjectName x fffff bcdcf fffff d b ntObpCaptureObjectCreateInformation x fffff bcdd fffff ed ntObOpenObjectByName xbb fffff bcde fffff cdc b ntIopCreateFile xa fffff bcdef fffff ef ntIoCreateFileEx xfb fffff bcdf fffff bb fltmgrFltpNormalizeNameFromCache x a fffff bce b fffff b fltmgrFltpExpandShortNames x b fffff bce fffff f ba fltmgrFltpGetNormalizedFileNameWorker xd c fffff bce fffff ada fltmgrFltpGetNormalizedFileName x a d fffff bce fffff fe c fltmgrFltpCreateFileNameInformation xc e fffff bce b fffff fltmgrFltpGetFileNameInformation x c f fffff bce fffff be c fltmgrFltGetFileNameInformation x fffff bce b fffff fa f PROCMON x c fffff bce fffff fc d fltmgrFltpPerformPreCallbacks x b fffff bce fffff de fltmgrFltpPassThroughFastIo x d fffff bce a fffff f d fltmgrFltpFastIoQueryBasicInfo x fffff bce fffff e c ntIopParseDevice x c d fffff bce fffff d ntObpLookupObjectName x fffff bce fffff d ntObOpenObjectByName x fffff bce fffff abef ntNtQueryAttributesFile x fffff bceae b a ntKiSystemServiceCopyEnd x eba x b a Change Library Mirror logger to spdlog Am currently doing a memory filesystem for dokan as samples in c and use spdlog as logging library I feel like it would be a good idea to replace the current log system we have in the library and in the mirror by this library It is header only prettier and more flexible to manage the output type it does support OutputDebugString Does someone have an argument this should not be made ping Kerbox Rondom kyanha UNC is mandatory for proper mount as network drive This is not currently the case We should force network only with UNC Kernel API break should be made for xx as we keep compatibility with previous xx libraries Break API for library Environment Windows version W and W Processor architecture x Dokany version first seen on Library type DokanyFUSE FUSE Check List X I checked my issue doesnt exist yet X My issue is valid with mirror default sample and not specific to my usermode driver implementation X I can always reproduce the issue with the provided description below X I have updated Dokany to the latest version and have reboot my computer after I tested one of the last snapshot from appveyor CI Description Hi I tried to share a FUSE volume by activating Windows PropertiesSharingAdvanced sharing with full control granted to everyone When accessing it from the network on the same machine sharedname or on another machine on the network myIP sharedname I can properly list the files present on the volume and their properties However I keep retrieving corrupted data when I read from those files An easy way to observe the problem is to copy the same file twice to another location and to compare the copies with the original and one another I attached an example of such files On the binary level it seems that MB blocks the size of the transfer buffer I guess are randomly either deleted or inserted I havent been able to determine where the inserted data comes from Consequently this problem rarely occurs with small files but becomes systematic with large files MB I applied the same procedure on the DOKAN mirrorexe sample which is deployed with the debug redistribuables I got the same odd result Since Cygwin DLLs are not deployed on my PC the FUSE mirrorexe could unfortunately not launch I can test that too if you believe thats necessary But if I understand correctly DOKAN relies on FUSE so I think there is a problem with the FUSE read routine when Windows file sharing is involved Has anyone encountered this problem before or did I apply a wrong procedure Thank you in advance for your reply B Logs mirrorlog copiedfileexamplezip debugviewLOG is DokanFS 