countbypassengercountpickupyeartripdistance is slower after query refactor It should ensure that all output column names are unique Currently everything uses FNV but there may be better choices in particular for string data Should set up some benchmarks and find out Columns are reordered to have projections followed by aggregations There are a lot of cases where intermediary results could be streamed between operators but arent One example is inability to stream from operators that produce a full output There are probably some low hanging fruit but proper solution is more involved and will need to revisit the overall design to solve this better probably moving the graph partitioning from QueryExecutor to QueryPlanner to allow insertion of additional operators to aid streaming data There is one remaining place during query execution which is performed manually rather than by constructing and executing a query plan Mostly this just requires moving the Dataappendall function into a VectorOperator and corresponding QueryPlan variant and then constructing a query plan in the same fashion as all the other cases for merging batches Various parts of the code use memtransmute to make lifetimes work out for data referencing strings More details on the issue here Probably not worth revisiting this until generic associated types are available The tablename should be part of the RocksDB primary key so scans over a column that exists in multiple tables doesnt read unnecessary blocks Performance might benefit from ReadOptionsreadahead and ReadOptionsiterateupperbound once those are exposed by rustrocksdb See 