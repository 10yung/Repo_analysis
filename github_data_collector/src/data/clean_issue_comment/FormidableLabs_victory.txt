 Bugs and Questions Checklist x This is not a victorynative specific issue Issues that only appear in victorynative should be opened here x I have read through the FAQ and Guides before asking a question I am using the latest version of Victory No but it doesnt seem different in latest x Ive searched open issues to make sure Im not opening a duplicate issue The Problem I am using events to target both labels and data As such target data labels This event object is then being passed to the VictoryChart component And it works as intended The event being triggered both on data and labels However the documentation as well as the Proptypes definition says the events target should be String and not Array Im getting console error because of that So does it work just coincidentally and I should not be doing this because for instance it could be broken in a future release or maybe theres other bad side effects Im not aware of Or is it intended in which case I guess the doc proptypes should be updated to allow arrays The array notation is more convenient than having to duplicate event registration per target so its quite nice that it works Hi I have many bar charts with outliers that have really large values compared to other items in the bar chart barchart I would like to crop the long bars so that the chart takes less space Something like this ignore the orientation Does your bar chart handle scale breaks barchartscaleBreak Bugs and Questions Checklist This is not a victorynative specific issue Issues that only appear in victorynative should be opened here I have read through the FAQ and Guides before asking a question I am using the latest version of Victory Ive searched open issues to make sure Im not opening a duplicate issue The Problem When using VictorySelectionContainer while also implementing selection of individual bars and other plot types on click not all selected items are deselected as expected Reproduction Heres a sandbox that will demonstrate it better than I can explain Click the last bar Select the first three and not the one you just clicked Clear the selection by clicking away Last bar will still be highlighted and cant be cleared The usecase for this is a timeseries bar chart that acts as a date range filter where clicking or highlighting bars will update the date range Digging into the source a bit I came across this line in selectionhelpersjs While its probably not the most elegant solution Ive worked around the issue by creating my own selection helper and passing eventKey all forcing deselection of all bars Im curious as to whether theres a better solution maybe passing all selected bars in props if possible and if it might be worth adding this to the library as I think the usecase is valid Thanks Bugs and Questions Checklist x This is not a victorynative specific issue Issues that only appear in victorynative should be opened here x I have read through the FAQ and Guides before asking a question x I am using the latest version of Victory x Ive searched open issues to make sure Im not opening a duplicate issue The Problem I have created a chart that changes aspect ratio on browser resize so that the width changes but the height remains the same However there is a problem when using a VictoryBrushContainer where the container seems to not be updated with the new width after resize Reproduction To reproduce the bug please refer to the repository It contains instructions in the README as well as a video outlining the problem Bugs and Questions Checklist x This is not a victorynative specific issue Issues that only appear in victorynative should be opened here x I have read through the FAQ and Guides before asking a question x I am using the latest version of Victory x Ive searched open issues to make sure Im not opening a duplicate issue The Problem Im creating a demanding live updating chart with multiple layers that hopefully will be able to run smoothly on mobile View a demo here click play no login required The problem is that the axis are eating up a lot of CPU whenever the data changes even though the datas domain range arent changing every frame You can see from this performance screenshot that the two axis are taking far more CPU time than the actual graphs which seems undesirable Capture Running Victory the source code for my chart is available here Feature Requests My request is to be able to pass the domain and range into the axis in the same way you pass data to area and line charts Im already computing these values for other prerendering calculations and if the axis just received their domain range theyd know that its not changing even though the rest of the data is That being said ideally I shouldnt even have to do this for the axis to not rerender the charts should be able to figure it out on their own NOTE I noticed that theres minDomain and maxDomain in the docs for axis but when I tried to use it like so VictoryAxis minDomainrangeMin maxDomainrangeMax I received the following TypeScript error Property minDomain does not exist on type IntrinsicAttributes IntrinsicClassAttributesVictoryAxis ReadonlyVictoryAxisProps Readonly Checklist x Ive read through the Docs and Guides to make sure this functionality doesnt already exist x Ive searched open issues to make sure Im not opening a duplicate issue Bugs and Questions Checklist x This is not a victorynative specific issue Issues that only appear in victorynative should be opened here x I have read through the FAQ and Guides before asking a question x I am using the latest version of Victory x Ive searched open issues to make sure Im not opening a duplicate issue The Problem Data label opacity for scatter chart works in chrome but not firefox Reproduction Clone repository and start by executing the command npm install npm start Go to in Chrome and Firefox Notice that in Firefox the labels are opaque whilst in Chrome they are not To illustrate the point further if you hover on a data point the opacity of the label is set to In Chrome you can clearly see a change in opacity on hovering on a data point whereas in Firefox you cannot Bugs and Questions Checklist x This is not a victorynative specific issue Issues that only appear in victorynative should be opened here x I have read through the FAQ and Guides before asking a question x I am using the latest version of Victory x Ive searched open issues to make sure Im not opening a duplicate issue The Problem Cursor crosshair is not aligned with cursor when using createContainerzoom cursor Reproduction Clone repository and run the command npm install npm start Notice that after zooming the crosshair is not aligned with the cursor Bugs and Questions Checklist x This is not a victorynative specific issue Issues that only appear in victorynative should be opened here x I have read through the FAQ and Guides before asking a question x I am using the latest version of Victory x Ive searched open issues to make sure Im not opening a duplicate issue The Problem When using createContainer like so js const VictoryZoomVoronoiContainer createContainerzoom voronoi Being used in a brush and zoom chart implemented from the example js VictoryChart containerComponent VictoryZoomVoronoiContainer zoomDimensionx zoomDomainzoomDomain onZoomDomainChangehandleZoom I receive the following typescript error js Type zoomDimension string zoomDomain DomainPropType onZoomDomainChange domain DomainPropType void is not assignable to type IntrinsicAttributes children ReactNode Property zoomDimension does not exist on type IntrinsicAttributes children ReactNode Reproduction Bugs and Questions Checklist x This is not a victorynative specific issue Issues that only appear in victorynative should be opened here x I have read through the FAQ and Guides before asking a question x I am using the latest version of Victory x Ive searched open issues to make sure Im not opening a duplicate issue The Problem In a stacked bar chart Im trying to add labels to each bar segment on top of the bar Sort of like this img width altScreenshot at src When adding labels to a stacked bar chart the label for each chart segment seems to render after the segment on top of the beginning of the next segment like this instead img width altScreenshot at src Im really struggling to figure out how to center the labels over each segment As the labels are their own elements and not children to the bar segments they belong to I played around with all combinations of textAnchor and verticalAnchor and ended up at a bit of a hacky solution where I calculate the offset based on domain range and chart width But its still a bit off Any ideas on how to center the labels Maybe I just missed something simple Reproduction Sandbox based on the column stacked bar example here The main part being labelComponent VictoryLabel dxdata graphWidth maxDomainminDomain datumy scale factor percent to pixels half the width of segment in return datadatumy Is there any less hacky way to achieve the same Thanks