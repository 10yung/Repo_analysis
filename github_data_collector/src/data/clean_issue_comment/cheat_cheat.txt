Bumps githubcomalecthomaschroma from to details summaryCommitssummary ul lia href Fix Makefileli lia href Highlight the line number targeted by the URL anchorli lia href Update languages supportedli lia href Add the option of making the line numbers linkableli lia href Fix PowerShell error on drive lettersli lia href add SML lexer a href lia href Add lexer for LLVM TableGen a href lia href Avoid empty matches in MLIR lexerli lia href Add simple MLIR lexer a href lia href Add separate go module for cmdchromadli liAdditional commits viewable in a href viewali ul details br Dependabot compatibility score Dependabot will resolve any conflicts with this PR as long as you dont alter it yourself You can also trigger a rebase manually by commenting dependabot rebase dependabotautomergestart dependabotautomergeend details summaryDependabot commands and optionssummary br You can trigger Dependabot actions by commenting on this PR dependabot rebase will rebase this PR dependabot recreate will recreate this PR overwriting any edits that have been made to it dependabot merge will merge this PR after your CI passes on it dependabot squash and merge will squash and merge this PR after your CI passes on it dependabot cancel merge will cancel a previously requested merge and block automerging dependabot reopen will reopen this PR if it is closed dependabot close will close this PR and stop Dependabot recreating it You can achieve the same result by closing it manually dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version unless you reopen the PR or upgrade to it yourself dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version unless you reopen the PR or upgrade to it yourself dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency unless you reopen the PR or upgrade to it yourself dependabot use these labels will set the current labels as the default for future PRs for this repo and language dependabot use these reviewers will set the current reviewers as the default for future PRs for this repo and language dependabot use these assignees will set the current assignees as the default for future PRs for this repo and language dependabot use this milestone will set the current milestone as the default for future PRs for this repo and language dependabot badge me will comment on this PR with code to add a Dependabot enabled badge to your readme Additionally you can set the following in your Dependabot dashboard Update frequency including time of day and day of week Pull request limits per update run andor open at any time Outofrange updates receive only lockfile updates if desired Security updates receive only security updates if desired details I propose to extend the behavior of the program in the following ways The search should also include multiple terms Feature When you search a phrase in the dotfiles using the new context option example x the search should include the comments associated Feature Shell variable interpolation in the search output if variable exists and if using a new option example n Feature Any entry shoud have an ID Autoadded during the search phase so you can execute easily the command using a new option example r Feature Example of dotfiles cat tar bash To create an uncompressed archive tar cvf pathtofootar pathtofoo To extract an uncompressed archive tar xvf pathtofootar cat mytar bash To extract an archive Tag archive extract tar xf ARCHIVE To extract an archive verbose output Tag archive extract tar xvf ARCHIVE Example of search command Set variable for shell variable interpolation ARCHIVE myfiletar so calls cheat program cheat n x tar extract Expected output bash To extract an uncompressed archive ID tar xvf pathtofootar Extracts an archive Tag archive extract ID tar xf myfiletar Extracts an archive verbose output Tag archive extract ID tar xvf ARCHIVE Note Dynamic ID appears in the output The ID doesnt change if the search context tag and loading path remains the same Shell variable interpolarion is performed using variable defined previously Example of run command To recall and execute a cheat cheat r Workaround I wrote a small Python script to accomplish the described operations Features and but its dirty without color etc It would be better if integrated into official Python and GO projects following the business logic of official projects cat cspy python Requirements Install cheat available at link into bin directory Import Python libraries import sys subprocess re Set variables terms sysargv reflags reMULTILINE reIGNORECASE Regular expressions linere r n termstartre r termendre r n filenamere r w Calls cheat data subprocessrun cheat s terms captureoutputTruestdoutdecodeutf dbs refindallfilenamere data reflags data for db in dbs data n subprocessrun cheat db captureoutputTruestdoutdecodeutf Filters output for term in terms termre termstartre term termendre searchre linere termre linere data refindallsearchre data reflags data njoindata Prints result data datastrip printdata Hi chrisallenlane Is your feature request related to a problem Please describe I finally got to create an rpm package and i found out that there is no straightforward way how to package cheatsheets I can download them from cheatsheets repository but since i need to install them under usrshare directory cheat can not access them out of the box Rpm package does not install files under user directory so i need to set environmental variable CHEATCONFIGURATIONPATH to etccheatyml and there set path to cheatsheets to usrsharecheat All this results in need to restart running bash instances to load environmental variable Describe the solution youd like There are multiple possible solutions For example cheat could by default look into usrsharecheat and tag sheets found there as a distribution cheats Something similar could work with configuration Cheat could look into etccheatyml and take content of that file as default values but if user provides configuration in configcheatconfyml then this configuration would override the systemwide one I think these changes could all fail silently on failure and thus not change current cheats behavior on any system Describe alternatives youve considered As i said ive managed to workaround this by creating script in etcprofiled with export of CHEATCONFIGURATIONPATH variable Additional context This results in discomfort when installing cheats rpm package Also user would have to change script in profiled to set configuration path back to his home directory I know that attempts to solve this issue previously resulted in issues on other systems but if attempts to access those files will be nonmandatory and fail silently then i think it is safe Feel free to propose some other solution I just need a way how to make cheat work out of box without touching users home directory in installation and with cheatsheets located in usrsharecheat Im doing this not only because it will provide more comfort to Fedora users but also because it is the right thing to do because of Thanks for any help you can provide To simplify the installation of cheat cheatsheets I created dockercheat which packages both projects in a single MB docker image As it may be useful to others as well I went ahead and linked the project here specifically from the Related Projects and Installing wiki pages However I noticed neither page is linked by the README Is that intentional For example I was quite surprised when I read on Installing that there are cheat OS packages a fact that the README fails to mention Is your feature request related to a problem Please describe I prefer to keep my shelltext editor rather narrow and to the side The problem is when listing all my available cheatsheets the shell output is rather cramped and hard to read In addition Ive created subfolders inside my personal directory to scope cheatsheets further it would be much more readable to be able to list cheatsheets by scope Describe the solution youd like Id like to propose an alternative format for the cheat l command css bem css webdevelopment selectors css webdevelopment transition animation css webdevelopment js array array datasctructure javascript fetch api http javascript webdevelopment This way output is much more readable and friendlier to the narrower shell users Describe alternatives youve considered An alternative to this approach would be to remove the file output from cheat l Its rare that Im interested in the exact filepath of the cheatsheet since Ive scoped them I know basically where they are In the case that I would like to find the filepath a cheat cheatsheet info command could be useful Additional context This is my current output Screen Shot at Rails recently added something similar for its rails routes command This was notoriously messy output The addition of an expanded flag outputs much more streamlined Rails shows routes in expanded format BigBinary Ive created a FreeBSD port for cheat and got this feedback This port is a little strange It installs a binary that just displays an error message about needing a config file Perhaps pkgmessage could say how to generate that file Except once you generate the config file as upstream instructs cheat still cant find it Im not sure where its actually looking for it Once you set the env var to point it to the config file it just errors out because theres no actual data files installed The cheat data files should probably be installed along with the cheat binary Thanks for submitting a bug report Please provide the following information Could you please address these concerns and update the code Thanks Yuri githubcomdocoptdocoptgo has been renamed Is your feature request related to a problem Please describe Currently cheat will apply syntaxhighlighting to markdown documents but it does not render them the way one may expect to view them on Github See for context Describe the solution youd like It would perhaps be useful if cheat could render markdown documents in addition to simply applying syntaxhighlighting to them Because we do not want to make an assumption regarding which behavior the user would prefer perhaps cheatsheets that should be rendered could be prefaced with render true frontmatter Additionally perhaps the equivalent configuration option could be added to confyml Additional context Does there exist a layoutengine written in Go that could be imported into the project Glad to see the new release of cheat thanks for all the work Im sure it will be at least as useful as the previous version I noticed there are no more autocompletion files on the current master branch I really valued the tab completion for cheatsheets in the past This gets especially interesting when package maintainers start packaging cheat v I assume completions for the most widely used shells are needed x bash zsh x fish m nu recommended upx UPX for shrinking Go executable sizes Investigate it and other toolstechniques for shrinking the executables upx 