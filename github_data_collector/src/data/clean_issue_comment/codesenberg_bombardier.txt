This is an example of what a bug report can look like Please feel free to also provide any other information relevant to the issue What version of bombardier are you using What operating system and processor architecture are you using if relevant all What did you do run this command bash bombardier n c What you expected to happen start benchmark What actually happened it outputs is not an acceptable protocol http https feat Add parameter to disable HTTP keep alives a and disableKeepAlives It is only compatible with http and http not with fasthttp Add disableKeepAlives boolean to argsparsergo and configgo Set parameter to clientOpts bombardiergo Configure http client transport with DisableKeepAlives clientsgo When i run this command go get u v githubcomcodesenbergbombardier i get error package githubcomcodesenbergbombardiervendorgolangorgxnethttp vendorgolangorgxnethttp pipego expected package found EOF Please give me a solution thanks you so much From MacOS How much system resourceCPU RAM storage bandwidth etc I need to spawn millions concurrent users Hi I want to know if there is a meaning of putting a higher amount of connections than the rate limit if I am running with c and r I will get a different result than if I run c and r What is the meaning of it Thanks becuase there is caching enabled on my sites and i want to test different urls as if url gets requested twice it gets cached so it would be great if we could provide txt file containing list of urls thanks The output produced by bombardier cannot be consumed by Prometheus It would be nice to have metrics like this Prometheus nodeexporter has textfile collector The collector scans directory for prom files and adds the metrics found in the file to its own metrics set This way I can run bombardier every minute output results to bombardierprom file and the metrics will be picked up by Prometheus server I would like to come up with a number of metrics and have an option to output results as a Prometheus metric For example the following output Statistics Avg Stdev Max Reqssec Latency ms ms ms would result in the following metrics bombardierhttprequestrateavg bombardierhttprequestratemax bombardierhttprequestratestdev bombardierhttplatencyavg bombardierhttplatencystdev bombardierhttplatencymax Each metric could have one or more labels associated with it For example the following command bombardier c d s l would result in the following metrics conn duration url Further it would be helpful to output UUID associated with each test