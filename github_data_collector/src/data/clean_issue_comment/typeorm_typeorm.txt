Issue type X question bug report feature request documentation issue Database systemdriver cordova mongodb mssql mysql mariadb oracle X postgres cockroachdb sqlite sqljs reactnative expo TypeORM version X latest next xx or put your version here Steps to reproduce or a small repository showing the problem I have a query that operates on tables and returns some attributes from each of them for a total of over attributes selected I have noticed that if I only return attribute per table ie just the id on my machine the code is seconds faster than if I select all the attributes If my query is a getMany which joins as NM another table the number of records in the table M doesnt affect the time that the code takes to return me the data but if I remove the selection of attributes of them from such table M then the code runs much faster even if the table itself has records in it Please note that this is not a query optimisation question but its related to how TypeORM reconstructs the final object returned from a getOne or getMany function Any help will be greatly appreciated thanks Issue type X question bug report feature request documentation issue Database systemdriver cordova mongodb mssql mysql mariadb oracle postgres cockroachdb sqlite sqljs reactnative expo TypeORM version latest next xx or put your version here Steps to reproduce or a small repository showing the problem Trying to find a way to do this I cant seem to find any search results either I am just looking for a way to get all colum names and types from my entities after they have been created is this possible Issue type question x bug report feature request documentation issue Database systemdriver cordova mongodb mssql mysql mariadb oracle X postgres cockroachdb sqlite sqljs reactnative expo TypeORM version X latest next X Steps to reproduce or a small repository showing the problem All my tables defined in Postgres database have the auditing columns createdat updatedat and version The createdat and version are by default set as NOT NULL For some reason the ORM by default is not setting a new date when inserting a new record even with the CreateDateColumn decorator declared However everything works fine regards to the version property with the VersionColumn decorator Both are not null in the Database I am using a workaround with BeforeInsert to set a new Date However it is not elegant at all My column declaration CreateDateColumn Column name createdat createdAt Date UpdateDateColumn Column name updatedat updatedAt Date VersionColumn Column private version number Down below the log the shows evidence that the ORM is not setting the date automatically query START TRANSACTION query INSERT INTO contactstype name email website phone phone ext phone phone ext address addresscompl city province postalcode country createdat updatedat version VALUES DEFAULT DEFAULT DEFAULT RETURNING id PARAMETERS PLeonardo a Industry StSuite TorontoONM V E CA query failed INSERT INTO contactstype name email website phone phone ext phone phone ext address addresscompl city province postalcode country createdat updatedat version VALUES DEFAULT DEFAULT DEFAULT RETURNING id PARAMETERS PLeonardo a Industry StSuite TorontoONM V E CA error error null value in column createdat violates notnull constraint at ConnectionparseE homewallup devwallupcmsnodemodulespglibconnectionjs at ConnectionparseMessage homewallup devwallupcmsnodemodulespglibconnectionjs at Socketanonymous homewallup devwallupcmsnodemodulespglibconnectionjs at Socketemit eventsjs at SocketEventEmitteremit domainjs at addChunk streamreadablejs at readableAddChunk streamreadablejs at SocketReadablepush streamreadablejs at TCPonStreamRead internalstreambasecommonsjs name error length severity ERROR code detail Failing row contains P Leonardo a Industry St Suite Toronto ON M V E CA null null null hint undefined position undefined internalPosition undefined internalQuery undefined where undefined schema public table contacts column createdat dataType undefined constraint undefined file execMainc line routine ExecConstraints More details T DEBUG ContactModelts QueryFailedError null value in column createdat violates notnull constraint at new QueryFailedError homewallup devwallupcmssrcerrorQueryFailedErrorts at Queryanonymous homewallup devwallupcmssrcdriverpostgresPostgresQueryRunnerts at QueryhandleError homewallup devwallupcmsnodemodulespglibqueryjs at ConnectionconnectedErrorMessageHandler homewallup devwallupcmsnodemodulespglibclientjs at Connectionemit eventsjs at ConnectionEventEmitteremit domainjs at Socketanonymous homewallup devwallupcmsnodemodulespglibconnectionjs at Socketemit eventsjs at SocketEventEmitteremit domainjs at addChunk streamreadablejs message null value in column createdat violates notnull constraint name QueryFailedError length severity ERROR code detail Failing row contains P Leonardo a Maine St Suite Toronto ON M T Y CA null null null hint undefined position undefined internalPosition undefined internalQuery undefined where undefined schema public table contacts column createdat dataType undefined constraint undefined file execMainc line routine ExecConstraints query INSERT INTO contactstype name email website phone phone ext phone phone ext address addresscompl city province postalcode country createdat updatedat version VALUES DEFAULT DEFAULT DEFAULT RETURNING id parameters P Leonardo a Maine St Suite Toronto ON M T Y CA Issue type question X bug report feature request documentation issue Database systemdriver cordova mongodb mssql X mysql mariadb oracle postgres cockroachdb sqlite sqljs reactnative expo TypeORM version X latest next xx or put your version here Steps to reproduce or a small repository showing the problem I created a select statement according to the documentation This code is pretty old and i think it worked some while ago But suddenly i get an Error ERPARSEERROR You have an error in your SQL syntax check the manual that corresponds to your MySQL server version for the right syntax to use near value s useParameter true multipleParameters false usePa at line I also tried with the other FindOperators return thiscategoryRepositoryfind where name Like searchString The Problem is in the QueryBuilder parameterValue instanceof FindOperator He always returns false even if in debug mode it shows that is a FindOperator if i create a FindOperator object in my service and make the instanceof check it returns correctly true Anyone an idea how this could happen I tried to downgrade typeorm to but it didnt change I use typescript Any other ideas what i can try Issue type question X bug report feature request documentation issue Database systemdriver cordova mongodb mssql X mysql mariadb oracle postgres cockroachdb sqlite sqljs reactnative expo TypeORM version latest next X or put your version here Steps to reproduce or a small repository showing the problem Create a database connection Try to use the findOne option where you query on a field that doesnt exist in the database In our case I queried for domainName instead of name TypeOrm will now return the first record from the database even tho is a completely different record than it should be Issue type x bug report Database systemdriver x mysql mariadb TypeORM version x latest x next Steps to reproduce or a small repository showing the problem Create an enum column with default value null ts enum MyEnum valueA valueA valueB valueB Entity export class Entity extends BaseEntity Column type enum enum MyEnum nullable true default null field MyEnum result js message Invalid default value for field code ERINVALIDDEFAULT errno sqlState sqlMessage Invalid default value for field name QueryFailedError query ALTER TABLE entity CHANGE field field enum valueA valueB NULL DEFAULT null parameters It shouldve generated query ALTER TABLE entity CHANGE field field enum valueA valueB NULL DEFAULT null Adding defaultValue null seems to work Issue type question x bug report feature request documentation issue Database systemdriver cordova mongodb mssql mysql mariadb oracle x postgres cockroachdb sqlite sqljs reactnative expo TypeORM version x latest next xx or put your version here Steps to reproduce or a small repository showing the problem When I am creating a new entity with the function create and in the entity there are relationships All the relationships of that relation are being queried what is causing big performance issues in my application I created a repository to reproduce this issue My entities are here As you see User has a lazy Asset relationship and the Organization has a relationship to the User Now if im creating a new organization and adding the user entity The assets are being queried I reproduced this here I hope I explained the problem well If there is something unclear please let me know or if this is known behaviour Thanks in advance To answer those questions you need to put x inside the square brackets for example x mysql postgres Also please format your code properly by taking code blocks into ts Issue type question bug report x feature request documentation issue Database systemdriver cordova mongodb mssql mysql mariadb oracle x postgres cockroachdb sqlite sqljs reactnative expo TypeORM version latest next x Steps to reproduce or a small repository showing the problem Hi guys awesome work Im currently working on a multiple tenancy application SaaS where each tenanct would have their own DB connection and same models which is determined by the imcoming request subdomain I used continuationlocalstorage to initialize tenants connection in express middleware and refer to them in services and get repositories from them Just wondering if the Reponsitory class could be rewritten to support dynamically generated manager and metadata and etc So that I can extend it and override those functions to get the current manager metadata and queryRunner etc So that I can use it more elegently inject repository instances to services middleware to initialize tenants connection import createNamespace from continuationlocalstorage import as express from express import ExpressMiddlewareInterface Middleware from routingcontrollers import Connection createConnection getConnection Repository from typeorm import SnakeNamingStrategy from databasesnakenamingstrategy import Constants from commonconstants import TenantEntity from modulestenantTenantEntityCatalog import TenantNotFoundError from modulestenantTenantErrors Middleware type before export class CreateContextMiddleware implements ExpressMiddlewareInterface public usereq expressRequest res expressResponse next expressNextFunction any nsbindEmitterreq nsbindEmitterres nsrunasync nssetConstantsTENANTSLUGKEY reqheadershostsplit await getOrCreateTenantConnection next export function getCurrentTenantSlug string return nsgetConstantsTENANTSLUGKEY export function getTenantConnection Connection const currentSlug getCurrentTenantSlug return getConnectioncurrentSlug async function getOrCreateTenantConnection PromiseConnection const currentSlug getCurrentTenantSlug const tenantRepository RepositoryTenantEntity getConnectiongetRepositoryTenantEntityTenantEntity const tenant TenantEntity await tenantRepositoryfindOne slug currentSlug return getOrCreateConnectiontenant async function getOrCreateConnectiontenant TenantEntity PromiseConnection try return getConnectiontenantslug catch e try return createConnection type postgres host tenantdatabaseHost port tenantdatabasePort username tenantdatabaseUser password tenantdatabasePassword database tenantdatabaseName name tenantslug synchronize false migrationsRun true namingStrategy new SnakeNamingStrategy entities dirname Entitytsjs dirname modelsEntitytsjs migrations dirname databasemigrationstenanttsjs catch e throw new TenantNotFoundError requested feature in Ropositoryts Checks if entity has an id If entity composite compose ids it will check them all hasIdentity any boolean return thismanagerhasIdthismetadatatarget entity public manager return thismanager public metadata return thismetadata I dont know if this makes any sense Im fairly new to TypeScript and Nodejs Any suggestion would be appreciated Keep up the awesome work Thanks Regards Jasper Issue type X question X feature request Database systemdriver X postgres TypeORM version X latest Hello Is it possible to make TypeORM to return undefined instead of null for columns with NULL values in them This will really help to make values consistent because missing values will be represented by a single undefined value not two different values undefined and null The other way would be to initialize all empty values in my new entities with nulls but it would be cumbersome and will make code more complex typescript class MyEntity Column const value string const myEntity new MyEntity expectmyEntityvaluetobeundefined OK myEntity await entityManagersavemyEntity expectmyEntityvaluetobeundefined Not OK its null now Issue type X question bug report feature request documentation issue Database systemdriver cordova mongodb mssql mysql mariadb oracle postgres cockroachdb sqlite sqljs X reactnative expo TypeORM version x latest next xx or put your version here In an app Im building I have cases where I need to load fully populated objectsT That includes the all layers of relations as wel I can do this manually but that seems really messy and I cant imagine there isnt a way to accomplish this with query builder How can one load ALL layers of relations of an entity