Latest version still uses the deprecated Name property when creating DSC based requirement powershell switch PSCmdletParameterSetName Script Requirement Namespace Namespace Describe Describe Test Test Set Set DependsOn DependsOn Dsc dscParams Name ResourceName ModuleName ModuleName Property Property Requirement Name Namespace Describe Describe Test InvokeDscResource Method Test dscParams GetNewClosure Set InvokeDscResource Method Set dscParams GetNewClosure DependsOn DependsOn The DSC portion needs to be updated to powershell Requirement Namespace Namespace Describe Describe Test InvokeDscResource Method Test dscParams GetNewClosure Set InvokeDscResource Method Set dscParams GetNewClosure DependsOn DependsOn Would submit PR but dont have CLA We heavily rely on classes which dont integrate well with ImportModule which forces us to dot source a lot using module should solve our import woes Add examples on how to perform IIS setup with the module Missed some cases where Requirements failed to error correctly We should enumerate and test these cases Methods Scenario Test Test outputs a falsey value Set Set throws an error Test Set Test fails both times it is called Right now indentation seems to thrash between spaces and spaces Current error reporting v behavior Error is captured and printed after the Requirements output Exception callstack is printed with internal Requirements calls popped off FormatChecklist fails when passing a RequirementEvent object as a parameter It should format the objects as it does when they are passed in from the pipeline Error FormatChecklist Cannot bind parameter Date to the target Exception setting Date Cannot convert null to type SystemDateTime At line char FormatChecklist RequirementEvent output fails CategoryInfo WriteError FormatChecklist ParameterBindingException FullyQualifiedErrorId ParameterBindingFailedFormatChecklist Code to reproduce mySystem collectionsgenericlist int new requirements Name Resource Describe Resource is present in the system Test mySystem contains Set mySystemAdd OutNull StartSleep Name Resource Describe Resource is present in the system Test mySystem contains Set mySystemAdd OutNull StartSleep output requirements InvokeRequirement output FormatTable OutHost works FormatTable InputObject output OutHost works output FormatChecklist OutHost works FormatChecklist RequirementEvent output fails Topics that need to be covered What is a Requirement What does a single Requirement look like What are all the properties on a Requirement Which properties are mandatoryoptional What are the major patterns for building Requirements Dynamically generating Requirements using control flow if foreach etc Gettersetter pattern for getting properties of your system Generator function pattern for returning Requirements from a function based on parameters InvokeRequirement should have a switch Parallel that allows requirements to be executed in parallel according to the Name and DependsOn properties of each Requirement This optin feature would provide a major improvement over DSC s synchronous execution