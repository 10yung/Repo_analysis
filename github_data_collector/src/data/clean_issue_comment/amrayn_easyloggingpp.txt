MUSL libc does not natively have libexecinfo Adding this change make execinfo optional Also made a PR that uses this as part of their dependencies So this would make a complete set if both PRs get merged Signedoffby Nathan Owens ndowens gmailcom This is a x New feature I have x Merged in the latest upstream changes x Tested Hi I have simple code c include easyloggingh INITIALIZEEASYLOGGINGPP int main LOGINFO Hello return The build is successful shell g maincpp stdc o tmp But I got error running tmp shell tmp lib libstdcso version GLIBCXX not found required by tmp tmp lib libstdcso version GLIBCXX not found required by tmp I used the latest release of your library centosrelease el centosx g GCC I am getting this error in compile time using the latest release v vs and Qt easyloggingh error C QStringQString cannot access private member declared in class QString When building an automatic unit test with Qt Creator and Qt a link error occurs when doing QString first LOGinfo first xxxxxxx logging easyloggingh error invalid operands to binary expression basetypestringstreamt aka basicstringstreamchar and const QString ELPPSIMPLELOGconst Class This only happens in QtUnitTest In Application it seems fine template typename M class ScopedLock baseNoCopy public explicit ScopedLockM mutex mmutex mutex mmutexlock virtual ScopedLockvoid mmutexunlock private M mmutex ScopedLockvoid class ThreadSafe public virtual inline void acquireLockvoid ELPPFINAL mmutexlock virtual inline void releaseLockvoid ELPPFINAL mmutexunlock virtual inline basethreadingMutex lockvoid ELPPFINAL return mmutex protected ThreadSafevoid virtual ThreadSafevoid private basethreadingMutex mmutex basethreadingScopedLock scopedLocklock In various use cases and applications we need to store a large number of logs and also need to archive those logs In some cases logs can also be used for further analysis It will be great if we could connect to the database and dump logs to that database instead of rotating through log files and uploading them to some storage on certain intervals This is a Breaking change New feature Bugfix I have Merged in the latest upstream changes Updated CHANGELOGmd CHANGELOGmd Updated READMEmd READMEmd Run the tests READMEmdinstalloptional because ELPPSTACKTRACE needs execinfoh and cygwin does not support execinfoh it causes compilation errors on EternalTerminal in Cygwin i am guessing the correct course of action is to disable it on cygwin This is a Breaking change New feature Bugfix I have Merged in the latest upstream changes Updated CHANGELOGmd CHANGELOGmd Updated READMEmd READMEmd Run the tests READMEmdinstalloptional Set level output with a fixed width Allowing user configure fbase in log filename with conf file This is a Breaking change x New feature Bugfix I have x Merged in the latest upstream changes x Updated CHANGELOGmd CHANGELOGmd Updated READMEmd READMEmd Run the tests READMEmdinstalloptional Example of this feature GLOBAL ENABLED true TOFILE true TOSTANDARDOUTPUT true FORMAT datetimeHms level fbaseline msg FILENAME tmpLOGdatetimeYMdfbaselog MILLISECONDSWIDTH PERFORMANCETRACKING false MAXLOGFILESIZE LOGFLUSHTHRESHOLD VERBOSE ENABLED false I have test with CMakeLists with g GLOBAL ENABLED true TOFILE true TOSTANDARDOUTPUT true FORMAT leveldatetimems fbaseline msg FILENAME homemateLOGdatetimeYMdlogdatetimeYMdHlog MILLISECONDSWIDTH PERFORMANCETRACKING false MAXLOGFILESIZE LOGFLUSHTHRESHOLD VERBOSE ENABLED false It is a very simple conf file if the FILENAME has two datetime with different formats it only parses once and then replace all datetime with first format ignoring others as a normal string An example of this log YMdHlog 