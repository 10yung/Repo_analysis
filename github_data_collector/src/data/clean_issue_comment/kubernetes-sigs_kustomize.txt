Updates the printer for status to use reset escape codes after setting color instead of setting it to a specific color This should both address the problem where the output doesnt look correct for a terminal with white background and the issue where the terminal color doesnt go back to the default after the command has completed Fixes pwittrock I have one problem with latest release version of kustomize v This version deletes all empty lines from ConfigMaps generated by configMapGenerator Previous versions did not do this Example kustomize version Versionkustomizev GitCommit ba fe ef dc e edd d d e b d BuildDate T Z GoOslinux GoArchamd kustomize version Versionkustomizev GitCommit af fa f f c c a e ab BuildDate T Z GoOslinux GoArchamd kustomize build build yaml kustomize build build yaml diff urN build yaml build yaml build yaml build yaml nginxconf user nginx workerprocesses errorlog varlognginxerrorlog warn pid varrunnginxpid events workerconnections http include etcnginxmimetypes defaulttype applicationoctetstream logformat main remoteaddr remoteuser timelocal request status bodybytessent httpreferer httpuseragent httpxforwardedfor accesslog varlognginxaccesslog main sendfile on tcpnopush on keepalivetimeout gzip on include etcnginxconfdconf kind ConfigMap Files used for kustomize build can be found at The command changes the console colors and when it exits it leaves them changed Not sure what the extra row is that says completed status events helloworld ResourceUpdate Unknown appsv Deployment helloworldgke Current Resource has been deleted ResourceUpdate Current v Service helloworldgke Current Resource has been deleted Completed Current Should figure out if the table will fit and it if wont then either drop columns or fallback on another display mode Even though the resources exist it still prints the message they are deleted EVENT TYPE AGG STATUS TYPE NAMESPACE NAME STATUS MESSAGE ResourceUpdate Unknown appsv Deployment helloworldgke Current Resource has been deleted ResourceUpdate Current v Service helloworldgke Current Resource has been deleted Completed Current and later this even though they exist TYPE NAMESPACE NAME STATUS MESSAGE appsv Deployment helloworldgke Current Resource does not exist v Service helloworldgke Current Resource does not exist We run kustomize in our CI to compile kustomizationyaml files instead of handcrafting them and realized that our process was not deterministic resource files were often missing at the end of the process from the kustomizationyaml Script to easily reproduce the situation Run inside an empty directory sh binenv sh echo kustomizationyaml for i in do touch imanifestyaml done add all the resources to kustomizationyaml for i in do kustomize edit add resource imanifestyaml pids i done wait for all pids for pid in pids do wait pid done cat kustomizationyaml Probably a classic problem with concurrency files are read before writes happen and processes overwrite the state of each other The same issue would happen if there are two users on the same machine or in the case when N run kustomize edit kustomize edit cc kanolato Rather than making functions implement logic to merge Resources we should simplify them by merging the Resources for them by default Add filtersMerge to the list of filters here Support NoMerge bool field on RunFns to disable this behavior Support nomerge commandline option to config run that is passed through to RunFns Consider making this part of the function API itself so it is specified perfunction This puts the code that performs the apply and computes status into a separate goroutine that reports back progress through events on channel This will allow us to support different output formats including inplace progress updates for apply status and prune It is also a step towards being able to provide apply as a library since a client could listen for the events Some known limitations that we need to address in follow up PRs Clean up the handling of cobra flags The current setup is confusing and we probably need a somewhat different set of flags than the original kubectl More output formats Currently this only supports a single format and the output flag is not being honored Continue to clean up the structure to allow for easier testing monopole seans pwittrock The following example reproduces my issue Setup bash EXAMPLEmktemp d mkdir p EXAMPLEbase cat EOF EXAMPLEbasekustomizationyaml namePrefix app EOF cat EOF EXAMPLEdeploymentyaml apiVersion appsv kind Deployment metadata name web spec selector matchLabels app web template metadata labels app web spec containers image test name test EOF cat EOF EXAMPLEkustomizationyaml nameSuffix staging resources base deploymentyaml EOF Version GitCommit af fa f f c c a e ab BuildDate T GoOsdarwin GoArchamd Test bash kustomize build EXAMPLE Result apiVersion appsv kind Deployment metadata name webstaging spec selector matchLabels app web template metadata labels app web spec containers image test name test Expectations I expected name to be appwebstaging applying both the namePrefix from base and nameSuffix from overlay Resources added to the base get both the prefix and suffix resources in overlay dont get the prefix Additional namePrefix specified in overlay applies to all resources