When using msgpack rc I receive the following error message File homeusrvirtualenvsmsgpacklibpython sitepackagespymetasploit py eggpymetasploit utilspy line in decode File msgpackunpackerpyx line in msgpackcmsgpackunpackb ValueError int is not allowed for map key Apparently there are some breaking changes with msgpack I came across this issue because my project uses setup tools and includes pymetasploit in the requirementstxt and more to the point setuptools allows for release candidates while pip does not Here is an example of a message that failed to decode with msgpack rc cat pocpy usrbinenv python import msgpack msg b x x xde x x xc x type xc x bmeterpreter xc x ctunnellocal xc x xc x btunnelpeer xc x xc x bviaexploit xc exploitwindowssmbms psexec xc x bviapayload xc payloadwindowsmeterpreterreversetcp xc x desc xc x bMeterpreter xc x info xc x NT AUTHORITY SYSTEM HMI xc tworkspace xc x default xc x csessionhost xad xc x csessionport xcd x xbd xc x btargethost xad xc x username xc x root xc x uuid xc x qoudbsk xc x cexploituuid xc x bxohlxve xc x routes xa xc x arch xc x x xc x platform xa windows printmsgpackunpackbmsg pocpy Traceback most recent call last File pocpy line in module printmsgpackunpackbmsg File msgpackunpackerpyx line in msgpackcmsgpackunpackb ValueError int is not allowed for map key WORKAROUND In my projects requirementstxt I added msgpack pymetasploit But eventually pymetasploit will need to be updated to work with msgpack Hi First of all thanks for your python client its amazing I have encountered a problem when trying to set ACTION option it isnt listed on msfrpc client neither however if you inspect the ruby code it can be set using the key ACTION If you try to do the same in python it fails because it isnt listed in options during key validation def runauxiliarymod opts uuid job MsfSimpleAuxiliaryrunsimplemod Action opts ACTION RunAsJob true Options opts jobid job uuid uuid end opts RHOSTS ACTION KEYS RHOSTS ACTIONKEYS rpccallmoduleexecute auxiliary scannersslopensslheartbleed opts jobid uuida otl jb rpccalljobinfo jid nameAuxiliary scannersslopensslheartbleed starttime datastoreWORKSPACEnil VERBOSEfalse RPORT SSLfalse SSLVersionAuto SSLVerifyModePEER SSLCiphernil Proxiesnil CPORTnil CHOSTnil ConnectTimeout TCPmaxsendsize TCPsenddelay RHOSTS THREADS ShowProgresstrue ShowProgressPercent TLSCALLBACKNone TLSVERSION MAXKEYTRIES STATUSEVERY DUMPFILTERnil RESPONSETIMEOUT LEAKCOUNT HEARTBEATLENGTH XMPPDOMAINlocalhost ACTIONKEYS RHOSTnil root d bd d ad msf loot ls default opensslheartble txt Edit Looks like its possible to get ACTIONS available for auxiliarypost modules calling rpcinfo being able to get that information from python would be great def rpcinfomtype mname if mtype auxiliary mtype post res actions mactionseachindex do i res actions i mactions i name end if mdefaultaction res defaultaction mdefaultaction end res end Add an encoding arguments to MsfRpcClient constructor to fix UnicodeDecodeError exception in some OS Such as Chinese version of windows When session died automatically rexploit and write loop for commands ex recordmic d If RHOST is set for an exploit even then it shows missingrequired RHOSTS while in Metasploit when RHOST is set RHOSTS is not required how to cater this while using exploitrequiredmissing I want to get the exploit uuid which in case of exploitexecute is following exploitexecutepayloadcmdunixinteract jobid uuid whbuevf but when running with output that is clientconsolesconsolecidrunmodulewithoutputexploit payloadcmdunixinteract there is no such type of dictionary available What i actually want to do is match the uuid as given by exploitexecute with the exploit uuid with any of the available sessions from sessions list clientsessionslist for example in case of exploitexecute exploitexecutepayloadcmdunixinteract jobid uuid whbuevf clientsessionslist info username jsmith sessionport viapayload payloadcmdunixinteract uuid orqnnyv tunnellocal viaexploit exploitunixftpvsftpd backdoor exploituuid whbuevf tunnelpeer workspace false routes targethost type shell sessionhost desc Command shell the uuid of exploitexecute and exploituuid of session from clientsessionslist matches That is what i want to do with clientconsolesconsolecidrunmodulewithoutputexploit payloadcmdunixinteract 