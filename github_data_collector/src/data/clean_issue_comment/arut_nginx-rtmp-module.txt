I know that I can record manually with the help of the control module and that part is working well but what I would need is to record s of feed with the control module Is that possible at all Any suggestions how to achieve this Thanks I push a video stream to my rtmp server that is used nginxrtmp module the stream will be transfor hls stream via ffmpeg and will create m u file automatic my nginx configuare file like this application stream live on exec ffmpeg i rtmplocalhost streamname ca libfdkaac ba k cv libx bv k f flv g r s x preset superfast profilev baseline rtmplocalhost hlsname p kbs application hls live on hls on hlsfragmentnaming system hlsfragment hlsplaylistlength hlspath mntlive hlsnested on hlsvariant p kbs BANDWIDTH RESOLUTION x I push rtmp data to stream point and m u file will be created automatic I want to add a fixed prefix in these m u file How can I do that is there has somthing like hlsxxxx thanks for any help Is there a way to set availabilityStartTime T Z I tried to modify manifest on web server with nodejs middleware but this does not work most online players do not accept modified streams Only VLC player is working well So what I did set availabilityStartTime T Z changed segment names accordingly I realised that players dashjs bitmovin etc stop working when I move availabilityStartTime for about or more seconds to the past If time movement is less than this number they will most likely play It is clear that segments contain some timing data So if there is no option to control this parameter using nginxrtmpmodule can someone tell me where this data exactly is I tried to google for m am v format specifications but did not find any understandable sources I am capturing channels by RTMP but there are two channels that capture OK but when I see them for hls I see that the video stream is lost The channels are America and A the rest works OK In the case of A I made a script that generates a m u using the original chunks not those generated by the hls parameter In this case those chunks work fine but browsers cant play it In the case of America I left everything as the rest of the channels work but like A the files of the hls seems not to have the full video stream When I use ffmpeg I see the following original chunk the one generated by rtmp Stream x Video h High x B yuv p progressive x SAR DAR fps tbr k tbn tbc Same chunk hls Stream x Video h x B none fps tbr k tbn k tbc Attach error debug log errordebugloggz Attach chunks amricatvovacszgcrk tsgz amricatvovacszgcrk tsgz user wwwdata workerprocesses auto pid runnginxpid include etcnginxmodulesenabledconf events workerconnections multiaccept on http Basic Settings sendfile on tcpnopush on tcpnodelay on keepalivetimeout typeshashmaxsize servertokens off servernameshashbucketsize servernameinredirect off include etcnginxmimetypes defaulttype applicationoctetstream SSL Settings sslprotocols TLSv TLSv TLSv Dropping SSLv ref POODLE sslpreferserverciphers on Logging Settings accesslog varlognginxaccesslog errorlog varlognginxerrorlog errorlog varlognginxerrordebuglog debug Gzip Settings gzip on gzipvary on gzipproxied any gzipcomplevel gzipbuffers k gziphttpversion gziptypes textplain textcss applicationjson applicationjavascript textxml applicationxml applicationxmlrss textjavascript Virtual Host Configs include etcnginxconfdconf include etcnginxsitesenabled rtmp server listen chunksize ping s notifymethod get application live live on dropidlepublisher s recorder amricatvovacszgcrk record all recordpath mntamerica recordunique on recordsuffix dmYHMSflv recordinterval s hls on hlsfragment hlscleanup off hlsplaylistlength hlspath mntamerica application a live on dropidlepublisher s recorder a live record all recordpath mnta recordunique on recordsuffix dmYHMSflv recordinterval s execrecorddone usrlocalbinpostproca path hls on hlsfragment hlscleanup off hlsplaylistlength hlspath mnta live application canal live on dropidlepublisher s recorder live record all recordpath mntcanal recordunique on recordsuffix dmYHMSflv recordinterval s hls on hlscleanup off hlsfragment hlsplaylistlength hlspath mntcanal application cronica live on record off allow publish all allow play all hls on hlspath mntcronica hlsfragment s hlsplaylistlength record all pull rtmpvideo namecronica live static HLS export cat etcnginxsitesenableddefault server listen defaultserver listen defaultserver root mnt index indexhtml indexhtm indexnginxdebianhtml servername location stat rtmpstat all rtmpstatstylesheet statxsl allow all addheader Refresh requesturi location statxsl allow all root varwwwhtml location autoindex on location america Disable cache addheader CacheControl nocache CORS setup addheader AccessControlAllowOrigin always addheader AccessControlExposeHeaders ContentLength allow CORS preflight requests if requestmethod OPTIONS addheader AccessControlAllowOrigin addheader AccessControlMaxAge addheader ContentType textplain charsetUTF addheader ContentLength return types applicationvndapplempegurl m u Original Chunk ffprobe v quiet printformat json showformat showstreams amricatvovacszgcrk ts streams index codecname h codeclongname H AVC MPEG AVC MPEG part profile High codectype video codectimebase codectagstring codectag x b width height codedwidth codedheight hasbframes sampleaspectratio displayaspectratio pixfmt yuv p level chromalocation topleft fieldorder progressive refs isavc false nallengthsize id x rframerate avgframerate timebase startpts starttime durationts duration bitsperrawsample disposition default dub original comment lyrics karaoke forced hearingimpaired visualimpaired cleaneffects attachedpic timedthumbnails index codecname aac codeclongname AAC Advanced Audio Coding profile LC codectype audio codectimebase codectagstring codectag x f samplefmt fltp samplerate channels channellayout stereo bitspersample id x rframerate avgframerate timebase startpts starttime durationts duration bitrate disposition default dub original comment lyrics karaoke forced hearingimpaired visualimpaired cleaneffects attachedpic timedthumbnails format filename amricatvovacszgcrk ts nbstreams nbprograms formatname mpegts formatlongname MPEGTS MPEG Transport Stream starttime duration size bitrate probescore HLS chunk ffprobe v quiet printformat json showformat showstreams amricatvovacszgcrk ts streams index codecname h codeclongname H AVC MPEG AVC MPEG part codectype video codectimebase codectagstring codectag x b width height codedwidth codedheight hasbframes level chromalocation left refs isavc false nallengthsize id x rframerate avgframerate timebase startpts starttime durationts duration disposition default dub original comment lyrics karaoke forced hearingimpaired visualimpaired cleaneffects attachedpic timedthumbnails index codecname aac codeclongname AAC Advanced Audio Coding profile LC codectype audio codectimebase codectagstring codectag x f samplefmt fltp samplerate channels channellayout stereo bitspersample id x rframerate avgframerate timebase startpts starttime durationts duration bitrate disposition default dub original comment lyrics karaoke forced hearingimpaired visualimpaired cleaneffects attachedpic timedthumbnails format filename amricatvovacszgcrk ts nbstreams nbprograms formatname mpegts formatlongname MPEGTS MPEG Transport Stream starttime duration size bitrate probescore Hey guys ineed some help for this issue Maybe there already is this feature and my google searching methods are just that bad but My setup is an Ubuntu VM from linode and basically I upstream to that vm and push rtmp out to my various streaming locations I would like to add a second video to be streamed if I loose connection to my rtmp server basically a way to keep the stream alive until either I come back or the video runs out The goal is to not totally drop the stream Is there anyway to do this If so what should i have in my nginxconf file to do this How should this look Also if i come back live while video is playing I would like it to override the video and stop playback of the video When using nginxrtmp in windows just input server in stream server in OBS and key in key in OBS will successfully trigger the broadcast softwareDouyu ive helper server rtmplocalhost live key ABCDE However if using the nginxrtmp to relay the output it will not successfully trigger the broadcast software and this happens the same when input the url in OBS as server rtmplocalhost liveABCED Really dont know how to pass a stream key in nginxrtmp Thanks hi all i have an question the videos resolution is and the bitrate is more than M is this ok with nginxrtmpmodule or is there limitation by nginxrtmpmodule if yes where does it define and i will try to modify it thanks Hello Im running nginxrtmp in a docker container When I run this command on the host machine docker logs mycontainer f I can see output from nginxrtmp just fine Lines like this appear Dec PUBLISH appname streamname FMLE compatible FMSc s Now Ive added the onpublish and onpublishdone directives to the app like this execpublish binsh varscriptsmyscriptsh execpublishdone binsh varscriptsmyscriptsh However the output produced by myscriptsh both on stdout and stderr does not appear when I run the aforementioned command docker logs mycontainer f Why is this I tried to be more explicit by using the following configuration but it didnt help either execpublish binsh varscriptsmyscriptsh devstdout devstderr execpublishdone binsh varscriptsmyscriptsh devstdout devstderr It works only when I redirect the output to a file but this is NOT what I want because that ouput would be lost forever when the docker container is restarted Not what I want it has to go to devstdout and devstderr execpublish binsh varscriptsmyscriptsh tmpfile tmpfile execpublishdone binsh varscriptsmyscriptsh tmpfile tmpfile stamp is same as delta time of the first message chunk