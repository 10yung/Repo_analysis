 Hi Im having some trouble understanding the State Event enums with associated values example on the main project page Im specifically confused by incomplete enum definitions enum StrState StateType case strString enum StrEvent EventType case strString Can someone please respond to this question with a complete example or update the project README Thanks Dave Im using Xcode and the v on cocoa pod doesnt compile Could you fix it Apologies for creating an issue for this but its hectic to keep track of your releases Would be really helpful if you can start versioning it in a better way Thanks CocoaPod doenst compile with Xcode On carhage update build fail carthage version xcode version Build Failed Task failed with exit code usrbinxcrun xcodebuild project Usersvml DocumentsXCodeProjectPalLinkTest CarthageCheckoutsSwiftStateSwiftStatexcodeproj scheme SwiftState configuration Release derivedDataPath Usersvml LibraryCachesorgcarthageCarthageKitDerivedData C bSwiftState sdk iphoneos ONLYACTIVEARCHNO BITCODEGENERATIONMODEbitcode CODESIGNINGREQUIREDNO CODESIGNIDENTITY CARTHAGEYES archive archivePath varfoldersc cmhy djd y tjg lsq c gnTSwiftState SKIPINSTALLYES GCCINSTRUMENTPROGRAMFLOWARCSNO CLANGENABLECODECOVERAGENO launched in Usersvml DocumentsXCodeProjectPalLinkTest CarthageCheckoutsSwiftState This usually indicates that project itself failed to compile Please check the xcodebuild log for more details varfoldersc cmhy djd y tjg lsq c gnTcarthagexcodebuildWbBQpzlog Suggestions and comments about the design not a bug Should state be an attribute of the machine or the object which is going through the machine My use case is a game having many tokens AKA sprites each having state and a state machine I dont mind each token owning an instance of StateMachine but then I must configure each instance the same way easy enough to workaround But possibly a StateMachine should have a Design which is configured and passed to a StateMachine instance In other implementations of FSM context seems to mean the object which has state which the state machine sets the state of and which is passed to all actions what you call Handlers for them to act on Your context is not the same thing Maybe a solution is a delegate for the state machine On another topic I dont understand the use case for AnyState Is one use case adding transitions from any state to a reset state so that you dont have to specify a transition from every state to the reset state Maybe you could explain in your document But I should read the code and for example study what a transition from AnyState to AnyState would mean Thanks SwiftState is rather elegant 