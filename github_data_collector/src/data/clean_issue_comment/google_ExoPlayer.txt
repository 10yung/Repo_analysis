Ive checked Stackoverflow and blogs etc but havent been able to find an answer so wanted to ask for your assistance here in terms of whether the Exoplayer API can handle this use case Users of our app M active will be listening to podcasts We need to play ads at designated intervals during playback These intervals will vary by user But for example it could be the following scenario ad markers in milliseconds These ad marker play the ad now time points are stored in an array which we embed directly into the ID metadata in each MP file the user selects to play user starts playing audio track MP at ms we will pause audio track play an audio ad MP for the user via a URL when the ad finishes we need to resume playback of audio from at ms we will pause audio track play an audio ad then resume playback of audio etc How can we monitor the playback of audio track to know that ms have elapsed and so now its time to play the ad MP Do we need to maintain our own separate Timer in the Android app to manage this Or is there an API of some sort in the Exoplayer API to help this use case Also can we insert this ad MP at runtime into the currently playing audio track Or do we need to instantiate x instances of Exoplayer ie one for the audio track playback and a second for the ad playback Or can we should we use AdsMediaSource this might be what we are after however the code snippets are minimal and without context to understand how to properly implement Really appreciate your assistance with this Issue description In case of specific DRMprotected live DASH streams after some seconds playback aborts with below Crypto exception comgoogleandroidexoplayer ExoPlaybackException androidmediaMediaCodecCryptoException Unknown Error at comgoogleandroidexoplayer mediacodecMediaCodecRendererfeedInputBufferMediaCodecRendererjava at comgoogleandroidexoplayer mediacodecMediaCodecRendererrenderMediaCodecRendererjava Reproduction steps The exception only occurs on lowend FireTV models right after loading the stream Link to test content A full bug report captured from the device sent via email Version of ExoPlayer being used not Amazons fork Devices and versions of Android being used FireTV Stick Generation FireOS Android Thanks for your help in advance I am trying to loop small videos that are seconds to min long The player is set to repeat the video that is selected The video itself loop works fine but the audio drops for a split second at the beginning of the loop For example a video of waves crashing across the beach the video loops perfectly but the audio stops and you witness a pause in the sound then it goes back fine alone with the video Videos are in p Mp I have been trying to find the issue here but all the posts seem to be a little different than what I am looking for if a fix or issue has been addressed already just point me in the right direction to read over the fix Im using a SimpleExoPlayer instance to play videos with audio Im playing video files from local storage Basic stuff just like the Hello World setup The issue I have is that the first frame of the video is rendered before I call exoPlayersetPlayWhenReadytrue This combined with audio latency creates a small freeze on the first frame of each video when playing back to back videos I was able to modify MediaCodecVideoRenderer to avoid this but my question is if there is a setting to avoid the first frame being rendered before exoPlayersetPlayWhenReadytrue without modifying the code If there is no way I think this should be improved Im using ExoPlayer When I set a bad subtitle playback fails Is there a way to make subtitles not do that Exception below Also is it possible to set subtitles on the fly without restarting the player Thanks EExoPlayerImplInternal Playback error comgoogleandroidexoplayer ExoPlaybackException comgoogleandroidexoplayer textSubtitleDecoderException comgoogleandroidexoplayer ParserException Expected WEBVTT Got DOCTYPE html at comgoogleandroidexoplayer textTextRendererrenderTextRendererjava at comgoogleandroidexoplayer ExoPlayerImplInternaldoSomeWorkExoPlayerImplInternaljava at comgoogleandroidexoplayer ExoPlayerImplInternalhandleMessageExoPlayerImplInternaljava at androidosHandlerdispatchMessageHandlerjava at androidosLooperloopLooperjava at androidosHandlerThreadrunHandlerThreadjava Caused by comgoogleandroidexoplayer textSubtitleDecoderException comgoogleandroidexoplayer ParserException Expected WEBVTT Got DOCTYPE html at comgoogleandroidexoplayer textwebvttWebvttDecoderdecodeWebvttDecoderjava at comgoogleandroidexoplayer textwebvttWebvttDecoderdecodeWebvttDecoderjava at comgoogleandroidexoplayer textSimpleSubtitleDecoderdecodeSimpleSubtitleDecoderjava at comgoogleandroidexoplayer textSimpleSubtitleDecoderdecodeSimpleSubtitleDecoderjava at comgoogleandroidexoplayer decoderSimpleDecoderdecodeSimpleDecoderjava at comgoogleandroidexoplayer decoderSimpleDecoderrunSimpleDecoderjava at comgoogleandroidexoplayer decoderSimpleDecoderaccess SimpleDecoderjava at comgoogleandroidexoplayer decoderSimpleDecoder runSimpleDecoderjava Caused by comgoogleandroidexoplayer ParserException Expected WEBVTT Got DOCTYPE html at comgoogleandroidexoplayer textwebvttWebvttParserUtilvalidateWebvttHeaderLineWebvttParserUtiljava at comgoogleandroidexoplayer textwebvttWebvttDecoderdecodeWebvttDecoderjava at comgoogleandroidexoplayer textwebvttWebvttDecoderdecodeWebvttDecoderjava at comgoogleandroidexoplayer textSimpleSubtitleDecoderdecodeSimpleSubtitleDecoderjava at comgoogleandroidexoplayer textSimpleSubtitleDecoderdecodeSimpleSubtitleDecoderjava at comgoogleandroidexoplayer decoderSimpleDecoderdecodeSimpleDecoderjava at comgoogleandroidexoplayer decoderSimpleDecoderrunSimpleDecoderjava at comgoogleandroidexoplayer decoderSimpleDecoderaccess SimpleDecoderjava at comgoogleandroidexoplayer decoderSimpleDecoder runSimpleDecoderjava REQUIRED Issue description We experience occasional exceptions with the stack trace provided below Caused by javalangIndexOutOfBoundsException index start limit at comgoogleandroidexoplayer utilAssertionscheckIndexSourceFile at comgoogleandroidexoplayer sourcedashDashMediaSourceDashTimelinegetPeriodSourceFile at comgoogleandroidexoplayer TimelinegetPeriodByUidSourceFile at comgoogleandroidexoplayer MediaPeriodQueuegetMediaPeriodInfoSourceFile at comgoogleandroidexoplayer MediaPeriodQueuegetFirstMediaPeriodInfoSourceFile at comgoogleandroidexoplayer MediaPeriodQueuegetNextMediaPeriodInfoSourceFile at comgoogleandroidexoplayer ExoPlayerImplInternalmaybeUpdateLoadingPeriodSourceFile at comgoogleandroidexoplayer ExoPlayerImplInternalupdatePeriodsSourceFile at comgoogleandroidexoplayer ExoPlayerImplInternaldoSomeWorkSourceFile REQUIRED Reproduction steps The issue is reproducible in production and we failed to reproduce in development so far What seems to be common to all the cases where it happened is that it happens during player restart sequence More specifically the player is playing DASH content and at some point ExoPlayerstop is called and then ExoPlayerprepare with the MediaSource created with the same MPD URI as was used before REQUIRED Link to test content The content which we are using is not playable in the demo app as it requires proprietary DRM mechanism REQUIRED A full bug report captured from the device As this happens only in production we have no way to provide this REQUIRED Version of ExoPlayer being used REQUIRED Devices and versions of Android being used Proprietary Android device Android v REQUIRED Issue description I have a crash when I am trying to cast a HLS video from my app to a chromecast I use the ExoPlayer cast extension The code is called from a dynamic module apply plugin comandroiddynamicfeature can be found in the modules buildgradle Here is the stackoverflow question REQUIRED Reproduction steps When the user click on the cast button in my app and then on the device they want to cast on in the dialog the app crash systematically I am only able to reproduce the crash on my app but not on the demo app REQUIRED Link to test content When trying to cast this video REQUIRED A full bug report captured from the device bugreportsargoQQ A zip REQUIRED Version of ExoPlayer being used Version REQUIRED Devices and versions of Android being used Pixel Android Pixel a Android Crash doesnt happen on Samsung S Android Might be a dumb question Why DummySurface is created on a separate thread I am asking this because weve been using CodecsetOutputSurface and the producation failure rate is really high around And the only difference between our project and Exoplayer regarding how we use CodecsetOutputSurface is as follows Exoplayer uses a DummySurface created on a separate thread We use a general Surface created on the same thread Is there any theory behind this Thank you Description Hi I have video mp audio files aacmp and subtitle files vtt What do i want for example the default language of the video is English When I change the sound the video should resume and the sound of the video dubbing should be in French As in netflix application I am trying to do this with the following code Format formataudioen FormatcreateAudioSampleFormaten MimeTypesAUDIOAAC null FormatNOVALUE FormatNOVALUE FormatNOVALUE null null CSELECTIONFLAGDEFAULT en Format formataudiode FormatcreateAudioSampleFormatde MimeTypesAUDIOAAC null FormatNOVALUE FormatNOVALUE FormatNOVALUE null null de SingleSampleMediaSource audiosourcede new SingleSampleMediaSourceFactorydataSourceFactorycreateMediaSourceUriparse formataudiode CTIMEUNSET SingleSampleMediaSource audiosourceen new SingleSampleMediaSourceFactorydataSourceFactorycreateMediaSourceUriparse formataudioen CTIMEUNSET MediaSource videoSource buildMediaSourceuri dataSourceFactory MediaSource mediaSourceList new MediaSource mediaSourceList videoSource mediaSourceList audiosourceen mediaSourceList audiosourcede MergingMediaSource mergingMediaSource new MergingMediaSourcemediaSourceList playersetPlayWhenReadyplayWhenReady playerseekToplaybackPosition playerpreparemergingMediaSource false false But when I use it this way I get an error EExoPlayerImplInternal Internal runtime error javalangIllegalStateException Buffer too small at comgoogleandroidexoplayer decoderDecoderInputBuffercreateReplacementByteBufferDecoderInputBufferjava at comgoogleandroidexoplayer decoderDecoderInputBufferensureSpaceForWriteDecoderInputBufferjava at comgoogleandroidexoplayer sourceSingleSampleMediaPeriodSampleStreamImplreadDataSingleSampleMediaPeriodjava at comgoogleandroidexoplayer BaseRendererreadSourceBaseRendererjava at comgoogleandroidexoplayer mediacodecMediaCodecRendererfeedInputBufferMediaCodecRendererjava at comgoogleandroidexoplayer mediacodecMediaCodecRendererrenderMediaCodecRendererjava at comgoogleandroidexoplayer ExoPlayerImplInternaldoSomeWorkExoPlayerImplInternaljava at comgoogleandroidexoplayer ExoPlayerImplInternalhandleMessageExoPlayerImplInternaljava at androidosHandlerdispatchMessageHandlerjava at androidosLooperloopLooperjava at androidosHandlerThreadrunHandlerThreadjava I do this with HLS Elephants Dream Hls Video have two sound english and spanish I can easily change the dubbing sound when I use the following code However I have mp video and mp aac audio files trackSelectorsetParameterstrackSelectorgetParametersbuildUponsetMaxVideoSizeSd setPreferredTextLanguagesubTextLanguage setPreferredAudioLanguageen or esbuild I looked at these How can I do what I want using mp video and mp audio files I hope you can help thanks 