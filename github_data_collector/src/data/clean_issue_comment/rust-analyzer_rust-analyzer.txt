Would it be possible for these to be separate options Im not a big fan of the type inlays I prefer hovering if I need them but the recently added parameter name inlay is super nice Problem Linux distributions are collectively moving towards Flatpak as a distribution model for third party applications However the VS Code extension is currently unsupported within the VS Code Flatpak due to the way that it tries to spawn ralspserver by looking up its path within system paths paths that wont exist inside of a Flatpak container Solution The extension could check for the existence of usrbinflatpakspawn to determine if being run within a Flatpak container If within a Flatpak container ralspserver can be invoked with flatpakspawn host ralspserver This is just keeping track of the changes required to upgrade Chalk currently we cant really merge it since it breaks opaque types Now also makes use of the newly introduced solvelimited to implement fuel In docsuserREADMEmd the current user setting definition for LSP package in Sublime Text is specified as rustanalyzer command ralspserver languageId rust scopes sourcerust syntaxes PackagesRustRustsublimesyntax PackagesRust EnhancedRustEnhancedsublimesyntax initializationOptions featureFlags It should specifically be a child of clients dictionary clients rustanalyzer command ralspserver languageId rust scopes sourcerust syntaxes PackagesRustRustsublimesyntax PackagesRust EnhancedRustEnhancedsublimesyntax initializationOptions featureFlags At least it confused me for quickly enabling in new installation See this example Here the intention will add type to let ty This is clearly not desirable as ty might be off screen I think we should restrict the intention to only trigger if the cursor is on the let foo that is before The code for assist is here cc TomasKralCZ Not sure if its always the case I have a workspace and Cargotoml is manifest of subpackage When I remove a dependency there compilation errors dont appear until I make a noop edit to any rs file Built per including the Remote section VS Code prompted to restart after installing Got this error message On a terminal within the remote session sh ralspserver version Thu Jan CET rustanalyzer c d Environment WSL uname a Thu Jan CET Linux brute Microsoft Microsoft Fri Nov PST x x x GNULinux VS Code Every time rust analyzer says cant find rustsrc I have to run rustup component add rustsrc when switching toolchains or computers or getting other people set up If rustanalyzer hasnt got the source could it try running rustup component add rustsrc to see if it fixes things first I cant think anyone would not want this but if so it could be turned off by a config setting Its frustrating to have to restart RA after each config change I was talking with memoryruins and they mentioned that theres a LSP notification on config changes wed just have to handle it here 