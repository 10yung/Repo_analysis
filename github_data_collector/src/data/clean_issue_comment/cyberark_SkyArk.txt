Hi Hechtov This change is useful for example for federated AWS environments where you only can assume roles via sts after login If you use the script as is you get an error about an invalid session token I tested both cases login usersts session locally both worked for me Thanks for this script Very helpful The script seems to assume that youre using user credentials I user a master profile that I then reference from other profiles via AssumeRole ini profile OtherAccountaudit format json region uswest sourceprofile MasterProfile rolearn arnawsiam roleInfoSecaudit externalid xxx The code here fails due to assuming the profiles credentials are associated with an IAM user not a role GetIAMUser Must specify userName when calling with nonUser credentials At C AWStealthps char currentUser GetIAMUser CategoryInfo InvalidOperation AmazonPowerSheetIAMUserCmdletGetIAMUserCmdlet GetIAMUser InvalidOperationException FullyQualifiedErrorId AmazonIdentityManagementAmazonIdentityManagementServiceExceptionAmazonPowerShellCmdletsIAMGetIAMUserCmdlet Im not sure if its related but the attempt to delete a temporary profile also fails here RemoveAWSCredentialProfile The CredentialProfile AWStealthProfile does not exist At C AWStealthps char RemoveAWSCredentialProfile ProfileName tempProfile force CategoryInfo InvalidArgument AmazonPowerShealProfileCmdletRemoveAWSCredentialProfileCmdlet RemoveAWSCredentialProfile ArgumentException FullyQualifiedErrorId ArgumentExceptionAmazonPowerShellCommonRemoveAWSCredentialProfileCmdlet The code at doesnt work as intended You should probably just compare the module version to SystemVersion 