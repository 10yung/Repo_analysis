Im trying to encode a PDF and whenever I set the PDF COMPACTION to CompactionTEXT I get this crash javalangArrayIndexOutOfBoundsException length index at comgooglezxingpdf encoderPDF HighLevelEncoderisMixedPDF HighLevelEncoderjava at comgooglezxingpdf encoderPDF HighLevelEncoderencodeTextPDF HighLevelEncoderjava at comgooglezxingpdf encoderPDF HighLevelEncoderencodeHighLevelPDF HighLevelEncoderjava at comgooglezxingpdf encoderPDF generateBarcodeLogicPDF java at comgooglezxingpdf PDF WriterbitMatrixFromEncoderPDF Writerjava at comgooglezxingpdf PDF WriterencodePDF Writerjava at comgooglezxingMultiFormatWriterencodeMultiFormatWriterjava Here is the code for how I am trying to create the barcode var hints MutableMapEncodeHintType Any hints EnumMapEncodeHintType AnyEncodeHintTypeclassjava hints EncodeHintTypeCHARACTERSET UTF hints EncodeHintTypeERRORCORRECTION hints EncodeHintTypePDF COMPACTION CompactionTEXT val writer MultiFormatWriter val result BitMatrix try result writerencodecontents format imgwidth imgheight hints catch iae WriterException Unsupported format return null Is this a bug or am i doing something wrong Hi First thanks for this great library Im just using the Reed Solomon part of it and I stumbled on I think a cornercase bug When using dataerrorcodes of size if I corrupt the first byte after ReedSolomon encoding neither the byte is repaired nor an exception is thrown when decoding It doesnt seem to matter how many errorcodes I use or the data content but it only fails for dataerrorcodes of size I grepd the ReedSolomon code for literals and but saw nothing fishy Hmm code formatter on this wiki not working for me JUnit test below Depends on RSEncoderDecoder class which looks fine by inspection attached as txt RSEncoderDecodertxt import javautilArrays import orgjunitTest import comcasualcodingreedsolomonRSEncoderDecoder public class ReedSolomonByte Bug Test public void testRSStreamAllZeros throws Exception numEcBytes doesnt seem to matter int numEcBytes for int totalBlockSizeBytes totalBlockSizeBytes totalBlockSizeBytes byte mesg new byte totalBlockSizeBytes numEcBytes for int i i mesglength i mesg i byte i RSEncoderDecoder rs new RSEncoderDecoder byte rsmesg rsencodeDatamesg numEcBytes Corrupt byte Corrupting other bytes works correctly rsmesg byte rsmesg No exception thrown byte testDecode rsdecodeDatarsmesg numEcBytes Fails for totalBlockSize if Arraysequalsmesg testDecode false SystemoutprintlnFailed totalBlockSizeBytes totalBlockSizeBytes javalangArrayIndexOutOfBoundsException length index at comgooglezxingpdf decoderecModulusGFmultiplyModulusGFjava at comgooglezxingpdf decoderecModulusPolyevaluateAtModulusPolyjava at comgooglezxingpdf decoderecErrorCorrectiondecodeErrorCorrectionjava at comgooglezxingpdf decoderPDF ScanningDecodercorrectErrorsPDF ScanningDecoderjava at comgooglezxingpdf decoderPDF ScanningDecoderdecodeCodewordsPDF ScanningDecoderjava at comgooglezxingpdf decoderPDF ScanningDecodercreateDecoderResultFromAmbiguousValuesPDF ScanningDecoderjava at comgooglezxingpdf decoderPDF ScanningDecodercreateDecoderResultPDF ScanningDecoderjava at comgooglezxingpdf decoderPDF ScanningDecoderdecodePDF ScanningDecoderjava at comgooglezxingpdf PDF ReaderdecodePDF Readerjava at comgooglezxingpdf PDF ReaderdecodePDF Readerjava at comgooglezxingMultiFormatReaderdecodeInternalMultiFormatReaderjava at comgooglezxingMultiFormatReaderdecodeWithStateMultiFormatReaderjava I have found a problem above In the file the code in line report ArrayIndexOutOfBoundsExceptionis it a problem CommandLineEncoder appears to ignore the height and width parameters when barcodeformat is DATAMATRIX The following command produces a px by px image instead of a px by px image java cp javasetargetjavase jarwithdependenciesjar comgooglezxingclientj seCommandLineEncoder barcodeformat DATAMATRIX height width abcdefg Heres a Dockerfile to reproduce this issue FROM ubuntu RUN aptget update aptget install y noinstallrecommends defaultjdk git maven RUN git clone depth branch zxing RUN cd zxing mvn install DskipTests RUN cd zxingjavase mvn DskipTests package assemblysingle RUN cd zxing java cp javasetargetjavase jarwithdependenciesjar comgooglezxingclientj seCommandLineEncoder barcodeformat DATAMATRIX height width abcdefg Is this a bug or am I using CommandLineEncoder wrong Hi everyone i always get a illegal character exception if i try to create a DataMatrix with following code HashMapEncodeHintType Object options new HashMap optionsputEncodeHintTypeDATAMATRIXSHAPE SymbolShapeHintFORCESQUARE int width int height String content test TE IE ST BitMatrix bitMatrix new DataMatrixWriterencodecontent BarcodeFormatDATAMATRIX width height options Stacktrace javalangIllegalArgumentException Illegal character x e at comgooglezxingdatamatrixencoderHighLevelEncoderillegalCharacterHighLevelEncoderjava at comgooglezxingdatamatrixencoderX EncoderencodeCharX Encoderjava at comgooglezxingdatamatrixencoderX EncoderencodeX Encoderjava at comgooglezxingdatamatrixencoderHighLevelEncoderencodeHighLevelHighLevelEncoderjava at comgooglezxingdatamatrixDataMatrixWriterencodeDataMatrixWriterjava at comgooglezxingWriterencodecallUnknown Source Is this a bug or im missing something Hello I generated a QR code from the following wholedataevents in ics format Bug The current Zxing Barcode Scanner on Android detects only the first event but fails to detectdecode the further events BEGINVCALENDAR PRODIDLeave Planner Version COMMENT days exported on VERSION BEGINVEVENT SUMMARYXLEAVE DTSTARTVALUEDATE ENDVEVENT BEGINVEVENT SUMMARYXLEAVE DTSTARTVALUEDATE ENDVEVENT BEGINVEVENT SUMMARYXLEAVE DTSTARTVALUEDATE ENDVEVENT BEGINVEVENT SUMMARYXLEAVE DTSTARTVALUEDATE ENDVEVENT BEGINVEVENT SUMMARYXLEAVE DTSTARTVALUEDATE ENDVEVENT ENDVCALENDAR heres the code to generate with your online web side Hi there Ive discovered that zxing a least android barcode scanner decodes DataMatrix codes with unicode text as ASCII and so brake it Ie it displays instead of ciryllic test OTOH QRencoded unicode is decoded fine Can somebody fix that or at least adviceguide me how to fix it Address city state postal code and so on are supposed to be separated in MECARD and vCard by comma and semicolon respectively The code right now doesnt break this down beyond an address field though so isnt able to format accordingly Ideally the online encoder would have separate fields for address components And in Android would retrieve address elements independently However I am not sure Android breaks this out either not via Intent Ported from 