 What are you trying to achieve or the steps to reproduce Hello Im using the library version and i have got really good results but there is one problem that I detected and I dont know if its a bug or Im doing something wrong Im using Kotlin and creating a Camera Configuration to set all the needed configurations I use for the camera I was setting the pictureResolution to be x which is the one I need and if its not available for the device to use the highest resolution that it has with firstAvailable has shown below kotlin pictureResolution firstAvailable Resolution highestResolution I though that whith this the library was going to test if the first resolution was available and if not it was going to try with the highest resolutionm but when the device dont have a x resolution it gives an error and dont try to go to the second option of the highestResolution I tried to get a list of supported Resolutions and solve it before creating the cameraConfiguration but I havent managed to get the supported resolutions out of the library Is there a bug with firstAvailable or Im misunderstanding something Is there a way to solve it thats not starting the camera to get the capabilities and then updating it How did you initialize FA kotlin val cameraConfiguration CameraConfiguration pictureResolution firstAvailable Resolution highestResolution previewResolution firstAvailable wideRatio Resolution wideRatiohighestResolution previewFpsRange highestFps focusMode firstAvailable continuousFocusPicture autoFocus fixed jpegQuality manualJpegQuality frameProcessor frame processFrameframe camera Fotoapparat context this view cameraView scaleType ScaleTypeCenterCrop lensPosition front cameraConfiguration cameraConfiguration cameraErrorCallback error PrintErrorerror What was the result you received This is the error Im receiving iofotoapparatexceptioncameraInvalidConfigurationException Resolution configuration selector selected value Resolutionwidth height However its not in the supported set of values Supported parameters Resolutionwidth height Resolutionwidth height Resolutionwidth height Resolutionwidth height Context FA version DevicesAPIs affected Galaxy Tab A I have user your ActivityJava code example to change a picture resolution from highestResolution to lowestResolution without any effect private CameraConfiguration cameraConfiguration CameraConfiguration builder photoResolutionstandardRatio highestResolution lowestResolution new Function IterableResolution Resolution Override public Resolution invokeIterableResolution resolutions return new Resolution focusModefirstAvailable continuousFocusPicture autoFocus fixed flashfirstAvailable autoRedEye autoFlash torch off previewFpsRangehighestFps sensorSensitivityhighestSensorSensitivity frameProcessornew SampleFrameProcessor build new Resolution does change nothing too My device is LG Stylus Android What is a reason Please change this focusModeSelectorsKtfirstAvailable optional use the first focus mode which is supported by device FocusModeSelectorsKt continuousFocusPicture FocusModeSelectorsKtautoFocus in case if continuous focus is not available on device auto focus will be used FocusModeSelectorsKtfixed if even auto focus is not available fixed focus mode will be used to this focusModeSelectorsKtfirstAvailable optional use the first focus mode which is supported by device FocusModeSelectorsKtfixed if even auto focus is not available fixed focus mode will be used FocusModeSelectorsKtautoFocus in case if continuous focus is not available on device auto focus will be used FocusModeSelectorsKtcontinuousFocusPicture Library uses last parameter first Problem Due to Scoped Storage we can t write the image directly to shared storage locations via direct file path This approach is deprecated in android Q and will be enforced to stop using in From Googles Scoped Storage best practices Storing shared media files For apps that handle files that users expect to be sharable with other apps such as photos and be retained after the app has been uninstalled use the MediaStore API There are specific collections for common media files Audio Video and Images For other file types you can store them in the new Downloads collection To access files from the Downloads collection apps must use the system picker Storing appinternal files If your app is designed to handle files not meant to be shared with other apps store them in your packagespecific directories This helps keep files organized and limit file clutter as the OS will manage cleanup when the app is uninstalled Calls to ContextgetExternalFilesDir will continue to work We can still use saveToFile making sure the constructed file path is within the scoped storage of the app As stated before we just have to make sure we use ContextgetExternalFilesDir to save in scoped storage However theres no way to save in the shared media collection locations since that has to be done via the usage of MediaStore Possible solution As an alternative to the existing PhotoResultsaveToFile a new PhotoResultsaveToImagesMediaStore open to other names function signatures could be exposed TODO Write rotation Exif metadata the current ExifWriter uses a file as input What are you trying to achieve or the steps to reproduce I am trying to mock Fotoapparat with Mockito Since Fotoapparat is final mockito has issues mocking this class in android instrumentation tests There are some solutions but they are tricky to setup have drawbacks For example mocking of final classes is only supported from Android P or greater What did you expect It would be great to make fotoapparat open or let it implement an interface Would you accept a PR with a nonbreaking change like this iofotoapparatcoroutinesAwaitBroadcastChannel cant find referenced method boolean cancel in program class kotlinxcoroutinesCompletableDeferred The issue is AwaitBroadcastChannel I would guess that copying the deprecation warning and providing the correct cancel that accepts a CancellationException would fix the issue Or maybe just specifying deprecation level See ConflatedBroadcastChannel In my app i want show preview to user after taking picture but i cant because restartPreview was called automatically So i made ability to take picture and restart preview separately from each other Pinch to zoom is good ability and implement gesture recognizers inside the FocusView much easier and more logical than outside With it example app looks cleaner and more convenient to use Ive tested my app on the Moto G Power and the Galaxy S and in both on them the setZoom method lags The zoom starts to appear later and slowly Im using java dont know if that can make it do that This is how I create the view private Fotoapparat createFotoapparat return Fotoapparat withthis intocameraView focusViewfocusView previewScaleTypeScaleTypeCenterCrop photoResolutionstandardRatio highestResolution previewResolutionhighestResolution previewFpsRangehighestFps lensPositionLensPositionSelectorsKtback focusModefirstAvailable continuousFocusPicture autoFocus fixed flashfirstAvailable autoRedEye autoFlash torch off previewFpsRangehighestFps build Im on the version of the library Is it possible to show the visual feedback circle during continuous focus This circle is visible only when user touches the display but not during continuous focus