Theres an open cssom issue about serialization of customident Gecko currently serialize st as st which violates the general principle that values should serialize to the shortest form the space is redundant in this case It appears it comes from hexescape which unconditionally adds a space CC emilio From Actually there is no way to get TokenSerializationType directly from Token type If it is TokenSerializationTypeVariantsNothing it has nothing function to get it Even parsing CSS that is hardcoded value such as px to get type we have to create Token object like the following let token TokenDimension hassign false value intvalue Some unit CowRcStrfrompx let tokentype tokenserializationtype I am happy if cssparser has a function to get TokenSerializationType without creating object like TokenSerializationTypenothing This PR is the continuation of Some changes are due to me running cargo fmt I have implemented description but I can not satisfy the borrow checker with a reference of a String that will get deleted after the function ends see image Therefore I used a static string pointing the user in the right direction Closes Fixes Reviewablestart This change is img src height alignabsmiddle altReviewable Reviewableend Fixes Hi I was wondering why the ParseError struct does not implement the stderrorError trait I was hoping to wrap it in a custom error enum type and use the operator when calling parse functions From what Ive tried so far has not allowed me to do so phfcodegen is a pretty big dependency and colors will not change from build to build so maybe its better to keep the colors map as a prebuilt file Something like this The source of the problem cssparser v rustcssparser cssparsermacros v rustcssparser macros phfcodegen v phfgenerator v phfshared v siphasher v rand v libc v randchacha v randcore v randcore v builddependencies autocfg v randcore v randhc v randcore v randisaac v randcore v randjitter v randcore v randos v libc v randcore v randpcg v randcore v builddependencies rustcversion v semver v semverparser v randxorshift v randcore v builddependencies autocfg v phfshared v Its like dependencies just to build a phf map that never changes rust error couldnt read srccssparsingtestscomponentvaluelistjson No such file or directory os error srctestsrs runjsontestsincludestrcssparsingtestscomponentvaluelistjson input error couldnt read srccssparsingtestsonecomponentvaluejson No such file or directory os error srctestsrs runjsontestsincludestrcssparsingtestsonecomponentvaluejson input error couldnt read srccssparsingtestsdeclarationlistjson No such file or directory os error srctestsrs runjsontestsincludestrcssparsingtestsdeclarationlistjson input error couldnt read srccssparsingtestsonedeclarationjson No such file or directory os error srctestsrs runjsontestsincludestrcssparsingtestsonedeclarationjson input error couldnt read srccssparsingtestsrulelistjson No such file or directory os error srctestsrs runjsontestsincludestrcssparsingtestsrulelistjson input error couldnt read srccssparsingtestsstylesheetjson No such file or directory os error srctestsrs runjsontestsincludestrcssparsingtestsstylesheetjson input error couldnt read srccssparsingtestsonerulejson No such file or directory os error srctestsrs runjsontestsincludestrcssparsingtestsonerulejson input error couldnt read srccssparsingtestsstylesheetbytesjson No such file or directory os error srctestsrs runrawjsontestsincludestrcssparsingtestsstylesheetbytesjson error couldnt read srccssparsingtestscolor json No such file or directory os error srctestsrs runcolortestsincludestrcssparsingtestscolor json c coktojson error couldnt read srccssparsingtestscolor hsljson No such file or directory os error srctestsrs runcolortestsincludestrcssparsingtestscolor hsljson c coktojson error couldnt read srccssparsingtestscolor keywordsjson No such file or directory os error srctestsrs runcolortestsincludestrcssparsingtestscolor keywordsjson c coktojson error couldnt read srccssparsingtestsAnBjson No such file or directory os error srctestsrs runjsontestsincludestrcssparsingtestsAnBjson input error couldnt read srccssparsingtestsurangejson No such file or directory os error srctestsrs runjsontestsincludestrcssparsingtestsurangejson input error couldnt read srccssparsingtestscomponentvaluelistjson No such file or directory os error srctestsrs runjsontestsincludestrcssparsingtestscomponentvaluelistjson input error aborting due to previous errors The generated assembly for code using nextbyteunchecked like skipwhitespace has a suprising number of indirections in order to actually get the byte value This is caused by the need to get the slice then get the byte at the desired offset from it at If we use store a pointer and increase its instead of the offset it should cause more efficient code to be generated Depending on how often we call skipwhitespace when nonwhitespace tokens are expected which is actually quite common IIRC we can probably make it more efficient by adding a case to the top of the match at that catches any byte after and immediately returns In this input E is parsed as a TokenNumber whose value is stdf INFINITY which serializes as inf We should definitely not serialize any number as inf maybe an arbitrary large number instead but probably also avoid nonfinite numbers in tokens in the first place CC 