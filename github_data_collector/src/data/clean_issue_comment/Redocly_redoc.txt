Just tried to render my schema online at and the error Something went wrong Incompatible types in allOf at propertiesdataitems Stack trace Error Incompatible types in allOf at propertiesdataitems at emergeAllOf at emergeAllOf at emergeAllOf at new e at new e at at Arraymap anonymous at new e at new e at ReDoc Version rc Commit c b Loads fine in Swagger editor Schema is here Happy to adjust my schema if that helps What do I miss I have a response which either returns an array or null I specify the return json schema with schema type array uniqueItems true items nullable true But redoc does not render this like for other types eg integers I currently use the following workaround schema oneOf type array uniqueItems true items ref sharedidjson type any nullabletrue grafik Hello there wrestling following issue Imagine I want to reuse some schema lets say ID I have following in helpersidyaml yaml properties id type number required id And here is a simple OpenAPI which should result in a simple structure of three nested objects which all wants to reference the id helper yaml openapi info title False positive recursion version paths documents get summary Example responses description OK content applicationjson schema allOf ref helpersidyaml properties second allOf ref helpersidyaml properties third allOf ref helpersidyaml properties something type string Whereas the first and second object are correctly rendered with required id attribute the third object is flagged as recursive Any idea Is it a bug or am I missing something I have defined the following schema in my components test type object properties useText type boolean useSymbol type boolean useDigit type boolean test CtrlText oneOf title NO TEXT properties useText enum false title TEXT properties useText enum true textField type string required textField test CtrlSymbol oneOf title NO SYMBOL properties useSymbol enum false title SYMBOL properties useSymbol enum true symbolField type string required symbolField test CtrlDigit oneOf title NO Digit properties useDigit enum false title SYMBOL properties useDigit enum true digitField type string required digitField test All allOf ref componentsschemastest ref componentsschemastest CtrlText ref componentsschemastest CtrlSymbol ref componentsschemastest CtrlDigit test type object properties useText type boolean useSymbol type boolean useDigit type boolean test CtrlText oneOf title NO TEXT properties useText enum false title TEXT properties useText enum true textField type string required textField test CtrlSymbol oneOf title NO SYMBOL properties useSymbol enum false title SYMBOL properties useSymbol enum true symbolField type string required symbolField test CtrlDigit oneOf title NO Digit properties useDigit enum false title SYMBOL properties useDigit enum true digitField type string required digitField test All allOf ref componentsschemastest ref componentsschemastest CtrlText ref componentsschemastest CtrlSymbol ref componentsschemastest CtrlDigit When I use now in my response body ref componentsschemastest All The whole thing is rendered wrong as you see in the image There should be three anyOf blocks but only one is rendered When I replace the the last references test CtrlText test CtrlSymbol test CtrlDigit against the code of their schemas allOf ref componentsschemastest oneOf title NO TEXT properties useText enum false title TEXT properties useText enum true textField type string required textField I get the following rendering Which works as it should although the label were not rendered Hello I am using the following definition to define an array of objects in the request body requestBody content applicationjson schema type array minItems maxItems items ref componentsschemasgpsProfileUpdate The minItems and maxItems were not rendered in the generated documentation After spending some time figuring it out and finding this issue I was able to find how to watch files served by redoc via Docker Id like to save new developers time with this PR Ive got a ReDoc instance running with scrollYOffset set to an header element It seems that if the height of the header element is not a integer but a floating point number the menu gets blurred a bit The problem occurs if you specify an element for the scrollYOffset which elgetBoundingClientRectbottom returns a noninteger number for It seems that in some places it works on integers and in some on floating point numbers and this leads to imprecision when calculation the scrolling position for the menu Using Mathceil or Mathround in normalizeScrollYOffset solved the problem for me So Id suggest only allowing integers as scrollYOffset and ensure in code that it is always an integer Hope this can be solved soon thanks in advance Seems similar to This is a bug report What happend If SchemaDefinition custom element points to remote reference like below yaml description Blah blah blah Below is Foo definition SchemaDefinition schemaRefsharedcomponentsyamlcomponentsschemasFoo it fails with a following error Something went wrong Invalid JSON pointer sharedcomponentsyamlcomponentsschemasFoo on versions redoc rc redoc rc Background I want to extract components into an external file so it can be shared among several swagger files like below swaggerpublicyaml swaggerprivateyaml sharedcomponentsyaml Remote reference feature in standard SwaggerOpenAPI syntaxes like below works fine yaml schema ref sharedcomponentsyamlcomponentsschemasFoo SchemaDefinition works fine if used with local reference but fails with remote reference So I guess this is a bug or a limitation of SchemaDefinition A motivation I use SchemaDefinition schemaRef in description is to embed a component definition into some description Because Redoc currently does not have schemas view unlike official Swagger viewer This valid schema yaml openapi info title Recursive version paths somepath get responses description OK content applicationjson schema allOf ref componentsschemasArticle required foo components schemas Article type object properties similar allOf ref componentsschemasArticle required bar anyOf required foo required bar causes stack overflow Warning Not exited reference componentsschemasArticle in ContextConsumer created by Operation in Operation created by OperationItem in OperationItem created by ContentItem in ContentItem created by ContentItems in ContentItems created by Redoc in Redoc OpenAPIParserts Uncaught RangeError Maximum call stack size exceeded at Arraymap anonymous at OpenAPIParsermergeAllOf OpenAPIParserts at new SchemaModel Schemats at new FieldModel Fieldts at eval Schemats at Arraymap anonymous at buildFields Schemats at SchemaModelinit Schemats at new SchemaModel Schemats at eval Schemats tested on master dc e def a d cc aea f eea This fixes When resulting schema contains required fields that are not explicitly listed in schema they must be covered by additionalProperties because openapi does not support patternProperties schema if any or are just The point is in listing these names because validation will fail without them