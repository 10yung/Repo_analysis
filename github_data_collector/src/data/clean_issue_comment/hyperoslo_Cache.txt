Is this achievable Does adding this might change the project behaviour Im trying to observe a key but it seems like there can only be one observer per key at a time Is this true Im doing something like this VC adds observer for myKey I make a change to myKey and the closure runs Good VC is pushed and adds an observer for myKey I make a change to myKey here VC s observer closure runs but VC s closure doesnt Is this the way its supposed to work I figured VC s closure was overwriting VC s but Im further confused because once I navigate back to VC if I edit myKey again VC s closure runs again even though I havent readded the observer Swift in podspec Swift for project file fix warnings d d I got crash when was trying to get data from cache ERROR EXCBADACCESS KERNPROTECTIONFAILURE x b dffc Here is the log Crashed CacheSyncStorageSerialQueue CoreFoundation x ecac cfc CFBasicHashFindBucket CoreFoundation x eca bc CFGetConverter CoreFoundation x eca b CFStringEncodingIsValidEncoding CoreFoundation x eca fc CFStringEncodeByteStream Foundation x ed f c NSStringNSStringOtherEncodings lengthOfBytesUsingEncoding Foundation x ed afa NSPlaceholderString initWithString Cache x ba d nonobjc NSStringinitstring compilergenerated Cache x b NSStringallocatinginitstring compilergenerated Cache x b c MemoryStorageentryforKey MemoryStorageswift Cache x ce c HybridStorageentryforKey HybridStorageswift Cache x c f closure in SyncStorageentryforKey SyncStorageswift Cache x c a partial apply for closure in SyncStorageentryforKey compilergenerated Cache x c a thunk for calleeguaranteed error owned Error compilergenerated Cache x c b partial apply for thunk for calleeguaranteed error owned Error compilergenerated libswiftDispatchdylib x a d partial apply for thunk for calleeguaranteed out A error owned Error libswiftDispatchdylib x a ce ac closure in closure in OSdispatchqueuesyncHelperAfnexecuterescue libswiftDispatchdylib x a d partial apply for thunk for calleeguaranteed libswiftDispatchdylib x a c thunk for escaping calleeguaranteed libdispatchdylib x ec dd d dispatchclientcallout libdispatchdylib x ec bc dispatchlanebarriersyncinvokeandcomplete libswiftDispatchdylib x a ced nonobjc OSdispatchqueuesyncexecute libswiftDispatchdylib x a d da partial apply for nonobjc libswiftDispatchdylib x a ce OSdispatchqueuesyncHelperAfnexecuterescue libswiftDispatchdylib x a cecc OSdispatchqueuesyncAexecute Cache x bfe SyncStorageentryforKey SyncStorageswift Cache x bc a StorageentryforKey Storageswift Cache x bc protocol witness for StorageAwareentryforKey in conformance StorageA compilergenerated Cache x bd dc StorageAwareobjectforKey StorageAwareswift ProjectName x c specialized CacheRepositorygetforKey Code with GET request func getforKey String T do let data try selfstorageobjectforKey forKey printStorage GET Key forKey Result Stringdescribing data return data catch printError on get storage data errorlocalizedDescription return nil We cannot build this project in Swift we get compiler errors Module compiled with Swift cannot be imported by the Swift compiler UsersdavidyorkacademiaacademiaiosCarthageBuildiOSCacheframeworkModulesCacheswiftmodulex swiftmodule Also from a Carthage build attempt Building scheme CacheiOS in Cachexcodeproj Build Failed Task failed with exit code usrbinxcrun xcodebuild project UsersdavidyorkacademiaacademiaiosCarthageCheckoutsCacheCachexcodeproj scheme CacheiOS configuration Release derivedDataPath UsersdavidyorkLibraryCachesorgcarthageCarthageKitDerivedData E Cache sdk iphoneos ONLYACTIVEARCHNO CODESIGNINGREQUIREDNO CODESIGNIDENTITY CARTHAGEYES archive archivePath varfolderslt shcn d y wjyfrgw gnTCache SKIPINSTALLYES GCCINSTRUMENTPROGRAMFLOWARCSNO CLANGENABLECODECOVERAGENO STRIPINSTALLEDPRODUCTNO launched in UsersdavidyorkacademiaacademiaiosCarthageCheckoutsCache This usually indicates that project itself failed to compile Please check the xcodebuild log for more details varfolderslt shcn d y wjyfrgw gnTcarthagexcodebuildvjdGjklog Whats the general procedure for updating to newer XCodeSwift versions Id be happy to help I am using a custom codable that inherits from a super codable class I am using a convenience init to load from decoder using container and call the superinit to instantiate the values of the super class When I try to save and retreive the codable Object classB I get an error saying keynotfound CodingKeysstringValue object intValue nil Can anyone help with this error I have resolved it at the moment by removing the inheritance though am curious how to make it work with it ex ClassACodable let dataA some data of class A ClassB ClassA let dataB SomeData initdataB String dataAString selfdataB dataB superinitdataAdataA enum CodingKeys String CodingKey case dataA dataB required convenience initfrom decoder Decoder throws let container try decodercontainerkeyedBy CodingKeysself let dataB String try containerdecodeStringself forKey dataB let dataA String try containerdecodeStringself forKey dataB selfinitdataAdataA dataBdataB Hey guys Am I the only one who cant get storage observations to work let diskConfig DiskConfigname UserCache let memoryConfig MemoryConfigexpiry never countLimit totalCostLimit let storage try Storage diskConfig diskConfig memoryConfig memoryConfig transformer TransformerFactoryforData let string This is a string let stringStorage storagetransformCodableofType Stringself let token storageaddStorageObserverself observer storage change in switch change case addlet key printAdded key case removelet key printRemoved key case removeAll printRemoved all case removeExpired printRemoved expired try stringStoragesetObjectstring forKey string Nothing gets printed out Thanks I have migrated the source code including the test cases to Swift Please review the code and merge it 