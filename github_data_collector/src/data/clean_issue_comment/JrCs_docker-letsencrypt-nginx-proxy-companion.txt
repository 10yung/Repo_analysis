Hi buchdag This pullrequest implements the discussion weve started in Ive introduced a new env variable for LE container MUSTBECONNECTEDWITHNETWORK that limits the LE scope to containers included only in the specified network The tests are included Could you review this pull request please If it seems acceptable to you I will add the necessary documentation Thank you Im trying to get dockercomposeyml working with my own web server All of the examples that I can find that have a third service seem to be using dockergen I can get https working when I launch all three separately with docker run in the examples but Id love to get them all working in dockercomposeyml Is this possible Below is my dockercompseyml version services nginxproxy image jwildernginxproxy containername nginxproxy volumes varrundockersocktmpdockersockro htpasswdetcnginxhtpasswd vhostetcnginxvhostd htmlusrsharenginxhtml dhparametcnginxdhparam certsetcnginxcertsro ports restart always networkmode bridge letsencryptnginxproxycompanion image jrcsletsencryptnginxproxycompanion volumes varrundockersockvarrundockersockro vhostetcnginxvhostd htmlusrsharenginxhtml dhparametcnginxdhparam certsetcnginxcertsrw restart always networkmode bridge environment DEFAULTEMAILuserdomaincom NGINXPROXYCONTAINERnginxproxy dependson nginxproxy myapp build volumes app expose restart always networkmode bridge environment VIRTUALHOSTexampledomaincom VIRTUALPORT LETSENCRYPTHOSTexampledomaincom dependson nginxproxy volumes conf vhost html dhparam certs Hi buchdag Ive followed your idea with LETSENCRYPTSTANDALONECERTS and ported it to environment variables of Nginx container The usage will be pretty simple dockercomposeyml version services nginx image nginxlatest environment LETSENCRYPTSTANDALONECERTStrue VIRTUALHOSTexamplecomprivateacmecomdevacmecom LETSENCRYPTHOSTexamplecomprivateacmecomdevacmecom This config will produce three separate certificates It seems more correct in terms of decoupling to claim separate certificates from the Nginx container env than touching the main LE companion If the PR is acceptable I will adjust the documentations Hi everyone recently Im planning on hosting a Nextcloud server a Lychee server a phpbb server and a Wordpress server which will all be hosted with docker and lets encrypt running behind nginx reverse proxy and get certs from this companion On the first day I succeeded making nextcloud server and lychee server online with https thanks to the Lets encrypt and this companion But when I want to add the Wordpress server and phpbb server nextday letsencryptnginxproxycompanion refuses to generate new certs for these two containers So I added DEBUGtrue and got the following errorsThis is for wordpress the phpbb has the same error log StrictTransportSecurity maxage identifier type dns value blogcybertalecn status invalid expires T Z challenges type http status invalid error type urnietfparamsacmeerrorunauthorized detail Invalid response from u cDOCTYPE html u e n n u chtml class nojs lang enUS u e n n t u chead u e n n t t u cmeta charset UTF u e n t t u cmeta name viewport content widthdev status url token ERrH N Ysso cWp IlpZ DnjvdqfCPs CoQyPjWw validationRecord url hostname blogcybertalecn port addressesResolved addressUsed type dns status invalid url token ERrH N Ysso cWp IlpZ DnjvdqfCPs CoQyPjWw type tlsalpn status invalid url token ERrH N Ysso cWp IlpZ DnjvdqfCPs CoQyPjWw It seems like the http test is failing And in the log of the Wordpress I got this Dec GET wellknownacmechallengedaFHzgS gACrg LQlq F MDMigCufDnmGb BE hg HTTP Mozilla compatible Lets Encrypt validation server The nginx reverse proxy isnt handling the request but passed it to the Wordpress server which should not happen right I made a test which is making a file under varwwwhtmlwellknownacmechallenge and access it both from the internet and in the container turns out all ok Here is my dockercomposeyml version services proxy build proxy restart always ports labels comgithubjrcsletsencryptnginxproxycompanionnginxproxy true volumes certsetcnginxcertsro nginxetcnginx htmlusrsharenginxhtml varrundockersocktmpdockersockro dependson lychee phpbb wordpress networks proxytier letsencruptcompanion image jrcsletsencryptnginxproxycompanion restart always volumes certsetcnginxcerts vhostdetcnginxvhostd htmlusrsharenginxhtml varrundockersockvarrundockersockro environment DEFAULTEMAILsongqiang com DEBUGtrue networks proxytier dependson proxy db image mariadb command transactionisolationREADCOMMITTED binlogformatROW restart always volumes dbvarlibmysql etclocaltimeetclocaltimero environment MYSQLROOTPASSWORD envfile dbenv nextcloud image nextcloudapache containername nextcloud restart always volumes nextcloudvarwwwhtml environment MYSQLHOSTdb VIRTUALHOSTcloudcybertalecn LETSENCRYPTHOSTcloudcybertalecn LETSENCRYPTEMAILsongqiang com NEXTCLOUDTRUSTEDDOMAINScloudcybertalecn envfile dbenv dependson db networks proxytier default lychee image linuxserverlychee restart always ports environment VIRTUALHOSTlycheecybertalecn LETSENCRYPTHOSTlycheecybertalecn LETSENCRYPTEMAILsongqiang com PUID PGID volumes rootseconddisklycheeconfigconfig rootseconddisklycheepicturespictures networks proxytier default cpus mariadbphpbb image bitnamimariadb environment MARIADBUSERbnphpbb ALLOWEMPTYPASSWORDyes MARIADBDATABASEbitnamiphpbb volumes mariadbphpbbdatabitnami phpbb build phpbb restart always expose environment MARIADBHOSTmariadbphpbb MARIADBPORTNUMBER PHPBBDATABASEUSERbnphpbb PHPBBDATABASENAMEbitnamiphpbb ALLOWEMPTYPASSWORDyes PHPBBFIRSTNAMESong PHPBBLASTNAMEQiang PHPBBFORUMNAME bbs PHPBBFORUMDESCRIPTION PHPBBEMAILsongqiang com VIRTUALHOSTbbscybertalecn VIRTUALPORT LETSENCRYPTHOSTbbscybertalecn LETSENCRYPTEMAILsongqiang com volumes phpbbdatabitnami dependson mariadbphpbb networks proxytier default dbwordpress image mysql restart always environment MYSQLDATABASEwordpress MYSQLUSERduke MYSQLPASSWORD MYSQLROOTPASSWORD volumes dbwordpressvarlibmysql wordpress image wordpress expose restart always environment WORDPRESSDBHOSTdbwordpress WORDPRESSDBNAMEwordpress VIRTUALHOSTblogcybertalecn LETSENCRYPTHOSTblogcybertalecn LETSENCRYPTEMAILsongqiang com dependson dbwordpress volumes wordpressvarwwwhtml networks proxytier default volumes nextcloud db certs vhostd nginx html mariadbphpbbdata phpbbdata wordpress dbwordpress networks proxytier My web server is a centos virtual machine running on a windows server In general I got containers all running behind the proxy each of them is assigned a unique subdomain name all pointing to the same IPv address But only Nextcloud and Lychee can get certs the Wordpress and phpbb cant Anyone have a clue on this Any help is appreciated Is there something obvious Im missing with regards to log files Running this container with dockercompose daemon and nothing gets written to varlog where I think letsencrypt usually writes When running without the daemon I can obviously see the standard out which is what Id like to have logged Nice tool though thanks The companion works fantastically for many containers however for some it inexplicably results in a Specifically in my case Jellyfin and Funkwhale when Im running them without SSL they work perfectly fine As soon as I try to switch them over to hhtps using the companion it s and the logs show connect failed Connection refused while connecting to upstream client myinternalrouterip server mydomaintld request GET faviconico HTTP upstream host mydomaintld referrer Is there something these two containers might have in common that is causing this They are both from linuxserver but so are all the other ones Im using My docker compose files use the same settings as for other services that I have working with the companion I can attach full configs if needed Hi I hope someone can point me to the right direction to fix this issue The automatic renewal doesnt work for me because Im running jwilders nginx proxy in network mode host I have to do this because the proxy fails to forward real user IPs without it The whole error message is ERRORsimple CA marked some of the authorizations as invalid which likely means it could not access Did you set correct path in d examplecompath or defaultroot Are all your domains accessible from the internet Please check your domains DNS entries your hosts networkfirewall setup and your webserver config If a domains DNS entry has both A and AAAA fields set up some CAs such as Lets Encrypt will perform the challenge validation over IPv If your DNS provider does not answer correctly to CAA records request Lets Encrypt wont issue a certificate for your domain see Failing authorizations Traceback most recent call last File usrlibpython sitepackagessimplepy line in finalizeorder finalizedorder clientpollandfinalizeorder File usrlibpython sitepackagesacmeclientpy line in pollandfinalize orderr selfpollauthorizationsorderr deadline File usrlibpython sitepackagesacmeclientpy line in pollauthorizations raise errorsValidationErrorfailed acmeerrorsValidationError During handling of the above exception another exception occurred Traceback most recent call last File usrlibpython sitepackagessimplepy line in persistnewdata order finalizeorderclient order File usrlibpython sitepackagessimplepy line in finalizeorder raise ErrorChallenge validation has failed see error log simpleError Challenge validation has failed see error log During handling of the above exception another exception occurred Traceback most recent call last File usrlibpython sitepackagessimplepy line in main return mainwithexceptionscliargs File usrlibpython sitepackagessimplepy line in mainwithexceptions persistnewdataargs existingdata File usrlibpython sitepackagessimplepy line in persistnewdata chainNone File usrlibpython sitepackagessimplepy line in persistdata pluginsavenewdata File usrlibpython sitepackagessimplepy line in save key selfdumpkeydatakey File usrlibpython sitepackagessimplepy line in dumpkey return OpenSSLcryptodumpprivatekeyselftyp datawrappedstrip AttributeError NoneType object has no attribute wrapped Unhandled error has happened traceback is above Each time I want to renew the certificates I have to recreate the container with the default network options Is there a way to fix this Running the companion in network mode host didnt Continuation of Note Dont merge yet because Dockerhub does not support the platform flag yet It will work locally You will need to update dockerhub to build the current latest build to a new tag which is amd Create a new arm v tag which would build the new Dockerfilearm v sadly this creates repetition but this is the only way I know minus sharing a script between dockerfiles which has its own level of suckness You will have to remove the current latest tag and then let the hooks in the hooks folder create a new latest tag using the manifest command A working example can be seen here Should the container solution Have each image versioned It seems the nginxtmpl file is versioned and I just got the latest to attempt to remedy a problem trying to get www subdomain working Thanks See you can help me with this please Im trying to install a dockerletsencryptnginxproxycompanion certificate on my domain tooleraentiinfo and Im encountering this problem when it tries to generate the domain and I cant move forward INFOsimple Generating new certificate private key ERRORsimple CA marked some of the authorizations as invalid which likely means it could not access Did you set correct path in d examplecompath or defaultroot Are all your domains accessible from the internet Please check your domains DNS entries your hosts networkfirewall setup and your webserver config If a domains DNS entry has both A and AAAA fields set up some CAs such as Lets Encrypt will perform the challenge validation over IPv If your DNS provider does not answer correctly to CAA records request Lets Encrypt wont issue a certificate for your domain see Failing authorizations Challenge validation has failed see error log on my other server works well the same but the AWS does not work 