Did the author consider caching the image locally Pod version Xcode iPhone device Podfile pod CocoaMarkdown git Link error duplicate symbol main in UserschenynLibraryDeveloperXcodeDerivedDataCaJiangdqwwrpegxglvygdepdetmfjtuclBuildIntermediatesnoindexCaJianbuildDebugiphoneosCaJianbuildObjectsnormalarm maino UserschenynLibraryDeveloperXcodeDerivedDataCaJiangdqwwrpegxglvygdepdetmfjtuclBuildProductsDebugiphoneoscmarklibcmarkamaino ld duplicate symbol for architecture arm clang error linker command failed with exit code use v to see invocation Is this an error related to my environment or resulted from any incorrect operation Below is the code to generate an AttributedString in iOS NSString markdown Test CMDocument doc CMDocument alloc initWithData markdown dataUsingEncoding NSUTF StringEncoding options CMTextAttributes markdownAttributes CMTextAttributes alloc init CMAttributedStringRenderer renderer CMAttributedStringRenderer alloc initWithDocument doc attributes markdownAttributes return render render SORRY NO PODS FOUND If I understand correctly cmark does support this like normal markdown syntax but attributed string sees this break as a new paragraph For example the following markdown md foo bar baz qux Should render like this div aligncenter img src div But attributed string renders like this div aligncenter img src div Have a feeling Im not the first one wondering about this Anyone knows anything about this can comment If PR is needed where should I start looking at what I did objectivec NSString md c nThis is a code block n NSData data md dataUsingEncodingNSUTF StringEncoding CMDocument document CMDocument alloc initWithDatadata options CMAttributedStringRenderer renderer CMAttributedStringRenderer alloc initWithDocumentdocument attributes CMTextAttributes new NSAttributedString attributedString renderer render NSLog attributedString What I expect This is a code block NSFont What I got This is a code block NSFont Note that the trailing is included in the returned NSAttributedString moduleincludes warning umbrella header for module CocoaMarkdown does not include header Onoh Wincompleteumbrella import HeadersCocoaMarkdownh moduleincludes warning umbrella header for module CocoaMarkdown does not include header ONOXMLDocumenth Wincompleteumbrella warnings generated warnings generated let attributes CMTextAttributes attributeslinkAttributes NSForegroundColorAttributeName UIColorredColor Will render white links if the windowtintColor property is set Aside from that the code above actually doesnt work at all Starting to think the external tints colors are causing this issue Any solid explanation why Heya Thanks for the wonderful parser its by far the best one Ive used yet The only markdown elements which seem to be unparsable using CocoaMarkdown besides tables which would be pretty impossible to render without ASCII art anyway are superscript Although I see that superscript HTML characters can be transformed into attributes using the CMHTMLSuperscriptTransformer class there is no equivalent convenience for markdown In fact after running through the codebase for a while it only makes sense to modify cmark itself to add this parsing ability its not a part of the delegate pattern or customization of CocoaMarkdown to add different markdown parsing tokens This makes sense but means that adding my necessary features to the markdown capability of CocoaMarkdown requires modifying an underlying libraryframework which ideally would be separabledetachable and not dependent because CocoaMarkdown is already an extension on cmark making an extension on the cmark that CocoaMarkdown uses would be inappropriate to upkeep a fork inside a fork Instead of diving that deep and modifying the CC base itself I wanted to create this issue so we could perhaps find a solution that involves CocoaMarkdown itself and extends the modular nature of the library so perhaps other tokens can be added in the future too Although the delegate pattern is very convenient and useful it does not seem appropriate for modifying parsing only the attributeseffects of the parseinprogress Hope this is a reasonable request cheers 