Resolves Note that this behavior could potentially impact some code that is relying on what I consider to be broken behavior in systemjs When using the namedregister extra registering a module with the same name as a module in the import map results in some broken behaviors Specifically the module will get executed two times instead of one which is problematic The table below shows how this issue relates to and Scenario Module Type Works in Works after Systemimport twice Systemregister Systemimport twice AMD Systemimport once as linked dep once Systemregister Systemimport once as linked dep once AMD Demo of problem See This demonstrates the Systemimport once as linked dep once with Systemregister format scenario Note in browser console how the a module is being executed twice disclosure Im not sure if Systemjs has the proper behavior according to the spec or not this could be a false bug report GIVEN myModulejs js const importSubresource importsubresource importmapjson js imports myModule myModulemyModuleabc js scopes myModule subresource myModulesubresourcedef js subresource myModulesubresourcedef js Attempted both of these options but likely should only need to specify one of them Expected I would expect to be able to load the subresource leveraging the scopes resolution of the importmap Actual Fails with a trying to load myModulesubresourcejs Ive had a couple people tell me that they found this video useful so I thought Id propose it as part of the Readme Would not be offended if there are reasons not to merge this guybedford thoughts Hi I need help understanding if there is an expected order of execution when using script typesystemjsmodule My current understanding is that it should work similar to script typemodule however looking at the code in srcfeaturesscriptloadjs it does not appear to be the case Example js hellojs consoleloghello js worldjs consolelogworldjs logs world hello if worldjs finishes loading first html script typesystemjsmodule srchellojsscript script typesystemjsmodule srcworldjsscript always logs hello world regardless of which script loads first html script typemodule srchellojsscript script typemodule srcworldjsscript Not really an issue more of a question is there a reason that strict mode is explicitly turned off in the compiled output I just tested it with strict mode on and all the tests continue to pass So it doesnt appear on the surface to have to do with features youre building or anything Anyway just curious As of August the import maps spec no longer supports multiple import maps or merging import maps together Instead multiple import maps are listed as future work See and The question for SystemJS is whether to drop support for multiple import maps or not My vote is no but think its worth having a discussion around guybedford what are your thoughts Not sure what is this wierd error eval for css files caught to error Right now if I attempt to import a CommonJS module I get the rather cryptic Uncaught myimportingmodule Application myimportingmodule died in status LOADINGSOURCECODE exports is not defined at i nextjs Uncaught ReferenceError require is not defined at i nextjs It took me a while to figure out that this is because they are CommonJS modules and that SystemJS no longer supports CommonJS I and I expect a lot of developers would have saved a lot of time with an error message like Uncaught Module foo is a CommonJS module which SystemJS does not support importing See for the supported types 