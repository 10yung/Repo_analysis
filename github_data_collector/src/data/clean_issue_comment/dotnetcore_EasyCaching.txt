 Description Bug Steps to Reproduce cs EasyCachingPutAttribute Task SetSettingBFFLogSettingModel model Related code Exception logs ERROR EasyCachingInterceptorAspectCoreEasyCachingInterceptorProcessPutAsyncd MoveNext Cache provider set error MicrosoftCSharpRuntimeBinderRuntimeBinderException Cannot implicitly convert type void to object at CallSiteTargetClosure CallSite Object at SystemDynamicUpdateDelegatesUpdateAndExecute T TRet CallSite site T arg at AspectCoreDynamicProxyAspectContextRuntimeExtensionsUnwrapObject value TypeInfo valueTypeInfo at EasyCachingInterceptorAspectCoreEasyCachingInterceptorProcessPutAsyncAspectContext context It seems to unwarp the Task by contextUnwrapAsyncReturnValue is invalid if I use Taskbool as returning type itll be ok Expected behavior Support Task as returning type with EasyCachingPutAttribute Specifications Provider HybridCachingProvider version Interceptor AspectCore version Serializer default System Win I want to delete the specified cache through the EasyCachingEvict feature including the IsAll property and I dont want to fixed writing the CacheKeyPrefix C EasyCachingAbleCacheKeyPrefix MyPrefixKey Expiration IEnumerableMyClass GetSomethingMyParam param Like this C EasyCachingAbleExpiration IEnumerableMyClass GetSomethingMyParam param C public class MyParam ICachable public int Year get set public string UserId get set public string CacheKey Year public string CacheKeyPrefix MyPrefixKeyUserId Suppose I have the following cache MyPrefixKeyUser MyPrefixKeyUser MyPrefixKeyUser MyPrefixKeyUser MyPrefixKeyUser When my parameters are as follows C param UserUser EasyCachingEvictIsAll true void DeleteMyParam param I can delete all caches with a CachePrefix of MyPrefixKeyUser without having to manually call CacheProviderRemoveByPrefix MyPrefixKeyUser to delete Is it posible to add support for this embedded NoSQL database named LiteDB This is more of a feature request to support scenario of a horizontallyscaled application which doesnt have the liberty to use Redis The idea is to have cache data inmemory but allow one instance to invalidate the cache of other instances A form of gossip protocol can be used to identify nodes of an application Its useful model for extend the expiration automatically sometime I havent found related infomation about this feature Would you consider to support this feature First of all thanks sincerely for your interest in this project We will try our best to keep EasyCaching better and keep growing the community To attract more people to use and contribute to EasyCaching please comment on this issue to include the following information Your company school or organization Your city and country Your contact info blog email twitter For what scenario do you use EasyCaching EasyCaching EasyCaching EasyCaching 