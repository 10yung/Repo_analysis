Hi I believe the library needs some clarifications maybe proofs of concept also For example is it suitable for high dimensionalities What about sparse representations What about large datasets Hello I believe there is a bug in LSHscala At line signatures is an RDD of vectorIndex bandID minHashValue So the first groupByKey will create an RDD of vectorIndex bandID Iterable of minHashValues but for a specific bandID nothing guarantees us that all the Iterables of minHashValues will be ordered in the same way What I mean is that for example for two SparseVectors i and j for a specific band b and lets say two hash functions per band groupByKey may result in something like this ib Iterable minHashValue from H minHashValue from H jb Iterable minHashValue from H minHashValue from H So even if i and j have identical signatures in that band because of this swapping that may happen during groupByKey they wont go into the same bucket with high probability Also here is a link with Matei responding to a question on whether the order assumed here is actually preserved This commit adds support for calculating Jaccard similarity using bagmultiset semantics as described on pgs in chapter of Mining of Massive Datasets MMDS MMDS uses the example of movie ratings If ratings are to stars put a movie in a customers set n times if they rated the movie nstars Then use Jaccard similarity for bags when measuring the similarity of customers The Jaccard similarity for bags B and C is defined by counting an element n times in the intersection if n is the minimum of the number of times the element appears in B and C In the union we count the element the sum of the number of times it appears in B and C To fit a model using bag semantics the user Instantiates an LSH model with the variable repeatedItems set to true This is an optional variable that is false by default Passes their data into the model as a List or RDD of SparseVectors where the indices of each SparseVector correspond to the distinct items in the set and the values of each correspond to the number of times each corresponding item is repeated in the set The only difference in running the model and getting output is that the Jaccard similarity between two sets with bag semantics has a maximum of rather than The current shell script does not include the correct jar file so when you try to import cominvinceasparkhashLSH LSHModel it says it does not exist This should be fixed by updating shelllocalsh to contain SPARKHOMEbinsparkshell master local executormemory G drivermemory G jars targetsparkhash jar It seems useful to use a SparseVector for the input data sets when you only mean to use the indices Why not use a Set or a List instead 