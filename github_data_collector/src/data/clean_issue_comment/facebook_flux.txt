Bumps handlebars from to details summaryChangelogsummary Sourced from handlebarss changelog v November th Bugfixes fix add noprototypebuiltins eslintrule and fix all occurences f f d fix add more properties required to be enumerable Chores Build fix use instead of c b f add chai and dirtychai and sinon for cleaner testassertions and spies deprecate old assertionmethods e e ba dad a Security The properties proto defineGetter defineSetter and lookupGetter have been added to the list of properties that must be enumerable If a property by that name is found and not enumerable on its parent it will silently evaluate to undefined This is done in both the compiled template and the lookuphelper This will prevent new RemoteCodeExecution exploits that have been published recently Compatibility notes Due to the securityfixes The semantics of the templates using proto defineGetter defineSetter and lookupGetter in the respect that those expression now return undefined rather than their actual value from the proto The semantics have not changed in cases where the properties are enumerable as in js proto some string The change may be breaking in that respect but we still only increase the patchversion because the incompatible usecases are not intended undocumented and far less important than fixing RemoteCodeExecution exploits on existing systems Commits v November th Bugfixes fix use Stringfield in lookup when checking for constructor d test add fluent API for testing Handlebars c ac c Compatibility notes no incompatibility are to be expected trtable truncated details details summaryCommitssummary c c b v c d Update release notes f f d fix add noprototypebuiltins eslintrule and fix all occurences fix add more properties required to be enumerable ba testchore add chaiexpect and sinon to runtimeenvironment dad test add sinon as global variable to eslint in the specs a test add sinonjs for spies deprecate current assertions e e chore add chai and dirtychai for better test assertions c b f fix use instead of de d v Additional commits viewable in compare view details br Dependabot compatibility score Dependabot will resolve any conflicts with this PR as long as you dont alter it yourself You can also trigger a rebase manually by commenting dependabot rebase dependabotautomergestart dependabotautomergeend details summaryDependabot commands and optionssummary br You can trigger Dependabot actions by commenting on this PR dependabot rebase will rebase this PR dependabot recreate will recreate this PR overwriting any edits that have been made to it dependabot merge will merge this PR after your CI passes on it dependabot squash and merge will squash and merge this PR after your CI passes on it dependabot cancel merge will cancel a previously requested merge and block automerging dependabot reopen will reopen this PR if it is closed dependabot ignore this patchminormajor version will close this PR and stop Dependabot creating any more for this minormajor version unless you reopen the PR or upgrade to it yourself dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency unless you reopen the PR or upgrade to it yourself dependabot use these labels will set the current labels as the default for future PRs for this repo and language dependabot use these reviewers will set the current reviewers as the default for future PRs for this repo and language dependabot use these assignees will set the current assignees as the default for future PRs for this repo and language dependabot use this milestone will set the current milestone as the default for future PRs for this repo and language You can disable automated security fix PRs for this repo from the Security Alerts page details reactdomdevelopmentjs Warning componentWillReceiveProps has been renamed and is not recommended for use See for details Move data fetching code or side effects to componentDidUpdate If youre updating state whenever props change refactor your code to use memoization techniques or move it to static getDerivedStateFromProps Learn more at Rename componentWillReceiveProps to UNSAFEcomponentWillReceiveProps to suppress this warning in nonstrict mode In React x only the UNSAFE name will work To rename all deprecated lifecycles to their new names you can run npx reactcodemod renameunsafelifecycles in your project source folder Please update the following components FluxContainercontainerClass When installing flux the following warning is output warning myapp flux fbjs corejs corejs is no longer maintained Please upgrade to corejs or at least to actual version of corejs Updating fbjs should resolve this I have one Flux store that is imported by two components One a security based component and the other an app business data view That Loginjs component successfully logs in using Okta obtains user info from the application and stores it in the Flux store The user navigates to the app data page the dataviewjs which imports the store uses it to retrieve user info before making fetch calls The problem is the user state in the store is now undefined since the store has been newly constructed It seems since the user info has not changed it should not be removed The app data is still null since it hasnt retrieved the info yet The store should behave like a singleton and ONLY update state when an action has been dispatched FluxContainer contains componentWillReceiveProps Does flux fix this problem I getting lots of these errors ERROR in atloader nodemodulestypesfluxnodemodulestypesreactindexdts TS Subsequent variable declarations must have the same type Variable a must be of type DetailedHTMLPropsAnchorHTMLAttributesHTMLAnchorElement HTMLAnchorElement but here has type HTMLPropsHTMLAnchorElement hello I followed your tutorial on flux on the todo list at step Setting up Flux when I modify the rootjs i get the following issue ERROR in homejuboinfinifabwebtestfluxutilsjs Module not found Error Cannot resolve file or directory libFluxContainer in homejuboinfinifabwebtestflux homejuboinfinifabwebtestfluxutilsjs ERROR in homejuboinfinifabwebtestfluxutilsjs Module not found Error Cannot resolve file or directory libFluxMixinLegacy in homejuboinfinifabwebtestflux homejuboinfinifabwebtestfluxutilsjs ERROR in homejuboinfinifabwebtestfluxutilsjs Module not found Error Cannot resolve file or directory libFluxReduceStore in homejuboinfinifabwebtestflux homejuboinfinifabwebtestfluxutilsjs ERROR in homejuboinfinifabwebtestfluxutilsjs Module not found Error Cannot resolve file or directory libFluxStore in homejuboinfinifabwebtestflux homejuboinfinifabwebtestfluxutilsjs ERROR in homejuboinfinifabwebtestfluxindexjs Module not found Error Cannot resolve file or directory libDispatcher in homejuboinfinifabwebtestflux homejuboinfinifabwebtestfluxindexjs there no folder lib created during the install Here are the warning I have during the npm install npm WARN prepublishoninstall As of npm prepublish scripts are deprecated npm WARN prepublishoninstall Use prepare for build steps and prepublishOnly for uploadonly npm WARN prepublishoninstall See the deprecation note in npm help scripts for more information npm WARN lifecycle flux prepublish cannot run in wd s s wds flux gulp publish homejuboinfinifabwebtestflux npm WARN babelify requires a peer of babelcore alpha beta rc but none is installed You must install peer dependencies yourself npm WARN optional SKIPPING OPTIONAL DEPENDENCY fsevents nodemodulesfsevents npm WARN notsup SKIPPING OPTIONAL DEPENDENCY Unsupported platform for fsevents wanted osdarwinarchany current oslinuxarchx added packages in s My OS Ubuntu node v npm v Thanks npm run test openssl config failed error system libraryfopenNo such process fluxjest test C Users JThai workspace flux examples fluxjest jest FAIL src tests TodoStoretestjs Test suite failed to run ReferenceError Unknown plugin syntaxasyncfunctions specified in C Users JThai workspace flux examples fluxtodomvc babelrc at attempted to resolve relative to C Users JThai workspace flux examples fluxtodomvc at nodemodules babelcore lib transformation file options optionmanagerjs at Arraymap native Test Summary Ran all tests test suite failed tests passed total in test suite run time s openssl config failed error system libraryfopenNo such process npm ERR WindowsNT npm ERR argv C Program Files nodejs nodeexe C Program Files nodejs nodemodules npm bin npmclijs run test npm ERR node v npm ERR npm v npm ERR code ELIFECYCLE npm ERR fluxjest test jest npm ERR Exit status npm ERR npm ERR Failed at the fluxjest test script jest npm ERR Make sure you have the latest version of nodejs and npm installed npm ERR If you do this is most likely a problem with the fluxjest package npm ERR not with npm itself npm ERR Tell the author that this fails on your system npm ERR jest npm ERR You can get information on how to open an issue for this project with npm ERR npm bugs fluxjest npm ERR Or if that isnt available you can get their info via npm ERR npm owner ls fluxjest npm ERR There is likely additional logging output above npm ERR Please include the following file with any support request npm ERR C Users JThai workspace flux examples fluxjest npmdebuglog openssl config failed error system libraryfopenNo such process There are four main classes exposed in Flux Utils On github it says three but on production page it still says four kad what do you think People using the regular Flux package wont get the immutablejs dependency but people that do want to use it could add a separate npm package say fluximmutable or something similar