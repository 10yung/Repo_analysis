If you build and install tensorflow from and run the benchmark tests you will get values either in AMD or Nvidia cards with their latest release public driver Forward across steps sec batch Is this benchmark no more applicable for tensorflow latest version Is dev is going to update it to work for tensorflow and higher version for the future Operating System Ubuntu LTS Linux kernel GPU AMD RX ROCm backend convnetbenchmarkscltorch th imagenetwinnersbenchmarklua libthclnnsearchpath storagehomeyigetorchclinstallliblua libTHCLNNso Running on device gfx Using Advanced Micro Devices Inc OpenCL platform AMD Accelerated Parallel Processing Using OpenCL device gfx ModelType OverFeat fast Kernels clnn Input shape x x x clnn updateOutput clnn updateGradInput clnn accGradParameters clnn Forward clnn Backward clnn TOTAL ModelType AlexNet Kernels clnn Input shape x x x clnn updateOutput clnn updateGradInput clnn accGradParameters clnn Forward clnn Backward clnn TOTAL ModelType VGG ModelA Kernels clnn Input shape x x x clnn updateOutput clnn updateGradInput clnn accGradParameters clnn Forward clnn Backward clnn TOTAL storagehomeyigetorchclinstallbinluajit imagenetwinnersgooglenetlua attempt to index global cudnn a nil value stack traceback imagenetwinnersgooglenetlua in function imagenetwinnersgooglenetlua imagenetwinnersbenchmarklua in main chunk C in function dofile etorchclinstalllibluarocksrockstreplscm binth in main chunk C at x e Hello would you please help explain this issue Thanks in advance We found that convnetbenchmarks performance on cupy is worse than that on cupy We dont know whether it is problem of cupy or convnetbenchmarks scripts We reported this issue in got no response yet details Test Environment P Test action install chainer get convnetbenchmarks code git clone test cases case pip install cupy py chainergpu sysdltestmltgpu chainer python trainimagenetpy alexnet Chainer version b CuPy version CUDA True CUDA Version uV cuDNN True cuDNN Version Input data shape Average Forward ms Average Backward ms Average Total ms case pip install cupy py chainergpu sysdltestmltgpu chainer python trainimagenetpy alexnet Chainer version b CuPy version CUDA True cuDNN True cuDNN Version Input data shape Average Forward ms Average Backward ms Average Total ms case pip install cupy rc py chainergpu sysdltestmltgpu chainer python trainimagenetpy alexnet Chainer version b CuPy version rc CUDA True cuDNN True cuDNN Version Input data shape Average Forward ms Average Backward ms Average Total ms Notice when run case cupy you need to comment following lines in trainimagenetpy if chainercudaavailable cudav cupycudacompilergetnvccversionsplit decodeutf printCUDA Version cudav After trying benchmarkgooglenetpy to benchmark i ran into TypeError Expected int got list containing Tensors of type Message instead After searching through i found some links that the tensorflow might not support the old features Such as tfconcat function i think the files uses the old functions from the tensorflow Hi I see Tesla GV has been given to lucky DNN researchers by Nvidia CEO past week so hope someone can post some benchmarks cuDNN v is now released and there are clear improvements How can I go about updating these numbers and adding more frameworks Is it best to just submit a PR with README tables updated Or did you have different plans for new cuDNN versions So far Ive got the following for TensorFlow I tensorflowcorecommonruntimegpugpudevicecc DMA I tensorflowcorecommonruntimegpugpudevicecc Y Y I tensorflowcorecommonruntimegpugpudevicecc Y Y I tensorflowcorecommonruntimegpugpudevicecc Creating TensorFlow device gpu device name TITAN X Pascal pci bus id I tensorflowcorecommonruntimegpugpudevicecc Creating TensorFlow device gpu device name TITAN X Pascal pci bus id step duration step duration step duration step duration step duration step duration step duration step duration step duration Forward across steps sec batch step duration step duration step duration step duration step duration step duration step duration step duration step duration Forwardbackward across steps sec batch Running tensorflow head GPU supported No issues when running runfoward This is the output i got when running benchmarkalexnetpy step duration step duration step duration step duration step duration step duration step duration step duration step duration Forward across steps sec batch WARNINGtensorflowFrom homeatinzadcodebenchmarkalexnetpy in loss concat from tensorflowpythonopsarrayops is deprecated and will be removed after Instructions for updating This op will be removed after the deprecation date Please switch to tfconcatv Traceback most recent call last File ipythoninput d c e b line in module runfilehomeatinzadcodebenchmarkalexnetpy wdirhomeatinzadcode File usrlocallibpython distpackagesspyderutilssitesitecustomizepy line in runfile execfilefilename namespace File usrlocallibpython distpackagesspyderutilssitesitecustomizepy line in execfile builtinsexecfilefilename where File homeatinzadcodebenchmarkalexnetpy line in module tfapprun File usrlocallibpython distpackagestensorflowpythonplatformapppy line in run sysexitmainsysargv flagspassthrough File homeatinzadcodebenchmarkalexnetpy line in main runbenchmark File homeatinzadcodebenchmarkalexnetpy line in runbenchmark objective losslastlayer labels File homeatinzadcodebenchmarkalexnetpy line in loss concated tfconcat indices labels File usrlocallibpython distpackagestensorflowpythonutildeprecationpy line in newfunc return funcargs kwargs File usrlocallibpython distpackagestensorflowpythonopsarrayopspy line in concat return concatv values concatdim name File usrlocallibpython distpackagestensorflowpythonopsarrayopspy line in concatv assertiscompatiblewithtensorshapescalar File usrlocallibpython distpackagestensorflowpythonframeworktensorshapepy line in assertiscompatiblewith raise ValueErrorShapes s and s are incompatible self other ValueError Shapes and are incompatible