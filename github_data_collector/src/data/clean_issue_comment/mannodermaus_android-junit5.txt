As far as I can tell this feature should be working in as per In buildgradle setting androidandroidtestOptionsunitTestsallsystemProperty will not allow instrumentation tests to access the set value via SystemgetProperty in java Pretty sure I got confused the takeaway is that setting the below systemProperty only affects unit tests and not instrumentation tests which would be preferable This does work for unit tests ie setting androidtestOptionsunitTestsallsystemProperty var value the unit test equivalent in an android library does allow unit tests to access the set value via SystemgetProperty Similarly setting androidtestOptionsjunitPlatformconfigurationParameter var value only applies to unit tests and not instrumentation tests Environment gradle android library comandroidlibrary plugin android gradle plugin demannodermausjunit junitjupiter latest androidx testannotation dependencies Something that I like to do before opening a Pull Request is to run all tests from the module I just modified like in the bellow image I have a pet project that Im testing JUnit using your gradle plugin Everything I tested is working except this Run Tests in a folder I mentioned When I try to do that I get this error If you want to reproduce just import my project and go to character module srctestjava right click and then Run Tests in Java To know its an issue with the JUnit gradle plugin I checkout on c e f e fa e e a b d in my project commit before adding the JUnit to the project and then tried the same option and it worked Probably related to Steps to reproduce Run whole instrumented class test that has at least one test method with parameters such as ActivityOneTest Attempt to right click on the tests in test results window Test without parameter will display normal context menu However right clicking on test with method parameters will just yield Nothing here popup When attempting to run individual instrumented method that has parameters IDE will just error out with No tests found Example such test It looks like instrumentation sample project uses symlinks which are not supported on Windows When attempting to open the project on Windows buildgradlekts is interpreted as a text file pointing to actual location resulting in build error Hotlinking for visibility here Disabled instrumented tests apart from disabled parameterized tests see appear to be reported correctly as skipped in console output eg VInstrumentationResultParser INSTRUMENTATIONSTATUS classStupidConnectedTest VInstrumentationResultParser INSTRUMENTATIONSTATUS current VInstrumentationResultParser INSTRUMENTATIONSTATUS idAndroidJUnitRunner VInstrumentationResultParser INSTRUMENTATIONSTATUS numtests VInstrumentationResultParser INSTRUMENTATIONSTATUS stream VInstrumentationResultParser INSTRUMENTATIONSTATUS teststupidConnectedDisabledFailTest VInstrumentationResultParser INSTRUMENTATIONSTATUSCODE VInstrumentationResultParser INSTRUMENTATIONSTATUS classStupidConnectedTest VInstrumentationResultParser INSTRUMENTATIONSTATUS current VInstrumentationResultParser INSTRUMENTATIONSTATUS idAndroidJUnitRunner VInstrumentationResultParser INSTRUMENTATIONSTATUS numtests VInstrumentationResultParser INSTRUMENTATIONSTATUS stream VInstrumentationResultParser INSTRUMENTATIONSTATUS teststupidConnectedDisabledFailTest StupidConnectedTest stupidConnectedDisabledFailTest Nexus X SKIPPED VInstrumentationResultParser INSTRUMENTATIONSTATUSCODE and also reported correctly as skipped in xml reports However in the HTML test report files disabled instrumented tests are reported as passing img width altScreen Shot at PM src For comparison disabled unit tests are reported as skipped appropriately in their summary img width altScreen Shot at PM src May be a gradleside issue Im not sure at what point the HTML report generation happens Env JUnit mannodermaus plugin androidtestcore androidtestrunner still an issue as of snapshot Tried also on the provided sample Video Although not clearly seen in the above video this behavior clearly skews the expected results but furthermore when instrumented tests would try to access Android apis they would fail I added a sample project based on my own setup Gradle plugin x latest released Robolectric latest released There is a Robolectric test in the sample project which executes one line of code but Im not able to get any code coverage Steps to reproduce Run gradlew testDebug Analyze samplerobolectric build jacoco junitPlatformTestDebugexec In IntelliJ you can open an execfile with ctrlalt F it shows coverage for all lines of code in demannodermausgradlepluginsandroidjunit samplerobolectricFoo except for the method junit robolectric