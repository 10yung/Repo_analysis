Im trying to auto post my twitter account status via linuxcrontab unfortunetaly without success require twitteroauthautoloadphp use Abraham TwitterOAuth TwitterOAuth defineCONSUMERKEY consumerkey defineCONSUMERSECRET mysecretkey defineOAUTHCALLBACK connection new TwitterOAuthCONSUMERKEY CONSUMERSECRET requesttoken connectionoauthoauthrequesttoken arrayoauthcallback OAUTHCALLBACK printr requesttoken SESSION oauthtoken requesttoken oauthtoken SESSION oauthtokensecret requesttoken oauthtokensecret statues connectionpoststatusesupdate status hello world printrstatues Unfortunetaly I got error Your credentials do not allow access to this resource In other issue I have read that I have to redirect user to twitter to authorize access is there anyway to do that automatically Is there any error with the server Before two days i do AUTHENTICATION using my keys and was working fine Now i get an error HP Fatal error Uncaught Error Class Abraham TwitterOAuth TwitterOAuth not found in C inetpub wwwroot twiapp indexphp Stack trace main and Failed to load resource the server responded with a status of Internal Server Error can anyone help me fixed Array and string offset access syntax with curly braces is deprecated Hi Abraham Thank you so much for this library I find it helped me a lot But I got an issue when I register webhook I dont know what was wrong because I found two sources success registering webhooks with this library But when I try it give me Error Code I modify a bit of TwitterOAuthphp to download media from DM Could you help me private function httpmethod host path array parameters json thisresetLastResponse thisresetAttemptsNumber url thisbuildUrlhost path thisresponsesetApiPathpath if json parameters thiscleanUpParametersparameters return thismakeRequestsurl method parameters json private function buildUrlhost path ifisnullhost return path return sprintfsssjson host selfAPIVERSION path private function makeRequestsurl method array parameters json do thissleepIfNeeded result thisoAuthRequesturl method parameters json response JsonDecoderdecoderesult thisdecodeJsonAsArray response thisoAuthRequesturl method parameters json try Decode response only if decoding required if string is json encoded response thisdecodeJsonResponseIfRequiredresponse catch RuntimeException exception If we catched RuntimeException it means response cannot be decoded This may be any attachment or binary string Do nothing for while thisresponsesetBodyresponse thisattempts Retry up to our maxRetries number if we get errors greater than over capacity etc while thisrequestsAvailable return response private function decodeJsonResponseIfRequiredresponse response JsonDecoderdecoderesponse thisdecodeJsonAsArray jsonLastError jsonlasterror if jsonLastError JSONERRORNONE return response Throws RuntimeException for compatibility with PHP throw new RuntimeExceptionjsonlasterrormsg jsonLastError The last week or so some upload requests generate a PHP Notice error on initmediaidstring saying mediaidstring does not exist Thats either because the init request failed or because of a Twitter bug that does not return mediaidstring Id suggest adding resilience by checking the init request response code and automatically retrying it a few times with usleeps inbetween if the response code is There are methods like getLastXHeaders getBody but there arent getLastHeaders Be able to get response headers is pretty important in certain cases for example when I got data of attachment in I want to read content type from response headers instead of tryes to determine it manually so I expanded bunch of responsescoped methods with this one Method getLastHeaders allows to read all headers of server response Usage example php connector new TwitterOAuth thisconsumerkey thisconsumersecret thisaccesstoken thisaccesstokensecret data connectorgetsomeendpoint headers connectorgetLastHeaders I added support for retrieving medias from twitter inbox according to documentation Special method file returns raw binary data of attachment if all is ok This issue is fully related with Usage example php connector new TwitterOAuth thisconsumerkey thisconsumersecret thisaccesstoken thisaccesstokensecret Raw data of jpg attachment data connectorfile Updates the requirements on phpunitphpunit to permit the latest version details summaryChangelogsummary Sourced from phpunitphpunits changelog Changed Implemented Cleanup PHPUnit Framework Constraint Constraint Implemented Enable dependency resolution by default Implemented Define which parts of PHPUnit are covered by the backward compatibility promise Implemented Enable result cache by default Implemented The voidreturn fixer of phpcsfixer is now in effect Implemented Improve colorization of TestDox output Implemented Consider data provider that provides data with duplicate keys to be invalid Implemented Code location hints for requires annotations as well as SKIPIF EXPECT EXPECTF EXPECTREGEX and SECTIONEXTERNAL sections of PHPT tests Implemented Improved help output Deprecated Implemented Deprecate annotations for expecting exceptions Implemented Deprecate assertions and helper methods that operate on nonpublic attributes Implemented Deprecate optional parameters of assertEquals and assertNotEquals Implemented Deprecate assertInternalType and assertNotInternalType Implemented Deprecate the TestListener interface Implemented Deprecate optional parameters of assertContains and assertNotContains as well as using these methods with string haystacks Implemented Deprecate assertArraySubset Removed Implemented Drop support for PHP Implemented Remove PHPUnitFrameworkMockObjectMockObject details details summaryCommitssummary See full diff in compare view details br Dependabot will resolve any conflicts with this PR as long as you dont alter it yourself You can also trigger a rebase manually by commenting dependabot rebase dependabotautomergestart dependabotautomergeend details summaryDependabot commands and optionssummary br You can trigger Dependabot actions by commenting on this PR dependabot rebase will rebase this PR dependabot recreate will recreate this PR overwriting any edits that have been made to it dependabot merge will merge this PR after your CI passes on it dependabot cancel merge will cancel a previously requested merge dependabot reopen will reopen this PR if it is closed dependabot ignore this patchminormajor version will close this PR and stop Dependabot creating any more for this minormajor version unless you reopen the PR or upgrade to it yourself dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency unless you reopen the PR or upgrade to it yourself dependabot use these labels will set the current labels as the default for future PRs for this repo and language dependabot use these reviewers will set the current reviewers as the default for future PRs for this repo and language dependabot use these assignees will set the current assignees as the default for future PRs for this repo and language dependabot use this milestone will set the current milestone as the default for future PRs for this repo and language dependabot badge me will comment on this PR with code to add a Dependabot enabled badge to your readme Additionally you can set the following in your Dependabot dashboard Update frequency including time of day and day of week Automerge options neverpatchminor and devruntime dependencies Pull request limits per update run andor open at any time Outofrange updates receive only lockfile updates if desired Security updates receive only security updates if desired Finally you can contact us by mentioning dependabot details Hello I found this bug because in my codebase I set the library to decode json responses as array with setDecodeJsonAsArraytrue Doing so breaks the chunked media upload because it consists of multiple separate calls and the method uploadMediaChunked internally gives for granted that responses are stdClass objects see PR see issue 