Added ZPOPMAX command Related to issue Example of usgae php client new Predis Clienttcp values array one two three four clientzaddmyzset values popedValues clientzpopmaxmyzset With count specified count popedValues clientzpopmaxmyzset count printrpopedValue I would like to start my contribution to this project by adding support for ZPOPMAX command available since Redis I have using predis v with symfony for caching purpose and have sometimes such error json class Symfony Component Debug Exception OutOfMemoryException message Error Allowed memory size of bytes exhausted tried to allocate bytes code file vendorpredispredissrcConnectionStreamConnectionphp Reffering on this row Do i need to suspect predis or is it some server error Hi there I have container on docker the first for my php application the second for redis the third for nginx when I try to ping redis from my php container through a php file it return me this warning Uncaught Predis NotSupportedException Cannot use PING over clusters of connections this is my php script thisredisconn false basepath SERVER DOCUMENTROOT require basepath thisvendordir selfPREDIS srcAutoloaderphp Predis Autoloaderregister try options array thisredisconn new Predis Clientarraythisdatabasescheme thisdatabasehost thisdatabaseport options pingconn thisredisconn echo pingconnping catch Predis Connection ConnectionException e triggererrorDatabase connection failed egetMessage EUSERWARNING return false return thisredisconn There is a way to solve this issue and to check the redis connection thanks all I bet this wont sound surprising to many longtime users of this library at this point but the time to call for help from the community has finally come albeit a bit late I guess Just a few words on why weve reached this point Predis has always been mostly a oneman project aside from a few good PRs and various kinds of contributions for which Im still thankful after years This didnt pose much issues at least until I started having less and less free time to dedicate to my opensource activity which basically amounted to zero in the last months Truth to be told part of the problem is also that I dont have the same motivation I had a few years ago to maintain such a library but I hated to admit it That said if theres one thing that fueled my reluctance to call for help is that Ive always been quite meticulous with my work which doesnt mean being perfect whatever that means but many PRs I received in the past were admittedly sloppy with no care for the coding style adopted by the project glaring errors conflicts with the overall design of the library or missing tests just to name the most striking examples of what I mean So what now Basically Im looking for contributors that are seriously interested to help with maintaining Predis and that are willing to strive for the same meticulous approach I dont expect people rushing here to take up on such task the fact that Predis is a purePHP implementation of the Redis protocol surely attracted critics and in the meanwhile PhpRedis matured so much in terms of features and stability so theres probably less need for it but I dont want to reach the point of having to mark this project as abandoned because I think it still has its own place in the PHP Redis ecosystem Obviously Ill try to help as much as possible especially when there are doubts about Predis internals and the overall design of the library just dont take readiness for granted due to limited time The most urgent task is to rank open issues and fix them to push a new relase in the v branch some open PRs address a few of these issues but they probably need some work At first contributors willing to help should work on their own forks to polish the code before submitting proper PRs for fixes but if any currently open PR indeed doesnt need anything more than a merge because it passess the test suite and doesnt break anything else then let me know and Ill merge it ASAP I may consider giving access to the main repository to contributors that earned my trust I guess you undestand that I cannot do such a thing immediatly The master branch is meant to become v but since it diverged quite a lot from v most fixes cannot be easily merged At first I intended to maintain both v and mastertobev but in retrospect I guess that plan actually backfired so now the plan is to just fix v for both implementation bugs and compatiblity issues with newer PHP versions maybe a few new Redis commands and leave it at that On the master branch aside from applying the same fixes we should drop support once and for all for PEAR and older PHP versions and rework parts of code that could benefit from new features introduced in PHP before implementing anything new Im not sure how it will go but lets discuss how to make it work Id really prefer to discuss this publicly but if you need to contact me privately then go ahead During recent packet analysis we determined command writes to the server were not being coalesced as often as we expected In particular when sending a succession of pipelined requests on a new connection we often saw the commands going out in multiple packets rather than a single full one I suspect this is due in part to Nagles algorithm not having sufficient requests on the new connection for the heuristic to activate To improve performance I suggest adding a write buffer to StreamConnectionwrite All bytes written would be stored appended to an internal buffer The write buffer is only flushed to the server when a read is performed disconnect is called or in write when a tipping point is reached in the number of bytes buffered say K We implemented this change using a custom connection Factory that produces subclasses of StreamConnection and saw immediate improvements in reducing the number of packets transmitted and overall command execution time Hi Fix error message check for new version redis and add new test for check invalid database name Hello We have the simple source code like this thisconnectionsetexthisprefixkey value thisconnectiongetthisprefixkey value is null The value in the redis is nil too I try to use redis command SETEX it works fine My predis version Redis version Centos I hope to hear from you at the earliest Wrong annotation for method spop in ClientInterface Annotation says it returns string but it returns array