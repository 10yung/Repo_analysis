Im running into a problem and I cant get some containers up I was referred here from this thread so all the details so far are there rather than retyping it all This allow use NGINX Unit with minimal extended this variant image There have already been such requests and they will be more often or developers will write their own variations Otherwise busyboxs adduser uses Linux User console docker run it rm php fpmalpine grep wwwdata etcpasswd wwwdatax Linux Userhomewwwdatasbinnologin docker run it rm php fpmstretch grep wwwdata etcpasswd wwwdatax wwwdatavarwwwusrsbinnologin new image docker run it rm php alpinetest grep wwwdata etcpasswd wwwdatax wwwdatahomewwwdatasbinnologin Since this is noncritical and will break most of the Docker build cache we should wait to merge until the next version bump or Debian rebuild to minimize rebuilds or at least delay the PR to officialimages I have used official alpine phpimage for different versions with pdomysql extension Set PDOATTREMULATEPREPARES false to get native db value Its return float instead of float and problem with only Alpine while working proper for buster phpimage Issue reported on alpine too RUN apk update nocache apk add nocache PHPIZEDEPS dockerphpextinstall pdo pdomysql Docker up Run php test file not returning proper native value for float datatype in Mysql php php DB configuration host localhost user test dbPass test dbname test dsn mysqlhost host dbname dbname PDO connection and settings pdo new PDOdsn user dbPass Its required otherwise return value in string instead of float pdosetAttributePDOATTREMULATEPREPARES false Here amount is float Value sql SELECT id amount FROM account WHERE id stmt pdopreparesql stmtexecute row stmtfetchPDOFETCHASSOC echo pre vardumprow amount Its return float instead of float echo n echo pre exit Partly a duplicate of and related to The adminer image has alpine based variants because it is a mostly batteries included image for development purposes What it doesnt include is the database drivers that require installation of a pecl extension While checking on the request issue support request TimWolladockeradminer I realized that there is no easy way to install pecl extensions in the Alpine variants phpize dependencies are not readily available and the automated management lives within the dockerphpext helper scripts Thus Id like to request either a pecl wrapper or helper scripts for the phpize management that does not require me copying over bits and pieces from various scripts that might break when future changes are made It will be useful when investigating PHP segmentation For now we have to build a custom image for this purpose What do you think about it I have phpfpm running on docker with the following phpini memorylimit M errorreporting EALL EDEPRECATED ESTRICT displayerrors Off displaystartuperrors Off logerrors On ignorerepeatederrors On htmlerrors Off uploadmaxfilesize M postmaxsize M maxinputvars maxexecutiontime errorlog varlogphperrorlog loglevel error catchworkersoutput yes Everything worked and nginx was proxying perfectly The problem with this is logs are never shown in the containers stdout so I changed it to errorlog procselffd which meant that I could see the logs with docker logs f but I started seeing these errors on nginx error FastCGI sent in stderr PHP message PHP Deprecated Function createfunction is deprecated in So some plugin in my wordpress and I know which one it is is using a deprecated function but this error is non critical its actually a notice The problem is that with this setup I keep getting Bad Gateway errors when a client requests a page I actually also see that phpfpm is returning them via the fast cgi protocol when I connect do it directly It all starts working when I set logerrors Off So I read a bit and realized the fastcgi protocol can return a FCGISTDERR packet to its client which includes error logs so I decided not to go down that rabbit hole and try to cheat by doing this ln sf devstderr varlogphperrorlog to make phpfpm think it was logging to a file and still have the logs show up in docker logs No such luch only disappear is I log to varlogphperrorlog without any connection to stdoutstderr or if I disable logging altogether I dont know if its my poor understanding or if this is a bug but there should be a way to log to stdoutstderr without returning errors to nginx Can anyone help i php apache crashes on startup When starting a shell and trying to start from there I get the following apache foreground Segmentation fault core dumped Im considering is there any reason why dtrace was disabled by default Dont let the shell do glob expansion because it would not find deleted files git can Discovered when I did and fixed in cc tianon References 