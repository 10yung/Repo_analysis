rake is replaced with rails in latest versions so maybe add a note in new readme it works fine with rails azeemubuntualphazed rake actsastaggableonengineinstallmigrations rake aborted GemLoadError You have already activated rake but your Gemfile requires rake Prepending bundle exec to your command may solve this homeazeemalphazedconfigbootrb in top required homeazeemalphazedconfigapplicationrb in requirerelative homeazeemalphazedconfigapplicationrb in top required homeazeemalphazedRakefile in requirerelative homeazeemalphazedRakefile in top required See full trace by running task with trace azeemubuntualphazed rails actsastaggableonengineinstallmigrations Copied migration actsastaggableonmigrationactsastaggableonenginerb from actsastaggableonengine Copied migration addmissinguniqueindicesactsastaggableonenginerb from actsastaggableonengine Copied migration addtaggingscountercachetotagsactsastaggableonenginerb from actsastaggableonengine Copied migration addmissingtaggableindexactsastaggableonenginerb from actsastaggableonengine Copied migration changecollationfortagnamesactsastaggableonenginerb from actsastaggableonengine Copied migration addmissingindexesontaggingsactsastaggableonenginerb from actsastaggableonengine I got an issue when trying to save tags Heres my model ruby applicationrecordrb class ApplicationRecord ActiveRecordBase actastaggable end foorb class Foo ApplicationRecord end Heres what I did ruby irb foo Foonew footaglist abcdefghi foosave then it raises an error Traceback most recent call last from irb ActiveRecordStatementInvalid Mysql Error Incorrect table name SHOW FULL FIELDS FROM I got an error while running rails dbmigrate Im using rails and ruby Heres the log ruby rails dbmigrate ActsAsTaggableOnMigration migrating createtabletags s createtabletaggings s indexexiststaggings tagid s addindextaggings taggableid taggabletype context nametaggingstaggablecontextidx s ActsAsTaggableOnMigration migrated s AddMissingUniqueIndices migrating addindextags name uniquetrue s indexexiststaggings tagid s removeindextaggings tagid rails aborted StandardError An error has occurred all later migrations canceled Mysql Error Cannot drop index indextaggingsontagid needed in a foreign key constraint DROP INDEX indextaggingsontagid ON taggings Usersdenmarkrvmgemsruby gemsmysql libmysql clientrb in query Usersdenmarkrvmgemsruby gemsmysql libmysql clientrb in block in query Usersdenmarkrvmgemsruby gemsmysql libmysql clientrb in handleinterrupt Usersdenmarkrvmgemsruby gemsmysql libmysql clientrb in query Usersdenmarkrvmgemsruby gemsactiverecord libactiverecordconnectionadaptersabstractmysqladapterrb in block levels in execute Usersdenmarkrvmgemsruby gemsactivesupport libactivesupportdependenciesinterlockrb in block in permitconcurrentloads Usersdenmarkrvmgemsruby gemsactivesupport libactivesupportconcurrencysharelockrb in yieldshares Usersdenmarkrvmgemsruby gemsactivesupport libactivesupportdependenciesinterlockrb in permitconcurrentloads Usersdenmarkrvmgemsruby gemsactiverecord libactiverecordconnectionadaptersabstractmysqladapterrb in block in execute Usersdenmarkrvmgemsruby gemsactiverecord libactiverecordconnectionadaptersabstractadapterrb in block levels in log Usersdenmarkrvmgemsruby gemsactiverecord libactiverecordconnectionadaptersabstractadapterrb in block in log Usersdenmarkrvmgemsruby gemsactivesupport libactivesupportnotificationsinstrumenterrb in instrument Usersdenmarkrvmgemsruby gemsactiverecord libactiverecordconnectionadaptersabstractadapterrb in log Usersdenmarkrvmgemsruby gemsactiverecord libactiverecordconnectionadaptersabstractmysqladapterrb in execute Usersdenmarkrvmgemsruby gemsactiverecord libactiverecordconnectionadaptersmysqldatabasestatementsrb in execute Usersdenmarkrvmgemsruby gemsactiverecord libactiverecordconnectionadaptersabstractschemastatementsrb in removeindex Usersdenmarkrvmgemsruby gemsactiverecord libactiverecordmigrationrb in block in methodmissing Usersdenmarkrvmgemsruby gemsactiverecord libactiverecordmigrationrb in block in saywithtime Usersdenmarkrvmgemsruby gemsactiverecord libactiverecordmigrationrb in saywithtime Usersdenmarkrvmgemsruby gemsactiverecord libactiverecordmigrationrb in methodmissing Usersdenmarkrvmgemsruby gemsactiverecord libactiverecordmigrationrb in methodmissing UsersdenmarkCoreProjectXdbmigrate addmissinguniqueindicesactsastaggableonenginerb in up Usersdenmarkrvmgemsruby gemsactiverecord libactiverecordmigrationrb in up Usersdenmarkrvmgemsruby gemsactiverecord libactiverecordmigrationrb in execmigration Usersdenmarkrvmgemsruby gemsactiverecord libactiverecordmigrationrb in block levels in migrate Usersdenmarkrvmgemsruby gemsactiverecord libactiverecordmigrationrb in block in migrate Usersdenmarkrvmgemsruby gemsactiverecord libactiverecordconnectionadaptersabstractconnectionpoolrb in withconnection Usersdenmarkrvmgemsruby gemsactiverecord libactiverecordmigrationrb in migrate Usersdenmarkrvmgemsruby gemsactiverecord libactiverecordmigrationrb in migrate Usersdenmarkrvmgemsruby gemsactiverecord libactiverecordmigrationrb in block in executemigrationintransaction Usersdenmarkrvmgemsruby gemsactiverecord libactiverecordmigrationrb in ddltransaction Usersdenmarkrvmgemsruby gemsactiverecord libactiverecordmigrationrb in executemigrationintransaction Usersdenmarkrvmgemsruby gemsactiverecord libactiverecordmigrationrb in block in migratewithoutlock Usersdenmarkrvmgemsruby gemsactiverecord libactiverecordmigrationrb in each Usersdenmarkrvmgemsruby gemsactiverecord libactiverecordmigrationrb in migratewithoutlock Usersdenmarkrvmgemsruby gemsactiverecord libactiverecordmigrationrb in block in migrate Usersdenmarkrvmgemsruby gemsactiverecord libactiverecordmigrationrb in withadvisorylock Usersdenmarkrvmgemsruby gemsactiverecord libactiverecordmigrationrb in migrate Usersdenmarkrvmgemsruby gemsactiverecord libactiverecordmigrationrb in up Usersdenmarkrvmgemsruby gemsactiverecord libactiverecordmigrationrb in migrate Usersdenmarkrvmgemsruby gemsactiverecord libactiverecordtasksdatabasetasksrb in migrate Usersdenmarkrvmgemsruby gemsactiverecord libactiverecordrailtiesdatabasesrake in block levels in top required Usersdenmarkrvmgemsruby gemsbugsnag libbugsnagintegrationsrakerb in executewithbugsnag Usersdenmarkrvmgemsruby gemsrailties librailscommandsrakerakecommandrb in block in perform Usersdenmarkrvmgemsruby gemsrailties librailscommandsrakerakecommandrb in perform Usersdenmarkrvmgemsruby gemsrailties librailscommandrb in invoke Usersdenmarkrvmgemsruby gemsrailties librailscommandsrb in top required Usersdenmarkrvmgemsruby gemsbootsnap libbootsnaploadpathcachecoreextkernelrequirerb in require Usersdenmarkrvmgemsruby gemsbootsnap libbootsnaploadpathcachecoreextkernelrequirerb in block in requirewithbootsnaplfi Usersdenmarkrvmgemsruby gemsbootsnap libbootsnaploadpathcacheloadedfeaturesindexrb in register Usersdenmarkrvmgemsruby gemsbootsnap libbootsnaploadpathcachecoreextkernelrequirerb in requirewithbootsnaplfi Usersdenmarkrvmgemsruby gemsbootsnap libbootsnaploadpathcachecoreextkernelrequirerb in require Usersdenmarkrvmgemsruby gemsactivesupport libactivesupportdependenciesrb in block in require Usersdenmarkrvmgemsruby gemsactivesupport libactivesupportdependenciesrb in loaddependency Usersdenmarkrvmgemsruby gemsactivesupport libactivesupportdependenciesrb in require UsersdenmarkCoreProjectXbinrails in top required Usersdenmarkrvmgemsruby gemsspring libspringclientrailsrb in load Usersdenmarkrvmgemsruby gemsspring libspringclientrailsrb in call Usersdenmarkrvmgemsruby gemsspring libspringclientcommandrb in call Usersdenmarkrvmgemsruby gemsspring libspringclientrb in run Usersdenmarkrvmgemsruby gemsspring binspring in top required Usersdenmarkrvmgemsruby gemsspring libspringbinstubrb in load Usersdenmarkrvmgemsruby gemsspring libspringbinstubrb in top required UsersdenmarkCoreProjectXbinspring in require UsersdenmarkCoreProjectXbinspring in top required binrails in load binrails in main Caused by ActiveRecordStatementInvalid Mysql Error Cannot drop index indextaggingsontagid needed in a foreign key constraint DROP INDEX indextaggingsontagid ON taggings Usersdenmarkrvmgemsruby gemsmysql libmysql clientrb in query Usersdenmarkrvmgemsruby gemsmysql libmysql clientrb in block in query Usersdenmarkrvmgemsruby gemsmysql libmysql clientrb in handleinterrupt Usersdenmarkrvmgemsruby gemsmysql libmysql clientrb in query Usersdenmarkrvmgemsruby gemsactiverecord libactiverecordconnectionadaptersabstractmysqladapterrb in block levels in execute Usersdenmarkrvmgemsruby gemsactivesupport libactivesupportdependenciesinterlockrb in block in permitconcurrentloads Usersdenmarkrvmgemsruby gemsactivesupport libactivesupportconcurrencysharelockrb in yieldshares Usersdenmarkrvmgemsruby gemsactivesupport libactivesupportdependenciesinterlockrb in permitconcurrentloads Usersdenmarkrvmgemsruby gemsactiverecord libactiverecordconnectionadaptersabstractmysqladapterrb in block in execute Usersdenmarkrvmgemsruby gemsactiverecord libactiverecordconnectionadaptersabstractadapterrb in block levels in log Usersdenmarkrvmgemsruby gemsactiverecord libactiverecordconnectionadaptersabstractadapterrb in block in log Usersdenmarkrvmgemsruby gemsactivesupport libactivesupportnotificationsinstrumenterrb in instrument Usersdenmarkrvmgemsruby gemsactiverecord libactiverecordconnectionadaptersabstractadapterrb in log Usersdenmarkrvmgemsruby gemsactiverecord libactiverecordconnectionadaptersabstractmysqladapterrb in execute Usersdenmarkrvmgemsruby gemsactiverecord libactiverecordconnectionadaptersmysqldatabasestatementsrb in execute Usersdenmarkrvmgemsruby gemsactiverecord libactiverecordconnectionadaptersabstractschemastatementsrb in removeindex Usersdenmarkrvmgemsruby gemsactiverecord libactiverecordmigrationrb in block in methodmissing Usersdenmarkrvmgemsruby gemsactiverecord libactiverecordmigrationrb in block in saywithtime Usersdenmarkrvmgemsruby gemsactiverecord libactiverecordmigrationrb in saywithtime Usersdenmarkrvmgemsruby gemsactiverecord libactiverecordmigrationrb in methodmissing Usersdenmarkrvmgemsruby gemsactiverecord libactiverecordmigrationrb in methodmissing UsersdenmarkCoreProjectXdbmigrate addmissinguniqueindicesactsastaggableonenginerb in up Usersdenmarkrvmgemsruby gemsactiverecord libactiverecordmigrationrb in up Usersdenmarkrvmgemsruby gemsactiverecord libactiverecordmigrationrb in execmigration Usersdenmarkrvmgemsruby gemsactiverecord libactiverecordmigrationrb in block levels in migrate Usersdenmarkrvmgemsruby gemsactiverecord libactiverecordmigrationrb in block in migrate Usersdenmarkrvmgemsruby gemsactiverecord libactiverecordconnectionadaptersabstractconnectionpoolrb in withconnection Usersdenmarkrvmgemsruby gemsactiverecord libactiverecordmigrationrb in migrate Usersdenmarkrvmgemsruby gemsactiverecord libactiverecordmigrationrb in migrate Usersdenmarkrvmgemsruby gemsactiverecord libactiverecordmigrationrb in block in executemigrationintransaction Usersdenmarkrvmgemsruby gemsactiverecord libactiverecordmigrationrb in ddltransaction Usersdenmarkrvmgemsruby gemsactiverecord libactiverecordmigrationrb in executemigrationintransaction Usersdenmarkrvmgemsruby gemsactiverecord libactiverecordmigrationrb in block in migratewithoutlock Usersdenmarkrvmgemsruby gemsactiverecord libactiverecordmigrationrb in each Usersdenmarkrvmgemsruby gemsactiverecord libactiverecordmigrationrb in migratewithoutlock Usersdenmarkrvmgemsruby gemsactiverecord libactiverecordmigrationrb in block in migrate Usersdenmarkrvmgemsruby gemsactiverecord libactiverecordmigrationrb in withadvisorylock Usersdenmarkrvmgemsruby gemsactiverecord libactiverecordmigrationrb in migrate Usersdenmarkrvmgemsruby gemsactiverecord libactiverecordmigrationrb in up Usersdenmarkrvmgemsruby gemsactiverecord libactiverecordmigrationrb in migrate Usersdenmarkrvmgemsruby gemsactiverecord libactiverecordtasksdatabasetasksrb in migrate Usersdenmarkrvmgemsruby gemsactiverecord libactiverecordrailtiesdatabasesrake in block levels in top required Usersdenmarkrvmgemsruby gemsbugsnag libbugsnagintegrationsrakerb in executewithbugsnag Usersdenmarkrvmgemsruby gemsrailties librailscommandsrakerakecommandrb in block in perform Usersdenmarkrvmgemsruby gemsrailties librailscommandsrakerakecommandrb in perform Usersdenmarkrvmgemsruby gemsrailties librailscommandrb in invoke Usersdenmarkrvmgemsruby gemsrailties librailscommandsrb in top required Usersdenmarkrvmgemsruby gemsbootsnap libbootsnaploadpathcachecoreextkernelrequirerb in require Usersdenmarkrvmgemsruby gemsbootsnap libbootsnaploadpathcachecoreextkernelrequirerb in block in requirewithbootsnaplfi Usersdenmarkrvmgemsruby gemsbootsnap libbootsnaploadpathcacheloadedfeaturesindexrb in register Usersdenmarkrvmgemsruby gemsbootsnap libbootsnaploadpathcachecoreextkernelrequirerb in requirewithbootsnaplfi Usersdenmarkrvmgemsruby gemsbootsnap libbootsnaploadpathcachecoreextkernelrequirerb in require Usersdenmarkrvmgemsruby gemsactivesupport libactivesupportdependenciesrb in block in require Usersdenmarkrvmgemsruby gemsactivesupport libactivesupportdependenciesrb in loaddependency Usersdenmarkrvmgemsruby gemsactivesupport libactivesupportdependenciesrb in require UsersdenmarkCoreProjectXbinrails in top required Usersdenmarkrvmgemsruby gemsspring libspringclientrailsrb in load Usersdenmarkrvmgemsruby gemsspring libspringclientrailsrb in call Usersdenmarkrvmgemsruby gemsspring libspringclientcommandrb in call Usersdenmarkrvmgemsruby gemsspring libspringclientrb in run Usersdenmarkrvmgemsruby gemsspring binspring in top required Usersdenmarkrvmgemsruby gemsspring libspringbinstubrb in load Usersdenmarkrvmgemsruby gemsspring libspringbinstubrb in top required UsersdenmarkCoreProjectXbinspring in require UsersdenmarkCoreProjectXbinspring in top required binrails in load binrails in main Caused by Mysql Error Cannot drop index indextaggingsontagid needed in a foreign key constraint Usersdenmarkrvmgemsruby gemsmysql libmysql clientrb in query Usersdenmarkrvmgemsruby gemsmysql libmysql clientrb in block in query Usersdenmarkrvmgemsruby gemsmysql libmysql clientrb in handleinterrupt Usersdenmarkrvmgemsruby gemsmysql libmysql clientrb in query Usersdenmarkrvmgemsruby gemsactiverecord libactiverecordconnectionadaptersabstractmysqladapterrb in block levels in execute Usersdenmarkrvmgemsruby gemsactivesupport libactivesupportdependenciesinterlockrb in block in permitconcurrentloads Usersdenmarkrvmgemsruby gemsactivesupport libactivesupportconcurrencysharelockrb in yieldshares Usersdenmarkrvmgemsruby gemsactivesupport libactivesupportdependenciesinterlockrb in permitconcurrentloads Usersdenmarkrvmgemsruby gemsactiverecord libactiverecordconnectionadaptersabstractmysqladapterrb in block in execute Usersdenmarkrvmgemsruby gemsactiverecord libactiverecordconnectionadaptersabstractadapterrb in block levels in log Usersdenmarkrvmgemsruby gemsactiverecord libactiverecordconnectionadaptersabstractadapterrb in block in log Usersdenmarkrvmgemsruby gemsactivesupport libactivesupportnotificationsinstrumenterrb in instrument Usersdenmarkrvmgemsruby gemsactiverecord libactiverecordconnectionadaptersabstractadapterrb in log Usersdenmarkrvmgemsruby gemsactiverecord libactiverecordconnectionadaptersabstractmysqladapterrb in execute Usersdenmarkrvmgemsruby gemsactiverecord libactiverecordconnectionadaptersmysqldatabasestatementsrb in execute Usersdenmarkrvmgemsruby gemsactiverecord libactiverecordconnectionadaptersabstractschemastatementsrb in removeindex Usersdenmarkrvmgemsruby gemsactiverecord libactiverecordmigrationrb in block in methodmissing Usersdenmarkrvmgemsruby gemsactiverecord libactiverecordmigrationrb in block in saywithtime Usersdenmarkrvmgemsruby gemsactiverecord libactiverecordmigrationrb in saywithtime Usersdenmarkrvmgemsruby gemsactiverecord libactiverecordmigrationrb in methodmissing Usersdenmarkrvmgemsruby gemsactiverecord libactiverecordmigrationrb in methodmissing UsersdenmarkCoreProjectXdbmigrate addmissinguniqueindicesactsastaggableonenginerb in up Usersdenmarkrvmgemsruby gemsactiverecord libactiverecordmigrationrb in up Usersdenmarkrvmgemsruby gemsactiverecord libactiverecordmigrationrb in execmigration Usersdenmarkrvmgemsruby gemsactiverecord libactiverecordmigrationrb in block levels in migrate Usersdenmarkrvmgemsruby gemsactiverecord libactiverecordmigrationrb in block in migrate Usersdenmarkrvmgemsruby gemsactiverecord libactiverecordconnectionadaptersabstractconnectionpoolrb in withconnection Usersdenmarkrvmgemsruby gemsactiverecord libactiverecordmigrationrb in migrate Usersdenmarkrvmgemsruby gemsactiverecord libactiverecordmigrationrb in migrate Usersdenmarkrvmgemsruby gemsactiverecord libactiverecordmigrationrb in block in executemigrationintransaction Usersdenmarkrvmgemsruby gemsactiverecord libactiverecordmigrationrb in ddltransaction Usersdenmarkrvmgemsruby gemsactiverecord libactiverecordmigrationrb in executemigrationintransaction Usersdenmarkrvmgemsruby gemsactiverecord libactiverecordmigrationrb in block in migratewithoutlock Usersdenmarkrvmgemsruby gemsactiverecord libactiverecordmigrationrb in each Usersdenmarkrvmgemsruby gemsactiverecord libactiverecordmigrationrb in migratewithoutlock Usersdenmarkrvmgemsruby gemsactiverecord libactiverecordmigrationrb in block in migrate Usersdenmarkrvmgemsruby gemsactiverecord libactiverecordmigrationrb in withadvisorylock Usersdenmarkrvmgemsruby gemsactiverecord libactiverecordmigrationrb in migrate Usersdenmarkrvmgemsruby gemsactiverecord libactiverecordmigrationrb in up Usersdenmarkrvmgemsruby gemsactiverecord libactiverecordmigrationrb in migrate Usersdenmarkrvmgemsruby gemsactiverecord libactiverecordtasksdatabasetasksrb in migrate Usersdenmarkrvmgemsruby gemsactiverecord libactiverecordrailtiesdatabasesrake in block levels in top required Usersdenmarkrvmgemsruby gemsbugsnag libbugsnagintegrationsrakerb in executewithbugsnag Usersdenmarkrvmgemsruby gemsrailties librailscommandsrakerakecommandrb in block in perform Usersdenmarkrvmgemsruby gemsrailties librailscommandsrakerakecommandrb in perform Usersdenmarkrvmgemsruby gemsrailties librailscommandrb in invoke Usersdenmarkrvmgemsruby gemsrailties librailscommandsrb in top required Usersdenmarkrvmgemsruby gemsbootsnap libbootsnaploadpathcachecoreextkernelrequirerb in require Usersdenmarkrvmgemsruby gemsbootsnap libbootsnaploadpathcachecoreextkernelrequirerb in block in requirewithbootsnaplfi Usersdenmarkrvmgemsruby gemsbootsnap libbootsnaploadpathcacheloadedfeaturesindexrb in register Usersdenmarkrvmgemsruby gemsbootsnap libbootsnaploadpathcachecoreextkernelrequirerb in requirewithbootsnaplfi Usersdenmarkrvmgemsruby gemsbootsnap libbootsnaploadpathcachecoreextkernelrequirerb in require Usersdenmarkrvmgemsruby gemsactivesupport libactivesupportdependenciesrb in block in require Usersdenmarkrvmgemsruby gemsactivesupport libactivesupportdependenciesrb in loaddependency Usersdenmarkrvmgemsruby gemsactivesupport libactivesupportdependenciesrb in require UsersdenmarkCoreProjectXbinrails in top required Usersdenmarkrvmgemsruby gemsspring libspringclientrailsrb in load Usersdenmarkrvmgemsruby gemsspring libspringclientrailsrb in call Usersdenmarkrvmgemsruby gemsspring libspringclientcommandrb in call Usersdenmarkrvmgemsruby gemsspring libspringclientrb in run Usersdenmarkrvmgemsruby gemsspring binspring in top required Usersdenmarkrvmgemsruby gemsspring libspringbinstubrb in load Usersdenmarkrvmgemsruby gemsspring libspringbinstubrb in top required UsersdenmarkCoreProjectXbinspring in require UsersdenmarkCoreProjectXbinspring in top required binrails in load binrails in main Tasks TOP dbmigrate See full trace by running task with trace Fixes Background To fix collation issue with MySQL we added ActsAsTaggableOnforcebinarycollation true Reason With forcebinarycollation true option we execute following script every time on rails boot which is trying to update database which is not yet available ActiveRecordMigrationexecuteALTER TABLE tags MODIFY name varchar CHARACTER SET utf COLLATE utf bin This script should be executed only once not every time when rails is booted User must set collation by rerunning migration generator or run this rake task rake actsastaggableonenginetagnamescollatebin My class has several actsastaggableon Each update to the record triggers ActsAsTaggableOnTag Load query after update Example class Operator ApplicationRecord actsastaggableon tourtypes actsastaggableon regions actsastaggableon activities end Operator Update ms UPDATE operators SET updatedat highlights WHERE operatorsid updatedat highlights FirstSecond id ActsAsTaggableOnTag Load ms SELECT tags FROM tags WHERE LOWERname LOWERafrica OR LOWERname LOWERamaerica OR LOWERname LOWERalaska ActsAsTaggableOnTag Load ms SELECT tags FROM tags INNER JOIN taggings ON tagsid taggingstagid WHERE taggingstaggableid AND taggingstaggabletype AND taggingscontext regions AND taggingstaggerid IS NULL taggableid taggabletype Operator ActsAsTaggableOnTag Load ms SELECT tags FROM tags WHERE LOWERname LOWERafrica OR LOWERname LOWERamaerica OR LOWERname LOWERalaska ActsAsTaggableOnTag Load ms SELECT tags FROM tags INNER JOIN taggings ON tagsid taggingstagid WHERE taggingstaggableid AND taggingstaggabletype AND taggingscontext regions AND taggingstaggerid IS NULL taggableid taggabletype Operator How to avoid those Tag load queries Hello Im facing a really weird issue with version in production product EcommerceProductfind productcategorylist Groceries category EcommerceCategoryfind EcommerceCategory id parentid nil image Condimentsforwebsitejpg status active categorytype primary categoryorder mainmenu false popular false popularhomepage false imagepopularhomepage Condimentsforphonejpg homepagecatimagewidth e homepagecatimageheight e createdat updatedat name Groceries imagepopularhomepageoverlaytext Groceries parentcategorylist nil However when I run the following query products EcommerceProducttaggedwithcategoryname any true I get back product records but I have some product records tagged with tag Groceries that are missing Including the product with id above Its not returned as a matching product This makes absolute no sense as its basic functionality for the gem Can someone help debug Is there a way to recreate actastaggable tables in case they got corrupted or something I did try removing all tags for this product and reapplying them by the way arel matches and matchesany has a third parameter for case sensitivity that was not set and always false So ActsAsTaggableOnstrictcasematch didnt work with PostgreSQL As I noticed today the option ActsAsTaggableOnstrictcasematch true only works for creating new tags but not with the taggedwith scope After a little research I found out that the third parameter casesensitive for matches and matchesany in querybaserb tagmatchtype tagsmatchtype isnt set So there is always a search with ILIKE Using actsastaggableon and rails I have trouble with saving post with taglist prymain post Postnew prymain title Hello Ruby prymain content hoge prymain userid prymain likescount prymain Post x fd bcbe b id nil content hoge title Hello Ruby userid createdat nil updatedat nil likescount prymain posttaglistadda a prymain postsave ms begin transaction Post Create ms INSERT INTO posts content title userid createdat updatedat likescount VALUES content hoge title Hello Ruby userid createdat updatedat likescount DEPRECATION WARNING ActiveSupportMultibyteUnicodedowncase is deprecated and will be removed from Rails Use String methods directly called from pry at pry DEPRECATION WARNING ActiveSupportMultibyteUnicodedowncase is deprecated and will be removed from Rails Use String methods directly called from pry at pry ActsAsTaggableOnTag Load ms SELECT tags FROM tags WHERE LOWERname LOWERa ActsAsTaggableOnTag Exists ms SELECT AS one FROM tags WHERE tagsname LIMIT name a LIMIT ActsAsTaggableOnTag Create ms INSERT INTO tags name VALUES name a ActsAsTaggableOnTag Load ms SELECT tags FROM tags INNER JOIN taggings ON tagsid taggingstagid WHERE taggingstaggableid AND taggingstaggabletype AND taggingscontext tags AND taggingstaggerid IS NULL taggableid taggabletype Post ActsAsTaggableOnTag Load ms SELECT tags FROM tags WHERE tagsid LIMIT id LIMIT ActsAsTaggableOnTagging Exists ms SELECT AS one FROM taggings WHERE taggingstagid AND taggingstaggabletype AND taggingstaggableid AND taggingscontext AND taggingstaggerid IS NULL AND taggingstaggertype IS NULL LIMIT tagid taggabletype Post taggableid context tags LIMIT ms rollback transaction ActiveRecordRecordInvalid Validation failed Tagger must exist I can corecctly save posts without adding taglist I tried adding actsastagger in User model But it doesnt fix it What should I do