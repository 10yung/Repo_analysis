LightGBM on GPU LightGBM version Running same system and same datamodel takes second but happen to be originally hung for hours By hang here I mean abnormal state but the process is still using of core most of the time sometimes long periods of though Process sits on GPU but doesnt have any utilization Happens on multiple GPU types but this one is Tesla T Backtrace for python from faulthandler an ip daienvsh Current thread x fb b be most recent call first Jan ip daienvsh File opth oaidaicuda libpython sitepackageslightgbmgpubasicpy line in update Jan ip daienvsh File opth oaidaicuda libpython sitepackageslightgbmgpuenginepy line in train Jan ip daienvsh File opth oaidaicuda libpython sitepackageslightgbmgpusklearnpy line in fit Jan ip daienvsh File opth oaidaicuda libpython sitepackageslightgbmgpusklearnpy line in fit Jan ip daienvsh File opth oaidaipythonlibpython concurrentfuturesprocesspy line in processworker Jan ip daienvsh File opth oaidaipythonlibpython multiprocessingprocesspy line in run Jan ip daienvsh File opth oaidaipythonlibpython multiprocessingprocesspy line in bootstrap Jan ip daienvsh File opth oaidaipythonlibpython multiprocessingpopenforkpy line in launch Jan ip daienvsh File opth oaidaipythonlibpython multiprocessingpopenforkpy line in init Jan ip daienvsh File opth oaidaipythonlibpython multiprocessingcontextpy line in Popen Jan ip daienvsh File opth oaidaipythonlibpython multiprocessingcontextpy line in Popen Jan ip daienvsh File opth oaidaipythonlibpython multiprocessingprocesspy line in start Jan ip daienvsh File opth oaidaipythonlibpython concurrentfuturesprocesspy line in adjustprocesscount Jan ip daienvsh File opth oaidaipythonlibpython concurrentfuturesprocesspy line in startqueuemanagementthread Jan ip daienvsh File opth oaidaipythonlibpython concurrentfuturesprocesspy line in submit Jan ip daienvsh File opth oaidaipythonlibpython concurrentfuturesprocesspy line in processworker gdb backtrace x ffe c in clockgettime x fb e ed in clockgettime from lib libcso x faf a d e in from lib libnvidiaopenclso x faf a dc in from lib libnvidiaopenclso x faf a c in from lib libnvidiaopenclso x faf a dd in from lib libnvidiaopenclso x faf a fc in from lib libnvidiaopenclso x faf a aa in from lib libnvidiaopenclso x faf a a in from lib libnvidiaopenclso x faf a c in from lib libnvidiaopenclso x faf a b in from lib libnvidiaopenclso x faf a c in from lib libnvidiaopenclso x faf a in from lib libnvidiaopenclso x faffc a e in boostcomputecommandqueueenqueuewritebufferboostcomputebuffer const unsigned long unsigned long void const boostcomputewaitlist const from opth oaidaicuda libpython sitepackageslightgbmgpuliblightgbmso x faffc fba in LightGBMGPUTreeLearnerConstructGPUHistogramsAsyncstdvectorsigned char stdallocatorsigned char const int const int float const float const float float from opth oaidaicuda libpython sitepackageslightgbmgpuliblightgbmso x faffc fbd in LightGBMGPUTreeLearnerConstructHistogramsstdvectorsigned char stdallocatorsigned char const bool from opth oaidaicuda libpython sitepackageslightgbmgpuliblightgbmso x faffc ee in LightGBMSerialTreeLearnerFindBestSplits from opth oaidaicuda libpython sitepackageslightgbmgpuliblightgbmso x faffc e in LightGBMSerialTreeLearnerTrainfloat const float const bool json Json from opth oaidaicuda libpython sitepackageslightgbmgpuliblightgbmso x faffc b c in LightGBMGBDTTrainOneIterfloat const float const from opth oaidaicuda libpython sitepackageslightgbmgpuliblightgbmso x faffc e e in LGBMBoosterUpdateOneIter from opth oaidaicuda libpython sitepackageslightgbmgpuliblightgbmso x fb d fedcc in fficallunix from opth oaidailiblibffiso x fb d fe f in fficall from opth oaidailiblibffiso x fb d b in callfunctionpointer argcount resmem x ffe d b restypeoptimized out atypesoptimized out avalues x ffe d pProc x faffc e e LGBMBoosterUpdateOneIter flags at opth oaidaisrcPython Modulesctypescallprocc ctypescallproc pProcpProcentry x faffc e e LGBMBoosterUpdateOneIter argtupleargtupleentry x fb ea flags argtypesargtypesentry x restyperestypeentry x checker x at opth oaidaisrcPython Modulesctypescallprocc x fb d efc in PyCFuncPtrcall selfselfentry x fb inargsinargsentry x fb ea kwdskwdsentry x at opth oaidaisrcPython Modulesctypesctypesc x fb aa b d in PyObjectFastCallDict funcfuncentry x fb argsoptimized out nargs kwargskwargsentry x at Objectsabstractc terminal output for lightgbm running when hung an ip daienvsh LightGBM Warning Starting from the version default value for the boostfromaverage parameter in binary objective is true Jan ip daienvsh This may cause significantly different results comparing to the previous versions of LightGBM Jan ip daienvsh Try to set boostfromaveragefalse if your old models produce bad results Jan ip daienvsh LightGBM Info Number of positive number of negative Jan ip daienvsh LightGBM Info This is the GPU trainer Jan ip daienvsh LightGBM Info Total Bins Jan ip daienvsh LightGBM Info Number of data number of used features Jan ip daienvsh LightGBM Info Using requested OpenCL platform device Jan ip daienvsh LightGBM Info Using GPU Device Tesla T Vendor NVIDIA Corporation Jan ip daienvsh LightGBM Info Compiling OpenCL Kernel with bins Jan ip daienvsh LightGBM Info GPU programs have been built Jan ip daienvsh LightGBM Info Size of histogram bin entry Jan ip daienvsh LightGBM Info dense feature groups MB transferred to GPU in secs sparse feature groups Jan ip daienvsh LightGBM Warning Cannot change maxbin after constructed Dataset handle Jan ip daienvsh LightGBM Warning Cannot change binconstructsamplecnt after constructed Dataset handle Jan ip daienvsh LightGBM Warning Cannot change mindatainbin after constructed Dataset handle Jan ip daienvsh LightGBM Info binaryBoostFromScore pavg initscore Jan ip daienvsh LightGBM Info Start training from score Jan ip daienvsh LightGBM Warning No further splits with positive gain best gain inf Jan ip daienvsh Lagpaneldate begmoddur s binarylogloss Lagpaneldate begmoddur s auc Jan ip daienvsh Training until validation scores dont improve for rounds Jan ip daienvsh LightGBM Warning No further splits with positive gain best gain inf Jan ip daienvsh Lagpaneldate begmoddur s binarylogloss Lagpaneldate begmoddur s auc Jan ip daienvsh LightGBM Warning No further splits with positive gain best gain inf Jan ip daienvsh Lagpaneldate begmoddur s binarylogloss Lagpaneldate begmoddur s auc Jan ip daienvsh LightGBM Warning No further splits with positive gain best gain inf Jan ip daienvsh Lagpaneldate begmoddur s binarylogloss Lagpaneldate begmoddur s auc Jan ip daienvsh LightGBM Warning No further splits with positive gain best gain inf Jan ip daienvsh Lagpaneldate begmoddur s binarylogloss Lagpaneldate begmoddur s auc Jan ip daienvsh LightGBM Warning No further splits with positive gain best gain inf Jan ip daienvsh Lagpaneldate begmoddur s binarylogloss Lagpaneldate begmoddur s auc Jan ip daienvsh LightGBM Warning No further splits with positive gain best gain inf Jan ip daienvsh Lagpaneldate begmoddur s binarylogloss Lagpaneldate begmoddur s auc then hung Repeat of same exact modelpickled state written before the hang LightGBM Warning Starting from the version default value for the boostfromaverage parameter in binary objective is true This may cause significantly different results comparing to the previous versions of LightGBM Try to set boostfromaveragefalse if your old models produce bad results LightGBM Info Number of positive number of negative LightGBM Info This is the GPU trainer LightGBM Info Total Bins LightGBM Info Number of data number of used features LightGBM Info Using requested OpenCL platform device LightGBM Info Using GPU Device Tesla T Vendor NVIDIA Corporation LightGBM Info Compiling OpenCL Kernel with bins LightGBM Info GPU programs have been built LightGBM Info Size of histogram bin entry LightGBM Info dense feature groups MB transferred to GPU in secs sparse feature groups LightGBM Warning Cannot change maxbin after constructed Dataset handle LightGBM Warning Cannot change binconstructsamplecnt after constructed Dataset handle LightGBM Warning Cannot change mindatainbin after constructed Dataset handle LightGBM Info binaryBoostFromScore pavg initscore LightGBM Info Start training from score LightGBM Warning No further splits with positive gain best gain inf Lagpaneldate begmoddur s binarylogloss Lagpaneldate begmoddur s auc Training until validation scores dont improve for rounds LightGBM Warning No further splits with positive gain best gain inf Lagpaneldate begmoddur s binarylogloss Lagpaneldate begmoddur s auc LightGBM Warning No further splits with positive gain best gain inf Lagpaneldate begmoddur s binarylogloss Lagpaneldate begmoddur s auc LightGBM Warning No further splits with positive gain best gain inf Lagpaneldate begmoddur s binarylogloss Lagpaneldate begmoddur s auc LightGBM Warning No further splits with positive gain best gain inf Lagpaneldate begmoddur s binarylogloss Lagpaneldate begmoddur s auc LightGBM Warning No further splits with positive gain best gain inf Lagpaneldate begmoddur s binarylogloss Lagpaneldate begmoddur s auc LightGBM Warning No further splits with positive gain best gain inf Lagpaneldate begmoddur s binarylogloss Lagpaneldate begmoddur s auc LightGBM Warning No further splits with positive gain best gain inf Lagpaneldate begmoddur s binarylogloss Lagpaneldate begmoddur s auc LightGBM Warning No further splits with positive gain best gain inf Lagpaneldate begmoddur s binarylogloss Lagpaneldate begmoddur s auc LightGBM Warning No further splits with positive gain best gain inf Lagpaneldate begmoddur s binarylogloss Lagpaneldate begmoddur s auc LightGBM Warning No further splits with positive gain best gain inf Lagpaneldate begmoddur s binarylogloss Lagpaneldate begmoddur s auc LightGBM Warning No further splits with positive gain best gain inf Lagpaneldate begmoddur s binarylogloss Lagpaneldate begmoddur s auc LightGBM Warning No further splits with positive gain best gain inf Lagpaneldate begmoddur s binarylogloss Lagpaneldate begmoddur s auc LightGBM Warning No further splits with positive gain best gain inf Lagpaneldate begmoddur s binarylogloss Lagpaneldate begmoddur s auc LightGBM Warning No further splits with positive gain best gain inf Lagpaneldate begmoddur s binarylogloss Lagpaneldate begmoddur s auc LightGBM Warning No further splits with positive gain best gain inf Lagpaneldate begmoddur s binarylogloss Lagpaneldate begmoddur s auc LightGBM Warning No further splits with positive gain best gain inf Lagpaneldate begmoddur s binarylogloss Lagpaneldate begmoddur s auc LightGBM Warning No further splits with positive gain best gain inf Lagpaneldate begmoddur s binarylogloss Lagpaneldate begmoddur s auc LightGBM Warning No further splits with positive gain best gain inf Lagpaneldate begmoddur s binarylogloss Lagpaneldate begmoddur s auc LightGBM Warning No further splits with positive gain best gain inf Lagpaneldate begmoddur s binarylogloss Lagpaneldate begmoddur s auc LightGBM Warning No further splits with positive gain best gain inf Lagpaneldate begmoddur s binarylogloss Lagpaneldate begmoddur s auc LightGBM Warning No further splits with positive gain best gain inf Lagpaneldate begmoddur s binarylogloss Lagpaneldate begmoddur s auc LightGBM Warning No further splits with positive gain best gain inf Lagpaneldate begmoddur s binarylogloss Lagpaneldate begmoddur s auc LightGBM Warning No further splits with positive gain best gain inf Lagpaneldate begmoddur s binarylogloss Lagpaneldate begmoddur s auc LightGBM Warning No further splits with positive gain best gain inf Lagpaneldate begmoddur s binarylogloss Lagpaneldate begmoddur s auc LightGBM Warning No further splits with positive gain best gain inf Lagpaneldate begmoddur s binarylogloss Lagpaneldate begmoddur s auc LightGBM Warning No further splits with positive gain best gain inf Lagpaneldate begmoddur s binarylogloss Lagpaneldate begmoddur s auc LightGBM Warning No further splits with positive gain best gain inf Lagpaneldate begmoddur s binarylogloss Lagpaneldate begmoddur s auc LightGBM Warning No further splits with positive gain best gain inf Lagpaneldate begmoddur s binarylogloss Lagpaneldate begmoddur s auc LightGBM Warning No further splits with positive gain best gain inf Lagpaneldate begmoddur s binarylogloss Lagpaneldate begmoddur s auc LightGBM Warning No further splits with positive gain best gain inf Lagpaneldate begmoddur s binarylogloss Lagpaneldate begmoddur s auc Early stopping best iteration is Lagpaneldate begmoddur s binarylogloss Lagpaneldate begmoddur s auc count mean std min max Pickle and script hangpicklezip Just remove the line from the py file that has from h oaicorelightgbmdynamic import gotcpulgb gotgpulgb Thats just our way of dynamically importing which lightgbm we want lgbplotimportance in the R package is currently untested In this PR I propose a basic test that will cover all of the code in that function and at least help us catch some types of issues in CI This PR increases the R packages test coverage from to I also clarified the documentation on the cex parameter so that it is easier for users to identify valid values to pass We use roxygen to document the R package You can read more about this project here but basically you use speciallyformatted comments in source code files and they get translated into Rs special flavor of LaTeX Rd Right now lightgbms roxygen stuff is relying on the convention that the first of these comments maps to the title element of a documentation page and the the first of these comments after that broken by a blank line becomes the description element This can be errorprone so in the interest of being explicit in this PR I propose that we explicitly use the title and description tags Other changes in this PR added previouslyundeclared import of utils removed redundant uses of rdname and replaced them with name added docs on the expected form of group when using Datasetsetinfogroup clarified documentation on the expected form of categoricalfeature This PR also fixes LaTeX formatting issues that were smashing parameter names into their descriptions like this Before img width altlgb trainparamsbefore src After img width altlgb trainparamsafter src Current Datasetsetinfo has the behavior if you pass in something for group convert it to integer before storing it That behavior is not currently tested This PR adds a test for it In this PR I propose some more userfriendly documentation and error messages for lgbgetevalresult I think it would be helpful to be more explicit about how someone can find valid values of dataname and evalname Ive also added tests on the validations in this function since currently they are not covered by tests Please search your question on previous issues Stack Overflow or other search engines before you open a new one For bugs and unexpected issues please provide the following information so that we could reproduce them on our system Environment info Operating System Ubuntu CPUGPU model CPU CPythonR version python LightGBM version or commit hash Im not sure if this is a bug or a misusage from my part but I was dealing with a classification problem with unbalanced classes where the positive class proportion was bigger than the negative one setting in my company If I set the parameter isunbalancedTrue or scaleposweight for lightgbm the model always predicted positive class resulting in True Positive and False Positive only As this wasnt expected I tried to use classweightbalanced even though this is specified in the documentation that for this kind of problem it should not be used However the results made much more sense since there were fell False Negatives and True Negatives in this case I got a little confused by getting these results and any appreciation would be grateful Option to use extremely randomized trees as base learner as requested in While working through the R package I noticed several places where we have some validation of inputs to function calls below other running code For example right now if you pass something like a dataframe to data in lgbcv without including labels you wont find out that you have a malformed training dataset until after a lot of other steps have run including initializing a Predictor In this PR I propose a few changes throughout the package which move input validation up toward the beginning of functions so that users are alerted sooner when something is wrong Ive also added unit tests on these checks to be sure theyre behaving correctly Part of Not sure about the implementation maybe its better to have something like featureinfosjson Operating System Ubuntu LTS CPUGPU model Xeon ti CPythonR version LightGBM version or commit hash lgbmwaitforfailurezip python lgbmwaitforfailurepy rootrepoLightGBMcomputeincludeboostcomputeutilitywaitlisthpp void boostcomputewaitlistwait const Assertion clWaitForEventssize geteventptr failed Aborted core dumped GIraise sigsigentry at sysdepsunixsysvlinuxraisec x f f d in GIabort at abortc x f f d a in assertfailbase fmt x f f f d sssu ssAssertion s failed nn assertionassertionentry x f aa clWaitForEventssize geteventptr filefileentry x f a rootrepoLightGBMcomputeincludeboostcomputeutilitywaitlisthpp linelineentry functionfunctionentry x f d boostcomputewaitlistwait constPRETTYFUNCTION void boostcomputewaitlistwait const at assertc x f f d in GIassertfail assertion x f aa clWaitForEventssize geteventptr file x f a rootrepoLightGBMcomputeincludeboostcomputeutilitywaitlisthpp line function x f d boostcomputewaitlistwait constPRETTYFUNCTION void boostcomputewaitlistwait const at assertc x f fe in boostcomputewaitlistwait const clone part from homejonpyenvversions libpython sitepackageslightgbmgpuliblightgbmso x f d ac in void LightGBMGPUTreeLearnerWaitAndGetHistogramsLightGBMHistogramBinEntryLightGBMHistogramBinEntry from homejonpyenvversions libpython sitepackageslightgbmgpuliblightgbmso x f cadd in LightGBMGPUTreeLearnerConstructHistogramsstdvectorsigned char stdallocatorsigned char const bool from homejonpyenvversions libpython sitepackageslightgbmgpuliblightgbmso x f e ee in LightGBMSerialTreeLearnerFindBestSplits from homejonpyenvversions libpython sitepackageslightgbmgpuliblightgbmso x f e e in LightGBMSerialTreeLearnerTrainfloat const float const bool json Json from homejonpyenvversions libpython sitepackageslightgbmgpuliblightgbmso x f a c in LightGBMGBDTTrainOneIterfloat const float const from homejonpyenvversions libpython sitepackageslightgbmgpuliblightgbmso x f fed e in LGBMBoosterUpdateOneIter from homejonpyenvversions libpython sitepackageslightgbmgpuliblightgbmso x f c dae in fficallunix from usrlibx linuxgnulibffiso x f c f in fficall from usrlibx linuxgnulibffiso x f c d d in callfunctionpointer argcount resmem x fff cd f restypeoptimized out atypesoptimized out avalues x fff cd f pProc x f fed e LGBMBoosterUpdateOneIter flags at tmppythonbuild Python Modulesctypescallprocc ctypescallproc pProcpProcentry x f fed e LGBMBoosterUpdateOneIter argtupleargtupleentry x f c flags argtypesargtypesentry x restype x d fdafe checker x at tmppythonbuild Python Modulesctypescallprocc x f c fae in PyCFuncPtrcall selfselfentry x f d c inargsinargsentry x f c kwdskwdsentry x at tmppythonbuild Python Modulesctypesctypesc x f f aa in PyObjectFastCallDict func x f d c argsoptimized out nargsoptimized out kwargskwargsentry x at Objectsabstractc x f f aa in PyObjectFastCallKeywords funcfuncentry x f d c stackstackentry x d f da nargsnargsentry kwnameskwnamesentry x at Objectsabstractc x f f b bb in callfunction ppstackppstackentry x fff cd opargoptimized out kwnameskwnamesentry x at Pythoncevalc x f f ba ec in PyEvalEvalFrameDefault foptimized out throwflagoptimized out at Pythoncevalc x f f b ba a in PyEvalEvalCodeWithName co x f d ca globalsoptimized out localslocalsentry x argsargsentry x d a argcountargcountentry kwnames x f d a f kwargs x d b kwcount kwstep defs x f d e defcount kwdefs x closure x name x f f a qualname x f d d f at Pythoncevalc x f f b bca in fastfunction kwnames x f d a e nargs stack x d a func x f b at Pythoncevalc callfunction ppstackppstackentry x fff cd opargoptimized out kwnameskwnamesentry x f d a e at Pythoncevalc x f f ba f in PyEvalEvalFrameDefault foptimized out throwflagoptimized out at Pythoncevalc x f f b ba a in PyEvalEvalCodeWithName co x f a d globalsoptimized out localslocalsentry x argsargsentry x d ba argcountargcountentry kwnames x f d kwargs x d bb kwcount kwstep defs x f ba defcount kwdefs x closure x name x f ae b qualname x f ae b at Pythoncevalc x f f b bca in fastfunction kwnames x f d nargs stack x d ba func x f b at Pythoncevalc callfunction ppstackppstackentry x fff cd e opargoptimized out kwnameskwnamesentry x f d at Pythoncevalc x f f ba f in PyEvalEvalFrameDefault foptimized out throwflagoptimized out at Pythoncevalc x f f b ba a in PyEvalEvalCodeWithName co x f ce a globalsoptimized out localslocalsentry x argsargsentry x d argcountargcountentry kwnames x f fdc b kwargs x d a kwcount kwstep defs x f d a defcount kwdefs x closure x name x f f faeb qualname x f be at Pythoncevalc x f f b bca in fastfunction kwnames x f fdc a nargs stack x d func x f b bf at Pythoncevalc callfunction ppstackppstackentry x fff cd a opargoptimized out kwnameskwnamesentry x f fdc a at Pythoncevalc x f f ba f in PyEvalEvalFrameDefault foptimized out throwflagoptimized out at Pythoncevalc x f f b ba a in PyEvalEvalCodeWithName co x f c globalsoptimized out localslocalsentry x argsargsentry x d fcb c argcountargcountentry kwnames x f f e kwargs x d fcb d kwcount kwstep defs x f fdc defcount kwdefs x closure x f bb e name x f f faeb qualname x f c c at Pythoncevalc x f f b bca in fastfunction kwnames x f f c nargs stack x d fcb c func x f c e at Pythoncevalc callfunction ppstackppstackentry x fff cd d opargoptimized out kwnameskwnamesentry x f f c at Pythoncevalc x f f ba f in PyEvalEvalFrameDefault foptimized out throwflagoptimized out at Pythoncevalc x f f b ba a in PyEvalEvalCodeWithName cocoentry x f f eae globalsglobalsentry x f f e b localslocalsentry x f f e b argsargsentry x argcountargcountentry kwnameskwnamesentry x kwargs x kwcount kwstep defs x defcount kwdefs x closure x name x qualname x at Pythoncevalc x f f b c e in PyEvalEvalCodeEx cocoentry x f f eae globalsglobalsentry x f f e b localslocalsentry x f f e b argsargsentry x argcountargcountentry kwskwsentry x kwcount defs x defcount kwdefs x closure x at Pythoncevalc x f f b c b in PyEvalEvalCode cocoentry x f f eae globalsglobalsentry x f f e b localslocalsentry x f f e b at Pythoncevalc x f f bd da in runmod arena x f f fb flags x fff cd c locals x f f e b globals x f f e b filename x f f fc mod x d fd c at Pythonpythonrunc PyRunFileExFlags fpfpentry x d fca a filenamestrfilenamestrentry x f f lgbprefit a b bff d a dff ba py startstartentry globalsglobalsentry x f f e b localslocalsentry x f f e b closeitcloseitentry flags x fff cd c at Pythonpythonrunc x f f bd d in PyRunSimpleFileExFlags fpfpentry x d fca a filenameoptimized out closeitcloseitentry flagsflagsentry x fff cd c at Pythonpythonrunc x f f bd in PyRunAnyFileExFlags fpfpentry x d fca a filenameoptimized out closeitcloseitentry flagsflagsentry x fff cd c at Pythonpythonrunc x f f bf b e in runfile pcf x fff cd c filename x d fc d c Llgbprefit a b bff d a dff ba py fp x d fca a at Modulesmainc PyMain argcoptimized out argvoptimized out at Modulesmainc x d ea b in main argc argvoptimized out at Programspythonc 