Summary Add ChosenInlineResult variant to UpdateKind and stubs for the rest so deserialization doesnt fail Add missing InlineKeyboardButton variants SwitchInlineQuery SwitchInlineQueryCurrentChat Add missing fields to AnswerInlineQuery BREAKING Fix foursquareid typo related BREAKING Replace ReplyMarkup to InlineKeyboardMarkup in InlineQueryResult structs resolves Personally using these features so they should all be working This very simple piece of code fails to compile with a very scary error rust fn testbot tokiotaskspawnasync let api Api todo let updates apistreamfuse loop select upd updatesselectnextsome println upd error E dyn corefuturefutureFutureOutput stdresultResultstdoptionOptionstdvecVectelegrambotrawtypesupdateUpdate telegramboterrorsError static cannot be sent between threads safely srcserverbotrs tokiotaskspawnasync dyn corefuturefutureFutureOutput stdresultResultstdoptionOptionstdvecVectelegrambotrawtypesupdateUpdate telegramboterrorsError static cannot be sent between threads safely homenetvlcargoregistrysrcgithubcom ecc db ec tokio srctaskspawnrs T Future Send static required by this bound in tokiotaskspawnspawn This error points out the fact that the currentrequest field is not Send because the nested trait object is not Box Send This seems to make it impossible to run any kind of update handling procedure in subtasks created by various spawn methods but only in the main task created by the blockon kind of methods This is unfortunately a hard restriction for many complex projects I am new to Rust and I would like to help to contribute to this project I recently tried to use this library but the examples dont seem to work Where do I get the necessary up to date infos to create some new examples We have both public fields for all structs and a builder for InlineQueryResultArticle right now I think it be much better to use only builder because telegram can add new fields to types and it would break user code eventually Maybe InlineQueryResult builders should take self by value like InlineKeyboardButton Im not sure Maybe we should change CanAnswerInlineQuery and AnswerInlineQuery API something like this rust queryanswerinline addInlineQueryResultMpeg Gifnewuniqueid addInlineQueryResultMpeg Gifnewuniqueid Ive seen foursqureid field but we need to test all of them Based on Related with Add Poll struct Add sendPoll request Add stopPoll request Add MessageKindPoll variant Add UpdatePoll variant