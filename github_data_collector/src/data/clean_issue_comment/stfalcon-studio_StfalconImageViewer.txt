Describe the bug If an imageview that is used in WithTranstionFrom has other scale type than ImageViewers the transition isnt smooth To Reproduce Steps to reproduce the behavior Add imageView with hardcoded heightwidth and scaleType centerCrop Load image there and show full screen with StfalconImageViewer using that image view in WithTransitionFrom Expected behavior Smooth transition Video with the bug Additional context It could be an android transition bug though maybe you know how to workaround or fix as you definitely have an expertise for it Removed duplicate statement At the end of ImageViewerViewopen the function will call either animateOpen or prepareViewsForViewer animateOpen will cause the backgroundView alpha to be animated from to and then calls prepareViewsForViewer The recent commit Fix background blink on viewer opening set backgroundViews initial alpha to In the case where the fadein animation is not run eg by calling StfalconImageViewerBuildershowfalse or by not calling the Builders withTransitionFrom which causes animateOpen to not run the fadein animation the alpha will not be changed from its initial and the background will not be displayed at all This commit sets the backgroundView alpha to in prepareViewsForViewer In the case where the fadein animation is not run this ensures the background is visible In the case where the animation is run the animation will complete before prepareViewsForViewer is called the alpha will already be and this additional set should have no effect The incorrect behavior with showfalse can be seen in the demo app in the Rotation support module when rotating the screen This should also resolve This function enables to change the value of Background alpha in the ViewerView by Setting the value as we want Example case Set the background alpha to f for opacity This is also to solve weird background showcase when the imageTransition is null Problem Background color is not showing when withTransitionFromimageView is set to withTransitionFromnull To Reproduce Steps to reproduce the behavior Set the viewer background color withBackgroundColorColorBLACK Set the viewer method withTransitionFromtargetImageView to withTransitionFromnull Click on any images in that has been set with the viewer See error that the background is not totally black Expected behavior Background color should be black Is your feature request related to a problem Please describe It is a problem because it is not possible to access views and do custom logic Describe the solution youd like remove internal keyword at least for Views Problem When the opened image is deleted using the overlay view and if the targetImageView was passed using withTransitionFromtargetImageView then on swiping up or down on the image ie Dismissing the view using the swipe gesture the viewer hangs as the item was removed from the original list To Reproduce Steps to reproduce the behavior Make sure the targetImageView is passed to withTransitionFromtargetImageView Click on any image to open it in full screen Delete the image using the delete icon from the overlay view Remove the deleted item from the original list imagesListremoveAtitemPos Remove the deleted item from the adapter list adapteronItemDeleteditemPos Pass the updated original list to StfalconImageViewer stfalconImageViewerupdateImagesimagesList Swipe Up or Down to dismiss the viewer Expected behavior The view should be dismissed normally without getting hanged Screenshots Attached below in order sc sc sc sc Additional context I am using RecyclerView to show the list of the images On clicking an image the image is opened using StfalconImageViewer where the user has two options Share and Delete Hi This is a great library youve madeand its the only one I could find with this type of functionality which surprised me Im using StfalconImageViewer with the camera function in my app to let users view the images theyve taken Im expanding to include video recording so Id like users to be able to view both photos and videos in the same popup viewer After a few attempts I made what I think are useful generallyapplicable changes to StfalconImageViewer to enable my use case and many others These changes do not affect existing users of the library or significantly increase the librarys scope which I think makes them a candidate for merging In short the image viewer currently uses a ViewHolder holding a PhotoView along with the ImagesPagerAdapter and MultiTouchViewPager My changes add a ViewHolderLoader interface and an optional additional argument to the Builder allowing apps to pass in a ViewHolderLoader This loader or a default loader if none is passed provides ViewHolders to ImagesPagerAdapter Apps that choose to implement a ViewHolderLoader can then have their implementation return a subclass of the default ViewHolder which customizes the paging views as desired A few additional details are described in the commit message In my video use case my custom ViewHolder puts the usual PhotoView in a FrameLayout along with a VideoView and then in bind it displays one view or the other as appropriate Other use cases might want to customize each Pager page with additional views eg a caption or a new image icon which scroll with the imagesas opposed to placing that extra content in an overlay view where the content would be statically positioned I created a repo demonstrating the use of these changes It replicates my mixed photosvideos use case and shows how additional views in the demo a TextView can add content alongside the image on each page This was my first time working with Kotlin so Im very open to suggested revisions