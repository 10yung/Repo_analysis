This loader daisy chains with the https loader by generating presigned S URLs using the S API Daisy chaining like this keeps the code simpler and reuses the contentencoding and contenttype logic in the http loader rather than reimplementing against S object properties Authentication is handled in the normal way for AWS clients either through environment variables or credentials files Tests for this will require first setting up an accessible S bucket Small description If I open a JSON file which contains a single JSON object rather than an array of objects its columns are duplicated in the VisiData window Sample contents singleitemjson json key val key val Expected result Opening a JSON file with a single object should appear the same as opening a JSON file containing an array containing only that object In VisiData this works as expected key key val val Actual result with screenshot In VisiData dev key key key key val val val val Steps to reproduce with sample data and a vd echo key val key val singleitemjson vd singleitemjson Additional context Version VisiData dev most recently c Note that this issue appears to be only a displayUI quirk Saving the file does not cause duplicated columns in the output Is it possible to define exact column positionslengths for fixed format I have a fixed file and it is impossible for visidata to properly recognize where column begins and where it ends without proper defintion It would be good if we were able to pass columns definition to visidata eg column from char to column from char to column from char to etc Aim is to have something spiritually similar to vims dot command Design from ajkerrigan If there was a repeat command my intuition would be for it to run the previous cmd longname with any previous input A zprefix alternative would run the last command longname with empty queried input Example Workflow User runs z sum on current column Units User moves cursor to column Items User presses repeatcommand z sum is calculated on the current column Items User presses zprefix repeatcommand z is execd and queries for an aggregator from the user Once given it executes on the current column Items Small description Fixed format has a traceback if fixedrows is less than skip This command gives a traceback vd f fixed fixedrows skip Expected result Fixedrows applies after the initial lines are skipped Actual result with screenshot Traceback most recent call last File usrlibpython sitepackagesvisidatathreadspy line in toplevelTryFunc tstatus funcargs kwargs File usrlibpython sitepackagesvisidatasheetspy line in reload listselfoptlinesitsource skip File usrlibpython sitepackagesvisidatasheetspy line in optlines yield nextit File usrlibpython sitepackagesvisidataloadersfixedwidthpy line in iterload selfsetColNamesselfheaderlines AttributeError FixedWidthColumnsSheet object has no attribute headerlines Steps to reproduce with sample data and a vd vd f fixed fixedrows skip Additional context Please include the version of VisiData latest head from develop v In some cases a sheet has no name information available name or a source to pull from The name property can error out in that case Since we dont have enough information to return a useful name property in these cases one option is to fall back to an empty name Callers may have additional local context that can serve as a sheet name substitute such as a command longname in the case of This approach may clash with the no empty sheet name intent of de in which case we can handle this differently Small description sheetaddColorizer only allow you to see the fg or bg color via the reverse attribute But there is no way to independently set both It would be nice to have control of both these independently It looks like part of the issue is that the curses colorpairs are all created at start up and there are no free spots Perhaps these can be changed later I know this is unlikely to be added any time soon but this would be nice to have Small description This might just be a question rather than a bug It is not clear what the correct way to remove a colorizer that was added via sheetaddColorizer If I add one via a command mapping it would be useful to be able to remove it with a command Small description From saulpw says sheetaddColorizer seems like it should only add the colorizer to the current sheet I agree This is probably just a bug though it may prove difficult to fix in the short term Well look into this esp as we finalize the API for Expected result Apply only to the sheet that sheet sheetaddColorizer was called on Though I could see how it would be useful either way to make a global or local colorizer Small description vd P longname was introduced in v It replays longname Since de b f fb ebde ec dc fd it instead resuts in this stacktrace Traceback most recent call last File visidatabasesheetpy line in execcommand vdcmdlogbeforeExecHookself cmd keystrokes File visidatacmdlogpy line in beforeExecHook sheetname sheetname File visidatabasesheetpy line in name return selfname or selfsourcename selfrowtype AttributeError NoneType object has no attribute name Steps to reproduce with sample data and a vd vd P openplugins Additional context develop branch 