Closes Issue Type x Bug Typo Steps to Replicate Examine READMEmd Search for implementating Expected Behaviour Should read implementing A good example on how this can be done is c rust It not only converts the source but keeps it compilable provides the refactoring tool and means to script the refactoring with Lua language See their manual for more information My python code is as below python def feature inputJsonString print inputJsonString import json import sys print jsondumps return sysversion and the go main code is as below go package main import I have imported all the package under the GOPATHsrcpython and thus json related libs should be imported func main f grumpyNewRootFrame mods grumpyImportModulef feature fmtPrintfmods v n mods feature grumpyGetAttrf mods grumpyNewStrfeature nil args fMakeArgs args grumpyNewStra b I am stringToObject result err feature Callf args nil fmtPrintfresult type v n reflectTypeOfresult fmtPrintfresult v n resultString fmtPrintferr v n err When I tried to run the go main code and I got result like this result nil err TypeErrorbad operand type for unary tuple I found this error is raised from grumpyImportModule function in generated go code feature go but I am not clear how this error is raised Also when I try to import some other python std libs like sys and it works fine My Golang version is go darwinamd As titled the newest grumpyImportModule function has only params while the comment has not been updated And ImportModulef ab causes the initialization and entry into sysmodules of Grumpy module a and then Grumpy module ab instead of b Is this a bug Looks like alanjds maintains active fork of this project Lets support him with our attention Changes the folders structure separating the Tools and the RuntimeStdlib Allows to test and publish both parts separately The Tools are tested via pytest not the Makefile The Tools are to be published as grumpytools package and Runtime as grumpyruntime package TODO X Publishable on Python Package Index PyPI x Update the README x Better way to bump the version then editing files Maybe via bumpversion x Fix a find compiler No such file or directory Makefile warning Can django run on grumpy Any tester here These are all libraries I added while studying the feasibility of using grumpy Works python import datetime now datetimedatetimenow now datetimedatetimenow print now now Output Does not work contents of hellopy python import datetime now datetimedatetimenow print now ux grumpy grumpc modnamehello GOPATHsrcpythonhellopy GOPATHsrcpythonhellomodulego ux grumpy echo import hello grumprun NotImplementedError conversion type not yet supported c 