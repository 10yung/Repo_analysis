Thank you for your work on Spring Its saved me a lot of seconds over the years I encountered an incompatibility with railsspring when I was installing a working with a new gem drymonads Repro repo drymonads ticket The issue is that drymonads raises an Error with a frozen empty array for the backtrace and Springs patched raise attempts to sanitize the backtrace without checking if it is frozen This causes an error cant modify frozen Array FrozenError Does it make sense to check that the backtrace isnt frozen before attempting sanitization Spring Rails Ruby drymonads I suddenly starting running into an issue today on my Rails project where all commands I run that use spring as a preloader such as rspec or rake fail due to an error similar to this objc NSCFConstantString initialize may have been in progress in another thread when fork was called objc NSCFConstantString initialize may have been in progress in another thread when fork was called We cannot safely call it or ignore it in the fork child process Crashing instead Set a breakpoint on objcinitializeAfterForkError to debug This happened right after I upgraded all my Homebrew packages on my Mac machine Mac OS I can verify that I was not running into this issue on my machine before I upgraded my Homebrew packages which rules out the issue being due to an application code change I can also note that I have deduced this to be a Spring issue because I dont run into this error when I run these commands with Spring disabled via the DISABLESPRING variable Im guessing that one of the upgrades from one of my Homebrew packages is serving as a catalyist for this bug to manifest Im unsure of how to track this down myself Heres my list of Homebrew packages maybe itll be useful In the meanwhile Im using an environment variable workaround Ive commonly seen in Google searches such as from this post to disable this MacOS check Hi I have rails app deployed using bundle install deployment withoutdevelopment test quiet path gemfilebuildGemfile yet running the rails console rails c Running via Spring preloader in process WARNING Spring is running in production To fix this make sure the spring gem is only present in development and test groups in your Gemfile and make sure you always use bundle install without development test in production Loading production environment Rails irbmain uses spring yet spring is defined in the development section of Gemfile not production group development do Access an interactive console on exception pages or by calling console anywhere in the code gem webconsole gem listen gem spring gem springwatcherlisten gem springcommandsrspec gem springcommandsrubocop why is this so if i install googlecloudfirestore i get a threading fault Environment details OS Mac OS Catalina Ruby version ruby Gem name and version googlecloudfirestore Steps to reproduce install rails install spring rails c Code example ruby require googlecloudfirestore firestore GoogleCloudFirestorenew projectid projectid credentials pathjson cityref firestoredoc citiesLA data name Los Angeles state CA country USA cityrefset data Full backtrace sh cityrefset data objc NSCFConstantString initialize may have been in progress in another thread when fork was called objc NSCFConstantString initialize may have been in progress in another thread when fork was called We cannot safely call it or ignore it in the fork child process Crashing instead Set a breakpoint on objcinitializeAfterForkError to debug Bump the Ruby versions used by Travis CI Also update from Rails rc to If I create a skeleton Rails API application and then remove ActiveRecord from the application spring still tries to load AR which ultimately fails and prevents generators etc from working This is a regression in Rails in Rails everything works as expected I created two applications which are identical except for version of Rails used Generate the app rails new api springarsqlite cd springarsqlite Edit Gemfile removing reference to sqlite Edit configapplicationrb commenting out ActiveRecord and ActiveStorage require activerecordrailtie require activestorageengine Run rails g controller foo Result butler rails g controller foo homesandboxrbenvversions libruby bundlerrubygemsintegrationrb in block levels in replacegem Error loading the sqlite Active Record adapter Missing a gem it depends on sqlite is not part of the bundle Add it to your Gemfile LoadError from homesandboxrbenvversions librubygems gemsactiverecord libactiverecordconnectionadapterssqlite adapterrb in main from homesandboxrbenvversions librubygems gemsbootsnap libbootsnaploadpathcachecoreextkernelrequirerb in require from homesandboxrbenvversions librubygems gemsbootsnap libbootsnaploadpathcachecoreextkernelrequirerb in block in requirewithbootsnaplfi from homesandboxrbenvversions librubygems gemsbootsnap libbootsnaploadpathcacheloadedfeaturesindexrb in register from homesandboxrbenvversions librubygems gemsbootsnap libbootsnaploadpathcachecoreextkernelrequirerb in requirewithbootsnaplfi from homesandboxrbenvversions librubygems gemsbootsnap libbootsnaploadpathcachecoreextkernelrequirerb in require from homesandboxrbenvversions librubygems gemszeitwerk libzeitwerkkernelrb in require from homesandboxrbenvversions librubygems gemsactiverecord libactiverecordconnectionadaptersconnectionspecificationrb in spec from homesandboxrbenvversions librubygems gemsactiverecord libactiverecordconnectionadaptersabstractconnectionpoolrb in establishconnection from homesandboxrbenvversions librubygems gemsactiverecord libactiverecordconnectionhandlingrb in establishconnection from homesandboxrbenvversions librubygems gemsactiverecord libactiverecordrailtierb in block levels in classRailtie from homesandboxrbenvversions librubygems gemsactivesupport libactivesupportlazyloadhooksrb in classeval from homesandboxrbenvversions librubygems gemsactivesupport libactivesupportlazyloadhooksrb in block in executehook from homesandboxrbenvversions librubygems gemsactivesupport libactivesupportlazyloadhooksrb in withexecutioncontrol from homesandboxrbenvversions librubygems gemsactivesupport libactivesupportlazyloadhooksrb in executehook from homesandboxrbenvversions librubygems gemsactivesupport libactivesupportlazyloadhooksrb in block in runloadhooks from homesandboxrbenvversions librubygems gemsactivesupport libactivesupportlazyloadhooksrb in each from homesandboxrbenvversions librubygems gemsactivesupport libactivesupportlazyloadhooksrb in runloadhooks from homesandboxrbenvversions librubygems gemsactiverecord libactiverecordbaserb in moduleActiveRecord from homesandboxrbenvversions librubygems gemsactiverecord libactiverecordbaserb in main from homesandboxrbenvversions librubygems gemsbootsnap libbootsnaploadpathcachecoreextkernelrequirerb in require from homesandboxrbenvversions librubygems gemsbootsnap libbootsnaploadpathcachecoreextkernelrequirerb in block in requirewithbootsnaplfi from homesandboxrbenvversions librubygems gemsbootsnap libbootsnaploadpathcacheloadedfeaturesindexrb in register from homesandboxrbenvversions librubygems gemsbootsnap libbootsnaploadpathcachecoreextkernelrequirerb in requirewithbootsnaplfi from homesandboxrbenvversions librubygems gemsbootsnap libbootsnaploadpathcachecoreextkernelrequirerb in require from homesandboxrbenvversions librubygems gemszeitwerk libzeitwerkkernelrb in require from homesandboxrbenvversions librubygems gemsspring libspringapplicationrb in activerecordconfigured from homesandboxrbenvversions librubygems gemsspring libspringapplicationrb in disconnectdatabase from homesandboxrbenvversions librubygems gemsspring libspringapplicationrb in preload from homesandboxrbenvversions librubygems gemsspring libspringapplicationrb in serve from homesandboxrbenvversions librubygems gemsspring libspringapplicationrb in block in run from homesandboxrbenvversions librubygems gemsspring libspringapplicationrb in loop from homesandboxrbenvversions librubygems gemsspring libspringapplicationrb in run from homesandboxrbenvversions librubygems gemsspring libspringapplicationbootrb in top required from homesandboxrbenvversions libruby rubygemscoreextkernelrequirerb in require from homesandboxrbenvversions libruby rubygemscoreextkernelrequirerb in require from e in main Outofthe box spring needs custom configuration of the SPRINGAPPLICATIONID env var to support dualbooting different Gemfiles This is because the generated applicationid only takes into account the RUBYVERSION and the projectroot path Would it be a welcome PR to change the current applicationid generation to use the Gemfile lockfile path instead of the projectroot path This would allow Spring to support multiple gemfiles without custom config as it will start a spring server for each Gemfile diff def applicationid ENV SPRINGAPPLICATIONID DigestMD hexdigestRUBYVERSION projectroottos ENV SPRINGAPPLICATIONID DigestMD hexdigestRUBYVERSION Bundlerdefaultlockfiletos end For developers wanting to support this today you can set SPRINGAPPLICATIONID in binspring by adding the lines shown below File binspring diff usrbinenv ruby This file loads Spring without using Bundler in order to be fast It gets overwritten when you run the spring binstub command unless definedSpring require rubygems require bundler The default applicationid generated by SpringEnvapplicationid does not support booting with different Gemfiles The default value is DigestMD hexdigestRUBYVERSION projectroottos Here we set the SPRINGAPPLICATIONID env var to customize the applicationid so it takes the current gemfile into account to support booting with different Gemfiles def configurespringformultiplegemfiles require digestmd ENV SPRINGAPPLICATIONID DigestMD hexdigestRUBYVERSION Bundlerdefaultlockfiletos end configurespringformultiplegemfiles lockfile BundlerLockfileParsernewBundlerdefaultlockfileread spring lockfilespecsdetect spec specname spring if spring Gemusepaths Gemdir Bundlerbundlepathtos Gempath gem spring springversion require springbinstub end end To check this is working perform the following steps Kill all current spring servers Running binspring stop and pkill spring should do it Run a rails console using the default Gemfile binrails c Check the Railsversion is as expected for Gemfile Run another rails console using a nondefault Gemfile BUNDLEGEMFILEGemfilenext binrails c Check the Railsversion is as expected for Gemfile Run binspring status This should show a spring development env running Note the process ids Run BUNDLEGEMFILEGemfilenext binspring status This should show another spring development env running but the process ids should be different to those noted in the previous step To ensure the above config isnt accidentally deleted from binspring say when the binstub is regenerated in configspringrb add the following rb Springafterfork do require digestmd expectedspringapplicationid DigestMD hexdigestRUBYVERSION Bundlerdefaultlockfiletos if ENV SPRINGAPPLICATIONID expectedspringapplicationid raise Spring is misconfigured Check binspring defines and calls configurespringformultiplegemfiles end end I have a Rails app and when using zeitwerk autoloader mode it looks like Spring is adding all the rbfiles to the watch list So every change in any file triggers full spring restart In classic mode there is no such issue I just add configautoloader classic to applicationrb and it stops restarting spring server on every change Here are the logs in zeitwerk mode started on varfoldersqkrfns ml b r z l dch gnTspring e e c d acfcd d d server accepted client server running command rspec applicationmanagertest child not running starting client sending command applicationtest initialized running applicationtest got client applicationtest preloading app watchertest watcher add here goes the list of all rbfiles in the project I wonder why is it adding all that files Spring on OpenBSD which might be the cause of us seeing the race condition due to its slowness ruby vendorbundleruby gemsspring libspringclientrunrb in initialize Connection refused connect for varrunspring b e a dc cc a ec c d e f ErrnoECONNREFUSED from vendorbundleruby gemsspring libspringclientrunrb in open from vendorbundleruby gemsspring libspringclientrunrb in connect from vendorbundleruby gemsspring libspringclientrunrb in coldrun from vendorbundleruby gemsspring libspringclientrunrb in rescue in call from vendorbundleruby gemsspring libspringclientrunrb in call from vendorbundleruby gemsspring libspringclientcommandrb in call from vendorbundleruby gemsspring libspringclientrailsrb in call from vendorbundleruby gemsspring libspringclientcommandrb in call from vendorbundleruby gemsspring libspringclientrb in run from vendorbundleruby gemsspring binspring in top required from vendorbundleruby binspring in load from vendorbundleruby binspring in main There seems to be some race condition that the socket file already exists but does not answer yet ruby def coldrun bootserver connect error occurs here server should already be booted run end I would guess that something like this in would help ruby until envsocketpathexist socketready with a suitable implementation of socketready eg ruby def socketready begin socket UNIXSocketopenenvsocketname rescue ErrnoECONNRESET ErrnoECONNREFUSED return false ensure socket socketclose end true end Related it might be helpful in cases like this ie hard to reproduce to be able to always log the output of the spring server not only when started manually Eg something like ruby pid Processspawngemenv envservercommand out envlogname Do you want a pull request for one or both of these issues WARNING V isolate was forked it can not be disposed and memory will not be reclaimed till the Ruby process exits Traceback most recent call last from binrails in main from binrails in load from Usersplentzsrcgithubcomxxxxxxbinspring in top required from optrubies librubysiteruby rubygemscoreextkernelrequirerb in require from optrubies librubysiteruby rubygemscoreextkernelrequirerb in require from Usersplentzgemruby gemsspring libspringbinstubrb in top required from Usersplentzgemruby gemsspring libspringbinstubrb in load from Usersplentzgemruby gemsspring binspring in top required from Usersplentzgemruby gemsspring libspringclientrb in run from Usersplentzgemruby gemsspring libspringclientcommandrb in call from Usersplentzgemruby gemsspring libspringclientrailsrb in call from Usersplentzgemruby gemsspring libspringclientcommandrb in call from Usersplentzgemruby gemsspring libspringclientrunrb in call from Usersplentzgemruby gemsspring libspringclientrunrb in warmrun from Usersplentzgemruby gemsspring libspringclientrunrb in run Usersplentzgemruby gemsspring libspringclientrunrb in verifyserverversion undefined method chomp for nilNilClass NoMethodError 