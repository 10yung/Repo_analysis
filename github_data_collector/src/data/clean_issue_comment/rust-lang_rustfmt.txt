I structured the changes into several smaller commits that were focused on a specific changerelated set of changes in the upstream rustc crates and included details about the upstream change in the commit messages hope this makes it somewhat easier to review I decided to focus on getting rustfmt to just work with the latest rustc crate versions and defer making certain other changes like refactoring supporting the new half open range syntax etc to future PRs My thinking is defering those other changes will hopefully make this easier to merge since theres already a decent sized diff just from upgrading the rustcap versions and I suspect this PR has a higher potential than normal for merge conflicts Using this version of rustfmt cargo nightly fmt V rustfmt nightly and starting with this file foobar const foo u I find that rustfmt keeps adding asterisks to the end of the comment If I keep rerunning rustfmt I get more asterisks cat srcdummyrs foobar const foo u cargo nightly fmt srcdummyrs cat srcdummyrs foobar const foo u cargo nightly fmt srcdummyrs cat srcdummyrs foobar const foo u cargo nightly fmt srcdummyrs cat srcdummyrs foobar const foo u cargo nightly fmt srcdummyrs cat srcdummyrs foobar const foo u cargo nightly fmt srcdummyrs cat srcdummyrs foobar const foo u cargo nightly fmt srcdummyrs cat srcdummyrs foobar const foo u fix Two issues I found while messing with this first rust fn main printlnHello World I think rustfmt deletes comments between two semicolons if you run rustfmt these lines will disappear delete me See playground And rustfmt panics if you have a blockcomment inside two semicolons like rust fn main rustfmt panics See playground After we disabled the recursive formatting by default selftests is only targetting srclibrs We need to modify the test so that the recursive value of the Config is set to true Parse the rhs as statement Do not format unsafe block on the statement position in a single line Close Im not sure this is a bug or intended behavior So if it is intended please feel free to close this Environment rustfmt rustfmt nightly OS macOS Repro Please prepare following code rust struct X foo bar and run rustfmt here Im using nightly rustup run nightly rustfmt blahrs Expected behavior rustfmt changes nothing Actual behavior rustfmt changes code as follows rust struct X foo bar Looks like theres going to be some changes in the rustc parser that will involve the removal of parts of the parser interface that rustfmt uses today defaultsubmodpath and Id guess submodpathfromattr too Note that methods like defaultsubmodpath are going to be removed from the parser when we fix so making those public will likely be shortlived cc petrochenkov Not sure what the changes will entail but opening this to help keep track of the pending upstream changes in the parser Places in rustfmt thatll probably be impacted by those upstream changes Unsure if this is intentional but I assume it isnt rustfmt removes newlines in comments between chain calls I can get behind removing newlines between line comments but removing them in block comments I find odd Original Code Minimal example to reproduce issue rust let x Foo Bar mapi i Foo Bar mapi i Foo Bar collectVec Formatted Code rust let x Foo Bar mapi i Foo Bar mapi i Foo Bar collectVec rustfmt stable e 