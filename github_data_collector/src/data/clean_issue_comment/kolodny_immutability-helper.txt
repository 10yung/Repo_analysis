ts interface UpdateArray updateArrayById string export function myUpdateTobject T spec SpecT CustomCommandsUpdateArray Type instantiation is excessively deep and possibly infinite ts return updateobject spec updateacc time set value data This is the update call from a MWE that inexplicably returns objects with key undefined rather than value In fact the first few calls work as expected but then it starts setting undefined and by the end of my reduce all the keys are undefined as shown in the first image delete array index leaves a gap in the array Using arrayspliceindex would be better Its a nice utility the readme should give a description of it and provide an example Some operations working with MapSet doesnt work in IE Just Increase the judgment of instanceof in indexts can fix it maybe Seems imutabilityhelper far away from Immutablejs when mutating Are there any benchmarks or comparing imutabilityhelper with alternatives seemlessimmutable timm etc For lists of checkboxes like this I like to store the IDs of the checked elements in a Set To toggle a checkbox right now I have to do this js checkOccasion id ev const spec enabled evtargetchecked add remove id thisupdateStatespec jsx CheckboxLabel valueoccid checkedenabledhasoccid onChangethischeckOccasionoccidoccnameCheckboxLabel Would be nicer if instead I could just do js const spec enabled toggle id ie enabled is a Set so if id is already contained in the set it would be removed otherwise it would be added Actually alternatively toggle could accept an object too which would explicitly let you add or remove specific elements js const spec enabled toggle id evtargetchecked Thatd let us skip the has check too 