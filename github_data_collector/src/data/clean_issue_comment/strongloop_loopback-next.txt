 STOP STOP STOP HELP US HELP YOU PLEASE Do a quick search to avoid duplicate issues Provide as much information as possible reproduction sandbox use case for features etc Consider using a more suitable venue for questions such as Stack Overflow Gitter etc Please fill in the entire template below Steps to reproduce Go to Observe the mixedcontent error Current Behavior A mixedcontent error occurs Expected Behavior The default Swagger JSON URL should be using HTTPS as per Swagger API Validator Link to reproduction sandbox NA Additional information The external LoopBack API Validator is referenced under the Configure the API Explorer docs Related Issues NA See Reporting Issues for more tips on writing good issues This PR contains the following updates Package Type Update Change hapishot dependencies major Release Notes details summaryhapijsshotsummary v Compare Source details Renovate configuration date Schedule At any time no schedule defined verticaltrafficlight Automerge Disabled by config Please merge this manually once you are satisfied recycle Rebasing Whenever PR becomes conflicted or if you modify the PR title to begin with rebase nobell Ignore Close this PR and you wont be reminded about this update again rebasecheck If you want to rebaseretry this PR check this box This PR has been generated by WhiteSource Renovate View repository job log here Suggestion Currently LoopBack lb only supports exploded and JSONencoded deepObject query strings However this means that a typical HTML form or existing software cannot directly interact with the API without modifications to how it constructs the URL Hence lb should support ampersanddelimited exploded form query strings as it is a more commonlyused encoding Whilst this encoding prevents nested objects its simplicity can allow for easier adoption of lb Use Cases Easier adoption of lb More transparent replacement of existing API infrastructures with lb Simpler API clientconsumer design Easier adoption of lb for new users Examples As per OpenAPI Style Values an API client and server can use a more commonlyused query string format for HTML forms and other software For example a pizza ordering form using the form HTML tag with the following fields Type select Toppings radio multiple reCaptcha session string This can result in the following query string typecheesy toppingspepperoni toppingspineapple recaptcha removed for brevity Acceptance criteria TBD will be filled by the team This PR contains the following updates Package Type Update Change microsoftapidocumenter source dependencies patch microsoftapiextractor source dependencies patch Renovate configuration date Schedule At any time no schedule defined verticaltrafficlight Automerge Disabled by config Please merge this manually once you are satisfied recycle Rebasing Whenever PR becomes conflicted or if you modify the PR title to begin with rebase ghost Immortal This PR will be recreated if closed unmerged Get config help if thats undesired rebasecheck If you want to rebaseretry this PR check this box This PR has been generated by WhiteSource Renovate View repository job log here Currently if a user of LoopBack lb wants to find documentation of the usable filters for querying the repository they will need to view LoopBack s lb documentation This may not be ideal as the page isnt easily accessible via the lb sidebar Suggestion Create a Querying Data or Filters page for lb replacing content and links to point to the lb docs where appropriate Use Cases Reduce jump between documentations Assurance that this documentation also applies lb Easier for new users to start using lb Examples TBD It could closely follow the existing lb docs Acceptance criteria TBD will be filled by the team Suggestion This is more of a discussion than a direct suggestion I want to talk about the possibility of an enhancement of the injection system that makes it easier to allow a new child context to be created specific to a particular injection point using a callback to modify the injectionspecific context Use Cases The primary use case for this is to override andor extend configurations for the services that the injecting service would consume For example if service A consumes service B and B consumes service C and service C can be configured by service Cconfig then A should be able to bind a new Cconfig that will only apply within the context of As injection of B and thus Bs injection of C and at nowhere else in the service stack So the version of C that exists within As injection of B would get this new config but no other version of C would NOTE This would imply that services A B and C all need to be bound in the CONTEXT scope It would also be possible to swap out services with dummy versions of those services in order to disable them For example if C above were a security check function which returns a boolean to indicate access rights C itself could be rebound within As injection of B to a function that always returns true thus effectively bypassing any security checks performed by B in this localized context Its actually technically possible to do what Im describing already using the resolve parameter of the inject decorator This proposal is more about cleaning up standardizing and documenting the technique somehow Its also possible that what Im describing is already covered in documentation somewhere and I just missed it if so please feel free to redirect this thread there and close the thread Examples Here is how it might be done if we were to limit the new API to only using it for simple configuration overrides typescript class A constructor injectWithConfigKEYB KEYC disableSecurityChecks true private b B This would be equivalent to the currentlypossible code below typescript class A constructor inject undefined async ctx const childCtx new Contextctx childCtxconfigureKEYCto disableSecurityChecks true return await childCtxgetKEYB private b B Acceptance criteria TBD will be filled by the team Spinoff from Add ContextEventListener interface Tidy up parent context event handling Set maxListeners to Infinity by default Checklist Read and sign the CLA Contributor License Agreement x npm test passes on your machine x New tests added or existing tests modified to cover all changes x Code conforms with the style guide x API Documentation in code was updated Documentation in docssite treemasterdocssite was updated Affected artifact templates in packagescli were updated Affected example projects in examples were updated Check out how to submit a PR STOP STOP STOP HELP US HELP YOU PLEASE Do a quick search to avoid duplicate issues Provide as much information as possible reproduction sandbox use case for features etc Consider using a more suitable venue for questions such as Stack Overflow Gitter etc Please fill in the entire template below In there are different examples of interceptors To understand the example implementations of these interceptors lets also show an example implementation of what they are intercepting For example A binding provider class to produce an interceptor that validates the name argument class NameValidator implements ProviderInterceptor constructorinjectvalidnames private validNames string value return thisinterceptbindthis async interceptT invocationCtx InvocationContext next ValueOrPromiseT const name invocationCtxargs if thisvalidNamesincludesname throw new Error Name name is not on the list of thisvalidNames return next It is not clear what this interceptor is attached to Is it a function a class a request How do we know that the name we need to validate is in args of the invocation context Providing more implementation details would shed some light on how to use them Copypaste the output of these two commands node e consolelogprocessplatform processarch processversionsnode npm ls prod depth grep loopback Did you find other bugs that looked similar See Reporting Issues for more tips on writing good issues STOP STOP STOP HELP US HELP YOU PLEASE Do a quick search to avoid duplicate issues Provide as much information as possible reproduction sandbox use case for features etc Consider using a more suitable venue for questions such as Stack Overflow Gitter etc Please fill in the entire template below Steps to reproduce Go to CONTRIBUTINGmd Click the CLA link Current Behavior The CLA link points to an nonexistent web page Expected Behavior The CLA link should points to a valid web page Link to reproduction sandbox See NA Additional information Copypaste the output of these two commands node e consolelogprocessplatform processarch processversionsnode npm ls prod depth grep loopback NA Related Issues strongloopcommunityloopbackconnectorredisissues See Reporting Issues for more tips on writing good issues See also This PR adds documentation on the common limitations of inclusionResolver and its related issuesPRs This is to reduce the difficulty of finding information on these kinds of limitations of which some may assume are standard features of LoopBack Signedoffby Rifa Achrinza achrinzausersnoreplygithubcom Please provide a highlevel description of the changes made by your pull request Include references to all related GitHub issues and other pull requests for example Fixes Implements See also Checklist Read and sign the CLA Contributor License Agreement x npm test passes on your machine x Documentation in docssite treemasterdocssite was updated Check out how to submit a PR 