Want to know how to implement language translation on this frameworkDynamic language function setoption in mainc civetweb version code snippet is as follows bash Not an option of mainc so check if it is a CivetWeb server option type MGCONFIGTYPEUNKNOWN for i defaultoptions i name NULL i if strcmpdefaultoptions i name name type defaultoptions i type I think that if name is found in defaultoption need to add break to exit loop I am not sure how to construct the unit test for it to make it independent of the testing machine I think Id either need to mock the getaddrinfo response have some control of etchosts or equivalent on WIN or something completely different Id appreciate any advice in this regard I believe the commit breaks hostname resolution The last branch of the parseportstring function around seems to be incorrect In the current state a hostname string without the port part is created the hostname variable but never used the original vecptr is used instead This causes the whole string including the port part to be passed to mginetpton resulting in getaddrinfo not being able to resolve the address correctly IPv and IPv branches are both affected Possible solution is to just use the already prepared hostname variable We do not have a clear definition what should happen when a handler request handler websocket handler is unregistered Some connection some thread could still execute a handler while another thread unregister this handler function This could be a long lasting connection long pull websocket lengthy script or a short one There have been several fixesmodification in one direction or the other in the recent years But there are still open issues partially asking to go in a different direction as previous fixes Currently open issues Fixes should only be done once there is an agreement on what is the desired behavior eg block execution of handler registrationunregistration add handler functions until all handlers are left do not block add handler functions Mark handler as to be removed but keep all current connections open and eventually unregister the handler some time later without giving any feedback when the last connection has left the handler function stop execution of handler functions to check is this even technically possible do something completely different including a big API change eg asynchronously inform on handler removal Note This does not only affect removing a handler registration completely but also replacing a registered handler changing the handler function user parameter I use mgsetrequesthandler to hook the specified URI to my handler for example curl and curl If I use in my url it looks like curl will remove from request url If I use e it will send to civetweb directly and the connrequesturi will be SECUREAPIneverseentxt For the case my request handler is never be matched The worse is that my URI filter will be bypass using e I see function removedoubledotsanddoubleslashes will try to remove Maybe we should remove too Is it possible to disable tray menu via a config or by adding such flag to the config The project triggers an error when cloning on Windows when using Git or higher filename in tree entry contains backslash Potential offending commit in civetweb Offending commit in Git Git for Windows issue Workaround Disable coreprotectNTFS git config global coreprotectNTFS false Additional details can be found here If an exception it thrown in handlePost or any of the virtual handlers the locking mechanisms will not get unlocked The locks should be handled by something like stdlockguard which will unlock the locks as the stack gets unwound In general exceptions seem to be not handled at all within CivetServer Id be willing to make a PR for this I just want to make sure this isnt a work in progress