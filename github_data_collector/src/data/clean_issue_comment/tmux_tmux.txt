 Issue description I created the following minimal tmuxconf sethook g afterkillpane selectl E Setting a hook like in the minimal tmuxconf should execute select E every time the command killp gets executed with the effect that every open pane has the same size after killing a pane However this hook seems to do nothing Steps to reproduce Create minimal tmuxconf as described above Open tmux Open new pane via splitw Open new split again via splitw selectl E Notice how every pane has the same size Kill bottom pane via killp Notice how the two remaining panes dont have the same size although they should have due to the hook in the tmuxconf Required information tmux a Arch Linux TERM inside tmux color TERM outside st color tmuxclient log tmuxout log tmuxserver log Issue description Currently there seems to be no way to configure the style of the outside area of pane borders using inline styles in the paneborderformat variable This also means there is no way to set the style dynamically based on variables My test tmuxconf set g paneborderstatus bottom set g paneborderstyle set g paneactiveborderstyle set g paneborderformat paneactivebgred fillredbgblue fillblue A screenshot of the result is attached img width altScreen Shot at PM src As you can see the vertical bars are not styled according to the inline style as well as the right and left side of the bottombars Required information Please provide the following information tmux version tmux V tmux a Platform uname sp Darwin i TERM inside and outside of tmux echo TERM inside screen color outside xterm color Logs from tmux tmux killserver tmux vv new no logs Premise tmux is an incredibly flexible tool with commands that can be combined with other commands or embedded in other commands like building blocks to create complex and powerful macros This is awesome but it presents a problem for people just starting out learning tmux Often times the first key sequence a new user learns is how to trigger listkeys so they can look up all the key sequences they havent memorized When looking at key bindings in listkeys when the bound command is simple like selectwindow t its pretty easy to figure out what that key binding does When the bound command is more complicated like commandprompt i I panesearchstring p search up send X searchbackwardincremental it can be much more difficult for a new user not familiar with the intricacies of the tmux command system to figure out Proposal Add an option to the bindkey command to annotate the binding with a string a desription of what the bound command does Add an option to the listkeys command to show key binding descriptions instead of or alongside the bound command maybe for example bindkey h Send mouse wheel up event to pane scroll up if in copy mode T root WheelUpPane ifshell F t mouseanyflag sendkeys M if Ft paneinmode sendkeys M copymode et Thoughts Ask or discuss any quick questions here about a only please Bug reports please open a new issue with full information see CONTRIBUTING a is a patch release of The a CHANGES file is here Note that you need to change to and any foo to foo in tmuxconf bind splitw bind x killpane t top Become bind splitw bind x killpane t top These will work on older tmux versions also Issue description I was testing moving and linking windows in control mode and crashed the tmux server I was able to reproduce a few times I tested at commit f b eacfd d f afcb e ab which is the current head of rc Let me know if I should be trying on master or instead The steps to reproduce are to create a few sessions and send commands like movewindow s t in quick succession to move and link windows between sessions I was able to cause it to crash while logging FWIW it was much easier to reproduce when not producing a log tmuxserver log I was able to get a core dump thread stop reason signal SIGSTOP frame x a tmuxcontrolnotifysessionwindowchangeds x e f at controlnotifyc opt frame x ed tmuxnotifycallbackitem x a data x a at notifyc opt frame x ec tmuxcmdqnext inlined cmdqfirecallbackitemunavailable at cmdqueuec opt frame x eaf tmuxcmdqnextcunavailable at cmdqueuec opt frame x tmuxserverloop at serverc opt frame x tmuxproclooptp x c loopcbtmuxserverloop at serverc at procc opt frame x e tmuxserverstartclientunavailable baseunavailable lockfd lockfileprivatetmptmux defaultlock at serverc opt frame x a tmuxclientmain inlined clientconnectbaseunavailable pathprivatetmptmux default at clientc opt frame x f f tmuxclientmainbase x f argc argv x ffeefbff c flagsunavailable at clientc opt frame x f tmuxmainargc argv x ffeefbff c at tmuxc opt frame x fff de d libdylddylibstart frame x fff de d libdylddylibstart lldb f frame x a tmuxcontrolnotifysessionwindowchangeds x e f at controlnotifyc opt continue controlwritec sessionwindowchanged u u sid scurwwindowid lldb p scurw winlink x My tmuxconf contains only commentedout lines setwindowoption g automaticrename off setoption g settitles on Required information Please provide the following information tmux version tmux V tmux rc Platform uname sp Darwin i TERM inside and outside of tmux echo TERM xterm color Logs from tmux tmux killserver tmux vv new See above New option fullsearch to control if copymode will search over the full history Defaults to on when off number of results and highlighting is not shown When dealing with a history of lines theres a small but noticeable lag in the amount of time to jump to the first result and searchagain k histories results in multisecond wait