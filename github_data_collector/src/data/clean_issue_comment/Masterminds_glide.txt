This PR adds error checks for err variables which were assigned but never checked These issues were found using CodeLingo codelingoio url I am trying to install githubcomelasticgoelasticsearch which uses go modules In their gomod file they name their package githubcomelasticgoelasticsearchv note the added v for namespacing However this does not work with glide When I try to get glide to install githubcomelasticgoelasticsearch to vendorgithubcomelasticgoelasticsearchv note the v in the install path with the following in glideyaml yaml package githubcomelasticgoelasticsearchv repo gitgithubcomelasticgoelasticsearch version v This magically is changed to the following in the glidelock yaml name githubcomelasticgoelasticsearch version d acaa faade d b b f a f d e repo gitgithubcomelasticgoelasticsearch subpackages v However I do not want the name to change I want it to stay as githubcomelasticgoelasticsearchv Ie I want the following in my glidelock yaml name githubcomelasticgoelasticsearchv version d acaa faade d b b f a f d e repo gitgithubcomelasticgoelasticsearch Suggestion please allow us to disable the automatic pathtosubpackage behavior Ie maybe the following glideyaml should keep the name field the same in the lock file yaml package githubcomelasticgoelasticsearchv repo gitgithubcomelasticgoelasticsearch version v subpackages or yaml package githubcomelasticgoelasticsearchv repo gitgithubcomelasticgoelasticsearch version v autosubpackageresolution false Hi Im Yevgeny Pats Founder of Fuzzit Continuous fuzzing as a service platform We have a free plan for OSS and I would be happy to contribute a PR if thats interesting The PR will include the following gofuzz fuzzers This is generic step notconnected to fuzzit Continuous Fuzzing of master branch which will generate new corpus and look for new crashes Regression on every PR that will run the fuzzers through all the generated corpus and fixed crashes from previous step This will prevent new or old bugs from crippling into master You can see our basic example fuzzitdevexamplego and you can see an example of in the wild integration googlesyzkaller Let me know if this is something worth working on Cheers Yevgeny Package golangorgxcryptoed was moved to stdlib in go Glide is failing on resolution regardless there is a conditional build tag in the imported library I am importing golangorgxcryptoed but glide import is failing on DEBUG Trying to open golangorgxcryptoed Usersmartinkuncglidecachesrchttpsgolangorgxcryptoed DEBUG Package golangorgxcryptoed imports cryptoed DEBUG Missing cryptoed Trying to resolve m INFO m Fetching cryptoed m WARN mUnable to checkout cryptoed m ERROR mError looking for cryptoed Cannot detect VCS Maybe similar to Hi Gliders First off many thanks for a lovely package manager for Go and making life WAY easier Hats off Kind request for Cygwin curl sh Total Received Xferd Average Speed Time Time Time Current Dload Upload Total Spent Left Speed ARCHamd OScygwinnt Using curl as download tool Getting TAGv GLIDEDISTglidev cygwinnt amd targz Downloading Did not find a release for your system cygwinnt amd Trying to find a release on the github api LATESTRELEASEURL Getting Sorry we dont have a dist for your system cygwinnt amd Glide did not work when a repository have more levels like the error like the message bellow is printed ERROR Error scanning gitlabcomjaswdrprojectrepopackage cannot find package in homejaswdrglidecachesrcgitgitlabcomjaswdrprojectrepogitpackage When updating vendor for flannel repo glide outputs Update failed for Cannot detect VCS It took me a while to figure out what is wrong ramichenflannel ipopt make updateglide go get d u githubcomMastermindsglide glide debug update stripvendor DEBUG No mirrorsyaml file exists INFO Downloading dependencies Please wait DEBUG Locking httpsgolangorgxnet DEBUG Locking httpsgithubcomMicrosoftgowinio DEBUG Locking httpsgolangorgxoauth DEBUG Locking httpsgithubcomjohogodotenv DEBUG Locking httpsk sioapimachinery DEBUG Locking httpsgooglegolangorgapi DEBUG Locking httpsgithubcombronze mangoStrongswanVici DEBUG Locking httpsk sioclientgo DEBUG Locking httpsgithubcomcoreosgosystemd DEBUG Locking httpsgithubcomawsawssdkgo DEBUG Locking https DEBUG Locking httpsgithubcomcoreosetcd DEBUG Locking httpsgithubcomcoreosgoiptables DEBUG Locking httpsgithubcomgorillamux DEBUG Locking httpsgithubcombugerjsonparser DEBUG Setting up the cache directory DEBUG Locking httpsgithubcomcoreospkg DEBUG Locking httpsgithubcomjonboulleclockwork DEBUG Locking httpsgithubcomMicrosofthcsshim DEBUG Locking httpsgithubcomvishvanandanetlink INFO Fetching updates for golangorgxnet INFO Fetching updates for githubcomMicrosoftgowinio DEBUG Locking httpsgithubcomgolangglog INFO Fetching updates for githubcomgolangglog INFO Fetching updates for githubcomvishvanandanetlink INFO Fetching updates for golangorgxoauth INFO Fetching updates for githubcomjohogodotenv INFO Fetching updates for googlegolangorgapi INFO Fetching updates for k sioapimachinery INFO Fetching updates for githubcombronze mangoStrongswanVici INFO Fetching updates for githubcomcoreosgosystemd INFO Fetching updates for k sioclientgo INFO Fetching WARN Unable to checkout ERROR Update failed for Cannot detect VCS DEBUG Unlocking https It turns out to be a pacakge typo in line pacakge githubcomsirupsenlogrus resulting in the error I find this by printing the whole dep object and the version v is the clue ramichenglide master git diff diff git arepoinstallergo brepoinstallergo index be c ef arepoinstallergo brepoinstallergo func ConcurrentUpdatedeps cfgDependency i Installer c cfgConfig error cacheLockkey if err VcsUpdatedep iForce iUpdated err nil msgErrUpdate failed for s s n depName err msgErrUpdate failed for s v s n depName dep err Capture the error while making sure the concurrent operations dont step on each other lockLock WARN Unable to checkout ERROR Update failed for cfgDependencyName Referencev Pin Repository VcsType Subpackages stringnil Arch stringnil Os stringnil Cannot detect VCS Hi I tried using release v and latest with below SQS config var sqsClient sqsNewsessionMustsessionNewSession awsConfig Region awsStringYOURAWSREGION Credentials credentialsNewStaticCredentialsYOURAWSACCESSKEY YOURAWSACCESSSECRET HTTPClient httpClient Timeout timeSecond var visibilityTimeout machineryCfgSQSConfig Client sqsClient VisibilityTimeout visibilityTimeout WaitTimeSeconds The consumer just hang If a task took more than seconds to complete and need to restart the consumer manually The SQS error ERROR sqsgo error when deleting the delivery the delivery is Messages Attributes SentTimestamp Body MD OfBody MessageId ReceiptHandle The solution for now is to increase visibilityTimeout to prevent the consumer from hang This will enable glide mulitarch builds