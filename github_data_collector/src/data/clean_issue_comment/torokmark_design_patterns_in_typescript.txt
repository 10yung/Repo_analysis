 If I want to add ConcreteProductC I have to modify ProductFactory This will break the OpenClosed Principle So I suggest rewriting factorymethod like my pull request We can add any ConcreteProductbut not modify ProductFactory feel free to make suggestion and improvements based on the approach I think prototype pattern is reduce resource consumption Use ObjectcreatePrototypeprototype wouldnt it be better Hi Since nodejavascript does not have the problem that a builder pattern fixes since you can just pass along an object literal why would you want to apply all this overhead If we take a look at the example We could just use an object literal instead javascript userjs const create args const options Objectassign defaultOptions args Normalize the options return name optionsname age optionsage phone optionsphone address optionsaddress moduleexportscreate create testjs const user requireuserjs const myUser usercreate name a name age This achieves the same thing as the builder pattern The main difference here is that userjs is a lot smaller than the builderts example lines vs Passing along an object literal which is very common in node is just as readable as with a builder but with a lot less overhead or boilerplate So my question is why would you do this Hi Torok It is a question and not an issue I wonder if you could describe how to debug step by step each design pattern Maybe generating map files would be usefull Thanks Hi Torok I suggest you structure the design patterns into categories Creational Patterns Structural Patterns Behavioral Patterns Thanks Aim is to implement examples using the design patterns 