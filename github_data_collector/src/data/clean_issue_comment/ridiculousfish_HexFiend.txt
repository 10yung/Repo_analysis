macOS update is not offered img width altimage src mostly notes for my future self From Scripting language runtimes such as Python Ruby and Perl are included in macOS for compatibility with legacy software Future versions of macOS won t include scripting language runtimes by default and might require you to install additional packages If your software depends on scripting languages it s recommended that you bundle the runtime within the app While they dont mention Tcl it might be removed in a future macOS version ARM macOS If thats the case well need to embed the Tcl framework directly into the app This also benefits us by targeting a single version of the languageruntime instead of whatever is builtin to the OS To compile Download source from Unarchive like so tar xvf tcl srctargz Move into the macosx directory cd tcl macosx Configure with configure Build with make embedded Alongside the archive will be buildtclTclframework which we can embed into the app Ive been trying to reverse engineer a binary file format During this process I take a lot of notes on regular paper It would be very helpful to add notes to the colored selections you highlight in HexFiend The text will be shown while hoovering the mouse above the highlight As a reference Ableton has the functionality to add info text ie taking notes to much of your work This is a form of GUI tooltip but better by having a text box you will not be annoyed by pop up text the text will be shown immediately when hoovering above a highlight and you can create notes with line shifts BTW thanks for this amazing software One of the most frequent use cases I have for a hex editor is to find opcodes that Ive identified in a debugger I then paste them into YARA rules For readability in YARA its good practice to add spaces between bytes like so a DB B Can an optional feature be added to the preferences that adds spaces between bytes when copying to the clipboard I know this small snippet is easy to add spaces to but for longer opcodes having spaces added automagically would be a time saver Binary template view scroll dnt worked on diff window When performing a diffcompare you can only control which ui elements are shown for the right pane For example if you use the Views menu to turn off line numbers turn on the plain text view turn on templates turn on columns etc These options all only apply to the right hand pane the left hand pane ignores them Seems to me the solutuon would be to have the settings apply to both sides though I guess an alternative would be to have a duplicate sets of controls in a submenu for the left pane Relatedly itd be nice if these ui settings were remembered for the diffcompare view I think this is a feature request but if theres already a way to do this please let me know Experimenting with a binary file format im trying to reverseengineer i find myself frequently wanting to fill a region of the file with a certain byte similar to how one might use memset in C The structures in the file are fixed in size so just deleting the region wouldnt be helpful Usually i want to fill with x or xff I think the most intuitive way to do this in my particular case and its what i immediately tried would be to select a region of the file rightclick it and then have like a Fill submenu with x xff and maybe Other Im probably getting way too far into the weeds but it occurs to me that datamanipulation functions like this could be implemented by the user if HexFiend supported scripting Other examples of tasks you might script ones that ive been doing with this file format include updating check sums and repeating a decrementincrementreplace every x bytes Is extending the Tcl integration used for templates into areas like this something thats been considered before A few suggestions to improve the templates when I select some data in the hex or text view it would be great if the corresponding values in the template were highlighted and scrolled to be visible it would be great to allow selecting multiple values at least contiguous even better also discontiguous in the template and highlight the corresponding bytes in the other views also copy values would copy the values of all selected values And finally add a copy labels and value would copy structured text with indented sections maybe you could add builtin support for posix dates although we can use clock entry posix date clock format uint format dmY HMS but this does not use the systems date format and when I select the value in the template the corresponding bytes are not highlighted in the other views instead of a timeout show a progress dialog even if it is indeterminate with a stop button when evaluating the template is slow And if possible use the partial result of the template if its execution has been stopped Theres no way to deal with anything thats not byte aligned with binary templates unless Im missing something It would be useful for reading files that contain bitstreams and also raw devices