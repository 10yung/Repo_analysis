Opening this PR to see if youre open to me removing more global references inside of Fabrication I have a weird use case where I need to use Fabrication both for testingdevelopment in rails but I also need a completely separate object generator in production that will live in appfactories Im hoping to isolate all of the globalsingleton state into one class that lives outside of the Manager for the normal testdevelopment use case First a bit of context I have a fabricator for an ActiveRecord model that is backed by a materialized view which has both an id column and pk column my custom primary key column I run into the issue where setting the pk or id results in both fields being set to the same string value so my id column ends up with a string value when it should be an integer Column Type Collation Nullable Default Storage Stats target Description pk text extended id integer plain Ultimately I want to be able to test I get the right data back when I perform a sql join on id column of the materialized view I have a fabricator defined as so ruby Fabricatorrecord do Study Allocation studyid sequencestudyid Violations isviolation true false sample violations attrs attrs isviolation Fabricatebuildtimes violation Demographics demodateofbirth rand yearsago rand days demoweight rand randround demoheight rand tof end The issue Im facing is when I use Fabricateattributesforrecord Currently the following output results ruby studyid isviolation true violations Violation id nil violationtypeid nil recordid nil comment nil createdat nil updatedat nil Violation id nil violationtypeid nil recordid nil comment nil createdat nil updatedat nil demodateofbirth Mon Mar UTC demoweight demoheight Whereas I was hoping for output that I could feed into a controllers parameters and would thus be more like ruby studyid isviolation true violationsattributes violationtypeid comment Lorem ipsum demodateofbirth Mon Mar UTC demoweight demoheight 