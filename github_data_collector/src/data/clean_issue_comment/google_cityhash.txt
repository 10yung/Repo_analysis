Envs win anaconda python pip install cityhash Error cl error D Wnounusedvalue error command C Program Files x Microsoft Visual Studio BuildTools VC Tools MSVC bin HostX x clexe failed with exit status Failed building wheel for cityhash Add shebang Assigning an array to a string Assign as array or use instead of to concatenate I really appreciated the fact that a version of cityhash can provide bit output eg when using CityHashCrc However to get that going I had to build with configure enablesse and make all check CXXFLAGSg O msse as per instructions As far as my understanding goes however SSE is not supported on a Raspberry Pi So I was wondering how can I get a bit output on that platform Are there workarounds that dont use hardwareaccelerated CRC Converted README to Github Flavoured Markdown MSVC emitted a handful of truncation errors about implicitly converting from a sizet length argument to a uint or long These all look intentional or benign This commit adds casts to silence the warnings The errors addressed are external citycc error C warning treated as error no object file generated external citycc warning C initializing conversion from sizet to uint possible loss of data external citycc warning C argument conversion from sizet to uint possible loss of data external citycc warning C initializing conversion from sizet to uint possible loss of data external citycc warning C initializing conversion from sizet to uint possible loss of data external citycc warning C initializing conversion from sizet to uint possible loss of data external citycc warning C initializing conversion from sizet to long possible loss of data A comment in cityh says By the way for some hash functions given strings a and b the hash of ab is easily derived from the hashes of a and b This property doesnt hold for any hash functions in this file But I didnt find how it can be done It would be nice to have this feature For example it can be used to hash a data stream that becomes available one block at a time but the block sizes are arbitrary and we need both the hash of each block and the hash of the whole stream invariant of block sizes Original issue reported on codegooglecom by mkalgmailcom on Mar at Given the exact same input twice the hash function should always produce the same output I cannt understand why cityhash and cityhash function produce the different output when giving the exact same input string twice Original issue reported on codegooglecom by www me com on Aug at Please provide any additional information below Any chance of an extern C interface in header files compatible with C programs C programs dont like typedef stdpairuint uint uint unfortunately Original issue reported on codegooglecom by fullunggmailcom on Feb at this may help Original issue reported on codegooglecom by yafeizhlangtaojincom on Aug at 