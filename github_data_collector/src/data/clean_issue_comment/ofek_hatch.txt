At the moment help for hatch release says s strict Aborts if a distribution already exists I expected it to exit with nonzero code if the package already existed However behaviour seems to be the opposite of what I expect hatch release Uploading distributions to Skipping cachew py py noneanywhl because it appears to already exist exit code hatch release strict Uploading cachew py py noneanywhl exit code So instead of aborting strict have forced uploading It seems that the option simply forwards to skipexisting of twine upload which means skipexisting Continue uploading files if one already exists Should the strict flag do exactly the opposite Also abort normally implies nonzero exit code I think is hatch meant to implement this logic Happy to open a PR fix it just not sure what was the original intent Thanks After upgrading python via Homebrew on Mac OSX I get the following error when trying to list virtualenvs with hatch env l dyld Library not loaded executablepathPython Referenced from Userskylevirtualenvsnanowirebinpython Reason image not found Traceback most recent call last File Userskylelocalbinhatch line in module sysexithatch File Userskylelocalpipxvenvshatchlibpython sitepackagesclickcorepy line in call return selfmainargs kwargs File Userskylelocalpipxvenvshatchlibpython sitepackagesclickcorepy line in main rv selfinvokectx File Userskylelocalpipxvenvshatchlibpython sitepackagesclickcorepy line in invoke subctx cmdmakecontextcmdname args parentctx File Userskylelocalpipxvenvshatchlibpython sitepackagesclickcorepy line in makecontext selfparseargsctx args File Userskylelocalpipxvenvshatchlibpython sitepackagesclickcorepy line in parseargs value args paramhandleparseresultctx opts args File Userskylelocalpipxvenvshatchlibpython sitepackagesclickcorepy line in handleparseresult selfcallback ctx self value File Userskylelocalpipxvenvshatchlibpython sitepackagesclickcorepy line in invokeparamcallback return callbackctx param value File Userskylelocalpipxvenvshatchlibpython sitepackageshatchcommandsenvpy line in listenvs echoinfo Version formatgetpythonversion File Userskylelocalpipxvenvshatchlibpython sitepackageshatchenvpy line in getpythonversion shellNEEDSUBPROCESSSHELL File usrlocalCellarpython FrameworksPythonframeworkVersions libpython subprocesspy line in checkoutput kwargsstdout File usrlocalCellarpython FrameworksPythonframeworkVersions libpython subprocesspy line in run outputstdout stderrstderr subprocessCalledProcessError Command python c import sysprintjoinstri for i in sysversioninfo died with SignalsSIGABRT This is because the symlinks are all broken and are pointing to a Python version that no longer exists because Homebrew has pulled the rug out from under us I would recommend adding a hatch fix command or something to that affect that scans through all the virtualenvs locates all the broken symlinks and relinks to the latest appropriate version x or x depending on the virtualenv of python Hello devs I was wondering if you would be interested in support for readme files in orgmode I have half an implementation badges do not work but are not crucial for my workflow right now If you are interested I can wrap it up and prepare a PR soon is the new tox Does Hatch support the src layout or any other custom name Because a lot of major Python projects have switched to the src layout now Flask Sentry Pillow Pip Werkzeug GEvent PyTest Marshmallow Twisted Pyramid Cryptography And a few major Python projects have adopted a nonconventional lib layout Ansible SQLAlchemy Is it possible to change the location of the config file shell hatch config Settings location UsersmbaechtoldLibraryApplication Supporthatchsettingsjson When running hatch new cli mypackage the default entrypoint can conflict with import mypackage consolescripts pn pnnclipnn Any thoughts on changing this to consolescripts pn pnnclicli so main calls cli instead of mypackage If so I can generate a PR and make the default version of clipy a little more clickish Feature request Notes for potential PR Im thinking about automating the process of tagging a release and update git mirrors with something like hatch tag to basically run the following console git tag s git push gitlab git push mirror As per SO the following needs to be added to setup for PyPI to correctly render longdescriptioncontenttypetextmarkdown Update This solved my PyPI README markdown rendering issue At some point Ill look at putting together a pull request Description Im open to implementation feedback on this This pull request provides initial CHANGELOG support and currently defaults to markdown as per the spec Im not sure if the initial release should default to packageurlcompareversionHEAD as an editable example or just use packageurl and then update it to the diffs once grow is run Project Initialized could be Project Initialized with hatch or configurable via settingsjson Should there be a setting to write the file out as CHANGELOG without an extension I think there is going to be a merge conflict with packagedata from my other pull requests but Im happy to rebase if needed 