Hello A detailed description of the proposed feature It would be very cool to simplify the updateupgrade procedure actually there is different commands needed to be run periodically brew update brew upgrade brew cask upgrade The motivation for the feature It would be simpler for users to not have to use different commands for the purpose of keeping stuff installed uptodate How the feature would be relevant to at least of Homebrew users Everyone would profit from simpler process I guess What alternatives to the feature have been considered I checked running some of these as CRON jobs but its not really practical because of reading the scripts output Thanks in advance I tried to brew upgrade an oldslow system with lots of outdated packages Maybe Im mistaken but it seemed like once there was a failure everything gets rolled back so theres no way to progress besides fixing all issues first To upgrade at least some packages I ran for p in brew outdated cut f do brew upgrade p done That works however it then retries to build failing packages several times which makes it too slow eg cmake bc of outdated Xcode I could brew pin those packages to speed it up but that requires manual work What Im missing is some best effortignore failures option for upgrade that doesnt retry failed dependencies Maybe also upgrade packages sorted by the number of dependencies to make it more likely to progress These arent interesting enough to show in brew config as they duplicate other data already displayed x Have you followed the guidelines in our Contributing document x Have you checked to ensure there arent other open Pull Requests for the same change x Have you added an explanation of what your changes do and why youd like us to include them Have you written new tests for your changes Heres an example x Have you successfully run brew style with your changes locally x Have you successfully run brew tests with your changes locally cabal sometimes picks old possibly incompatible versions of dependencies stack pulls dependencies from a knowncompatible set of recent packages when possible giving more reliable builds Debian and other distro packagers use it for this reason Cf This commit just adds LanguageHaskellStack as an alternate install method which can be selected by individual packages x Have you followed the guidelines in our Contributing document x Have you checked to ensure there arent other open Pull Requests for the same change x Have you added an explanation of what your changes do and why youd like us to include them Have you written new tests for your changes Heres an example Have you successfully run brew style with your changes locally Have you successfully run brew tests with your changes locally Discussion here and here x Have you followed the guidelines in our Contributing document x Have you checked to ensure there arent other open Pull Requests for the same change x Have you added an explanation of what your changes do and why youd like us to include them Have you written new tests for your changes Heres an example Have you successfully run brew style with your changes locally Have you successfully run brew tests with your changes locally We started using ldflags s w trimpath arguments passed to go build and it would be nice to have them added to new formulae too by brew create go x Have you followed the guidelines in our Contributing document x Have you checked to ensure there arent other open Pull Requests for the same change x Have you added an explanation of what your changes do and why youd like us to include them x Have you written new tests for your changes Heres an example x Have you successfully run brew style with your changes locally x Have you successfully run brew tests with your changes locally Following on from and python is EOL recommend to use system Python x Have you followed the guidelines in our Contributing document x Have you checked to ensure there arent other open Pull Requests for the same change x Have you added an explanation of what your changes do and why youd like us to include them Have you written new tests for your changes Heres an example Have you successfully run brew style with your changes locally Have you successfully run brew tests with your changes locally x are reporting a bug others will be able to reproduce and not asking a question If youre not sure or want to ask a question do so on our Discourse x ran a brew command and reproduced the problem with multiple formulae If its a problem with a single official formula not cask please file this issue at Homebrewhomebrewcore If its a brew cask problem please file this issue at If its a tap eg Homebrewhomebrewphp problem please file this issue at the tap x ran brew update and can still reproduce the problem x ran brew doctor fixed all issues and can still reproduce the problem x ran brew config and brew doctor and included their output with your issue Bug description On Catalina CI nodes brew install verbose buildbottle doxygen succeeds brew test verbose doxygen works brew bottle verbose json doxygen keepold The bottle file produced contains an invalid doxygen binary with many NUL bytes brewCatalina tar xf doxygen catalinabottletargz doxygen bindoxygen brewCatalina xxd usrlocalCellardoxygen bindoxygen head n cffa edfe f f a HPAGEZE f RO brewCatalina xxd doxygen bindoxygen head n If I then reinstall from the bottle brew test will fail as it cannot execute that binary Note that brew test passes after the initial install not installed from the bottle A detailed description of the proposed feature When upgrading a bottle first download the new version then remove the old one and finally install the new The motivation for the feature When upgrading things the thing being upgraded will be unavailable for some time since its first removed and then the download starts I regularly run brew upgrade and keep working since it takes some time and often what Im using eg go becomes unavailable during the process This can also lead to a broken environment if the user looses internet connection during the download How the feature would be relevant to at least of Homebrew users Probably the more common use case is being able to use the software being upgraded while its being upgraded It is also how other macOS apps works the updater downloads the new version while youre using the currently installed one So I think the relevance is in working as most users would expect or maybe its just me What alternatives to the feature have been considered If you keep the machine up all the time maybe a cron job to do it at AM or something not many ideas though Thanks for Homebrew BTW saved me TONS of time of the years 