Id like to set preztoloadpmoduledirs however module is prepended to the zstyle command Example If have the following in zshrc zgen prezto load pmoduledirs HOMEzpreztomodules The following is generated in zgeninitzsh zstyle preztomoduleload pmoduledirs Userstekumarazpreztomodules I would like zgen to generate this zstyle preztoload pmoduledirs Userstekumarazpreztomodules Personal forks will remain the old default ohmyzsh instead of the new dashless ohmyzsh if ZGENOHMYZSHREPO is set to just a user Using a fully qualified omz repo name ie userohmyzsh can use the new dashless naming I thought that Ill implement some of the paragraphs of the plugin standard The PR implements paragraph and Provide the ZERO parameter a sister parameter to the Provide the zshloadedplugins array The details are on the link The PR doesnt cover Prezto modules however they dont rely on ZERO and zshloadedplugins parameters The standard has some adoption now eg GitHub search Most of the plugins are mine however ca are other authors Example initzsh generated zsh Generated by zgen This file will be overwritten the next time you run zgen save ZSHrootzgenrobbyrussellohmyzshmaster General modules typeset ga zshloadedplugins zdharmazconvey zshloadedplugins zdharmazconvey ZEROrootzgenzdharmazconveymasterzconveypluginzsh source rootzgenzdharmazconveymasterzconveypluginzsh fastsyntaxhighlighting zshloadedplugins fastsyntaxhighlighting ZEROrootmypluginsfastsyntaxhighlightingfastsyntaxhighlightingpluginzsh source rootmypluginsfastsyntaxhighlightingfastsyntaxhighlightingpluginzsh robbyrussellohmyzshohmyzshsh zshloadedplugins robbyrussellohmyzshohmyzshsh ZEROrootzgenrobbyrussellohmyzshmasterohmyzshsh source rootzgenrobbyrussellohmyzshmasterohmyzshsh robbyrussellohmyzshlibgitzsh zshloadedplugins robbyrussellohmyzshlibgitzsh ZEROrootzgenrobbyrussellohmyzshmasterlibgitzsh source rootzgenrobbyrussellohmyzshmasterlibgitzsh robbyrussellohmyzshpluginsgit zshloadedplugins robbyrussellohmyzshpluginsgit ZEROrootzgenrobbyrussellohmyzshmasterpluginsgitgitpluginzsh source rootzgenrobbyrussellohmyzshmasterpluginsgitgitpluginzsh unset ZERO Plugins Completions fpathrootmypluginsfastsyntaxhighlighting rootzgenzdharmazconveymaster rootzgenrobbyrussellohmyzshmasterpluginsgit rootzgenrobbyrussellohmyzshmasterlib fpath Hi tarjoilija Is there a roadmap for zgen and features being developed Or has support for this project been dropped If you cannot maintain this anymore should we move over to zplug Asking because I see no commits in months and no answers in the issues How can I write the follow using zgen zplug mrowa emojify ascommand I want to add the follow binary to the path Im aiming to improve zsh startup time Im using ohmyzsh at the moment and use a lot of plugins from it I saw the guide on using ohmyzsh plugins with this but also saw that I should zgen ohmyzsh before loading plugins wont this incur the whole startup time of ohmyzsh then Basically as the title says I would like to add the ability to run a Makefile in a plugin directory when installing and updating a plugin zgen selfupdate zgen Not running from a git repository cannot automatically update The problem is that zgenselfupdate uses ZGENSOURCE but doesnt have access to that variable because ZGENSOURCE is defined as local line The ZGENPREZTOLOADDEFAULT is pretty nice still it took me a while to figure out that the reason why prezto wasnt coloring output had to do with zgen loading modules by default Prezto looks for dircolors which on macOS is gdircolors prezto warns you about and suggests you use the gnuutility module with the option zstyle preztomodulegnuutility prefix g and load the module before the utility module Even though I did after some debugging I found out utility was still loading before gnuutility The reason zgen adds default modules which include utility and prezto skips utilities that are already loaded Since I imagine most macOS users would like ls coloring and most macOS users dont force brew to replace core utils with GNUs versions for potential system instability problem I think zgens default behavior is problematic here How about we make default modules off by default That would solve this issue entirely I imagine Related to Thanks for an awesome utility I want to disable the annoying ohmyzsh update prompt I also want to use an ohmyzsh theme You can disable the prompt when setting DISABLEAUTOUPDATEtrue Unfortunately that environment variable is as you can see not namespaced to ohmyzsh so Im skittish about enabling it globally lest I disable some other auto updating feature that I do actually want Is there a way to disable it just for ohmyzsh