This is more a question than an issue so feel free to remove this if not appropriate I am using the python library I need to get a node of minimum degree I noticed the GetMxDegNId function that does just the opposite So Im wondering why is there no function that gets a node of minimum degree Is it because it isnt needed In that case is there a smart way to do that Thanks I didnt find any method relates to hop neighbourhood is that not included here Besides it seems that the function isLocalMinint idx double thresh in file snapsnapadvlocalmotifclustercpp line doesnt match the definition in the paper Ive searched for instructions about how to work with undirected weighted networks in the MAPPR community detection algorithm without success Can someone tell me if it is possible to consider the weights in the clustering process and how to do it My net is in an text file with source id target id weight How to generate the Block TwoLevel ErdosRenyi BTER graph node vec is not deterministic ie multiple runs will lead to different embeddings I am working with to very similar but not identical graphs If I compare their embeddings it is not clear which changes are caused by the graphs being different or simply by having done two different runs of embeddings Can this be somehow adressed Would setting the random seed to a fixed value address this If yes can the random seed be set to a fixed value Hi Im having this problem It runs ok with the karate edge list example but not working with my real example This is the log env mwonmwondisk MP Vecsnapexamplesnode vec node vec idisk MP Vecresultsadjretweetscsv odisk MP Vecresultsembnode vec l w v An algorithmic framework for representational learning on graphs Sep Input graph path idisk MP Vecresultsadjretweetscsv Output graph path odisk MP Vecresultsembnode vec Number of dimensions Default is d Length of walk per source Default is l Number of walks per source Default is r Context size for optimization Default is k Number of epochs in SGD Default is e Return hyperparameter Default is p Inout hyperparameter Default is q Verbose output vYES Graph is directed drNO Graph is weighted wYES Output random walks instead of embeddings owNO Read lines from disk MP Vecresultsadjretweetscsv Preprocessing progress Walking Progress Learning Progress terminate called after throwing an instance of TPtTExcept Aborted make C snapcore make Entering directory homejamessoftwaresnapsnapcore g c stdc Wall O DNDEBUG fopenmp Snapcpp Iglibcore In file included from glibcorebasecpp from Snapcpp glibcorebdcpp In function int matherrexception glibcorebdcpp error invalid use of incomplete type struct exception eretval glibcorebdcpp note forward declaration of struct exception int matherrstruct exception e In file included from glibcorebaseh from Snaph from Snapcpp glibcorebdh In instantiation of void TPtTRecUnRef const with TRec TNEANet glibcorebdh required from TPtTRecTPt with TRec TNEANet networkh required from here glibcorebdh warning deleting object of polymorphic class type TNEANet which has nonvirtual destructor might cause undefined behaviour Wdeletenonvirtualdtor if AddrCRefNoRefdelete Addr Makefile recipe for target Snapo failed make Snapo Error make Leaving directory homejamessoftwaresnapsnapcore Makefile recipe for target MakeAll failed make MakeAll Error Could you guys add the license to the repo The website says SNAP is licensed under the BSD license The facility to handle exceptions with matherr has been removed on glibc see This patch disables the usage of this mechanism in the code with the newer versions of glibc