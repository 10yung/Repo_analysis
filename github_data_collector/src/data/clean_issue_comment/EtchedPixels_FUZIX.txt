I am trying to run fuzix on z pack Here is how i created the disk images dd ifbootblockbin ofdriveacpm convnotrunc dd iffuzixbin ofdriveacpm bs seek convnotrunc buildminifilesystem driveicpm and here is the output of cpmsim FUZIX version pre Copyright c by HFBower DBraun SNitschke HPeraza Copyright c by Arcady Schekochikhin Adriano C R da Cunha Copyright c Will Sowerbutts willsowerbuttscom Copyright c Alan Cox alanetchedpixelscouk Devboot kB total RAM kB available to processes processes max Enabling interrupts ok bootdev Mounting root fs rootdev ro OK Starting init init version ac Checking root file system switchin FAIL panic MMU trapbad stack Opcode trap at c ed Am I doing something wrong Im getting some build errors on platformsc looks like its missing LOADFIRST and ROTATE definitions I can try the definitions from platformrc kerneldef but not sure the IO bits are compatible BTW this for trying out FUZIX on an SC which has no LEDs shrug but also no builtin RTC Will this be an issue As far as I can tell ds asm will check for presence of the chip on I C The presence of a tab character seems to confuse vis rendering Steps to reproduce run vi enter insert mode i type a single tab and then start typing a sentence Half the letters are missing It is presumably unaware that a tab is spaces although I dont quite have a mental model that explains why half the letters show up and the other half dont Ive tried to boot zx boot dsk on the real ZX Spectrum e Garry Lancasters ROM v with ZXMMC interface and GB MMC storage installed Unfortunately after a while of reading from floppy it stops with usual Insert tape and press PLAY message I have no problem with booting ZX CPM CPM Plus or my own foreverworkinprogress OS from the same floppy drive Strangely I can boot the same image on Fuse emulator with the same e v ROM installed yet it ends at no card found messages with bootdev prompt note that emulation of ZXMMC although it can be enabled in Fuse it never worked for me I wonder do I need to install some files on the MMC card before I boot disk image Currently I have Workbench e installed and as I found it cool especially with its use of Kempston mouse I want to still have it there in workable state On some platforms map need to know if they must force interrupts off and back on Right now we call the mapsave before we set the intdisabled flag correctly For workarounds are done For we need to bite the bullet verify all the platforms have the intdisabled in the right segments and fix it for both Z and banked Z Non Z related platforms do it differently so should be ok At the moment we have a single scroll routine for full screen scroll For most platforms it is almost no code to support passing a start length pair for the scrolls There are a tiny number of exceptions where we do hardware scroll and for those wed need new paths The same routines also give us insert line scroll down current line to bottom and delete line scroll up current line to bottom That would make a big difference for editors and some other applications a set of fixes for yaz ensure ram is mapped in contiguous banks match config to physical RAM a bit of tidying on the way through A botched inittab respawn line bogs the system down to Is there room in init to squeeze a respawning too fast failsafe Or can we pass a s on inits commandline From inspection it appears we have paths where we update the atime and write it back even though the timestamp has not changed Provide a way to set a file system to noatime set an inode cflags for it and catch it in setftime 