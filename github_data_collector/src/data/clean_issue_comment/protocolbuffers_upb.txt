Make it possible for a user to define a different version of the upb dependencies by wrapping them in maybe Then the upb dependencies will not be added if they previously have been declared Context Hi Im building gRPC in Envoyproxy as an external bazel repository gRPC calls grpcdeps and grpcextradeps in their workspace grpcextradeps includes loading upbdeps However Envoy independently uses zlib and we run into a problem linking against two copies of the library I run in to the error ERROR usrlocalgooglehomeasraacachebazelbazelasraaf f d d dfd cb d d eb dexternalupbbazelworkspacedepsbzl no such target comgoogleprotobufthirdpartyzlibBUILD target thirdpartyzlibBUILD not declared in package however a source file of this name exists Perhaps add exportsfiles thirdpartyzlibBUILD to BUILD defined by usrlocalgooglehomeasraacachebazelbazelasraaf f d d dfd cb d d eb dexternalcomgoogleprotobufBUILD and referenced by externalzlib I believe the problem is similar to Would loading zlib if not existing in upbdeps solve the issue Here is the reproducing code when importing gRPC in to Envoy As it says in the description I cannot see how your CMakeListtxt would be able to install the libraries and headers Maybe your intention is to support this later upb and rulesforeigncc both define bazelversion files and they conflict with each other Im guessing they should be prefixed with the library name eg upbbazelversion The Ubuntu status link in the README for example points to This page is not accessible to nonGooglers In commit fb ad f b e d fbffef a e ea you removed thirdpartyprotobuf submodule But submodule entry still exists in gitmodules file This causes problem on CI when it trying to recursive mirror repositories locally Please remove entry from gitmodules if submodule is not needed anymore or restore submodule if it was removed by mistake Thanks 