Hi Since SuperLearner integrates with caret I tried to search for a possibility to use the resampling method timeslice for time series instead of cross validation However it seems that only CV is possible in SuperLearner and I havent found any ways for changing it SuperLearnercontrol and SuperLearnerCVControl dont seem to have this kind of possibility for example Have I overlooked something If the resampling method cannot be changed are there any plans in the future for implementing timeslice in SuperLearner Thanks The new method set for recombineCVSL was not being passed to the call object which caused the risks to be calculated incorrectly when the new CV SL object was passed to summaryCVSuperLearner The edits to recombineCVSL fixes this Risks were calculated correctly for new SL objects created from recombineSL and the edits to recombineSL only update the call object to reflect the new method used This fixes where SLpredict values were not being sorted correctly when using methodNNloglik with CVSuperLearner The combination of CVSuperLearner with NNloglik method appears to be shuffling the SLpredict values in the output Example below librarySuperLearner setseed training set n p X matrixrnormnp nrow n ncol p colnamesX pasteX p sep X dataframeX Y X sqrtabsX X asnumericX asnumericX asnumericX rnormn build Library and run Super Learner SLlibrary cSLglm SLgam SLglmnet SLlm test CVSuperLearnerY Y X X SLlibrary SLlibrary method methodNNLS cvControl listV n innerCvControl listlistVn summarytest coeftest cortestSLpredict testlibrarypredict cbindtestSLpredict testlibrarypredict plottestSLpredict testlibrarypredict Y asnumericY SLlibrary cSLglm SLrandomForest SLglmnet test CVSuperLearnerY Y X X SLlibrary SLlibrary method methodNNLS family binomial cvControl listV n innerCvControl listlistVn summarytest coeftest cortestSLpredict testlibrarypredict cbindtestSLpredict testlibrarypredict plottestSLpredict testlibrarypredict build Library and run Super Learner Y asnumericY SLlibrary cSLglm SLrandomForest SLglmnet test CVSuperLearnerY Y X X SLlibrary SLlibrary method methodNNloglik family binomial cvControl listV n innerCvControl listlistVn summarytest coeftest cortestSLpredict testlibrarypredict cbindtestSLpredict testlibrarypredict why did rows for the SLpredict get scrambled plottestSLpredict testlibrarypredict try SuperLearner directly test SuperLearnerY Y X X SLlibrary SLlibrary method methodNNLS family binomial cvControl listV n summarytest coeftest cortestSLpredict testlibrarypredict cbindtestSLpredict testlibrarypredict test SuperLearnerY Y X X SLlibrary SLlibrary method methodNNloglik family binomial cvControl listV n summarytest coeftest cortestSLpredict testlibrarypredict cbindtestSLpredict testlibrarypredict Hi I am trying to do a number of analyses with snowSuperLearner and CVSuperLearner CVSuperLearner fails with this error Error in clusterApplycl x splitListX lengthcl fun lapply formal argument x matched by multiple actual arguments Calls systemtime CVSuperLearner parLapply docall clusterApply The offending CVSuperLearner call looks like this systemtimeslcvfit CVSuperLearnerY Y X X SLlibrary SLlibrary verbose TRUE method methodNNLS cvControllistV parallelclcontrol listsaveFitLibrary TRUE cl is a FORK type cluster with nodes The statement within CVSuperLearner that fails appears to be cvList parLapplyparallel x folds fun crossValFun Y Y dataX X family family SLlibrary SLlibrary method method id id obsWeights obsWeights verbose verbose control control cvControl cvControl saveAll saveAll It is being run on bit computer a very large memory capacity The R version is Oh This error occurs as soon as control hist that parLapply call On a different computer with less memory same R version it fails with a cannot allocate G vector error after about hours of computing Can you give me any advice Thanks Ted I hope Im not missing something Is there any work on adding multiclass classification capabilities Maybe we could start something with gbm If X has only one column and SLlibrary includes screening algorithms SL fails and all algorithms are removed from the library even if they do not use screening Im not sure if this is due to particular screening wrapper implementations or if it is an inherent issue for all screening algorithms but it comes up with at least a handful of the built in screening wrappers This example reproduces the error Yrbinom XdataframeXrunif works SuperLearnerY X familybinomial SLlibrarylistSLmean SLglm the following all fail all algorithms removed SuperLearnerY X familybinomial SLlibrarylistSLmean SLglm cSLglm screenSIS SuperLearnerY X familybinomial SLlibrarylistSLmean SLglm cSLglm screencorP SuperLearnerY X familybinomial SLlibrarylistSLmean SLglm cSLglm screenttest I think an easy solution would be to have SL ignore screening algorithms if ncolX 