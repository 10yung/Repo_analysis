In relation to LUCENENET Switching IdentityWeakReference from a class inheriting from the WeakReference class to a struct wrapping the GCHandle directly to avoid garbage collection bottleneck Lots of changes here still a WIP x Updates docs home page with up to date list of packages and links x Updates api docs Toc with up to date list of packages x Ensures that all converted packagemd files for each namespace are included in the docs previously this was not the case Ensures there are correct headerstitles for nonnamespace overviewmd files such as LuceneNet LuceneNetAnalysisCommon etc x Much better handling of namespace detection for packagemd files x One sln file to manage the documentation tools x Updates website docs links to point to new docs URLs with versions ie Get the TestFramework project docs working Add lucene in action books and links in docs site andor on the website too Fix download page Be sure to check out the download page documentation We are supposed to be linking to Apaches mirrors as the repo is not setup for high traffic volume updates code snippet on homepage see Git branch per docs release so the Improve this doc works deal with luceneexperimental tags in places its not working ie conceptual files override files and others Theres more stuff ill add here just need to remember it all Currently the code sample wont compile in LuceneNET its still the java syntax I have updated to and tested this in C Also some formatting had been lost in translation I have corrected the formatting Fixing broken links referring to LuceneNetSearchJoin Namespace is LuceneNetJoin in the other docs Breaking what looks like it was supposed to be bullets into bullets rather than a single bullet Making code sample render as code sample See for background This is an early stage proposal for implementing IEnumerableT on various Enum types To enable foreach and linq style operators This prototype provides EnumEnumeratorT as a helper It can be used in various ways to make the implementation of IEnumerableT more straightforward I have modified IBytesRefIterator and TermsEnum to add IEnumerableBytesRef and therefore to all of its descendants The test such as it is demonstrates retrieving a TermsEnum from a reader Then using foreach and a simple Count linq operator If this approach is acceptable it ought to be adaptable to other Enum types Patch for QueryParser to avoid throwing lots of exceptions as part of main control flow When called very often it slowed down a lot the execution time when the visual studio debugger was attached This patch enhance the performance of the QueryParser under a debugger 