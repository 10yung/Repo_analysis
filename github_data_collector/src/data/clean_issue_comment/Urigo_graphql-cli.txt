Hi there I guess that one aim of a cli is to facilitate adoption of a technology In this case graphQL I see great potential there to onboard people but not in doing everything in one shot For one shot it would be more efficient with a boilerplate you clone dont really understand what you do and its working Here the point is to go step by step and understand what is going on Its almost as fast as cloning a repo But you will in addition understand why and what are you doing Thats why I suggest to keep it simple in the READMEmd npx graphqlclinext init The rest is guided by cli questions At the end of this init process you have then a good skeleton of an app Next step is to follow a few steps in the READMEmd of your new project to have something running To understand each step you need to know what cmd is affecting what file Thats why I suggest having an empty skeleton and generate files after files and really seeunderstand how the app is building itself cmd after cmd Also I suggest to git init after the graphqlcli init to be able to see live your files changing Having this kind of view thx to VSCode What are your thoughts Describe the bug npmrun results in a security vulnerability Can we update this to npmrun The syncexec subdependency is the issue This library syncexec was essentially deprecated and absorbed into npm itself The proposed solution is to replace the library calls with the npm native solution npmrun has removed the vulnerable dependency but with a breaking change It would be good to see where you are using npmrun and see if this can be updated safely Also we need to update lodash to to remove the lodash security vulnerability in lodash To Reproduce run npm audit in any project that uses graphqlcli Expected behavior No security vulnerabilities Screenshots NA Versions please complete the following information graphqlcli Other Context The best mitigation currently is to update to Nodejs v or later and migrate all uses of syncexec to childprocessexecSync I could submit a PR with the updates to the package versions but Im wondering if there is a reason it has not been done yet At the moment npm doesnt link back to graphqlcli without this information at the package level Same is true for the other packages but I think most users will go to npm for graphqlcli graphql command without parameters should print list of commands with descriptions Currently prints long stack trace Is your feature request related to a problem Please describe It would be nice to be able to request and display metadata along with each GraphQL CLI system Items like name and description as well as class could be specified as required attributes in packagejson or similar Describe the solution youd like Gatsby does this very well with Starters and with Plugins Additional context Implementing would likely affect the entire guild ecosystem but also affect the inquiry system in the CLI script and the packaging of the Template projects Describe the bug A path in the logic leaves projectName uncovered To Reproduce foodev peter graphql init Select the best option for you I have an existing project uses GraphQL Do you want to generate the backend code using data model No Where is your schema hemagraphql projectType Frontend only Where are your operation documents Error You must provide a name parameter at ConfirmPromptthrowParamError Userspeterdresslarconfigyarnglobalnodemodulesinquirerlibpromptsbasejs at new Prompt Userspeterdresslarconfigyarnglobalnodemodulesinquirerlibpromptsbasejs at new ConfirmPrompt ulesrxjsinternalInnerSubscriberjs at InnerSubscriberSubscribernext UserspeterdresslarconfigyarnglobalnodemodulesrxjsinternalSubscriberjs Hi everyone Im urigo the founder of The Guild As recently been announced on the Prisma blog we are taking over the maintenance of this library going forward Ive expressed it in the blog post in more details but I would like to start by thanking Prisma for conceiving creating and maintaining this library so far and also for doing the selfless act of providing it with fresh life by handing over the maintenance to us We already have a certain plan in mind going forward some of it weve specified in the blog post but we want you the users and community of the library to be part of influencing the roadmap going forward One thing to note about The Guild We place all the open source packages we maintain under individual persons Github profile instead of under a GitHub org or a company That is part of our philosophy it puts more accountability on the maintainer and it also lowers the barrier of creating successful competing forks So we will transfer that repository from under its current org as part of the transition Im looking forward to start the discussion here below Please share how and why you use the library today what are your biggest pain points today and ideas and features you would like to see in the future I will add points into the description here as we go Lets make this happen change app namecha How can I change the name of the app graphql app deepin screenshotselecionar area in the background graphql playground in order to close the browser and not fetch the connection Usecase After fetching a big schema with getschema it would be awesome to add app specific annotations to that generated SDL An extension could hook in and manipulate the downloaded SDL of the graphql getschema command