Hey Ive been monitoring this project for a little while and Im super excited to see how far its come Thanks for all your work so far Im hoping to maybe even start using this at work although Rust is still a hard sell yet I was wondering if you could give a little background on who the maintainers of this project are what your plans for the project are how development is sustained and that kind of context Im asking a little ways ahead of when I might need to pitch at work because Im gonna have to jump through some compliance hoops and having good stories to tell about each of the libraries Id recommend would be super helpful That said I understand Im asking for info which might be considered personal this is completely optional and I have no expectations here Im asking from a place of preparation and hope Thanks For my understanding about actor model i need actor keep looping to do some task it should not hang the system other actors should still working and do their job The current version still has alpha dependencies in the manifest file Would be great to update them to the released ones This MR introduces Instant for time tracking in the timer replacing the before used SystemTime Closes This PR replaces log crate by the slog crate All code was written with a backward compatibility in mind When slogLogger is not passed to actor system via the SystemBuilder then behavior and log messages format stays the same as was before this PR Example of how slog can be passed to riker rust macrouse extern crate slog extern crate sloggers use sloggersBuild use sloggersterminalTerminalLoggerBuilder Destination use sloggerstypesSeverity let mut builder TerminalLoggerBuildernew builderlevelSeverityDebug builderdestinationDestinationStderr let logger builderbuildunwrap let sys SystemBuildernew loglogger createunwrap Maybe it makes sense to inform channel subscriber that subscription has been added to the subscription list Such notification can be useful in the case when subscriber has to be sure that it will be notified on something it immediately initiated This will help to avoid race conditions similar to what currently happens in ActorSystemshutdown I believe that this is quite a common pattern Hello this pull request provides the initial implementation for the ActorSystemwhenterminated function as it was proposed in the issue Code in is commented out so Actorpoststart is never called Hi Thank you for making Riker In the Message Types section of the tutorial the code for implementing ReceiverSub and ReceiverPrint both have msg Add The example ran correctly after changing msg to Sub and Print respectively I didnt try running it as is Thanks PS I am going to try to use Seed a WASM webframework with Riker just to experiment and learn Is there anything you think I should know about using Riker with WASM Noob to webdev Rust actors distributed computing etc pretty much a noob to all this tech with Rust being my first language for anything more than dabbling dabbled with Haskell and Python each for a bit email is robwebbjrgmailcom 