Hi Im making updates for Open Collective Either you or another core contributor signed this repository up for Open Collective This pull request adds financial contributors from your Open Collective What it does adds a badge to show the latest number of financial contributors adds a banner displaying contributors to the project on GitHub adds a banner displaying all individuals contributing financially on Open Collective adds a section displaying all organizations contributing financially on Open Collective with their logo and a link to their website PS As with any pull request feel free to comment or suggest changes Thank you for your great contribution to the Open Source community You are awesome And welcome to the Open Collective community Come chat with us in the opensource channel on great place to ask questions and share best practices with other Open Source sustainers According to the documentation the extension methods should throw an error for any response except Asynchronous generic methods GetAsyncT PostAsyncT and so on which arent a part of IRestClient interface those methods are extension methods return TaskT It means that theres no IRestResponse to set the response status to error We decided to throw an exception when such a request fails It is a tradeoff between the API consistency and usability of the library Usually you only need the content of RestResponse instance to diagnose issues and most of the time the exception would tell you whats wrong Today we discovered an issue with our NTLM authentication while there are larger issues with NTLM this was particularly problematic because the call to GetAsync returned an empty object not null instead of throwing an error upon receiving Unauthorized The calling program continued on unaware until strange errors later in the program alerted us I believe the error lies in this code in the RestClientExtensionscs Only certain errors trigger the response and if the error isnt matched nothing is thrown static void ThrowIfErrorIRestResponse response var exception responseResponseStatus switch ResponseStatusAborted new WebExceptionRequest aborted responseErrorException ResponseStatusError responseErrorException ResponseStatusTimedOut new TimeoutExceptionRequest timed out responseErrorException ResponseStatusNone null ResponseStatusCompleted null throw responseErrorException new ArgumentOutOfRangeException if exception null throw exception Description Throw exception on invalid resource query Fixes Purpose This pull request is a x Bugfix nonbreaking change which fixes an issue New feature nonbreaking change which adds functionality Breaking change fix or feature that would cause existing functionality to not work as expected Checklist I have added tests that prove my fix is effective or that my feature works I have added necessary documentation if appropriate Expected Behavior Making simple GETPOSTPUTDELETE commands should take second when connecting to a fast server This has been tested over network as well as connecting to localhost to rule out network issues If this issue is a feature request remove text below Actual Behavior All GETPOST requests work fine The first PUTDELETE request made takes anywhere from seconds After that first request the subsequent requests drop to ms Tested making the PUT requests with other methods and the issue does not exist Steps to Reproduce the Problem This issue occurs in a WPF application All I have to do to reproduce is start the application debugging make one put request and it will hang for seconds Specifications Version Tried so far I have tried googling the issue and found responses about proxy issues and such I dont believe these apply to me because GETPOST requests are not affected I tried the solutions anyway and they in fact did not make any difference If there is anything I can provide to help track down the issue please let me know Currently RestSharp uses HttpWebRequest since that was the way to do it back in the days Time passed by and HttpClient dominates now so we need to move on There are several issues with HttpWebRequest implementation that could be resolved by using HttpClient Use proper async flow with cancellation and context Use a single instance of HttpClient for connection pooling Support HTTP These are the main issues but therere advantages that overall come with more modern implementation In the latest versions of NET framework full and core HttpWebRequest uses the HttpClient anyway This is a continuation of issue I followed the suggestions recommended by you with proper typed object as a parameter with the same issue that errors A nonempty request body is required titleOne or more validation errors occurredstatus traceId HLSKFCCSHR Interestingly when i updated RestSharp to i am getting a different message the GET method does not support body var request new RestRequestMethodGET request AddHeaderContentType applicationjson request AddHeaderAuthorization Bearer var test new SearchRequest ABC EFG Name new SearchRequestName Title Forename MidInitial Surname Suffix Dob Address new SearchRequestAddress SubBldName HouseName HouseNb Street District Town County Postcode request RequestFormat DataFormatJson var SerializedJsonBody JsonConvertSerializeObjectrequestBody request AddJsonBodytest response apiServiceExecuterequest Could you please help us here To my understanding Resharp support httpclient please correct me if i am wrong Your assistance would be appreciated Expected Behavior If this issue is a feature request remove text below Actual Behavior Steps to Reproduce the Problem Use version Try this code var request new RestRequesturiAbsoluteUri This version works Specifications Version Platform Subsystem StackTrace details SystemArgumentNullException Value cannot be null Parameter name name at RestSharpValidationEnsureNotEmpty SystemString parameter SystemString name x in fba e a cc b a d at RestSharpParameterctor SystemString name SystemObject value RestSharpParameterType type x in fba e a cc b a d at RestSharpRestRequestAddParameter SystemString name SystemObject value RestSharpParameterType type x in fba e a cc b a d at RestSharpRestRequestAddQueryParameter SystemString name SystemString value SystemBoolean encode x in fba e a cc b a d at RestSharpRestRequestctor SystemString resource RestSharpMethod method RestSharpDataFormat dataFormat x in fba e a cc b a d at RestSharpRestRequestctor SystemString resource x in fba e a cc b a d at SNLACoreCommunicationSNLAHttpClientGetRaw SystemUri uri SystemBoolean authenticated x in UsersjorgenstorlieApperSNLAappSNLACoreCommunicationSNLAHttpClientcs at SNLACoreCommunicationVianettSMSServiceCallVianettSMS SystemString vianettBaseUrl SystemNetNetworkCredential vianettCredential SystemString mobileNumber SystemString message SNLACoreCommunicationVianettSMSServiceSenderAddressType senderAddressType SNLACoreCommunicationVianettSMSServicePriority priority x in UsersjorgenstorlieApperSNLAappSNLACoreCommunicationVianettSMSServicecs at Hjelp iOSOnboardingMobileViewControllerSendPhoneNumber SystemString phoneNumber x af in UsersjorgenstorlieApper XamarinHjelp iOSOnboardingMobileViewControllercs at Hjelp iOSOnboardingMobileViewControllerRegister x b in UsersjorgenstorlieApper XamarinHjelp iOSOnboardingMobileViewControllercs at Hjelp iOSOnboardingMobileViewControllerBtnDoneTouchUpInside SystemObject sender SystemEventArgs e x in UsersjorgenstorlieApper XamarinHjelp iOSOnboardingMobileViewControllercs at SystemRuntimeCompilerServicesAsyncMethodBuilderCorecThrowAsyncb SystemObject state x in LibraryFrameworksXamariniOSframeworkVersionsCurrentsrcXamariniOSmcsclassreferencesourcemscorlibsystemruntimecompilerservicesAsyncMethodBuildercs at FoundationNSAsyncSynchronizationContextDispatcherApply x in LibraryFrameworksXamariniOSframeworkVersions srcXamariniOSFoundationNSActioncs at at wrapper managedtonative UIKitUIApplicationUIApplicationMainintstring intptrintptr at UIKitUIApplicationMain SystemString args SystemIntPtr principal SystemIntPtr delegate x in LibraryFrameworksXamariniOSframeworkVersions srcXamariniOSUIKitUIApplicationcs at UIKitUIApplicationMain SystemString args SystemString principalClassName SystemString delegateClassName x e in LibraryFrameworksXamariniOSframeworkVersions srcXamariniOSUIKitUIApplicationcs at Hjelp iOSApplicationMain SystemString args x in UsersjorgenstorlieApper XamarinHjelp iOSMaincs details Expected Behavior Array Of Multiple Cookies in responsecookies Actual Behavior Array Of just one Cookie in responsecookies Steps to Reproduce the Problem Make a Request that sets multiple Cookies via one SetCookie Specifications Version Platform Win Informations SetCookie HostdeviceidAQDx WuRq Vkh ER XAyZCtr bOg eiNydb espt ivTh lNUkfUQchpUHFkup iyibVPAbRN VtV VIHsvL glELzUNbYVersion PathMaxAge SecureHttpOnlySameSiteLaxcsrftokenAQDDJvDRVpQHvqOQswqNJPpQR MqMJrlApwADKjUPYRSi M dSBiINDdGJdPBSuxXZPRnu dUAtmYVersion DomainPathSecureSameSiteLax is a example This Leads to only One Cookie set in responsecookies In a WPF application Net the first request takes some time in my case about seconds to return a result If the request is repeated the time is drastically reduced in my case to about ms Under NetCore all requests need about two seconds Whether the client is instantiated as a singltone or always new doesnt matter Code for measuring the request response time csharp var restClient new RestClient var versionRequest new RestRequestapiv StatusVersion MethodGET var stopwatch new Stopwatch stopwatchStart restClientExecuteversionRequest stopwatchStop DebugWriteLinestopwatchElapsedMilliseconds ms Expected Behavior A NetCore application should have the same behavior as a NetFramework application Actual Behavior A NetCore application is dramatically slower in repetitive requests Steps to Reproduce the Problem Create a WPF Application in NetCore and NetFramework Include Restsharp Make an Api Request and measure the time Repeat the procedure Specifications Version Platform Windows Pro NetCore Version NetFramework Version v NetFramework CLR Version v Expected Behavior Correct deserialization of the object If this issue is a feature request remove text below Actual Behavior RestClientGetAsyncT never returns staling Steps to Reproduce the Problem I have a REST API returning the following JSON ContentType is applicationjson id da af c ee c name Customer portfolios id da d ff d ec ed managerId da e f e c d depositories id da f f d ec f custodianId da c ee c e custodianDepositoryId accounts id da ec f d ec f custodianId da c ee c e custodianAccountId currencyCode DKK id da dcaf d ec ee managerId da d e f e c d depositories id da fccf d ec f custodianId da f c ee c f custodianDepositoryId accounts id da f f d ec f custodianId da f c ee c f custodianAccountId currencyCode DKK id da fb f d ec f custodianId da f c ee c f custodianAccountId currencyCode DKK id da de f d ec ef managerId da e f e c d active true depositories id da f d ec f custodianId da fa c ee c custodianDepositoryId id da f d ec fa custodianId da fa c ee c custodianDepositoryId accounts id da f d ec f custodianId da fa c ee c custodianAccountId currencyCode DKK id da f d ec f custodianId da fa c ee c custodianAccountId currencyCode DKK id da df f d ec f managerId da fe f e c d active true depositories id da b f d ec fd custodianId da c ee c custodianDepositoryId accounts id da f d ec fb custodianId da c ee c custodianAccountId currencyCode DKK id da f d ec fc custodianId da c ee c custodianAccountId currencyCode DKK id da e f d ec f managerId da e f e c d active true depositories id da f f d ec ff custodianId da f c ee c custodianDepositoryId accounts id da e f d ec fe custodianId da f c ee c custodianAccountId currencyCode DKK The code consuming this REST API has the following model public class LegalEntity public string Id get set public string Name get set the rest of the API response should be ignored in this case My service contains the following code var request new RestRequest Resource legalentitylegalEntityId Parameters new ParameterlegalEntityId id ParameterTypeUrlSegment var legalEntity await restClientGetAsyncLegalEntityrequest The last line of code restGetAsyncLegalEntityrequest seems to go into a loop or staling never returning anything and making my webapp freeze completely If I try the following var request new RestRequest Resource legalentitylegalEntityId Parameters new ParameterlegalEntityId id ParameterTypeUrlSegment var response restClientExecuterequest var test JsonConvertDeserializeObjectLegalEntityresponseContent var test SimpleJsonDeserializeObjectLegalEntityresponseContent I can see the response object is correct Also test is an instance of LegalEntity with the expected values for Id and Name test however is an instance of LegalEntity with null for both Id and Name but at least it returns instead of staling Specifications Version Platform Net on Windows StackTrace No stacktrace available