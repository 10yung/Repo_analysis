Solves Add support to match field name with map key in snakecase or kebabcase convention Hi guys i have a problem decoding data The main problem is that the type of the input values can change For example name hello value abc and sometimes it looks like this name hello value payload otherdata dd foo bar Can I decode this with mapstructure Best reguards Alex Minor addition to allow the decoding of jsonNumber as uint How to reproduce Run go get githubcommitchellhmapstructure Go to GOPATHgithubcommitchellhmapstructure Run go test bench Output goos linux goarch amd pkg githubcommitchellhmapstructure BenchmarkDecode nsop BenchmarkDecodeViaJSON nsop BenchmarkDecodeBasic panic reflect reflectValueSetInt using unaddressable value goroutine running reflectflagmustBeAssignable x usrlocalgosrcreflectvaluego x a reflectValueSetInt x a x d f x x a usrlocalgosrcreflectvaluego x f githubcommitchellhmapstructureDecoderdecodeInt xc aa x b x x a x d f x a x d f x x x homebennigosrcgithubcommitchellhmapstructuremapstructurego xf githubcommitchellhmapstructureDecode x xc x a xc d x x homebennigosrcgithubcommitchellhmapstructuremapstructurego x f githubcommitchellhmapstructureBenchmarkDecodeBasic xc homebennigosrcgithubcommitchellhmapstructuremapstructurebenchmarktestgo x f testingBrunN xc x usrlocalgosrctestingbenchmarkgo xb testingBlaunch xc usrlocalgosrctestingbenchmarkgo xd created by testingBdoBench usrlocalgosrctestingbenchmarkgo x exit status FAIL githubcommitchellhmapstructure s Expected result Benchmarks complete Notes Tests complete just fine When I remove line in mapstructurebenchmarktestgo vdata the benchmark completes fine It seems like there is an issue destructuring into plain interfacees Thanks Is there a way to configure the boolean conversion Our project has strict requirements to only accept a true and false and not all the other variations Is this possible with this library Fixes Implementation for checking that required fields got filled in map struct decoding direction A basic test has been added as well go type Required struct RequiredBar string mapstructurebarrequired Value string mapstructurefoo Fixes I use the DecodeHook to translate the values of certain fields This works great when decoding from map struct but doesnt work the other way around When I encode from struct map the DecodeHook is called only once for the whole struct I would expect it to be called for each field as well Ive currently hacked it into my decoderHook function by iterating over the fields and recursively calling itself But this is rather tedious and has the disadvantage that I cant change the types of fields Use below code to reproduce package main import fmt githubcommitchellhmapstructure type Config struct ClientConfig clientConfig yamlclientomitempty ClientConfigs clientConfig yamlclientsomitempty type clientConfig struct URL string yamlurlomitempty func main input map string interface client map string string url var result Config err mapstructureDecodeinput result if err nil panicerr fmtPrintfv result output mainConfigClientConfigmainclientConfigURL ClientConfigs mainclientConfignil 