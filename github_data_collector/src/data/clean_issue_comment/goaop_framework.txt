Running on PHP this line throws exception We should replace the string casting with the getName method on ReflectionType or make sure we use the overloaded ReflectionType from goaopparserreflection library Currently Go AOP cannot be used in a Symfony based project since this Your requirements could not be resolved to an installable set of packages Problem goaopframework requires symfonyfinder no matching package found goaopframework requires symfonyfinder no matching package found goaopframework requires symfonyfinder no matching package found goaopframework requires symfonyfinder no matching package found Installation request for goaopframework satisfiable by goaopframework Could we probably add symfonyfinder also Im especially interested in Error message Call to a member function toString on null in vendorgoaopframeworksrcInstrumentTransformerSelfValueVisitorphp public function enterNodeNode node if node instanceof Stmt Namespace thisnamespace nodenametoString nodename is null in a class without namespace Consider example file Aphp use Some Annotation as Annotation abstract class A Annotation Cacheable public foo file Bphp abstract class B extends A We define our pointcut to target every public method annotated with annotation Some Annotation Cacheable Class A will get weaved class B will get weaved as well Exception will occur on class B since method foo will be defined and weaved in class B as well because of A and pointcut method foo in weaved B will get docblock comment from foo from A Annotation Cacheable Exception will be thrown because Annotation Cacheable is not imported into weaved B This is easy to reproduce Fix is easy instead of using class aliases for docblock annotations in process of compiling classes and creating proxies for all annotations FQCN should be used eg instead of Annotation Cacheable write Some Annotation Cacheable Doctrine entities can not be weaved class metadata gets all messed up Engine generates EntityAopProxied which is copy of original class and then generates class Entity that extends EntityAopProxied and contains weaved methodsproperties Issue is that EntityAopProxied contains doctrine metadata so Doctrine actually generates such metadata that EntityAopProxied is main class and every relation is bound to that class not Entity Side effects are that per example table name gets suffix aopproixed while relations gets all screwed up so any join is broken because different aliases are generated with SQL walker Lazy loading does not work as well Possible solution would be in order to preserve BC compatibility to provide possibility to specify different method of weaving for certain classes Per example in this case in order to work as it should EntityAopProxied should not be generated and inherited it should be generated only Entity class Yes maybe we will loose nice debugging and breakpoints however for now we can sacrifice that for working code Hello Im trying to use Go in a project but its crashing out of the box It seems strange to me because I would think a crash this basic would affect more people Perhaps its my environment I added some print debugging to the composer ClassLoader and the AopComposerLoader As you can see it successfully locates the files on disk and includes them but in the case of the doctrine AnnotationReader it tries to apply the gosourcetransformingloader filter and crashes the program Searching for class Symfony Component Console Application with extension php File path before rewrite rootgitprojectvendorcomposersymfonyconsoleApplicationphp File path after rewrite phpfilterreadgosourcetransformingloaderresourcerootgitprojectvendorcomposersymfonyconsoleApplicationphp Searching for class Go Instrument Transformer StreamMetaData with extension php File path before rewrite rootgitprojectvendorcomposergoaopframeworksrcInstrumentTransformerStreamMetaDataphp File path after rewrite rootgitprojectvendorcomposergoaopframeworksrcInstrumentTransformerStreamMetaDataphp Including rootgitprojectvendorcomposergoaopframeworksrcInstrumentTransformerStreamMetaDataphp Searching for class Go Instrument Transformer WeavingTransformer with extension php File path before rewrite rootgitprojectvendorcomposergoaopframeworksrcInstrumentTransformerWeavingTransformerphp File path after rewrite rootgitprojectvendorcomposergoaopframeworksrcInstrumentTransformerWeavingTransformerphp Including rootgitprojectvendorcomposergoaopframeworksrcInstrumentTransformerWeavingTransformerphp Searching for class Go Core AdviceMatcher with extension php File path before rewrite rootgitprojectvendorcomposergoaopframeworksrcCoreAdviceMatcherphp File path after rewrite rootgitprojectvendorcomposergoaopframeworksrcCoreAdviceMatcherphp Including rootgitprojectvendorcomposergoaopframeworksrcCoreAdviceMatcherphp Searching for class Go Core AspectLoader with extension php File path before rewrite rootgitprojectvendorcomposergoaopframeworksrcCoreAspectLoaderphp File path after rewrite rootgitprojectvendorcomposergoaopframeworksrcCoreAspectLoaderphp Including rootgitprojectvendorcomposergoaopframeworksrcCoreAspectLoaderphp Searching for class Doctrine Common Annotations AnnotationReader with extension php File path before rewrite rootgitprojectvendorcomposerdoctrineannotationslibDoctrineCommonAnnotationsAnnotationReaderphp File path after rewrite phpfilterreadgosourcetransformingloaderresourcerootgitprojectvendorcomposerdoctrineannotationslibDoctrineCommonAnnotationsAnnotationReaderphp PHP Fatal error Uncaught Error Class Doctrine Common Annotations AnnotationReader not found in rootgitprojectvendorgoaopframeworksrcCoreGoAspectContainerphp Stack trace rootgitprojectvendorgoaopframeworksrcCoreContainerphp Go Core GoAspectContainerGo CoreclosureObjectGo Core GoAspectContainer rootgitprojectvendorgoaopframeworksrcCoreContainerphp Go Core ContainerGo CoreclosureObjectGo Core GoAspectContainer rootgitprojectvendorgoaopframeworksrcCoreGoAspectContainerphp Go Core Containergetaspectannotati rootgitprojectvendorgoaopframeworksrcCoreContainerphp Go Core GoAspectContainerGo CoreclosureObjectGo Core GoAspectContainer rootgitprojectvendorgoaopframeworksrcCoreContainerphp Go Core ContainerGo CoreclosureObjectGo Core GoAspectContainer rootgitprojectvendorgoaopframeworksrcCoreGoAspectContai in rootgitprojectvendorgoaopframeworksrcCoreGoAspectContainerphp on line Interception of methods in the internal PHP classes is the most complex one however it is required for special cases for example to intercept mysqlquery invocation php class MysqliQueryOperationCollectionAspect implements Aspect param MethodInvocation invocation Invocation Aroundexecutionpublic mysqliquery return mixed public function aroundQueryMethodMethodInvocation invocation method invocationgetMethod args invocationgetArguments query args if thisloggerisTraceEnabled thisloggertracemethodgetNamequery try result invocationproceed return result catchException e if thisloggerisTraceEnabled thisloggertracemethodgetNamequery getclasse egetMessage throw e If you are using an AOP or have a plan to use it please add a small comment here or just put a I will be happy to see that this technique can be useful for you You can also provide an additional information about the usage how you use it and where I can put this information later on my site with hyperlink to your solution JMSExtraSecurity bundle verifies that secure annotation is copied to overridden method from the parent method annotation and SatisfiesParentSecurityPolicy annotation is added to the child class 