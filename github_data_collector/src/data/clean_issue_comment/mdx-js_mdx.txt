Cant resolve fs in mdxjsruntime Ouch sorry you ve run into a bug Thank for taking the time to report it Please fill in as much of the template below as you re able PS have you seen our support and contributing docs Subject of the issue Feel free to close if this is not a bug or bug of some other library Im trying to render the following python command subdir modelnblayers but it crashes because MDX tries to evaluate the contents of the I suspect some double escaping occurs and the problem if indeed a problem lies in this line Or it could be a remark issue Not entirely sure which I also posted on Spectrum here because I wasnt sure whether this was a bug Your environment OS macOS Packages mdxjsmdx Env Node Yarn Steps to reproduce Repo here Expected behaviour Renders fine It renders ok for GFM Actual behaviour MDX tries to evaluate the contents of the I suspect some double escaping occurs Subject of the issue I just tried to create a mdx project for vue and the links are being shown without href attribute Your environment OS Ubuntu Env yarn node Steps to reproduce Run npm init mdx vue Add a link like or MDX in the testmdx file Build the project or run yarn serve Open in the browser to see the results Expected behaviour A link with the href attribute Actual behaviour A link with just a parentname attribute like this a parentnamepstuffa Dynamic Imports babel error I am using MDX format for demoing my components in Storybook The problem I am facing is that I use dynamic imports in my demos some of my components rely on this heavily and I want to demonstrate it When I try to use dynamic imports inside mdx files I use latest Google Chrome stable babel complains that I should add a babel plugin for this feature I first opened an issue here and they helped to track it down to the ToJSX function which has babel plugins hardcoded I think this is why I am getting the error SyntaxError unknown Support for the experimental syntax dynamicImport isnt currently enabled html lionicon svgimporticonsbugsbug svgjs arialabelSkinny dung beatle lionicon Add babelpluginsyntaxdynamicimport to the plugins section of your Babel config to enable parsing at Objectraise homejorencodelionnodemodulesbabelparserlibindexjs at ObjectexpectPlugin homejorencodelionnodemodulesbabelparserlibindexjs at ObjectparseExprAtom homejorencodelionnodemodulesbabelparserlibindexjs at ObjectparseExprAtom homejorencodelionnodemodulesbabelparserlibindexjs at ObjectparseExprSubscripts homejorencodelionnodemodulesbabelparserlibindexjs at ObjectparseMaybeUnary homejorencodelionnodemodulesbabelparserlibindexjs at ObjectparseExprOps homejorencodelionnodemodulesbabelparserlibindexjs at ObjectparseMaybeConditional homejorencodelionnodemodulesbabelparserlibindexjs at ObjectparseMaybeAssign homejorencodelionnodemodulesbabelparserlibindexjs at ObjectparseExpression homejorencodelionnodemodulesbabelparserlibindexjs Does it make sense for you guys to add the babel plugin for dynamic imports so it works in MDX Your environment OS MacOS Mojave Packages openwcdemoingstorybook or use npm init openwc to scaffold the necessary files for Storybook Env latest Google Chrome stable node v npm yarn Steps to reproduce npm init openwc Scaffold a new project Web Component Toggle Demoing Toggle Demoing again for example files Install with yarn or npm Files are now scaffolded under the folder name of your choice Go into storiesindexstoriesmdx Replace the following code in the first Story js html mywcdemomywcdemo with js importsomethingjs return html mywcdemomywcdemo So now it has a dynamic import statement Run npm run storybook or yarn storybook Witness the error that I am reporting Expected behaviour It should give an error that it cannot find the file somethingjs because this does not exist in my reproduction example With a real example it should dynamically import the existing file without errors Actual behaviour A SyntaxError occurs on the dynamic import statement Support for the experimental syntax dynamicImport isnt currently enabled Add babelpluginsyntaxdynamicimport to the plugins section of your Babel config to enable parsing Hopefully I have given you guys enough information about the problem I dont know what solution makes most sense for you guys let me know if you need more information from my side Happy to send a PR if you guys agree that the solution is to add the plugin mdxjsmaintainers See mdxjsmaintainers Moved from due to Just got this error when using eslintmdx Thank you for suggesting an idea to make this project better Please fill in as much of the template below as you re able PS have you seen our support and contributing docs Subject of the feature Relax dependency versions Problem See Essentially when installing an MDX package such as mdxjsmdx I would rather not have a pinned version of any babel dependencies installed this causes duplicate versions and can plausibly lead to subtle bugs If you look at youll see babelcore gets installed as well as fixed versions for babelpluginsyntaxjsx and babelpluginsyntaxobjectrestspread Expected behavior Dependencies should use carets eg Alternatives Yarn users are able to use things like Yarn resolutions but its not ideal to have to resort to resolutions cc JounQin johno Subject of the issue After setting up the vueloader as described in the setup documentation Im getting the following Unknown custom element wrapper did you register the component correctly For recursive components make sure to provide the name option Also it seems that the mdxjsvue package isnt exporting its mdxprovider Shouldnt it be Otherwise how do I use it without duplicating it in my own repo I know its relatively new so thinking this may just be an issue Your environment OS OSX Mojave Env yarn chrome Steps to reproduce Run npm init mdx vue to setup a new vue project and then proceed to run it with yarn serve Once running view the console and youll see the warning I posted above Expected behaviour I shouldnt be seeing warnings and the mdxprovider should be exported so it can be used Actual behaviour Im seeing warnings in the console as described above The mdxprovider isnt be exported like it should be I may try to debug this tomorrow by forking the mdxjsvue to see if I can further diagnose the issue and possibly do a PR to fix it Assuming its actually an issue Thanks for the hard work youve put into this project Its fantastic A bit related to GH I guess the readme for mdxjsvue on npm and GH is missing