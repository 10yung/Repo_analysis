Hi There is an await of the var e await clientGetAsyncuri cancellationToken There is no need to add the ConfigureAwaitfalse at all Hi HtmlAgilityPack v with VS UWP string site try HtmlWeb Web new HtmlWeb var doc WebLoadsite catch There is en error An error occurred while sending the request StackTrace at SystemThreadingTasksTask GetResultCoreBoolean waitCompletionNotification at HtmlAgilityPackHtmlWebGetUri uri String method String path HtmlDocument doc IWebProxy proxy ICredentials creds at HtmlAgilityPackHtmlWebLoadUrlUri uri String method IWebProxy proxy ICredentials creds at HtmlAgilityPackHtmlWebLoadUri uri String method at HtmlAgilityPackHtmlWebLoadString url The StrackTrace of the InnerExceptions are at SystemNetHttpHttpClientHandlerSendAsyncHttpRequestMessage request CancellationToken cancellationToken at SystemNetHttpHttpClientFinishSendAsyncBufferedTask sendTask HttpRequestMessage request CancellationTokenSource cts Boolean disposeCts It seems that there is an error when used with the async and await within the HtmlAgilityPack Any ideas Description When parsing the following HTML ph invalid nestingh p the ParseErrors property creates an incorrect error Start tag p was not found with the position being the position of the p tag This makes it appear that there is a syntactical problem with the HTML that was provided This is quite obviously not the case the start P tag is right there plainly visible at the start of the HTML The actual problem is a semantic problem its not valid to nest a H tag inside a P tag The error returned should accurately reflect the real problem rather than providing the confusing nonsense seen in the current version Fiddle or Project Further technical details HAP version NET version NET Framework I have the following html string simplified version of the html which is not controlled by me html head title head body p Hello How are you doing p body html and I am using the following code to parse it using HtmlAgilityPack HtmlDocument htmlDoc new HtmlDocument htmlDocLoadHtmlhtmlStr but this is the value of htmlDocDocumentNodeInnerHtml html head titletitleheadhtml As you can see the html was not parsed correctly On some trial and error I noticed that on replacing title in the html string with titletitle the doc was parsed correctly Any ideahelp on how to parse such html doc with HAP correctly Further technical details HAP version NET version both net and netcore Description I am scraping a website that includes a select dropdown where the option elements are unclosed In the inner text of one of these elements there is text enclosed in angle brackets HtmlAgilityPacks parser interprets this text as a start tag containing all following text up to the next closing tag for a higher element which happens to be the select tag itself This means that all option elements from the one with the angle brackets on are parsed improperly Link to minimal fiddle below In fairness Beautiful Soup seems to handle this page even worse without the closing tags it doesnt even realize any of the option elements have ended Just nests them until it hits select Fiddle Fixes Ive been looking for ways to extend xpath query capabilities and I think its very necessary I raised this question at the beginning of last year But Im sorry this solution comes too late Some classes was first released in Dawnx library I improved it to make it easier to use and it is now available to HAP under the MIT License Although HtmlWeb class allows to ignore respContentEncoding by OverrideEncoding property it cannot help in the case where respContentEncoding has encoding name which is not supported by Encoding class and throws ArgumentException When OverrideEncoding is provided the result from EncodingGetEncoding method has not been actually used so that simply skipping EncodingGetEncoding method call can make it work without impact to existing behaviors EncodingNotSupportedException is added in order to notify that such not supported content encoding is received from server It helps when writing code to retry loading page with OverrideEncoding fix Description When I tried to load a page from by HtmlWebLoad method it failed with an ArgumentException It turned out to be because the response headers from the site has contentencoding identity As per HTTP RFC identity is used only in the Accept Encoding header and SHOULD NOT be used in the ContentEncoding header so that it is of course that Encoding class does not support identity Therefore next I specified EncodingUTF to OverrideEncoding property and called HtmlDocumentLoad method However it didnt make any change and I got the same ArgumentException I expected OverrideEncoding property make HtmlWeb class to ignore the ContentEncoding in the response headers from server and to decode content by specified encoding in OverrideEncoding property but it was not the case While it allows overriding the encoding specified by server when the encoding name is valid it would be ideal that it also worked when the server specified encoding name is invalid Exception Exception message SystemArgumentException identity is not a supported encoding name For information on defining a custom encoding see the documentation for the EncodingRegisterProvider method Parameter name name Stack trace at SystemTextEncodingTableGetCodePageFromNameString name at SystemTextEncodingGetEncodingString name at HtmlAgilityPackHtmlWebGetUri uri String method String path HtmlDocument doc IWebProxy proxy ICredentials creds in UsersyasProjectshappyflhtmlagilitypacksrcHtmlAgilityPackSharedHtmlWebcsline at HtmlAgilityPackHtmlWebLoadUrlUri uri String method WebProxy proxy NetworkCredential creds in UsersyasProjectshappyflhtmlagilitypacksrcHtmlAgilityPackSharedHtmlWebcsline at HtmlAgilityPackHtmlWebLoadUri uri String method in UsersyasProjectshappyflhtmlagilitypacksrcHtmlAgilityPackSharedHtmlWebcsline at HtmlAgilityPackHtmlWebLoadUri uri in UsersyasProjectshappyflhtmlagilitypacksrcHtmlAgilityPackSharedHtmlWebcsline at HappyFLServicesWebSeekersRecipeSeekerScan in UsersyasProjectshappyflHappyFLServicesWebSeekersRecipeSeekercsline at HappyFLServicesWebSeekerServiceFindRecipesUri url Nullable cancel Encoding encode in UsersyasProjectshappyflHappyFLServicesWebSeekerServicecsline at HappyFLTestWebSeekerServiceTestTestFindRecipeString url ExpectedResultForTestFindRecipe expected in UsersyasProjectshappyflHappyFLTestWebSeekerServiceTestcsline Project to reproduce issue Further technical details HAP version NET version net netcore etc NET Core With a XPath expression ending in attributeName SystemXmlXmlNodeSelectSingleNode correctly returns an attribute node with Name ValueInnerText matching the attribute HtmlAgilityPackHtmlNodeSelectSingleNode returns the parent HtmlNode with its attributes instead of the attribute itself The reason is probably because there is no HtmlAttributeNode class yet I dont know if its for memory optimization or what but it might be useful to have these eventually created onthefly when these nodes gets selected I ended up creating this class myself with an extension method SelectSingleNodeOrAttr to workaround this limitation of HtmlAgilityPack Description If an elements attribute value comes like this eg img srcimagejpg altSavannahs streets Savannahs streets quotes insides quotes will break the html output will be img srcimagejpg altSavannah s streets Exception Malformed HTML altSavannah s streets Further technical details HAP version Even for NET version 