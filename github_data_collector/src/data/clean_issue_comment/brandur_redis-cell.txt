Hi I have started using the module to integrate with our deployment I am not percent sure but so far from the Observed Behaviour it seems that once the CLTHROTTLE commands gets executed the Key Entry is made and subsequent CLTHROTTLE use the entry to process the rate limit quota Working On A PR for the following but wanted to discuss before hand if I have interpreted this correctly Removing a Key Altogether Resetting Updating a key with new Rate Limit Tuple Waiting for your response Thanks Romit Hi do you have some documentation examples for commands hii want to know redis celll support redis cluster according to i not found getkeysapi in your code Move the error system over to errorchain as its starting to become a de facto standard in Rust and provides better introspection and some nice ergonomic improvements for projects using it Ive done some significant rework of the repo and most of these choices are off the cuff and suiting me in my own use case so I dont expect them to be everyones cup of tea However I did the work of separating things into distinct mods as well as added a procedural macro which I think DRYs up the addition of new commands significantly So in summary fixed a segfault in freeing a null ptr added support for extracting ReplyError and ReplyArray types from redis bumped crate version to separated Command into RedisCommand and RedisCommandAttrs allowing part to be derived deriveRedisCommandAttrs support in a procedural macro rediscommandgen subcrate updated redismoduleh to support redis rc current added call for variadic call with arity of though Im not sure I use it In conclusion I think that were now of the way to extracting a useful crate to publish on cratesio but I didnt get around to that and wanted to see how this would be received before I went ahead and did that Id love to know peoples thoughts Hi brandur I dont have much experience in rust however I am wondering how complex would be to decouple the part of the code base that interact with redis from your module Ideally I wonder how much work would be to create a crate to simply plug inside the dependencies Best Simone