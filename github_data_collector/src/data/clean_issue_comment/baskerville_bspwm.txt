Initially I was running bspwm on DisplayPort with a p monitor Recently I got a new k display and I plugged it into DisplayPort and disconnect Displayport Then all the sudden I cannot login to the window manager The only way I found bspwm working is I put K DP cable into DisplayPort the port previously used Super weird I am using Arch and my graphics card is AMD readeon vega Also I have the following lines in my config bspc config removedisabledmonitors true bspc config removeunpluggedmonitors true Couple thing I tried no luck make it working I remove all the monitor setting from my bspwmrc restart Bspwm fails After removal I add bspc monitor d to bspwmrc Restart and bspwm fails Try use a HDMI cable and plug it into GPUs HDMI port instead of DP No luck I dont know if anybody else is having problems but Ive now had the same issue on both an Ubuntu and a Mint install Im installing by downloading from the Git repository and making the binary with gcc as per but after install none of he key bindings work If I swap to a different login terminal I can confirm bspwm and sxhkd are both running Attempting to issue a command through bspc results in an error message Failed to connect to socket tmpbspwm socket has been created but the variable echo BSPWMSOCKET is empty even if I set it BSPWMSOCKETtmpbspwm socket that doesnt solve the problem Is this an issue or is there something wrong with my systems config New to bspwm switching from i I wonder if there is a way to configure bspwm so that focus is moved to the leftmost node when Im at the rightmost node pressing super right i works in this fashion in all directions Another example If Im at the northmost node and and press superup Id like focus to be set to the southmost node instead of not changing focus at all Best regards Hi I started to use bspwm I love it I have a question Is that possible when I want to resize a window while a hold the mouse button the effect only resize the border It take less computer usage I attach a file about what I mean this function from i wm Thank you for your feedback and for developing windowresize Hello first of all I absolutely love this wm but ever since I started using it this one thing is constantly on my mind When I fullscreen a window what as a user I would expect is that this window is maximized and everything else stays the same In reality correct me if I m wrong what happens is that every window is fullscreen bellow the chosen one or maybe it just gets removed temporarely from the tree What exactly happens is irrelevant but point is that me pressing fullscreen triggers resize events on windows bellow This is meaningless for most of the people but as I work with a project that has javascript that refreshes webpage when window gets abovebellow width threshold its very annoying Even if this would not happen resize a bloated webpage is often resource heavy and useless in this case Recently I watched a dudes screencast and he used transparency and clearly saw window bellow so i would think they all sit bellow maximized This project is amazing and this is very minor issue of mine but I would love to see behavior like this press fullscreen window gets on separate ws empty node gets pushed on its place when i go out of fullscreen it all reverses I can imagine scripting this with bspc but I m not really sure how would this work when i maximize program by its fullscreen handle outside of WMs keybind Fixes I want raise floated windows above other windows only when focused Otherwise the floated windows can stay behind any other window Currently they are always above Any advice on how I could achieve this Thanks Hi I just started using bspwm about a week ago loving it right now Thanks to all contributors Im wondering about implementing a feature like i marks which allows tagging windowsnodes with arbitrary strings that can then be used for selectioninstead of other window properties like title class Short of adding native support for this I guess Id have to implement storage of tagsnode associations file backend inmemory backend command to taguntag windows garbage collection could be implemented as a daemon listening on window close events using bspc subscribe or as a check on every invocation of tagging commands If somebody already did something similar or has any recommendations on how to do this welleg minimizing memory footprint and complexity Id love to hear it Thanks When uninstalling a game upon clicking Uninstall Game the Uninstall window is spawned behind the games properties window Which then triggers this bug binsh sxhkd bspc monitor d I II III IV V VI VII VIII IX X bspc config borderwidth bspc config windowgap bspc config splitratio bspc config borderlessmonocle true bspc config gaplessmonocle true bspc config focusfollowspointer false bspc config clicktofocus button bspc config honorsizehints true bspc config ignoreewmhfocus false bspc config ignoreewmhfullscreen none bspc config ignoreewmhstruts false bspc rule a Gimp desktop statefloating followon bspc rule a Chromium desktop bspc rule a mplayer statefloating bspc rule a Kupferpy focuson bspc rule a Screenkey manageoff Here is the xwininfo Uninstall window uninstallwindowbehindtxt Properties window propertieswindowtxt Steam steamwindowtxt using bspc config m focusedwindowcolor change the border color of borders on both monitors bspwm version g ffd c uname a Linux tolaria arch SMP PREEMPT Wed Dec x GNULinux For reference my dofiles as of now are here 