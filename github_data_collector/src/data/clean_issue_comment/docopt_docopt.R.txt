Hello It would be nice if docoptstripnames TRUE would also convert command line arguments invoked like dothething so that from R they were accessible as optdothething Newbie here Here is example from Naval Fate Usage navalfate ship new name navalfate ship name move x y speedkn navalfate ship shoot x y navalfate mine setremove x y mooreddrifting navalfate h help navalfate version Options h help Show this screen version Show version speedkn Speed in knots default moored Moored anchored mine drifting Drifting mine Trying to make it work from R r librarydocopt doc Naval Fate Usage navalfate ship new name navalfate ship name move x y speedkn navalfate ship shoot x y navalfate mine setremove x y mooreddrifting navalfate h help navalfate version Options h help Show this screen version Show version speedkn Speed in knots default moored Moored anchored mine drifting Drifting mine opt docoptdoc Getting uninformative error Error usage navalfate ship new name usage navalfate ship name move x y speedkn usage navalfate ship shoot x y usage navalfate mine setremove x y mooreddrifting usage navalfate h help usage navalfate version It is often natural to split up the Usage line based on length when there are multiple options but this is apparently not possible The following MWE r librarydocopt doc Usage exampler a ABCEDARIAN b BOTHER t TOOLONG q QUITALREADY O OOOPS a ABCEDARIAN just an example default abcde b BOTHER just an example default bother t TOOLONG just an example default q QUITALREADY just an example default noquit O OOOPS just an example default ooops opt docoptdocargsO nofooz yields the error r Error usage exampler a ABCEDARIAN b BOTHER t TOOLONG q QUITALREADY I have tried dropping the backslash doubling the backslash adding another Usage prefix which causes a different error about multiple Usage lines and so on r sessionInfo r R version Platform x pclinuxgnu bit Running under Red Hat Enterprise Linux Server release Santiago locale LCCTYPEenUSUTF LCNUMERICC LCTIMEenUSUTF LCCOLLATEenUSUTF LCMONETARYenUSUTF LCMESSAGESenUSUTF LCPAPERenUSUTF LCNAMEC LCADDRESSC LCTELEPHONEC LCMEASUREMENTenUSUTF LCIDENTIFICATIONC attached base packages stats graphics grDevices utils datasets methods base other attached packages docopt fortunes drat loaded via a namespace and not attached magrittr tools stringi stringr see also which was of no help Hello there Thank you for bringing this phenomenal tool to R Im on docopt and Ive noticed a strange behaviour regarding order of arguments Heres an example Usage combinegermlinefilesR p PATHS o OUTPUT n GENENAME doc librarydocopt args docoptdoc When I run Rscript scriptspipelinespoggermlinecombinegermlinefilesR p pathsgermlinepathstxt o metamutyhgermlinetxt n MUTYH it works just fine but if I reverse the argument order of p and o as follows Rscript scriptspipelinespoggermlinecombinegermlinefilesR o metamutyhgermlinetxt p pathsgermlinepathstxt n MUTYH I get an error The script loads metamutyhgermline into PATHS instead of correctly loading pathsgermlinepathstxt into PATHS This seems to suggest a hidden dependency on the order of arguments not just which flags they follow Since the current implementation supports also info for positional parameters and even arbitrary text which is really useful it would be great if the examples in the README or via docopt could mention this as well suppressMessagesrequiredocopt doc Analyze the effect of the batch removal on the clustering Usage batcheffectremovalR options countmatrix fancyinput Inputs countmatrix The input data fancyinput Another very important input for this cool program Options contraststabdelimtable Table with sample pairs for which dge analysis should be performed pcutoff pcutoff Override qvalue filter and filter by pvalue instead valid opts docoptdoc argslistfootxt invalid opts docoptdoc argslist do wee see the Inputs when asking for help opts docoptdoc argshelp See the Inputs and header line in the example Is it possible to pass arguments to a script using docopt when sourcing this script I tried redefining commandArgs as suggested in but this fails for instance my docopt text named doc contains the following rule o outdir outdir outdir If in my interactive R session I redefine commandArgs as follows commandArgs function coutdir interactivesession and then source my script when I examine the result of docoptdoc I see the following outdir NULL Any help appreciated I found some strange behavior where required options results in an error r usage myprogramR a r m msg file options a Add r Remote m msg Message doc docoptdoc Error usage myprogramR a r m msg file Its fixed if you place it as an optional argument r usage myprogramR a r m msg file options a Add r Remote m msg Message doc docoptdoc List of a logi FALSE r logi FALSE m NULL file NULL a logi FALSE r logi FALSE m NULL file NULL NULL Heres the most MWE r usage myprogramR file doc docoptdoc Error usage myprogramR file Session Information devtoolssessioninfo Session info setting value version R version system x darwin ui RStudio language EN collate enUSUTF tz AmericaLosAngeles date Packages package version date source devtools CRAN R digest CRAN R docopt CRAN R magrittr CRAN R memoise CRAN R stringi CRAN R stringr CRAN R withr cran doc Usage demo options x y z Options h help i invert strdocoptdocoptdocargs Results in an error because it tries to treat and as options doc Usage demo options x y z Options h help i invert strdocoptdocoptdocargs Works just fine but requires that be used even when there are no options provided which is annoying In the python version of docopt there is an optionsfirst parameter to docopt Can this be exposedimplemented in R This is likely related to R doc prog Usage prog fooX barY doc prog Usage prog options fooX barY This call errors as expected R strdocoptdocoptdoc foobar strict TRUE Error usage prog fooX barY This call succeeds as expected R strdocoptdocoptdoc foobar barfoo strict TRUE List of foo chr bar bar chr foo attr class chr docopt list This call should error but doesnt R strdocoptdocoptdoc foobar strict TRUE List of foo chr bar bar list attr class chr docopt list Here are docopt docs and an optionless call results in the same outputs for all cases in the reference implementation but in the R package one of the docs results in list instead of NULL Case R doc prog Usage prog fooX barX strdocoptdocoptdoc strict TRUE List of foo NULL bar NULL attr class chr docopt list Case R doc prog Usage prog fooX barX Options fooX some description barX some other description strdocoptdocoptdoc strict TRUE List of foo NULL bar NULL attr class chr docopt list Case R doc prog Usage prog options fooX barX strdocoptdocoptdoc strict TRUE List of foo list bar list attr class chr docopt list Case R doc prog Usage prog options fooX barX Options fooX some description barX some other description strdocoptdocoptdoc strict TRUE List of foo NULL bar NULL attr class chr docopt list Cases and give foo and bar as NULL Case give foo and bar as list The Python reference implementation gives null for all four cases 