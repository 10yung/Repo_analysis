Wery usefull when you want to test if the scripts wont fail to integrate in a CI pipeline Fail the build if any of the scripts fail to execute It is like running in the command line dotnet new console dryrun where you see what files are going to be created by they wont be created There is no way today to use DbUp with an SSL secured connection Id like to add this support to DbUp since we need it for our project The way Id like to do this is by providing a byte array of the certificate pfx file to new extension methods for Postgres The PostgresqlConnectionManager class will set the callback function for handling the certificate This would be a breaking change It would be great to get a dbupcockroachdb project created to allow dbup to be used with cockroachdb Although its based on PostgreSQL DbUpPostgreSQL does not work out of the box with cockroachdb and requires a few changes Not sure if this is something which you would prefer was added to the dbup repo or done in one of my public repos If your happy to add it then im more than happy to open a PR unless you fancy doing it your self otherwise im happy to do this independently of the main repo Thanks With NET Core we can now create projects using the dotnet cli That could be interesting to be able to create new projects using predefined templates mostly for ASPNET Core projects Using attempting to upgrade from sql files via dir path when attempting to do update on a new empty pgsql database I receive the Journal table does not exist error My c code var upgrader DeployChangesToPostgresqlDatabaseconfigGetConnectionStringDefaultConnection public WithScriptsFromFileSystemmartenPatchDirParsedValue JournalToPostgresqlTablepublic SchemaVersions LogToConsole Build var result upgraderPerformUpgrade Im looking at implementing DbUp in an existing project with stored procs views and functions that have drop and create statements Unfortunately some run fine while others run into the exception SqlException x Incorrect syntax near and I cant find where the issue is in the script These scripts run fine asis when executing in SSMS against MSSQL Its very odd because some SQL file scripts will drop create just fine however others will fail on various places such as parameter inputs or at inner joins For example the below script in sptest sql if I comment out all of the INNER JOINs the script will run just fine Ive combed through the documentation however havent been able to find if Im missing a configuration option Thus far none of our migration scripts have not run into this issue sptest sql sql CREATE OR ALTER PROCEDURE sptest State nvarchar City nvarchar AS BEGIN SELECT CustomerID FROM SELECT DISTINCT c CustomerID FROM SalesLT Customer c INNER JOIN SalesLT CustomerAddress ca ON ca CustomerID c CustomerID INNER JOIN SalesLT Address a ON a AddressID ca AddressID WHERE jState State AS T END GO Programcs excerpt csharp var upgrader DeployChangesTo SqlDatabaseconnectionString WithScriptsEmbeddedInAssemblyAssemblyGetExecutingAssembly s sStartsWithConsoleApp Scripts StringComparisonOrdinalIgnoreCase LogToConsole JournalToSqlTabledbo SchemaVersions WithTransaction Build var storedProcUpgrader DeployChangesTo SqlDatabaseconnectionString WithScriptsEmbeddedInAssemblyAssemblyGetExecutingAssembly s sStartsWithConsoleApp AlwaysRun StringComparisonOrdinalIgnoreCase LogToConsole JournalTonew NullJournal WithTransaction Build Console Log powershell Beginning transaction Beginning database upgrade Checking whether journal table exists Fetching list of already executed scripts No new scripts need to be executed completing Beginning transaction Beginning database upgrade Executing Database Server script ConsoleApp AlwaysRunSQLQuery sql SQL exception has occured in script ConsoleApp AlwaysRunSQLQuery sql Script block number Block line Message sptest SystemDataSqlClientSqlException x Incorrect syntax near at SystemDataSqlClientSqlConnectionOnErrorSqlException exception Boolean breakConnection Action wrapCloseInAction at SystemDataSqlClientSqlInternalConnectionOnErrorSqlException exception Boolean breakConnection Action wrapCloseInAction at SystemDataSqlClientTdsParserThrowExceptionAndWarningTdsParserStateObject stateObj Boolean callerHasConnectionLock Boolean asyncClose at SystemDataSqlClientTdsParserTryRunRunBehavior runBehavior SqlCommand cmdHandler SqlDataReader dataStream BulkCopySimpleResultSet bulkCopyHandler TdsParserStateObject stateObj Boolean dataReady at SystemDataSqlClientSqlCommandRunExecuteNonQueryTdsString methodName Boolean async Int timeout Boolean asyncWrite at SystemDataSqlClientSqlCommandInternalExecuteNonQueryTaskCompletionSource completion String methodName Boolean sendToPipe Int timeout Boolean usedCache Boolean asyncWrite Boolean inRetry at SystemDataSqlClientSqlCommandExecuteNonQuery at DbUpSupportScriptExecutorExecuteNonQueryIDbCommand command at DbUpSupportScriptExecutorcDisplayClass Executeb at DbUpSqlServerSqlScriptExecutorExecuteCommandsWithinExceptionHandlerInt index SqlScript script Action excuteCommand ClientConnectionId e b f eb e fc d a efb Error Number State Class DB exception has occured in script ConsoleApp AlwaysRunSQLQuery sql Script block number Message Incorrect syntax near at SystemDataSqlClientSqlConnectionOnError packagesconfig xml xml version encodingutf packages package iddbup version targetFrameworknet package iddbupcore version targetFrameworknet package iddbupsqlserver version targetFrameworknet packages Sample connstring for MSSQL config connectionStringServerlocalhost sqlexpressDatabaseAdventureWorksLT Trustedconnectiontrue When using dbup v if a statement contains the word delimiter then the word and the following word are dropped from the statement This causes a problem if the word occurs in a string thats being inserted or updated for example See the unit test below This was not an issue in v Expecting Some text with delimiter in it to be written to the database but what actually gets written is Some text with it Fact public void DoesNotParseOutTheWordDelimiterWhenItsInAString var multiCommand USE test multiCommand CREATE TABLE IF NOT EXISTS FOO multiCommand EnvironmentNewLine multiCommand DELIMITER multiCommand EnvironmentNewLine multiCommand CREATE TABLE ZIP multiCommand EnvironmentNewLine multiCommand CREATE TABLE IF NOT EXISTS BAR multiCommand EnvironmentNewLine multiCommand INSERT INTO mytabledescription VALUES Some text with delimiter in it var connectionManager new MySqlConnectionManagerconnectionstring var result connectionManagerSplitScriptIntoCommandsmultiCommand var enumerable result as string resultToArray enumerableLengthShouldBe enumerable IndexOfDELIMITER StringComparisonOrdinalShouldBe enumerable IndexOfDELIMITER StringComparisonOrdinalShouldBe enumerable IndexOfDELIMITER StringComparisonOrdinalShouldBe enumerable IndexOfDELIMITER StringComparisonOrdinalIgnoreCaseShouldBeGreaterThan TO DO write this summary properly Uses the MicrosoftSqlServerDacFx package to parse script contents to split to commands Updates the SQL Server package frameworks through necessity required by the DacFx package Duplicates unit tests because existing SqlCommandSplitter tests arent valid SQL Resolves Following up on Please let me know if this format works for you droyad Ill be happy to adjust if needed Thanks