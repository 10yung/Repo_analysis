 says A source file consists of in order License or copyright information if present Package statement Import statements Exactly one toplevel class Exactly one blank line separates each section that is present But googlejavaformat does not add the blank line between a License section and a package statement Please have a look at the following two unit tests which should both work but only the second does Test public void testCharaterRangesFormatWithAnnotation throws Exception final String text package foo public class Bar n SuppressWarnings unchecked n some comment n public void doSomethingString arg Systemoutprintln Hello World public boolean doSomethingElseObject obj return false final String expected package foo n n public class Bar n START this should not be formatted SuppressWarnings unchecked n some comment n public void doSomethingString arg Systemoutprintln Hello World n END this should not be formatted n public boolean doSomethingElseObject obj n return false n n n CollectionRangeInteger characterRanges new ArrayList characterRangesaddRangeopen characterRangesaddRangeopen Formatter formatter new FormatterJavaFormatterOptionsbuilderstyleJavaFormatterOptionsStyleGOOGLEbuild String actual formatterformatSourcetext characterRanges AssertassertEqualsFormatting should change the code expected actual Test public void testCharaterRangesFormatWithoutAnnotation throws Exception final String text package foo public class Bar n SuppressWarnings unchecked n some comment n public void doSomethingString arg Systemoutprintln Hello World public boolean doSomethingElseObject obj return false final String expected package foo n n public class Bar n SuppressWarnings unchecked n START this should not be formatted some comment n public void doSomethingString arg Systemoutprintln Hello World n END this should not be formatted n public boolean doSomethingElseObject obj n return false n n n CollectionRangeInteger characterRanges new ArrayList characterRangesaddRangeopen characterRangesaddRangeopen Formatter formatter new FormatterJavaFormatterOptionsbuilderstyleJavaFormatterOptionsStyleGOOGLEbuild String actual formatterformatSourcetext characterRanges AssertassertEqualsFormatting should change the code expected actual When I run those tests I get this as an result Failures FormatterTesttestCharaterRangesFormatWithAnnotation Formatting should change the code expectedingsunchecked some comment public void doSomethingString arg Systemoutprintln but wasingsunchecked some comment public void doSomethingString arg Systemoutprintln Tests run Failures Errors Skipped It seems there is an issue when there is an annotation before a comment or a method it seems the formatter is formatting code outside of the given character range Regards Fabian While not Googles style several other companies and projects prefer longer line length than chars My current team evaluated googlejavaformat and the most contention issue was the line length being too short I feel like the majority of the value of the formatter has been lost over this one point For programmers with wider monitors more and more common these days the char line limit results in a lot of wasted space The main benefits of the shorter line length seem to be for people looking at two pages of code side by side However this is not a frequent activity and code is normally viewed one page width at a time I dont think the line length that googlejavaformat uses needs to be general purpose I propose as a strawman Popular projects such as Spring and Netty use chars GitHub adds a horizontal scrollbar after too I think such projects would be much more amenable to using this formatter if there was a longlines option similar to the aosp option The annotation is wrong for the Java file but this is a compiling small reproducing case The following file complains about syntax errors java package foo import groovytransformCompileStatic Created import javautilArrayList Created CompileStatic public class Broken ArrayList list I am running googlejavaformat on a Windows machine When I provide it a file with the file syntax containing a list of files to format it will fail to format files that contain a space in the path Example type fileslst C path with a space Somejava java jar googlejavaformatjar fileslst Skipping nonJava file C path with a space Somejava could not read file space Somejava Placing doublequotes around the path does not work either It does however handle passing in the filenames in the command string provided they are surrounded by doublequotes eg java jar googlejavaformatjar C path with a space Somejava I created a GitHub action in order to check my code with your standalone jar I wanted to ask before publishing it in the GitHub marketplace whether this violates your license or whatever I hoped avoiding the name google in the actions name should be enough Repro Load the pomxml file in IntelliJ Attempt to run tests inside IntelliJ Observe Informationjava An exception has occurred in the compiler Please file a bug against the Java compiler via the Java bug reporting page after checking the Bug Database for duplicates Include your program and the following diagnostic in your report Thank you Informationjava at comsuntoolsjavacmainMaincompileMainjava Informationjava at comsuntoolsjavacapiJavacTaskImpldoCallJavacTaskImpljava Informationjava at comsuntoolsjavacapiJavacTaskImplcallJavacTaskImpljava Informationjava at orgjetbrainsjpsjavacJavacMaincompileJavacMainjava Informationjava at orgjetbrainsjpsincrementaljavaJavaBuildercompileJavaJavaBuilderjava Informationjava at orgjetbrainsjpsincrementaljavaJavaBuildercompileJavaBuilderjava Informationjava at orgjetbrainsjpsincrementaljavaJavaBuilderdoBuildJavaBuilderjava Informationjava at orgjetbrainsjpsincrementaljavaJavaBuilderbuildJavaBuilderjava Informationjava at orgjetbrainsjpsincrementalIncProjectBuilderrunModuleLevelBuildersIncProjectBuilderjava Informationjava at orgjetbrainsjpsincrementalIncProjectBuilderrunBuildersForChunkIncProjectBuilderjava Informationjava at orgjetbrainsjpsincrementalIncProjectBuilderbuildTargetsChunkIncProjectBuilderjava Informationjava at orgjetbrainsjpsincrementalIncProjectBuilderbuildChunkIfAffectedIncProjectBuilderjava Informationjava at orgjetbrainsjpsincrementalIncProjectBuilderbuildChunksIncProjectBuilderjava Informationjava at orgjetbrainsjpsincrementalIncProjectBuilderrunBuildIncProjectBuilderjava Informationjava at orgjetbrainsjpsincrementalIncProjectBuilderbuildIncProjectBuilderjava Informationjava at orgjetbrainsjpscmdlineBuildRunnerrunBuildBuildRunnerjava Informationjava at orgjetbrainsjpscmdlineBuildSessionrunBuildBuildSessionjava Informationjava at orgjetbrainsjpscmdlineBuildSessionrunBuildSessionjava Informationjava at orgjetbrainsjpscmdlineBuildMainMyMessageHandlerlambdachannelRead BuildMainjava Informationjava at orgjetbrainsjpsserviceimplSharedThreadPoolImpllambdaexecuteOnPooledThread SharedThreadPoolImpljava Informationjava at javautilconcurrentExecutorsRunnableAdaptercallExecutorsjava Informationjava at javautilconcurrentFutureTaskrunFutureTaskjava Informationjava at javautilconcurrentThreadPoolExecutorrunWorkerThreadPoolExecutorjava Informationjava at javautilconcurrentThreadPoolExecutorWorkerrunThreadPoolExecutorjava Informationjava at javalangThreadrunThreadjava Informationjava at comsuntoolsjavacmainMaincompileMainjava Informationjava more Informationjava Errors occurred while compiling module googlejavaformat Informationjavac was used to compile java sources Information Build completed with errors and warning in s ms Errorjava javalangRuntimeException javalangNoSuchMethodError comsuntoolsjavacutilJavacMessagesaddLcomsuntoolsjavacutilJavacMessagesResourceBundleHelperV Errorjava Caused by javalangNoSuchMethodError comsuntoolsjavacutilJavacMessagesaddLcomsuntoolsjavacutilJavacMessagesResourceBundleHelperV Errorjava at comgoogleerrorproneBaseErrorProneJavaCompilersetupMessageBundleBaseErrorProneJavaCompilerjava Errorjava at comgoogleerrorproneErrorProneJavacPlugininitErrorProneJavacPluginjava System information Things to note mvn install succeeds in building GJF The IntelliJ project was created from pomxml Workaround The problem goes away if I remove the compiler parameters in IntelliJ bottom of Settings Build Execution Deployment Compiler Java Compiler Googlejavaformatdiff expects an executable googlejavaformat link but this repository does not contain such file This PR explains how to create such executable in READMEmd Hi seems like I found an indentation bomb Happend to try to format OdfManifestSaxHandlerjava Rev and always failed with OutOfMemoryError tried up to G of heap space Original file is kB Output of formatter would be approximately GB Smaller test case which could be handled would be Input class X javadoc public void fooBar bar javadoc public void fooBar bar javadoc public void fooBar bar javadoc public void fooBar bar Output each represents space characters class X javadoc public void fooBar bar javadoc public void fooBar bar javadoc public void fooBar bar javadoc public void fooBar bar These outdated links cause build warnings