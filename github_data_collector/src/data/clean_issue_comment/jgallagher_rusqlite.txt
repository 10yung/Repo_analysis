 echedeydebianpi b git clone Clonando en rusqlite remote Enumerating objects done remote Counting objects done remote Compressing objects done remote Total delta reused delta packreused Recibiendo objetos MiB KiBs listo Resolviendo deltas listo echedeydebianpi b cd rusqlite echedeydebianpi brusqlite cargo build echedeydebianpi brusqlite cargo build Updating cratesio index error process didnt exit successfully rustc vV signal SIGSEGV invalid memory reference stdout rustc e binary rustc commithash e aae f a ffa a ac f c cf commitdate host aarch unknownlinuxgnu release My table has columns included the UNIQUE id I have problems with INSERT as whenever I try to insert all values id is excluded I get a compile error which I believe is due to a limit in the number of values sent in a single execute with params values values My question is is there a safe way to increase the limit of values processed Note SELECT has no problem retrieving all columns For example all the named vs the nonnamed functions on In mozillaapplicationservices we even have a extension trait which existsstarted mainly as a way to get more methods for named variants also cached and such Really this is probably my biggest complaint about rusqlites API I dont really have a solution the ones Ive thought of all hit coherence issues or restrict the API in ways I wouldnt want to give up but it seems like it should have an issue on file since its a pain for maintenance Its probably worth investigating what other nonorm and nonmacro SQL crates do Im trying to compile rusqlite to WebAssembly However Clang throws this error when targeting wasm unknownunknown cargo build targetwasm unknownunknown rusqlite version features bundled In file included from sqlite sqlite c usrincludepthreadh error regparm is not valid on this platform cleanupfctattribute details summaryFull logsummary log running clang Os ffunctionsections fdatasections fPIC targetwasm unknownunknown Wall Wextra DSQLITECORE DSQLITEDEFAULTFOREIGNKEYS DSQLITEENABLEAPIARMOR DSQLITEENABLECOLUMNMETADATA DSQLITEENABLEDBSTATVTAB DSQLITEENABLEFTS DSQLITEENABLEFTS PARENTHESIS DSQLITEENABLEFTS DSQLITEENABLEJSON DSQLITEENABLELOADEXTENSION DSQLITEENABLEMEMORYMANAGEMENT DSQLITEENABLERTREE DSQLITEENABLESTAT DSQLITEENABLESTAT DSQLITEHAVEISNAN DSQLITESOUNDEX DSQLITETHREADSAFE DSQLITEUSEURI DHAVEUSLEEP o targetwasm unknownunknownreleasebuildlibsqlite syscde d ff e outsqlite sqlite o c sqlite sqlite c sqlite sqlite c warning unused parameter id Wunusedparameter SQLITEPRIVATE int sqlite OsFetchsqlite file id i iOff int iAmt void pp sqlite sqlite c warning unused parameter iOff Wunusedparameter SQLITEPRIVATE int sqlite OsFetchsqlite file id i iOff int iAmt void pp sqlite sqlite c warning unused parameter iAmt Wunusedparameter SQLITEPRIVATE int sqlite OsFetchsqlite file id i iOff int iAmt void pp sqlite sqlite c warning unused parameter id Wunusedparameter SQLITEPRIVATE int sqlite OsUnfetchsqlite file id i iOff void p sqlite sqlite c warning unused parameter iOff Wunusedparameter SQLITEPRIVATE int sqlite OsUnfetchsqlite file id i iOff void p sqlite sqlite c warning unused parameter p Wunusedparameter SQLITEPRIVATE int sqlite OsUnfetchsqlite file id i iOff void p In file included from sqlite sqlite c usrincludepthreadh error regparm is not valid on this platform cleanupfctattribute usrincludebitspthreadtypesarchh note expanded from macro cleanupfctattribute define cleanupfctattribute attribute regparm In file included from sqlite sqlite c usrincludepthreadh error regparm is not valid on this platform cleanupfctattribute usrincludebitspthreadtypesarchh note expanded from macro cleanupfctattribute define cleanupfctattribute attribute regparm In file included from sqlite sqlite c usrincludepthreadh error regparm is not valid on this platform cleanupfctattribute usrincludebitspthreadtypesarchh note expanded from macro cleanupfctattribute define cleanupfctattribute attribute regparm In file included from sqlite sqlite c usrincludepthreadh error regparm is not valid on this platform cleanupfctattribute usrincludebitspthreadtypesarchh note expanded from macro cleanupfctattribute define cleanupfctattribute attribute regparm In file included from sqlite sqlite c usrincludepthreadh error regparm is not valid on this platform cleanupfctattribute attribute noreturn usrincludebitspthreadtypesarchh note expanded from macro cleanupfctattribute define cleanupfctattribute attribute regparm sqlite sqlite c warning unused parameter fd Wunusedparameter static int unixFetchsqlite file fd i iOff int nAmt void pp sqlite sqlite c warning unused parameter iOff Wunusedparameter static int unixFetchsqlite file fd i iOff int nAmt void pp sqlite sqlite c warning unused parameter nAmt Wunusedparameter static int unixFetchsqlite file fd i iOff int nAmt void pp sqlite sqlite c warning unused parameter pPager Wunusedparameter static void pagerFixMaplimitPager pPager sqlite sqlite c warning unused parameter argc Wunusedparameter int argc sqlite sqlite c warning unused parameter pAux Wunusedparameter void pAux sqlite sqlite c warning unused parameter tab Wunusedparameter static int statBestIndexsqlite vtab tab sqlite indexinfo pIdxInfo sqlite sqlite c warning unused parameter idxStr Wunusedparameter int idxNum const char idxStr sqlite sqlite c warning unused parameter argc Wunusedparameter int argc sqlite value argv warnings and errors generated details its since and later gives us colUsed in sqlite indexinfo struct its a bitmask of column used in query That could potentialy improve some vtabs implementations if I know I dont need some largehard to compute column I can skip If you have a crate that involves a lot of unsafe code you might consider adding Miri to your CI configuration We do have a lot of unsafe code miri can detect some types of UB caused by unsafe code at runtime cargo miri test runs all of your tests under miri This avoids annoying wrong indentation when people use tabs in their editors like they are supposed to speaknoevil I cloned this repo and tried to build libsqlite sys but I get this error sh cargo check Updating cratesio index Compiling libsqlite sys v D rdparty rusqlite libsqlite sys error couldnt read D rdparty rusqlite target debug build libsqlite sys ac c badfd a outbindgenrs The system cannot find the path specified os error libsqlite sys src librs includeconcatenvOUTDIR bindgenrs error aborting due to previous error error could not compile libsqlite sys To learn more run the command again with verbose Im on Windows I have this in my cargoconfig toml targetx pcwindowsmsvcsqlite rustclinksearch D rustlibs x rustclinklib sqlite When I remove this libsqlite sys builds but for my own crate that depends on libsqlite sys through diesel I get LINK fatal error LNK cannot open input file sqlite lib But when I have that part of cargoconfig I get the first error when building my crate Whats the correct way And how can I choose between static and dynamic linking Following the explanations from SQLites recommended compiletime options this adds a Cargo feature to libsqlitesys so that the bundled SQLite can be better tailored to the specific needs of rusqlite The feature is enabled by default and rusqlite does explicitly not request it so that if any other crate pulls libsqlitesys into the dependency no features are removed As a first step this commit adds SQLITEOMITPROGRESSCALLBACK as rusqlite does not use sqlite progresshandler and sets SQLITEDEFAULTMEMSTATUS to as rusqlite does not use sqlite status