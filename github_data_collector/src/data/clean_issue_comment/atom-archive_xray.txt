Hi there With the recent merger within the last year I am very curious about the ongoing status of the xray experiment Keyboard shortcut was changed to altcmdi instead of cmdshifti Screen Shot at Firstly I think this project looks really promising kudos to the team I was wondering if we could potentially use xray on a thinclient while the xray core server could be installed remotely xray packages extensions language servers etc all installed remotely Source files and dependencies would also reside in the server However the UX on the client feels as if everything is running locally This would obviously require an integrated terminal which is also fed from the one available on the machine xray core server is installed at Sort of like a cloud IDE except completely hackable and configurable I got a sense from the architecture diagram that maybe you guys already have something like this in mind beside realtime collaboration I mean like a Single player mode would be nice I think this would eliminate so many issues teams face Like having to stick to certain hardware for their employees configurations and setting each one up then fixing stability issues every now and then It would be nice to simply give everyone a cloud instance running xray and any decent laptop where they could use the xray client This would also make learning Vim or emacs for working over ssh unnecessary and we can finally have a nice remote development experience It will also be significantly cheaper and much easier to keep upto date Thoughts close How to reproduce build run RUSTBACKTRACE XRAYSRCPATH scriptxray open xrayuilibappjs with the editor then panic occurs thread main panicked at index out of bounds the len is but the index is libcoreslicemodrs stack backtrace stdsysunixbacktracetracingimpunwindbacktrace stdsyscommonbacktraceprint stdpanickingdefaulthookclosure stdpanickingdefaulthook stdpanickingrustpanicwithhook stdpanickingcontinuepanicfmt rustbeginunwind corepanickingpanicfmt corepanickingpanicboundscheck xraycorebufferviewBufferView as xraycorewindowViewrender xraycorewindowWindowUpdateStream as futuresstreamStreampoll futuresstreammapMapS F as futuresstreamStreampoll futuressinksendallSendAllT U as futuresfutureFuturepoll futuresfuturechainChainA B Cpoll futurestaskimplstdset futurestaskimplSpawnTpollfuturenotify tokioexecutorcurrentthreadCurrentRunnersetspawn tokioexecutorcurrentthreadschedulerSchedulerUtick scopedtlsScopedKeyTset stdthreadlocalLocalKeyTwith stdthreadlocalLocalKeyTwith stdthreadlocalLocalKeyTwith tokiocorereactorCorepoll xrayservermain stdrtlangstartclosure stdpanickingtrydocall rustmaybecatchpanic stdrtlangstartinternal main Building on macOS Mojave on a MacBook Pro with Touchbar sh XRAYSRCPATH RUSTBACKTRACE scriptxray thread main panicked at index out of bounds the len is but the index is Userstravisbuildrustlangrustsrclibcoreslicemodrs note Run with RUSTBACKTRACE for a backtrace sh node version v sh rustc version rustc nightly b fd sh nvm list v v system default node v node stable v default stable v default iojs NA default lts ltscarbon NA ltsargon v NA ltsboron v NA ltscarbon v NA Maybe Im missing something obvious but is there an API or plans for an API to be notified of changes to the work tree In particular if the work tree gets modified due to remote ops being applied how do I learn when that happens and what has changed When I change a file the file entry status remains Unchanged I can t tell if a file has been modified unless we compare it to the original file contents Is this something that could be added to the API I don t think it s possible to undo a file deletion Would it be possible to let users do something like that Adds a clippoint function in xraycoresrcbufferrs Resolves clipping related TODOs in xraycoresrcbufferviewrs