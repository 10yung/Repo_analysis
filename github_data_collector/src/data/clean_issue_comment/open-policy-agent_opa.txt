Hi I am working on a idea and in that i am facing one issue about security Then i started googling about that problem then i came to know that may be openpolicy agent may fit So posting my thoughts over here Idea I have some classified data along with url and now i am trying to publish that data on a public social group which is organization based like yammer Microsoft teams Issue When a user clicking on a particular url then i am not able to validate the authenticity of the user before redirecting to the page Expectation I want that when a user click on that particular url then i want to check the authenticity of that user if it a valid user then i will redirect to that url otherwise through an error For this usecase can i take the advantage of openpolicy agent if yes then how Any lead will be appreciated Thanks Expected Behavior If configuring a ready check for OPA using healthbundletrue and a discovery service that requires a bundle to be downloaded and then additional normal bundles I expect that it wouldnt return true until after all the bundles are activated for the first time Actual Behavior The ready check including bundles healthbundletrue doesnt account for discovery bundles or bundles found after discovery Steps to Reproduce the Problem Run OPA with a bad discovery config so it can never download a discovery bundle opa run set serviceslocalurl set discoveryservicelocal set discoverynamelocal s Curl OPAs health endpoint curl v localhost healthbundletrue Observe a OK response Steps to reproduce This problem can reproduced simply with nc For example nc l localhost GET foo HTTP In a separate terminal start opa and point it at the server opa run s set servicestesturl set bundlestestresourcefoo addrs insecureaddrlevelinfomsgInitializing servertime T levelinfomsgStarting bundle downloadernametestpluginbundletime T netcat will print the request but not send any response OPA will continue waiting indefinitely because there is no timeout set on the HTTP request Solution This page does a good job of explaining how the various client timeouts can be set OPA should be updated to set the ClientDo timeout which I think means cancelling the context Note we do not want to set default timeouts on reading the full response since thatll cause problems for users with large bundles It should be safe to assume that OPA starts receiving HTTP headers on the order of seconds eg seconds is probably a safe default Initially users should be able to configure the timeout on the service object For example services test url responseheadertimeoutseconds When running OPA in server mode and evaluating policies via HTTP I am getting the test results back for each decision I would like the decision results to not contain the test output because my calling application would never need to use this data and it takes up more size on the response than the decision result itself As more tests are written for the policy the output is growing for each decision result Maybe when creating a bundle I wasnt supposed to add the tests I assumed that bundling the tests is a good thing to allow opa to self test when it starts up Is there a config option to hide the results Thank you Steps to reproduce authzrego package something default allow false allow admin inputrole testauthzrego package something testallowedbecauseadmin allow with input as role admin Build Bundle tar czvf buildopabundletargz Starting OPA opa run s b buildopabundletargz Execute the policy curl X POST data input role admin HTTP Response contains test output resultallowtruetestallowedbecauseadmintrue Unlike the generic Walk implementation they dont necessitate allocating the visitor itself from heap Benchmarks changed benchmark old allocs new allocs delta BenchmarkScheduler x BenchmarkLargeJSON BenchmarkConcurrency BenchmarkConcurrency BenchmarkConcurrency BenchmarkConcurrency BenchmarkConcurrency Readers Writer BenchmarkConcurrency Writers BenchmarkPartialEvalCompile BenchmarkPartialEvalCompile BenchmarkPartialEvalCompile BenchmarkPartialEvalCompile BenchmarkWalk BenchmarkWalk BenchmarkWalk BenchmarkWalk BenchmarkInliningFullScan BenchmarkInliningFullScan BenchmarkInliningFullScan Signedoffby Teemu Koponen koponenstyracom Thanks for submitting a PR to OPA Before pressing Create pull request please read the checklist below All code changes should be accompanied with tests If you are not modifying any tests just provide a short explanation of why updates to tests are not necessary In addition to helping catch bugs tests are extremely helpful in providing context that explains how your changes can be used All changes to public APIs must be accompanied with docs Examples of public APIs include builtin functions config fields and of course exported Go typesfunctionsconstantsetc Commit messages should explain why you made the changes not what you changed Use active voice Keep the subject line under characters or so All commits must be signed off by the author If you are not familiar with signing off see CONTRIBUTINGmd below For more information on contributing to OPA see CONTRIBUTINGmd for highlevel contribution guidelines DEVELOPMENTmd for development workflow and environment setup There was a typo from a while back that caused problems with this It would only occur in cases where the Rego object was created without tracers prepared and then partially evaluated with tracers supplied as part of the evaluation context Any of the other code paths would actually work as the original Rego object would still have them and the wrong reference wouldnt cause a panic At some point more recently we changed opa eval to split up its options for the Rego object and evaluation Doing this caused the problem to surface when doing anything with opa eval p explain Fixes Signedoffby Patrick East eastpatrickgmailcom Thanks for submitting a PR to OPA Before pressing Create pull request please read the checklist below All code changes should be accompanied with tests If you are not modifying any tests just provide a short explanation of why updates to tests are not necessary In addition to helping catch bugs tests are extremely helpful in providing context that explains how your changes can be used All changes to public APIs must be accompanied with docs Examples of public APIs include builtin functions config fields and of course exported Go typesfunctionsconstantsetc Commit messages should explain why you made the changes not what you changed Use active voice Keep the subject line under characters or so All commits must be signed off by the author If you are not familiar with signing off see CONTRIBUTINGmd below For more information on contributing to OPA see CONTRIBUTINGmd for highlevel contribution guidelines DEVELOPMENTmd for development workflow and environment setup The current OPA health check endpoint only checks query evaluation and bundle activation status There is no way for other plugins to provide health check information without recompile from source An enhancement can be made to OPA that allows plugins to provide health information This is useful when a plugin needs to initialize some seed data and doesnt want an application to query it before it is ready I have two implementation idea provide a checker object that plugin author can register a health function to it The health handler will iterate through the function The API could be similar to this project add a new method interface to the current Plugin interface The plugin user can implement this method to return the current plugin status Currently OPA reports the timestamp of the last successful bundle download and bundle activation via the Status API Status API implementations may also wish to know the last time OPA successfully attempted to refresh the bundle ie in this case the bundle server replied with HTTP docker run openpolicyagentopa eval p explainfull data panic runtime error index out of range goroutine running githubcomopenpolicyagentoparegoRegopartial xc b x b xc a xc dc x x x srcregoregogo xbf githubcomopenpolicyagentoparegoPreparedPartialQueryPartial xc b xc ca x b xc a xc e x x x x x srcregoregogo x githubcomopenpolicyagentopacmdeval xc e x x x xc d x x x c x x srccmdevalgo xe githubcomopenpolicyagentopacmdinit func xc c xc e x x srccmdevalgo xde githubcomspf cobraCommandexecute xc c xc x x xc c xc srcvendorgithubcomspf cobracommandgo x ae githubcomspf cobraCommandExecuteC x c x c xc bff x d f srcvendorgithubcomspf cobracommandgo x ec githubcomspf cobraCommandExecute srcvendorgithubcomspf cobracommandgo mainmain srcmaingo x The current guide doesnt really explain what all can or cannot be done with OPA policies and Terraform plans There are notably a few areas that are not easily covered by policies due to the information available at the time the JSON plan is generated Expressions Builtin functions in the plan may not have been evaluated yet especially tricky are unknown values dynamic blocks and function calls It is probably worth noting in the docs update how Sentinel handles or not these sort of things to ensure users have a good idea of what limitations there are with the different solutions and enforcing policies on terraform plans in general