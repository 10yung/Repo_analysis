 Information Version I have created a User entity with TypeORM adding the property IgnoreProperty to my password field and when I call my custom repository it keeps showing them to me also I have tried to use ConverterService according to the documentation and the same I have also tried to create a separate class called UserDTOts only with the properties and the same keeps showing me the password field Example import IgnoreProperty Required from tsedcommon import Description from tsedswagger import Column CreateDateColumn Entity PrimaryGeneratedColumn Unique from typeorm import Exclude from classtransformer Entity Unique username email export class User DescriptionDatabase assigned id PrimaryGeneratedColumn id number DescriptionUser username Column Required username string DescriptionUser email Column Required email string DescriptionUser image Column nullable true image string DescriptionUser first name Column Required firstName string DescriptionUser last name Column Required lastName string DescriptionUser password IgnoreProperty Exclude Columnlongtext Required password string DescriptionUser country Column nullable true country string DescriptionUser license Column license string IgnoreProperty Exclude Column default enabled boolean DescriptionRoles data Column type json nullable true roles object DescriptionUser created date CreateDateColumn createdAt Date My solution has been to add to Entity import Exclude from classtransformer Exclude Required password string import plainToClass from classtransformer const user User await getCustomRepositoryUserRepositoryfindOneid const userDto User plainToClassUser user For the following model typescript class Model Required Allownull public types string null when the request pass types null it did not pass the validation How can I handle that Informations Is your feature request related to a problem Please describe Im trying to set in swagger to produce a file on But cannot find if this is possible Describe the solution youd like Returns description on success type File Producesapplicationoctetstream public async downloadFile which will produce json responses description on success schema type file produces applicationoctetstream Information Version Packages tsedcommon tsedcore tseddi tsedsocketio tsedswagger tsedtesting tsedtypeorm bcrypt bodyparser compression cookieparser express expresssession methodoverride mysql pg securepassword servestatic socketio sodiumnative tshttpexceptions twig typeorm Ive been a while without using TSED now Im back to take a project I have started that worked before and now it doesnt work Errors T ERROR TSED srcServiceUsersServicets error TS Type importGwwwapinewnodemodulest sedtypeormnodemodulestypeormconnectionConnectionConnection is not assignable to type importGwwwapinewnodemodulestype ormconnectionConnectionConnection Types of property options are incompatible Type importGwwwapinewnodemodulestsedtypeormnodemodulestypeormconnectionConnectionOptionsConnectionOptions is no t assignable to type importGwwwapinewnodemodulestypeormconnectionConnectionOptionsConnectionOptions Type MysqlConnectionOptions is not assignable to type ConnectionOptions Type importGwwwapinewnodemodulestsedtypeormnodemodulestypeormdrivermysqlMysqlConnectionOptionsMysqlConnecti onOptions is not assignable to type importGwwwapinewnodemodulestypeormdrivermysqlMysqlConnectionOptionsMysqlConnectionO ptions Types of property entities are incompatible Type string Function importGwwwapinewnodemodulestsedtypeormnodemodulestypeormentityschemaEntitySchema EntitySchemaany is not assignable to type string Function importGwwwapinewnodemodulestypeormentityschemaEntit ySchemaEntitySchemaany Type string Function importGwwwapinewnodemodulestsedtypeormnodemodulestypeormentityschemaEntitySchem aEntitySchemaany is not assignable to type string Function importGwwwapinewnodemodulestypeormentityschemaEntitySc hemaEntitySchemaany Type EntitySchemaany is not assignable to type string Function EntitySchemaany Type importGwwwapinewnodemodulestsedtypeormnodemodulestypeormentityschemaEntitySchemaEntitySchema any is not assignable to type importGwwwapinewnodemodulestypeormentityschemaEntitySchemaEntitySchemaany The types of optionsexpression are incompatible between these types Type string connection importGwwwapinewnodemodulestsedtypeormnodemodulestypeormconnectionCon nectionConnection importGwwwapinewnodemodulestsedtypeormnodemodulestypeormquerybuilderSelectQueryBuilderSelec tQueryBuilderany is not assignable to type string connection importGwwwapinewnodemodulestypeormconnectionConnection Connection importGwwwapinewnodemodulestypeormquerybuilderSelectQueryBuilderSelectQueryBuilderany Type connection Connection SelectQueryBuilderany is not assignable to type string connection Connection SelectQueryBuilderany Type connection importGwwwapinewnodemodulestsedtypeormnodemodulestypeormconnectionConnectio nConnection importGwwwapinewnodemodulestsedtypeormnodemodulestypeormquerybuilderSelectQueryBuilderSelectQuery Builderany is not assignable to type connection importGwwwapinewnodemodulestypeormconnectionConnectionConnection importGwwwapinewnodemodulestypeormquerybuilderSelectQueryBuilderSelectQueryBuilderany Types of parameters connection and connection are incompatible Type importGwwwapinewnodemodulestypeormconnectionConnectionConnection is not assignable to type importGwwwapinewnodemodulestsedtypeormnodemodulestypeormconnectionConnectionConnection Types of property options are incompatible Type importGwwwapinewnodemodulestypeormconnectionConnectionOptionsConnectionOptions is not assignable to type importGwwwapinewnodemodulestsedtypeormnodemodulestypeormconnectionConnectionOptionsConnectio nOptions Type MysqlConnectionOptions is not assignable to type ConnectionOptions Type importGwwwapinewnodemodulestypeormdrivermysqlMysqlConnectionOptionsMysqlConne ctionOptions is not assignable to type importGwwwapinewnodemodulestsedtypeormnodemodulestypeormdrivermysqlMysqlConnec tionOptionsMysqlConnectionOptions Types of property entities are incompatible Type string Function importGwwwapinewnodemodulestypeormentityschemaEntitySch emaEntitySchemaany is not assignable to type string Function importGwwwapinewnodemodulestsedtypeormnodemodul estypeormentityschemaEntitySchemaEntitySchemaany Type string Function importGwwwapinewnodemodulestypeormentityschemaEntitySc hemaEntitySchemaany is not assignable to type string Function importGwwwapinewnodemodulestsedtypeormnodemodules typeormentityschemaEntitySchemaEntitySchemaany Type EntitySchemaany is not assignable to type string Function EntitySchemaany Type importGwwwapinewnodemodulestypeormentityschemaEntitySchemaEntitySch emaany is not assignable to type importGwwwapinewnodemodulestsedtypeormnodemodulestypeormentityschemaEntitySchema EntitySchemaany The types of optionscolumns are incompatible between these types Type x string importGwwwapinewnodemodulestypeormentityschemaEntit ySchemaColumnOptionsEntitySchemaColumnOptions is not assignable to type x string importGwwwapinewnodemodulestsed typeormnodemodulestypeormentityschemaEntitySchemaColumnOptionsEntitySchemaColumnOptions Index signatures are incompatible Type importGwwwapinewnodemodulestypeormentityschemaEntitySchemaColu mnOptionsEntitySchemaColumnOptions is not assignable to type importGwwwapinewnodemodulestsedtypeormnodemodulestypeorm entityschemaEntitySchemaColumnOptionsEntitySchemaColumnOptions Types of property type are incompatible Type importGwwwapinewnodemodulestypeormdrivertypesColumnTypes ColumnType is not assignable to type importGwwwapinewnodemodulestsedtypeormnodemodulestypeormdrivertypesColumnTypes ColumnType Type smalldecimal is not assignable to type ColumnType thisconnection thistypeORMServiceget nodemon app crashed waiting for file changes before starting nodemon restarting due to changes nodemon starting tsnode srcindexts T ERROR TSED srcServiceUsersServicets error TS Type importGwwwapinewnodemodulest sedtypeormnodemodulestypeormconnectionConnectionConnection is not assignable to type importGwwwapinewnodemodulestype ormconnectionConnectionConnection Types of property options are incompatible Type importGwwwapinewnodemodulestsedtypeormnodemodulestypeormconnectionConnectionOptionsConnectionOptions is no t assignable to type importGwwwapinewnodemodulestypeormconnectionConnectionOptionsConnectionOptions Type MysqlConnectionOptions is not assignable to type ConnectionOptions Type importGwwwapinewnodemodulestsedtypeormnodemodulestypeormdrivermysqlMysqlConnectionOptionsMysqlConnecti onOptions is not assignable to type importGwwwapinewnodemodulestypeormdrivermysqlMysqlConnectionOptionsMysqlConnectionO ptions Types of property entities are incompatible Type string Function importGwwwapinewnodemodulestsedtypeormnodemodulestypeormentityschemaEntitySchema EntitySchemaany is not assignable to type string Function importGwwwapinewnodemodulestypeormentityschemaEntit ySchemaEntitySchemaany Type string Function importGwwwapinewnodemodulestsedtypeormnodemodulestypeormentityschemaEntitySchem aEntitySchemaany is not assignable to type string Function importGwwwapinewnodemodulestypeormentityschemaEntitySc hemaEntitySchemaany Type EntitySchemaany is not assignable to type string Function EntitySchemaany Type importGwwwapinewnodemodulestsedtypeormnodemodulestypeormentityschemaEntitySchemaEntitySchema any is not assignable to type importGwwwapinewnodemodulestypeormentityschemaEntitySchemaEntitySchemaany The types of optionsexpression are incompatible between these types Type string connection importGwwwapinewnodemodulestsedtypeormnodemodulestypeormconnectionCon nectionConnection importGwwwapinewnodemodulestsedtypeormnodemodulestypeormquerybuilderSelectQueryBuilderSelec tQueryBuilderany is not assignable to type string connection importGwwwapinewnodemodulestypeormconnectionConnection Connection importGwwwapinewnodemodulestypeormquerybuilderSelectQueryBuilderSelectQueryBuilderany Type connection Connection SelectQueryBuilderany is not assignable to type string connection Connection SelectQueryBuilderany Type connection importGwwwapinewnodemodulestsedtypeormnodemodulestypeormconnectionConnectio nConnection importGwwwapinewnodemodulestsedtypeormnodemodulestypeormquerybuilderSelectQueryBuilderSelectQuery Builderany is not assignable to type connection importGwwwapinewnodemodulestypeormconnectionConnectionConnection importGwwwapinewnodemodulestypeormquerybuilderSelectQueryBuilderSelectQueryBuilderany Types of parameters connection and connection are incompatible Type importGwwwapinewnodemodulestypeormconnectionConnectionConnection is not assignable to type importGwwwapinewnodemodulestsedtypeormnodemodulestypeormconnectionConnectionConnection Types of property options are incompatible Type importGwwwapinewnodemodulestypeormconnectionConnectionOptionsConnectionOptions is not assignable to type importGwwwapinewnodemodulestsedtypeormnodemodulestypeormconnectionConnectionOptionsConnectio nOptions Type MysqlConnectionOptions is not assignable to type ConnectionOptions Type importGwwwapinewnodemodulestypeormdrivermysqlMysqlConnectionOptionsMysqlConne ctionOptions is not assignable to type importGwwwapinewnodemodulestsedtypeormnodemodulestypeormdrivermysqlMysqlConnec tionOptionsMysqlConnectionOptions Types of property entities are incompatible Type string Function importGwwwapinewnodemodulestypeormentityschemaEntitySch emaEntitySchemaany is not assignable to type string Function importGwwwapinewnodemodulestsedtypeormnodemodul estypeormentityschemaEntitySchemaEntitySchemaany Type string Function importGwwwapinewnodemodulestypeormentityschemaEntitySc hemaEntitySchemaany is not assignable to type string Function importGwwwapinewnodemodulestsedtypeormnodemodules typeormentityschemaEntitySchemaEntitySchemaany Type EntitySchemaany is not assignable to type string Function EntitySchemaany Type importGwwwapinewnodemodulestypeormentityschemaEntitySchemaEntitySch emaany is not assignable to type importGwwwapinewnodemodulestsedtypeormnodemodulestypeormentityschemaEntitySchema EntitySchemaany The types of optionscolumns are incompatible between these types Type x string importGwwwapinewnodemodulestypeormentityschemaEntit ySchemaColumnOptionsEntitySchemaColumnOptions is not assignable to type x string importGwwwapinewnodemodulestsed typeormnodemodulestypeormentityschemaEntitySchemaColumnOptionsEntitySchemaColumnOptions Index signatures are incompatible Type importGwwwapinewnodemodulestypeormentityschemaEntitySchemaColu mnOptionsEntitySchemaColumnOptions is not assignable to type importGwwwapinewnodemodulestsedtypeormnodemodulestypeorm entityschemaEntitySchemaColumnOptionsEntitySchemaColumnOptions Types of property type are incompatible Type importGwwwapinewnodemodulestypeormdrivertypesColumnTypes ColumnType is not assignable to type importGwwwapinewnodemodulestsedtypeormnodemodulestypeormdrivertypesColumnTypes ColumnType Type smalldecimal is not assignable to type ColumnType thisconnection thistypeORMServiceget It gives me a lot of errors regarding types plus it cant connect to the database either I think its because of this The exact error thisconnection thistypeORMServiceget Example This code is taken from the same example repository with TypeORM typescript import Service from tsedcommon import TypeORMService from tsedtypeorm import Connection from typeorm import User from entityUser Service export class UsersService private connection Connection constructor private typeORMService TypeORMService afterRoutesInit error thisconnection thistypeORMServiceget async create user User PromiseUser await thisconnectionmanagersaveuser consolelogSaved a new user with id userid return user async find PromiseUser const users await thisconnectionmanagerfindUser consolelogLoaded users users return users async findByID id PromiseUser return thisconnectionmanagerfindOneid Information Version I am trying to refactor tests to work with TestContextcreate but the issue is that we have services and middlewares that rely on Constant values in their onIinit method and they fail when the value is not provided How can we load all of our test configurations with the new testing method Example MyServicets ts import Service OnInit Constant from tseddi Service export class MyService implements OnInit Constantobj private obj onInit void Promiseany consolelogthisobjkey MyServicetestts ts import TestContext from tsedtesting import MyService from srcservicesMyService describeMyService beforeAllTestContextcreate testonInit TestContextinvokeMyService expect toBe TypeError Cannot read property key of undefined at MyServiceonInit srcservicesMyServicets at Mapanonymous nodemodulestseddisrcclassLocalsContainerts at nodemodulestslibtslibjs at Objectawaiter nodemodulestslibtslibjs at Mapemit nodemodulestseddilibclassLocalsContainerjs at Mapanonymous nodemodulestseddisrcservicesInjectorServicets at fulfilled nodemodulestslibtslibjs Information Version x I am upgrading to latest TSED after a while away from a project I followed the doco for but the IDE couldnt find find Eg constructor InjectAvDbModel private model MongooseModelAvDbModel async searchquery AvDbModelQuery PromiseAvDbModel const data AvDbModel await thismodelfindquery And the compile failed with T ERROR TSED srcpersistenceDBAvServicets error TS Property find does not exist on type MongooseModelAvDbModel After reinstalling I saw the WARNing npm WARN tsedmongoose requires a peer of typesmongoose but none is installed You must install peer dependencies yourself And after installing typesmongoose the problem was fixed Acceptance criteria The documentation should include npm install save typesmongoose after or with npm install save tsedmongoose This template its just here to help you for write your Pull Request Informations Type Breaking change FeatureFixDocChore YesNo Description A few sentences describing the overall goals of the pull requests commits Usage example Example to use your feature and to improve the documentation after merging your PR import from tsedcommon Todos Tests Coverage Example Documentation I use tsedcommon tseddi I have server with TSED and NodeJs application separated from this server This app uses some implemented services Service decorator from TSED server I have next folder structure projectFolder appts here is ServerSettings packagejson only one packagejson In root folder src constrollers services mynodeapp I use tsnode to run TS files npm run start tsnode srcmynodeappmyappts As I said I want to use services with a lot of DI inside each service from my implemented TSED server code I dont start server and start only my app In myappts I use common TS class without decorators and use InjectService But why does it work How does injector find my services in parent folder mynodeapp tseddi Is it safe way to use services no any decorators class MyClass public init const injector new InjectorService await injectorload const myService injectorgetMyServiceMyService here I can use myService Is it AWS TSEDio without WEB API similar to my case Thanks Information I would like to have validators for query parameters like there are for body parameters Describe the solution youd like ts import Controller Get QueryParams Maximum Minimum from tsedcommon Controllertest export class TestCtrl Get testMaximum Minimum QueryParams test number Current Error ERROR TSED TypeError Cannot read property mapper of undefined Informations Im developing an application that most of the operations will be done though Socket IO using the tsedsocketio decorators but i dont want keep opening connections with many different namespace i wanted to integrate a loot of stuff in one namespace and keep it organized in the code eg What i have to do right now to make it work is Let the main socket service where itll be the connection function being the last file in the services folder on alphabetical order typescript SocketServicegame SocketUseAfterErrorHandlerSocketMiddleware export class AccountService Nspgame clientNamespace SocketIONamespace I needed to do like this on every socket service so it share the connection and the socket session between all services eg of the services Connection main service typescript import IO Socket SocketService SocketSession Input Emit Args Nsp Namespace SocketUseAfter from tsedsocketio import as SocketIO from socketio import as jwt from jsonwebtoken import PreconditionFailed from tshttpexceptions import AgentService from AgentService import ErrorHandlerSocketMiddleware from middlewaresErrorHandlerSocketMiddleware SocketServicegame SocketUseAfterErrorHandlerSocketMiddleware export class GameSocket Nspgame clientNamespace SocketIONamespace constructor Triggered when a new client connects to the Namespace onConnection Socket socket SocketIOSocket SocketSession session SocketSession const token sockethandshakequery if token try const decoded jwtverifytoken KEY as agent string if decodedagent sessionsetauthenticated true sessionsetplayerId decodedagent sessionsethasAgent true socketjoindecodedagent const agent AgentServicegetAgentdecodedagent if agent AgentServiceupdateAgentdecodedagent agent else throw new PreconditionFailedHas to login else sessionsetauthenticated false catch error throw new PreconditionFailedInvalid JWT else sessionsetauthenticated false Triggered when a client disconnects from the Namespace onDisconnect Socket socket SocketIOSocket SocketSession session SocketSession try socketleaveAll catch error consoleerrorerror Another service using the same namespace typescript import Agent from modelsAgent import SocketService Nsp SocketUseAfter SocketUseBefore Input Socket SocketSession Args from tsedsocketio import AuthenticationMiddleware from middlewaresAuthenticationMiddleware import ErrorHandlerSocketMiddleware from middlewaresErrorHandlerSocketMiddleware import InputEvents from interfacesSocketEvents import Room from modelsRoom import HelperService from HelperService import SocketCommands from interfacesSocketCommands import SocketAction from interfacesSocketAction import StartQueueSocketMiddleware from middlewaresStartQueueSocketMiddleware import ReleaseQueueSocketMiddleware from middlewaresReleaseQueueSocketMiddleware import MapsService from MapsService SocketServicegame SocketUseBeforeAuthenticationMiddleware SocketUseBeforeStartQueueSocketMiddleware SocketUseAfterReleaseQueueSocketMiddleware SocketUseAfterErrorHandlerSocketMiddleware export class RoomService extends HelperService Nspgame clientNamespace SocketIONamespace constructor super InputInputEventsROOMALL public all SocketSession session SocketSession Args action SocketAction void const agentId sessiongetplayerId superinformPlayerthisclientNamespace agentId command SocketCommandsROOMALL data RoomServicerooms actionId actionactionId I already tried to extend or inject with the Inject decorator the main service on the others but it doesnt recognize the events in other classes Describe the solution youd like Maybe if we have a decorator like SocketInjectionSERVICENAME where it can put all socket services at the namespace without needing to do the name thing that i explained above