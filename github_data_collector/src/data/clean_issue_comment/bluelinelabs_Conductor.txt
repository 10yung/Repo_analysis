I use the Lingver library to change the language in my application but sometimes the text in my application changes to the default language text and this happens in some places in the application When after opening WebView my application always in some places again changes to text in the default language In addition I tried using PluginLocaleKotlin to change the language but the result is the same My previous question on this topic I use the Lingver library in my project to change the language But on some phones in some places sometimes the text does not change This is how I change the language in my application Override public void changeLanguageNotNull String lang LingvergetInstancesetLocalebindinggetRootgetContext lang getActivityrecreate Here is the code in places where the text does not change PerController public class TabOffersViewModel extends BaseViewModelTabOffersCallback Inject TabOffersViewModel Override protected void initBundle args RouterPagerAdapter pagerAdapter new RouterPagerAdapterController mCallback Override public void configureRouterNonNull Router router int position if routerhasRootController Controller page switch position case page new PriceplansController break case page new ServicesController break case page new TabNewsControllerTabNewsControllerTABACTIONS break case page new TabNewsControllerTabNewsControllerTABNEWS break default page new PriceplansController break routersetRootRouterTransactionwithpage Override public int getCount return Override public CharSequence getPageTitleint position switch position case return mContextgetStringRstringpriceplanstitle case return mContextgetStringRstringservicestitle case return mContextgetStringRstringtitleactions case return mContextgetStringRstringtitlenews default return mContextgetStringRstringpriceplanstitle mCallbackbindPagerpagerAdapter There is still a code fragment of the layout file I include this layout to other layouts xml version encodingutf LinearLayout xmlnsandroid xmlnsapp androidlayoutwidthmatchparent androidlayoutheightwrapcontent androidbackgroundcolorblack androidorientationhorizontal androidpaddingdimen sdp TextView androidlayoutwidth dp androidlayoutheightwrapcontent androidlayoutweight androidtextstringdetalerttext androidtextColorcolorwhite androidtextSizedimen ssp ImageView androidididclosenotif androidlayoutwidthdimen sdp androidlayoutheightdimen sdp androidlayoutmarginStartdimen sdp androidcontentDescriptionclose notification appsrcCompatdrawableiccloseyellow dp LinearLayout This is how I pass context Module public class ControllerModule protected final Activity activity public ControllerModuleActivity activity thisactivity activity Provides PerController public Activity provideActivityContext return thisactivity This is my question from the Lingver repository Id like to bump this library to java and make use of default implementations For example a candidate where I most of the time only need one method to be overwritten is ControllerChangeListener EricKuck Would you accept such a PR Or should we directly migrate to kotlin Now that ViewPager is final we need a ControllerStateAdapter en pair with androidxviewpager adapterFragmentStateAdapter Hi I have encountered a problem related to the change handler when you try to update view between onAttach and changeEnded In this case the transition animation is not smooth For example There are controllers A and B Controller A goes to B using HorizontalChangeHandler I subscribe to a database on nonUI thread in onAttach method of controller B and update view once the data came Accordingly the data can come before the transition animation finishes or onChangeEnded method calls And because of that the view can be touched during animation and this leads to the problem with smoothness class B Controller fun onAttach database subscribeOnui observeOnmainThread subscribe updateUiit showErrorit this method can be called befor onChangeEnded will be called fun updateUilist ListData adaptersubmitListlist Does Conductor have some option to delay animation until target controller says Im ready animate me Quite often I dont want my apps to restore their last controller hierarchy after being killed on process death Usually because I think the user wants to start fresh anyways and doesnt know where he left hours before I do this by calling ConductorattachRouterthis rootContainer null whenever I detect process death Of course instance state is saved anyways but I just ignore it on next start So far so good Unfortunately Conductor is not aware of this and still forces my controllers to have a default and a bundle constructor which I dont needwant in my case because my controllers do not need to be restored The first enforcement is done by conductorlint which I can luckily circumvent by having the two required constructors as protected in my BaseController Okay The second and only thing left is that on creation of each controller ensureRequiredConstructor is called at runtime and checks my controllers for these two constructors If this method would be protected instead of private I could also override it in my BaseController which is aware of how I configured conductor and therefore can prevent these checks Is there any chance that ensureRequiredConstructor can be changed to protected Or do you even plan to provide other options to configure conductor the way I want Came across a bug when we have a parent controller with RETAINDETACH and its child controller with RELEASEDETACH If we push another RELEASEDETACH controller to the parent router and then pop back the child controller wont be attached and it will have a null view property but the view itself will be still in its parent and therefore visible Here Ive fixed the bug and added a correspond test The current workaround for this bug is setting RETAINDETACH for the child controller According my comment in here Ive fixed locking all changes to a router because of having constantly non empty pendingControllerChanges after rotation on launching That can be reproduced after adding this lines in the demo activity and launching app in a rotated simulator When I call popController for a controller in the middle of a backstack the ControllerperformDestroy isnt called but the view of the controller is removed and the controller is removed from the backstask As popController has the flow for false poppingTopController I suppose everything should have worked correctly The original issue is here I am using the rc version of conductor and seeing this crash occasionally when popping a current controller javalangNullPointerException Attempt to invoke virtual method void combluelinelabsconductorinternalLifecycleHandlerunregisterForActivityResultsjavalangString on a null object reference at combluelinelabsconductorActivityHostedRouterunregisterForActivityResultsActivityHostedRouterjava at combluelinelabsconductorControllerdestroyControllerjava at combluelinelabsconductorControllerdestroyControllerjava at combluelinelabsconductorBackstackpopBackstackjava at combluelinelabsconductorRouterpopControllerRouterjava at combluelinelabsconductorRouterpopCurrentControllerRouterjava Ive reviewed a few of the previous issues and they are marked as closed from the x version Any suggestions or direction here 