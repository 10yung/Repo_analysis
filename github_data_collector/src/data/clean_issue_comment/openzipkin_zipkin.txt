 Because the field type is object elasticsearch cannot query it as a conditional line You need to change the object type to nested Can we change showing to substitute the way of counting the total number of entries This will help us to see the number of accesses to each interface Today Zipkin online has the following problems At present it is suspected that the access client writes too fast but the sampling rate is only about K mins The UI interface is particularly slow Read the log and report an error as follows What is this Armeria bag for I cant find out why I reported this mistake WARN ngtasks zsiBodyIsExceptionMessage Unexpected error handling request comlinecorparmeriaclientResponseTimeoutException null at comlinecorparmeriaclientResponseTimeoutExceptiongetResponseTimeoutExceptionjava armeria jar at comlinecorparmeriaclientHttpResponseDecoderHttpResponseWrapperrunHttpResponseDecoderjava armeria jar at ionettyutilconcurrentPromiseTaskrunTaskPromiseTaskjava nettycommon Finaljar Final at ionettyutilconcurrentScheduledFutureTaskrunScheduledFutureTaskjava nettycommon Finaljar Final at ionettyutilconcurrentAbstractEventExecutorsafeExecuteAbstractEventExecutorjava nettycommon Finaljar Final at ionettyutilconcurrentSingleThreadEventExecutorrunAllTasksSingleThreadEventExecutorjava nettycommon Finaljar Final at ionettychannelepollEpollEventLooprunEpollEventLoopjava nettytransportnativeepoll Finallinuxx jar Final at ionettyutilconcurrentSingleThreadEventExecutor runSingleThreadEventExecutorjava nettycommon Finaljar Final at ionettyutilinternalThreadExecutorMap runThreadExecutorMapjava nettycommon Finaljar Final at ionettyutilconcurrentFastThreadLocalRunnablerunFastThreadLocalRunnablejava nettycommon Finaljar Final at javalangThreadrunThreadjava WARN ngtasks zsiBodyIsExceptionMessage Unexpected error handling request comlinecorparmeriacommonClosedSessionException null WARN rkerepoll zsiBodyIsExceptionMessage Unexpected error handling request comlinecorparmeriacommonClosedSessionException null WARN ngtasks zsiBodyIsExceptionMessage Unexpected error handling request comlinecorparmeriacommonClosedSessionException null WARN rkerepoll zsiBodyIsExceptionMessage Unexpected error handling request comlinecorparmeriacommonClosedSessionException null WARN ngtasks zsiBodyIsExceptionMessage Unexpected error handling request comlinecorparmeriacommonClosedSessionException null WARN rkerepoll zsiBodyIsExceptionMessage Unexpected error handling request comlinecorparmeriacommonClosedSessionException null WARN ngtasks zsiBodyIsExceptionMessage Unexpected error handling request comlinecorparmeriacommonClosedSessionException null Feature Currently when service names are too long service name components of the trace tree is displayed as follows img width altcurrentlongservicename src This is very confusing so we should show ellipsis as below img width altlongservicename src And we should show tooltips that tell users the complete service name when hovered Feature Currently Zipkinlens uses React Hooks APIs there are almost no custom hooks We should actively use custom hooks for better readability and code reusability Using custom hooks is good from a SoC point of view because it can separate the logic and the view of components Feature Use TypeScript in the process of coverting fetched trace data Especially in this directory Rational Fetched trace data is converted before it is displayed on the screen This conversion process is quite complicated Please see In this case I think types are useful when spring cloud greenwich upgrade to spring cloud hoxton the main tread get stuck there is a sample related issues Its easy for Jackson artifacts to get misaligned due to its multiple artifacts and our may transitive dependency paths Weve already had to manually manage it once to fix a security issue and now its happening again Lets go ahead and manage the Jackson version permanently since we use it directly now anyways after the moshi migration and its API tends to be fairly stable Fixes Feature Update jacksondatabind version in zipkinserverexecjar to fix CVEs Rational Hello I noticed that current zipkinserverexecjar includes comfasterxmljacksoncorejacksondatabindjar that has numerous CVEs including the one that was previously fixed in It looks like it was caused by cassandradrivercore update to since it now comes with jacksondatabind INFO iozipkinzipkin zipkinstoragecassandrajar SNAPSHOT INFO comgoogleautovalueautovalueannotationsjar compile INFO comgoogleautovalueautovaluejar provided INFO comdatastaxcassandracassandradrivercorejar compile INFO ionettynettyhandlerjar Finalcompile INFO ionettynettybufferjar Finalcompile INFO ionettynettycommonjar Finalcompile INFO ionettynettytransportjar Finalcompile INFO ionettynettycodecjar Finalcompile INFO comgoogleguavaguavajar compile INFO iodropwizardmetricsmetricscorejar compile INFO orgslf jslf japijar compile INFO comgithubjnrjnrffijar compile INFO comgithubjnrjffijar compile INFO comgithubjnrjffijarnative runtime INFO orgow asmasmjar compile INFO orgow asmasmcommonsjar compile INFO orgow asmasmanalysisjar compile INFO orgow asmasmtreejar compile INFO orgow asmasmutiljar compile INFO comgithubjnrjnrx asmjar compile INFO comgithubjnrjnrposixjar compile INFO comgithubjnrjnrconstantsjar compile INFO comfasterxmljacksoncorejacksondatabindjar compile INFO comfasterxmljacksoncorejacksonannotationsjar compile INFO comfasterxmljacksoncorejacksoncorejar compile INFO comdatastaxcassandracassandradrivermappingjar compile Updating cassandradrivercore should also change jacksondatabind version but for now maybe it is possible to revert cassandradrivercore version to Or maybe specify jacksondatabind version directly The code had a check to only show the clients remote service name when the span doesnt have any children Problem is described in Basically when reactive HTTP client Java in my case is used CLIENT spans are created in hierarchical order Use case Incoming request Two parallel operations Fetch user A update user A Fetch user B update user B Wait for completion Is producing CLIENT spans in hierarchical order Main span Fetch user A CLIENT span update user A CLIENT span Fetch user B CLIENT span update user B CLIENT span But UI doesnt support it 