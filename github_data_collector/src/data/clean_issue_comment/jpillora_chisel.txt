I tried to capture the packet and confirmed that chisel uses websocket to transmit TCP traffic like this If the firewall only allows HTTP traffic and websocket is not allowed chisel will not work Can chisel only use HTTP I find a similar thing called Bidirectionalstreams Over Synchronous HTTP BOSH Currently supports two encryption method sha and sha Can be added on compile time User can create a hashed password with mkpasswd methodsha Server will get the usernames and password as usual client will supply a hashed password chisel client auth user QYGHuvnm c b cmIzOCBgI CrAphCfRHSwWkpYLGW f gUUXyzjG W gjKdggZ qh x CD H ixmyOHYwZaYqGdqJKSZpeSw J Server will try to create a Crypter with the given password prefix is sha and is sha and try to decrypt it If a Crypter not available it will try a plaintext authentication This PR adds a new optional flag to the client cafile which can be used to verify certificate of the server when using wss or https The server is also capable of serving TLS via tlscertfile and tlskeyfile flags Fixes and its a more secure alternative of When i try to connect my server via hostname option and custom ip adress in http everything is work well but when i try to connect via https client doesnt connect server bash Example start commad chisel client maxretryinterval s hostname wwwexamplecom pid But when I add hostname to hosts file and replace ip adress with hostname everything is fine think this program tries to ip adress as certificate domain and dont use the hostname variable Our proxy terminates websockets after hours keepalive just helped a bit so that the proxy wont close after seconds The inner tunneled connections will also get terminated It would be nice to have a reconnection option within a window of a few seconds This way the inner tunneled connections would not suffer a termination I am getting the following error when trying to run behind an nginx proxy with letsencrypt client Connecting to wss chisel client Handshaking client Fingerprint ee f client Sending config client Connected Latency ms client conn Remote failed dial tcp connect connection refused client conn Remote failed dial tcp connect connection refused Any ideas why this happens This allows to add custom Https headers In our case we need this because we have the server behind a basic auth secured reverse proxy Hi I have this error after months of constant running http panic serving runtime error invalid memory address or nil pointer dereference goroutine running nethttpconnservefunc xc e usrlocalgosrcnethttpservergo xd panic x d e xb usrlocalgosrcruntimepanicgo x b githubcomjpillorachiselserverServerhandleWebsocket xc b x b fe xc a e xc srcserverhandlergo x e githubcomjpillorachiselserverServerhandleClientHandler xc b x b fe xc a e xc srcserverhandlergo x f githubcomjpillorachiselserverServerhandleClientHandlerfm x b fe xc a e xc srcserverservergo x nethttpHandlerFuncServeHTTP xc d x b fe xc a e xc usrlocalgosrcnethttpservergo x nethttpserverHandlerServeHTTP xc a x b fe xc a e xc usrlocalgosrcnethttpservergo xab nethttpconnserve xc e x b xc fc usrlocalgosrcnethttpservergo x created by nethttpServerServe usrlocalgosrcnethttpservergo x f It seems to be coming from the internals of go Hi everyone Im wondering is there any way to store authentication details encrypted Chisel doesnt have as far as I can find but maybe with a rd party application it can be done Also how hard would it be to implement this feature I want to look into it I am having this same issue just with Flask behind chisel Is there a way to configure the chisel proxy like in nginx something like this location proxysetheader XRealIP remoteaddr proxysetheader XForwardedFor proxyaddxforwardedfor proxysetheader Host httphost proxypass 