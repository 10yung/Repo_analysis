 VS Code Version Mac Log file set trace true in launch config Extension Version My current workspace is a C project so this extension is not applicable gray and disabled There had been nothing wrong for long time But these days maybe after some upgrade the RELOAD REQUIRED button is always shown no matter how many times I click it to reload Code or even restart Code PS Another extension vscodechromedebugger has the same issue Does ESLint has an option to include custom tags so they do not get marked as problems I have an extension for EJS it embeds javascript into html much like the script tags are used for However when placing the tags inside of script or style tags the error console is not recognizing the tags for either javascript or css Showing the issue Problem console I would love to be able to put some default configurations within the extension itself so that it automatically clears the problems dbaeumer i did some digging into issue i was trying to reproduce it from withing tests and i cant reproduce this issue outside vscode This is somehow related to how vscode interacts with typescript not sure where is a root cause Context This issue at first seems to be related to and can be solved there by removing break and triggering update to all directories that are registered but this should no not needed If i try to reproduce this issue in editor i can do so by creating new vue file within src folder ofc after any other file was already parsed But im unable to reproduce this issue from within tests or in other editors like Intellij Idea and atom Difference between vscode and other use cases is that somehow in vscode we are getting more roots that are defined in folderWatchCallbackTrackingMap folderWatchCallbackTrackingMap in tests c temp tmp kreh kxu pak nodemodules types c temp tmp kreh kxu pak folderWatchCallbackTrackingMap in vscode d projects eslinttypescriptsandbox nodemodules d projects eslinttypescriptsandbox src d projects eslinttypescriptsandbox nodemodules types d projects eslinttypescriptsandbox Question I understand that vscodeeslint is not doing anything weird to eslint or typescript but do you know is there is anywhere within vscode or vscodeeslint code that can cause this weird behavior How to reproduce clone open it in vscode open any file in src folder create any vue file issue at typescripteslint When theres a notification of the sort ESLint Cannot read property loc of undefined Occurred while linting Please see the ESLint output channel for details It would be handy to show button kbdOpen Outputkbd that should open Output panel with ESLint channel selected PS I know theres already a command for that eslintshowOutputChannel dbaeumer per this PR makes the syntax for disabling comments languagespecific so that when using the extension with Coffeescript source files it can generate the correct Coffeescript syntax for eslintdisable comments Fixes Let me know if theres somewhere appropriate to add tests I tested manually and saw the expected behavior for both Coffeescript and Javascript source files Add reload command to restart the client without having to restart VS Code Fixes See for the details PR welcome Hi all theres now on eslints and prettiers btw ecosystem side proper support for coffeescript per helixbass s eslintplugincoffee and prettierplugincoffeescript ongoing great work This is all good and things work out of the box mostly on vscodeeslint side almost fully except in one case when an issue pops when quickfixing it if one wants to disable affected line or next one calls to eslintcreateDisableSameLineTextEdit the inserted comment with hints to eslint is inserted with the wrong from coffeescripts point of view syntax since vscodeeslint has on the comment style hardcoded So id plead you to refactor that part a bit so that the comment prefix in general vs for coffeescript dialects would be infered from the actual language being linted and not just assumed unconditionally to be which in coffeescripts case is definitively not true thanks in advance and keep the awesome work All the Best Ant nio Refs As specified in when the workspace has eslint misconfigured the eslint extension is pretty quite and not in the users face complaining I personally like this however due to this it is easy for the user to not be aware that eslint is misconfigured I suggest the following if the user triggers ES Lint Enable you currrently say ES Lint is already enabled If the user is triggering this action it is pobaably because es lint is not working So in that case I would expect that at least the ES Lint output gets shown Similarly if I do ES Lint Configure you currently say there is already a configuration I suggest that you could open the eslint configuration file