Id like to be able to replace each selection node according to a func which would change Node properties SelectionReplaceFunctionf funcNode Node Selection Problem Goquery seems to fail with the has psudoclass and a direct child selector From MDN The following selector matches only a elements that directly contain an img child ahas img goquery implementation go package main import fmt strings githubcomPuerkitoBiogoquery func main html htmlaimgimgahtml doc goqueryNewDocumentFromReaderstringsNewReaderhtml fmtPrintlndocFindahas imgLength Result Results in while it should be Playground Sometimes we shall find an element by id In general there is only one element which match a specific id Is find first is more effecient for no need to scan whole document I use docFindidFirst to find the element now is it correctly And it is necessary to add method which can select element by xpath This creates a new function parseHtmlWithContext which behaves just like parseHtml but takes an htmlNode as context It also create a function eachNodeHtml which will iterate over each node in a selection check to see if we have parsed html for this node type already and if not will call parseHtmlWithContext with either the current node or its parent depending on whether you passed parent as true or false It also changes AfterHtml AppendHtml BeforeHtml PrependHtml ReplaceWithHtml SetHtml WrapHtml WrapAllHtml and WrapInnerHtml to use one or both of these functions New tests were added for all except the WrapHtml functions changing these functions may have been unncessary I couldnt think of a way to test this Go automatically wraps tr elements in tbody so I cant wrap those and I cant think of any other situation that this would occur in node is a sub htmlnode of doc if ok return the select string such as sidebarreviews article contentblock a sel ok docFindSelectornode Could this function be possible If I try to AppendthNewth the th tag is always dropped Same for td tr Consider the following program go package main import fmt strings githubcomPuerkitoBiogoquery const data noscripta href this linkanoscript func main d err goqueryNewDocumentFromReaderstringsNewReaderdata if err nil fmtPrintlnerr return a ok dFindnoscript aAttrhref fmtPrintfURL s t n a ok The expected output is URL true But instead the output is URL false Changing noscript to div in both the document and selector causes the expected output so the problem seems to affect only noscript elements