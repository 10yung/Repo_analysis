Ive created an extension method for the legacy Animation clips when you hit Play Under the hood it creates an AniamtionEvent at the end of the AnimationClip Do you think this is useful to create a pull request What are your thoughts Example code animation PlayAsObservableAnim SelectMany animationPlayAsObservableAnim SelectMany animationPlayAsObservableAnim SelectMany animationPlayAsObservableAnim Subscribe demoplayasobservable mov Some time ago I suggested creating a place where the UniRx community could focus Now I decided to do it myself I hope it will be a community that is dying a little I am not a specialist in UniRx but I will try to help with using it and I hope that there will be more people wanting to help new users Fix typo fix example cs private IEnumerator Work yield return null yield return Work private IEnumerator Work yield return null throw new Exception void Test DebugLogErrortest begin ObservableFromCoroutineWork Subscribe err DebugLogErrorwork error DebugLogErrorwork complete ObservableFromCoroutineWork Subscribe err DebugLogErrorwork error DebugLogErrorwork complete when invoke Test the output would be test begin work error Exception Exception of type SystemException was thrown the expected output should be test begin work error work error The observable below will not emit anything when the space bar is pressed ObservableEveryUpdateWhere InputGetKeyDownKeyCodeSpace Meanwhile using an InputGetKey predicate does capture the key being held down as expected InputanyKeyDown predicate captures mouse events but again fails to capture keyboard key presses Any idea whats going on here this fixes Merging operators Merge Switch and SelectMany doesnt dispose parent subscription when inner subscription calls OnError and this causes some odd behaviours this is different from other combining operators Zip CombineLatest for instance this may send InvalidOperationException Disposable is already set in some conditions appending a operator even AsObservable changes the result This change let they behave same as other operators for example ObserveOnSchedulerImmediate causes an infinite loop cs Sample var subject new Subjectint var observable subjectObserveOnSchedulerImmediate observable Wherex x Subscribe subjectOnNext subjectOnNext subjectOnCompleted ObserveOn has LinkedListNodeSchedulableAction and push SchedulableAction to it But ProcessNext take only first value Therefore the same SchedulableAction is executed many times and never stop I wonder if I could get a better callstackstacktrace to detect where the change did happen It goes since MainThreadDispatcher but I want to know the place where a transform had been really changed at SystemEnvironmentgetStackTrace x in d ac ca d b f d d fa cf at TengioTransformDebuggercGatherDataAndRunLoggerb UnityEngineVector x x in C Users kiril Documents canvascreator Assets Scripts App TransformDebuggercs at UniRxOperatorsDoObservable Do T OnNext T value x in C Users kiril Documents canvascreator Assets Plugins UniRx Scripts Operators Docs at UniRxOperatorsFromMicroCoroutineObservable FromMicroCoroutine T OnNext T value x in C Users kiril Documents canvascreator Assets Plugins UniRx Scripts UnityEngineBridge Operators FromCoroutinecs at UniRxObserveExtensionsPublishUnityObjectValueChangedd TSourceTProperty MoveNext x in C Users kiril Documents canvascreator Assets Plugins UniRx Scripts UnityEngineBridge ObserveExtensionscs at UniRxInternalUtilMicroCoroutineRun x in C Users kiril Documents canvascreator Assets Plugins UniRx Scripts InternalUtil MicroCoroutinecs at UniRxMainThreadDispatcherRunUpdateMicroCoroutined MoveNext x a in C Users kiril Documents canvascreator Assets Plugins UniRx Scripts UnityEngineBridge MainThreadDispatchercs at UnityEngineSetupCoroutineInvokeMoveNext SystemCollectionsIEnumerator enumerator SystemIntPtr returnValueAddress x in C buildslave unity build Runtime Export Coroutinescs tranObserveEveryValueChangedx switch property case DebugTransformAttributePropertiesposition return xposition case DebugTransformAttributePropertieslocalPosition return xlocalPosition default throw new ArgumentOutOfRangeException Dox DebugLogEnvironmentStackTrace TakeUntilDestroythis Subscribex string trace EnvironmentStackTrace string message trannameproperty x DebugLogmessage ntrace Here is my code using UnityEngine using SystemThreadingTasks using UniRxAsync public class Test MonoBehaviour private Task task TaskCompletedTask private UniTask uniTask UniTaskCompletedTask private async void Start await task TaskDelay printtaskIsCompleted taskIsCompleted await uniTask UniTaskDelay printuniTaskIsCompleted uniTaskIsCompleted In the output console taskIsCompleted True uniTaskIsCompeleted False 