 Observed incorrect behavior scala class WrongError extends App def foo Map String Double Map age of star HD age of Universe produce an incorrect error message WrongErrorscala Expected token SEMI but got TokenARROW Expected behavior provide proper error message sth like WrongErrorscala Expected token SEMI but got TokenRPAREN In the following situation scala class WrongError extends App Map age of star HD age of Universe gives WrongErrorscala illegal start of simple expression TokenRPAREN that correctly state problem but no line number Severity Because there is no line number and the error message is misleading it is hard to find the issue Version orgscalastyle scalastyle Scala sbt used by orgscalastyle scalastylesbtplugin Related related line number issues possible couse scalaidescalariform issue As opposed to BlockImportChecker this rule targets all imports with curly braces including renaming or hiding imports This is important because scala refactoring tools that allow to move classes to other packages are often errorprone in the presence of such imports IndentationChecker fails when there is a commented line where slashes are at the start of line even though spaces are a multiple of methodParamIndentSizeclassParamIndentSize eg code commented code code Is it an intention If so would it be possible to add an option to ignore this special case When we comment out a code in IDE slashes are automatically put at the start of the line and we have to move them manually afterwards which is quite cumbersome test passes for all versions Each commit could be merged by itself ie test passes for all previous versions Steps to reproduce Have a file containing the following import statement scala import javatimeZoneOffset ZonedDateTime And run scalastyle with the following configuration xml check classorgscalastylescalariformImportOrderChecker levelerror enabledtrue parameters parameter namegroupsallparameter parameter namegroupallparameter parameter namelexicographictrueparameter parameters check Expected behaviour Scalastyle should not find an issue Observed behaviour Scalastyle complains ZonedDateTime should come before ZoneOffset Notes I believe this is a bug because it seems to contradict the lexicographic parameters documentation lexicographic if true imports are ordered lexicographically classes wildcards then packages casesensitive ordering within It also disagrees with tools such as scalafmt and having scalafmt and scalastyle disagreeing on how things should be ordered is not fun Im happy to submit a PR for this issue it looks like a simple omission in compareNames in the case isImportfalse which ignores the value of lexicographic and will always compareIgnoreCase I config a checker to check the double blank lines like the following however it seems doesnt work Is there anything wrong in my config Other configs work well check customIddoubleBlankLines enabledtrue classorgscalastylefileRegexChecker levelerror parameters parameter nameregexm s r n s r nparameter parameters customMessage CDATA No double blank lines customMessage check Lexicographic imports sorting used in IDEs Intellij Eclipse considers the entire import string However for groups only the part preceding the group was passed into the comparison method not taking into account the opening curly brace and the symbol following it Lets add them to get the right behaviour A followup to pull request Cant find it would love to have a Checkstyle ImportControl check available in scalastyle the version in the above link is pretty elaborate i think that a simpler version of it would be enough for most cases and simpler to develop i imagine the simpler version would lets us define rules such as source package or class inputhere is not allowed to import targethere package or class itd help enforce a layering rule in our projects such as package mycompanycontrollers not allowed to import Listsomeormframework mycompanydao currently there is something simliar implemented IllegalImportsChecker it disallows classpackage usage but in a global way checking that all files dont import these i could try writing and creating a PR for this would appreciate any pointers thatd get me started faster Update URL to reflect the website being on Github pages