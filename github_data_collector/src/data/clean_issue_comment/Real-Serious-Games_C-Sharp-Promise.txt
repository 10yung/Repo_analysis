I notice there might be garbage collectings caused by closures For example the object resultPromise in method PromiseThen is used in a lambda expression later Reference the part about closure and anonymous method Your have a good feature default catcher If developer had mistake and not realized catcher all exception process in default catcher private void PromiseUnhandledExceptionobject sender ExceptionEventArgs e but in this way you cant write custom catch callback in done public void DoneActionPromisedT onResolved ActionException onRejected ThenonResolved onRejected Catchex PromisePropagateUnhandledExceptionthis ex default handler will be processed anyway I think that the behavior should be like this if there are custom callback handlers then process there and if not then process in default catcher public void DoneActionPromisedT onResolved ActionException onRejected ThenonResolved onRejected and public void DoneActionPromisedT onResolved ThenonResolved Catchex PromisePropagateUnhandledExceptionthis ex Hi I have a simple questions can you cancel a promise Why I am asking Say I have a view that when showed asks some resource manager for the list of image promises through the presenter of some sort I am only interested in promises resolving when the view is active and presented Now lets say the view gets hidden before some promises make it back with the images Am I able to unregister from those promises resolvation or maybe keep the promise reference and cancel it when no longer needed when the prsenter of the view is notified that its getting hidden Is there any way to cancel a scheduled promise Thanks I added some factory methods to create the Promises This prevents the need of casts in some Then constructions old Then IPromise new Promiseresolve reject new Then PromiseCreateresolve reject Hello the latest NuGet RSGPromise v release was in July th Since then it has been more then a year and a few improvements have occurred in the library but no new NuGet releases yet Is the NuGet being actively maintained Or should we now only get directly the source code Could there be quicker to maintain alternatives to the NuGet package Hi there im quite a noob so please correct me Is it possible that the promises are not usable inside a task I have this function and it wont work inside the taskRun but it works outside of taskRun private async Task authenticationAsync await TaskRun RestClientPostsignInResponsemodelsomeUri someString Thenres currentIDToken residToken currentUID residToken DebugLogidtoken currentIDToken UID currentUID Catcherror DebugLogerrorMessage DebugLogOutside of task will not run either It does not DebugLog anything at all hi feature request here this library does not possess the ability to retry a promise i would very much like to see that kind of functionality being added Hi guys I was wondering if you can include a unitypackage file from the releases of this project with the source code and the README Let me know and thanks in advance Juan This should fix The build script is updated to create release assemblies as CI output If Im correct this should result in release assemblies pushed to NuGet package Hopefully this will fix the issue linked above Picking up where nloewen left off Merged all master changes into promisebase Tests all come back fine