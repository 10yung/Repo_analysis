Hi all This is just a service message For those people who use this library and use PHPCompatibility in their CI process there is now a custom ruleset available which can be used to prevent false positives being thrown by PHPCompatibility for the native PHP functionality being polyfilled by this repo You can find the repo for the PHPCompatibilityPasswordCompat ruleset here on Github as well as on Packagist Hope someone will find it useful smile PS If anyone is interested in helping us to maintain the ruleset please open an issue in the repo ERROR Function mcryptcreateiv is deprecated since PHP and removed since PHP Use randombytes or OpenSSL instead ERROR Extension mcrypt is deprecated since PHP and removed since PHP Use openssl preferred or peclmcrypt once available instead ERROR The constant MCRYPTDEVURANDOM is deprecated since PHP and removed since PHP Fixed the sentence structure to make it easier to read mysql function against string injection not working When I run the following code in PHP php password XXX salt XX vardumppasswordverifypassword cryptpassword salt I get false as result When I run the same code with PHPs native passwordverify function I get true This should be pretty easy to do since PHPUnit does support phpt format All that is needed is to copy them from phpsrc and add INI autoprependfilelibpasswordphp to each test file Native passwordverify does accept old insecure DES hashes This pull request reenables verifying but not creating them I have tested the passwordverify of PHP that does not verify correctly I am using centOS and PHP version It is always to return true with different passwords when i verify it Is my code has bug Here is my code password k AlGOPqvCzohSpHdrr MlQb R Whew vpA mleA bs qVV WZ verifypw k AlGOPqvCzohSpHdrr MlQb R Whew vpA mleA bs qVV WZasdasdasdasdqweqa options array cost hash passwordhashpassword PASSWORDBCRYPToptions vardumppasswordverifyverifypw hash sometime true sometime false OK at a very inopportune moment I learn that this third party library just doesnt work on one of my servers that badly needs these password hash functions my code php requireonce passwordphp the passwordcompat library vardumppasswordhashfoo PASSWORDDEFAULT the output boolfalse BOOO Im pissed The code seems to get all the way through the process until it gets to this point php hash hashformat salt echo hash is hash n echo password is password n ret cryptpassword hash echo ret is ret n if isstringret PasswordCompat binary strlenret resultLength diereturning false string length is PasswordCompat binary strlenret whereas resultLength is resultL return false Ive no idea whats failing but it looks like the crypt function isnt holding up its end of the bargain The output php foophp hash is y yM nzUadsYLVfTBcowte password is foo ret is zJyhpjk l E returning false string length is whereas resultLength is What the heck 