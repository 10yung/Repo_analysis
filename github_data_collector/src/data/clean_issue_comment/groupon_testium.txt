BREAKING CHANGE officially deprecate the lib This PR was started by git wf pr When using clearAndType I noticed that this function does not trigger any focus events which occur with real input interaction Repro Note I am using Testium to sanity test the Groupon Getaways prod site so I have launchfalse in my testiumrc file and I dont want to be launching anything Im testing against grouponcom so I dont need to launch anything I am using Testium and Testiumcore Run the prod sanity tests Expected The tests run successfully Actual I get an error about of the time that says Failed to initialize WebDriver Check phantomjslog Checking port listen EADDRINUSE Error Failed to initialize WebDriver Check phantomjslog Checking port listen EADDRINUSE at errnoException netjs at Serverlisten netjs at listen netjs at Serverlisten netjs at ObjectfindOpen nodemodulessubprocesslibportjs at nodemodulessubprocesslibindexjs at nodemodulessubprocessliblogjs at OpenReqReqdone nodemodulesgracefulfsgracefulfsjs at OpenReqdone nodemodulesgracefulfsgracefulfsjs at Objectoncomplete fsjs Spec browserdoubleClickcssSelector Performs a doubleClick on the element selected by the cssSelector I am redirecting a pageurl to url After navigateTo when I log the path it gives the status of url but path of url Is there a way I can show the url of url phantomjs maintains localstorage between runs Maybe we should clear it before running tests pageevaluatefunction localStorageclear If that seems like a bad idea we should at least document this behavior so developers know to handle it in their own tests Thanks to a recent update to webdriverhttpsync we should be able to just set the webdriver url and run on saucelabs Wed need to verify that and maybe even document how to setup w travis Create example repos that show you how to use testium This could be a promotion of jkremstestium demo to this org There could also be an example using something other than mocha Almost certain that it will be hard impossible in the current design but it would be nice to get the actual wait times reported for successful waits Example from nightwatchjs That example also includes nice tracelike messages for all other assertions Pretty helpful for test blocks with more than one line 