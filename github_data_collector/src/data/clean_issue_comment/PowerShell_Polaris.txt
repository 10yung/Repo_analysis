 Problem Statement When I run StartPolaris inside a container the container exits immediately because the command is asynchronous I tried adding a StartSleep Seconds command after StartPolaris but this caused the route handlers to block so the web server was nonresponsive Proposed Solution Add a Wait parameter to the StartPolaris command to block script execution and force the command to run synchronously Polaris Feature Request Is your feature request related to a problem Please describe I want to be able to troubleshoot individual scripts after the fact Describe the solution youd like Id like to have standardized logging to be able to log which response code was delivered at what time Describe alternatives youve considered Im thinking about having a standardized log format like the Apache CLF I have considered writing my own Logging function and overloading the builtin function in the Polaris class But the problem is that some ResponseSend does not have a PolarisLog Also Im unsure if the PolarisLog function has access to the Response and Request objects which is required if you want to log the Requeststring and Responsecode I Pull Request Creation Checklist x Added a short procedure in order to get a working kerberos Auth with Polaris Polaris Bug Report Description of the bug When PowerShells strict mode is enabled the StartPolaris command throws the following exception powershell The variable ScriptClassDefinitions cannot be retrieved because it has not been set At C Program Files WindowsPowerShell Modules Polaris lib PolarisClassps char Steps to reproduce Steps to reproduce the behavior ImportModule Polaris SetStrictMode Version Latest StartPolaris See error Expected behavior Polaris should not throw exceptions in strict mode at least when these are not related to the Polaris module itself Using PowerShells strict mode is good practice for identifying bugs and scripting issues that can otherwise by difficult and time consuming to track down Verbose output of the script There is no additional information obtained by setting the Verbose preference The exception is thrown before any WriteVerbose statements are encountered Additional context The issue is caused by the following line within the parameter declarations in PolarisClassps powershell string ClassDefinitions ScriptClassDefinitions ScriptClassDefinitions is undefined at the time the parameter declaration is encountered and therefore in strict mode this will throw an exception It is possible to workaround this issue by using the following script line before calling StartPolaris powershell ScriptClassDefinitions string Empty Having declared the variable strict mode will no longer cause the command to throw an exception Not sure why the parameter in the reference script uses an undeclared variable as a default value I would suggest a quick fix would be to declare the variable early in the execution lifecycle of the module perhaps in the psm file before any command that relies on its value can be invoked Version Information Polaris table colgroupcolcolcolgroup trthNameththVersionthtr trtdPolaristdtd tdtr table table colgroupcolcolcolcolcolcolcolcolcolgroup trthPSVersionththPSEditionththPSCompatibleVersionsththBuildVersionththCLRVersionththWSManStackVersionththPSRemotingProtocolVersionththSerializationVersionthtr trtd tdtdDesktoptdtd tdtd tdtd tdtd tdtd tdtd tdtr table Polaris Bug Report After running StopPolaris and when try to restart the startPolaris it will throw an error Description of the bug StopPolaris is not stopping web server on whichever port its started with I get a below when try to run Startpolaris Exception calling Start with arguments Failed to listen on prefix because it conflicts with an existing registration on the machine At C Users harikant Documents WindowsPowerShell Modules Polaris lib PolarisClassps char thisListenerStart CategoryInfo NotSpecified MethodInvocationException FullyQualifiedErrorId HttpListenerException A clear and concise description of what the bug is Steps to reproduce Example when you run the below code ImportModule Polaris Verbose NewPolarisGetRoute Path helloworld Scriptblock ResponseSendHello World StartPolaris Port And run StopPolaris and again try to startpolaris command it thows the above error Expected behavior To be able to stop and start the Polaris server without any errors Version Information PSVersion PSEdition Desktop PSCompatibleVersions BuildVersion CLRVersion WSManStackVersion PSRemotingProtocolVersion SerializationVersion table colgroupcolcolcolgroup trthNameththVersionthtr trtdPolaristdtd tdtr table table colgroupcolcolcolcolcolcolcolcolcolgroup trthPSVersionththPSEditionththPSCompatibleVersionsththBuildVersionththCLRVersionththWSManStackVersionththPSRemotingProtocolVersionththSerializationVersionthtr trtd tdtdDesktoptdtdSystemVersion tdtd tdtd tdtd tdtd tdtd tdtr table i was assuming that if i use responsesend the request is closed and the response is sent to the client however the code will continue to run The result is that the last responsesend is displayed as a result on the client side how do I force the code to end the request before the end of the routine is reached my workaround at this moment powershell ImportModule Name Polaris globalPolarisRestPort globalAppName PolarisTest app StartPolaris Port globalPolarisRestPort MinRunspaces MaxRunspaces all params are optional functionMiddleWare authkey RequestHeaders Authorization ifauthkey eq null ResponseSetStatusCode ResponseSendnot authorized Polaris SendResponse NewPolarisRouteMiddleware Name MyParser Polaris app Scriptblock functionMiddleWare functionHello ResponseSendhello NewPolarisRoute method GET Path hello Polaris app Scriptblock functionHello whileappListenerIsListeningWaitEvent callbackcomplete Hi guys I was wondering if there were any tests with numbers about how well Polaris can scale Background of my question If I want to introduce an open source project like Polaris into a project at my company I need to have some kind of proof that it the module will support scaling do you guys have anything like that by any chance Add some default index page Might be useful for testing to make sure its up and running Add a param to make adding pages get routes easy routes are a bit tedious while experimenting pages index C temp indexhtml if valid path may just extract content proccess getprocess select name id cpu converttohtml services getservice converttohtml then smth like polaris AddPolarisPages pages OR StartPolaris port pages pages Have StartPolaris to open server with default browser explorer Win open Mac xgdopen linux Polaris Bug Report Description of the bug After executing startpolaris everything works fine internally but I cant reach that site from outside After opening up ports on firewall and running netsh http add urlacl Im getting error If I run a site with Flancy similar PS micro webserver it works with external request so I presume some extra setting is needed for Polaris to make it visible from outside Steps to reproduce StartPolaris port on local Iwr uri from external machine either hangs or getting update After some experiments I was able to make it work for http The key was to have delegateyes when doing netsh and using as a host name when starting polaris netsh http add urlacl url usereveryone delegateyes StartPolaris port hostname Howerver this does not fix the issue if using https update Somehow https start working externally on some specific ports if I use the ip address as hostname parameter not working with or actual host name Also need to add sslcert to that port I did it before reporting the issue so the IP was the fix But still cant recreate it on new ports I also used base aspnet core app instaled with dotnet new webapp command It works just fine using its built in ssl cert I only need to add urlacl no need to set sslcer with netsh So its probably a better idea to switch to Kestrel I think httplistener might be a good option to run stuff locally for example for webapps as an alternative to WPF Polaris Feature Request Is your feature request related to a problem Please describe Using Windows integrated authentication uses a popup for user authentication Describe the solution youd like Support Custom login pages and uris for login and logoff Maybe cs claims principal and sessions in cookies Describe alternatives youve considered Writing my own login page that uses javascript to set a cookie and checking the cookie client side Additional context