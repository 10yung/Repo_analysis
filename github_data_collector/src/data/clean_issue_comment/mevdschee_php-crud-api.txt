Hi Im Laravel and when I call a view I get error Example Inside the Log about request it show I am very happy go get data with JOINS from two tables Lets assume we take the given Blogs example records id title Hello world content Welcome to the first post created T Z comments id postid userid id username mevdschee phone null message Hi id postid userid id username mevdschee phone null message Hi again tags Now I would like to send an update for id and update commentid with message Hi all I love PHPCRUDAPI and at the same time delete commentid Can I use the JOIN here as well for updatingpostingdeleting nested items I have finally figured out how to authenticate with auth getting a jwt token and getting access to the phpcrudapi However how am I able to limit the permissions on tables users have access to using scopes passed along in their token For example if a user as a permission scope to readcustomers I would like to limit their ability to only read the customers table but not create update or delete If another user has a permission scope to readcustomers updatecustomers createcustomers and deletecustomers I would like for them to be able to have full permission to the table called customers Is this something I can implement with this API Hi is is possible to group the result eg SELECT testfield from testtable GROUP by testfield Regards sm Im trying to get data from a view with a function in hits fields i noticed that apiphp works correctly on mysql and it doesnt on Maria This is a simple sql script to repeat the problem Create table ppippo view pippoguarda and function fndate execute the get statement to a server with mysql on table and view execute the get statement to a server with mariadb on table and view DROP TABLE IF EXISTS pippo CREATE TABLE pippo dt datetime num int primary key dt INSERT INTO pippodtnum VALUESNOW DELIMITER DROP FUNCTION IF EXISTS fndate CREATE FUNCTION fndate indate DATETIME RETURNS char CHARSET latin DETERMINISTIC BEGIN RETURN DATEindate END DELIMITER DROP VIEW IF EXISTS pippoguarda CREATE VIEW pippoguarda AS SELECT dt fndatedt FROM pippo execute the script in mysql it works TABLE carlojigen wget O tmppippo HTTP request sent awaiting response OK Length applicationjson Saving to tmppippo tmppippo KBs in s MBs tmppippo saved carlojigen cat tmppippo records dt num VIEW with function carlojigen wget O tmppippoguarda HTTP request sent awaiting response OK Length applicationjson Saving to tmppippoguarda tmppippoguarda KBs in s MBs tmppippoguarda saved carlojigen cat tmppippoguarda records dt fndatedt on mariaDB it works on TABLE carlojigen wget httpapiphprecordspippo O tmppippo HTTP request sent awaiting response OK Length applicationjson Saving to tmppippo tmppippo KBs in s host MBs tmppippo saved carlojigen cat tmppippo records dt num it returns and error code on VIEW with funcion carlojigen wget O tmppippoguarda HTTP request sent awaiting response Internal Server Error ERROR Internal Server Error Hello I would like to protect my use of phpcrudapi against basic input attacks I can see that phpcrudapi already takes care of the quote to escape strings before they are inserted I took all the basic types I found in the TypeConverter for a general check in the validationhandler switchcolumn type case integer ifisnumericvalue returnmust be numeric ifstrlenvalue returnexceeds range break case bigint ifisnumericvalue returnmust be numeric ifstrlenvalue returnexceeds range break case varchar ifstrlenvaluecolumn length returntoo long ifmbcheckencodingvalue returnwrong encoding break case decimal ifisfloatvalue isnumericvalue returnnot a float break case float ifisfloatvalue isnumericvalue returnnot a float break case double ifisfloatvalue isnumericvalue returnnot a float break case boolean ifvalue value returnnot a valid boolean break case date datearrayexplodevalue ifcountdatearray returninvalid date format use yyyymmdd ifcheckdatedatearray datearray datearray returnnot a valid date break case time timearrayexplodevalue ifcounttimearray returninvalid time format use hhmmss foreachtimearray as t ifisnumerict returnnonnumeric time value iftimearray timearray timearray timearray timearray timearray returnnot a valid time break case timestamp splittimestampexplode value ifcountsplittimestamp returninvalid timestamp format user yyyymmdd hhmmss datearrayexplodesplittimestamp ifcountdatearray returninvalid date format use yyyymmdd ifcheckdatedatearray datearray datearray returnnot a valid date timearrayexplodesplittimestamp ifcounttimearray returninvalid time format use hhmmss foreachtimearray as t ifisnumerict returnnonnumeric time value iftimearray timearray timearray timearray timearray timearray returnnot a valid time break case clob ifmbcheckencodingvalue returnwrong encoding break case blob ifmbcheckencodingvalue returnwrong encoding break case varbinary ifstrlenvalue substrcountsubstrvalue column length returntoo long ifmbcheckencodingvalue returnwrong encoding break case geometry ifmbcheckencodingvalue returnwrong encoding break returntrue My questions are Is any of this irrelevant Is any of this too restrictive Is any of this potentially resource intensive Is any of this redundant with validations done elsewhere Should any of this be done somewhere else How can this be improved Iam still confusing how to enable jwt auth on php crud api and how it works Can you make some example Solution to insert in two linked tables through one request I found a solution to insert data in two joined tables in simple FK situation through a transaction with one request on phpcrudapi but this required me to do some changes to the GenericDB and RecordController classes Limitations Here are the limitations I know of This relies on the creation of a simple view where the two tables are joined in a simple syntax The two tables cant have columns with the same name except for their ids This probably only works for MySQLMariaDB It requires the two tables to be in the same database Drawbacks of separate requests to insert in linked tables I needed such a solution because creating records in two linked tables through two requests leads to the following drawbacks IMHO I believe this is slower and consumes more resources It gives more risks for orphan records It gives more opportunities for hackers to create a mess in the two separate tables Here are the changes I made to phpcrudapi for the solution to work In RecordControllercreate I had to replace if thisservicegetTypetable table return thisrespondererrorErrorCodeOPERATIONNOTSUPPORTED FUNCTION By this if thisservicegetTypetable table thisservicegetTypetable view return thisrespondererrorErrorCodeOPERATIONNOTSUPPORTED FUNCTION I added those two functions to the GenericDB class public function insertInViewReflectedTable table array columnValues sqlselect informationschemaVIEWSVIEWDEFINITION from INFORMATIONSCHEMAVIEWS where tablename tablegetName stmt thisquerysql viewSqlstmtfetchColumn matches array tablesAndColsarray ifpregmatchselect from i viewSql matches selstrmatches matchesarray if pregmatchall asi selstr matches foreachmatches as m tempMatchesarray ifpregmatch imtempMatches tabstrreplacetempMatches colstrreplacetempMatches tablesAndCols tab col ifcounttablesAndCols returnfalse sqlselect tablenamecolumnnamereferencedtablenamereferencedcolumnname from INFORMATIONSCHEMAKEYCOLUMNUSAGE where lowerreferencedtablename lowerarraykeystablesAndCols and lowertablename lowerarraykeystablesAndCols or lowerreferencedtablename lowerarraykeystablesAndCols and lowertablename lowerarraykeystablesAndCols stmt thisquerysql foreignKeyDatastmtfetch primaryTableforeignKeyData referencedtablename foreignTableforeignKeyData tablename foreignColumnforeignKeyData columnname insertPrimarySqlthisgetInsertSqlprimaryTabletablesAndColscolumnValuestable insertForeignSqlthisgetInsertSqlforeignTabletablesAndColscolumnValuestableforeignColumn try ifthispdobeginTransaction stmt thisqueryinsertPrimarySql stmtfetch stmt thisqueryinsertForeignSql stmtfetch thispdocommit else returnfalse catch Exception e resultthispdorollBack returnfalse returntrue public function getInsertSqltableNametablesAndColscolumnValuestableforeignTableColumn stringTypes varcharcharbinaryvarbinaryblobtextenumset insertSqlinsert into tableName insertSqlTail values ifstrlenforeignTableColumn insertSqlforeignTableColumn insertSqlTailLASTINSERTID ifcounttablesAndCols tableName insertSql insertSqlTail i foreachtablesAndCols tableName as colName i insertSql colName insertSqlTail ifarraykeyexistscolNamecolumnValues col tablegetColumncolName colTypecolgetType quotefalse ifarraysearchstrtolowercolTypestringTypesfalse quotetrue insertSqlTailquotecolumnValues colName quote else insertSqlTailnull ificounttablesAndCols tableName insertSql insertSqlTail insertSqlinsertSqlTail returninsertSql I changed the GenericDBcreateSingle function into this public function createSingleReflectedTable table array columnValues String createdfalse iftablegetType view createdthisinsertInViewtablecolumnValues ifcreated thisconverterconvertColumnValuestable columnValues insertColumns thiscolumnsgetInserttable columnValues tableName tablegetName ifisnulltablegetPk pkName tablegetPkgetName parameters arrayvaluescolumnValues sql INSERT INTO tableName insertColumns stmt thisquerysql parameters return primary key value if specified in the input if isnulltablegetPk issetcolumnValues pkName return columnValues pkName work around missing returning or output in mysql switch thisdriver case mysql stmt thisquerySELECT LASTINSERTID break pkValue stmtfetchColumn if thisdriver sqlsrv tablegetPkgetType bigint return int pkValue return pkValue Here is an example of how this works I have tables A and B with view VWCRUDAB as CREATE TABLE a id int NOT NULL aname varchar NOT NULL CREATE TABLE b id int NOT NULL aid int NOT NULL bname varchar NOT NULL CREATE VIEW vwcrudab AS select aanamebbname from a join b onbaid aid ALTER TABLE a ADD PRIMARY KEY id ALTER TABLE b ADD PRIMARY KEY id ADD KEY baid aid ALTER TABLE a MODIFY id int NOT NULL AUTOINCREMENT ALTER TABLE b MODIFY id int NOT NULL AUTOINCREMENT ALTER TABLE b ADD CONSTRAINT baid FOREIGN KEY aid REFERENCES a id ON DELETE CASCADE ON UPDATE CASCADE When I POST on recordsvwcrudab with the following I get the records shown below in the database anamename for a bnamename for b TABLE A ID ANAME name for a TABLE B ID AID BNAME name for b While I realize that there are many limitations and there are probably better ways to do the same thing this does the job for me so far The main risk for me using this solution is that phpcrudapi will evolve and the changes I made may not work anymore Do you think there could be a way for me to improve this solution enough to have something similar implemented into phpcrudapi What would you recommend Thank you so much for phpcrudapi this is really useful to me In order to use the project using a docker image we need a Dockerfile that can be pointed to a database instance similar to how phpMyAdmin and Adminer work Note that the config should be somehow editable provided using environment variables or an external config file Hi On updating database with httpput I get these errors with large batch records Error Bad Request Error Method not allowed When I update less than say records all is working fine So I wonder is there any limit in batch update ie httpput requests