 Please see CONTRIBUTINGmd for guidelines Purpose and Motivation Add listing devices with PortAudio backend by default on Windows With this PR following commands will work on Windows supercollider ServerOptionsinDevices ServerOptionsoutDevices ServerOptionsdevices Fixes RE the issue mentions listing devices not working on Linux as well but since we use JACK on Linux theres no point implementing listing devices Maybe at some point we could consider implementing available JACK server names but this PR is really for Windows users and PortAudio Types of changes Delete lines that dont apply Documentation New feature Todo list Complete an item by checking it x Add new entries to track your progress x Code is tested All tests are passing there are no tests x Updated documentation x This PR is ready for review Please see CONTRIBUTINGmd for guidelines Purpose and Motivation This fixes by refactoring embedInStream At the same time it introduces a clearer interface for overwriting key value pairs If this fixes an open issue link to it by writing Fixes Types of changes Delete lines that dont apply Documentation Bug fix New feature There is a potential for breaking code that should be discussed here This change makes sure that also if nothing is passed in the embedded event is copied Something that relies on eventembedInStreamnil event would break The reson for ths change is uniformity and reliability Note that eventembedInStreamx event is currently always true for any x that is an event in particular this is done when playing event patterns like Pbind It would be easy to change this so that nil would not copy the event Todo list Complete an item by checking it x Add new entries to track your progress x Code is tested x All tests are passing x Updated documentation x This PR is ready for review Please see CONTRIBUTINGmd for guidelines Discussion Environment SuperCollider version rc Steps to reproduce supercollider p Prand a a infasStream pnext ok pnext ok pnext Message putAll not understood Expected vs actual behavior wed expect pnext to just return the event Please see CONTRIBUTINGmd for guidelines Purpose and Motivation If this fixes an open issue link to it by writing Fixes A number of examples in the Image helpfile did not run due to using some obsolete methods Integer fromRGBA Array asRGBA Integer red etc This corrects the examples so they at least run Some examples are a little awkward now as Color returns values while the examples are generally using bit integers Im open to suggestions if more changes should be made Types of changes Delete lines that dont apply Documentation Todo list Complete an item by checking it x Add new entries to track your progress x Code is tested x Updated documentation x This PR is ready for review Please see CONTRIBUTINGmd for guidelines Environment SuperCollider version dev Operating system macOS Other details Qt version audio driver etc Steps to reproduce supercollider soptionsuseSystemClock get default value false Expected vs actual behavior Scsynth always uses system clock for scheduling Supernova uses sample clock by default As supernova did not originally allow for using system clock the default value to use sample clock reflects its original behavior I think it would be better if the default settings matched scsynth and supernova as close as possible what do you think Im happy to make a PR if theres a consensus this is worth changing Paste error messages in entirety Use gist if very long If SC crashed see CONTRIBUTINGmd for how to make a crash report Environment SuperCollider version Operating system Any Steps to reproduce supercollider Latchar DCar Impulsear plot or Latchar DCkr DCar Impulsear plot Expected vs actual behavior Latchar expects an audio rate signal input but it doesnt enforce it by checkInputs thischeckSameRateAsFirstInput So the actual behavior is that the plotted left channel may include garbage data because the signal inputs wire buffer is not being filled by a scalar or control rate input Expected Latcharnonarinput should fail with ERROR Latch first input is not audio rate There are probably other UGens that should perform this check but dont Fixing it for Latch is easy but I think its worth skimming through to look for other cases Environment SuperCollider version Operating system Windows Other details Qt version audio driver etc Dell XPS Steps to reproduce When the keyboard cursor is idle and you type anything the mouse cursor arrow gets degraded It comes back to the normal error when you move the mouse once again I am not sure if it is a QT problem because Windows on Dell XPS is presenting several resolution scaling issues Please see CONTRIBUTINGmd for guidelines Purpose and Motivation Improve MIDIOut jitter by using logical time to schedule MIDI events If this fixes an open issue link to it by writing Fixes Types of changes Delete lines that dont apply New feature really a performance improvement doesnt change any functionality Todo list Complete an item by checking it x Add new entries to track your progress x Code is tested x All tests are passing Updated documentation This PR is ready for review Caveats this improvement only targets CoreMIDI on OSX Since it doesnt harm the other implementations IOS PortMidi it is conceivable that this change can be its own PR Tested on my machine with noticable if subjective improvement in scheduling reliability Please see CONTRIBUTINGmd for guidelines Motivation More documentation is better than less The copymethod tag is very useful and I think underutilized However it will copy all modal tags within that method and they cant be modified in the location theyre copied to Description of Proposed Feature It would be great to be able to copy a method then overwrite some of the tags in the new location for contextclassspecific information For example many methods in SimpleNumber can be used on Integers Floats Arrays UGens etc The discussion tag within the method is often a place for information and examples specific to the classs use of the method So while method descriptions and arguments are typically the same and make copymethod a convenient feature modifying some sections is sometimes useful If this feature were added I think authors would be motivated to copy method docs into more classes so that the entries show up in more classes as opposed to having so many undocumented methods and specifically on a class that the user is concerned with at that moment eg as opposed to having to look at method docs in AbstractFunction when Im actually using that method on an Array A more detailed example can be seen in this PR Plan for Implementation Ill update if I get a chance to look into how help docs are rendered Who will implement this How long will it take Please see CONTRIBUTINGmd for guidelines Motivation Some editors automatically reload a file if it has been changed by other application Currently IDE always asks whether to reload the file discard changes or close it In some workflows it would be useful to disable that dialog and silently reload the file in the IDE Description of Proposed Feature Add option in the IDE preferences to silently reload files which contents were changed by another application unless the file has unsaved changes in the IDE Plan for Implementation Who will implement this How long will it take No plan yet 