 Version of reactnativeiap Version of reactnative Platforms you faced the error IOS or Android or both Android Expected behavior Actual behavior Ive collected this from an app crash reported in production Ive seen it happen some times now Sorry for not having real line numbers to report but the error is real NB line numbers are not correct javalangNullPointerException at comdooboolabRNIapRNIapModule run RNIapModulejava at comdooboolabRNIapRNIapModuleensureConnection RNIapModulejava at comdooboolabRNIapRNIapModulesendUnconsumedPurchases RNIapModulejava at comdooboolabRNIapRNIapModulestartListening RNIapModulejava at javalangreflectMethodinvoke Methodjava at comfacebookreactbridgeJavaMethodWrapperinvoke JavaMethodWrapperjava at comfacebookreactbridgeJavaModuleWrapperinvoke JavaModuleWrapperjava at comfacebookreactbridgequeueNativeRunnablerun NativeRunnablejava at androidosHandlerhandleCallback Handlerjava at androidosHandlerdispatchMessage Handlerjava at comfacebookreactbridgequeueMessageQueueThreadHandlerdispatchMessage MessageQueueThreadHandlerjava at androidosLooperloop Looperjava at comfacebookreactbridgequeueMessageQueueThreadImpl run MessageQueueThreadImpljava at javalangThreadrun Threadjava Tested environment Emulator Real Device Real Device Motorola Moto G Plus pottern Android Steps to reproduce the behavior Not identified Version of reactnativeiap Version of reactnative Platforms you faced the error iOS Expected behavior Accordingly to Apples documentation check Determine Eligibility section lapsed subscribed arent eligible to take an introductory offer unless they havent previously used an introductory offer for the given product So when purchasing a subscription for the nd time the introductory offer shouldnt be taken in account in the confirmation modal neither in the purchase this last part is right Actual behavior In my case I have an introductory offer of one week free when subscribing for the first time the confirmation alert says it will start billing one week after which is right But if I unsubscribe and try to subscribe again this message is presented in the alert and it shouldnt When doing the receipt validation the purchase data doesnt include the introductory offer Tested environment Real device with Sandbox account Steps to reproduce the behavior Code based on IapExample and Example backend Set an autorenewal subscription with an introductory offer of one week Purchase it with Sandbox Wait for it to stop renewing about hour Purchase another subscription this is the one that has the wrong confirmation wording I am working on an app which has our own user database and cross platforms subscription and my questions are What happens if they uninstall the app Does the subscription automatically get cancelled What happens if they have the app installed on two devices do both of them get notified What happens if they have the app installed on two devices and Login with different App Account and both of them have login with same Apple ID or Google Account will both of them get notified If user cancel the subscription from settings how do we know which user canceled the services I would like to inform my server that this user canceled subscription How do we know a user did autorenew or canceled the subscription without opening app Is there any unique id in apples receipt which we can get to validate the user id Thanks Version of reactnativeiap reactnativeiap Version of reactnative reactnative Platforms you faced the error IOS or Android or both Android Expected behavior Should show payment option Actual behavior Does not happen anything Tested environment Emulator Real Device Real Device Hi I have membership screen with subscription plans Silver Gold Platinum User can select plan and click on buy button to susbcribe to that plan It works for the first time shows payment option and user successfully subscribes to the plan It does not work after that if user tries to subscribe to another plan by Clicking on buy button which triggers RNIaprequestSubscription does not show anything Below is the code try const purchases await RNIaprequestSubscriptionthisstatecurrentselectedplan catch err thissetState errmsg Error errcode errmessage return It works when user selects the same plan but does not work when another plan is selected is this something related to downgrade upgrade Version of reactnativeiap Version of reactnative Platforms you faced the error IOS or Android or both Android Expected behavior Aall purchases are acknowledged Actual behavior Im having an issue where roughly half of all subscription charges get stuck in Payment Pending mode for multiple days However the other half of them charge successfully so I know that my logic is acknowledging the purchase or at least attempting to each time How could this happen Tested environment Emulator Real Device Real Devices Steps to reproduce the behavior This has only been happening to the users of my app I cant seem to reproduce it myself its successful every time I test it For more context this is for a day free trial of a subscription The initial purchase works okay with no payment pending issues its the automatic renewal at the end of the day trial where the payment pending issue happens Does the second real charge after the free trial need to be somehow acknowledged as well even if a user doesnt necessarily open the app around that time Perhaps this is nothing to do with acknowledging but its the only thing I can think of Im basically using the example in the readme for purchase flow this is my code pre thispurchaseUpdateSubscription purchaseUpdatedListenerpurchase InAppPurchase SubscriptionPurchase ProductPurchase const receipt purchasetransactionReceipt if receipt thisactivePurchaseSku null Enable the purchase thisenablePurchaseBySkupurchaseproductId false Aknowledge the transaction RNIapfinishTransactionpurchase pre Version of reactnativeiap Version of reactnative Platforms you faced the error IOS or Android or both IOS Expected behavior RNIapgetSubscriptions skus should resolve Actual behavior On some devices it hangs forever and never resolves Tested environment Emulator Real Device Real Devices live on store Steps to reproduce the behavior Call RNIapgetSubscriptions skus after launching the app It has been difficult to reproduce internally we have only reproduced it once and restarting the device fixed it For most live users however restarting their devices does nothing Version of reactnativeiap Version of reactnative Platforms you faced the error IOS or Android or both iOS and later Expected behavior It should go for purchase or restore the product but it is getting error Code try const purchases await RNIapgetAvailablePurchases if purchases purchaseslength thissetStateisLoading false AlertalertRestore Successful else thisrequestPurchaseitemSku catcherr Alertalerterrmessage After this its going to catch with error EUNKNOWN Cannot connect to iTunes Store while user did not clicked any option Tested environment Emulator Real Device I tested on both and behavior is same AppStore Review We found that your inapp purchase products exhibited one or more bugs when reviewed on iPad running iOS on WiFi Specifically an error message was displayed when we attempted to purchase Next Steps When validating receipts on your server your server needs to be able to handle a productionsigned app getting its receipts from Apple s test environment The recommended approach is for your production server to always validate receipts against the production App Store first If validation fails with the error code Sandbox receipt used in production you should validate against the test environment instead Resources You can learn more about testing inapp purchase products in your development sandbox environment in App Store Connect Developer Help For more information on receipt validation please see What url should I use to verify my receipt in the InApp Purchase FAQ Learn how to generate a receipt validation code in App Store Connect Developer Help Please see attached screenshot for details img width altScreen Shot at AM src When working with autorenewable subscriptions it is a common situation that a developer is using their device with their Apple iTunes account with multiple user logins Ie Registering and account on the platform you are building signing up to an autorenewable subscription paying with your iTunes account Then logging out registering a new account At this point I think it is possible for await RNIapgetAvailablePurchases to return active purchases for the new second user despite them not having signed up to the autorenewable subscription yet Is this correct At some point I do intend to do or contribute to a PR with a clearer example and slightly reformatted README However in the meantime I thought it might be helpful to put these here for anyone who is struggling to understand the expected flow The first thing to remember is that The IAP UI is different in sandbox development and TestFlight vs production misleading developers about the final user experience It is incredibly frustrating that you cant test the final flow until the app is live According to this source and also my experience there are some weird gotchas when testing IAP mainly around which account details to input when you see a popup If you log in to the App Store app with your sandbox credentials it will ruin your sandbox account Therefore its important to know which details you need to enter in which popup Before you start You must ensure that all of your Agreement Tax and Banking are Active in ItunesConnect please see You have created a FRESH Sandbox Tester in Users Access in iTunesConnect In my opinion when testing its best to sign out from iTunes on the device both your account AND your Sandbox Tester account in order to make it clearer when you are required to enter information and what this information is for Settings iTunes App Store Sign Out Testing locally on a simulator Apple has stated multiple times that IAP must be tested on a device not on the simulator There have been versions of iOS and MacOS that have allowed you to test IAP in the simulator but that is the rare gift rather than something to be expected I wish this was more obvious Testing locally on a device First you will see a popup that will ask you to sign into your sandbox account If you are not logged into your Sandbox iTunes account it will ask you to login to your Sandbox Apple Id Note Even though it doesnt say Environment Sandbox on this popup this is your Sandbox Account and not your normal Apple Account img src altsigninlocal width The reason why I know it is the sandbox account if you login and then go to Settings iTunes App Store you will see that you have been logged in to your Sandbox Account and NOT your main Apple Id If you were already logged into your Sandbox iTunes account the popup will look like this img src altsigninlocalpreviouslyloggedin width Sometimes you may get this popup Exactly when this happens requires more research img src altyouraccountistemporarilyunavailablelocal width I have also got these two popup at this point too Any information on these edge cases would be helpful img src altenterthepasswordsandboxlocal width img src altifyouhaveusedtheiTunesStorelocal width After selecting a purchase to buy you will see a popup where you will need to enter the password again for your Sandbox Account in order to purchase this happens instead of the conventional purchase screen img src altconfirmpurchaselocal width Then you will see a popup asking you to confirm the purchase img src altconfirmsubscriptionlocal width If the subscription was a success you will see img src altyourallsetlocal width If the subscription fails you will see img src altnotauthorisedlocal width UPDATE from jordangrant After successfully subscribing if you try to subscribe again you will see img src altalreadysubscribed width Testing on TestFlight TestFlight users dont require a sandbox account but they will test against an automatically created sandbox account This means its no longer necessary to create test accounts in iTunes Connect Your TestFlight user is a legitimate App Store user but doing inapp purchases made with beta builds are free within the context of the beta version If you are already logged into your iTunes account and you try to make a purchase you should see this img src altconfirmpurchasetestflight width However if you are logged out you will see this img src altconfirmpurchasetestflightloggedout width When you see these you must enter your iTunes credentials rather than a Sandbox account Validating Receipts In my experience the main problem is when you are validating receipts with const decodedReceipt await RNIapvalidateReceiptIos receiptdata latestAvailableReceipt password CITUNESCONNECTSHAREDSECRET isTestEnvironment The variable isTestEnvironment will toggle between validating using And will cause a popup to be displayed dependent on which environment you are in If you use DEV for the environment variable this will be false in TestFlight and therefore will try to validate the receipt purchased with the production endpoint Therefore my solution is similar to this advice from agates and create a way to check if the app is running on TestFlight In your Xcode workspace create a file TestFlightCheckerh C ifndef TestFlightCheckerh define TestFlightCheckerh if hasincludeRCTBridgeModuleh import RCTBridgeModuleh else import ReactRCTBridgeModuleh endif interface TestFlightChecker NSObject RCTBridgeModule end endif TestFlightCheckerh In your Xcode workspace create a file TestFlightCheckerm C import TestFlightCheckerh implementation TestFlightChecker dispatchqueuetmethodQueue return dispatchgetmainqueue BOOLrequiresMainQueueSetup return YES RCTEXPORTMODULE NSDictionary constantsToExport NSURL receiptURL NSBundle mainBundle appStoreReceiptURL NSString receiptURLString receiptURL path BOOL isRunningTestFlightBeta receiptURLString rangeOfStringsandboxReceipt location NSNotFound return isTestFlight isRunningTestFlightBeta end Those are the files needed to call the objectivec functions from react native The function above will determine if the app is on the App Store or on TestFlight And now the reactnative implementation js import NativeModules from reactnative const TestFlightChecker NativeModules export default TestFlightChecker This way youll be able to do js import TestFlightChecker from testflight const isTestEnvironment DEV TestFlightCheckerisTestFlight const decodedReceipt await RNIapvalidateReceiptIos receiptdata latestAvailableReceipt password CITUNESCONNECTSHAREDSECRET isTestEnvironment Followed by Id like to charge for developing our example project with fullfeatured set Agreeing with the reply provided Id like to give reactnativeiap users an easier solution to reduce their times of headache I hope many people give interest in working on this If some of you already have worked on this in your company itd be easier Funded from open collectives PS Everyone whos interested in this can participate as a reviewer too