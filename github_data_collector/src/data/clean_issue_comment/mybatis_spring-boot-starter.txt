Group Id orgmybatisspringboot Artifact Id mybatisspringbootstarter Version Topic Association is not working in a complex result mapping if there is no result variable definition in the mapping Summary What I expect is if mapping has associations and collections mybatis has to map them Situation I have a DTO object called BlogDto which contains model aggregations called Blog Author and Post given below so service will return one object BlogDto with related model entities If I define my mapping like given below I get TooManyResultsException Which means mybatis could not map associations and collections to BlogDto object here is the mapping mapping what I expect a BlogDto object contains one Blog assocication one Author assocication and Post Collection related to this Blog But service throws this exception below orgapacheibatisexceptionsTooManyResultsException Expected one result or null to be returned by selectOne but found at orgapacheibatissessiondefaultsDefaultSqlSessionselectOneDefaultSqlSessionjava at javabasejdkinternalreflectNativeMethodAccessorImplinvoke Native Method at javabasejdkinternalreflectNativeMethodAccessorImplinvokeNativeMethodAccessorImpljava at javabasejdkinternalreflectDelegatingMethodAccessorImplinvokeDelegatingMethodAccessorImpljava at javabasejavalangreflectMethodinvokeMethodjava at orgmybatisspringSqlSessionTemplateSqlSessionInterceptorinvokeSqlSessionTemplatejava at comsunproxyProxy selectOneUnknown Source at orgmybatisspringSqlSessionTemplateselectOneSqlSessionTemplatejava But if I add a variable to BlogDto object and add it to the mybatis mapping it works like a charm and return the given json from the service This is the service response So I think this is a bug or maybe an enchancement that association and collections are not working under an object map if there is no constructor or result type defined in the mapping Thanks x Apply workaround via gh Support JKD on Groovy Issue on Groovy In a multimodule project we want to declare versions in the parent POM and only the dependencies in the dataaccess modules The parent POM looks like excerpt of the relevant parts project parent groupIdorgspringframeworkbootgroupId artifactIdspringbootstarterparentartifactId version RELEASEversion relativePath parent properties mybatisspringbootversion mybatisspringbootversion properties dependencyManagement dependencies dependency groupIdorgmybatisspringbootgroupId artifactIdmybatisspringbootartifactId versionmybatisspringbootversionversion typepomtype scopeimportscope dependency dependencies dependencyManagement project However this approach ends up overwriting Spring Boot RELEASE dependency management with Spring Boot RELEASE because its imported in mybatisspringboot A separate BOM artifact for dependency management will solve this problem for multimodule projects and wouldnt impact mybatisspringbootstarter users Edit reason wrong C P the dependency I was referring to is mybatisspringboot not mybatisspringbootstartertest 