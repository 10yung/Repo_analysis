added example for multiple tab support in carplay added different assets for carplay tab icons added a sublist within JSON file for each CarPlay tab to load different list I also checked the box to enable Mac Catalyst Can remove and resubmit since this is out of scope of the rest of my PR but this is allnative so there shouldnt be an issue running locally so long as the appropriate entitlement is granted by Apple private func setupNotifications let notificationCenter NotificationCenterdefault notificationCenteraddObserverself selector selectorhandleInterruption name AVAudioSessioninterruptionNotification object nil notificationCenteraddObserverself selector selectorhandleRouteChange name AVAudioSessionrouteChangeNotification object nil notificationCenteraddObserverself selector selectorplayerDidFinishPlaying name AVPlayerItemDidPlayToEndTime object nil notificationCenteraddObserverself selector selectorplayerDidRecieveError name AVPlayerItemNewErrorLogEntry object nil notificationCenteraddObserverself selector selectorplayerDidRecieveError name AVPlayerItemFailedToPlayToEndTime object nil notificationCenteraddObserverself selector selectorplayerDidRecieveError name AVPlayerItemPlaybackStalled object nil I added more notifications for interruption handling but seems not to be working please help with this issue analogcode fethica Go to app Start to Play any radio then press Stop Swipe from top and enable Flight Mode Return to app and press Play then Stop Swipe from top and disable Flight Mode Return to app and press PlayStop nothing happens I added One Signal Push Notification and its working great Step Create One Signal Account Generate iOS Push Certification for One Signal iOS Device Add Notification Service Extension In Xcode Select File New Target Select Notification Service Extension then press Next Enter the product name as OneSignalNotificationServiceExtension and press Finish Press Cancel on the Activate scheme prompt By cancelling you are keeping Xcode debugging your app instead of just the extension If you activate by accident you can always switch back to debug your app within Xcode next to the play button In the project navigator click the top level project directory to open the Xcode project settings and select the OneSignalNotificationServiceExtension target in the project and targets list Unless you have a specific reason not to you should set the Deployment Target to be iOS Open NotificationServicem or NotificationServiceswift and replace the whole file contents with the below code import UserNotifications import OneSignal class NotificationService UNNotificationServiceExtension var contentHandler UNNotificationContent Void var receivedRequest UNNotificationRequest var bestAttemptContent UNMutableNotificationContent override func didReceive request UNNotificationRequest withContentHandler contentHandler escaping UNNotificationContent Void selfreceivedRequest request selfcontentHandler contentHandler bestAttemptContent requestcontentmutableCopy as UNMutableNotificationContent if let bestAttemptContent bestAttemptContent OneSignaldidReceiveNotificationExtensionRequestselfreceivedRequest with selfbestAttemptContent contentHandlerbestAttemptContent override func serviceExtensionTimeWillExpire Called just before the extension will be terminated by the system Use this as an opportunity to deliver your best attempt at modified content otherwise the original push payload will be used if let contentHandler contentHandler let bestAttemptContent bestAttemptContent OneSignalserviceExtensionTimeWillExpireRequestselfreceivedRequest with selfbestAttemptContent contentHandlerbestAttemptContent Ignore any build errors at this point step will import OneSignal which will resolve any errors Import OneSignal intoRadio Swift Xcode project Setup CocoaPods on your system if you dont have it already Alternatively follow our Carthage setup guide instead if you cant use Cocoapods in your project Make sure you have version or newer by running pod version from the terminal Run the following to upgrade sudo gem install cocoapods Make sure your current Xcode project is closed Run pod init from the terminal in your project directory Open the newly created Podfile with your favorite code editor such as Sublime Add the OneSignal dependency under your project name target as well as OneSignalNotificationServiceExtension target like below target SwiftRadio do pod OneSignal end target OneSignalNotificationServiceExtension do pod OneSignal end run following terminal pod repo update then pod install Open the newly created projectnamexcworkspace file Make sure to always open the workspace from now on Add Required Capabilities Select the root project and Under Capabilities Enable Push Notifications Only do this for the main application target Do not do this for the Notification Service Extension Next Enable Background Modes and check Remote notifications Add Required Code Navigate to the AppDelegate file and add the following OneSignal initialization code to didFinishLaunchingWithOptions Replace YOURAPPID with your OneSignal App ID let onesignalInitSettings kOSSettingsKeyAutoPrompt false Replace YOURAPPID with your OneSignal App ID OneSignalinitWithLaunchOptionslaunchOptions appId YOURONESIGNALAPPID handleNotificationAction nil settings onesignalInitSettings OneSignalinFocusDisplayType OSNotificationDisplayTypenotification Recommend moving the below line to prompt for push after informing the user about how your app will use them OneSignalpromptForPushNotificationsuserResponse accepted in printUser accepted notifications accepted Make sure to import the OneSignal headers Swift import OneSignal source Hey everyone I created a new branch that supports CarPlay for the SwiftRadio CarPlay SwiftRadio Also I created a step by step post to show how to implement this feature Add CarPlay support to Swift Radio Cheers Is there a free API to get a list of radio stations by location So I added a recently played icon button on the now playing page I linked it to a tableview and got it working I inputed the JSON recently played link in the station long description Here is my code for the recently played tableviewcontroller import UIKit MARK JSON The Initial Response From The JSON struct Response Codable var playHistory Album The Album Received Which Is An Array Of Song Data struct Album Codable var song SongData The SongData From The PlayHistory Album struct SongData Codable var album String var artist String var cover String var duration String var programStartTS String var title String class TableViewController UITableViewController Create An Array To Store The SongData var songs SongData var currentStation RadioStation var downloadTask URLSessionDownloadTask override func viewDidLoad superviewDidLoad selftableViewdelegate self selftableViewdataSource self Load The JSON From The Main Bundle guard let urlText URL string currentStationlongDesc else return do a Get The Data From The From The File let data try DatacontentsOf urlText b Decode The Data To Our Structs let albumData try JSONDecoderdecodeResponseself from data c Append The Songs Array With The PlayHistory albumDataplayHistorysongforEach songsappend d Test Some Data print The First Album Details Album songs album Artist songs artist Cover songs cover Duration songs duration Start songs programStartTS Title songs title Load The Data DispatchQueuemainasync selftableViewreloadData catch printerror MARK UITableView override func numberOfSectionsin tableView UITableView Int return override func tableView tableView UITableView numberOfRowsInSection section Int Int return songscount override func tableView tableView UITableView cellForRowAt indexPath IndexPath UITableViewCell Create A Cell let cell tableViewdequeueReusableCellwithIdentifier cell for indexPath as TableViewCell Set Its Text cellsongTitletext songs indexPathrow title cellartistLabeltext songs indexPathrow artist Get The Image Start with placeholder image so it shows until image download completes cellsongCoverimage UIImagenamed WhiteLogopng Continue with your logic no change really but could be shortened to if let imageURL URLstring songs indexPathrow cover let request URLSessionshareddataTaskwith imageURL imageData response error in guard let imageData imageData else return DispatchQueuemainasync cellsongCoverimage UIImagedata imageData requestresume return cell override func tableView tableView UITableView didSelectRowAt indexPath IndexPath print Album indexPathrow Selected Album songs indexPathrow album Artist songs indexPathrow artist Cover songs indexPathrow cover Duration songs indexPathrow duration Start songs indexPathrow programStartTS Title songs indexPathrow title Hey everyone We just pushed a new repo Its an opensource music instrument app I would be honored if you wanted to check it out romplayer App Store Example FM Player Thank you fethica Also has a cool new repo he is working on Ill let him tell you about it when he is ready Stay tuned 