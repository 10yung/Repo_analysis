Hi there Im working through rustlings on a Windows machine Its a wonderful resource thankyou so much for putting the effort into making it One thing I have yet to figure out is how to view the output of the current exercise Currently I just see if an exercise compiles and the compile errors if not However if an exercise uses println it would be lovely to be able to see that output somewhere Am I doing something wrong or is this something thats yet to be implemented first pod There are several new concepts in the arc rs exercise and I wonder if it would be useful to have a few gentle lead ins before this exercise In particular threads are a big leap in complexity with some new syntax closures It would also be helpful to know what the arc code is trying to do in the first place Reverse engineering the logic with known missing lines of code and figuring out threads and figuring out Arc seems like too much for one exercise Im doing the exercises but I get the following error with if thread main panicked at Failed to run run command Os code kind PermissionDenied message Access is denied src libcore resultrs FSecure also warns about SuspiciousW MalwareDeepGuard Application blocked File temp Reason SuspiciousW MalwareDeepGuardn Hi Its possible to pass test with incorrect macro For example this gives message that the code is successfully compile macrorules mymacro eexpr e fn main if mymacroworld Hello world panicOh no Wrong output It compiles yes but its obviously incorrect Is it a suitable start for someone with Rust experience my guess yes but it is a guess and it turned out to be wrong small exercises to get you used to reading and writing Rust code indicates that it is for beginners but it is unclear is it for someone just starting from hello world Alternatively for a firsttime Rust learner theres several other resources Is it supposed to mean firsttime Rust learner you will be better served by this alternatives or for firsttime Rust learner this also may be useful So I was going through rustlings which has been great thanks and as it happens the next unit after tests rs is test rs in the root It took me some hard staring to figure out why the code didnt look like I expected it to before I noticed the onecharacter difference in the filenames Im not sure what the best solution here is perhaps testrs in the root directory could be renamed to quizrs since that also describes what they are and that doesnt collide with a concept being taught Currently rustlings is lacking any exercises dealing with traits To address this Im submitting two exercises related to implementing a simple trait I am trying to run rustlings on NetBSD When I issue cargo install force path command things began to build but failed when building termios In the cargoregistrysrcgithubcom ecc db ec termios srcos directory I did see freebsdrs dragonflybsdrs and openbsdrs What I did to fix the issue Copied freebsdrs to netbsdrs freebsd is closer to netbsd than the other two options Added netbsd as an option to termios srcosmodrs at lines and respectively rust cfgtargetos netbsd pub use selfnetbsd as target snip cfgtargetos netbsd pub mod netbsd Added the following to librs as a noob I am not sure if it matters rust cfgtargetos netbsd fn setfastestspeedtermios mut Termios ioResult cfsetspeedtermios termiososfreebsdB Everything did compile and it seems to be working