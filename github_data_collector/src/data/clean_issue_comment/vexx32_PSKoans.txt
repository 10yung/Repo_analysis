 PR Summary Fixes outstanding issues in several koan files Some changes are relatively minor others are a bit more extensive depending on the scope of the issues in the file Context Fixes Fixes Fixes Fixes Fixes Fixes Fixes Fixes Fixes Many thanks to joewatts jeffchristman scottone and figueroaDavid for finding these issues feel free to leave a review comment on this PR if you feel the solution could use more Changes Fixes issues in AboutModules AboutTeeObject AboutMeasureObject AboutSelectObject AboutAssignmentAndArithmetic AboutDiscovery AboutArrays Checklist x Pull Request has a meaningful title x Summarised changes x Pull Request is ready to merge is not WIP x Added tests only testable interactively Make sure you add a new test if old tests do not effectively test the code changed Added documentation opened issue to track adding documentation at a later date PR Summary Add functionality for opening current koan file instead of just the overall PSKoanLocation from ShowKarma Context This PR supersedes all credit for initial idea goes to arefg thank you so much for the work you put in on this already it really made this a hundred times easier Changes Moves the open koan folder functionality to Library switch Modifies Contemplate switch to work as an open current file in the set editor with capability to recognise code and codeinsiders as well as atom and pass correct arguments for these editors to also go to the relevant line in the file Updates tests to verify new functionality Checklist x Pull Request has a meaningful title x Summarised changes x Pull Request is ready to merge is not WIP x Added tests only testable interactively Make sure you add a new test if old tests do not effectively test the code changed x Added documentation opened issue to track adding documentation at a later date PR Summary Fixes Context A draft for bug fixing katas This is going to take a little time Please add a WIP I would however appreciate any feedback as and when anyone feels like commenting Changes Adds Bug fixing kata Checklist x Pull Request has a meaningful title x Summarised changes Pull Request is ready to merge is not WIP Added tests only testable interactively Make sure you add a new test if old tests do not effectively test the code changed Added documentation opened issue to track adding documentation at a later date ISSUE Original Line TypeOf thModule Modules ModuleType Modified Line TypeOf thModule Modules ModulesCount ModuleType Lets start with I am trying to get comfortable with VS Code So IMHO GetModule is VERY system dependent it turns out when running ShowKarma it only returns Modules Lots of trial and error to establish this so there was never a th Module to get the type of When I run the command GetModule SortObject Property Name Unique in the PowerShell console I will get Modules with a count of When I run the command GetModule SortObject Property Name Unique in the PowerShell Integrated console I get a count of The actual modules identified are different in each console If I restart VS Code and run the command GetModule SortObject Property Name Unique before I run ShowKarma I get different results from what I got before So in conclusion evaluating TypeOf thModule can be a bit of challenge At least with the modified line you arent hitting a null record I am sure that on some systems this works just fine Im not actually sure what can be done about this to make it more solid and reliable but knowing it can be an issue may help someone in the future ISSUE ArgumentList parameter not needed Original Line Module NewModule Name PSKoansTestModule ScriptBlock ArgumentList Modified Line Module NewModule Name PSKoansTestModule ScriptBlock System throws error if an argument list is not provided Removing the ArgumentList parameter solves the problem ISSUE Typo there was a space in the wrong spot Original Line ImportModule TestDrive TestModulepsm Should Be NullOrEmpty Modified Line ImportModule TestDrive TestModulepsm Should BeNullOrEmpty ISSUE can store the objects into a variable Original Line Values alpha beta gamma TeeObject Variable Numbers Should Be Values Modified Line Values alpha beta gamma TeeObject Variable Numbers Should Be Values Once again depending on the intent of the developer If the intent was to only supply enough slots for the values located in Values then there needs to be one less placeholder If the intent is to keep the individual working through the tests on their toes so they realize that there is one too many place holders then this is good to go However you may have folk searching the Issues to see if this has been reported ISSUE can also store the objects into a file Original Line Should Be Stored Modified Line and add a line Should Be Stored RemoveItem File Force ErrorAction SilentlyContinue When dividing by a number the only way to get a whole number is to divide by All other values are going to be fractions so a whole value of doesnt work Also we really should be good citizens and clean up after ourselves ISSUE can operate on object properties Well Averages can be challenging especially when the resulting average can have a seemingly endless number of significant digits I would propose that you limit the number of significant digits in some manner otherwise it is going to be hit and miss for passing this test Original Line Should Be DataAverage Modified Line Should Be Should Be math RoundDataAverage ISSUE can measure text lines characters and words of strings EXCEPT when the file does not exist then the answers are always zero If this was your intent then this isnt an issue otherwise it might be wise to have a file that exists as part of the data I just picked a file and plugged it in Original line Text GetContent GetPSKoanLocationFoundationsAboutTheStockChallengeKoansps Modified line Depends on the intent of the developers Describe Koan Bug Issue or Help Request ISSUE Value to be evaluated in the Pester test was null and type for Pester test is incorrect Original Line SelectedGetTypeFullName Should BeOfType SystemIODirectoryinfo Modified Line FolderGetTypeFullName Should BeOfType SystemString ISSUE Code presented did not contain a property that would satisfy the associated Pester test Previous examples of Selected contain references to a property that would satisfy the Pester test so adding the appropriate code and using the abbreviations for Name and Element to get the code to fit with the current example is needed Original at line Selected GetProcess Id PID SelectObject Name Id n Size e GetItem PathLength Modified at Line Selected GetProcess Id PID SelectObject Name Id n RunningTime e GetDate StartTime n Size e GetItem PathLength So that the line at what is now makes sense Selected Should BeOfType TimeSpan ISSUE Depending on the intent of the developer Given what I understand to be the intent you may have wanted the student to explore PSCustomObject to discover how it is a SystemManagementAutomationPSObject however things were a bit ambiguous as to exactly how you wanted to have the student demonstrate that they had done the exploration I have provide a tweaksuggestion that may prevent others from posting an issue with the code Original at line or if previous changes have been made PSCustomObject Should Be SystemManagementAutomationPSObject Modified at line r Could be PSCustomObject Should Be SystemManagementAutomationPSObject With the solution being PSCustomObject FullName Should Be SystemManagementAutomationPSObject Missing s in cmdlt on line in AboutSelectObjectps Original line Selected GetProces Id PID SelectObject Name ID Path Should be Selected GetProcess Id PID SelectObject Name ID Path The GetProcess cmdlet is missing an s BackupRestore existing Pester module PSKoans uninstall and cleanup instructions Instructions or a separate script should be provided regarding the steps needed to backuprestore the buildin Pester module and the process of uninstalling the PSKoans module and the files it adds to the user profile to restore the system to a prePSKoans state Describe Koan Bug Issue or Help Request List the koan files youre experiencing issues with as well as the folders theyre contained in Context The Problematic Assertions It can look for commands by module KoanCommands GetCommand Module PSKoans SortObject Property Name First Commands KoanCommands SelectObject First Should Be KoanCommandsCount Should Be KoanCommandsName Context Your Attempts The assertion could only pass if there were commands in the PSKoans module Correction Should Be First CommandsName List possible solutions or any cases where you feel you did get it right but it was not recognised and anything else youve tried Context Additional Information Add any other context or references you think would be helpful 