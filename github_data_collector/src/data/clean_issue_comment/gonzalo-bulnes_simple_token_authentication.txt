I am trying to make a basic mobile app where the phone number is the identifier and the user receives a pin which they use to do one time authentication I have everything setup and working The only issue is that simpletokenauthentication returns an authentication token when registering but I dont want the user to have a token until they have returned the pin Essentially how do you separate it so that you can create a user without signing them in i have installed this gem and have done configuration as are described in docs But i wonder that this gem doesnt protect data I imagine that i should do api request with valid email token in header and get response with data and if email or token are wrong then i should get error in response but i all time get Ok response For example here of my simple controller class ApiV PropertiesController ApplicationController actsastokenauthenticationhandlerfor User respondto json def index properties Propertyall respondwith properties end end and even with invalid data i get properties in server response Why Do i miss something or it is incorrect work of the gem I have my controller ruby class BaseController ActionControllerAPI actsastokenauthenticationhandlerfor User fallback exception end I expect to it to render json error But it redirect me to usersignin page of devise And what kind of exception you raise While working through the PR for I found that adding an override for the attribute authenticationtoken caused one of my Rails apps to fail This was reporting ActiveRecordDangerousAttributeError on the attribute After digging around I found that actsastokenauthenticatable really doesnt do much The file it is defined in gets applied to ActiveRecordBase which meant that all changes made in there become part of that Base class This led to ActiveRecord noticing that the attribute I was attempting to override was overriding what it considered to be core ActiveRecord functionality I have worked up a PR to split out actsastokenauthenticatable so that the underlying functionality is only applied to the models the method call appears in This follows the approach I see you already have for the controller handler actsastokenauthenticationhandler Unfortunately this PR was worked up based on the work already done for It doesnt make sense in my opinion to go back and rework everything against the current version so I propose that the PRs for this issue and be adopted together I hope you are OK with that Ill submit the new PR once weve made progress on the first one This PR relates to the discussion in issue regarding the storage of plain text authentication tokens in the database The default operation of the gem has not been altered Some configuration has been added to allow the developer to select to use digest rather than plain persistence of authentication tokens The digest tokens are generated with the default Devise password hasher BCrypt by default The challenge was not the generation or comparison of the digest tokens but preventing a horrible slowdown BCrypt is computationally expensive by design to prevent somebody being able to bruteforce the digests For a stateless API this is no good since there is no session and instead there is a reauthentication on each request For this I implemented a cache mechanism allowing an existing inmemory cache to be used to hold the previous authentication by a user I think that the update I have made to the README explains things best so Ill quote here Persisting Tokens The configuration allows for tokens to be stored as either plain text or as a digest generated by the default Devise password hashing function typically BCrypt This configuration is set with the item configpersisttokenas Plain Text If plain is set the authenticationtoken field will hold the generated authentication token in plain text This is the default and was in fact the only option before version In plain text mode tokens are checked for uniqueness when generated and if a token is found not to be unique it is regenerated The record attribute authenticationtoken returns the stored value which continues to be plain text Digest If digest is set the authenticationtoken field will hold the digest of the generated authentication token along with a randomly generated salt This has the benefit of preventing tokens being exposed if the database or a backup is compromised or a DB role views the users table In digest mode authentication tokens can not be realistically checked for uniqueness so the generation of unique tokens is not guaranteed even if it is highly likely The record attribute authenticationtoken returns the stored value the digest In order to access the plain text token when it is initially generated instead read the attribute plainauthenticationtoken This plain text version is only retained in the instance after authenticationtoken is set therefore should be communicated to the user for future use immediately Tokens can not be recreated from the digest and are not persisted in the datatabase Caching Authentications with Stored Digest Tokens BCrypt hashing is computationally expensive by design If the configuration uses configsignintoken false then the initial sign in is performed once per session and there will be a delay only on the initial authentication If instead the configuration uses configsignintoken true then the email and authentication token will be required for every request This will lead to a slow response on every request since the token must be hashed every time For API use this is likely to lead to poor performance To avoid the penalty of rehashing on every request cacheprovider and cacheconnection options enable caching using an existing inmemory cache such as memcached The approach is to cache the user id the authentication token as an SHA digest and the authentication status On a subsequent request the cache is checked to see if the authentication has already happened successfully If the token is regenerated the cached value is invalidated Comments in the file libsimpletokenauthenticationcacherb provide additional detail The rspec example in speclibsimpletokenauthenticationtestcachingspecrb tests the speed of the cache versus uncached authentication shows the speed up When using a BCrypt hashing cost of set by Devisestretches the speed up between using the ActiveSupport MemoryStore cache against not caching is greater than times It should be noted that hashing uses the same Devise defaults as for entity passwords including hashing cost and the Devise secret Currently there is no way to configure this differently for passwords and authentication tokens Overall it looks like there are lot of changes but the reality is that most of this new stuff is around allowing the configuration of the cache in a clean way plus some tests to show that it doesnt break things To be honest it was around the specs that I struggled most in trying to see if there was anywhere that the authentication is actually tested as a black box that I could extend I may well have not followed your existing patterns perfectly here but the tests do pass and seem to have good coverage The other thing that I had to work around was the configuration In a Rails app I used for testing the initializer file for configuration kept skipping the configurations for the ORM adapters a model I attempted to follow with the cache provider I have added a small callback after the configuration has been evaluated to attach the cache provider Since I dont see how the Adapters get configured in the current setup this may be an area worth discussing Anyway I believe that this is a decent set of changes that meets the requirements of the discussion in the original issue I considered separating out the changes into two PRs one for digest persistence and one for cache but since they are so closely related in terms of needs it didnt make sense BTW I took the liberty of bumping the version used in the gemspec to to ensure any builds reflect these changes You should feel fee to own the actual numbering Maybe this is worth a Im having to spend some time getting this incorporated into my production systems this week with tons of extra app testing so Im hoping that we can keep any changes to this PR well focused I appreciate any feedback though in making it better and more secure Hi there Im trying to use the gem to implement a click login via email configinitializerssimpletokenauthenticationrb SimpleTokenAuthenticationconfigure do config configsignintoken true end appmodelsuserrb class User ActiveRecordBase actsastokenauthenticatable end appcontrollersapplicationcontrollerrb class ApplicationController ActionControllerBase actsastokenauthenticationhandlerfor User def aftersuccessfultokenauthentication Make the authentication token to be disposable currentuserauthenticationtoken nil currentusersave end end A visit to goes on to load the view However fails to correctly load anything wrapped in a usersignedin called in a beforeaction The aftersuccessfultokenauthentication hook correctly invalidates the token so on another refresh I get directed to the the Device sign in At first I thought the initializer was ignored but I can successfully authenticate with another field by specifying the configidentifiers Just lacking the session persistence Can you give me some advice Probably not a bug just me being dim Were having a great experience with the library so far but noticed a puzzling issue with trackable In the sample initializer I noticed and configured the following SimpleTokenAuthenticationconfigure do config Configure the Devise trackable strategy integration If true tracking is disabled for token authentication signing in through token authentication wont modify the Devise trackable statistics If false given Devise trackable is configured for the relevant model then signing in through token authentication will be tracked as any other sign in configskipdevisetrackable false end While using tokens Im not seeing any changes to devise trackable module attributes eg signincount etc My devise model is configured as follows class User ActiveRecordBase actsastokenauthenticatable devise databaseauthenticatable registerable confirmable recoverable rememberable trackable validatable invitable end end Any idea as to what the cause might be Thanks Is there any option where I as a user can get an authentication token Because I want to use it for simple emailpassword token authorization in external mobile app through json API gonzalobulnes Please review it for me Hello Im using a typeForm in my app This is the Json its sends to my API Parameters eventidLtWXD crgy eventtypeformresponse formresponseformidlT Z j tokena a ec a a fac submittedat T Z hiddensourcexxxxx useremailguserfmailcom usertokenHbLYEWD fbWk DqMZJ z landedat T Z calculatedscore definitionidlT Z j titleWebhooks example fields idDlXFaesGBpoF titleThanks answer Whats it like where you live Tell us in a few sentences typelongtext ref readablereflongtext allowmultipleselectionsfalse allowotherchoicefalse idSMEUb VJz Q titleIf youre OK with our city management following up if they have further questions please give us your email address typeemail refreadablerefemail allowmultipleselectionsfalse allowotherchoicefalse idJwWggjAKtOkA titleWhat is your first name typeshorttext refreadablerefshorttext allowmultipleselectionsfalse allowotherchoicefalse idKoJxDM c x h titleWhen did you move to the place where you live typedate refreadablerefdate allowmultipleselectionsfalse allowotherchoicefalse idPNe ZKBK C Q titleWhich pictures do you like You can choose as many as you like typepicturechoice refreadablerefpicturechoice allowmultipleselectionstrue allowotherchoicefalse idQ M XAwY dW titleOn a scale of to what rating would you give the weather in Sydney is poor weather is excellent weather typenumber refreadablerefnumber allowmultipleselectionsfalse allowotherchoicefalse idgFFf xAkJKsr titleBy submitting this form you understand and accept that we will share your answers with city management Your answers will be anonymous will not be shared typelegal refreadablereflegal allowmultipleselectionsfalse allowotherchoicefalse idk TP oLGgHjl titleWhich of these cities is your favorite typemultiplechoice refreadablerefmultiplechoice allowmultipleselectionsfalse allowotherchoicefalse idRUqkXSeXBXSd titleDo you have a favorite city we havent listed typeyesno refreadablerefyesno allowmultipleselectionsfalse allowotherchoicefalse idNRsxU jIW titleHow important is the weather to your opinion about a city is not important is very important typeopinionscale refreadablerefopinionscale allowmultipleselectionsfalse allowotherchoicefalse idWOTdC F A h titleHow would you rate the weather where you currently live is poor weather is excellent weather typerating refreadablerefrating allowmultipleselectionsfalse allowotherchoicefalse idpn RmPazVdM titleOn a scale of to what rating would you give the general quality of life in Sydney is poor is excellent typenumber refreadablerefnumber allowmultipleselectionsfalse allowotherchoicefalse Id like to use hidden witch contains usertoken and usermail to authenticate my user What should I do 