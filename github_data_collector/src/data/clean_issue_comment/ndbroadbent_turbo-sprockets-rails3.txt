This library is incompatible with browserifyrails because dependency modifications do not invalidate the cache Im able to get turbosprocketsrails to ignore browserifyrails by dropping this line in an initializer but this has the drawback of removing all benefit from using turbosprocketsrails Railsapplicationassetsregisterpreprocessorapplicationjavascript BrowserifyRailsBrowserifyProcessor It looks like this was encountered with SassLess in the past judging by the comments in libsprocketsunprocessedassetrb I think the root problem is that turbosprocketsrails doesnt cache the list of dependencies so it cant know when they change When I use this Gem assetsprecompile fails with Stack level too deep error Without this Gem there are no errors What could be wrong We have themes with files total assets tried increasing the ulimit size to the unlimited but still an issue How to get rid of stack level too deep error rake aborted SystemStackError stack level too deep Userspussuserrvmgemsruby p BertyAppgemsrake libraketaskrb Tasks TOP assetsprecompileall rake aborted Command failed with status Userspussuserrvmrubiesruby p Userspussuserrvmgemsruby p BertyAppgemsrake librakefileutilsrb in block in createshellrunner Userspussuserrvmgemsruby p BertyAppgemsrake librakefileutilsrb incall Userspussuserrvmgemsruby p BertyAppgemsrake librakefileutilsrb in sh Userspussuserrvmgemsruby p BertyAppgemsrake librakefileutilsextrb insh Userspussuserrvmgemsruby p BertyAppgemsrake librakefileutilsrb in ruby Userspussuserrvmgemsruby p BertyAppgemsrake librakefileutilsextrb inruby Userspussuserrvmgemsruby p BertyAppgemsactionpack libsprocketsassetsrake in rubyraketask Userspussuserrvmgemsruby p BertyAppgemsactionpack libsprocketsassetsrake ininvokeorrebootraketask Userspussuserrvmgemsruby p BertyAppgemsactionpack libsprocketsassetsrake in block levels in top required Userspussuserrvmgemsruby p BertyAppgemsrake libraketaskrb incall Userspussuserrvmgemsruby p BertyAppgemsrake libraketaskrb in block in execute Userspussuserrvmgemsruby p BertyAppgemsrake libraketaskrb ineach Userspussuserrvmgemsruby p BertyAppgemsrake libraketaskrb in execute Userspussuserrvmgemsruby p BertyAppgemsrake libraketaskrb inblock in invokewithcallchain Userspussuserrvmrubiesruby p libruby monitorrb in monsynchronize Userspussuserrvmgemsruby p BertyAppgemsrake libraketaskrb ininvokewithcallchain Userspussuserrvmgemsruby p BertyAppgemsrake libraketaskrb in invoke Userspussuserrvmgemsruby p BertyAppgemsrake librakeapplicationrb ininvoketask Userspussuserrvmgemsruby p BertyAppgemsrake librakeapplicationrb in block levels in toplevel Userspussuserrvmgemsruby p BertyAppgemsrake librakeapplicationrb ineach Userspussuserrvmgemsruby p BertyAppgemsrake librakeapplicationrb in block in toplevel Userspussuserrvmgemsruby p BertyAppgemsrake librakeapplicationrb inrunwiththreads Userspussuserrvmgemsruby p BertyAppgemsrake librakeapplicationrb in toplevel Userspussuserrvmgemsruby p BertyAppgemsrake librakeapplicationrb inblock in run Userspussuserrvmgemsruby p BertyAppgemsrake librakeapplicationrb in standardexceptionhandling Userspussuserrvmgemsruby p BertyAppgemsrake librakeapplicationrb inrun Userspussuserrvmgemsruby p BertyAppgemsrake binrake in top required Userspussuserrvmgemsruby p BertyAppbinrake inload Userspussuserrvmgemsruby p BertyAppbinrake in main Userspussuserrvmgemsruby p BertyAppbinrubyexecutablehooks ineval Userspussuserrvmgemsruby p BertyAppbinrubyexecutablehooks in main Tasks TOP assetsprecompile real m s user m s sys m s Hey guys thanks for this awesome gem Is there a way to tell turbosprockets to always precompile certain assets regardless of if the source file has changed When I run rake assetsprecompiles it gives me an error indicating usrsharerubyrvmgemsruby p gemsbundler libbundlersharedhelpersrb warning Insecure world writable dir u apporacleproduct dbhome bin in PATH mode rake aborted LoadError cannot load such file sprocketsprocessedasset usrsharerubyrvmgemsruby p gemsturbosprocketsrails libturbosprocketssprocketsoverridesprocessedassetrb in require usrsharerubyrvmgemsruby p gemsturbosprocketsrails libturbosprocketssprocketsoverridesprocessedassetrb intop required usrsharerubyrvmgemsruby p gemsturbosprocketsrails libturbosprocketsrails rb in require usrsharerubyrvmgemsruby p gemsturbosprocketsrails libturbosprocketsrails rb inblock in top required usrsharerubyrvmgemsruby p gemsturbosprocketsrails libturbosprocketsrails rb in each usrsharerubyrvmgemsruby p gemsturbosprocketsrails libturbosprocketsrails rb intop required usrsharerubyrvmgemsruby p gemsbundler libbundlerruntimerb in require usrsharerubyrvmgemsruby p gemsbundler libbundlerruntimerb inblock levels in require usrsharerubyrvmgemsruby p gemsbundler libbundlerruntimerb in each usrsharerubyrvmgemsruby p gemsbundler libbundlerruntimerb inblock in require usrsharerubyrvmgemsruby p gemsbundler libbundlerruntimerb in each usrsharerubyrvmgemsruby p gemsbundler libbundlerruntimerb inrequire usrsharerubyrvmgemsruby p gemsbundler libbundlerrb in require homedeveloperblogconfigapplicationrb intop required homedeveloperblogRakefile in top required when i start rails server it says usrsharerubyrvmgemsruby p gemsturbosprocketsrails libturbosprocketssprocketsoverridesprocessedassetrb in require cannot load such file sprocketsprocessedasset LoadError from usrsharerubyrvmgemsruby p gemsturbosprocketsrails libturbosprocketssprocketsoverridesprocessedassetrb intop required from usrsharerubyrvmgemsruby p gemsturbosprocketsrails libturbosprocketsrails rb in require from usrsharerubyrvmgemsruby p gemsturbosprocketsrails libturbosprocketsrails rb inblock in top required from usrsharerubyrvmgemsruby p gemsturbosprocketsrails libturbosprocketsrails rb in each from usrsharerubyrvmgemsruby p gemsturbosprocketsrails libturbosprocketsrails rb intop required from usrsharerubyrvmgemsruby p gemsbundler libbundlerruntimerb in require from usrsharerubyrvmgemsruby p gemsbundler libbundlerruntimerb inblock levels in require from usrsharerubyrvmgemsruby p gemsbundler libbundlerruntimerb in each from usrsharerubyrvmgemsruby p gemsbundler libbundlerruntimerb inblock in require from usrsharerubyrvmgemsruby p gemsbundler libbundlerruntimerb in each from usrsharerubyrvmgemsruby p gemsbundler libbundlerruntimerb inrequire from usrsharerubyrvmgemsruby p gemsbundler libbundlerrb in require from homeallerinblogconfigapplicationrb intop required from usrsharerubyrvmgemsruby p gemsrailties librailscommandsrb in require from usrsharerubyrvmgemsruby p gemsrailties librailscommandsrb inblock in top required from usrsharerubyrvmgemsruby p gemsrailties librailscommandsrb in tap from usrsharerubyrvmgemsruby p gemsrailties librailscommandsrb intop required from scriptrails in require from scriptrails inmain I am using Rails in my gemfile i have included group assets do gem turbosprocketsrails end Please look into this issue guide me if I am going incorrect Thanks Tejas We are on Heroku with rails X and i started trying to use redis as an asset cache ruby configassetscachestore redisstore url ENV REDISASSETCACHEURL namespace assets Sometimes it uses the cached assets within redis on deployment and sometimes it seems to recompile everything I had removed turbosproketsrails thinking that i do not need it with the above configuration but now i am doubting myself Is turbosprocketsrails needed in addition to assetcachestore thx karl Trying this out and I get the following error NoMethodError private method actions called for RakeTask assetsprecompileprimary assetscacheclean RakeTask homemervmgemsruby p gemsetgemsturbosprocketsrails libturbosprocketstasksassetsrake in block levels in top required Line of code here ndbroadbent Turbo sprockets seems to fail for the following case Make some changes in existing css file in a branch Run assetsprecompile rake task The css file will be compiled by this gem Now go to old commit after which css file was modified The css file will not be compiled and it still contains the changes done to the css file in the later commit Expected Result The css file should be compiled again as it has been restored to previous state We ran into an interesting issue in production With the exact same set of source appassets turbo sprockets on two machines produced two different files in publicassets and thus different hashes and file names So an html file on one of our machines referred to a js file that didnt exist on another Because of our load balancer we were getting badly rendered pages at random Interestingly they are only very very subtly different In jquery becomes J like Jtypet and in it becomes K like Ktypet I dont think I see any other differences We traced this back to an upgrade and rollback of a release on some of the machines others were left alone The upgrade went from turbo sprockets When that happened on the release machines we got an incompatible set of files But when we downgraded it didnt regenerate the publicassets this is kind of turbo sprockets job So with the same release on two machines we had incompatible assets between them I think I have traced this to one commit Before that release I believe SprocketsSafetyColons is in the set of processors but after that it isnt So I am guessing that is the incompatibility So Are different versions of turbosprockets guaranteed to produce the same assets with the same files I am guessing not What is the best practice in upgrading turbosprockets Always clean after upgrading If one downgrades one should also clean You cant really have multiple versions of turbosprockets on one set of load balanced machines can you The code was taken off tdwaltons issue Adding a unit test for the error I left the version number the same 