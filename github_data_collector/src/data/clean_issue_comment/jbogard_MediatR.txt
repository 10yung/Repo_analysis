Issue I want to execute an action when an exception of any kind is thrown by a handler Therefore I have defined this csharp public class RequestExceptionActionHandler IRequestExceptionActionCreateBillCommand private readonly ILoggerWorker logger public RequestExceptionActionHandlerILoggerWorker logger logger logger public Task ExecuteCreateBillCommand request Exception exception CancellationToken cancellationToken loggerLogInformationHandled BillCommand request JsonSerializerSerializerequest return TaskCompletedTask Problem description This only works if the handler throws an Exception My code throws an ArgumentException and so the issue is that the action is not executed It should work according to the docs IRequestExceptionActionin TRequest implement to execute action for any thrown exceptions which were thrown from any requests that inherit TRequest Reproduction code csharp void Main CreateHostBuildernew string BuildRun public static IHostBuilder CreateHostBuilderstring args HostCreateDefaultBuilderargs ConfigureServiceshostContext services servicesAddMediatRAssemblyGetExecutingAssembly servicesAddHostedServiceWorker public class Worker BackgroundService private readonly ILoggerWorker logger private readonly IMediator mediator public WorkerILoggerWorker logger IMediator mediator logger logger mediator mediator protected override async Task ExecuteAsyncCancellationToken stoppingToken loggerLogInformationSend at time DateTimeOffsetNow try await mediatorSendnew CreateBillCommand Id GuidNewGuid catch Exception ex loggerLogErrorex Exception occured at time DateTimeOffsetNow public class CreateBillCommand IRequestGuid public Guid Id get set public Guid ProjectId get set public DateTime ApprovedDate get set public class CreateBillCommandHandler IRequestHandlerCreateBillCommand Guid private readonly ILoggerWorker logger public CreateBillCommandHandlerILoggerWorker logger logger logger public TaskGuid HandleCreateBillCommand request CancellationToken cancellationToken if request null throw new ArgumentNullExceptionnameofrequest throw new ArgumentExceptionError nameofrequest return TaskFromResultrequestId public class RequestExceptionActionHandler IRequestExceptionActionCreateBillCommand private readonly ILoggerWorker logger public RequestExceptionActionHandlerILoggerWorker logger logger logger public Task ExecuteCreateBillCommand request Exception exception CancellationToken cancellationToken loggerLogInformationRequestExceptionActionHandler request JsonSerializerSerializerequest return TaskCompletedTask Notes Ive noticed that RequestExceptionHandlers do work like intended so there seems to be a mismatch in behavior between exception handlers and actions Demonstrate that MediatR calls handlers associated with parent message