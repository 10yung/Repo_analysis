 Purpose This PR changes SecuredRequest from a case class to a trait and adds a SecuredRequestHeader trait as well This makes it easier to change the implementation of a secured request because a wrapped request may want to implement secured request behavior ie the identity and authenticator but cannot because there is not a trait for it Because there is a factory method which uses the default impl behind the scenes this should have no impact on user facing code although I have not tried binary compatibility etc Background Context This is the approach used for extending Play requests internally ie in Note that the request body should be covariant per We currently have the TOTP implementation nevertheless it would be nice to have a SMS Text Message FA provider implementation that works as example implementation with some well known provider free development version Currently calling SecuredActionBuilder andThen someActionFunction returns a plain Play ActionBuilder having an andThen which preserves the Silhouettespecific functionality would be nice I dont have the Scalafu to know off the top of my head how to best implement this The new version of Silhouette will be based on This repository will contain the binding to the Play Framework see Pull Request Checklist X Have you read How to write the perfect pull request X Have you read through the contributor guidelines X Have you added copyright headers to new files Have you suggest documentation edits X Have you added tests for any changed functionality Purpose Implement a password hasher using Argon Versions silhouette play scala Ive implemented a global security filter close to the method described in the documentation in order to restrict access to authenticated others to all routes except a select few In the case of a request without body it works as intended When trying with a post request with a applicationxwwwformurlencoded body nothing breaks but the body appears empty to to end action When trying with a post request containing applicationjson data the request fails with For request POST login Invalid Json No content to map due to endofinput at Source akkautilByteIteratorByteArrayIteratoranon d e f line column To be fair it seems to be linked to limitations of play filters with request bodies that are not available in filters thus not being available for the nextrequest call when it is used within an action in a filter Ive tried to wrap the silhouette action in an EssentialFilter instead with mixed results code is below While the request body is available in the essential filter it is still missing in the end action with the same symptoms scala class SecurityFilter Inject silhouette Silhouette SecurityEnv implicit val mat Materializer implicit val ec ExecutionContext extends EssentialFilter val logger LoggerthisgetClass override def applynext EssentialAction EssentialAction new EssentialAction override def applyrequestHeader RequestHeader Accumulator ByteString Result silhouetteUserAwareActionasync request printlnrequestbody nextrequestrun requestHeader Am I missing something Has somebody managed to make a filter able to access user information from the request without breaking requests with bodies If not this limitation should at the very least appear in the documentation As the winner of PHC its probably a good choice to provide out the box 