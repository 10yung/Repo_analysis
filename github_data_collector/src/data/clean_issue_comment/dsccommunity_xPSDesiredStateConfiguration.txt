 Pull Request PR description Replace this comment block with a description of your PR Also make sure you have updated the CHANGELOGmd see the task list below An entry in the CHANGELOGmd is mandatory for all PRs This Pull Request PR fixes the following issues Fixes Task list x Added an entry to the change log under the Unreleased section of the file CHANGELOGmd Entry should say what was changed and how that affects users if applicable and reference the issue being resolved if applicable Resource documentation addedupdated in READMEmd Resource parameter descriptions addedupdated in READMEmd schemamof and commentbased help Commentbased help addedupdated Localization strings addedupdated in all localization files as appropriate Examples appropriately addedupdated x Unit tests addedupdated See DSC Community Testing Guidelines x Integration tests addedupdated where possible See DSC Community Testing Guidelines x Newchanged code adheres to DSC Community Style Guidelines Reviewablestart This change is img src height alignabsmiddle altReviewable Reviewableend Description Attempts to create a registry value with colons in the path using the xRegistry resource will fail with an exception The DSC configuration that is used to reproduce the issue PowerShell Configuration test ImportDscResource ModuleName xPSDesiredStateConfiguration xRegistry test Ensure Present Key HKEYLOCALMACHINE Software dsc mw jothgxmwscom ValueName TestValue ValueData ValueType DWORD Force true Verbose logs showing the problem methodName SendConfigurationApplyclassName MSFTDSCLocalConfigurationManagernamespaceName rootMicrosoftWindowsDesiredSt ateConfiguration CimMethod VM A J SID S LCM VM A J LCM VM A J LCM xRegistry test VM A J LCM xRegistry test VM A J xRegistry test TestTargetResource is starting for Registry resource with Key HKEYLOCALMACHINE Sof tware dsc mw jothgxmwscom VM A J xRegistry test GetTargetResource is starting for Registry resource with Key HKEYLOCALMACHINE Soft ware dsc mw jothgxmwscom VM A J LCM xRegistry test PowerShell DSC DSCxRegistryResource TestTargetResource The registry drive HKEYLOCALMACHINE Software dsc mw jot hgxmwscom is invalid Please update the Key parameter to include a valid registry drive Key CategoryInfo InvalidOperation CimException FullyQualifiedErrorId ProviderOperationExecutionFailure PSComputerName localhost VM A J LCM SendConfigurationApply CategoryInfo NotSpecified rootMicrosoftgurationManagerString CimException FullyQualifiedErrorId MI RESULT PSComputerName localhost CimMethod Suggested solution to the issue The GetPathRoot function has a problem It does not returns proper root drive when paths containing colons The example files include the version number of the xPSDesiredStateConfiguration module in the Requires headers It should not include this It should read powershell Requires module xPSDesiredStateConfiguration The cmdlet TestIsNanoServer is used by many of the resources This cmdlet uses GetComputerInfo to determine if the machine is Nano server powershell function TestIsNanoServer OutputType SystemBoolean CmdletBinding param isNanoServer false if TestCommandExists Name GetComputerInfo computerInfo GetComputerInfo computerIsServer Server ieq computerInfoOsProductType if computerIsServer isNanoServer NanoServer ieq computerInfoOsServerLevel return isNanoServer However GetComputerInfo is very slow taking over seconds on average to execute This causes the resources to run slow and increases overall test time significantly We should find a better way to detect if a machine is Nano Server Details of the scenario you tried and the problem that is occurring I recently mass updated my PS modules and cleaned up old ones so Im not sure which version of xPSDesiredStateConfiguration I was using previously I have always used the PublishModuleToPullServer function to conveniently package up custom modules for deployment However I just noticed that the PullServerWebConfig parameter is now required In my case I simply want to get a module that I have on my local system and package it up into a zip so I use OutputFolderPath to tell it where to drop it Now when I try the same command Ive always used Im prompted for PullServerWebConfig as well After looking through the code it appears this param isnt even used if OutputFolderPath is passed in so I provided a dummy value that satisfied the parameter validation leaf and it worked as expected My question is whether it was intentional to make this parameter mandatory when OutputFolderPath is specified The examples still suggest that we should be able to specify OutputFolderPath only Version and build of PowerShell the target node is running PSVersion BuildVersion Version of the DSC module that was used dev if using current dev branch Details of the scenario you tried and the problem that is occurring I am using xRegistry because unlike the native Registry resource it can handle the slash character in key names which is useful for disabling cipher suites For example HKLM SYSTEM CurrentControlSet Control SecurityProviders SCHANNEL Ciphers RC However unlike the native Registry resource when the xRegistry resource finds an existing registry value with different data it doesnt update the data if you dont use the Force true property If we want DSC to only detect values without modifying the data we can use the Monitor mode On the other hand the ApplyAndAutoCorrect mode is supposed to enforce every noncompliant value Enforcing means we should not have to use some kind of Force parameter ApplyAndAutoCorrect is already supposed to be like a Force mode Verbose logs showing the problem PowerShell DSC resource MSFTxRegistryResource failed to execute SetTargetResource functionality with error message SystemInvalidOperationException The registry key at path HKLM SYSTEM CurrentControlSet Services W Time Parameters already has a value with the name NtpServer To overwrite this registry key value please specifiy the Force parameter as true Suggested solution to the issue Come back to the native Registry resource behavior and make the xRegistry resource able to correct existing registry values without having to specify the Force true property Possible implementations Make the property True by default Remove the property and enforce the value anyway Other ideas The DSC configuration that is used to reproduce the issue as detailed as possible powershell insert configuration here The operating system the target node is running Please provide as much as possible about the target node for example edition version build and language On OS with WMF the following command can help get this information GetComputerInfo Property OsName OsOperatingSystemSKU OSArchitecture WindowsVersion WindowsBuildLabEx OsLanguage OsMuiLanguages OsName Microsoft Windows Server Datacenter OsOperatingSystemSKU DatacenterServerEdition OsArchitecture bit WindowsVersion WindowsBuildLabEx amd frers release OsLanguage enUS OsMuiLanguages enUS Version and build of PowerShell the target node is running To help with this information please run this command PSVersionTable PSVersion PSEdition Desktop PSCompatibleVersions BuildVersion CLRVersion WSManStackVersion PSRemotingProtocolVersion SerializationVersion Version of the DSC module that was used dev if using current dev branch xPSDesiredStateConfiguration version The AssertNoStartupTypeStateConflict in the Service Resource checks that you cannot use eg StateStopped with StartupTypeAutomatic It is considered a wrong use case But when I dont define Automatic but StateStopped I can create a new Service which is Stopped but still on automatic Which is actually what I want So I think all combinations should be ok What is probably a better idea to check If you use Absenttrue it makes no sense to define any State or StartupType Details of the scenario you tried and the problem that is occurring In its current state xUser will create a user account and apply the password if specified On subsequent runs this password is reapplied This behavior is a challenge when applying xUser to manage users via code in a production environment Suggested solution to the issue As was done with the ADUser resource in the ActiveDirectoryDsc module in PR PowerShellActiveDirectoryDsc a PasswordNeverResets property needs adding to xUser This will allow an account to be initially created with a password but then any password drift is ignored during future DSC application if PasswordNeverResets true The default behavior will be false which will retain existing behavior of the resource The TestTargetResource has different defaults to SetTargetResource in xDSCWebService Specifically the parameters RegistrationKeyPath has no default in TestTargetResource but is envPROGRAMFILES WindowsPowerShell DscService in SetTargetResource AcceptSelfSignedCertificates has no default in TestTargetResource but is true in SetTargetResource Correcting this causes unit tests to fail This should be investigated further and fixed Your feedback and support is greatly appreciated thanks for contributing ISSUE TITLE Please prefix the issue title with the resource name eg ResourceName Short description of my issue ISSUE DESCRIPTION this template Please provide information regarding your issue under each header below Write NA under any headers that do not apply to your issue or if the information is not available NOTE Sensitive information should be obfuscated PLEASE KEEP THE HEADERS You may remove this comment block and the other comment blocks but please keep the headers Details of the scenario you tried and the problem that is occurring Using Azure Automation as the pullserver with xPSDesiredStateConfiguration imported Setting a PSSessionConfiguration using the xPSEndpoint DSC resource as per below configuration example on an Azure IaaS VM running Windows Server Core returns an exception on the inital run stating that is cannot find the SetDSCMachineRebootRequired cmdlet as part of the initial SetTargetResource functionality This eventually corrects itself after the next convergence of DSC but is not ideal in a scenario if using terraform etc to configure DSC on an IaaS VM which crashes out the Terraform run as a result of the DSC extension throwing a transition failure Verbose logs showing the problem Job EC F D A E BB D A A AD MIResult Error Message The SendConfigurationApply function did not succeed Message ID MI RESULT Error Category Error Code Error Type MI Job EC F D A E BB D A A AD MIResult Error Message The PowerShell DSC resource xPSEndpoint RemotePSEndpointConfig with SourceInfo xPSEndpoint threw one or more nonterminating errors while running the SetTargetResource functionality These errors are logged to the ETW channel called MicrosoftWindowsDSCOperational Refer to this channel for more details Message ID NonTerminatingErrorFromProvider Error Category Error Code Error Type MI Job EC F D A E BB D A A AD MIResult Error Message The term SetDSCMachineRebootRequired is not recognized as the name of a cmdlet function script file or operable program Check the spelling of the name or if a path was included verify that the path is correct and try again Message ID CommandNotFoundException Error Category Error Code Error Type MI Job D CD E BB D A A AD MIResult Error Message The SendConfigurationApply function did not succeed Message ID MI RESULT Error Category Error Code Error Type MI Job D CD E BB D A A AD MIResult Error Message PowerShell DSC resource MSFTxPSSessionConfiguration failed to execute SetTargetResource functionality with error message SystemManagementAutomationPSInvalidOperationException Cannot write the shell configuration data into the temporary file C windows system config systemprofile AppData Local Temp ytro ghx ogpsshellxml Reason for failure Could not find a part of the path C windows system config systemprofile AppData Local Temp ytro ghx ogpsshellxml at MicrosoftPowerShellCommandsRegisterPSSessionConfigurationCommandConstructTemporaryFileString pluginContent at MicrosoftPowerShellCommandsRegisterPSSessionConfigurationCommandProcessRecord at SystemManagementAutomationCommandProcessorProcessRecord Message ID ProviderOperationExecutionFailure Error Category Error Code Error Type MI The DSC configuration that is used to reproduce the issue as detailed as possible powershell Configuration ConfigureAndDeployWebServers param ParameterMandatory string SomeSecret ImportDSCResource ModuleName xPSDesiredStateConfiguration SomeRunAsCredential NewObject SystemManagementAutomationPSCredentialsomeuser ConvertToSecureString SomeSecret AsPlainText Force Node somenodename xPSEndpoint RemotePSEndpointConfig Ensure Present Name RemotePS RunAsCredential SomeRunAsCredential The operating system the target node is running OsName Microsoft Windows Server Datacenter OsOperatingSystemSKU DatacenterServerEdition OsArchitecture bit WindowsBuildLabEx amd frers release OsLanguage enUS OsMuiLanguages enUS Version and build of PowerShell the target node is running Name Value PSVersion PSEdition Desktop PSCompatibleVersions BuildVersion CLRVersion WSManStackVersion PSRemotingProtocolVersion SerializationVersion Version of the DSC module that was used dev if using current dev branch imported from Powershellgallery into Azure Automation Modules 