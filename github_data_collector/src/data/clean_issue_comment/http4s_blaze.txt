Updates orgeclipsejettyjettyalpnopenjdk client from v to v Ill automatically update this PR to resolve conflicts as long as you dont change it yourself If youd like to skip this version you can just close this PR If you have any feedback just mention me in the comments below Have a fantastic day writing Scala details summaryIgnore future updatessummary Add this to your scalastewardconf file to ignore future updates of this dependency updatesignore groupId orgeclipsejetty artifactId jettyalpnopenjdk client details labels libraryupdate Current disconnect handling implementation in ChannelHead relies on matching IOExceptiongetMessage This is problematic for example on Windows these messages are localized which leads to junk log messages WARN Channel IOException not known to be a disconnect error Thread ohblazechannelnio ByteBufferHeadcheckError L javaioIOException Shouldnt there be a better way to detect such situations What do other libraries do When starting blaze http s v M on blaze v M with withSSLContext and sending a request with curl the request is successfully served but Im getting this log message I verified this using MacOS and Alpine blazeselector ERROR orghttp sblazechannelnio NIO HeadStage Abnormal NIO HeadStage termination javautilconcurrentExecutionException Boxed Error at scalaconcurrentimplPromiseresolverPromisescala orgscalalangscalalibrary jar at scalaconcurrentimplPromisescalaconcurrentimplPromiseresolveTryPromisescala orgscalalangscalalibrary jar at scalaconcurrentimplPromiseDefaultPromisetryCompletePromisescala orgscalalangscalalibrary jar at scalaconcurrentPromisecompletePromisescala orgscalalangscalalibrary jar at scalaconcurrentPromisecompletePromisescala orgscalalangscalalibrary jar at scalaconcurrentimplPromiseDefaultPromisecompletePromisescala orgscalalangscalalibrary jar at scalaconcurrentPromisefailurePromisescala orgscalalangscalalibrary jar at scalaconcurrentPromisefailurePromisescala orgscalalangscalalibrary jar at scalaconcurrentimplPromiseDefaultPromisefailurePromisescala orgscalalangscalalibrary jar at orghttp sblazepipelinestagesSSLStageanonfunhandshakeFailure SSLStagescala orghttp sblazecore M jar M at scalacollectionimmutableListforeachListscala orgscalalangscalalibrary jar at orghttp sblazepipelinestagesSSLStageorghttp sblazepipelinestagesSSLStagehandshakeFailureSSLStagescala orghttp sblazecore M jar M at orghttp sblazepipelinestagesSSLStagesslHandshakeLoop SSLStagescala orghttp sblazecore M jar M at orghttp sblazepipelinestagesSSLStagesslHandshakeSSLStagescala orghttp sblazecore M jar M at orghttp sblazepipelinestagesSSLStageanonfunsslHandshake SSLStagescala orghttp sblazecore M jar M at orghttp sblazepipelinestagesSSLStageanonfunsslHandshake adaptedSSLStagescala orghttp sblazecore M jar M at scalaconcurrentimplCallbackRunnablerunPromisescala orgscalalangscalalibrary jar at orghttp sblazeutilSerialExecutionContextanon actSerialExecutionContextscala orghttp sblazecore M jar M at orghttp sblazeutilSerialExecutionContextanon actSerialExecutionContextscala orghttp sblazecore M jar M at orghttp sblazeutilActorRecycleableRunnablego Actorscala orghttp sblazecore M jar M at orghttp sblazeutilActorRecycleableRunnablerunActorscala orghttp sblazecore M jar M at orghttp sblazeutilExecutionanon executeExecutionscala orghttp sblazecore M jar M at orghttp sblazeutilActorbangActorscala orghttp sblazecore M jar M at orghttp sblazeutilSerialExecutionContextexecuteSerialExecutionContextscala orghttp sblazecore M jar M at scalaconcurrentimplCallbackRunnableexecuteWithValuePromisescala orgscalalangscalalibrary jar at scalaconcurrentimplPromiseDefaultPromiseanonfuntryComplete Promisescala orgscalalangscalalibrary jar at scalaconcurrentimplPromiseDefaultPromiseanonfuntryComplete adaptedPromisescala orgscalalangscalalibrary jar at scalaconcurrentimplPromiseDefaultPromisetryCompletePromisescala orgscalalangscalalibrary jar at scalaconcurrentPromisecompletePromisescala orgscalalangscalalibrary jar at scalaconcurrentPromisecompletePromisescala orgscalalangscalalibrary jar at scalaconcurrentimplPromiseDefaultPromisecompletePromisescala orgscalalangscalalibrary jar at scalaconcurrentPromisesuccessPromisescala orgscalalangscalalibrary jar at scalaconcurrentPromisesuccessPromisescala orgscalalangscalalibrary jar at scalaconcurrentimplPromiseDefaultPromisesuccessPromisescala orgscalalangscalalibrary jar at orghttp sblazechannelnio NIO HeadStagereadReadyNIO HeadStagescala orghttp sblazecore M jar M at orghttp sblazechannelnio NIO HeadStageopsReadyNIO HeadStagescala orghttp sblazecore M jar M at orghttp sblazechannelnio SelectorLoopprocessKeysSelectorLoopscala orghttp sblazecore M jar M at orghttp sblazechannelnio SelectorLooporghttp sblazechannelnio SelectorLooprunLoopSelectorLoopscala orghttp sblazecore M jar M at orghttp sblazechannelnio SelectorLoopanon runSelectorLoopscala orghttp sblazecore M jar M at javalangThreadrunThreadjava Caused by javalangAssertionError This is a bug Please report to Unexpected status NOTHANDSHAKING at orghttp sblazeutilpackagebugpackagescala orghttp sblazecore M jar M more When running any basic server with blaze on http s x the logs are spammed with blazeselector WARN ohbpsQuietTimeoutStage orghttp sblazepipelinestagesQuietTimeoutStage Stage seconds received unhandled inbound command Disconnected blazeselector WARN ohsbHttp ServerStageanon Http sServerStage received unhandled inbound command Disconnected This appears to be because of this block of code in coresrcmainscalaorghttp sblazepipelineStagesscala def inboundCommandcmd InboundCommand Unit cmd match case Connected stageStartup case loggerwarnsname received unhandled inbound command cmd Neither QuietTimeoutStage nor Http ServerStage override this to handle Disconnected and the handling for Disconnected was removed in this commit The run method in SelectLoopscala catches the Throwable and then just logs For OOMs this results in the log being outputted and the OOM error stopping there This happens here Id like to fix this once I know the correct direction http s wants Would the right course of action be to log and then rethrow the Throwable up to kill the process Please review the following changes I think this isnt ever hit in practice as the handshake happens almost universally in the syncWrite path and the read path Currently we can only use NIO for clients because we dont have a way to hook client sockets into the SelectorLoop The current pipeline structure is pullbased with read and write operations returning futures so in some ways they are like a version of a socket that return a Future instead of blocking Exception for the InboundCommands they provide a way for the pipeline to push events which is a little out of place in the model That said they are useful for things like starting up a pipeline in a server where the server itself is the driver I think we can do better though maybe making signaling startup as part of pipeline builders duties or changing what the server uses to bootstrap a pipeline For example it seems reasonable to provide a HeadStage ByteBuffer to a new form scala type BufferPipelineBuilder SocketConnection LeafBuilder ByteBuffer becomes type BufferPipelineBuilder HeadStage ByteBuffer Unit Wed need to do something to incorporate the info in SocketConnection into HeadStage but that seems like a good idea as well Nothing failed so I suspect this is a racy shutdown anInnocuousThread ERROR orghttp sblazeutilExecution Trampoline EC Exception caught javalangIllegalStateException Promise already completed at scalaconcurrentPromisecompletePromisescala at scalaconcurrentPromisecompletePromisescala at scalaconcurrentimplPromiseDefaultPromisecompletePromisescala at scalaconcurrentPromisefailurePromisescala at scalaconcurrentPromisefailurePromisescala at scalaconcurrentimplPromiseDefaultPromisefailurePromisescala at scalaconcurrentimplPromiseanonfuntransformWith Promisescala at scalaconcurrentimplCallbackRunnablerunPromisescala at orghttp sblazeutilExecutionThreadLocalTrampolinerunExecutionscala at orghttp sblazeutilExecutionThreadLocalTrampolineexecuteExecutionscala at orghttp sblazeutilExecutionanon executeExecutionscala at scalaconcurrentimplCallbackRunnableexecuteWithValuePromisescala at scalaconcurrentimplPromiseDefaultPromiseanonfuntryComplete Promisescala at scalaconcurrentimplPromiseDefaultPromiseanonfuntryComplete adaptedPromisescala at scalaconcurrentimplPromiseDefaultPromisetryCompletePromisescala at scalaconcurrentimplPromiseDefaultPromiselinkPromisescala at scalaconcurrentimplPromiseDefaultPromiselinkRootOfPromisescala at scalaconcurrentimplPromiseanonfuntransformWith Promisescala at scalaconcurrentimplCallbackRunnablerunPromisescala at orghttp sblazeutilExecutionThreadLocalTrampolinerunExecutionscala at orghttp sblazeutilExecutionThreadLocalTrampolineexecuteExecutionscala at orghttp sblazeutilExecutionanon executeExecutionscala at scalaconcurrentimplCallbackRunnableexecuteWithValuePromisescala at scalaconcurrentimplPromiseDefaultPromiseanonfuntryComplete Promisescala at scalaconcurrentimplPromiseDefaultPromiseanonfuntryComplete adaptedPromisescala at scalaconcurrentimplPromiseDefaultPromisetryCompletePromisescala at scalaconcurrentPromisetrySuccessPromisescala at scalaconcurrentPromisetrySuccessPromisescala at scalaconcurrentimplPromiseDefaultPromisetrySuccessPromisescala at orghttp sblazechannelnio ByteBufferHeadanon completedByteBufferHeadscala at orghttp sblazechannelnio ByteBufferHeadanon completedByteBufferHeadscala at sunniochInvokerinvokeUncheckedInvokerjava at sunniochUnixAsynchronousSocketChannelImplfinishReadUnixAsynchronousSocketChannelImpljava at sunniochUnixAsynchronousSocketChannelImplfinishUnixAsynchronousSocketChannelImpljava at sunniochUnixAsynchronousSocketChannelImplonEventUnixAsynchronousSocketChannelImpljava at sunniochKQueuePortEventHandlerTaskrunKQueuePortjava at sunniochAsynchronousChannelGroupImpl runAsynchronousChannelGroupImpljava at javautilconcurrentThreadPoolExecutorrunWorkerThreadPoolExecutorjava at javautilconcurrentThreadPoolExecutorWorkerrunThreadPoolExecutorjava at javalangThreadrunThreadjava at sunmiscInnocuousThreadrunInnocuousThreadjava anInnocuousThread ERROR orghttp sblazeutilExecution Trampoline EC Exception caught javalangIllegalStateException Promise already completed at scalaconcurrentPromisecompletePromisescala at scalaconcurrentPromisecompletePromisescala at scalaconcurrentimplPromiseDefaultPromisecompletePromisescala at scalaconcurrentPromisefailurePromisescala at scalaconcurrentPromisefailurePromisescala at scalaconcurrentimplPromiseDefaultPromisefailurePromisescala at scalaconcurrentimplPromiseanonfuntransformWith Promisescala at scalaconcurrentimplCallbackRunnablerunPromisescala at orghttp sblazeutilExecutionThreadLocalTrampolinerunExecutionscala at orghttp sblazeutilExecutionThreadLocalTrampolineexecuteExecutionscala at orghttp sblazeutilExecutionanon executeExecutionscala at scalaconcurrentimplCallbackRunnableexecuteWithValuePromisescala at scalaconcurrentimplPromiseDefaultPromiseanonfuntryComplete Promisescala at scalaconcurrentimplPromiseDefaultPromiseanonfuntryComplete adaptedPromisescala at scalaconcurrentimplPromiseDefaultPromisetryCompletePromisescala at scalaconcurrentimplPromiseDefaultPromiselinkPromisescala at scalaconcurrentimplPromiseDefaultPromiselinkRootOfPromisescala at scalaconcurrentimplPromiseanonfuntransformWith Promisescala at scalaconcurrentimplCallbackRunnablerunPromisescala at orghttp sblazeutilExecutionThreadLocalTrampolinerunExecutionscala at orghttp sblazeutilExecutionThreadLocalTrampolineexecuteExecutionscala at orghttp sblazeutilExecutionanon executeExecutionscala at scalaconcurrentimplCallbackRunnableexecuteWithValuePromisescala at scalaconcurrentimplPromiseDefaultPromiseanonfuntryComplete Promisescala at scalaconcurrentimplPromiseDefaultPromiseanonfuntryComplete adaptedPromisescala at scalaconcurrentimplPromiseDefaultPromisetryCompletePromisescala at scalaconcurrentPromisetrySuccessPromisescala at scalaconcurrentPromisetrySuccessPromisescala at scalaconcurrentimplPromiseDefaultPromisetrySuccessPromisescala at orghttp sblazechannelnio ByteBufferHeadanon completedByteBufferHeadscala at orghttp sblazechannelnio ByteBufferHeadanon completedByteBufferHeadscala at sunniochInvokerinvokeUncheckedInvokerjava at sunniochInvoker runInvokerjava at sunniochAsynchronousChannelGroupImpl runAsynchronousChannelGroupImpljava at javautilconcurrentThreadPoolExecutorrunWorkerThreadPoolExecutorjava at javautilconcurrentThreadPoolExecutorWorkerrunThreadPoolExecutorjava at javalangThreadrunThreadjava at sunmiscInnocuousThreadrunInnocuousThreadjava anInnocuousThread ERROR orghttp sblazeutilExecution Trampoline EC Exception caught javalangIllegalStateException Promise already completed at scalaconcurrentPromisecompletePromisescala at scalaconcurrentPromisecompletePromisescala at scalaconcurrentimplPromiseDefaultPromisecompletePromisescala at scalaconcurrentPromisefailurePromisescala at scalaconcurrentPromisefailurePromisescala at scalaconcurrentimplPromiseDefaultPromisefailurePromisescala at scalaconcurrentimplPromiseanonfuntransformWith Promisescala at scalaconcurrentimplCallbackRunnablerunPromisescala at orghttp sblazeutilExecutionThreadLocalTrampolinerunExecutionscala at orghttp sblazeutilExecutionThreadLocalTrampolineexecuteExecutionscala at orghttp sblazeutilExecutionanon executeExecutionscala at scalaconcurrentimplCallbackRunnableexecuteWithValuePromisescala at scalaconcurrentimplPromiseDefaultPromiseanonfuntryComplete Promisescala at scalaconcurrentimplPromiseDefaultPromiseanonfuntryComplete adaptedPromisescala at scalaconcurrentimplPromiseDefaultPromisetryCompletePromisescala at scalaconcurrentimplPromiseDefaultPromiselinkPromisescala at scalaconcurrentimplPromiseDefaultPromiselinkRootOfPromisescala at scalaconcurrentimplPromiseanonfuntransformWith Promisescala at scalaconcurrentimplCallbackRunnablerunPromisescala at orghttp sblazeutilExecutionThreadLocalTrampolinerunExecutionscala at orghttp sblazeutilExecutionThreadLocalTrampolineexecuteExecutionscala at orghttp sblazeutilExecutionanon executeExecutionscala at scalaconcurrentimplCallbackRunnableexecuteWithValuePromisescala at scalaconcurrentimplPromiseDefaultPromiseanonfuntryComplete Promisescala at scalaconcurrentimplPromiseDefaultPromiseanonfuntryComplete adaptedPromisescala at scalaconcurrentimplPromiseDefaultPromisetryCompletePromisescala at scalaconcurrentPromisetrySuccessPromisescala at scalaconcurrentPromisetrySuccessPromisescala at scalaconcurrentimplPromiseDefaultPromisetrySuccessPromisescala at orghttp sblazechannelnio ByteBufferHeadanon completedByteBufferHeadscala at orghttp sblazechannelnio ByteBufferHeadanon completedByteBufferHeadscala at sunniochInvokerinvokeUncheckedInvokerjava at sunniochUnixAsynchronousSocketChannelImplfinishReadUnixAsynchronousSocketChannelImpljava at sunniochUnixAsynchronousSocketChannelImplfinishUnixAsynchronousSocketChannelImpljava at sunniochUnixAsynchronousSocketChannelImplonEventUnixAsynchronousSocketChannelImpljava at sunniochKQueuePortEventHandlerTaskrunKQueuePortjava at sunniochAsynchronousChannelGroupImpl runAsynchronousChannelGroupImpljava at javautilconcurrentThreadPoolExecutorrunWorkerThreadPoolExecutorjava at javautilconcurrentThreadPoolExecutorWorkerrunThreadPoolExecutorjava at javalangThreadrunThreadjava at sunmiscInnocuousThreadrunInnocuousThreadjava 