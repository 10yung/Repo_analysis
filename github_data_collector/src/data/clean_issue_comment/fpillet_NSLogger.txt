 This happens in our project because the first ClientInfo message received only contains the application name and version but not the OS details Afterwards a second ClientInfo is received with the full metadata set but by that time the connection has already been attached to a new window Im not sure if this is something we could fix in our project by initializing NSLogger differently Hi Im trying to use NSLogger in Xcode XCTests running on the simulator with the desktop viewer running on a separate computer over wifi I read the advice about using LoggerFlushnil true This works much of the time but if I dont run a test for a while the first run will hang on the following line Most often I can kill the process and rerun and LoggerFlush will return and the desktop viewer will show the logs If I allow it to timeout about minutes xctest reports nwsockethandlesocketevent C Socket SOERROR Operation timed out nwconnectiongetconnectedsocket C Client called nwconnectiongetconnectedsocket on unconnected nwconnection Could anyone suggest a direction of investigation Here are the NSLogger console logs from a successful roundtrip default NSLogger TCP Conn x d using empty proxy configuration default NSLogger Stream client bypassing proxies on TCP Conn x d default NSLogger TCP Conn x d started default NSLogger C IPv a ef f tcp local IPv b a legacysocket server start default NSLogger TCP Conn x dd using empty proxy configuration default NSLogger Stream client bypassing proxies on TCP Conn x dd default NSLogger TCP Conn x dd started default NSLogger nwconnectionreportstatewithhandlerlocked C reporting state preparing default NSLogger nwendpointflowprotocolconnected C IPv a ef f inprogress socketflow satisfied Output protocol connected default NSLogger nwconnectionreportstatewithhandlerlocked C reporting state ready default NSLogger C IPv d c tcp local IPv bfdea legacysocket server start default NSLogger TCP Conn x d event err default NSLogger TCP Conn x d complete fd err default NSLogger TCP Conn x d starting SSL negotiation default NSLogger nwconnectionreportstatewithhandlerlocked C reporting state preparing default NSLogger nwendpointflowprotocolconnected C IPv d c inprogress socketflow satisfied Output protocol connected default NSLogger nwconnectionreportstatewithhandlerlocked C reporting state ready default NSLogger nwsockethandlesocketevent C Socket received READCLOSE event default NSLogger TCP Conn x dd event err default NSLogger TCP Conn x dd complete fd err default NSLogger TCP Conn x dd starting SSL negotiation default NSLogger CFNetwork SSLHandshake failed error NSLogger TCP Conn x dd SSLHandshake failed default NSLogger TCP Conn x dd canceled default NSLogger C IPv d c tcp local IPv bfdea legacysocket server cancel default NSLogger C IPv d c tcp local IPv bfdea legacysocket server cancelled C private IPv d c Connected Path satisfied Path is satisfied interface en scoped ipv dns Duration s TCP s took s bytes inout packets inout rtt s retransmitted packets outoforder packets default NSLogger s C private IPv d c socketflow pathstart default NSLogger s C private IPv d c socketflow pathsatisfied default NSLogger s C private IPv d c socketflow flowstartconnect default NSLogger s C private IPv d c socketflow flowfinishconnect default NSLogger s C private IPv d c socketflow flowchangedviability default NSLogger s C pathcancel default NSLogger nwendpointflowprotocoldisconnected C IPv d c cancelled socketflow null Output protocol disconnected default NSLogger nwconnectionreportstatewithhandlerlocked C reporting state cancelled default NSLogger TCP Conn x d SSL Handshake DONE default NSLogger nwsockethandlesocketevent C Socket received READCLOSE event Hi Im new to NSLogger and am enjoying seeing logs in this modern way and on a second laptop screen I was wondering if there was a reason that stdout and stderr are marked with level All my current logging is coming out nicely but its marked in RED Is there a way to configure this I tried using the Advanced Colors regex but surprisingly tagstdout colored the tag cell not the message thanks for a great project Daniel Is it possible to implement support for installing using Swift Package Manager This could be quite useful now that starting with Xcode there is first class support for spm in the IDE Hi My team is using NSLogger also to display logs that were generated by field users This means that the file might contain multiple days of logging Thus it would be really helpful to display also the day month year in the log message in UI I understand that this might take some width space from the actual message text If that is a problem we could have a button like Show hide function names that toggles between a short date format and a long date format that also contains the day month year information If you think this change could be beneficial I could make a PR with the change Thanks Hi Ive noticed that the NSLoggerData files generated before th December are not compatible anymore with newer versions of NSLogger The logs will not appear in NSLogger if I try to open an nslogger file In the commit with hash eef f it seems like the LoggerConnectionm file was modified In the initWithCoder method the keys are different That means file that were generated for example with key message and not compatible now with newer version because they are using key message Was this intended If not I have a fix this in a fork Let me know if you want me to push a PR NSLogger is great Thanks Hi In LoggerClientm Im receiving an error in the routine LoggerLogToConsole Definition of tm must be imported from module DarwinCtime before it is required I found similar issues from a couple of years ago to import systimeh would solve it however you already do that and the problem persists Any thoughts Im unsure if anyone else is experiencing this but Im having major issues getting bonjour setup to work smoothly The app client side connects to NSLogger simply using LoggerSetupBonjourForBuildUser Im running latest version of the desktop app and Im on Mojave using XCode Testing with iOS simulator If I run NSLogger desktop app I can see the service running just fine I confirmed by running dnssd B nsloggerssl and I can see the instance with the correct name Ive printed out debug statements and can see NSLogger is correctly trying to attach to the correct instance name no problem Ultimately it just hangs and I see the console say configuring SSL stream open attempt waiting for open completion Eventually it will try again and usually fail Maybe after minutes it will connect Not sure why I tried rebooting my router to see if anything funky was going on and nothing really changed However during the reboot when I had no wifi connection it all of sudden started working I tested this theory by turning wifi on off multiple times If I turned off wifi it ALWAYS worked instantly but as soon as I turned wifi back on nslogger would go back to hanging with console output simply ending in stream open attempt waiting for open completion again Its great I found a way to get it to connecthowever if my wifi is off I cant get that far into testing the application Note This is my home setup Which is almost wifi I dont necessarily have the means to easily plug in Im unsure if its a Wifi issue in general or specific to my router Im using an apple airport extreme In the office on the other hand Im almost exclusively on wired ethernet and I never seem to have issues there Curious to see if anyone else having issues Environment NSLogger for iOS Problem Ive noticed the worker thread does not lock when reading the value of loggerhost This mean we can release the previous value in LoggerSetViewerHost while the worker thread is using it The following code causes the application to crash about of the time in LoggerStartReachabilityChecking CFStreamCreatePairWithSocketToHost or CFWriteStreamOpen swift LoggerSetViewerHostnil as CFString LoggerStartnil for in LoggerSetViewerHostnil as CFString Youre probably asking yourself But who would do such a stupid thing Ive observed this crash in production code where the LoggerSetViewerHost function is called before each call to LogMessage the viewer host is configured on the server and may change during the application lifetime Workaround The issue can be avoided by creating a different Logger when the viewer host changes Fixing the issue Id be happy to work on this issue I you think its worth solving the workaround works great for me but maybe other developers arewill be affected by this issue Proposal The Logger struct could be partitioned with a protected and an unprotected part The protected part would be accessible only to the worker thread The unprotected part would be accessible from everywhere and require locking When a change is signalled to the worker thread the new value is copied from the unprotected part to the protected part Alternatives The LoggerSetViewerHost function could be modified to be a NOOP when the new host and port are equal to the previous ones This is trivial and would prevent most crashes how often does the host actually change but not all of them Calls to pthreadmutexlock and pthreadmutexunlock could be added whenever loggerhost is used I think this would be very errorprone 