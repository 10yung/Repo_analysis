 As suggested by nevrome Ive created a PR relevant to issue Thanks Word of warning This issue came up at an interesting talk by annakrystalli I have no time to help out but she encouraged me to post this regardless The gold standard for reproducibility in software is to be able to produce bitwise identical outputs If we can produce an artifact with the exact same checksum as the artifact published online we are pretty sure to have reproduced it When using rrtools to produce papers in PDF the template is inadequate for making the PDF reproducible in the above sense of being bitwise identical This is largely because of the presence of timestamps inside the PDF There are ways to overcome this see It would be nice if rrtools provided support for this It must be possible to convince bookdown to include a few extra lines in the intermediate LaTeX code Word of warning This issue came up at an interesting talk by annakrystalli I have no time to help out but she encouraged me to post this regardless Consider a hypothetical library X that in version contains an obscure bug where evaluates to infinity in violation of IEEE From the perspective of the library developers this is a silly bug and a new version is released quickly where evaluates to infinity Despite this is seen as an improvement in adhering to documented behavior so the new release gets version number bug fix and not breaking change If we look at we see that this new version will likely be picked up by our docker image as soon as it finds its way to the repositories The result is that we may no longer be able to reproduce something done with X v anymore In other words reproducibility requires bugforbug compatibility with the original environment and aptget update breaks this The Bug Ideally rrtools should refer to frozen repositories or otherwise limit the possible impact of aptget update The Feature Request Perhaps not as part of rrtools but it would be nice if there was a tool that could take a compendium analyze the softwareversion that is used in it and warn the authors if any of the used software is known to contain a numerical bug We do not want outcomes to be skewed by software errors but there is very little to protect us from them Please wait for some discussion of your report before making a Pull Request Describe the bug circleci does not build due to the wrong url it has a repeated in it Turn on circleci for your repo at and add your environment variables DOCKEREMAIL DOCKERUSER DOCKERPASS see the ghwolass this needs to read ghwolas To Reproduce Start a new project using the rrtools methods described in the file in step after using rrtoolsusecirclecidockerhub FALSE you will reproduce the error The webpage will open with a wrong address error Expected behavior One should expect that the repo will be visible in circleci under the proper address and the the webpage that is getting open is not containing repeated Please wait for some discussion of your request before making a Pull Request Is your feature request related to a problem Please describe When authoring papers in the rrtools pipeline I end up producing a one DOCX file with all the figures included The problem is that the numbering of the figures is consecutive for supplementary figures and I always have to postprocess the file by hand in order to correct numbering of supplementary figures as these usually start with Suppl Fig Describe the solution youd like I would like to separate the numbering of main figures from the supplementary figures Preferably we could use something like refsfigsupplementaryfigurexyz Describe alternatives youve considered I have posted this problem on the Stackoverflow page but with no luck do we have a unified approach for this issue that can be used in the rrttools pipeline Additional context Describe the bug The function createcompendiumpkgname doesnt check whether pkgname already exists If pkgname is a folder the package is merged with an existing folder If pkgname is a file an error occurs To Reproduce In terminal create file Desktoppkgname R createcompendiumpkgname Error in writeLinesccatcrayonbold nThis project was set up by rrtools n cannot open the connection In addition Warning messages In dircreatepath pkgname already exists In writeLinesccatcrayonbold nThis project was set up by rrtools n cannot open file pkgnameRprofile Not a directory Expected behavior Check whether pkgname already exists and if it does stop Im curious to see if others think this would be valuable to this package Thanks Is your feature request related to a problem Please describe I want to use rrtools and host my remote repository on GitLab not GitHub Currently there are no convenience functions to make this happen nor to change all instances of githubcom to gitlabcom eg in the READMERmd Describe the solution youd like Offer users a convenience function rrtoolsusegitlab that is analogous to usethisusegithubcredentials git rcredsshkey authtoken xxxx protocol https private FALSE doing the following git push setupstream git remote add origin set up gitlabciyml GitLab does their own Continuous Integration and Continuous Development CICD use default Dockerfile in that gitlabciyml so you can reproduce the outputs using docker rather than gitlabrunner update the dozen lines that refer to GitHub or githubcom Outside this convenience function other changes may be necessary update the rrtoolsusetravis function to alert the user to possible duplication and allow an offramp if GitLab CICD already covers the users needs update the rrtoolscreatecompendium function to ask if GitHub or GitLab update the READMERmd on rrtools to alert people that you can do rrtoolsusegitlab to do in a single step what is currently represented as steps b usethisusegithub rrtoolsusedockerfile and rrtoolsusetravis Describe alternatives youve considered I could attempt to request this feature in the usethis package rather than here ie usethisusegitlab My sense however is that this is fairly simple to start a new repository by simply calling some system functions although at the same time I see that usethisusegithub is lines with at least checks that the function can appropriately succeed Also if rrtools uses the hypothetical usethisusegitlab it may be difficult to wrap into a single step what is currently represented as steps b usethisusegithub rrtoolsusedockerfile and rrtoolsusetravis Additional context NA Hi guys Ive been using rrtools for every projectpaper in the last years I love it and it gets better and better The problem I have right now is that by making all the statistical preliminary analysis I am bloating up the files quite a bit I do not want to increase the size of the paperRmd file unnecessarily but on the other hand I dont know if my preliminary statistical analysis will make it into the final version of the paper So one potential approach would be to split up the code into multiple files that are parts of the data analysis and paper writing process Here is an example Lets say that we want to do logistic regression on our database do multiple models and choose only one produce a preliminary figure and a publicationready figure we start as usual with our rrtools process up to the makeanalysis part NEXT and this is the enhancement I am talking about we create a bunch of R files loaddataR datawranglingR statisticalanalysisR figuresR In each file we already should have a structure with an example function JUST REMEMBER that these files need to be FUNCTIONS so it would go like that the contents of loaddataR loaddatafromsource notice no arguments userdefined input here returnreadcsvsourcedatacsv The above example shows that we could use functions in R scripts to easily incorporate them in the paperRmd file Then we do the next step content of the paperRmd r df loaddatafromsource In our database we had r nrowdf observations Please see fig reffigbaseline r baseline figcap Baseline figure producepublicationreadyfigurebaseline I hope that I am making it somewhat clear P Basically I am saying that we could help the users by making some standardized functions in the R folder so that they can fill them outeasily and not clutter their paperRmd also that makes the compilation a lot more efficient because we would only need to run only these functions that are mentioned in the paperRmd files I am right now running ALL the statisticall models that I tried and I dont want to erease them from my files but its suboptimal to run them each time I have a typo in my paperRmd file I think this approach is better than caching What do you guys think Would it be worth it to make some structure in the R folder for newbies id suggest these loaddataR datacleaningR statisticalanalysisR figuresR tablesR Another approach would be to have only one R file and the above sections within it I dont know which is better but using functions that go into the paperRmd is definitely a good approach that we should encourage Please let me know what you think even if you think that Im rambling here without any sense I think this is an important feature for reproducible research Id love to discuss Thanks In brief Problem rrtools with Dockerfile is currently reproducible conditional upon the time one builds the Docker image that produces paperhtml or ones trust in a custom Docker container published to DockerHub or a similar registry Partial Solution packrat and perhaps eventually rstudiorenv can record the exact version of all packages and Dockerfile can reproduce that state Details A Dockerfile contains enough information to create an environment but not enough information to reproduce an environment Consider a Dockerfile that contains the command installpackages dplyr Following this instruction in August and again in December will result in two different Docker containers since the current version changed RStudio and Docker 