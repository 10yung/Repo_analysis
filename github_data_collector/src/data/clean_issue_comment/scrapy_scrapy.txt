This solves All tests passed in my computer Any questions or modifications let me know Thanks Versions Affected All versions after PR when flags were added to Request Responsefollow method not consistent with Requestinit Missing flags No sure how this got missed since PR was merged but looking at the parameters for Requestinit and Responsefollow it appears flags wasnt added to Responsefollow to keep it in line with how creating new Request instances works Im not sure if this was just overlooked or was intentional when flags support was added to requests Its also missing for the subclasses of Response as well TextResponse will need updated the rest currently use inheritance I was looking to be able to add custom flags to certain Responsefollow calls but realized looking at the source they wouldnt be carried over to the new responses but this can easily be worked around by manually added the flag after Request creation This seems like an easy fix to include in or later but doesnt seem too high priority and I just thought you guys should know or that it should at least be noted somewhere on this repo since the docs still say It accepts the same arguments as Requestinit method Thanks for taking an interest in Scrapy If you have a question that starts with How to please see the Scrapy Community page The GitHub issue trackers purpose is to deal with bug reports and feature requests for the project itself Keep in mind that by filing an issue you are expected to comply with Scrapys Code of Conduct including treating everyone with respect The following is a suggested template to structure your issue you can find more guidelines at Description The static variables set in scrapyItems class are not registered in the internal values dict and therefore I cannot access them via self fieldname ie the getattr function Steps to Reproduce In my itemserrorpy file I have this the actual code is larger but I isolate the code causing the error from scrapy import Item Field class BaseItemItem urlField idField typeField def initself args kwargs superinitargs kwargs if not self type error here Raises KeyError raise NotImplementedErrortype of ad must be set as static class variable use url hash as id to avoid duplicates self id hashselfgeturl class ChildItemBaseItem typeestate otherfieldsField When I ran it this raises C Users ivangonzalez Documents Code scradypython Python packaged by condaforge default Jan MSC v bit AMD on win Type help copyright credits or license for more information from scradyitemserror import ChildItem Traceback most recent call last File stdin line in module File C Users ivangonzalez Documents Code scrady scrady itemserrorpy line in init if not self type error here Raises KeyError File C Users ivangonzalez Anaconda lib sitepackages scrapy itempy line in getitem return selfvalues key KeyError type BaseItem Traceback most recent call last File stdin line in module File C Users ivangonzalez Documents Code scrady scrady itemserrorpy line in init if not self type error here Raises KeyError File C Users ivangonzalez virtualenvs scradyd yjsu b lib sitepackages scrapy itempy line in getitem return selfvalues key KeyError type Expected behavior self fieldname should return the Field attribute Actual behavior static fields are not registered by scrapyItems in scrapyItemsvalues key Reproduces how often Ran in pipenv so Versions Please paste here the output of executing scrapy version verbose in the command line C Users ivangonzalez Documents Code scradyscrapy version verbose Scrapy lxml libxml cssselect parsel w lib Twisted Python packaged by condaforge default Jan MSC v bit AMD pyOpenSSL OpenSSL d Sep cryptography Platform Windows SP Additional context In scrapyitempy ItemMeta class the attributes should be registered by this code class ItemMetaABCMeta Metaclass of classItem that handles field definitions metaclass def newmcs classname bases attrs classcell attrspopclasscell None newbases tuplebaseclass for base in bases if hasattrbase class class superItemMeta mcsnewmcs x classname newbases attrs fields getattrclass fields newattrs for n in dirclass v getattrclass n if isinstancev Field fields n v elif n in attrs newattrs n attrs n here newattrs fields fields newattrs class class if classcell is not None newattrs classcell classcell return superItemMeta mcsnewmcs classname bases newattrs But they arent I dont know why Gallaecio created an issue in which I had to add in the backwardincompatible changes that scrapy version breaks custom schedulers I have added it to newsrst please check it out and let me know if it needs to be more thorough I have ran all the tests using tox edit Fixes Fixes Evaluates the output iterable right after the spider callback as its currently being done in the processspideroutput chain Plus some minor styling adjustments This is not very useful yet as it doesnt allow yield in callbacks but its a first step On some test runs CrawlTestCasetestfixeddelay fails with yield selftestdelaytotal delay E twistedtrialunittestFailTest twistedtrialunittestFailTest True is not false test total or delay values are too small I have noticed that the offcial documentation suggests using brotlipy While this works the project seems to be stale or abandoned Most recent release was in and most recent commit in I suggest replacing that with a more recent and seemingly more actively supported Brotli by google Its most recent release was in and most recent commit this month This library has same API and judging by my experience has proved to work seamlessly 