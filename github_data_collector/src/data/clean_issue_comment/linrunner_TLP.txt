 x Ive read and accepted the Bug Reporting Howto After updating the kernel via dnf thresholds seem to be ignored and the laptop charges till Expected behavior The thresholds should be applied and the device should stop charging at the chargestopthreshold value To Reproduce Steps to reproduce the unexpected behavior Update kernel to x set charging thresholds Does the problem occur on battery or AC or both AC Actions to reproduce the behaviour see above Shell commands entered and their output Full output of tlpstat via for all matching cases of Additional context If I can provide any logs which might help to narrow down the issue please let me know Hi all I need help with the upcoming release What has changed From a user perspective the most important change is the new configuration scheme etcdefaulttlp is replaced by etctlpconf Settings are read in the following order Intrinsic defaults etctlpdconf Dropin customizations etctlpconf User configuration In case of identical parameters the last occurence has precedence This also means etctlpconf will override anything else Config files are now parsed instead of sourced by the shell no more shell expansion Apart from that is a comprehensive maintenance release See the changelog for details Where do I get packages See the download page for Arch Linux Debian Fedora and Ubuntu If your distro is not contained you may install the master branch see Installing from Source Test Objective Regressions The new configuration scheme is obviousy critical functionality The maintenance release contains many other changes With your help I want to make sure that no new problems have been introduced What do I need from the testers Please start the beta after installing with tlp start Im expecting your outputs of sudo tlpstat on battery and AC via please Thanks for testing On Linux on Bionic KDE Neon with i M CPU frequency somehow locks at the lowest values on both AC and BAT Intel pstate is used Related settings are CPUSCALINGGOVERNORONACpowersave CPUSCALINGGOVERNORONBATpowersave CPUSCALINGMINFREQONAC CPUSCALINGMAXFREQONAC CPUSCALINGMINFREQONBAT CPUSCALINGMAXFREQONBAT CPUHWPONACbalanceperformance CPUHWPONBATbalancepower CPUMINPERFONAC CPUMAXPERFONAC CPUMINPERFONBAT CPUMAXPERFONBAT CPUBOOSTONAC CPUBOOSTONBAT As you see on AC max frequency is supposed to be But it never gets above and most of the time it is in s even under heavy load Needless to say everything is very very slow you cant even watch a video without it stuttering constantly Running cpupower c all frequencyset u Mhz fixes things and frequency starts to scale normally Before the upgrade to it was okay Expected behavior To run as it was any time before To Reproduce Steps to reproduce the unexpected behavior Does the problem occur on battery or AC or both Both Actions to reproduce the behaviour Use kernel I suppose Shell commands entered and their output tlpstat Is your feature request related to a problem Please describe Whenever my Thinkpad T s reboots or is unpluggedplugged in the keyboard backlight is turned on I would like a feature in TLP to restore the backlight state to its last state before rebootplugged I could probably do this with udev but I already have TLP running and it seems like a simple configuration setting in tlpconf would be much simpler Summary Using Fedora and tlp fc execution of usrsbintlp suspend fails The same command works correctly when using tlp fc Linked below are straces for respectively oldworking and newbroken versions Please note the following difference in the new version a path where tlp looks for rfkillsaved seems to be changed from runtlp to varlibtlp however the latter does not exist in the underlying OS This kinda makes sense given the recent introduction of the TLPVAR defaulting to varlibtlp There is a bugzilla report opened for this issue around month ago but I do believe GitHub is a better place for moving forward with this problem Debug TLP openatATFDCWD runtlprfkillsaved OWRONLYOCREATOTRUNC TLP openatATFDCWD varlibtlprfkillsaved OWRONLYOCREATOTRUNC ENOENT No such file or directory Analysis savedevicestates is trying to create andor write to a file but never takes care of creating a proper directory structure In my system the directory varlibtlp itself does not exists therefore a simple echo blablabla varlibtlprfkillsaved will fail Workaround After creating varlibtlp directory on my system everything went back to normal This however should be done either at the moment of installingupgrading the package or inside the script trying to create files inside this directory Links To pass estar the tlp configuration need to be changed This is that one we are currently passed estar and all Dell Ubuntu edition enabled with Bionic are all included this configuration to pass estar compliance I would like to contribute back that configuration that Dell Ubuntu edition used to pass estar So that likely every laptop use the same configuration can save as much power as what estar required How do you think Accessing via the Tor network fails with error Please provide onion resource andor make the website fully available via the Tor network if you care about user privacy Thank you My understanding is that currently only ThinkPad devices have advanced battery features available due to the existence of tpsmapi For Dell devices there exists the Dell Command Configure which appears to provide similar functionality in regards to battery management for example running off AC power and express charging even though the interface is rather suboptimal Thats all the more reason to build a tool for it but the question is if it should be this one Would it be possible to disable a wireless device if it has seen no connections for more than X minutes Symptom data This may be unique to certain firmware models but Im finding that one of my devices isnt enabling L s for ASPM even though its capable of it and PCIEASPMONBATpowersave and pcieaspmforce is set for cmdline boot Does the problem occur on battery or AC or both Bat Attach the full output of tlpstat via for all cases of Expected behavior All capable devices set to L L s for ASPM Actual behaver One device needs to be forced As you can see from lspci vv grep ASPM LnkCap Port Speed GTs Width x ASPM L s L Exit Latency L s ns L us ClockPM Surprise LLActRep BwNot ASPMOptComp LnkCtl ASPM L s L Enabled RCB bytes Disabled CommClk L SubCap PCIPML PCIPML ASPML ASPML L PMSubstates LnkCap Port Speed GTs Width x ASPM L s L Exit Latency L s ns L us ClockPM Surprise LLActRep BwNot ASPMOptComp LnkCtl ASPM L Enabled RCB bytes Disabled CommClk L SubCap PCIPML PCIPML ASPML ASPML L PMSubstates LnkCap Port Speed GTs Width x ASPM L s L Exit Latency L s unlimited L us ClockPM Surprise LLActRep BwNot ASPMOptComp LnkCtl ASPM L s L Enabled RCB bytes Disabled CommClk L SubCap PCIPML PCIPML ASPML ASPML L PMSubstates LnkCap Port Speed GTs Width x ASPM L s L Exit Latency L s us L us ClockPM Surprise LLActRep BwNot ASPMOptComp LnkCtl ASPM L Enabled RCB bytes Disabled CommClk Steps to reproduce the problem Change fromto acbat I fix it using this script Could this be incorporated into TLP