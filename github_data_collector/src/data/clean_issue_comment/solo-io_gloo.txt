 Create valid vs with existing upstream Create second vs with a nonexistent upstream vs goes to the expected status VIRTUAL SERVICE DISPLAY NAME DOMAINS SSL STATUS LISTENERPLUGINS ROUTES default none v Proxygloosystemgatewayproxy api Warning warning Route Warning gloosystemstaticpet InvalidDestinationWarning Reason upstream v Upstream missing gloosystem not found However also goes to Warning state for missing upstream status reason warning n Route Warning InvalidDestinationWarning Reason v Upstream missing gloosystem not found reportedby gateway state subresourcestatuses v Proxygloosystemgatewayproxy To recreate Deploy petstore Deploy a vs pointing to petstore upstream Edit the petstore upstream and add upstreamtimeout s NOTE this is invalid glooctl get upstream will return Error converting output crd reading crd spec on resource defaultpetstore in namespace apicoristio into v Upstream unknown field timeout in v Upstream And the console will show empty upstreams The problem with the previous version of this check was that in CI we check out a commit by its SHA not by branch name which puts the repo in a detached HEAD state which in turn causes make CURRENTBRANCH shell git revparse abbrevref HEAD to evaluate to HEAD instead of the branch name This caused ASSETSONLY to always be true make ASSETSONLY true This would be if master HEAD ifeq DEFAULTBRANCH CURRENTBRANCH ASSETSONLY false endif BOT NOTES resolves This change reordered some of our cloud build steps As a result the uploadgithubreleaseassets make target which uploads github release assets and updates our glooctl formulas is now executed before the regression tests which is wrong These actions should be performed after the regressions tests and only if the tests completed successfully If this line returns false due to an error OTHER than a doesnotexist error it will cause this line to evaluate to false which means that we hit this line that will attempt to CREATE a Gateway object causing this error seen by a customer levelwarnts T Zloggergatewayv eventloopgatewayv eventlooptranslatorSyncerreportercallerreporterreportergo msgfailed to write status Accepted gateway map v ProxygloosystemgatewayproxystateAccepted reportedby gloo nil for resource REDACTED creating kube resource REDACTED resourceVersion should not be set on objects to be createdversion The release of Gloo was assetsonly ie no PR for homebrew formulas or fish food were created by our build bot From the release build logs GO MODULEon go run ciuploadgithubreleaseassetsgo true This means that the ASSETSONLY variable here evaluates to true meaning that this does not work as intended make ASSETSONLY true ifeq DEFAULTBRANCH CURRENTBRANCH ASSETSONLY false endif Weve discussed this before and agreed that glooctl uninstall all would remove everything It currently does NOT remove CRDs Ive seen both in the docs and in my scripts using a shortcut of proxy urlfoo as a quick way to access the Gloo Gateway endpoint When you have a version mismatch it spits out the version information too This blows up the scripts I like that it warns about version mismatches but it should do them once or at least with an option to hide that warning with ignoreversionmismatch or something We need a regression test that ensures that the helm upgrade command works even if we just change helm values eg upgrade from Currently this doesnt work in the case and we get helm install gloogloo n gloo namespace gloosystem version set crdscreatetrue set globalglooRbaccreatetrue helm upgrade gloo gloogloo force namespace gloosystem version set crdscreatefalse set globalglooRbaccreatefalse set settingswatchNamespaces foobar set settingswatchNamespaces gloosystem UPGRADE FAILED ROLLING BACK Error validatingwebhookconfigurationsadmissionregistrationk sio gloogatewayvalidationwebhookgloosystem already exists Error UPGRADE FAILED validatingwebhookconfigurationsadmissionregistrationk sio gloogatewayvalidationwebhookgloosystem already exists 