Ive got some tests using Insta to test the output of templating for my webapp On macOS these work just great with filenames that are relevant to the test in question eg testsnotemplatessnap testssimpletemplatesnap etc When Im running the exact same build on my CI setup which runs on Linux instead this fails And it fails because the filenames it is looking for are testsmainsnap testsmain snap etc In both cases Im using the latest nightly Cargo cargo nightly f f e and Rust rustc nightly de d f and Im using Insta with a Cargolock file so CI should be using the identical version Im also doing all of the assertions with the assertdebugsnapshot macro from the crate Cheers This adds the correct syntax highlighting to the markdown snippets in the readme Recently the ty module in rustanalyzer was extracted to a separate crate afterwards I couldnt use cargo insta review in the workspace root anymore it always just quit with error No such file or directory os error I now finally got annoyed enough with that that I ran it with strace and it turns out the problem was a pending snapshot file that had no corresponding source file anymore It would be nice if such a file just got ignored This is easy to reproduce Eg in rustanalyzer just do touch cratesrahirsrctytestsrspendingsnap and try to run cargo insta review I can see that snapshot names include module name typically just test I think there might be conflicts when a couple of modules at the same level have a test submodule with identical test functions For example mod rs has a submodule test with a test testfoo and mod rs has a submodule test with a test testfoo There are few ways to avoid this situation put modules into subdirectories rename test submodules or test functions But I think it could be the most convenient to have snapshot names include super modules too mod testfoosnap mod testfoosnap etc Im trying to port a project from using a custom redaction implementation mentioned in to the new dynamic redaction system in The struct Im trying to redact is recursive rust deriveSerialize Deserialize pub struct ViewedInstance id Uuid children VecViewedInstance I tried to use id as my selector but it only targets the toplevel id field I dont see any way to select any key named id regardless of depth in the documented selector syntax Since Im using a dynamic redaction I can match on Content fairly precisely to make sure Im only impacting the correct content My redaction function would be okay to run on all content values The new dynamic redactions feature in is cool However it depends on the user interacting with types from the internals module notably Redaction and Content Additionally Content has some variants that are explicitly hidden from documentation that are necessary to do some dynamic redactions like ContentNewtypeStruct Are these types stable Should I depend on them in my crate using Insta or was depending on them an unintended artifact Ive run forceupdatesnapshots today It worked flawlessly for most of the cases expect this single problem Here insta adds leading indentation to the otherwise blank line which doesnt work great with editors which strip trailing ws on save Closes Is this the right design A good case is the instatestembeddedsnap change below I suspect those cases are rare though its a breaking change where they do exist I need to adds a whatsnew Im trying to update a snapshot with the cargo insta review but get the error message Incorrect function os error It only happens when I use Git Bash on Windows Using cmdexe works fine Steps to reproduce Open Git Bash on Windows Change the directory to a project that has a snapshot test Modify a test so the snapshot doesnt match Run cargo insta review Notice the normal message that the snapshot has changed and that you get options to accept reject or skip Notice that you cannot enter your choice because of the error message error Incorrect function os error Again using cmdexe works fine If I define a test in a file like srcfoors but my tests are in a mod test block as is convention for Rust tests the resulting snapshots are named with test as the prefix not foo For example rust srcfoors pub fn addonevalue u u value cfgtest mod test use instaassertyamlsnapshot test fn itaddsone let one addone assertyamlsnapshotone The snapshot this test produces will be srcsnapshotstestitaddsonesnap It should be and would be without the mod test wrapper srcsnapshotsfooitaddsonesnap This naming is problematic when there are multiple modules in the same folder that each have snapshot tests