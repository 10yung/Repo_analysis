 Solutions for adding general DB support CLI flag In order to support general database on both keystore accounts and vault data kps ruleset two flags needs to be changed keystoreFlag it now supports two types of input file path to keystore URI to database where accounts is stored vault this is a new flag which will be used to configure where data would be stored for vault data DB schema For keystore DB we only need one table accounts SQL pesudo code to represent SQL schema Table accounts id int pk increment autoincrement address char secretkey varchar Indexes address unique For vault DB tables are listed below System information Geth version stable OS Version Windows x Expected behaviour No crash Actual behaviour Crash followed by the following after restarting the node WARN Synchronisation failed dropping peer peer b a errretrieved hash chain is invalid WARN Synchronisation failed dropping peer peer e c edda ea b errretrieved hash chain is invalid WARN Synchronisation failed dropping peer peerb e d cf errretrieved hash chain is invalid WARN Synchronisation failed dropping peer peerb e d cf errretrieved hash chain is invalid WARN Synchronisation failed dropping peer peer b c d e e errretrieved hash chain is invalid WARN Synchronisation failed dropping peer peerb e d cf errretrieved hash chain is invalid WARN Synchronisation failed dropping peer peerfdd bfbd c fe errretrieved hash chain is invalid WARN Synchronisation failed dropping peer peerb e d cf errretrieved hash chain is invalid I think my sync is hosed Also this is actually the nd time this has happened to me I just didnt open an issue the st time Steps to reproduce the behaviour I run geth via a scheduled task via a bat file This is a syncmode full run ECHO OFF FOR F tokens g IN curl s ipinfoioip do SET extipg C Geth gethexe datadir C Geth Data datadirancient D Geth Data identity MysticRyuujinGeth ethstatsMysticRyuujinGeth redactedethstatsnet maxpeers lightserve nat extipextip rpc rpcapi dbethnetweb admin rpcaddr rpccorsdomain rpcvhosts rpcport syncmode full cache c geth logtxt Backtrace This is the full and complete log crashlogzip Crash happens line starting with fatal error unexpected signal during runtime execution fatal error unexpected signal during runtime execution fatal error unexpected signal during runtime execution signal xc code x addr xffffffffffffffff pc x c Retesteth was kind of illogical when blocks were imported a b it thought that b was the canon head since Importblocks does not return an error if a sideblock is imported This PR removes the separate blockNumber counter from the API and uses the actual current head from blockchain when needed Requested by winsvega PTAL if this fixes your issues This is not to be merged just a PR which attempt to provide better diagnostics for System information Geth version Gethv unstable bb f darwinamd go OS Version OSX Branch Commit Hash or Release e e d e Expected behaviour stateNew should return a new state from a given block hash when full database directory provided Actual behaviour Getting panic missing trie node block hash Steps to reproduce the behaviour I completely synced a tesnet chain with following command geth datadir Userskirillgethdata syncmode full goerli Then started this util The code contains latest know at that moment hash but I also tried with genesis Backtrace backtrace If you truncate an open file in Windows access is denied how about close the file before truncation In PR we attempted to fix an issue where geth crashes if it is stopped before being fully started The issue is that Subscribe methods can fail if they use eventSubscriptionScope and the scope is closed before all subscriptions are created There are two ways to fix this issue Remove uses of SubscriptionScope for internal event providers such as coreBlockChain Ensure internal subscriptions are created in constructor functions before start