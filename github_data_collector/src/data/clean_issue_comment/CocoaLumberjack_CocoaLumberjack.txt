Dear Creator Would it be okay to use your work CocoaLumberjack zip under Creative Commons CC v Universal License CC v The Swiss law do not recognize a permanent relinquishment of Copyrights as the Public Domain provides for Thank you very much and kind regards Philipp New Issue Checklist x I have read and understood the CONTRIBUTING guide x I have read the Documentation or CocoaDocs cocoadocsorgdocsetsCocoaLumberjack x I have searched for a similar issue in the project and found none Issue Info Info Value Platform Name ios Platform Version CocoaLumberjack Version Integration Method carthage Xcode Version Xcode Repro rate all the time Demo project link na Issue Description and Steps After upgrade my code to new xcode version and recompiled all used carthage frameworks i dont see any logs in the cosole When i comment the filelogger part then it works Someone has an idea swift File logger if AppConstantsUSEFEATURESENDLOGS let logManager CustomDDFileManager fileLogger CustomDDFileLoggerlogFileManager logManager if let fileLogger fileLogger fileLoggerrollingFrequency fileLoggerlogFileManagermaximumNumberOfLogFiles DDLogaddfileLogger DDLogaddDDTTYLoggersharedInstance DDLogaddXCDLumberjackNSLogger New Pull Request Checklist x I have read and understood the CONTRIBUTING guide x I have read the Documentation x I have searched for a similar pull request in the project and found none x I have updated this branch with the latest master to avoid conflicts via merge from master or rebase I have added the required tests to prove the fixfeature I am adding x I have updated the documentation if necessary I have run the tests and they pass I have run the lint and it passes pod lib lint This merge request fixes refers to the following issues Pull Request Description As outlined in we might return nil from DDLogFileManagerDefault createNewLogFile if critical errors occurred a few times in a row Ive changed the API now to allow propagating the errors since DDLogFileManager is a protocol and deal with them in DDFileLogger Still the nullability annotation of currentLogFileInfo had to change to nullable since we have to return null there if the creation of a log file fails New Pull Request Checklist X I have read and understood the CONTRIBUTING guide X I have read the Documentation X I have searched for a similar pull request in the project and found none X I have updated this branch with the latest master to avoid conflicts via merge from master or rebase I have added the required tests to prove the fixfeature I am adding I have updated the documentation if necessary X I have run the tests and they pass X I have run the lint and it passes pod lib lint Pull Request Description Hello there The problem Right now if you will try to reuse CocoaLumberjack built with Swift Toolchain with Xcode GM you get an error BadooPlatformFoundationsourceloggingBPFLogswift Module compiled with Swift cannot be imported by the Swift compiler BadooThirdPartyCarthageBuildiOSCocoaLumberjackSwiftframeworkModulesCocoaLumberjackSwiftswiftmodulex appleiossimulatorswiftmodule Solution Swift is here with Module Stability support and to be able to reuse CocoaLumberjack binaries between Swift Toolchains we have to build it with BUILDLIBRARYFORDISTRIBUTION YES option In this pull request the BUILDLIBRARYFORDISTRIBUTION option is enabled for the Release configuration This is the year when we blame Apple for missing documentation and this is the case In general this option does the following Ensures that your libraries are built for distribution For Swift this enables support for library evolution and generation of a module interface file If you want to know more check Binary Frameworks in Swift session from WWDC We tested the solution and it works just fine You can build CocoaLumberjack with Swift Toolchain and it will worklink for both Xcode aka Swift and Swift Cheers Artem Badoo New Issue Checklist x I have read and understood the CONTRIBUTING guide x I have read the Documentation or CocoaDocs cocoadocsorgdocsetsCocoaLumberjack x I have searched for a similar issue in the project and found none Issue Info Info Value CocoaLumberjack Version Integration Method cocoapods Xcode Version Xcode Issue Description and Steps When integrating CocoaLumberjack with the following experimental CocoaPods options the CLIColorh file is not found in the generated umbrella header Specifically this affects other Pods that depend on CocoaLumberjack ruby Podfile install cocoapods generatemultiplepodprojects true If generatemultiplepodprojects is set to false it compiles as expected createNewLogFile can return nil as its signature seems to confirm but due to the NSASSUMENONNULLBEGIN wrapping the whole file it bridges to Swift as String instead of its true behaviour of String which can cause a crash when the function returns nil The didArchiveLogFile returns the filePath instead of the fileName The commit e ef introduced this mistake New Pull Request Checklist x I have read and understood the CONTRIBUTING guide x I have read the Documentation x I have searched for a similar pull request in the project and found none x I have updated this branch with the latest master to avoid conflicts via merge from master or rebase I have added the required tests to prove the fixfeature I am adding I have updated the documentation if necessary I have run the tests and they pass I have run the lint and it passes pod lib lint This merge request fixes refers to the following issues Pull Request Description I add a property useStandardStyleForCustomFormatters in DDTTYLogger It will allow user apply the NSLogger Style to the custom logger formatter And it will fix the too I use the DDTTYLogger class MyFormatter DDLogFormatter func formatmessage logMessage DDLogMessage String if logMessagemessage n return logMessagemessage return logMessagemessagesplitseparator nmap joinedseparetor n let console DDTTYLoggersharedInstance consolelogFormatter MyFormatter loggeraddconsole with info loggerlogA loggerlog n loggerlogB I get the output A XX B The timestamp could not be disable the DDTTYLoggerm said voidlogMessageDDLogMessage logMessage NSString logMsg logMessagemessage BOOL isFormatted NO if logFormatter logMsg logFormatter formatLogMessagelogMessage isFormatted logMsg logMessagemessage if isFormatted Will not add the timestamp else Will add the timestamp My formatter will return origin string when the message is n it is very bad I think we could have a variable to disable the timestamp instead of check the isFormatted New Issue Checklist X I have read and understood the CONTRIBUTING guide X I have read the Documentation or CocoaDocs cocoadocsorgdocsetsCocoaLumberjack X I have searched for a similar issue in the project and found none Issue Info Info Value Platform Name ios Platform Version CocoaLumberjack Version Integration Method cocoapods Xcode Version Repro rate all the time Demo project link none Issue Description and Steps The didArchiveLogFile specifies that it returns the file path logFilePath but it seems to return the file name instead See NSString archivedLogFilePath logFileInfofileName copy BOOLltshouldUseLogFilenonnull DDLogFileInfo logFileInfo isResumingBOOLisResuming if isResuming doNotReuseLogFiles self ltshouldLogFileBeArchivedlogFileInfo logFileInfoisArchived YES NSString archivedLogFilePath logFileInfofileName copy if logFileManager respondsToSelectorselectordidArchiveLogFile dispatchasynccompletionQueue selflogFileManager didArchiveLogFilearchivedLogFilePath return NO Is this the intended behavior This seems to be a change introduced in version Version had the correct file path as expected If this needs correction I am willing to create a pull request of course Thanks