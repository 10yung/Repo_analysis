I am bit puzzled about the way here breaks the workflow When I use several R scripts from different projects in one Session eg RStudio and I switch between them it seems not to be possible to reset the location of here I would have to close the session and start a new one This is obviously corrupting the workflow since in eg RStudio you might have objects in the environment that you have calculated for a long time saving takes time and additional effort etc If there is no way to do switch the location of here in one session I would like to request this feature Otherwise the here package is completely useless for my purposes This should allow the user to interactively switch a session between projects without having to setwd and restarting All it does Checks the path is legitimate Moves to directory if path is a file Changes the work directory Uses the same code from onLoad to set here here keeps consecutive separators and it allows mixing slashes and backslashes It would be nice to be able to specify an option standardize or likewise to get a clean path with no duplicate separators and only forward slashes or only the operator systems prefered separator I would expect the output of herehereNA to be NA or maybe the same as herehere but not a path ending with the characters NA I have been trying to use here within a project where I am importing data from an online Research database I have then attempt to use here within the saveRDS function eg saveRDSmydfname file here data mydfnamerda This would ensure I have a local copy of the data for if I need to work on the project but I am offline When I execute the code my data import runs as expected but the saveRDS function returns the following error Error in here data mydfnamerda unused arguments data mydfnamerda I have searched the issues listed here and online but have not found any other reports of this issue My work around is that I am having to input the file directory in full for saveRDS but here is working for file calls using readRDS and source I may be missing something simple so excuse my ignorance if that is the case Currently if you create a file path to a directory using here then it will be expanded to an absolute path If you try to use here again with that directory and a file name then the absolute reference gets repeated define a directory using here and a file within that directory mydir hereheredata iris myfile iriscsv doesnt work readcsvhereheremydir myfile Error UsersnameUsersnamedatairisiriscsv does not exist works readcsvfilepathmydir myfile I am requesting a feature or better documentation if this feature already exists to be able to append to an absolute path created by here I understand if this is out of scope because filepath can already do this functionality but it seems reasonable that the here package could have something like append to path functionality like this mydir hereheredata iris myfile iriscsv readcsvhereheremydir myfile append TRUE I started using herehere to make files more robust If there are multiple nested functions using herehere I have to know whether my path is already an absolute path moreover if I use herehere inside a function the user must not supply absolute paths My workaround is having r if startsWithpath path else hereherepath but I wonder if this could be part of the here package itself here is hard to reprex but this issue is not related to that if you apply here to a valid absolute path you will end up with a non existent path r herehereUsers privatevarfoldersrwky hq q kd vw mpbsnx w gpTRtmpfIF tOUsers Created on by the reprex package v detailssummarySession infosummary r devtoolssessioninfo Session info setting value version R version os macOS Sierra system x darwin ui X language EN collate enUSUTF ctype enUSUTF tz EuropeBudapest date Packages package version date lib source assertthat CRAN R backports CRAN R callr CRAN R cli CRAN R crayon CRAN R desc CRAN R devtools CRAN R digest CRAN R evaluate CRAN R fs CRAN R glue CRAN R here Github rlibhered ff highr CRAN R htmltools CRAN R knitr CRAN R magrittr CRAN R memoise CRAN R pkgbuild CRAN R pkgload CRAN R prettyunits CRAN R processx CRAN R ps CRAN R R CRAN R Rcpp CRAN R remotes CRAN R rlang CRAN R rmarkdown CRAN R rprojroot CRAN R sessioninfo CRAN R stringi CRAN R stringr CRAN R testthat CRAN R usethis CRAN R withr CRAN R xfun CRAN R yaml CRAN R LibraryFrameworksRframeworkVersions Resourceslibrary details Thanks a ton for the package I love it and am following in Jennys path in advocating its use instead of setwd My issue is closely related to jennybcherehere and Problem You need to create a here file in a directory because it isnt big nor important enough to justify doing version control on it But that directory is nested in another one which has a something file that here will use to set the project root Now using sethere will create the here file just fine but here has already been set and there is no way to update it unless restarting the R process which creates a very awkward workflow and impairs automation As mentioned in other issues rerunning libraryhere which wouldnt be a great solution anyway has no effect And I even tried running heresethere before running libraryhere but that does not work either Reloading R is the only solution Suggestion sethere does what it should and work great when here hasnt been set on a wrong target due to something higher in the path than the intended project root but fails when a wrong target was found Having a function that would automatically run while using sethere to reset here to the location of the here file that has just been created would be more robust and cover situations such as the one I am describing It would be interesting to consider an asserthere function Inspired by this Twitter conversation with Emile Latour emilelatour Problem you use Projects and the here package and life is awesome But your collaborator still clicks on an Rmd in the Finder and it just opens in RStudio in whatever Project or nonProject they happen to have open Now all the pathbuilding code doesnt work as planned when they run chunks interactively knitting the whole document still works fine for them If you want to make a R or Rmd file more resilient to this and you feel like the Projects name is pretty stable you could put hereassertherePROJECTNAME at the top as a way of raising an alarm when the workflow violates expectations asserthere would be something like assertthatassertthatidenticalbasenameherehere PROJECTNAME Just realised we have the tidytemplate applied to rprojroot and here packages which are in fact rlib packages 