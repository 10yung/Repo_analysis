This PR builds on the work in but extends it to update the documentation and actually include usrlocal by default as the extra configuration directory Closes Description What would be the best practice for optional arguments like host USER HOST or raw payloadpacket TODOs Just check off what what we know been done so far We can help you with this stuff Changes to fish usage are reflected in user documentationmanpages Tests have been added for regressions fixed x Uservisible changes noted in CHANGELOGmd As asked for by ridiculousfish in We should have a nicer custom doc theme Lets figure out what the fish history file format should be Theres some discussion in and also here The goal is to settle on a fish history format and then eventually reuse the format to persist configuration data like universal variables and abbreviations The user is never expected to look at or edit these files manually But they may choose to State of the world fish history is currently a broken psuedoYAML Mea culpa I added this about years ago without thinking hard enough It is adhoc underspecified and buggy This complicates adding new fields while maintaining backwards compatibility and it prevents the format from being successfully parsed by any other libraries The goal here is to settle on a widelyrecognized fullyspecified format Desirable Properties for fish These are my opinions only and are totally fair game for discussion Textual Shells are built on text which rules out binary formats like SQLite or protobuf It should be obvious to the user how the history file is stored Self Describing fish history should be a sequence of keyvalue pairs not a positional list so that new fields may be added in the future This rules out formats like CSV or zshs extended history Not AdHoc The new history format should be a real and commonly understood format not something that we just make up Trivial Appending The file must not require closing fishs normal historysaving is O APPEND writes with besteffort file locking This rules out formats like XML xml or JSON that require explicit closing Streamable Searching fish should be able to search the history without decoding the entire history file into memory A SAXstyle parser would satisfy this so also is easilyidentifiable record boundaries Candidates I know of two plausible options JSON Lines and TOML I dont have a strong opinion between them I keep going back and forth and am open to alternatives IMO YAML is out because of the complexity of the spec and to avoid ambiguity with the existing format JSON Lines JSON Lines also known as JSON Object Streams is simply newlinedelimited JSON objects Of course JSON is ubiquitous but newlinedelimited JSON objects is itself a fairly common serialization format it is understood by jq which is the JSON Swiss Army knife jq can slice and dice filter query etc fish history in JSON lines might look like cmdgit branch D tmpfchownwhen cmdgit checkout pr when cmdcat filetxtwhen cmdgit diff srcfallbackhpaths srcfallbackh when Advantages Ubiquitous including support in jq Good library support for both reading and writing This PR uses SimpleJSON Trivial record separators just newlines allows efficient streaming reads Disadvantages Ugly Bad for human editing If we used this to persist configuration data like universal variables and abbreviations they will be harder to edit by hand TOML TOML is a configuration file format aimed at humaneditability It supports appending via the list of tables syntax Here we might use its support for real dates item cmd git branch D tmpfchown when T item cmd git branch D tmpfchown when T item cmd git diff srcfallbackh when T paths srcfallbackh Advantages Visually nice Excellent for configuration due to its human editability support Disadvantages Existing libraries are not ideal for fishs use case Well need some hacks to detect record boundaries Generating TOML is not a priority for most libraries we might have to write our own What Other Shells Do AFAICT fish would be the only shell doing this PowerShell stores commands as naive newlinedelimited with no metadata ksh stores the commands with two nul bytes as delimiters There is no metadata zsh has a fixed list of positional fields elvish uses a binary database called bolt Compatibility The new format will be incompatible with the old format For that reason the filename should be different it will be for example fishhistoryjson instead of merely fishhistory This avoids the problem where you test the new fish then revert back and now your history is mangled Ideally this is the last time we wholesale replace the fish history file format Future changes will be adding new keyvalue pairs which will be ignored by previous fish shells fish fishindent does not support range based format range specified by a start and end line number Some editors auto format plugins eg vimcodefmt would benefit from this feature for range based formatting Please tell us which fish version you are using by executing the following fish version echo version Please tell us which operating system and terminal you are using The output of uname a and echo TERM may be helpful in this regard although other commands might be relevant in your specific situation Please tell us if you tried fish without thirdparty customizations by executing this command and whether it affected the behavior you are reporting sh c env HOMEmktemp d fish Tell us how to reproduce the problem Including an asciinemaorg recording is useful for problems that involve the visual display of fish output such as its prompt fish version Fish version echo TERM Xterm color uname a Linux xxxxxx Microsoft Microsoft Fri Nov PST x x x GNULinux sh c env HOMEmktemp d fish The problem persists Windows version Windows new terminal version fishuserkeybindingsfish javascript function fishuserkeybindings fishvikeybindings fzfkeybindings set g fishcursorinsert line set g fishcursorreplaceone underscore set g fishcursorvisual block bind M insert m default jj backwardchar forcerepaint bind M insert hh forwardword forcerepaint bind M insert r replacethenexecute end configfish javascript set U fishgreeting set themecolorscheme dracula set g FZFCTRLTCOMMAND fd type f hidden follow exclude git Cursor shape solid box is same in all modes Any suggestion Thank you P Again on srht this time with OpenBSD Testing history merge Error Test failed on line historycontainsreader moretexts j Error Test failed on line historycontainsreader moretexts j Error Test failed on line historycontainsreader moretexts j Error Test failed on line historycontainsreader moretexts j Error Test failed on line historycontainsreader moretexts j Error Test failed on line historycontainsreader moretexts j Error Test failed on line historycontainsreader moretexts j Error Test failed on line historycontainsreader moretexts j Error Test failed on line historycontainsreader moretexts j Error Test failed on line historycontainsreader moretexts j Error Test failed on line historycontainsreader moretexts j Error Test failed on line historycontainsreader moretexts j Error Test failed on line historycontainsreader moretexts j Error Test failed on line historycontainsreader moretexts j Error Test failed on line historycontainsreader moretexts j Testing history race conditions Error Item dropped from history Error Item dropped from history Error Item dropped from history Error Item dropped from history Error Item dropped from history Error Item dropped from history Error Item dropped from history Error Item dropped from history Error Item dropped from history Error Item dropped from history Error Item dropped from history Error Item dropped from history and so on again with a e which is e b without a rebase It would be convenient if Fish published an AppImage along with its other release artifacts My usecase for such a thing It would be very useful to be able to curl an AppImage on a system that I do not have administrative access over and start using fishshell even there The workflow looks like curl LO fishAppImage chmod x fishAppImage fishAppImage fish starts If there is any interest in this I can investigate putting together a PR that would build an AppImage Please tell us which fish version you are using by executing the following fish version echo version Please tell us which operating system and terminal you are using The output of uname a and echo TERM may be helpful in this regard although other commands might be relevant in your specific situation Please tell us if you tried fish without thirdparty customizations by executing this command and whether it affected the behavior you are reporting sh c env HOMEmktemp d fish Tell us how to reproduce the problem Including an asciinemaorg recording is useful for problems that involve the visual display of fish output such as its prompt I have installed Cygwin on windows and set fish as default shell I did this by right clicking Cygwinbatinside the location C cygwin file and changing the last line to note fish there cd d dp bin fish login i Now when I double click Cygwinbat I get a nice prompt from fish as shown Now when I type kill however this is what I get The thing is it straight away prints not enough arguments even though I have not yet pressed the return key Even before I type the pid it throws this error Initially I thought this was Cygwins problem so I changed the shell to bash and tried to do the same I have no problems with kill command if I used bash as my default shell in Cygwin So I am assuming this has to with fish shell Fish Version Operating System Windows Terminal Cygwin echo TERM shows xterm color What do you all think about supporting hyphenunderscore insensitivity So that mkdir test cd test touch ab touch ab aTABTAB would open a completion menu with ab and ab Zsh for example can be configured to do this Emulating Zsh is of course not the goal but for the record one way to do that is shell zshrc zstyle completion matcherlist mazAZAZaz r l r in case you want to try it out I personally find this useful Dont know if itd be bad news on certain systems Im on fish version macOs G 