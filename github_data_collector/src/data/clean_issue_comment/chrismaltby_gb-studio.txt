Is your feature request related to a problem Please describe The variable dropdown is too barebones It loads lazily I understand the performance concerns but this is egregious when trying to reach the end Just look at how long it takes with the END key held pressed Peek As a suggestion I think two things would solve this Keep it loaded in memory Its a fairly small array by even standards cmon andor make it so pressing up on the beginning automatically jumps to the very last variable not the last variable thats loaded This could be used as a shortcut and keep lazy loading maybe Variables cant be searched or typed directly and can be difficult to find as a result A Keep named variables on top in a slot between normal and local variables as well as in the regular list This would only be necessary for globals B Allow us to type variable numbers directly either by their name or number C When typing said variables use that to search in the existing ones Again name or number should be valid factors Is your feature request related to a problem Please describe Events are generally well named but not always easily searchable The Switch event lacking a prefix like Actor and having a hard to succinctly describe function is one such event Describe the solution youd like Add tags to events to improve searchability These could be visible The way githhub displays issue tags is a good one or not but either way it should make events with related tags appear when searching IE Switch receives the Variable and WhenElse tags and the search brings those up I realize this is somewhat redundant as most events already include words related to their function in a sufficiently searchable way but this would reduce hassle when adding future events that are difficult to name descriptively enough like Switch is Another way would be attaching proper descriptions to each event which would add some documentation less experienced users could absorb passively and make to keywords in those searchable IE Set Actor Frame To Variable It sets the actor to a frame dependant on a variable Values higher than the total frames of the sprite will wrap around With all the words encased in brackets acting as tags This description could appear in a hovering window window near the event search one when events are highlighted When transitioning to a new scene its possible to set a scene up so that it initializes with a Camera Move event This event will be active while the scene transition is still playing out so if youve selected a slow transition speed you get something like this Currently a fade is the only kind of event that can play while a Camera Move event is active Every other event must wait for the camera to stop Wait timers emote bubbles actor move commands This limits how the camera and actors can interact with each other If actor and camera events had an Async toggle this could enable some more elaborate setups for example multiple actors moving and emoting during a cutscene or sequences where the player is expected to keep up with a moving camera Autoscroller in a Platformer I believe this would also help address cases like and Is your feature request related to a problem Please describe Currently scrolling in the editor can only be done up to what I assume are the zero coordinates Nothing can be further up or to the left than the Game World tab begins at This is unintuitive and frustrating as in a blank space without any marked edges its expected to have free range of movement and users are likely to just lump scenes on that upper left corner Describe the solution youd like To have free scrolling in all directions Maybe store things beyond that point as negative XY coords Describe alternatives youve considered It would also be reasonable for the editor to begin at an arbitrary higher coordinate This doesnt help preexisting projects though I want to do some classic Zeldalike puzzles in my dungeons like block pushing but as actors always only occupy two tiles doing boulders that block the path is very limited In addition to that if you want to push those blocks from above the player slides under the boulder Therefore it would be great to have the option to have actors block the tiles beneath them This could be achieved by adding a check box for every actor that toggles this behavior Heres a scientific illustration of what I mean GBStudioActor Thanks for reading WARNING Big patch Opening a realtively early pull request to start discussing the implementation of full color support chrismaltby I think you already started on supporting pngs with more than colors My approach is different as the palettes are defined in the app with a palette editor and can be assigned individually to each Scene background and sprite I think the colored pngs is more straightforward although it might be hard for users to enforce the palette limits in the background png each tile can use palette from up to On the other hand the palette editor approach doesnt allow to have different palettes per tile but allows to introduce Events to programatically change the palette of sprites and backgrounds I wonder if theres a combination of both that might work What kind of change does this PR introduce Bug fix feature docs update Separate setting for Background and Sprites default palette Palette editor Allows to create new custom palettes to be used in sprites and backgrounds Palette selector in Scene Editor for scene background palette Palette selector in Actor Editor for sprite palette Known issues Sprite palettes have colors and use the third one for transparency It needs a way to make this clear to the user in the editor as it might be confusing Sprites fade transition isnt implemented yet What is the current behavior You can also link to an open issue here Settings allows to select one custom palette for both backgrounds and sprites What is the new behavior if this is a feature change Multiple palettes can be used for sprite and backgrounds Does this PR introduce a breaking change What changes might users need to make in their application due to this PR Currently it probably breaks games using custom palette A migration script will be needed When i use the Multiple Choice event or the Display Menu event the speed of the text increases drasticaly Describe the bug Ive noticed that when assigning random values within a range the first execution tends to lean towards the bounds of the random settings eg If I set a random value between and the first execution will generally consistently hover around the zone on the top end and the zone on the bottom end see gif below This is separate variable math events with a random value between being assigned to local variable within a scene L L in order Then creating a message with the Local variables in it same order scriptingtestgbsprojzip To Reproduce Steps to reproduce the behavior Create a new scene Add a Joypad input Attach scrip to button press event so you can reroll without rebooting A will work best here For each local variable Add Math event with the following settings Set to Random Min value Max value Now add another Text Display dialogue event afterwards L L L L Execute Note that the first entry L behaves oddly Expected behavior Random should randomise spread across range for all executions Screenshots gbstudiorandombias Platform please complete the following information OS X Mojave App version Additional context json attached blank project template Is your feature request related to a problem Please describe It is more of a quality of life improvement one that would make larger scale projects more manageable Describe the solution youd like An ability to collapse scenes likely from clicking either the title of a scene or an icon such as a horizontal bar the normal icon for this behavior right aligned in the title Perhaps a expand all scenes button would subsequently be useful Describe alternatives youve considered Someone else has mentioned a possibility of grouping scenes for clarity and to share content though it does not fully address what this feature would address Additional context The primary motivation behind this proposal is to make the workspace more manageable if a scene has multiple potential outcomes and all of them are similar in nature A single node with multiple connected nodes becomes a sort of spider web and can appear very complicated The need to see all the possibilities is low so being able to collapse them would clean up the workspace Reported by kr mel crumb and testedreproduced by Polyducks Describe the bug Overlay events pause all timer events If you have set a timer event and an overlay appears it stops all timer events until the overlay is hidden To Reproduce Create new file Create new scene Create new actor Reproduce code below timer set timer script countdown time in seconds if true false actor x y else true actor x y Overlay show black x y To see how the timer resumes when the overlay is hidden again use Overlayhide at the end of the above script Expected behavior Unsure Perhaps the overlay does not need to interrupt timer events but if the overlay is computationally expensive it might make sense to pause all timer events If so this should be included in the documentation for events which interupt timer events such as loop forever multiple choice menus and overlay events Platform please complete the following information OS Windows App version Additional context The same is true of multiple choice options and loop forever events I expect this is by design to free up processing time When the multiple choice menu is exited or the loop is ended with stop script the timer resumes