Hi all I can get the RSSI values from BLE devices which are not connected However after I connect a device using Peripheralconnectdev the Scanner keeps returning the same RSSI value it had for dev before the connection basically the RSSI is not being updated for connected device dev Has anyone come across this before Thanks If I try to pair with a device I have already previously paired with the pair method fails as expected but halts the bluetooth helper unexpected Any subsequent method which requires the helper then fails with an internal error I can work round this in my code by checking for a BTLEManagementError exception with estat to trigger a re connect However for me the halting of the helper was unexpected and so should either be documented or the pair method itself should handle the reconnect or not cause a problem in the first place One could argue that a failed pair because already paired should be a nop Thoughts Hi Sorry for bothering you Is there any way to include carriage return r and line feed n at the end of the packet we are sending something like the IMG Bluefruit app If the connection is lost during or just before a call to setSecurityLevel or setMTU getRespstat therein consumes the stat reply without noticing the disconnected state A subsequent call to disconnect then sends disc to the Helper which is ignored because its already disconnected and then disconnect blocks forever waiting for a reply it will never get and just one step shy of calling stopHelper This is causing my app to hang when a device with a weak connection drops undetected early on leading to a badstate exception on subsequent calls and finally to a hang when my tryfinally calls disconnect attempting to clean things up Note if I didnt call disconnect it could get called by del during GC which would be an even worse place to hang I can see a few easy ways to fix it but all have possible side effects and Im not familiar enough with the whole flow to know whats the best approach Suggestions Hi I am using bluepy with bluez on an arm board I use two nordic dev kits with the zephyr HCIUART sample code running connected via USBThe board has no native bt device I use btattach to bring up these two boards and get access to devices HCI and HCI So far so good When I scan I can use the iface param to set which board I want to use Using btmon I can verify that this is working as I expect However when I try to create the Peripheral object setting the iface param fails btmon tells me that the device I attached last is the one being used Ie if I execute btattach B devttyACM and then the same with ttyACM hci will be used If I kill the first instance of btattach and the restart btattach B devttyACM hci will be the prefered In my python script I print the ifaceproperty available in the Peripheral object It is consistent with what I request and not with what btmon tells me Ive also verified that this happens with bluepyhelper and btmon Ive attached three screenshots of bluepyhelper showing that hci is always used When testing on my PC native bt nordic kit this was not an issue Then I was able to create two Peripheral connections on two separate interfaces just as I expected I have had no issues with bluepybluez on the arm board when using one interface Any help followup question stuff to investigate will be appreciated Versions on arm Bluepy Bluez Kernel compiled by me Python My PC runs bluez ubuntu and kernel stock ubuntu Bluepy Python bluepyhelper bluepyhelper bluepyhelper Im attempting to turn on and off an LED by using the writeCharacteristic command My arduino BLE code takes in any number other than zero to turn the led on and zero to turn the LED off This is the python script used for the central device from bluepy import btle import time import binascii print Connecting dev btlePeripheral c bfcc c a print Services for svc in devservices print strsvc char devgetCharacteristics for c in char print c ser devgetServiceByUUID b e f e f cd a c sergetCharacteristics printcvalHandle devwriteCharacteristiccvalHandle bytes x I dont run into any run time error but the nano doesnt seem to respond to any of the writeCharacteristic commands I can connect to the nano using my android phone through nrfConnect App and it works like magic Is there something that I am missing out on Thank you Hi there Lately this error appears more and more often in my logs python File usrlocallibpython sitepackagesaveaaveapy line in discoveraveabulbs devices scannerscan File usrlocallibpython sitepackagesbluepybtlepy line in scan File usrlocallibpython sitepackagesbluepybtlepy line in start File usrlocallibpython sitepackagesbluepybtlepy line in mgmtCmd DBGSelect timeout File usrlocallibpython sitepackagesbluepybtlepy line in waitResp elif deviceAddr is not None File usrlocallibpython sitepackagesbluepybtlepy line in parseResp if rsp not in resp ValueError too many values to unpack expected After that communication with the device is no longer possible Best regards pattyland I have tried sudo cd usrlocallibpython distpackagesbluepy sudo bluepyhelper then I typed le on or scan but I got this rspmgmt codemgmterr estathC emsgNot Supported What means Not Supported And how can I fix it I have a thread which continuously tries to connect to a peripheral When the peripheral is out of range the connect just sits and waits until it times out When I want to cleanly shutdown my application Id like to interrupt the connect call thats waiting from another thread Is there a nice way to do that If not is just exiting the app with the connect call hanging around in a daemon thread OK Might anything bad happen with that I am trying to use bluepy for Parrot drones and found this issue with bluepy It seems there are some permission issues File usrlocallibpython distpackagesbluepybtlepy line in scan selfstartpassivepassive File usrlocallibpython distpackagesbluepybtlepy line in start selfmgmtCmdle on File usrlocallibpython distpackagesbluepybtlepy line in mgmtCmd rsp selfwaitRespmgmt File usrlocallibpython distpackagesbluepybtlepy line in waitResp raise BTLEManagementErrorManagement not available permissions problem resp bluepybtleBTLEManagementError Management not available permissions problem