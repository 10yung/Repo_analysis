Hello I have tried a query to get all data with ALL query on sql but seems like pq doesnt support that query on bind parameter Query LIMIT OFFSET rows err dbQueryContextctx query ALL i got this error pq error in argument for strconvParseInt parsing ALL invalid syntax will pq support feature to bind ALL to parameter Hi Im getting the below error when I run my code in docker image built off golang stretch pq syntax error at or near If I build and run it on my mac it works fine Any help would be appreciated Thanks Monica Hello I have been periodically seeing these errors in my application driver bad connection I investigated today and I found strange behaviour in this situation I am in a transaction I have statementtimeout set to something nonzero The commit or rollback call hits the statementtimeout condition Afterwards pinging or maybe using the connection at all raises a bad connection error Im wondering if this is what should be happening given there is an error message available showing that the transaction failed Here is a program that demonstrates this If you run this for a while eg while true do foo done you will periodically see messages like this error committing pq canceling statement due to statement timeout error pinging after commit failure driver bad connection I am using libpq v Postgres and Go What do you think Thank you The scram implementation has no unittests and ignores parts of the RFC eg the m field is supposed to trigger an authentication failure This should be replaced with a fuller and better tested implementation might be a candidate Whilst developing a go based web app in docker using the Ping function to check the connection works in a majority of cases however When Postgres is provided on a network that does not support ICMP or exposed via a v service in kubernetes ping is not the best test and will fail Some networks may also drop ICMP traffic causing the use of this function to throw errors Is there a better way to perform this thats more friendly to overlay networks or kubernetes services Was running the benchmarks and hit this panic interface conversion pqstmt is not driverStmtQueryContext missing method QueryContext goroutine running githubcomlibpqbenchMockQuery xc f c xc ca xc a e x d homejakezikaerohpqbenchtestgo x githubcomlibpqBenchmarkMockSelectString xc f c homejakezikaerohpqbenchtestgo x f testingBrunN xc f c x usrlibgosrctestingbenchmarkgo xcc testingBrun func xc f c usrlibgosrctestingbenchmarkgo x created by testingBrun usrlibgosrctestingbenchmarkgo x d exit status All other benchmarks run fine What about MySQL Config analog It could be helpful in case you need to build DSN on the fly Here is a small program to reproduce the race go func main databaseURL osGetenvDATABASEURL pqconnector err pqNewConnectordatabaseURL if err nil logFatalerr db sqlOpenDBpqconnector const n var wg syncWaitGroup wgAddn for i i n i go func defer wgDone var now timeTime if err dbQueryRowContextcontextBackground select nowScan now err nil logFatalerr wgWait Run with the following commands bash go build race trimpath DATABASEURLhostpathtopostgresqlunixsocketdirectory pqrace WARNING DATA RACE Write at x c c by goroutine runtimemapassignfaststr runtimemapfaststrgo x githubcomlibpqdial githubcomlibpqv conngo x c githubcomlibpqConnectoropen githubcomlibpqv conngo x githubcomlibpqConnectorConnect githubcomlibpqv connectorgo x databasesqlDBconn databasesqlsqlgo xa databasesqlDBquery databasesqlsqlgo x databasesqlDBQueryContext databasesqlsqlgo xe mainmainfunc databasesqlsqlgo x a Previous read at x c c by goroutine runtimemapaccess faststr runtimemapfaststrgo x githubcomlibpqconnhandlePgpass githubcomlibpqv conngo x c githubcomlibpqConnectoropen githubcomlibpqv conngo x f githubcomlibpqConnectorConnect githubcomlibpqv connectorgo x databasesqlDBconn databasesqlsqlgo xa databasesqlDBquery databasesqlsqlgo x databasesqlDBQueryContext databasesqlsqlgo xe mainmainfunc databasesqlsqlgo x a Goroutine running created at mainmain pqracemaingo x b Goroutine running created at mainmain pqracemaingo x b WARNING DATA RACE Read at x c c by goroutine runtimemapaccess faststr runtimemapfaststrgo x githubcomlibpqnetwork githubcomlibpqv conngo x githubcomlibpqdial githubcomlibpqv conngo x githubcomlibpqConnectoropen githubcomlibpqv conngo x githubcomlibpqConnectorConnect githubcomlibpqv connectorgo x databasesqlDBconn databasesqlsqlgo xa databasesqlDBquery databasesqlsqlgo x databasesqlDBQueryContext databasesqlsqlgo xe mainmainfunc databasesqlsqlgo x a Previous write at x c c by goroutine runtimemapassignfaststr runtimemapfaststrgo x githubcomlibpqdial githubcomlibpqv conngo x c githubcomlibpqConnectoropen githubcomlibpqv conngo x githubcomlibpqConnectorConnect githubcomlibpqv connectorgo x databasesqlDBconn databasesqlsqlgo xa databasesqlDBquery databasesqlsqlgo x databasesqlDBQueryContext databasesqlsqlgo xe mainmainfunc databasesqlsqlgo x a Goroutine running created at mainmain pqracemaingo x b Goroutine running created at mainmain pqracemaingo x b WARNING DATA RACE Write at x c ba by goroutine githubcomlibpqdial githubcomlibpqv conngo x e githubcomlibpqConnectoropen githubcomlibpqv conngo x githubcomlibpqConnectorConnect githubcomlibpqv connectorgo x databasesqlDBconn databasesqlsqlgo xa databasesqlDBquery databasesqlsqlgo x databasesqlDBQueryContext databasesqlsqlgo xe mainmainfunc databasesqlsqlgo x a Previous write at x c ba by goroutine githubcomlibpqdial githubcomlibpqv conngo x e githubcomlibpqConnectoropen githubcomlibpqv conngo x githubcomlibpqConnectorConnect githubcomlibpqv connectorgo x databasesqlDBconn databasesqlsqlgo xa databasesqlDBquery databasesqlsqlgo x databasesqlDBQueryContext databasesqlsqlgo xe mainmainfunc databasesqlsqlgo x a Goroutine running created at mainmain pqracemaingo x b Goroutine running created at mainmain pqracemaingo x b Found data races 