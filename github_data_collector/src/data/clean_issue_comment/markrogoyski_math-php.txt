I found that PHPPCOV runs unit tests much faster than PHPXdebug when all you need is coverage reporting However PCOV will only run on PHPunit I thought Id document some of the future testing possibilities PHP is past end of life PHPunit current tests work adding void to setup causes failure PHP is past end of life PHPunit current tests work adding void to setup works could use Pcov with clobber to backport to phpunit x PHP just started security only PHPunit Current tests fail must add void to setup Exception when string type hint is given an int could use PCOV PHP is active PHPunit same as above PHP is active newly activeshould add to test matrix The Models that are part of the regression namespace are kind of like classed versions of closures We could create a parent object which includes a simple derivative function which could be overridden by a child if the child had a simple derivative This accurate derivative could be used in the rootfinding algorithm instead of the estimate Not an issue just a question is there a function in your library that can simulate the Goal Seek function of Excel if so which one thanks Im having an issue with the IRR function I have a payment stream same payment amount for years and then it stops then I have for years showing and a future value at year this function returns a negative value but in Excel I get a value of It correctly gave me a value at year Is there a max number of values it can do Any polynomial can be converted into a matrix such that the eigenvalues of the matrix are the roots of the polynomial I think I figured out the general technique for simultaneously finding eigenvalues and eigenvectors for any matrixnumerically use power iteration to find largestthis gives both the value and the vector then subtract it from the source matrix and repeat php eigenvalues vectors for i l i AgetM i list eigenvalue eigenvector EigenpowerIterationA eigenvalues eigenvalue vector MatrixFactorycolumnMatrixeigenvector vectors eigenvector Adding as a new row A AsubtractvectormultiplyvectortransposescalarMultiplyvalue eigenvectors MatrixFactorycreatevectorstranspose Created SVD class Added SVD to MatrixCatalog Added SVD to Matrix Functions Added isRectangularDiagonal function to Matrix Class Added Unit Test As this library gets larger the selection of native php functions that are needed as Functions Map Singlefoo will increase What do you think about generating a generic one class Single public static function genericstring function array xs params array return arraymap function x use params return functionx params xs Using QR decompositions eliminates the need for matrix inverse Its much less computationally intensive