I send my mail both via Pony and ActionMailer When i want to test ActionMailer i cant because emailspec defines deliveries method only in Pony way Can you add possibility to choose mail service i work through ruby module Deliveries if definedPony def deliveries Ponydeliveries end include EmailSpecMailerDeliveries elsif ActionMailerBasedeliverymethod activerecord include EmailSpecARMailerDeliveries else def mailer ActionMailerBase end include EmailSpecMailerDeliveries end end This PR added and updated ruby versions on CI This PR supports specified name and address for bccto and ccto matchers Hello I want to check that my email has some link In my spec I want to write the following rspec expectemailto includelink https example com login It would be good to have havelink matcher but Capybara already defines this matcher which matches a link on the page at the moment were using custom code like this rb matches emailsmap do mail mailsubject subject bodymatch mailbody body emailmatch mailtoincludeemail end expectmatchesto include true true true Is there a way to do this more cleanly with emailspec we need to check that at least one email is in the queue that has all the properties Adding emailspec to a Rails project breaks everything with this error FailureError openemailregistereduseremail EmailSpecCouldNotFindEmailError Could not find email in the mailbox for user examplecom Found the following emails RSpec code ruby RSpecdescribe Sign Up type feature do letuserattributes attributesforuserslicefirstname lastname email password passwordconfirmation letregistereduser Userfindbyemail userattributes email it Visitor signs up do visit newuserregistrationpath fillin userfirstname with userattributes firstname fillin userlastname with userattributes lastname fillin useremail with userattributes email fillin userpassword with userattributes password fillin userpasswordconfirmation with userattributes passwordconfirmation clickbutton Create User openemailregistereduseremail expectcurrentemailto havesubjectConfirmation instructions end end System configuration Devise Emailspec Rails Ruby Bundler Weird problem in a Rails app I just added delayedjobactiverecord ran the migration in development but I cant run it in test because I get NameError uninitialized constant DelayedDelayMail The problem goes away if I remove emailspec So something in emailspec is causing DelayedDelayMail module not to be loaded Anyone got any idea what this could be For now Ive removed emailspec from my Gemfile But I will be needing it back soon I would like to specify which part in multipart is checked by havebodytext matcher In this PR I added methods inhtmlpart and intextpart for havebodytext matcher For example ruby mail Mailnew do htmlpart do body This is html end textpart do body This is text end end The current behavior expectmailto havebodytextThis is html expectmailnotto havebodytextThis is text Using new methods created in this PR expectmailto havebodytextThis is htmlinhtmlpart expectmailto havebodytextThis is textintextpart expectmailnotto havebodytextThis is htmlintextpart Only look for text part using Rails with both RSpec and TestUnit bundle exec rspec success bundle exec rake test uninitialized constant RSpecExpectations I installed emailspec per the instructions but when I run rspec it fails with the following message usrlocalbundlegemsactionmailer libactionmailerrescuablerb in moduleRescuable uninitialized constant ActiveSupportRescuable NameError from usrlocalbundlegemsactionmailer libactionmailerrescuablerb in moduleActionMailer from usrlocalbundlegemsactionmailer libactionmailerrescuablerb in top required from usrlocalbundlegemsactionmailer libactionmailerbaserb in require from usrlocalbundlegemsactionmailer libactionmailerbaserb in top required from usrlocalbundlegemsemailspec libemailspecdeliveriesrb in require from usrlocalbundlegemsemailspec libemailspecdeliveriesrb in moduleDeliveries from usrlocalbundlegemsemailspec libemailspecdeliveriesrb in moduleEmailSpec from usrlocalbundlegemsemailspec libemailspecdeliveriesrb in top required from usrlocalbundlegemsemailspec libemailspecrb in require from usrlocalbundlegemsemailspec libemailspecrb in top required from appspecspechelperrb in require from appspecspechelperrb in top required from usrlocalbundlegemsrspeccore librspeccoreconfigurationrb in require from usrlocalbundlegemsrspeccore librspeccoreconfigurationrb in block in requires from usrlocalbundlegemsrspeccore librspeccoreconfigurationrb in each from usrlocalbundlegemsrspeccore librspeccoreconfigurationrb in requires from usrlocalbundlegemsrspeccore librspeccoreconfigurationoptionsrb in block in processoptionsinto from usrlocalbundlegemsrspeccore librspeccoreconfigurationoptionsrb in each from usrlocalbundlegemsrspeccore librspeccoreconfigurationoptionsrb in processoptionsinto from usrlocalbundlegemsrspeccore librspeccoreconfigurationoptionsrb in configure from usrlocalbundlegemsrspeccore librspeccorerunnerrb in setup from usrlocalbundlegemsrspeccore librspeccorerunnerrb in run from usrlocalbundlegemsrspeccore librspeccorerunnerrb in run from usrlocalbundlegemsrspeccore librspeccorerunnerrb in invoke from usrlocalbundlegemsrspeccore exerspec in top required from usrlocalbundlebinrspec in load from usrlocalbundlebinrspec in main This is from my spechelperrb require actionmailer require emailspec require emailspecrspec When I comment out the emailspec lines Rspec runs again Strange thing though when I run Rspec under Spring with binrspec I dont see this issue Any ideas why 