When creating this library I deliberately tried to make the API and behavior as close to SystemEnums as possible in order for it to be a drop in replacement as well as allowing EnumsNET to be the basis for improvements to SystemEnum in corefx as has been proposed with corefx There are however a few behavioral differences that either snuck in or were made deliberately If corefx gets implemented I will like to update EnumsNET to a new major version which fixes most of these behavioral differences API EnumsNET Behavior SystemEnum Behavior Proposed Solution GetNames Names are returned in increasing order by their respective values Names are returned in increasing significance bit order by their respective values Add an EnumMemberSelectionValueOrder flag enum member GetValues Values are returned in increasing value order Values are returned in increasing significance bit order Add an EnumMemberSelectionValueOrder flag enum member GetMembers Members are returned in increasing order by their respective values Members will be returned in increasing significance bit order by their respective values Add an EnumMemberSelectionValueOrder flag enum member ToObject Throws OverflowException when value is outside the underlying types value range Allows overflowing values Rework EnumValidation enum and add an EnumValidationNoOverflow flag enum member EnumValidationNone EnumValidationIsDefined and EnumValidationIsValidFlagCombination will have new meanings such that they no longer validate there were no overflows AsString and Format with flags For flags if the value is not defined then each of its individual flags are output For flags the defined combinations within the value with the largest values are output until their are no more flags left to output Hard break in EnumsNET To get the same behavior as before youll need to replace it with something like this valueIsValidFlagCombination stringJoin valueGetFlagMembersSelectflag flagName valueAsString Additionally more research must be done to determine the behavioral differences for the following methods with their accepted value types and the exceptions they throw FormatType enumType object value string format GetNameType enumType object value IsDefinedType enumType object value Other potential breaking changes if corefx gets implemented Change EnumsNETPrimaryEnumMemberAttribute to SystemComponentModelPrimaryAttribute Switch to using SystemComponentModelAttributeCollection and then add appropriate extension methods to support the existing methods on EnumsNETAttributeCollection in older versions of SystemComponentModelAttributeCollection This will mean in older framework targets the attribute collection will not explicitly implement IListAttribute or IReadOnlyListAttribute as is currently the case but will support being casted to those interfaces as the returned attribute collection will derive from SystemComponentModelAttributeCollection for older framework targets Change GetAllFlags to AllFlags as in the proposal IsValidFlagCombination will be promoted to an extension method in older framework targets The existing extension methods that are covered in the proposal will be demoted in newer framework targets so users will be encouraged to use the new builtin extension methods and not cause any overload resolution conflicts Remove EnumMember in newer framework targets that already contain the builtin EnumMember and use that instead