will follow up with emitting rules application exclusivity logic This is required to create a proto target which needs protofiles information to generate the schema properly The consumed set is wack and weak though PruningRules was also used for emission decision Since no pruning is involved Ive splitten the logic into its own class Moreover members were not supported and its explicit now The logic is taken from PruningRules minus what concerns pruning only From the point of view of the Gradle Plugin its an explicit split between rootprune at the root which is modelled by the pruning rules and includeexclude inside the target modelled by the emitting rules Based on java Java public Builder fooInteger foo thisfoo foo thisbar null thisbaz null return this Passing null as the argument will break the oneof contract marking the parameter with NonNull can at least hint at the potential problem Likely in need for a rebase Based on prep for my KotlinConf talk Closes 