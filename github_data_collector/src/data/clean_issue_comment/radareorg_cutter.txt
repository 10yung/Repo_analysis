Is your feature request related to a problem Please describe Widgets like StringWidget and FlagsWidget currently have poor performance when there are many items TODO prepare a test executable prepare a measuring method Investigate what is causing unnecessary slowdown Some candidates for investigation qhelpersadjustColumns can cause a few second freeze on long lists long lists should use better column width calculation strategy For short lists might be replaced with qt builtin functiuonality Other qt features that cause it to touch all elements in list instead of just currently visible ones slow r operations due to inappropriate datastructures Environment information Operating System Ubuntu GNOME Cutter version c c d Obtained from x Built from source Downloaded from release Distribution repository File format executable Describe the bug When executing buildCutter an error occurs buildCutter error while loading shared libraries librsocketso git cannot open shared object file No such file or directory A clear and concise description of what the bug is To Reproduce Steps to reproduce the behavior Follow all building instructions Expected behavior A clear and concise description of what you expected to happen Successfully open cutter window Screenshots If applicable add screenshots to help explain your problem Additional context Add any other context about the problem here ldd buildCutter linuxvdsoso x ffe b e libQt Svgso usrlibx linuxgnulibQt Svgso x fb afbe libQt Networkso usrlibx linuxgnulibQt Networkso x fb adfd libQt Widgetsso usrlibx linuxgnulibQt Widgetsso x fb a libQt Guiso usrlibx linuxgnulibQt Guiso x fb a e libQt Coreso usrlibx linuxgnulibQt Coreso x fb c librcoreso git mntwdbgithubcuttersrcbuildRadare prefixliblibrcoreso git x fb b librconfigso git mntwdbgithubcuttersrcbuildRadare prefixliblibrconfigso git x fb librconsso git mntwdbgithubcuttersrcbuildRadare prefixliblibrconsso git x fb librioso git mntwdbgithubcuttersrcbuildRadare prefixliblibrioso git x fb b librutilso git mntwdbgithubcuttersrcbuildRadare prefixliblibrutilso git x fb a librflagso git mntwdbgithubcuttersrcbuildRadare prefixliblibrflagso git x fb librasmso git mntwdbgithubcuttersrcbuildRadare prefixliblibrasmso git x fb bc librdebugso git mntwdbgithubcuttersrcbuildRadare prefixliblibrdebugso git x fb b librhashso git mntwdbgithubcuttersrcbuildRadare prefixliblibrhashso git x fb b librbinso git mntwdbgithubcuttersrcbuildRadare prefixliblibrbinso git x fb libranalso git mntwdbgithubcuttersrcbuildRadare prefixliblibranalso git x fb librparseso git mntwdbgithubcuttersrcbuildRadare prefixliblibrparseso git x fb librbpso git mntwdbgithubcuttersrcbuildRadare prefixliblibrbpso git x fb f libreggso git mntwdbgithubcuttersrcbuildRadare prefixliblibreggso git x fb librregso git mntwdbgithubcuttersrcbuildRadare prefixliblibrregso git x fb f librsearchso git mntwdbgithubcuttersrcbuildRadare prefixliblibrsearchso git x fb f librsyscallso git mntwdbgithubcuttersrcbuildRadare prefixliblibrsyscallso git x fb e librfsso git mntwdbgithubcuttersrcbuildRadare prefixliblibrfsso git x fb a librmagicso git mntwdbgithubcuttersrcbuildRadare prefixliblibrmagicso git x fb b librcryptoso git mntwdbgithubcuttersrcbuildRadare prefixliblibrcryptoso git x fb b libstdcso usrlibx linuxgnulibstdcso x fb d libmso libx linuxgnulibmso x fb e libgccsso libx linuxgnulibgccsso x fb libcso libx linuxgnulibcso x fb libzso libx linuxgnulibzso x fb ff libpthreadso libx linuxgnulibpthreadso x fb fd libdlso libx linuxgnulibdlso x fb fcc libGLso usrlibx linuxgnulibGLso x fb f libpng so usrlibx linuxgnulibpng so x fb f libharfbuzzso usrlibx linuxgnulibharfbuzzso x fb e libicui nso usrlibx linuxgnulibicui nso x fb b e libicuucso usrlibx linuxgnulibicuucso x fb c libpcre so usrlibx linuxgnulibpcre so x fb e libdoubleconversionso usrlibx linuxgnulibdoubleconversionso x fb cb libglib so usrlibx linuxgnulibglib so x fb a lib ldlinuxx so x fb b d librsocketso git not found librlangso git not found librsocketso git not found librsocketso git not found libGLXso usrlibx linuxgnulibGLXso x fb d libGLdispatchso usrlibx linuxgnulibGLdispatchso x fb b libfreetypeso usrlibx linuxgnulibfreetypeso x fb f libgraphite so usrlibx linuxgnulibgraphite so x fb c libicudataso usrlibx linuxgnulibicudataso x fb bd libpcreso libx linuxgnulibpcreso x fb b libX so usrlibx linuxgnulibX so x fb a libxcbso usrlibx linuxgnulibxcbso x fb f libXauso usrlibx linuxgnulibXauso x fb f libXdmcpso usrlibx linuxgnulibXdmcpso x fb ea libbsdso usrlibx linuxgnulibbsdso x fb d I see librsocketso git and librlangso git pointing to nothing however there exist those libs in buildRadare prefixlib So I excute radare envsh buildRadare prefix or simply export LDLIBRARYPATHbuildRadare prefixlib then Cutter can be successfully opened Environment information Operating System ubuntu Cutter version File format elf Arch x Type EXEC Executable file Describe the bug when editing several instructions expop using new registers r to r give incorrect bytes To Reproduce open an elf file in write mode go to disassembly tab right click an addressinstruction click edit instruction type pop r window gives f actual instruction is e if ok is pressed the incorrect bytes are persisted on console type rasm a x b pop r for correct bytes Expected behavior bytes on edit window mach bytes given by rasm Screenshots Screenshot from Screenshot from Additional context perhaps interpretation is taking precedence over as a workaround you can use rasm on console and use edit bytes affected instructionswill add as i see sub pop test Detailed description This Pull Request does the following things Update radare submodule to introduce the improved flag realnames Add asmflagsreal to the preferences widget and enable it by default Improve the preferences widget and include scrollbars for small screens After the change Before the change Scrollbars Closing issues closes closes Is your feature request related to a problem Please describe A recent PR in radare improved massively the support for real names in r flags This will make lines like this call dword symimpuser dllCreateWindowExA To look like this call dword CreateWindowExA Describe the solution youd like Add it to the preferences window and enable it by default Right click options R Allocatefree memory CR Set memory page permissions C Dump memory R Add virtual module R Set HW breakpoint of custom size on the selected map R Rebase map to a different address Should also let you to patch all the references to that section C Analyze loaded maps C Download pdb for the selected lib Enhancements C Double clicking on heapstack should jump to heapisnt available yetstack widget C Add section info for each loaded lib using dmS Detailed description This simple PR will set r ghidra the default decompiler if available It takes advantage of the setCurrentText function Test plan required Install r dec and r ghidra Open Cutter and see that r ghidra decompiler is the default Remove r ghidra and see that r dec is selected Remove both and see that nothing has changed and no regression introduced Additional info While this solution works in the future it would be better to have priority management and each plugin will assign a desired priority to itself Closing issues closes Environment information Operating System windows Cutter version the newest release Obtained from Downloaded from release File format pdb and dll Describe the bug chromechild with pdb can not finish analysis A clear and concise description of what the bug is To Reproduce Steps to reproduce the behavior Go to Click on Scroll down to See error Expected behavior A clear and concise description of what you expected to happen Screenshots If applicable add screenshots to help explain your problem Additional context Add any other context about the problem here Is your feature request related to a problem Please describe By now Cutter is supporting Ghidra decompiler Jump to line of code in decompiler widget when user clicks on graph disasm widget So i am seeing the problem Decompiler is messy for long code Graph is easier to track and read the code and Cutter totally can generate graph blocks for decompiler Describe the solution youd like Create a graph widget for decompiler like this Screenshot at Describe alternatives youve considered The widget can be an extra plugin command and user can select soemthing like menu File generate graph decompiler or something like that Additional context Add any other context or screenshots about the feature request here Z not working when changing colors items sorted alphabetically which is kind of uselessanoying unable to change color of highlightselected in importssymbols list widgets clicking in the disasm preview frame results in crash add the navigation bar preview reduce lineheight in the list of themable things allow to drag drop the color into other items Maybe a faster way to edit themes would be to have a list of columns color box name of the thing hex value of the color editable this way we can just copypaste colors by reducing the workflow in clicks