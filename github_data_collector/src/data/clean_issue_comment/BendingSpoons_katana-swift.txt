 Environment macOS Catalina Xcode Carthage Reproduce steps Create Cartfile like following github Bendingspoonskatanaswift Run carthage update Result Fetching katanaswift Checking out katanaswift at xcodebuild output can be found in varfoldersbsdbz nbxn td t tfwnp jh gnTcarthagexcodebuildWVmBg log Skipped building katanaswift due to the error Dependency katanaswift has no shared framework schemes If you believe this to be an error please file an issue with the maintainers at Note Actually this could be solved by recreating Katana schema However we still couldnt build Katana with carthage after it xcodebuild output can be found in varfoldersbsdbz nbxn td t tfwnp jh gnTcarthagexcodebuildGjLfSJlog Building scheme Katana in Katanaxcodeproj Build Failed Task failed with exit code usrbinxcrun xcodebuild project UsersknotholegitKatanaKatanaxcodeproj scheme Katana configuration Release sdk iphoneos ONLYACTIVEARCHNO CODESIGNINGREQUIREDNO CODESIGNIDENTITY CARTHAGEYES archive archivePath varfoldersbsdbz nbxn td t tfwnp jh gnTKatana SKIPINSTALLYES GCCINSTRUMENTPROGRAMFLOWARCSNO CLANGENABLECODECOVERAGENO STRIPINSTALLEDPRODUCTNO launched in UsersknotholegitKatana This usually indicates that project itself failed to compile Please check the xcodebuild log for more details varfoldersbsdbz nbxn td t tfwnp jh gnTcarthagexcodebuildGjLfSJlog And the log file said usrbinxcrun xcodebuild project UsersknotholegitKatanaKatanaxcodeproj scheme Katana configuration Release sdk iphoneos ONLYACTIVEARCHNO CODESIGNINGREQUIREDNO CODESIGNIDENTITY CARTHAGEYES archive archivePath varfoldersbsdbz nbxn td t tfwnp jh gnTKatana SKIPINSTALLYES GCCINSTRUMENTPROGRAMFLOWARCSNO CLANGENABLECODECOVERAGENO STRIPINSTALLEDPRODUCTNO launched in UsersknotholegitKatanaUser defaults from command line IDEArchivePathOverride varfoldersbsdbz nbxn td t tfwnp jh gnTKatana Build settings from command line CARTHAGE YES CLANGENABLECODECOVERAGE NO CODESIGNIDENTITY CODESIGNINGREQUIRED NO GCCINSTRUMENTPROGRAMFLOWARCS NO ONLYACTIVEARCH NO SDKROOT iphoneos SKIPINSTALL YES STRIPINSTALLEDPRODUCT NO note Using new build system note Planning build note Constructing build description error UsersknotholegitKatanaPodsTarget Support FilesPodsKatanaPodsKatanareleasexcconfig unable to open file in target Katana in project Katana in target Katana from project Katana error UsersknotholegitKatanaPodsTarget Support FilesPodsKatanaPodsKatanareleasexcconfig unable to open file in target Katana in project Katana in target Katana from project Katana error UsersknotholegitKatanaPodsTarget Support FilesPodsKatanaPodsKatanareleasexcconfig unable to open file in target Katana in project Katana in target Katana from project Katana ARCHIVE FAILED I guess the easy way to fix this is adding Pods directory into this repository Why I want to use katana at macOS project Since README says that macOS is requirement the deployment target should be match with it Changes Update Packageswift for SwiftPM Update podspec for CocoaPods Add missing availability for old macOS Fix headers to work both iOS and macOS Tasks x Add relevant tests if needed x Add documentation if needed x Update README if needed x Ensure that all the examples as well as the demo work properly x Build passed with SwiftPM x Build passed with CocoaPods Build passed with Carthage couldnt due to Why Make the contextdispatch function returns a value when a returning side effect is dispatched Why Improve documentation and tests over the new changes brought by the returning side effects Check the hide whitespace changes button in order to make the review easier on you I also indented all the files Sometimes it is useful to pass information between side effects when the logic requires to combine them At the moment the only ways this can be done are either using callbacks or with the support of the state None of them are optimal This pr introduces the possibility of passing a return value from a side effect Note that it is still a WIP and must be properly tested and documented Moreover we should make sure that were not introducing performance issues or cases that cannot be managed Finally old code related to Actions has been removed for good The PR brings breaking changes Will there be a lightweight version of Katana for SwiftUI Problem Right now StoreListeners do not have the capability to reason about diffs between old state and new state An example of usage could be change the LocalState of a ViewController in Tempura based on those differences inside func updatewith state VVMS that could become func updateoldState VVMS Proposal Modify StoreListener to accept the oldState as parameter this should be fairly simple Appreciate all the great work on Katana Would it be possible to keep a Changelogmd like you have done with Tempura I tried to go through the commit history and the release tagging but they arent structured in a way to determine the changes 