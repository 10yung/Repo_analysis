Bruce Leidl brl gave a detailed description of the reasons behind his proposal to obfuscate the handshake process of ssh connection Go over it if you have the time Its not long and fairly easy to understand It would be nice if sshfs would support this way of obfuscation There are patches for openssh so maybe it is not that much effort to add a obfuscation option for sshfs Thank you in advance I suspect this issue is knownunderstood but I cant find an open issue for it This has been a problem for me for some time now and chasing threads on Stack Overflow and the like search sshfs Transport endpoint is not connected suggests to me this is a years old issue that has never been addressed Whether the fix would be in sshfs or elsewhere I dont know but I think its fairly reasonable to expect a reconnection attempt to be made if the reconnect option has been passed and the mount point is no longer available The problem appears to be when the mount is still listed under mount but there is no process for it under sshfs eg Note that while Ive changed some userspaths for anonymity the issue is otherwise exactly as described ie both mount points the one currently working and the one currently not are adjacent on both server and client so you might expect them to either work or fail together but they dont Autofs config cat etcautosshfs data fstypefuseport rwnodevnonemptynoatimeallowothermaxread reconnectworkaroundallServerAliveInterval ServerAliveCountMax sshfs userserver storagedata data fstypefuseport rwnodevnonemptynoatimeallowothermaxread reconnectworkaroundallServerAliveInterval ServerAliveCountMax sshfs userserver storagedata Output of mount command mount grep server userserver storagedata on mntsshfsdata type fusesshfs rwnodevnoatimeuserid groupid allowother userserver storagedata on mntsshfsdata type fusesshfs rwnodevnoatimeuserid groupid allowother Autofs status note absence of data mount point specified above userserverxhomeuser systemctl status autofs autofsservice Automounts filesystems on demand Loaded loaded libsystemdsystemautofsservice enabled vendor preset enabled Active active running since Wed UTC months days ago Main PID automount Tasks limit Memory M CPU h min s CGroup systemsliceautofsservice usrsbinautomount pidfile varrunautofspid ssh X a oClearAllForwardingsyes oport oServerAliveInterval oServerAliveCountMax userserver s sftp sshfs userserver storagedata mntsshfsdata o rwnodevnoatimeuid gid port nonemptyallowothermaxread reconnectworkaround truncated by terminal Now if I umount mntsshfsdata then attempt an ls of the same directory the volume is automatically remounted But without the umount ls here of the parent directory yields userserverxhomeuser ls l mntsshfs ls cannot access mntsshfsdata Transport endpoint is not connected total drwxrxrx root root Jul data d data So why is the volume not remounted automatically when attempts to access it are returning not connected errors Hi Im running sshfs on top of osxfuse on macOS Catalina I use sshfs to connect to our shared storage at my work For some reason sshfs seems to be trying to reconnect multiple times when disconnected but it fails to reconnect This is being flagged by my works IT network which is resulting in my IP address getting blocked Here is the commandline Im using sshfs userhost ssh o idmapfile o uidfileuidfile o gidfilegidfile o nomapignore o allowotherextendedsecuritynoappledouble This is what my IT networks logs say nullzero my ip syslogpiglblgov AUTODROP SSHBRUTEFORCE ADVISE HIGHFAILEDLOGIN PROTOSSH USERmy user IPmy ip where my ip is my IP address and my user is my SSH username I dont understand why sshfs is trying to reconnect when I did not give it the o reconnect option Is there some code in sshfs that causes it to try to reconnect by default Is there some way to disable it So sshfs freezes whole user and will not react to CTRLC signal Only initiating kill sshfspid as root user clears the freeze situation It also causes the mount point to go stale ls l d somedir Cause It took really long time to find the cause of this problem Local directory to be mounted homeusersomedir So lets say that we have eg this kind of path normally homeuserbinhomeuserlocalbinusrlocalsbinusrlocalbinusrsbinusrbinsbinbin If I add the directory to be mounted in the beginning of the PATH sshfs freezes on connect homeusersomedirhomeuserbinhomeuserlocalbinusrlocalsbinusrlocalbinusrsbinusrbinsbinbin If I add the directory to be mounted in the end of the PATH sshfs works just fine homeuserbinhomeuserlocalbinusrlocalsbinusrlocalbinusrsbinusrbinsbinbinhomeusersomedir Command used cd run as normal user sshfs o nonempty usermgmthomeusersomedir somedir System Ubuntu LTS sshfs ubuntu fuse ubuntu Debug sshfs o debugsshfsdebuglogleveldebugnonempty usermgmthomeusersomedir somedir SSHFS version FUSE library version nullpathok nopath utimeomitok executing ssh x a oClearAllForwardingsyes ologleveldebug someusermgmt s sftp HANG Fix suggestion Check if path in PATH really exists before trying to access it OR check if local directory to be mounted is in PATH before trying to connect to the remote with ssh Give a proper error message rather than just freezing Hi sshfs only return fingerprint and visualhostkey if the host is unknown After you accept the host key he dont return the fingerprint and visualhostkey anymore and never show the banner message or personnal banner message is it possible to make it show noerror message from ssh Im looking at the code but its my first day looking at Maybe someone can make a patch faster than me Thanks for reading and I help if I can sshfs o allowotherIdentityFilehomeusersshidrsa userserveurhomeuserpartage homelocaluserPartage o nonempty o VisualHostKeyyes fuse unknown option VisualHostKeyyes I have add this conf VisualHostKeyyes in sudo nano etcsshsshconfig and nano sshconfig I cant see any VirtualHostKey with sshfs Work for ssh This looks like a bug to me Why isnt setsid called after the first fork By leaving it open daemonized process can still get at least SIGINT which wasnt intended for it How to reproduce mkdir sshfstst vim in vim sshfs server tst in vim read and hit kbdCTRLCkbd tst gets unmounted which shouldnt happen Moving setsid should be enough to fix this I recently upgraded my system and in the process went from sshfs to and I can no longer use git over an sshfs mount git pull error cannot open gitFETCHHEAD Permission denied The file itself has no permission issues rm gitFETCHHEAD echo create gitFETCHHEAD cat gitFETCHHEAD create git pull error cannot open gitFETCHHEAD Permission denied cat gitFETCHHEAD now a zerolength file Running git through strace says openatATFDCWD gitFETCHHEAD OWRONLYOCREATOAPPEND EACCES Permission denied Why would openat be returning EACCES when whatever functions the shell is using work just fine on the same file path Is anyone else able to run git fetch on a git repository accessed over sshfs In my local network I am running the following command user and remote name anonymised sshfs myselfremotehomenetmyself remote myselfremotes password CTRLC When using CTRLC while entering the password the directory will be mounted with an unconnected endpoint so its there but not usable mount l myselfremotehomenetmyself on homemyselfremote type fusesshfs rwnosuidnodevusermyself ls remote ls transport endpoint is not connected homemyselfremote This means that retrying to mount it will fail sshfs myselfremotehomenetmyself remote fuse bad mount point homemyselfremote Transport endpoint is not connected The workaround is to manually unmount it and then try again fusermount u remote sshfs myselfremotehomenetmyself remote myselfremotes password However it would be nice if sshfs failed gracefully and automatically unmounted the nonconnected directory for me Im wondering if the following could be done If I understand correctly sshfsfuse seems to assign its own inode numbers to files and hard links are not assigned the SAME inode number and the link count is not incremented Would it be possible to do just that If it sees the same inode number from the orig filesystem for different filenames it assigns the existing inode number not a new one and increments the link count for both 