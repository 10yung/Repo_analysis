add go mod support NOTICE This domain name expired on and is pending renewal or deletion While doing some evaluation with ledis and redisfailover I played around with curl and the httpclient For commands that return arrays or nested arrays the corresponding strings werent correctly interpreted It looked like this curl localhost role role bWFzdGVy Because I want to use jq for json processing in the shell I had to fix it I studied your implementation in respClient and did the corresponding changes in httpClient accordingly LedisDB wiki IntroductionPPT Ive added some documentation for the LTRIM command Also I included some changes made by doctotoc This fixes several links in the HTML rendering produced by GitHub Hello I was wondering if ledisdb has a keyspace notifications feature as Redis does or any other mechanism that I am able to use to simulate a callback when a specific event occurs In my usecase for example most of the keys expire after h and Id like to run a callback function when this happens Id like to subscribe somehow to these events I tried this code which is for Redis I know but I am getting a lot of errors like node UnhandledPromiseRejectionWarning ReplyError command not found at parseError homeadrianpopkarmaagentskarmaredisnotificationlibnodemodulesredisparserlibparserjs at parseType homeadrianpopkarmaagentskarmaredisnotificationlibnodemodulesredisparserlibparserjs node UnhandledPromiseRejectionWarning Unhandled promise rejection This error originated either by throwing inside of an async function without a catch block or by rejecting a promise which was not handled with catch rejection id node DEP DeprecationWarning Unhandled promise rejections are deprecated In the future promise rejections that are not handled will terminate the Nodejs process with a nonzero exit code So does ledisdb support this If not is it something that will be implemented in the future Thanks I start a buildin package ledis serveron windowsdefault configuration then try to connect with lediscli failed message No connection could be made because the target machine actively refused it So can lediscli connect to a ledisserver in package mode Im trying to use the goleveldb memory DBName with unit tests But it seems the process of opening any configured DB store always makes directories and files LOCK Is this required with the inmemory store option Is there an example of using the inmemory store without the filesystem being accessed cfg configNewConfigDefault cfgDBName memory conn err ledisOpencfg err source temporarily unavailable db connSelect 