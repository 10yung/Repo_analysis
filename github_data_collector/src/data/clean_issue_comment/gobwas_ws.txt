Hello Dose higherlevel example implement Zerocopy upgrade Or I need to use low level API Hi there Im thinking to use gobwasws for client side to improve performance Can I still get the following benefits by using gobwasws as a websocket client instead of gorillawebsocket Zerocopy upgrade No intermediate allocations during IO Lowlevel API which allows to build your own logic of packet handling and buffers reuse Highlevel wrappers and helpers around API in wsutil package which allow to start fast without digging the protocol internals Thank you as go mod use more and more can we support it As defined in the protocol please correct me if Im wrong close frame may come with status code and a reason The current situation is that wsutilhandlergo go func c ControlHandler HandleCloseh wsHeader error will only send the status code without the reason string and its ok since its part of the protocol however close frame may also contain reason string which is already defined here checkgo go ErrProtocolOpCodeReserved ProtocolErroruse of reserved op code ErrProtocolControlPayloadOverflow ProtocolErrorcontrol frame payload limit exceeded ErrProtocolControlNotFinal ProtocolErrorcontrol frame is not final ErrProtocolNonZeroRsv ProtocolErrornonzero rsv bits with no extension negotiated ErrProtocolMaskRequired ProtocolErrorframes from client to server must be masked ErrProtocolMaskUnexpected ProtocolErrorframes from server to client must be not masked ErrProtocolContinuationExpected ProtocolErrorunexpected noncontinuation data frame ErrProtocolContinuationUnexpected ProtocolErrorunexpected continuation data frame ErrProtocolStatusCodeNotInUse ProtocolErrorstatus code is not in use ErrProtocolStatusCodeApplicationLevel ProtocolErrorstatus code is only application level ErrProtocolStatusCodeNoMeaning ProtocolErrorstatus code has no meaning yet ErrProtocolStatusCodeUnknown ProtocolErrorstatus code is not defined in spec ErrProtocolInvalidUTF ProtocolErrorinvalid utf sequence in close reason I encountered a problem that theres a WS client Poco that might be have issue if it doesnt receive reason string with the close frame even that it is valid by the protocol Is it possible to add it I can help with a PR if you need just want to make sure Im not missing something with the protocol or missing that theres already existing options to do that Running a program with the Go pointer checks enabled through race leads to the detection of an invalid pointer conversion go test race giouiorgcmdgogio FAIL TestJS s panic runtime error unsafe pointer conversion recovered panic runtime error unsafe pointer conversiongoroutine running testingtRunnerfunc xc e Userseliasgotipsrctestingtestinggo xaeb panic x a xc bc Userseliasgotipsrcruntimepanicgo x githubcomgobwaswsbtsEqualFold xc fc x xfcc x b x x xc fc Userseliasgopkgmodgithubcomgobwaswsv utilgo x githubcomgobwaswsDialerUpgrade x x x x x x x x x x Userseliasgopkgmodgithubcomgobwaswsv dialergo xe githubcomgobwaswsDialerDial x x x x x x x x x x Userseliasgopkgmodgithubcomgobwaswsv dialergo x githubcomgobwaswsDial Userseliasgopkgmodgithubcomgobwaswsv dialergo githubcomchromedpchromedpDialContext x b xc c xc eaf x a xc x x x fb xc d x Userseliasgopkgmodgithubcomchromedpchromedpv conngo xff githubcomchromedpchromedpNewBrowser x b xc ce xc eaf x a xc x x x x x Userseliasgopkgmodgithubcomchromedpchromedpv browsergo x bb githubcomchromedpchromedpExecAllocatorAllocate xc dc x b xc ce xc x x x x x Userseliasgopkgmodgithubcomchromedpchromedpv allocatego xfec githubcomchromedpchromedpRun x b xc ce x x x xc e x Userseliasgopkgmodgithubcomchromedpchromedpv chromedpgo x giouiorgcmdgogiotestJSTestDriverStart xc e xc e x a b xf x x x d x xc e Userseliasprojgiocmdgogiojstestgo x giouiorgcmdgogiotestrunEndToEndTest xc e x b c xc e Userseliasprojgiocmdgogioe etestgo xa giouiorgcmdgogiotestTestJS xc e Userseliasprojgiocmdgogiojstestgo xad testingtRunner xc e x a Userseliasgotipsrctestingtestinggo x a created by testingTRun Userseliasgotipsrctestingtestinggo x FAIL giouiorgcmdgogio s FAIL We can easily make them const to protect them from unexpected override Other errors might be also converted to the consts Also we might define a new type WsError and use new functionality from errors package milestone v DO NOT REVIEW Hi We are using gobwasws in our production server We have a pool of go routines which will be called on Desc events The problem is that the only way to detect idle connections is to have a separate routine check connections and close them if needed I was wondering if it is the correct way to handle this problem or is there any better solution on this Simple reader and writer that support deflate compression Can be used as the wrapper around the wsutilWriter and wsutilReader structs Code highly inspired by Gorillas WebSocket approach but I not properly sure about pools for flateReaderflateWriter Is there a support for compression in ws