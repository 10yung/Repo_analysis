Ive been working on several VS extensions for LSP and unfortunately ran into VSSDKExtensibilitySamplesLanguageServerProtocol at the start This example should be retired It is very old referring to the preview version of VS which I dont think you can get anymoreand very hard to follow It tries to demonstrate way too much in implementing both a client and a server When I tried building and running this example which took the better part of a day to upgrade I could not even understand what this has at all to do with a practical LSP server ie how would I write an extension to work with a Eclipse Java LSP server The server lacks implementations for hover highlighting go to def find refs requestsbasically all the usual requests that an LSP server is supposed to support To boot all the UI for these requests are implemented in VS IDE so the purpose of the client is basically to make a connection and do anything outofband of the protocol which should be an advanced topicexample Instead I would recommend substituting it with a thin client example eg something like my code at and a separate thin server example Installed products Visual Studio Enterprise Description The analyzer tells me to call VerifyOnUIThread Warning VSTHRD Accessing IVsToolWindowToolbarHost should only be done on the main thread Call MicrosoftVisualStudioProjectSystemIProjectThreadingServiceVerifyOnUIThread first I tried this var componentModel IComponentModelGetServicetypeofSComponentModel var projectServiceAccessor componentModelGetServiceIProjectServiceAccessor var projectService projectServiceAccessorGetProjectServiceProjectServiceThreadingModelMultithreaded projectServiceServicesThreadingPolicyVerifyOnUIThread Problem is that projectServiceServices results in a MissingMethodException for getServices What would be the correct way to handle this Hi Visual Studio Community I took a look over the HighlightWord project sample because I want to create another VS extension in which I can create squiggles between some coordinates in VS Editor line column Unfortunately I didnt succeeded My question is how can I adapt this project or how to create a new one dedicated to creating squiggles in VS Editor Can you create a sample for this type of extension I didnt found any samples for this Regards Ionut Installed products Visual Studio example Professional Build Extension having two menu command Open File Open File Want to create two separate extensions If Some condition Open File Extension if Some other condition Open File Extension Current behavior I am able to create two extensions but could not differentiate them separately Ie if one is already installed can not install the second one gives an error Extension already installed If I change Product ID from vsixmanifest file I can Install both the plugin Can see in extension and Update section But the problem is I can see Open File menu command times and not able to see Open File Expected behavior I should see Open File And Open File both the commands and working properly Installed products Visual Studio Description I am trying to make a VS extension I hope this extension can provide translations for the information provided by Intellisense QuickInfo as the picture shows From To I have been looking for answers in the NET API browser but I still dont know how to implement it I want to get an implementation here or tell me which API to use I dont know how to get a summary of methods classes etc Like Intellisense QuickInfo Installed products Visual Studio Description Until Visual Studio introduced a new Welcome window in Main window was loaded first and I was able to get Status Bar right when Visual Studio became idle Now I need to wait until Main window is Loaded How to do that right Installed products Visual Studio Description In order to attach Radial Controller to a window created by Visual Studio I need to know when it was created See issue What is the right event to listen to Installed products Microsoft Visual Studio Community VisualStudio Release Microsoft Visual Studio Community VisualStudio Release Microsoft Visual Studio Community Preview Preview VisualStudio Preview pre Microsoft Visual Studio Professional VisualStudio Release Description The foo Language server is failing to activate Steps to recreate Using VS Community check out the master branch then start debugging the solution choosing an instance of Visual Studio Current behavior the FooLanguageClient is failing to initialize Method not found Void MicrosoftVisualStudioLanguageServerProtocolTextDocumentClientCapabilitiessetCodeActionMicrosoftVisualStudioLanguageServerProtocolDynamicRegistrationSetting at MicrosoftVisualStudioLanguageServerClientRemoteLanguageServiceBrokerRemoteLanguageClientInstanceInitializeAsyncd MoveNext at SystemRuntimeCompilerServicesAsyncTaskMethodBuilderStart TStateMachine TStateMachine stateMachine at MicrosoftVisualStudioLanguageServerClientRemoteLanguageServiceBrokerRemoteLanguageClientInstanceInitializeAsyncString workspaceLocation CancellationToken token at MicrosoftVisualStudioLanguageServerClientRemoteLanguageServiceBrokerRemoteLanguageClientInstanceActivateLanguageClientAsyncd MoveNext at MicrosoftVisualStudioTelemetryWindowsErrorReportingWatsonReportGetClrWatsonExceptionInfoException exceptionObject Expected behavior It should open the window when a foo file is opened in the editor this works when debugging in an instance of Visual Studio Installed products Visual Studio Enterprise Version Microsoft NET Framework Description Similar to the ReferenceServices example solution does not compile due due an apparently missing GenerateFileManifest Steps to recreate Open the ReferenceServices ReferenceServicesCReferenceServicessln example solution in Visual Studio Compile Observe error Severity Code Description Project File Line Suppression State Error The target GenerateFileManifest does not exist in the project ReferenceServices Current behavior The example solution does not compile Expected behavior The example solution compiles successfully Workaround As noted by dmitrypavlov in running Visual Studio as administrator appears to resolve this problem Later attempts to compile as regular user not Run as administrator seem to work just fine Installed products Visual Studio Enterprise Version Microsoft NET Framework Version Description When trying to build the Editor with Toolbox I get the error VSIX Manifest root element is invalid VSIX Manifest requires root element with qualified name or Steps to recreate Open the Editor with Toolbox example solution From the Build menu select Build Solution Severity Code Description Project File Line Suppression State Warning The PackageManifest element is not declared EditorWithToolbox C Users sllewellyn source repos Utilities VSSDKExtensibility VSSDKExtensibilitySamplesmaster EditorWithToolbox CS sourceextensionvsixmanifest Error VSIX Manifest root element is invalid VSIX Manifest requires root element with qualified name or EditorWithToolbox Current behavior Shouldnt it just build Expected behavior cant find a fix for this