 Expected behavior Expect to be able to drag Draggables and have other Draggables react accordingly Actual behavior Allows to drag Draggable but other Draggables do not move accordingly and when dropped will not detect that it has been dragged and will revert to its initial position Steps to reproduce This happens on all code using the library I have seen including the demos page What browser are you using Chrome Version Official Build bit Demo Go to the card board demo And try dragging with varying speeds and heights Screen Recording at AM mov Removing the classes demo and app from the root of this demo makes it worse and means no dragging detection ever happens Hello kutlugsahin I have nested Container and while dragging an item in the rd inner container then it is adding in two parent containers as well Please answer Container onDropthisonDropOne Draggable Container onDropthisonDropTwo Draggable Container onDropthisonDropThree DraggableDraggable Container Draggable Container Draggable Container Are there any plans to create a Droppable Component what i mean by that is to have a Droppable just like a Draggable i think the benefits for that are clear Ive been using your library to implement drag and drop server tabs for Were using the Nav component from reactbootstrap and I ran into a couple issues when working with this library Need to be able to apply a base class when wrapping Draggable with a render function I noticed that when supplying my own render function to the Draggable component that my className was getting overwritten by the default wrapperClass My change adds the className prop already built into Draggable to the ReactcloneElement function so that both classNames are included in the finally rendered element Need to be to supply React components as render results when wrapping with Container When I supplied the render function to Container where the result was a Nav component from reactbootstrap I got a white screen from React I noticed that your original library expected an HTMLElement which makes perfect sense but the Container wrapper passed the exact output of render which was a ReactComponent My change finds the actual HTMLElement if it exists and passes that to the container function such that it will always be an HTMLElement Let me know your thoughts on these changes and if you think they would be helpful to this project I welcome any suggestions If you hit the ESC key when dragging a draggableitem from one container to another we see this exception Uncaught TypeError Cannot read property cancelDrop of null Heres what a portion of the render method looks like for this component thats having issues with the ESC key return div classNameformlayoutwrapper div classNameformlayoutcolumnwrap div classNameformlayoutleftcolumn Container groupName behaviourcopy dropPlaceholder animationDuration showOnTop true className cardsdroppreview getChildPayloadi formFields i formFieldsmapfield i return Draggable keyi classNamedraggable fieldname div classNamedraggablefield span classNameformlayoutfieldtypeiconFontAwesomeIcon iconfieldicon span fieldlabel div Draggable Container div Container groupName getChildPayloadi thisstateaddedFields i dropPlaceholder animationDuration showOnTop true className cardsdroppreview onDropthishandleOnDrop Also heres a screenshot of the error happening when the ESC key is pressed ch NmhC A really minor problem the draggable components render documentation says it recieves the ref parameter when it doensnt happen Container return thispropsrenderthiscontainerRef Draggable return ReactcloneElementthispropsrender className wrapperClass I might try and just do this myself but Im hitting some performance issues when theres a lot of draggables presumably because its using topleft rather than translate kutlugsahin do you have any plans to modify this to use transforms I assume itd be pretty easy It appears that whenever behaviour is set to dropzone if you drag an element from that container and cancel the drag it flies off to the left of the container this happens with every element in the list Looks as if perhaps they all think theyre the first item in the list Has anyone encountered this before Hey kutlugsahin I was trying to add a placeholder feature to my editor but it seems not working in my code but its working smoothly in cardboard your provided URL Added same properties in the code as shown in the document Please help