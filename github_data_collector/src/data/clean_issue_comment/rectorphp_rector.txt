 Controller HttpKernel Route annotations above actions br Disptacher Event Dispacher br Template ctp to Twig php templates php div classrights form php echo thisFormcreateRight fieldset legendphp echo Edit Right legend php echo thisForminputid echo thisForminputrightcategoryid echo thisForminputname echo thisForminputlabel echo thisForminputdescription echo thisForminputRole fieldset php echo thisFormendSubmit div div classactions h php echo Actions h ul liphp echo thisFormpostLinkDelete action delete thisFormvalueRightid null Are you sure you want to delete s thisFormvalueRightid li liphp echo thisHtmllinkList Rights action index li liphp echo thisHtmllinkList Right Categories controller rightcategories action index li liphp echo thisHtmllinkNew Right Category controller rightcategories action add li liphp echo thisHtmllinkList Roles controller roles action index li liphp echo thisHtmllinkNew Role controller roles action add li ul div br Database Active Rector to Doctrine ORM Failing test case for First thank you for reporting a bug That takes time and we appreciate that Subject Details Rector version PHP version PHP Current Behaviour diff srcEmailEmailphp begin diff Original New throws InvalidArgumentException throws StringsException public function constructvalue public function constructstring value validator new EmailValidator end diff Applied rules Rector CodingStyle Rector Namespace ImportFullyQualifiedNamesRector Rector TypeDeclaration Rector FunctionLike ParamTypeDeclarationRector Rector TypeDeclaration Rector ClassMethod AddParamTypeDeclarationRector Rector Rector Argument ArgumentRemoverRector Rector CodingStyle Rector ClassMethod ReturnArrayClassMethodToYieldRector Rector CodeQuality Rector If RemoveAlwaysTrueConditionSetInConstructorRector Rector DeadCode Rector ClassMethod RemoveOverriddenValuesRector Rector DeadCode Rector FunctionLike RemoveCodeAfterReturnRector The class Email inherits from a generic interface with this signature php interface SimpleValueObjectInterface extends ValueObjectInterface Accepts a simple scalar value param mixed value public function constructvalue Adding the type hint string causes the code to break Im going to write a failing test case for this First thank you for reporting a bug That takes time and we appreciate that Subject Details Rector version PHP version PHP Current Behaviour diff ORM Embeddable class Address implements AddressInterface final class Address implements AddressInterface use ComplexValueObjectTrait construct as traitConstruct end diff Applied rules Rector SOLID Rector Class FinalizeClassesWithoutChildrenRector Rector CodingStyle Rector Namespace ImportFullyQualifiedNamesRector Rector makes the class final also if it shouldnt I have no idea of how to create a test case about this as it seems it is covered by But actually it doesnt work How to reproduce the issue As Im not able to create a failing test case to verify the bug it way simpler use the source code that cause the issue Clone the repo composer install Open the file rectoryaml Uncomment the line the one that excludes the rector Rector SOLID Rector Class FinalizeClassesWithoutChildrenRector Run the command vendorbinrector process srcAddressAddressphp The bug appears Subject Details Rector version v PHP version v Full Command vendorbinrector process src set php debug Current Behaviour report from command line with debug descriptionscreenshot Minimal PHP Code Causing Issue if possible always run Rector on specfic file that causes the error eg vendorbinrector process srcSpecificFilephp set deadcode debug php php var Usernull private user Current Behaviour php php private User user Expected Behaviour php php private User user First thank you for reporting a bug That takes time and we appreciate that File permission denied error When running vendorbinrector process vendorzendframeworkzendframework set php dryrun command in windows include read of bytes failed with errno Permission denied in D laragon www rectortest vendor symfony httpkernel Kernelphp on line v vendorbinrector process vendorzendframeworkzendframework set php dryrun From observing of people who use Rector nobody knows what node classes they can use PHPStorm lacks autocomplete there php public function getNodeTypes return Stringclass If we have custom NodeClass class with constant to autocomplete it would limit list of allowed classes and show all that is possible php public function getNodeTypes return NodeClassSTRING This prevent the fixing of PhpDoc block with inheritdoc annotation from Rector TypeDeclaration Rector Property CompleteVarDocTypePropertyRector rector Stubs are mocks with zero expectations Diff The following diff should be applied iff no expectations are performed later on on service diff service thiscreateMockServiceclass service thiscreateStubServiceclass So it should be applied iff expects is never called expects appears in the interface of MockObject and not in the interface of Stub php thiscreateMockServiceclassmethodsomethingwillReturnsomething else should be left untouched But after reading this line I think it can be applied if only method is called its not an expectation diff thiscreateMockServiceclassmethodsomething thiscreateStubServiceclassmethodsomething Implemented in since This PR adds two fixtures relating to trait handling by CountOnNullRector Currently PropertyWithinTraitMethod passes VariableWithinTraitMethod fails If I change the Fixture from a trait to a class they both pass so this is related to how a variable within a trait is handled I spent some time digging and tried to use Rector NodeTypeResolver PerNodeTypeResolver VariableTypeResolverresolve that seems to be written to handle resolution of variables though its used nowhere in Rectors code only in its own Test file thinking by calling resolveTypesFromScopenode which calls resolveNodeScopenode which calls on Rector NodeTypeResolver PHPStan Collector TraitNodeScopeCollector getScopeForTraitAndNodetraitName node But it returned null which was resolved to MixedType in resolveTypesFromScope and bubbled up back to Rector Php Rector FuncCall CountOnNullRectorrefactor which passes the isNullableType check and thus refactors the code TomasVotruba Any idea how to deal with this one 