 ersion RELEASE One can configure requestRetryLimit as described on flowable dosc http task This seems to be ignored as the code goes code if configgetRequestRetryLimit retryCount configgetRequestRetryLimit httpClientBuildersetRetryHandlernew DefaultHttpRequestRetryHandlerretryCount false Which then leads to ignoring retry feature within retry handler Override public boolean retryRequest final IOException exception final int executionCount final HttpContext context if clientContextisRequestSent thisrequestSentRetryEnabled Retry if the request has not been sent fully or if its OK to retry methods that have been sent return true otherwise do not retry return false Id expect this feature to be included in retryhandler ie if configgetRequestRetryLimit retryCount configgetRequestRetryLimit httpClientBuildersetRetryHandlernew DefaultHttpRequestRetryHandlerretryCount true or am I missing something Describe the bug History level is audit Flowable version is Async history is open and use Kafka as the message queue When history job message received form kafka is later than the flow instance ended and activityend history job execute to the AsyncHistoryJobHandler and call the json transformers method isApplicable it returns false Then a AsyncHistoryJobNotApplicableException is throwed Then the history job is always executed This is because the history job activityend will query the actruexecution table but the execution info was deleted when the process instance is ended Expected behavior Usually this is not common Code Is your feature request related to a problem Contemporary applications use OpenID Connect for Authentication and OAuth scopes and claims for Authorization Describe the solution youd like Add support for OAuth to Flowables REST APIs See Support Basic Auth and Spring OAuth Securing your REST API using Keycloak and Spring OAuth Describe alternatives youve considered Currently Flowable only supports Basic Auth See Additional context See Keycloak Flowable and OpenLDAP Describe the bug When I launch the flowableallinone Docker image the REST API default user is not created notcreated Expected behavior That the REST API default user is created and is granted the accessrestapi privilege flowableidmprivileges Code For example docker run d name flowable p e FLOWABLERESTAPPADMINUSERIDflowablerest e FLOWABLERESTAPPADMINPASSWORDtest e FLOWABLERESTAPPADMINFIRSTNAMEFlowable Rest API e FLOWABLERESTAPPADMINLASTNAMEAdministrator envfile noldapenvtxt flowableallinone Check the env variables are set correctly docker inspect f range index value ConfigEnvprintln valueend flowable grep FLOW Output FLOWABLEIDMAPPADMINUSERIDflowable FLOWABLEIDMAPPADMINPASSWORDtest FLOWABLEIDMAPPADMINFIRSTNAMEFlowable FLOWABLEIDMAPPADMINLASTNAMEAdministrator FLOWABLEIDMAPPADMINEMAILadminflowableorg FLOWABLECOMMONAPPIDMADMINUSERflowable FLOWABLECOMMONAPPIDMADMINPASSWORDtest FLOWABLERESTAPPADMINLASTNAMEAdministrator FLOWABLERESTAPPADMINUSERIDflowablerest FLOWABLERESTAPPADMINPASSWORDtest FLOWABLERESTAPPADMINFIRSTNAMEFlowable Rest API noldapenvtxt Relaxed Binding Externalised Configuration Property Note acmemyprojectpersonfirstname Kebab case which is recommended for use in properties and yml files acmemyProjectpersonfirstName Standard camel case syntax acmemyprojectpersonfirstname Underscore notation which is an alternative format for use in properties and yml files ACMEMYPROJECTPERSONFIRSTNAME Upper case format which is recommended when using system environment variables See Ref Ref Ref Ref Note UPPERCASEFORMAT is recommended when using system environment variables DEFAULT ADMINISTRATOR ACCOUNTS FLOWABLEIDMAPPADMINUSERIDflowable FLOWABLEIDMAPPADMINPASSWORDtest FLOWABLEIDMAPPADMINFIRSTNAMEFlowable FLOWABLEIDMAPPADMINLASTNAMEAdministrator FLOWABLEIDMAPPADMINEMAILadminflowableorg FLOWABLECOMMONAPPIDMADMINUSERflowable FLOWABLECOMMONAPPIDMADMINPASSWORDtest DEFAULT REST API ACCOUNTS See flowablerestappadminuseridrestadmin flowablerestappadminpasswordtest flowablerestappadminfirstnameRest flowablerestappadminlastnameAdmin DEFAULT REST API ACCOUNTS See flowablerestappadminuseridrestadmin flowablerestappadminpasswordtest flowablerestappadminfirstnameRest flowablerestappadminlastnameAdmin DEFAULT REST API ACCOUNTS FLOWABLERESTAPPADMINUSERIDflowablerest FLOWABLERESTAPPADMINPASSWORDtest FLOWABLERESTAPPADMINFIRSTNAMEFlowable Rest API FLOWABLERESTAPPADMINLASTNAMEAdministrator FLOWABLERESTAPPADMINUSERIDflowablerest FLOWABLERESTAPPADMINPASSWORDtest FLOWABLERESTAPPADMINFIRSTNAMEFlowable Rest API FLOWABLERESTAPPADMINLASTNAMEAdministrator MISC e springdatasourceurljdbch flowabledbdbAUTOSERVERTRUEAUTOSERVERPORT DBCLOSEDELAY SPRINGDATASOURCEURLjdbch flowabledbdb AUTOSERVERTRUE AUTOSERVERPORT DBCLOSEDELAY HTTP Status Not Found Type Status Report Message flowableidm Description The origin server did not find a current representation for the target resource or is not willing to disclose that one exists Apache Tomcat Additional context As per the Spring Boot Relaxed Binding documentation UPPERCASEFORMAT is used when using system environment variables Note Unix shells cannot include a hyphen in a variable name Interesting may be related when I tried to set the springdatasourceurl in the envfile file I received the following error HTTP Status Not Found Type Status Report Message flowableidm Description The origin server did not find a current representation for the target resource or is not willing to disclose that one exists Apache Tomcat See Serendipity CEP Developer Documentation Is your feature request related to a problem Please describe I would like to be able to sort by category the same way I can sort by other fields using TaskInfoQuery methods orderByTaskName orderByTaskPriority etc Describe the solution youd like Add a constant CATEGORY to TaskQueryProperty and HistoricTaskInstanceQueryProperty with name RESCATEGORY and method orderByTaskCategory to TaskInfoQuery and implementations which uses this property Describe alternatives youve considered It can be worked around by queryorderBynew ActivityInstanceQueryPropertyRESCATEGORY but this is not satisfactory robust to future changes adding hooks for premerging and finalizemerging before clearing local cache default implementations for hooks to do a merge see included documentation for more details Check List Unit tests YES Documentation YES Describe the bug The POST body to formapiformforminstances accepts a formInstanceId but it is not used The Forms Java API provides provides both createFormInstance and saveFormInstance methods but the REST API only uses the createFormInstance methods Expected behavior Standard REST practice would be to have PUT endpoint to update an existing FormInstance but overloading the POST to save instead of creating when a formInstanceId is possible Additional context The Task app uses the saveFormInstance when updating a task with a form implying that updating existing is the expected behavior Flowable does not use High Performance Primitive Collections for Java so this dependency can be removed Describe the bug When process instance is deleted there is no possibility to specify listener on the delete event Test Deploymentresources orgflowableenginetestbpmneventendTerminateEndEventTesttestTerminateExecutionListenerbpmn public void terminateExecutionListenerOnDeleteEvent throws Exception ProcessInstance pi runtimeServicestartProcessInstanceByKeyterminateEndEventExample assertTruetaskServicecreateTaskQueryprocessInstanceIdpigetIdtaskDefinitionKeypreTerminateTaskcount runtimeServicedeleteProcessInstancepigetId test assertProcessEndedpigetId assertEquals TerminateExecutionListenerstartCalled assertEquals TerminateExecutionListenerdeleteCalled Expected behavior When a process instance is deleted delete listener is invoked v SNAPSHOT