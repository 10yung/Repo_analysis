 java final TrackingId trackingId cargoRepositorynextTrackingId final Location origin locationRepositoryfindoriginUnLocode final Location destination locationRepositoryfinddestinationUnLocode final RouteSpecification routeSpecification new RouteSpecificationorigin destination arrivalDeadline final Cargo cargo new CargotrackingId routeSpecification cargoRepositorystorecargo Here the Location is an entity actually it looks like an aggregate root Still you pass it as a parameter to the RouteSpecification Afaik aggregates cannot access each other directly You should have added only a verified LocationId to the RouteSpecification which is not necessarily the UnLocode you use for finding it But correct me if I am wrong Hi guys Just a short commit renaming the location Hangzhou Hope it helps mvn springbootrun Error orghibernatetoolschemaspiCommandAcceptanceException Error executing DDL via JDBC Statement ignore the configuration of intellijallmacwindows and eclipse in class SampleLocations HANGZOU is not correcttly spelled pls change it to HANGZHOU After doing some research I got confirmation that folderbyfeature is superior to folderbylayer in the majority of cases To get some arguments we can read among others this article this one or even this answer I think that the code of DDDSample should be refactored to follow this approach or even using modules What do you think To run the project using Java or I had to add the following configuration plugin groupIdorgspringframeworkbootgroupId artifactIdspringbootmavenpluginartifactId configuration jvmArgumentsaddmodules javaxmlbindjavaxmlwsjvmArguments configuration plugin Unfortunately this will break Java support With this commit the project gets a Maven Wrapper from Takari This way the project is more selfcontained