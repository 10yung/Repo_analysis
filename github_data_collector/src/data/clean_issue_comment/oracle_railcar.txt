 Hey I really like the idea of having a Rust OCI runtime but this project does not seem to have a clear maintainership right Is it still supported by oracle Do you consider having a base set of code owners to bring the project forward Attempted to build on Intel Clear Linux with the Rust nightly compiler and got the following error error E mismatched types srcnixextrs let res unsafe libcsetrlimitresource rlim expected u found i rustc and kernel version timthinkcleardevrustrailcar rustc version rustc c d timthinkcleardevrustrailcar uname a Linux thinkclear native SMP Wed Jun UTC x GNULinux I was able to get it built with this patch but I do not know if its generally applicable or if I have fully tested that my binary built with this change actually works The readme mentions using this with docker Im curious if it can be used with podman in the same way Hi there First off thanks This project is interesting But at the same time it is unbuildable I understand this project is new and is in the process of gaining traction However the first thing anyone looking at experimental projects does is to go through the README and INSTALL file to understand how to build it I faced the following issues whilst following the instructions in README using both nightly and stable results in failure to build cargo install cargowhen force Updating cratesio index Installing cargowhen v Compiling libc v Compiling bitflags v Compiling unicodewidth v Compiling strsim v Compiling ansiterm v Compiling vecmap v Compiling nom v Compiling textwrap v Compiling atty v Compiling semver v Compiling clap v Compiling cargowhen v Finished release optimized targets in s Replacing homeboratscargobincargowhen Replaced package cargowhen v with cargowhen v executable cargowhen rustup toolchain install nightlyx unknownlinuxgnu info syncing channel updates for nightlyx unknownlinuxgnu nightlyx unknownlinuxgnu unchanged rustc nightly aa ed c info checking for selfupdates rustup default nightlyx unknownlinuxgnu info using existing install for nightlyx unknownlinuxgnu info default toolchain set to nightlyx unknownlinuxgnu nightlyx unknownlinuxgnu unchanged rustc nightly aa ed c rustup target install x unknownlinuxmusl info component ruststd for target x unknownlinuxmusl is up to date buildsh Fresh autocfg v Fresh cc v Fresh unicodexid v Fresh quote v Fresh serde v Fresh cfgif v Fresh void v Fresh dtoa v Fresh itoa v Fresh unicodewidth v Fresh rustcdemangle v Fresh errorchain v Fresh vecmap v Fresh ansiterm v Fresh strsim v Fresh scopeguard v Fresh lazystatic v Fresh synom v Fresh log v Fresh textwrap v Compiling railcar v homeboratsrailcar Fresh libc v Fresh syn v Fresh bitflags v Running homeboratsrailcartargetdebugbuildrailcar fb f a cbuildscriptbuild Fresh numtraits v Fresh backtracesys v Fresh serdecodegeninternals v Fresh nix v Fresh atty v Fresh errno v Fresh nix v Fresh seccompsys v Fresh numtraits v Fresh serdederive v Fresh backtrace v Fresh caps v Fresh prctl v Fresh clap v Fresh serdejson v Fresh errorchain v Fresh oci v homeboratsrailcaroci Running rustc cratename railcar srcmainrs color always cratetype bin emitdepinfolink C debuginfo cfg featurenightly C metadata d de f e fd C extrafilename d de f e fd outdir homeboratsrailcartargetx unknownlinuxgnudebugdeps target x unknownlinuxgnu C incrementalhomeboratsrailcartargetx unknownlinuxgnudebugincremental L dependencyhomeboratsrailcartargetx unknownlinuxgnudebugdeps L dependencyhomeboratsrailcartargetdebugdeps extern capshomeboratsrailcartargetx unknownlinuxgnudebugdepslibcaps d d ebaebb rlib extern claphomeboratsrailcartargetx unknownlinuxgnudebugdepslibclapeb d d deb ea rlib extern errorchainhomeboratsrailcartargetx unknownlinuxgnudebugdepsliberrorchain dd db brlib extern lazystatichomeboratsrailcartargetx unknownlinuxgnudebugdepsliblazystaticf ceff b f crlib extern libchomeboratsrailcartargetx unknownlinuxgnudebugdepsliblibcec a f dac e rlib extern loghomeboratsrailcartargetx unknownlinuxgnudebugdepsliblogfd c fe rlib extern nixhomeboratsrailcartargetx unknownlinuxgnudebugdepslibnix c f ea ddfrlib extern numtraitshomeboratsrailcartargetx unknownlinuxgnudebugdepslibnumtraitsb b b crlib extern ocihomeboratsrailcartargetx unknownlinuxgnudebugdepsliboci f e cadrlib extern prctlhomeboratsrailcartargetx unknownlinuxgnudebugdepslibprctleff f cf ecrlib extern scopeguardhomeboratsrailcartargetx unknownlinuxgnudebugdepslibscopeguard df e erlib extern seccompsyshomeboratsrailcartargetx unknownlinuxgnudebugdepslibseccompsysc e f ba ce rlib L nativehomeboratsrailcartargetx unknownlinuxgnudebugbuildbacktracesys c b be cout error E cant find crate for allocsystem srcmainrs extern crate allocsystem cant find crate error aborting due to previous error For more information about this error try rustc explain E error Could not compile railcar Caused by process didnt exit successfully rustc cratename railcar srcmainrs color always cratetype bin emitdepinfolink C debuginfo cfg featurenightly C metadata d de f e fd C extrafilename d de f e fd outdir homeboratsrailcartargetx unknownlinuxgnudebugdeps target x unknownlinuxgnu C incrementalhomeboratsrailcartargetx unknownlinuxgnudebugincremental L dependencyhomeboratsrailcartargetx unknownlinuxgnudebugdeps L dependencyhomeboratsrailcartargetdebugdeps extern capshomeboratsrailcartargetx unknownlinuxgnudebugdepslibcaps d d ebaebb rlib extern claphomeboratsrailcartargetx unknownlinuxgnudebugdepslibclapeb d d deb ea rlib extern errorchainhomeboratsrailcartargetx unknownlinuxgnudebugdepsliberrorchain dd db brlib extern lazystatichomeboratsrailcartargetx unknownlinuxgnudebugdepsliblazystaticf ceff b f crlib extern libchomeboratsrailcartargetx unknownlinuxgnudebugdepsliblibcec a f dac e rlib extern loghomeboratsrailcartargetx unknownlinuxgnudebugdepsliblogfd c fe rlib extern nixhomeboratsrailcartargetx unknownlinuxgnudebugdepslibnix c f ea ddfrlib extern numtraitshomeboratsrailcartargetx unknownlinuxgnudebugdepslibnumtraitsb b b crlib extern ocihomeboratsrailcartargetx unknownlinuxgnudebugdepsliboci f e cadrlib extern prctlhomeboratsrailcartargetx unknownlinuxgnudebugdepslibprctleff f cf ecrlib extern scopeguardhomeboratsrailcartargetx unknownlinuxgnudebugdepslibscopeguard df e erlib extern seccompsyshomeboratsrailcartargetx unknownlinuxgnudebugdepslibseccompsysc e f ba ce rlib L nativehomeboratsrailcartargetx unknownlinuxgnudebugbuildbacktracesys c b be cout exit code cp cannot stat targetx unknownlinuxgnudebugrailcar No such file or directory Any chance you could provide an upto date README Thanks Superseeds changes from and recreated changes since I already signed the CLA Hey this PR updates the project to use the latest Rust edition Is railcar vulnerable to this exploit I tried using the dockerbased exploit but it requires the use of the railcar exec command which is not yet implemented Does that mean it is not possible to exploit it with railcar ref This PR adds a Cargolock file to the repository This is recommended behaviour according to the official Cargo documentation If you re building a library that other packages will depend on put Cargolock in your gitignore If you re building an executable like a commandline tool or an application check Cargolock into git This change also means the easy building of a NixOS package shell rootinfra docker run it runtimerailcar alpine docker Error response from daemon OCI runtime create failed unable to retrieve OCI runtime error open rundockercontainerddaemoniocontainerdruntimev linuxmoby ea e d adda ca ae b a a b a d eeddd a eb c logjson no such file or directory usrlocalbinrailcar did not terminate sucessfully error Found argument systemdcgroup which wasnt expected or isnt valid in this context USAGE railcar log log logformat logformat root r SUBCOMMAND For more information try help unknown Versions shell rootinfra railcar version Railcar rootinfra docker version Docker version ce build e fc a rootinfra uname r el x 