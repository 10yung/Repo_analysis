I have been working on to create a video collage with layer border but even the library works fine I can not apply any transformation or border layer Im creating a video editing app and I have functionality to add transitions and audios When adding transitions without added audios it renders fine with transitions and all Also when adding audios without added transitions it renders fine audio plays fine However if I add a transition and audio on the timeline only the audio plays and the video is only black Heres my code private func buildTracks var videoChannel TrackItem var audioChannel TrackItem for asset in assets let resource trackResourcefor asset let trackItem TrackItemresource resource trackItemvideoConfigurationcontentMode aspectFit switch assettransition case let transitionDuration CMTimeseconds preferredTimescale preferredTimeScale let transition CrossDissolveTransitionduration transitionDuration trackItemvideoTransition transition printCROSS DISSOLVE case let transitionDuration CMTimeseconds preferredTimescale preferredTimeScale let transition FadeTransitionduration transitionDuration trackItemvideoTransition transition printFADE BLACK case let transitionDuration CMTimeseconds preferredTimescale preferredTimeScale let transition FadeTransitionduration transitionDuration trackItemvideoTransition transition printFADE WHITE default trackItemvideoTransition nil printNONE if let asset asset as VVideoAsset trackItemaudioConfigurationvolume assetvolume videoChannelappendtrackItem audioChannelappendtrackItem let filterConfigurations videoEditfiltersmap FilterConfigurationfilter totalDuration totalDuration trackItemvideoConfigurationconfigurations filterConfigurations timelinevideoChannel videoChannel timelineaudioChannel audioChannel private func buildAudios AudioProvider var audios AudioProvider videoEditaudiosforEach audio in guard let audioURL audioaudioAssetmp Path else return let audioAsset AVAsseturl audioURL let resource AVAssetTrackResourceasset audioAsset let duration audioduration totalDuration resourceselectedTimeRange CMTimeRangeinitstart CMTimezero end CMTimeMakeWithSecondsduration preferredTimescale preferredTimeScale let audioTrackItem TrackItemresource resource audioTrackItemaudioConfigurationvolume audiovolume audioTrackItemstartTime CMTimeMakeWithSecondsaudiocomponentStart totalDuration preferredTimescale preferredTimeScale audiosappendaudioTrackItem return audios private func buildAddedComponents timelineaudios buildAudios timelineoverlays buildOverlays I want to build application add multi music to video I have a video track item and some audio track item I need to misc some audio track with different start time and video Ref I have referenced on page Example video video track audios audio track audio track audio track audio track Note available unavailable video video track audio track offsetTime audio track offsetTime offsetTime video s total result s s with lowtime s uptime s trimed s s s trimed lowtime up time convenience init AudioData selfoffsetTime offsetTime selflowTime lowTime lowTime let upValue maxupTime lowTime selfupTime upValue let durationValue upValue lowTime selfduration durationValue let startTime lowTime offsetTime selfstartTime startTime let distance mindurationValue videoDuration let available distance startTime selfavailable available My code Video track item let asset AVAsseturl url let resource AVAssetTrackResourceasset asset let lowTime CMTimeseconds videolowTime preferredTimescale default lowtime let durationTime CMTimeseconds videoduration preferredTimescale default videoduration total time of video resourceselectedTimeRange CMTimeRangestart CMTimezero duration durationTime let videoTrackItem TrackItemresource resource videoTrackItemstartTime lowTime videoTrackItemvideoConfigurationcontentMode aspectFill videoTrackItemaudioConfigurationvolume videovolume contextviewModeladdVideoTrackItemvideoTrackItem contextvideoViewplayerreplaceCurrentItemcontextviewModelplayerItem contexttimelineViewreloadwith contextviewModelvideoTrackItems A Audio track item let asset AVAsseturl url let resource AVAssetTrackResourceasset asset printlowtime audiolowTime default low time printupTime audioupTime printstartTime audiostartTime printavailable audioavailable printvideoDuration selfdurationTimeOfVideo let startTime CMTimeseconds audiostartTime preferredTimescale let availableTime CMTimeseconds audioavailable preferredTimescale resourceselectedTimeRange CMTimeRangestart CMTimezero duration availableTime let trackItem TrackItemresource resource trackItemstartTime startTime trackItemaudioConfigurationvolume audiovolume TimelineViewModel class TimelineManager static let current TimelineManager var timeline Timeline class TimelineViewModel MARK Vars privateset var audioTrackItems TrackItem privateset var videoTrackItems TrackItem privateset var renderSize CGSize CGSizezero privateset var lut String originallut privateset var playerItem AVPlayerItemasset AVComposition func buildTimeline Timeline let timeline TimelineManagercurrenttimeline reloadTimelinetimeline return timeline MARK AddReplace func addVideoTrackItem trackItem TrackItem videoTrackItemsappendtrackItem reloadPlayerItems func insertTrackItem trackItem TrackItem at index Int guard audioTrackItemscount index else return audioTrackItemsinserttrackItem at index reloadPlayerItems func updateTrackItem trackItem TrackItem at index Int guard audioTrackItemscount index else return audioTrackItems index trackItem reloadPlayerItems func removeTrackItem trackItem TrackItem guard let index audioTrackItemsindexof trackItem else return audioTrackItemsremoveat index reloadPlayerItems func removeTrackItemat index Int guard audioTrackItemscount index else return audioTrackItemsremoveat index reloadPlayerItems func removeAllAudioTrackItems audioTrackItemsremoveAll reloadPlayerItems func removeAll audioTrackItemsremoveAll videoTrackItemsremoveAll reloadPlayerItems func reloadPlayerItems let timeline TimelineManagercurrenttimeline timelinerenderSize renderSize reloadTimelinetimeline do try TimelinereloadVideoStartTimeproviders videoTrackItems catch assertfalse errorlocalizedDescription buildwith timeline fileprivate func buildwith timeline Timeline let compositionGenerator CompositionGeneratortimeline timeline let playerItem compositionGeneratorbuildPlayerItem selfplayerItem playerItem fileprivate func reloadTimeline timeline Timeline timelinevideoChannel videoTrackItems timelineaudios videoTrackItems audioTrackItems extension TrackItem func reloadTimelineDuration selfduration selfresourceselectedTimeRangeduration Errors When offsettime video video track audio track offsetTime audio track play incorrect starttime Basic example public class MyFilter VideoConfigurationProtocol var filter TestFilter public var setIntensity CGFloat public init public func applyEffectto sourceImage CIImage info VideoConfigurationEffectInfo CIImage var finalImage sourceImage filter TestFilter filterinputImage finalImage filterintensity setIntensity finalImage filteroutputImage return finalImage Then when appending this class into trackItemvideoConfigurationconfigurations would there be a preferred method to adjust the setIntensity variable with a UISlider CALayer CALayer CoreAnimation Lottie AE CALayer AVVideoCompositionCoreAnimationTool Lottie Jack WeChat Hi I find it support Pod install but it seem to not support carthage Carthage is a good project that can help us manage other framework if Cabbage can support cartahge I think it will be cool 