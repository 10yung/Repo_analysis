Paste multiple lines text Then text is pasted as other blocks I expected that text is pasted in same block And I think that it is more useful Example paste the following plain text data bboldb EditorJS displays bold Ill write more detail soon Ill write more detail soon I seem to have a problem when trying to use EditorJs even in a simple web page After installing EditorJs with npm I made two simple files an HTML file and a Javascript file Heres my indexhtml page html html head head body h Hello World h div ideditorjsdiv script srcindexjsscript body html Heres my indexjs file javascript import EditorJs from editorjseditorjs const editor new EditorJs I get the following error message on Firefox SyntaxError import declarations may only appear at top level of a module indexjs When importing the indexjs file as a module html script srcindexjs typemodulescript I get the following CrossOrigin Request Blocked The Same Origin Policy disallows reading the remote resource Reason CORS request not http Module source URI is not allowed in this document indexhtml Any ideas Thanks We wanted to use EditorJS with customElements we use lithtml internally Our reasons behind this is because we wanted to isolate the editor styles away from the main dom so that our CMS styles dont make the editor content look strange This way we can also customize the CSS nicely so that the end user looks at the formatting and text with about the same styles as they would on the frontend We previously used a Iframe for this which still works but we would like to avoid that if possible With the editor in the customElement we get errors like these editorjsshadowdom Here is the code that creates the customElement import editorjseditorjsdisteditorjs import LitElement html css from litelement class HTMLEngine constructorinputEl templateSelector editorConfig thisinputEl inputEl thiseditorConfig editorConfig read let doc new DOMParserparseFromStringthisinputElvalue texthtml var dataTemplate docquerySelector dataeditordata if dataTemplate var jsonData dataTemplatedataseteditorData return JSONparsejsonData return null writeoutputData var editorData JSONstringifyoutputData var renderedBlocks outputDatablocksforEachblock renderedBlocks thisrenderBlockblock thisinputElvalue template dataeditordataeditorDatatemplate renderedBlocks renderBlockblock return thiseditorConfigtools blocktype HTMLGeneratorblockdata n class OstinatoEditorWidget extends LitElement static get properties return saveTo type String editorConfig type String editorFramePath type String constructor super thissaveTo thiseditorConfig thiseditorFramePath connectedCallback superconnectedCallback thissaveToEl documentquerySelectorthissaveTo Now import our editor config importthiseditorConfigthenm thisconfig meditorConfig thisengine new HTMLEngine thissaveToEl editorjsdata thisconfig thisinitEditor initEditor thisconfigdata thisengineread thisconfigholder thisshadowRootgetElementByIdeditor thisconfigonChange function thiseditorsavethenoutputData if outputData thisenginewriteoutputData bindthis consolelogthisconfig thiseditor new EditorJSthisconfig static get styles return css host display block width editor width boxshadow px px e e e render return html div ideditordiv customElementsdefineostinatoeditorwidget OstinatoEditorWidget And this is how we are using the element load staticfiles textarea name widgetname include djangoformswidgetsattrshtml styledisplay none if widgetvalue widgetvalue endif textarea ostinatoeditorwidget saveTo name widgetname editorConfig configmodule ostinatoeditorwidget Edit Oh and here is the config that is used export const editorConfig initialBlock paragraph minHeight px autoFocus true tools header class Header config placeholder Header Text shortcut CMDSHIFTH HTMLGenerator data hdataleveldatatexthdatalevel paragraph class Paragraph shortcut CMDSHIFTP HTMLGenerator data pdatatextp list class List inlineToolbar true shortcut CMDSHIFTL HTMLGenerator data let tagname datastylecharAt l var renderItem item return liitemli var items dataitemsforEachitem items renderItemitem return tagnameitemstagname quote class Quote inlineToolbar true config quotePlaceholder Enter a quote captionPlaceholder Caption or Author shortcut CMDSHIFTO HTMLGenerator data return blockquote stylequotedataalignment p classquotetextdatatextp p classquotecaptiondatacaptionp blockquote warning class Warning inlineToolbar true shortcut CMDSHIFTW config titlePlaceholder Warning Title messagePlaceholder Warning Message HTMLGenerator data return div classwarning p classwarningtitledatatitlep p classwarningmessagedatamessagep div marker class Marker shortcut CMDSHIFTM code class CodeTool shortcut CMDSHIFTC HTMLGenerator data return codedatacodecode delimiter class Delimiter HTMLGenerator return div classcedelimiterdiv inlineCode class InlineCode shortcut CMDSHIFTC table class Table inlineToolbar true shortcut CMDALTT HTMLGenerator data var rows datacontentforEachrow var cells rowforEachcell cells td cell td rows tr cells tr return table rows table Some small changes to use more standardised grammar Related Issue resolves which describes an example usecase for this feature in more details How to test sh cd exampletoolsheader code srcindexjs add the following code at the bottom near line js movedevent consolelog I WAS MOVED event and run yarn build Finally open the example page with open exampleexampledevhtml and swap the header tool Notes This is my very first contribution to and I need to get used to your plans about lifecycles and callbacks So please be gentle Additionally it might be helpful when theres a How to develop section in the README After checking the packagejsons scripts section I had an idea how to start though Example Screen Capture on at Hi there In editorjs when click on a block it will show a gray background How can we disable this background color changing Thanks