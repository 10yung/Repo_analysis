 key test template test input templateOptions label test WARNING sanitizing HTML stripped some content see this causes that input not being rendered It would be great if formly would support observables on the hooks onInit afterViewInit and afterContentInit If an observable is returned from one of the hooks Formly would automatically subscribe to that observable until the field is destroyed This would free users from subscribing to the observable and handling the onDestroyhook themselves Example usage js fields hooks Patch value of some other form control every time this value changes subscription and unsubscribe is handled by formly onInit field fieldformControlvalueChangespipe tapvalue fieldformpatchValuesomeOtherField value Question Hi Im building the fields from server side and send it to client side to display by using ngxformly In my form I registered some custom types The point is because the custom types names are generated on server in some cases when it returns the wrong name there could be an issue There is no type by the name of customfield in displaying form I would like to display this error as a row in the form instead of having consolelog error as usual Or better if I could replace the error field by some default field Is it possible with ngxformly Here is the code example Is your feature request related to a problem Please describe Im trying to use the step attribute to restrict a number input to only decimals So would be valid would be invalid My ngxformly example can be seen here Somehow the number is not recognized as invalid The invalid input is also part of the submit But if I copy the very same input element in this fiddle it is recognized as invalid Describe the solution youd like Error message when user input is invalid ie if user types if step see JSFiddle above Describe alternatives youve considered I currently use pattern validation instead Expression validation should be possible too Additional context Probably not browser dependent Tried the following Firefox Bit Chrome Bit Internet Explorer I want to get notified whenever the structure of the form changes Use case The form is not initialized at the start but only after user clicks a button I want to subscribe to changes validity and value of a specific control thisformcontrolsmyControlvalueChanges This will fail if I do this too early because myControl will only exist after the formly form initialized itself So far I have not found a good solution to get noticed when formly changed the structure of the form I therefore propose a new Output binding formChange Proposal export class FormlyForm implements Output formChange new EventEmitterFormGroup FormArray ngOnChangessimpleChanges SimpleChanges existing implemtation new if changesfields changesform thisformChangenextthisform Do you enjoy using formly if yes please give it a star Is your feature request related to a problem Please describe Trying to create a ConditionExpression builder using Formly is extremely painful due to the requirement to manually do recursion and pollution of the model Describe the solution youd like I want to be able to do recursion within FieldGroups without having to manually recreate FieldGroups and pollute the model Describe alternatives youve considered Ive created my form so far and Im manually having to clean it up afterwards and its limited to an amount of recursion that I specify Additional context IF YOU DONT FILL OUT THE FOLLOWING INFORMATION WE MIGHT CLOSE YOUR ISSUE WITHOUT INVESTIGATING Im submitting a check one with x x bug report search github for a similar issue or PR before submitting feature request support request Current behavior legend FORM the controller where is declared the form CUSTOMINPUT the custom input created with ngxform COMPONENT the component declared in the template of CUSTOMINPUT I created a custom type input in ngxformly the template of this custom input is COMPONENT that bind out a value with formControl COMPONENT implements ControlValueAccessor COMPONENT is formed by select box When value of COMPONENT is bind to CUSTOMINPUT i try to bind it with thisformControlsetValuemyValue to FORM The problem is that change method of templateOptions of CUSTOMINPUT it not trigger I try also to pass formlyAttributes to COMPONENT and i see that if i set formlyAttributes to my select box of COMPONENT the method change in FORM is triggered but is triggered every time that i change value of one of the selectbox of COMPONENT Expected behavior I expected that the change event is triggered when formControlsetValueMyValue is called inside CUSTOMINPUT Minimal reproduction of the problem with instructions This is a use case found on google that is exactly the same of my problem Just add change field FormlyFieldConfig event any debugger in templateOptions of fields FormlyFieldConfig key state in appcomponentts file What is the motivation use case for changing the behavior I expected to can create custom ngxform input that use custom input component like template In this case with select i cant use formlyAttributes for the problem of triggering that i said before Please tell us about your environment Ubuntu Visual Studio Code npm Angular version Browser Chromium Language TypeScript Node for AoT issues node version I have hiddenexpression which shows based on the other fields When on condition hidden the values are not cleared Like when the field is hidden we should clear the input value also Current behavior Values are not removed Expected behavior Values are remain I have provided the stackblitz example in the below link steps click option radio now you should see line enter some value in line now click option radio line will be hidden now again click option radio you will see the value there it will not be cleared This is a fairly simple change which allows for custominline to be added as an option to the checkbox radio and multicheckbox fields for bootstrap See Im submitting a check one with x bug report search github for a similar issue or PR before submitting x feature request x support request Current behavior There is not a predefined way to pass in parameters to the validators other then using templateOptions or some other field I tried a custom property on the validators object but it is interpreted as validator on itself Expected behavior There should be a way to pass parameters to a validator in a logical way Minimal reproduction of the problem with instructions What is the motivation use case for changing the behavior I want to do validation on dates for future andor past validation Please tell us about your environment Angular version X x Browser all Chrome XX Firefox XX IE XX Safari XX Mobile Chrome XX Android XX Web Browser iOS XX Safari iOS XX UIWebView iOS XX WKWebView all Language all TypeScript XX ES ES Typescript