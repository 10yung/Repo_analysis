Bumps lodashtemplate from to details summaryCommitssummary ab Bump to v a f d c Rebuild lodash and docs cca ac Fix npmtest by removing the call to testdocs f f fc Adjust heading order ci skip e fb Remove unused baseArity f e Specify utf encoding b f Add fp tests for iteratee shorthands b dc Ensure clone methods clone expando properties of boolean number string ob d a Make string tests more consistent d dc e Add invertBy tests Additional commits viewable in compare view details br Dependabot compatibility score Dependabot will resolve any conflicts with this PR as long as you dont alter it yourself You can also trigger a rebase manually by commenting dependabot rebase dependabotautomergestart dependabotautomergeend details summaryDependabot commands and optionssummary br You can trigger Dependabot actions by commenting on this PR dependabot rebase will rebase this PR dependabot recreate will recreate this PR overwriting any edits that have been made to it dependabot merge will merge this PR after your CI passes on it dependabot squash and merge will squash and merge this PR after your CI passes on it dependabot cancel merge will cancel a previously requested merge and block automerging dependabot reopen will reopen this PR if it is closed dependabot ignore this patchminormajor version will close this PR and stop Dependabot creating any more for this minormajor version unless you reopen the PR or upgrade to it yourself dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency unless you reopen the PR or upgrade to it yourself dependabot use these labels will set the current labels as the default for future PRs for this repo and language dependabot use these reviewers will set the current reviewers as the default for future PRs for this repo and language dependabot use these assignees will set the current assignees as the default for future PRs for this repo and language dependabot use this milestone will set the current milestone as the default for future PRs for this repo and language You can disable automated security fix PRs for this repo from the Security Alerts page details To give a brief intro the relationships between models used here are Classification has many Standards and Standard has many Sections I wanted to use a single rabl file for selecting all sections as well as for selecting a single section Here section nil indicates that we are selecting all sections I tried something like this collection classifications root classifications objectroot false node do classification partialfeedsharedaddressablebasicinfo object classification end node standards do classification standard sectionstandard if section nil classificationfindstandardsbystandardmap do standard partialfeedsharedaddressablebasicinfo object standard nodesections do standardfindsectionsbysectionmap do section partialfeedsharedaddressablebasicinfo object section nodeaudiencetype student end end end end and it gave me an output like classifications addressabletypeClassification addressableid audiencenameclassification name audiencetypestudent standards namenil options blockProc x e fd c eval nameaudiencetype options blockProc x e fd be eval namestandards options blockProc x e fd b eval nameaudiencetype options blockProc x e ff a eval namesections options blockProc x e ff d eval nameaudiencetype options blockProc x e eval nameaudiencetype options blockProc x e eval sections namenil options blockProc x e fd c eval But this works well with a single map When I use each in place of map it prints out the looped object as such and it does not care about node or partials present within The output while using each is something like classifications addressabletypeClassification addressableid audiencenameclassification name audiencetypestudent standards Standard x a e sections Section x a edcb Section x a ed I might be completely wrong with the usage of map Is my approach wrong here If so how can I go about this Hi Im struggling with some issue and not sure how to get out of it Here is my labelsindexrabl collection labels attribute id name When I do next renderer RablRenderernewlabelsindex Labellimit format json viewpath appviewsapiprov render name Label which is totally wrong as it should display collection as an array of hashes with proper id name Im not sure why it does like this So Im using rails rabl Wdyt I have different rabl templates and their actual outputs are provided below File testrabl ruby object false child testobjects testobjects do attribute objectid end nodefalse do nodetotal nodepages nodepageno end This works as expected ruby puts RablRenderernewtest nil format json locals testobjects OpenStructnew render testobjects testobjectobjectid total pages pageno With testobjects as empty array puts RablRenderernewtest nil format json locals testobjects render testobjects total pages pageno File test rabl ruby object false child testobjects root testobjects objectroot false do attribute objectid end nodefalse do nodetotal nodepages nodepageno end The issue occurs when testobjects is an empty array nd case The testobjects attribute doesnt make it to the final response ruby puts RablRenderernewtest nil format json locals testobjects OpenStructnew render testobjects objectid total pages pageno With testobjects as empty array puts RablRenderernewtest nil format json locals testobjects render total pages pageno The only work around hack that seems to work is if we change the definition of child block to something like this ruby childtestobjects testobjects root testobjects objectroot false do In case this is accepted as a bug the line that causes this behavior is here When first argument is hash with empty array as the value the datapresent wont fail This behavior is different obviously as it fails when empty array is passed as first argument I found that this check was introduced around years back and I am not sure if it should be removed or not so filing issue to discuss a better way to handle this scenario Having the following setup in an older app running on ruby and rails ruby indexjsonrabl node foo do partialfooslist object foos end ruby listjsonrabl collection foos root false objectroot false extendsfoosshow ruby showjsonrabl object foo nil attributes id name ruby fooscontrollerrb def index foos Fooall render foosindex end With Rabl this renders properly json foos id name foo one id name foo two Upgrading to it just renders nothing no error raised json foos I am not very familiar with Rabl to be honest are the views here just basically wrong and working by chance in this setup or did we find a breaking change that slipped in a minor version bump I am trying to get the rendered result in Rails console Rablrenderpost apiv postsshow viewpath appviews format xml But it fails due to this issue NameError undefined local variable or method request for RablEngine x I cant figure out what this means Please help me to fix it so that I can get the result We are migrating to Ruby on Rails and upgrading to rabl Everything looks good except this one request that is returning a stringyfied object instead of a view JSONParserError unexpected token at ReferenceNumberActiveRecordRelation x fda fedd We are using grape and graperabl and the request looks like so desc Deletes a reference ID params do requires deviceid type String desc Device Identifier requires cardnumber type String desc Card number requires referencenumber type String desc Reference ID end delete referencenumbers rabl devicescardholderreferencenumbers httpcodes business errors Unauthorized Forbidden trying to access resource that is not authorized for this merchant do business logic referencenumbers ReferenceNumberbycardnumberparams cardnumber byparticipatingbusinessesdeviceparticipatingbusiness end The rabl view file looks like this nodereferencenumbers do referencenumbersmap do referencenumber number referencenumbernumber business referencenumberparticipatingbusinessname end end Where referencenumbers is equal to an empty ActiveRecordRelation the view returns that object Whenever referencenumbers has results then everything works properly Might not be understanding the changes between Rabl and if anyone understands whats going on or has any suggestions please let me know EDIT Ive tried testing very similar requests and to no avail cannot reproduce this issue Then I tried commenting out the referencenumbers line and the rabl file is rendered Strange since if it were that line then youd expect the same kind of issue throughout where this line appears but this is not the case I have the following hash in my controller ruby order id somestringid userid someotherstringid amount metadata type shippingdata address line of address line of address city state pincode type payment stripecustomerid somestringid stripecardid someotherstringid type contact email someoneexamplecom phone the metadata is a list of objects There can be or more metadata objects each metadata object has a different structure the only common key for all metadata objects is the type key Note I have simplified the hash to make this question easier to write out I want to be able to render this hash to json using rabl but cannot figure out how The json that I want to render should be as below json id somestringid userid someotherstringid amount metadata type shippingdata address line of address line of address city state pincode type payment stripecustomerid somestringid stripecardid someotherstringid type contact email someoneexamplecom phone I have the following in my controller ruby somedata key hello key world key bye key world key greetings key universe and the following in my template ruby collection somedata attributes key key From what I understand this should give me the following json js key hello key world key bye key world key greetings key universe but what I do get in the json is js Quick question for anyone out there the latest version on Rubygems is from October Theres been a lot of work done in the master branch since then Should we be using the master branch or stick with that old version