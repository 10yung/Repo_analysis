The previous settings have annoyed people as indicated by Lets try to find a more balanced sensible approach Greatly inspired by junarugas change in another project In fact I copied the staleyml file from that project verbatim seenoevil Can we get a project status update Essentially all issues that I can see that have been raised since have been marked stale and closed by the stalebot very soon afterwards without comment from project owners Im not saying all issues have to be worked on this is open source and we can contribute but are there active maintainers that can comment on issues and indicate that a PR would be well received Even then valid PRs are being ignored and closed by the stalebot At the very least can we disable the stalebot Your checklist for this pull request Please review the guidelines for contributing CONTRIBUTINGmd to this repository X Ensure all commits include DCO signoff X Ensure that your contributions pass unit testing X Ensure that your contributions contain documentation if applicable Description Removed blank char change after method name to fix this warning UsersUSERrvmgemsruby rc ruby norailsgemsgit libgitbranchrb warning parentheses after method name is interpreted as an argument list not a decomposed argument Subject of the issue using ruby git like this require git puts Gitopendescribenil longtrue tagstrue dirtytrue alwaystrue output v g ae but running git directly produces the correct result git describe long tags dirty always output v g aedirty Your environment git version rubygit ruby p revision x darwin Steps to reproduce Generate a dirty repo add a tag add a commit change a file now you have a dirty repo run require git puts Gitopendescribenil longtrue tagstrue dirtytrue alwaystrue Expected behaviour there should be a dirty in the output string at the end Actual behaviour the dirty flag is not in the output Subject Implementation of the git cherry is missing A closed PR implementing this command was closed it was close by stale bot Environment version of rubygit version of ruby version of git operating system Fedora Expected behaviour master branch includes the following commits ABC where A is root and C is HEAD feature branch is created from master and includes two newly added commits masterDE where E is the HEAD of the feature branch Command cherrymaster feature should return the two newly added commits DE For further details please see Actual behaviour Not supported yet in the latest release In git commit add n noverify This option bypasses the precommit and commitmsg hooks See also githooks Your checklist for this pull request Please review the guidelines for contributing CONTRIBUTINGmd to this repository x Ensure all commits include DCO signoff x Ensure that your contributions pass unit testing x Ensure that your contributions contain documentation if applicable Description Add option to bypasses the precommit and commitmsg hooks Signedoffby Rick Pocklington rickpocklingtonbluemedoracom Your checklist for this pull request Please review the guidelines for contributing CONTRIBUTINGmd to this repository x Ensure all commits include DCO signoff X Ensure that your contributions pass unit testing X Ensure that your contributions contain documentation if applicable Description Allows Gitopen to work on submodules Resolves Subject of the issue I was attempting to use rubygit in fastlane which runs with the working directory under repo rootfastlane When attempting the following code I get all the files require git git Gitopen p Untracked gitstatusuntrackedeach s p stos if s untracked If I run that some code in my repo root except with git Gitopen I get the expected results which is just the files that are untracked Your environment git version ruby p revision x darwin Steps to reproduce Tell us how to reproduce this issue Expected behaviour I expected my program to exhibit the same results no matter where it is run provided that Gitopen is passed the proper path to the repository root Actual behaviour See above Your checklist for this pull request Please review the guidelines for contributing CONTRIBUTINGmd to this repository x Ensure all commits include DCO signoff x Ensure that your contributions pass unit testing x Ensure that your contributions contain documentation if applicable Description Fixes This PR adds a new gitsslnoverify configuration option like so ruby Gitconfigure do config configgitsslnoverify true end This option sets ENV GITSSLNOVERIFY to true via GitLibsetcustomgitenvvariables when GitBaseconfiggitsslnoverify is truthy It allows users to clone git repos over HTTPS without verifying SSL This can sometimes ease friction in corporate environments with custom CAs for example Currently the symbolized key is checked for presence and then the value for the nonsymbolized one is used This works for Hashes with indifferent access like in rails etc but fails for a simple example like ruby GitopendescribeHEAD abbrev GitGitExecuteError git gitdirfoldertorepogit worktreefoldertorepo describe abbrev HEAD error option abbrev expects a numerical value Changed all references to the symbolized version since the method signature suggests param SymbolObject Your checklist for this pull request Please review the guidelines for contributing CONTRIBUTINGmd to this repository x Ensure all commits include DCO signoff x Ensure that your contributions pass unit testing x Ensure that your contributions contain documentation if applicable Description Please describe your pull request 