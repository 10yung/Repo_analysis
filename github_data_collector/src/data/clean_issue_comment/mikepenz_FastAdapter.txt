 About this issue Im using FastAdapter with PagedModelAdapter to display a large list of books Repro steps Initialize a PagedList on a library with books using PagedListConfigBuilder and enablePlaceholders true initialLoadSizeHint pageSize View the first items on a RecyclerView Call selectExtensiongetSelectedItems Expected behaviour The selected items are returned the DAO is never called Only the first items are loaded in the PagedList the others still are placeholders Actual behaviour As soon as selectExtensiongetSelectedItems is called the DAO loads books to and to All items are loaded in the PagedList no placeholder is left even though the RecyclerView has never gone beyond position Note Loading all placeholders has both a performance impact and super weird side effects on my app If the current behaviour works as designed could you at least add an option to avoid loading placeholders when collecting selected items Thanks a bunch Details x Used library version v x Used support library version v AndroidX x Used gradle build tools version v x Used tooling Android Studio version AS v x Other used libraries potential conflicting libraries None that I know of Checklist x Searched for similar issues x Checked out the sample application x Read the README x Checked out the CHANGELOG x Checked out the MIGRATION GUIDE WIP At the moment you must specify a drawable on the SimpleSwipeCallback for swipe to be enabled I have changed this so if either a background colour or a leavebehind drawable is set swipe is enabled Not an issue but just wanted to post this to help with others using data binding If it proves to be useful it could also be added as another submodule The general contents are here but the idea is that with data binding we can get the view ids from the layout id and we no longer need to make a custom ViewHolder This also avoids the need for non generic adapters ViewHolders however are useful for cases like event hooks where we need to distinguish between the types This binding pattern uses a companion object to keep track of that layout res instead Usage example kt class PlaceholderVhBindingStringRes override val data Int BindingItemViewPlaceholderBindingdata BindingLayoutViewPlaceholderBinding by Companion override fun ViewPlaceholderBindingbindViewholder ViewHolder payloads MutableListAny placeholderTextsetTextdata override fun ViewPlaceholderBindingunbindViewholder ViewHolder placeholderTexttext null companion object BindingLayoutViewPlaceholderBinding override val layoutRes Int get Rlayoutviewplaceholder Binding and unbinding signatures extend the data binding so view access is easy and the model can be accessed from data So long as it is a data class equality and hash are also defined so diffs work out of the box Id type defaults to layout res though that is a person design decision Should payloads really be mutable Should an item ever modify the payload or should it actually be read only About this issue Briefly describe the issue As stated here and here the recycler views internal list needs to be updated on the main thread as otherwise there may be inconsistencies The current implementation of FastAdapterDiffUtil has separate calculateDiff and set functions which is great for doing the diff calculation on a background thread The issue is that calculateDiff also updates the adapter internal list which also happens on a background thread if thats where the diff is calculated It is however mandatory to call the set part on the main thread as otherwise android complains that anything other than the main thread is touching its views For that reasonFastAdapterDiffUtil needs to always perform the adapterItem update on the main thread How can the issue be reproduced sample code Any similar implementation like that calculateDiff on background thread set on main thread will at some point crash It sometimes takes a while but it happens every time In that particular sample there are queue updates twice a second meaning is happens pretty quickly Details rc Used library version usage java mRecyclerViewaddOnItemTouchListenernew DragSelectionItemTouchListenerthis new OnItemInteractionListener Override public void onLongItemClickedRecyclerView recyclerView ViewHolder mViewHolderTouched int position Override public void onItemClickedRecyclerView recyclerView ViewHolder mViewHolderTouched int position Override public void onViewHolderHoveredRecyclerView rv ViewHolder viewHolder Override public void onMultipleViewHoldersSelectedRecyclerView rv ListViewHolder selection Todo Integrate into fastadapter add Item parameter to DragSelectionItemTouchListener interface methods