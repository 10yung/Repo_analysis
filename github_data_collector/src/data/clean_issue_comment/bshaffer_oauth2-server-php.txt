 In my application Im using this configuration config useopenidconnect true issuer mydomaincom requireexactredirecturi false enforcestate false allowimplicit true alwaysissuenewrefreshtoken true As a first step I request and receive an authorizationcode at the authentication endpoint with responsetypecode scopeopenid email address Then I call the token endpoint using the authenticationcode retrieved from the authentication endpoint As required by the documentation at the idtoken is included in the response however the user claims are missing Debugging learns the getUserClaims method in my custom storage class is never called neither by the authentication endpoint idtoken in my database also has no user claims nor by the token endpoint Does anybody have a clue why the user claims are missing Or can anybody clarify if the user claims should be put into the storage by the authentication endpoint or should be added afterwards in the token endpoint Is there a way to enforce TLS Our cloud site got automatically upgraded to TLS and the SSO is not working Looking into the code i couldnt figure out how to forcefully accept TLS Is it missing wellknownopenidconfiguration endpoint that is required by openid client Or I dont know how to get this endpoint Can somebody please help me about it There is a lot of focus on not using weakly encrypted passwords adding an optional salt to protected checkPassworduser password salt and protected function hashPasswordpassword salt would allow for more flexibility in the implementation Hi Trying to give an answer to This is a minimal and compatible implementation see the presentation here You will find there a test application I hope a few will test and comment Regards Bertrand Degoy When passing invalid client credentials either clientid or clientsecret when requesting an access token instead of returning a response code it should be returning a response code for unauthorized Limited it to the case where all conditions publicnon public etc are passed and its only about the credentials TokenControllerTest modified accordingly We want use the library to facilitate sso Currently we have logged in users that we wish to authenticateauthorize for external resources The problem is getting the userid into the process In test the userid was just hardcoded into the authorizephp script Like this userid bd ad b d c ab a d A value on your server that identifies the user serverhandleAuthorizeRequestrequest response isauthorized userid What is the proper way to do this in production Thanks Here is the code in the AuthorizeControllerInterface php we are most interested in specifically userid thissomehowDetermineUserId This controller is called when a user should be authorized by an authorization server As OAuth does not handle authorization directly this controller ensures the request is valid but requires the application to determine the value of isauthorized code userid thissomehowDetermineUserId isauthorized thissomehowDetermineUserAuthorization response new OAuth Response authorizeControllerhandleAuthorizeRequest OAuth RequestcreateFromGlobals response isauthorized userid responsesend endcode Hi Is it possible to renew access token using refresh token But without using client ID curl u clientidclientpassword d granttyperefreshtoken refreshtokend d da cdbcbe eff f faf cb f db Hi An authorization code is not being store in oauthauthorizationcodes table in db while I am getting authorization code in response object In authorizephp page when I comment the line responsesend then authorization code is storing in database Am I missing something here Below is my authorization testing URL 