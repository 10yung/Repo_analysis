Altupaltdown arrow moves the current line up or down respectively or multiple lines updown when multiple lines are selected I have them remapped to altk and altj but it shouldnt matter The problem is when I am in visual line mode select multiple lines and press altj or k then escape to get out of visual line mode the cursor returns to the position where it was before I pressed altj or k In vim you can do dword to delete backwards in a file until word is found VSCode Vim doesnt seem to support it Running latest version of VS Code and the plugin When I add a second view into a file often helps improve workflow bc I can have functions and classes folded on one side but not the other the second one does not work Pressing j k h and l do not move the cursor and i does not enter insert mode Describe the bug Suppose we have hack foo bar cursor is here When I press w I expect my cursor to go to hack foo bar Instead it goes to hack foo bar In my settingjson I have the following override for Hack read PHP json hack editorwordSeparators Note the absence of So it seems that vimIskeyword doesnt respect language overrides for editorwordSeparators A workaround could be to set the global editorwordSeparators or vimIskeyword but neither is ideal since I work in other languages as well where should be included To Reproduce Steps to reproduce the behavior Open a PHPHack file Edit the language specific settings for PHPHack to exclude in editorwordSeparators Move cursor to the beginning of a variable Press w to move cursor past the variable Expected behavior Cursor moves past variable Environment please complete the following information Ensure you are on the latest VSCode VSCodeVim You can use Report Issue by running Developers Show Running Extensions from the Command Pallette to prefill these Extension VsCodeVim version VSCode version OS Mac OS Describe the bug Search and replace when using capturing groups does not work To Reproduce Text in file Hello World Search and replace command sHello World Results No regex match Expected behavior In vim with the text Hello World the search and replace command sHello World yields the resulting text of World Environment Extension version VS Code version Code a de ead f a d f d c T Z OS version Linux x generic Describe the bug Save with w when some text has been highlighted in visual mode causes an error CommandLine Error executing cmdw errError Not implemented To Reproduce Steps to reproduce the behavior Select some text with visual mode Press w Expected behavior File should be saved normally Environment please complete the following information Ensure you are on the latest VSCode VSCodeVim You can use Report Issue by running Developers Show Running Extensions from the Command Pallette to prefill these Extension Version OS Version Darwin x VSCode version Additional context Add any other context about the problem here Describe the bug When the BetterFountain extension is loaded when VSCode starts the Vim extension no longer works at all Im not sure if this is a bug on Vim or BetterFountain and have submitted it to both The issue on BetterFountain is To Reproduce Steps to reproduce the behavior Start vscode with BetterFountain and Vim enabled Open a fountain file Push esc i abc iabc is added to the document Expected behavior Vim would go into command mode then insert mode and then abc would be added to the document Environment please complete the following information Extension VsCodeVim version VSCode version OS Win Pro bit build Additional context If BetterFountain is disabled then as required you reload Vscode and then Enable BetterFountain the Vim functionality works as well as the BetterFountain functionality Adds note recommending disabling htmlmirrorCursorOnMatchingTag in README to avoid errors and unexpected behaviors Yay Thanks for sending us a PR Please ensure your PR adheres to Commit messages has a short issue references when necessary Each commit does a logical chunk of work It builds and tests pass eg gulp What this PR does why we need it The new VSCode htmlmirrorCursorOnMatchingTag default setting is incompatible with Vim UX Since this is a default setting it would be helpful in the setup instructions Which issues this PR fixes Commits in fixes issue number fixes issuenumber format will close the issues when PR gets merged Describe the bug TaskQueue Error running task Failed to handle keyEsc To Reproduce Steps to reproduce the behavior Press v j j select text Click on CMD x cut the text Press ESC See error Expected behavior Switch VISUAL mode to NORMAL mode Environment please complete the following information Issue Type Bug Extension Name vim Extension Version OS Version Darwin x VSCode version Extension VsCodeVim version VSCode version OS Is your feature request related to a problem Please describe In real vim by default the command w saves the document without applying any languagespecific formatting rules to the active buffer However in VSCodeVim w performs the default Save action ie cmds which formats the document before saving it Describe the solution youd like VSCode offers a separate action in the command palette called File Save without formatting which will save your file asis Its my opinion that w should invoke that save method Describe alternatives youve considered So that behavior doesnt change for existing users perhaps a separate command could be introduced that invokes the File Save without formatting command for instance wwo ie write without Additional context Ive been working with a team on a Javascript project where all other developers are using Sublime or Atom VSCode has an expansive set of formatting rules that are applied on a regular file save It ends up converting things like functionfoo into function foo These changes are extremely unimportant to me and to my team However I end up saving my work out of habit with w subtle changes get made that add a ton of bloat to my pull requests which are a hassle to unwind individually with git add patch 