 With react componentWillReceiveProps has been deprecated Due to the large range of supported react versions with reactplaceholder a fix for this will require a major version change The current uses could be moved to UNSAFEcomponentWillReceiveProps but Im not sure if that is available as far back as react Is it time for a version that requires react and is built with hooks Ive all my dependencies updated to the latest versions reactplaceholder typescript tslint and only since the last npm i I ran I get this error on all the jsx instances of ReactPlaceholder alias class ReactPlaceholder import ReactPlaceholder Type children Element type text rows number ready boolean showLoadingAnimation true className any is missing the following properties from type PickPickReadonlyCommonProps type rect text media textRow round rows number color string showLoadingAnimation boolean customPlaceholder undefined Readonly Readonly Readonly children more customPlaceholder Pick Pick style firstLaunchOnly customPlaceholder ts an example of one of my components its like ReactPlaceholder typetext rows readyready showLoadingAnimation classNamestyleslabelFieldPlaceholder div classNameclassNamesstyleslabelField className Test div ReactPlaceholder this TS error is a blocker eg Jest would break Ive encountered a bug with the delay prop which would result in the placeholder showing indefinitely with ready true in props but ready false in state I believe the events which lead to this are when delay is set to n milliseconds all of the following happen before n milliseconds is up ready prop is set to false a timeout to set ready state is set and the ID stored in thistimeout Some detail in propschildren is changed cause componentWillReceiveProps to be called again this causes another timeout to set ready state to be created and the ID stored in thistimeout is overwritten ready prop is set to true which sets state to ready true and which also deletes the timeout set in step but crucially not the timeout set in step The timeout set in step fires setting state incorrectly back to ready false The pull request is one approach among many to fix this You could also clear any existing timeout in thistimeout before setting a new one or change the render method to javascript return thispropsready thisstateready thispropschildren thisgetFiller Thanks For my use case I am using this awesome component for purposes that dont relate to content loading I am using this component in a small example project I just have the component sitting there It works perfectly well and does what I want But I get console errors because Im not passing children or the ready prop What does the author think of the above props being made optional I want the textRow style with with multiple rows Why cant this be done I dont see it in the documentation but there should be a feature to do this ReactPlaceholder typetextRow rows readyfalse MyComponent ReactPlaceholder At the moment React Placeholder provides only a css file for the styles Currently import includes are nonstandard for Sass and theyll be removed I think theres the need to have the styles even in a scss file directly in the package Hello how can I have multiple placeholder to point out the list view the way I achieved this screenjs isLoading Array mapo i LoadingComponent keyi List and in LoadingComponent actual code is more complicated div stylestyleswrapper ReactPlaceholder typerect showLoadingAnimation ReactPlaceholder typetext showLoadingAnimation div the problem here is I wanted to have an animation so I used ReactPlaceholder instead of RectShape or TextBlock so I encounter warning The prop ready is marked as required in ReactPlaceholder and The prop children is marked as required in ReactPlaceholder It would be great if you could think of adding some placeholder for charts For example at least something like text placeholder but oriented vertically like bar chart or something like this The opposite from delay to keep the placeholder for some milliseconds even after the content is ready See 