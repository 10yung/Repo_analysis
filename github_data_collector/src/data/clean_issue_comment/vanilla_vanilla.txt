None Closes This updates the POST PATCH themes endpoints so that assets can be passed as an array or string This lines up with the GET response required for related to I created a new site which used Keystone When I visited it for the first time the title text which usually shows the site name was not displayed Upon investigation by igraziatto it seems that the title font color is the same as the background so it is effectively hidden See attached screenshot Screen Shot at AM Closes See the linked issue for details You can view the edit history of individual discussions or comments by clicking on a link on each individual discussioncomment This is how most every application works that shows edit histories Seeing the edit history of an individual post ordered by date is much easier for a moderator to read and understand the context of what a user was doing From a discussion moderators will gave a link to view all deleted comments from that discussion This will go to the log showing the deleted comments which would include the last text from each comment In the case that the comments were deleted for offensive or abusive text then this view in and of itself will be useful for moderators A site should have a hamburger menu to fit all of the menu items we need on our complex app Acceptance Criteria Our configured menu should show up in the hamburger menu There should be another configuration for the customers main menu items or global navigation A pages side panel navigation will also go in the hamburger menu Some footer style links such as TOS may go in the hamburger menu Relates to Description utilityupdate throws an error when you are not posting back to it if the site is in debug mode Error Variable Success does not exist Cause UtilityControllerupdateWithToken only define Success on postback This will close We have some logic issues when it comes to determining if a user has actually read all the most recent comments in a discussion The problem happens when users delete comments We update the Discussion tables Number of Comments in the Discussion but we do not and cannot for scaling reasons update the UserDiscussion table So if I have read Comments in a Discussion and then some users delete Comments we will compare the number of Comments I have read with the number of Comments available to be read we see that I have read comments and there are available Now as more users add comments it still looks like I have read them all This PR will Extract the logic for determining if a user really has read all the comments into a few simple testable methods When it finds that there is a discrepancy it will update the UserDiscussion record Create automated tests to make sure it continues to work Testing Create a fresh discussion Add comments View the comments as a different user Delete one Comment Make sure that the Discussion appears to be UnRead when you see it on the Discussions page