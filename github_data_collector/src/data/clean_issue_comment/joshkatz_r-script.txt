I am trying to call simple R file which will call hist function But when I call this function I am getting following error Error No method asJSON S class histogram Execution halted below is my R code x c histx collightblue and here is my indexjs file var express requireexpress var R requirerscript var app express appget function req res var out RexamplesampleR datahello world callSync consolelogout var server applisten function var port serveraddressport consolelogExample app listening at Similarly I cannot execute any other R function example x c printsummaryx I am getting error as below Error No method asJSON S class table Execution halted It seems that this project is no longer maintained Ive created a new project here I am running the sync example code but got the following error if childstderr throw childstderr Error in R script exsyncR unable to install packages How to fix it The npm package is not yet updated according to the latest version on the master branch dont know much about npm but Can it be made to update on every new pull request that is made to the master branch Ive updated the path to rscript module to run exjs from repo I personally have a Mac and was using the latest distribution of R at the time of writing Version When testing my R code and NodeJS code on a Windows machine for another user I ran into a couple errors Hopefully the below is enlightening for others Adding R to PATH I kept getting this error eventsjs throw er Unhandled error event Error spawn Rscript ENOENT at ProcessChildProcesshandleonexit internalchildprocessjs at onErrorNT internalchildprocessjs at combinedTickCallback internalprocessnexttickjs at processtickCallback internalprocessnexttickjs I believe NodeJS cannot call R through command prompt In order to resolve you need to add R to PATH for Windows machines See with excerpt below Verify R is installed in the following path C Program Files R R bin x Open the start menu and type in View advanced system settings click on Environment variables Under System variables select Path and click on edit Click New and add the folder address for R to there C Program Files R R bin x Open windows power shell and type in Rterm or Rexe to launch R command line tool After adding R to PATH you need to completely restart NodeJS Security Issues You may run into issues with R when updating packagesinstalling packages because of Windows Security Make sure that you have granted full control of the R files for your user account I believe the location is something like CProgram FilesRR library but Ive honestly forgotten at this point I think there was another location on the Windows machine that I had to change the permissions to allow R to download whatever packages were needed Synchronous vs Asynchronous Calls I kept running into this error These are the inputs E undefined installing packagesnjsonlite SyntaxError Unexpected token i in JSON at position at JSONparse anonymous at Socketanonymous C Users HP Desktop projectmss mssserver nodemodules rscript indexjs at emitOne eventsjs at Socketemit eventsjs at addChunk streamreadablejs at readableAddChunk streamreadablejs at SocketReadablepush streamreadablejs at Pipeonread netjs If you look at the indexjs and launchR code within the rscript package it is pretty revealing From launchR we have sourcefilepathSysgetenvDIRNAME needsR needsjsonlite It seemed to me that the last output of R is what tries to get converted to JSON format to pass to NodeJS However I couldnt understand why installing packagesnjsonlite was the last output as it was from launchR which I believe just calls the specific R script you need I experimented a LOT over or days and ended up changing to synchronous calls previously from asynchronous calls Within my code we changed from var plotType scatter var fpmScatter RfpmMortalityPath datareqquerystartDatereqqueryendDatereqqueryformTypereqqueryuserLevelreqqueryuserIdplotType callfunctionerr a if err throw err resjsona to var plotType scatter var data RfpmMortalityPath datareqquerystartDatereqqueryendDatereqqueryformTypereqqueryuserLevelreqqueryuserIdplotType callSync consolelogdata resjsondata After making this change the code worked I am still not sure why this was the case I speculated that there might be differences between calls between Windows and Mac machines However I am not too sure of this theory I have a script that writes a csv When I start my Node process fresh and trigger the R script the first time the R script completes and the CSV is written The second time I trigger it however it just hangs Any ideas what could be leftover from the first call which should be exited by now I got my R scripts to run when using node js express in the NetBeans IDE But when I use npm to install and start the application the call fails For debugging purposes I modified the callAsync function to log to the console as follows RprototypecallSync functionopts var opts opts thisoptionsenvinput JSONstringify thisd thispath opts consolelogabout to call R scripts options JSONstringifythisoptions var child childprocessspawnSyncRscript thisargs thisoptions if childstderrconsolelogchildstderr throw childstderr returnJSONparsechildstdout and when I run using npm start I get the following log about to call R scripts options envDIRNAMEC Users User Documents pj SUTD UROP Aviation Data Analytics AvDatView nodemodules rscriptALLUSERSPROFILEC ProgramDataAPPDATAC Users User AppData RoamingCommonProgramFilesC Program Files Common FilesCommonProgramFilesx C Program Files x Common FilesCommonProgramW C Program Files Common FilesCOMPUTERNAMEDESKTOPGH IIG ComSpecC Windows system cmdexeHOMEC Users UserHOMEDRIVECHOMEPATH Users UserINITCWDC Users User Documents pj SUTD UROP Aviation Data Analytics AvDatViewLOCALAPPDATAC Users User AppData LocalLOGONSERVER DESKTOPGH IIG NBEXECEXTEXECUTIONPROCESSUUIDc fb d aa bd a e e fadNODEC Program Files nodejs nodeexeNODEEXEC Program Files nodejs nodeexeNPMCLIJSC Program Files nodejs nodemodules npm bin npmclijsnpmconfigaccessnpmconfigallowsameversionnpmconfigalsonpmconfigalwaysauthnpmconfigargv remain cooked runscript start original runscript start npmconfigaudittruenpmconfigauditlevellownpmconfigauthtypelegacynpmconfigbinlinkstruenpmconfigbrowsernpmconfigcanpmconfigcacheC Users User AppData Roaming npmcachenpmconfigcachelockretries npmconfigcachelockstale npmconfigcachelockwait npmconfigcachemaxInfinitynpmconfigcachemin npmconfigcafilenpmconfigcertnpmconfigcidrnpmconfigcolortruenpmconfigcommithookstruenpmconfigdepthInfinitynpmconfigdescriptiontruenpmconfigdevnpmconfigdryrunnpmconfigeditornotepadexenpmconfigenginestrictnpmconfigfetchretries npmconfigfetchretryfactor npmconfigfetchretrymaxtimeout npmconfigfetchretrymintimeout npmconfigforcenpmconfiggitgitnpmconfiggittagversiontruenpmconfigglobalnpmconfigglobalconfigC Users User AppData Roaming npm etc npmrcnpmconfigglobalignorefileC Users User AppData Roaming npm etc npmignorenpmconfigglobalstylenpmconfiggroupnpmconfighamitupnpmconfigheadingnpmnpmconfighttpsproxynpmconfigifpresentnpmconfigignoreprepublishnpmconfigignorescriptsnpmconfiginitauthoremailnpmconfiginitauthornamenpmconfiginitauthorurlnpmconfiginitlicenseISCnpmconfiginitmoduleC Users User npminitjsnpmconfiginitversion npmconfigjsonnpmconfigkeynpmconfiglegacybundlingnpmconfiglinknpmconfiglocaladdressnpmconfigloglevelnoticenpmconfiglogsmax npmconfiglongnpmconfigmaxsockets npmconfigmessagesnpmconfigmetricsregistry Files nodejs nodemodules npm nodemodules nodegyp bin nodegypjsnpmconfignodeoptionsnpmconfignodeversion npmconfignoproxynpmconfigofflinenpmconfigonloadscriptnpmconfigonlynpmconfigoptionaltruenpmconfigotpnpmconfigpackagelocktruenpmconfigpackagelockonlynpmconfigparseablenpmconfigpreferofflinenpmconfigpreferonlinenpmconfigprefixC Users User AppData Roaming npmnpmconfigpreidnpmconfigproductionnpmconfigprogresstruenpmconfigproxynpmconfigreadonlynpmconfigrebuildbundletruenpmconfigregistry nodev win x npmconfigversionnpmconfigversionsnpmconfigviewerbrowsernpmexecpathC Program Files nodejs nodemodules npm bin npmclijsnpmlifecycleeventstartnpmlifecyclescriptnode binwwwnpmnodeexecpathC Program Files nodejs nodeexenpmpackagedependenciesapp npmpackagedependenciescookieparser npmpackagedependenciesdebug npmpackagedependenciesexpress npmpackagedependencieshttperrors npmpackagedependenciesjade npmpackagedependencieslessmiddleware npmpackagedependenciesmorgan npmpackagedependenciesrscript npmpackagenameavdatviewnpmpackageprivatetruenpmpackagescriptsstartnode binwwwnpmpackageversion NPMPREFIXNPMCLIJSC Users User AppData Roaming npm nodemodules npm bin npmclijsNUMBEROFPROCESSORS OneDriveC Users User OneDriveOSWindowsNTPathC Program Files nodejs nodemodules npm nodemodules npmlifecycle nodegypbinC Users User Documents pj SUTD UROP Aviation Data Analytics AvDatView nodemodules binC Windows system C WindowsC Windows System WbemC Windows System WindowsPowerShell v C Program Files MySQL MySQL Utilities C Program Files nodejs C Program Files SASHome SASFoundation ets sasexeC Program Files SASHome Secure ccme C Program Files R R bin x C Users User AppData Local Microsoft WindowsAppsC Users User AppData Roaming npmPATHEXTCOMEXEBATCMDVBSVBEJSJSEWSFWSHMSCPROCESSORARCHITECTUREAMD PROCESSORIDENTIFIERIntel Family Model Stepping GenuineIntelPROCESSORLEVEL PROCESSORREVISION e ProgramDataC ProgramDataProgramFilesC Program FilesProgramFilesx C Program Files x ProgramW C Program FilesPROMPTPGPSModulePathC Program Files WindowsPowerShell ModulesC Windows system WindowsPowerShell v ModulesPUBLICC Users PublicSESSIONNAMEConsoleSystemDriveCSystemRootC WindowsTEMPC Users User AppData Local TempTMPC Users User AppData Local TempUSERDOMAINDESKTOPGH IIG USERDOMAINROAMINGPROFILEDESKTOPGH IIG USERNAMEGDRSolutionsDesignerUSERPROFILEC Users UserwindirC Windowsinput rscriptstestRR encodingutf Warning in utilsinstallpackagesmissing repos lib CProgram FilesRR library is not writable Error in utilsinstallpackagesmissing repos unable to install packages Calls needs needs Anonymous Execution halted So it appears that the script is installing a package but doesnt have permissions After some more debugging I see that the variable missing is equal to jsonlite So the launchR script is failing at the line needsjsonlite I tried going into RStudio and installing the package jsonlite That was successful but it didnt change this output It is strange that the script works fine from within NetBeans but not in the npm start context Any ideas please This is a nice solution to the problem of linking to R I hope I can get it to work THanks P I ran npm install rscript in UsersusernameDocumentsworkspaceneonmssserver and was testing the example R scripts and javascripts Specifically examplejs with exsyncR My path was UsersusernameDocumentsworkspaceneonmssservernodemodulesrscriptexample and I ran node exjs I kept getting TypeError Cannot read property data of undefined at Objectanonymous UserslinjoDocumentsworkspaceneonmssservernodemodulesrscriptexampleexjs at Modulecompile modulejs at ObjectModuleextensionsjs modulejs at Moduleload modulejs at tryModuleLoad modulejs at FunctionModuleload modulejs at FunctionModulerunMain modulejs at startup bootstrapnodejs at bootstrapnodejs I believe the fix is documented in In indexjs the init function should be function initpath var obj new Rpath bindAllobj data call callSync return obj Also in exasyncR you need to change summarizeeach to summarizeall 