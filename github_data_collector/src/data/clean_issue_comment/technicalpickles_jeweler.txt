First time using jeweler When running any rake command I get the error NoMethodError undefined method dependenciesfor for BundlerRuntime x fa e c Did you mean dependencies UsersDeervmgemsruby gemsjeweler libjewelerspecificationrb in block in setjewelerdefaults UsersDeervmgemsruby gemsjeweler libjewelerspecificationrb in chdir UsersDeervmgemsruby gemsjeweler libjewelerspecificationrb in setjewelerdefaults UsersDeervmgemsruby gemsjeweler libjewelerrb in initialize UsersDeervmgemsruby gemsjeweler libjewelertasksrb in new UsersDeervmgemsruby gemsjeweler libjewelertasksrb in jeweler UsersDeervmgemsruby gemsjeweler libjewelertasksrb in block levels in define UsersDeervmgemsruby gemsrake exerake in top required UsersDeervmgemsruby binrubyexecutablehooks in eval UsersDeervmgemsruby binrubyexecutablehooks in main Tasks TOP versionwrite See full trace by running task with trace I tried updating bundler to the latest version and am still encountering the error While the basic setup in the Rakefile is done no failing example tests a generated The documentation at least for shoulda states it would generate a failing test The version reported by juwelier is different from the gems version see bash extract below It is simply the version which is hardcoded in versionrb Is this intended MM git gem install juwelier Fetching juwelier gem Successfully installed juwelier Parsing documentation for juwelier Installing ri documentation for juwelier Done installing documentation for juwelier after seconds gem installed MM git juwelier v Version Currently I am putting a lot of new features into Juwelier but maintaining code bases can be a bit cumbersome so eventually I want to merge both However the name space issue looms large and I may have to do some nasty tricks to make it work because I do NOT want to abandon those using Juwelier and many are still using Jeweler So what I might wind up doing is after the merge I will simply do simultaneous releases to both places I am open to suggestions on better approaches RubyGem does not appear to have a transitional package option like aptget does Any thoughts and criticisms are welcome I wont begin on this until I clear out the outstanding issues with both code bases Hello When I try to start a new gem project with jeweler helloworld Im greeted with the following message Encountered an error while adding origin remote Maybe you have some weird settings in gitconfig hometimrvmgemsruby gemsgit libgitlibrb in command git gitdirtmphelloworldgit worktreetmphelloworld remote add origin gitgithubcompixelastichelloworldgit fatal remote origin already exists GitGitExecuteError from hometimrvmgemsruby gemsgit libgitlibrb in remoteadd from hometimrvmgemsruby gemsgit libgitbaserb in addremote from hometimrvmgemsruby gemsjeweler libjewelergeneratorrb in block in createversioncontrol from hometimrvmgemsruby gemsjeweler libjewelergeneratorrb in chdir from hometimrvmgemsruby gemsjeweler libjewelergeneratorrb in createversioncontrol from hometimrvmgemsruby gemsjeweler libjewelergeneratorrb in run from hometimrvmgemsruby gemsjeweler libjewelergeneratorapplicationrb in run from hometimrvmgemsruby gemsjeweler binjeweler in top required from hometimrvmgemsruby binjeweler in load from hometimrvmgemsruby binjeweler in main from hometimrvmgemsruby binrubyexecutablehooks in eval from hometimrvmgemsruby binrubyexecutablehooks in main I do have something related to the origin remote in my gitconfig remote origin prune true This allow auto pruning of deleted remote branches when doing a pull Still jeweler seems to be choking on it because it is trying to create a remote that already exists Removing the config from my gitconfig lets me use the gem correctly Im using git v rc When Im developing a new gem and forget to set the initial version and then I run rake install the gem installs into a rubygem dir under gemname which prevents rubygems from working correctly I end up reinstalling ruby completely There should be a check not allowing to perform rake install unless the version is set With the following options in jeweler rspec shoulda username dgmora useremail davidsomewherecom githubusername dgmora gitremote heythere createrepo yard heythere rspec folder is not created TestUnit is used instead create gitignore create Rakefile create Gemfile create LICENSEtxt create READMErdoc create document create lib create libheythererb create test create testhelperrb create testtestheythererb If I swap rspec and shoulda options the rspec folder is generated as expected I just tried to find the right workflow using Jeweler in combination with gitflow for my dbclustering project In gitflow Im used to start a release branch eg release do my release there so run rake versionbumppatch and rake release and merge the release branch with the gitflow scripts which will merge it to master and develop and checkout the develop branch The problem is that rake release automatically creates a gemspec file and uses the master branch instead of the current branch to do the release which is not what I was expecting since I was in a different branch This leads to the rerelease of the old master branch code under the new version tag Also simply doing the gem versionbumppatch in the release branch and running rake release after merging it to the master branch didnt seem right since this will prevent the gemspec file from being updated within the develop branch and I have to manually prevent the merging to the master branch in gitflow from creating a flag For now I have stopped using gitflow within that library until Im sure how to do it the right way Are there any thoughts on how to use gitflow alongside jeweler Thanks in advance for any help Weve done this on a bunch of gems lately it would be cool to see it supported in jeweler as an alternative approach to the excludeincludes configuration The advantage with this approach is that the syntaxetc utilizes gitignore syntax while applying the results to which files are included in your gem nbdevdavidhuie reactorc f b rake gemspec rake aborted NameError uninitialized constant JewelerGit Usersnbdevrvmgemsruby reactorcgemsjeweler libjewelerrb in initialize Usersnbdevrvmgemsruby reactorcgemsjeweler libjewelertasksrb in new Usersnbdevrvmgemsruby reactorcgemsjeweler libjewelertasksrb in jeweler Usersnbdevrvmgemsruby reactorcgemsjeweler libjewelertasksrb in block in define Usersnbdevrvmgemsruby reactorcbinrubyexecutablehooks in eval Usersnbdevrvmgemsruby reactorcbinrubyexecutablehooks in main Tasks TOP gemspec gemspecgenerate versionrequired See full trace by running task with trace 