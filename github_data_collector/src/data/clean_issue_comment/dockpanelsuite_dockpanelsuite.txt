The behavior that shows which pane is focused in DockPanelSuite does not match Visual Studio The first difference is that only the active pane focused in visual studio is highlighted while DPS can have pane and document highlighted at the same time VS Image from Gyazo DPS Image from Gyazo The second difference is with floating panes in visual studio the active documents tab strip will lose its highlight when you select a floating pane while with DPS the active document will remain highlighted VS Image from Gyazo DPS Image from Gyazo I also tested in visual studio and visual studio and they have same behavior You might also wonder what about the panes that have buttons dependent on the active document for example the sync with active document in solution explorer They will work and in this case it will sync with the last document pane that was focused After analyzing the DPS code I came to the conclusion this cannot be fixed without changing DPS source code I did find a solution but I it was a hack so I dont like it The issue is that VS DockPaneStrip highlights the TabStrip of the pane depending on the IsActiveDocumentPane property but it should be based on IsActivePane instead Note that SetIsActivated method on DockPane will need to be adjusted because RefreshChanges is not called if its a document and it should I will probably make a pull request when I get a chance with the fix described above but wanted to hear your opinion We used till now Version and by upgrade to the new Version the saved tabs could not be loaded correctly seems to insert xml version encodingutf into the middle of the file panelSaveAsXmlstream EncodingUTF true Hi Guys Glad to see this project is still being actively maintained Thanks every one Just want let you know that the successor of DPS WPF Docking is also open sourced under MIT license Im sorry I wouldnt have much time on these two docking components Im focusing on RDONet a revolutionary framework to develop enterprise applications in Net platform Trust me its awesome Youre welcome to give it a try and your feedback will be highly appreciated I am wondering if this behavior is by design or I am missing something but when I close the form having the DockPanel none of the docked forms FormClosed event is fired As a workaround I need to close all docked Content programmatically but I am not sure if this is the right approach Steps to reproduce open documents in the main pane drag the first two documents out so they are displayed in a float window try to drag the first tab in the main pane to the last position in the tab order the first tabs cannot be moved to the end newIndex in DockContentHandlerDockTo is calculated wrong by not considering the invisible contents try to drag the floating content back into the main panes last position in the tabstrip related issue the tabs are not inserted into their correct position Hello it is possible to hide the default Window Icon when multiple views are docked to a panel Changing the ShowIcon property does not work thisShowIcon false Kind regards Ren grafik There seems to be an odd behavior happening when reducing the width of the docking window I have a situation where I have docked windows I switch to the third one and I reduce the width of the window After a while the second docked window which was never seen before starts to mix with the currently displayed third one mix This does not happen if I switch to the second panel first so that is was already visible at some point before Any ideas It seems that whenever I use a WinForms docking container with more docked windows than fit in the panel I cannot use the scroll buttons on the right to get to them all It only alternates between two wrong behaviors and it also seems completely random which one of these two will happen I start at the following state scroll There are still two panels hidden on the right and I want to get to them but alas it only hides more of them scroll Sometimes no logic when the right button works but only for a while There is still another hidden panel even behind the partially visible one but further clicks on the button do nothing at all scroll Any ideas I have this baffling problem with respect to displaying an output window In VS SplitterControlcs when the window is rolled out and becomes a docking window the control rect width does not splittersize switch Dock case DockStyleRight case DockStyleLeft DebugAssertSplitterSize rectWidth eGraphicsFillRectanglehorizontalBrush rect break case DockStyleBottom case DockStyleTop DebugAssertSplitterSize rectHeight eGraphicsFillRectanglehorizontalBrush rect break I get assertions But worst is that the container documents when resized seem to be unaware of the output window Help Any thoughts would be appreciated PS Its a great project 