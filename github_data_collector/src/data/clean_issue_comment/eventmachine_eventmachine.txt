Im using Faye to subscribe to a channel every time a user loads up a page That means that EMrun is being called as many times as there are users opening the page Is it safe or would it cause issues should as reaching a thread limit Not so familiar with this This is strange and Im hoping I explain it sufficiently but Ive upgraded to ruby and Im seeing missing linefeeds in puts outputs from EM thats within a thread I did not see this problem when running in ruby s console output it seems to be related to my move to Ive simplified this to reproduce this as folllows If I run the following EM without being inside of a thread then I get an OK output example irbmain EventMachinerun do irbmain EMaddperiodictimer puts Tick irbmain irbmain EMaddtimer do irbmain puts I waited seconds irbmain EMstopeventloop irbmain end irbmain end Tick Tick I waited seconds nil Note all of the strings that are output from the puts commands within the EM loop are fully leftjustified in the output But if I wrap this in a thread the output lines appear to be missing the linefeed but do have the CR such that the successive puts strings are not left justified as they sequence and build from the Xoffset that ended the previous puts string output irbmain Threadnew do irbmain EventMachinerun do irbmain EMaddperiodictimer puts Tick irbmain irbmain EMaddtimer do irbmain puts I waited seconds irbmain EMstopeventloop irbmain end irbmain end irbmain end Thread x cf a c irb run irbmain Tick Tick I waited seconds Is there something thats known to have changed that is causing this Can others reproduce this as well I cant tell is this is EMs or rubys so any help would really be appreciated I only see this from puts statements within the EM loop within a Thread If the wrapping Thread is not there theres no issue If theres just a sequence of puts in a Thread and no EM loop theres no issue It seems as if theres something about the combo of a Thread wrapping an EM loop thats making the underlying puts misbehave Thanks Jim Getting the following error using Guard Unable to load the EventMachine C extension To use the pureruby reactor require empureruby ERROR Could not load guardlivereload or find class GuardLivereload ERROR Error is dlopenUsersjoelasdfinstallsruby librubygems gemseventmachine librubyeventmachinebundle Library not loaded usrlocaloptopensslliblibcrypto dylib Referenced from Usersjoelasdfinstallsruby librubygems gemseventmachine librubyeventmachinebundle Reason image not found Usersjoelasdfinstallsruby librubygems gemseventmachine librubyeventmachinebundle ERROR Usersjoelasdfinstallsruby librubygems gemseventmachine libeventmachinerb in require Usersjoelasdfinstallsruby librubygems gemseventmachine libeventmachinerb in top required Do I need to downgrade my openssl or is there another workaround You might want to check redirecting to a subpage of Looks like someone fiddled around with your domain and you want to remove the link from the project temporarily Is EventMachine usable with truffleruby Getting the following error bash Thread x irb run terminated with exception usrlocalrvmrubiestruffleruby libtruffletrufflecextrb in rbexcraise eventmachine not initialized evmareleaselibrary RuntimeError from rubyc in rbexcraise from usrlocalrvmgemstruffleruby gemseventmachine dev extcmaincpp in ensureeventmachine from usrlocalrvmgemstruffleruby gemseventmachine dev extcmaincpp in evmareleaselibrary from usrlocalrvmgemstruffleruby gemseventmachine dev extrubymaincpp in treleasemachine from usrlocalrvmrubiestruffleruby libtruffletrufflecextrubyrb in releasemachine from usrlocalrvmgemstruffleruby gemseventmachine dev libeventmachinerb in run from irb in block in irbbinding A simple UDP example is test here and I can find many code snippets are similar with it ruby require empureruby EMrun do puts EMrun EMopendatagramsocket do server puts socket open def serverreceivedatadata puts data received data senddatasending back data end end end However after receive just one packet it will raise an exception console EMrun socket open data received hi Traceback most recent call last from try rb in main from CRuby librubygems gemseventmachine x mingw libeventmachinerb in run from CRuby librubygems gemseventmachine x mingw libempurerubyrb in runmachine from CRuby librubygems gemseventmachine x mingw libempurerubyrb in run from CRuby librubygems gemseventmachine x mingw libempurerubyrb in loop from CRuby librubygems gemseventmachine x mingw libempurerubyrb in block in run from CRuby librubygems gemseventmachine x mingw libempurerubyrb in crankselectables from CRuby librubygems gemseventmachine x mingw libempurerubyrb in each from CRuby librubygems gemseventmachine x mingw libempurerubyrb in block in crankselectables from CRuby librubygems gemseventmachine x mingw libempurerubyrb in eventableread from CRuby librubygems gemseventmachine x mingw libempurerubyrb in times from CRuby librubygems gemseventmachine x mingw libempurerubyrb in block in eventableread from CRuby libruby socketrb in recvfromnonblock CRuby libruby socketrb in recvfromnonblock A nonblocking socket operation could not be completed immediately recvfrom would block IOEWOULDBLOCKWaitReadable Version eventmachine x mingw Ruby x Windows Seems that UDP in eventmachine use nonblock API Three commits add GitHub Actions Add the yml file all OSs are in one workflow file Darwin updates There are Darwin issues TestIPv testipv udplocalserver errors and TestPausetestpauseresume fails intermittently For a few tests I adjusted the timing and they seem stable I added a darwin helper method Windows build tools have been updating a lot lately and a small change was needed for the extconfrb files Related to libssp Stack Smashing Protector As to the Darwin failureserrors please have a look at them At present GitHub Actions allows testing on Ubuntu macOS Windows for Ruby versions thru Using Ubuntu Ruby can be tested Ubuntu Windows are passing macOS seems to have issues some time related Interested See Since rubyruby c c d f ca ea fecc d ac e installation fails log 