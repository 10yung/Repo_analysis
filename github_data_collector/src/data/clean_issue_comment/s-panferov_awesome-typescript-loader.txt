Hi there We just switched from awesometypescriptloader to tsloader and had instant boost from minutes to minutes of our storybook build time And only of our files are typescript are js babel Just for your information The current version of micromatch depends on an outdated version of setvalue which contains a security vulnerability see The latest version of micromatch does not include this dependency but requires node or greater When importing TypeScript files and trying to build a project the build fails saying the typescript files are unsupported and may need an appropriate loader to handle them Im using awesometypescriptloader though If you would like to see the repository you can find it here bash yarn run v yarn clean webpack config configwebpackconfigts rimraf lib Using in C Users adria Desktop XplorationByAdrian touch Using lib in C Users adria Desktop XplorationByAdrian touch lib Using tsconfigjson in C Users adria Desktop XplorationByAdrian touch tsconfigjson Using packagejson in C Users adria Desktop XplorationByAdrian touch packagejson Using src in C Users adria Desktop XplorationByAdrian touch src Using nodemodules in C Users adria Desktop XplorationByAdrian touch nodemodules i atl Using typescript from typescript i atl Using tsconfigjson from CUsersadriaDesktopXplorationByAdriantouchtsconfigjson i atl Checking started in a separate process i atl Time ms Hash da bbabc ffba e Version webpack Time ms Built at AM asset Entrypoint main touchjs srctouchts bytes built webpackbuildinmodulejs bytes built external os bytes built srcCommandEchots bytes built hidden modules ERROR in nodemodulesxbahoustonsrcICommandts Module parse failed Unexpected token You may need an appropriate loader to handle this file type currently no loaders are configured to process this file See export interface ICommand Gets the name of the command nodemodulesxbahoustonsrcindexts srctouchts ERROR in nodemodulesxbahoustonsrcCommandBasets Module parse failed Unexpected token You may need an appropriate loader to handle this file type currently no loaders are configured to process this file See import ICommand from ICommand export abstract class CommandBase implements ICommand public version string nodemodulesxbahoustonsrcindexts srctouchts ERROR in nodemodulesxbahoustonsrcICommandManagerts Module parse failed Unexpected token You may need an appropriate loader to handle this file type currently no loaders are configured to process this file See import ICommand from ICommand export interface ICommandManager Attempts to execute a command nodemodulesxbahoustonsrcindexts srctouchts ERROR in nodemodulesxbahoustonsrcCommandHandlerts Module parse failed Unexpected token You may need an appropriate loader to handle this file type currently no loaders are configured to process this file See export class CommandHandler private readonly commandMap Mapstring ICommand new Map string ICommand nodemodulesxbahoustonsrcindexts srctouchts ERROR in nodemodulesxbahoustonsrcHoustonCommandManagerts Module parse failed Unexpected token You may need an appropriate loader to handle this file type currently no loaders are configured to process this file See export class HoustonCommandManager extends CommandHandler private readonly houston Houston public constructorhouston Houston super nodemodulesxbahoustonsrcindexts srctouchts ERROR in nodemodulesxbahoustonsrcHoustonts Module parse failed Unexpected token You may need an appropriate loader to handle this file type currently no loaders are configured to process this file See export class Houston public readonly commandManager ICommandManager nodemodulesxbahoustonsrcindexts srctouchts error Command failed with exit code info Visit for documentation about this command This produces much better error output for the versions of TypeScript that support it Minimal working example Javascript indexts import as EventEmitter from events consolelogEventEmitter packagejson name mwe version description Minimal working example for events bug in awesometypescriptloader and webpack dependencies typesevents awesometypescriptloader events typescript webpack webpackcli webpackconfigjs const webpack requirewebpack const CheckerPlugin requireawesometypescriptloader moduleexports entry dirnameindexts output filename outputjs path dirname library Test mode processenvNODEENV module rules test jt sx loader awesometypescriptloader options configFileName dirnametsconfigjson plugins new CheckerPlugin resolve extensions js ts tsconfigjson files indexts Steps to reproduce Copy above files into a directory Run npm install webpack watch This produces the output webpack is watching the files atl Using typescript from typescript atl Using tsconfigjson from mwetsconfigjson in a forked process atl Child process failed to process the request TypeError Cannot read property moduleAugmentations of undefined at containsGlobalScopeAugmentation mwenodemodulestypescriptlibtypescriptjs at isFileAffectingGlobalScope mwenodemodulestypescriptlibtypescriptjs at ObjectgetAllDependencies mwenodemodulestypescriptlibtypescriptjs at ObjectresultgetAllDependencies mwenodemodulestypescriptlibtypescriptjs at processEmit mwenodemodulesawesometypescriptloaderdistcheckerruntimejs at processanonymous mwenodemodulesawesometypescriptloaderdistcheckerruntimejs at processemit eventsjs at emit internalchildprocessjs at processTicksAndRejections internalprocesstaskqueuesjs atl Checking started in a separate process Hash c a fe d c Version webpack Time ms Built at AM Asset Size Chunks Chunk Names outputjs KiB main emitted main Entrypoint main outputjs indexts bytes main built hidden module ERROR in nodemoduleseventseventsjs Module build failed Error Final loader nodemodulesawesometypescriptloaderdistentryjs didnt return a Buffer or String at mwenodemoduleswebpacklibNormalModulejs at mwenodemodulesloaderrunnerlibLoaderRunnerjs at iterateNormalLoaders mwenodemodulesloaderrunnerlibLoaderRunnerjs at iterateNormalLoaders mwenodemodulesloaderrunnerlibLoaderRunnerjs at mwenodemodulesloaderrunnerlibLoaderRunnerjs at contextcallback mwenodemodulesloaderrunnerlibLoaderRunnerjs at processTicksAndRejections internalprocesstaskqueuesjs indexts atl Time ms Its been a while since this issue was detected and the PR was fired Just wanted to pay attention on this Using resolveJsonModule is not possible with ATL because it does not track changes in imported json modules PR pnpm is an alternative to npm that does not adhere to a flat nodemodules structure It instead organizes dependencies as a tree only allowing files to require modules it explicitly depends on This seems to cause an issue with awesometypescriptloader It fails to find the expected modules when looking at type declaration files If I install the dependencies via npm it succeeds If I remove awesometypescriptloader and build with webpack treating the inputs as regular js it succeeds I have created a repro repo pnpmatloaderfail build homerunnerworkpnpmawesometypescriptloadererrorrepropnpmawesometypescriptloadererrorrepro webpack modedevelopment atl Using typescript from typescript atl Using tsconfigjson from homerunnerworkpnpmawesometypescriptloadererrorrepropnpmawesometypescriptloadererrorreprotsconfigjson atl Checking started in a separate process atl Checking finished with errors Hash b abbe d d Version webpack Time ms Built at Asset Size Chunks Chunk Names bundlejs MiB main emitted main bundlejsmap MiB main emitted main Entrypoint main bundlejs bundlejsmap nodemodulesregistrynpmjsorgwebpack webpack nodemoduleswebpackbuildinglobaljs webpackbuildinglobaljs bytes main built nodemodulesregistrynpmjsorgwebpack webpack nodemoduleswebpackbuildinharmonymodulejs webpackbuildinharmonymodulejs bytes main built srcindexts bytes main built hidden modules ERROR in atloader nodemodulestypesreactindexdts TS Cannot find module csstype ERROR in atloader nodemodulestypesreactindexdts TS Cannot find module proptypes ERROR in atloader nodemodulesreduxindexdts TS Property observable does not exist on type SymbolConstructor ERROR in atloader nodemodulesreduxindexdts TS Property observable does not exist on type SymbolConstructor ERROR in atloader nodemodulesreduxindexdts TS Cannot find type definition file for symbolobservable ERROR in atloader nodemodulestypesreactreduxindexdts TS Cannot find module hoistnonreactstatics ERROR Command failed with exit code error Process completed with exit code Im running webpack with awesometypescriptloader and I get the error saying that Accessors are only available with es The thing is that in my tsconfigjson it already says target is es But somehow the loader doesnt pick it up My webpack config looks as following const path requirepath moduleexports entry srcappbuilderdesignerappts output path pathresolvedirname dist filename appbuilderjs resolve extensions ts tsx js jsx module rules test tsx loader awesometypescriptloader options configFileName pathresolvedirname appbuildertsconfigjson And my tsconfigjson looks like following compileOnSave true compilerOptions declaration true noImplicitAny true noImplicitReturns true preserveConstEnums true sourceMap true target es Is there some obvious errors in my configurations Hi npm install is breaking since the dependency typeschai only compiles with typescript versions img width altScreenshot at src Would it be possible to update the typescript version in devDependencies to Related chai PR Steps to reproduce Clone repo cd into repo npm i This package requires an old version of micromatch that requires setvalue with old version which has vulnerability issue Updating the package to require the latest version of micromatch will resolve the issue Thanks Michal