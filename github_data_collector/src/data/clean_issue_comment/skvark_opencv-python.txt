 Description of the problem I notice running many different applications using opencv libraries are showing very significant performance difference when using the upstream python bindings vs opencvpython I verified this on Red Hat and Fedora Linux distributions Fedora provides opencv python packages series which I also adapted to work on Red Hat Linux modifying the RPM spec file to disable a couple of components not available in Red Hat When running the same code applications slowdown is significant Depending on the application it can take to more than longers One of the tested application is DeepLabCut Switching only the opencv package and keeping the rest of the environment exactly the same tripled the performance of our analysis time I tried to recompile the opencvpython locally using the setuppy and gcc on CentOS but it didnt make a big difference there was a improvement but still very far away from the observed with upstream build Looking at the cmake arguments in the RPM spec file and comparing it to the one in setuppy I cannot see anything that could explain the problem I can see the Fedora RPM forces the use of OPENMP rather than using pthreads and I understand opencvpython uses pthreads instead not sure if this could be the primary cause of the issue Sounds strange if it is though I ran out of ideas and thought about opening this issue Expected behaviour Same or close to same performance as upstream python bindings Actual behaviour Not entirely sure but multiple applications are showing significant slowdowns when using this opencvpython rather than the upstream python binding Steps to reproduce any D reconstruction demo from the opencv example code should also work CentOS Fedora x opencvpython both and so opencv and seems to be affected Thank your for any help Im trying to use this script on my MacBook with an extra USB webcam attached to it to take a quick picture for a demo But Im unable to access the USB cam only the builtin iSight or whatever camera I know the script is from another person but he hasnt been answering any questions so I thought I would try here I had hoped that changing webcam cv VideoCapture to webcam cv VideoCapture would allow me to use the USB camera but it still uses the builtin camera The USB camera does work with Photo Booth and other applications but not via this py file Any ideas on what I need to do Thanks for any help Expected behavior I am using Opencv Python version for write image to video as mention in code but unfortunately when I run Script in Pycharm it run correctly but when I convert script to EXE from pyinstaller with PYQT its give me error like as below Actual behavior ERROR global C projects opencvpython opencv modules videoio src capcpp cvVideoWriteropen VIDEOIOCVIMAGES raised OpenCV exception OpenCV C projects opencvpython opencv modules videoio src capimagescpp error Bad argument CAPIMAGES cant find starting number in the name of file Detectedvideoavi in function cvicvExtractPattern Steps to reproduce example code pathIn IMGOUTPUTFOLDER imageinterval Interval between two images fps imageinterval files videodf framearray for i in rangelenfilesindex imgname filesloc i ImageName filename ospathjoinpathIn imgname reading each files img cv imreadfilename height width layers imgshape size width height inserting the frames into an image array framearrayappendimg oschdirVIDEOOUTPUTFOLDER out cv VideoWriterDetectedvideoavi cv VideoWriterfourccDIVX fps size for i in rangelenframearray writing to a image array outwriteframearray i outrelease oschdirCWDPATH operating system windows architecture eg x opencvpython version I want to use tensor data with opencv methods such as cv threshold or cv connectedComponentsWithStats etc But when I try to give tensor data to these methods then I get an error like TypeError Expected PtrcvUMat for argument s How to use tensor data with opencv methods OpenCV was released on December Could an opencvpython build of this be released Thanks Expected behaviour Expecting to build a binary package on an Orange Pi running Armbian python setuppy bdistwheel Actual behaviour CMake Error at usrsharecmake ModulesFindQt cmake message Found unsuitable Qt version from NOTFOUND this code requires Qt x Call Stack most recent call first cmakeOpenCVFindLibsGUIcmake findpackage CMakeListstxt include Configuring incomplete errors occurred See also homeweiwangaiopencvpythonskbuildlinuxaarch cmakebuildCMakeFilesCMakeOutputlog See also homeweiwangaiopencvpythonskbuildlinuxaarch cmakebuildCMakeFilesCMakeErrorlog Traceback most recent call last File homeweiwangenvlibpython sitepackagesskbuildsetuptoolswrappy line in setup languagescmakelanguages File homeweiwangenvlibpython sitepackagesskbuildcmakerpy line in configure ospathabspathCMAKEBUILDDIR An error occurred while configuring with CMake Command cmake homeweiwangaiopencvpythonopencv G Unix Makefiles DCMAKEINSTALLPREFIXPATHhomeweiwangaiopencvpythonskbuildlinuxaarch cmakeinstall DPYTHONEXECUTABLEFILEPATHhomeweiwangenvbinpython DPYTHONVERSIONSTRINGSTRING DPYTHONINCLUDEDIRPATHusrincludepython m DPYTHONLIBRARYFILEPATHusrlibaarch linuxgnulibpython mso DSKBUILDBOOLTRUE DCMAKEMODULEPATHPATHhomeweiwangenvlibpython sitepackagesskbuildresourcescmake DPYTHON EXECUTABLEhomeweiwangenvbinpython DBUILDopencvpython ON DOPENCVSKIPPYTHONLOADERON DOPENCVPYTHON INSTALLPATHpython DINSTALLCREATEDISTRIBON DBUILDopencvappsOFF DBUILDSHAREDLIBSOFF DBUILDTESTSOFF DBUILDPERFTESTSOFF DBUILDDOCSOFF DWITHQT DWITHV LON DENABLEPRECOMPILEDHEADERSOFF DWITHIPPOFF DCMAKEBUILDTYPESTRINGRelease Source directory homeweiwangaiopencvpythonopencv Working directory homeweiwangaiopencvpythonskbuildlinuxaarch cmakebuild Please see CMakes output for more information Found in homeweiwangaiopencvpythonskbuildlinuxaarch cmakebuildCMakeFilesCMakeErrorlog BUILD LOG Change Dir homeweiwangaiopencvpythonskbuildlinuxaarch cmakebuildCMakeFilesCMakeTmp Run Build Commandusrbinmake cmTCd afast usrbinmake f CMakeFilescmTCd adirbuildmake CMakeFilescmTCd adirbuild make Entering directory homeweiwangaiopencvpythonskbuildlinuxaarch cmakebuildCMakeFilesCMakeTmp Building C object CMakeFilescmTCd adirsrcco usrbincc fsignedchar W Wall Werrorreturntype Werrornonvirtualdtor Werroraddress Werrorsequencepoint Wformat Werrorformatsecurity Wstrictprototypes Wundef Winitself Wpointerarith Wuninitialized Winitself Wnocomment Wimplicitfallthrough Wnostrictoverflow fdiagnosticsshowoption pthread fomitframepointer ffunctionsections fdatasections fvisibilityhidden Wnoimplicitfunctiondeclaration Wnouninitialized Wnomissingprototypes Wnounusedbutsetparameter Wnomissingdeclarations Wnounused Wnoshadow Wnosigncompare Wnostrictoverflow Wnopointercompare O DNDEBUG fPIE Wnoabsolutevalue o CMakeFilescmTCd adirsrcco c homeweiwangaiopencvpythonskbuildlinuxaarch cmakebuildCMakeFilesCMakeTmpsrcc homeweiwangaiopencvpythonskbuildlinuxaarch cmakebuildCMakeFilesCMakeTmpsrcc warning ignoring pragma Wunknownpragmas pragma cc warning unrecognized command line option Wnoabsolutevalue Linking C executable cmTCd a usrbincmake E cmakelinkscript CMakeFilescmTCd adirlinktxt verbose usrbincc fsignedchar W Wall Werrorreturntype Werrornonvirtualdtor Werroraddress Werrorsequencepoint Wformat Werrorformatsecurity Wstrictprototypes Wundef Winitself Wpointerarith Wuninitialized Winitself Wnocomment Wimplicitfallthrough Wnostrictoverflow fdiagnosticsshowoption pthread fomitframepointer ffunctionsections fda tasections fvisibilityhidden Wnoimplicitfunctiondeclaration Wnouninitialized Wnomissingprototypes Wnounusedbutsetparameter Wnomissingdeclarations Wnounused Wnoshadow Wnosigncompare Wnostrictoverflow Wnopointercompare O DNDEBUG Wlgcsections CMakeFilescmTCd adirsrcco o cmTCd a make Leaving directory homeweiwangaiopencvpythonskbuildlinuxaarch cmakebuildCMakeFilesCMakeTmp END Steps to reproduce example code git clone gitgithubcomskvarkopencvpythongit operating system Armbian Ubuntu LTS architecture eg x aarch opencvpython version git clone gitgithubcomskvarkopencvpythongit Expected behaviour Installing OpenCV for python should work with pip install on manjaro archlinux Actual behaviour The installer wont find a manylinux wheel for opencvpython Steps to reproduce Hi thanks for putting all the work into this sparkles I have an issue with using opencvpython on Travis Windows instances Here a simple import cv will result in ImportError DLL load failed The specified module could not be found The problem is this even happens with opencvpythonheadless I prepared a small example More context I had similar problems when loading manually compiled opencv DLLs on travis It appears this stems from travis using a Windows server version without GUI support For manually compiled opencv DLLs I was able to fix this by excluding all Windows GUI options in cmake for OpenCV DWITHWIN UIOFF DWITHDSHOWOFF DWITHMSMFOFF DWITHDIRECTXOFF Now I tried to use opencvpythonheadless but I still cant load the DLL I found a thread where other people reported this problem in a travis forum Apparently someone already figured out the cause of the problem here opencvpythonheadless gives the same result because this is a result of OpenCVPython being linked with AVFoundation support So I assume this is just a flag that was not turned off correctly for the headless build I quickly searched through the issues but could not found it so here it is Should it be possible to install opencv via git clone cd opencvpython python setuppy develop installdir HOMElocal As I understand from cv getBuildInformation opencvpython and opencvcontribpython isnt compiled with Cmake flag WITHGSTREAMER With gstreamer it is possible to make RTSP streams and VideoCapture stream augmentationsimprovements with gstreamer pipes Is there any plan to support the Gstreamer module in the future 