 ALL software version info bokeh python notebook OS browser any other relevant packages Bokeh Python Jupyter OS Windows Browser Chrome Description of expected behavior and the observed behavior Im trying to learn how to create custom bokeh models I started out trying the Custom model in But it raises the below exception Expected It works without exception Actual Exception Complete minimal selfcontained example code that reproduces the issue I have the file customipynb python from bokehcoreproperties import Instance String from bokehio import outputfile show from bokehlayouts import column from bokehmodels import HTMLBox Slider class CustomHTMLBox implementation customts text StringdefaultCustom text slider InstanceSlider slider Sliderstart end step value titlevalue custom CustomtextSpecial Slider Display sliderslider layout columnslider custom showlayout and the file customts in the same folder typescript import HTMLBox HTMLBoxView from modelslayoutshtmlbox import div from coredom import as p from coreproperties export class CustomView extends HTMLBoxView connectsignals void superconnectsignals Set BokehJS listener so that when the Bokeh slider has a change event we can process the new data thisconnectthismodelsliderchange thisrender thisinvalidatelayout render void BokehjS Views create div elements by default accessible as thisel Many Bokeh views ignore this default div and instead do things like draw to the HTML canvas In this case though we change the contents of the div based on the current slider value superrender thiselappendChilddiv style padding px color b d e backgroundColor a thismodeltext thismodelslidervalue export class Custom extends HTMLBox slider value string The name class attribute should generally match exactly the name of the corresponding Python class Note that if using TypeScript this will be automatically filled in during compilation so except in some special cases this shouldnt be generally included manually to avoid typos which would prohibit serializationdeserialization of this model static name Custom static initCustom void If there is an associated view this is typically boilerplate thisprototypedefaultview CustomView The thisdefine block adds corresponding properties to the JS model These should normally line up with the Python model class Most property types have counterparts eg bokehcorepropertiesString will be pString in the JS implementation Any time the JS type system is not yet as complete you can use pAny as a wildcard property type thisdefineCustomProps text pString slider pAny Stack traceback andor browser JavaScript console output bash Compilation failed customts error TS Property slider does not exist on type HTMLBox thisconnectthismodelsliderchange customts error TS Property text does not exist on type HTMLBox thismodeltext thismodelslidervalue customts error TS Property slider does not exist on type HTMLBox thismodeltext thismodelslidervalue customts error TS Custom only refers to a type but is being used as a namespace here thisdefineCustomProps An exception has occurred use tb to see the full traceback SystemExit x issues fixes x release document entry if new feature or API change This could be automates using Options similar to FigureOptions If I can get to it before the release I will otherwise this at least updates things by hand there were alot of other params missing at this point Also would be good to fix up the docs references to be sphinx refs not hardcoded URLs bryevdv KarelvandePlassche Following up on the discussion how to use Docker for deployments I am planning to update dockertools Looking at the current Dockerfiles I see alpine is used as the base image Assuming that many Bokeh apps requires pandas and following these recommendations as to which Docker image is best for Python deployments may plan is to add short explanation on the pros and cons of different images add a table on the various Dockerfiles to summarize their intent as examples with different approaches add Dockerfilefrompip which is based on python slim for apps requiring numpyscipypandas can serve as a template for other Bokeh deployments via requirementstxt uses demobokehorg as an example add a section on how to deploy on Google App Engine Dockerfilefrompip FROM python slim ENV LANGCUTF LCALLCUTF WORKDIR someapp RUN aptget update aptget install gcc y aptget clean COPY RUN pip install upgrade pip pip install nocachedir r requirementstxt EXPOSE bokeh serve port Please let me know what your thoughts are on this after which I wil submit a PR Environment python bokeh OS Ubuntu Browser Chrome Graphics card Nvidia GeForce GTX Graphics driver Nvidia driver Description of expected behavior and the observed behavior In the ohlc example when the backend is changed to webgl the plot has weird behavior and disappears time to time Screenshots or screencasts of the bug in action bokehstreamingbug bokehstreamingbug Complete minimal selfcontained example code that reproduces the issue import numpy as np nprandomseed from bokehlayouts import row column gridplot from bokehmodels import ColumnDataSource Slider Select from bokehplotting import curdoc figure from bokehdriving import count MA MA EMA EMA tick Moving Avg tick Moving Avg tick EMA tick EMA source ColumnDataSourcedict time average low high open close ma macd macd macdh color p figureplotheight toolsxpanxwheelzoomxboxzoomreset xaxistypeNone yaxislocationright outputbackendwebgl pxrangefollow end pxrangefollowinterval pxrangerangepadding plinextime yaverage alpha linewidth colornavy sourcesource plinextime yma alpha linewidth colororange sourcesource psegmentx time y low x time y high linewidth colorblack sourcesource psegmentx time y open x time y close linewidth colorcolor sourcesource p figureplotheight xrangepxrange toolsxpanxwheelzoomxboxzoomreset yaxislocationright outputbackendwebgl p linextime ymacd colorred sourcesource p linextime ymacd colorblue sourcesource p segmentx time y x time y macdh linewidth colorblack alpha sourcesource mean Slidertitlemean value start end step stddev Slidertitlestddev value start end step mavg SelectvalueMA options MA MA EMA EMA def createpricest lastaverage if t else sourcedata average returns npasarraynprandomlognormalmeanvalue stddevvalue average lastaverage npcumprodreturns high average npexpabsnprandomgamma size low average npexpabsnprandomgamma size delta high low open low delta nprandomuniform size close low delta nprandomuniform size return open high low close average def movingavgprices days if lenprices days return return npconvolveprices days nponesdays dtypefloat modevalid days def emaprices days if lenprices days or days return prices a days kernel nponesdays dtypefloat kernel a kernel a npcumprodkernel The normalizes out that we stop the EMA after a finite number of terms return npconvolveprices days kernel modevalid count def updatet open high low close average createpricest color green if open close else red newdata dict time t open open high high low low close close average average color color close sourcedata close close ma movingavgclose ma movingavgclose ema emaclose ema emaclose if mavgvalue MA newdata ma ma elif mavgvalue MA newdata ma ma elif mavgvalue EMA newdata ma ema elif mavgvalue EMA newdata ma ema macd ema ema newdata macd macd macdseries sourcedata macd macd macd emamacdseries newdata macd macd newdata macdh macd macd sourcestreamnewdata curdocaddrootcolumnrowmean stddev mavg gridplot p p toolbarlocationleft plotwidth curdocaddperiodiccallbackupdate curdoctitle OHLC This is specific to use cases where you are using bokehJS to render plot JSONs you do not directly control An example use case is a dashboarding app where you allow users to create plots in python but are not giving them control over the web app side my use case Id like to be able to do things like disable custom Javascript for security and enforce sizing modes to stretchboth I understand this would probably break some plots but in this use case Id rather the plot looked busted and have the author fix it than wrecking the entire dashboard All runs seem to be uploading to the exact same location When trying to create a plot with a hover tool only hovering over the plot triggers it and clicking usually does something else like imitate dragging On some hand held devices like cell phones it is not possible to hover over an image being displayed in an html page touching the screen becomes a click It will be nice if there will be an option to detect the device or set the device on a bokeh tool that will interpret a screen click as a hover and display the hover information of the clicked entity This will make bokeh plots much more useful on hand held devices since a lot of information provided in the hover is currently not accessible on these devices Considering that mobile browsing surpassed regular web browsing in this will really help improve experience for a large audience Software versions OS Linux Browser Chrome Official Build bit Python JupyterLab Pandas Bokeh Issue When plotting a vbarstack the entire row in the data source is ignored if the first input column contains a NaN in a pandasDataFrame If a standard Python dict is used as a data source the output is plotted as expected from bokehplotting import figure show from bokehmodels import ColumnDataSource data dictindex a None b None source ColumnDataSourcedata f figure fvbarstackxindex stackers a b sourcesource width color red blue showf source ColumnDataSourcepdDataFrameindex data dicta b dicta bNone dictaNone b dicta b f figure fvbarstackxindex stackers a b sourcesource width color red blue showf Expected behavior with dict as data source Expected dict as data source Unexpected behavior with DataFrame as data source Unexpected DataFrame as data source Mitigation I currently let Pandas fill the NaNs with zeros Thanks for Bokeh guys TextInput only responds to onchange My use case is to provide a text field that will dynamically load a python module the idea is that the user can modify the module and get it reloaded by just hitting Enter in the TextInput box With onchange nothing happens on Enter My workaround is to provide a second button that would explicitly reload I had some discussion in discourse about adding a property to TextInput that would respond to Enter Adds a FullscreenTool which maximizes the root view Might want to make that configurable and allow just fullscreening the specific subplot although Id have to test that x issues fixes Add icon tests added passed release document entry if new feature or API change 