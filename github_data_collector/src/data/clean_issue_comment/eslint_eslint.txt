 Thank you for contributing ESLint adheres to the JS Foundation Code of Conduct Prerequisites checklist x I have read the contributing guidelines x The team has reached consensus on the changes proposed in this pull request If not I understand that the evaluation process will begin with this pull request and wont be merged until the team has reached consensus What is the purpose of this pull request put an X next to item Documentation update x Bug fix template New rule template Changes an existing rule template Add autofixing to a rule Add a CLI option Add something to the core Other please explain If the item youve checked above has a template please paste the template questions below and answer them If this pull request is addressing an issue you can just paste a link to the issue here instead Please ensure your pull request is ready Read the pull request guide Include tests for this change Update documentation for this change if appropriate The following is required for all pull requests What changes did you make Give an overview For checking template literal also I change the checking logic to use getStaticPropertyName in astutils Is there anything youd like reviewers to focus on It needs a consensus of ESlint members Thank you for contributing ESLint adheres to the JS Foundation Code of Conduct Prerequisites checklist X I have read the contributing guidelines X The team has reached consensus on the changes proposed in this pull request If not I understand that the evaluation process will begin with this pull request and wont be merged until the team has reached consensus What is the purpose of this pull request put an X next to item X Bug fix This bug fix produces more warnings by default If the item youve checked above has a template please paste the template questions below and answer them If this pull request is addressing an issue you can just paste a link to the issue here instead Tell us about your environment ESLint Version v Node Version v npm Version v What parser default BabelESLint etc are you using default Please show your full configuration details summaryConfigurationsummary Paste your configuration below js moduleexports parserOptions ecmaVersion details What did you do Please include the actual source code causing the issue Online Demo Link js eslint nomagicnumbers error ignoreArrayIndexes true toString What did you expect to happen error since this isnt an array index What actually happened Please include the actual raw output from ESLint No errors Please ensure your pull request is ready Read the pull request guide Include tests for this change Update documentation for this change if appropriate The following is required for all pull requests What changes did you make Give an overview Added check that the number is property not just any child of MemberExpression Is there anything youd like reviewers to focus on Also added regression tests to make sure that this change doesnt affect behavior when the number is really the property though some of these cases might be another bug Ill open an issue for these The scheduled release on Friday January st is assigned to needs volunteers needs volunteers Please use this issue to document how the release went any problems during the release and anything the team might want to know about the release process This issue should be closed after all patch releases have been completed or there was no patch release needed Resources Release guidelines ESLint adheres to the JS Foundation Code of Conduct This template is for requesting a change that is not a bug fix rule change or new rule If you are here for another reason please see below To report a bug To request a rule change To propose a new rule If you have any questions please stop by our chatroom Note that leaving sections blank will make it difficult for us to troubleshoot and we may have to close the issue The version of ESLint you are using latest The problem you want to solve Enable cache by default Your take on the correct solution to problem we should enable cache by default in cli so lint in a monorepo would be a lot faster I know we could do so with cache but it is a pain to add that to every single project in a monorepo Are you willing to submit a pull request to implement this change yes ESLint adheres to the JS Foundation Code of Conduct This template is for bug reports If you are here for another reason please see below To propose a new rule To request a rule change To request a change that is not a bug fix rule change or new rule If you have any questions please stop by our chatroom Note that leaving sections blank will make it difficult for us to troubleshoot and we may have to close the issue Tell us about your environment If you are using ESLint v or later you can run ESLint with the envinfo flag and paste the output here ESLint Version v Node Version v npm Version v What parser default BabelESLint etc are you using default Please show your full configuration details summaryConfigurationsummary Paste your configuration below js details What did you do Please include the actual source code causing the issue as well as the command that you used to run ESLint Paste the source code below Demo noproto js eslint noproto error var a obj proto var a obj proto Demo noiterator js eslint noiterator error foo iterator function foo iterator function What did you expect to happen Both cases are expected two errors each What actually happened Please include the actual raw output from ESLint Both rulesnoproto noiterator dont consider template literals noproto js eslint noproto error var a obj proto Error The proto property is deprecated var a obj proto no error noiterator js eslint noiterator error foo iterator function Error Reserved name iterator foo iterator function no error Are you willing to submit a pull request to fix this bug Yes its prepared ESLint adheres to the JS Foundation Code of Conduct What is the purpose of this pull request put an X next to item Documentation update Bug fix template New rule template Changes an existing rule template X Add autofixing to a rule Add a CLI option Add something to the core Other please explain If the item youve checked above has a template please paste the template questions below and answer them If this pull request is addressing an issue you can just paste a link to the issue here instead Please ensure your pull request is ready Read the pull request guide Include tests for this change Update documentation for this change if appropriate The following is required for all pull requests What changes did you make Give an overview Made the camelcase rule fixable by creating a fix function that modifies snakecased names Is there anything youd like reviewers to focus on Please verify that my replacing logic is correct I tried to make sure added tests that it ignores any number of leading and trailing underscores and removes any number of underscores inside the name Rules from plugins need to be namespaced using plugin name which is missing ESLint adheres to the JS Foundation Code of Conduct What is the purpose of this pull request put an X next to item x Documentation update Bug fix template New rule template Changes an existing rule template Add autofixing to a rule Add a CLI option Add something to the core Other please explain If the item youve checked above has a template please paste the template questions below and answer them If this pull request is addressing an issue you can just paste a link to the issue here instead Please ensure your pull request is ready Read the pull request guide Include tests for this change Update documentation for this change if appropriate The following is required for all pull requests What changes did you make Give an overview Add missing plugin reference Is there anything youd like reviewers to focus on no ESLint adheres to the JS Foundation Code of Conduct This template is for requesting a rule change If you are here for another reason please see below To report a bug To propose a new rule To request a change that is not a bug fix rule change or new rule If you have any questions please stop by our chatroom Note that leaving sections blank will make it difficult for us to troubleshoot and we may have to close the issue What rule do you want to change functioncallargumentnewline Does this change cause the rule to produce more or fewer warnings more How will the change be implemented New option new default behavior etc new option Please provide some example code that this change will affect Put your code examples here js fooone two three or foo one two three not fooone two three barone two one two or bar one two one two not barone two one two baz one two x consolelogx not bazone two x consolelogx What does the rule currently do for this code Currently this rule will require a newline for arguments always never or consistent which means either all args are on a newline or all are on the same line What will the rule do after its changed With a multi line rule it should look if the parentheses are on different lines Currently this is valid js bazone two x consolelogx because it sees it as all being on one line i suspect but there should be a way to say that no these should each have their own line Are you willing to submit a pull request to implement this change I dont really understand how eslint works and I dont have a lot of time Maybe if I get time Tell us about your environment Environment Info Node version v npm version v Local ESLint version v Currently used Global ESLint version Not found What parser default BabelESLint etc are you using default cli Please show your full configuration details summaryA portion of interest json formatsummary nomultispaces error exceptions Property true VariableDeclarator true ImportDeclaration true AssignmentExpression true keyspacing error align value details This is decorator for component for stenciljs web component Paste the source code below ts Component tag testinputsearch styleUrl inputsearchscss shadow true export class InputSearch implements ComponentInterface Paste the command you used to run ESLint bash nodemodulesbineslint srcjststsx What did you expect to happen Nothing lint pass What actually happened Please include the actual raw output from ESLint error Multiple spaces found before testinputsearch nomultispaces error Multiple spaces found before true nomultispaces Are you willing to submit a pull request to fix this bug No sorry I am not that into this project in order to be able to contribute ESLint adheres to the JS Foundation Code of Conduct This template is for bug reports If you are here for another reason please see below To propose a new rule To request a rule change To request a change that is not a bug fix rule change or new rule If you have any questions please stop by our chatroom Note that leaving sections blank will make it difficult for us to troubleshoot and we may have to close the issue Tell us about your environment If you are using ESLint v or later you can run ESLint with the envinfo flag and paste the output here ESLint Version Node Version npm Version What parser default BabelESLint etc are you using babeleslint Please show your full configuration details summaryConfigurationsummary Paste your configuration below js details What did you do Please include the actual source code causing the issue as well as the command that you used to run ESLint When autofixing the following code it resulted in nonparseable js code This is a minimal reproducible example Paste the source code below js eslintenable multilinecommentstyle a line comment somecode What did you expect to happen I expect it to not yield nonparseable code What actually happened Please include the actual raw output from ESLint It yielded nonparseable code