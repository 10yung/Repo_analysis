ProxyDatabaseMetaData is full of methods that follow this pattern java Override public ResultSet getTablesString catalog String schemaPattern String tableNamePattern String types throws SQLException ResultSet resultSet delegategetTablescatalog schemaPattern tableNamePattern types ProxyStatement statement ProxyStatement ProxyFactorygetProxyStatementconnection resultSetgetStatement return ProxyFactorygetProxyResultSetconnection statement resultSet At first glance this all looks okay However when using H just for example I see failures like this INFO javalangNullPointerException null INFO at comzaxxerhikaripoolProxyStatementcloseProxyStatementjava INFO at netjavaaoCommoncloseQuietlyCommonjava INFO at netjavaaosqlSqlUtilscloseQuietlySqlUtilsjava INFO at netjavaaoschemahelperDatabaseMetaDataReaderImplgetSequenceNamesDatabaseMetaDataReaderImpljava INFO at netjavaaoschemahelperDatabaseMetaDataReaderImplgetFieldsDatabaseMetaDataReaderImpljava INFO at netjavaaoschemaddlSchemaReaderreadFieldsSchemaReaderjava INFO at netjavaaoschemaddlSchemaReaderreadTableSchemaReaderjava INFO at netjavaaoschemaddlSchemaReaderaccess SchemaReaderjava INFO at netjavaaoschemaddlSchemaReader applySchemaReaderjava INFO at netjavaaoschemaddlSchemaReader applySchemaReaderjava Based on the line number its getting a NullPointerException in ProxyStatement trying to call delegateclose That delegate is retrieved with ResultSetgetStatement so that must be returning null Looking at the Javadocs for ResultSetgetStatement shows this Retrieves the codeStatementcode object that produced this codeResultSetcode object If the result set was generated some other way such as by a codeDatabaseMetaDatacode method this method may return codenullcode Based on that the H database driver is entirely within spec to return null from getStatement It seems to me like the ProxyDatabaseMetaData methods need to actually check the getStatement result for null and only proxy the statement if there is one Something like this java Override public ResultSet getTablesString catalog String schemaPattern String tableNamePattern String types throws SQLException ResultSet resultSet delegategetTablescatalog schemaPattern tableNamePattern types Statement statement resultSetgetStatement if statement null statement ProxyFactorygetProxyStatementconnection statement return ProxyFactorygetProxyResultSetconnection ProxyStatement statement resultSet This way the proxied ResultSet will return null from getStatement when the underlying ResultSet does and will return a proxied Statement otherwise As it stands a proxied ResultSet always returns a proxy Statement even when its not wrapping anything HikariCP Java PostgreSQL JDBC PostgreSQL Amazon Aurora x Got this today after months of no problems Hikari is serving up connections that are closed causing a major data loss Please advise ERROR normalTaskExecutor cbwserviceDefaultWaveformService Failed to insert entries into table XXX for org XXX orgspringframeworkjdbcCannotGetJdbcConnectionException Failed to obtain JDBC Connection nested exception is javasqlSQLTransientConnectionException Waveforms DataSource Connection is not available request timed out after ms at orgspringframeworkjdbcdatasourceDataSourceUtilsgetConnectionDataSourceUtilsjava at orgspringframeworkjdbccoreJdbcTemplateexecuteJdbcTemplatejava at orgspringframeworkjdbccoreJdbcTemplateexecuteJdbcTemplatejava at orgspringframeworkjdbccoreJdbcTemplatebatchUpdateJdbcTemplatejava at orgspringframeworkjdbccoreJdbcTemplatebatchUpdateJdbcTemplatejava at orgspringframeworkjdbccoreJdbcTemplatebatchUpdateJdbcTemplatejava at comboxviewwaveformserverserviceDefaultWaveformServicepublishEntriesDefaultWaveformServicejava at comboxviewwaveformserverserviceDefaultWaveformServicehandleNewWaveformEntryEventDefaultWaveformServicejava at comboxviewwaveformserverserviceWaveformReceiverWaveformReceiverWorkerreadAndProcessWaveformReceiverjava at comboxviewwaveformserverserviceWaveformReceiverWaveformReceiverWorkerQueueProcessorrunWaveformReceiverjava at javabasejavautilconcurrentThreadPoolExecutorrunWorkerThreadPoolExecutorjava at javabasejavautilconcurrentThreadPoolExecutorWorkerrunThreadPoolExecutorjava at comboxviewconcurrencyLoggingRunnablerunLoggingRunnablejava at javabasejavalangThreadrunThreadjava Caused by javasqlSQLTransientConnectionException Waveforms DataSource Connection is not available request timed out after ms at comzaxxerhikaripoolHikariPoolcreateTimeoutExceptionHikariPooljava at comzaxxerhikaripoolHikariPoolgetConnectionHikariPooljava at comzaxxerhikaripoolHikariPoolgetConnectionHikariPooljava at comzaxxerhikariHikariDataSourcegetConnectionHikariDataSourcejava at orgspringframeworkjdbcdatasourceDataSourceUtilsfetchConnectionDataSourceUtilsjava at orgspringframeworkjdbcdatasourceDataSourceUtilsdoGetConnectionDataSourceUtilsjava at orgspringframeworkjdbcdatasourceDataSourceUtilsgetConnectionDataSourceUtilsjava common frames omitted Caused by orgpostgresqlutilPSQLException This connection has been closed at orgpostgresqljdbcPgConnectioncheckClosedPgConnectionjava at orgpostgresqljdbcPgConnectionsetNetworkTimeoutPgConnectionjava at comzaxxerhikaripoolPoolBasesetNetworkTimeoutPoolBasejava at comzaxxerhikaripoolPoolBaseisConnectionAlivePoolBasejava at comzaxxerhikaripoolHikariPoolgetConnectionHikariPooljava common frames omitted Jan AM orgslf jimplJCLLoggerAdapter warn WARNING HikariPool Failed to validate connection commysqljdbcJDBC Connection c d No operations allowed after connection closed Possibly consider using a shorter maxLifetime value This warning message seems not too descriptive my configuration looks like this java static HikariConfig config new HikariConfig configsetDriverClassNameServerConstantsDBDRIVER commysqljdbcDriver configsetJdbcUrlServerConstantsDBURL jdbcmysqllocalhost maindb configsetUsernameServerConstantsDBUSER shavitush configsetPasswordServerConstantsDBPASS configsetMaximumPoolSizeServerConstantsDBPOOLSIZE configsetLeakDetectionThreshold configaddDataSourcePropertycachePrepStmts true configaddDataSourcePropertyprepStmtCacheSize configaddDataSourcePropertyprepStmtCacheSqlLimit configaddDataSourcePropertyautoReconnect true hikari new HikariDataSourceconfig I dont set maxLifetime at all Its the default value So I have questions about this message What are the consequences of this It popped up in production and I havent noticed anything going wrong so far Are any of my queries not going through because of this Am I leaking memory Is this bad for my database server How can I debug this warning message or find its source I call hikarigetConnection from places in my codebase I interpret the warning message as youre attempting to query the connection after closing it dont do that is that correct I dont see any stack trace either and Im unable to reproduce this locally The readme mentions it should be several seconds shorter than any database or infrastructure imposed connection time limit for the maxLifetime setting Is that referring to my MariaDBs configuration connection time limit These are my timeout variables So if connecttimeout is seconds should it be even shorter on Hikari Im confused Hello the video link on this page About Pool Sizing do not exist anymore Thanks I have set a pool name to eg foobar Then I expect pool names should be named foobar is it correct assumption Or is there some reason why there is hardcoded this string final String prefix HikariPool I know its cosmetic issue only but it looks strange in logs causing operations to ask whats wrong INFO main cozahiHikariDataSource foobar Starting INFO main cozahiHikariDataSource HikariPool Starting INFO main cozahiHikariDataSource HikariPool Start completed INFO main cozahiHikariDataSource foobar Start completed expected INFO main cozahiHikariDataSource foobar Starting INFO main cozahiHikariDataSource foobar Starting INFO main cozahiHikariDataSource foobar Start completed INFO main cozahiHikariDataSource foobar Start completed Patch can be provided Im just curious if there is some hidden reason for it Hello the pro environment found a large number of errors that could not obtain the connection to the database like orgmybatisspringMyBatisSystemException nested exception is orgapacheibatisexceptionsPersistenceException Error querying database Cause orgspringframeworkjdbcCannotGetJdbcConnectionException Failed to obtain JDBC Connection nested exception is javasqlSQLTransientConnectionException HikariPool Connection is not available request timed out after ms The error may exist in class path resource mapperfriendswriteWriteUfotoUserUnmatchFriendMapperxml The error may involve comufotodaowriteWriteUfotoUserUnmatchFriendsMapperselectByUids The error occurred while executing a query Cause orgspringframeworkjdbcCannotGetJdbcConnectionException Failed to obtain JDBC Connection nested exception is javasqlSQLTransientConnectionException HikariPool Connection is not available request timed out after ms at orgmybatisspringMyBatisExceptionTranslatortranslateExceptionIfPossibleMyBatisExceptionTranslatorjava at orgmybatisspringSqlSessionTemplateSqlSessionInterceptorinvokeSqlSessionTemplatejava at comsunproxyProxy selectOneUnknown Source at orgmybatisspringSqlSessionTemplateselectOneSqlSessionTemplatejava at orgapacheibatisbindingMapperMethodexecuteMapperMethodjava at orgapacheibatisbindingMapperProxyinvokeMapperProxyjava at comsunproxyProxy selectByUidsUnknown Source at comufotomanagerfriendsUfotoUserFriendsManagercheckWasFriendBeforeAndDelMsgUfotoUserFriendsManagerjava at comufotomanagerfriendsUfotoUserFriendsManagerFastClassBySpringCGLIBd f c invokegenerated at orgspringframeworkcglibproxyMethodProxyinvokeMethodProxyjava at orgspringframeworkaopframeworkCglibAopProxyDynamicAdvisedInterceptorinterceptCglibAopProxyjava at open debugfound the connetion always Repeat loop creation What is the reason JDK Version lib version comzaxxerHikariCP database mariaDB connector lib orgmariadbjdbcmariadbjavaclient for Java only version that worked for me Android Studio version latest Kotlin version latest compileSdkVersion targetSdkVersion minSdkVersion val driver orgmariadbjdbcDriver val url jdbcmariadbhost db val config HikariConfig configdriverClassName driver configjdbcUrl url configusername aaa configpassword bbb configaddDataSourcePropertycachePrepStmts true configaddDataSourcePropertyprepStmtCacheSize configaddDataSourcePropertyprepStmtCacheSqlLimit val ds HikariDataSourceconfig ds is always null And with properties val props Properties propssetPropertydataSourceClassName orgmariadbjdbcMariaDbDataSource propssetPropertydataSourceuser aaa propssetPropertydataSourcepassword bbb propssetPropertydataSourceportNumber propssetPropertydataSourceserverName host propssetPropertydataSourcedatabaseName db val config HikariConfigprops val ds HikariDataSourceconfig I get the error that he Didnt find the Class orgmariadbjdbcMariaDbDataSource although I can import this class properly When I DriverManagergetConnection it works and I can read data from tables too Can someone help Environment windows HikariCP version JDK version LTS Database SAP SQL Anywhere Driver version jconn SP b jar We are migrating from java to java besides other dependencies we have upgraded the driver and hikaricp as above However at run time we are getting below connection pool issue javalangIllegalStateException The configuration of the pool is sealed once started Use HikariConfigMXBean for runtime changes at comzaxxerhikariHikariConfigcheckIfSealedHikariConfigjava at comzaxxerhikariHikariConfigsetTransactionIsolationHikariConfigjava at commonservicedsfactoryDataSourceFactorycreateDataSourceDataSourceFactoryjava at commonservicedsfactoryDataSourceFactorycreateDataSourceDataSourceFactoryjava at ApplicationContextgetDataSourceApplicationContextjava at ApplicationContextFactoryaugmentApplicationContextApplicationContextFactoryjava at InitBasicsThreadrunInitBasicsThreadjava 