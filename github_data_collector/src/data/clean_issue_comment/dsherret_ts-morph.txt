Hey dsherret Ive come across a couple of scenarios where it would be convenient to be able to retrieve the Project instance from a SourceFile such as to grab other source files in the project based on the given SourceFiles source Ive been passing in both the Project and the SourceFile instances to functions that I write which need this ability but figuring that having a SourceFilegetProject method would be convenient especially when one function calls another and it ends up being a lot of functions that need both arguments Since this feature could be handy on any Node was thinking to put this new method on that class The method could just return thiscontextproject Thoughts Best Greg typescript this defined in tsserverlibrarydts interface PluginCreateInfo project Project languageService LanguageService languageServiceHost LanguageServiceHost serverHost ServerHost config any Is your feature request related to a problem Please describe I need a way to load my language service plugin Describe the solution youd like Provide apis to get all these PluginCreateInfo members Or I can custom load a plugin from a required module Describe alternatives youve considered Maybe project and serverHost not exist But at least languageServiceHost exists See here Describe the bug typescript version tsmorph version Heres an odd one I am unable to call getTagName on JSDoc tags if they are template tags Oddly I have a number of other tag names in my codebase several of which are nonstandard and yet template is the only offender To Reproduce ts import Project SyntaxKind ts from tsmorph consolelogtsversion const project new Project const file projectcreateSourceFile srctmpts template Thing this is a thing const printThing thing Thing Thing consolelogthing return thing join n Print all tag names filegetFirstDescendantByKindOrThrowSyntaxKindVariableStatement getJsDocs forEachjsDoc jsDocgetTagsforEachtag consolelogtaggetTagName TypeError taggetTagName is not a function Expected behavior Console prints template Actual behavior TypeError taggetTagName is not a function In my case I am able to work around the issue but it is a bit of a nuisance and a curiosity If you are contributing this bug fix then please read the instructions in CONTRIBUTINGmd Describe the bug Version latest A clear and concise description of what the bug is To Reproduce Clearly identify the problem and submit some reproduction code Prune the reproduction code to remove needless details State the actual behaviour ts const Project StructureKind requiretsmorph const project new Project const classFile projectcreateSourceFilesrcMyClassts class Foo const classNode classFilegetClasses classNodeaddConstructor statements consolelogi am constructor Expected behavior A clear and concise description of what you expected to happen no error If you are contributing this bug fix then please read the instructions in CONTRIBUTINGmd Describe the bug Trying to add a property assignment to an object literal which exists inside of a CallExpression but seems the formatting gets an extra level of indentation when doing so Version A clear and concise description of what the bug is To Reproduce Clearly identify the problem and submit some reproduction code Prune the reproduction code to remove needless details State the actual behaviour ts import Project SyntaxKind from tsmorph const project new Project const sourceFile projectcreateSourceFiletestts const obj doSomething const objLiteral sourceFilegetDescendantsOfKindSyntaxKindObjectLiteralExpression objLiteraladdPropertyAssignment name myProp initializer consolelogsourceFile sourceFilegetFullText Expected behavior Would expect the output source file to be formatted as ts const obj doSomething myProp However it ends up being formatted as ts const obj doSomething myProp Add manipulation methods for ObjectBindingPattern From Builds on but does this for the compiler object Basically this allows users to get a compiler type checker and not have to worry about rerequesting it If you are contributing this feature change then please read the instructions in CONTRIBUTINGmd Is your feature request related to a problem Please describe A clear and concise description of what the problem is No MappedTypeNode definition in tsmorph No TypeQueryNode definition in tsmorph No TypeOperatorNode definition in tsmorph I want to remove some nodes I know the remove method only exists in wrapped node Now I have a compiler node which is to be removed but I dont know the way to get the wrapped node from a compiler node Ive tried createWrappedNode to get the wrapped node but when it calls remove method errors occurred I want to know whether there is a way to get the removable wrapped node from a compiler node