If I have some code that will not throw an error should not that be a warning instead Here is the code that is throwing an error Line Error Name object that is reserved for future use does not cause an error in PHP used as a class interface or trait name class Object implements ArrayAccess Iterator Related issue I am getting this error File Error filegetcontents Filename cannot be empty Processing aborted But is not showing the location file of the error Have anyone run into a similar issue I am getting some warnings that should not be warnings Please correct me if I am wrong According to the PHP docs Caution If you use yield in an expression context for example on the right hand side of an assignment you must surround the yield statement with parentheses in PHP For example this is valid data yield value But this is not and will result in a parse error in PHP data yield value The parenthetical restrictions do not apply in PHP This means that in PHP does not matter if yield uses or not However If you are supporting backward compatible you should add the around yield I am using an external package that is giving me this error Warning yield usage in expression context File awsawssdkphpsrcS S MultiRegionClientphp GuzzleHttp Promise coroutinefunction usehandler command cacheKey try yield handlercommand catch Aws S Exception PermanentRedirectException e if emptycommand Bucket throw e result egetResult region null if issetresult metadata headers xamzbucketregion region result metadata headers xamzbucketregion thiscachesetcacheKey region else region yield thisdetermineBucketRegionAsynccommand Bucket command region region yield handlercommand catch Aws Exception AwsException e if egetAwsErrorCode AuthorizationHeaderMalformed region thisdetermineBucketRegionFromExceptionBodyegetResponsegetBody if emptyregion thiscachesetcacheKey region command region region yield handlercommand else throw e else throw e Looking over the yield implementations it looks like we are wrapping them around Any particular reason why I still get this error Should we avoid this error if there is around yield WTF Error File appvendorsymfonyconfigDefinitionBaseNodephp Error Syntax error unexpected expecting TVARIABLE on line Processing aborted Code public function constructstring name NodeInterface parent null array values array var notdefinedconstant othervar It is a warning in php and will throw error in future versions It should be var notdefinedconstant othervar Are you planning on implementing it Thanks The largest set of things that were missed in the code I checked was assignment of a reference to new object that was caught fine when it had but was missed everywhere the code had a space between the and the Might be poor practice but thats the code I had to work with Im getting the above message on a file but it doesnt tell me which line or any context Is this some internal error or a possibly a legit problem php l on the file says no syntax errors detected If the former I think php cc should print out additional information so that the offending part can be easily identified Migrated from PHP Parser to PHP Parser Applied Tried non breaking approach using PREFERPHP Everything works Migrated from PHP Parser to PHP Parser Applied Dropped the support for older versions of PHP as PHP Parser v requires Removed older PHP versions from CI Reformatted code to CS TODO fix visitors broken by new AST fix srcNodeVisitorIndirectVariableOrMethodAccessVisitorphp fix srcNodeVisitorYieldExpressionVisitorphp fix srcNodeVisitorYieldInExpressionContextVisitorphp fix srcNodeVisitorGlobalVariableVariableVisitorphp fix srcNodeVisitorInvalidOctalLiteralVisitorphp fix srcNodeVisitorNewAssignmentByReferenceVisitorphp Would it be possible to allow globbing patterns in the exclude option At least on OSX it should be export PATHPATHHOMEcomposervendorbin not export PATHPATHHOMEconfigcomposervendorbin Not sure if the config is working on other nix versions