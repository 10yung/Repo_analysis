Fixes two memory leaks For some reason PHP isnt always reporting these so Im going to look for more wvalgrind Addresses x dd in zendmmfindleakssmall p x fa afc i j leak x fff cf d c at homewwwsoftwaresphp Zendzendallocc empty count binnum dbg x fa afe e x f c in zendmmfindleaks heap x fa b a p x fa afc i leak x fff cf d c at homewwwsoftwaresphp Zendzendallocc binnum count x in zendmmcheckleaks heap x fa b a at homewwwsoftwaresphp Zendzendallocc binnum dbg x fa b a e a list x p x fa b a leak addr x fa b a e size filename x fa b f c homewwwsoftwaresredis redisclusterc origfilename x lineno origlineno repeated total i j x ce in zendmmshutdown heap x fa b a full silent at homewwwsoftwaresphp Zendzendallocc p x fec phplibxmlpostdeactivate list x fff cf d x in shutdownmemorymanager silent fullshutdown at homewwwsoftwaresphp Zendzendallocc No locals x db in phprequestshutdown dummy x at homewwwsoftwaresphp mainmainc origbailout x fff cf d d bailout jmpbuf maskwassaved savedmask val reportmemleaks x a f in main argc argv x fff cf dcc at homewwwsoftwaresphp sapifpmfpmfpmmainc primaryscript x fa b a f p origbailout x bailout jmpbuf maskwassaved savedmask val exitstatus cgi c useextendedinfo filehandle handle fd fp x stream handle x isatty mmap len pos map x buf x oldhandle x oldcloser x reader x fsizer x closer x filename x fa b a openedpath x type ZENDHANDLEFILENAME freefilename origoptind origoptarg x inientrieslen maxrequests requests fcgifd request x fpmconfig x fpmprefix x fpmpid x testconf forcedaemon forcestderr phpinformation phpallowtorunasroot func main redisclusterc proto array RedisClustermgetarray keys PHPMETHODRedisCluster mget zval zret emallocsizeofzret line arrayinitzret Parse args process if clustermkeycmdINTERNALFUNCTIONPARAMPASSTHRU MGET sizeofMGET zret clustermbulkmgetresp zvaldtorzret efreezret RETURNFALSE Hi I think the Documentation is missing the redis commands PUNSUBSCRIBE and UNSUBSCRIBE The functions are implemented but missing in the documentation Expected behaviour Save session Actual behaviour Session not saving Im seeing this behaviour on OS CentOS Redis PHP phpredis sessionsavehandler redis sessionsavepath tcp Redis Support enabled Redis Version Available serializers php json igbinary msgpack Available compression lzf zstd Directive Local Value Master Value redisarraysalgorithm no value no value redisarraysauth no value no value redisarraysautorehash redisarraysconnecttimeout redisarraysconsistent redisarraysdistributor no value no value redisarraysfunctions no value no value redisarrayshosts no value no value redisarraysindex redisarrayslazyconnect redisarraysnames no value no value redisarrayspconnect redisarraysprevious no value no value redisarraysreadtimeout redisarraysretryinterval redisclustersauth no value no value redisclusterscacheslots redisclusterspersistent redisclustersreadtimeout redisclustersseeds no value no value redisclusterstimeout redispconnectconnectionlimit redispconnectpoolingenabled redissessionlockexpire redissessionlockretries redissessionlockwaittime redissessionlockingenabled Steps to reproduce backtrace or example script php sessionstart count SESSION count SESSION count count echo count This script works fine with files session handler Ive checked x There is no similar issue from other users x Issue isnt fixed in develop branch devin same environmentmachine has same issue Expected behaviour Running a cluster and using the slot cache When I migrate keys I would expect the slot cache to update if it receives an ASK or MOVE Actual behaviour Upon requesting the data from a key on a migrated slot the cache does not seem to update and continually requests keys from the wrong node If I restart apache the slot cache is refreshed and works fine Im seeing this behaviour on OS linux Redis PHP phpredis and Steps to reproduce backtrace or example script Ive checked x There is no similar issue from other users x Issue isnt fixed in develop branch While reviewing the README for information on popen I found that some of the functions listed in the doc were missing deprecation notices I went through the deprecated aliases and updated the notes in the README for those that appear to have been missed This also removes how substr is described as deprecated as it was inconsistent with the rest of the document Expected behaviour Redis command line execution results are as follows xadd mystream t redis type nosql xrange mystream t redis type nosql Actual behaviour php test demo try redis new redis redisconnect catch Exception e fileputcontentstmpredistestegetMessage r n key mystream echo pre data redisxrangekey vardumpdata But I got the following in the result array array RECURSION type string nosql I tried both phpredis versions and and got the same results Im seeing this behaviour on OS Linux Redis PHP phpredis Steps to reproduce backtrace or example script Ive checked x There is no similar issue from other users x Issue isnt fixed in develop branch Im not sure about getMasterAddrByName It returns result as array host port maybe string hostport would be better TODO documentation more tests Reflection can not work correctly so I cant make my package compatible with earlier versions of phpredis by a easy way Of course I have given up doing this now php echo new ReflectionMethodRedisclass connectgetNumberOfParameters fix issues 