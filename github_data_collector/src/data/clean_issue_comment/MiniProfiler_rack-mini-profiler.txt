This PR allows Rails application to use mini profiler without any of the monkey patches that mini profiler ships with instead mini profiler will rely completely on ActiveSupportNotifications To use the nonpatches version in your Rails app add configminiprofilerwithoutpatches true to your environment configurations files There will be some differences between the patches and nopatches versions for example most importantly measuring SQLactionsrender time wont be as accurate and there wont be a NetHTTP step because there is no official API that we can use to replicate what this patch does Recipe for using RackDeflate is not suitable for use with Rails There was an update with disabling of compression when miniprofiler is used with RackDeflate so I think it would be better to replace that stale recipe with description of this behaviour It seems that mini profiler is no with version dumping various internal errors into console and profiling of XHR requests doesnt seem work any longer Errors dumped in startup Refused to get unsafe header XMiniProfilerIds VM Uncaught ReferenceError durationmilliseconds is not defined at Objecteval as profilerTemplate eval at rtemplate dot minjsv ade cde db b d a anonymous at renderTemplate includesjsv ade cde db b d a at buttonShow includesjsv ade cde db b d a at XMLHttpRequestrequestonload includesjsv ade cde db b d a VM Uncaught ReferenceError durationmilliseconds is not defined at Objecteval as profilerTemplate eval at rtemplate dot minjsv ade cde db b d a anonymous at renderTemplate includesjsv ade cde db b d a at buttonShow includesjsv ade cde db b d a at XMLHttpRequestrequestonload includesjsv ade cde db b d a VM Uncaught ReferenceError durationmilliseconds is not defined at Objecteval as profilerTemplate eval at rtemplate dot minjsv ade cde db b d a anonymous at renderTemplate includesjsv ade cde db b d a at buttonShow includesjsv ade cde db b d a at XMLHttpRequestrequestonload includesjsv ade cde db b d a Refused to get unsafe header XMiniProfilerIds Since Rails has parametrizied query statement like this SELECT FROM items WHERE itemid id So in panel we see instead of Params are not shown in rackminiprofiler panel This commit is a hack ONLY FOR POSTGRESQL to see params Like this we can add for other DBs PS May be commit needs refactoring for optimization Hello All parameters of database query are not shown in profiler web window There is SELECT itemsid FROM items WHERE itemcategoryid IN LIMIT But I need SELECT itemsid FROM items WHERE itemcategoryid IN LIMIT Why params may be filtered In other project all is normal Rails Ruby Postgresql rackminiprofiler I have Ruby p revision x linux Rails Try deploy app with passenger but it rise error cannot load such file rackminiprofiler LoadError homeotzovysharedbundleruby gemsbootsnap libbootsnaploadpathcachecoreextkernelrequirerb in require homeotzovysharedbundleruby gemsactivesupport libactivesupportdependenciesrb in block in require homeotzovysharedbundleruby gemsactivesupport libactivesupportdependenciesrb in loaddependency homeotzovysharedbundleruby gemsactivesupport libactivesupportdependenciesrb in require homeotzovyreleases configinitializersrackprofilerrb in main homeotzovysharedbundleruby gemsbootsnap libbootsnaploadpathcachecoreextkernelrequirerb in load homeotzovysharedbundleruby gemsbootsnap libbootsnaploadpathcachecoreextkernelrequirerb in load homeotzovysharedbundleruby gemsactivesupport libactivesupportdependenciesrb in block in load homeotzovysharedbundleruby gemsactivesupport libactivesupportdependenciesrb in loaddependency homeotzovysharedbundleruby gemsactivesupport libactivesupportdependenciesrb in load homeotzovysharedbundleruby gemsrailties librailsenginerb in block in loadconfiginitializer homeotzovysharedbundleruby gemsactivesupport libactivesupportnotificationsrb in instrument homeotzovysharedbundleruby gemsrailties librailsenginerb in loadconfiginitializer homeotzovysharedbundleruby gemsrailties librailsenginerb in block levels in classEngine homeotzovysharedbundleruby gemsrailties librailsenginerb in each homeotzovysharedbundleruby gemsrailties librailsenginerb in block in classEngine homeotzovysharedbundleruby gemsrailties librailsinitializablerb in instanceexec homeotzovysharedbundleruby gemsrailties librailsinitializablerb in run homeotzovysharedbundleruby gemsrailties librailsinitializablerb in block in runinitializers usrlocalrvmrubiesruby libruby tsortrb in block in tsorteach usrlocalrvmrubiesruby libruby tsortrb in block levels in eachstronglyconnectedcomponent usrlocalrvmrubiesruby libruby tsortrb in block levels in eachstronglyconnectedcomponentfrom usrlocalrvmrubiesruby libruby tsortrb in eachstronglyconnectedcomponentfrom usrlocalrvmrubiesruby libruby tsortrb in block in eachstronglyconnectedcomponentfrom homeotzovysharedbundleruby gemsrailties librailsinitializablerb in each homeotzovysharedbundleruby gemsrailties librailsinitializablerb in tsorteachchild usrlocalrvmrubiesruby libruby tsortrb in call usrlocalrvmrubiesruby libruby tsortrb in eachstronglyconnectedcomponentfrom usrlocalrvmrubiesruby libruby tsortrb in block in eachstronglyconnectedcomponent usrlocalrvmrubiesruby libruby tsortrb in each usrlocalrvmrubiesruby libruby tsortrb in call usrlocalrvmrubiesruby libruby tsortrb in eachstronglyconnectedcomponent usrlocalrvmrubiesruby libruby tsortrb in tsorteach usrlocalrvmrubiesruby libruby tsortrb in tsorteach homeotzovysharedbundleruby gemsrailties librailsinitializablerb in runinitializers homeotzovysharedbundleruby gemsrailties librailsapplicationrb in initialize homeotzovyreleases configenvironmentrb in top required configru in require configru in block in main homeotzovysharedbundleruby gemsrack librackbuilderrb in instanceeval homeotzovysharedbundleruby gemsrack librackbuilderrb in initialize configru in new configru in main usrsharepassengerhelperscriptsrackpreloaderrb in eval usrsharepassengerhelperscriptsrackpreloaderrb in preloadapp usrsharepassengerhelperscriptsrackpreloaderrb in block in moduleApp usrlibrubyvendorrubyphusionpassengerloadersharedhelpersrb in runblockandrecordstepprogress usrsharepassengerhelperscriptsrackpreloaderrb in moduleApp usrsharepassengerhelperscriptsrackpreloaderrb in modulePhusionPassenger usrsharepassengerhelperscriptsrackpreloaderrb in main Based on nateberkopec s recommendation this change would display the Active Record queries hitting its query cache It would be useful to create a callback once the request completes which can take the timing data and do something with it ie check if the page load took n ms and log if so Ideally its a config setting that takes a proclambda and calls it with some neat hash of timing data but if thats too expensive it could just use pagestruct It would be called somewhere around here It might also make sense to stick it in a Threadnew block to avoid taking too large of a performance hit It might be just me but I would find it useful to see the name of the controller not just the name of the action Hi First of all thanks for all great work put into the project its awesome One thing I was struggling with is that I cant really use it standalone outside of request scope as theres too much coupling happening in the rack middleware layer I was wondering if there were any plans to refactor it ie with the move towards MiniProfilerui Maybe also something I could help with Best Leszek