Sections don t have the draft variable so setting draft true still builds them and includes them in the output Would it be a desirable feature to be able to save sections as drafts I prefer to push my own built site not to use any CI Also I am hosting on GitHub I currently use Hugo and all I have to do is change my configtoml toml publishDir docs I am trying to mimic this with Zola but I dont know what option to set if any even exists I saw this toml build base docs publish docspublic but I dont think its right as zola build just goes ahead and dumps the output to public still Help Bug Report Markdown striketrough does not work Maybe an update of pulldowncmark from to fixes the issue See Environment MacOS Zola version Expected Behavior HTML should render text als strikedthroug Current Behavior Step to reproduce Add this text should be striked through to a Markdown document If you see the tilde character instead of a characters striked through you look at the bug Bug Report Environment Zola version Ive added to configtoml toml defaultlanguage fr languages code fr rss true search false Ive also renamed all files in content from md to frmd and updated links accordingly Expected Behavior In template files pageancestors should have indexfrmd as section indexes Current Behavior In template files pageancestors ignores the language and has indexmd as section indexes instead of indexfrmd Step to reproduce To test in templatespagehtml if pageancestors for ancestorpath in pageancestors set ancestor getsectionpathancestorpath pancestorrelativepathp endfor endif or in templatessectionhtml if sectionancestors for ancestorpath in pageancestors set ancestor getsectionpathancestorpath pancestorrelativepathp endfor endif Todo Wait for syntect release incl fix for rustonig Documentation uwearzt Example uwearzt Check interface especially configtoml Keats Bug Report Environment Zola version Expected Behavior getimagemetadatafoojpg successfully loads metadata of staticfoojpg if there are no contentfoojpg Current Behavior getimagemetadatafoojpg complains Reason getimagemeta Cannot find path foojpg even if there is staticfoojpg Step to reproduce Put an image to static folder eg staticfoojpg There should be no files with the same path eg contentfoojpg Run getimagemetadatapathfoojpg in a template Both local templates or theme templates are ok Run zola build or zola serve It fails with getimagemeta Cannot find path foojpg error Additional info I think the lines below should be changed in some way is the discussion and source of what I ve done in this commit The work included in here Stop stripping any characters from paths or anchors none of the restrictions are fundamentally valid and they prevent realistic uses Split slugifypaths into slugifypaths and slugifyanchors and change anchors to using slugifyanchors Turn slugifypaths off by default and ensure that all the documentation is consistent about this it wasn t One potentially controversial part of this is ceasing turning spaces into underscores in anchors with slugifyanchors off I consider that a legitimate slugification scheme and contrary to the declared intent of slugifyanchors false I think it s best left to the future where we can specify slugifyanchors Spacestounderscores or similar Because there are further variants of it Fixes It would be nice to bring orgmode support to Zola And actually Im already started working on it by using orgize a orgmode parser I wrote But Zola not only converts raw markdown into simple html string but also applies some features like deep linking and table of content So I think we should first discuss about how to address such features on orgmode before we can finally implements it in Zola Feature Request Environment Zola version Feature Proposal As Ive initially described this in it is currently impossible AFAICT to manually emulate the generaterss feature by using an appropriate template as Zola assumes all pages to render to HTML output There are two aspects to this Zola does not handle templates with an extension different to html For an RSS feed template it would make sense to have a nonHTML extension for the template such as xml or rss As such nonHTML templates are currently not supported it should be possible to enable special behavior when adding support for such templates see below For nonHTML output the beautiful URL scheme employed ie generating fooindexhtml instead of foohtml doesnt make sense as webservers typically just serve indexhtml when a request that maps to a directory name comes in Thus Id like to discuss the following potential change to Zola When a template is specified with a path that does not end in html use the extension from the template to form the resulting path and dont do the indexhtml transformation For example a foomd page specifying template feedxml in its frontmatter will be rendered to sectionfooxml instead of sectionfooindexhtml When a path is specified for such a page the given path would be used verbatim With this change I think one would get pretty close to being able to implement the generaterss feature in userspace so to speak which would be nice from an elegance and versatility perspective besides allowing for my specific usecase Drawbacks Implementing the proposed change will still treat templates with the html extension specially as it does the indexhtml transformation However if that were to be made configurable as proposed in html and other templates would be treated exactly the same which mitigates that concern I think Bug Report Environment Zola version Expected Behavior Delete a section should not crash zola Current Behavior Delete a section crashes zola with a Panic Backtrace Note I deleted the contenttxttekniskdata directory Step to reproduce Note These are not the same steps as in backtrace Constant reproduce by doing the following Create directory Create indexmd with content Delete the directory