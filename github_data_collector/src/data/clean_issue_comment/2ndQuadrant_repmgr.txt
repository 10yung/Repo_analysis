Hello Does repmgrd takes in account witness host for consensus or just regular standbys Thank you When registered configure file have been deleted or moved but local repmgr command can find repmgrconf in other location In this situation the configure file we read from registered location should be checked othrewise this will make confusing in datadirectory checks Having a master and standby node Result of repmgr cluster show ID Name Role Status Upstream Location Priority Timeline Connection string primary primary running default hostwxyz userrepmgr dbnamerepmgr connecttimeout standbynode standby running primary default hostwxyz userrepmgr dbnamerepmgr connecttimeout Current configuration file of primary is nodeid nodenameprimary conninfohostwxyz userrepmgr dbnamerepmgr connecttimeout replicationuserrepmgrrepl pgbindirusrxxxxpostgres bin datadirectoryvarxxxxpostgres data configdirectoryetcxxxxpostgres data loglevelINFO logfacilitySTDERR logfilevarlogxxxxrepmgrrepmgrlog shutdownchecktimeout monitoringhistoryyes Starting repmgrd on primary node with repmgrd d v Log file content NOTICE repmgrd repmgrd starting up INFO connecting to database hostwxyz userrepmgr dbnamerepmgr connecttimeout INFO setrepmgrdpid provided pidfile is tmprepmgrdpid NOTICE starting monitoring of node primary ID INFO connectionchecktype set to ping NOTICE monitoring cluster primary primary ID INFO child node standbynode ID is attached Made no changes in the configuration file just wanted to check reloading repmgrd with kill HUP cat tmprepmgrdpid Following is recorded in the logfile INFO reloading configuration file WARNING unable to parse new configuration retaining current configuration DETAIL following errors were detected promotecommand required parameter was not found followcommand required parameter was not found Thatss weird These parameters were not required at the initial start of repmgrd but after doing a reload these are required Repmgr version PostgreSQL version According to the documentation For the sake of simplicity the repmgr user is created as a superuser If desired its possible to create the repmgr user as a normal user However for certain operations superuser permissions are requiredl in this case the command line option superuser can be provided to specify a superuser User repmgr is created as normal user Trying to run repmgr node check repmgr node check INFO connection is not a superuser connection falling back to simple check HINT add the repmgr user to group pgreadallsettings or pgmonitor Node standbynode Server role OK node is standby Replication lag OK seconds WAL archiving OK pending archive ready files Downstream servers OK this node has no downstream nodes Replication slots OK node has no physical replication slots Missing physical replication slots OK node has no missing physical replication slots Configured data directory OK Obviously the command requires a superuser to retrieve all information and not doing only the simple check So run it with option superuser to provide a superuser repmgr superuseruser v loglevel DEBUG node check INFO checking for package configuration file etcxxxxrepmgrconfrepmgrconf INFO configuration file found at etcxxxxrepmgrconfrepmgrconf DEBUG connecting to userrepmgr connecttimeout dbnamerepmgr hostwxyz fallbackapplicationnamerepmgr DEBUG setconfig SET synchronouscommit TO local DEBUG getnoderecord SELECT nnodeid ntype nupstreamnodeid nnodename nconninfo nrepluser nslotname nlocation npriority nactive nconfigfile AS upstreamnodename NULL AS attached FROM repmgrnodes n WHERE nnodeid DEBUG getnodereplicationstats SELECT pgcatalogcurrentsettingmaxwalsendersINT AS maxwalsenders SELECT pgcatalogcount FROM pgcatalogpgstatreplication AS attachedwalreceivers currentsettingmaxreplicationslotsINT AS maxreplicationslots SELECT pgcatalogcount FROM pgcatalogpgreplicationslots WHERE slottypephysical AS totalreplicationslots SELECT pgcatalogcount FROM pgcatalogpgreplicationslots WHERE active IS TRUE AND slottypephysical AS activereplicationslots SELECT pgcatalogcount FROM pgcatalogpgreplicationslots WHERE active IS FALSE AND slottypephysical AS inactivereplicationslots pgcatalogpgisinrecovery AS inrecovery DEBUG getrecoverytype SELECT pgcatalogpgisinrecovery DEBUG getreplicationlagseconds SELECT CASE WHEN pgcatalogpglastwalreceivelsn pgcatalogpglastwalreplaylsn THEN ELSE EXTRACTepoch FROM pgcatalogclocktimestamp pgcatalogpglastxactreplaytimestampINT END AS lagseconds DEBUG lag seconds DEBUG getdownstreamnoderecords SELECT nnodeid ntype nupstreamnodeid nnodename nconninfo nrepluser nslotname nlocation npriority nactive nconfigfile AS upstreamnodename NULL AS attached FROM repmgrnodes n WHERE nupstreamnodeid ORDER BY nnodeid DEBUG clearnodeinfolist closing open connections DEBUG clearnodeinfolist unlinking DEBUG clearnodeinfolist closing open connections DEBUG clearnodeinfolist unlinking DEBUG getallnoderecordswithmissingslot SELECT nnodeid ntype nupstreamnodeid nnodename nconninfo nrepluser nslotname nlocation npriority nactive nconfigfile AS upstreamnodename NULL AS attached FROM repmgrnodes n LEFT JOIN pgcatalogpgreplicationslots rs ON rsslotname nslotname WHERE nslotname IS NOT NULL AND rsslotname IS NULL AND nupstreamnodeid AND ntype standby DEBUG clearnodeinfolist closing open connections DEBUG clearnodeinfolist unlinking DEBUG clearnodeinfolist closing open connections DEBUG clearnodeinfolist unlinking INFO connection is not a superuser connection falling back to simple check HINT add the repmgr user to group pgreadallsettings or pgmonitor Node standbynode Server role OK node is standby Replication lag OK seconds WAL archiving OK pending archive ready files Downstream servers OK this node has no downstream nodes Replication slots OK node has no physical replication slots Missing physical replication slots OK node has no missing physical replication slots Configured data directory OK Not what I expected It looks like the command doesnt use the superuser option at all Ofcourse it is possible to add the repmgr normal user to one of the groups but that would to my opinion undermine the usage of the superuser option I have a replicated cluster composed of three nodes ID Name Role Status Upstream Location Priority nodeone primary running default nodetwo standby running nodeone default nodethree standby running nodeone default Repmgrd runs on all the nodes I am using the following versions of software Repmgr PostgreSQL Fedora When the primary node nodeone crashes the failover is triggered and nodetwo becomes the new primary as expected The other standby nodethree is attached to the new primary nodetwo and the PostgreSQL server is stopped DETAIL PQping returned PQPINGNORESPONSE INFO sleeping seconds until next reconnection attempt INFO checking state of node of attempts WARNING unable to ping userrepmgr connecttimeout dbnamerepmgr hostnodeone fallbackapplicationnamerepmgr DETAIL PQping returned PQPINGNORESPONSE WARNING unable to reconnect to node after attempts NOTICE setting walretrieveretryinterval to milliseconds WARNING wal receiver not running NOTICE WAL receiver disconnected on all sibling nodes INFO WAL receiver disconnected on all sibling nodes NOTICE this nodes priority is so will not be considered as an automatic promotion candidate NOTICE setting walretrieveretryinterval to ms INFO follower node awaiting notification from a candidate node NOTICE attempting to follow new primary nodetwo node ID WARNING following problems with command line parameters detected nowait will be ignored when executing STANDBY FOLLOW INFO local node can attach to follow target node DETAIL local nodes recovery point DC follow target nodes fork point DC NOTICE setting node s upstream to node NOTICE stopping server using pgctl D varlibpgsqldatauserdata w m fast stop After the restart it is registered as standby replication from nodetwo works correctly but repmgrd attempts to connect to the old primary node nodeone which is unavailable NOTICE repmgrd repmgrd starting up INFO connecting to database hostnodethree userrepmgr dbnamerepmgr connecttimeout INFO setrepmgrdpid provided pidfile is tmprepmgrdpid NOTICE starting monitoring of node nodethree ID INFO connectionchecktype set to ping ERROR connection to database failed DETAIL could not translate host name nodeone to address Name or service not known DETAIL attempted to connect using userrepmgr connecttimeout dbnamerepmgr hostnodeone fallbackapplicationnamerepmgr ERROR unable connect to upstream node ID terminating HINT upstream node must be running before repmgrd can start INFO repmgrd terminating This looks like the same problem reported on StackExchange some time ago Repmgr version PostgreSQL version Standby configuration file nodeid nodenamestandbynode conninfohostwxyz userrepmgr dbnamerepmgr connecttimeout replicationuserrepmgrrepl pgbindirusrxxxxpostgres bin datadirectoryvarxxxxpostgres data configdirectoryetcxxxxpostgres data loglevelINFO logfacilitySTDERR logfilevarlogxxxxrepmgrrepmgrlog For streaming replication a dedicated user is used repmgrrepl which is also in the configuration file of the standby Cloned the standby with following command repmgr h wxyz U repmgr d repmgr copyexternalconfigfilesamepath standby clone superuser xxxx replicationuser repmgrrepl c The standby is cloned successfully NOTICE destination directory varxxxxpostgres data provided INFO connecting to source node DETAIL connection string is hostwxyz userrepmgr dbnamerepmgr DETAIL current installation size is MB NOTICE checking for available walsenders on the source node required NOTICE checking replication connections can be made to the source server required NOTICE copying external configuration files from upstream node wxyz INFO rsync command line rsync archive checksum compress progress rshssh wxyzetcxxxxpostgres datapostgresqlconf etcxxxxpostgres datapostgresqlconf receiving incremental file list INFO rsync command line rsync archive checksum compress progress rshssh wxyzetcxxxxpostgres datapghbaconf etcxxxxpostgres datapghbaconf receiving incremental file list INFO rsync command line rsync archive checksum compress progress rshssh wxyzetcxxxxpostgres datapgidentconf etcxxxxpostgres datapgidentconf receiving incremental file list INFO checking and correcting permissions on existing directory varxxxxpostgres data NOTICE starting backup using pgbasebackup INFO executing usrxxxxpostgres binpgbasebackup l repmgr base backup D varxxxxpostgres data h wxyz p U repmgrrepl c fast X stream NOTICE standby clone using pgbasebackup complete NOTICE you can now start your PostgreSQL server As stated in the standby repmgrconf parameter replicationuser is added However on the command line I have to explicit add option replicationuser to the command otherwise it uses user repmgr This is not what I expected when reading the example conf file replicationuserrepmgr User to make replication connections with if not set defaults to the user defined in conninfo Secondly the replication user isnt added to postgresqlautoconf primaryconninfo hostwxyz userrepmgr applicationnamestandbynode connecttimeout Again not what I expected by providing the replicationuser parameter in the configuration file and providing the option replicationuser on the command line On this page The link to Release Notes points to This doesnt exist but is instead hosted here Im not sure if the homepage should be changed to or the release notes moved to but one of them needs to be done to prevent HTTP errors Hi As i read in the release docs since pg you are using pgpromote to promote a slave My question cant i override this by using the promotecommand or the servicepromotecommand In my configuration both config settings are totally ignored Best Regards David Im trying to install postgres on an ec instance following instructions here When I try to yum install postgres or update yum I get the following error with the URL root yum install postgresql Loaded plugins priorities updatemotd upgradehelper Errno HTTPS Error Not Found Trying other mirror To address this issue please refer to the below knowledge base article If above article doesnt help to resolve this issue please open a ticket with Red Hat Support Errno HTTPS Error Not Found Trying other mirror One of the configured repositories failed ndQuadrant packages PG for latest x Debug and yum doesnt have enough cached data to continue At this point the only safe thing yum can do is fail There are a few ways to work fix this Contact the upstream for the repository and get them to fix the problem Reconfigure the baseurletc for the repository to point to a working upstream This is most often useful if you are using a newer distribution release than is supported by the repository and the packages for the previous distribution release still work Disable the repository so yum wont use it by default Yum will then just ignore the repository until you permanently enable it again or use enablerepo for temporary usage yumconfigmanager disable ndquadrantdldefaultreleasepg debug Configure the failing repository to be skipped if it is unavailable Note that yum will try to contact the repo when it runs most commands so will have to try and fail each time and thus yum will be be much slower If it is a very temporary problem though this is often a nice compromise yumconfigmanager save setopt ndquadrantdldefaultreleasepg debugskipifunavailabletrue failure repodatarepomdxml from ndquadrantdldefaultreleasepg debug Errno No more mirrors to try Errno HTTPS Error Not Found The output for cat etcosrelease is Amazon Linux AMI Greetings data consistency is important to me thats why I use first n n n n The documentation parsed moments with promotecommand and followcommand If the wizard crashes a new one will be assigned and the leader will be reassigned to all standby When integrating with barman there is restorecommand will it be performed automatically as the first two to restore and restore the ex master as standby And what kind of automation is there when the standby crashes