Issue Type bBugb Startps powershell File ps File ps powershell vscode launchjson json Use IntelliSense to learn about possible attributes Hover to view descriptions of existing attributes For more information visit version configurations name PowerShell Launch Current File type PowerShell request launch script file cwd file name PowerShell Interactive Session type PowerShell request launch cwd Start PowerShell Interactive Session debug Set breakpoint anywhere on File ps Go to Startps and F on the line debug will start and take you to the breakpoint on File ps F on any line it will not work F to finish debugging All previous F s will execute at once after the script finished F Logs EditorServiceslog F presses are the DBG Finding descriptor for evaluate log lines The lines after that are the F Extension version VS Code version Code a de ead f a d f d c T Z OS version WindowsNT x details summarySystem Infosummary ItemValue CPUsAMD Ryzen X EightCore Processor x GPU Status dcanvas enabledbrflash d enabledbrflashstage d enabledbrflashstage dbaseline enabledbrgpucompositing enabledbrmetal disabledoffbrmultiplerasterthreads enabledonbrooprasterization disabledoffbrprotectedvideodecode unavailableoffbrrasterization unavailableoffbrskiarenderer disabledoffbrsurfacecontrol disabledoffbrsurfacesynchronization enabledonbrvideodecode enabledbrvizdisplaycompositor enabledonbrvizhittestsurfacelayer disabledoffbrwebgl enabledbrwebgl enabled Load avgundefined Memory System GB GB free Process Argv Screen Readerno VM details generated by issue reporter Using but I have seen it before the recent update Going back to previous release I found that was the last version where it still worked therefore it something in between and which is likely going to be the omnisharp refactoring TylerLeonhardt System Details Output VSCode version insider c d ad a a dffb e bae x VSCode extensions DavidAnsonvscodemarkdownlint eamodiogitlens mauveterraform msazuredevopsazurepipelines msazuretoolsvscodeazureappservice msazuretoolsvscodeazurefunctions msazuretoolsvscodeazurestorage msazuretoolsvscodeazureterraform msazuretoolsvscodedocker mspythonpython msvscoderemoteremotecontainers msvscoderemoteremotewsl msvscodeazureaccount msvscodecsharp msvscodepowershell msvscodepowershellpreview msvsonlinevsonline msazurermtoolsazurermvscodetools samcoganarmsnippets PSES version PowerShell version Name Value PSVersion rc PSEdition Core GitCommitId rc OS Microsoft Windows Platform Win NT PSCompatibleVersions PSRemotingProtocolVersion SerializationVersion WSManStackVersion Issue Description Open a PowerShell file to start the extension When selecting the Select PSScriptAnalyzer rules nothing happens Expected Behaviour A dropdown menu of PSSA rules should come up Actual Behaviour Nothing happens Issue Description PSIC crashe Steps to reproduce Create a file with the following content Fileps powershell GetCredential UserName Test Message Password please Press F and the PSIC will ask you for the password Copy a random string in the terminal and watch the PSIC crash Version insider system setup Commit c d ad a a dffb e bae Date T Z Electron Chrome Nodejs V electron OS WindowsNT x PowerShell Preview version OS Version Win WindowsNT x PS Version VSCode version user setup Powershell msvscodepowershell extension Version Steps to reproduce the issue open a new tab select the language as PowerShell Create a variable and assign a string Test test create cmdlet from snippeds function VerbNoun CmdletBinding param begin process end Intellisense should show the warning the the variable is never used comment out the cmdlet function VerbNoun CmdletBinding param begin process end Now intellisense shows duplicate warning Background Im trying to move from PowerShell ISE to VS Code and convince coworkers to do the same The PowerShell Integrated Console PSIC tab gives me the ability to have a script in the editor and hit F to make it run in the terminal A normal powershell terminal tab will not react to the editor seems totally disconnected Same time if you try to Split the PSIC window the split screen is also just a normal powershell window So once the one PSIC tab is running you have to wait until its done to launch another script from the terminal an issue if you have a couple scripts to run each going an hour at a time The only workaround is to open a new VS Code instance load up the script there and run it This is in contrast to ISE where you can open a new console tab open the editor for it and run your script so ISE window vs multiple VS Code instances Request So the feature Im hoping to see is the ability to have multiple PowerShell Integrated Console tabs in Terminal in order to be able to run multiple scripts from the editor PS Im sorry if this isnt the right label or location New to seeking help this is my fourth location for this issue To be honest Im not sure if this is something that should work but doesnt doesnt exist yet or cant exist ever or if Im just missing it Issue Description PS session fails to start with these errors I have taken the cert from StartEditorServicesps and imported into my local machines Trusted Publishers store I confirmed its there with an expiration date of I have also executed this command but nothing happens ImportModule HOME vscode extensions msvscodepowershell modules PowerShellEditorServices PowerShellEditorServicespsd PM NORMAL Language server startup failed PM ERROR The language service could not be started PM ERROR Timed out waiting for session file to appear Attached Logs Follow the instructions in the README about capturing and sending logs Environment Information Visual Studio Code Name Version Operating System WindowsNT x VSCode PowerShell Extension Version PowerShell Information NameValue PSVersion PSEditionDesktop PSCompatibleVersions BuildVersion CLRVersion WSManStackVersion PSRemotingProtocolVersion SerializationVersion Visual Studio Code Extensions detailssummaryVisual Studio Code ExtensionsClick to Expandsummary ExtensionAuthorVersion AllAutocompleteAtishayJain bracketpaircolorizer CoenraadS powershellmsvscode pythonmspython todotreeGruntfuggly I love the fact that after having run a script via the debugger the variables and objects are still available in the console But launching the debugger again does not reset the session as well what can cause unintended side effects due to stuff created in the session like background jobs variables other runspaces and so on This is such an big obvious problem for me that I do wonder why nobody seems to bother which in turn makes me think do I simply use it wrong But I am not aware of any way to remove clear and close really everything than can be created opened or assigned in a PoShSession to avoid any potential problems other than killing the terminal manually and lauching a new session So I would like the option that every time the debugger is launched it either resets the session or creates a new one an killing the old Issue Description I am experiencing a problem with uploading bug report from VSCode If you choose to upload report you get something like this When you pick open it opens up properly If you choose copy not so much Attached Logs Follow the instructions in the README about capturing and sending logs Environment Information Visual Studio Code Name Version Operating System WindowsNT x VSCode PowerShell Extension Version PowerShell Information NameValue PSVersion PSEditionDesktop PSCompatibleVersions BuildVersion CLRVersion WSManStackVersion PSRemotingProtocolVersion SerializationVersion Visual Studio Code Extensions detailssummaryVisual Studio Code ExtensionsClick to Expandsummary ExtensionAuthorVersion autorenametagformulahendry azuredarkthemeeddyw beautifyHookyQR bracketpaircolorizer CoenraadS codesettingssyncShan codesnapadpyke darkplusmaterialvangware exceltomarkdowntablecsholmq gistfsvslscontrib githublinkergimenete gitlenseamodio htmlpreviewvscodegeorgealisson markdownallinoneyzhang markdownpreviewenhancedshd wyy markdownshortcutsmdickin materialiconthemePKief moonlightatomiks nebulathemeChirtleLovesDolls pdftomoki powershellpreviewmsvscode projectmanageralefragnani regionutvmi synthwavexfluoromachinewebrender thememonokaiprovscodemonokai vscodehtmlcssecmel vscodemarkdownlintDavidAnson vscodepowermodehoovercj vscodepullrequestgithubGitHub vscodewakatimeWakaTime vscodeyamlredhat xmlDotJoshJohnson BEFORE SUBMITTING A NEW ISSUE PLEASE READ THE TROUBLESHOOTING DOCS IMPORTANT you can generate a bug report directly from the PowerShell extension in Visual Studio Code by selecting PowerShell Upload Bug Report to GitHub from the command palette NOTE If you have both stable aka PowerShell and preview aka PowerShell Preview installed you MUST DISABLE one of them for the best performance Docs on how to disable an extension can be found here The more repro details you can provide along with a zip of the log files from your session the better the chances are for a quick resolution You may also want to record a GIF of the bug occurring and attach it here by dropping the file into the description body System Details To help diagnose your issue the following details are helpful Operating system name and version VS Code version PowerShell extension version Output from PSVersionTable To get this information run the following expression in your Integrated Console and paste the output here inside the backticks below VSCode version code v n VSCode extensionsncode listextensions showversions OutString n PSES version pseditorEditorServicesVersion n PowerShell versionnPSVersionTable OutString If you are running VSCode Insiders use this expression instead and paste the result inside the backticks VSCode version codeinsiders v n VSCode extensionsncodeinsiders listextensions showversions OutString n PSES version pseditorEditorServicesVersion n PowerShell versionnPSVersionTable OutString PowerShell output from above goes here System Details Output VSCode version a de ead f a d f d c x VSCode extensions msvscodepowershellpreview PSES version PowerShell version Name Value PSVersion PSEdition Desktop PSCompatibleVersions BuildVersion CLRVersion WSManStackVersion PSRemotingProtocolVersion SerializationVersion Issue Description Trying to get the directory of the current script using SplitPath Path PSScriptRoot Parent Expected Behaviour Running the same script in ISE gives the expected result Actual Behaviour As you can see in VSCode the result is not the parent Its returned the whole file I have tried other variations such as RootPath SplitPath SplitPath PSScriptRoot Parent Parent RootPath or GetChildItem Path PSScriptRootParent It always returns the full path Attached Logs Follow the instructions in the troubleshooting docs about capturing and sending logs BEFORE SUBMITTING A NEW ISSUE PLEASE READ THE TROUBLESHOOTING DOCS IMPORTANT you can generate a bug report directly from the PowerShell extension in Visual Studio Code by selecting PowerShell Upload Bug Report to GitHub from the command palette NOTE If you have both stable aka PowerShell and preview aka PowerShell Preview installed you MUST DISABLE one of them for the best performance Docs on how to disable an extension can be found here The more repro details you can provide along with a zip of the log files from your session the better the chances are for a quick resolution You may also want to record a GIF of the bug occurring and attach it here by dropping the file into the description body System Details To help diagnose your issue the following details are helpful Operating system name and version VS Code version PowerShell extension version Output from PSVersionTable To get this information run the following expression in your Integrated Console and paste the output here inside the backticks below VSCode version code v n VSCode extensionsncode listextensions showversions OutString n PSES version pseditorEditorServicesVersion n PowerShell versionnPSVersionTable OutString If you are running VSCode Insiders use this expression instead and paste the result inside the backticks VSCode version codeinsiders v n VSCode extensionsncodeinsiders listextensions showversions OutString n PSES version pseditorEditorServicesVersion n PowerShell versionnPSVersionTable OutString PowerShell output from above goes here System Details Output VSCode version a de ead f a d f d c x VSCode extensions msvscodepowershellpreview PSES version PowerShell version Name Value PSVersion PSEdition Desktop PSCompatibleVersions BuildVersion CLRVersion WSManStackVersion PSRemotingProtocolVersion SerializationVersion Issue Description Launch VSCode Close any open files Close VSCode Lauch VSCode The console looks like Open a very basic ps file from a saved workspace The console changes to PowerShell integrated console However the console terminal or whatever youre calling it these days is blank Please note PowerShell Preview extension is installed I have reported the notification bug in If I scroll up I can see your ASCII art There is no prompt C I have to press enter to get a prompt Set focus to the script window Press f to run the script As you can see indentation and output are all over the place Lines merged and strange indentation Even when the output isnt so mangled the output still starts after the prompt C as opposed to ISEs behaviour where it is on its own line Expected Behaviour What I want to see is an output like ISE The output is on a new line at the start of the line with no indentation and the prompt is clean on a new line waiting for the next command Actual Behaviour See Issue description This behaviour isnt something new Its been happening for months or more In both the current and preview version of the PowerShell extension Its finally annoyed me enough to write this Ive also noticed other spurious behaviour For instance I can start typing in the console and it starts at some random position in the previous output not after the C greaterthan symbol as one would expect This behaviour happens on multiple PCs and laptops The examples above have been taken from a laptop freshly installed today with Windows Enterprise Attached Logs Follow the instructions in the troubleshooting docs about capturing and sending logs 