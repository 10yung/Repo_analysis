These changes allowed me to successfully build ardour using the most recent waf Some of them might be weird and will probably need refactoring now or later The miscpy script is the only fragment from the currently used waf that is required because of includes to build ardour and whenif updating the compiled version of waf in this repo it has to be added However its use should be refactored and removed after this pull request is merged All of this should still work with the current waf setup Note On Arch Linux Im using a systemwide waf but this workflow should work with the upstream waf just the same after all Im only telling it where its components are through packaging Now to how I made this build after applying the changes in this pull request making sure that subdirectories can be picked up with local includes touch initpy making ancient misc include available to system installed waf sed e smiscmisc tooldirtools i toolsluadevelgtk ardoursessionutilslibsfstheadlesswscript make custom autowaf include compatible with system installed waf find type f iname wscript exec sed e sfrom waflibextras import autowaffrom tools import autowafg e simport waflibextrasautowaffrom tools import autowafg i These should be all required changes to test this with a system installed waf and incorporating the old miscpy The autowafpy in use is still in place below tools Aftwards the usual waf configure waf build and waf install parameters applies Thank you Fixed a couple of typos in the Spanish documentation Keep Paul Davis original design Having the velocity bar inset from note causes distracting space at beginning of note when viewing a MIDI note that is zoomed out cubasishcorrection This commit changes all the default midi colors to the specific design of the theme The midi color was not used by ardour because there was a supernumerary string which enforces ardour to use the wrong color meter color so the string was deleted Also the default dark color of the selected midi note outline is changing to the white color more visible and matchs to design cleargraycorrection This commit changes all the default midi colors to the specific design of the theme Also the default dark color of the selected midi note outline is changing to the red color more visible and matchs to design cainevillecorrection This commit changes all the default midi colors to the specific design of the theme Also the default dark color of the selected midi note outline is changing to the white color more visible and matchs to design blueberrymilkcorrection Hello Paul people Good day to everybody Ive got three questions This is my attempt to change a theme file as an example If this my example PR is correct and good from your vision may I make the same to others cainville cleargray cubasish illustrations are already prepared Are you planning to add an item midi note selected fill because only the outline of the selected notes are not so visible as it was in ardour x at my view Or may be the outline could be more thick Is it the right place to edit the ardour s theme files I mean the thread or folder or how its correctly called here in github Specifically to Blueberrymilk This commit changes all the default midi colors to the specific design of the theme Also the default dark color of the selected midi note outline is changing to the bright green color more visible and matchs to design Big thanks Implementation details Plugins sorted alphabetically to keep integrity with RecentSession view New Configuration variable maxrecentplugins No additional handling like sorting out Favorites like requested 