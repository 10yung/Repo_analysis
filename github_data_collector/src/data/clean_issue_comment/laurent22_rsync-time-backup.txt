Fixes Tested on FreeBSD OSTYPE is reported as freebsd script expects FreeBSD Super newb here so I hope I am not missing something super obvious When I run your script each file is being written again despite there being an existing copy of the file from a previous backup I also ran out of space on my destination so it appears that auto deletion is also not functioning I tested this out with simple test source directory of MB on the desktop and the destination grew by MB exactly each time I ran it So after three runs the destination folder was MB I havnt customized the default behavior in anyway when I get flags on the script I get the following D numericids links hardlinks onefilesystem itemizechanges times recursive perms owner group stats humanreadable What am I doing wrong advantages of temporary backup name script knows easy which backups are complete no danger to try to resume a completed backup lock can be set early without problems user sees easy which backups are complete setting the lock early prevents concurrent backups more reliable The inprogress mark is set after purging old backups Problem When deleting old backups takes long many backups to purge slow fs because remote mount a new backup can start successfully while the st is still purging backups suggestion create inprogress just after checking if it exists This may have side effect on trying to resume an aborted backup to improve this the backup could get a temporary name preppended and be renamed to the final name when finished see in code check if inprogress exists fnfind INPROGRESSFILE L expire backups fnexpirebackups L create inprogress file echo MYPID INPROGRESSFILE L note also order related defining link dest before purging backups side note DESTDESTFOLDERNOW is already done before purging so the stamp in the folder name may have almost noting to do with the time of its content When doing a weeklymonthly backup with rsynctmbackupsh in a directory that contains approximately backups Ive noticed that it can take upwards of minutes before the backup actually begins with little to no information written to the console After enabling x for the bash script and removing some redirection I think I traced the problem to this line trace upon request which is fnfind DEST type d devnull Should the command on in fact have a maxdepth parameter eg fnfind DEST maxdepth type d devnull Right now the default behavior is to recursively look into each backup folder in the backup directory to look for whether the directory we want to create for the backup exists Is there any particular reason to do this when the directory will be created aside any of the directories traversed by this command updates by introducing cases for different OSes Also includes fixes for and part of Thanks kapitainsky Hello and thanks for this very useful tool Regarding I made a couple changes that under circumstances always wrote to STDERR This is a problem with cron where you usually redirect STDOUT to devnull but want to keep STDERR as is so that you get an email notification when a warning or error occurs The first change was with the df check on SRCFOLDER right after the trailling is stripped In the case of SRCFOLDER the was stripped and df wrote to STDERR because FILE was the empty string The second change was the o UserKnownHostsFiledevnull fixed ssh argument This lead to ssh always writing to STDERR This is part of I would expect people to first setup the ssh access and then use rsynctmbackupsh I cant see a reason in bypassing the local configuration by default There is always the e option of rsync which can be used to set ssh options Best regards Panos I want to back up a folder homeec userrsyncfolder from one machine to another machine Heres the content of the folder excludeme backupFiletxt file txt hellotxt mylinktxt hellotxt The excludeme folder should not be copied to the destination machine Based on this tutorial I created a exclude file excludelisttxt Heres the content of it excludeme After running rsynctmbackupsh i sshmykeypem p homeec userrsyncfolder ec user homeec user excludelisttxt command The folder excludeme appears on the other machine Why does this happen Is there anything wrong with the exclude file Ive also tried excludeme excludeme and excludeme But all of them failed to prevent from copying excludeme folder to another machine Hello and thanks for this very useful tool When you backup the SRCFOLDER var is stripped of the last line and the df call line writes df No such file or directory to STDERR The script continues with the backup but it is not cron friendly since it always writes to STDERR and you cannot do MAILTOpanosexamplecom rsynctmbackupsh mntbackup devnull and only expect emails when something unexpected happens It will always send an email due to the df error Best regards Panos This is mostly useful for smaller embedded Linux systems that may only have dropbeardbclient installed without needing to do a sed replace