Running on Ubuntu VirtualBox client underneath Windows Home Got the following b translationtask Timer Timings Timer annotate s Timer rtypelltype s Timer pyjitpllltype s Timer backendoptlltype s Timer Timer Total s Traceback most recent call last File externalspypyrpythonbinrpython line in module main File homestevepixieexternalspypyrpythontranslatorgoaltranslatepy line in main debugTrue File homestevepixieexternalspypyrpythontranslatorgoaltranslatepy line in debug import traceback MemoryError Makefile recipe for target buildwithjit failed make buildwithjit Error The latest addition to stdlib seems to break pixie startup Going back allows a clean build to succeed so pixie can be started Pixie looks really neat But the Debian build I used to install Pixie on my bit linux Mint machine did not work Could someone fix and test it if it is indeed broken The last instruction under Building with Debian at is make buildwithjit It seems to requests files from the nonexistant folder The session shown below should produce a file called tmpexternalstarbz and indeed it did but it was not really a bz file It was just an ascii file containing the character line Not Found Here is the session make buildwithjit mkdir externals cd externals curl pypytarbz mkdir pypy cd pypy tar jxf pypytarbz stripcomponents Total Received Xferd Average Speed Time Time Time Current Dload Upload Total Spent Left Speed M M k k echo suname mtarbz curl L suname mtarbz tmpexternalstarbz Total Received Xferd Average Speed Time Time Time Current Dload Upload Total Spent Left Speed tar jxf tmpexternalstarbz stripcomponents bzip stdin is not a bzip file tar Child returned status tar Error is not recoverable exiting now make externalsfetched Error Thank you The build process is marked as successful even when the pixie vm is faulty This led to img width altscreen shot at pm src I just tried compiling pixie on a Macbook Pro macOS but couldnt run the resulting pixievm executable It crashed with the following error message pixievm in internal function runloadstdlib in internal function loadns in internal function loadfile in internal function loadreader RuntimeException inst pixiestdlibKeyword Var assoc is undefined Following the instructions to build the executable all I basically did was brew install libuv libffi boost git clone make buildwithjit Heres some additional info about the installed versions brew info libuv libffi boost libuv stable bottled HEAD Multiplatform support library with a focus on asynchronous IO usrlocalCellarlibuv files MB Poured from bottle on at From Dependencies Build pkgconfig automake autoconf libtool sphinxdoc Options withtest Execute compile time checks Requires Internet connection HEAD Install HEAD version libffi stable bottled HEAD kegonly Portable Foreign Function Interface library usrlocalCellarlibffi files KB Poured from bottle on at From Caveats This formula is kegonly which means it was not symlinked into usrlocal because some formulae require a newer version of libffi For compilers to find this software you may need to set LDFLAGS Lusrlocaloptlibffilib For pkgconfig to find this software you may need to set PKGCONFIGPATH usrlocaloptlibffilibpkgconfig boost stable bottled HEAD Collection of portable C source libraries usrlocalCellarboost files MB Poured from bottle on at From Dependencies Optional icu c Options withicu c Build regexp engine with icu support withoutsingle Disable building singlethreading variant withoutstatic Disable building static library variant HEAD Install HEAD version Any idea what caused this Hi as Ive been playing around with Pixie there have been several times when I have wondered what something did and only been able to find sufficient docs in a Clojure counterpart I was wondering how one could go about updating the readthedocs page for future referencenew users I am a college student in between my freshman and sophomore years of school and I am interested in helping improve the projects I find most interesting Any help would be much obliged Added watches and compareandset as requested in issue Includes a protocol IWatch with method withwatch Im still writing the tests so the changes are still provisional Here is a basic example ns badperformancetest require pixietime as time println No issue dotimes i ttime reduce fn nil nil range println Multiarity issue dotimes i ttime reduce fn nil nil range The output is below Elapsed time ms Elapsed time ms Elapsed time ms Elapsed time ms Elapsed time ms Elapsed time ms Elapsed time ms Elapsed time ms Elapsed time ms Elapsed time ms Multiarity issue Elapsed time ms Elapsed time ms Elapsed time ms Elapsed time ms Elapsed time ms Elapsed time ms Elapsed time ms Elapsed time ms Elapsed time ms Elapsed time ms The performance seems to constantly degrade when a multiarity fn is used the current release is over a year old and doesnt have the libmso fix so its broken for me on arch linux Installed pixie today Version is Got the following error Running an x system with GB RAM on Ubuntu LTS stevesteveSatelliteL Dpixie pixie generatedocspxi Error in internal function loadfile in internal function loadreader Running let namespace programarguments println println name namespace println loadns symbol namespace println doseq k v nsmap thens namespace println name k println println iflet m meta deref v do iflet doc doc m println doc println No doc available println whenlet examples examples m println Examples doseq code result examples println println code println when not nil result println result println whenlet signatures signatures m println Signatures println doseq sig signatures println str sig println when and linenumber m file m let file str pixie last stringsplit file m println str file L linenumber m println println No meta data available println in generatedocspxi at let namespace programarguments in pixie function toplevel in generatedocspxi at println name namespace in internal function name in polymorphic function name dispatching on pixiestdlibNil RuntimeException pixiestdlibAssertionException No override for pixiestdlibNil on name in protocol INamed stevesteveSatelliteL Dpixie 