popular for JAVA You rely on some deliberately selected rd party libs but the outbox implementation is part of your own code base I have played with and it feels very much ok I understand that in the monolith world there is less need for a queuing infrastructure but cap supports also in memory transports Nonetheless even in a monolith there is need for retries eg when the integration event handler throws which can be quite configured quite easy in Cap Hi Kamil Very eloquent implementation Really love it Is event sourcing also something you are envisioning for this project Hi kgrzybek first of all thanks for your work I have been going thru the codebase and I have noticed an approach which slightly differs from my own thus I wanted to ask some questions to better understand the drivers reasoning behind it In the application layer there is a lot of dependencies which I usually delegate to infrastructure layer For example event bus related stuff DI modules logging schedulers basically everything that is not Command or CommandHandler Sometimes it happens that in CommandHandler you need something more In that case I usually go for the interface in the application layer implemented in the infrastructure layer Speaking of modules I noticed that in each module there are usually couple of autofac modules eg MediatorModule QuartzModule DataAccessModule What is the reason of that Each csproj has a reference to MicrosoftNETCoreApp would you consider switching that to netstandard I reference the platform at the toplevel such as API CompanyNameMyMeetingsAPI in this case Benefit of that is that it allows my to easily switch the platform and has much less coupling for my application I want to make it clear that Im not trying to say the only valid way to do something is my only righteous way Im more of looking for exchange of thoughts and maybe an improvement in common understanding If you think that something can be extracted to separate issue please do so I didnt want to spam you It has preview status at the moment but quick development form experimental to preview makes me sure that it is good option if someone doesnt enjoy JS Blazor apps are in c Hispeed of web assembly is nice side effect Hey Good job with the project it is always nice to see another DDDCQRS open source projects Have ever you thought about integration with Application Insights It could be good for performingloggingdiagnosticsalerting etc It has worked well in company project especially that AI has possibility to inject into pipeline and add custom headers like CorrelationID