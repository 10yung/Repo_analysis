 Bug Report Im implementing a custom resource putget values to a custom credhub server on implementing the assetsin script I realize that the params of the second jobs get step are not passed via stdin json There just is no paramsKEYsomekeyPREFIX section in the stdin json Steps to Reproduce my testpipeline looks like this resourcetypes name concoursecredhubstoreresourcetype type dockerimage source repository dhofficoncoursecredhubstoreresource tag latest resources name concoursecredhubstoreresource type concoursecredhubstoreresourcetype source credhubclient jumpboxcredhubclientname credhubsecret jumpboxcredhubclientsecret credhubserver jumpboxcredhubserver credhubcacert jumpboxcredhubcacertcertificate prefix concoursemainjobstatetestConcourseCredhubStoreResource jobs name testConcourseCredhubStoreResourceSet serial true serialgroups sync plan put concoursecredhubstoreresource resource concoursecredhubstoreresource params KEY somekey VALUE somekey somevalue optional overrides given prefix from resource PREFIX concoursemainjobstatetestConcourseCredhubStoreResource name testConcourseCredhubStoreResourceGet serial true serialgroups sync plan get concoursecredhubstoreresource passed testConcourseCredhubStoreResourceSet trigger true resource concoursecredhubstoreresource params KEY somekey optional SKIPMISSING false optional overrides given prefix from resource PREFIX concoursemainjobstatetestConcourseCredhubStoreResource but the stdin json of my assetsin just looks like this source credhubcacert BEGIN CERTIFICATEredactedEND CERTIFICATE credhubclient credhubadmin credhubsecret redacted credhubserver prefix concoursemainjobstatetestConcourseCredhubStoreResource version key concoursemainjobstatetestConcourseCredhubStoreResourcesomekey Expected Results Id expect the json passed to assetsin also to contain a params entry beside the source and version entries Actual Results no params entry in assetsin STDIN json Version Info concourse is part of a latest BUCC setup Concourse version v Deployment type BOSHDockerbinary BUCC bosh InfrastructureIaaS vSphere without NSXT Browser if applicable chrome Did this used to work no Hi I want to use concourse as a backend service exposed via an apigateway I plan to have the apigateway act as the authentication and authorization service for the backend services Once the apigateway autheticates a user and gets the authorization token I want to pass that token to the concourse server Is this possible to do with concourse If so could you please refer some documentation for this Thanks Siva If all your workers are busy queued jobs show as running on the dashboard but the logs show All workers are busy at the moment please standby It would be nice if the dashboard showed a status other than running for queued jobs Heres an example Screen Shot at PM Several of those are waiting on a worker to be available only one of them are actually building Guess which one Schedule rerun builds separate from regular scheduler builds and manually triggered so that if a rerun build cannot find its inputs it will not result in blocking the scheduler for that job fixes Fixed the RemoveMissingVolumes GC query to be able to garbage collect missing volumes that are referenced by other volumes Can we experience a valuable enough improvement by porting our Topgun test suite Why The Hypothesis BOSH topgun tests require additional setup that might be too daunting for developers Spinning up VMs is slow and switching to an alternative like dockercompose or K s will speed up the test suite Context First pass candidates Deploy Use Fly GardenClient Psql Client atcshutdowntest buildcontainergctest hijackcontainergctest imageartifacttest imageresourcegctest pipelinedestroyedtest EASY LOOKING resourcechecktest resourcecontainersgctest resourcetypestest resourcevolumesgc volumegctest containersscopedtoteamtest awsssmtest requires additional aws libs Second pass candidates Deploy Use Fly GardenClient Psql Client BOSH ssh to perform startstop of webworker workerlandingtest workerretiringtest workerstallingtest atcloginsession Third pass or may not port Everything above deploying other services credhubtest Notes some tests are slow cause of depending on GC cycles eg buildcontainergctest Upto mins some tests perform checks against the DB and Garden directly Let us know Were happy to help you put together and iterate on a pull request Bug Report Its possible for a panic to occur when initializing a resource cache if the underlying volumes were brutally removed Steps to Reproduce sql EXPLAIN ANALYZE WITH RECURSIVE missingid AS SELECT id FROM volumes WHERE state IN created UNION ALL SELECT vid FROM missing m volumes v WHERE vparentid mid DELETE FROM volumes v WHERE vid IN SELECT id FROM missing Expected Results Lots of things should error but the web nodes shouldnt panic Actual Results The web node panics Additional Context We just need a nil check here Version Info Concourse version v master Deployment type BOSHDockerbinary any InfrastructureIaaS any Browser if applicable na Did this used to work nope Good spaceguid This PR is to integrate Concourse with OPA to enable policy enforcement ability The code change is based on RFC Contributor Checklist Are the following items included as part of this PR Please delete checkbox items that dont apply Unit tests Integration tests if applicable Updated documentation located at Updated release notes located at Reviewer Checklist This section is intended for the core maintainers only to track review progress Please do not fill out this section Code reviewed Tests reviewed Documentation reviewed Release notes reviewed PR acceptance performed New config flags added Ensure that they are added to the BOSH and Helm packaging otherwise ignored for the integration tests for example if they are Garden configs that are not displayed in the help text Signedoffby Krishna Mannem kmannempivotalio Fixes If you have a step that uses an output and input at the same mount path The output will end up being a COW of the resourcecache volume When this output is then used as an input to the next step in the plan we try to create a COW of a COWoutput volume of prev step In newer versions of the kernel this isnt something that is supported With this change we can now achieve the same behavior by making a baggageclaim request using the ImportStrategy Which will create a copy of the output volume by executing a cp command We have a testflight test which catches this user behavior step input someresource output someresource step input someresource Contributor Checklist Unit tests Integration tests if applicable Updated documentation located at Updated release notes located at Reviewer Checklist Code reviewed Tests reviewed Documentation reviewed Release notes reviewed PR acceptance performed New config flags added Ensure that they are added to the BOSH and Helm packaging otherwise ignored for the integration tests for example if they are Garden configs that are not displayed in the help text 