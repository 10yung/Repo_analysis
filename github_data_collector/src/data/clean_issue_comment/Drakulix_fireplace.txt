Specifying family Misc Ohsnapu or family xos Terminus causes a panic Also we REALLY need some kind of error checking for configuring because it was not obvious it was the font that was causing this panic version Library WLC Jun INFO WLC Chose mode x Library Fireplace handler OutputConfig Jun INFO Setting scale for output WLC Jun INFO New output Output id Setting workspace Library WLC Jun INFO EGL context is double buffered Jun INFO EGL version DRI Jun INFO EGL vendor Mesa Project Jun INFO EGL client APIs OpenGL OpenGLES Jun INFO EGL context RGB Jun INFO EGLANDROIDblobcache EGLANDROIDnativefencesync EGLCHROMIUMsynccontrol EGLEXTbufferage EGLEXTcreatecontextrobustness EGLEXTimagedmabufimport EGLEXTimagedmabufimportmodifiers EGLIMGcontextpriority EGLKHRconfigattribs EGLKHRcreatecontext EGLKHRcreatecontextnoerror EGLKHRfencesync EGLKHRgetallprocaddresses EGLKHRglcolorspace EGLKHRglrenderbufferimage EGLKHRgltexture Dimage EGLKHRgltexture Dimage EGLKHRgltexturecubemapimage EGLKHRimage EGLKHRimagebase EGLKHRimagepixmap EGLKHRnoconfigcontext EGLKHRreusablesync EGLKHRsurfacelesscontext EGLEXTpixelformatfloat EGLKHRwaitsync EGLMESAconfiglesscontext EGLMESAdrmimage EGLMESAimagedmabufexport EGLNOKtexturefrompixmap EGLWLbindwaylanddisplay Jun INFO GL version OpenGL ES Mesa Jun INFO GL vendor Intel Open Source Technology Center Jun INFO GLANDROIDextensionpackes a GLANGLEtexturecompressiondxt GLANGLEtexturecompressiondxt GLAPPLEtexturemaxlevel GLEXTblendfuncextended GLEXTblendminmax GLEXTbufferstorage GLEXTclipculldistance GLEXTcolorbufferfloat GLEXTcompressedETC RGB subtexture GLEXTcopyimage GLEXTdiscardframebuffer GLEXTdisjointtimerquery GLEXTdrawbuffers GLEXTdrawbuffersindexed GLEXTdrawelementsbasevertex GLEXTfragdepth GLEXTgeometrypointsize GLEXTgeometryshader GLEXTgpushader GLEXTmapbufferrange GLEXTmultidrawarrays GLEXTocclusionqueryboolean GLEXTpolygonoffsetclamp GLEXTprimitiveboundingbox GLEXTreadformatbgra GLEXTrobustness GLEXTseparateshaderobjects GLEXTshaderframebufferfetch GLEXTshaderframebufferfetchnoncoherent GLEXTshaderintegermix GLEXTshaderioblocks GLEXTshadersamplesidentical GLEXTtessellationpointsize GLEXTtessellationshader GLEXTtextureborderclamp GLEXTtexturebuffer GLEXTtexturecompressiondxt GLEXTtexturecubemaparray GLEXTtexturefilteranisotropic GLEXTtextureformatBGRA GLEXTtexturerg GLEXTtexturesRGBdecode GLEXTtexturetype REV GLEXTunpacksubimage GLINTELconservativerasterization GLINTELperformancequery GLKHRblendequationadvanced GLKHRblendequationadvancedcoherent GLKHRcontextflushcontrol GLKHRdebug GLKHRnoerror GLKHRrobustbufferaccessbehavior GLKHRrobustness GLKHRtexturecompressionastcldr GLKHRtexturecompressionastcsliced d GLMESAshaderintegerfunctions GLNVdrawbuffers GLNVfbocolorattachments GLNVimageformats GLNVreadbuffer GLNVreaddepth GLNVreaddepthstencil GLNVreadstencil GLOESEGLimage GLOESEGLimageexternal GLOESEGLimageexternalessl GLOESEGLsync GLOEScompressedETC RGB texture GLOEScopyimage GLOESdepth GLOESdepthtexture GLOESdepthtexturecubemap GLOESdrawbuffersindexed GLOESdrawelementsbasevertex GLOESelementindexuint GLOESfborendermipmap GLOESgeometrypointsize GLOESgeometryshader GLOESgetprogrambinary GLOESgpushader GLOESmapbuffer GLOESpackeddepthstencil GLOESprimitiveboundingbox GLOESrequiredinternalformat GLOESrgb rgba GLOESsampleshading GLOESsamplevariables GLOESshaderimageatomic GLOESshaderioblocks GLOESshadermultisampleinterpolation GLOESstandardderivatives GLOESstencil GLOESsurfacelesscontext GLOEStessellationpointsize GLOEStessellationshader GLOEStexture D GLOEStextureborderclamp GLOEStexturebuffer GLOEStexturecubemaparray GLOEStexturefloat GLOEStexturefloatlinear GLOEStexturehalffloat GLOEStexturehalffloatlinear GLOEStexturenpot GLOEStexturestencil GLOEStexturestoragemultisample darray GLOESvertexarrayobject GLOESvertexhalffloat GLOESviewportarray Jun INFO GLES renderer initialized thread main panicked at called Optionunwrap on a None value checkoutsrclibcoreoptionrs note Some details are omitted run with RUSTBACKTRACEfull for a verbose backtrace stack backtrace fireplacelibhandlersrenderconrodproviderstatusbarStatusbarHandler as wlcCallbackoutputcontextcreated fireplacelibcallbackvecVecCallbackT as wlcCallbackoutputcontextcreated wlcffioutputcontextcreated wlcoutputsetbackendsurface outputevent updateoutputs activateevent wlcrun fireplacemain This is a quick writeup about the current project status and its ongoing development As many followers are already aware this project as it exists right now will not continue to live on The codebase will get ripped apart as I replace wlc with smithay Motivating this change is that wlc is currently getting deprecated Its main user a i waylandrecreation in C called sway is currently going though similar changes writing their own compositor library Discussion about fireplace status did happened shortly after for reference Note that fireplace is not associated with waycooler another i style rust wayland compositor in any way The issue linked above was a call for participation but waycooler will use wlroots through rusts ffi interface as well Smithay on the other hand is completely written from scratch in rust and as recently passed its first big milestone We are on good progress finishing the next one which will provide hardware acceleration basic XWayland support Clipboard handling Touch support Smithay has reached a state where it is not very competitive yet but good enough to start porting fireplace In the upcoming weeks this will start with the goal to get a basic version running with the configuration and tiling functionality fireplace did provide today New features will most likely be developed once smithay has reached a complete state The current UI features of fireplace will be rewritten as well at a later stage as separate wayland clients Most active development currently happens over at smithays matrix chatroom you may use gitter as well to join the channel One porting starts new issues regarding specific tasks will be created and will allow easy tracking of the overall progress Hi there Im quite excited about the prospect of using Fireplace on FreeBSD However currently it depends on the systemd crate and systemd is very notably not a FreeBSD thing I realize that Fireplace is currently unmaintained as development is focused on Smithay but once the backend here is migrated to Smithay will it be possible to avoid using systemd Hi when I try building the latest version of Firebase I get the following errors x scrot IPC clients should able to connect via a local socket of some sort Confirmation about access should be granted by the user via UI TODO Make sure this cannot be used to DDOS the user Probably achievable with a checkbox something like Dont show requests from this client anymore Enable setting trusted clients in the configuration make it possible to autostart them Protocol will be JSON based TODO Search for some good documentation software Define what we want to expose Different protocolsscopes all differenciate between reading and writing Output API GetSet scale GetSet gamma control GetSet DPMS Set mirroring blocked by Pin workspace blocked by enumerate windows requires window scope Get workspace api requires workspace scope Workspace API getswitch workspace enumerate windows requires window scope get mode api requires mode scope Mode API Fullscreen get statuswindow requires window scope setunset window requires window scope to get id Floating getwindows requires window scope getsetwindowposition requires window scope to get id getsetwindowgeometry requires window scope to get id getsetwindowstack requires window scope maximize requires window scope minimize requires window scope Combined getset filters move window requires window scope to get id Switch switch mode BSP Getmanipulate tree this might be difficult to get right WindowView API allwindows make sure to provide all information available to configuration filters focusunfocus close Lockscreen activatedeactivate Ref Statusbar TODO Maybe support i bars protocol Config getset configuration parameters requires to be useful reload blocked by Sometimes two monitors are not equally important and you maybe have one main monitor and a secondary unimportant smaller one In that case you may wish to constantly show one workspace on the smaller one and switch the output automatically when switching to another This is essentially single workspace mode for one output Allow configuration reloading This will require to store the configuration parameters somewhere global or linked to their respective Outputs I am using this configuration and I cant get the quit to work I expect it to be SuperShiftQ but it does not do that All the other commands seem to work Logging typos in the config file instead of straight up denying should be a far better user experience Decided against that option because there was no easy way to get the ignored keys serdeignored changes that Very cool project Do you plan to add support for tabbed stacked layouts supported by i and recently sway