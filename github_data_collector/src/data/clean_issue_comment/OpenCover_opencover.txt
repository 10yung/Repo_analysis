 My Framework NET NET NET NET NET x NET NET NET NET x NET NET Core x NET Core Something else My Environment Windows or below not truly supported due to EOL Windows Windows x Windows Windows IoT Core Windows Server Windows Server R Windows Server Actual Behavior I use OpenCover version to generate coveragexml and I use ReportGenerator version to convert the XML file into a HTML report but something seems odd in the generated report I initially thought the problem was with ReportGenerator so I raised an issue in their repo but danielpalme seems to think OpenCover is the culprit In short the situation is that I get of branches covered when in fact I have unit tests covering the two scenarios During my investigation of the situation I realized that this problem is most likely due to the fact that my C library targets multiple frameworks and my unit testing projects also targets multiple frameworks If I remove the multitargeting the report correctly reports that I am covering all branches You can read more details in this issue including screenshots to demonstrate the problem C code sample sample coveragexml file and also link to a public GitHub repo that will allow you to easily reproduce the situation No requirement information is available on the project documentation README nor wiki Even if the project has no requirement this information is important for sysadmins and should be written down Could you please add a requirements section in the README file And add info about version numbering being aligned with the runtime support as explained in Please provide the following information when submitting an issue Where appropriate replace the with a X My Framework NET NET NET NET NET X NET NET NET NET NET NET Core NET Core Something else My Environment Windows or below not truly supported due to EOL Windows Windows X Windows Windows IoT Core Windows Server Windows Server R Windows Server I have already X repeated the problem using the latest stable release of OpenCover X reviewed the usage guide and usage document X have looked at the opencover output xml file in an attempt to resolve the issue X reviewed the current issues to check that the issue isnt already known My issue is related to check only those which apply X no coverage being recorded or bit support feature request Expected Behavior OpenCover runs tests and generates code coverage output correctly Actual Behavior When running OpenCover against one of our Test projects I have noticed some odd behavior This is an example project structure ExampleBusinessObjectsLibrarycsproj MB PDB file ExampleUtilsLibrarycsproj MB PDB file ExampleUnitTestscsproj ExampleUnitTestscsproj references both ExampleUtilsLibrarycsproj and ExampleBusinessObjectsLibrarycsproj If I write a unit test in ExampleUnitTestcsproj that calls a function in ExampleUtilsLibrarycsproj and only hits code in ExampleUtilsLibrarycsproj the code coverage output is generated as expected Now if I take that same unit test and hit any code in ExampleBusinessObjectsLibrarycsproj the code coverage output is not generated as expected It sets all code coverage output to out of X ExampleUtilsLibrarycsproj is significantly smaller in size th in size to be exact Logs for failure Steps to reproduce the problem I cant give reproduce code for this and the steps are pretty simple Im just running the tool against one of our unit test projects Same command is always used C packages OpenCover tools OpenCoverconsoleexe registeruser targetvstestconsoleexe targetargsExampleUnitTestsdll outputcoveragexml X reviewed the usage guide and usage document again because we know you probably didnt do it the first time sample code or link to repositorygist is available support is much faster this way Since there is already a opencoverportable Chocolatey package the default naming convention would be to rename the OpenCover package to opencoverinstall and let the OpenCover package have a dependency on opencoverinstall I have website hosted in IIS Windows Version with Application Pool Identity as Custom account and trying to attach OpenCover in debug mode to get the code coverage Problem After attaching the Opencoverexe to w wpexe process when I tried to launch website with custom account Application Pool Identity from IIS getting the below error Note This works perfect when using Application Pool used as ASPNET V Integrated But with custom account Application Pool Identity Error Details From the windows log The World Wide Web Publishing Service WWW Service did not register the URL prefix for site The necessary network binding may already be in use The site has been disabled The data field contains the error number From the browser HTTP Error Forbidden The specified request cannot be processed in the application pool that is configured for this resource on the Web server Steps followed Website setup In IIS I created an application pool with Application Pool Identity as Custom account Which prompts to enter username and password NOT with Buildin account like ApplicationPoolIdentity which is default Example TestAppPool Identity as custom account I added new website under Default Web Site Example Website name Test In the Test Website Settings updated the Application Pool as TestAppPool Created in step Commands Stopping the w svc before opencover command C WINDOWS system net stop w svc OpeCover commands Open the command window as administrator Run the command C opencover OpenCoverConsoleexe targetC Windows System inetsrv w wpexe targetargsdebug s targetdirC Project bin registeruser outputC opencoverxml Executing C Windows System inetsrv w wpexe Press Q to shutdown the process Now start C WINDOWS system net start w svc Browse the website startup page from IIS It would be nice to have a VSTS task readly available to execute tests with OpenCover If you agree I can do it and place within this repository just tell me where would be the best place Report Generator has a folder in srcAzureDevopsTask for exemple My issue is related to check only those which apply no coverage being recorded or bit support x feature request My Framework NET NET NET NET NET NET NET NET NET NET NET Core NET Core x Something else My Environment Windows or below not truly supported due to EOL Windows Windows x Windows Windows IoT Core Windows Server Windows Server R Windows Server I have already repeated the problem using the latest stable release of OpenCover x reviewed the usage guide and usage document have looked at the opencover output xml file in an attempt to resolve the issue x reviewed the current issues to check that the issue isnt already known My issue is related to check only those which apply no coverage being recorded or bit support x feature request Expected Behavior Actual Behavior Fill me in Steps to reproduce the problem reviewed the usage guide and usage document again because we know you probably didnt do it the first time sample code or link to repositorygist is available support is much faster this way Please provide the following information when submitting an issue Where appropriate replace the with a X My Framework NET NET NET X NET NET NET NET NET NET NET NET Core NET Core Something else My Environment Windows or below not truly supported due to EOL Windows Windows X Windows Windows IoT Core Windows Server Windows Server R Windows Server I have already X repeated the problem using the latest stable release of OpenCover X reviewed the usage guide and usage document have looked at the opencover output xml file in an attempt to resolve the issue reviewed the current issues to check that the issue isnt already known My issue is related to check only those which apply no coverage being recorded or bit support feature request Expected Behavior All test passed Actual Behavior When I run following command in CMD against my NUnit test I get failures of test cases because of Could not load file or assembly MyReference or one of its dependencies The system cannot find the file specified exception packages OpenCover tools OpenCoverConsoleexe target packages NUnitConsoleRunner tools nunit consoleexe registerPath targetargsMyUnitTestsnunit configDebug resultMyUnitTestsUnitTestxml outputOOPCollectorOpenCoverxml filter Te Test Demo Trace But if I run nunit consoleexe successfullyall passed in CMD directly like packages NUnitConsoleRunner tools nunit consoleexe UnitTests bin Debug MyUnitTestsdll I checked MyReferencedll after compilered unit test project the MyReferencedll is in the same folder where the MyUnitTestsdll is in The MyUnitTestsnunit file is NUnitProject Settings activeconfigDebug Config nameDebug assembly pathUnitTests bin Debug MyUnitTestsdll Config Config nameRelease assembly pathUnitTests bin Release MyUnitTestsdll Config NUnitProject Steps to reproduce the problem reviewed the usage guide and usage document again because we know you probably didnt do it the first time sample code or link to repositorygist is available support is much faster this way We have two solutions so we would have to run the separate commands for each of the solution by specifying the solution path in targetdir Without specifying targetdir we wouldn t get code coverage is sonarcube Also i have to provided output pathSame path as given while initializing sonarqube in both batch commands So while executing the batch command for the first solution it will calculate code coverage properly But while executing the batch command for the second solution it doesn t consider the previously calculated code coverage as result of this we are seeing only the result of second solution in both CodeCoverageSonarCube and TestResultstrxJenkins dashboard Ive used mergeoutput option but it is not merging the result bat OpenCoverConsoleexe targetdirpwd Central bin outputpwd opencoverxml registeruser targetvstestconsoleexe targetargspwd Central bin CentralTestdll loggertrxLogFileNamepwd TestResults vstestresultstrx mergeoutput bat OpenCoverConsoleexe targetdirpwd Remote bin outputpwd opencoverxml registeruser targetvstestconsoleexe targetargspwd Remote bin RemoteTestsdll loggertrxLogFileNamepwd TestResults vstestresultstrx mergeoutput Am i missing anything Please provide the following information when submitting an issue Where appropriate replace the with a X My Framework NET NET NET NET NET NET NET NET X NET NET NET Core NET Core Something else My Environment Windows or below not truly supported due to EOL Windows Windows X Windows Windows IoT Core Windows Server Windows Server R Windows Server I have already X repeated the problem using the latest stable release of OpenCover X reviewed the usage guide and usage document have looked at the opencover output xml file in an attempt to resolve the issue reviewed the current issues to check that the issue isnt already known My issue is related to check only those which apply X no coverage being recorded or bit support feature request Expected Behavior code coverage should not be zero as it is non zero on other tool it should contain code classes it showing coverage for test classes Actual Behavior code coverage is showing not including code classes Steps to reproduce the problem X reviewed the usage guide and usage document again because we know you probably didnt do it the first time sample code or link to repositorygist is available support is much faster this way Hello I ve looked at the Usage Guide both the wiki page and the PDF but neither of them explain how to get started They both assume that the user already knows how to obtain and run OpenCover I ve added the OpenCover nuget package to my solution but I could not figure out how to go from there The Usage Guide talks about a console application but there is no console application anywhere that I could find Please provide some stepbystep instructions on how to get code coverage on a project that already has unit tests in it Do not assume that the user already knows OpenCover Give clear and precise instructions starting from a project with unit tests but without OpenCover already installed or familiar This would be really great so I can try this out Thank you