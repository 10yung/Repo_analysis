Hello In we are making a denybydefault lint To be forward compatible with that heres a simple fix Rustdoc has moved from using hoedown to using pulldowncmark There are many upsides to using pulldowncmark but the most practical reason to move to it is to remove reliance on the C compiler necessary to build hoedown making building on windows much easier This large set of commits was a fun sideproject of mine for a while now These commits are divided by minimum version of Rust necessary to make subsequent dependency updates work in order to make grokking them straightforward Feel free to be picky about what you want to keep but Ive tried to be as minimal as I thought prudent while still netting nice gains for maintenance Each individual commit has had cargo test done locally and then had CI run against it There should be only be concerns about where one wants to draw the line in terms of minimum Rust support versus how uptodate one wants to be with modern Rust Thanks for making this great tool I hope that this makes your life easier fix Currently cargotargetbymessage calls wait on the child process before reading its stdout This causes a deadlock Is it maintained by original developer If no it may be worth to explicitly mark it as unmaintained in README or invite some other maintainer ie convert Github repo to org and add contributors add owners on cratesio Something like cargoscript export myfilecsr output should write outputCargotoml and outputsrcmainrs When running cargo script I get this warning sh cargomake INFO Execute Command cargo script varfoldersdmhk h c n rg cvsn d kjd gnTcargomakeYso d VD rs Updating cratesio index Compiling Yso d VD v UsersjackcargoscriptcachefileYso d VD b c e c warning crate Yso d VD should have a snake case name such as yso d vd note warnnonsnakecase on by default I think it would be nice to silence this warning by ensuring the generated crate name is snakecase Perhaps even just lowercase will suffice It would be great if the embedded dependencies cargodeps could also enable features on these dependencies Currently from what I can tell cargo script cannot be used if you need a nondefault feature of an external dependency reqwestrs rust cargodeps reqwest extern crate reqwest fn main println reqwestget Above file dont run on executing cargo script reqwestrs After build process it hangs and does not run binary command output bash Compiling reqwest v HOMEcargoscriptcachefilereqweste a bde c Finished release optimized targets in s get stuck here in case of running with buildonly same happens