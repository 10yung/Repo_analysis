Describe the bug Rendering a variable size collection with vgfor shows the wrong number of elements when the size of the collection decreased after an update Software Versions Vugu version v fe e eb ce Go version go linuxamd Browser and version Chrome Version Official Build bit To Reproduce The vugu file below illustrates the issue div button clickcMake eventMake button button clickcMake eventMake button div vgforn range cNumbers vgkeyn div vghtmlndiv div div script typeapplicationxgo import fmt log githubcomvuguvugu type Root struct Numbers string vugudata func c Root Makecnt int event vuguDOMEvent eventPreventDefault go func ee eventEventEnv eeLock defer eeUnlockRender logPrintfshow d cnt cNumbers make string cnt for i i cnt i cNumbers i fmtSprintfNumber d i script When clicking Make two items are shown When clicking Make six items are shown When clicking Make again five items are shown Expected behavior When clicking Make two items are shown When clicking Make six items are shown When clicking Make again two items are shown Describe the bug When switching back and forth between views selected by using vgif the DOM events of revisited views wont fire anymore Software Versions Vugu version v fe e eb ce Go version Browser and version Official Build bit Linux To Reproduce The vugu file below illustrates the issue html head titleTest pagetitle head body div label vghtmlctextlabel div vgifcActiveView view input typetext keyupcUpdateevent h This is view h button mouseupcSwitchViewevent view Switchbutton div div vgifcActiveView view input typetext keyupcUpdateevent h This is view h button mouseupcSwitchViewevent view Switchbutton div div body html script typeapplicationxgo type Root struct ActiveView string vugudata text string var CurrentView view func c Root BeforeBuild cActiveView CurrentView func c Root SwitchViewevent vuguDOMEvent viewname string fmtPrintlnswitching to viewname go func ee eventEventEnv eeLock CurrentView viewname ctext eeUnlockRender func c Root Updateevent vuguDOMEvent fmtPrintlnupdating ctext eventPropStringtarget value script Expected behavior I expected the DOM events attached to buttons and input box to continue working after switching back to a previously rendered view It would be better practice to be able to instantiate components which have a New method by calling that method The main question is the syntax If we can come up with an appropriate syntax that isnt at odds with everything else and isnt too clumsy this should be implemented In addition to another round of size optimization should be done const folding for strings tag names and attributes there are a bunch of places tag names are used we should try to optimize that size maybe the Vugu library could contain or have a sub package with all the tag names as consts and we use that to deduplicate have to be careful about how this is done test if folding the strings into one is better or if having each as a const allows the unused ones to be left out the difference between multiple similar tag constructions might be useful to compress most programs construct a lot of text nodes and simple tags if these could be made into the most compact form possible the binary representation i mean text compression depending on the size of the decoder it may or may not be smart to use a slow compression algorithm to compress this text we d need to analyze how much of it there is and how well it compresses maybe not for tag names but for large blocks of text it could be useful verify that there are not unused functions in the default Go binary There shouldnt be but this is worth double checking size analysis tool to whatever extent is feasible there is no way right now to tell what is causing the bloat check out the Brotli compressor dev server and also easy serving separately static wasm binary precompressed with brotli I also didnt see a way to enable Brotli on Github Pages but its probably worth the effort to host the wasm binary serving separately so we can get faster page loads for vuguorg as well as provide an example of how this is can be done in production try to remove large packages from core Vugu fmt is a prime example there may be others provide a suggested simple logging mechanism that doesnt take up much space perhaps just telling people to println is fine or maybe we need a vlog package with a Print method that doesnt incur a lot of the same overhead as the full log and fmt packages if we can compress or CDN or something the rendererjsscriptjs that is another k we can do something about What we have right now where we embed it in every executable is convenient but not particularly size efficient rendererjsscriptmakergo could also try using an uglify tool to reduce size that way see For example a new child component is needed for appending in rootvuguparent component I see that vgif can be used for visible or not but that would occupy running resource Another case is to replace one child component with the other in parent component to show a new page Thanks Describe the bug With the latest refactor the stylesheets are added to the head element during a synchronization mechanism This creates a quick flickering because the page is first rendered wo the style applied then rerendered with it Software Versions Vugu version d cd bcee c d f d e b a e Go version Browser and version Brave Version Chromium Official Build unknown bit To Reproduce Create a rootvugu with a big stylesheet like and display it html head link relstylesheet hrefbulmamincss head body pTESTp body html You should see a quick flickering on the TEST text rendering Expected behavior No flickering Additional Notes If instead of a local file you use an URL the flickering appears only the first time but then it seems the browser cache is fast enough to erase it Describe the bug Inside a loop when using value or key variable inside a event attribute like click the last value of keyvalue of the loop is always used because they are not captured Software Versions Vugu version d cd bcee c d f d e b a e Go version Browser and version Brave Version Chromium Official Build unknown bit To Reproduce A PR will follow with a failing test case Expected behavior keyvalue inside event attribute should keep their value at the moment they are used Additional Notes Theres a TODO for that but I have no idea on how to achieve that properly The sample wasmtestsuitetest prop is very helpful A child component can let me get its value by eventPropStringtarget value in the child component events code If the component has no event how can I get its value And how can I pass the component value to its rootparent component Thanks for any information Good job Thanks Any plan about updating documents Q JS Property Assignment Syntax Example input typecheckbox checkedfalse Should before be deleted I means no closed label is needed for input html element Errors still appear after I run go run and access it by browser even if I delete the above Q New and Improved DOM Event Handling Example input typetext changedcHandleChangedevent This is really cool for having resolved my prior question partly at In my opinion Vugu Event click stands for JS Event onclick so JS Event onchange should be written as change in Vugu file Your sample code defined unknown JS Event onchanged and eventPropString returned nothing New updated documents are expected eagerly Thanks Good job 