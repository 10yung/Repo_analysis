GreLI Current svgo master fails to build Travis CI on node v x PR for node v fixworkaround GreLI This PR adds a workaroundfix for selector exception handling in node v This fixes the currently failing build of current master Travis node v The reason is that in node v the constructor property of an exception that is thrown by cssselect when a selector doesnt match which normally happens all the time is just Error instead of SyntaxError All exceptions other than SyntaxError are rethrown but when the constructor is just Error in node v one is unable to differentiate As an alternative for node v the exception message is matched by the error message How to use with expo web I am build a reactnative application using expo sdk and they advise to use reactnativesvg in order to use svg within expo I went through the expo guide and did expo install reactnativesvg and read the reactnativesvg install guide I add to edit my appjson and create metroconfigjs Expected I expect svg to be important as svg in the web Result it only import them as react component on iOS and Android On the web I have consollogSvg staticmedialogo cf bsvg Reproduction bash git clone cd expobugreports git checkout issue npm i npm test npm run web Other I have created webpackconfigjs within my expo project and did bash const createExpoWebpackConfigAsync requireexpowebpackconfig moduleexports async functionenv argv const config await createExpoWebpackConfigAsyncenv argv consolelogJSONstringifyconfigmodulerules null return config This is the result of the consolelog json parser requireEnsure false oneOf test use homedkaworkspacetestnativenodemoduleshtmlloaderindexjs exclude homedkaworkspacetestnativeweb test use loader homedkaworkspacetestnativenodemodulesurlloaderdistcjsjs options limit name staticmedia name hash ext test use loader homedkaworkspacetestnativenodemodulesbabelloaderlibindexjs options babelrc false configFile true cacheCompression true cacheDirectory homedkaworkspacetestnativeexpowebcachedevelopmentbabelloader cacheIdentifier babelcache filename homedkaworkspacetestnativefoobarjs cwd homedkaworkspacetestnative sourceFileName homedkaworkspacetestnativefoobarjs babelrc false configFile false passPerPreset false envName development root homedkaworkspacetestnative plugins presets dirname homedkaworkspacetestnative file request babelpresetexpo resolved homedkaworkspacetestnativenodemodulesbabelpresetexpoindexjs caller bundler webpack platform web mode development sourceType unambiguous root homedkaworkspacetestnative compact false test use loader homedkaworkspacetestnativenodemodulesurlloaderdistcjsjs options limit name fonts name ext include homedkaworkspacetestnative homedkaworkspacetestnativenodemodulesreactnativevectoricons homedkaworkspacetestnativenodemodulesexpovectoricons test use homedkaworkspacetestnativenodemodulesexpowebpackconfignodemodulesstyleloaderindexjs homedkaworkspacetestnativenodemodulescssloaderdistcjsjs loader homedkaworkspacetestnativenodemodulesfileloaderdistcjsjs exclude options name staticmedia name hash ext I think it miss svgrwebpack but I expected it to be configured by default on expo I have added a svgrwebpack rules but it still didnt work configmodulerulespush test svg use loader svgrwebpack options native true Questions What is the native true options for couldnt find in the doc Is there anything else to configure in order to get proper import Answers Is it possible for the user of Expo to extend Expos Webpack config Yes it is possible as described here That way you could add the svgrwebpack dependency and configure it I have already tried and it does not work at all see comment here Basically this is how my webpackconfigjs looks like The whole reproduction which is an expo blank project nothing more can be run bash git clone cd expobugreports git checkout issue npm i npm test npm run web Without the webpackconfigjs at least we can use the require return in img while with svgrwebpack we cant error remains the same Related issues As the title states the plugin reusePaths implicitly depends on removeXMLProcInst being enabled I think this should be at least documented better fixed If a document has an XML processing instruction and the plugin removeXMLProcInst is disabled then said element is preceding the root element which the implementation of the reusePaths does not properly handle This causes the following crash TypeError Cannot read property splice of undefined at moduleexportsJSAPIspliceContent REDACTEDnodemodulessvgolibsvgojsAPIjs at Objectexportsfn REDACTEDnodemodulessvgopluginsreusePathsjs at REDACTEDnodemodulessvgolibsvgopluginsjs at ArrayforEach anonymous at full REDACTEDnodemodulessvgolibsvgopluginsjs at REDACTEDnodemodulessvgolibsvgopluginsjs at ArrayforEach anonymous at moduleexports REDACTEDnodemodulessvgolibsvgopluginsjs at REDACTEDnodemodulessvgolibsvgojs at SAXParsersaxonend REDACTEDnodemodulessvgolibsvgosvg jsjs The problem is here I believe that with the attached SVG if the transforms are preserved I should be able to use reusePaths to make symbols for identical paths However it seems like the transforms are always collapsed so the paths are modified so theyre no longer identical svgo disableconvertTransformcollapseGroup enablereusePaths inputbsvg outputtestsvg bsvgzip Fix the bug Vue failed to publish Hey GreLI and team Just wanted to reach out about funding your work on svgo transitivebullshit and I are both open source maintainers and were exploring new ways to make OSS funding a viable source of income Were currently looking at building ratelimited SaaS APIs on top of existing OSS libraries reserving the majority of profits for the original authors Weve built a few at this point but want to keep adding more I think svgo would be a great fit and Id love to build a SaaS API on top of it Wed handle the initial dev as well as on going auth billing and support so you wouldnt have to do anything Looking forward to hearing your thoughts Fixes By checking whether there are any defs before making an element it doesnt create an empty defs element Input SVG svg svg viewBox xmlns g stroke fillnone path dM a z path dM a z g svg Command svgo i tmpsvg o enablereusePaths multipass Result Error in parsing SVG Unbound namespace prefix xlink Line Column Char Using a CSS custom property as a fallback for another property see below seems to cause an infinite loop optimize doesnt return Example js const SVGO requiresvgo const x new SVGO plugins convertStyleToAttrs true works with false xoptimize svg path stylefillvarspectrumalertsuccessiconcolor varspectrumglobalcolorgreen dM a l a L l a l A z svg thenconsolelog 