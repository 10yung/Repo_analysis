All other dotnet commands take the folder or file of the projectsolution as the first position argument dotnet format requires a w flag to specify the project to act on Consider conforming interface to the rest of the dotnet tools Other dotnet tool interface examples dotnet build Source dotnet build SourceMyProjectcsproj dotnet run Source dotnet publish Source dotnet test Test Dotnet format expected interface dotnet format Source Dotnet format actual interface dotnet format w Source Version of the tool no longer has the ffolder option but it still states that it does in readme Having this available as a library would be great for homegrown tools We do some code generation with razor and currently format the resulting string with csharp var contents RazorCompileRenderStringAsyncname template modelGetAwaiterGetResult var tree CSharpSyntaxTreeParseTextcontents var root treeGetRootNormalizeWhitespaceindentation t n return rootToFullString It would be great if we can instead use something like this csharp var formatted new CsharpFormatterpathtoeditorconfigfileFormatStringcsharpstring The formatter is not working for web application project I am seeing the following output The version that I am using is c be ad e ed e e dd fd C codedotnetformat files presentation web proj aboutaspxcs w presentation web proj webapplicationcsproj v diag fs Formatting code files in workspace C code prism presentation web proj webapplicationcsproj Loading workspace Complete in ms Determining formattable files Complete in ms Running formatters Analyzing code style Analysis complete in ms Complete in ms Formatted of files Format complete in ms Recently added format tool v had been working in our solution workflow on a testing basis without issue for over a week until this error showed up halfway through a build run Unhandled exception SystemAggregateException One or more errors occurred Specified argument was out of the range of valid values Parameter name start SystemArgumentOutOfRangeException Specified argument was out of the range of valid values Parameter name start at MicrosoftCodeAnalysisTextTextSpanctorInt start Int length at MicrosoftCodeAnalysisTextChangedTextMergeImmutableArray oldChanges ImmutableArray newChanges at MicrosoftCodeAnalysisTextChangedTextMergeIReadOnlyList changeSets at MicrosoftCodeAnalysisTextChangedTextGetChangeRangesSourceText oldText at MicrosoftCodeAnalysisCSharpCSharpSyntaxTreeWithChangedTextSourceText newText at MicrosoftCodeAnalysisDocumentStateIncrementallyParseTextAndVersion newTextAndVersion TreeAndVersion oldTreeAndVersion CancellationToken cancellationToken at MicrosoftCodeAnalysisDocumentStateIncrementallyParseTreeAsyncValueSource oldTreeSource ValueSource newTextSource CancellationToken cancellationToken End of inner exception stack trace at MicrosoftCodeAnalysisDocumentStateGetSyntaxTreeAsyncCancellationToken cancellationToken at MicrosoftCodeAnalysisDocumentGetTextChangesAsyncDocument oldDocument CancellationToken cancellationToken at RoslynUtilitiesTaskExtensionsWaitAndGetResultCanCallOnBackground T Task task CancellationToken cancellationToken at MicrosoftCodeAnalysisWorkspaceApplyChangedDocumentProjectChanges projectChanges DocumentId documentId at MicrosoftCodeAnalysisWorkspaceApplyProjectChangesProjectChanges projectChanges at MicrosoftCodeAnalysisMSBuildMSBuildWorkspaceApplyProjectChangesProjectChanges projectChanges at MicrosoftCodeAnalysisWorkspaceTryApplyChangesSolution newSolution IProgressTracker progressTracker at MicrosoftCodeAnalysisMSBuildMSBuildWorkspaceTryApplyChangesSolution newSolution IProgressTracker progressTracker at MicrosoftCodeAnalysisToolsCodeFormatterFormatWorkspaceAsyncFormatOptions options ILogger logger CancellationToken cancellationToken in srcCodeFormattercsline at MicrosoftCodeAnalysisToolsProgramRunString workspace String verbosity Boolean dryRun Boolean check String files IConsole console in srcProgramcsline at SystemCommandLineInvocationCommandHandlerGetResultCodeAsyncObject value InvocationContext context at SystemCommandLineInvocationInvocationPipelinecDisplayClass InvokeAsyncb dMoveNext End of stack trace from previous location where exception was thrown at SystemCommandLineInvocationInvocationExtensionscUseParseErrorReportingb dMoveNext End of stack trace from previous location where exception was thrown at SystemCommandLineBuilderCommandLineBuilderExtensionscDisplayClass UseVersionOptionb dMoveNext End of stack trace from previous location where exception was thrown at SystemCommandLineInvocationInvocationExtensionscUseSuggestDirectiveb dMoveNext End of stack trace from previous location where exception was thrown at SystemCommandLineInvocationInvocationExtensionscUseDebugDirectiveb dMoveNext End of stack trace from previous location where exception was thrown at SystemCommandLineInvocationInvocationExtensionscUseHelpb dMoveNext End of stack trace from previous location where exception was thrown at SystemCommandLineInvocationInvocationExtensionscUseParseDirectiveb dMoveNext End of stack trace from previous location where exception was thrown at SystemCommandLineInvocationInvocationExtensionscRegisterWithDotnetSuggestb dMoveNext End of stack trace from previous location where exception was thrown at SystemCommandLineInvocationInvocationExtensionscUseExceptionHandlerb dMoveNext Inner Exception SystemArgumentOutOfRangeException Specified argument was out of the range of valid values Parameter name start at MicrosoftCodeAnalysisTextTextSpanctorInt start Int length at MicrosoftCodeAnalysisTextChangedTextMergeImmutableArray oldChanges ImmutableArray newChanges at MicrosoftCodeAnalysisTextChangedTextMergeIReadOnlyList changeSets at MicrosoftCodeAnalysisTextChangedTextGetChangeRangesSourceText oldText at MicrosoftCodeAnalysisCSharpCSharpSyntaxTreeWithChangedTextSourceText newText at MicrosoftCodeAnalysisDocumentStateIncrementallyParseTextAndVersion newTextAndVersion TreeAndVersion oldTreeAndVersion CancellationToken cancellationToken at MicrosoftCodeAnalysisDocumentStateIncrementallyParseTreeAsyncValueSource oldTreeSource ValueSource newTextSource CancellationToken cancellationToken and ends with Failed exitCode commanddotnet format w slnname v diag Several attempts resulted in the same result including with the check flag First guess is that this is an error within dotnetformat as none of the files currently being processed have a method with a parameter named start Dropping the version back to v resolved the issue for us but wanted to make sure this issue got logged Configuration for diagnostic severity can now be expressed in editorconfig files dotnet format should be able to run diagnostics and apply fixes for those of a specified severity As a first step dotnet format could support the known set of CodeStyle diagnostics and fixes in Roslyn As a further enhancement it could run Analyzers installed via NuGet Using files to format a single file doesnt work dotnet format files Ice Collectionscs Could not find a MSBuild project file or solution file in D icemaster csharp src Specify which to use with the workspace option dotnetformat version f dc b f f f f If any active code fix contains a CS C or BC Visual Basic diagnostic ID in the set of supported diagnostics we need to make sure these compiler diagnostics are gathered Filed as a followup to This is an automatically generated pull request from master into featureanalyzers bash git fetch all git checkout mergesmastertofeatureanalyzers git reset hard upstreamfeatureanalyzers git merge upstreammaster Fix merge conflicts git commit git push upstream mergesmastertofeatureanalyzers force Once all conflicts are resolved and all the tests pass you are free to merge the pull request Im working on a tool that takes the output from a dry run and reports on it Right now Im having to parse this with a regex to get the file path line number and message Is there a way to output this as json or to write my own output formatter and use it as a plugin