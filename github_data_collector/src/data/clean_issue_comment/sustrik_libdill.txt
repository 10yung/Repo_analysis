Apparently the Cygwin platform is not supported as compiling ctxc results in CC libdilllastacklo CC libdilllactxlo ctxc error error Cannot determine which thread is the main thread error Cannot determine which thread is the main thread ctxc In function dillctxterm ctxc warning implicit declaration of function dillismain did you mean dillclean Wimplicitfunctiondeclaration ifdillismain dillmain NULL dillclean make Makefile libdilllactxlo Error Is there any workaround for this Some research brought up the function pthreadequal as the portable way to compare thread IDs Of course this would mean that some initialisation is required to make sure the ID of the main thread is stored For the moment my na ve workaround to use pthreadself as with the sun case works for my current very limited use case connecting programs via TCP Hello Martin Is there a reason why happy eyeballs is not exported Id be happy to fix but not sure if you wanted to keep it private for a reason Sincerely James Allows to configure the default stack size when it is not specified by the application Also allows to configure the max number of stacks kept in cache This patch is licensed under the terms of the MIT License The PR is supposed to address the issue Tested with gcc version gcc GCC Code c include libdillh include asserth coroutine void empty int main int all bundle assertall bundlegoall empty asserthcloseall When trying to compile bash gymmasssorlagymmasssorladesktop gcc mainc stdc ldill pthread In file included from mainc mainc In function main mainc error expected before token bundlegoall empty mainc error expected before token bundlegoall empty mainc error expected before volatile bundlegoall empty gymmasssorlagymmasssorladesktop gcc mainc stdc ldill pthread In file included from mainc mainc In function main mainc error expected before token bundlegoall empty mainc error expected before token bundlegoall empty mainc error expected before volatile bundlegoall empty gymmasssorlagymmasssorladesktop gcc mainc stdc ldill pthread In file included from mainc mainc In function main mainc error expected before token bundlegoall empty mainc error expected before token bundlegoall empty mainc error expected before volatile bundlegoall empty But everything works without the stdX option Is this a bug in the LibDills source code I dont know if you are interested in some QuickCheck property tests I am studying propertybased testing using QuickCheck and I choose libdill as one of my test projects I have written a few tests for the channel interface based on the tests in testschanc yet I havent uncovered any bugs Failure shell armlinuxmusleabigcc I c ipaddrc o libdilllaipaddro In file included from ipaddrc ipaddrc In function dillipaddrremotes dnsdnsh error lvalue required as unary operand define dnsopts dnsquietinitstruct dnsoptionsDNSOPTSINITVAARGS ipaddrc note in expansion of macro dnsopts dilldnshosts dilldnshints NULL dnsopts rc gcc I c ipaddrc o libdilllaipaddro Compiler versions shell armlinuxmusleabigcc version armlinuxmusleabigcc GCC Copyright C Free Software Foundation Inc This is free software see the source for copying conditions There is NO warranty not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE gcc version gcc Ubuntu ubuntu Copyright C Free Software Foundation Inc This is free software see the source for copying conditions There is NO warranty not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE Ive only tested with these two compilers For example add some api like dilltcpgetfd by using it it provides the possibility to do something like ioctl ioctldilltcpgetfds SIOCOUTQ pending The test code is below include stdioh include libdillh static dillcoroutine void test void int ret whiledillmsleepdillnow printftest d n ret static int bndl static int socket static dillcoroutine void testprocesstxvoid while if dillbsendsocket Hello n break if dillmsleepdillnow break static dillcoroutine void testprocessrxvoid uint t c whiledillbrecvsocket c printfrx x x n c printf testprocessrx done n static dillcoroutine void testtcpokvoid struct dillipaddr addr if dillipaddrremote addr dillnow printfserver addr not reachable n return socket dilltcpconnect addr dillnow if socket printfserver connect failed n return dillbundlegobndl testprocesstx testprocessrx dilltcpclosesocket static dillcoroutine void testtcpfailedvoid struct dillipaddr addr if dillipaddrremote addr dillnow printfserver addr not reachable n return socket dilltcpconnect addr dillnow if socket printfserver connect failed n return dillbundlegobndl testprocessrx testprocesstx dilltcpclosesocket int mainvoid bndl dillbundle dillbundlegobndl test dillbundlegobndl testtcpok dillbundlegobndl testtcpfailed dillmsleepdillnow dillhclosebndl return testtcpok is the ok case the dillbrecv is in the same dillcoroutine whith dilltcpconnect When dillhclosebndl invoked then testprocessrx done printed testdill test test test rx x rx x rx x rx x rx x rx x rx x rx x rx x a test test test test test test testprocessrx done testtcpfailed is the failed case the dillbrecv is run in another dillcoroutine When dillhclosebndl invoked the testprocessrx done not printed but assert failed in fdc testdill test test test test test rx x rx x rx x rx x rx x test test test test Assert failed rc fdc Aborted 