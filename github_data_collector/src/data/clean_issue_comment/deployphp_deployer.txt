related to Executing task deployshared export APPLICATIONENVtest if d varwwwdimautashareddatacache then echo true fi true export APPLICATIONENVtest rm rf varwwwdimautareleases datacache export APPLICATIONENVtest mkdir p dirname varwwwdimautareleases datacache export APPLICATIONENVtest ln nfs relative varwwwdimautashareddatacache varwwwdimautareleases datacache ln target varwwwdimautareleases datacache is not a directory No such file or directory deployphp config i have php addshareddirs datacache addwritabledirs datacache it seems dirname varwwwdimautareleases datacache return upper dir varwwwdimautareleases data and created only it recursively so the cache subfolder is missing and symlink fails Deployer As the title says we came in this morning to builds failing with this error PHP Parse error syntax error unexpected in pharusrlocalbindepvendorsymfonyconsoleTerminalphp on line Digging into it deployer is now bringing in Symfony which isnt compatible with php Appreciate that is an older version but such a huge breaking change on a patch release isnt a good sign I cant even get to the docs to see about downgrading to an older release because the deployer site has gone down again seems to be happening far too often cant it be moved to github pages homews configcomposervendordeployerdeployersrcCollectionCollectionphp Deployer Host HostCollectionthrowNotFound internal function Deployer Collection Collectionget homews configcomposervendordeployerdeployersrcfunctionsphp arraymapArray Array homews projectnamedeployphp Deployer host homews configcomposervendordeployerdeployersrcDeployerphp requirehomews proje internal function Deployer DeployerDeployer closure homews configcomposervendordeployerdeployersrcDeployerphp calluserfuncObjectClosure homews configcomposervendordeployerdeployerbindep Deployer Deployerrunmaster homews proje main The deployphp file defines more singlehosts one of which is host before defining the host with three IPs as follows host EDIT Same happens if using host Tested with PHP Deployer PHP Deployer EDIT It seems the reason is that is defined as singlehost than defined again with host in both host definitions the stage is different Add missing Top Supporter Q A Bug fix No New feature No BC breaks No Deprecations No Fixed tickets NA Directories are created with permissions due to umask These permissions on the directories prevent the execution of my PHP files I get Internal Server error when the directories have Ive tried to set umask in bashprofile on my server This works when connecting via SSH directly without Deployer However when using Deployer I keep getting umask instead of umask Even when defining something like runsource bashprofile as a deployer task I there something I am missing or are there perhaps better ways to get the permissions setup correctly Not sure if its relevant but Ive symlinked deploypathpublichtml to deploypathcurrentsrcpublic Thanks Hello I am getting an error with Symfony projects when using setfacl It was working fine with my Symfony projects The error is this The command cd varwwwhtmlmywebsitereleases setfacl L R m uwwwdatarwX m uwhoamirwX var failed Exit Code General error Host Name mywebsitecom setfacl varlogprod log Operation not permitted Every day I have to login into the server and launch this script before launching Deployer sudo chmod R var Do you know why its giving this error Thanks I have my ssh config on my machine configured for multiplexing Do I need to enable this also for my deploy config Or can I disable it We reviewed the Magento deployment thoroughly and ran into an interesting issue It appears the magentomaintenancedisable task in the Magento recipe is useless and might in fact in some cases produce an error on the frontend This is the task sequence in the default recipe deployinfo deployprepare deploylock deployrelease deployupdatecode deployshared deployvendors deploywritable deployclearpaths magentocompile magentodeployassets magentomaintenanceenable magentoupgradedb magentocacheflush magentomaintenancedisable deploysymlink deployunlock cleanup success The interesting ones are in bold The maintenance is set on the current dir the code base that is live The setupupgrade command is then run on the release dir the new code base that is about to be put live Then the cache is flushed followed by a disabling of the maintenance mode of the live version At this point in time the database is upgraded but the previous release is still the live version but it has no maintenance mode enabled If a visitor comes at that exact moment they might face an error since the code base isnt in sync with the database Next the symlink is swapped and the release dir is put live This is now current This dir had no maintenance mode set in the first place so itll automatically become available The question is why is magentomaintenancedisable even in there It serves no purpose and in fact may cause customerfacing errors My proposal would be to remove this line and keep the task itself Just setup a basic deployment and testing it against a dev server I ran dep deploy and that worked fine then ran a couple of tagged deploys like dep deploy o branchv dep deploy o branchv Everything seemed to be working at that point so I tried testing the rollback functionality dep rollback but I just get the message No more releases you can revert to Checked the server and after each deployment the releases folder only has directory I have setkeepreleases in my deployphp file The task deployrelease starts with php cddeploypath Clean up if there is unfinished release previousReleaseExist test h release if previousReleaseExist runrm rf readlink release Delete release runrm release Delete symlink But in serveral cases the command runrm rf readlink release has to run with sudo rights I would suggest sth like php sudo getreleasecleanupusesudo sudo if previousReleaseExist runsudo rm rf readlink release Delete release runsudo rm release Delete symlink 