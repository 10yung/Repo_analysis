Problem Hi I am new to webassembly in Rust and maybe this is a wasm question but I tried to test Yew and wrote an update function for a model using ArcMutexT variable and tried to start a background process using stdthread Now i know this is not the way things work but the point the compiler compiled the code without any warning and I found the bug opening the browser console I tried the stdthreadsleep but turned out I cannot use thread at all But why the compiler let me do this stupid thing Question Do you know any solution to set the compiler right and let me do just wasm allowedapproved things Are there any other restrictions that the compiler allows but will cause crash I used cargo web start autoreload and cargo web build commands Thank you in advance BTW Yew is awesome just love it Congrat for the whole team Thanks for filing a yew issue We appreciate it Description Integrating websys support has allowed yew to depend on gloo for ergonomic web APIs However at the time of writing gloo hasnt implemented the proposed api for files Proposed Solution We should consider upstreaming ReaderService changes from to the gloo project Problem The Task interface has a method called cancel which is intended to allow devs to cancel long running tasks However this API is easy to misuse accidentally For example our examples encourage risky usage here and here These are risky because the task should first be check using isactive before canceling Related to A clear and concise description of what the bug is Proposed behavior We should rely on Drop to cancel the task and remove the cancel method from the Task interface jstarry This turned out to be a little trickier than I thought Ive verified that exposing the macros allows people to write their own extensions but I couldnt really come up with any examples that werent from reallife so I just refer to the source filenames which I think is a bad copout If youd like I can pull in the actual source from jsonrs into macrosrs and rework it so its an actual compiling documentation example Replicated code feels bad to me though although perhaps as an example it wouldnt be horrible if it got out of phase with the actual implementation of jsonrs I definitely didnt want to include the code Im using to get the more compact representation for CBOR However I thought that mentioning the form of the macro that I used to get what I wanted might be useful although Im not a good judge So I fully expect to do more work on this PR but with a little additional guidance However Im in no rush to get it merged Fix Similar to but default values are specified by paths to functions instead of expressions rust deriveClone Properties struct MyProps propsdefault defaultvalue value u propsdefault alwaystrue enabled bool fn defaultvalue u fn alwaystrue bool true details summarysBut there is a minor problem s Fixedsummary If the function has incompatible type rust deriveClone Properties pub struct Props ERROR the function returns incompatible types propsdefault foo value String fn foo i It might produce an error message with a misleading help plaintext error E mismatched types DIRfailrs propsdefault foo expected struct stdstringString found i help try using a conversion method footostring note expected type stdstringString found type i I dont know how to fix this The expression version has a similar problem details mdtusz jstarry hgzimmerman Fix We will be able to provide default values to properties using a syntax like rust deriveProperties struct MyProps propsdefault value u propsdefault true enabled bool The syntax is based on mdtuszs suggestion but it takes an expression instead of a path to a function This workinprogress PR represents an attempt to statically convert a VNode into an HTML string for the purposes of SSR support Please note that Im not sure this will be the approach I end up going with as it may turn out infeasible with nodes such as VComp currently investigating alternative approaches now it should be considered an experiment Problem Im getting the following warning when switching between different routes using yewrouter I have different components that I switch between when route changes using Routerrender One of the components has a table with rows this warning returns times when I switch off that route Whereas one route is just an index page with static text and it returns the warning times when switched off that route WARNyewagent The Id of the handler while present in the slab is not associated with a callback Steps To Reproduce Steps to reproduce the behavior Use yewrouter Use Routerrender to render different components ex below There is nothing special about these components IndexPage for example just renders static text in a p tag yet still produces the above warning times when route changes and different component is then rendered rust html RouterAppRoute render Routerrendermove switch AppRoute match switch AppRouteIndex htmlIndexPage AppRouteSongs html SongsPage AppRouteArtistid htmlArtistPage artistidid AppRouteArtists htmlArtistsPage AppRouteQueue htmlQueuePage AppRouteNotFoundPermissiveNone htmlPage not found AppRouteNotFoundPermissiveSomemissedroute htmlformatPage not found missedroute htmlPage not found redirect Routerredirectroute Route AppRouteNotFoundPermissiveSomerouteroute Environment Yew version v Yewrouter version v Rust version Target wasm unknownunknown stdweb version OS linux Browser firefox Browser version Questionnaire Developing Yew is a community effort If you feel up to the challenge please check one of the boxes below x Im interested in fixing this myself but dont know where to start I would like to fix and I have a solution I dont have time to fix this right now but maybe later Split from Cc Split from Cc 