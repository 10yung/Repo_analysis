Hi I noticed that the logging macros put the absolute path of the source file for every position into the logging record which I believe happens here I would like to request to instead only put a relative path from the project root The reason for this request is that I recently noticed that some of my local filesystem paths show up on Google search which worried me a bit until I realised it is because they appear in logging statements in my ScalaJS generated Javascript code search for EPCompendiumscala in the source here to see what I mean Its not a huge issue but Id rather they not be there Alternatively simply removing file paths from fullOptJS builds would probably also work well Cheers Lars It would be very nice if there was some more documentation on handlers and modifications and how to utilize them create your own Anonymous functions are currently being included as method names and they dont add to the logging just meaningless characters and should be removed Id like to see an alternate scribe class with native log cats support The log catsscribe package exists and works but it has the drawback of recording incorrect Position information because the logger is defined as a class wrapping around Sync F delayloggerfoo This causes the position reporting to be marked as the wrapper class rather than the class doing the logging for example iochrisdavenportlog catsscribeScribeLoggeranoninfo From reading the Macros code it should be possible to implement a new ScribeLogger F class with minor modification where the Macroslog method currently emits scala q loggerlogrootscribeLogRecord m stuff it could instead emit something like scala q Sync F delayloggerlogrootscribeLogRecord m stuff LogStage has some interesting ideas for structural logging and extracting variables from compiletime interpolated Strings like s This could be a very useful feature for Scribe Continuing from Support async traces for catseffectIO Ideally support any F Effect Currently the configuration of Scribe is entirely programmatic and at the discretion of the developer using it It would be very useful to provide an optional module that incorporates Profig configuration to control logging configuration Better tooling to expose performance flaws Additional benchmarks to show more features of Scribe A library to generate graphical reports on the benchmark results Scala Native has been haphazardly supported and needs a lot more TLC to be incredibly solid and stable logging While coverage isnt usually practical we need to raise our numbers