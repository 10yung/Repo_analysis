Ktor Version and Engine Used client or server and name implementationioktorktorclientapache implementationioktorktorclientjackson implementationioktorktorclientloggingjvm Describe the bug When using the ktor client to make calls to external services and receiving a non response trying to receive the body results in an exception When calling an external service we receive a non error code with a body response detailing why We receive the status code and try to log the body of the failed request for additional information We log the results by calling httpResponsereadTextCharsetsUTF however instead of the body text we receive an exception ClientRequestException ioktorclientfeaturesDefaultResponseValidationKtaddDefaultResponseValidation invokeSuspendDefaultResponseValidationkt at ioktorclientfeaturesDefaultResponseValidationKtaddDefaultResponseValidation invokeDefaultResponseValidationkt at ioktorclientfeaturesHttpCallValidatorvalidateResponseHttpCallValidatorkt at ioktorclientfeaturesHttpCallValidatorCompanioninstall invokeSuspendHttpCallValidatorkt at ioktorclientfeaturesHttpCallValidatorCompanioninstall invokeHttpCallValidatorkt at ioktorutilpipelineSuspendFunctionGunloopPipelineContextkt at ioktorutilpipelineSuspendFunctionGunproceedPipelineContextkt at ioktorutilpipelineSuspendFunctionGunexecutePipelineContextkt at ioktorutilpipelinePipelineexecutePipelinekt at ioktorclientcallHttpClientCallreceiveHttpClientCallkt at ioktorclientstatementHttpStatementKtreadTextHttpStatementkt at commyapprepositoryPersonsearchPersonkt It looks like the DefaultResponseValidationkt HttpClientConfigaddDefaultResponseValidation throws an exception if the status is not To Reproduce Steps to reproduce the behavior val httpResponse clientgetClientgetHttpResponsesearchURI headerXExpandResults true headerXAuthcode authToken return when val httpStatusCode httpResponsestatus HttpStatusCodeOK httpResponsereceivePerson HttpStatusCodeNotFound loggerdebugPerson search returned a status return null else val msg Person search returned a nonOK status code httpStatusCode with text httpResponsereadTextCharsetsUTF loggererror msg throw AppExceptionStatusCodeInternalServerError msg Expected behavior We already know the response is a a non and should be able to log the body text along with the response If this is expected and there is a separate way to receive the body of a non response please let us know Screenshots If applicable add screenshots to help explain your problem Subsystem OkHttp client Motivation The initial problem is mentioned in Solution Add onClosing handler to OkHttpWebsocketSessionkt Subsystem Client Is your feature request related to a problem Please describe I want to make http requests to XML API Describe the solution youd like Create ktorclientxml like ktorclientjson to de serialize requestresponse Motivation to include to ktor XML very popular format for data transferring Ktor Version and Engine Used client or server and name This occurred in a client application upgrading from ktor to Modules used ktorclientokhttp ktorclientcore ktorclientserializationjvm Describe the bug In order to upload files body LocalFileContentFilebuildgradle was used to specify a body for requests as suggested by quick start guide for clients In it could be imported using import ioktorhttpcontentLocalFileContent but after setting the ktor version to this line fails with Unresolved reference And Intellij couldnt suggest any imports for LocalFileContent I went through some git log and found that in this commit Reduce jdk dependencies in client the file ktorhttpjvmsrcioktorhttpcontentLocalFileContentkt was moved to ktorserverktorservercorejvmsrcioktorhttpcontentLocalFileContentkt It seems to suggest that LocalFileContent is now only in ktorserver LocalFileContent is still mentioned in quick start guide for clients but not in the guide Migrating I guess it could also be the docs that need updating Subsystem Server Is your feature request related to a problem Please describe As far as I can tell there is no version of withApplication withTestApplication that takes a gracePeriod parameter which we would like to use in our tests to give the application time to close a connection Describe the solution youd like Changing the signature of withTestApplication and withApplication to include a gracePeriod parameter kotlin fun R withTestApplication gracePeriod Long L moduleFunction Application Unit configure TestApplicationEngineConfiguration Unit test TestApplicationEngine R R return withApplicationgracePeriod createTestEnvironment configure moduleFunctionapplication test fun R withApplication gracePeriod Long L environment ApplicationEngineEnvironment createTestEnvironment configure TestApplicationEngineConfiguration Unit test TestApplicationEngine R R val engine TestApplicationEngineenvironment configure enginestart try return enginetest finally enginestopgracePeriod L TimeUnitMILLISECONDS Motivation to include to ktor This should be helpful for anyone trying to achieve a graceful shutdown of the application between tests Subsystem ktorservernetty ktorserverjetty ktorservertomcat Motivation Solves Solution If an exception is raised while binding engine sockets to ports the server is stopped A similar behavior as described in the issue occurred for Jetty and Tomcat hence analogous changes are applied there After the client upgrade Apache engine to timeout exceptions stopped to handle properly kotlin fun main val env applicationEngineEnvironment module main connector host port embeddedServerNetty envstart val client HttpClientApache engine socketTimeout runBlocking printclientgetString fun Applicationmain installCallLogging level LevelINFO routing get delayDurationofSeconds callrespondHi It simply logs in the console Exception in thread main kotlinxcoroutinesJobCancellationException Job was cancelled jobJobImplCancelled acf b with no extra details Expected error cause program termination Ktor Version and Engine Used client or server and name Ktor client default platform engine iOS Describe the bug HttpClient can only be used from the main thread It does not matter on which thread the object is instantiated The issue is caused by global declarations that are not annotated properly for KotlinNative Uncaught Kotlin exception ioktorhttpURLParserException Fail to parse url redacted Caused by kotlinnativeIncorrectDereferenceException Trying to access top level value not marked as ThreadLocal or SharedImmutable from nonmain thread at testkexe x edb e kfunkotlinThrowableinitkotlinStringkotlinThrowable Usersteamcity buildAgentwork d a c runtimesrcmainkotlinkotlinThrowablekt at testkexe x ed ee kfunkotlinExceptioninitkotlinStringkotlinException Usersteamcity buildAgentwork d a c runtimesrcmainkotlinkotlinExceptionskt at testkexe x ed aa kfunkotlinRuntimeExceptioninitkotlinStringkotlinRuntimeException Usersteamcity buildAgentwork d a c runtimesrcmainkotlinkotlinExceptionskt at testkexe x f b kfunkotlinnativeIncorrectDereferenceExceptioninitkotlinStringkotlinnativeIncorrectDereferenceException Usersteamcity buildAgentwork d a c runtimesrcmainkotlinkotlinnativeRuntimekt at testkexe x f e ThrowIncorrectDereferenceException Usersteamcity buildAgentwork d a c runtimesrcmainkotlinkotlinnativeinternalRuntimeUtilskt at testkexe x ed CheckIsMainThread at testkexe x e a kfunioktorhttpgetURLALPHABETCHARSinternal optbuildAgentworka dc c ektorhttpcommonsrcioktorhttpCodecskt at testkexe x e ecd kfunioktorhttpencodeURLPathkotlinStringkotlinString optbuildAgentworka dc c ektorhttpcommonsrcioktorhttpCodecskt I am using the CoroutineWorker library from Autodesk To Reproduce Steps to reproduce the behavior Make a client request from a nonmain thread for a native target Subsystem ktorhttp Is your feature request related to a problem Please describe ChunkedTransferEncodingkt uses a fixed chunk size of bytes Describe the solution youd like The chunk size should be configurable Motivation to include to ktor Small chunk sizes can result in a lot of network overhead when transferring a large file If a server serves up mainly large files having a tunable chunk size can cut down on the overhead thus speeding up large file transfers Ktor Version and Engine Used client or server and name rc Describe the bug Any sendPipeline interceptor installed does not get called when testing using withTestApplication To Reproduce Steps to reproduce the behavior Install a sendPipeline interceptor an try to use it with a handleRequest The interception lambda will not be called Expected behavior The interception lambda to be called You can check out the test code here in this feature of mine where Im having the issue A run of the tests is also available here on TravisCI and the corresponding build scan here 