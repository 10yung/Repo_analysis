 Please provide enough information so that others can review your pull request Keep pull requests small and focused on a single change Summary What existing problem does the pull request solve Can you solve the issue with a different approach RAM bundle build time boost using jestworkers Number of workers can be con figured using numWorkers option eg yarn haul rambundle platform ios dev false numWorkers Test plan Proper test was added to the fixtures To do Think about limiting workers number TODO fix increase in bundle size x verify start server is working x verify Remote debugging is working x revert edits to reactnativeclean fixture x verify symbolication is working Environment CentOS Android Studio AVD haulbundlerbabelpresetreactnative haulbundlercli haulbundlerpreset react reactnative Description Have the some code and works well in Windows but in CentOS the haul progress is pending forever and did not start compiling bundle hung on IDLE status after the reactnative runandroid is successfully executed and the app show up on emulator but with a red screen saying Unable to load script Please make sure you are either running a Metro server or that your bundle indexandroidbundle is packaged correctly for release I have confirm the port is not occupied and try use other port number still did not work Summary This is a test fixture for in a yarn workspace with proper hoisting It reproduces an issue we have in jest but Id also like to see this realworld scenario covered in CI Test plan Ran yarn test from the root I get some failures that appear to be due to my Windows environment and are unrelated to the changes Id love help figuring that out as the tests should be passing in Environment haulbundlerbabelpresetreactnative haulbundlercli haulbundlerinspector haulbundlerpreset reactnative Node v Config since preset isnt yet available import withPolyfills makeConfig from haulbundlerpreset const removeRuleByTest moduleConfig test const index moduleConfigfindIndexrule if ruletest return ruletesttoString testtoString return false moduleConfigspliceindex export default makeConfig bundles index platform entry withPolyfillssrcindexplatformjs transform config Remove babelloader as it handles both tsx and jsx files removeRuleByTestconfigmodulerules jt sx configmodulerules exclude nodemodules reactreactnativecommunityhaulbundler test tsx loader tsloader configmodulerules Readd the babelloader now only for jsx exclude nodemodules reactreactnativecommunityhaulbundler test jsx loader requireresolvebabelloader options plugins requireresolvehaulbundlercorebuildutilsfixRequireIssues configmodulerules configresolveextensions platformts mobilets nativets platformtsx mobiletsx nativetsx ts tsx configresolveextensions Description After upgrading to the new haul bundle from a working legacy instance and starting with a fresh config I seemingly cant exclude things from Typescript checks and compilation terminates Not sure what Im missing or am I looking at an outdated config TravissMacBookProxc yarn ios haulinspector yarn run v NODEOPTIONSmaxoldspacesize REACTNATIVEtrue NODEENVdevelopment yarn haul start platform ios eager ios haulinspector Logs done Packager server running on error UsersxcnodemoduleshaulbundlercorenodemoduleswebpacklibSourceMapDevToolPluginjs const asset compilationgetAssetfilesource TypeError compilationgetAsset is not a function at filesforEach UsersxcnodemoduleshaulbundlercorenodemoduleswebpacklibSourceMapDevToolPluginjs at ArrayforEach anonymous at compilationhooksafterOptimizeChunkAssetstap UsersxcnodemoduleshaulbundlercorenodemoduleswebpacklibSourceMapDevToolPluginjs at SyncHookeval as call eval at create UsersxcnodemodulestapablelibHookCodeFactoryjs anonymous at SyncHooklazyCompileHook UsersxcnodemodulestapablelibHookjs at hooksoptimizeChunkAssetscallAsyncerr UsersxcnodemoduleswebpacklibCompilationjs at AsyncSeriesHookeval as callAsync eval at create UsersxcnodemodulestapablelibHookCodeFactoryjs anonymous at AsyncSeriesHooklazyCompileHook UsersxcnodemodulestapablelibHookjs at hooksadditionalAssetscallAsyncerr UsersxcnodemoduleswebpacklibCompilationjs at AsyncSeriesHookeval as callAsync eval at create UsersxcnodemodulestapablelibHookCodeFactoryjs anonymous at AsyncSeriesHooklazyCompileHook UsersxcnodemodulestapablelibHookjs at hooksoptimizeTreecallAsyncerr UsersxcnodemoduleswebpacklibCompilationjs at AsyncSeriesHookeval as callAsync eval at create UsersxcnodemodulestapablelibHookCodeFactoryjs anonymous at AsyncSeriesHooklazyCompileHook UsersxcnodemodulestapablelibHookjs at Compilationseal UsersxcnodemoduleswebpacklibCompilationjs at hooksmakecallAsyncerr UsersxcnodemoduleswebpacklibCompilerjs at err eval at create UsersxcnodemodulestapablelibHookCodeFactoryjs anonymous at addModuleChain UsersxcnodemoduleswebpacklibCompilationjs at processModuleDependencieserr UsersxcnodemoduleswebpacklibCompilationjs at processtickCallback internalprocessnexttickjs Reproducible Demo Environment reactnative haulbundlerbabelpresetreactnative haulbundlercli haulbundlercore haulbundlerpreset node stacksize maxoldspacesize nodemoduleshaulbundlerclibinhaul start All necessary envrionmental info that will help triage this Description After making changes to the code the assembly is restarted but progress is not displayed always and a fatal error also falls from memory We replace webpack config and loaders context optionsfrontDir output filename indexoptionsplatformbundle resolveLoader alias svginline svginlineloader extractglobalizeformattersloader requireresolveextensionsextractglobalizeformattersloader resolve extensions ts tsx optionsplatformts nativets optionsplatformtsx nativetsx alias mobile pathjoinoptionssrcDir mobile src pathjoinoptionssrcDir web module rules parser requireEnsure false test js exclude nodemodules reactreactnavigationreactnativecommunityexpoprettyformathaulbundlermetro use filterEmpty cacheLoaderoptions threadLoaderoptions babelLoaderoptions test tsx include nodemodules use filterEmpty cacheLoaderoptions threadLoaderoptions babelLoaderoptions typescriptLoaderoptions test coreAssetResolvertest use Asset loader enables asset management based on image scale This needs the AssetResolver plugin in resolverplugins to work loader coreASSETLOADERPATH options platform optionsplatform root optionsroot bundle optionsbundle runtime optionsruntime plugins new IgnoreWarningsPlugin patterns export reeximported as was not found in Conflicting order between new DefinePlugin processenvREACTNATIVE true new ProvidePlugin Promise bluebird stats children false Describe your issue in detail Include screenshots if needed If this is a regression let us know Environment node pnpm reactnative haulbundlercli Description While the old haul package used to install just fine with the same pnpm settings while upgrading to the haulbundlercli package tried and I get this error while installing I dont understand where the dependency comes from since all the versions I am trying to install are ERROR haulbundlercli haulbundlercore haulbundlercorelegacy requires a peer of haulbundlercore but version was installed Reproducible Demo packagejson name packageName version private false main libesmindexjs module libesmindexjs typings libesmindexdts scripts start haul start dev true minify false haul node nodemoduleshaulbundlerclibinhauljs dependencies reactnativefloatingaction reactnativefs reactnativemodal reactnativeshimmer base tslib jscandroid reactnativecommunitynetinfo reactnativecommunitycliplatformandroid peerDependencies react reactnative devDependencies webpack typesreact typesreactnative typeswebpackenv typesbase typesreactnativesqlitestorage typeschai typesjest babelpresettypescript babelpluginproposalclassproperties babelpluginproposalobjectrestspread babelplugintransformflowstriptypes babelplugintransformreactjsx babelpolyfill babelpresetenv babelregister babelruntime babelcli babelloader babelpresetenv metro metroreactnativebabelpreset circulardependencyplugin es promise haulbundlercli haulbundlercore haulbundlerpreset haulbundlerbabelpresetreactnative reacthotloader ignoreloader jsonloader loaderutils mocha mochajunitreporter rawloader react reactnative reacttestrenderer reacttransformhmr reactotronreactnative reactotronredux scheduler sourcemaploader tsloader copyfiles rimraf typescript lodash schedule ansiparser genversion chai karmachaiplugins sinon enzyme babelplugintransformes modulescommonjs terser webpackbundleanalyzer Describe the feature Weve landed Fast Refresh on React Native master You can try it if you build all Metro packages from master and replace them in nodemodules of RNTester Motivation It would be nice if Haul could replace reacthotloader or other techniques with Fast Refresh because Fast Refresh doesnt create semantic differences in behavior so its safe to always leave on unlike solutions based on reacthotloader and similar tools Fast Refresh fully supports function components and Hooks including cases where you add or remove Hooks Fast Refresh gracefully recovers from errors It likely also fixes hot reloading problems with navigation libraries because its fully integrated with React Although I dont have a test case to verify that It would also unify the behavior with mainline React Native But How Id be happy to chat with someone to give an overview of how the new system works For a match in behavior we might need some new hooks from webpack but you should be able to get reasonably close today too Current Behavior Packaging typescript reactnative project with haul running yarn start platform ios fails with nodemodulesfseventsnodemodulesnodepregyplibunpublishjs Module not found Error Cant resolve awssdk in nodemodulesfseventsnodemodulesnodepregyplib From haul output log txt ERROR found asset that we dont know how to process nodemodulesfseventsnodemodulesnodepregyplibutilnwpregypindexhtml ERROR nodemodulesfseventsnodemodulesnodepregyplibunpublishjs Module not found Error Cant resolve awssdk in nodemodulesfseventsnodemodulesnodepregyplib resolve awssdk in nodemodulesfseventsnodemodulesnodepregyplib Parsed request is a module using description file nodemodulesfseventsnodemodulesnodepregyppackagejson relative path lib Field browser doesnt contain a valid alias configuration resolve as module Expected Behavior Expect ios to start Haul Configuration webpackhauljs js import createWebpackConfig from haul export default webpack env const config createWebpackConfig entry srcindexenvplatformtsx env configmodulerules test tsx exclude nodemodules use loader babelloader loader tsloader configmodulerules configresolveextensions ts tsx envplatformts nativets envplatformtsx nativetsx configresolveextensions return config Your Environment software version Haul rc reactnative node v npm or yarn packagejson with relevant packages json dependencies react reactnative devDependencies babelcore beta babelcli babelcore babelloader babelpresetes babelpresetreactnative haul rc metroreactnativebabelpreset threadloader tsloader typescript 