Refactoring of ShadowGenerator and CascadedShadowGenerator classes CascadedShadowGenerator now extends ShadowGenerator and add specific methods to handle CSM For CascadedShadowGenerator if the user tries to use a filtering method other than none PCF PCSS an error is logged to the console and the filter is set to none Theres a breaking change getCSMTransformMatrix has been renamed to getCascadeTransformMatrix to follow the naming convention used for getCascadeViewMatrix and getCascadeProjectionMatrix I dont think its too much a problem as I doubt someone has used getCSMTransformMatrix yet and because we are still in beta for and not in production stage Let me know if its ok I performed a lot of checks for both ShadowGenerator and CascadedShadowGenerator after refactoring so I hope I didnt break anything Historically we started the VR directory in cameras as the first class that was created was the VR Free Camera Since then we continued adding VR classes there and this is why the XR directory is located in Cameras I think that before releasing we should decide if this is the right place for the files and where to put them if it isnt There are two variants three if we include leaving the situation as it is Move the XR camera to a main directory in src Distribute the classes in the corresponding directories Camera in Cameras Input Sources in Input Experience helpers in Tools or Helpers etc I am for option would be great to hear your opinion on that Bug repro on Expected result Both vertical and horizontal scrollbars thumb and bar images should load the correct images from svg file Current result Vertical scrollbars thumb and bar image are loading the entire svg texture sheet instead Horizontal scrollbar loads fine Make sure to define stable features with the stable flag in the features manager As the WebXR controllers are no longer gamepads there is no support for the gamepad input on the webxr camera Allow the user to move freely using the controllers thumbstick if available Using babylonbased teleportation anchors or hotspots will allow a developer to define specific points where the user can land within the scene As opposed to the current teleportation which allows the user to land anywhere a floormesh is defined the anchors will limit the user to a specific area which can be a major benefit in specific cases The WebXR Input Profile repository will eventually include all supported controllers including assets and profile definitions This repository is rapidly changing and now includes mixed reality oculus daydream and all generic controllers They license is W C Software and Document License we will need to decide Are we hosting the assets glb files ourselves or waiting for them to offer a public repository Are we hosting the JSON files profiles and assets definitions or integrate them after they change as we are doing now Is it a clone of the repository or are we hosting the files differently If we decide to fully support this repository we will need to slightly change the architecture of controller loading thou it is already partly prepared Fixes See 