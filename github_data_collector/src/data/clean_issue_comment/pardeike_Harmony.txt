Describe the bug When a method is resolved inside the GlobalType this is only possible via ModuleResolveMethodint MDToken its DeclaringType property is null and when an attempt is made to patch the method a NRE will get thrown in this function GeneralExtensionsFullDescriptionthis MethodBase method To Reproduce Resolve a method via its metadata token that is inside Module or also known as the globaltype Try to apply any patch to it Expected behavior The patch gets applied Screenshot Image Runtime environment OS Windows bit NET version Harmony version Describe the bug If the method returns a generic type an error will occur during the patch To Reproduce Steps to reproduce the behavior The original method and its signature and class csharp typeofListInt GetMethodGetEnumerator The prefix method csharp static void ConsoleWriteLine ConsoleWriteLineEnvironmentStackTrace The patch code csharp var original typeofListInt GetMethodGetEnumerator var patch typeofProgramGetMethodnameofConsoleWriteLine instancePatchoriginal prefix new HarmonyMethodpatch The output of the Harmony debug log Harmony idtest version locationT ConsoleApp bin Debug Harmonydll Started from SystemVoid ConsoleApp ProgramMainSystemString location T ConsoleApp bin Debug ConsoleApp exe At Selfpatching started v Potential methods to upgrade Selfpatched out of methods skipped in ms Patch SystemCollectionsGenericEnumeratorSystemInt SystemCollectionsGenericList SystemInt GetEnumerator The stacktrace or other errors SystemArgumentException The specified Type must not be a generic type definition Parameter name t at SystemRuntimeInteropServicesMarshalSizeOfType t Expected behavior The patch is correctly applied Screenshots Code Runtime environment please complete the following information OS Windows bit NET Framework Harmony version sources of nov Additional context It isnt enough just to fix this place If you do it errors will occur later Describe the bug If the originalMethod is declared in the prefix an error will occur when the method is called SystemArgumentException Cannot resolve method Void AddInt because the declaring type of the method handle SystemCollectionsGenericList T is generic Explicitly provide the declaring type to GetMethodFromHandle To Reproduce Steps to reproduce the behavior The original method typeofListInt GetMethodAdd The prefix method static void InvalidPrefixMethodInfo originalMethod Int item ConsoleWriteLineitem The patch code var original typeofListInt GetMethodnameofListInt Add var prefix typeofProgramGetMethodnameofInvalidPrefix instancePatchoriginal prefix new HarmonyMethodpatchMethod The output of the Harmony debug log Harmony idtest version locationT ConsoleApp bin Debug Harmonydll Started from SystemVoid ConsoleApp ProgramMainSystemString location T ConsoleApp bin Debug ConsoleApp exe At Selfpatching started v Potential methods to upgrade Selfpatched out of methods skipped in ms Patch SystemVoid SystemCollectionsGenericList SystemInt AddSystemInt L ldtoken SystemVoid SystemCollectionsGenericList SystemInt AddSystemInt L call SystemReflectionMethodBase SystemReflectionMethodBaseGetMethodFromHandleSystemRuntimeMethodHandle L a ldarg L call SystemVoid ConsoleApp ProgramInvalidPrefixSystemReflectionMethodInfo SystemInt L start original L ldarg L ldfld Int size L b ldarg L c ldfld Int items L ldlen L convi L bneun Label L ldarg L ldarg L a ldfld Int size L f ldci L add L call SystemVoid SystemCollectionsGenericList SystemInt EnsureCapacitySystemInt L Label L ldarg L ldfld Int items L c ldarg L d ldarg L e ldfld Int size L stloc L ldloc L ldci L add L stfld Int size L c ldloc L d ldarg L e stelem SystemInt L ldarg L ldarg L ldfld Int version L a ldci L b add L c stfld Int version L end original L ret DONE The stacktrace or other errors SystemArgumentException Cannot resolve method Void AddInt because the declaring type of the method handle SystemCollectionsGenericList T is generic Explicitly provide the declaring type to GetMethodFromHandle at SystemReflectionMethodBaseGetMethodFromHandleRuntimeMethodHandle handle Expected behavior The method works correctly information about the calling method not Generic is passed to the originalMethod argument Runtime environment please complete the following information OS Windows bit NET Framework Harmony version sources of nov Made traverse detect static and nondeclared properties as well as nondeclared fields static fields were already detected This makes TraverseField and TraverseProperty work the same way as TraverseMethod Fixes issues and Im trying to patch GetOrderedRanges method in this class This is an internal class of StockSharp library and it has a bug which I want to patch Thre are no exception on patching itself But AccessViolationExcpetion is raised from the patched class during application run Stack trace of the exception SystemAccessViolationException in StockSharpAlgoStoragesCachedBasketMarketDataStorage cDisplayClass Startb in EcngCommonConvertercDisplayClass DoInCultureb in EcngCommonConverterDoInCulture T CultureInfo cultureInfo Func func in SystemThreadingExecutionContextRunInternalExecutionContext executionContext ContextCallback callback Object state Boolean preserveSyncCtx in SystemThreadingExecutionContextRunExecutionContext executionContext ContextCallback callback Object state Boolean preserveSyncCtx in SystemThreadingExecutionContextRunExecutionContext executionContext ContextCallback callback Object state in SystemThreadingThreadHelperThreadStart Unfortunately it is hard to provide any project to reproduce this because I cant show the real application due to NDA and the class being patched is very internal and cant be used without all the infrastructure I tried to call the patched method directly from my code after patching and the patched method works perfectly without exceptions I suppose this may be related somehow to other code in the StockSharp library specifically to the way how the method is called see CachedBasketMarketDataStorageStart method Can I do something to debug or narrow this down to understand what is going wrong Runtime environment OS WIndows bit Windows bit NET version Harmony version Harmony log Harmony idStockSharp version Started from SystemVoid StockSharpExtensionsCachedBasketMarketDataStoragePatchercctor At Patch SystemCollectionsGenericIEnumerable SystemTuple StockSharpBusinessEntitiesExchangeBoard EcngComponentModelRange SystemTimeSpan StockSharpAlgoStoragesCachedBasketMarketDataStorage StockSharpMessagesMessageGetOrderedRangesSystemDateTimeOffset L ldnull L stloc SystemCollectionsGenericIEnumerable SystemTuple StockSharpBusinessEntitiesExchangeBoardEcngComponentModelRange SystemTimeSpan L ldarg L ldarg L ldloca SystemCollectionsGenericIEnumerable SystemTuple StockSharpBusinessEntitiesExchangeBoardEcngComponentModelRange SystemTimeSpan L b call SystemBoolean StockSharpExtensionsCachedBasketMarketDataStoragePatcherGetOrderedRangesPrefixStockSharpAlgoStoragesCachedBasketMarketDataStorage StockSharpMessagesMessage SystemDateTimeOffset SystemCollectionsGenericIEnumerable L brfalse Label L start original L newobj Void ctor L a stloc L b ldloc L c ldarg L d stfld SystemDateTimeOffset date L ldarg L call SystemCollectionsGenericIEnumerable StockSharpBusinessEntitiesExchangeBoard StockSharpAlgoStoragesCachedBasketMarketDataStorage StockSharpMessagesMessagegetBoards L ldloc L ldftn SystemBoolean StockSharpAlgoStoragescDisplayClass StockSharpMessagesMessageGetOrderedRangesb StockSharpBusinessEntitiesExchangeBoard L f newobj Void ctorSystemObject IntPtr L call SystemCollectionsGenericIEnumerable StockSharpBusinessEntitiesExchangeBoard SystemLinqEnumerableWhereSystemCollectionsGenericIEnumerable StockSharpBusinessEntitiesExchangeBoard SystemFunc StockSharpBusinessEntitiesExchangeBoard SystemBoolean L ldloc L a ldftn SystemCollectionsGenericIEnumerable SystemTuple StockSharpBusinessEntitiesExchangeBoard EcngComponentModelRange SystemTimeSpan StockSharpAlgoStoragescDisplayClass StockSharpMessagesMessageGetOrderedRangesb StockSharpBusinessEntitiesExchangeBoard L newobj Void ctorSystemObject IntPtr L call SystemCollectionsGenericIEnumerable SystemTuple StockSharpBusinessEntitiesExchangeBoard EcngComponentModelRange SystemTimeSpan SystemLinqEnumerableSelectManySystemCollectionsGenericIEnumerable StockSharpBusinessEntitiesExchangeBoard SystemFunc StockSharpBusinessEntitiesExchangeBoard SystemCollectionsGenericIEnumerable SystemTuple StockSharpBusinessEntitiesExchangeBoard EcngComponentModelRange SystemTimeSpan L a ldsfld SystemFunc SystemTuple StockSharpBusinessEntitiesExchangeBoardEcngComponentModelRange SystemTimeSpan SystemTimeSpan L f dup L brtrue Label L pop L ldsfld c L b ldftn SystemTimeSpan StockSharpAlgoStoragescStockSharpMessagesMessageGetOrderedRangesb SystemTuple StockSharpBusinessEntitiesExchangeBoard EcngComponentModelRange SystemTimeSpan L newobj Void ctorSystemObject IntPtr L dup L stsfld SystemFunc SystemTuple StockSharpBusinessEntitiesExchangeBoardEcngComponentModelRange SystemTimeSpan SystemTimeSpan L c Label L c call SystemLinqIOrderedEnumerable SystemTuple StockSharpBusinessEntitiesExchangeBoard EcngComponentModelRange SystemTimeSpan SystemLinqEnumerableOrderBySystemCollectionsGenericIEnumerable SystemTuple StockSharpBusinessEntitiesExchangeBoard EcngComponentModelRange SystemTimeSpan SystemFunc SystemTuple StockSharpBusinessEntitiesExchangeBoard EcngComponentModelRange SystemTimeSpan SystemTimeSpan L call SystemCollectionsGenericList SystemTuple StockSharpBusinessEntitiesExchangeBoard EcngComponentModelRange SystemTimeSpan SystemLinqEnumerableToListSystemCollectionsGenericIEnumerable SystemTuple StockSharpBusinessEntitiesExchangeBoard EcngComponentModelRange SystemTimeSpan L stloc L ldci L stloc L br Label L e Label L e ldloc L f ldloc L callvirt SystemTuple StockSharpBusinessEntitiesExchangeBoard EcngComponentModelRange SystemTimeSpan SystemCollectionsGenericList SystemTuple StockSharpBusinessEntitiesExchangeBoard EcngComponentModelRange SystemTimeSpangetItemSystemInt L callvirt EcngComponentModelRange SystemTimeSpan SystemTuple StockSharpBusinessEntitiesExchangeBoard EcngComponentModelRange SystemTimeSpangetItem L a ldloc L b ldloc L c ldci L d add L e callvirt SystemTuple StockSharpBusinessEntitiesExchangeBoard EcngComponentModelRange SystemTimeSpan SystemCollectionsGenericList SystemTuple StockSharpBusinessEntitiesExchangeBoard EcngComponentModelRange SystemTimeSpangetItemSystemInt L callvirt EcngComponentModelRange SystemTimeSpan SystemTuple StockSharpBusinessEntitiesExchangeBoard EcngComponentModelRange SystemTimeSpangetItem L callvirt SystemBoolean EcngComponentModelRange SystemTimeSpanContainsEcngComponentModelRange SystemTimeSpan L d brfalse Label L a ldloc L a ldloc L a ldci L a add L a callvirt SystemVoid SystemCollectionsGenericList SystemTuple StockSharpBusinessEntitiesExchangeBoard EcngComponentModelRange SystemTimeSpanRemoveAtSystemInt L ab br Label L b Label L b ldloc L b ldloc L b ldci L b add L b callvirt SystemTuple StockSharpBusinessEntitiesExchangeBoard EcngComponentModelRange SystemTimeSpan SystemCollectionsGenericList SystemTuple StockSharpBusinessEntitiesExchangeBoard EcngComponentModelRange SystemTimeSpangetItemSystemInt L b callvirt EcngComponentModelRange SystemTimeSpan SystemTuple StockSharpBusinessEntitiesExchangeBoard EcngComponentModelRange SystemTimeSpangetItem L be ldloc L bf ldloc L c callvirt SystemTuple StockSharpBusinessEntitiesExchangeBoard EcngComponentModelRange SystemTimeSpan SystemCollectionsGenericList SystemTuple StockSharpBusinessEntitiesExchangeBoard EcngComponentModelRange SystemTimeSpangetItemSystemInt L c callvirt EcngComponentModelRange SystemTimeSpan SystemTuple StockSharpBusinessEntitiesExchangeBoard EcngComponentModelRange SystemTimeSpangetItem L ca callvirt SystemBoolean EcngComponentModelRange SystemTimeSpanContainsEcngComponentModelRange SystemTimeSpan L cf brfalse Label L d ldloc L d ldloc L d callvirt SystemVoid SystemCollectionsGenericList SystemTuple StockSharpBusinessEntitiesExchangeBoard EcngComponentModelRange SystemTimeSpanRemoveAtSystemInt L db br Label L e Label L e ldloc L e ldloc L e callvirt SystemTuple StockSharpBusinessEntitiesExchangeBoard EcngComponentModelRange SystemTimeSpan SystemCollectionsGenericList SystemTuple StockSharpBusinessEntitiesExchangeBoard EcngComponentModelRange SystemTimeSpangetItemSystemInt L e callvirt EcngComponentModelRange SystemTimeSpan SystemTuple StockSharpBusinessEntitiesExchangeBoard EcngComponentModelRange SystemTimeSpangetItem L ec ldloc L ed ldloc L ee ldci L ef add L f callvirt SystemTuple StockSharpBusinessEntitiesExchangeBoard EcngComponentModelRange SystemTimeSpan SystemCollectionsGenericList SystemTuple StockSharpBusinessEntitiesExchangeBoard EcngComponentModelRange SystemTimeSpangetItemSystemInt L f callvirt EcngComponentModelRange SystemTimeSpan SystemTuple StockSharpBusinessEntitiesExchangeBoard EcngComponentModelRange SystemTimeSpangetItem L fa callvirt EcngComponentModelRange SystemTimeSpan EcngComponentModelRange SystemTimeSpanIntersectEcngComponentModelRange SystemTimeSpan L ff ldnull L call SystemBoolean EcngCommonEquatable EcngComponentModelRange SystemTimeSpanopInequalityEcngCommonEquatable EcngComponentModelRange SystemTimeSpan EcngComponentModelRange SystemTimeSpan L brfalse Label L a ldloc L b ldloc L c ldloc L d ldloc L e callvirt SystemTuple StockSharpBusinessEntitiesExchangeBoard EcngComponentModelRange SystemTimeSpan SystemCollectionsGenericList SystemTuple StockSharpBusinessEntitiesExchangeBoard EcngComponentModelRange SystemTimeSpangetItemSystemInt L callvirt StockSharpBusinessEntitiesExchangeBoard SystemTuple StockSharpBusinessEntitiesExchangeBoard EcngComponentModelRange SystemTimeSpangetItem L ldloc L ldloc L a callvirt SystemTuple StockSharpBusinessEntitiesExchangeBoard EcngComponentModelRange SystemTimeSpan SystemCollectionsGenericList SystemTuple StockSharpBusinessEntitiesExchangeBoard EcngComponentModelRange SystemTimeSpangetItemSystemInt L f callvirt EcngComponentModelRange SystemTimeSpan SystemTuple StockSharpBusinessEntitiesExchangeBoard EcngComponentModelRange SystemTimeSpangetItem L callvirt SystemTimeSpan EcngComponentModelRange SystemTimeSpangetMin L ldloc L a ldloc L b ldci L c add L d callvirt SystemTuple StockSharpBusinessEntitiesExchangeBoard EcngComponentModelRange SystemTimeSpan SystemCollectionsGenericList SystemTuple StockSharpBusinessEntitiesExchangeBoard EcngComponentModelRange SystemTimeSpangetItemSystemInt L callvirt EcngComponentModelRange SystemTimeSpan SystemTuple StockSharpBusinessEntitiesExchangeBoard EcngComponentModelRange SystemTimeSpangetItem L callvirt SystemTimeSpan EcngComponentModelRange SystemTimeSpangetMax L c newobj Void ctorSystemTimeSpan SystemTimeSpan L call SystemTuple StockSharpBusinessEntitiesExchangeBoard EcngComponentModelRange SystemTimeSpan SystemTupleCreateStockSharpBusinessEntitiesExchangeBoard EcngComponentModelRange SystemTimeSpan L callvirt SystemVoid SystemCollectionsGenericList SystemTuple StockSharpBusinessEntitiesExchangeBoard EcngComponentModelRange SystemTimeSpansetItemSystemInt SystemTuple StockSharpBusinessEntitiesExchangeBoard EcngComponentModelRange SystemTimeSpan L b ldloc L c ldloc L d ldci L e add L f callvirt SystemVoid SystemCollectionsGenericList SystemTuple StockSharpBusinessEntitiesExchangeBoard EcngComponentModelRange SystemTimeSpanRemoveAtSystemInt L br Label L Label L ldloc L a ldci L b add L c stloc L d Label L d Label L d Label L d Label L d ldloc L e ldloc L f callvirt SystemInt SystemCollectionsGenericList SystemTuple StockSharpBusinessEntitiesExchangeBoard EcngComponentModelRange SystemTimeSpangetCount L ldci L sub L blt Label L b ldloc L c end original L c stloc SystemCollectionsGenericIEnumerable SystemTuple StockSharpBusinessEntitiesExchangeBoardEcngComponentModelRange SystemTimeSpan L d Label L d ldloc SystemCollectionsGenericIEnumerable SystemTuple StockSharpBusinessEntitiesExchangeBoardEcngComponentModelRange SystemTimeSpan L e ret DONE Hey Ive been working on porting Harmony to NET Core The main issue was that MethodInfo objects are not longer serializable in NET Core To bypass that ive created a MethodInfoWrapper that traverses the RuntimeMethodInfo object and performs a shallow copy gg I find myself almost always converting the IEnumerableCodeInstruction into a ListCodeInstruction for access to the List methods like FindIndex and from what I can tell of the harmony code its internally such a List anyway I generalized it to all the generic interfaces the ListT implements Aside Im not sure how you get unit tests running yourself but in order to run them via Visual Studio Test Explorer on all target frameworks except for netcoreapp I had to locally remove the MicrosoftNETTestSdk and NUnit TestAdapter nugets and install the NUnit Test Adapter extension MicrosoftNETTestSdk requires netcoreapp or net while NUnit TestAdapter requires netcoreapp so they dont work for the NET Framework versions like net Describe the bug Using AccessToolsConstructor and AccessToolsDeclaredConstructor on a class constructor that has a static constructor throws AmbiguousMatchException like csharp public class Test static Test public Test Expected behavior AccessToolsConstructor and AccessToolsDeclaredConstructor internally uses AccessToolsallDeclared which has the BindingFlagsStatic which will get the static constructor and throw the AmbiguousMatchException Describe the bug TraverseProperty does not find properties from base types of the object instance passed in to TraverseCreate To Reproduce cs class A B class B public bool Test get true Traverse tr TraverseCreatenew A var prop trPropertyTest propGetValuebool Fails silently Expected behavior TraverseProperty should find properties from base classes When passing in an instance its not possible or desirable to specify the correct type to get the property Runtime environment please complete the following information Windows bit NET in Unity Harmony version Describe the bug TraversePropertyExists does not exist while TraverseFieldExists and other similar methods exist Expected behavior TraversePropertyExists should exist like TraverseFieldExists does