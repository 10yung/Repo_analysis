 This display is actually designed for the Arduino pay more attention when purchasing but after some digging in the schematics I discovered that other than a V power supply the logic is all v and since its SPI I thought Id give it a go Its based on the ili controller and after much trialanderror I now have the display mostly working using the following sudo modprobe fbtftdevice speed custom namefbili gpiosreset dc led width height buswidth regwidth This initializes the display and I can move the console con fbmap and see the content However the colors are all wrong I tried setting bgr but that doesnt make the colors better just different Red comes out blue Yellow comes out cyan Digging through the Arduino code it appears theres an initialization string that doesnt match the one in the ili driver Im unsure of how to convert it though can I literally take the sections and convert them The initialization code seems very different so I suspect only elements of it need changing but Im no expert here and Im hoping someone can help This is the initialization code Ive mangled from the Arduino file I would put this all on one line XF x x xC x x a xC x x xC x XC x x xB xA x xB x xB x x x B xB x xE x F x x x B x x A x E xC x x x x x x x XE x F x F x F x F x F x F x x x x x x x C x A x XF x x x x C x F x F xA x XF x xA x x x x xFF x x XF x x x x x XF x x X A x xB X x x x x x Edit Tried that and it didnt work which doesnt surprise me This is a followup of this thread So Ive successfully integrated my display using the modprobe method but Im not quite satisfied yet with how late in the boot process the display turns on approx sec on the Pi Zero Here is the command that I am using to mount the display in etcmodprobedfbtftconf options fbtftdevice namerpidisplay speed gpiosreset dc led rotate cs busnum in etcmodulesloaddfbtftconf spibcm aux fbtftdevice So to make the driver load earlier in the boot process I understand that I should compile it directly into the kernel Ive successfully downloaded crosscompiled and updated the kernel with success but I cant seem to figure out which changes need to be made to enable The device overlay for this specific display x ili chip no touchscreen SPI port CE How to load it into the PI Zero These instructions seem to be for different SoC bcm whereas the PI zero has a bcm The bcmregisterdevice function is not found in the boardbcm c file includes and I am not quite sure how to port it to the Pi Zero Any insights or guide on how to integrate this display into the kernel is highly welcome The error was fbtftdevice unknown parameter gpios ignored Looking at the code somebody removed the gpios moduleparam definition from fbtftdevicec since rc and it has been broken ever since Missing code static char gpios moduleparamgpios Do you know what the new interface should be I have been using the commands like the following sudo modprobe fbtftdevice custom namefbili gpiosreset dc led speed txbuflen rotate bgr The parameter gpios is not being recognized any more What should it be replaced with to specify reset dc and led Thanks I am doing development and prototyping using fbtft using an ILI based screen though I dont think that particularly matters to the question Because of some issues with our test setup it would be really useful to be able to reinitialise the attached screen if it gets power cycled Currently doesnt work being power cycled as it wont be reinitialised by fbtft which understandably assumes everything is fine Is there a way to do this I see the info about Beaglebone is targeting the caps folder which are unexistent in the version I have By the Kernel Overlays are going byebye too many bugs too many race conditions no kernel maintainers interested bootloader microSDpushbutton devmmcblk UBoot g b a eee location dd MBR bootloader eMMCdefault devmmcblk UBoot g aa a location dd MBR kernel tir nodejs v ubootoverlayoptions enableubootoverlays ubootoverlayoptions ubootoverlayprulibfirmwareAM XPRURPROC TI A dtbo ubootoverlayoptions enableubootcapeuniversal pkg check to individually upgrade run sudo apt install onlyupgrade pkg pkg bbcapeoverlays rcnee stretch I have all the divers build OK on the TI kernel I dont have a dts for BBB Is there an update information Thank you Can I use the driver to test aka sudo modprobe fbtftdevice custom busnum namefbili gpiosreset dc led speed Thank you now I try use oled ssd chip on device mt the dts config is below ssd addresscells sizecells status okay compatible solomonssd reg spimaxfrequency txbuflen rotate bgr fps buswidth dcgpios gpio resetgpios gpio csgpios gpio the screen is not normally display when it running the debug information is writevmemwrite failed and returned fbtftupdatedisplay writevmem failed to display buffer I am trying to enable the fbtft debug messages but I have not been able to do so My kernel has been compiled with the dynamic debug flag and I have executed these commands to try to enable the debug logs echo module fbtft p syskerneldebugdynamicdebugcontrol echo module fbtftdevice p syskerneldebugdynamicdebugcontrol echo procsyskernelprintk But when I insert de module with sudo modprobe fbtftdevice namera x gpiosreset dc busnum debug I cannot see any debug message on the dmesg output Hi I am trying to get this display to work in full resolution with the fbtftdevice module but I am having no luck I tried these options Use fbtftdevice nameadafruit Use fbtftdevice namepitft Both of them have the same result There is a part of the screen that I can draw onto and the rest just stays as random pixels What should I do to get it working on full resolution Also it may be worth mentioning that I am on a Raspberry Pi zero w running Arch Linux ARM Edit The adafruit option does not do anything The module with the fix for the Nokia to treat it as RGB works fine when loaded for the but when using nokia as the name the buffer is x display is x and con fbmap does not redirect the console