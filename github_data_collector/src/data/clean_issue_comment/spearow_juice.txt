 Versions Using Rust Stable stablex pcwindowsgnu CUDA is v CUDNN is v Tests Testing this with cargo run release verbose mackeyglass lstmdense RCudnn to support it is at Status This is currently unfinished with remaining tasks x Resolve Heap Error Add match arms OkError for RNNForward Add Compute Input Gradient Add Compute Parameters Gradient Verify against MackeyGlass or MNIST dataset PR RustCudnn and use Crates version for testing Memory Error error process didnt exit successfully target release juiceexamplesexe mackeyglass lstmdense exit code xc STATUSHEAPCORRUPTION This memory error is due to a part of RNNFORWARD failing likely to do with the initialisation of the weights Leaving this on draft PR while I resolve it Because cargo does not supports workspaces inside workspace but I do want to add some more example networks besides MNIST Hello I am wondering if juice supports LSTM RNN If not I could try to contribute and make that layer available Juice is a open Machine Learning Framework for hackers to build classical deep or hybrid machine learning applications What should be available for classical and hybrid applications I imagine linearlogistic regression maybe SVM Im curious what the current list of items needed to catch native up to the current feature set is across all the repositories My ulterior motive here is not having CUDAcompatible hardware right now This would help provide a reference implementation on vanilla machines that can be used to check against the OpenCL or CUDA implementations in case hardware or framework bugs show up there Bigger work items Recursive Neural Networks Long Term Short Term Memory OpenCL Backend juicecoasternn Autodiff juicecoasternn Accuracy enum instead of type usage juicegreenglascoaster Low hanging fruits Honour biases juice Gradient calculation for NDconvolution native backend coasternn Regression examples juiceexamples Add preprocessing filters to greenglas These should be represented by individual ticktes The full presentation of November th bernhardschusterrustmachinelearningwithjuicepdf It looks like theres no meansquared layer type just loglikelihood so for regression i think one is needed at the output Currently there is only the accuracy implemented for the confusionmatrix implemented but precisionrecall might be a good tool to display the state too The crate issues quite a few warnings Some of the unneeded identifiers could be intentional for later implementation but at the moment it creates a lot of compiler output to sift through Removing the warnings would also ensure the codebase is readable for humans and compilers the same way concatenation is a essential step in many architectures today and juice is missing out on those