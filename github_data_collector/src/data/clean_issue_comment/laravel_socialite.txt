 Socialite Version Laravel Version PHP Version Database Driver Version MariaDB Description The GitLab provider requests all scopes by default which grants very broad permissions if the application was created with the default settings In contrast the GitHub provider only requests the minimum required to authenticate the user useremail To prevent this only the readuser scope should be requested by default Steps To Reproduce Edit It appears the behavior depends on the scopes you grant to the application when creating it on GitLab If you dont check any of the scope checkboxes all of them will implicitly be checked when you add the application which causes the behavior described above I guess it still makes sense to restrict the scope asked by default If you only allow the readuser scope on the GitLab application you must request the scope explicitly by name otherwise GitLab will return an error text The requested scope is invalid unknown or malformed This can be worked around by explicitly overriding the scope when authenticating the user with GitLab php Redirect the user to the OAuth providers authentication page public function redirectToProviderstring provider RedirectResponse if provider gitlab Only request the readuser scope if authenticating with GitLab return Socialitedriverproviderscopes readuser redirect return Socialitedriverproviderredirect I can look into submitting a pull request if this change is desired I have general routes to allow easily adding Socialite providers php Routegetloginprovider Auth LoginControllerredirectToProvidernamesocialiteredirect Routegetloginprovidercallback Auth LoginControllerhandleProviderCallbacknamesocialitecallback Because config is loaded before routes it isnt possible to set the redirect option in servicesphp using something like routesocialitecallback provider google My proposal is to allow setting a route name for Socialite and use that to create a default redirect if one isnt specified Something like this although there isnt currently a simple way to get the provider name either php Format the callback URL resolving a relative URI if needed param array config return string protected function formatRedirectUrlarray config redirect valueconfig redirect if definedredirect return thisdefaultRedirectUrlconfig return StrstartsWithredirect thisapp url toredirect redirect Get a default callback route param array config return string protected function defaultRedirectUrlarray config socialiteconfig thisapp config socialite route valueconfig route if route return thisapp url routeroute provider config provider else throw new Exception Socialite Version Laravel Version PHP Version Description When using linkedIn with scopes the scope is requested however the data is not getting fetched afterwards When I for example have the scope rbasicprofile I should be able to get the vanityName however this data is not getting fetched Looking into the provider we have a bunch of hardcoded properties these do not change depending on which scope I am requesting Steps To Reproduce Make a request with scope rbasicprofile I believe a space is the more sensible default as Ive not seen too many examples using commas See discussion here as well Socialite Version v Laravel Version v PHP Version PHP Database Driver Version mysql Description Wrong avatar original for Google API image url avataroriginal But original size is Socialite Version Laravel Version PHP Version Database Driver Version Postgres Description It seems Facebook s changed how it returns access tokens since Socialite was last updated and the expiration date is no longer surfaced and therefore set by Socialite It s also unclear whether the token Socialite returns is a shortlived token or a longlived token It is possible to debug a Facebook access token But again this is confusing as that endpoint returns two expires timestamps an expiresat timestamp and a dataaccessexpiresat timestamp I m not sure whether it would be acceptable for Socialite to make a second HTTP call just to fetch the expiresat timestamp value but it sure would be helpful in my applications so that for stored access tokens I can see when they expired and if they need refreshing Steps To Reproduce Create a route to authenticate with Facebook Create a route to handle the callback from Facebook Observe that expiresIn is null when calling Socialitedriverfacebookuser