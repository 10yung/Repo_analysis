 Hi My aim is to replace with function min and replace with max So a b c should be rewritten as mina maxbc I thought modifying the syntax tree is the way to go Is it possible to modify ast output and then convert back into an expression Im sharing a small example R a b c express a b c expressadv c b a b c The rewritten express should evaluate to and expressadv should evaluate to Expected expressions are R mina maxbc modified express min mincb mina maxbc modified expressadv So this is before ast a b c a b c and this is after astminamaxbc min a max b c To print ALTREP objects The inspect method typically provides more information about the object Eg r Internalinspect fa bec INTSXP g c NAM compact lobstrsxp x fa be a INTSXP altrep named Internalinspecttl fa bec d INTSXP g c MARKNAM ALTREP progresstickalong fa bec INTSXP g c MARKNAM compact lobstrsxptl x fa bec d INTSXP altrep named Prepare for release x Check that description is informative x Check licensing of included files x usethisusecrancomments x devtoolscheck x devtoolscheckwindevel x rhubcheckforcran x rhubcheckplatform ubunturchk x rhubcheckwithsanitizers x Polish pkgdown reference index Submit to CRAN x usethisuseversionminor x Update crancommentsmd x devtoolssubmitcran x Approve email Wait for CRAN x Accepted tada x usethisusegithubrelease x usethisusedevversion Finish blog post Tweet Add link to blog post in pkgdown news menu Would either take expression env or quosure Prints parent envs at end and printing an indexing into them with numberscolours next to each symbol r libraryrlang librarylobstr q newquosureexprx envx q newquosureexprx envx lobstrastq q Warning quoexpr is softdeprecated as of rlang Please use quosquash instead This warning is displayed once per session x x supCreated on by the reprex package v sup Probably what I was thinking in As discussed in rlibrlang I recently needed to log what symbols are getting hit in my datamask using evaltidy lionel thought this might be a more appropriate home I have prototype using makeActiveBinding although Lionel suggested theres a cleaner alternative using objectable The protoype is here Im happy to open this as a PR with the active bindings version although Im not sure ifwhen I would be able to switch this to objectable Im happy to take a stab at this if it seems useful cc filipsch who is interested in this issue Really enjoyed the NYC R conference talk on lobstr This might be outside the scope of lobstr but it seems like being able to enhance the AST with line column info could lead to useful ways of allowing people to explore the AST and its relationship back to their code I worked briefly on connecting AST and parse data while flying somewhere but never finished I think the key points are getParseData returns a dataframe but there is a handy function in to turn it into a tree and plot it In the AST a nodes first child is always the function called but in the parse data their order corresponds to their position in the code shown below As far as I can tell the layers of the AST and parse data graph match so relating them requires filtering parse data nodes corresponding to expr tokens potentially finding a nonexpr token corresponding to leftmost AST child node in other tokens eg in the is not an expr token There may be a much easier way to do this Heres is a comparison of the parse data for a binary operator Code used to graph parsed data taken from libraryigraph plotparser functionx y getParseDatax stopifnotrequireigraph ynewid seqalongyid h graphtree verticesid yid label ytext fori in nrowy ify i parent h h edgecy yid y i parent newid y i newid ploth layoutlayoutreingoldtilford createparsegraph functionpd pdnewid seqalongpdid h graphtree verticesid pdid label pdtext fori in nrowpd ifpd i parent h h edgecpd pdid pd i parent newid pd i newid h Some notes on matching nodes Steps to map to AST from parse data start at root AST node call ast and PD node call pd a if isatomicast build atomic node by returning ast Otherwise b if iscallast and isnameast then ast is child token of pd i standard call will make it the first child token ii binary will be in the middle so easier to search for ast c if iscallast and iscallast then it is first child of pd Get all child exprs of pd in order move one matching ast to front You have matched up ast to pd Recurse Starting to noodle on this idea because I think it will be useful for the data structures chapter in R DS R Atomic vectors Compactly displays type and length somethingstr int somethingstrletters chr Also displays attributes Class gets special handling somethingstrfactorletters int factor levels chr I imagine this being used once youve taught basic data structures and purrr so its useful to see the details instead the helpful lies that str tells you somethingstrSystime dbl POSIXct POSIXt tzone chr Lists Shows hierarchy x list list list somethingstrx list list dbl dbl list dbl dbl Very long lists are truncated x replicate listrunif somethingstrx list dbl dbl dbl dbl dbl So are very deep lists x list for i in xx listx somethingstrx list list list list And length and depth interplay in some complicated way Maybe the way to think about it is that you want to say print at most lines How should you allocate those lines to best display the structure of the object I dont think simple cutoffs for length vs depth will work in general Think about something on a data frame containing models etc Maybe can assume unnamed lists are generally homogeneous Names get special treatment somethingstrmtcars list dataframe mpg dbl cyl dbl disp dbl hp dbl drat dbl wt dbl qsec dbl vs dbl am dbl gear dbl carb dbl rownames chr Very long names get truncted x listthisisaveryveryveryverylongname somethingstrx list thisisavery int Environments Need someway to control recursion into environments Probably dont want it on by default because there are too many objects that have possibly big environments attached eg formulas somethingstrglobalenv env RGlobalEnv somethingstrglobalenv showenv L env RGlobalEnv df list dataframe x int rownames int i int parentenv env toolsrstudio showenv L would also show the contents of parentenv Functions somethingstrfunctionx y x func x y x env env RGlobalEnv cc jennybc lionel 