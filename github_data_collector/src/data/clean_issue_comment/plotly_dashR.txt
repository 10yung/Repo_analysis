This PR adds in custom index functionality by adding in a method to the Dash class which takes in an HTML index string with some necessary defaults and whatever custom additions or changes a user wants to make and then renders it above or below the app based on where the code is added Custom metatags title and scripts like the Google Tag Manager analytics can be added to the index body and loaded with the script tag This functionality brings DashR more inline with the features available for Dash for Python An example of a custom string is below string DOCTYPE html html head metatags titleprivatenametitle favicon csstags script type textjavascript srcgoogleanalyticsjsscript head body pThis is a custom stringp Google Tag Manager noscript noscriptiframe src height width styledisplaynonevisibilityhiddeniframenoscript End Google Tag Manager noscript div idreactentrypoint div classdashloadingLoadingdiv div footer script iddashconfig typeapplicationjson toJSONselfconfig script scriptstags footer body html Closes The problem appears on Safari on macOS Catalina but interestingly does NOT occur on Chrome Version Possibly related to this issue Heres a video of the problem in action the plot actually flashes Screen Shot at AM Heres the code to cause the crash actually most plots have this behaviour Just copy this into a JupyterLab notebook and run the cell optionstidyversequiet TRUE reprplotwidth reprplotheight librarytidyverse libraryplotly Lets load up a familiar dataset mtcars headmtcars p ggplotmtcars aesx wt y mpg geompoint geomsmooth themebw labsxWeight lbs yFuel efficiency mpg titleCar Fuel efficiency by weight p ggplotlyp R sessionInfo R version Platform x appledarwin bit Running under macOS Catalina Matrix products default BLAS LibraryFrameworksRframeworkVersions ResourcesliblibRblas dylib LAPACK LibraryFrameworksRframeworkVersions ResourcesliblibRlapackdylib locale enCAUTF enCAUTF enCAUTF CenCAUTF enCAUTF attached base packages stats graphics grDevices utils datasets methods base other attached packages plotly ggplot loaded via a namespace and not attached Rcpp later pillar compiler base enc tools zeallot digest uuid viridisLite jsonlite evaluate lifecycle tibble gtable pkgconfig rlang shiny IRdisplay crosstalk yaml IRkernel repr withr dplyr httr htmlwidgets vctrs grid tidyselect glue datatable R pbdZMQ farver purrr tidyr magrittr promises backports scales htmltools assertthat xtable mime colorspace httpuv labeling lazyeval munsell crayon and jupyter version jupyter core jupyternotebook qtconsole ipython ipykernel jupyter client jupyter lab nbconvert ipywidgets nbformat traitlets When columns contain NA values then Plotly changes the colors that I assign for the lines and markers Any ideas on how to fix this Thank you I am using R version and Plotly version The data for the first graph contains some NA values for the trustecb column which is plotted on the yaxis The colors for the lines and markers are incorrect ie different than the colors assigned in the code However when I then recode the NA values to and plot the graph then the colors are correct IddiDZN I FVxyZ Creating dataframe trusteurcyp structurelistyear c L L L L L L L L L L L L L L L L L L L L L group structurec L L L L L L L L L L L L L L L L L L L L L Label cCypriots EU EU GreekCypriots TurkishCypriots class factor trustecb c NA NA NA NA rownames c L L L L L L L L L L L L L L L L L L L L L class dataframe Creating plots libraryplotly plottrustecbcyp plotlytrusteurcyp y trustecb x year color group type scatter mode linesmarkers line listcolor factortrusteurcypgroup labels cFFCF A A width marker listcolor factortrusteurcypgroup labels cFFCF A A size legendgroup group showlegend T layoutyaxis listtitle Tend to Trust titlefontlistsize range c tickfont listsize xaxis listtitle dtick tickfont listsize Recoding NA to to show that now colors in plots are correct trusteurcyptrustecb isnatrusteurcyptrustecb Rerun plotly code above This PR proposes to allow passing JavaScriptfunctionsasstrings within callbacks in Dash for R addressing This implementation fixes the namespace as dashprivateclientside and automatically prepends dashprivateclientside to the output of createCallbackId A simple test is performed to ensure that a clientside callback does not overlap with an existing R callback in privatecallbackmap To do Create simple integration test to demonstrate the functionality Write a simple unit test to ensure that collisions between clientside and serverside callbacks targeting the same output are prevented with a useful message supplied to the developer MarcAndreRivet As noted in plotlydash and plotlydash it would be very convenient for app developers who wish to leverage JavaScript callbacks to compose these directly within the callback method One approach might be to pass the JS directly as a string appcallback outputoutcomponent value paramslistinputincomponent value inputincomponent value clientsideFunction functionlargeValue largeValue return someTransformlargeValue largeValue The namespace function name can be determined in a fashion similar as whats done in DashPy or not with the dashprivate prefix This feature should be reasonably straightforward to implement in Dash for R and it would help improve developer ergonomics if it were available As described in and seen in code examples posted to our community forum Dash for Python permits app developers to leverage Flask support for adding new routes Dash for R currently lacks this functionality so Dash for Python code like this appcallbackOutputmylink href Inputmydropdown value def updatelinkvalue return dashurlToDownloadvalueformatvalue appserverroutedashurlToDownload def downloadcsv value flaskrequestargsgetvalue create a dynamic csv or file here using StringIO instead of writing to the file system strIO StringIOStringIO strIOwriteYou have selected formatvalue strIOseek return sendfilestrIO mimetypetextcsv attachmentfilenamedownloadFilecsv asattachmentTrue currently has no direct counterpart on the R side We should expose the ability for application developers to define new routes within the Dash for R API One possible option is through the use of fiery plugins eg a serverroute method could be added which exposes the ability to add plugins with new route handlers plugin list onattach functionserver router serverpluginsrequestroutr route Routenew routeaddhandlerall functionrequest response arglist messageHello TRUE routeraddrouteroute name Helloplugin require requestroutr Thanks to CanerIrfanoglu for raising this issue initially Im not sure if this is intended behavior but dccLinkclick me href foop refresh TRUE will encode the in the URL upon refreshing This will create an incorrect path name Heres a sample app to illustrate my problem r librarydash librarydashCoreComponents librarydashHtmlComponents app Dashnewsuppresscallbackexceptions TRUE applayoutdccLocationid url htmlDivid pagecontent appcallback output listid pagecontent property children params listinputid url property pathname functionpath if path list htmlPdccLinkfoop with ddcLink and refreshTRUE href foop refresh TRUE htmlPdccLinkfoop with ddcLink and refreshFALSE href foop refresh FALSE else if path foo htmlPIt works else htmlPSomething went wrong apprunserverdebug TRUE Of course the correct result can be achieved using htmlA and I realize that this may not actually be related to DashR itself but to Dash in general I have two comments related to the documentation of htmlButton htmlButton is documented in the core components which makes sense to me but it is actually part of the dashHtmlComponents R package Maybe add a link from the documentation of the HTML components The documentation for htmlButton states that its initial value is NULL but is actually listNULL Below is the example from the documentation adapted to confirm this The original example works fine because it actually does ascharacterlistNULL which is the string NULL r librarydash librarydashCoreComponents librarydashHtmlComponents app Dashnew applayout htmlDiv list htmlDivdccInputidinputbox typetext htmlButtonSubmit idbutton htmlDividoutputcontainerbutton childrenEnter a value and press submit appcallback output listid outputcontainerbutton property children paramslistinputid button property nclicks inputid inputbox property value functionnclicks value if islistnclicks sprintfnclicks is a list of length d lengthnclicks else sprintfnclicks is not a list and you have clicked the button d times nclicks apprunserver This app will initially display the following htmlButtonexample The changes proposed by this PR are minimal and largely related to outdated code hocho islayout and layoutcontainerid hocho redundant iscomponentlayout test Closes 