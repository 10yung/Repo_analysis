 SiestaUI library producttarget added Copy Collection extension into SeistaUI source fixing an inaccessable due to internal protection level error while building My app needs to monitor the network connection to an API After enough errors accumulate It stops making normal requests and lazily pings the API with a static URL as follows let userRequest VAPIsharedInstanceresourceload Base url is a health check for the api When an adequate number of successful pings has occurred the app goes back to normal operation During testing I can inject errors into the API response and clear them as needed For every error except the system works as expected With the ping keeps getting responses from the load even after the network response has gone back to a normal As the error clears the load returns good response and then resumes returning Using URLSession I get a for the success With Alamofire the success is a A parallel direct URLSession request as follows Test code let url URLinitstring VAPIVAPIBaseURL let dataTask selfdefaultSessiondataTaskwith url weak self data response error in if error nil printerrorlocalizedDescription else if let data data let response response as HTTPURLResponse printURLSession Response responsestatusCode dataTaskresume Behaves as expected Ive attached a log file of the divergent responses Clearing Logdocx Closes This may be a naive implementation and Im not sure it would work for multiple chains But its working for what Im using it for Chained requests currently do not support progress If you are reading these words and want that feature please file an issue on Github It happened How big of a deal is this Im opening this issue based on the topic discussed here Summary When at the app startup a Disk Cached Resource get loaded from disk via loadIfNeeded and the resource is still valid a call to receiveDataNotModified just touch the resource updating the timestamp with the current date This makes the Resource expiration time much longer then the expected Resolution As you pointed out the issue looks to be here where the call to receiveDataNotModified touch the resource updating the timestamp I find myself needing a filebased cache for Siesta I see that there is a branch named filecache in the repo Its my understanding that this is the beginning of a file caching system for Siesta correct Is it a dead end with serious problems or simply unfinished work If the latter what still needs to be done If it fits the requirements I have for a file cache I could work on it and make a PR but Id like to know more about how you envision it working pcantrell and what things need to happen before it is ready to be used Let me know I am trying add a content transformer to the parsing phase of the Siesta pipeline using the following selfserviceconfigure weak self in all endpoints guard let strongSelf self else return pipeline parsing addTextResponseTransformer contentTypes xml other configuration code However when a network response with the content type applicationxml charsetutf comes in the content type is not matching to the regex that Siesta has generated in the add call I have written the following playground code which I believe replicates what Siesta is doing when it looks for a matching content type import UIKit var str applicationxml charsetutf let regex try NSRegularExpressionpattern xml printregexdescription let fullRange NSRangelocation length str as NSStringlength let match regexfirstMatchin str options range fullRange As far as I can tell this should replicate what Siesta does in the file RegexSiestaswiftin its extension NSRegularExpressionmatches However the above playground code gets a match while Siesta does not If I change the pipeline transformer add to pipeline parsing addTextResponseTransformer contentTypes applicationxml It works as expected Why wont the pattern xml work It seems like it should Thanks for the help with this I need to refresh same web service when tap the refresh button But Its no any service call from refresh button Refresh button is working only one time Can you give me a solution for recall same urls Broken link I tried to get the Siesta tests running on my local machine however Carthage couldnt compile Nocilla for tvOS I got the following error message User defaults from command line IDEDerivedDataPathOverride UserswoodjLibraryCachesorgcarthageCarthageKitDerivedData F Nocillabd ec caa f c bbbf a f be e Build settings from command line CARTHAGE YES CODESIGNIDENTITY CODESIGNINGREQUIRED NO ONLYACTIVEARCH NO SDKROOT appletvsimulator xcodebuild error Unable to find a destination matching the provided destination specifier platformtvOS Simulator idECE D A FC B A CAFF A EBD C Ineligible destinations for the Nocilla tvOS scheme platformtvOS iddvtdeviceDVTiOSDevicePlaceholderappletvosplaceholder nameGeneric tvOS Device platformtvOS Simulator iddvtdeviceDVTiOSDeviceSimulatorPlaceholderappletvsimulatorplaceholder nameGeneric tvOS Simulator Device If Im reading that right it wants a tvOS simulator which is version but since Im not yet on Xcode I only have access to devices up to Can we fix this so that tvOS can compile in Xcode If thats not the problem how do I fix this 