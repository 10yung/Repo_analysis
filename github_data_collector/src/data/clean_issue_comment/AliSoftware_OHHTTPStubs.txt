 Thanks for contributing to OHHTTPStubs Before you submit your pull request please make sure to check the following boxes by putting an x in the Checklist x Ive checked that all new and existing tests pass x Ive updated the documentation if necessary x Ive added an entry in the CHANGELOG to credit myself Description Ive added a matcher called hasFormBody that tests whether the NSURLRequest contenttype is applicationxwwwformurlencoded and body contains query parameters Motivation and Context In POST request with applicationxwwwformurlencoded parameters are handled in httpBody For that reason containsQueryParams function is useless for this situation Also for the same reason as I need a new matcher that takes query items from httpBody and matches with expected pairs Thanks for contributing to OHHTTPStubs Before you submit your pull request please make sure to check the following boxes by putting an x in the Checklist Ive checked that all new and existing tests pass Ive updated the documentation if necessary Ive added an entry in the CHANGELOG to credit myself Description Describe your changes in detail Motivation and Context Why is this change required What problem does it solve If it fixes an open issue please link to the issue here Please describe in detail how you tested your changes Thanks for contributing to OHHTTPStubs Before you submit your pull request please make sure to check the following boxes by putting an x in the Checklist x Ive checked that all new and existing tests pass x Ive updated the documentation if necessary x Ive added an entry in the CHANGELOG to credit myself Description Add missing import to support building with Bazel since it doesnt import underlying system modules by default Describe your changes in detail Motivation and Context Why is this change required What problem does it solve If it fixes an open issue please link to the issue here Please describe in detail how you tested your changes Thanks for taking the time to report your issue with OHHTTPStubs When submitting your issue please make sure to check the following boxes by putting an x in each appropriate so we can fully understand the context of your problem and help you better New Issue Checklist x I have tried with the latest version of OHHTTPStubs x I have read the README x I have read the Using the right Swift Version of OHHTTPStubs for your project section x I have searched in the existing issues x I have read the OHHTTPStubs wiki to see if there wasnt a detailed page talking about my issue Environment version of OHHTTPStubs integration method you are using x Cocoapods Carthage submodule other version of the tool you use Issue Description Xcode and Swift have both been shipped recently and it would be great to get support added for Swift The project that I am working on using OHHTTPStubs is working in Swift and Xcode but not in Xcode and Swift Thanks for taking the time to report your issue with OHHTTPStubs When submitting your issue please make sure to check the following boxes by putting an x in each appropriate so we can fully understand the context of your problem and help you better New Issue Checklist x I have tried with the latest version of OHHTTPStubs x I have read the README x I have read the Using the right Swift Version of OHHTTPStubs for your project section x I have searched in the existing issues x I have read the OHHTTPStubs wiki to see if there wasnt a detailed page talking about my issue Environment version of OHHTTPStubs LIB VERSION HERE integration method you are using x Cocoapods Carthage submodule other version of the tool you use INSERT VERSION HERE Issue Description DESCRIBE YOUR ISSUE HERE Complete output when you encounter the issue if any INSERT OUTPUT HERE Checklist x Ive checked that all new and existing tests pass x Ive updated the documentation if necessary x Ive added an entry in the CHANGELOG to credit myself Description Fixes Also does more idiomatic error handling Wrong objc NSError error NSArray result someObject someMethod error error if error assume success Correct objc NSError error NSArray result someObject someMethod error error if result assume success Motivation and Context The main motivation was addressing static analysis warnings I encountered when analyzing an ObjectiveC project The error handling was just something I fixed along the way Note I also added a couple of missing generics annotations which may affect the public interface If they are imported into Swift they will go from Any to OHHTTPStubsDescriptor This is a breaking change for anyone who is using the output of this method in Swift Actually it may not be breaking since in Swift they were probably already doing something like for descriptor in descriptors as OHHTTPStubsDescriptor and after this update that line will throw a compile warning not an error So this can probably be a bugfix not a major release Testing I added a couple of missing tests for error throwing cases and made sure all the tests were passing Updating gitignore Adding Packageswift Adding Swift tests getting all builds working Downgrading swift package version to be compatible with Xcode Disabling xcode tests and redirect tests in other xcode versions Changing iPhone types depending on Xcode version Passing conditional compilation flags to swift test to disable redirect tests in CI Bumping podspec version Cleaning up podspec Updating example projects Adding SPM Example Moving Example Stubs to shared folder Adding building example apps to CI Adding Carthage builds to CI Updating rake file for SPM tests Passing Swift Versions to carthage Updating SPM example to use URLSession instead of URLConnection Updating documentation Checklist x Ive checked that all new and existing tests pass x Ive updated the documentation if necessary x Ive added an entry in the CHANGELOG to credit myself Description This PR is for adding Swift Package Manager support Motivation and Context Apple integrated Swift Package Manager into Xcode this year and these are the changes to support it File Structure The apple docs tell us to have the Packageswift at the root of the repository To turn your existing component into a Swift package you don t need to create a new Swift package from scratch Instead keep your existing project and add a READMEmd and a Packageswift file inside the root directory of your library project to turn your library into a Swift package While SPM does not require a specific structure OHHTTPStubss SPM support will be easier to maintain if we conform to the standard style of foldering in SPM Sources and Tests at the root of the repo and then folders matching the names of the targets inside of those This required moving most of the files up a level by removing the OHHTTPStubs folder that was previously at the root of the project and also renaming UnitTests to become Tests The pod specs were updated for the new file structure To validate them I ran a pod install in the ObjC and Swift Example projects I verified that the same files exist their visibility did not change and that the example projects still work as expected The OHHTTPStub project was also updated for the new file structure To validate it I ran unit tests on several Xcode versions Package Naming I went through several revisions on the right design for the package targets Original Design I originally went down the path of trying to recreate the subspecs that exist in our Cocoapods integration This was a bit painful but worked Once I started on the SPM example project I saw the awkwardness of having to import each of the targets to my swift example code img width altScreen Shot at PM src Second Design I then decided to modify the package design to be targets OHHTTPStubs and OHHTTPStubsSwift but ran into problems with this approach also As soon as I created the OHHTTPStubs target I started receiving warnings about certain headers not being included in our OHHTTPStubsh umbrella header SPM started seeing this existing file as our umbrella header and wasnt generating one on its own anymore I was tempted to rename our OHHTTPStubsh file to be something else to get SPM to create an umbrella header again but wanted to retain backwards compatibility with this PR Final Design I then changed the design to be targets OHHTTPStubsCore and OHHTTPStubsSwift Importing these in Swift will look like this img width altScreen Shot at AM src Example Projects A Swift Package Manager project with OHHTTPStubs integration Xcode beta was added to the ExamplesSwiftPackageManager folder This example project uses URLSession APIs The Stubs folder and files used in the example apps is now shared to remove the previously duplicate stub files in each example CI Support I added a lot more is this overkill travis tasks in this PR These are the new tasks xcodebuild test in Xcode for iOS Static iOS Dynamic MacOS and tvOS swift test in Xcode carthage build commands in and several versions of swift xcodebuild build to build all example projects in Xcode Other Mocktail and HTTPMessage targets were not created in this PR Mocktail does not support SPM and hasnt actually been updated in several years I added a comment in the README for anyone to open an issue if they see a need for these I would be happy to create a followup PR for OHHTTPStubsHTTPMessage if we desire it Fixes I have been able to implement mock tests for my upload requests based on this Stackoverflow answer As a result I have removed every OHHttpStubs dependency from my project to not mix libraries Maybe you could change your internal approach to stubbing the web requests and support upload tasks as well based on OCMock If you do not want to depend on an external library I think you could implement similar behaviour as OCMock with Method Swizzling New Issue Checklist x I have tried with the latest version of OHHTTPStubs x I have read the README x I have read the Using the right Swift Version of OHHTTPStubs for your project section x I have searched in the existing issues x I have read the OHHTTPStubs wiki to see if there wasnt a detailed page talking about my issue Environment version of OHHTTPStubs Any integration method you are using Cocoapods Carthage submodule x other version of the tool you use Xcode Issue Description Any plans to Integrate Swift Package Manager It is now a first class citizen on Xcode Complete output when you encounter the issue if any Installed OHHTTPStubs using pods but getting error some time for not finding it on the derived data of build machine Following is the error logs ld directory not found for option FUsersgreenhouseLibraryDeveloperXcodeDerivedDataHalogtngiaipxuhhfpfjxfwgtnylckkwBuildIntermediatesnoindexArchiveIntermediatesHaloDebugBuildProductsPathDebugiphoneosOHHTTPStubsb c d ld framework not found OHHTTPStubs clang error linker command failed with exit code use v to see invocation 