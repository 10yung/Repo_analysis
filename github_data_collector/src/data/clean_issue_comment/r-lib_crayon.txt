This detection is triggered if RSTUDIO is set There are a number of cases Console R process started from console via callrr or system etc Terminal R subprocess started from an R process in the RStudio terminal Build pane R subprocess of an R process in the build pane We do not deal with the cases where a terminal app xterm or another RStudio process is started from within RStudio as these cases are not very common In general also need to check for RSTUDIOCONSOLECOLOR because if it is not set then RStudio does not support colors anywhere An additional difficulty is that when RStudio starts up many of its informative environment variables are not yet set so we need to be careful in this case We will also cache the detection and use it unless a sink is active Solutions Console isattystdout FALSE but rstudioapiisAvailable TRUE Need special case at startup time R process started from console via callrr or system etc isattystdout FALSE and rstudioapiisAvailable FALSE RSTUDIOTERM is not set Terminal RSTUDIOTERM is set isattystdout TRUE R subprocess started from an R process in the RStudio terminal RSTUDIOTERM is set but isattystdout FALSE Build pane R subprocess of an R process in the build pane Seen this in revdepcheck Currently hascolor checks if stdout is a tty and if it is not then colors are disabled However it is possible users would still want color if stdout is redirected so is no longer a tty but stderr is still a tty and the colors are being used in messages to stderr In fact perhaps it is actually more common for colors to be used in output to stderr than stdout I am not sure how best to address this as crayon has no way of knowing where the output is going to but the current behavior seems too conservative Coming from We just give up on Windows before we get to the emacs part Context Im writing tests for a crayonusing package and want the joy of testing the UI wo ANSI escape codes I struggle to remember how to turn crayon off I end up reminding myself re crayonenabled by reading source Can we advertise crayonenabled in some highlevel doc Maybe README Id be happy to make a PR This seems related to except this is running R from an Rstudio terminal instead of the normal Rstudio console Setting forget to TRUE fixes it img width altimage src This is a pretty obscure use case so probably not worth dealing with unless its trivial to fix The tempfile thing is unrelated hascolor returns TRUE within noninteractive RStudio r Within RStudio callrrfunction crayonhascolor TRUE Outside RStudio callrrfunction crayonhascolor FALSE I think this is because the rstudiowithansisupport check comes before the isatty check r Within RStudio callrrfunction crayonrstudiowithansisupport sinknumber TRUE callrrfunction isattystdout FALSE Outside RStudio callrrfunction crayonrstudiowithansisupport sinknumber FALSE callrrfunction isattystdout FALSE Happy to send a PR to inverse the branches if that diagnostic looks right Im colorblind and use a dark theme in my editor Whenever a package uses crayonred I cant see the text at all Would it be possible to add an options system to let users to specify different colors to use for the base crayon color functions For example the option to specify optionscrayonred coral to use the coral color instead of the base R red color for red text If this is reasonable I would be happy to do a pull request So that apps can opt in I am on Win neovim and neovimqt When I use terminal to run ls coloralways I get nicely colored output When I open R and run librarytidyverse which uses crayon I see escape sequences instead of colors mAttaching packages m tidyverse mv m mggplot m mv m mpurrr m mv m mtibble m mv m mdplyr m mv m mtidyr m mv m mstringr m mv m mreadr m mv m mforcats m Is neovimqt terminal on Windows not supported or am I doing something wrong If this is not the right place to address this issue could you point in the right direction