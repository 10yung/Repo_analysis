Hi Can we use a URL as json source like data Thanks for replying Description In master EachKey cannot extract from an array of strings Specifying foo would return nothing for foo ab because EachKey calls the Get function twice and in the case of strings inside arrays the first Get strips quotes and the second then cannot recognize that it has been passed a string This PR appears to make extraction from arrays of strings work properly without breaking any existing tests It includes a test which failed on master but passes with the changes Benchmark before change Neither benchmark worked go test testbenchmem bench JsonParser benchmark benchtime s v go directory benchmark is outside main module make bench docker run v pwdgosrcgithubcombugerjsonparser i t jsonparser go test testbenchmem bench JsonParser benchmark benchtime s v Unable to find image jsonparserlatest locally docker Error response from daemon pull access denied for jsonparser repository does not exist or may require docker login denied requested access to the resource is denied See docker run help make Makefile bench Error The following code makes a panic in searchKeys function go package fuzz import testing githubcombugerjsonparser func TestFuzzCrashert testingT crasher byte jsonparserGetIntcrasher a b Here is the panic output panic runtime error index out of range with length goroutine running githubcombugerjsonparsersearchKeys x x x xc e x x xffffffffffffffff UsersthomasleroySoftwaregosrcgithubcombugerjsonparserparsergo xef githubcombugerjsonparserinternalGet x x x xc e x x x xc xc d x f UsersthomasleroySoftwaregosrcgithubcombugerjsonparserparsergo x b githubcombugerjsonparserGet x x x xc e x x x a x bc x ab xc e UsersthomasleroySoftwaregosrcgithubcombugerjsonparserparsergo x b githubcombugerjsonparserGetInt x x x xc e x x x a x daa a xc e UsersthomasleroySoftwaregosrcgithubcombugerjsonparserparsergo x b UsersthomasleroySecurityFuzzingGofuzzFuzz x x x x UsersthomasleroySecurityFuzzingGofuzzjsonparsergo x gofuzzdepMain xc f x x gofuzzdepmaingo x ad mainmain UsersthomasleroySecurityFuzzingGofuzzgofuzzmainmaingo x exit status The function also crashes if you call GetIntcrasher a The following test will cause a panic func TestJsonLibraryt testingT cb funcidx int val byte vt jsonparserValueType err error badval bytefoo bar baz jsonparserEachKeybadval cb stringfoo FAIL TestJsonLibrary s panic runtime error slice bounds out of range recovered panic runtime error slice bounds out of range goroutine running testingtRunnerfunc xc usrlocalgosrctestingtestinggo x a panic x xc fa usrlocalgosrcruntimepanicgo x b githubcombugerjsonparserEachKey xc fa x x x adf xc cf x x x homejohngopkgmodgithubcombugerjsonparserv ee c eae eparsergo x af I acknowledge that it is bad code but I managed to trigger it via careless parsing on my end how to indicate that cb return an error for ArrayEach like ObjectEach do Currently I use this code to get len Is there any way more directly func getObjectLenvalue byte int error ret objectCallback funckey byte value byte dataType jsonparserValueType offset int error ret return nil if err jsonparserObjectEachvalue objectCallback err nil return fmtErrorfgetObjectLen ObjectEach error v err return ret nil func getArrayLenvalue byte int error ret arrayCallback funcvalue byte dataType jsonparserValueType offset int err error ret if err jsonparserArrayEachvalue arrayCallback err nil return fmtErrorfgetArrayLen ArrayEach error v err return ret nil Greetings i have two json objects like below First One dataheader callid wwt l b b id protocolheader captureId Second One id protocolheader captureId dataheader callid aa node I would like to merge them so they like below id protocolheader captureId dataheader callid aa node dataheader callid wwt l b b id protocolheader captureId Any hint how can I achieve the above result Br Aqs I m interested in getting the dimensions of the JSON structure or obtaining a difference between two structures to know if the match or not the root json maybe as maybe as how get the root json type How to use from json file