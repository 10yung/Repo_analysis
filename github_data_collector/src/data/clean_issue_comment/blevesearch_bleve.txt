This is the stack trace we got in our tests fatal error concurrent map read and map write goroutine running runtimethrow x b b x usrlocalgosrcruntimepanicgo x fp xc c f b sp xc c f pc x runtimemapaccess faststr x f xc f x c x xc c fa xcb usrlocalgosrcruntimemapfaststrgo x f fp xc c f sp xc c f b pc x ff githubcomblevesearchbleveanalysisTokenFrequenciesMergeAll xc f x dd x xc cc homecirclecigoworkspacepkgmodgithubcomblevesearchblevev c a f x fp xc c fa sp xc c f pc x d githubcomblevesearchblevedocumentCompositeFieldCompose xc e d x dd x x xc cc homecirclecigoworkspacepkgmodgithubcomblevesearchblevev c a fdocumentfieldcompositego xf fp xc c fa sp xc c fa pc x dd githubcomblevesearchbleveindexupsidedownUpsideDownCouchAnalyze xc dbda xc e d x homecirclecigoworkspacepkgmodgithubcomblevesearchblevev c a findexupsidedownanalysisgo xc fp xc c ff sp xc c fa pc xc b githubcomblevesearchbleveindexAnalysisWorker xc f e xc f e homecirclecigoworkspacepkgmodgithubcomblevesearchblevev c a findexanalysisgo x fp xc c ffd sp xc c ff pc x e b runtimegoexit usrlocalgosrcruntimeasmamd s x fp xc c ffd sp xc c ffd pc x created by githubcomblevesearchbleveindexNewAnalysisQueue homecirclecigoworkspacepkgmodgithubcomblevesearchblevev c a findexanalysisgo xc I think that the root cause is that iterating on the map pointers change under the hood which will lead to analysing the same document twice mappings a generic reusable mapping for english text englishTextFieldMapping bleveNewTextFieldMapping englishTextFieldMappingAnalyzer enAnalyzerName englishTextFieldMappingStore true englishTextFieldMappingIncludeInAll true a generic reusable mapping for keyword text keywordFieldMapping bleveNewTextFieldMapping keywordFieldMappingAnalyzer keywordName docMapping bleveNewDocumentMapping docMappingAddFieldMappingsAtid englishTextFieldMapping docMappingAddFieldMappingsAtcnname englishTextFieldMapping docMappingAddFieldMappingsAtcitycode englishTextFieldMapping docMappingAddFieldMappingsAtcitycn englishTextFieldMapping docMappingAddFieldMappingsAtenname englishTextFieldMapping docMappingAddFieldMappingsAtcountry englishTextFieldMapping docMappingAddFieldMappingsAtcountrycode englishTextFieldMapping docMappingAddFieldMappingsAtprovince englishTextFieldMapping docMappingAddFieldMappingsAtcityen englishTextFieldMapping docMappingAddFieldMappingsAtcitypinyin englishTextFieldMapping docMappingAddFieldMappingsAtcityjianpin englishTextFieldMapping indexMapping bleveNewIndexMapping indexMappingDefaultAnalyzer en indexMappingDefaultMapping docMapping indexMappingIndexDynamic true query func Searchq string from size int items interface err error var searchQuery queryQuery if q queryId queryNewMatchPhraseQueryq queryIdSetFieldid queryCnname queryNewMatchPhraseQueryq queryCnnameSetFieldcnname queryCitycode queryNewMatchPhraseQueryq queryCitycodeSetFieldcitycode queryCitycn queryNewMatchPhraseQueryq queryCitycnSetFieldcitycn queryEnname queryNewMatchPhraseQueryq queryEnnameSetFieldenname queryCountrycode queryNewMatchPhraseQueryq queryCountrycodeSetFieldcountrycode queryCountry queryNewMatchPhraseQueryq queryCountrySetFieldcountry disQuery bleveNewDisjunctionQuery disQueryAddQueryqueryId queryCnname queryCitycode queryCitycn queryEnname queryCountrycode queryCountry searchQuery disQuery else searchQuery bleveNewMatchAllQuery searchRequest bleveNewSearchRequestOptionssearchQuery size from true searchRequestFields stringid cnname citycode citycn enname countrycode country searchRequestSortBy stringid searchResult err bindexSearchsearchRequest if err nil return fmtPrintlnsearchResult for v range searchResultHits items appenditems vFields fmtPrintfnod s s v n i vIndex vID vFields return when i run searchbjs i want query match the whole bjs phrase documentsbut i found that it return a document not match the whole phrase bjs the doc is id COO cnname citycode COO citycn enname Cadjehoun country province cityen Cotonou countrycode BJ regioncode AF how to make searchbjs not match the doc only match documents which has whole bjs string Im not sure what Im doing wrong I think I should get a result but I dont not sure why package main import fmt os githubcomblevesearchbleve func main open a new index mapping bleveNewIndexMapping osRemoveAllexamplebleve index err bleveNewexamplebleve mapping if err nil fmtPrintlnerr return type DataStruct struct Name string testData DataStructText Here testData DataStructHere we Are indexIndextestData testData indexIndextestData testData query bleveNewMatchQueryText search bleveNewSearchRequestquery searchResults err indexSearchsearch if err nil fmtPrintlnerr return fmtPrintlnsearchResults fmtPrintln fmtPrintfv n testData testQueryString Here we Are fmtPrintlnQuery String testQueryString phraseQuery bleveNewMatchPhraseQuerytestQueryString searchQuery bleveNewSearchRequestphraseQuery searchResultsQuery err indexSearchsearchQuery if err nil fmtPrintlnerr return fmtPrintlnsearchResultsQuery The output is matches showing through took s testData Here we Are Query String Here we Are No matches If I change the phrase to Here we Go it works fine matches showing through took s testData Here we Go Query String Here we Go matches showing through took s testData Implemented Lithuanian language analyzer using latest Snowball stemmer Analyzer made by using Russian and Romanian analyzers as examples Tests seem correct I am a Lithuanian speaker I may add more example sentences if necessary The snippet below for prefix based search does not return any matches Ideally it should match both the records Indexing contact struct ID string Name string ID Name Syamkrishna contact struct ID string Name string ID Name Syama mapping bleveNewIndexMapping var index bleveIndex index err bleveNewbleveexampletest mapping if err nil index err bleveOpenbleveexampletest if err nil panicerr indexIndexcontact ID contact indexIndexcontact ID contact Querying query bleveNewMatchQuerysyam querySetPrefix searchRequest bleveNewSearchRequestquery searchResult indexSearchsearchRequest fmtPrintfs n searchResult When searching for fuzzy I cant see the matched terms in the Locations IE I have in the db Almog Baku Im doing a fuzzy search for Alog with IncludeLocationstrue I will receive a hit with no locations This is a fix for memory leak from inmem index blevesearchbleve I made a fix in the underlying store but seems like Compact function is recommended by the owner How would I dump an async snapshot of the index with scorch And write it to an iowriter Our single scorch index has documents and a query that hits docs and returns the first docs takes seconds or so to return My question is if I dont care the exact number of total hits of a certain query is there any way to make the search faster ie just return some hits quickly Hi we have a project that uses bleve inmemory index based on gtreap implementation We noticed a similar behavior that dictionary rows keep grow even after all the documents referring to them are deleted I found and seems that someone made a temporary only to leveldb which does not apply to bleve inmemory index usecase So Ive made this PR to systematically fix for all different index store implementations Looking forward to your feedback