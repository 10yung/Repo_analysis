Im having build problems with google mock using this weeks commit daff fea If I grab google test master b Then things go bad here this seems to be true of various versions of clang and gcc Scanning dependencies of target gmock Building CXX object thirdpartygoogletestbuildgooglemockCMakeFilesgmockdirsrcgmockallcco In file included from homemrnpackagesbenchmarkgoogletestgooglemockincludegmockgmockh from homemrnpackagesbenchmarkgoogletestgooglemocksrcgmockallcc homemrnpackagesbenchmarkgoogletestgooglemockincludegmockgmockmoreactionsh error ISO C requires at least one argument for the in a variadic macro ACTIONPReturnPointee pointer return pointer homemrnpackagesbenchmarkgoogletestgooglemockincludegmockgmockmoreactionsh error ISO C requires at least one argument for the in a variadic macro homemrnpackagesbenchmarkgoogletestgooglemockincludegmockgmockmoreactionsh error ISO C requires at least one argument for the in a variadic macro homemrnpackagesbenchmarkgoogletestgooglemockincludegmockgmockmoreactionsh error ISO C requires at least one argument for the in a variadic macro homemrnpackagesbenchmarkgoogletestgooglemockincludegmockgmockmoreactionsh error ISO C requires at least one argument for the in a variadic macro ACTIONPReturnPointee pointer return pointer If I checkout release of google test builds on all the same compilers seem to go just fine Maybe this is entirely a problem with google test If so happy to close this issue An always false condition was remove from Normalize member function of FilePath and the body of the function which was poorly written is improved Closes I am trying to write some code by modifying densityBasedTurbo in foam extend I am getting the following error BSTurboFoamC error passing const surfaceVectorField aka const FoamGeometricFieldFoamVectordouble FoamfvsPatchField FoamsurfaceMesh as this argument discards qualifiers fpermissive dbnsFluxdotX mrfZonesfaceU In BSTurboFoamC dbnsFluxdotX mrfZonesfaceU In numericFluxC templateclass Flux class Limiter FoamnumericFluxFlux LimiternumericFlux const volScalarField p const volVectorField U const volScalarField T basicThermo thermo numericFluxBaseFluxpmesh pp UU TT thermothermo rhoFlux rhoUFlux rhoEFlux dotX IOobject dotX thismeshtimetimeName thismesh IOobjectNOREAD IOobjectNOWRITE thismesh dimensionedVectorzero dimVelocity vectorzero In MRFZoneC void FoamMRFZonefaceU surfaceVectorField zoneFaceU const In MRFZonesC FoamtmpFoamsurfaceVectorField FoamMRFZonesfaceU const tmpsurfaceVectorField tMRFZonesFaceU new surfaceVectorField surfaceVectorField MRFZonesFaceU tMRFZonesFaceU forAllthis i operator ifaceUMRFZonesFaceU return tMRFZonesFaceU I shall be greatly helped if the error gets resolved and can proceed further Thanks a lot for your time Removing exclusion of main andall targets from the libraryjson used on platformio Closes With the current libraryjson configuration platformio is not capable of compiling the gtest and gmock Because here we exclude the files from the installing yml exclude ci googlemockcmake googlemockscripts googlemocksrcgmockallcc googlemocksrcgmockmaincc googlemocktest googlemockCMakeListstxt googletestcmake googletestscripts googletestsrcgtestallcc googletestsrcgtestmaincc googletesttest googletestCMakeListstxt Which exclude gtestallccgmockallcc gtestmaincc and gmockmaincc And then the only source to be compiled are determined here yaml srcFilter git googlemock googlemocktest googlemocksrc googlemocksrcgmockallcc googletestsrcgtestallcc googlemocksrcgmockmaincc googletest googletestcodegear googletestsamples googletesttest googletestxcode googletestsrc googletestsrcgtestallcc googletestsrcgtestmaincc Which set to compile only the excluded files gtestallccgmockallcc gtestmaincc and gmockmaincc Therefore the library generated by this target is empty Am I missing something I feel as though the alphanumeric charset is too restrictive especially when formatting complex objects into names Added a few extra characters which will help with this details summarytoolchaincmakesummary cmake setCMAKESYSTEMNAME Windows setCMAKESYSTEMPROCESSOR x settriple x pcw mingw messageSTATUS Setting CLang as compiler setCMAKECCOMPILER clang setCMAKECXXCOMPILER clang setCMAKECPPCOMPILER clang setCMAKEMAKEPROGRAM ninja CACHE FILEPATH Path to make setCMAKENM usrx w mingw binnm CACHE FILEPATH Path to nm setCMAKEOBJCOPY usrx w mingw binobjcopy CACHE FILEPATH Path to objcopy setCMAKESTRIP usrx w mingw binstrip CACHE FILEPATH Path to strip setCMAKEAR llvmar CACHE FILEPATH Path to ar setCMAKEOBJDUMP llvmobjdump CACHE FILEPATH Path to objdump setCMAKERANLIB llvmranlib CACHE FILEPATH Path to ranlib setCMAKELINKER lldlink CACHE FILEPATH Path to linker setCMAKERCCOMPILER x w mingw windres CACHE FILEPATH Path to windres setCMAKECCOMPILERTARGET triple setCMAKECXXCOMPILERTARGET triple setCMAKECPPCOMPILERTARGET triple setCMAKECFLAGS CMAKEFLAGS setCMAKECXXFLAGS CMAKEFLAGS setCMAKEEXELINKERFLAGS CMAKEEXELINKERFLAGS CMAKELINKERFLAGS setCMAKESHAREDLINKERFLAGS CMAKESHAREDLINKERFLAGS CMAKELINKERFLAGS setCMAKELINKERFLAGS CMAKELINKERFLAGS setCMAKECLINKERFLAGS CMAKELINKERFLAGS setCMAKECXXLINKERFLAGS CMAKELINKERFLAGS setCMAKECXXSTANDARDLIBRARIES lssp setCMAKEFINDROOTPATHMODEPROGRAM NEVER setCMAKEFINDROOTPATHMODELIBRARY NEVER setCMAKEFINDROOTPATHMODEINCLUDE NEVER setCMAKEFINDROOTPATHMODEPACKAGE NEVER The distro is Ubuntu Eoan details binutilsmingww i eoannow ubuntu ubuntu amd installedautomatic binutilsmingww x eoannow ubuntu ubuntu amd installedautomatic clang unknownnow c a exp amd installed gmingww i eoannow ubuntu exp ubuntu amd installed gmingww x eoannow ubuntu exp ubuntu amd installedautomatic gmingww eoaneoannow ubuntu exp ubuntu all installedautomatic gccmingww baseeoannow ubuntu exp ubuntu amd installedautomatic gccmingww i eoannow ubuntu exp ubuntu amd installedautomatic gccmingww x eoannow ubuntu exp ubuntu amd installedautomatic gccmingww eoaneoannow ubuntu exp ubuntu all installedautomatic libclang devunknownnow c a exp amd installed libclangcommon devunknownnow c a exp amd installedautomatic libclang unknownnow c a exp amd installedautomatic llvm devunknownnow c a exp amd installed llvm runtimeunknownnow c a exp amd installedautomatic llvm toolsunknownnow c a exp amd installed llvm unknownnow c a exp amd installedautomatic mingww commoneoaneoannow all installedautomatic mingww i deveoaneoannow all installedautomatic mingww x deveoaneoannow all installedautomatic mingww eoaneoannow all installed llvmclang are installed from the official deb repo aptllvmorg clang of version and other llvm tools are selected using updatealternatives The result is the error usrbinclang targetx pcw mingw isystem include isystem Wall Wshadow Werror Wconversion DGTESTHASPTHREAD fexceptions W Wpointerarith Wreturntype Wcastqual Wwritestrings Wswitch Wunusedparameter Wcastalign Wcharsubscripts Winline Wredundantdecls MD MT CMakeFilesgtestmaindirsrcgtestmainccobj MF CMakeFilesgtestmaindirsrcgtestmainccobjd o CMakeFilesgtestmaindirsrcgtestmainccobj c srcgtestmaincc FAILED CMakeFilesgtestmaindirsrcgtestmainccobj usrbinclang targetx pcw mingw isystem include isystem Wall Wshadow Werror Wconversion DGTESTHASPTHREAD fexceptions W Wpointerarith Wreturntype Wcastqual Wwritestrings Wswitch Wunusedparameter Wcastalign Wcharsubscripts Winline Wredundantdecls MD MT CMakeFilesgtestmaindirsrcgtestmainccobj MF CMakeFilesgtestmaindirsrcgtestmainccobjd o CMakeFilesgtestmaindirsrcgtestmainccobj c srcgtestmaincc In file included from srcgtestmaincc In file included from includegtestgtesth In file included from includegtestinternalgtestinternalh includegtestinternalgtestporth error unknown type name AutoHandle AutoHandle thread error generated ninja build stopped subcommand failed Im looking to make test duration printed in microsecondsnanoseconds for benchmarking Millisecond precision seems to be backed into GetTimeInMillis for all measurements so guessing theres no some easy flag to switch precision Would that be of any interest if I prep PR to update GetTimeInMillis to GetTimeInNanos or smth like that Keeping default output in millis but config switchable to nanos This fixes unit test failure in gmockmatcherstestcc when compiled using latest VS on Windows RUN PredicateFormatterFromMatcherTestNoShortCircuitOnFailure googlemock test gmockmatcherstestcc error Expected equality of these values expect Which is Value of dummyname nExpected DescribeTo n Actual MatchAndExplain resultmessage Which is Value of dummyname nExpected DescribeTo n Actual of type enum testinggmockmatcherstestanonymous namespacePredicateFormatterFromMatcherTestBehavior MatchAndExplain With diff Value of dummyname Expected DescribeTo Actual MatchAndExplain Actual of type enum testinggmockmatcherstestanonymous namespacePredicateFormatterFromMatcherTestBehavior MatchAndExplain RUN PredicateFormatterFromMatcherTestDetectsFlakyShortCircuit googlemock test gmockmatcherstestcc error Expected equality of these values expect Which is Value of dummyname nExpected DescribeTo n The matcher failed on the initial attempt but passed when rerun to generate the explanation n Actual MatchAndExplain resultmessage Which is Value of dummyname nExpected DescribeTo n The matcher failed on the initial attempt but passed when rerun to generate the explanation n Actual of type enum testinggmockmatcherstestanonymous namespacePredicateFormatterFromMatcherTestBehavior MatchAndExplain With diff Expected DescribeTo The matcher failed on the initial attempt but passed when rerun to generate the explanation Actual MatchAndExplain Actual of type enum testinggmockmatcherstestanonymous namespacePredicateFormatterFromMatcherTestBehavior MatchAndExplain Can installation instructions please be added to this project Previously the team here had helped to set up builds for Gumbo Parser But the instructions are no longer working and now he build is broken at Thank you