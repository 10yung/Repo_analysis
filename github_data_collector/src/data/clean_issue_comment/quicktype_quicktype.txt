Use this TypeScript as input and convert to Python with dataclasses ts export interface Config fooBar number Result python dataclass class Config fooBar float def todictself dict result dict result fooBar tofloatselffooBar return result When I try to create a Config instance in Python and serialize it however I get an error In ConfigfooBar todict AssertionError Traceback most recent call last ipythoninput a f b bbb e in module ConfigfooBar todict ipythoninput edd f in todictself def todictself dict result dict result fooBar tofloatselffooBar return result ipythoninput edd f in tofloatx def tofloatx Any float assert isinstancex float return x AssertionError full example here The issue is that the Config dataclass requires that its property be a float But theres no reason an int shouldnt be allowed too number in TypeScript covers both You can see more here in the screencast Appstore shows that i have installed but the app itself is showing the incorrect version string img width altScreen Shot at PM src img width altScreen Shot at PM src I thought that fixed what I am after but maybe not Basically say that I have the following JSON code json object user url dataupdatedat T Z data id a a a a f f afe a username exampleuser level maxlevelgrantedbysubscription profileurl startedat T Z subscribed true currentvacationstartedat null subscription active true type recurring maxlevelgranted periodendsat T Z preferences defaultvoiceactorid lessonsautoplayaudio false lessonsbatchsize lessonspresentationorder ascendinglevelthensubject reviewsautoplayaudio false reviewsdisplaysrsindicator true then for Dart and with a name of WaniKaniUser I will end up with the WaniKaniUser Data Preferences and Subscription classes while I would find it much better if I was to end up with the WaniKaniUser WaniKaniUserData WaniKaniUserDataPreferences and WaniKaniUserDataSubscription classes instead When using Kotlin with no framework capitalizing acronyms could cause parsing issues Fixes We need to find another way to install Python on Ubuntu Xenial Using the input example annotations segmentation area bbox Generated python code is dataclass class Annotation segmentation List List float area int bbox List int staticmethod def fromdictobj Any Annotation assert isinstanceobj dict segmentation fromlistlambda x fromlistfromfloat x objgetsegmentation area fromintobjgetarea bbox fromlistfromint objgetbbox return Annotationsegmentation area bbox def todictself dict result dict result segmentation fromlistlambda x fromlisttofloat x selfsegmentation result area fromintselfarea result bbox fromlistfromint selfbbox return result It interprets bbox and area as int but I get an error when using the above code updating the json to area Forces the python code to update to area fromfloatobjgetarea This now works Bumps handlebars from to details summaryChangelogsummary Sourced from handlebarss changelog v November th Bugfixes fix add noprototypebuiltins eslintrule and fix all occurences f f d fix add more properties required to be enumerable Chores Build fix use instead of c b f add chai and dirtychai and sinon for cleaner testassertions and spies deprecate old assertionmethods e e ba dad a Security The properties proto defineGetter defineSetter and lookupGetter have been added to the list of properties that must be enumerable If a property by that name is found and not enumerable on its parent it will silently evaluate to undefined This is done in both the compiled template and the lookuphelper This will prevent new RemoteCodeExecution exploits that have been published recently Compatibility notes Due to the securityfixes The semantics of the templates using proto defineGetter defineSetter and lookupGetter in the respect that those expression now return undefined rather than their actual value from the proto The semantics have not changed in cases where the properties are enumerable as in js proto some string The change may be breaking in that respect but we still only increase the patchversion because the incompatible usecases are not intended undocumented and far less important than fixing RemoteCodeExecution exploits on existing systems Commits v November th Bugfixes fix use Stringfield in lookup when checking for constructor d test add fluent API for testing Handlebars c ac c Compatibility notes no incompatibility are to be expected trtable truncated details details summaryCommitssummary c c b v c d Update release notes f f d fix add noprototypebuiltins eslintrule and fix all occurences fix add more properties required to be enumerable ba testchore add chaiexpect and sinon to runtimeenvironment dad test add sinon as global variable to eslint in the specs a test add sinonjs for spies deprecate current assertions e e chore add chai and dirtychai for better test assertions c b f fix use instead of de d v Additional commits viewable in compare view details br Dependabot compatibility score Dependabot will resolve any conflicts with this PR as long as you dont alter it yourself You can also trigger a rebase manually by commenting dependabot rebase dependabotautomergestart dependabotautomergeend details summaryDependabot commands and optionssummary br You can trigger Dependabot actions by commenting on this PR dependabot rebase will rebase this PR dependabot recreate will recreate this PR overwriting any edits that have been made to it dependabot merge will merge this PR after your CI passes on it dependabot squash and merge will squash and merge this PR after your CI passes on it dependabot cancel merge will cancel a previously requested merge and block automerging dependabot reopen will reopen this PR if it is closed dependabot ignore this patchminormajor version will close this PR and stop Dependabot creating any more for this minormajor version unless you reopen the PR or upgrade to it yourself dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency unless you reopen the PR or upgrade to it yourself dependabot use these labels will set the current labels as the default for future PRs for this repo and language dependabot use these reviewers will set the current reviewers as the default for future PRs for this repo and language dependabot use these assignees will set the current assignees as the default for future PRs for this repo and language dependabot use this milestone will set the current milestone as the default for future PRs for this repo and language You can disable automated security fix PRs for this repo from the Security Alerts page details Hello When I generate Kotlin code for many JSON schema files that refer to some common enum code cannot be used because of the redeclaration issue I think that there should be an option like in swift language multifileoutput to avoid this issue Without it quicktype code generator is useless for cases when you have multiple files with a common enum because you must clear all the files by hand