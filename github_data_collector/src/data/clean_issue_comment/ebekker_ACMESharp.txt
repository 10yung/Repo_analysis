Hi since lets encrypt went to acme v the registration does not work and I get this error NewACMERegistration Account creation on ACMEv is disabled Please upgrade your ACME client to a version that supports ACMEv RFC See for details Any idea if there is another method to registre using ACMe v Hi Ive been trying to automate the renewal of my ADFS certificate using a script from But the issue I have is that I dont seem to have any DNS handlers I just have and thats the manual one PS C Scripts GetACMEChallengeHandlerProfile ListChallengeHandlers manual i have done the following pwsh InstallModule Name ACMESharpProvidersDNSMadeEasy EnableACMEExtensionModule ACMESharpProvidersDNSMadeEasy importmodule ACMESharpProvidersDNSMadeEasy But i still cant get the list to show DNSME in the list Can anyone help i have the following version installed on a Windows server instance PS C Scripts GetModule ACMESharp select Version Version Thanks Simon I made a mistake in which meant that the documentation would have reported KeepExistingSslFlags as Force This is now corrected Also amended indents to use tabs instead of spaces so my changes line up when viewed in GitHub Environment OS Windows R Powershell Webserver IIS Description Trying to automate my IIS server certificate using this ACME client I followed the docs including all the validation steps up to the command CompleteACMEChallenge The Exact Command CompleteACMEChallenge IdentifierRef portal ChallengeType http Handler iis HandlerParameters WebSiteRef Portal The Error CompleteACMEChallenge unresolved site for given site reference At line char CompleteACMEChallenge IdentifierRef portal ChallengeType http CategoryInfo NotSpecified CompleteACMEChallenge InvalidOperationException FullyQualifiedErrorId SystemInvalidOperationExceptionACMESharpPOSHCompleteChallenge Looks like the iis handler cant find my IIS site Portal but if I do GetWebsite I get the following Name ID State Physical Path Bindings Portal Started C inetpub wwwroot https sslFlags Any idea what am I doing wrong We are using ACME sharp for generating Lets encrypt certificate We are trying to use some kind of security vulnerability check for our code and we found this BouncyCastleCrypto dll have some time of vulnerability in it So it could be nice if this can be updated to I am trying to implement an autorenewal cert on my Azure Application Gateway using the info from the blog post below When trying to implement the actual autorenewal piece which is done using an Azure Automation Runbook PowerShell I ran into an issue I tried using the Runbook as is and while the test run Completed it actually failed to do the job In an effort to figure out why it had failed I copied the Runbook locally and stepped thru the code a section at a time Below is the block of code that I worked thru InitializeACMEVault NewACMERegistration Contacts mailtoEmailAddress AcceptTos AliasDns certificateAlias NewACMEIdentifier Dns domain Alias AliasDns CompleteACMEChallenge AliasDns ChallengeType http Handler manualChallenge http UpdateACMEIdentifier AliasDns ChallengeType http Challenges Where Object Type eq http Add file blob to check DNS tmpPath envTEMP pfxfile tmpPath certificatepfx FileContentStrIndex http HandlerHandleMessageIndexOfFile Content FileContentSegments http HandlerHandleMessageSubstringFileContentStrIndex Split FileContentSegments FileContentSegments Substring FileContentSegments IndexOf filePath tmpPath FileContentSegments fileContent FileContentSegments FileContentSegments SetContent Value fileContent Path filePath blobName wellknown acmechallenge FileContentSegments storageAccount GetAzureRmStorageAccount ResourceGroupName STResourceGroupName Name storageName ctx storageAccountContext setazurestorageblobcontent File filePath Container public Context ctx Blob blobName SubmitACMEChallenge AliasDns ChallengeType http Force UpdateACMEIdentifier AliasDns When I ran the last line the resultant output showed a Status of invalid Looking thru the code I checked to make sure the file did get created and uploaded to the Azure Storage Account I also checked that I could access the file from a browser using the URL that LE would use The only thing I though was maybe the file was not in ASCII format and that was causing the issue Being a newbie to LE and ACMEI tried to recreate the file ensuing it was in ASCII format and rerun the UpdateACMEIdentifier line again Doing that I learned that once an Identifier goes invalidits lifespan is over and I need to start over I just dont know how to start over from here When I try to run the NewACMEIdentifier line againit give me the error An item with the same key has already been added For additional information below is an image of the error thrown when I tested the Runbook using the Automation Account Ive been following the quickstart guide All works fine until I get to the completechallenge step PS C vault CompleteACMEChallenge IdentifierRef home ChallengeType http Handler iis HandlerParameters WebSiteRef MyExampleSite CompleteACMEChallenge Retrieving the COM class factory for component with CLSID B B F B CE failed due to the following error Class not registered Exception from HRESULT x REGDBECLASSNOTREG At line char CompleteACMEChallenge IdentifierRef home ChallengeType http Ha CategoryInfo NotSpecified CompleteACMEChallenge COMException FullyQualifiedErrorId SystemRuntimeInteropServicesCOMExceptionACMESharpPOSHCompleteChallenge Now having no experience with powershell this is more than a little hard to debug And nowhere in the user guide is a problem like this mentioned Google seems to think that either a component is missing or unregistered Id like some help with this issue but even more than that the error output of this and all the acmesharp programs could really use work When getting a certificate I have tried lowercase and uppercase eg NewACMEIdentifier Dns myserverexamplecom Alias dns NewACMEIdentifier Dns MYSERVEREXAMPLECOM Alias dns When I download the certificate it is always lowercase Ive tried adding dns as an alternative but the certificate issued still has lowercase You probably wonder why I care about case We are using the certificate for remote desktop services RDS When you setup RDS it always capitalizes the FQDNs When you try to remote the server it tries to confirm if the remote computer is the same as the certificate If the case is not the same you get a warning Is there anyway to get the certificate issued to an all upppercase FQDN Indicates that the ACME Vault is to be initialized with the function InitializeACMESharp which PowerShell complains doesnt exist After some googling around and head scratching I discover the quick start guide lists a different function InitializeACMEVault That works and I was able to continue setting up ACMESharp We get the doc fixed When using InstallCertificate and where fresh bindings ARE created the SslFlags are not set This results in a binding being created without the Require Server Name Indication checkbox set On a system that hosts multiple websites this is a disaster because if you then subsequently InstallCertificate into a new site both of these nonSNI bindings get allocated the new certificate Obviously this breaks websites if their SslFlags arent right If you look in the code for IisHelper you can see that the Add for the binding uses a parameter overload but I have read something that suggests that there is a parameter overload that exists in libraries that come with later windows OS distributions The UpdateBinding function in the helper looks like it would set the appropriate flags but damage to the server would already have been done Regards Mark