 WARNING THE KALDI ISSUE TRACKER IS ONLY USED FOR KALDI DEVELOPMENT If you have a question about using Kaldi please use the kaldhelp discussion group Instructions for joining are available at Is there a reason why miniconda must be installed in the home directory Many scripts have the path hard coded I would like to have miniconda installed either somewhere relative to the kaldiroot or have an environment variable to set the path to the miniconda installation My motivation to have it somewhere else When miniconda is installed in the home directory I cannot install miniconda in a shared folder for all users in our department currently done for kaldi We make a backup of the home directory but the miniconda should not be in the backup miniconda can be large some packages need much space eg numpy mkl pytorch tensorflow the training logs for kaldi pybind with PyTorch and nnet training are also contained kaldi pybind shares the same network architecture and featsscp with nnet There are only two differences between kaldi pybind and nnet kaldi pybind uses BatchNorm to replace the first LDA layer kaldi pybind uses the optimizer from PyTorch WERCER from kaldi nnet is better than kaldi pybind but kaldi pybind training with PyTorch is much faster The training time in total for epochs is summarized as follows kaldi pybind with PyTorch about minutes kaldi nnet about hours minutes minutes It is possible that kaldi nnet can use less number of epochs to converge to a point that has better CERWER than kaldi pybind A very simple scheduler is used in PyTorch the results for kaldi pybind may be improved by using a better learning rate scheduler So what do we gain from kaldi pybind training time It is much faster free to use various kinds of networks supported by PyTorch or it is very easy to write your own nnModule you can try distributed training supported by Pytorch eg DDP or use horovod other fancy stuff limited by your imagination When running aspires localmulticonditionrunnnet commonsh The line python localmulticonditionaspirepreprirnoiselistpy dataimpulsesnoises dataimpulsesnoisesinfo Could not find the file aspirepreprirnoiselistpy Could you include the file into the directory that python subprocess open code need universalnewlinesTrue option at python i checked it in my env and its working well in python and In quite some shell scripts binbash is used this wont work on distributions that dont have bash in bin for example freeBSD Could you maybe replace them with usrbinenv bash which should be more portable example are the scripts in toolsextra or in egswsjs There is a chance active tokens is less than min active config and this will lead to pruning beam and cutoff be inf which is not disireable Fix this bug Fix Now it is able to readwrite npy files Note that it supports only little endian singledouble precision D D numpy arrays with C order Id like a diagnostic script to be created that can keep track of how fast things are training similar to how Kaldis existing diagnostic outputs work The initial thing is to discover the hierarchical structure of the model in terms of modules or whatever they are called should be fairly easy create some data structure that mirrors that and is easy to traverse and has hooks on which we can add diagnostic stuff We then need to find a way to print out or graphically display information associated with the individual parameters in a way that somehow reflects the structure Ideally it would be nice to have it display the layers in the natural order and we could possibly have some kind of convention for that Eg have the layer names dictate the order in some suitable way The most important diagnostic is the relative change in each parameter matrix which has to do with the norm of the matrix and the norm of the change The absolute magnitude of each parameter matrix as l norm is useful too There are lots of diagnostics that Kaldi produces that wont be possible to extract from the model because they are datadependent like stats about the activation of various ReLU units I think this can be left till later if at all it would have to be done via special moudles that were noops but which stored stats This is an ongoing task but whoever takes it on can close the issue Also the kaldi branch should probably be kept up to date it contains changes that will probably be needed at some point