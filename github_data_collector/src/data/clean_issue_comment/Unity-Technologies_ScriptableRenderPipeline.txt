 Purpose of this PR Why is this PR needed what hard problem is it solvingfixing Backport Yamato Select your branch Any test projects to go with this to help reviewers Comments to reviewers Notes for the reviewers you have assigned backport for Removes one change from that PR which was about using less memory but did not impact the leak Good stuff but not critical DONT FORGET TO ADD A CHANGELOG Checklist for PR maker Have you added a backport label if needed For example the needbackport label After you backport the PR the label changes to backported x Have you updated the changelog Each package has a CHANGELOGmd file Have you updated or added the documentation for your PR When you add a new feature change a property name or change the behavior of a feature its best practice to include related documentation changes in the same PR Have you added a graphic test for your PR if needed When you add a new feature or discover a bug that tests dont cover please add a graphic test Purpose of this PR Fixing Issue where we sometimes get active terrain materials resulting in two passes with height blending active Since height blending requires normalization it can only be rendered in one pass When it is active for two passes it results in corrupt results The change here removes all of the logic from the shadermaterial inspector that attempts to disable height blending based on number of layers and replaces it with a shaderbased check that is guaranteed to be correct at least guaranteed once you are also using trunk based on this Testing status Manual Tests What did you do x Opened test project Run graphic tests locally x Built a player Checked new UI names with UX convention Tested UI multiedition UndoRedo Prefab overrides Alignment in Preset x C and shader warnings supress shader cache to see them Checked new resources path for the reloader in devloper mode you have a button at end of resources that check the pathes Other Automated Tests What did you setup Add a screenshot or the reference image of the test please Yamato Select your branch Any test projects to go with this to help reviewers Comments to reviewers Notes for the reviewers you have assigned Purpose of this PR Fix for issue The issue appears to indicate that the Xcomponent of the normalmapped result on terrain vs meshes using the same normal mapping results in lighting that appears flipped on the Xaxis More accurately it is that the tangent direction is flipped Testing status Test scene result Buggy State Broken Fixed State Fixed Also verified via another test case that this seems to affect Universal but not HDRP Yamato Select your branch Comments to reviewers Also needs backport to DONT FORGET TO ADD A CHANGELOG Checklist for PR maker x Have you added a backport label if needed For example the needbackport label After you backport the PR the label changes to backported x Have you updated the changelog Each package has a CHANGELOGmd file Have you updated or added the documentation for your PR When you add a new feature change a property name or change the behavior of a feature its best practice to include related documentation changes in the same PR Have you added a graphic test for your PR if needed When you add a new feature or discover a bug that tests dont cover please add a graphic test Purpose of this PR Fixing Issue where we sometimes get active terrain materials resulting in two passes with height blending active Since height blending requires normalization it can only be rendered in one pass When it is active for two passes it results in corrupt results The change here removes all of the logic from the shadermaterial inspector that attempts to disable height blending based on number of layers and replaces it with a shaderbased check that is guaranteed to be correct at least guaranteed once you are also using trunk based on this Testing status Manual Tests What did you do x Opened test project Run graphic tests locally x Built a player Checked new UI names with UX convention Tested UI multiedition UndoRedo Prefab overrides Alignment in Preset x C and shader warnings supress shader cache to see them Checked new resources path for the reloader in devloper mode you have a button at end of resources that check the pathes Other Automated Tests What did you setup Add a screenshot or the reference image of the test please Yamato Select your branch Any test projects to go with this to help reviewers Comments to reviewers Notes for the reviewers you have assigned Checklist for PR maker Have you added a backport label if needed For example the needbackport label After you backport the PR the label changes to backported Have you updated the changelog Each package has a CHANGELOGmd file Have you updated or added the documentation for your PR When you add a new feature change a property name or change the behavior of a feature its best practice to include related documentation changes in the same PR Have you added a graphic test for your PR if needed When you add a new feature or discover a bug that tests dont cover please add a graphic test Purpose of this PR Fixed terrain shader error in XR Note Follow up PR will be made to fix other terrain shaders in XR Other terrain shaders wont generate shader errors for XR but they are not XR enabled at the moment Testing status Manual Tests What did you do Opened test project Run graphic tests locally Built a player Checked new UI names with UX convention Tested UI multiedition UndoRedo Prefab overrides Alignment in Preset C and shader warnings supress shader cache to see them Checked new resources path for the reloader in devloper mode you have a button at end of resources that check the pathes Other Automated Tests What did you setup Add a screenshot or the reference image of the test please Yamato Select your branch Any test projects to go with this to help reviewers Comments to reviewers Notes for the reviewers you have assigned Purpose of this PR VFX backported fixes to Filter out Direction type on inconsistent operator Case Exclude MouseEvent RigidBodyCollision TriggerEvent Sphere binders when physics modules isnt available Visual Effect Activation Track Handle empty string in ExposedProperty in some cases AABox position gizmo would not move when dragged Inspector doesnt trigger any exception if VisualEffectAsset comes from an Asset Bundle case OnStop Event to the start of a Spawn Context makes it also trigger when OnPlay is sent Case Remove unexpected public API UnityEditorVFXVFXSeedMode IncrementStripIndexOnStart Moved VFX Event Tester Window visibility to Component Play Controls SceneView Window Testing status Yamato Select your branch Comments to reviewers iTris PaulDemeulenaere Please double check changes are correct Purpose of this PR Fix The issue was due to wrong reference in new default DXR scene I dunno exactly how it happened but GUID registered here are not the right ones Testing status Manual Tests Other Run the wizard again and checked default prefab scene Comments to reviewers Prerender sky doesnt early out when matcap while rest of sky related stuff does therefore the leak For QA Without the fix open a template scene enable matcap view and move around a bit and see memory usage go up With the fix it doesnt do that Purpose of this PR Fixed an issue where passing a null ProfilingSampler would cause a null ref exception 