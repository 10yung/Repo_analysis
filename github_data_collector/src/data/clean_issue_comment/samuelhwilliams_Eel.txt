The cmdlineargs input to eelstart appear to be ignored Specifically I have tried the following kiosk startfullscreen and disablepinch none of these appear to be acknowledged when chromium is launched My exact lines of code are eelinitweb eelstartattendanceKioskhtml modechromium cmdlineargs startfullscreen disablepinch blockFalse Note I have tried chrome and chromiumbrowser as the mode as well as trying the command without a specified mode When chrome is used the application opens maximized whereas when chromium is used the application opens in a minimized configuration I achieve the desired behavior when launching chromiumbrowser with the flags from the command line Eel version OS raspbian buster running on a Raspberry Pi B note this also fails on RPi B Browser chromium Version Describe the problem Im trying to use as host because I want to be able to connect to the GUI from other computers on the same network This works but it is making the window that eel opens open to mainhtml which doesnt load Is there a way to override the address that eel opens when it opens its chromium window Code snippets python import eel eelstartmainhtml host Hi Samuel I would like to use an eelbased App from another webbased system and have that system call eel on localhost Therefore to allow CrossOrigin Requests i would need my eelbased app add the needed headers But since the bottle webserver is wrapped inside eel I dont find any obvious way to add the headers When working directly with bottle you would be able to set them eg through responseheaders AccessControlAllowOrigin Is there a way to hand this through eel to the webserver Describe the problem I am trying to use multiprocessing to open multiple windows The whole problem is that it opens in the window for eel error OSError WinError Only one usage of each socket address protocolnetwork addressport is normally permitted localhost Code snippets python import eel from selenium import webdriver from multiprocessing import Pool import time Set web files folder and optionally specify which file types to check for eelexpose eelinitweb allowedextensions js html eelexpose Expose this function to Javascript def Open if name main urllist pool Poolprocesses ret poolmapparsing urllist for text in ret printtext def parsingurl driver webdriverChrome driversetpageloadtimeout drivergeturl text driverpagesource timesleep driverclose return text eelstartindexhtml Start size html DOCTYPE html html head titleHello Worldtitle Include eeljs note this file doesnt exist in the web directory script typetextjavascript srceeljsscript script typetextjavascript eelOpen Call a Python function script head body Hello World body html I build exe with pyinstaller and on some PC I have trouble with refresh page or going to another page in my app using eel if I open link in another tab in browser and no closing main tab all is working but it isnt good solution i think Hello Today i was trying to create multiple windows using eel with diferent sizes and i run into a little nigthmare trying to figure out how to do it So i would like to ask for a new feature it would be nice if when you create a new window using eelshowstarturls that you could also give it some parameters something like showstarturlskwargs to define the params for a new window defining the size or close callback of it for example Python is going endoflife at the end of this year and Id like to drop support for it from this library around the same time At the moment according to approximately of Eels package downloads are from Python from Python and unknown Im not sure what the unknowns represent and need to look into this if anyone knows please do share At the same time I feel it makes sense to pragmatically come down on a minimum Python minor version to support This will help us make the most use of new language features and decrease the maintenance burden of additional code but without alienating too many of our users The latest figures from pypistats above shows that are using and It feels reasonable to me therefore to start support from possibly even from but Id like to give some time for anyone watching to help present good arguments to keep compatibility with these lessused versions Although I plan to drop support for Python around the end of the year Im not working to the same schedule to drop any support for Python x versions So expect Python to continue for the foreseeable but keep posted with this thread Keen for input ChrisKnott ahopkins brumar First of all Eel is amazing This is a project Id love to participate with One of the features I find lacking is the implementation of Jinja Variables While the documentation and the options allow for inserting and using templates with the jinjatemplates argument in the start function I did not see any possibility to transfer variables within the templates It would be nice if this could be included either as a decorator or in a more flasklike fashion in the return of a function One solution that I tried to fiddle with but to no avail was to create a decorator for the static function in the initpy that seems to handle Jinjas templaterender function Heres what I got so far python def jinjaVariablesstatic def innerFunctionpath jinjavariableNone the decorator recieved a Jinja Variable if jinjavariables is not None response None if jinjaenv in startargs and jinjatemplates in startargs templateprefix startargs jinjatemplates if pathstartswithtemplateprefix n lentemplateprefix template startargs jinjaenv gettemplatepath n response btlHTTPResponsetemplaterenderjinjavariable if response is None response btlstaticfilepath rootrootpath setresponseheadersresponse return response staticpath return innerFunction The idea was to create a global dictionary variable called jinjavariable and to update that variable depending on the page you want to visit If you were to include the jinjavariable in the kwargs of the start function wouldnt it be possible to dynamically change the output of the html page by accessing the required keys Could you possibly provide an example using Electron and React together with Eel Ive attempted this and sort of got it to work but my solution doesnt seem very clean I provided an example of what I came up with here This doesnt seem like the best solution because the way I have it set up you cant use node import statements in your js files among other things I am using Eel My apppy is this import eel def closecallbackfuncpathsockets printhello eelinitweb eelstartmainhtmlsize closecallbackclosecallbackfunc Program works fine but when i close chrome tab my closecallbackfunc dont work