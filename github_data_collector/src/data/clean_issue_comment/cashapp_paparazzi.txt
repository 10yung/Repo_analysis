 fails Test fun textViewInCode val textView AppCompatTextViewpaparazzicontextapply typeface ResourcesCompatgetFontcontext Rfontcashmarketmedium text Hello world paparazzisnapshottextView text in code passes Test fun textViewInXml val textView paparazziinflateTextViewRlayouttextview paparazzisnapshottextView text in xml related xml for the latter xml version encodingutf TextView xmlnsandroid xmlnstools androidlayoutwidthwrapcontent androidlayoutheightwrapcontent androidfontFamilyfontcashmarketmedium androidtextHello world toolsignoreHardcodedText Followup to Better user documentation once it matures Right now its a little hard to get how to use it from the sample app example xml vector xmlnsandroid xmlnsaapt path androidpathData aaptattr nameandroidfillColor gradient aaptattr path vector workaround extract the inlined resource example xml vector xmlnsandroid xmlnsaapt path androidpathData androidfillColorcolorother vector otherxml gradient Android Studio switched to Skia for its layout rendering from java d which means it should support more rendering features I think its missing some things like PathMeasuregetSegment if I remember correctly If Paparazzi is able to use skia I would consider switching the Lottie regression tests to it Currently the plugin can only parse merged resources from library modules since theyre in XML format while application modules output merged resources to a binary format This limits Paparazzi to library modules for now Not sure if theres anything we can do to fix the problem but I figured it would be worth filing anyway Basically getting this Jetifier error wrap Could not resolve all artifacts for configuration featuresnotificationcenterimpldebugUnitTestCompileClasspath Failed to transform artifact commonjar comandroidtoolscommon to match attributes artifactTypeandroidclasses orggradlelibraryelementsjar orggradleusagejavaruntime Execution failed for JetifyTransform Userszhukovgradlecachesmodules files comandroidtoolscommon ac acf ac d fa c e common jar Failed to transform Userszhukovgradlecachesmodules files comandroidtoolscommon ac acf ac d fa c e common jar using Jetifier Reason The given artifact contains a string literal with a package reference androidsupportdesignwidget that cannot be safely rewritten Libraries using reflection such as annotation processors need to be updated manually to add support for androidx Run with stacktrace for more details As a workaround blacklisting the library seems to work androidjetifierblacklistcomandroidtoolscommon in your gradle properties When running paparazzi getting this error javaioFileNotFoundException usrlocalshareandroidsdkplatformsandroidQbuildprop No such file or directory at javaioFileInputStreamopen Native Method at javaioFileInputStreamopenFileInputStreamjava at javaioFileInputStreaminitFileInputStreamjava at appcashpaparazziDeviceConfigCompanionloadPropertiesDeviceConfigkt at appcashpaparazziinternalRendererprepareRendererkt at appcashpaparazziPaparazzipreparePaparazzikt at appcashpaparazziPaparazziapply evaluatePaparazzikt at orgjunitrunnersParentRunner evaluateParentRunnerjava at orgjunitrunnersBlockJUnit ClassRunner evaluateBlockJUnit ClassRunnerjava at orgjunitrunnersParentRunnerrunLeafParentRunnerjava at orgjunitrunnersBlockJUnit ClassRunnerrunChildBlockJUnit ClassRunnerjava at orgjunitrunnersBlockJUnit ClassRunnerrunChildBlockJUnit ClassRunnerjava at orgjunitrunnersParentRunner runParentRunnerjava at orgjunitrunnersParentRunner scheduleParentRunnerjava at orgjunitrunnersParentRunnerrunChildrenParentRunnerjava at orgjunitrunnersParentRunneraccess ParentRunnerjava at orgjunitrunnersParentRunner evaluateParentRunnerjava at orgjunitrunnersParentRunner evaluateParentRunnerjava at orgjunitrunnersParentRunnerrunParentRunnerjava at orggradleapiinternaltaskstestingjunitJUnitTestClassExecutorrunTestClassJUnitTestClassExecutorjava at orggradleapiinternaltaskstestingjunitJUnitTestClassExecutorexecuteJUnitTestClassExecutorjava at orggradleapiinternaltaskstestingjunitJUnitTestClassExecutorexecuteJUnitTestClassExecutorjava at orggradleapiinternaltaskstestingjunitAbstractJUnitTestClassProcessorprocessTestClassAbstractJUnitTestClassProcessorjava at orggradleapiinternaltaskstestingSuiteTestClassProcessorprocessTestClassSuiteTestClassProcessorjava at sunreflectNativeMethodAccessorImplinvoke Native Method at sunreflectNativeMethodAccessorImplinvokeNativeMethodAccessorImpljava at sunreflectDelegatingMethodAccessorImplinvokeDelegatingMethodAccessorImpljava at javalangreflectMethodinvokeMethodjava at orggradleinternaldispatchReflectionDispatchdispatchReflectionDispatchjava at orggradleinternaldispatchReflectionDispatchdispatchReflectionDispatchjava at orggradleinternaldispatchContextClassLoaderDispatchdispatchContextClassLoaderDispatchjava at orggradleinternaldispatchProxyDispatchAdapterDispatchingInvocationHandlerinvokeProxyDispatchAdapterjava at comsunproxyProxy processTestClassUnknown Source at orggradleapiinternaltaskstestingworkerTestWorkerprocessTestClassTestWorkerjava at sunreflectNativeMethodAccessorImplinvoke Native Method at sunreflectNativeMethodAccessorImplinvokeNativeMethodAccessorImpljava at sunreflectDelegatingMethodAccessorImplinvokeDelegatingMethodAccessorImpljava at javalangreflectMethodinvokeMethodjava at orggradleinternaldispatchReflectionDispatchdispatchReflectionDispatchjava at orggradleinternaldispatchReflectionDispatchdispatchReflectionDispatchjava at orggradleinternalremoteinternalhubMessageHubBackedObjectConnectionDispatchWrapperdispatchMessageHubBackedObjectConnectionjava at orggradleinternalremoteinternalhubMessageHubBackedObjectConnectionDispatchWrapperdispatchMessageHubBackedObjectConnectionjava at orggradleinternalremoteinternalhubMessageHubHandlerrunMessageHubjava at orggradleinternalconcurrentExecutorPolicyCatchAndRecordFailuresonExecuteExecutorPolicyjava at orggradleinternalconcurrentManagedExecutorImpl runManagedExecutorImpljava at javautilconcurrentThreadPoolExecutorrunWorkerThreadPoolExecutorjava at javautilconcurrentThreadPoolExecutorWorkerrunThreadPoolExecutorjava at orggradleinternalconcurrentThreadFactoryImplManagedThreadRunnablerunThreadFactoryImpljava at javalangThreadrunThreadjava Turns out I had empty possibly leftover directory usrlocalshareandroidsdkplatformsandroidQ which is why it fails We could make Environment smarter by filtering out platform directories that dont have buildprop which is what we ultimately care about