Hy there Thank you for this useful project Is there a way to edit my template so I can add subcommands for my existing custom ones or even to already existing commands which already have subcommands such as jira epic Is there a way to make it more difficult to accidentally alter an JIRA issue assigned to someone else with gojira It is easy to write an issue number wrong by mistake I miss something like an Are you sure prompt when trying to alter an existing issue assigned to someone else jira version jira version jira config cat jiradconfigyml endpoint paswordsource stdin project MYPROJECT Expectations As per the README I would expect jira to be able to take a password input from stdin as follows passwordgenerator jira login endpoint userUSERNAME Actual result When passing a password from stdin jira throws an error and fails to log me in echo hunter jira login endpoint userpaulinelallinec Jira Password paulinelallinec ERROR EOF R R Additional notes I am using MacOS Mojave G however I do not believe this is an issue related to MacOS I containerized jira within a docker container based on Ubuntu and got the same result Situation I have a lot of custom commands some of which share argument and option names Problem If one of my commands defaults the value of an argument ALL of the commands using that argument name get defaulted In addition it seems that any args from other functions also bleed Expected Each commands argumentsoptions be siloed Example jiradconfigyml binbash catEND customcommands name cmd args name FOO script echo I have a FOO arg argsFOO but I can also see Unicorn argsUNICORN name cmd args name FOO default BAR name UNICORN default mAgIc script echo I have a FOO arg defaulted to BAR argsFOO END running the cmd command with no input shows it defaulting to BAR and also having access to the UNICORN argument from cmd Basic Info brew info gojira gojira stable bottled Simple jira commandline client in Go usrlocalCellargojira files MB Poured from bottle on at From Dependencies Build go Analytics install days days days installonrequest days days days builderror days This to allow users to run the jira create command without using the editor Hence without user interaction This method of using a file is more conventional The input file is strictly a replacement of the editor content I know that it is possible to use the editor with noedit in combination with the override options to achieve similar results and to populate individual fields But unfortunately I found that this solution doesnt work in all situations example of use jiraexe create filecreateLHRyml projectLHR Hi When I try to get this program I got an error bash go get githubcomgojirajiracmdjira githubcomgojirajirajiracli gosrcgithubcomgojirajirajiracliusagego cannot use app type gopkginalecthomaskingpinv Application as type githubcomcorybkingpeonvendorgopkginalecthomaskingpinv Application in argument to kingpeonRegisterDynamicCommandsWithRunner OS MacOS Mojave Golang darwinamd jira ls l t table output differs from jira ls l t table cat Table output seems to be different based on whether output is pipe or raw terminal It would be preferable to have a template that can be piped to column usable to have a global width override or nice to have the adjustable columns mention in linked issue Related Very simple question Is it possible to use a text file instead of being prompted to use the editor For example I would need an option filepath to inputfile that replaces editornotepadexe I can this way prepare the input file prior to launching the jira command and get through this step without user interaction Hi I came across and implemented the suggested customcommand It works down to the last command where it tries to POST the issues to be added to the sprint It adds the issue to the sprint successfully but I keep getting ERROR Invalid Usage JSON Parse Error EOF Running this with curl seems to have worked though curl D u userpassword X POST d issues MYPROJ H ContentType applicationjson HTTP The problem to me seems to be that no output is returned by this command thus both templates t debug and t request fail as they require some json to be piped into toJson in the template Looks like a regression to Is there any easy method to either not spit out the error or even better take the HTTP code and create some output based on the http code Thanks Sven Could we please get the current master released It seems the last release is missing sprig in templating