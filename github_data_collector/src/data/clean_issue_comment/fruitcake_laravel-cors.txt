It seem we need a way for use wildcards for allowedorigins for example allowedorigins httpshttpdomainnamecom Can i find any similar way in this module Using the latest version of Laravel and PHP installed this package and upon trying to load a view it gives me the error Trying to access array offset on value of type null Specifically from this file vendorfruitcakelaravelcorssrcCorsServiceProviderphp I thought it might be because of PHP so I downgraded to but still having the same issue Let me know if more information is required The final result is empty Lumen I have a route like this routerpost doX uses DoXControllerindex I wonder if to enable CORS of the above API I would simply add middleware cors To the definition or do I have to have a routeroptions instead Also do I point to the same uses or simply return anything as content Whats the recommended way to set the allowedOrigins value to something more specific for production Is it to use a variable from the env file allowedOrigins envALLOWEDORIGINS or similar I have the latest version of Lumen and installed the library but i am getting the following error HTTP Not Found ms appphp php requireonce DIRvendorautoloadphp new Laravel Lumen Bootstrap LoadEnvironmentVariables dirnameDIR bootstrap Create The Application Here we will load the environment and create the application instance that serves as the central piece of this framework Well use this application as an IoC container and router for this framework app new Laravel Lumen Application dirnameDIR appwithFacades appwithEloquent Register Container Bindings Now we will register a few bindings in the service container We will register the exception handler and the console kernel You may add your own bindings here if you like or you can make another file appsingleton Illuminate Contracts Debug ExceptionHandlerclass App Exceptions Handlerclass appsingleton Illuminate Contracts Console Kernelclass App Console Kernelclass Register Middleware Next we will register the middleware with the application These can be global middleware that run before and after each request into a route or middleware thatll be assigned to some specific routes Register Service Providers Here we will register all of the applications service providers which are used to bind services into the container Service providers are totally optional so you are not required to uncomment this line appregisterApp Providers AppServiceProviderclass appregisterApp Providers AuthServiceProviderclass appregisterApp Providers EventServiceProviderclass Load The Application Routes Next we will include the routes file so that they can all be added to the application This will provide all of the URLs the application can respond to as well as the controllers that may handle them appconfigurecors appregisterBarryvdh Cors ServiceProviderclass appmiddleware Barryvdh Cors HandleCorsclass approutergroup namespace App Http Controllers function router require DIRrouteswebphp return app routes webphp php Application Routes Here is where you can register all of the routes for an application It is a breeze Simply tell Lumen the URIs it should respond to and give it the Closure to call when that URI is requested routerget function use router return routerappversion routerpostapistripe StripeControllerupdate This would probably a easy solve Maybe I am going about this all wrong or simply not understanding I have a Laravel API and a Vue front end application I want the API to only be accessable when requests are coming from the Vue front end Frontend url wwwsomesitecom API backend url But even on localhost and live server I can make a request via postman and it always gets thru I went to an online API tester and sent the login request to live server and it still get thru Here is corsphp config supportsCredentials false allowedOrigins spcom this should be only url that can access the API allowedOrigins allowedHeaders Origin ContentType Accept Authorization CacheControl XRequestedWith allowedMethods GET PUT PATCH POST DELETE exposedHeaders Authorization maxAge Added the Barryvdh Cors HandleCorsclass to kernelphp in all guards since none are working figured all to all middleware middlewareGroups api and web routeMiddleware The apiphp routes is wrapped in Routegroup middleware cors function all api routes Any ideas where I am going wrong Thanks all Dave Today I ran into this error Access to XMLHttpRequest at from origin has been blocked by CORS policy The AccessControlAllowOrigin header contains multiple values but only one is allowed Which turned out to be a internal error that I was able to fix in my code The problem is errors do happen out in the field and it would be great if Laravel was able to return that error rather than being an unreadable response due to CORS That way my app can show a message to the user about that error What do I need to do with my CORS setup to return the error rather than having it get blocked The only thing I can think of is wrapping every single request in a trycatch and having the catch return a response deliberately rather than relying on the standard response generated by Laravel when an exception occurs This seems very unlaravellike and bulky Is there a better way Hi barryvdh I have used the package on my laravel application I have implemented on API and web for example or such However when I am trying to access the files residing at which is not part of the API guard or WEB guard i kept getting the CORS resources disallowed for iframe I am using NGINX The resource is being called inside an Iframe in a react app I would really appreciate any help in this regard FYIi have tried implementing addheader inside nginx too Regards HP Hello Ive faced a bug with response headers when running my application via So the problem is here This code is running when one of the event was triggered by the app and doesnt try to check was it a CORS request or not As a result Ive receiving because workers dont able to serialize a NULL value as a value of header The fix is pretty simple I may be wrong need to add a check for CORS request php if thiscorsisCorsRequestrequest responseheadershasAccessControlAllowOrigin 