While Anytime will regularly help me out with nonstandard timestamps it is of course a bit slow as such I have taken to wrapping it in a function to only have it calculate unique values and then mergejoin the unique values back in to the input datatable Would it be too much to ask that this be done within the package anytimeatscale function dat timestampcolumn tz Systimezone dat asdatatabledat timestampcolumnchr enquotimestampcolumn ascharacter timestamps dat lazydt groupbytimestampcolumn dplyrsummarise mutatetimestampposix anytimetimestampcolumn tz tz asdatatable printtimestamps head printdat head printenquotimestampcolumn ascharacter merge x dat y timestamps by timestampcolumnchr allx TRUE lazydtimmutable FALSE mutatetimestampcolumn timestampposix selecttimestampposix asdatatable return This crashes the R session on Windows r anytimeanytimec It works fine with useR TRUE r anytimeanytimec useR TRUE NA NA and also on other platforms Using R on Windows with latest anytime In a comment to statquant shows some useful R code with datetime conversion between R and Boost It shows some residual differences for a fraction of the inputs and we need to drill down where it stems from In commit and we add a little helper script which converts numeric time using Boost to a string and back For core years from onwards this works without discrepancy We should expand from here to get to the bottom of the other differences 