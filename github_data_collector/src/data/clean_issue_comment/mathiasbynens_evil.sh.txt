Currently type is not affected This lets the user easily see whats wrong with their system Id suggest creating an alias for type that would override the builtin and print responses as if no changes have been made to anything ie type grep should report grep as executable pathtogrep rather than a shell function Need to start every background job in its own subshell so that we can redirect the job control output to devnull Plus a quotation fix there bkhouri can you confirm this fixes part of your issue from I love this idea and I want to apply on to coworkers However when adding source pathtoevilsh as the last line in the bashprofile error occur when a new terminal is started I only tried setting EVILBEHAVIOUR to insane or annoying On my Mac running macOS Mojave I get the following when I start a terminal with EVILBEHAVIOUR set to insane Last login Fri Feb on ttys Exit destructive sleep RANDOM s kill STOP ps x o pidsed dsort Rhead bassamkhouriEMB CBUG QC And I get the following when set to annoying Last login Fri Feb on ttys usage basename string suffix basename a s suffix string Exit destructive sleep RANDOM s kill STOP ps x o pidsed dsort Rhead bassamkhouriEMB CBUG QC This error will make it obvious that something is awry in the system annoying alias nanousrbinvi annoying alias viusrbinnano annoying alias vimusrbinemacs annoying alias emacsusrbinvim Command for one editor opens another function cal if eq then If no arguments usrbincal m date b RANDOM RANDOM else usrbincal RANDOM RANDOM fi A random year between and is used for cal command insane echo sleep bashrc So with every new terminal session opened the terminal will become just a bit slower The command base D cm gfi uYmFzaF wcm maWxl sh can remove your bash profile entirely this would stop evilsh in some circumstance Should filtering be added to unusable mode to block running base encoded commands I havent tested this as I dont have a spare VM at the moment Thoughts These two functions have been in use at my current employer for years mainly for hazing new hires We even have them in our Ansible playbook so we can switch them on quickly in a variety of places when needed 