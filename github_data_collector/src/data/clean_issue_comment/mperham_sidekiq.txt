Hi Rollbar notifies me about the following error around superfetch I didnt find any particular problems or even if it had any consequences It happened few times since Ive upgraded Sidekiq RedisCommandError ERR wrong number of arguments for sadd command File homebasapp a cf b d eb bfa ae vendorbundleruby gemsredis libredisclientrb line in callpipelined File homebasapp a cf b d eb bfa ae vendorbundleruby gemsredis libredisclientrb line in block in callpipeline File homebasapp a cf b d eb bfa ae vendorbundleruby gemsredis libredisclientrb line in withreconnect File homebasapp a cf b d eb bfa ae vendorbundleruby gemsredis libredisclientrb line in callpipeline File homebasapp a cf b d eb bfa ae vendorbundleruby gemsredis libredisrb line in block in multi File homebasapp a cf b d eb bfa ae vendorbundleruby gemsredis libredisrb line in block in synchronize File homebasrbenvversions libruby monitorrb line in monsynchronize File homebasapp a cf b d eb bfa ae vendorbundleruby gemsredis libredisrb line in synchronize File homebasapp a cf b d eb bfa ae vendorbundleruby gemsredis libredisrb line in multi File homebasapp a cf b d eb bfa ae vendorbundleruby gemssidekiqpro libsidekiqprosuperfetchrb line in block in registermyself File homebasapp a cf b d eb bfa ae vendorbundleruby gemssidekiq libsidekiqrb line in block in redis File homebasapp a cf b d eb bfa ae vendorbundleruby gemsconnectionpool libconnectionpoolrb line in block levels in with File homebasapp a cf b d eb bfa ae vendorbundleruby gemsconnectionpool libconnectionpoolrb line in handleinterrupt File homebasapp a cf b d eb bfa ae vendorbundleruby gemsconnectionpool libconnectionpoolrb line in block in with File homebasapp a cf b d eb bfa ae vendorbundleruby gemsconnectionpool libconnectionpoolrb line in handleinterrupt File homebasapp a cf b d eb bfa ae vendorbundleruby gemsconnectionpool libconnectionpoolrb line in with File homebasapp a cf b d eb bfa ae vendorbundleruby gemssidekiq libsidekiqrb line in redis File homebasapp a cf b d eb bfa ae vendorbundleruby gemssidekiqpro libsidekiqprosuperfetchrb line in registermyself File homebasapp a cf b d eb bfa ae vendorbundleruby gemssidekiqpro libsidekiqprosuperfetchrb line in block in startup File homebasapp a cf b d eb bfa ae vendorbundleruby gemssidekiq libsidekiqutilrb line in watchdog File homebasapp a cf b d eb bfa ae vendorbundleruby gemssidekiqpro libsidekiqprosuperfetchrb line in startup File homebasapp a cf b d eb bfa ae vendorbundleruby gemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb line in runtask File homebasapp a cf b d eb bfa ae vendorbundleruby gemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb line in block levels in createworker File homebasapp a cf b d eb bfa ae vendorbundleruby gemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb line in loop File homebasapp a cf b d eb bfa ae vendorbundleruby gemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb line in block levels in createworker File homebasapp a cf b d eb bfa ae vendorbundleruby gemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb line in catch File homebasapp a cf b d eb bfa ae vendorbundleruby gemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb line in block in createworker Versions ruby p sidekiq sidekiqpro rails Initializer Sidekiqdefaultworkeroptions backtrace Sidekiqoptions maxretries Sidekiqconfigureserver do config configredis url ENV REDISSIDEKIQURL networktimeout configsuperfetch if definedSidekiqPro end Sidekiqconfigureclient do config configredis url ENV REDISSIDEKIQURL networktimeout end SidekiqRetrySetnewfindjobselfjidretry Sidekiq periodic issue Overview We had a periodic Sidekiq job set up and working before we upgraded Rails from to both ruby After the upgrade we have an odd issue Doing all the same things in a blank brand new rails project doesnt cause the error to happen A copy of our project with a development database backup can be privately shared if desired given NDA signing Ent receipt number With a periodic job registered If we boot sidekiq WITHOUT any jobs ready to process immediately all standardproent features work as expected If we boot Sidekiq WITH jobs ready to process each jobs START log appears as expected but then nothing else ever happens referred to below as the stuck state In the stuck state details If we boot Sidekiq WITH jobs ready to process each jobs START log appears as expected but then nothing else ever happens no DONE log Leaving it for hour doesnt cause anything else to happen No error is ever shown by our project or by Sidekiq puts as the firstonly line of the cron jobs def performargs never show up We have custom Sidekiq serverclient middlewareissue happens whether or not it is commented out and puts in the def call dont fire either Sidekiq can only be stopped with a kill command controlc gives the log INFO Bye but never finishes quitting Starting Sidekiq with a period job registered WITHOUT any jobs ready to process immediately then enqueing and processing some jobsworks as expected then quitting Sidekiq works correctly The ps ef command lists sidekiq REDACTED of busy stopping after doing commandc If the configperiodic do mgr inner block registers no jobs everything works as expected puts before and after the mgrregister ImHereJob retry false in that block appear as expected Jobs enqueued after the start of Sidekiq work as expected with or without the periodic job declaration Enablingdisabling other proent features appears to have no affect the issue happens with no other proent features enabled I also did a bundle update in case another gem was the issue no change in the issue All issue probing on localhost Mac OS X Catalina with Sidekiq cleared with Sidekiqredis conn connflushdb between every probe and all rails processes restarted Rebooting had no affect appjobsimherejobrb ruby class ImHereJob include SidekiqWorker def performargs No args expected puts Im Here end end configinitializerssidekiqrb ruby require sidekiqproexpiry Disable uniqueness in testing this has the potential to cause much head scratching SidekiqEnterpriseunique unless Railsenvtest SidekiqClientreliablepush unless Railsenvtest Sidekiqconfigureserver do config configredis url ENV REDISURL configsuperfetch configreliablescheduler configperiodic do mgr puts I got here We had a more complex job here but the simple one fails too mgrregister ImHereJob retry false At minutes of every hours puts I got here end configloggerlevel LoggerDEBUG end configsidekiqyml yml timeout production concurrency queues scheduled default text textlow notificationslow activestorageanalysis activestoragepurge background mailers This file is ranused with bundle exec sidekiq Sidekiq boot log with DEBUG logging bash REDACTED gitcmccontainermodel bundle exec sidekiq T Z pid tidouix y INFO Booting Sidekiq with redis options idSidekiqserverPID urlredislocalhost T Z pid tidouix y INFO Booting Sidekiq with redis options urlredislocalhost idSidekiqserverPID I got here I got here Running Stripe in TEST mode INFO log level SHRINE DEPRECATION WARNING The processing plugin is deprecated and will be removed in Shrine If you were using it with versions plugin use the new derivatives plugin instead PRO GRAPHIC T Z pid tidouix y INFO Booted Rails application in development environment T Z pid tidouix y INFO Running in ruby p revision x darwin T Z pid tidouix y INFO Sidekiq Pro Sidekiq Enterprise commercially licensed T Z pid tidouix y DEBUG Client Middleware SidekiqEnterpriseUniqueClient SidekiqBatchClient SidekiqMiddlewareExpiryClient T Z pid tidouix y DEBUG Server Middleware SidekiqLimiterMiddleware SidekiqEnterpriseUniqueServer SidekiqBatchServer AirbrakeSidekiqErrorHandler SidekiqMiddlewareExpiryServer T Z pid tidouix y INFO Starting processing hit CtrlC to stop T Z pid tidouix y DEBUG queues scheduled default text textlow notificationslow activestoragepurgejobs activestorageanalysis activestoragepurge background mailers labels reliable concurrency require environmentnil timeout pollintervalaveragenil averagescheduledpollinterval errorhandlers SidekiqExceptionHandlerLogger x f f b deathhandlers Proc x f a ad UsersREDACTEDrvmgemsruby gemssidekiqpro libsidekiqbatchdeathrb lambda Proc x f db b UsersREDACTEDrvmgemsruby gemssidekiqent libsidekiqentuniquerb lambda lifecycleeventsstartup quiet Proc x f e UsersREDACTEDrvmgemsruby gemssidekiqpro libsidekiqproconfigrb shutdown Proc x f UsersREDACTEDrvmgemsruby gemssidekiqent libsidekiqentelectionrb Proc x f e a UsersREDACTEDrvmgemsruby gemssidekiqent libsidekiqentperiodicrb Proc x f de c c UsersREDACTEDrvmgemsruby gemssidekiqpro libsidekiqprosuperfetchrb heartbeat leader Proc x f e c UsersREDACTEDrvmgemsruby gemssidekiqent libsidekiqentperiodicrb Proc x f e UsersREDACTEDrvmgemsruby gemssidekiqent libsidekiqentcensusrb deadmaxjobs deadtimeoutinseconds reloaderSidekiqRailsReloader appREDACTEDRailsApplication productionconcurrency configfileconfigsidekiqyml stricttrue backuplimit fetchSidekiqProSuperFetch scheduledenqSidekiqScheduledFastEnq tagREDACTED identityMacBookPro local e c f c T Z pid tidouiy dyf INFO SuperFetch activated T Z pid tidouiy abl INFO Managing periodic jobs T Z pid tidouix y DEBUG SuperFetch found super processes T Z pid tidouiy abl DEBUG Licensed user a fca c T Z pid tidouiy abl INFO Gained leadership of the cluster T Z pid tidouiy abl DEBUG Loading Sidekiq Enterprise Lua extensions T Z pid tidouiyk dj DEBUG SuperFetch Registering super process MacBookPro local e c f c with queuesqMacBookPro local e c f c scheduled queuesqMacBookPro local e c f c default queuesqMacBookPro local e c f c text queuesqMacBookPro local e c f c textlow queuesqMacBookPro local e c f c notificationslow queuesqMacBookPro local e c f c activestoragepurgejobs queuesqMacBookPro local e c f c activestorageanalysis queuesqMacBookPro local e c f c activestoragepurge queuesqMacBookPro local e c f c background queuesqMacBookPro local e c f c mailers T Z pid tidouiyk dsx classSendMessageTrainAssignmentJob jidf feaaff bd c b INFO start T Z pid tidouiy dyf DEBUG SuperFetch Registering super process MacBookPro local e c f c with queuesqMacBookPro local e c f c scheduled queuesqMacBookPro local e c f c default queuesqMacBookPro local e c f c text queuesqMacBookPro local e c f c textlow queuesqMacBookPro local e c f c notificationslow queuesqMacBookPro local e c f c activestoragepurgejobs queuesqMacBookPro local e c f c activestorageanalysis queuesqMacBookPro local e c f c activestoragepurge queuesqMacBookPro local e c f c background queuesqMacBookPro local e c f c mailers T Z pid tidouiyk dnl DEBUG Loading Sidekiq Pro Lua extensions Sidekiq stop log controlc bash C T Z pid tidouix y DEBUG Got INT signal T Z pid tidouix y INFO Shutting down T Z pid tidouix y INFO Terminating quiet workers T Z pid tidouiyk dnl INFO Scheduler exiting T Z pid tidouiy abl INFO Leader stepping down T Z pid tidouix y INFO Pausing to allow workers to finish T Z pid tidouix y WARN Terminating busy worker threads T Z pid tidouix y WARN Work still in progress struct SidekiqProSuperFetchRetrieverUnitOfWork queuequeuedefault job retry true queue default backtrace true class SendMessageTrainAssignmentJob args assignmentid scheduleduid b ed ff db d a ccf dfdeb jid f feaaff bd c b createdat enqueuedat localqueuequeuesqMacBookPro local e c f c default T Z pid tidouix y INFO SuperFetch Moving job from queuesqMacBookPro local e c f c default back to queuedefault T Z pid tidouix y DEBUG SuperFetch Unregistering super process MacBookPro local e c f c T Z pid tidouix y DEBUG SuperFetch Unregistering super process MacBookPro local e c f c T Z pid tidouix y INFO Bye Gemfile ruby source ruby Run before big releases so we have the latest bundle update scoutapm airbrake gitsourcegithub do reponame reponame reponamereponame unless reponameinclude end gem bundler Bundle edge Rails instead gem rails github railsrails gem rails Use sqlite as the database for Active Record gem sqlite Use Puma as the app server gem puma Use SCSS for stylesheets gem sassrails Use Uglifier as compressor for JavaScript assets gem uglifier See for more supported runtimes gem therubyracer platforms ruby Use CoffeeScript for coffee assets and views gem coffeerails Turbolinks makes navigating your web application faster Read more gem turbolinks Build JSON APIs with ease Read more gem jbuilder Use Redis adapter to run Action Cable in production gem redis Use ActiveModel hassecurepassword gem bcrypt Use Capistrano for deployment gem capistranorails group development gem facebookmessenger gem omniauthfacebook gem omniauthoauth gem koala gem firebasecloudmessenger gem languagefilter Reduces boot times through caching required in configbootrb gem bootsnap require false gem fontawesomerails gem validatestimeliness alpha gem unicodeemoji group development test do Call byebug anywhere in the code to stop execution and get a debugger console gem byebug platforms mri mingw x mingw gem rbreadline Adds support for Capybara system testing and selenium driver gem capybara gem seleniumwebdriver gem dotenvrails end group test do gem shrinememory gem actioncabletesting end group development do Access an IRB console on exception pages or by using console anywhere in the code gem webconsole gem listen Spring speeds up development by keeping your application running in the background Read more gem spring gem springwatcherlisten gem derailed gem stackprof gem daemons gem pryrails gem bettererrors gem annotate gem bullet gem bindingofcaller gem highline gem yard end group production do gem rails factor gem dalli gem herokudeflater gem pumaworkerkiller end Windows does not include zoneinfo files so bundle the tzinfodata gem gem tzinfodata platforms mingw mswin x mingw jruby gem pg gem slim gem slimrails gem devise gem deviseinvitable gem impersonator git gem gaudi git branch v gem remotipart gem autoprefixerrails gem simpleform gem cocoon gem premailerrails gem nokogiri gem validatesphonenumber gem paranoia gem jqueryrails source do gem sidekiqpro gem sidekiqent end gem sidekiq gem sinatra git require false gem scoutapm gem airbrake gem jsroutes gem racktimeout gem shrine gem awssdks gem roda gem imageprocessing gem minimagick gem fastimage gem mailgunruby gem activemodelserializers gem vermeer git gem rubybandwidth gem stripe gem moneyrails gem searchkick gem faker gem gibbon gem groupdate gem chartkick gem barnes gem autostripattributes gem validateurl gem activestoragevalidations gem railserd group development Gemlock text GIT remote revision aeb dbe ab cb c a bd ad fac branch v specs gaudi bourbon inlinesvg jqueryrails kaminari momentjsrails redcarpet slim GIT remote revision d c e f f f b a a a eb specs impersonator devise rails GIT remote revision c c fda f bb a ca c b accfc specs vermeer devise jwt rails GIT remote revision a dd add f dd e b e e d specs rackprotection rack sinatra mustermann rack rackprotection tilt GEM remote remote specs actioncabletesting actioncable actioncable actionpack nio r websocketdriver actionmailbox actionpack activejob activerecord activestorage activesupport mail actionmailer actionpack actionview activejob mail railsdomtesting actionpack actionview activesupport rack racktest railsdomtesting railshtmlsanitizer actiontext actionpack activerecord activestorage activesupport nokogiri actionview activesupport builder erubi railsdomtesting railshtmlsanitizer activemodelserializers actionpack activemodel casetransform jsonapirenderer beta activestoragevalidations rails activejob activesupport globalid activemodel activesupport activerecord activemodel activesupport activestorage actionpack activejob activerecord marcel activesupport concurrentruby i n minitest tzinfo zeitwerk addressable publicsuffix airbrake airbrakeruby airbrakeruby rbtree annotate activerecord rake ast autostripattributes activerecord autoprefixerrails execjs awseventstream awspartitions awssdkcore awseventstream awspartitions awssigv jmespath awssdkkms awssdkcore awssigv awssdks awssdkcore awssdkkms awssigv awssigv awseventstream barnes multijson statsdruby bcrypt benchmarkips bettererrors coderay erubi rack bindex bindingofcaller debuginspector bootsnap msgpack bourbon sass thor builder bullet activesupport uniformnotifier byebug capybara addressable minimime nokogiri rack racktest xpath casetransform activesupport chartkick childprocess choice cocoon coderay coffeerails coffeescript railties coffeescript coffeescriptsource execjs coffeescriptsource concurrentruby connectionpool contentdisposition crass cssparser addressable daemons dalli debuginspector derailed derailedbenchmarks derailedbenchmarks benchmarkips getprocessmem memoryprofiler devise bcrypt ormadapter railties responders warden deviseinvitable actionmailer devise domainname unf dotenv dotenvrails dotenv railties down addressable einhorn elasticsearch elasticsearchapi elasticsearchtransport elasticsearchapi multijson elasticsearchtransport faraday multijson erubi execjs facebookmessenger httparty rack faker i n faraday multipartpost fastimage ffi firebasecloudmessenger googleauth jsonschema fontawesomerails railties getprocessmem ffi gibbon faraday multijson globalid activesupport googleauth faraday jwt memoist multijson os signet groupdate activesupport hashie herokudeflater rack highline htmlentities httpcookie domainname httparty mimetypes multixml i n concurrentruby imageprocessing minimagick rubyvips inlinesvg activesupport nokogiri jbuilder activesupport jmespath jqueryrails railsdomtesting railties thor jsroutes railties sprocketsrails json jsonschema addressable jsonapirenderer jwt kaminari activesupport kaminariactionview kaminariactiverecord kaminaricore kaminariactionview actionview kaminaricore kaminariactiverecord activerecord kaminaricore kaminaricore koala addressable faraday json languagefilter listen rbfsevent rbinotify rubydep loofah crass nokogiri mail minimime mailgunruby restclient marcel mimemagic memoist memoryprofiler methodsource mimetypes mimetypesdata mimetypesdata mimemagic minimagick minimime miniportile minitest momentjsrails railties monetize money money i n moneyrails activesupport monetize money railties msgpack multijson multixml multipartpost mustermann ruby keywords netrc nio r nokogiri miniportile oauth faraday jwt multijson multixml rack omniauth hashie rack omniauthfacebook omniauthoauth omniauthoauth oauth omniauth ormadapter os paranoia activerecord parser ast pg premailer addressable cssparser htmlentities premailerrails actionmailer premailer pry coderay methodsource pryrails pry publicsuffix puma pumaworkerkiller getprocessmem puma rack racktest rack racktimeout rails actioncable actionmailbox actionmailer actionpack actiontext actionview activejob activemodel activerecord activestorage activesupport bundler railties sprocketsrails railsdomtesting activesupport nokogiri railserd activerecord activesupport choice rubygraphviz railshtmlsanitizer loofah rails factor railsservestaticassets railsstdoutlogging railsservestaticassets railsstdoutlogging railties actionpack activesupport methodsource rake thor rake rbfsevent rbinotify ffi rbreadline rbtree redcarpet redis remotipart responders actionpack railties restclient httpcookie mimetypes netrc roda rack rubybandwidth activesupport builder faraday json rubygraphviz rubyvips ffi ruby keywords rubydep rubyzip sass sasslisten sasslisten rbfsevent rbinotify sassrails railties sass sprockets sprocketsrails tilt scoutapm parser searchkick activemodel elasticsearch hashie seleniumwebdriver childprocess rubyzip shrine contentdisposition down shrinememory down shrine sidekiq connectionpool rack rackprotection redis sidekiqent einhorn sidekiq sidekiqpro sidekiqpro concurrentruby sidekiq signet addressable faraday jwt multijson simpleform actionpack activemodel slim temple tilt slimrails actionpack railties slim spring springwatcherlisten listen spring sprockets concurrentruby rack sprocketsrails actionpack activesupport sprockets stackprof statsdruby stripe temple thor threadsafe tilt timeliness turbolinks turbolinkssource turbolinkssource tzinfo threadsafe uglifier execjs unf unfext unfext unicodeemoji uniformnotifier validateurl activemodel publicsuffix validatesphonenumber validatestimeliness beta timeliness warden rack webconsole actionview activemodel bindex railties websocketdriver websocketextensions websocketextensions xpath nokogiri yard zeitwerk PLATFORMS ruby DEPENDENCIES actioncabletesting activemodelserializers activestoragevalidations airbrake annotate autostripattributes autoprefixerrails awssdks barnes bettererrors bindingofcaller bootsnap bullet byebug capybara chartkick cocoon coffeerails daemons dalli derailed devise deviseinvitable dotenvrails facebookmessenger faker fastimage firebasecloudmessenger fontawesomerails gaudi gibbon groupdate herokudeflater highline imageprocessing impersonator jbuilder jqueryrails jsroutes koala languagefilter listen mailgunruby minimagick moneyrails nokogiri omniauthfacebook omniauthoauth paranoia pg premailerrails pryrails puma pumaworkerkiller racktimeout rails railserd rails factor rbreadline remotipart roda rubybandwidth sassrails scoutapm searchkick seleniumwebdriver shrine shrinememory sidekiq sidekiqent sidekiqpro simpleform sinatra slim slimrails spring springwatcherlisten stackprof stripe turbolinks tzinfodata uglifier unicodeemoji validateurl validatesphonenumber validatestimeliness alpha vermeer webconsole yard RUBY VERSION ruby p BUNDLED WITH Ruby version Sidekiq Pro Enterprise versions Sidekiq Open Source Hi I am using the ideas in to create a queue per machine Machines are replaced frequently as part of our deployment and scaling processes and the unique machine queues are empty when that happens These empty queues appear to remain in the queues set forever with size They show both in redis in the queues set and in SidekiqQueueall and SidekiqStatsnewqueues output The queue set therefore continues to grow Is this okay or could this potentially cause a future issue with sidekiq such as a performance issue Are there any suggestions for working with this situation or alternative approaches to avoid it Perhaps I should be regularly clearing the empty queues to remove them from the set There may be some complexities with this approach as I wouldnt want to have bad timing around clearing a queue just before a job is added When limiting against APIs that use a Leaky Bucket rate limit itd be helpful to limit requests in Sidekiq using a Leaky Bucket Limiter References Ruby version p Sidekiq Pro Enterprise versions Pro Are you using an old version No Active Record Slave uses threadlocal variables to remember whether it should send queries to the master DB or a slave by default Their recommendation is to set this default in an initializer so far so good However due to Sidekiqs multithreaded setup those defaults arent shared with the actual worker threads consuming our Sidekiq jobs Question is there a way to set perthread configuration in Sidekiq like an initialization block or something similar Note that Im not looking to synchronise the threadlocal Active Record Slave state between threads merely set a default upfront I want to access the arguments to a job in the sidekiqretriesexhausted call back is it possible class ConcernedJob include SidekiqWorker sidekiqretriesexhausted do msg ex Access arg and arg here end def performarg arg jobs work end end Ruby version Sidekiq Pro Enterprise versions Pro Please include your initializer and any error message with the full backtrace Are you using an old version Have you checked the changelogs to see if your issue has been fixed in a later version It would be nice to be able to override the CSS media queries for lightdark mode so that regardless of the users theme choice in their OS a specified theme is always served This could take the form of a config option in configsidekiqyml for example YAML theme light This addresses some of the tail comments from Ruby version Rails version Sidekiq version Sidekiq initializer initializerssidekiqrb Sidekiqconfigureserver do config configredis url Settingsidekiqhost configloggerlevel LoggerWARN end Sidekiqconfigureclient do config configredis url Settingsidekiqhost configloggerlevel LoggerWARN end Sidekiqdefaultworkeroptions backtrace true On the production server I run Sidekiq through systemd Guided by the instruction My servicehomedeployconfigsystemdusersidekiqproductionservice Unit Descriptionsidekiq for trackserver production Aftersyslogtarget networktarget Service Typesimple EnvironmentRAILSENVproduction EnvironmentMALLOCARENAMAX WorkingDirectoryvarwwwtrackservercurrent ExecStartusrlocalbinbundler exec sidekiq e production ExecStarthomedeployrvmbinrvm do bundle exec sidekiq e production varwwwtrackserversharedlogsidekiqlog ExecStarthomedeployrvmbinrvm do bundle exec sidekiq e production ExecStarthomedeployrvmbinrvm do bundle exec sidekiq e production tee varwwwtrackserversharedlogsidekiqlog ExecStartbinbash lc homedeployrvmbinrvm do bundle exec sidekiq e production ExecReloadbinkill TSTP MAINPID ExecStopbinkill TERM MAINPID Userdeploy Groupdeploy UMask RestartSec Restartonfailure StandardOutputsyslog StandardErrorsyslog SyslogIdentifiersidekiq Install WantedBydefaulttarget After each change to the service startup file I run systemctl user daemonreload The service starts without problems and sidekiq works But it does not write anything to the log varlogsyslog or to another file I have already tried various startup options ExecStart nothing helps Tell me what am I doing wrong Ruby version p Sidekiq Pro Enterprise versions Sidekiq As Sidekiq does not currently support keyword arguments being used in the performasync method of a SidekiqWorker using them should throw an error I think this would add a small amount of overhead when enqueuing a new worker but throwing an error early seems preferable than allowing the unsupported kwargs to be serialized and then having the worker throw the error later example ruby class SomeWorker include SidekiqWorker def performsome args end end SomeWorkerperformasyncsome foo args bar Should throw ArgumentError 