 Thank you for contributing Provide a brief description of the issue here Pretend you are explaining it to a friend not yourself Steps to reproduce Running vapor new APNs branch and vapor build Tell us how to reproduce this issue Please provide as much detail as possible the more code snippets the better If we cannot recreate it we will not be able to figure out how to fix it Expected behavior Build Success Tell us what you expect to happen what should happen once we fix the issue Actual behavior clang error no such file or directory UsersalbertyuDeveloperVaporTILAppbuildx applemacosxdebugindexstore clang error no such file or directory UsersalbertyuDeveloperVaporTILAppbuildx applemacosxdebugindexstore clang error no such file or directory UsersalbertyuDeveloperVaporTILAppbuildx applemacosxdebugindexstore clang error no such file or directory UsersalbertyuDeveloperVaporTILAppbuildx applemacosxdebugindexstore Compiling CNIOOpenSSL helpersc Compiling CNIOHTTPParser cniohttpparserc Compiling CNIOSHA cniosha c Compiling CNIOZlib emptyc Compiling CNIODarwin shimc Compiling CNIOLinux ifaddrsandroidc Compiling CNIOOpenSSL shimsc Compiling CNIOLinux shimc Tell us what is actually happening what is brokennot working correctly Environment Vapor Toolbox Swifttoolsversion We must know your exact environment or it is very difficult to help Hint use vapor version in the root directory of your Vapor project Vapor Framework version beta Vapor Toolbox version OS version This PR changes the signature of the RoutesBuildergroupconfigure methods to rethrow if the configure function throws Rationale The RoutesBuilderregistercollection method throws However the configure function used in the RoutesBuildergroupconfigure methods does not throw Therefore the following example doesnt currently work swift let middleware MyMiddleware let controller MyController let routes Routes error Invalid conversion from throwing function of type throws to nonthrowing function type RoutesBuilder routesgroupmiddleware router in try routerregistercollection controller We can use try or try but I think it would be better to just rethrow the error swift try routesgroupmiddleware router in try routerregistercollection controller Checklist x Circle CI is passing code compiles and passes tests There are no breaking changes to public API x New test cases have been added where appropriate x All new code has been commented with doc blocks Breaking changes The change may break existing code This example does not break swift routesgroupmiddleware router in nonThrowingFunctionrouter But this one does break swift let function Middleware RoutesBuilder error Invalid conversion from throwing function of type Middleware RoutesBuilder throws throws to nonthrowing function type Middleware RoutesBuilder function routesgroupconfigure However it is very unlikely to occur in the wild Im not sure where to put this but in Vapor you missed an overload on the RoutesBuilder get for PathComponent you have overloaded all the other methods just not get Those need to also have an iOS check Im not giving a pull request here because Im not sure this is how its supposed to work Applications are expected to defer application shutdown after initialization swift let app try Applicationdetect defer appshutdown This prevents scenarios where an error is thrown before the appshutdown defer block is called which results in an Application did not shutdown assertion Because of this Applicationrun will no longer attempt to call shutdown which would result in a double shutdown Theres no method to validate object decoded from request query Steps to reproduce This is how it looks in Vapor swift let paginationRequest try reqquerydecodePaginationRequestself try paginationRequestvalidate An attempt for Vapor swift try PaginationRequestvalidatereq let paginationRequest try reqquerydecodePaginationRequestself It crashes on the the validate line with error Unprocessable Entity Expected behavior There should be a method to validate request query Maybe something like this swift Foovalidatereqquery Vapor Framework version beta This PR fixes Detailed description can be found in the issue This extensions to the Environment struct provide functions to extract file contents like a secret This can be used with docker secrets or other secret management tools As discussed in the dependency to the Container struct has been removed and this PR is against the master branch integrating this feature into Vapor Checklist The items on this checklist must be completed to merge Circle CI is passing code compiles and passes tests x There are no breaking changes to public API New test cases have been added where appropriate x All new code has been commented with doc blocks Thank you for contributing Provide a brief description of the issue here Pretend you are explaining it to a friend not yourself Sending JSON Model to a server returns unexpected error Steps to reproduce Tell us how to reproduce this issue Please provide as much detail as possible the more code snippets the better If we cannot recreate it we will not be able to figure out how to fix it Make migrations to prepare the db Create a project TestProject for example Post a question for the project Models Project swift import Fluent import Vapor final class Project Model Content static let schema projects IDkey id var id String Fieldkey title var title String Fieldkey links var links String Childrenfor project var questions Question init initid String title String links String selfid id selftitle title selflinks links struct Migration FluentMigration func prepareon database Database EventLoopFutureVoid databaseschemaProjectschema fieldid string identifierauto false fieldtitle string required fieldlinks arrayof string required create func reverton database Database EventLoopFutureVoid databaseschemaProjectschemadelete static func routes app Application throws let group appgroupedprojects let controller Controller groupgetuse controllerindex groupgetproject use controllerfind grouppostuse controllercreate struct Controller func findreq Request throws EventLoopFutureProject let domain reqparametersgetproject return Projectfinddomain on reqdbunwrapor AbortnotFound func indexreq Request throws EventLoopFuture Project return Projectqueryon reqdball func createreq Request throws EventLoopFutureProject let project try reqcontentdecodeProjectself return projectsaveon reqdbmap project Question swift import Fluent import Vapor final class Question Model Content static let schema questions IDkey id var id Int didSet idexists true Fieldkey title var title String Fieldkey body var body String Fieldkey answer var answer String Parentkey projectid var project Project init initid Int nil title String body String answer String projectId ProjectIDValue selfid id selftitle title selfbody body selfanswer answer selfprojectid projectId struct Migration FluentMigration func prepareon database Database EventLoopFutureVoid databaseschemaQuestionschema fieldid int identifierauto true fieldtitle string required fieldbody string required fieldanswer string required fieldprojectid string foreignKeyfield customschema Projectschema field id onDelete cascade onUpdate cascade create func reverton database Database EventLoopFutureVoid databaseschemaQuestionschemadelete static func routes app Application throws let group appgroupedprojects project questions let controller Controller groupgetuse controllerindex grouppostuse controllercreate struct Controller func indexreq Request throws EventLoopFuture Question try ProjectController findreq req flatMapThrowing project in try projectquestionsqueryon reqdb flatMap all func createreq Request throws EventLoopFutureQuestion let question try reqcontentdecodeQuestionself return questionsaveon reqdbmap question Expected behavior Tell us what you expect to happen what should happen once we fix the issue Question created or at least expected error about unexpected object actually sending json title Test Question body Test Question Body answer Test Answer project id CocoaHeadsBelarus creates the question but nonetheless decoding error for an empty key is unexpected Actual behavior Tell us what is actually happening what is brokennot working correctly When Im handling post request json title Test Question body Test Question Body answer Test Answer project TestProject on this group swift let group appgroupedprojects project questions with this function swift func createreq Request throws EventLoopFutureQuestion let question try reqcontentdecodeQuestionself return questionsaveon reqdbmap question Called from routes routes app Application throws try Projectroutesapp try Questionroutesapp Im getting this response json errortruereasonValue of type DictionaryString Any required for key The error is thrown from here swift Dependenciesvapor beta VaporContentJsonCodersContentswift line public func decodeD decodable DType from body ByteBuffer headers HTTPHeaders throws D where D Decodable guard headerscontentType json headerscontentType jsonAPI else throw AbortunsupportedMediaType let data bodygetDataat bodyreaderIndex length bodyreadableBytes Data return try selfdecodeDself from data Here Environment We must know your exact environment or it is very difficult to help Hint use vapor version in the root directory of your Vapor project Vapor Framework version vapor beta Vapor Toolbox version vaporbeta OS version macOS Catalina v Thank you for contributing Trying to decode Arrays from a GET query string results in an unexpected fatalError The behavior that does works is unintuitive and limits how you can name you GET parameters that can repeat multiple times Provide a brief description of the issue here Pretend you are explaining it to a friend not yourself Steps to reproduce Trying to decode an array of strings using the following swift let emailsToSearch try requestqueryget String self at emailsToSearch results in a fatalError in URLEncodedFormDecoderswift line swift func unkeyedContainer throws UnkeyedDecodingContainer guard let data selfdata else return UnkeyedContainerdata codingPath selfcodingPath switch data case arraylet arr return UnkeyedContainerdata arr codingPath selfcodingPath default fatalError when I send usersemailsToSearchmyemailcom or usersemailsToSearchmyemailcom emailsToSearchanotheremailcom It does work when I send usersemailsToSearch myemailcom or usersemailsToSearch myemailcom emailsToSearch anotheremailcom however Tell us how to reproduce this issue Please provide as much detail as possible the more code snippets the better If we cannot recreate it we will not be able to figure out how to fix it Expected behavior swift let emailsToSearch try requestqueryget String self at emailsToSearch should decode usersemailsToSearchmyemailcom or usersemailsToSearchmyemailcom emailsToSearchanotheremailcom and swift let emailsToSearch try requestqueryget String self at emailsToSearch should decode usersemailsToSearch myemailcom or usersemailsToSearch myemailcom emailsToSearch anotheremailcom Tell us what you expect to happen what should happen once we fix the issue Actual behavior Trying to decode an array using swift let emailsToSearch try requestqueryget String self at emailsToSearch requires that GET arguments be named emailsToSearch This is unintuitive and assumes that array names should end with Tell us what is actually happening what is brokennot working correctly Environment We must know your exact environment or it is very difficult to help Hint use vapor version in the root directory of your Vapor project Vapor Framework version vapor beta Vapor Toolbox version Didnt use this to build the project using Xcode OS version Mac OS This allows you to embed a vapor Application inside other NIO based projects and sharing one EventLoopGroup Also fixes Checklist The items on this checklist must be completed to merge x Circle CI is passing code compiles and passes tests x There are no breaking changes to public API x New test cases have been added where appropriate x All new code has been commented with doc blocks 