 Whats the best way to convert an rray to a longform tibble Currently the best way I know is to do astable astibblenamerepair unique would you support astibblerray and asrraytibble By the same token would you support asrraytable r librarytidyverse libraryrray titanicrray Titanic unclass FIXME Should work without asrray Titanic FIXME Should work similarly with titanicrray astibble A tibble x Class Sex Age Survived n chr chr chr chr dbl st Male Child No nd Male Child No rd Male Child No Crew Male Child No st Female Child No nd Female Child No rd Female Child No Crew Female Child No st Male Adult No nd Male Adult No with more rows Titanic astibble xtabsn FIXME Should work without these three lines astable unclass asrray rraydbl Age Adult Survived No Sex Class Female Male st nd rd Crew Age Child Survived No Sex Class Female Male st nd rd Crew Age Adult Survived Yes Sex Class Female Male st nd rd Crew Age Child Survived Yes Sex Class Female Male st nd rd Crew supCreated on by the reprex package v sup The terminology for what we do with trailing commas is incorrect We dont drop trailing commas It is more appropriate for us to expand unspecified trailing indices This requires a very small change in the code changing to ignoreempty none here But requires changes to the documentation and more tests This is what we should get r libraryrray x rray c dimx max number of commas allowed is dim x rrayint missing dimensions are always expanded out equivalent expanded to x x rrayint x rrayint x rrayint error max number of commas is x Error The dimensionality of x is Cannot subset into dimension equivalent expanded to x x rrayint x rrayint x rrayint equivalent expanded to x x rrayint x rrayint with padding padding applied before expansion number of dims specified pad twice x pad x rrayint number of dims specified pad once x pad x rrayint number of dims specified no padding x pad x rrayint number of dims specified pad once x pad rrayint supCreated on by the reprex package v sup Follow whatever strategy we end up with here From this twitter conversation It would be neat for dimnames not to be limited to character vectors This would be helpful for gridded data similar to data cubes I dont know enough about R internals to know how this would fare in terms of compatibility with base arrays though We are currently in the process of writing a new package to efficiently handle posterior samples as return by MCMC samplers of Bayesian models and we consider using rray for matrix and array representations However for easy S method dispatch we need to have custom classes on top of rrays classes that simply indicate that the rray is in the right format without having to check again every time Unfortunately rray removes custom classes while base R array does not Here is a reproducible example R A array dim c classA cdrawsarray classA classA drawsarray array classAA drawsarray array B rrayasrrayarray dim c classB cdrawsarray classB classB drawsarray vctrsrrayint vctrsrray vctrsvctr classBB vctrsrrayint vctrsrray vctrsvctr Is there a way to preserve custom classes for all vectorized pointwise operations without having to redefine every numerical function rray provides for its objects Per this discussion It would be super usefull being able to do something like r rrymeanarray by listx y t or similar the list syntax is more datatablely though ie rrayerrorincompatibledim for a broadcasting error Function tapply is the obvious way to produce arrays from data frames But users of dplyr have other aggregation functionality that keeps them in the realm of the tidy dataset format Perhaps it would be useful to ease their ocassional jumps to array computing offering a kind of tapply tailored to their conventions If you dare to infringe Hadley Wickhams function names copyright a simple example of this could be r libraryrray librarydplyr librarygapminder rraysummarise functiongrtibexp FUNsum erlangenexprexp tib dplyrtransmutegrtib vare asrray tapplytib var INDEX aslisttib attrtib vars FUNFUN gapminder groupbycontinent year rraysummarisepop rraydbl year continent Africa Americas Asia Europe Oceania year continent Africa Americas Asia Europe Oceania year continent Africa Americas Asia Europe Oceania supCreated on by the reprex package v sup 