Im trying to add a package for QNNPACK to the Spack package manager I see that QNNPACK downloads its own dependencies and that this can be avoided by setting SOURCEDIR via cmake Is there a way to point to an existing external installation instead of a source directory so that Spack doesnt need to rebuild all of these dependencies Spack is designed to work on airgapped supercomputers that dont have internet access so I cant have it download anything at build time I found x aarch neonfp arith is this the fp gemm method Microkernels implementation of the following Q GEMM with perchannel weights quantization parameters c unit tests benchmarks Q GEMM with perchannel weights quantization parameters for AARCH S unit tests benchmarks Q GEMM with perchannel weights quantization parameters with bit opportunistic accumulation c unit tests benchmarks Q GEMM with perchannel weights quantization parameters with bit opportunistic accumulation for AARCH S unit tests benchmarks This is a preliminary version in order to get some feedback The goal is adding support in GEMM with different kernel quantization parameters per output channel Changes Modified version of x gemm ukernel was added to support kernel scale and zeropoint per output channel Helper funcitons were added weightspacking computing requantization parameters gemmmicrokernel test function was added with corresponding unittests I am opening this issue to see if anyone is interested in contributing As QNNPACK have minimum dependecy it is possible to use amalgamation and emscripten to build a javascript version of the library See as an example for our deep learning project This could be fun for some usecases to run QNNPACK on the browser and provide some cool demos 