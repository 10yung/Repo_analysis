In the function irprintglslvisitorprintprecision the following block of code skips writing the default lowp precision when possible skip precision for samplers that end up being lowp default anyway or undefined except always emit it for shadowmap samplers some drivers dont implement default EXTshadowsamplers precision and D textures they always require precision if type typeissampler typesamplershadow typesamplerarray typesamplerdimensionality GLSLSAMPLERDIM D if prec glslprecisionlow prec glslprecisionundefined return This wrongly skips writing precision for D array textures The fixed conditional should also check for samplerarray if type typeissampler typesamplershadow typesamplerarray typesamplerdimensionality GLSLSAMPLERDIM D A few allocations made in the constructor were not being freed glsltypesinterfacetypes wasnt being freed added cleanup to mesaglslreleasetypes Just a feature request to make the build process faster for users of glsloptimizer What is the proper way to cross compile the GLEXTshaderframebufferfetch extension to Metal I get an extension not supported error if I include extension GLEXTshaderframebufferfetch enable in the shader Searching the code I do find colord in irprintmetalvisitorcpp This makes it easier to use the library in C or another programming language like Rust which can interface with the C ABI instead of approximations with the recent advent of panorama rendering it is crucial to have native acos and atan functions emitted into the shader code because the approximations not always lead to optimal results in edge cases Hello Ive struggled for days now trying to build this for Android Ive managed to build the static libs but linking them to the project is a bloody nightmare Undefined variables all over the place Does anyone have any source code I can browse to find the solution Thanks It seems like switch statements dont work which are supported in GLSL I think part of the issue is the MESA code which isnt outputting correct instructions For example mesaprintir outputs instructions like this assign expression bool allequal constant int varref compilertemp x varref compilertemp constant bool assign varref compilertemp x varref compilertemp constant bool Which mesaprintirglsl turns into something like b tmpvar bool tmpvar tmpvar bool Which of course is invalid code Any plans to upgrade to the latest MESA Im interested in trying to add GLSL support to this project Thanks Eg version uniform int b void main switch b case glFragColor vec break case glFragColor vec break Creates version uniform int b void main bool tmpvar tmpvar bool bool tmpvar tmpvar bool b tmpvar bool tmpvar tmpvar bool if tmpvar glFragColor vec tmpvar bool b tmpvar bool tmpvar tmpvar bool if tmpvar glFragColor vec tmpvar bool duplicate symbol mesaerrornomemory in CMakeFilesglslcompilerdirsrcglslmaincppo libglsloptimizerastandalonescaffoldingcppo ld duplicate symbol for architecture x sh clang v Apple LLVM version clang Target x appledarwin Thread model posix 