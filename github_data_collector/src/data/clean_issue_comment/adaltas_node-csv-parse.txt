Is your feature request related to a problem Please describe If the data source is sending out multiple delimiter type files it should be possible to detect the delimiter automatically Describe the solution youd like Simple string comparison in the first few lines can give the column count equivalent character finding the suitable delimiter Describe alternatives youve considered NA Additional context NA This gets rid of unnecessary dependencies padEnd is supported from Node v see travisyml lists Node v as the oldest supported version Indeed this means csvparse no longer depends on any thirdparty packages which would be pretty neat Currently npm install csvparse csvparse added packages from contributors Were currently parsing an array using the columns option However we want our input to be able handle CSVs where the header is provided Right now it parses any provided header row as if it matched the columns array defined Ideally if a header row is found that matches the columns option the parser would drop it Right now we have to use a transformer to drop if present when really this scope seems more fitting for the parser logic Has anyone else run into a similar issue with parsing CSVs with and without headers Is there a better workaround than using a transformer Unfortunately due to the CSV sources we cannot guarantee consistent CSV input withwithout headers without extra burden to the users js const csvHeader id nobj nobj header included const csvNoHeader obj nobj no header const passThrough new StreamPassThrough passThroughwritecsvHeader passThroughend const idParser CSVparse columns id trim true passThroughpipeidParser outputs id id id obj id obj requires us to have to filter out id id in future transformers 