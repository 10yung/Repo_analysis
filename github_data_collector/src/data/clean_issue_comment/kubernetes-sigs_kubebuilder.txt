 Description Utilities for the configuration file are spread over all the source code This PR centralized them in a new package As it is only intended for kubebuilders use it has been placed in a internal directory As they are accessed from both the cmd and the pkg directories it has to be the root internal directory cmd packages interaction with this package has also been centralized in the cmdutil package The variable and field names have also been moved towards config instead of project as it is more descriptive Motivation This PR is part of a bigger change tracked in but can be applied rightaway kind cleanup Order Travis script execution in order to avoid using resources if easier checks fail If any stage fails the rest are not executed and thus easy to run stages should be placed first The order chosen has been Linting fastest to run Golden test only executed once Test executed for several OS Go and K s configurations Coverage trivial Suggested in Tacked in kind cleanup This fixes if for the first run for goenv kubernetessigs Hiya Welcome to KubeBuilder For a smooth PR process please ensure that you include the following information a description of the change the motivation for the change what issue it fixes if any in GitHub syntax eg Fixes XYZ Both the description and motivation may reference other issues and PRs but should be mostly understandable without following the links eg when reading the git commit log Please dont mention people in PR or commit messages do so in an additional comment PLEASE REMOVE THIS COMMENT BLOCK BEFORE SUBMITTING THE PR the bits between the arrows STOP If this is an issue with some sort of runtime mechanics it probably belongs in instead If this is an issue with CRD generation or webhook config generation it probably belongs in sigsk siocontrollertools instead If this is an issue with scaffolding or is definitely a cross repository effort it probably belongs here Hiya Welcome to KubeBuilder For a smooth issue process try to answer the following questions Dont worry if theyre not all applicable just try to include what you can If you need to include code snippets or logs please put them in fenced code blocks If theyre superlong please use the details tag like detailssummarysuperlong logsummary lots of stuff details What broke please include exact error messages if you can Generated makefile controllergen install errors on st run for some configs like goenv What did you expect to happen What do you think went wrong Generated the makefile and tried to run in st time without having controllergen installed make generate go creating new gomod module tmp go finding sigsk siocontrollertoolscmd v go finding sigsk sio v go finding sigsk siocontrollertoolscmdcontrollergen v Usersopetrushkago bincontrollergen objectheaderFilehackboilerplategotxt paths binsh Usersopetrushkago bincontrollergen No such file or directory make generate Error I think this line should be amended CONTROLLERGENGOBINcontrollergen Identification for both the need to install and using and installed binary uses shell which controllergen which should always be true GOBIN might not always be the right place for example with using goenv running the makefile points to the global one while go points to a versioned one My suggestion is to use the same line as used elsewhere CONTROLLERGENshell which controllergen which would give a consistent result and would match the rest of the code If you dont know what broke but have a minimal reproducer that would be superhelpful helpful What versions of software are you using Specifically the following are often useful go version kubebuilder version kubebuilder version and scaffolding version check your PROJECT file controllerruntime version check your gomod file controllertools version Kubernetes kubectl versions just run kubectl version against your API server If this is actually about documentation add kind documentation below kind bug One of the first things you have to do when getting started is to select a domain name For a small project in a small organisation this might be straight forward but lets say you work for a large multinational that has s of development teams you dont just go using your companies domain name anywhere without first asking yourself is this going to cause a conflict if we ever need to integrate with the operators from other teams in the company Should I include my organisation unit name in the domain name The most important information thats needed I think is whether the domain name needs to be unique ie if two different kubebuilder projects use the same domain name could that cause a problem in particular if they ever need to coexist with each other in the same system The getting started guide should mention this and the book should probably go into more detail about what the domain name is used for Description Add image flag to kubebuilder init command that allows to specify a image name instead of having it hardcoded Motivation This PR is part of a bigger change tracked in but can be applied rightaway kind feature Description Include the PROJECT file into modelUniverse It also provides a constructor for modelUniverse called modelNewUniverse that uses the functional options paradigm to provide optional configuration Motivation The main motivation is providing plugins access to the configuration file Additionally scaffoldExecute needs some information aside from the files it scaffolds Right now this informnation is provided in three different ways As fields to the Scaffold instance the first parameter to ScaffoldExecute modelUniverse and the second parameter to ScaffoldExecute inputOptions This change is a first step into providing a single way to provide that information This PR is part of a bigger change tracked in but can be applied rightaway kind feature GolangCI uses several different linters concurrently to asses the code quality of this repository This issue lists which ones are implemented in this project bodyclose x deadcode depguard dogsled x dupl x errcheck funlen gochecknoglobals gochecknoinits gocognit x goconst gocritic x gocyclo godox x gofmt x goimports x golint gomnd x gosec x gosimple x govet x ineffassign x interfacer lll x maligned x misspell x nakedret prealloc rowserrcheck scopelint x staticcheck x structcheck stylecheck typecheck unconvert x unparam x unused x varcheck whitespace wsl detailssummaryLinters descriptions for referencesummary govet Vet examines Go source code and reports suspicious constructs such as Printf calls whose arguments do not align with the format string errcheck Errcheck is a program for checking for unchecked errors in go programs These unchecked errors can be critical bugs in some cases staticcheck Staticcheck is a go vet on steroids applying a ton of static analysis checks unused Checks Go code for unused constants variables functions and types gosimple Linter for Go source code that specializes in simplifying a code structcheck Finds unused struct fields varcheck Finds unused global variables and constants ineffassign Detects when assignments to existing variables are not used deadcode Finds unused code typecheck Like the frontend of a Go compiler parses and typechecks Go code bodyclose checks whether HTTP response body is closed successfully golint Golint differs from gofmt Gofmt reformats Go source code whereas golint prints out style mistakes rowserrcheck checks whether Err of rows is checked successfully stylecheck Stylecheck is a replacement for golint gosec Inspects source code for security problems interfacer Linter that suggests narrower interface types unconvert Remove unnecessary type conversions dupl Tool for code clone detection goconst Finds repeated strings that could be replaced by a constant gocyclo Computes and checks the cyclomatic complexity of functions gocognit Computes and checks the cognitive complexity of functions gofmt Gofmt checks whether code was gofmted By default this tool runs with s option to check for code simplification goimports Goimports does everything that gofmt does Additionally it checks unused imports maligned Tool to detect Go structs that would take less memory if their fields were sorted depguard Go linter that checks if package imports are in a list of acceptable packages misspell Finds commonly misspelled English words in comments lll Reports long lines unparam Reports unused function parameters dogsled Checks assignments with too many blank identifiers eg x f nakedret Finds naked returns in functions greater than a specified function length prealloc Finds slice declarations that could potentially be preallocated scopelint Scopelint checks for unpinned variables in go programs gocritic The most opinionated Go source code linter gochecknoinits Checks that no init functions are present in Go code gochecknoglobals Checks that no globals are present in Go code godox Tool for detection of FIXME TODO and other comment keywords funlen Tool for detection of long functions whitespace Tool for detection of leading and trailing whitespace wsl Whitespace Linter Forces you to use empty lines gomnd An analyzer to detect magic numbers details v was released more than month ago kubebuilder currently uses v we should update to use v 