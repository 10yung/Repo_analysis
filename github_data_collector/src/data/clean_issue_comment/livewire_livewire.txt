I took me a few hours but I finally got the matrix build to run and Laravel support in I discovered that the matrix build wasnt really running and was always testing on x I took some inspiration from Spaties builds to set things up And also added Laravel support in the meantime I also cleaned up the composerjson file to be more similar to Laravels one I needed to set minimum stability for example I also added a minimum PHP version to it which is the same one as the minimum Laravel one As you can see I needed to do quite some circumventing to get things to work In the future it might be best to consider to drop support for older Laravel versions Feel free to add comments on the pieces of code where you have questions and Ill answer them This will throw Unable to set component data Public property not found on component php a href wireclickpreventsetshowChattrue After a lot of head scratching I found out that this will work as expected php a href wireclickpreventsetshowChat true Not putting a space after the comma and before the value will make livewire want to evaluate the string for some reason It evaluates true to and tries to find a public property with that name To Reproduce Just omit the space before tha value Expected behavior The space should not have any effect Is your feature request related to a problem Please describe Please clarify in the documents whether this should be followed for livewireScripts Describe the solution youd like Update this page as needed Any function called with wirekeydown uses the last updated binding from wiremodellazy instead of the current when both on the same input I have a nested component and within that nested component Im using the this blade directive to have livewire send an update on a javascript event Unfortunately this this doesnt work when you update the component because that javascript does not get updated when the component updates this will always reference the first component In the example below I understand that I could change the onclick to a wireclick and it would work Ive just used this to simplify what is a more complex implementation where I cannot do that in my case Top Component php class TopComponent extends Component public currentItem first protected listeners next next public function next thiscurrentItem second html div livewirenestedcomponent currentItem keycurrentItem div Nested Component php class NestedComponent extends Component public name public value changeme public function mountname thisname name html div Component Name namebr Value valuebr button onclickmyFunctionUpdate Value to Changedbutton button wireclickemitnextMove to Next Componentbutton div script function myFunction This works on the first component but not on the second thissetvalue changed script The Issue When the page loads thissetvalue changed becomes thiswindowlivewirefindoriginalnestedidstringsetvalue changed When the nested component is changed the new component has a different id but that javascript remains the same and references originalnestedidstring so the update fails Is there a way to update the javascript with the new component ID when a nested component is updated Is your feature request related to a problem Please describe When you do a defer loading div wireinitgetData I would like to be able to target a loading action just for that event You dont always need a loading screen on other types of actions within that component Describe the solution youd like div wireinitgetData div wireloading wiretargetinitLoadingdiv div Describe the bug A listener with the parameter named date will contain an instance of Illuminate Support DateFactory despite we are not sending any date object Changing the parameter name to test fix the problem To Reproduce php php namespace App Http Livewire use Livewire Component class Pagination extends Component public int month public int year public function mount thismonth nowmonth thisyear nowyear public function updatedname value thisemitpaginate thisyearthismonth public function render return viewlivewirepagination php php namespace App Http Livewire use Livewire Component class Account extends Component protected listeners paginate loadTransactions public function loadTransactionsdate Expect but receive an instance of Illuminate Support DateFactory instead dddate public function render return viewlivewireaccount Expected behavior The parameter date should contain the emitted value Desktop please complete the following information Tested on Firefox Additional context Tested with PHP Tested with livewire and devmaster Using collection returns the expected string Describe the bug Strange behavior with comma separated parameter To Reproduce Steps to reproduce the behavior Install latest Laravel and latest livewire Create livewire component php artisan makelivewire test Update view and component class resourcesviewslivewiretestbladephp div php text test test endphp button wireclicktest text Testbutton div appHttpLivewireTestphp php namespace App Http Livewire use Livewire Component class Test extends Component private text public function render return viewlivewiretest public function testtext thistext text Expected behavior In browser console SyntaxError literal not terminated before end of script But if you change the view to delete one space in text div php text testtest endphp button wireclicktest text Testbutton div Everything works fine Desktop please complete the following information Browser is any FF Chrome Safari and etc I am following the episode on Laracasts on how to make a Livewire table Everything seems to work fine until I change the select option more than times The first times I can see a request is made to my controller in the network section of Chrome On the rd change there is no longer any requests being made Add wiremodelperPage to a select field like so select wiremodelperPage classbgtransparent wfull px py cursorpointer capitalize option option option option option option select on the backend I have the controller set ups as so php namespace App Http Livewire use Livewire Component use App Conference use App Session use Livewire WithPagination class SessionsTable extends Component use WithPagination public search public perPage public sortField title public sortAsc true public function sortByfield if thissortField field thissortAsc thissortAsc else thissortAsc true thissortField field public function render conference Conferencelatestfirst sessions Sessionsearch thissearch orderBythissortField thissortAsc asc desc paginatethisperPage return viewlivewiresessionstable compactsessions now if you select the perPage different times to change the collection it stops working all together Again the first and second change work just fine You should be able to select per page as many times as you want Describe the bug I have a search Input and I am showing a list of items in a list with a pagination count of on each page The search only works when I am on page If I go to another page and search something over the input the results dont get listed and the pagination still shows up even when the search count is small than the pagination count Expected behavior I was expecting to see my results without pagination If I press on the pagination i cant see the results of my search Video Take a look at I am not sure if this is a bug or I am missing something out Controller php namespace App Http Livewire Tags use App Tag use Exception use Illuminate Contracts View Factory use Illuminate View View use Livewire Component use Livewire WithPagination class TagEdit extends Component use WithPagination public searchInput protected searchList protected pagination param id throws Exception public function deleteTagsid void deleteID TagfindOrFailid deleteIDdelete return FactoryView public function render thissearchList Tagwhereschlagwort like thissearchInput orderBycreatedat desc paginatethispagination return viewlivewiretagstagedit searchList thissearchList View div div classtextleft mb label forlabelSchlagwort classfontweightboldSchlagwort Suchenlabel input classformcontrol placeholderSchlagwort Suchen typetext wiremodelsearchInput div ifsearchListtotal searchListlinks table classtable tablestriped tablehover thead tr th scopecol classtextleftSchlagwortth th scopecol classtextleftAngelegt amth th scopecol classtextleftth tr thead tbody foreachsearchList as searchedItem tr td classtextleft searchedItemschlagwort td td classtextleft searchedItemcreatedat td td classtextleft button classbtn btnsuccessEditierenbutton button classbtn btndanger wireclickdeleteTags searchedItemid L schenbutton td tr endforeach tbody table searchListlinks endif div 