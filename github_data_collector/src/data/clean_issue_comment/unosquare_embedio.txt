I have a WebApiController with RouteHttpVerbsAny registered as WithWebApisomeurl m m WithControllerMainController The problem that it never gets called The server returns Any solution How can i register an endpoint that is called when no route is found I have an undetermined url and it cannot be processed with builtin Route attribute I cannot catch exceptions because theyre costly and it is not a right way to handle this case Currently im forced to have OnGet and catch all the requests Also is there a way to pass custom regex as route Closes Hello Team I am using Xamarin tvOS framework for developing the tvOS project So I am using the embedio nudget package as a local server It is working fine when we launch the application But when app goes into the background and app returns in ForeGround then embedio nudget package is not working as expected It is started Giving the SystemNetHttpHttpRequestException An error occurred while sending the request SystemNetWebException Error ConnectFailure Connection refused SystemNetSocketsSocketException Connection refused at SystemNetSocketsSocketAsyncResult I tried to dispose and again try to run the server but still it is not working and once we kill the application and again relaunch the app then it is working as expected So let me know If I am missing anything or If I am doing anything wrong here When starting WebServer with a zip file I sometimes get this exception SystemIOIOException Sometimes it works as expected and loads all files Sometimes I get this exception and sometimes it loads the server but with some files missing local header corrupted I am attempting to run the server on a XamarinAndroid app Any help would be appreciated EmbedIO is creating a session for each controller instead of one for all the WebModules Describe the bug While using an API REST controller with logging to Console the webserver logs responses to requests This log information includes the response time in ms This response time is however incorrect and does not correspond to the actual response time the client experiences While performing tests using Postman as the client then Postman reported responses between ms and ms for all the requests below The first request appears correct The rest are totally wrong INF WebServer Mx kSDSNa Op I cqHWw GET apistatistics OK sent in ms chunked INF WebServer aUwmWPbUcEeRAd VGg i A GET apistatistics OK sent in ms chunked INF WebServer wUB HO icUCH BZ OGC A GET apistatistics OK sent in ms chunked INF WebServer I cPg E byBihzb SKQ GET apistatistics OK sent in ms chunked INF WebServer aFzm L t EurksOy ejOg GET apistatistics OK sent in ms chunked INF WebServer dnDe WEuW VHrNeNw GET apistatistics OK sent in ms chunked INF WebServer SpGKCvoedkOmPY zsCrvSg GET apistatistics OK sent in ms chunked INF WebServer qhCnXtCxkeuwXnxhxH A GET apistatistics OK sent in ms chunked INF WebServer oKkgal KWEua yDQ jy nw GET apistatistics OK sent in ms chunked INF WebServer eATwdNNDTUW FKABwKp g GET apistatistics OK sent in ms chunked INF WebServer AQNwph m USP bsQiYFRJw GET apistatistics OK sent in ms chunked INF WebServer E Z Ar GUyeheH GhHgQA GET apistatistics OK sent in ms chunked INF WebServer tDJNYKO Dg iLup SA GET apistatistics OK sent in ms chunked INF WebServer Lvn EZBZ aUXKYJCn jsg GET apistatistics OK sent in ms chunked INF WebServer Fp vr G Mwxixqsudg GET apistatistics OK sent in ms chunked I have also seen examples where the response time is quoted as seconds but the reality was just a few ms To Reproduce Steps to reproduce the behavior Go to Click on Scroll down to See error Expected behavior The response times should correspond to reality Screenshots See log output above Desktop please complete the following information OS Windows Bit running DotNet Core Browser Postman Version Smartphone please complete the following information Device eg iPhone OS eg iOS Browser eg stock browser safari Version eg Additional context Describe the bug This may just be my lack of experience with WebSockets but it appears as if the handshake isnt working properly The WebsocketClient throws an exception saying that the server returned a status code of but was expecting a To Reproduce Server side code just the creation code shown for brevity private WebServer CreateWebServerstring url var server new WebServero o WithUrlPrefixurl WithModeHttpListenerModeEmbedIO First we will configure our web server by adding Modules WithLocalSessionManager WithModulenew WebSocketCallbackModuleregister return server Client side code ClientWebSocket webSocket null try webSocket new ClientWebSocket await webSocketConnectAsyncnew UriURI CancellationTokenNone catch Exception e DebugWriteLineCallbackHandlerConnect error connecting web socket eMessage Expected behavior A successful connection Screenshots NA Desktop please complete the following information OS Windows Browser NA Version Smartphone please complete the following information NA Additional context The EmbedIO web server is running inside a NET application The client is a Net Standard library AND thanks for a great library Im using the WebAPI module in another app and it runs perfectly The EndPointListener is not removed from EndPointManager when the server is shutdown or disposed We noticed this on iOS since if our app is suspended then iOS will shutdown the listener and make it unusable which leaves you in the position of not being able to restart the server It looks like the problem is in EndPointManagerRemovePrefix it creates a new prefix object and passes it to RemovePrefix c private static void RemovePrefixstring prefix HttpListener listener try var lp new ListenerPrefixprefix Creates new prefix object if lpIsValid return var epl GetEpListenerlpHost lpPort listener lpSecure eplRemovePrefixlp Passes new prefix to RemovePrefix catch SocketException ignored Then in EndPointListenerRemovePrefix its using the new listener prefix object and it wont be removed because the key of the dictionary is the ListenerPrefix reference and the new ListenerPrefix object wont match any object in the dictionary c public void RemovePrefixListenerPrefix prefix snip DictionaryListenerPrefix HttpListener prefs p do prefs prefixes if prefsContainsKeyprefix break exits here since the new ListenerPrefix object doesnt match any dictionary object p prefsToDictionaryx xKey x xValue p Removeprefix while InterlockedCompareExchangeref prefixes p prefs prefs CheckIfRemove Thanks We noticed that our webclient doesnt work occasionally Reloading the page sometimes solves the problem The client initiates the protocol by sending handshake websocket messages to the server There seems to be a race condition where client websocket messages sent between accepting and processing are lost Steps to reproduce the behavior Set up websocket module Connect a client that immediatally sends messages when connected Initial messages are not processed on the server side Subsequent messages sent after a delay are properly processed The messages are visible in both Chrome web developer tools and on the wire wireshark Desktop Windows with Chrome on Net Framework Describe the bug Using the EmbedIO listener with a simple health controller that simply responds with a String The request takes seconds to process Have tried with both httpie and curl on the client side With the MS listener the request processes immediately as expected Desktop please complete the following information OS Windows Browser eg chrome safari NA Version eg 