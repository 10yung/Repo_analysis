Edge will be Chromiumcompatible soon UA will be deprecated Metal is not supported Hi It would be interesting to create an example of a small futuristic starcraftlike game using D isometric RTS Game as it would involve all the other examples already presented in the examples folder and would help very newcomers to this topic The bigger simple examples of small and complete game genres in the examples folder I think there will be greater adoption of the engine which by the way is very good in my opinion Sorry for basic English Hi I converted to ebiten this week Still very early code and not performant but it did run against v In this code I may draw images to the screen ebitenImage at coordinates like My hardware is a Pinebook Pro using the Panfrost driver Attempting to upgrade ebiten to v alpha and then master I get the following failure DRMIOCTLPANFROSTCREATEBO failed Cannot allocate memory DRMIOCTLPANFROSTMMAPBO failed No such file or directory mmap failed xffffffffffffffff Invalid argument fatal error unexpected signal during runtime execution signal SIGSEGV segmentation violation code x addr xffffffffffffffff pc xffff aeef runtime stack runtimethrow x c x a usrlibgo srcruntimepanicgo x runtimesigpanic usrlibgo srcruntimesignalunixgo x goroutine syscall locked to thread runtimecgocall x x ada x usrlibgo srcruntimecgocallgo x fp x ada sp x ada pc x fd githubcomhajimehoshiebiteninternalgraphicsdriveropenglglCfuncglowUnmapBuffer xffff x ec x adb cgogotypesgo x fp x ada sp x ada pc x e c githubcomhajimehoshiebiteninternalgraphicsdriveropenglglUnmapBuffer homelupinegopkgmodgithubcomhajimehoshiebitenv alpha e c ee internalgraphicsdriveropenglglpackagenotwindowsgo githubcomhajimehoshiebiteninternalgraphicsdriveropenglcontextunmapPixelBufferfunc x a x e homelupinegopkgmodgithubcomhajimehoshiebitenv alpha e c ee internalgraphicsdriveropenglcontextdesktopgo x c fp x adad sp x ada pc x dcf githubcomhajimehoshiebiteninternalthreadThreadCallfunc homelupinegopkgmodgithubcomhajimehoshiebitenv alpha e c ee internalthreadthreadgo x fp x adb sp x adad pc x e githubcomhajimehoshiebiteninternalthreadThreadLoop x d x d c x e homelupinegopkgmodgithubcomhajimehoshiebitenv alpha e c ee internalthreadthreadgo x c fp x adba sp x adb pc x e githubcomhajimehoshiebiteninternaluidriverglfwUserInterfaceRun x fa a x d xa d x dd xa x ce x fbe homelupinegopkgmodgithubcomhajimehoshiebitenv alpha e c ee internaluidriverglfwuigo x fp x adc sp x adba pc x fc githubcomhajimehoshiebitenrunGame x d b x d x ff x x homelupinegopkgmodgithubcomhajimehoshiebitenv alpha e c ee rungo x c fp x adc sp x adc pc x cfa githubcomhajimehoshiebitenRun x c x x x ff x a d x x c c c x c homelupinegopkgmodgithubcomhajimehoshiebitenv alpha e c ee rungo x fp x adcf sp x adc pc x ce urgsordoorinternaluiWindowRun x e fc x c x c x f a x homelupinedevcodeurgslupineordoorinternaluiwindowgo xc fp x add sp x adcf pc x fb c mainmain homelupinedevcodeurgslupineordoorcmdviewmapmaingo x fp x adf sp x add pc x c runtimemain usrlibgo srcruntimeprocgo x c fp x adfd sp x adf pc x a runtimegoexit usrlibgo srcruntimeasmarm s x fp x adfd sp x adfd pc x c goroutine chan receive githubcomhajimehoshiebiteninternalthreadThreadCall x d x x b b x abc homelupinegopkgmodgithubcomhajimehoshiebitenv alpha e c ee internalthreadthreadgo xc githubcomhajimehoshiebiteninternalgraphicsdriveropenglcontextunmapPixelBuffer xa a x x x homelupinegopkgmodgithubcomhajimehoshiebitenv alpha e c ee internalgraphicsdriveropenglcontextdesktopgo x githubcomhajimehoshiebiteninternalgraphicsdriveropenglpboStateunmapPBO xa homelupinegopkgmodgithubcomhajimehoshiebitenv alpha e c ee internalgraphicsdriveropenglpbodesktopgo x githubcomhajimehoshiebiteninternalgraphicsdriveropenglImageReplacePixels x db x c xad xc homelupinegopkgmodgithubcomhajimehoshiebitenv alpha e c ee internalgraphicsdriveropenglimagego xd githubcomhajimehoshiebiteninternalgraphicscommandreplacePixelsCommandExec x c x x x homelupinegopkgmodgithubcomhajimehoshiebitenv alpha e c ee internalgraphicscommandcommandgo x githubcomhajimehoshiebiteninternalgraphicscommandcommandQueueFlush xa homelupinegopkgmodgithubcomhajimehoshiebitenv alpha e c ee internalgraphicscommandcommandgo x githubcomhajimehoshiebiteninternalgraphicscommandFlushCommands homelupinegopkgmodgithubcomhajimehoshiebitenv alpha e c ee internalgraphicscommandcommandgo githubcomhajimehoshiebiteninternalrestorableResolveStaleImages homelupinegopkgmodgithubcomhajimehoshiebitenv alpha e c ee internalrestorableimagesgo x githubcomhajimehoshiebiteninternalshareableEndFrame xa d x f a homelupinegopkgmodgithubcomhajimehoshiebitenv alpha e c ee internalshareableimagego x c githubcomhajimehoshiebiteninternalbufferedEndFrame homelupinegopkgmodgithubcomhajimehoshiebitenv alpha e c ee internalbufferedimagego githubcomhajimehoshiebitenuiContextUpdate xa d x f a x x homelupinegopkgmodgithubcomhajimehoshiebitenv alpha e c ee uicontextgo x githubcomhajimehoshiebiteninternaluidriverglfwUserInterfaceupdate x fa a x d xa d x e dc x e homelupinegopkgmodgithubcomhajimehoshiebitenv alpha e c ee internaluidriverglfwuigo x b githubcomhajimehoshiebiteninternaluidriverglfwUserInterfaceloop x fa a x d xa d x x homelupinegopkgmodgithubcomhajimehoshiebitenv alpha e c ee internaluidriverglfwuigo xb githubcomhajimehoshiebiteninternaluidriverglfwUserInterfacerun x fa a x d xa d x x homelupinegopkgmodgithubcomhajimehoshiebitenv alpha e c ee internaluidriverglfwuigo x githubcomhajimehoshiebiteninternaluidriverglfwUserInterfaceRunfunc x c x bfa x fa a x d xa d homelupinegopkgmodgithubcomhajimehoshiebitenv alpha e c ee internaluidriverglfwuigo x created by githubcomhajimehoshiebiteninternaluidriverglfwUserInterfaceRun homelupinegopkgmodgithubcomhajimehoshiebitenv alpha e c ee internaluidriverglfwuigo x I presume the failure to allocate memory is unexpected and not checked for leading to the sigsegv At a minimum we should panic instead even better would be if the code kept working I appreciate panfrost is a marginal platform and Im doing very nonperformant things on it right now but I thought the SIGSEGV was interesting enough to report The problem Calling IsGamepadButtonPressed and IsKeyPressed in my game now makes the game take roughly of the frame time for a FPS in the master branch rather than it takes in the branch From eyeballing two different profiles my understanding is that all these threadThreadCall methods add noticeable overhead to most of these function calls Zip file of two SVGs from second CPU profile of my game giveupthedupeebitensvgszip I would like to be able to detect when the game window loses focus Possible ways Allow the registration of hooks for focus loss and focus gain Allow the polling of focus state Use cases Bringing up a pause menu so the user has time to prepare before resuming play Pausing concurrent operations which must run on a separate timing than Update Im not sure this should be in Ebiten core but this should be useful