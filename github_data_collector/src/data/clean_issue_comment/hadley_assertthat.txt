A new function assertpackages can be used in place of code suggested by R Packages Instead of this r if requireNamespacepkg quietly TRUE stopPackage pkg needed for this function to work Please install it call FALSE You can use this r assertthatassertpackagespkg This PR fixes adds assertpackages to new file RassertpackagesR adds tests in new file teststestthattestpackagesR updates Roxygen to roxygenizes package adds item to NEWS Quite often I find myself needing to check a vector of conditions for example libraryassertthat x c assertthat x which fails because x is not of length To get around this I often define the following utility functions assertthatany function x list for i in x assertthatanyi assertthatall function x list for i in x assertthatalli assertthatany c c assertthatall c c It would be awesome if this could be included into the library happy to attempt a PR if you agree Hi the test for scalar evaluates also complex data types to true For example assertthatisscalarlistfoo TRUE This was quite unexpected to me because it is also documented together with the test for atomic data types Is there a rationale not to test for the given value to be atomic Otherwise I would propose to test assertthatisscalar function x isatomicx lengthx L Thanks for your help Manuel I would like to propose the addition of isfile isfiles isfolder and isfolders with optional checking for readwrite access It is quite often that functions takes files and folders as input and checking the veracity of these is needed putting this in the assertthat framework would benefit a lot This idea follows from the Suggests section of the Rpkgs book where you provide the code R if requireNamespacepkg quietly TRUE stopPackage pkg needed for this function to work Please install it call FALSE Could this be useful as a new assertionhaspackage R assertthathaspackagedplyr Id be happy to make the PR if you think this might be useful If so some questions Name haspackage haspackages other Should the argument be as unnamed or packages which would be a charactervector of package names or other Often when troubleshooting a long pipe if I need to test assertions on the data I need to interrupt the pipe if no grouping present or use a do block both withwithout grouping r librarydplyr cyls mtcars filtercyl cyls groupbyvs summarizez maxdensitympgy works as one might expect If you run this with cyls though youll see that vs only contains one row and errors out r cyls mtcars filtercyl cyls groupbyvs mutatez maxdensitympgy Error in mutateimpldata dots need at least points to select a bandwidth automatically In order to assert that sufficient data is present you either need to use a do block or break up the pipe r libraryassertthat cyls mtcars filtercyl cyls groupbyvs do assertthat lengthnaomitmpg msg I cannot grok the data summarizez maxdensitympgy Error I cannot grok the data It would be nice to be able to test the assertion midpipe r cyls mtcars filtercyl cyls groupbyvs assertpipestop lengthnaomitmpg msg I cannot grok the data summarizez maxdensitympgy Granted in this contrived example the error should be sufficient but its not hard to consider longer pipelines where calculation should not continue without verified conditions I think assertioncompanion functions such as assertpipestop and perhaps assertpipewarning might be useful I think it makes more sense to extend assertthat to be pipeaware vice adding assertions to dplyr or another of the tidyverse packages Thoughts Im willing to work on a PR though admittedly Im not as proficient at NSE where these functions would heavily reside Hi I think it would be useful to have also an assertion for binary variables indicators since they quite often appear in statistics and data analysis Possible solution isbinary functionx narm TRUE if narm x x isnax isnumericx alluniquex in c onfailureisbinary functioncall env type evalcalltype env paste deparsecallx is not a binary vector a numeric vector consisting only of s and s Thanks for this awesome resource I use it all the time Could we have a warnif that provides a warning not an error when false for testthat compatibility asexpectationassertError functionx testthatexpectationfailure xmessage it would be nice if there were a builtin assertion to test whether some object is in another one say a list or vector etc This might be common when there are several available options to test whether the passed argument is permissible Currently say assertthatfactor in colnamesresultsloa is possible but on error gives the slightly uninformative Error inx factor table colnamesresultsloa is not TRUE 