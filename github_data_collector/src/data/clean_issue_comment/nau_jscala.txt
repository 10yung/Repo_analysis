Whathow common is the use case If a user wants prefixed javascript names there could be an annotation like in scalajs that specifies the javascript name to use This is more general than adding a prefix The javascript name could be completely different if desired so that they can be used in scala and rendered to javascript This would require a different approach than adding a method to the companion object like the one I described here x Int x generates function x return x Create Fiddle for JScala like It can be run here or here I was hoping for a relatively type safe and lightweight way of providing options to JavaScript APIs Suppose we have scala scala object L def fopt Opt Int trait Opt val a String defined module L Then the following scala scala javascript Lfnew LOpt val a a asString anon LOpt res String Lf a a scala javascript new LOpt val a a asString res String function anon thisa a new anon compiles and generates proper JavaScript but it should fail like this scala scala new LOpt val a a console error overriding value a in class Optclass of type String value a needs override modifier new LOpt val a a I thought that simple ctypeCheck in jsAnonObjDecl will fix this but apparently this doesnt work it still type checks x Dont generate block for single statement scala val a match case should not generated block like this javascript var a switch case a break x Alternatives scala match case should translate to javascript switch case case break Guards scala match case if true should translate to javascript switch case if true break 