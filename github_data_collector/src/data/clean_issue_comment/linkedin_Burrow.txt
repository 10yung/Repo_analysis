any detail about this message levelinfots msgcluster or consumer not foundtypemodulecoordinatorevaluatorclasscachingnamedefaultclusternonprodsouthfieldconsumercdcgroupstuniquecsmipdmaapshowalltrue Is there a limitation on number of clusters which burrow can monitor This PR adds the ability to connect to Kafka via SASLSCRAM or It adds an entry in the SASL Profile configuration called keymechanism value typestring requiredno default valueempty Which accepts either values SCRAMSHA SCRAMSHA Partially addresses According to git history a groupblacklist option is add for the inmemory Storage around years ago My testing shows that this is the only way to actually remove a consumer group from the returned list of consumer groups when calling v kafkalocalconsumer Following is my suggestion for change of the Configurationmd file in the Wiki as far as I understand one cannot make a PR for a Wiki page git diff diff git aConfigurationmd bConfigurationmd index f cf fa aConfigurationmd bConfigurationmd expiregroup workers mindistance groupwhitelist groupblacklist notthisgroup Key Value Type Required Default Value Description groupwhitelist expiregroup integer no The number of seconds after which a group will be purged if it has not committed offsets workers integer no The number of worker goroutines to start up This number can be increased to provide more parallelism in the storage module mindistance integer no Coalesce offset commits that are more frequent than this number of seconds Used with the intervals configuration this can be used to set a minimum time for the offset window offsets x s s minimum window groupwhitelist string regex no empty If specified ignore data for groups that do not match the regular expression groupwhitelist string regex no empty If specified ignore data for groups that DO NOT match the regular expression groupblacklist string regex no empty If specified ignore data for groups that MATCH the regular expression This is processed after the whitelist if specified This PR adds the ability to configure an allowed lag and thereby fixes or better works around problems with Streams transaction feature With ExactlyOnce Semantics enabled Kafka Streams producers create control messages that are seen as a constant lag of one by Kafkas CLI and also by Burrow As a result Burrow always returns stopped state for those topicspartitions making it useless for our current setup with EOS enabled Addresses burrow consumer group status is not updated in time for example Im manually delete the consumer group named test after i did that burrow still alert the test in state error but there is no consumer group test exist only restart burrow can make consumer group status back to normal my questions is why burrow can not automatic detect the consumer group status burrow version is kafka version is Hi im using the latest version of Burrow with a Kafka Cluster V It is working well but I get those Warning messages levelwarnts msgfailed to decodetypemodulecoordinatorconsumerclasskafkanamekafkaconsumeroffsettopicsmfoffsetpartition offsetoffset reasonkey versionversion I think there is something wrong with the key version see attached picture Maybe it cant decode it because Kafka version is not supported Am I right Thank you Is it possible to use SASLPLAINTEXT Kerberos with Burrow and if yes how to configure the jaas file path I get metrics for all of the topics i see all of the topic names in the metrics list but for some reason not for all of the consumer groups 