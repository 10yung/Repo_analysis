Hello all Planning V of Typedjs currently and I could use your help Im setting up a project board at the moment but this is my first time using it so Im figuring out how it works Heres what kicked off my desire to update This PR was added on May Nearly years ago I honestly dont remember why it was never merged and for that I want to apologize to tameemsafi Furthermore I checked out Tameems terrific library I absolutely love how he achieved the effect his code is very pleasant to read and its performance is miles ahead of Typedjs His work is incredibly inspiring and I suggest anyone looking to learn about authoring a library go check it out Awesome work tameemsafi About the rewrite One huge thing TypewriterJS has that Typedjs doesnt usage of requestAnimationFrame instead of setTimeout or setInterval This newish feature couldnt be more perfect for a typing effect and Im excited to implement it Of course since Typedjs V will be heavily inspired by TypewriterJS I plan on crediting Tameem wherever possible and linking his library in my main README Tameem if youre reading this please reach out and let me know your thoughts memattboldtcom Why have both libraries if they do the same thing Well competition is always good And I consider it a form of competition because while this software is open source it doesnt mean our work doesnt provide value to us the authors in other ways Contributions to OSS looks good on a resume and Id be lying if I said Typedjs never helped me land a job As such I think mine and other similar libraries must continue to coexist for the betterment of everyone Because Typedjs has so much traffic and stars I understand it will be chosen for that fact alone in many cases vs alternatives Because of this Im adamant about including Tameems library at the very top of my README in addition to anything we discuss TODO Implement requestAnimationFrame and a queuebased event system Migrate to TypeScript Add a test suite considering Jest or Mocha Heavy focus on better docs I suspect TypeScript will aid in this effort Builtin support for React Vue and more Orlandster has done some great work on this in his wrapper library If youre able to Orlando Ive love for you to work on the Vue implementation of V Builtin accessibility The SEO friendly feature of typed sort of touches on this area but not nearly enough I suspect screen reader users experiencing Typedjs are confused by how the content is structured and I aim to solve that by automatically generating more accessible text content as well as providing best practice examples in the docs Reorganize more advanced features I mentioned in that I dont like having too much advanced syntax inside the content itself Using just isnt very intuitive and I believe this can be replaced by the chain structure Callback hell Typedjs has too many unique callback options Instead callbacks should be implemented as part of the chain Add highlighttoerase feature If you made it this far thanks for sticking around Please reply to this thread with any questions or ideas IMPORTANT If applicable please use the following format to create a new issue If your issue is not created using the format below it will be closed Description When I try to use the library I get an console log that says TypeError tel is null Are there any fixes this Demo This is my javascript code var options strings iFirsti sentence amp a second sentence typeSpeed var typed new TypedjsTypingEffect options and I load the scripts in this order script srctypedjs lib typedminjsscript script srcjavascriptjsscript Steps to Reproduce First Step Second Step and so on Expected behavior What you expect to happen The object to log to the console Actual behavior What actually happens Error message Reproduces how often What percentage of the time does it reproduce Everytime Additional Information Any additional information configuration or data that might be necessary to reproduce the issue html b idtypedstring b b idtypedstrings styledisplaynone bstring b bstring b b The workaround is to empty it via JS before loading your plugin script documentaddEventListenerDOMContentLoaded function var typed new Typedtyped stringsElementtypedstrings typeSpeed script or maybe I am missing something but before I added the above code it wasnt working I still get this error TypeError Cannot read property tagName of null at tvalue typedjs at new t typedjs at indexhtml value typedjs t typedjs anonymous indexhtml Hi mattboldt Im a trying to animate two divs that use stringElements on the page that share the same class so far only the first occurence gets animated Heres a jsbin to show you what im trying to do What would be the cleaner way I do want to be able to use stringElements to keep the SEO benefit Thanks a lot for letting me know what would be the most elegant solution Bruno Requirements Filling out this template is required Have you viewed your changes locally on the demos page located on If necessary have you added a new demo to the indexhtml list of demos If its an improvement or small addition have you added it to an existing demo on the demos page If applicable have you created a fork of the following JSFiddle with your branchs code and your new feature showcased To include your branchs version of Typedjs simply add this JavaScript url as a dependency in JSFiddle and remove the default GITHUB USERNAMEtypedjsYOUR BRANCH NAMElibtypedminjs Description of the Change We must be able to understand the design of your change from this description If we cant get a good idea of what the code will be doing from the description here the pull request may be closed at the maintainers discretion Benefits What benefits will be realized by the code change Issues Enter any applicable Issues here Importing doesnt work IMPORTANT If applicable please use the following format to create a new issue If your issue is not created using the format below it will be closed Description cant type and in an input field Demo JSFiddle var typed new Typedtyped strings less than lt failnot a single char less than failcut off less than success but bad doc and bad hack and amp failnot a single char and failcut off and success but bad solution and amp success but bad solution typeSpeed backSpeed attr placeholder bindInputFocusEvents true loop true Expected behavior The and should be typed but the htmlparser cut it off Actual behavior The string stop typing before the and before the amp Additional Information There is an undocumented workaround using backtick see the JSFiddle but I would prefer a way to bypass the htmlparser when dealing with input fields Since altering the string for use with typedjs prevent me to use it normally backticking the whole string would not help as everything inside the backtick is typed at once There was no problem with version IMPORTANT If applicable please use the following format to create a new issue If your issue is not created using the format below it will be closed Description Every now and then when the shuffle option is enabled and a string has just been typed the string gets replaced with the next string and that string gets removed and a new string is written in its place Steps to Reproduce Create an instance of typedjs Enable the shuffle option Wait for it to happen Expected behavior I expect the next string to appear after the typing being emulated by typedjs Actual behavior The next string instantly appears gets removed through backspaces and then a new string is written Reproduces how often I can not calculate how often this happens due to its random nature Description When using loop true and smartBackspace true the loop gets stuck when all the strings have been displayed at least once If smartBackspace true is removed the loop work as expected Demo Steps to Reproduce Let the loop run through every word at least once Expected behavior Loop to run indefinitely Actual behavior Loops stops when every word has been displayed and looping begins Reproduces how often Every run Additional Information Code below includes every word used var typed new Typedtyped strings gracious nice beautiful amazing dazzling astonishing astounding jarring jawdropping stunning delicious charming fine today gorgeous stunning marvelous showCursor false shuffle true smartBackspace true startDelay loop true preStringTyped arrayPos self let random Mathfloor Mathrandom selftypeSpeed random consolelograndom selfbackSpeed random 