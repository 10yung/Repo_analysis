Thinking about it IIUC what you want is in ORTspeak to skip the scan of the project source code and only scan the source code of all dependency packages Which is something that is currently not supported but which could probably be easily added as part of the work in my branch to specify a different scanner for projects You could simply set that scanner to none then Originally posted by sschuberth in Relatesto Signedoffby Adam Bukolt adambukoltherecom Several properties and functions related to handling OrtIssues still used the term error instead of issue mainly in code that was created before the Error class was renamed to OrtIssue in f f b Change that to consistently use issue and make sure that old OrtResults can still be deserialized Currently for small code changes the majority of time spent during CI builds is not in building the code but in setting up all prerequisites like package managers One idea to improve this is by modelling the installation of prerequisites also as Gradle tasks which are only executed if needed These tasks would be very environmentspecific as different commands would need to be run on Travis vs AppVeyor but probably the task could be crafted in such a way that also a local Linux Windows user would be able to use them to conveniently install prerequisites In a related discussion in the Gradle forum wolfs suggests to use the upcoming build services in Gradle for that purpose As we are only interested in metadata dependency information in the analyzer step there is no need to download big JARs and not doing so should result in significant performance results Hello I build ORT locally from the master branch I run ORT on windows with git bash in admin mode The project analyzed is a node project The reporter generate an about Mo scanreportwebapphtml file With firefox the report is successfuly rendered but its a bit slow about m s With chrome n the report cant be rendered It stucks at of the processing result data Regards Hello I build ORT locally from the master branch I run ORT on windows with git bash in admin mode The project analyzed is a node project Note the fix for nonexisting github repo works fine no extra curation needed After the scanner phase Ive got errors like source ScanCode message Could not scan NPMxtuclong ScanException Running D Users jdupont AppData Local Temp ort ScanCode scancodetoolkit scancodebat copyright license ignore ortyml info striproot timeout ignore HERENOTICE ignore METAINFDEPENDENCIES processes licensediag verbose C workspace POCs MOBORT mygatewayweb clientreports downloads NPM xtuc long jsonpp C workspace POCs MOBORT mygatewayweb clientreports nativescanresults NPM xtuc long scanresultsScanCodejson in C workspace POCs MOBORT ossreviewtoolkit failed with exit code nUsage scancode OPTIONS input OUTPUT FORMAT n n OPTIONs n nTry scancode help for help on options and arguments n n n nError Invalid value for input Path C workspace POCs MOBORT mygatewayweb clientreports downloads NPM xtuc long does not exist n n severity ERROR It seems to be a problem of encodedecode url The directory that is searched is C workspace POCs MOBORT mygatewayweb clientreports downloads NPM xtuc long But the directory that was created in windows file system is C workspace POCs MOBORT mygatewayweb clientreports downloads NPM xtuc long Regards To address an upcoming deprecation flagged by the Gradle build scan While at it also use the name to explain for which dependency the repository is required for Signedoffby Sebastian Schuberth sebastianschuberthboschsicom Please have a look at the individual commit messages for the details Change includes Aligning reasons and comments for generated ortyml with docsexamplesortyml Improve reasons to better match what the scope contains Signedoffby Thomas Steenbergen thomassteenbergenherecom