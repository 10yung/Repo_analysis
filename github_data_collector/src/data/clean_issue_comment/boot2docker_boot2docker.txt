Hey guys and girls ive had a weird disk IO performance drop with bound volumes since update to anything larger than I have successfully replicated the issue numerous times on at least comupters in my team We all use macos catalinas or mojaves with fully updated virtualboxes multiple different processors and years of computers I have mitigated the issue by forcing everyone to use but am really interested in what exact change could have caused this drop Especially since i went through the changelog and saw nothing in particular Currently i am testing all the releases in between to try and pinpoint exactly which one introduced this huge drop Once i pinpoint the release i would like to test out individual commits How can i compile the iso locally in order to checkout a commit and compile the iso and get the vm running If anyone has any details that might help me in researching further please UPDATE Ive tested all mentioned versions with the same synthetic test yarn build on node latest image and the issue clearly appears only after update to tianon Since all commits come from you do you have any viable idea what might have caused this slowdown By looking at activity monitor i am not sure what is the bottleneck Yes the slowness comes from slow IO speeds but it might be that the CPU is throttling everything which causes slow io I am saying this because CPU is dying on newer b d versions If not could you please explain to me how to build the iso locally so that i can test both changes individually Dockerfiletxt Result for most recent released versions v failed v failed v failed v failed v failed v pass v ce pass When build Docker images with more than plus layers the build will fail exactly at step as shown below Step RUN touch foobar error creating overlay mount to mntsda varlibdockeroverlay fc f b bc a c c db ecb df e c c bc a initmerged no such file or directory make Makefile all Error To reproduce the bug docker build nocache t testoverlaymountalpine f Dockerfiletxt i noticed that the ntpd process gets started with a hardcoded list of ntpservers NTPSERVER boot dockerpoolntporg boot dockerpoolntporg boot dockerpoolntporg boot dockerpoolntporg nowadays many companies block outgoing NTPtraffic to prevent DDoS attacks which makes this suboptimal eventually resulting in hangs until the ntpd times out i would have expected to be able to override the NTPSERVER variable but changes to varlibboot dockerprofile seem to have no effect that files seems to be only used by the docker process obviously the NTPSERVER value is meant to be settable and the list of ntpservers is only a fallback but i dont see a way to inject any values For better integration into KVMQEMU the guest agent is started analogously to the VMware HyperV XEN and Parallels agents NOTE For tracking purposes be aware that I also copypasted this same issue in two other palces because Im not sure of the appropriate place given the problem Envrionment Info Windows Windows PowerShell Docker For Windows cewin boot dockeriso that says its using Docker version ce build fc From PowerShell PS C Users pdadmin dockermachine create d hyperv hypervvirtualswitch ToInternal DockerHostA Creating CA C Users pdadmin docker machine certs capem Creating client certificate C Users pdadmin docker machine certs certpem Running precreate checks DockerHostA Image cache directory does not exist creating it at C Users pdadmin docker machine cache DockerHostA No default Boot Docker ISO found locally downloading the latest release DockerHostA Latest release for githubcomboot dockerboot docker is v ce DockerHostA Downloading C Users pdadmin docker machine cache boot dockeriso from DockerHostA Creating machine DockerHostA Copying C Users pdadmin docker machine cache boot dockeriso to C Users pdadmin docker machine machines DockerHostA boot dockeriso DockerHostA Creating SSH key DockerHostA Creating VM DockerHostA Using switch ToInternal DockerHostA Creating VHD DockerHostA Starting VM DockerHostA Waiting for host to start DockerMachine hangs here Using HyperV VM console ie vmconnectexe I can see that during boot boot docker mentions that it cant find eth or eth not sure why it says anything about eth theres only one Adapter attached to the VM so there shoul only be an eth as far as I understand While dockermachine continues to hang after seconds here is the output of GetVM HyperV cmdlet PS C Users pdadmin testA GetVM Name DockerHostA PS C Users pdadmin testA fl ParentCheckpointId a c ac ecfb c cf b db ParentCheckpointName Automatic Checkpoint DockerHostA PM VMName DockerHostA VMId abb e bb a eb b d dfc a b CheckpointFileLocation C Users pdadmin docker machine machines DockerHostA DockerHostA ConfigurationLocation C Users pdadmin docker machine machines DockerHostA DockerHostA SmartPagingFileInUse False SmartPagingFilePath C Users pdadmin docker machine machines DockerHostA DockerHostA SnapshotFileLocation C Users pdadmin docker machine machines DockerHostA DockerHostA AutomaticStartAction StartIfRunning AutomaticStartDelay AutomaticStopAction Save AutomaticCriticalErrorAction Pause AutomaticCriticalErrorActionTimeout AutomaticCheckpointsEnabled True CPUUsage MemoryAssigned MemoryDemand MemoryStatus OK NumaAligned False NumaNodesCount NumaSocketCount Heartbeat OkApplicationsUnknown IntegrationServicesState IntegrationServicesVersion Uptime OperationalStatus Ok PrimaryOperationalStatus Ok SecondaryOperationalStatus StatusDescriptions Operating normally PrimaryStatusDescription Operating normally SecondaryStatusDescription Status Operating normally ReplicationHealth NotApplicable ReplicationMode None ReplicationState Disabled ResourceMeteringEnabled False CheckpointType Standard EnhancedSessionTransportType VMBus Groups Version VirtualMachineType RealizedVirtualMachine VirtualMachineSubType Generation Notes State Running ComPort VMComPort Name COM VMName DockerHostA Id Microsoft ABB E BB A EB B D DFC A B E A F A B A A A ED VMId abb e bb a eb b d dfc a b ComPort VMComPort Name COM VMName DockerHostA Id Microsoft ABB E BB A EB B D DFC A B E A F A B A A A ED VMId abb e bb a eb b d dfc a b DVDDrives DVD Drive on IDE controller number at location FibreChannelHostBusAdapters FloppyDrive VMFloppyDiskDrive Name Diskette Drive VMName DockerHostA Id Microsoft ABB E BB A EB B D DFC A B F D B E AF F CB D VMId abb e bb a eb b d dfc a b HardDrives Hard Drive on IDE controller number at location RemoteFxAdapter VMIntegrationService Guest Service Interface Heartbeat KeyValue Pair Exchange Shutdown DynamicMemoryEnabled True MemoryMaximum MemoryMinimum MemoryStartup ProcessorCount BatteryPassthroughEnabled False Generation IsClustered False ParentSnapshotId a c ac ecfb c cf b db ParentSnapshotName Automatic Checkpoint DockerHostA PM Path C Users pdadmin docker machine machines DockerHostA DockerHostA SizeOfSystemFiles GuestControlledCacheTypes False LowMemoryMappedIoSpace HighMemoryMappedIoSpace LockOnDisconnect Off CreationTime PM Id abb e bb a eb b d dfc a b Name DockerHostA NetworkAdapters Network Adapter CimSession CimSession ComputerName WIN LATESTA IsDeleted False specifically note testANetworkAdaptersStatusDescription and testANetworkAdaptersStatus PS C Users pdadmin testANetworkAdapters fl VMCheckpointId VMCheckpointName VmmqQueuePairs VmmqQueuePairsRequested ClusterMonitored True MacAddress D D A DynamicMacAddressEnabled True InterruptModeration True AllowPacketDirect False IsLegacy False IsSynthetic True IPAddresses DeviceNaming Off IovWeight IovQueuePairsRequested IovInterruptModeration Default PacketDirectNumProcs PacketDirectModerationCount PacketDirectModerationInterval IovQueuePairsAssigned IovUsage VirtualFunction MandatoryFeatureId MandatoryFeatureName PoolName Connected True SwitchName ToInternal AdapterId B CF F B F F F B DD F TestReplicaPoolName TestReplicaSwitchName StatusDescription Degraded The protocol version of the component installed in the virtual machine does not match the version expected by the hosting system Status Degraded ProtocolVersion IsManagementOs False IsExternalAdapter False Id Microsoft ABB E BB A EB B D DFC A B B CF F B F F F B DD F SwitchId f cc d c f b b d b AclList ExtendedAclList IsolationSetting VMNetworkAdapterIsolationSetting RoutingDomainList VlanSetting VMNetworkAdapterVlanSetting BandwidthSetting CurrentIsolationMode Vlan MacAddressSpoofing Off DhcpGuard Off RouterGuard Off PortMirroringMode None IeeePriorityTag Off VirtualSubnetId DynamicIPAddressLimit StormLimit AllowTeaming Off FixSpeed G Off VMQWeight IPsecOffloadMaxSA VrssEnabled False VrssEnabledRequested True VmmqEnabled False VmmqEnabledRequested False VrssMaxQueuePairs VrssMaxQueuePairsRequested VrssMinQueuePairs VrssMinQueuePairsRequested VrssQueueSchedulingMode Dynamic VrssQueueSchedulingModeRequested Dynamic VrssExcludePrimaryProcessor False VrssExcludePrimaryProcessorRequested False VrssIndependentHostSpreading False VrssIndependentHostSpreadingRequested False VrssVmbusChannelAffinityPolicy Strong VrssVmbusChannelAffinityPolicyRequested Strong VmqUsage IPsecOffloadSAUsage VFDataPathActive False VMQueue BandwidthPercentage IsTemplate False Name Network Adapter VMId abb e bb a eb b d dfc a b VMName DockerHostA VMSnapshotId VMSnapshotName CimSession CimSession ComputerName WIN LATESTA IsDeleted False In this situation I either need to kill the dockermachine process or wait for it to timeout Please note that this problem ie boot docker not recognizing the Network Adapter as a device happens about of the time However about of the time it actually works as expected If I am lucky enough to actually establish a Docker Machine after a baremetal host reboot or really in any situation where the Docker Machine VM is going from a non Running state to a Running state there is a similar probability that the same thing will happen ie boot docker not recognizing the Network Adapter as a device After several Docker Machine VM reboots it eventually works as expected However this is very inconsistent sometimes it takes VM reboot sometimes it takes Doesnt matter if you use dockermachine restart DockerHostA or RestartVM Name DockerHostA This was also tested with similar results with the latest v cerc boot dockeriso Mostly for fun I created a X version of the boot dockeriso For more details please see boot dockerx desktopmd The ISO is available from here boot dockerx iso M I am using dockermachines as nodes in our Jenkins CI I noticed that the machines time keeps drifting After digging into your code I noticed that the rcdntpd sets the Do Not Demonize flag n After a week or so of monitoring the time sync seems to be working Was there a reason for this flag If not is this a possible fix Hi The kernel supports Open vSwitch and VXLAN tunnels as seen in the kernelconfig CONFIGOPENVSWITCH and CONFIGOPENVSWITCHVXLAN Unfortunately it doesnt support GRE tunnels It would be great to add it by adding CONFIGOPENVSWITCHGRE to the kernelconfig Thanks and btw thanks for boot docker Im using boot docker with dockermachine create on ESXi When creating a VM using DHCP everything works well however udhcpc registers itself as boot docker hostname instead of the real hostname I see that dhcpsh is correctly sending the request sbinudhcpc b i DEVICE x hostnamebinhostname p varrunudhcpcDEVICEpid devnull So I guess its invoked before the hostname is set Could you give me advice on how to change that in boot docker iso speed up travisci build speed with cache x faster than no docker image cache after first buildthen enable NOTCACHEIMGAFTERBUILDtrue will faster more when NOTLOADCACHEBEFOREBUILDtrue will using load cache image before build and release iso to github with tag push if githubapikey and DEPLOYISOTOGITHUBtrue 