The next ruby version wont have rexml as a default gem so it will need to be explicitly added as a dependency See Run the following s END div classnavbar span stylewhitespacenowrap markdown span classparenta hreftechTechnical Detailsaspan span nbsp nbsp nbsp div END h KramdownDocumentnew s autoids false entityoutput numeric tohtml puts h The output is div classnavbar span stylewhitespacenowrap span classparenta hreftechTechnical Detailsaspanspan ltspan gt nbsp nbsp nbsp div The bug is the extra ltspan gt inserted into the text I can see a way of working around this and I probably will do so but this is new behavior that is affecting a longstanding web site of mine though I cant specify the kramdown update in which the problem started sorry so perhaps it counts as a genuine bug kramdown libkramdowncompatibilityrb warning method redefined discarding old kramdown libkramdownconverterkramdownrb warning previous definition of ialforelement was here This is my config markdown kramdown highlighter rouge kramdown input GFM syntaxhighlighteropts defaultlang shell hardwrap true cssclass syntax And after I set the default language to SHELL therere problems with line breaks It doesnt interpret RETURN ENTER as link break For instance normally a shell script should look like this for n in do if n then continue fi echo n done However it looks like this in kramdowns renderer for n in do if n then continue fi echo n done I checked my other settings and once I changed the default lang to almost ANY OTHER language this problem disappears Bu every time with SHELL codes got all messed up Thanks Just a headsup for your MathJax support I tried to add some math to my Jekyll Kramdown blog and couldnt figure out why MathJax wasnt rendering Kramdowns emitted script typemathtex tags Turns out MathJax released v a couple weeks ago and all their getting started installation docs are now pointing to this newer version which I dutifully followed so am using on my site It further turns out this version doesnt render the mathtex script tags quietly mentioned in the last bullet point in the upgrading from v to v docs here That bullet point as well as this example in their demos repo provide a configuration snippet that can be slightly modified to make MathJax v load Kramdowns script typemathtex tags javascript script MathJax options renderActions find function doc for const node of documentquerySelectorAllscript type mathtex const display nodetypematch modedisplay const math new docoptionsMathItemnodetextContent docinputJax display const text documentcreateTextNode nodeparentNodereplaceChildtext node mathstart node text delim n mathend node text delim n docmathpushmath script note I had to replace the texttex in their snippet with mathtex With that configuration snippet MathJax v is now working with Kramdown Resolves cc codingthat An underscorewrapped phrase immediately after a renders plainly instead of in italics Eg itby designcannot have sideeffects renders like this But if you replace the latter with mdash it works as intended So itby design mdashcannot have sideeffects renders like this Given that I have the following configuration yaml syntaxhighlighteropts formatter HTMLTable However when I try to convert a codeblock I get the following error private method format called for Hash x f On bisecting the issue occurs due to the following The reason being that RougeFormattersHTMLTable should be constructed by passing another formatter instance ruby RougeFormattersHTMLTablenewRougeFormattersHTMLnew opts You can reproduce the bug like this ruby html HTML div img srcsrcpng altalt div HTML markdown KramdownDocumentnewhtml input htmltokramdown div n alt srcpng ndiv html KramdownDocumentnewmarkdowntohtml div n alt srcpng ndiv n n The bug is that the call to tokramdown converted the IMG tag but did not add markdown to the DIV tag As of Kramdown the markdown attribute is added if the IMG tag is wrapped in a paragraph and you can see that when the markdown attribute is present the HTML roundtrips successfully ruby html HTML div pimg srcsrcpng altalt p div HTML markdown KramdownDocumentnewhtml input htmltokramdown div markdown n alt srcpng ndiv html KramdownDocumentnewmarkdowntohtml div n pimg src srcpng alt alt p n ndiv This is a preliminary attempt to resolve gettalong If you feel this route is acceptable I will try and add tests for the API