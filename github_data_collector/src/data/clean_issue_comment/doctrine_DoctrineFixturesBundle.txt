 on a way from InputInterfacegetOption to getFixtures consoleERROR Error thrown while running command doctrinefixturesload emplatform append groupplatform Message Argument passed to Doctrine Bundle FixturesBundle Loader SymfonyFixturesLoadergetFixtures must be of the type array string given called in optprojectbackendvendordoctrinedoctrinefixturesbundleCommandLoadDataFixturesDoctrineCommandphp on line exception object TypeErrorcode Argument passed to Doctrine Bundle FixturesBundle Loader SymfonyFixturesLoadergetFixtures must be of the type array string given called in optprojectbackendvendordoctrinedoctrinefixturesbundleCommandLoadDataFixturesDoctrineCommandphp on line at optprojectbackendvendordoctrinedoctrinefixturesbundleLoaderSymfonyFixturesLoaderphp commanddoctrinefixturesload emplatform append groupplatformmessageArgument passed to Doctrine Bundle FixturesBundle Loader SymfonyFixturesLoadergetFixtures must be of the type array string given called in optprojectbackendvendordoctrinedoctrinefixturesbundleCommandLoadDataFixturesDoctrineCommandphp on line The main inconsistency here is actually in lines groups inputgetOptiongroup fixtures thisfixturesLoadergetFixturesgroups inputgetOption returns mixed However getFixtures method allows to pass groups only as an array public function getFixturesarray groups array It is a quite simple fix i will prepare a pull request for that in a minute Not sure if I am going about this the proper way but in any case something seems to be amiss On fixtures I am attempting to access a random category entity to add to an Ad entity First I attempted to do that directly on fixtures but as it did not work I put the method on a regular controller and injected the controller as service on fixtures just to check it While the method works as expected on the controller it returns NULL on fixtures The Category entity is a GEDMO tree This is what I believe to be the relevant portions of AppFixtures use App Controller DefaultController private em private defaultController public function construct UserPasswordEncoderInterface passwordEncoder TokenGenerator tokenGenerator EntityManagerInterface entityManager DefaultController defaultController thispasswordEncoder passwordEncoder thisfaker Faker Factorycreate thistokenGenerator tokenGenerator thisem entityManager thisdefaultController defaultController Load data fixtures with the passed EntityManager param ObjectManager manager public function loadObjectManager manager thisloadUsersmanager thisloadAdsmanager private const CATEGORIES house cleaning garden cleaning sports coach tax return english teacher spanish teacher french teacher chinese teacher car pooling public function loadAdsObjectManager manager for i i i ad new Ad adsetDescriptionthisfakerrealText adsetCreatedAtthisfakerdateTimeThisYear userReference thisgetRandomUserReferencead adsetUseruserReference title selfCATEGORIES arrayrandselfCATEGORIES vardumptitle outputs a random category title category thisdefaultControllergetRandomCategorytitle vardumpcategorygetTitle outputs error Call to a member function on null adsetCategorycategory expects entity adsetIsActivetrue thissetReferenceadi ad managerpersistad managerflush On App DefaultController things works as expected an it outputs the JSON with the correct info public function index title selfCATEGORIES arrayrandselfCATEGORIES cat thisgetRandomCategorytitle outputs something like categoryId categoryTitlegarden cleaning return thisjsonarray categoryId catgetId categoryTitle catgetTitle public function getRandomCategorytitle thisrepo thisemgetRepositoryCategoryclass return thisrepofindOneByTitletitle I have a service like yaml App Doctrine TableSchema arguments prefix envstringDATABASEPREFIX tags name doctrineeventsubscriber connection default This service works well width the command doctrineschemacreate Should fix Hi When starting to use the groups I needed to load all fixtures BUT not the one Ive put in a group that are specific fixtures that are used for some tests For instance when using the serialization groups in JMS Serializer all objects that have no groups are put in a group Default See It would work like this doctrinefixturesload groupDefault load all fixtures that have no group doctrinefixturesload groupDefault groupUser load all fixtures that have no group and the User group doctrinefixturesload groupUser load only the User group WDYT The ORMPurger has a excluded option that allows you to ignore certain tables when purging The DoctrineFixturesBundle however didnt implement this feature while it does seem very useful So I added a excludetable option that allows users to exclude certain tables from purging I also added the option to the documentation Feel free to give feedback if something seems off I have mysql container that when i run php binconsole doctrinefixturesload it timed outs I know that my connection is true because i have tested GET and POST through post man and although it takes a while the first time to connect it finally connects and the next query is faster Eg you want to use a fixture like a factory and define its loaded stuff by arguments given You cant register the same class multiple times because getclass is used instead of service id Could be fixed in Doctrine Bundle FixturesBundle Loader SymfonyFixturesLoader Line by using service id as array key instead of getclass Should I open a PR for this