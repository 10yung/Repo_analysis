See I recently stumbled upon a weird interaction between this plugin and refined The problem is referenced in a comment of this issue To put it simply when splain is active the macro expansion from refined start failing with a weird ClassCastException when used in the REPL but everything works fine in regular compiation To reproduce the problem one can define the following buildsbt scala scalaVersion in ThisBuild libraryDependencies eutimepit refined addCompilerPluginiotryp splain cross CrossVersionpatch and past the following lines in the console scala import eutimepitrefined api auto char generic collection val str String Refined Forall UpperCase FOO Great plugin it has helped me a load Unfortunately it has stopped working since I introduced v of the paradise plugin Scala version Config Causes macro expansion to fail with macro annotation could not be expanded the most common reason for that is that you need to enable the macro paradise plugin another possibility is that you try to use macro annotation in the same compilation run that defines it settingsaddCompilerPluginorgscalameta paradise M cross CrossVersionfull settingsaddCompilerPluginiotryp splain cross CrossVersionpatch Config Macro expansion works but Im back to the standard implicit failure output when something cannot be summoned settingsaddCompilerPluginiotryp splain cross CrossVersionpatch settingsaddCompilerPluginorgscalameta paradise M cross CrossVersionfull Ive found that I got compilation error in REPR when the splain plugin is enabled scala import shapeless melimansky catsinstancesall import shapeless import melimansky import catsinstancesall scala case class Foon Int case class Bars String f Foo defined class Foo defined class Bar scala MapReader Bar readMaps b n console error implicit error I ev MapReader Bar MapReadergenericReader invalid because I mapReader MapReader R Genericmaterialize invalid because type parameters werent correctly instantiated outside of the implicit tree inferred type arguments shapeless Stringshapeless FooshapelessHNil Nothing do not conform to method materializeCoproducts type parameter bounds V shapelessCoproductR shapelessCoproduct MapReader Bar readMaps b n The same code without plugin works fine scala import shapeless melimansky import shapeless import melimansky scala import shapeless melimansky catsinstancesall import shapeless import melimansky import catsinstancesall scala case class Foon Int case class Bars String f Foo defined class Foo defined class Bar scala MapReader Bar readMaps b n res Bar BarbFoo The code is available in this gist It looks like the problem is reproducible only in REPR at least the tests are compiled and passed successfully With Splain I m getting an error saying that an implicit I reference doesn t exist My guess is that this is because the implicit in question is generated by Simulacrum s typeclass macro and Splain is running before it generates the implicit