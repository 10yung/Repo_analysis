Describe the bug scroll to the top doesnt work correctly To Reproduce create a tableView including too many items scroll to the middle of tableView and then call this if let navigationController selfnavigationController as ScrollingNavigationController navigationControllershowNavbaranimated true duration scrollToTop true It scrolls to top but not actually to top of tableView this pod makes navigation translucent automatically but if you want to use it not translucent your collection views section header will be under navigationBar Describe the bug Table view buttons and title disappears after going back from full screen presented controller To Reproduce Start observing a collection view or table view scroll Scroll to hide the nav bar Present a modal view controller with full screen Stop observing in viewWillDissapear with showingNavBar false Dismiss the presented view controller The original controller has the nav bar displayed and all its items title buttons are transparent You can also reproduce it by adding this code to CollectionViewControllerswift in the demo app line replace commented line navigationControllerstopFollowingScrollView navigationControllerstopFollowingScrollViewshowingNavbar false line replace commented lines let storyBoard UIStoryboardname Main bundle nil let mainViewController storyBoardinstantiateViewControllerwithIdentifier TestViewController selfpresentmainViewController animated true completion nil let c UIViewController cmodalPresentationStyle fullScreen cviewbackgroundColor red presentc animated true TimerscheduledTimerwithTimeInterval repeats false in cdismissanimated true completion nil Expected behavior The nav bar should remain hidden or at least visible with all this items Describe the bug First of all I would like to thank you again for this library I use it in my apps and it makes the user experience much more pleasurable Ive been updating my app for iOS and Ive noticed an invalid behaviour of the Scrolling NavBar TabBar to be exact If the device is locked and the NavBarTabBar is collapsed then its position is invalid when the device wakes back up The problem can be seen in the gif Ive attached The problem appears when also presenting other VCs onto the VC that has the ScollingNavBar such as when presenting a SideMenu in my case To Reproduce Steps to reproduce the behavior Make the TabBar collapse Lock the devicesimulator Unlock the device the TabBar will be visible but in the collapsed state so once you scroll up the TabBar moves above its normal position Tested on iPhone Pro Max iOS Simulator which didnt seem to happen on iOS and below after fixing Expected behavior The TabBar should either be collapsed when waking or have the correct state so it does not go above its normal position Screenshots Heres the gif of the problem gif After taking a look at the source code I believe that the scrollWithDelta function gets called before the didBecomeActive function thus making the previousState param always expanded before the didBecomeActive checks its value All of these are in the ScrollingNavigationController class Ill do some more digging and report here if I find a fix any ideas are appreciated I scroll up but the collection view does not follow I use the storyboard to set up the everything and the constraints if let navigationController navigationController as ScrollingNavigationController navigationControllerfollowScrollViewcollectionView delay followers NavigationBarFollowerview exploreSearchBar direction scrollUp else printNot FOUND A short youtube video on the issue EDIT I had the wrong link up sorry The top constraint for the ui collection view to the bottom of the search bar Screen Shot at AM Fix for Motivation After investigating this and testing on iOSs I could not observe that recursive subview actually does anythingexcept causing flickering on iOS and Bar button itemsincluding those with custom views are handled by these swift navigationItemleftBarButtonItemtintColor navigationItemleftBarButtonItemtintColorwithAlphaComponentalpha navigationItemrightBarButtonItemtintColor navigationItemrightBarButtonItemtintColorwithAlphaComponentalpha navigationItemleftBarButtonItemsforEach tintColor tintColorwithAlphaComponentalpha navigationItemrightBarButtonItemsforEach tintColor tintColorwithAlphaComponentalpha Hide the left items navigationItemleftBarButtonItemcustomViewalpha alpha navigationItemleftBarButtonItemsforEach customViewalpha alpha Hide the right items navigationItemrightBarButtonItemcustomViewalpha alpha navigationItemrightBarButtonItemsforEach customViewalpha alpha Title and title view handled here swift navigationItemtitleViewalpha alpha if let titleColor navigationBartitleTextAttributes NSAttributedStringKeyforegroundColor as UIColor navigationBartitleTextAttributes NSAttributedStringKeyforegroundColor titleColorwithAlphaComponentalpha else let blackAlpha UIColorblackwithAlphaComponentalpha if navigationBartitleTextAttributes nil navigationBartitleTextAttributes NSAttributedStringKeyforegroundColor blackAlpha else navigationBartitleTextAttributes NSAttributedStringKeyforegroundColor blackAlpha Any other tintable stuff handled here swift navigationBartintColor navigationBartintColorwithAlphaComponentalpha It seems that all cases are covered already without the need to traverse navigation bar view hierarchy updating alpha for each of themwhich also has its problems Issue with recursive alpha As the documentation for UIViewalpha states transparency imparted by that alpha value affects all of the views contents including its subviews Which results in alpha value of a view being multiplied by alpha of its superviewand superview of superview and so on In this illustration you can see what Im trying to describe img width altScreenshot at src The first square consists of a white view with alpha and a black subview with alpha Square two and three are just for comparison the first one is a black view with alpha second one This shows that recursively applying alpha produces result different from desired in an attempt to set everything to the result ended up looking as if it has alpha of value And this is in controlled environment view hierarchy depth is limited to in this example this should be more pronounced when nesting is deeper the alpha of the deepest view should be desiredalpha depth Heres playground with this setup RecursiveAlphaPlaygroundplaygroundzip Describe the bug Some navigation bar elementsUIBarButtonItems and UINavigationitems with custom views flicker when navigation bar gets hidden interactively flickeringbug To Reproduce The issues manifests quite easily for example when setting up an item with custom image view swift let imageView UIImageViewimage UIImagenamed AppIcon navigationItemrightBarButtonItem UIBarButtonItemcustomView imageView or event just an empty view swift let titleView UIViewframe CGRectx y width height titleViewbackgroundColor white navigationItemtitleView titleView Heres a sample project that demonstrates this Samplezip Expected behavior Would be nice if it wouldnt flicker Describe the bug When presenting a SFSafariViewController on top of a view controller that uses a ScrollingNavigationController and returning to the app the web view content will be behind the navigation bar when scrolling to the top Upon inspecting various older version this behavior was not apparent in version and before To Reproduce Steps to reproduce the behavior Setup a view controller with a scrolling navigation bar and a web view Tap a link in the web content and open a safari view controller Return to the app and scroll to the top the content will be behind the navigation bar Expected behavior The web views content is not behind the navigation bar Screenshots Jul Simulator Screen Shot iPhone X at Is there any way to slide toolbar beneath the navigation bar while scrolling and collapse both of them Describe the bug If you scroll and slide your finger diagonally across the screen the NavigationBar will not recognize it So it will not collapse and will not expand Furthermore with scrolling small steps the NavigationBar will not collapse and expand Even if you include a UiTableview in a UiTableview and only scroll inside the UiNavigationBar becomes unnecessarily collapsed or expand This does not happen with a delegate method The error is the same in all three causes To Reproduce Steps to reproduce the behavior Open Demo or your own project Slide your finger diagonally across the screen to scroll the UiTableView or UiCollectionView or NavBar does not collapse or expand Expected behavior NavBar should collapse or expand Screenshots If you need a video so I can deliver it 