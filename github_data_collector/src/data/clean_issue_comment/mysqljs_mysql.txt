Recently AWS RDS had a required maintenance for updating certs After this maintenance was completed we are no longer able to connect to AWS RDS Aurora Postgres using the Amazon RDS Profile for SSL We are getting below error Error Cannot connect to Database Error unable to get local issuer certificate at TLSSocketanonymous optappnodemodulesmysqllibConnectionjs at TLSSocketemit eventsjs at TLSSocketEventEmitteremit domainjs at TLSSocketfinishInit tlswrapjs at Protocolenqueue optappnodemodulesmysqllibprotocolProtocoljs at Protocolhandshake optappnodemodulesmysqllibprotocolProtocoljs at PoolConnectionconnect optappnodemodulesmysqllibConnectionjs at PoolgetConnection optappnodemodulesmysqllibPooljs at optappnodemodulestypeormdrivermysqlMysqlDriverjs at new Promise anonymous at MysqlDrivercreatePool optappnodemodulestypeormdrivermysqlMysqlDriverjs at MysqlDriveranonymous optappnodemodulestypeormdrivermysqlMysqlDriverjs at step optappnodemodulestslibtslibjs at Objectnext optappnodemodulestslibtslibjs at optappnodemodulestslibtslibjs at new Promise anonymous at Objectawaiter optappnodemodulestslibtslibjs at MysqlDriverconnect optappnodemodulestypeormdrivermysqlMysqlDriverjs at Connectionanonymous optappnodemodulestypeormconnectionConnectionjs at step optappnodemodulestslibtslibjs at Objectnext optappnodemodulestslibtslibjs at optappnodemodulestslibtslibjs at new Promise anonymous at Objectawaiter optappnodemodulestslibtslibjs at Connectionconnect optappnodemodulestypeormconnectionConnectionjs at Objectanonymous optappnodemodulestypeormindexjs code HANDSHAKESSLERROR fatal true Since AWS RDS has updated their certs would the Amazon RDS Profile need to be updated in this repo Any help would be appreciated Mysqljs is used in Node Red mysqlnode We have here a discussion about the Error ERHANDSHAKEERROR MySQL conversion dump Frame bytes on wire bits bytes captured bits Linux cooked capture Internet Protocol Version Src Dst Transmission Control Protocol Src Port Dst Port Seq Ack Len MySQL Protocol Packet Length Packet Number Server Greeting Protocol Version log Thread ID Salt YBgpPO Server Capabilities xa c Server Language latin COLLATE latin swedishci Server Status x Extended Server Capabilities x Authentication Plugin Length Unused Salt FwWcGxI Frame bytes on wire bits bytes captured bits Linux cooked capture Internet Protocol Version Src Dst Transmission Control Protocol Src Port Dst Port Seq Ack Len MySQL Protocol Packet Length Packet Number Login Request Client Capabilities xf cf Extended Client Capabilities x MAX Packet Charset utf COLLATE utf generalci Username xxxxxxxxxxxx Password xxxxxxxxxxxxxxxx Schema test Frame bytes on wire bits bytes captured bits Linux cooked capture Internet Protocol Version Src Dst Transmission Control Protocol Src Port Dst Port Seq Ack Len MySQL Protocol Packet Length Packet Number EOF marker Expert Info WarningProtocol EOF Marker found while connection in wrong state EOF Marker found while connection in wrong state Severity level Warning Group Protocol Frame bytes on wire bits bytes captured bits Linux cooked capture Internet Protocol Version Src Dst Transmission Control Protocol Src Port Dst Port Seq Ack Len MySQL Protocol Packet Length Packet Number Request Command Unknown Command Unknown Payload e a f b Expert Info WarningProtocol Unknowninvalid command code Unknowninvalid command code Severity level Warning Group Protocol Frame bytes on wire bits bytes captured bits Linux cooked capture Internet Protocol Version Src Dst Transmission Control Protocol Src Port Dst Port Seq Ack Len MySQL Protocol Packet Length Packet Number Error Code SQL state S Error message Bad handshake We have tested serveral things without any success Are any additional information required which are not posted in the node red forum thread Thanks a lot Frank Amazon RDS has released their CA s and has given a formal warning to all RDS users to upgrade their CA s to the new one before February th All new RDS Instances will have the new CA s starting in November You can read about it here And their CA s are posted here This PR adds their new Global CA that works for all AWS Regions Im trying to do the following I have one big M rows table that I want to stream using stream Then for each of the rows I get I use the accountId field and then query other table by this accountId I want it to work in parallel while streaming So on each row I get from the stream I invoke a callback function in which I execute query like select from Table where id my id here Expected behaviour streaming goes in parallel with these queries in the callback So for example I can see my consolelog AFTER inner query is done Actual behaviour inner queries do not finish executing until streaming is fully finished all M rows I cant say at this point why and this is my main question in this issue Important note that streaming is done on Table and inner query is on Table so different tables Yes I DO use pool and get connection from the pool Also tried to open many connections in preparation step and just give it to my stream and queries like manual pooling but same results I connect to locally installed MySQL on Mac installed with brew install mysql If its not enough info I can provide a minimal reproduction repo since its important for me to understand and resolve this ps BTW Ive tried the same script on mysql package which claims to be APIcompatible Ive got exactly same behaviour as with mysql package Mirror change to this project to align with the nodemysql PR here I had previously set a a aa A aA as my password for MySQL This password works when logging in through MySQL Workbench but when I tried to connect using this password to my database it returned an error js code ERACCESSDENIEDERROR errno sqlMessage Access denied for user admin lightspeedsntccasbcglobalnet using password YES sqlState fatal true Connection code js var mysql requiremysql var connection mysqlcreateConnection host localhost user me password a a aa A aA database mydb connectionconnect connectionquerySELECT AS solution function error results fields if error throw error consolelogThe solution is results solution connectionend When I changed the password for the user to a a aa A aA the same connection code was able to successfully connect and return the expected result Hello I cannot use socketauth to identify via this library on my ARM device I read several issues about this problem without quite understanding wether this is a new feature or a bug and whether it is already implemened The most current issue seem to be which indicates this is a new feature request However using socketauth works fine on my desktop but not on my arm board despite running the same MariaDB Version MariaDB So I can only assume that my MariaDB behaves differently or the mysqljs lib behaves differently on the arm board The mariadb on arm is self build and has non standard build options However the native mysql utility still works with socketauth So my main question probably is What is the current status of this It seems to be assumed that socketauth is not yet implemented However this cannot be since it works on my desktop And maybe someone even has more specific help for me See below for more informations So the server sends its initial Handshake HandshakeInitializationPacket protocolVersion serverVersion MariaDB threadId scrambleBuff Buffer b d c d filler Buffer serverCapabilities serverLanguage serverStatus serverCapabilities scrambleLength filler Buffer scrambleBuff Buffer b a a f filler Buffer pluginData mysqlnativepassword protocol true The mysqljs client replies with hexdump c cf f f f rootwutdb ClientAuthenticationPacket clientFlags maxPacketSize charsetNumber filler undefined user root scrambleBuff Buffer database wutdb protocol true mysqljs options json user root socketPath tmpmysqldsock database wutdb debug true The answer of the native mysqlclient is a bit longer a a f f f d c f rootmysql e f f nativepassword f f c e c f c cosLinuxcli e f e d c d entnamelibmysq c f f f c lpid cli e f f e e entversion e f c f d platformar d c f d f e d d mprogramnamem a c ysql a Closes This issue come up in based on the code in the query object copies properties verbatim from the input object However this is an issue for anyone wanting to have computed properties that are not enumerable any get is not enumerable by default Happy if this will be denied its workaroundable but it would be nicer to copy just the properties you need eg sql values timeout Ive been wondering what the best way to achieve a bulk insert as part of a multi statement transaction is I have tables that I need to update all at once and here is the SQL query I use for that BEGIN INSERT INTO FABBCGH OCNO CUSTNAME STYLENO STYLDESC VALUES FATFACE w t g g on duplicate key update BCGUNIQ LASTINSERTIDBCGUNIQ SELECT LASTINSERTID INTO lastinsertedidvar INSERT INTO FABBCGDBCGUNIQ ITEMCODE ITEMDESC TTLROLLGEN VALUES lastinsertedidvar i ht t white on duplicate key update BCGLINE LASTINSERTIDBCGLINE TTLROLLGEN TTLROLLGEN VALUESTTLROLLGEN SELECT LASTINSERTID INTO lastinsertedidvar INSERT INTO FABBCGR BCGUNIQ BCGLINE ROLLNO RLENGTH RWIDTH PONO VALUES lastinsertedidvar lastinsertedidvar t h h lastinsertedidvar lastinsertedidvar t h h on duplicate key update BCGREVL LASTINSERTIDBCGREVL COMMIT As you can see I update the third table with two sets of values However the insertion of those values depends on the lastinsertedidvar and lastinsertedidvar variables I tried to do the same with this library in the following format Here nestedData is of the following format NJPO NJPO NJPO NJPO connectionquery BEGIN INSERT INTO FABBCGH OCNO CUSTNAME STYLENO STYLDESC VALUESmysqlescapeOC mysqlescapeCustName mysqlescapeStyleNo mysqlescapeStyleDesc on duplicate key update BCGUNIQ LASTINSERTIDBCGUNIQ SELECT LASTINSERTID INTO lastinsertedidvar INSERT INTO FABBCGDBCGUNIQ ITEMCODE ITEMDESC TTLROLLGEN VALUES lastinsertedidvar mysqlescapeItemNo mysqlescapeItemDesc mysqlescapetableDatalength on duplicate key update BCGLINE LASTINSERTIDBCGLINE TTLROLLGEN TTLROLLGEN VALUESTTLROLLGEN SELECT LASTINSERTID INTO lastinsertedidvar INSERT INTO FABBCGR BCGUNIQ BCGLINE ROLLNO RLENGTH RWIDTH PONO VALUES lastinsertedidvar lastinsertedidvar on duplicate key update BCGREVL LASTINSERTIDBCGREVL COMMIT nestedData functionerr results fields consolelogresults connectionrelease if err throw err However this doesnt work I get the following error when I run the above transaction You have an error in your SQL syntax check the manual that corresponds to your MySQL server version for the right syntax to use near on duplicate key update BCGREVL LASTINSERTIDBCGREVL Now presumably the library doesnt allow partially parameterized queries like the above for bulk inserts Im not sure I had to hack my way around it by doing the following connectionquery BEGIN INSERT INTO FABBCGH OCNO CUSTNAME STYLENO STYLDESC VALUES mysqlescapeOC mysqlescapeCustName mysqlescapeStyleNo mysqlescapeStyleDesc on duplicate key update BCGUNIQ LASTINSERTIDBCGUNIQ SELECT LASTINSERTID INTO lastinsertedidvar INSERT INTO FABBCGDBCGUNIQ ITEMCODE ITEMDESC TTLROLLGEN VALUES lastinsertedidvar mysqlescapeItemNo mysqlescapeItemDesc mysqlescapetableDatalength on duplicate key update BCGLINE LASTINSERTIDBCGLINE TTLROLLGEN TTLROLLGEN VALUESTTLROLLGEN SELECT LASTINSERTID INTO lastinsertedidvar SELECT lastinsertedidvar as index lastinsertedidvar as index COMMIT functionerr results fields if err throw err const index index resultsmapr if ArrayisArrayr return r filterr r flat const nestedData tableDatamaprollObj return index index rollObjroll rollObjlength PONumber connectionquery INSERT INTO FABBCGR BCGUNIQ BCGLINE ROLLNO RLENGTH PONO VALUES on duplicate key update BCGREVL LASTINSERTIDBCGREVL nestedData functionerr results field if err throw err connectionrelease Now I dont believe that this is the best way to achieve the results I want Is there a better way to do what I want