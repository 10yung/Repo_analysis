 havent seen this started yet trying to capture the lowhanging fruit this isnt finished I observe that throughput for a simple Hello world server drops by about x when the client does not use or support HTTP keepalive My core i manages about k reqs with keepalive and k reqs without I expected some TCP setupteardown overhead but according to perf record most CPU time can be traced back to the spawn call in srchttpservermodrs I see expensive system calls to clone mmap mprotect and so on all originating from impthreadcreate from the standard library A thread pool would probably help alleviate that Callers can pass in informative descriptions of what went wrong for better debugging The source code comment says If you wish to send a request body eg POST requests Im sorry to have to tell you that there is not good support for this yet However it can be done here is an example Please update the readme andor documentation with a description of these limitations The comments say that there are but its unclear what they are See While fromstr in methodrs currently mentions that it is case insensitive the code reads otherwise This probably should be fixed Additionally the rules for extension methods probably should match the token production given here and fail or return None otherwise Ill try my hand at this Im working on a library in Rust for use with the UPnP discovery protocol SSDP This uses HTTPish over UDP No longer requires a specific TcpStream in the BufferedStream so its possible to use your MemReaderFakeStream FYI these changes are working here What do you think of adding Rust to the Web Framework Benchmarks using rusthttp I actually started the work already but was curious whats your opinion 