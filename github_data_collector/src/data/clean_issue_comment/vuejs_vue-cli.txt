See and As far as I understand createRequire is the only semantically correct way to resolve modules from a different context What kind of change does this PR introduce check at least one Bugfix Feature Code style update x Refactor Docs Underlying tools Other please describe Note When submitting documentation PRs please target the master branch or next branch When submitting coding PRs please target the dev branch Does this PR introduce a breaking change check one Yes x No Other information This PR contains several features but they are all to solve the vue upgrade usability problem in complex environments so I put them into a single PR I refactored the getInstalledVersion function to use the loadModule utility this is to support monorepo vue upgrade from option can be used as an escape hatch if the user forgets or doesnt want to run npm install before upgrading or if even loadModule failed to locate the installed plugin vue migrate from is for those who previously failed to run vue upgrade and then upgraded the plugin version anyway they might still want to benefit from the automated migration script Or because we previously used version range in the templates users may have installed the latest plugin unintentionally in this case if they want to automatically migrate to the latest template setup they can use this command resolveFrom option is now respected in all these commands TODO these changes havent been thoroughly tested yet What kind of change does this PR introduce check at least one x Bugfix x Feature Code style update Refactor Docs Underlying tools Other please describe Does this PR introduce a breaking change check one Yes x No Other information Please dont delete this template PULL REQUEST TEMPLATE Update to x to check a box What kind of change does this PR introduce check at least one x Bugfix Feature Code style update Refactor x Docs Underlying tools Other please describe Note When submitting documentation PRs please target the master branch or next branch When submitting coding PRs please target the dev branch Does this PR introduce a breaking change check one Yes x No Other information This PR is a bug fix which occure when you specify an URL inside the configs manifestPath option The bug is not blocking the vuecliservice build command but it throws a misleading error because it attemps to create a directory for the manifest which is impossible when it is a full URL Please dont delete this template PULL REQUEST TEMPLATE Update to x to check a box What kind of change does this PR introduce check at least one Bugfix x Feature Code style update Refactor Docs Underlying tools Other please describe Note When submitting documentation PRs please target the master branch or next branch When submitting coding PRs please target the dev branch Does this PR introduce a breaking change check one Yes x No Other information I think it would be useful to be able to ignore certain icons and not have the linkmeta tags link to a missing file Version Reproduction link Environment info Steps to reproduce I know this not strictly a vuecli bug but in a monorepo setup using yarn workspaces I am unable to pin a specific version of typescript because there is seemingly no way to provide a configuration to explicitly do so Basically here we have to rely on node module resolution and package manager which is not deterministic Scenario bare workspace setup nodemodules vue tsloader typescript this typescript will always be used when compiling repro AND repro apps repro requires typescript repro requires typescript nodemodulestypescript this one should be used but because of vue packages being hoisted up in the root it wont Scenario using nohoist option nodemodules apps repro requires typescript repro requires typescript nodemodules vue cliplugintypescript nodemodules typescript this typescript will be used by tsloader is coming from devDepedencies of cliplugintypescript tsloader typescript What is expected Ability to have control on using a typescript version specifically for each project What is actually happening Difficult to do so possible solutions could be plugin option to provide typescript binaries by ourselves remove typescript devDepedencies in cliplugintypescript so we can use the yarn nohoist option generated by vueissues DO NOT REMOVE TODO Tests would like to open another PR to make the migrator easier to test first Documentation Not sure where to put it What kind of change does this PR introduce check at least one Bugfix x Feature Code style update Refactor Docs Underlying tools Other please describe Note When submitting documentation PRs please target the master branch or next branch When submitting coding PRs please target the dev branch Does this PR introduce a breaking change check one Yes x No Other information Version Environment info vue cli node Steps to reproduce vuecliplugini n vueclipluginsvgicon i n svgicon i n presetjson plugins vueclipluginsvgicon generatorindexjs moduleexports api options apiinjectImportsapientryFile import i n from i ni n apiinjectRootOptionsapientryFile i n apiextendPackage dependencies vueclipluginsvgicon apirendertemplate i n vue add i n svgicon generate template What is expected What is actually happening invoke generated by vueissues DO NOT REMOVE Version Environment info System OS Windows CPU x IntelR CoreTM i HQ CPU GHz Binaries Node C Program Files nodejs nodeEXE Yarn C Program Files x Yarn bin yarnCMD npm C Program Files nodejs npmCMD Browsers Edge npmPackages fortawesomevuefontawesome vuebabelhelpervuejsxmergeprops vuebabelplugintransformvuejsx vuebabelpresetapp vuebabelpresetjsx vuebabelsugarfunctionalvue vuebabelsugarinjecth vuebabelsugarvmodel vuebabelsugarvon vueclioverlay vueclipluginbabel vuecliplugine ecypress vuecliplugineslint vueclipluginrouter vuecliplugintypescript vueclipluginunitmocha vueclipluginvuex vuecliservice vueclisharedutils vuecomponentcompilerutils vueeslintconfigprettier vueeslintconfigtypescript vuepreloadwebpackplugin vuetestutils beta beta vuewebcomponentwrapper eslintpluginvue typescript vue vueclasscomponent vuecliwebpack vueeslintparser vuehotreloadapi vuei n vueloader vuepropertydecorator vuestyleloader vuetemplatecompiler vuetemplatees compiler vue perfectscrollbar vuex npmGlobalPackages vuecli Not Found Steps to reproduce Create a Vue application which makes use of documentgetSelection Generate this to a webcomponent What is expected I get the current getSelection so i can use it to save ranges for contenteditable input field What is actually happening getSelections is not giving the right response I try to get my vue application in a web component I have generated it with vue cli I have created a emoji picker in the app This uses a contenteditable div as input field I save the range from documentgetSelection But this not working properly in shadowDom I read somewere that I can use getSelection on the shadowRoot But I cannot find the shadowroot in my app My question is Where can I find shadowRoot of a Vue CLI generated webcomponent So I can use getSelection on it Thanks generated by vueissues DO NOT REMOVE Version Reproduction link Environment info System OS Windows CPU x IntelR CoreTM i CPU GHz Binaries Node d programmes laragon bin nodejs nodev nodeEXE Yarn D Programmes Laragon bin yarn bin yarnCMD npm d programmes laragon bin nodejs nodev npmCMD Browsers Edge npmPackages vuebabelhelpervuejsxmergeprops vuebabelplugintransformvuejsx vuebabelpresetapp vuebabelpresetjsx vuebabelsugarfunctionalvue vuebabelsugarinjecth vuebabelsugarvmodel vuebabelsugarvon vueclioverlay vueclipluginbabel vueclipluginrouter vuecliplugintypescript vueclipluginvuex vuecliservice vueclisharedutils vuecomponentcompilerutils vuepreloadwebpackplugin vuewebcomponentwrapper typescript vue vuehotreloadapi vueloader vuestyleloader vuetemplatecompiler vuetemplatees compiler npmGlobalPackages vuecli Not Found Steps to reproduce Initialize a vuecli application Move src and public to a folder in this case playground Create a vueconfigjs according to the documentation which leads to this one serve the application and notice that the indexhtml is not the same check the meta title or whatever What is expected The contentBase parameter should be taken into account so the new public folder location is served What is actually happening The new public folder location is not served Instead the server is looking for a public folder at the root of the project generated by vueissues DO NOT REMOVE Version Environment info macOS node v npm v Steps to reproduce vue serve What is expected normal What is actually happening Unable to start Vue serve normally Error Failed to load plugin vue declared in BaseConfig Cannot find module eslintpluginvue generated by vueissues DO NOT REMOVE 