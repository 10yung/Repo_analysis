Getting following message on visiting v docskohanaframeworkorg This domain hasnt been associated with any pagoda box app yet hi First look at my code controller public function actionindex test new ModelTest accounts testfind echo accountscurrentname Output normal root foreach accounts as account accountIds accountaccountid echo accountsrewindcurrentname Output Error exit thisresponsebodyhello world model public function find return DBselect fromtestaccount asobjectModelTest executedefault foreach of the above output is normal but foreach of the below output is error class KohanaDatabaseResultCached code public function current echo thiscurrentrow I print currentrow here Return an array of the row return thisvalid thisresult thiscurrentrow NULL I found when foreach is end currentrow totalrow so I keep looking class KohanaDatabaseResult public function next thiscurrentrow The reason is that here each cycle leads to currentrow return this so when I finished using foreach the current method cannot be used I can only use rewindcurrent It might be a bug or Is there a better deal Thanks enov rjd acoulton biakaveron BRMatt cbandy dm isaiahdw jheathco kemo lenton nodren randomecho Zeelot zombor JackEllis melvinmt sergeyklay sarciszewski Many of you use Kohana in your projects is it really lost I found one active repository that created neo s Perhaps you can help There are other analogues In general the repository has a branch with support for namespases rjd You do not have the motivation to continue working Are you interested in continuing with the framework What are your suggestions If there are no analogues and Kohana retires welcome to Koseven I think together we can keep the framework up to date even under a different name Thank you I had problem with UTF encoded JSON content because contentlength header was truncating JSON response Shouldnt this public function contentlength return strlenthisbody Be with header content like this public function contentlength return strlenthisheader thisbody Or even calculated in render function from output just before returning it This COULD be PHP related problem havent confirm that yet Add kohana description in composerjson file for stable version Is it correct Eg consider the situation of generated downloadable content need to be different for every request during the session further sent via Responses sendfile like this seqno Sessioninstancegetseqno thisresponsebodyproduceseqno Sessioninstancesetseqno seqno thisresponsesendfileTRUE sequencerjson arrayinlineTRUE this wont work because when Sessions save method is called the headers were already sent systemclassesKohanaSessionphp if headerssent OR thisdestroyed Session cannot be written when the headers are sent or when the session has been destroyed return FALSE Instead of just trimming right zeros a proper padding scheme need to be implemented eg this code currently wont work crypto Encryptinstanceencodegzencodeserializearray obj unserializegzdecodeEncryptinstancedecodecrypto because gzencode produced string has trailing zeros and subsequent decode just removes them serialized items list of ORM class need to be extended to include at least tablecolumns and possible many others as well see modulesormclassesKohanaORMphp Well it is rather PHP issue of incorrect creating of objects implementing Serializable interface but anyway Eg these two classes are expected to have the same behaviour but they wont class A implements Serializable protected props array propa a propb b public function construct unsetthisprops a thisprops c c public function unserializedata printrthis exit class B implements Serializable protected props public function construct thisprops array propb b propc c public function unserializedata printrthis exit running unserialize from empty object which simulates omission of props from serializing ops we can see s C A a a unserializes A Object propsprotected Array propa a propb b and s C B a b unserializes B Object propsprotected Thus if someone does modify columns list of a model in constructor which is in my understanding perfectly valid in any sense then restoration of stored model will bring wrong columns list and all next fetches will fail with SQL exception unknown column And even more my offer is to remove serializable implementation from ORM and switch to wakeup and sleep alternative This way we only need to return array of names to be stored clean unneeded fields and return all properties names so we do not lost any bit the rest will be done by the PHP itself Hi I think there is missing lang parameter passing to I nget on this line It should look like php string I ngetstring lang 