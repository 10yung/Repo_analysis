When running rake cucumber DEADWEIGHTtrue I get the following error undefined method empty for ActionDispatchResponse Any suggestions running deadweight on bootstrapprintscss a href after a href javascript after content gives following error as strip changes a href javascript after to a href javascript which is an invalid selector gemsnokogiri libnokogiricssparserextrasrb in onerror unexpected after prefixmatch NokogiriCSSSyntaxError This is a set of changes that improve deadweights performance and adds support for more css Normalizing the selectors to minimize the number that needs to be checked By making a tree with selectors that imply each other we can only search a subset of the selectors at a time Ex if you have the two selectors hello and helloworld then helloworld implies that hello would match So until you find a hello there is no reason to look for a helloworld This can greatly improve the speed nested styles Now supporting many pseudoclasses Based on nokogiris supported pseudoclasses needed to update the Gemfilelock for nokogiri to handle some of them correctly Additionnally we strip the hover and valid since logically if you find the element that the hover is also found When a rule is not supported it is now handled correctly Output wise it remains a simple unused rule That could be improved in the future to distinguish them Deadweight works as expected when I run it as a rake task However when I try to run it with rspec it finds no selectors DEADWEIGHTtrue rspec specfeaturessurveysindexspecrb No DRb server is running Running in local process instead found unused selectors out of total Is there some way to make this work Piggybacking on integration tests seems way better than trying to manually specify every page of my site I am using Ubuntu I did all required configuration still getting Error while running rake deathweight Error WARN Bugsnag No API key configured couldnt notify rake aborted EOFError end of file reached homesaurabhrvmgemsruby preview luxolagemsdeadweight libdeadweightrb in fetch homesaurabhrvmgemsruby preview luxolagemsdeadweight libdeadweightrb inblock in reset homesaurabhrvmgemsruby preview luxolagemsdeadweight libdeadweightrb in each homesaurabhrvmgemsruby preview luxolagemsdeadweight libdeadweightrb inreset homesaurabhrvmgemsruby preview luxolagemsdeadweight libdeadweightrb in run homesaurabhluxolalibtasksdeadweightrake inblock in top required homesaurabhrvmgemsruby preview luxolagemsbugsnag libbugsnagrakerb in block in bugsnagdefinetask homesaurabhrvmgemsruby preview luxolabinrubyexecutablehooks ineval homesaurabhrvmgemsruby preview luxolabinrubyexecutablehooks in main Tasks TOP deadweight See full trace by running task with trace Given the following HTML html table classfoo tr tdSome Foo datatd tr table and the following CSS css tablefoo tbody tr td color green browsers will insert a virtual tbody and apply the rule Deadweight should also insert this element so it acts like browsers do How do I debug this Usersbenwoodwardrbenvversions gemsetsglobalgemsnokogiri libnokogiricssparserextrasrb in onerror unexpected after CHILDSELECTOR NokogiriCSSSyntaxError from Usersbenwoodwardrbenvversions libruby raccparserrb in raccdoparsec from Usersbenwoodwardrbenvversions libruby raccparserrb in doparse from Usersbenwoodwardrbenvversions gemsetsglobalgemsnokogiri libnokogiricssparserextrasrb in parse from Usersbenwoodwardrbenvversions gemsetsglobalgemsnokogiri libnokogiricssparserextrasrb in xpathfor from Usersbenwoodwardrbenvversions gemsetsglobalgemsnokogiri libnokogiricssrb in xpathfor from Usersbenwoodwardrbenvversions gemsetsglobalgemsnokogiri libnokogirixmlnoderb in block in search from Usersbenwoodwardrbenvversions gemsetsglobalgemsnokogiri libnokogirixmlnoderb in map from Usersbenwoodwardrbenvversions gemsetsglobalgemsnokogiri libnokogirixmlnoderb in search from Usersbenwoodwardrbenvversions gemsetsglobalgemsdeadweight libdeadweightrb in block in analyze from Usersbenwoodwardrbenvversions gemsetsglobalgemsdeadweight libdeadweightrb in collect from Usersbenwoodwardrbenvversions gemsetsglobalgemsdeadweight libdeadweightrb in analyze from Usersbenwoodwardrbenvversions gemsetsglobalgemsdeadweight libdeadweightrb in process from Usersbenwoodwardrbenvversions gemsetsglobalgemsdeadweight libdeadweightrb in block in run from Usersbenwoodwardrbenvversions gemsetsglobalgemsdeadweight libdeadweightrb in each from Usersbenwoodwardrbenvversions gemsetsglobalgemsdeadweight libdeadweightrb in run from Usersbenwoodwardrbenvversions gemsetsglobalgemsdeadweight libdeadweightclirb in process from Usersbenwoodwardrbenvversions gemsetsglobalgemsdeadweight libdeadweightclirb in execute from Usersbenwoodwardrbenvversions gemsetsglobalgemsdeadweight libdeadweightclirb in execute from Usersbenwoodwardrbenvversions gemsetsglobalgemsdeadweight bindeadweight in top required from Usersbenwoodwardrbenvversions gemsetsglobalbindeadweight in load from Usersbenwoodwardrbenvversions gemsetsglobalbindeadweight in main It would be nice if you would sent people landing on your page to my Headhunter gem smile I never used this gem before but I guess that its not working anymore for newer versions of Rack andor Rails see especially my changes in libdeadweightrackcapturingmiddlewarerb respondto body doesnt seem to be correct anymore and in libdeadweighthijackrailsrb applicationcss is no longer under stylesheets but in assets and it needs to be precompiled I didnt find a more elegant way to load applicationcss into DeadWeight than to do a manual rake assetsprecompile from within Ruby It would be nice to use the same source that Rails generates when a js true test is run but this is done only the first time such a request test is run so we dont have it at this early stage Maybe there is a way to trigger the generation manually somehow I also refactored the console output I dont think its useful to hijack the log and send it to a file I want to see whats happening with my tests eg how many already are done etc screenshot It would be nice to prevent the output of rake assetsprecompile from being displayed but I didnt find a way to do it As I only use this as a Rails gem I didnt verify that all other functionalitys still working fix for although i am running it via the rake task for now It catches a NokogiriCSSSyntaxError and logs the selector in an instance variable program does not exit on parsing error 