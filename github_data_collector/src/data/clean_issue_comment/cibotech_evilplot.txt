Hello evilplot Team Thank you for your library it made my life easier I was wondering if there are any plans on drawing an SVG or maybe somebody is already working on it The requirement for an extra resolver means that every downstream dependency has to add that resolver There is a relatively easier solution that is sync the bintray repo to Maven central this way the release will be available on maven central which default for sbt There are mainly steps First setup sonatype here is a guide Then setup the sync on bintry Here is the guide Thanks very much in advance Scala has been out for since June Please add support for it in the cross build As part of this update you can also updated the following Scala circe Breeze ScalajS Theres a plugin that adds a dependencyUpdates command to list new dependencies that are available To use it add the following to projectpluginssbt addSbtPlugincomtimushevsbt sbtupdates I need to display circles with radio depending on the data I tried to do with PointRenderedcustom but the scale factor is not available with this function Also I need to paint a circle that is only the border of the disk but traying with DisccenteredxradiofilledtransparentColorcoloredvisibleColorweighted only paint the inside any way What can I do Thanks Reynaldo I would like to set the image size in pixels I tried this but it does not work val bufferedImage plot xAxis yAxis frame xLabelx yLabely renderExtent asBufferedImage ImageIOwritebufferedImage png file Is this the correct way to do it Hi thanks for the great work Is it possible to show the data when I hovering over a point Hi guys this project is amazing Do you have any plans for graph rendering by any chance Currently the legend order is determined by the order or series construction If this process isnt easily ordered it would be nice to have some method to order the legend evilplotrepl displayPlot output is pixelated image x lower resolution on HiDPI displays where UI scaling is macOS Java b Implicits have a very complicated priority lookup scheme For the most part I try to use them at either a VeryLow priority within it s own object or at a VeryHigh precedence local scope definition Including the default implicit in the companion object is an idiomatic and ideal use case of a default configuration type like this If a user wants a specific theme they can add it otherwise they dont even have to know about themes Furthermore the tutorials and getting up to speed examples can be much more approachable by removing the friction from these unrelated details but still make them configurable if someone desires this tangential feature