 System information Compiled at commit c fa f b c a dd a Operating system Debian testing amd Expected behavior What should have happened I had a lathe operation plus extra extrusions one with x time rotating symmetry acting as a difference At the end I wanted to see a crossection so I did another sketch extruded it and used as a difference I expected to have a solid model not hollow one with some red marks on the edges There are some other red marks that I dont know what they are and some edges deg ones do not have the red edges No idea what is going on Actual behavior adapterplatesection adpateplatesectioniso Project file adapterplatetargz Just a UI nitpick If I get the chance Ill look into doing this myself System information SolveSpace version c f b Operating system Debian Buster Expected behavior I have a solvespace file I go to export it to trimesh to get an STL to d print The dialog probably should open to the location of the slvs file and defaulting to the same stem but with the appropriate extension stl Actual behavior It defaults to untitled untitledstl in some other directory think its the last directory I used that export option in System information SolveSpace version c f b Operating system Debian Buster Expected behavior I have essentially a rectangular prism that I wanted to cut two triangular grooves in one vertically and one horizontally same height and intersecting making vise jaws So one d sketch extrude for positive solid one d sketch and extrude as difference for one groove then perpindicular d sketch and extrude as difference for other groove It should look normal Actual behavior Several of the faces are red indicating they are backfaces The solver didnt fail it thinks it succeeded It actually looks like Im seeing thru missing faces when I went and redrew it differencefail Forcing to trimesh does fix it despite the lack of a solver fail message but I would have guessed that this was a fairly easy geometry to handle nothing curved Additional information open jawcoversslvs the other is my reference linked in Im not sure how to or if I can reseat the origin of sketches to be able to simplify this one without redrawing jawzip OK decided to not be lazy and redraw a simpler test case Peek and with workaround example zip Update exporting to STL or show naked edges without doing the workaround pops up this nice and halfscary message and the exported STL is missing the same faces that are missing in the app As loaded into PrusaSlicer with left and without right the workaround System information SolveSpace version c f b Operating system Debian Buster Expected behavior I turned on Edit newly added dimensions because its a great workflow improvement When adding a distance constraint on an already fullyconstrained sketch Id expect it to not let me edit it since solvespace will automatically mark such a constraint as REF Actual behavior It lets you edit it though the edits have no effect Additional information Peek Peek Heres the model for the second one examplezip System information SolveSpace version dcdfdec Operating system Gentoo Expected behaviour I can zoom into fine details in my model Actual behaviour In this case I am trying to insert the Huawei plug into the left plug socket I very quickly find that zooming in far enough causes artefacts to start appearing and the compass disappears issue I assume this could be due to the wall being in the way however there seems to be no true way to hide a group so unless I can find a hidden gem in terms of patches I may need to break up the model more than I really need to just to avoid the camera bug this problem was also present in hence I tried building a later version to see if the issue was fixed in the upcoming release Additional information roomplanzip System information SolveSpace version dcdfdec Operating system Gentoo Expected behavior Performance is the same as or better than version Actual behavior most changes seem to take a lot longer although changing the camera is still snappy Additional information roomplanzip See The problem was first introduced here and later fixed here by setting the stack size to STACK Solvespace now starts up even with STACK According to this if T is a class type with a default constructor that is neither userprovided nor deleted that is it may be a class with an implicitlydefined or defaulted default constructor the object is zeroinitialized and then it is defaultinitialized if it has a nontrivial default constructor So removing the should leave both the System and TextWindow class instances properly initialized Found with W by MSVC Microsoft R CC Optimizing Compiler Version A bunch of implicit casts double to float and one int t to unsigned src platform guiwincpp warning C potentially uninitialized local variable cursorName used src platform guiwincpp warning C potentially uninitialized local pointer variable cursorName used src solvespacecpp warning C declaration of gs hides previous local declaration src solvespacecpp message see declaration of gs src solvespacecpp warning C declaration of e hides previous local declaration src solvespacecpp message see declaration of e src render renderh warning C declaration of camera hides class member src render renderh message see declaration of SolveSpaceSurfaceRenderercamera src render renderh warning C declaration of lighting hides class member src render renderh message see declaration of SolveSpaceSurfaceRendererlighting Fix a potential bug with Dconnexion SpaceMouse Another warning is an actual bug How does the SpaceMouse I do not have one work at all src platform guiwincpp warning C declaration of hSpaceWareDriverClass hides global declaration src platform guiwincpp message see declaration of SolveSpacePlatformhSpaceWareDriverClass Found no use of constraint signs on printouts sometimes added dimension only view mode for constraints