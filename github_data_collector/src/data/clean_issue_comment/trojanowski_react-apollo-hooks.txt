Bumps handlebars from to details summaryChangelogsummary Sourced from handlebarss changelog v November th Bugfixes fix add noprototypebuiltins eslintrule and fix all occurences f f d fix add more properties required to be enumerable Chores Build fix use instead of c b f add chai and dirtychai and sinon for cleaner testassertions and spies deprecate old assertionmethods e e ba dad a Security The properties proto defineGetter defineSetter and lookupGetter have been added to the list of properties that must be enumerable If a property by that name is found and not enumerable on its parent it will silently evaluate to undefined This is done in both the compiled template and the lookuphelper This will prevent new RemoteCodeExecution exploits that have been published recently Compatibility notes Due to the securityfixes The semantics of the templates using proto defineGetter defineSetter and lookupGetter in the respect that those expression now return undefined rather than their actual value from the proto The semantics have not changed in cases where the properties are enumerable as in js proto some string The change may be breaking in that respect but we still only increase the patchversion because the incompatible usecases are not intended undocumented and far less important than fixing RemoteCodeExecution exploits on existing systems Commits v November th Bugfixes fix use Stringfield in lookup when checking for constructor d test add fluent API for testing Handlebars c ac c Compatibility notes no incompatibility are to be expected trtable truncated details details summaryCommitssummary c c b v c d Update release notes f f d fix add noprototypebuiltins eslintrule and fix all occurences fix add more properties required to be enumerable ba testchore add chaiexpect and sinon to runtimeenvironment dad test add sinon as global variable to eslint in the specs a test add sinonjs for spies deprecate current assertions e e chore add chai and dirtychai for better test assertions c b f fix use instead of de d v Additional commits viewable in compare view details br Dependabot compatibility score Dependabot will resolve any conflicts with this PR as long as you dont alter it yourself You can also trigger a rebase manually by commenting dependabot rebase dependabotautomergestart dependabotautomergeend details summaryDependabot commands and optionssummary br You can trigger Dependabot actions by commenting on this PR dependabot rebase will rebase this PR dependabot recreate will recreate this PR overwriting any edits that have been made to it dependabot merge will merge this PR after your CI passes on it dependabot squash and merge will squash and merge this PR after your CI passes on it dependabot cancel merge will cancel a previously requested merge and block automerging dependabot reopen will reopen this PR if it is closed dependabot ignore this patchminormajor version will close this PR and stop Dependabot creating any more for this minormajor version unless you reopen the PR or upgrade to it yourself dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency unless you reopen the PR or upgrade to it yourself dependabot use these labels will set the current labels as the default for future PRs for this repo and language dependabot use these reviewers will set the current reviewers as the default for future PRs for this repo and language dependabot use these assignees will set the current assignees as the default for future PRs for this repo and language dependabot use this milestone will set the current milestone as the default for future PRs for this repo and language You can disable automated security fix PRs for this repo from the Security Alerts page details We can see by the code that the useSubscription should unsubscribe to the graphql subscription by it self But on page refresh it seens to be Duplicated and I am receiving responses from all the subscriptions for each page refresh I am using apollolinkerror to centrally log errors to the console But I wanted to also from that same location in the code use reacttoastnotifications to render an error message to the end user The issue is that this second library changes state higher up on the component tree and forces rerenders down the component tree resulting in toast notifications being sent in an infinite loop Following code example works The below GQL is valid and works as I intend const GETITEMS gql continents name but if you were to alter the GQL to simulate a network or GQL error to something invalid as shown below my issue can be replicated const GETITEMS gql invalidGQL name img width altScreenshot at src There seems to be a problem with reactapollohooks in that the response is correct but when I print out the data object in useQuery its incorrect Anyone any clues as to how to fix this Hey there is it possible to use getMarkupFromTree with renderToStream instead of renderToString Hi Im using useLazyQuery for a user lookup for suggestions so its important that requests arent missed The default behaviour it seems is that requests are ignored if one is happening I would like to cancel running requests and fire the new one At the moment if I type Dominic Tobiaz and then correct it to Dominic Tobias the request will be ignored if the misspelled one is still running The useLazyQuery request function sadly is not returning the fetch Promise for me to be able to cancel nor have I had any luck with fetchPolicy networkonly Thanks for any help Is there any way to abort a useQuery that is in progress I have a map that queries data based on the bounding coordinates of the current window Data fetch times can be a few seconds but if the user rapidly moves around I want to be able to cancel the last request made in favor of the new query I do use throttling and checking the loading state of the useQuery however this just prevents new queries being executed concurrently This is fine but it leaves me with waiting for data from the original useQuery to finish before I can do anything else SinglePost CUsersAveesh shettyDesktopclasssedgraphqlservermasterclasssedgraphqlservermasterclientsrcpagesSinglePostjs import Button IconCardGridImageLabel from semanticuireact import AuthContext from contextauth function SinglePostprops const user useContextAuthContext const postId propsmatchparamspostId consolelogpostId Can you archive this repo so that first timers do not get confused