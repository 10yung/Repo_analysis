You added support to upload forms with file and text in but theres currently no way to properly document it with the OpenApiAnnotations According to the swagger doc the schema for the requestbody of a form with binary and primitive content should look like this content multipartformdata schema type object properties myFile type string format binary someText type string But the OpenApi annotation has two separate parameters for fileUploads which get turned into multipartformdata and formParams which get turned into applicationxwwwformurlencoded content so the schema ends up with a requests body that accepts either the file upload or the form params but not both In the Swagger UI you have to choose which of the two requests types you want to send My Swagger Documentation My Swagger Documentation ivyretrieve artifact orgwebjarsnpmjstokens jstokensjar ivyretrieve ivyretrieve ivyretrieve UNRESOLVED DEPENDENCIES ivyretrieve ivyretrieve orgwebjarsnpmjstokens not found ivyretrieve ivyretrieve ivyretrieve USE VERBOSE OR DEBUG MESSAGE LEVEL FOR MORE DETAILS While setting up Javalin as a depedency on my Apache Ant project using Ivy I am unable to retrieve the jar specified above ivymodule version info organisationorgapache modulemyproject dependencies dependency orgiojavalin namejavalin rev dependencies ivymodule With the target step as follows target nameresolve descriptionRetrieve dependencies with Ivy ivyretrieve target Downgrading to Javalin seems to work however PR to resolve as I mentioned in issue this solution does not feel like correct one I am not sure if the code I wrote should be in DocumentedContentkt And is it okay to use directly kotlinreflect API and javalangreflect API I see usage of iogithubclassgraph to scan annotations Tips are welcome Java public class User public String name public String email OpenApiExamplename example with some name private static User example return new Usersome name some email Kotlin class Userval name String val email String companion object OpenApiExamplename example with some name fun example Usersome name some email Not very fluent in Kotlin so this may be syntax error but I think you get the idea This is a brackets based parser as described in Currently the new parser is not supported in the OpenApi DSL I added a small abstraction layer to the path parser creation The interface only contains the public methods for now Implementation details Brackets are forbidden as part of a parameter name but wildcards are allowed Brackets are counted for each segment separately to provide an early way out Wildcards cannot be directly adjacent to a path parameter Otherwise hi would behave differently from hi In the second case the path parameter would only accept a single character I am unsure on how to adapt the OpenApiDsl to the new bracket parser Might extend the interface with the internal variables required Some parts would need to be adopted to deal with the new MultipleSegments class in PathSegment I look forward to feedback Hi Im new in Javalin and Swagger these are really great projects thank you for your work I am asking for help today because I need to do something that I cant handle by myself I have a Javalin server in kotlin and I use annotations to get my documentation generated and rendered by swaggerui OpenApi summary Get meter description A great description tags Tagsmeter pathParams OpenApiParamname meter description A meter responses OpenApiResponsestatus content OpenApiContentfrom Meterclass OpenApiResponsestatus description Unknown meter override fun handlecontext Context do something Let say that Meter is a data class I simplified it for the exemple that encapsulate a String value data class Meterval sn String In this case the documentation will contain a schema for Meter as an object composed of a field sn that is a String What I would like is to override the type definition of this class to specify that its a String For instance with an annotation or anything that could allow me to do so Am I just blind and unable to search online or there is no way to do what I would like In advance many thanks for your attention Wendy I have code for an API endpoint and Id like the generated ReDoc documentation to contain an example response that I build How do I do that So something like java OpenApiBuilderdocumentjson MyClassclass openApiParam openApiParamdescriptionOK openApiParamexamplenew MyClass def Some people want to run Javalin on Android or other small things Could be fun to create a minimal version of Javalin for that Prompted by Example Currently Javalin is just one big module Im mostly comfortable with this but some plugins are getting a little too chunky I made an issue for moving OpenAPI to a separate repo but I think a separate module might be more appropriate Theres also this pr for a test module and the GraphQL plugin is looking pretty chunky too So javalincore javalinopenapi javalingraphql javalintest not sure about this one I dont have any experience with multimodule projects but the only thing Im really concerned about is the release process In general splitting things up should lead to a cleaner codebase