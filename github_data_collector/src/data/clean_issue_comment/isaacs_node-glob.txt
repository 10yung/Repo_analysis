Close I have following structure data section file json section file json When I run globsync ignore datasection I expect to get datasectionfile json but got an empty array In a realworld scenario for similar files structure I receive a set of projectroot globs but I need to get files from specific section only without modifying globs Thats why I need for negative pattern in ignore isaacs good day We would be very pleased about attention at pull request Thanks This is a reup of which is approved with the conflicts fixed The original author seems to have lost interest Node and earlier are EOL and the polyfill package has been deprecated and its repository archived Reduce the dependency complexity for upstream projects like rimraf and puppeteer by removing this dependency Fixes Fixes Fixes JavaScript has come a long way since I wrote this and while its used by a lot of people it has some definite shortcomings that make it hard to improve and modify Rather than the pile of functions approach with everything reimplemented for sync globbing this should use a classbased approach where all fs ops are abstracted into methods that can be overridden in a sync child class like how the internals of nodetar or npmpacklist work Consider not relying on regular expressions or minimatch Ie write a parser that can take a glob pattern after splitting up the sections and a path and return the following possible states NO definitely not a match and cannot match children stop NO BUT not a match but child entries may be a match Return the portions of the pattern that may match child entries Eg axy against ax would return xy and y as patterns that could match against child entries If the entry is not a dir this is a NO response YES AND a match and may match child entries eg x would match both ax and axx so comparing it to the ax path should say yes and Return value should include the bits that can match child entries So ax against ax would return a yes and response with x and x as remaining patterns If the entry is not a dir this is a YES BUT response YES BUT a match but cannot match child entries YES IF a match but only if its a dir eg a matches the dir ax but not the file ax For all of these walk the string and compare with a finite state machine rather than converting to a regexp Fix all the windows stuff Not sure what to use as a reference implementation here Mingw bash LSW Consider using a WASMed implementation of glob written in rust Especially if were not reliant on JS regexps this makes a lot of sense Create a custom error type I will set aside some vacation time to do this if a handful of people decide to fund this library I found some unused variables and removed them I guess node benchcleanjs can be used for the profclean script I have my Sass files organized in a set of subdirectories dir dir dir dir dir And I set up the following rule to watch the changes in there srcscss cwd dir Changes on dir dir dir dir somefilescss are picked correctly however changes on dir dir dir dir dir someotherfilescss are ignored for some reason Is there a max limit for nesting that Im not aware of Because the user cannot merely remove the callback function for the blog to be done synchronously What actually makes it run synchronously is setting sync true in options Hello Isaac thank you for a fantastic library Im planning to use it with Blot to look up files in a caseinsensitive manner I encountered unexpected behaviour when I set the nocase flag to true and searched for files containing accents Heres a minimal example which demonstrates the issue javascript var fileNameWithAccent fswriteFileSyncfileNameWithAccent globsyncfileNameWithAccent returns as expected globsyncfileNameWithAccent nocase true returns glob OS macOS node v npm 