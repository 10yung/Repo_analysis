This PR addresses the warnings generated by cppcheck for xrdppcscc mentioned in The first of these relates to this code following line TODO figure out why recv pci does not work if pioRecvPci pioRecvPcicbPciLength gotrecvpci else gotrecvpci pioRecvPci dereferenced if gotrecvpci else pioRecvPci dereferenced again The in the if statement was added in commit f d ce dc e a d aec e for XRDP and has the effect of disabling the recv pci functionality As a result pioRecvPci is never dereferenced However cppcheck is not clever enough to pick up that gotrecvpci is being used as a discriminant for the second block and so generates the warning Ive restructured the code so that gotrecvpci is used as a discriminant for both blocks gotrecvpci pioRecvPci NULL pioRecvPcicbPciLength TODO figure out why recv pci does not work gotrecvpci if gotrecvpci else pioRecvPci dereferenced if gotrecvpci else pioRecvPci dereferenced again And this time cppcheck can figure out the traceability The TODO still applies but can be removed when addressed by removing the TODO command and following line The second seems more straightforward memcpy can be invoked with a NULL source pointer but in this case the copy length is zero This is fine but cppcheck cant see it The code change has an explicit codepath for a NULL source pointer which doesnt invoke memcpy So despite the cppcheck warnings no actual bugs have been found here On a x x bpp display shared over a mbit ac wifi network the performance of xrdp is kind of lackluster with the default TCP send buffer size of bytes The defaults set in xrdpini are as follows Globals tcpsendbufferbytes tcprecvbufferbytes tcpnodelaytrue tcpkeepalivetrue When uncommented xrdp uses these values to set the send and recieve buffer sizes This results in sendrecieve buffers of bytes each respectively since the Linux kernel doubles the value requested tcp man page Besides being printed in the log output this can be independently confirmed by ss lnm sport Netid State RecvQ SendQ Local AddressPort Peer AddressPort Process tcp LISTEN skmemr rb t tb f w o bl d I noticed that xrdp wasnt even close to saturating the link speed which is what prompted this investigation By setting tcpsendbufferbytes to something a little more generous eg Globals tcpsendbufferbytes And increase the corresponding sysctl limit to x the requested buffer size sudo sysctl w netcorewmemmax We get much improved performance seamless window dragging smooth scrolling full screen FHD video playback I think this should be written somewhere maybe in the wiki in the man pages or briefly mentioned as a comment in the stock xrdpini Hope this helps someone Running XRDP on CentOS I am having issues with pamnamespaceso Basically as soon as I enable pamnamespaceso in etcpamdxrdpsesman XRDP sessions both Xorg and XVNC fail with a black screen After about minutes or so this is what I see in varlogxrdplog DEBUG xrdpwmlogmsg connection problem giving up DEBUG Closed socket AFUNIX DEBUG xrdpwmlogmsg some problem DEBUG xrdpmmmodulecleanup DEBUG Closed socket AFINET Uncommenting the pamnamespaceso line in my xrdpsesman pamd configfile and restarting XRDP immediately restores full XRDP functionality save for polyinstantiation which is required on this multiuser Linux terminal server It is working great when users log in via our thin clients using XDMCP and XDM and its also working great for SSH logins so I know for sure its not a PAM issue per se but must be XRDPrelated somehow I know that it is at least partly working because I can see the proper X unix and X lock files created in tmpinstsystemuobjectrtmpts martin instead of tmp with pamnamespaceso enabled However when logging in from a thin client via XDM or via SSH from a remote machine the polyinstantiated tmpdirectory is a different one tmpsystemuobjectrtmpts s c c martin Not sure if that makes a difference or not but I thought Id mention it either way My configuration root ebdlsa cat etcpamdxrdpsesman PAM Generic Fedora config auth include passwordauth auth required pamenvso account include passwordauth password include passwordauth session required pamselinuxso close session required pamselinuxso open session required pamloginuidso session required pamnamespaceso session include passwordauth root ebdlsa ls Z usrsbinxrdp rwxrxrx root root systemuobjectrbints usrsbinxrdp rwxrxrx root root systemuobjectrbints usrsbinxrdpchansrv rwxrxrx root root systemuobjectrbints usrsbinxrdpsesman root ebdlsa cat etcsecuritynamespaceconf etcsecuritynamespaceconf See usrsharedocpamtxtsREADMEpamnamespace for more information tmp tmpinst level rootadm vartmp vartmptmpinst level rootadm root ebdlsa cat etcsysconfigselinux This file controls the state of SELinux on the system SELINUX can take one of these three values enforcing SELinux security policy is enforced permissive SELinux prints warnings instead of enforcing disabled No SELinux policy is loaded SELINUXpermissive SELINUXTYPE can take one of three two values targeted Targeted processes are protected minimum Modification of targeted policy Only selected processes are protected mls Multi Level Security protection SELINUXTYPEtargeted Any hints This PR addresses the cppcheck warning generated by cppcheck for xrdpxrdpxfsfusec and devredirc mentioned in The warning in chansrvfusec generated by cppcheck but not or appears to be a regression in cppcheck which has already been reported see cppcheck TRAC and Following a realloc failure a free of the original region results in a false positive cppcheck allows for false positives to be flagged with specially formed comments The inlinesuppr commandline flag is needed to enable these This approach has been taken for this file The warning in chansrvxfsc generated by cppcheck but not or appears to be caused by a null pointer test followed by followed by a dereference of the pointer in another test if xfs NULL xfsinodetable NULL This is perfectly valid C so this may well be an older bug in cppcheck Ive consulted TRAC but been unable to find one Ive restructured the code to separate the two tests into separate if statements and this seems to stop any version of cppcheck grumbling The warning in devredirc appears to be valid code used to generate a random number if devurandom is unavailable Ive simply replaced the code with a call to grandom in this case So despite the warnings no actual bugs have been found here Hello how can I set the resolution of the remote server to a fixed value and open it in full screen on the local client For example the local screen resolution is p and the remote server resolution is fixed to x and the RDP client is full screen Achieve the purpose of enlarging the font This PR addresses the cppcheck warning generated by cppcheck for xrdpxrdpcachec mentioned in The COMPAREWITHCRC macro checks both its pointer arguments against NULL cppcheck takes this as an indicator that either of the pointers could be NULL and generates the warning accordingly against the bitmap local variable This variable cannot actually be NULL and so the check performed by the macro is not needed In this case the warning does not indicate an actual bug It has been a while since my last exercise in Linux I installed download then found no ssh access installed ssh then found no xrdp access installed but when I tried to login I would get a black screen and hang Google fu the PEM issue added xrdp to ssh group to fix Still black screen more Google fu and the NEW screen sharing feature enabled it and restarted when I try to connect I get logged in through X but X passes me to a black screen then Im disconnected The current log INFO Socket AFINET connection received from ffff port DEBUG Closed socket AFINET ffff port DEBUG Closed socket AFINET port INFO Using default X certificate etcxrdpcertpem INFO Using default X key file etcxrdpkeypem DEBUG TLSv enabled DEBUG TLSv enabled DEBUG TLSv enabled DEBUG Security layer requested selected DEBUG Closed socket AFINET ffff port INFO Socket AFINET connection received from ffff port DEBUG Closed socket AFINET ffff port DEBUG Closed socket AFINET port INFO Using default X certificate etcxrdpcertpem INFO Using default X key file etcxrdpkeypem DEBUG TLSv enabled DEBUG TLSv enabled DEBUG TLSv enabled DEBUG Security layer requested selected INFO connected client computer name AORUS INFO TLS connection established from ffff port TLSv with cipher ECDHERSAAES GCMSHA DEBUG xrdp bbwmloginmodeevent INFO Loading keymap file etcxrdpkm ini WARN local keymap file for x found and doesnt match built in keymap using local keymap file DEBUG xrdpwmlogmsg connecting to sesman ip port INFO xrdpwmlogmsg sesman connect ok DEBUG xrdpwmlogmsg sending login info to session manager please wait DEBUG return value from xrdpmmconnect INFO xrdpwmlogmsg login successful for display DEBUG xrdpwmlogmsg started connecting INFO libmodlogpeer xrdppid connected to X rdppid X rdpuid X rdpgid clientipffff clientport DEBUG xrdpwmlogmsg connected ok DEBUG xrdpmmconnectchansrv chansrv connect successful DEBUG Closed socket AFINET port DEBUG Closed socket AFUNIX DEBUG Closed socket AFINET ffff port DEBUG xrdpmmmodulecleanup DEBUG Closed socket AFUNIX kevingatevarlog I dont see any X session stuff Hi I find Xrdp the most satisfying solution when accessing a Linux system remotely from anywhere But I have some minor and yet disturbing issues corporate users cant login login successful display but VNC error connecting to local users can log in once a XVnc session will live forever and you cannot login from another computer before not killing that specific Xvnc session ssh kill and wait until the zombie is killed could last some minutes eventually restart xrdpservice and xrdpsesmanservice local user first logs in and password is requested for times like for color profile x keyring x PCSC x It is not possible to have access to USB for example for virtmanager or qemu Session is not killed after closing the remote desktop connection I was not able to test it with Xorg Does anybody has experiences how to do this with Fedora I was installing xorgxrdp and edited xrdpini to enable it But when I try to log in I only get a blank screen Best regards Peter sesmanchansrvpcscxrdppcscc warning Either the condition pioRecvPci is redundant or there is possible null pointer dereference pioRecvPci nullPointerRedundantCheck sesmanchansrvpcscxrdppcscc warning Either the condition pioRecvPci is redundant or there is possible null pointer dereference pioRecvPci nullPointerRedundantCheck sesmanchansrvpcscxrdppcscc warning Either the condition mszGroupsNULL is redundant or there is possible null pointer dereference mszGroups nullPointerRedundantCheck xrdpxrdpcachec warning Either the condition bitmap is redundant or there is possible null pointer dereference bitmap nullPointerRedundantCheck 