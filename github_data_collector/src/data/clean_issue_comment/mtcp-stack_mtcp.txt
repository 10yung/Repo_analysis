Add mTCP support for SPDK add READMEspdk for change summary Add mTCP separated mtcpruninstance API Fix some issues about crosscompilation for arm Fix RSS issue for brcm stingray Add a crosscompile script for arm For spdk changes we are preparing for upstream and when its ready will introduce submodule for spdk and give test case steps of nvmeotcp Thanks a lot Qingmin Hi I am running epserver and epwget for singleprocess multithreaded usage The client always has an ARP request timeout error while the server does not receive any packets So how could I can solve this problem And I would like to know if two hosts using DPDK NICa can ping each other Existing ab lack of SSL load test support Add the apache benchmark configure script with enablessl and withssl option Adopt openssl cryptobiobsssockc as example to enable ab to create SSL connection over mTCP socket Example ab N c n Configuration updated by mtcpsetconf This is ApacheBench Version Revision Copyright Adam Twiss Zeus Technology Ltd Licensed to The Apache Software Foundation Loading mtcp configuration from configmtcpconf Loading interface setting EAL Detected lcores EAL Detected NUMA nodes EAL Autodetected process type PRIMARY EAL Multiprocess socket varrundpdkrtempsocket EAL Probing VFIO support EAL PCI device b on NUMA socket EAL Invalid NUMA socket default to EAL probe driver ad b netvmxnet Total number of attached devices Interface name dpdk EAL Autodetected process type PRIMARY Configurations Number of CPU cores available Number of CPU cores to use Number of TX ring descriptor Number of RX ring descriptor Number of source ip to use Maximum number of concurrency per core Maximum number of preallocated buffers per core Receive buffer size Send buffer size TCP timeout seconds TCP timewait seconds NICs to print statistics dpdk Interfaces name dpdk ifindex hwaddr ipaddr netmask Number of NIC queues Loading routing configurations from configrouteconf Routes Destination Mask Masked Route ifdx Destination Mask Masked Route ifdx Destination Mask Masked Route ifdx Destination Mask Masked Route ifdx Loading ARP table from configarpconf ARP Table IP addr dsthwaddr BA Initializing port Ethdev portid txqueueid new added offloads x must be within prequeue offload capabilities x in rteethtxqueuesetup done rteethdevflowctrlget Function not supported dpdkloadmodule Failed to get flow control info rteethdevflowctrlset Function not supported dpdkloadmodule Failed to set flow control info errno Checking link statusdone Port Link Up speed Mbps fullduplex Benchmarking be patient CPU connecting to port CPU initialization finished mtcpcreatecontext CPU is now the master thread CPU dpdk flows RX pps err Gbps TX pps Gbps ALL dpdk flows RX pps err Gbps TX pps Gbps rteethstatsreset Function not supported done Server Software BigIP Server Hostname Server Port SSLTLS Protocol TLSv ECDHERSAAES GCMSHA Document Path Document Length bytes Number of Cores Concurrency Level Time taken for tests seconds Complete requests Failed requests Write errors Total transferred bytes HTML transferred bytes Requests per second sec mean Time per request ms mean Time per request ms mean across all concurrent requests Transfer rate Kbytessec received Connection Times ms min mean sd median max Connect Processing Waiting Total Percentage of the requests served within a certain time ms longest request RunMainLoop MTCP thread finished mtcpfreecontext MTCP thread joined mtcpdestroy All MTCP threads are joined this patch adds a userlevel thread support to mTCP enabled by running the configure script with enableuctx option I am testing mTCP in KVM guest with IXGBE SRIOV VF provisioned the epwget runs fine with one core but if I give it two cores asymmetric flow direction happens for example pre appsexampleepwget f appsexampleepwgetconf N c Configuration updated by mtcpsetconf Application configuration URL of totalflows of cores Concurrency Loading mtcp configuration from appsexampleepwgetconf Loading interface setting probeallrtedevices Could not find pci info on dpdk device Is it a dpdkattached interface EAL Detected lcores EAL Detected NUMA nodes EAL Autodetected process type PRIMARY EAL Multiprocess socket varrundpdkrtempsocket EAL No free hugepages reported in hugepages kB EAL Probing VFIO support EAL WARNING cpu flags constanttscyes nonstoptscno using unreliable clock cycles EAL PCI device on NUMA socket EAL Invalid NUMA socket default to EAL probe driver ed netixgbevf Total number of attached devices Interface name dpdk EAL Autodetected process type PRIMARY Configurations Number of CPU cores available Number of CPU cores to use Maximum number of concurrency per core Maximum number of preallocated buffers per core Receive buffer size Send buffer size TCP timeout seconds TCP timewait seconds NICs to print statistics dpdk Interfaces name dpdk ifindex hwaddr D C ipaddr netmask Number of NIC queues Loading routing configurations from configrouteconf Routes Destination Mask Masked Route ifdx Destination Mask Masked Route ifdx Loading ARP table from configarpconf ARP Table IP addr dsthwaddr E BA E Initializing port ixgbevfdevconfigure VF cant disable HW CRC Strip Ethdev portid txqueueid new added offloads x must be within prequeue offload capabilities x in rteethtxqueuesetup Ethdev portid txqueueid new added offloads x must be within prequeue offload capabilities x in rteethtxqueuesetup done dpdkloadmodule Failed to get flow control info dpdkloadmodule Failed to set flow control info errno Checking link statusdone Port Link Up speed Mbps fullduplex Configuration updated by mtcpsetconf CPU initialization finished mtcpcreatecontext CPU is now the master thread Thread handles flows connecting to CPU dpdk flows RX pps err Gbps TX pps Gbps ALL dpdk flows RX pps err Gbps TX pps Gbps CPU dpdk flows RX pps err Gbps TX pps Gbps ALL dpdk flows RX pps err Gbps TX pps Gbps CPU initialization finished Response size set to Thread handles flows connecting to CPU dpdk flows RX pps err Gbps TX pps Gbps CPU dpdk flows RX pps err Gbps TX pps Gbps ALL dpdk flows RX pps err Gbps TX pps Gbps CPU dpdk flows RX pps err Gbps TX pps Gbps CPU dpdk flows RX pps err Gbps TX pps Gbps ALL dpdk flows RX pps err Gbps TX pps Gbps CPU dpdk flows RX pps err Gbps TX pps Gbps CPU dpdk flows RX pps err Gbps TX pps Gbps pre here is the debug log for core log note the tcp source port connection SYN is initiated by core but the SYNACK is received by core no existing TCP stream matches the flow on core thus the CreateNewFlowHTEntry Weird packet comes core log pre MTCPRunThread CPU initialization finished STREAM CreateTCPStream CREATED NEW TCP STREAM ISS STATE mtcpconnect Stream TCPSTSYNSENT RunMainLoop CPU mtcp thread running IN IPID TTL TCP S A seq ack WDW len CreateNewFlowHTEntry Weird packet comes IPID TTL TCP S A seq ack WDW len IN IPID TTL TCP S A seq ack WDW len STATE HandleTCPSTSYNSENT Stream TCPSTESTABLISHED IN IPID TTL TCP A seq ack WDW len IN IPID TTL TCP F A seq ack WDW len STATE HandleTCPSTESTABLISHED Stream TCPSTCLOSEWAIT STREAM CreateTCPStream CREATED NEW TCP STREAM ISS STATE mtcpconnect Stream TCPSTSYNSENT STATE HandleApplicationCalls Stream TCPSTLASTACK IN IPID TTL TCP A seq ack WDW len STATE HandleTCPSTLASTACK Stream TCPSTCLOSED STREAM DestroyTCPStream DESTROY TCP STREAM CLOSED STREAM DestroyTCPStream Destroyed Remaining flows IN IPID TTL TCP S A seq ack WDW len CreateNewFlowHTEntry Weird packet comes IPID TTL TCP S A seq ack WDW len IN IPID TTL TCP S A seq ack WDW len CreateNewFlowHTEntry Weird packet comes IPID TTL TCP S A seq ack WDW len IN IPID TTL TCP S A seq ack WDW len CreateNewFlowHTEntry Weird packet comes IPID TTL TCP S A seq ack WDW len pre core log pre MTCPRunThread CPU initialization finished RunMainLoop CPU mtcp thread running STREAM CreateTCPStream CREATED NEW TCP STREAM ISS STATE mtcpconnect Stream TCPSTSYNSENT IN IPID TTL TCP S A seq ack WDW len STATE HandleTCPSTSYNSENT Stream TCPSTESTABLISHED IN IPID TTL TCP A seq ack WDW len IN IPID TTL TCP F A seq ack WDW len STATE HandleTCPSTESTABLISHED Stream TCPSTCLOSEWAIT STREAM CreateTCPStream CREATED NEW TCP STREAM ISS STATE mtcpconnect Stream TCPSTSYNSENT STATE HandleApplicationCalls Stream TCPSTLASTACK IN IPID TTL TCP A seq ack WDW len STATE HandleTCPSTLASTACK Stream TCPSTCLOSED STREAM DestroyTCPStream DESTROY TCP STREAM CLOSED STREAM DestroyTCPStream Destroyed Remaining flows IN IPID TTL TCP S A seq ack WDW len CreateNewFlowHTEntry Weird packet comes IPID TTL TCP S A seq ack WDW len IN IPID TTL TCP S A seq ack WDW len CreateNewFlowHTEntry Weird packet comes IPID TTL TCP S A seq ack WDW len IN IPID TTL TCP S A seq ack WDW len CreateNewFlowHTEntry Weird packet comes IPID TTL TCP S A seq ack WDW len IN IPID TTL TCP S A seq ack WDW len CreateNewFlowHTEntry Weird packet comes IPID TTL TCP S A seq ack WDW len IN IPID TTL TCP S A seq ack WDW len CreateNewFlowHTEntry Weird packet comes IPID TTL TCP S A seq ack WDW len RunMainLoop MTCP thread out of main loop MTCPRunThread CPU initialization finished pre is this something need to be addressed in mtcpsrcrssc pre RSS redirection table is in the little endian byte order intel idx val qid val numqueues IXGBE Intel X NIC Rx queue LS bits of RSS hash mod N I E Intel XL NIC Rx queue LS bits of RSS hash mod N define RSSBITMASKIXGBE x F define RSSBITMASKI E x FF pre After bind my ens which is AWSENA nic to vfiopci driver the system cannot see the device anymore I can successfully complete the compiling process But dont know how to run epserver through that ens interface Network devices using DPDKcompatible driver Elastic Network Adapter ENA ec drvvfiopci unusedena Network devices using kernel driver Elastic Network Adapter ENA ec ifens drvena unusedvfiopci Active I noticed that TCPCalcChecksum is consuming CPU in my workload profile I want to offload this calculation to hardwareNIC I noticed DISABLEHWCSUM flag in tcpinc etc Where should I disable this flag to enable hardware checksum calculation Or is there any other way to do this Thanks Hello I am trying to write an application with mTCP which repeatedly sends multiple requests to the server without waiting for a response In short we are not following the request response model directly However I have observed that I am only able to send as much packets as specified by the RECVBUFF variable For example if RECVBUFF was set and my single requests size is then I am only able to send two packets After that mtcpwrite throws an EAGAIN error According to mtcpwrite link documentation EAGAIN means that I need to send the message again until buffer is available Which in my case means I have to repeatedly call mtcpwrite until it succeeds which in essence means wasted CPU cycles Can you please guide what will be the best way to achieve what I need with mTCP Is there a way to flush the packets without waiting for the buffer Regards I have a distributed storage software that wants to use mtcp I need to start processes metanode and datanode on each machine I have machines Each machine needs to start metanode and datanode and each process needs Communicate with each other then I use openNetVM Can I meet my needs Hello Let say I have two mtcp threads running on two different cores which are reading packets from the NIC After receiving a packet the mtcp thread puts it in a ring buffer Another thread nonmtcp thread running on a third core using rteealremotelaunch reads the packet from that ring buffer does some processing and generates a response That response is then send to the mtcp thread which received the packet initially from NIC using a different ring buffer Finally mtcp sends the response to the NIC using its own TX queue My question is this can I have a thread in my program which doesnt directly communicate with NIC nonmtcp thread Thanks