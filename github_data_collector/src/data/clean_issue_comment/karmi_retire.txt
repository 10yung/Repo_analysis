Sup I deal with the problem for three days In my project where I use search in model Record Ive implemented two buttons Delete index and Refresh index First button is redirecting page to controller deleteindex where I execute Recordtireindexdelete Second button is redirecting page to controller refreshindex where the index is refreshing via Sidekiq worker where I execute Recordimport Main problem When I press Delete index it works correct When I press Refresh index the index is imports correctly but order by date is fully broken Ive attached some screenshots with the problem Screenshot without problem order is working Screenshot with problem order is broken after I pressed Delete index and Refresh index I can fix second case only if I do actions in this sequence Execute Recordtireindexdelete Shutdown RoR server Execute RoR server with rails s Execure Recordimport Some piece of code recordscontrollerrb ruby def refreshindex if params refresh RecordsImportperformasyncexec redirectto search end end def deleteindex if params delete Recordtireindexdelete redirectto search end end recordsimportrb ruby class RecordsImport include SidekiqWorker def performname if name exec Recordimport else return end end end My mapping in recordrb model ruby tire do mapping do indexes id index notanalyzed indexes timestamp type date format ddMMyyyy HHmm includeinall false indexes title analyzer snowball end end My search query ruby records Recordsearch page params page perpage do query do string end sort do by timestamp order desc end end Maybe Im doing something wrong but all suggestions welcome Thanks in advance and sorry for my bad English Add the preference feature described here Note that unit tests fail bash bundle exec rake testunit ERROR test Collection with ActiveModelSerializers should be serializable uninitialized constant ActiveModelArraySerializerSupport testunitresultscollectiontestrb in block levels in classResultsCollectionTest varlibgems gemsshouldacontext libshouldacontextcontextrb in instanceexec varlibgems gemsshouldacontext libshouldacontextcontextrb in block in runcurrentsetupblocks varlibgems gemsshouldacontext libshouldacontextcontextrb in each varlibgems gemsshouldacontext libshouldacontextcontextrb in runcurrentsetupblocks varlibgems gemsshouldacontext libshouldacontextcontextrb in block in createtestfromshouldhash varlibgems gemsmocha libmochaintegrationminitestversion to rb in run ERROR test Item with ActiveModelSerializers should be serializable undefined method attribute for MyItemSerializerClass testunitresultsitemtestrb in classMyItemSerializer testunitresultsitemtestrb in block levels in classResultsItemTest varlibgems gemsshouldacontext libshouldacontextcontextrb in instanceexec varlibgems gemsshouldacontext libshouldacontextcontextrb in block in runcurrentsetupblocks varlibgems gemsshouldacontext libshouldacontextcontextrb in each varlibgems gemsshouldacontext libshouldacontextcontextrb in runcurrentsetupblocks varlibgems gemsshouldacontext libshouldacontextcontextrb in block in createtestfromshouldhash varlibgems gemsmocha libmochaintegrationminitestversion to rb in run Tire API accepts searchtype option that works nice for the count search type but does not look like fitting well for the scan search which API handles in a different manner In order to reuse my search classes implemented over the Tire API I would like to create an Elasticsearch scan query passing by searchtype scan with Tiresearch instead of Tirescan I am actually able to assembly something really close to what I desire with the following code ruby Tiresearchorganizationgroups searchtype scan scroll m do s squery q qall end Major issue seems to be the lack of an eachdocument method on the Tire Search class Any chances of achieving this behavior with the current API Thanks in advance Hi I have a Tweet model which belongs to a Profile model Tweettitle text profileid Profilename visits I need to search for tweets which has a profile with specific name such as xxx The following is my code which does not work mapping do indexes id index notanalyzed indexes profileid index notanalyzed indexes title analyzer snowball boost indexes text analyzer snowball indexes createdat type date index notanalyzed indexes profile do indexes id index notanalyzed indexes name analyzer snowball end end def selfsearch q page tiresearchload true perpage page page do query string q defaultoperator AND if qpresent filter range createdat lte Timezonenow filter terms profileid execution or this works filter terms profilename PayamNavid this does not work end end Please help me Thank you in advance TireSearchSearchRequestFailed okfalsemessageUnable to connect to the server Is there is a limit in no of records data that could be sent back for a single query Hi Im trying to boost some of my results based on how old they are I have a model called Article which can be either an article or news This is specified in the field articletype Now I want to boost the results which is newer than months AND have articletype news but I have no luck so far Any ideas how I can do that with Tires DSL I am using actsastenant for multitenancy and when I tried to index my database following error is rake environment tireimport CLASSZameen FORCEtrue IMPORT Deleting index zameens IMPORT Creating index zameens with mapping zameenproperties IMPORT Importing Zameen rake aborted ActsAsTenantErrorsNoTenantSet ActsAsTenantErrorsNoTenantSet Im running tire with a Rails x app and ES Im trying to use the tireimportmodel rake task and get an error as if it cant find my ActiveRecord class Command I run rake tireimportmodel CLASSGarage RAILSENVstaging trace Error I get Invoke tireimportmodel firsttime Execute tireimportmodel rake aborted uninitialized constant Garage varwwwsmrsharedbundleruby gemstire libtiretasksrb in eval varwwwsmrsharedbundleruby gemstire libtiretasksrb in eval varwwwsmrsharedbundleruby gemstire libtiretasksrb in block levels in top required varwwwsmrsharedbundleruby gemsrake libraketaskrb in call varwwwsmrsharedbundleruby gemsrake libraketaskrb in block in execute varwwwsmrsharedbundleruby gemsrake libraketaskrb in each varwwwsmrsharedbundleruby gemsrake libraketaskrb in execute varwwwsmrsharedbundleruby gemsrake libraketaskrb in block in invokewithcallchain usrlibruby monitorrb in monsynchronize varwwwsmrsharedbundleruby gemsrake libraketaskrb in invokewithcallchain varwwwsmrsharedbundleruby gemsrake libraketaskrb in invoke varwwwsmrsharedbundleruby gemsrake librakeapplicationrb in invoketask varwwwsmrsharedbundleruby gemsrake librakeapplicationrb in block levels in toplevel varwwwsmrsharedbundleruby gemsrake librakeapplicationrb in each varwwwsmrsharedbundleruby gemsrake librakeapplicationrb in block in toplevel varwwwsmrsharedbundleruby gemsrake librakeapplicationrb in runwiththreads varwwwsmrsharedbundleruby gemsrake librakeapplicationrb in toplevel varwwwsmrsharedbundleruby gemsrake librakeapplicationrb in block in run varwwwsmrsharedbundleruby gemsrake librakeapplicationrb in standardexceptionhandling varwwwsmrsharedbundleruby gemsrake librakeapplicationrb in run varwwwsmrsharedbundleruby gemsrake binrake in top required varwwwsmrsharedbundleruby binrake in load varwwwsmrsharedbundleruby binrake in main Tasks TOP tireimportmodel Can I use regexp query with tire Should I use Native DSL if tire does not support regexp Best Regards 