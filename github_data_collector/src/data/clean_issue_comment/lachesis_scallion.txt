Reading the issues about this stacktrace Unhandled Exception SystemTypeInitializationException The type initializer for OpenSSLCoreNative threw an exception SystemEntryPointNotFoundException ERRloadcryptostrings at wrapper managedtonative OpenSSLCoreNativeERRloadcryptostrings at OpenSSLCoreNativecctor x in c e f c fb b d e d f End of inner exception stack trace at OpenSSLCoreThreadInitializationInitializeThreads x in c e f c fb b d e d f at scallionProgramMain SystemString args x in c d c dba cf e bed a c ERROR FATAL UNHANDLED EXCEPTION SystemTypeInitializationException The type initializer for OpenSSLCoreNative threw an exception SystemEntryPointNotFoundException ERRloadcryptostrings at wrapper managedtonative OpenSSLCoreNativeERRloadcryptostrings at OpenSSLCoreNativecctor x in c e f c fb b d e d f End of inner exception stack trace at OpenSSLCoreThreadInitializationInitializeThreads x in c e f c fb b d e d f at scallionProgramMain SystemString args x in c d c dba cf e bed a c I gathered that libssl dev is required but newer Ubuntu releases dont provide it at all Is there a solution to that problem Looks good LoopIteration HashCount MH Speed MHs Runtime Predicted Lack of work for the GPU Taking a nap LoopIteration HashCount MH Speed MHs Runtime Predicted Lack of work for the GPU Taking a nap LoopIteration HashCount MH Speed MHs Runtime Predicted Lack of work for the GPU Taking a nap Lack of work for the GPU Taking a nap LoopIteration HashCount MH Speed MHs Runtime Predicted Lack of work for the GPU Taking a nap LoopIteration HashCount MH Speed MHs Runtime Predicted Lack of work for the GPU Taking a nap LoopIteration HashCount MH Speed MHs Runtime Predicted Lack of work for the GPU Taking a nap LoopIteration HashCount MH Speed MHs Runtime Predicted Lack of work for the GPU Taking a nap Lack of work for the GPU Taking a nap LoopIteration HashCount MH Speed MHs Runtime Predicted Lack of work for the GPU Taking a nap LoopIteration HashCount MH Speed MHs Runtime Predicted Found new key Found unique keys Lack of work for GPU is it normal Just as the title says I am on Windows Debian Impossible to setup correctly Maybe somebody knows Is it possible in Linux to use the same way as in Windows install Visual studio Open scallionsln in VS and Build the solution This is under macOS The computation fails after about a minute and stops with the below error Info only in case someone might get some useful debug info from it Thanks for a cool tool btw mono Downloadsscallionv scallionexe d somekey WARNING The runtime version supported by this application is unavailable Using default runtime v Cooking up some delicions scallions Using kernel optimized from file kernelcl Optimized Using work group size Compiling kernel done Testing SHA hash CPU SHA d ae e bc ea GPU SHA d ae e bc ea Looks good LoopIteration HashCount MH Speed MHs Runtime Predicted Stacktrace at unknown xffffffff at wrapper managedtonative OpenSSLCoreNativei dRSAPublicKey intptrbyte x in c e f c fb b d e d f at scallionRSAWrappergetDER x in c d c dba cf e bed a c at scallionOnionToolConfigGetPublicKeyData scallionRSAWrapperint x in c d c dba cf e bed a c at scallionCLRuntimeCreateInput x c in c d c dba cf e bed a c at SystemThreadingThreadHelperThreadStartContext object x in e f e e b fac ee c at SystemThreadingExecutionContextRunInternal SystemThreadingExecutionContextSystemThreadingContextCallbackobjectbool x in e f e e b fac ee c at SystemThreadingExecutionContextRun SystemThreadingExecutionContextSystemThreadingContextCallbackobjectbool x in e f e e b fac ee c at SystemThreadingExecutionContextRun SystemThreadingExecutionContextSystemThreadingContextCallbackobject x b in e f e e b fac ee c at SystemThreadingThreadHelperThreadStart x in e f e e b fac ee c at wrapper runtimeinvoke objectruntimeinvokevoidthis objectintptrintptrintptr x d in e f e e b fac ee c Unhandled Exception SystemNullReferenceException Object reference not set to an instance of an object at wrapper managedtonative OpenSSLCoreNativei dRSAPublicKeyintptrbyte at scallionRSAWrappergetDER x in c d c dba cf e bed a c at scallionOnionToolConfigGetPublicKeyData scallionRSAWrapper rsa SystemInt expindex x in c d c dba cf e bed a c at scallionCLRuntimeCreateInput x c in c d c dba cf e bed a c at SystemThreadingThreadHelperThreadStartContext SystemObject state x in e f e e b fac ee c at SystemThreadingExecutionContextRunInternal SystemThreadingExecutionContext executionContext SystemThreadingContextCallback callback SystemObject state SystemBoolean preserveSyncCtx x in e f e e b fac ee c at SystemThreadingExecutionContextRun SystemThreadingExecutionContext executionContext SystemThreadingContextCallback callback SystemObject state SystemBoolean preserveSyncCtx x in e f e e b fac ee c at SystemThreadingExecutionContextRun SystemThreadingExecutionContext executionContext SystemThreadingContextCallback callback SystemObject state x b in e f e e b fac ee c at SystemThreadingThreadHelperThreadStart x in e f e e b fac ee c ERROR FATAL UNHANDLED EXCEPTION SystemNullReferenceException Object reference not set to an instance of an object at wrapper managedtonative OpenSSLCoreNativei dRSAPublicKeyintptrbyte at scallionRSAWrappergetDER x in c d c dba cf e bed a c at scallionOnionToolConfigGetPublicKeyData scallionRSAWrapper rsa SystemInt expindex x in c d c dba cf e bed a c at scallionCLRuntimeCreateInput x c in c d c dba cf e bed a c at SystemThreadingThreadHelperThreadStartContext SystemObject state x in e f e e b fac ee c at SystemThreadingExecutionContextRunInternal SystemThreadingExecutionContext executionContext SystemThreadingContextCallback callback SystemObject state SystemBoolean preserveSyncCtx x in e f e e b fac ee c at SystemThreadingExecutionContextRun SystemThreadingExecutionContext executionContext SystemThreadingContextCallback callback SystemObject state SystemBoolean preserveSyncCtx x in e f e e b fac ee c at SystemThreadingExecutionContextRun SystemThreadingExecutionContext executionContext SystemThreadingContextCallback callback SystemObject state x b in e f e e b fac ee c at SystemThreadingThreadHelperThreadStart x in e f e e b fac ee c LoopIteration HashCount MH Speed MHs Runtime Predicted mono version Mono JIT compiler version tarball Thu Jan GMT Copyright C Novell Inc Xamarin Inc and Contributors wwwmonoprojectcom TLS SIGSEGV altstack Notification kqueue Architecture amd Disabled none Misc softdebug Interpreter yes LLVM supported not enabled Suspend preemptive GC sgen concurrent by default mono Downloadsscallionv scallionexe l WARNING The runtime version supported by this application is unavailable Using default runtime v Id NameIntelR CoreTM i CPU GHz PreferredGroupSizeMultiple ComputeUnits ClockFrequency MaxConstantBufferSize MaxConstantArgs MaxMemAllocSize Id NameGeForce GTX Ti PreferredGroupSizeMultiple ComputeUnits ClockFrequency MaxConstantBufferSize MaxConstantArgs MaxMemAllocSize Id NameAMD Radeon Pro Compute Engine PreferredGroupSizeMultiple ComputeUnits ClockFrequency MaxConstantBufferSize MaxConstantArgs MaxMemAllocSize Fixes PS C Users Hannah Downloads scallionv scallionexe k gpg CAFEF D Cooking up some delicions scallions Using kernel optimized from file kernelcl Optimized Using work group size Compiling kernel done Testing SHA hash CPU SHA REDACTED GPU SHA REDACTED Looks good Lack of work for the GPU Taking a nap Lack of work for the GPU Taking a nap Lack of work for the GPU Taking a nap Lack of work for the GPU Taking a nap Lack of work for the GPU Taking a nap Lack of work for the GPU Taking a nap Lack of work for the GPU Taking a nap Lack of work for the GPU Taking a nap Lack of work for the GPU Taking a nap Lack of work for the GPU Taking a nap Lack of work for the GPU Taking a nap Lack of work for the GPU Taking a nap Lack of work for the GPU Taking a nap Lack of work for the GPU Taking a nap Lack of work for the GPU Taking a nap Lack of work for the GPU Taking a nap Lack of work for the GPU Taking a nap Lack of work for the GPU Taking a nap Lack of work for the GPU Taking a nap Lack of work for the GPU Taking a nap Lack of work for the GPU Taking a nap README says the average time to get a partial collision for GPG is length hashspeed Where does come from I believe it should be length hashspeed 