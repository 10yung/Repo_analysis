Please update configfile in tools to the actual working Thank You The wiki gives instructions on how to emulate RPi but some instructions do not match current Raspbian Buster image and there is no explanation for why the latter steps are required eg passing drive instead of hda option One might assume there is some efficiency improvement but this is not explained The system seems to work without these modifications While the emulated raspbian boots without issues executing certain programs get killed with an Illegal Instruction exception Using gdb layout asm to find out the last executed instruction shows vldr Has anybody else encountered this behaviour Edit The binary was compiled for armlinuxgnueabihf and runs fine on real hardware I tried on win x but there is no graphic display qemusystemarmexe version QEMU emulator version v rc ge dfdcb dirty Copyright c Fabrice Bellard and the QEMU Project developers qemusystemarm M versatilepb cpu arm m drive file raspbianbusterimgindex mediadiskformatraw net nic net userhostfwdtcp dtb versatilepbdtb kernel kernelqemu buster append rootdevsda panic noreboot This allows for builds on nonLinux machines I am not very familiar with QEMU for me I want to customize a Raspbian image before getting my RPI this is about compiling and installing a CH USB driver I tried to compile the module with the version corresponding to uname r I get However when I try to install building dependecies including linuxheaders the version of headers installed from APT is which result in invalid module format when sudo insmod ch xko is running versatilepb works smoothly for me but the small amount of memory limits my usecase which requires atleast GB QEMU has virt machine which has large amount of flexibility and support I tried to use that quickly with the following command qemusystemarm M virt m kernel kernelqemu buster dtb bcm rpi bdtb append rw consolettyAMA loglevel rootdevmmcblk p fsckrepairyes rootwait memtest drive ifsdfile raspbianbusterliteimgformatrawidhd device virtioblkdevicedrivehd netdev useridmynet device virtionetdevicenetdevmynet serial stdio However this leads to no output of any kind whatsoever After reading the script provided in tools directory I believe it is a patched version of kernel source provided by Raspberry Pis GitHub However I am still confused about the parts where it is different from the standard raspbian kernel kernel limg And how these two kernels are different from debianarmhf kernel I would be grateful if you could help me with running qemukernel from this repo or standard raspbian kernel on a virt machine I am able to run raspbian OS on raspi machine by QEMU using following command qemusystemarm M raspi kernel kernel limg dtb bcm rpi bdtb drive file raspbianbusterliteimgformatrawifsd append rw consolettyAMA loglevel rootdevmmcblk p fsckrepairyes rootwait memtest serial stdio i want to do some dev on qemurpi with kernel modules support but it seems the linuxheaders could not be installed first the boot log systemd Started Remount Root and Kernel File Systems OK Started Remount Root and Kernel File Systems systemd systemdmodulesloadservice Main process exited codeexited status FAILURE systemd Failed to start Load Kernel Modules FAILED Failed to start Load Kernel Modules See systemctl status systemdmodulesloadservice for details the headers install log sudo apt install linuxheadersuname r Reading package lists Done Building dependency tree Reading state information Done E Unable to locate package linuxheaders E Couldnt find any package by glob linuxheaders E Couldnt find any package by regex linuxheaders Iwant to virtualize a sd card which is connected on mmcblk this is my command sudo qemusystemarm M versatilepb cpu arm m drive ifsdindex mediadisk net nic net userhostfwdtcp dtb versatilepbdtb kernel kernelqemu stretch append rootdevsda panic noreboot serial stdio Home directory not accessible Permission denied pulseaudio pacontextconnect failed pulseaudio Reason Connection refused pulseaudio Failed to initialize PA contextaudio Could not init pa audio driver Home directory not accessible Permission denied Uncompressing Linux done booting the kernel vpbsicwrite Bad register offset x c Booting Linux on physical CPU x Linux version ubuntuip gcc version UbuntuLinaro ubuntu Sun Jan UTC CPU ARMv compatible processor fb revision ARMv cr c d CPU VIPT aliasing data cache unknown instruction cache OF fdt Machine model ARM Versatile PB Memory policy Data cache writeback Built zonelists mobility grouping on Total pages Kernel command line rootdevsda panic PID hash table entries order bytes Dentry cache hash table entries order bytes Inodecache hash table entries order bytes Memory K K available K kernel code K rwdata K rodata K init K bss K reserved K cmareserved Virtual kernel memory layout vector xffff xffff kB fixmap xffc xfff kB vmalloc xd xff MB lowmem xc xd MB modules xbf xc MB text xc xc d kB init xc c xc f kB data xc f xc e kB bss xc cf xc c kB NRIRQS nrirqs preallocated irqs VIC d id x vendor x FPGA IRQ chip intc d irqs parent IRQ clocksource armsp mask xffffffff maxcycles xffffffff maxidlens ns schedclock bits at kHz resolution ns wraps every ns Failed to initialize ambatimer e schedclock bits at MHz resolution ns wraps every ns Console colour dummy device x console tty enabled Calibrating delay loop BogoMIPS lpj pidmax default minimum Mountcache hash table entries order bytes Mountpointcache hash table entries order bytes Disabling memory control group subsystem CPU Testing write buffer coherency ok Setting up static identity map for x x c devtmpfs initialized random getrandomu called from buckettablealloc x x a with crnginit VFP support v implementor architecture part variant b rev clocksource jiffies mask xffffffff maxcycles xffffffff maxidlens ns futex hash table entries order bytes NET Registered protocol family DMA preallocated KiB pool for atomic coherent allocations OF ambadeviceadd failed for ambasmc OF ambadeviceadd failed for ambampmc OF ambadeviceadd failed for ambasctl e OF ambadeviceadd failed for ambawatchdog e OF ambadeviceadd failed for ambasci f OF ambadeviceadd failed for ambassp f OF ambadeviceadd failed for ambafpgascia Serial AMBA PL UART driver f uart ttyAMA at MMIO x f irq basebaud is a PL rev console ttyAMA enabled f uart ttyAMA at MMIO x f irq basebaud is a PL rev f uart ttyAMA at MMIO x f irq basebaud is a PL rev uart ttyAMA at MMIO x irq basebaud is a PL rev vgaarb loaded SCSI subsystem initialized clocksource Switched to clocksource armsp NET Registered protocol family TCP established hash table entries order bytes TCP bind hash table entries order bytes TCP Hash tables configured established bind UDP hash table entries order bytes UDPLite hash table entries order bytes NET Registered protocol family RPC Registered named UNIX socket transport module RPC Registered udp transport module RPC Registered tcp transport module RPC Registered tcp NFSv backchannel transport module NetWinder Floating Point Emulator V double precision workingset timestampbits maxorder bucketorder Installing knfsd copyright C okirmonadswbde jffs version NAND Red Hat Inc romfs ROMFS MTD C Red Hat Inc p Installing v fs p file system support Block layer SCSI generic bsg driver version loaded major io scheduler noop registered io scheduler deadline registered io scheduler cfq registered default io scheduler mqdeadline registered io scheduler kyber registered pl gpio e gpio PL GPIO chip x e registered pl gpio e gpio PL GPIO chip x e registered pl gpio e gpio PL GPIO chip x e registered pl gpio e gpio PL GPIO chip x e registered OF PCI host bridge ambapci ranges OF PCI IO x x ffff x OF PCI MEM x x fffffff x OF PCI MEM x x fffffff x versatilepci pci PCI core found slot versatilepci pci PCI host bridge to bus pcibus root bus resource bus ff pcibus root bus resource io x xffff pcibus root bus resource mem x x fffffff pcibus root bus resource mem x x fffffff pref PCI bus Fast back to back transfers disabled pci c BAR assigned mem x x fff pci c BAR assigned mem x x ff pci c BAR assigned io x x ff clcdpl x dev PL designer rev at x clcdpl x dev Versatile hardware VGA display Console switching to colour frame buffer device x brd module loaded sym c xx c enabling device sym a rev x at pci c irq sym No NVRAM ID Fast LVD parity checking sym SCSI BUS has been reset scsi host sym random fast init done scsi CDROM QEMU QEMU CDROM PQ ANSI scsi target tagged command queuing enabled command queue depth scsi target Beginning Domain Validation scsi target Domain Validation skipping write tests scsi target Ending Domain Validation sr sr scsi mmc drive x x cdrw xaform cdda tray cdrom Uniform CDROM driver Revision smc xc v sep by Nicolas Pitre nicofluxnicnet smc x net eth SMC C xFD rev at d b IRQ smc x net eth Ethernet addr rtcds registered as rtc IR NEC protocol handler initialized IR RC xsz protocol handler initialized IR RC protocol handler initialized IR JVC protocol handler initialized IR Sony protocol handler initialized IR SANYO protocol handler initialized IR Sharp protocol handler initialized IR MCE Keyboardmouse protocol handler initialized IR XMP protocol handler initialized versatile reboot driver registered mmcipl x fpga aliases ID not available mmcipl x fpga mmc PL manf rev at x irq pio mmcipl x fpga DMA channels RX none TX none input AT Raw Set keyboard as devicesplatformambaambafpga kmiserio inputinput mmcipl x fpga b aliases ID not available mmcipl x fpga b mmc PL manf rev at x b irq pio mmcipl x fpga b DMA channels RX none TX none ledssyscon coremoduleled registered LED versatile ledssyscon coremoduleled registered LED versatile ledssyscon coremoduleled registered LED versatile ledssyscon coremoduleled registered LED versatile ledssyscon coremoduleled registered LED versatile ledssyscon coremoduleled registered LED versatile ledssyscon coremoduleled registered LED versatile ledssyscon coremoduleled registered LED versatile ledtrigcpu registered to indicate activity on CPUs Netfilter messages via NETLINK v nfconntrack version buckets max iptables C Netfilter Core Team NET Registered protocol family Bridge firewalling registered pnet Installing P support rtcds setting system clock to UTC uartpl f uart no DMA platform data input ImExPS Generic Explorer Mouse as devicesplatformambaambafpga kmiserio inputinput VFS Cannot open root device sda or unknownblock error Please append a correct root boot option here are the available partitions ram driver ram driver ram driver ram driver ram driver ram driver ram driver ram driver ram driver ram driver a ram driver b ram driver c ram driver d ram driver e ram driver f ram driver b sr driver sr Kernel panic not syncing VFS Unable to mount root fs on unknownblock CPU PID Comm swapper Not tainted Hardware name ARMVersatile Device Tree Support c c c unwindbacktrace from c a c showstack x x c a c showstack from c c panic xb x c c c panic from c ca d mountblockroot x b x a c ca d mountblockroot from c ca b mountroot xf x c ca b mountroot from c ca preparenamespace x x c c ca preparenamespace from c c dc kernelinitfreeable x x b c c dc kernelinitfreeable from c b kernelinit x xf c b kernelinit from c fa retfromfork x x c Rebooting in seconds The config for includes the required settings for an NFScapable kernel lines CONFIGNETWORKFILESYSTEMSy CONFIGNFSFSy CONFIGNFSV y CONFIGNFSV y CONFIGNFSV ACL is not set CONFIGNFSV is not set CONFIGNFSSWAP is not set CONFIGROOTNFSy However the default config file and the config file are missing these settings Would it be possible to get these included as standard