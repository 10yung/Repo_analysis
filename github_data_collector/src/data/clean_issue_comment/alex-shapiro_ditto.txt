Hi Could you comment compare ditto implementation with JSON CRDT paper PDF Is it using same principles and algorithms or not What are the differences There are Scala and Haskell implementations of JSON CRDT based on that paper In some cases Id like to define a specific siteid that can now be done with newwithid Adds Listiter self Ill likely be wanting iterators for Set and Map soon as well Ill send PRs as needs come up Curious if this supports garbage collection concepts Id love to use this with a JavaScript frontend Any recommendations for having it work with a JavaScript client over HTTP Also are you basing this library on CvRDTs convergent replicated data types or CmRDTs commutative replicated data types It would be nice if Site ID was not limited to u as a datatype and instead could be anything that implements the traits needed to function Ie Serde traits Eq and Hash Im not sure how tightly coupled the implementation is to u at the moment This would allow a more decentralised approach at Site IDs by using something such as a Random UUID to be used in place of a u Right now Ditto discards any REMOVE op that is received before its corresponding INSERT op This leads to inconsistencies in the following case site INSERTA op site EXECUTEop site REMOVEA op site EXECUTEop site EXECUTEop This PR fixes the bug by caching any REMOVE op received before its corresponding INSERT op and executing the REMOVE op once the INSERT has been executed