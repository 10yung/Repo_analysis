Utility to process many message files with the same formatter Used for integration testing We should pass them through a Markdown processor such as Marked I have rewritten the query objects and split them up They are now more focussed and I believe simpler They are also more decoupled so it should be easier to use with Markdown in the future The React components have also been simplified a little adding a new Wrapper component that sets up query objects and creates the necessary contexts NAMING YOUR ISSUE Please prefix your issue with the name of the subproject eg messages Define new StepDef message This makes it easier to get some context when reading the names of issues These sections are meant as guidance for you to help you give the kind of information well need to help with your issue If a section doesnt seem to fit just skip it In general Please provide as much information as you can to help us solving your problem Summary Provide a general summary description of the issue When using gherkinjavascript standalone in a NodeJS script fromPaths seems nonaccessible Expected Behavior I should be able to use fromPaths If youre describing a bug tell us what should happen If youre suggesting a changeimprovement tell us how it should work Feel free to use Given Then Then if that helps but please add some plainlanguage context too Current Behavior Cant use fromPaths If describing a bug tell us what happens instead of the expected behavior If suggesting a changeimprovement explain the difference from current behavior If you have got some output place it in the code block below Otherwise remove it node UnhandledPromiseRejectionWarning TypeError GherkinfromPaths is not a function at parseConfigs UsersmsalviareposjwplayermobilesdkworkspacemobileqawdiomakeCoverageReportjs at Objectanonymous UsersmsalviareposjwplayermobilesdkworkspacemobileqawdiomakeCoverageReportjs at Modulecompile internalmodulescjsloaderjs at ObjectModuleextensionsjs internalmodulescjsloaderjs at Moduleload internalmodulescjsloaderjs at tryModuleLoad internalmodulescjsloaderjs at FunctionModuleload internalmodulescjsloaderjs at FunctionModulerunMain internalmodulescjsloaderjs at startup internalbootstrapnodejs at bootstrapNodeJSCore internalbootstrapnodejs node UnhandledPromiseRejectionWarning Unhandled promise rejection This error originated either by throwing inside of an async function without a catch block or by rejecting a promise which was not handled with catch rejection id node DEP DeprecationWarning Unhandled promise rejections are deprecated In the future promise rejections that are not handled will terminate the Nodejs process with a nonzero exit code Possible Solution does work properly and fromPaths is valid Not obligatory but suggest a fixreason for the bug or ideas how to implement the addition or change Steps to Reproduce for bugs Provide a link to a live example or an unambiguous set of steps to reproduce this bug Include code to reproduce if relevant Write vanilla JS file using fromPaths Run file const Gherkin requiregherkin const fs requirefs const options defaultDialect en includeSource true includeGherkinDocument true includePickles true createReadStream path fscreateReadStreampath encoding utf async function parseConfigs const envelopes await streamToArray GherkinfromPaths featuresbasicbasicmp feature options async function streamToArrayreadableStream return new Promiseresolve reject const items readableStreamondata itemspushbinditems readableStreamonerror err rejecterr readableStreamonend resolveitems parseConfigsthenr consolelogParsing r Context Motivation I am attempting to create statistics regarding Cucumber features How has this issue affected you What are you trying to accomplish Providing context helps us come up with a solution that is most useful in the real world Your Environment If youre reporting a bug include as many relevant details about the environment you experienced the bug in Version used Operating System and version macOS Link to your project Private Using the i flag expression to turn on case insensitive matching causes runtime errors because TreeRegexp mistakenly considers it to be a capturing group I didnt even know about flag expressions Here is a list of whats supported Ruby Java search for embedded flag expression Go not sure whats supported General List JavaScript does not appear to support them but I think we should implement this in JavaScript as well as if they were The different implementations are more similar that way Summary When querying GherkinQuerylocation and that the id of the node is unknown we get an exception raised with message No location found for eee Known aaa bbb ccc ddd fff with aaa bbb etc being UIDs A nicetohave in order to ease debugging would be information about which kind of AST node is referenced by each uid This was raised by mattwynne on Slack The Go cucumberjsonformatter executables should print the version when invoked with version Otherwise it is impossible for users to know what version they have See how this is done in gherkin We should add RuboCop and integrate it in the build in the same way as tslinteslint for TypeScript This is a start there are a lot of warnings to fixignore The config and execution of rubocop also needs to be lifted up to templatesruby Summary has changed the behaviour of the snippet generator such that it no longer behaves as expected with numerical parameters Expected Behavior Given Sean is m from Lucy Sean is intm from Lucy Given a coffee costs a coffee costs double or maybe float or historically intint Current Behavior Given Sean is m from Lucy Sean is m from Lucy Given a coffee costs a coffee costs int Possible Solution Numerical parameters should be bounded by whitespace at one side at least double or intint m intm ms intms i n i n m m Careful consideration of whether punctuation counts as whitespace is needed and are used differently by locale Context Motivation This change results in nonintuitive Cucumber expressions in snippets Your Environment Version used CucumberJVM Operating System and version Macos Catalina Link to your project We should explain more of the vision behind cucumbermessages In particular the various consumers of messages This is necessary in order to explain to Cucumber implementors why they should implement the message protocol