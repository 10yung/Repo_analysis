Tests failed on rails Failures VersionistCopyApiVersionGenerator v V api version exists testframework testunit should copy old controller tests to new controller tests FailureError parserenumeratorfirsttraverse do node existingroutes nodesource if nodetype fcall nodesource apiversionmodule s smodulenameforrouteoldmodulename end NoMethodError undefined method enumerator for trueTrueClass Did you mean enumfor libgeneratorsversionistcopyapiversioncopyapiversiongeneratorrb in block in copyroutes hometravisrvmgemsruby gemsthor libthoractionsrb in block in inroot hometravisrvmgemsruby gemsthor libthoractionsrb in block in inside hometravisrvmgemsruby gemsthor libthoractionsrb in inside hometravisrvmgemsruby gemsthor libthoractionsrb in inroot libgeneratorsversionistcopyapiversioncopyapiversiongeneratorrb in copyroutes hometravisrvmgemsruby gemsthor libthorcommandrb in run hometravisrvmgemsruby gemsthor libthorinvocationrb in invokecommand hometravisrvmgemsruby gemsthor libthorinvocationrb in block in invokeall hometravisrvmgemsruby gemsthor libthorinvocationrb in each hometravisrvmgemsruby gemsthor libthorinvocationrb in map hometravisrvmgemsruby gemsthor libthorinvocationrb in invokeall hometravisrvmgemsruby gemsthor libthorgrouprb in dispatch hometravisrvmgemsruby gemsthor libthorbaserb in start hometravisrvmgemsruby gemsrailties librailsgeneratorstestingbehaviourrb in block in rungenerator hometravisrvmgemsruby gemsactivesupport libactivesupporttestingstreamrb in capture hometravisrvmgemsruby gemsrailties librailsgeneratorstestingbehaviourrb in rungenerator hometravisrvmgemsruby gemsgeneratorspec libgeneratorspectestcaserb in methodmissing specgeneratorscopyapiversiongeneratorspecrb in block levels in top required Full log Hi I am trying to use the http header to specify the version version and version are the same ruby MyApiApplicationroutesdraw do apiversionmodule V header name Accept value applicationvndmycompanycom version do match foosformat foosindex via get match foosnoformat foosindex via get resources bars end end I am following the example and find out if I have a header named applicationvndmycompanycom version the application will still return instead of since I specify a higher version ruby MyApiApplicationroutesdraw do apiversionmodule V header name APIVERSION value default true do match foosformat foosindex via get match foosnoformat foosindex via get resources bars end end With this example I specifiy as the defaulth version If I have a invalid header like APIVERSION which is not supported yet but the application is still going to return which I guess it will use the default version Should this return since we specify an unsupported version My use case is like below controllers v stores somestorecontrollerrb users someusercontrollerrb I use the generator to do this like rails g versionistnewcontroller storesregistrations V But it will not count that stores as a module Is it possible to support this use case Or there is other better way to organize the structure Thanks It would be nice if it generates the same structure of controllers inside serializers folder when we also use activemodelserializers gem Its working with the rails app except default true options In the README there is an expected behaviour Policy that says the routes get output twice when running rake In rails it errors out with Usersmillisamiassetmanagementbundlegemsactionpack libactiondispatchroutingroutesetrb in addroute Invalid route name already in use apigpspositions ArgumentError You may have defined two routes with the same name using the as option or you may be overriding a route already defined by a resource with the same naming For the latter you can restrict the routes created with resources as explained here from Usersmillisamiassetmanagementbundlegemsactionpack libactiondispatchroutingmapperrb in addroute Is there any patch to make the default option true Im just wondering why this is the case and whether the generator should even be creating the controller spec Would it be possible to have an option allowing a route to have an alias for one or more apiversion values possible For example My API has a version and And I would like that when I called version it puts me in the scope of version ruby apiversionmodule V header APIVERSION value v do end apiversionmodule V header APIVERSION value v do end apiversionmodule V header APIVERSION values v v do end 