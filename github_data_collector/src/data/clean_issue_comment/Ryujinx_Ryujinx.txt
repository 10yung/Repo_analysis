 Implement all bits counterparts of the bits syscalls we currently have Still alive Make HLESwitch initialize when starting a game and dispose it when closing the GlScreen This also make HLE in charge of disposing the audio and gpu backend PS Im making a note here Huge success We need to add the commit hash and build number in our CI builds to make it easier to track issues Currently the main problem of the JIT cache is that functions are never removed from the cache improves that a bit by removing functions that are no longer used from the cache but we need to also support cache disposal When the emulation is ended all the memory used for the code should be freed and this is not happening currently Right now its not a big deal because ending emulation and starting a new game is not possible but it will be once this is supported We may want to consider having one JitCache per Translator instance JitCache is currently static and thus shared glBlitFramebuffer and glBlitNamedFramebuffer are affected by the GLFRAMEBUFFERSRGB capability This one has to be enabled or disabled accordingly when glBlitFramebuffer I havent found any register that controls this on the D engine its probably deduced from the texture format using a nonsRGB format view for blits with sRGB disabled One test case is for this issue is Links Awakenings splash screen Currently we have a considerable warnings during build for fields that are never used What happens is that those fields are used but the compiler has no way to know that either because they are accessed through reflection or in some other way We should suppress those warning messages to have a clean build output Register RASTERIZEENABLE is not implemented This one maps properly to OpenGLs GLRASTERIZERDISCARD and has to be enabled accordingly for drawing it also affects clearing but it isnt tested if this is also true on hardware If I remember correctly commercial games assume this register is enabled by default It is visible in Xenoblade Chronicles were there is a point in the middle of the screen This is because the game uses a vertex shader invocation with rasterization disabled as if it were a compute shader imagen imagen Screenshot taken by Discord user JoyConBoyForeverOctolimar Our current FCVTAS implementation need a fix for a variant The instruction at x eeba opcode x e c c is undefined Description FCVTAS V S V S Required by There are some games that renders to BGRA textures and OpenGL does not support this format so we currently use RGBA instead An example of such a game is Dragon Marked for Death Here is how it currently looks like Heres how it should look like image is not mine Resident Evil has a similar issue but its currently unknown if it is also caused by BGRA textures it needs further investigation