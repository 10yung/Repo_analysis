JSIL does not include attribute properties in the output example C ProtoMember AsReference true JSIL Attributeasm TypeRefProtoBufProtoMemberAttribute function return Is there a possibility to include the AsReferencetrue into the JSIL generated output Where do I have to look Hello i have a question Is possibile load a file from directory First supposition Load Texture From file Maybe using FileStream Get bytes from file and construct texture Other question i use Jint is a javascript interpreter for net need to read javascript file in the folder is possible DateTime object does not have most of the public methods available For example all Add methods like AddAddDays AddMonths AddYears etc Here is test case c using System public static class Program public static void Mainstring args var s DateTimeNow ConsoleWriteLinesAddDays The external method RepeatTResultTResultint was not implemented This commit introduces a test case and matching implementation returning a JSIL AbstractEnumerable returning the element the appropriate number of times The in C introduced in keyword for method parameters results in a crash when used in an interface but only if the class that is implementing the interface is cast back to the interface The code throws a SystemInvalidCastException at runtime Firefox Bug test project using System public struct TestStruct public int Field public interface TestInterface void TestMethodRefref TestStruct testStruct void TestMethodInin TestStruct testStruct public class TestClass TestInterface public void TestMethodRefref TestStruct testStruct public void TestMethodInin TestStruct testStruct class Program static void Mainstring args TestStruct testStruct new TestStruct TestClass interfaceClass new TestClass ConsoleWriteLine interfaceClassTestMethodRefref testStruct Works ConsoleWriteLine interfaceClassTestMethodIntestStruct Works ConsoleWriteLine TestInterfaceinterfaceClassTestMethodRefref testStruct Works ConsoleWriteLine TestInterfaceinterfaceClassTestMethodIntestStruct Crash throws SystemInvalidCastException Unable to cast object of type TestStruct to type ref TestStruct ConsoleWriteLineEnd There is no problem when using ref which is strange because in both cases the parameter is passed as valuetype TestStruct but with a SystemRuntimeInteropServicesInAttribute for the in parameter version However the in keyword results in two definitions for TestMethodIn First version of TestMethodIn method public hidebysig instance void TestMethodIn valuetype TestStruct testStruct cil managed param custom instance void mscorlib SystemRuntimeCompilerServicesIsReadOnlyAttributector Method begins at RVA x Code size x maxstack IL nop IL ret end of method TestClassTestMethodIn Second version of TestMethodIn method private final hidebysig newslot virtual instance void TestInterfaceTestMethodIn valuetype TestStruct modreq mscorlib SystemRuntimeInteropServicesInAttribute testStruct cil managed override method instance void TestInterfaceTestMethodInvaluetype TestStruct modreq mscorlib SystemRuntimeInteropServicesInAttribute param custom instance void mscorlib SystemRuntimeCompilerServicesIsReadOnlyAttributector Method begins at RVA x c Code size x maxstack IL ldarg IL ldarg IL call instance void TestClassTestMethodInvaluetype TestStruct IL ret end of method TestClassTestInterfaceTestMethodIn TestMethodRef method public final hidebysig newslot virtual instance void TestMethodRef valuetype TestStruct testStruct cil managed Method begins at RVA x Code size x maxstack IL nop IL ret end of method TestClassTestMethodRef Calling code IL ldstr IL c call void mscorlib SystemConsoleWriteLinestring IL nop IL ldloc IL ldlocas IL callvirt instance void TestInterfaceTestMethodRefvaluetype TestStruct IL a nop IL b ldstr IL call void mscorlib SystemConsoleWriteLinestring IL nop IL ldloc IL ldlocas IL callvirt instance void TestInterfaceTestMethodInvaluetype TestStruct modreq mscorlib SystemRuntimeInteropServicesInAttribute IL e nop DelegateMethod crashs when called in a constructor The same code works when called inside a member method that is called in the ctor class Class public Class Delegate d new Actionint int someVar var p dMethodGetParameters TypeError dgetMethod is null class Class public Class MemberMethod public void MemberMethod Delegate d new Actionint int someVar var p dMethodGetParameters TypeError dgetMethod is null public class JSILLimitations public static void DelegateBug Delegate d new Actionint int console var p dMethodGetParameters ConsoleWriteLineStatic method version works Class clazz new Class ConsoleWriteLineMember method call version works Class clazz new Class Crash ConsoleWriteLineCtor method version works I get an uncaught exception of type SystemInvalidCastException when I try to execute the following Load the document using Stream strm archiveGetFileStreampackagejson using StreamReader reader new StreamReaderstrm The following line crashes dynamic rootObject JsonConvertDeserializeObjectreaderReadToEnd The generated JSIL line that causes the crash somewhere in the NewtonSoftJsondll js code looks like this var rootObject T DDeserializeObjectS ConstructstrmReadToEnd Exception message in log div Unhandled exception at line Uncaught SystemInvalidCastException Unable to cast object of type NewtonsoftJsonJsonTextReader to type NewtonsoftJsonSerializationTraceJsonReader Edit The C code runs just fine in a compiled Windows application so the JSON data isnt corrupted Edit I also checked in the javascript debugger that the stream contains the correct json text value so everything got loaded correctly from the local file storage hello it is possible to use jsil for pascal language with tanks Barbosa When using jsil again assemblies compiled for netstandard x it reports some errors IndexOf function with StringComparison pararameter is not available Here is test case c using System public static class Program public static void Mainstring args var s abcdefabcdef ConsoleWriteLinesIndexOfABC StringComparisonOrdinalIgnoreCase 