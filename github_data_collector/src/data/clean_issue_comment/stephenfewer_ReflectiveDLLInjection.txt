currently had a big problem making exe file from the rdisin keep having Failed to open the DLL file Error when execute exe file from the project please let us know how to get working exe Firefox on Windows hooks kernel BaseThreadInitThunk which prevents the remote thread to start in the target see u kernel BaseThreadInitThunk KERNEL BaseThreadInitThunk ff d e bb af f mov r offset mozgluepatchedBaseThreadInitThunk ff a ff d ea ffe jmp r ff d ed c ff ret FFh This PR restores the function prologue if it is detected as indeed hooked happy to fix adapt anything youd like Also took the extra liberty of fixing the indentation in Rva Offset Cheers Dear stephenfewer Hope you are well I try to use this but i couldnt solve entire project Could you please explain how to use this How to inject a DLL Thanks When compiling a DLL which includes the ReflectiveDLLInjection project as one of its dependencies Visual Studio and later appear to make some alterations to the way the DLL compiles so that whilst it does end up compiling successfully still any attempts to call the exported ReflectiveLoader function of the injected DLL will cause an access violation in the hosting process and will result in the process crashing If the same code is compiled under Visual Studio there are no issues If I compile my dll as Multithreaded MT it crashes though if I compile it was Multithreaded DLL MD it doesnt crash Any idea why and how to fix it I make use of a big library that uses trycatch to exception handle and my application crashes when the throw statement is called in the code How can I deal with this problem Thank you On Windows x when i try to inject DLL into calcexe process tasklist calcexe Console Ko injectexe its give me Failed to inject the DLL Error Access denied I tried with the x and Win configuration and also with useradministrator rights but same error Why it doesnt work I am trying to update this loader At first im trying get to work And when i get to work i will try to get that with the name you can inject For example in c will be HANDLE processListCreateToolhelp SnapshotTH CSSNAPPROCESS PROCESSENTRY pInfo BOOL stTRUE pInfodwSizesizeofPROCESSENTRY Process FirstprocessList pInfo int myPid do ifstrcmppInfoszExeFile testexe myPidpInfoth ProcessID break Process Nextlista pInfo whilestFALSE So with the name you can inject into the process reference this feature can be added in your project Changed the initial remote process allocation type to RW instead of RWX and added a VirtualProtectEx call to change it to RX once it has been rewritten This will bypass any W X memory protections added CloseHandle to close the handle opened to read the dll file 