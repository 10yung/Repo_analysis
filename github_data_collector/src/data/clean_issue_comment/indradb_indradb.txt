Heyhu in my project I need to select all vertices and all of their respective properties that match a given type rust let tag StringfromTestTag let transaction selfdatastoretransactionunwrap let typefilter Typenewtagunwrap let vq RangeVertexQuerynewu MAXttypefilter let starttimestamp Instantnow let vertices transactiongetallvertexpropertiesvqunwrap printlnAfter getallvertexproperties starttimestampelapsed printlnVertices Len verticeslen dropvertices printlnAfter drop of vertices starttimestampelapsed Fetching the vertices is moderately fast however I was confused about how long it took to return from the function It turned out that dropping the verticesVec takes quite some time with release After getallvertexproperties ms After drop of vertices ms Dropping took ms FlameGraph corresponding with the drop img width altScreenshot at src I only recently started using Rust so Im not sure how to investigate the issue I created a repository that contains a project that replicates this behaviour Thanks for maintaining such a cool project Hi Id often like to query all available verticesedges in a query rather than limiting it to a number i dont know beforehand rust let query SpecificVertexQuerysingleuuiddefaultoutboundtTestoutboundtMyVertex This is my default use case Mostly I limit only the final result no matter how deeply chained the query is rust let vertices transactiongetverticesquerylimit Is it possible to support that api Thanks for that great library Ive been going over the code and Im not sure if there is currently a method to select a Vertex that has a specific property For instance if I have a collection of vertices with a name property how would I select all the vertices with the name property and a value of Joyce When using getvertexproperties it would be nice to know which vertex had the property and which ones did not When using getvertexproperties with a SpecificVertexQuerynew query if a node does not have the property there is no way to tell If a query had node ids and only one of them had the property then an only one result is returned and its not clear what node that result belongs to Is there a way around this without looping over each node and using SpecificVertexQuerysingle queries thanks Hello Is there a way to walk the graph given a source node without explicitly chaining together node and edge properties as a series of outbound and inbound Maybe depthfirst search with an edge type filter Thanks 