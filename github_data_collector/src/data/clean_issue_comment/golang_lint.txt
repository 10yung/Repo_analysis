I added golint to golands on save action but when savedafter file modified no tips found I must select Always on choice show console In Advanced Options So it can work normal I found that golint command always exit with status can it return with status when errors checked or need i pass more config params to run golint cmd While linting reference to the style guide are collected When running the binary there is no option to show these as additional output Can this be added according to The Flush and Close also have canonical signatures and meanings but they are not in commonMethods for now I agree that unitspecific names are bad for variables but in constants it may clarify their value Example GO const tenSeconds timeSecond As of now this gives the warning var tenSeconds is of type timeDuration dont use unitspecific suffix Seconds This is unfortunate as I find using constants like this very readable when doing timing and delays This patch introduces an option to fix pointed out warnings automatically This one provides such function partially actually it has the only naming autocorrection To be honest Im not confident about how to test this feature this patch contains a simple shellscript based test as you can see Could you please tell me if there is a good way Update I wrote a test case to check the behavior of autofix mode at ac b f ad a a c d d It can fix like so Ref Consider the following pattern which currently doesnt trigger any warnings type unexportedInterface interface func ExportedFunci unexportedInterface My understanding is that this pattern should be avoided since it can be troublesome to use on similar grounds to which golint does catch Seems like itd be nice if golint flagged this pattern as well The following is allowed but it doesnt do anything useful and especially not what one could expect recover and ignore the panic at a cursory reading Id argue theres no good reason why it should ever be written func foo defer recover it should instead be func foo defer func recover lint should probably emit a warning if it encounters defer recover While theres an argument to be made that possibly recovering and ignoring the panic is a questionable practice it does not change the fact that the specific form discussed above should generate a warning of some sort A quick search reveals that this actually happens in the wild although its not exceedingly common Not sure if this should go in vet or lint I can move it if needed During refactoring it happens to me a lot that I move stuff out of a function or method but leave a now unused argument Any plans on supporting the detection and highlighting of unused arguments I see that it is a complex problem because there are cases like a method which keeps an argument to fulfill an interface In the readme you write that one should please send mail before starting work on anything major Where should this mail go Please update the readme accordingly 