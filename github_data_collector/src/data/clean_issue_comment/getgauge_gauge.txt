 Thanks a lot for reporting issues to Gauge This is the issue tracker for reporting bugs or for requesting new feature and enhancements If you have any support related questions please refer our documentation at You can even ask questions on Google groups or on spectrum This is the issue tracker for Gauge core Find other components at Please delete irrelevant sections below Expected behavior Tell us what should happen Actual behavior Tell us what happens instead Steps to reproduce Gauge version Run gauge v on your system and paste the results here These are the release activities to be performed when releasing Gauge Pre release Check all commits that has been added with this release and make sure the relevant issues are testedclosed Check if all relevant testsFTs and LSP tests on gocd travis appveyor are passing Check if any plugins need to be released and release them Make sure there are no compatibility issues with released plugins Take a call on release Release Update docs to have correct version of Gauge in installation section Trigger the gaugedeploy pipeline Make a note of all external contributors and add thank you note in release notes Review the release notes and publish it Trigger the githubpublish stage of GaugeDeploy pipeline Triggeror check if triggered the website pipeline Triggeror check if triggered the documentation pipeline Triggeror check if triggered the manpage pipeline Post release Make sure website docs are pointing to the correct versions Send release mail to google groups Track the brew PR and make sure it gets merged Bump up gauge version for further development javalangreflectInvocationTargetException at jdkinternalreflectGeneratedMethodAccessor invokeUnknown Source at javabasejdkinternalreflectDelegatingMethodAccessorImplinvokeDelegatingMethodAccessorImpljava at javabasejavalangreflectMethodinvokeMethodjava at comintellijexecutionprocessProcessHandler invokeProcessHandlerjava at comsunproxyProxy onTextAvailableUnknown Source at comintellijexecutionprocessProcessHandlernotifyTextAvailableProcessHandlerjava at comintellijexecutionprocessColoredProcessHandlertextAvailableColoredProcessHandlerjava at comintellijexecutionprocessColoredProcessHandlercoloredTextAvailableColoredProcessHandlerjava at comintellijexecutionprocessAnsiEscapeDecoderprocessTextChunkAnsiEscapeDecoderjava at comintellijexecutionprocessAnsiEscapeDecoderescapeTextAnsiEscapeDecoderjava at comintellijexecutionprocessColoredProcessHandlernotifyTextAvailableColoredProcessHandlerjava at comintellijexecutionprocessBaseOSProcessHandlerSimpleOutputReaderonTextAvailableBaseOSProcessHandlerjava at comintellijutilioBaseOutputReadersendTextBaseOutputReaderjava at comintellijutilioBaseOutputReaderprocessInputBaseOutputReaderjava at comintellijutilioBaseOutputReaderreadAvailableNonBlockingBaseOutputReaderjava at comintellijutilioBaseDataReaderreadAvailableBaseDataReaderjava at comintellijutilioBaseDataReaderdoRunBaseDataReaderjava at comintellijutilConcurrencyUtilrunUnderThreadNameConcurrencyUtiljava at comintellijutilioBaseDataReaderlambdastart BaseDataReaderjava at javabasejavautilconcurrentExecutorsRunnableAdaptercallExecutorsjava at javabasejavautilconcurrentFutureTaskrunFutureTaskjava at javabasejavautilconcurrentThreadPoolExecutorrunWorkerThreadPoolExecutorjava at javabasejavautilconcurrentThreadPoolExecutorWorkerrunThreadPoolExecutorjava at javabasejavalangThreadrunThreadjava Caused by comgooglegsonJsonSyntaxException comgooglegsonstreamMalformedJsonException Unterminated string at line column path message at comgooglegsonGsonfromJsonGsonjava at comgooglegsonGsonfromJsonGsonjava at comgooglegsonGsonfromJsonGsonjava at comgooglegsonGsonfromJsonGsonjava at comthoughtworksgaugeexecutionrunnerGaugeOutputToGeneralTestEventsProcessorprocessServiceMessagesGaugeOutputToGeneralTestEventsProcessorjava at comintellijexecutiontestframeworksmrunnerOutputToGeneralTestEventsConverterprocessConsistentTextOutputToGeneralTestEventsConverterjava at comintellijexecutiontestframeworksmrunnerOutputToGeneralTestEventsConverter onTextAvailableOutputToGeneralTestEventsConverterjava at comintellijexecutiontestframeworksmrunnerOutputEventSplitterflushInternalOutputEventSplitterkt at comintellijexecutiontestframeworksmrunnerOutputEventSplitterflushInternaldefaultOutputEventSplitterkt at comintellijexecutiontestframeworksmrunnerOutputEventSplitterprocessInternalOutputEventSplitterkt at comintellijexecutiontestframeworksmrunnerOutputEventSplitterprocessOutputEventSplitterkt at comintellijexecutiontestframeworksmrunnerOutputToGeneralTestEventsConverterprocessOutputToGeneralTestEventsConverterjava at comintellijexecutiontestframeworksmSMTestRunnerConnectionUtil onTextAvailableSMTestRunnerConnectionUtiljava more Caused by comgooglegsonstreamMalformedJsonException Unterminated string at line column path message at comgooglegsonstreamJsonReadersyntaxErrorJsonReaderjava at comgooglegsonstreamJsonReadernextQuotedValueJsonReaderjava at comgooglegsonstreamJsonReadernextStringJsonReaderjava at comgooglegsoninternalbindTypeAdapters readTypeAdaptersjava at comgooglegsoninternalbindTypeAdapters readTypeAdaptersjava at comgooglegsoninternalbindReflectiveTypeAdapterFactory readReflectiveTypeAdapterFactoryjava at comgooglegsoninternalbindReflectiveTypeAdapterFactoryAdapterreadReflectiveTypeAdapterFactoryjava at comgooglegsonGsonfromJsonGsonjava more Steps to reproduce run gauge on intelij Gauge version Gauge version Commit Hash bc db Plugins htmlreport java screenshot spectacle Requirement Would like to have Test Report Aggregator html xml to show overall testing statistics Example Above plugin does support only for JUnit and TestNG reports Why this feature We have test jobs in jenkins and each producing html xml reports individually If we have feasible to display overall summary report where we can see PASS FAIL SKIPPED status in each jobs and how much execution time and overall execution time it is very convenient for us to see all results in one place instead of going to each job to check results Features required Need groovy script for pipeline to get overall summary report Can add groups teams where we can get summary for each team results overall summary for entire application Job Name Health checks Status Total Tests PASS FAIL SKIPPED Test Pass Percentage Duration and Last Run Screen Shot at PM Expected behavior Safari pops up and executes my tests Actual behavior If I execute the tests locally Safari pops up and everything works fine If I run the tests through Jenkins while having the Mac configured as an agent they fail with the following error Python Error Message Message Service usrbinsafaridriver unexpectedly exited Status code was Stacktrace Traceback most recent call last File usrlocallibpython sitepackagesgetgaugeexecutorpy line in executemethod stepimplparams File Usersjenkinsslavejenkinshomeworkspacecollectfeaturegaugemacdebugtestsstepimplutilsdriverpy line in init Driverdriver webdriverSafariexecutablepathdriverexecutablepath File usrlocallibpython sitepackagesseleniumwebdriversafariwebdriverpy line in init selfservicestart File usrlocallibpython sitepackagesseleniumwebdrivercommonservicepy line in start selfassertprocessstillrunning File usrlocallibpython sitepackagesseleniumwebdrivercommonservicepy line in assertprocessstillrunning selfpath returncode seleniumcommonexceptionsWebDriverException Message Service usrbinsafaridriver unexpectedly exited Status code was I read that this issue might be related to the way the agent connects to the master I tried both via SSH and Java direct connection All other webdrivers work fine Chrome and Firefox only Safari fails In the console app I see the same error message XPC connection to comappleWebDriverHTTPService was interrupted the server probably exited or crashed I also tried to start the safaridriver process manually with safaridriver p Attempting to establish XPC connection to comappleWebDriverHTTPService Configuring server Server started macOS Mac Pro Steps to reproduce Setup Mac as Jenkins agent connect agent through Java not SSH Start tests in Jenkins job with gauge run env safari specs Gauge version Gauge version Commit Hash bc db Thanks a lot for reporting issues to Gauge This is the issue tracker for reporting bugs or for requesting new feature and enhancements If you have any support related questions please refer our documentation at You can even ask questions on Google groups or on gitter This is the issue tracker for Gauge core Find other components at Please delete irrelevant sections below Expected behavior gauge run specs should exit with a nonzero code when there are failures at the hooks level These failures should be considered as test failures and should be included in reports as same This is especially useful when integrating with CICD tools the current behavior marks the builds as PASSED even though there are failures during setup and tests might not run thus leading to false positives Actual behavior Any failures at the hooks level is not reported in XML report and gauge run spec command returns as the exit code even when there are failures in beforesuite beforespec etc hooks This is a concern when integrating with CICD tools as jobsbuilds are marked as PASSED even though there are failures Gauge version Gauge version Commit Hash f Plugins python xmlreport Thanks a lot for reporting issues to Gauge This is the issue tracker for reporting bugs or for requesting new feature and enhancements If you have any support related questions please refer our documentation at You can even ask questions on Google groups or on gitter This is the issue tracker for Gauge core Find other components at Please delete irrelevant sections below Expected behavior It should print same string what I am passing in GaugewriteMessage Actual behavior I am passing below string in GaugewriteMessage but in html report why its showing br curl header Accept header ContentType applicationxwwwformurlencoded header Host authstagingcom header Connection KeepAlive header UserAgent ApacheHttpClient Java databinary passwordpassword usernameusername compressed insecure verbose curl br header ContentType applicationxwwwformurlencoded br header Host authstagingcom br header Connection KeepAlive br header UserAgent ApacheHttpClient Java br databinary passwordpassword usernameusername br compressed br insecure br verbose Gauge version I opened a ticket for Json plugin and below is the link for the same Its been days and nobody responded to me so thought of opening a ticket here to see if somebody can take a look at the issue Problem Statement Json plugin for the same test sometimes shows steps details and sometime shows details only at spec level I ran my test twice and both the times the report is different In one report i see that all the step details are present but the second report does not has any step detail The behavior is inconsistent It is happening for both and Attached are the files for your reference JsonResultszip Expected behavior The Json structure should be same Actual behavior The Json structure is not same Gauge version Gauge version Commit Hash a a Plugins dotnet nightly htmlreport jsonreport screenshot xmlreport Messages to the console should be printed via logger package The logger package manages the output to be printed correctly It prints in json format if machine readable flag is provided It decides when it is safe to print to the console if gauge is started with lsp it will not print So it is best to let it handle all prints to process standard output There are many places where we directly print to the console in Gauge These should be printed via the logger Current problem Gauges default screenshot tool captures the current display This does not work on headless environments like CI where tests are run without a display It is not clear that a tester can or has to override the default screenshot behaviour Suggestion When the default screenshot tool fails to take a screenshot because of the environment add a note or warning in the report about the problem and link to the documentation about how to take custom screenshots 