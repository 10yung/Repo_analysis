this is due to githubcomgoogledaggerissues Task debugupdatercompileDebugJavaWithJavac FAILED homegaborLet lt sekSdkSearchdebugupdaterbuildgeneratedsourcekaptdebugcomjakewhartonsdksearchdebugupdaterUpdateActivityModuleContributeUpdateActivityjava error package javaxannotation does not exist import javaxannotationGenerated homegaborLet lt sekSdkSearchdebugupdaterbuildgeneratedsourcekaptdebugcomjakewhartonsdksearchdebugupdaterUpdateActivityModuleContributeUpdateActivityjava error cannot find symbol GenerateddaggerandroidprocessorAndroidProcessor symbol class Generated homegaborLet lt sekSdkSearchdebugupdaterbuildgeneratedsourcekaptdebugcomjakewhartonsdksearchdebugupdaterUpdateActivityMembersInjectorjava error package javaxannotation does not exist import javaxannotationGenerated homegaborLet lt sekSdkSearchdebugupdaterbuildgeneratedsourcekaptdebugcomjakewhartonsdksearchdebugupdaterUpdateActivityMembersInjectorjava error cannot find symbol Generated symbol class Generated errors I have switched to Firefox Lets make a Firefox extension Broken Default suggestion does not support s Suggestions do not support match Perstorage onChanged does not exist How it works JakeWharton I didnt find any other solution to get your attention other than creating an issue in your project We have more than just gitweb now folks I would suggest making the inputClear invisible instead of gone Im not sure how SDK Search is going to be in the future but right now I think it makes sense to kill the app when user press back the keyboard is opened and the search field is empty If the back is pressed the user probably wants to exit the app since there is no addional functionality There are apps like Chrome that already do this to some extent for example by automatically closing the omnibox fragment when user press back and the keyboard is opened Updating the Chrome extension and Android app when the source mapping changes is a pain If this were hosted and synchronized we could eliminate the need to do this Use mode none for webpack Source maps x Visually distinguish content script DOM elements blink x Debug px and px icons like Android Right now we just send the raw exception as an info level crash which causes about issues to be tracked based on how it fails Theres two problems here All transportrelated problems are a single failure The use of Timber in multiplatform code is a convenient but lazy way of tracking these We should probably use something other than Timber for reporting crashes but that requires a multiplatform abstraction Using a crash reporting tool for this is dumb These arent crashes but theyre still useful to track A better metric would be to correlate successful fetches with failed fetches as a percentage and track that over time to ensure the number doesnt jump to 