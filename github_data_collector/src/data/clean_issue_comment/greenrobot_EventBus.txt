Whats about the registering and unregistering why cannt the Subscribe function be Lifecycle Aware registering on Class creation and unregistering on destruction would be really neat if this could be added Hello I would like to contribute an AndroidX upgrade as well as the project upgrade to the Android library aar Thank you Mykola All Subscribe methods gets deleted by using R no matter of proguard rules All subscribe methods are public shrinkResources true minifyEnabled true Proguard rules keepattributes Annotation keepclassmembers class orggreenroboteventbusSubscribe methods keep enum orggreenroboteventbusThreadMode Only required if you use AsyncExecutor keepclassmembers class extends orggreenroboteventbusutilThrowableFailureEvent initjavalangThrowable This bug is critical since EventBus is no longer working with newest Android technologies In many backend applications we use exceptions to deal with business logic For an example ifaccountAmount throw new AccountException lack of money There will be a interceptor to translate this exception to message then front pages can show this message to users throwSubscriberExceptiontrue wrap the original exception like if throwSubscriberException throw new EventBusExceptionInvoking subscriber failed cause So we have to modify interceptor to use EventBus may be if cause instanceof rumtime just throw it I want to know what the best practice for threads working with EventBus is such as when to register and when to unregister Use new dependency configurations Note for the processor this changes the dependencies on EventBus and javacommon from compile to runtime in the resulting POM Based on a quick test this is fine Change from prefered to preferred properties Extract common publishing script Phenomenon usually we register EventBus in the base class and annotate the subscribe method in the subclass but if there is no public method in the subclassthe Eventbus will report Fragment and its super classes have no public methods with the Subscribe annotation Suggestion delete this code if subscriberMethodsisEmpty throw new EventBusExceptionSubscriber subscriberClass and its super classes have no public methods with the Subscribe annotation soWhen subscriberMethods is empty it returns subscriberMethods directly and no more errors are reported Closes When i used to start with onresume Override public void onResume superonResume EventBusgetDefaultregisterthis it shot the error like haae Subscriber class cbadcbr and its super classes have no public methods with the Subscribe annotation at haapa at haacc at cbadcbronResume at androidxfragmentappFragmentperformResume at androidxfragmentappla at androidxfragmentapplj at androidxfragmentappli at androidxfragmentappla at androidxfragmentappae at androidxfragmentappla at androidxfragmentapplb at androidxfragmentapplc at androidxfragmentapplc at androidxfragmentapplcrun at androidosHandlerhandleCallbackHandlerjava at androidosHandlerdispatchMessageHandlerjava at androidosLooperloopLooperjava at androidappActivityThreadmainActivityThreadjava at javalangreflectMethodinvokeNative Method at comandroidinternalosZygoteInitMethodAndArgsCallerrunZygoteInitjava at comandroidinternalosZygoteInitmainZygoteInitjava refer refer issue issue 