I hope there will be a timer so that it will remind me to take a break every mins or any time Thank you very much I have a Windows Pro bit I have installed both NET Core Runtime x and x And I still cant run LightBulb No reaction at all even if I try to launch it from a CMD it still doesnt print anything Ive tried to compile it myself but this was the result The call is ambiguous between the following methods or properties LightBulbInternalExtensionsAddRangeTSystemCollectionsGenericICollectionT SystemCollectionsGenericIEnumerableT and TyrrrzExtensionsCollectionExtensionsAddRangeTSystemCollectionsGenericICollectionT SystemCollectionsGenericIEnumerableT LightBulb C Users rabbit Source Repos LightBulb LightBulb Services RegistryServicecs The call is ambiguous between the following methods or properties LightBulbInternalExtensionsOpenInBrowserSystemUri and TyrrrzExtensionsUriExtensionsOpenInBrowserSystemUri LightBulb C Users rabbit Source Repos LightBulb LightBulb ViewModels RootViewModelcs Hello can you add the wake up function like the flux program does another nice feature is the take a break from pc warning as does the eye saver program With these changes Lightbulb will be the best program in the world best regards Anaru Problem Since the release of Ive read on several occasions how people presumably follow the instructions yet fail to launch the app succesfully or end up with for nondevs cryptic error logs Upon taking a closer look there seems to be a misunderstanding in the actual software dependency which at least partly can be credited to Microsofts constant change of the naming convention in their software packages Most people unfortunately skim over guidesreadmes rather than reading patiently which seems to be a sideeffect of todays informational overload and the subsequent decrease of attention span only to end up with the wrong installation of dependency packages and blame the software or even the developer NET Runtime Packages Installed Explanation In order to run LightBulb the intstructions explicitly suggest to install NET Core runtime for desktop apps which is semantically correct but can be easily confused with the baseline package due to the capitalization rules of the words in the name ie easily mistaking it for NET Core runtime which according to Microsoft is for running console applications only Whereas the wiki article directly links to the NET Core Desktop Runtime download page which according to Microsoft is the one required to run desktop apps or console apps Ideally this wouldnt be a problem at all if everyone just followed the wiki articles link For various reasons like the lack of software understanding lack of attention language barrier naming confusion et cetera this is not the case and often results in a bad user experience and subsequent dismissal of the software I think this can be resolved with rather simple tweaks Source NET Runtime Packages Suggestion Looking forward to run that one app everyone is talking about only to fail right from the getgo can be ultminately frustrating even more so if you are not a techie person For the sake of clarity and in order to make this easier for everyone incl absolute PC newbies or simply people who skim over guides which seem to be a widespread phenomenon I suggest to change every text occurence of NET Core runtime and NET Core runtime for desktop apps to NET Core Desktop Runtime as suggested by the chosen name on Microsofts own download page Thanks for reading Edit a word Hi A nice feature to have would be to add a parameter to shift the sunsetsunrise timing grabbed from internet by a given amount of minutes For instance the transition duration is minutes the shift is minutes Then the gamma up transition begins minutes before sunset and ends minutes after the gamma down transition starts minutes before sunrise and ends minutes after Or it could be better if the gamma up ends minutes after sunrise and starts minutes before the gamma down ends minutes before sunset and starts minutes before This way transition start when sky light already changes artificial light is already active but sun is not officially rised or set With the current version transitions are always lagging behind true sky changes and are happening a tad too late A minor thing but would be appreciated to be able to select or hour clock I think many people who run the app for the first time and take a look at the gamma values have no clue why it is that you chose k for the daytime and k for the nighttime and what to do about them B u t i f t h e y d a r e t o f i d d l e a r o u n d w i t h i t t h e y m a y e n d u p w i t h a m e s s y r e s u l t n o t k n o w i n g h o w t o r e t u r n t o t h e d e f a u l t w i t h o u t r e i n s t a l l i n g w h i c h i s a b a d t h i n g i f y o u w a n t t o m a k e y o u r a p p a s u s e r f r i e n d l y a s p o s s i b l e Please consider presets Presets would make this much easier to handle AND to grasp If you take a look at your biggest competitor on the market flux which Im sure you did they did a great job by creating different presets named in a way that is somewhat graspable compared to a bunch of numbers you at least have a fair idea about what and what for Id highly recommend to add a little wiki or FAQ explanatorytext button within your apps main window to give the user easy access to understanding the numbers you have chosen to set as default and what the pros and cons are and how they compare with the kelvin spectrum that sorround us by nature like sunset daytime candlelight etc It sure cant hurt to add a little explanation about the circadian rhythm and why it is beneficial for the user to run this beautiful app of yours Id also consider giving the user the power to create custom presets I think the hurdance to use you app has become quite huge and this is one thing Id like to point out The user is forced to install NET Core Runtime Which I have to admit as an hardcore pc user and windows enthusiast never crossed my way and Ive been using Windows since So my guess would be that most customers wont recognize nor know of this tool and therefore distrust it at least a tiny bit because humans dont trust stuff that is totally new or unknown to them even so it comes from Windows Plus you do not tell your users which installers to choose x x so they have to figure that one out for themselves too and since you dont offer an pleaseinstalleverythinginsidebeforeyoulaunchtheappbundle you risk losing plenty of users at this early stage of the process already Most users wont find their way to your github page nor will they read the important note that they have to install it and thus end up with a non launching exe file It sure would be helpful if the exe would create a popup if it failed to find NET Core Runtime with further instructions written to let the user know what to do next and why it is that the app wont launch at all After switching to NET Core the tray icon is now seemingly rendered with lower color range Most likely an issue because TrayIcon package is still on NET Fx Tracked here I found this because I prefer opensource applications and discovered This reddit post explaining why its better for gaming As a gamer it was a simple choice for me But a lot of gamers still use other apps which are not as good for them I think it would be good to put something in readmemd which explains the performance advantages of LightBulb