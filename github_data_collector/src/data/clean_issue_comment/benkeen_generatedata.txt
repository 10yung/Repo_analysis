Created a data set and set the data type of one column to custom list The custom list was relatively short The data set was saved and has been run numerous times Increased the custom list to KB and saved the data set Now unable to load that data set The previous version of the data set which differs only by the custom list still loads fine Last updated Jan th This a birdseye view of the v rewrite to give a little transparency of how its going Ill add more items and below as I address them Inprogress design I havent done an actual design yet fonts colours etc etc Im just trying to hammer down the new UI in broad strokes To simplify the interface Ive moved the Countries Export Type settings into separate sections accessible via the buttons at the bottom But the big new addition is a preview panel a live visualization of the data set youre constructing in the export type of your choice The idea is for this to replace the existing current inpage generation option where you can see the results in the webpage Instead Id like to generate everything as files which is realistically the only way to guarantee itll be performant for any size of data set Horizontal mode img width altgd src Vertical mode img width altgd src Preview Panel JSON x add dynamically reflect updates to data set General update all Data Types to have a default value needed for small responsive size Misc Data Types table x general actions behaviour loading of data sets x Sorting Handling large data sets Get all Data Types working x make responsive and offload hidden items to the dialog HelpHelp Options dialog Export Types Country selection Data generation x initial proof of concept x visually show generated data in page move to web workers New application design x Overall layout simplifying the generator page x Responsive Database and backend User accounts Installation script Rest API Documentation Build process Propertly chunk everything Prod builds Other site Dev Environment add hot reloading already add linting CI x Add travis to run jest tests x Add initially depressing coveralls integration to show how far I have to go Unknowns What database to use What templating language to achieve parity with the existing script customizable inline Smarty code This page isn t working generatedatacom is currently unable to handle this request HTTP ERROR I am not able to generate records columns at a time Need records You need to refund contributions Generating field id as Primary Key gets added twice causing error with MySQL import CREATE TABLE customers id mediumint unsigned NOT NULL autoincrement id mediumint note we usually use int for autoincrement Primary key CREATE TABLE customers id mediumint unsigned NOT NULL autoincrement id mediumint companyname varchar address varchar default NULL town varchar postcode varchar default NULL telephone varchar default NULL email varchar default NULL contacts varchar default NULL billing varchar default NULL notes TEXT default NULL PRIMARY KEY id AUTOINCREMENT So Ive started on generatedata v at last Exciting times The primary goal of the new version is to improve performance and modernize the script Its still as useful as its ever been but codewise has gotten very dated jQuery requireJS Yowzers and above all generating the data takes far far longer than it should Since putting up the generatedatacom website several years ago my hosting costs skyrocketed due to the server load and Im heavily reliant on donations to keep this project going That has to stop So Im rewriting it in node and ReactRedux and offloading the bulk of the data generation to run right within your browser By writing it in modern JS I can still provide both client and serverside options You can still use the REST API like now itll be exactly the same code ran in your browser as through node This is a winwin Ill be able to remove all limitations of the volume of data you can generate through generatedatacom for anyone who visits not just people who donate the one caveat being unless that entails data generation requires backend interaction So generating actual Excel CSV and zipfiles will not longer be available for free unless you donate Probably Quite honestly modern browsers can support a huge range of functionality so perhaps Ill be able to do that all in the browser Well see But yes the goal is to significantly improve performance and reduce unnecessary server load Ill keep this up to date with the latest goings on I generated entries five or six times with full state names and never got any of the New North South or West states Edit They dont come up using short state names either The current versions of SQL RDBMSs all support the DROP TABLE IF EXISTS syntax In most systems if you try to drop a table that doesnt already exist it will generate an error Right now when we select the include DROP TABLE option Generatedata creates a DROP TABLE statement without the IF EXISTS option which generates an error most current empty databases It would be nice if Generatedata added the IF EXISTS clause by default If we are concerned about people using legacy systems that might not understand the optional clause then we could add a checkbox that would allow people to omit IF EXISTS but that would not be the default Thank you for running and maintaining this amazing and super useful project Screenshot from The data limit on data generation can be increased by changing the input field value from the source code using Developer tools of the browser Ive installed the script in my local environment Ive added a few column that need to be generated as Excel file but not able to generate data and ended up at What I missed while installing the script or do I need any further step to perform to get the data generated Setup JSON output json bool false bool true Whats wrong Boolean values in JSON must not be quoted From A value can be a string in double quotes or a number or true or false or null or an object or an array