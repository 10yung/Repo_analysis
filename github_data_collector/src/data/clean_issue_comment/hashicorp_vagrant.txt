 vagrant box add ubuntubionic Vagrant failed to initialize at a very early stage The plugins failed to load properly The error message given is shown below cannot load such file vagrantipshow Resolved with vagrant plugin uninstall vagrantipshow Uninstalling the vagrantipshow plugin Successfully uninstalled vagrantipshow Provider VirtualBox Vagrant version Vagrant Host OS macOS Guest OS ubuntubionic since Vagrant version vagrant creates wrong entry on very first line in etchosts myserver domain myserver Vagrant version Host operating system Windows Guest operating system NA Vagrantfile ruby Vagrantconfigure do config configvmbox ubuntuxenial configvmdefine XXX configvmnetwork forwardedport guest host configvmprovision shell path vagrantbashbootstrapsh configvmprovision shell path vagrantbashstartsh run always configvmsyncedfolder XXX end Debug output NA Expected behavior Executing vagrant up as part of an NPMscript should bring up the Vagrantbox Actual behavior Upon trying to execute vagrant up inside an NPMscript the following error is raised CHashiCorpVagrantembeddedgems gemsvagrant libvagrantbundlerrb in Invalid argument rubysetenvGEMRC ErrnoEINVAL from CHashiCorpVagrantembeddedgems gemsvagrant libvagrantbundlerrb in initialize from CHashiCorpVagrantembeddedgems gemsvagrant libvagrantbundlerrb in new from CHashiCorpVagrantembeddedgems gemsvagrant libvagrantbundlerrb in instance from CHashiCorpVagrantembeddedgems gemsvagrant binvagrant in main Running vagrant up directly on the console ie executing vagrant up instead of npm run vagrant does not give the error ndash Vagrant starts the VM just fine Steps to reproduce npm init In the scriptssection of packagejson add vagrant vagrant up Exectue npm run vagrant References It appears a workaround for a Windowsrelated ENV GEMRC problem in RubyGems is causing this behaviour Removing the workaround code solves the issue described above See the below pullrequest and the original RubyGems issue for more details So the call in must fail because the minions isare not setup yet if there is one minion different from the local master vagrant guest to be setup This can be ignored by general salt option hidetimeout Vagrant version Host operating system Windows Ubuntu WSL Guest operating system Ubuntu Request With WSL Microsoft has moved to a complete Linux VM Would it be possible to integrate Vagrant in such a way with WSL that installing VagrantVirtualBox on the Windows side would not be necessary Windows commands that run over SSH are wrapped in a script that writes a special marker to the two output streams stdout and stderr This allows Vagrant to consume the output streams Unfortunately this leads to a sort of chickenandegg problem where no commands can be run before a wrapper script exists For example you cant make a destination directory to upload the wrapper script without first creating a wrapper script to make the directory This commit changes the behavior of the WinSSH communicator to assume that the destination directory already exists for provisioning scripts It also moves the default uploadpath from the shell provisioner config so we can have OSspecific defaults Known issues File uploads do not work if the file path has a space in it Fixes Host operating system macOS Guest operating system Linux Actual behavior Vagrant is often used for web development where the developer runs hisher IDE on the host system and executes the code on the guest web or application server When using languages like PHP Composer vendor folder or JavaScript NPM nodemodules folder many small files are required to develop and run the system The currently provided mechanisms for shared folders VBoxSF NFS and SMB are not very performant when it comes to many small files In NFS for example the guest is acting as a client so calling composer install or npm install takes a very very long time I made some benchmarks and saw that I can achieve MBs with large files over NFS but only MBs with many small files Changing to rsync resolves the performance issues in the guest but files being created in the guest are not synchronized back to the host Not having nodemodules on the host means less IDE support when trying to check references etc Expected behavior This is a feature enhancement request Its out of scope of HashiCorpVagrant to improve VBoxSF NFS or SMB NFS or SMB are not suitable for many small files as they produce too much overhead But I think with some additional rsync options the issues web developers face can be addressed easily My ideas Add an option like rsyncautobackground to let vagrant start rsyncauto instead of requiring the user to do so Add an option like rsyncdirection with options toguest tohost or bidirectional to not only sync from host to guest but also the other way around or even bidirectional Add an option like rsyncdirectionmaster with options host or guest to tell a bidirectional sync system who is right in case of conflicts Having bidirectional rsync will solve the currently existing performance issues while still allowing sharing files There will be a slight delay in the syncing but I think this is an acceptable tradeoff remove this warning NOTE GemSpecificationdefaultspecificationsdir is deprecated use Gemdefaultspecificationsdir instead It will be removed on or after GemSpecificationdefaultspecificationsdir called from optvagrantembeddedgemsgemsvagrant libvagrantbundlerrb Happens on ruby The RubyGems pullrequest this temporary fixworkaround was waiting for to land got merged in April of The workaround is causing Vagrant to crash for many of our Windows users when they try to run vagrant up through a NPMscript Removing the workaround code appears to solve their issue Vagrant version Vagrant Host operating system Ubuntu Bionic Guest operating system Ubuntu Bionic Vagrantfile NA Debug output NA Expected behavior When I run vagrant cloud search provider hyperv ubuntu for instance i would expect the results to be those boxes that support hyperv Actual behavior vagrant cloud search providerhyperv ubuntu NAME VERSION DOWNLOADS PROVIDERS hashicorpprecise virtualboxvmwarefusionhyperv bentoubuntu virtualbox bentoubuntu hypervparallelsvmwaredesktopvirtualbox genericubuntu vmwaredesktopvirtualboxparallelslibvirthyperv genericubuntu vmwaredesktopvirtualboxparallelslibvirthyperv genericubuntu vmwaredesktopvirtualboxparallelslibvirthyperv genericubuntu vmwaredesktopvirtualboxparallelslibvirthyperv genericubuntu vmwaredesktopvirtualboxparallelslibvirthyperv bentoubuntu virtualbox genericubuntu vmwaredesktopvirtualboxparallelslibvirthyperv Steps to reproduce Search References 