Updates orgscalametascalafmtcore from to Release NotesChangelog Ill automatically update this PR to resolve conflicts as long as you dont change it yourself If youd like to skip this version you can just close this PR If you have any feedback just mention me in the comments below Have a fantastic day writing Scala details summaryIgnore future updatessummary Add this to your scalastewardconf file to ignore future updates of this dependency updatesignore groupId orgscalameta artifactId scalafmtcore details labels libraryupdate semverminor Looks like the last versions werent published for softwaremillelasticmqnative This is unfortunate since would be nice to have on docker hub Assume we have two queues one is in the AWS and the other resides in the ElasticMQ locally Both are empty When I try to delete the message from the queue in the AWS using the invalid receipt handle I get the following aws sqs deletemessage queueurl receipthandle fake An error occurred ReceiptHandleIsInvalid when calling the DeleteMessage operation The input receipt handle fake is not a valid receipt handle And when I try to do the same operation on the local queue in the elasticMQ it performs silently aws endpointurl sqs deletemessage queueurl receipthandle fake I start elasticMQ from Docker container by running docker run p softwaremillelasticmq The version of the image is SQS limits attributes to but ElasticMQ does not enforce the same limitation There should be a way to toggle the enforcement of this restriction in ElasticMQ to mirror the failure if the same request was made to AWS Mounting files is only supported on Linux and not portable to other OSs This makes it unnecessarily difficult to use this docker image on Windows and other operating systems For details take a look at It would be really nice if the QueueUrl reflected the region and the external hostname that the queue was created for Right now I can create a queue for the euwest region and itll report localhost as the queue hostname I can configure the hostname by setting a customconf file with the nodeaddresshostport set to what I want But this makes the QueueUrl fixed based on what I started the server with Its my understanding that SQS QueueUrls look like this pattern sqsregionamazonawscomaccountname Is there no way on request to check the incoming request and build the queue url based on that rather than a static variable in a config file After upgrading to v I was getting an Unknown action error message when sending a request to receive messages without specifying queue url This is the response error InvalidAction InvalidAction see the SQS docs at RequestextractError optjenkinsworkspacedevtoolsanalyticsservicePR nodemodulesawssdklibprotocolqueryjs at RequestcallListeners optjenkinsworkspacedevtoolsanalyticsservicePR nodemodulesawssdklibsequentialexecutorjs at Requestemit optjenkinsworkspacedevtoolsanalyticsservicePR nodemodulesawssdklibsequentialexecutorjs at Requestemit optjenkinsworkspacedevtoolsanalyticsservicePR nodemodulesawssdklibrequestjs at Requesttransition optjenkinsworkspacedevtoolsanalyticsservicePR nodemodulesawssdklibrequestjs at AcceptorStateMachinerunTo optjenkinsworkspacedevtoolsanalyticsservicePR nodemodulesawssdklibstatemachinejs at optjenkinsworkspacedevtoolsanalyticsservicePR nodemodulesawssdklibstatemachinejs at Requestanonymous optjenkinsworkspacedevtoolsanalyticsservicePR nodemodulesawssdklibrequestjs at Requestanonymous optjenkinsworkspacedevtoolsanalyticsservicePR nodemodulesawssdklibrequestjs at RequestcallListeners optjenkinsworkspacedevtoolsanalyticsservicePR nodemodulesawssdklibsequentialexecutorjs message InvalidAction see the SQS docs code InvalidAction time T Z requestId undefined statusCode retryable false retryDelay and the logs from the server elasticmqakkaactordefaultdispatcher WARN oersTheSQSRestServerBuilderanon Unknown action ReceiveMessage The same test on v produced this error Invalid request MissingQueryParamRejectionQueueName MissingFormFieldRejectionQueueUrl Invalid request MissingQueryParamRejectionQueueName MissingFormFieldRejectionQueueUrl see the SQS docs at RequestextractError optjenkinsworkspacedevtoolsanalyticsservicePR nodemodulesawssdklibprotocolqueryjs at RequestcallListeners optjenkinsworkspacedevtoolsanalyticsservicePR nodemodulesawssdklibsequentialexecutorjs at Requestemit optjenkinsworkspacedevtoolsanalyticsservicePR nodemodulesawssdklibsequentialexecutorjs at Requestemit optjenkinsworkspacedevtoolsanalyticsservicePR nodemodulesawssdklibrequestjs at Requesttransition optjenkinsworkspacedevtoolsanalyticsservicePR nodemodulesawssdklibrequestjs at AcceptorStateMachinerunTo optjenkinsworkspacedevtoolsanalyticsservicePR nodemodulesawssdklibstatemachinejs at optjenkinsworkspacedevtoolsanalyticsservicePR nodemodulesawssdklibstatemachinejs at Requestanonymous optjenkinsworkspacedevtoolsanalyticsservicePR nodemodulesawssdklibrequestjs at Requestanonymous optjenkinsworkspacedevtoolsanalyticsservicePR nodemodulesawssdklibrequestjs at RequestcallListeners optjenkinsworkspacedevtoolsanalyticsservicePR nodemodulesawssdklibsequentialexecutorjs message Invalid request MissingQueryParamRejectionQueueName MissingFormFieldRejectionQueueUrl see the SQS docs code Invalid request MissingQueryParamRejectionQueueName MissingFormFieldRejectionQueueUrl time T Z requestId undefined statusCode retryable false retryDelay During the test I was using awssdk for node version and node version elasticmq was running in docker using official images from docker hub Dependencies of interest orgspringframeworkcloudspringcloudstartersleuth RELEASE orgspringframeworkspringjms RELEASE comamazonawsamazonsqsjavamessaginglib image localstacklocalstack Error While consuming a message from SQS I am getting the below error as Elacticmq is adding these two properties JMSXGroupID JMSSQSDeduplicationId in the message even for STANDARD queue The problem is that these keys shouldnt be existing as my queue is standard not FIFO But instead there keys are set and their values are empty string Hence I am getting this exception while listening to the messages DefaultMessageListenerContainer WARN osjlDefaultMessageListenerContainerinvokeErrorHandler demand Execution of JMS message listener failed and no ErrorHandler has been set javalangIllegalArgumentException Property value can not be null or empty at comamazonsqsjavamessagingmessageSQSMessagesetObjectPropertySQSMessagejava at bravejmsPropertyFilterdoFilterPropertiesPropertyFilterjava at bravejmsPropertyFilter filterPropertiesPropertyFilterjava at bravejmsJmsTracingextractAndClearMessageJmsTracingjava at bravejmsJmsTracingnextSpanJmsTracingjava at orgspringframeworkjmsconfigTracingMessagingMessageListenerAdapteronMessageTracingJmsListenerEndpointRegistryjava at orgspringframeworkjmslistenerAbstractMessageListenerContainerdoInvokeListenerAbstractMessageListenerContainerjava at orgspringframeworkjmslistenerAbstractMessageListenerContainerinvokeListenerAbstractMessageListenerContainerjava at orgspringframeworkjmslistenerAbstractMessageListenerContainerdoExecuteListenerAbstractMessageListenerContainerjava at orgspringframeworkjmslistenerAbstractPollingMessageListenerContainerdoReceiveAndExecuteAbstractPollingMessageListenerContainerjava at orgspringframeworkjmslistenerAbstractPollingMessageListenerContainerreceiveAndExecuteAbstractPollingMessageListenerContainerjava at orgspringframeworkjmslistenerDefaultMessageListenerContainerAsyncMessageListenerInvokerinvokeListenerDefaultMessageListenerContainerjava at orgspringframeworkjmslistenerDefaultMessageListenerContainerAsyncMessageListenerInvokerexecuteOngoingLoopDefaultMessageListenerContainerjava at orgspringframeworkjmslistenerDefaultMessageListenerContainerAsyncMessageListenerInvokerrunDefaultMessageListenerContainerjava at javalangThreadrunThreadjava To debug check this out SQSMessagejava has a method to setObjectProperty It expects the name and value to be not null and not empty Override public void setObjectPropertyString name Object value throws JMSException if name null nameisEmpty throw new IllegalArgumentExceptionProperty name can not be null or empty if value null equalsvalue throw new IllegalArgumentExceptionProperty value can not be null or empty ifisValidPropertyValueTypevalue throw new MessageFormatExceptionValue of property with name name has incorrect type valuegetClassgetName checkPropertyWritePermissions propertiesputname new JMSMessagePropertyValuevalue PropertyFilterjava class of sleuth instrumentation has this code where it clears the JMS message properties and adds them again JMS spec doesnt allow to add properties before clearing them static void doFilterPropertiesMessage message SetString namesToClear ArrayListObject retainedProperties throws JMSException Enumeration names messagegetPropertyNames while nameshasMoreElements String name String namesnextElement Object value messagegetObjectPropertyname if namesToClearcontainsname value null retainedPropertiesaddname retainedPropertiesaddvalue messageclearProperties for int i length retainedPropertiessize i length i messagesetObjectProperty retainedPropertiesgetitoString retainedPropertiesgeti As you can see retainedProperties adds the name value pair even if our value is empty string It just has a nonnull check When messagesetObjectProperty is executed it will call SQSMessagejavas method and fail because of empty value of JMSXGroupID and JMSSQSDeduplicationId properties We should either have SQS not add these empty properties or update the instrumentation jar to have isEmpty check as well The former solution should be more preferable as sleuth instrumentation class is generic and some clients might want to add empty headers img width altScreenshot at AM src I have forked the Dockerfile from another repository and customize the conf file with the changes in my current forked version I have deployed the docker image to my local kubernetes cluster with the following deployment yaml file apiVersion appsv kind Deployment metadata name mocksqs labels app mocksqs spec replicas selector matchLabels app mocksqs template metadata labels app mocksqs spec containers name mocksqs image awssqsmocklatest imagePullPolicy Never ports containerPort name sqsport resources requests cpu limits cpu hostNetwork true apiVersion v kind Service metadata name mocksqs labels app mocksqs spec type NodePort ports port protocol TCP nodePort selector app mocksqs But when Im accessing the mock SQS using kubernetes service hostname using AWS Java Sdk it throws me the following error orgspringframeworkbeansfactoryBeanCreationException Error creating bean with name simpleMessageListenerContainer defined in class path resource comsphcommonservicecreditappconfigAwsSqsConfigclass Invocation of init method failed nested exception is comamazonawsSdkClientException Unable to execute HTTP request mocksqs at orgspringframeworkbeansfactorysupportAbstractAutowireCapableBeanFactoryinitializeBeanAbstractAutowireCapableBeanFactoryjava springbeans RELEASEjar RELEASE at orgspringframeworkbeansfactorysupportAbstractAutowireCapableBeanFactorydoCreateBeanAbstractAutowireCapableBeanFactoryjava springbeans RELEASEjar RELEASE at orgspringframeworkbeansfactorysupportAbstractAutowireCapableBeanFactorycreateBeanAbstractAutowireCapableBeanFactoryjava springbeans RELEASEjar RELEASE at orgspringframeworkbeansfactorysupportAbstractBeanFactorylambdadoGetBean AbstractBeanFactoryjava springbeans RELEASEjar RELEASE at orgspringframeworkbeansfactorysupportDefaultSingletonBeanRegistrygetSingletonDefaultSingletonBeanRegistryjava springbeans RELEASEjar RELEASE at orgspringframeworkbeansfactorysupportAbstractBeanFactorydoGetBeanAbstractBeanFactoryjava springbeans RELEASEjar RELEASE at orgspringframeworkbeansfactorysupportAbstractBeanFactorygetBeanAbstractBeanFactoryjava springbeans RELEASEjar RELEASE at orgspringframeworkbeansfactorysupportDefaultListableBeanFactorypreInstantiateSingletonsDefaultListableBeanFactoryjava springbeans RELEASEjar RELEASE at orgspringframeworkcontextsupportAbstractApplicationContextfinishBeanFactoryInitializationAbstractApplicationContextjava springcontext RELEASEjar RELEASE at orgspringframeworkcontextsupportAbstractApplicationContextrefreshAbstractApplicationContextjava springcontext RELEASEjar RELEASE at orgspringframeworkbootwebservletcontextServletWebServerApplicationContextrefreshServletWebServerApplicationContextjava springboot RELEASEjar RELEASE at orgspringframeworkbootSpringApplicationrefreshSpringApplicationjava springboot RELEASEjar RELEASE at orgspringframeworkbootSpringApplicationrefreshContextSpringApplicationjava springboot RELEASEjar RELEASE at orgspringframeworkbootSpringApplicationrunSpringApplicationjava springboot RELEASEjar RELEASE at orgspringframeworkbootSpringApplicationrunSpringApplicationjava springboot RELEASEjar RELEASE at orgspringframeworkbootSpringApplicationrunSpringApplicationjava springboot RELEASEjar RELEASE at comsphcommonservicecreditCreditServiceApplicationmainCreditServiceApplicationjava classes SNAPSHOT at sunreflectNativeMethodAccessorImplinvoke Native Method na internal at sunreflectNativeMethodAccessorImplinvokeNativeMethodAccessorImpljava na internal at sunreflectDelegatingMethodAccessorImplinvokeDelegatingMethodAccessorImpljava na internal at javalangreflectMethodinvokeMethodjava na internal at orgspringframeworkbootloaderMainMethodRunnerrunMainMethodRunnerjava creditservice SNAPSHOTjar SNAPSHOT at orgspringframeworkbootloaderLauncherlaunchLauncherjava creditservice SNAPSHOTjar SNAPSHOT at orgspringframeworkbootloaderLauncherlaunchLauncherjava creditservice SNAPSHOTjar SNAPSHOT at orgspringframeworkbootloaderJarLaunchermainJarLauncherjava creditservice SNAPSHOTjar SNAPSHOT Caused by comamazonawsSdkClientException Unable to execute HTTP request mocksqs at comamazonawshttpAmazonHttpClientRequestExecutorhandleRetryableExceptionAmazonHttpClientjava awsjavasdkcore jarna at comamazonawshttpAmazonHttpClientRequestExecutorexecuteHelperAmazonHttpClientjava awsjavasdkcore jarna at comamazonawshttpAmazonHttpClientRequestExecutordoExecuteAmazonHttpClientjava awsjavasdkcore jarna at comamazonawshttpAmazonHttpClientRequestExecutorexecuteWithTimerAmazonHttpClientjava awsjavasdkcore jarna at comamazonawshttpAmazonHttpClientRequestExecutorexecuteAmazonHttpClientjava awsjavasdkcore jarna at comamazonawshttpAmazonHttpClientRequestExecutoraccess AmazonHttpClientjava awsjavasdkcore jarna at comamazonawshttpAmazonHttpClientRequestExecutionBuilderImplexecuteAmazonHttpClientjava awsjavasdkcore jarna But when I access directly using the K s service cluster ip the mock SQS is working fine Anyone has any ideas In SQS comamazonawsservicessqsmodelOverLimitException is thrown when the maximum number of inflight messages is reached during ReceiveMessage By default this is inflight messages You can increase this by submitting a request to Amazon It seems that ElasticMQ does not have this limit Sometimes it is required to test what will happen when that limit is reached and ElasticMq does not have this feature Proposal Expose a property that will manage the number of inflight messages The value of this property will be from to IntegerMAXVALUE Default will be 