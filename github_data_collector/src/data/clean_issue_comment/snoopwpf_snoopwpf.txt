Hello I am wondering if anyone has tried to use snoop as a UI automation driver I am trying to mimic the injection process in my test project without luck Curious if this is something that has been considered The main advantage this would have over other libraries is access to the VisualTree instead of just UIA Thanks We are writing automated tests for WPF application and using XAML path Some times we need to write long XamlPath from one element to another and it takes long time Could you please add possibility to get such path automatically dotnet tool install g snoopwpf snoopwpf Hey I would like to filter the visual tree and search for a property like BackgroundBlack I only see the option to reset the filters or show binding errors Where is it possible to set filters Snoop should be able to not only show the visual tree but also the ui automation tree UIA At least the basics should be shown Snoop should be able to not only show the visual tree but also the logical tree Would it be feasible to use the technologies which Snoop uses from other applications Im the developer of Greenshot for Windows and Snoop could solve a few challenges and feature requests High DPI captures One feature request for Greenshot is having the ability to take screenshots with higher DPI settings than the screen This would mean that we should be able to generate a bitmap by rendering the visual tree of the target window application AFAIK this is what Snoop can already do Query information on the window elements All Win and NET Windows Forms applications can be queried with win APIs about their window layout being able to retrieve the locations of panels etc This allows us to provide a way for the user to select a certain area of a window and capturing it just by clicking on it we call this interactive window capture Its also possible to get some information on what areas can be scrolled and a basic click scroll capture is already available as an experiment Unfortunately all this information is not available for WPF applications which for Greenshot are just seen as one single window Having this information available would make it possible for Greenshot to provide the users with the same more possibilities on more types of applications Being able to reuse the backend of Snoop the part that injects and retrieves the information might be beneficial to other applications too Are there any plans to split the application and the inject retrieval code for instance provide them as a nuget package It would be nice to have command line args to tell Snoop to snoop a specific process ID Then I could tell Snoop to snoop my playground application from within my application saving a little development time Isnt the screenshot feature supposed to produce highres images depending on the dpi setting Doesnt work for me Snoop gives me a crystal clear magnifier zoom and zooms perfectly in the preview area as well but when I click on the screenshot icon chose dpi it produces a pixelated mess Looks like dpi just upscaled For reproduction I created a simple dummy WPF app Net Framework with just controls WpfApp zip My WPF app Large window controls wpfapp Perfectly zoomable in preview area previewarea Taking screenshot dpi save Result file snoopscreenshot Looking closer into the result file snoopscreenshotzoomed So what is happening here When I test with a very small window the end result looks better Is the actual resolution somehow limited by the screen resolution x But why does magnifier and preview look so good then Tested with Snoop In our application we have a class that wraps a RootVisual in a background threads dispatcher When running snoop we always get an exception window which can be dismissed and Snoop works as expected This additional check gets rid of the exception message and makes Snoop work as expected