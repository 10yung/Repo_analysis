This removes an extra parenthesis in the nested routing documentation example to allow the example to work RFC server MUST reject messages with BWS after fieldname Obey the RFC requirement to reject HTTP requests with whitespace between fieldname and the colon delimiter Rejection is critical in the presence of broken HTTP agents that mishandle malformed messages If not it will be used to smuggle http request Test code python import tornadoioloop import tornadoweb class MainHandlertornadowebRequestHandler def getself selfwriteHello world def postself data selfrequestbody selfwritestrdata def makeapp return tornadowebApplication r MainHandler if name main app makeapp applisten tornadoioloopIOLoopcurrentstart Test script bash printf POST HTTP r n Hostlocalhost r n Contentlength r n Connection close r n r n a r n r n nc w Expected behavior return Actual behavior return Version tornado python The UserAgent format is Tornado TornadoVersion If selfrequestuseragent isnt set and selfrequestheaders has no UserAgent in its keys the default UserAgent is added Fixes The demo blog app has an issue with its Docker containers where the Python app may initialize before the Postgres database This PR was using a solution to enforce the container order but a better approach would be to prevent the Python application from crashing if possible See the PR comments for me I do not have any concept of why this issue is occuring but Foosel believes this is an issue with Tornado rather than a misuse So Im placing it here since I am apparently banned from discussing anything further in Octoprint Ill give more details when I can Tornados IOStreamstarttls leaks connections when the handshake starts but does not complete The AsyncHTTPClient returns HTTP Timeout while connecting but the underlying connection is not closed This can be reproduced quite easily start a netcat to listen on and run the attached example with sslleakpy http or sslleakpy https to observe different behaviors HTTP closes the connection and netcat exits while HTTPS keeps the connection up even after the request errors sslleakpytxt Ive observed this behavior with OpenSSL OpenSSL f May Python default Jan GCC Tornado and OpenSSL OpenSSL d Sep Python default Apr GCC Tornado Ive confirmed this is an issue in starttls with a fix but this fix includes a timeout which is currently hardcoded This timeout value might need to be somehow passed into starttls but the starttls is hidden quite deep iostreamtlsleakfixdifftxt We provide read access to logs which are still being appended Sometimes it causes tornadohttputilHTTPOutputError Tried to write more data than ContentLength This will of course doesnt help when the file is truncated meantime but this doesnt happen for us I suppose that the followin line should also set endsize E baseevents Task was destroyed but it is pending task Task pending coroWebSocketProtocol receiveframeloop done defined at D AndroidControl Python lib sitepackages tornado websocketpy waitforFuture pending cb IOLoopaddfuturelocalslambda at D AndroidControl Python lib sitepackages tornado iolooppy TaskWakeupMethWrapper object at x AC cb IOLoopaddfuturelocalslambda at D AndroidControl Python lib sitepackages tornado iolooppy 