Some targets may not process all the corpus in the given time Prioritizing shorter inputs lets us maximize the number of inputs traced cc lemzwerg better late than never It seems since honggfuzz was turned on by default one of systemd fuzzers has been failing with Accepting input from STDIN Usage for fuzzing honggfuzz P flags mntscratch clusterfuzzbotbuildsclusterfuzzbuildshonggfuzzsystemdde b f a e dc ea edcd a revisionsfuzzudevrules Failed to call unshare Operation not permitted Failed to mount sys Operation not permitted Assertion mkdirpetcudevrulesd failed at srcfuzzfuzzudevrulesc function int LLVMFuzzerTestOneInputconst uint t sizet Aborting AddressSanitizerDEADLYSIGNAL As far as I can remember something like this happened with AFL when minijail wasnt used which was discussed in Moves dictionary with form fuzztargetdict to out ossfuzz automatically picks up dictionaries of this form htuch Signedoffby Asra Ali asraagooglecom Should fix This is what happened when I ran the tests python m unittest buildspecifiedcommittestpy Running docker build t gcrioossfuzzyara projectsyara unable to prepare context path projectsyara not found docker build failed Unable to find image gcrioossfuzzyaralatest locally latest Pulling from ossfuzzyara c e Already exists d d a a Already exists c fbfc Already exists aaf f eff Already exists e d ba Pulling fs layer e d b cd Pulling fs layer e bbacfc Pulling fs layer e a d Pulling fs layer bc b f Pulling fs layer eaea Pulling fs layer df c ed Pulling fs layer e d cc b ec Pulling fs layer ca a ed Pulling fs layer a db Pulling fs layer c aa b Pulling fs layer a c Pulling fs layer e ecbf a Pulling fs layer e e feffc Pulling fs layer e a d Waiting ca a ed Waiting a c Waiting c aa b Waiting e ecbf a Waiting bc b f Waiting e e feffc Waiting eaea Waiting e d cc b ec Waiting df c ed Waiting e bbacfc Verifying Checksum e bbacfc Download complete e d b cd Verifying Checksum e d b cd Download complete bc b f Verifying Checksum bc b f Download complete e d ba Verifying Checksum e d ba Download complete df c ed Verifying Checksum df c ed Download complete e d cc b ec Verifying Checksum e d cc b ec Download complete eaea Verifying Checksum eaea Download complete e d ba Pull complete e d b cd Pull complete e bbacfc Pull complete a db Verifying Checksum a db Download complete c aa b Download complete ca a ed Verifying Checksum ca a ed Download complete e ecbf a Verifying Checksum e ecbf a Download complete a c Verifying Checksum a c Download complete e e feffc Verifying Checksum e e feffc Download complete e a d Verifying Checksum e a d Download complete e a d Pull complete bc b f Pull complete eaea Pull complete df c ed Pull complete e d cc b ec Pull complete ca a ed Pull complete a db Pull complete c aa b Pull complete a c Pull complete e ecbf a Pull complete e e feffc Pull complete Digest sha d f bd f eefa a a e a d f a e c ec ee e e Status Downloaded newer image for gcrioossfuzzyaralatest ERunning docker build t gcrioossfuzzcurl projectscurl unable to prepare context path projectscurl not found docker build failed Unable to find image gcrioossfuzzcurllatest locally latest Pulling from ossfuzzcurl c e Already exists d d a a Already exists c fbfc Already exists aaf f eff Already exists e d ba Already exists e d b cd Already exists e bbacfc Already exists e a d Already exists bc b f Already exists eaea Already exists df c ed Already exists e d cc b ec Already exists ca a ed Already exists a db Already exists c aa b Already exists d c b a Pulling fs layer f fa Pulling fs layer ceb f Pulling fs layer bae df Pulling fs layer bae df Waiting f fa Verifying Checksum f fa Download complete d c b a Verifying Checksum d c b a Download complete bae df Download complete ceb f Verifying Checksum ceb f Download complete d c b a Pull complete f fa Pull complete ceb f Pull complete bae df Pull complete Digest sha ee e f f f c a daf f d c eebc daaac f Status Downloaded newer image for gcrioossfuzzcurllatest F ERROR testbuildfuzzersfromcommit buildspecifiedcommittestBuildImageIntegrationTests Tests if the fuzzers can build at a proper commit Traceback most recent call last File homeuserossfuzzinfrabuildspecifiedcommittestpy line in testbuildfuzzersfromcommit projectname oldcommit tmpdir sanitizeraddress File homeuserossfuzzinfrabuildspecifiedcommitpy line in buildfuzzerfromcommit inferredurl localstorepath reponamereponame File homeuserossfuzzinfrarepomanagerpy line in init selfreponame selfrepourlsplit stripgit AttributeError NoneType object has no attribute split FAIL testdetectmainrepo buildspecifiedcommittestBuildImageIntegrationTests Test the detect main repo functionality of the build specific commit module Traceback most recent call last File homeuserossfuzzinfrabuildspecifiedcommittestpy line in testdetectmainrepo selfassertEqualrepoorigin AssertionError None Ran tests in s FAILED failures errors Then I ran the tests again and encountered another problem python m unittest buildspecifiedcommittestpy Running docker build t gcrioossfuzzyara projectsyara unable to prepare context path projectsyara not found docker build failed ERunning docker build t gcrioossfuzzcurl projectscurl unable to prepare context path projectscurl not found docker build failed F ERROR testbuildfuzzersfromcommit buildspecifiedcommittestBuildImageIntegrationTests Tests if the fuzzers can build at a proper commit Traceback most recent call last File homeuserossfuzzinfrabuildspecifiedcommittestpy line in testbuildfuzzersfromcommit projectname oldcommit tmpdir sanitizeraddress File homeuserossfuzzinfrabuildspecifiedcommitpy line in buildfuzzerfromcommit inferredurl localstorepath reponamereponame File homeuserossfuzzinfrarepomanagerpy line in init selfreponame selfrepourlsplit stripgit AttributeError NoneType object has no attribute split FAIL testdetectmainrepo buildspecifiedcommittestBuildImageIntegrationTests Test the detect main repo functionality of the build specific commit module Traceback most recent call last File homeuserossfuzzinfrabuildspecifiedcommittestpy line in testdetectmainrepo selfassertEqualrepoorigin AssertionError None Ran tests in s There are a few problems here First is that they are failing Second is that they are nondeterministic tests should behave exactly the same way every time otherwise they arent very useful for debugging Third and this is related to the second point if these were unittests where docker was mocked rather than integration tests we wouldnt have this problem A problem with many of your tests is they rely on production data like projects in OSSFuzz This data can change at any time breaking your tests While I think these tests are valuable as a sanity check you definitely want more deterministic unittests that only rely on data you control Bumps rubyzip from to details summaryRelease notessummary Sourced from rubyzips releases v Security Default the validateentrysizes option to true so that callers can trust an entrys reported size when using extract This option defaulted to false in for backward compatibility but it now defaults to true If you are using an older version of ruby and cant yet upgrade to x you can still use and set the option to true Tooling Documentation Remove test files from the gem to avoid problems with antivirus detections on the test files Drop support for unsupported ruby versions v Security Add validateentrysizes option so that callers can trust an entrys reported size when using extract This option defaults to false for backward compatibility in this release but you are strongly encouraged to set it to true It will default to true in rubyzip New Feature Add addstored method to simplify adding entries without compression Tooling Documentation Add more gem metadata links v Do not rewrite zip files opened with openbuffer that have not changed Tooling Documentation Update examplerecursiverb in README Hold CI at trusty for now automatically pick the latest ruby patch version use rbx and hold jruby at details details summaryChangelogsummary Sourced from rubyzips changelog Security Default the validateentrysizes option to true so that callers can trust an entrys reported size when using extract This option defaulted to false in for backward compatibility but it now defaults to true If you are using an older version of ruby and cant yet upgrade to x you can still use and set the option to true Tooling Documentation Remove test files from the gem to avoid problems with antivirus detections on the test files Drop support for unsupported ruby versions Security Add validateentrysizes option so that callers can trust an entrys reported size when using extract This option defaults to false for backward compatibility in this release but you are strongly encouraged to set it to true It will default to true in rubyzip New Feature Add addstored method to simplify adding entries without compression Tooling Documentation Add more gem metadata links Do not rewrite zip files opened with openbuffer that have not changed Tooling Documentation Update examplerecursiverb in README Hold CI at trusty for now automatically pick the latest ruby patch version use rbx and hold jruby at details details summaryCommitssummary Merge pull request from rubyzipv cb b Bump version to e d af Merge pull request from rubyzipbumpsupportedruby a Merge pull request from rubyzipremovetestfiles e d ea Merge pull request from rubyzipv c e e Bump version to d fe b Merge pull request from rubyzipchecksize f Drop old ruby and JDK versions from CI d bec Remove test files from gem cb ae Warn when an entry size is invalid Additional commits viewable in compare view details br Dependabot compatibility score Dependabot will resolve any conflicts with this PR as long as you dont alter it yourself You can also trigger a rebase manually by commenting dependabot rebase dependabotautomergestart dependabotautomergeend details summaryDependabot commands and optionssummary br You can trigger Dependabot actions by commenting on this PR dependabot rebase will rebase this PR dependabot recreate will recreate this PR overwriting any edits that have been made to it dependabot merge will merge this PR after your CI passes on it dependabot squash and merge will squash and merge this PR after your CI passes on it dependabot cancel merge will cancel a previously requested merge and block automerging dependabot reopen will reopen this PR if it is closed dependabot ignore this patchminormajor version will close this PR and stop Dependabot creating any more for this minormajor version unless you reopen the PR or upgrade to it yourself dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency unless you reopen the PR or upgrade to it yourself dependabot use these labels will set the current labels as the default for future PRs for this repo and language dependabot use these reviewers will set the current reviewers as the default for future PRs for this repo and language dependabot use these assignees will set the current assignees as the default for future PRs for this repo and language dependabot use this milestone will set the current milestone as the default for future PRs for this repo and language You can disable automated security fix PRs for this repo from the Security Alerts page details Solves Testing with various projects locally If nothing breaks can try landing and testing at scale next week nknown chunk to known chunk This is experimental and for research purposes for the moment Depending on feedback here it may be upstreamed PS I found that this line specifically the rm portion breaks the fuzzer build because OUT may contain directories Fixed it by passing rf flag to the chained rm command 