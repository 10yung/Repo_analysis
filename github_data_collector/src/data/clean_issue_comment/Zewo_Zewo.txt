The application is not compiling due to Reflection pod file on Xcode Details below Undefined symbols for architecture arm swiftgetFieldAt referenced from closure SwiftInt SwiftString AnyType in extension in ReflectionReflectionNominalTypefieldNamesAndTypesfor AnyType SwiftString AnyType in NominalTypeo ld symbols not found for architecture arm clang error linker command failed with exit code use v to see invocation Merge PRs First The cocoapods docs have outdated instructions for iOS because there is no Venicexcodeproj in this repo The pod wont work with Xcode since its Swift So I guess we need to create an Xcode proj and compile the latest code here to use it in iOS does that sound right Could you let me know about whats the easiest way to get started with Venice in iOS Add testable for import Zewo to fix ZewoTestsHTTPTestsServerTestswift issue Hello i was try the reflection framework and its very good How ever i am facing little issue in nested models but with structs The example structure i was trying struct Person var firstName String var lastName String var age Int var classType SchoolClass If i use class then it work fine struct SchoolClass var name String var section Section SectionsectionName struct Section var sectionName String I wrote some code nested models but if this func already present let me know extension Array func splitat index Int Element Element var leftArray Element var rightArray Element for tmpIndex in selfcount if tmpIndex index leftArrayappendself tmpIndex else rightArrayappendself tmpIndex return leftArray rightArray public func getChildT key String from instance Any throws T let treeList keycomponentsseparatedBy splitat guard treeList isEmpty else return instance as T let currentNode treeList first let result try getcurrentNode from instance guard treeList isEmpty else return result as T let nextNodeString treeList joinedseparator let nextNode T try getChildnextNodeString from result return nextNode public func setChildT value Any key String for instance inout T throws let treeList keycomponentsseparatedBy splitat guard treeList isEmpty else return let currentNode treeList first var result try getcurrentNode from instance let nextNodeString treeList joinedseparator guard treeList count else do try setvalue key nextNodeString for result catch let error printerror return try setChildvalue key nextNodeString for result And the starting method func checking Reflects the instance properties of type Person do let props try propertiesPersonself var person PersonfirstName John lastName Smith age classType SchoolClass var person PersonfirstName John lastName Smith age classType SchoolClassname Phyics section SectionsectionName A Retrieves the value of personfirstName let firstName String try getfirstName from person let className String try getChildclassTypename from person let sectionName String try getChildclassTypesectionsectionName from person Sets the value of personage try set key age for person Here i use struct i get crash but works for classes need help here try setChildChemistry key classTypename for person print catch let error printerror Array of Mappable Objects nested in a Mappable Deserialization Case I am using your Advance Usage case described in the Readme file of the Reflection Lib that allows the deserialization of arbitrary nested structures But I am having a difficult time making it work for this specific case swift extension Mappable initdictionary MappableDictionary throws self try constructconstructor property in if let value dictionary propertykey When the property type is a Dictionary if let type propertytype as MappableType let value value as MappableDictionary return try typeinitdictionary value When the property type is an Array else if let type propertytype as ArrayMappableType let values value as ArrayMappableDictionary return try valuesmap typeElementinitdictionary When the property type is Type else return value else throw MappableErrormissingRequiredValuekey propertykey When the propertytype is an ArrayMappable the conditional unwrapping never happens so the execution always enters the final else context Is there any solution to this situation Thank you The Bug Matilda aka seting Int s Reflectionset fails with an Int field in Xcode Steps to reproduce The following test code fails with EXCBADACCESS codeEXCi GPFLT class TestClass NSObject var fileIndexId Int Crashes using Xcode func testReflectionCrash let fileIndex TestClass let rowFieldValue Int let key fileIndexId do try ReflectionsetrowFieldValue key key for fileIndex catch Possible solutions Not sure This was working in Xcode Not sure if this a Reflection issue or a compiler issue in Xcode This appears to be related to optional Int s This code sample does not fail class TestClass NSObject var fileIndexId Int override init fileIndexId superinit Does not crash Something going on with optional Int s func testReflectionDoesNotCrash let fileIndex TestClass let rowFieldValue Int let key fileIndexId do try ReflectionsetrowFieldValue key key for fileIndex catch A further refinement Also has to do with the NSObject subclassing This example which does not subclass does not crash class TestClass var fileIndexId Int Does not crash func testReflectionDoesNotCrash let fileIndex TestClass let rowFieldValue Int let key fileIndexId do try ReflectionsetrowFieldValue key key for fileIndex catch When I try to set instance value using for instance inout Any or for instance AnyObject signature both methods fail with signal SIGSEGV However using for instance inout T works as expected though method with for instance AnyObject signature uses exactly the same call Many public tests are also failing with recent Xcode release January travis builds appear to be passing with Xcode maybe theres a problem with Swift Segmentation Fault of Swift Reflection I recently use swift reflection to convert json string to a struct but got Segmentation Fault in runtime As the test code is too much to write here I committed my test code in github can you help have a look thanks Steps to reproduce uname a Linux dev generic Ubuntu SMP Wed Jul UTC x x x GNULinux swift version Swift version swift PREVIEW Target x unknownlinuxgnu git clone cd SegmentationFault swift build Cloning HEAD is now at bc a make mappable tests public on reflection Resolved version Compile Swift Module Reflection sources Compile Swift Module Main sources Linking builddebugMain builddebugMain PersonfirstName James PersonfirstName James PersonfirstName James PersonfirstName James PersonfirstName James PersonfirstName pb a PersonfirstName u u a Segmentation fault Single threaded programs are easiest to make but we need to be mindful some codebases may struggle to ensure they dont block the main thread when using rd party libraries like ZeroMQ Passing data across threads is safe with libmill but libmill isnt threadsafe so we must suspend the coroutine and awake it when the worker task is finished Heres a very rough implementation func workerTclosure escaping Void throws T throws T var reader unixsock var writer unixsock unixpair reader writer let fd unixdetachwriter var result T nil var resultError SwiftError nil DispatchQueueglobalasync do result try closure catch resultError error let flags fcntlfd FGETFL fcntlfd FSETFL flags ONONBLOCK var done Byte sendfd done var byte Byte unixrecvreader byte unixclosereader guard resultError nil else throw resultError return result 