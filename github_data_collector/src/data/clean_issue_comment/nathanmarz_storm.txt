None Prividing additional substitution strings for the jvm opts provided to workers launched by this supervisor ID WORKERID STORMID and WORKERPORT fix Issue worker and supervisor heartbeat to nimbus using socket instead of write zookeeper node This PR is for to fix the default hash code for byte and other array in tuple This PR is for The core code modification is about lines and many others are generated by thrift main points interface changes compatible with old versions zk add topologyversion and updatedurationsec fields to StormBasestatus map zk add topologyversion to executor heartbeat worker local state add versions dir to storm workers current running topologyversion nimbus add updateTopology interface add topologyversion field to stormthrift three struct TopologySummary ExecutorSummary TopologyInfo update process storm client run storm jar xxxx c topologyupdatetrue to invoke topology update process storm client upload new jar file to nimbus storm client call nimbus updateTopology interface nimbus check the new topology and replace stormdiststormid dir nimbus update StormBase in zk set topologyversionfor destination version and updatedurationsecfor all workers update process duration fields to StormBasestatus map supervisors check zk StormBase and do the update work if topologys local version is not the same with zk version syncsupervisor download the latest code from nimbus to local stormdisttopologyversion dir each supervisor schedule the topologys worker update at a randexpectmaxupdatetime time point syncprocess check local worker version if it is not the same with syncsupervisor downloaded version and update time point reached set worker state to a new update state syncprocess kill workers in update state as normally syncprocess restart killed worker as normally expect that read topology and conf from stormdisttopologyversion dir new worker heartbeat to zk with new topologyversion it can be displayed on web ui to check update progress Currently DRPC requests could only be sent via Thrift API We have seen various users asking for HTTP interface This pull request enable one to configure drpc to be sent via HTTP andor thrift via stormyaml drpcport THRIFTPORT default drpchttpport HTTPPORT default unavailable When drpc server is started it will look into these configuration parameters to decide whether Thrift port andor HTTP port should be binded DRPC HTTP request will be received via GET via the following URI Addresses issue mridulj mrflip Consider java MapString Fields outputStreamMapping new HashMapString Fields outputStreamMappingputstreamA new Fieldsfieldina outputStreamMappingputstreamB new Fieldsfieldinb Stream s topologynewStreamtestStream spout StreamCollection multiStream seach sgetOutputFields new DebugMultiStreamstreamA streamB new StreamMapoutputStreamMapping Stream streamA multiStreamgetStreamstreamA streamAeachnew Fieldsfieldina new Debug update zookeeper from version to fix lein compile error main ERROR orgapachezookeeperserverNIOServerCnxnFactory Thread Thread main main died clojurelangCompilerCompilerException javalangClassNotFoundException backtypestormLocalCluster compilingtesting jclj at clojurelangCompilerInvokeExprevalCompilerjava clojure jarna at clojurelangCompilercompile Compilerjava clojure jarna at clojurelangCompilercompile Compilerjava clojure jarna at clojurelangCompilercompileCompilerjava clojure jarna at clojurelangRTcompileRTjava clojure jarna fix lein jar error Compiling stormtridenttesting javautilzipZipException duplicate entry backtypesvnallwcprops at javautilzipZipOutputStreamputNextEntryZipOutputStreamjava at javautiljarJarOutputStreamputNextEntryJarOutputStreamjava at sunreflectGeneratedMethodAccessor invokeUnknown Source at sunreflectDelegatingMethodAccessorImplinvokeDelegatingMethodAccessorImpljava at javalangreflectMethodinvokeMethodjava at clojurelangReflectorinvokeMatchingMethodReflectorjava at clojurelangReflectorinvokeInstanceMethodReflectorjava at leiningenjarfn invokejarclj X 