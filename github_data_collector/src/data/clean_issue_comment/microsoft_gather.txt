Describe the bug A clear and concise description of what the bug is Once I install this extension the jupyterlab manager doesnt work The problem disappears when the ext is uninstalled To Reproduce Steps to reproduce the behavior Install nbgather by jupyter labextension install nbgather Screenshots Seen above Desktop please complete the following information OS Red Hat Enterprise Linux Server release Browser Chrome Version eg Jupyter jupyter core jupyternotebook qtconsole not installed ipython ipykernel jupyter client jupyter lab nbconvert ipywidgets nbformat traitlets Additional context I recalled to see this buggy behavior on another extension autoversion Didnt test it In Issue micahjsmith proposed a new type of gather functionality nbgather could be made more extensible to let others build new plugins like that one which do new things with the gathered cells I imagine the interface for adding would involve a registerGatherCommand function where the caller provides a command title an icon and a callback that will get triggered and provided with the gathered cells Lets use this issue to track interest in having an API for registering new gather commands and design discussions about what that API would look like The light blue and pink highlighting that Gather uses look great in the default greywhite Jupyter Lab theme but highlighting REALLY highlights when you are in Dark mode or the Material Darker theme Is there a way to tone things down that I am missing Thanks Is your feature request related to a problem Please describe A user might want to clear the history of a notebook eg if they executed a cell with some sensitive data that they dont want to have stored to the notebook file Describe the solution youd like Add an action to the interface that lets someone Clear History This would then reset the execution history log and make sure that any history metadata saved with the notebook is emptied Describe alternatives youve considered Currently an analyst could open up the ipynb file on their own and delete the metadata that includes the execution history Additional context One additional benefit of this is reducing storage space for notebooks with very long histories Is your feature request related to a problem Please describe If we let people explore the versions of slices that produced results by default the tool may be unusable for long sessions This is because outputs can take up a lot of memory and when the notebook is saved storage To enable people to explore versions of slices with their output we need to keep every versions of every output produced Describe the solution youd like In the settings menu for the plugin include a configuration option for turning on the Gather from Revisions action Have a note next to the option that tells the user that if the feature is enabled all outputs ever created will be saved to a notebook which has the potential for increasing the size of the notebook many times Add documentation for how to do this to the README Describe alternatives youve considered Leave Gather to Revisions in by default That said our usability study suggested the tool is most useful for slicing and gathering code that was executed out of order not gathering from revisions I also feel that this feature while exciting hasnt yet reached the form where it will be obviously useful and easytouse in common cases where people want to use it So for this tool to be useful perhaps the feature of gathering from revisions should be optin only Additional context NA Describe the solution youd like It would be great if we could collect usage data from people who are using code gathering tools in their work This could help us decide on future improvements to this tool and collect data that could be shared other researchers and tool builders build better notebook tools Data collection would be strictly optin and would be off by default Additional context To do this we would need the following x Fill out relevant institutional paperwork A nonintrusive easytodismiss popup that appears when someone uses the tool that asks if folks want to share their usage data with us with a description of the data that will be collected anonymization of the data and research goals Persistent storage of a users choice Use this choice to decide whether to report log events A server eg notebooksberkeleyedu that receives log events over a secure server Some of the events we might want to collect are when code gathering events get invoked how large are the slices Where in the notebook do they come from Are these slices opened in notebooks scripts or as cells in existing notebooks