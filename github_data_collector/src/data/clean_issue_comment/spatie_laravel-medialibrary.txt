when i try to define image height it not work only width is set this is my model codes public function registerMediaConversionsMedia media null thisaddMediaConversioneventsthumb width height when i retrive converter image he height is Any recommended approach to manually get the appropriates placeholder value for a given conversion Im using Laravel solely as an API and React in the frontend So far Ive come up with the following hack but do not believe in any way that this is a proper solution this is in my base Media model Extract Placeholder from Srcset param conversion return arrayint public function getPlaceholderconversion pregmatchdataimage base thisgetSrcsetconversion match placeholder explode arrayshiftmatch return arrayshiftplaceholder The function above returns the base placeholder I know we can use itemmedia to get all media for a selected item but I prefer the same output as getMedia As it turns out you can run getMedia and pass an empty collectionName as argument This will load all media with loadMedia and supports empty strings This seems to be expected intended behaviour I didnt expect this to be honest I know its hard to predict the future but can I expect this to stay like this or did I wake a sleeping dog Thanks for all the hard work by the way Its very much appreciated I couldnt see this in docs is it possible When i just try to get the path of a conversion php item Mediafind itemgetPath I get the following error PHP Error Maximum function nesting level of reached aborting in vendorlaravelframeworksrcIlluminateContainerContainerphp on line I am on version now and my conversions are defined like this php public function registerMediaConversionsSpatieMedia media null foreach AS width thisaddMediaConversionwidthwidthwidth Add authentication to retreive files from webdav Im trying to have an protected WebDav storage stackstoragecom to be accessable You can access objects via an URL like however you need HTTP authentication My question is how can I retrieve the files with a HTTP basic auth I currently have a class WebdavUrlGenerator which should generate those URLs but I have no clue on where to set the header for the request Q A Version When using the addMediaFromDisk method it looks like the system makes a direct copy of the file For files hosted on a remote provider this means that the file needs to be downloaded to the server then reuploaded Id like to propose that we utilize the copy command instead if available For example changing this To something like this php public function copyToMediaLibraryFromRemoteRemoteFile file Media media string type null string targetFileName null storage StoragediskfilegetDisk destinationFileName targetFileName filegetFilename destination thisgetMediaDirectorymedia typedestinationFileName thisfilesystemdiskmediadisk getDrivercopy filegetKey destination Ive tested the above with S and it seems to work Although I havent texted with any other drivers Any thoughts I need to migrate all files that were stored previously with medialibrary on s disk to the public disk Im looking for a way to copy the files in that way if something goes wrong nothing is affected on Prod environment Ive searched on the docs for an example to copy from one disk to another but I couldnt find one Any help would be appreciated In the Spatie MediaLibrary Models Media class there is the following function public function getPathstring conversionName string urlGenerator UrlGeneratorFactorycreateForMediathis conversionName return urlGeneratorgetPath The UrlGeneratorFactorycreateForMedia returns a type of the UrlGenerator interface which does not contain the getPath function We had written our own UrlGenerator according to the docs but when it went live we were seeing errors with the PerformConversions due to this unexpected method call which we hadnt implemented Per documentation at you should be able to add a getImageGenerators method in your model in order to use a custom generator specific to that model Unfortunately it appears that this method will never get called as the getImageGenerators method is called on the Spatie Media model and it gets the generators from the config file and never attempts to fetch from the model Youd have to do this with a custom Media model instead of just using the Spatie Media model with custom generators defined our own models as the documentation describes Let me know if a PR would warrant allowing this This would modify the HasMedia and HasMediaTraits to include a blank getImageGenerators method that by default returns an empty collection Then the Spatie media model can call this method from the model instance and if its not empty use the generators returned otherwise default to getting the generator list from configuration This will allow the process in documentation to work and existing behavior to still function Id be happy to create one if you feel comfortable with the approach described 