This pr fixs bug of class DenseEinsum Please go to Stack Overflow for help and support Also please understand that many of the models included in this repository are experimental and researchstyle code If you open a GitHub issue here is our policy It must be a bug a feature request or a significant problem with documentation for small docs fixes please send a PR instead The form below must be filled out Heres why we have that policy TensorFlow developers respond to issues We want to focus on work that benefits the whole community eg fixing bugs and adding features Support only helps individuals GitHub also notifies thousands of people when issues are filed We want them to see you communicating an interesting problem rather than being redirected to Stack Overflow System information What is the toplevel directory of the model you are using researchglobalobjectives Have I written custom code as opposed to using a stock example script provided in TensorFlow NA OS Platform and Distribution eg Linux Ubuntu NA TensorFlow installed from source or binary Binary TensorFlow version use command below TF x Bazel version if compiling from source NA CUDAcuDNN version NA GPU model and memory NA Exact command to reproduce tfupgradev fails You can collect some of this information using our environment capture script You can obtain the TensorFlow version with python c import tensorflow as tf printtfGITVERSION tfVERSION Describe the problem I would like to request that the excellent loss functions in losslayers get upgraded to use TF x perhaps even with appropriate Keras wrappers and promotion to mainline TF I recently discovered the research work here and tried using it in my TF x project but was not sure how to upgrade the usage of the modelvariables although I did get rocaucloss up and running In general if these loss functions are stable I believe they would represent important advances to the machine learning community if they were added into the main repository it still seems to be a relatively common belief that one cannot optimize towards precisionrecallrelated objectives and this would help dispel that notion Thank you to mackeyagoogle and the original authors for putting this out there Source code logs Include any logs or source code that would be helpful to diagnose the problem If including tracebacks please include the full traceback Large logs and files should be attached Try to provide a reproducible test case that is the bare minimum necessary to generate the problem Relevant section of upgrade log ERROR Using member tfcontribframeworkmodelvariable in deprecated module tfcontrib tfcontribframeworkmodelvariable cannot be converted automatically tfcontrib will not be distributed with TensorFlow please consider an alternative in noncontrib TensorFlow a communitymaintained repository such as tensorflowaddons or fork the required code Please go to Stack Overflow for help and support Also please understand that many of the models included in this repository are experimental and researchstyle code If you open a GitHub issue here is our policy It must be a bug a feature request or a significant problem with documentation for small docs fixes please send a PR instead The form below must be filled out Heres why we have that policy TensorFlow developers respond to issues We want to focus on work that benefits the whole community eg fixing bugs and adding features Support only helps individuals GitHub also notifies thousands of people when issues are filed We want them to see you communicating an interesting problem rather than being redirected to Stack Overflow System information What is the toplevel directory of the model you are using Struct Depth Have I written custom code as opposed to using a stock example script provided in TensorFlow yes in pytorch OS Platform and Distribution eg Linux Ubuntu Linux Ubuntu TensorFlow installed from source or binary Not needed TensorFlow version use command below Not needed Bazel version if compiling from source Not needed CUDAcuDNN version GPU model and memory GeForce GB Exact command to reproduce None You can collect some of this information using our environment capture script You can obtain the TensorFlow version with python c import tensorflow as tf printtfGITVERSION tfVERSION Describe the problem Hi aneliaangelova Could you please let me know what should be the ideal value of global scale var when its trained I am trying to implement object constraint loss in pytorch but facing difficulties The scale var I defined slowly decreases to zero I posted a similar question on stackoverflow Thankyou python s tftrainSaverslimgetmodelvariablesscope nasnet whats the scope because nasnet is not right Thanks System information OS Platform and Distribution eg Linux Ubuntu LTS TensorFlow version use command below CUDAcuDNN version GPU model and memory Nvidia tegra x sudo pip install pre extraindexurl tensorflowgpu Describe the problem I have installed the Tensorflow API Object Detection from the r branch in my Jetson TX and I executed the objectdetectiontutorialpynb from r branch with the pretrained SSD mobinet v v In both cases the model take s s in make an inference with the example images provided is taking too much time also I cant see my GPU device with tftestisgpuavailable tftestgpudevicename Any idea of what am i doing wrong maybe Has anybody script or knew command to generate Deeplab documentation from code comments deeplab Deeplab System information What is the toplevel directory of the model you are using objectdetection Have I written custom code as opposed to using a stock example script provided in TensorFlow no OS Platform and Distribution eg Linux Ubuntu Ubunto TensorFlow installed from source or binary binary TensorFlow version use command below Bazel version if compiling from source CUDAcuDNN version CUDA GPU model and memory Titan RTX GB Exact command to reproduce not relevant Describe the problem I see one can configure a masks predictions head in an SSD model as can be seen here But I dont find in the code how it is being used and whether and how it contributes to the loss function I know the API supports Mask RCNN but I need to use the singlestage variant instead Please share any insights regarding how the API produces the mask predictions and where is the code which wires it to the total loss If it is not is it expected Thanks in advance Changed tfgfileGFile in line to tfiogfileGFile Machine Win bit python Anaconda python tensorflow model configuration ssdmobilenetv cococonfig pretrained model used ssdmobilenetv in modelresearch python objectdetectionlegacytrainpy logtostderr traindirobjectdetectiontraining pipelineconfigpathobjectdetectionssdmobilenetv cococonfig error googleprotobuftextformatParseError Message type objectdetectionprotosHyperparams has no field named s Any help please