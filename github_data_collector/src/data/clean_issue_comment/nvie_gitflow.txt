 If you can convince nvie to officially deprecate and point to gitflowavh then well consider it Otherwise were going to fall back to the relative upstream names Git management systems github gitlab etc often support referencing existing commits as part of issues merges etc When finishing a feature it would be neat to get the commit hash of the created merge commit so you can share it easily with your peers Proposal Summary of actions The feature branch featurexyz was merged into develop The merging commit is f cf Feature branch featurexyz has been removed You are now on branch develop Is there any gitflow configuration file that can be shared so that gitflow works the same way across all developers in a team There are several ways that gitflow works that are against how you should work in a team Example After you create a feature branch from develop and work on it and you finish it that should NEVER ALLOW that branch to be merged into develop locally and even more important not on origin Thats why in the XXI century we have PRs Should never allow under any kind of circumstance the deletion of branches mainly origin deleting on local should always be false unless specified differently Is there any way to configure this by default Thanks I have configured notepad through git bash and it used to work really well But now since two days it says that notepadexe not found Also now since minutes it says syntax error near unexpected token I am not being able to understand the problem Just do these commands in your terminal git status git add git status git commit m Commit typechanges It works well for me Originally posted by Lapinou in The following may be a Git Flow issue or a Git for Windows issue In addition to this ticket I also opened the following With the following environment Git for Windows git version windows cpu x built from commit c cbe f a ee c f dd aa sizeoflong sizeofsizet Windows Version cmdexe c ver Microsoft Windows Version I have the following issue git flow release start v c e d b d f e bd f edc a c e c cf Fatal Base c e d b d f e bd f edc a c e c cf needs to be a branch It does not exist and is required Notes This does not happen when using Git for Windows version windows or git for nix The same issue happens when using SourceTool embedded or system The work around is to use the following raw command git checkout b release c e d b d f e bd f edc a c e c cf How about support git flow release start but with changes in the working tree Will need to require that the commit is on the develop branch to avoid merge conflicts See 