 Rhino incorrect date on releases section Revision rhino Test case var NISLFuzzingFunc function use strict printthis NISLFuzzingFunc Execution steps java jar rhino jar debug version testcasejs Output object global Expected behavior undefined Description According to ES standard this is not converted to the global object in strict mode the initial value of this should be undefined However when running this test case blow the output of rhino is object global The references are as follows If you call out to a Java method and it returns a string s then typeof s returns object not string sreplace calls the Java version of replace not the JavaScript version so sreplace for jhgj jh jjh jh returns jhgjjhjjhjh not jhgjjh jjh jh Suggested fix after this line in NativeJavaMethodcall Object retval methinvokejavaObject args add this check to convert it to a native JavaScript string ie typeof returns string not object if retval instanceof String return NativeJavaObjectcoerceTypeImplStringclass retval Library I open source by GPL What do I need to do for calling Rhino MPLsuch as copy MPL This includes function yield and yield support It is only activated if the language level is LANGUAGEES or At lower language levels the yield keyword still triggers the preES generator support that Rhino supported in previous releases This addresses a few issues Executing the following code public static void mainString cmdlineArgs throws Throwable final Context context ContextFactorygetGlobalenterContext try final Script compiledScript contextcompileString n function n n n n throw Error n n nthis closing parenthesis is the end of the expression that returns the function n n eval null ScriptableObject global contextinitSafeStandardObjects final Object obj ScriptRuntimedoTopCall Context cx Scriptable scope Scriptable thisObj Object args compiledScriptexeccontext scope context global null new Object true int i catchRhinoException ex SystemoutprintlnexgetScriptStackTrace finally Contextexit This results in the following output at eval anonymous at eval Expected output at eval anonymous at eval Another example using a variable expression final Script compiledScript contextcompileString var x functionthrow Error n n n x n n n n eval null The output becomes at eval anonymous at eval The expected being remove the parenthesis around x while keeping the newlines at eval anonymous at eval The line number seems incorrectly supplied by the interpreter At least if you replace throw Error with undefinedprop then the resulting EcmaError as opposed to this examples JavasSriptException will have the same issue The issue may originate somewhere earlier in the sequence of events Hello I am one of the maintainers of the Maven Central Repository at Sonatype Our content delivery provider Fastly recently informed us of an SBL Spamhaus Block List abuse report related to a Rhino distribution currently hosted in Central The implicated artifact is The SBL abuse report was previously located at Ive since spoken with an SBL representative and they have removed the report after running the artifact through one of their internal virus scanning tools I wanted to raise this issue however as this is the second time weve received a malware report for Rhino It seems that this artifact is being flagged as malicious by certain malware detection vendors we were not told which It might be worth some research to determine the cause of this activity If it is determined that the artifact is indeed vulnerable please let us know and we will remove it from Maven Central A quick glance revealed the following issues which may be related though they do pertain to different versions For the following declaration javascript var x new XMLxml CDATA text node text node xml The following expressions are all true javascript xtoString text node text node xlength xchild nodeKind text xchild nodeKind text xchild toString text node xchild toString text node xtextlength expected false xtexttoString text node expected false Expected result is that xtoString xtexttoString is true jmh benchmark rhino Benchmark Mode Cnt Score Error Units Scoremin RhinoJavaMembersBenchmarkbase Member p thrpt opsms RhinoJavaMembersBenchmarkbase Member p thrpt opsms RhinoJavaMembersBenchmarkbase Member p thrpt opsms RhinoJavaMembersBenchmarkbase Member p thrpt opsms RhinoJavaMembersBenchmarkbase Member p thrpt opsms RhinoJavaMembersBenchmarkbase Member p thrpt opsms RhinoJavaMembersBenchmarklazyInitOff Member p thrpt opsms RhinoJavaMembersBenchmarklazyInitOn Member p thrpt opsms RhinoJavaMembersBenchmarkold Member p thrpt opsms RhinoJavaMembersBenchmarkold Member p thrpt opsms RhinoJavaMembersBenchmarkold Member p thrpt opsms RhinoJavaMembersBenchmarkold Member p thrpt opsms RhinoJavaMembersBenchmarkreflectCacheOff Member p thrpt opsms rhino Benchmark Mode Cnt Score Error Units Scoremin RhinoJavaMembersBenchmarkbase Member p thrpt opsms RhinoJavaMembersBenchmarkbase Member p thrpt opsms RhinoJavaMembersBenchmarkbase Member p thrpt opsms RhinoJavaMembersBenchmarkbase Member p thrpt opsms RhinoJavaMembersBenchmarkbase Member p thrpt opsms RhinoJavaMembersBenchmarkbase Member p thrpt opsms RhinoJavaMembersBenchmarklazyInitOff Member p thrpt opsms RhinoJavaMembersBenchmarklazyInitOn Member p thrpt opsms RhinoJavaMembersBenchmarkold Member p thrpt opsms RhinoJavaMembersBenchmarkold Member p thrpt opsms RhinoJavaMembersBenchmarkold Member p thrpt opsms RhinoJavaMembersBenchmarkold Member p thrpt opsms RhinoJavaMembersBenchmarkreflectCacheOff Member p thrpt opsms 