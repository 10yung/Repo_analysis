Hello dev How to get result in current Screen from previous Screen Just like startActivityForResult Zhuinden In corechargeconsumerdebug flowInternalLifecycleIntegration has leaked static FontsContractsContext DebugConsumerAppinjectedAuthenticatedStuff ConsumerAppInjectedAuthenticatedStuffonSignedInHelper OnSignedInHelpersignInHooks array OnSignedIn PlaceDirectionsplaceIDToDirectionsRelays LinkedHashMaptail LinkedHashMapLinkedHashMapEntryvalue BehaviorRelaystate RelaySubscriptionManagervalue RelaySubscriptionManagerStateobservers array RelaySubscriptionManagerRelayObserver RelaySubscriptionManagerRelayObserveractual OperatorObserveOnObserveOnSubscriberchild OnSubscribeOnAssemblyOnAssemblySubscriberactual SafeSubscriberactual ActionSubscriberonNext WalkingTimeViewsetPlace this anonymous implementation of rxfunctionsAction WalkingTimeViewmContext FlowContextWrappermBase MainActivitymFragments FragmentControllermHost ActivityHostCallbacksmFragmentManager FragmentManagerImplmAdded ArrayListelementData array Object InternalLifecycleIntegration A fun thing I learned today is that Flow uses Fragments for some reason Im looking at the InternalLifecycleIntegration code and Im pretty much baffled by whats going on Looks like it attaches a fragment to the Activity in onCreate but then somehow FragmentManager is keeping a reference to it even after the activity has been destroyed LeakCanary fwiw Hasnt been a commit or really much activity in some time and it remains in Alpha how to implement BottomNavigationView and view pager it must use Fragment how can I implement it by using flow Screen Im interested in using Flow in my next app but Im concerned that its been in alpha for a long time Is Flow still under active development If so would it be possible to provide a rough ETA for a release Just bump android plugin and libraries version The builder constructor checks that keyChanger is never null so we dont need a default value I try to use RestClient in square flow This is my step Example Main screen call rest api in presenter And then go to screen On screen call goBack Why when go back to screen rest api is called How prevent rest client running when goBack Why is a view with id a View with no id but a view with id is treated as View with id As far as I can see in the documentation ViewNOID is Even more reading the source code Android ignores the state of any view with no id java protected void dispatchSaveInstanceStateSparseArrayParcelable container if mID NOID mViewFlags SAVEDISABLEDMASK stuff Im not sure if this is a bug or Im missing something alpha user taps back button were on the loading screen so we just pass along the call to ActivityonBackPressed LoadingScreenView finishes loading its data kicks off a call to transition from LoadingScreenMapScreen ActivityonPause fires ActivityonDestroy fires KeyManagertearDown is called transition finishes and tries to also tear down the LoadingScreen key crashes This is the first call to KeyManagertearDown flowKeyManagerdecrementAndMaybeRemoveKeyKeyManagerjava flowKeyManagertearDownKeyManagerjava flowInternalLifecycleIntegrationonDestroyInternalLifecycleIntegrationjava androidappFragmentperformDestroyFragmentjava androidappFragmentManagerImplmoveToStateFragmentManagerjava androidappFragmentManagerImplmoveToStateFragmentManagerjava androidappFragmentManagerImplmoveToStateFragmentManagerjava androidappFragmentManagerImpldispatchDestroyFragmentManagerjava androidappFragmentControllerdispatchDestroyFragmentControllerjava androidappActivityperformDestroyActivityjava And the actual crash E Caused by javalangNullPointerException Attempt to read from field int flowKeyManagerManagedServicesuses on a null object reference E at flowKeyManagerdecrementAndMaybeRemoveKeyKeyManagerjava E at flowKeyManagertearDownKeyManagerjava E at flowFlowPendingTraversalonTraversalCompletedFlowjava E at corechargeconsumertransitionFlowKeyChangerstartTransition onNextFlowKeyChangerkt E at corechargeconsumertransitionFlowKeyChangerstartTransition onNextFlowKeyChangerkt E at rxobserversSafeSubscriberonNextSafeSubscriberjava E at rxinternaloperatorsOnSubscribeOnAssemblyOnAssemblySubscriberonNextOnSubscribeOnAssemblyjava E at rxinternaloperatorsOperatorObserveOnObserveOnSubscribercallOperatorObserveOnjava E at rxandroidschedulersLooperSchedulerScheduledActionrunLooperSchedulerjava Im not at all sure what the real fix is here