Please answer these questions before submitting your issue Thanks What version of Cassandra are you using Amazon Managed Cassandra version What version of Gocql are you using v f edb a What did you do Tried to connect to Amazon Managed Cassandra using gocql clusterConfig gocqlNewClustercassandrauseast amazonawscom clusterConfigAuthenticator gocqlPasswordAuthenticatorUsername username Password password clusterConfigSslOpts gocqlSslOptions CaPath AmazonRootCA pem clusterConfigKeyspace test session err clusterConfigCreateSession What did you expect to see Successful gocql Session creation What did you see instead error gocql unable to create session control unable to setup connection Column family TableIdentifierksNamesystem cfNamelocal is not writable If you are having connectivity related issues please share the following additional information Describe your Cassandra cluster please provide the following information output of nodetool status nodetool Failed to connect to cassandrauseast amazonawscom ConnectIOException nonJRMP server at remote endpoint output of SELECT peer rpcaddress FROM systempeers peer rpcaddress null null null null null null null null null rebuild your application with the gocqldebug tag and post the output T ERROR filterfiltergo error error gocql unable to create session control unable to setup connection Column family TableIdentifierksNamesystem cfNamelocal is not writable What version of Cassandra are you using What version of Gocql are you using f edb a a cc a eb f c edba d What did you do With a token aware host policy Modified a keyspace with NetworkTopologyStrategy to have replicas in one if its datacenter Tried to create a session with the same keyspace set in the ClusterConfig What did you expect to see No panics What did you see instead A panic in gocql I have a keyspace in a cluster with two datacenters DC and DC We wanted to remove the data for this keyspace from DC to do that I ran this query alter KEYSPACE vincenttest WITH replication class NetworkTopologyStrategy DC DC This triggered a keyspace changed event and cause a panic in gocql panic invalid replicationfactor Is the vincenttestdcDC keyspace configured correctly goroutine running githubcomgocqlgocqlgetReplicationFactorFromOpts xc c x x b fe xc x homevincentdevgosrcgithubcomgocqlgocqltopologygo x bd githubcomgocqlgocqlgetStrategy xc a xc xc a homevincentdevgosrcgithubcomgocqlgocqltopologygo x de githubcomgocqlgocqltokenAwareHostPolicyupdateReplicas xc f xc c xc f xc homevincentdevgosrcgithubcomgocqlgocqlpoliciesgo x githubcomgocqlgocqltokenAwareHostPolicyKeyspaceChanged xc f xc f xc xc f f x homevincentdevgosrcgithubcomgocqlgocqlpoliciesgo xac githubcomgocqlgocqlSessionhandleKeyspaceChange xc a xc f xc xc f f x homevincentdevgosrcgithubcomgocqlgocqleventsgo x githubcomgocqlgocqlSessionhandleSchemaEvent xc a xc c x x homevincentdevgosrcgithubcomgocqlgocqleventsgo x f created by githubcomgocqlgocqleventDebouncerflush homevincentdevgosrcgithubcomgocqlgocqleventsgo x f The cause is here Additionnally the same panic can be triggered by forcing the keyspace in the ClusterConfig panic invalid replicationfactor Is the vincenttestdcDC keyspace configured correctly goroutine running githubcomgocqlgocqlgetReplicationFactorFromOpts xc de x x b fe xc e x homevincentdevgosrcgithubcomgocqlgocqltopologygo x bd githubcomgocqlgocqlgetStrategy xc xc xc homevincentdevgosrcgithubcomgocqlgocqltopologygo x de githubcomgocqlgocqltokenAwareHostPolicyupdateReplicas xc f xc x xc homevincentdevgosrcgithubcomgocqlgocqlpoliciesgo x githubcomgocqlgocqltokenAwareHostPolicyKeyspaceChanged xc f x xc x x homevincentdevgosrcgithubcomgocqlgocqlpoliciesgo xac githubcomgocqlgocqlSessioninit xc d xc f d x homevincentdevgosrcgithubcomgocqlgocqlsessiongo x ca githubcomgocqlgocqlNewSession xc aa x x x e b x x x c x c x x homevincentdevgosrcgithubcomgocqlgocqlsessiongo x fd githubcomgocqlgocqlClusterConfigCreateSession homevincentdevgosrcgithubcomgocqlgocqlclustergo mainmain homevincenttmpgocqlrf repromaingo x But if I dont force the keyspace and leave it blank everything works fine I dont think this should panic because this use case is legitimate gocql is fine with a RF of in some cases the java driver doesnt have a problem with a RF of Here is the code I used to reproduce the bug go package main import log os time githubcomgocqlgocql githubcomsirupsenlogrus func main gocqlLogger logNewosStderr gocql cfg gocqlNewCluster cfgHostFilter gocqlDataCentreHostFilterDC cfgKeyspace vincenttest fallback gocqlRoundRobinHostPolicy cfgPoolConfigHostSelectionPolicy gocqlTokenAwareHostPolicyfallback session err cfgCreateSession if err nil logrusFatalerr for range timeTick timeSecond iter sessionQuerySELECT FROM vincenttestfoobarIter var id gocqlUUID username string for iterScan id username logrusPrintfid s username s id username if err iterClose err nil logrusFatalerr and the schema CREATE KEYSPACE vincenttest WITH replication class NetworkTopologyStrategy DC DC AND durablewrites true CREATE TABLE vincenttestfoobar id uuid PRIMARY KEY username text I tested this with a cluster of nodes in DC and in DC on a local machine Happy to provide more information if necessary Can an owner please make a release of code as it stands so I can better pin my go modules to that release I do not want referring modules to keep updating to head as commits happen Using GetCustomPayload for the first time I mistakenly called the function after I had called Close on the Iter This resulted in a panic I think it would be better for it to work similar to the Warnings function and return nil in the case where the framer is nil I was trying hardly to code a working transaction query and failed Please addgive example code for it thanks cqlsh Cassandra CQL spec Native protocol v sql TRUNCATE table configurationdetails err gocqlSessionQuerysqlExec when call SessionQuery to truncate my tablebut this dont workalso dont return an erris this a bug please help me Please answer these questions before submitting your issue Thanks What version of Cassandra are you using Scylla What version of Gocql are you using a ad b c beec d b e What did you do Heres reproducer Schema sql create keyspace t with replication class SimpleStrategy replicationfactor create table tc text primary key insert into tc values insert into tc values insert into tc values insert into tc values Source go package main import githubcomgocqlgocql func querysession gocqlSession var c string q sessionQueryselect from tPageSize defer qRelease iter qIter count for iterScan c count if count break if err iterClose err nil panicerr func main cluster gocqlNewCluster clusterKeyspace t session err clusterCreateSession if err nil panicerr go func for querysession for querysession The following is important Requests should execute in parallel Custom page size Iterating over rows but interrupting before next page Other combinations of page size and count do not seem to work but I suspect this is due to how page prefetching works In production I read single partition rows long and can reproduce the issue with count in range of to Everything else is working fine What did you expect to see No panic What did you see instead panic runtime error invalid memory address or nil pointer dereference signal SIGSEGV segmentation violation code x addr x pc x goroutine running githubcomgocqlgocqlqueryMetricsaddAttempts x x xc x UserscrekerDownloadstestvendorgithubcomgocqlgocqlsessiongo x githubcomgocqlgocqlQueryattempt xc e x a x xbf d e e c xd abeb x e xbf d e c e xcadb x e xc a UserscrekerDownloadstestvendorgithubcomgocqlgocqlsessiongo x githubcomgocqlgocqlqueryExecutorattemptQuery xc a de x eaa xc x aa xc e xc e x UserscrekerDownloadstestvendorgithubcomgocqlgocqlqueryexecutorgo x githubcomgocqlgocqlqueryExecutordo xc a de x eaa xc x aa xc e x UserscrekerDownloadstestvendorgithubcomgocqlgocqlqueryexecutorgo x c githubcomgocqlgocqlqueryExecutorexecuteQuery xc a de x aa xc e x x x UserscrekerDownloadstestvendorgithubcomgocqlgocqlqueryexecutorgo x githubcomgocqlgocqlSessionexecuteQuery xc xc e x UserscrekerDownloadstestvendorgithubcomgocqlgocqlsessiongo xb githubcomgocqlgocqlnextIterfetchfunc UserscrekerDownloadstestvendorgithubcomgocqlgocqlsessiongo x e syncOncedoSlow xc a xc b usrlocalgosrcsynconcego xe syncOnceDo usrlocalgosrcsynconcego githubcomgocqlgocqlnextIterfetch xc a x e UserscrekerDownloadstestvendorgithubcomgocqlgocqlsessiongo x e created by githubcomgocqlgocqlIterScan UserscrekerDownloadstestvendorgithubcomgocqlgocqlsessiongo x cc exit status This is just one of the panic examples In production I was able to get all kinds of panics Heres a few more panic runtime error invalid memory address or nil pointer dereference signal SIGSEGV segmentation violation code x addr x pc x c ab goroutine running syncRWMutexRLock usrlocalgosrcsyncrwmutexgo githubcomgocqlgocqlSessionClosed x x projvendorgithubcomgocqlgocqlsessiongo x b githubcomgocqlgocqlSessionexecuteQuery x xc e xbc a bd projvendorgithubcomgocqlgocqlsessiongo x f githubcomgocqlgocqlnextIterfetchfunc projvendorgithubcomgocqlgocqlsessiongo x e syncOncedoSlow xc cdc xc cfb usrlocalgosrcsynconcego xe syncOnceDo usrlocalgosrcsynconcego githubcomgocqlgocqlnextIterfetch xc cdb x a projvendorgithubcomgocqlgocqlsessiongo x e created by githubcomgocqlgocqlIterScan projvendorgithubcomgocqlgocqlsessiongo x cc exit status panic runtime error index out of range with length goroutine running githubcomgocqlgocqlcreateRoutingKey xc a a x x x x xc a a x x x projvendorgithubcomgocqlgocqlsessiongo x githubcomgocqlgocqlQueryGetRoutingKey xc c x x x x x projvendorgithubcomgocqlgocqlsessiongo xf githubcomgocqlgocqltokenAwareHostPolicyPick xc fd a x a fc xc c x projvendorgithubcomgocqlgocqlpoliciesgo x githubcomgocqlgocqlqueryExecutordo xc f x a ab xc aa x a fc xc c x projvendorgithubcomgocqlgocqlqueryexecutorgo x githubcomgocqlgocqlqueryExecutorexecuteQuery xc f x a fc xc c x x x projvendorgithubcomgocqlgocqlqueryexecutorgo x githubcomgocqlgocqlSessionexecuteQuery xc xc c xbc cd fd projvendorgithubcomgocqlgocqlsessiongo xb githubcomgocqlgocqlnextIterfetchfunc projvendorgithubcomgocqlgocqlsessiongo x e syncOncedoSlow xc f f xc d fb usrlocalgosrcsynconcego xe syncOnceDo usrlocalgosrcsynconcego githubcomgocqlgocqlnextIterfetch xc f e x a projvendorgithubcomgocqlgocqlsessiongo x e created by githubcomgocqlgocqlIterScan projvendorgithubcomgocqlgocqlsessiongo x cc exit status panic runtime error invalid memory address or nil pointer dereference signal SIGSEGV segmentation violation code x addr x pc x c c goroutine running syncMutexLock usrlocalgosrcsyncmutexgo githubcomgocqlgocqlSessionroutingKeyInfo x x a ab xc aa x x x x x projvendorgithubcomgocqlgocqlsessiongo x githubcomgocqlgocqlQueryGetRoutingKey xc a x x x x x projvendorgithubcomgocqlgocqlsessiongo x githubcomgocqlgocqltokenAwareHostPolicyPick xc d b x a fc xc a x projvendorgithubcomgocqlgocqlpoliciesgo x githubcomgocqlgocqlqueryExecutordo xc ec x a ab xc aa x a fc xc a x projvendorgithubcomgocqlgocqlqueryexecutorgo x githubcomgocqlgocqlqueryExecutorexecuteQuery xc ec x a fc xc a x x x projvendorgithubcomgocqlgocqlqueryexecutorgo x githubcomgocqlgocqlSessionexecuteQuery xc d xc a x projvendorgithubcomgocqlgocqlsessiongo xb githubcomgocqlgocqlnextIterfetchfunc projvendorgithubcomgocqlgocqlsessiongo x e syncOncedoSlow xc d b xc e fb usrlocalgosrcsynconcego xe syncOnceDo usrlocalgosrcsynconcego githubcomgocqlgocqlnextIterfetch xc d b x a projvendorgithubcomgocqlgocqlsessiongo x e created by githubcomgocqlgocqlIterScan projvendorgithubcomgocqlgocqlsessiongo x cc exit status I suspect I could get a few more but they all would have the same origin as the above created by githubcomgocqlgocqlIterScan projvendorgithubcomgocqlgocqlsessiongo x cc Please answer these questions before submitting your issue Thanks What version of Cassandra are you using What version of Gocql are you using githubcomgocqlgocql v a ad b What did you do Create session failed session err clusterCreateSession err is not nil I am able to connect to the same hostport via telnet netcat or golang netDial What did you expect to see Create session should succeed What did you see instead unable to create session unable to discover protocol version gocql no response to connection startup within timeout If you are having connectivity related issues please share the following additional information Describe your Cassandra cluster please provide the following information output of nodetool status nodetool status Datacenter euireland StatusUpDown StateNormalLeavingJoiningMoving Address Load Tokens Owns effective Host ID Rack UN KiB c c ac a de af c c output of SELECT peer rpcaddress FROM systempeers cassandracqlsh SELECT peer rpcaddress FROM systempeers peer rpcaddress rows rebuild your application with the gocqldebug tag and post the output Would you please tell me how to rebuild your application with the gocqldebug tag I think everything is in the title In fact a CreatedAt field name would result to be createdat instead of anything custom such as createdat or CreatedAt package models import githubcomgocqlgocql time type CMessage struct ID gocqlUUID protobufbytes optnameIDproto jsonIDomitempty cqlID IsArchived bool protobufvarint optnameIsArchivedproto jsonIsArchivedomitempty cqlIsArchived CreatedAt timeTime protobufbytes optnameCreatedAtproto jsonCreatedAtomitempty cqlCreatedAt UpdatedAt timeTime protobufbytes optnameUpdatedAtproto jsonUpdatedAtomitempty cqlUpdatedAt ThreadID string protobufbytes optnameThreadIDproto jsonThreadIDomitempty cqlThreadID MessageStatus int protobufvarint optnameMessageStatusproto jsonMessageStatusomitempty cqlMessageStatus SentAt timeTime protobufbytes optnameSentAtproto jsonSentAtomitempty cqlSentAt SenderID string protobufbytes optnameSenderIDproto jsonSenderIDomitempty cqlSenderID MessageType int protobufvarint optnameMessageTypeproto jsonMessageTypeomitempty cqlMessageType UserIDWhoLeft string protobufbytes optnameUserWhoLeftproto jsonUserIDWhoLeftomitempty cqlUserIDWhoLeft Content string protobufbytes optnameContentproto jsonContentomitempty cqlContent Id like to inject netDialer from outside of this package I added an option to receive netDialer in ClusterConfig