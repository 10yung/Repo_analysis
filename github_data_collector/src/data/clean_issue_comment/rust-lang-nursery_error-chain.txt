 reformatted things but without explicit work itll drift out of line again This PR checks that Hello the current rustlangnursery organisation is considered deprecated and the Rust Programming Language organisation is trying to consolidate managing Rusts GitHub organisations as such wed like you to consider moving your repository to the main rustlang organisation instead How Do I Move To rustlang You wont be able to transfer your repository directly youll need to transfer your repository to MarkSimulacrum who will then move your repository to the rustlang organisation Deprecating If you no longer intend to maintain this repository please let us know and we will take of deprecating the project I have a library project where I would like to force documentation and detect ommissions using the mechanism of putting this directing in the crate root denymissingdocs However I get these errors reported originating in errorchain error missing documentation for a variant srclibrs errorchain types Error ErrorKind ResultExt Result note lint level defined here srclibrs denymissingdocs note this error originates in a macro outside of the current crate in Nightly builds run with Z externalmacrobacktrace for more info I have tried adding allowmissingdocs at various places beforewithin the errorchain blocks without success Anyone know how this can be done error a method with this name may be added to the standard library in the future srclibrs if let Somebacktrace self backtrace note D unstablenamecollisions implied by D warnings warning once this method is added to the standard library the ambiguity may cause an error or change in behavior note for more information see issue help call with fully qualified syntax ChainedErrorbacktrace to keep using the current method help add featurebacktrace to the crate attributes to enable stderrorErrorbacktrace For example errors doc Response not complete first is protocol status and second is app status see fastcgi protocol EndRequestprotocolstatus ProtocolStatus appstatus u descriptionEnd request error displaymatch protocolstatus ProtocolStatusCantMpxConn This app cant multiplex CantMpxConn AppStatus ProtocolStatusOverloaded New request rejected too busy OVERLOADED AppStatus ProtocolStatusUnknownRole Role value not known UnknownRole AppStatus unreachable appstatus But now display not support first argument is string literal so more complex expression of display is not work is there a choice to support it Moving them out of bin would help us to reduce number of downstream changes in errorchain packaging in Fedora Thanks SymbolDladdrref s return saddr expected enum libccvoid found enum stdosrawcvoid note expected type coreoptionOptionmut libccvoid found type coreoptionOptionmut stdosrawcvoid error E mismatched types So quickmain was useful before Rust but now is there a use case for it Should we deprecate its use in To avoid mistakes with programmers with little experience It would be much more efficient to decide what to do with this crate and give alternatives It forces you to understand something that should not be used since currently there are much more efficient ways of doing the same work So from experience I would specify all this in the README or some visible place