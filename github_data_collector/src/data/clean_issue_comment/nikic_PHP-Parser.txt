Hi Working on I needed to refine some types in PHPParser I tried to either keep readable annotations for IDE like PHPStorm or add a psalm annotation I take the opportunity to thank you for all the good you did to PHP This makes it easier to get a property by name from a ClassLike Reproduce with php phpcsfixer rulesnativefunctioninvocation fix allowriskyyes phpcsfixer from Details input i var new Variableb newexpr ifexprexpr instanceof Node Scalar LNumber newexpr new LNumber newexprsetAttributekind init new Expressionnew Node Expr Assignvarnewexpr arr init init cond example code loop example code stmtsexample code return new Forarr protected function pStmtForStmt For node vardumpthispCommaSeparatednodeinitexit output i the output include one semicolon pregmatch returns if the pattern matches given subject if it does not or FALSE if an error occurred Should it be like this php return pregmatch af af i code In addition this regular expression can match too many irrelevant codes such as calluserfuncarray EALL methodexists fileexists base encode base decode This seems to make performance slightly affected How to resolve the parent interface of the current class interface I have a project that is written in Java and they want to rewrite into Symfony Any ideas how to create very simple Java parser so in the end I have nodes like Class Fixed whitespace before Closure use statement Before php function arg usevar After php function arg use var whitespace added Reason PSR Removed whitespace prefix before typehint colon Before php function example void After php function example void whitespace removed Reason PSR I thought its safe to pass any Expr into prettyPrintExpr of PrettyPrinterAbstract but EncapsedStringPart is an exception because of this implementation php protected function pScalarEncapsedStringPartScalar EncapsedStringPart node throw new LogicExceptionCannot directly print EncapsedStringPart This makes code that puts general Expr into prettyPrintExpr safe from the point of static types but actually unsafe in runtime Id have to go through all printer usages and check if Im not passing this object there probably with my own printer abstraction Is there a reason for this limitation Can I work around it more easily