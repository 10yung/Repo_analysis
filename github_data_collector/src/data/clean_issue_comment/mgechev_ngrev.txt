Hi Minko This tool is awesome Im super impressed with how easy it makes it to visualize a complex Angular application To get it to work in our app we had to do some refactoring in a few places where we use the useFactory notation I think this picture will be more useful than me trying to explain it This syntax for providers is supported in Angular maybe so I expected it to work with NGRev With the refactoring above we were able to generate the report Thanks Bumps jsyaml from to details summaryChangelogsummary Sourced from jsyamls changelog Fix possible code execution in already unsafe load Security fix safeLoad can hang when arrays with nested refs used as key Now throws exception for nested arrays Fix noArrayIndent option for root level Added noArrayIndent option Support arrow functions without a block statement Fix dump in binoctalhex formats for negative integers Add arrow functions suport for jsfunction details details summaryCommitssummary aadd released da ecf Browser files rebuild b f e Merge pull request from nodecatoString e afbf Fix possible code execution in already unsafe load d ce e released f c Browser files rebuild a ef Restrict data types for object keys b e Fix test name e fc released a Browser files rebuild Additional commits viewable in compare view details br Dependabot compatibility score Dependabot will resolve any conflicts with this PR as long as you dont alter it yourself You can also trigger a rebase manually by commenting dependabot rebase dependabotautomergestart dependabotautomergeend details summaryDependabot commands and optionssummary br You can trigger Dependabot actions by commenting on this PR dependabot rebase will rebase this PR dependabot recreate will recreate this PR overwriting any edits that have been made to it dependabot merge will merge this PR after your CI passes on it dependabot squash and merge will squash and merge this PR after your CI passes on it dependabot cancel merge will cancel a previously requested merge and block automerging dependabot reopen will reopen this PR if it is closed dependabot ignore this patchminormajor version will close this PR and stop Dependabot creating any more for this minormajor version unless you reopen the PR or upgrade to it yourself dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency unless you reopen the PR or upgrade to it yourself dependabot use these labels will set the current labels as the default for future PRs for this repo and language dependabot use these reviewers will set the current reviewers as the default for future PRs for this repo and language dependabot use these assignees will set the current assignees as the default for future PRs for this repo and language dependabot use this milestone will set the current milestone as the default for future PRs for this repo and language You can disable automated security fix PRs for this repo from the Security Alerts page details Closes This PR is a WIP attempt to implement ngrev as a Visual Studio Code extension The first commit contains the proposed folder structure so that the main application and the extension source code are clearly separated I decided to include all vscode related scripts in the main packagejson and create a separate one inside srcvscode folder that will contain only extension related artifacts There is also a separate tsconfig configuration file for the extension that resides together with the main tsconfig The extension main entry file is emitted in the out folder on the root path of the project A problem that I noticed is that when running gulp build the extension folder is also compiled and emitted in the dist folder So I think that we need to exclude it from the build process Alternatively we could have extension related scripts in a single packagejson and out folder inside vscode directory to keep it more isolated mgechev what do you think Hi Ive got the following issue Cannot parse your project Make sure its compatible with the Angulars AoT compiler Error during parsing Usersxxxxxxfrontendsrcappcorecoreroutingts Error during template compile of CoreRoutingModule Reference to a local nonexported symbols are not supported in decorators but routes was referenced Consider exporting routes But the AOT compilation is fine We are using Angular Im using the latest version of ngrev available for OSX Here is tsconfig file and the corerouting file file renamed with txt extension for GitHub support tsconfigtxt coreroutingtxt When i export a view it could be fine to add the legend After doing some manual shifting to the diagrams configuration switching to dark mode will reset it to its default layout In bigger projects this is very inconvenient since the standard layout sometimes is way to cluttered Also the option to save the layout for further use would be a great idea Hi Thanks very much for this awesome tool Are there any plans to release it as a VSCode extension also It should be really handy especially for newcomers in a project to take a quick look at the structure while navigating the code Thanks compilation failed when i have declared the tsconfig paths ts Directive selector cdkvirtualscrollviewport tableData providers provide VIRTUALSCROLLSTRATEGY useFactory scroll TableFixedSizeVirtualScroll scrollscrollStrategy deps forwardRef TableFixedSizeVirtualScroll export class TableFixedSizeVirtualScrollT any implements OnInit OnChanges OnDestroy this is view on relatively big project files I find it not analyable or it mean project is not correctly structured A feature request from me woul be infos near legend to resume number of modules or lazymodule or component in projects thank you