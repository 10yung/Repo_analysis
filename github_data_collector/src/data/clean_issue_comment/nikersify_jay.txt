This will allow you to press shift enter by maintaining a queue of keycodes from last pressed keys I had to use iohook library to be able to capture JUST shift key presses I did not take a ton of time to set it up properly so it does not teardown listener and has a memory leak Also I cant get the evaluate to work properly with multiline but this is a good start I think ts ioHookonkeypress event IOHookEvent if lastKeyslength lastKeyspushevent else lastKeyspop lastKeysunshiftevent ts else if name return const lastKey lastKeysconcatpop if lastKeyshiftKey stdoutwrite n rlwrite n Its the first attempt to work with cli utils so I probably havent considered all the possible issues Feel free to close it if its completely inappropriate By the way thank you for the awesome project Entering the following causes jay to exit immediately without an error javascript p new Promise It works fine in nodes REPL javascript p new Promise Promise pending Possibly Related Environment jay node v OS Linux Arch I cant start jay When I first tried starting it I got this npx p jayrepl jay npx installed in s node v npm jayrepl jay is getting plugin support Help us make the API suit you node UnhandledPromiseRejectionWarning Error processstdinsetRawMode does not exist at resolve C Users tobbe AppData Roaming npmcache npx nodemodules jayrepl dist promptjs at new Promise anonymous at ObjectpromptLine as default C Users tobbe AppData Roaming npmcache npx nodemodules jayrepl dist promptjs at C Users tobbe AppData Roaming npmcache npx nodemodules jayrepl dist clijs at Generatornext anonymous at C Users tobbe AppData Roaming npmcache npx nodemodules jayrepl dist clijs at new Promise anonymous at awaiter C Users tobbe AppData Roaming npmcache npx nodemodules jayrepl dist clijs at processPrompt C Users tobbe AppData Roaming npmcache npx nodemodules jayrepl dist clijs at C Users tobbe AppData Roaming npmcache npx nodemodules jayrepl dist clijs node UnhandledPromiseRejectionWarning Unhandled promise rejection This error originated either by throwing inside of an async function without a catch block or by rejecting a promise which was not handled with catch rejection id node DEP DeprecationWarning Unhandled promise rejections are deprecated In the future promise rejections that are not handled will terminate the Nodejs process with a nonzero exit code Thought that maybe it was because I was on an old version of Node so I upgraded Still getting the same error npx p jayrepl jay npx installed in s node v npm jayrepl jay is getting plugin support Help us make the API suit you node UnhandledPromiseRejectionWarning Error processstdinsetRawMode does not exist at C Users tobbe AppData Roaming npmcache npx nodemodules jayrepl dist promptjs at new Promise anonymous at ObjectpromptLine as default C Users tobbe AppData Roaming npmcache npx nodemodules jayrepl dist promptjs at C Users tobbe AppData Roaming npmcache npx nodemodules jayrepl dist clijs at Generatornext anonymous at C Users tobbe AppData Roaming npmcache npx nodemodules jayrepl dist clijs at new Promise anonymous at awaiter C Users tobbe AppData Roaming npmcache npx nodemodules jayrepl dist clijs at processPrompt C Users tobbe AppData Roaming npmcache npx nodemodules jayrepl dist clijs at C Users tobbe AppData Roaming npmcache npx nodemodules jayrepl dist clijs node UnhandledPromiseRejectionWarning Unhandled promise rejection This error originated either by throwing inside of an async function without a catch block or by rejecting a promise which was not handled with catch rejection id node DEP DeprecationWarning Unhandled promise rejections are deprecated In the future promise rejections that are not handled will terminate the Nodejs process with a nonzero exit code Windows gitbash It would be nice if we could programmatically call the jay repl and also inject our own variables inside Basically emulate the node repl library but with the features of Jay Would this be possible Simply running jay from the console on Windows hangs for about minutes before eventually displaying the node npm and jayrepl versions and prompt This only happens when behind a network proxy Ive done some investigation and the code that causes this to hang is the following line in clits versionnpm execasyncnpm v stdout It appears that this is caused by a bug in npm Apparently version of npm added an update check feature When running npm commands via childprocess the network proxy is not observed and thus a network timeout occurs after minutes A workaround for this is to set the NOUPDATENOTIFIER environment variable to false I tested the following code that resolves this issue javascript function getNpmVersion const env processenv NOUPDATENOTIFIER true const result execasyncnpm v env return resultstdout Could you fix this I tried cloning the repo to do a pull request but I am getting errors doing that too which also appear to be network proxy related node v npm v jayrepl v Thanks Jonathan This pull request adds plugin support to Jay allowing for deep extensibility of Jays render keybinding and evaluation systems Overview The plugin syntax is trivial the two available methods are jayonevent cb and jayoneevent cb on listens for events continuously one just for one both calling cb when an event is fired Event listeners are called in the same order theyre registered in and act as reducers the value returned from the first listener will be passed to the second the value returned from the second to the third etc cb takes a signature of arg stop arg It is expected to return a value of the same type as arg or undefined if arg is not provided for the given event type or stoparg which will make the current event listener the last in the chain think epreventDefault This architecture allows for powerful extensibility almost all of jays core features have been rebuilt with plugins all of which can easily be disabled individually by removing them from jayrcjs in the config directory jayrcjs jayrcjs is a configuration file that will be loaded every time Jay is started via the CLI Its a standard JavaScript file which should have a default export of a single function that takes jay as a parameter which acts as the API which plugins use to modify Jays behaviorts in this PR See more in this file No plugins are loaded outside of jayrcjs if no plugins get loaded there and since almost all of Jays core is implemented via plugins Jay wont know how to handle any keybinds render any output or how to evaluate any code If no jayrcjs exists we will generate a default one that will contain logic to load all default plugins along with some help comments explaining what a user can do inside of the file Inside of the function exported from jayrcjs the user is expected to add their own plugins along with configuringremoving the builtin ones Example jayrcjs js moduleexports jay Add an explosion before a line is executed Include a third party plugin requirejaypluginexplosionsjay Quick inline plugin jayonline line linereplacevar const Default plugins Bracketquote pair completion adds the second after just typing one requirejayreplpluginpairsjay Input code highlighting requirejayreplplugincolorsjay Remote npm require requirejayreplpluginnpmrequirejay Dropdown completion requirejayreplplugindropdowncompletionjay Fallback key handler requirejayreplpluginreadlineinputjay Example plugins All examples are in the format of implementation repl input optionally repl output Code replacement js jayonline line stop return linereplacecats are ugly cats are pretty js consolelogcats are ugly js cats are pretty Input doubler js jayonkeypress key stop ctrly if ctrl name y jaypromptreadlinewritejaypromptreadlineline Since the key is handled we dont want to have any further handlers be executed with an already handled key return stopkey return key js programming is fun ctrly js programming is fun programming is fun Display input length js jayonrender output cursor const length jaypromptreadlinelinelength const prepend length return prepend output Need to offset the cursor by the amount of characters added cursor prependlength js programming is fun js programming is very fun Events At the moment the following events are emitted from Jay line string Emitted every time a prompt instance is finished and the input is ready to be passed into evaluators event useful for inspectingmodifying input on the fly evaluating it etc keypress Key Emitted every time a key is pressed in the prompt useful for registering well keybinds render output string cursor number Every time a render is about to occur output is a string that will be written to the screen cursor is a number that defines the offset of the displayed cursor eg cursor the cursor will be placed characters to the right of the coordinate Obviously useful for modifying appending removing things from the output TODO Things that need to be done x pluggerone method x Add eager eval to evaluate plugin x Bracket completion plugin x ctrll plugin x ctrlz plugin x hello plugin greetings message that shows jay node npm versions etc x jayhelp plugin x Load configjayrcjs especially define requires behavior we want to support third party modules in the config file what would be a the nicest way of accomplishing that Completion plugin Display information on how to edit the rc file when launching Jay User documentation Fix tests Nice to haves Test most plugins individually increase acorns ecmaVersions support BigInt BigInt syntax highlighting Improve results promise resolution in promptts at the time of writing its just a dirty EventEmitter hack would be nice to have type safety there pluginssmartrequire improvements Break loop if user answers no to installing a package better UX stop execution if theres a no answer given preventing an ugly module not found error Extract repl history into a plugin Move some pluginspecific logic into the plugins themselves eg askts to pluginssmartrequirets since its not used anywhere else Prettify types in pluggerts Return unknown type from ons callback since it touches vanilla javascript code it needs to be type checked at runtime could use iots maybe CArrayLike is a giant ugly union with item item item item array would be nice to prettify it if possible Try to improve pluggers performance Dropdown menu in completion plugin I would greatly appreciate any feedback help related to this PR thanks in advance Input Promiseresolve Output Expected Promise If QUITWC quit with c variable exists switch the exit command from CTRLD to CTRLC Theres definitely a nicer way to do this but it means that an alias can be set up for example and that ctrld remains the default Personally Im in the habit of hitting ctrlc a few times and doing the same with ctrld often ends in accidentally terminating my bash session so being able to switch it to ctrlc is preferable