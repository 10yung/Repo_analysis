I added a basic example into the urlsigningmd document that outlines what each step of the signing would look like As I read over the document I realized that there were examples for just url image signing but not for signing with options I could convert this into a code example but I feel like it should be languageagnostic and I can make whatever grammatical changes necessary Add support to have multiple signature key according to This is useful to rotate keys without breaking existing clients This PR Gives user the option to override the remote image hostings expire date imageproxy overridecachecontrolpublic overrideexpiresSat Dec GMT closes Thanks for this neat tool I have a feature request that once my app has cached an image locally it should be able to load the image without having to talk the remote if I unplug my internet some remote hosting websites have a too short of cache expiration and it causes the proxy to keep fetching the image from remote current error is Error fetching remote image Get https no such host Hi there Id like to know if there is a way to rotate a signature key Id like my image proxy to work with two keys so while Im upgrading it on my services it keeps responding to requests Any idea Any other solution I have a nginx running in front of it so I can accept other alternatives Thanks Is it possible to run imageproxy in an AWS Lambda or other serverless function use ImageProxy to decrease image quality This is origin Image WATERMARK below is error msg http panic serving runtime error slice bounds out of range goroutine running nethttpconnservefunc xc a e cgosrcnethttpservergo x panic xd x f cgosrcruntimepanicgo x c githubcomrwcarlsengoexifexifreaderToReaderAtReadAt xc b cb xc a e x x x dc d xcc x xc a e CUsersAdministratorgopkgmodgithubcomrwcarlsengoexifv e f exifreaderAtgo x githubcomrwcarlsengoexifexifoffsetReaderAtReadAt xc xc a e x x x dbff x x x CUsersAdministratorgopkgmodgithubcomrwcarlsengoexifv e f exifexifgo x githubcomrwcarlsengoexiftiffDecodeDir xfe b xc x c x c de x dbff xc e x x x CUsersAdministratorgopkgmodgithubcomrwcarlsengoexifv e f tifftiffgo xbf githubcomrwcarlsengoexiftiffLazyDecode xfe b xc xc b cb x e x CUsersAdministratorgopkgmodgithubcomrwcarlsengoexifv e f tifftiffgo x githubcomrwcarlsengoexifexifLazyDecode xfe ba xc b cb x x xc CUsersAdministratorgopkgmodgithubcomrwcarlsengoexifv e f exifexifgo x f githubcomrwcarlsengoexifexifDecode xfea a xc x xd f xffffffffffffff CUsersAdministratorgopkgmodgithubcomrwcarlsengoexifv e f exifexifgo x willnorriscomgoimageproxyexifOrientation xfea a xc x x x x x x x x CUsersAdministratorDownloadsimageproxy transformgo x b willnorriscomgoimageproxyTransform xc e x af x fe x x x x x x x CUsersAdministratorDownloadsimageproxy transformgo x fe willnorriscomgoimageproxyTransformingTransportRoundTrip xc e xc x x x CUsersAdministratorDownloadsimageproxy imageproxygo x d githubcomgregjoneshttpcacheTransportRoundTrip xc fced xc xc fced x x CUsersAdministratorgopkgmodgithubcomgregjoneshttpcachev befbb ad cchttpcachego x nethttpsend xc xfe ac xc fced x x x xc x x x cgosrcnethttpclientgo x nethttpClientsend xc fcea xc x x x xc x x x cgosrcnethttpclientgo x nethttpClientdo xc fcea xc x x x cgosrcnethttpclientgo x nethttpClientDo cgosrcnethttpclientgo willnorriscomgoimageproxyProxyserveImage xc xffb xc e xc e CUsersAdministratorDownloadsimageproxy imageproxygo x b nethttpHandlerFuncServeHTTP xc f xffb xc e xc e cgosrcnethttpservergo x b willnorriscomgoimageproxyProxyServeHTTP xc xffb xc e xc e CUsersAdministratorDownloadsimageproxy imageproxygo x a nethttpserverHandlerServeHTTP xc xffb xc e xc e cgosrcnethttpservergo xaf nethttpconnserve xc a e xffec xc c c cgosrcnethttpservergo x created by nethttpServerServe cgosrcnethttpservergo x fb this is original image url original size is MB after processingsize is MB just quality is On my opinion file size should decrease as other image format Please advise When loading a web page with a lot of proxy URLs so that the browser attempts to download them all immediately the process is killed because its out of memory I dont know how to get around this since its not something I can control in browsers It seems like imageproxy should be rate limiting these requests at some point to avoid OOM issues Originally posted by aaronpk in imgproxy error transforming image image unknown format imgproxy contenttype not allowed texthtml webimgproxy exited with code 