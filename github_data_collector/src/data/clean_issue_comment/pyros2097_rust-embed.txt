Hi and thanks for developing this invaluable tool Ive got a bit of a problem Im serving the content of the embedded folder via actixweb and running a parcel parceljsorg watch job for frontend development This frontend tooling has autoreloading so when the watch job builds a new version of my frontend the page gets reloaded This almost always results in only half of the javascript file getting served and the reload aborting because of it I dont know how rustembed works internally but Im assuming this is because rustembed reads the file at a time where its not done being written How about adding optional compression support like includeflate This would let me work around like so Enter the main function Figure out what directory I want to load assets from eg the project root Pass that directory and the assets directory to some new func eg Assetnew myproject publichtml The new func returns an Asset which I can pass to other functions by shared reference I could even create multiple instances if I want to swap between two folders while the program is running The existing global functions could be implemented on top by creating a global object that has the two directories fixed at compile time If I can find a way to do that would you take a PR I made a library crate pypack that uses rustembed I made a binary crate that uses that library crate I would expect the folder used for the Asset folder path to be relative to the binary cargotoml is that not the case example error procmacro derive panicked C Users LUNA cargo git checkouts pypack d f d bc e f da src librs deriveRustEmbed help message deriveRustEmbed folder dist does not exist cwd C Users LUNA cargo git checkouts pypack d f d bc e f da Hello I tried to use nuxtjs and generated some static pages using nuxt generate while I load these files using a static file server it works perfectly but while I load it using rustembed it doesnt work anymore Do you have some ideas why it happens Ill try to make a repro Try to run cargo run example basic from the examples subfolder it will crash The procmacro should make sure that it works no matter where cargo is called from Also important for workspaces where the exe could be in the toplevel or in a sub folder