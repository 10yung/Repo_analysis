Hello this chroot wrapper appears to ignore the rootfs parameter Is this an accidental oversight Thanks Fix Added conversion for cpuweight v from cpushares Signedoffby Boris Popovschi zyqsempaimailru Fix Properly convert blkioWeight to ioweight Signedoffby Boris Popovschi zyqsempaimailru ioweight is not properly converted from BlockIOWeight in According to the crun spec it should be recalculated Fix Exchanged deprecated systemd resources with the appropriate for cgroupv Signedoffby Boris Popovschi zyqsempaimailru The basic support for cgroup has been already in place but there are still some leftover tasks toward declaring productionready feature support systemd userinstance for rootless mode as in crun bug cpushares is broken PR bug iostat MAJMIN parsing order is wrong PR bug ioweight is not converted from BlockIOWeight PR refactor systemd driver should not use deprecated options PR CI enable integration test rootful CI enable integration test rootlesssystemd declare productionready disabled TestUsernsCheckpoint and TestCheckpoint in libcontainerintegrationcheckpointtestgo because Ubuntu kernel used in Travis has been broken recently We should reenable these tests when the kernel gets fixed mount will blindly follow symlinks which is a problem because it allows a malicious container to trick runc into mounting proc to an entirely different location and thus within the attackers control for a renameexchange attack This is just a hotfix to stop the bleeding and the more complete fix would be finish libpathrs and port runc to it to avoid these types of attacks entirely and defend against a variety of other procrelated attacks It can be bypased by someone having be a volume controlled by another container Fixes CVE Fixes Signedoffby Aleksa Sarai asaraisusede Resolve Signedoffby mYmNeo thomassong gmailcom Its first seen in a kubernetes cluster with docker as container runtime Our users reported that in some situation their bash script failed with message cant create devnull Operation not permitted But devnull is default device with permission rwm After digging some logs we found that it can be reproduced in runc by following steps Run a runc container like busybox Suppose this container is called A run while truedo echo devnulldone in container runc update cpushare A You will see sh cant create devnull Operation not permitted The problem is located at By default if runc wants to allow some devices itll first deny all devices then allow specific devices Its OK when launching a new container but if you update the resource of a container itll make a change that allowed devices becomes denied first then allowed during this period user app will get xxx Operation not permitted error message 