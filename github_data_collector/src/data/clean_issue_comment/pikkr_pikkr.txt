the link for the JSON data is outdated Use the wayback machines link maybe this Im not sure whether this crate is supposed to support accessing fields of objects within arrays but Im seeing strange behaviour when doing so Given a JSON record listofobjects firstfield secondfield true The results of the following queries are listofobjectsfirstfield listofobjectssecondfield true Or as a runnable example modelled on the example from the readme rust fn main let queries vec listofobjectsfirstfieldasbytes listofobjectssecondfieldasbytes let mut p pikkrPikkrnew queries unwrap let recs vec rlistofobjects firstfield secondfield true for rec in recs let results pparserecasbytesunwrap for result in results print match result Someresult Stringfromutf resulttovecunwrap None StringfromNone println What guarantees does this library make about rejecting invalid JSON and returning valid JSON In particular the following program accepts the input which is not valid JSON and returns b as output which is not valid JSON rust extern crate pikkr fn main let j br x let q vec xasbytes let mut p pikkrPikkrnew q for r in pparsej println stdstrfromutf runwrapunwrap This seems like it would be applicable to kostyas JSON benchmark Rust is already significantly faster than C but D does some partial parsing tricks that pikkr may be able to overcome Awesome project Could C hooks be published so that nonRust languages can take advantage of this accelerated library 