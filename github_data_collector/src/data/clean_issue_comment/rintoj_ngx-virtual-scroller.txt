Angular App freezes if left unused for about an hour this is because of ngxvirtual scroll If disables it works fine Hey I opened this pull request to add rtl support to the horizontal scroller resolve Bumps handlebars from to details summaryChangelogsummary Sourced from handlebarss changelog v November th Bugfixes fix add noprototypebuiltins eslintrule and fix all occurences f f d fix add more properties required to be enumerable Chores Build fix use instead of c b f add chai and dirtychai and sinon for cleaner testassertions and spies deprecate old assertionmethods e e ba dad a Security The properties proto defineGetter defineSetter and lookupGetter have been added to the list of properties that must be enumerable If a property by that name is found and not enumerable on its parent it will silently evaluate to undefined This is done in both the compiled template and the lookuphelper This will prevent new RemoteCodeExecution exploits that have been published recently Compatibility notes Due to the securityfixes The semantics of the templates using proto defineGetter defineSetter and lookupGetter in the respect that those expression now return undefined rather than their actual value from the proto The semantics have not changed in cases where the properties are enumerable as in js proto some string The change may be breaking in that respect but we still only increase the patchversion because the incompatible usecases are not intended undocumented and far less important than fixing RemoteCodeExecution exploits on existing systems Commits v November th Bugfixes fix use Stringfield in lookup when checking for constructor d test add fluent API for testing Handlebars c ac c Compatibility notes no incompatibility are to be expected trtable truncated details details summaryCommitssummary c c b v c d Update release notes f f d fix add noprototypebuiltins eslintrule and fix all occurences fix add more properties required to be enumerable ba testchore add chaiexpect and sinon to runtimeenvironment dad test add sinon as global variable to eslint in the specs a test add sinonjs for spies deprecate current assertions e e chore add chai and dirtychai for better test assertions c b f fix use instead of de d v Additional commits viewable in compare view details details summaryMaintainer changessummary This version was pushed to npm by knappi a new releaser for handlebars since your current version details br Dependabot compatibility score Dependabot will resolve any conflicts with this PR as long as you dont alter it yourself You can also trigger a rebase manually by commenting dependabot rebase dependabotautomergestart dependabotautomergeend details summaryDependabot commands and optionssummary br You can trigger Dependabot actions by commenting on this PR dependabot rebase will rebase this PR dependabot recreate will recreate this PR overwriting any edits that have been made to it dependabot merge will merge this PR after your CI passes on it dependabot squash and merge will squash and merge this PR after your CI passes on it dependabot cancel merge will cancel a previously requested merge and block automerging dependabot reopen will reopen this PR if it is closed dependabot ignore this patchminormajor version will close this PR and stop Dependabot creating any more for this minormajor version unless you reopen the PR or upgrade to it yourself dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency unless you reopen the PR or upgrade to it yourself dependabot use these labels will set the current labels as the default for future PRs for this repo and language dependabot use these reviewers will set the current reviewers as the default for future PRs for this repo and language dependabot use these assignees will set the current assignees as the default for future PRs for this repo and language dependabot use this milestone will set the current milestone as the default for future PRs for this repo and language You can disable automated security fix PRs for this repo from the Security Alerts page details I have a chat window with the virtual scroller inside I cannot select any text within the virtual scroller How can I solve this When scrolling up and down on table with header it moves around for the duration of scrolling I tried useMarginInsteadOfTranslate but it didnt work Ive noticed this bug only on mobile transform translateY on thead seems to have a delay and cant keep up with changes so it moves weirdly and after scrolling is finished goes to a proper position Setting checkResizeInterval to or also didnt fix it save has been default since npm v see Not perfect some flickering during scrolling but at least usable Documentation for vsUpdate states This event is fired every time the start or end indexes change In practice it seems to be triggered for every pixel change in the scroll position instead The issues is not present for the vsStart vsEnd or vsChange events Firefox issue from the samples you have created with HTML Table there is a flickeringvibration issue when you scroll up and down and its quite obvious to the user Just want to check how is that possible from your sample with HTML Table the issue is no longer there when the dev tools is opened Not sure if its the consolelog thing or some scripts will only be triggered when dev tools is opened and I havent got chance to go through the source code I am testing from the samplesdemo with HTML Table Firefox version I noticed in the readme that there a few contradictory statements This module displays a small subset of records just enough to fill the viewport and uses the same DOM elements as the user scrolls virtualscroller essentially uses ngIf to remove items that are scrolled out of view This is what gives the performance benefits compared to keeping all the offscreen items in the DOM Based on the first statement I would have expected the Angular components to be recycled and not be destroyed similar to odvirtualscroll With that library ngOnChanges fires and you can reuse the DOM element and simply update the information For my use case Im displaying many HighCharts graphs in a grid so creating the elements is very expensive when compared to updating the trend line in an existing chart This is negligible in modern browsers but Ive noticed that the performance is dramatically worse in Internet Explorer