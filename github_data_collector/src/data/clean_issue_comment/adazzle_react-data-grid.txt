Small gain in simplicity and flexibility Which version of React JS are you using Officially supported x v x Not officially supported expect warnings v x v x Not officially supported expect warnings and errors v xx Which browser are you using Officially supported IE IE IE Edge x Chrome Not officially supported but should work Firefox Safari Im submitting a x Bug Report Feature Request Issue Details Current behavior when I set up a reactdatagrid instance using Immutable rows and set up selectBy to use the id key it works when the rows are Arrays but not when theyre Immutable Lists Desired behavior React data grid should support key usage for Immutable rows Steps to reproduce see this sandbox here See the commentedout code in rowGetter to toggle behavior Due to the general support for Immutable rows in Lists I believe this is a bug and not a feature request Please let me know if Ive just made a mistake in my code as I had some difficulty finding documentation for the selectBy rowKey feature but it seems to me like this should work I know that I can selectBy indexes instead but I would prefer to use recordIds in order to avoid some unnecesary recalculation when sorting a list with records already selected Have you already searched for similar issues Please help us out and doublecheck first Also please dont be that person who deletes this template Its here for a reason Thanks Which version of React JS are you using Officially supported v x Not officially supported expect warnings v x v x Not officially supported expect warnings and errors v xx Which browser are you using Officially supported IE IE IE Edge Chrome Not officially supported but should work Firefox Safari Im submitting a Bug Report Feature Request Need general support Not sure about how to use React itself or how to get started with the Grid Please do not submit a support request here Instead see Issue Details Please include What the current behavior is What the desired behavior is If Bug Steps to reproduce the issue If Feature The motivation use case for the feature We especially love screenshots videos of problems and remember The Best Issue Is A Pull Request I ma using ReactDataGrid to display data from api I dont want filter the rows using the tool bar instead i want to display a filter icon in the column header and on click of it textbox should appear to filter the rows using the input from that textbox Similarly I want to filter another column the filter should appear only when clicked on the filter icon on this column headerIs something like this possible with react data gridPlease suggest how can this be achieved Im submitting a Bug Report x Feature Request Issue Details Would like the ability to make cells or headers span across multiple columnsrows like the cells highlighted in yellow below Easiest implementation would be in the underlying data to just consider the spanning cell to be part of the top row and leftmost column of those which it spans and simply have it cover up any cells that it spans over so its just a matter of configuring the css like zindex and widthheight of that cell and its associated components like the border and editor I believe this is how its done in aggrid Which version of React JS are you using Officially supported x v x Not officially supported expect warnings v x v x Not officially supported expect warnings and errors v xx Which browser are you using Officially supported IE IE IE Edge x Chrome Not officially supported but should work Firefox Safari Im submitting a x Bug Report Feature Request Issue Details Please include What the current behavior is Added dependency datagrid and datagridaddon version to my project If I run yarn audit I get the following security warning high Regular Expression Denial of Service Package parsejson Patched in No patch available Dependency of reactdatagridaddons Path reactdatagridaddons ronreactautocomplete socketioclient engineioclient parsejson More info What the desired behavior is No audit warnings about datagridaddon dependencies If Bug Steps to reproduce the issue add version as a project dependency Which version of React JS are you using Not officially supported expect warnings and errors x v xx Which browser are you using Officially supported IE IE IE Edge x Chrome Im submitting a Bug Report x Feature Request Issue Details What the current behavior is currently all cells can be selected focused What the desired behavior is I would like to disable selecting specific cells At the very minimum I would like the tab navigation to only include editable cells Lets assume that I have a table with rows and columns the first column should not be editable locked Therefore you start in the nd column of the st row Now you press tab you get to the rd column now you press tab again and you should be in the nd row nd column skipping over the st column of the nd row If Feature The motivation use case for the feature I would like to replicate the behaviour of locked cells in excel Have you already searched for similar issues Please help us out and doublecheck first Yes there is an issue related to columns reordering so just want to confirm Ive already went through that one and its not related Also please dont be that person who deletes this template Its here for a reason Thanks Which version of React JS are you using Officially supported v x Not officially supported expect warnings v x v x Not officially supported expect warnings and errors X v xx Which browser are you using Officially supported IE IE IE Edge X Chrome Not officially supported but should work Firefox X Safari Im submitting a X Bug Report Feature Request Need general support Not sure about how to use React itself or how to get started with the Grid Please do not submit a support request here Instead see Issue Details Steps where it works properly Do not scroll below the initially loaded items of the table related to minHeight number of items etc the table we have is loading k elements Change columns Table appears as expected Steps to reproduce the bug Scroll below the initially loaded items screens Change columns Table rows are not being loaded until the user scrolls up or down After scrolling up or down table loads rows as expected Desired behavior here would be that it loads items right away instead of waiting for scroll event to happen in order to load the elements in the table My assumption is that the issue is with the infinite scroll not checking on which section it is after making changes to the columns table is loading Instead it assumes its on the initial page Please include What the current behavior is What the desired behavior is If Bug Steps to reproduce the issue If Feature The motivation use case for the feature We especially love screenshots videos of problems and remember The Best Issue Is A Pull Request Can this library handle HUMONGOUS rows of data in a memoryreasonable manner Hi Everyone I need a nested masterdetail grid similar to this one and wanted to know if there is already anything I can continue working on I was thinking that the easiest and probably a bit messy would be if I can possibly use custom row renderer to add another instance of the grid inside which can be linked using parent and child grid ids Any thought on this s appreciated Will start working on it anyway and share the results if there was any success or a proper failure Thanks Which version of React JS are you using Officially supported v x Not officially supported expect warnings v x v x Not officially supported expect warnings and errors v xx Which browser are you using Officially supported IE IE IE Edge Chrome Not officially supported but should work Firefox Safari Im submitting a Bug Report x Feature Request Need general support Not sure about how to use React itself or how to get started with the Grid Please do not submit support request here Instead see Issue Details Please include What the current behavior is What the desired behvaior is If Bug Steps to reproduce the issue If Feature The motivation use case for the feature We especially love screenshots videos of problems and remember The Best Issue Is A Pull Request Have you already searched for similar issues Please help us out and doublecheck first Also please dont be that person who deletes this template Its here for a reason Thanks Which version of React JS are you using Officially supported v x Not officially supported expect warnings v x v x Not officially supported expect warnings and errors X v xx Which browser are you using Officially supported IE IE IE X Edge X Chrome Not officially supported but should work Firefox Safari Im submitting a X Bug Report Feature Request Need general support Not sure about how to use React itself or how to get started with the Grid Please do not submit support request here Instead see Issue Details Steps to reproduce Make demo from the official site using reactdatagrid and reactdatagridaddons v without using Immutable Sandbox Try to reorder the columns Expected result columns are reordered Actual result columns are not reordered I investigated the bug and found out that here in componentWillReceiveProps there is a check of current and next props via ColumnMetricssameColumns method Ive created a Sandbox with the working part of this method compareEachColumn because areColumnsImmutable returns false if Immutable is not used to play around with it and better understand whats going on here It seems that this algorithm compares the columns structures that are the same of course but doesnt take into account their order Maybe a snippet like this may solve the problem javascript function compareEachColumnprevColumns nextColumns isSameColumn let i let len let column const prevColumnsByKey const nextColumnsByKey if getSizeprevColumns getSizenextColumns return false Possible solution for i len getSizeprevColumns i len i column prevColumns i const nextColumn nextColumns i if isSameColumncolumn nextColumn return false the rest code Id like to create a pull request but Im afraid that I dont know enough about the library and if it may break something down anywherein any corner cases