Hi How can I write a new line in the body of a Teams message No matter what I tried so far I always ended up getting one long string in the body of the Teams message Any ideas suggestions Thanks This is happening intermittently in a script that runs as a scheduled task Sometimes the task starts up and logs fine Sometimes it throws this error PSVersion Logging version Code that errors ImportModule Logging AddLoggingTarget Name WinEventLog Configuration LogNameevtlog Source evtsource Error message AddLoggingTarget Cannot validate argument on parameter Name The argument WinEventLog does not belong to the set EmailElasticSearchConsoleSlackFileSeq specified by the ValidateSet attribute Supply an argument that is in the set and then try the command again Id guess AV or overprovisioned hosting or something else is causing StartLoggingManager to take longer than ms to do its work From Loggingpsm StartLoggingManager Let the runspace spinup and generate all the available targets StartSleep Milliseconds What would it take to change this from a fixed interval to a loop that checks status every ms and either returns when ready or times out with an error I have a script that does tasks in different threads and I noticed that some messages were being lost I used the following script to test function ConfigLogging SetLoggingDefaultLevel Level INFO AddLoggingTarget Name File Configuration Path C Temp exampleYmd csv Level DEBUG INFO WARNING ERROR LoggingDemo ConfigLogging foreach i in WriteLog Level Level GetRandom Message Message n Job Arguments i StartSleep Milliseconds GetRandom Min Max WaitLogging StartRSJob ScriptBlock LoggingDemo ModulesToImport Logging PoshRSJob VariablesToImport Level FunctionsToImport ConfigLogging The script above spawns concurrent threads each one logging message to the log file Expected result lines written to example CSV file Actual result Number of lines written varies May need to try different times Note Im using PoshRSJob for multithreading powershell AddLoggingTarget Name Console exit Console hangs We could add a function that read a json file and configure targets levels and format As stated here I think it could be useful to move to Azure Pipelines to test the module against all major versions of Powershell It would be desirable to have an option to set the maximum number of log files to keep while configuring the File target And whenever a new log file is created the oldest one can be deleted Something similar to what log net does with RollingFileAppender 