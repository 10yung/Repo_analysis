I was a bit surprised to see that the script uses ghostscript and poppler and imagemagick I would have thought that the first two provide more or less featurecomplete tools for working with PDFs and that you wouldnt need both I havent got a chance to look at the script in a very detailed way but from what I can tell popplers tools pdfinfo and pdfseparate are mainly used to get the number of pages page sizes and split pages But these are all things ghostscript can do already look into eg sDEVICEbbox o devnull for example Conversely if youre mainly using ghostscript to rasterize the pages you could do this instead with popplers pdftoppm which can export directly to both png and uncompressed tiff on its own so if you used that you might not need ghostscript For yet another option you could do either of these things or both with mutool from the mupdf project which might be my preference as in my experience mupdfs libraries are faster than either ghostscripts or popplers In any case it seems that the number of dependencies could be reduced Or the correct solution might be to have the script detect which of these are installed and use what is available or allow options for the user to decide which backend to use If someone else doesnt pounce on this I might try implementing it myself though Im not sure when Ill get around it and admittedly this isnt super highpriority But it might be fun If someone else beats me to it so be it The code should be checked with shellcheck and fixed accordingly It raises several warnings Id do it if gets merged Screenshot of the problem below screenshot from Note that this does introduce a moment where there is no image and so the screen flashes black This line Crashes with sed e expression char unknown command Im guessing instead of i bak it should be ibak This line fails when the folder configtermpdf doesnt exist However config in general is not a good place for storing cache please store it in cachetermpdf Renders fine outside of tmux but both image jpg and pdfs fail to render after measuring has successfully occured Example below is for the start of a pdf file termpdf Forcing kitty rendering results in the following termpdfkitty However running terminaldimensions returns the correct values As an aside very cool tool To get it working on Ubuntu I had to take a couple of extra steps to get it to play nice with some PDF files which may or may not be worth mentioning in the readme happy to do a PR It seems ubuntus ghostscript package doesnt link with freetype anymore so I had to download the latest ghostscript and replace my gs file in usrbin with the downloaded file If I force iTerm with iterm everything works fine but the only thing kitty displays is a bunch of As and then some other random letters AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA Is kitty broken for anyone else I installed kitty with homebrew cask which reports it being version 