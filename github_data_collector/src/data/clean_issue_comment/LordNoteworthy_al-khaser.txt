 Itd be cool to make calls to FindWindow and look for window names associated with debuggers From OLLYDBG WinDbgFrameClass Zeta Debugger Rock Debugger ObsidianGUI From not including ones mentioned above icudbg pediy TDeDeMainForm TIdaWindow Does it make sense to expand alkhaser to detect the presence of known antivirus programs as well since some malware will check for these and not run because of it For example checking for known service names running processes uninstaller registry keys file paths etc Right now some of the DLL Exports and Loaded DLLs check for artifacts related to AV products but otherwise it doesnt look like this is something alkhaser has tried to tackle From disk enums in HKLM System CurrentControlSet Services Disk Enum sometimes contains strings like Virtual VMW or Vbox which some malware uses as an antiVM check Would it be worth also checking for this in alkhaser Some malware will look for ProductIds associated with commercial sandboxes and stop running if detected For example from Anubis Sandbox CW Sandbox Joe Sandbox Although these checks are still common in malware they are a bit dated Anubis has shutdown for instance Is it worth adding a check for these Some malware will stop executing if its running on a machine with certain host names and user names presumably as an antisandbox check Itd be awesome if alkhaser could have a check for these Usernames checked for by Gootkit from CurrentUser Sandbox Hostnames checked for by Gootkit from SANDBOX SILVIA Usernames Hostnames checked for by a Trickbot downloader from Emily HANSPETERPC HAPUBWS Hong Lee ITADMIN JOHNPC Johnson Miller MUELLERPC Peter Wilson SystemIT admin Timmy WIN TRAPS More research will need to be done to know which sandboxes these usernames and hostnames correspond to For the ones that we cant definitively tie back to a known sandbox should these be included in alkhaser Its possible those could be the usernamehostname of the malware authors test environment for instance and isnt technically an antisandbox check Gootkit will selfdestruct if its running under one of the following file names presumably as an antisandbox check SAMPLEEXE MALWAREEXE BOTEXE SANDBOXEXE TESTEXE KLAVMEEXE MYAPPEXE TESTAPPEXE Reference Emotet looks for sample mlwrsmple artifactexe Reference Itd be cool if alkhaser had this check as well for cases where someone uses the alkhaser binary to test out a sandbox This approach is similar to the previous one except that here you enable the trap flag in the current process and check whether an exception is raised or not If an exception is not raised you can assume that a debugger has swallowed the exception for us and that the program is being traced The beauty of this approach is that it detects every debugger user mode or kernel mode because they all use the trap flag for tracing a program The following is a sample implementation of this technique Again the code is written in C for the Microsoft CC compiler BOOL bExceptionHit FALSE try asm pushfd or dword ptr esp x Set the Trap Flag popfd Load value into EFLAGS register nop exceptEXCEPTIONEXECUTEHANDLER bExceptionHit TRUE An exception has been raised there is no debugger if bExceptionHit FALSE printf A debugger is present n Just as with the previous approach this trick is somewhat limited because the PUSHFD and POPFD instructions really stand out Additionally some debuggers will only be detected if the detection code is being stepped through in such cases the mere presence of the debugger won t be detected as long the code is not being traced This technique from and Reversing Secrets of Reverse Engineering book Need add to alkhaser Based on some experimentation if these classes have no instances its a good chance of being a VM Win CacheMemory Win PhysicalMemory Win MemoryDevice Win MemoryArray Win VoltageProbe Win PortConnector Win SMBIOSMemory ThermalZoneInfo performance counters CIMMemory CIMSensor CIMNumericSensor CIMTemperatureSensor CIMVoltageSensor CIMPhysicalConnector and CIMSlot For VirtualBox I also have some specific WMI detections Win PnPDevice DeviceId values Win PnPDevice Name values common controller devices FB FX SB OpenHCD Win PnPDevice Name values containing VBOX Win Bus only having ACPIBusBUS PCIBUS PNPBUS Win BaseBoard values VirtualBox Oracle Corporation 