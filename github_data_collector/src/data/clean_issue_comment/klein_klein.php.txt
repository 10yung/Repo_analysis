Fixing issue headers not sent if buffer length exceeds value defined in inioutputbuffering Its better to flush buffer after sending response Several references to apc are found but not apcu is helpful for the shared memory caching to work in php Expected Check for apcufetch apcustore in addition to apcfetch apcstore Possibly also suggest the apcuapc module in composerjson eg these references were seen srcKleinKleinphp apc functionexistsapcfetch regex apcfetchrouteexpression apcstorerouteexpression regex Hi the problem is that you get a error when you try to display an SVG image on a page For example I have such a structure phpstorm FOqyJXI X I specify the path imgiconsTwitterLogoBluesvg And it turns out that the image is not loaded and in the browser developer console error However if you specify a file in PNG format it is quietly displayed I dont understand what the problem is Can you help Because Im sure it has to do with Klein Previously magical call version of the functions keys all would break as the call keys key key key false would result in mask key key key false whereas fillwithnulls key ultimately translating to true thus breaking the intended function call which is mask key key key and fillwithnulls false Same is applicable for the function all Headers defined with responseheader not sent if buffer length exceedes value defined in inioutputbuffering by default Solution may be setting outputbuffering to On unlimited but its not always good idea I found out that in this case output without headers starts at Kleinphp and then it tries to send headers at but fails due to output already happened headerssent true Shouldnt thisresponsesend be called before In my website I have a clientarea that should have the login and register page always accessible and the other pages only if logged in If the user is not logged in the other pages should redirect Iam struggling with this for a few hours already in Klein Of course I can do the check inside every route but with the session check before loading the routes I would like to prevent any accidental code executions by not even loading the client routes at all when the client is not logged in I currently have the following setup if SESSION user routerwithclientarea function routerrespond POST GET function request response login page routerrespond POST GET register function request response register page Here I would like to redirect all pages that are not the login or register page else routerwithclientarea function routerrespond POST GET function request response use data twig headerLocation clientarea exit routerrespond POST GET register function request response use data twig headerLocation clientarea exit routerrespondGET page function request response use data twig clientarea page routerrespondGET page function request response use data twig clientarea page routerrespondGET page function request response use data twig clientarea page As title indicates i am wondering whther it is possible to create a method like appregisterabc functiona b return abrb and then use it like echo appabchello xxx Thanks Hi guys I have a problem with calling callbacks in this package if I write controller full qualified name in the respond method my controllers action will be called statically and if I want to instantiate my controller in respond method I have to inject all dependencies of my controller when I want to instantiate it Can i call multiple instances of klein in indexphp and lets say modulesboardindexphp so they have routes of their own without being in one huge indexphp ps also interested how this will workout for htaccess in both paths PHP Warning arrayflip Can only flip STRING and INTEGER values in varwwwhtmlsitevendorkleinkleinsrcKleinDataCollectionDataCollectionphp on line I am running PHP version And I get the warning consistently when hitting routes where I use GET parameters So I went into DataCollectionphp and found the all function that seemed to be causing the problem I vardumpmask just before it is passed into arrayflip To my surprise I see that one of the values passed in is actually a BOOLEAN false array string new boolfalse I did not use that as part of my mask but I notice that the mask is modified within the function the rest of the function arguments are added in So I went over to Requestphp lines thru the params function return arraymerge attributes thisparamsgetallmask false thisparamspostallmask false thiscookiesallmask false thisparamsnamedallmask false Add our named params last There it is A boolean is being passed in 