Test case is just ruby string ip ipbgls c aResultE F EFEEEBFCE F E ECEFF EEEAF E EDE EDE F EBEEF FCF EEF ECFBE EBFFEEF EFF E E EAE To match ruby az az az d az d az Would you please take a look thanks I have posted the question to Stack Overflow Sorry for the crosslinking I dont know how the gem packaging happens so not sure if its an issue or if I did something wrong on Ubuntu with ruby ruby patchlevel i linux when I did a gem install rspec it tried to install rspec This fails saying it needs rspecexpectations but not grabbing it on its own not sure why its not a functional install missing rspeccore and thus the executable I solved the issue by forcing rspec to install gem install rspec v some exception raised in before block exampledescription be changed to nil so failureoutput raise undefined method strip for nilNilClass example please toggle the line to comment and try again Im trying to set up rake to combine coverage reports with cucumber and the automatic deleting of the coverage directory is complicating things It would be nice if this was a configuration option Hey people I am here lost with this bug trace Maybe someone already had it and can give me a tip for solving it ApplicationController should use ApplicationController FailureError Unable to find matching line from backtrace ArgumentError wrong number of arguments for Usersmervmgemsruby p rails gemsactionpack libactioncontrollertestcaserb in initialize Usersmervmgemsruby p rails gemsactionpack libactioncontrollertestcaserb ininitialize Usersmervmgemsruby p rails gemsactionpack libactiondispatchhttprequestrb in new Usersmervmgemsruby p rails gemsactionpack libactiondispatchhttprequestrb innew Usersmervmgemsruby p rails gemsactionpack libactiondispatchtestingtestrequestrb in new Usersmervmgemsruby p rails gemsactionpack libactioncontrollertestcaserb insetupcontrollerrequestandresponse Usersmervmgemsruby p rails gemsrspecrails librspecrailsadaptersrb in send Usersmervmgemsruby p rails gemsrspecrails librspecrailsadaptersrb insetup Usersmervmgemsruby p rails gemsrspeccore librspeccorehooksrb in instanceeval Usersmervmgemsruby p rails gemsrspeccore librspeccorehooksrb inrunin Usersmervmgemsruby p rails gemsrspeccore librspeccorehooksrb in runall Usersmervmgemsruby p rails gemsrspeccore librspeccorehooksrb ineach Usersmervmgemsruby p rails gemsrspeccore librspeccorehooksrb in runall Usersmervmgemsruby p rails gemsrspeccore librspeccorehooksrb inrunhook Usersmervmgemsruby p rails gemsrspeccore librspeccoreexamplegrouprb in runbeforeeachhooks Usersmervmgemsruby p rails gemsrspeccore librspeccoreexamplegrouprb ineach Usersmervmgemsruby p rails gemsrspeccore librspeccoreexamplegrouprb in runbeforeeachhooks Usersmervmgemsruby p rails gemsrspeccore librspeccoreexamplerb inrunbeforeeach Usersmervmgemsruby p rails gemsrspeccore librspeccoreexamplerb in run Usersmervmgemsruby p rails gemsrspeccore librspeccoreexamplerb inwitharoundhooks Usersmervmgemsruby p rails gemsrspeccore librspeccoreexamplerb in run Usersmervmgemsruby p rails gemsrspeccore librspeccoreexamplegrouprb inrunexamples Usersmervmgemsruby p rails gemsrspeccore librspeccoreexamplegrouprb in map Usersmervmgemsruby p rails gemsrspeccore librspeccoreexamplegrouprb inrunexamples Usersmervmgemsruby p rails gemsrspeccore librspeccoreexamplegrouprb in run It does not even reach the first spec in the file Thanks in advance See this thread This issue originated in a respec test and ended up showing that rspec cant handle the case with stubing methods with same implicit block method signatures it seems It gives the same noblockgiven exception when trying to rspec it From time to time we see the following error in our specs NoMethodError in FiltersDeviceFilterList does not raise an error for SitesBestbuyAndroid undefined method removeafter for SpecExampleExampleGroupClass Were running rspec and rspecrails The caller appears to be ruby def unregisterverifyaftereach nodoc proc verifyrenderedproc SpecExampleExampleGroupremoveaftereach proc end Looking at the rspec core code it looks like removeafter was removed from the code around Is that correct Is there a recommended fix This simple example should explain the problem class Dog scope somescope limit end Dogdeleteall Dogcreate Dogsomescopeshould Dogfirst this fails Dogsomescopeallshould Dogfirst this passes Given that all should be called automatically this seems like an odd bug 