One can now do yaml windows name vim root PROJECTDIRRubyteamocil The regular expression only checks for the format VAR and VAR and replaces them with their respective value from the ENV hash Fixes Hi I am running a window where four panes each with different directory I do something like this windows name Server focus true root dev layout tiled panes cd app be rails s cd app be rails s p cd app be sidekiq cd app be sidekiq What happens if I kill the server in app is when I press arrow up it suggests cd app be rails s which I cannot run Id like to switch directory before running my server somehow any ideas I could do cd devapp be rails s which will allow rerunning but if there is more elegant solution Id love to know Actually running teamocil without any arguments attempts to open a yml in the teamocil folder in home but gives the following error message Cannot find a layout at Usersnboisvertteamocilyml I would suggest trying to load teamocilyml if no file is provided We could then commit teamocilyml files in our project so everyone in the team can benefit from it and share the same tmux layout what do you think The only issue I see is if users started writing teamocilyml files to have a default layout As a user I would like being able to generate teamocil yaml from existed tmux session and save it in a file for next usage for avoiding writing it manually May be updating can be useful also Related issue and big thanks for your great tool remiprev Hello I have a few panes which all depend on a set of commands being ran beforehand However if they all try to run the command at once it will be problematic I have worked around this by putting a sleep in all of the panes but one This isnt amazing I would love a syntax support like the following windows name mywindow layout evenvertical setup setupcommand setupcommand setupcommand panes command command command In which the setup commands would execute before the pane commands I have a Teamocil YAML file that contains a lot of snippets like yaml windows name root panes commands export CC export CXX export BUILDROOTsomethingDebug export PATHsomethingDebugbin commands export CC export CXX export BUILDROOTsomethingRelease export PATHsomethingReleasebin This is fine when using sh or compatible shells bash zsh but breaks with other shells csh fish that prefer setenv or set export If Teamocil were to afford the ability to manipulate the environment via Rubys ENV hash Id be able to write descriptions such as the following that work with different sorts of shells yaml windows name root env CC would apply to all panes in this window CXX would apply to all panes in this window panes env only need to specify vars specific to this pane BUILDROOT somethingDebug PATH somethingDebugbin env BUILDROOT somethingRelease PATH somethingReleasebin I would like to have ability to enforce changed commands to run again For example name mysession windows name immutable panes sleep name mutable panes tail f mylog teamocil here mysession then I edit the yml to panes tail f mylog n in the same tmux session execute teamocil replace mysession and my mutable plane is going to be recreated and with teamocil replace force mysession all windows and panes are going to be recreated Thanks for Teamocil According to the Free Dektop XDG Base Directory Specification config should be used for personal config files From the spec XDGCONFIGHOME defines the base directory relative to which user specific configuration files should be stored If XDGCONFIGHOME is either not set or empty a default equal to HOMEconfig should be used systemd also supports the standard and documents in man filehierarchy under HOME DIRECTORY config Application configuration and state If an application finds XDGCONFIGHOME set it should use the directory specified in it instead of this directory As a user I appreciate having configuration file standardized in the config directory with less litter in my top level directory For example I can easily specify that all files under config should be included in a backup while all files under cache also standardized dont need to be backed up The current location can still be checked as a backup for backwards compatibility Quoting in the yaml file is a little tricky The following does not work windows name railsprod root layout evenvertical panes ssh server t cd varlograils bash login ssh server t cd varrailsapps bash login If I double quote the ssh command parameter it does work so Im good But for kicks I ran this yaml through yamllintcom I dont know if this is a good resource or not and got windows name railsprod root layout evenvertical panes ssh server t cd varlograils bash login ssh server t cd varrailsapps bash login and teamocil doesnt like that quoting either Im trying to use teamocil with the root setting in my config I have something like this windows name somename root WORKSPACE layout evenhorizontal panes commands cd myproject git fetch I have WORKSPACE set to devworkspace and exported in my shell config Im using fish but this is not working Running with the debug flag I see tmux newwindow n somename c UserssahildevWORKSPACE Instead of resolving the variable to a path its instead appending it to my current directory and creating an invalid path Is this something that can be fixed