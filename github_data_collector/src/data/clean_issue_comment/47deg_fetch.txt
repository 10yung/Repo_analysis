Updates com degsbtmicrosites from to Release NotesChangelog Ill automatically update this PR to resolve conflicts as long as you dont change it yourself If youd like to skip this version you can just close this PR If you have any feedback just mention me in the comments below Have a fantastic day writing Scala details summaryIgnore future updatessummary Add this to your scalastewardconf file to ignore future updates of this dependency updatesignore groupId com deg artifactId sbtmicrosites details labels semvermajor I might to be blind to find it but I dont see any progress or discussion towards adding Scala and sbt to the build As I am currently upgrading my services this is the first library that doesnt have a release The upgrade itself should not be hard to do That being said I would also like to see cats effect being used Should I put this to a separate issue We have FetchrunCache and FetchrunLog but not something that can return both Actual version Patch Minor Major From the gitter channel I like the deduplication feature but when I run a fetch Id like to be able to get the data as it becomes available Imagine I have a websocket and I want to push data through it as it becomes available My issue is that if I use fetchAfetchBtupled even if the two fetches ultimately execute in parallel I have to wait until they both complete to get the full tuple Actual version Patch Minor Major Currently the methods that fetch data in DataSource require an effect type F with Par F and ConcurrentEffect F Par is required due to the DataSourcebatch implementation defaulting to running individual fetches in parallel If we move away from it Data sources that dont implement batching will run their fetches sequentially Par F will still be required when creating or running a fetch to F since is used when running multiple batches in parallel ConcurrentEffect is perhaps too restrictive since we may not need the cancellation semantics that Concurrent provides We could use Effect here thoughts catseffecttypeclasses Cacheing resource request is a great feature However I was wondering if it would be nice to support cache backends such as Redis or MemCached Spotted in the gitter channel The big thing for me was that it wasnt clear that the cache could be reused It talks about the state monad and the cache being immutable which caused me to make some bad assumptions even after diving into the code This should be more explicit and clear to not confuse people