Ive already seen people telling to commit the env file for React projects for example and to not commit for servers For reactnative projects whats the best practice Bumps handlebars from to details summaryChangelogsummary Sourced from handlebarss changelog v November th Bugfixes fix add noprototypebuiltins eslintrule and fix all occurences f f d fix add more properties required to be enumerable Chores Build fix use instead of c b f add chai and dirtychai and sinon for cleaner testassertions and spies deprecate old assertionmethods e e ba dad a Security The properties proto defineGetter defineSetter and lookupGetter have been added to the list of properties that must be enumerable If a property by that name is found and not enumerable on its parent it will silently evaluate to undefined This is done in both the compiled template and the lookuphelper This will prevent new RemoteCodeExecution exploits that have been published recently Compatibility notes Due to the securityfixes The semantics of the templates using proto defineGetter defineSetter and lookupGetter in the respect that those expression now return undefined rather than their actual value from the proto The semantics have not changed in cases where the properties are enumerable as in js proto some string The change may be breaking in that respect but we still only increase the patchversion because the incompatible usecases are not intended undocumented and far less important than fixing RemoteCodeExecution exploits on existing systems Commits v November th Bugfixes fix use Stringfield in lookup when checking for constructor d test add fluent API for testing Handlebars c ac c Compatibility notes no incompatibility are to be expected trtable truncated details details summaryCommitssummary c c b v c d Update release notes f f d fix add noprototypebuiltins eslintrule and fix all occurences fix add more properties required to be enumerable ba testchore add chaiexpect and sinon to runtimeenvironment dad test add sinon as global variable to eslint in the specs a test add sinonjs for spies deprecate current assertions e e chore add chai and dirtychai for better test assertions c b f fix use instead of de d v Additional commits viewable in compare view details br Dependabot compatibility score Dependabot will resolve any conflicts with this PR as long as you dont alter it yourself You can also trigger a rebase manually by commenting dependabot rebase dependabotautomergestart dependabotautomergeend details summaryDependabot commands and optionssummary br You can trigger Dependabot actions by commenting on this PR dependabot rebase will rebase this PR dependabot recreate will recreate this PR overwriting any edits that have been made to it dependabot merge will merge this PR after your CI passes on it dependabot squash and merge will squash and merge this PR after your CI passes on it dependabot cancel merge will cancel a previously requested merge and block automerging dependabot reopen will reopen this PR if it is closed dependabot ignore this patchminormajor version will close this PR and stop Dependabot creating any more for this minormajor version unless you reopen the PR or upgrade to it yourself dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency unless you reopen the PR or upgrade to it yourself dependabot use these labels will set the current labels as the default for future PRs for this repo and language dependabot use these reviewers will set the current reviewers as the default for future PRs for this repo and language dependabot use these assignees will set the current assignees as the default for future PRs for this repo and language dependabot use this milestone will set the current milestone as the default for future PRs for this repo and language You can disable automated security fix PRs for this repo from the Security Alerts page details Thanks for the library Do you have plans to support object structures in the config like JSONYAML Im wondering if version support autolink cause First In the readme there is Link the library reactnative link reactnativeconfig But autolink should not need a link command right Secondly With these versions reactnative reactnativeconfig I have an error on iOS builtin fatal error UsersUSERNAMELibraryDeveloperXcodeDerivedDataXXXfdoedqtrcjsbppgvncqzfwelgcimBuildProductsGeneratedInfoPlistDotEnvh file not found include UsersUSERNAMELibraryDeveloperXcodeDerivedDataXXXfdoedqtrcjsbppgvncqzfwelgcimBuildProductsGeneratedInfoPlistDotEnvh error generated Command Preprocess failed with a nonzero exit code See In this commit you changed the way ios integration is managed but can you clarify whether the old mechanism still works I have Infoplist entries like this keyCFBundleShortVersionStringkey stringRNCONFIGAPPVERSIONstring keyCFBundleVersionkey stringRNCONFIGAPPBUILDstring And this in build settings as per the old instructions And at least in releases to TestFairy this still seems to work having upgraded to reactnativeconfig but before we roll out to the app store I just wanted confirmation that this will still work Were there any upgrade instructions when this new mechanism was rolled out What is the advantage of the new mechanism using a xcconfig file Seems more complicated in the setup to me and the latest README does not clarify how to refer to ENVFILE variables in the Infoplist file Is there a migration guide from to What do I need to remove from the old config and what do I need to add to the new config Do I need this config in the Podfile if targetname reactnativeconfig phase targetprojectnewXcodeprojProjectObjectPBXShellScriptBuildPhase phaseshellscript cd RNCROOTnodemodulesreactnativeconfig export SYMROOTRNCROOTiosReactNativeConfig export BUILDDIRRNCROOTiosReactNativeConfig ruby RNCROOTiosReactNativeConfigBuildDotenvConfigrb targetbuildphases phase targetbuildphasesmovephase end I have added a config file in ios folder called Configxcconfig with this line include tmpxcconfig I get some build errors when I try to upgrade from to I have the following echo envtest tmpenvfile Added this line to it as the guide suggests I get this build error nodemodulesreactnativeconfigiosReactNativeConfigReadDotEnvrb in join no implicit conversion of nil into String TypeError from nodemodulesreactnativeconfigiosReactNativeConfigReadDotEnvrb in readdotenv from nodemodulesreactnativeconfigiosReactNativeConfigBuildDotenvConfigrb in main reading env file from and writing m to going to read env file from root folder I am trying to set up environment and only have buildtype like this buildTypes debug debuggable true extenableCrashlytics false release minifyEnabled true proguardFiles getDefaultProguardFileproguardandroidtxt proguardrulespro consumerProguardFiles proguardrulespro signingConfig signingConfigsrelease As a result I write like this projectextenvConfigFiles debug envdev release envprod apply from projectreactnativeconfigprojectDirgetPath dotenvgradle I have already created envdev and envprod in root project directory ENVdev For testing in my react native I wrote like this as well Button Test ConfigENVButton Problem is it show as undefinied and cannot detect ConfigENV For iOS it is okay It means my gradle got issue I guess or react native version I am using expo eject as well ejected expo project Expo version React Native How shall I do For reference this is my dotenvgradle I havent changed anything def loadDotEnvflavor getCurrentFlavor def envFile env if Systemenv ENVFILE envFile Systemenv ENVFILE else if SystemgetPropertyENVFILE envFile SystemgetPropertyENVFILE else if projecthasPropertyenvConfigFiles use startsWith because sometimes the task is generateDebugSources so we want to match debug projectextenvConfigFilesany pair if flavorstartsWithpairkey envFile pairvalue return true else if projecthasPropertydefaultEnvFile envFile projectdefaultEnvFile def env printlnReading env from envFile File f new FileprojectrootDirenvFile if fexists f new FileenvFile if fexists feachLine line def matcher line sexport s w d s s s if matchergetCount matcher size envputmatcher matcher replace else println println Missing env file println projectextsetenv env The vars are always correctly populated when buildingarchiving locally on my MAC but always empty when builtarchived on Circle CI Im not really sure what other information to give on this other than that Basically I ran into this problem when integrating Codepush to my app where they expect the keys to be defined in the Infoplist file I took the traditional route of specifying build settings as a temporary workaround for the moment Let me know how I can help with any additional logs or similar