 What problem does this feature solve Im currently debugging the integration of a Date Range Picker component which generates a lot of events Finding the events relevant to me is a bit cumbersome as they get lost in a sea of irrelevant events I can filter for events but that function is somewhat limited delit only matches the event name matching also the component name would helpdel insIve just discovered that Component matches against component namesins negative matches are not possible sth like hover or CSSlike nothover would help multiple matches are not possible sth like birthday price or birthday OR price would help Im aware that the suggestions above might be in conflict with existing bad practice of actually naming an event hover or more realistically finding events names onhover but Im not fixed on syntax What does the proposed API look like Im not familiar with the internals of vuedevtools generated by vueissues DO NOT REMOVE Version Browser and OS info Win electron Steps to reproduce vuedevtool vuedevtool vuedevtool vuedevtool devtool vue vue vuedevtool vuedevtool CMD vuedevtool Attempted to load extension Vuejs devtools that has already been loaded What is expected vuedevtool What is actually happening vue ui ESlint generated by vueissues DO NOT REMOVE Version Browser and OS info chrome Steps to reproduce my project use iframe which has same domain but different urllike this examplemy project url is and iframes url is the devtools sometimes show iframes vuex state What is expected show my projects vuex state What is actually happening show iframes vuex state Actually i create a demo and its okbut in my real projectits show iframes vuex stateits really Annoying i want know why and how to fix it generated by vueissues DO NOT REMOVE What problem does this feature solve When developing vue applications on remote servers is not always possible to connect with the ngrok tunnel as proposed on the README for the standalone electron app It is also very inconvenient having to install ngrok and the electron shell just to be able to debug the application I believe extensions provide a better user experience as they are directly integrated in the web browser and do not require configuration on the projects or developers machines What does the proposed API look like Unfortunately I dont have experience developing safari extensions but Im willing to spend time helping on the development of this feature and learning how to do it if the idea is supported generated by vueissues DO NOT REMOVE Before After Resolves Some things have to be improved persist the element isolated somewhere in order to avoid multiple isolated elements one element should be isolated use an animation provide a way to customize the opacity level in the settings panel remove parents style without hiding them What problem does this feature solve When we want to work on a specific and complex component like SVG component we would like somehow to only see the concerned component not others This could help the developer to focus on his work I know it could be helpful for me What does the proposed API look like Siblings elements have to be hidden or made translucent for getting the isolation behavior Thus this must done for all parent nodes parent nodes dont have to be hidetranslucent only theirs siblings Technically it could be done by two way at this moment by a loop that add or remove a simple elstyleopacity by a generated style which hidestranslucents all elements this way is heavier but could keep a better HMR experience Please consider this small feature request and please look at the following PR Thanks generated by vueissues DO NOT REMOVE Version Browser and OS info Firefox version bit Ubuntu LTS Steps to reproduce Run any sample vue project open the vue server in firefox open vue devtools and try to edit any data variables try to search for any components in the project What is expected we should be able to search for components we should be able to edit data variables What is actually happening not able to search components not able to edit data variables generated by vueissues DO NOT REMOVE Version Browser and OS info Chrome and at least Steps to reproduce A Vuex mutation like this ENQUEUECALCstate future statecalculationQueue statecalculationQueuethenfuture throw Error The workaround is to avoid throwing mutations What is expected State to load What is actually happening The Loading state message hanging forever Found after Chrome started throwing unexpected exceptions from my previously working promises generated by vueissues DO NOT REMOVE Version Browser and OS info Chrome Windows Steps to reproduce Open Vue devtools Navigate to Vuex tab Click on any state record What is expected The Vuex state shows correctly populated data matching whats shown on the webpage What is actually happening The store is showing empty strings objects and arrays where there should be data It seems that the state hasnt changed from the initial state The workaround is to keep closing and reopening the entire Chrome devtools window until the Vuex tab shows the correct data again generated by vueissues DO NOT REMOVE 