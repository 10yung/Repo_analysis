Hi I saw that Cocoapods is deprecated now I would like to suggest adding support again since it doesnt change the way to develop for SPM as well The library is a very useful library and Cocoapods still in use for a huge number of projects out there would be nice to keep using this the way it is Thanks This function is really useful but was set as internal I propose set as public so everyone can use this Use case You keep the promise in a property or array and need to update the progress via delegate eg URLSessionTaskDelegate Awesome lib I love it I wondered if anyone had any advice on wrapping completion handlers so I can convert a standard callback to a promise In PromiseKit Id normally do something like swift func doSomething PromiseBool return PromiseBool seal in someLibrarydoSomeTaskhandler value in sealfullfillvalue we also have sealrejecterror sealresolvevalue error Id love to be able to migrate and only use Then if possible sadly I have a couple of legacy services that I must wrap to create promises Hi Im a stranger who started using this library I appreciate your effort for this This PR is related to issue to let you guys know about what I found Im using tag I tried deleting tryStartInitialPromiseAndStartIfneeded from progressblock function because otherwise progressfloat in Promise may be called before registering the block passed from the progress function I hope this helps Thanks for reading Currently this library can only return Float value when using progress directive However Alamofire and other network libraries return Progress instance instead of Float I think thenPromise should be able to return Progress instance on progress directive For example swift return PromiseURL resolve reject progress in AlamofiredownloadescapedUrl to destination downloadProgress downloadProgress in downloadProgress is Progress class let currentProgress FloatdownloadProgresscompletedUnitCount FloatdownloadProgresstotalUnitCount progresscurrentProgress progressdownloadProgress should be able to write like this response response in Hi struggling with the semantics for progress block Here are two scenarios getFile thenuploadFile progress Not getting called getFile then selfuploadFilefileUrl progress Called OK Is this the expected behavior Or am I doing something wrong in the first case Thanks