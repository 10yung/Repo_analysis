 Update to SDL on Windows Update all stb dependencies See Bug reported by edwinacunav via Discord Apparently when you leave out the color nothing will be displayed on screen The default should be white Heres a simple implementation for This PR also sets the icon for TutorialExample to Starfighterbmp Ive tested it on macOS Im not sure what would happen on other platforms but we should be able to look at SDLSetWindowIcon to see what would happen Looks like it supports the alpha channel Yay Heres a screenshot of TutorialExample You can see the icon in the dock Window icon in TutorialExample on macOS ref This time Ill try to submit my changes to the audio department the right way The main changes would be the addition of playback position and duration and enabling functions like resume because I do think its useful just to call it instead of passing a boolean to playboolean once again Especially useful if you want a single button to let you pause and resume songs at will With resume we no longer need to keep track of the initial settings About position I might say its convenient if anybody wants to show how many seconds are left before the song ends or simply tell the player how long hes been listening to the same song I know for sure it gets reset after a new song starts playing I hate looping songs because they remind me of an closed source game engine Keep in mind itll be hard or even impossible to keep track of a position on songs with variable bitrates S From Ruby those things should be called ruby songposition Returns a Float songposition Float in seconds not frames nor samples just seconds songpositionminutes songpositionhours Just in case its some instrumental soundtrack like a symphony of sorts songduration songresume Ive been using it while playing OGG files so I know they run smoothly Technically Gosu supports any refresh rate because WindowWindow takes updateinterval as the fourth parameter However that default value is Hz and theres no function to find the native refresh rate of the users displays The issue at hand is that displaying a game at Hz on a monitor with x or greater that refresh rate especially if the monitors refresh rate does not divide smoothly into like Hz doesnt look too nice Motivation Its becoming more common for Windows gaming laptops and desktop monitors to do Hz or higher Apple iPad Pro has a Hz ProMotion display One day an iPhone may come out with a Hz display as well And maybe a MacBook Pro one day too Some Android phones have Hz as well High refresh rate monitors can technically be used on Linux Proposals A couple of simple but nottoowellthoughtoutyet ideas for this Proposal add a Gosurefreshrate One idea is Gosu could have a refresh rate equivalent of unsigned Gosuscreenwidth You could call this function and give its return value to Windowsetupdateinterval Proposal allow WindowWindow to determine the refresh rate Windows constructor maybe a new constructor for backwards compatibility can set its refresh rate to the display automatically Resources SDL can be queried for the refresh rate of an SDLWindow Assumptions We dont need to handle refresh rate changes if a game window is moved from one monitor to the next Currently images can be loaded and saved out and destroyed My goal is to emulate the Ruby gem as much as possible That is Implement the classes and methods as closely as is practical C Image basic load and save test C include gosuGosuImageh struct GosuImage image int main image GosuImagecreatehomecyberarmDownloadswaterSimpng x GosuImagesaveimage pathpng GosuImagedestroyimage return Edit Current State Fully Implemented probably X Song X Sample X Channel X TextInput X Window X Color X Font x Image X Gosu X Button Constants Implemented with issues Gosu Constants TODO String constants VERSION LICENSES and probably others are returning NULL Might not be initialized at compile time TODO Add various constants for Font alignment and style AlphaMode BlendMode and Image texture modes smooth retro tiled enums Is there no way to make the game window resizable for Linux users I cant seem to figure out how to get it to work Setting resizable to true does nothing for me See video 