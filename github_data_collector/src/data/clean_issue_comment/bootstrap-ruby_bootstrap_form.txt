ERROR in appjavascriptstylesheetsapplicationscss nodemodulescssloaderdistcjsjsref nodemodulespostcssloadersrcref nodemodulessassloaderdistcjsjsref appjavascriptstylesheetsapplicationscss Module build failed from nodemodulessassloaderdistcjsjs import railsbootstrapforms File to import not found or unreadable railsbootstrapforms in homewotogomyappdatamartappjavascriptstylesheetsapplicationscss line column Error import railsbootstrapforms File to import not found or unreadable railsbootstrapforms in homewotogomyappdatamartappjavascriptstylesheetsapplicationscss line column at optionserror homewotogomyappdatamartnodemodulesnodesasslibindexjs This is a highlevel issue to capture the tasks needed for version of bootstrapformbootstrapform for Bootstrap Currently running Rails Ruby Bootstrap Bootstrapform I cant figure out how to invoke the invalidfeedback element The ReadME file makes it seem like this element should rendered by default but it isnt Ive tried forcing this by setting the form to inlineerrors true and Im not seeing a change Is this something that only comes in after a trip to the server Im hoping to use it for clientside validation I can get around this with the wrapper false setting on the input element and adding my own markup but doing so feels like Im omitting a chunk of functionality that is very useful otherwise Heres my the code snippet of my form HAML bootstrapformforuser html class needsvalidation novalidate true validate uservalidators do f row colmb fhiddenfield urlhash value nil femailfield email required true autofocus true autocomplete off placeholder t fpasswordfield password required true autocomplete off placeholder row coltextcenter fsubmit tv loginformbutton class btn btnprimary title tv loginformbutton Heres the generated HTML HTML form classneedsvalidation novalidatenovalidate roleform id action acceptcharsetUTF methodpost input nameutf typehidden value input typehidden div classrow div classcol mb input typehidden name id value div classformgroup label classrequired foruseremailEmaillabel input requiredrequired autofocusautofocus autocompleteoff placeholder classformcontrol typeemail value name iduseremail div div classformgroup label classrequired foruserpasswordPasswordlabel input requiredrequired autocompleteoff placeholderpassword classformcontrol typepassword name iduserpassword div div div div classrow div classcol textcenter input typesubmit namecommit valueLog In classbtn btnprimary btnrounded mb titleLog In datadisablewithLog In div div form Fixes Add Support for RansackSearch object to the first argument of bootrapformfor Usage example Controller def index q Invoiceransackparams q invoices qresultdistinct true end View bootstrapformfor q url invoicespath method get do f fsearchfield filenamecont fsubmit One approach to solving and related issues would be to implement be to make our implementation use the Rails methods for label and checkbox and radiobutton in a way that would make our helpers easier to use in the collection helpers When using a ransack object theres an error trying to get the model names name The workaround is setting the help text manually ftextfield nombrecont help Instead of using an input tag marking it as readonly and worrying in the documentation about seeing errors in your input parameters perhaps it would be simpler to render static fields as an output tag instead These are styled like an input but they do not accept keyboard input and they do not get submitted along with the rest of the form The basic custom form fields are usually something you want to apply either globally or not at all so it would be great to have the ability to globally default to custom maybe perfield type rather than having to pass in the argument to each input This may be easily doable now by redefining some methods in an initializer if anyone has done so it would be great to add docs on how to do it If not easily doable now would be a nice feature to add A picture is worth a thousand words slim formrichtextarea summary formsubmit Save class btnprimary I havent dug into the CSS yet to understand whats happening but Im not sure this is working out of the box as you might expect it to It looks like the markup added by the relatively new option required true causes Chrome at least likely others to do the HTML validation on the front end Needs investigation and test cases to confirm