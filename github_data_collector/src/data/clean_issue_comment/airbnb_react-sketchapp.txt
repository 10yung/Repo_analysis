Try to render this SVG to JSON using the node implementation jsx Svg width height viewBox SvgPath dM c l a l a l a zSvgPath Svg Expected behavior Output correct sketch SVG structure Observed behavior creates broken sketch SVG structure which cant run in Sketch and as you can see in the sandbox it will create a frame with infinity properties img width altScreen Shot at AM src was able to track it down to the lonasvgmodel package which if you pass it this SVG then it will output the SVG path with no commands but thats about as far as I was able to get since the lonasvgmodel isnt public another note is that this same SVG if you copy and paste into sketch it will not render very well in comparison to Figma or the browser How to reproduce see sandbox below Sketch version Please attach screenshots a zip file of your project andor a link to your github project Hi Im trying to generate our color palette in sketch with reactsketchapp from the documentation reactsketchapp supports Symbols and TextStyles what about layer styles Example I can run the color palette example but each element of the palette only has direct styles applied to it Id like to use layer styles like this Any pointers would be appreciated otherwise I guess Ill have to use sketchs low level api Background I am a React full stack dev currently working with Grommet UI and would really like to use React Sketchapp for UIUX However I do not have access to an OS X system Most users are on Windows OS X and Linux in that order but Linux and OS X are less than of all computer users Windows is closer to but as developers most of us use Linux Personally I work in Linux for almost everything including desktop and server I would expect any Nodejs based app to be able to run seamlessly across Windows OS X and Linux the same Requesting a new feature ProposalFeaturerequest I would like to request a feature to have the ability to run React Sketchapp on Linux I feel that most developers will then have access to either OS X and or at least Linux like myself If not possible with Node directly I would like to propose an Electron based version Reporting a bug or issue not really a bug but more of a feature request Expected behavior Is to run on Linux following npm install and then npm run render Observed behavior git clone cd reactsketchappexamplesbasicsetup npm install Works with no issues as expected nrydevopscloudshellreactsketchapp nrydevops npm run render npm ERR missing script render npm ERR A complete log of this run can be found in npm ERR homenrydevopsnpmlogs T Zdebuglog additional logging info it worked if it ends with ok verbose cli usrbinnode usrbinnpm run render info using npm info using nodev verbose stack Error missing script render verbose stack at run usrlibnodemodulesnpmlibrunscriptjs verbose stack at usrlibnodemodulesnpmlibrunscriptjs verbose stack at usrlibnodemodulesnpmnodemodulesreadpackagejsonreadjsonjs verbose stack at usrlibnodemodulesnpmnodemodulesreadpackagejsonreadjsonjs verbose stack at checkBinReferences usrlibnodemodulesnpmnodemodulesreadpackagejsonreadjsonjs verbose stack at final usrlibnodemodulesnpmnodemodulesreadpackagejsonreadjsonjs verbose stack at then usrlibnodemodulesnpmnodemodulesreadpackagejsonreadjsonjs verbose stack at usrlibnodemodulesnpmnodemodulesreadpackagejsonreadjsonjs verbose stack at usrlibnodemodulesnpmnodemodulesgracefulfsgracefulfsjs verbose stack at FSReqCallbackreadFileAfterClose as oncomplete internalfsreadfilecontextjs verbose cwd homenrydevopsreactsketchapp verbose Linux verbose argv usrbinnode usrbinnpm run render verbose node v verbose npm v error missing script render verbose exit true Sketch version latest as of December fix I am Reporting a bug or issue Making code changes while on Symbols page breaks the build Expected behavior Making changes to the code would reflect them in Sketch regardless of which page is being browsed as is the case with all the other examples How to reproduce Go to symbols example and run it using npm run render This renders Page correctly Switch page from Page to Symbols in Sketch Make any code change to the component files while on Symbols page and save the file Causes a build error from which one cannot recover unless going back to Page The error Error Cannot render into Symbols page at render UsersXXXsketchappreactsketchappexamplessymbolssymbolssketchpluginContentsSketchmycommandjs at UsersXXXsketchappreactsketchappexamplessymbolssymbolssketchpluginContentsSketchmycommandjs at skpmrun UsersXXXsketchappreactsketchappexamplessymbolssymbolssketchpluginContentsSketchmycommandjs at skpmrun native code Sketch version Version I am a designer and developer at the beginning stages of updating our existing design system sketch library to a new one with reactsketchapp We currently use a lot of nested symbols where we set additional rules on the parent symbol to prevent overrides to some child symbols Example Form Label component This symbol is used within all our form components inputs dropdowns checkboxes etc I want to use the manage overrides feature in sketch to limit what can be overridden on the symbol when nested in parent symbols The manage overrides setting in sketch Does this exist currently or can we add support for this functionality Thanks in advance I am a designer and a developer Requesting a new feature I cant find any resources on how to alter the rendering of your components based on the the size of the viewport or artboard ie single column two column show hide elements In Jon Golds Design as a Function of Data video there is a component called ResponsiveColumnLayout which I presume is doing just this but I cant see a reference to the component in the source code A how to on this would be useful or a pointer on an external resource detailing how to do this Keeping all examples working as API changes are made is cumbersome I believe the major pain point here is knowing what needs to updated Currently this requires manually running each example and verifying output I believe we would be able to greatly increase our confidence that examples are all working as expected by creating very light e e tests As a first pass I purpose we simply check that content gets rendered rather than a RedBox This should help us mitigate issues like and Im wondering if it would be possible to create a router for reactsketchapp It would render all the routes Artboards at once in a page and set up the links so that they can be viewed as a prototype Its just a fuzzy idea for now but it might just work Bonus point if we can mimic the reactrouter API cc jaridmargolin Right now the Page component acts a flex container allowing to render Artboards and SymbolMasters in either a column or a row Id like however to have unlimited flexibility rendering Pages by composing Flex components By having some sort of arbitrary Flex container I could layout items on a Page in complex grids if necessary This would require us introducing a new Component that can be utilized to compute Yoga layout but doesnt actually result in any backed rendering mathieudutour I know this goes against some of your comments in but Im not sure how else to achieve this note it doesnt need to be called Flex