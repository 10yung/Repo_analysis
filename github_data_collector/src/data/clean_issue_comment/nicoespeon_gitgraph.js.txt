Use like this js const master gitgraphbranchmaster mastercommitsomething const develop gitgraphbranchmaster developcommitsomething developmerge branch master commitOption renderDot texthellotext Has anyone ever been successful on parsing a git log into an accurate graph using this library I initially started a project to make my own graph but this library somewhat starts with all branches connecting to a single root Ive also ran into this where commits merged into its own branch formed a straight line instead of a leafmight have something to do with my bad algorithm anyway I ditched that project but I plan to try again but before I try again I wanna make sure that someone has actually done this before using this library Describe the bug I am trying to do something like this mastermergedevelop subject Add feature but it is not adding the subject The same happens with hash etc You can try with just replacing developmergeaFeature with developmergeaFeature subject The subject Is your feature request related to a problem Please describe GitgraphUserApiimport is very useful when drawing complex git graphs However I recognize that there is no way to manipulate commit attributes such as style and onClick Especially typescript is restricted by type so I cannot access commit attributes I want to change the style for some commits or set an onClick handler for all commits Describe the solution youd like I propose passing a function to GitgraphUserApiimport to translate CommitOptions Describe alternatives youve considered I propose to change to ts public importdata unknown translator CommitOptionsTNode CommitOptionsTNode and to ts maptranslator Git json outputs is reversechronological We need to commit it chronological order reverse In this case I think it can be used as follows ts gitgraphimportdata commit commitonClick alertclicked if commitsubjectindexOfbug commitdotText return commit Additional context I am a beginner in typescript Im sorry if gitgraphjs already has another solution Love this library Is your feature request related to a problem Please describe A clear and concise description of what the problem is Ex Im always frustrated when It would be great to distinguish between a mergerebase and a pull request Describe the solution youd like A clear and concise description of what you want to happen masterpullRequestfeature It could look like this Additional context Add any other context or screenshots about the feature request here I understand youre looking for maintainers so hopefully this is something that would be great to be built Can I use html img a in the long text commit You can easily reproduce this bug Just add two line consoleloggitgraphgraphcommits branches setTimeoutconsoleloggitgraphgraphcommits branches In this example Why I found this because I have to change commit color of stroke graphDatacommitsforEachcommit commitstyledotstrokeColor graphDatabranchesgetcommitbranches computedColor commitstyledotstrokeWidth commitstyledotstrokeColor e I want to reset the stroke of color to same like color of branch Then I found this bug or my scenario is wrong Is there any one know this I am use gitgraphjs Thanks I have a long line of commit In the version of v I can scroll to the far right by this way graphContainerscrollLeft graphContainer scrollWidth But now I found that it may be a race condition I have to do that after rendering graph be done I am use gitgraphjs Is there any way to handle this callback Thanks Hi everyone I just became dad few days ago Thus it became clear to me that I need to focus my energy and limit the number of project I run in parallel In terms of personal opensource sideprojects Ill focus my efforts on Abracadabra a VS Code extension that provides automated refactorings for JS TS It has been a long time Im running Gitgraphjs with my friend fabien We created this project so we could easily draw simple git graphs directly in the browser to use for blog posts and presentations These days however I dont use it much anymore However you can see with the currently open issues that people have different interesting suggestions to cover more usecases Also there are bugs to fix Finally the overall documentation of the library could be improved I wont have the time energy to tackle these Not in my foreseeable future at least Thus Im looking for new people to maintain the library and take over the project Ill be able to provide guidance and onboard you on the project if you want Youll see that the dev environment is not that bad with features essentially covered with tests unit E E Let me know if youre interested In the meantime be aware that I wont work on the open issues myself hacktv Is your feature request related to a problem Please describe I was analysing the problem mentioned in feature request and I realised this is bigger change and demands more discussion and proper planning and design so I decided to open a proper feature proposal issue Briefly for those unfamiliar with every time we branch a new column gets assigned to new branch even if there is available space For projects with many shortlived branches layout grows really large pretty quickly I prepared an example that demonstrates it pretty clearly img width altScreenshot at AM src Describe the solution youd like I came across the article commit graph drawing algorithms by pvigier the developer of Gitamine who written a master thesis about this subject It appears like the process of rendering git graph consists of three steps finding appropriate order of commits xcoordinate of each commits finding appropriate column compute ycoordinates optimise the layout I propose to isolate those steps and implement separate functions for them so that user can select which algorithm would like to use javascript const options sorting topological algorithm curved optimisation allnodesandalledges that gives full customisation regarding the output layout for less advanced users who would want to replicate the behaviour of their favourite software we could prepare predefined layout each consisting of sorting and column order algorithm and eventual optimisation such as javascript const options layout SourceTree would replicate the output as similar to SourceTree as we can reproduce the disadvantage is there would be a lot of code to take into account all those algorithms and possibly not enough contributors to implement all of those so I also suggest and alternative solution Describe alternatives youve considered We could also adapt some code from Gitamine which is GPL licenced I briefly researched it and it looks like it is possible to include GPL code in MIT licence project as stated here My alternative proposal is to still abstract out part of the code that assigns order to columns and keep the layout option proposed earlier as javascript const options layout gitamine would use the Gitaminebased algorithm and javascript const options layout regular would render everything exactly as it is now also regular would be the default value so update would not break backwards compatibility and in the future we could consider using different layout as default if community demands it Additional context I attach some figures from article by pvigier they demonstrate quite nicely the possible variety of layouts Also Id like to mention that I already forked and briefly researched the source and if there would be positive feedback on proposal Ill be happy to discuss techy details based on my notes and I can take care of the implementation Id like to mention that the adapted algorithm by pvigier I would commit separately and set him as the author of that commit GitCola GitCola GitExtensions GitExtension gitk gitk GitKraken GitKraken SmartGit SmartGit SourceTree SourceTree 