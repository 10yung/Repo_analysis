I ran bundle exec pod package localspec and it started cloning the specs repo Im using cocoapodspackager and cocoapods I want check the detail of error ApplicationsXcodeappContentsDeveloperToolchainsXcodeDefaultxctoolchainusrbinlibtool for architecture i file PodsbuildsimlibSDKTempocaReplaceMeo has no symbols ApplicationsXcodeappContentsDeveloperToolchainsXcodeDefaultxctoolchainusrbinlibtool for architecture x file PodsbuildsimlibSDKTempocaReplaceMeo has no symbols when using pod package xxxpodspec force embedded nomangle excludedeps configurationRelease specsourcesxxx checking the package files can NOT FOUND dsym file or BCSymbolMap Is there any settings to output the dsym file or BCSymbolMap Another question is how to select the output archs for the framework what i see now the framework info msg is armv armv s i x arm pod package xxxpodspec force embedded nomangle excludedeps configurationRelease specsourcesxxx dsym armv armv s i x arm ArgumentError wrong number of arguments given expected Command usrlocalbinpod package XXXpodspec force dynamic bundleidentifiercomxxxxxxx nomangle specsourcesprivate verbose configurationRelease Plugins cocoapodsdeintegrate cocoapodspackager cocoapodsplugins cocoapodssearch cocoapodsstats cocoapodstrunk cocoapodstry Error ArgumentError wrong number of arguments given expected LibraryRubyGems gemscocoapods libcocoapodstargetpodtargetrb in initialize LibraryRubyGems gemscocoapodspackager libcocoapodspackagerpodutilsrb in new LibraryRubyGems gemscocoapodspackager libcocoapodspackagerpodutilsrb in builddynamictarget LibraryRubyGems gemscocoapodspackager libcocoapodspackagerpodutilsrb in installdynamicpod LibraryRubyGems gemscocoapodspackager libpodcommandpackagerb in buildinsandbox LibraryRubyGems gemscocoapodspackager libpodcommandpackagerb in block in buildpackage LibraryRubyGems gemscocoapodspackager libpodcommandpackagerb in each LibraryRubyGems gemscocoapodspackager libpodcommandpackagerb in buildpackage LibraryRubyGems gemscocoapodspackager libpodcommandpackagerb in run LibraryRubyGems gemsclaide libclaidecommandrb in run LibraryRubyGems gemscocoapods libcocoapodscommandrb in run LibraryRubyGems gemscocoapods binpod in top required usrlocalbinpod in load usrlocalbinpod in main Using the following command pod package MyLibpodspec force nomangle excludedeps subspecsCore specsources verbose On Mojave with XCode beta Build M r Attempted with both CocoaPods and beta I get the following error sh line Illegal instruction xcodebuild GCCPREPROCESSORDEFINITIONSinherited PodsDummyPodsMyLibPodsDummyPodPackageMyLib CONFIGURATIONBUILDDIRbuild clean build configuration Relea Build command failed xcodebuild GCCPREPROCESSORDEFINITIONSinherited PodsDummyPodsMyLibPodsDummyPodPackageMyLib CONFIGURATIONBUILDDIRbuild clean build configuration Release target Podspa Output Build settings from command line CONFIGURATIONBUILDDIR build GCCPREPROCESSORDEFINITIONS inherited PodsDummyPodsMyLibPodsDummyPodPackageMyLib xcodebuild dataWithFirstBytes ofFilevarfolderstfyz zzdfn n w lzxpjyryx vvw zTcocoapods t vzg PodsComScorepod failed errno note Using new build system CLEAN SUCCEEDED Packaging works fine when using XCode etc I can successfully Lint using Xcode beta and Xcode x I have tried this on two different machines with the same result At this point Im not sure what else I can do and am inclined to think there is something with the packager thx when sh curl AVOSCloudpodspec pod package AVOSCloudpodspec verbose then txt Building mangled framework usage cp R H L P fi n apvXc sourcefile targetfile cp R H L P fi n apvXc sourcefile targetdirectory but AVOSCloud AVOSCloudpodspec build Podsbuild XCBuildData ios AVOSCloudframework osx AVOSCloudframework tvos AVOSCloudframework watchos AVOSCloudframework AVOSCloudpodspec details summarylogsummary curl AVOSCloudpodspec pod package AVOSCloudpodspec verbose Total Received Xferd Average Speed Time Time Time Current Dload Upload Total Spent Left Speed Preparing Analyzing dependencies Fetching external sources Fetching podspec for AVOSCloud from AVOSCloudpodspec Resolving dependencies of CDN trunk Relative path CocoaPodsversionyml exists Returning local because checking is only perfomed in repo update Comparing resolved specification to the sandbox manifest A AVOSCloud Downloading dependencies Installing AVOSCloud Copying AVOSCloud from UsersMadordieLibraryCachesCocoaPodsPodsExternalAVOSCloudde a d c b da to PodsAVOSCloud Running pre install hooks Generating Pods project Creating Pods project Installing files into Pods project Adding source files Adding frameworks Adding libraries Adding resources Linking headers Installing Pod Targets Installing target AVOSCloud iOS Generating dummy source at PodsTarget Support FilesAVOSCloudAVOSClouddummym Installing Aggregate Targets Installing target Podspackager iOS Generating dummy source at PodsTarget Support FilesPodspackagerPodspackagerdummym Stabilizing target UUIDs Running post install hooks Writing Xcode project file to PodsPodsxcodeproj Cleaning up sandbox directory Writing Lockfile in Podfilelock Writing Manifest in PodsManifestlock Skipping User Project Integration Running post install hooks cocoapodsstats from UsersMadordiervmgemsruby globalgemscocoapodsstats libcocoapodspluginrb CDN trunk Relative path CocoaPodsversionyml exists Returning local because checking is only perfomed in repo update Pod installation complete There is dependency from the Podfile and total pod installed Building framework AVOSCloud with configuration Release Mangling symbols Building mangled framework usage cp R H L P fi n apvXc sourcefile targetfile cp R H L P fi n apvXc sourcefile targetdirectory Preparing Analyzing dependencies Fetching external sources Fetching podspec for AVOSCloud from AVOSCloudpodspec Resolving dependencies of CDN trunk Relative path CocoaPodsversionyml exists Returning local because checking is only perfomed in repo update Comparing resolved specification to the sandbox manifest A AVOSCloud Downloading dependencies Installing AVOSCloud Copying AVOSCloud from UsersMadordieLibraryCachesCocoaPodsPodsExternalAVOSCloudde a d c b da to PodsAVOSCloud Running pre install hooks Generating Pods project Creating Pods project Installing files into Pods project Adding source files Adding frameworks Adding libraries Adding resources Linking headers Installing Pod Targets Installing target AVOSCloud macOS Generating dummy source at PodsTarget Support FilesAVOSCloudAVOSClouddummym Installing Aggregate Targets Installing target Podspackager macOS Generating dummy source at PodsTarget Support FilesPodspackagerPodspackagerdummym Stabilizing target UUIDs Running post install hooks Writing Xcode project file to PodsPodsxcodeproj Cleaning up sandbox directory Writing Lockfile in Podfilelock Writing Manifest in PodsManifestlock Skipping User Project Integration Running post install hooks cocoapodsstats from UsersMadordiervmgemsruby globalgemscocoapodsstats libcocoapodspluginrb Pod installation complete There is dependency from the Podfile and total pod installed Building framework AVOSCloud with configuration Release Mangling symbols Building mangled framework usage cp R H L P fi n apvXc sourcefile targetfile cp R H L P fi n apvXc sourcefile targetdirectory Preparing Analyzing dependencies Fetching external sources Fetching podspec for AVOSCloud from AVOSCloudpodspec Resolving dependencies of CDN trunk Relative path CocoaPodsversionyml exists Returning local because checking is only perfomed in repo update Comparing resolved specification to the sandbox manifest A AVOSCloud Downloading dependencies Installing AVOSCloud Copying AVOSCloud from UsersMadordieLibraryCachesCocoaPodsPodsExternalAVOSCloudde a d c b da to PodsAVOSCloud Running pre install hooks Generating Pods project Creating Pods project Installing files into Pods project Adding source files Adding frameworks Adding libraries Adding resources Linking headers Installing Pod Targets Installing target AVOSCloud tvOS Generating dummy source at PodsTarget Support FilesAVOSCloudAVOSClouddummym Installing Aggregate Targets Installing target Podspackager tvOS Generating dummy source at PodsTarget Support FilesPodspackagerPodspackagerdummym Stabilizing target UUIDs Running post install hooks Writing Xcode project file to PodsPodsxcodeproj Cleaning up sandbox directory Writing Lockfile in Podfilelock Writing Manifest in PodsManifestlock Skipping User Project Integration Running post install hooks cocoapodsstats from UsersMadordiervmgemsruby globalgemscocoapodsstats libcocoapodspluginrb Pod installation complete There is dependency from the Podfile and total pod installed Building framework AVOSCloud with configuration Release Mangling symbols Building mangled framework usage cp R H L P fi n apvXc sourcefile targetfile cp R H L P fi n apvXc sourcefile targetdirectory Preparing Analyzing dependencies Fetching external sources Fetching podspec for AVOSCloud from AVOSCloudpodspec Resolving dependencies of CDN trunk Relative path CocoaPodsversionyml exists Returning local because checking is only perfomed in repo update Comparing resolved specification to the sandbox manifest A AVOSCloud Downloading dependencies Installing AVOSCloud Copying AVOSCloud from UsersMadordieLibraryCachesCocoaPodsPodsExternalAVOSCloudde a d c b da to PodsAVOSCloud Running pre install hooks Generating Pods project Creating Pods project Installing files into Pods project Adding source files Adding frameworks Adding libraries Adding resources Linking headers Installing Pod Targets Installing target AVOSCloud watchOS Generating dummy source at PodsTarget Support FilesAVOSCloudAVOSClouddummym Installing Aggregate Targets Installing target Podspackager watchOS Generating dummy source at PodsTarget Support FilesPodspackagerPodspackagerdummym Stabilizing target UUIDs Running post install hooks Writing Xcode project file to PodsPodsxcodeproj Cleaning up sandbox directory Writing Lockfile in Podfilelock Writing Manifest in PodsManifestlock Skipping User Project Integration Running post install hooks cocoapodsstats from UsersMadordiervmgemsruby globalgemscocoapodsstats libcocoapodspluginrb Pod installation complete There is dependency from the Podfile and total pod installed Building framework AVOSCloud with configuration Release Mangling symbols Building mangled framework usage cp R H L P fi n apvXc sourcefile targetfile cp R H L P fi n apvXc sourcefile targetdirectory details Command pod package PackMTGLDebugpodspec dynamic verbose this is the project i am trying Report What did you do Really just run the above command on current supported dynamic packager What did you expect to happen A dynamic framework should have been created What happened instead Undefined symbols for architecture armv s stdPodPackMTGLDebugexceptionwhat const referenced from vtable for std badfunctioncall in libMTGLDebugaMTGLDebugCoreo vtable for std badfunctioncall in libMTGLDebugaMTGLDebugCoreBridgeo vtable for std badfunctioncall in libMTGLDebugaMTGLDebugQueueo typeinfo for stdPodPackMTGLDebugexception referenced from typeinfo for std badfunctioncall in libMTGLDebugaMTGLDebugCoreo typeinfo for std badfunctioncall in libMTGLDebugaMTGLDebugCoreBridgeo typeinfo for std badfunctioncall in libMTGLDebugaMTGLDebugQueueo stdPodPackMTGLDebugexceptionPodPackMTGLDebugexception referenced from std badfunctioncallbadfunctioncall in libMTGLDebugaMTGLDebugCoreo std badfunctioncallbadfunctioncall in libMTGLDebugaMTGLDebugCoreo std badfunctioncallbadfunctioncall in libMTGLDebugaMTGLDebugCoreBridgeo std badfunctioncallbadfunctioncall in libMTGLDebugaMTGLDebugCoreBridgeo std badfunctioncallbadfunctioncall in libMTGLDebugaMTGLDebugQueueo std badfunctioncallbadfunctioncall in libMTGLDebugaMTGLDebugQueueo ld symbols not found for architecture armv s clang error linker command failed with exit code use v to see invocation Solution For now I just skip the exception file symbol and worked Can someone tell me how to fix it more safely Id like to be able to run pod package pod targetios and skip building for all of the other supported targets in a pod I dont think this is supported today