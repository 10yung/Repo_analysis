It would be great if results contained not only commands exactly matching the input but allow for imperfections For starters ignoring special characters azAZ Another round could implement real fuzziness chars in incorrect order typos made by pressing neighboring keys ls la tmpmcfly wc l Hello Could it be possible to support arm armhf plateforms I love your work and I miss mcfly on my raspberries and arm virtual instances thanks When Terminal window cant fit all results then attempt to navigate into result just moves selection cursor out of the screen Im proposing to implement clever scrolling where search results are scrolled to fit inside visible Terminal window area CASE works currently when results fits initially lines occupied McFly ESC Exit Run TAB Edit F Delete result cursor here result result result result result result result result result CASE works currently When results fits initially lines occupied McFly ESC Exit Run TAB Edit F Delete result cursor here result result result result result CASE proposed When results fits and Ive scrolled to th result lines occupied McFly ESC Exit Run TAB Edit F Delete result result result result result result cursor here Real use case Terminal opened inside PhpStorm This has been in my bashrc for many years export HISTSIZE export HISTTIMEFORMAT YmdHMS export HISTIGNORE lsll bf gwwhoexithistory export HISTCONTROLignoreboth Im looking at swapping in mcfly Do I need to modify these in any way Does mcflys database honor HISTSIZE or does it storeremember forever Hi Please add Usage section to the readme file And especially information about using symbol as a way to use multiple searching patterns Thanks in advance source mcflybash McFly Upgrading McFly DB to version please waitthread main panicked at McFly error Unable to add cmdtp l to commands SqliteFailureError code Unknown extendedcode Someduplicate column name cmdtpl srclibcoreresultrs stack backtrace unknown unknown unknown unknown unknown unknown unknown unknown main libcstartmain unknown I am using a custom HISTFILE name And to keep it that way I also make this variable readonly As mcfly does export HISTFILEHISTFILEHOMEbashhistory this leads to an annoying warning bash HISTFILE readonly variable A check like if z HISTFILE then export HISTFILEHOMEbashhistory fi would prevent this warning for me McFly Importing Bash history for the first time This may take a minute or two This is misleading My bashhistory is about MB big and I keep seeing this message for at least minutes on a quad core CPU Another ugly side effect that no terminal windows can be spawned meanwhile they stay locked the workaround is simple use a shell in a terminal that was already started before enabling mcfly but this can be a problem if theres none Perhaps you need to add some import progress like x out of y lines from bashhistory are imported Once you learn it its simple have mcfly in PATH and source the provided shell script But a total beginner still may need to go back to the github repo to read the README after downloading the binary release I suppose binary releases are often a choice for first time end users since rust is still quite new and exotic not available everywhere by default not trivial to use to compile from source by someone who knows nothing about it Having the README in the binary release tarball would make it selfsufficient