kerl do not work out of the box on clean linux machine It requires some tools to compile Erlang It would be good if README lists these packages APPLICATIONS DISABLED See Usersslykerlbuilds otpbuild log odbc ODBC library link check failed DOCUMENTATION INFORMATION See Usersslykerlbuilds otpbuild log documentation fop is missing Using fakefop to generate placeholder PDF files Based on discussion in do not munge CFLAGS on Catalina I use ubuntu and tried to install with asdf I installed all the libraries required for ubuntu but keeps getting this error Build failed make Waiting for unfinished jobs make Leaving directory homemrkaspaasdfpluginserlangkerlhomebuildsasdf otpsrc libwxcsrc homemrkaspaasdfpluginserlangkerlhomebuildsasdf otpsrc makeotpsubdirmk recipe for target opt failed make opt Error make Leaving directory homemrkaspaasdfpluginserlangkerlhomebuildsasdf otpsrc libwx homemrkaspaasdfpluginserlangkerlhomebuildsasdf otpsrc makeotpsubdirmk recipe for target opt failed make opt Error make Leaving directory homemrkaspaasdfpluginserlangkerlhomebuildsasdf otpsrc lib Makefile recipe for target libs failed make libs Error Hey Im using asdf for managing multiple versions of development software It uses this project and on openSUSE distribution there is one small problem Luckily it does not stops building process but still shows a warning which is really confusing WARNING It appears a required development package openssldevel is not installed I have found that this message comes from To understand what is going wrong on openSUSE simply let me show you my output rpm q openssldevel pakiet openssldevel nie jest zainstalowany message in Polish that such package is not installed rpm q libopenssldevel libopenssldevel c noarch Finally to confirm that such package just does not exists here is a search result bash zypper search openssldevel Wczytywanie danych repozytorium Loading repository data Odczytywanie zainstalowanych pakiet w Reading installed packages S Nazwa Podsumowanie Typ i libopenssldevel Include Files and Libraries mandatory for Development pakiet xmlsec openssldevel OpenSSL crypto plugin for XML Security Library pakiet Nazwa Name Podsumowanie Summary Typ Type pakiet package Do you think that you can add a special check for this case Please look that its not a distribution which nobody knows about Following Distrowatch openSUSE is th of most popular distributions and also of Independent distributions Along these lines An issue was posted on asdfvmasdferlangissues about erlang being unable to build on the upcoming version of macOS Since asdfvm uses kerl underneath it was suggested an issue be created here Here is the output from trying to install Building ErlangOTP asdf please wait Configure options have changed Reconfiguring APPLICATIONS DISABLED See Usersschlenksasdfpluginserlangkerlhomebuildsasdf otpbuild log crypto No usable OpenSSL found ssh No usable OpenSSL found ssl No usable OpenSSL found Build failed make ebinhipetagschemebeam Segmentation fault make ebinhipertlmkswitchbeam Segmentation fault make ebinhipertlcleanupconstbeam Segmentation fault make ebinhipertlbinarybeam Segmentation fault make ebinhipertlbinarymatchbeam Segmentation fault make ebinhipeicode rtlbeam Segmentation fault make ebinhipertllivenessbeam Segmentation fault make opt Error make opt Error make secondarybootstrapbuild Error Ive looked at it a bit and tried a few different tactics to get it to recognize the openssl library installed openssl s via brew installed openssl c via brew compiled openssl s from source code KERLCONFIGUREOPTIONS set in zshrc export KERLCONFIGUREOPTIONSdisabledebug disablesilentrules withoutjavac enablesharedzlib enabledynamicssllib enablesctp enablesmpsupport enablethreads enablekernelpoll enablewx enabledarwin bit withsslusrlocaloptopenssl bin Allow user to install kerl from python pypi warehouse These changes introduce a python packaging system for kerl They package kerl into a python package deploy it to pypi and allow users to install kerl from pypi by using pip install pykerl The kerl project name is already in use on pypi so I decided to name it pykerl The package version is based on the git tag version so when you built a a new version the version retrieved correspond to your tags that already existes The python package and deployed is built by using travisci Everythings is automatic you just need to deploy a new git tag to your github repo to deploy a new version on pypi By example if you create a tag and after you push it on github then a new package in version will be available on pypi You dont need to bump the version manually for the python installer part You need to create a pypi account first and to update the password section in the travis yaml file Read the following documentations for more informations Our support policy is the last OTP releases Ive been installing erlang via kerl using asdf It would be nice to have a progress bar or a spinner to indicate that something is happening