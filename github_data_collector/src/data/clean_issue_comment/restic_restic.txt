Output of restic version restic v gd a a compiled with go on linuxamd What should restic do differently Which functionality do you think we should add Connect successfully to a restic rest server that is secured by TLS v only What are you trying to do I have a restic rest server behind an nginx reverse proxy that enforces TLS v and I am trying to backup to this rest server restic r rest init Fatal create repository at rest failed Post remote error tls protocol version not supported By playing with the nginx configuration I was able to verify that this error occurs when TLS v or lower is disabled sslprotocols TLSv causes restic client to fail with above error message sslprotocols TLSv TLSv works with restic Did restic help you today Did it make you happy in any way Not yet sorry folks maybe later What is the purpose of this change What does it change Using Docker Restic fails to build using Go and needs Go so I updated the build script Was the change discussed in an issue or in the forum before I created an issue in Checklist x I have read the Contribution Guidelines I have added tests for all changes in this PR I have added documentation for the changes in the manual Theres a new file in changelogunreleased that describes the changes for our users template here I have run gofmt on the code in all commits x All commit messages are formatted in the same style as the other commits in the repo x Im done this Pull Request is ready for review Output of restic version na How did you run restic exactly The issue is not directly related to restic but with the way its Docker image is built when you run dockerbuildsh What backendserverservice did you use to store the repository na Expected behavior A resticresticlatest Docker image is built Actual behavior go build githubcomresticresticinternalerrors module requires Go go build githubcomresticresticinternaldebug module requires Go go build githubcomresticresticinternalhashing module requires Go go build githubcomresticresticinternaltextfile module requires Go go build githubcomresticresticinternaluitable module requires Go go build githubcomresticresticinternalselfupdate module requires Go build failed exit status exit status Steps to reproduce the behavior From the root of the repo run dockerbuildsh Do you have any idea what may have caused this Yes During the build of binary it requires Go version The current version used is Do you have an idea how to solve the issue Yes Use Docker image of Go with version Did restic help you or made you happy in any way Absolutely Im currently running a long backup operation and would like to improve my cron scripts at the same time Id like to see how the forget command would affect my backups Since this is a readonly operation acquiring a lock on the repository shouldnt be necessary Output of restic version restic compiled with go on linuxamd How did you run restic exactly Command restic forget H d w m y nolock n passwordfilepathtopasswordfile r pathtorepo Output repository c c de opened successfully password is correct Fatal unable to create lock in backend repository is already locked by PID on hostname by root UID GID lock was created at m s ago storage ID edd What backendserverservice did you use to store the repository A locally mounted disk formatted with ext Expected behavior Show how the forget command with the given parameters would affect the specified backup repository without requiring its own lock Stated differently restic forget nolock n or restic forget nolock dryrun should work regardless of whether another process has locked the repository Actual behavior Restic refuses to perform the command if another process has locked the repository Steps to reproduce the behavior Start a backup or any other operation requiring a lock on the repository In another session attempt to run the forget command mentioned above Do you have any idea what may have caused this A missing or incorrectly written check Do you have an idea how to solve the issue Add a special case within the forget command that bypasses the attempt to lock the repository if dryrun or n and nolock are specified or remove the check preventing this behaviour in this situation Did restic help you today Did it make you happy in any way Yes it just saved my systemdata from a RAID corruption Restic didnt really make me happy so much as less sad I would like to discuss how to improve the actual situation of prune and rebuildindex which is used within prune as there are quite some issues about it So far I see the following issues It uses too much memory This is because of general memory problems with the index in internalrepository see but also because internalindex is used additional to the first index structure This is the reason most users start complaining about memory consumption when using prune It is too slow see This is mainly because it reads all pack files twice This completely makes prune unusable for remote repositories with low bandwidth Also not parallelized It is not customizable Repacking is slowexpensive but cannot be turned of or customized It does too many things and is too complicated It first rebuilds the index from pack files then walks all snapshots and all dirs within to get the used blobs then finds the packs where to delete these blobs and rewrites all those packs Finally the index is again recreated completely from the resulting pack files Hence it not only removes things but reorganizes the repository and is even able to recover from some broken repo issues However this is one source for the performance problems There are already some proposals to fix specific issues see I also started a rebuild of prune functionalities in Here I only used the index from internalrepository to clean unused blobs from the index remove unused blobs and optionally repack if requested by the user This solves IMO Points to and has already been successfully used by me and others for production repostitories About Using and the new commands internalindex is no longer used and could also be removed if prune is substituted by these commands About There is so far a command missing to repack the index files if wanted to get rid of small index files and there is no way implemented to recover the index from the pack files ie the functionality of rebuildindex I can propose to work on these issues in if wanted So my question is Where should prune and rebuildindex go to Is it a way to complete and then use all of this functionality in a new prune command It would be great to get some direction here Thank you very much for contributing code or documentation to restic Please fill out the following questions to make it easier for us to review your changes You do not need to check all the boxes below all at once feel free to take your time and add more commits If youre done and ready for review please check the last box What is the purpose of this change What does it change This PR intents to fix Issue BackupRun counts errors but does not take any action on them This PR changes this behaviour by returning an error if errors occured previously Was the change discussed in an issue or in the forum before Issue Checklist x I have read the Contribution Guidelines I have added tests for all changes in this PR I have added documentation for the changes in the manual Theres a new file in changelogunreleased that describes the changes for our users template here x I have run gofmt on the code in all commits All commit messages are formatted in the same style as the other commits in the repo Im done this Pull Request is ready for review What is the purpose of this change What does it change Fix a race condition in the json output for the backup command that can cause mangled output In addition the change also ensures that the backup summary is always printed after all status messages It also renames internaluijsonstatusstatus to internaluijsonbackup to prevent confusion with termstatus Was the change discussed in an issue or in the forum before closes Checklist x I have read the Contribution Guidelines I have added tests for all changes in this PR x I have added documentation for the changes in the manual Not applicable x Theres a new file in changelogunreleased that describes the changes for our users template here x I have run gofmt on the code in all commits x All commit messages are formatted in the same style as the other commits in the repo x Im done this Pull Request is ready for review What is the purpose of this change What does it change Adds the possibility to show various repository statistics without walking trees ie should be very fast The output looks like restic r pathtorepo stats mode repository enter password for repository repository f a cc c opened successfully password is correct scanning Repository content count raw size crypto encr size key files B B B snapshot files B B B index files MiB B MiB pack files MiB B MiB all files MiB B MiB percentage count raw size crypto encr size key files snapshot files index files pack files all files statistics file size min max avg key files B B B snapshot files B B B index files MiB MiB MiB pack files MiB MiB MiB all files B MiB MiB Index content count raw size crypto encr size tree blobs MiB KiB MiB data blobs KiB MiB MiB all blobs MiB MiB MiB percentage count raw size crypto encr size tree blobs data blobs all blobs statistics raw blobs min max avg tree blobs B KiB KiB data blobs B B B all blobs B KiB B pack size by index packs raw blobs pack header crypto total tree blobs MiB KiB KiB MiB data blobs KiB MiB MiB MiB all blobs MiB MiB MiB MiB percentage packs raw blobs pack header crypto total tree blobs data blobs all blobs Overhead index MiB snapshots B pack header MiB crypto MiB total MiB Total blobs files MiB total rpository size Was the change discussed in an issue or in the forum before No but I needed some statistics while developing and thought it might be a good extension There is an issue with restic stat because it walks all trees for all snapshots and hence is pretty slow see This extension does not solve this issue but is able to give repository statistics very fast Please give me feedback if this is useful or should be complemented by something I will then finish this PR and add docu etc If it is not useful feel free to close this PR Checklist x I have read the Contribution Guidelines I have added tests for all changes in this PR I have added documentation for the changes in the manual Theres a new file in changelogunreleased that describes the changes for our users template here x I have run gofmt on the code in all commits x All commit messages are formatted in the same style as the other commits in the repo Im done this Pull Request is ready for review Thank you very much for contributing code or documentation to restic Please fill out the following questions to make it easier for us to review your changes You do not need to check all the boxes below all at once feel free to take your time and add more commits If youre done and ready for review please check the last box What is the purpose of this change What does it change Resolves Issue adding support for diff json Note As discussed in this only includes summary diff statistics in the json output Describe the changes here as detailed as needed Was the change discussed in an issue or in the forum before Link issues and relevant forum posts here If this PR resolves an issue on GitHub use closes so that the issue is closed automatically when this PR is merged Checklist X I have read the Contribution Guidelines I have added tests for all changes in this PR I have added documentation for the changes in the manual X Theres a new file in changelogunreleased that describes the changes for our users template here X I have run gofmt on the code in all commits X All commit messages are formatted in the same style as the other commits in the repo X Im done this Pull Request is ready for review Thank you very much for contributing code or documentation to restic Please fill out the following questions to make it easier for us to review your changes You do not need to check all the boxes below all at once feel free to take your time and add more commits If youre done and ready for review please check the last box What is the purpose of this change What does it change Documentation improvements that Increase the clarity of which files restic reads during a backup Mentions both the mtimectime attributes Moves restic check to its own section Was the change discussed in an issue or in the forum before Checklist X I have read the Contribution Guidelines I have added tests for all changes in this PR X I have added documentation for the changes in the manual X Theres a new file in changelogunreleased that describes the changes for our users template here I have run gofmt on the code in all commits X All commit messages are formatted in the same style as the other commits in the repo X Im done this Pull Request is ready for review 