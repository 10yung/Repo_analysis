Hello David Thanks for your gem Im trying to reach the total likes count in my controllers method length Sitefirstlikedbycount Alas I get error undefined method likedbycount for Post x fde d b f Invoking the method from views is possible How to use likedbycount from controllers Thanks Hey David Firstly apologies that this is a question and not an issue per se Thanks for the gem and the very informative and humurous article explaining the concepts Well worth a tweet Im looking to build a very simple product recommendation engine where by buying a product the user likes a product I would then for other users recommend products based on their purchasedliked product similarities Basically including the recommendation for other products AFTER they have purchased something themselves in follow up emails to be exact From my very basic understanding is this an ok way to go about things My thinking is that I can build up recommendations over time and have a good way to autorecommend based on similar customer purchases compared to your own purchase Many thanks Bjorn Lets say for example we are allowing users to rate songs and artists I would like to be able to get a single ordered list of recommendations for a user that includes both songs and artists based on the likelihood that the user will like it regardless of its class I would be willing to build the list myself by calling recommendedsongs and recommendedartists and merging the lists if I could get the associated scores so I would know how to relate the top songs to the top artists My User model recommends places but it already has an Active Record association for recommendedplaces so I am forced to access Recommendable recommendations via ruby usersend recommendedfor Place which is a bit clunky To avoid this and other potential namespace collisions for existing model methods I suggest supporting an optional recommendable prefix on Recommendable finder methods eg ruby userrecommendablerecommendedplaces Would be easy to implement wed just need to add an optional check in the method regexes for the namespace Existing finder methods would still work youd only need to prepend recommendable if you had a namespace issue I recommend optimizing operations using redis internal functions sinterstore lua scripting Hey guys I wasnt sure if there is need in unit tests because CalculationsTest covers all the functionality Please let me know if you have any feedback According to your docs and example page this should work irb irbmain userrecommendedthingwherepublished true NoMethodError undefined method where for Array x d Likes recommendations queries all work but scoping the recommendedthing balks out on the call due to an array being returned instead How can I debug I came across this repo lately from the very talented mattt and thought it would be a useful addition to recommendable From his page Sorting by positive vs negative alone gives undue advantage to items with fewer ratings whereas sorting by total number of positive ratings makes it difficult for new items to break into the top Fortunately there is a correct solution use the lower bound of Wilson score confidence interval for a Bernoulli parameter Along with more info and a link to the math behind it None When I dislike a course it recommends it to similar users ruby class user ActiveRecordBase hasmany courses recommends course end user likeCoursefind user likeCoursefind user likeCoursefind user dislikeCoursefind user likeCoursefind user likeCoursefind user recommendedcoursesmap c cid user likedcourseids user likedcourseids user dislikedcourseids 