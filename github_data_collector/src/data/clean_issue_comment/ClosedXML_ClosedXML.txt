 Read and complete the full issue template Do you want to request a feature or report a bug x Bug Feature Version of ClosedXML What is the current behavior When I open an existing Excel file with an image in the header then add another image to the workbook before saving the saved Excel file will be corrupted and wont open in Excel anymore What is the expected behavior or new feature The produced Excel file should not be corrupt Did this work in previous versions of our tool Which versions I have not used previous versions Reproducibility Code to reproduce problem c public void Main var wb new XLWorkbookaxlsx wbWorksheet AddPictureClipboard png wbSaveAsbxlsx ProcessStartbxlsx Both axlsx and Clipboard png are attached x I attached a sample spreadsheet You can drag files on to this issue axlsx Clipboard Read and complete the full issue template Do you want to request a feature or report a bug x Bug Feature If you are logging a possible bug or feature request please test with the latest development build first Version of ClosedXML Starting from What is the current behavior When pre created pivot table sources the file becomes corrupt and excel removes the pivot tables completely This still works in v When opening the file there is an error Removed Feature PivotTable report from xlpivotCachepivotCacheDefinition xml part PivotTable cache Reproducibility This is an important section Read it carefully Failure to do so will cause a RTFM comment Code to reproduce problem I am using an excel sheet with pivot tables referencing sheets with tables using ClosedXML I want to populate the source tables with data and update the pivot The code is very simple csharp using var workbook new XLWorkbookfileTemplate XLEventTrackingEnabled var metricsSheet workbookWorksheetMetrics var metricTable metricsSheetTablesFirst metricTableReplaceDatametricsArray metricTableAppendDatametricsArray metricsSheetColumnsAdjustToContents var metricsRange metricTableAsRange var outputsSheet workbookWorksheetOutput var outputTable outputsSheetTablesFirst outputTableAppendDataassignments outputsSheetColumnsAdjustToContents foreach var ws in workbookWorksheets if wsPivotTables null wsPivotTablesAny continue var pivot wsPivotTablesFirst pivotSourceRange metricsRange Stream fs new MemoryStream workbookSaveAsfs fsPosition return await TaskFromResultfs autopivotpreopenxlsx x I attached a sample spreadsheet You can drag files on to this issue Read and complete the full issue template Do you want to request a feature or report a bug x Bug If you are logging a possible bug or feature request please test with the latest development build first Version of ClosedXML What is the current behavior Working but excel is generating for less than records What is the expected behavior or new feature Excel should create for more than records which are in data table Did this work in previous versions of our tool Which versions No It seems in all version its not working Reproducibility This is an important section Read it carefully Failure to do so will cause a RTFM comment Without a code sample it is unlikely that your issue will get attention Dont be lazy Do the effort and assist the developers to reproduce your problem Code samples should be minimal complete and verifiable Sample spreadsheets should be attached whenever applicable Remove sensitive information Code to reproduce problem Vbnet Protected Overrides Sub OnCreate Protected workbook As Object Protected ws As Object Dim iCurrRow As Integer Dim iCurrRow As Integer Protected sTEMPLATEFILE As String CtplTSRxlsx Dim dtTests As New DataDataTable If sFormatEqualsxlsx Then Using fs New FileStreampPageServerMapPathsTEMPLATEFILE FileModeOpen FileAccessRead fsCopyToMS End Using MSSeek SeekOriginBegin Using dSpreadsheet SpreadsheetDocumentOpenMS True For Each wsPars As Object In dSpreadsheetWorkbookPartWorksheetParts For Each VmlDrawingPart In wsParsVmlDrawingParts Dim Text As String Using tr New StreamReaderVmlDrawingPartGetStreamFileModeOpen Text trReadToEnd End Using Using tw New StreamWriterVmlDrawingPartGetStream twWriteTextReplacebr Replacebr End Using Next Next End Using MSSeek SeekOriginBegin workbook New XLWorkbookMS XLEventTrackingDisabled If sTEMPLATEFILEEqualstplTSRxlsm Then ws workbookWorksheetTest Status End If Count of dtTestsRows For Each row As DataDataRow In dtTestsRows iCurrRow wsRowiCurrRowInsertRowsBelowiCurrRow End If End If End Sub I attached tplTSRxlsx a sample spreadsheet You can drag files on to this issue Do you want to request a feature or report a bug x Bug Feature Version of ClosedXML What is the current behavior If a worksheet has a print area and the sheet name contains certain symbols Excel complains to the file saved by ClosedXML What is the expected behavior or new feature Create a file that Excel wont complain Did this work in previous versions of our tool Which versions Yes Reproducibility Start Excel and create new workbook Set print area and rename the sheet sheet This problem occurs when the sheet name contains the following symbols Save the workbook testxlsx Open and save the file by ClosedXML Open the file by Excel Excel will say We found a problem with some content in testxlsx if select Yes Removed Records Named range from xlworkbookxml part Workbook Code to reproduce problem c public void Main var workbook new XLWorkbook xlsx workbookSave testxlsx Do you want to request a feature or report a bug x Bug Feature Version of ClosedXML Tested both and beta What is the current behavior I have an XLSX file attached as testxlsx that has a cell with mixed font inside it cell A As you can see the cell has some words in different font stylescolors If I open and save this file using ClosedXML even without doing anything else the mixed formatting is lost As you can see weirdly the entire cell seems to acquire the style of the first piece of text bold font in this case What is the expected behavior or new feature Cell styles should not be modified especially since I didnt even do any modifications to the document just opened and closed it Reproducibility I just opened and then saved the document with ClosedXML like this c static void Mainstring args using var ms new MemoryStreamFileReadAllBytestestxlsx using var workbook new XLWorkbookms workbookSaveAstestoutxlsx Further info By having a look manually at the files inside the XLSX archive before and after saving it with ClosedXML it seems it is merging various r elements each one with its own style into a single element without the style as shown here x I attached a sample spreadsheet Read and complete the full issue template Do you want to request a feature or report a bug x Bug Feature If you are logging a possible bug or feature request please test with the latest development build first Version of ClosedXML eg beta What is the current behavior worksheetCellsrangeName fails with Sequence contains no elements when sheetname contains comma char What is the expected behavior or new feature No fail Did this work in previous versions of our tool Which versions Not sure Reproducibility This is an important section Read it carefully Failure to do so will cause a RTFM comment Without a code sample it is unlikely that your issue will get attention Dont be lazy Do the effort and assist the developers to reproduce your problem Code samples should be minimal complete and verifiable Sample spreadsheets should be attached whenever applicable Remove sensitive information Code to reproduce problem c summary Scans the compare data summary param namefileNameName of the fileparam returnsreturns private Dictionarystring RangesData ScanCompareDatastring fileName Dictionarystring RangesData res new Dictionarystring RangesData using Stream fs new FileStreamfileName FileModeOpen XLWorkbook b new XLWorkbookfs foreach IXLWorksheet worksheet in bWorksheets RangesData data new RangesData resAddworksheetName data foreach IXLNamedRange range in worksheetNamedRanges try var cells worksheetCellsrangeName dataAddrangeName new RangeData Cells cells RefersTo rangeRefersTo catch Exception e LoggerLogMessageworksheet rangeName eMessagetrue return res I attached a sample spreadsheet You can drag files on to this issue Read and complete the full issue template Do you want to request a feature or report a bug Bug x Feature If you are logging a possible bug or feature request please test with the latest development build first Version of ClosedXML v What is the current behavior If an Excel workbook uses custom VBA functions ClosedXML will fail to parse the formulas because it cannot interpret the custom function What is the expected behavior or new feature I was wondering if you guys ever considered supporting custom functions At very high level it could be achieved by making certain classes public or creating new interfaces CalcEngine CalcEngineFunction Expression etc with added validations and logic I want to discuss this before spending time developing it Added check in PopulateAutoFilter to avoid invalid range and throwing ArgumentOutOfRangeException Read and complete the full issue template Do you want to request a feature or report a bug x Bug Feature If you are logging a possible bug or feature request please test with the latest development build first Version of ClosedXML v What is the current behavior When saving an Excel file with sorted AutoFilter columns a SystemArgumentOutOfRangeException is thrown I have tracked down the bug to ClosedXML Excel XLWorkbookSavecs var sortState new SortState Reference filterRangeRangefilterRangeFirstCellCellBelow filterRangeLastCellRangeAddress ToString This fails if filterRange only contains one row because CellBelow will place you outside of the range What is the expected behavior or new feature The document should be saved without throwing an exception Did this work in previous versions of our tool Which versions Unknown Reproducibility This is an important section Read it carefully Failure to do so will cause a RTFM comment Without a code sample it is unlikely that your issue will get attention Dont be lazy Do the effort and assist the developers to reproduce your problem Code samples should be minimal complete and verifiable Sample spreadsheets should be attached whenever applicable Remove sensitive information Code to reproduce problem static void Mainstring args using var wb new XLWorkbookC temp FilterTestxlsx wbSave x I attached a sample spreadsheet You can drag files on to this issue FilterTestxlsx x Bug Feature Version of ClosedXML A formula like A A in an Excel cell results in an exception ClosedXMLExcelCalcEngineExpressionParseException Identifier expected at ClosedXMLExcelCalcEngineCalcEngineThrowString msg Im using a code similar to the following where rawData is of type byte containing the Excel file C using var s new MemoryStreamrawData XLWorkbook wb new XLWorkbooks var sheet wbWorksheetsheetName var table sheetRangeUsedXLCellsUsedOptionsAllContentsAsTable var dt tableAsNativeDataTable foreach DataRow row in dtRows ConsoleWriteLinestringJoin rowItemArray As far as I understand the percentage character can be used in normal cells so it should also work within formulars shouldnt it Attached file can be used to reproduce the behaviour formularpercentcrashxlsx 