Apologies In my PR I forgot to add code to actually remember the last valid container when the flag is set UIApplication sharedApplication openURL has been deprecated by Apple since iOS and it is completely removed in iOS All instances of this method will cause a crash at runtime The methods need to be updated to UIApplication sharedApplication openURLoptionscompletionHandler For example assume text is abcd and proper truncation after resizing is abc NIAttributedLabel shows a Recently I was reading up on better correct way of swizzling a method and found its better to use methodsetImplementation instead of methodexchangeImplementations More details on this can be found here It is getting used at following places NIRuntimeClassModificationsm NIRuntimeClassModificationsm This behavior assuming that this change is all thats required would more closely match the behavior described in Apples UILabel documentation In order for the highlight to be drawn the highlightedTextColor property must contain a nonnil value NSUnderlineStyle is defined as an NSInteger The code was using kCFNumberSInt Type in CFNumberGetValue which worked fine on bit devices but on bit devices would be trying to put bits into a bit integer On the iPhone simulator this causes a crash On a device I believe this would silently overwrite the next bits in memory Why NISwitchFormElement id didChangeTarget have assign property attribute instead of weak This was already done for NIOperations and with good reason The way to test this change is by using large images in a table view with lots of rows and scroll up and down to force two equivalent requests to run in the same cell for the same image URL Expected Things load Actual Occasionally a cell will remain blank and the reason is AFNetworking cancels the duplicate request but instead of ignoring that cancelation like we do for NIOperations we wipe our operation var Which eventually leads to ignoring the successful completion of the surviving image request when we should in fact proceed and load the image as normal