Fixes Support for build phases was added with It should be nice to have this for Build Rules as well img width altScreen Shot at PM src It suggests that I use the project option and then says that option is unknown plain xcodeproj configdump No Xcode project document found in the current working directory Please specify which to use with the project option xcodeproj configdump project Foobarxcodeproj Unknown option project Did you mean verbose TESTS TO BE ADDED Sample project RNCAsyncStorage Opening it with Xcodeproj and saving it without any changes results to an error RuntimeError Xcodeproj Consistency issue no parent for object RNCAsyncStorageh HeadersBuildPhase CopyFilesBuildPhase from gemsxcodeproj libxcodeprojprojectobjecthelpersgroupablehelperrb in parent from gemsxcodeproj libxcodeprojprojectobjectbuildfilerb in asciiplistannotation from gemsxcodeproj libxcodeprojprojectrb in block in toasciiplist from gemsxcodeproj libxcodeprojprojectrb in each from gemsxcodeproj libxcodeprojprojectrb in toasciiplist from gemsxcodeproj libxcodeprojprojectrb in block in save from gemsatomos libatomosrb in block in atomicwrite from libruby tempfilerb in open from gemsatomos libatomosrb in atomicwrite from gemsxcodeproj libxcodeprojprojectrb in save Still the project itself is a valid Xcode project that works fine Looks like the problem is related to sources that arent added to any PBXGroup Maybe we can add some fallback to asciiplistannotation since this annotation is just a comment Having no parent group doesnt seem to be illegal from Xcodes point of view We run into a race conditionUUID conflict that seems to be related to changes made in Our sizeable project uses Cocoapods and when testing with beta we run into an issue where a specific number of files included in the Pods project resulted in an apparent UUID conflict which results in a corrupted Podsxcodeproj generated The issue seems to reproduce only when Pods project getting constructed in the memory has a specific number of files meaning adding or removing a file fixes the issue Before saving the Pods project we add a new file ref in postinstall hook commonref projectnewfileSomecommonxcconfig After the project has been saved the newly added file reference gets assigned a already existing UUID EB E and replaces rootObject With this the project gets corrupted as root object no longer points to an expected data type PBXFileReference instead of PBXProject xcodeproj show PodsPodsxcodeproj Traceback most recent call last from Usersjsuligarvmgemsruby binxcodeproj in main from Usersjsuligarvmgemsruby binxcodeproj in load from Usersjsuligarvmgemsruby gemsxcodeproj binxcodeproj in top required from Usersjsuligarvmgemsruby gemsclaide libclaidecommandrb in run from Usersjsuligarvmgemsruby gemsxcodeproj libxcodeprojcommandshowrb in run from Usersjsuligarvmgemsruby gemsxcodeproj libxcodeprojcommandrb in xcodeproj from Usersjsuligarvmgemsruby gemsxcodeproj libxcodeprojprojectrb in open Usersjsuligarvmgemsruby gemsxcodeproj libxcodeprojprojectrb in initializefromfile undefined method productrefgroup for XcodeprojProjectObjectPBXFileReference x fb bee e NoMethodError Im still trying to find a selfcontained project that reproduces the issue but its been quite challenging Saving the project before adding the new reference seems to work around the issue but causes us to doublesave the project which is wasteful Hi Ive discovered that getting schemes for modern projects fails if scheme name differs from project name due to wrong paths Eg I have a xcscheme file located at PodsxcodeprojxcuserdataUSERNAMExcuserdatadxcschemesFirebasexcscheme where USERNAME is a username of my user However current Xcodeproj looks for xcscheme files only at projectpathxcshareddataxcschemesxcscheme To fix that Ive added there This change should support both old and new paths Ive discovered that getting schemes for a project doesnt consider nonshared schemes To fix that Ive added there This change should support both shared and nonshared schemes Hi So I worked on a script to automatically generate a subproject and add it to an existing project and set up target dependency link binary and embedded frameworks However I noticed after running the script the Xcode crashes when adding a new file to the project When I tried to reproduce it in a simpler situation I noticed that its now crashing by adding any new phase under Build phase Following is the code sample for reproducing it and I have attached a zip file that has the script and sample code in it For ease of use I added the lines to clear and recopy sample project By spending some time I found the root cause of it is this line thats using the same product group as the main project instead of creating a new one which seems to be what Xcode does I tried the new theory with addsubprojectreference method and that fixes the issue with Xcode crash I was wondering if theres any specific reason the subproject is getting added to main projects product list instead of creating a new one Or it might be something Im doing wrong in code below for adding a subproject Thanks requireXcodeproj requirepathname def addsubprojectreferencemainproject subproject We call into the private function FileReferencesFactorynewfilereference instead of FileReferencesFactorynewreference because it delegates into FileReferencesFactorynewsubproject which has the extra behavior of opening the Project which is an expensive operation for large projects ref XcodeprojProjectFileReferencesFactorysendnewfilereference mainprojectmaingroup subprojectpath builtproducts basename Pathnamesubprojectpathbasename subprojectname Filebasenamebasename refname basenametos refincludeinindex nil productgroupref mainprojectnewXcodeprojProjectPBXGroup productgrouprefname Products subprojectproductsgroupfileseach do productreference containerproxy mainprojectnewXcodeprojProjectPBXContainerItemProxy containerproxycontainerportal refuuid containerproxyproxytype XcodeprojConstantsPROXYTYPES reference containerproxyremoteglobalidstring productreferenceuuid containerproxyremoteinfo subprojectnametos referenceproxy mainprojectnewXcodeprojProjectPBXReferenceProxy extension Fileextnameproductreferencepath referenceproxyfiletype XcodeprojConstantsFILETYPESBYEXTENSION extension referenceproxypath productreferencepath referenceproxyremoteref containerproxy referenceproxysourcetree BUILTPRODUCTSDIR productgroupref referenceproxy end attribute XcodeprojProjectPBXProjectreferencesbykeysattributesfind attrb attrbname projectreferences projectreference XcodeprojProjectObjectDictionarynewattribute productgroupref projectreference projectref ref projectreference productgroup productgroupref mainprojectrootobjectprojectreferences projectreference ref end requirefileutils FileUtilsrmrfSubproj FileUtilscprMainproj copy subprojtargetname Subproj worksacepath Mainprojxcworkspace workspace XcodeprojWorkspacenewfromxcworkspaceworksacepath mainproj XcodeprojProjectopenMainprojMainprojxcodeproj subproj XcodeprojProjectnewsubprojtargetnamesubprojtargetnamexcodeproj subprojnewtargetframework subprojtargetname ios nil swift subprojmaingroupnewgroupsubprojtargetname workspacerefsubproj XcodeprojWorkspaceFileReferencenewSubprojSubprojxcodeproj workspace workspacerefsubproj workspacesaveasworksacepath subprojsave mainprojrefsubproj addsubprojectreferencemainproj subproj mainprojrefsubproj XcodeprojProjectFileReferencesFactorynewreferencemainprojmaingroup subprojpath builtproducts mainprojtargets adddependencysubprojtargets mainprojtargets frameworksbuildphaseaddfilereference mainprojrefsubprojfilereferenceproxiesfirst true mainprojsave Archivezip Im not fully familiar with Ruby apart from a PodfilePodspec so advices are welcome