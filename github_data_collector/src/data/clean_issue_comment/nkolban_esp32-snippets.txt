I was trying to form a BLE connection between BLEUART server and BLECLIENT client After seeing haveServiceUUID fail in BLECLIENT I found this related issue that fixed the connection To summarize the changes Shorten the BLE Device name to or less characters In BLEUART change Start advertising pServergetAdvertisingstart to Start advertising BLEAdvertising pAdvertising pServergetAdvertising pAdvertisingaddServiceUUIDpServicegetUUID pAdvertisingstart With later experiments I found that it was not necessary to shorten the device Only the start of advertising needed to be changed Strangely the IOS App BLE Scanner worked without the advertising modification Please update BELUARTino in the repository Hello can you tell me some steps or if you can the library where BLE will only scan for devices not connect nor create no server or client I want it because full library is very heavy for only scanning purpouse Thanks best regards Using ESP BLE Arduino in Platformio IDE I have tried several power levels using this command immediately after BLEDeviceinit BLEDevicesetPowerESPPWRLVLP The advertised TxPowerLevel is always in the iPhone BLE Scanner App and the RSSI values dont change Seems like an old issue that was claimed to have been fixed Edit Fixed by adding all this BLEDevicesetPowerESPPWRLVLP Changing had no affect Client reports power level espbletxpowersetESPBLEPWRTYPEDEFAULT ESPPWRLVLP espbletxpowersetESPBLEPWRTYPECONNHDL ESPPWRLVLP espbletxpowersetESPBLEPWRTYPECONNHDL ESPPWRLVLP espbletxpowersetESPBLEPWRTYPECONNHDL ESPPWRLVLP espbletxpowersetESPBLEPWRTYPECONNHDL ESPPWRLVLP espbletxpowersetESPBLEPWRTYPECONNHDL ESPPWRLVLP espbletxpowersetESPBLEPWRTYPECONNHDL ESPPWRLVLP espbletxpowersetESPBLEPWRTYPECONNHDL ESPPWRLVLP espbletxpowersetESPBLEPWRTYPECONNHDL ESPPWRLVLP espbletxpowersetESPBLEPWRTYPEADV ESPPWRLVLP The advertised TxPower Level is now and getting about dB more power than default Perhaps BLEDevicesetPower should call the other espbletxpowerset statements There is a memory leak in the u g esp halc when using I C The driver uses the SP native hw through i ccmdlinkcreate which in the i cc osdriver allocates memory for each link in a linked list which is then freed by i ccmdlinkdelete Sometimes the linked list seems to remain allocated or is lost Im not sure if this due to faulty error handling in the osdriver or something missing in the hal but wanted to add this note here for the benefit of other users My solution has been to rewrite the i cc osdriver to use static allocated memory for the cmdlink see i cstaticzip I am seeking help with a program to make a high frequency measurement and then report it out by a BLE connection My current problem is that measurements are intermittently delayed The measurement code is running on core at kHz the duration of each measurement is msec with a MHz esp CPU clock frequency The BLEserver runs on core advertising connecting and disconnecting correctly It is a direct copy of the example BLEserver in Nicks excellent library The timing of core measurements is intermittently delayed by up to msec every or so measurements as measured by a scope attached to a GPIO port The delays do not occur when the core task is an empty while true loop no BLE comms I had wrongly assumed that the core BLEcomms task would not affect the measurement task on core What interrupts on core might cause such a delay Note core WDT is disabled I would appreciate any ideas of how I might debug this and even better how I might improve the code A few details follow below Many thanks Rob The tasks are created as follows There are only two disableCore WDT source see epic thread create a task that will be executed in the measureVibration function with priority and executed on core xTaskCreatePinnedToCore measureVibration Task function vibeTask name of task Stack size of task NULL parameter of the task priority of the task vibeTask Task handle to keep track of created task pin task to core create a task that will be executed in the BLEComms function with priority and executed on core xTaskCreatePinnedToCore BLEComms Task function commsTask name of task Stack size of task NULL parameter of the task priority of the task commsTask Task handle to keep track of created task pin task to core A timer is setup to create kHz ticks communicated to the measurement task by semaphore onTimer void IRAMATTR onTimer Increment the counter and set the time of ISR portENTERCRITICALISR timerMux isrCounter lastIsrAt millis portEXITCRITICALISR timerMux Give a semaphore that we can check in the loop xSemaphoreGiveFromISRtimerSemaphore NULL It is safe to use digitalReadWrite here if you want to toggle an output initTime void initTimeuint t period check type for period Create semaphore to inform us when the timer has fired timerSemaphore xSemaphoreCreateBinary Use st timer of counted from zero Set divider for prescaler see ESP Technical Reference Manual for more info timer timerBegin true Attach onTimer function to our timer timerAttachInterrupttimer onTimer true Set alarm to call onTimer function every second value in microseconds Repeat the alarm third parameter timerAlarmWritetimer period true Start an alarm timerAlarmEnabletimer Hello although this repository seems to be out of service I post my question here hoping that someone can point me to the right approach I would like to setup something similar to SPP in classic Bluetooth but now with BLE A PC or smartphone app will connect to the ESP via BLE and all data shall be tunneled to and from a UART Is there somewhere a useful example to start with Is it possible to use the cpp classes without Arduino Where is the latest version of this repository I see that chegewara also maintained a copy of this one Any hint would be helpful Kind regards Hello I wanted to change scan time property from Second to Millisecond There is scanTime in BLEScan example File in Arduino library int scanTime In seconds BLEScanResults foundDevices pBLEScanstartscanTime false It is used there First It accepted Integer but I changed the these two Function in h library Files CPP file to Float bool startfloat duration void scanCompleteCBBLEScanResults bool iscontinue false BLEScanResults startfloat duration bool iscontinue false then change int to float in the main arduino file float scanTime In seconds means ms File is uploaded in Esp with no error then Receive first BLE signal but is not received more data is there anybody to know what do i do for this changing Is there any way to sent a string like to bleserver I use the sample client and server code Using ESPWROOM U running a simple code to simulate init and deinit of a BLEDevice Compile settings Board ESP Dev Module Upload Speed Flash Frequency MHz Flash Mode QIO Partition Scheme Default Core Debug Level Verbose PSRAM Disabled include BLEDeviceh void setup put your setup code here to run once Serialbegin BLEDeviceinittesteaqi void loop SerialprintlnESPgetFreeHeap if BLEDevicegetInitialized true SerialprintlnBLEOFF BLEDevicedeinitfalse else SerialprintlnNEWINIT BLEDeviceinittesteasd Here are the logs rst x POWERONRESETboot x SPIFASTFLASHBOOT configsip SPIWP xee clkdrv x qdrv x ddrv x cs drv x hddrv x wpdrv x modeDIO clock div load x fff len load x fff clen load x len load x len entry x a BLEOFF NEWINIT BLEOFF NEWINIT BLEOFF NEWINIT BLEOFF NEWINIT BLEOFF NEWINIT BLEOFF NEWINIT BLEOFF NEWINIT BLEOFF NEWINIT BLEOFF NEWINIT BLEOFF NEWINIT BLEOFF NEWINIT BLEOFF NEWINIT BLEOFF NEWINIT BLEOFF NEWINIT BLEOFF NEWINIT BLEOFF NEWINIT BLEOFF NEWINIT BLEOFF NEWINIT BLEOFF NEWINIT BLEOFF NEWINIT BLEOFF NEWINIT BLEOFF NEWINIT BLEOFF NEWINIT BLEOFF NEWINIT BLEOFF NEWINIT BLEOFF NEWINIT BLEOFF NEWINIT BLEOFF NEWINIT BLEOFF NEWINIT BLEOFF NEWINIT BLEOFF NEWINIT BLEOFF NEWINIT BLEOFF NEWINIT BLEOFF NEWINIT BLEOFF NEWINIT BLEOFF NEWINIT BLEOFF NEWINIT BLEOFF NEWINIT BLEOFF NEWINIT BLEOFF NEWINIT BLEOFF NEWINIT Guru Meditation Error Core paniced StoreProhibited Exception was unhandled Core register dump PC x c c PS x b A x ab A x ffd d A x A x A x c A x A x c A x A x dc e A x ffd cd A x ffe e A x A x A x A x A x SAR x e EXCCAUSE x d EXCVADDR x LBEG x c c LEND x c LCOUNT x Backtrace x c c x ffd d x ab f x ffd d x b x ffd d x f x ffd d x f b x ffd da x da x ffd dd Rebooting The backtrace results in this x ab f btaarinit at UsersficetoDesktopESP ESP espidfpubliccomponentsbtbluedroidbtaarbtaarc line Decoding stack results x b btasysinit at UsersficetoDesktopESP ESP espidfpubliccomponentsbtbluedroidbtasysbtasysmainc line x f btutaskstartup at UsersficetoDesktopESP ESP espidfpubliccomponentsbtbluedroidstackbtubtutaskc line x f b btutaskthreadhandler at UsersficetoDesktopESP ESP espidfpubliccomponentsbtbluedroidstackbtubtutaskc line x da vPortTaskWrapper at UsersficetoDesktopESP ESP espidfpubliccomponentsfreertosportc line x ab f btaarinit at UsersficetoDesktopESP ESP espidfpubliccomponentsbtbluedroidbtaarbtaarc line x b btasysinit at UsersficetoDesktopESP ESP espidfpubliccomponentsbtbluedroidbtasysbtasysmainc line x f btutaskstartup at UsersficetoDesktopESP ESP espidfpubliccomponentsbtbluedroidstackbtubtutaskc line x f b btutaskthreadhandler at UsersficetoDesktopESP ESP espidfpubliccomponentsbtbluedroidstackbtubtutaskc line x da vPortTaskWrapper at UsersficetoDesktopESP ESP espidfpubliccomponentsfreertosportc line Every single iteration of the initdeinit loop is leaking k and I couldnt find any other way to fix this My initial problem is based on this memory leak I think you could help me with this Thanks in advance Hello When I am scanningconnecting with my BLE device and a Ticker function or MQTT message comes into play at the same time sometimes my ESP never goes back to the arduino loop It remains only executing the attached Ticker functions but never back to my loop until my watchdog a function attached to another Ticker is triggered rebooting the ESP Could it be a problem of a missing return at the end of the attached Ticker function even if the function return is void Or maybe a threadsemaphorepriority task issue What are your suggestions What can I study in order to solve this issue Many thanks 