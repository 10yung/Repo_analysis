Hi Im using dockercompose for my kafkasecuritymanager I wanted to set the logLevel to ERROR but I couldnt Is there any way to customize that This is file jaasconf Client comsunsecurityauthmoduleKrb LoginModule required useKeyTabtrue storeKeytrue keyTabetckafkasecretszkclient keytab principalzkclientexamplecomEXAMPLECOM KafkaClient orgapachekafkacommonsecurityplainPlainLoginModule required usernameadmin passwordadminsecret And I get this error main INFO orgapachezookeeperZooKeeper Initiating client connection connectString sessionTimeout watcherioconfluentadminutilsZookeeperConnectionWatcher dae mainSendThreadkafka WARN orgapachezookeeperSaslClientCallbackHandler Could not login the Client is being asked for a password but the ZooKeeper Client code does not currently support obtaining a password from the user Make sure that the Client is configured to use a ticket cache using the JAAS configuration setting useTicketCachetrue and restart the Client If you still get this message after that the TGT in the ticket cache has expired and must be manually refreshed To do so first determine if you are using a password or a keytab If the former run kinit in a Unix shell in the environment of the user who is running this Zookeeper Client using the command kinit princ where princ is the name of the Clients Kerberos principal If the latter do kinit k t keytab princ where princ is the name of the Kerberos principal and keytab is the location of the keytab file After manually refreshing your cache restart this Client If you continue to see this message after manually refreshing your cache ensure that your KDC hosts clock is in sync with this hosts clock mainSendThreadkafka WARN orgapachezookeeperClientCnxn SASL configuration failed javaxsecurityauthloginLoginException No password provided Will continue connection to Zookeeper server without SASL authentication if Zookeeper server allows it Instead of using a Bitbucket user license with simple auth repositories can use ssh access keys Be able to select a storage on gcp as aws Incoming Webhooks are a simple way to post messages from apps into Slack These integrations lack newer features and they will be deprecated and possibly removed in the future In the current implementation following properties are defined in the configuration file but username icon and channel are ignored webhook username icon channel Recommend and latest API is following Currently REST API is open it would be nice to have some basic authentication If KSM fails to connect to Slack the KSM app itself terminates seemingly due to a lack of exception handling around sending Slack notifications Please can some exception handling be added ERROR unexpected exception comgithubsimplestephksmKafkaSecurityManager javautilconcurrentExecutionException javanetSocketTimeoutException connect timed out I am running Kafka in a Kubernetes environment I have implemented sasl callbackhandler for Kafka to login and verify users via Keycloak Sadly I cant add the login handler to the ksm container since there is no way to add the kafka property sasllogincallbackhandlerclass Moreover I would have to extend the java classpath to add my jar file containing the callbackhandlers which is also not possible at the moment as far as I know To enable these features would be awesome Would be great to have a KSM master and a standby for HA mode PR welcome Would probably need to use this Honestly a fun feature to contribute if youre game