Hello I am confused about how to support array attributes Lets say I have simple urls array field on users like so createtable users force cascade do t ttext urls default array true end From searching the issues it appears I need to define a buildurl field on the User model Is that correct What else would I need to do Or is there a simple example somewhere for this As Rails is moving towards Webpacker it would be really nice if the javascript for cocoon would be available through Yarn Any plans for this Thanks Regex makers moved to their own functions Isolated addfields responsibilities wrapping assoc id to another function Cut extraneous passing of parameters in getInsertionNodeElem as we already pass this nathanvda Im experimenting with using cocoon in a context where some of the models involved are ActiveModels rather than ActiveRecordBase For my work with this gem It actually works out pretty well most parts of cocoon dont assume that the collections involved actually have AR reflection info for instance Perhaps some work has gone in this direction before There are just a couple places where cocoon is assuming methods exist where Id rather it didnt This is one of them which seems pretty straightforward to do something about it was accepting a nil return value from reflectonassociation anyway and doing the right thing for my use case in that situation so just have it not try to call the method if it doesnt exist and just go with the nil value Seems quite clean and neat What do you think This is a feature that Im using in several projects Besides the documentation included in this pull request I prepared a small application that shows how to use it and a video of the applicattion running At the company I work for weve been using Cocoon for more than years now Thanks nathanvda and everyone that contributed We recently migrated to Rails and stopped using the Asset Pipeline to compile our JavaScript were using the Rails Webpacker gem This means we cant require JavaScript like this anymore js require cocoon Ive read issues and and understand if the author is not interested in maintaining another package in a different registry NPM What I propose in this PR is a compromise solution This PR adds a packagejson file with the property private set to true This lets users that visit this repository know that the JavaScript is not officially published in the NPM registry but at the same time they can install Cocoon directly from GitHub bash Using the NPM client npm install githubnathanvdacocoon save Using the Yarn client yarn add githubnathanvdacocoon They can then import the code like this es import cocoon The packagejson includes a version because it is a required property but even if this property is not updated users can always install a specific commit similarly to what we do in a Gemfile bash npm install githubnathanvdacocoonc ba Side note If in the future nathanvda finds it valuable to publish the package in the NPM registry he would simply have to remove the private property update the version and run npm publish Both names cocoon and cocoonrails are taken but the author can use a scoped name Assuming the NPM username nathanvda the name property could be nathanvdacocoon HI Rails give ability to use webpacker gem to manage javascript libraries But this management is completely out of Rails so it cannot see gem cocoon Can You please add packagejson file and build an NPM package of cocoon Related Issues in other project and Uses syntax instead documentonready which removes deprecation warning as of jQuery and fixes the script for jQuery where the method is removed See 