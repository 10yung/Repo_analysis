Currently SIGHUP only reloads the routes file but not the whole configuration We should consider a way to reload the whole configuration without having to disconnect clients states that previd only works for response hold mode GripHold The hold mode either response or stream GripChannel The previd parameter is OPTIONAL and only applies to the response mode But then shows a code example using previd with stream hold mode Reliable HTTP streaming When creating a stream hold any channel to be subscribed must include a previd value A next link must also be provided HTTP OK ContentType textplain GripHold stream GripChannel fruit previd GripLink fruitafter relnext Overall it seems like the GRIP protocol page is obsolete eg no trace of GripLink in it either That should be useful on production env Or can you support syslog also Pushpin supports https for the proxy process however there is no option on pushinhandler When push data Its only supporting http Can you support https Or is there any secure socket that I can use after fresh installation and test i try to send msg to channel from php here is my code pub new GripPubControlarray controluri pubpublishhttpstreamws hello there n but i got this error even open port in firewall Failed to publish Failed to connect to localhost port Connection refused whats wrong Hi This is an amazing project thanks for building it I was wondering if there was any intention of supporting the gRPC protocol going forward or if there is already a way for pushpin to reverse proxy to a gRPC server It would be good to have a kubernetes helm chart for easy deployment inside Kubernetes With HTTP streaming its possible to set a next link Next links are followed without passing along extra headers such as the original client request headers This means authenticating a request of a next link requires authentication material to be included in the link itself for example by include an auth token as a query parameter It might be nice if there were a way for requests of next links to use headers for auth Note that next links are intended to be shared by multiple clients to enable request collapsing so a headersbased solution should have a way to provide special shared creds generated by the origin server rather than only simply passing the original client request headers which would likely include clientspecific creds Would you like to wrap any pointer data members Update candidate with the template class stduniqueptr Description for the usage of smart pointers It should be possible to enable a reliable mode for WebSocket connections similar to what can be done with HTTP connections The server should be able to supply a prev ID when subscriptions are assigned to connections and Pushpin should be able to query for missed messages perchannel by last known ID The feature should work for both WebSocket targets and HTTP targets WebSocketoverHTTP The big question is what protocol to use for the recovery requests For WebSocket targets it could be done using WebSocket messages however there may be value in having it work over HTTP For HTTP targets it could be done using WebSocket messages encapsulated in WebSocketoverHTTP protocol but it would be nice if requests could use GET and reuse existing constructs like GripLink GripLast etc Note that if the protocol will use WebSocket messages well likely need a way for Pushpin to send control messages to the backend which is not yet possible