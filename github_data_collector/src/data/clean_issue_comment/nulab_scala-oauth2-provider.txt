 Hey First of all thanks for that amazing library In our current project we have the problem that we have to extendenhance the AuthInfo with additional information Currently it seems not possible to do that As an example We have the case that we want to get the audience query parameter from the AuthorizationRequest and make it accessible within the createAccessTokenauthInfo method so we can include it in our JWT access token The problem here is that the createAccessToken method only takes the AuthInfo input parameter which is a case class and built directly within the different GrantHandlers already So there seems to be no way on how to put in additional information I made two proposals in two different branches that could maybe solve the issue This proposal converts the AuthInfo from a case class to a trait and provides a DefaultAuthInfo equal to the currently existing AuthInfo to not break the API Diff This proposal also converts the AuthInfo from a case class to a trait but additionaly makes the AuthInfo typed on the DataHandler This would make usually probably easier but comes with the disadvantage that it breaks the API Diff Please take a look at them and let me know your opinion so that I could potentially open up a PR In case we are just overseeing something on how we could already achieve that with the current implementation please let me know as well Thanks Hi smile Is there already any kind of support for WebSocket based actions I had made something like this to make it work here scala trait OAuth AsyncProvider extends OAuth AsyncProvider def authorized A U dataHandler DataHandler U implicit request RequestHeader Future Either OAuthError AuthInfo U ProtectedResourcehandleRequestrequest dataHandler Controller scala def liveMatch WebSocketasync JsValue implicit request authorizedMyDataHandlerflatMap match case RightauthInfo GameStream join authInfouser case Lefterror Just consume and ignore the input val in Iterateeforeach JsValue Send the error message and close val out Enumerator JsValue JsObjectSeqerror JsStringerrordescription andThenEnumeratorenumInputInputEOF Futuresuccessfulin out If there isnt do you plan to support it or we should just use the ProtectedResource class scala ProtectedResourcehandleRequestrequest dataHandler 