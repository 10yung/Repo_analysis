Added iPadOS to the list of OSs Its okay to lose audit records if the pipe is full line because that scenario can be handled by the client in almost all cases When the kernel is busy however audit records are being dropped immediately and the audit trail is compromised in that coherence between data before and after dropping is potentially broken This seems like a big nono for the single performant security mechanism available from user space on macOS This PR comprises two changes Allow malloc to wait if the memory manager is busy Do the memory allocation for audit records in one chunk to minimize wait time In case is not feasible in the kernel I am not an expert at least reduces the chance to experience a drop by per call Already fixed in FreeBSD with NO PREVIOUS INCLUDE include libkernlibkernh int foo Macro expands to builtinstrncpychk here strncpy NO PREVIOUS INCLUDE include AvailabilityMacrosh include libkernlibkernh int foo default strncpy function here strncpy If one entry fits perfectly into the queue no room left between the entry and end of the queue calling peek will always return NULL as this check headOffset queueSize is wrong The check should be headOffset queueSize In case of equality between the two variables headOffset should be given the chance to wrap to the beginning of the queue It is important to note that dequeue function has the right check I tested it and I was able to get a NULL fail from the peek function but a successful dequeue call This pull request fix the issue Small typographical and grammar fixes Minor typos in comments See Radar and This makes nullfs usable for nonsystem processes as a bind mount mechanism which then makes chroot a whole lot more valuable because we can create workable roots that share large swaths of the filesystem with the host even if just readonly I also filed rdar on this issue asking for the entitlement requirement to be removed If this cant be accepted can you possibly explain why its needed in the first place It seems pretty harmless to me but I might just be missing something