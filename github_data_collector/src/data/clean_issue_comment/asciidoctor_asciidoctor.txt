 asdf h h xrefh h h xrefh then at asciidoctor asciidoctor mainadoc fails with stack level too deep Use trace for backtrace On GitHub resolves Info from In Asciidoctor it is possible to auto number callouts see blog post This information should be integrated in the Asciidoctor user manual Callout sample sourcehighlighter prettify icons font sourcegroovy package commrhakiadoc class Sample String username String toString usernametoUpperCase notdefined Simple property definition where Groovy will generate the setUsername and getUsername methods Return username in upper case if set otherwise return notdefined This makes it very easy to add new callouts without having to change all numbers we first typed by hand When creating a horizontal description list with the last time containing a nested horizontal description list it captures content even after multiple new lines Given this markup asciidoc horizontal Term Some definition Term Some definition horizontal Term Some definition A separate paragraph of text You get this output Note how the last paragraph is being captured as part of the description list When working with source code includes we often face the challenge that the code uses trailing line comments to force line breaks This is particularly common when using builder APIs java new Builder someMethod someOtherMethod Note the trailing on the first line If that kind of code is included in documentation Id like to be able to define the trailing characters that should be stripped Ie a declaration like this source java striptrailing include would result in java new Builder someMethod someOtherMethod hrows attribute can be used to define the number of rows in the header it can also be defined programmatically with AsciidoctorTableheaderrowcount attribute header option is now optional if hrows attribute has a value greater than one hrows has an higher precedence over the header option since the attribute is more specific Meaning that a table with the following definition headerhrows will have no header I think we should implement the same feature for footer using frows attribute but I dont want to introduce two features at once in this pull request resolves I tried to do the least amount of changes to make sure that if you are not using this feature the code is as fast as before For instance Im using the condition stylesheetinclude but we could have a more readableDRY code with rb stylesheets docattr stylesheetsplit map v vstrip reject v vempty Ive seen the following comment in the code should Stylesheets also handle the user stylesheet and I think we should move some logic to Stylesheets rb Stylesheetsinstancewriteuserstylesheets stylesoutdir write user stylesheets to stylesoutdir But SafeModenameforvalue returns nil if the value is not found I think we should use the same behavior between the two methods ie either throws an exception or returns nil if the SafeMode is not found Since the Asciidoctor API does not extensively use exceptions I think we should return nil if the name is not found ruby SafeModevalueforname server returns SafeModeSERVER SafeModevalueforname paranoid returns nil Current Situation chapterrefsig defines the prefix to a chapter number Eg chapterrefsig Chap will result in Chap The Title Problem There are situations where the chapter number is actually inbetween characters This is the case for texts written in Japanese In Japanese you would refer to the chapter as The Title Idea Allow to setup a prefix and a postfix for numbered elements OR even better allow advanced templating for chapter links OR maybe easier to implement Allow to reference the number title seperately on a perlink base Eg mysect NR mysect TITLE The third idea is probably more flexible and easier to implement than the first ones However it would mix content with styling which is actually not wanted If a start value is set then the lines to highlight specified by the highlight attribute should be relative to the start value In other words if the start value is and highlight then the first line should be highlighted Otherwise it gets confusing which lines are being highlighted sourcelinenumsrubystart highlight get render Hello World Note that this scenario is only relevant when linenums are enabled