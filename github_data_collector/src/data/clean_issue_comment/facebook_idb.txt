After running test cases on the booted simulator idb listtargets shows so many duplicate simulators in the Terminal version idbcompanion HEAD When and how to support the UI TestCase classNot Unit Test Case most wanted Description I am trying to generate a video of the Simulator screen which is booted by idb What I did Executed command idb record recordvideo udid xxxxxxxx C B xxxxxxxxxxxx log INFO videomp INFO video idb state file stored at tmpidbstate INFO video idb local targets file stored at tmpidblocaltargets Running video until C INFO video Starting connection to backend INFO video using companion CompanionInfoudidxxxxxxxx C B xxxxxxxxxxxx hostlocalhost port islocalTrue INFO video Starting video recording to local file videomp C Stopping video INFO video Stopping video recording INFO video Video saved at output path What I expected After I perform c on keyboard it should generate a videomp file in the current directory with the recording of simulator screen What actually happened I do not see any mp file created in the current directory Reproduction Host OS MAC OS version macOS Mojave python version XCode version idb client Installed using pip install fbidb on th October idbcompanion installation details version brew info idbcompanion facebookfbidbcompanion stable bottled HEAD A Powerful Command Line for automating iOS Simulators usrlocalCellaridbcompanionHEAD adc c files MB Built from source on at From Dependencies Required grpc Requirements Build xcode Options HEAD Install HEAD version idb describe TargetDescriptionudidxxxxxxxx C B xxxxxxxxxxxx nameiPhone statebooted targettypesimulator osversioniOS architecturex companioninfoCompanionInfoudid host port islocalFalse screendimensionsScreenDimensionswidth height density widthpoints heightpoints Steps idb boot udid xxxxxxxx C B xxxxxxxxxxxx idb connect xxxxxxxx C B xxxxxxxxxxxx idb record recordvideo udid xxxxxxxx C B xxxxxxxxxxxx log INFO videomp C on terminal Description What I did idb xctest install HelloDemoiphonesimulator x xctestrun What I Excepted xctestrun is installed successfully What I got actually Expected exactly one test in the xctestrun file got But Im sure I have some UITest cases and I can run them successfully by Xcode directly Reproduction Generate the xctestrun file though Xcode And try idb xctest install thexctestrunfile Additional Information idb revision HEAD Previously I used the fbsimctl to lunch the simulatorreal devices with specific ports as parallel And then using capsulate webdriveragent with different languages in projects But now we just can use idb in the command line actually its easier to use but not very powerful for setting up an automation project as engineering level My question is can we combine idb with wda to make the automation project more flexible Description idb open dgvgcmdprofile or any deeplink Reproduction Connect to any real device via idb connect udid idb open deeplink or Target doesnt conform to FBSimulatorLifecycleCommands protocol Solution Do this possible to make it happen Pass a deeplink to device so that iOS system window with Close or Open going to appear Any wild ideas Voodoo magic Additional Information idb revision tried and head Description Hi there The Docusaurus team is currently developing Docusaurus and are almost done with an MVP that doesnt include translations and versioning features which means theres feature parity with your websites current usage of Docusaurus Docusaurus brings about many improvements Clientside rendering with prerendering site renders without JavaScript More flexible appearance Customizable layouts CSS modules etc Embeddable interactive React components within markdown via MDX I will be your POC in helping you throughout the migration process Let me know what you think cc yangshun endiliey wgao Description I now use fbsimctl stream bgra fps to receive the screen cast in real time but would like to switch to idb command line tool But I cant find the corresponding command for idb so I really appreciate if idb has such real time streaming command Description Question here you guys plan on making it possible to use this tool for connecting iPhone devices to xcode over the network Instead of having to open up Xcode and connect through Devices Simulators Would be a great feature Description idb listtargets returns NO avalibale target python version brew info idbcompanion facebookfbidbcompanion stable bottled HEAD A Powerful Command Line for automating iOS Simulators usrlocalCellaridbcompanion files MB Poured from bottle on at From Dependencies Required grpc Requirements Build xcode brew info grpc grpc stable bottled HEAD Next generation open source RPC library and framework usrlocalCellargrpc files MB Poured from bottle on at From Dependencies Build autoconf automake libtool Required cares gflags openssl protobuf idbcompanion notify tmpidblocaltargets dyld Library not loaded usrlocaloptprotobufliblibprotobuf dylib Referenced from usrlocalbinidbcompanion Reason image not found Abort trap I could find libprotobuf dylib in fold usrlocaloptprotobuflib but there is no libprotobuf dylib Did I install the incorrect version of the grpc Reproduction execute idb listtargets Solution Additional Information idb revision 