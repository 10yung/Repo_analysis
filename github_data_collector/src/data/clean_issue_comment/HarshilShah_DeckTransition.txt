I want to be able to change whether this view is dismissable and change it on the fly So for example when I press a button it stops dismissal and when I press another button it reenables dismissal Lets add support for SPM in Xcode Ive been using this from my own fork and would love to contribute it back I am integrating this lib into my project and it works perfect until I got this problem with keyboard setup a viewcontroller with textfield and keyboard is showing click on a button to present this new viewcontroller with this decktransition The keyboard will hide automatically but very laggy The keyboard is glitchinglaggy when hiding I am sure it is this lib because I compare this lib with ios default presenting modal view I hope this one could be fixed because this glitching make smooth animation become glitchy Hey all Sorry it s been a while this took a bit longer than I d expected and then iOS hit and that made it take a bit longer Originally I was planning address some different issues with this major update however in light of the transition changes in iOS I ve had to made some changes to the plans While custom transitions and variable height presentations were to be the main focus I ve decided to push those back in favour of prioritising bringing the design and implementation up to par with Apple s The goal for now is to essentially make DeckTransition functionally identical to the default iOS transitions which will enable backporting the new UI for now and then building in features which Apple doesn t have yet such as the two mentioned above better customisability on iPads and so on Here s a list of all the changes I m hoping to get in The swipetodismiss gesture should use an interactive transition View controllers should be able to dynamically specify when a dismissal is allowed The corner radius handling needs improvement On devices and features with rounded corners so the Xseries iPhones newer iPad Pros and split view on iPads the presenting card should animate from the device s corners The iPad UI needs a complete rethink It should essentially be a match of Apple s designs which scales up from a page sheet to the current style based on the user s dynamic type settings The iPhone part of this changelog is relatively trivial The iPad part will take significant work especially given the smart things Apple is doing with handling corner radii in split view for example Additionally I think I ve found solutions to some prevalent bugs such as the weird transforms for certain UITableView rows and some others It should be possible to retain support for upto iOS however iOS and will likely have to be dropped The plan is to have a draft of this change in within a few weeks time permitting I d love to hear any thoughts people using this library have about these planned changes or any ideas Will be cool to have it In my app I have a UISplitViewController as the base Now when I present a UIViewController as a card on top of it the view will look like this img width altimage src However when I rotate the device and then rotate back the layout breaks and it will look like this img width altimage src When I then rotate once more and once more back the app will crash throwing this Terminating app due to uncaught exception NSInternalInconsistencyException reason Multiplier is not finite Thats illegal multiplierinf First throw call stack CoreFoundation x a fb exceptionPreprocess libobjcAdylib x b eac objcexceptionthrow CoreFoundation x a NSException raiseformatarguments Foundation x c NSAssertionHandler handleFailureInMethodobjectfilelineNumberdescription Foundation x e NSLayoutConstraint setMultiplier Foundation x f NSLayoutConstraint constraintWithAnchorrelatedBytoAnchormultiplierconstant DeckTransition x b s DeckTransition A PresentationControllerC updateSnapshotViewAspectRatio FA A BEAE D C CF A LLyyF DeckTransition x a a s DeckTransition A PresentationControllerC containerViewWillLayoutSubviewsyyF DeckTransition x a s DeckTransition A PresentationControllerC containerViewWillLayoutSubviewsyyFTo UIKitCore x UIViewCALayerDelegate layoutSublayersOfLayer Any ideas as to what could be causing this I have a feeling its a layout issue in the library but I have no clue where to start looking I can slide to dismiss and all the functionalities work The issue is when I present the VC with decktransition it just covers the whole screen and the top corners are not rounded Any suggestions When scrolling down fast the view can sometimes be dismissed by accident Having an option to adjust the sensitivity would assist HarshilShah Would it be possible to add callbacks for events willDismiss and didDismiss to run code on or during those events For Instance I use the Hero transition library for certain transitions and it conflicts with DeckTransition I would like to be able to turn it off so its behavior doesnt interrupt DeckTransitions dismiss animation On iPad since the screen is so tall Id like the card view to only take up of the screen Is it possible to adjust the height of the view being transitioned to or its inset to achieve the same