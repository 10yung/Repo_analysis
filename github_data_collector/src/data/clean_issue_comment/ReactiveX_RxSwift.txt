Based on Short description of the issue Run Unit test crash on methodizing class RxSwiftMainScheduler Expected outcome run unit test successfully What actually happens Run Unit test crash on methodizing class RxSwiftMainScheduler crash log and backtrace swift objc CLASS realizing class RxSwiftMainScheduler x ea x f swift objc CLASS realizing class RxSwiftSerialDispatchQueueScheduler x a c x f swift objc CLASS realizing class RxSwiftSerialDispatchQueueScheduler meta x a x f objc CLASS methodizing class RxSwiftSerialDispatchQueueScheduler meta objc CLASS methodizing class RxSwiftSerialDispatchQueueScheduler objc CLASS realizing class RxSwiftMainScheduler meta x e x f c objc CLASS methodizing class RxSwiftMainScheduler meta objc CLASS methodizing class RxSwiftMainScheduler lldb BT error BT is not a valid command lldb bt thread queue comapplemainthread stop reason EXCBADACCESS code address x frame x a f c libswiftCoredylibswiftcheckMetadataState frame x a a libswiftCoredylibbool findAnyTransitiveMetadatacheckTransitiveCompletenessswiftTargetMetadataswiftInProcess const swiftTargetMetadataswiftInProcess const checkTransitiveCompletenessswiftTargetMetadataswiftInProcess const frame x a a libswiftCoredylibcheckTransitiveCompletenessswiftTargetMetadataswiftInProcess const frame x a b f libswiftCoredylibswiftMetadataCacheEntryBaseanonymous namespaceSingletonMetadataCacheEntry intdoInitializationswiftConcurrencyControl swiftMetadataCompletionQueueEntry swiftMetadataRequest frame x a libswiftCoredylibswiftgetSingletonMetadata frame x e d MyAppTeststype metadata accessor for MainScheduler at compilergenerated frame x ea MyAppTestsObjC metadata update function for MainScheduler at compilergenerated frame x fb d libobjcAdylibrealizeClassMaybeSwiftMaybeRelockobjcclass mutexttfalse bool frame x fb cd libobjcAdylibrealizeAllClasses frame x fb d d libobjcAdylibobjccopyClassList frame x c XCTest XCTestCaseRuntimeUtilities allSubclasses frame x c XCTest XCTestCaseRuntimeUtilities allSubclasses frame x c d XCTest XCTestSuite suiteForBundleCache frame x c XCTest XCTestSuite initWithTestConfiguration frame x c f XCTest XCTestSuite testSuiteForTestConfiguration frame x c a XCTest XCTTestRunSession runTestsAndReturnError blockinvoke frame x c a c XCTest XCTTestRunSession runTestsAndReturnError blockinvoke frame x c b XCTest XCTestObservationCenter observeTestExecutionForBlock frame x c a XCTest XCTTestRunSession runTestsAndReturnError frame x c bdfc XCTest XCTestDriver runTestsAndReturnError frame x c XCTestXCTestMain frame x bb d libXCTestBundleInjectdylibRunTestsblockinvoke frame x fc e c CoreFoundationCFRUNLOOPISCALLINGOUTTOABLOCK frame x fc da CoreFoundationCFRunLoopDoBlocks frame x fc a CoreFoundationCFRunLoopRun frame x fc CoreFoundationCFRunLoopRunSpecific frame x fe c GraphicsServicesGSEventRunModal frame x b b UIKitCoreUIApplicationMain frame x b f MyAppmain at AppDelegateswift RxSwiftRxCocoaRxBlockingRxTest versioncommit version or commit here PlatformEnvironment x iOS How easy is to reproduce chances of successful reproduce after running the self contained code x easy repro Xcode version Xcode beta C b Installation method x CocoaPods I have multiple versions of Xcode installed so we can know if this is a potential cause of your issue x no Level of RxSwift knowledge this is so we can understand your level of knowledge and formulate the response in an appropriate manner I have a significant code base I get the following error when trying to setup RxSwift using the Packageswift installation file nlykkeimbprxswift nlykkei swift build error cyclic dependency declaration found RxTestProject RxTestProject How can I fix this Everything works using CocoaPods nlykkeimbprxswift nlykkei cat Packageswift swifttoolsversion import PackageDescription let package Package name RxTestProject dependencies packageurl from targets targetname RxTestProject dependencies RxSwift RxCocoa Short description of the issue I found a throttle bug ObservableVoidmergeObservablejust Observablejustdelaymilliseconds scheduler MainSchedulerinstance throttleseconds latest false scheduler MainSchedulerinstance debugDoesnt Work subscribe ObservableVoidmergeObservablejust Observablejustdelaymilliseconds scheduler MainSchedulerinstance throttlemilliseconds latest false scheduler MainSchedulerinstance debugworks subscribe Expected outcome Each of the two observable chains above should emit a single next event What actually happens The Doesnt Work chain emits two events RxSwiftRxCocoaRxBlockingRxTest versioncommit PlatformEnvironment X iOS macOS tvOS watchOS playgrounds How easy is to reproduce chances of successful reproduce after running the self contained code X easy repro sometimes hard extremely hard Xcode version Installation method X CocoaPods Carthage Git submodules I have multiple versions of Xcode installed so we can know if this is a potential cause of your issue yes which ones X no Level of RxSwift knowledge this is so we can understand your level of knowledge and formulate the response in an appropriate manner just starting I have a small code base X I have a significant code base Background Using with TRACERESOURCES option RecursiveLock increases the resource count on initialization and decreases it on deallocation But if you create a static lock instance it will never get deallocated so the resource count will not decrease This PR introduces StaticRecursiveLock class that doesnt increase or decrease the resource count on initialization and deallocation Discussion Theoretically the static instance is not deallocated so the resource count should not be decreased But I think Resourcestotal is intended to be used for debugging unexpectedly retained objects This is blocked until we merge With function builders we can enhance the standard initializer to get a nicer SwiftUIlike syntax as follows swift selfdisposeBag DisposeBag thingbindto otherThing driverdriveto textFieldrxtext observabledebugxsubscribe Description run demo click the first row navigate to Example CustomizationUsingTableViewDelegate Example TableView Warning once only UITableView was told to layout its visible cells and other contents without being in the view hierarchy the table view or one of its superviews has not been added to a window This may cause bugs by forcing views inside the table view to load and perform layout without accurate information eg table view bounds trait collection layout margins safe area insets etc and will also cause unnecessary performance overhead due to extra layout passes Make a symbolic breakpoint at UITableViewAlertForLayoutOutsideViewHierarchy to catch this in the debugger and see what caused this to occur so you can avoid this action altogether if possible or defer it until the table view has been added to a window Table view UITableView x f dd frame clipsToBounds YES autoresize RMBM gestureRecognizers NSArray x af layer CALayer x a c contentOffset contentSize adjustedContentInset dataSource RxCocoaRxTableViewDataSourceProxy x e c Advice RxCocoaCommonDelegateProxyTypeswift Swift objectlayoutIfNeeded Swift if let tv object as UITableView if tvwindow nil objectlayoutIfNeeded else objectlayoutIfNeeded I am referring to RxCocoa for macOS disposableinserttextFieldrxdelegate methodInvokedselectorNSTextFieldDelegatecontroltextViewdoCommandBy asObservable map as Selector subscribeonNext v in printv The onNext function is not being called rxtext appears to be working Description This pull request exposed four new functions in Maybe trait allow Maybe to be converted to Single and Completable Motivation I have encountered a limitation in RxSwift that I am not able to chain Maybe traits with Single and Completable The example below demonstrate my use cases Example I have function for getting and setting the objects func getInt SingleInt func getInt id Int SingleInt func setInt id Int Completable This pull request enable us to do the following chaining getIntfilter Singlefilter coverts Single to Maybe trait flatMapSinglegetInt flatMapCompletablesetInt subscribe Short description of the issue Hi I modify the last sample name GitHub Search Repositories i use willDisplayCell way to trigger load next page and its work let loadNextPageTrigger DriverGitHubSearchRepositoriesState SignalGitHubCommand state in return stateflatMapLatest unowned self state in guard stateshouldLoadNextPage else return Signalempty return selfcollectionViewrxwillDisplayCell asSignal filter cell indexPath in indexPathrow staterepositoriesvaluecount map in return Signaljust But when i change tableView to CollectionView trigger load next page the collectionView become empty I am sure that has value when load next page Self contained code example that reproduces the issue Sample minimal project 