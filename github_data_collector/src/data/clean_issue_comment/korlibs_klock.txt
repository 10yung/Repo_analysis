Formatting with subsecond precision seems to not work This val badUtc DateTime date Date time Time millisecond val thisWorks badUtcformatISO DATETIMECOMPLETE val thisDoesNot badUtcformatISO IsoDateTimeFormatYYYYMMDDThhmmssss YYYYMMDDThhmmssss printlnthisWorksthisWorks printlnthisDoesNotthisDoesNot Prints this thisWorks T thisDoesNot T The error seems to be here I have just changed the license of Klock from MITAPACHE to Public Domain just in case it would help to grab some code without any kind of worries to shape any date time library from Kotlin or other people Regarding to Klock I designed Klock to be as allocationfree as possible inline classes thinking that the Kotlin way would be to offer perplatform wrappings around native APIs that would incur in allocations I designed klock to be used in korge a game engine in which case each allocation counts The initial Kotlin steps has been to preview a Duration inline class also wrapping a Double that wouldnt incur in any allocation on any taget including JS That would fit the klock needs and would be mostly compatible Depending on the direction of the official Kotlin library I would take one direction or another Once Duration is release as stable I will make a typealias for the TimeSpan class and will provide extension methodsproperties to fill the gaps and keep it as sourcecompatible as possible and will provide Deprecated replaceWith if it helps Depending on the decisions of the DateTimeInstant part I will do the same with DateTime or will keep it as separate but will provide methods to convert frombetween the official Instant class I plan to keep working on Klock as long as there are gaps or missing functionality not offered from the official API and cover them here trying always to be as typealias friendly as possible to not duplicate types but always providing the allocationfree classes this offers If you have thoughtsideasfeedback on this please let me know here Hi i am facing problem after updated IntelliJ I also have updated my kotlin version to IntelliJ IDEA Community Edition Build IC built on August Runtime version b x VM OpenJDK Bit Server VM by JetBrains sro Previous version i never face any issue but in this build i face this error Now I am using version Cannot inline bytecode built with JVM target into bytecode that is being built with JVM target Please specify proper jvmtarget option FAILURE Build failed with an exception Here is the code in my commonMain folder var timeZone TimeSpan hoursmilliseconds I have changed my project JVM version setting to Is there anything that I have to do to solve this issue Hopefully you can guide me on this Thanks Hi I use klock a lot Great library Thanks Currently used in an angulario project small issue but it would be nice if the JS packagemodule names were different To integrate this into angulario I need to do in angularjson scripts nodemodulesklockjsklockrootklockjs in an angular ts file import as comsoywizklock from klockjsklockrootklockjs const comsoywizklock any window klockrootklock import klk comsoywizklockcomsoywizklock both of these refer to the klockrootklockjs file It is a slightly odd name It would be nicer if the module name was something more like comsoywizklock or was the same as the jar file name ie just klock the kotlinmultiplatform libs I publish use the jar name automatically so I am not sure what you do to change the names just a thoughtsmall request 