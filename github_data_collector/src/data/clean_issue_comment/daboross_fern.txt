Is there a way to color the full line based on its level For instance if the level is error the color of the full line would be red Motivation I have some projects using fern where Im sensitive to new dependencies I noticed on upgrade that fern promoted chrono to a nondev dependency The projects in question didnt already use chrono and via cargo tree one can see that chrono itself has additional dependencies txt fern v chrono v numinteger v numtraits v builddependencies autocfg v builddependencies autocfg v numtraits v time v libc v devdependencies winapi v log v cfgif v Solution Add a datebased feature and gate DateBased and the chrono dependency on that feature Since fern doesnt have any other default features currently datebased is left nondefault as well Alternatives Alternatively datebased could be the first default feature which has the advantage being an entirely PATCH safe change from But fern is still pre x and I wonder what percentage of fern users are currently using DateBased Its somewhat unclear regarding the long term future of chrono vs alternative crates like humantime and a more recent proposal to revive the time crate with a new release timerstime Thus I think a nondefault chrono dependency is a safer bet Should be fairly straightforward we can do the same thing we did for the syslog distinction for adding support for syslog Main work is in rewriting full examples to use syslog There were some things that syslog could do but syslog couldnt I cant remember off the top of my head what they were If syslog fixes these and is at least as capable as both syslog and we can remove syslog examples and leave only actual library code replacing them entirely with syslog examples mINFO m test Hello world mWARN m test Hello world mERROR m test Hello world Is there a way to prevent fern from writing color codes into files for example we could use it like this rust fernDispatchnew formatmove out message record outfinishformatargs if outcolor we render it with ANSI color eg iostdout otherwise render it as plain text eg fernlogfile if outcolor colorscolorrecordlevel else recordlevel message like after an hour I want it to log into logsmmddyyyylog but if the program is online for more than a day this will become outdated how would I make it automatically switch to the next days file Ideally this would be a stdoutlike color output stream which parsed ANSI color codes and transformed them into the correct output on both Windows and UNIX terminals Crates of note provides a platformagnostic colored stdout writer The downside is each color needs to be specified via a method it cant parse ANSI color codes passed to it is the backend termcolor uses on windows we might want to just depend on this if we dont need to do anything else on linux Ideas for implementation We can test the functionality in fern but it would probably be good to separate out stream which turns ANSI color codes into windows commands into a separate crate If we find a simpler ANSI color code only crate we might want to remove our dependency on We dont use very much of its functionality right now so wed have a lighter footprint if we switched to something which only provided ANSI codes Im planning to use fern in the asynchronous app and nonblocking logging is vital for us How can I setup fern to implement async logging Can it write logs in a separate thread or at least use mpscchannel as an output