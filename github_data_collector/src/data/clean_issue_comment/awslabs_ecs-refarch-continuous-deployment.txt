Am getting S Access denied error Can you please check this Removed mappings and added SSM Parameter as this will dynamically allow for the latest ecsoptimizedami each time awsserviceecsoptimizedamiamazonlinux gpurecommendedimageid awsserviceecsoptimizedamiamazonlinux arm recommendedimageid awsserviceecsoptimizedamiamazonlinux recommendedimageid awsserviceecsoptimizedamiamazonlinuxrecommendedimageid Note Your user account must have the following IAM permissions to retrieve the Amazon ECSoptimized AMI metadata These permissions have been added to the AmazonECSFullAccess IAM policy ssmGetParameters ssmGetParameter ssmGetParametersByPath a ccdc Seblat ch Seblat ch No longer required see ecs cluster template By submitting this pull request I confirm that you can use modify copy and redistribute this contribution under the terms of your choice Hi folks Is it possible to update this with a reference implementation for automatically rolling back to a previous version when the ECS deployment fails Better still to also run a small smoke test and rollback if it fails as well Hi Can you help me How can add codeCommit instead for GitHub Access to S is denied Can you provide the access to S I would like to use a similar architecture to deploy my application to ECS in another account that way I would have the source in my case CodeCommit and CodeBuild project in one account and the deployment on an ECS in another account I found something similar in this article but it uses CloudFormation to deploy to Lambda and since things can vary greatly from service to service I decided to ask your opinions Is it can be done with CodePipeline integration with ECS If not CloudFormation should work right Thanks in advance for the help Hello Im kind of new into the Cloudformation helperscripts Correct me if im wrong but i realized that in the conf file etccfnhooksdcfnautoreloaderconf the path should point to the actual resource logical id LaunchConfiguration and it should look like this pathResourcesLaunchConfigurationMetadataAWSCloudFormationInit Thank you for uploading this project it has helped me a lot Sorry for my English Regards from Chile How should one go about implementing version control for CF templates For example would it be possible to create a CodePipeline that connects to a GitHub repo where the templates are stored and then push files to an S bucket I have a containerized ASPNET Core Web API with the following Dockerfile dockerfile FROM microsoftdotnet sdkalpine AS build Set working directory within container WORKDIR app Copy files COPY src Restore dependencies RUN dotnet restore Build app RUN dotnet publish c Release o dist Build runtime image FROM microsoftdotnet aspnetcoreruntimealpine AS runtime COPY frombuild appdist ENTRYPOINT dotnet demonetcoreapidll I need to update the TaskDefinition of serviceyaml but I need an example of the ContainerDefinitions section Would you be able to tell me where I could find one Thanks Update the CloudFormation links to use Fargate where available