Doing rubeusexe kerberoast formathashcat aes produces AES hashes in the format krb tgs username domain spn checksum edata Feeding this to hashcat v results in an error hashcat m o crackedtxt a krb tgstxt passwordtxt Hashfile krb tgstxt on line krb t bc e c a c d afc Separator unmatched No hashes loaded Looking at the corresponding hashcat module the expected format is krb tgs username domain spn checksum edata Manually updating the hash from Rubeus results in another error hashcat m o crackedtxt a krb tgs txt passwordtxt Hashfile krb tgs txt on line krb t bc e c a c d afc Token length exception No hashes loaded Apparently hashcat expects the checksum to be exactly chars wide Manually moving the separator chars up makes hashcat load the hash but doesnt succeed in cracking it I suspect we need to recalculate the checksum over the cipherText part but Im a bit out of my depth here The nonce sequence number should be randomized grep R RubeuslibkrbstructuresEncKrbPrivPartcs seqnumber RubeuslibkrbstructuresEncKrbPrivPartcs seqnumber RubeuslibkrbstructuresKDCREQBODYcs nonce RubeuslibResetcs apreqauthenticatorseqnumber When using alternate credentials the creduser must be specified with creduserDOMAINFQDN USER However this does not work and Rubeus can not connect to the DC Rubeusexe kerberoast creduserexamplecom demo credpasswordPassword dc domainexamplecom v Action Kerberoasting NOTICE AES hashes will be returned for AESenabled accounts Use ticketX or tgtdeleg to force RC HMAC for these accounts Target Domain examplecom X Error creating the domain searcher The LDAPServer is not available But when I am using the IP of the DC everything works as expected Rubeusexe kerberoast creduser demo credpasswordPassword dc domainexamplecom v Action Kerberoasting NOTICE AES hashes will be returned for AESenabled accounts Use ticketX or tgtdeleg to force RC HMAC for these accounts Target Domain examplecom Using alternate creds demo Searching path LDAP for Kerberoastable users X No users found to Kerberoast Please add the support for alternate credentials when performing rc opsec mode on kerberoast This is not supported atm and Rubeus tries to get a TGT for the current user instead Rubeusexe kerberoast rc opsec formathashcat creduserexamplecom demo credpasswordPassword dc domainexamplecom Action Kerberoasting Using tgtdeleg to request a TGT for the current user X Error retrieving domain controller Die angegebene Dom ne ist nicht vorhanden oder es konnte keine Verbindung hergestellt werden X Error retrieving current domain controller Unhandled Rubeus exception SystemNullReferenceException Der Objektverweis wurde nicht auf eine Objektinstanz festgelegt bei Asn AsnEltDecodeByte buf Boolean exactLength bei RubeusKRBCREDctorByte bytes bei RubeusRoastKerberoastString spn String userName String OUName String domain String dc NetworkCredential cred String outFile KRBCRED TGT Boolean useTGTdeleg String supportedEType String pwdSetAfter String pwdSetBefore Int resultLimit bei RubeusCommandsKerberoastExecuteDictionary arguments bei RubeusDomainCommandCollectionExecuteCommandString commandName Dictionary arguments bei RubeusProgramMainString args I added two new options for the kerberoasting command delay millisec The number of millisec to wait from one TGSREQ to another jitter percentace The percentage of jitter to add to each delay The aim of these two new options is to evade basic Kerberoasting detections that rely on the number of requested ticket in a short amount of time Hi I added the admincount option in the kerberoast command This flag will allow the user to select user accounts with the attribute AdminCount set to This could help in situations where the user wants to quickly target only highvalue targets While the AdminCount attribute does not garantee that the user is still in a sensitive group its certanly a good indicator Is x systems supported running dump on Windows x gives X Error calling LsaCallAuthenticationPackage for target The parameter is incorrect both compiling AnyCpu and x Seems like KERBRETRIEVETKTREQUEST structure size error Provide the ability to specify an ldapfilterpropertyX option for granular user targeting in the kerberoast and asreproast functions Only extract tickets for the current user even if elevated I was having an issue getting the domain controller during my testing of the kerberoasting functionality The issue seems to be the function GetDCName Note I ran this with and without the built in impersonation and using the SimpleImpersonation library My solution for my very specific use case was to modify the GetDCName code as follows if ERRORSUCCESS val domainInfo InteropDOMAINCONTROLLERINFOMarshalPtrToStructurepDCI typeofInteropDOMAINCONTROLLERINFO string dcName domainInfoDomainControllerName InteropNetApiBufferFreepDCI return dcNameTrim else try string pdc SystemDirectoryServicesActiveDirectoryDomainGetCurrentDomainPdcRoleOwnerName return pdc catch string errorMessage new Win ExceptionintvalMessage ConsoleWriteLine r n X Error retrieving domain controller val errorMessage InteropNetApiBufferFreepDCI return This seems to have solved my little issue But just wanted to let you know 