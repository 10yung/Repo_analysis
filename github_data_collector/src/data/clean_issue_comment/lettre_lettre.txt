Readme examples are showing code that no longer builds error E failed to resolve could not find builder in lettre srcmainrs use lettreSmtpClient Transport Email buildermimeTEXTPLAIN could not find builder in lettre error E unresolved import lettreEmail srcmainrs use lettreSmtpClient Transport Email buildermimeTEXTPLAIN no Email in the root error E cannot find value TEXTPLAIN in this scope srcmainrs attachmentfromfilePathnewCargotoml None TEXTPLAIN not found in this scope error aborting due to previous errors Add async support based on Describe the bug When using FileTransport to send to a tmp file the contents of the email are displayed in bytes rather than plain text This makes it difficult to easily manually verify that an email contains what you want it to contain especially when developing This changed in this commit as demonstrated by that test Is there a reason the email couldnt be printed as plain text in the file To Reproduce Inspired by the test linked to above using lettre at ea rust test fn emailfileshouldcontainplaintext use lettreEmail EmailAddress Envelope FileTransport Transport use stdfs use stdpathPath let email Emailnew Envelopenew SomeEmailAddressnewuserlocalhosttostringunwrap vec EmailAddressnewrootlocalhosttostringunwrap unwrap idtostring Hello filetostringintobytes let mut sender FileTransportnewPathnewtmp let messageid emailmessageidtostring let result sendersendemail assertresultisok let file formattmpjson messageid let contents fsreadtostringfileunwrap asserteq contents envelope forwardpath rootlocalhost reversepath userlocalhost messageid id message Hello file Expected behavior I expected to be able to read the contents of the email in the file without any additional processing Environment please complete the following information Lettre version test written above is against lettre master ea OS macOS Rust stable Additional context This makes developing cratesio more difficult spin is no longer actively maintained Details Status unmaintained Package spin Version URL Date Unaffected versions The author of the spin crate does not have time or interest to maintain it Consider lockapi a subproject of parkinglot as an alternative which also supports nostd environments See advisory page for additional details First this library is awesome and thank you for your work from what i have seen in documentation i think this library doesnt seem async maybe i am wrong while it seems like it should be also as asyncawait syntax is close to stable it would be perfect time to make this library async PS I would like to help making this transaction but i am not very good with rust Describe the bug when send with SmtpClient met the UTF Error To Reproduce rust let email Emailbuilder toaddr fromxxx subjectxxx bodyxxx build unwrap let creds Credentialsnew xxxxxxxtostring tostring let addr smtpqqcom let connector TlsConnectornewunwrap let tlsparams ClientTlsParametersnewsmtpqqcomtostring connector let security ClientSecurityRequiredtlsparams let mut mailer SmtpClientnewaddr security unwrap credentialscreds transport here match mailersendemailinto Ok Erre printlnError n e Expected behavior I dont know the reason why it is like that how can i fix it Environment please complete the following information Lettre version OS Additional context version Describe the bug The library sends lines to SMTP servers that are longer than the protocols limit bytes To Reproduce Using an attachment that is bigger that the limit will send incorrect lines the entire file is sent as a base line Depending on the servers configuration it may trigger an error or not Attachments and the messages body should by split into correct lines I can try to fix this myself if its ok Is your feature request related to a problem Please describe When using Mailboxnewwithname the mailbox name in the From header is inserted within quotes Im not sure if this is part of the applicable standards but most emails that I receive do not use quotes around the name Describe the solution youd like It would be great if displaying the name within quotes was optional Describe alternatives youve considered No workaround that I can see Additional context Nothing at this point 