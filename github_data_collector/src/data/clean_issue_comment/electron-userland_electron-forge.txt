 Preflight Checklist x I have read the contribution documentation for this project x I agree to follow the code of conduct that this project follows as appropriate x I have searched the issue tracker for a feature request that matches the one I want to file without success Problem Description I have a very specific use case and I couldnt see if it was possible to do In which case this is a feature request If it is possible because I overlooked something in docs can you please give guidance on the best approach to achieve my aims A After the appasar and electronasar files are generated I need to be able to write a script or something to intercept the electronforge build process to calculate the MD hash of both files B After A but before completion of electronforge process I need to run my own command to generate my own file an executable file which is built based on the md hash from step A C I need to copy my executable file so that it sits beside the electron executable file for Win and Mac D For Mac only I need to modify the plist file so that the app bundle launches my executable file instead of the standard electron application E Electronforge should continue its standard process Can this be achieved somehow If not what would I need to modify in electronforge to achieve it Is it difficult Issue Details Electron Forge Version beta Electron Version v Operating System macOS Last Known Working Electron Forge version Unknown Expected Behavior App should start without error Actual Behavior Attempting to use zeroMQ with electronforge webpack template App fails to start reporting Error No native build was found for platformdarwin archx runtimeelectron abi uv libcglibc To Reproduce Instantiate new electron app with webpack template yarn create electronapp mynewapp templatewebpack Install zeroMQ yarn add zeromq Import zeroMQ in mainjs const zmq requirezeromq Start app yarn start Additional Information If the same steps are followed as above but without templatewebpack no issues are encountered As such problem appears to be with the webpack template Preflight Checklist Please ensure youve completed the following steps by replacing with x x I have read the contribution documentation for this project x I agree to follow the code of conduct that this project follows as appropriate x I have searched the issue tracker for a bug that matches the one I want to file without success Issue Details Electron Forge Version beta Electron Version v Operating System Windows Platform and Version eg macOS Windows Ubuntu x Last Known Working Electron Forge version if applicable eg beta Expected Behavior When I run electronforge make platform win the files out make squirrelwindows x Setupexe out make squirrelwindows x fullnupkg and out make squirrelwindows x RELEASES are created If I run the command again after a version bump the old files stay new files are created an additional out make squirrelwindows x deltanupkg is created and the RELEASES files is updated with the new version Actual Behavior A clear and concise description of what actually happened The folder out make squirrelwindows x gets wiped out on every make and To Reproduce Your best chance of getting this bug looked at quickly is to provide a MINIMAL REPOSITORY that can be cloned and run Also include if you are using the electronpackager CLI the command line arguments you are passing if you are using the API the parameters are you passing to the packager function Run electronforge make platform win in a project that has squirrel configured as target Make some change to the project and rerun the command Additional Information To create delta updates squirrel needs the old build files My current workaround is to add following hook in forgeconfigjs js hooks preMake async function rescue squirrel output files from being deleted so that diff can be created by squirrel const tmpDir pathresolveouttmp try await fsrmdirtmpDir catche if ecode ENOENT throw e await fsmkdirtmpDir const outPath pathresolveoutmakesquirrelwindowsx await Promiseall await fsreaddiroutPathmap file fsrenamepathjoinoutPath file pathjointmpDir file schedule copy back after some seconds the build lasts more than minute setTimeout async await fsreaddirtmpDirmap file fsrenamepathjointmpDir file pathjoinoutPath file Add any other context about the problem here For example Console output when you run your electronforge command with the environment variable DEBUGelectronforge Instructions on how to do so here Please include the stack trace if one exists Command line arguments you are passing to electronforge eg electronforge make notarealflag The configforge data in packagejson or forgeconfigjs in use A failing minimal testcase with a link to the code or detailed steps to reproduce the problem Using electronforge init is a good starting point if that is not the source of your problem Id rather like MakerSquirrel to not delete the outPath in the first place Preflight Checklist x I have read the contribution documentation for this project x I agree to follow the code of conduct that this project follows as appropriate x I have searched the issue tracker for a bug that matches the one I want to file without success Issue Details Electron Forge Version beta Electron Version v Operating System macOS Expected Behavior Load the native module Actual Behavior The native module is in the correct path Usersantoniomgattoprojectselectronprintertestwebpackmainnativemoduleslibnodeprinternode but the app crash with this output App threw an error during load Error Cannot find module Usersantoniomgattoprojectselectronprintertestwebpackmainnativemoduleslibnodeprinternode at webpackEmptyContext Usersantoniomgattoprojectselectronprintertestwebpackmainindexjs at Objectnodemodulesprinterlibprinterjs Usersantoniomgattoprojectselectronprintertestwebpackmainindexjs at webpackrequire Usersantoniomgattoprojectselectronprintertestwebpackmainindexjs at Modulesrcmainjs Usersantoniomgattoprojectselectronprintertestwebpackmainindexjs at webpackrequire Usersantoniomgattoprojectselectronprintertestwebpackmainindexjs at Usersantoniomgattoprojectselectronprintertestwebpackmainindexjs at Objectanonymous Usersantoniomgattoprojectselectronprintertestwebpackmainindexjs at Modulecompile internalmodulescjsloaderjs at ObjectModuleextensionsjs internalmodulescjsloaderjs at Moduleload internalmodulescjsloaderjs webpack built b b ad f cf d d in ms To Reproduce Steps to reproduce the error yarn yarn start Additional Information I created this project with the command below NA Preflight Checklist x I have read the contribution documentation for this project x I agree to follow the code of conduct that this project follows as appropriate x I have searched the issue tracker for a bug that matches the one I want to file without success Issue Details Electron Forge Version beta Electron Version Operating System Windows Last Known Working Electron Forge version None Expected Behavior I was making a preload script and then connecting by following this scheme in packagejson Actual Behavior A clear and concise description of what actually happened To Reproduce Create new app using npx createelectronapp mynewapp templatetypescriptwebpack Add any preloadts file Add MAINWINDOWPRELOADWEBPACKENTRY to maints file Add to preload config to packagejson You can clone my repository to see the issue Additional Information Just using electronforge start to start the project and then it stucks Picture Preflight Checklist Please ensure youve completed the following steps by replacing with x x I have read the contribution documentation for this project x I agree to follow the code of conduct that this project follows as appropriate x I have searched the issue tracker for a bug that matches the one I want to file without success Issue Details Electron Forge Version beta Electron Version Operating System Windows Pro SP Expected Behavior Building for ia the icon defined in makersconfigsetupIcon should be used for the setup icon Actual Behavior A two color windows icon with a bow on top is used as the setup icon Guessing this is a default Note the loading image and application icon are set properly and the setup icon is working as expected if I build for x its only the ia build that the setup icon isnt set properly To Reproduce Command electronforge make arch ia electronforgemakersquirrel Note building for x everything works as expected Additional Information Forgeconfigjs const path requirepath moduleexports packagerConfig appCopyright icon pathresolvedirnamesrcassetsiconsappiconicon makers name electronforgemakersquirrel config authors copyright description iconUrl setupIcon srcassetsiconsappiconiconico loadingGif Loader wgif Iam using the electronsettings module It is remote required in the renderer process While developing everything works fine After making and packaging the project i run into this issue Project is based of the webpack template errorutilsts Uncaught Error Cannot find module electronsettings Require stack C Users ruohk AppData Local lunchpad app resources app webpack main indexjs at ModuleresolveFilename internalmodulescjsloaderjs at FunctionlibcommonresetsearchpathstsModuleresolveFilename electronjs cbrowserinitjs at Moduleload internalmodulescjsloaderjs at Moduleload electronjs casarjs at FunctionModuleload electronjs casarjs at Modulerequire internalmodulescjsloaderjs at electronjs cbrowserinitjs at EventEmitteranonymous electronjs cbrowserinitjs at EventEmitteremit eventsjs at WebContentsanonymous electronjs cbrowserinitjs Iam running the latest version of electronforge Preflight Checklist Please ensure youve completed the following steps by replacing with x X I have read the contribution documentation for this project X I agree to follow the code of conduct that this project follows as appropriate X I have searched the issue tracker for a bug that matches the one I want to file without success Issue Details Electron Forge Version beta Electron Version v Operating System macOS G Last Known Working Electron Forge version none Expected Behavior No error Actual Behavior CleanShot at To Reproduce Your best chance of getting this bug looked at quickly is to provide a MINIMAL REPOSITORY that can be cloned and run Also include if you are using the electronpackager CLI the command line arguments you are passing if you are using the API the parameters are you passing to the packager function This is the error repository In order to run the project run yarn installall run yarn compile run yarn start Additional Information Error log kkapp electronforge start kkapp WARNING DEBUG environment variable detected Progress indicators will be sent over electronforgelifecycle kkapp T Z electronforgeasyncora Process Started Checking your system kkapp T Z electronforgechecksystem checking system create skipforgesystemcheck to stop doing this kkapp T Z electronforgeasyncora Process Succeeded Checking your system after ms kkapp WARNING DEBUG environment variable detected Progress indicators will be sent over electronforgelifecycle kkapp T Z electronforgeasyncora Process Started Locating Application kkapp T Z electronforgeprojectresolver searching for project in UserskchantrachirDesktopPersonalKingKnightpackagesapp kkapp T Z electronforgeprojectresolver electronforge compatible packagejson found in UserskchantrachirDesktopPersonalKingKnightpackagesapppackagejson kkapp T Z electronforgeasyncora Process Succeeded Locating Application after ms kkapp T Z electronforgerequiresearch searching kkapp electronforgepluginwebpack kkapp UserskchantrachirDesktopPersonalKingKnightpackagesappelectronforgepluginwebpack kkapp UserskchantrachirDesktopPersonalKingKnightpackagesappnodemoduleselectronforgepluginwebpack kkapp relative to UserskchantrachirDesktopPersonalKingKnightpackagesapp kkapp T Z electronforgerequiresearch testing electronforgepluginwebpack kkapp T Z electronforgepluginwebpack hooking process events kkapp T Z electronforgeasyncora Process Started Preparing native dependencies kkapp T Z electronforgeasyncora Process Succeeded Preparing native dependencies after ms kkapp T Z electronforgeplugins plugin webpack has taken control of the start command kkapp T Z electronforgeasyncora Process Started Compiling Main Process Code kkapp Starting type checking service kkapp Using worker with MB memory limit kkapp T Z electronforgeasyncora Process Succeeded Compiling Main Process Code after s kkapp T Z electronforgeasyncora Process Started Launch Dev Servers kkapp T Z electronforgeasyncora Process Succeeded Launch Dev Servers after ms kkapp T Z electronforgeasyncora Process Started Compiling Preload Scripts kkapp T Z electronforgeasyncora Process Succeeded Compiling Preload Scripts after ms kkapp kkapp An unhandled rejection has occurred inside Forge kkapp Error Cannot find module UserskchantrachirDesktopPersonalKingKnightpackagesappnodemoduleselectron kkapp Require stack kkapp UserskchantrachirDesktopPersonalKingKnightnodemoduleselectronforgecoredistapistartjs kkapp UserskchantrachirDesktopPersonalKingKnightnodemoduleselectronforgecoredistapiindexjs kkapp UserskchantrachirDesktopPersonalKingKnightnodemoduleselectronforgeclidistelectronforgestartjs kkapp at FunctionModuleresolveFilename internalmodulescjsloaderjs kkapp at FunctionModuleload internalmodulescjsloaderjs kkapp at Modulerequire internalmodulescjsloaderjs kkapp at require internalmodulescjshelpersjs kkapp at forgeSpawn UserskchantrachirDesktopPersonalKingKnightnodemoduleselectronforgecoresrcapistartts kkapp at processTicksAndRejections internalprocesstaskqueuesjs kkapp at forgeSpawnWrapper UserskchantrachirDesktopPersonalKingKnightnodemoduleselectronforgecoresrcapistartts kkapp at UserskchantrachirDesktopPersonalKingKnightnodemoduleselectronforgeclisrcelectronforgestartts kkapp code MODULENOTFOUND kkapp requireStack kkapp UserskchantrachirDesktopPersonalKingKnightnodemoduleselectronforgecoredistapistartjs kkapp UserskchantrachirDesktopPersonalKingKnightnodemoduleselectronforgecoredistapiindexjs kkapp UserskchantrachirDesktopPersonalKingKnightnodemoduleselectronforgeclidistelectronforgestartjs kkapp kkapp kkapp kkapp Electron Forge was terminated Location kkapp kkapp T Z electronforgepluginwebpack handling process exit with cleanup true kkapp T Z electronforgepluginwebpack cleaning webpack watcher kkapp T Z electronforgepluginwebpack cleaning http server kkapp T Z electronforgepluginwebpack stopping logger This is a code that might relate to this issue Add any other context about the problem here For example Console output when you run your electronforge command with the environment variable DEBUGelectronforge Instructions on how to do so here Please include the stack trace if one exists Command line arguments you are passing to electronforge eg electronforge make notarealflag The configforge data in packagejson or forgeconfigjs in use A failing minimal testcase with a link to the code or detailed steps to reproduce the problem Using electronforge init is a good starting point if that is not the source of your problem Preflight Checklist Please ensure youve completed the following steps by replacing with x x I have read the contribution documentation for this project x I agree to follow the code of conduct that this project follows as appropriate x I have searched the issue tracker for a feature request that matches the one I want to file without success Problem Description Id like to have an option to disable interactive mode There are certain cases where its impossible to properly recover from an error and interactive true mode cripples the terminal if not terminated properly Proposed Solution Introduce an env var preferable or cli argument to disable the interactive mode Alternatives Considered A clear and concise description of any alternative solutions or features youve considered Proper handling of all the crashes This is an ongoing process however its impossible to cover all the edge cases ie catch segfaults properly While we improve the crash recovery logic its good to provide users an option to work around the issue This is a very simple solution to a serious problem Waiting until we to fix all the issues is waiting for a neverending thing realistically there will always be something that casues the process to crash Removing interactive mode altogether This is a good thing in general it is only when iterating under a certain condition ine would disable the interactive mode Ignore it and just do an external terminal reset Not everyone is aware this is even possible and it is very inconvenient Simply disabling the the interactive mode would completely solve the issue though and it would work for everyone Additional Information Add any other context about the problem here This may include the use case for the feature Relevant code locations Fix the debugger script to fix while still supporting the fix for Thanks for filing a pull request Please check off all of the steps as they are completed by replacing with x x I have read the contribution documentation for this project x I agree to follow the code of conduct that this project follows as appropriate The changes are appropriately documented if applicable The changes have sufficient test coverage if applicable The testsuite passes successfully on my local machine if applicable Summarize your changes Given the environment in this change supports running the debugger script without breaking changes for users relying on the previous path structure Assuming it worked previously