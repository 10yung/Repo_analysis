Hello thank this excellent module come to this world Make much convenient I want to send errormessage to Google Analytics and control flow in TypeScript now I use this workaround ts TypeScript control flow try owgameId gameTitle owbooleanfalse catch error gaAPIsend ec linebot ea gameTitlequerystreamserror el JSONstringify context gameId gameTitle errorMessage errormessage await contextsendTexti nAPIterrorinternal if gameId gameTitle return const response await twitchAPIgetStreams gameId language LanguageParamzh How can I get rid of TryCatch like ts TypeScript control flow const error owgetErrorgameId gameTitle owbooleanfalse if error gameId gameTitle gaAPIsend ec linebot ea gameTitlequerystreamserror el JSONstringify context gameId gameTitle errorMessage errormessage await contextsendTexti nAPIterrorinternal return const response await twitchAPIgetStreams gameId language LanguageParamzh Hi Thank you for ow Could you export ArgumentError class from package Yes I can check the errors type by errname ArgumentError but this stands out from the approach adopted by our team Schematically javascript async function updateByIdid data try owid ownumberintegergreaterThanOrEqual finite owdata owobject const result await dbupdateByIdid data catch err if err instanceof DBError if err instanceof NotFoundError else if err instanceof ConstraintViolationError else if err instanceof here else if errname ArgumentError It would be cool to use ArgumentError like this javascript import ow ArgumentError from ow if err instanceof ArgumentError In addition we get the possibility of static analysis and instead of searching by all project by ArgumentError string the editorIDE will be able to show all the places where this error is catchedhandled ps yes Im jsonly user not ts This PR removes ESLint warnings using eslintdisablenextline The errors and warnings removed were explicitly created thus there is no need to display them in linter report I tried to do it in but I could not make it work ownullablestring instead of owanyowstring ownull A generic modifier for nullundefined would also be useful Maybe it is better if optional will also allow null In most cases you need nullundefined and null Separately undefined is needed almost never owarrayofowstring clearly better than owarrayofTypeowstring joi has a field isJoitrue Is there an analog in ow Maybe use isPredicate for this Error Cant resolve fs in nodemodulesowdistsource Section browser in packagejson is not actual When its out Hi guys this PR add not modifier to all predicates and should fix Chain from any predicate instance ow owanyownotnumber ownotstringnumeric Chain from any predicate rulebecause it the same predicate instance owundefined ownotundefined 