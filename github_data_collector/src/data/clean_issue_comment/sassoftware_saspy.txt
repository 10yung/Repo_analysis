Describe the bug I am reading in datasets with columns that have datestimes with funny formats In the first column filedate has dates like MAR In the second column filetime only contains the time no date like When I read in the dataset to saspy convert it to a dataframe and then convert it back into a sas bdat dataset the filetime has changed Instead of remaining with a count up from POSIX time it is converted to todays date at the same time SO before it was it becomes todays date Expected behavior I would expect the time to remain a count up from POSIX time and not have todays date added to the time stamp Screenshots before without formats After without formats I can provide sample datasets for troubleshooting if desired Desktop please complete the following information OS Linux SAS Version M P SASPy Version Additional context Add any other context about the problem here Describe the bug I attempted to use the proc generation code to add proc STDIZE to the sas stat object I successfully added the proc statement but when I run the function I get the following error macro proccalld proc stdize dataWORKdf plotall var age educationnum capitalgain capitalloss hoursperweek run quit mend mangobjstd stdizedf NOTE DATA statement used Total process time real time seconds cpu time seconds NOTE Libref STD was successfully assigned as follows Engine BASE Physical Name C Users negraj AppData Local Temp SAS Temporary Files TD l c Prc f db e dbd e c a NOTE Line generated by the invoked macro PROCCALL proc stdize dataWORKdf plotall var age educationnum capitalgain capitalloss hoursperweek run ERROR Syntax error expecting one of the following ADD DATA FUZZ INITIAL KEEPLEN METHOD MISSING MULT NMARKERS NOMISS NORM OPREFIX OUT OUTSTAT PCTLDEF PCTLMTD PCTLPTS PSTAT REPLACE REPONLY SNORM SPREFIX UNSTD UNSTDIZE VARDEF ERROR Syntax error statement will be ignored I took a deeper look at the documentation and I thought I needed to add the method statement to specify my option even though it should default to std So I went ahead and added it and then I got the following error message macro proccalld proc stdize dataWORKdf plotall method std var age educationnum capitalgain capitalloss hoursperweek run quit mend mangobjstd stdizedf NOTE DATA statement used Total process time real time seconds cpu time seconds NOTE Libref STD was successfully assigned as follows Engine BASE Physical Name C Users negraj AppData Local Temp SAS Temporary Files TD l c Prc cd ca cbb d cbe b f c NOTE Line generated by the invoked macro PROCCALL proc stdize dataWORKdf plotall method std var age educationnum capitalgain capitalloss hoursperweek run ERROR Syntax error expecting one of the following ADD DATA FUZZ INITIAL KEEPLEN METHOD MISSING MULT NMARKERS NOMISS NORM OPREFIX OUT OUTSTAT PCTLDEF PCTLMTD PCTLPTS PSTAT REPLACE REPONLY SNORM SPREFIX UNSTD UNSTDIZE VARDEF ERROR Statement is not valid or it is used out of proper order ERROR Syntax error statement will be ignored The method statement has been separated from where it should be Proc stdize data WORKdf method std Var Run So after messing around with the statement I decided to go back to SAS and try it out proc stdize dataSASusertestdata var age educationnum capitalgain capitalloss hoursperweek run This statement ran correctly I did not need to include the method statement as it defaults to STD So I decided to try and run the statement from SASPy in SAS to see if I got the same error message proc stdize dataSASusercendata plotall var age educationnum capitalgain capitalloss hoursperweek run proc stdize dataSASusercendata plotall ERROR Syntax error expecting one of the following ADD DATA FUZZ INITIAL KEEPLEN METHOD MISSING MULT NMARKERS NOMISS NORM OPREFIX OUT OUTSTAT PCTLDEF PCTLMTD PCTLPTS PSTAT REPLACE REPONLY SNORM SPREFIX UNSTD UNSTDIZE VARDEF ERROR Syntax error statement will be ignored It seems the statement has an issue with the plotall statement Now I am unsure why that statement is there but it seems to be causing the error So I am reaching out to see if you may have an idea on what could be causing this issue To Reproduce Steps to reproduce the behavior Follow the instructions to add proc stdize to SASPy Attempt to use stdize function from the sas stat object observe the error in the log Expected behavior the procedure should normalize the data Screenshots Desktop please complete the following information WIN SAS TS M SASPy Version Additional context Setup import saspy sas saspySASsession ets sassasets air sassasdataair sashelp outAir sassasdataair Call the method b etsarimadataair identifyvarair outoutAir procoptsplotsnone The code produced is this Proc code submission macro proccalld proc arima datasashelpair plotall outoutput outWORKair plotsnone identify varair run quit mend mangobjari arimaair Which is wrong Ill fix it after my other PR Desktop please complete the following information OS All SAS Version All SASPy Version From weve found at least issues with IML The original issue was that there was no output I get the log displayed but that wasnt being displayed for the user Trying to see the log via saslog we tried to share the session we already had via the new ability to pass a SASsession object to SAS We found the following issues SAS has to be submitted before IML else there is no SASsession for IML to use It fails with a traceback since selfmva is None selfMVA is only ever set in SAS If passing a SASsession to SAS SAS uses that session only for that one submission and selfmva is still not set So the subsequent IML still fails with traceback as selfmva is None These magics ought to be reworked so they can share the sessions correctly Tom