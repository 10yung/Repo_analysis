Check Create adapters for Check if it is integrated with Maven Central or JCenter If so deploy to GitHub packages instead Check if it has all required features Port scripts if so to have CI more integrated SonarQube code coverage doesnt match Codecovs one It seems Sonar only take a modules tests to calculate coverate not the whole project SonarQube results are available here Utilities to build REST services over HTTP servers The data classes conversion to maps is handled by Jackson If you convert an instance to a map date fields are serialized to formatted strings this calls problems in other places like stores The solution would be to implement this functionality with Kotlin reflection Build logic is written in Groovy all gradle files The goal of this task is to port those build scripts to Gradle kotlin DSL gradlekts This task can be completed with different PRs one by each gradle file migrated Create image with common files to require only the application JAR To complete this task It is necessary to Create a module called hexagondocker Do the build so it creates an empty application with all the toolkit dependencies Create a Dockerfile that packages all JARs dependencies and scripts that can be reused in other applications Build the image in the build process Publish the image to when the release is made If any point requires further details Please let me know in the comments