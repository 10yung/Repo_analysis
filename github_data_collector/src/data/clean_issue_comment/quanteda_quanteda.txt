Definitely for printtokens maybe maxndoc maxntoken Probably dont need to do this for corpus but we already agreed in to print some output for hte dictionary objects by default Also We should check and trap nonfunctional arguments passed by error in We will implement this in a manner exactly similar to tokens except printdictionarymaxnkey L printdictionarymaxnval L appearance will match the current printdictionary appearance not match the new printtokens r section Stopwords Stopword lists were formerly built into pkgquanteda but have been moved to the pkgstopwords package See stopwordsstopwords importFrom stopwords stopwords name stopwords inherit stopwordsstopwords export NULL Inspired by a SO post I propose to make textstateditdist whose output will be similar to r toks tokensdatacorpusinaugural dat dataframefeature typestoks dist stringdiststringdistthe typestoks headdat orderdatdist feature dist the they he The them then she tie She thee stringidist seems fairly fast r microbenchmarkmicrobenchmark stringdiststringdistthe headtypestoks stringdiststringdistthe headtypestoks Unit microseconds expr min lq mean median uq max neval stringdiststringdistthe headtypestoks stringdiststringdistthe headtypestoks r Seems to work with nonASCII characters stringdiststringdist We currently have a problem with maintaining consistency across the attributes and slots and after a lengthy discussion koheiw and I settled on the following scheme for v metasystem remains exactly the same as it is now which is always updated when the object is created This means calling metasystemdefaults to get information from the current state of the users system and is never affected by the function call or the state of the object itself Note that this means that the version slot for a dfm is removed since this is already part of the metasystem list metauser is unchanged Add a third type to the meta attributeslot for all core objects properties This means moving the current slots dfm and attributes corpus and tokens from toplevel slots or attributes to list elements of metaproperties This will include unit weightTf weightDf smooth ngrams skip and concatenator dictionary class objects will also get the same structure of meta slot with the concatenator slot moving to metaproperties The addition of userlevel metadata for dictionary objects will solve In this way objects now will carry a minimal set of slots and attributes namely Attributeslot corpus tokens dfm dictionary docvars slot meta slot slot types plus base object slots such as names or those inherited from Matrix in the case of a dfm printdfm should be updated to be more consistent with the printcorpus and printtokens methods ndoc becomes maxndoc deprecate ndoc default of maxndoc and L means print everything nfeature becomes maxnfeat deprecate nfeatures same as above but default will be or in case only maxndoc is used it shows a few feature columns similar to printtokens implement print messages for number not shown consistent with corpus and tokens printing methods update and extend tests consolidate into one documentation entry printtokens printcorpus printdfm printdictionary What would be reasonable limits on what we allow a user to ask for the pattern matching functions It appears to be an issue mainly in the number of patterns Below the number of patterns in stopwordsen is so is not bad but its till minutes of frozen console Maybe we could issue a warning and ask to proceed if the user tries to fit more than a vector of patterns We could set this limit and the prompt with warning as global options r libraryquanteda Package version datacorpusguardian ascorpusquantedacorporadownloaddatacorpusguardian ndoc systemtime kw kwicdatacorpusguardian the user system elapsed compare with longer documents datacorpusguardiansents corpusreshapedatacorpusguardian to sentences systemtime kw kwicdatacorpusguardiansents the user system elapsed with shorter documents datacorpusguardianonebig corpustextsdatacorpusguardian groups rep ndocdatacorpusguardian systemtime kw kwicdatacorpusguardianonebig the user system elapsed not really ok systemtime kw kwicdatacorpusguardian stopwordsen user system elapsed r libraryquanteda Package version datadatacorpussotu package quantedacorpora summarydatacorpussotu n Corpus consisting of documents showing documents Text Types Tokens Sentences FirstName President Date delivery type party Washington George Washington spoken SOTU Independent Washington b George Washington spoken SOTU Independent Washington George Washington spoken SOTU Independent Source dataframe Created Notes Warning messages In corpuscorpusx Found a prev corpus converting In corpuscorpusx Found a prev corpus converting In corpuscorpusx Found a prev corpus converting In corpuscorpusx Found a prev corpus converting ndocdatacorpussotu Warning message In corpuscorpusx Found a prev corpus converting printdatacorpussotu Corpus consisting of documents and docvars Warning messages In corpuscorpusx Found a prev corpus converting In corpuscorpusx Found a prev corpus converting This is partly caused by us not checking the entire warning output as I did in Just checking for the warning does not tell us how many times it was issued In we added a units slot to dfm objects but this is now causing problems for packages with older dfm objects it raises an S error eg r strRNewsflowrnewsflowdfm Formal class dfm package quanteda with slots settings list Dim int Dimnames List of docs chr features chr person noun location organization weightTf List of scheme chr count base NULL K NULL weightDf List of scheme chr unary base NULL c NULL smoothing NULL threshold NULL smooth num ngrams int skip int concatenator chr version int docvars dataframe obs of variables docname chr docid Factor w levels segid int date POSIXct format source chr Print NP Print NP Print NP Online NP sourcetype chr Print NP Print NP Print NP Online NP i int p int x num factors list meta List of user list system list NA NULL Warning message Not a validObject no slot of name unit for this object of class dfm Its not something we provided a forward compatibility for in v as we did for prev corpus objects There is no used case for this slot since we dont need it for reshaping Any collapsing could be done just as easily with dfmgroup asdfm for an older object does not add this attribute although this could be corrected of course Try strasdfmRNewsflowrnewsflowdfm for proof But dfmRNewsflowrnewsflowdfm does set it We can keep the units attribute in tokens objects without a problem because this does not raise a class validity error since its not an S object Dictionaries need the same metadata as corpus objects to record the source license notes etc I propose we add the same user and system slots to the dictionary object class and define a metadictionary method that works just as it does for corpus objects