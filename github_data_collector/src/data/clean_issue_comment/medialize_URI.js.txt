Are things like directory and suffix really necessary The RFC doesnt say much about this and there are plenty of cases where all but the last nonempty segment is not actually the directory For example in xindexphpyz the directory is x the file is indexphp and yz is an additional argument passed to the php script I note that Mozilla URL and Nodejs URL dont offer these conveniences I ask because I am modeling my C URL library after this one and I am hearing a lot of voices from selfprofessed experts that these features are not necessary So before I do a bunch of possibly unnecessary work are there use cases for manipulating the directory For replacing path segments in the middle ie replace the middle path segment with these new segments Do you have any links to projects that make heavy use of URIjs Thanks update href of Google Closure Uri When running js const uri urijshref consoleloghref defaultScheme urischemedefaultScheme consoleloguritoString in version the console reads examplecom https Which is whats intended however in version it reads examplecom https looks like theres an extra getting in there somehow Coming from qs we would control how arrays in query parameters would be with the arrayFormat option quote from qs docs below You may use the arrayFormat option to specify the format of the output array qsstringify a b c arrayFormat indices a b a c qsstringify a b c arrayFormat brackets a b a c qsstringify a b c arrayFormat repeat ab ac qsstringify a b c arrayFormat comma abc How can we control the format with urijs Hi I dont see any URITemplate extraction method did I miss it or is there a recommanded companion to do it please Using your library inside a Microsoft SharePoint project it rendered some SharePoint functionality on a page invalid because SharePoint seems to have some own JavaScript URI identifier Including your library resulted in JavaScript errors generated by SharePoint Solution for me was to download your library from the Build page and then use a text editor to replace all text occurances of URI with MyOwnURI Later I used MyOwnURI when accessing your library Suggestion Maybe an option on that Build page to specify a prefix or alternative name for URI would be helpful subdomain empty domain mysubdomainlocalhost When initializing with a string that is missing the protocol like URIsomesitecom the string is parsed as a path and not a URI Because of this domain host and port do not function as expected and return See Related issues This change adds a toUri method that allows the user to do this let uri new URIURItoUrisomesitecom scheme http after which uridomain will return the expected somesitecom Is it possible to lower the requirement for punycode to punycode The difference between punycode and punycode is just that the latter is written in ES The current version supports recent versions of Nodejs only It provides a CommonJS module and an ES module For the old version that offers the same functionality with broader support including Rhino Ringo Narwhal and web browsers see v punycodejs When punycode is used under IE it breaks with SCRIPT Syntax error because some ES constructs arent supported I had this problem on the application Im developing and I fixed it by downgrading punycode to Unfortunately your package doesnt allow a version lower than and Im afraid that it would break again if the punycode you are dependent on is used under IE 