 lua monobehaviour c callupdate lua e print must print your realization gives I have been using UniLua happily a while ago not pivking things up again I run into an overflowexception It breaks in LuaTablecs line and the hashcode detexted was of a G string Clearly the uint cast does not accept this negative number Changing to uint n uint MathAbshashcode gives me additional problems Any clues Regards Eelco LuaTablecs line private HNode GetHashNodeint hashcode uint n uint hashcode return HashPart n HashPartLength NullReferenceException Object reference not set to an instance of an object UniLuaBytesLoadInfoPeekByte UniLuaLuaStateFLoad UniLuaLoadParameter param UniLuaLuaStateDRawRunProtected LoadParameter UniLuaPFuncDelegate func UniLuaLoadParameter ud UniLuaLuaStateDPCall LoadParameter UniLuaPFuncDelegate func UniLuaLoadParameter ud Int oldTopIndex Int errFunc UniLuaLuaStateUniLuaILuaAPILoad ILoadInfo loadinfo SystemString name SystemString mode UniLuaLuaStateLLoadBytes SystemByte bytes SystemString name UniLuaLuaStateUniLuaILuaAPICall Int numArgs Int numResults ILuaAPICall does not invoke LLoadBytes lua require require logcat require Test require Test unilua Hi unilua stack bug LuaConfLUAIMAXSTACK Docs private void DGrowStackint n int size StackLength ifsize LuaConfLUAIMAXSTACK DThrowThreadStatusLUAERRERR int needed TopIndex n LuaDefEXTRASTACK int newsize size ifnewsize LuaConfLUAIMAXSTACK newsize LuaConfLUAIMAXSTACK ifnewsize needed newsize needed ifnewsize LuaConfLUAIMAXSTACK DReallocStackERRORSTACKSIZE GRunErrorstack overflow else DReallocStacknewsize private void DReallocStackint size UtlAssertsize LuaConfLUAIMAXSTACK size ERRORSTACKSIZE var newStack new StkId size int i for iStackLength i newStack i Stack i newStack i SetListnewStack for isize i newStack i new StkId newStack i SetListnewStack newStack i SetIndexi newStack i VSetNilValue Top newStack TopIndex Stack newStack StackLast size LuaDefEXTRASTACK DGrowStack LUAIMAXSTACK DReallocStack UtlAssertsize LuaConfLUAIMAXSTACK size ERRORSTACKSIZE LUAIMAXSTACK bug unilua bug unilua c NGUI UI UnloadTime ms System memory in use before MB Receiving unhandled NULL exception Launching bug reporter Obtained stack frames x in arraysafegrow x abb in arraysafegrow x a a in arraysafegrow x b in arraysafegrow UniLua C delegate C delegate ffi lua UniLua Dictionarystring object Unilua Scence Unilua scene GameObject a LuaPushLightUserDataa push lua lua local function DisableButtona aSetActivefalse end a LightUserData GameObject field method ffilua newclassmgr Gameobject Gameobject resolvebuilder modclsmgr clsmgr newclassmgr obj UnityEngineclsmgrmakeinstanceGameObject a unit tests should be added to unilua with code coverage so that one can be assured by the stability of the tests when the same unit tests are run on A Lua standard VM B UniLua It will ensure better code quality too 