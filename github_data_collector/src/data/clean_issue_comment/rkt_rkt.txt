changing package name from libsystemdjournaldev to libsystemddev this has caused because in semaphoreci Ubuntu version bumped up from trusty to xenial Environment rkt Version appc Version Go Version go Go OSArch linuxamd Features TPM SDJOURNAL Linux generic x NAMEUbuntu VERSION LTS Xenial Xerus IDubuntu IDLIKEdebian PRETTYNAMEUbuntu LTS VERSIONID HOMEURL SUPPORTURL BUGREPORTURL UBUNTUCODENAMExenial systemd PAM AUDIT SELINUX IMA APPARMOR SMACK SYSVINIT UTMP LIBCRYPTSETUP GCRYPT GNUTLS ACL XZ LZ SECCOMP BLKID ELFUTILS KMOD IDN rkt run dockers image mysql erroras follows rootubuntuhomerktuser rkt insecureoptionsimage run dockermysql setenvMYSQLROOTPASSWORDpassword setenvMYSQLUSERadmin run group rkt not found will use default gid when rendering images stage warning no volume specified for mount point volumevarlibmysql implicitly creating an empty volume This volume will be removed when the pod is garbagecollected stage Docker converted image initializing implicit volume with data contained at the mount point volumevarlibmysql stage warning error setting journal ACLs youll need root to read the pod journal group rkt not found stage warning no volume specified for mount point volumevarlibmysql implicitly creating an empty volume This volume will be removed when the pod is garbagecollected stage Docker converted image initializing implicit volume with data contained at the mount point volumevarlibmysql mysql Note Entrypoint Entrypoint script for MySQL Server debian started mysql ERROR Entrypoint mysqld failed while attempting to check config mysql command was mysqld verbose help mysql mysqld error while loading shared libraries libpthreadso cannot stat shared object Permission denied I hope everyone can help me solve this problemThanks Although it is spelling mistakes it might make an affects while reading Signedoffby Kim Bao Long longkbvnfujitsucom rkt no longer works when built by Golang rkt debug run hangs on image using image from file ACI without printing anything else apparently due to failure to extract the image Under Nomad the following error is logged nomad Error prepare error finding images extracttar error exit status output error extracting tar could not extract file rootfsdevconsole in operation not permitted There is no such problem when rkt is built by Golang Ive confirmed that by rebuilding rkt by older version of Golang in order to isolate the problem Please advise Environment rkt Version appc Version Go Version go Go OSArch linuxamd Features TPM SDJOURNAL Linux amd x PRETTYNAMEDebian GNULinux bullseyesid NAMEDebian GNULinux IDdebian HOMEURL SUPPORTURL BUGREPORTURL systemd PAM AUDIT SELINUX IMA APPARMOR SMACK SYSVINIT UTMP LIBCRYPTSETUP GCRYPT GNUTLS ACL XZ LZ SECCOMP BLKID ELFUTILS KMOD IDN IDN PCRE defaulthierarchyhybrid What did you do sudo rkt fetch insecureoptionsimage dockerbusybox What did you expect to see A successful download What did you see instead sudo rkt fetch insecureoptionsimage dockerbusybox fetch parse dockerbusybox invalid port after host From looking at the output of rkt image list I found a workaround sudo rkt fetch insecureoptionsimage dockerlibrarybusybox But I think the simple noslash version of the url dockerbusybox should work based on the documentation and I dont see library documented anywhere Environment Replace this with the output of rkt Version appc Version Go Version go Go OSArch linuxamd Features TPM SDJOURNAL Linux coreos x NAMEContainer Linux by CoreOS IDcoreos VERSION VERSIONID BUILDID PRETTYNAMEContainer Linux by CoreOS Rhyolite ANSICOLOR HOMEURL BUGREPORTURL COREOSBOARDamd usr systemd gf da f PAM AUDIT SELINUX IMA APPARMOR SMACK SYSVINIT UTMP LIBCRYPTSETUP GCRYPT GNUTLS ACL XZ LZ SECCOMP BLKID ELFUTILS KMOD IDN IDN PCRE defaulthierarchylegacy What did you do sestatus SELinux status enabled SELinuxfs mount sysfsselinux SELinux root directory etcselinux Loaded policy name mcs Current mode enforcing Mode from config file enforcing Policy MLS status enabled Policy denyunknown status allowed Max kernel policy version rkt run interactive dockerdebian insecureoptionsimage result bash sestatus SELinux status enabled SELinuxfs mount sysfsselinux SELinux root directory etcselinux Loaded policy name mcs Current mode permissive Mode from config file enforcing Policy MLS status enabled Policy denyunknown status allowed Max kernel policy version rkt run interactive dockerdebian insecureoptionsimage rootrkt b c a b b b a db b What did you expect to see rkt will work with SELinux in the Enforcing mode What did you see instead that rkt not working at the moment with SELinux in the Enforce mode Note ive play the same scenario on debian Buster with SELinux in the Enforcing mode there are the same behavior and the same result there are no avc denied in the logs This is a copy of which was prematurely closed I have the exact same issue but Im just copying the original issue text for convenience Environment rkt Version appc Version Go Version go Go OSArch linuxamd Features TPM SDJOURNAL Linux generic x NAMEUbuntu VERSION LTS Xenial Xerus IDubuntu IDLIKEdebian PRETTYNAMEUbuntu LTS VERSIONID HOMEURL SUPPORTURL BUGREPORTURL VERSIONCODENAMExenial UBUNTUCODENAMExenial systemd PAM AUDIT SELINUX IMA APPARMOR SMACK SYSVINIT UTMP LIBCRYPTSETUP GCRYPT GNUTLS ACL XZ LZ SECCOMP BLKID ELFUTILS KMOD IDN What did you do rkt run or rkt fetch docker image that has multiple layers after a update to a smaller layer What did you expect to see rkt download only changed layer and extract that What did you see instead rkt downloads ALL layers and reextracts all of them to build aci I have base images that are gig in size and having these layers downloaded and extracted every time a smaller upper layer is changed can take a very long time Make dev testing with rkt frustrating Maybe Im missing something Hi Im Yevgeny Pats Founder of Fuzzit Continuous fuzzing as a service platform We have a free plan for OSS and I would be happy to contribute a PR if thats interesting The PR will include the following gofuzz fuzzers This is generic step notconnected to fuzzit Continuous Fuzzing of master branch which will generate new corpus and look for new crashes Regression on every PR that will run the fuzzers through all the generated corpus and fixed crashes from previous step This will prevent new or old bugs from crippling into master You can see our basic example fuzzitdevexamplego and you can see an example of in the wild integration googlesyzkaller Let me know if this is something worth working on Cheers Yevgeny Environment Replace this with the output of printf rkt version n nuname srm n ncat etcosrelease n nsystemctl version n rkt Version appc Version Go Version go Go OSArch linuxamd Features TPM SDJOURNAL Linux coreosr x NAMEContainer Linux by CoreOS IDcoreos VERSION VERSIONID BUILDID PRETTYNAMEContainer Linux by CoreOS Rhyolite ANSICOLOR HOMEURL BUGREPORTURL COREOSBOARDamd usr systemd g e e PAM AUDIT SELINUX IMA APPARMOR SMACK SYSVINIT UTMP LIBCRYPTSETUP GCRYPT GNUTLS ACL XZ LZ SECCOMP BLKID ELFUTILS KMOD IDN IDN PCRE defaulthierarchylegacy What did you do Trying to fetch ubuntu image from docker sudo preserveenv rkt insecureoptionsimage fetch dockerubuntu Password Downloading sha ad c a d B B Downloading sha b c MB MB Downloading sha c B B Downloading sha b f B B fetch open varlibrktcastreedepssha a cd cda cfecb dbaf f ccca dd ac c rootfsdevagpgart no such device Im able to fetch ubuntu image successfully Environment Linux amd x PRETTYNAMEDebian GNULinux stretch NAMEDebian GNULinux VERSIONID VERSION stretch IDdebian HOMEURL SUPPORTURL BUGREPORTURL systemd PAM AUDIT SELINUX IMA APPARMOR SMACK SYSVINIT UTMP LIBCRYPTSETUP GCRYPT GNUTLS ACL XZ LZ SECCOMP BLKID ELFUTILS KMOD IDN What did you do rkt gc in a cron job What did you expect to see No output for successful execution What did you see instead Lots of informational output like Garbage collecting pod and pod q not removed still within grace period Output is written to a mix of stdout and stderr and when run from a cron job any output will cause cron to send a email report Either all output should be reviewed so that all status messages go to stdout and can be silenced in the crontab or a flag like quiet should be implemented to suppress all informational output