Running testalltest results in a segfault on Linux altermalloc transient Ok altermalloc transient altermalloc transient expected altermalloc transient got altermalloc transient altermalloc transient expected altermalloc transient got altermalloc transient altermalloc transient expected altermalloc transient got altermalloc transient altermalloc transient expected altermalloc transient got altermalloc transient altermalloc transient expected altermalloc transient got altermalloc transient altermalloc transient expected altermalloc transient got altermalloc transient segmentation fault core dumped testfixture testalltest Steps to Reproduce Configure as described in the readme Run make testfixture Run testfixture testalltest SQLCipher version v Unfortunately there is no section in the readme on how to start the tests From reading make test apparently is not supposed to work However the test mentioned in also does not exist any longer assuming it has been renamed to sqlciphertest Can you document how to run the tests in the readme Expected Behavior I have installed VS and I am trying to build the sqlcipher command as in Ubuntu for my Windows x Actual Behavior but I get the below error Makefilemsc fatal error U file sqlite ext lsm Makefilemsc not found Steps to Reproduce so I tried to do so by mkdir bld cd bld nmake f Makefilemsc sqlite exe TOP sqlite But firstly I get the below error which is pretty obvious It is most likely because in the bld folder there is no Makefilemsc Microsoft R Program Maintenance Utility Version Copyright C Microsoft Corporation All rights reserved NMAKE fatal error U file Makefilemsc not found Stop So I tried to fix that by adding before Makefilemsc nmake f Makefilemsc sqlite exe TOP sqlite But then I get the below error which I believe is pretty obviously because I dont have the sqlite source folder in the source folder but I dont know where to get the source for sqlite and how to fix this Microsoft R Program Maintenance Utility Version Copyright C Microsoft Corporation All rights reserved Makefilemsc fatal error U file sqlite ext lsm Makefilemsc not found Stop to be honest I couldnt find a step by step instruction on how to build sqlcipher using MSVC The only one I found is this which is pretty old I would appreciate if sb could shed some light Thank you SQLCipher version Note If you are not posting a specific issue for the SQLCipher library please consider posting your question to the SQLCipher discuss site Thanks Ive recreated these files using the method described at This should allow to compile sqlcipher with the arm instruction set Expected Behavior When I do vacuuming operation for a big database about G using latest SQLCipher code in git I found the memory go up high continuously but when I use pure SQLite to test it doesnt make memory high so I dont know where I am wrong to use SQLCipher or some bug in SQLCipher Actual Behavior it shoudnt make memory go up high continuously which seems memory leak issue Steps to Reproduce Just do VACCUM operation for a big database then you will see memory go up high continously SQLCipher version Note If you are not posting a specific issue for the SQLCipher library please consider posting your question to the SQLCipher discuss site Thanks Changes proposed in this pull request Add a mbedcrypto implementation for SQLCipher Remark while this has been witnessed on Android unless Im mistaken this is not a androiddatabasesqlcipher bug as Im using the amalgamation from the NDK side directly a classic C program not the Java API Im running repeated or times per second SELECT queries on a large table that has columns and about K records The only conditional in the query is a comparison with a text field and the proper indexes set on that field as confirmed by EXPLAIN QUERY PLAN Most of the columns are retrieved on the SELECTs one of them is a BLOB but it is selected through HEXblobcolumn Compared to previous x versions doing those selects appears to take roughly double the amount of time on x This is confirmed by an average of the N last queries its not a oneshot The database itself was a x one but this happens both when using the new x config after doing a pragma ciphermigratevacuum on said database and when using x with the x compatibility settings using the four pragma provided in your release changelog for that purpose I saw this bug however and as a result tried PRAGMA ciphermemorysecurity OFF and this fixes the issue entirely The selects now run as fast if not faster than on x This may not really be a bug mind you the new memory wiping security feature does strongly increase security However the fact that it was added in x and above all the possible performance impact double the time for my use case described above should probably be announced and documented better Changes proposed in this pull request We crosscompile sqlcipher for Windows on a Linux machine and to make it work we have to jump through some hoops instead of it just working Here is how we currently make it work sh REMOVED SEE BELOW old version Its Debian system libopensslbuildwindowsx staticreleasezip is a static openssl crosscompiled for Windows Would be nice if you could fix the build system for windows crosscompilation to work out of the box or point out if we are doing something wrong SQLCipher version is EDIT Here is an updated version for Make sure you copy tabs as tabs and spaces as spaces without removing any trailing whitespace in the patch part as the patch will likely fail to apply because of that EDIT Same but for This patch adds basic libsodium support Kdf cryptopwhashscryptsalsa sha Hmac cryptoauthhmacsha Cipher cryptostreamxsalsa Please make sure i did it right Also all of this code is public domain 