This PR upgrades styledcomponents and jeststyledcomponents to the latest major version The new version has no braking changes Before opening a pull request please ensure x You have followed our contributing guidelines x Doublecheck your branch is based on dev and targets dev Before opening a new issue please take a moment to review our community guidelines to make the contribution process easy and effective for everyone involved Description Saga does not run when action from useEffect is used in a child component of a Container that injects a saga and reducer In the code below my page container injects the saga and reducer however the imported child component loads the data when it mounts It seems like by the time it is mounted the saga is not available or is not yet watching Could it be because useInjectSaga is asynchronous When I move the useEffect code into the page container parent the loadDocuments work properly ProjectPage indexjs import React useEffect memo from react import Documents from Documents const key projectSettings export function ProjectSettingsPage useInjectReducer key reducer useInjectSaga key saga return article Helmet titleProject Settings Pagetitle meta namedescription projectProject settings page Helmet Documents article Documentsjs import React useEffect memo from react import DocumentsTable from DocumentsTable import makeSelectProjectDocuments from selectors import loadProjectDocuments from actions export function Documents documents loadDocuments useEffect loadDocuments return ReactFragment DocumentsTable documentsdocuments ReactFragment const mapStateToProps createStructuredSelector documents makeSelectProjectDocuments export function mapDispatchToPropsdispatch return loadDocuments dispatchloadProjectDocuments const withConnect connectmapStateToProps mapDispatchToProps export default composewithConnect memoDocuments Steps to reproduce Steps to reproduce the behavior Create a Page Container Import a connected Component that can dispatch actions Instead of the Page Container move useEffect in the connected component Dispatch a load action in the useEffect of the connected component The load action never reaches Saga ie the saga watcher never gets the action No errors Expected behavior Any action should work and Saga watcher should be available immediately to imported child components as well Versions ReactBoilerplate v React Boilerplate You have followed our contributing guidelines Doublecheck your branch is based on dev and targets dev Pull request has tests we are going for coverage Code is wellcommented linted and follows project conventions Documentation is updated if necessary Internal code generators and templates are updated if necessary Description explains the issueusecase resolved and autocloses related issues Be kind to code reviewers please try to keep pull requests as small and focused as possible IMPORTANT By submitting a patch you agree to allow the project owners to license your work under the terms of the MIT License I dont know if this feature addition follows best practices or if its even wanted but Ive been using this modified version of the componentcontainer generators for about years now and its done wonders for keeping my project components more organized It effectively allows for components and containers to be nested in subdirectories while still allowing each subcomponent to have all the benefits reactboilerplates generators create like unit tests and messages By simply adding s to component names will create subdirectories all the way up until the last value which will then be used as the component name which behaves exactly as it does now I made this entirely as an optin style of usage so if people want to continue using it exactly how they do now they should experience no difference Here are some examples of how this works it should identical for containers as well just with additional containerspecific files npm run generate component Events will generate an Events component exactly as it does now npm run generate component EventsIndex will generate an Index component inside of the Events directory otherwise leaving all the existing files in the componentsEvents untouched Another cool part is lets say you dont want a root component but want to have a handful of related components grouped together in the same directory You can skip over the initial directory generator and go straight to the subcomponent eg npm run generate component ButtonsConfirmation A Confirmation component will be made inside of a Buttons directory but no component will be made directly in the Buttons directory npm run generate component ButtonsConfirmation npm run generate component ButtonsCancelation would generate a directory structure like this components Buttons Confirmation indexjs Cancelation indexjs Lets say you later realized you did actually want to have a Button component as a base for the subcomponent All you would need to do is run npm run generate component Button and a Button component would be made like normal without disturbing the Confirmation and Cancelation components I typically use this for CRUD type development but I could see it used in a plethora of ways for organizing related components My real world example being structured something like this Events Index indexjs Show indexjs Edit indexjs So rather than cluttering the root directory with components like EventIndex EventShow EventEdit all the components are nicely grouped together in the Events directory I hope you see a value in this type of setup and if you do I will go on to write appropriate tests and update whatever documentation is necessary Generating documentation website from docs folder Documentation website is needed for a long time imo Integrating Docsify is pretty easy Now having the indexhtml file either github pages to docs folder or docsreactboilerplatecom would do the job I didnt fully check all the docs but if you decide to go with this I will check and fix broken links etcif there are any How to run npm i docsifycli g on your local machine no need to add this to packagejson docsify serve docs then browse localhost to see the generated website What do you think Example screenshot img width altScreen Shot at src PS Customizations are possible with theming etc Quite flexible Docsify docs Following the issue Before opening a new issue please take a moment to review our community guidelines to make the contribution process easy and effective for everyone involved Description Getting for post calls from saga Steps to reproduce In my saga I am using below generator to make a post call and passing the right token url and other details Even same call is getting successful with postman export function getCPSDetails const requestURL const proposalID yield selectmakeSelectProposalID const payload method POST credentials include mode nocors headers AuthenticationToken ContentType applicationjson Accept applicationjson body JSONstringify UserName LocaleCode AgreementNumber ProposalID ValidationType Add link to a demo on or similar if possible Expected behavior should get a response Screenshots Response Headers AccessControlAllowOrigin ContentLength Date Fri Dec GMT RequestContext appIdcidv e b ae fd d d a c c ad d Server Kestrel WWWAuthenticate Bearer XPoweredBy ASPNET Request Headers Accept applicationjson AcceptEncoding gzip deflate br AcceptLanguage enUSenq Connection keepalive ContentLength ContentType textplaincharsetUTF Host xxxxxxxserviceuatazurewebsitesnet Origin Referer SecFetchMode nocors SecFetchSite crosssite UserAgent Mozilla Windows NT Win x AppleWebKit KHTML like Gecko Chrome Safari Versions ReactBoilerplatev NodeNPMv BrowserChrome Description Tree shaking seems doesnt work with styledicons Steps to reproduce yarn add styledicons import one icon eg import Plus from stylediconsfasolid yarn build Expected behavior Bundle contains only imported icon Screenshots Bundle contains all icons from stylediconsfasolid Versions ReactBoilerplate NodeNPM This pull request solves It was requested to be committed to my pull request but it ended up being a bit bigger of a change than I anticipated so I decided to make a separate pull request to be sure these changes dont hold up merging in Diving into the LanguageProvider tests I realized the current tests didnt test changing locales as thoroughly as I felt they should I believe this pull request tests multiple locales more thoroughly Like my last pull request Im still very new to test suites but I feel more confident than on my last pull request React Boilerplate Before opening a pull request please ensure You have followed our contributing guidelines Doublecheck your branch is based on dev and targets dev Pull request has tests we are going for coverage Code is wellcommented linted and follows project conventions Documentation is updated if necessary Internal code generators and templates are updated if necessary Description explains the issueusecase resolved and autocloses related issues Be kind to code reviewers please try to keep pull requests as small and focused as possible IMPORTANT By submitting a patch you agree to allow the project owners to license your work under the terms of the MIT License Before opening a new issue please take a moment to review our community guidelines to make the contribution process easy and effective for everyone involved Description Im new to reactboilerplate and im trying to get an action to produce a simple state update and component rerender in a new reactboilerplate project that uses immer Component to action is functioning correctly as confirmed by consolelog and Im not passing any data just an action that changes a boolean Also If i want to use simple view based react state NO redux with this project what is the suggested approach Are there any code examples of this Steps to reproduce Steps to reproduce the behavior Reducer import produce from immer import SETHOMEVISIBLE from constants The initial state of the App export const initialState homeVisible false eslintdisable defaultcase noparamreassign const homeReducer state initialState action producestate draft switch actiontype case SETHOMEVISIBLE drafthomeVisible true break export default homeReducer Selectors Homepage selectors import createSelector from reselect import initialState from reducer const selectHome state statehome initialState const setHomeVisible state statehomeVisible initialState const makeHomeVisible createSelector setHomeVisible homeVisibleState homeVisibleStatehomeVisible export selectHome makeHomeVisible setHomeVisible Actions for continuity import SETHOMEVISIBLE from constants Changes the input field of the form param string username The new text of the input field return object An action object with a type of CHANGEUSERNAME export function setHomeVisiblehomeVisible return type SETHOMEVISIBLE homeVisible Expected behavior homeVisible should change from false to true in state but state is not updating Screenshots If applicable add screenshots to help explain your problem Versions ReactBoilerplate current NodeNPM current Browser chrome Description Upgrading dependencies selecting minor and patches using npmcheck breaks tests Steps to reproduce bash git clone depth reactboilerexample npmcheck u details summaryText versionsummary npmcheck u Choose which packages to update Patch Update Backwardscompatible bug fixes hoistnonreactstatics lodash redux babeleslint devDep babelloader devDep babelpluginstyledcomponents devDep coveralls devDep eslintpluginjsxa y devDep jeststyledcomponents devDep offlineplugin devDep webpackcli devDep Minor Update New backwardscompatible features babelpolyfill connectedreactrouter express history react reactdom reactredux reactrouterdom reduxsaga styledcomponents babelcli devDep babelcore devDep babelpluginproposalclassproperties devDep babelpluginsyntaxdynamicimport devDep babelplugintransformmodulescommonjs devDep babelplugintransformreactconstantelements devDep babelplugintransformreactinlineelements devDep babelpresetenv devDep babelpresetreact devDep babelregister devDep babelplugindynamicimportnode devDep circulardependencyplugin devDep compareversions devDep eslintpluginimport devDep eslintpluginprettier devDep eslintpluginreact devDep eslintpluginreduxsaga devDep jestcli devDep ngrok devDep plop devDep prettier devDep reacttestrenderer devDep stylelintprocessorstyledcomponents devDep sreadme webpack devDep webpackdevmiddleware devDep webpackhotmiddleware devDep webpackpwamanifest devDep Major Update Potentially breaking API changes Use caution chalk crossenv immer reactintl sanitizecss babelpluginreactintl devDep compressionwebpackplugin devDep cssloader devDep eslint devDep eslintconfigairbnb devDep eslintconfigairbnbbase devDep eslintconfigprettier devDep eslintpluginreacthooks devDep fileloader devDep imagewebpackloader devDep jestdom devDep lintstaged devDep nullloader devDep reactapppolyfill devDep reacttestinglibrary devDep rimraf devDep styleloader devDep stylelint devDep stylelintconfigrecommended devDep svgurlloader devDep terserwebpackplugin devDep urlloader devDep NonSemver Versions less than caution nodeplop devDep details Then run the following commands Fix linter errors since a few eslint plugins were updated bash npm run linteslintfix Run the tests bash npm run test Output details summaryFailing test outputsummary reactboilerplate pretest pathtoreactboilerexample npm run testclean npm run lint reactboilerplate testclean pathtoreactboilerexample rimraf coverage reactboilerplate lint pathtoreactboilerexample npm run lintjs npm run lintcss reactboilerplate lintjs pathtoreactboilerexample npm run linteslint reactboilerplate linteslint pathtoreactboilerexample eslint ignorepath gitignore ignorepattern internalsscripts reactboilerplate lintcss pathtoreactboilerexample stylelint appjs Browserslist caniuselite is outdated Please run next command npm update reactboilerplate test pathtoreactboilerexample crossenv NODEENVtest jest coverage FAIL apputilstestsinjectSagatestjs s Console consoleerror nodemodulesreacttestrenderercjsreacttestrendererdevelopmentjs Warning It looks like youre using the wrong act around your test interactions Be sure to use the matching version of act corresponding to your renderer for reactdom import act from reactdomtestutils act for reacttestrenderer import TestRenderer from reacttestrenderer const act TestRenderer act consoleerror nodemodulesreacttestrenderercjsreacttestrendererdevelopmentjs Warning It looks like youre using the wrong act around your test interactions Be sure to use the matching version of act corresponding to your renderer for reactdom import act from reactdomtestutils act for reacttestrenderer import TestRenderer from reacttestrenderer const act TestRenderer act consoleerror nodemodulesreacttestrenderercjsreacttestrendererdevelopmentjs Warning It looks like youre using the wrong act around your test interactions Be sure to use the matching version of act corresponding to your renderer for reactdom import act from reactdomtestutils act for reacttestrenderer import TestRenderer from reacttestrenderer const act TestRenderer act consoleerror nodemodulesreacttestrenderercjsreacttestrendererdevelopmentjs Warning It looks like youre using the wrong act around your test interactions Be sure to use the matching version of act corresponding to your renderer for reactdom import act from reactdomtestutils act for reacttestrenderer import TestRenderer from reacttestrenderer const act TestRenderer act injectSaga decorator should propagate props TypeError Cannot read property props of null const props children renderedComponentgetInstance expectchildrenpropstoEqualprops at Objectprops apputilstestsinjectSagatestjs useInjectSaga hook should inject given saga and mode expectjestfntoHaveBeenCalledTimesexpected Expected number of calls Received number of calls expectinjectorsinjectSagatoHaveBeenCalledTimes expectinjectorsinjectSagatoHaveBeenCalledWithtest saga testSaga mode testMode at ObjecttoHaveBeenCalledTimes apputilstestsinjectSagatestjs FAIL apputilstestsinjectReducertestjs s Console consoleerror nodemodulesreacttestrenderercjsreacttestrendererdevelopmentjs Warning It looks like youre using the wrong act around your test interactions Be sure to use the matching version of act corresponding to your renderer for reactdom import act from reactdomtestutils act for reacttestrenderer import TestRenderer from reacttestrenderer const act TestRenderer act consoleerror nodemodulesreacttestrenderercjsreacttestrendererdevelopmentjs Warning It looks like youre using the wrong act around your test interactions Be sure to use the matching version of act corresponding to your renderer for reactdom import act from reactdomtestutils act for reacttestrenderer import TestRenderer from reacttestrenderer const act TestRenderer act injectReducer decorator should propagate props TypeError Cannot read property props of null const props children renderedComponentgetInstance expectchildrenpropstoEqualprops at Objectprops apputilstestsinjectReducertestjs useInjectReducer hook should inject a given reducer expectjestfntoHaveBeenCalledTimesexpected Expected number of calls Received number of calls expectinjectorsinjectReducertoHaveBeenCalledTimes expectinjectorsinjectReducertoHaveBeenCalledWithtest reducer at ObjecttoHaveBeenCalledTimes apputilstestsinjectReducertestjs FAIL internalstemplatesutilstestsinjectSagatestjs s Console consoleerror nodemodulesreacttestrenderercjsreacttestrendererdevelopmentjs Warning It looks like youre using the wrong act around your test interactions Be sure to use the matching version of act corresponding to your renderer for reactdom import act from reactdomtestutils act for reacttestrenderer import TestRenderer from reacttestrenderer const act TestRenderer act consoleerror nodemodulesreacttestrenderercjsreacttestrendererdevelopmentjs Warning It looks like youre using the wrong act around your test interactions Be sure to use the matching version of act corresponding to your renderer for reactdom import act from reactdomtestutils act for reacttestrenderer import TestRenderer from reacttestrenderer const act TestRenderer act consoleerror nodemodulesreacttestrenderercjsreacttestrendererdevelopmentjs Warning It looks like youre using the wrong act around your test interactions Be sure to use the matching version of act corresponding to your renderer for reactdom import act from reactdomtestutils act for reacttestrenderer import TestRenderer from reacttestrenderer const act TestRenderer act consoleerror nodemodulesreacttestrenderercjsreacttestrendererdevelopmentjs Warning It looks like youre using the wrong act around your test interactions Be sure to use the matching version of act corresponding to your renderer for reactdom import act from reactdomtestutils act for reacttestrenderer import TestRenderer from reacttestrenderer const act TestRenderer act injectSaga decorator should propagate props TypeError Cannot read property props of null const props children renderedComponentgetInstance expectchildrenpropstoEqualprops at Objectprops internalstemplatesutilstestsinjectSagatestjs useInjectSaga hook should inject given saga and mode expectjestfntoHaveBeenCalledTimesexpected Expected number of calls Received number of calls expectinjectorsinjectSagatoHaveBeenCalledTimes expectinjectorsinjectSagatoHaveBeenCalledWithtest saga testSaga mode testMode at ObjecttoHaveBeenCalledTimes internalstemplatesutilstestsinjectSagatestjs PASS apputilstestssagaInjectorstestjs s FAIL appcontainersApptestsindextestjs s App should render and match the snapshot expectreceivedtoMatchSnapshot Snapshot name App should render and match the snapshot Snapshot Received ForwardRef ForwardRefAppAppWrapper HelmetWrapper defaultTitleReactjs Boilerplate defertrue encodeSpecialCharacterstrue titleTemplates Reactjs Boilerplate path Switch Footer GlobalStyleComponent ForwardRef ForwardRefAppAppWrapper rendererrenderApp const renderedOutput renderergetRenderOutput expectrenderedOutputtoMatchSnapshot at ObjecttoMatchSnapshot appcontainersApptestsindextestjs snapshot failed FAIL internalstemplatesutilstestsinjectReducertestjs s Console consoleerror nodemodulesreacttestrenderercjsreacttestrendererdevelopmentjs Warning It looks like youre using the wrong act around your test interactions Be sure to use the matching version of act corresponding to your renderer for reactdom import act from reactdomtestutils act for reacttestrenderer import TestRenderer from reacttestrenderer const act TestRenderer act consoleerror nodemodulesreacttestrenderercjsreacttestrendererdevelopmentjs Warning It looks like youre using the wrong act around your test interactions Be sure to use the matching version of act corresponding to your renderer for reactdom import act from reactdomtestutils act for reacttestrenderer import TestRenderer from reacttestrenderer const act TestRenderer act injectReducer decorator should propagate props TypeError Cannot read property props of null const props children renderedComponentgetInstance expectchildrenpropstoEqualprops at Objectprops internalstemplatesutilstestsinjectReducertestjs useInjectReducer hook should inject a given reducer expectjestfntoHaveBeenCalledTimesexpected Expected number of calls Received number of calls expectinjectorsinjectReducertoHaveBeenCalledTimes expectinjectorsinjectReducertoHaveBeenCalledWithtest reducer at ObjecttoHaveBeenCalledTimes internalstemplatesutilstestsinjectReducertestjs FAIL appcontainersHomePagetestsindextestjs s Console consolewarn nodemodulesreactdomcjsreactdomdevelopmentjs Warning componentWillMount has been renamed and is not recommended for use See for details Move code with side effects to componentDidMount and set initial state in the constructor Rename componentWillMount to UNSAFEcomponentWillMount to suppress this warning in nonstrict mode In React x only the UNSAFE name will work To rename all deprecated lifecycles to their new names you can run npx reactcodemod renameunsafelifecycles in your project source folder Please update the following components SideEffectNullComponent HomePage should fetch the repos on mount if a username exists expectjestfntoHaveBeenCalled Expected number of calls Received number of calls Provider expectsubmitSpytoHaveBeenCalled itshould not call onSubmitForm if username is an empty string at ObjecttoHaveBeenCalled appcontainersHomePagetestsindextestjs PASS apputilstestsreducerInjectorstestjs PASS internalstemplatesutilstestsreducerInjectorstestjs PASS appcontainersRepoListItemtestsindextestjs PASS appcontainersLocaleToggletestsindextestjs PASS internalstemplatesutilstestssagaInjectorstestjs PASS appcomponentsReposListtestsindextestjs PASS appcomponentsButtontestsindextestjs PASS internalstemplatescontainersApptestsindextestjs PASS appcontainersFeaturePagetestsindextestjs Console consolewarn nodemodulesreactdomcjsreactdomdevelopmentjs Warning componentWillMount has been renamed and is not recommended for use See for details Move code with side effects to componentDidMount and set initial state in the constructor Rename componentWillMount to UNSAFEcomponentWillMount to suppress this warning in nonstrict mode In React x only the UNSAFE name will work To rename all deprecated lifecycles to their new names you can run npx reactcodemod renameunsafelifecycles in your project source folder Please update the following components SideEffectNullComponent PASS appcomponentsToggletestsindextestjs PASS appcomponentsHeadertestsindextestjs PASS appcontainersFeaturePagetestsListItemTitletestjs PASS appcomponentsFootertestsindextestjs Console consoleerror nodemodulesreacttestrenderercjsreacttestrendererdevelopmentjs Warning It looks like youre using the wrong act around your test interactions Be sure to use the matching version of act corresponding to your renderer for reactdom import act from reactdomtestutils act for reacttestrenderer import TestRenderer from reacttestrenderer const act TestRenderer act PASS appcontainersRepoListItemtestsIssueIcontestjs Console consoleerror nodemodulesreacttestrenderercjsreacttestrendererdevelopmentjs Warning It looks like youre using the wrong act around your test interactions Be sure to use the matching version of act corresponding to your renderer for reactdom import act from reactdomtestutils act for reacttestrenderer import TestRenderer from reacttestrenderer const act TestRenderer act PASS appcontainersHomePagetestssagatestjs PASS appcomponentsLoadingIndicatortestsWrappertestjs PASS internalstemplatescontainersNotFoundPagetestsindextestjs PASS appcontainersNotFoundPagetestsindextestjs PASS appcomponentsLoadingIndicatortestsindextestjs Console consoleerror nodemodulesreacttestrenderercjsreacttestrendererdevelopmentjs Warning It looks like youre using the wrong act around your test interactions Be sure to use the matching version of act corresponding to your renderer for reactdom import act from reactdomtestutils act for reacttestrenderer import TestRenderer from reacttestrenderer const act TestRenderer act PASS internalstemplatescontainersHomePagetestsindextestjs PASS appcontainersFeaturePagetestsListItemtestjs PASS appcontainersLanguageProvidertestsindextestjs PASS appcontainersRepoListItemtestsRepoLinktestjs Console consoleerror nodemodulesreacttestrenderercjsreacttestrendererdevelopmentjs Warning It looks like youre using the wrong act around your test interactions Be sure to use the matching version of act corresponding to your renderer for reactdom import act from reactdomtestutils act for reacttestrenderer import TestRenderer from reacttestrenderer const act TestRenderer act PASS appcomponentsListtestsUltestjs PASS appcomponentsListItemtestsindextestjs PASS apptestsstoretestjs PASS appcomponentsListtestsWrappertestjs PASS appcontainersHomePagetestsInputtestjs PASS internalstemplatesutilstestscheckStoretestjs PASS appcomponentsHeadertestsAtestjs Console consoleerror nodemodulesreacttestrenderercjsreacttestrendererdevelopmentjs Warning It looks like youre using the wrong act around your test interactions Be sure to use the matching version of act corresponding to your renderer for reactdom import act from reactdomtestutils act for reacttestrenderer import TestRenderer from reacttestrenderer const act TestRenderer act PASS appcomponentsHeadertestsImgtestjs Console consoleerror nodemodulesreacttestrenderercjsreacttestrendererdevelopmentjs Warning It looks like youre using the wrong act around your test interactions Be sure to use the matching version of act corresponding to your renderer for reactdom import act from reactdomtestutils act for reacttestrenderer import TestRenderer from reacttestrenderer const act TestRenderer act PASS appcomponentsAtestsindextestjs PASS appcomponentsToggletestsSelecttestjs PASS appcomponentsListItemtestsItemtestjs PASS apptestsi ntestjs PASS appcontainersRepoListItemtestsWrappertestjs PASS appcomponentsImgtestsindextestjs PASS appcomponentsH testsindextestjs PASS appcontainersLocaleToggletestsWrappertestjs PASS appcontainersLanguageProvidertestsselectorstestjs PASS appcontainersHomePagetestsreducertestjs PASS appcomponentsToggleOptiontestsindextestjs PASS internalstemplatestestsi ntestjs PASS appcontainersRepoListItemtestsIssueLinktestjs Console consoleerror nodemodulesreacttestrenderercjsreacttestrendererdevelopmentjs Warning It looks like youre using the wrong act around your test interactions Be sure to use the matching version of act corresponding to your renderer for reactdom import act from reactdomtestutils act for reacttestrenderer import TestRenderer from reacttestrenderer const act TestRenderer act PASS appcontainersLanguageProvidertestsactionstestjs PASS appcontainersApptestsactionstestjs PASS appcomponentsIssueIcontestsindextestjs PASS appcomponentsButtontestsAtestjs PASS appcontainersHomePagetestsselectorstestjs PASS appcomponentsFootertestsWrappertestjs PASS appcontainersApptestsreducertestjs PASS appcontainersApptestsselectorstestjs PASS appcomponentsH testsindextestjs PASS internalstemplatestestsstoretestjs PASS appcomponentsListItemtestsWrappertestjs PASS internalstemplatescontainersApptestsselectorstestjs PASS appcomponentsLoadingIndicatortestsCircletestjs PASS appcomponentsH testsindextestjs PASS appcomponentsListtestsindextestjs PASS appcomponentsButtontestsWrappertestjs PASS appcontainersLanguageProvidertestsreducertestjs PASS appcontainersHomePagetestsCenteredSectiontestjs PASS appcontainersHomePagetestsactionstestjs PASS appcomponentsButtontestsStyledButtontestjs PASS apputilstestsrequesttestjs PASS appcontainersFeaturePagetestsListtestjs PASS appcontainersHomePagetestsSectiontestjs PASS appcontainersHomePagetestsAtPrefixtestjs PASS appcontainersHomePagetestsFormtestjs PASS apputilstestscheckStoretestjs File Stmts Branch Funcs Lines Uncovered Line s All files app configureStorejs i njs reducersjs appcomponentsA indexjs appcomponentsButton Ajs StyledButtonjs Wrapperjs buttonStylesjs indexjs appcomponentsFooter Wrapperjs indexjs messagesjs appcomponentsH indexjs appcomponentsH indexjs appcomponentsH indexjs appcomponentsHeader Ajs HeaderLinkjs Imgjs NavBarjs indexjs messagesjs appcomponentsImg indexjs appcomponentsIssueIcon indexjs appcomponentsList Uljs Wrapperjs indexjs appcomponentsListItem Itemjs Wrapperjs indexjs appcomponentsLoadingIndicator Circlejs Wrapperjs indexjs appcomponentsReposList indexjs appcomponentsToggle Selectjs indexjs appcomponentsToggleOption indexjs appcontainersApp actionsjs constantsjs indexjs reducerjs selectorsjs appcontainersFeaturePage Listjs ListItemjs ListItemTitlejs indexjs messagesjs appcontainersHomePage AtPrefixjs CenteredSectionjs Formjs Inputjs Sectionjs actionsjs constantsjs indexjs messagesjs reducerjs sagajs selectorsjs appcontainersLanguageProvider actionsjs constantsjs indexjs reducerjs selectorsjs appcontainersLocaleToggle Wrapperjs indexjs messagesjs appcontainersNotFoundPage indexjs messagesjs appcontainersRepoListItem IssueIconjs IssueLinkjs RepoLinkjs Wrapperjs indexjs apputils checkStorejs constantsjs historyjs injectReducerjs injectSagajs loadablejs reducerInjectorsjs requestjs sagaInjectorsjs Summary of all failing tests FAIL apputilstestsinjectSagatestjs s injectSaga decorator should propagate props TypeError Cannot read property props of null const props children renderedComponentgetInstance expectchildrenpropstoEqualprops at Objectprops apputilstestsinjectSagatestjs useInjectSaga hook should inject given saga and mode expectjestfntoHaveBeenCalledTimesexpected Expected number of calls Received number of calls expectinjectorsinjectSagatoHaveBeenCalledTimes expectinjectorsinjectSagatoHaveBeenCalledWithtest saga testSaga mode testMode at ObjecttoHaveBeenCalledTimes apputilstestsinjectSagatestjs FAIL apputilstestsinjectReducertestjs s injectReducer decorator should propagate props TypeError Cannot read property props of null const props children renderedComponentgetInstance expectchildrenpropstoEqualprops at Objectprops apputilstestsinjectReducertestjs useInjectReducer hook should inject a given reducer expectjestfntoHaveBeenCalledTimesexpected Expected number of calls Received number of calls expectinjectorsinjectReducertoHaveBeenCalledTimes expectinjectorsinjectReducertoHaveBeenCalledWithtest reducer at ObjecttoHaveBeenCalledTimes apputilstestsinjectReducertestjs FAIL internalstemplatesutilstestsinjectSagatestjs s injectSaga decorator should propagate props TypeError Cannot read property props of null const props children renderedComponentgetInstance expectchildrenpropstoEqualprops at Objectprops internalstemplatesutilstestsinjectSagatestjs useInjectSaga hook should inject given saga and mode expectjestfntoHaveBeenCalledTimesexpected Expected number of calls Received number of calls expectinjectorsinjectSagatoHaveBeenCalledTimes expectinjectorsinjectSagatoHaveBeenCalledWithtest saga testSaga mode testMode at ObjecttoHaveBeenCalledTimes internalstemplatesutilstestsinjectSagatestjs FAIL appcontainersApptestsindextestjs s App should render and match the snapshot expectreceivedtoMatchSnapshot Snapshot name App should render and match the snapshot Snapshot Received ForwardRef ForwardRefAppAppWrapper HelmetWrapper defaultTitleReactjs Boilerplate defertrue encodeSpecialCharacterstrue titleTemplates Reactjs Boilerplate path Switch Footer GlobalStyleComponent ForwardRef ForwardRefAppAppWrapper rendererrenderApp const renderedOutput renderergetRenderOutput expectrenderedOutputtoMatchSnapshot at ObjecttoMatchSnapshot appcontainersApptestsindextestjs FAIL internalstemplatesutilstestsinjectReducertestjs s injectReducer decorator should propagate props TypeError Cannot read property props of null const props children renderedComponentgetInstance expectchildrenpropstoEqualprops at Objectprops internalstemplatesutilstestsinjectReducertestjs useInjectReducer hook should inject a given reducer expectjestfntoHaveBeenCalledTimesexpected Expected number of calls Received number of calls expectinjectorsinjectReducertoHaveBeenCalledTimes expectinjectorsinjectReducertoHaveBeenCalledWithtest reducer at ObjecttoHaveBeenCalledTimes internalstemplatesutilstestsinjectReducertestjs FAIL appcontainersHomePagetestsindextestjs s HomePage should fetch the repos on mount if a username exists expectjestfntoHaveBeenCalled Expected number of calls Received number of calls Provider expectsubmitSpytoHaveBeenCalled itshould not call onSubmitForm if username is an empty string at ObjecttoHaveBeenCalled appcontainersHomePagetestsindextestjs Snapshot Summary snapshot failed from test suite Inspect your code changes or run npm test u to update them Test Suites failed passed total Tests failed passed total Snapshots failed passed total Time s estimated s Ran all test suites npm ERR code ELIFECYCLE npm ERR errno npm ERR reactboilerplate test crossenv NODEENVtest jest coverage npm ERR Exit status npm ERR npm ERR Failed at the reactboilerplate test script npm ERR This is probably not a problem with npm There is likely additional logging output above npm ERR A complete log of this run can be found in npm ERR Usersgablerouxnpmlogs T Zdebuglog details There are still a few tests that are failing I managed to fix most of the tests but Im mainly interested in fixing these two injectSaga decorator should propagate props TypeError Cannot read property props of null const props children renderedComponentgetInstance expectchildrenpropstoEqualprops at Objectprops apputilstestsinjectSagatestjs and FAIL internalstemplatesutilstestsinjectReducertestjs s injectReducer decorator should propagate props TypeError Cannot read property props of null const props children renderedComponentgetInstance expectchildrenpropstoEqualprops at Objectprops internalstemplatesutilstestsinjectReducertestjs Im trying to figure out why renderedcomponentgetInstance gives me null sure thing its one of the updated dependencies Versions ReactBoilerplate d a NodeNPM v Browser na Before opening a new issue please take a moment to review our community guidelines to make the contribution process easy and effective for everyone involved Description A clear and concise description of what the bug is When working on I realized that I was deconstructing the state selector for selectLocale when I shouldnt have been so even though locale was defined as en undefined was being passed to reactintl Despite this error all tests passed successfully It was logged while running the tests since reactintl will fall back to the default locale if it doesnt find the passed parameter but doesnt show up in the tests report Steps to reproduce Steps to reproduce the behavior Attempt to deconstruct useSelectorselectLocale in any component that uses it and run the tests You will see the fallback error message from reactintl but the tests will still be marked as passed Heres the commit where I fixed this for a direct example Commit changes Expected behavior A clear and concise description of what you expected to happen The test should fail if the locale state is defined but is not passed to the relative children component Of course if the locale state is undefined then the error produced by reactintl is accurate and shouldnt result in a failed test Screenshots If applicable add screenshots to help explain your problem locale error pass Versions ReactBoilerplate NodeNPM Browser NA 