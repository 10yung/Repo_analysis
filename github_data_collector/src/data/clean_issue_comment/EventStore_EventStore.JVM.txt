homepage says you support with the current client Whats the most recent release that supports eventstore x I have a persistent subscription and a scala consumer My issue is that no matter what settings I set in the subscription or the client applicationconf I cant seem to get more than inflight messages Here is my code import javautilconcurrentExecutors import rootakkaactorActor ActorLogging ActorSystem Props import eventstoreResolvedEvent import eventstoreakkaPersistentSubscriptionActorManualAck import eventstoreakkaEventStoreExtension LiveProcessingStarted PersistentSubscriptionActor import eventstorecoreEventStream import scalaconcurrentduration import scalaconcurrentExecutionContext Future import scalasysprocess trait Globals implicit val system ActorSystem implicit val ec ExecutionContextfromExecutorExecutorsnewFixedThreadPool object PersistentSubscriptionExample extends App with Globals val actor systemactorOfProps CountPersistentStream val extension EventStoreExtensionsystem val sub systemactorOf PersistentSubscriptionActorprops connection extensionactor client actor streamId EventStreamIdcetest groupName test credentials None settings extensionsettings autoAck false class CountPersistentStream extends Actor with ActorLogging with Globals contextsetReceiveTimeout second def receive Receive case e ResolvedEvent val currentSender sender Future loginfosestreamIdtoString Threadsleep currentSender ManualAckelinkEventdataeventId case LiveProcessingStarted loginfolive processing started I can see that only threads do work at any given time by looking at visualvm Now if I set autoacktrue then all threads will do work If I use the http api curl localhost subscriptions cetesttest embedTryHarder H Accept applicationvndeventstorecompetingatomjson then I do get inflight Am I missing some configuration No need to maintain an example project if we can use Title page says it should be If EventStore receive the event twice due to a timeout or whatever the future received for the EsConnection is null it would be nice have an more detailed response like an object to represent it Id like to send a NotAcknoledge message when for some reason I need the message to be reprocessed by a persistent subscriber instead of only wait for the timeoutis there a way Hi Im looking for a way to force the library to resolve DNS name after it changes To recreate Start ES locally listening on localhost Add eventstore to etchosts Start ConnectionActor connecting to eventstore domain Stop eventstore to start getting Connection failed to eventstore errors Change etchosts entry so eventstore points to or whatever PROBLEM ConnectionActor uses the resolved IP address and never tries Whats the easiest way to force it to resolve again Thanks Does anyone know if using competing consumers with persistent subscriptions is possible via the akka streams interface I have the system bycategory projection running thus theres a stream for each category looking like cesomething But when I try to subscribe to it I get an error eventstoretcpConnectionActor Cannot deliver SubscribeToStreamCompleted SomeEventNumber client not found for correlationId cc b b a ce d aab unsubscribing Am I missing something Im using version Problem When EventStoreJVM client subscribes too early before EventStore is fully functional has built all of its indexes etc the subscription never gets notified of new additions to the stream The problem might be in the client or might be in the server but since I am not familiar with the internals it is hard for me to gauge Versions akka akkahttp eventstoreclient eventstore How to reproduce See Start a fresh EventStore instance In parallel Execute ListenForChanges will display just the th element to acknowledge it saw everything that was created by PushData Execute PushData will create elements Stop EventStore rm rf varlibeventstoreindex Start EventStore Wait for EventStore to have recreated all of its indexes tail f varlogeventstoreDATElog Execute PushData will create another elements in the stream At that point ListenForChanges should be displaying all of the new elements But nothing happens Alternative execution paths The code will work fine in the following cases if PushData is reexecuted without steps to restart EventStore and remove indexes The code will generally not sure how reliably work fine if the indexes are not removed but EventStore is restarted Note the generally since I am quite sure I have observed the same issue in production without manually removing indexes but EventStore might have decided to rebuild its indexes for some reason 