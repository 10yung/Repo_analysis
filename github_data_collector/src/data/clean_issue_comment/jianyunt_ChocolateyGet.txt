Refactor of the module with several feature additions Added Searchinginstallingmanaging multiple Chocolatey sources DSC Compatibility including additional package arguments Upgrade packages using the latest required version keyword Thanks to matthewprenger for help with this Changed To facilitate readability broke up main module file into several function files Grouped by public functions used by PackageManagement vs private functions that contains much of the shared logic for interacting with chocoexe Common logic such as building commands sending them to chocoexe and parsing results are consolidated across multiple PackageManagement cmdlets into a single set of helper functions Fixed GetPackage no longer lists chocolatey twice Improved performance when downloading large packages with embedded installers Removed With Chocolateymanaged upgrades via the provider now available the package provider no longer unilaterally upgrades Chocolatey on invocation if already installed No longer displays progress bars in order to simplify passing data between functions via the pipeline in a way thats idiomatic to PowerShell Since PackageManagement and corresponding DSC resource dont natively support the concept of an UpgradePackage cmdlet we could expose the concept of an upgrade with the use of a special keyword passed to GetPackages RequiredVersion parameter that triggers FindPackages logic to check for the latest version available before checking to see if that version is already installed The DSC LCM could in effect keep the package continually up to date powershell CLI example GetPackage python ProviderName chocolateyget RequiredVersion latest powershell DSC Example PackageManagement PythonChoco Name python RequiredVersion latest ProviderName chocolateyget Probably could only work if one and only one source is available to the provider configured in chocolatey Chocolateyorg by default Example enhancement based on my multisource branch ethanbergstrom bfa a baa ceb a bde e aa c fe with help from matthewprenger Will hold on PR until after the multisource PR is resolved Fixed in when I installed chocolateyget it showed me some error I want to know whether it will be a critical issue or not any advise Hash for package ChocolateyGet does not match hash provided from the server bellow is the full output xxxxxxxx PS C InstallPackageProvider ChocolateyGet verbose VERBOSE Using the provider Bootstrap for searching packages VERBOSE Finding the package BootstrapFindPackage ChocolateyGet VERBOSE Using the provider PowerShellGet for searching packages VERBOSE The Repository parameter was not specified PowerShellGet will use all of the registered repositories VERBOSE Getting the provider object for the PackageManagement Provider NuGet VERBOSE The specified Location is and PackageManagementProvider is NuGet VERBOSE Searching repository for VERBOSE Total package yield for the specified package ChocolateyGet VERBOSE Performing the operation Install Package on target Package ChocolateyGet version from PSGallery VERBOSE The specified module will be installed in C Program Files WindowsPowerShell Modules VERBOSE The specified Location is NuGet and PackageManagementProvider is NuGet VERBOSE Downloading module ChocolateyGet with version from the repository VERBOSE Searching repository for VERBOSE InstallPackage nameChocolateyGet version destinationC Users tlsadmin AppData Local Temp VERBOSE DownloadPackage nameChocolateyGet version destinationC Users tlsadmin AppData Local Temp ChocolateyGet C hocolateyGetnupkg uri VERBOSE Downloading VERBOSE Completed downloading VERBOSE Completed downloading ChocolateyGet VERBOSE Hash for package ChocolateyGet does not match hash provided from the server VERBOSE InstallPackageLocal nameChocolateyGet version destinationC Users tlsadmin AppData Local Temp VERBOSE Catalog file ChocolateyGetcat is not found in the contents of the module ChocolateyGet being installed VERBOSE Module ChocolateyGet was installed successfully to path C Program Files WindowsPowerShell Modules ChocolateyGet powershell PS C getpackage ProviderName chocolateyget Name Version Source ProviderName Chocolatey v ChocolateyGet chocolatey ChocolateyGet chocolateycoreextension ChocolateyGet pip ChocolateyGet python ChocolateyGet python ChocolateyGet Should be able to fix by passing the r flag to choco in GetInstalledPackages and changing the regex Example fix based on current version of package ethanbergstromc a e e c be aad e c bc powershell PS C getpackage ProviderName chocolateyget Name Version Source ProviderName chocolatey ChocolateyGet chocolateycoreextension ChocolateyGet pip ChocolateyGet python ChocolateyGet python ChocolateyGet Will hold on PR until after after the multisource PR is resolved Fixed in It looks like some packages are not being found in the repo For example Vivaldi If I run choco search vivaldi I see that the package is available and can install it If I run packagemanager providername chocolateyget name vivaldi it tells me no match was found This is only the case for some packages though I was able to find and install kdevelop just fine When using ChocolateyGet behind a proxy server in some situations its not working While chocoexe can be easily configured to use a proxy the ChocolateyGet Module cant Function InstallChocoBinaries uses InvokeWebRequest at some point which doesnt work behind a proxy server per default While this is not a big deal when using ChocolateyGet in normal PS Scripts as we can set the proxy using systemnetwebrequest defaultwebproxy globally this is not possible when using ChocolateyGet within a PowerShell DSC Configuration as LCM has no option to set a proxy as far as I know That means there is no way to make it work within a DSC Configuration behind a proxy Recommendation Allow the ChocolateyGet Module to receive AdditionalParameters so it can be set using the same approach as other package providers eg NuGet Note the AdditionalParameters Dictionary that can be passed thanks Try this InstallPackage name gifcam providername chocolateyget force Vs choco install gifcam It appears that theres another prompt asking whether to proceed if theres no checksum In this case gifcam is not installed if attempted to be installed via InstallPackage Using GetPackageSource doesnt show chocolateygets source Every time I install a package it asks about the fact that is untrusted Basically in the title Is this provider better After testing it for a bit I found that it worked in cases where the original prototype chocolatey provider didnt work One that involved zip archiving and the other that had a in its package name Can we know where binaries and command line executables are stored 