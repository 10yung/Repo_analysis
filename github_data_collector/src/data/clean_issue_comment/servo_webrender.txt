Bumps webpackdevserver from to details summaryRelease notessummary Sourced from webpackdevservers releases v a name a Bug Fixes binoptions correct check for color support optionscolor b package update spdy v assertion error a a Server correct node version checks a b Server mime type for wasm in contentBase directory fadae d add url for compatibility with webpack dd a check origin header for websocket connection b ca v Bug Fixes options add writeToDisk option to schema d f package update sockjsclient v urlparse vulnerability e Server set tlsDEFAULTECDHCURVE to auto c def v No release notes provided v Bug Fixes package yargs security vulnerability dependencies fb c utilscreateLogger ensure quiet always takes precedence optionsquiet a ca v Bug Fixes Server dont use spdy on node v ab eb v Bug Fixes trtable truncated details details summaryChangelogsummary Sourced from webpackdevservers changelog Bug Fixes binoptions correct check for color support optionscolor b package update spdy v assertion error a a Server correct node version checks a b Server mime type for wasm in contentBase directory fadae d add url for compatibility with webpack dd a check origin header for websocket connection b ca a name a Bug Fixes options add writeToDisk option to schema d f package update sockjsclient v urlparse vulnerability e Server set tlsDEFAULTECDHCURVE to auto c def a name a a name a Bug Fixes package yargs security vulnerability dependencies fb c utilscreateLogger ensure quiet always takes precedence optionsquiet a ca a name a Bug Fixes Server dont use spdy on node v ab eb trtable truncated details details summaryCommitssummary See full diff in compare view details br Dependabot compatibility score Dependabot will resolve any conflicts with this PR as long as you dont alter it yourself You can also trigger a rebase manually by commenting dependabot rebase dependabotautomergestart dependabotautomergeend details summaryDependabot commands and optionssummary br You can trigger Dependabot actions by commenting on this PR dependabot rebase will rebase this PR dependabot recreate will recreate this PR overwriting any edits that have been made to it dependabot merge will merge this PR after your CI passes on it dependabot squash and merge will squash and merge this PR after your CI passes on it dependabot cancel merge will cancel a previously requested merge and block automerging dependabot reopen will reopen this PR if it is closed dependabot ignore this patchminormajor version will close this PR and stop Dependabot creating any more for this minormajor version unless you reopen the PR or upgrade to it yourself dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency unless you reopen the PR or upgrade to it yourself dependabot use these labels will set the current labels as the default for future PRs for this repo and language dependabot use these reviewers will set the current reviewers as the default for future PRs for this repo and language dependabot use these assignees will set the current assignees as the default for future PRs for this repo and language dependabot use this milestone will set the current milestone as the default for future PRs for this repo and language You can disable automated security fix PRs for this repo from the Security Alerts page details The last release was almost a year ago and it seems like theres been some breaking changes since then and a ton of work since then as well including important bugfixes Im currently using a git revision because of how old the current release is but if I ever want to publish my crate to cratesio it seems like Id have to downgrade to an older version of webrender Wrench still depends on an older smallvec this can be fixed if we update winit and glutin but its a bunch of work I wonder if the finitist framework of rational trigonometry could allow some new optimizations More information at the wiki section Computation complexity and efficiency I dont have much knowledge about the subject but I naively wonder if it could be useful to webrender Otherwise feel free to close the issue Servo now contains a workaround for this that splits display items but its fragile contains hardcoded limits and I think its probably best for WR to split up the runs itself More details This removes the use of ipcchannel I would love to remove the SerializeDeserialize lies as well but last time I tried to do that proved harder than I anticipated Now that derivemore is out derivative through glutin but latest glutin doesnt use derivative anymore and serdederive are the only two remaining things that still depend on syn Method peekfromuninit creates a mut T where the T is uninitialised this is UB AFAIK Under certain scenarios in Servo see the RenderBackend thread might panick at HitTestergetpipelineroot with a no entry found for key message due to the fact that at the time the function gets called pipelineid is not in the pipelinerootnodes hash map Having a check for containment would remove the panick HitTestergetpipelineroot is only used in one single place which makes it easy to change it return an Option However Im not very familiar with webrender and whether this is an unrecoverable error or not 