Ive read over the documentation for ION Roller including the API documentation to lists the various supported EB Config sections Ive already read through the source code a bit too and found a generated customconfig It appears that the ION Roller configuration file supports ebextensions via a single file Meaning if I read typical documentation for setting up logging to Cloudwatch and stuff all the relevant sections into my ION Roller configuration itll apply them as ebextensions customconfig The problem is that Im trying to use and more specificly the nodenginx logging section as a base example for building out the cloudwatch configuration However if the is accurate Im unlike able to using sections like Mapping Output Thats not to mention that in this case Id rather it be the same across all services deployed so for DRY purposes would rather store this information external to the individual configuration file I guess what Im asking is if theres another way to type in cloud formation EB configurations that ION Roller will use as a base or is the config file it Im following the documentation on Setting up ION Roller using ION Roller CLI The default Solution Stack threw an error because it no longer exists This was compounded by the fact that the template referenced on the above page does not include a ebstack property Fortunately the next step on deploying your own service has it listed and I was able to update to current AWS solution stack Heres the error when running ionroller release ionroller emergencydeploy Exception in thread main comamazonawsAmazonServiceException No Solution Stack named bit Amazon Linux v running Docker found Service AWSElasticBeanstalk Status Code Error Code InvalidParameterValue Request ID e ff b a e e d d f at comamazonawshttpAmazonHttpClienthandleErrorResponseAmazonHttpClientjava at comamazonawshttpAmazonHttpClientexecuteOneRequestAmazonHttpClientjava at comamazonawshttpAmazonHttpClientexecuteHelperAmazonHttpClientjava at comamazonawshttpAmazonHttpClientexecuteAmazonHttpClientjava at comamazonawsserviceselasticbeanstalkAWSElasticBeanstalkClientinvokeAWSElasticBeanstalkClientjava at comamazonawsserviceselasticbeanstalkAWSElasticBeanstalkClientcreateEnvironmentAWSElasticBeanstalkClientjava at ionrollerdeploymentebEBSDeployeranonfuncreateEnvironment anonfunapply applyEBSDeployerscala at ionrollerdeploymentebEBSDeployeranonfuncreateEnvironment anonfunapply applyEBSDeployerscala at scalazconcurrentTaskanonfundelay applyTaskscala at scalazconcurrentTaskanonfundelay applyTaskscala at scalazconcurrentTaskanonfunsuspend anonfun applyTaskscala at scalazconcurrentTaskanonfunsuspend anonfun applyTaskscala at scalazconcurrentTaskTryTaskscala at scalazconcurrentTaskanonfunsuspend applyTaskscala at scalazconcurrentTaskanonfunsuspend applyTaskscala at scalazconcurrentFuturestepFuturescala at scalazconcurrentFuturelistenFuturescala at scalazconcurrentFutureanonfunlisten anonfunapply applyFuturescala at scalazconcurrentFutureanonfunlisten anonfunapply applyFuturescala at scalazFreeanonfunmap applyFreescala at scalazFreeanonfunmap applyFreescala at scalazFreeresumeFreescala at scalazFreego Freescala at scalazFreegoFreescala at scalazFreerunFreescala at scalazconcurrentFutureanonfunapply anon callFuturescala at scalazconcurrentFutureanonfunapply anon callFuturescala at javautilconcurrentFutureTaskrunFutureTaskjava at javautilconcurrentThreadPoolExecutorrunWorkerThreadPoolExecutorjava at javautilconcurrentThreadPoolExecutorWorkerrunThreadPoolExecutorjava at javalangThreadrunThreadjava So I think we need to either update the solution stack to bit Amazon Linux v running Docker as listed here Or add the ebstack property to the template in the documentation how can i configure the region a service is deployed to i want ionroller itself not deployed in virginia how is this possible Its not obvious to me how to see the events for a service other than to go into the event stream page and filter by its name I think it would be helpful to have a link to from the service page directly to the events page with that filter already filled out Initially this could be a longer delay after first instance is replaced with the new version If current release is red try releasing the same again with a new configuration system still waits for old release to become healthy You need to explicitly drop the previous release Needs thought about how to make this clearer or change workflow When setting up a service for the first time it may take a few iterations before one gets a working configuration Currently the user has to add force to remove each failed environment it would be easier if this was not required We should keep track of the number of environments created and limit the rate in case of bugsetc 