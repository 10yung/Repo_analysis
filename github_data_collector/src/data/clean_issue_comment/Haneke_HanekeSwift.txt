I never see this in my own testing but Sentry crash reports show that some realworld users are getting the following issue I wonder how I continue to diagnose it TLDR Fetch NetworkFetcher calls the success closure but the data is apparently not ok swift myCachefetchURL url failure error in printImage fetch error Stringdescribing error setting image url success data in printloaded image url if let image UIImagedata data selfscrollViewdisplayimage image else This is where I want to figure out why data is not actually the image data Would it make sense to remove this item from the cache here and have it redownload Questions Ideas Is Haneke caching the http response for XX or XX results Then I might occasionally get a bad result from a sad server into the cache Some users could have a lot of images Could this be a timing issue where the app gets a memory warning and the data is cleared before my code uses it to make a UIImage Are there any plans to distribute this library via the Swift Package Manger Can you update for swift thanks This pull request makes sure that before a file is written to the disk the folders in the path it should be written to exists All the needed intermediate directories are created so that the data can be written to the file without failing due to a non existing directory Some already mentioned in and that after the removeAll method of a cache is called the folders are deleted but not recreated directly So the writes after calling removeAll are failing with an error I currently have an AuthFetcher that I use when requesting images that require headers set swift import Haneke class AuthFetcherT DataConvertible NetworkFetcherT private lazy var httpAdditionalHeaders HTTPHeader override var session URLSession let configuration URLSessionConfigurationdefault configurationhttpAdditionalHeaders httpAdditionalHeaders return URLSessionconfiguration configuration initurl URL headers String String superinitURL url selfhttpAdditionalHeaders headers Is it possible to attach headers when using the shorter imageViewhnksetImageFromURLurl syntax When using AuthFetcher I seem to be losing performance I suspect it is bypassing the memory cache and going straight to disk as calling hnksetImageFromURL on non auth images is excellent swift private var storage CacheData return CacheDataname offlinestore func remoteWithAuthat url URL completion escaping URL storagefetchfetcher AuthFetcherHanekeDataurl url headers oauthSvcauthHeaders onSuccess weak self stream in selfhandleDataStreamstream stream url url completion completion private func handleDataStreamstream Data url URL completion escaping URL guard let path URLstring DiskCachebasePath else return let cached DiskCachepath pathabsoluteStringpathforKey urlabsoluteString let file URLfileURLWithPath cached if existsat cached try streamwriteto file options atomicWrite completionfile please its crach on swift and ios please fix it Honestly why would you use this framework You can easily reproduce this logic by using local cache and about lines of code This adds support for SwiftPM manifest based dependency managers Specifically this adds support for installing via Accio but will probably also work with SwiftPM once its integrated into Xcode Please note that this project is part of Accios official integration tests within the Demo project When I am trying to integrate updated library which is supporting to swift version through cocopods It always fetching older version of the library instead of the updated version Could you please release the new version of the framework that is which is supporting to swift version via cocoapods