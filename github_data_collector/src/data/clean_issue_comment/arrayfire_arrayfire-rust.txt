 Right now arrayfire has to be used by linking to the DLL Since the only parts of arrayfire that are included in the Rust bindings are BSD clause there should be no problem statically linking arrayfire Is it possible that we could choose whether or not arrayfire is statically linked to ease distribution Also is there any downside to just always statically linking arrayfire I feel like that would be more inline with what the Rust community expects adding a crate to your Cargotoml should just work The following functions currently return f values irrespective of the input Array datas native type sumall sumnanall productall productnanall minall maxall alltrueall anytrueall countall iminall imaxall The above functions need to return the appropriate type value instead of f This change is probably going to be easier to implemented once Typed Arrays are implemented Ive found that calling SVD functions more than once in the same program cause it to stall and start eating up lots of memory It seems to be independent of whether you use svd or svdinplace It is also independent of whether you use the same array repeatedly or not An example program rust extern crate arrayfire as af use af fn main setbackendBackendCPU for x in let w u let h x as u let dims Dim new w h let mut d Array randuf dims let mut e Array randuf dims if x println ddims else println edims printlnbefore svd if x let u s vt svd mut d else let u s vt svd mut e printlnafter svd On my Mac with GB of RAM the second iteration of the loop hangs and starts eating up RAM Im using ArrayFire from the installer Rust and the latest version of this crate from cratesio I will be able to test on a Linux machine later Closely related to but it might be nice if there was a sort of translation table for people coming from Matlab Matlab arrayfirerust a zeros let mut a constantf Dim new b a let mut b a f c let mut c rangef Dim new d let mut d rangef Dim new e d c let mut e d c f e g maxc g Here is an example of this for NumPy Apart from improving the code examples the following improvements are also required perhaps a table with input combinations and corresponding output type for constantt x 