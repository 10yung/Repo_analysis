Xcodebuild supports dry runs with the n flag That seems like itd speed things up When I try to run periphery on my Xcode Swift project it aborts quickly with this error message jakobmkwnh Pix periphery scan Welcome to Periphery This guided setup will help you select the appropriate configuration for your project Inspecting project configuration error The element XCSwiftPackageProductDependency is not supported after installing from HomeBrew on Catalina I get this error when I try to run periphery Guessing it s something to do with code signing Projects are not found within a workspace if theyre inside a container group backed by a folder xcworkspace Parent Project Periphery Bug Reportxcodeproj Group Modules Nested Project Nested Framework Modulexcodeproj Steps to reproduce Download peripherybugnestedprojectszip Unarchive ZIP file Run periphery scan within the uncompressed same folder containing Periphery Bug Reportxcworkspace Expected result periphery to pick up all targets across both projects Periphery Bug ReportPeriphery Bug Reportxcodeproj ModulesNested Framework ModuleNested Framework Modulexcodeproj Actual result periphery fails with an error not finding Nested Framework Modulexcodeproj log warning No such project exists at peripherybugnestedprojectsNested Framework ModuleNested Framework Modulexcodeproj referenced by peripherybugnestedprojectsPeriphery Bug Reportxcworkspace The path is incorrect missing the Modules group container location as part of the full path to the project Instead it should look as follows patch peripherybugnestedprojectsNested Framework ModuleNested Framework Modulexcodeproj peripherybugnestedprojectsModulesNested Framework ModuleNested Framework Modulexcodeproj error The element XCSwiftPackageProductDependency is not supported Inspecting project configuration Xcode error SourceKit index request failed for file Loaderswift Loaderswift is not part of the input files What to do for resolved this error Example code class MyClass var myVar AnotherClass func callback sender AnotherClass if sender myVar doOnMatch else doOnMismatch func doOnMatch reported as unused func doOnMismatch reported as unused Its hard to say what exactly triggers the warning in the example below There is a static generic function on a protocol extension checking for a type and based on the type return an instance of UIViewController either from XIB or Storyboard The result stays the same if I have those XIB and Storyboard defined of course When I execute this code in my example project it prints descriptions of all views which proves they were loaded protocol P static func instantiateT UIViewController T where T P static var identifier String get Warning here protocol P P static var storyboard String get Warning here extension P static var identifier String Warning here return Stringdescribing self extension P static func instantiateT UIViewController T where T P guard let storyboard Tself as P Typestoryboard else return TnibName Tidentifier bundle nil guard let result UIStoryboardname storyboard bundle nilinstantiateViewControllerwithIdentifier Tidentifier as T else fatalErrorNo expected controller found return result class C UIViewController P class C UIViewController P static var storyboard String return Main Warning here class C UIViewController P static var storyboard String return Main Warning here class ViewController UIViewController override func viewDidLoad superviewDidLoad let c C C instantiate let c C C instantiate let c C C instantiate printc view printc view printc view I am getting warnings for both unused tableView and section when implementing UITableViewDataSource method tableView tableView UITableView numberOfRowsInSection section Int Int Great tool However I am finding some issues with functions called from optionals if let container DetailContainerView parent as DetailContainerView containerupdateToolbarenable enable updateToolbarenable Bool function on DetailContainerView is marked as unused 