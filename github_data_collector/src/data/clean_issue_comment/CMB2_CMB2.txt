 Description General once over of the textareacode field to fix all logged issues as well as a couple of unlogged limitations Fixes Fixes Support fields with in the name Fix field styling and saving with Gutenberg is active Is your feature request related to a problem Please describe I have been working on a custom post type that has different sections for different departments eg Sales Marketing Inventory etc within the single post and I need each section to be locked after each manageremployee has entered their information All of this information is set up using CMB Fields Describe the solution youd like I am picturing a signature field ideally a text field for the person to type their name and a date picker field to select the date the mangeremployee is signing that section that could be assigned to a section of fields After filling out their fields signing and dating their section entering their name in the signature field and selecting a date they would update the post and it would lock their fields and signature from being edited by anyone else The process would look something like this When creating fields you could assign them to a section Each section would require a text field to act as a signature box Each section would require a date field next to the signature box to select the date of signature If the signature field date picker had input when the post is updated it would lock itself and all of the fields in its section from being editable I am open to ideas about how this would work It might be easier to lock the section based on the current user that is signed in as it would be assumed that all users would be required to have an account on the site I would think it would also need some feature to undo accidental submissions Maybe any administrators on the site could unlock a locked section if a revision was needed Describe alternatives youve considered I have spent significant time looking at other plugins and current features that CMB offers and nothing has what I am looking for I am open to all opinions and suggestions on how we could get this into CMB I think it would be a killer feature with a significant number of applications I am open to all ideas about how we can get something like this in the works Additional context Add any other context or screenshots about the feature request here I have a custom repeatable select element in a sortable group When I have multiple groups with a different number of select options added in each group and I change the order of those groups then some selected options dont move For example if group has select options set and group has options set then after changing order group now in the first position has of the options and group now in second position has options set rd option is empty and options are same as in group before changing group order Wordpress version CMB version Steps to reproduce Not currently tested on the develop branch Add multiple groups in metabox Add different number of repeatable select options in each group Move a group up or down See that only some of the filled in select options moved with the group Screenshots Before changing group order before reorder After changing group order after reorder CMB Field Registration Code php Define sortable group metabox and field configurations function pagesortablegroupmetabox Initiate the metabox sortablegroupmetabox newcmb box id sortablegroupmetabox title Sortable Group Metabox objecttypes page Post type context normal priority high shownames true Show field names on the left sortablegroup sortablegroupmetaboxaddfield id sortablegroup type group options grouptitle Sortable group addbutton Add group removebutton Delete group sortable true Get custom taxonomy terms for select options regularselect getterms taxonomy customtaxonomy hideempty true regularselectoptions Format custom taxonomy data for select foreach regularselect as selectitem regularselectoptions selectitemtermid selectitemname sortablegroupmetaboxaddgroupfieldsortablegroup name Regular select id groupcategory taxonomy customtaxonomy Enter Taxonomy Slug type select options regularselectoptions sortablegroupmetaboxaddgroupfieldsortablegroup name Repeatable select id groupitems type select showoptionnone true repeatable true sortable true default options addactioncmb admininit pagesortablegroupmetabox Create optgroups for repeatable select function cmbrepeatableselectoptgroupsargs defaults fieldobject fieldtypesobject Only do this for the repeatable select if strposfieldtypesobjectid groupitems false return args Get custom post type posts for select options repeatableselectitems getposts posttype customposttype poststatus publish postsperpage orderby menuorder order ASC suppressfilters false repeatableselectoptions Group options by custom taxonomy name foreach repeatableselectitems as selectitem optiontaxonomy getthetermsselectitemID customtaxonomy if optiontaxonomy countoptiontaxonomy repeatableselectoptions optiontaxonomy name selectitemID selectitemposttitle else repeatableselectoptions selectitemID selectitemposttitle Sort groups alphabetically ksortrepeatableselectoptions Defaults savedvalue fieldobjectescapedvalue value savedvalue savedvalue fieldobjectargsdefault repeatableselectoptionsstring repeatableselectoptionsstring fieldtypesobjectselectoption label None selected default value checked value Create optgroups foreach repeatableselectoptions as grouplabel group if strlengrouplabel repeatableselectoptionsstring optgroup label grouplabel foreach group as key label repeatableselectoptionsstring fieldtypesobjectselectoption label label value key checked value key if strlengrouplabel repeatableselectoptionsstring optgroup Replace select options value defaults options repeatableselectoptionsstring return defaults addfiltercmb selectattributes cmbrepeatableselectoptgroups My Environment Tested with Google Chrome on multiple Windows and OS X computers Props to rubengc Complements Provide a general summary of your changes in the Title above Description Add support for multiple attribute fixing the name adding when there isnt already defined Motivation and Context Motivation to provide CMB with the multiple feature out of box easily Fixes Risk Level adminonly Testing procedure You can test by adding the multiple attribute to a select field type Types of changes Bug fix nonbreaking change which fixes an issue Checklist Go over all the following points and put an x in all the boxes that apply If youre unsure about any of these dont hesitate to ask Were here to help x My code follows the code style of this project x My code and pull requests meets the Contributing guidelines Props to rubengc Didnt found this in a PR format so created this one Please advise Provide a general summary of your changes in the Title above Description Add support for attribute multiple showing correctly the multiple elements saved on database Motivation and Context Motivation to provide CMB with the multiple feature out of box easily Fixes Risk Level adminonly Testing procedure You can test by adding the multiple attribute to a select field type Types of changes Bug fix nonbreaking change which fixes an issue Checklist Go over all the following points and put an x in all the boxes that apply If youre unsure about any of these dont hesitate to ask Were here to help x My code follows the code style of this project x My code and pull requests meets the Contributing guidelines It was announced on makewordpressorg that there are some significant CSS changes coming in specifically regarding form styling in an effort to make the admin more accessible They have specific suggestions regarding making your plugin styles more compatible remove any fixed heights flexible heights are the WordPress recommended standard and one of the main goals of the Admin CSS changes remove any custom top and bottom padding values remove any custom lineheight values I testing my plugin that uses CMB for its options panel and while its not broken the text inputs are a bit too tall and I imagine there may be a few other imperfections I just wanted to put this out there If I can find some time I might even be willing to see about a PR myself Does anyone have any boilerplate code laying around that implements all the fields in various contexts Provide a general summary of your changes in the Title above Description Describe your changes in detail Motivation and Context Why is this change required What problem does it solve If it fixes an open issue please link to the issue here Fixes Risk Level Document the potential risks for this PR Eg adminonly minimal risk or major user feature high risk Testing procedure Please describe in detail how you tested your changes Include details of your testing environment and the tests you ran to see how your change affects other areas of the code etc Types of changes What types of changes does your code introduce Remove those that dont apply Bug fix nonbreaking change which fixes an issue New feature nonbreaking change which adds functionality Breaking change fix or feature that would cause existing functionality to change Checklist Go over all the following points and put an x in all the boxes that apply If youre unsure about any of these dont hesitate to ask Were here to help My code follows the code style of this project My code and pull requests meets the Contributing guidelines Screenshots Provide screenshots if possible Expected Behavior If youre suggesting a changeimprovement tell us how it should work Add an option to set a callback function for determine whether the group field should be closed or not Callback function should return true or false Actual Behavior If suggesting a changeimprovement explain the difference from current behavior Currently there is an option to set a closed parameter to true or false to set the group field to be open or closed upon rendering but no way to dynamically determine if a group should be open or closed Possible Solution Not required but suggest a fixreason for the bug or ideas how to implement the addition or change See attached pull request I apologize I am not sure how to update tests Use Case I have a number of group fields which the user may enter information for or leave empty On editing the form Id like to have the groups which have information entered to be rendered open by default and the groups which are blank be rendered closed by default Being able to set a callback rather than a static truefalse made this simple This commit seems to have introduced an issue with the character counter width The problem seems to be this line The widths in my testing are all way too narrow to see the actual count Perhaps something to do with the styling on the site Im testing it on Hard to tell but Id imagine the easiest approach is to simply remove this line better too wide than not wide enough Or add an option to disable it This PR fixes the issue with CPT field values being empty Description Describe your changes in detail Motivation and Context Fixes Risk Level No risk Types of changes Bug fix nonbreaking change which fixes an issue Checklist x My code follows the code style of this project x My code and pull requests meets the Contributing guidelines 