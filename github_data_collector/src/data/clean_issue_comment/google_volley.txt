Check full question Create a new MutipartRequest file in comandroidvolleytoolbox package for multipart request Update how to use MutipartRequest in Readmemd Take requests priority into account in WaitingRequestManager to make sure higher priority requests dont wait for lowe priority requests to be completed Using the last release of library I face this line in build output after successful build INFO API variantgetJavaCompiler is obsolete and has been replaced with variantgetJavaCompileProvider It will be removed at the end of For more information see To determine what is calling variantgetJavaCompiler use PandroiddebugobsoleteApitrue on the command line to display more information Affected Modules volley The project compiles and runs correctly Im using the last version of library and this line is at the start of the buildgradle file import netltgtgradleerrorproneCheckSeverity However the world import CheckSeverity is in red color and the error message says Cannot resolve symbole CheckSeverity The project compiles and run correctly It would be awesome if volley exposed a set of suspend functions for making requests that work well with Kotlin coroutines Sure I can roll my own solution but it would be awesome to have an officially supported one example on xml comandroidvolleytoolboxNetworkImageView androidlayoutwidth dp androidlayoutheight dp androidscaleTypecenterCrop and set the image url to The resulted image is not cropped to square and it keeps the aspect ratio of the original image I think the bug may be in this code in ImageRequestjava If necessary scale down to the maximal acceptable size if tempBitmap null tempBitmapgetWidth desiredWidth tempBitmapgetHeight desiredHeight bitmap BitmapcreateScaledBitmaptempBitmap desiredWidth desiredHeight true tempBitmaprecycle else bitmap tempBitmap I think maybe it was supposed to use mMaxWidthmMaxHeight instead of desiredWidthdesiredHeight Thanks Instead of just arrays Method threw javalangNullPointerException exception Cannot evaluate comandroidvolleytoolboxPoolingByteArrayOutputStreamtoString i get a NPE when use MockWebServer to mock a post request java server new MockWebServer final Dispatcher dispatcher new Dispatcher Override public MockResponse dispatchRecordedRequest request switch requestgetPath case apixxxxx return new MockResponsesetResponseCode setBodybad request case apixx return new MockResponsesetResponseCode setBodyversion default return new MockResponsesetResponseCode serversetDispatcherdispatcher CacheDispatcher threads should not be limited to It should be customizable as per the need of application If an application serves most of the request from cache number of cache dispatcher threads should be customizable