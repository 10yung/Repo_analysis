Hi Ralf I guess since ODFvolume should return fraction of an odf there seems to be an issue with Laue groups symmetry Example cs crystalSymmetry oref orientationbyEuler cs odf unimodalODForientationbyEuler cs halfwidth degree cs crystalSymmetry m oref orientationbyEuler cs odf unimodalODForientationbyEuler cs halfwidth degree volumeodf oref degree volumeodf oref degree ans ans This factor of two appears also for uniFormODF kernel and Fourier odfs but I could not pinpoint the common issue apart form SO space of a proper group being double the one of the corresponding Laue group Cheers R diger Hello MTEX Team doing some investigations into misorientations and MDFs I got different results by volume calculations using volume with an vector of misorientations or volume of MDF calculated out of this vector see below cs crystalSymmetry mmm fits nearly to the system I use mori orientationbyAxisAngleMiller csUVTW degree ori orientationbyEuler cs rmori invorirand csorirand cs rmdf calcMDFrmori volumermorimori degree volumermdfmori degree ans ans First answer is ok I guess By the way to generate this random misorientation vector I could not use rmori morirand because it gives orientations but mori is mentioned as misorentation at Matlab Command Window Im using Matlab b and MTEX Thanks for help Arne Hi MTEX developers a month ago I published a short outreach article on why grain boundaries should be smoothed when calculating perimeters with MTEX You can find it here Basically I explain that if the grain boundaries are not smoothed the estimated perimeters do not correspond to those of the particle but those of the box containing it ie the bounding box In any case I wonder if it would not be more useful to include this information in a more simplified or brief way in the MTEX documentation itself since this may be relevant for people who intend to characterize the shape of grains I also provided an MTEX synthetic example that can be used freely Best Marco added squarify function which allows step size to be defined explicitly ebsdGriddx instead of auto calculated this sometimes leads to seam artefacts in ebsdGrid output so all elements in ebsdgrid are assigned the nearest ebsd datapoint to remove these seams with no interpolation of orientation data Hello MTEX Team using function orientationsfibreVolume with weights option gives an error MTEX There are a naming and a calculation error The old calculation part looks like this elseif checkoptionvararginweight weights getoptionvararginweights v meanweightsangleori rhvarargin radius else I hope a correct version could look like this elseif checkoptionvararginweights weights getoptionvararginweights v sumweightsangleori rhvarargin radius sumweights else this gives reasonable results for my data Have a nice Christmas time Arne Hello thank you for your great work I have recognized that the intersect function sometimes overlooks grain boundaries I can reproduce this behavior with mtex and beta with smoothed and not smoothed grain boundaries Im using Matlab b on Mac BR Stefan Bug intersect Bug intersect Invalid MEXfile zhomee DocumentsMATLABmtex beta externnfftnfsoftmexmexa libmvecso cannot open shared object file No such file or directory Error in unimodalComponentcalcFouriergcA fourier line plan nfsoftmexinitlengthA lengthgnfsoftflags ceil lengthA Error in unimodalComponentcalcFourier line fhat gcA fouriergcA Error in ODFcalcFourier line hat calcFourierodfcomponentsiLvarargin Error in ODFFourierODF line fhat calcFourierodfvarargin Error in orientationcalcFourierODF line odf FourierODFodfgetoptionvararginLbandwidthfourierLdouble Error in orientationcalcODF line odf calcFourierODForivararginkernelpsi Error in EvaluateTexture line odfrot calcODForirothalfwidthprecision Error in W master line EvaluateTexture I am trying to run an unistalled beta version of MTEX on a remotely controlled High Performance computing node Intel Xeon based And I get this error whch I dont get on my Windows based laptop which unfortunately is way slow Anyone could help me figure out whats going nuts I am evaluating ODFs from a huge M pixel map and then I will be running many findByOrientation commands after evaluating ODFs Thanks in advance Umberto PhD student at the Technical University of Denmark I have a sample that should have orthotropic orthorhombic specimen symmetry that I would like to impose in the EBSD data set But I cant seem to find a way to apply specimen symmetry to EBSD data Following the documentation The header for the first box mentions specimen symmetry but none of the following commands are made to enforce any specimen symmetry only the crystal symmetry Looking at the class definition in EBSDm crystal symmetry and specimen symmetry seem to have a single listing in comparison to the ODF class definition in ODFm Is there a different way I should be applying specimen symmetry for EBSD data Im currently using mtex Matlab a MacOS This command is very useful for plotting D section of seismic velocity like this figure below but you cannot plot dashed lines so when two velocities are equal Would it possible to add dashed option all the best David phasevelocites Hi Ralf Ive spotted an issue with grainstriplePoints where the junction of found grain boundaries at the same vertex isnt identified as a triple junction for any of the grains Please find attached my expertly annotated grainsboundary map with the triplePoints overlaid ebsd loadEBSDfnameCSinterfacegenericColumnNames phi Phi phi x y z Bunge Radians grains calcGrainsebsdangle degree figure plotgrainsboundary hold on scattergrainstriplePointsV grainstriplePointsV I expect this bug can be duplicated with a synthetic dataset of x grains Regards Simon