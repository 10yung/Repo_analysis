Function sigqueue allows to send data together with signal Target app can access it by registering signal handler using sigaction Please update dumbinit to forward signal data too Nice little utitility and useful thanks The lines cause behaviour that seems problematic yet they are hardwired I wonder why If I start a program on the terminal using docker run img it may block the terminal Then if I press C it breaks out of that However if I first enter Z I will have suspended dumbinit and cannot use C anymore That is not very useful and maybe should be opted out from It would have made sense if we could send Z to the Docker command which would send it inward and then pause the container but it doesnt I am wondering if its possible to forward signal from crontabs job to dumbinit Seems that crontab will always run no matter of exit codes of its jobs What can I do is that instead of exit I will create file and do and Healthcheck in Dockerfile to monitor this file Unfortunatelly this will mark container as unhealty but will not exit dumbinit process Any idea Thanks FROM ubuntubionic RUN apk add nocache dumbinit cron echo binsh echo foo touch testexited exit testsh echo root binsh testsh proc fd etccrondtest HEALTHCHECK interval s timeout s CMD if f testexited then exit fi ENTRYPOINT usrbindumbinit CMD usrsbincron f We want to use dumbinit to start keepalived in the container but it runs as daemon mod so container exists immediately Can dumbinit run on the front They produce an empty log and seem to fail after about a minute eg After I installed dumbinit via pip i expected the binary in usrbin like mentioned in the README but it was in usrlocalbin not sure if the README should be fixed or the pypi package Hi I would like to know if with dumbinit its possible to trap the sigkill to be able to do something else during the stop of the container I used keepalived and two process was created but the second one doesnt have the pid for parent so its not killed correctly root keepalived P xxx root keepalived P xxx Regards Hi sometimes it is useful to keep init alive when its direct child dies For example when running a doubleforking daemon or SysV init scripts This pull request adds a new option survivebereaving or b that keeps dumbinit running It checks proc after SIGCHLD and quits only when there are no processes left Documentation is not updated I do not feel confident enough in English Any comments are welcome Have a nice day Fero This is a feature request that may be a bit more than dumbinit is intended to contain but it is something Ive been looking for in a docker init The idea being if theres initial setup perhaps generating a random password it should be run when the container is initialized and not when the image is created It would be nice to have a clean way of performing that task the first time a container is run and then not do it again after fixes 