Replaces I want alpinebased docker images for sops as its small and easy to use The current image uses GB docker images mozillasops REPOSITORY TAG IMAGE ID CREATED SIZE mozillasops latest a e d d weeks ago GB The alpinebased image uses only MB docker build t sops f Dockerfilealpine docker images sops REPOSITORY TAG IMAGE ID CREATED SIZE sops latest c f ce About a minute ago MB And this pull request also changes circleciconfigyml to deploy alpine based images as mozillasops alpine and mozillasopsalpine I believe we dont need alpine images for every commits and only images for tags are enough useful I know that this wont get merged but I wanted to record the changes so if anyone comes across the bug report they can see what changes are needed Ill try and keep my fork uptodate but no guarantees It works for me at least Note The AWS SDK will not allow this to be done outside of sops and because it uses https connections you cant use host file overrides or any other trick that I can think of even LDPRELOAD would not be trivial because the certificate verification is going to fail This change accesses the environment variable CIRCLETAG to address Changes Break docker push into its own job runs only on tag creation Use machine executor for docker push job a little faster since it avoids shipping docker context around use the CIRCLETAG variable provided on tag builds Options We can merge jobs back ANDOR We can still publish SHA on master and just AMJORMINORPATCH etc on tags I ran in my own circle spae to test tagging I obviously dont have your docker creds so the push fails but the tagging works Run bash binbash eo pipefail docker tag mozillasops mozillasopsCIRCLESHA Update all semvers affected echo Tag mozillasopsMAJOR docker tag mozillasops mozillasopsMAJOR echo Tag mozillasopsMAJORMINOR docker tag mozillasops mozillasopsMAJORMINOR echo Tag mozillasopsMAJORMINORPATCH docker tag mozillasops mozillasopsMAJORMINORPATCH docker images Output Tag mozillasops Tag mozillasops Tag mozillasops REPOSITORY TAG IMAGE ID CREATED SIZE mozillasops c f a b Less than a second ago GB mozillasops c f a b Less than a second ago GB mozillasops c f a b Less than a second ago GB mozillasops f a fef eb dff e f b def cff af c f a b Less than a second ago GB mozillasops latest c f a b Less than a second ago GB golang ad fc days ago MB Is it possible to make sops load data key from a local file Similar to Ansible vault architecture Thanks Any thoughts on including age as an alternative for PGP encryption It took me a while to figure this out but should argument order matter here sops d secretsyaml envSecrets deploykey sops d secretsyaml extract envSecrets deploykey envSecrets deploykey sops d extract envSecrets deploykey secretsyaml Sops latest version panics when decrypting yaml file with explicit type specification Same file with yaml extension is decrypted successfully antonvm diff authyamlenc authencyaml antonvm sops version sops latest antonvm sops d authencyaml devnull echo antonvm sops inputtype yaml authyamlenc panic interface conversion interface is sopsTreeBranch not string goroutine running gomozillaorgsopsv storesjsonBinaryStoreEmitPlainFile xc b x x x x b xc x x homeajvbgocodesrcgomozillaorgsopsstoresjsonstorego x maineditTree x f xc ba x bc x eba x b x eba xc e x x xc c homeajvbgocodesrcgomozillaorgsopscmdsopseditgo xbbe mainedit x f xc ba x bc x eba x b x eba xc e x x xc c homeajvbgocodesrcgomozillaorgsopscmdsopseditgo x c mainmainfunc xc dc x x homeajvbgocodesrcgomozillaorgsopscmdsopsmaingo x c gopkginurfavecli ev HandleAction xe ca x e xc dc x x homeajvbgocodepkgmodgopkginurfavecliv v appgo xc gopkginurfavecli ev AppRun xc db xc d x x x x homeajvbgocodepkgmodgopkginurfavecliv v appgo x c mainmain homeajvbgocodesrcgomozillaorgsopscmdsopsmaingo x de cat authencyaml apiVersion ENC AES GCMdataigoiv TZajuaEplwhxOLoc woT CbPip cVh Juw mcUR tag Np u MMouj n TyhCwwtypestr data auth ENC AES GCMdataGhpDXmLL ujqDJ rJMyOlVdGL KtUPigpfOzzpRBxBiF lGv aCZQOyLAfZGdi UwZAUJomo ivOdglsUCjRmW nZ BKDIj tgipDUwFLzeeUo TtWqgtagjpdAL JCTPSMpZCtg Qwwtypestr kind ENC AES GCMdataH uOwEpivWYnXYG AheXt mWB idNl VAy VF pmpRPaiZd tagThEFBFmTYZylv QokOhKwtypestr metadata creationTimestamp null name ENC AES GCMdatauitF Yx lSsiv wZfhMtOdvET q hcWXpVfil piv UX kK OOljekYtagQHWcgibKq sgMjPXFqVRAtypestr sops kms gcpkms resourceid xxx createdat T Z enc CiQA Xd G oq KSE uLyRP trk LeMP GhcINOf oYcffYGggUSTBJKCgwV Dc s RQrBnikj SKD HZm UxNjubXrA HipNIabReUTRHFm ghVNuEhEJzwCkVWxvSkaEP kDwpX TBPoejP VW Eso azurekv lastmodified T Z mac ENC AES GCMdataw BLQbnPT tHDElqsrCMC NICGrbkxVGxZgDFmjgFbFkWFOg A UoqhXMHTiiAmyBEDXLHk pPtzRX O GRR DwaM Lt AaYB AkT O TCWx IzCujdnrj K rCrqNhFbdmihv g U wjG GuTx dsDTRdxPB juvEivushcpUzLozcklWBQYPNtHq ZltPzr nch yQ FmMYtagnF o scy krdQiNIjzmGQtypestr pgp unencryptedsuffix unencrypted version It would be cool to provide support for arm and arm binaries on the releases page given a project with following structure sopsyaml secrets testjson with sopsyaml content ymal creationrules pathregex secrets gcpkms projectsYOURPOJECTlocationsglobalkeyRingsYOURRINGcryptoKeysYOURKEY I am not able to encrypt data from stdin into the secrets directory for example cat secretstestjson sops inputtype json outputtype json output secretstestencryptedjson e devstdin gives me error loading config no matching creation rules found I am guessing that sops is trying to match devstdin against the creationrules from the config file changing pathregex secrets to pathregex makes it work but that is obviously not a solution Heres a sample repo which can be used to reproduce the error Possible solutions match against value of output converted to absolute path or path relative to config file if present add a new flag which would take a path that could be used to match against creation rules The latter would be more universal as it would allow use cases where output is not specified As a side note I stumbled upon this issue while trying to write a script to reencrypt all files in a directory after changing the creationrules and wanted to avoid temporarily storing unencrypted data to disk while doing it Go will support freebsdarm golangorgxnet d e ac a and golangorgxsys a f are earliest commits that bring in necessary arm bits