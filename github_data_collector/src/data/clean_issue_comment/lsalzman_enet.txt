After use enetpeersend and flush how can a client know its data has arrived at server successfullythe protocal itself is reliable but server may crush after connection Or should I manage it myself by sending response on receive First of all thanks for the nice free lib and sorry about my english I work on a little vehicle physics multiplayer project My question is about how enet working Normally I have a host and clients The client send the packet to the host and the host resent all packets to all clients and the sender client is included too This method is fine with many game types but with my vehicle project the main idea is to have the real vehicle physics representation for all clients On this way all clients have a real vehicle physics simulated from the client app and not from the host The client send the real vehicle physics info to the host and the other clients recreate a quick simple representation of this informations My question Is it possible for a client to send the packet to the host but make the host avoid to resend the packet to this sender client Currently im able to avoid the packet in the onreceive of all clients with a check id but the host send it back anyway Is it possible to avoid the host to send back the packet for this sender client Currently It work pretty good but if I avoid the sender packet from the host directly I think I can gain some more bandwidth If it is not possible to do with enet lib Do you have any suggestions about how I can do this behaviour with the lib In hostc enethostbroadcast function I have try to use something like this but it dont work good if currentPeerincomingPeerID currentPeeroutgoingPeerID enetpeersendcurrentPeer channelID packet If it is possible I dont see how I can do it I have see this post It look similar to what I need But I dont see how to make it work I only need to avoid the sender peer I dont need to avoid multiple peers Thanks Hi I now use one channel to send the command and stream data but when the stream data is delay the command also slow I think is only one channle so should order to send I think about if I can use two channel to do this work if who can tell me When to send data when using multiple channels in what order Is the peerconnectionID supposed to be unique If yes the server should refuse incoming connections with a connectionID that is already taken by a peer So yeah I was thinking it would be nice to make a tradition out of a new IPv pull request every two years Long story short Im using ENet for a mobile game and we had to use IPv sockets because of Apple IPv policy None of the previous IPv PR seemed to fit my needs and so heres mine Has been tested on Windows Linux Android and iOS So basically this supports IPv only IPv only and any dualstack hostsockets allowing servers to accept both IPv and IPv clients It is able to decode IPv and IPv without using system functions didnt want to bother with outdated functions and such and will automatically convert resolved IPv addresses to IPv mapped IPv if required And of course its a breaking change I dont think it is possible to add IPv support to ENet without breaking API andor ABI We made other changes to ENet mostly to add support for encryption and I tried to have only the IPv related stuff here I didnt check if it compiles as is it should or be really near and I didnt bother to update the doc as this PR will probably never be merged anyway Edit None of the protocol part has been touched which means a program using ENet without this PR is able to connect without any issue to a program using ENet with this PR if the host has been created with either IPv or any protocol obviously this wouldnt work if the host were created using IPv only socket Feel free to reuse this code or to tell me how to improve it I have an enet server and client If I run the server on Windows it works very slowly high CPU usage high sending delays secs disconnections If I run the server on Linux WSL Android everything goes normally Client works normally no matter on what platform Hi I use this lib to send the media stream in the Embedded device the device ram is limit so I want to control the size of outgoing packets if any method to get this One way I think of is to write a function to get the size of all the packets in the outgoing list I want if have another good way to do this Thanks Ive followed instructions on website and added ENETDLL but this is not enough to compile enet into a dll what else has to be done Is that true if yes where threehandshanking is implemented 