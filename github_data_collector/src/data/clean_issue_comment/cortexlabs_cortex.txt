closes checklist run make test and make lint test end to end manually ie buildpush all images restart operator and run cortex deploy refresh update the examples update the docs and add any new files to summarymd merge to master cherrypick into release branches if applicable check that the docs are uptodate in gitbook alert the dev team if the dev environment changed delete the branch once its merged closes checklist run make test and make lint test end to end manually ie buildpush all images restart operator and run cortex deploy refresh update the examples update the docs and add any new files to summarymd merge to master cherrypick into release branches if applicable check that the docs are uptodate in gitbook alert the dev team if the dev environment changed delete the branch once its merged Version Description Update validations to prevent users from spinning up clusters with instance types nano and micro closes checklist run make test and make lint test end to end manually ie buildpush all images restart operator and run cortex deploy refresh update the examples update the docs and add any new files to summarymd merge to master cherrypick into release branches if applicable check that the docs are uptodate in gitbook alert the dev team if the dev environment changed delete the branch once its merged closes checklist run make test and make lint test end to end manually ie buildpush all images restart operator and run cortex deploy refresh update the examples update the docs and add any new files to summarymd merge to master cherrypick into release branches if applicable check that the docs are uptodate in gitbook alert the dev team if the dev environment changed delete the branch once its merged closes checklist run make test and make lint test end to end manually ie buildpush all images restart operator and run cortex deploy refresh update the examples update the docs and add any new files to summarymd merge to master cherrypick into release branches if applicable check that the docs are uptodate in gitbook alert the dev team if the dev environment changed delete the branch once its merged Description Currently the spot instance type will be chosen based on whichever type in the instance distribution is cheapest There are scenarios where more expensive instances provide more compute per dollar in which case it may be advantageous to pay more for the bigger instance Relevant docs AWS ASG instance weights investigation is necessary to see how the cluster autoscaler can handle this not currently supported in eksctl config Notes this is just relevant for spot instances since ondemand instance prices dont change and scale linearly with instance size within a family Description Have seen OOMKilled in the logs Description When ondemandbackup is set to true there is a possibility that ondemand instances are spin up when spot instances arent available When spot instances are available replace spot instances with ondemand instances Additional context Pod deletion precedence rules Look into pod disruption budget so minimize impact of transitioning pods from spot to ondemand instances 