There is a confusion with the description for the fileuploadmodules The README says nothing about unfilteredfilteruploads but it is the module that I needed to get the things done The README only refers to unfiltereduploads but with a wrong description Provides extractors for multipart posts using the servlet API But the extractor MultiPart is in unfilteredfilteruploads Would be very helpful for tooling to autopublish swaggeropenapi from our web apps Right now were manually editing the yaml for our endpoints and its difficult to keep the docs up to date the with the apps We should probably expose an api to set headers not just add See for instance Now HttpRequest A and HttpResponse B are tightly integrated with javaioInputStream and javaioOutputStream We should remove that hard requirement to be able to have a nonblocking interface These operations should still be possible but we should try to make them obsolete Inspiration from Http s could be useful here We should be able to match on different resources paths than just the root queried path From RFC JSON text SHALL be encoded in UTF UTF or UTF The default encoding is UTF and JSON texts that are encoded in UTF are interoperable in the sense that they will be read successfully by the maximum number of implementations there are many implementations that cannot successfully read texts in other encodings such as UTF and UTF The MIME media type for JSON text is applicationjson Type name application Subtype name json Required parameters na Optional parameters na No parameters are allowed meaning that specifying charset should not be possible You cant really use the basic auth kit if you are using the Async or Future apis We should support the different options to make them more useful This part of the Oauth spec was never finalized and we should remove it See still references MemoryAwareThreadPoolExecutor This no longer exists in netty x Theres no replacement functionality We need to provide an example to people on how to run a netty cycle based service without it running out of memorydying where it makes sense Feedback Ive gotten in the past was that it was not straight forward to find things wo the aid of an ide or ack It may make this library more approachable to rethink the naming scheme for files 