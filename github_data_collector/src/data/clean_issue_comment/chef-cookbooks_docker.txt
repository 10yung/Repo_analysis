Hi Would it be possible to add an ability to configure the reload signal eg reloadsignal like its possible to configure the signal for kill Currently its hardcoded here But for some containers eg PHPFPM containers the process needs a USR signal to reload configuration changes and not SIGHUP Thanks Cookbook version docker Chefclient version Chef Platform Details x linux Ubuntu xenial Scenario The docker service will no longer start It returns the errors sudo systemctl start docker Failed to start dockerservice Unit containerdservice not found journalctl u docker Logs begin at Mon UTC end at Tue UTC systemd Starting Docker Application Container Engine sysctl netipv ipforward sysctl netipv confallforwarding dockerd time T Z levelinfo msgparsed scheme unix modulegrpc dockerd time T Z levelinfo msgscheme unix not registered fallback to default schem dockerd time T Z levelinfo msgccResolverWrapper sending new addresses to cc unix dockerd time T Z levelinfo msgClientConn switching balancer to pickfirst moduleg dockerd time T Z levelinfo msgpickfirstBalancer HandleSubConnStateChange xc f dockerd time T Z levelwarning msggrpc addrConncreateTransport failed to connect to u dockerd time T Z levelinfo msgpickfirstBalancer HandleSubConnStateChange xc f dockerd time T Z levelinfo msgpickfirstBalancer HandleSubConnStateChange xc f dockerd time T Z levelwarning msggrpc addrConncreateTransport failed to connect to u dockerd time T Z levelinfo msgpickfirstBalancer HandleSubConnStateChange xc f dockerd time T Z levelinfo msgpickfirstBalancer HandleSubConnStateChange xc f dockerd Failed to connect to containerd failed to dial runcontainerdcontainerdsock context deadline exceeded systemd dockerservice Main process exited codeexited status FAILURE systemd Failed to start Docker Application Container Engine systemd dockerservice Unit entered failed state systemd dockerservice Failed with result exitcode systemd dockerservice Service holdoff time over scheduling restart systemd dockerservice Failed to schedule restart job Unit containerdservice not found systemd dockerservice Unit entered failed state systemd dockerservice Failed with result resources The cookbooks installed package dockerce doesnt automatically install containerd but now the cookbook writes a systemd service which expects it Heres the installed packages spec which doesnt include containerd dpkgquery s dockerce Package dockerce Status install ok installed Priority optional Section admin InstalledSize Maintainer Docker supportdockercom Architecture amd Version ce ubuntu Replaces dockerengine Depends iptables initsystemhelpers lsbbase Debian ubuntu libc libdevmapper libltdl libseccomp libsystemd Recommends aufstools cacertificates cgroupfsmount cgrouplite git pigz xzutils apparmor Conflicts docker dockeree dockerengine dockerenginecs dockerio lxcdocker lxcdockervirtualpackage Conffiles etcdefaultdocker d a e db a b f e f e b etcinitddocker e c ca facbf d c c etcinitdockerconf f e b fa b eecc c f bdc Description Docker the opensource application container engine Docker is an open source project to build ship and run any application as a lightweight container Docker containers are both hardwareagnostic and platformagnostic This means they can run anywhere from your laptop to the largest cloud compute instance and everything in between and they dont require you to use a particular language framework or packaging system That makes them great building blocks for deploying and scaling web apps databases and backend services without depending on a particular stack or provider Homepage Steps to Reproduce run recipe dockerdefault systemctl start docker Expected Result I expect docker to be running Actual Result Docker is not running It can be fixed by manually installing containerd and restarting sudo apt install containerd sudo systemctl start docker works now This cookbook shouldnt depend on containerd or should provide it Description See the issue linked below Set the default ipcmode to shareable tested clean noncookbook installs of docker version on both ubuntu and fedora and default ipcmode was shareable If not specified daemon default is used which can either be private or shareable depending on daemon version and configuration Default memoryswap of should be fine per Also updated resource params per the chef truefalse style introduced in chef Issues Resolved Check List X All tests pass See X New functionality includes testing X New functionality has been documented in the README if applicable X All commits have been signed for the Developer Certificate of Origin See Cookbook version Chefclient version Platform Details Ubuntu Scenario Install dockerce on Ubuntu For what its worth it doesnt look like theres a eoan repo yet Steps to Reproduce Run a dockerinstallationpackage default on an Ubuntu instance Expected Result Install dockerce Actual Result Cookbook version and below Chefclient version and greater Platform Details na Scenario See This has a major impact to the dockercontainer resource which will result in the containers being redeployed upon each converge update yourcontainer set ipcmode to was shareable set memoryswap to was property ipcmode String default edited property memoryswap String Integer coerce proc v coercetobytesv default its now taking into consideration the default values and restarting the containers chef return ipcmode shareable and memoryswap but do not convergerestart this cookbook will require investigationfixes into default value handling Steps to Reproduce run the dockercontainer resource with chefclient Expected Result convergeifchanged says there are no changes and the container does not restart Actual Result convergeifchanged says there ARE changes default values and the container restarts upon every converge Cookbook version All versions Chefclient version Platform Details Ubuntu Scenario A dockerexec invocation should fail if the underlying command fails but instead the failure is silently ignored Steps to Reproduce Execute the following recipe in a cookbook depending on the dockercookbook dockercontainer testcontainer do image ubuntu tag command tail f devnull end dockerexec shouldfail do cmd false container testcontainer end Expected Result The Chef run should abort with an error Actual Result No error is signalled to the chef run so a failing command in dockerexec is silently ignored Offending code It can easily be seen that the return value from the Docker API containing the return code is simply ignored Also it would be nice if dockerexec would optionally stream the stdout and stderr of the executed command to the log The resource should have a returns property that sets which return codes are acceptable and error out otherwise To not break the compatibility with existing code we could let returns default to nil which would keep the current semantics of ignoring the return code This should however be fixed at the next major release Cookbook version v Chefclient version Platform Details CentOS running on AWS EC Scenario Run the container recipe and provide envfile attribute for a file that does not yet exist on the filesystem I am running the Docker cookbook via a wrapper cookbook I wrote Part of my wrapper cookbook includes a recipe that pulls files down from remote locations I am trying to run fileutils then dockercontainer in order because on a new systemthe fileutils recipe will pull down a config file from s which I then use as the envfile attribute within the container recipe Unfortunately during the cookbook compile phase I am seeing the following error ErrnoENOENT No such file or directory rbsysopen rootconfigurationsonarqubeenv And this stack trace varchefcachecookbooksdockerlibrariesdockercontainerrb in readlines varchefcachecookbooksdockerlibrariesdockercontainerrb in block in coerceenvfile varchefcachecookbooksdockerlibrariesdockercontainerrb in map varchefcachecookbooksdockerlibrariesdockercontainerrb in coerceenvfile varchefcachecookbooksdockerlibrariesdockercontainerrb in block in classDockerContainer optchefembeddedlibrubygems gemschef libchefpropertyrb in instanceexec optchefembeddedlibrubygems gemschef libchefpropertyrb in execinresource optchefembeddedlibrubygems gemschef libchefpropertyrb in coerce optchefembeddedlibrubygems gemschef libchefpropertyrb in coerceandvalidate optchefembeddedlibrubygems gemschef libchefpropertyrb in inputtostoredvalue optchefembeddedlibrubygems gemschef libchefpropertyrb in set optchefembeddedlibrubygems gemschef libchefpropertyrb in call optchefembeddedlibrubygems gemschef libchefpropertyrb in envfile varchefcachecookbooksowidockerrecipesdockercontainerrb in block levels in fromfile optchefembeddedlibrubygems gemschef libchefresourcebuilderrb in instanceeval optchefembeddedlibrubygems gemschef libchefresourcebuilderrb in build optchefembeddedlibrubygems gemschef libchefdsldeclareresourcerb in buildresource optchefembeddedlibrubygems gemschef libchefdsldeclareresourcerb in declareresource optchefembeddedlibrubygems gemschef libchefdslresourcesrb in dockercontainer varchefcachecookbooksowidockerrecipesdockercontainerrb in block in fromfile varchefcachecookbooksowidockerrecipesdockercontainerrb in each varchefcachecookbooksowidockerrecipesdockercontainerrb in fromfile optchefembeddedlibrubygems gemschef libchefmixinfromfilerb in instanceeval optchefembeddedlibrubygems gemschef libchefmixinfromfilerb in fromfile optchefembeddedlibrubygems gemschef libchefcookbookversionrb in loadrecipe optchefembeddedlibrubygems gemschef libchefruncontextrb in loadrecipe optchefembeddedlibrubygems gemschef libchefruncontextcookbookcompilerrb in block in compilerecipes optchefembeddedlibrubygems gemschef libchefruncontextcookbookcompilerrb in each optchefembeddedlibrubygems gemschef libchefruncontextcookbookcompilerrb in compilerecipes optchefembeddedlibrubygems gemschef libchefruncontextcookbookcompilerrb in compile optchefembeddedlibrubygems gemschef libchefruncontextrb in load optchefembeddedlibrubygems gemschef libchefpolicybuilderexpandnodeobjectrb in setupruncontext optchefembeddedlibrubygems gemschef libchefclientrb in setupruncontext optchefembeddedlibrubygems gemschef libchefclientrb in run optchefembeddedlibrubygems gemschef libchefapplicationrb in block in forkchefclient optchefembeddedlibrubygems gemschef libchefapplicationrb in fork optchefembeddedlibrubygems gemschef libchefapplicationrb in forkchefclient optchefembeddedlibrubygems gemschef libchefapplicationrb in block in runchefclient optchefembeddedlibrubygems gemschef libcheflocalmoderb in withserverconnectivity optchefembeddedlibrubygems gemschef libchefapplicationrb in runchefclient optchefembeddedlibrubygems gemschef libchefapplicationclientrb in sleepthenrunchefclient optchefembeddedlibrubygems gemschef libchefapplicationclientrb in block in intervalrunchefclient optchefembeddedlibrubygems gemschef libchefapplicationclientrb in loop optchefembeddedlibrubygems gemschef libchefapplicationclientrb in intervalrunchefclient optchefembeddedlibrubygems gemschef libchefapplicationclientrb in runapplication optchefembeddedlibrubygems gemschef libchefapplicationrb in run optchefembeddedlibrubygems gemschef binchefclient in top required What this tells me is that the compile phase for the Docker cookbook checks if a file specified in envfile is present I dont expect this file to exist during the compile phase I expect this file to appear during a normal Chef run Thoughts Description The dockerinstallationpackage resource omits the epoch number on versions which causes yums version comparison to get confused and think that a version is older than the installed version even if the primary version number if greater This means you cant install one version and then upgrade it later Instead you get a warning like the following yumpackage dockerce action install T WARN yumpackage dockerce dockerce has installed version el x which is newer than available version el Skipping Best I can tell the epoch number is currently static at in the dockerce RPM spec see so Ive kept the same approach as with DebianUbuntu distros Issues Resolved Partly anyway There may be additional work on Ubuntu Not much context for that issue Check List All tests pass See x New functionality includes testing New functionality has been documented in the README if applicable x All commits have been signed for the Developer Certificate of Origin See Description Describe what this change achieves Issues Resolved List any existing issues this PR resolves Check List All tests pass See New functionality includes testing New functionality has been documented in the README if applicable All commits have been signed for the Developer Certificate of Origin See The CI is broken because it waits for user interaction to accept the license for chef this is changed behaviour of the chef installation scripts See for example this CI run This runs in a timeout and causes all CI checks to fail spuriously This means that the environment variable set in your travisyml which follows the solution here does not work as intended