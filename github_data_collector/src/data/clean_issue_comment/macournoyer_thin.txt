 Hello I am getting this error when running a test from cmd line thin start e production p x Currently using ruby on windows If starting Thin using SSL option listening on port the SERVERPORT value should be Instead the value is set to the nonSSL default of Example configru ruby requirerelative server run Servernew serverrb ruby require rack class Server def callenv server env HTTPORIGIN port env SERVERPORT html htmlheadbodyform methodpost actioninput typetext namefieldinput typesubmitformbodyhtml ContentType texthtml htmlbrWe are server on port end end thin start p ssl reports port in SERVERPORT incorrectly thin start p ssl reports port in SERVERPORT correctly This causes RackProtectionHttpOrigin to incorrectly trigger a Forbidden response I think somewhere in thinparserc a default of should be set instead of based on the request scheme being used thin Traceback most recent call last from usrlocalbinthin in main from usrlocalbinthin in load from usrlocallibrubygems gemsthin binthin in top required from usrlocallibruby rubygemscoreextkernelrequirerb in require from usrlocallibruby rubygemscoreextkernelrequirerb in require from usrlocallibrubygems gemsthin libthinrb in top required from usrlocallibruby rubygemscoreextkernelrequirerb in require usrlocallibruby rubygemscoreextkernelrequirerb in require cannot load such file thinparser LoadError Cross posting from SO I cant figure out how to configure Thin from Sinatra Please help see As Ruby is reaching EOL soon I recently updated my Windows machine to Ruby Thin depends on Eventmachine on my machine it depends on eventmachine x mingw to be precise Somehow this binary gem fails to work with the following reason Unable to load the EventMachine C extension To use the pureruby reactor require empureruby Manually installing using gem install eventmachine platform ruby works a treat It invokes the compiler and builds the native parts correctly Still Thin depends on the precompiled gem in my Bundle Is there a way around this ie having thin depend on the already installed gem instead of downloading the binary version Or better still to optionally ignore the prebuilt gems and do a local compilation eventmachinerb in starttcpserver no acceptor port is in use or requires root privileges RuntimeError see ZIP for attached test case thintestzip Oneline fix as suggested by in This would be a helpful addition when debugging problems with Thin When thin is started as root but configured to drop privileges the pidfile is chowned to the runtime user Later calls to thin restart or thin stop will as root read the pidfile and kill the identified process This privilege imbalance means a vulnerability in the application overwrite the pidfile or replace it with a symlink leading to arbitrary rootowned processes being killed or other impacts thin stop hanging or possibly information disclosure Controllersstop should make some effort to validate the process being killed Dropping privileges before sending the kill signal would be ideal This issue was first identified at and has some further discussion at Ruby changed the way Kernelwarn reports the error but mocking the method on the class which is calling it should be universal 