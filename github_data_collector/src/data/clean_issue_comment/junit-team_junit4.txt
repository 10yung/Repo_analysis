I reported this issue in junitteamjunit but perhaps should have reported it here I didnt realise that there was still active development on JUnit If the JUnit runner encounters a class that extends TestCase and has Test annotations in it then it will silently ignore all of the JUnit tests It would be good if it were not so silent about it as it could lull people into a false sense of security that all their tests are passing when actually some are simply not running at all Ideal solution runner should run both sets of tests Acceptable solution runner should check for this situation and generate an error or warning if it is found Provide information about alternatives to the expected parameter which can be used to overcome the limitations of expected This is an improvement for JUnit to the fix for dcb Minor clean up Does things Removing commented out lines of code It makes me crazy to see stretches of code that are commented out Who knows how old it is Who knows whether or not its meaningful Yet no one will delete it because everyone assumes someone else needs it or has plans for it Commentedout code is an abomination Clean Code chapter by Uncle Bob Cleaning up unused imports and deleting imports from the same package Reordering modifiers to comply with the Java Language Specification The Java Language Specification recommends listing modifiers in the following order Annotations public protected private abstract static final transient volatile synchronized native strictfp Hello were developing an automated system that detects inconsistent variable names in a large software project Our system checks if each variable name is consistent with other variables in the project in its usage pattern and proposes correct candidates if inconsistency is detected This is a part of academic research that we hope to publish soon but as a part of the evaluation we applied our systems to your projects and got a few interesting results We carefully reviewed our system output and manually created a patch to correct a few variable names We would be delighted if this patch is found to be useful If you have a question or suggestion regarding this patch wed happily answer Thank you PS our patch is purely for readability purposes and does not change any functionality A couple of issues that weve noticed were left untouched For example mixed use of variable names msg and message were fairly widespread but we have only corrected a few notable instances to minimize our impact This is still an issue as of and can cause a huge unexpected performance hit Minimal example For N datapoints of type Tint and M arguments of type T to a Theory import orgjunitrunnerRunWith import orgjunitexperimentaltheoriesTheory import orgjunitexperimentaltheoriesTheories import orgjunitexperimentaltheoriesDataPoints import static orgjunitAssertassertTrue RunWithTheoriesclass public class DataPointsBug DataPoints public static int generateDataPoints SystemoutprintlngenerateDataPoints Expensive operation try Threadsleep catch InterruptedException ex return new int Theory public void manyArgumentsint a int b int c Cheap test assertTruea b c Output generateDataPoints line repeated more times Finished in s ms In general for N datapoints of type T and a Theory taking M arguments of type T this requires S sum N N N M ON M which seems pretty excessive Workaround It is an easyenough workaround to store the generator output once and annotate the variable with DataPoints import orgjunitrunnerRunWith import orgjunitexperimentaltheoriesTheory import orgjunitexperimentaltheoriesTheories import orgjunitexperimentaltheoriesDataPoints import static orgjunitAssertassertTrue RunWithTheoriesclass public class DataPointsBug private static int generateDataPoints SystemoutprintlngenerateDataPoints Expensive operation try Threadsleep catch InterruptedException ex return new int DataPoints public static int dataPoints generateDataPoints Theory public void manyArgumentsint a int b int c Cheap test assertTruea b c Output generateDataPoints Finished in s ms Should this be reopened and addressed Originally posted by dev in When calling assertSame for two different instances of identical objects the failure message will be quite confusing expected same was not See I think the clarity could be improved by adding identityHashCode to the message like this expected same ba e was not de Or maybe even with the class name expected samejavautilListba e was notjavautilListde Cucumberjvm needs just an extra method added so that we can add annotations to the descriptions For more info please check Representing durations as longs can easily lead to unit mismatch problems Representing durations as long TimeUnit pairs can require plumbing values through multiple layers and can suffer from unit mismatch or truncation issues Could proper javatimeDuration support be added to the Timeout class If this should be filed under junit please let me know and Ill open it there When I have a test with ParameterizedParametersname If I try to rerun failed tests in Intellij Idea then I get javalangException No tests found matching Tests from orgjunitrunnerRequest ae ce at orgjunitinternalrequestsFilterRequestgetRunnerFilterRequestjava at comintellijjunit JUnit IdeaTestRunnerstartRunnerWithArgsJUnit IdeaTestRunnerjava at comintellijrtexecutionjunitIdeaTestRunnerRepeaterstartRunnerWithArgsIdeaTestRunnerjava at comintellijrtexecutionjunitJUnitStarterprepareStreamsAndStartJUnitStarterjava at comintellijrtexecutionjunitJUnitStartermainJUnitStarterjava If I leave the ParameterizedParameters without name it works any idea Found a Junit related issue Junit version can this be related or should I open another issue I have parameters in both the base and derived test classes So I want the tests in derived class to run for the cartesian product of those Sample code RunWithParameterizedclass public class BaseTest public BaseTest BeforeClass public static void setupbase ParameterizedParameter public String baseParam ParameterizedParameters public static CollectionObject data return ArraysasListnew Object base base public class Test extends BaseTest BeforeClass public static void setup ParameterizedParameter public String derivedParam ParameterizedParameters public static CollectionObject data return ArraysasListnew Object derived derived Test public void testcase SystemoutprintlnBase Param baseParam SystemoutprintlnDerived Param derivedParam The expected output Base Param base Derived Param derived Base Param base Derived Param derived Base Param base Derived Param derived Base Param base Derived Param derived Present error while running javalangException Parameter is used more than once at orgjunitrunnersparameterizedBlockJUnit ClassRunnerWithParametersvalidateFieldsBlockJUnit ClassRunnerWithParametersjava at orgjunitrunnersBlockJUnit ClassRunnercollectInitializationErrorsBlockJUnit ClassRunnerjava at orgjunitrunnersParentRunnervalidateParentRunnerjava at orgjunitrunnersParentRunnerinitParentRunnerjava at orgjunitrunnersBlockJUnit ClassRunnerinitBlockJUnit ClassRunnerjava at orgjunitrunnersparameterizedBlockJUnit ClassRunnerWithParametersinitBlockJUnit ClassRunnerWithParametersjava at orgjunitrunnersparameterizedBlockJUnit ClassRunnerWithParametersFactorycreateRunnerForTestWithParametersBlockJUnit ClassRunnerWithParametersFactoryjava at orgjunitrunnersParameterizedcreateRunnersForParametersParameterizedjava at orgjunitrunnersParameterizedinitParameterizedjava at sunreflectNativeConstructorAccessorImplnewInstance Native Method at sunreflectNativeConstructorAccessorImplnewInstanceNativeConstructorAccessorImpljava at sunreflectDelegatingConstructorAccessorImplnewInstanceDelegatingConstructorAccessorImpljava at javalangreflectConstructornewInstanceConstructorjava at orgjunitinternalbuildersAnnotatedBuilderbuildRunnerAnnotatedBuilderjava at orgjunitinternalbuildersAnnotatedBuilderrunnerForClassAnnotatedBuilderjava at orgjunitrunnersmodelRunnerBuildersafeRunnerForClassRunnerBuilderjava at orgjunitinternalbuildersAllDefaultPossibilitiesBuilderrunnerForClassAllDefaultPossibilitiesBuilderjava at orgjunitrunnersmodelRunnerBuildersafeRunnerForClassRunnerBuilderjava at orgjunitinternalrequestsClassRequestgetRunnerClassRequestjava at orgjunitinternalrequestsFilterRequestgetRunnerFilterRequestjava at comintellijjunit JUnit IdeaTestRunnerstartRunnerWithArgsJUnit IdeaTestRunnerjava at comintellijrtexecutionjunitIdeaTestRunnerRepeaterstartRunnerWithArgsIdeaTestRunnerjava at comintellijrtexecutionjunitJUnitStarterprepareStreamsAndStartJUnitStarterjava at comintellijrtexecutionjunitJUnitStartermainJUnitStarterjava javalangException Parameter is never used at orgjunitrunnersparameterizedBlockJUnit ClassRunnerWithParametersvalidateFieldsBlockJUnit ClassRunnerWithParametersjava at orgjunitrunnersBlockJUnit ClassRunnercollectInitializationErrorsBlockJUnit ClassRunnerjava at orgjunitrunnersParentRunnervalidateParentRunnerjava at orgjunitrunnersParentRunnerinitParentRunnerjava at orgjunitrunnersBlockJUnit ClassRunnerinitBlockJUnit ClassRunnerjava at orgjunitrunnersparameterizedBlockJUnit ClassRunnerWithParametersinitBlockJUnit ClassRunnerWithParametersjava at orgjunitrunnersparameterizedBlockJUnit ClassRunnerWithParametersFactorycreateRunnerForTestWithParametersBlockJUnit ClassRunnerWithParametersFactoryjava at orgjunitrunnersParameterizedcreateRunnersForParametersParameterizedjava at orgjunitrunnersParameterizedinitParameterizedjava at sunreflectNativeConstructorAccessorImplnewInstance Native Method at sunreflectNativeConstructorAccessorImplnewInstanceNativeConstructorAccessorImpljava at sunreflectDelegatingConstructorAccessorImplnewInstanceDelegatingConstructorAccessorImpljava at javalangreflectConstructornewInstanceConstructorjava at orgjunitinternalbuildersAnnotatedBuilderbuildRunnerAnnotatedBuilderjava at orgjunitinternalbuildersAnnotatedBuilderrunnerForClassAnnotatedBuilderjava at orgjunitrunnersmodelRunnerBuildersafeRunnerForClassRunnerBuilderjava at orgjunitinternalbuildersAllDefaultPossibilitiesBuilderrunnerForClassAllDefaultPossibilitiesBuilderjava at orgjunitrunnersmodelRunnerBuildersafeRunnerForClassRunnerBuilderjava at orgjunitinternalrequestsClassRequestgetRunnerClassRequestjava at orgjunitinternalrequestsFilterRequestgetRunnerFilterRequestjava Version Junit 