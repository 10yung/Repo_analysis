 Continuation of Allows each Money instance to hold its own infiniteprecision setting Continuation of Continuation of Extracted from Hi money doesnt fallback to my locales despite Moneylocalebackend i n Im testing this through spree master that extends money in corelibspreemoneyrb I have to do uyu priority isocode UYU name Uruguayan Peso symbol U alternatesymbols U subunit Cent simo subunittounit symbolfirst true htmlentity U decimalmark thousandsseparator isonumeric smallestdenomination MoneyCurrencyregisteruyu To see U instead of x B Can you check this Thanks MateoLa I called round on an object which I did not recognize as being a Money object Contrary to BigDecimals round method the first argument actually sets the roundingmode I find this very confusing and harmful This creates the following rather unexpected output total Moneynew total Money fractional totalround Money fractional totaltodround e You can imagine how this can easily create confusing scenarios with rounding errors usrbinenv ruby require moneyratesstorememory store MoneyRatesStoreMemorynew threads expectedrate times do threads Threadnew do while true currency AordZordtoasample map chrjoin currency AordZordtoasample map chrjoin storeaddratecurrency currency expectedrate rate storegetratecurrency currency if rate expectedrate puts Rate rateinspect expectedrateinspect end end end end threadseach join MRI is okay JRuby shows the problem rates are not equal Because if a thread enters transaction Any subsequent thread does not acquire the mutex so you end up corrupting the hash table Some systems are set up in a way where the assume that cents will always return times the value displayed by format This is only the case for currencies with subunittounit ratio In order to cater to the needs of those systems without altering the behavior of the gem we introduce a convience method which anihilates the effect of subunittounit ratio I fixed the low hanging fruits without breaking the specs at least locally Rules that could not be fixed that easy were added as exception to the rubocopyml configuration file Some of those exceptions might be fixable with some code recatoring which might be a good point to start with future PRs See 