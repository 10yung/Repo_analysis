Just attempted updating from and it breaks with importing the package Im using typescript import as InfiniteScroll from reactinfinitescrollcomponent worked previously Now we get Failed to compile JSX element type InfiniteScroll does not have any construct or call signatures It seems that in UNSAFEcomponentWillReceiveProps key and dataLength diffing was the only way to detect whether states listed above should be reset This comes with the assumption that each data fetching would be done successfully and eventually result in data item increment or key change While this is sometimes untrue since it occurred to me that when there are more data to be loaded yet due to poor network condition or some other reasons my data fetching was not done properly just occasionally fails propsstates and property like dataLengthshowLoader actionTriggered are in consequence maintained in an onprogress condition I intended to keep previous data thus further retries wouldnt be triggered anymore I tried to refresh the key passed down to the component after my request failed but this would result in continuous key refresh as atBottom stays true otherwise manual key diffing seems to be implicit and error prone Is there any necessity triggering a fallback method after next was executed to force reset Using v When I scroll to the bottom of my table my next function is not triggering to fetch more data If Im wrapping InfiniteScroll with multiple children how can I ensure that the scroll events are being triggered I also tried using and id string for scrollableTarget but got an error saying that its expecting an Element instead of String import React from react import PropTypes from proptypes import classNames from classnames import connect from reactredux import withTranslation from reacti next import InfiniteScroll from reactinfinitescrollcomponent import thunks as DownloadsThunks from reducersDownloads import thunks as PlayQueueThunks from reducersPlayQueue import ReleaseActions thunks as ReleaseThunks from reducersReleases import ReleasesMenu ReleaseGridCell RecentlySearched ReleasesTable from components import MainLayout from containers const mapStateToProps releases setting playQueue global releases releasesreleases page releasespage totalItemsCount releasestotalItemsCount loading releasesloading isListView settinglistView playingItem playQueueselectedItem isIpadView globalisIpadView connectmapStateToProps class ReleasesView extends ReactPureComponent static propTypes releases PropTypesarrayOfPropTypesobjectisRequired page PropTypesnumberisRequired totalItemsCount PropTypesnumber loading PropTypesboolisRequired isListView PropTypesboolisRequired isIpadView PropTypesboolisRequired playingItem PropTypesobject t PropTypesfuncisRequired dispatch PropTypesfuncisRequired state isSearching false itemsPerRow selectedRelease null componentDidMount const page dispatch thisprops if page thisonLoadMore else dispatchReleaseThunksrefreshList thisreleasesScrollView ReactcreateRef thisgetItemsPerRow windowaddEventListenerresize thisgetItemsPerRow componentWillUnmount windowremoveEventListenerresize thisgetItemsPerRow onSearchFocus thissetState isSearching true onSearchUnfocus thissetState isSearching false onLoadMore const dispatch page loading thisprops if loading dispatchReleaseThunkssearchpage handlePlayRelease release const dispatch thisprops dispatchPlayQueueThunksplayReleasereleasereleaseid handleDownloadRelease release const dispatch thisprops dispatchDownloadsThunksaddReleaseToDownloadQueuerelease handleShowModal release const dispatch thisprops dispatch ReleaseThunksgetDetailreleasereleaseid releaseDetail dispatchReleaseActionstoggleReleaseInModalreleaseDetail getItemsPerRow const isIpadView thisprops const mainWidth documentgetElementByIdmainLayoutoffsetWidth const desktopReleaseGridSize mainWidth const widthOfCell isIpadView desktopReleaseGridSize const count MathminMathfloormainWidth widthOfCell thissetState itemsPerRow count hasMorePage const releases totalItemsCount thisprops if totalItemsCount null return true return totalItemsCount releaseslength setSelectedRelease release thissetState selectedRelease release renderReleaseGrid const itemsPerRow selectedRelease thisstate const releases t isListView playingItem isIpadView thisprops const hasMorePage thishasMorePage const releaseCells releasesmapitem index div keyitemreleaseid index classNameinlineblock w itemsPerRow ReleaseGridCell isHighlighted item playingItem itemreleaseid playingItemreleaseid selectedReleaseselectedRelease releaseitem isIpadViewisIpadView setSelectedReleasethissetSelectedRelease onShowModalthishandleShowModal onPlaythishandlePlayRelease onDownloadthishandleDownloadRelease div return InfiniteScroll dataLengthreleaseslength nextthisonLoadMore hasMoretrue classNameoverflowvisibleimportant loader h classNamepx py textwhite thomereleaseloading h scrollableTarget thisreleasesScrollView thisreleasesScrollViewcurrent releaseslength isListView ReleasesTable showMarkets showPlayQueueOptions itemsreleases releaseCells InfiniteScroll renderContent const isSearching thisstate const blockClasses classNames px hfull wfull opacity isSearching opacity isSearching invisible isSearching visible isSearching return div classNamerelative flex div refthisreleasesScrollView classNameblockClasses thisrenderReleaseGrid div isSearching div classNameabsolute top right wfull hfull overflowauto scrollbar RecentlySearched div div render const isSearching thisstate const isListView thisprops return MainLayout contentthisrenderContent menu ReleasesMenu isSearchingisSearching isListViewisListView handleViewTogglethisonViewToggle handleSearchFocusthisonSearchFocus handleSearchUnfocusthisonSearchUnfocus export default withTranslationReleasesView As specified in types Is loader prop required now or is it a typo in types fetchMoreData can not fetch Hi I spent some time debugging why our infinite scrolls didnt add content and it turned out that I had missed the dataLength prop The dataLength prop seems very important and it would be nice to see a warning or an error if it is missing Id be happy to submit a PR What do you think Thanks This warning appears as I scroll down a bit within infinitescroll component and then navigate to another page of my site its related to the throttled function of scroll this throttled needs to be canceled on componentWillUnmount Any help will be appreciated Wishing some sort of pagination functionality so that you wont loose your position if going back to the list of items from eg a post that was linked from the scroll list or if youd like to link the site to another user and get a more accurate positionpage index Move data fetching code or side effects to componentDidUpdate If youre updating state whenever props change refactor your code to use memoization techniques or move it to static getDerivedStateFromProps Learn more at Rename componentWillReceiveProps to UNSAFEcomponentWillReceiveProps to suppress this warning in nonstrict mode In React x only the UNSAFE name will work To rename all deprecated lifecycles to their new names you can run npx reactcodemod renameunsafelifecycles in your project source folder Please update the following components InfiniteScroll I get this warning in my console constantly Am I using InfiniteScroll incorrectly or this legit something that needs to be addressed Is this intentional It causes a lot of inconvenience and redundant calls Live Example Try scrolling down to the end then scrolling up it will fetch more data when scrolling up