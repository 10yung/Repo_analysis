Recently builtin shell commands stopped working for my with scmbreeze Debugging my way around I found the culprit to be the following line in my gitscmbrc file What started happening for me and sadly I cannot say why is that instead of wrapping each of the commands in scmbwrappedshellcommands my shell treated the entire string as a single command to try and wrap which unsurprisingly didnt work When I changed that line to scmbwrappedshellcommandsvim emacs gedit cat rm cp mv ln cd ls less subl code Everything started working again Id submit a pull request but this is the sort of thing that I suspect might only work for a specific set of environments and not others If anyone has sufficient shellfu to handle this that would be great however Add a remark that ruby is more than just recommended quick fix for Ive run into this situation multiple times with fresh systems so this PR contains a quick fixreminder for the time until the ruby dependency is refactored out if thats still a plan for the future So weve got new commands Being old I think Ill struggle to pick them up p BUT Itd be great to get awesome scmbreeze aliases Is support on the roadmap see for the discovery of this bug Hi Firstly thank you for these useful scripts I have added SCM Breeze to the AUR Arch Linux user package repository The new package is available here The scripts and libraries are available systemwide in usrsharescmbreeze and usrlibscmbreeze but each user who wishes to use scmbreeze has to run installscmbreeze which corresponds to installsh to create gitscmbrc If is fixed running the installation script will become optional Let me know if you have suggestions questions or comments Hello Im now having to use Ruby and I noticed my previous ticket solution was to uninstall Ruby I am reopening this issue for the ruby p version compatibility I also read the comment in at the end so I will try it now as well in hopes that it might be as simple as it looks The following is the current issue Whenever I attempt to run gs in bash I always receive the following message even though the amount of files changed is far less than changed files I have tested this on multiple repos The first repo has file changes The second repo has file changes There were more than changed files SCM Breeze has fallen back to standard git status for performance reasons This simply adds the linting Relates to It may be best to also add the exceptions or adjustments to make this pass testing asis since the repo is in a usable state asis Dear fellow maintainers You may remember me as the guy who dropped a significant PR a few months ago After fixing many quoting issues I saw someone I believe it was the original author but could be wrong making some commits with introduced another one or two of the same class of bug that Id just spend a long time fixing Please always quote unless you have an explicit reason not to including the nonusage of arrays I was thoroughly discouraged and havent contributed since saving issues directly related to the code that I contributed So Id like to raise an observation and make a proposal My observation right or wrong please correct me is that this project seems to have started as a convenience script and the original author adds things without a code review process This code base seems to have new features added to do nifty timesaving tricks but lacks an emphasis on correctness and robustness prioritises features over quality and lacks edge and cornercase tests sh and its derivatives are arguably poorly designed languages and edge case footshooting is common I propose To catch bugs that this project be shellcheck clean Yes sometimes shellcheck is annoying and gets it wrong But it forces coders via an ignore directive to explicitly say yes Ive read the cautions and really do know what Im doing or more commonly to say damn thats an edge case and fix what will likely result in unexpected behaviour down the track That there be a review process for contributed code Commit a eeebfa e ec aae f e df e a ca breaks scmbwrappedshellcommands in ZSH It makes the loop make only one iteration with cmd being equal to scmbwrappedshellcommands The workaround is to write scmbwrappedshellcommands in the config not as a string but as an array A change made in a eeebf broke parsing of scmbwrappedshellcommands Rather than iterating over each command in the spaceseparated list the entire block of commands was treated as a single command