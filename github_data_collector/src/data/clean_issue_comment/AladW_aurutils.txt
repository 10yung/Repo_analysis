Fixing some more breakage In particular surfaced again First try to retrieve data from custom pacmanconf then from default Default is pacmanextraconf instead of pacmanmultilibconf Signedoffby Michael Picht mipifsfeorg The Github wiki could be a place for practical examples for beginners and a repository for gems like It might also save you having to read some painful reddit threads on aurutils usage Tests are running the installed aurutils where we should be testing the scripts in libaur instead This could be solved by placing a new aur script with the customized AURLIBDIR early on PATH or by removing the limitations we imposed and make aur respect AURLIBDIR at runtime allowing us to set AURLIBDIR appropriately on each test Rewrite of aurfetch to implement features such as ability to choose between git reset defaultpull rebase to update cached repos discard local commits vs trying to reapply local commits on top of the incoming changes ability to choose between a git log or git diff to generate review patches fetch packages in parallel Initially this PR removed aurvercmpdevel and introduced documentation changes that were biased towards a repobased workflow for vcs packages Since these are actually two actions the removal was split into PR EDIT Using master branch With mongodbbin available bash aur sync unifi provides Using aur repository mongodb none python scons none unifi dependency mongodb satisfied by mongodbbin still tries to install python scons which should not be needed if mongodbbin is fulfilling the mongodb dependency of unifi If a dependency is satisfied via provides I would expect the leaves of that dependency tree to also be pruned In this case it seems like only mongodb is being pruned but not its make dependency python scons aurlogtxt parallel is bulky and has questionable ethics regarding licensing ie ignoring as a GPLlicensed project Look for some alternatives as suggested in pacutils gained some functionality to automatically solve conflicts This could be used to implement the elusive batch interaction for nonchroot builds Problematic is that pacman calls for installing dependencies are beyond our control in makepkg s This is another big one so we should have some plan prerelease cycle I propose the following General x Remove aurjobs The script is only used in aursyncaursrcver and has no nontrivial functionality otherwise x Rename aurrpc to aurquery rpc describes the protocol while query describes the intent x Replace aurvercmpdevel with aurvcs See Update the changelog rafasc started work on this see x Replace AURCOLOR with NOCOLOR Documentation updates aurbuild aurrepo aursync aurchroot aurfetch aurchroot Use static pacmanconf for chroot Removed aurbuild x Remove the SHELLOPTS workaround implement AURDEBUG in aur instead x Only remove temporary files on clean exit x Expose common makepkg options compare aursync x Remove default options to makepkg aurfetch x Add AURSEEN x Add rebase to preserve local commits reset for the previous behavior x Add results to indicate if a given git repo was cloned or fetched x Add format aurrepo x Add table x Add path aursrcver x Remove parallel usage 