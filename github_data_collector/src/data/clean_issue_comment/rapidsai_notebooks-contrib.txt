This notebook shows how to pass data between cudaarrayinterface supporting libraries CuPy and Numba for this demonstration and both PyTorch and TensorFlow When using PyTorch we can simply call torchastensorfoo on an existing array that accepts the cudaarrayinterface but for TensorFlow we leverage the nascent tfdlpack package described in this RFC There is a bug in tfdlpacktodlpack that is documented here and also in this notebook This PR adds to notebookscontrib the ability for developers andor automation to execute notebooks as benchmark scripts using ASV where benchmarks are indexed by conda build of RapidsAI dependencies Usage explained in benchmarksREADMEmd Some notebook changes were necessary to enable nbconvert to generate a module that could be run by ASV weather notebook uses os api calls rather than shelling out to bash uses ospath for path manipulations uses environment variable for base data directory This is on hold WIP until the condarepo plugin dependency finds a public home Fixes gettingstartednotebooks IntroductiontoSupervisedLearningipynb partially blocked by x gettingstartednotebooks IntroductiontocuDFipynb cuDF tuple changes and update notebook text cumlbenchmarks AlgorithmPair set up changes awaiting cjnolet replace old cumlquickbenchmarks with working version of cumlbenchmarks AlgorithmPair set up changes and removing larger files for smaller memory cards will created after above is complete by cjnolet x Remove cuDatashaderipynb Obsolete now that cuDataShader is in Datashader x Outside of Notebooks Contrib update minutes to cuDF with the tuple changes created fixed and PRed awaiting merge A few bugs emerged from CI We need to update both the branch and branch branches gettingstartednotebooks IntroductiontoSupervisedLearningipynb IntroductiontoSupervisedLearningtestpy in module nneighbors distances indices knnkneighborsXdf knneighbors cumlneighborsnearestneighborspyx in cumlneighborsnearestneighborsNearestNeighborskneighbors TypeError kneighbors got an unexpected keyword argument k gettingstartednotebooks IntroductiontocuDFipynb TypeError Traceback most recent call last optcondaenvsrapidslibpython sitepackagescudfcorecolumncolumnpy in ascolumnarbitrary nanasnull dtype name data ascolumn memoryviewarbitrary dtypedtype nanasnullnanasnull TypeError memoryview a byteslike object is required not tuple During handling of the above exception another exception occurred ArrowInvalid Traceback most recent call last optcondaenvsrapidslibpython sitepackagescudfcorecolumncolumnpy in ascolumnarbitrary nanasnull dtype name data ascolumn paarrayarbitrary typepatype frompandasnanasnull dtypedtype optcondaenvsrapidslibpython sitepackagespyarrowarraypxi in pyarrowlibarray optcondaenvsrapidslibpython sitepackagespyarrowarraypxi in pyarrowlibsequencetoarray optcondaenvsrapidslibpython sitepackagespyarrowerrorpxi in pyarrowlibcheckstatus ArrowInvalid Cannot mix NumPy dtypes int and datetime During handling of the above exception another exception occurred ArrowInvalid Traceback most recent call last tmp IntroductiontocuDFtestpy in module df cudfDataFrame id ids timestamp timestampsnp printdf optcondaenvsrapidslibpython sitepackagescudfcoredataframepy in initself data index columns dtype for i colname series in enumeratedata selfinserti colname series forceindexindex is not None selfaddemptycolumnscolumns index optcondaenvsrapidslibpython sitepackagescudfcoredataframepy in insertself loc column value forceindex selfcols column selfprepareseriesforadd value forceindexforceindex namecolumn keys listselfcolskeys optcondaenvsrapidslibpython sitepackagescudfcoredataframepy in prepareseriesforaddself col forceindex name if not SCALAR and name is None and hasattrcol name name colname series Seriescol namename if not SCALAR else col selfsanitizecolumnsseries series selfsanitizevaluesseries SCALAR optcondaenvsrapidslibpython sitepackagescudfcoreseriespy in initself data index name nanasnull dtype if not isinstancedata columnTypedColumnBase data columnascolumn data nanasnullnanasnull dtypedtype namename optcondaenvsrapidslibpython sitepackagescudfcorecolumncolumnpy in ascolumnarbitrary nanasnull dtype name data ascolumn nparrayarbitrary dtypenptype nanasnullnanasnull if hasattrdata name and name is not None optcondaenvsrapidslibpython sitepackagescudfcorecolumncolumnpy in ascolumnarbitrary nanasnull dtype name data datetimeDatetimeColumnfromnumpyarbitrary elif arbitrarydtypekind in O U data ascolumnpaArrayfrompandasarbitrary else data ascolumnrmmtodevicearbitrary nanasnullnanasnull optcondaenvsrapidslibpython sitepackagespyarrowarraypxi in pyarrowlibArrayfrompandas optcondaenvsrapidslibpython sitepackagespyarrowarraypxi in pyarrowlibarray optcondaenvsrapidslibpython sitepackagespyarrowerrorpxi in pyarrowlibcheckstatus optcondaenvsrapidslibpython sitepackagespyarrowerrorpxi in pyarrowlibcheckstatus ArrowInvalid only handle dimensional arrays cumlbenchmarks Fix error AlgorithmPair object has no attribute setupcpu replace old cumlquickbenchmarks with working version of cumlbenchmarks Remove cuDatashaderipynb This question is about intermediatenotebooksexamplesweatheripynb At the last of section Using Inner Joins to Filter Weather Observations total length of stations like lenatlantastationsdf is used to calculate average precipitation However the numbers of stations are not the same per year Therefore the result values are too small in the case that fewer stations only exist Why does this notebook use the total number of stations as a denominator Improved the Buildmd docs to include clearer updated directions and how to use the branches Thank you for contributing to RAPIDS Notebooks Here are some guidelines to help the review process go smoothly Please write a description in this text box of the changes that are being made Please ensure that you have written units tests for the changes madefeatures added If you are closing an issue please use one of the automatic closing words as noted here If your pull request is not ready for review but you want to make use of the continuous integration testing facilities please label it with WIP If your pull request is ready to be reviewed without requiring additional work on top of it then remove the WIP label if present and replace it with REVIEW If assistance is required to complete the functionality for example when the CC code of a feature is complete but Python bindings are still required then add the label HELPREQ so that others can triage and assist The additional changes then can be implemented on top of the same PR If the assistance is done by members of the rapidsAI team then no additional actions are required by the creator of the original PR for this otherwise the original author of the PR needs to give permission to the persons assisting to commit to their personal fork of the project If that doesnt happen then a new PR based on the code of the original PR can be opened by the person assisting which then will be the PR that will be merged Once all work has been done and review has taken place please do not add features or make changes out of the scope of those requested by the reviewer doing this just add delays as already reviewed code ends up having to be rereviewedit is hard to tell what is new etc Further please do not rebase your branch on masterforce pushrewrite history doing any of these causes the context of any comments made by reviewers to be lost If conflicts occur against master they should be resolved by merging master into the branch used for making the pull request Many thanks in advance for your cooperation Describe the bug Hi I am reading the following blog and when I try to reproduce the example notebooks the results do not match In my testing the best result is always MSEOLSTHEORY and not MSERIDGE as stated in the blog Any ideas why is this happening Could the code be updated to make reproducible results similar to the blog StepsCode to reproduce bug I am usign todays rapids nightly build from Dockerhub I have git cloned the notebookscontrib repo master v and run the cells Expected behavior Same results as in the blog Environment details please complete the following information DGX Additional context Add any other context about the problem here Due to changes in RMM there are a few notebooks that need to be updated to the new API Alerting those who maintain the respective notebooks Changes Readme Notebooks to update Spotify Playlist cjnolet show me the word count VibhuJawa introduce blazingsql intermediate BlazingSQL demo notebooks Describe the bug Colab script has several new issues when installing nightlies cudf is installed as when installed a stable release like the script fails when installing xgboost the script fails with a error when all libraries are installed in cudf and cugraph throw Attribute errors around features that have been removed for cudf errror AttributeError type object cudflibgpuarrowCudaRecordBatchStreamReader has no attribute reducecython which was removed in cugraph error AttributeError module pyarrowlib has no attribute LargeListType 