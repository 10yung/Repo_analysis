The command caniuse elementsFromPoint return elementsfrompoint not found This project uses a fork of yargs with a configbooleans branch It looks like the new yargsparser has changes related to default booleans and this fork may no longer be required Snippet of some of the changes js ObjectkeysflagsconfigsforEachfunction configKey setting arguments via CLI takes precedence over values within the config file if argv key undefined flagsdefaulted key delete argv key setArgkey config key catch ex if argv configKey error Errorinvalid json config file s configPath Snippet of some of current yargsparser code js ObjectkeysconfigforEachfunction key setting arguments via CLI takes precedence over values within the config file if hasKeyargv fullKeysplit flagsdefaulted fullKey flagsarrays fullKey configuration combinearrays setArgfullKey value References I would say this PR is indicative at the moment and will require some rework which Im happy to do Eg I have included two variations of automatic conversion from coffeescript to JS using I have also left most of the indentation alone in order to simplify diffs The finished code would require proper formatting The PR builds on the decaffeinate conversion as I preferred its output This package will let you publish the latest caniuse in the Ubuntu store and from there reach many users on all the supported Ubuntu versions and Linux distributions You just have to go to and enable the automated continuous delivery It was packaged and released to the store by DavidResendizz during google codein So when you try to register the name you will find that it is already taken You just have to fill the form claiming that you are the upstream developer and we will take care of the transfer It would be nice to add support fot the free desktop XDG base directory specification where configurations should be placed in XDGCONFIGHOMEappname This PR introduces a fix required in With this changes the output will be like this I also experimented with spaces between versions and supers but they seem too large So I decided to leave a version without spaces between versions and supers Sorry but I have to ask about that As you know nowadays CoffeeScript is pretty outdated Want to help out create pull requests but those CoffeeScript lines makes me really sick there is no reason to learn that in and I am quite really sure there are plenty amount of people who dont want to write CoffeeScript So converting the project vanilla JavaScript will increase potential contributors Era is great but Id love to be able to only display browsers and usage percentage for only those browser above or some other configurable threshold Just a feature idea The supers for notes are the same color as the percentage to which they belong making them hard to see It would be nice if they were all a consistent color not the redyellowgreen so I could see the note and spot which version it applies to easily caniuse let example Eg I would like to show browser share for a specific country instead of the global data 