How we can grab the hostname of the server on which the container is runnig and send this hostname to the logs agregator syslogng logstash etc Something we got when we use docker service logs SERVICETASK And the output is nodeapp zyp bh k dnSRVNAME app listening on port nodeapp zyp bh k dnSRVNAME queryDb took ms select from visits limit nodeapp zyp bh k dnSRVNAME db error Error read ECONNRESET nodeapp zyp bh k dnSRVNAME at TCPonStreamRead internalstreambasecommonsjs nodeapp zyp bh k dnSRVNAME errno ECONNRESET nodeapp zyp bh k dnSRVNAME code ECONNRESET nodeapp zyp bh k dnSRVNAME syscall read nodeapp zyp bh k dnSRVNAME fatal true nodeapp zyp bh k dnSRVNAME nodeapp zyp bh k dnSRVNAME usrsrcappsrcdbmysqljs nodeapp zyp bh k dnSRVNAME throw err nodeapp zyp bh k dnSRVNAME nodeapp zyp bh k dnSRVNAME nodeapp zyp bh k dnSRVNAME Error read ECONNRESET nodeapp zyp bh k dnSRVNAME at TCPonStreamRead internalstreambasecommonsjs nodeapp zyp bh k dnSRVNAME errno ECONNRESET nodeapp zyp bh k dnSRVNAME code ECONNRESET nodeapp zyp bh k dnSRVNAME syscall read nodeapp zyp bh k dnSRVNAME fatal true nodeapp zyp bh k dnSRVNAME Hi I have recently set up a logspout container pre version services logspout image gliderlabslogspoutv restart unlessstopped command udp memlimit m memswaplimit m cpus environment RAWFORMAT type docker hostname fqdn containerName toJSON ContainerName labels toJSON ContainerConfigLabels message toJSON Data BACKLOGfalse ROUTEURISudp volumes varrundockersocktmpdockersock pre This works perfectly unless you configure disk block limits on another dockercompose container pre blkioconfig devicereadbps path devsdb rate mb devicereadiops path devsdb rate devicewritebps path devsdb rate mb devicewriteiops path devsdb rate pre If you start logspout something like this happens pre logspout logspout v by gliderlabs logspout adapters udp multiline raw syslog tcp tls logspout options logspout backlogfalse logspout persistmntroutes logspout jobs pump routes http healthlogsroutes logspout routes logspout ADAPTER ADDRESS CONTAINERS SOURCES OPTIONS logspout rawudp map logspout pump json cannot unmarshal number into Go struct field BlockLimitRate of type string pre Thanks in advance much appreciated Kind Regards M Hi Ive commented to related PR chat but couldnt get an answer so Im asking from there Since log messages doesnt includes miliseconds in timestamp fields observing exceptions is so hard Is there a parameter or something for getting timestamps from docker logs It really hurts us and feels weird that only a few person talks about this issue am I missing something If a container was started by a swarm service this additionally checks the service labels in the MatchContainer function It also looks at service labels when deciding whether to ignore a container based on labels This approach doesnt require any special configuration it should just work seamlessly whether containers are started individually or as part of a service or stack Ive been evaluating logspout and it has been meeting all my needs until now Im able to use filterlabels to only include logs from containers with certain labels My next step was to try this out in swarm mode It seems that labels in swarm mode apply to the service not individual containers I can inspect containers created by the docker stack deploy command and they dont have the labels defined in my yml file These are the labels I had been using in the filterlabels parameter Those labels DO exist when I inspect the service created by docker stack deploy Since my individual containers dont have these labels I get not logs through logspout If I remove the filterlabels parameter I get logs from my containers but the log entries dont include my custom labels either only the labels the stack applies to the container Labels for a container running as part of a stack json Labels comdockerstacknamespace logspout comdockerswarmnodeid r ryq ozir ngzezpzyib tm comdockerswarmserviceid jvbmw dkxk oclt aeg ro comdockerswarmservicename logspoutlogspout comdockerswarmtask comdockerswarmtaskid pg eb smkts uaaozqkfq comdockerswarmtaskname logspoutlogspout pg eb smkts uaaozqkfq And labels for the service which has the id in the comdockerswarmserviceid label from above json ID jvbmw dkxk oclt aeg ro Version Index CreatedAt T Z UpdatedAt T Z Spec Name logspoutlogspout Labels comdockerstackimage logspoutfilelatest comdockerstacknamespace logspout mylabel works myotherlabel really A log entry from a different container showing just the comdockerstack and comdockerswarm labels json container logtestecho w hfexf l g lqmas lrheo labels comdockerstacknamespace logtest comdockerswarmnodeid r ryq ozir ngzezpzyib tm comdockerswarmserviceid b giiu exm gb bclro udle comdockerswarmservicename logtestecho comdockerswarmtask comdockerswarmtaskid w hfexf l g lqmas lrheo comdockerswarmtaskname logtestecho w hfexf l g lqmas lrheo timestamp T Z source stdout line log Is it possible to check labels for a given service and filter container logs accordingly I know that traefik relies heavily on labels and its able to detect when a service starts up with given labels I know its a different project and different authors but its a similar situation in terms of dealing with swarm mode Perhaps specifically telling logspout it is operating in a swarm so it knows to check for services instead of just containers I would take a crack at it but I havent wrapped my head around the code enough to know where to start The documentation actually is amazing but for me maybe for someone else its not clear can I use the rotating logs setup with the logspout For example I have the following command for starting some docker container docker run logopt maxsize m logopt maxfile And the Logstash command is docker run d namelogspout volumevarrundockersockvarrundockersock gliderlabslogspout tcpaddressip As I know the docker rotating logs mechanism will remove the oldlogs so the total size of all logfiles will remain constant Is this not a problem for Logspout Can logspout correctly process multiple log files the docker template tags for swarm and compose are fairly different it took my quite a while to figure out the source documentation is here a working reasonable logspout configuration for swarm is logspout image gliderlabslogspoutlatest networks logging volumes etchostnameetchosthostnamero varrundockersockvarrundockersock environment SYSLOGTAGindex ServiceName SYSLOGHOSTNAMEindex NodeHostname INACTIVITYTIMEOUT m BACKLOGfalse SYSLOGSTRUCTUREDDATAlogdna key tag swarmstacks LOGSPOUTignore command multilinesyslogtlssyslogalogdnacom deploy mode global resources limits cpus memory M reservations cpus memory M Please update the READMEmd to include ROUTEURIS in the environment variables and an invocation example I only came across this with a search and found and my use case is logspout in a docker stack Documentation states Logspout relies on the Docker API to retrieve container logs A failure in the API may cause a log stream to hang Logspout can detect and restart inactive Docker log streams Use the environment variable INACTIVITYTIMEOUT to enable this feature Eg INACTIVITYTIMEOUT m for a minute threshold how does exactly detect the stream to hang how does this interact with docker logging option mode nonblocking what exactly restart can detect and restart inactive Docker log streams