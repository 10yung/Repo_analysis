 Fixes an issue with using systemdspawner with CentOS The changes have been in master since June It would be nice to release this to users i have jupyterhub on my machineubuntu and im trying to use docker with continuumioanaconda image but after making right config while jupyter trying to spawn server for me after loggin in So i got error error Can someome help me with this error Also this image already downloaded in my docker list jupyterhubconfigpy cJupyterHubip cJupyterHubport cJupyterhubjupyterhubcookiesecret jupyterhubcookiesecret cJupyterHubsslkey cJupyterHubsslcert SPAWNER from dockerspawner import DockerSpawner cJupyterHubspawnerclass DockerSpawner import netifaces docker netifacesifaddressesdocker docker ipv docker netifacesAFINET cJupyterHubhubipdocker ipv addr cDockerSpawnerimage continuumioanaconda cd b b server Client Error Not Found manifest for continuumioanaconda cd b b not found ERRORasyncioTask exception was never retrieved future Task finished coroBaseHandlerspawnsingleuser done defined at usrlocallibpython distpackagesjupyterhubhandlersbasepy exceptionNotFoundHTTPError Client Error Not Found for url httpdockerlocalhostv imagescreatetagcd b b fromImagecontinuumio Fanaconda Traceback most recent call last File usrlocallibpython distpackagesdockerapiclientpy line in raiseforstatus responseraiseforstatus File usrlibpython distpackagesrequestsmodelspy line in raiseforstatus raise HTTPErrorhttperrormsg responseself requestsexceptionsHTTPError Client Error Not Found for url httpdockerlocalhostv imagescreatetagcd b b fromImagecontinuumio Fanaconda During handling of the above exception another exception occurred Traceback most recent call last File usrlocallibpython distpackagesjupyterhubhandlersbasepy line in spawnsingleuser timedeltasecondsselfslowspawntimeout finishspawnfuture File usrlocallibpython distpackagesjupyterhubhandlersbasepy line in finishuserspawn await spawnfuture File usrlocallibpython distpackagesjupyterhubuserpy line in spawn raise e File usrlocallibpython distpackagesjupyterhubuserpy line in spawn url await genwithtimeouttimedeltasecondsspawnerstarttimeout f File usrlocallibpython distpackagestornadogenpy line in run yielded selfgenthrowexcinfo type ignore File usrlocallibpython distpackagesdockerspawnerdockerspawnerpy line in start yield selfpullimageimage File usrlocallibpython distpackagestornadogenpy line in run value futureresult File usrlocallibpython distpackagestornadogenpy line in run yielded selfgenthrowexcinfo type ignore File usrlocallibpython distpackagesdockerspawnerdockerspawnerpy line in pullimage yield selfdockerpull repo tag File usrlocallibpython distpackagestornadogenpy line in run value futureresult File usrlibpython concurrentfuturesbasepy line in result return selfgetresult File usrlibpython concurrentfuturesbasepy line in getresult raise selfexception File usrlibpython concurrentfuturesthreadpy line in run result selffnselfargs selfkwargs File usrlocallibpython distpackagesdockerspawnerdockerspawnerpy line in docker return margs kwargs File usrlocallibpython distpackagesdockerapiimagepy line in pull selfraiseforstatusresponse File usrlocallibpython distpackagesdockerapiclientpy line in raiseforstatus raise createapierrorfromhttpexceptione File usrlocallibpython distpackagesdockererrorspy line in createapierrorfromhttpexception raise clse responseresponse explanationexplanation dockererrorsNotFound Client Error Not Found manifest for continuumioanaconda cd b b not found Would it be possible to launch this systemd containers inside remote machines via ssh or something like that This adds a poststarthook that is similar to spawnerprespawnhook but runs just after we successfully start the systemd service This is helpful when running code in the hook that depends on dynamic users being allocated which happens after the service is started For example referencing the dynamic user name in chown With this logic we can do something like this in jupyterhubconfigpy import subprocess cJupyterHubspawnerclass systemdspawnerSystemdSpawner cSystemdSpawnerdynamicusers True cSystemdSpawnerunitnametemplate jupyterUSERID def getexamplesspawner unitname fjupyterspawneruserid examplesdir fvarlibprivatespawnerusernameexamples copy examples from an external loc to examplesdir these files will be owned by root so make them owned by the dynamic user with subprocesscall chown R funitnameunitname examplesdir cSystemdSpawnerpoststarthook getexamples The files that are created by the jupyterlab instance run under this spawner have permissions rwrr For some use cases it would make sense that the files of one user could not be readable by other users The usual way to set a default umask in bashrc or profile does not work since thet apply at login time whereas the spawner does not log in Could you add an option to set the umask for the jupyter process I noticed this while getting a condaforge package ready for systemdspawner I installed JupyterHub on CentOS and config the spawner using sudospawner I can access to the web interface but the spawner failed to start Does anyone know whats wrong here D JupyterHub base Refreshing auth for w lfvn D JupyterHub user Creating class systemdspawnersystemdspawnerSystemdSpawner for w lfvn D JupyterHub systemdspawner userw lfvn Initialized spawner with unit jupyterw lfvnsingleuser I JupyterHub log GET jupyterhub jupyterhubspawn w lfvn ms D JupyterHub pages Triggering spawn with default options for w lfvn D JupyterHub base Initiating spawn for w lfvn D JupyterHub base concurrent spawns D JupyterHub base active servers W JupyterHub auth Failed to open PAM session for w lfvn PAM Error Cannot makeremove an entry for the specified session W JupyterHub auth Disabling PAM sessions from now on D JupyterHub user Calling Spawnerstart for w lfvn D JupyterHub systemdspawner Bad message ValueErrorunsupported format character U x at index name JupyterHub msg user Using port s to start spawning for user s args w lfvn levelname DEBUG levelno pathname usrlibpython sitepackagessystemdspawnersystemdspawnerpy filename systemdspawnerpy module systemdspawner excinfo None exctext None stackinfo None lineno funcName start created msecs relativeCreated thread threadName MainThread processName MainProcess process I JupyterHub systemdspawner userw lfvn Unit jupyterw lfvnsingleuser in failed state resetting D JupyterHub systemdspawner userw lfvn Running systemdrun with usrbinsystemdrun unit jupyterw lfvnsingleuser uid gid setenvPATHusrlocalsbinusrlocalbinusrsbinusrbinrootbin setenvLANGenUSUTF setenvJUPYTERHUBAPITOKENcf a a d cece b e setenvJPYAPITOKENcf a a d cece b e setenvJUPYTERHUBCLIENTIDjupyterhubuserw lfvn setenvJUPYTERHUBHOST setenvJUPYTERHUBOAUTHCALLBACKURLjupyteruserw lfvnoauthcallback setenvJUPYTERHUBUSERw lfvn setenvJUPYTERHUBSERVERNAME setenvJUPYTERHUBAPIURL setenvJUPYTERHUBACTIVITYURL setenvJUPYTERHUBBASEURLjupyter setenvJUPYTERHUBSERVICEPREFIXjupyteruserw lfvn setenvSHELLbinbash binbash c cd homew lfvn exec jupyterhubsingleuser port notebookdirnotebooks NotebookAppdefaulturltree Running as unit jupyterw lfvnsingleuserservice D JupyterHub systemdspawner userw lfvn unit jupyterw lfvnsingleuser is active D JupyterHub spawner Polling subprocess every s I JupyterHub log GET jupyterhubspawn jupyterhubspawnpendingw lfvn w lfvn ms I JupyterHub pages w lfvn is pending spawn I JupyterHub log GET jupyterhubspawnpendingw lfvn w lfvn ms D JupyterHub systemdspawner userw lfvn unit jupyterw lfvnsingleuser is not active ERRORasyncioTask exception was never retrieved future Task finished coroBaseHandlerspawnsingleuser done defined at usrlibpython sitepackagesjupyterhubhandlersbasepy exceptionHTTPError Traceback most recent call last File usrlibpython sitepackagesjupyterhubhandlersbasepy line in spawnsingleuser timedeltasecondsselfslowspawntimeout finishspawnfuture tornadoutilTimeoutError Timeout During handling of the above exception another exception occurred Traceback most recent call last File usrlibpython sitepackagesjupyterhubhandlersbasepy line in spawnsingleuser status spawnerlogname tornadowebHTTPError HTTP Internal Server Error Spawner failed to start status The logs for w lfvn may contain details W JupyterHub user w lfvns server never showed up at after seconds Giving up D JupyterHub user Stopping w lfvn D JupyterHub systemdspawner userw lfvn unit jupyterw lfvnsingleuser is not active D JupyterHub user Deleting oauth client jupyterhubuserw lfvn D JupyterHub user Finished stopping w lfvn E JupyterHub gen Exception in Future Task finished coroBaseHandlerspawnsingleuserlocalsfinishuserspawn done defined at usrlibpython sitepackagesjupyterhubhandlersbasepy exceptionTimeoutErrorServer at didnt respond in seconds after timeout Traceback most recent call last File usrlib python sitepackagestornadogenpy line in errorcallback futureresult File usrlibpython sitepackagesjupyterhubhandlersbasepy line in finishuserspawn await spawnfuture File usrlibpython sitepackagesjupyterhubuserpy line in spawn await selfwaitupspawner File usrlibpython sitepackagesjupyterhubuserpy line in waitup raise e File usrlibpython sitepackagesjupyterhubuserpy line in waitup httpTrue timeoutspawnerhttptimeout sslcontextsslcontext File usrlibpython sitepackagesjupyterhubutilspy line in waitforhttpserver timeouttimeout File usrlibpython sitepackagesjupyterhubutilspy line in exponentialbackoff raise TimeoutErrorfailmessage TimeoutError Server at didnt respond in seconds First of all many thanks for creating this tool Its super awesome We use jupyterhub on an academic computer cluster where the home directories are exported from another machine via NFS With root squashing this means that root cant see or cd into users home directories As such when systemdrun is run and by default sets the WorkingDir to the spawning users home directory this fails and the service fails with the CHDIR error I guess this relates to the order in which systemd does the chdir to the WorkingDir and becoming the User Once it has become the specified user it can chdir into the home directory but as root it cant In our case jupyterhub runs as a special jupyterhub user who has sudo power to run systemdrun but I dont think this matters I can override this with the userworkingdir setting nice but actually I would like it if jupyterhub session started in the users home directory From what I can see you are not explicitly setting the WorkingDir in the systemdrun call so I guess I am proposing adding a config option that would allow setting this its default of the users home dir doesnt work in this case It looks like later systemdrun commands support a workingdir option but my old systemd does not maybe a propertyWorkingDirXXX works I can probably figure out how to do this and send a PR if you think this is reasonable Thanks again fix to run jupyterhub with systemdspawner on rhea account it also set corrently memory limit If jupyterhub wasnt run in system environment user cannot run jupyterhubsingleuser and fail to spawn