I am trying to upgrade an existing project to Typescript I have the following lines In legacy coffee refreshAfter after thingrefresh updateBefore before thingupdate refreshAndUpdate updateBefore refreshAfter updateThings refreshAndUpdate opts doSomething Just to make sure I understand what this is doing when updateThings is called it runs refreshAfter doSomething updateBefore Then in my TS file I have window requireunderscore requireYouAreDaChef Also tried window chef requireYouAreDaChef When I run I get ReferenceError after is not defined Is there something special I have to do with the module loader Pass window to it or something I would like to advice a single Object instance that is perhaps created by a Function via new So if I have class Blender doIt this works fine YADCBlenderbefore but this doesnt myBlender new Blender YADCmyBlenderbefore I would like to advice ONLY the object at hand and not the prototype Is this too much to ask My main pain is that my instance is extended after creation with methods not known at the creator Function class definition If you could create classes that are compatible with CoffeeScript YouAreDaChef would be very useful for pure JS programmers Classlike things Dots Annotations that replace direct class manipulation Serve as a signal of manipulations to come and permit retroactive manipulation annotating a class should check for maniplations especially by namespace Combine this with Eigenclass support to provide DCI support IOW a way to write foo new Blunderbus bar new Blunderbus YouAreDaChefbar advices Such that the advice decorates bar but not foo because it is directly advising the instance and not the prototype Any chance this will work with the new version of Node NPM wont install it Maybe I will just try to force it and see what happens 