Hey mafaca sorry that this isnt a real issue but I dont know of any other way to contact you Im making a VR mod for a game and for that I need to edit the globalgamemanagers file and add OpenVR to the EnabledVRDevices in BuildSettings Utiny is already able to read this file so I was trying to explore this codebase in hopes of learning how to edit this file programmatically Any hints you can give me on how to achieve this or what parts of this code base I could pay special attention to Thanks in advance Latest Unity I cant send the original and unfortunately your tool does not support exporting just this asset in original form But I think its channel mask thats incorrect Updating AssetsMeshMesh asset GUID dc c e ec a f f ed d Missing vertex input vertex Filename UsersbuilduserbuildslaveunitybuildRuntimeGfxDevicemetalGpuProgramsMetalmm Line Invalid channel info for Metal vertex decl Filename UsersbuilduserbuildslaveunitybuildRuntimeGfxDevicemetalVertexFormatMetalmm Line Obtained stack frames Thread x c c may have been prematurely finalized x fff fdf fa in pthreadkill Thread x c c may have been prematurely finalized x fff fd a c in abort Thread x c c may have been prematurely finalized x fff fd cd in err Thread x c c may have been prematurely finalized x fff da cc in MTLIOAccelCommandBufferStorageGrowSegmentListcold Thread x c c may have been prematurely finalized x fff da fc in MTLReportFailure Thread x c c may have been prematurely finalized x fff da ba in MTLVertexAttributeDescriptorInternal setFormat Thread x c c may have been prematurely finalized x fb e in anonymous namespaceCreateRenderPipelinemetalPipeKey const Thread x c c may have been prematurely finalized x fb e in objcobjectMTLRenderPipelineState const strong GfxDoubleCachemetalPipeKey idMTLRenderPipelineState strong GfxGenericHashmetalPipeKey MemCmpEqualTometalPipeKey GfxDoubleCacheConcurrencyPolicyLocklessGet GfxDoubleCacheDefaultEmptyDeletedGeneratormetalPipeKey MemLabelIdentifier GetobjcobjectMTLRenderPipelineState metalPipeKey const metalPipeKey const objcobjectMTLRenderPipelineState metalPipeKey const Thread x c c may have been prematurely finalized x fb fce in GpuProgramMetalGetCachedPipelinemetalPipeKey const Thread x c c may have been prematurely finalized x fb bec in GfxDeviceMetalBaseCommonDrawSetupVertexDeclarationMetal GfxBuffer const unsigned int const int GfxPrimitiveType bool Thread x c c may have been prematurely finalized x fb in nonvirtual thunk to GfxDeviceMetalBaseDrawBufferRangesPlatformGfxBuffer unsigned int GfxBuffer const unsigned int const int DrawBuffersRange const int VertexDeclaration unsigned long bool Thread x c c may have been prematurely finalized x e a in SinglePassStereoSupportExtDrawBuffersStereoGfxBuffer unsigned int GfxBuffer const unsigned int const int DrawBuffersRange const int VertexDeclaration unsigned long Thread x c c may have been prematurely finalized x fb c in GfxDeviceMetalBaseDrawBuffersGfxBuffer unsigned int GfxBuffer const unsigned int const int DrawBuffersRange const int VertexDeclaration Thread x c c may have been prematurely finalized x dd eb in GfxDeviceWorkerRunCommandThreadedStreamBuffer Thread x c c may have been prematurely finalized x fb e c in GfxDeviceWorkerAutoreleasePoolProxy Thread x c c may have been prematurely finalized x dd b in GfxDeviceWorkerRunExtThreadedStreamBuffer Thread x c c may have been prematurely finalized x dcf in GfxDeviceWorkerRunGfxDeviceWorkervoid Thread x c c may have been prematurely finalized x ebbd f in ThreadRunThreadWrappervoid Thread x c c may have been prematurely finalized x fff feaee in pthreadstart Thread x c c may have been prematurely finalized x fff feaa b in threadstart Mesh asset YAML TAG u tagunity dcom u Mesh mName serializedVersion mSubMeshes serializedVersion firstByte indexCount topology baseVertex firstVertex vertexCount localAABB mCenter x y z mExtent x y z mShapes vertices shapes channels fullWeights mBindPose mBoneNameHashes mRootBoneNameHash mMeshCompression mIsReadable mKeepVertices mKeepIndices mIndexFormat mIndexBuffer b a b a d b c d a c f d e f c e f e b a b a d b c d a c f d e f c e f e b a b a d b c d a c f d e f c e f e b a b a d b c d a c f d e f c e f e mSkin mVertexData mCurrentChannels mVertexCount mChannels stream offset format dimension stream offset format dimension stream offset format dimension stream offset format dimension stream offset format dimension stream offset format dimension stream offset format dimension stream offset format dimension mDataSize typelessdata mCompressedMesh mVertices mNumItems mRange mStart mData mBitSize mUV mNumItems mRange mStart mData mBitSize mNormals mNumItems mRange mStart mData mBitSize mTangents mNumItems mRange mStart mData mBitSize mWeights mNumItems mData mBitSize mNormalSigns mNumItems mData mBitSize mTangentSigns mNumItems mData mBitSize mFloatColors mNumItems mRange mStart mData mBitSize mBoneIndices mNumItems mData mBitSize mTriangles mNumItems mData mBitSize mUVInfo mLocalAABB mCenter x y z mExtent x y z mMeshUsageFlags mBakedConvexCollisionMesh mBakedTriangleCollisionMesh mMeshOptimized mafaca arrived at of the extraction of the files crashes giving me an error and I do not understand what it is screenshot of the problem Hi It seems for my use case ETC textures I am not using any of the dll TextureConverterWrapper texgenpack crunch crunchunitydll however are there linux versions of these dlls available or can they be made to work on linux in a net core environment For now I will just raise exceptions if it tries to access these external functions Where are the dlls from Are they open source Can they be reverse engineered and ported to c perhaps or are they insanely complicated Is there any way to add assemblies to fix theses MonoBehaviour errors Unable to read MonoBehaviour because definition for script class wasnt found I know what assembly has it and where the class is Import SystemIndexOutOfRangeException uTinyRipperClassesShadersSerializedSubProgramExportShaderWriter writer ShaderSubProgramBlob blob ShaderType type Boolean isTier uTinyRipperClassesShadersSerializedProgramExportShaderWriter writer ShaderType type uTinyRipperClassesShadersSerializedPassExportShaderWriter writer uTinyRipperClassesShadersSerializedSubShaderExportShaderWriter writer uTinyRipperClassesShadersSerializedShaderExportShaderWriter writer uTinyRipperClassesShaderExportBinaryIExportContainer container Stream stream Func exporterInstantiator uTinyRipperGUIExportersShaderAssetExporterExportIExportContainer container Object asset String path uTinyRipperProjectAssetExportCollectionExportProjectAssetContainer container String dirPath uTinyRipperConvertersProjectExporterExportString path GameCollection fileCollection IEnumerable files ExportOptions options uTinyRipperGameStructureExportString exportPath Func filter uTinyRipperGUIMainWindowExportFilesObject data this error in new version Import SystemArgumentException SystemThrowHelperThrowArgumentExceptionExceptionResource resource SystemCollectionsGenericDictionary InsertTKey key TValue value Boolean add uTinyRipperConvertersProjectAssetContainerAddResourcesResourceManager manager uTinyRipperConvertersProjectAssetContainerctorProjectExporter exporter VirtualSerializedFile file IEnumerable assets IReadOnlyList collections uTinyRipperConvertersProjectExporterExportString path GameCollection fileCollection IEnumerable files ExportOptions options uTinyRipperGameStructureExportString exportPath Func filter uTinyRipperGUIMainWindowExportFilesObject data Game PriPara All Idol Perfect Stage Error Log Import SystemArgumentOutOfRangeException Index was out of range Must be nonnegative and less than the size of the collection Parameter name index at SystemThrowHelperThrowArgumentOutOfRangeExceptionExceptionArgument argument ExceptionResource resource at SystemSZArrayHelpergetItem T Int index at uTinyRipperClassesShadersSerializedProgramExportShaderWriter writer ShaderType type at uTinyRipperClassesShadersSerializedPassExportShaderWriter writer at uTinyRipperClassesShadersSerializedSubShaderExportShaderWriter writer at uTinyRipperClassesShadersSerializedShaderExportShaderWriter writer at uTinyRipperClassesShaderExportBinaryIExportContainer container Stream stream Func exporterInstantiator at uTinyRipperGUIExportersShaderAssetExporterExportIExportContainer container Object asset String path Action callback at uTinyRipperGUIExportersShaderAssetExporterExportIExportContainer container Object asset String path at uTinyRipperAssetExportersAssetExportCollectionExportInnerProjectAssetContainer container String filePath at uTinyRipperAssetExportersAssetExportCollectionExportProjectAssetContainer container String dirPath at uTinyRipperAssetExportersProjectExporterExportString path FileCollection fileCollection IEnumerable assets at uTinyRipperGUIMainWindowExportFilesObject data This makes it extremely difficult to bulk export from the game Example file that will cause the crash is on the bottom of this report Thanks for your time crashfilezip 