 What version of docker are you running Latest provided by AWS EKS What version of registrator are you running V Did you build a custom version of registrator If so what is that image No What is the exact command you are running registrator with registrator explicittrue resync cleanup deregisteralways consulNODEIP What is the exact command you are running your container with A log capture of all the docker events before during and after the issue If relevant Dockerfile for application that is having issues Docker inspect of service pod Id ca d d b ed c fd a c a ed ce e ccfd b Created T Z Path nginx Args g daemon off State Status running Running true Paused false Restarting false OOMKilled false Dead false Pid ExitCode Error StartedAt T Z FinishedAt T Z Image sha b a f ef db bf f f bfde ed c ccd f ResolvConfPath varlibdockercontainers b ead d f a cd ebe b fad df e dee a abf c f resolvconf HostnamePath varlibdockercontainers b ead d f a cd ebe b fad df e dee a abf c f hostname HostsPath varlibkubeletpods b dd b ea ce d fbeetchosts LogPath varlibdockercontainers ca d d b ed c fd a c a ed ce e ccfd b ca d d b ed c fd a c a ed ce e ccfd b jsonlog Name k snginxnginx deployment bc b b cvnconsulclient b dd b ea ce d fbe RestartCount Driver overlay Platform linux MountLabel ProcessLabel AppArmorProfile ExecIDs null HostConfig Binds varlibkubeletpods b dd b ea ce d fbevolumeskubernetesiosecretdefaulttokenkcdwpvarrunsecretskubernetesioserviceaccountro varlibkubeletpods b dd b ea ce d fbeetchostsetchosts varlibkubeletpods b dd b ea ce d fbecontainersnginx d e devterminationlog ContainerIDFile LogConfig Type jsonfile Config maxfile maxsize m NetworkMode container b ead d f a cd ebe b fad df e dee a abf c f PortBindings null RestartPolicy Name no MaximumRetryCount AutoRemove false VolumeDriver VolumesFrom null CapAdd null CapDrop null Dns null DnsOptions null DnsSearch null ExtraHosts null GroupAdd null IpcMode container b ead d f a cd ebe b fad df e dee a abf c f Cgroup Links null OomScoreAdj PidMode Privileged false PublishAllPorts false ReadonlyRootfs false SecurityOpt seccompunconfined UTSMode UsernsMode ShmSize Runtime runc ConsoleSize Isolation CpuShares Memory NanoCpus CgroupParent kubepodspod b dd b ea ce d fbe BlkioWeight BlkioWeightDevice null BlkioDeviceReadBps null BlkioDeviceWriteBps null BlkioDeviceReadIOps null BlkioDeviceWriteIOps null CpuPeriod CpuQuota CpuRealtimePeriod CpuRealtimeRuntime CpusetCpus CpusetMems Devices DeviceCgroupRules null DiskQuota KernelMemory MemoryReservation MemorySwap MemorySwappiness null OomKillDisable false PidsLimit Ulimits null CpuCount CpuPercent IOMaximumIOps IOMaximumBandwidth MaskedPaths procacpi prockcore prockeys proclatencystats proctimerlist proctimerstats procscheddebug procscsi sysfirmware ReadonlyPaths procasound procbus procfs procirq procsys procsysrqtrigger GraphDriver Data LowerDir varlibdockeroverlay ff d daa ec ebc aa fbabfa fa f d baaec debac dinitdiffvarlibdockeroverlay b eaecedf fc f e f da c df d d a bf b ae b ediffvarlibdockeroverlay aa b baa b f dad b c a d dc c d e diffvarlibdockeroverlay d b b cc d f a d af cd e ed b f ac df diffvarlibdockeroverlay b d cdd ea ec e c e b a ca d da e b d d diffvarlibdockeroverlay b c ca c f a b d b b c bc b f d a adiffvarlibdockeroverlay a afabaf c a d cc a fdfd d eebb f be diffvarlibdockeroverlay bb b a ae ecf e b f bd a ae cc c c af cdiffvarlibdockeroverlay a af e cb f d f b e eef ea fe cc c abddiffvarlibdockeroverlay fd f cf a cc d db e f c b e fc c bea b c diffvarlibdockeroverlay e c aa be ffd f c b cda e fdf d d dffd c diffvarlibdockeroverlay b c f e f f d a fbf ef e d aa e cdcbc diffvarlibdockeroverlay abe ad bb e ce ab c e cfc b ccf a ff aa adiffvarlibdockeroverlay c d f bffeb fff f ffda e a e da b fd c diff MergedDir varlibdockeroverlay ff d daa ec ebc aa fbabfa fa f d baaec debac dmerged UpperDir varlibdockeroverlay ff d daa ec ebc aa fbabfa fa f d baaec debac ddiff WorkDir varlibdockeroverlay ff d daa ec ebc aa fbabfa fa f d baaec debac dwork Name overlay Mounts Type bind Source varlibkubeletpods b dd b ea ce d fbecontainersnginx d e Destination devterminationlog Mode RW true Propagation rprivate Type volume Name ad c e a c db e a e d ee bdfc a e b bf Source varlibdockervolumesad c e a c db e a e d ee bdfc a e b bf data Destination varcachenginx Driver local Mode RW true Propagation Type bind Source varlibkubeletpods b dd b ea ce d fbevolumeskubernetesiosecretdefaulttokenkcdwp Destination varrunsecretskubernetesioserviceaccount Mode ro RW false Propagation rprivate Type bind Source varlibkubeletpods b dd b ea ce d fbeetchosts Destination etchosts Mode RW true Propagation rprivate Config Hostname nginx deployment bc b b cvn Domainname User AttachStdin false AttachStdout false AttachStderr false ExposedPorts tcp tcp Tty false OpenStdin false StdinOnce false Env PODIP NAMESPACEconsulclient SERVICE NAMEnginx SERVICEPORT SERVICETAGSnginxeuwest NODENAMEip euwest computeinternal NODEIP KUBERNETESSERVICEPORT KUBERNETESSERVICEPORTHTTPS KUBERNETESPORTtcp KUBERNETESPORT TCPtcp KUBERNETESPORT TCPPROTOtcp KUBERNETESPORT TCPPORT KUBERNETESPORT TCPADDR KUBERNETESSERVICEHOST PATHusrlocalsbinusrlocalbinusrsbinusrbinsbinbin NGINXVERSION wheezy Cmd nginx g daemon off Healthcheck Test NONE Image sha b a f ef db bf f f bfde ed c ccd f Volumes varcachenginx WorkingDir Entrypoint null OnBuild null Labels annotationiokubernetescontainerhash d c annotationiokubernetescontainerports containerPort protocol TCP annotationiokubernetescontainerrestartCount annotationiokubernetescontainerterminationMessagePath devterminationlog annotationiokubernetescontainerterminationMessagePolicy File annotationiokubernetespodterminationGracePeriod iokubernetescontainerlogpath varlogpodsconsulclientnginx deployment bc b b cvn b dd b ea ce d fbenginx log iokubernetescontainername nginx iokubernetesdockertype container iokubernetespodname nginx deployment bc b b cvn iokubernetespodnamespace consulclient iokubernetespoduid b dd b ea ce d fbe iokubernetessandboxid b ead d f a cd ebe b fad df e dee a abf c f NetworkSettings Bridge SandboxID HairpinMode false LinkLocalIPv Address LinkLocalIPv PrefixLen Ports SandboxKey SecondaryIPAddresses null SecondaryIPv Addresses null EndpointID Gateway GlobalIPv Address GlobalIPv PrefixLen IPAddress IPPrefixLen IPv Gateway MacAddress Networks Description of the problem In AWS we are using EKS with AWS CNI The current AWS architecture preprovisions IPs on VM For instance and m xlarge VM may have IPs reserved for POD In this case they are not using bridge or overlay In EKS current Registrator code is not able to get POD IP consul is getting service entry with consulclient IP How reproducible very reproducible Steps to Reproduce Run consul using default consulhelm chart Start registrator like apiVersion extensionsv beta kind DaemonSet metadata creationTimestamp null labels run registrator name registrator spec selector matchLabels run registrator template metadata creationTimestamp null labels run registrator app registrator service consulregistrator department cloudops spec hostNetwork true containers image artifactoryarlocloudcomdockerlocalregistratorv name registrator command binsh args c registrator explicittrue resync cleanup deregisteralways consulNODEIP env name NODENAME valueFrom fieldRef fieldPath specnodeName name NODEIP valueFrom fieldRef fieldPath statushostIP name PODIP valueFrom fieldRef fieldPath statuspodIP volumeMounts mountPath tmpdockersock name dockersock volumes name dockersock hostPath path varrundockersock Run nginx pod apiVersion appsv kind Deployment metadata name nginx deployment labels app nginx deployment spec replicas selector matchLabels app nginx template metadata labels app nginx spec containers name nginx image k sgcrionginx ports containerPort env name NODENAME valueFrom fieldRef fieldPath specnodeName name NODEIP valueFrom fieldRef fieldPath statushostIP name PODIP valueFrom fieldRef fieldPath statuspodIP name NAMESPACE valueFrom fieldRef fieldPath metadatanamespace name SERVICE NAME value nginx name SERVICEPORT value name SERVICETAGS value nginxeuwest resources requests memory Mi cpu m limits memory Mi cpu m Actual Results Service entry of nginx with consulclient ip Expected Results Service entry of nginx should be there with podip Additional info Submitted pull request to solve this issue Extending the support to pull request The Registrator will register services to backend using runtime IPs provided by Kubernetes Since EKS will use a nonbridge approach ie preallocating IPs on WorkerNodes we need to have a way to pass dynamic IPs to Registrator In Kubernetes we can use downward status APIs to get POD ips at run time and we can assign an environment variable to them Example name PODIP valueFrom fieldRef apiVersion v fieldPath statuspodIP With this in mind we can run registrator like a daemon set while consulclient is also running as daemonset in Kubernetes apiVersion extensionsv beta kind DaemonSet metadata creationTimestamp null labels run registrator name registrator spec selector matchLabels run registrator template metadata creationTimestamp null labels run registrator app registrator service consulregistrator department cloudops spec hostNetwork true containers image artifactoryarlocloudcomdockerlocalregistratorv name registrator command binsh args c registrator useIpFromEnvPODIP explicittrue resync cleanup deregisteralways consulNODEIP env name NODENAME valueFrom fieldRef fieldPath specnodeName name NODEIP valueFrom fieldRef fieldPath statushostIP name PODIP valueFrom fieldRef fieldPath statuspodIP volumeMounts mountPath tmpdockersock name dockersock volumes name dockersock hostPath path varrundockersock Now deployment spec can be changed to below to provide autoregistration apiVersion appsv kind Deployment metadata name nginx deployment labels app nginx deployment spec replicas selector matchLabels app nginx template metadata labels app nginx spec containers name nginx image k sgcrionginx ports containerPort env name NODENAME valueFrom fieldRef fieldPath specnodeName name NODEIP valueFrom fieldRef fieldPath statushostIP name PODIP valueFrom fieldRef fieldPath statuspodIP name NAMESPACE valueFrom fieldRef fieldPath metadatanamespace name SERVICE NAME value nginx name SERVICEPORT value name SERVICETAGS value nginxeuwest resources requests memory Mi cpu m limits memory Mi cpu m The explicit argument was added in dc fd fa cb d dbe c f fec c c but not reflected in the docs This PR incorporates the changes from GH Consul was the last version to support the string Script API which had been long deprecated and later use string Args This PR updates Consul support to this new property I have compiled and tested and can confirm the Registrator SERVICECHECKSCRIPT environment param works with Consol with the below changes credit to jhsolor At present SERVICEportmetadata detection fails to account for the port type which prevents selective filtering eg of specific TCP or UDP ports for individual services We can fix this up by scanning for a port type designation and comparing this against the service ports type definition before determining how to proceed With this in place we can now use any of SERVICExxxTCPIGNORE SERVICExxxTCPNAME SERVICExxxUDPIGNORE SERVICExxxUDPNAME for manipulating portspecific service metadata This should address issue Docker version Latest registrator running registrator with resync cleanup deregisteralways ip consulconsul I am running a container named demoservice and when I am querying the consul for its instances I get instances one with the provided ip and one with the docker internal ip I expected to have only one instance with the provided ip note that when I dont provide it I only get one instance with the internal ip Is this the expected behavior is there a way to get only one instance This PR is trying to implement Consul ServiceMesh Support Consul can support ServiceMesh by integrating with proxies like Envoy the most convenient way to enable this capability is creating a Service like this json service name web port connect sidecarservice Then Consul will automatically generate a corresponding SidecarService with default configurations In Registrator you may add the connect sidecarservice configuration by the servicemesh flag Its also overridable by SERVICEMESH Your feedbacks are appreciated What version of docker are you running What version of registrator are you running Did you build a custom version of registrator If so what is that image gliderlabsregistratormaster April What is the exact command you are running your container with a tool calls the docker api to updown container A log capture of all the docker events before during and after the issue a few services has no addedremoved log in registrators container terminal Description of the problem When I updown the batch docker containers with a tool a few services was registeredderegistered fail How reproducible updown the batch docker containers some containers were registeredderegistered fail A rebase of onto master This commit makes it possible for a given container to advertise multiple services using aliases For example the following config SERVICENAMEa SERVICEALIASESbc will result in services being registered a b and c All three pointing to the same container Those changes should be compatible with ports and tags This should fix 