Bumps handlebars from to details summaryChangelogsummary Sourced from handlebarss changelog v September th Fixes Security Disallow calling helperMissing and blockHelperMissing directly c Disallow calling helperMissing and blockHelperMissing directly c Features Add new runtime option allowCallsToHelperMissing to allow calling blockHelperMissing and helperMissing Breaking changes Compatibility notes Compiler revision increased b This means that template compiled with versions prior to will not work with runtimes The increase was done because the helperMissing and blockHelperMissing are now moved from the helpers to the internal containerhooks object so old templates will not be able to call them anymore We suggest that you always recompile your templates with the latest compiler in your build pipelines Disallow calling helperMissing and blockHelperMissing directly c Calling helperMissing and blockHelperMissing directly from a template like in blockHelperMissing was never intended and was part of the exploits that have been revealed early in see It is also part of a new exploit that is not captured by the earlier fix In order to harden Handlebars against such exploits calling thos helpers is now not possible anymore Overriding those helpers is still possible If you really need this behavior you can set the runtime option allowCallsToHelperMissing to true and the calls will again be possible Both bullet points imly that Handlebars is not percent compatible to despite the minor version bump We consider it more important to resolve a major security issue than to maintain compatibility Commits v September th Bugfixes The browser property in the packagejson has been updated to use the commonjs builds instead of the minified UMD c a be Compatibility notes No compatibility issues should arise Commits v September rd ChoreTest Use custom gruntsaucelab with current sauceconnect proxy f Add framework for various integration tests f cce d trtable truncated details details summaryCommitssummary a d v bba Update release notes b adjust compiler revision c Disallow calling helperMissing and blockHelperMissing directly fff e v bcd Update release notes b f f Fix some small typos e b ec integrationtests for various webpackscenarios c a be fix use cjs for browser fields c ce v Additional commits viewable in compare view details br Dependabot compatibility score Dependabot will resolve any conflicts with this PR as long as you dont alter it yourself You can also trigger a rebase manually by commenting dependabot rebase dependabotautomergestart dependabotautomergeend details summaryDependabot commands and optionssummary br You can trigger Dependabot actions by commenting on this PR dependabot rebase will rebase this PR dependabot recreate will recreate this PR overwriting any edits that have been made to it dependabot merge will merge this PR after your CI passes on it dependabot squash and merge will squash and merge this PR after your CI passes on it dependabot cancel merge will cancel a previously requested merge and block automerging dependabot reopen will reopen this PR if it is closed dependabot ignore this patchminormajor version will close this PR and stop Dependabot creating any more for this minormajor version unless you reopen the PR or upgrade to it yourself dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency unless you reopen the PR or upgrade to it yourself dependabot use these labels will set the current labels as the default for future PRs for this repo and language dependabot use these reviewers will set the current reviewers as the default for future PRs for this repo and language dependabot use these assignees will set the current assignees as the default for future PRs for this repo and language dependabot use this milestone will set the current milestone as the default for future PRs for this repo and language You can disable automated security fix PRs for this repo from the Security Alerts page details I used funkialist on a larger project and was generally very happy with it One big missing piece for me was the availability of a NonEmptyList Having this available helps reduce a lot of code concerned with checking if a list is empty or not because in many situations an empty list would be an application error and should be caught far out in the API layer not in the apps core code The fpts NonEmptyArray is a good starting point for how this should work javascript var list require list var show require sanctuaryshow Current behaviour javascript show list foo bar baz bits length offset prefix root undefined suffix foo bar baz Suggested behaviour javascript show list foo bar baz list foo bar baz This would require defining a show method which applies show to each of the lists elements How can you use this list with Ord 