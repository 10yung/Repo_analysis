Hi everyone could you please help me I am using Alamofire beta and my main task is make to conect via https and use SSL as I show below I have found the code on the internert but I could not find object ServerTrustPolicy Where can I find it Your hostname and endpoint let hostname YOURHOSTNAME let endpoint YOURENDPOINT let cert YOURCERT eg for certder this should just be cert Set up certificates let pathToCert BundlemainpathforResource cert ofType der let localCertificate NSDatacontentsOfFile pathToCert let certificates SecCertificateCreateWithDatanil localCertificate Configure the trust policy manager let serverTrustPolicy ServerTrustPolicypinCertificates certificates certificates validateCertificateChain true validateHost true let serverTrustPolicies hostname serverTrustPolicy let serverTrustPolicyManager ServerTrustPolicyManagerpolicies serverTrustPolicies Configure session manager with trust policy afManager SessionManager configuration URLSessionConfigurationdefault serverTrustPolicyManager serverTrustPolicyManager afManagerrequestendpoint method getresponseJSON response in debugPrintAll Response Info response Add toc for advanced usage document Im implementing an app using Alamofire as the networking framework to communicate with the REST API services and the authentication system we use is the Basic Auth by matching the username and password with the server I tried to renew the session using the adapter and retrier to post the authentication request again to the server but it doesnt work Im new to Swift and I have no idea since Im asked to fit with the Basic Auth but most of the web services use the OAuth systems Alamofire Environment Alamofire version Xcode version Swift version Platforms running Alamofire iOS macOS version running Xcode High Sierra Demo Project The helper class of the request adapter is written as follow swift class APIRequestAdapter RequestAdapter RequestRetrier private typealias RefreshCompletion succeeded Bool userId Int Void private let lock NSLock private var username String private var password String private var isRefreshing false private var requestsToRetry RequestRetryCompletion var headers HTTPHeaders var userId Int nil Session ID for user authentication It expires for every minutes inactivity var sessionId String nil var newSessionId String nil MARK Initialization public initusername String password String selfusername username selfpassword password MARK RequestAdapter func adapt urlRequest URLRequest throws URLRequest var urlRequest urlRequest let loginString Stringformat selfusername selfpassword let loginData loginStringdatausing StringEncodingutf let base LoginString loginDatabase EncodedString if let urlString urlRequesturlabsoluteString urlStringhasPrefixserverConstantBASEURL urlRequesthttpMethod POST urlRequestsetValueBasic base LoginString forHTTPHeaderField Authorization urlRequestsetValueapplicationjson forHTTPHeaderField ContentType return urlRequest return urlRequest MARK RequestRetrier func should manager SessionManager retry request Request with error Error completion escaping RequestRetryCompletion locklock defer lockunlock if let response requesttaskresponse as HTTPURLResponse responsestatusCode requestsToRetryappendcompletion if isRefreshing refreshTokens weak self succeeded userId in guard let strongSelf self else return strongSelflocklock defer strongSelflockunlock if let userId userId strongSelfuserId userId strongSelfrequestsToRetryforEach succeeded strongSelfrequestsToRetryremoveAll else completionfalse MARK Private Refresh Tokens private func refreshTokenscompletion escaping RefreshCompletion print DEBUG Refresh Sessions guard isRefreshing else return isRefreshing true let urlString serverConstantBASEURL auth let parameters Parameters usernameusername passwordpassword if let authorizationHeader RequestauthorizationHeaderuser username password password headers authorizationHeaderkey authorizationHeadervalue BackgroundManagersharedmanagerrequesturlString method post parameters parameters encoding JSONEncodingdefault headers headersresponseJSON weak self response in guard let strongSelf self else return if let json responseresultvalue as String Any let userId json id as Int print DEBUG Renew completed for user userId completiontrue userId else print DEBUG Error Failed to renew session completionfalse nil strongSelfisRefreshing false The server URL is the API base URL for example Hello I was going through Alamofires documentation to find support for Path Encoding support but after searching I found out that it currently does not support this by default since I supervise both Android iOS development this is a key feature that Ive found in a library called Retrofit which is the counterpart for Alamofire in android and its missing here What did you do Tried to use path encoding What did you expect to happen To find support for path encoding What happened instead I didnt find path encoding support Alamofire Environment Alamofire version Any Xcode version Any Swift version Any Platforms running Alamofire iOS macOS version running Xcode Any Ive rolled my own PathEncoding which is basically this short line struct that implements ParameterEncoding Swift struct PathEncoding ParameterEncoding public static var default PathEncoding return PathEncoding func encode urlRequest AlamofireURLRequestConvertible with parameters Parameters throws URLRequest guard let parameters parameters else return try urlRequestasURLRequest var urlRequest try urlRequestasURLRequest if var url urlRequesturlabsoluteStringremovingPercentEncoding for parameter in parameters url urlreplacingOccurrencesof parameterkey with parametervalue guard let url URLstring url else return try urlRequestasURLRequest urlRequesturl url return urlRequest The idea is that the url has to contain the parameters in curly braces IE Then parameters dictionary will need to be filled with the same exact keys from the URL Swift request urlQueryAllowed method get parameters someId encoding PathEncodingdefault headers nil The path encoder will then decode the encoded url since Alamofire will encode it automatically if URLRequestConveritble is used or the user will have to specifically do addingPercentEncoding or Alamofire will fail to create the curl command And finally its going to replace each parameter with its correspondent value from the parameters dictionary and the result request will be something like this img width altScreen Shot at src Thanks We have faced the following crash we didnt have steps for it img width altScreen Shot at AM src Alamofire Environment Alamofire version Xcode version Swift version Platforms running Alamofire iOS Issue Link link What issue does this fix If an issue doesnt exist remove this section Goals soccer List the highlevel objectives of this pull request Include any relevant context There is no real specification for how to URL encode collection parameters like arrays and dictionaries For foo a true bar qux quy quz default brackets encode is foo a foo foo foo bar foo qux foo quy quz noBrackets encode is fooa foo foo foo bar foo qux foo quy quz jQuery and Nodejs package querystring provide index style foo a foo foo foo bar foo qux foo quy quz Implementation Details construction Explain the reasoning behind any architectural changes Highlight any new functionality A new ArrayEncoding enumeration is added to URLEncoding The cases are brackets and noBrackets and index The arrayEncoding passed to init is used to control the array key serialization in URLEncodingqueryComponents Testing Details mag Describe what tests youve added for your changes The new tests are named like the existing tests with an appended suffix testURLParameterEncodeArrayNestedDictionaryValueParameterWithIndex tests pass iOS Swift Whenever I kill app when API is going on then when I launch application once again then app crashes for as loon as I try to open it I have to delete app and install it again Below is the line from RequestTaskMap swift file where app crashes fatalErrorRequestTaskMap consistency error no request corresponding to task found Error Fatal error RequestTaskMap consistency error no request corresponding to task found file UsersitgurusoftwareDocumentsProjectPodsAlamofireSourceRequestTaskMapswift line Tried to Invalidate Alamofire sessions and tried to cancel requests too on applicationWillTerminate method but still issue persists FatalError dataTask received data for incorrect Request subclass nil SessionDelegateswift Ive read understood and done my best to follow the CONTRIBUTING guidelines What did you do We distributed our app using Alamofire for network requests What did you expect to happen No crashes initiated by Alamofire What happened instead Users of our application catch Alamofire crashes in SessionDelegate extension Crashlytics Stack Trace Alamofire s Alamofire SessionDelegateC urlB dataTask didReceiveySo NSURLSessionCSo i DataF C Foundation J VtF Crashed orgalamofiresessionrootQueue libswiftCoredylib x c b specialized assertionFailurefilelineflags libswiftCoredylib x c ee f assertionFailurefilelineflags Alamofire x c s Alamofire SessionDelegateC urlB dataTask didReceiveySo NSURLSessionCSo i DataF C Foundation J VtF Alamofire x c a s Alamofire SessionDelegateC urlB dataTask didReceiveySo NSURLSessionCSo i DataF C Foundation J VtFTo CFNetwork x bbcdcd CFNetworkHTTPConnectionCacheSetLimit Foundation x b c fa NSBLOCKOPERATIONISCALLINGOUTTOABLOCK Foundation x b b NSBlockOperation main Foundation x b c db NSOPERATIONISINVOKINGMAIN Foundation x b b b NSOperation start Foundation x b c dc NSOPERATIONQUEUEISSTARTINGANOPERATION Foundation x b c c NSOQSchedulef libdispatchdylib x b c dispatchblockasyncinvoke libdispatchdylib x b fd dispatchclientcallout libdispatchdylib x b c dispatchlaneserialdrain libdispatchdylib x b ce c dispatchlaneinvoke libdispatchdylib x b f dispatchworkloopworkerthread libsystempthreaddylib x b bba pthreadwqthread libsystempthreaddylib x b c c c startwqthread Alamofire Environment Alamofire version rc Xcode version Swift version Platforms running Alamofire iOS macOS version running Xcode macOS Catalina Demo Project Unfortunately I havent repeatable test case to reproduce this crash x I ve read understood and done my best to follow the CONTRIBUTING guidelines What did you do I just updated to the nonbeta version of Xcode I opened a project I was working on and Xcode threw the error Module compiled with Swift cannot be imported by the Swift compiler for Alamofire I m using Carthage as my package manager What did you expect to happen Since Swift which has module stability this shouldn t be happening Frameworks compiled with Swift should work no problem with newer versions of Swift What happened instead I am getting an error Module compiled with Swift cannot be imported by the Swift compiler for Alamofire Alamofire Environment Alamofire version Xcode version B Swift version Platforms running Alamofire iOS macOS version running Xcode G Demo Project To reproduce run carthage update platform iOS on a project with Xcode and then open the project in Xcode Possible solution According to this stackoverflow question BUILDLIBRARYFORDISTRIBUTION YES has to be set in Alamofire s projectpbxproj file func upload uploadable UploadRequestUploadable with convertible URLRequestConvertible interceptor RequestInterceptor fileManager FileManager UploadRequest let uploadable Uploadrequest convertible uploadable uploadable return uploaduploadable interceptor interceptor fileManager fileManager why this method access Control is internal I need open access Control to when i using Alamofire to custom design my business network i dont know why 