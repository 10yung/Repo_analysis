Hello Wanted to bring to your attention that the simulation isnt working as intended on Safari in MacOS For some reason the fluids are just draws as lines and not actual fluid You can look at it on the demo as well Live test link Any fix for it would be great WebGL Fluid Simulation on Mouse Over i think it would be pretty cool to let people see how this code works and edit preview the program right in their browser without any manual downloads or installation im thinking we can add a run on replit button which redirects to something like this Amazing work Would someone already being working in an option where we have a mock mouse moving so we dont need keep clicking on it and could leave this running in a TV Would it be possible to add a background image thats warped by the shader To simulate waves through an image instead of just over top of it Ive started by modifying it as mentioned in but obviously that just applies a static backgroundimage Is there a way to listen to the whole document instead of just canvas I want the effect to continue over other elements as well while maintaining their mouse events Changing canvas to document or window creates a duplicate effect on the canvas documentaddEventListenermousedown e let posX scaleByPixelRatioeoffsetX let posY scaleByPixelRatioeoffsetY let pointer pointersfindp pid if pointer null pointer new pointerPrototype updatePointerDownDatapointer posX posY documentaddEventListenermousemove e let pointer pointers if pointerdown return let posX scaleByPixelRatioeoffsetX let posY scaleByPixelRatioeoffsetY updatePointerMoveDatapointer posX posY Your experiment is amazing congratulations I am using as a background of my personal page the source code is available at p aligncenter a href img src width a p Thanks for sharing Improve hash performance I am in the video encoding industry and I use a Raspberry Pi as a makeshift video test signal I usually like to use preencoded test videos and just loop them out the HDMI However when I use it to reencode I dont get large enough bitrates because the video feed was already encoded even though the HDMI signal is raw RGB Id like to look for a scene that I could use that doesnt involve encoding at all so that I can test encoding for large bitrates I would like to use a scene like your project here However the performance of a Raspberry Pi wont let me use a browser Id need something lower level meaning OpenGL Maybe you could help me Maybe you know of another scene that I could use that uses OpenGL 