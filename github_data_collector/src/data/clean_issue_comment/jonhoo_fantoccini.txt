Hi all I need to run a script every time i load a page that occurs before the page actually loads I am currently looking into a solution for this but if anyone knows how its done I would love to know how I have currently tried running clientexecute before clientgoto but that doesnt seem to do the trick which makes sense Will continue searching for a way to do this and will update here if I find one Full disclaimer Im not a web expert and Im new to using WebDriver so this might be possible using functionality that lives outside of Fantoccini so feel free to close if thats the case Currently the Client does not support an easy way to interact with the current Sessions cookie store unless you make a raw request and interact with the request builderresponse which will only give you the cookies for that particular domain It would be nice to be able to interact with a Sessions cookie store from the high level API to enable things like serializingdeserializing persistent cookies in applications where you may want to remember things like user login state Examples of where this could be useful might include improving CICD test times by not requiring repeated logins It could also be useful in scraperbacked userfacing applications that use technologies like OAuth instead of Basic Auth so that the user doesnt have to repeatedly authorize the login every time they launch the application even if its automated I have the geckodriver running on port but cargo run in the examplebasicsetup gives the following errors sh tmpfanexabasicsetupmaster cargo run Finished dev unoptimized debuginfo targets in s Running targetdebugbasicsetup thread thread tokioruntimeworker tokioruntimeworker panicked at panicked at not yet implemented failed to connect to WebDriver SessionNotCreatedWebDriverError error SessionNotCreated message Expected browser binary location but unable to find binary in default location no mozfirefoxOptionsbinary capability provided and no binary flag set on the command line stack deletesession false called Optionunwrap on a None value srcmainrssrclibcoreoptionrs I have tried it on macOS and linux and I got the same error Any idea what is wrong here Thx sh nightlyx appledarwin default rustc nightly f b fcf I dont think this is implemented yet and I also dont really need it yet but it would be nice to have in my project I may want to reuse the same session if the longrunning process controlling it is restarted at some point At the moment if I persist a session with Clientpersist and then try to reconnect to the session using Clientwithcapabilities or Clientnew I get a SessionNotCreatedWebDriverError error SessionNotCreated message Session is already started stack deletesession false I suppose the way to handle this would be adding a method like Clientwithexistingsessionwebdriver str sessionid str and a corresponding Sessionfromidwebdriver str id str or similar which tries to connect to the given session using its ID no idea how thats gonna work internally right now but that would likely be the API Then we can store the session ID and reconnect later Ill look into implementing this when I can find the time Im currently trying out fantoccini and this is one most likely easily fixable issue Ive found When working with HTML elements that dont have any clear identifier attached it can be kind of hard to impossible to find their child elements while still keeping context Example html div classtable div classrow div classcol namecolThing div div classcol actioncolbuttonSome action for Thing buttondiv div div classrow div classcol namecolThing div div classcol actioncolbuttonSome action for Thing buttondiv div div Now what I want is Find each divrow That is easily done with findall Now get each rows divnamecol text and divactioncol button while keeping their relation and an Element on the button so I can invoke events on it At the moment I cant see how I would perform the second step without falling back to invoking jQuery or something and parsing the result or relying on indices which is never a good idea I think the right WebDriver API call would be Find Element From Element the webdriver crate has it as WebDriverCommandFindElementElement API idea Most WebDriver clients expose this call by having a find element method on their web element type that would be fantocciniElementfind here and fantocciniElementfindall for Find Elements From Element to stay consistent with the Client API which would internally invoke something like fantocciniClientfindfromfantocciniClientfindallfrom Those could also be pub in fantoccini they work like findfindall but take a fantocciniElement as the first argument It would work like this rust let rows clientfindallLocatorCssdivtable divrowawait let mut colgroups Vecnew for row in rowsiter let name rowfindCssdivnamecolawaittextawait let button rowfindCssdivactioncol buttonawait colgroupspushname button Now I can present the user with the options and they can choose what to click on I would really like to contribute and implement this myself as well but as I only want to work with the await API Id prefer to start working on it when the await PR is merged Starting implementation of synchronous client and element Hi I want to use withcapabilities to create a new client but not sure if doing it right This is what Im doing rust extern crate tokio extern crate futures extern crate fantoccini extern crate webdriver extern crate serdejson use fantocciniClient Locator use futuresfutureFuture use webdrivercapabilitiesCapabilities fn main let mut cap Capabilitiesnew let arg serdejsonfromstr args headless unwrap capinsertmozfirefoxOptionstostring arg let c Clientwithcapabilities cap rest of the code down here If this is the right way to do it I was wondering if we could receive in the capabilities in another way that didnt involve me knowing about webdriver and serdejson and having to add them to my dependencies Im open to making a PR if you prefer to discuss over actual code As observed here there are some pretty good reasons to make the interface to interact with browsers synchronous Or at least give the option of having the nicer synchronous interface when you dont need the async We should be able to provide synchronous wrapper types for most operations pretty easily so that would be a good addition I think itd be useful if it the docs made it obvious which fields can have untrusted input in them because otherwise users might set themselves up for injection attacks Originally reported in Running fantoccini against WebKitDriver currently fails with SessionNotCreatedWebDriverError error SessionNotCreated message Failed to match capabilities stack deletesession false This seems to stem from this line in the WebKitDriver source GH mirror link but I cannot for the life of me see why matchedCapabilitiesList would be empty Setting browserName or other parameters in the alwaysMatch capabilities list does not seem to make a difference I think this might be a bug in WebKitDriver but some more investigation is probably warranted 