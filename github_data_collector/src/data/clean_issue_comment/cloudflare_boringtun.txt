The API for SealingKey and OpeningKey changed to have these structs manage their own nonces Instead we switch to LessSafeKey so that we can continue to manually manage nonce values Benchmark results before and after are well within the expected variance at least on my computer This PR experiments with replacing the internal BLAKE s implementation with the blake ssimd crate The throughput of the benchblake shash b benchmark improves by on my machine A larger improvement is possible using AVX but those intrinsics arent stable yet I expect boringtun prefers to maintain its own implementation rather than take a relatively large dependency but this PR could be a point of comparison if someone wants to optimize the internal implementation in the future One behavioral difference in this PR is that the last bytes of output in the newmac case are zeros rather than the untrucated state words I believe all newmac callers are ignoring those trailing bytes as they should but I could have missed one Changing the return type of finalize to something based on ArrayVec like blake ssimdHash could make this sort of thing safer Hi Guys working on MAC OSX and trying to compile I get the following errors Im working on the master branch Any ideas Cargo version cargo c ec d Installed rust using rustupinit boringtun cargo build bin boringtun release target armv unknownlinuxgnueabihf Compiling autocfg v Compiling libc v Compiling byteorder v Compiling bitflags v Compiling unicodewidth v Compiling safemem v Compiling boxfnonce v Compiling strsim v error E cant find crate for core note the armv unknownlinuxgnueabihf target may not be installed error aborting due to previous error For more information about this error try rustc explain E error could not compile unicodewidth warning build failed waiting for other jobs to finish error E cant find crate for std note the armv unknownlinuxgnueabihf target may not be installed error E cant find crate for std note the armv unknownlinuxgnueabihf target may not be installed error E cant find crate for std note the armv unknownlinuxgnueabihf target may not be installed error aborting due to previous error For more information about this error try rustc explain E error aborting due to previous error For more information about this error try rustc explain E error aborting due to previous error For more information about this error try rustc explain E error could not compile boxfnonce warning build failed waiting for other jobs to finish error could not compile strsim warning build failed waiting for other jobs to finish error could not compile safemem warning build failed waiting for other jobs to finish error build failed run cargo install boringtun produce the following output Compiling chrono v Compiling boringtun v error E mismatched types rootcargoregistrysrcgithubcom ecc db ec boringtun srcdevicetunlinuxrs ifruflags IFFTUN IFFNOPI IFFMULTIQUEUE expected i found i error aborting due to previous error For more information about this error try rustc explain E error failed to compile boringtun v intermediate artifacts can be found at tmpcargoinstallRDLTdM Caused by Could not compile boringtun Any hint on whats going on I found this weird bug where when I add to my allowedIPs on one of my peers the wireguard connection on the peer drops and is unrecoverable as far as I know Bringing the wg interface down and up again doest work I have to reboot the whole device My setup I have borintun running inside a Docker container on a balena device and start it with WGQUICKUSERSPACEIMPLEMENTATIONboringtun WGSUDO wgquick up wg After trying for a while to see why this is happening I switched to WGQUICKUSERSPACEIMPLEMENTATIONwireguardgo WGSUDO wgquick up wg and it is working just fine I still couldnt find out what exactly is causing this behaviour Please let me know how I can help to resolve this bug because I would prefer using boringtun Is it maintained Is it recommended for real usage or only for testing NOTE This crate is still undergoing review for security concerns Therefore we recommend that you take caution before using it in a production application Is the review still going on abandoned or complete What is the result It would be great if you could add some performance stats for boringtun I would be also interested in comparison with the kernelspace implementation and wireguardgo when i run root boringtun f wg Failed to drop privileges DropPrivilegesFailed to permanently drop privileges It hava a error message While trying to create a docker image using cargo install compilation failed at error E mismatched types rootcargoregistrysrcgithubcom ecc db ec boringtun srcdevicetunlinuxrs ifruflags IFFTUN IFFNOPI IFFMULTIQUEUE expected i found i Ubuntu bionic cargo rustc 