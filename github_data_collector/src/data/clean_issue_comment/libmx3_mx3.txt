when I run make play at directory root this error appears Error resolving plugin id comgithubjlounscpe version Could not GET peer not authenticated Try Run with stacktrace option to get the stack trace Run with info or debug option to get more log output how can I fix this thanks in advance I have read the demo of todo apps demo todoappusingdjinniandsqlite Its great And I have a question If the app need store many big files like photos How should i to manage the photo files Use sqlite to store them i think is will be slow in storage and read Should i need import another c file manage lib to manage big files So android and ios could use it both Thanks a lot and Android Studio The changes to the IML files were done automatically So at my company weve developed at shared c library for our mobile apps and we modeled our projects after this libmx example and similar projects but wanted to ask about how you guys set up the repos Do you have the android and ios project repos as submodules of the repo containing the c code or is there a good way to keep them separate but easily updatable If theyre submodules or folders in the main repo holding the c code as well then do the mobile devs need to work in the main c repo I tried to do a little research on this and it seems like its best to keep the repos next to each other but it seems more natural to have the c library stuff as a submodule of the mobile projects however that doesnt seem possible with this current setup Any thoughts or advice you can share Thanks Currently i am trying to develop crossplatform mobile library with visual studio I am investigating your sources My question is that following function makes sharedptr map and creates CppProxy of java from jni But why do you make it WeakReference what happen you just do jniEnvNewObject alone Android Java new does not work as WeakReference It is rather Java question than jni static jobject JniCppProxyCachegetconst stdsharedptrvoid cppObj JNIEnv jniEnv const CppProxyClassInfo proxyClass jobject factoryconst stdsharedptrvoid JNIEnv const CppProxyClassInfo CppProxyCacheState st CppProxyCacheStateget const stdlockguardstdmutex lockstmtx auto it stmfindcppObjget if it stmend Its in the map See if the WeakReference still points to an object if jobject javaObj itsecondgetjniEnv return javaObj else The WeakReference is expired so prune it from the map eagerly stmeraseit jobject wrapper factorycppObj jniEnv proxyClass Make a Java WeakRef object stmemplacecppObjget JavaWeakRefjniEnv wrapper return wrapper Api constructor run twice if i invoke post of thread in hanle classI dont know whycan you tell mei really need your help So the more Ive become familiar with the example the only way Ive seen that the C code talks back to the native code is with callbacks Is there another way to talk from the C side of the code to the native side Or do you just have to use the callback pattern that is being used to go from C to native Im getting a runtime error in android when I build with NDK r d and api android or android Build with android doesnt have the issue javalangUnsatisfiedLinkError dlopen failed cannot locate symbol atof referenced by libmx androidso Seems some bits have been moved around from onwards Ive received the following error What went wrong Execution failed for task apppreBuild failed to find Build Tools revision By means of the Android Maintenance Tool its not possible to install that revision The is the only one available Im working on with the sdk for linux bit Sorry for the very basic question I like the idea of mx and would like to experiment with it for a POC for a client If I already have two existing POCs completed for iOS and Android that Id like to integrate this in to is there a way to do that or should I just build a new project and then reintegrate my UI code Im thinking the latter is the best way to go since the make would overwrite the current Android and iOS dirs 