 commands nsenter target mount mount o varliblxclxcfsprocmeminfo procmeminfo If i use docker image of centos it works But if i use docker ubuntu it occurs error failed to execute mount No such file or directory other information docker version ce kernel el elrepox LCALLcsCZUTF nsenter target mount uts ipc net pid nsenter loadlocalec nlinternlocaledata Assertion cnt sizeof nlvaluetypeLCTIME sizeof nlvaluetypeLCTIME failed Ne sp n ukon en SIGABRT LCALLC nsenter target mount uts ipc net pid ok this is the entire log when I tried to execute the cmd docker run rm v usrlocalbintarget jpetazzonsenter Unable to find image jpetazzonsenterlatest locally latest Pulling from jpetazzonsenter c d a d a Extracting MB MB c c c dd Download complete ed ac f ed Download complete bec Download complete bf ba ae Download complete f ff fd Download complete b fba fbdb Download complete d f Download complete df bc efe Download complete f e Download complete cea c Download complete c b f d Download complete da ec f Download complete c c a Download complete docker failed to register layer devmapper Error activating devmapper device for e cc ff a dababfb ffe e e d b badb bb e b c cd devicemapper Cant set cookie dmtasksetcookie failed See docker run help You can pass an environment variable with spaces into a container by using quotes and bash can deal with that correctly inside the container michiellaptop docker run it e A debianjessie binbash root f b b echo A root f b b But now try to dockerenter it from a different terminal window That will fail michiellaptop dockerenter f b b env No such file or directory Its obvious that we cant enter a stopped container and docker inspect will return pid as It would be nice to have a friendly warning instead of display the error like below cat proc environ No such file or directory nsenter neither filename nor target pid supplied for nsipc For newer versions of docker and for when the container doesnt have su in the local PATH regarding the doc i thought this would be cool and it actually makes sens for me You probably want to update your READMEm file to tell users to check if they already have nsentry before using this There are several problems First off Fedora already includes nsentry by default It is part of the linuxutils package I was told the same is true for RHEL and CentOS but I havent verified that The same is probably true of many other distributions so long as you are using the most recent versions The next problem is Fedora RHEL and CentOS use SELinux settings so you can only mount folder with a special SELinux tag set via chattr as volumes As such your container wont work for mounting as a volume Certainly the users could do a chattr on to override this but if they do so they are completely overriding a critical part of the security settings to overwrite something they already have installed Yet another problem is with your dockerenter script Quite frankly it doesnt work Well not everywhere You see it assumes flags on the env command that are not part of the POSIX standard So if for example I try using it on a busybox system or any other OS not using the GNU variant of env it wont work I have an extremely simplified version of the script I use in my Fedora system binbash pdocker inspect format StatePid shift nsenter target p mount uts ipc net pid Im not sure what probably you were trying to solve with your env command but admittedly this variation does not solve that problem For Fedora RHEL CentOS I just copy the script as dockerenter in my usrlocalbin folder and I am good to go This version does however work on all the docker images I use One can also write this as an alias but since normally it gets called with an sudo in front it is more restrictive to use as an alias than as a script Bill Changed the Syntax a bit and Added dockerrun Command simply usage dockerrun containerid cmd 