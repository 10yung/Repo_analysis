Hi gitflowavh ppl The version out on apt in Ubuntu is currently Now we find ourselves in the same boat as back with where the main packagemanager for a major linux distro is using an almost year old version of gitflow avh edition The manual steps to install works fine but seems unnecessary in this day and age also you end up with version installed where Ubuntu opts to use the default one which is unless you remember to sudo apt remove gitflow and that is not too obvious or user friendly not for me at least So I was just wondering if there are any plans on updating the apt version of gitflow for Ubuntu bionic beaver this time around too or are you waiting to for LTS and put it in there cheers Basma One of the great things about using gitflow command line tools is that it takes several git commands and bundles them together However as soon as you affect the repo outside of using the command line tools some of the benefit is lost The specific situation which is common is when you push your feature branch to origin create a PR have it reviewed and then use github to merge and squash the PR The reason why we might do this is to get the nice commit message in the merge that references the PR Plus most teams are going to be dealing with GitHub directly for PR releated activities This brings me to my feature request if you like the idea Im willing to submit a PR I would like a clean command or flag It would do everything that finish does but without the merge because its already done Basically just delete the local and remote feature branches git flow feature clean featurename or git flow feature finish nomerge or git flow feature finish deleteonly Thoughts Hello We are currently using Gitflow AVH Edition We are going to edit it a bit so it will work with our current server In order to test all the cases we would like to create tests for Gitflow Before starting to write those tests we are looking for already existed tests that we can use and avoid additional code written Are there any tests that check the gitflowavh that we could use How do you check your code when you merge a new feature Thanks Robert Install of gitflowavh into alpine If using BusyBox readlink uses f and not e see code Stupid fix When using Dockerfile RUN git clone gitgithubcompetervanderdoesgitflowgit tmpgitflow cd tmpgitflow sed i sreadlink ereadlink fg gitflow make install Question Maybe add detection for busybox Old issue that was solved but is still not working for me Did not work with a repo either initialized or not initialized git flow was installed on ubuntu via aptget install gitflow git flow version AVH Edition Is there any reason why git flow init cannot be used in a dirty repository but git flow config can This hits me quite often when automizing tasks Please make the pushtag option to git flow release finish push only the tag for the release not all tags in the repo Pushing all tags is unexpected and undesirable behavior Its unexpected because it is inconsistent with the context of the actions being performed and also because the option name is singular pushtag not pushtags Its undesirable because I maintain local tags which I have no intent to ever push eg temp experiment etc Thanks When running git flow init Id like to have a way to setedit the Initial commit message to something else before the commit without having to amend the commit and reposition the master branch afterwards Best solution would be to make gitflowinit ask for the initial commit message allowing that Initial commit or whatever else is configured as default Thats a good solution because it also makes it clear to the user that an initial commit is going to be made Using dev according to changelog I have the remote branch hotfix I run git flow hotfix start and this is created locally without any error I run git flow hotfix start and this fails because it checks I already have a local branch starting with hotfix So it appears to me hotfix start is not checking remote branches too I tried using git flow hotfix start F thinking that might help but it didnt change the behaviour git flow release finish m tag commit seems to checkout the master branch merge the release branch tag checkout the develop branch merge the master branch git flow hotfix finish m tag commit seems to tag first which will place the tag on whatever branch you currently have checked out then do all the merging For example if I currently have the develop branch checked out with new features for whatever reason it will place the tag on the latest commit which would be a feature that is NOT currently in the master branch can we get git flow hotfix finish to mirror the git flow release finish logic