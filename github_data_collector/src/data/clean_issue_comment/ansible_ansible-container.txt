 Verify first that your issuerequest is not already reported in GitHub ISSUE TYPE Pick one item below and delete the rest Bug Report containeryml Paste verbatim a copy of your containeryml between the quotes below settings conductor base alpine OS ENVIRONMENT Paste output from ansiblecontainer debug version between the quotes below Ansible Container version Linux MacBookPro generic Ubuntu SMP Wed Aug UTC x rc default Apr GCC usrbinpython ContainersPaused Labels CgroupDriver cgroupfs ContainersRunning ContainerdCommit Expected c c c b a d b c cd ec f ID c c c b a d b c cd ec f InitBinary dockerinit NGoroutines Swarm ControlAvailable false NodeID Error RemoteManagers null LocalNodeState inactive NodeAddr LoggingDriver jsonfile OSType linux HttpProxy Runtimes runc path dockerrunc DriverStatus Backing Filesystem extfs Supports dtype true Native Overlay Diff true OperatingSystem Ubuntu LTS Containers HttpsProxy BridgeNfIp tables true MemTotal SecurityOptions nameapparmor nameseccompprofiledefault nameuserns Driver overlay IndexServerAddress ClusterStore InitCommit Expected e fa ID e fa GenericResources null Isolation SystemStatus null OomKillDisable true ClusterAdvertise SystemTime T Name kajMacBookPro CPUSet true RegistryConfig AllowNondistributableArtifactsCIDRs Mirrors IndexConfigs dockerio Official true Name dockerio Secure true Mirrors AllowNondistributableArtifactsHostnames InsecureRegistryCIDRs DefaultRuntime runc ContainersStopped NCPU NFd Architecture x KernelMemory true CpuCfsQuota true Debug false ID ZIDHBNYHAQ VK FNGNDHVKMDYNA AHJDI KKB TTKXN YUS IPv Forwarding true KernelVersion generic BridgeNfIptables true NoProxy LiveRestoreEnabled false ServerVersion ce CpuCfsPeriod true ExperimentalBuild false MemoryLimit true SwapLimit false Plugins Volume local Network bridge host macvlan null overlay Authorization null Log awslogs fluentd gcplogs gelf journald jsonfile logentries splunk syslog Images DockerRootDir varlibdocker NEventsListener CPUShares true RuncCommit Expected fc a fb c ac fa ca ID fc a fb c ac fa ca KernelVersion generic Components Version ce Name Engine Details KernelVersion generic Os linux BuildTime T ApiVersion MinAPIVersion GitCommit ee f Arch amd Experimental false GoVersion go Arch amd BuildTime T ApiVersion Platform Name Version ce MinAPIVersion GitCommit ee f Os linux GoVersion go SUMMARY Explain the problem briefly ansiblecontainer build fails when using user namespaces The conductor container is being run privileged but we cannot add usernsmode host to the conductor privileged mode is incompatible with user namespaces You must run the container in the host namespace when running privileged mode STEPS TO REPRODUCE For bugs show exactly how to reproduce the problem For new features show how the feature would be used Enable userns remap on the daemon Run Paste any example commands between quotes below ansiblecontainer build You can also paste gistgithubcom links for larger files EXPECTED RESULTS What did you expect to happen when running the steps above ansiblecontainer build executes succesfully ACTUAL RESULTS What actually happened If possible run with debugging debug Paste verbatim command output between quotes below ansiblecontainer build Building Docker Engine context Starting Docker build of Ansible Container Conductor image please be patient ERROR Unknown exception Traceback most recent call last File usrlocallibpython distpackagescontainerclipy line in call getattrcore uhostcmdformatargssubcommandvarsargs File usrlocallibpython distpackagescontainerinitpy line in wrapped return fnargs kwargs File usrlocallibpython distpackagescontainercorepy line in hostcmdbuild build dictconfig basepath kwargs savecontainersavecontainer File usrlocallibpython distpackagescontainerdockerenginepy line in awaitconductorcommand conductorid selfrunconductorcommand config basepath params File usrlocallibpython distpackagescontainerdockerenginepy line in wrapped return fnself args kwargs File usrlocallibpython distpackagescontainerinitpy line in wrapped return fnargs kwargs File usrlocallibpython distpackagescontainerdockerenginepy line in runconductor reraisesysexcinfo File usrlocallibpython distpackagescontainerdockerenginepy line in runconductor runkwargs File usrlocallibpython distpackagesdockermodelscontainerspy line in run detachdetach kwargs File usrlocallibpython distpackagesdockermodelscontainerspy line in create resp selfclientapicreatecontainercreatekwargs File usrlocallibpython distpackagesdockerapicontainerpy line in createcontainer return selfcreatecontainerfromconfigconfig name File usrlocallibpython distpackagesdockerapicontainerpy line in createcontainerfromconfig return selfresultres True File usrlocallibpython distpackagesdockerapiclientpy line in result selfraiseforstatusresponse File usrlocallibpython distpackagesdockerapiclientpy line in raiseforstatus raise createapierrorfromhttpexceptione File usrlocallibpython distpackagesdockererrorspy line in createapierrorfromhttpexception raise clse responseresponse explanationexplanation APIError Client Error Bad Request privileged mode is incompatible with user namespaces You must run the container in the host namespace when running privileged mode Makefile recipe for target build failed make build Error Verify first that your issuerequest is not already reported in GitHub ISSUE TYPE Pick one item below and delete the rest Question containeryml Paste verbatim a copy of your containeryml between the quotes below version settings conductor The Conductor container does the heavy lifting and provides a portable Python runtime for building your target containers It should be derived from the same distribution as youre building your target containers with base centos volumes Provide a list of volumes to mount environment List or mapping of environment variables Set the name of the project Defaults to basename of the project directory For built services concatenated with service name to form the built image name projectname demo The deploymentoutputpath is mounted to the Conductor container and the run and deployment commands then write generated Ansible playbooks to it deploymentoutputpath ansibledeployment When using the k s or openshift engines use the following to authorize with the API Values set here will be passed to the Ansible modules Any file paths will be mounted to the conductor container allowing the run command to access the API k sauth path to a K s config file configfile name of a context found within the config file context URL for accessing the K s API host An API authentication token apikey Path to a ca cert file sslcacert Path to a cert file certfile Path to a key file keyfile boolean indicating if SSL certs should be validated verifyssl When using the k s or openshift engines use the following to set the namespace If not set the project name will be used For openshift the namespace maps to a project and description and displayname are supported k snamespace name description displayname services Add your containers here specifying the base image you want to build from To use this example uncomment it and delete the curly braces after services key You may need to run docker pull ubuntutrusty for this to work web from centos roles role flask ports command systemctl daemonreload devoverrides environment DEBUG registries Add optional registries used for deployment For example google url namespace mycoolprojectxxxxxx OS ENVIRONMENT Paste output from ansiblecontainer debug version between the quotes below Windows Docker version ce build ffa AnsibleAnsiblecontainer running in Docker image mac ansiblecontainer SUMMARY Explain the problem briefly I get the following error the role flask was not found in rolessrcrolesetcansibleroles when attempting to build the container from within my Docker image mac ansiblecontainer I suspect it has something to do with my running ansiblecontainer from within a Docker image but I have no idea how to solve it Using the steps described here I can use external roles However I cannot use ansiblecontainer install which results in the error containerexceptionsAnsibleContainerGalaxyFatalException Failed to load containeryml Errno No such file or directory srccon taineryml STEPS TO REPRODUCE For bugs show exactly how to reproduce the problem For new features show how the feature would be used You can reproduce by using my Docker image and adding the volume mapping varrundockersockvarrundockersock and executing the commands below Paste any example commands between quotes below docker exec it YOURCONTAINERID bash mkdir demo cd demo ansiblecontainer init pico containeryml add flask role ansiblecontainer build You can also paste gistgithubcom links for larger files EXPECTED RESULTS What did you expect to happen when running the steps above The role to be found and the container to build ACTUAL RESULTS What actually happened If possible run with debugging debug Paste verbatim command output between quotes below Traceback most recent call last File usrbinconductor line in module loadentrypointansiblecontainer consolescripts conductor File ansiblecontainerinitpy line in wrapped return fnargs kwargs File ansiblecontainerclipy line in conductorcommandline conductorconfig AnsibleContainerConductorConfiglisttoordereddictcontainersconfig File ansiblecontainerinitpy line in wrapped return fnargs kwargs File ansiblecontainerconfigpy line in init selfprocessservices File ansiblecontainerconfigpy line in processservices rolemetadata getmetadatafromrolerolename File ansiblecontainerinitpy line in wrapped return fnargs kwargs File ansiblecontainerutilsinitpy line in getmetadatafromrole return getcontentfromrolerolename ospathjoinmeta containeryml File ansiblecontainerinitpy line in wrapped return fnargs kwargs File ansiblecontainerutilsinitpy line in getcontentfromrole rolepath resolveroletopathrolename File ansiblecontainerinitpy line in wrapped return fnargs kwargs File ansiblecontainerutilsinitpy line in resolveroletopath loaderloader File usrlibpython sitepackagesansibleplaybookroleincludepy line in load return riloaddatadata variablemanagervariablemanager loaderloader File usrlibpython sitepackagesansibleplaybookbasepy line in loaddata ds selfpreprocessdatads File usrlibpython sitepackagesansibleplaybookroledefinitionpy line in preprocessdata rolename rolepath selfloadrolepathrolename File usrlibpython sitepackagesansibleplaybookroledefinitionpy line in loadrolepath raise AnsibleErrorthe role s was not found in s rolename joinrolesearchpaths objselfds ansibleerrorsAnsibleError the role flask was not found in rolessrcrolesetcansibleroles Conductor terminated Cleaning up commandrc conductoridebddaca c d f eb d e d fcc e d dc a b save containerFalse Parsing conductor CLI args downloading role solr owned by geerlingguy downloading role from extracting geerlingguysolr to tmptmplHyWDzgeerlingguysolr ERROR Failed to load containeryml Errno No such file or directory srccontaineryml Undoing changes to yml files Traceback most recent call last File usrbinconductor line in module loadentrypointansiblecontainer consolescripts conductor File ansiblecontainerinitpy line in wrapped geerlingguysolr was installed successfully return fnargs kwargs File ansiblecontainerclipy line in conductorcommandline params File ansiblecontainerinitpy line in wrapped return fnargs kwargs File ansiblecontainercorepy line in conductorcmdinstall galaxyinstallroles File ansiblecontainerutilsgalaxypy line in install selfupdatecontainerymlroleobj File ansiblecontainerutilsgalaxypy line in updatecontaineryml raise exceptionsAnsibleContainerGalaxyFatalExceptionFailed to load containeryml s strexc containerexceptionsAnsibleContainerGalaxyFatalException Failed to load containeryml Errno No such file or directory srccon taineryml Conductor terminated Cleaning up commandrc conductorid a cb e cb a f f e e fc b cdf d a ea cd c save containerFalse ERROR Conductor exited with status ISSUE TYPE Bug Report containeryml version This is the dockercontainer config file For more info check settings conductor The Conductor container does the heavy lifting and provides a portable Python runtime for building your target containers It should be derived from the same distribution as youre building your target containers with base ubuntuxenial rolespath Specify a local path containing Ansible roles rolesjavaservice volumes Provide a list of volumes to mount environment List or mapping of environment variables Set the name of the project Defaults to basename of the project directory For built services concatenated with service name to form the built image name projectname smartplatform The deploymentoutputpath is mounted to the Conductor container and the run and deployment commands then write generated Ansible playbooks to it deploymentoutputpath ansibledeployment services gateway from storeoracleserverjre roles role javaservice vars service smartplatformgatewayservice servicename Gateway servicedescription Smart Platform Gateway service environment AWSSESSIONTOKEN awssessiontoken AWSACCESSKEYID awsaccesskeyid AWSSECRETACCESSKEY awssecretaccesskey command apprunservicesh entrypoint usrbinentrypointsh networkmode host stf from storeoracleserverjre roles role javaservice vars service supplytrafficfilteringservice servicename STF servicedescription Supply Traffic Filtering service environment AWSSESSIONTOKEN awssessiontoken AWSACCESSKEYID awsaccesskeyid AWSSECRETACCESSKEY awssecretaccesskey command apprunservicesh entrypoint usrbinentrypointsh networkmode host dtf from storeoracleserverjre roles role javaservice vars service demandtrafficfilteringservice servicename DTF servicedescription Demand Traffic Filtering service environment AWSSESSIONTOKEN awssessiontoken AWSACCESSKEYID awsaccesskeyid AWSSECRETACCESSKEY awssecretaccesskey command apprunservicesh entrypoint usrbinentrypointsh networkmode host OS ENVIRONMENT Ansible Container version Linux SM generic Ubuntu SMP Fri Aug UTC x default Nov GCC homejankoIdeaProjectssmartplatforminfraansiblevenvbinpython DefaultRuntime runc Name SM IndexServerAddress SystemStatus null ClusterStore MemTotal NGoroutines GenericResources null ContainersPaused ContainersRunning CpuCfsPeriod true IPv Forwarding true BridgeNfIp tables true ServerVersion ce Driver overlay Containers CPUShares true OSType linux CPUSet true NoProxy MemoryLimit true InitBinary dockerinit OperatingSystem Ubuntu LTS SwapLimit false KernelMemory true SystemTime T ExperimentalBuild false HttpsProxy RegistryConfig IndexConfigs dockerio Official true Name dockerio Mirrors Secure true Mirrors AllowNondistributableArtifactsCIDRs AllowNondistributableArtifactsHostnames InsecureRegistryCIDRs Plugins Log awslogs fluentd gcplogs gelf journald jsonfile logentries splunk syslog Network bridge host macvlan null overlay Volume local Authorization null RuncCommit ID fc a fb c ac fa ca Expected fc a fb c ac fa ca ClusterAdvertise LoggingDriver jsonfile ID GU L HDFQXOMP TQBJTFYJSPTRNQCTWSYV KSIY GVOIUXBH NFd NEventsListener Swarm ControlAvailable false Error RemoteManagers null NodeID LocalNodeState inactive NodeAddr NCPU LiveRestoreEnabled false Architecture x OomKillDisable true InitCommit ID e fa Expected e fa Images Debug false KernelVersion generic BridgeNfIptables true Labels DriverStatus Backing Filesystem extfs Supports dtype true Native Overlay Diff true ContainersStopped ContainerdCommit ID c c c b a d b c cd ec f Expected c c c b a d b c cd ec f CpuCfsQuota true Runtimes runc path dockerrunc Isolation CgroupDriver cgroupfs SecurityOptions nameapparmor nameseccompprofiledefault DockerRootDir varlibdocker HttpProxy MinAPIVersion Version ce Os linux GoVersion go Components Version ce Name Engine Details BuildTime T Experimental false MinAPIVersion Os linux Arch amd GoVersion go GitCommit ee f KernelVersion generic ApiVersion GitCommit ee f KernelVersion generic BuildTime T Platform Name ApiVersion Arch amd SUMMARY We are using ansible playbook to create docker images for our services For conductor we image ansiblecontainerconductorubuntuxenial from dockerhub Our services are created from storeoracleserverjre image We experience nondeterministic behavior while running ansiblecontainer build there is a chance that building will get stuck this image displays point where it gets stuck Command which is executed is given below ansiblecontainer build nocache services component In order to solve this problem we have to stop execution ie CtrlC it and rerun again It has approximately chance to get stuck Even if we build different services behavior is nondeterministic After debugging we realized that process gets stuck at this line of code therefore we suspect the problem is in race between threads STEPS TO REPRODUCE Run ansiblecontainer build nocache services component within ansible playbook until it gets stuck EXPECTED RESULTS Image should be built in deterministic behavior ACTUAL RESULTS Image building sometimes gets stuck ISSUE TYPE Bug Report containeryml version settings conductor base ubuntubionic projectname web services web from ubuntubionic roles flask ports workingdir app environment FLASKAPPappapppy command flask run host OS ENVIRONMENT ID DJFKFRYW MDKAZP I WC VFJNR JE KYCI NTNCWCNJK G Containers ContainersRunning ContainersPaused ContainersStopped Images Driver overlay DriverStatus Backing Filesystem extfs Supports dtype true Native Overlay Diff false SystemStatus null Plugins Volume local Network bridge host macvlan null overlay Authorization null Log awslogs fluentd gcplogs gelf journald jsonfile logentries splunk syslog MemoryLimit true SwapLimit true KernelMemory true CpuCfsPeriod true CpuCfsQuota true CPUShares true CPUSet true IPv Forwarding true BridgeNfIptables true BridgeNfIp tables true Debug false NFd OomKillDisable true NGoroutines SystemTime T LoggingDriver jsonfile CgroupDriver cgroupfs NEventsListener KernelVersion arch ARCH OperatingSystem Arch Linux OSType linux Architecture x IndexServerAddress RegistryConfig AllowNondistributableArtifactsCIDRs AllowNondistributableArtifactsHostnames InsecureRegistryCIDRs IndexConfigs dockerio Name dockerio Mirrors Secure true Official true Mirrors NCPU MemTotal GenericResources null DockerRootDir homecluoshtuwienconmwdockerstorage HttpProxy HttpsProxy NoProxy Name hopper Labels ExperimentalBuild false ServerVersion ce ClusterStore ClusterAdvertise Runtimes runc path dockerrunc DefaultRuntime runc Swarm NodeID NodeAddr LocalNodeState inactive ControlAvailable false Error RemoteManagers null LiveRestoreEnabled false Isolation InitBinary dockerinit ContainerdCommit ID c c c b a d b c cd ec f Expected c c c b a d b c cd ec f RuncCommit ID fc a fb c ac fa ca Expected fc a fb c ac fa ca InitCommit ID e fa Expected e fa SecurityOptions nameseccompprofiledefault Platform Name Components Name Engine Version ce Details ApiVersion Arch amd BuildTime T Experimental false GitCommit f GoVersion go KernelVersion arch ARCH MinAPIVersion Os linux Version ce ApiVersion MinAPIVersion GitCommit f GoVersion go Os linux Arch amd KernelVersion arch ARCH BuildTime T SUMMARY Ubuntu Bionic cannot be used as conductor base despite there being an image on dockerhub It is not listed in PREBAKEDDISTROS in containerdockerenginepy PREBAKEDDISTROS centos centoslatest centoscentos fedora fedoralatest fedora fedora amazonlinux amazonlinux debianjessie debian debianlatest debianjessieslim debianstretch debian debianstretchslim debianwheezy debian debianwheezyslim ubuntuprecise ubuntu ubuntutrusty ubuntu ubuntuxenial ubuntu ubuntuzesty ubuntu alpine alpinelatest alpine In prepareconductormanifest the ansible is only prepended if the the tag is found in PREBAKEDDISTROS making it impossible to pull the official prebaked Ubuntu Bionic image STEPS TO REPRODUCE ansiblecontainer debug build EXPECTED RESULTS Since the image is on dockerhub I expected it to build ACTUAL RESULTS T The default type is containerconfig callerfilehomecluoshtoolsansiblecontainercontainerconfigpy callerfuncresolvedefaults callerline configclass ruamelyamlcommentsCommentedMap defaultsclass ruamelyamlcompatordereddict T Getting environment variables containerconfig callerfilehomecluoshtoolsansiblecontainercontainerconfigpy callerfuncgetenvironmentvariables callerline T Read environment variables containerconfig callerfilehomecluoshtoolsansiblecontainercontainerconfigpy callerfuncgetenvironmentvariables callerline envvars T Resolved template variables containerconfig callerfilehomecluoshtoolsansiblecontainercontainerconfigpy callerfuncresolvedefaults callerline templatevars T Parsed config containerconfig callerfilehomecluoshtoolsansiblecontainercontainerconfigpy callerfuncsetenv callerline configversion settings conductor base ubuntubionic projectname secenv pwd homecluoshtuwiensecenvinfrastructurewebdocker services web from ubuntubionic roles flask ports workingdir app environment FLASKAPPappapppy command flask run host defaults T Loading engine capabilities containerutilsloader callerfilehomecluoshtoolsansiblecontainercontainerutilsloaderpy callerfuncloadengine callerline capabilities BUILD RUN enginedocker T Setting Docker client timeout to containerdockerengine callerfilehomecluoshtoolsansiblecontainercontainerdockerenginepy callerfuncgettimeout callerline T Could not find container for secenvconductor containerdockerengine allcontainers secenvweb fc flask secenvweb dc da flask secenvweb callerfilehomecluoshtoolsansiblecontainercontainerdockerenginepy callerfuncgetcontaineridbyname callerline T Call Enginebuildconductorimage containerdockerengine argshomecluoshtuwiensecenvinfrastructurewebdocker ubuntubionic callerfilehomecluoshtoolsansiblecontainercontainerdockerenginepy callerfuncEnginebuildconductorimage callerline kwargscache True environment T Using temporary directory containerutilstemp callerfilehomecluoshtoolsansiblecontainercontainerutilstemppy callerfuncenter callerline pathtmptmp k rcq T Building Docker Engine context containerdockerengine callerfilehomecluoshtoolsansiblecontainercontainerdockerenginepy callerfuncbuildconductorimage callerline T Rendered Jinja Template containerutils bodybFROM ubuntubionic nENV ANSIBLECONTAINER n n n n nRUN aptget update y n aptget install y make dpkgdev curl gcc git libffidev libpopt libssldev python pythonapt pythondev rsync sudo n cd usrbin n rm f lsbrelease n ln fs python python n n aptget clean n n nRUN curl python nocachedir n mkdir p etcansibleroles ansiblesrc n mkdir p licenses n n curl n tar zxC usrlocalbin stripcomponents dockerdocker n nADD LICENSE licensesLICENSE nADD help help n n The COPY here will break cache if the version of Ansible Container changed nCOPY containersrc ansiblecontainer n nRUN cd ansible n pip install nocachedir r containerconductorbuildconductorrequirementstxt n PYTHONPATH LCALLenUSUTF python containerconductorbuildsetuppy develop v N n ansiblegalaxy install p etcansibleroles r containerconductorbuildconductorrequirementsyml n callerfilehomecluoshtoolsansiblecontainercontainerutilsinitpy callerfuncjinjarendertotemp callerline T Rendered Jinja Template containerutils bodybFROM containerconductorubuntubionic rc n n n The COPY here will break cache if the requirements or ansiblecfg has changed nCOPY buildsrc ansiblebuild n n nRUN cp ansiblebuildansiblecfg etcansibleansiblecfg n n nVOLUME usr n nVOLUME lib n n n callerfilehomecluoshtoolsansiblecontainercontainerutilsinitpy callerfuncjinjarendertotemp callerline T Context manifest containerdockerengine callerfilehomecluoshtoolsansiblecontainercontainerdockerenginepy callerfuncbuildconductorimage callerline T tarball item buildsrcansiblecfg bytes containerdockerengine bytes filebuildsrcansiblecfg T tarball item buildsrcansiblerequirementstxt bytes containerdockerengine bytes filebuildsrcansiblerequirementstxt T tarball item buildsrcrequirementsyml bytes containerdockerengine bytes filebuildsrcrequirementsyml T tarball item buildsrctouch bytes containerdockerengine bytes filebuildsrctouch T tarball item contribgetpippy bytes containerdockerengine bytes filecontribgetpippy T tarball item containersrc bytes containerdockerengine bytes filecontainersrc T tarball item containersrcinitpy bytes containerdockerengine bytes filecontainersrcinitpy T tarball item containersrcpycache bytes containerdockerengine bytes filecontainersrcpycache T tarball item containersrcpycacheinitcpython pyc bytes containerdockerengine bytes filecontainersrcpycacheinitcpython pyc T tarball item containersrcpycacheclicpython pyc bytes containerdockerengine bytes filecontainersrcpycacheclicpython pyc T tarball item containersrcpycacheconfigcpython pyc bytes containerdockerengine bytes filecontainersrcpycacheconfigcpython pyc T tarball item containersrcpycachecorecpython pyc bytes containerdockerengine bytes filecontainersrcpycachecorecpython pyc T tarball item containersrcpycacheenginecpython pyc bytes containerdockerengine bytes filecontainersrcpycacheenginecpython pyc T tarball item containersrcpycacheexceptionscpython pyc bytes containerdockerengine bytes filecontainersrcpycacheexceptionscpython pyc T tarball item containersrcclipy bytes containerdockerengine bytes filecontainersrcclipy T tarball item containersrcconfigpy bytes containerdockerengine bytes filecontainersrcconfigpy T tarball item containersrccorepy bytes containerdockerengine bytes filecontainersrccorepy T tarball item containersrcdocker bytes containerdockerengine bytes filecontainersrcdocker T tarball item containersrcdockerinitpy bytes containerdockerengine bytes filecontainersrcdockerinitpy T tarball item containersrcdockerpycache bytes containerdockerengine bytes filecontainersrcdockerpycache T tarball item containersrcdockerpycacheinitcpython pyc bytes containerdockerengine bytes filecontainersrcdockerpycacheinitcpython pyc T tarball item containersrcdockerpycacheconfigcpython pyc bytes containerdockerengine bytes filecontainersrcdockerpycacheconfigcpython pyc T tarball item containersrcdockerpycacheenginecpython pyc bytes containerdockerengine bytes filecontainersrcdockerpycacheenginecpython pyc T tarball item containersrcdockerpycachesecretscpython pyc bytes containerdockerengine bytes filecontainersrcdockerpycachesecretscpython pyc T tarball item containersrcdockerconfigpy bytes containerdockerengine bytes filecontainersrcdockerconfigpy T tarball item containersrcdockerdeploypy bytes containerdockerengine bytes filecontainersrcdockerdeploypy T tarball item containersrcdockerenginepy bytes containerdockerengine bytes filecontainersrcdockerenginepy T tarball item containersrcdockerfiles bytes containerdockerengine bytes filecontainersrcdockerfiles T tarball item containersrcdockerfilesgetpippy bytes containerdockerengine bytes filecontainersrcdockerfilesgetpippy T tarball item containersrcdockerimporterpy bytes containerdockerengine bytes filecontainersrcdockerimporterpy T tarball item containersrcdockersecretspy bytes containerdockerengine bytes filecontainersrcdockersecretspy T tarball item containersrcdockertemplates bytes containerdockerengine bytes filecontainersrcdockertemplates T tarball item containersrcdockertemplatesatomichelpj bytes containerdockerengine bytes filecontainersrcdockertemplatesatomichelpj T tarball item containersrcdockertemplatesconductorlocaldockerfilej bytes containerdockerengine bytes filecontainersrcdockertemplatesconductorlocaldockerfilej T tarball item containersrcdockertemplatesconductorsrcdockerfilej bytes containerdockerengine bytes filecontainersrcdockertemplatesconductorsrcdockerfilej T tarball item containersrcdockertemplateslicensej bytes containerdockerengine bytes filecontainersrcdockertemplateslicensej T tarball item containersrcdockertests bytes containerdockerengine bytes filecontainersrcdockertests T tarball item containersrcdockertestsimport bytes containerdockerengine bytes filecontainersrcdockertestsimport T tarball item containersrcdockertestsimportDockerfile bytes containerdockerengine bytes filecontainersrcdockertestsimportDockerfile T tarball item containersrcdockertestsimportbluefishtxt bytes containerdockerengine bytes filecontainersrcdockertestsimportbluefishtxt T tarball item containersrcdockertestsimportlulztgz bytes containerdockerengine bytes filecontainersrcdockertestsimportlulztgz T tarball item containersrcdockertestsimportonefishtxt bytes containerdockerengine bytes filecontainersrcdockertestsimportonefishtxt T tarball item containersrcdockertestsimportredfish bytes containerdockerengine bytes filecontainersrcdockertestsimportredfish T tarball item containersrcdockertestsimportredfishlulztxt bytes containerdockerengine bytes filecontainersrcdockertestsimportredfishlulztxt T tarball item containersrcdockertestsimporttwofish bytes containerdockerengine bytes filecontainersrcdockertestsimporttwofish T tarball item containersrcdockertestsimporttwofishgreeneggs bytes containerdockerengine bytes filecontainersrcdockertestsimporttwofishgreeneggs T tarball item containersrcdockertestsimporttwofishgreeneggshamtxt bytes containerdockerengine bytes filecontainersrcdockertestsimporttwofishgreeneggshamtxt T tarball item containersrcdockertestsimporttwofishwhotxt bytes containerdockerengine bytes filecontainersrcdockertestsimporttwofishwhotxt T tarball item containersrcenginepy bytes containerdockerengine bytes filecontainersrcenginepy T tarball item containersrcexceptionspy bytes containerdockerengine bytes filecontainersrcexceptionspy T tarball item containersrck s bytes containerdockerengine bytes filecontainersrck s T tarball item containersrck sinitpy bytes containerdockerengine bytes filecontainersrck sinitpy T tarball item containersrck sbaseconfigpy bytes containerdockerengine bytes filecontainersrck sbaseconfigpy T tarball item containersrck sbasedeploypy bytes containerdockerengine bytes filecontainersrck sbasedeploypy T tarball item containersrck sbaseenginepy bytes containerdockerengine bytes filecontainersrck sbaseenginepy T tarball item containersrck sconfigpy bytes containerdockerengine bytes filecontainersrck sconfigpy T tarball item containersrck sdeploypy bytes containerdockerengine bytes filecontainersrck sdeploypy T tarball item containersrck senginepy bytes containerdockerengine bytes filecontainersrck senginepy T tarball item containersrcopenshift bytes containerdockerengine bytes filecontainersrcopenshift T tarball item containersrcopenshiftinitpy bytes containerdockerengine bytes filecontainersrcopenshiftinitpy T tarball item containersrcopenshiftconfigpy bytes containerdockerengine bytes filecontainersrcopenshiftconfigpy T tarball item containersrcopenshiftdeploypy bytes containerdockerengine bytes filecontainersrcopenshiftdeploypy T tarball item containersrcopenshiftenginepy bytes containerdockerengine bytes filecontainersrcopenshiftenginepy T tarball item containersrcschemayml bytes containerdockerengine bytes filecontainersrcschemayml T tarball item containersrctemplates bytes containerdockerengine bytes filecontainersrctemplates T tarball item containersrctemplatesansiblecontainerinventorypy bytes containerdockerengine bytes filecontainersrctemplatesansiblecontainerinventorypy T tarball item containersrctemplatesansibledockerfilej bytes containerdockerengine bytes filecontainersrctemplatesansibledockerfilej T tarball item containersrctemplatesansiblecfg bytes containerdockerengine bytes filecontainersrctemplatesansiblecfg T tarball item containersrctemplatesbuildersh bytes containerdockerengine bytes filecontainersrctemplatesbuildersh T tarball item containersrctemplatescomposeversionedj yml bytes containerdockerengine bytes filecontainersrctemplatescomposeversionedj yml T tarball item containersrctemplateshostsj bytes containerdockerengine bytes filecontainersrctemplateshostsj T tarball item containersrctemplatesinit bytes containerdockerengine bytes filecontainersrctemplatesinit T tarball item containersrctemplatesinitdockerignorej bytes containerdockerengine bytes filecontainersrctemplatesinitdockerignorej T tarball item containersrctemplatesinitansiblerequirementsj txt bytes containerdockerengine bytes filecontainersrctemplatesinitansiblerequirementsj txt T tarball item containersrctemplatesinitansiblej cfg bytes containerdockerengine bytes filecontainersrctemplatesinitansiblej cfg T tarball item containersrctemplatesinitcontainerj yml bytes containerdockerengine bytes filecontainersrctemplatesinitcontainerj yml T tarball item containersrctemplatesinitmetaj yml bytes containerdockerengine bytes filecontainersrctemplatesinitmetaj yml T tarball item containersrctemplatesinitrequirementsj yml bytes containerdockerengine bytes filecontainersrctemplatesinitrequirementsj yml T tarball item containersrctemplatesinstalldockercomposej yml bytes containerdockerengine bytes filecontainersrctemplatesinstalldockercomposej yml T tarball item containersrctemplatesrestartdockercomposej yml bytes containerdockerengine bytes filecontainersrctemplatesrestartdockercomposej yml T tarball item containersrctemplatesrole bytes containerdockerengine bytes filecontainersrctemplatesrole T tarball item containersrctemplatesroletravisj yml bytes containerdockerengine bytes filecontainersrctemplatesroletravisj yml T tarball item containersrctemplatesroleREADMEj md bytes containerdockerengine bytes filecontainersrctemplatesroleREADMEj md T tarball item containersrctemplatesroledefaults bytes containerdockerengine bytes filecontainersrctemplatesroledefaults T tarball item containersrctemplatesroledefaultsmainj yml bytes containerdockerengine bytes filecontainersrctemplatesroledefaultsmainj yml T tarball item containersrctemplatesrolemeta bytes containerdockerengine bytes filecontainersrctemplatesrolemeta T tarball item containersrctemplatesrolemetamainj yml bytes containerdockerengine bytes filecontainersrctemplatesrolemetamainj yml T tarball item containersrctemplatesroletest bytes containerdockerengine bytes filecontainersrctemplatesroletest T tarball item containersrctemplatesroletesttestj yml bytes containerdockerengine bytes filecontainersrctemplatesroletesttestj yml T tarball item containersrctemplatesrundockercomposej yml bytes containerdockerengine bytes filecontainersrctemplatesrundockercomposej yml T tarball item containersrctemplatesstopdockercomposej yml bytes containerdockerengine bytes filecontainersrctemplatesstopdockercomposej yml T tarball item containersrctemplateswaitonhostpy bytes containerdockerengine bytes filecontainersrctemplateswaitonhostpy T tarball item containersrcutils bytes containerdockerengine bytes filecontainersrcutils T tarball item containersrcutilsinitpy bytes containerdockerengine bytes filecontainersrcutilsinitpy T tarball item containersrcutilspycache bytes containerdockerengine bytes filecontainersrcutilspycache T tarball item containersrcutilspycacheinitcpython pyc bytes containerdockerengine bytes filecontainersrcutilspycacheinitcpython pyc T tarball item containersrcutilspycachetextcpython pyc bytes containerdockerengine bytes filecontainersrcutilspycachetextcpython pyc T tarball item containersrcutilspycacheloadercpython pyc bytes containerdockerengine bytes filecontainersrcutilspycacheloadercpython pyc T tarball item containersrcutilspycachelogmuxcpython pyc bytes containerdockerengine bytes filecontainersrcutilspycachelogmuxcpython pyc T tarball item containersrcutilspycacheordereddictcpython pyc bytes containerdockerengine bytes filecontainersrcutilspycacheordereddictcpython pyc T tarball item containersrcutilspycachetempcpython pyc bytes containerdockerengine bytes filecontainersrcutilspycachetempcpython pyc T tarball item containersrcutilspycachevisibilitycpython pyc bytes containerdockerengine bytes filecontainersrcutilspycachevisibilitycpython pyc T tarball item containersrcutilstextpy bytes containerdockerengine bytes filecontainersrcutilstextpy T tarball item containersrcutilsgalaxypy bytes containerdockerengine bytes filecontainersrcutilsgalaxypy T tarball item containersrcutilsloaderpy bytes containerdockerengine bytes filecontainersrcutilsloaderpy T tarball item containersrcutilslogmuxpy bytes containerdockerengine bytes filecontainersrcutilslogmuxpy T tarball item containersrcutilsordereddictpy bytes containerdockerengine bytes filecontainersrcutilsordereddictpy T tarball item containersrcutilstemppy bytes containerdockerengine bytes filecontainersrcutilstemppy T tarball item containersrcutilsvisibilitypy bytes containerdockerengine bytes filecontainersrcutilsvisibilitypy T tarball item containersrcconductorbuildsetuppy bytes containerdockerengine bytes filecontainersrcconductorbuildsetuppy T tarball item containersrcconductorbuildconductorrequirementstxt bytes containerdockerengine bytes filecontainersrcconductorbuildconductorrequirementstxt T tarball item containersrcconductorbuildconductorrequirementsyml bytes containerdockerengine bytes filecontainersrcconductorbuildconductorrequirementsyml T tarball item Dockerfile bytes containerdockerengine bytes fileDockerfile T tarball item buildsrcansiblecfg bytes containerdockerengine bytes filebuildsrcansiblecfg T tarball item buildsrcansiblerequirementstxt bytes containerdockerengine bytes filebuildsrcansiblerequirementstxt T tarball item buildsrcrequirementsyml bytes containerdockerengine bytes filebuildsrcrequirementsyml T tarball item buildsrctouch bytes containerdockerengine bytes filebuildsrctouch T tarball item Dockerfile bytes containerdockerengine bytes fileDockerfile T Starting Docker build of Ansible Container Conductor image please be patient containerdockerengine callerfilehomecluoshtoolsansiblecontainercontainerdockerenginepy callerfuncbuildconductorimage callerline Step FROM containerconductorubuntubionic rc T Cleaning up temporary directory containerutilstemp callerfilehomecluoshtoolsansiblecontainercontainerutilstemppy callerfuncexit callerline pathtmptmp k rcq T Unknown exception Error building conductor image pull access denied for containerconductorubuntubionic repository does not exist or may require docker login containercli callerfilehomecluoshtuwiensecenvinfrastructurewebdockervenvlibpython sitepackagesstructlogstdlibpy callerfuncexception callerline Traceback most recent call last File homecluoshtoolsansiblecontainercontainerclipy line in call getattrcore uhostcmdformatargssubcommandvarsargs File homecluoshtoolsansiblecontainercontainerinitpy line in wrapped return fnargs kwargs File homecluoshtoolsansiblecontainercontainercorepy line in hostcmdbuild environmentenvvars File homecluoshtoolsansiblecontainercontainerdockerenginepy line in wrapped return fnself args kwargs File homecluoshtoolsansiblecontainercontainerinitpy line in wrapped return fnargs kwargs File homecluoshtoolsansiblecontainercontainerdockerenginepy line in buildconductorimage Error building conductor image formatline errorDetail message containerexceptionsAnsibleContainerException Error building conductor image pull access denied for containerconductorubuntubionic repository does not exist or may require docker login Verify first that your issuerequest is not already reported in GitHub ISSUE TYPE Pick one item below and delete the rest Bug Report containeryml Paste verbatim a copy of your containeryml between the quotes below version settings conductor base alpine rolespath roles projectname dante varsfiles groupvarsallyml varsyml vaultpasswordfile vaultpass services dante from alpine roles dantecontainer ports volumes etcsockdconf entrypoint dumbinit command sockd registries docker url namespace sokolko OS ENVIRONMENT Paste output from ansiblecontainer debug version between the quotes below Ansible Container version Linux terminator generic Ubuntu SMP Mon Jun UTC x default Nov GCC homegodzillaprojectsopenitsolutionsdeploycontainersenvbinpython ContainersPaused Labels null CgroupDriver cgroupfs ContainersRunning ContainerdCommit Expected aa dbd b ad d e e a d eef a ed ID InitBinary dockerinit NGoroutines Swarm Managers ControlAvailable false NodeID Cluster Spec TaskDefaults Orchestration EncryptionConfig AutoLockManagers false Raft HeartbeatTick ElectionTick CAConfig Dispatcher Version ID CreatedAt T Z UpdatedAt T Z Nodes Error RemoteManagers null LocalNodeState inactive NodeAddr LoggingDriver jsonfile OSType linux HttpProxy Runtimes runc path runc DriverStatus Root Dir varlibdockeraufs Backing Filesystem extfs Dirs Dirperm Supported true OperatingSystem Ubuntu LTS Containers HttpsProxy BridgeNfIp tables true MemTotal SecurityOptions nameapparmor nameseccompprofiledefault Driver aufs IndexServerAddress ClusterStore InitCommit Expected e facb aeff a dde b ID NA Isolation SystemStatus null OomKillDisable true ClusterAdvertise SystemTime T Name terminator CPUSet true RegistryConfig InsecureRegistryCIDRs IndexConfigs dockerio Official true Name dockerio Secure true Mirrors null Mirrors DefaultRuntime runc ContainersStopped NCPU NFd Architecture x KernelMemory true CpuCfsQuota true Debug false ID ADHUOSBZSEP MX IPGK A SGNW TW I KO VXJU BAMF V IPv Forwarding true KernelVersion generic BridgeNfIptables true NoProxy LiveRestoreEnabled false ServerVersion CpuCfsPeriod true ExperimentalBuild false MemoryLimit true SwapLimit false Plugins Volume local Network bridge host macvlan null overlay Authorization null Images DockerRootDir varlibdocker NEventsListener CPUShares true RuncCommit Expected df b d f d a be de b dd f ID NA KernelVersion generic Arch amd BuildTime T ApiVersion Version MinAPIVersion GitCommit cba Os linux GoVersion go SUMMARY Explain the problem briefly Ive come across the situation when ansible wont include my varsfiles if they are encrypted via vault even if I specify vaultpasswordfile In the example below everything works fine if varsyml is not encrypted But as soon as I encrypt varsyml I get the error see below Maybe I should use some other technique to inject vault encrypted variales into my container build process STEPS TO REPRODUCE For bugs show exactly how to reproduce the problem For new features show how the feature would be used Paste any example commands between quotes below ansiblecontainer debug build nocache You can also paste gistgithubcom links for larger files EXPECTED RESULTS What did you expect to happen when running the steps above Sucessfull build ACTUAL RESULTS What actually happened If possible run with debugging debug Paste verbatim command output between quotes below T Use variable file homegodzillaprojectsopenitsolutionsdeploygroupvarsallyml containerconfig callerfilehomegodzillaprojectsopenitsolutionsdeploycontainersenvlocallibpython sitepackagescontainerconfigpy callerfuncgetvariablesfromfile callerline filehomegodzillaprojectsopenitsolutionsdeploygroupvarsallyml T Use variable file homegodzillaprojectsopenitsolutionsdeploycontainersdantevarsyml containerconfig callerfilehomegodzillaprojectsopenitsolutionsdeploycontainersenvlocallibpython sitepackagescontainerconfigpy callerfuncgetvariablesfromfile callerline filehomegodzillaprojectsopenitsolutionsdeploycontainersdantevarsyml T Unknown exception str object has no attribute iteritems containercli callerfilehomegodzillaprojectsopenitsolutionsdeploycontainersenvlocallibpython sitepackagesstructlogstdlibpy callerfuncexception callerline Traceback most recent call last File homegodzillaprojectsopenitsolutionsdeploycontainersenvlocallibpython sitepackagescontainerclipy line in call getattrcore uhostcmdformatargssubcommandvarsargs File homegodzillaprojectsopenitsolutionsdeploycontainersenvlocallibpython sitepackagescontainerinitpy line in wrapped return fnargs kwargs File homegodzillaprojectsopenitsolutionsdeploycontainersenvlocallibpython sitepackagescontainercorepy line in hostcmdbuild config getconfigbasepath varsfilesvarsfiles enginenameenginename projectnameprojectname File homegodzillaprojectsopenitsolutionsdeploycontainersenvlocallibpython sitepackagescontainerutilsinitpy line in getconfig projectnameprojectname vaultfilesvaultfiles File homegodzillaprojectsopenitsolutionsdeploycontainersenvlocallibpython sitepackagescontainerinitpy line in wrapped return fnargs kwargs File homegodzillaprojectsopenitsolutionsdeploycontainersenvlocallibpython sitepackagescontainerconfigpy line in init selfsetenvprod File homegodzillaprojectsopenitsolutionsdeploycontainersenvlocallibpython sitepackagescontainerdockerconfigpy line in setenv superAnsibleContainerConfig selfsetenvenv configconfig File homegodzillaprojectsopenitsolutionsdeploycontainersenvlocallibpython sitepackagescontainerconfigpy line in setenv selfresolvedefaultsconfig File homegodzillaprojectsopenitsolutionsdeploycontainersenvlocallibpython sitepackagescontainerconfigpy line in resolvedefaults defaultsupdateselfgetvariablesfromfilevarfilevarfile relaxTrue File homegodzillaprojectsopenitsolutionsdeploycontainersenvlocallibpython sitepackagescontainerconfigpy line in getvariablesfromfile return iteritemsconfig File homegodzillaprojectsopenitsolutionsdeploycontainersenvlocallibpython sitepackagessixpy line in iteritems return diteritemskw AttributeError str object has no attribute iteritems ISSUE TYPE Bug Report OS ENVIRONMENT Google Cloud Cloud SDK alpha beta bq core gsutil SUMMARY We are trying to setup AnsibleContainer in our google cloud We are facing error while running install command using pip STEPS TO REPRODUCE Pip Version python Version git Docker command tried pip install ansiblecontainer dockerk s EXPECTED RESULTS Ansiblecontainer has to be installed successfully ACTUAL RESULTS Error Command python setuppy egginfo failed with error code in tmppipinstallUA vuFansiblecontainer Fix tried pip install upgrade setuptools Requirement already uptodate setuptools in locallibpython sitepackages ISSUE TYPE Bug Report OS ENVIRONMENT Paste output from ansiblecontainer debug version between the quotes below cannot build but I have OSX High Sierra and use Python and pip SUMMARY After running the pip install I got an error that is probably related to pip See STEPS TO REPRODUCE Paste any example commands between quotes below virtualenv venv venvbinactivate pip install ansiblecontainer dockeropenshift You can also paste gistgithubcom links for larger files EXPECTED RESULTS a successful install ACTUAL RESULTS Collecting ansiblecontainer dockeropenshift Using cached Complete output from command python setuppy egginfo Traceback most recent call last File string line in module File privatevarfolderskkv l ds ybvtgj hmgc gpTpipinstall yi z ansiblecontainersetuppy line in module from pipreq import parserequirements ModuleNotFoundError No module named pipreq Verify first that your issuerequest is not already reported in GitHub ISSUE TYPE Pick one item below and delete the rest Bug Report containeryml Paste verbatim a copy of your containeryml between the quotes below version settings conductor base centos environment httpproxy httpsproxy noproxy corpcomlocalhost services xldcli from registrycorpcombaselatest roles mycli registries openshift url namespace myutils repositoryprefix OS ENVIRONMENT Paste output from ansiblecontainer debug version between the quotes below Ansible Container version rc Linux runnerf cad aproject concurrent el x SMP Tue May EDT x default Feb GCC Red Hat usrbinpython ContainersPaused Labels null CgroupDriver systemd ClusterAdvertise ContainersRunning ContainerdCommit Expected aa dbd b ad d e e a d eef a ed ID InitBinary usrlibexecdockerdockerinitcurrent NGoroutines Swarm Managers ControlAvailable false NodeID Cluster Spec TaskDefaults Orchestration EncryptionConfig AutoLockManagers false Raft HeartbeatTick ElectionTick CAConfig Dispatcher Version ID CreatedAt T Z UpdatedAt T Z Nodes Error RemoteManagers null LocalNodeState inactive NodeAddr LoggingDriver jsonfile OSType linux HttpProxy Runtimes runc path dockerrunc dockerrunc path usrlibexecdockerdockerrunccurrent DriverStatus Pool Name dockervgdockerpool Pool Blocksize kB Base Device Size GB Backing Filesystem xfs Data file Metadata file Data Space Used GB Data Space Total GB Data Space Available GB Metadata Space Used MB Metadata Space Total MB Metadata Space Available MB Thin Pool Minimum Free Space GB Udev Sync Supported true Deferred Removal Enabled true Deferred Deletion Enabled true Deferred Deleted Device Count Library Version RHEL OperatingSystem Red Hat Enterprise Linux Containers HttpsProxy BridgeNfIp tables true MemTotal SecurityOptions nameseccompprofileetcdockerseccompjson nameselinux Driver devicemapper IndexServerAddress ClusterStore InitCommit Expected e facb aeff a dde b ID b de f f d cf abbe d Isolation Registries Name registryaccessredhatcom Secure false Name registryaccessredhatcom Secure false Name dockerio Secure true SystemStatus null OomKillDisable true PkgVersion docker git f el x SystemTime T Name myservercorpcom CPUSet true RegistryConfig InsecureRegistryCIDRs IndexConfigs registryaccessredhatcom Official false Name registryaccessredhatcom Secure false Mirrors dockerio Official true Name dockerio Secure true Mirrors null Mirrors DefaultRuntime dockerrunc ContainersStopped NCPU NFd Architecture x KernelMemory true CpuCfsQuota true Debug false IndexServerName registryaccessredhatcom ID GPQD DT IMDECQXTO JROSIZ IBKWSCTWOVQQIVQ P RL IPv Forwarding true KernelVersion el x BridgeNfIptables true NoProxy corpcomlocalhost LiveRestoreEnabled false ServerVersion CpuCfsPeriod true ExperimentalBuild false MemoryLimit true SwapLimit true Plugins Volume local Network bridge host macvlan null overlay Authorization rhelpushplugin Images DockerRootDir varlibdocker NEventsListener CPUShares true RuncCommit Expected df b d f d a be de b dd f ID e c b f d dc e b ce a c a KernelVersion el x PkgVersion docker git f el x Arch amd BuildTime T ApiVersion Version MinAPIVersion GitCommit f Os linux GoVersion go SUMMARY Have an ansiblerequirementstxt file to install necessary python modules during build time The proxy settings in the containeryml are not being passed as buildarguments to the downstream container build This is necessary because we need to set httpproxy noproxy and httpsproxy in order to do these external builds The builds are failing because it is unable to reach the external network because the necessary environment variables are not being passed back to the downstream build STEPS TO REPRODUCE For bugs show exactly how to reproduce the problem For new features show how the feature would be used Paste any example commands between quotes below ansiblecontainer build You can also paste gistgithubcom links for larger files EXPECTED RESULTS Container builds ACTUAL RESULTS What actually happened If possible run with debugging debug Without debugging Paste verbatim command output between quotes below BuildError The command binsh c pip install nocachedir r ansiblebuildansiblerequirementstxt ansiblegalaxy install p etcansibleroles r ansiblebuildrequirementsyml cp ansiblebuildansiblecfg etcansibleansiblecfg returned a nonzero code With debugging Retrying Retrytotal connectNone readNone redirectNone statusNone after connection broken by NewConnectionErrorpipvendorurllib connectionVerifiedHTTPSConnection object at x fe d aa Failed to establish a new connection Errno Network is unreachable simpleansiblemoduleshashivault Could not find a version that satisfies the requirement ansiblemoduleshashivault from r ansiblebuildansiblerequirementstxt line from versions No matching distribution found for ansiblemoduleshashivault from r ansiblebuildansiblerequirementstxt line T Cleaning up temporary directory containerutilstemp callerfilesourcesansiblecontainercontainerutilstemppy callerfuncexit callerline pathtmptmp sJy T Unknown exception Error building conductor image The command binsh c pip install nocachedir r ansiblebuildansiblerequirementstxt ansiblegalaxy install p etcansibleroles r ansiblebuildrequirementsyml cp ansiblebuildansiblecfg etcansibleansiblecfg returned a nonzero code containercli callerfileusrlibpython sitepackagesstructlogstdlibpy callerfuncexception callerline Traceback most recent call last File sourcesansiblecontainercontainerclipy line in call getattrcore uhostcmdformatargssubcommandvarsargs File sourcesansiblecontainercontainerinitpy line in wrapped return fnargs kwargs File sourcesansiblecontainercontainercorepy line in hostcmdbuild environmentenvvars File sourcesansiblecontainercontainerdockerenginepy line in wrapped return fnself args kwargs File sourcesansiblecontainercontainerinitpy line in wrapped return fnargs kwargs File sourcesansiblecontainercontainerdockerenginepy line in buildconductorimage Error building conductor image formatline errorDetail message AnsibleContainerException Error building conductor image The command binsh c pip install nocachedir r ansiblebuildansiblerequirementstxt ansiblegalaxy install p etcansibleroles r ansiblebuildrequirementsyml cp ansiblebuildansiblecfg etcansibleansiblecfg returned a nonzero code Bug Report containeryml Paste verbatim a copy of your containeryml between the quotes below version settings conductor base ubuntu environment List or mapping of environment variables DISTROxenial projectname site services web from ubuntu roles apache sardexsite web dependson mysqldatabase ports volumes PWDsourcessite varwwwhtmlrw entrypoint etcinitdstartupsh command start mysqldatabase from ubuntu roles mysql sardexsite db ports entrypoint etcinitdstartupsh command start registries version settings conductor base ubuntu environment List or mapping of environment variables DISTROxenial projectname site services web from ubuntu roles apache sardexsite web dependson mysqldatabase ports volumes PWDsourcessite varwwwhtmlrw entrypoint etcinitdstartupsh command start mysqldatabase from ubuntu roles mysql sardexsite db ports entrypoint etcinitdstartupsh command start registries OS ENVIRONMENT Paste output from ansiblecontainer debug version between the quotes below bug version Ansible Container version Linux matteopc generic Ubuntu SMP Wed May UTC x default May GCC homematteovirtualenvssites tickPfbinpython SUMMARY After building those two containeryml if I destroy one project both projects conductors are deleted so I have to rebuild both STEPS TO REPRODUCE put two simple roles or just one for containeryml build my two containeryml projects destroy one of them You can see both projects conductors deleted EXPECTED RESULTS I expect that destroy command doesnt destroy other projects images ACTUAL RESULTS Both conductors site conductor and site conductor images are deleted ISSUE TYPE Bug Report containeryml This is a reasonably small example I created to demonstrate the problem Yes it fails version settings projectname buildbox conductor base centos services base from centos roles BuildBoxBase BuildBoxConfiguration BuildBoxConfiguration BuildBoxConfiguration BuildBoxConfiguration workingdir tmp ports command usrsbinsshd D Individual roles have a tasksmainyml of the form command echo BASE substitute BASE for ONE TWO THREE FOUR to match role OS ENVIRONMENT The environment for a virtualenv ansiblecontainer install direct on ubuntu xenial Ansible Container version Linux dhsuehubuntu generic Ubuntu SMP Thu May UTC x default Dec GCC virtualenv directory pathbinpython Believedidentical environment configured as a Dockerfilebuilt docker container FROM ubuntuxenial Ansible Container version Linux b df f generic Ubuntu SMP Thu May UTC x default Dec GCC usrbinpython I have tried a FROM centos version as well no difference My environments are set up pinned to with various workarounds applied as I encountered the need for them ubuntu paths below pip disablepipversioncheck install pip pip disablepipversioncheck install setuptools pip disablepipversioncheck install docker pip disablepipversioncheck install ansiblecontainer docker sed i sfiltersname selfsecretsvolumenameg usrlocallibpython distpackagescontainerdockersecretspy sed i sreturn ospathjoinossep run secretsreturn ospathjoinossep docker secretsg usrlocallibpython distpackagescontainerdockerenginepy pip docker is workaround that I cant find a reference for now sed filters workaround addresses ansiblecontainer bug described in sed return is workaround for SUMMARY Heads up The observed behavior is strikingly similar to but does not involve any cloudenabled roles all roles requested confirmed to exist on the filesystem in the single path specified in rolespath option I have many services each with many different roles listed Previous to everything was working fine on a particular docker host On I added an extra role to my services at the end of the list eg BuildBoxConfiguration which resulted in different failures depending on the environment In a directoniron ansiblecontainer virtualenv environment created after the problem date an ansiblecontainer build call completes fine Depending on the docker host I run an ansiblecontainer docker image on I get an error like T Processing defaults section containerconfig callerfileansiblecontainerconfigpy callerfuncprocessdefaults callerline T Processing section containerconfig callerfileansiblecontainerconfigpy callerfuncprocesstoplevelsections callerline sectionvolumes T Processing section containerconfig callerfileansiblecontainerconfigpy callerfuncprocesstoplevelsections callerline sectionregistries T Processing section containerconfig callerfileansiblecontainerconfigpy callerfuncprocesstoplevelsections callerline sectionsecrets T Processing service containerconfig callerfileansiblecontainerconfigpy callerfuncprocessservices callerline serviceubase servicedataucommand uusrsbinsshd uD uworkingdir utmp ufrom ucentos uports u uroles uBuildBoxBase uBuildBoxConfiguration uBuildBoxConfiguration uBuildBoxConfiguration uBuildBoxConfiguration Traceback most recent call last File usrbinconductor line in module loadentrypointansiblecontainer consolescripts conductor File ansiblecontainerinitpy line in wrapped return fnargs kwargs File ansiblecontainerclipy line in conductorcommandline conductorconfig AnsibleContainerConductorConfiglisttoordereddictcontainersconfig File ansiblecontainerinitpy line in wrapped return fnargs kwargs File ansiblecontainerconfigpy line in init selfprocessservices File ansiblecontainerconfigpy line in processservices rolemetadata getmetadatafromrolerolename File ansiblecontainerinitpy line in wrapped return fnargs kwargs File ansiblecontainerutilsinitpy line in getmetadatafromrole return getcontentfromrolerolename ospathjoinmeta containeryml File ansiblecontainerinitpy line in wrapped return fnargs kwargs File ansiblecontainerutilsinitpy line in getcontentfromrole rolepath resolveroletopathrolename File ansiblecontainerinitpy line in wrapped return fnargs kwargs File ansiblecontainerutilsinitpy line in resolveroletopath loaderloader File usrlibpython sitepackagesansibleplaybookroleincludepy line in load return riloaddatadata variablemanagervariablemanager loaderloader File usrlibpython sitepackagesansibleplaybookbasepy line in loaddata ds selfpreprocessdatads File usrlibpython sitepackagesansibleplaybookroledefinitionpy line in preprocessdata rolename rolepath selfloadrolepathrolename File usrlibpython sitepackagesansibleplaybookroledefinitionpy line in loadrolepath raise AnsibleErrorthe role s was not found in s rolename joinrolesearchpaths objselfds ansibleerrorsAnsibleError the role NOTFOUNDROLE was not found in rolesACROLESPATHsrcrolesetcansibleroles The ACROLESPATH is the path provided in the ansiblecontainer rolespath option The missing NOTFOUNDROLE role is at times when using docker container running on host for the first time post the first role in the containeryml listing BuildBoxBase removing that role simply results in failing to find the new first role when using docker container running on host working successfully previous to the last role in the containeryml listing BuildBoxConfiguration if I remove the last role making the list match what was working previous to the build completes fine In all cases I can confirm all roles are present on the local incontainer filesystem before the ansiblecontainer call The fact that on the workingbefore docker host I can delete the recentlyadded last role and build successfully suggests that some caching is happening and maybe some intermediary tool changed cf but I am unable to determine what and where Failures not affected by presenceabsense of debug andor uselocalpython STEPS TO REPRODUCE Create an oniron virtualenv and set up environment as shown above Create a Dockerfile with ansiblecontainer environment as shown above Set up the containeryml and various roles as described above Run ansiblecontainer build services base rolespath wherever you put the roles EXPECTED RESULTS working build direct oniron ACTUAL RESULTS debug output above for ansiblecontainer run in docker container on host varies depending on host 