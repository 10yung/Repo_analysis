 Issue Description When a user executes the workbenchactiondebugconfigure command all extensions that contribute a debugger are activated to provide entries for the quick pick list When OmniSharp is activated it starts downloading its dependencies and does not provide entries for the quick pick list until those downloads are complete Thus OmniSharp considerably delays completion of the command This is a serious UX issue when I am working in any other language Activating extensions like this is expected behavior Steps to Reproduce Open Windows Sandbox Install Visual Studio Code Install OmniSharp and immediately exit VSCode otherwise OmniSharp immediately installs dependencies Reopen VSCode open a folder Open the command dialog execute Debug Open launchjson Expected Behavior The Select Environment quick pick shows up immediately Actual Behavior Nothing visibly happens except in the logs until OmniSharp is finished downloading everything then the quick pick shows up Logs OmniSharp log empty C log details Installing C dependencies Platform win x Downloading package NET Core Debugger Windows x KB Done Validating download Integrity Check succeeded Installing package NET Core Debugger Windows x Downloading package Razor Language Server Windows x KB Done Installing package Razor Language Server Windows x Finished Failed to spawn dotnet info details Environment information VSCode version C Extension detailssummaryDotnet Informationsummary A valid dotnet installation could not be founddetails detailssummaryVisual Studio Code Extensionssummary ExtensionAuthorVersion csharpmsvscode details Issue Description When using the typeparam XML doc tag its description is shown without preceding with a newline nor its name Steps to Reproduce Add the typeparam tag to the XML doc comment of a class or method that accepts generic types Expected Behavior Type parameters should be shown just like normal parameters with the param tag each on a new line with their name followed by its description Actual Behavior Only the description of typeparam is shown on the same line with param If multiple typeparam tags are used they are all shown on the same line Environment information VSCode version C Extension detailssummaryDotnet Informationsummary NET Core SDK reflecting any globaljson Version Commit bc f df f Runtime Environment OS Name Windows OS Version OS Platform Windows RID win x Base Path C Program Files dotnet sdk Host useful for support Version Commit cbc NET Core SDKs installed C Program Files dotnet sdk NET Core runtimes installed MicrosoftAspNetCoreApp C Program Files dotnet shared MicrosoftAspNetCoreApp MicrosoftNETCoreApp C Program Files dotnet shared MicrosoftNETCoreApp MicrosoftWindowsDesktopApp C Program Files dotnet shared MicrosoftWindowsDesktopApp To install additional NET Core runtimes or SDKs details Issue Description Steps to Reproduce Setup a dockercompose file with a aspnet core hello world application in the container As follows dockercomposeyml version services app build context netcore dockerfile Dockerfile restart always dependson db ports db image microsoftmssqlserverlinux volumes mssqlserverdevlinuxdatavaroptmssqldata restart always environment SAPASSWORD Abcd ACCEPTEULA Y expose ports volumes mssqlserverdevlinuxdata Setup the dockerfile in netcore folder netcoreDockerfile FROM mcrmicrosoftcomdotnetcoresdk AS buildenv WORKDIR app Copy csproj and restore as distinct layers COPY WORKDIR appHelloWorld RUN dotnet restore Copy everything else and build WORKDIR app COPY ADD entrypointsh appHelloWorld RUN chmod x appHelloWorldentrypointsh CMD binbash appHelloWorldentrypointsh WORKDIR appHelloWorld RUN dotnet publish c Debug o out Build runtime image FROM mcrmicrosoftcomdotnetcoreaspnet WORKDIR app COPY frombuildenv appHelloWorldout ENTRYPOINT dotnet HelloWorlddll Run the application using dockercompose up Wait for services to be ready verify that your application is running as expected with the hello world whatever showing Identify the name of the container by running docker ps Create a vscodelaunchjson file containing the following replacing the variable in square brackets with the name of the container found in version configurations name NET Core Docker Attach type coreclr request attach preLaunchTask preDockerDebug processId commandpickRemoteProcess sourceFileMap app workspaceFoldernetcore pipeTransport pipeProgram docker pipeArgs exec i name of hello world container debuggerPath publishvsdbgvsdbg pipeCwd workspaceFoldernetcore quoteArgs false Create a file called vscodetasksjson with the following See for the documentation about the tasksjson format version tasks label publishApp command dotnet type shell args publish c Debug norestore group none presentation reveal silent problemMatcher msCompile label restartAppContainer command dockercompose type shell args restart app group none presentation reveal silent problemMatcher msCompile label preDockerDebug type shell command echo Starting pre docker debug scripts dependsOrder sequence dependsOn publishApp restartAppContainer group none options cwd workspaceRootnetcoreHelloWorld With the applicaiton still running attempt to attach the debugger by clicking on the VS Code green debugger icon Expected Behavior When I click the debugger button in the application rebuilds the application and restarts the container and then attaches the debugger This allows me to enter break points etc Actual Behavior When I click the debugger icon the remoteattach process fails with the following error text Executing docker exec i helloworldapp sh s C Users MyUser vscode extensions msvscodecsharp scripts remoteProcessPickerScript Linux stderr sh ps not found Error Message Command failed docker exec i helloworldapp sh s C Users MyUser vscode extensions msvscodecsharp scripts remoteProcessPickerScript sh ps not found Logs OmniSharp log detailsPost the output from OutputOmniSharp log heredetails C log detailsPost the output from OutputC heredetails Environment information VSCode version C Extension detailssummaryDotnet Informationsummary NET Core SDK reflecting any globaljson Version Commit cd f f Runtime Environment OS Name Windows OS Version OS Platform Windows RID win x Base Path C Program Files dotnet sdk Host useful for support Version Commit f fb db NET Core SDKs installed C Program Files dotnet sdk NET Core runtimes installed MicrosoftAspNetCoreAll C Program Files dotnet shared MicrosoftAspNetCoreAll MicrosoftAspNetCoreAll C Program Files dotnet shared MicrosoftAspNetCoreAll MicrosoftAspNetCoreAll C Program Files dotnet shared MicrosoftAspNetCoreAll MicrosoftAspNetCoreAll C Program Files dotnet shared MicrosoftAspNetCoreAll MicrosoftAspNetCoreAll C Program Files dotnet shared MicrosoftAspNetCoreAll MicrosoftAspNetCoreAll C Program Files dotnet shared MicrosoftAspNetCoreAll MicrosoftAspNetCoreApp C Program Files dotnet shared MicrosoftAspNetCoreApp MicrosoftAspNetCoreApp C Program Files dotnet shared MicrosoftAspNetCoreApp MicrosoftAspNetCoreApp C Program Files dotnet shared MicrosoftAspNetCoreApp MicrosoftAspNetCoreApp C Program Files dotnet shared MicrosoftAspNetCoreApp MicrosoftAspNetCoreApp C Program Files dotnet shared MicrosoftAspNetCoreApp MicrosoftAspNetCoreApp C Program Files dotnet shared MicrosoftAspNetCoreApp MicrosoftAspNetCoreApp C Program Files dotnet shared MicrosoftAspNetCoreApp MicrosoftNETCoreApp C Program Files dotnet shared MicrosoftNETCoreApp MicrosoftNETCoreApp C Program Files dotnet shared MicrosoftNETCoreApp MicrosoftNETCoreApp C Program Files dotnet shared MicrosoftNETCoreApp MicrosoftNETCoreApp C Program Files dotnet shared MicrosoftNETCoreApp MicrosoftNETCoreApp C Program Files dotnet shared MicrosoftNETCoreApp MicrosoftNETCoreApp C Program Files dotnet shared MicrosoftNETCoreApp MicrosoftNETCoreApp C Program Files dotnet shared MicrosoftNETCoreApp MicrosoftNETCoreApp C Program Files dotnet shared MicrosoftNETCoreApp MicrosoftWindowsDesktopApp C Program Files dotnet shared MicrosoftWindowsDesktopApp To install additional NET Core runtimes or SDKs details detailssummaryVisual Studio Code Extensionssummary ExtensionAuthorVersion angularconsolenrwl angularessentialsjohnpapa Angular johnpapa angular inlinenatewallace beautifyHookyQR cloudcodegooglecloudtools codeeolsohamkamani coderunnerformulahendry codesettingssyncShan csharpmsvscode cypherquerylanguagejakeboone debuggerforchromemsjsdiag dotenvmikestead dotnettestexplorerformulahendry EditorConfigEditorConfig gcexcelviewerGrapeCity gitlenseamodio intellijideakeybindingskkato javaredhat MagicPythonmagicstack materialiconthemePKief monodebugmsvscode mssqlmsmssql ngtemplateAngular npmintellisensechristiankohler pippackagesetmoffat prettiervscodeesbenp pythonmspython remotecontainersmsvscoderemote remotesshmsvscoderemote remotessheditmsvscoderemote remotesshexplorermsvscoderemote remotewslmsvscoderemote Spellseanmcbreen vscodedockermsazuretools vscodejavadebugvscjava vscodejavadependencyvscjava vscodejavapackvscjava vscodejavatestvscjava vscodekubernetestoolsmskubernetestools vscodemarkdownlintDavidAnson vscodemavenvscjava vscodenpmscripteg vscoderemoteextensionpackmsvscoderemote vscodetypescripttslintpluginmsvscode vscodeyamlredhat vscodezipexplorerslevesque vscodeintellicodeVisualStudioExptTeam winteriscomingjohnpapa xmlDotJoshJohnson details Issue Description Adding h or b to a watch doesnt not show the hex or binary in the watched variable in the debugger Steps to Reproduce Add h or b to a watched variable Expected Behavior variable is shown with binary or hex Actual Behavior variable is shown in decimal Environment information VSCode version C Extension detailssummaryMono Informationsummary OmniSharp using global mono details detailssummaryDotnet Informationsummary NET Core SDK reflecting any globaljson Version Commit c a Runtime Environment OS Name Mac OS X OS Version OS Platform Darwin RID osx x Base Path usrlocalsharedotnetsdk Host useful for support Version Commit d f NET Core SDKs installed usrlocalsharedotnetsdk usrlocalsharedotnetsdk usrlocalsharedotnetsdk usrlocalsharedotnetsdk usrlocalsharedotnetsdk usrlocalsharedotnetsdk usrlocalsharedotnetsdk NET Core runtimes installed MicrosoftAspNetCoreAll usrlocalsharedotnetsharedMicrosoftAspNetCoreAll MicrosoftAspNetCoreAll usrlocalsharedotnetsharedMicrosoftAspNetCoreAll MicrosoftAspNetCoreAll usrlocalsharedotnetsharedMicrosoftAspNetCoreAll MicrosoftAspNetCoreAll usrlocalsharedotnetsharedMicrosoftAspNetCoreAll MicrosoftAspNetCoreAll usrlocalsharedotnetsharedMicrosoftAspNetCoreAll MicrosoftAspNetCoreAll usrlocalsharedotnetsharedMicrosoftAspNetCoreAll MicrosoftAspNetCoreAll usrlocalsharedotnetsharedMicrosoftAspNetCoreAll MicrosoftAspNetCoreApp usrlocalsharedotnetsharedMicrosoftAspNetCoreApp MicrosoftAspNetCoreApp usrlocalsharedotnetsharedMicrosoftAspNetCoreApp MicrosoftAspNetCoreApp usrlocalsharedotnetsharedMicrosoftAspNetCoreApp MicrosoftAspNetCoreApp usrlocalsharedotnetsharedMicrosoftAspNetCoreApp MicrosoftAspNetCoreApp usrlocalsharedotnetsharedMicrosoftAspNetCoreApp MicrosoftAspNetCoreApp usrlocalsharedotnetsharedMicrosoftAspNetCoreApp MicrosoftAspNetCoreApp usrlocalsharedotnetsharedMicrosoftAspNetCoreApp MicrosoftAspNetCoreApp usrlocalsharedotnetsharedMicrosoftAspNetCoreApp MicrosoftNETCoreApp usrlocalsharedotnetsharedMicrosoftNETCoreApp MicrosoftNETCoreApp usrlocalsharedotnetsharedMicrosoftNETCoreApp MicrosoftNETCoreApp usrlocalsharedotnetsharedMicrosoftNETCoreApp MicrosoftNETCoreApp usrlocalsharedotnetsharedMicrosoftNETCoreApp MicrosoftNETCoreApp usrlocalsharedotnetsharedMicrosoftNETCoreApp MicrosoftNETCoreApp usrlocalsharedotnetsharedMicrosoftNETCoreApp MicrosoftNETCoreApp usrlocalsharedotnetsharedMicrosoftNETCoreApp MicrosoftNETCoreApp usrlocalsharedotnetsharedMicrosoftNETCoreApp To install additional NET Core runtimes or SDKs details detailssummaryVisual Studio Code Extensionssummary ExtensionAuthorVersion bettertomlbungcip codespellcheckerstreetsidesoftware codedoxwiggin cpptoolsmsvscode cratesserayuzgur csharpmsvscode debuggerforchromemsjsdiag gruvboxthemestomphilbin haxeextensionpackvshaxe haxehlHaxeFoundation hxcppdebuggervshaxe indentrainbowoderwat IonideFAKEIonide IonidefsharpIonide IonidePaketIonide markdownallinoneyzhang markdownpreviewenhancedshd wyy monodebugmsvscode phantypistpaulofallon rainbowbrackets gua readtimejohnpapa reasonvscodejaredly rustrustlang rustpackSwellaby ThemeFlatlandMonokaigerane themeoceanicnextnaumovs ThemeTomorrowKitmsvscode tomorrowandtomorrownightoperatormonothemechiragpat vscodecustomcssbe invis vscodelldbvadimcn vscodenupkgeridem vscodewasmdtsvet vshaxenadako wordcountrido xmlDotJoshJohnson details While investigating which debugger extensions are using deprecated extension API I found two issues with coreclr In the packagejson enableBreakpointsFor is used as a property of the debuggers extension point see here This is deprecated and it is flagged as an error in the editor Please use the breakpoints extension point on the same level as debuggers instead js contributes breakpoints language csharp language razor language qsharp language aspnetcorerazor debuggers In the packagejson the deprecated debuggersadapterExecutableCommand is used Please use the vscodeDebugAdapterDescriptorFactory and a vscodeDebugAdapterExecutable instead like shown here with Mock debug You can register the adapter factory in the extensions activate function like this js contextsubscriptionspushvscodedebugregisterDebugAdapterDescriptorFactorycoreclr factory To prefill this information Open Visual Studio Code Bring up the command palette press kbdF kbd Type CSharp Report an issue If the CSharp Report an issue command doesnt appear make sure that you have C extension version or newer installed Environment data NET Core SDK reflecting any globaljson Version Commit c a Runtime Environment OS Name debian OS Version OS Platform Linux RID debian x Base Path usrsharedotnetsdk Host useful for support Version Commit a a NET Core SDKs installed usrsharedotnetsdk NET Core runtimes installed MicrosoftAspNetCoreApp usrsharedotnetsharedMicrosoftAspNetCoreApp MicrosoftNETCoreApp usrsharedotnetsharedMicrosoftNETCoreApp VS Code versionVersion C Extension version Steps to reproduce Create Hello World app Publish as selfcontained and linuxarm Copy it to the target start the app Remote debugging works fine with json version configurations name NET Core Attach type coreclr request attach processId commandpickProcess name NET Core SSH Attach type coreclr request attach processId commandpickRemoteProcess pipeTransport pipeProgram ssh pipeArgs T admin debuggerPath vsdebuggervs vsdbg pipeCwd workspaceRoot quoteArgs true justMyCode false symbolOptions searchPaths apps searchMicrosoftSymbolServer false requireExactSource false Add the property PublishTrimmed true It doesnt work any more Project file xml Project SdkMicrosoftNETSdk PropertyGroup OutputTypeExeOutputType TargetFrameworknetcoreapp TargetFramework PublishTrimmedtruePublishTrimmed PublishSingleFiletruePublishSingleFile RuntimeIdentifierlinuxx RuntimeIdentifier PropertyGroup Project The Debugger console writes Module was built without symbols Thanks for any support Expected behavior Starting ssh T admin vsdebuggervs vsdbg interpretervscode You may only use the Microsoft NET Core Debugger vsdbg with Visual Studio Code Visual Studio or Visual Studio for Mac software to help you develop and test your applications Loaded varvolatiletmpnetHelloWorldvp ilmdtndeSystemPrivateCoreLibdll Cannot find or open the PDB file Loaded varvolatiletmpnetHelloWorldvp ilmdtndeHelloWorlddll Symbols loaded Loaded varvolatiletmpnetHelloWorldvp ilmdtndeSystemRuntimedll Cannot find or open the PDB file Loaded varvolatiletmpnetHelloWorldvp ilmdtndeSystemConsoledll Cannot find or open the PDB file Actual behavior Starting ssh T admin vsdebuggervs vsdbg interpretervscode You may only use the Microsoft NET Core Debugger vsdbg with Visual Studio Code Visual Studio or Visual Studio for Mac software to help you develop and test your applications Loaded varvolatiletmpnetHelloWorldxcxtqtitmgzSystemPrivateCoreLibdll Cannot find or open the PDB file Loaded varvolatiletmpnetHelloWorldxcxtqtitmgzHelloWorlddll Module was built without symbols Loaded varvolatiletmpnetHelloWorldxcxtqtitmgzSystemConsoledll Module was built without symbols Environment data dotnet info output SDK NET Core refl tant tous les globaljson Version Commit cd f f Environnement dex cution OS Name Windows OS Version OS Platform Windows RID win x Base Path C Program Files dotnet sdk Host useful for support Version Commit f fb db NET Core SDKs installed C Program Files dotnet sdk NET Core runtimes installed MicrosoftAspNetCoreAll C Program Files dotnet shared MicrosoftAspNetCoreAll MicrosoftAspNetCoreApp C Program Files dotnet shared MicrosoftAspNetCoreApp MicrosoftAspNetCoreApp C Program Files dotnet shared MicrosoftAspNetCoreApp MicrosoftNETCoreApp C Program Files dotnet shared MicrosoftNETCoreApp MicrosoftNETCoreApp C Program Files dotnet shared MicrosoftNETCoreApp MicrosoftWindowsDesktopApp C Program Files dotnet shared MicrosoftWindowsDesktopApp VS Code version C Extension version Steps to reproduce Open Visual Studio Code Add a a xml with the documentation like this xml docs members namerefitWarning refitWarning summary Lots of problems with Refit First Refit does not work with nullable references For instance we couldnt do SearchParamsDto searchParams Ref Second Refit does not understand query parameters that are arrays of objects for example the IEnumerable ltSearchFilterDto gt in SearchParamsDto It cannot produce queries in this format array property value amparray property value amparray property value amparray property value We tried various solutions but none worked Ref and other issues Workaround for now use POST instead of GET and pass the SearchParamsDto in the body instead of the query summary refitWarning members docs Add the include tag on a class c include filedocsxml pathdocsmembers namerefitWarning refitWarning public interface IOptionalFeatureController Expected behavior See the summary at least like Visual studio Actual behavior In VSCode in VS Hi VS Code dev here wave Last milestone we have introduced a Start View for debugging More about this can be found here So when the user has no launchjson file this view should help him start debugging This view is currently language agnostic and not very cluttered thus we are slowly looking in opening it up to extensions We have two options Allow extensions to contribute commands text to the current view Those commands would be rendered as additional blue buttons or as some menu Allow extensions to contribute a whole view which would be below the start view The C extension could choose what to render in that view and it would give a bit more control to the extension Using context keys this view would only be visible in the start experience What I would be interested in is what C would like to contribute to improve the start experience If it is only commands than I think it makes sense to show those commands in the start view for example with additional blue buttons If it is much more then it makes more sense that C contributes the whole view What are the biggest pain points that C users hit when setting up debugging Related python discussion Let me know what you think and how you envision the C debug start experience Thanks fyi greggmiskelly Current look of debug start view Screenshot at Environment data C Extension version Steps to reproduce Create the following project Set a breakpoint at the specified line Evaluate sequenceToArray using System using SystemBuffers using SystemText namespace DNC Con class Program static void Mainstring args byte bytes Byteh Bytee Bytel Bytel Byteo Byte ReadOnlySequenceByte sequence new ReadOnlySequencebytebytes ConsoleWriteLineHello World breakpoint here Expected behavior Evaluation should succeed like it does in Visual Studio Actual behavior error CS Feature ref extension methods is not available in C Please use language version or greater Notes I believe the cause is that we need to upgrade the version of the C EE that we ship in this extension to something more recent