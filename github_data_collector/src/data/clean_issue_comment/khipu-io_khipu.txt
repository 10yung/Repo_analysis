How to avoid memory leak when some entries in knownTransactions are never removed See Which causes receipts hash error Example first transaction block tx hash x c ed cb bcf aa e a dd a e ef bfed be dfba b Following is the account updating during this tx after save Map xa e a b f e ee f b UpdatedAccountnonce balance stateRoot e f bcc a ff e c f e b e b cadc fb e b codeHash c d f c e db dcc c e b ca b bfad d a after save Map xa e a b f e ee f b UpdatedAccountnonce balance stateRoot e f bcc a ff e c f e b e b cadc fb e b codeHash c d f c e db dcc c e b ca b bfad d a after save Map xa e a b f e ee f b UpdatedAccountnonce balance stateRoot e f bcc a ff e c f e b e b cadc fb e b codeHash c d f c e db dcc c e b ca b bfad d a after save Map xa e a b f e ee f b UpdatedAccountnonce balance stateRoot e f bcc a ff e c f e b e b cadc fb e b codeHash c d f c e db dcc c e b ca b bfad d a x df b f ba f cde c fc de UpdatedAccountnonce balance stateRoot e f bcc a ff e c f e b e b cadc fb e b codeHash c d f c e db dcc c e b ca b bfad d a after save Map xa e a b f e ee f b UpdatedAccountnonce balance stateRoot e f bcc a ff e c f e b e b cadc fb e b codeHash c d f c e db dcc c e b ca b bfad d a x df b f ba f cde c fc de UpdatedAccountnonce balance stateRoot e f bcc a ff e c f e b e b cadc fb e b codeHash c d f c e db dcc c e b ca b bfad d a before flush fc f d d e f f d e fedbeb dc b d Map xa e a b f e ee f b UpdatedAccountnonce balance stateRoot e f bcc a ff e c f e b e b cadc fb e b codeHash c d f c e db dcc c e b ca b bfad d a x df b f ba f cde c fc de UpdatedAccountnonce balance stateRoot e f bcc a ff e c f e b e b cadc fb e b codeHash c d f c e db dcc c e b ca b bfad d a after flush d d e e aa cda d b a e fe d db daf e f aa Tx c ed cb bcf aa e a dd a e ef bfed be dfba b Receipt d d e e aa cda d b a e fe d db daf e f aa cumulativeGasUsed logsBloomFilter logs Vector The state of receipt is not correct But the final state root of block is correct after save Map xa e a b f e ee f b UpdatedAccountnonce balance stateRoot e f bcc a ff e c f e b e b cadc fb e b codeHash c d f c e db dcc c e b ca b bfad d a x df b f ba f cde c fc de UpdatedAccountnonce balance stateRoot e f bcc a ff e c f e b e b cadc fb e b codeHash c d f c e db dcc c e b ca b bfad d a xe a a d ff b aea c cb d bca UpdatedAccountnonce balance stateRoot e f bcc a ff e c f e b e b cadc fb e b codeHash c d f c e db dcc c e b ca b bfad d a after save Map xa e a b f e ee f b UpdatedAccountnonce balance stateRoot e f bcc a ff e c f e b e b cadc fb e b codeHash c d f c e db dcc c e b ca b bfad d a x df b f ba f cde c fc de UpdatedAccountnonce balance stateRoot e f bcc a ff e c f e b e b cadc fb e b codeHash c d f c e db dcc c e b ca b bfad d a xe a a d ff b aea c cb d bca UpdatedAccountnonce balance stateRoot e f bcc a ff e c f e b e b cadc fb e b codeHash c d f c e db dcc c e b ca b bfad d a before flush e df b a fb bd c d abbe af d eba db db b a Map after flush e df b a fb bd c d abbe af d eba db db b a Failed to execute mined block because of ValidationAfterExecError BlockReceiptsHashError sync Execution error ValidationAfterExecError BlockReceiptsHashError in block Most nodes of ethereum network seem to read receipts slower and slower along with block numbers increasing which cause too many timeout during fastsync 