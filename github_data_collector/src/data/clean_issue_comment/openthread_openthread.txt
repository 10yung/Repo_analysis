This PR aims to resolve issues in high packet loss network reported in On one hand this PR aims to reduce invalid SRVDATAntf for example First commit is used to clear cached CoAP message when RLOC changes in case before successfully register SRVDATA the child server switches to a different parent Second commit ensures the SRVDATAntf intervals when detecting network data inconsistence after hearing neighboring Mle Advertisemennt On the other hand this PR aims to remove stable network data In the high packet loss network there is chance that both SRVDATAntf from the server child after switching parent and the SRVDATAntf from old parent for deregister and lost when the child tries to register again without old child rloc now the old child rloc server entry would be still there This PR introduce a feedback mechanism the parent of the old child rloc would explicitly deregister the service again if destiantion unreachable when receiving ALOC destined packet However as to how long would it take to recover fresh network data it may depend on Service Aloc destined traffic This is the second of PRs addressing the efr mg radio driver PR Implements correctly setting mAckedWithFramePending See The idea is the following when receiving an IEEE Data Request Command RAIL generates an event and calls RAILCbGeneric as early as possible even before the packet is fully received ie the CRC could be still wrong from interrupt context In RAILCbGeneric the driver calls ieee DataRequestCommand which in turn decides whether to set the Frame Pending flag for the outgoing ACK by analysing the soft source match table If the Frame Pending flag is set we have to report mAckedWithFramePending true when we pass the Data Request Command packet to the upper layers Since the Data Request Command packet is held in the callback and passed to the upper layers in processNextRxPacket and the Parent can receive multiple Data Request Commands from different children backtoback before calling processNextRxPacket one cannot simply set a flag in the callback to signal processNextRxPacket that the Data Request Command was acked with Frame Pending The proposed solution is to insert a unique identifier of the Data Request Command packet into a FIFO when the ACK was sent with the Frame Pending flag is set Then for each Data Request Command packet that processNextRxPacket will pass to the upper layer it will pop the unique identifiers from the FIFO searching for a match If the identifier is found mAckedWithFramePending will be set to true The unique identifier is actually the contents of the packet being received PHR MAC Header because the RAILGetRxIncomingPacketInfo does not return a RAILRxPacketHandlet When processNextRxPacket pops a unique identifier from the FIFO It pops the Data Request Command packets in sync with the RAIL RX FIFO so that the packets are correctly matched It discards the packets which could be inserted to the FIFO without passing the CRC check The FIFO size is set to entries which should be the maximum that RAIL can hold in its internal metadata FIFO see Note I think this method with some modifications could be compatible with the Thread Enhanced Frame Pending feature Without this PR empty data packets With this PR no empty data packets andrasbirosilabs please review If you have a better idea on how to uniquely identify the packets please let me know you are the RAIL expert Thanks This PR adds the possibility of specifying permessage transmission parameters to CoAP requestsresponses See sjlongland jwhui please review When everything is ok Ill try to update Secure CoAP Thanks In openthread stack by default child supervision is disabled So how or when does mtd reattach process is enabled in case child supervison is disabled SED sends one data point every seconds if it is connected and increments the counter but if it is detached or disabled it does nothing Polling period is of seconds and child timeout is seconds I am facing the issue that SED dont send data for sometime but when it again starts sending data its counter is continuous So what does it mean to be in connected state for a SED Fixes Add a new OPENTHREADCONFIGENABLEBUILTINMBEDTLSMANAGEMENT flag to configure builtin mbedtls bufferdebug management separately from the existing flag which configures the inclusion of the builtin mbedtls library in the build This adjusts the conditional compilation sections added in to use the new config flag so that it may be controlled separately from the existing flag The default behavior should remain unchanged if enablebuiltinmbedtlsyes is used then builtin mbedtls management is enabled by default and if enablebuiltinmbedtlsno is used then builtin mbedtls management is disabled by default Lately an issue with Service ALOCs was found and fixed Currently we observe second part of the same problem A child service registers its RLOC in the Leader and it is added to the list but all old RLOCs are not removed As a result we have server node but multiple Server TLV d RLOC entries in the network data mostly pointing to some old RLOCs During ALOC routing some routers route packet to a valid RLOC but some pick an invalid one and packets are lost Im missing something or specification is not addressing this problem too