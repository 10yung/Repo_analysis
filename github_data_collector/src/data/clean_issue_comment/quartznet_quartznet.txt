 For feature requests just clear out the below Version xyz Quartz Expected behavior I have several jobs what i want to fire manually with the scheduler Actual behavior If i call the schedulerStart it will fire all of my registered jobs I try to pauseAll or not to call the Start method and trigger the jobs with the triggerJobJobkey but when i call this nothing happened Steps to reproduce I have a quartzHostedService in my aspnet core application and it runs when i start my app This is the hosted service start method where i create the scheduler and registered all of my jobs public async Task StartAsyncCancellationToken cancellationToken await SchedulerControllerInitializeSchedulerschedulerFactory jobFactory foreach var jobSchedule in jobSchedules var job CreateJobjobSchedule var trigger CreateTriggerjobSchedule SchedulerControllerJobDetailsAddjob await SchedulerControllerSchedulerScheduleJobjob trigger cancellationToken await SchedulerControllerSchedulerStart var jobDetail SchedulerControllerJobDetailsFirstOrDefaultkey keyDescription xyJob await SchedulerControllerSchedulerPauseAllcancellationToken await SchedulerControllerSchedulerTriggerJobjobDetailKey private static IJobDetail CreateJobJobSchedule schedule var jobType scheduleJobType return JobBuilder CreatejobType WithIdentityjobTypeFullName WithDescriptionjobTypeName UsingJobDataNamejobTypeName StoreDurablytrue Build private static ITrigger CreateTriggerJobSchedule schedule return TriggerBuilder Create WithIdentityscheduleJobTypeFullNametrigger WithCronSchedulescheduleCronExpression WithDescriptionscheduleCronExpression Build This is my schedularController class public static class SchedulerController public static IScheduler Scheduler get set public static ListIJobDetail JobDetails get set public static ListITrigger Triggers get set public static async Task InitializeSchedulerISchedulerFactory schedulerFactory IJobFactory jobFactory Scheduler await schedulerFactoryGetScheduler JobDetails new ListIJobDetail Triggers new ListITrigger SchedulerJobFactory jobFactory I create my jobs in the startupcs public void ConfigureServicesIServiceCollection services Add quartz services servicesAddSingletonIJobFactory SingletonJobFactory servicesAddSingletonISchedulerFactory StdSchedulerFactory Add our job servicesAddSingletonxyJob servicesAddSingletonnew JobSchedule jobType typeofxyJob cronExpression When will the RavenDB job store implementation be ready The QuartzNET Version Migration Guide states that binary serialization is not supported when targeting NET Core We are migrating our application from NET Framework to NET Core and so far we have used binary as our serialization format Is there an official guide on how to transition from binary to json Do we have to manually convert the tables columns from varbinary to varchar and if so which ones and how Here is our current configuration csharp new NameValueCollection quartzjobStoretype QuartzImplAdoJobStoreJobStoreTX Quartz quartzserializertype binary quartzjobStoredataSource myDS quartzdataSourcemyDSconnectionString xxxx quartzdataSourcemyDSprovider SqlServer quartzschedulerinstanceName xxxx scheduler Join this repository to net foundation will gain visibility Quartz Version used Expected behavior What did you expect to happen Or what used to happen in an older version In one of our applications we have used QUARTZnet where few jobs misfire instruction has been configured as WithMisfireHandlingInstructionIgnoreMisfires means it execute misfire event whatever events were missed and accordingly set Next and Prev fire time when misfire execution completes and StartTime remain same when the firsttime these jobs was started Actual behavior What happened instead Sometimes we found few of these jobs STARTTIME get updated while quartz service is running Is this suspicious or expected in any of the conditions if this is expected then possible that misfire will get lost Steps to reproduce There are no fixed steps to reproduce these scenarios as it happens intermittently It would be great if we know the cause or this is expected behavior csharp scheduler and job configuration SystemTime prefereably set to fixed point properties quartzschedulerinstanceName TestScheduler properties quartzschedulerinstanceId AUTO properties quartzthreadPooltype QuartzSimplSimpleThreadPool Quartz properties quartzthreadPoolthreadCount properties quartzschedulerbatchTriggerAcquisitionMaxCount properties quartzjobStoreuseProperties true properties quartzjobStoreclustered true properties quartzjobStoremisfireThreshold properties quartzjobStoretype QuartzImplAdoJobStoreJobStoreTX Quartz properties quartzjobStoretablePrefix QRTZ properties quartzjobStoredriverDelegateType QuartzImplAdoJobStoreSqlServerDelegate Quartz properties quartzjobStoredataSource default properties quartzdataSourcedefaultconnectionString servertestdatabasewindowsnetdatabaseQuartzDatabasepersist security infoTrueuser idtestpasswordMax Pool Size PoolingTrueConnect Timeout ConnectRetryCount ConnectRetryInterval properties quartzdataSourcedefaultprovider SqlServer properties quartzjobStoreacquireTriggersWithinLock true properties quartzserializertype binary For feature requests just clear out the below The jobs should be handled gracefully and misfired should be triggered for them When we perform the swap it happens that scheduler was down and on restart the misfired are ignored as well as start time is reset to latest one We have enabled the useproperties to true misfire to excute each missed iteration and RequesryRecovery is also on I am receiving the following error while I try to call a controller on my project which uses oWin and QuartzNet with Autofac Version xyz Include the majorminor version etc Expected behavior Expected it to run without any issues Actual behavior Getting exception Steps to reproduce csharp var schedulerConfig new NameValueCollection quartzserializertype json quartzschedulerinstanceName Main Quartz Job Scheduler quartzschedulerinstanceId QuartzAdmin containerBuilderRegisterModulenew QuartzAutofacFactoryModule ConfigurationProvider c schedulerConfig Message An error has occurred ExceptionMessage An error occurred when trying to create a controller of type QuartzController Make sure that the controller has a parameterless public constructor ExceptionType SystemInvalidOperationException StackTrace at SystemWebHttpDispatcherDefaultHttpControllerActivatorCreateHttpRequestMessage request HttpControllerDescriptor controllerDescriptor Type controllerType r n at SystemWebHttpDispatcherHttpControllerDispatcherSendAsyncd MoveNext InnerException Message An error has occurred ExceptionMessage An exception was thrown while activating ChatechQuartzOwinControllersQuartzController ChatechQuartzOwinApplicationJobInformationJobInformationService QuartzIScheduler ExceptionType AutofacCoreDependencyResolutionException StackTrace at AutofacCoreResolvingInstanceLookupActivateIEnumerable parameters Object decoratorTarget in C projects autofac src Autofac Core Resolving InstanceLookupcsline r n at AutofacCoreResolvingInstanceLookupExecute in C projects autofac src Autofac Core Resolving InstanceLookupcsline r n at AutofacCoreResolvingResolveOperationGetOrCreateInstanceISharingLifetimeScope currentOperationScope IComponentRegistration registration IEnumerable parameters in C projects autofac src Autofac Core Resolving ResolveOperationcsline r n at AutofacCoreResolvingResolveOperationExecuteIComponentRegistration registration IEnumerable parameters in C projects autofac src Autofac Core Resolving ResolveOperationcsline r n at AutofacResolutionExtensionsTryResolveServiceIComponentContext context Service service IEnumerable parameters Object instance in C projects autofac src Autofac ResolutionExtensionscsline r n at AutofacResolutionExtensionsResolveOptionalServiceIComponentContext context Service service IEnumerable parameters in C projects autofac src Autofac ResolutionExtensionscsline r n at AutofacIntegrationWebApiAutofacWebApiDependencyScopeGetServiceType serviceType r n at SystemWebHttpDispatcherDefaultHttpControllerActivatorGetInstanceOrActivatorHttpRequestMessage request Type controllerType Func activator r n at SystemWebHttpDispatcherDefaultHttpControllerActivatorCreateHttpRequestMessage request HttpControllerDescriptor controllerDescriptor Type controllerType InnerException Message An error has occurred ExceptionMessage Object serializer type QuartzSimplJsonObjectSerializer QuartzSerializationJson could not be instantiated ExceptionType QuartzSchedulerException StackTrace at QuartzImplStdSchedulerFactoryInstantiated MoveNext in C projects quartznet src Quartz Impl StdSchedulerFactorycsline r n End of stack trace from previous location where exception was thrown r n at SystemRuntimeExceptionServicesExceptionDispatchInfoThrow r n at SystemRuntimeCompilerServicesTaskAwaiterHandleNonSuccessAndDebuggerNotificationTask task r n at QuartzImplStdSchedulerFactoryGetSchedulerd MoveNext in C projects quartznet src Quartz Impl StdSchedulerFactorycsline r n End of stack trace from previous location where exception was thrown r n at SystemRuntimeExceptionServicesExceptionDispatchInfoThrow r n at SystemRuntimeCompilerServicesTaskAwaiterHandleNonSuccessAndDebuggerNotificationTask task r n at AutofacExtrasQuartzQuartzAutofacFactoryModulecLoadb IComponentContext c in C work autofacextrasquartz src AutofacExtrasQuartz QuartzAutofacFactoryModulecsline r n at AutofacBuilderRegistrationBuildercDisplayClass ForDelegateb IComponentContext c IEnumerable p in C projects autofac src Autofac Builder RegistrationBuildercsline r n at AutofacCoreActivatorsDelegateDelegateActivatorActivateInstanceIComponentContext context IEnumerable parameters in C projects autofac src Autofac Core Activators Delegate DelegateActivatorcsline r n at AutofacCoreResolvingInstanceLookupActivateIEnumerable parameters Object decoratorTarget in C projects autofac src Autofac Core Resolving InstanceLookupcsline InnerException Message An error has occurred ExceptionMessage Could not load type QuartzSimplJsonObjectSerializer QuartzSerializationJson ExceptionType SystemTypeLoadException StackTrace at QuartzSimplSimpleTypeLoadHelperLoadTypeString name in C projects quartznet src Quartz Simpl SimpleTypeLoadHelpercsline r n at QuartzImplStdSchedulerFactoryInstantiated MoveNext in C projects quartznet src Quartz Impl StdSchedulerFactorycsline netcore Programcs public static void Mainstring args BuildWebHostargsRun public static IWebHost BuildWebHoststring args return WebHostCreateDefaultBuilderargs UseUrlsMyWebConfigTimedScanUrl UseStartupStartup ConfigureLogginghostContext configLogging configLoggingAddConsole Build Startupcs public StartupIConfiguration configuration ILoggerFactory factory IHostingEnvironment env EnvironmentName envEnvironmentName Configuration configuration var builder new ConfigurationBuilder SetBasePathenvContentRootPath AddJsonFileappsettingsjson optional true reloadOnChange true AddJsonFileappsettingsenvEnvironmentNamejson optional true AddEnvironmentVariables Configuration builderBuild public IConfiguration Configuration get public string EnvironmentName get private void ConfigureQuartzIServiceCollection services params Type jobs servicesAddSingletonIJobFactory JobFactory foreach ServiceDescriptor serviceDescriptor in jobsSelectjobType new ServiceDescriptorjobType jobType ServiceLifetimeSingleton servicesAddserviceDescriptor servicesAddSingletonprovider var schedulerFactory new StdSchedulerFactory var scheduler schedulerFactoryGetSchedulerResult schedulerJobFactory providerGetServiceIJobFactory schedulerStart return scheduler protected void ConfigureJobsIocIServiceCollection services var types new Type typeofTestJob ConfigureQuartzservices types public void ConfigureServicesIServiceCollection services servicesAddLogging servicesAddHttpContextAccessor servicesAddSingletonIActionContextAccessor ActionContextAccessor ConfigureJobsIocservices servicesAddHttpContextAccessor protected void StartJobsIApplicationBuilder app IApplicationLifetime lifetime var scheduler appApplicationServicesGetServiceIScheduler TODO use some config QuartzServicesUtilitiesStartJobTestJobscheduler TestJobTriggerCron lifetimeApplicationStartedRegister schedulerStart lifetimeApplicationStoppingRegister schedulerShutdown public void ConfigureIApplicationBuilder app IWebHostEnvironment env ILoggerFactory loggerFactory IApplicationLifetime lifetime StartJobsapp lifetime appBuild JobFactorycs public class JobFactory IJobFactory private readonly IServiceProvider serviceProvider public JobFactoryIServiceProvider serviceProvider serviceProvider serviceProvider public IJob NewJobTriggerFiredBundle bundle IScheduler scheduler var job serviceProviderGetServicebundleJobDetailJobType as IJob return job public void ReturnJobIJob job QuartzServicecs public class QuartzService IHostedService private readonly ILogger logger private readonly IScheduler scheduler public QuartzServiceILoggerQuartzService logger IScheduler scheduler logger logger scheduler scheduler public async Task StartAsyncCancellationToken cancellationToken loggerLogInformation Quartz await schedulerStartcancellationToken public async Task StopAsyncCancellationToken cancellationToken loggerLogInformation Quartz await schedulerShutdowncancellationToken TestJobcs public class NotifyJob IJob public static string TriggerCron MONFRI private readonly ILogger logger public NotifyJobILoggerNotifyJob logger logger logger public Task ExecuteIJobExecutionContext context loggerLogInformationstringFormatSystemReflectionMethodBaseGetCurrentMethodDeclaringTypeFullName DateTimeNowyyyyMMdd hhmmssffffff DateTimeNow do some thing send me a message return TaskCompletedTask Compile and generate an exe file When you doubleclick the runtime you can execute and send me a message but when you use ProcessStart to execute the exe file you cant send me a message For feature requests just clear out the below Version xyz Quartz Version UnityAbstractions Version UnityContainer Version Expected behavior To get an instance of ServiceHost Actual behavior A stackoverflow exception Steps to reproduce csharp class Program static void Mainstring args RunProgramGetAwaiterGetResult private static async Task RunProgram var container new UnityContainer containerRegisterSingletonISchedulerFactory QuartzImplStdSchedulerFactory containerRegisterSingletonIServiceHostServiceHost var serviceHost containerResolveIServiceHost await serviceHostStart ConsoleRead public class Download IJob public Task ExecuteIJobExecutionContext context return TaskRun ConsoleWriteLineDownloading public class ServiceHost IServiceHost public ISchedulerFactory SchedulerFactory get set public ServiceHostISchedulerFactory schedulerFactory SchedulerFactory schedulerFactory public async Task Start For feature requests just clear out the below Version Include the majorminor version etc Expected behavior The scheduler should never goes into situation where jobs are stopped triggerring new instances without raising any exception Actual behavior We have any the quartz in production from last years but in last one year we are frequently getting situation where jobs went in Error State NextFireTime is less than current time and job stopped all the jobs stopped processing and LASTCHECKINTIME was very old Jobs stuck in acquired state Steps to reproduce There are no fixed steps to reproduce these scenarios as it happens intermittently Please let us know how we can improve the reliability of Quartz Scheduler 