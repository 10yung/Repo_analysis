Since we are playing around with apartment and after reading following blog entry Currently the Apartment gem uses the rails schemarb for generating new tenants This is a mistake This file changes locally when running migrations but it represents exactly what that developer has in their local database If a feature branch for example has experimental database columns added those can end up sneaking out to production if you inadvertently commit the schemarb changes to your mainline development branch I wanted to ask if there is a way to just run the normal migrations instead of executing schemarb or import via sqlpgdump I know its maybe not best practice but our deployment is based on working migrations and it would fit nicely to our workflow If there is no possibility right now I would maybe spend some time to create a PR for this I am getting an error when I am trying to bundle exec rails generate apartmentinstall Getting this error build undefined method new for ApartmentReloaderString NoMethodError Looks this is a middleware issue Any solution My stack overflow question Steps to reproduce Set up a domain with google connected it with heroku and added wildcard domains Made a new rails project and set up apartment using subdomain elevator Added WWW to excluded domains Expected behavior wwwtenant examplecom would take me to the tenant tenant Actual behavior wwwtenant examplecom takes me to the public domain System configuration Please let us know as far as you can Database Tell us what database and its version you use pg Apartment version the developmental version for rails Apartment config in configinitializersapartmentrb or so You can have Apartment route to the appropriate Tenant by adding some Rack middleware Apartment can support many different Elevators that can take care of this routing to your data Require whichever Elevator youre using below or none if you have a custom one require apartmentelevatorsgeneric require apartmentelevatorsdomain require apartmentelevatorssubdomain require apartmentelevatorsfirstsubdomain require apartmentelevatorshost Apartment Configuration Apartmentconfigure do config ApartmentElevatorsSubdomainexcludedsubdomains www Add any models that you do not want to be multitenanted but remain in the global public namespace A typical example would be a Customer or Tenant model that stores each Tenants information configexcludedmodels w User In order to migrate all of your Tenants you need to provide a list of Tenant names to Apartment You can make this dynamic by providing a Proc object to be called on migrations This object should yield either an array of strings representing each Tenant name a hash which keys are tenant names and values custom db config must contain all keyvalues required in databaseyml configtenantnames lambda Customerplucktenantname configtenantnames tenant tenant configtenantnames tenant adapter postgresql host someserver port database postgres this is not the name of the tenants db but the name of the database to connect to before creating the tenants db mandatory in postgresql tenant adapter postgresql database postgres this is not the name of the tenants db but the name of the database to connect to before creating the tenants db mandatory in postgresql configtenantnames lambda do Tenantalleachwithobject do tenant hash hash tenantname tenantdbconfiguration end end configtenantnames lambda Userpluck subdomain PostgreSQL Specifies whether to use PostgreSQL schemas or create a new database per Tenant MySQL Specifies whether to switch databases by using use statement or reestablish connection The default behaviour is true configuseschemas true PostgreSQL only options Apartment can be forced to use raw SQL dumps instead of schemarb for creating new schemas Use this when you are using some extra features in PostgreSQL that cant be represented in schemarb like materialized views etc only applies with useschemas set to true Note this option doesnt use dbstructuresql it creates SQL dump by executing pgdump configusesql false There are cases where you might want some schemas to always be in your searchpath eg when using a PostgreSQL extension like hstore Any schemas added here will be available along with your selected Tenant configpersistentschemas w hstore PostgreSQL only options By default and only when not using PostgreSQL schemas Apartment will prepend the environment to the tenant name to ensure there is no conflict between your environments This is mainly for the benefit of your development and test environments Uncomment the line below if you want to disable this behaviour in production configprependenvironment Railsenvproduction When using PostgreSQL schemas the database dump will be namespaced and apartment will substitute the default namespace usually public with the name of the new tenant when creating a new tenant Some items must maintain a reference to the default namespace ie public for instance a default uuid generation Uncomment the line below to create a list of namespaced items in the schema dump that should not have their namespace replaced by the new tenant configpgexcludednames uuidgeneratev end Setup a custom Tenant switching middleware The Proc should return the name of the Tenant that you want to switch to Railsapplicationconfigmiddlewareuse ApartmentElevatorsGeneric lambda request requesthostsplitfirst Railsapplicationconfigmiddlewareuse ApartmentElevatorsDomain Railsapplicationconfigmiddlewareuse ApartmentElevatorsSubdomain Railsapplicationconfigmiddlewareuse ApartmentElevatorsFirstSubdomain Railsapplicationconfigmiddlewareuse ApartmentElevatorsHost useschemas true or false I think soHonestly Im a noob Rails or ActiveRecord version Ruby version Steps to reproduce Create a User model Create a UserStuff model Exclude User model Expected behavior User model is excluded but UserStuff is not Actual behavior User and UserStuff models are excluded resulting in UserStuff being publicly scoped However models not namespaced under any of the excluded model names work as expected so fairly sure this its accepting anything under the User namespace as being part of the user model Im likely going to end up having to change the namespace those models are under but figured Id report the issue in case there is a quick fix Im missing Thankfully the app isnt actually in production yet so rebuilding the database isnt a major issue but would be nice to avoid it System configuration AWS Cloud Ubuntu Please let us know as far as you can Database Tell us what database and its version you use Postgres Apartment version gem list grep apartment apartment Apartment config in configinitializersapartmentrb or so Apartment initializer frozenstringliteral true require apartmentelevatorsgeneric Apartmentconfigure do config configexcludedmodels Tenant User configtenantnames Tenantpluck tenantname end Railsapplicationconfigmiddlewareuse ApartmentElevatorsCustom Original configuration was a bit more complicated as it was using UUIDs for a while then decided to move away from them in favor of friendly IDs thought that was the issue but it looks like it wasnt useschemas true or false Postgres so yes I believe Rails or ActiveRecord version Rails Ruby version ruby I have a model in my application named Apartment which is obviously creating a conflict For example when I have Apartmentallcount in my code I get this error undefined method all for ApartmentModule Is there some way to rename the Apartment gem or place it in its own namespace The app Im working on is a legacy app and the Apartment model is used in too many places for a renaming of that model to work How to get requestheaders info in apartment library In Rails app configinitializersapartmentrb I want to fetch requestheaders info which I request from browser or other devices Please share the idea its bit urgent Steps to reproduce ApartmentTenantswitchdomaincom do Contentall end Expected behavior Show content from expected schema Actual behavior Show content from public schema System configuration Please let us know as far as you can Database Tell us what database and its version you use Postgresql Apartment version Apartment config in configinitializersapartmentrb or so You can have Apartment route to the appropriate Tenant by adding some Rack middleware Apartment can support many different Elevators that can take care of this routing to your data Require whichever Elevator youre using below or none if you have a custom one require apartmentelevatorsgeneric require apartmentelevatorsdomain require apartmentelevatorssubdomain require apartmentelevatorsfirstsubdomain require apartmentelevatorshost Apartment Configuration Apartmentconfigure do config Add any models that you do not want to be multitenanted but remain in the global public namespace A typical example would be a Customer or Tenant model that stores each Tenants information configexcludedmodels w JwtBlacklist Organization OrganizationsUser Profile Role User In order to migrate all of your Tenants you need to provide a list of Tenant names to Apartment You can make this dynamic by providing a Proc object to be called on migrations This object should yield either an array of strings representing each Tenant name a hash which keys are tenant names and values custom db config must contain all keyvalues required in databaseyml configtenantnames lambda Customerplucktenantname configtenantnames tenant tenant configtenantnames tenant adapter postgresql host someserver port database postgres this is not the name of the tenants db but the name of the database to connect to before creating the tenants db mandatory in postgresql tenant adapter postgresql database postgres this is not the name of the tenants db but the name of the database to connect to before creating the tenants db mandatory in postgresql configtenantnames lambda do Tenantalleachwithobject do tenant hash hash tenantname tenantdbconfiguration end end configtenantnames lambda Organizationpluck domain PostgreSQL Specifies whether to use PostgreSQL schemas or create a new database per Tenant MySQL Specifies whether to switch databases by using use statement or reestablish connection The default behaviour is true configuseschemas true PostgreSQL only options Apartment can be forced to use raw SQL dumps instead of schemarb for creating new schemas Use this when you are using some extra features in PostgreSQL that cant be represented in schemarb like materialized views etc only applies with useschemas set to true Note this option doesnt use dbstructuresql it creates SQL dump by executing pgdump configusesql false There are cases where you might want some schemas to always be in your searchpath eg when using a PostgreSQL extension like hstore Any schemas added here will be available along with your selected Tenant configpersistentschemas w hstore PostgreSQL only options By default and only when not using PostgreSQL schemas Apartment will prepend the environment to the tenant name to ensure there is no conflict between your environments This is mainly for the benefit of your development and test environments Uncomment the line below if you want to disable this behaviour in production configprependenvironment Railsenvproduction When using PostgreSQL schemas the database dump will be namespaced and apartment will substitute the default namespace usually public with the name of the new tenant when creating a new tenant Some items must maintain a reference to the default namespace ie public for instance a default uuid generation Uncomment the line below to create a list of namespaced items in the schema dump that should not have their namespace replaced by the new tenant configpgexcludednames uuidgeneratev end Setup a custom Tenant switching middleware The Proc should return the name of the Tenant that you want to switch to Railsapplicationconfigmiddlewareuse ApartmentElevatorsGeneric lambda request requesthostsplitfirst Railsapplicationconfigmiddlewareuse ApartmentElevatorsDomain Railsapplicationconfigmiddlewareuse ApartmentElevatorsSubdomain Railsapplicationconfigmiddlewareuse ApartmentElevatorsFirstSubdomain Railsapplicationconfigmiddlewareuse ApartmentElevatorsHost useschemas true Rails or ActiveRecord version Ruby version Additional Info If im using switch it works perfectly Using Switch ApartmentTenantswitchdomaincom Contentall Content Load ms SELECT contents FROM contents LIMIT LIMIT ActiveRecordRelation Using Switch ApartmentTenantswitchdomaincom nil Contentall Content Load ms SELECT contents FROM contents LIMIT LIMIT ActiveRecordRelation Content id path test name test description nil published false active true userid nil createdat updatedat If im using switch block with Contentallload it works perfectly ApartmentTenantswitchdomaincom Contentallload Content Load ms SELECT contents FROM contents ActiveRecordRelation Content id path test name test description nil published false active true userid nil createdat updatedat I think its similiar with issue Steps to reproduce rails appupdate manually update rails gem from to in Gemfile bundle update Expected behavior Supposedly rails will start as usual Actual behavior Usersahmadyakobbinabaidullahasdfinstallsruby librubygems gemsactionpack libactiondispatchmiddlewarestackrb in build undefined method new for ApartmentReloaderString NoMethodError Did you mean next System configuration default default adapter postgresql encoding unicode For details on connection pooling see rails configuration guide pool ENVfetchRAILSMAXTHREADS pool connecttimeout readtimeout Please let us know as far as you can Database Tell us what database and its version you use psql PostgreSQL Apartment version apartment Apartment config in configinitializersapartmentrb or so nothing yet useschemas true or false nothing yet Rails or ActiveRecord version Rails Ruby version ruby p revision x darwin Happy to do the work on this if its a desirable feature but not if its unlikely to get merged I need to run some reporting over all tenants A feature that might make this easier would be to generate a view which produces a view like select tenantone as tenant from tenantonetablename UNION select tenanttwo as tenant from tenanttwotablename UNION If I can get my tenants to all share one sequence for ID generation the tenant column probably isnt needed The goal would be to automatically update each of these views whenever either the schema or the list of tenants are modified so you can always query alltenantstablename to see unified data 