For months Ive been searching for a way how to emit whisper events from the client side As we all know in socketio we can listen to emit events but Im missing this feature in laravelecho Here are the changes I made I added the PresenceChannelWhisper publish event to listen to all whisper broadcast client events on the server side Have redis publishing an optional feature Just like adding the publishPresence key I added publishWhisper key to check for whisper events Broadcasting not working with v I had to reverted back to laravelframework v Added Added Illuminate Database Eloquent BuilderfirstWhere method Redis Broadcaster Broadcast to multiple channels at once Im trying to connect to my webserver via laravel echo but got the following response socketioInvalid namespace Im using the following configuration location socketio proxypass proxyhttpversion proxysetheader Upgrade httpupgrade proxysetheader Connection Upgrade And laravel echo configuration windowio requiresocketioclient windowEcho new Echo broadcaster socketio host auth headers Authorization Bearer some token here windowEchojoinchanneljoininguser consolelogjoining leavinguser consolelogleaving Every few minutes a warning appears node DEP DeprecationWarning Unhandled promise rejections are deprecated In the future promise rejections that are not handled will terminate the Nodejs process with a nonzero exit code node UnhandledPromiseRejectionWarning Unhandled promise rejection This error originated either by throwing inside of an async function without a catch block or by rejecting a promise which was not handled with catch rejection id at usrlibnodemoduleslaravelechoserverdistchannelspresencechanneljs at Arrayfilter anonymous at usrlibnodemoduleslaravelechoserverdistchannelspresencechanneljs node UnhandledPromiseRejectionWarning TypeError Cannot read property socketId of undefined I am using presence channels This is what I found here in line PresenceChannelprototypeleave function socket channel var this this thisgetMemberschannelthenfunction members members members var member membersfindfunction member return membersocketId socketid members membersfilterfunction m return msocketId membersocketId thisdbsetchannel members members thisisMemberchannel memberthenfunction ismember if ismember delete membersocketId thisonLeavechannel member function error return log Logerrorerror Seems like member is undefined There is also another warning node UnhandledPromiseRejectionWarning Unhandled promise rejection This error originated either by throwing inside of an async function without a catch block or by rejecting a promise which was not handled with catch rejection id at usrlibnodemoduleslaravelechoserverdistchannelspresencechanneljs at PresenceChannelonJoin usrlibnodemoduleslaravelechoserverdistchannelspresencechanneljs node UnhandledPromiseRejectionWarning TypeError Cannot read property broadcast of undefined This is exactly this line PresenceChannelprototypeonJoin function socket channel member thisio sockets connected socketid broadcast tochannel emitpresencejoining channel member connected socketid is undefined After renaming project via command php artisan appname Poker listening channels not working windowEchochannelchat listenMessage message consolelogmessage thismessagespushmessage After renaming project into default App Laravel name nice working again php artisan appname App How fix this issue Thanks hello when I run laravelechoserver init it stuck here What do you want this config to be saved as laravelechoserverjson Even I ctrl c it doesnt do anything still stuck here I am coming across an issue in Ubuntu server configurationThe server is running but not able to authenticate the userI am using laravel and auth session is in database session table The error is as following AM Preparing authentication request to AM Sending auth request to AM tuwKsGTb P Qxdb AAAA could not be authenticated to privateAppUser DOCTYPE html html langen head meta charsetutf titleErrortitle head body preCannot POST laravelapppublicbroadcastingauthpre body html Client can not be authenticated got HTTP status AM Preparing authentication request to AM Sending auth request to AM hHWOd R Xq xr CAAAB could not be authenticated to privateAppUserxyz DOCTYPE html html langen head meta charsetutf titleErrortitle head body preCannot POST laravelapppublicbroadcastingauthpre body html Client can not be authenticated got HTTP status laravelechoserverjs authHost authEndpoint broadcastingauth clients appId c e adf key c f fc bb b b ccc b database redis databaseConfig redis sqlite databasePath databaselaravelechoserversqlite devMode true host null port protocol http socketio secureOptions sslCertPath sslKeyPath sslCertChainPath sslPassphrase subscribers http true redis true apiOriginAllow allowCors true allowOrigin allowMethods GET allowHeaders Origin ContentType XAuthToken XRequestedWith Accept Authorization XCSRFTOKEN XSocketId With out ssl apache configuration file is VirtualHost ServerName xyzabcdomaincom ProxyPreserveHost On ProxyPass socketio ProxyPassReverse socketio VirtualHost Echo Configuration Bootstrapejs windowEcho new Echo broadcaster socketio host host windowlocationhostname host windowlocationhostname Let us know if you need any further details Im working on dockercomposeyml which deploys a Laravel project and its ecosystem Almost everything works as I wish except the websocket server laravelechoserver It is proxied through my Nginx container on same port than HTTPS When I run Docker Compose laravelechoserver prints ready so I hope it suceeded to connect to Redis container but it does not receive any event broadcasted by Laravel app to Redis I expect the problem being a wrong IP because of containers or a namespace but didnt succeed to find out yml version services app image laravelapp containername laravelapp dependson database cache queue scheduler volumes varwwwhtml appconfigdatavarwwwconfig environment CONTAINERROLE app restart onfailure scheduler image laravelapp containername laravelscheduler dependson cache volumes varwwwhtml appconfigdatavarwwwconfig environment CONTAINERROLE scheduler restart onfailure queue image laravelapp containername laravelqueue dependson cache volumes varwwwhtml appconfigdatavarwwwconfig environment CONTAINERROLE queue restart onfailure web containername nginxserver build context dockerfile dockernginxserverdockerfile args servername SERVERNAMElocalhost serverport SERVERPORT fpmservice app fpmport FPMPORT wsendpoint WSENDPOINTsocketio dependson app volumes varwwwhtmlro storagelogsnginxvarlognginx ports HTTPPORT HTTPSPORT restart onfailure database containername mariadatabase image mariadb volumes dbdatavarlibmysql environment MYSQLROOTPASSWORD DBROOTPASSWORD MYSQLDATABASE DBDATABASE MYSQLUSER DBUSERNAME MYSQLPASSWORD DBPASSWORD restart onfailure cache containername redisserver image redis alpine command redisserver requirepass REDISPASSWORD volumes cachedatadata restart onfailure websocket containername laravelechoserver build context dockerfile dockerlaravelechoserverdockerfile args appurl webHTTPPORT echoredishost REDISHOST echoredisport REDISPORT echoredispassword REDISPASSWORD dependson app cache restart onfailure volumes dbdata cachedata appconfigdata laravelechoserverjson authHost web authEndpoint broadcastingauth clients database redis databaseConfig redis host cache port password devMode false host null port protocol http socketio sslCertPath sslKeyPath sslCertChainPath sslPassphrase apiOriginAllow allowCors true allowOrigin allowMethods GET POST allowHeaders Origin ContentType XAuthToken XRequestedWith Accept Authorization XCSRFTOKEN XSocketId Nginx vhost server listen servername localhost root varwwwhtmlpublic errorlog varlognginxerrorlog error accesslog varlognginxaccesslog main addheader XFrameOptions SAMEORIGIN addheader XXSSProtection modeblock addheader XContentTypeOptions nosniff index indexphp charset utf location tryfiles uri uri indexphpquerystring location socketio proxypass proxyhttpversion proxysetheader Upgrade httpupgrade proxysetheader Connection Upgrade location faviconico accesslog off lognotfound off location robotstxt accesslog off lognotfound off errorpage indexphp location php tryfiles uri indexphp tryfiles uri fastcgisplitpathinfo php fastcgipass app fastcgiindex indexphp fastcgiparam SCRIPTFILENAME documentrootfastcgiscriptname include fastcgiparams location wellknown deny all Laravel Echo setup js const echo new Echo broadcaster socketio host windowlocationhost auth headers echochanneltestlistenTestMessage function event consolelogevent Laravel event example php php namespace App Events use Illuminate Broadcasting Channel use Illuminate Broadcasting InteractsWithSockets use Illuminate Broadcasting PresenceChannel use Illuminate Broadcasting PrivateChannel use Illuminate Contracts Broadcasting ShouldBroadcast use Illuminate Queue SerializesModels class TestMessage implements ShouldBroadcast use SerializesModels InteractsWithSockets public message Create a new event instance return void public function constructstring message thismessage message Get the channels the event should broadcast on return Channelarray public function broadcastOn return new Channeltest And when I broadcast this event I get laravelqueue xqmWLUoAZXVGlaNgfHIP k qK zdZPj Processing App Events TestMessage laravelqueue xqmWLUoAZXVGlaNgfHIP k qK zdZPj Processed App Events TestMessage but nothing appears in my browser console Maybe someone will find the problem among my config if necessary I can share dockerfiles and bash scripts to setup the whole project Thanks in advance Is there any way to trigger an event listener registered in the event provider of my Laravel app using this server