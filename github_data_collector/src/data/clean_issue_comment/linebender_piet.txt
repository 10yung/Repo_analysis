This is related to and exposes currenttransform and required for My environment Windows SP build x rustc ea nVidia GTX The tests fail with both stablex pcwindowsmsvc and stablex pcwindowsgnu These two tests fail in pietdirect d test testtesthittestpointcomplex FAILED test testtesthittesttextpositioncomplex FAILED testtesthittestpointcomplex stdout text pos SomeHitTestTextPosition point metrics HitTestMetrics textposition text pos SomeHitTestTextPosition point metrics HitTestMetrics textposition text pos SomeHitTestTextPosition point metrics HitTestMetrics textposition text pos SomeHitTestTextPosition point metrics HitTestMetrics textposition thread testtesthittestpointcomplex panicked at assertion failed left right left right pietdirect d src librs testtesthittesttextpositioncomplex stdout thread testtesthittesttextpositioncomplex panicked at assertion failed x max x min pietdirect d src librs pietweb also has a bunch of test failures Chrome bit fails these three testhittestpointbasic pietwebexamplejs text pos SomeHitTestTextPosition point metrics HitTestMetrics textposition pietwebexamplejs text pos SomeHitTestTextPosition point metrics HitTestMetrics textposition RuntimeError unreachable at ruststartpanic wasmfunction x ab at rustpanic wasmfunction x a a at stdpanickingrustpanicwithhookh e c dc ae d wasmfunction x f at stdpanickingcontinuepanicfmthb b e b fe ab wasmfunction x at stdpanickingbeginpanicfmth d d wasmfunction x at pietwebexampletesttesthittestpointbasic h a a ce a e wasmfunction x af at run wasmfunction xd ac at Modulerun webpackdistpietwebexamplejs at eval webpackindexjs testhittestpointbasic RuntimeError unreachable at ruststartpanic wasmfunction x a at rustpanic wasmfunction x d e at stdpanickingrustpanicwithhookh e c dc ae d wasmfunction x eb at stdpanickingcontinuepanicfmthb b e b fe ab wasmfunction x at stdpanickingbeginpanicfmth d d wasmfunction x ea at pietwebexampletesttesthittestpointbasic h aa a wasmfunction xba at run wasmfunction xd d at Modulerun webpackdistpietwebexamplejs at eval webpackindexjs testhittestpointcomplex RuntimeError unreachable at ruststartpanic wasmfunction x a af at rustpanic wasmfunction x afa at stdpanickingrustpanicwithhookh e c dc ae d wasmfunction x c at stdpanickingcontinuepanicfmthb b e b fe ab wasmfunction x cc at stdpanickingbeginpanicfmth d d wasmfunction x f at pietwebexampletesttesthittestpointcomplex hd df f cc ef wasmfunction xcc f at run wasmfunction xd b at Modulerun webpackdistpietwebexamplejs at eval webpackindexjs Firefox bit fails these different three testhittestpointbasic pietwebexamplejs text pos SomeHitTestTextPosition point metrics HitTestMetrics textposition pietwebexamplejs text pos SomeHitTestTextPosition point metrics HitTestMetrics textposition pietwebexamplejs RuntimeError unreachable executed run webpackdistpietwebexamplejs anonymous webpackindexjs testhittestpointcomplex pietwebexamplejs text pos SomeHitTestTextPosition point metrics HitTestMetrics textposition pietwebexamplejs text pos SomeHitTestTextPosition point metrics HitTestMetrics textposition pietwebexamplejs text pos SomeHitTestTextPosition point metrics HitTestMetrics textposition pietwebexamplejs text pos SomeHitTestTextPosition point metrics HitTestMetrics textposition pietwebexamplejs RuntimeError unreachable executed run webpackdistpietwebexamplejs anonymous webpackindexjs testhittestpointcomplex pietwebexamplejs RuntimeError unreachable executed run webpackdistpietwebexamplejs anonymous webpackindexjs Discussion Does anyone have ideas why the tests might be failing hwchen This PR expands the drawimage API call by adding a srcrect parameter The drawing works as before but now it uses the area of the image that is specified This is motivated by an image gallery app Im writing using druid where I need to show different areas of known images for every animation frame Previously this was possible by either having different images in memory or using clip The new API makes it easier and probably more efficient Keeping ergonomics in mind for people who just want to draw the whole image or upgrade to this new API I also wanted it to be easy to do that I tried a few ways of doing this First idea was to use Optionimpl IntoRect but unfortunately this ended up looking less than ideal rust SomeRectnew Subimage None as OptionRect Whole image the compiler demands the type info for None Thus I ended up using just impl IntoRect with a special case Less typing and better errors rust Rectnew Subimage RectZERO Whole image can also be any rect for which area Lightly tested produces output similar to the cairo backend for test images and Attempts to use text and images will produce NotSupported error the unimplemented invocations are all statically unreachable as a result For some reason I couldnt get SVG line elements to display but paths work fine and are more concise anyway WIP for finishing integration of raw d d bindings move d d api into pietdirect d integrate pietcommon with pietdirect d Note on my maching windows in virtualbox the test fails for pietdirect d not sure why TODO text These are fairly important public types and currently undocumented Im sure this is on some font roadmap Im too lazy to look for so feel free to close as a dupe if appropriate When drawing text via RenderCtxdrawtext we supply a position where the text should draw This is an origin in text space that is with at the intersection of the baseline with the left edge Unfortunately theres no way to know where the baseline is relative to the overall height Theres also no real way of getting the overall height afaict although what height means is not well defined I would settle for the union of the bounding boxes of all glyphs in the font Anyway this is more a practical issue than a fontmetaphysics issue It would be nice if we could in the general case draw some text in a box with equal padding on the top and bottom A reasonable first step for this would be exposing general metrics like ascenderdescender Creating a PR to trigger azure to run let me know if theres a way to do this on my fork The eventual goal is to be able to build pietcairo for Windows in CI Line breaking confirm trait methods and basic docs update directwrite update cairo update web