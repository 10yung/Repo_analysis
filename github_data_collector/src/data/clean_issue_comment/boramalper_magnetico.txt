 ERROR error while parsing flags on line format should be USERNAMEBCRYPT HASH instead got I downloaded and tested the magnetico binary and when I ran it I thought my internet went out it turned out that running this application will crash my tdlte outdoor modem I have no idea why and it crashes it fast as in the second I run it the modem gets unresponsive after sec and I have to wait for it to reboot hi lets say i do import infohashes does magneticod will scan them that they have no files or its skipped and only those infohashes which magneticod get have files Fixes Fix dockercompose allow to run magnetico with docker hub images with make docker or reuse fresh images built from make image Adding interface for writeonly type DBs This adds to skobkin Beanstalk engine implementation I just started the docker app and I get no results when searching Am I missing something dockercompose up build ERROR The Compose file dockercomposeyml is invalid because servicesmagneticodbuild contains unsupported option image servicesmagneticowbuild contains unsupported option image Hello I am back on this topic even though it has already been discussed before The current solution to the Write Congestion problem as reported in the README is to iptables I OUTPUT t raw p udp sport PORT j NOTRACK iptables I PREROUTING t raw p udp dport PORT j NOTRACK where PORT is the port set with the indexeraddr parameter By default it is so I guess the command becomes iptables I OUTPUT t raw p udp sport j NOTRACK iptables I PREROUTING t raw p udp dport j NOTRACK this does not work for me I still get the congestion problem So here my first question would be am I using the correct iptables rules Supposing I am I also know that making UDP traffic completely stateless so not specifying any port with iptables I OUTPUT t raw p udp j NOTRACK iptables I PREROUTING t raw p udp j NOTRACK works BUT docker containers are not able anymore to connect to the DNSa simple ping googlecom from the container is not working with those iptables rules My iptables configuration after restarting the server so completely clean with only rules that docker itself sets filter INPUT ACCEPT FORWARD DROP OUTPUT ACCEPT DOCKER DOCKERISOLATIONSTAGE DOCKERISOLATIONSTAGE DOCKERUSER A FORWARD j DOCKERUSER A FORWARD j DOCKERISOLATIONSTAGE A FORWARD o docker m conntrack ctstate RELATEDESTABLISHED j ACCEPT A FORWARD o docker j DOCKER A FORWARD i docker o docker j ACCEPT A FORWARD i docker o docker j ACCEPT A FORWARD o br f a c d m conntrack ctstate RELATEDESTABLISHED j ACCEPT A FORWARD o br f a c d j DOCKER A FORWARD i br f a c d o br f a c d j ACCEPT A FORWARD i br f a c d o br f a c d j ACCEPT A DOCKERISOLATIONSTAGE i docker o docker j DOCKERISOLATIONSTAGE A DOCKERISOLATIONSTAGE i br f a c d o br f a c d j DOCKERISOLATIONSTAGE A DOCKERISOLATIONSTAGE j RETURN A DOCKERISOLATIONSTAGE o docker j DROP A DOCKERISOLATIONSTAGE o br f a c d j DROP A DOCKERISOLATIONSTAGE j RETURN A DOCKERUSER j RETURN COMMIT nat PREROUTING ACCEPT INPUT ACCEPT OUTPUT ACCEPT POSTROUTING ACCEPT DOCKER A PREROUTING m addrtype dsttype LOCAL j DOCKER A OUTPUT d m addrtype dsttype LOCAL j DOCKER A POSTROUTING s o docker j MASQUERADE A POSTROUTING s o br f a c d j MASQUERADE A DOCKER i docker j RETURN A DOCKER i br f a c d j RETURN COMMIT After applying those rules with no port raw PREROUTING ACCEPT OUTPUT ACCEPT A PREROUTING p udp j NOTRACK A OUTPUT p udp j NOTRACK COMMIT filter INPUT ACCEPT FORWARD DROP OUTPUT ACCEPT DOCKER DOCKERISOLATIONSTAGE DOCKERISOLATIONSTAGE DOCKERUSER A FORWARD j DOCKERUSER A FORWARD j DOCKERISOLATIONSTAGE A FORWARD o docker m conntrack ctstate RELATEDESTABLISHED j ACCEPT A FORWARD o docker j DOCKER A FORWARD i docker o docker j ACCEPT A FORWARD i docker o docker j ACCEPT A FORWARD o br f a c d m conntrack ctstate RELATEDESTABLISHED j ACCEPT A FORWARD o br f a c d j DOCKER A FORWARD i br f a c d o br f a c d j ACCEPT A FORWARD i br f a c d o br f a c d j ACCEPT A DOCKERISOLATIONSTAGE i docker o docker j DOCKERISOLATIONSTAGE A DOCKERISOLATIONSTAGE i br f a c d o br f a c d j DOCKERISOLATIONSTAGE A DOCKERISOLATIONSTAGE j RETURN A DOCKERISOLATIONSTAGE o docker j DROP A DOCKERISOLATIONSTAGE o br f a c d j DROP A DOCKERISOLATIONSTAGE j RETURN A DOCKERUSER j RETURN COMMIT nat PREROUTING ACCEPT INPUT ACCEPT OUTPUT ACCEPT POSTROUTING ACCEPT DOCKER A PREROUTING m addrtype dsttype LOCAL j DOCKER A OUTPUT d m addrtype dsttype LOCAL j DOCKER A POSTROUTING s o docker j MASQUERADE A POSTROUTING s o br f a c d j MASQUERADE A DOCKER i docker j RETURN A DOCKER i br f a c d j RETURN COMMIT I am definitely a beginner on iptables settings but I see no point why making udp stateless should prevent docker from finding the DNSor why using those rules with port does not resolve my congestion problem Does anyone have an insight on this 