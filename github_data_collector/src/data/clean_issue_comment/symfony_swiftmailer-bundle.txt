Its possible to send an email without to address only setting bcc Im using the Swiftmailer bundle v in Symfony Captura de pantalla a las After these code executes no email is sent What is the issue When multiple requests happen with the profiler enabled before the first one and without a kernel reboot between them there is no way to find out what happened in each of the requests For example if request sends an email and request sends another email the getMessageCount method will return after the second email despite the fact that actually a single email has been sent in it When was the issue introduced Probably here Why does it happen See The collect method is supposed to collect the data for the given request rather than all the logged data Thankfully it is guaranteed to be called once per requesst so having a way to match the logs with the request is not that important However it is important to know what has already been collected which in its current implementation it doesnt The reset method is supposed to remove all the information collected with the collect method What exists there is fine now but it has no effect because of the fact that collect actually looks at all the data available rather than only what is new Potential Solution Do not call reset each time collect is called Instead have collect remember where it left off logs processing and only process new logs add results to the already existing one Let me know if I should propose a PR Im not very familiar with the codetesting infrastructure you have set up but I could try EmailSenderListener refactored so it has early returns e better understandable code with only one indentation level When using a configuration like this swiftmailer disabledelivery envTESTMAILDISABLEDELIVERY send all emails to a specific address deliveryaddresses envTESTMAILDELIVERYADDRESS the value of TESTMAILDISABLEDELIVERY is ignored and delivery is always disabled Furthermore if that env var isnt used anywhere else the container will fail to build saying that this variable is unused The only solution I have right now is use php for the configuration parse out the env value manually and assign the value that way But this setting should use the env var value like any other fix Resolve ignore streamoptions treatment If you use streamoptions to send an email the setting is ignored if you use URL or if you put the configuration directly in swiftmaileryaml With these changes the issues are solved We have several issues with problems with streamoptions setting For instance issue and I have checked that the problems are presents in version of symfony and version of swiftmailerbundle This issue is to resume all of the cases and solve them with a new pull request Description I have setup a separate environment lets say stage and I have a configpackagesstageswiftmaileryaml file yaml swiftmailer deliveryaddresses catcheremailcom I have deliveryaddresses set but the email recipients are not being overridden like in the dev environment Interestingly deliveryaddresses setting only work in the dev environment Environment Symfony v Swiftmailer v Expected behavior deliveryaddresses configured in configpackages environment swiftmaileryml works for each environment Actual behavior deliveryaddresses only works in dev environment When you do not want to define a default mailer there are good reasons you might not want to the compiler pass throws This is the reason php Symfony Bundle SwiftmailerBundle DependencyInjection Compiler RegisterPluginsPass if containerfindDefinitionswiftmailermailer containergetParameterswiftmailermailers return Because findDefinition throws Note I do not use the default mailer anywhere Only two places with explicit injection configured to inject a non default mailer instance Not autowired After upgrading a symfony project I got an error parsing the config for swiftmailer The item that seemed to be causing the issue was cafile I had streamoptions defined in both configyml and configdevyml Only in the dev file I added the cafile item On upgrade it caused an issue My configyml has this swiftmailer transport mailertransport host mailerhost username maileruser password mailerpassword authmode mailerauthmode port mailerport encryption mailerencryption spool type memory logging true streamoptions ssl allowselfsigned true verifypeer false verifypeername false but my configdevyml has this swiftmailer spool type memory streamoptions ssl allowselfsigned true verifypeer false verifypeername false cafile C php cacertpem Notice the extra line for the cafile that is not in the configyml Why should this make a difference