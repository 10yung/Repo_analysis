It looks like only includes the macOS framework when in the framework zip file was a Carthage folder which included frameworks for both macOS and iOS Adding tvOS support with Xcode Hi when Im getting this build warning warning using ALWAYSSEARCHUSERPATHS YES while building targets which define modules DEFINESMODULE YES may fail Please migrate to using ALWAYSSEARCHUSERPATHS NO Should this setting be removed My test code objc itshould close info dialog dataModel cancelRequest expectdataModelisShowingDialogtoequalNO whenexpectdataModelisShowingDialogtoequalNO fail Xcode didnt highlight it but have fail log anything I forgot to set Recently Kiwi anounced that they are dropping the support and future development so Im thinking about transitioning to Expecta One thing that holds me back is that there are some matchers and features which I use all the time and which are absent in expecta Namely receive matcher mocks evaluation matcher for blocks see my pull request here I can implement them in expecta but I was wondering if it would be in vein with expecta philosophy to implement such a functionality So could please someone shed some light on the issue Context Im testing a Promise created using PromiseKit What I have now promisethen id result expectresulttoequalexpected catch NSError error failureerror finally done which the lazy old me use as a macro define AssertPromisepromise expected promisethen id result expectresulttoequalexpectedcatch NSError error failureerrorfinally done What I wanted similar library in JS expectpromisetoberesolvedAsexpected Currently I am stuck on implementing the match method of EXPMatcher since it expects a boolean but then we need to wait until the promise get resolved Would this kind of api be possible Any kind of direction would be nice Cheers While I was converting my XCTAssert macros to expect macros I wrongly copypasted actual value as following expect request class tobeAMemberOf MyRequest class where it should have been expectrequesttobeAMemberOf MyRequest class Is this case expecta failed with the following message expected an instance of MyRequest got an instance of MyRequest which obviously look weird Could we improve this We can check if given value is a class struct with the following conditional if actual class actual A class struct else An instance But Im not sure if making that check only in EXPMatchersbeInstanceOf file enough to handle all cases If you feel this change is enough I can move for a PR Thanks Hi I am just trying to test if a notification is posted expect NSNotificationCenter defaultCenter postNotificationNamenotificationName objectnil tonotifynotificationName This tests fails with the expected value is nilnull am I doing something wrong I debugged a little and here EXPMatcherImplementationBeginpostNotification id expected expected is always nil so the block is never executed Furthermore it would be nice to check this tweet from AshFurrow talking about objectnil when posting the notification Async testing fails with after fails with the matcher beInstanceOf while equal works am I missing something My code here 