Resolves A range with a step and no upper limit provided should default to the full range Eg should be the same as Hi I have the following cron object const job new CronJob cronTime onTick loggerdebuglog start true runOnInit true jobstart and I see that its no matter what I set in runOnInit and it always executes in XXXX btw I am using NestJs but define the cron object from your package I am building a scheduling application that schedules tasks as per the users need and unschedules them as well I wanted to save the created nodecron to firebase cloud firestore so that I can kill the cron job later if the user desires to I tried turning the cron job object into JSON by JSONstringify to do the same For that I had to set the context property to null as the object has cyclic references This got stored okay but the information from the entire cron job object is lost When I turn it back to JS object by JSONparse I cannot access the stop method Can anyone help me with the same Hi I am trying to run cronjob at pm every day I am using it to send sms reminders In the begining it was working but a few days after I did the cronjob I start receiving the reminder at AM Why I am using this code var sendConformationSmsJob new CronJob cronTime onTick function consolelogPerforming SendEmail check new Date findBooking null start false timeZone EuropeStockholm sendConformationSmsJobstart Can you please help me Hi I am trying to run the cron every two seconds but starting with the odd second expression causes a job to run every minute instead The one and only workaround I found is to enumerate all values like Example apps js const cron requirecron const cronJob new cronCronJob consolelognew DatetoISOString cronJobstart T Z T Z T Z T Z js const cron requirecron const cronJob new cronCronJob consolelognew DatetoISOString cronJobstart T Z T Z Sorry Im pretty new to work with cron I set up cron job like below the first job run at minute but when i change time to the first cron will finnish and stop the second cron doesnt run at all let scheduleTime consolelogDuong insertDatabase Cron new CronJob cronTime scheduleTime onTick function consolelogc consolelogmomentformatHHmmss start true timeZone UTC consolelogDuong insertDatabase End Cron consolelogDuong insertDatabase Cron scheduleTime new CronJob cronTime scheduleTime onTick function consolelogc consolelogNew cron momentformatHHmmss start true timeZone UTC consolelogDuong insertDatabase End Cron If you have the time to look into this and point me to the right direction I will be greatly appreciated The problem just happen when i change the time on the server my machine both window and linux if i dont change the server time its running just fine Hello I noticed utcOffset isnt in the constructor arguments in the docs making it confusing for someone who wants to use it and wants to know what position it goes in I ended up getting the position from the typescript definitions So constructorcronTime onTick onComplete start timezone context runOnInit unrefTimeout should probably change to constructorcronTime onTick onComplete start timezone context runOnInit utcOffset unrefTimeout The API documentation hasnt changed much since I threw it together with the original module Clearer documentation has always been a source of irritation for users Does this package have any plan to support nonstandard cron syntax Like I am using this package really well but I needed to use extended syntax for some reasons Now I extended the codes myself but it would be great if these syntaxes are supported natively 