 System Details What platform are you working with eg the output of configguess docker image multiarchubuntudebootstrappowerpcxenial Problems Description Current master looses bits while passing values in rubyffi This was raised by the CI here I tracked it down to this commit dd afc a ba ea e aad c dc fb and this a ed ea e f b a c e b e e aa fd After the first commit the build fails due to the missing int type and after the second commit the test failures occur This delta adds cmake configuration files and targets various platforms and architectures details summaryUsagesummary UnixMinGW environments sh usrbinenv sh git clone branch featurecmakebuildconfigs singlebranch depth mkdir libffibuild cd cmake configure options in AC counterpart can be overriden from commandline eg cmake DFFIMMAPEXECEMUTRAMPPAX DVERSIONXY for MinGW cmake G Unix Makefiles can use MinGW Makefiles bit i was using gitforwindowssdk which complains that we should not have shexe in PATH to proceed cmake build config Release build builds libffia and libffiso or libffidylib on macOS Visual Studio cmd just a normal command prompt or powershell doesnt have to be VS developer command prompt or a prompt with vcvarsallbat already ran git clone branch featurecmakebuildconfigs singlebranch depth mkdir libffi build cd libffi cmake configure options in AC counterpart are overriden from commandline eg cmake DFFIMMAPEXECEMUTRAMPPAX DVERSIONXY or to crosscompile cmake A Win cmake A ARM cmake A ARM cmake build config Release build builds libffilib and libffidll details Minimal supported version of cmake is release APR where addlibraryOBJECT was introduced That is used to prevent it for recompiling sources for static and shared targets ie a negligible optimization If need be it can be reworked to support older version Introspection cases are written for x i aarch and arm ISAs More cases can be added in future I do not have access to SPARC and MIPS etc right now Few symbols were dropped in newly added includefficonfighin which are not used in the code and require unnecessary introspection cases most prominently LIBFFIGNUSYMBOLVERSIONING Tested combinations OS ARCH CMAKE RESULT COMMENT Ubuntu x Ubuntu aarch Ubuntu armv l Alpine Linux aarch Alpine Linux armv l CentOS i FreeBSD amd SmartOS live release x macOS X Windows AMD del del delMASM assembler does not like syntax of generated asm see Windows X del del delMASM assembler does not like syntax of generated asm see Windows ARM Windows ARM System Details RHEL SELinux MLS in enforcing Problems Description libffi is creating a temp file to execute in the users home directory and since there is no default context for these files they inherit the context of the directory userhomedirt There is no policy to createexecute files of this type I could write policy to do this but I think this is not a good idea How does libffi determine the path to use for these files Is there a way to set the path libffi uses for these files bit tests from libffi RC fail for me on OpenIndiana with GCC PASS libffibhaibletestcallc W Wall Wnopsabi DDGTEST Wnounusedvariable Wnounusedparameter Wnounusedbutsetvariable Wnouninitialized O DABINUMFFITHISCALL DABIATTRTHISCALL test for excess errors Setting LDLIBRARYPATH to exporthomenewmanwsoiuserlandcomponentslibrarylibffibuildamd testsuitelibsexporthomenewmanwsoiuserlandcomponentslibrarylibffibuildamd testsuitelibs Execution timeout is spawn open M long long ffloatlong longint x c f fffffffa xe x c f FAIL libffibhaibletestcallc W Wall Wnopsabi DDGTEST Wnounusedvariable Wnounusedparameter Wnounusedbutsetvariable Wnouninitialized O DABINUMFFITHISCALL DABIATTRTHISCALL execution test Executing on host usrgcc bingcc exporthomenewmanwsoiuserlandcomponentslibrarylibffilibffi rc testsuitelibffibhaibletestcallc W Wall Wnopsabi DDGTEST Wnounusedvariable Wnounusedparameter Wn ounusedbutsetvariable Wnouninitialized O DABINUMFFIFASTCALL DABIATTRFASTCALL Iexporthomenewmanwsoiuserlandcomponentslibrarylibffibuildamd testsuiteinclude Iexporthomenewmanwsoiuserlandc omponentslibrarylibffilibffi rc testsuiteinclude Iexporthomenewmanwsoiuserlandcomponentslibrarylibffibuildamd testsuiteinclude Lexporthomenewmanwsoiuserlandcomponentslibrarylibffibuilda md testsuitelibs lffi lm o testcallexe timeout The operating system itself it bit but GCC defaults to bit code unless m is added I wonder if those tests fail due to being compiled as bit In bit run all test passed Adding initial changes to support ossfuzz in libffi Ref Steps to enable fuzzing in libffi git clone cd libffi autogensh configure CCclang CXXclang LDclang enablefuzzing LDFLAGSlffi prefixpathtoprecompiledlibffiso make x pclinuxgnuffistrlenfuzzer or x pclinuxgnuffistrlen fuzzer Build integration to osssfuzz is inprogress Please review provide your feedback System Details macOS Catalina Apple clang version clang Target x appledarwin Thread model posix Problems Description I am able to succesfully work with libffi and either macOS application or an iOS application that works on the simulator I am using the static version of the library and I try to make sure that I am using the correct include files But when I am compiling for an actual iOS device iPhone then I get a segfault The actual code is here which shouldnt throw any exceptions works on simulator but not on device C int count ffitype argType count argType ffitypepointer argType ffitypepointer void argPointer count NSString one One argPointer one NSString two Two argPointer two fficif cif ffiarg rc if ffiprepcif cif FFIDEFAULTABI count ffitypevoid argType FFIOK fficall cif FFIFNNSLog rc argPointer Just to make sure I tried with both bitcode enabled and bitcode disabled but both with no luck libffi is available as a port in vcpkg a C library manager that simplifies installation for libffi and other project dependencies Documenting the install process here will help users get started by providing a single set of commands to build libffi ready to be included in their projects We also test whether our library ports build in various configurations dynamic static on various platforms OSX Linux Windows x x UWP ARM to keep a wide coverage for users Im a maintainer for vcpkg and here is what the port script looks like We try to keep the library maintained as close as possible to the original library System Details What platform are you working with eg the output of configguess i pcmingw Provide any toolchain details here eg compiler version Microsoft R CC Optimizing Compiler Version for x Problems Description Provide a description of the problem here Cant build libffi with MSVC toolchain on bit Windows configure CCmsvccsh clangcl CXXmsvccsh clangcl LDlink CPPclangcl EP checking build system type i pcmingw checking host system type i pcmingw checking target system type i pcmingw continue configure in default builddir i pcmingw exec binsh configure srcdir enablebuilddiri pcmingw mingw checking build system type i pcmingw checking host system type i pcmingw checking target system type i pcmingw checking for gsed sed checking for a BSDcompatible install usrbininstall c checking whether build environment is sane yes checking for a threadsafe mkdir p usrbinmkdir p checking for gawk gawk checking whether make sets MAKE yes checking whether make supports nested variables yes checking for gcc msvccsh clangcl checking whether the C compiler works no configure error in cUsers Desktoplibffimasteri pcmingw configure error C compiler cannot create executables See configlog for more details If this is a configuretime problem attach configlog configlog I have installed libffi and libffidev but pkgconfig isnt giving me any output pkgconfig libffi pkgconfig libffi pkgconfig libffidev This is a problem because without output from pkgconfig I am unable to compile the lisp cllibusb library System info uname a Linux raspberrypi Thu Aug BST armv l GNULinux cat etcissue Raspbian GNULinux n l dpkg l grep libffi ii libffidevarmhf armhf Foreign Function Interface library development files ii libffi armhf armhf Foreign Function Interface library runtime System Details iOS aarch Problems Description In addition to the already broken exception handling on x iOS the following commit breaks exception handling on aarch iOS Example code try fficall some method call that raises an exception catch NEVER REACHED Instead of properly catching the exception the program crashes on the fficall lldb bt thread queue comapplemainthread stop reason signal SIGABRT frame x ff a dc libsystemkerneldylibpthreadkill frame x ff libsystempthreaddylibpthreadkillVARIANTmp frame x fe ea libsystemcdylibabort frame x f f libcabidylibabortmessage frame x f f libcabidylibdefaultterminatehandler frame x f e libobjcAdylibobjcterminate frame x f b libcabidylibstdterminatevoid frame x f b a libcabidylibcxxabiv failedthrowcxxabiv cxaexception frame x f b libcabidylibcxathrow frame x f b c libobjcAdylibobjcexceptionthrow frame x f a CoreFoundation NSSingleObjectArrayI objectAtIndex frame x c MyAppfficallSYSV frame x af c MyAppfficallint 