I tryed this code cs using System class Program static void Main IComparableint CompareTo IEquatableint Equals the exception I got was UnbreakableAssemblyGuardException Type SystemIEquatable is not allowed at UnbreakableInternalAssemblyValidatorEnsureAllowedTypeReference type String memberName at UnbreakableInternalAssemblyValidatorEnsureAllowedTypeReference type String memberName at UnbreakableInternalAssemblyValidatorValidateMemberReferenceMemberReference reference at UnbreakableAssemblyGuardValidateAndRewriteMethodMethodDefinition method RuntimeGuardReferences guard AssemblyValidator validator AssemblyGuardSettings settings at UnbreakableAssemblyGuardValidateAndRewriteTypeTypeDefinition type RuntimeGuardReferences guard AssemblyValidator validator AssemblyGuardSettings settings at UnbreakableAssemblyGuardRewriteAssemblyDefinition assembly AssemblyGuardSettings settings at SharpLabServerExecutionExecutorExecuteCompilationStreamPair streams IWorkSession session in C projects sharplab source Server Execution Executorcsline at SharpLabServerMirrorSharpSlowUpdateProcessAsyncIWorkSession session IList diagnostics CancellationToken cancellationToken in C projects sharplab source Server MirrorSharp SlowUpdatecsline at MirrorSharpInternalHandlersSlowUpdateHandlerExecuteAsyncAsyncData data WorkSession session ICommandResultSender sender CancellationToken cancellationToken at MirrorSharpInternalConnectionReceiveAndProcessInternalAsyncCancellationToken cancellationToken at MirrorSharpInternalConnectionReceiveAndProcessAsyncCancellationToken cancellationToken I think these interfaces are safe This is an awesome project and a lot of Roslyn issues are being filed linking to sharplab as a fast and effective test bed for repros I just filed one myself but though I linked to sharplab it didnt effectively show the error because IDE has to be turned on for the bug to manifest Can SharpLab offer a way to turn on certain analyzer rules Hello congrats for the project its incredibly well done and Ive been using it for months it has become an incredibly valuable tool for me and I appreciate your hard work on it I was wondering if itd be possible to make sharplabio a proper PWA so that it could be installed on devices that support the feature eg Android devices Right now trying to add sharplabio to the home page results in a simple shortcut being added to the home page and clicking on it simply opens the website in a browser tab This is the expected behavior for websites that dont properly support the minimum PWA specifications otherwise the website should be opened in a standalone window eg like Twitter on mobile Ive tried both with Chrome and Edge Chromium same result Ive run a test on the website using Lighthouse and got this report Heres the checklists guide from Google on PWAs Looks like simply adding a manifest should fix most of the issues and hopefully thatll be enough to have the app open in a standalone window Thanks again for your hard work May be I do not know something about CompilerGenerated classes but the follow code is decompiled to invalid code as I think csharp using System namespace Program public sealed class Handle private readonly Funcint func public HandleFuncint func func func public static class Program private static void Main int F var handle new HandleF The decompiled code has class c with method MaingF which is inaccessible due to its protection level in ProgramMain method csharp using System using SystemDiagnostics using SystemReflection using SystemRuntimeCompilerServices using SystemSecurity using SystemSecurityPermissions assembly CompilationRelaxations assembly RuntimeCompatibilityWrapNonExceptionThrows true assembly DebuggableDebuggableAttributeDebuggingModesDefault DebuggableAttributeDebuggingModesDisableOptimizations DebuggableAttributeDebuggingModesIgnoreSymbolStoreSequencePoints DebuggableAttributeDebuggingModesEnableEditAndContinue assembly SecurityPermissionSecurityActionRequestMinimum SkipVerification true assembly AssemblyVersion module UnverifiableCode namespace Program public sealed class Handle private readonly Funcint func public HandleFuncint func func func public static class Program Serializable CompilerGenerated private sealed class c public static readonly c new c private int MaingF return private static void Main Handle handle new Handlenew Funcintc MaingF Should be csharp internal int MaingF return Sometimes to check output i copy paste my code from my IDE But it messup indentation Would be cool to have a button to format the code automatically Thanks Hello Currently there is no support to use older versions Once is actually current LTS before came out it would be really cool to be able to switch between different frameworks starting eg from Thanks Hello Once and support tiered jit it would be really cool to control explicitly how the code is jitted Otherwise you never know how the code was optimized Thanks C has no syntax for attributes on generic type parameter constraints but doesnt ILAsm syntax let you express that It was causing a lot of confusion in when decoding nullability attributes emitted by Roslyn I would have expected to see custom instance somewhere in class public auto ansi abstract sealed beforefieldinit C extends SystemPrivateCoreLib SystemObject Methods method public hidebysig static void Foo SystemPrivateCoreLib SystemIDisposable T cil managed Method begins at RVA x f Code size x maxstack IL ret end of method CFoo method public hidebysig static void Foo SystemPrivateCoreLib SystemIDisposable T cil managed Method begins at RVA x f Code size x maxstack IL ret end of method CFoo end of class C If its not possible in ILAsm syntax could you add it as comments Actually could it be added to the decompiled C as comments too cs public static class C public static void Foo T where T IDisposable constraint NullableAttribute public static void Foo T where T IDisposable constraint NullableAttribute 