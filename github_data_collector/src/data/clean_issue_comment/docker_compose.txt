Hi what is the reason that envfile does not handle variable substitution for envfile when running stackdeploy This would be useful in some cases This suggestion is to add backup and restore options to dockercomposeyml Example services db image postgres backup pgdumpall f dumpdbpgdump restore psql dumpdbpgdump volumes dumpdump web image wordpress backup rsync uploads dumpsuploads restore rsync dumpsuploads uploads volumes dumpdump With this configuration it makes it possible to add backup and restore commands The responsibility to encrypt and upload backups somewhere is left to the user To keep the master branch clean on my projects I use CI to deploy compose stacks with something like HOSTBRANCHciexamplecom dockercompose projectnamereviewBRANCH Then when a dev pushes a branch they can get feedback from the product team on the review deployment without having to merge halffinished stuff into master and thus block it from being deployable to production The problem is that resources are not unlimited So I made this ephemeral deployments to not autorestart so that I can reboot the CI server and then run docker system prune af This is not an ideal solution of course but still a small price to pay to keep the master branch deployable at any time which is priceless as you can fairly imagine Ive been looking into solutions for a while of course I could setup a cron job that would go over stacks which project name start with review and if they are say days old then drop them As such if a developer does not push anything to the branch during days then the stack autoremoves But now I think that the best would be to add a lifetime to the stack For example dockercompose up lifetime d would make the stack autoremove itself after days of uptime The only thing Im wondering about is if this can be done purely in compose or if it would require to contribute a lifetime option to docker containersvolumesnetworks and so on What do you think PR Hi on several machines with Ubuntu docker compose and compose Ive experienced the problem that dockercomposecreated networks ignore IPv settings or at least do not assign IPv addresses to containers Im aware that the current version is but I didnt see any entries about that in the Changelog so I guess the problem is still there Ive configured docker to use IPv in etcdockerdaemonjson and given a default network and containers started with regular docker automatically get an IPv address assigned This does not work with dockercompose not even when defining networks with IPv in the dockercompose file When googleing the problem youll find some workarounds which solve the problems by manually deleting the docker networks created by dockercompose and manually recreating them with IPv settings telling that once the network is created in a proper way IPv works even with dockercompose However such workarounds are annoying and error prone Docker compose should treat IPv in the same way as IPv ie automatically assign network addresses and ranges if not given in the dockercomposeyaml and obey the settings if given Nowadays it is becoming productioncritical to be able to talk IPv regards Here is an simple dockercomposeyml and a env file The idea is to use env to set the TAG to use in the image for service dockercomposeyml version services service image sebserviceMYTAGlatest env MYTAGv MYFULLTAGv If i run dockercompose f dockercomposeyml from within the same directory as the dockercomposeyml and env file Everything works as expected But if i run the dockercompose from an parent directory it will not respect the env file Example works dockercompose f dockercomposeyml config services service image sebservicev version Example not working dockercompose f dockerfiles dockercomposeyml config services service image sebservicelatest version If i try to declare the env file inside the dockercompose like envfile dockerfilesenv i get an error message ERROR Couldnt find env file C temp dockerfiles dockerfiles dockerfiles env So my conclusion is that dockercompose is not working correctly when it comes to using f and having the env in the same directory as the dockercomposeyml file And if i specify the path inside the dockercompose file it is clearly already using it due to the error message Workaround is to have the env file in the same directory as the command is executing not using relative paths to dockercomposeyml files Resolves Closes Thats a WIP for now since the new version of pythondotenv is not released A new version of pythondotenv should include my empty value PR At this point I will change requirementstxt to avoid the vendoring on my branch and we should be able to merge ERROR Couldnt connect to Docker daemon at httpdockerlocalhost is it running If its at a nonstandard location specify the URL with the DOCKERHOST environment variable I am getting the above error on Ubuntu machine when running docker compose on jenkins workspace varlibjenkinsworkspace dockercompose version build a fef Docker version build a ea Distributor ID Ubuntu Description Ubuntu LTS Release Codename bionic systemctl status dockerservice Jan Wdsys dockerd time T Z levelerror msgHandler for POST v build returned error invalid reference format Welcome to the dockercompose issue tracker Before creating an issue please heed the following This tracker should only be used to report bugs and request features enhancements to dockercompose For questions and general support use For documentation issues use For issues with the docker stack commands and the version of the Compose file use Use the search function before creating a new issue Duplicates will be closed and directed to the original discussion When making a bug report make sure you provide all required information The easier it is for maintainers to reproduce the faster itll be fixed Description of the issue dockercompose up brings up extra containers which dockercompose down doesnt remove I cant show much information as this is a companyclassified project but Im using CentOS and docker There are containers that are brought up by dockercompose up that do not go down when I type dockercompose down and that are causing port locking issues these are dockerised APIs These containers also do not disappear when I kill these ports using kill lsof t iPORTNUM These extra containers also have a different name shown eg I am in folder XYZ and my expected services have names XYZ while these extra ones are named ABC so I was wondering if Compose is somehow using multiple yml files in its up but there arent any others in my current working directory Am trying to write a crontab that stops and starts my Docker services Any help is appreciated thank you I am trying to run an ASPNET Core framework based app on an Ubuntu LTS server using Docker container First I created run the nginxproxy image using the following dockercomposeyml file version services nginxproxy image jwildernginxproxy containername nginxproxy ports volumes varrundockersocktmpdockersockro networks default external name nginxproxy secrets servercert file servercert serverkey file serverkey Both servercert and serverkey files are stored next to the dockercomposeyml file and were created using the following command sudo openssl req new newkey rsa days nodes x subj CUSSTCALSFODockerdemoCNnginxproxyexamplecom keyout serverkey out servercert I ran that image using dockercomposer up d command Now that my nginx proxy is running I created my first app using the following dockercomposeryml file version services privateimage image privateimagelatest environment VIRTUALHOSTsubdomainsnamecom ASPNETCOREENVIRONMENTProduction ASPNETCOREURLS expose ports volumes storagestorage APPDATAMicrosoftUserSecretsrootmicrosoftusersecretsro APPDATAASPNETHttpsrootaspnethttpsro containername realestatestorage volumes storage networks default external name nginxproxy secrets subdomainsnamecomcert file subdomainsnamecomcert subdomainsnamecomkey file subdomainsnamecomkey Both subdomainsnamecomcert and subdomainsnamecomkey files are stored next to the dockercomposeyml file and were created using the following command sudo openssl req new newkey rsa days nodes x subj CUSSTCALSFOPrivateImageCNsubdomainsnamecom keyout subdomainsnamecomkey out subdomainsnamecomcert When I run my private image using dockercompose up I get the following WARNING The APPDATA variable is not set Defaulting to a blank string Recreating privateimage done Attaching to privateimage privateimage crit MicrosoftAspNetCoreServerKestrel privateimage Unable to start Kestrel privateimage SystemInvalidOperationException Unable to configure HTTPS endpoint No server certificate was specified and the default developer certificate could not be found or is out of date privateimage To generate a developer certificate run dotnet devcerts https To trust the certificate Windows and macOS only run dotnet devcerts https trust privateimage For more information on configuring HTTPS see privateimage at MicrosoftAspNetCoreHostingListenOptionsHttpsExtensionsUseHttpsListenOptions listenOptions Action configureOptions privateimage at MicrosoftAspNetCoreHostingListenOptionsHttpsExtensionsUseHttpsListenOptions listenOptions privateimage at MicrosoftAspNetCoreServerKestrelCoreInternalAddressBinderAddressesStrategyBindAsyncAddressBindContext context privateimage at MicrosoftAspNetCoreServerKestrelCoreInternalAddressBinderBindAsyncIServerAddressesFeature addresses KestrelServerOptions serverOptions ILogger logger Func createBinding privateimage at MicrosoftAspNetCoreServerKestrelCoreKestrelServerStartAsync TContext IHttpApplication application CancellationToken cancellationToken privateimage Unhandled exception SystemInvalidOperationException Unable to configure HTTPS endpoint No server certificate was specified and the default developer certificate could not be found or is out of date privateimage To generate a developer certificate run dotnet devcerts https To trust the certificate Windows and macOS only run dotnet devcerts https trust privateimage For more information on configuring HTTPS see privateimage at MicrosoftAspNetCoreHostingListenOptionsHttpsExtensionsUseHttpsListenOptions listenOptions Action configureOptions privateimage at MicrosoftAspNetCoreHostingListenOptionsHttpsExtensionsUseHttpsListenOptions listenOptions privateimage at MicrosoftAspNetCoreServerKestrelCoreInternalAddressBinderAddressesStrategyBindAsyncAddressBindContext context privateimage at MicrosoftAspNetCoreServerKestrelCoreInternalAddressBinderBindAsyncIServerAddressesFeature addresses KestrelServerOptions serverOptions ILogger logger Func createBinding privateimage at MicrosoftAspNetCoreServerKestrelCoreKestrelServerStartAsync TContext IHttpApplication application CancellationToken cancellationToken privateimage at MicrosoftAspNetCoreHostingGenericWebHostServiceStartAsyncCancellationToken cancellationToken privateimage at MicrosoftExtensionsHostingInternalHostStartAsyncCancellationToken cancellationToken privateimage at MicrosoftExtensionsHostingHostingAbstractionsHostExtensionsRunAsyncIHost host CancellationToken token privateimage at MicrosoftExtensionsHostingHostingAbstractionsHostExtensionsRunAsyncIHost host CancellationToken token privateimage at MicrosoftExtensionsHostingHostingAbstractionsHostExtensionsRunIHost host privateimage at privateimageProgramMainString args in srcprivateimageProgramcsline privateimage exited with code The command dotnet devcerts https trust works on Windows and macOS only But how can I fix this issue on Ubuntu 