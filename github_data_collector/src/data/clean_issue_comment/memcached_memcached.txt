 Null pointer dereferencing Line c void restartregisterconst char tag restartcheckcb ccb restartsavecb scb void data when no more available space to allocate then it would return nullptr so cb may be nullptr restartdatacb cb calloc sizeofrestartdatacb if cbstack NULL cbstack cb else restartdatacb finder cbstack while findernext NULL finder findernext findernext cb cb is dereferenced below safestrcpycbtag tag RESTARTTAGMAXLEN cbdata data cbccb ccb cbscb scb Memory Leak Null pointer dereferencing Line c static int restartcheckconst char file sizet flen strlenfile const char ext meta when no more available space to allocate then it would return nullptr so metafile may be nullptr char metafile calloc flen strlenext metafile is dereferenced and modified below memcpymetafile file flen memcpymetafileflen ext strlenext FILE f fopenmetafile r if f NULL fprintfstderr restart no metadata save file starting with a clean cache n metafile is never freed in this branch return Memory Leak Null pointer dereferencing Line c static int restartsaveconst char file sizet flen strlenfile const char ext meta when no more available space to allocate then it would return nullptr so metafile may be nullptr char metafile calloc flen strlenext metafile is dereferenced and modified below memcpymetafileflen ext strlenext modet oldmask umaskSIRUSR SIWUSR FILE f fopenmetafile w umaskoldmask if f NULL perrorfailed to write metadata file return metafile is never freed in this branch restartdatacb cb cbstack restartcbctx ctx ctxf f while cb NULL fprintff Ts n cbtag if cbscbcbtag ctx cbdata metafile is never freed in this branch return cb cbnext Hello With this Pull Request Id like to request to add arm architecture to the build matrix at TravisCI ARM is used more and more for servers too and it would be good if Memcached is tested regularly Ive ran the build and tests both on one of our arm machines and at TravisCI and at the moment both are fine amd is the default arch at TravisCI so it is preserved The header generated comes with IDs thus breaking the build The probes are set with const address arguments already which just add the qualifier again Update build instructions Fix compilation issues in tests caused by not passing length of key Fix tests broken by the change to ignore keys that do not have a prefix commit b ff d eafca cf These lines are exception Everywhere else return is followed by an immediate semicolon This change will help future contributors to keep the style consistent Compiling with ASAN can help find improper memory management by detecting leaks use after frees double frees buffer overflows etc It will profile the binary which has an effect on the binary size and possibly a small impact on performance although a lot better than valgrind We can use this from GCC onwards To enable during configure time run configure enableasan Docs Limitations Pulled from Clang docs but should be similar for GCC See background in Signedoffby David J M Karlsen daviddavidkarlsencom Reviewablestart This change is img src height alignabsmiddle altReviewable Reviewableend See looks like newer OpenSSLs dont like the test certs Im sure its fixable in some way tharanga want to pick this up related things to fix tlsc the stderr fprintfs before exitEXUSAGE calls shouldnt be gated on verbosity in loadservercertificate any way to add the SSLerror string into errormsg check the token less optimised than the usual memcmp especially it goes through the whole buffers but more resilient against possible attacks While at it constifying a var which should have been Fix up tabular output for memcachedtool stats Heres a snipped example of the current output scriptsmemcachedtool localhost stats localhost Field Value acceptingconns authcmds hashpowerlevel incrhits incrmisses libevent stable limitmaxbytes rusageuser slabglobalpagepool slabreassignbusydeletes slabreassignbusyitems slabreassignchunkrescues slabreassignevictionsnomem slabreassigninlinereclaim slabreassignrescues slabreassignrunning slabsmoved uptime version And with the fix the output should look like this with all those wide fields and values aligned scriptsmemcachedtool localhost stats localhost Field Value acceptingconns authcmds autherrors bytes bytesread byteswritten casbadval cashits casmisses cmdflush cmdget cmdmeta cmdset cmdtouch connyields connectionstructures crawleritemschecked crawlerreclaimed currconnections curritems decrhits decrmisses deletehits deletemisses directreclaims evictedactive evictedunfetched evictions expiredunfetched getexpired getflushed gethits getmisses hashbytes hashisexpanding hashpowerlevel incrhits incrmisses libevent stable limitmaxbytes listendisablednum logwatchersent logwatcherskipped logworkerdropped logworkerwritten lrubumpsdropped lrucrawlerrunning lrucrawlerstarts lrumaintainerjuggles lrutailreflocked mallocfails maxconnections movestocold movestowarm moveswithinlru pid pointersize reclaimed rejectedconnections reservedfds rusagesystem rusageuser slabglobalpagepool slabreassignbusydeletes slabreassignbusyitems slabreassignchunkrescues slabreassignevictionsnomem slabreassigninlinereclaim slabreassignrescues slabreassignrunning slabsmoved threads time timeinlistendisabledus totalconnections totalitems touchhits touchmisses uptime version 