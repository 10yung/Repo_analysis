I try to finish the pullrequest from Maddimax This adds the usage of the submodulesrecurse parameter on clone This is a follow up to enfilldirectoryfixes and has grown from patch in v to patches in v of which are submissions by others to the git list that Ive just combined into one series since they are all about filldirectory The first two patches may make sense to include in maint at some point though Stolee isnt that concerned about this regression The first patch is Kevin and Stolees testcase showing a regression in git clean f justonepathwithleadinguntrackeddir The second patch is a simple fix for that testcase with a pretty long and slightly embarrassing though entertaining backstory The third patch was from v and is a small tweak made by me to a patch proposed by Peff signoff from to avoid needing to create a dirent The fourth patch was a followup from Peff in response to V fixing a code comment Cc Jeff King peffpeffnet Johannes Schindelin JohannesSchindelingmxde Derrick Stolee dstoleemicrosoftcom KevinWillfordmicrosoftcom Kyle Meyer kylekyleamcom Jonathan Nieder jrniedergmailcom Simple change to the stringlist docs to reflect the fact that stringlist now has a cmp member field these days that can be set to something other than strcmp I found myself confused by the sentence junction here This PR clarifies that section In trying to understand checkupdates I found I was able to simplify the function by making it exit early when updates are not wanted Changes since v Added two bullet points to the end of the commit message to explain the questions Junio brought up about function calls that are skipped by the early return Piping git rangediff through diffhighlight currently has no effect for two reasons There are ANSI escapes before and after the hunk headers when color is enabled which diffhighlight fails to match One solution is to match both escapes COLOR COLOR This patch drops the trailing space from the existing pattern instead Unlike git log git rangediff diffs are indented which diffhighlight also fails to match This patch allows hunk headers preceded by any amount of whitespace and then skips past that indentation when parsing subsequent lines by reusing the machinery that handles the graph output Signedoffby Jack Bates jacknottheoilrigcom This is a reroll of enrebasebackend which has been rebased on v and updated to remove the dependence on rarebaseimoreoptions and also tries to address feedback from Phillip Junio and Jonathan This series does a lot of work around making the default rebase backend configurable and switches the default from the am backend to the mergeinteractive one Changes since v Rebased on originmaster and updated to remove the dependence on rarebaseimoreoptions Added two new patches at the start of the series Split the old first patch into two while modifying them based on Phillips feedback though slightly differently than discussed on the list instead of making keepempty a synonym for emptykeep I instead kept backward compatibility by making it a noop I noted the postcommit hook in the differences between backends Emily is investigating what changes need to happen there so I merely documented the existing differences dropped i from the reflog messages now they just refer to rebase Changes possibly missing from this version for discussion I did not remove the am option as suggested by Phillip since Junio and Phillip were still discussing whether it is wantedneeded I did not address the last two items Jonathan brought up as I couldnt find enough information to reproduce or understand the problems Cc JohannesSchindelingmxde phillipwooddunelmorguk liudentongmailcom gitsterpoboxcom plroskingmailcom albangruingmailcom szederdevgmailcom jrniedergmailcom emilyshaffergooglecom This pull request is held in draft to allow a workspace for running the CI unit tests Issue The current gitp py script does not work with python I have attempted to use the P integration built into GIT and I was unable to get the program to run because I have Python installed on my computer I was able to get the program to run when I downgraded my python to version However python is reaching its end of life Submission I am submitting a patch for the gitp py script that partially supports python This code was able to pass the basic tests t when run against Python This provides basic functionality In an attempt to pass the t P pathencoding test a new parameter for git P Clone was introduced encoding Formatidentifier This will create the GIT repository following the current functionality however before importing the files from P it will set the gitp pathEncoding option so any files or paths that are encoded with nonASCIInonUTF formats will import correctly Technical details The script was updated by futurize to support Py Py syntax The few references to classes in future were reworked so that future would not be required The existing code test for Unicode support was extended to normalize the classes unicode and bytes to across platforms unicode is an alias for str in Py and is the unicode class in Py bytes is bytes in Py and an alias for str in Py New coercion methods were written for both Python and Python asstringtext In Python this encodes a bytes object as a UTF encoded Unicode string asbytestext In Python this decodes a Unicode string to an array of bytes In Python these functions do not change the data since a str object function in both roles as strings and byte arrays This reduces the potential impact on backward compatibility with Python tounicodetext ensures that the supplied data is encoded as a UTF string This function will encode data in both Python and Python pathasstringpath This function is an extension function that honors the option gitp pathEncoding to convert a set of bytes or characters to UTF If the strbytes cannot decode as ASCII it will use the encodeWithUTF method to convert the custom encoded bytes to Unicode in UTF Generally speaking information in the script is converted to Unicode as early as possible and converted back to a byte array just before passing to external programs or files The exception to this rule is P Repository file paths Paths are not converted but left as bytes so the original file path encoding can be preserved This formatting is required for commands that interact with the P file path When the file path is used by GIT it is converted with encodeWithUTF Signedoffby Ben Keene seraphiregmailcom This patchset attempts to bring python compatibility to gitp Im using this PR mostly to access the test pipeline as I do not have p d access locally Please pardon the noise Discussion regarding patchset is on the maillinglist under RFC PATCH gitp python compatability Hi GIT contributors I am Shubham GhuleI have resolved the problem of extern integer fetchifmissing by putting it in the structure repository as a fieldMade the relevent changes suggested by dscho Im looking forward to your review Special thanks to dscho with regards Shubham