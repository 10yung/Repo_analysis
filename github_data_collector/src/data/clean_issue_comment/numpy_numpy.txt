Commit ad d e d a f ffc d removed some checks for needsapi from PyUFuncAccumulate but it neglected to remove the call to NpyIterIterationNeedsAPIiter that set needsapi This function call is now unnecessary and can be safely removed We are trying to upgrade our company software to python After completing this we realised all our services were using too much memory and the reason is that the numpy unicode arrays uses x as much memory as the python numpy strings This is because it uses byte characters rather than byte characters I know there is the bytestring npbytes but it is not equivalent to a string and using this would require rewriting a substantial part of our codebase For example you would have to convert it to a string anytime you wanted to use the column for our purposes For example in order to check equality to merge with other datasets etc Can you provide a way to have more memory efficient string arrays At the moment we are likely to revert our codebase to python again and this is the only reason npexp e npexpm e e Please be sure you are following the instructions in the dev guidelines Wed appreciate it if your commit message is properly formatted Reproducing code example python import numpy as np Error message PS D Google Drive code Machine Learning AZ cd d Google Drive code Machine Learning AZ envPYTHONIOENCODINGUTF envPYTHONUNBUFFERED C Users tzman conda envs MLEnv pythonexe c Users tzman vscode extensions mspythonpython pythonFiles ptvsdlauncherpy default client host localhost port d Google Drive code Machine Learning AZ HelloWorldpy C Users tzman conda envs MLEnv lib sitepackages numpy initpy UserWarning mklservice package failed to import therefore IntelR MKL initialization ensuring its correct outofthe box operation under condition when Gnu OpenMP had already been loaded by Python process is not assured Please install mklservice package see from import distributorinit Traceback most recent call last File C Users tzman conda envs MLEnv lib sitepackages numpy core initpy line in module from import multiarray File C Users tzman conda envs MLEnv lib sitepackages numpy core multiarraypy line in module from import overrides File C Users tzman conda envs MLEnv lib sitepackages numpy core overridespy line in module from numpycoremultiarrayumath import ImportError DLL load failed The specified module could not be found During handling of the above exception another exception occurred Traceback most recent call last File c Users tzman vscode extensions mspythonpython pythonFiles ptvsdlauncherpy line in module mainptvsdArgs File c Users tzman vscode extensions mspythonpython pythonFiles lib python oldptvsd ptvsd mainpy line in main run File c Users tzman vscode extensions mspythonpython pythonFiles lib python oldptvsd ptvsd mainpy line in runfile runpyrunpathtarget runnamemain File C Users tzman conda envs MLEnv lib runpypy line in runpath pkgnamepkgname scriptnamefname File C Users tzman conda envs MLEnv lib runpypy line in runmodulecode modname modspec pkgname scriptname File C Users tzman conda envs MLEnv lib runpypy line in runcode execcode runglobals File d Google Drive code Machine Learning AZ HelloWorldpy line in module import numpy as np File C Users tzman conda envs MLEnv lib sitepackages numpy initpy line in module from import core File C Users tzman conda envs MLEnv lib sitepackages numpy core initpy line in module raise ImportErrormsg ImportError IMPORTANT PLEASE READ THIS FOR ADVICE ON HOW TO SOLVE THIS ISSUE Importing the numpy cextensions failed Try uninstalling and reinstalling numpy If you have already done that then Check that you expected to use Python from C Users tzman conda envs MLEnv pythonexe and that you have no directories in your PATH or PYTHONPATH that can interfere with the Python and numpy version youre trying to use If looks fine you can open a new issue at Please include details on how you installed Python how you installed numpy your operating system whether or not you have multiple versions of Python installed if you built from source your compiler versions and ideally a build log If youre working with a numpy git repository try git clean xdf removes all files not under version control and rebuild numpy Note this error has many possible causes so please dont comment on an existing issue about this open a new one instead Original error was DLL load failed The specified module could not be found NumpyPython version information Python bit numpy How I installed Python I installed miniconda in MS Visual Studio and created an Conda Environment your operating system Windows Home Whether or not you have multiple versions of Python installed No Hi I run the MacPorts automated build system and we have been experiencing an issue for awhile where import numpy causes Python to crash I dont know if this happens for any users running macOS directly on their Macs but it does happen on one of our build machines the one running macOS Sierra The other build machines which run earlier and later macOS versions dont experience the problem All the build machines are virtual machines running under VMware ESXi on model Xserves I believe this is similar to or the same as but in case its not I didnt want to mix up my information in that issue In that issue ericwieser speculated that HAVEXGETBV is being set incorrectly As my lldb trace below shows we are crashing at the xgetbv instruction seberg asked in if the problem was the VM claiming to support AVX when it does not I have used the sample program posted by ulido in to check whether the machine claims to have avx support using builtincpusupportsavx In my case here in this macOS VM the sample program says AVX not supported Reproducing code example python import numpy Error message I am sorry I am not familiar with gdb but heres what happens under lldb Process resuming Python default Jan Clang clang on darwin Type help copyright credits or license for more information import numpy Process stopped thread queue comapplemainthread stop reason EXCBADINSTRUCTION codeEXCI INVOP subcode x frame x c multiarrayumathcpython mdarwinsonpycpusupports multiarrayumathcpython mdarwinsonpycpusupports x c xgetbv x c andl x eax x c movl x ecx x c c jmp x c dc Target Python stopped NumpyPython version information Output from import sys numpy printnumpyversion sysversion Python Numpy macOS Build version G Xcode Build version C b Apple LLVM version clang Please describe the issue in detail here and fill in the fields below Hi I am trying to install a package that has a several dependencies by writing a dockerfile Its using python and I was trying to install numpy Reproducing code example RUN wget RUN tar xzf Python tgz cd Python configure make sudo make install RUN sudo aptget install y pythondev pythontk pythonpip ENV PYTHONPATH PYTHONPATHusrlocallibpython distpackagesusrlibusrlibpython sitepackages RUN pip install opencvpython forcereinstall ignoreinstalled RUN pip install forcereinstall numpy CMD python datatestpy which just has import numpy in its code I A short code example that reproduces the problemmissing feature It should be selfcontained ie possible to run asis via python myproblempy python import numpy as np your code here Remove these sections for a feature request Error message Traceback most recent call last File datatestpy line in module import numpy File usrlocallibpython distpackagesnumpyinitpy line in module from import core File usrlocallibpython distpackagesnumpycoreinitpy line in module raise ImportErrormsg ImportError If you are reporting a segfault please include a GDB traceback which you can generate by following Full error message if any starting from line Traceback NumpyPython version information Output from import sys numpy printnumpyversion sysversion Fixes gh Add references to sitecfgexample to the docs and fix the example files DEFAULT section name More sysversion cleanups these are not limited to test files like was after this change only a handful sysversions exist which Ill add removeconvertsimplify in a final PR Hi The page at does not include a valid data type in numpy that is int Request to edit the datatype into the doc reproducing code example python import numpy as np npint is npint True npversion exit After exiting userlinux python version Python End reproducing code example The code example is provided thanks to user Right leg from here Thank you EDIT by seberg In gh Robert notes that In Numeric Int is indeed equivalent to Int if this is documented we have to make sure to be correct as to whether this is an alias to intp or to int For the special case shown below histogrambinedges with strategy doane hangs forever and wastes a single CPU and all system memory Reproducing code example Attention will start to eat up all system memory python import numpy as np nphistogrambinedges doane range The error will not appear if only a single is passed in the array Same thing happens with python import numpy as np nphistogrambinedges doane range Error message No error message code just hangs and wastes all memory NumpyPython version information default Jan GCC the same thing happens with default Nov GCC Issue found in a unit test using hypothesis