When running berks verify I get the following trace ruby ArgumentError Cannot find cookbook testcookbook unless ChefConfigcookbookpath is set or an explicit cookbook path is given Path homeuserberkshelfcookbookstestcookbook optchefworkstationembeddedlibrubygems gemschef libchefcookbooksyntaxcheckrb in forcookbook optchefworkstationembeddedlibrubygems gemsberkshelf libberkshelfcachedcookbookrb in validate optchefworkstationembeddedlibrubygems gemsberkshelf libberkshelfvalidatorrb in block in validate optchefworkstationembeddedlibrubygems gemsberkshelf libberkshelfvalidatorrb in each optchefworkstationembeddedlibrubygems gemsberkshelf libberkshelfvalidatorrb in validate optchefworkstationembeddedlibrubygems gemsberkshelf libberkshelfberksfilerb in verify optchefworkstationembeddedlibrubygems gemsberkshelf libberkshelfclirb in verify optchefworkstationembeddedlibrubygems gemsthor libthorcommandrb in run optchefworkstationembeddedlibrubygems gemsthor libthorinvocationrb in invokecommand optchefworkstationembeddedlibrubygems gemsthor libthorrb in dispatch optchefworkstationembeddedlibrubygems gemsberkshelf libberkshelfclirb in dispatch optchefworkstationembeddedlibrubygems gemsthor libthorbaserb in start optchefworkstationembeddedlibrubygems gemsberkshelf libberkshelfclirb in execute optchefworkstationembeddedlibrubygems gemsberkshelf binberks in top required binberks in load binberks in main The problem seems to be possibly syntaxcheckrbL as the cookbook name is appended to the expanded path which will not exist and will always raise The removal of Filejoin does seem to fix it C git test master berks version I have an issue with Berkshelf resolving chained git dependencies I have a test cookbook I generated to narrow down the issue this cookbook depends on the cookbook windowsautomation via a git reference test Berksfile frozenstringliteral true source cookbook wintelegraf path wintelegraf cookbook windowsautomation git gitgitoskyioopschefwindowsautomationgit branch master cookbook windowslibrary git gitgitoskyioopschefwindowslibrarygit branch master metadata test metadatarb depends wintelegraf depends windowsautomation depends windowslibrary windowsautomation depends on windowslibrary via another git reference windowsautomation Berksfile source metadata cookbook powershell cookbook windows cookbook windowslibrary path chefwindowslibrary cookbook windowslibrary git gitgitoskyioopschefwindowslibrarygit branch master windowsautomation metadata supports windows depends powershell depends windowslibrary This issue comes when I try to run berks install for the test cookbook I get the following output C git test master berks install Resolving cookbook dependencies Fetching test from source at Fetching wintelegraf from source at wintelegraf Fetching windowsautomation from gitgitoskyioopschefwindowsautomationgit at master Fetching cookbook index from Unable to satisfy constraints on package windowslibrary which does not exist due to solution constraint test Solution constraints that may result in a constraint on windowslibrary test windowsautomation windowslibrary windowsautomation windowslibrary Missing artifacts windowslibrary Demand that cannot be met test Unable to find a solution for demands test wintelegraf windowsautomation This issue gets resolved if in the test cookbook I add a dependency to windowslibrary But I am wondering why berkshelf cannot resolve this without the dependency I feel like I should not need to explicitly depend on all transitive git dependencies Description This changes resolves long stack traces on http errors when using chefguard optchefembeddedbinberks upload foobar E T ERROR NetHTTPServerException Precondition Failed E T ERROR optchefembeddedlibruby nethttpresponserb in error optchefembeddedlibrubygems gemschef libchefhttprb in request optchefembeddedlibrubygems gemschef libchefhttprb in put optchefembeddedlibrubygems gemschef libchefcookbookuploaderrb in block in uploadcookbooks optchefembeddedlibrubygems gemschef libchefcookbookuploaderrb in each optchefembeddedlibrubygems gemschef libchefcookbookuploaderrb in uploadcookbooks optchefembeddedlibrubygems gemsberkshelf libberkshelfuploaderrb in block levels in upload optchefembeddedlibrubygems gemsberkshelf libberkshelfuploaderrb in map optchefembeddedlibrubygems gemsberkshelf libberkshelfuploaderrb in block in upload optchefembeddedlibrubygems gemsberkshelf libberkshelfridleycompatrb in newclient optchefembeddedlibrubygems gemsberkshelf libberkshelfrb in ridleyconnection optchefembeddedlibrubygems gemsberkshelf libberkshelfuploaderrb in upload optchefembeddedlibrubygems gemsberkshelf libberkshelfuploaderrb in run optchefembeddedlibrubygems gemsberkshelf libberkshelfberksfilerb in upload optchefembeddedlibrubygems gemsberkshelf libberkshelfclirb in upload optchefembeddedlibrubygems gemsthor libthorcommandrb in run optchefembeddedlibrubygems gemsthor libthorinvocationrb in invokecommand optchefembeddedlibrubygems gemsthor libthorrb in dispatch optchefembeddedlibrubygems gemsberkshelf libberkshelfclirb in dispatch optchefembeddedlibrubygems gemsthor libthorbaserb in start optchefembeddedlibrubygems gemsberkshelf libberkshelfclirb in execute optchefembeddedlibrubygems gemsberkshelf binberks in top required optchefembeddedbinberks in load optchefembeddedbinberks in main There was an error connecting to the Chef Server Versus optchefembeddedbinberks upload foobar Cookbook Compare errors found The following files are changed metadatarb Make sure all your changes are merged into the central repositories before trying to upload the cookbook again HINT Also double check your line endings CRLF vs LF Issues Resolved List any existing issues this PR resolves or any Discourse or StackOverflow discussion thats relevant Check List New functionality includes tests All tests pass RELEASE NOTESmd has been updated if required not required for bugfixes required for API changes Description This PR changes the way berks fetches git repository dependencies from cloning locally to cloning a remote repository with a reference to the local checkout Without this change berks fails to fetch repositories that use gitlfs because gitlfs doesnt support fetching files from a local checkout Ive confirmed that this patch fixes the issue we saw in Issues Resolved Fixes Check List x New functionality includes tests x All tests pass RELEASE NOTESmd has been updated if required not required for bugfixes required for API changes We have a Chef cookbook that uses gitlfs to store some binaries If we depend on it from other cookbooks berkshelf fails to fetch it during berks install like this Fetching somecookbook from gitgitexamplecomchefsomecookbookgit at master Git error command git reset hard d d feb b faed a b efb failed If this error persists try remo ving the cache directory at homemaoeberkshelfcachegite cf b d e eee ef dOutput from the command hint The remote resolves to a file URL which can only work with a hint standalone transfer agent See section Using a Custom Transfer Type hint without the API server in customtransfersmd for details Downloading filesdefaultsomebinaryubuntu MB hint The remote resolves to a file URL which can only work with a hint standalone transfer agent See section Using a Custom Transfer Type hint without the API server in customtransfersmd for details Error downloading object filesdefaultsomebinaryubuntu d b Smudge error Error downloading filesdefaultsomebinaryubuntu d b e f e ca d a a cd b ad ae f e c fd batch request missing protocol filehomemaoeberkshelfcachegite cf b d e eee ef dgitinfolfs Errors logged to tmpd oev pgitlfslogs T log Use git lfs logs last to view the log error external filter gitlfs filterprocess failed fatal filesdefaultsomecookbookubuntu smudge filter lfs failed optchefdkembeddedlibrubygems gemsberkshelf libberkshelfmixingitrb in git optchefdkembeddedlibrubygems gemsberkshelf libberkshelflocationsgitrb in block in install optchefdkembeddedlibrubygems gemsberkshelf libberkshelflocationsgitrb in chdir optchefdkembeddedlibrubygems gemsberkshelf libberkshelflocationsgitrb in install optchefdkembeddedlibrubygems gemsberkshelf libberkshelfinstallerrb in block in downloadlocations optchefdkembeddedlibrubygems gemsberkshelf libberkshelfinstallerrb in each optchefdkembeddedlibrubygems gemsberkshelf libberkshelfinstallerrb in downloadlocations optchefdkembeddedlibrubygems gemsberkshelf libberkshelfinstallerrb in installfromuniverse optchefdkembeddedlibrubygems gemsberkshelf libberkshelfinstallerrb in run optchefdkembeddedlibrubygems gemsberkshelf libberkshelfberksfilerb in install optchefdkembeddedlibrubygems gemsberkshelf libberkshelfclirb in install optchefdkembeddedlibrubygems gemsthor libthorcommandrb in run optchefdkembeddedlibrubygems gemsthor libthorinvocationrb in invokecommand optchefdkembeddedlibrubygems gemsthor libthorrb in dispatch optchefdkembeddedlibrubygems gemsberkshelf libberkshelfclirb in dispatch optchefdkembeddedlibrubygems gemsthor libthorbaserb in start optchefdkembeddedlibrubygems gemsberkshelf libberkshelfclirb in execute optchefdkembeddedlibrubygems gemsberkshelf binberks in top required usrbinberks in load usrbinberks in main Apparently this happens because berkshelf clones a bare repository as a cache and clone it to another workspace locally but unfortunately gitlfs doesnt support fetching from local repositories so git reset hard revision fails with the error messages above I guess we can do either of the following Use git clone nocheckout referencecachepath url scratchpath This way the origin would be set to url instead of cachepath It could be slower though Check if the repository uses gitlfs somehow If so skip caching Im not sure how to check it though What do you think If the former sounds good I can make a patch FWIW Im using berkshelf on Ubuntu Dependabot couldnt parse the Gemfile found at Gemfile You can mention dependabot in the comments below to contact the Dependabot team When berkshelf encounters an error fetching the cookbook index from a Chef Server an exception of NameError uninitialized constant BerkshelfAPIClientChefServerConnectionRidley is thrown rather than saying expected message of service not found at It looks like the chefserverconnectionrb is still trying to rescue an exception from Ridley that is no longer available when the deps for Ridley was removed Replication Createupdate a Berksfile to use the chefserver as a source source chefserver Then update your chefkniferb or chefconfigrb to point at a Chef Server organization that doesnt exist chefserverurl Logs of the error Fetching cookbook index from chefserver Thread x f fdd optchefworkstationembeddedlibrubygems gemsberkshelf libberkshelfinstallerrb run terminated with exception reportonexception is true Traceback most recent call last from optchefworkstationembeddedlibrubygems gemsberkshelf libberkshelfinstallerrb in block levels in builduniverse from optchefworkstationembeddedlibrubygems gemsberkshelf libberkshelfsourcerb in builduniverse from optchefworkstationembeddedlibrubygems gemsberkshelf libberkshelfapiclientchefserverconnectionrb in universe from optchefworkstationembeddedlibrubygems gemsberkshelf libberkshelfridleycompatrb in get from optchefworkstationembeddedlibrubygems gemschef libchefhttprb in get from optchefworkstationembeddedlibrubygems gemschef libchefhttprb in request optchefworkstationembeddedlibruby nethttpresponserb in error Object Not Found NetHTTPServerException from optchefworkstationembeddedlibrubygems gemsberkshelf libberkshelfinstallerrb in block levels in builduniverse from optchefworkstationembeddedlibrubygems gemsberkshelf libberkshelfsourcerb in builduniverse from optchefworkstationembeddedlibrubygems gemsberkshelf libberkshelfapiclientchefserverconnectionrb in universe from optchefworkstationembeddedlibrubygems gemsberkshelf libberkshelfridleycompatrb in get optchefworkstationembeddedlibrubygems gemsberkshelf libberkshelfridleycompatrb in rescue in get service not found at universe BerkshelfAPIClientServiceNotFound from optchefworkstationembeddedlibrubygems gemsberkshelf libberkshelfinstallerrb in block levels in builduniverse from optchefworkstationembeddedlibrubygems gemsberkshelf libberkshelfsourcerb in builduniverse from optchefworkstationembeddedlibrubygems gemsberkshelf libberkshelfapiclientchefserverconnectionrb in universe optchefworkstationembeddedlibrubygems gemsberkshelf libberkshelfapiclientchefserverconnectionrb in rescue in universe uninitialized constant BerkshelfAPIClientChefServerConnectionRidley NameError NameError uninitialized constant BerkshelfAPIClientChefServerConnectionRidley berks v Precondition Private Artifactory is configured as Chef Cookbook repositories Cookbook foo stored in private repository Configure Berksfile to use a private repository and use foo cookbook source artifactory apikey APIKEY cookbook foo Course of Action from Berksfile location perform berks update command foo cookbook is downloaded to HOMEberkshelfcookbooksfoo Copy foo cookbooks to another location HOMEcookbooksfoo From location HOMEcookbooksfoo make some changes in foo cookbook but does not change version still and upload again to the private repository Back to Berksfile location and perform berks update command again Error New foo cookbookafter changes from point is not downloaded to HOMEberkshelfcookbooksfoo There is still version from point There would be nice to have eg force option that allows to download always latest cookbooks artifact from repository without version check berkshelf functions correctly with octokit bit not with details in ticket workaround by pinning to or specifying apiendpoint in configjson 