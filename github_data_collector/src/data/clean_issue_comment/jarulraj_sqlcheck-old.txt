I see that the name for the repository has changed to sqlcheckold Is this still going to be a maintained project or is it considered feature frozendeprecated Fixes I agree with the original reporter exit codes are very helpful for CI operations to prevent a build from showing as successful when sqlcheck fails Ive got a number of this false alarm when have a column name which has accidentally the enum string seemingly as postfix phonenum forenum nodenum Sqlcheck does not show line number on which antipattern or hint is reported Currently it gives following format D tempfuncsql LOW RISK QUERY ANTIPATTERN Spaghetti Query Alert Matching Expression D tempfuncsql LOW RISK QUERY ANTIPATTERN UNION Usage Matching Expression union can it give line no as well eg D tempfuncsql LOW RISK QUERY ANTIPATTERN UNION Usage Matching Expression union This becomes very useful when it is a huge file With line number starting position of the query you can directly navigate to the specific query Line number are very common in all code checker as they give better user experience Should line number be added here Thanks I want to use sqlcheck in my CI and I want it to exit with a nonzero exit code if it found any antipatterns or hints so that my CI build would fail But it always exits with code Sorry if this is a novice issue I tried to run it on Windows Enterprise SP bit with MSVC Redistributable x x installed but I got this error when I ran it in the command prompt The program cant start because MSVCP Ddll is missing from your computer Try reinstalling the program to fix this problem Im not sure where to go from there Im hoping theres a way to get around it without reinstalling the redistributables Thank you It would be a great feature to implement some kind of programmatic API to check an SQL file either from path or from the contents given as argument so that rd party tools can be built around sqlcheck My primary interest is to integrate this tool into an editorIDE for SQL file linting Currently the only way to integrate this tool into an editor would be to run shellcheck as a standard command invocation from shell and parse the output then map it to the lines and character positions This approach is not very performant and would require a lot of work especially in the output parsing logic However creating a stanard way to programmatically invoke shellcheck would work perfectly for this use case Unfortunately I am not proficient enough in CC to send a PR so leaving this here as a suggestion only Thank you for considering this feature