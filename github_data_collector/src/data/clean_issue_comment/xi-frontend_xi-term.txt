This isnt finished code but I think Ill take the leap and learn emacs properly instead and thus this project is a bit dead for me No matter that I have spent a few hours designing a config format that both supports emacs and vim style layers as well as more simplistic nanolike bindings The parsing of that file format is done and functional but the conversion from event to string to command is eluding me along with how one would include the default keymap there is a commented out section of how to code it in As such I hope someone more familiar with the application structure will slaughter this code and make something useful out of it I have this bash cat configxipreferencesxiconfig theme InspiredGitHub Setting theme manualy works t InspiredGitHub logfiletxt logfilerpctxt I have installed xicore and xiterm in usrbin and syntect in usrsharexiplugins When I open file in xiterm I didnt get syntax highlight xitermlog xitermrpclog xicorelog I would love to have a more sublimetext like terminal editor This project seems to drift more towards vim It might be possible to get both if keybindings where completely userconfigurable with a configfile like sublime does it Would you be interested in a pull request for something like this Goals Be able to simply copy paste a sublimekeybindings file of course most actions are not yet supported Generate one for the current state as well and make default Safe those and userdefined overwrites future step under XDGpaths Make all possible commands available via keybindings or Command prompt Rough overview Simple keybinding keys ctrlq command exit More complex keybinding keys left command move args by characters forward false keys ctrlleft command move args by words forward false keys shiftleft command move args by characters forward false extend true keys ctrlshiftleft command move args by words forward false extend true This seems to be very flexible and I think would allow for a vimlike binding as well as sublimelike or maybe even emacs Code changes For now I would stick with the simple bindings first although args is not hard to do with rust Enums Have a function that parses the value of keys to map to EventKey Have a function that parses the value of command to enum Command Enhance Command to encompass all possible commands Create a global HashMapEventKey Command out of steps and Rewrite the matchstatements in Tui Editor and Command to all map to the same functions This might not be the direction you want to go which is fine If so I would simply create a hard fork and diverge if thats ok with you Currently you can run c and exit with unsaved work and xiterm will exit without warning Ideally the normal exit should not work with unsaved text I think vim handles this nicely where one usually exits with q but this does not work with unsaved work Instead vim warns you of this but also lets you use q instead Its entirely reasonable to want to open an empty view eg to create a new document I guess this also needs a way to specify the filename during save though Select all Undo Redo Hello It is possible to have syntectplugin as a feature in Cargotoml like eg features default distclient s all distclient redis s memcached gcs azure azure chrono hyper hyperx rustcrypto url example from sccache Cargotoml project Im asking this because Im porting xiterm to FreeBSD and it will be more easy to me to use CARGOFEATURES syntectplugin or CARGOFEATURES all if there are more features that we like to have activated in a port I have not ported your project yet but I am usingtesting it and it works very well Thanks Nuno Teixeira Afaik Xi has support of multicursors does xiterm support it