Dear when i use swiftGen for String and localizing when string has one latin character like or the return value is wrone and has accent of the world you can see the result of swiftgen when do localized can you help me error I have a proposition to add an option to Assets generation to create static constants as extensions of UIColorNSColorSwiftUIColor instead of aside a new Color struct Advantage Can easily be used with system functions and provides more compact code swift viewbackgroundColor myCustomColor buttonsetTitleColormyCustomColor for normal TextYour contentbackgroundmyCustomColor instead of swift viewbackgroundColor AssetColormyCustomColorcolor buttonsetTitleColorAssetColormyCustomColorcolor for normal TextYour contentbackgroundAssetColormyCustomColorcolor not sure Disadvantage Named colors like white or black can be confused with system ones although the compiler doesnt create an ambiguity warning probably because system ones are class var Example stencil snippet for iOS extension UIColor for asset in assets if assetitems and forceNamespaces true or assetisNamespaced true set prefix prefixassetnameswiftIdentifierprettyescapeReservedKeywords endset call allcolorsBlock assetitems color prefix elif assetitems call allcolorsBlock assetitems color prefix endif endfor macro allcolorsBlock assets filter prefix for asset in assets if assettype filter accessModifier static let assetnameswiftIdentifierprettylowerFirstWordescapeReservedKeywords UIColornamed assetvalue elif assetitems and forceNamespaces true or assetisNamespaced true set prefix prefixassetnameswiftIdentifierprettyescapeReservedKeywords endset call allcolorsBlock assetitems filter prefix elif assetitems call allcolorsBlock assetitems filter prefix endif endfor endmacro Example Generated code swift extension UIColor internal static let almostBlack UIColornamed almostBlack internal static let black UIColornamed black internal static let bombay UIColornamed bombay internal static let coolGrey UIColornamed coolGrey internal static let darkGreenBlue UIColornamed darkGreenBlue internal static let darkKhaki UIColornamed darkKhaki x Ive started my branch from the develop branch gitflow x And Ive selected develop as the base branch for this Pull Request Im about to create x Ive added an entry in the CHANGELOGmd file to explain my changes and credit myself or added trivial to the PR title if I think it doesnt warrant a mention in the CHANGELOG x Add the entry in the appropriate section Bug Fix New Feature Breaking Change Internal Change x Add a period and spaces at the end of your short entry description x Add links to your GitHub profile to credit yourself and to the related PR and issue after your description During migration my team and myself moved some files which used L n structure to other frameworks after moving strings file there as well we are not be able to use the same L nFileName structure as there is only a single strings file there As a solution Ive introduced a new file template but the change is simple so to keep consistency in those kind of situations Id like to suggest an option to force add file name enums x Documentation updated x Not a breaking change option not being provided defaults to old behaviour x Updated tests x Not added support for swift Cheers Im about to start a project with SceneKit and would love strongly typed references to the contents of scnassets folders which is SceneKits preferred way of bundling assets with an application Is this something that would be suitable to add to Swiftgen I foresee Ill have the time to create a PR in Q If so Ill probably base SCNAssetsCatalog off of AssetsCatalog in SwiftGenKit and add logic to support scn dae mp wav and pngjpg files If you have any additional remarkspointers that would be great Hey Is there a plan to add SwiftUI templates Right now all the templates rely on UIKit right now If not I can help with implementing this Probably something like swiftUI to distinguish between UIKit and SwiftUI while still being able to differentiate between the Swift versions Would love to know what you think thanks Id like to work towards adding support for parsing other file resources that need to be accessed from the bundle usually with BundlemainurlforResourcewithExtension and the like Looking through the issues it seems this is a desired functionality but not much work has been towards achieving it My thoughts on the implementation A good name for the subcommand might be resources Correct me if Im wrong but it looks like inputs and filter are the best way to specify files or file types to include It seems I can probably implement the generator pretty quickly duplicating functionality from the yaml and plist generators Possible params enumName default Resource publicAccess default false Thoughts on template Containing enum Resource Each resource as a struct ResourceFile Each resource should have a name including the extension for uniqueness and clarity ResourceFile can expose two computed properties url for urlforResourcewithPath path for pathforResourceofType Need input on Arrays of resources Handling subdirectories implicitlyexplicitlydisregarding Thoughts Ideas Did I miss anything Hello Im trying to use the template plistsinlineswift stencil template to generate the content of a plist So far the content of the plist is xml version encodingUTF DOCTYPE plist PUBLIC AppleDTD PLIST EN plist version dict keyNameskey array stringJhonstring stringPeterstring stringNickstring array keySurnameskey array stringSmithstring stringJhonsonstring stringWilliamsstring array dict plist And visually it looks Screenshot at Then in the swiftgenyml I just have somethings as yml plist inputs PrecompileOriginPlists outputs templateName inlineswift output GeneratedPlistswift When I execute it it generates wrong data swift internal static let names String Jhon Peter Nick internal static let surnames String Smith Jhonson Williams If you see it misses the quotes in every single element in the array and in the plist they are declared as String Digging into the template I found where the issue could be I have created a solution I tried locally and is working fine but I dont know if this is breaking something else Besides I see that the same logic is applied in several templates so not sure if in these templates is broken as well The solution that I applied in the plistsinlineswift stencil was diff import Foundation DatetimeIntervalSinceReferenceDate valuetimeIntervalSinceReferenceDate elif metadatatype Optional nil elif metadatatype Array and metadataelementitems for itemMetadata in metadataelementitems call valueBlock value forloopcounter itemMetadata elif metadatatype Array and value for currentValue in value call valueBlock currentValue metadataelement if not forlooplast endif endfor elif metadatatype Dictionary The new output is swift internal static let names String Jhon Peter Nick internal static let surnames String Smith Jhonson Williams I didnt create the PR because Im not sure if this will break something else or if I need to apply the same logic in more files Thanks The most recent commit to master is from January Getting error Invalid redeclaration of MySub Using SwiftGen v Stencil v StencilSwiftKit v SwiftGenKit v Generating String with template structuredswift stencil String keys will look like mainmySubvalue value mainmysubkey key mainmysubkey key mainmySubkey key Output Swift internal enum L n internal enum MySub key internal static let key L ntrLocalizable mainmysubkey internal enum MySub key internal static let key L ntrLocalizable mainmySubkey value internal static let value L ntrLocalizable mainmySubvalue internal enum MySub key internal static let key L ntrLocalizable mainmysubkey Is there possible to convert them all to one enum I guess that these will create each separate child under tablesfirstlevelschildren Any solution suggestions I cant just rename keys because they come from API if an error occurs Im using SwiftGen in my project I can run app on simulator as well as on device But not able to archive code to upload Getting SwiftGen not installed download it from Command PhaseScriptExecution failed with a nonzero exit code Screenshot at PM 