 What is the purpose of the change equals for generic type not work when close idle state aggregation not work for generic type and timestamp type Brief change log Fix equals code generation for raw type in ScalarOperatorGens Fix raw and timestamp type in EqualiserCodeGenerator Verifying this change ScalarFunctionsTesttestEquality EqualiserCodeGeneratorTest AggregateITCasetestGenericTypesWithoutStateClean Does this pull request potentially affect one of the following parts Dependencies does it add or upgrade a dependency no The public API ie is any changed class annotated with PublicEvolving no The serializers no The runtime perrecord code paths performance sensitive no Anything that affects deployment or recovery JobManager and its components Checkpointing YarnMesos ZooKeeper no The S file system connector no Documentation Does this pull request introduce a new feature no Thank you very much for contributing to Apache Flink we are happy that you want to help us improve Flink To help the community review your contribution in the best possible way please go through the checklist below which will get the contribution into a shape in which it can be best reviewed Please understand that we do not do this to make contributions to Flink a hassle In order to uphold a high standard of quality for code contributions while at the same time managing a large number of contributions we need contributors to prepare the contributions well and give reviewers enough contextual information for the review Please also understand that contributions that do not follow this guide will take longer to review and thus typically be picked up with lower priority by the community Contribution Checklist Make sure that the pull request corresponds to a JIRA issue Exceptions are made for typos in JavaDoc or documentation files which need no JIRA issue Name the pull request in the form FLINKXXXX component Title of the pull request where FLINKXXXX should be replaced by the actual issue number Skip component if you are unsure about which is the best component Typo fixes that have no associated JIRA issue should be named following this pattern hotfix docs Fix typo in event time introduction or hotfix javadocs Expand JavaDoc for PuncuatedWatermarkGenerator Fill out the template below to describe the changes contributed by the pull request That will give reviewers the context they need to do the review Make sure that the change passes the automated tests ie mvn clean verify passes You can set up Travis CI to do that following this guide Each pull request should address only one issue not mix up code from multiple issues Each commit in the pull request has a meaningful commit message including the JIRA id Once all items of the checklist are addressed remove the above text and this checklist leaving only the filled out template below The sections below can be removed for hotfixes of typos What is the purpose of the change Add black list for Hive builtin functions Brief change log Add black list for Hive builtin functions Add test case Verifying this change New test Does this pull request potentially affect one of the following parts Dependencies does it add or upgrade a dependency no The public API ie is any changed class annotated with PublicEvolving no The serializers no The runtime perrecord code paths performance sensitive no Anything that affects deployment or recovery JobManager and its components Checkpointing YarnMesos ZooKeeper no The S file system connector no Documentation Does this pull request introduce a new feature no If yes how is the feature documented NA What is the purpose of the change Make RocksDB the default store for timers when using RocksDBStateBackend Verifying this change This change is already covered by existing tests such as please describe tests RocksDBStateBackendConfigTestjava Does this pull request potentially affect one of the following parts Dependencies does it add or upgrade a dependency no The public API ie is any changed class annotated with PublicEvolving no The serializers no The runtime perrecord code paths performance sensitive no Anything that affects deployment or recovery JobManager and its components Checkpointing YarnMesos ZooKeeper no The S file system connector no Documentation Does this pull request introduce a new feature no If yes how is the feature documented not applicable What is the purpose of the change YarnClusterDescriptor doesnt have the delegation token checker in security HadoopModule Thus causes delegation token launch path problematically fails Brief change log add identical delegation token checker in YarnClusterDescriptor Verifying this change This change is already covered by existing tests Does this pull request potentially affect one of the following parts Dependencies does it add or upgrade a dependency no The public API ie is any changed class annotated with PublicEvolving no The serializers no The runtime perrecord code paths performance sensitive no Anything that affects deployment or recovery JobManager and its components Checkpointing YarnMesos ZooKeeper YARN The S file system connector no Documentation Does this pull request introduce a new feature no fix Thank you very much for contributing to Apache Flink we are happy that you want to help us improve Flink To help the community review your contribution in the best possible way please go through the checklist below which will get the contribution into a shape in which it can be best reviewed Please understand that we do not do this to make contributions to Flink a hassle In order to uphold a high standard of quality for code contributions while at the same time managing a large number of contributions we need contributors to prepare the contributions well and give reviewers enough contextual information for the review Please also understand that contributions that do not follow this guide will take longer to review and thus typically be picked up with lower priority by the community Contribution Checklist Make sure that the pull request corresponds to a JIRA issue Exceptions are made for typos in JavaDoc or documentation files which need no JIRA issue Name the pull request in the form FLINKXXXX component Title of the pull request where FLINKXXXX should be replaced by the actual issue number Skip component if you are unsure about which is the best component Typo fixes that have no associated JIRA issue should be named following this pattern hotfix docs Fix typo in event time introduction or hotfix javadocs Expand JavaDoc for PuncuatedWatermarkGenerator Fill out the template below to describe the changes contributed by the pull request That will give reviewers the context they need to do the review Make sure that the change passes the automated tests ie mvn clean verify passes You can set up Travis CI to do that following this guide Each pull request should address only one issue not mix up code from multiple issues Each commit in the pull request has a meaningful commit message including the JIRA id Once all items of the checklist are addressed remove the above text and this checklist leaving only the filled out template below The sections below can be removed for hotfixes of typos What is the purpose of the change In FLINK we deprecated mesosresourcemanagertasksmem in favour of the new unified option taskmanagermemorytotalprocesssize from FLIP We should remove it now in Brief change log Replaced mesosresourcemanagertasksmem in code and comments to taskmanagermemorytotalprocesssize Verifying this change This change is a trivial rework code cleanup without any test coverage Does this pull request potentially affect one of the following parts Anything that affects deployment or recovery JobManager and its components Checkpointing YarnMesos ZooKeeper yes Documentation Does this pull request introduce a new feature no If yes how is the feature documented not documented Thank you very much for contributing to Apache Flink we are happy that you want to help us improve Flink To help the community review your contribution in the best possible way please go through the checklist below which will get the contribution into a shape in which it can be best reviewed Please understand that we do not do this to make contributions to Flink a hassle In order to uphold a high standard of quality for code contributions while at the same time managing a large number of contributions we need contributors to prepare the contributions well and give reviewers enough contextual information for the review Please also understand that contributions that do not follow this guide will take longer to review and thus typically be picked up with lower priority by the community Contribution Checklist Make sure that the pull request corresponds to a JIRA issue Exceptions are made for typos in JavaDoc or documentation files which need no JIRA issue Name the pull request in the form FLINKXXXX component Title of the pull request where FLINKXXXX should be replaced by the actual issue number Skip component if you are unsure about which is the best component Typo fixes that have no associated JIRA issue should be named following this pattern hotfix docs Fix typo in event time introduction or hotfix javadocs Expand JavaDoc for PuncuatedWatermarkGenerator Fill out the template below to describe the changes contributed by the pull request That will give reviewers the context they need to do the review Make sure that the change passes the automated tests ie mvn clean verify passes You can set up Travis CI to do that following this guide Each pull request should address only one issue not mix up code from multiple issues Each commit in the pull request has a meaningful commit message including the JIRA id Once all items of the checklist are addressed remove the above text and this checklist leaving only the filled out template below The sections below can be removed for hotfixes of typos What is the purpose of the change Because of the module system of Java s plugins cannot access different modules anymore This patch fixes two issues access to platform modules for authentication related classes and bundling of jaxb in a version shaded jar Brief change log Access to platform modules for authentication related classes and Bundling of jaxb in a version shaded jar Verifying this change Existing e e plugin tests under Java Does this pull request potentially affect one of the following parts Dependencies does it add or upgrade a dependency yes no The public API ie is any changed class annotated with PublicEvolving yes no The serializers yes no dont know The runtime perrecord code paths performance sensitive yes no dont know Anything that affects deployment or recovery JobManager and its components Checkpointing YarnMesos ZooKeeper yes no dont know The S file system connector yes no dont know Documentation Does this pull request introduce a new feature yes no If yes how is the feature documented not applicable docs JavaDocs not documented Fixes an instability in the ZookeeperLeaderElectionITCase where the shutdown of the Dispatcher caused a slot allocation to fail resulting in the job failing reaching a terminal state and afterwards being removed from Zookeeper We now prevent the job from reaching a terminal state by enabling a fixeddelay restart strategy Should the allocation fail the JM will retry until the JM itself is being shut down On shutdown the JM will suspend the job allowing it to be recovered by other Dispatchers I verified the fix by rerunning the test until I ran into the same exception as reporter in the JIRA The exact behavior for what happens to running jobs when the Dispatcher is shut down in an orderly fashion is currently undefined and this PR makes no attempt remedy this Excludes the entire target directory from checkstyle We only care about checkstyle for our own source that we actively maintain not generated sources or other stuff in this directory What is the purpose of the change This pull request improves the environment requirement documentation of the Python API Brief change log Improve the environment requirement documentation in Python API Tutorials Improve the environment requirement documentation in climd Improve the environment requirement documentation in udfsmd Improve the environment requirement documentation in pythonshellmd Change the interpreter python to python in buildingmd Verifying this change This change is a trivial rework code cleanup without any test coverage Does this pull request potentially affect one of the following parts Dependencies does it add or upgrade a dependency no The public API ie is any changed class annotated with PublicEvolving no The serializers no The runtime perrecord code paths performance sensitive no Anything that affects deployment or recovery JobManager and its components Checkpointing YarnMesos ZooKeeper no The S file system connector no Documentation Does this pull request introduce a new feature no If yes how is the feature documented docs What is the purpose of the change This task is to remove the LegacyScheduler class and the consequently unused codes after this removal Note that the schedulingfailover logics in ExecutionGraph would be removed in a separate task This change is based on Brief change log Removed LegacyScheduler and its factory and tests Removed consequently unused codes Verifying this change This change is a trivial rework code cleanup without any test coverage Does this pull request potentially affect one of the following parts Dependencies does it add or upgrade a dependency yes no The public API ie is any changed class annotated with PublicEvolving yes no The serializers yes no dont know The runtime perrecord code paths performance sensitive yes no dont know Anything that affects deployment or recovery JobManager and its components Checkpointing YarnMesos ZooKeeper yes no dont know The S file system connector yes no dont know Documentation Does this pull request introduce a new feature yes no If yes how is the feature documented not applicable docs JavaDocs not documented 