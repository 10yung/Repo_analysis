POC My command is as follow include iostream include string using namespace std string v But I get an error sometimes inputline error no matching constructor for initialization of std string aka basicstringchar chartraitschar allocatorchar string v And my enviroment is MacOS G I install the cling via the install script on the official site Could any one do me a favor Thanks a lot Hi I installed clingxeus according to your instructions Installed totally new Miniconda Created a cling env tried and InstallIed clingxeus by coping the command on your page onda install xeuscling notebook c QuantStack c condaforge installed Jupyter Opened a notebook With Python it works fine With C not In the Miniconda terminal I get the following error ERROR in clingCIFactorycreateCI resource directory Cbldxeuscling benvLibrary lib clang not found inputline fatal error new file not found include new Warning in clingIncrementalParserCheckABICompatibility Possible C standard library mismatch compiled with CRTMSVCPCURRENT msvcp dll Extraction of runtime standard library version was I NotebookApp Interrupted I NotebookApp Shutting down kernel I NotebookApp Kernel shutdown b a a b ad d f b a f The OS is Windows Ilan Attempting to install from source but when I run cptpy checkrequirements I get the following crash Check availability of required softwares git OK Traceback most recent call last File toolspackagingcptpy line in module checkmaccmake File toolspackagingcptpy line in checkmac if not checkversionstringgeexecsubprocesscheckoutputcmake versionformatcmakeCMAKE stripsplit n split IndexError list index out of range Ive tried running from both the top level and the packaging folder with Python and I am running MacOS Any ideas Are there binaries I can use on Arch Linux There is an AUR package but it builds from source which takes insanely long to clone the repo and then to build it it was taking more than hours which is when I stopped the process I tried using the binaries for Ubuntu but they dont run properly because of having built for different runtimes etc Hello I could not compile cling after generating a Xcode project using CMAKE Is it possible to compile cling using Xcode In case of a affirmative answer how Thanks Kind regards I was expecting Cling to clear the previous output when pressing CtrlL but instead it does nothing I think the CtrlL shortcut has become a standard and recommend this behaviour to be added to cling I like the workflow of having my code opened with Vim on a tmux pane on the left having the intepreter opened on a tmux pane on the right editing some code in Vim pasting it with the awesome vimslime plugin to the interpreter I can do this with ipython but Im currently unable to reproduce this with cling for multiline pastes When I paste some multiline code to cling each line is executed individually So of course the following c code cpp include iostream using namespace std for int i i i cout hello endl when pasted to cling does not work cling include utility cling include iostream cling using namespace std for int i i i cout hello endl cling for int i i i cout hello endl cling cling cout hello endl cling hello Is there an already existing solution to this Hi I found the AppVeyor build which failing because of C ci build clingsrc tools cling lib UserInterface textinput TerminalDisplayWincpp error C HANDLE CreateFileWLPCWSTRDWORDDWORDLPSECURITYATTRIBUTESDWORDDWORDHANDLE cannot convert argument from const char to LPCWSTR C ci build builddir tools cling lib UserInterface clingUserInterfacevcxproj Looks like the clingUserInterface is compiled using UNICODE Regards TheAifam In we changed a little bit the way to process the input given in a cell notebook in order to write the output cleanly To do that we use the flag disableValuePrinting in the process method of the MetaProcessor and we found a bug Here is a simple example which illustrates the issue in the cling interpreter include iostream include clingInterpreterValueh include clingUtilsOutputh include clingMetaProcessorMetaProcessorh clingMetaProcessor processorgCling clingerrs clingValue output clingInterpreterCompilationResult compilationresult stdstring myinputRauto test auto istdcout i n processorprocessmyinput compilationresult output true test The error message is inputline error type lambda at inputline does not provide a call operator test Note that if you add a semicolon at the end of the myinput string the problem is solved stdstring myinputRauto test auto istdcout i n Its a critical issue for xeuscling and we hope that you can fix it soon in order to add a patch in your build process