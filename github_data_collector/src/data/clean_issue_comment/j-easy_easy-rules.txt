 Is there a recommended way for a Rule to halt the firing process of InferenceRulesEngine Currently Im clearing out the Facts map with asMapclear but this breaks encapsulation and the law of Demeter so it isnt a satisfactory solution Example Rulename earlyexitrule description Halt the InferenceRulesEngine early if we have sufficient info priority public class EarlyExitRule private final Facts facts public EarlyExitRuleFacts facts thisfacts facts Condition public boolean whenFactshouldexitearly boolean shouldExitEarly return shouldExitEarly Action public void then throws Exception Systemoutprintlnshouldexitearly true halt the InferenceRulesEngine Clear out all other facts to earlyexit the inference process factsasMapclear Hi QLExpress is an open source expression language from Alibaba Can you consider extending support I have an json object like status success payload list employeeId null description null metadata null And I am trying to update employeeId with SPEL Expression payload list employeeId Its working fine Now I have one more Expression like payload list employeeId But original list property has only one object on th index So I want to add new object on index using this payload list employeeId expression Is it possible through this Please suggest same or alternative Its not hard to find your way around after few minutes but IMHO it would help if the composites rules wiki section mentioned that you need to explicitly add the dependency to easyrulessupport Apologies in advance if I have missed some point Hi Im considering using easyrulesin a project and one important requirement is to be able to get some sort of reasoning stack from every evaluated rule this is called audit in rulebook For example for illustration purposes lets say I have a composite rule FlightRule with these subrules SameDateRule generic rule to evaluate whether a date equals to another date and takes these facts as input inputDate in the context of evaluating a flight it would be the flights date expectedDate the date to compare with reference RouteRule evaluates whether a flight operates a given route and takes these facts as input inputRoute the flight route expectedRoute the route to compare with reference If I executed FlightRule Id like to have the information of which conditions where met and which didnt for debuggingauditing purposes After reading easyrules wiki and some issues I can think of the following strategies Logging not ideal there will be too many log entries because there will be thousands of rules being evaluated in a matter of hours Implementing a custom RuleListener seems cleaner but I will be lacking context in the scenario of complex composite rules which I will have Implementing a custom wrapper of Rule that has the capability of returning a result similar as explained here that is capable of generating composite results from subrules I guess this may require wrapping or extending the RulesEnginetoo If I have elaborated properly my use caserequirement Id love to hear some advice in this regard Many thanks in advance Lambda expressions are not evaluated in condition I get following errors for expression below bsgetBgetRgetENamesentrySetstreamallMatchentry entrygetValuedayCatPDisize Line Column at orgmvel compilerExpressionCompilercompileExpressionCompilerjava at orgmvel compilerExpressionCompilercompileExpressionCompilerjava at orgmvel MVELanalyzeMVELjava at orgmvel compilerPropertyVerifiergetMethodPropertyVerifierjava at orgmvel compilerPropertyVerifieranalyzePropertyVerifierjava at orgmvel compilerExpressionCompilerverifyExpressionCompilerjava at orgmvel compilerExpressionCompilercompileExpressionCompilerjava at orgmvel utilParseToolssubCompileExpressionParseToolsjava at orgmvel astTypedVarNodeinitTypedVarNodejava at orgmvel compilerAbstractParserprocTypedNodeAbstractParserjava at orgmvel compilerAbstractParsernextTokenAbstractParserjava at orgmvel compilerAbstractParsernextTokenSkipSymbolsAbstractParserjava at orgmvel compilerExpressionCompilercompileExpressionCompilerjava at orgmvel compilerExpressionCompilercompileExpressionCompilerjava at orgmvel MVELcompileExpressionMVELjava at orgjeasyrulesmvelMVELActioninitMVELActionjava at orgjeasyrulesmvelMVELRulethenMVELRulejava at orgjeasyrulesmvelMVELRuleFactorycreateSimpleRuleMVELRuleFactoryjava at orgjeasyrulesmvelMVELRuleFactorycreateRuleMVELRuleFactoryjava at orgjeasyrulesmvelMVELRuleFactorycreateRulesMVELRuleFactoryjava at orgjeasyrulesmvelMVELRuleFactorycreateRulesMVELRuleFactoryjava Hi We have problem with identifyinghandling errors on a condition execution Exceptions in MVELCondition are suppressed and cant be handled in onFailure from RuleListener Code in MVELCondition doesnt rethrow exceptions The code example public boolean evaluateFacts facts try return BooleanMVELexecuteExpressionthiscompiledExpression factsasMap catch Exception var LOGGERerrorUnable to evaluate expression thisexpression on facts facts var return false Similar issue was described here but in this time it is related to MVELCondition As I see it was fixed already for MVELAction Could you please help us in this situation Thanks