It seems like FastttCamera is using background thread to access UI API Enabled Main Thread Checker using Xcode Apple Doc Happens in FastttCameram line number Heres the backtrace after pausing execution Main Thread Checker UI API called on a background thread UIView bounds PID TID Thread name none Queue name comapplerootdefaultqos QoS Backtrace FastttCamera x d d FastttCamera processImagewithCropRectmaxDimensionfromCameraneedsPreviewRotationpreviewOrientation blockinvoke libdispatchdylib x cc cc dispatchcallblockandrelease libdispatchdylib x cc c dispatchclientcallout libdispatchdylib x ccd dc dispatchqueueoverrideinvoke libdispatchdylib x cd d dispatchrootqueuedrain libdispatchdylib x cd f dispatchworkerthread libsystempthreaddylib x beb c pthreadwqthread libsystempthreaddylib x beab c startwqthread AppDev reports Main Thread Checker UI API called on a background thread UIView bounds PID TID Thread name none Queue name comapplerootdefaultqos QoS Backtrace FastttCamera x d d FastttCamera processImagewithCropRectmaxDimensionfromCameraneedsPreviewRotationpreviewOrientation blockinvoke libdispatchdylib x cc cc dispatchcallblockandrelease libdispatchdylib x cc c dispatchclientcallout libdispatchdylib x ccd dc dispatchqueueoverrideinvoke libdispatchdylib x cd d dispatchrootqueuedrain libdispatchdylib x cd f dispatchworkerthread libsystempthreaddylib x beb c pthreadwqthread libsystempthreaddylib x beab c startwqthread I merged KhanFu fork which add video support to latest master So as the title suggests my App is portrait only however there are instances where i would like to tell the library it is about to take landscape pictures for example for business cards In this case i make the camera fullscreen and encourage them to take a landscape picture Then i would like the picture that is returned to be rotated to be portrait Reading some of the variables names it looks as if this is possible but i cant seem to get it to work Any help is appreciated Hi How to reduce the time delay between capturing the series of picturesI want to reduce the time in between the picture to picture Thank you Just a small improvement drawInRect performance is very slow and this method is faster There are no checks for errors when AVCaptureDeviceInput deviceInput AVCaptureDeviceInput deviceInputWithDevicedevice errornil so if an error occurs deviceInput will be nil and the following call to session addInputdeviceInput will crash We cannot reproduce it on development but we see several crashes on our production app on crashlytics Fatal Exception NSInvalidArgumentException CoreFoundation x aa b exceptionPreprocess libobjcAdylib x dc c objcexceptionthrow AVFoundation x c c AVCaptureSession addInput FastttCamera x f FastttCamera setupCaptureSession blockinvoke FastttCameram libdispatchdylib x e fc dispatchcallblockandrelease libdispatchdylib x e bc dispatchclientcallout libdispatchdylib x d dispatchmainqueuecallback CF CoreFoundation x a CFRUNLOOPISSERVICINGTHEMAINDISPATCHQUEUE CoreFoundation x a fc CFRunLoopRun CoreFoundation x e b CFRunLoopRunSpecific GraphicsServices x GSEventRunModal UIKit x a c fc UIApplication run UIKit x a c UIApplicationMain Is there any reason why there are no such checks Thanks in advance CGBitmapInfo bitmapInfo CGImageGetBitmapInfoimageRef kCGBitmapAlphaInfoMask Since iOS its not allowed anymore to create contexts with unmultiplied Alpha info if bitmapInfo kCGImageAlphaLast bitmapInfo kCGImageAlphaPremultipliedLast if bitmapInfo kCGImageAlphaFirst bitmapInfo kCGImageAlphaPremultipliedFirst Hi Im using FastttCamera to work around nasty iOS SDK crash However Ive found a little issue with FastttCamera itself STR is similar to one from the radar Present camera with cameraFlashMode set to FastttCameraFlashModeOn Take picture Immediately before or during the flash either hit the iPhones power button to lock it or go to home screen In such case taking picture fails and imageDataSampleBuffer is empty Errors description error Error DomainAVFoundationErrorDomain Code The operation could not be completed UserInfoNSUnderlyingError x ad Error DomainNSOSStatusErrorDomain Code null NSLocalizedFailureReasonAn unknown error occurred NSLocalizedDescriptionThe operation could not be completed On such errors FastttCamera gets stuck in capturing image state This fix allows to take another picture after a failure