While trying to understand why my project pulled in googlegolangorgappenginecloudsql indirectly I noticed that its pulled in through this librarys dependency on githubcomgosqldrivermysql shell go mod why m googlegolangorgappengine googlegolangorgappengine githubcommpoldenzdnssql githubcomjmoironsqlx githubcomjmoironsqlxtest githubcomgosqldrivermysql googlegolangorgappenginecloudsql However I then noticed that a newer version of the dependency removes googlegolangorgappenginecloudsql as its obsolete You must add the ability to filter by the deletedat field Hi When using NamedQuery with structs if the struct filed not annotated with db tag the response is could not find name my opinion is to use filed name in this case of db tag not avilable http panic serving runtime error invalid memory address or nil pointer dereference goroutine running nethttpconnservefunc xc ed usrlocalgosrcnethttpservergo x panic x a xc d usrlocalgosrcruntimepanicgo x b githubcomtokopediariskautomationtestdashboardapiHandlerInsertTestSuite xc x fa xc c xc c homenakamagosrcgithubcomtokopediariskautomationtestdashboardapiapigo x d nethttpHandlerFuncServeHTTP xc x fa xc c xc c usrlocalgosrcnethttpservergo x githubcomgorillamuxRouterServeHTTP xc ee x fa xc c xc a homenakamaht hammertimesrcgithubcomgorillamuxmuxgo xe nethttpserverHandlerServeHTTP xc a c x fa xc c xc a usrlocalgosrcnethttpservergo xa nethttpconnserve xc ed x aca xc cc usrlocalgosrcnethttpservergo x created by nethttpServerServe usrlocalgosrcnethttpservergo x Hi i encounter this issue when using prepare statement like below sqldb hDB tx sqldbBeginx stmt err txPrepareINSERT INTO terisktestexecution testsuitename service status createtime xraykey environment VALUES now simulation aja returning executionid if err nil fmtPrintlnerr errMessage ErrorMessageMessage internal server error jsonNewEncoderwEncodeerrMessage return defer stmtClose var testinsert TestSuiteStatusService params service Environment testSuiteEnvironment err stmtQueryRowtestSuiteTestSuite testSuiteService testSuiteEnvironmentScan testinsertID if err nil logFatalerr txCommit jsonNewEncoderwEncodetestinsert any idea why this happen small fix for godror support after goracle package name changed while goracle is deprecated because of naming trademark issues Project goracle is deprecated because of naming trademark issues and now it has name godror But sqlx not supports it for rebind and not changes placeholder to named params Add SCRAMSHA authentication to the pq library See In the course of attempting to address before abandoning that see my comment there jmoironsqlxissues issuecomment I added tests to ensure is working properly To ignore comments understand Unicode and have fewer false positives This doesnt meet the original contract at the moment The original expected any colon to be doubled up to be escaped The doublecolon wasnt strictly necessary but seemed to be as a result of not properly parsing string literals and comments Its probably worth maintaining backward compatibility but having to doublecolon could trip up someone new to the package Theres also likely more cases of how string literals can be defined based on the driver This implementation understands Postgres Related issues This one can be done fairly easily too first off coming from databasesql I am really enjoying the benefits leveraged by using sqlx thank you the team and contributors for all the work you put into this library Ive especially enjoyed the fact that this library can mostly be dropped in and used sidebyside with existing databasesql code that being said it seems Ive run into a bit of a snag it appears that Postgres arrays wont properly scan into my structs Using this as a example struct definition closely representing my scenario go type Person struct Name string dbname Languages string dblanguages Using this as an example table definition closely representing my scenario pgsql CREATE TABLE person name text NOT NULL languages text NOT NULL Using this example Select call closely representing my scenario go people Person if err txSelect people SELECT FROM person err nil return err I receive this error sql Scan error on column index name languages unsupported Scan storing driverValue type uint into type string changing the struct definition to use pqStringArray does solve the issue go type Person struct Name string dbname Languages pqStringArray dblanguages but forces a dependency on the rest of my code to rely on pq which I dont find ideal normally in databasesqlland you would just wrap the binding struct field with pqArray and the helper function would be responsible for converting to and from the type but in this case I have no way of using that helper function or do I Im not sure if this is a bug or by design if its by design is there any advice you could impart to make this easier to manage any advice would be appreciated thanks in advance