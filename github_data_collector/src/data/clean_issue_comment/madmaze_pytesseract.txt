Please update whenever you have time Problem Sometimes its difficult to analyse compare and evaluate the results of Tesseract How good is the recognition Which page segmentation mode is the best Which OCR engine is the best How is the confidence of each segmentation Where in the image are the bounding boxes Solution I would like to gather the results of the method imagetodataoutputtypeOutputDICT and generate a standalone HTML site where the results are shown in a canvas element Limitations Tesseract because of the use of method imagetodata Image data type JPEG GIF PNG because of the limited browser support source Testing is limited What do you think about a visual representation And is pytesseract the right place for this requirement or is it out of scope because Im not sure For me pytesseract is low level API which is a good design What do you think It would be useful to be able to gather the deskew information for a page from psm Hi I am wondering why you dont use stdin argument to send the image to tesseract instead of saving it on the disk Hi Tesseract feature Tesseract allows to make a single call and have multiple output format for example tesseract yourimagetif out pdf tsv This will generate an outpdf and an outtsv hence at the same time retrieve OCR results in a readable format by python and a searchable pdf Doing both formats at the same time is interesting because according to my experiences it is twice faster I believe that it is due to avoiding redoing the OCR computation Not possible with pytesseract But using this feature is not possible with pytesseract since you expose only specific functions one for each task Potential solutions Edit function imagetopdforhocr to make it accept extension such as pdf tsv Meaning modifying if extension not in pdf hocr extension txt Expose function runtesseract and with some precaution on extension runandgetoutput Create a new specific function which handle list of formats Look mama no config files I was wrestling with config files for some of the settings when I ran across this google group discussion about tesseract using java and it made my mouth water Heres a code snippet from their discussion tesseract new Tesseract tesseractsetOcrEngineModeTessAPITessOcrEngineModeOEMTESSERACTONLY tesseractsetPageSegMode tesseractsetTessVariableloadsystemdawg tesseractsetTessVariableloadfreqdawg tesseractsetTessVariableloadpuncdawg tesseractsetTessVariableloadnumberdawg At first you may think well thats cool I guess but you can really do the same thing by just defining a long string of configs and calling it whenever you need it For example psm oem c loadsystemdawg loadfreqdawg loadpuncdawg In the tesseract documentation it mentions that you cant change init only parameters with tesseract executable option c And those init only parameters would include some of the ones Ive been messing with I think that most people would say that it would be nice to be able to set your variables for your config file directly in python using a setconfigvariable method instead of having to go make a config file Since some of the variables that are being set in the code above are in fact init only the Java guys must be creating a config file I did not sniff through their code to verify this however from java code I havent done it yet because Im not too familiar with the code inside pytesseract but right now making a temporary config file and letting it be loadable via a setconfigvariable method doesnt seem very hard from my perspective Heres the high level logic Im thinking about When pytesseract is imported check the config folder to see if a temptxt file exists If so wipe it clean If not create one When someone calls the tsrsetconfigvariable method just write the variable a space and the value on a new line in the temptxt file You could also have a method to delete the variable from the file and thus return tesseract to the default When any of the OCR functions are called if the user does not manually supply another config file use the temptxt as the config file unless its empty Why this would be a good feature For me and others like me who wrote their first line of code months ago even little trips to the backend of config files or source code can be confusing and take lots of time Theres a lot of super ridiculously lazy people out there just like me who would rather not know anything about how the programs and libraries work which theyre using but just want to use them to make other interesting applications But maybe its actually not very easy to implement Is this actually possible 