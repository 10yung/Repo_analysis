It says javascipt instead of javascript Following software design best practices Im not going to be rolling my own noop you jsut dont do that This addresses No VW is complete without its badge of honour Check Engine Light This repository should have a check engine light on the README Disclaimer My work with nodenoop is a noop Currently this package makes all tests pass thus causing a possible reduction of the need for test engineers Instead true to its name the package should only automatically pass tests if the package is sufficiently confident the adverse effects of a test failing are severe enough to cause serious injury to at least num human beings or professionally trained monkeys The European market has taught us many good things about how to engineer great motor vehicles But it is now time to show the world how Americans create great software I suggest a package inspired by volkswagen to help ship great American products globally This software will contain security vulnerabilities disclosed by fellow American software companies bugs that have been filled from years back and dependencies on ancient systems I suggest a package called Microsoft I ve added a repo URI parameter to the example code for the Volkswagen badge URI to ensure that the correct status for a given project is reported After all nobody wants to accidentally report the CI status of a different project In the future this could be extended to projects not hosted on GitHub Action required Switch to the new Greenkeeper now This version of Greenkeper will be shutdown on May st With Integrations firstclass bot support landed on GitHub and we ve rewritten Greenkeeper to take full advantage of it Simpler setup fewer pullrequests faster than everbrbrimg src Hello lovely humans chai just published its new version table tr th alignleft State th td Update rocket td tr tr th alignleft Dependency td td chai td tr tr th alignleft New version td td td tr tr th alignleft Type td td devDependency td tr table This version is not covered by your current version range Without accepting this pull request your project will work just like it did before There might be a bunch of new features fixes and perf improvements that the maintainers worked on for you though I recommend you look into these changes and try to get onto the latest version of chai Given that you have a decent test suite a passing build is a strong indicator that you can take advantage of these changes by merging the proposed change into your project Otherwise this branch is a great starting point for you to work on the update Do you have any ideas how I could improve these pull requests Did I report anything you think isn t right Are you unsure about how things are supposed to work There is a collection of frequently asked questions and while I m just a bot there is a group of people who are happy to teach me new things Let them know Good luck with your project sparkles You rock palmtree The new version differs by commits b b d codefix remove browser field code d ace codeUpdate supported node version badge in README FIX code ab fbad codeMerge pull request from chaijschoreuncommenttravisdeploycode ca f codechore uncomment travis linescode ff codeMerge pull request from lucasfcostarelease code fe b codechai code a codeMerge pull request from lucasfcostaremovelibbumpcode ba a codeRemove bump command to change libchaijscode codeMerge pull request from zetamorphassertnestedIncludeownIncludecode f adfd codefix PhantomJS x incompatibility code b codeAssert made documentation more descriptivecode e codetest added custom message test to negated nested deep ownincludecode codetest added message argument to negated nested deep own and deepOwnIncludecode bb codeassert interface add deepOwnInclude and notdeepOwnIncludecode b codeassert interface add ownInclude and notOwnIncludecode There are commits in total See the full diff Action required Switch to the new Greenkeeper now This version of Greenkeper will be shutdown on May st With Integrations firstclass bot support landed on GitHub and we ve rewritten Greenkeeper to take full advantage of it Simpler setup fewer pullrequests faster than everbrbrimg src Hello lovely humans chai just published its new version table tr th alignleft State th td Update rocket td tr tr th alignleft Dependency td td chai td tr tr th alignleft New version td td td tr tr th alignleft Type td td devDependency td tr table This version is not covered by your current version range Without accepting this pull request your project will work just like it did before There might be a bunch of new features fixes and perf improvements that the maintainers worked on for you though I recommend you look into these changes and try to get onto the latest version of chai Given that you have a decent test suite a passing build is a strong indicator that you can take advantage of these changes by merging the proposed change into your project Otherwise this branch is a great starting point for you to work on the update Do you have any ideas how I could improve these pull requests Did I report anything you think isn t right Are you unsure about how things are supposed to work There is a collection of frequently asked questions and while I m just a bot there is a group of people who are happy to teach me new things Let them know Good luck with your project sparkles You rock palmtree The new version differs by commits ab fbad codeMerge pull request from chaijschoreuncommenttravisdeploycode ca f codechore uncomment travis linescode ff codeMerge pull request from lucasfcostarelease code fe b codechai code a codeMerge pull request from lucasfcostaremovelibbumpcode ba a codeRemove bump command to change libchaijscode codeMerge pull request from zetamorphassertnestedIncludeownIncludecode f adfd codefix PhantomJS x incompatibility code b codeAssert made documentation more descriptivecode e codetest added custom message test to negated nested deep ownincludecode codetest added message argument to negated nested deep own and deepOwnIncludecode bb codeassert interface add deepOwnInclude and notdeepOwnIncludecode b codeassert interface add ownInclude and notOwnIncludecode d fa codeassert interface add deepNestedInclude and notDeepNestedIncludecode b codeassert interface add nestedInclude and notNestedIncludecode There are commits in total See the full diff 