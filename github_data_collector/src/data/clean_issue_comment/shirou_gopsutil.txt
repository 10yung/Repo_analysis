This fix is to address issue mentioned in originally comes from To fix this issue The commented block has problems so should be disabled Will not work in case we track disk info on the host from container as dev will be mapped into other mount point Useful info about vg name removed if we follow symlink here the example ls la devmapperdm vgroot lrwxrwxrwx root root Oct devmapperdm vgroot dm Issue is opened Is your feature request related to a problem Please describe While trying to all of the information of all my processes in my Windows PC using gopsutilprocess I observed about CPU usage and s runtime After introducing gos concurrency and removing Cmdline and IOCounters calls which used most of the runtime I was able to reduce it to about s However CPU usage stayed I did CPU profiling with pprof and found getFromSnapProcess was using the most resources Right now it discards of the values ppid name and num threads returned by a windowsProcessEntry object in each call which is found by iterating through all of the processess in the PC This causes a O N N complexity while it is possible to iterate for once and keep the data for further calls with just a ON complexity with only a slight increase in memory usage Describe the solution youd like I wrote an external replacement function for getFromSnapProcess which keeps its data as a map with referencing I observed a drop in CPU from to while increasing total memory usage by about MB Runtime also dropped from s to about s However I dont have the time to prepare this for gopsutil at the moment Therefore I wanted to add this as a feature request Describe the bug This line is trying to evaluate link not respecting the case when running in container Expected behavior Disk statistics can be gathered when running in container and host fs is mounted inside container To Reproduce Environment please complete the following information X Linux paste contents of etcosrelease and the result of uname a Linux HOSTNAME generic Ubuntu SMP Tue Jun UTC x x x GNULinux rootlogs cat etcosrelease NAMEUbuntu VERSION LTS Xenial Xerus IDubuntu IDLIKEdebian PRETTYNAMEUbuntu LTS VERSIONID HOMEURL SUPPORTURL BUGREPORTURL VERSIONCODENAMExenial UBUNTUCODENAMExenial Possible solution Either to remove the entire block this is preferable as symlink contains the name of LVM and it is not making sense to eval it to the name of device or to change the abovementioned line line to go devpath err filepathEvalSymlinkscommonGetEnvHOSTMOUNTPREFIXdDevice Describe the bug In linux process executable is detected by evaluating procPIDexe In some cases this symbolic link is not in a proper state that leads to error when resolving it while process is still running To Reproduce go import githubcomshirougopsutilprocess procerr processNewProcess name err procExe rootlogs ls proc ls cannot read symbolic link proc exe No such file or directory attr clearrefs cpuset fd limits mem net oomscore projidmap sessionid stat task autogroup cmdline cwd fdinfo loginuid mountinfo ns oomscoreadj root setgroups statm timers auxv comm environ gidmap mapfiles mounts numamaps pagemap sched smaps status uidmap cgroup coredumpfilter exe io maps mountstats oomadj personality schedstat stack syscall wchan rootlogs ls la proc exe ls cannot read symbolic link proc exe No such file or directory lrwxrwxrwx root root Jan proc exe Expected behavior Get valid executable name Environment please complete the following information X Linux paste contents of etcosrelease and the result of uname a Linux HOSTNAME generic Ubuntu SMP Tue Jun UTC x x x GNULinux rootlogs cat etcosrelease NAMEUbuntu VERSION LTS Xenial Xerus IDubuntu IDLIKEdebian PRETTYNAMEUbuntu LTS VERSIONID HOMEURL SUPPORTURL BUGREPORTURL VERSIONCODENAMExenial UBUNTUCODENAMExenial Possible solution To use procPIDstat instead that provides executable name rootlogs cat proc stat kworker H S r The code can be found here go statPath fmtSprintfprocdstat ppid dataBytes err ioutilReadFilestatPath if err nil return err First parse out the image name data stringdataBytes binStart stringsIndexRunedata binEnd stringsIndexRunedata binStart pbinary data binStart binStartbinEnd Describe the bug vendorgithubcomshirougopsutilprocessprocesslinuxgo undefined Data vendorgithubcomshirougopsutilprocessprocesslinuxgo undefined Stack vendorgithubcomshirougopsutilprocessprocesslinuxgo undefined RSS vendorgithubcomshirougopsutilprocessprocesslinuxgo undefined Locked vendorgithubcomshirougopsutilprocessprocesslinuxgo undefined VMS vendorgithubcomshirougopsutilprocessprocesslinuxgo undefined PendingProcess vendorgithubcomshirougopsutilprocessprocesslinuxgo undefined numCtxSwitches vendorgithubcomshirougopsutilprocessprocesslinuxgo undefined NumFDsWithContext vendorgithubcomshirougopsutilprocessprocesslinuxgo undefined NumThreadsWithContext vendorgithubcomshirougopsutilprocessprocesslinuxgo undefined numThreads vendorgithubcomshirougopsutilprocessprocesslinuxgo too many errors Expected behavior Compile failed Environment please complete the following information Linux TENCENT site tlinux tl SMP Fri Oct CST x x x GNULinux Additional context go version go linuxamd This PR introduces netlink support for Linux Connections To use netlink users should add build tag tagsnetlink Thanks for sample code of BrianWilliams in I choose build tag to change implementation Because current implementation is enough for most of users I think Some of users want to use netlink to work with their big system They must be their environment and they can compile binary by their own so adding build tag is not so big problem I think This is what only I think There must be other objection Comments are welcome as always Limitation for using netlink fd is always to get fd becomes slow support Linux or later only inetdiagreqv is required until that inetdiag has not Protocol field TODO benchmark add GitHub actions again