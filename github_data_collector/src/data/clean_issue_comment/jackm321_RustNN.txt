At first I did not plan to create a pull request and to keep everything clean and abstract But I think the improvements got really useful so I decided to clean up and update the doc and README accordingly but I dont know if everything is still good enough If there is something minor not ok please tell me so I can fix and you can merge safely This issue was automatically generated Feel free to close without ceremony if you do not agree with relicensing or if it is not possible for other reasons Respond to cmr with any questions or concerns or pop over to rustofftopic on IRC to discuss Youre receiving this because someone perhaps the project maintainer published a cratesio package with the license as MIT xor Apache and the repository field pointing here TLDR the Rust ecosystem is largely Apache Being available under that license is good for interoperation The MIT license as an addon can be nice for GPLv projects to use your code Why The MIT license requires reproducing countless copies of the same copyright header with different names in the copyright field for every MIT library in use The Apache license does not have this drawback However this is not the primary motivation for me creating these issues The Apache license also has protections from patent trolls and an explicit contribution licensing clause However the Apache license is incompatible with GPLv This is why Rust is duallicensed as MITApache the primary license being Apache MIT only for GPLv compat and doing so would be wise for this project This also makes this crate suitable for inclusion and unrestricted sharing in the Rust standard distribution and other projects using dual MITApache such as my personal ulterior motive the Robigalia project Some ask Does this really apply to binary redistributions Does MIT really require reproducing the whole thing Im not a lawyer and I cant give legal advice but some Google Android apps include open source attributions using this interpretation Others also agree with it But again the copyright notice redistribution is not the primary motivation for the duallicensing Its stronger protections to licensees and better interoperation with the wider Rust ecosystem How To do this get explicit approval from each contributor of copyrightable work as not all contributions qualify for copyright due to not being a creative work eg a typo fix and then add the following to your README License Licensed under either of Apache License Version LICENSEAPACHE LICENSEAPACHE or MIT license LICENSEMIT LICENSEMIT or at your option Contribution Unless you explicitly state otherwise any contribution intentionally submitted for inclusion in the work by you as defined in the Apache license shall be dual licensed as above without any additional terms or conditions and in your license headers if you have them use the following boilerplate based on that used in Rust Copyright RustNN Developers Licensed under the Apache License Version LICENSEAPACHE or or the MIT license LICENSEMIT or at your option This file may not be copied modified or distributed except according to those terms Its commonly asked whether license headers are required Im not comfortable making an official recommendation either way but the Apache license recommends it in their appendix on how to use the license Be sure to add the relevant LICENSEMITAPACHE files You can copy these from the Rust repo for a plaintext version And dont forget to update the license metadata in your Cargotoml to license MIT OR Apache Ill be going through projects which agree to be relicensed and have approval by the necessary contributors and doing this changes so feel free to leave the heavy lifting to me Contributor checkoff To agree to relicensing comment with I license past and future contributions under the dual MITApache license allowing licensees to chose either at their option Or if youre a contributor you can check the box in this repo next to your name My scripts will pick this exact phrase up and check your checkbox but Ill come through and manually review this issue later as well jackm guersam 