 Use GitHub Actions instead of Travis CI x Install Psalm using Phive as toolspsalm phive install copy psalm csfixer x Create Psalm configuration Add Psalm build step to GitHub Actionsbased CI workflow Add PHPCSFixer build step to GitHub Actionsbased CI workflow Q A phpcodecoverage version PHP version Driver Xdebug Xdebug version if used Installation Method Composer Usage Method PHPUnit PHPUnit version if used IDK if this issue should be on XDebug or phpcodecoverage Ill try here first For some reason when using XDebug if I test a triggererror the coverage report reports as not executed This does not happen with phpdbg Images will explain it better phpdbg qrr vendorbinphpunit whitelist DumbTestphp DumbTestphp coveragehtml coverage coveragephpdbg php vendorbinphpunit whitelist DumbTestphp DumbTestphp coveragehtml coverage coveragexdebug coveragexdebug Here is the code Im using for the test php use PHPUnit Framework TestCase class DumbClass public function triggerError triggererroranything class DumbClassTest extends TestCase public function testTriggerError dumbObj new DumbClass thisexpectExceptionMessageanything dumbObjtriggerError Q A phpcodecoverage version PHP version Driver Xdebug Xdebug version if used Installation Method Composer Usage Method other PHPUnit version if used Failed run code CodeCoverageappendCodeCoveragegetData waa append use the raw data and getData return the other type data OK just change some data to rawdata in class CodeCoverage so the other people do not mistake again php php public function stopbool append true linesToBeCovered array linesToBeUsed bool ignoreForceCoversAnnotation false array if isarraylinesToBeCovered linesToBeCovered false throw InvalidArgumentExceptioncreate array or false rawdata thisdriverstop thisappendrawdata null append linesToBeCovered linesToBeUsed ignoreForceCoversAnnotation thiscurrentId null return rawdata public function appendarray rawdata id null bool append true linesToBeCovered array linesToBeUsed bool ignoreForceCoversAnnotation false void public function setDataarray data void Im experiencing the same issue as seems to the SoapClient causing some issues I traced the error to this DomDocumentsave call This PR adds error checking to that call so that at least the issue is reported Before PHPUnit by Sebastian Bergmann and contributors Time ms Memory MB OK test assertion Generating code coverage report in PHPUnit XML format done ms After PHPUnit by Sebastian Bergmann and contributors Time ms Memory MB OK test assertion Generating code coverage report in PHPUnit XML format Unable to save the XML flush error Psalm was erroring about exception types in some coverage report formats in phpunit repo traced that to here It looks like the use of CodeCoverage RuntimeException and RuntimeException is is mixed making thrown exception types inconsistent This PR makes the exceptions consistent Ive touched some places without any coverage so the changes contain a lot test stuff Some report facades should now even be covered Q A phpcodecoverage version PHP version Driver Xdebug Xdebug version if used Installation Method Composer Usage Method PHPUnit PHPUnit version if used Target Class php php declarestricttypes namespace App Service class SoapClientService const string const URL var SoapClient protected soapClient null param string url return SoapClient throws InvalidArgumentException public function getSoapClientstring url null if issetthissoapClient try thissoapClient new SoapClient url selfURL catch Throwable error throw new InvalidArgumentExceptionFailed to initialize Soap Client return thissoapClient Target TestCase php php declarestricttypes namespace App Tests Service use App Service SoapClientService use PHPUnit Framework TestCase Unit test for SoapClientService class SoapClientServiceTest extends TestCase public function testGetSoapClient void client new SoapClientService thisexpectException InvalidArgumentExceptionclass clientgetSoapClientnowsdl Command for generate Code Coverage XML Report bash vendorbinphpunit v coveragexml buildcoveragexml After executing comand folder buildcoveragexml contains empty files Other reports HTML Clover PHP works as expected Also reproduced on the previous version of sebastianbergmannphpcodecoverage Q A phpcodecoverage version PHP version Driver Xdebug PHPDBG Xdebug version if used Installation Method Composer PHPUnit PHAR Usage Method PHPUnit other PHPUnit version if used xyz The results of the second visit will cover the first I dont want to be covered I want to know how I can not cover it Thank you git clone gitgithubcomsebastianbergmannmoneygit cd money phpunit c build wget xmllint noout schema tmpcloverxsd buildlogscloverxml buildlogscloverxml element coverage Schemas validity error Element coverage The attribute clover is required but missing buildlogscloverxml element package Schemas validity error Element package This element is not expected Expected is metrics buildlogscloverxml element coverage Schemas validity error Element coverage Missing child elements Expected is testproject buildlogscloverxml fails to validate Although the use of covers and coversNothing is really useful for generating good coverage reports there are also times when we want to ignore those settings For example i may wish to see exactly what my integration tests are covering My proposal would be to add a command line flag to phpunit for example ignorecovers or something like that Which would cause covers and coversNothing to be ignored when calculating the code coverage Slightly related to Q A phpcodecoverage version PHP version Driver Xdebug Xdebug version if used Installation Method Composer Usage Method PHPUnit PHPUnit version if used Hello Is there an easy way to customize the colors in stylecss My variant of colorblindness make it pretty difficult to differentiate between high coverage dff d and low coverage f dede as they both have very low saturation to Thank you