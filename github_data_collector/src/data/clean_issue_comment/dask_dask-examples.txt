I want to see if our current setup works with newer versions of tornado Fixes See With assuming that the full URL always is along the lines of which is not necessarily true This isnt ready for a few reasons Serialization issues upstream A lack of attention to actual image processsing applications A disucssion of memory issues at the bottom Mostly Im putting this up here now to generate conversation cc thewtex jakirkham I was trying a contrived example with the following codegot this long unexpected error Any idea in how to proceed import daskxgboost params objective binarylogistic maxdepth eta subsample minchildweight bst daskxgboosttrainclient params traindftodaskarray labeldftodaskarray numboostround pytb TypeError Traceback most recent call last ipythoninput eb f d in module minchildweight bst daskxgboosttrainclient params traindftodaskarray labeldftodaskarray numboostround appanaconda envsdasklibpython sitepackagesdaskxgboostcorepy in trainclient params data labels dmatrixkwargs kwargs return clientsync train client params data labels dmatrixkwargs kwargs appanaconda envsdasklibpython sitepackagesdistributedclientpy in syncself func asynchronous callbacktimeout args kwargs else return sync selfloop func args callbacktimeoutcallbacktimeout kwargs appanaconda envsdasklibpython sitepackagesdistributedutilspy in syncloop func callbacktimeout args kwargs if error typ exc tb error raise excwithtracebacktb else return result appanaconda envsdasklibpython sitepackagesdistributedutilspy in f if callbacktimeout is not None future genwithtimeouttimedeltasecondscallbacktimeout future result yield future except Exception as exc error sysexcinfo appanaconda envsdasklibpython sitepackagestornadogenpy in runself try value futureresult except Exception selfhadexception True appanaconda envsdasklibpython sitepackagestornadogenpy in runself if excinfo is not None try yielded selfgenthrowexcinfo finally Break up a reference to itself appanaconda envsdasklibpython sitepackagesdaskxgboostcorepy in trainclient params data labels dmatrixkwargs kwargs for part in parts if partstatus error yield part trigger error locally Because XGBoostpython doesnt yet allow iterative training we need to appanaconda envsdasklibpython sitepackagestornadogenpy in runself try value futureresult except Exception selfhadexception True appanaconda envsdasklibpython asynciotaskspy in wrapawaitableawaitable that will later be wrapped in a Task by ensurefuture return yield from awaitableawait appanaconda envsdasklibpython sitepackagesdistributedclientpy in awaitself def awaitself return selfresultawait appanaconda envsdasklibpython sitepackagesdistributedclientpy in resultself timeout result selfclientsyncselfresult callbacktimeouttimeout raiseitFalse if selfstatus error typ exc tb result raise excwithtracebacktb elif selfstatus cancelled TypeError cannot unpack noniterable coroutine object In the Stencil example the parallel code doesnt do anything to handle boundaries or overlapping I assume this means that at the block edges their could be some discrepancies Should this be mentioned or is it small enough to not be significant djhoese any interest There is also but maybe there is more that we could add there or other examples that we could add As a reminder examples in daskexamples are tested rendered statically to serve from examplesdaskorg and available for users as runnable binders Its nice way to reach users and a nice way to have a simple test with many other parts of the ecosystem It seems that our predefined workspace is no longer showing up on daskexamples When I run jupyter lab workspaces export I do find that its using the same workspace that we give it but its not showing up correctly ianrrose do you have any thoughts on why this might be Has JupyterLab changed how it interprets workspaces recently When Ive shown people examplesdaskorg they often dont realize that they can click on the Launch Binder button and get a live session This is despite our header at the top which says You can run this notebook in a live session or view it on Github I think that we might make this more prominent by Using a button similar to the Launch Binder button but more obvious to people who are unfamiliar with Binder Making that button very large Making that button stay on the screen even after the user scrolls down If only we knew someone with some basic web design skills cc jrbourbeau in case you or anyone around you has ideas 