 What are you trying to achieve Expected behavior Please fill Sometimes async elements overlaying another element intercept clicks even though ElementToBeClickable suggests that the underlying element is clickable its not What do you get instead Actual behavior Please fill The method to return true only when the element really is clickable When other items overlay it like fixed position elements the element is not clickable even though its in the DOM visible and ready How could the issue be reproduced Steps to reproduce Please fill everything relevant the exact code you use how you initialize the WebDriver HTML snippet or URL of the page where you encounter the issue etc Just overlay a button with a fixed element php You can insert your PHP code here or remove this block if it is not relevant for the issue Details Please fill relevant following versions Phpwebdriver version dev PHP version Selenium server version yttrium Operating system Mac OS X Mojave Browser used version Chrome Ive included an extra commit here because the W C mode doesnt take any arguments but JSONWire does but we were still including the args still Selenium website was changed so lets build example on something with less progressive design like wikipedia What are you trying to achieve Expected behavior If I have a cookie from webdriver I expect to read the SameSite attribute of the cookie What do you get instead Actual behavior In the SameSite attribute is not saved in the cookie Details Phpwebdriver version PHP version Operating system CentOS Browser used version Chromium Chromedriver used ChromeDriver Ive just been through the spec document comparing to the actions in the HttpCommandExecutor The following commands defined in the W C specification are currently missing x Switch to Parent Frame POST sessionsession idframeparent x Minimize Window POST sessionsession idwindowminimize Fullscreen Window POST sessionsession idwindowfullscreen x Get Named Cookie GET sessionsession idcookiename Release Actions DELETE sessionsession idactions x Take Element Screenshot GET sessionsession idelementelement idscreenshot Source Ref IMG When I Use takeScreenShot Method The Output Will Be Something Like That It Will Screenshot Top Left Corner Of The Page Not The Full Page This is request for comments about the next major version of phpwebdriver Once we understand what we wantneed to do we can divide the work among interested volunteers and get it rollin rocket Suggested objectives Support only W C WebDriver Support only the new protocol and drop support of JsonWire protocol This will allow us to focus our limited resources to make longterm working implementation of PHP language bindings In my opinion maintaining compatibility with the old protocol is not effective as the situation has developed rapidly since issue was originally written W C WebDriver standard was published on its already a year ago Support of the new protocol amongst browsers is getting better with every version of the respective browsers see or Chrome uses W C protocol by default since version released even though it could be disabled it wont work with Selenium and newer because of the missing passThrough mode Chromedriver will include W C WebDriver Actions API one of the last missing pieces of full implementation of the standard Firefox geckodriver support only W C protocol from the beginning IEServerDriver was in fact the first one with W C protocol support Selenium is now in maintenanceonly mode development is now focused on Selenium which will even improve W C protocol support and may start breaking JsonWire protocol support The last Firefox working with the JsonWire protocol is Firefox released in June over years ago Even the last Firefox Extended Support ESR version which supported JsonWireProtocol is over two years old x and no longer supported Most people probably run phpwebdriver against ChromeChromium which supports both protocols So I dont see an actual need for the JsonWire protocol Drop PHP and support Those version of PHP are no longer supported We may also drop PHP support as it is in securitysupport mode and only for few next months With PHP or we can use many of its new features most importantly types in method parameters and return values If someone cannot use those new versions of PHP he is probably working in rigid environment and maybe dont use the latest version of browsers so one can still use the x version of phpwebdriver Or has to upgrade manshrugging Clean object dependencies Historically this library object model is based on interfaces which often breaks LSP It also causes headaches for static analysis This could be taken care of in the new version Other suggestions Are there any other issues we should solve Any missing features see Java version changelog Or something which should be done together with BC break Please comment What are you trying to achieve Expected behavior Test website for presence of alert messages What do you get instead Actual behavior Falsy behavior when site contains elements such us inline style or more complicated DOM Tree How could the issue be reproduced Steps to reproduce When presenting simple page to webdriver for example only with scriptalert script tag script does correctly check for alert presence on the other hand embedding script in more complex DOM Tree such as this Bootstrap Snippet makes script fail to detect alert Alert is still present in user browser I had situations in which alert is not correctly detected by script but removing only inline css style it might be only line ended in changing script behavior to correct again php host this is the default capabilities DesiredCapabilitieschrome options new ChromeOptions all options required to work optionsaddArgumentsarray headless windowsize nosandbox prefs array permissionsdefaultstylesheet permissionsdefaultimage optionssetExperimentalOptionprefs prefs capabilitiessetCapabilityChromeOptionsCAPABILITY options driver RemoteWebDrivercreatehost capabilities drivergeturl function isAlertPresentdriver presentFlag false try driverwait untilWebDriverExpectedConditionalertIsPresent driverswitchToalertaccept presentFlag true catch Exception ex return presentFlag alertispresent isAlertPresentdriver close the browser driverquit Example of HTML file In this state Result of check fo alert will be False Removingcommenting only style tags will result in correct Alert detection true Details Please fill relevant following versions Phpwebdriver version PHP version Selenium server version Operating system Mac OS Mojave Ubuntu Browser used version ChromeDriver Google Chrome Has they been thought about having something like a findElementWithWait function I know there is there is the driverwaituntil logic and its not in the standard java api but this is a bit cumbersome to always write especially if the element you are looking for is a child of the parent element you are calling the find from In this case you will need to write some function like php parent thisdriverfindElementWebDriverByxpath thisdriverwaituntil function use parent try return parentfindElementWebDriverByxpath catch NoSuchElementException e return null parentfindElementelementPathclick And i know you can just refactor this out which I have done but would be great if we can call this method on a parent item directly ie php parent thisdriverfindElementWebDriverByxpath parentfindElementWithWaitWebDriverByxpathclick Do you think this is something worth implementing Details Please fill relevant following versions Phpwebdriver version PHP version Selenium server version Operating system Ubuntu Browser used version Chrome What are you trying to achieve Expected behavior After trycatch with Exception on get method you should able to continue use driver instance What do you get instead Actual behavior But after catch Exception and in next commands internal timeout occurred Facebook WebDriver Exception TimeOutException timeout on every HttpCommandExecutor commands How could the issue be reproduced Steps to reproduce create a php link in server with this content to get it with selenium we call it for example here html head titlePage with Timeouttitle head body script src body html Scenario with problem php link html response received but script link will not be complete before pageLoadTimeout value drivermanagetimeoutspageLoadTimeout try drivergetlink catch Exception e LogdebugException Timeout driverrefresh OR any other command to interact with browser Scenario without problem php link main url will not be load in long time drivermanagetimeoutspageLoadTimeout try drivergetlink catch Exception e LogdebugException Timeout driverrefresh OR any other command to interact with browser In both scenarios I get catch exception Log output as Exception Timeout text so Exception called in both of them In Laravel codes I used Exception for test but it has same result in TimeOutException WebDriverException WebDriverCurlException OTHERS I use this component in Laravel So its my error trace for every command after main timeout exception lines Error Facebook WebDriver Exception TimeOutException timeout Session info chrome Driver info chromedriver b bd cff b fc cb f a cc e platformLinux el elrepox x in PROJECTHOMEvendorfacebookwebdriverlibExceptionWebDriverExceptionphp Stack trace PROJECTHOMEvendorfacebookwebdriverlibRemoteHttpCommandExecutorphp Facebook WebDriver Exception WebDriverExceptionthrowException timeout n Sess Array PROJECTHOMEvendorfacebookwebdriverlibRemoteRemoteWebDriverphp Facebook WebDriver Remote HttpCommandExecutorexecuteObjectFacebook WebDriver Remote WebDriverCommand PROJECTHOMEvendorfacebookwebdriverlibRemoteRemoteExecuteMethodphp Facebook WebDriver Remote RemoteWebDriverexecuterefresh Array PROJECTHOMEvendorfacebookwebdriverlibWebDriverNavigationphp Facebook WebDriver Remote RemoteExecuteMethodexecuterefresh PROJECTHOMEappServicesSupplyProcessWaysMainProcessorphp Facebook WebDriver WebDriverNavigationrefresh Details Phpwebdriver version PHP version Selenium server version Operating system DockerSelenium dubnium Selenium Google Chrome ChromeDriver GeckoDriver 