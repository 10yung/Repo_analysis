In this commit The controltar variable is called into buildpath twice so that the build path is doubly prefixed to it The likely solution is to keep the commit but change the preceding case statement to only set the controltar variable to the base filename instead of calling buildpath on each compression type This change created a double path and that causes tar to exit with thus fail tmppackagedebbuild d edd f dc c c d a a bb tmppackagedebbuild d edd f dc c c d a a bb controltargz Writing control file pathtmppackagedebbuild d edd f dc c c d a a bb controlcontrol leveldebug filefpmpackagedebrb line methodblock in writecontrol Creating pathtmppackagedebbuild d edd f dc c c d a a bb tmppackagedebbuild d edd f dc c c d a a bb controltargz fromtmppackagedebbuild d edd f dc c c d a a bb control levelinfo filefpmpackagedebrb line methodblock in writecontroltarball The value can be a number from to inclusive The default mirrors the current behavior of If the rpmcompression value is set to none this value is ignored Setting the value to sped up RPM creation on my RPM from to minutes The default binarypayload setting for fpm RPM generation is w gzdio Im generating a very large RPM using fpm and with that setting the package takes minutes to create The same fpm command produces a debian package in minutes When I use rpmcompression none the RPM creation time drops to minutes but the package size doubles If I hack libfpmpackagerpmrb and change the gzip default value to w gzdio the RPM takes minutes and is within MB of the size of the original package The RPM default on my system is w xzdio while the xz default in fpm is w xzdio My first suggestion would be crank down the fpm defaults from to or across the board If fpm wants to keep the compression levels cranked all the way up then I would like a way to override the level so I can save minutes every time I create my RPM I tried specifying rpmrpmbuilddefine binarypayload w gzdio but that doesnt work because you cant override a macro definition on the rpmbuild command line that already is defined in the spec file In summary I can see tackling this a few ways Change the default to level Done Specify a new option rpmcompressionlevel that defaults to but can be set from to and will be used as number next to the w in w gzdio Specify the spec file macro to respect some new define like custombinarypayload that someone could set via the command line using rpmrpmbuilddefine and will override the given value of binarypayload if set Something like define binarypayload custombinarypayloadcustombinarypayload payloadcompression Hi Im packaging large RPMs on CentOS and Im having very poor performance For example a installation of LLVM or TexLive large amount of files at GB scale in total can take more than h to pack while the disk is basically idling For the same files if I pack them into deb on a Ubuntu they take negligible amount of time minutes vs hours Heres the args Im using debcompression gz rpmcompression none rpmdigest sha Also tried gz or xzmt and both yields way worse speed Any idea Im trying to use FPM as a Ruby lambda function in AWS Lambda makes me using FPM internals as API calls took this as an example Im able to produce RPMsDEBs however preinstpostinstsystemdsysv scripts arent inserted properly code for RPM package FPMPackageDirnew packageattributes prefix DEFAULTPREFIX packageattributes chdir TARBALLPATH packageinput skipped setup of name arch versions etc newospackage packageconvertFPMPackageRPM newospackageattributes rpmuser zoomdata newospackageattributes rpmgroup zoomdata newospackageiteration naminginfo iteration platformnamestable newospackageattributes rpmos linux newospackagescripts beforeinstall scriptspreinstallrpmsh newospackagescripts afterinstall scriptspostinstallsh newospackagescripts afterremove scriptspostuninstallsh outputting but resulting package has a path to scripts instead of scripts content in all POSTINPOSTUNPREIN Is there something Im missing Of course files are present readable and in place When using the pleaserun configuration the installed service is not stopped before uninstalling the package which can result in an error This hotfix adds the stop command to the generated cleanup script I encountered this while building an AUR package using this library cannot execute causeexit status outtimestamp T messageProcess failed usrbinfish failed exit code Full command was usrbinfish c LANGC bsdtar czf MTREE formatmtree optionsallusesettypeuidgidmodetimesizemd sha link INSTALL PKGINFO usr opt levelerror Which Ive traced down to this line It seems like safesystem assumes that whatever shell a system is using is bashlike I think the only issue here is the way the environment variable LANGC is set A workaround for this is to manually set the shell variable to point to bash before building In the case of fish set gx SHELL usrbinbash Just running fpm with or without options seg faults The various versions of ruby are rubygemjson el aarch rubylibs el aarch rubygempsych el aarch rubyirb el noarch rubygems el noarch rubygemrdoc el noarch rubydevel el aarch rubygembigdecimal el aarch rubygemioconsole el aarch ruby el aarch And fpm was installed via gem install nodocument fpm Heres the console output rootpkgrpm al fpm usrlocalsharegemsgemsffi libffilibraryrb BUG Segmentation fault ruby p aarch linux Control frame information c p s e CFUNC attach c p s e METHOD usrlocalsharegemsgemsffi libffilibraryrb c p s e RESCUE usrlocalsharegemsgemsfpm libfpmutilrb c p s e CLASS usrlocalsharegemsgemsfpm libfpmutilrb c p s e TOP usrlocalsharegemsgemsfpm libfpmutilrb FINISH c p s e CFUNC require c p s e METHOD usrsharerubygemsrubygemscoreextkernelrequirerb c p s e TOP usrlocalsharegemsgemsfpm libfpmpackagerb FINISH c p s e CFUNC require c p s e METHOD usrsharerubygemsrubygemscoreextkernelrequirerb c p s e TOP usrlocalsharegemsgemsfpm libfpmrb FINISH c p s e CFUNC require c p s e METHOD usrsharerubygemsrubygemscoreextkernelrequirerb c p s e TOP usrlocalsharegemsgemsfpm binfpm FINISH c p s e CFUNC load c p s E EVAL usrlocalbinfpm FINISH c p s E TOP FINISH Ruby level backtrace information usrlocalbinfpm in main usrlocalbinfpm in load usrlocalsharegemsgemsfpm binfpm in top required usrsharerubygemsrubygemscoreextkernelrequirerb in require usrsharerubygemsrubygemscoreextkernelrequirerb in require usrlocalsharegemsgemsfpm libfpmrb in top required usrsharerubygemsrubygemscoreextkernelrequirerb in require usrsharerubygemsrubygemscoreextkernelrequirerb in require usrlocalsharegemsgemsfpm libfpmpackagerb in top required usrsharerubygemsrubygemscoreextkernelrequirerb in require usrsharerubygemsrubygemscoreextkernelrequirerb in require usrlocalsharegemsgemsfpm libfpmutilrb in top required usrlocalsharegemsgemsfpm libfpmutilrb in moduleUtil usrlocalsharegemsgemsfpm libfpmutilrb in rescue in moduleUtil usrlocalsharegemsgemsffi libffilibraryrb in attachfunction usrlocalsharegemsgemsffi libffilibraryrb in attach C level backtrace information lib librubyso x ec x ffb d ec lib librubyso x x ffb c lib librubyso rbbug xb x ffb c cc lib librubyso x c x ffb d c x ffb eb usrlocallib gemsrubyffi libfficso x c x ffade c usrlocallib gemsrubyffi libfficsoffiprepclosureloc xa x ffade d usrlocallib gemsrubyffi libfficsoffiprepclosure x x ffade d usrlocallib gemsrubyffi libfficso x d x ffade d MethodHandlec usrlocallib gemsrubyffi libfficsorbffiClosureAlloc x x ffade e d ClosurePoolc usrlocallib gemsrubyffi libfficsorbffiMethodHandleAlloc x x ffade d MethodHandlec usrlocallib gemsrubyffi libfficso xfba x ffade fba Functionc lib librubyso x c fc x ffb d c fc lib librubyso x b x ffb d b lib librubyso x x ffb d lib librubyso x ee x ffb d ee lib librubyso x x ffb d lib librubyso rbiseqeval x c x ffb d b lib librubyso x c x ffb c c lib librubyso rbrequiresafe x e x ffb c b e lib librubyso x c d x ffb d c d lib librubyso x b x ffb d b lib librubyso x ee x ffb d ee lib librubyso x a c x ffb d a c lib librubyso rbiseqeval x c x ffb d b lib librubyso x c x ffb c c lib librubyso rbrequiresafe x e x ffb c b e lib librubyso x c d x ffb d c d lib librubyso x b x ffb d b lib librubyso x x ffb d lib librubyso x ee x ffb d ee lib librubyso x a c x ffb d a c lib librubyso rbiseqeval x c x ffb d b lib librubyso x c x ffb c c lib librubyso rbrequiresafe x e x ffb c b e lib librubyso x c d x ffb d c d lib librubyso x b x ffb d b lib librubyso x ee x ffb d ee lib librubyso x a c x ffb d a c lib librubyso rbiseqeval x c x ffb d b lib librubyso x c x ffb c c lib librubyso x a c x ffb c a c lib librubyso x c c x ffb d c c lib librubyso x b x ffb d b lib librubyso x x ffb d lib librubyso x ee x ffb d ee lib librubyso x a c x ffb d a c lib librubyso rbiseqevalmain x x ffb d b lib librubyso x eb x ffb c eb lib librubyso rubyexecnode x x ffb c c lib librubyso rubyrunnode x x ffb c cf usrbinruby x e lib libcso libcstartmain xf x ffb c usrbinruby x a c Other runtime information Loaded script usrlocalbinfpm Loaded features enumeratorso usrlib rubyencencdbso usrlib rubyenctranstransdbso usrlib rubyrbconfigrb usrsharerubygemsrubygemscompatibilityrb usrsharerubygemsrubygemsdefaultsrb usrsharerubygemsrubygemsdeprecaterb usrsharerubygemsrubygemserrorsrb usrsharerubygemsrubygemsversionrb usrsharerubygemsrubygemsrequirementrb usrsharerubygemsrubygemsplatformrb usrsharerubygemsrubygemsspecificationrb usrsharerubygemsrubygemsexceptionsrb usrsharerubygemsrubygemsdefaultsoperatingsystemrb usrsharerubygemsrubygemscoreextkernelgemrb usrsharerubythreadrb usrsharerubymonitorrb usrsharerubygemsrubygemscoreextkernelrequirerb usrsharerubygemsrubygemsrb usrsharerubygemsrubygemspathsupportrb usrsharerubygemsrubygemsdependencyrb usrlocalsharegemsgemsfpm libfpmnamespacerb usrlocalsharegemsgemschildprocess libchildprocessversionrb usrlocalsharegemsgemschildprocess libchildprocesserrorsrb usrlocalsharegemsgemschildprocess libchildprocessabstractprocessrb usrlocalsharegemsgemschildprocess libchildprocessabstractiorb usrlib rubyfcntlso usrsharerubyloggerrb usrlocalsharegemsgemschildprocess libchildprocessunixiorb usrlocalsharegemsgemschildprocess libchildprocessunixprocessrb usrlocalsharegemsgemschildprocess libchildprocessunixforkexecprocessrb usrlocalsharegemsgemschildprocess libchildprocessunixrb usrlocalsharegemsgemschildprocess libchildprocessrb usrlocallib gemsrubyffi libfficso usrlocalsharegemsgemsffi libffiplatformrb usrlocalsharegemsgemsffi libffidataconverterrb usrlocalsharegemsgemsffi libffitypesrb usrlocalsharegemsgemsffi libffilibraryrb usrlocalsharegemsgemsffi libffierrnorb usrlocalsharegemsgemsffi libffipointerrb usrlocalsharegemsgemsffi libffimemorypointerrb usrlocalsharegemsgemsffi libffistructlayoutrb usrlocalsharegemsgemsffi libffistructlayoutbuilderrb usrlocalsharegemsgemsffi libffistructbyreferencerb usrlocalsharegemsgemsffi libffistructrb usrlocalsharegemsgemsffi libffiunionrb usrlocalsharegemsgemsffi libffimanagedstructrb usrlocalsharegemsgemsffi libfficallbackrb usrlocalsharegemsgemsffi libffiiorb usrlocalsharegemsgemsffi libffiautopointerrb usrlocalsharegemsgemsffi libffivariadicrb usrlocalsharegemsgemsffi libffienumrb usrlocalsharegemsgemsffi libffiffirb usrlocalsharegemsgemsffi libffirb usrlib rubyetcso usrsharerubyfileutilsrb Process memory map rxp fd usrbinruby rp fd usrbinruby rwp fd usrbinruby ce rwp heap ffaddb ffaddc rwp ffaddc ffaddd rxp fd usrlib rubyetcso ffaddd ffadde rp fd usrlib rubyetcso ffadde ffaddf rwp fd usrlib rubyetcso ffaddf ffade rxp fd usrlib libgccs so ffade ffade rp fd usrlib libgccs so ffade ffade rwp fd usrlib libgccs so ffade ffade rxp fd usrlocallib gemsrubyffi libfficso ffade ffade rp fd usrlocallib gemsrubyffi libfficso ffade ffade rwp fd usrlocallib gemsrubyffi libfficso ffade ffade rxp fd usrlib rubyfcntlso ffade ffadea rp fd usrlib rubyfcntlso ffadea ffadeb rwp fd usrlib rubyfcntlso ffadeb ffadec rxp fd usrlib rubyenctranstransdbso ffadec ffaded rp fd usrlib rubyenctranstransdbso ffaded ffadee rwp fd usrlib rubyenctranstransdbso ffadee ffadef rxp fd usrlib rubyencencdbso ffadef ffadf rp fd usrlib rubyencencdbso ffadf ffadf rwp fd usrlib rubyencencdbso ffadf ffadf p ffadf ffae rwp stack ffae ffb e rp fd usrliblocalelocalearchive ffb e ffb f rxp fd usrlib libfreebl so ffb f ffb rwp fd usrlib libfreebl so ffb ffb a rxp fd usrlib libc so ffb a ffb a rp fd usrlib libc so ffb a ffb a rwp fd usrlib libc so ffb a ffb b rxp fd usrlib libm so ffb b ffb b rp fd usrlib libm so ffb b ffb b rwp a fd usrlib libm so ffb b ffb b rxp fd usrlib libcrypt so ffb b ffb b rp fd usrlib libcrypt so ffb b ffb b rwp fd usrlib libcrypt so ffb b ffb b rwp ffb b ffb ba rxp fd usrlib libdl so ffb ba ffb bb rp fd usrlib libdl so ffb bb ffb bc rwp fd usrlib libdl so ffb bc ffb bd rxp fd usrlib librt so ffb bd ffb be rp fd usrlib librt so ffb be ffb bf rwp fd usrlib librt so ffb bf ffb c rxp fd usrlib libpthread so ffb c ffb c rp fd usrlib libpthread so ffb c ffb c rwp fd usrlib libpthread so ffb c ffb e rxp fd usrlib librubyso ffb e ffb e rwp fd usrlib librubyso ffb e ffb ea rwp ffb ea ffb eb rp vvar ffb eb ffb ec rxp vdso ffb ec ffb ee rxp fd usrlib ld so ffb ee ffb ef rp fd usrlib ld so ffb ef ffb f rwp fd usrlib ld so ffcf f ffcf rwp NOTE You may have encountered a bug in the Ruby interpreter or extension libraries Bug reports are welcome For details fpm version Build warning Package version beta includes dashes converting to underscores levelwarn This causes yum update from beta to release to fail since does not update installed package beta note underscore I could not find an option to control this 