Resubmitting from timja to test the Jenkinsfile patch Proposed changelog entries Add the boolean disabled flag to applicable jobs REST API output Proposed upgrade guidelines NA Submitter checklist JIRA issue is well described x Changelog entries and upgrade guidelines are appropriate for the audience affected by the change users or developer depending on the change Examples Fillin the Proposed changelog entries section only if there are breaking changes or other changes which may require extra steps from users during the upgrade Appropriate autotests or explanation to why this change has no tests For dependency updates links to external changelogs and if possible full diffs Desired reviewers mention Comment If you need an accelerated review process by the community eg for critical bugs mention jenkinscicodereviewers Maintainer checklist Before the changes are marked as readyformerge There are at least approvals for the pull request and no outstanding requests for change Conversations in the pull request are over OR it is explicit that a reviewer does not block the change Changelog entries in the PR title andor Proposed changelog entries are correct Proper changelog labels are set so that the changelog can be generated automatically If the change needs additional upgrade steps from users upgradeguideneeded label is set and there is a Proposed upgrade guidelines section in the PR title example If it would make sense to backport the change to LTS a JIRA issue should exist and be labeled as ltscandidate Comment A great PR typically begins with the line below Replace XXXXX with the numeric part of the issues id you created on JIRA Please note that if you want your changes backported into LTS you will need to create a JIRA ticket for it Read for more Comment If the issue is not fully described in the ticket add more information here justification pull request links etc We do not require JIRA issues for minor improvements Bugfixes should have a JIRA issue backporting process Major new features should have a JIRA issue reference Proposed changelog entries Internal Change tests to retrieve maven over https due to upstream requiring https only Comment The changelogs will be integrated by the core maintainers after the merge See the changelog examples here Proposed upgrade guidelines NA Submitter checklist na JIRA issue is well described x Changelog entries and upgrade guidelines are appropriate for the audience affected by the change users or developer depending on the change Examples Fillin the Proposed changelog entries section only if there are breaking changes or other changes which may require extra steps from users during the upgrade Appropriate autotests or explanation to why this change has no tests For dependency updates links to external changelogs and if possible full diffs For new API and extension points Link to the reference implementation in opensource or example in Javadoc Desired reviewers jenkinscicoreprreviewers Comment If you need an accelerated review process by the community eg for critical bugs mention jenkinscicodereviewers Maintainer checklist Before the changes are marked as readyformerge There are at least approvals for the pull request and no outstanding requests for change Conversations in the pull request are over OR it is explicit that a reviewer does not block the change Changelog entries in the PR title andor Proposed changelog entries are correct Proper changelog labels are set so that the changelog can be generated automatically If the change needs additional upgrade steps from users upgradeguideneeded label is set and there is a Proposed upgrade guidelines section in the PR title example If it would make sense to backport the change to LTS a JIRA issue should exist and be labeled as ltscandidate Comment A great PR typically begins with the line below Replace XXXXX with the numeric part of the issues id you created on JIRA Please note that if you want your changes backported into LTS you will need to create a JIRA ticket for it Read for more See JENKINS The date behind the version was avoiding the match Comment If the issue is not fully described in the ticket add more information here justification pull request links etc We do not require JIRA issues for minor improvements Bugfixes should have a JIRA issue backporting process Major new features should have a JIRA issue reference Proposed changelog entries Bug Fix check of java version on ComputerLauncher for AdoptOpenJDK Comment The changelogs will be integrated by the core maintainers after the merge See the changelog examples here Proposed upgrade guidelines NA Submitter checklist x JIRA issue is well described x Changelog entries and upgrade guidelines are appropriate for the audience affected by the change users or developer depending on the change Examples Fillin the Proposed changelog entries section only if there are breaking changes or other changes which may require extra steps from users during the upgrade x Appropriate autotests or explanation to why this change has no tests NA For dependency updates links to external changelogs and if possible full diffs For new API and extension points Link to the reference implementation in opensource or example in Javadoc Desired reviewers jenkinscicoreprreviewers Comment If you need an accelerated review process by the community eg for critical bugs mention jenkinscicodereviewers Maintainer checklist Before the changes are marked as readyformerge There are at least approvals for the pull request and no outstanding requests for change Conversations in the pull request are over OR it is explicit that a reviewer does not block the change Changelog entries in the PR title andor Proposed changelog entries are correct Proper changelog labels are set so that the changelog can be generated automatically If the change needs additional upgrade steps from users upgradeguideneeded label is set and there is a Proposed upgrade guidelines section in the PR title example If it would make sense to backport the change to LTS a JIRA issue should exist and be labeled as ltscandidate Comment A great PR typically begins with the line below Replace XXXXX with the numeric part of the issues id you created on JIRA Please note that if you want your changes backported into LTS you will need to create a JIRA ticket for it Read for more See JENKINS It is a false positive about a missing java dependency on Java The monitoring plugin calls Java Melody FilterContext object which throws a CNFE but its caught and ignored so we have to avoid warning about that Pretty straightforward change I dont add any test because it may imply slowing down the build adding dependencies to Java Melody or adding the monitoring plugin with very little value Comment If the issue is not fully described in the ticket add more information here justification pull request links etc We do not require JIRA issues for minor improvements Bugfixes should have a JIRA issue backporting process Major new features should have a JIRA issue reference Proposed changelog entries Internal Prevent falsepositive warnings about missing classes on Java triggered by JavaMelody when Monitoring Plugin is installed Comment The changelogs will be integrated by the core maintainers after the merge See the changelog examples here Proposed upgrade guidelines NA Submitter checklist x JIRA issue is well described x Changelog entries and upgrade guidelines are appropriate for the audience affected by the change users or developer depending on the change Examples Fillin the Proposed changelog entries section only if there are breaking changes or other changes which may require extra steps from users during the upgrade x Appropriate autotests or explanation to why this change has no tests x For dependency updates links to external changelogs and if possible full diffs For new API and extension points Link to the reference implementation in opensource or example in Javadoc Desired reviewers jenkinscicoreprreviewers Comment If you need an accelerated review process by the community eg for critical bugs mention jenkinscicodereviewers Maintainer checklist Before the changes are marked as readyformerge There are at least approvals for the pull request and no outstanding requests for change Conversations in the pull request are over OR it is explicit that a reviewer does not block the change Changelog entries in the PR title andor Proposed changelog entries are correct Proper changelog labels are set so that the changelog can be generated automatically If the change needs additional upgrade steps from users upgradeguideneeded label is set and there is a Proposed upgrade guidelines section in the PR title example If it would make sense to backport the change to LTS a JIRA issue should exist and be labeled as ltscandidate In the CLI library there are different modes These days they are SSH and HTTP Unless the noAuthKey parameter is passed the CLI program loads a private key if it can This private key is only useful if the mode is SSH but it still loads it for HTTP without the extra parameter This changes it to only load the key for SSH mode The current behavior had me really confused recently when using the CLI client HTTP mode is supposed to be the default but it was asking to load the private key It appeared that it was always using SSH when it wasnt Proposed changelog entries CLI library now only loads a private key if using SSH mode Proposed upgrade guidelines NA Submitter checklist na JIRA issue is well described x Changelog entries and upgrade guidelines are appropriate for the audience affected by the change users or developer depending on the change Examples Fillin the Proposed changelog entries section only if there are breaking changes or other changes which may require extra steps from users during the upgrade x Appropriate autotests or explanation to why this change has no tests Its difficult to test this change Its hard to test at this level to begin with and the behavior can be system or user dependent With the improvement it would mostly be testing for the nonexistence of something na For dependency updates links to external changelogs and if possible full diffs Maintainer checklist Before the changes are marked as readyformerge There are at least approvals for the pull request and no outstanding requests for change Conversations in the pull request are over OR it is explicit that a reviewer does not block the change Changelog entries in the PR title andor Proposed changelog entries are correct Proper changelog labels are set so that the changelog can be generated automatically If the change needs additional upgrade steps from users upgradeguideneeded label is set and there is a Proposed upgrade guidelines section in the PR title example If it would make sense to backport the change to LTS a JIRA issue should exist and be labeled as ltscandidate I fixed another Spotbugs Issue but this might have sideeffects See JENKINS Proposed changelog entries The path in the Redirect Header is now URLEncoded Proposed upgrade guidelines NA Maintainer checklist Before the changes are marked as readyformerge There are at least approvals for the pull request and no outstanding requests for change Conversations in the pull request are over OR it is explicit that a reviewer does not block the change Changelog entries in the PR title andor Proposed changelog entries are correct Proper changelog labels are set so that the changelog can be generated automatically If the change needs additional upgrade steps from users upgradeguideneeded label is set and there is a Proposed upgrade guidelines section in the PR title example If it would make sense to backport the change to LTS a JIRA issue should exist and be labeled as ltscandidate See JENKINS This PR updates the frontend toolchain to use webpack It is supposed to be a nonbreaking change that shouldnt affect plugins The changes are limited to different static assets being built only on Jenkins core Proposed changelog entries Major improvement frontend toolchain upgraded to use webpack Submitter checklist x JIRA issue is well described x Changelog entry appropriate for the audience affected by the change users or developer depending on the change Examples Use the Internal prefix if the change has no uservisible impact API test frameworks etc x Appropriate autotests or explanation to why this change has no tests For dependency updates links to external changelogs and if possible full diffs Desired reviewers halkeye uhafner timja TODOs Add documentation of how to build on development mode yarn start x Migrate and enable the JS unit tests Migrate and enable the linter maybe replace jshint with eslint Important changes Stops using libraries from the jslibs repo Bring jquery handlebars etc from NPM instead One exception is the bootstrapdetached library I needed to inline it because I wasnt able to load the actual bootstrap JS code Font files were moved to the warsrcmainfonts folder so that they can be processed by the LESS loader They are copied to their previous location at build time so this is not a breaking change Screenshot of build results Comment A great PR typically begins with the line below Replace XXXXX with the numeric part of the issues id you created on JIRA Please note that if you want your changes backported into LTS you will need to create a JIRA ticket for it Read for more See JENKINSXXXXX Comment If the issue is not fully described in the ticket add more information here justification pull request links etc We do not require JIRA issues for minor improvements Bugfixes should have a JIRA issue backporting process Major new features should have a JIRA issue reference Proposed changelog entries Entry Major improvement add configurationascode as suggested Comment The changelogs will be integrated by the core maintainers after the merge See the changelog examples here Submitter checklist JIRA issue is well described x Changelog entry appropriate for the audience affected by the change users or developer depending on the change Examples Use the Internal prefix if the change has no uservisible impact API test frameworks etc x Appropriate autotests or explanation to why this change has no tests For dependency updates links to external changelogs and if possible full diffs For new API and extension points Link to the reference implementation in opensource or example in Javadoc Desired reviewers olegnenashev Comment If you need an accelerated review process by the community eg for critical bugs mention jenkinscicodereviewers Proposed changelog entries Submitter checklist JIRA issue is well described Changelog entry appropriate for the audience affected by the change users or developer depending on the change Examples Use the Internal prefix if the change has no uservisible impact API test frameworks etc Appropriate autotests or explanation to why this change has no tests For dependency updates links to external changelogs and if possible full diffs Desired reviewers 