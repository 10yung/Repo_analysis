I think it would be better to use PNG for screenshots rather than GIF This has two advantages To allow screens with more than onscreen colors to be preserved The maximum amount of colors that can be shown is using TICSCNOVR together For tweeting multiple screenshots at once on Twitter You can only tweet one GIF at a time so I would have to spend a tedious amount of time converting my screenshots to PNG You can still keep GIF with cover images F and animated videos F Request I want to be able to execute console commands from a program written in a code editor External files can be read using the import command while the program is running making it easy to create a fulllength adventure game Please consider Mouse returns values in excess of x and y up to a maximum value of When the cursor is to the left of the visible area if returns Shouldnt this be reporting screen coords rathr than wrapped window coords Version dev on Linux bit It would be nice to be able to suppress the TIC bootcartridge loading messages in the PRO version For game jams and standalone apps users may not know what a fantasy console is and might be confused or put off by these messages Is there also a way to suppress the buttonkey images that are overlaid when starting a game There are two bit registers for this feature present at x FF and x FF in addition to leftcenterright buttons Why arent they directly accessible The keyboard buffer at x FF to x FF B in RAM can store the Esc key and F to F keys to But the key and keyp API functions only go up to Attempting to read above produces the error message unknown keyboard code Hello I am here to suggest an enhancement Id be great if we had some sort of way to capture the mouse inside the TIC window and a function that returns its offset relative to its previous location or something similar Useful for D games or visualisation tools I know that the focus of TIC is to mimic a retro console and some people may find that such advanced functions do not fit the style but we already have functions for interacting with the mouse and entire keyboard as well as rendering textured triangles textri so you might as well consider my humble suggestion Regardless of the final decision thanks for your precious time D Fixes the cursor getting out of sync when undoing and redoing in the code window Under the hood this is quite complicated but I hope it produces the desired effect and also it may enable some other undo improvements in the future The principle is that when undoing a code change you want the cursor to end up where it was before the code change and when redoing a code change you want the cursor to end up where it was after the change To accomplish this cursor undo is stored with a TAG before or after When the code is modified by any means both a BEFORE and an AFTER cursor tag are added When undoing the cursor history is rewound to the next BEFORE tag and when redoing it is forwarded to the next AFTER tag One issue that is handled is the case of an edit after undoing Normally edits creates a BABA alternation in the cursor undo history If the user makes some changes undoes a change and then makes more changes you can get a BABBA where the BB is the point of the undone change To resolve this when the tag being added to the history matches the latest tag in the history the latest tag is replaced so there wont be two of the same tag in the sequence Im on the fence about whether this behavior belongs in the history system or in the code but there are no other users of the tags yet so Ill leave it as written In the future the tags system might be used to implement word undo ala VSCode or stroke undo instead of perpixel in the sprite editor But Im not sure these features might better benefit from an overhaul of the undo system Id need to research other possibilities As a simplification code changes are now flagged in a bool which triggers all the syntax highlighting undo etc This may have fixed a few places where these were applied redundantly I am trying to build from sources and have reached the make command however i encounter an error usrbinld cannot find lbcmhost collect error ld returned exit status make CMakeFilesplayersdldirbuildmake binplayersdl Error make CMakeFilesMakefile CMakeFilesplayersdldirall Error make Makefile all Error I have found a similar error on this forum but the solution was confusing Here it is I dont understand the solution where would i put that code I tried placing it on line but got this error usrbinld liblibSDL aSDLdynapico undefined reference to symbol dlopenGLIBC usrbinld libarmlinuxgnueabihflibdlso error adding symbols DSO missing from command line collect error ld returned exit status make CMakeFilesplayersdldirbuildmake binplayersdl Error make CMakeFilesMakefile CMakeFilesplayersdldirall Error make Makefile all Error I dont know what to do and i appreciate the help Love what youre doing with TIC i just wish i could access it Thanks After the effectcolumn update Ive noticed that some carts like this one dont produce any softwaregenerated sound anymore The reason for this is because of a change in the stereo registers at x FF to x FF B The bit values for the left and right balance levels used to be inverted prior to the update becomes becomes etc As a result poking x the default value to either of the four stereo registers causes the level to be the maximum volume on both sides Now after the update the leftright level registers arent inverted anymore This means writing x will directly set both sides to mute and now youll need to write xFF to set both sides to max Wait what Pre dev carts dont write here The Fallspire demo isnt affected by this change because that calls sfx on all four channels therefore setting all four stereo registers to xFF