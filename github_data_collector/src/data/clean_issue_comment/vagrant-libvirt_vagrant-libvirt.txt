 Steps to reproduce create vagrant file as instructed by README file Vagrantconfigure do config configvmdefine testvm do testvm testvmvmbox fedora cloudbase end end After the vagrant up providerlibvirt command the vagrant box wont be able to download But others boxes is fine For example the following Vagrantfile can be successfully downloaded Vagrantconfigure do config configvmdefine testvm do testvm testvmvmbox centos end end Ive been putting this off for a while now as I keep hoping to get back to maintaining this project The sad reality is that Im no longer working with it nor have a system where I could run to bring it up to date to catch various issues So this is a call out for others to help maintain this project and if you have the time make it easier for others to help out in a smaller capacity by improving the tests being able to have some of the free CI tooling take care of running through running vagrantlibvirt on multiple OSs as set up in either by rewriting it to use a matrix in Travis or something else to exercise the installation of this plugin vagrant version Vagrant vagrant plugin list vagrantlibvirt system From Vagrantfile configvmdefine foo autostart false do foo lots of it expunged foovmsyncedfolder code srvproject type p disabled false owner vagrant accessmode squash Running vagrant up with the irrelevant lines snipped out vagrant up foo snip python libvirt srvproject opts type p disabledfalse ownervagrant accessmodesquash guestpathsrvproject hostpathhomecandeirafoocode vagrantfiletrue targetsrvproject mounttrue readonlynil mounttagdbba a d f f a f eaff snip usrsharerubygemsintegrationallgemsvagrant pluginscommunicatorssshcommunicatorrb in execute The following SSH command responded with a nonzero exit status VagrantErrorsLinuxMountFailed Vagrant assumes that this means the command failed mount t p o transvirtioaccessvagrantversion p L dbba a d f f a f eaff srvproject Notice how the mount command passes the string vagrant as an access type The code responsible for this seems to be here I tried to install a simple fedora box on a fedora machine and its failing even tried a brand new install It seems to work fine on RHEL which is the only alternative I had available or on OSX with the virtual box provider Version information rpm q vagrant vagrantlibvirt libvirt qemukvm vagrant fc noarch vagrantlibvirt fc noarch libvirt fc x qemukvm fc x vagrant version vagrant plugin list Installed Version Vagrant was unable to check for the latest version of Vagrant Please check manually at vagrantlibvirt system vagrantreload global vagrantsshfs global Replication step install latest fedora with updates mkdir test cd test vagrant init genericfedora A Vagrantfile has been placed in this directory You are now ready to vagrant up your first virtual environment Please read the comments in the Vagrantfile as well as documentation on vagrantupcom for more information on using Vagrant vagrant up Bringing machine default up with libvirt provider default Checking if box genericfedora version is up to date default Creating image snapshot of base box volume default Creating domain with the following settings default Name testdefault default Domain type kvm default Cpus default Feature acpi default Feature apic default Feature pae default Memory M default Management MAC default Loader default Nvram default Base box genericfedora default Storage pool default default Image homeechaudrolocalsharelibvirtimagestestdefaultimg G default Volume Cache default default Kernel default Initrd default Graphics Type vnc default Graphics Port default Graphics IP default Graphics Password Not defined default Video Type cirrus default Video VRAM default Sound Type default Keymap enus default TPM Path default INPUT typemouse busps default Creating shared folders metadata default Starting domain default Waiting for domain to get an IP address Its waiting for the IP forever on the console for the VM I can see its waiting for start job to complete see attachment console Steps to reproduce Spin up a VM with no sshd After a timeout vagrant destroys the VM Expected behaviour There should be a way to disable all attempts to use SSH Actual behaviour There doesnt appear to be a way to completely disable SSH System configuration OSDistro version Void Linux bit Libvirt version libvirt Output of vagrant version vagrant plugin list Installed Version Latest Version vagrantlibvirt global Are you using upstream vagrant package or your distros package The distro version whose build file can be found here Is anyone following Development instructions getting anything other than lots of failed tests My result examples failures and time waste of course If the tests are actually broken why Docs dont say a thing to reflect this Also its not documented whether all the Installation steps should be done before anyways I tried both cases And the docs dont have this Its listed among features of publicnetwork actually Meanwhile its probably simpler to just fix the docs support for privatenetwork is way more appreciated Users are allowed to set a LIBVIRTDEFAULTURI environment variable that controls tools ie virsh virtinstall etc that communicate with libvirt Lets allow for that mechanism to be used here It would be nice to be able to support binding the spice service to a unix socket instead of forcing the use of IP and ports like graphics typespice autoportyes listen keymapenus listen typesocket sockettmpspicemyvmsocket graphics Latest release is from Oct 