 Do you want to request a feature or report a bug bug What is the current behavior Assume we have the following controller ruby bash cat appcontrollerstestrb TestAppcontrollers test do get foo with one two do world end get foo with one do hello end end TestAppurltest foo one one shall match the second route with one not the first with one two However the first one is actually taken and thus raises an error like below ruby bash bundle exec padrino c Loading development console Padrino v Loading Application TestApp irbmain TestAppurltest foo one one Traceback most recent call last from usrlocalbundlegemsthor libthorinvocationrb in invokecommand from usrlocalbundlegemsthor libthorcommandrb in run from usrlocalbundlegemspadrinocore libpadrinocoreclibaserb in console from irb from usrlocalbundlegemspadrinocore libpadrinocoreapplicationroutingrb in url from usrlocalbundlegemspadrinocore libpadrinocoreapplicationroutingrb in makepathwithparams from usrlocalbundlegemspadrinocore libpadrinocorepathrouterrb in path from usrlocalbundlegemspadrinocore libpadrinocorepathroutermatcherrb in expand from usrlocalbundlegemsmustermann libmustermannastpatternrb in expand from usrlocalbundlegemsmustermann libmustermannexpanderrb in expand from usrlocalbundlegemsmustermann libmustermannexpanderrb in withrest from usrlocalbundlegemsmustermann libmustermannexpanderrb in expand from usrlocalbundlegemsmustermann libmustermannastexpanderrb in expand from usrlocalbundlegemsmustermann libmustermannastexpanderrb in fetch from usrlocalbundlegemsmustermann libmustermannastexpanderrb in block in expand from usrlocalbundlegemsmustermann libmustermannastexpanderrb in errorfor MustermannExpandError cannot expand with keys one possible expansions one two The following patch seems to solve the problem although Im not sure it is a perfect solution diff bash diff u padrinocore libpadrinocorepathrouterrborg padrinocore libpadrinocorepathrouterrb padrinocore libpadrinocorepathrouterrborg padrinocore libpadrinocorepathrouterrb def pathname args params argslastisaHash argspop candidates routesselect route routename name candidates routesselect route routename name routematchernames paramskeysmap toslength fail InvalidRouteException if candidatesempty route candidatessortby candidate paramskeysmap tos candidatematchernameslength shift What is the expected behavior irbmain TestAppurltest foo one one testfooone Which versions of Ruby Padrino Sinatra Rack OS are you using Did this work in previous versions Ruby on Docker image ruby alpine with Padrino Update bundler Hello I want to inherit PadrinoLogger and use it However the current PadrinoLogger implementation cannot be used smartly Because an instance of PadrinoLogger is created even in the inherited class rubybootrb class CustomLogger PadrinoLogger end Padrinobeforeload do replacelogger CustomLoggerlogger replacelogger is the instance of PadrinoLogger Padrinologger replacelogger end If possible I would like you to change the implementation of PadrinoLoggersetup Current implementation ruby module Padrino class Logger def selfsetup newlogger PadrinoLoggernewconfigmergestream stream newloggerextendPadrinoLoggerExtensions selflogger newlogger end end end Alternative implementation ruby module Padrino class Logger def selfsetup Create selfinstance newlogger selfnewconfigmergestream stream newloggerextendselfExtensions selflogger newlogger end end end Thank you for reading i n changes Do you want to request a feature or report a bug bug What is the current behavior I am running padrino at a relative url the page loads but the assets do not even though the proper path is defined I corrected this as a workaround by creating a symlink in public of the relativeurl prefix pointing back to public Please provide the steps to reproduce mount your base app at a relativeurl eg myapp use stylesheetlinktag site specifying the sitecss file in your layouterb file get a error for the asset What is the expected behavior Assets load from Which versions of Ruby Padrino Sinatra Rack OS are you using Did this work in previous versions Padrino with Webrick under JRuby Can I turn off executing describe statements At least only in development eg The whole boot process is over minutes and its just impossible to maintain the project Hello I am currently learning sinatra and am slowly progressing Oddly enough I had most progress so far thanks to various videos Ill not link in these videos so as to avoid advertising for any but you can definitely find sinatra videos when you are looking for them There is another logical step that will come past sinatra which is to use padrino At the least to me this is logical I had a look at the guide section And dont get me wrong they look great detailed useful but I am already barely reading the text documentation for sinatra so I dont think I have enough energy time and motivation to want to read them for padrino I am more the type of person to learn in smaller baby steps then do something else so videos that are in the length range of say minutes are ideal for me There are a few videos for padrino but they seem to be a bit random or just given as a presentation at a conference so I am not sure if this covers my suggestion or plea I would like to see a few intro video tutorials for padrino and ideally these would be listed at the URLs used do not matter so much to me e g where it is hosted I would think it more important that they are linked in from the official guides section since that would mean that the padrino team may consider these tutorials to be useful could also be inofficial recommendation just anything to get folks started with padrino I am not sure if this issue request is useful evidently lack of time and resources may make this impossible but in this case feel free to close this issue But perhaps someone out there may have time making one or two short tutorials and with short I really mean the range of minutes or so I noticed that my attention span drops sharply at about minutes or so give or take Do you want to request a feature or report a bug A Bug What is the current behavior If you have mongoid models residing in a directory other than models or appmodels invoking padrino rake micreateindexes will be a silent noop Invoking MongoidTasksDatabasecreateindexes as seen in MONGOIDGEMROOTlibmongoidtasksdatabaserake in a padrino console however does find and deal with all models What is the expected behavior Invoking padrino rake micreateindexes will create any missing indexes of any mongoid model in memory regardless of where the model resides in the directory tree Which versions of Ruby Padrino Sinatra Rack OS are you using Did this work in previous versions MRI Padrino Sinatra Rack Linux What is the current behavior Currently padrinohelpers depends on i n Were encountering more and more gems that depend on activesupport x which in turn depends on i n causing a the dependency to not being able to be resolved What is the expected behavior The padrinohelpers gem can be used concurrently with other gems requiring an uptodate version of activesupport Which versions of Ruby Padrino Sinatra Rack OS are you using Did this work in previous versions MRI Padrino Sinatra Rack 