Dear guys First if all happy holliday to you all Now to my question I ve been playing with SoftwareBitBang a couple of months ago and with the support of the community i was able to make it work between arduinos and wemos d mini Unfortunately due to lack of time and success i left this topic sitting on my work bench since Now i would like to restart a and give it another try Before i do so i tought to share my final goal with you so you comment on paths to follow and so on I would like to spread out many small arduinos in my garden manly hooked up to a relay to switch lights and sprinkler heads all of the connected thru an coax cable ending up on a wemos mini which i plan to use as a gateway between standart UPD protocol used by my home automation and the SoftwareBitBang for the arduino switches I would like to use an wemos as gateway as i like their possibilities like OTA an so on However if i need to use and arduino with an eth shield i would do so No to my tests so far As i wrote earlier i have been able to communicate between to arduinos or Wemos using SoftwareBitBang However as soon i try to mix them up i was not able to make them work If i remember right someone tried to explain me why but i dit not get it The i tried using an eth shield on a arduino nano which worked for the BitBang sadly i got conflicts between the eth and the pjon library This was the stage i gave up since my basic skills don t allow me to change libraries on my on So i m wondering am I the only one trying such a scenario Or did i miss a key Element of Pjon protocol Thank you so much for your comments Br M Thank you for your great out of box software I have been working on simple IOT sensor network solely using probe request protocol It is very power efficient for battery powered devices Please implement this protocol in your software There are sketches for my software called ProbeReceiverino which is single main gateway on the network and ProbeSenderino is used by all battery powered ESP devices on network You only need to implement ProbeReceiver code ProbeReceiver code already have MQTT broker built in Link to my code is below Thanks I think page DualUDP of the book has a mistake at the end of the first paragraph The last sentence should read Like the LocalUDP strategy or am I wrong Hi For a home project I am trying to deploy PJON as a RS bus To start I loaded the Blink RS example and loaded the transmitter and a receiver to a teensy LC Using pin to control the RTS of the rs I see that the transmitter is sending data but goes into error mode because of connection lost I also see that the receiver does not call the receiver function to start Transmitter PJON MAX serial modules RS communication example define HWSERIAL Serial include PJONh Strategy name busselected device id PJONThroughSerial bus void setup Initialize LED to be off pinModeLEDBUILTIN OUTPUT digitalWriteLEDBUILTIN LOW Initialize Serial instance used for PJON communication Serial begin busstrategysetserial Serial Set enable pins busstrategysetenableRS pin busstrategysetRS delay busseterrorerrorhandler busbegin Send B to device every s bussendrepeatedly B void errorhandleruint t code uint t data void custompointer ifcode PJONCONNECTIONLOST digitalWriteLEDBUILTIN HIGH Light up LED if a packet transmission failed void loop busupdate busreceive receiver PJON MAX serial modules RS communication example define HWSERIAL Serial include PJONh Strategy name busselected device id PJONThroughSerial bus void setup Initialize LED to be off pinModeLEDBUILTIN OUTPUT digitalWriteLEDBUILTIN LOW Initialize Serial instance used for PJON communication Serial begin busstrategysetserial Serial Set enable pins busstrategysetenableRS pin busbegin bussetreceiverreceiverfunction void receiverfunctionuint t payload uint t length const PJONPacketInfo packetinfo Make use of the payload before sending something the buffer where payload points to is overwritten when a new message is dispatched ifpayload B digitalWriteLEDBUILTIN HIGH delay digitalWriteLEDBUILTIN LOW delay void loop busupdate busreceive Hello I have an ongoing project that is at the production board stage and so far have been populating the units with ATMEGA P processors However Ive just accidentally ordered a batch of the PB models which claim to be backwards compatible but when I try a board with this processor it all seems to work apart from one digital output that only seems to work if I use it as a PWM output and the PJON communication doesnt seem to work Ive just tried updating my library to the latest here as mentions adding PB compatibility but to no avail Im using software bitbang on pin between two ATMEGA chips and SWBBMODE Any suggestions Thanks Just trying to send some packages from my Wemos D Mini ESP very similar to NodeMCU to a small PJON python receiver on my desktop I can send the package however looking at the Network device with tcpdump shows a very weird behavior IP rx x f d c a a b a x c d f ff e c a c c a x c b b fd IP rx x f d c a a b a x c d ff e c a c c a x c b b fd IP rx x f d c a a b a x c d ff e c a c c a x c b b fd IP rx x f d c a a b a x c d ff e c a c c a x c b b fd I see UDP packages coming in every ms meaning about messages per second I highly doubt that this is very efficient This problem also occurs using the Arduino esp Transmitter example Is this expected or is there a way to prevent this I cannot find any info about the status of compatibility with ARM and particularly ATSAMD M M I was considering to use a trinket M instead of attiny Would that be possible Hi I continue my investigations with PJON after ESP and ESP only tests I have started tests with an ESP as Master and an ATTiny as Slave I have just received these lowcost microcontrollers and my experience with these is not as extensive as with the ESPxxxx Note my tests of communication peer to peer were working sending a message from ESP to ATTiny with known deviceid Here is my latest version on the ATTiny define PJONINCLUDESWBB true define SWBBRESPONSETIMEOUT define SWBBMODE Avoid using packet buffer define PJONMAXPACKETS include PJONSlaveh Bus id Initially set as localhost to demonstrate the ability of slaves to find a master thanks to its advertisement no matter which bus id is used uint t busid Device address unique address of a physical device uint t deviceaddress PJON object PJONSlaveSoftwareBitBang busdeviceaddress void receiverhandleruint t payload uint t length const PJONPacketInfo packetinfo void errorhandleruint t code uint t data void custompointer Standard PJON error ifcode PJONCONNECTIONLOST SerialprintConnection lost with device Serialprintlnuint tbuspackets data content DEC PJONSlave related errors ifcode PJONIDACQUISITIONFAIL ifdata PJONIDCONFIRM digitalWrite HIGH delay digitalWrite LOW delay ifdata PJONIDNEGATE digitalWrite HIGH delay digitalWrite LOW delay digitalWrite HIGH delay digitalWrite LOW delay ifdata PJONIDREQUEST digitalWrite HIGH delay digitalWrite LOW delay digitalWrite HIGH delay digitalWrite LOW delay digitalWrite HIGH delay digitalWrite LOW delay void setup busseterrorerrorhandler bussetreceiverreceiverhandler busstrategysetpin busbegin pinMode OUTPUT digitalWrite HIGH delay digitalWrite LOW void loop ifbusconnected digitalWrite HIGH else digitalWrite LOW busupdate busreceive And on the ESP define PJONINCLUDESWBB true define SWBBMODE Avoid using packet buffer define PJONMAXPACKETS define PJONMAXDEVICES include PJONMasterh Strategy name busselected device id uint t busid PJONMasterSoftwareBitBang busbusid int ctime void errorhandleruint t code uint t data void custompointer ifcode PJONCONNECTIONLOST SerialprintPJON error connection lost with device id Serialprintlnuint tbuspackets data content DEC ifcode PJONDEVICESBUFFERFULL SerialprintPJONMaster error master devices buffer is full with a length of Serialprintlndata void receiverfunctionuint t payload uint t length const PJONPacketInfo packetinfo Make use of the payload before sending something the buffer where payload points to is overwritten when a new message is dispatched If debug is active prints addressing packet infromation ifpacketinfoport PJONDYNAMICADDRESSINGPORT SerialprintAddressing request Serialprintpayload Serialprint Device address Serialprintpayload Serialprint Serialprintpayload Serialprint Serialprintpayload Serialprint Serialprintpayload Serialprint Serialprintpayload General packet data Serialprint Header Serialprintpacketinfoheader BIN Serialprint Length Serialprintlength Serialprint Sender id Serialprintpacketinfosenderid Packet content Serialprint Packet foruint t i i length i Serialprintpayload i Serialprint SerialprintPackets in buffer Serialprintlnbusupdate void setup Serialbegin Let addressing procedure packets to be received by the receiver function to ease debugging or analysis busdebug true busstrategysetpin bussetreceiverreceiverfunction busseterrorerrorhandler busbegin ctime millis void loop ifmillis ctime SerialprintlnList of slaves known by master foruint t i i PJONMAXDEVICES i ifbusids i state Serialprint Device id Serialprinti Shifted by one to avoid PJONBROADCAST Serialprint Device address Serialprintbusids i deviceaddress Serialprint Serialprintbusids i deviceaddress Serialprint Serialprintbusids i deviceaddress Serialprint Serialprintbusids i deviceaddress Serialprint Serialprintbusids i deviceaddress Serialprintln Serialprintln Serialflush ctime millis busreceive busupdate The led connected to the pin should at least blink to notify errors but nothing is blinking except during the initial test in Setup in the serial console I have not more than List of slaves known by master List of slaves known by master List of slaves known by master List of slaves known by master List of slaves known by master List of slaves known by master List of slaves known by master Where am I wrong Thank you very much for your help Hi Giovanni This is the sneak preview just to get things going have fun with it but treat it as a work in progress that is not intended to be fully functional or beautiful Do not spent too much work on code reviews this is not intended to be merged yet Have fun Det I use both Arduino and Particle Photons and I would like to see PJON implemented into the Particle Library System I am currently working my way through just copying it into the Web IDE but it would be much appreciated if support could be added I would love to help if there was anything I could do Ive been using PJON for a bit but this is the first time I have actually posted in the PJON community