Thank you for the warning in the disclaimer that data is being collected Is it documented anywhere what data you are collected If not would you consider doing that Hi We are seeing a potential issue with the User log extractions on the latest version of Hawk it seems that it is only pulling the first few available days of logs from the Exchange logs for the user selected and not the full days for example at the time of writing I am only getting of October and nothing else Im sure theres further activity after this the output logging shows Searching Exchange Mailbox Audit Logs this can take some time Searching Range To Found Exchange Mailbox audit records Writing Data to Anyone else confirm please EDIT It seems like something on the O backend that has caused this issue rolling back to an older version of Hawk has also produced the same problem now Also the script seems to hang on Looking Up Ip Address Locations and then spits out a number of subsequent errors Loading Networking functions from C Program Files WindowsPowerShell Modules HAWK SystemNetIPNetworkdll InvokeWebRequest The underlying connection was closed An unexpected error occurred on a receive At C Program Files WindowsPowerShell Modules HAWK Hawkpsm char MSFTJSON InvokeWebRequest uri CategoryInfo InvalidOperation SystemNetHttpWebRequestHttpWebRequest InvokeWebRequest WebExc eption FullyQualifiedErrorId WebCmdletWebResponseExceptionMicrosoftPowerShellCommandsInvokeWebRequestCommand Found unique MSFT IPv address ranges Found unique MSFT IPv address ranges Creating global variable MSFTIPList Cannot index into a null array At C Program Files WindowsPowerShell Modules HAWK Hawkpsm char test SystemNetIPNetwork ContainsMSFTIPListipv CategoryInfo InvalidOperation RuntimeException FullyQualifiedErrorId NullArray Edit Ive run the PowerShell command for Mailbox audit logging independently of Hawk and it works Thanks Is it technically feasible for HAWK to pull RiskDetections such as those found in possibly through the Graph request below In environments that do not have UAL turned on this is often the only historical logging of unauthorized signins so it is of great value GET The SearchUnifiedAuditLog command that gets generated seems to generate with dates and times in the local format As a UK native our format of ddmmyyyy does not get accepted by that cmdlet causing an error Cannot process argument transformation on parameter EndDate Cannot convert value to type MicrosoftExchangeExchangeSystemExDateTime Error String was not recognized as a valid DateTime Is it possible to parse the JSON data in the ExchangeUALAuditusercsv log file into seperate columns for ease of readability Thank you SearchUnifiedAuditLog will only return k items If the search gets back k items we have two issues How do we get all of the items back and not just the K Right now the return gets stuck in a loop and will keep trying to get back the k Ive come into scenarios where the ips are not looked up and no convertedauthenticationlog file is generated Is there a reasoncriteria for when this occurs In a compromised account today a search over the past days did run through and create the logs however a search for the past days did not On a related note it would be good to be able to search for logs between X and Y days such as days ago to get more details if you knew from other experience that an account was compromised around a certain date in the past InstallModule Name HAWK Produces error on multiple computers and nothing gets installed PackageManagement InstallPackage The following commands are already available on this systemAddAzureADApplicationOwnerAddAzureADDeviceRegisteredOwnerAddAzureADDeviceRegisteredUserAddAzureADDirec toryRoleMemberAddAzureADGroupMemberAddAzureADGroupOwnerAddAzureADMSLifecyclePolicyGroupAddAzureADServicePrincipalOwnerConfirmAzureADDomainConnectAzureADDisconnectAzureADEnableAzureADDirector yRoleGetAzureADApplicationGetAzureADApplicationExtensionPropertyGetAzureADApplicationKeyCredentialGetAzureADApplicationLogoGetAzureADApplicationOwnerGetAzureADApplicationPasswordCredentialGetA zureADApplicationProxyApplicationGetAzureADApplicationProxyApplicationConnectorGroupGetAzureADApplicationProxyConnectorGetAzureADApplicationProxyConnectorGroupGetAzureADApplicationProxyConnectorGrou pMembersGetAzureADApplicationProxyConnectorMemberOfGetAzureADApplicationServiceEndpointGetAzureADContactGetAzureADContactDirectReportGetAzureADContactManagerGetAzureADContactMembershipGetAzure ADContactThumbnailPhotoGetAzureADContractGetAzureADCurrentSessionInfoGetAzureADDeletedApplicationGetAzureADDeviceGetAzureADDeviceConfigurationGetAzureADDeviceRegisteredOwnerGetAzureADDeviceReg isteredUserGetAzureADDirectoryRoleGetAzureADDirectoryRoleMemberGetAzureADDirectoryRoleTemplateGetAzureADDomainGetAzureADDomainNameReferenceGetAzureADDomainServiceConfigurationRecordGetAzureADD omainVerificationDnsRecordGetAzureADExtensionPropertyGetAzureADGroupGetAzureADGroupAppRoleAssignmentGetAzureADGroupMemberGetAzureADGroupOwnerGetAzureADMSDeletedDirectoryObjectGetAzureADMSDelet edGroupGetAzureADMSGroupGetAzureADMSGroupLifecyclePolicyGetAzureADMSIdentityProviderGetAzureADMSLifecyclePolicyGroupGetAzureADOAuth PermissionGrantGetAzureADObjectByObjectIdGetAzureADServiceAp pRoleAssignedToGetAzureADServiceAppRoleAssignmentGetAzureADServicePrincipalGetAzureADServicePrincipalCreatedObjectGetAzureADServicePrincipalKeyCredentialGetAzureADServicePrincipalMembershipGetAz ureADServicePrincipalOAuth PermissionGrantGetAzureADServicePrincipalOwnedObjectGetAzureADServicePrincipalOwnerGetAzureADServicePrincipalPasswordCredentialGetAzureADSubscribedSkuGetAzureADTenantDet ailGetAzureADTrustedCertificateAuthorityGetAzureADUserGetAzureADUserAppRoleAssignmentGetAzureADUserCreatedObjectGetAzureADUserDirectReportGetAzureADUserExtensionGetAzureADUserLicenseDetailGet AzureADUserManagerGetAzureADUserMembershipGetAzureADUserOAuth PermissionGrantGetAzureADUserOwnedDeviceGetAzureADUserOwnedObjectGetAzureADUserRegisteredDeviceGetAzureADUserThumbnailPhotoNewAzu reADApplicationNewAzureADApplicationExtensionPropertyNewAzureADApplicationKeyCredentialNewAzureADApplicationPasswordCredentialNewAzureADApplicationProxyApplicationNewAzureADApplicationProxyConnect orGroupNewAzureADDeviceNewAzureADDomainNewAzureADGroupNewAzureADGroupAppRoleAssignmentNewAzureADMSGroupNewAzureADMSGroupLifecyclePolicyNewAzureADMSIdentityProviderNewAzureADMSInvitationNew AzureADServiceAppRoleAssignmentNewAzureADServicePrincipalNewAzureADServicePrincipalKeyCredentialNewAzureADServicePrincipalPasswordCredentialNewAzureADTrustedCertificateAuthorityNewAzureADUserNew AzureADUserAppRoleAssignmentRemoveAzureADApplicationRemoveAzureADApplicationExtensionPropertyRemoveAzureADApplicationKeyCredentialRemoveAzureADApplicationOwnerRemoveAzureADApplicationPasswordCrede ntialRemoveAzureADApplicationProxyApplicationRemoveAzureADApplicationProxyApplicationConnectorGroupRemoveAzureADApplicationProxyConnectorGroupRemoveAzureADContactRemoveAzureADContactManagerRemove AzureADDeletedApplicationRemoveAzureADDeviceRemoveAzureADDeviceRegisteredOwnerRemoveAzureADDeviceRegisteredUserRemoveAzureADDirectoryRoleMemberRemoveAzureADDomainRemoveAzureADGroupRemoveAzure ADGroupAppRoleAssignmentRemoveAzureADGroupMemberRemoveAzureADGroupOwnerRemoveAzureADMSDeletedDirectoryObjectRemoveAzureADMSGroupRemoveAzureADMSGroupLifecyclePolicyRemoveAzureADMSIdentityProvider RemoveAzureADMSLifecyclePolicyGroupRemoveAzureADOAuth PermissionGrantRemoveAzureADServiceAppRoleAssignmentRemoveAzureADServicePrincipalRemoveAzureADServicePrincipalKeyCredentialRemoveAzureADServ icePrincipalOwnerRemoveAzureADServicePrincipalPasswordCredentialRemoveAzureADTrustedCertificateAuthorityRemoveAzureADUserRemoveAzureADUserAppRoleAssignmentRemoveAzureADUserExtensionRemoveAzureAD UserManagerResetAzureADMSLifeCycleGroupRestoreAzureADDeletedApplicationRestoreAzureADMSDeletedDirectoryObjectRevokeAzureADSignedInUserAllRefreshTokenRevokeAzureADUserAllRefreshTokenSelectAzureAD GroupIdsContactIsMemberOfSelectAzureADGroupIdsGroupIsMemberOfSelectAzureADGroupIdsServicePrincipalIsMemberOfSelectAzureADGroupIdsUserIsMemberOfSetAzureADApplicationSetAzureADApplicationLogoSetAz ureADApplicationProxyApplicationSetAzureADApplicationProxyApplicationConnectorGroupSetAzureADApplicationProxyApplicationCustomDomainCertificateSetAzureADApplicationProxyApplicationSingleSignOnSetAzu reADApplicationProxyConnectorSetAzureADApplicationProxyConnectorGroupSetAzureADDeviceSetAzureADDomainSetAzureADGroupSetAzureADMSGroupSetAzureADMSGroupLifecyclePolicySetAzureADMSIdentityProvide rSetAzureADServicePrincipalSetAzureADTenantDetailSetAzureADTrustedCertificateAuthoritySetAzureADUserSetAzureADUserExtensionSetAzureADUserLicenseSetAzureADUserManagerSetAzureADUserPasswordSe tAzureADUserThumbnailPhotoUpdateAzureADSignedInUserPassword This module AzureAD may override the existing commands If you still want to install this module AzureAD use AllowClobber parameter At C Program Files WindowsPowerShell Modules PowerShellGet PSModulepsm char null PackageManagement InstallPackage PSBoundParameters CategoryInfo InvalidOperation MicrosoftPowerInstallPackageInstallPackage InstallPackage Exception FullyQualifiedErrorId CommandAlreadyAvailableValidateModuleCommandAlreadyAvailableMicrosoftPowerShellPackageManagementCmdletsInstallPackage Currently the IP address lookup code test all IP addresses and then determines if they belong to MSFT according to the MSFT JSON data from This is resulting in queries being made to the GEO Location endpoint that are not needed If it is an MSFT Address we dont need to look up the location Should look to optimize this further