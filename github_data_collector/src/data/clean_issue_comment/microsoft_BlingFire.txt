Is there an official NET wrapper available Couldnt find one at nugetorg Out of curiosity when are you planning to do the next release on pip What git commit will be in that release You just merged support for BERT it seems which is nice but XLnet is the new state of the art and has a big momentum it would be nice to include it Just by curiosity will you use BERT internally for improving BING search results if you cannot disclose this information thats OK BlingFire seems really interesting thank you for open sourcing it But I and many others who use NLP tools have high accuracy requirements I think you would attract more users if you published more benchmarcks on Nlp tasks BlingFire allow That would also help to catch regressions I would particularly be interested in english lemmatization performance If you reach state of the art performance on some tasks I would be pleased to add them on NLPprogress I see that you have a benchmarck wiki but not on enough tasks Btw it would be nice to refresh your benchmarcks now that you merged BERT I wrote a Rust wrapper for the library I was curious if theres any intention to link to unoffical wrappers in other languages in the README Getting the below error after running pip install blingfire install works fine Any ideas from blingfire import Traceback most recent call last File stdin line in module File C Users AppData Local Programs Python Python lib sitepackages blingfire initpy line in module blingfire cdllLoadLibraryospathjoinpath blingfiretokdlldll File C Users AppData Local Programs Python Python lib ctypes initpy line in LoadLibrary return selfdlltypename File C Users AppData Local Programs Python Python lib ctypes initpy line in init selfhandle dlopenselfname mode OSError WinError is not a valid Win application Hey thanks for a great library According to your wiki the docs for linguistic resources will be on separate document is there any plan to add the documentation soon Or this is the actual docs An extra null pointer check is not needed in functions Do I need to check for null before delete p like the following FAIwMappack Destructor for FAIwMappack FASummTagScores Destructor for FASummTagScores FAWREConfpackClear FAWREConfpackClear function I would like to point out that an identifier like FABRRESULTCAH Update candidate does eventually not fit Do not declare an identifier which is reserved for the compiler implementation to the expected naming convention of the C language standard Would you like to adjust your selection for unique names