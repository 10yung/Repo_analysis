 OpenApi Security Requirement support added The following channges are done Moved common configurations properties builder and models to swagger Markupcore module Extended swagger Markupcore module in swagger Markupv and swagger Markupv modules Provided MarkupComponent to create reusable components for swagger Markupv Like in previous version swagger Markupcore module This module will be free of any swagger dependency The entry point for any new swagger version will be writing a class extending AbstractSchema MarkupConverter Write swagger version specific classes by extending Schema MarkupConfigBuilder Labels Schema MarkupExtensionRegistry Schema MarkupProperties if required Note Its better to extend these classes as it becomes future proof and any version specific changes can be done in the new class swagger Markupv module Code has been refactored to use the swagger Markupcore Existing test cases are verified and running properly except instagram testcase which is failing even before my patch in windows Note There are few breaking changes but are very trivial to fix like Labels has been renamed to SwaggerLabels MarkupLanguage package has been modified Extensions uses iogithubswagger markupSwagger MarkupConverterSwaggerContext instead of iogithubswagger markupSwagger MarkupConverterContext swagger Markupv module OpenAPI specific converter is created iogithubswagger markupOpenAPI MarkupConverter Extensions support similar to swagger Markupv the only difference is instead of a markUpBuilder in v it accepts Document object Refractored applyOverviewDocument to support the use of extensions and position Todo Refractor openAPI static classes similar to OverviewDocument with placeholders for calling extenstion points Move labels from OpenAPIHelpers to OpenAPILabels class Create reusage MarkupComponent for all static methods under OpenAPIHelpers Current code doesnt provide a generic extension mechanism it provides a marker interface Schema MarkupExtensionRegistry This should be changed and core should be able to give a proper extension mechanism OpenApi example object support Add support for content object for request and responses OpenApi descriptions are valid CommonMark syntax currently they are as is to target asciidoc file However description content should be converted to asciidoc format from md OpenApi conversion should provide Markdown output support To produce md files an asciidoc convert for markdown is required similar to iogithubswagger markupadocAsciidocConverter The current implementation Swagger v support is used Swagger MarkupConverterfromlocalSwaggerFile build toFileoutputFile Ideally OpenApi support should have similar way to consume it as well for example Swagger MarkupConfig config new Swagger MarkupConfigBuilder withParseOptionsnew ParseOptions build Swagger MarkupConverter converter Swagger MarkupConverterfromlocalSwaggerFile withConfigconfig build This would allow less documentation and seamless transition for any consumeruser The current implementation has an extension mechanism where users can inject AsciiDocMarkdown at certain positions Ideally OpenApi support should be allow extension too The current implementation Swagger v support allows to configure the order of the parameters operations and definitions Also allows to group paths by tags Ideally OpenApi support should be allow above customization too Strings used in OpenApi support should be internationalized similar to v support add support for OpenAPI Callback Object to asciidoc conversion 