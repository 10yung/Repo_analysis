 I have a system with Python installed If I create a Python virtualenv with pyenv I cant import the library bash binpip install ujson Collecting ujson Installing collected packages ujson Successfully installed ujson binpython Python default Nov GCC on linux Type help copyright credits or license for more information import ujson Traceback most recent call last File stdin line in module ImportError libpython mso cannot open shared object file No such file or directory This problem doesnt occur with other similar packages such as nujson and orjson Run this code indent by of previous line import ujson def createjsonstringvalue return x value num def inputs yield strnum yield strnum yield strnum for inputstr in inputs try jsonstr createjsonstringinputstr js ujsonloadsjsonstr print json jsonstr returned x strjs x except Exception as e print json jsonstr returned error stre The result is json x returned x json x returned x json x returned error Value is too big The problem is that the number should raise Value is too big exception The reason is that in ultrajsondecc at the line if intNeg prevIntValue intValue comparing intValue to prevIntValue doesnt indicate that the number is too long You need to compare it to MAXVALUE Hello I am a core dev for spyderidespyder and we would like to update this package to distribute wheels Do you think this is possible cgbystrom hrosenhorn Jahaja Jhonte jskorpan mhansson mkristo msjolund mthurlin ogabrielson oskarblom ronniekk T bs tjogin Thanks The Python packaging specifications indicate that the license parameter to setup should be used in one of the following cases the license is not a selection from the License Trove classifiers to specify a particular version of a license which is named via the Classifier field to indicate a variation or exception to such a license This PR removes the explicit license parameter since the usage for this project does not fit any of those cases and it makes it more difficult to use tools like piplicenses since it is not consistent with other projects that just have License OSI Approved BSD License as one of their trove classifiers Please note that this does not change the license of the project in any way and since this project already has a License OSI Approved BSD License trove classifier the license parameter is redundant When you try to encode an unsupported object type you can get a hardtounderstand error import numpy import ujson ujsondumpsnumpyboolTrue Traceback most recent call last File stdin line in module OverflowError Maximum recursion level reached Add a hint to this error message about why the encoding may have failed maybe you tried encoding a type of object that isnt supported Fixes Right now ujson gives this error when you try to encode certain types eg numpybool that cannot be encoded OverflowError Maximum recursion level reached For example you can get this error by running this code import numpy import ujson printujsondumpsnumpyboolTrue This error does not indicate what actually went wrong which is that numpybool objects cannot be encoded As a basic fix for this problem Id suggest changing the error message to OverflowError Maximum recursion level reached maybe you tried encoding a type of object that isnt supported I USE Python version the code example import ujson printdatetimedatetimenow printujsondumpsdatetimedatetimenow the print info and the timestamp really is more than h how should I modify to make the timestamp is right Hi My colleague and I have been working on a fork project to support NumPys int under Python caiyunappultrajson All you need to do is pip install nujson and import nujson as ujson What we mainly change is call NumPys header in C you can see for details In ujsondumpsc Out bacd In c Out ChainMapa b c d 