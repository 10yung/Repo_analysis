Is it possible submit the forms onChange value in the Select component Bumps handlebars from to details summaryChangelogsummary Sourced from handlebarss changelog v November th Bugfixes fix add noprototypebuiltins eslintrule and fix all occurences f f d fix add more properties required to be enumerable Chores Build fix use instead of c b f add chai and dirtychai and sinon for cleaner testassertions and spies deprecate old assertionmethods e e ba dad a Security The properties proto defineGetter defineSetter and lookupGetter have been added to the list of properties that must be enumerable If a property by that name is found and not enumerable on its parent it will silently evaluate to undefined This is done in both the compiled template and the lookuphelper This will prevent new RemoteCodeExecution exploits that have been published recently Compatibility notes Due to the securityfixes The semantics of the templates using proto defineGetter defineSetter and lookupGetter in the respect that those expression now return undefined rather than their actual value from the proto The semantics have not changed in cases where the properties are enumerable as in js proto some string The change may be breaking in that respect but we still only increase the patchversion because the incompatible usecases are not intended undocumented and far less important than fixing RemoteCodeExecution exploits on existing systems Commits v November th Bugfixes fix use Stringfield in lookup when checking for constructor d test add fluent API for testing Handlebars c ac c Compatibility notes no incompatibility are to be expected trtable truncated details details summaryCommitssummary c c b v c d Update release notes f f d fix add noprototypebuiltins eslintrule and fix all occurences fix add more properties required to be enumerable ba testchore add chaiexpect and sinon to runtimeenvironment dad test add sinon as global variable to eslint in the specs a test add sinonjs for spies deprecate current assertions e e chore add chai and dirtychai for better test assertions c b f fix use instead of de d v Additional commits viewable in compare view details br Dependabot compatibility score Dependabot will resolve any conflicts with this PR as long as you dont alter it yourself You can also trigger a rebase manually by commenting dependabot rebase dependabotautomergestart dependabotautomergeend details summaryDependabot commands and optionssummary br You can trigger Dependabot actions by commenting on this PR dependabot rebase will rebase this PR dependabot recreate will recreate this PR overwriting any edits that have been made to it dependabot merge will merge this PR after your CI passes on it dependabot squash and merge will squash and merge this PR after your CI passes on it dependabot cancel merge will cancel a previously requested merge and block automerging dependabot reopen will reopen this PR if it is closed dependabot ignore this patchminormajor version will close this PR and stop Dependabot creating any more for this minormajor version unless you reopen the PR or upgrade to it yourself dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency unless you reopen the PR or upgrade to it yourself dependabot use these labels will set the current labels as the default for future PRs for this repo and language dependabot use these reviewers will set the current reviewers as the default for future PRs for this repo and language dependabot use these assignees will set the current assignees as the default for future PRs for this repo and language dependabot use this milestone will set the current milestone as the default for future PRs for this repo and language You can disable automated security fix PRs for this repo from the Security Alerts page details Bumps handlebars from to details summaryChangelogsummary Sourced from handlebarss changelog v November th Bugfixes fix add noprototypebuiltins eslintrule and fix all occurences f f d fix add more properties required to be enumerable Chores Build fix use instead of c b f add chai and dirtychai and sinon for cleaner testassertions and spies deprecate old assertionmethods e e ba dad a Security The properties proto defineGetter defineSetter and lookupGetter have been added to the list of properties that must be enumerable If a property by that name is found and not enumerable on its parent it will silently evaluate to undefined This is done in both the compiled template and the lookuphelper This will prevent new RemoteCodeExecution exploits that have been published recently Compatibility notes Due to the securityfixes The semantics of the templates using proto defineGetter defineSetter and lookupGetter in the respect that those expression now return undefined rather than their actual value from the proto The semantics have not changed in cases where the properties are enumerable as in js proto some string The change may be breaking in that respect but we still only increase the patchversion because the incompatible usecases are not intended undocumented and far less important than fixing RemoteCodeExecution exploits on existing systems Commits v November th Bugfixes fix use Stringfield in lookup when checking for constructor d test add fluent API for testing Handlebars c ac c Compatibility notes no incompatibility are to be expected trtable truncated details details summaryCommitssummary c c b v c d Update release notes f f d fix add noprototypebuiltins eslintrule and fix all occurences fix add more properties required to be enumerable ba testchore add chaiexpect and sinon to runtimeenvironment dad test add sinon as global variable to eslint in the specs a test add sinonjs for spies deprecate current assertions e e chore add chai and dirtychai for better test assertions c b f fix use instead of de d v Additional commits viewable in compare view details br Dependabot compatibility score Dependabot will resolve any conflicts with this PR as long as you dont alter it yourself You can also trigger a rebase manually by commenting dependabot rebase dependabotautomergestart dependabotautomergeend details summaryDependabot commands and optionssummary br You can trigger Dependabot actions by commenting on this PR dependabot rebase will rebase this PR dependabot recreate will recreate this PR overwriting any edits that have been made to it dependabot merge will merge this PR after your CI passes on it dependabot squash and merge will squash and merge this PR after your CI passes on it dependabot cancel merge will cancel a previously requested merge and block automerging dependabot reopen will reopen this PR if it is closed dependabot ignore this patchminormajor version will close this PR and stop Dependabot creating any more for this minormajor version unless you reopen the PR or upgrade to it yourself dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency unless you reopen the PR or upgrade to it yourself dependabot use these labels will set the current labels as the default for future PRs for this repo and language dependabot use these reviewers will set the current reviewers as the default for future PRs for this repo and language dependabot use these assignees will set the current assignees as the default for future PRs for this repo and language dependabot use this milestone will set the current milestone as the default for future PRs for this repo and language You can disable automated security fix PRs for this repo from the Security Alerts page details i m having this problem when i try to use Select i tried put the key in object ex const test id name Carlos key id name Maria key doesn t work tried put in Select Select keytestid optionstest doesn t work what i have to do to solve this problem What would you like to be added Provide Yup field information to component Why is this needed Since we are able to define a Yup schema in the Form component it would be nice to use that information not only for validations but also to render my input components For example if I mark a field as required in the schema the component could use that data to render a required indicator Same applies to other things ie label Is your enhancement request related to a problem Please describe I dont like to pass props like label required and maxLength to form components if I already have a schema definition that describes the expected behaviour of the Form Additional context Also had the same issue with Formik jaredpalmerformik jaredpalmerformik Verify first that your issue is not already reported Please use this template while reporting a bug and provide as much info as possible Not doing so may result in your bug not being addressed in a timely manner Thanks If possible complete all sections as described Dont remove any section Description of bug Error when creating a submit function for the form Type SubmitHandlerDataContent is not assignable to type SubmitHandlerFormContent Type FormContent is missing the following properties from type DataContent email passwordts To Reproduce Create a page with Form Element and SubmitHandler function in the same file Example const handleSubmitSubmitHandlerDataContent data dispatchsignInRequestdata return Form onSubmithandleSubmit Expected behavior It shouldnt raise any error Exception or Error Type SubmitHandlerDataContent is not assignable to type SubmitHandlerFormContent Type FormContent is missing the following properties from type DataContent email password TS Environment OS Ubuntu Node v Add information about your environment OS eg iOS Ubuntu Browser eg Chrome Firefox Node eg Etc Additional context It worked when I changed the Formtsx to export interface FormPropsT extends OmitHTMLFormProps onSubmit initialData object children ReactReactNode context Context schema ObjectSchemaobject onSubmit SubmitHandlerT Verify first that your issue is not already reported Please only use this template for submitting enhancement requests If possible complete all sections as described Dont remove any section What would you like to be added Is there an idea to integrate with MAterialUI library Why is this needed A clear and concise description of why is it needed Since MAterialUI is now widely used it would be great to integrate this library with materialui Is your enhancement request related to a problem Please describe A clear and concise description of what the problem is Ex Im always frustrated when Additional context Add any other context or screenshots about the enhancement request here Description of issue So many times I faced form not been submitted when using Schema because I made a mistake with field names or something like that Is there any way to catch all the Yup errors in the Form component Usage example jsx export default MyForm return Form onErrorerrors consolelogerrors schemaschema UPDATE It also could be a debug flag that prints in the console a message with all validation errors jsx Form schemaschema debug What would you like to be added Some sort of render props support for all basic field types to customize their rendering without having to deal with all of that registerField boilerplate in custom components Why is this needed Im using reactbootstrap forms and as you may know Bootstrap requires some wrapping for eg goodlooking checkboxes Unforms rendering of checkboxes doesnt quite cut it but having a render prop would make it pretty simple to fix and the refactoring isnt honestly very complicated either Just refactoring the final rendering bits out of each component into a function that returns react nodes ie a render prop function and allowing passing it as a prop to the component should be enough If this sounds sane I could do the dev legwork When I click on an input and make a change the value is fixed to the value attribute To Reproduce Environment OS Windows Browser Chrome Vers o Vers o oficial bits 