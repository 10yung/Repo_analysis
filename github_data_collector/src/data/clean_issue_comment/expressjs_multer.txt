I want to be able to filter files based on different file extensions One idea would be to pass a middleware after the upload which handles it Like this javascript apppostupload S uploadfields name video maxCount name subtitles maxCount validateUploadForms validateUploadSizes async functionreq res next consolelogSuccess function validateUploadSizesreq res next if reqfilesvideo size return next else resjson response StringsERROR return nextnew Error But the problem here is that the file is already finished uploading so I will have to waste extra space and time on removing it Another idea would be to do something like this javascript apppostupload S uploadsinglevideo S uploadsingleaudio validateUploadForms async functionreq res next consolelogSuccess And then use the fieldSizefileSize property But I am unsure on how it would work like The problem here is that I cant use multiple uploadsingle middlewares What can I do I am using S MulterS fix all test case fixedtestcase add the coverage script by add nyc addcoverage update the ci pipeline cleanup gitignore locks merge here fix Should update the nodejs versions and add test for CI This test is not the only one that fails if you fix it it will result in failure in other tests As for Coverage its not exsit This PR replaces mkdirp which doesnt seem to be maintained anymore with makedir I realize that v of multer likely wont use storage engines at all but maybe this can make it into v x All tests pass and I dont believe this should be breaking for anyone as it should function exactly the same as mkdirp did previously makedir was created to replace mkdirp Likely closes but I dont have a windows machine to test on I also added a test to make sure that a path is created when diskStorage is given a string for destination as per the docs I using var upload multerdest uploadarrayphoto If upload files returned error message files exceeding the limit If upload files returned error message files exceeding the limit my code If upload files var express requireexpress var multer requiremulter var app express var upload multerdest uploadarrayphoto function uploadMiddlewarerequest response next uploadrequest response err if error instanceof MulterError resstatus senderror files exceeding the limit else next apppostuploaduploadMiddleware function request response applisten arrayphoto is I setting the max upload number I hope according to client number of uploads returned client exceeds a specifiereturn error message files exceeding the limit max number upload number But before storage and if err instanceof multerMulterError I cant get requestfiles s number I dont know what to do Thanks very much I am using multers uploadsingle to extract a csv file from request When converting the buffer given by multer upload to string I observed localized text characters like is getting converted to some random chahracter like The encoding which multer uses is bit Is there any way to get data in utf encoding Multers file details fieldname file originalname SampleIncentivecsv encoding bit mimetype textcsv Hi I would like to limit an array upload based on the total size of the files How would I be able to configure this I tried playing with fieldSize but that did not seem to work The other limitations fileSize and files do work Nodejs runs the multer test suite in citgm We relatively frequently encounter errors in one of the tests where the test suite times out See available days It would be great to increase the timeout for the test or to fix it in a way that it becomes more reliable Hello Im using the clshooked library which lets me use continuous local storage in my express app After I use the multerfile middleware my context is lost I patched the middleware using the solution proposed here and now it works fine Im letting you know just in case you want to fix it Cheers Additional info Node version Express version Multer version CLS Hooked version OS Ubuntu LTS