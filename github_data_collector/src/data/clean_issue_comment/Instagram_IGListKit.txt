This is an error produced when building the latest version of IGListKit from the master branch It occurs in IGListBindingSingleSectionControllerm on the code IGAssertNonnullcell Summary This assert causes crashes on debug builds While its known that this algorithm is slow with a large number of items to work through it doesnt seem to have been an issue for most when working with IGListKit Removing this assertion to avoid crashes for others Reviewed By bdotdub Differential Revision D In Class IGListAdapter method updateObjectsdataSource there has a piece of code push the view controller and collection context into a local thread container so they are available on init for IGListSectionController subclasses after calling super init IGListSectionControllerPushThreadselfviewController self I want to know what will happen if dont do this thanks In other words if selfviewController andor self is released when executing this method what will happen New issue checklist x I have reviewed the README and documentation x I have searched existing issues and this is not a duplicate x I have attempted to reproduce the issue and include an example project General information IGListKit version iOS versions CocoaPodsCarthage version Xcode version DevicesSimulators affected iphone Reproducible in the demo project YesNo na Related issues na So this isnt really so much an issue and more of a how to Thanks to this guide I was able to take my Event object and render it using a ListBindingSectionController with the accompanying view models attached to the accompanying cells Here is what my object looks like class EventNSObject var key String let name String let promoVideo String var eventImages String let eventDescription String var weather Weather let streetAddress String let city String let state String let zipCode Int let price Double let startTime Date let endTime Date var category String var attendCount Int var isAttending false var eventTags String var userHost String var orgHost String var attendingUsers Attend var actions Action init for event submission initkeyString nameString eventImage String promoVideoStringeventDescriptionStringstreetAddressStringcityStringstate StringzipCode IntstartTime Date endTime Dateprice Doublecategory StringattendCount Inttags String userHost String selfkey key selfname name selfeventImages eventImage selfpromoVideo promoVideo selfeventDescription eventDescription selfstreetAddress streetAddress selfcity city selfstate state selfzipCode zipCode selfstartTime startTime selfendTime endTime selfprice price selfcategory category selfattendCount attendCount selfeventTags tags selfuserHost userHost initsnapshot DataSnapshot guard let dict snapshotvalue as String Any let name dict eventName as String let eventDescription dict eventDescription as String let promoVideo dict eventPromo as String let eventImages dict eventImageURL as String let category dict eventCategory as String let streetAddress dict eventStreetAddress as String let city dict eventCity as String let state dict eventState as String let zipCode dict eventZip as Int let attendCount dict attendcount as Int let price dict eventPrice as Double let eventTime dict eventDatetime as String Any let startTime eventTime start as Double let endTime eventTime end as Double else return nil selfkey snapshotkey selfname name selfeventDescription eventDescription selfeventImages eventImages selfpromoVideo promoVideo selfstreetAddress streetAddress selfcity city selfstate state selfzipCode zipCode selfattendCount attendCount selfcategory category selfprice price selfstartTime DatetimeIntervalSince startTime selfendTime DatetimeIntervalSince endTime tags if let tags dict tags as String selfeventTags tags user host if let users dict hostuser as String selfuserHost users org host if let orgs dict hostorg as String selforgHost orgs var eventDictionary String Any let timeDict endTimeendTimetimeIntervalSince startTime startTimetimeIntervalSince return namenameimages eventImages eventDescription eventDescription attendCount attendCount streetAddress streetAddresszipCode zipCodepriceprice state state city city promoVideo promoVideo categorycategoryeventDatetime timeDict extension Event static public func rhs Event lhs Event Bool return rhskey lhskey extension Event ListDiffable public func diffIdentifier NSObjectProtocol return key as NSObjectProtocol public func isEqualtoDiffableObject object ListDiffable Bool guard let object object as Event else return false return selfkeyobjectkey As you can see there are certain properties that are arrays such as eventImagesattendingUserseventTags etc This means that I would need to implement multiple nested collectionViews list adapters inside the context of this EventDetailViewController I was able to follow the code in the NestedAdapterViewController example in addition to this issue to achieve this task for eventImages but how would I do that for the rest of the nested collectionviewsadapters that will be present on this detail screen I mean I know it wouldnt be feasible to try to create multiple adapters so im really not sure where to start when it comes to creating more of these nested collectionViews and not completely screw something up Im thinking of doing some type of switch statement on the viewModel but im not entirely sure how that would work Does anyone have any example code or is anyone able to point me in the right direction If more of the code is needed to answer me properly lmk but most of my code looks similar to the mentioned examples An collectionview contains three groups A B and C When I call the selfcollectionContext invalidateLayoutForSectionControllerself completionnil method in group A The following The layoutSubviews methods of all other group subviews are all called New issue checklist x I have reviewed the README and documentation x I have searched existing issues and this is not a duplicate x I have attempted to reproduce the issue and include an example project General information IGListKit version iOS versions CocoaPodsCarthage version CocoaPods Xcode version DevicesSimulators affected iPhone Xr Reproducible in the demo project YesNo NO Related issues When I call selfadapter scrollToObjectselfitemslastObject supplementaryKindsnil scrollDirectionUICollectionViewScrollDirectionVertical scrollPositionUICollectionViewScrollPositionBottom animatedNO App crashed with Assertion failure in IGListWorkingRangeHandler updateWorkingRangesWithListAdapter UserstracyyihDocumentsGitHubPeekabooMomentsPodsIGListKitSourceIGListKitInternalIGListWorkingRangeHandlermm IGAssertworkingRangeSectionControllerssize This algorithm is way too slow with so many objectslu workingRangeSectionControllerssize Debug information IGListDebugger dump bash IGListAdapter x ea Updater type IGListAdapterUpdater Data source BBTimelineViewController x c Collection view delegate null Scroll view delegate BBTimelineViewController x c Is in update block No View controller BBTimelineViewController x c Is prefetching enabled No Registered cell identifiers BBUserTipCell BBTagsLettersVisitorsCell BBAlbumSwitchCell BBNoMoreCell BBTimelineMomentCell BBTimelineMessageCell BBTimelineDatetimeCell IGListAdapterUpdater instance x Moves as deletesinserts No Allows background reloading Yes Has queued reload data No Queued update is animated Yes State Idle Section map details Object and section controller at section BBOtherStaticAlbumSwitch BBOtherSectionController x c Object and section controller at section BBOtherStaticTagsLettersVisitors BBOtherSectionController x e Object and section controller at section BBSystemTip x d c BBOtherSectionController x f IGListBindingSectionController x e d Data source BBTimelineSectionController x e d Selection delegate null Object BBTimelineModel x a f View models BBTimelineDatetimeViewModel x b b BBTimelineDatetimeViewModel BBTimelineEventViewModel x b a BBTimelineEventViewModel BBTimelineMessageViewModel x b BBTimelineMessageViewModel x b Number of items View controller BBTimelineViewController x c Collection context IGListAdapter x ea Section Is first section No Is last section No Supplementary view source null Display delegate BBTimelineViewController x c Working range delegate null Scroll delegate null IGListBindingSectionController x e Data source BBTimelineSectionController x e Selection delegate null Object BBTimelineModel x a View models BBTimelineDatetimeViewModel x b BBTimelineDatetimeViewModel BBTimelineEventViewModel x b b BBTimelineEventViewModel BBTimelineMessageViewModel x b c BBTimelineMessageViewModel x b c Number of items View controller BBTimelineViewController x c Collection context IGListAdapter x ea Section Is first section No Is last section No Supplementary view source null Display delegate BBTimelineViewController x c Working range delegate null Scroll delegate null IGListBindingSectionController x e d Data source BBTimelineSectionController x e d Selection delegate null Object BBTimelineModel x a View models BBTimelineDatetimeViewModel x b d BBTimelineDatetimeViewModel BBTimelineEventViewModel x b e BBTimelineEventViewModel BBTimelineMessageViewModel x b e BBTimelineMessageViewModel x b e Number of items View controller BBTimelineViewController x c Collection context IGListAdapter x ea Section Is first section No Is last section No Supplementary view source null Display delegate BBTimelineViewController x c Working range delegate null Scroll delegate null IGListBindingSectionController x e Data source BBTimelineSectionController x e Selection delegate null a long long list Object BBTimelineModel x aede View models BBTimelineDatetimeViewModel x b c BBTimelineDatetimeViewModel BBTimelineEventViewModel x b BBTimelineEventViewModel BBTimelineMessageViewModel x b BBTimelineMessageViewModel x b Number of items View controller BBTimelineViewController x c Collection context IGListAdapter x ea Section Is first section No Is last section No Supplementary view source null Display delegate BBTimelineViewController x c Working range delegate null Scroll delegate null IGListBindingSectionController x e Data source BBTimelineSectionController x e Selection delegate null Object BBTimelineModel x aedf View models BBTimelineDatetimeViewModel x b fe BBTimelineDatetimeViewModel BBTimelineEventViewModel x b a BBTimelineEventViewModel BBTimelineMessageViewModel x b a BBTimelineMessageViewModel x b a Number of items View controller BBTimelineViewController x c Collection context IGListAdapter x ea Section Is first section No Is last section No Supplementary view source null Display delegate BBTimelineViewController x c Working range delegate null Scroll delegate null Object and section controller at section BBOtherStaticNoMore BBOtherSectionController x fc Collection view details Class UICollectionView instance x Data source IGListAdapter x ea Delegate IGListAdapterProxy x ba Layout UICollectionViewFlowLayout x eea Frame bounds Number of sections items in section items in section items in section items in section items in section items in section a long long list items in section items in section items in section Visible cell details thread backtrace thread queue comapplemainthread stop reason breakpoint frame x b fec libobjcAdylibobjcexceptionthrow frame x b fc CoreFoundation NSException raiseformatarguments frame x b f e Foundation NSAssertionHandler handleFailureInFunctionfilelineNumberdescription frame x f ab IGListKit IGListWorkingRangeHandler updateWorkingRangesWithListAdapter self x d de cmdupdateWorkingRangesWithListAdapter listAdapter x ea at IGListWorkingRangeHandlermm frame x f c c IGListKit IGListWorkingRangeHandler willDisplayItemAtIndexPathforListAdapter self x d de cmdwillDisplayItemAtIndexPathforListAdapter indexPath xcae a f ba listAdapter x ea at IGListWorkingRangeHandlermm frame x ecd c IGListKit IGListAdapterself x ea cmdcollectionViewwillDisplayCellforItemAtIndexPath collectionView x cell x fd indexPath xcae a f ba collectionViewwillDisplayCellforItemAtIndexPath at IGListAdapterUICollectionViewm frame x b c e c UIKitCore UICollectionView notifyWillDisplayCellIfNeededforIndexPath frame x b c fc UIKitCore UICollectionView createPreparedCellForItemAtIndexPathwithLayoutAttributesapplyAttributesisFocusednotify frame x b c cb UIKitCore UICollectionView updateVisibleCellsNow frame x b c b UIKitCore UICollectionView layoutSubviews frame x b b c UIKitCore UIViewCALayerDelegate layoutSublayersOfLayer frame x b ca c libobjcAdylib NSObject performSelectorwithObject frame x b f fa c QuartzCore CALayer layoutSublayers frame x b f feec QuartzCoreCALayerlayoutifneededCATransaction frame x b f QuartzCoreCALayerlayoutanddisplayifneededCATransaction frame x b e c QuartzCoreCAContextcommittransactionCATransaction double frame x b ea fd QuartzCoreCATransactioncommit frame x b ddb bc QuartzCoreCADisplayDisplayLinkdispatchitemsunsigned long long unsigned long long unsigned long long frame x b ea cc QuartzCoredisplaytimercallbackCFMachPort void long void frame x b b dac CoreFoundationCFMachPortPerform frame x b e c CoreFoundationCFRUNLOOPISCALLINGOUTTOASOURCE PERFORMFUNCTION frame x b e e CoreFoundationCFRunLoopDoSource frame x b deac CoreFoundationCFRunLoopRun frame x b ddf CoreFoundationCFRunLoopRunSpecific frame x bc b GraphicsServicesGSEventRunModal frame x b a UIKitCoreUIApplicationMain frame x adfe TimeHutmainargc argv x bb b at mainm frame x b ce libdylddylibstart selfcollectionContext performBatchAnimatedtrue updates idIGListBatchContext Nonnull batchContext batchContext reloadInSectionControllerself atIndexes NSIndexSet indexSetWithIndex completion BOOL finished Refresh the current group as follows Other groups will be affected Changes in this pull request Issue fixed Checklist x All tests pass Demo project builds and runs I added tests an experiment or detailed why my change isnt tested I added an entry to the CHANGELOGmd for any breaking changes enhancements or bug fixes x I have reviewed the contributing guide Changes in this pull request On macOS Catalina when pod install on Example have an error at podspce file when run scrip Versionsh defaults read is fail on macOS not find Info filepath Domains may also be specified as a path to an arbitrary plist file with or without the plist extension For example defaults read LibraryContainerscomappleTextEditDataLibraryPreferencescomappleTextEditplist normally gives the same result as the two previous examples In the following example defaults write DesktopTestFile foo bar will write the key foo with the value bar into the plist file TestFileplist that is on the users desktop If the file does not exist it will be created If it does exist the keyvalue pair will be added overwriting the value of foo if it already existed WARNING The defaults command will be changed in an upcoming major release to only operate on preferences domains General plist manipulation utili ties will be folded into a different commandline program So update to other cmd Use plutil Issue fixed Checklist x All tests pass The demo project builds and runs x I added tests an experiment or detailed why my change isnt tested I added an entry to the CHANGELOGmd for any breaking changes enhancements or bug fixes x I have reviewed the contributing guide New issue checklist x I have reviewed the README and documentation x I have searched existing issues and this is not a duplicate x I have attempted to reproduce the issue and include an example project General information IGListKit version iOS versions Any CocoaPodsCarthage version None Xcode version Xcode DevicesSimulators affected Any Reproducible in the demo project YesNo Yes Related issues Debug information bash Please include debug logs using the following lldb command po IGListDebugger dump Just two screenshots enough to say the issues 