In trying to reproduce the apt progress bar I adapted so that some lines are printed go package main import time fmt githubcomgosuriuiprogress func main uiprogressStart start rendering bar uiprogressAddBar Add a new bar optionally append and prepend completion and elapsed time barAppendCompleted barPrependElapsed i for barIncr timeSleeptimeMillisecond i if i fmtPrintlnWell hello there Id like for the lines to print above the progress bar which would stay at the bottom However Im only getting duplicated progress and only one line printed also not at the right place but Im sure thats another issue s s s s s s s s s s Well hello there Hello I may be missing a point but it seems that starting and stoping a uiprogress twice make the program panic Please find bellow a short test program go package main import fmt time githubcomgosuriuiprogress func createbar uiprogressStart defer uiprogressStop create a new bar and prepend the task progress to the bar count bar uiprogressAddBarcountAppendCompletedPrependElapsed barPrependFuncfuncb uiprogressBar string return fmtSprintfTask dd bCurrent count for i i count i barIncr timeSleeptimeMillisecond timeDuration timeSleeptimeMillisecond timeDuration func main createbar createbar The console sh go run maingo Task s Task s panic close of closed channel goroutine running githubcomgosuriuiprogressProgressListen xc a e UsersjtbonhommeDevelopmentsgolangsrcgithubcomgosuriuiprogressprogressgo x f created by githubcomgosuriuiprogressProgressStart UsersjtbonhommeDevelopmentsgolangsrcgithubcomgosuriuiprogressprogressgo x f exit status My program is creating Bars like so uiprogressStart bar uiprogressAddBarintfileSizePrependElapsed AppendCompleted barPrependFuncfuncb uiprogressBar string return paddedName barFill barHead barEmpty In a calback keep calling this until done barSetintcount uiprogressStop I would expect to see lines of output one per bar instead I am seeing the following Bar Bar Bar Bar Bar I am creating the bars in arbitrary goroutines Is this an issue Should all the bars be created in a single goroutine Doing something pretty simple here and Im not sure why the display is wrong uiprogressStart bar uiprogressAddBarfilesCount barAppendFuncfuncb uiprogressBar string return fmtSprintfdd bCurrent bTotal for file range files process barIncr Added Go modules files gomod and gosum The code was using a new instance of uilive and not the one with the correct Out instance This means even if you set uiprogressOut to dev null youll still get progress bars This PR uses the correct instance Thanks for the library Apparently I get for the time elapsed prepend when using Set Is this by design It may be desirable to have runes that are wider than a byte such as for the uiprogressHead Additionally it would be nice to support not only runes but also short strings so that ansi control charaters can be used for color Currently the variables needed to show time elapsed are only set when using Incr This PR makes it also work when using Set