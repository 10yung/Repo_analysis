Right now assertWithinTolerance will never fail The changes i made fix that while avoiding making tests fail that should not Changes fix assertWithinTolerance make assertWithinRange to be inclusive testsetchannels fails otherwise increase tolerance for testspeedup from to It fails by a small amount otherwise The speedup function cannot be expected to always change the length by the factor to precision After these changes the testdBFS fails as it should I have another bug fix that will resolve this error which i will submit in another pull request How to convert ADTS stream to PCM with this lib Steps to reproduce The code Im running looks close to this for paragraph in enumerateparagraphs audio texttomp paragraph concatenated AudioSegmentfrommp ioBytesIOaudio Expected behavior This works fine for a small amount of paragraphs The mp s are concatenated correctly Actual behavior For a large number of paragraphs the program crashes with OSError Errno Too many open files At line of the code example Problem AudioSegmentfrommp ioBytesIOaudio shouldnt be opening any filestreams to my knowledge and crashes eventually when too many filestreams are opened Is there some way to manually close down the file streams that are opened once they are not used Your System configuration Python version Pydub version ffmpeg or avlib avlib ffmpegavlib version Is there an audio file you can include to help us reproduce Any large number of audio files will work Steps to reproduce utterance AudioSegmentfromwavwavFilepath utteranceexporttestwav formatwav Expected behavior Tell us what should happen Testwav should be identical to original Actual behavior Tell us what happens instead I get a distorted version of the file Your System configuration Python version Pydub version ffmpeg or avlib ffmpeg ffmpegavlib version Is there an audio file you can include to help us reproduce WAV file framerate samplewidth bit converted to bit by default channels duration seconds Extra info I replicated the process using the soundfile module and it worked perfectly Is there a way to take Pydubs Audiosegment data and pass it into soundfile i tried the following to no avail samples utterancegetarrayofsamples samples nparraysamples samples samplesreshapecleantalkchannels orderF samplesshape probably lensong in samples soundfilewritesoundfilewav samples subtypePCM Enormous files can cause fixwavheaders to bomb out Itd be great if they could be properly parsed but failing that at least raise CouldntDecodeError instead of crashing out with a struct error Currently certain files will fail to parse but instead of raising CouldntDecodeError they bomb with KeyError due to the stderr information being misparsed This small tweak to the regex should allow them to be parsed correctly Closes Steps to reproduce Examine detectsilence method in pydubsilence Expected behavior Should read searched Actual behavior It actually reads seached Deleted Steps to reproduce Have multiple WAV files Generate a second silent WAV object using audioSegmentsilent concatenate these two WAV files with the second silence between them using the operator Expected behavior Tell us what should happen There should be complete silence with no audio in the second between the WAV files Actual behavior Tell us what happens instead At the end of the silence period there is a sharp click heard Your System configuration Python version Pydub version ffmpeg or avlib ffmpeg ffmpegavlib version ffmpeg version ubuntu Copyright c the FFmpeg developers Is there an audio file you can include to help us reproduce Yes see this link You can include the audio file in this issue just put it in a zip file and dragdrop the zip file into the github issue You can download the audio file from the github link Code that generated that audio file 