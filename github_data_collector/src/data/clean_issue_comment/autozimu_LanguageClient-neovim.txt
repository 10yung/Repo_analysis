Some signs would not be removed from the sign column when their diagnostic was fixed Debugging revealed that signstoadd would include two signs for the same line statesignsis keyed by line number so the second sign for a line will overwrite the first when signstoadd is recorded in state The first signs id is lost when its overwritten so it cant be removed signstoadd included two signs for the same line because itertools groupby only groups consecutive runs its more efficient you only need to remember the current group and can flush it when the key changes This quick fix sorts diagnostics by line number so that groupby gives us one group per line number fixes Mostly done the initial implementation for supporting for the semantic highlighting protocol proposed by people from the vscode language server As far as I know currently clangd version and eclipsejdtls both have working implementations of this protocol This PR adds a new setting to configure semantic highlight gLanguageClientsemanticHighlightMaps Which is a per language map like serverCommands of mappings from semantictextmate scopes to vim highlight groups Here are a couple of sample configurations and screenshots to go along Using clangd for C vim let gLanguageClientsemanticHighlightMaps cpp Function entitynamefunctioncpp Function entitynamefunctionmethodcpp CppNamespace entitynamenamespacecpp CppEnumConstant variableotherenummembercpp CppMemberVariable variableotherfieldcpp Type entitynametypeclasscpp Type entitynametypeenumcpp Type entitynametypetemplatecpp hi CppEnumConstant ctermfgMagenta guifgAD FA ctermnone guinone hi CppNamespace ctermfgYellow guifgBBBB ctermnone guinone hi CppMemberVariable ctermfgWhite guifgWhite span img src width img src width span brbr Using eclipsejdtls for Java vim let gLanguageClientsemanticHighlightMaps java JavaStaticMemberFunction storagemodifierstaticjava entitynamefunctionjava JavaMemberVariable metadefinitionvariablejava metaclassbodyjava metaclassjava Function entitynamefunctionjava Function entitynamefunctionjava Type entitynametypeclassjava Type entitynametypeclassjava hi JavaStaticMemberFunction ctermfgGreen ctermnone guifgGreen guinone hi JavaMemberVariable ctermfgWhite ctermitalic guifgWhite guiitalic span img src width img src width span brbr TODO Support for vim with textprop Disable feature when the version of vim or neovim does not support the needed APIs More tests The PR is broken down into commits since I had to upgrade the lsptypes crate to get the types needed for semantic highlighting Let me know what you think and if there are any improvementsfixes needed Related PRsIssues Microsoftvscodelanguageservernode Also see this document for exactly how the protocol works This commit adds the gLanguageClientechoProjectRoot to the docs Ive found this option by digging into the code For me its pretty annoying not to be able to disable it as otherwise the Project root messages litter my vim console as I navigate from file to file Thanks for your work on this plugin Its great and for a moving target and something very new to nvim very robust Did you upgrade to latest plugin version Yes Did you upgrade tocompile latest binary Run shell command binlanguageclient version to get its version number Yes Neovim users only Did you check output of checkhealth LanguageClient healthLanguageClientcheck OK binary found vimpluggedLanguageClientneovimbinlanguageclient OK languageclient fb afed c b b e ca e a OK Floating window is supported and will be used for hover Did you check troubleshooting Yes I havent analysed the log file yet troubleshooting Describe the bug Some symbols in the gutter signcolumn remain after the diagnostic is cleared The quickfix window does not display a diagnostic on the line with the symbol The status line does not display any diagnostics when the cursor is on the line with the symbol Toggling the signcolumn does not fix the issue Redrawing the screen with ctrll does not fix the issue Stopping and Starting the language client does not fix the issue Restarting neovim does fix the issue Ive seen it with every language server Ive used typescriptlanguageserver javascripttypescriptlangserver eclipse jdtl Environment neovimvim version nvim version or vim version nvim version NVIM v Build type RelWithDebInfo LuaJIT Compilation removed Features acl iconv tui See help featurecompile system vimrc file VIMsysinitvim fallback for VIM usrlocalsharenvim Run checkhealth for more info This plugin version git revparse short HEAD fb afe This plugins binary version binlanguageclient version languageclient fb afed c b b e ca e a To Reproduce call plugbeginlocalsharenvimplugged Plug autozimuLanguageClientneovim branch next do bash installsh call plugend set signcolumnyes let gLanguageClientserverCommands rust npx typescriptlanguageserver stdio let gLanguageClientloggingLevel INFO let gLanguageClientvirtualTextPrefix let gLanguageClientloggingFile expandlocalsharenvimLanguageClientlog let gLanguageClientserverStderr expandlocalsharenvimLanguageServerlog Is your feature request related to a problem Please describe Currently the LSC updates the active quickfix list Say I have a quick fix list populated with grep matches when LSC kicks in it replaces the grep matches Describe the solution youd like Update use a single Quickfix list as opposed to the active one since multiple apps use the quickfix list Additional context I am learning Rust and would like to implement this feature Some ideas to start would be appreciated I see there is no direct way to get the quickfix id which I guess is used for updating Is there some other way of implementing this The display of complement candidates is strange on scala Is your feature request related to a problem Please describe Some servers would greatly benefit from having diagnostics on multiple lines An example of this is ghcide If I have a type error that is slightly longer it easily doesnt fit without putting it on multiple lines Describe the solution youd like I imagine this happening via virtual text but seeing as how its usually attached to one line Im not sure how hard this would be to implement This is what Im imaginingdreaming of Ideally also some way for diagnostics to remain hidden until you hover the item that they are attached to Describe alternatives youve considered Using pop up windows to instead have the same functionality is another idea However I particularly dont like pop up windows because they obscure code around where I am currently at and usually it is just as important as what is in the pop up window Thanks for the client It seems to be working great so far First of all apologies for sending a PR for an unsolicited feature but I figured Id try implementing it instead of asking for someone to implement it If this feature is decidedly not wanted thats ok I learned something in the process anyway Having made my apology This PR adds a function LanguageClienthighlightSymbolUnderCursor to highlight references of the symbol under the cursor It also adds a trigger for CursorHold to fire this new function when the user hasnt moved the cursor for updatetime The feature can be turned off or on by setting the LanguageClienthighlightSymbolUnderCursor option which is set to by default The drawback of having this enabled is that it has to call nvimbufclearhighlight on each CursorMoved trigger as to clear any possible highlighted references caused by this new feature img src width Did you upgrade to latest plugin version Yes Did you upgrade tocompile latest binary Run shell command binlanguageclient version to get its version number Yes Neovim users only Did you check output of checkhealth LanguageClient healthLanguageClientcheck OK binary found UsersUSERlocalsharenvimpluggedLanguageClientneovimbinlanguageclient OK languageclient ffab ef e acae f c f a d e b OK Floating window is supported and will be used for hover Did you check troubleshooting Yes I get the same error with a minvimrcvim I have shared the configuration below troubleshooting Describe the bug A clear and concise description of what the bug is Using Julia and neovim with the following configuration The LanguageClientneovim plugin sends the following message to the Julia LanguageServer INFO writerSomejulia srcrpcclientrs Somejulia jsonrpc methodinitializeparamscapabilitiestextDocumentcolorProvidernullcompletioncompletionItemsnippetSupportfalsedeclarationlinkSupporttruedefinitionlinkSupporttrueimplementationlinkSupporttruepublishDiagnosticsrelatedInformationtruesignatureHelpsignatureInformationparameterInformationlabelOffsetSupporttruetypeDefinitionlinkSupporttrueworkspaceapplyEdittruedidChangeWatchedFilesdynamicRegistrationtrueprocessId rootPathUsersUSERGitReposTestrootUrifileUsersUSERGitReposTesttraceoffid colorProvider is set to null in this message According to the specification colorProvider can either be not defined or a boolean value This causes the following error Warning no Manifesttoml file found static paths used Revise juliapackagesReviseS mrlsrcRevisejl Info Started symbol server Info Tried to load bac e e ebc feeabe a f d but failed to find it in the manifest Info Tried to load e e df d db ee fcccc c e but failed to find it in the manifest Info Tried to load f ee b df ae d ebab eaf but failed to find it in the manifest Info Tried to load f da b fffb c cbdb but failed to find it in the manifest Info Tried to load b f ece eb dc eed fee but failed to find it in the manifest Info Tried to load fdba b c decdf but failed to find it in the manifest Info store set in seconds Info DictStringAnyworkspace DictStringAnydidChangeWatchedFiles DictStringAnydynamicRegistration trueapplyEdit truetextDocument DictStringAnydefinition DictStringAnylinkSupport truedeclaration DictStringAnylinkSupport truepublishDiagnostics DictStringAnyrelatedInformation truecompletion DictStringAnycompletionItem DictStringAnysnippetSupport falseimplementation DictStringAnylinkSupport truesignatureHelp DictStringAnysignatureInformation DictStringAnyparameterInformation DictStringAnylabelOffsetSupport truetypeDefinition DictStringAnylinkSupport truecolorProvider nothing ERROR MethodError Cannot convert an object of type Nothing to an object of type Bool Closest candidates are convertTypeT MatchedT where TNumber at numberjl convertTypeT MatchedNumber where TNumber at numberjl convertTypeT MatchedPtr where TInteger at pointerjl Stacktrace convertTypeUnionMissing Bool Nothing at missingjl LanguageServerCapabilitiesNothing at UsersUSERjuliadevLanguageServersrcprotocolinitializejl LanguageServerTextDocumentClientCapabilitiesDictStringAny at UsersUSERjuliadevLanguageServersrcprotocolprotocoljl LanguageServerClientCapabilitiesDictStringAny at UsersUSERjuliadevLanguageServersrcprotocolprotocoljl LanguageServerInitializeParamsDictStringAny at UsersUSERjuliadevLanguageServersrcprotocolinitializejl parseparamsTypeValinitialize DictStringAny at UsersUSERjuliadevLanguageServersrcrequestsinitjl parseTypeLanguageServerJSONRPCRequest DictStringAny at UsersUSERjuliadevLanguageServersrcjsonrpcjl runLanguageServerInstance at UsersUSERjuliadevLanguageServersrclanguageserverinstancejl toplevel scope at none UsersUSERjuliadevLanguageServercontriblanguageserversh line kill No such process LanguageServerjl conforms to the specification strictly See discussion here for more information Environment neovimvim version nvim version or vim version nvim version NVIM v ge bd Build type Release LuaJIT beta Compilation ApplicationsXcode appContentsDeveloperToolchainsXcodeDefaultxctoolchainusrbinclang UFORTIFYSOURCE DFORTIFYSOURCE O DNDEBUG Wall Wextra pedantic Wnounusedparameter Wstrictprototypes stdgnu Wshadow Wconversion Wmissingprototypes Wimplicitfallthrough Wvla fstackprotectorstrong fdiagnosticscolorauto DINCLUDEGENERATEDDECLARATIONS DGNUSOURCE DNVIMMSGPACKHASFLOAT DNVIMUNIBIHASVARFROM DMINLOGLEVEL IUserstravisbuildneovimbotcibuildneovimbuildconfig IUserstravisbuildneovimbotcibuildneovimsrc IUserstravisbuildneovimbotcibuildneovimdepsusrinclude Iusrlocaloptgettextinclude Iusrinclude IUserstravisbuildneovimbotcibuildneovimbuildsrcnvimauto IUserstravisbuildneovimbotcibuildneovimbuildinclude Compiled by travisTravissMac local Features acl iconv tui See help featurecompile system vimrc file VIMsysinitvim fallback for VIM sharenvim Run checkhealth for more info This plugin version git revparse short HEAD cd localsharenvimpluggedLanguageClientneovim git revparse short HEAD fba This plugins binary version binlanguageclient version localsharenvimpluggedLanguageClientneovimbinlanguageclient version languageclient ffab ef e acae f c f a d e b Minimal vimrc content A minimal vimrc is the smallest vimrc that could reproduce the issue Refer to an example here minvimrcvim call plugbeginlocalsharenvimplugged Plug JuliaEditorSupportjuliavim Plug autozimuLanguageClientneovim branch next do bash installsh call plugend Always draw sign column Prevent buffer moving when addingdeleting sign set signcolumnyes let gLanguageClientserverCommands julia ApplicationsJulia appContentsResourcesjuliabinjulia startupfileno historyfileno project e using LanguageServer using Pkg envpath dirnamePkgTypesContextenvprojectfile debug false server LanguageServerLanguageServerInstancestdin stdout debug envpath serverrunlinter true runserver let gLanguageClientloggingLevel INFO let gLanguageClientvirtualTextPrefix let gLanguageClientloggingFile expandlocalsharenvimLanguageClientlog let gLanguageClientserverStderr expandlocalsharenvimLanguageServerlog Language server link and version minvimrcvim To Reproduce Steps to reproduce the behavior Store settings above in minvimrcvim Start vim nvim u minvimrcvim testjl See error in localsharenvimLanguageServerlog Current behavior The current behaviour sends colorProvider null as part of the JSON and that does not match the spec Expected behavior Send colorProvider false instead or dont send a key value pair for the key colorProvider if the value is null Did you upgrade to latest plugin version Yes Did you upgrade tocompile latest binary Run shell command Yes binlanguageclient version to get its version number languageclient ffab ef e acae f c f a d e b Neovim users only Did you check output of checkhealth LanguageClient OK Describe the bug The display of complement candidates is strange on scala Environment neovimvim version nvim version or vim version This plugin version git revparse short HEAD fbaa def a e f f c def de cb e Minimal vimrc content A minimal vimrc is the smallest vimrc that could set hidden set completeoptmenu set signcolumnyes let gLanguageClientuseVirtualText let gLanguageClientautoStart let gLanguageClientloadSettings let gLanguageClientserverCommands scala metalsvim minvimrcvim To Reproduce Steps to reproduce the behavior Install Metals sbt pluginspluginssbt resolvers ResolversonatypeReposnapshots addSbtPluginchepflscala sbtbloop Create Scala project sbt new nabezokodaikonscalabasicg Run sbt cd mysomethingproject sbt Start Neovim Open Mainscala File Start Metals Edit Mainscala img width alt src For example the character scala after Int is entered by completion Therefore it will not be code that can be compiled