This is a workaround for an OpenSSL TLS bug that results in data loss when oneway protocols are used and a connection is closed by the client right after sending data TLS session tickets make it impossible to reliably implement communication patterns where the server never sends applicationlevel data SSLCTXsetnumtickets disables TLS session tickets no session ticket will be sent to the client after a full handshake Tickets are used for session resumption An alternative workaround would be doing a bidirectional SSL shutdown finishing but syslogng is usually used together with other applications that may not take the bidi shutdown step it is not mandatory not even in RFC Originated from syslogng Version of syslogng Platform Any platform Ubuntu Xenial in my case Issue Failure kafkac destination halts if consumer is down and kafkas queue is filled This does not fix itself after restarting the kafka consumer Per my current understanding the root cause is the following We call rdkafkaproduce from the worker thread with the RDKAFKAMSGFBLOCK flag which makes it a blocking call static gboolean publishmessageKafkaDestWorker self LogMessage msg KafkaDestDriver owner KafkaDestDriver selfsuperowner if rdkafkaproduceownertopic RDKAFKAPARTITIONUA RDKAFKAMSGFFREE RDKAFKAMSGFBLOCK selfmessagestr selfmessagelen selfkeylen selfkeystr NULL selfkeylen logmsgrefmsg and we poll the client from the same worker thread static void drainresponsesKafkaDestWorker self KafkaDestDriver owner KafkaDestDriver selfsuperowner we are only draining responses in the first worker thread so all callbacks originate from the same thread and we dont need to synchronize between workers if selfsuperworkerindex return gint count rdkafkapollownerkafka The rdkafka API tells us to poll from a different thread RDKAFKAMSGFBLOCK block p produce call if p queuebufferingmaxmessages or p queuebufferingmaxkbytes are exceeded Messages are considered inqueue from the point they are accepted by produce until their corresponding delivery report callbackevent returns It is thus a requirement to call rdkafkapoll or equiv from a separate thread when FBLOCK is used See WARNING on c RDKAFKAMSGFBLOCK above Steps to reproduce Start a kafka consumer with a test topic Start syslogng with the config below Send one message to the UDP source echo asd devudplocalhost Close the kafka consumer Send messages to the UDP source this will completely fill kafkas queue Send another message which will cause the worker thread to block on the rdkafkaproduce call Restart the kafka consumer and observe that syslogng still halts Configuration version include sclconf define kafkaimplementation kafkac source smsg udpport destination dtest kafka bootstrapserverslocalhost topictest configqueuebufferingmaxmessages log source smsg destination dtest Input and output logs T Incoming log entry lineasd x a T Initial message parsing follows T Setting value namePROGRAM valueasd msg x fd T Setting value nameLEGACYMSGHDR valueasd msg x fd T Setting value nameMESSAGE value msg x fd T Source side message processing begin instance locationhomealltillaWorkinstallOSEetcsyslogngconf msg x fd T Setting value nameHOSTFROM valuelocalhost msg x fd T Setting value nameHOST valuelocalhost msg x fd T Setting value nameSOURCE valuesmsg msg x fd T Source side message processing finish instance locationhomealltillaWorkinstallOSEetcsyslogngconf msg x fd T Window size adjustment oldwindowsize windowsizeincrement suspendedbeforeincrementFALSE lastacktypeissuspendedFALSE T Messages available in queue starting inserts driverdtest workerindex T librdkafka REQTMOUT thrdalltillaPrecision alltillaPrecision Timed out inflight retryqueued outqueue partiallysent requests T librdkafka REQTMOUT thrdalltillaPrecision alltillaPrecision Timed out inflight retryqueued outqueue partiallysent requests T librdkafka REQTMOUT thrdalltillaPrecision alltillaPrecision Timed out inflight retryqueued outqueue partiallysent requests T librdkafka REQTMOUT thrdalltillaPrecision alltillaPrecision Timed out inflight retryqueued outqueue partiallysent requests T librdkafka REQTMOUT thrdalltillaPrecision alltillaPrecision Timed out inflight retryqueued outqueue partiallysent requests T librdkafka REQTMOUT thrdalltillaPrecision alltillaPrecision Timed out inflight retryqueued outqueue partiallysent requests T librdkafka REQTMOUT thrdalltillaPrecision alltillaPrecision Timed out inflight retryqueued outqueue partiallysent requests T librdkafka REQTMOUT thrdalltillaPrecision alltillaPrecision Timed out inflight retryqueued outqueue partiallysent requests T librdkafka REQTMOUT thrdalltillaPrecision alltillaPrecision Timed out inflight retryqueued outqueue partiallysent requests T librdkafka REQTMOUT thrdalltillaPrecision alltillaPrecision Timed out inflight retryqueued outqueue partiallysent requests T librdkafka REQTMOUT thrdalltillaPrecision alltillaPrecision Timed out inflight retryqueued outqueue partiallysent requests T librdkafka REQTMOUT thrdalltillaPrecision alltillaPrecision Timed out inflight retryqueued outqueue partiallysent requests T librdkafka REQTMOUT thrdalltillaPrecision alltillaPrecision Timed out inflight retryqueued outqueue partiallysent requests T librdkafka REQTMOUT thrdalltillaPrecision alltillaPrecision Timed out inflight retryqueued outqueue partiallysent requests T librdkafka REQTMOUT thrdalltillaPrecision alltillaPrecision Timed out inflight retryqueued outqueue partiallysent requests T librdkafka REQTMOUT thrdalltillaPrecision alltillaPrecision Timed out inflight retryqueued outqueue partiallysent requests T librdkafka REQTMOUT thrdalltillaPrecision alltillaPrecision Timed out inflight retryqueued outqueue partiallysent requests T librdkafka REQTMOUT thrdalltillaPrecision alltillaPrecision Timed out inflight retryqueued outqueue partiallysent requests T librdkafka REQTMOUT thrdalltillaPrecision alltillaPrecision Timed out inflight retryqueued outqueue partiallysent requests T librdkafka REQTMOUT thrdalltillaPrecision alltillaPrecision Timed out inflight retryqueued outqueue partiallysent requests T librdkafka REQTMOUT thrdalltillaPrecision alltillaPrecision Timed out inflight retryqueued outqueue partiallysent requests T librdkafka REQTMOUT thrdalltillaPrecision alltillaPrecision Timed out inflight retryqueued outqueue partiallysent requests T librdkafka REQTMOUT thrdalltillaPrecision alltillaPrecision Timed out inflight retryqueued outqueue partiallysent requests Azure auth header is a signalslot plugin that generates authorization header for applications connecting to Azure Original version developed by Ferenc Sipos Differences from original version interface cleanups code cleanups use signalslot mechanism instead of the HttpAuthHeader interface which will be removed soon GLib HMAC functions replaced by OpenSSL HMAC implementation This branch introduces a new parameter for disk based buffers for example tcp port diskbuffercompactionyes diskbufsize M Note the compaction argument it can either be yes or no With compactionyes syslogng will prune the unused space in the LogMessage representation making the representation of the LogMessage more compact This is useful when syslogng uses a lot of namevalue pairs during processing that become unused when delivering to a destination Simply unsetting these values using the unset rewrite operation does not help as the internal representation of a LogMessage will not release the memory associated with these namevalue pairs due to performance reasons that help when syslogng is CPU bound In some cases however the size of this overhead becomes significant Ive heard of x raw message size in some cases which becomes unbearable For these cases the compaction will drop unset values making the Logessage representation smaller at the cost of some CPU time that is needed to perform compaction The branch also contains a couple of fixes and code improvements in NVTable which I tried to describe in their respective commit messages so please review the branch patchbypatch At this point I have added a number of followup patches to the compaction related changes that improve readability or performance Let me know if you want me to shove them into a separate PR Tested with this mornings git snapshot when I try to build CentOS binaries with dbldrules rpmcentos it fails with the following error tardirsyslogng gb accf tar formatustar chf tardir eval GZIP gzip best c syslogng gb accf targz if test d syslogng gb accf then find syslogng gb accf type d perm exec chmod uw rm rf syslogng gb accf sleep rm rf syslogng gb accf else fi Your tarball is in build also available on the host in topsrcdirdbldbuild docker run e USERNAMEONHOSTroot networkhost privileged ulimit nofile v rootsyslogngsource v rootsyslogngdbldbuildbuild v rootsyslogngdbldinstallinstall e CONFIGUREOPTSCONFIGUREOPTSenabledebug enablemanpages withpython prefixinstall e CCACHEDIRbuildccache e VERSION gb accf e PATHusrlibccacheusrlib ccacheusrlocalsbinusrlocalbinusrsbinusrbinsbinbin e GRADLEUSERHOMEbuildgradlehome e GRADLEPROJECTCACHEDIRbuildgradlecache e GRADLEFLAGSbuildcache rm i balabitsyslogngubuntubionic sourcedbldpkgtarball snapshot Generating snapshot version in debian Generating snapshot version in syslogngspec docker run e USERNAMEONHOSTroot networkhost privileged ulimit nofile v rootsyslogngsource v rootsyslogngdbldbuildbuild v rootsyslogngdbldinstallinstall e CONFIGUREOPTSCONFIGUREOPTSenabledebug enablemanpages withpython prefixinstall e CCACHEDIRbuildccache e VERSION gb accf e PATHusrlibccacheusrlib ccacheusrlocalsbinusrlocalbinusrsbinusrbinsbinbin e GRADLEUSERHOMEbuildgradlehome e GRADLEPROJECTCACHEDIRbuildgradlecache e GRADLEFLAGSbuildcache rm i balabitsyslogngcentos sourcedbldrpm Running build as env rpmbuild define dbld ta syslogng gb accf targz without kafka with python error File buildsyslogng targz No such file or directory make dbldrules rpmcentos Error Description The default RPM behaviour is to treat the syslogngconf file as a configuration file and NOT replace it during RPM update Although this is appropriate for a configuration file the result is that the Version configuration item remains unchanged which forces the updated syslogng into compatibility mode Proposed solution For those users who wish to change the syslogngconf file but wish to keep up to date with the Version configuration I propose that the versionconf file be included in the RPM so that it can be included into the user configured syslogngconf with the outcome that compatibility mode is not forced Alternatives Devise a versioning of the configuration file that is not locked to the version of syslogng The configuration version would only change when a backwards compatibility break occurs in the configuration New configuration items can be added without a break in backwards compatibility so it would be rare to require a configuration version change and would be appropriate to force compatibility mode under such a condition For example Version through Version might all be the same meaning and be accepted by all versions of syslogng through because there were nod breaking changes in the configuration syntax Then starting in the Version would require an update and a verification that the client configuration file meets the new changed requirements Additional context A patch file for the syslogngspec file has been attached syslogngversionconfpatchgz How to create a newsfile entry Create a file in the news directory called typeprnummd where type is either feature New functionality bugfix Fix to a reported bug developernote Changes that are only interesting to developers internal API change etc other Other important but not categorized change You can calculate your PR number by checking the most recent Issue or PR on github but it could be a good practice to add the commit containing the news entry after you have opened your PR as you know your PR number already Fill it with the summary of the PR You can use any markdown formatting Please make sure that there are no lines longer than characters Make it sentences at most Start the entry with the affected modules then a colon For example networkdest Added Commit it with the message news typeprnum for example news bugfix How to create the NEWSmd file for the release Run newscreatenewsfilepy python required Fill the Highlights section in the newly created NEWSmd file Fill the contributors part of the Credits section The internal news file creating tool can generate it for you Note the script uses the VERSION file so it is advised to run the script after the version is bumped or make sure that you fill the version correctly by yourself I noticed that there is code in afsocket which looks like it should be setting a second keepalive interval on the socket if definedTCPKEEPTIME definedTCPKEEPIDLE definedTCPKEEPCNT selftcpkeepalivetime selftcpkeepaliveintvl selftcpkeepaliveprobes endif In practice these lines of code have no effect because the Linux header files do not define TCPKEEPTIME Looking earlier in the file it looks like the intention was to test for TCPKEEPINTVL instead ie diff git amodulesafsocketsocketoptionsinetc bmodulesafsocketsocketoptionsinetc index f a cccc bc amodulesafsocketsocketoptionsinetc bmodulesafsocketsocketoptionsinetc socketoptionsinetnewinstancevoid socketoptionsinitinstance selfsuper selfsupersetupsocket socketoptionsinetsetupsocket selfsupersokeepalive TRUE if definedTCPKEEPTIME definedTCPKEEPIDLE definedTCPKEEPCNT if definedTCPKEEPINTVL definedTCPKEEPIDLE definedTCPKEEPCNT selftcpkeepalivetime selftcpkeepaliveintvl selftcpkeepaliveprobes With the patch above applied the socket sends keepalive messages by default IP Flags S seq win options mss sackOKTS val ecr nopwscale length IP Flags S seq ack win options mss sackOKTS val ecr nopwscale length IP Flags ack win options nopnopTS val ecr length IP Flags ack win options nopnopTS val ecr length IP Flags ack win options nopnopTS val ecr length IP Flags ack win options nopnopTS val ecr length IP Flags ack win options nopnopTS val ecr length IP Flags ack win options nopnopTS val ecr length IP Flags ack win options nopnopTS val ecr length While this looks good I see that the documentation states that keepalive is expected to be disabled by default and the parameters set to It is not clear to me whether this means that the code is working as intended and perhaps these lines of code should instead be deleted In many places the current template option handled semitransparent the quoted and nonquoted templates The result in both cases are expanding the macro into foo inlined template filedevstdout templatefoo nonquoted filedevstdout templatefoo quoted The result in both cases are expanding the macro into bar referenced template template foo bar filedevstdout templatefoo nonquoted filedevstdout templatefoo quoted The template in this case prefers referenced over inline template regardless of the quoting The proposal is to remove the behaviour with qoute and nonqouted templates The qouted template templatefoo should always imply inlined template The nonqouted template templatefoo should always imply referenced template 