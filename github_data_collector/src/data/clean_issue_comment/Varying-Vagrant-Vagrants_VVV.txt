After the experience of I think that is the case to do a documentation page about it Just how to extend the Vagrantfile for own purposes This fixes Ive done research on how all the profiles are set up in Ubuntu and Linux in general Here is the information that has been the most helpful for me Ive also considered things on this answer Ive decided to move PATH changes and overall autocomplete initialization to bashaliases which is executed in most shell types Also copying the aliases not the profile to the root folder now to run on root Ive tested this and works with no problem I did a quick update to latest develop and reprovisioned the latest version of the core dev template gave me this in the terminal output default tmpvagrantshell line isutilityinstalled command not found We need to Refactor those usages Test the new changes From move grunt webpack and npm installs into their own bash functions to reduce duplication trynpminstalletc perhaps double check some of the conditionals do we really need to check for wploadphp to see if the svn checkout has been done Couldnt we check for a svn folder Perhaps we can set the git vs svn thing in the config Ive forgotten what the build command to update the build folder is itd be nice if it said so in the output Hello Thanks for using VVV and taking the time to open an issue Please use the Title field to provide a clear summary of the issue Have you tried the develop branch Your problem might already be fixed Its not possible to add an issue VaryingVagrantVagrantscustomsitetemplate so I hope its okay to open it here Expected Behavior If youre describing a bug tell us what should happen If youre suggesting a changeimprovement tell us how it should work When using the custom site template each constant added to wpconfigconstants should be added to the wpconfigphp Current Behavior If describing a bug tell us what happens instead of the expected behavior If suggesting a changeimprovement explain the difference from current behavior The constants dont get added to the wpconfigphp Possible Solution Not obligatory but suggest a fixreason for the bug or ideas how to implement the addition or change Steps to Reproduce for bugs Provide a link to a live example or an unambiguous set of steps to reproduce this bug Include code to reproduce if relevant Example configconfigyaml details yaml sites mysite repo hosts mysitetest custom wpconfigconstants TEST true details If there is an issue during provisioning it can often be helpful to see a full log of the output displayed during provisioning If this is available please copy and paste the log into a gist at gistgithubcom and paste the link here Logs give us a full log of the provision a copy paste from the terminal will do or a gist just remember to put it in code block tags with backticks before and after dont forget the splash screen with the logo Also your vvvcustomyml would be super handy details vagrant reload provision V V V Varying Vagrant Vagrants v gitmaster Platform platformdarwin shellbinzsh vagranthostsupdater shareddbfolderdisabled VVV Path UserssimonDropboxvvv Vagrant v VirtualBox vNA Docs Contribute Dashboard Running Custom Vagrant file with additional vagrant configs at UserssimonDropboxvvvCustomfile Finished running Custom Vagrant file with additional vagrant configs resuming normal vagrantfile execution default Running action triggers before reload default Running trigger VVV PreReload default Running inline script default Performing Database Backups default Backing up Database foundationpress default Database foundationpress backed up default Backing up Database mysite default Database mysite backed up default Backing up Database mybodydna default Database mybodydna backed up default vagranthostsupdater Removing hosts Password default Attempting graceful shutdown of VM default Checking if box ubuntubionic version is up to date default Clearing any previously set forwarded ports default Clearing any previously set network interfaces default Preparing network interfaces based on configuration default Adapter nat default Adapter hostonly default Forwarding ports default guest host adapter default Running preboot VM customizations default Booting VM default Waiting for machine to boot This may take a few minutes default SSH address default SSH username vagrant default SSH auth method private key default Machine booted and ready default Checking for guest additions in VM default The guest additions on this VM do not match the installed version of default VirtualBox In most cases this is fine but in rare cases it can default prevent things such as shared folders from working properly If you see default shared folder errors please make sure the guest additions within the default virtual machine match the version of VirtualBox you have installed on default your host and reload your VM default default Guest Additions Version KernelUbuntu r default VirtualBox Version default vagranthostsupdater Checking for host entries default vagranthostsupdater Writing the following entries to etchosts default vagranthostsupdater vvv VAGRANT f dc fd b c ff ec c default c de f ce d default vagranthostsupdater vvvtest VAGRANT f dc fd b c ff ec c default c de f ce d default vagranthostsupdater mysitetest VAGRANT f dc fd b c ff ec c default c de f ce d default vagranthostsupdater This operation requires administrative access You may skip it by manually adding equivalent entries to the hosts file default Setting hostname default Configuring and enabling network interfaces default Mounting shared folders default srvwww UserssimonDropboxvvvwww default srvconfig UserssimonDropboxvvvconfig default varlogphp UserssimonDropboxvvvlogphp default srvdatabase UserssimonDropboxvvvdatabasesql default varlognginx UserssimonDropboxvvvlognginx default srvprovision UserssimonDropboxvvvprovision default srvcertificates UserssimonDropboxvvvcertificates default varlogmemcached UserssimonDropboxvvvlogmemcached default varlogprovisioners UserssimonDropboxvvvlogprovisioners default srvwwwfoundationpresspublichtmlwpcontentthemesFoundationPress UserssimonDropboxReposFoundationPress default Running provisioner file default UserssimonDropboxvvvversion homevagrantversion default Running provisioner default shell default Running varfolders z j n r p zg cbr gnTvagrantshell jnm msh default Beginning Main VVV Provisioner if this is the first provision this may take a few minutes default Testing network connection default Succesful Network connection to ppalaunchpadnet detected default Bash profile setup and directories default Setting ownership of files in homevagrant to vagrant default Copying srvconfigbashprofile to homevagrantbashprofile default Copying srvconfigbashaliases to homevagrantbashaliases default Copying srvconfigvimrc to homevagrantvimrc default Copying srvconfigsubversionservers to homevagrantsubversionservers default Copying srvconfigsubversionconfig to homevagrantsubversionconfig default Copying srvconfigsshknownhosts to etcsshsshknownhosts default Copying srvconfigsshdconfig to etcsshsshdconfig default Reloading SSH Daemon default Testing network connection default Succesful Network connection to ppalaunchpadnet detected default default Main packages check and install default gitcoreppa already present skipping default default Setting up MySQL configuration file links default mysql group exists default mysql user present and has uid default uid mysql gid mysql groups mysql vboxsf default Copying srvconfigmysqlconfigvvvcorecnf to etcmysqlconfdvvvcorecnf default Copying custom apt sources default Checking Apt Keys default Running aptget update default Hit bionic InRelease default Hit bionic InRelease default Hit bionicsecurity InRelease default Hit bionic InRelease default Hit bionic InRelease default Hit bionic InRelease default Hit bionicupdates InRelease default Hit bionic InRelease default Hit bionicbackports InRelease default Hit bionic InRelease default Reading package lists default Installing aptget packages default Reading package lists default Building dependency tree default Reading state information default make is already the newest version ubuntu default unzip is already the newest version ubuntu default zip is already the newest version build default colordiff is already the newest version default dos unix is already the newest version default graphviz is already the newest version default ngrep is already the newest version ds default subversion is already the newest version ubuntu default curl is already the newest version ubuntu default g is already the newest version ubuntu default gettext is already the newest version ubuntu default git is already the newest version ubuntu default imagemagick is already the newest version dfsg ubuntu default memcached is already the newest version ubuntu default postfix is already the newest version ubuntu default softwarepropertiescommon is already the newest version default vim is already the newest version ubuntu default gitsvn is already the newest version ubuntu default ntp is already the newest version p dfsg ubuntu default pythonpip is already the newest version ubuntu default nginx is already the newest version bionic default phpimagick is already the newest version ubuntu debsuryorg default phpmemcache is already the newest version e b f ubuntu debsuryorg default phpmemcached is already the newest version ubuntu debsuryorg default phppear is already the newest version submodulesnotgz ubuntu debsuryorg default phpssh is already the newest version ubuntu debsuryorg default phpxdebug is already the newest version ubuntu debsuryorg default phpyaml is already the newest version ubuntu debsuryorg default php bcmath is already the newest version ubuntu debsuryorg default php cli is already the newest version ubuntu debsuryorg default php common is already the newest version ubuntu debsuryorg default php curl is already the newest version ubuntu debsuryorg default php dev is already the newest version ubuntu debsuryorg default php fpm is already the newest version ubuntu debsuryorg default php gd is already the newest version ubuntu debsuryorg default php imap is already the newest version ubuntu debsuryorg default php json is already the newest version ubuntu debsuryorg default php mbstring is already the newest version ubuntu debsuryorg default php mysql is already the newest version ubuntu debsuryorg default php soap is already the newest version ubuntu debsuryorg default php xml is already the newest version ubuntu debsuryorg default php zip is already the newest version ubuntu debsuryorg default mariadbserver is already the newest version mariabionic default nodejs is already the newest version nodesource default gitlfs is already the newest version default upgraded newly installed to remove and not upgraded default Removing unnecessary packages default Reading package lists default Building dependency tree default Reading state information default upgraded newly installed to remove and not upgraded default Cleaning apt caches default Running toolsinstall default Disabling XDebug if its present default Enabling tidewaysxhprof and xhgui if installed default WARNING Module tidewaysxhprof ini file doesnt exist under etcphp modsavailable default WARNING Module tidewaysxhprof ini file doesnt exist under etcphp modsavailable default WARNING Module tidewaysxhprof ini file doesnt exist under etcphp modsavailable default WARNING Module tidewaysxhprof ini file doesnt exist under etcphp modsavailable default WARNING Module xhgui ini file doesnt exist under etcphp modsavailable default WARNING Module xhgui ini file doesnt exist under etcphp modsavailable default WARNING Module xhgui ini file doesnt exist under etcphp modsavailable default WARNING Module xhgui ini file doesnt exist under etcphp modsavailable default Restarting PHP FPMs default XDebug is turned off default Checking for NVM default Installingupdating npm default usrbinnpm usrlibnodemodulesnpmbinnpmclijs default usrbinnpx usrlibnodemodulesnpmbinnpxclijs default npm default updated package in s default Installingupdating npmcheckupdates default usrbinnpmcheckupdates usrlibnodemodulesnpmcheckupdatesbinnpmcheckupdates default usrbinncu usrlibnodemodulesnpmcheckupdatesbinncu default npmcheckupdates default updated package in s default ackgrep already installed default Making sure the composer cache is not owned by root default Checking for Composer default Updating Composer default Changed current directory to usrlocalsrccomposer default You are already using composer version stable channel default Changed current directory to usrlocalsrccomposer default composerjson has been updated default Changed current directory to usrlocalsrccomposer default Loading composer repositories with package information default Updating dependencies including requiredev default Nothing to install or update default Package phpunitphpunitmockobjects is abandoned you should avoid using it No replacement was suggested default Generating autoload files default Updating Grunt CLI default Updated Grunt CLI default Adding graphviz symlink for Webgrind default Installing Shyaml for bash provisioning default Requirement already satisfied shyaml in usrlocallibpython distpackages default Requirement already satisfied pyyaml in usrlocallibpython distpackages from shyaml default default Setup configuration files default Copying srvconfiginitvvvstartconf to etcinitvvvstartconf default Copying srvconfignginxconfignginxconf to etcnginxnginxconf default Copying srvconfignginxconfignginxwpcommonconf to etcnginxnginxwpcommonconf default Copying srvconfignginxconfigphp upstreamconf to etcnginxupstreamsphp conf default Rsyncing srvconfignginxconfigsites to etcnginxcustomsites default sending incremental file list default deleting vvvautomybodydnaprovisionbeed dc b dc f ce b b conf default deleting vvvautomysiteprovision a de e c d d e cconf default deleting vvvautofoundationpressprovision dea d d f a f fafb conf default defaultconf default localnginxexampleconfsample default sent K bytes received bytes K bytessec default total size is K speedup is default Making sure the Nginx log files and folder exist default Starting MailHog default Copying srvconfigphpconfigphp fpmconf to etcphp fpmphpfpmconf default Copying srvconfigphpconfigphp wwwconf to etcphp fpmpooldwwwconf default Copying srvconfigphpconfigphp customini to etcphp fpmconfdphpcustomini default Copying srvconfigphpconfigopcacheini to etcphp fpmconfdopcacheini default Copying srvconfigphpconfigxdebugini to etcphp modsavailablexdebugini default Copying srvconfigphpconfigmailhogini to etcphp modsavailablemailhogini default Copying srvconfigmemcachedconfigmemcachedconf to etcmemcachedconf and etcmemcacheddefaultconf default default Restarting services default default Setup MySQL configuration file links default Copied srvconfigmysqlconfigmycnf to etcmysqlmycnf default Copied srvconfigmysqlconfigrootmycnf to homevagrantmycnf default service mysql restart default default No custom MySQL scripting found in databaseinitcustomsql skipping default Initial MySQL prep default default Starting MariaDB Database Import default Creating the foundationpress table if it doesnt already exist and granting the wp user access default Skipped import of foundationpress tables exist default Creating the mysite table if it doesnt already exist and granting the wp user access default Skipped import of mysite tables exist default Creating the mybodydna table if it doesnt already exist and granting the wp user access default Skipped import of mybodydna tables exist default Databases imported default Testing network connection default Succesful Network connection to ppalaunchpadnet detected default default Installingupdating wpcli and debugging tools default default Updating wpcli default Downloading from default md hash verified a f bba eb db f aa b ede default New version works Proceeding to replace default Success Updated WPCLI to the latest nightly release default default InstallUpdate PHPCodeSniffer phpcs see default default InstallUpdate WordPressCodingStandards sniffs for PHPCodeSniffer see default Loading composer repositories with package information default default default default Updating dependencies including requiredev default Nothing to install or update default Using config file srvwwwphpcsCodeSnifferconf default default Config value installedpaths updated successfully old value was CodeSnifferStandardsWordPressCodeSnifferStandardsVIPCodingStandardsCodeSnifferStandardsPHPCompatibilityCodeSnifferStandardsPHPCompatibilityParagonieCodeSnifferStandardsPHPCompatibilityWP default Using config file srvwwwphpcsCodeSnifferconf default default Config value defaultstandard updated successfully old value was WordPressCore default The installed coding standards are PEAR Zend PSR MySource Squiz PSR PSR WordPress WordPressExtra WordPressDocs WordPressCore WordPressVIPMinimum WordPressVIPGo PHPCompatibility PHPCompatibilityParagonieRandomCompat PHPCompatibilityParagonieSodiumCompat and PHPCompatibilityWP default Testing network connection default Succesful Network connection to ppalaunchpadnet detected default default Searching for SVN repositories that need upgrading default default Cleaning up Nginx configs default Cleaning the virtual machines etchosts file default default Provisioning complete in seconds default For further setup instructions visit default Running provisioner dashboard shell default Running varfolders z j n r p zg cbr gnTvagrantshell n n jsh default default Updating dashboard on the master branch default Running provisioner utilitysourcecore shell default Running varfolders z j n r p zg cbr gnTvagrantshell wwmnsh default Updating the core utility on the master branch default Running provisioner utilitycorememcachedadmin shell default Running varfolders z j n r p zg cbr gnTvagrantshell hanidvsh default Running utility provisioner for corememcachedadmin default The corememcachedadmin provisioner completed in seconds default Running provisioner utilitycoreopcachestatus shell default Running varfolders z j n r p zg cbr gnTvagrantshell oq khzsh default Running utility provisioner for coreopcachestatus default From default branch master FETCHHEAD default The coreopcachestatus provisioner completed in seconds default Running provisioner utilitycorephpmyadmin shell default Running varfolders z j n r p zg cbr gnTvagrantshell wox zsh default Running utility provisioner for corephpmyadmin default The corephpmyadmin provisioner completed in seconds default Running provisioner utilitycorewebgrind shell default Running varfolders z j n r p zg cbr gnTvagrantshell bbfn qsh default Running utility provisioner for corewebgrind default Loading composer repositories with package information default Updating dependencies including requiredev default Nothing to install or update default The corewebgrind provisioner completed in seconds default Running provisioner utilitycoretrustedhosts shell default Running varfolders z j n r p zg cbr gnTvagrantshell wzoaevsh default Running utility provisioner for coretrustedhosts default The coretrustedhosts provisioner completed in seconds default Running provisioner utilitycoretlsca shell default Running varfolders z j n r p zg cbr gnTvagrantshell xaxp dsh default Running utility provisioner for coretlsca default The coretlsca provisioner completed in seconds default Running provisioner utilitycorephp shell default Running varfolders z j n r p zg cbr gnTvagrantshell rbiish default Running utility provisioner for corephp default The corephp provisioner completed in seconds default Running provisioner utilitycorephp shell default Running varfolders z j n r p zg cbr gnTvagrantshell q ypx sh default Running utility provisioner for corephp default The corephp provisioner completed in seconds default Running provisioner sitemysite shell default Running varfolders z j n r p zg cbr gnTvagrantshell lmd sh default Running provisioner for site mysite default Updating mysite in srvwwwmysite default Searching for a site template provisioner vvvinitsh default Found vvvinitsh at srvwwwmysiteprovisionvvvinitsh default Script output will be logged to logprovisioners provisionersitemysitelog default Site provisioner script finished successfully default Adding domains to the virtual machines etchosts file default Adding hosts from the VVV config entry default Added mysitetest from vagrantconfigyml default Reloading Nginx default mysite provisioning finished in seconds default Running action triggers after reload default Running trigger VVV PostReload default Running inline script default Post Vagrant up script default Restarting Nginx and MySQL default default yay default default Thanks for V V V default using default default Vagrant Up has finished Visit default details Right now this doc at needs adjustment to encourage users to rely on the custom nginx functionality So it needs to direct users to this page for modifying the nginx file rather than explaining how to do it in its entirety Im curious did the VVV Vagrantfile evolve over time as one large configuration file or was it a design decision I ask because Im used to splitting code across multiple files and the Vagrantfile for VVV feels a bit difficult to navigate If this is the preferred method for VVV great If it is something that came about by chance Id be interested in helping modularize it I can see two places in particular where modularization might be useful Logic related to Vagrant x this could be called from a separate file only if necessary Provider related logic each provider could be split out into a separate file From my limited perspective it seems like doing this would make it easier for folks to customize VVV If they are running VirtualBox they dont need to even open the files for HyperV Parallels etc and vice versa One could split it out further with perhaps the sections most likely to be edited having their own file Im not sure what parts those are other than perhaps folder mappings This appears to be possible The expected behavior is to add lines such as vvvtest twowordpresstest onewordpresstest But the Vagrant host writes only this vvv VAGRANT ab d f df b e eb default c abb c ed a Have I done something wrong or is it a bug Hello Thanks for using VVV and taking the time to open an issue Please use the Title field to provide a clear summary of the issue Have you tried the develop branch Your problem might already be fixed What was The Command Used To Provision shell vagrant up provision What Kind of VVV Provision Was This delete all but one This was a fresh install on Windows I followed the instructions here LogsWhat Broke If describing a bug tell us what happens instead of the expected behavior Provisioner logs would be super helpful copy paste the entire log including the VVV logo into a code block or link to a gist Also your configconfigyml would be super handy Portion of output from vagrant up provision default Script output will be logged to logprovisioners provisionersitewordpresstrunklog default default default Site provisioner failed Check the full log for more details default default default Adding domains to the virtual machines etchosts file default Adding hosts from the VVV config entry default Added trunkwordpresstest from vagrantconfigyml default Reloading Nginx default wordpresstrunk provisioning had some issues check the log as the site may not function correctly provisioning took seconds default Running action triggers after reload default Running trigger VVV PostReload default Running inline script default Post Vagrant up script default Restarting Nginx and MySQL default default yay default default Thanks for V V V default using default default Vagrant Up has finished Visit The log file I removed some bad characters Running provisioner for site wordpresstrunk Updating wordpresstrunk in srvwwwwordpresstrunk Searching for a site template provisioner vvvinitsh Found vvvinitsh at srvwwwwordpresstrunkprovisionvvvinitsh Script output will be logged to logprovisioners provisionersitewordpresstrunklog Custom Site Template Develop Provisioner use this template for WP Core development For client work use the customsitetemplate instead Creating database wordpresstrunk if its not already there Granting the wp user priviledges to the wordpresstrunk database DB operations done Setting up the log subfolder for Nginx logs Creating publichtml folder if it doesnt exist already Updating WordPress trunk See Running svn up Updating Fetching external item into testsphpunitdatapluginswordpressimporter External at revision At revision Running npm install Site provisioner failed Check the full log for more details Adding domains to the virtual machines etchosts file Adding hosts from the VVV config entry Added trunkwordpresstest from vagrantconfigyml Reloading Nginx wordpresstrunk provisioning had some issues check the log as the site may not function correctly provisioning took seconds My configconfigyml file yaml This file is a YAML formatted file YAML indenting is done in spaces not tabs and whitespace is significant If you dont stick to this it will fail on provision IMPORTANT if you change this file you have to reprovision no exceptions Do this by running either this command vagrant reload provision Or if your machine is already turned on vagrant provision These are your websites and their names map on to the folders theyre located in See the docs for how to define these and what all the keys and options are sites latest version of WordPress can be used for client work and testing Check the readme at wordpressone skipprovisioning true description A standard WP install useful for building plugins testing things etc repo hosts onewordpresstest custom wpconfigconstants WPDEBUG true WPDEBUGLOG true WPDISABLEFATALERRORHANDLER true To disable in WP the FER mode wordpresstwo skipprovisioning true description A standard WP install useful for building plugins testing things etc repo custom locale itIT deletedefaultplugins true installplugins querymonitor hosts twowordpresstest The following commented out site configuration will create a standard WordPress site in wwwexamplesite available at Remember whitespace is significant Tabs and spaces mean different things mysite description My website repo hosts mysitetest The wordpressdevelop configuration is useful for contributing to WordPress Core It uses the built WP to serve the site wordpresstrunk skipprovisioning false provisioning this one takes longer so its disabled by default description An svn based WP Core trunk dev setup useful for contributor days Trac tickets patches repo nginxupstream php hosts trunkwordpresstest The following commented out site configuration will create a environment useful for contributions to the WordPress meta team eg WordCamps org etc wordpressmetaenvironment skipprovisioning true disabled by default this takes a long time to provision description An environment useful for contributions to the WordPress meta team repo hosts wpmetatest custom provisionsite buddypressorgtest true jobswordpressnettest true wordcamptest true wordpressorgtest true wordpresstvtest true The following commented out site configuration will create a standard WordPress site in wwwexamplesite available at Remember whitespace is significant Tabs and spaces mean different things examplesite repo hosts myexamplesitetest Utilities are system level items that arent websites that install tools or packages the core utilities install tools such as phpmyadmin utilities core The core VVV utility tlsca HTTPS SSLTLS certificates phpmyadmin Web based database client memcachedadmin Object cache management opcachestatus opcache management webgrind PHP Debugging mongodb needed for TidewaysXHGui tideways PHP profiling tool also installs xhgui check php php php php php php vmconfig controls how Vagrant provisions the virtual machine and can be used to increase the memory given to VVV and the number of CPU cores It can also be used to override the default provider being used within Vagrant vmconfig For WP core development we recommend at least GB If you have GB of RAM lower this to MB or you may encounter issues memory CPU cores cores this tells VVV to use the prebuilt box copied from the USB drive at contributor days once set to false do not change back to true and reprovision wordcampcontributordaybox false Due to a limitation within Vagrant the specified provider is only respected on a clean vagrant up as Vagrant currently restricts you to one provider per machine provider vmwareworkstation General VVV options general Backup the databases to the databasebackups subfolder on haltsuspenddestroy set to false to disable dbbackup true Import the databases if theyre missing from backups dbrestore true set to true to use a synced shared folder for MariaDB database storage dbsharetype false GitHub token to use from composer githubtoken xxxxxx Settings for the vagrant plugins supported by VVV vagrantplugins disksize GB requires the disk size vagrant plugin Possible Solution Not obligatory but suggest a fixreason for the bug or ideas how to implement the addition or change Steps to Reproduce for bugs Provide a link to a live example or an unambiguous set of steps to reproduce this bug Include code to reproduce if relevant Install choco in powershell Install virtualbox and vagrant in powershell install hostsupdater plugin create a configyml file and change provision for wordpresstrunk cp vvvnginxdefaultconf to vvvnginxconf in wwwwordpresstrunkprovision vagrant up provision If there is an issue during provisioning it can often be helpful to see a full log of the output displayed during provisioning If this is available please copy and paste the log into a gist at gistgithubcom and paste the link here Your Environment We need to know your machine setup to help If you dont know it copy paste the splash screen with the colourful VVV logo from the terminal it has everything we need to know to help you PS C Users nickyCLEMENTI vagrantlocal vagrant reload provision V V V Varying Vagrant Vagrants v gitdevelop Platform platformmingw windows HasWinAdminPriv vagranthostsupdater NoColour shareddbfolderdisabled VVV Path CUsersnickyCLEMENTIvagrantlocal Vagrant v VirtualBox v r 