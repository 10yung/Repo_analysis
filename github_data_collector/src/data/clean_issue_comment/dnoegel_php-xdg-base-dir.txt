getRuntimeDir returns the value of XDGRUNTIMEDIR when available When using sudo E something that can happen easily on a typical web host as people running scripts manually need to sudo to the same user that the web server uses to avoid file permission headaches and the environment might be required for token checks or language settings or similar XDGRUNTIMEDIR will point to the temp directory of the original user so the user which the script is running at wont be able to write the tempdir Eg on a server with someuser and webuser users where someuser has user ID and webuser has user ID when someuser executes sudo E u webuser foophp and foophp calls XdggetRuntimeDir in the environment of someuser XDGRUNTIMEDIR will be runuser and sudo inherits the environment so XdggetRuntimeDir will return that directory but runuser is owned by someuser with permission so foophp will fail to write it Some kind of sanity check of the current user vs the user ID in XDGRUNTIMEDIR would be nice Im trying to use psysh which uses of this library and each time I run it I get PHP Warning rmdirvarfoldersTphpxdgruntimedirfallbackmschinkel Directory not empty in pharusrlocalbinpsyshbuildvendordnoegelphpxdgbasedirsrcXdgphp on line PHP Stack trace PHP main usrlocalbinpsysh PHP Psy closure usrlocalbinpsysh PHP Psy Shellrun pharusrlocalbinpsyshsrcPsyfunctionsphp PHP Psy ShellinitializeTabCompletion pharusrlocalbinpsyshsrcPsyShellphp PHP Psy ShelladdTabCompletionMatchers pharusrlocalbinpsyshsrcPsyShellphp PHP Psy ShellgetTabCompletionMatchers pharusrlocalbinpsyshsrcPsyShellphp PHP Psy Shellall pharusrlocalbinpsyshsrcPsyShellphp PHP Psy Shellinit pharusrlocalbinpsyshbuildvendorsymfonyconsoleApplicationphp PHP Psy ShellgetDefaultCommands pharusrlocalbinpsyshbuildvendorsymfonyconsoleApplicationphp PHP Psy ConfigurationgetRuntimeDir pharusrlocalbinpsyshsrcPsyShellphp PHP Psy ConfigPathsgetRuntimeDir pharusrlocalbinpsyshsrcPsyConfigurationphp PHP XdgBaseDir XdggetRuntimeDir pharusrlocalbinpsyshsrcPsyConfigPathsphp PHP rmdir pharusrlocalbinpsyshbuildvendordnoegelphpxdgbasedirsrcXdgphp Looking at your code on line it seems you are doing an rmdir on a directory containing files Maybe you could replace with this from StackOverflow I dont like how an invalid runtime directory is unliked at the moment Instead I would like to throw an exception like throw new RuntimeExceptionUnsecure Runtime dir See also this example public function getRuntimeDirstricttrue could become public function getRuntimeDircreate true forceSecure true Feedback welcome Another alternative to PR and including the idea of bobthecow 