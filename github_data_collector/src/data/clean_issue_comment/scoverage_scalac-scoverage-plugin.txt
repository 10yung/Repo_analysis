This PR aims to simplify things by providing an API that can be accessed without using the Scala collection converters This PR adds a feature to report the name of the test that provides coverage of a specific statement This is reported in the statement list in the HTML report I will also submit an accompanying PR for the SBT plugin I implemented this in such a way that it shouldnt break anything if the compiler plugin is used with an older sbtmavengradle plugin the functionality is turned off For some reason the file writer behaves unpredictably on Scalajs which affects this feature I am planning to look into this in the future but for now I disabled the feature on Scalajs Closes and Quick and dirty I am not familiar with Scala macro so advices are appreciated This PR brings compatibility with the upcoming necessary due to I am not sure whether comments to arbitrary commits are working so great to draw any attention so I am repeating my request here as a new issue Currently release is broken regarding the usage of any exclusion settings This has been fixed a while ago in commit ddf d f a Can we get a new release with this fix I just spent some time debugging why my coverageExcludedFiles SBT setting would not be taken into account pray Thanks Necessary for Currently at compile time scoverage stores as a string the conical sourcePath path for the source file for a statement inside the instrument file scoveragecoverage This string is then again required during report generation to get the source file in ScoverageHtmlWriter This breaks in a distributed environment where report generation is happening on a different machine and is unable to locate the source file due to the absolute path The current fix makes the path relative when storing and turns it back to a conical one wrt cwd on retrieving Thanks projects This is in response to issue I have used a xml stream writer instead of creating an xml object in memory Thanks I get the OutOfMemoryError while generating scoverage xml reports for large projects targetsmodules In my opinion this is occurring because ScoverageXmlWriterscala tries to first generate the entire XML tree in memory before writing it out to the file One way to resolve the issue would be to use a stream writer eg javaxxmlstreamXMLStreamWriterto write the output This would involve passing the writer as an argument to the xmlcoverage Coverage function above Thanks