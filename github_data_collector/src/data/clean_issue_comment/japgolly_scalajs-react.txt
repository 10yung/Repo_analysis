now scala componentDidCatch backendonErrorerror info future scala componentDidCatchxxxxbackendonError or componentDidCatchxxxxonError A composite might be best It would be great if we could get scalajsreact release for both and branches of scalajs I wish cross compiling them were easier This PR includes because its necessary for this one to work so feel free to discard the other one Here we provide type class instances to achieve Sync CallbackTo and Effect AsyncCallback Also law testing is provided However law tests out of are failing in catsEffectstest I need help in fixing those These are Effect AsyncCallback effectrepeated callback ignored FAILED Effect AsyncCallback effectbracket release is called on Completed or Error FAILED Also please let me know if you need other changes to make this into a publishable artifact Thank you Now that isMounted is gone Im struggling a bit with the following scenario using OnUnmounted Make a request Component that originates request is unmounted request completes and attempts to schedule a subsequent request Couldnt OnUnmounted store a isMounted flag for client to check TimerSupport could then use that turn all of its methods into noops Or is there a better existing way to handle this Hey there I have recently boarded the Scala train and I want to try building ScalaJS apps with React The current tags and attributes syntax is okay but I find it to be slightly impractical personally Not wanting to imply it is bad or unusable or anything of that sort but I honestly wish I could use something like JSX I just did some research and a similar project to this one seems to have implemented something called scalax via Scala XML literals however unfortunately it no longer seems to be actively maintained How hard would it be to implement something like that here If you feel it is doable I can try to help out as much as I can Was gonna put together a PR but was hoping to get some buyin before I write it up Basically the modStateOsetStateO versions of modStateLsetStateL Currently it always generates React classes but really it could be a generic component builder that automatically decided the most appropriate React representation big win is that many components could be lighter functional components wrapped in Reactmemo In my usage most components are stateless and the only lifecycle method specified is shouldComponentUpdate display name should be optional not needed for functional components could be automatically derived anyway output type would need to reflect decision meaning it needs to be a typelevel calculation meaning we need to track more stuff at the type level meaning install methods that expect to be used by configure now explode with types meaning yuk would need a method to override automatic selection users must always have full control 