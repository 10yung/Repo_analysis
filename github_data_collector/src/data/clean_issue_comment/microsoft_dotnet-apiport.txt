I ported an application to NET CORE and the plan is to run it in a docker container on linux Actually most of the application runs as expected but trying to use SystemDirectoryServicesAccountManagement gives me the exception SystemPlatformNotSupportedException SystemDirectoryServicesAccountManagement is not supported on this platform However when I run api ananlyzer it tells me supported Frankely I dislike surprises like this Please advise Thanks Joachim added posix analyzesh script to simplify generating reports also updated docs to reflect to follow Microsoft released tool guidance at Also remove the target GetSignNuGetPackFiles which is not needed This is NET Core compatible so it runs on multiple OSs doesnt require a restore during the build as your GitVersion use did and it doesnt require a special azure pipelines step It sets the build number in Azure Pipelines to match the version actually built For example SystemTypeName is reported as not support on NET core However it is available since it is inherited from base class MemberInfo Since ApiPorts goal is identify missing APIs in target TFM we shouldnt report inherited APIs as missing However ApiPort gets the API information from APICatalog and API Catalog is shared by multiple tools like Apisofnet Should Apiport builds in logic to crawl the inherits chain or API Catalog categorize the inherited APIs differently Also fixes several build warnings Seriously this drops the download time from seconds to seconds I ran portability analyzer today and in essence it spotted usage of the follwing methods being non portable MSystemIODirectoryInfoGetAccessControl MSystemIODirectoryInfoSetAccessControlSystemSecurityAccessControlDirectorySecurity MSystemIOPipesNamedPipeServerStreamctorSystemStringSystemIOPipesPipeDirectionSystemInt SystemIOPipesPipeTransmissionModeSystemIOPipesPipeOptionsSystemInt SystemInt SystemIOPipesPipeSecuritySystemIOHandleInheritabilitySystemIOPipesPipeAccessRights MSystemIOPipesPipeStreamGetAccessControl MSystemIOPipesPipeStreamSetAccessControlSystemIOPipesPipeSecurity I d definitley expect security aspects to be covered in Platform Extensions aka Windows Compatibility Pack Is this an issue in analyzer or where can I ask a question to the Windows Compatibility Pack Thanks Joachim running the portability service under debugging we can observe that basic endpoints cant be reached like ResultFormatControllerGetDefault The same selfcontain apiport app works fine with public portable service And the net and netcoreapp apiport app built out of the same codebase as the selfcontained app works fine with localhosted service PublicKeyTokenParseString throws exception when the hex string is null