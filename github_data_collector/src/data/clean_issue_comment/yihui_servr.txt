Is there some way to view server logs Eg R writeLinesh HiH indexhtml servrhttd createTcpServer address already in use To stop the server run servrdaemonstop or restart your R session Serving the directory UsersstRlocalhost at If we now visit through the browser we see the html as expected But in the R console we dont see any details about that request eg HTTP method user agent IP etc Could it be possible to display it perhaps optionally with something along the lines of servrhttdverbose T rstudiohttpuv was recently merged in to httpuvs master branch and it might be useful for servr It adds the ability to serve files from the filesystem from the background IO thread using C only no R so it is faster than going through R it will not be blocked by the main R thread and it will not block the main R thread Initial attempt to fix It seems youve made a conscious decision to not display output when recompiling R markdown Would you be opposed to adding that option I think its helpful to see whats happening during interactive use and for debugging purposes in fact imo that should be the default Im already working on a PR just want to make sure you agree For animint weve been using servr and RSelenium to test whether plots are rendered in the browser the way we expect Plot rendering requires a file server so before I discovered the new daemon support I did something like r libraryservr libraryRSelenium cmd R e catSysgetpid file pidtxt servrhttddirsystemfile examplesmake package servr port browserFALSE systemcmd wait FALSE start selenium server open firefox and navigate to file server on localhost checkForServerdirsystemfilebin package RSelenium startServer remDr remoteDriverbrowserName firefox remDropensilent TRUE remDrnavigate kill the file server toolspskillreadLinespidtxt warn F However I run into problems if I use daemonTRUE r res httddir systemfileexamplesmake package servr daemon TRUE port browser FALSE The line below freezes firefox the R session However it works if I manually navigate there I can also use other methods like remDrgetPageSource remDrnavigate Any ideas why the daemon approach might cause this problem Is there a somewhat simple explanation of the difference between the two approaches Maybe johndharrison could help I dont think its a browser issue as Ive also tested this with phantomjs 