By reading the READMEmd I get the message that command wemux users will output the users connecting to the server now Something like bash wemux users Users connected to wemux zolrath csagan m While after some exam I cant report the same output Here is what Ive done ssh to my machine with two user UA and UB seperately In the UAs terminal run wemux start In the UBs terminal run wemux join In the UAs terminal run wemux users The output of wemux users is bash Users connected to wemux UA UA While what Im expected is bash Users connected to wemux UA UB how can i get such output It would be awesome for hosts to be able to define which usersgroups are allowed to connect to a specific instance instead of disconnecting users after reviewing wemux list This commit changes wemux to also read configuration from the home directory for when users have no write access to usrlocaletc In the future it might be useful to add an option eg c to let users define other locations Output from wemux kick says Kicking userx from the server Sudo required userx kicked successfully However userx still shows up in the wemux users list sudo wemux kick userx also fails saying unknown command kick I think because the wemux session isnt being hosted by root and the kick command is only available inside a session since sudo wemux help shows a different set of commands available Im not seeing the source for the man page in the git repo In tmux Ive been using Command Mode but it doesnt behave well with wemux Setup macOS running iterm with tmux integration Replicate open iterm ssh examplecom t wemux CC Once logged in this way I appear to be able to see the current server wemux l Currently active wemux servers wemux current server I can not see that Im attached wemux u Users connected to wemux If I use ssh examplecom t wemux the integration is lost but wemux works as expected wemux u Users connected to wemux WOC atlad Where can I see logs sudo wemux start sudo wemux stop No wemux server to log out of on wemux Decided not to rest on my laurels and just went ahead and fixed it WARNING Im new to wemux and havent tested all the edge cases All I did was go through and replace all nonzero and non return statements with exit and redirect any preceding echos to STDERR There were a couple return statements that are only function returns and shouldnt exit out of the program as far as I can tell Please give this a very critical eye before merging Thanks for an awesome utility Ive noticed that for instance wemux mirror returns exit code success and prints the error message No wemux server to mirror on wemux to STDOUT rather than STDERR Is there any chance we could see this fixed to conform to UNIX standards Solution After looking at the code I see that the exit codes are in there already However since theyre being sent with return rather than exit they dont actually get sent upon the termination of the program According to this SO answer return has nothing to do with exit codes Error messages can be echoed to STDERR with echo zolrath would you be open to making these changes in wemux If so would you prefer to do it yourself or would you like me to submit a PR Context What Im trying to do is use wemux to create a safe sandbox for other users to SSH into my machine for pair programming Ive created a new user solely for this purpose whose profile file consists only of the following wemux mirror devnull echo Ryan isnt ready to pair yet exit If wemux conformed to UNIX standards this code would work unfortunately the failure case the part after never runs because wemux mirror always returns exit code Security implications Nb that if you consider doing this you must separately disable users from directly executing commands on your machine via SSH ie protect against ssh pairyourmachine command In a configuration where multiple users can host wemux suppose user foo starts a wemux session and then ends the tmux session without using wemux stop say by closing all tmux windows In this scenario the wemux socket will be left as something like srwrwrw foo foo Sep wemuxwemux and another user baz wont be able to successfully run wemux start because the server isnt running and foo owns the socket If baz has sudo access baz can sudo chown baz tmpwemuxwemux and then remove it The wemux script currently responds to both wemux stop and wemux kill by calling the stopserver function In this PR we differentiate wemux kill by attempting to forcibly change the ownership of the socket using sudo as above before calling stopserver This is convenient in a multitenant compute instance and should help ease some frustration when colleagues forget to cleanly stop the wemux session