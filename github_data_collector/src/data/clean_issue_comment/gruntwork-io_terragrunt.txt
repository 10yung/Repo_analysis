fix broken links I am a new user of terragrunt We have a lot of different terraform directories corresponding to different bits of infrastructure Since it is just a wrapper around terraform I would expect the default behavior to simply call terraform but instead it gives me an error terragrunthcl no such file or directory I noticed that simply adding an empty file terragrunthcl in the directory gets around this issue So why require the file to be there at all It seems to just needlessly complicate things and clutter the filesystem As of now we either need to add a blank terragrunthcl file to each terraform directory that we have which is quite a few or switch back and forth between the terraform and terragrunt command depending on if the configuration file exists but obviously it would be nice if we could just use the same command for all workflows Hi I would like to use a dynamic foreach block within the child terragrunthcl file terraform dynamic beforehook foreach localfilereleases content commands apply plan execute helm diff upgrade allowunreleased beforehookvaluename beforehookvaluechart version beforehookvalueversion This causes the following error Unsupported block type Blocks of type dynamic are not expected here Im would like to use this as a workaround to the fact that the Terraform helm provider does not provide a helmdiff output in the terraform plan Is there a way to use foreach blocks in a similar way to the example above Is it possible to run a command duringbefore the terraform plan natively within the terraform code Thanks Hi there Ive been using this successfully in beforehook opentunnelthroughbastion commands plan apply show destroy execute screen d m ssh L dependencyinstanceoutputsthisdbinstanceaddressdependencyinstanceoutputsthisdbinstanceport dependencybastionoutputshostname p sleep Got a laptop issue reinstalled latest Terragrunt I ended up with terragrunt homeremyworkterraformlivedevelopmentawseuwest postgresdatabasesswarmaccessdterragrunthcl Unsuitable value type Unsuitable value element string required Does that ring a bell edited to fix code block We are running into a crash when run in a pipeline on an m xlarge instance in docker alpine The terraform runs fine on a t instance through the same pipeline but not in m for some reason Stack trace panic runtime error invalid memory address or nil pointer dereference signal SIGSEGV segmentation violation code x addr x pc xd d goroutine running githubcomgruntworkioterragruntclirunTerraformWithRetry xc c x x gosrcgithubcomgruntworkioterragruntclicliappgo x githubcomgruntworkioterragruntclirunTerragruntWithConfigfunc xc d x gosrcgithubcomgruntworkioterragruntclicliappgo x a githubcomgruntworkioterragruntclirunActionWithHooks xf x xc c xc d xc c bf x x gosrcgithubcomgruntworkioterragruntclicliappgo x ae githubcomgruntworkioterragruntclirunTerragruntWithConfig xc c xc d xc c x x gosrcgithubcomgruntworkioterragruntclicliappgo x c githubcomgruntworkioterragruntclirunTerraformInit xc c c xc d x x x gosrcgithubcomgruntworkioterragruntclicliappgo xaa githubcomgruntworkioterragruntcliprepareNonInitCommand xc c c xc d x x gosrcgithubcomgruntworkioterragruntclicliappgo x b githubcomgruntworkioterragruntclirunTerragruntWithConfig xc c c xc d x x x gosrcgithubcomgruntworkioterragruntclicliappgo x githubcomgruntworkioterragruntcliRunTerragrunt xc c c xf b x gosrcgithubcomgruntworkioterragruntclicliappgo x b githubcomgruntworkioterragruntconfigstackrunningModulerunNow xc x x gosrcgithubcomgruntworkioterragruntconfigstackrunningmodulego x a githubcomgruntworkioterragruntconfigstackrunningModulerunModuleWhenReady xc gosrcgithubcomgruntworkioterragruntconfigstackrunningmodulego x a githubcomgruntworkioterragruntconfigstackrunModulesfunc xc a b xc gosrcgithubcomgruntworkioterragruntconfigstackrunningmodulego x created by githubcomgruntworkioterragruntconfigstackrunModules gosrcgithubcomgruntworkioterragruntconfigstackrunningmodulego xe I have a parent terragrunthcl which defines the backend as remotestate backend azurerm config resourcegroupname AOBTfStateResourceGroup storageaccountname aobtfstatestorageaccount containername getenvTGSTATECONTAINER livetrialtfstatelocalenvenvironment key pathrelativetoincludeterraformtfstate locals defaultyamlpath findinparentfoldersemptyyml env yamldecodefilegetterragruntdirfindinparentfoldersenvyml localdefaultyamlpath commonresourcegroup demoterraformlive subscription be f be e c fc fc ac d inputs merge yamldecodefilegetterragruntdirfindinparentfoldersenvyml localdefaultyamlpath yamldecodefilegetterragruntdirfindinparentfolderslocationyml localdefaultyamlpath yamldecodefilegetterragruntdirfindinparentfoldersappplanyml localdefaultyamlpath yamldecodefilegetterragruntdirfindinparentfoldersgatewayyml localdefaultyamlpath And i have a child terragrunthcl which deploys a web appas include path findinparentfolders terraform source git inputs appservicename dev livetrial gatewayresourcegroupname LiveTrialShared resourcegroupname LiveTrialShared And i purposefully did not define terraform backend block in module Now when i do terragrunt apply it throws warning instead of error as follows Warning Missing backend configuration backendconfig was used without a backend block in the configuration If you intended to override the default local backend configuration no action is required but you may add an explicit backend block to your configuration to clear this warning terraform backend local However if you intended to override a defined backend please verify that the backend configuration is present and valid And if we miss this warning the state file will be stored in terragruntcache directory which will be a big issue if we run terragrunt apply on agents Earlier i remember seeing an error rather than warning which is nice to have How to deal with such situation Terragrunt Version v Terraform Version v OSX Golang Version I have a Terraform module for creating VirtualNetwork with the following folder layout Screen Shot at PM And I have Terraform Live Repo with the following layout Screen Shot at PM The Terragrunt File for the Virtual Network declares a dependency on Resource group and uses the output of Resource Group The configuration file is as follows Screen Shot at PM When i run terragrunt plan terragruntsource UsersdkonasaniDesktopGosrcTFModulesterraformazuredemovn in the Virtual Network folder i receive the following error Screen Shot at PM I see that it is complaining about a file in the Vendor folder for the testsusing Terratest in the Terraform Module Now when i go back to the Module and delete the vendor folder and run terragrunt plan terragruntsource UsersdkonasaniDesktopGosrcTFModulesterraformazuredemovn It gives the desired output To reproduce the error when i go back to the Terraform Module run tests it creates the vendor folder and come back to live repo Virtual Network folder and run terragrunt plan it gives the same error as above Any guidance with this issue will be helpful Right now writing code such as hcl terraform extraarguments commonvar commands getterraformcommandsthatneedvars arguments varfilegetawsaccountidtfvars will work with a terragrunt apply as apply is listed here However running a terragrunt plan out plan and then terragrunt apply plan will fail because you are passing tfvars to an apply that already knows what its doing Likewise if you set commands plan you will get the reverse problem You will be able to use plan files but unable to not use plan files It would be great if terragrunt could figure out for apply commands if the tfvars should be included or not based on the other arguments passed to the apply addressing Hey guys I have following structure gcpCloud maintf create projects terragrunthcl managementEnvironment environmentyaml uscentral Region clouddns kubernetesengine regionyaml preproductionEnvironment environmentyaml uscentral Region clouddns kubernetesengine regionyaml productionEnvironment environmentyaml uscentral Region clouddns kubernetesengine regionyaml In maintf I have created projectsgoogle resource for each environment Production PreProduction Management generating projectid outputs for each one In terragrunthclparent I have configured a GCS backend But I would like to create one state into each region for this reason I put the files regionyaml and environmentyaml in the root at each corresponding level defining a stringname of each region and environment My question is How to interpolate outputs created in maintfparent level for define project parameter in remote backend params Where I should save root maintf state How to interpolate regionyaml and environmentyaml for define location and bucket in remote backend params terragrunthcl parent Configure Terragrunt to automatically store tfstate files in an GCS bucket remotestate backend gcs config location varregionname How to setup this project alltimingoutputsprojectid How to setup this bucket alltimingvarenvironmentnameterraformstate How to setup this prefix pathrelativetoincludeterraformtfstate terragrunthcl child dependency project dependency of maintf configpath mockoutputs projectid temporarydummyid mockoutputsallowedterraformcommands plan validate inputs projectid dependencyalltimingmanagementprojectoutputsprojectid Does anyone have any other suggestions please 