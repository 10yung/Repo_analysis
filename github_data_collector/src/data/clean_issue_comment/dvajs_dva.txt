umi model takeLatest takeEvery put When i looking in some code base I see in handleAction of the reducer so I think using Arrayreduce is not performance than just get the handle of an action by key and then just return the handle dvacoresrchandleActionsjs js function handleActionshandlers defaultState const reducers Objectkeyshandlersmaptype handleActiontype handlers type const reducer reduceReducersreducers return state defaultState action reducerstate action issue my solution is just get the handle and return it js function handleActionshandlers defaultState return state defaultState action const type action return type handlers type handlers type state action state API some task PR URL antd state onChange reducers effects pagination pageSize current total onChange page pageSize Thank you for your pull request Please review below requirements Bug fixes and new features should include tests Contributors guide checklist Bug Contributors guide Checklist Remove items that do not apply For completed items change to x x npm test passes tests are included documentation is changed or added commit message follows commit guidelines Description of change Provide a description of the change below this comment any feature close What happens Model dispatch action state dva render user Model dispatch currentUser render connect user Model What happens yarn create umi app dva GitHub Umi Node dva extraReducers form formReducer export default reduxForm reduxForm form testReduxForm testForm store export interface EffectsCommandMap put A extends AnyActionaction A any call Function select Function take Function cancel Function key string any saga typing export function select SelectEffect export function selectFn extends state any args any any selector Fn args TailParametersFn SelectEffect export type SelectEffect SimpleEffectSELECT SelectEffectDescriptor export interface SelectEffectDescriptor selectorstate any args any any args any param fn A Generator function or normal function which either returns a Promise as result or any other value param args An array of values to be passed as arguments to fn export function callFn extends args any anyfn Fn args ParametersFn CallEffect Same as call context fn args but supports passing a fn as string Useful for invoking objects methods ie yield call localStorage getItem reduxsaga export function callCtx extends P in Name this Ctx args any any Name extends string ctxAndFnName Ctx Name args ParametersCtx Name CallEffect Same as call context fn args but supports passing context and fn as properties of an object ie yield callcontext localStorage fn localStoragegetItem reduxsaga fn can be a string or a function export function callCtx extends P in Name this Ctx args any any Name extends string ctxAndFnName context Ctx fn Name args ParametersCtx Name CallEffect Same as callfn args but supports passing a this context to fn This is useful to invoke object methods export function callCtx Fn extends this Ctx args any any ctxAndFn Ctx Fn args ParametersFn CallEffect Same as call context fn args but supports passing context and fn as properties of an object ie yield callcontext localStorage fn localStoragegetItem reduxsaga fn can be a string or a function export function callCtx Fn extends this Ctx args any any ctxAndFn context Ctx fn Fn args ParametersFn CallEffect export type CallEffect SimpleEffectCALL CallEffectDescriptor onError err ts dva webpack moduleexport indexjs dva router model statr 