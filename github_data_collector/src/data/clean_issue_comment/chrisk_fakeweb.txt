 Run tests for ruby from debianrubytestsrb RUBYLIBBUILDDIRrubyfakeweb git dfsg debianrubyfakewebusrlibrubyvendorruby GEMPATHdebianrubyfakewebusrsharerubygemsintegrationallvarlibgems usrlibx linuxgnurubygemsintegration usrsharerubygemsintegration usrsharerubygemsintegrationall ruby debianrubytestsrb Loaded suite debianrubytests Started F Failure testrealhttpsrequestTestFakeWeb not all expectations were satisfied unsatisfied expectations expected at least once not yet invoked MockSSLSocketsession satisfied expectations expected at least once invoked once MockSSLSocketreadnonblockanyparameters expected exactly once invoked once MockSSLSocketwriteallofincludesGET mainrsshotnewshotnewsrss HTTP includesHost imagesapplecom allowed any number of times invoked twice MockSSLSocketcloseanyparameters allowed any number of times invoked times MockSSLSocketclosedanyparameters allowed any number of times invoked twice MockSSLSocketsetsockoptanyparameters expected at least once invoked twice MockSSLSocketconnectnonblockanyparameters allowed any number of times invoked twice MockSSLSocketsynccloseanyparameters expected at least once invoked twice OpenSSLSSLSSLSocketnewMockSSLSocket instanceofOpenSSLSSLSSLContext expected at least once invoked twice OpenSSLSSLSSLSocketMockSSLSocket expected at least once invoked twice TCPSocketopenimagesapplecom nil nil BUILDDIRrubyfakeweb git dfsg testtesthelperrb in setupexpectationsforrealrequest BUILDDIRrubyfakeweb git dfsg testtesthelperrb in setupexpectationsforrealapplehotnewsrequest BUILDDIRrubyfakeweb git dfsg testtestfakewebrb in testrealhttpsrequest def testrealhttpsrequest FakeWeballownetconnect true setupexpectationsforrealapplehotnewsrequestport http NetHTTPnewimagesapplecom httpusessl true Finished in seconds tests assertions failures errors pendings omissions notifications passed Hi chrisk Thanks for maintaining this gem I added the Ruby latest version to CI based on below pullrequest Do you like to start Travis CI on this repository again There is an error on Ruby Failure testrealhttprequestTestFakeWeb unexpected invocation MockTCPSocketwritenonblockGET mainrsshotnewshotnewsrss HTTP r nAcceptEncoding gzipq deflateq identityq r nAccept r nUserAgent Ruby r nHost imagesapplecom r n r n exception false unsatisfied expectations expected at least once not yet invoked MockTCPSocketreadnonblockanyparameters expected exactly once not yet invoked MockTCPSocketwriteallofincludesGET mainrsshotnewshotnewsrss HTTP includesHost imagesapplecom Do you like to fix it This PR changes the build badges to SVG for sharper readability All added Ruby versions tests pass at I installed fakeweb in Ruby and Rails and when tried to use it I started to get a this error FailureError NetHTTPgeturl NoMethodError undefined method for readtimeout continuetimeoutnil debugoutputnilHash And this one whenever I tried to make and HTTP call using NetHTTP FailureError puts NetHTTPgeturi NoMethodError undefined method close for FakeWebStubSocket x fc ea f I searched the web and found that many other testing frameworks are affected by this compatibility issue and after reading many posts for WebMock and VCR I finally came across a solution It suggested doing this and oddly enough it worked gem fakeweb git Is it time to make a new gem release Why does this work around actually work but the release gem fails I hope this helps Right now if I want to verify that Im POSTing the right data I need to do something like this FakeWebregisteruripost myurl body idontcareabouttheresponseonlytherequest dosomethingthathitsmyurl requestdata CGIparse FakeWeblastrequestbodystreaminstancevariablegetstreamstring expectrequestdatato Line of this example should be encapsulated For instance it could be exposed as FakeWeblastrequestformdata The last version was released in year years ago People needed to pull down changes which were made since that Please please please bump up and release a new version Hi In a project where we use fakeweb I ran into an issue when I tried to connect to Neo j a graph database The gem I used to connect to it neo jrb uses nethttp to connect to the database and it turns out that fakeweb interfered with this in development I described my issues in detail here After some back and forth between ruby versions and disabling various gems I found out that fakeweb was in the end the culprit in my spotty connection with the database Since removing fakeweb from my Gemfile I havent had any issues The error I received was NetHTTPPersistentError too many connection resets due to closed stream IOError after requests on last used seconds ago from Usersachilleasrbenvversions libruby netprotocolrb in write Please let me know if you need any more information In the method FakeWebregisteruri there is a body option but it is related to the responsebody How can I define a requestbody in the way the mocked request has to have this body in order to accomplish the mock This is for a post method The problem is that prior to matching the URI is passed through normalizeuri which mangles it For example require fakeweb FakeWeballownetconnect false FakeWebregisteruriget http good com a b body good FakeWebregisteruriget http bad com b a body bad NetHTTPgetgoodcom a b good NetHTTPgetbadcom b a FakeWebNetConnectNotAllowedError Real HTTP connections are disabled Unregistered request GET which is incredibly confusing given that error message contains exactly the same URL that I passed in while in reality match happens against the URL with normalized parameters see 