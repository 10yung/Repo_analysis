fzf uses fzfcolors to change it in vim howto have it with fzy Hello This pull request improves the build script of this project Specifically it adds missing Make dependencies so that the targets of the project are regenerated correctly whenever there are updates to any of the dependent source files In this way the project is incrementally built Note that this fix follows the best practices for tracking dependencies automatically through gcc MD For more details see here Hey Maybe someone will find this useful or maybe you have suggestions for improvements Feel free to resolve this right away this is just fyi It would be nice if fzy became interactive before it finished reading stdin Useful for slow or large stdin Count a match at the beginning and end of the candidate as a consecutive match With that fzy returns better results when searching for file extensions eg when searching for appc it scores srcappc higher than buildappcontentscache A match at the beginning was scored with the same bonus as a character after a slash To keep it consistent this is now scored as a consecutive match Another more practical example from the tmux source tree find type f fzy se tmuxh without the patch returned logotmuxlogohugepng tmuxh With the patch you get a more intuitive result tmuxh logotmuxlogohugepng If you really wanted the png you could continue typing and refine the search but if you wanted the header file without the patch you cannot type an end of line character to filter the results further Note that I had to change some test cases which broke with this change but I still prefer the new behavior Let me know if you find a case which is counter intuitive This enables multiselect in fzy with the Ctrls key Pressing Ctrls on an item will make that item bold Pressing Ctrls will deselect it When at least one item is multiselected pressing the Return key will print each multiselected item on its own line to stdout this mimics the behavior of fzfs multiselect feature Hi Ive fixed dependencies missing Those issues can cause incorrect results when fzy is incrementally built For example any changes in srcttyinterfaceh will not cause srcfzyo to be rebuilt which is incorrect Ive tested it on my computer the fixed version worked as expected Looking forward to your confirmation I fix them by using the AutoDependency Generation technique mentioned here Thanks Vemake This might address too The behavior can be optional activated via a eageroutput From this discussion Tested it on both neovim and vim Allow for splitting input lines to fields where only a certain field is shown and used for matching Also it could be specified which field will be printed when the selection is chosen In example cat etcpasswd fzy d f F will display and match only usernames st field and when the selection is made it will output the users home directory th field There are three new options ddelimiter ffield and Foutputfield and the feature is enabled only when ffield is specified