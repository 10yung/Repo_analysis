Currently one has to use withcontext to pass a string that is built out of several components rust functionreturningresult withcontext formatfailed to fetch something with id id It would be a nice ergonomic improvement if we could do rust functionreturningresult contextfailed to fetch something with id id I am unaware of a way in Rust to do functions with variadic arguments but something that should be possible is rust functionreturningresult contextformatargsfailed to fetch something with id id formatargs avoids heapallocations hence it should be fine to invoke this outside of a closure Thoughts Likely there are even better ways of doing that My main usecase is passing a string to context that includes arguments from the current scope If call macro as anyhow not found there are no compilation error that argument must be provided for string interpolation Like in format macro First this crate is awesome I feel like Rusts error story is starting to feel really ergonomic This crate looks like a very nice Error type to reach for when working with a leafapplication crate Have you thought about working towards adding it to std anyhowError could be added as stderror as a pseudoprimitive via the same hack that i and stdi are merged stderror could be a very good default for various Err Error and E type parameters stderror in a future edition could be added to the prelude as just error 