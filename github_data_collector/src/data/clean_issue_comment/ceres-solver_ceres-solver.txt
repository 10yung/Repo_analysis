When building a shared library dll version of ceres from the latest code off github using VS Version and SuiteSparse v on Windows I get a whole series of the following errors capicc C Program Files x Microsoft Visual Studio Enterprise VC Tools MSVC include memory error C use of undefined type ceresinternalProblemImpl staticassert sizeofTy cant delete an incomplete type detected during instantiation of void stddefaultdeleteTyoperatorTy const with TyceresinternalProblemImpl at line instantiation of void stduniqueptrTy DxresetstduniqueptrTy Dxpointer with TyceresinternalProblemImpl DxstddefaultdeleteceresinternalProblemImpl at line instantiation of stduniqueptrTy Dx stduniqueptrTy DxoperatorstduniqueptrTy Dx with TyceresinternalProblemImpl DxstddefaultdeleteceresinternalProblemImpl at line of C sdks ceressolver include ceresproblemh ceressolver include ceresproblemh message see reference to class template instantiation stduniqueptrceresinternalProblemImplstddefaultdeleteceresinternalProblemImpl being compiled C Program Files x Microsoft Visual Studio Enterprise VC Tools MSVC include memory error C cant delete an incomplete type C Program Files x Microsoft Visual Studio Enterprise VC Tools MSVC include memory warning C deletion of pointer to incomplete type ceresinternalProblemImpl no destructor called I get the same issue if I use the Intel Compiler v as well However attempting to build the static version of ceres works correctly Just looking at this code and it checks whether to use inverse based on the matrix size at compile time Would this miss the case when the matrix is small but is of size EigenDynamic kSize If thats the case then this line should be c if size size return minverse If we push the minimum required version of C to C we could replace the msvc underscored and not underscored j bessel function usages in jeth C reference for the new mathematical special functions like cylbesselj cpp Bessel functions of the first kind with integer order equal to n inline double BesselJ double x return cylbesselj x inline double BesselJ double x return cylbesselj x inline double BesselJnint n double x return cylbesseljstaticcastdoublen x hello I am learning the ceres libraries I want to test pathtobinposegraph d pathtodatasetdatasetg o do you provide the test dataset yet and when I compile the posegraph d after I add the cmakeminimumversion eigen include dir it finally has the following error occurs CMakeFilesreadtestdirreadtesto In function bool ceresexamplesReadG oFileceresexamplesPose d ceresexamplesConstraint d stdallocatorstdpairint const ceresexamplesPose d stdallocatorceresexamplesConstraint d stdcxx basicstringchar stdchartraitschar stdallocatorchar const stdmapint ceresexamplesPose d stdlessint stdallocatorstdpairint const ceresexamplesPose d stdvectorceresexamplesConstraint d stdallocatorceresexamplesConstraint d readtestcpptextZN ceres examples ReadG oFileINS Pose dENS Constraint dESaISt pairIKiS EESaIS EEEbRKNSt cxx basicstringIcSt chartraitsIcESaIcEEEPSt mapIiTSt lessIiET EPSt vectorIT T E ZN ceres examples ReadG oFileINS Pose dENS Constraint dESaISt pairIKiS EESaIS EEEbRKNSt cxx basicstringIcSt chartraitsIcESaIcEEEPSt mapIiTSt lessIiET EPSt vectorIT T E x undefined reference to googleLogMessageFatalLogMessageFatalchar const int readtestcpptextZN ceres examples ReadG oFileINS Pose dENS Constraint dESaISt pairIKiS EESaIS EEEbRKNSt cxx basicstringIcSt chartraitsIcESaIcEEEPSt mapIiTSt lessIiET EPSt vectorIT T E ZN ceres examples ReadG oFileINS Pose dENS Constraint dESaISt pairIKiS EESaIS EEEbRKNSt cxx basicstringIcSt chartraitsIcESaIcEEEPSt mapIiTSt lessIiET EPSt vectorIT T E x b undefined reference to googleLogMessagestream do you know what happen how to solve this problem Thank you As of this commit Eigen fails to be found by cmake on Ubuntu When running cmake the following error can be seen CMake Error at homekevinsrcceressolverCMakeListstxt findpackage Could not find a configuration file for package Eigen that is compatible with requested version The following configuration files were considered but not accepted usrlibcmakeeigen Eigen Configcmake version unknown Eigen is aptinstalled Reported version is libeigen devxenialxenialnow beta all installed I tried removing the requirement for and got other errors IE changing line in CMakeListstxt from findpackageEigen CONFIG REQUIRED to findpackageEigen CONFIG REQUIRED This gives me the following error Target ceres links to target Eigen Eigen but the target was not found Perhaps a findpackage call is missing for an IMPORTED target or an ALIAS target is missing How would you structure the rst documentation of the autodiff codegen system We can integrate it into the current structure On Derivatives Generated Automatic Derivatives Modeling Nonlinear Least Squares CodegenCostFunction Tutorial Nonlinear Least Squares Code generation example or create a new parent node Code Generation Overview Code Generation User Interface Code Generation Technical Description Code Generation Example I probably prefer the second version similar to how we have separated the codegen code into a new sub directory Using the new expression system it would be possible to generate backward autodiff code back propagation Im currently wondering if it is worth implementing that because intuitively it should increase performance if numparameters numresiduals What is your opinion on generating backward autodiff code Should we implement it after the codegen stuff is working It would be possible to remove FindGlogcmake as glog provides a cmake config file since v Unfortunately Distributions dont use the cmake configuration rather stick to the autoconfig toolchain Open Bugs Ive found Arch Linux Tasks Ubuntu Launchpad Bug When I used clangcl frontend and msvc backend to build ceres a cmake fatal error occured Invalid CMAKECXXCOMPILERVERSION Ceres requires at least MSVC Update and the reason is if MSVC AND CMAKECXXCOMPILERVERSION VERSIONLESS messageFATALERROR Invalid CMAKECXXCOMPILERVERSION CMAKECXXCOMPILERVERSION Ceres requires at least MSVC Update endif Even if I use clangcl as frontend MSVC will be defined The right way to deal with this kind of situation is to replace MSVC to CMAKECXXCOMPILERID MATCHES MSVC so the final version will be if CMAKECXXCOMPILERID MATCHES MSVC AND CMAKECXXCOMPILERVERSION VERSIONLESS messageFATALERROR Invalid CMAKECXXCOMPILERVERSION CMAKECXXCOMPILERVERSION Ceres requires at least MSVC Update endif Thanks for the nice SW I am having a weird segmentation fault issue when Solve is called in my custom function However the same pieces of code runs perfectly OK when the code is written as an independent cpp and compiled to an executable file For example Example below runs OK However Example crashes with a segmentation fault message when ceresSolveoptions problem summary line is called The only difference is that Example is called from somewhere in my SLAM system I use Ubuntu ROS Kinetic CeresSolver Could you please help me to resolve this issue Please let me know if more information is needed Best Example maincpp below runs ok int mainint argc char argv ceresProblem problem ceresLossFunction lossfunction new ceresHuberLoss ifstream ceresdata ceresdataopendatatxt double campose double xn yn Xw Yw Zw stdstring line while stdgetlineceresdata line stdistringstream issline if iss xn yn Xw Yw Zw break ceresCostFunction costfunction imgProjRtCreatexn yn Xw Yw Zw problemAddResidualBlockcostfunction lossfunction campose solve problem ceresSolverOptions options optionslinearsolvertype ceresDENSESCHUR ceresSolverSummary summary cout problem problemNumParameterBlocks n problemNumParameters n problemNumResidualBlocks n problemNumResiduals endl ceresSolveoptions problem summary stdcout summaryFullReport n return Example The same code wrapped with a subfunction below crashes w a segmentation fault message on Sove int MyCeresFunc ceresProblem problem ceresLossFunction lossfunction new ceresHuberLoss ifstream ceresdata ceresdataopendatatxt double campose double xn yn Xw Yw Zw stdstring line while stdgetlineceresdata line stdistringstream issline if iss xn yn Xw Yw Zw break ceresCostFunction costfunction imgProjRtCreatexn yn Xw Yw Zw problemAddResidualBlockcostfunction lossfunction campose solve problem ceresSolverOptions options optionslinearsolvertype ceresDENSESCHUR ceresSolverSummary summary cout problem problemNumParameterBlocks n problemNumParameters n problemNumResidualBlocks n problemNumResiduals endl ceresSolveoptions problem summary stdcout summaryFullReport n return 