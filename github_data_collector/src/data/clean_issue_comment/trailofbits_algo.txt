OS Environment where do you run Algo on Linux ubuntu on server Cloud Provider where do you deploy Algo to Azure Summary of the problem When connecting through Wireguard with either Mac or PC the client cannot connect to the Internet Steps to reproduce the behavior It seems at least in earlier versions of AlgoVPN there were special settings during Algo for Windows clients However I installed AlgoVPN on my Ubuntu Server and saw no special settings related to Windows or Wireguard when setting up Algo After completion of Algo I tried connecting my Mac with Wireguard and could not connect to the Internet when doing so On later attempts all my Apple devices iPhone iPad Mac could connect via the dedicated mobile configuration files With my Windows Laptop it seems I need to connect via Wireguard and this connection is not working ie after activating the connection when hovering over the connection details it is displayed that the VPN user userWindows cannot connect to the Wifi network TPLinkXYZ TPLinkXYZ Internet access userWindows No Internet access After a few minutes the Internet connection TPLinkXYZ changes from connected secured to No Internet secured The same happens if I connect via my phones network instead I setup Wireguard as described Install the WireGuard VPN Client Import the generated wireguardusernameconf file to your device then setup a new connection with it Also I tried deactivating the Windows Firewall and added an exception to the Virus scanner for Wireguard the issue persisted after doing that Is this a known Issue Is setting up the VPN connection manually instead of using Wireguard a good workaround I ran into a Policy match error when attempting to do that on my Windows laptop The docs recommend using Azure Cloud Shell Azure Cloud Shell has Python installed You also cant use apt to install packages Approximate steps to get around this Install pyenv Install python pyenv install Clone algo cd to algo Set python version for algo to pyenv local Continue with algo steps Dunno if this should go in the wiki or not Describe the bug Please consider using the mainline binary from the dnscryptproxy release page instead of the PPA repository its unmaintained and outdated To Reproduce Steps to reproduce the behavior run on the shell dnscryptproxy version Expected behavior The version displayed should be when this issue was opened Additional context There are other positive outcomes from making this change Algo wouldnt need systemd socket activation to work anymore since the plain binary ditched it Since version it has the capability to block CNAME Cloaked domains for adblocking Its pretty easy to keep dnscryptproxy uptodate by using a simple update script provided at the official wiki The dnscryptproxytoml can be further updated to use ipblocklists from malware services the ipblacklisttxt provided by Algo is mitigating against dnsrebinding and dnscryptproxy already does that by default The blacklisttxt could be using a bigger blocklist that has daily updates One final change would be to use the Load balancing feature with the ph switch instead of using all queries directed to Cloudflare this way no resolver would have the full log of requests of Algo Provide a general summary of your changes in the Title above Description changes the basic constraints to critical with pathlen X v Basic Constraints critical CATRUE pathlen Generates a random id for every deployment and adds the nameConstraints extension to the CA certificate X v Name Constraints critical Permitted IP DNS d e be b e e d b fa algo email d e be b e e d b fa algo Motivation and Context The discussion initially started in and rose up again in How Has This Been Tested Types of changes What types of changes does your code introduce Put an x in all the boxes that apply New feature nonbreaking change which adds functionality Breaking change fix or feature that would cause existing functionality to not work as expected emails in usernames are not allowed anymore Checklist Go over all the following points and put an x in all the boxes that apply If youre unsure about any of these dont hesitate to ask Were here to help x I have read the CONTRIBUTING document x My code follows the code style of this project x I have added tests to cover my changes x All new and existing tests passed Is your feature request related to a problem Please describe Im completely new to servers Algo therefore I apologise if I dont make any sense and it was a bit of a shock to see the number of brute force attempts to get in via netstat The default deployment firewall at the moment for Vultr leaves port open to any IPv or IPv address Further the default etcsshsshdconfig allows both root access and password access and it doesnt force keys I was able to SSH in via putty on a different computer with just a username password Less knowledgeable users may struggle with security Describe the solution youd like Id like to see an option upon deployment to prevent any additional port being opened only leaving open wireguard This option would have a short explanation encouraging users to select it if they were concerned For those selecting that option access can still be faciliated from a cloud providers console or through wireguard A comment on the option that this would help against brute force attempts More out of the box security is good especially for those of us just starting out Describe alternatives youve considered Ive noticed there are a number of discussions already about including fail ban and PR to randomise the port I agree with comments in that both would help lower instances Is your feature request related to a problem Please describe Currently if we keep the PKI we take the risk that someone steals the CA private key and uses it to sign server certificates our client devices will trust They would be able to sign any server certificate including well known ones like googlecom microsoftcom applecom etc Describe the solution youd like Setting name constraint on CA certificate so that it can only be used to sign our server certificate Stealing CA private key will then result in no more damage than stealing the server certificate key Describe alternatives youve considered We can choose to discard CA key but then we cannot add more users Additional context Describe the bug Wireguard always successfully connects to the EC instance but is unable to fetch webpages at random times for a few minutes before full functionality and speed is restored To Reproduce Steps to reproduce the behavior Enter mainland China Connect to WireguardAlgo Observe failures after hours Expected behavior Uninterrupted support Or at the very least a definite end of life to the servers responsiveness when the govt detected the server Tor Browser Doesnt load any website with VPN on It just times out What could be causing this Currently you have to supply your AWS access key and secret key when setting up Algo A better and more user friendly solution would be to read from the AWS credentials file Describe the solution youd like Algo should read from the AWS credentials file Describe alternatives youve considered None Additional context None Thoughts welcome Describe the bug A web page take way more time to load than normal Maybe because I have OpenVPN installed shell With Algo VPN on DigitalOcean London curl s o devnull w timestarttransfer n curl ipv icanhazipcom s o devnull w timestarttransfer n With OpenVPN on DigitalOcean London curl s o devnull w timestarttransfer n curl ipv icanhazipcom s o devnull w timestarttransfer n Without VPN curl s o devnull w timestarttransfer n curl ipv icanhazipcom s o devnull w timestarttransfer n It loads properly and fast on Android tested on the same network I tried stopping openvpn process it does not change anything To Reproduce Im using Ubuntu kernel generic x Deployed on DigitalOcean region London no ad blocking all deploy options set to default Expected behavior A normal load time 