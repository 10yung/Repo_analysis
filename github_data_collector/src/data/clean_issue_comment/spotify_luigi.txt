According to docs It use crontab to trigger task However is there any other way to trigger the task like REST API http yet We use GitHub issues mainly for tracking bugs and feature requests Questions for how to use luigi can be sent to the mailing list Currently there are no strict procedures or guidelines for submitting issues In short please just use common sense Common sense includes this at bareminimum search for similar issues posted before creating a new issue Use markdown to format all codelogs Issues which are hard to read when rendered on GitHub might be closed with a friendly reminder of this If applicable reading relevant parts of the documentation Also add steps to reproduce the bug if applicable Sample code would be nice too For more information on how to submit valuable contributions see Environment Windows bit Python Luigi Tornado SQLAlchemy mysqlclient Issue There is a couple of things here The Task Scheduler setup to dump to MySQL The database is being populated however the history page will only show the latest result of the job row per job If the server is reset and the job is run again the history page now shows the latest result of the job plus the result of the one we just run Jobs before the nd last job do not appear Has anybody run into this one There is a similar issue over at with no response I have a task that runs and babysits an R script which is consistently being refused permission to run with nothng in the job log or the Luigi server lot to indicate the reason Here is a mock task that is a stripped down version which fails semiconsistently right now class MockTaskluigiTask rpath luigiParameterdefault sourcepath luigiParameter rparams luigiDictParameterdefault def outputself sha hashlibsha shaupdateselfsourcepathencode shaupdateselfrpathencode shaupdateopenselfsourcepathreadencode shaupdatedatetimedatetimenowisoformatencode return luigiLocalTargetvartmpmocktgtformatshahexdigest def runself f openselfoutputpathw fclose Heres the output I get oschwarzip roschwarzREhedge usrbinenv RDEFAULTSERIALIZEVERSION RDEFAULTSAVEVERSION LDLIBRARYPATHusrlibjvmjava openjdkamd libserver XGBOOSTNTHREAD PYTHONPATHpwdinstpython TOMLTRUE luigi module luigitask workers MockTask sourcepath instPipelinesclosedpipelineBearkatIIR R write to console Loading required package stats R write to console Loading required package utils DEBUG Checking if MockTaskrpath sourcepathinstPipelinesclosedpipelineBearcatIIR rparams is complete INFO Informed scheduler that task MockTaskinstPipelinesc e f has status PENDING INFO Done scheduling tasks INFO Running Worker with processes DEBUG Asking scheduler for work DEBUG Done DEBUG There are no more tasks to run at this time INFO Worker Workersalt workers hostip usernameoschwarz pid was stopped Shutting down KeepAlive thread INFO Luigi Execution Summary Scheduled tasks of which were left pending among these was not granted run permission by the scheduler MockTaskrpath sourcepathinstPipelinesclosedpipelineBearcatIIR rparams Did not run any tasks This progress looks because there were tasks that were not granted run permission by the scheduler Luigi Execution Summary I cannot understand why but when I ask the scheduler for work it balks and then the job halts Description Gives a second option to using an inmemory dict as the state store instead allowing state to point to a SQL DB Also adds various persisttask calls in places where we were quietly modifying a task that lived in the state outside of the state which is leaky and led to a number of bugs with this at the start In the process factored out the state storage into a separate file with an abstract interface and some default implementations in case someone else wants to add a new state store someday the API is now substantially smallercleaner Note this performs remarkably badly asis since Luigi hasnt been written in a way to minimize requests to the state store Ive made a few necessary changes to this caching etc already and will put all those in a second PR This is a big change and of course will require revision before becoming mergeable but do you all see any immediate problems with the approach Will squash before merging if yall like the PR Motivation and Context Once Luigi at our company at least hits a few thousand tasks the states dump method starts to become very flaky with pickle failing to serialize the whole state sometimes and thus we lose all the tasks These tasks are pretty valuable and its a setback to lose them so this is an attempt to keep them in a uh lessperishable place immune to restarts and crashes Not sure if theres an open issue for this Have you tested this If so how Sadly this one is just I ran all our jobs with this and it works I didnt see any unit tests for the state storage to begin with and this would need some kind of SQL testing setup that I dont know much about I get ftpliberrorperm Prohibited directory name when I put a file to FTP from Windows machine I have to fix this method every time def ftpputself localpath path atomic normpath posixpathnormpathpath normpath ospathnormpathpath folder ospathdirnamenormpath create paths if do not exists for subfolder in foldersplitposixpathsep for subfolder in foldersplitossep if subfolder and subfolder not in selfconnnlst selfconnmkdsubfolder selfconncwdsubfolder go back to ftp root folder selfconncwd random file name if atomic tmppath folder posixpathsep luigitmp d randomrandrange e tmppath folder ossep luigitmp d randomrandrange e else tmppath normpath selfconnstorbinarySTOR s tmppath openlocalpath rb if atomic selfconnrenametmppath normpath Changes I make are commented So I am guessing since the problem because of slashes Here luigi use backslash to build path for posix file system In the TOML parser freezes the config dict this makes it no longer possible to load logging using that config Traceback most recent call last File optrhrhpython rootusrlib python loggingconfigpy line in configure formatters name TypeError FrozenOrderedDict object does not support item assignment During handling of the above exception another exception occurred Traceback most recent call last File optapprootbinluigid line in module loadentrypointluigi consolescripts luigid File optapprootlibpython sitepackagesluigicmdlinepy line in luigid DaemonLoggingsetupopts File optapprootlibpython sitepackagesluigisetuploggingpy line in setup configured clssectionopts File optapprootlibpython sitepackagesluigisetuploggingpy line in section loggingconfigdictConfigloggingconfig File optrhrhpython rootusrlib python loggingconfigpy line in dictConfig dictConfigClassconfigconfigure File optrhrhpython rootusrlib python loggingconfigpy line in configure formatter r s name e ValueError Unable to configure formatter simple FrozenOrderedDict object does not support item assignment I have not had time to look into possible solutions for now This template is optional Please use it as a starting point to help guide PRs Provide a general summary of your changes in the Title above Description Describe your changes This consolidates all PRs for python deprecation Motivation and Context Why is this change required What problem does it solve If it fixes an open issue please link to the issue here Open a PR to make final check easier Have you tested this If so how Valid responses are I have included unit tests or I ran my jobs with this code and it works for me for more information on how to submit valuable contributions see Description use rb mode for writing and reading pickle files this is already implemented in sge module add python in the command sequence otherwise receive permission denied error Motivation and Context to update lsf module see issue Have you tested this If so how I ran my jobs with this code and it works for me The job can be submitted on LSF queue and status are properly tracked When running a KubernetesJobTask a user might want to add some annotations to attach arbitrary nonidentifying metadata to the job for clients tools and libraries to retrieve this metadata for some custom actions to be performed Ref python version luigi version Cannot pickle dump because the file type is not binary can update to the version used by SGE Creating a common abstract class would be even better Traceback most recent call last File storagegpfsdataSoftwarepython lib python sitepackagesluigiworkerpy line in run newdeps selfrungetnewdeps File storagegpfsdataSoftwarepython lib python sitepackagesluigiworkerpy line in rungetnewdeps taskgen selftaskrun File storagegpfsdataSoftwarepython lib python sitepackagesluigicontriblsfpy line in run selfinitlocal File storagegpfsdataSoftwarepython lib python sitepackagesluigicontriblsfpy line in initlocal selfdumpselftmpdir File storagegpfsdataSoftwarepython lib python sitepackagesluigicontriblsfpy line in dump pickledumpself openselfjobfile w TypeError write argument must be str not bytes similar to 