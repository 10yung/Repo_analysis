Hi Im trying to use external dependencies eg Havent find a way to be able to include such external dependencies If I install view brew the wrk executable already embeds luajit so I cant add anything to it at least it seems like that to me I also tried the manual installation as per with luajit installed via brew and using WITHLUAJIT as per However this also doesnt work get a bunch of make errors Is there a way to install additional dependencies to be used from lua script supplied to wrk Thank you I am trying to understand the scenarios where I get different latencies with different connection counts c but near about the same throughput Here are are my tests osbosbtestwrk time sudo taskset c wrk latency t c d s Running m test threads and connections Thread Stats Avg Stdev Max Stdev Latency ms ms ms ReqSec Latency Distribution ms ms ms ms requests in m MB read Requestssec Transfersec MB real m s user m s sys m s osbosbtestwrk time sudo taskset c wrk latency t c d s Running m test threads and connections Thread Stats Avg Stdev Max Stdev Latency ms ms ms ReqSec Latency Distribution ms ms ms ms requests in m MB read Requestssec Transfersec MB real m s user m s sys m s osbosbtestwrk time sudo taskset c wrk latency t c d s Running m test threads and connections Thread Stats Avg Stdev Max Stdev Latency ms ms ms ReqSec k Latency Distribution ms ms ms ms requests in m MB read Requestssec Transfersec MB real m s user m s sys m s osbosbtestwrk time sudo taskset c wrk latency t c d s Running m test threads and connections Thread Stats Avg Stdev Max Stdev Latency ms ms ms ReqSec k Latency Distribution ms ms ms ms requests in m MB read Requestssec Transfersec MB real m s user m s sys m s osbosbtestwrk time sudo taskset c wrk latency t c d s Running m test threads and connections Thread Stats Avg Stdev Max Stdev Latency ms ms ms ReqSec k Latency Distribution ms ms ms ms requests in m MB read Requestssec Transfersec MB real m s user m s sys m s Theres isnt much deviation in ReqSec or Requestssec compared to the Latency Is this safe to assume that there are no bottlenecks in the test machine wrk and are only present in server Im testing if any In other words I need to rule out any bottlenecks in the test machine before I submit the perf report I checked the CPUmemory usage of the test machine while running the test and they seemed fine The test machine is IntelR XeonR vCPU GB VM instance in GCP Also without any lua script option wrk does use HTTP pipelining right When we see a short read retry it until we fill the buffer or we see EWOULDBLOCK I see short reads locally and I think theyre affecting performance but the difference is pretty slim I mainly wrote this because I was seeing epollwait hang for ages and wanted to know that read would block It does most of the time Makefileline Compile Error in windows sub linux error LUAJIT srcwrklua binsh Syntax error unexpected Makefile recipe for target objbytecodeo failed make objbytecodeo Error reason ODIRbytecodeo srcwrklua echo LUAJIT SHELL c PATHobjbinPATH luajit b CURDIR CURDIR the PATH fix ODIRbytecodeo srcwrklua echo LUAJIT SHELL c PATHobjbinPATH luajit b CURDIR CURDIR because it seems to be close to impossible to get the config right on macos using homebrew module not found is all i get and googling did not help either would it be possible to add cjson to the build process and have it available in wrklua scripts out of the box General trend is to capture p p and p Added changes to produce output for p response time latency stats too Please review and merge When setting a header value needs to be separated by a space as in foo bar When its just foobar its not set and no error is reported The feels bit suboptimal so I would like to propose this patch to change things a bit diff git asrcscriptc bsrcscriptc index a d e e bcc asrcscriptc bsrcscriptc luaState scriptcreatechar file char url char headers luagetfieldL headers for char h headers h h char p strchrh if p p if p luapushlstringL h p h luapushstringL p luapushstringL p luasettableL The patch does work wrk now correctly processes cmd line wrk c d s t H foo bar H barfoo H foobar H barfoo and sends the headers HTTPVERSIONHTTP HTTPHOSTlocalhost HTTPFOOBAR HTTPFOObar HTTPBARfoo HTTPBARFOO I think it would also be nice to report on invalid header entry missing or other violations of RFC and Im willing to implement it but first I would like to have confirmed that it would be merge so that I dont waste my time WRK is a good tool for test performance but I still confusing about some options Example I want to test our application can support concurrent at the same time What is an option for this case Like this wrk t c d s I wondering about what is the right way to test our application to know concurrent support Anyone please suggest and help me I want to test a http server with unix domain socket how can I use it