 Hi for my purposes I find useful having a standard way to package and install subs With the change in the pull request after issuing the command preparesh xyz you would have available the autoconf options ie configure prefixoptwhatever and you will be able to install the subs by simply issuing the command make install A further step could be to add deb rpm creation on top of the standard autoconf tooling My primary motivation with this was to add documentation for the init command After I did that I thought the installation instructions in READMEmd were a little bit redundant so I changed them to just reference to the output of the init command This seems cleaner as well as clearer from a UX viewpoint to me While trying to provide a tool built with sub as a gem I learned that symlinks arent maintained while building gems This meant that binsub would be flattened into a copy of libexecsub rather than remaining a symlink This was problematic because the bin file within a gem must be a ruby script This change execs libexecsub instead of symlinking which removes a roadblock when gemifying sub projects Fixes Let me know if there is anything I can do add remove etc Its solid give it a test drive it rocks Fixes Fixes Fixes Fixes Fixes Example Multilevel autocompletion for complete Fixes sub sub example advanced fix bar foo sub sub example advanced fix foo b baz bla Nested subsubcommands Fixes bin contains the main executable for your program completions optional bashzsh completions libexec where the subcommand executables are subcommand sub command Displays summary for b c subcommandb sub command commandb args subcommandc sub command commandc args share Example Directory and File Structure Fixes bin Real Life Example completions Directories return help for children libexec subexample sub example Returns summary subbasic sub example basic Returns summary subforeach sub example basic foreach Script subfiles sub example basic files Script subadvanced sub example advanced Returns summary subexpert sub example advanced expert Returns summary subcaseselect sub example advanced expert caseselect Script share Example For Directory Help Helper File Fixes libexec subexample sub example Returns help for example subexample Provides area for usage summary and help Example Help Helper File Fixes usrbinenv bash Usage sub example Summary Collection of BASH Sub Example Scripts Help These commands are mostly used as examples and for testing sub modifications set e sub help example exit Example Help Display With subsubcommands Fixes sub sub help Usage sub command args Some useful sub commands are commands List all sub commands example Collection of BASH Sub Example Scripts See sub help command for information on a specific command Example Multiple Command w Completion Fixes Fixes sub sub example advanced expert caseselect break name Example Multiple Commands and Flags Fixes sub sub example advanced expert caseselect break name Jeff Executing Case Select Example Breaking on Counter is called Jeff The Jeff is The Jeff is The Jeff is Finished Example File Completion Fixes Fixes sub sub example basic files git gitmodules READMEmd completions plugins share gitignore LICENSE bin libexec preparesh Not quite sure how to tap in to the auto documentation when creating a node based command Hash bangs are illegal characters and js comments arent picked up by sub Tried js usrbinenv node Usage diy notify Summary Send a notification to any maker Help Be careful and js usrbinenv node Usage diy notify Summary Send a notification to any maker Help Be careful Fixes if using bash When bashcompletion is invoked all arguments are now forwarded to the command eg sub command arg arg tab now triggers sub complete command arg arg instead of just sub complete command The completion for ZSH is upgraded to the new ZSH completion system To work the file should be placed somewhere in ZSH fpath to be autoloaded when needed and named sub There are other embedded misc changes CURRENT indicate which word is being autocompleted In ZSH automatic word splitting is disabled in completion There is no need to quote words The completion also handles plugins that are able to complete args However most plugins dont and will complete with a subcommand instead I dont think there is an universal solution for this I am no ZSH wizard Take this commit with care works for me When there are no completions for a command fall through to default bash completion Fixes Its still necessary to add this in your command if it produces output bash Provide sub completions if complete then exit fi I also added the patch from 