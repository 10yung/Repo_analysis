Gem Load Error is undefined method aliasmethodchain for ClassActiveRecordAssociationsJoinDependency Did you mean aliasmethod Backtrace for gem load error this error arrised the after i added the gem Squeel Ernie mentioned in mid that he was happy to put a reference to babysqueel in the project if the maintainers were no longer willing to maintain this project Its been three years and no new commits I think this will be helpful to invite more maintainers as well as give information for those upgrading past Thank you so much to Ernie and the team for the wonderful work on this project over the years I have a column of type String in the User model this column is an array that is saved as a string I need to check if there is an element in that array with the where clause How can I do it I thought something like this scope notified user wherearraytagsin userid But it does not work open issues last update more than years ago is gem still maintained When a column is referenced in more than one where clause the groupby and subsequent reordering of columns can cause the wrong bound values to be associated with columns The columns are reordered but the bound values are attached in their original order It looks like the current collapsewheres in Squeel is based on the one from Active Record I am unsure why the columns were grouped originally but this now results in incorrect behavior under certain circumstances You can see that in Active Record s version of this method where clauses are no longer grouped My change removes the grouping and reordering With the original collapsewheres you can see the spec I have added failing ruby it does not reorder binaries do relation Catwherehairtype shortwherename Crookshankswherehairtype long relationtosqlshould eq SELECT QcatsQ FROM QcatsQ WHERE QcatsQQhairtypeQ short AND QcatsQQnameQ Crookshanks AND QcatsQQhairtypeQ long end Failures SqueelAdaptersActiveRecordRelationExtensionscollapsewheres does not reorder binaries FailureError relationtosqlshould eq SELECT QcatsQ FROM QcatsQ WHERE QcatsQQhairtypeQ short AND QcatsQQnameQ Crookshanks AND QcatsQQhairtypeQ long expected SELECT cats FROM cats WHERE cats hairtype short AND cats name Crookshanks AND cats hairtype long got SELECT cats FROM cats WHERE cats hairtype short AND cats hairtype Crookshanks AND cats name long compared using Usersfarrrbenvversions librubygems gemsrspecexpectations librspecexpectationsfailwithrb in failwith Usersfarrrbenvversions librubygems gemsrspecexpectations librspecexpectationshandlerrb in handlematcher Usersfarrrbenvversions librubygems gemsrspecexpectations librspecexpectationsextensionskernelrb in should specsqueeladaptersactiverecordrelationextensionsspecrb in block levels in moduleActiveRecord Finished in seconds examples failure pending Failed examples rspec specsqueeladaptersactiverecordrelationextensionsspecrb SqueelAdaptersActiveRecordRelationExtensionscollapsewheres does not reorder binaries projectssqueel master Note that as the query was built it is trying to use long as the cats name instead of Crookshanks I keep getting NotImplementedError Squeel does not support Active Record version on thin server start Believe it or not basic unscope functionality was broken I dont know how but with Squeel in play wherevalues somehow becomes a nested array Flattening it first fixes the issue I have adjusted the override to use super so that less code is duplicated This isnt possible for I have added a new override for because wherevalues should not be mutated in that version Can squeel support common table expressions aka WITH clauses The postgresext gem provides this functionality with Postgres but it doesnt play nicely with squeel bigxiang This should Resolve Since the version of reverseorder is used an additional check has been added to actually reorder the ORDER BY clause if there are nonnil elements within it Additionally a spec has been added to ensure proper ordering takes place 