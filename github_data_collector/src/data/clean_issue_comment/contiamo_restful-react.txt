Is your feature request related to a problem Please describe Id like to use this library in a React project which uses a promisebased API without rewriting that project to use React hooks Our data fetching is happening inside of redux thunks where hooks and JSX components cannot be used Describe the solution youd like A clear and concise description of what you want to happen Presently for a given resource called getdogs restfulreact generates a hook called useGetDogs a React component called GetDogs Wed be interested in generating an additional function called fetchGetDogs which has the same typed queryParameters as an input and returns a promise with the same responseType as the other two pieces of generated code Describe alternatives youve considered A clear and concise description of any alternative solutions or features youve considered We could just use the generated types from restfulreact library and use with them another promisebased data fetching library Use the typescriptfetch generator instead have not tested it yet Additional context Describe the bug distbinrestfulreactjs does not exist in leading to install errors and To Reproduce Install from npm and look in the nodemodulesrestfulreactdistbin folder restfulreactjs is not in there Expected behavior It should be there Additional context I think that the package has been published without running yarn build which would trigger the buildbin task Doing this locally creates the required file Hey guys we found this today please let us now if you have seen this before Thanks a lot for looking into it Describe the bug When installing the with npm the install fails with verbose stack Error ENOENT no such file or directory chmod UserskarolinkasDocumentspipelineservicespipelinereplappnodemodulesrestfulreactdistbinrestfulreactjs verbose cwd UserskarolinkasDocumentspipelineservicespipelinereplapp verbose Darwin verbose argv Userskarolinkasnvmversionsnodev binnode Userskarolinkasnvmversionsnodev binnpm install verbose node v verbose npm v error code ENOENT error syscall chmod error path UserskarolinkasDocumentspipelineservicespipelinereplappnodemodulesrestfulreactdistbinrestfulreactjs error errno error enoent ENOENT no such file or directory chmod UserskarolinkasDocumentspipelineservicespipelinereplappnodemodulesrestfulreactdistbinrestfulreactjs error enoent This is related to npm not being able to find a file verbose exit true To Reproduce Steps to reproduce the behavior Install the newest version using the npm install command Expected behavior Install should succeed Desktop please complete the following information OS Mojave The v runtime works as a project dependency in my CRAbased app however if I want to use nvm or a global install to run the code generator it fails Probably a tiny issue with npm install g restfulreact npm ERR code ENOENT npm ERR syscall chmod npm ERR path Usersslaffertynvmversionsnodev libnodemodulesrestfulreactdistbinrestfulreactjs npm ERR errno Why Our app uses UseGetReturn and UseMutateReturn types but after we were not longer able to import them without eslint errors Ive added them to the index exports which seems to have fixed it when locally tested in our app Also organised the packagejson and added a few more checks to the tsconfigjson Fixes I added skip to both get and poll Not sure we want it on poll Thoughts As a side note I cant yarn install at the moment from the private npm repo not sure if its just a transient thing or upstream config changed error An unexpected error occurred connect ECONNREFUSED Describe the question Im trying to generate code with this library but the api needs credentials to access the JSON spec Is there a way to add credentials in the header of the request with the library using the terminal or maybe a sessionId something like that I try to achieve something like dependent useGet and save the data to state also after received the response from the first useGet something similar to this Is it possible now and how would I do it PS I tried to take advantage of lazy refetch eg data user useGetpath pathToGetUser refetch refecthProject useGet path pathToGetProjectWithUseId lazytrue resolvedata save data to state if user userid refetchProject That was my idea but I stuck at how to compose the pathToGetProjectWithUserId is ugly and error prone like this apiprojectuseruser userid How would I do the above requirement nicer Is your feature request related to a problem Please describe Id like to use this on OpenAPI Specs that use the ref feature to refer to definitions from other files such that large APIs can be split into multiple files for reusereadability purposes Presently this library only supports refs within the same file Describe the solution youd like Ability to use multifile OpenAPI specs since Im trying to making them with Describe alternatives youve considered I wonder if there are any OpenAPI tools that can rewrite a spec that uses path based refs such that all the content gets imported into file under the components key for the benefit of tools that arent designed to work with multifile OpenAPI specifications such as this one Additional context Add any other context or screenshots about the feature request here Related reading about Refs Describe the bug I got a invalid key name after I use code gen function if some symbols exits in the swagger To Reproduce Steps to reproduce the behavior add a line of name XUSERNAME to the swagger file restfulreact import 