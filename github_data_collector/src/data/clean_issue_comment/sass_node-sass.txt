Adds some CI for the Alpine images to speed up releases If this works out I might take a look at converting some of the others This also uploads the artifacts as a zip on successful builds This could be modified to only run on tags later Note ran into an issue with the Node alpine images You can see an example log here Main issues is probably around T Z npm ERR Command failed git clone mirror q githubhomenpmcacachetmpgitclonedbd b git T Z npm ERR githubhomenpmcacachetmpgitclonedbd b git Permission denied where the git sassspec is failing Tried a bunch of troubleshooting but just decided to pin to the previous version that was working PS I dont think the CI will show up till this lands but you can see the build here This gets rid of python only issues Signedoffby Richie Bendall richiebendallgmailcom NPM version npm v Node version node v Node Process node p processversions httpparser node v node uv zlib ares modules nghttp napi openssl i icu unicode cldr tz e Node Platform node p processplatform darwin Node architecture node p processarch x nodesass version node p requirenodesassinfo This is the problem that script wont run npm nodesass versions npm ls nodesass nodesass I can get nodesass to successfully install I have it as a dependency of hexorenderersass but have also tried a direct install and while I get a successful install the build fails to run I get the following error dyld lazy symbol binding failed Symbol not found sassmakeboolean Referenced from Userstwils devoneamexdocsnodemodulesnodesassvendordarwinx bindingnode Expected in flat namespace dyld Symbol not found sassmakeboolean Referenced from Userstwils devoneamexdocsnodemodulesnodesassvendordarwinx bindingnode Expected in flat namespace Abort trap Whats frustrating is that on clean pulls of this app on others machines they dont have any problems So theres obviously some kind of machineenvironment configuration that is required that we cant deduce from instructions or error messages I downloaded the darwinx build from and then ran node p requirenodesassinfo again and I get this which seems to contradict itself UsersmyProjectnodemodulesnodesasslibbindingjs throw new ErrorerrorsmissingBinary Error Missing binding UsersmyProjectnodemodulesnodesassvendordarwinx bindingnode Node Sass could not find a binding for your current environment OS X bit with Nodejs x Found bindings for the following environments OS X bit with Nodejs x This usually happens because your environment has changed since running npm install Run npm rebuild nodesass to download the binding for your current environment at moduleexports UsersmyProjectnodemodulesnodesasslibbindingjs at Objectanonymous UsersmyProjectnodemodulesnodesasslibindexjs at Modulecompile internalmodulescjsloaderjs at ObjectModuleextensionsjs internalmodulescjsloaderjs at Moduleload internalmodulescjsloaderjs at tryModuleLoad internalmodulescjsloaderjs at FunctionModuleload internalmodulescjsloaderjs at Modulerequire internalmodulescjsloaderjs at require internalmodulescjshelpersjs at eval Some other environment info Python version Python also installed and referenced in the build output MacOS Xcode Build version B GNU Make Apple clang version clang Target x appledarwin Hello I wanted to know if it is possible and useful for other users in enterprise environment to create a static website for the bindingnode files Use case It is forbidden to directly download content from githubcom So nodesass fails because the bindingnode files cant be downloaded Workaround Download and host every file on a private server Set the SASSBINARYSITE environment variable to that server Problem With every update builds are failing because new bindingnode files are not in the private repo Solution So the idea is to proxy it with eg an Nexus Proxy repository like it is possible with Best regards This is from by MartijnHols Reproduction code is in I have traced this with a debugenabled version of nodesass binding on FreeBSD NPM version npm v Node version node v Node Process node p processversions node v node uv zlib brotli ares modules nghttp napi llhttp httpparser openssl d cldr icu tz a unicode Node Platform node p processplatform win Node architecture node p processarch x nodesass version node p requirenodesassinfo nodesass Wrapper JavaScript libsass Sass Compiler CC npm nodesass versions npm ls nodesass C laragon www drupal nodesass Hey folks I have a problem Im trying to run a nodesass watch but my mainscss has many imports such as nodesass importer nodemodulesnodesassglobimporterdistclijs outputstyle compressed o npmpackageconfigpubliccss npmpackageconfigsourcecss My mainscss Variables import variables Basetheme overrides import overrides Global definitions import global And the problem here is that when I wanna change something related to variables or overrides files Nodesass didnt build the style but if I add code to my mainscss yes PD variables and overrides are named as overridesscss and variablesscss Id like help from your side because I tried to search for this problem in this repository without luck node with nodesass How to reproduce nodemodulesnodesass contains nodesass without any binding binary at the same time nodesass is installed globally in usrlocallibnodemodulesnodesass and contains the binary file find homesapernodemodulesnodesassvendor usrlocallibnodemodulesnodesassvendor homesapernodemodulesnodesassvendor homesapernodemodulesnodesassvendorfreebsdx usrlocallibnodemodulesnodesassvendor usrlocallibnodemodulesnodesassvendorfreebsdx usrlocallibnodemodulesnodesassvendorfreebsdx bindingnode usrlocallibnodemodulesnodesassvendorfreebsdx usrlocallibnodemodulesnodesassvendorfreebsdx bindingnode The message trying to run npm test on is the following npm t A Nnpm WARN npm npm does not support Nodejs v npm WARN npm You should probably upgrade to a newer version of node as we npm WARN npm cant make any promises that npm will work with this version npm WARN npm Supported releases of Nodejs are the latest release of npm WARN npm You can find the latest version at lunelsonnodesasserr test homesaperswnodesasserrortrace node testjs homesapernodemodulesnodesasslibbindingjs throw new ErrorerrorsmissingBinary Error Missing binding homesapernodemodulesnodesassvendorfreebsdx bindingnode Node Sass could not find a binding for your current environment FreeBSD bit with Nodejs x Found bindings for the following environments FreeBSD bit with Nodejs x This usually happens because your environment has changed since running npm install Run npm rebuild nodesass to download the binding for your current environment at moduleexports homesapernodemodulesnodesasslibbindingjs at Objectanonymous homesapernodemodulesnodesasslibindexjs at Modulecompile internalmodulescjsloaderjs at ObjectModuleextensionsjs internalmodulescjsloaderjs at Moduleload internalmodulescjsloaderjs at FunctionModuleload internalmodulescjsloaderjs at Modulerequire internalmodulescjsloaderjs at require internalmodulescjshelpersjs at Objectanonymous homesaperswnodesasserrortracetestjs at Modulecompile internalmodulescjsloaderjs npm ERR Test failed See above for more details As strange as this situation is we should never say Missing binding for FreeBSD bit with Nodejs x found binding for FreeBSD bit with Nodejs x When building nodesass v with the node engine that does not bundle uv we may get a problem with not finding uvh in the right place node p processconfigvariablesnodesharedlibuv true node p processversions js node v node uv zlib brotli ares modules nghttp napi llhttp openssl afreebsd cldr icu tz c unicode node p processconfig js targetdefaults cflags defaultconfiguration Release defines NODEOPENSSLCERTSTORE includedirs usrlocalinclude usrlocalinclude usrlocalinclude libraries lz Lusrlocallib luv Lusrlocallib lcares lnghttp lcrypto lssl Lusrlocallib licui n licuuc licudata variables asan buildv withgn false coverage false debugnghttp false enablelto false enablepgogenerate false enablepgouse false forcedynamiccrt hostarch x icugyppath toolsicuicusystemgyp icusmall false icuvermajor isdebug llvmversion napibuildversion nodebyteorder little nodecodecache yes nodedebuglib false nodeenabled false nodeinstallnpm false nodemoduleversion nodenobrowserglobals false nodeprefix usrlocal nodereleaseurlbase nodereport true nodeshared false nodesharedcares true nodesharedhttpparser false nodesharedlibuv true nodesharednghttp true nodesharedopenssl true nodesharedzlib true nodetag nodetargettype executable nodeusebundledv true nodeusedtrace true nodeuseetw false nodeuselargepages false nodeuselargepagesscriptlld false nodeusenodesnapshot true nodeuseopenssl true nodeusev platform true nodewithltcg false nodewithoutnodeoptions false opensslfips opensslisfips false shlibsuffix so targetarch x v enablegdbjit v enablei nsupport v enableinspector v nostrictaliasing v optimizeddebug v promiseinternalfieldcount v randomseed v tracemaps v usesiphash v usesnapshot wantseparatehosttoolset xzyfer can we push to include this unfortunately the binaries have to be rebuilt Fixes 