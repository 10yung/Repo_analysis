Describe the solution youd like Display Response time by link checked Average min h d d Describe alternatives youve considered Only showed in prometheus metrics Additional context Add any other context or screenshots about the feature request here Hi Im using dockercompose and here is my yml file version services ciao image brotandgamesciao containername ciao ports environment CIAOWEBHOOKPAYLOADMONITOR statusbeforestatusbefore statusafterstatusafter CIAOWEBHOOKENDPOINTMONITOR my webhook will parse request payload to json object but statusbefore and statusafter will contains quotes when my webproxy is shutting down for example Failed to open TCP connection to Connection refused connect for port and this causes parsing failed Is your feature request related to a problem Please describe A clear and concise description of what the problem is Ex Im always frustrated when We plan to use ciao in our project and its metrics in prometheus to create alerts There is a number of unhealthy services in metrics but its impossible to understand which service is faulty Describe the solution youd like A clear and concise description of what you want to happen Add a metric which would return the status code per each service like this ciaochecksstatuseslabelservice ciaochecksstatuseslabelservice Describe alternatives youve considered A clear and concise description of any alternative solutions or features youve considered I dont know about such ones Additional context Add any other context or screenshots about the feature request here As this is my feature request I can implement it myself I have relevant RoR experience this issue is mostly for the discussion Hey Thanks for ciao its really simple and i love to use it D The only thing is I cant identify quickly ciao in a browser since theres no favicon So i propose this favicon I can send you the svg version if youd like favicon x cheerz Describe the bug When I try to run ciao on a raspberry pi using docker I see a linux error I did not encounter the same problem on OSX To Reproduce After installing docker on a raspberry pi and then running ciao with docker run name ciao p brotandgamesciao I see the following error standardinitlinuzgo eexec user process caused exec format error Expected behavior When I ran the same command on OSX ciao started as requested and I found it so useful that I want to run it on a rapsberry pi Desktop please complete the following information The operating system is Raspbian GNULinux version buster It is running on a raspberry pi model B Yaml file for Openshift It is a yaml file for RedHat Openshift which you can add to your repository to be used apiVersion v items apiVersion v kind Service metadata annotations openshiftiogeneratedby OpenShiftWebConsole creationTimestamp null labels app ciao name ciao spec ports name tcp port protocol TCP targetPort selector deploymentconfig ciao sessionAffinity None type ClusterIP status loadBalancer apiVersion appsopenshiftiov kind DeploymentConfig metadata annotations openshiftiogeneratedby OpenShiftWebConsole creationTimestamp null generation labels app ciao name ciao spec replicas selector app ciao deploymentconfig ciao strategy activeDeadlineSeconds resources rollingParams intervalSeconds maxSurge maxUnavailable timeoutSeconds updatePeriodSeconds type Rolling template metadata annotations openshiftiogeneratedby OpenShiftWebConsole creationTimestamp null labels app ciao deploymentconfig ciao spec containers env name PORT value name SMTPADDRES value smtpblablacom name SMTPEMAILFROM value dasdadasdacomar name SMTPEMAILTO value dasdadasdacomar name CIAOWEBHOOKENDPOINTOFFICE value name CIAOWEBHOOKPAYLOADOFFICE value payload image brotandgamesciao imagePullPolicy Always name ciao ports containerPort protocol TCP resources terminationMessagePath devterminationlog terminationMessagePolicy File volumeMounts mountPath appdbsqlite name ciao dnsPolicy ClusterFirst restartPolicy Always schedulerName defaultscheduler securityContext terminationGracePeriodSeconds volumes name ciao persistentVolumeClaim claimName ciao test false triggers type ConfigChange imageChangeParams automatic true containerNames ciao from kind ImageStreamTag name ciaolatest namespace CURRENTNAMESPACE lastTriggeredImage brotandgamesciao type ImageChange status availableReplicas latestVersion observedGeneration replicas unavailableReplicas updatedReplicas apiVersion imageopenshiftiov kind ImageStream metadata annotations openshiftioimagedockerRepositoryCheck T Z creationTimestamp null generation labels app ciao name ciao spec lookupPolicy local false tags annotations openshiftiogeneratedby OpenShiftWebConsole openshiftioimportedfrom brotandgamesciao from kind DockerImage name dockerregistrydefaultsvc CURRENTNAMESPACEciaolatest generation importPolicy name latest referencePolicy type Source status dockerImageRepository Creating a Deploy to Heroku Button Cf To facilitate deployments Please add new feature to notify about new release version brotandgames This should release a new docker image when you create a tagged release Released Docker images will be brotandgamesciaolatest brotandgamesciaoTRAVISTAG You will need to add the following ENV vars to your pipeline at Travis DOCKERUSERNAME DOCKERPASSWORD If you define CIAOCHECKSLOADFROMFILE ENV variable by setting it to a valid file path like filepath jsonyamlyml eg CIAOCHECKSLOADFROMFILEdataciaochecksinputjson file must be available in filesystem or dockerkubernetes volume you can load checks from this file by visiting checksadminin the Web UI and using the Load from file button or calling the JSON endpoint like curl X GET H Contenttype applicationjson checksloadfromfilejson Example files checksinputjson json active true name brotandgamescom cron url active true name kubernetesh cron url checksinputyaml yaml active true name brotandgamescom cron url active true name kubernetesh cron url 