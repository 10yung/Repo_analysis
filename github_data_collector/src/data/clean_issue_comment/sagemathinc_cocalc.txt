These two images show how to reproduce the problem CoCalc Omnibase CoCalc CoCalc Omnibase CoCalc SOLUTION Why not use exactly the same code to render the preview as actual messages Description This exposes the current version of sage to the webapp For now it just shows up in the settings config panel but later we can use it to show some additional info in the worksheet for Testing Steps I tested the combination of new project and new webapp and also current project code that version info is absent and new webapp Relevant Issues Checklist Run eslint on new and edited files All new code is actually used Nonobvious code has some sort of comments Front end Restart at least one project and check its smclocalhublocalhublog Completely restart Webpack with w in src Completely restart the hub by killing and restarting starthubpy in srcdevproject Screenshots if relevant activefilesort returns new javascript object every time its called That means you cant check if its the same value without looking deeper defeating any performance optimizations that using immutablejs is all about Related The selectors are only used in Storeget right now Solution Change storegetIn to use thisget for the first argument of the traversal array Description change the link at the top left to stay on the landingpage emphasize teaching on jupyter page Testing Steps pages build not much to check I hope language spelling is ok Relevant Issues Checklist Run eslint on new and edited files All new code is actually used Nonobvious code has some sort of comments Front end Restart at least one project and check its smclocalhublocalhublog Completely restart Webpack with w in src Completely restart the hub by killing and restarting starthubpy in srcdevproject Screenshots if relevant IPythondisplayAudio works fine on small sounds but fails on large ones because they are so large In cocalcJupyter we support large images by replacing them in the underlying document by their sha hash then storing the actual image in a backend sqlite database We need to implement something similar for sound files Heres an example to reproduce the problem It works fine if the sound length is short say second but fails if the length is longer eg second or more import scipyiowavfile as wav import IPythondisplay as ipd import numpy as np duration duration fails DEFAULTRATE nsamples intDEFAULTRATEduration w t nplinspace duration nsamples f npsinw nppit ipdAudiof rateDEFAULTRATE WORKAROUNDS Write the sound to a file and link to that file Heres an example of at least how you can write a sound of any size even a gigabyte to a file then link to it This continues the above example from scipyio import wavfile amplitude npiinfonpint max wavfilewritefoowav DEFAULTRATE amplitudefastypeint ipdFileLinkfoowav This will work equally in CoCalcjupyter and also in classical Jupyter In Cocalcjupyter it will properly open the wav file in another tab and show the player Use Jupyter classic or JupyterLab REQUESTED BY Nicolas Nytko I disabled email verification for cocalc since there seemed to be tons of bugs and we didnt really really need it for anything This needs to be fixed since we now have limited site license functionality which depends on an email address Regarding how it works I think we should automatically count email addresses that come from single sign on google etc profiles as valid only have the validation flow for other emails Also a lot of attempts to validate will fail due to the messages being labeled as spam since we know that happens already with password reset messages That said lots of other sites have working email verification so how does it work without being broken this is purely cosmetic in a files listing of a project the pycache subdirectory is for cached python files we should mask them like other tempcached files See this comment in smcwebappcoursecommonFoldersToolBartsx this code is buggy since the SearchInput component below is NOT controlled but some of the code assumes it is which makes no sense Eg there is a clearsearch prop that is passed in which is nonsense because the state of the search is local to the SearchInput Thats why the calls to clear the search in all the code below are all broken My fix for doesnt really work Open a jupyter notebook Switch the frame to RAW Json editor or split and show that You may just seeing loading until you actually change the live jupyter notebook in some way Ie the initial update doesnt seem to cause the loading to go away Ugh