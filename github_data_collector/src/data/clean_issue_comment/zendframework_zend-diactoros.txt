Two tests are looking identical despite description Probably withHost in second case should be replaced by something else public function testUriDoesNotAppendColonToHostIfPortIsEmpty uri new UriwithHostgooglecom thisassertSamegooglecom string uri public function testAuthorityIsPrefixedByDoubleSlashIfPresent uri new UriwithHostexamplecom thisassertSameexamplecom string uri reference phpinput is not support fstat Supports stat phpmemory and phptemp only I was not able to find an open or closed issue matching what Im seeing This is not a question Questions should be asked on chat Signup here or our forums Provide a narrative description of what you are trying to accomplish Code to reproduce the issue Please provide the minimum code necessary to recreate the issue php Expected results What do you think should have happened Actual results What did you actually observe Is there a particular reason that UploadedFile does not extend SplFileInfo The only conflicting interface which isnt even really a conflict so much is getSize would there be any interest in this I can do a PR if the interest is there I need this feature like yesterday and without it Im either gonna need to look for an alternative or fork x I was not able to find an open or closed issue matching what Im seeing x This is not a question Questions should be asked on chat Signup here or our forums According to is the long term support version of zenddiactoros however the Symfony security scanner shows that is missing the fix for the URL Rewrite vulnerability CVENONE Ive tried to be helpful and backport this in but I cant create a PR because there is no release branch Code to reproduce the issue Please provide the minimum code necessary to recreate the issue php server REQUESTURI HTTPXORIGINALURL hijackattempt path ServerRequestFactorymarshalRequestUriserver Expected results What do you think should have happened php path requestedpath Actual results What did you actually observe php path hijackattempt Code to reproduce the issue php function getSomeData Generator yield One yield Two yield Three data getSomeData json new Zend Diactoros Response JsonResponsedata Expected results Response should consume the generator and treat it as if a normal PHP array was passed in php data One Two Three json new Zend Diactoros Response JsonResponsedata Actual results An error is thrown instead Trying to clone an uncloneable object of class Generator Why is the new feature needed What purpose does it serve After doing a bit of searching I didnt find a class that would send a CSV response There were the Text JSON HTML Redirect XML and Empty response classes but nothing specific to CSV So I created this PR to add a CSV response class which can send both plain CSV text as well as a response that will be interpreted by the client as a downloadable file How will users use the new feature Users can use the CSV response class very similarly to how they use the existing response classes The only difference is that if they supply a file name as the third parameter to the constructor then a download response will be sent not a textual response Zend Diactoros parseCookieHeader does not properly parse array cookies in header testCookie foo fooValue testCookie bar barValue this should be ok by php doc here in Example but the parser does not match it also in closed issue The following commit causes breaking issues and probably should not have been implemented in a minor version Specifically this change breaks laravelpassport which depends on of this library Ive opened a ticket for them to patch branch x but that patch may introduce new problems Thats why Id suggest this update be reverted from x of the zend framework The parseurl function is not multibyte safe and was never designed to be which seems to be why this bug from has still not been addressed As mentioned in the comments on that bug a nicer behaviour would be for parseurl to treat all extended characters as opaque characters and copy them asis without modification but I dont see that happening any time soon There are a couple of options I can think of to try and support UTF URIs in this library Use a wrapper for parseurl which URL encodesdecodes extended characters eg in this comment from the manual page Manually parse the URL in PHP without parseurl Or alternatively this library could simply reject URIs with extended characters which arent properly encoded as they are technically invalid according to RFC Whichever way it might be worth adding something to the Travis config to run the tests under different locale environments to show how this is reproduced in the unit tests though this might be a pain since the available values for the locale are platform dependent Originally posted by Pudge in Hi guys Im working on an iOS project and Im required to send documents such as pdfs to my laravel server The issue is every time I try to send a post request for a PDF I get this error message Invalid size provided for UploadedFile must be an int Im at my wits end trying to solve this issue Any ideas