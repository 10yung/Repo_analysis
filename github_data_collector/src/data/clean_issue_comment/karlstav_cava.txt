The ncurses backend contains a call to reset during cleanup reset contains this code c if settle void putc r stderr void fflushstderr void napms Settle the terminal The code dates back to at least and is there for physical terminals that needed time to reset Terminal emulators dont have such a need so resetting the screen ourselves by sending the appropriate codes as per terminfo would speed up CtrlC by at least second I noticed the call to reset was added by this commit Would it be possible to get a bit more background on the change The colors still remain messed up in urxvt with gradient reset after exiting but are fine without gradient even without the reset Hello Im here from foobar k foomusicalspectrum on windows For the most part this does a fantastic job but theres something I really miss I found that fb k musical spectrum having the bins at each semitone worked particularly well for watching my music Something that I imagine wouldnt be too much work but would be very nice is to add a Music mode in config which I envision as operating a bit like so musical whether to use musical mode This overrides bars lowercutofffreq and highercutofffreq enabled false the range of notes to create bars for every semitone inbetween inclusive lowestnote A hightestnote C minvolumedbfs maxvolumedbfs peaks true how long to hold peak for in ms peakhold Gravity in dbs peakgravity I imagine an end result like this dB dB dB dB dB A B C D E F G A B C D E F G A B C D E F G A B C D E F G A B C D E F G A B C D E F G Better lowfrequency resolution would also be nice but thats being discussed in Thanks tecosaur I have some problems running cava in tmux with urxvt Let me give you my configs Xresources URxvtcursorUnderline true URxvtscrollBar false URxvtinternalBorder URxvtexternalBorder URxvtbuffered true URxvtletterSpace URxvtinheritPixmap false URxvttermName xterm color define font RobotoMono Nerd Font Mono define font DejaVu Sans Mono Nerd Font define font DejaVu Sans Mono Nerd Font define font DejaVu Sans Mono Nerd Font URxvtfont xftfont pixelsize cavaconfig Configuration file for CAVA Default values are commented out Use either or for commenting general Smoothing mode Can be normal scientific or waves DEPRECATED as of mode normal Accepts only nonnegative values framerate autosens will attempt to decrease sensitivity if the bars peak on off new as of autosens of low values dynamic range overshoot allows bars to overshoot in of terminal height without initiating autosens DEPRECATED as of autosens overshoot Manual sensitivity in Autosens must be turned off for this to take effect means double height Accepts only nonnegative values sensitivity The number of bars sets it to auto fill up console Bars width and space between bars in number of characters bars barwidth barspacing Lower and higher cutoff frequencies for lowest and highest bars the bandwidth of the visualizer Note there is a minimum total bandwidth of Mhz x number of bars Cava will automatically increase the higher cutoff if a too low band is specified lowercutofffreq highercutofffreq FFT buffer is set in the exponent of and must be between this is the audio buffer used to create the spectrum increasing the will improve the accuracy of the visualization but will also make it slower and increase CPU usage anything below and above is considered experimental FFTbufferSize input Audio capturing method Possible methods are pulse alsa fifo sndio or shmem Defaults to pulse alsa or fifo in that order dependent on what support cava was built with All input methods uses the same config variable source to define where it should get the audio For pulseaudio source will be the source Default auto which uses the monitor source of the default sink all pulseaudio sinksoutputs have monitor sourcesinputs associated with them For alsa source will be the capture device For fifo source will be the path to fifofile For shmem source will be squeezeliteAABBCCDDEEFF where AABBCCDDEEFF will be squeezelites MAC address method pulse source auto method alsa source hwLoopback method fifo source tmpmpdfifo method shmem source squeezeliteAABBCCDDEEFF method portaudio source auto output Ouput method Can be ncurses noncurses or raw noncurses is for systems that does not suport ncurses raw is an or bit configurable via the bitformat option data stream of the bar heights that can be used to send to other applications raw defaults to bars which can be adjusted in the bars option above method ncurses Visual channels Can be stereo or mono stereo mirrors both channels with low frequencies in center mono outputs left to right lowest to highest frequencies monooption set mono to either take input from left right or average channels stereo monooption average Raw output target A fifo will be created if target does not exist rawtarget devstdout Raw data format Can be binary or ascii dataformat binary Binary bit format can be bit or bit bitformat bit Ascii max value In ascii mode range will run from to value specified here asciimaxrange Ascii delimiters In ascii format each bar and frame is separated by a delimiters Use decimal value in ascii table ie and n line feed bardelimiter framedelimiter color Colors can be one of seven predefined black blue cyan green magenta red white yellow Or defined by hex code xxxxxx hex code must be within User defined colors requires a terminal that can change color definitions such as Gnometerminal or rxvt background black foreground cyan Gradient mode only hex defined colors are supported background must also be defined in hex or remain commented out on off Warning for certain terminal emulators cava will not able to restore color definitions on exit simply restart your terminal to restore colors gradient gradientcount gradientcolor gradientcolor d smoothing Percentage value for integral smoothing Takes values from Higher values means smoother but less precise to disable integral Disables or enables the socalled Monstercat smoothing with or without waves Set to to disable monstercat waves Set gravity percentage for drop off Higher values means bars will drop faster Accepts only nonnegative values means half gravity means double Set to to disable drop off gravity In bar height bars that would have been lower that this will not be drawn ignore eq This one is tricky You can have as much keys as you want Remember to uncomment more then one key More keys more precision Look at readmemd on github for further explanations and examples bass midtone treble tmuxconfig setoption g mouse on set g status off setoption g defaultshell binbash set g paneborderstyle fgblack set g paneactiveborderstyle bgblack fgblack setoption g defaultterminal xterm color setoption sa terminaloverrides xterm colorTc Cc save into system clipboard With preselection bind Cc choosebuffer run tmux savebuffer b xclip i sel clipboard run tmux display Clipboard filled with tmux savebuffer b dd ibs obs statusnoxfer count devnull Cv copy from clipboard bind Cv run tmux setbuffer xclip o sel clipboard tmux pastebuffer run tmux display Copied from xclip o sel clipboard dd ibs obs statusnoxfer count devnull Cd save into selection clipboard With preselection bind Cd choosebuffer run tmux savebuffer b xclip i run tmux display Clipboard filled with tmux savebuffer b dd ibs obs statusnoxfer count devnull Cf copy from clipboard bind Cf run tmux setbuffer xclip o tmux pastebuffer run tmux display Copied from xclip o dd ibs obs statusnoxfer count devnull So to the problem running cava directly in urxvt it works perfect x scrot Running inside tmux x scrot Just cannot get it to work in tmux no matter what I do would like a mode for average amplitude based on FFT Since Cava itself does a good deal of processing to make pretty spectrums itd be great to be able to more easily use this in other applications that want to display spectrums Currently this is possible by using the raw data from the raw output mode but using standard streams can cause issues with buffering and using Cava from the commandline requires you to create a config file to use it meaning any application wanting to use Cava would have to manage the lifetime of whatever config files it creates Making Cava compilable into a library that can be loaded by other applications would make developing around it less tedious and feel a little more static This is a courtesy bug report from glava which currently shares a good deal of the PulseAudio input code from inputpulsec Its possible to encounter output issues dropped fragments resulting in broken audio data due to hardware input overrunning PulseAudios audio buffer A simple fix would be to set the maxlength member in pabufferattr to uint t in order for the server to select an appropriate buffer size In the same vein its possible to encounter some fairly serious latency issues depending on the output device This is because the requested fragment size doesnt actually affect how PulseAudio samples from the underlying hardware only the servers intermediate buffer While its possible to work around this by using a null sink instead an ideal solution would be to use pastreamconnectrecords pastreamflagst flags argument to specify PASTREAMADJUSTLATENCY Unfortunately the pasimple API doesnt expose this Is it planned anytime soon Cava could be quite useful in JACK setup Makefileam sets cavaLDFLAGS to cavaLDFLAGS Lusrlocallib Wlrpath usrlocallib The arguments to L and rpath should probably be set based on the configured installation prefix rather than using usrlocallib all the time I would additionally suggest that the Makefile should not be setting rpath in any case pkgnamecava pkgver pkgrel I am experiencing some random tearing with Cava it happens once every seconds or so Not experiencing this with any other application Someone have simular issues out there or perhaps know where to look for clues to identify what could be wrong When ran without gradient cava can use my current colorscheme for background and foreground colors but with gradient it does not It uses the colorscheme without gradient enabled without me doing anything special Heres the releant part of my config file color Colors can be one of seven predefined black blue cyan green magenta red white yellow Or defined by hex code xxxxxx hex code must be within User defined colors requires a terminal that can change color definitions such as Gnometerminal or rxvt background black foreground cyan Gradient mode only hex defined colors are supported background must also be defined in hex or remain commented out on off Warning for certain terminal emulators cava will not able to restore color definitions on exit simply restart your terminal to restore colors gradient gradientcolor ff gradientcolor ff Can it use the scheme currently in use in the terminal or is that not supported yet