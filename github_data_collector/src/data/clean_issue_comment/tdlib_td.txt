use CMAKEINSTALLLIBDIR variable instead of hardcoded lib in CmakeListstxt this is very useful for some system package manager such as portage to build the td library Hi can you give some raw estimation of performance difference between using JSON client or client with generated JNI bindings levlam I used the proxy mode but I often see t ConnectionCreatorcpp ConnectionCreator Save proxy last used date I m not I understand the reason for this problem Is it because Im using the proxy incorrectly I am using tdjson but I have noticed there are several types that have optional arguments but this is not available for parsers in the TL file but it does seem to be present in the comment ABOVE the type in the TL file For example these are taken from the tdlib TL file Userprofilephoto may be null plaintext description Represents a user id User identifier firstname First name of the user lastname Last name of the user username Username of the user phonenumber Phone number of the user status Current online status of the user profilephoto Profile photo of the user may be null outgoinglink Relationship from the current user to the other user incominglink Relationship from the other user to the current user isverified True if the user is verified issupport True if the user is Telegram support account restrictionreason If nonempty it contains the reason why access to this user must be restricted The format of the string is type description type contains the type of the restriction and at least one of the suffixes all ios android or wp which describe the platforms on which access should be restricted For example termsiosandroid description contains a humanreadable description of the restriction which can be shown to the user isscam True if many users reported this user as a scam haveaccess If false the user is inaccessible and the only information known about the user is inside this class It cant be passed to any method except GetUser type Type of the user languagecode IETF language tag of the users language only available to bots user idint firstnamestring lastnamestring usernamestring phonenumberstring statusUserStatus profilephotoprofilePhoto outgoinglinkLinkState incominglinkLinkState isverifiedBool issupportBool restrictionreasonstring isscamBool haveaccessBool typeUserType languagecodestring User updateSelectedBackgroundbackground may also be null plaintext description The selected background has changed fordarktheme True if background for dark theme has changed background The new selected background may be null updateSelectedBackground fordarkthemeBool backgroundbackground Update This presents a problem with my code as unless I specify otherwise I expect all fields of the type to be present in the JSON even if the value is null Is the tdjson library removing these if they are null or are they actual optional arguments that can somehow be exposed in the TL file arseny you published latest tdweb under your own scope to npm the latest source in this repo also seems to be just levlam What methods can I use to manage more groups More than in fact now each user can only manage groups No matter what method whether it is a basic group a super group or a channel The total cannot be greater than How many can each group type be Or just the total When I logged in to the first account I waited in AuthorizationStateWaitCode but I did n t receive the verification code so I want to switch the phone number in secretChat docs theres described the method to draw a x matrix from the keyhash field I tried to follow those instructions but I failed to draw the same image as shown on the other users client while the raw hexadecimal string matches that had to me decoded from base tbh which isnt mentioned on the doc here is my attempt if that could help Id be happy also if you can point me to the code in one of the other clients Hello there TDLib devs I have a mobile iOS app that is using TDLib and I want to get background push notifications working I initially tried using FCMGCMFirebase because I used that in the Android version of my app successfully but I havent been able to get backgroundremote notifications with it So I setup a separate telegram account app id to use AppleAPNS uploaded certificates and am calling registerDevice but no notifications seem to come through on the device I am aware that the simulator doesnt support pushbackgroundremote notifications and I have to use a real device to test Any clues on what I might have missed I looked at the ObjC Swift versions of the official clients and they dont seem to be using registerDevice different than I am Here are the logs with the verbosity level set to from startup up to the successful call to registerDevice m t Tdcpp Td tdrequests Receive request setTdlibParameters parameters tdlibParameters usetestdc false databasedirectory varmobileContainersDataApplication B E AB D D D CE Documentstd filesdirectory varmobileContainersDataApplication B E AB D D D CE Documentstd usefiledatabase true usechatinfodatabase true usemessagedatabase true usesecretchats true apiid apihash cd d REDACTED systemlanguagecode enUS devicemodel Telefuel App systemversion Mobile applicationversion enablestorageoptimizer true ignorefilenames false m m t Clientcpp tdrequests End to wait for updates returning object x b m Runner flutter tdstate receive type ok m t Binlogcpp Td Load init encryption m m t Tdcpp Td tdrequests Sending update updateAuthorizationState authorizationstate authorizationStateWaitEncryptionKey isencrypted true m m t Tdcpp Td tdrequests Sending result for request ok m m t Clientcpp tdrequests Begin to wait for updates with timeout m m t Clientcpp tdrequests End to wait for updates returning object x m Runner flutter tdstate receive type updateAuthorizationState authorizationstate type authorizationStateWaitEncryptionKey isencrypted true m t Clientcpp tdrequests Begin to wait for updates with timeout m m t Tdcpp Td tdrequests Receive request checkDatabaseEncryptionKey encryptionkey bytes B REDACTED m m t Clientcpp tdrequests End to wait for updates returning object x cb m m t Binlogcpp Td Load init encryption m Runner flutter tdstate receive type ok m t Clientcpp tdrequests Begin to wait for updates with timeout m m t TdDbcpp Td Got PRAGMA userversion m m t DialogDbcpp Td Init dialog database version m m t MessagesDbcpp Td Init message database version m m t FileDbcpp Td Init file database version m m t Tdcpp Td Successfully inited database in databasedirectoryprivatevarmobileContainersDataApplication B E AB D D D CE Documentstd and filesdirectoryprivatevarmobileContainersDataApplication B E AB D D D CE Documentstd m t Globalcpp Td LOAD servertimedifference m m t NetQueryDispatchercpp Td maindcid m t UpdatesManagercpp Td Init m m t SecretChatsManagercpp SecretChatsManager Init secret chats qts qts m m t UpdatesManagercpp Td getdifference BEGIN GET DIFFERENCE from initstate m m t UpdatesManagercpp Td getdifference pts qts date m m t ResourceManagercpp UploadResourceManager unused m t utilscpp Td Create storer for updatesgetDifference flags pts date qts m m t NetQueryh Td Query id tl x stateQuery m m t Tdcpp Td netquery Send Query id tl x stateQuery to dispatcher m m t NetQueryh Td netquery Query id tl x stateQuery debugTd send to NetQueryDispatcher m m t NetQueryh Td netquery Query id tl x stateQuery debugdispatch m m t AuthDataSharedcpp Td DcId authkeyid stateOK m m t NetQueryh Td netquery Query id tl x stateQuery debugsent to main session multi proxy DcId m t Timeoutcpp Td Set AlarmTimeout for in m t Timeoutcpp Td Set timeout of AlarmTimeout in m m t ConnectionCreatorcpp ConnectionCreator SAVE DcOptions DcOptionDcId ip port secretlen flags DcOptionDcId ip port secretlen flagsStatic DcOptionDcId ip b f df a port secretlen flagsIPv DcOptionDcId ip port secretlen flags DcOptionDcId ip port secretlen flagsStatic DcOptionDcId ip port secretlen flagsMediaOnly DcOptionDcId ip c e f a port secretlen flagsIPv DcOptionDcId ip c e f b port secretlen flagsMediaOnlyIPv DcOptionDcId ip port secretlen flags DcOptionDcId ip port secretlen flagsStatic DcOptionDcId ip b f df a port secretlen flagsIPv DcOptionDcId ip port secretlen flags DcOptionDcId ip port secretlen flagsStatic DcOptionDcId ip c e f a port secretlen flagsIPv DcOptionDcId ip port secretlen flagsMediaOnly DcOptionDcId ip c e f b port secretlen flagsMediaOnlyIPv DcOptionDcId ip b f ff a port secretlen flagsIPv DcOptionDcId ip port secretlen flagsStatic DcOptionDcId ip port secretlen flags m m t ConfigManagercpp Recoverer configrecoverer Successfully connected m m t ConfigManagercpp Recoverer configrecoverer Wakeup NEVER m t utilscpp ConfigManager Create storer for helpgetConfig m m t NetQueryh ConfigManager Query id tl xc f b stateQuery m m t NetQueryh ConfigManager netquery Query id tl xc f b stateQuery debugdispatch m m t NetQueryh ConfigManager netquery Query id tl xc f b stateQuery debugsent to main session multi proxy DcId m m t DeviceTokenManagercpp DeviceTokenManager GET device token Synchronized token D E EDF CC REDACTED m t utilscpp DeviceTokenManager Create storer for accountregisterDevice tokentype token D E EDF CC REDACTED appsandbox false secret bytes otheruids vector m m t NetQueryh DeviceTokenManager Query id tl x cbea stateQuery m m t NetQueryh DeviceTokenManager netquery Query id tl x cbea stateQuery debugdispatch m m t NetQueryh DeviceTokenManager netquery Query id tl x cbea stateQuery debugsent to main session multi proxy DcId m t TopDialogManagercpp TopDialogManager Init is enabled true m m t TopDialogManagercpp TopDialogManager Wakeup in m m t StorageManagercpp StorageManager Schedule next file gc in m m t StorageManagercpp StorageManager Loaded fast storage statistics with files of total size m 