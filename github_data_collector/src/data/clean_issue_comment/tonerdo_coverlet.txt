Fixes Report ExcludeFilterNestedAutogeneratedTypeszip cc tonerdo petli SteveGilham Were hiding a warning during collectors pack External issue In upgrading to collector v from v I noticed that code like module Whatever do AppDomainCurrentDomainDomainUnloadAddFlushCounter DomainUnload AppDomainCurrentDomainProcessExitAddFlushCounter ProcessExit started registering as uncovered Im assuming that this is part of the lambda aliasing change in PR and its triggering because each line compiles to a form with extra classes and one of those has an unattributed Invoke method that executes only when the event is actually fired Proceeding to exclude this not readily testable behaviour by refactoring to module Whatever module private Uncoverlet let AddDomainHandlers AppDomainCurrentDomainDomainUnloadAddFlushCounter DomainUnload AppDomainCurrentDomainProcessExitAddFlushCounter ProcessExit do UncoverletAddDomainHandlers and adding an exclude entry Uncoverlet resulted in the uncovered line count from ReportGenerator via OpenCover format dropping by as intended Looking at the coverage report however showed that rather than being excluded from consideration the AddDomainHandlers method was showing as covered There seem to be two problems here First exclude by type name doesnt seem to be honoured for nested types and second the new behaviour of detecting multiple items on a line doesnt seem to have propagated down this extra level either I havent explicitly tried the C equivalent static class Whatever static class Uncoverlet but the IL in each case will be the same Started from petli comment A reflection somewhat from the side here is that a lot of these issues around merging thresholds etc comes from attempts to do coverage collection and analysis being as a single build step A more unixy way of looking at it is that coverage gets collected during unit tests and written to files and a separate tool is then run to analyse the coverage in whichever way the user needs These tools can be combined with a script to get a single command line or build step to run Incidentially this is how I use coverlet A script runs all tests with the vstest collector to get coverage files and then filter and combine in three different ways with reportgenerator to get slightly different views on the results Partly this is because the early coverlet didnt support anything else but also because I much prefer the finegrained control I get this way A major new version av coverlet could look like this The only way to collect coverage is the vstest collector avoiding all issues with ProcessExit etc The coverlet command line tool holds functionality to merge and analyse coverage eg thresholds It could also be used to run tests using the vstest collector and also both run tests and analyse the coverage files in a single step to retain the onestopshop command for those who dont need any complex processing The msbuild collector is removed completely I think this would make it easier to use coverlet and simplifying the code a lot There would be less need for the more complex switches or command line flag combinations as less common use cases like the multitarget analysis in this issue or the LinuxWindows combined coverage could be handled by scripting the coverlet command line tool cc tonerdo Today with net toolmsbuild you can specify a coverage threshold below which it fails the build This is not supported on vstest collector integration cc vagishanidhi Today at the end of the tests msbuilnet tool drivers show a table with coverage result on console For instance Calculating coverage result Generating report homevstswork stestcoverletcoretestscoverageopencoverxml Module Line Branch Method coverlettestsprojectsampleempty coverletmsbuildtasks coverletcore Line Branch Method Total Average This is not supported at the moment for vstest collectors integration cc vagishanidhi PureKrome found during this combination of code seems to have incorrect reports public async TaskActionResultIEnumerableSystemUserItem SystemUsersCancellationToken ct using var data thisfactoryCreateReadOnlySystemUserItem var list await dataAllAsyncct ConfigureAwaitfalse return thisOklist here is the final report output here is the diff of the coverage xml left side unit test code is not executed right side integration test code is there doesnt appear to be any branches all code execute under a single call Hi I have a folder srcclient which is an angular project I tried many ways to execute the dotnet test command but I always get the same error Solution file error MSB Unable to build website project client The ASPNET compiler is only available on the NET Framework version of MSBuild Include only the test project dotnet test pCollectCoveragetrue pCoverletOutputFormatcobertura pInclude Mytests Exclude folder client dotnet test pCollectCoveragetrue pCoverletOutputFormatcobertura pExcludeByFile srcclient How could I exclude the website project client Thanks When I try to use the runsettings file to merge the results of our Test projects the merge file is not created Here is a mwe with two test projects and a runsettingsfile The mwe is derived from the HelloWorldDocumentation project I have tried several pathcombinations only mergedfile relative path absolute path in the runsettings but neither has worked For the moment we dont test net global tool on unix systems because we get an access denied exception on ubuntu 