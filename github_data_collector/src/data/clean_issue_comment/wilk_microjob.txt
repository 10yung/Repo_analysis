ts const ctxPass foo bar func this is func Working but Im confused because it doesnt match the parent variable name await job tsignore return func ctx ctxPass Not Working await job return ctxPassfunc ctx ctxPass The function disappears from JSONstringify js const ctx test depth foo bar func this is func testFunc testFunc function convertctx let ret for let key val of Objectentriesctx if typeof val function val valtoString else if ArrayisArrayval val JSONstringifyval else if typeof val object val convertval else val val ret keyval ret return ret consoleloglet test convertctx let test testdepthfoobarfunc this is functestFunc testFunc Reference What do you think about this Bumps handlebars from to details summaryChangelogsummary Sourced from handlebarss changelog v November th Bugfixes fix add noprototypebuiltins eslintrule and fix all occurences f f d fix add more properties required to be enumerable Chores Build fix use instead of c b f add chai and dirtychai and sinon for cleaner testassertions and spies deprecate old assertionmethods e e ba dad a Security The properties proto defineGetter defineSetter and lookupGetter have been added to the list of properties that must be enumerable If a property by that name is found and not enumerable on its parent it will silently evaluate to undefined This is done in both the compiled template and the lookuphelper This will prevent new RemoteCodeExecution exploits that have been published recently Compatibility notes Due to the securityfixes The semantics of the templates using proto defineGetter defineSetter and lookupGetter in the respect that those expression now return undefined rather than their actual value from the proto The semantics have not changed in cases where the properties are enumerable as in js proto some string The change may be breaking in that respect but we still only increase the patchversion because the incompatible usecases are not intended undocumented and far less important than fixing RemoteCodeExecution exploits on existing systems Commits v November th Bugfixes fix use Stringfield in lookup when checking for constructor d test add fluent API for testing Handlebars c ac c Compatibility notes no incompatibility are to be expected trtable truncated details details summaryCommitssummary c c b v c d Update release notes f f d fix add noprototypebuiltins eslintrule and fix all occurences fix add more properties required to be enumerable ba testchore add chaiexpect and sinon to runtimeenvironment dad test add sinon as global variable to eslint in the specs a test add sinonjs for spies deprecate current assertions e e chore add chai and dirtychai for better test assertions c b f fix use instead of de d v Additional commits viewable in compare view details br Dependabot compatibility score Dependabot will resolve any conflicts with this PR as long as you dont alter it yourself You can also trigger a rebase manually by commenting dependabot rebase dependabotautomergestart dependabotautomergeend details summaryDependabot commands and optionssummary br You can trigger Dependabot actions by commenting on this PR dependabot rebase will rebase this PR dependabot recreate will recreate this PR overwriting any edits that have been made to it dependabot merge will merge this PR after your CI passes on it dependabot squash and merge will squash and merge this PR after your CI passes on it dependabot cancel merge will cancel a previously requested merge and block automerging dependabot reopen will reopen this PR if it is closed dependabot ignore this patchminormajor version will close this PR and stop Dependabot creating any more for this minormajor version unless you reopen the PR or upgrade to it yourself dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency unless you reopen the PR or upgrade to it yourself dependabot use these labels will set the current labels as the default for future PRs for this repo and language dependabot use these reviewers will set the current reviewers as the default for future PRs for this repo and language dependabot use these assignees will set the current assignees as the default for future PRs for this repo and language dependabot use this milestone will set the current milestone as the default for future PRs for this repo and language You can disable automated security fix PRs for this repo from the Security Alerts page details Great library Love the minimalistic API and dependencies I just tried to use it for a little bit more complex example and it failed immediately with such code typescript await jobasync accountId const account await accountDaogetByIdaccountId data accountId Whats happening here is that its using some accountDao to fetch some thing from DB This accountDao is imported above as typescript import accountDao from srcaccountDao problems It cant find this module by such path probably because src is achieved using tsconfigpaths Even if I change it to some relative path like srcaccountDao or srcaccountDao no luck My next try to is to typescript requiretsnoderegister const accountDao requiresrcaccountDao And then its loaded But then all its dependencies fail cause theyre still written in form of src Any advice Is it just me or someone else also having such issue I just cannot imaging the use of this module without using some dependent files which doesnt work right now for a typescript project Need ability to pass some context firstly and then it will be always available in workers pool For example CPUintensive geo task check point in polygons Polygons so weight and every time serialize deserialize it so expensive Would be better to pass it firstly typescript await job persistentCtx polygons manymany polygons And then on every job execute it always accessible typescript await job polygons it accessible here yet data point How to use one global objectarray in every workers of pool