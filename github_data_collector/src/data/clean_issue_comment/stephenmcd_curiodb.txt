It would be useful to have an artifact on maven central One of the advantages is to start the application from coursier Fresh Install of the latest master apears to always try to connect to which will fail if you try and build a cluster between multiple machines ie over a private network Error Messages Jan db bash WARN curiodbakkaremotedefaultremotedispatcher akkatcpcuriodb systemendpointManagerreliableEndpointWriterakkatcp A F Fcuriodb A Association with remote system akkatcpcuriodb has failed address is now gated for ms Reason Association failed with akkatcpcuriodb Caused by Connection refused Jan db bash WARN curiodbakkaremotedefaultremotedispatcher akkatcpcuriodb systemendpointManagerreliableEndpointWriterakkatcp A F Fcuriodb A Association with remote system akkatcpcuriodb has failed address is now gated for ms Reason Association failed with akkatcpcuriodb Caused by No route to host Jan db bash WARN curiodbakkaremotedefaultremotedispatcher akkatcpcuriodb systemendpointManagerreliableEndpointWriterakkatcp A F Fcuriodb A Association with remote system akkatcpcuriodb has failed address is now gated for ms Reason Association failed with akkatcpcuriodb Caused by No route to host Jan db bash WARN curiodbakkaremotedefaultremotedispatcher akkatcpcuriodb systemendpointManagerreliableEndpointWriterakkatcp A F Fcuriodb A Association with remote system akkatcpcuriodb has failed address is now gated for ms Reason Association failed with akkatcpcuriodb Caused by Connection refused Configuration curiodb Addresses listening for clients listen tcp TCP server using Redis protocol Duration settings either time value or off persistafter second Like save in Redis sleepafter seconds Virtual memory threshold expireafter off Automatic key expiry transactions timeout seconds Max time a transaction may take to run isolation repeatable repeatable committed or uncommitted onerror rollback commit or rollback commands timeout second Max time a command may take to run disabled SHUTDOWN List of disabled commands debug off Print debug info for every command run Cluster nodes nodes db tcp db tcp db tcp Current cluster node from the nodes keys above node db Its also not even listening on port which is configured This is using OpenJDK Ill test out Suns next usrbinenv python coding utf import redis from multiprocessing import Process def getvaluehost port var r redisRedishosthost portport return rgetvar def lostupdatehost port var r redisRedishosthost portport pipe rpipeline pipeincrvar pipeexecute for i in range pipeincrvar pipeexecute if name main host port var test print getvaluehost port var p Processtargetlostupdate argshost port var p Processtargetlostupdate argshost port var p start p start p join p join print getvaluehost port var run the above code output if you uncomment the code run it sometimes it will response timeout problem when one keyNode send MULTI to itselfnode command if may has receive another MULTI from another clientNode so both clientNodes wont waitinTransaction will fail they will update a data node concurrently and update at their own data version problem two clientNode can send MULTI to every keyNode at the same time so some keyNodes may receive MULTI from clientNode some keyNodes receive MULTI from clientNode and no clientNodes will finish the transaction and i have a question why keynodes should have multiversion test mget number number should return redis get number redis multi OK redis mget number number QUEUED redis set number QUEUED redis exec OK test dbsize in transaction should return not redis dbsize integer redis multi OK redis dbsize QUEUED redis set number QUEUED redis exec integer OK the reason is the commands are sent sequently but not executed sequently about list blocking operations still have some problems not support multi keys supporting multi keys in multi keyNode needs much more works the scheduler in the block function may has race conditions with unblock Is sending an unblock message in the scheduler a better solution 