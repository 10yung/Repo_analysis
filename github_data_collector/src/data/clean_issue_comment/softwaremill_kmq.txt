In my tests I stumbled upon a case where actor system wouldnt shutdown Turned out that ConsumeMarkersActor was blocked by polling from kafka It happens if you shut down kafka before shutting down actor Reactive kafka already solved this issue so It would be good idea to use it Just wanted to know the use of the disableRedeliveryBefore argument of the marker queue And as per the logic I feel the following case scenario would be a failure for code reference Case Scenario For a TopicX there is a marker topicMT One redelivery tracker is listening to the marker topic The order of markers on a partition are SM SM EM EM where SMx is startmarker for some key x and EMx is endmarker for some key x the redelivery tracker commits on Kafka till EM Then redelivery tracker disconnects and a new redelivery consumer is created and in between a new SM is published But as the consumer connects after SM endOffset disabledRedeliveryBefore for MarkerQueue of partition is after the SM offset Problem SM would not be tracked by any redelivery tracker Possible Solution Rather than endOffset the redelivery tracker can disable redelivery before the last committed offset Hi Great work Just wanted to enquire about any way to restrict number of retries for redelivery a message to a queue So in case the client is down parmanently the topic would not populate beyond certain fixed number of redelivered messages Hi Awesome project Can some information be added about how Kafka s exactly once functionality will or wont be incorporated into this work Are they complementary or orthogonal