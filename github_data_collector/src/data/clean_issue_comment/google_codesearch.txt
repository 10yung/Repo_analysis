just added a hyperlink Is there is a way or a flag to set that will make the output coloring the matched words when performing csearch pattern I run this on a very large mount of codes my index is becoming larger than GB after I run the cindexgo When I run csearchgo with my regex pattern raise a error index cannot be larger than GB how can i improve my index limitation thanks When multiple IndexWriter instances call Flush concurrently they hit race or index out of range for sortTmp since its getting modified from multiple go routines example goroutine running githubcommeerkatvendorgithubcomgooglecodesearchindexsortPost xc ab x f x Usersbehroozgosrcgithubcommeerkatvendorgithubcomgooglecodesearchindexwritego x githubcommeerkatvendorgithubcomgooglecodesearchindexIndexWritermergePost xc d c xc e e Usersbehroozgosrcgithubcommeerkatvendorgithubcomgooglecodesearchindexwritego x c githubcommeerkatvendorgithubcomgooglecodesearchindexIndexWriterFlush xc d c Usersbehroozgosrcgithubcommeerkatvendorgithubcomgooglecodesearchindexwritego x f githubcommeerkatindexindexerIndex xc e x a e xc fb x x Usersbehroozgosrcgithubcommeerkatindexindexergo x mainmainfunc xc c xc e e d xc c x x a a xc e xc b Usersbehroozgosrcgithubcommeerkatmaingo x created by mainmain Usersbehroozgosrcgithubcommeerkatmaingo x panic runtime error index out of range goroutine running githubcommeerkatvendorgithubcomgooglecodesearchindexsortPost xc fab x b x Usersbehroozgosrcgithubcommeerkatvendorgithubcomgooglecodesearchindexwritego x f githubcommeerkatvendorgithubcomgooglecodesearchindexIndexWritermergePost xc d xc a Usersbehroozgosrcgithubcommeerkatvendorgithubcomgooglecodesearchindexwritego x c githubcommeerkatvendorgithubcomgooglecodesearchindexIndexWriterFlush xc d Usersbehroozgosrcgithubcommeerkatvendorgithubcomgooglecodesearchindexwritego x f githubcommeerkatindexindexerIndex xc e x a e xc a ae x x Usersbehroozgosrcgithubcommeerkatindexindexergo x mainmainfunc xc c xc e e d xc c x x a a xc e xc b Usersbehroozgosrcgithubcommeerkatmaingo x created by mainmain Usersbehroozgosrcgithubcommeerkatmaingo x This fix simply moves global unprotected vars to local func scope We could alternatively include them in IndexWriter struct too Added parameter to refine the query Is it possible to include git repos Or do they have to be on disk It would be awesome to be able to search my IRC log files but I compress them to save space Would it be possible to implement automatic decompression of gzip bzip and xz to the toolchain I would like to add exclusion of subdirectories to cindex For example indexing of chromium src takes about seconds while only seconds if I exclude srcout and srcthirdparty Right now it works like cindex exclude srcout exclude srctmp src plus I have to pass excludes if I want to reindex As I understand the way to integrate that is to modify index format to store list of excluded directories Is it OK to introduce such backward incompatible changes Easier to demonstrate make cat Makefile PHONY all test clean BAD a BAD ab GOOD ax GOOD ay PHONY template good bad template rm rf test mkdir p testVAR testVAR ls testVAR a ls testVAR a rm f testcsearchindex usrbinenv CSEARCHINDEXtestcsearchindex GOPATHbincindex testVAR testVAR usrbinenv CSEARCHINDEXtestcsearchindex GOPATHbincindex list Just index them again to reproduce the bug usrbinenv CSEARCHINDEXtestcsearchindex GOPATHbincindex verbose usrbinenv CSEARCHINDEXtestcsearchindex GOPATHbincindex list test usrbinenv CSEARCHINDEXtestcsearchindex GOPATHbincindex list wc l bad VAR BAD VAR BAD MAKE template good VAR GOOD VAR GOOD MAKE template No bug when test run with two directories where basenames are not a prefix or another sh make good VAR ax VAR ay ApplicationsXcodeappContentsDeveloperusrbinmake template rm rf test mkdir p testax testay ls testaxa ls testaya rm f testcsearchindex usrbinenv CSEARCHINDEXtestcsearchindex Usersxxxxpkgsgobincindex testax testay index Usersxxxxworkcodesearchtestax index Usersxxxxworkcodesearchtestay flush index merge files mem data bytes index bytes done usrbinenv CSEARCHINDEXtestcsearchindex Usersxxxxpkgsgobincindex list Usersxxxxworkcodesearchtestax Usersxxxxworkcodesearchtestay Just index them again to reproduce the bug usrbinenv CSEARCHINDEXtestcsearchindex Usersxxxxpkgsgobincindex verbose index Usersxxxxworkcodesearchtestax Usersxxxxworkcodesearchtestaxa index Usersxxxxworkcodesearchtestay Usersxxxxworkcodesearchtestaya flush index merge files mem data bytes index bytes merge testcsearchindex testcsearchindex done usrbinenv CSEARCHINDEXtestcsearchindex Usersxxxxpkgsgobincindex list Usersxxxxworkcodesearchtestax Usersxxxxworkcodesearchtestay test usrbinenv CSEARCHINDEXtestcsearchindex Usersxxxxpkgsgobincindex list wc l Bug seen when test run with two directories where one basename is prefix of another sh make bad VAR a VAR ab ApplicationsXcodeappContentsDeveloperusrbinmake template rm rf test mkdir p testa testab ls testaa ls testaba rm f testcsearchindex usrbinenv CSEARCHINDEXtestcsearchindex Usersxxxxpkgsgobincindex testa testab index Usersxxxxworkcodesearchtesta index Usersxxxxworkcodesearchtestab flush index merge files mem data bytes index bytes done usrbinenv CSEARCHINDEXtestcsearchindex Usersxxxxpkgsgobincindex list Usersxxxxworkcodesearchtesta Usersxxxxworkcodesearchtestab Just index them again to reproduce the bug usrbinenv CSEARCHINDEXtestcsearchindex Usersxxxxpkgsgobincindex verbose index Usersxxxxworkcodesearchtesta Usersxxxxworkcodesearchtestaa index Usersxxxxworkcodesearchtestab Usersxxxxworkcodesearchtestaba flush index merge files mem data bytes index bytes merge testcsearchindex testcsearchindex done usrbinenv CSEARCHINDEXtestcsearchindex Usersxxxxpkgsgobincindex list Usersxxxxworkcodesearchtesta test usrbinenv CSEARCHINDEXtestcsearchindex Usersxxxxpkgsgobincindex list wc l make template Error make bad Error It would be great if one could tell the indexer to reindex a single file and merge that efficiently into the existing index A strong plus would be to read the file names per line from a named or regular pipe and index those as soon as a new line becomes available 