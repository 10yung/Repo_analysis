Sorry to bother you again I read in a post at the arduino forum that there is an example in this repository that allows sending a text file from a sd card using arduino but I cannot find it I found one you made for RPi but didnt manage to find for arduino Can you point me in the righ direction please Regardless of the status of the transmitter even turned off the module is reporting available packets Reading these packets into the Data structure just a simple structure to contain a few bit values results in filling the structure with most of the time but also random values like and I have triple checked the wring which seems okay I also have a LoRa SX chip but that should be silenced by writing its CS pin HIGH I am using an ESP module programmed with an FTDI breakout And a NRF L module I have tried using a uF electrolytic capacitor to smooth input voltage Uploading using visual micro Board Generic ESP Module define LORACS define NRFCS define NRFCE RF nrfNRFCE NRFCE ce pin isn ideal void setup digitalWriteLORACS HIGH NRFSetup nrfbegin nrfsetAutoAckfalse nrfsetCRCLengthRF CRC nrfsetDataRateRF KBPS nrfsetChannel nrfsetPALevelRF PAMAX nrfdisableDynamicPayloads nrfsetPayloadSizesizeofData nrfsetRetries nrfcsDelay if nrfgetCRCLength RF CRC SerialprintlnCRC Incorrect goto NRFSetup nrfopenReadingPipe NRFADDRESS nrfstartListening if nrffailureDetected goto NRFSetup void loop if nrfavailable nrfgetPayloadSize sizeofData nrfread dataNRF sizeofData SerialprintdataNRFThrottle Hi I have made a pcb for a project using attiny and nrf modules pins are connected to attiny as follows attiny nrf PA MOSI PA MISO PA SCK PA CE PA CSN Im using ATTiny Core by Spence Konde after i read through the posts i found that PA and PA pins should be swapped is there anyway to get module working with above configuration Regards Hey I tried to compile this library working for an ATMEGA chip because it seems like the default ATmega p chip just hasnt enough SRAM for my needs But the compiler just says that the library isnt compatible to megaavr chips like the ATMEGA Is there nevertheless a possibility to get this working on a this chip error report Arduino Windows Store Windows Board Arduino Uno WiFi Rev None ATMEGA BuildOptionen wurden ver ndert alles wird neu kompiliert WARNUNG Bibliothek RF behauptet auf avr arm x esp esp Architekturen ausgef hrt werden zu k nnen und ist m glicherweise inkompatibel mit Ihrem derzeitigen Board welches auf megaavr Architekturen ausgef hrt wird C Users Documents Arduino libraries RF RF cpp In member function void RF csnbool C Users Documents Arduino libraries RF RF cpp error cannot convert bool to PinStatus for argument to void digitalWritepinsizet PinStatus digitalWritecsnpinmode C Users Documents Arduino libraries RF RF cpp In member function void RF cebool C Users Documents Arduino libraries RF RF cpp error cannot convert bool to PinStatus for argument to void digitalWritepinsizet PinStatus if cepin csnpin digitalWritecepinlevel exit status Fehler beim Kompilieren f r das Board Arduino Uno WiFi Rev Thanks for any help D I am sending data from arduino with a simple short code A similar code receives data OK with arduino include SPIh include nRF L h include RF h RADIO pins RF radio CE CSN const byte address void setup radiobegin radioopenWritingPipeaddress radiosetPALevelRF PALOW radiostopListening void loop const char text Hi radiowrite text sizeoftext But what I need now is to receive on raspberry pi zero Can someone tell me what code to use on raspberry pi side given the above send method I am getting this error when compiling a code with make deviated from exampleslinuxgettingstartedcpp error RPIV GPIOP was not declared in this scope RF radioRPIV GPIOP RPIV GPIOP BCM SPISPEED MHZ That config looks like this derivated from gettingstarted file Raspberry Pi Radio CE Pin CSN Pin SPI Speed See and the related enumerations for pin information Setup for GPIO CE and CE CSN with SPI Speed Mhz RF radioRPIV GPIOP RPIV GPIOP BCM SPISPEED MHZ RPi Alternate with SPIDEV Note Edit RF archBBBspicpp and set thisdevice devspidev or as listed in dev RF radio I assumed that is the right config method to enable I am using the pins like in attached picture using pins and What am I doing wrong And if I enable that SPIDEV method above do I need to switch pinswires raspberry wiring I cloned the RF material onto my Raspberry pi using git clone then moved to the created RF directory and following directions found at invoked make like this sudo make install B The output from make was Running configure make execvp configure permission denied Makefile Makefileinc No such file or directory make Makefile Makefileinc Error It appears that the configure file a Bash shell script should build Makefileinc but it appears that the script cannot run due to permissions Permissions for configure are rwrr I tried adding permissions using sudo chmod w and sudo chmod x to see if that would help but the permissions did not change Ill have to look into that Can anyone see reasons why the make install B is failing Also it appears that the BCM the Rpi gpu is not part of the supported hardware for this library so perhaps my initial question is moot Does anyone know if there are plans for support The RF class does not have a default constructor and in some projects may force heap allocation when the instance must be created and initialized during runtime Heap allocation is a bad idea on microcontrollers like Arduino For example in my project I need inicializate an instance of RF with dynamic data during runtime but because Arduino compatibility the instance must be allocated in stack My sugestion is for implementation of a default constructor and a new begin method with paramters of the current constructor cpp RF RF pvariantfalse payloadsize dynamicpayloadsenabledfalse addrwidth csDelay pipe readingaddress bool RF beginuint t cepin uint t cspin Initizalize the cepin and cepin values thiscepin cepin thiscsnpin cspin Call the old begin method return thisbegin Hi Im unable to compile for yh new arduino nano BLE BLE SENSE It seems that the SPI library for Nano BLE supports only a newer way of setting the SPI settings and the RF library uses the old way The log of the IDE ATTENTION la biblioth que RF pr tend tre ex cutable sur la ou les architectures avr arm x esp esp et peut tre incompatible avec votre carte actuelle qui sex cute sur mbed C Users emeri Documents Arduino libraries RF RF cpp In member function void RF csnbool C Users emeri Documents Arduino libraries RF RF cpp error class arduinoMbedSPI has no member named setBitOrder SPIsetBitOrderMSBFIRST C Users emeri Documents Arduino libraries RF RF cpp error class arduinoMbedSPI has no member named setDataMode SPIsetDataModeSPIMODE C Users emeri Documents Arduino libraries RF RF cpp error class arduinoMbedSPI has no member named setClockDivider SPIsetClockDividerSPICLOCKDIV C Users emeri Documents Arduino libraries RF RF cpp error SPICLOCKDIV was not declared in this scope SPIsetClockDividerSPICLOCKDIV C Users emeri Documents Arduino libraries RF RF cpp note suggested alternative NRFCLOCKType SPIsetClockDividerSPICLOCKDIV NRFCLOCKType Hi Contributors This is my th day into the unforeseen communication issue of my B and nrf module I am building a prototype which requires the beautiful library RF RF Network and Mesh Mesh network is my utmost requirement and no other library provides as this one I have been trying to communicate an RPI B with a nRF as master node and Arduinos as slave nodes My RPI is unable to read address bytes of the module but I have some weird observations which i am noting down I have tried all the myriad of things available in the internet and still unable to get an answer Informations OS Raspbian Buster Observations The address bytes changes after multiple start of the gettingstarted Screenshot from The s changes to FFs and s sometimes Pong back role always replies back with mostly but sometimes random values Screenshot from Pingout role gets mostly as response but sometimes random values as Screenshot from Taking a wire out is detected by the library and connection error is thrown in the terminal Steps Tried th checked the connection using multimeter Changed driver to SPIDEV wiringPi MRAA RPi and pydev Read somewhere the bcm driver in the newer kernel might be broken So updated bcm c I couldnt find a similar problem of other friends around in the internet although i went very close so downgraded OS and Kernel to VERSION jessie IDraspbian Release around July Tried the python library and pingpairpy and got the same results Tried other nr standalone cpp and python libraries Read somewhere changing spispeed max SPI Loopback test worked with pigpoid and spidevtestcpp device devspidev piscope LIVE analysis when running gettingstarted The MOSI was always bursting data The SCLK burst after seconds The MISO was sending random bursts for which we were receiving and garbage I assume but still I wonder how loopback was working which proper signal in SPI pins I was trying to isolate this as a hardware and software issue Took arduino Nanos and tested all my nrfmodules They all work and mesh network got created with one arduino as a master node Used all the modules in the RPi none worked Tried changing to other GPIO pins for CE and tried changing bus speed from MHz MHz etc All these steps on the all the OSes Assumptions Checked noise and put uf caps over the vcc and gnd v regulated power supply to the module From Pi regulator Its driving me crazy please help PS I dont have a second box but I have ordered a RPI Zero W and waiting to test on it I am attempting to compile for Teensy and get the following error Arduino Linux TD Board Teensy Serial MHz Faster US English In file included from homearthurArduinolibrariesRF masterRF configh from homearthurArduinolibrariesRF masterRF h from homearthurNetShareArduinoDevProjectsTeensy PrototypeTeensy Prototypeino homearthurArduinolibrariesRF masterutilityTeensyRF archconfigh error expected at end of member declaration define printf Serialprintf It appears that there are some issues with the way debug printouts are handled within the library which make it incompatible in certain circumstances