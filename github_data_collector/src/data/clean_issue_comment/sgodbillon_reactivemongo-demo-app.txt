Hi could you please add mutliple file upload support or show how it could be done Many thanks updated files to current versions and wanted to create my first pull request Hey I just overviewed your application its really nice What about validation of BSONObjectID here What if I put there not valid BSONObjectID value Eg dsf asfa Thanks Good afternoon St phane I am following your examples and they are great However I cannot make nested object works with Im trying to store a nested document in MongoDB through Scala The document looks like Project id ObjectId cf e highLevelCode NumberLong description id ObjectId cf e lang en desc desc in English id ObjectId cf e lang fr desc desc en francais budget NumberLong Basically I want to store nested descriptions which could be of multiple languages in the Project document The code I wrote is import reactivemongobson import reactivemongobsonhandlersBSONWriter BSONReader import reactivemongobsonBSONLong import reactivemongobsonBSONString case class LocaleText id Option BSONObjectID lang String textDesc String object LocaleText implicit object LocaleTextBSONReader extends BSONReader LocaleText def fromBSONdocument BSONDocument LocaleText val doc documenttoTraversable LocaleText docgetAs BSONObjectID id docgetAs BSONString langmapvalueget docgetAs BSONString textDescmapvalueget implicit object LocaleTextBSONWriter extends BSONWriter LocaleText def toBSONlocalText LocaleText BSONDocument id localTextidgetOrElseBSONObjectIDgenerate lang BSONStringlocalTextlang textDesc BSONStringlocalTexttextDesc case class Project id Option BSONObjectID description List LocaleText budget Option Long object Project implicit object ProjectReader extends BSONReader Project def fromBSONdoc BSONDocument Project val document doctoTraversable Project documentgetAs BSONObjectID id documentgetAs BSONArray descriptionmap values valuesvaluestoListflatMap case value value match case v LocaleText SomevasInstanceOf LocaleText case None getOrElseListempty documentgetAs BSONLong budgetmapvalue implicit object ProjectWriter extends BSONWriter Project def toBSONproject Project BSONDocument BSONDocument id projectidgetOrElseBSONObjectIDgenerate description BSONArrayprojectdescription appendSeq projectbudgetmapb budget BSONLongb flatten Scala doesnt like the line description BSONArrayprojectdescription However the following alternative which is similar to your examples works although I cannot use a ListArray to allow more than two languages case class LocaleText enDesc String frDesc String case class Project id Option BSONObjectID description LocaleText object Project implicit object LocaleTextBSONReader extends BSONReader LocaleText def fromBSONdocument BSONDocument LocaleText val doc documenttoTraversable LocaleText docgetAs BSONString enDescmapvalueget docgetAs BSONString frDescmapvalueget implicit object LocaleTextBSONWriter extends BSONWriter LocaleText def toBSONlocalText LocaleText BSONDocument enDesc BSONStringlocalTextenDesc frDesc BSONStringlocalTextfrDesc implicit object ProjectReader extends BSONReader Project def fromBSONdoc BSONDocument Project val document doctoTraversable Project documentgetAs BSONObjectID id documentgetAs BSONString iatiIdmapvalueget LocaleTextBSONReaderfromBSONdocumentgetAs BSONDocument descriptionget implicit object ProjectWriter extends BSONWriter Project def toBSONproject Project BSONDocument BSONDocument id projectidgetOrElseBSONObjectIDgenerate iatiId BSONStringprojectiatiId description LocaleTextBSONWritertoBSONprojectdescription I appreciate if you can shed some light on my problem Thank you very much for your help It would be super awesome if your example also showed some ways of authoring specs that stub out the reactive mongo part of the controller 