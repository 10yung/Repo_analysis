Bumps handlebars from to details summaryChangelogsummary Sourced from handlebarss changelog v November th Bugfixes fix add noprototypebuiltins eslintrule and fix all occurences f f d fix add more properties required to be enumerable Chores Build fix use instead of c b f add chai and dirtychai and sinon for cleaner testassertions and spies deprecate old assertionmethods e e ba dad a Security The properties proto defineGetter defineSetter and lookupGetter have been added to the list of properties that must be enumerable If a property by that name is found and not enumerable on its parent it will silently evaluate to undefined This is done in both the compiled template and the lookuphelper This will prevent new RemoteCodeExecution exploits that have been published recently Compatibility notes Due to the securityfixes The semantics of the templates using proto defineGetter defineSetter and lookupGetter in the respect that those expression now return undefined rather than their actual value from the proto The semantics have not changed in cases where the properties are enumerable as in js proto some string The change may be breaking in that respect but we still only increase the patchversion because the incompatible usecases are not intended undocumented and far less important than fixing RemoteCodeExecution exploits on existing systems Commits v November th Bugfixes fix use Stringfield in lookup when checking for constructor d test add fluent API for testing Handlebars c ac c Compatibility notes no incompatibility are to be expected trtable truncated details details summaryCommitssummary c c b v c d Update release notes f f d fix add noprototypebuiltins eslintrule and fix all occurences fix add more properties required to be enumerable ba testchore add chaiexpect and sinon to runtimeenvironment dad test add sinon as global variable to eslint in the specs a test add sinonjs for spies deprecate current assertions e e chore add chai and dirtychai for better test assertions c b f fix use instead of de d v Additional commits viewable in compare view details br Dependabot compatibility score Dependabot will resolve any conflicts with this PR as long as you dont alter it yourself You can also trigger a rebase manually by commenting dependabot rebase dependabotautomergestart dependabotautomergeend details summaryDependabot commands and optionssummary br You can trigger Dependabot actions by commenting on this PR dependabot rebase will rebase this PR dependabot recreate will recreate this PR overwriting any edits that have been made to it dependabot merge will merge this PR after your CI passes on it dependabot squash and merge will squash and merge this PR after your CI passes on it dependabot cancel merge will cancel a previously requested merge and block automerging dependabot reopen will reopen this PR if it is closed dependabot ignore this patchminormajor version will close this PR and stop Dependabot creating any more for this minormajor version unless you reopen the PR or upgrade to it yourself dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency unless you reopen the PR or upgrade to it yourself dependabot use these labels will set the current labels as the default for future PRs for this repo and language dependabot use these reviewers will set the current reviewers as the default for future PRs for this repo and language dependabot use these assignees will set the current assignees as the default for future PRs for this repo and language dependabot use this milestone will set the current milestone as the default for future PRs for this repo and language You can disable automated security fix PRs for this repo from the Security Alerts page details The old example HTML seems very unless compatibility with old IE is a goal of Stimulus moving to more idiomatic accessible and userfriendly HTML seems like an improvement Using it with Rollup Im receiving warnings log this has been rewritten to undefined nodemodules stimulus core dist src applicationjs var awaiter this thisawaiter function thisArg arguments P generator return new P P Promisefunction resolve reject function fulfilledvalue try stepgeneratornextvalue catch e rejecte and other occurrences nodemodules stimulus core dist src definitionjs var extends this thisextends function var extendStatics ObjectsetPrototypeOf proto instanceof Array function d b dproto b and other occurrence nodemodules stimulus multimap dist src indexedmultimapjs var extends this thisextends function var extendStatics ObjectsetPrototypeOf proto instanceof Array function d b dproto b and other occurrence Im using this rollupconfigjs js import resolve from rolluppluginnoderesolve import commonjs from rollupplugincommonjs import stimulus from rolluppluginstimulus export default input rootjs output format esm dir distjs plugins stimulus resolve browser true commonjs I have a stimulus controller that has a button inside of it with a stimulus action associated When I click the button it invokes a method in a controller that copies the html of a form I have inside of a template Also marked with a datatarget value into a another div again also marked a datatarget value It works but as soon you see the form it immediately disappears After adding some console log statements on both the disconnect and connect methods I see that as soon as I click the button the controller disconnects and then reconnects which is what I assume to be the culprit behind my immediately disappearing form Is that supposed to happen I hope that isnt normal behavior Its a really weird bug Heres my code ruby linkto faiconplus class btn btnsm btnsuccess data action tasklistnewTask div classcardbody textprimary template datatargettasklisttaskFormTemplate simpleformfor Tasknew url remote true do f fdatefield startdate fdatefield enddate end template div datatargettasklisttaskFormContainer div div here is my controller javascript import Controller from stimulus export default class extends Controller static targets taskFormTemplate taskFormContainer newTask thistaskFormContainerTargetinnerHTML thistaskFormTemplateTargetinnerHTML connect consolelogconnected disconnect consolelogdisconnect Hi there I noticed that this package includes sourcemaps but the mapped files are not actually included in the npm package Would you consider removing src from npmignore so that the sourcemaps will work If you look at stimuluscoredistindexjs for example the sourceMappingURL decodes to jsc fileindexjs sources indexts But none of the ts files are actually included in the package Very often the question comes up on how to pass arguments to Stimulus action methods Global parameters can be passed to the action using the data API but when a controller has multiple elements and individual parameters an id by example for each of those elements it is a common practice to pass the value using the standard dataset API eventcurrentTargetdatasetid One typical example would be for a set of buttons with ids and associated fetch actions html div datacontrolleritems dataitemsbaseurl button dataactionitemsupvote dataid button button dataactionitemsupvote dataid button button dataactionitemsupvote dataid button div js upvotee const id ecurrentTargetdatasetid fetchthisbaseUrl id method POST get baseUrl return thisdatagetbaseUrl Proposal This PR is a draft proposal for a more concise API by passing all data attributes value of the currentTarget as a parameter of the action js actionevent data Using basic destructuring the above example can be simplified like this js upvotee id fetchthisbaseUrl id method POST I think this could make it simpler to understand and avoids confusions around target and currentTarget If the element is of a type HTMLFormElement we could also pass the value at the same time Just wanted to propose this for now if you feel this could make sense I ll add some associated test In regards to sstephensons answer here I thought Id add this to the Reference manual for future generations This pull request introduces two new APIs to Stimulus Values and Classes These APIs are designed to improve upon and ultimately obviate the current Data Map API We plan to ship them together in the upcoming Stimulus release Values Most uses of the Data Map API in Basecamp fall under the following categories Storing small strings such as URLs dates or color values Keeping track of a numeric index into a collection Bootstrapping a controller with a JSON object or array Conditioning behavior on a percontroller basis However the Data Map API only works with string values That means we must manually convert to and from other types as needed The Values API handles this type conversion work automatically Value properties The Values API adds support for a static values object on controllers The keys of this object are Data Map keys and the values declare their data type js export default class extends Controller static values url String refreshInterval Number loadOnConnect Boolean connect if thisloadOnConnectValue thisload async load const response await fetchthisurlValue setTimeout thisload thisrefreshIntervalValue Supported types and defaults This pull request implements support for five builtin types Type Serialized attribute value Default value Array JSONstringifyarray Boolean booleantoString false Number numbertoString Object JSONstringifyobject String Itself Each type has a default value If a value is declared in a controller but its associated data attribute is missing the getter property will return its types default Controller properties Stimulus automatically generates three properties for each entry in the object Type Kind Property name Effect Boolean Number Object String Getter this name Value Reads data identifier name value Array Getter this name Values Reads data identifier name values Boolean Number Object String Setter this name Value Writes data identifier name value Array Setter this name Values Writes data identifier name values Boolean Number Object String Existential thishas Name Value Tests for presence of data identifier name value Array Existential thishas Name Values Tests for presence of data identifier name values Note that array values are always pluralized both as properties and as attributes Value changed callbacks In addition to value properties the Values API introduces value changed callbacks A value changed callback is a specially named method called by Stimulus whenever a values data attribute is modified To observe changes to a value define a method named name ValueChanged For example a slideshow controller with a numeric index property might define an indexValueChanged method to display the specified slide js export default class extends Controller static values index Number indexValueChanged thisshowSlidethisindexValue Stimulus invokes each value changed callback once when the controller is initialized and again any time the values data attribute changes Even if a values data attribute is missing when the controller is initialized Stimulus will still invoke its value changed callback Use the existential property to determine whether the data attribute is present br Classes Another common use of the Data Map API is to store CSS class names For example Basecamps copytoclipboard controller applies a CSS class to its element after a successful copy To avoid inlining a long BEM string in our controller and to keep things loosely coupled we declare the class in a dataclipboardsuccessclass attribute html div datacontrollerclipboard dataclipboardsuccessclasscopytoclipboardsuccess and access it using thisdatagetsuccessClass in the controller js thiselementclassListaddthisdatagetsuccessClass The Classes API formalizes and refines this pattern Class properties The Classes API adds a static classes array on controllers As with targets Stimulus automatically adds properties for each class listed in the array js clipboardcontrollerjs export default class extends Controller static classes success supported initialize if thiselementclassListaddthissupportedClass copy thiselementclassListaddthissuccessClass Kind Property name Effect Getter this name Class Reads the data identifier name class attribute Existential thishas Name Class Tests whether the data identifier name class attribute is present Declarations are assumed to be present When you access a class property in a controller such as thissupportedClass you assert that the corresponding data attribute is present on the controller element If the declaration is missing Stimulus throws a descriptive error Screenshot showing error message Missing attribute dataclipboardsupportedclass If a class is optional you must first use the existential property eg thishasSupportedClass to determine whether its declaration is present br Unifying target attributes Weve made a change to the target attribute syntax to align them with values and classes and also to make the controller identifier more prominent by moving it into the attribute name The original syntax is html div datatarget identifier name and the updated syntax is html div data identifier target name The original syntax is supported but deprecated Stimulus will support both syntaxes but using the original syntax will display a deprecation message in the developer console We intend to remove the original syntax in Stimulus Try it out in your application Update the Stimulus entry in packagejson to point to the latest development build stimulus 