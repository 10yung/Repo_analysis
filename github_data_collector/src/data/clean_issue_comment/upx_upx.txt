 IF YOU REMOVE THIS TEMPLATE WE WILL CLOSE YOUR ISSUE WITHOUT RESPONSE Just read it and fill in the details were asking it saves so much of our time Thanks Whats the problem or question I am trying to modify the UPX precompiled stub and just want to add a simple delay before the stub decompresses my compressed application What I want to achieve is the executable to loaded in memory and unpacked after a delay What should have happened section ZED mov cx x FA mov dx xF mov ah x mov al int x As the stubs are in assembly I was expecting to add an interrupt based delay to achieve this functionalityBut every time I implemented the delay the program loaded instantly Do you have an idea for a solution I believe that the approach of using an interrupt to generate is based on bit assembly and the stub is bit assembly and that does not uses interrupts the interrupt in question is H Please tell us details about your environment UPX version used upx version upx git a ff a UCL data compression library zlib data compression library LZMA SDK version Host Operating System and version Ubuntu Host CPU architecture x Target Operating System and version Ubuntu Target CPU architecture x IF YOU REMOVE THIS TEMPLATE WE WILL CLOSE YOUR ISSUE WITHOUT RESPONSE Just read it and fill in the details were asking it saves so much of our time Thanks Whats the problem or question On Debian buster x with qemuusetstatic and upxucl wget chmod ax busyboxarmv l Then userhosttmp upx busyboxarmv l Ultimate Packer for eXecutables Copyright C UPX Markus Oberhumer Laszlo Molnar John Reiser Aug th File size Ratio Format Name linuxarm busyboxarmv l Packed file userhosttmp busyboxarmv l busyboxarmv l Invalid argument The compressed executable reported Invalid argument What should have happened The compressed busyboxarmv l should run as the uncompressed one Do you have an idea for a solution I have no idea disappointed After uncompressed this the busyboxarmv l worked wo errors userhosttmp upx d busyboxarmv l Ultimate Packer for eXecutables Copyright C UPX Markus Oberhumer Laszlo Molnar John Reiser Aug th File size Ratio Format Name linuxarm busyboxarmv l Unpacked file userhosttmp busyboxarmv l BusyBox v CET multicall binary BusyBox is copyrighted by many authors between Licensed under GPLv See source distribution for detailed copyright notices On Debian arm It works perfectly master and devel branch of upx does NOT work either with libucldev repack Not sure if its related to qemuuserstatic How can we reproduce the issue Provide unambiguous set of steps to reproduce this bug Include code to reproduce if relevant Get a computer running Debian buster x apt install qemuuserstatic upxucl wget chmod ax busyboxarmv l upx busyboxarmv l busyboxarmv l Please tell us details about your environment Include as many relevant details about the environment you experienced the bug in UPX version used upx version upx Host Operating System and version Debian buster Host CPU architecture x Target Operating System and version Debian buster and OpenWRT Target CPU architecture arm commitf ecdcd dbf ba e e d e cc f Examples LordPE optimized header LordPEoptm very shortened header fsg hdr IF YOU REMOVE THIS TEMPLATE WE WILL CLOSE YOUR ISSUE WITHOUT RESPONSE Just read it and fill in the details were asking it saves so much of our time Thanks Whats the problem or question compress nativelibso use upx with androidshlib parameter compress success then use the so file which has compressed crash on android phone use the develop branch source code compress nativelibso throwCantPack What should have happened for problem should not crash for problem should compress success Do you have an idea for a solution I have no idea with problem for problem in punixcpp change define SIEXEC Execute by owner to define SIEXEC x Execute by owner in plxelfcpp add other rtype value if Elf EhdrEMARM emachine RARMRELATIVE rtype userinitva gette fileimage userinitoff else char msg snprintfmsg sizeofmsg bad relocation x DTINITARRAY rinfo throwCantPackmsg break in my case rtype is number if Elf EhdrEMARM emachine RARMRELATIVE rtype xxxx rtype How can we reproduce the issue Provide unambiguous set of steps to reproduce this bug Include code to reproduce if relevant create new native project use android studio modify the nativelibc include jnih include string include androidlogh void testBeforeMain attributeconstructor extern C JNIEXPORT jint JNICALL JNIOnLoadJavaVM vm void reserved androidlogprintANDROIDLOGDEBUG demo eyas JNIOnLoad n return JNIVERSION extern C JNIEXPORT jstring JNICALL JavacomexampleeyasMainActivitystringFromJNI JNIEnv env jobject this stdstring hello Hello from eyas androidlogprintANDROIDLOGDEBUG demo eyas JavacomexamplereforceapkMainActivitystringFromJNI n return envNewStringUTFhellocstr void testBeforeMain androidlogprintANDROIDLOGDEBUG demo testBeforeMain n build apk compress nativelibso resign apk install run the apk Please tell us details about your environment Include as many relevant details about the environment you experienced the bug in UPX and upx dev branch win intel armeabiv a arm IF YOU REMOVE THIS TEMPLATE WE WILL CLOSE YOUR ISSUE WITHOUT RESPONSE Just read it and fill in the details were asking it saves so much of our time Thanks Whats the problem or question If describing a bug tell us what happens instead of the expected behavior If suggesting a changeimprovement explain the difference from current behavior upxout brute androidshlib libso arm v a Error CantPackException bad PTDYNAMIC phdr What should have happened If youre describing a bug tell us what should happen If youre suggesting a changeimprovement tell us how it should work Do you have an idea for a solution Not obligatory but suggest a fixreason for the bug or ideas how to implement the addition or change How can we reproduce the issue Provide unambiguous set of steps to reproduce this bug Include code to reproduce if relevant i use android studio and ndkbuild a test project so Please tell us details about your environment Include as many relevant details about the environment you experienced the bug in UPX version used upx version Host Operating System and version macos Host CPU architecture x Target Operating System and version android Target CPU architecture arm v a I compiled a binary executable program in the mobile terminal is no problem when to install the program in vmos is executed up inside hope to be able to help me thank you very much UPX upx f o xxx xxx Here is to capture the error F DEBUG Build fingerprint Rockodinodin NMF F userdevkeys F DEBUG Revision F DEBUG ABI arm F DEBUG pid tid name initlinker datadatacomtouchspriteandroidfilesjararmeabicore F DEBUG signal SIGBUS code BUSADRERR fault addr xf d F DEBUG r f b e r f r f d r F DEBUG r ff r ffffffff r f b r f b f d F DEBUG r r c sl ffcf fp ff bb dc F DEBUG ip ff bb sp ff bb a lr f b ec pc f b e cpsr b d F DEBUG F DEBUG backtrace F DEBUG pc e datadatacomvmosapposimgrot datadatacomtouchspriteandroidfilesjararmeabicore F DEBUG pc e datadatacomvmosapposimgrot datadatacomtouchspriteandroidfilesjararmeabicore I AudioFlinger BUFFER TIMEOUT remove from active list on thread xf f a I APMAudioPolicyManager stopOutput output stream session I APMAudioPolicyManager setOutputDevice io prevDevice x cur x IF YOU REMOVE THIS TEMPLATE WE WILL CLOSE YOUR ISSUE WITHOUT RESPONSE Just read it and fill in the details were asking it saves so much of our time Thanks Whats the problem or question Upx can produce binaries which would segfault when run if the program segment is of specific size when the padding it has is less than bytes Normally the program segment is page sizealigned meaning that it can have at most unused bytes in its last page so theres a good chance it would have at least bytes However thats not guaranteed and theres roughly a chance the space would not be there If describing a bug tell us what happens instead of the expected behavior If suggesting a changeimprovement explain the difference from current behavior What should have happened The compressed binary should run normally irrespective of the program segment size If youre describing a bug tell us what should happen If youre suggesting a changeimprovement tell us how it should work Do you have an idea for a solution I tracked down the issue to the function makehatchx not being able to find space for the hatch at the following location None of the conditions match and the function returns Later the hatch is attempted to be used at and since its zero jump happens to and it all segfaults Not obligatory but suggest a fixreason for the bug or ideas how to implement the addition or change How can we reproduce the issue Provide unambiguous set of steps to reproduce this bug Include code to reproduce if relevant Since this happens when theres no padding space left after program segment we generate binaries of increasing sizes and run them until one of them crash A test program and a shell script to do this are included Run testallsh and see it segfault at some point testc include unistdh int main exit define NOP asmnop asmnop define NOP NOP NOP define NOP NOP NOP define NOP NOP NOP define NOP NOP NOP define NOP NOP NOP define NOP NOP NOP define NOP NOP NOP define NOP NOP NOP define NOP NOP NOP define NOP NOP NOP void attributesectionfini foo NOP NOP NOP NOP if VAL asmnop endif if VAL NOP endif if VAL NOP endif if VAL NOP endif if VAL NOP endif if VAL NOP endif if VAL NOP endif if VAL NOP endif if VAL NOP endif if VAL NOP endif if VAL NOP endif if VAL NOP endif testallsh binbash set xue for x in seq do gcc DVALx testc o test upx test test done Here is what I get it takes iterations to find the right size in my case only the final output is included for x in seq gcc DVAL testc o test upx test Ultimate Packer for eXecutables Copyright C UPX Markus Oberhumer Laszlo Molnar John Reiser Aug th File size Ratio Format Name linuxamd test Packed file test testallsh line Segmentation fault test Please tell us details about your environment Include as many relevant details about the environment you experienced the bug in UPX version used upx version upx or any other version including current devel tip Host Operating System and version linuxamd Host CPU architecture linuxamd Target Operating System and version linuxamd Target CPU architecture amd IF YOU REMOVE THIS TEMPLATE WE WILL CLOSE YOUR ISSUE WITHOUT RESPONSE Just read it and fill in the details were asking it saves so much of our time Thanks Whats the problem or question unity libil cppso crash on x platform after upx compress while on arm platform it works fine What should have happened should not crash after upx compress on x platform Do you have an idea for a solution No solution here only found that the unity internal function Debuglog will cause the crash but it should not be the reason because it works fine on the arm platform How can we reproduce the issue Write a unity Demo app its better that include the Debuglog statement build with il cpp and do not forget include the armv and x platform when export a apk file unpack the apk and use upx to compress the libil cppso in folder armv and x and then repack it run the apk on an android phone and use logcat to check the log it works fine run the apk on an android simulator and use logcat to check the log it crashed Please tell us details about your environment Include as many relevant details about the environment you experienced the bug in UPX version used upx version both upx and upx tried Host Operating System and version linux Host CPU architecture Amd Target Operating System and version x Target CPU architecture intel Last release has been quite a while ago and especially with being fixed in the devel branch I think its quite important to get that fix into stable What do you think IF YOU REMOVE THIS TEMPLATE WE WILL CLOSE YOUR ISSUE WITHOUT RESPONSE Just read it and fill in the details were asking it saves so much of our time Thanks Whats the problem or question If describing a bug tell us what happens instead of the expected behavior If suggesting a changeimprovement explain the difference from current behavior I used the following command to pack so for android device upx androidshlib libsarm v alibnativelibso upx androidshlib libsarmeabilibnativelibso upx androidshlib libsarmeabiv alibnativelibso upx androidshlib libsx libnativelibso upx androidshlib libsx libnativelibso I tested arm so in real device and it worked well However so crashed in x x android emulator F libc Fatal signal SIGSEGV code SEGVMAPERR fault addr x in tid tyabctestapp pid tyabctestapp D EGLemulation eglMakeCurrent x dceede ac ver tinfo x dcf f I crashdump obtaining output fd from tombstoned type kDebuggerdTombstone I systembintombstoned received crash request for pid I crashdump performing dump of process target tid F DEBUG F DEBUG Build fingerprint googlesdkgphonex genericx PSR userdebugdevkeys F DEBUG Revision F DEBUG ABI x F DEBUG pid tid name tyabctestapp comjtestabctestapp F DEBUG signal SIGSEGV code SEGVMAPERR fault addr x F DEBUG Cause null pointer dereference F DEBUG rax rbx rcx dcdcbd f rdx ffdabe f F DEBUG r r r r F DEBUG r dd bcf r dd bcb r dd bcb r dcdcbde F DEBUG rdi rsi ffdabe f F DEBUG rbp dd bcb rsp ffdabe rip dcdcbd c F DEBUG F DEBUG backtrace F DEBUG pc c anonymous dcdcbd F DEBUG pc dd systembinlinker dlZN soinfo callconstructorsEv F DEBUG pc f anonlinkerallocsmallobjects dd bcf F DEBUG pc b systembinlinker dlZ dodlopenPKciPK androiddlextinfoPKv F DEBUG pc unknown F DEBUG pc f systembinlinker loaderandroiddlopenext F DEBUG pc f b b stack ffdab F DEBUG pc fa systemlib libnativeloaderso androidOpenNativeLibraryJNIEnv int char const jobject jstring bool std basicstringchar std chartraitschar std allocatorchar F DEBUG pc unknown F DEBUG pc b systemlib libartso artJavaVMExtLoadNativeLibraryJNIEnv std basicstringchar std chartraitschar std allocatorchar const jobject std basicstringchar std chartraitschar std allocatorchar F DEBUG pc b unknown F DEBUG pc f systemlib libopenjdkjvmso JVMNativeLoad F DEBUG pc f c stack ffdab F DEBUG pc d systemframeworkx bootoat offset x javalangRuntimenativeLoad DEDUPED F DEBUG pc e f datadalvikcachex systemframeworkbootart F DEBUG pc c e systemlib libartso artquickinvokestaticstub What should have happened If youre describing a bug tell us what should happen If youre suggesting a changeimprovement tell us how it should work Do you have an idea for a solution Not obligatory but suggest a fixreason for the bug or ideas how to implement the addition or change How can we reproduce the issue Provide unambiguous set of steps to reproduce this bug Include code to reproduce if relevant compile android so in androidndkr b and generate so file use latest upx to compress so file with the command upx androidshlib libsx libnativelibso Use an android app to load the upxpacked so file in android emulator Pixel API Android API Please tell us details about your environment Include as many relevant details about the environment you experienced the bug in UPX version used upx version upx and upx git a c b d Host Operating System and version Linux ubuntu generic Ubuntu SMP Thu Jul UTC x x x GNULinux Host CPU architecture X Target Operating System and version Android API level Target CPU architecture x 