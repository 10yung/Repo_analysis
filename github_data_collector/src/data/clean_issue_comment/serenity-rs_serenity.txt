Currently serenity supports AttachmentTypeFile corresponding to Partreader but limited to stdfsFile AttachmentTypeBytes corresponding to Partbytes and AttachmentTypePath corresponding to Partfile An AttachmentTypeReader could be added unclear how this would affect existing code unless a trait object is used I tried using serenity with the web flow login and I have facing these problems A new reqwestClient has to be created for each session which is not optimal for performance The authorization and token endpoints are not available via this library So I was trying to compile Cosmic on my AWS Ubuntu instance and met a few problems I published them with their solution here in Cosmics bug tracker Heres a copy of the above issue to make it googlediscoverable when searching for Serenity TLDR sudo apt update sudo apt install y pkgconfig libssldev autoconf libtool libopusdev Story I was getting the following error with opensslsys ubuntuipxxxxcosmic cargo build release Compiling opensslsys v error failed to run custom build command for opensslsys v Caused by process didnt exit successfully homeubuntucosmictargetreleasebuildopensslsysa d b ba fbuildscriptmain exit code stdout cargorustccfgconstfn cargorerunifenvchangedX UNKNOWNLINUXGNUOPENSSLLIBDIR X UNKNOWNLINUXGNUOPENSSLLIBDIR unset cargorerunifenvchangedOPENSSLLIBDIR OPENSSLLIBDIR unset cargorerunifenvchangedX UNKNOWNLINUXGNUOPENSSLINCLUDEDIR X UNKNOWNLINUXGNUOPENSSLINCLUDEDIR unset cargorerunifenvchangedOPENSSLINCLUDEDIR OPENSSLINCLUDEDIR unset cargorerunifenvchangedX UNKNOWNLINUXGNUOPENSSLDIR X UNKNOWNLINUXGNUOPENSSLDIR unset cargorerunifenvchangedOPENSSLDIR OPENSSLDIR unset run pkgconfig fail Failed to run pkgconfig libs cflags openssl No such file or directory os error stderr thread main panicked at Could not find directory of OpenSSL installation and this sys crate cannot proceed without this knowledge If OpenSSL is installed and this crate had trouble finding it you can set the OPENSSLDIR environment variable for the compilation process Make sure you also have the development packages of openssl installed For example libssldev on Ubuntu or openssldevel on Fedora If youre in a situation where you think the directory should be found automatically please open a bug at and include information about your system as well as this message HOST x unknownlinuxgnu TARGET x unknownlinuxgnu opensslsys It looks like youre compiling on Linux and also targeting Linux Currently this requires the pkgconfig utility to find OpenSSL but unfortunately pkgconfig could not be found If you have OpenSSL installed you can likely fix this by installing pkgconfig homeubuntucargoregistrysrcgithubcom ecc db ec opensslsys buildfindnormalrs note run with RUSTBACKTRACE environment variable to display a backtrace So as suggested by opensslsyss error message I did the following sudo apt update sudo apt install y libssldev pkgconfig Then I got the following error with audiopussys ubuntuip cosmic cargo build release Compiling audiopussys v error failed to run custom build command for audiopussys v Caused by process didnt exit successfully homeubuntucosmictargetreleasebuildaudiopussysd ad dd buildscriptbuild exit code stdout cargoinfoNo feature or environment variable found linking by default cargoinfopkgconfig could not find Opus cargoinfoOpus source path homeubuntucargoregistrysrcgithubcom ecc db ec audiopussys opus cargoinfoOpus will be built as dyliblibrary Updating build configuration files please wait stderr autogensh autogensh autoreconf not found thread main panicked at Failed to autogen Opus homeubuntucargoregistrysrcgithubcom ecc db ec audiopussys buildrs note run with RUSTBACKTRACE environment variable to display a backtrace So I installed autoconf sudo apt install y autoconf But then I got ubuntuip cosmic cargo build release Compiling audiopussys v error failed to run custom build command for audiopussys v Caused by process didnt exit successfully homeubuntucosmictargetreleasebuildaudiopussysd ad dd buildscriptbuild exit code stdout cargoinfoNo feature or environment variable found linking by default cargoinfopkgconfig could not find Opus cargoinfoOpus source path homeubuntucargoregistrysrcgithubcom ecc db ec audiopussys opus cargoinfoOpus will be built as dyliblibrary Updating build configuration files please wait stderr configureac warning macro AMPROGLIBTOOL not found in library configureac error possibly undefined macro AMPROGLIBTOOL If this token and others are legitimate please use m patternallow See the Autoconf documentation autoreconf usrbinautoconf failed with exit status thread main panicked at Failed to autogen Opus homeubuntucargoregistrysrcgithubcom ecc db ec audiopussys buildrs note run with RUSTBACKTRACE environment variable to display a backtrace So I installed libtool sudo apt install y libtool and then it built Edit Added libopusdev to TLDR Im thinking about writing a Serenitybased bot and I was wondering what would be the best way to conduct automated testing of such a bot As far as I can tell theres not a way to change the URL that Serenity connects to which means I would need to either intercept the Discord connection by mucking with etchosts or set up a Discord server dedicated to testing this bot What would you recommend Create a message and send it to a channel The message should have an embed that uses an attachment for its image Get the message by its ID getmessage Take the Embed from the Message messageembedsremove Make a CreateEmbed from the Embed CreateEmbedfromembed Add a field to the embed Edit the message editmessage rust channeleditmessagehttp messageid msg msgembede e embed e Notice the output looks something like this There was relevant discussion on Discord disc prior to making this issue see link Actual code Making the message making Editing the embed editing Serenity version from cratesio disc making editing With the arrival of Rust we can now write non exhaustive enumsstructs with the builtin nonexhaustive attribute This PR replaces all occurences of the Nonexhaustive hack previously in place with the new attribute I opened this so we can discuss whether this change is appropriate or not for Serenity as this may force users to use Rust However if merged to current it will only affect Serenity and later so I personally think this is fine This feature s goal is to make it easier and shorter for programmers to parse command arguments Currently one has to write quite a lot of boilerplate code to parse arguments in every command This can be quite redundant for commands that take similar parameters for example a ban and a kick command might take a target Member and an optional reason However we can make use of procedural macros to generate the parsing code for the user and reject bad command invocations in the process Here is a TODO list of what I think should be done for this feature Create a CommandArgument trait which represent a type that can be created from command arguments Write the macro itself Provide a blanket implementation of this trait for FromStr Provide implementation of the trait for every model object that could be created from a command arg such as Member Channel Handle Optional arguments Handle Greedy arguments and pass it as a Vec Provide rest of arguments somehow Resolves Im trying to implement things in a way it breaks as few code as possible Every builder like builderEditGuild will have an additional method reason which allows to set or unset the reason for that request However it will still break the code which uses the Http struct directly Current state of implementation x GUILDUPDATE x CHANNELCREATE x CHANNELUPDATE x CHANNELDELETE x CHANNELOVERWRITECREATE CHANNELOVERWRITEUPDATE not implemented in Serenity x CHANNELOVERWRITEDELETE x MEMBERKICK x MEMBERPRUNE x MEMBERBANADD x MEMBERBANREMOVE MEMBERUPDATE MEMBERROLEUPDATE MEMBERMOVE MEMBERDISCONNECT ROLECREATE ROLEUPDATE ROLEDELETE INVITECREATE INVITEUPDATE INVITEDELETE WEBHOOKCREATE WEBHOOKUPDATE WEBHOOKDELETE EMOJICREATE EMOJIUPDATE EMOJIDELETE MESSAGEDELETE MESSAGEBULKDELETE MESSAGEPIN MESSAGEUNPIN INTEGRATIONCREATE INTEGRATIONUPDATE INTEGRATIONDELETE Marked as a draft as I have to add error handling and correct recoonectionresuming logic rust cargo V cargo ef a ef cargo fmt version rustfmt stable cargo nightly fmt version rustfmt nightly e 