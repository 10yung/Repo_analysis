Pretty neat implementation Integrates this Will write fuzz test in morning have tested on small examples only Still remaining something about queries on trees comment or code not sure Doesnt add too many lines nor does it affect perf at all Also adds a supporting DSU with rollback The most controversial part of this is removing the standard DSU from the pdf Closes Were mixing snakecase camelCase and UpperCamelCase I think we should go with camelCase except where consistency with STL is desired like defining a lowerbound method Init function initfft in Precomputing powers of roots similar to above FFTs should reduce constant factor Right now NTT computes them in every convolution Constant factor did reduce by times when this optimisation on Its seldom useful easy to add manually and costs lines No tests sanity checked it Id like to cram as much geometry as possible into KACTL Perhaps not necessarily included by default but some of these things would be nice to have Taking lots of these from ON log N circle union xyz x Area of circle intersection xyz viet spaghetti x Manhattan MST issue exists here implementation here Polygon triangulation Tangent circles given lines find the circles of radius r that touch those lines Maximum circle cover find circle of radius r that covers as many points as possible x number of lattice points below a line construct visibility graph in Opoints obstacles Maximum area of empty convex kgon given a set of points x test whether two polygons are congruentsimilar easy enough if you know the idea tangent from point to convex polygon apparently at WF ICPC Minkowski Sum Fuzz tested There exists a n log n k algorithm where k is the number of intersections but I think its significantly more complicated