 This object type doesnt work here The assembly is loaded later so this produces an error To resolve just remove this from the parameter as the object type is set later in this line SetOwner does not work on PowerShell due to referencing NET Framework assembly APIs NET Core has refactored these APIs and they no longer work in PowerShell because the API is not there The following is a simpler SetOwner script powershell IMPORTANT Run with ELEVATION The target folder folder C Temp Specify the new owner which can be a mere username JohnDoe a wellknown security principal BUILTIN Administrators or a UPN JohnDoeexampleorg newOwner BUILTIN Administrators Get the current ACL acl GetAcl LiteralPath folder and assign the new owner aclSetOwner SystemSecurityPrincipalNTAccount newOwner and set the modified ACL SetAcl LiteralPath folder AclObject acl New owner GetAcl LiteralPath folderOwner Im totally new in powershell I add this InvokeBalloonTip Message This is a message from my function Title Attention MessageType Info to the bottom of InvokeBalloonTipps Then I execute it PS C Users bruce Desktop InvokeBalloonTipps The error showed up Im pretty new to this stuff but Im trying to get this one to run I run it but no balloons appear The script also is not failing Is there anything that I should be modifying in the script Here is what I see Id love any help thanks This is a very useful PS script so thank you greatly to the creatorcontributors It would just be even better if I could get the sAMAccountName out of it Is this possible I work in a DevOps heavy environment where there are a lot of machines that do not get joined into the Domain because they are torn down after their smoketests are run Or thats what they tell me is supposed to happen In reality though a good number of these machines persist and get passed around from dev to dev That creates an issue of needing nondomain credentials to pull ADSI information from the remote host How could we facilitate that use case with the script Would it need to be a new fork entirely or could it be added in proxb kensel GetLocalGroupMembershipps I cant get this to work No results returned when I run it as in the examples What am I missing hello Ive writter simple script cls C xxx GetSQLInstanceps running on f envComputername GetSQLInstance Computername envComputername ComputerName I expected it to show cluster node an owner of cluster application However it shows current computer all the time running on SRVSQL DCA SRVSQL DCA SRVSQL DCA SRVSQL DCA SRVSQL DCA SRVSQL DCA SRVSQL DCA SRVSQL DCA SRVSQL DCA SRVSQL DCA SRVSQL DCA SRVSQL DCA PS C Windows system actually I checked cluster instances are distributed across several nodes Computername SRVSQL DCA Instance MSSQLDEVDCA MSSQLHFMDCA MSSQLINFDCA MSSQLIPORTDCA SqlServer SRVSQLTFS WMINamespace ComputerManagement Sqlstates Version Splevel Clustered True Installpath C Program Files Microsoft SQL Server MSSQL WHD MSSQL Datapath S MSSQL WHD MSSQL Language Fileversion Vsname SRVSQLWHDDCA Regroot Software Microsoft Microsoft SQL Server MSSQL WHD Sku Skuname Enterprise Edition bit Instanceid MSSQL WHD Startupparameters dS MSSQL WHD MSSQL DATA mastermdfeS MSSQL WHD MSSQL Log ERRORLOGlS MSSQL WHD MSSQL DATA mastlogldf Errorreporting False Dumpdir S MSSQL WHD MSSQL LOG Sqmreporting False Iswow False BackupDirectory S MSSQL WHD MSSQL Backup AlwaysOnName Nodes SRVSQL DCA SRVSQL DCA SRVSQL DCB Caption SQL Server FullName SRVSQLTFS SystemObject 