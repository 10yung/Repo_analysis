Web Packaging looks promising I dont think if its out of scope for H BP it is still in draft but I thought itd open this issue as it is likely others will ask about this in the future Web Packaging comes in several layers Bundled HTTP Exchanges Web Bundles wbn file extension applicationwebbundle Signed HTTP Exchanges sxg file extension applicationsignedexchange also defines applicationcertchaincbor but no definition of a file extension NA however there are examples in the wild of certcbor files with this mediatype Perhaps itll be a convention in the future Ifwhen its decided this is useful for developers we can add the mediatypes This is a somewhat rough proposal for ExpectCT Theres been no public discussion within this repo around ExpectCT or if this is even needed if it is deemed unwanted that is completely fine Ill perhaps need it myself anyways Serve WebP files to supported browsers when a matching webp version of a JPEGPNG file exists on the server PS Code copied from Automating image optimization Article By Addy Osmani on Google Web Fundamentals When AccessControlAllowOrigin points to a URL rather than then Vary Origin should be sent along with the response Sources All of the CORS configs use in the examples But if anything there could potentially be a note of this in requestsconf Or something better than just a note Googles cspevaluator is complaining whenever the fetchdirective objectsrc is missing unless defaultsrc is none which is rarely done in the wild I reported this to webhint aswell objectsrc per the spec acts upon any request made on behalf of an object embed or applet element and can be used to allow plugintypes such as applicationxshockwaveflash also this directive may be removed from the web platform These elements are largely considered legacy elements that do not recieve new standardized security features such as iframe sandbox or allow attributes The recommendation is documented in and Since setting directives other than scriptsrc and objectsrc doesnt increase the protection against crosssite scripting and it adds adoption and maintenance costs of CSP we believe most applications should focus on deploying the baseline strict policy as the most highimpact improvement I dont have knowledge of how common it is or which other types of plugins may be used I think people use object to embed PDFs etc However I dont think developers implementing a CSP today is still using these legacy elements WDYT It was brought to my attention that for example the CSP header should be sent for other resources such as XML and workers While we could send any given HTTP header in all responses itll contribute to header bloat and for other headers it may even cause issues Following maybe all Header directives in srcsecurity are eligible to the always condition But the documentation isnt very clear how we should use always so guessing where to place it is not trivial When scanning my site through I got flagged because I was missing a FeaturePolicy header Would you be interested in adding it to the template I can make a PR if thats the case The cachecontrol header which takes precedence over expires if present has been asked about before in and I would like to raise this again because the header provides finer control than expires Also with the addition of the immutable directive see blog posts we get a performance benefit but also no longer have to set long maxage directives for infinite caching Current situation in htaccess IfModule modheadersc Header unset ETag IfModule FileETag None ExpiresByType texthtml access plus seconds This forces the client to reload HTML files regardless of whether or not they have changed I propose this FilesMatch html ifModule modheadersc Header unset ETag IfModule FileETag None FilesMatch This will make apache generate ETags for HTML files Now in the rare case of server clustering the client may still be forced to reload as mentioned in Without server clustering the client benefits from ETags and receives a response Bottom line most users will take advantage of this configuration and the situation is unchanged for the rest 