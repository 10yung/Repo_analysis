This adds a description to all of our generators except for the main one The main one will continue to use the USAGE file The descriptions are stored in a Markdown file under templatesdescriptions named after the generator For example SuspendersViewsGenerator is described by templatesdescriptionsviewsmd A little metaprogramming is used in the parent class to make this seamless for the generators While here fix a few generators env is now sampleenv Move the removepriorconfig method up so we dont remove the config that we just added We locked Sprockets to in to get around some CI failures but this constraint may make it more difficult to upgrade Rails spent the past days on this I am not sure why this happens when deploying project generated by suspenders The application deployed on elasticbeanstalk doesnt boot up correctly and and it silently fails I tried on cloudwatch and pull logs it doesnt show any crash error but neither does it boot I have tested this with rails ruby on both phusion passenger and puma of the elastic beanstalk when deploy a vanilla rails project to the exact same stack the application works fine I think possibly due to the puma config in cluster mode I tried to copy and paste the vanilla config from rails but that doesnt seem to work either Neither honeybadger nor skylight reports any crash error when trying to reach the site my assumption was that the application isnt even running after deployment any idea on the possible causes Rails and Puma added support for early hints in and We could enable this by default by adding earlyhints to our puma config removed the advice to use workeronboot in configpumarb I am guessing we can drop that now as well Hello this is more of a question than an issue please correct me if this is the wrong place to ask but I was wondering why the suspenders scaffold registers a new javascript driver for headless Chrome when the driver seleniumchromeheadless is preregistered in capybara I dont understand this yet but Rails will be introducing an ActionDispatchHostAuthorization middleware that automatically configures itself A quick search indicates that it configures itself via the confighosts value We should probably find a way to set that Filter from the back trace commonly used gems during RSpec failure logging Many framework gems are rarely relevant in tracing testing errors particularly while doing TDD and their presence in the failure log makes it more difficult to find the test error that is driving the next change For example ruby GEMSTOEXCLUDEFROMBACKTRACE w bootsnap capybara delayedjob factorybot honeybadger rack railties shouldamatchers skylight sprocketsrails RSpecconfigure do config configfilterrailsfrombacktrace configfiltergemsfrombacktraceGEMSTOEXCLUDEFROMBACKTRACE end RSpec allows developers to temporarily suspend this filtering through the use of the backtrace flag should seeing those gems be necessary Writing a simple feature test to start with specfeaturesuserseeshomepagespecrb feature User sees homepage do scenario and it works do visit end end Leads to the following error partial trace bundle exec rspec NoMethodError undefined method feature for mainObject specfeaturesuserseeshomepagespecrb in main e in main Run options include locationsspecfeaturesuserseeshomepagespecrb All examples were filtered out adds actionmailer configuration to the end of the file whereas adds actionmailer configuration below some other actionmailer configuration It might be nice to keep related configuration grouped together