Hi Really liking Squirrel and am hoping the development continues but I am wondering if there is a way to compartmentalize the updates For example the main application is over Mb but inside that application are several unrelated components each of which are only Mb Can you have the nuspec setup in a way that there are dependencies to other nuspec files each of which download and update independently There would be no point running the component without the main application so no shortcut would be required and the components would have to install to a location known to the main application to run Thanks Take the branch of reactiveuisplat Take the bare minimum required for Squirrel change name space Remove NuGet references to Splat Correctly name things Update to VS Update GitVersioning Tests ran before and after this change I started an installation and try to cancel it but installation is not stopped I thinks there should be a possibility to cancel installation T e Error x Bootstrapper application aborted during EXE progress T e Error x Failed to configure peruser EXE package Squirrel versions trying to upgrade to Description In this commit anaisbetts looks like a version bump also included a change which fixes the SharpCompress dependency version to I am already ahead of this as was permitted by the version which means that I am now in a bit of a funny state as I would have to go backwards on SharpCompress in order to forwards on Squirrel Now as this isnt linked to a work item or mentioned in the commit I wonder if it was accidental while testing something else at the same time as doing the version bump Is it possible to check and if so can be issued with it rolled back Having a search of the issues I see there have been some issues upgrading it in the past so similarly if it is now a requirement to have it would be good to know that for certain so I can take positive action to roll that back Thank you I have a solution in TeamCity and a shared folder where the releases are stored and exported I have automated the release cycle with a powershell script and inside there is the the command squirrelPath releasify PSScriptRoot ExePath NugetNameVersionnupkg releaseDir ReleaseFolder nomsi Suddenly it stopped export of full and delta packages also it stopped updating the setupexe and it only produces nameversionnupkg in the shared folder I didnt change the code neither the build steps in TeamCity Any ideas Hi I am struggling to get the Squirrel updater to work with github I am currently getting the error message in the title of this thread Can anyone help or point be at a step by step tutorial for setting this up Squirrel versions Description App does not restart after calling UpgradeManagerRestartApp even if I provide the filename to the nonversion launcher it does not reopen The SquirrelSetuplog is in the version folder and indicates it is trying to find appxyz packages releases instead of packages releases so my guess is somehow the updater is running from the version directory instead of the parent Expected behavior App closes with no displayed errors nothing in event log the old version of the app does not go into the catch steps New version does not open SquirrelSetuplog is created with an error inside Actual behavior New version should launch Additional information SquirrelSetuplog attached Username and appname have been replaced File name was C Users user AppData Local app app SquirrelSetuplog SquirrelSetuplog Ive followed the example here but Im facing some issues I just cant work out Ive actually put the code provided into a separate SoftwareUpdater project in Visual Studio and provide a callback function from the main application for providing the UI interaction so I can reuse this library with WinForms WPF or whatever without the updater library needing to know what presentation technology is being used public class SquirrelUpdater ISoftwareUpdater private static readonly Logger logger LogManagerGetCurrentClassLogger public async Task UpdateAsyncstring updateUri Funcstring PerformSoftwareUpdate confirmUpdateFunc using var mgr new UpdateManagerupdateUri loggerInfoChecking for updates try var updateInfo await mgrCheckForUpdate if updateInfoReleasesToApplyAny var versionCount updateInfoReleasesToApplyCount loggerInfoversionCount updates found var versionWord versionCount versions version var message new StringBuilderAppendLineApp is versionCount versionWord behind AppendLineIf you choose to update changes wont take affect until App is restarted AppendLineWould you like to download and install them ToString var result confirmUpdateFuncmessage if result PerformSoftwareUpdateYes loggerInfoUpdate declined by user return loggerInfoDownloading updates var updateResult await mgrUpdateApp loggerInfo Download complete Version updateResultVersion will take effect when App is restarted else loggerInfoNo updates detected catch Exception ex loggerWarnThere was an issue during the update process exMessage When debugging I found that the var updateInfo await mgrCheckForUpdate call got swallowed up and when this happens its usually something to do with async my calls are correctly configured as far as I can tell public async Task RunAsync Check for software updates var updateUri ConfigurationManagerAppSettings UpdateUri await softwareUpdaterUpdateAsyncupdateUri message var result MessageBoxShowmessage App Update Available MessageBoxButtonsYesNo return result DialogResultYes PerformSoftwareUpdateYes PerformSoftwareUpdateNo ConfigureEnvironment Make simple call to database to ensure it gets created if not present var custs repositoryGetCustomers ApplicationRunmainForm If I take out the calls to the update the application runs fine Soo I tried releasifying to see what happens and it installs but I get a stack of errors SquirrelSetuplog The C Users steve AppData Local ServiceToolbox packages exists so why is it complaining about not being able to write to betaid Isnt this stuff supposed to be done by Squirrel Im lost anyone know what may be going on This seems like a great alternative to ClickOnce Im just getting started using Squirrel and so far its been great but Ive found a couple of differences with ClickOnce The fourth digit of the version number must be left at zero otherwise itll break the NuGet package Settings wont be automatically copied when an update is made this must be done programmatically I noticed these two just as I was getting started so I wonder how many other differences there may be that I havent thought of I think it would be nice to have a comprehensive list of differences between how ClickOnce and Squirrel work especially since ClickOnce is mentioned in the tagline to prevent users like myself from running into trouble when its already too late Closes 