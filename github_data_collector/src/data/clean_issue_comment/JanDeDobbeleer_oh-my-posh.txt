If I change the current working directory to a UNC location say cd pnjnaspublic I get the following prompt whereas I expect the MicrosoftPowerShellCore FileSystem part to be omitted IOW if the current location is set to a filesystem location I expect the prompt to include pwdProviderPath not pwdPath Adding GetKubernetesInfo to support showing the current kubernetes context name for a prompt I added unit tests but I have not adjusted any of the existing themes to use this Thanks for fixing the missing profile problem I can now successfully import ohmyposh on the remote machine and set themes which are properly reflected in the local terminal However there are problems with the cursor location after executing commands remotely It always returns to the first line of the terminal while the output extends many lines down Executing a new command overwrites this output The remote machine is a Windows R server with PS The local machine is a latest Windows This happens both in the standard Powershell console and the Windows Terminal preview The remote machines ohmyposh is version Ive extended the Paradox theme to add some info Depending on the current path this may cause the prompt to wrap to the next line which is fine However I have noticed that Once it wraps to a second line AND The terminal has to scroll because the current line has hit the bottom of the screen then there is a stripe that fills what should be empty space Heres PowerShell Core in the Windows Terminal app PowerShell Core in Windows Terminal Heres standard PowerShell in its native console Standard PowerShell Its possible to reproduce this with the default Paradox theme powershell SetTheme Paradox SetLocation C NewItem ItemType Directory Name repro SetLocation C repro name reallylongdir NewItem ItemType Directory Name name OutNull SetLocation name That will put you in a really deep directory that will cause the line to wrap Now hit Enter until the prompt is at the bottom of the console window Youll end up getting something like this Line wrapping of really long dirname It doesnt appear to matter if the time shows up or not so I dont think it has to do with the SetCursorForRightBlockWrite method I also noticed that the fill color in that stripe is whatever the color is at the end of the previous line Lets say the prompt is two lines long wrapped The first line ends with cyan then the second line has another segment thats green The fill color will be cyan youll see this in my earlier screen shots That leads me to believe that when the line wraps off the screen it does something like Clear the next line using the current background and foreground color Reset the cursor to the beginning of the line Allow the prompt to continue Just guessing but thats how it seems Unclear if thats something which can be handled here or if theres something we need to file against PowerShell itself Maybe something like a ClearToEndOfLine method that could be run after the final item is written out I dunno The regular text when running powershell through Cmder seems to be stuck on blue For the sake of comparison heres running in regular powershell ligatures and things dont work not sure how to fix that It would be super nice to be able to install ohmyposh using Chocolatey like it is possible for poshgit Then I could add it to my Cacao machine install script Hi I am just a modest beginner in posh but I am trying to reuse some snippets I found to display a for each location in the pushdpopd stack Snatched this somewhere Stack GetLocation Stackcount But I cant get to work in a theme As a test I tried to modify the line that displays the current directory in the Agnoster theme prompt WritePrompt Object GetShortPath dir pwdGetLocation StackCount ForegroundColor slColorsPromptForegroundColor BackgroundColor slColorsPromptBackgroundColor the count in this test is always The directory appears like in the prompt usr appears as usr usrlocal appears as local Any path not prefixed by HOME appears broken Also should be used instead of Right now you are using globalerrorCount to verify if there was an error and populate the value for lastCommandFailed but that only checks for errors on powershell things it does not check for errors on exit codes I suggest you use instead which checks for both