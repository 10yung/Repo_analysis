Deletes the whole adapter convention and allows Ansible to connect directly to the remote host This is enabled by the recent changes sending generatedData containing all the communicator connection info This approach will probably break Ansible Docker well need to figure out how to enable docker builds in the future I know Ansible has custom modules for communicating with Docker maybe we need those Well need to do a lot of testing and a lot of work with community users of this provisioner to make sure everything works before we release it or wait until v Closes May Close May Close May Close May Close Our packer builds use a nondefault VPC and SubnetFilter to select an appropriate subnet This worked in x Commits and updated prevalidation to require a SubnetId when a nondefault VPC is used This unintentionally I believe broke our use case In this PR Ive updated the validation code the builders use of it and the relevant test Ive also tested against our builder and it works This PR adds Device MountPath and SourceAMIName to the amazonchroot builders generated data In order to avoid overriding the generateddata I thought about creating a new Struct responsible for keeping this data and updating the statebag details summaryTemplate used for testingsummary variables region useast builders type amazonchroot region user region sourceamifilter filters virtualizationtype hvm name amznamihvm rootdevicetype ebs owners mostrecent true enasupport true aminame amazonchroottesttimestamp premountcommands echo Testing provisioners type shell inline echo Test tmptesttxt type shelllocal environmentvars SOURCEAMINAME build SourceAMIName DEVICEPATH build Device MOUNTPATH build MountPath inline echo SOURCEAMINAME echo DEVICEPATH echo MOUNTPATH postprocessors type manifest output manifestjson strippath true customdata sourceaminame build SourceAMIName devicepath build Device mountpath build MountPath details details summaryOutput provisionersummary amazonchroot Running local shell script tmppackershell packerprovisionershelllocal plugin INFO shelllocal starting local command binsh c DEVICEPATHdevxvdf MOUNTPATHmntpackeramazonchrootvolumesxvdf PACKERBUILDERTYPEamazonchroot PACKERBUILDNAMEamazonchroot SOURCEAMINAMEamznamihvm x gp tmppackershell packerprovisionershelllocal plugin INFO shelllocal communicator Executing local shell command binsh c DEVICEPATHdevxvdf MOUNTPATHmntpackeramazonchrootvolumesxvdf PACKERBUILDERTYPEamazonchroot PACKERBUILDNAMEamazonchroot SOURCEAMINAMEamznamihvm x gp tmppackershell details details summaryOutput postprocessorsummary name amazonchroot buildertype amazonchroot buildtime files null artifactid useast ami cd a a f a packerrunuuid f de cf b a ca customdata devicepath devxvdf mountpath mntpackeramazonchrootvolumesxvdf sourceaminame amznamihvm x gp details Closes Overview of the Issue I have problems running an azurearm packer build with PowerShell provision scripts It works with Packer fails with and the nightly build dev Reproduction Steps Steps to reproduce this issue Run a packer build with azurearm builder the first provision script runs in elevated mode I havent tried to run a normal provision script yet Packer version also tried nightly from GitHub releases Simplified Packer Buildfile details summaryClick to expandsummary json variables dockerpkgversion composepkgversion cygwinpkglist opensshvimgitstatgrabjqmake fipsenabled clientid secret clientsecret secret tenantid secret subscriptionid secret rg name offer sku location West US isolation process packerpkgversion qemuimgpkgversion inspecpkgversion inspecprofile testjenkinswindows vmsize StandardD sv builders type azurearm clientid user clientid clientsecret user clientsecret tenantid user tenantid subscriptionid user subscriptionid managedimagename isotime user name managedimageresourcegroupname user rg managedimagestorageaccounttype StandardLRS ostype Windows imagepublisher MicrosoftWindowsServer imageoffer user offer imagesku user sku imageversion user version communicator winrm winrmusessl true winrminsecure true winrmtimeout m winrmusername packer azuretags role jenkinsagent agenttype user name project TARCICDINFR location user location vmsize user vmsize provisioners elevateduser packer elevatedpassword WinRMPassword type powershell scripts winscriptsverps winscriptsinstallcumulativeupdateps type windowsrestart restarttimeout m type powershell scripts winscriptsverps winscriptsfeaturesps winscriptstcpsettingsps winscriptsdisabledefenderps winscriptsdisablewinupdatesps environmentvars CHECKWINDOWSVERSION DOCKERPKGVERSION user dockerpkgversion ISOLATION user isolation type windowsrestart type powershell scripts winscriptsfipsps winscriptssetupps environmentvars DOCKERPKGVERSION user dockerpkgversion COMPOSEPKGVERSION user composepkgversion CYGWINPKGLIST user cygwinpkglist FIPSENABLED user fipsenabled only amazonebs type powershell scripts winscriptsinstalldockerps winscriptsinstallcomposeps winscriptsjavaps winscriptsgitps winscriptsmakeps winscriptsfipsps winscriptsdisablesshps environmentvars DOCKERPKGVERSION user dockerpkgversion COMPOSEPKGVERSION user composepkgversion FIPSENABLED user fipsenabled only azurearm type inspec profile user inspecprofile extraarguments nodistinctexit inspecenvvars FIPSENABLED user fipsenabled DOCKERPKGVERSION user dockerpkgversion COMPOSEPKGVERSION user composepkgversion PACKERPKGVERSION user packerpkgversion QEMUIMGPKGVERSION user qemuimgpkgversion INSPECPKGVERSION user inspecpkgversion type powershell scripts winscriptssysprepazureps postprocessors type manifest details My first provision script winscriptsverps looks like this details summaryClick to expandsummary powershell ProgressPreference SilentlyContinue ErrorActionPreference Stop fetch the current version number from host currentGetItemProperty HKLM SOFTWARE Microsoft Windows NT CurrentVersion currUBRcurrentUBR prefixcurrentCurrentMajorVersionNumbercurrentCurrentMinorVersionNumbercurrentCurrentBuildNumber WriteOutput The host OS is currentProductName currentInstallationType currentReleaseId build prefixcurrUBR if envCHECKWINDOWSVERSION WriteOutput Checking if host OS is up to date fetch the tags from MCR filter them with host version prefix sort the update revisions and pick the highest jsonInvokeWebRequest UseBasicParsing ConvertFromJson hubUBRjsontags WhereObject FilterScript StartsWithprefix and Match d d d d SystemVersion sort Revision WriteOutput The host OS version is prefixcurrUBR latest Windows Docker base image OS version is prefixhubUBR if currUBR lt hubUBR WriteError Your host has update revision currUBR but should be updated to hubUBR else WriteOutput The host is up to date details Operating system and Environment details packer running from Ubuntu amd Log Fragments and crashlog files azurearm IP Address packerlinuxamd plugin Error asking for input no available tty packerlinuxamd plugin Waiting for WinRM up to timeout m s azurearm Waiting for WinRM to become available packerlinuxamd plugin INFO Attempting WinRM connection packerlinuxamd plugin DEBUG connecting to remote shell using WinRM packerlinuxamd plugin Checking that WinRM is connected with powershellexe EncodedCommand aQBmACAAKABUAGUAcwB AC AUABhAHQAaAAgAHYAYQByAGkAYQBiAGwAZQA AGcAbABvAGIAYQBsADoAUAByAG AZwByAGUAcwBzAFAAcgBlAGYAZQByAGUAbgBjAGUAKQB ACQAUAByAG AZwByAGUAcwBzAFAAcgBlAGYAZQByAGUAbgBjAGUAPQAnAFMAaQBsAGUAbgB AGwAeQBDAG AbgB AGkAbgB AGUAJwB ADsAIABlAGMAaABvACAAIgBXAGkAbgBSAE AIABjAG AbgBuAGUAYwB AGUAZAAuACIA packerlinuxamd plugin INFO starting remote command powershellexe EncodedCommand aQBmACAAKABUAGUAcwB AC AUABhAHQAaAAgAHYAYQByAGkAYQBiAGwAZQA AGcAbABvAGIAYQBsADoAUAByAG AZwByAGUAcwBzAFAAcgBlAGYAZQByAGUAbgBjAGUAKQB ACQAUAByAG AZwByAGUAcwBzAFAAcgBlAGYAZQByAGUAbgBjAGUAPQAnAFMAaQBsAGUAbgB AGwAeQBDAG AbgB AGkAbgB AGUAJwB ADsAIABlAGMAaABvACAAIgBXAGkAbgBSAE AIABjAG AbgBuAGUAYwB AGUAZAAuACIA azurearm CLIXML azurearm WinRM connected packerlinuxamd plugin INFO command powershellexe EncodedCommand aQBmACAAKABUAGUAcwB AC AUABhAHQAaAAgAHYAYQByAGkAYQBiAGwAZQA AGcAbABvAGIAYQBsADoAUAByAG AZwByAGUAcwBzAFAAcgBlAGYAZQByAGUAbgBjAGUAKQB ACQAUAByAG AZwByAGUAcwBzAFAAcgBlAGYAZQByAGUAbgBjAGUAPQAnAFMAaQBsAGUAbgB AGwAeQBDAG AbgB AGkAbgB AGUAJwB ADsAIABlAGMAaABvACAAIgBXAGkAbgBSAE AIABjAG AbgBuAGUAYwB AGUAZAAuACIA exited with code azurearm Objs Version xmlns Sprogress RefId TN RefId TSystemManagementAutomationPSCustomObjectTTSystemObjectTTNMSI NSourceId I PR NRecordAVPreparing modules for first useAVAI AINil PI PIPC PCTCompletedTSR SRSD SDPRMSObjObj Sprogress RefId TNRef RefId MSI NSourceId I PR NRecordAVPreparing modules for first useAVAI AINil PI PIPC PCTCompletedTSR SRSD SDPRMSObjObjs packerlinuxamd plugin Connected to machine azurearm Connected to WinRM packerlinuxamd plugin Error asking for input no available tty packerlinuxamd plugin Running the provision hook INFO telemetry Starting provisioner powershell Error asking for input no available tty azurearm Provisioning with Powershell azurearm Provisioning with powershell script winscriptsverps packerlinuxamd plugin Opening winscriptsverps for reading packerlinuxamd plugin Uploading env vars to cWindowsTemppackerpsenvvars e dcc cea e a b e bd ps packerlinuxamd plugin INFO bytes written for uploadData INFO bytes written for uploadData packerlinuxamd plugin Uploading file to cWindowsTemppackerpsenvvars e dcc cea e a b e bd ps packerlinuxamd plugin CLIXML packerlinuxamd plugin Objs Version xmlns Sprogress RefId TN RefId TSystemManagementAutomationPSCustomObjectTTSystemObjectTTNMSI NSourceId I PR NRecordAVPreparing modules for first useAVAI AINil PI PIPC PCTCompletedTSR SRSD SDPRMSObjObjs CLIXML packerlinuxamd plugin Building elevated command wrapper for powershell executionpolicy bypass if TestPath variableglobalProgressPreferencesetvariable name variableglobalProgressPreference value SilentlyContinue cWindowsTemppackerpsenvvars e dcc cea e a b e bd ps cWindowsTempscript e d b a d f f d d bps exit LastExitCode packerlinuxamd plugin Command powershell executionpolicy bypass if TestPath variableglobalProgressPreferencesetvariable name variableglobalProgressPreference value SilentlyContinue cWindowsTemppackerpsenvvars e dcc cea e a b e bd ps cWindowsTempscript e d b a d f f d d bps exit LastExitCode SYSTEMROOTTemppacker e fb fa d c a out converted to powershell executionpolicy bypass amp if TestPath variableglobalProgressPreferencesetvariable name variableglobalProgressPreference value SilentlyContinue cWindowsTemppackerpsenvvars e dcc cea e a b e bd ps amp cWindowsTempscript e d b a d f f d d bps exit LastExitCode gt SYSTEMROOTTemppacker e fb fa d c a out gt amp for use in XML string packerlinuxamd plugin Uploading elevated shell wrapper for command powershell executionpolicy bypass if TestPath variableglobalProgressPreferencesetvariable name variableglobalProgressPreference value SilentlyContinue cWindowsTemppackerpsenvvars e dcc cea e a b e bd ps cWindowsTempscript e d b a d f f d d bps exit LastExitCode SYSTEMROOTTemppacker e fb fa d c a out to CWindowsTemppackerelevatedshell e d d c d a e e dps packerlinuxamd plugin INFO bytes written for uploadData INFO bytes written for uploadData packerlinuxamd plugin Objs Version xmlns Sprogress RefId TN RefId TSystemManagementAutomationPSCustomObjectTTSystemObjectTTNMSI NSourceId I PR NRecordAVPreparing modules for first useAVAI AINil PI PIPC PCTCompletedTSR SRSD SDPRMSObjObjsUploading file to CWindowsTemppackerelevatedshell e d d c d a e e dps packerlinuxamd plugin CLIXML packerlinuxamd plugin Objs Version xmlns Sprogress RefId TN RefId TSystemManagementAutomationPSCustomObjectTTSystemObjectTTNMSI NSourceId I PR NRecordAVPreparing modules for first useAVAI AINil PI PIPC PCTCompletedTSR SRSD SDPRMSObjObjs CLIXML packerlinuxamd plugin INFO bytes written for uploadData INFO bytes written for uploadData packerlinuxamd plugin Objs Version xmlns Sprogress RefId TN RefId TSystemManagementAutomationPSCustomObjectTTSystemObjectTTNMSI NSourceId I PR NRecordAVPreparing modules for first useAVAI AINil PI PIPC PCTCompletedTSR SRSD SDPRMSObjObjsUploading file to cWindowsTempscript e d b a d f f d d bps packerlinuxamd plugin CLIXML packerlinuxamd plugin Objs Version xmlns Sprogress RefId TN RefId TSystemManagementAutomationPSCustomObjectTTSystemObjectTTNMSI NSourceId I PR NRecordAVPreparing modules for first useAVAI AINil PI PIPC PCTCompletedTSR SRSD SDPRMSObjObjs CLIXML packerlinuxamd plugin Objs Version xmlns Sprogress RefId TN RefId TSystemManagementAutomationPSCustomObjectTTSystemObjectTTNMSI NSourceId I PR NRecordAVPreparing modules for first useAVAI AINil PI PIPC PCTCompletedTSR SRSD SDPRMSObjObjs INFO starting remote command powershell executionpolicy bypass file CWindowsTemppackerelevatedshell e d d c d a e e dps azurearm Task azurearm At C Windows Temp packerelevatedshell e d d c d a e e dps char azurearm fRegisterTaskDefinitionname t packer password logont azurearm azurearm CategoryInfo OperationStopped COMException azurearm FullyQualifiedErrorId SystemRuntimeInteropServicesCOMException azurearm azurearm The system cannot find the file specified Exception from HRESULT x azurearm At C Windows Temp packerelevatedshell e d d c d a e e dps char azurearm t fGetTask name azurearm azurearm CategoryInfo OperationStopped FileNotFoundException azurearm FullyQualifiedErrorId SystemIOFileNotFoundException azurearm azurearm Method invocation failed because SystemComObject does not contain a method named Run azurearm At C Windows Temp packerelevatedshell e d d c d a e e dps char azurearm tRunnull OutNull azurearm azurearm CategoryInfo InvalidOperation RunString RuntimeException azurearm FullyQualifiedErrorId MethodNotFound azurearm Feature Description Create the Ability to Set Directpath IO on VMXNET interfaces as part of packer builds The ability to configure the Directpath IO is unavailable on VMWare Virtual Machine VMXNET interfaces as part of the deployment Use Cases When a virtual machine with VMXNET is created using webclient DirectPath IO option is enabled automatically The recommendation from VMWare is to Set this option on a case by case basis and as a standard should be disabled Additional Information more information about this setting can be found under Now that we supply the host IP through the generatedData field I think we can remove the ssh proxy this will probably remove a lot of issues with the Ansible provisioner Closes This will probably look like a packer init command paired with a builder registry Were going to be looking to Terraform for lessons This issue is being opened in response to the following PRs which attempted to add builders which we are afraid were currently stretched too thin to officially support packerbuildervultr packerbuildernutanix packerbuilderzstack I would like to make sure these builders get included in the future registry Overview of the Issue After running an Ansible playbook that performs updatecryptopolicies set FIPS and reboots an RHEL AWS instance packer cannot reconnect to the instance Reproduction Steps git clone cd d e abbea c d c e e dd Update sshkeypairname and sshprivatekeyfile in awsebsansiblejson for an existing AWS key pair The issue will manifest if packer creates a temporary ssh keypair but if you use an existing pair you can ssh to the directly instance even when packer cannot packer build varfile varsrhel json awsebsansiblejson Observe that packer cannot reconnect to after the systemwide policy is updated and the instance is rebooted see debuglog for complete log amazonebs changed default amazonebs amazonebs TASK Wait for reboot to complete amazonebs ok default localhost amazonebs amazonebs TASK Get uptime packerprovisioneransible plugin SSH proxy accepted connection packerprovisioneransible plugin authentication attempt from to as ec user using none packerprovisioneransible plugin authentication attempt from to as ec user using publickey packerprovisioneransible plugin new env request LANGenUSUTF packerprovisioneransible plugin new exec request binsh c echo ec user sleep packerbuilderamazonebs plugin DEBUG Opening new ssh session packerbuilderamazonebs plugin ERROR ssh session open error EOF attempting reconnect packerbuilderamazonebs plugin DEBUG reconnecting to TCP connection for SSH packerbuilderamazonebs plugin DEBUG handshaking with SSH INFO bytes written for stdout INFO bytes written for stderr INFO bytes written for stdin packerprovisioneransible plugin INFO bytes written for stdout packerprovisioneransible plugin INFO bytes written for stderr amazonebs ssh handshake failed ssh unable to authenticate attempted methods none publickey no supported methods remain packer hangs at this point but I can use ssh to the AWS instance directly ec user using my existing private key Use CtrlC to bring stop packer and clean up the AWS temporary instance Packer version Packer v Simplified Packer Buildfile fileawsebsansiblejson Operating system and Environment details Driving system is CentOS el x Log Fragments and crashlog files debuglog Feature Description Support publishing image to Shared Image Gallery deployed in separate subscription to where the images are being built Use Cases Enterprise setups may have Shared Image Gallery which provides hardened images to multiple subscriptions AZ CLI has the ability to provide subscription as an argument when creating gallery image definition and image version 