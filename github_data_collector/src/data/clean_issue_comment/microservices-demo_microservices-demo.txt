Want to install tc on a few containers but unable to do so Want to use Pumba for chaos testing which requires tc I have deploy the application using docker compose and its successful But I am not able to access the application via browser The kibana and elasticsearch images need a version tag which was missing in the kubernetes manifest files Reproduce the error kubectl create f deploykubernetesmanifestsloggingelasticsearchyml After describing pod output Warning Failed s x over s kubelet Failed to pull image elasticsearch rpc error code Unknown desc Error response from daemon manifest for elasticsearchlatest not found Similar error occurs with kibana image as well microservicesdemodeploykubernetes kubectl apply f completedemoyaml dryrun servicecartsdb created dry run servicecarts created dry run servicecataloguedb created dry run servicecatalogue created dry run servicefrontend created dry run serviceordersdb created dry run serviceorders created dry run servicepayment created dry run servicequeuemaster created dry run servicerabbitmq created dry run serviceshipping created dry run serviceuserdb created dry run serviceuser created dry run unable to recognize completedemoyaml no matches for kind Deployment in version extensionsv beta unable to recognize completedemoyaml no matches for kind Deployment in version extensionsv beta unable to recognize completedemoyaml no matches for kind Deployment in version extensionsv beta unable to recognize completedemoyaml no matches for kind Deployment in version extensionsv beta unable to recognize completedemoyaml no matches for kind Deployment in version extensionsv beta unable to recognize completedemoyaml no matches for kind Deployment in version extensionsv beta unable to recognize completedemoyaml no matches for kind Deployment in version extensionsv beta unable to recognize completedemoyaml no matches for kind Deployment in version extensionsv beta unable to recognize completedemoyaml no matches for kind Deployment in version extensionsv beta unable to recognize completedemoyaml no matches for kind Deployment in version extensionsv beta unable to recognize completedemoyaml no matches for kind Deployment in version extensionsv beta unable to recognize completedemoyaml no matches for kind Deployment in version extensionsv beta unable to recognize completedemoyaml no matches for kind Deployment in version extensionsv beta Update for Kubernetes v because older versions of yaml dont work Read the contribution guidelines Include a reference to a related issue in this repository A description of the changes proposed in the pull request Currently running sockshop on GKE and the deployment of the application went fine However there is an issue with prometheus metrics datasource not reaching grafana The dashboards have loaded fine but the datasource was not loaded in Steps to reproduce git clone cd microservicesdemodeploykubernetes kubectl create namespace sockshop kubectl apply f completedemoyaml kubectl get pods n sockshop kubectl get servicefrontend n sockshop kubectl get ingresses n sockshop oops no ingress using a simple one below works the one in the chart templates folder does not get s on css and js requests so the page doesnt load properly apiVersion extensionsv beta kind Ingress metadata name socksingress spec backend serviceName frontend servicePort it would be great to add this or something better to the completedemoyaml but the above works on GKE The APM codelab uses this repo for its source code The completedemoyaml lists images in a private container registry gcriostackdrivermicroservicesdemo These images dont work when the app is deployed Suggest changing the registries to weaveworksdemos or change the repo listed in the codelab Hi thank you for awesome applications Read the contribution guidelines Done A description of the changes proposed in the pull request Because Elasticsearch Kibana does not have latest tag dockercompose up does not work sh dockercompose f deploydockercomposedockercomposeyml f deploydockercomposedockercomposeloggingyml up d snip Pulling elasticsearch elasticsearch ERROR manifest for elasticsearchlatest not found snip Pulling kibana kibana ERROR manifest for kibanalatest not found So I fixed image tag elasticsearch kibana works good Future I thinks that Elasticsearch or Kibana or are better We need update microservicesdemologserver docker image because it is depends on fluentpluginelasticsearch version at microservicesdemologserver Could you fix it From Elasticserach HTTP header ContentType applicationjson is necessary fluentwarn nextretry errorclassElasticsearchTransportTransportErrorsNotAcceptableerror error ContentType header is not supported status pluginidobject ac b eb f messagetemporarily failed to flush the buffer nextretry errorclass ElasticsearchTransportTransportErrorsNotAcceptable error error ContentType header is not supported status pluginid object ac b eb f So I choice Elasticsearch Kibana this time Thanks The Issue The whole stack works properly when the user microservice runs with the provided MongoDB container However if the container is given a MONGOHOST outside of the cluster I can no longer register new users or log in I noticed the user microservice is hardcoded to run on port The k s manifest for the user service has the following settings usersvcyaml port targetPort The deployment has the containers exposing containerPort Expected Behaviour After updating the MONGOHOST MONGOPASS and MONGOUSER environment variables the microservicesdemo application should be able to register new users and log in with existing users Actual Behaviour I receive a Internal Server Error when trying to register a new user Steps to reproduce Update the MONGOHOST environment variable to point to a database outside the cluster The demo I was working on required CosmosDB so I had to update the source code to support TLS This is by no means required Install the rest of the templates into the cluster using either Helm or kubectl apply except the userdb Try to register a new user You should receive a error Workaround Update the usersvcyaml and userdepyaml to use the correct ports usersvcyaml port targetPort userdepyaml ports containerPort Once this was changed I was able to register users and log in with existing accounts using CosmosDB as the database instead of the userdb container