I would like to be able to set what topic the health check is producing messages to I use Sentry and every time I have an UnHealthy in my project it generates an entry which causes an overload in it is there any way to avoid it Greetings I have noticed that the methods AddKey AddCertificate within the AzureKeyVaultOptions class are not available in the NugetPackage release is it possible to get a release for this Thanks Im working with one of your samples and I cant make the timeline to work The ui loads fine but the timeline appears empty Ive tried working this out with the HealthCheckDatabaseConnectionString but that doesnt appear to be the problem Builds on top of to fully resolve However this PR introduces potentially breaking changes while can safely be merged asis SkyAPMdotnet is the NETNET Core instrument agent for Apache SkyWalking Also use DiagnosticSource Listener to implement This is a little step in the right direction in terms of It is not a breaking change and it still doesnt fully resolve the issue but it reduces the BuildServiceProvider calls by one at least I will make an additional PR later for the rest When using AddDiskStorageHealthCheck setup argument allow us to add several drive limit checks through AddDrive csharp healthCheckBuilderAddDiskStorageHealthCheckdiskOptions diskOptionsAddDrivedriveName c diskOptionsAddDrivedriveName f but DiskStorageHealthCheckCheckHealthAsync implementation stops from the first noncompliance source code In the case where multiple disks have exceeded the threshold only first one is reported to ResponseWriter provided to UseHealthChecks It would be desirable to be able to report each nonconformance for exemple using multiple lines in the description rather than let an administrator discover them in several tries This behavior would also be aligned with the general behavior where each registered IHealthCheck are checked regardless of the result of the previous one This could be made optin with a bool CheckAllDrives in DiskStorageOptions I know I can use csharp healthCheckBuilderAddDiskStorageHealthCheck setup diskOptions diskOptionsAddDrivedriveName c name diskstorage c healthCheckBuilderAddDiskStorageHealthCheck setup diskOptions diskOptionsAddDrivedriveName f name diskstorage f but the hierarchical approach seems to be more elegant than flat one Im using net core The health endpoint works well and returns json as expected but ui gives an empty page and in the console I see the error File healthchecksbundlejs Line Column Uncaught SyntaxError Unexpected token in healthchecksbundlejs I work in a closed environment IE No internet connection Startupcs public class Startup public StartupIConfiguration configuration Configuration configuration public IConfiguration Configuration get This method gets called by the runtime Use this method to add services to the container public void ConfigureServicesIServiceCollection services servicesAddDbContextModeloptions optionsUseSqlServerConfigurationGetConnectionStringDefaultConnection Health checks services services AddHealthChecks AddMemoryHealthCheckmemory AddSqlServerConfiguration ConnectionStringsDefaultConnection servicesAddHealthChecksUI servicesAddMvc This method gets called by the runtime Use this method to configure the HTTP request pipeline public void ConfigureIApplicationBuilder app IHostingEnvironment env if envIsDevelopment appUseBrowserLink appUseDeveloperExceptionPage else appUseExceptionHandlerHomeError appUseHealthCheckshealth new HealthCheckOptions Predicate true ResponseWriter UIResponseWriterWriteHealthCheckUIResponse appUseHealthChecksUIsetup setupUIPath healthui Also tried appUseHealthChecksUI appUseMvcroutes routesMapRoute name default template controllerHomeactionIndexid routesMapRoute name defaultApi template apicontrollerMyControlleractionGetvalue appsettingsjson HealthChecksUI HealthChecks Name HealthChecksService Uri Webhooks EvaluationTimeInSeconds MinimumSecondsBetweenFailureNotifications I also tried using HealthChecksUI since few articles online used this instead of HealthChecksUI Any idea Im desperate 