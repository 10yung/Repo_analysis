ref Ref which is closed previously we only closed connections when there are no errors when we hit errors while executing we saw misleading zlib errors where instead it was just the ssh command failing so lets always close connections to avoid those errors Fix for mattbrictson host SSHKitHostnewhostname localhost SSHKitCoordinatornew host each capture sh c touch echo firstvalue this should execute sh c touch echo and not sh c touch and echo same issue for directoriesusersgroups also making user and group use the same form of escaping Im pretty sure nohup should also do sh c to avoid funky issues fyi eatwithforks adammw jonmoter this is why we saw crazy issues D capdevs please let me know if this looks correct or if I understood something wrong According to the doc one can pass a Hash or a Proc as a interactionhandler option but only Hashes were wrapped into a MappingInteractionHandler Fix this and add a test Hi Im currently unable to use the ProxyJump config with sshkit due to this issue sshkit will override NetSSHdefaultfiles here By the way is there any reasons to do that instead of something simpler like ruby NetSSHConfigdefaultfiles FilejoinDirpwd sshconfig Either way netssh doesnt work the same way when the config option is used in NetSSHstart and when passed to defaultfiles as you could see in the issue I mentioned above Currently Im in a rush to try to meet some tight deadlines for a new project I started and it will last a few months at least If I were to find some time to contribute it would be more likely to provide some patch to sshkit to use the config option instead of overriding defaultfiles as it seems a simplerquicker change for someone new to both projects in my opinion Before I do so Id like to check on your opinion Is there anyone here that is comfortable with netssh source and would be willing to contribute to it by providing the F option to the ssh client for each of those defaultfiles Otherwise would you be willing to accept a patch that would change the current approach in sshkit so that this default configuration would be passed to the config option instead of overriding defaultfiles Thanks for your time to read all of this Im having a lot of trouble using the as syntax I realize this is more of a support request than a bug report but the results of this might go into the documentation What doesnt work task clearcache do on roles app do as web do within sharedpath do execute rm rf srccachetwig end end end end However this works task clearcache do on roles app do within sharedpath do execute sudo u web rm rf srccachetwig end end end My sudoers file looks like this CmndAlias CLEARCACHE usrbinwhoami binrm rf srccachetwig DefaultsCLEARCACHE requiretty david ALLweb NOPASSWD CLEARCACHE Ive been trying to use the debug log level in both capistrano and sshkit to figure out what the difference is between these two more specifically how the as syntax executes the command but all I ever got was Invoke clearcache firsttime Execute clearcache clearcache rm rf srccachetwig sudo no tty present and no askpass program specified cap aborted SSHKitRunnerExecuteError Exception while executing as davidremotehost rm exit status rm stdout Nothing written rm stderr sudo no tty present and no askpass program specified homekwisatz projectsaprojectvendorbundleruby gemssshkit libsshkitrunnersparallelrb in rescue in block levels in execute homekwisatz projectsaprojectvendorbundleruby gemssshkit libsshkitrunnersparallelrb in block levels in execute SSHKitCommandFailed rm exit status rm stdout Nothing written rm stderr sudo no tty present and no askpass program specified homekwisatz projectsaprojectvendorbundleruby gemssshkit libsshkitcommandrb in exitstatus homekwisatz projectsaprojectvendorbundleruby gemssshkit libsshkitbackendsnetsshrb in executecommand homekwisatz projectsaprojectvendorbundleruby gemssshkit libsshkitbackendsabstractrb in block in createcommandandexecute homekwisatz projectsaprojectvendorbundleruby gemssshkit libsshkitbackendsabstractrb in tap homekwisatz projectsaprojectvendorbundleruby gemssshkit libsshkitbackendsabstractrb in createcommandandexecute homekwisatz projectsaprojectvendorbundleruby gemssshkit libsshkitbackendsabstractrb in execute homekwisatz projectsaprojectCapfile in block levels in top required homekwisatz projectsaprojectvendorbundleruby gemssshkit libsshkitbackendsabstractrb in within homekwisatz projectsaprojectCapfile in block levels in top required homekwisatz projectsaprojectvendorbundleruby gemssshkit libsshkitbackendsabstractrb in as homekwisatz projectsaprojectCapfile in block levels in top required homekwisatz projectsaprojectvendorbundleruby gemssshkit libsshkitbackendsabstractrb in instanceexec homekwisatz projectsaprojectvendorbundleruby gemssshkit libsshkitbackendsabstractrb in run homekwisatz projectsaprojectvendorbundleruby gemssshkit libsshkitrunnersparallelrb in block levels in execute Tasks TOP clearcache How can I see what exact command sshkit is running when using as Id presume that it doesnt correspond to what I allowed in the sudoers file There have been multiple requests to set an upper limit on the number of git operations that are executed in parallel in the default Capistrano git strategy Similarly users are also asking for a limit on the number of parallel bundle install executions in capistranobundler What these tasks have in common is that they all use the default parallel runner provided by SSHKit When using Capistrano to deploy to a large number of servers firing off these operations to all servers in parallel can overload shared resources like a git server or private gem repository Rather than implement rate limiting for each SCM capistranobundler etc I feel like a more general solution should be provided by SSHKit itself My proposal would be to change the implementation of the parallel runner to essentially be a subclass of the groups runner except with defaults of wait and limit INFINITY Then if a user wants to limit the amount of parallelization they could simply do this ruby Limit the default parallel runner to threads SSHKitconfigdefaultrunnerconfig limit If sharing implementation and configuration keys between parallel and groups is too confusing then perhaps the parallel runner could use a different configuration key but to the same effect ruby Limit the default parallel runner to threads SSHKitconfigdefaultrunnerconfig threads Thoughts See also Using sshkit via Capistrano Id like to do an execute but get streaming output to the console as it appears from the execute For me execute seems to have no output capture can capture output that you can write out but only once its all done not streaming Looking at the sshkit README I think I could write my own interactionhandler to do this not because I actually want any interaction just to capture and write to console the output as it happens But it seems like theres probably a builtin way to do this Im not finding transfersummarizer produces a warning for files of size zero Error calculating percentage is foo empty My feeling is that this warning is excessive as it implies that a file of size is some kind of problem Sshkits output would be a bit less noisy if it just specialcased the percentage for files of size zero as 