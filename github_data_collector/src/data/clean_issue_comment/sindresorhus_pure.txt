Per this adds an option to omit the new line before the prompt TIP Hit Preview for a more readable version of this template General information System report output of promptpuresystemreport Zsh zsh x pclinuxgnu Operating system Linux SMP PREEMPT Tue Dec Terminal program Kitty Git git version Pure state username prompt version Virtualenv export VIRTUALENVDISABLEPROMPT Prompt typeset g PROMPTFpromptpurecolors path f VFpromptpurecolors virtualenv vf Fpromptpurecolors promptsuccess Fpromptpurecolors prompterror promptpurestate prompt f Detected frameworks None TIP Run promptpuresystemreport pbcopy on macOS to copy straight to clipboard then paste here Other information If you cant load Pure to create a system report please report the following information Pure version xx ZSH version xx Terminal program version eg Hyper iTerm xterm other Operating system eg macOS Mojave ZSH framework eg ohmyzsh prezto antigen antibody zplug other I have Tested with another terminal program and can reproduce the issue eg iTerm etc x Followed the integration instructions for my framework Problem description My git prompt stopped appearing after updating my system I dont know whats fully wrong but I hope someone might have this issue or may know my problem Everything was working before my prompt included my branch and also if there are changes to commit the However now neither of those appear Reproduction steps Git prompt never appears anymore Tried it on almost every single git project that I have by cd My zshrc My zshrc is minimal It only contains the aliases with COMPLETEALIASES and exporting env variables I source my antibody plugins and it only contains zshautosuggestions pure and zshcompletions Everything was working before I think some dependency update broke pure Please provide a minimal zshrc that reproduces the issue Try to remove everything that that does not affect the issue the fewer lines the better Example shell autoload U promptinit promptinit prompt pure The preprompt is written twice which is both inefficient and causes some problems with shellintegration Background Im working on an extended protocol for enhanced shell integration see article with screenshots I wrote a zsh script to implement the protocol It essentially adds an invisible prefix and postfix to PROMPT specifically PS e Pki aPS e B a e a This worked fine until I ran into multiline prompts specifically Purestyle preprompt lines After some thought and fixes it now works fine with spaceshipprompt and with the fish port of pure However zsh pure doesnt work properly multilineprompts The default colors are light bluegreen for prompts light yellow for input area and light beige for input lines as a whole The preprompt lines DomTerm master should be bluegreen and that is correct for fishpure and spaceship However the original pure the preprompt lines appear in the light yellow of input text The reason for that is that pure first displays the preprompt correctly using the escape sequences above and then it repaints the preprompt without the escape sequences so they appears to be echo of user input This causes some problems because the terminal is confused as to what is prompt and what is input The visual appearance is also not what it should be I dont know zsh much or use it on a regular basis so I havent tried to figure out why the pure prints the preprompt a second time this time without the escape sequences As discussed in and clarifies the manual installation instructions Only fetch information for the current branch to minimize the amount of work Pure well git needs to do This commit also starts redirecting git stderr to devnull because in some cases git can start spewing errors like crazy see We also never use the stderr so theres no point in keeping it around Fixes Future work could include figuring out if we can somehow avoid one or both of the extra subshells although theyre run in the async job so it will have minor impact Hey thanks for this great theme Im right now testing colors and fonts to customize it to my needs It would be super handy to have a command that outputs all the different prompt styles clean git dirty git up arrow down arrow time etc This way it would be much easier to test out color themes and fonts for your terminal Fixes There is an empty line between subsequent prompts This can be seen in the image that it is in the README For example there is a line between Exit and Is it possible to remove this line I find it wastes to much space TIP Hit Preview for a more readable version of this template General information Pure version master ZSH version Terminal program version iTerm Operating system macOS Sierra ZSH framework None I have x Tested with another terminal program and can reproduce the issue eg iTerm etc x Followed the Integration instructions for my framework Problem description The instructions seem to be wrong Reproduction steps Try following the instructions for manual installation then open a new terminal You dont see the pure prompt My zshrc shell autoload U promptinit promptinit prompt pure Notes As far as I can tell the third and final command in the manual installation steps fpathHOMEzshpure only updates the fpath variable locally in the current terminal session So I tried inserting this line in my zshrc instead before autoload etc and this seems to make it work Not sure if this is the correct approach but if so the instructions should be updated to explain that you need to put the fpath line in your zshrc file Summary Moves the dirty indicator to be always adjacent to the branch Separate the git action with a space instead of a pipe Bestow a distinct default color to the git action yellow This is following up to other recent changes and which are great I feel that the rearranging would be a less welcome change without the default color also being changed Before After Of course this is all subjective but here is my rationale The dirty indicator should be adjacent to the branch since they are very closely related in my mind Together they tell me the status of the working tree The git action seems like it belongs at the end since it is a special state relatively uncommon important to notice A space and a distinct color is cleaner and more readable than a pipe I choose yellow instead of red as in for the git action since red looks like an error If these changes are agreed upon I can update the readme too