An issue was noted here with the doc for the Cloudstate project The markdown for emojisicons which appear to be supported dont appear in the output as images but as the original markdown In this page in the Paradox doc we say we support GitHubflavored markdown eg this style which in turn supports Emojis However any use of etc appear as the source markdown in the output I was able to verify this locally by building the Cloudstate doc locally but have not tried every variation We are using paradox version and while running paradoxValidateLinks we get a whole bunch of redirect errors mostly saying that Received a Moved Permanently on external link location redirected to is at somepagemd and we have set githubbaseurl to By looking at the code of validateExternalLink method private def validateExternalLinkcapturedLink CapturedLink errorContext ErrorContext logger ParadoxLogger loggerinfosValidating external link capturedLinklink def reportError reportErrorOnSourceserrorContext capturedLinkallSources val url capturedLinklinktoString try val response Jsoupconnecturl userAgentParadox Link Validator followRedirectsfalse ignoreHttpErrorstrue ignoreContentTypetrue execute jsoup doesnt offer any simple way to clean up the only way to close is to get the body stream and close it but if youve already read the response body that will throw an exception and theres no way to check if youve already tried to read the response body so we cant do that in a finally block we have to do it explicitly every time we dont want to consume the stream def close responsebodyStreamclose if responsestatusCode close reportErrorsReceived a responsestatusCode responsestatusMessage on external link location redirected to is responseheaderLocation else if responsestatusCode close reportErrorsError validating external link status was responsestatusCode responsestatusMessage else if capturedLinkhasFragments validateFragmentsurl responseparse capturedLinkfragments errorContext else close catch case NonFatale reportErrorsException occurred when validating external link e loggerdebuge Here followRedirects is hardcoded false in validateExternalLink method Hence can we take a customised boolean setting from users like followRedirects to let them choose whether paradoxValidateLinks errors out on or not We can also think to take custom error code list to fail only on limited errors mentioned white list of error codes or black list of error codes or both available as settings and if both are provided then default to white list Updates comgeirssonsbtcirelease from to Release NotesChangelog Ill automatically update this PR to resolve conflicts as long as you dont change it yourself If youd like to skip this version you can just close this PR If you have any feedback just mention me in the comments below Have a fantastic day writing Scala details summaryIgnore future updatessummary Add this to your scalastewardconf file to ignore future updates of this dependency updatesignore groupId comgeirsson artifactId sbtcirelease details labels sbtpluginupdate semverminor error javanetURISyntaxException Illegal character in path at index homeaengelendevakkahttp docsdocssrcmainparadox error at javanetURIParserfailURIjava error at javanetURIParsercheckCharsURIjava error at javanetURIParserparseHierarchicalURIjava error at javanetURIParserparseURIjava error at javanetURIinitURIjava error at comlightbendparadoxmarkdownPathrelativeLocalPathPagescala error at comlightbendparadoxParadoxProcessormapping ParadoxProcessorscala error at comlightbendparadoxParadoxProcessoranonfunrootPageMappings ParadoxProcessorscala File paradoxindexamd toc depth index atopic commonatopicmd File paradoxtypedindexamd toc depth index atopic commonatopicmd If you only have the entry in file it is in the index If you have the entry in both the root and the subdir indexes the subdir index entry gets silently removed It is removed from the subdir index even if you name the labels differently Fixes A little something Ive been working on in my spare time Ive wanted to do this for ages since before Paradox existed I wanted to do it for playdoc So theres actually quite a few features in this First is single page support this allows generation of a single page site using paradoxSingle A few overidden link renderers and directives have been made to rename all anchorsref links to pathtopagehtmlanchor Header rendering is overridden to offset header depth by the pages depth in the forest and also to wrap the header content in a span to allow inserting a counter via css otherwise it messes with the anchor toc directive is disabled doesnt make sense to have a TOC in the middle of a single page document Images are resolved so they can be included in the single page A new template singlest is used to render the page its passed the first page as page and the rest of the pages as pages toc renderer for nav is overridden to support correct link generation singlest links to both pagecss and singlecss so if pagecss has been overridden singlest will just get that singlecss adds styling counters to number headings up to levels deep and adds the necessary numbering to the nav too The next feature is a print layout support which can be compiled by running paradoxPdfSite Introduced a printst and printcss Basically foundations grid layout messed up wkhtmltopdfs rendering so the print template gets rid of all that and while its at it it drops all navs headers footers etc They arent needed Theres also a printcoverst this is for rendering the cover page Finally the PDF support which can be run by running paradoxPdf Runs a wkhtmltopdf docker image that I built Using a docker image has a few advantages it means it works on all platforms that have docker but it also avoids problems where wkhtmltopdf running on different platforms can produce different results Biggest disadvantage the docker image is GB Generates a table of contents Theres a printtocxslt xslt that converts the generated overview xml file from wkhtmltopdf to a table of contents this includes the pagecss singlecss and printcss stylesheets so the TOC is styled by those and by default it will number all the headings in the same way that they are numbered in the document The output of printcoverst is used as the cover page Everything seems to work page numbers footers it renders nicely prettify works The regular paradox config for all these commands can be customised so for example if you want to pass custom properties just for the PDF use paradoxProperties in Compile paradoxPdf it defaults to the normal one so you can append to it too to add or override properties When developing custom theme on Windows minimal webjar assets are not included in theme resources referencedWebjarAssets returns all referenced assets info Setlibfoundationdistcssfoundationmincss libjqueryjqueryminjs libfoundationdistjsfoundationminjs libfoundationdistcssfoundationprototypemincs s libfoundationdistcssfoundationfloatmincss Accoring to show webModules mappings all referenced resources are on classpath info C Git ncziparadox theme target web webmodules main webjars lib foundation dist css foundationfloatmincsslib foundation dist css foundationfloatmincss info C Git ncziparadox theme target web webmodules main webjars lib foundation dist css foundationprototypemincsslib foundation dist css foundationprototype mincss info C Git ncziparadox theme target web webmodules main webjars lib foundation dist css foundationmincsslib foundation dist css foundationmincss info C Git ncziparadox theme target web webmodules main webjars lib foundation dist js foundationminjslib foundation dist js foundationminjs info C Git ncziparadox theme target web webmodules main webjars lib jquery jqueryminjslib jquery jqueryminjs But when compared in ParadoxThemePlugin in WebKeysexportedMappings with includepath there is no match because referencedWebjarAssets are using URL slash but webModules mappings are using Windows file separator Our current workaround is to override referencedWebjarAssets and normalize it to file separator slashes with help of SbtWebpath sbt Assets referencedWebjarAssets mapSbtWebpath It would make sense to produce a eg CSV file of the link validation reporting so it can be easier consumed for fixing links Especially when URLs validate with HTTP Too many requests those could be verified manually at a later point Markdown links with anchors to the current page do not validate correctly It works for ref links with just the anchor name Could not find path jms in site at Usersennodevalpakkadocssrcmainparadoxjmsconsumermd selector JMS selector expression see below usingjmsselectors Empty Paradox You may have some html files that you want included in tocs and navigation that are not generated from markdown for example API docs in my case I have multiple embedded api docs for different languages that this project supports and I want them to be part of the overall navigation It would be ideal if these could be included in the navigation eg index Foo foomd Bar barmd API docs apiindexhtml 