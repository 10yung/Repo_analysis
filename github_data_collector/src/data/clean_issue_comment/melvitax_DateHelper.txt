For iso formats the Localecurrent dont works as expected if the user set the device for a AMPM based hour this will return a instead a Apple assumes thats its the correct behaviour for NSDateFormat see this I have implemented the Apple recommendation using the ISO DateFormatter class and setting the locale to enUSPOSIX as fallback for previous system versions Also rewrite toStringWithRelativeTimestrings to use toRelativeTime In reference to Currently toStringWithRelativeTime uses RelativeTimeStringType to output Strings However there is no way to determine which RelativeTimeStringType a Date falls into without looking at the output string of toStringWithRelativeTime It would be nice to be able to get the RelativeTimeStringType of a Date directly with something like swift DatetoRelativeTime nowPast or swift DateisnowPast true This could allow for additional logic switching off of the RelativeTimeStringType of a Date rather than just converting to a String Looking at dateHelpersiwft lines case startOfWeek return calendardatefrom calendardateComponents yearForWeekOfYear weekOfYear from self case endOfWeek let offset componentweekday note case endOfWeek does not include the value of calendar Consider replacing line with return calendardatefrom calendardateComponents yearForWeekOfYear weekOfYear from selfadjustday offset right now we can get a date object for the following options public enum DateForType case startOfDay endOfDay startOfWeek endOfWeek startOfMonth endOfMonth tomorrow yesterday nearestMinuteminuteInt nearestHourhourInt Can we have additional options like startOfYear and endOfYear Usage example let date Date let df DateFormatter dfdateFormat yyyyMMdd let fromDate String dfstringfrom datedateForstartOfYear let toDate String dfstringfrom datedateForendOfYear As the title i can not update to new version by using Pod update Can you check it Thanks Can I get an example of using the custom tuple to create a date case customString a custom date format string Hi I have saved a date yesterday and it reads Though today I printed todays date which should be reads This is fixed when I print it to a string but it is not correct when working with the raw Date Im trying to compare the date I saved yesterday to today and it returns it is the same day Thanks in advance for your help let d DatefromString format isoDate timeZone utc dtoStringformat isoDateTimeSec Output T This is not a valid ISO date This gives me a valid ISO date let d DatefromString format isoDate timeZone utc let f ISO DateFormatter f stringfrom d Output T Z Even w format custom it returns nil afdateerror 