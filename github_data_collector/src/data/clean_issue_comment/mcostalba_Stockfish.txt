The purpose of the code is to allow developers to easily and flexibly setup SF for a tuning session Mainly you have just to remove const qualifiers from the variables you want to tune and flag them for tuning so if you have int myKing Score myBonus S Value myValue V V V V and at the end of the update you may want to call a post update function void mypostupdate If instead of default Options minmax values you prefer your custom ones returned by stdpairint int myrangeint value Or you jus want to set the range directly you can simply add below TUNESetRangemyrange myKing SetRange myBonus myValue mypostupdate And all the magic happens At startup all the parameters are printed in a format suitable to be copypasted in fishtest In case the post update function is slow and you have many parameters to tune you can add UPDATEONLAST And the values update including post update function call will be done only once after the engine receives the last UCI option The last option is the one defined and created as the last one so this assumes that the GUI sends the options in the same order in which have been defined No functional change