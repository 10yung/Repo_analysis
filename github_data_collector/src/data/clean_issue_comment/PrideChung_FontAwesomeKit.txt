The problem only appears in iOS it works fine in iOS When an image is created via FontAwesomeKit and then assigned to a UIButton it creates another call to viewDidLayoutSubviews which results in an infinite loop and finally an app crash The following example illustrates the problem class ViewController UIViewController IBOutlet weak var button UIButton override func viewDidLayoutSubviews superviewDidLayoutSubviews let fakImage FAKFontAwesomeaddressBookOIconwithSize let image fakImageimagewith CGSizewidth height This works fine buttonsetImageUIImageadd for normal But this fails buttonsetImageimage for normal System images or images loaded from files are working fine Font file doesnt exist I gave example project a try and it works well but theres a problem with the last page which exposes all icons img width altimage src None icons are being displayed from that last tab tried all icon sets Clicking an icons logs this Code Autogeneration FAKFontAwesome Icon FAKFontAwesome IconWithSize Icon addAttributeNSForegroundColorAttributeName value UIColor whiteColor UIImage IconImage Icon imageWithSizeCGSizeMake Id say this code generator is broken it shouldnt be using the computed characters but the characters name instead Problem would be somewhere in FontAwesomeKitExampleFontAwesomeKitExampleIconMapViewControllerm I suppose this used to work in previous versions of xcode Its not a big problem but Im sure this would deserve a fix as it may prevent new people from using this library as it seems broken but everything else works fine I see that a swift rewrite was planed for the code generator in May I please ask what is the incremental file size on the final app when using this library Dependency FontAwesomeKit has no shared framework schemes for any of the platforms iOS please check this FAKIconm registerIconFontWithURL CGFontRef newFont CGFontCreateWithDataProviderfontDataProvider Crashes with little explanation Was working fine in but after upgrading to iOS both older versions and the new crash on this line The code seems to have been unchanged For some reason I was able to follow the instructions in this SO post and call UIFont familyNames before the registerIconFontWithURL method was called and the problem was solved Weird Something small I ran into If you go to the settings for FontAwesomeKit framework and look at the signing settings There is a value set for Team It should be set to None otherwise you get build issues in Xcode When I use this library app crashed cant find font file in library This library try to find font library from man bundle instead of itself library You can test on HelloWorld project by adding this to that project pod FontAwesomeKit Sorry for the absence of this project in the last year Ive been busy doing a lot of other things Anyway Im back with the whole new v road map Compatibility FAK would still be a pure ObjectiveC library so legacy projects dont need to include a large Swift runtime for just one tiny third party library For Swift projects to have better swift interoperability nullability and weak genric will be added to the APIs Most of its APIs should be compatible with v x However therere some design flaws in the v x to fix them minor breaking changes have to be made so v wont be compatible with v TODO Better propery setter and getters Better initializer Immutability and thread safety Nullability and weak generic Use classaddMethod to dynamic create icon generating methods to reduce binary size of this library Rewrite code genrator in Swift Half way done test coverage Snapshot tests Carthage support IBDesignable support QuickLook support Mac support Header doc icon preview url link Migration Guide 