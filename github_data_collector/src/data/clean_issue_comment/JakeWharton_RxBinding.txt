Other view I can use RxViewkeys to control But for recycler view item because of long press keyevent recycler view move fast how to use rxbinding to control it All the imports were changed using this script from dlew but with a different csv that Ill open source This is a breaking change for sure but I didnt change any package or coordinates Should I change those too Related with It would be great to have support to RxJava fixes related issue I am using the latest androidx material dependency beta upon subscribing to the RxTabLayout selectionEvents observable an exception is thrown Exception Caused by javalangClassCastException comjakewhartonrxbinding materialTabLayoutSelectionEventsObservableListener cannot be cast to comgoogleandroidmaterialtabsTabLayoutBaseOnTabSelectedListener Related Issue Discovered another issue that was fixed in July for the selections observable was merged here related to this issue Potential Fix The fix would be to make this listener in TapLayoutSelectionEventsObservable extend from BaseOnTabSelectedListenerTab like the other fix I mentioned earlier in the related issue section Suppose that im writing my own View class that represents editable field and contains EditText tvinput inside class EditTextIconItemView LinearLayout fun setInputTexttext String with tvinput setTexttext setCharsCounttextlength setSelectiontextlength fun setCharsCountcount Int tvcharscounttext countMAXLENGTH Id like to delegate textChanges to that internal EditText tvinput so im writing the following code in my custom EditTextIconItemView fun EditTextIconItemViewtextChanges tvinputtextChangesdoOnNext setCharsCountitlength That works well but now i want my client code to actually skip initial value so in client code i have val et EditTextIconItemView ettextChangesskipInitialValuesubscribe This requires me to explicitly specify the return type in EditTextIconItemView for textChanges fun EditTextIconItemViewtextChanges InitialValueObservableCharSequence tvinputtextChangesdoOnNext setCharsCountitlength But this wont compile since doOnNext returns ObservableT which cannot be cast to InitialValueObservableT But i actually dont want the client code to handle that side effect and set up chars count on that View this is the responsibility of EditTextIconItemView itself But i like to still be able to tell whether to skip initial value or not on clients side How could i make it work Thank You Saw Issue and figured I would throw something in so I documented two of my most common usages Current testbed app works fine on Pixel and emulator both running API but I had a critical bug appear when I tried it on a hardware tablet Tablet was running API so I spun up an equivalent emulator and tracked the bug down to the fact that my UI changes go through a delaySubscription operator keyed to the draws of my custom view Between inserting doOnNext with logger methods into the stream going into the delaySubscription and adding similar doOnSubscribes to the statestream coming in from the back end its clear that the draws stream is simply never emitting on API Everything in the following executes on API but on API only the setup in and Meta subscribed logging extension functions are executed private fun setupInStreams loggersetup in val delayStream qenPagedraws doOnNext iLoggerdrawn qenPage delay TimeUnitMILLISECONDS doOnNext iLoggerdelayed qenPage cdaddAll vmgetTouchesOut observeOnAndroidSchedulersmainThread subscribe qenPagedrawSegmentit vmgetMetaOut doOnSubscribe loggerMeta presubscribed observeOnAndroidSchedulersmainThread delaySubscriptiondelayStream doOnSubscribe loggerMeta subscribed subscribe iLoggerMain activity received it when it is MetaStateClearCurrentPage qenPageclearPage is MetaStateSelectedPage qenPagedrawPageitcontent exhaustive Other guides on medium told me to add this lib to my project Still I cant understand how to use this No wiki readme just tells me how to add it Im confused It is a good idea to have a RxBinding Observable passed to my VM apply the business logic then add to the VM disposable bag and subscribing to that Observable on the ActivityFragment Just wondering since I have some Business logic on the VM for processing the input but in theory Im sending a reference of the view to the VM which sounds not that great also there is a weird going back and forth that I dont personally like how you guys think it would be best handled this cases