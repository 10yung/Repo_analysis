Ive been playing around with slickless for the past few days Im particularly interested in getting extensible records to work with slick A record projection would be a nice feature IMHO Either by providing a RecordShape or by a MappedProjection class Userstag Tag extends Table Long String HNil tag users def id column Long id OPrimaryKey OAutoInc def email column String email def id id email email HNil support by RecordShape or def id email HNilmappedWithRecordid email HNil support by MappedProjection As I just started my journey with shapeless I could not get any of these two approaches to work The closest I could come up with is a non working MappedProjection def mappedWithRecord R HList ClassTag U HList K HList keys K implicit shape Shape FlatShapeLevel T U new MappedProjection R U shapetoNodehlist MappedScalaTypeMapper f HList fzipWithKeyskeysasInstanceOf Any Any compiler error could not find implicit value for parameter withKeys shapelessopshlistZipWithKeys KshapelessHList g HList asInstanceOf Any Any None implicitly ClassTag R So basically my two questions are Would it even be possible to provide a RecordShape Unfortunately I could not even figure out where to start Why cant the compile find the implicit parameter withKeys in the code above What am I missing The project build depends on slick and shapeless naturally But should they be runtime dependencies to allow the end user to make minor version changes Not sure what the best practice is here For example as of right now while Im writing this issue weve published slickless for Slick M If I want to use this with final I see warn There may be incompatibilities among your library dependencies warn Here are some of the libraries that were evicted warn comtypesafeslickslick M warn Run evicted to see detailed eviction warnings I think we can mark these lines as runtime or something like that Ill do that unless anyone wants to point to th error of my ways Nuff said 