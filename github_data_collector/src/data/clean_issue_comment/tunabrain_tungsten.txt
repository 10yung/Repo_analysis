Hi What is the role of seed parameter in tungstenexe script Is it used to control the texture of the material or to controlthe position of randomly generated light spp Hi Im trying to build the project with Visual Studio and a recent CMake version but I have some errors The first one is that the function in ImageIOcpp line is not recognised Attempting to reference a deleted function Then I have similar errors all related to Debugcorelib saying that the file doesnt exist for hdrmanip obj json scenemanip json xml tungsten tungstenserver and editor projects How can I solve this Many thanks in advance Hi Thank you for your excellent job I built the tungsten by myself but found out that it is running much slower than the binary version shipped by KPCN project I wonder was there any settings I didnt make correctly And also why it doesnt output the auxiliary features EXRs even if I specified that in the scene description Json file But the binary version behaves correctly with the same scene json Thank you very much MSVC error error C stduniqueptrTungstenuint void cdecl void uniqueptrTungstenuint TungstenImageIOloadJpglambda d b ea a f Ptr Dx Attempt to refer to deleted functions C Users X Desktop tungstenmaster src core io ImageIOcpp core In ObjLoadercpp stdsharedptrBsdf ObjLoaderconvertObjMaterialconst ObjMaterial mat line PathPtr path stdmakesharedPathmatalphaMap should be PathPtr path stdmakesharedPathmatbumpMap Hi I am trying to understand how rotation works in Tungsten I notice that there are rotation functions in Mat f namely rotXYZ and rotYXZ I did not find documentation for the formula so I tried to compose rotation matrices wrt x y and z axes to reconstruct these functions However I found some inconsistency between these functions For a certain rotation vector xangle yangle zangle Assume the rotation matrices are named rotxxangle rotyyangle and rotzzangle Also assume that rotdotv is the correct way to rotate a vector v same convention as in Tungsten The rotXYZ function can be reconstructed as rotzdotrotydotrotx However the rotYXZ function cannot be reconstructed as rotzdotrotxdotroty as expected but can be reconstructed by rotytransposedotrotxdotrotz Could anyone explain the reason of having different rotation functions that are formulated inconsistently Thanks in advance Hi Benedikt How about make test with your Tungsten for rendering Moana Island Scene Big thanks Im trying to build Tungsten in Arch Linux testing repositories enabled and I have this error emptyXanadugittungstenbuilddebug make Building CXX object srcthirdpartyembreekernelsCMakeFilesembreesse dirgeometrygridsoacppo In file included from usrlibgccx pclinuxgnu includexmmintrinh from usrlibgccx pclinuxgnu includeimmintrinh from homeemptygittungstensrcthirdpartyembreeincludecommonsysintrinsicsh from homeemptygittungstensrcthirdpartyembreeincludecommonsysmutexh from homeemptygittungstensrcthirdpartyembreeincludecommonsysthreadh from homeemptygittungstensrcthirdpartyembreekernelsgeometrycommondefaulth from homeemptygittungstensrcthirdpartyembreekernelsgeometrycommonrayh from homeemptygittungstensrcthirdpartyembreekernelsgeometrygridsoah from homeemptygittungstensrcthirdpartyembreekernelsgeometrygridsoacpp homeemptygittungstensrcthirdpartyembreeincludecommonsimdvboolf sse h In function const vboolf embreeshuffleconst vboolf homeemptygittungstensrcthirdpartyembreeincludecommonsimdvboolf sse h error could not convert m ibuiltinia pshufdv sim ia inti i i i from m i aka vector long long int to const vboolf aka const embreevboolf return mmshuffleepi a MMSHUFFLEi i i i make srcthirdpartyembreekernelsCMakeFilesembreesse dirbuildmake srcthirdpartyembreekernelsCMakeFilesembreesse dirgeometrygridsoacppo Error make CMakeFilesMakefile srcthirdpartyembreekernelsCMakeFilesembreesse dirall Error make Makefile all Error emptyXanadugittungstenbuilddebug GCC version gcc GCC Copyright C Free Software Foundation Inc This is free software see the source for copying conditions There is NO warranty not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE Do you support GCC v yet EDIT it builds fine in Debian stable Hi Benedikttunabrain Thanks for your rendering resources and papers at first which I used and learned a lot from I am implementing your Disney HairFur BSDFBCSDF and I found some difference between your implementation in tungsten and pbrts implementation when sampling the longitudinal M As mentioned in an open issue of pbrt your implementation and the paper Importance Sampling for Physicallybased Hair Fiber Models both firstly tilt the angle and then sampling the M However pbrts version is sampling M and then tilting I think that your implementation and the papers way are correct Please let me know if my opinion is wrong Thank you very much for your attention Zejian Wang If anyone is trying to build this one macOS brew install eigen openexr libbtbb possibly others check what is missing at the end of CMake brew uninstall openvdb it doesnt build with openvdb probably this can be switched off in CMake with a switch export CMAKEPREFIXPATHUsersQt clang rm rf build mkdir build cd build mkdir release cd release cmake DCMAKEBUILDTYPERelease make j I dont know what OpenVDB is used for but making sure its not included makes it compile without errors