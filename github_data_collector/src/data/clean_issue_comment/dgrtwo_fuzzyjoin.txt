Thank you for this package I used it for assigning people to generations Boomers Millenials etc depending on the year they were born also possible to base it on age using that as a rough approximation of year they were born but thats more complicated code Heres some simplified code of how I used fuzzyjoin libraryfuzzyjoin create generations table name cGeneration Generation Z Millenials Xennials Generation X Baby BoomersSilent startyr c theres a dummy year in here for Generation endyr c generations dataframename startyr endyr create a data table of people with the year they were born name cperson person person person person person person person person yrbirth c people dataframename yrbirth Update the people table to indicate what generation they belong to depending on whether their birth year falls on or after start yr and on or before end year of the generation people fuzzyleftjoin people generations by c yrbirth startyr yrbirth endyr matchfun list More examples Ive used this package in other powerful ways but on proprietary data Im interested in ideas for use cases that can be provided as vignettes fuzzyleftjoinA B by c key key date startDate date endDate matchfun list If there are duplicate column names that arent being matched on theyre currently suffixed with x and y Itd be nice to be able to change that like you can in dplyrs joins In reference to README Im interested in ideas for use cases that can be provided as vignettes Hi I thought to share an interesting data example Here is a public dataset Aboriginal and Torres Strait Islander Languages by wwwaiatsisgovau this is a CSV comma separated with quotes Languages were transmitted orally and were never written down hence there are various alternative spellings to refer to the same language languagename and languagesynonym are the two variables to look up would be a pretty cool example for fuzzyjoin wondering if to distancejoin or geojoin two tables one with M coords and the other with N coords say MN your curr implementation is exaustive ie it runs in OM N time if so consider creating a kdtree of kNN fame of the smaller list in O M logM time and querying it N times for the closest point to P P PN on the longer table only join if the distP closestP maxdist this will run in O MN logM which will be at least M logM faster than the exaustive method Error vector memory exhausted limit reached I m getting the above error when trying to stringdistleftjoin two tables the left table is K rows and the right table is M rows The R session never appears to use more than GB of memory according to Activity Monitor while I m on a machine with GB of memory with available memory in the range of GB when the vector memory exhausted error arises I ve followed various recommendations to increase RMAXVSIZE to a large number GB as shown in the Sysgetenv output shown below All this to say it appears that stringdistleftjoin does not pay attention to RMAXVSIZE Is there some other setting I can change to use more of the available memory on my machine Sysgetenv ApplePubSubSocketRender privatetmpcomapplelaunchdsSrL I ZRender COLUMNS COMMANDMODE unix DISPLAY privatetmpcomapplelaunchdtTt eLd xQorgmacosforgexquartz DYLDFALLBACKLIBRARYPATH LibraryFrameworksRframeworkResourceslibLibraryJavaJavaVirtualMachinesjdk jdkContentsHomejrelibserver DYLDLIBRARYPATH LibraryJavaJavaVirtualMachinesjdk jdkContentsHomejrelibserver EDITOR vi HOME Usersgeoffreysnyder LDLIBRARYPATH JAVALD LINES LNS ln s LOGNAME geoffreysnyder MAKE make PAGER usrbinless PATH usrlocalbinusrlocalmysqlbinusrbinbinusrsbinsbinoptX binLibraryPython bin PWD UsersgeoffreysnyderreposDataLoadcode RARCH RBROWSER usrbinopen RBZIPCMD usrbinbzip RDOCDIR LibraryFrameworksRframeworkResourcesdoc RGZIPCMD usrbingzip RHOME LibraryFrameworksRframeworkResources RINCLUDEDIR LibraryFrameworksRframeworkResourcesinclude RLIBSSITE RLIBSUSER LibraryR library RMAXVSIZE GB RPAPERSIZE a RPDFVIEWER usrbinopen RPLATFORM x appledarwin RPRINTCMD lpr RQPDF LibraryFrameworksRframeworkResourcesbinqpdf RRD PDF timesinconsolatahyper RSESSIONTMPDIR varfoldersxw kc hc xl d k x f gqTRtmpJdct Y RSHAREDIR LibraryFrameworksRframeworkResourcesshare RSYSTEMABI osxgccgxxgfortran RTEXI DVICMD usrlocalbintexi dvi RUNZIPCMD usrbinunzip RZIPCMD usrbinzip SECURITYSESSIONID a SED usrbinsed SHELL binzsh SHLVL SSHAUTHSOCK privatetmpcomapplelaunchdUNOOV wxevListeners SUBLIMEREPLACIP SUBLIMEREPLACPORT None TAR usrbintar TMPDIR varfoldersxw kc hc xl d k x f gqT TZ AmericaLosAngeles USER geoffreysnyder XPCFLAGS x XPCSERVICENAME CFUSERTEXTENCODING x F x x sessionInfo R version Platform x appledarwin bit Running under macOS Matrix products default BLAS LibraryFrameworksRframeworkVersions ResourcesliblibRblas dylib LAPACK LibraryFrameworksRframeworkVersions ResourcesliblibRlapackdylib locale C attached base packages stats graphics grDevices utils datasets methods base other attached packages bindrcpp RJDBC rJava DBI fuzzyjoin readr dplyr lubridate stringr loaded via a namespace and not attached Rcpp tidyr assertthat R magrittr pillar rlang stringi tools glue purrr hms compiler pkgconfig bindr tidyselect tibble I wrote about a problem as issue Generally I think that this should not be solved at documentation level but on matching level First of all congratulations for this great package I was a bit struggling to find out why I could not geomatch my data I think that it is a bit unfortunate that there is no exact longitude and latitude variable matching in the geojoin function I made a small amendment in the documentation of the function However I think that a clearer matching would be more appropriate given that Google any many other APIs use by default lng for longitudes states dataframestate statename lng statecenterx lat statecentery s renamestates state state s renamestates state state pairs s geoinnerjoins by clng lat maxdist filterstate state Another issue that makes the whole code very difficult to read and amend that only a very few functions are directly imported For example in geojoin dplyrdataframe and dplyrcommonby are not referenced or imported It is not logical to me why the above modification should not work Given that in geomatching latx must strictly match with laty and lonx with lony it would be preferable to clearly pass on these arguments for example like bylat clat lat and bylon clon lng Any plans to support dplyr style calls to external databases even for some subset of functions Im guessing thats out of scope for this package but it would be nice to have that documented in perhaps a more obvious way Anyway really cool package here thanks Is there any way to match on normalized string distance Ie for osa lv and dl dividing by the nchar of the longest word or for lcs the additive lengths of both letter off of a letter string is quite different than letter off of a character string