Added auto flag REPRO STEPS Open up MSC Click Install on an optional install Watch ManagedInstallReportplist ACTUAL BEHAVIOR After the item is successfully installed ManagedInstallReportplist contains an InstallResults key that looks like this keyInstallResultskey array dict keyapplesuskey false keydisplaynamekey stringTextExpander string keydownloadkbytesperseckey integer integer keydurationsecondskey integer integer keynamekey stringTextExpander string keystatuskey integer integer keytimekey date T Zdate keyunattendedkey false keyversionkey string string dict array The downloadkbytespersec is always EXPECTED BEHAVIOR The downloadedkbytespersec should contain the average download speed from the download run and generally be ignored for locally cached items WHAT I THINK IS HAPPENING Downloading and installing an item from MSC is technically two Munki runs one to do a manualcheck and one to do an installwithnologout type run However when doing an install via MSC the postflight script is not executed in between the download and install but the calculation of download speed is done when the item is already cached This is resulting in an erroneous value of for any item downloaded this way Normal automatic unattended updates dont seem to suffer this issue if the item is downloaded and installed successfully makecatalogslib can cause AutoPkgs MakeCatalogsProcessor to choke on nonASCII characters in filefolder names within the Munki repo Might be related to this downstream issue Steps to reproduce Munki tools AutoPkg or RC Create a pkginfo file at a path that contains a nonASCII character I created one called mlaut plist Run makecatalogs and observe that catalogs are rebuilt successfully Run an AutoPkg recipe that results in importing new software to the Munki repo and observe that although catalogs are rebuilt successfully the MakeCatalogs processor fails with a UnicodeEncodeError See abridged output below snip The following recipes failed MakeCatalogsmunki Error in localmunkiMakeCatalogs Processor MakeCatalogsProcessor Error makecatalogs failed Traceback most recent call last File usrlocalmunkimakecatalogs line in module main File usrlocalmunkimakecatalogs line in main errors makecatalogslibmakecatalogsrepo options outputfnprint File usrlocalmunkimunkilibadminmakecatalogslibpy line in makecatalogs repo options outputfnoutputfn File usrlocalmunkimunkilibadminmakecatalogslibpy line in processpkgsinfo outputfnAdding s to s pkginforef catalogname UnicodeEncodeError ascii codec cant encode character u u in position ordinal not in range The following new items were imported into Munki Name Version Catalogs Pkginfo Path Pkg Repo Path Firefox testing appsFirefox plist appsFirefox dmg Note that it doesnt matter which product is imported into Munki Firefox is used here as an example Verifying proposed change When the steps above are run on the modified makecatalogslibpy here is the abridged AutoPkg output Processing MakeCatalogsmunki MakeCatalogsProcessor Input MUNKIREPO munkirepo MakeCatalogsProcessor Munki catalogs rebuilt Output Receipt written to LibraryAutoPkgCachelocalmunkiMakeCatalogsreceiptsMakeCatalogsreceipt plist The following new items were imported into Munki Name Version Catalogs Pkginfo Path Pkg Repo Path Firefox testing appsFirefox plist appsFirefox dmg Filing bug report based on munkidiscuss thread The basic gist is that a simple uninstallcheckscript proceeds with item removal on exit code rather than skipping removal Tested on macOS running Munki v and on macOS running Munki v Update this behavior appears to be caused by Munki using aspects of multiple pkginfo files but the pkginfo file that governs the final behavior is the oldest version Full details in the linked munkidiscuss thread above Running makepkginfo nopkg uninstallscriptuninstallsh unattendeduninstall does not set uninstallable to true in the resulting pkginfo plist The result is that when the package is added to a manifests manageduninstalls section uninstalling fails and LibraryManaged Installs shows Checking for removals Running installcheckscript for pkg WARNING Could not find uninstall info for pkg Manually setting the following property in the pkginfo results in a successful uninstall keyuninstallablekey true This should probably be done automatically when the unattendeduninstall option is used or another option uninstallable should be added launchdplist man page describes the following for the OnDemand key OnDemand boolean This key does nothing if set to true If set to false this key is equivalent to specifying a true value for the KeepAlive key This key should not be used Please remove this key from your launchdplist given this key is set to true then by the documentation it does nothing and can be removed as it does nothing then leaving it in would not be considered a bug and so can be low priority I can submit a PR for it at some point repoclean wants a file path to a repo It does not work properly with anything other than the default FileRepo plugin The Managedsoftwareupdate app should warn if there is a certificate problem like the command line version does Now the app behaves like there is no problem but it cant get updates or install software Backstory I managed to send out a profile which removed the certificate needed to access our munki server ouch This resulted in people not being able to get the updated profile that would restore the certificate because it wouldnt appear in the MSC app There was also no error message indicating that there was a problem I know the MSC app likes to hide the technicalities from unprepared users but in the name of transparency i dont think an app should behave like everythings alright when it cant function The current method logouthelper uses to forcibly logout users was developed in mid and is a bit of a nasty hack Investigate the use of macOS launchctl methods to do this better launchctl reboot userspace launchctl bootout guiuidNumber sudo u user launchctl reboot logout Clicking a text label for the toolbar item buttons SoftwareCategoriesMy ItemsUpdates does not cause any action to occur Clicking a toolbar item label should switch to the appropriate view just like clicking on the image does I am reasonably certain I fixed this in the past by implementing custom MSCToolbarbarButton and MSCToolbarButtonCell classes but even MSC x shows this behavior