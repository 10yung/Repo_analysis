 Related issue Proposed changes Fix logging Span ID has mistake that spanid overwrites traceid Now both spanid and traceid are logged INFO started handling request methodGET remote requesthealthalive spanid f aa ba b traceid bf f b da a ce d e e INFO completed handling request measurehydraadmin methodGET remote requesthealthalive spanid f aa ba b status textstatusOK took s traceid bf f b da a ce d e e Checklist x I have read the contributing guidelines blobmasterCONTRIBUTINGmd x I have read the security policy securitypolicy x I confirm that this pull request does not address a security vulnerability If this pull request addresses a security vulnerability I confirm that I got green light please contact securityorysh mailtosecurityorysh from the maintainers to push the changes I have added tests that prove my fix is effective or that my feature works I have added necessary documentation within the code base if appropriate I have documented my changes in the developer guide if appropriate Further comments Im sorry Is your feature request related to a problem Please describe My user story is resource server logging request resource RES with access token id ID jwtjti subject S jwtsub resource server audit service found security issues notify user and account administrator want to revoke tokenconsent with jti ID sub S user or administrator use idp built with hydra portal list all tokens find the one with same jti delete server call hydra list consent by subject find the consent has jti ID revoke it or has a input box revoke my tokenconsent with jti ID Similar to and Describe the solution youd like What I want is a constant identity in a consent session which both included in access token and list consent response I am not sure jti is the constant identity in a consent session It still not easy for not jwt access token use introspection endpoint to get the id jti and subject Currently my workaround is add a custom claim tokenid new uuid in access token session which is both included access token and list consent response and constant identity in a consent session Is your feature request related to a problem Please describe There are cases that we need to force log out a user from all the firstparty client applications eg when users reset their password or admins of the account want to revoke a user from a firm Hydra already has an endpoint that allows us to delete the existing sessions for a specific user from Hydra but per documentation will require the user to reauthenticate when performing the next OAuth Authorize Code Flow The documentation explicitly says that This endpoint is not compatible with OpenID Connect FrontBackchannel logout and does not revoke any tokens What I am looking for is to invalidate all the existing sessions in the client applications that have the backchannel logout implemented immediately not on next flow execution Describe the solution youd like Add an additional parameter eg triggerlogouttrue to the existing endpoint that allows us to trigger a backchannel logout once the subjects sessions are removed Describe alternatives youve considered Add a new endpoint to the API functionality has some overlap with the existing API endpoint I am not sure if that is a good idea Additional context I have already had a discussion about this issue on the forum Describe the bug The fix for changed the logic of when the session is killed The hard timeout makes it now impossible to prolong the session even if the user is active and keeps refreshing tokens via silent refresh Could we reintroduce the possibility for the old behavior while keeping the new behaviour possible too In particular it would be enough if setting rememberFor to a positive value on skipped login would still trigger the recreation of the session cookie See the relevant line This way omitting the rememberFor on skipped login would result in the current behaviour the old cookie is kept maxage is not changed But providing positive rememberFor would update the cookie with the new maxage thus prolonging its life Coauthoredby Marco Hutzsch marcohutzschottode Related issue Proposed changes When a consent is handled hydra stores the result accepted or rejected With this change it is possible to access the date and time when a consent was handled Checklist x I have read the contributing guidelines blobmasterCONTRIBUTINGmd x I have read the security policy securitypolicy x I confirm that this pull request does not address a security vulnerability If this pull request addresses a security vulnerability I confirm that I got green light please contact securityorysh mailtosecurityorysh from the maintainers to push the changes x I have added tests that prove my fix is effective or that my feature works x I have added necessary documentation within the code base if appropriate I have documented my changes in the developer guide if appropriate Is your feature request related to a problem Please describe When we ask hydra for all accepted consents for a subject we want to show the subject the date when the latest consent was accepted This value exists in the db but is not accessible via gosdk Describe the solution youd like We had the idea of adding the value to the mentioned struct Would you accept a PR for that Describe alternatives youve considered No idea Describe the bug We are using fluentd elasticsearch kibana for log collection Currently we have trouble indexing hydra logs because json field status has different types For example A normal error log output looks like levelinfomeasurehydraadmin domainlatency methodGETmsgcompleted handling requestremoterequestoauth authrequestsloginloginchallengechallengestatus textstatusNot Foundtime T Ztook but in case of an error additional output is generated which looks like code debugdetailserrorNot FoundlevelerrormsgAn error occurred while handling a requestreasonrequestidstatusNot Foundtime T ZtraceStack trace ngithubcomoryhydraconsentSQLManagerGetLoginRequest n tgosrcgithubcomoryhydraconsentmanagersqlgo ngithubcomoryhydraconsentHandlerGetLoginRequest n tgosrcgithubcomoryhydraconsenthandlergo ngithubcomjulienschmidthttprouterRouterServeHTTP n tgopkgmodgithubcomjulienschmidthttprouterv routergo ngithubcomurfavenegroniWrapfunc n tgopkgmodgithubcomurfavenegroniv negronigo ngithubcomurfavenegroniHandlerFuncServeHTTP n tgopkgmodgithubcomurfavenegroniv negronigo ngithubcomurfavenegronimiddlewareServeHTTP n tgopkgmodgithubcomurfavenegroniv negronigo ngithubcomoryxmetricsxServiceServeHTTP n tgopkgmodgithubcomoryxv metricsxmiddlewarego ngithubcomurfavenegronimiddlewareServeHTTP n tgopkgmodgithubcomurfavenegroniv negronigo ngithubcomoryhydrametricsprometheusMetricsManagerServeHTTP n tgosrcgithubcomoryhydrametricsprometheusmiddlewarego ngithubcomurfavenegronimiddlewareServeHTTP n tgopkgmodgithubcomurfavenegroniv negronigo ngithubcommeatballhatnegronilogrusMiddlewareServeHTTP n tgopkgmodgithubcommeatballhatnegronilogrusv fmiddlewarego ngithubcomurfavenegronimiddlewareServeHTTP n tgopkgmodgithubcomurfavenegroniv negronigo ngithubcomurfavenegroniNegroniServeHTTP n tgopkgmodgithubcomurfavenegroniv negronigo nnethttpserverHandlerServeHTTP n tusrlocalgosrcnethttpservergo nnethttpconnserve n tusrlocalgosrcnethttpservergo nruntimegoexit n tusrlocalgosrcruntimeasmamd s writerJSON as you can see in the first output status contains and in the second one Not Found It would be great to have consistent types Expected behavior We expect the same datatype for status over all log messages Environment Version v Environment GKE Kubernetes cc jaymegithub Is your feature request related to a problem Please describe Jaeger provides a great distributed tracing system but its not small cost for transition period of monolith to micro service really few micro services So now I need traceable logging until I install jaeger Describe the solution youd like Add logging configuration option like following yaml serve admin additionallogging headertracingid ToTraceID headerspanid ToSpanID Then reading ToTraceID and ToSpanID are read from HTTP headers and logging appears like this levelinfotracingid xxxxxxxxxxxxxxx spanid xxxxxxxxxxxxxxx Describe the bug Say I have only one client in ORY Hydra server And when I am using GET clients the Link header is Link clientslimit offset relfirstclientslimit offset relprev Expected behavior In this situation the expected result is containing first link only Environment Using the latest docker image dockeryml hydra image orydhydralatest ports Public port Admin port Port for hydra token user command serve all dangerousforcehttp environment URLSSELFISSUER URLSCONSENT URLSLOGIN URLSLOGOUT DSNmemory SECRETSSYSTEMyouReallyNeedToChangeThis LOGLEVELdebug restart unlessstopped 