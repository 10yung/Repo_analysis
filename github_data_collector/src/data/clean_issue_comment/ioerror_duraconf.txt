As described in the mitigations includes Open gpgconf in a text editor Ensure there is no line starting with keyserver If there is remove it Open dirmngrconf in a text editor Add the line keyserver hkpskeysopenpgporg to the end of it So at the very least the gpgconf file needs reviewing Im looking for a good known configuration with sane defaults came up empty so far rework gpgconf based on upstream changes default key unneccessary behavior merged upstream in keyserver merged upstream in and some now set in dirmngrconf personalcipherpreferences merged upstream Maybe add requirecrosscertification to the gpgconf It is the default in Debian AFAIK with this reason given When verifying a signature made from a subkey ensure that the cross certification back signature on the subkey is present and valid This protects against a subtle attack against subkeys that can sign Defaults to norequirecrosscertification However for new installations it should be enabled It seems the comments were out of sync with the actual settings Hi I have a question about following line in the gpgconf personalcipherpreferences AES AES AES CAST Why not also add the Twofish cipher Two comment blocks mix up words cipher and digest Use more secure options added options for the secret key and to use when encryptingsigning messagesfiles because by default sha or ripemd and blowfish will be use There is already a hardened SSH server configuration file but this new SSH client configuration file will make OpenSSH SSH client prefer stronger ciphers and MACs when the server in question doesnt enforce stronger ciphers and MACs More information about the Logjam attack here And here are some information what to do as a server admin The README suggests it is possible to have Apache redirect users with insufficiently secure SSLTLS stacks to some specific page indicating the problem describes the SSL related environmental variables that could be used as part of a RewriteCond and RewriteRule to redirect users based on their SSL capabilities The RewriteRule would look something like RewriteCond SSLSSLCIPHERUSEKEYSIZE RewriteRule LR This will only work if Apache is set to allow the lesser cipher strengths in its SSL configuration then use this redirect to point the user elsewhere Since the user has already transmitted their request data at this point it is too late in the request to realistically protect anything about the request session cookies authentication data If one is really concerned about allowing use of lower strength ciphers then this isnt going to work very well and they should be omitted from the SSL configuration This will of course cause a SSL handshake error for some clients 