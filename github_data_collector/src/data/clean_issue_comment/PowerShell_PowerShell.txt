 PR Summary Enable support for EditorConfig in OmniSharp PR Context OmniSharp has this support since omnisharproslyn v PR Checklist x PR has a meaningful title Use the present tense and imperative mood when describing your changes x Summarized changes x Make sure all h cpp cs ps and psm files have the correct copyright header x This PR is ready to merge and is not Work in Progress If the PR is work in progress please add the prefix WIP or WIP to the beginning of the title the WIP bot will keep its status check at Pending while the prefix is present and remove the prefix when the PR is ready Breaking changes x None OR Experimental features needed Experimental feature names Experimental feature names here Userfacing changes x Not Applicable OR Documentation needed Issue filed Numberlink of that issue here Testing New and feature x NA or can only be tested interactively OR Make sure youve added a new test if existing tests do not effectively test the code changed Tooling x I have considered the user experience from a tooling perspective and dont believe tooling will be impacted OR I have considered the user experience from a tooling perspective and enumerated concerns in the summary This may include Impact on PowerShell Editor Services which is used in the PowerShell extension for VSCode which runs in a different PS Host Impact on Completions both in the console and in editors one of PowerShells most powerful features Impact on PSScriptAnalyzer which provides linting formatting in the editor extensions Impact on EditorSyntax which provides syntax highlighting with in VSCode GitHub and many other editors Steps to reproduce powershell PS D NewItem n Expected behavior and current behavior in PS none Directory D Mode LastWriteTime Length Name a PM n Actual behavior A file with an unexpected name is created none Directory D Mode LastWriteTime Length Name a PM Environment data none Name Value PSVersion rc PSEdition Core GitCommitId rc OS Microsoft Windows Platform Win NT PSCompatibleVersions PSRemotingProtocolVersion SerializationVersion WSManStackVersion When the other numeric types are used as an argument PS wraps them inside a psobject if their numeric and string representations differ so that PS can extract the original string if needed later eg if its bound to a string parameter as with NewItem above Thus NewItem ul works as expected but NewItem n does not Im sorry but I dont know howwhere this happens in the code though Mentioning vexx because I believe they created the BigInt typesuffix support thanks modulevar display variable var in module we can use The ExecutionContext variable to display var variable but modifier module is better step to reproduce m newmodule var in module ipmo force PassThru var in script sb var in scriptblock WriteHost localvar WriteHost scriptvar WriteHost modulevar sb output in scriptblock in script in module For Windows PowerShell issues suggestions or feature requests please use the following link instead Windows PowerShell UserVoice This repository is ONLY for PowerShell Core and PowerShell issues Make sure you are able to repro it on the latest released version Search the existing issues Refer to the FAQ Refer to the known issues Hi I want to see verbose messages using TestDscConfiguration with Verbose switch Thanks Steps to reproduce powershell TestDscConfiguration ComputerName envCOMPUTERNAME Verbose Expected behavior none PS TestDscConfiguration ComputerName envCOMPUTERNAME Verbose VERBOSE Perform opetation Invoke CimMethod with following parameters methodName TestConfiguration className MSFTDSCLocalConfigurationManagernamespaceName rootMicrosoftWindowsDesiredStateConfiguration VERBOSE An LCM method call arrived from coputer MyComputer with user sid S VERBOSE MyComputer LCM Start Test VERBOSE MyComputer LCM Start Resource File FileCopyInstance VERBOSE Operation Invoke CimMethod Complete True VERBOSE Time taken for configuration job to complete is seconds Actual behavior none PS TestDscConfiguration ComputerName envCOMPUTERNAME Verbose True Environment data provide the output of PSVersionTable none Name Value PSVersion rc PSEdition Core GitCommitId rc OS Microsoft Windows Platform Win NT PSCompatibleVersions PSRemotingProtocolVersion SerializationVersion WSManStackVersion Anything that looks like this is a comment and cant be seen after the Pull Request is created changed the ClrVersion parameter property on NewModuleManifest to CLRVersion To prevent portability issues with PowerShell tooling this PR changes it back Summarize your PR between here and the checklist PR Context See PR Checklist x PR has a meaningful title Use the present tense and imperative mood when describing your changes x Summarized changes x Make sure all h cpp cs ps and psm files have the correct copyright header x This PR is ready to merge and is not Work in Progress If the PR is work in progress please add the prefix WIP or WIP to the beginning of the title the WIP bot will keep its status check at Pending while the prefix is present and remove the prefix when the PR is ready Breaking changes x None OR Experimental features needed Experimental feature names Experimental feature names here Userfacing changes x Not Applicable OR Documentation needed Issue filed Numberlink of that issue here Testing New and feature x NA or can only be tested interactively OR Make sure youve added a new test if existing tests do not effectively test the code changed Tooling I have considered the user experience from a tooling perspective and dont believe tooling will be impacted OR x I have considered the user experience from a tooling perspective and enumerated concerns in the summary This may include Impact on PowerShell Editor Services which is used in the PowerShell extension for VSCode which runs in a different PS Host Impact on Completions both in the console and in editors one of PowerShells most powerful features Impact on PSScriptAnalyzer which provides linting formatting in the editor extensions Impact on EditorSyntax which provides syntax highlighting with in VSCode GitHub and many other editors Anything that looks like this is a comment and cant be seen after the Pull Request is created changed the SetBreakpoint API in a breaking way This PR restores the original API while continuing to make the new one available Tooling will be impacted by not crashing when targeting the SetBreakpoints API across PowerShell versions NOTE adds default parameters to other APIs not broken since they were only added in the timeframe For compatibility it would be favourable to turn those into overloads instead Services PR Checklist x PR has a meaningful title Use the present tense and imperative mood when describing your changes x Summarized changes x Make sure all h cpp cs ps and psm files have the correct copyright header x This PR is ready to merge and is not Work in Progress If the PR is work in progress please add the prefix WIP or WIP to the beginning of the title the WIP bot will keep its status check at Pending while the prefix is present and remove the prefix when the PR is ready Breaking changes x None OR Experimental features needed Experimental feature names Experimental feature names here Userfacing changes x Not Applicable OR Documentation needed Issue filed Numberlink of that issue here Testing New and feature x NA or can only be tested interactively OR Make sure youve added a new test if existing tests do not effectively test the code changed Tooling I have considered the user experience from a tooling perspective and dont believe tool ing will be impacted OR x I have considered the user experience from a tooling perspective and enumerated concerns in the summary This may include Impact on PowerShell Editor Services which is used in the PowerShell extension for VSCode which runs in a different PS Host Impact on Completions both in the console and in editors one of PowerShells most powerful features Impact on PSScriptAnalyzer which provides linting formatting in the editor extensions Impact on EditorSyntax which provides syntax highlighting with in VSCode GitHub and many other editors For Windows PowerShell issues suggestions or feature requests please use the following link instead Windows PowerShell UserVoice This repository is ONLY for PowerShell Core and PowerShell issues Make sure you are able to repro it on the latest released version Search the existing issues Refer to the FAQ Refer to the known issues I try to upgrade from RC to RC using snap but is not available Steps to reproduce In Linux Ubuntu Remove PowerShell Linux sudo snap remove powershellpreview sudo snap install powershellpreview classic Also try sudo snap refresh powershellpreview classic Expected behavior To open PowerShell RC none Actual behavior Opens PowerShell RC none Environment data provide the output of PSVersionTable Linux OS none PRC Bumps NJsonSchema from to details summaryRelease notessummary pemSourced from a href releasesaemp blockquote h NJsonSchema v Build h ul liBug fixesli ul h NSwag v Build h pPossible strongbreaking changesstrongp ul liInline dictionary or array inheritance a href liImprove allOf inheritance support a href ul h NSwag v Build h pstrongDO NOT USE THIS RELEASEstrongp h NSwag v Build h pChangesp ul liImprove range attribute handling closes a href liAdd exception docs closes a href liFix XmlDocumentationExtensions deadlock a href liUse allOf for all schemas in inheritance a href ul h NSwag v Build h pNo release notes providedp blockquote details details summaryCommitssummary ul liSee full diff in a href viewali ul details br Dependabot compatibility score Dependabot will resolve any conflicts with this PR as long as you dont alter it yourself You can also trigger a rebase manually by commenting dependabot rebase dependabotautomergestart dependabotautomergeend details summaryDependabot commands and optionssummary br You can trigger Dependabot actions by commenting on this PR dependabot rebase will rebase this PR dependabot recreate will recreate this PR overwriting any edits that have been made to it dependabot merge will merge this PR after your CI passes on it dependabot squash and merge will squash and merge this PR after your CI passes on it dependabot cancel merge will cancel a previously requested merge and block automerging dependabot reopen will reopen this PR if it is closed dependabot close will close this PR and stop Dependabot recreating it You can achieve the same result by closing it manually dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version unless you reopen the PR or upgrade to it yourself dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version unless you reopen the PR or upgrade to it yourself dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency unless you reopen the PR or upgrade to it yourself dependabot badge me will comment on this PR with code to add a Dependabot enabled badge to your readme Additionally you can set the following in the dependabotconfigyml file in this repo Update frequency Automerge options neverpatchminor and devruntime dependencies Outofrange updates receive only lockfile updates if desired Security updates receive only security updates if desired details Ive run an analysis comparing public APIs available in PowerShell vs rc and there are some public APIs that are missing While this is in many cases intentional and likely to not be an issue some may affect programs and tools trying to link against multiple versions of PowerShell modules and some hosts Trying to reference such an API would cause a sudden crash in one of these tools the hard part being that the point at which the crash occurs may be hard to control Im still refining the analysis but here is a list of classes and members that have been removed Types SystemManagementAutomationPSJobProxy Workflow SystemManagementAutomationPSChildJobProxy Workflow SystemManagementAutomationJobDataAddedEventArgs Workflow SystemManagementAutomationPowerShellStreamType arguably workflow but has generic name and namespace Removed in SystemManagementAutomationWorkflowInfo Workflow SystemManagementAutomationRunspacesPSSessionType arguably workflow but possibly worth restoring with single value depending on how its used Fields SystemManagementAutomationCommandTypesWorkflow Workflow SystemManagementAutomationPSEngineEventWorkflowJobStartEvent Workflow SystemManagementAutomationModuleTypeWorkflow Workflow SystemManagementAutomationInternalDebuggerUtilsSetVariableFunction Internal SystemManagementAutomationInternalDebuggerUtilsRemoveVariableFunction Internal SystemManagementAutomationInternalDebuggerUtilsGetPSCallStackOverrideFunction Internal SystemManagementAutomationInternalPSMonitorRunspaceTypeWorkflowInlineScript InternalWorkflow Methods and constructors captures events and properties MicrosoftPowerShellDesiredStateConfigurationInternalDscClassCacheImportClassesSystemStringSystemTuple SystemStringSystemVersion SystemCollectionsObjectModelCollection SystemException Internal MicrosoftPowerShellDesiredStateConfigurationInternalDscClassCacheGetCachedClasses Internal MicrosoftPowerShellCommandsNewModuleManifestCommandgetClrVersion See MicrosoftPowerShellCommandsNewModuleManifestCommandsetClrVersionSystemVersion See MicrosoftPowerShellCommandsRegisterPSSessionConfigurationCommandgetSessionType Workflow MicrosoftPowerShellCommandsRegisterPSSessionConfigurationCommandsetSessionTypeSystemManagementAutomationRunspacesPSSessionType Workflow MicrosoftPowerShellCommandsInternalSymbolicLinkLinkCodeMethodsGetTargetSystemManagementAutomationPSObject arguably internal but not internally namespaced Return type changed in SystemManagementAutomationDebuggerSetBreakpointsSystemCollectionsGenericIEnumerable SystemManagementAutomationBreakpoint See SystemManagementAutomationPowerShellAsJobProxy Workflow SystemManagementAutomationScriptBlocksetIsFilterSystemBoolean Formerly threw InvalidOperationException Should assess whether this is considered breaking Changed in SystemManagementAutomationScriptBlocksetIsConfigurationSystemBoolean Formerly threw InvalidOperationException Should assess whether this is considered breaking Changed in SystemManagementAutomationPSModuleInfogetExportedWorkflows Workflow SystemManagementAutomationTracingTracerEndpointRegisteredSystemStringSystemStringSystemString Removed in SystemManagementAutomationInternalDebuggerUtilsGetWorkflowDebuggerFunctions InternalWorkflow Ill continue this analysis to look into custom attributes Anything that looks like this is a comment and cant be seen after the Pull Request is created PR Summary A few test fixes so tests run cleaner on raspbian Summarize your PR between here and the checklist PR Context Provide a little reasoning as to why this Pull Request helps and why you have opened it PR Checklist x PR has a meaningful title Use the present tense and imperative mood when describing your changes x Summarized changes x Make sure all h cpp cs ps and psm files have the correct copyright header x This PR is ready to merge and is not Work in Progress If the PR is work in progress please add the prefix WIP or WIP to the beginning of the title the WIP bot will keep its status check at Pending while the prefix is present and remove the prefix when the PR is ready Breaking changes x None OR Experimental features needed Experimental feature names Experimental feature names here Userfacing changes x Not Applicable OR Documentation needed Issue filed Numberlink of that issue here Testing New and feature NA or can only be tested interactively OR Make sure youve added a new test if existing tests do not effectively test the code changed Tooling x I have considered the user experience from a tooling perspective and dont believe tooling will be impacted OR I have considered the user experience from a tooling perspective and enumerated concerns in the summary This may include Impact on PowerShell Editor Services which is used in the PowerShell extension for VSCode which runs in a different PS Host Impact on Completions both in the console and in editors one of PowerShells most powerful features Impact on PSScriptAnalyzer which provides linting formatting in the editor extensions Impact on EditorSyntax which provides syntax highlighting with in VSCode GitHub and many other editors 