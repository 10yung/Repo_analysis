Thanks for your great work Did your design consider these issues I want to edit some sorce code and import it in my project Can I do it Line in flathashmaphpp why stdend and not just stdend Theres a patch from this StackOverflow answer which allows flathashmap to work with gcc which Ive incorporated Itd be convenient to be able to use your repository as a submodule and have it work on those systems Thanks This has been included in some form here currently when you iterate over the nodes in the map the order they are returned is not the order the were inserted into the map in is there some easy tweak to ensure these orderings match up According to the C standard all Associative Containers The insert and emplace members shall not affect the validity of iterators and references to the container However I found that after insertion of of a list of element some iterator values are invalidated Please find bellow code snippet to test this feature namespace xxx typedef stdstring keyt typedef stdstring valuet typedef skaflathashmapkeyt valuet mapt typedef stdmapkeyt valuet mapt typedef stdlistmaptiterator listt stdvectorstring keysMAXSIZE generatKeyskeys for auto key keys stdpair xxxmaptiterator bool ret dictinsertxxxmaptvaluetypekey keys rand MAXSIZE if retsecond listitemspushbackretfirst for xxxmaptiterator iter dictbegin iter dictend iter xxxlisttiterator findIter stdfindlistitemsbegin listitemsend iter iffindIter listitemsend cerr Item does not exist n else cerr Item exists n fastrange provides a fast method to map machine words to a given range This could be used as part of a hash policy Im not certain that it would be faster than the existing Fibonacci hash policy as it would require bit arithmetic if sizet is bits wide unorderedmaphpp warning performing pointer arithmetic on a null pointer has undefined behavior if the offset is nonzero Wnullpointerarithmetic newbuckets EntryPointernullptr ptrdifft That line looks harmless to me but undefined behavior should be avoided if at all possible 