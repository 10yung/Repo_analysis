Hi Config Windows R rstan brms Ive recently updated brms to the most recent CRAN version and noticed it causes a problem that didnt exist before When you have a multivariate model and you use fittedbrmsfit to get predictions while specifiying a reformula argument you can only get back predictions for the first response and you now get an error for the second one and presumably the third fourth Here is an example using the blue tit dataset r dataBTdata package MCMCglmm bf bfback fosternest bf bftarsus fosternest mod brmmvbfbf bf dataBTdataiter chains fittedmodreformula fosternestrespback fittedmodreformula fosternestresptarsus The fitted call for tarsus results in the following error Error in function A x maxlevel maxx weights lengthx nrowA is not TRUE Inverting bf and bf in mvbf makes fitted fail for back instead of tarsus the error only appears if a reformula argument is given Anyway thanks again for your great work on this package Maxime This PR implements issue which provides a major milestone in improving the consistency of the brms modelling interface The model summary uses l CI and u CI bayesR uses Q and Q looR doesnt show the CIs at all I think I have seen something like upper CI and lower CI used too but I cannot find where right now Also it might be worth reporting the R values to decimal places as are all the values in the main model summary Looking at posterior predict is most of the time spent in the lapply here R out lapplyseqlenN ppfun draws object could we just use mclapply there if getOptionmccores L is This is a suggestion that is a bit open on the details on the implementation but it would be good if smooths could be used in the multilevel syntax like this y sx sxid I suppose that it will be the smoothness parameter ie the standard deviation in the random effect formulation of smooths that will be the parameter that is pooled The reason for this suggestion is that it is very unintuitive how to specify the most similar model with mgcv syntax mgcv just supports the same smoothness or unpooled different smoothness for grouplevel smooths Distributional models are already wellimplemented in brms models allowing prediction of mean and variance parameters Multivariate models are also wellimplemented It would be great if brms could also make it easy to implement covariance regressions such as in this paper Example Stan code for two outcomes is provided by the authors in the Supplemental Material section It might be useful to model the scale parameter for distribution families with such parameters as an observationlevel random effect OLRE as a way to enable residual correlation between different distribution familes Albeit I am not sure whether this is a flawed reasoning or not As an example one might want to model the correlation between the Poisson OLRE and the standard deviation of a gaussian model like this bfpoissonmean x cobspoisson bfgaussianmean x cobsgaussian One workaround today is to fix the gaussian sigma to adding sigma I suppose that this is a valid approach since the correlation is independent of the size of the standard deviations of both random intercepts My suggestion is to add some kind of special response term for the sigma to note that the correlation between that parameter and the random intercept for the Poisson model should be modeled something like this bfpoissonmean x cobspoisson bfgaussianmean x sigmacorc gaussian I suppose that would be possible to extend to correlation of other response terms as well Both rstanarm and brms have posteriorpredict with different arguments and sometimes do the same It would be useful that when I use draws for example instead of nsamples in posteriorpredict it would either accept it or throw an error Now it silently ignores it The ability to fix parameters has been requested in several places for instance in Fixing parameters to certain values is a special case of prior specification with a point mass delta distribution basically and so the prior argument seems a natural place to put this feature in bbbales proposed to use the fixed prior name as in R setpriorfixed class sd which seems reasonable to me As this feature touches a lot of other features the internal interface created for this purpose needs to be carefully designed and take special cases into account where we want to fix only certian values of a parameter vector for example Say we are modeling a distributional parameter like the example in the vignette zinb readcsv fitzinb brmbfcount persons child camper zi child data zinb family zeroinflatedpoisson and we want to get a fitted value for the distributional parameter for a particular predictor value fittedfitzinb newdata dataframechild dpar zi we get the following error Error The following variables are missing in data persons camper even though the model for zi does not include those variables which are only in the model for the count response This is a very minor issue but it would be ideal if the code checked the variables in the newdata dataframe against the model for the dpar 