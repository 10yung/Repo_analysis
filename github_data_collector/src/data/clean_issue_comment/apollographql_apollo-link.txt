The example currently logged undefined Perhaps the API it fetched from changed recently This update makes it correctly log Luke Skywalker Thanks for filing a pull request on Apollo Link Please look at the following checklist to ensure that your PR can be accepted quickly TODO x Make sure all of new logic is covered by tests and passes linting x Update CHANGELOGmd with your change This PR contains the following updates Package Type Update Change rolluppluginsourcemaps devDependencies minor Release Notes details summarymaxdavidsonrolluppluginsourcemapssummary v Compare Source Drop support for Node lt and make use of ES features Switch from Babel to TypeScript Remove jsnextmain field from packagejson details Renovate configuration date Schedule after pm every weekdaybefore am every weekday in timezone AmericaLosAngeles verticaltrafficlight Automerge Enabled recycle Rebasing Whenever PR is stale or if you modify the PR title to begin with rebase nobell Ignore Close this PR and you wont be reminded about this update again rebasecheck If you want to rebaseretry this PR check this box This PR has been generated by WhiteSource Renovate View repository job log here This PR contains the following updates Package Type Update Change typesnode devDependencies major Renovate configuration date Schedule after pm every weekdaybefore am every weekday in timezone AmericaLosAngeles verticaltrafficlight Automerge Disabled by config Please merge this manually once you are satisfied recycle Rebasing Whenever PR is stale or if you modify the PR title to begin with rebase nobell Ignore Close this PR and you wont be reminded about this update again rebasecheck If you want to rebaseretry this PR check this box This PR has been generated by WhiteSource Renovate View repository job log here Hi Ive created a custom apollolink Would you append a link about this to community link docs Not sure how to do this step without first opening a PR Update CHANGELOGmd with your change Expected Behavior If a mutationquery sent over a WebSocket doesnt respond back in time I dont want apollolinkws to try and post the same operation again Is this possible somehow Actual Behavior When the WebSocket client connection is closed due to timeout or whatever it is recreated and any pending mutationsqueries that were sent over the WebSocket will be retried This PR contains the following updates Package Type Update Change jestjunit devDependencies major Release Notes details summaryjestcommunityjestjunitsummary v Compare Source Add option to shorten console output by cisumla v Compare Source Ability to generate unique filenames for junitxml by andrcuns v Compare Source Remove support for output setting and improve flexibility of outputDirectory and outputName v Compare Source Fixes console output support details Renovate configuration date Schedule after pm every weekdaybefore am every weekday in timezone AmericaLosAngeles verticaltrafficlight Automerge Disabled by config Please merge this manually once you are satisfied recycle Rebasing Whenever PR is stale or if you modify the PR title to begin with rebase nobell Ignore Close this PR and you wont be reminded about this update again rebasecheck If you want to rebaseretry this PR check this box This PR has been generated by WhiteSource Renovate View repository job log here Im attempting to use apollolinkschema along with schema stitching but this doesnt appear possible since the schema option doesnt support promises Using graphql purely clientside is a common use case but the inability to pass in a promise the creation of a merged schema prevents me from using this package Can we add the ability to pass in a promise For now Im able to do the following js const clientLink new ApolloLinkoperation return new Observableobserver PromiseresolvecreateSchema thendata return execute data operationquery null operationgetContext operationvariables operationoperationName thendata if observerclosed observernextdata observercomplete catcherror if observerclosed observererrorerror But I would much prefer to use apollolinkschema which has a much cleaner and explicit syntax Expected Behavior Expected context arg in SchemaLink from apollolinkschema to allow async eg returning a promise Wanted to mirror this functionality Apollo Server allows context to be async because of these lines Actual Behavior context arg does not allow promises as a return Workaround is to await context in respective resolvers Workaround or override SchemaLinkrequest Workaround A simple reproduction Expect Hello User number Actual Hello Repro Workaround Workaround See ExtSchemaLinkjs as a possible solution Is there any way to selectively batch operations so that we do not batch certain operations specify a longer internal max count for certain operations