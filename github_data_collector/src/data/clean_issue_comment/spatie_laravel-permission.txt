Hi there It appears that scopeRole fires off a query to check each string or int that has been passed to it scopeWhereRole aims to reduce these additional queries by only using the query builder Examples App Userrole User Admin get will run the following queries select from roles where name User and guardname web limit select from roles where name Admin and guardname web limit select from users where exists select from roles inner join modelhasroles on rolesid modelhasrolesroleid where usersid modelhasrolesmodelid and modelhasrolesmodeltype App User and rolesid or rolesid and usersdeletedat is null While App UserwhereRole User Admin get will only run the one query select from users where exists select from roles inner join modelhasroles on rolesid modelhasrolesroleid where usersid modelhasrolesmodelid and modelhasrolesmodeltype App User and rolesname User and rolesguardname web or rolesname Admin and rolesguardname web and usersdeletedat is null It seems that the reason for the additional select from roles where queries in the original scopeRole function are because it does a check to see if the role exists or not if the role is not already an instanceof Role then it will query to see if the int id or string name are roles that actually exist if any do not exist then an exception will be triggered Personally Id prefer that scopeRole worked in the way that this PR has for scopeWhereRole as Id be willing to lose the exception in favour of reducing additional queries however I understand not everyone would want to hence opting to instead call the function scopeWhereRole Thanks Updated scopePermission in trait HasPermissionsphp fasterprettier than multiple orWhere fasterprettier than multiple orWhere Hello Im working on integrating auth into my project but I want to manage rolesperms at the DB level so Ive created a customRepository to store user profile in my local database but when trying to use Spatie can middleware I have this error thrown Symfony Component Debug Exception FatalThrowableError Argument passed to Spatie Permission PermissionRegistrarSpatie Permission closure must implement interface Illuminate Contracts Auth Access Authorizable instance of Auth Login Auth User given called in codevendorlaravelframeworksrcIlluminateAuthAccessGatephp on line I understand that the auth user model doesnt implement the authorizable contract Question is how can I work around this limitation my first instinct was to bind the authorizable contract to the auth user model but that didnt work thisappbind Illuminate Contracts Auth Access Authorizableclass Auth Login Auth Userclass Help would be greatly appreciated Hi there I have a database structure as follows I have web guards all setup and working fantastically Im using them fantastically in my web routes However when trying to use them in APIs they do not function Every user is blocked even a super admin assuming because in the database the roles are listed as web only This is an example of my API route file What is the best way to do this Is there a way to tell it to use web permissions for APIs Or am I missing something silly here v guard lookup currently looks to the models guardname property with fallbacks down to finally the first available guard in your config array of guards not the one listed as default Null doesnt disable this lookup So wherever you dont specify a guard when doing a permission check it does the lookup according to that pattern I just described Shouldnt it check the guard of logged in user like this function activeGuard foreach arraykeysconfigauthguards as guard if authguardguardcheck return guard return null How can I check based on the guard of user Originally posted by DaniyalJavani in Hi I add choosing specific guard for middleware i had really needed it Hi thanks for this awesome package i have a problem that is i have multiple guards web admin in Admin Model i have protected guardname admin and i have guard name for each permission in permissions table like the image below p the problem is when use can directive like canadminusersview it doesnt work not show the code that in it even if this admin is Super Admin or Admin also when use canadminusersview admin it doesnt work also but when use ifauthadminusercanadminusersview it works fine how i can use can only because is simple for code thanks in advance For cases permissions and permission checks for request usage of Illuminate Support Collectionwhere utilize up to of CPU Also why clone permissions Some patch reduces CPU consumption by for large complex applications patch Index vendorspatielaravelpermissionsrcPermissionRegistrarphp IDEA additional info Subsystem comintellijopenapidiffimplpatchCharsetEP UTF vendorspatielaravelpermissionsrcPermissionRegistrarphp date vendorspatielaravelpermissionsrcPermissionRegistrarphp date permissions clone thispermissions permissions thispermissions permissions thiscacherememberselfcacheKey implode params implode arraykeysparams selfcacheExpirationTime function foreach params as attr value permissions permissionswhereattr value return permissions Recently I have updated laravel to and spatielaravelpermission package to version And found out that permissions starts working very slow If its more than permission and roles for them it could even fail by execution time error within secons So I started to test it only with permission and role They process for ms on average thats not a good result for perm I tried to change cache driver no matter it is file or redis Works the same So I started to downgrade package step by step throug the releses list and found out that on version it works fine same permissions process only for ms thats times faster When I upgraded to the issue backed to ms So I think the problem somewhere in release Can you help me It becames very critical for my project and I cant back to because Ive updated laravel as well