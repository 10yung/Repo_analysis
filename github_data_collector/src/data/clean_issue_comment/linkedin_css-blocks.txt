A component using CSS Blocks will want to pass block styles to a template that is not using CSS Blocks In this case we can provide a helper that is rewritten to return a string hbs yield hash linkClassstyleof link listClassstyleof scope listItemClassstyleof listitem listItemActiveClassstyleof listitem listitem active The styleof helper should accept any number of arguments and treat them as if all of them will be applied to the same element The styleof helper should accept a styleif or styleunless call as the argument Eg styleof styleif isLoading listitem loading In this case it will be rewritten to an invocation of cssblocksclassnames instead of a string literal The use of the styleof helper will analyze the collection of styles as if they are all applied to the same element The output of styleof is only suitable as a value that is set as an html class attribute value within a template that is not using CSS Blocks Templates using CSS Blocks should use block composition and inheritance instead Caveats The output of styleof is opaque Any manipulation by javascript code of these values is unsupported and will probably break your application in production even if it appears to work in development The users of styles returned from styleof must be informed that classes returned cannot be composed with other values returned by a different invocation of styleof Composing the classes returned by styleof with classes not managed by css blocks can yield unpredictable results especially with selectors having specificity of less than an id selector and is generally discouraged When a template first becomes a CSS Blocks template because a stylesheet file is added that corresponds to the template file the persistent template cache does not appear to be invalidated Adding a new flag to the block that can make it faultTolerant When this is set to true the block instead of throwing errors adds errors onto itself resulting in possibility of the block containing multiple errors All the block parsing features have been updated in this PR to throw a multipleErrors error instead of a cssBlockError as it used to previously Tests have been updated as well TODO Update the vscode plugin to display all of these multiple errors The devDependency husky was updated from to This version is not covered by your current version range If you don t accept this pull request your project will work just like it did before However you might be missing out on a bunch of new features fixes andor performance improvements from the dependency update Publisher typicode License MIT details summaryRelease Notes for v summary ul liFix show error message when hook failsli ul details details summaryCommitssummary pThe new version differs by commitsp ul lia href code codeli lia href codefix show error message if hook failscodeli lia href code codeli lia href codeUpdate READMEmdcodeli lia href codefix add silent to yarncodeli lia href codeUpdate dependenciescodeli lia href code codeli lia href codeUpdate READMEmdcodeli lia href codeUpdate READMEmdcodeli lia href codeMerge codeli ul pSee the a href diffap details details summaryFAQ and helpsummary There is a collection of frequently asked questions If those don t help you can always ask the humans behind Greenkeeper details Your Greenkeeper bot palmtree Test folders are not there and embercli fails silently when checking the addon This creates a new npm package for converting BEM files to block files It also contains changes to the CLI that adds a convert method It iterates through the css file converting each of the classNames to comply with CSS blocks and rewrite the same file TODO The same should work for scss files Solve for when there is more than one block in a single file Add more tests around the plugin Proper optimization and analysis involving block passing requires that we analyze all the handlebars templates and stylesheets in a single pass scss gridblockscss scope width px boxsizing contentbox padding px display block margin auto position relative scss headerblockscss content display flex display resolvegrid Feels like this should be resolved by the cascade when using composes but acceptable for now height content widthfixed composes grid content widthfull margin resolvegrid is exclusive with content widthfixed so theres not a conflict margin itemspacing This fixes the broken badge in the readme The devDependency glimmerblueprint was updated from to This version is not covered by your current version range If you don t accept this pull request your project will work just like it did before However you might be missing out on a bunch of new features fixes andor performance improvements from the dependency update Publisher rwjblue License MIT Find out more about this release details summaryFAQ and helpsummary There is a collection of frequently asked questions If those don t help you can always ask the humans behind Greenkeeper details Your Greenkeeper bot palmtree 