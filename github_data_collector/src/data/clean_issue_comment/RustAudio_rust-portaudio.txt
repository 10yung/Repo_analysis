As found in RustAudiosynth At this line of the example whenever a synth is started sounds never stop playing as the time and the counter do not flow TIMER TIME OutputCallbackTimeInfo current bufferdac TIMER TIME OutputCallbackTimeInfo current bufferdac TIMER TIME OutputCallbackTimeInfo current bufferdac TIMER TIME OutputCallbackTimeInfo current bufferdac TIMER TIME OutputCallbackTimeInfo current bufferdac TIMER TIME OutputCallbackTimeInfo current bufferdac TIMER TIME OutputCallbackTimeInfo current bufferdac TIMER TIME OutputCallbackTimeInfo current bufferdac TIMER TIME OutputCallbackTimeInfo current bufferdac TIMER I experienced an issue where portaudio is not detected during the build process even if pkgconfig and portaudio which results in an attempt to build portaudio which fails on systems with newer versions of xcode installed Having been chasing myself around in circles for a few hours I have determined that the issue was that PKGCONFIGPATH was not properly set meaning that pkgconfig could not find the version of portaudio installed by brew This problem was solved by setting PKGCONFIGPATHusrlocallibpkgconfig It might be useful to either set this in the build script or to mention it as a solution in the documentation Hi all I no longer have the time or motivation to manage the rustportaudio crate These days most of my efforts have been going into CPAL a pureRust alternative As a result I find it difficult to prioritise issues and PRs here If anyone would like to step in as the maintainer for the crate they would be more than welcome Id be happy to add them as an administrator to the RustAudio organisation if they are not already so Portaudio was installed by cargo while building RustAudio synth It produced a linker error which I traced back to portaudio Building portaudio requires the Ubuntu package portaudio dev to be installed first OS is Ubuntuderived LTS Im new to Rust and Cargo and not aware of how cargo resolves or detects these dependencies or if it is able to If possible a more comprehensible explanation of the error would be nice rather than about undefined reference messages Better still suggest or even install the package use portaudio for hw access use houndWavWriter for encoding stream to wav This may simply serve as an example how to build portaudio using the cc crate I added the portaudio sources from latest release directly in the project I dont know how others feel about that but it is by far the most convenient and safest way macOS and Windows msvc builds work well I have not tested on linux yet On Win using a build script override for portaudio I get this warning Running rustc cratename portaudiosys rustportaudiosys src librs c ratetype rlib emitdepinfolink C debuginfo C metadata b bd cd ea C extrafilename b bd cd ea outdir D projects forks rustportaudio t arget debug deps L dependencyD projects forks rustportaudio target debug dep s L D rdparty rustlibs bit l portaudio warning redundant linker flag specified for library portaudio Hello streamclose for non blocking streams occasionally hangs I have only seen it happen when the code is not optimized usually after many buffer xrun Havent seen happening in release builds no xrun Im running the entire audio system in a separate thread if it helps rust impl SoundSystem for ThreadedSoundSystem fn new ResultThreadedSoundSystem selfError let portaudio paPortAudionew infoDetected devices portaudiodevicecount let settings portaudiodefaultoutputstreamsettingsf CHANNELS SAMPLEHZ FRAMES let tx rx channel let dsp ArcnewMutexnewmultiplexerMultiplexernew let dsphandle dspclone let callback move paOutputStreamCallbackArgs buffer let buffer mut f CHANNELS as usize buffertoframeslicemutunwrap samplesliceequilibriumbuffer uhm what dsphandlelockunwrapaudiorequestedbuffer SAMPLEHZ as f paContinue let mut stream portaudioopennonblockingstreamsettings callback expectUnable to open audio stream failure in audio thread let soundthread threadBuildernewnameSoundControltostringspawnmove let threadid threadnativeid assertsetthreadprioritythreadid ThreadPriorityMax ThreadSchedulePolicyNormalNormalThreadSchedulePolicyNormalisok infoStarted sound control thread streamstartexpectUnable to start audio stream soundmain loop match rxrecv OkSoundEffectEof infoRequested termination exiting break soundmain Oksoundeffect dsplockunwraptriggersoundeffect Errmsg warnReceived error msg break soundmain infoClosing audio stream match streamclose this line often hangs Errmsg errorUnable to close audio stream msg Ok infoClose audio stream infoTerminating portaudio system portaudioterminateexpectUnable to terminate portaudio session infoTerminated sound control thread OkThreadedSoundSystem soundthread Somesoundthread trigger tx fn open mut self Result selfError Ok fn close mut self Result selfError selftriggersendSoundEffectEofok let result selfsoundthreadtakeunwrapjoin match result Ok Ok Err ErrselfErrorThreadJoin Heres the stack trace for all running threads Thread Thread x fffd bff LWP x ffff b in pthreadcondwaitGLIBC from libx linuxgnulibpthreadso x fffee e c in pathreadedmainloopwait from usrlibx linuxgnulibpulseso x fffea fa in pulsewaitoperation from usrlibx linuxgnualsaliblibasoundmodulepcmpulseso x fffea f c in from usrlibx linuxgnualsaliblibasoundmodulepcmpulseso x ffff ec in from usrlibx linuxgnulibasoundso x ffff a in sndpcmdrop from usrlibx linuxgnulibasoundso x adf bb in AlsaStop streamstreamentry x ffff a c abortoptimized out at srchostapialsapalinuxalsac x ae dba in OnExit data x ffff a c at srchostapialsapalinuxalsac x ae d in CallbackThreadFunc userData x ffff a c at srchostapialsapalinuxalsac x ffff b a in startthread from libx linuxgnulibpthreadso x ffff fabf in clone from libx linuxgnulibcso Thread Thread x fffda f LWP x ffff b b cd in pthreadjoin from libx linuxgnulibpthreadso x addaad in PaUnixThreadTerminate selfselfentry x ffff a d waitoptimized out exitResultexitResultentry x fffda f f c at srcosunixpaunixutilc x ae cfc in RealStop stream x ffff a c abortoptimized out at srchostapialsapalinuxalsac x add in PaCloseStream stream x ffff a c at srccommonpafrontc x a in portaudiostreamimplcloseportaudiostreamNonBlockingportaudiostreamOutputf self x fffda f at homenicocargoregistrysrcgithubcom ecc db ec portaudio srcstreamrs x c b in rustoidsfrontendaudioimplnewclosure at srcfrontendaudiomodrs x a in stdsyscommonbacktracerustbeginshortbacktraceclosure f at checkoutsrclibstdsyscommonbacktracers x a in stdthreadimplspawnclosureclosureclosure at checkoutsrclibstdthreadmodrs x e b in stdpanicimplcallonceclosure self args at checkoutsrclibstdpanicrs x in stdpanickingtrydocallstdpanicAssertUnwindSafeclosure data x fffda f at checkoutsrclibstdpanickingrs x b b f in panicunwindrustmaybecatchpanic at checkoutsrclibpanicunwindlibrs x ad in stdpanickingtrystdpanicAssertUnwindSafeclosure f at checkoutsrclibstdpanickingrs x a in stdpaniccatchunwindstdpanicAssertUnwindSafeclosure f at checkoutsrclibstdpanicrs x a in stdthreadimplspawnclosureclosure at checkoutsrclibstdthreadmodrs x e b in allocboxedimplcallboxclosure self x fffefaf a args at checkoutsrcliballocboxedrs x b d c in allocboxedimplcallonce at checkoutsrcliballocboxedrs stdsyscommonthreadstartthread at checkoutsrclibstdsyscommonthreadrs stdsysimpthreadimplnewthreadstart at checkoutsrclibstdsysunixthreadrs x ffff b a in startthread from libx linuxgnulibpthreadso x ffff fabf in clone from libx linuxgnulibcso Thread Thread x fffe f LWP x ffff b c in pthreadmutexlockfull from libx linuxgnulibpthreadso x fffee ddce in pamutexlock from usrlibx linuxgnupulseaudiolibpulsecommon so x fffee e bb in from usrlibx linuxgnulibpulseso x fffee d in pamainlooppoll from usrlibx linuxgnulibpulseso x fffee d in pamainloopiterate from usrlibx linuxgnulibpulseso x fffee d in pamainlooprun from usrlibx linuxgnulibpulseso x fffee e f in from usrlibx linuxgnulibpulseso x fffee ec in from usrlibx linuxgnupulseaudiolibpulsecommon so x ffff b a in startthread from libx linuxgnulibpthreadso x ffff fabf in clone from libx linuxgnulibcso Thread Thread x ffff fc LWP x ffff b b cd in pthreadjoin from libx linuxgnulibpthreadso x b d f in stdsysimpthreadimpljoin at checkoutsrclibstdsysunixthreadrs x a d in stdthreadimpljoin self x fffffff c at checkoutsrclibstdthreadmodrs x ac in stdthreadimpljoin self at checkoutsrclibstdthreadmodrs x b in rustoidsfrontendaudioimplclose self x fffffffd at srcfrontendaudiomodrs x dc in rustoidsfrontendaudioimplcloserustoidsfrontendaudioThreadedSoundSystem self x fffffffd at srcfrontendaudiomodrs x c in rustoidsfrontendaudioimpldroprustoidsfrontendaudioThreadedSoundSystem self x fffffffd at srcfrontendaudiomodrs x in coreptrdropinplacerustoidsfrontendaudioSoundSystemAlertPlayerrustoidsfrontendaudioThreadedSoundSystem at checkoutsrclibcoreptrrs x db e in rustoidsappmainmainloop miniongenepool fullscreen width height at srcappmainrs x d e in rustoidsapprun args at srcappmodrs x ac f in rustoidsmain at srcmainrs x b b f in panicunwindrustmaybecatchpanic at checkoutsrclibpanicunwindlibrs x b eadc in stdpanickingtryclosure at checkoutsrclibstdpanickingrs stdpaniccatchunwindclosure at checkoutsrclibstdpanicrs stdrtlangstart at checkoutsrclibstdrtrs x ac de in main x ffff e in libcstartmain from libx linuxgnulibcso x a in start Hi folks I was fiddling with the library and implemented an example of doing the input and output streams separately I thought it would be nice to offer it back as an example since I dont see any other examples using a pure input stream theyre all either output streams or duplex streams This shows how audio might be handled in a context where its being sent to a file or where it needs to do some processing that cant fit into the strict time requirements of the callbacks This is heavily based on the existing nonblocking example and inspired by the C Portaudio recording example Im open for feedback on how to make the example better Looks like it would be relevant to Running cargo build with the toolchain stablei pcwindowsmsvc results in The application was unable to start correctly xc b when the build process tries to run buildscriptbuildexe buildscriptbuildexe seems to link against bit libraries while being bit itself I might be missing something here about the Windows development environment as I am gratendly not overtly familiar with it but Ive bit versions of MSVC and VC redistributables installed