 Summary Ammonite allows the creation of a predef file located in ammonitepredefsc This file is often times customizing the Ammonite experience heavily and as such contains library dependencies I would therefore argue that when using bloop console someproject the predef file should not be part of the Ammonite start up as this can and did in my case interfere with the projects setup and even lead to Ammonite crashing eg when a dependency in the predef is only available for versions of Scala that are different from the projects Additionally it simply seems more correct to me to not include any predefined code when using bloop console someproject This pull request passes the nohomepredef flag to Ammonite at startup Further Notes The startup flags for Ammonite can be found by issuing amm help The code changes have been tested locally with sbt frontendtestOnly ConsoleSpec It may make sense to allow the caller of bloop console someproject to pass all available Ammonite flags as a future improvement When Project B depends on Project A then Project As resources are added to the classpath of Project B Eg when compiling Project B using verbose the classpath contains E dev src A src main resourcesE dev bloop A build bloopinternalclasses bloopcli S VGcWuSWqcjKqOlWtxg If Project A doesnt have any classes ie it purely holds resources then these resources are missing from Project Bs classpath The path instead contains E dev bloop A build classes Notice the reference to Project As classes dir has changed as well Im guessing Bloop matches on these classes directories to decide whether to include resources in the classpath and is failing to match Project As resources directory should still be included in Bs classpath Heres a sample file for Project A version project name Config directory E dev src A workspaceDir E dev sources dependencies classpath out E dev bloop A build classesDir E dev bloop A build classes resources E dev src A src main resources java options source target g sourcepath procnone XDuseUnsharedTabletrue Xlintunchecked Xlintdeprecation platform name jvm config home C Program Files Java jdk options mainClass resolution modules I have a required applicationconf setting KAFKABOOTSTRAPSERVERS in mainresourcesapplicationconf which I override in testresourcesapplicationconf When I run sbt clean test the build passes but with bloop it fails to read the applicationconf in the test resources folder and I get comrewardsnetworkdecisionatorpersistenceDataAccessSpec ABORTED pureconfigerrorConfigReaderException Cannot convert configuration to a comrewardsnetworkdecisionatorconfigDecisionatorConfig Failures are fileUserskbreidenbachDevelopmentscaladffdecisionatorsrcmainresourcesapplicationconf Unable to parse the configuration Could not resolve substitution to a value KAFKABOOTSTRAPSERVERS at pureconfigmodulecatseffectpackageanonfunloadF packagescala at catssyntaxEitherOpsleftMapextensioneitherscala at pureconfigmodulecatseffectpackageanonfunloadF packagescala at catseffectinternalsIORunLoopstepIORunLoopscala at catseffectIOunsafeRunTimedIOscala at catseffectIOunsafeRunSyncIOscala at comrewardsnetworkdecisionatorpersistenceDataAccessSpecinitDataAccessSpecscala at sunreflectNativeConstructorAccessorImplnewInstance Native Method at sunreflectNativeConstructorAccessorImplnewInstanceNativeConstructorAccessorImpljava at sunreflectDelegatingConstructorAccessorImplnewInstanceDelegatingConstructorAccessorImpljava This may be a reintroduction of the bug from this issue bloop about bloop v RC Using Scala v and Zinc v M b accb Running on Java JDK v LibraryJavaJavaVirtualMachinesadoptopenjdk jdkContentsHome Supports debugging user code Java Debug Interface JDI is available Maintained by the Scala Center Jorge Vicente Cantero Martin Duhem When trying to run bloop test on an SBTbuilt mostlyjava project tsreaktive git clone gitgithubcomTradeshifttsreaktivegit sbt bloopInstall bloop test tsreaktiveactors javalangNullPointerException at bloopScalaInstancesupportsHydraScalaInstancescala at bloopdataProjectanonfunfromBytesAndOrigin Projectscala at bloopdataProjectanonfunfromBytesAndOrigin adaptedProjectscala at scalaOptionmapOptionscala at bloopdataProjectfromBytesAndOriginProjectscala at bloopengineBuildLoaderloadProjectBuildLoaderscala Apparently the compilerJar field is null in ScalaInstance The error message could potentially be improved couldnt find scala compiler by replacing orNull in the expression for that field However Im unsure whats really going on since I do recall having used bloop on JavaSBT projects with previous versions even having ran JUnit tests This is with bloop RC It seems I am getting more issues recently with deduplicating hanging in my workspace INFO tracing is disabled for protocol BSP to enable tracing of incoming and outgoing JSON messages create an empty file at hometgodzikcachemetalsbsptracejson INFO Connected to Build server v RC INFO time indexed workspace in s INFO Deduplicating compilation of inputtest from bsp client Metals c b SNAPSHOT since h m s INFO Deduplicating compilation of interfacestest from bsp client Metals c b SNAPSHOT since h m s INFO Deduplicating compilation of metals from bsp client Metals c b SNAPSHOT since h m s INFO compiling mtest scala sources INFO time compiled mtest in s jvican Any idea what is going on or where to look Killing the server usually works Set up the project with git clone recursive sbt compiles fine but with bloop compile rocketchip got this error Compiling rocketchip Scala sources Compiled rocketchip ms javalangAssertionError assertion failed ContextDecodescala owner method apply tree DefDefdef apply erroraddr error UInt default Seq BitPat mapping scope decls contextMode AmbiguousErrors MacrosEnabled TypeConstructorAllowed outerowner method apply This is part of an issue in and can be reproduced in ERROR hometgodzikDocumentsworkspaceslendingtargettestclasses javaniofileNoSuchFileException hometgodzikDocumentsworkspaceslendingtargettestclasses at sunniofsUnixExceptiontranslateToIOException UnixExceptionjava at sunniofsUnixExceptionrethrowAsIOException UnixExceptionjava at sunniofsUnixExceptionrethrowAsIOException UnixExceptionjava at sunniofsUnixPathtoRealPath UnixPathjava at bloopintegrationsmavenMojoImplementationbloopintegrationsmavenMojoImplementationabs MojoImplementationscala We need to check if the file exist before doing filetoPathtoRealPathtoAbsolutePath I will try to look at this soon unless someone wants to contribute Fixes See for reference The code property of Diagnostic seems to be intended for error code rather than source code After upgrading to v RC Bsp debug messages started being sent to stderr even without the verbose parameter I added some logic to detect the log level of messages This does not always work since there are lines that do not have the D or E prefix See also the CI log 