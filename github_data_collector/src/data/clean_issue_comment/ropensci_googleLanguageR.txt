We are now automatically generating pkgdown docs for all rOpenSci packages If youd like you can use this as the homepage But if you prefer to host your own thats fine too I originally had the same issue PranavPable was experiencing below and I figured out a solution that I thought Id document To make the writeWave output compatible with glspeech just set the parameter extensible equal to FALSE r Doesnt work readWavefoowav writeWavebarwav by default extensible TRUE glspeechbarwav sampleRateHertz L Request Status Code Error API returned WAV header indicates an unsupported format Works readWavefoowav writeWavebarwav extensible FALSE glspeechbarwav sampleRateHertz L Originally posted by PranavPable in I am getting this error on passing a wav file into readwave function API returned WAV header indicates an unsupported format Hi Im new to GitHub and APIs so I apologise if this isnt a proper issue Im running googleLanguageR out of Rstudio and trying to transcribe speech to text a sound file about minutes long speakers but the speaker diarization option wont run Code below longtest gs bucket longtestwav async glspeechlongtest languageCode enGB sampleRateHertz asynch TRUE encoding LINEAR enableSpeakerDiarization TRUE diarizationSpeakerCount Without the final options it works fine but I need the speaker tags and with those options I get the below error Error in glspeechlongtest languageCode enGB sampleRateHertz unused arguments enableSpeakerDiarization TRUE diarizationSpeakerCount Am I missing something obvious or is there a problem with the speaker diarization options Got error from Added a simple check on the file size for the request Hi all Im using the googleLanguageR package version to transcribe German phone calls to text with the Google Speechtotext API speaker diarization is turned on two speakers However whenever I want to transcribe a file which is longer than seconds ie I store it in a Cloud Bucket and then access it via the URI it gives me a warning message Here is my code myconfig listencoding LINEAR enableSpeakerDiarization TRUE diarizationSpeakerCount testcall gs bucket testcallwav apicall glspeechtestcall sampleRateHertz languageCode deDE asynch TRUE customConfig myconfig testcalltranscript glspeechopapicall The transcription is successful but R gives me this warning message Warning message In value L cond Could not parse object with names What this error causes is that the structure of the two returend dataframes seems to be a little mixed up When I call strtestcalltranscript it gives me the following output List of transcriptClasses tbldf tbl and dataframe obs of variables transcript chr ja hallo ja und vergebe Zusatzdaten und zwar hat er was mache ich als nicht anzumerken ist einfach machen und wie hei t die Variable die drin da diese Datei ein Kratzer nennst Zusatzdaten Zusatzdaten vorgangsid nicht truncated confidence chr timings List of dataframe obs of variables transcript chr ja hallo ja und vergebe Zusatzdaten und zwar hat er was mache ich als nicht anzumerken ist einfach machen confidence num words List of dataframe obs of variables startTime chr s s s s endTime chr s s s s word chr ja hallo ja und dataframe obs of variables transcript chr und wie hei t die Variable die drin da diese Datei ein Kratzer nennst Zusatzdaten Zusatzdaten vorgangsid nicht truncated confidence num words List of dataframe obs of variables startTime chr s s s s endTime chr s s s s word chr ja hallo ja und speakerTag int Looks all fine BUT when I try to access the timings dataframe Im having trouble to access the speakerTag variable I need to access the speakerTag and the respective start and Endtimes in order to determine the time stamps when a speaker turn happens For a short file less than sec R gives me this output perfectly working transcriptshorttimingsspeakerTag For the long file R gives me this output testcalltranscripttimingsspeakerTag NULL Any ideas on how this can be fixed Extracting the speakerTags is crucial for my further data processing Thanks Hi guys not a real user but I just bumped to this repo Two of your headlines and read Google Cloud SpeechtoText API when I think you meant Google Cloud TexttoSpeech API it would be a nice addition in the glspeech function if you are working with audio files that have different hertz rates Unfortunately i was not able to find an r package that implements this function I tried to use the package to translate some text I checked the nchar amount which is within the daily limit sumnchararticlestotranslate I then used the command articlestranslated gltranslatearticlestotranslate target en format text source it which seemed to work until I received a daily limit exceeded error Now Google already billed me but no results were returned in R Is there a way to still get the result for example from temporary files somewhere on my harddisk Thanks for your help sessioninfo below sessionInfo R version Platform x w mingw x bit Running under Windows x build Service Pack Matrix products default locale LCCOLLATEGermanGermany LCCTYPEGermanGermany LCMONETARYGermanGermany LCNUMERICC LCTIMEGermanGermany attached base packages stats graphics grDevices utils datasets methods base other attached packages googleLanguageR rDNA dplyr rJava Its a good long wait in the Shiny app at the moment as the API is more suited to batch calls For true babel fish goodness streaming API is needed but that is only supported via rpc Some possibilities for supporting that are gRPC rprotobuf Wrapping python 