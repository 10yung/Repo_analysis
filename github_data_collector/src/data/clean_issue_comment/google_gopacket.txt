I found pcapgoReaderReadPacketDat get wrong TimeStamp it does not consider the time zone issue However the packetsourceNextpacket is correct For Beacon frames I can use layerlayersDot InformationElement to get the IE like this for layer range packetLayers if layerLayerType layersLayerTypeDot InformationElement dot info ok layerlayersDot InformationElement but for ProbeReq frames layerlayersDot InformationElementdoesnt exist I can only use packetLayerlayersLayerTypeDot MgmtProbeReqlayersDot MgmtProbeReq to get the Contents and Payload It seems that the Information elements are in the Contents Im new to golang could you please give me an example of how to decode information elements in DOt MgmtProbeReq Thanks MacBook Pro inch macOS catalina When I run this example this is my result panic router only implemented in linux Does this package not support my device Currently if a SIP packet is truncated the parser does not indicate this The fix calls SetTruncated if this condition is detected SIP packets can be considered as truncated if each line does not end in a CRLF Im working with reassembly trying to understand when the assembler should deliver TCP data from the underlying streams to my application In addition to stream lifecycle events and periodic flushing what other criteria does reassembly use Specifically Im looking at behavior for PSH and URG flags set in TCP packets I expect those flags to cause immediate delivery but Im not seeing it If the feature is there please tell me Im looking at tcpassemblygo and dont see any hint of it If the feature is not there and theres interest Ill work on a patch for this best regards Ryan When use go mod module cannot use some struct such as pcapgoEthernetHandle I found build linuxgo in gopacketcapturegomy go version is Is sub module cannot be used if go version is not If you attempt to parse a truncated or partial SIP message the parser does not throw any type of error when used as parser gopacketNewDecodingLayerParser layersLayerTypeSIP sip I believe there should a call to SetTruncated in the SIP parser where Read next line line err bufferReadBytesbyte n if err nil if err ioEOF break else return err should actually be Read next line line err bufferReadBytesbyte n if err nil if err ioEOF if lenbytesTrimline r n dfSetTruncated break else return err TPacketZeroCopyReadPacketData is called in a goroutine and it blocking that goroutine I want to cancel that goroutine by calling TPacketClose in other gorouting but panic occurred To align with golang convention it should be safe to call TPacketClose method in other goroutine and the calling of ZeroCopyReadPacketData should return after the calling of Close goroutine running runtimethrow x fed x snapgo srcruntimepanicgo x fp xc c sp xc c pc x ebd runtimesigpanic snapgo srcruntimesignalunixgo x de fp xc c sp xc c pc x ae githubcomgooglegopacketafpacketv headergetStatus x f b x homekerygosrcgithubcomgooglegopacketafpacketheadergo x fp xc c sp xc c pc x f githubcomgooglegopacketafpacketTPacketpollForFirstPacket xc c x ed x f b x c c xc a homekerygosrcgithubcomgooglegopacketafpacketafpacketgo x e fp xc cd sp xc c pc x cce githubcomgooglegopacketafpacketTPacketZeroCopyReadPacketData xc c xc x c e xc x x x x x x homekerygosrcgithubcomgooglegopacketafpacketafpacketgo x fp xc d sp xc cd pc x simdatatunnelGtpuConnRead xc b xc ec x ec x ec x x x Made layer compatible with DecodingLayer by moved packet parsing into DecodeFromBytes function no parsing changed used DecodeFromBytes in layer decode function added CanDecode and NextLayerType functions as well Change NgOption structure and some structure fields to be public Add optional parameters NgOption to WritePacket Add option to NgReader for enabledisable reading options Add test and benchmark for readwrite packets with options Change some test function add tRun to be more easy find error testcase