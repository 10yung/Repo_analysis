Ex For whenfilters SimpleLayout l whenwhenlevelLogLevelInfoinnerGoodelseBad Resolves NLog version Platform Net NET Core Current NLog config xml nlog xmlns xmlnsxsi targets target namelogconsole xsitypeConsole target xsitypefile namelogfile deleteOldFileOnStartuptrue fileNamestructlogsjson layout xsitypeJsonLayout attribute nametime layoutlongdate attribute namelevel layoutlevelupperCasetrue attribute namemessage layoutmessage attribute nameeventProperties encodefalse layout typeJsonLayout includeAllPropertiestrue maxRecursionLimit renderEmptyObjectfalse attribute attribute namescope encodefalse layout typeJsonLayout includeMdlctrue maxRecursionLimit renderEmptyObjectfalse attribute layout target target nameasynclogfile xsitypeAsyncWrapper queueLimit overflowActionDiscard target xsitypefile deleteOldFileOnStartuptrue fileNameasyncstructlogsjson layout xsitypeJsonLayout attribute nametime layoutlongdate attribute namelevel layoutlevelupperCasetrue attribute namemessage layoutmessage attribute nameeventProperties encodefalse layout typeJsonLayout includeAllPropertiestrue maxRecursionLimit renderEmptyObjectfalse attribute attribute namescope encodefalse layout typeJsonLayout includeMdlctrue maxRecursionLimit renderEmptyObjectfalse attribute Uncomment this line to fix includeMdlc attribute nameExplicitScopeKey layoutmdlcScopeKey layout target target targets rules logger name minlevelDebug writeTologfile logger name minlevelDebug writeToasynclogfile logger name minlevelDebug writeTologconsole rules nlog Code for testing c using NLog namespace TestLogScope class Program static void Mainstring args var logger LogManagerGetCurrentClassLogger loggerInfoLog before scope using MappedDiagnosticsLogicalContextSetScopedScopeKey loggerInfoLog inside Mdlc scope Param In the logfile target the layout layout typeJsonLayout includeMdlctrue maxRecursionLimit renderEmptyObjectfalse output correctly the scoped MDLC time level INFO message Log before scope time level INFO message Log inside Mdlc scope eventProperties Param scope ScopeKey But the scope data is not output in the asynclogfile target even if the config is identical time level INFO message Log before scope time level INFO message Log inside Mdlc scope eventProperties Param If you explicitly use the mdlc layout renderer by uncommenting the line attribute nameExplicitScopeKey layoutmdlcScopeKey in the config then it fix the JsonLayout with includeMdlc in addition to output the ExplicitScopeKey attribute time level INFO message Log before scope time level INFO message Log inside Mdlc scope eventProperties Param scope ScopeKey ExplicitScopeKey Alternative version of Improve performance with help from transactions DbCommands will not be committed individually but will be committed as a single transactionchunk This will reduce the number of requests sent to the databaseinstance so less networklatency overhead There is one downside When a single LogEvent in a batch has problems then it will also cause all other LogEvents in the same batch to fail NestedDiagnosticsLogicalContextPushfoo NestedDiagnosticsLogicalContextPushbar rendered with the NdlcLayoutRenderer leads to foo bar rendered with the Log JXmlEventLayoutRenderer leads to bar foo I have the setting below target nameasyncFile xsitypeAsyncWrapper queueLimit overflowActionBlock target xsitypeFile fileNamestoragesdcard commyappLogsshortdatelog archiveFileNamestoragesdcard commyappLogsarchivedlog maxArchiveFiles archiveDateFormatyyyyMMdd archiveAboveSize archiveEveryDay archiveNumberingDateAndSequence concurrentWritestrue keepFileOpenfalse layout xsitypeJsonLayout includeAllPropertiestrue excludePropertiesCommaseparated list string attribute nametime layoutlongdate attribute namelevel layoutlevelupperCasetrue attribute namemessage layoutmessage attribute nameexception layoutexception attribute namethreadid layoutthreadid layout target target Expected behaviours No more than archived files are generated and each has a maximum size of MB archived log archived log archived log archived log archived log Actual behaviours One archived file has more MB Any idea With that feature its possible to archive the old file on startup when a certain size threshold is reached By enabling this you can ensure that the current application session is always in the same file but still have some kind of size based archival Could also be comined with other archival options We have successfully integrated our Xamarin Forms application with Azure Application Insights using MicrosoftApplicationInsightsNLogTarget Its working perfect in online scenarios Our app has an offline capability so how can we enable offline scenarios also with MicrosoftApplicationInsightsNLogTarget Is there any samples for the same Hi Im getting a stack overflow exception which is killing my application when multiple processes are writing to the same log file It specifically happens when I hook up to log out first chance exceptions AppDomainCurrentDomainFirstChanceException CurrentDomainOnFirstChanceException Here is a program which repros this issue static class Program private static readonly ILogger Logger LogManagerGetCurrentClassLogger static void Mainstring args AppDomainCurrentDomainFirstChanceException CurrentDomainOnFirstChanceException string processName if argsLength processName for int i i i ProcessStartAssemblyGetEntryAssemblyLocation iToString else processName args bool running true ConsoleCancelKeyPress sender eventArgs running false shutdown on ControlC int j while running LoggerInfo Happily Running Still processName j j ThreadSleep public static void CurrentDomainOnFirstChanceExceptionobject sender FirstChanceExceptionEventArgs e LoggerErroreException Current Domain On First Chance Exception nlog xmlns xmlnsxsi internalLogFileC logs logtxt internalLogLevelTrace targets target namefile xsitypeFile layoutlongdate threadid level logger message fileNamec logPath logfilelog archiveFileNamec logPath logfilelog archiveAboveSize maxArchiveFiles concurrentWritestrue keepFileOpentrue encodingiso target nameConsole typeconsole targets rules logger name minlevelDebug writeTofile rules nlog package version xml version encodingutf packages package idNLog version targetFrameworknet packages 