Hi How i can set fake value for canvas and webgl fingerprints in puppeteer Pretty selfexplanatory Im using VS and NET Core for my project and needed to ensure puppeteersharp would work with it ERROR pplicationVesselRipperSpiderAppService LONG BEACHCASTA Failed to launch Chromium ERRORmessagewindowcc Failed to create a messageonly window x ERRORgoogleupdatesettingscc Failed opening key Software Chromium to set usagestats result FATALstatustraywincc Check failed atom Backtrace ovlydebugevent x FFEC ovlydebugevent x FFEC ovlydebugevent x FFEC RelaunchChromeBrowserWithNewCommandLineIfNeeded x FFEC AA RelaunchChromeBrowserWithNewCommandLineIfNeeded x FFEC ADC RelaunchChromeBrowserWithNewCommandLineIfNeeded x FFEC F C DD RelaunchChromeBrowserWithNewCommandLineIfNeeded x FFEC F C AB RelaunchChromeBrowserWithNewCommandLineIfNeeded x FFEC IsSandboxedProcess x FFEC D D ovlydebugevent x FFEC E GetHandleVerifier x FFEC A FC IsSandboxedProcess x FFEC D IsSandboxedProcess x FFEC EB C IsSandboxedProcess x FFEC E E E IsSandboxedProcess x FFEC E IsSandboxedProcess x FFEC E E ovlydebugevent x FFEC EAC ovlydebugevent x FFEC E C ovlydebugevent x FFEC DF F RelaunchChromeBrowserWithNewCommandLineIfNeeded x FFEC F E RelaunchChromeBrowserWithNewCommandLineIfNeeded x FFEC DFA A RelaunchChromeBrowserWithNewCommandLineIfNeeded x FFEC DF ovlydebugevent x FFEC ovlydebugevent x FFEC BA D F ovlydebugevent x FFEC ovlydebugevent x FFEC C ovlydebugevent x FFEC EC ovlydebugevent x FFEC FCD E ovlydebugevent x FFEC FCDD ovlydebugevent x FFEC FCDACD ovlydebugevent x FFEC FF F ovlydebugevent x FFEC FCD E ChromeMain x FFEC E BD Ordinal x FF A D F Ordinal x FF A D D GetHandleVerifier x FF A E B C BaseThreadInitThunk x FFF A D RtlUserThreadStart x FFF E E B at PuppeteerSharpChromiumProcessStateStartingStateStartCoreAsyncChromiumProcess p at PuppeteerSharpChromiumProcessStateStartingStateStartCoreAsyncChromiumProcess p at PuppeteerSharpLauncherLaunchAsyncLaunchOptions options at PuppeteerSharpLauncherLaunchAsyncLaunchOptions options at COSpiderApplicationVesselRipperSpiderAppServiceCreateBrowserCarrierConfigs item CrawConfig crawConfig LaunchOptions options in D project Cityocean COSpider src COSpiderApplication Spider SpiderAppServicecsline at PollyAsyncPolicycDisplayClass ImplementationAsyncb dMoveNext End of stack trace from previous location where exception was thrown at PollyRetryAsyncRetryEngineImplementationAsync TResult Func action Context context CancellationToken cancellationToken ExceptionPredicates shouldRetryExceptionPredicates ResultPredicates shouldRetryResultPredicates Func onRetryAsync Int permittedRetryCount IEnumerable sleepDurationsEnumerable Func sleepDurationProvider Boolean continueOnCapturedContext PuppeteerSharpChromiumProcessException Failed to launch Chromium ERRORmessagewindowcc Failed to create a messageonly window x ERRORgoogleupdatesettingscc Failed opening key Software Chromium to set usagestats result FATALstatustraywincc Check failed atom Backtrace ovlydebugevent x FFEC ovlydebugevent x FFEC ovlydebugevent x FFEC RelaunchChromeBrowserWithNewCommandLineIfNeeded x FFEC AA RelaunchChromeBrowserWithNewCommandLineIfNeeded x FFEC ADC RelaunchChromeBrowserWithNewCommandLineIfNeeded x FFEC F C DD RelaunchChromeBrowserWithNewCommandLineIfNeeded x FFEC F C AB RelaunchChromeBrowserWithNewCommandLineIfNeeded x FFEC IsSandboxedProcess x FFEC D D ovlydebugevent x FFEC E GetHandleVerifier x FFEC A FC IsSandboxedProcess x FFEC D IsSandboxedProcess x FFEC EB C IsSandboxedProcess x FFEC E E E IsSandboxedProcess x FFEC E IsSandboxedProcess x FFEC E E ovlydebugevent x FFEC EAC ovlydebugevent x FFEC E C ovlydebugevent x FFEC DF F RelaunchChromeBrowserWithNewCommandLineIfNeeded x FFEC F E RelaunchChromeBrowserWithNewCommandLineIfNeeded x FFEC DFA A RelaunchChromeBrowserWithNewCommandLineIfNeeded x FFEC DF ovlydebugevent x FFEC ovlydebugevent x FFEC BA D F ovlydebugevent x FFEC ovlydebugevent x FFEC C ovlydebugevent x FFEC EC ovlydebugevent x FFEC FCD E ovlydebugevent x FFEC FCDD ovlydebugevent x FFEC FCDACD ovlydebugevent x FFEC FF F ovlydebugevent x FFEC FCD E ChromeMain x FFEC E BD Ordinal x FF A D F Ordinal x FF A D D GetHandleVerifier x FF A E B C BaseThreadInitThunk x FFF A D RtlUserThreadStart x FFF E E B at PuppeteerSharpChromiumProcessStateStartingStateStartCoreAsyncChromiumProcess p at PuppeteerSharpChromiumProcessStateStartingStateStartCoreAsyncChromiumProcess p at PuppeteerSharpLauncherLaunchAsyncLaunchOptions options at PuppeteerSharpLauncherLaunchAsyncLaunchOptions options at COSpiderApplicationVesselRipperSpiderAppServiceCreateBrowserCarrierConfigs item CrawConfig crawConfig LaunchOptions options in D project Cityocean COSpider src COSpiderApplication Spider SpiderAppServicecsline at PollyAsyncPolicycDisplayClass ImplementationAsyncb dMoveNext End of stack trace from previous location where exception was thrown at PollyRetryAsyncRetryEngineImplementationAsync TResult Func action Context context CancellationToken cancellationToken ExceptionPredicates shouldRetryExceptionPredicates ResultPredicates shouldRetryResultPredicates Func onRetryAsync Int permittedRetryCount IEnumerable sleepDurationsEnumerable Func sleepDurationProvider Boolean continueOnCapturedContext ERROR pplicationVesselRipperSpiderAppService LONG BEACHCASTA Failed to create connection at PuppeteerSharpLauncherLaunchAsyncLaunchOptions options at PuppeteerSharpLauncherLaunchAsyncLaunchOptions options at COSpiderApplicationVesselRipperSpiderAppServiceCreateBrowserCarrierConfigs item CrawConfig crawConfig LaunchOptions options in D project Cityocean COSpider src COSpiderApplication Spider SpiderAppServicecsline at PollyAsyncPolicycDisplayClass ImplementationAsyncb dMoveNext End of stack trace from previous location where exception was thrown at PollyRetryAsyncRetryEngineImplementationAsync TResult Func action Context context CancellationToken cancellationToken ExceptionPredicates shouldRetryExceptionPredicates ResultPredicates shouldRetryResultPredicates Func onRetryAsync Int permittedRetryCount IEnumerable sleepDurationsEnumerable Func sleepDurationProvider Boolean continueOnCapturedContext PuppeteerSharpChromiumProcessException Failed to create connection SystemNetWebSocketsWebSocketException Unable to connect to the remote server SystemNetHttpHttpRequestException An error occurred while sending the request SystemIOIOException Unable to read data from the transport connection SystemNetSocketsSocketException End of inner exception stack trace at SystemNetSocketsSocketAwaitableSocketAsyncEventArgsThrowExceptionSocketError error at SystemNetSocketsSocketAwaitableSocketAsyncEventArgsGetResultInt token at SystemNetHttpHttpConnectionFillAsync at SystemNetHttpHttpConnectionReadNextResponseHeaderLineAsyncBoolean foldedHeadersAllowed at SystemNetHttpHttpConnectionSendAsyncCoreHttpRequestMessage request CancellationToken cancellationToken End of inner exception stack trace at SystemNetHttpHttpConnectionSendAsyncCoreHttpRequestMessage request CancellationToken cancellationToken at SystemNetHttpHttpConnectionPoolSendWithNtConnectionAuthAsyncHttpConnection connection HttpRequestMessage request Boolean doRequestAuth CancellationToken cancellationToken at SystemNetHttpHttpConnectionPoolSendWithRetryAsyncHttpRequestMessage request Boolean doRequestAuth CancellationToken cancellationToken at SystemNetHttpRedirectHandlerSendAsyncHttpRequestMessage request CancellationToken cancellationToken at SystemNetWebSocketsWebSocketHandleConnectAsyncCoreUri uri CancellationToken cancellationToken ClientWebSocketOptions options End of inner exception stack trace at SystemNetWebSocketsWebSocketHandleConnectAsyncCoreUri uri CancellationToken cancellationToken ClientWebSocketOptions options at SystemNetWebSocketsClientWebSocketConnectAsyncCoreUri uri CancellationToken cancellationToken at PuppeteerSharpTransportWebSocketTransportCreateDefaultWebSocketUri url IConnectionOptions options CancellationToken cancellationToken at PuppeteerSharpTransportWebSocketTransportCreateDefaultTransportUri url IConnectionOptions connectionOptions CancellationToken cancellationToken at PuppeteerSharpConnectionCreateString url IConnectionOptions connectionOptions ILoggerFactory loggerFactory CancellationToken cancellationToken at PuppeteerSharpLauncherLaunchAsyncLaunchOptions options End of inner exception stack trace at PuppeteerSharpLauncherLaunchAsyncLaunchOptions options at PuppeteerSharpLauncherLaunchAsyncLaunchOptions options at COSpiderApplicationVesselRipperSpiderAppServiceCreateBrowserCarrierConfigs item CrawConfig crawConfig LaunchOptions options in D project Cityocean COSpider src COSpiderApplication Spider SpiderAppServicecsline at PollyAsyncPolicycDisplayClass ImplementationAsyncb dMoveNext End of stack trace from previous location where exception was thrown at PollyRetryAsyncRetryEngineImplementationAsync TResult Func action Context context CancellationToken cancellationToken ExceptionPredicates shouldRetryExceptionPredicates ResultPredicates shouldRetryResultPredicates Func onRetryAsync Int permittedRetryCount IEnumerable sleepDurationsEnumerable Func sleepDurationProvider Boolean continueOnCapturedContext missing Hi there Love this product Im having an issue taking screen shots of very long pages eg over pixels The resulting image starts repeating itself prior to reaching the end of the page Have you seen this issue and if so is there a workaround I saw a few mentions of it online but no real solutions Version Net Framework VS Windows Description BrowserCloseAsyncWait hangs when called on the same thread that the browser was created on Complete minimal example reproducing the issue csharp var browser await PuppeteerSharpPuppeteerLaunchAsyncnew LaunchOptions Headless true ExecutablePath C Program Files x Google Chrome Application chromeexe ConfigureAwaitfalse uncommenting this line fixes the hang await TaskYield hangs forever browserCloseAsyncWait awaiting instead prevents the hang await browserCloseAsync not waiting on CloseAsync prevents the hang The task does complete with RanToCompletion browserCloseAsyncContinueWitht ConsoleWriteLinetStatus Expected behavior browserCloseAsyncWait should return normally Actual behavior browserCloseAsyncWait hangs forever Oddly this can be fixed by awaiting TaskYield beforehand Some other methods of closing DO work such as awaiting browserCloseAsync or not awaiting it at all Versions Which version of PuppeteerSharp are you using Which NET runtime and version are you targeting Eg NET framework or NET Core NET framework Additional Information While it seems silly to call browserCloseAsyncWait this actually came up in some real and arguably reasonable code I was working on Basically the code was wrapping the Browser object in another class which implemented IDisposable Because Dispose is synchronous the Browser was being closed synchronously The reason for calling browserCloseAsyncWait over browserDispose is that Dispose does not wait for the close to finish that means that we wont know if an error happens during close and we cant be sure that the browser process is gone before proceeding For example we had a test which was asserting browserIsClosed after disposing the outer object without waiting on CloseAsync this test was failing Ive reproduced this in both LinqPad and in an NUnit test Now that I have some idea of what is going on I can work around this but it would be nice to fix it to prevent others from encountering the same thing I also wonder whether the underlying cause could lead to other issues that I havent run into yet Thanks for your work on this library would it be possible to support a PageCreated event so common actions can be easily be done for all created pages Hi everybody Description I use puppeteersharp to render html into pdf for performance reasons I use WaitForSelector a JavaScript function inside my html adds a css class during rendering which I looking for PuppeteerSharp and are working without any issue on local and on server I always used the chromium version which belongs to the PuppeteerSharp version With PuppeteerSharp the WaitForSelector is running on my server until timeout is reached I set it to for test If I use chrome installation on server it fails too On my local machine it runs fine I can even use my local chrome installation what I prefere because pdf generation is significant faster I really dont get the point what is wrong because it throws no exception Complete minimal example reproducing the issue csharp Browser setup if executablePath null FileExistsexecutablePath var downloadDirectory PathCombineEnvironmentGetFolderPathEnvironmentSpecialFolderCommonApplicationData localchromium var fetcher await new BrowserFetchernew BrowserFetcherOptions Path downloadDirectory Platform PlatformWin DownloadAsyncBrowserFetcherDefaultRevisionConfigureAwaitfalse executablePath fetcherExecutablePath var options new LaunchOptions ExecutablePath executablePath Headless true LogProcess false UserDataDir C ProgramData PuppeteerService UserData IgnoreDefaultArgs true IgnoredDefaultArgs new disableextensions Args new disablewebsecurity disablebackgroundnetworking disablebackgroundtimerthrottling disablebackgroundingoccludedwindows disablebreakpad disableclientsidephishingdetection disabledefaultapps disabledevshmusage disableextensions disablefeaturessiteperprocess disablehangmonitor disableipcfloodingprotection disablepopupblocking disablepromptonrepost disablerendererbackgrounding disablesync disabletranslate metricsrecordingonly safebrowsingdisableautoupdate muteaudio disablegpu diskcachedir C ProgramData PuppeteerService Cache enableacceleratedmjpegdecode enableacceleratedvideo enablegpurasterization nosandbox disablesetuidsandbox enablenativegpumemorybuffers ignoregpublacklist Html to pdf generation public async Taskbyte GeneratePdfStreamAsyncstring htmlContent Beginning pdf generation var page await browserNewPageAsyncConfigureAwaitfalse chrome page rented await pageSetContentAsynchtmlContent new NavigationOptions WaitUntil new WaitUntilNavigationDOMContentLoaded ConfigureAwaitfalse content set done This will run until Timeout is reached with PuppeteerSharp await pageWaitForSelectorAsyncrenderingDone new WaitForSelectorOptions Timeout Visible true ConfigureAwaitfalse rendering done var printOptions new PdfOptions Format PaperFormatA PrintBackground true Set to true Otherwise pictures are not printed var pdfData await pagePdfDataAsyncprintOptionsConfigureAwaitfalse pdf data generation finished pageDispose using var pdfStream new MemoryStream pdfStreamWritepdfData pdfDataLength pdfStreamPosition Pdf generation done return new pdfStreamToArray Expected behavior The WaitForSelector should be triggered Actual behavior Timeout will be reached without any exception that gives a hint to the problem Versions OS local Windows Enterprise OS Server Windows Server Chrome Version Official Build Bit Chromium Version DeveloperBuild Bit Net Core Version PuppeteerSharp Version Additional Information I connected a logger to puppeteer and on my local machine it looks like this On the Server instead it does not reach the state rendering done If any additional information is needed dont hesitate to ask Thank you in advance Lucas Description When I set the proxy can not launch the browser If I unset the proxy can launch the browser Whether it is answered as Expected behavior WebSocketException Unable to connect to the remote server Versions version of PuppeteerSharp Description Im getting random NullReferenceExceptions on CreateIncognitoBrowserContextAsync method after upgrading to version Versions Which version of PuppeteerSharp are you using Which NET runtime and version are you targeting NET Core Additional Information Im running PuppeteerSharp on alpine net core image with this config docker RUN apk update apk upgrade echo edge etcapkrepositories echo edge etcapkrepositories apk add nocache chromiumedge nssedge freetypeedge freetypedevedge harfbuzzedge ttffreefontedge libstdcedge wgetedge cacertificatesedge RUN updatecacertificates 