When I click on a particular cluster then not getting a exact annotation count that I showed over label In swift I am showing this label over image in swift Can anybody help me I am using MKMapTypeHybridFlyover and am getting my annotations and clusters removed at randomly times leaving a blank map I can reproduce this using the demo project Demo video This seems to happen when the map is skewed Any ideas on what could be going on Good afternoon Im currently building an app for my family and Im concerned about a bug when zooming the map As you can see in this video on the first second Im zooming the map and one photo or annotation is removed from the cluster and after zooming again the photo is back into the cluster We can see this happening as well when zooming out on second the stack contains pictures and after zooming out one picture is removed from the stack It makes it look like the clusters are completely random is it something I missed Thank you Maxence Henneron of map view to calculate length This caused the cell size sometimes to be due to a race condition when converting coordinates from the map view to its super view When that happened all annotations become invisible This constantly happens when rotating especially in flyover mode Instead we are now calculating it against its own view which always returns consistent and valid results As discussed in I saw that selfzoomLevel is implemented via CCHMapClusterControllerZoomLevelForRegion so I used that Please advise as to what I need to change or improve upon Thank you Sometimes when changing the map views center region the update annotation sequence triggers namely in CCHMapClusterControllers mapViewregionDidChangeAnimated This is due to the longitude delta check Since calculating the zoom level is already included in this project wouldnt it be better to use that instead I have a fork which does just that and I set the epsilondifference threshold to a value to something small enough but not too small to trigger a zoom change when changing the region center Hello guys I already used your lib in Apple map and it worked great But the apple map has some a little bit issue for my country the apple map still not support the detail map in satteline mode so i need to change to google map i dont know whether i can use your lib in google map Because i searched about the clusteringg in google map and i dont see any lib working fine as yours If your lib also intergrate in google map i think that will be very good Looking forward your reply Thanks for great library Hello Thanks for the nice code I checked several other repos on github and found this implementation most mature and well written But still there are several things to improve and I tried my best to provide feature to prevent annotations overlapping which is very annoying in my own project Ive extended the iOS Example application to demonstrate my changes and provided some minimal documentation Also I fixed bug when annotation coordinates were not set to the new values in CCHMapClusterOperationm line if annotationSetsAreUniqueLocations annotationForCellcoordinate coordinate there is no else clause and sometimes annotations were placed in the wrong grid cell I tried to make my code fast so some good old C arrays was used Currently secondpass algorithm is quite simple same block is called for each grid cell from top to bottom left to right On each step checks are made to the upper cell and to the left cell and if there are annotation overlapping then annotation in the current cell get moved right andor bottom to prevent overlapping Better way to do it is to merge overlapping annotations into bigger ones My design allows several secondpass algorithms just set block property fixAnnotationPosition to your own realization Added updateAnnotations method to header file In some cases you have to manually update the cluster annotations I dont know if this is the best solution but in my app works perfectly If you set up the annotations for your map view controller in viewDidLoad as suggested in the README then you get a superfluous cluster annotation if presenting the map view controller in Landscape Note the big cluster on top of STERREICH ios simulator screen shot apr If you move it to viewWillAppear or later then this extra cluster does not appear ios simulator screen shot apr I believe that the reason for the misbehavior comes from MKMapView having an incorrect position during viewDidLoad I added logging for the visible map rect in the init of CCHMapClusterOperation Portrait viewDidLoad Visible map rect Visible map rect Portrait viewWillAppear Visible map rect Landscape viewDidLoad Visible map rect Visible map rect Landscape viewWillAppear Visible map rect The second line in the LandscapeviewDidLoad log comes from this call stack screen shot at As you can see there is a timer delay that fixes the visible map rect and calling the mapViewregionDidChangeanimated thus triggering a reclustering Putting the setup code into viewWillAppear resolves the issue but the question for this bug report is whether the initial clustering shouldnt be delayed until after the first setting of the visible region The current recommendation and code leads to a superfluous clustering operation The second question is why the second clustering operation does not correct the superfluous cluster annotations that the first one created This issue observed on an app with deployment target running on using a MKMapView from storyboard and size classes throughout 