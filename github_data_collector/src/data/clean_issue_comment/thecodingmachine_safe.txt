This PR x regenerates all files Fixes For reference see When using thecodingmachinesafe on PHP we have observed the following warning Warning ldapbind expects at most parameters given When looking at its not apparent that ldapbind accepts arguments In contrast the wrapping function Safe ldapbind accepts and invokes ldapbind with arguments The documentation from which the code is generated states that ldapbind accepts arguments Perhaps there is something wrong with the documentation ErrorExceptionsrcMailImapManagerphp in App Mail ImapManagerconnect Warning imapopen Couldnt open stream mailfoobarde sslnovalidatecert Hi the following code results in a warning before using Safe imapopen php stream imapopen sprintfsdsslnovalidatecert thishost thisport thisusername thispassword DISABLEAUTHENTICATOR GSSAPI now the reworked code with using Safe imapopen php try stream imapopen sprintfsdsslnovalidatecert thishost thisport thisusername thispassword DISABLEAUTHENTICATOR GSSAPI catch Exceptions ImapException exception throw new Exception sprintfCannot connect to s on port d with username s s thishost thisport thisusername imaplasterror results with the error above where its only a warning Is there a best pracitse on how to handle such warnings which are now exceptions cc localheinz In order to more easily solve and it may be easier to simply extract the needed infos from psalms functions stubs instead of trying to recalculate them This way we dont have to duplicate psalms logic This is a bit redundant with our utilization of phpstans functionMap to generate types but we could just use psalm as our type reference as well moufmouf muglug what you think of this Does this look raisonable Psalm has a list of templated functions here The big benefit of those is that they allow static analysis to figure out whats happening in a bunch of common cases without the need for extra plugins with Psalms paramout annotation the type of byreference arrays can be easily inferred Where those are available you could use them instead of the functionmap versions Q A Safe version PHP version PHP Strict Type True Operating system MacOS description shell TypeError Argument passed to yamlparsefile must be of the type array null given Currently methods like pregreplace have a return type of stringarray specified When in reality that return type is dependant on the input Static analysis tools like PHPStan and Psalm can be made aware of this by using template annotations like so This means that the tools can understand what exactly the output is going to be if they can infer the input types Would it be possible to add those annotations to the generated code When calling Safe filegetcontents generates warning that cannot be caught The problem is that filegetcontents not only returns FALSE on failure but can also generate warning Supressing the warning by adding to filegetcontents internal call fixes the issue