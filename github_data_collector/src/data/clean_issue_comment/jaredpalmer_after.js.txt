allcontributors please add nimaa for code question example test doc tool and ideas Hi we have some private routes in our app What we do at the moment is wrapping a higherorder component around the component js const routes path private component requireAuthPrivateComponent The HOC checks the auth status of the user and redirects if the user isnt logged in This approach works just fine but Im wondering what the best approach would be to mark routes as private when using asyncComponents One option I can see would be wrapping the requireAuth part around the actual implementation in the component file but that seems a bit hacky Would love to see how others solved this problem Thanks David Hi componentWillReceiveProps has been deprecated itll be nice if its changed to UNSAFEcomponentWillReceiveProps or fixed using the current react lifecycles Question I am curious if its sensible to use razzleafterjs without ssr I like the architecture and having the option of turning on ssr if needed but not having it on by default Question Is there a normal way to disable the autoscrolltotop on route change I mean normal without having to fork the afterjs Current Behavior Every route change triggers the windowscrollTo and it can be pretty infuriating when youre creating a UI thats route dependent but doesnt need the scrolltotop thing Desired Behavior Theres a way to just disable it with either env variable or some setting Suggested Solutions Just a simple env setting that can be set SCROLLTOTOPfalse could probably do it PLEASE FILL THIS OUT Afterjs Version Razzle Version React Version Afterjs doesnt support Treeshaking this causes renderjs and Documentjs get inside the client browser bundle Anyone who uses afterjs can save about KB easily in seconds renderjs includes ReactDomServer and webpack nodejs for browser runtime and its packed inside the client bundle Documentjs KB renderjs KB reactdomserverbrowserproductionminjs KB this is ReactDomRenderToString that works in browser and its in bundle because of renderjs file Urljs KB punnycodejs reactsideeffectjs querystringes js total KB Desired Behavior to not include unnecessary packages and save about KB Also there was a problem with ensureReadyjsand renderjs files in which the default exported module was not correct Before js moduleexports requirebuildcjsensureReady After js moduleexports requirebuildcjsensureReadyensureReady with the above changes users can use safely use babelplugintransformimports in situations that build system is not able to handle es modules Breaking Changes There is no breaking change Bug Afterjs doesnt support Treeshaking this causes renderjs and Documentjs get inside the client bundle Anyone who uses afterjs can save about KB easily in seconds Current Behavior renderjs includes React Dom Server and webpack nodejs for browser runtime and its packed inside the client bundle Documentjs KB renderjs KB reactdomserverbrowserproductionminjs KB this is ReactDomRenderToString that works in browser and its in bundle because of renderjs file Urljs KB punnycodejs reactsideeffectjs querystringes js total KB Desired Behavior to not include unnecessary packages and save about KB Suggested Solutions Fix Imports temporary solution From jsx import asyncComponent from jaredpalmerafter import After ensureReady from jaredpalmerafter To jsx import asyncComponent from jaredpalmerafterasyncComponent import After from jaredpalmerafterafter import ensureReady from jaredpalmerafterensureReady use ESM build in project if you are not librray maintainer ignore this solution javascript tsconfigbuildjson module esnext pacakgejson sideEffects false module buildindexesjs but me personally prefer to use tsdx and some build script like formik packagejson file we need more options in afterjs build process like DEV Afterjs Version Razzle Version React Version TypeScript Version OS GnuLinux Fedora Node Version Package Manager and Version yarn v with asyncComponent you split part of your application into a new chunk and on BROWSER when you need that part of your code it gets downloaded automatically when page rendered on the server there was no way to understand which chunks needed for the current request so Afterjs only sends bundlejs and maincss file then on BROWSER with ensureReady method it tries to fetch chunks split CSS and JS files needed for the current request and its slow WHY browser must download bundlejs then parse it and at the end it executes the code when code gets executed ensureReady method gets called ensureReady finds and download chunks needed to render the current page and when all files get downloaded it start to rehydrate browser will render the page without CSS styles because we split them and it will get them when ensureReady called this makes the site look ugly for seconds bad UX have you ever think about why CSS is render blocking if browser finds a link relstylesheet tag it would stop rendering page and waits until CSS file be downloaded and parsed completely this mechanism is necessary to have fast page renders if CSS files attach to dom after page gets rendered the browser must repaint the whole page painting is too much job for browser and its to slow in this PR I solved this problem and it sends all JS and CSS files needed for current request in the initial server response What else is new Upgraded React Router Dom to Version Eliminates all warnings in StrictMode There is still one warning from React Helmet Package There are some Breaking Changes Read MIGRATION GUIDE for more information Thanks for providing good solution It would be great have definition for injected props Examples Feature Request Problem Description I was trying to setup Afterjs with Custom Route transitions using Posed as described in this article Unfortunately Pose just works properly if the Switch component can be wrapped directly and is passed a location prop explicitly Which is not possible by default with Afterjs Suggested Solutions I got it working by forking the implementation of the After component to allow me to wrap the Switch component directly in a transition container see This is obviously not a great solution Maybe it would be possible to pass a Wrapper component to the After component to prevent this issue Since the After component is only used explicitly on the client this introduces more complexity though I could imagine that it would be easier if the interface for customRenderer also explicitly uses the After component and requires also setting the StaticRouter manually This would also help in setting up content for all routes like a header outside of the router switch which currently isnt possible on the server Id be happy to come up with a PR but this should be discussed first as it deals with the architecture of After Afterjs Version latest Razzle Version React Version OS macOS Node Version Package Manager and Version yarn Demo Repo or Link 