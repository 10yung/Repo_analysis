Importing the settings into the preview version of visual studio doesnt seem to have any effect The light theme as generated by the template in this repo makes heavy use of bold fonts and very few colors I have enhanced the syntax highlighting in my fork at least for C so far See my branch I whipped up an example file containing all significant elements and took screenshots for comparison Default coloring SolarizedLightDefault Most elements use the color yellow String literals and integer literals have the same color Error and warning squiggles are hard to distinguish Bold font usage is distracting and makes code expand visually as the parser matches tokens My version SolarizedLightAltered Reduced usage of bold fonts reserved to distinguish between different elements with the same color eg string literal vs verbatim string literal As string literals should be used judiciously they have been made orange to make them stand out more Classes interfaces valuetypes structs enums and delegates all have different colors This makes me a lot more productive as I dont have to use intellisense or mousehover tooltips to determine what stuff is what Changed errorwarning squiggles from redorange to redyellow I would like to open a PR but I realize this may well be an entirely personal preference and not everyone may want their C to look like a coloring book Hence I open this issue to have a discussion first leddt Is enhancing the syntax highlighting something you want to integrate in your repo If so do you agree with my choices for colors or do you want some changes If this is something youd like Ill also point out there is more work to be done here to enhance other languages and contexts F XML ASPX XAML When exporting Fonts and Colors settings from Visual Studio Professional version I get the following Category GUIDs in the vssettings file F D BCE C DB EE DD B E B F E CA C A B C E D B E B BAFF FD B B FF EA C C E F A A DEDBAE E A BFA A FA F BC D B F A A B B B DBAD DB B C AD E F In SettingsTemplatexml are the following A B E A D DB E E E D E A A DEDBAE E A BFA A F D BCE C DB EE DD B Im trying to derive their meanings from the properties within but Ive already spotted clear discrepancies between the template and my own export leddt Can you please share what you have found out about them so far GUID In SettingsTemplate In generated export F D BCE C DB EE DD B NuGet Package Manager Console NuGet Package Manager Console E B F E CA C A B C missing E D B E B BAFF FD B B missing FF EA C C E F missing A A DEDBAE E A BFA A Text Editor is different FA F BC D B F A A B missing Artboard Background B B DBAD DB B C AD E F missing F D BCE C DB EE DD B Text Editor is different missing I noticed my Visual Studio was listing User Types Structures and User Types Type Parameters without custom colors so I checked with the template and it didnt have those in the list next to the other user types According to the ReSharper settings also needlessly in having those Structures should use foreground Yellow and Type Parameters should use Magenta Or in settings XML XML Item Nametype parameter name Foreground x D Background x BoldFontNo Item Namestruct name Foreground x B Background x BoldFontNo I also note how my Visual Studio writes out its settings using different item names Im not sure whats up with that Maybe Visual Studio is backwards compatible with different names or something For example upon exporting I dont see User Types Classes as in the template used here and what I have successfully imported but I do get class name