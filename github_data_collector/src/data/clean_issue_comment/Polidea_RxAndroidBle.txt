 Steps Start listening connection states kotlin flatMapObservable rxBleDevice rxBleDeviceobserveConnectionStateChanges observeOnscheduler doOnSubscribe SLogdTAG listenConnection subscribeds address doOnNext SLogvTAG listenConnection nexts s address it doOnDispose SLogvTAG listenConnection disposeds address doFinally SLogvTAG listenConnection finisheds address Get connected to ble device Turn off ble device Get disconnected RxBleConnectionStateDISCONNECTED Schedule reconnection in seconds Repeat from stage Actual result After N attempts of reconnections observeConnectionStateChanges emits nothing Expected result After N attempts of reconnections observeConnectionStateChanges still emits RxBleConnectionState events Investigation My Disposable from the stage is still alive because I didnt see such a message in the Logcat kotlin SLogvTAG listenConnection disposeds address Finally Ive figured out that starting at some connection retry the subscribers array inside BehaviorRelay is empty Screenshots BehaviorRelay has subscribers Screen Shot at PM BehaviorRelay has NO subscribers Screen Shot at PM Logs rustarlinexlibtestapp WSleManager sle t scheduleReconnect address CA F CB rustarlinexlibtestapp ISleManager sle t scheduleReconnect time to connect CA F CB rustarlinexlibtestapp DRxBleClientOperationQueue RxBleThread QUEUED ConnectOperation rustarlinexlibtestapp DRxBleClientOperationQueue Thread STARTED ConnectOperation rustarlinexlibtestapp IRxBleClientOperationQueue Thread RUNNING ConnectOperationMACCA F CB autoConnectfalse rustarlinexlibtestapp VRxBleBleConnectionCompat pool thread Connecting without reflection rustarlinexlibtestapp VSleManager sle t listenConnection nextCA F CB RxBleConnectionStateCONNECTING rustarlinexlibtestapp DBluetoothAdapter STATEON rustarlinexlibtestapp DBluetoothGatt connect device CA F CB auto false rustarlinexlibtestapp DBluetoothAdapter isSecureModeEnabled rustarlinexlibtestapp DBluetoothGatt registerApp rustarlinexlibtestapp DBluetoothGatt registerApp UUID a e a a c b rustarlinexlibtestapp DBluetoothGatt onClientRegistered status clientIf rustarlinexlibtestapp DBluetoothGatt onClientConnectionState status clientIf deviceCA F CB rustarlinexlibtestapp IRxBleGattCallback Binder MACCA F CB onConnectionStateChange status value rustarlinexlibtestapp DRxBleConnectionOperationQueue Binder Connection operations queue to be terminated MACCA F CB compolidearxandroidble exceptionsBleDisconnectedException Disconnected from MACCA F CB with status GATTERROR at compolidearxandroidble internalconnectionRxBleGattCallback onConnectionStateChangeRxBleGattCallbackjava at androidbluetoothBluetoothGatt runBluetoothGattjava at androidbluetoothBluetoothGattrunOrQueueCallbackBluetoothGattjava at androidbluetoothBluetoothGattaccess BluetoothGattjava at androidbluetoothBluetoothGatt onClientConnectionStateBluetoothGattjava at androidbluetoothIBluetoothGattCallbackStubonTransactIBluetoothGattCallbackjava at androidosBinderexecTransactBinderjava rustarlinexlibtestapp VRxBleExecutors pool thread Terminated MACCA F CB rustarlinexlibtestapp DRxBleClientOperationQueue Binder QUEUED DisconnectOperation rustarlinexlibtestapp DRxBleClientOperationQueue Thread FINISHED ConnectOperation in ms rustarlinexlibtestapp DRxBleClientOperationQueue Thread STARTED DisconnectOperation rustarlinexlibtestapp IRxBleClientOperationQueue Thread RUNNING DisconnectOperationMACCA F CB rustarlinexlibtestapp DBluetoothManager getConnectionState rustarlinexlibtestapp DBluetoothManager getConnectedDevices rustarlinexlibtestapp VSleManager sle t listenConnection nextCA F CB RxBleConnectionStateDISCONNECTING rustarlinexlibtestapp DBluetoothGatt close rustarlinexlibtestapp DBluetoothGatt unregisterApp mClientIf rustarlinexlibtestapp VSleManager sle t listenConnection nextCA F CB RxBleConnectionStateDISCONNECTED rustarlinexlibtestapp DRxBleClientOperationQueue Thread FINISHED DisconnectOperation in ms rustarlinexlibtestapp WSleManager sle t scheduleReconnect address CA F CB rustarlinexlibtestapp ISleManager sle t scheduleReconnect time to connect CA F CB rustarlinexlibtestapp DRxBleClientOperationQueue RxBleThread QUEUED ConnectOperation rustarlinexlibtestapp DRxBleClientOperationQueue Thread STARTED ConnectOperation rustarlinexlibtestapp IRxBleClientOperationQueue Thread RUNNING ConnectOperationMACCA F CB autoConnectfalse rustarlinexlibtestapp VRxBleBleConnectionCompat pool thread Connecting without reflection rustarlinexlibtestapp VSleManager sle t listenConnection nextCA F CB RxBleConnectionStateCONNECTING rustarlinexlibtestapp DBluetoothAdapter STATEON rustarlinexlibtestapp DBluetoothGatt connect device CA F CB auto false rustarlinexlibtestapp DBluetoothAdapter isSecureModeEnabled rustarlinexlibtestapp DBluetoothGatt registerApp rustarlinexlibtestapp DBluetoothGatt registerApp UUID c c eb a bae c faebd rustarlinexlibtestapp DBluetoothGatt onClientRegistered status clientIf rustarlinexlibtestapp DBluetoothGatt onClientConnectionState status clientIf deviceCA F CB rustarlinexlibtestapp IRxBleGattCallback Binder MACCA F CB onConnectionStateChange status value rustarlinexlibtestapp DRxBleConnectionOperationQueue Binder Connection operations queue to be terminated MACCA F CB compolidearxandroidble exceptionsBleDisconnectedException Disconnected from MACCA F CB with status GATTERROR at compolidearxandroidble internalconnectionRxBleGattCallback onConnectionStateChangeRxBleGattCallbackjava at androidbluetoothBluetoothGatt runBluetoothGattjava at androidbluetoothBluetoothGattrunOrQueueCallbackBluetoothGattjava at androidbluetoothBluetoothGattaccess BluetoothGattjava at androidbluetoothBluetoothGatt onClientConnectionStateBluetoothGattjava at androidbluetoothIBluetoothGattCallbackStubonTransactIBluetoothGattCallbackjava at androidosBinderexecTransactBinderjava rustarlinexlibtestapp VRxBleExecutors pool thread Terminated MACCA F CB rustarlinexlibtestapp DRxBleClientOperationQueue Binder QUEUED DisconnectOperation rustarlinexlibtestapp DRxBleClientOperationQueue Thread FINISHED ConnectOperation in ms rustarlinexlibtestapp DRxBleClientOperationQueue Thread STARTED DisconnectOperation rustarlinexlibtestapp IRxBleClientOperationQueue Thread RUNNING DisconnectOperationMACCA F CB rustarlinexlibtestapp DBluetoothManager getConnectionState rustarlinexlibtestapp DBluetoothManager getConnectedDevices rustarlinexlibtestapp VSleManager sle t listenConnection nextCA F CB RxBleConnectionStateDISCONNECTING rustarlinexlibtestapp DBluetoothGatt close rustarlinexlibtestapp DBluetoothGatt unregisterApp mClientIf rustarlinexlibtestapp VSleManager sle t listenConnection nextCA F CB RxBleConnectionStateDISCONNECTED rustarlinexlibtestapp DRxBleClientOperationQueue Thread FINISHED DisconnectOperation in ms rustarlinexlibtestapp WSleManager sle t scheduleReconnect address CA F CB rustarlinexlibtestapp ISleManager sle t scheduleReconnect time to connect CA F CB rustarlinexlibtestapp DRxBleClientOperationQueue RxBleThread QUEUED ConnectOperation rustarlinexlibtestapp DRxBleClientOperationQueue Thread STARTED ConnectOperation rustarlinexlibtestapp IRxBleClientOperationQueue Thread RUNNING ConnectOperationMACCA F CB autoConnectfalse rustarlinexlibtestapp VSleManager sle t listenConnection nextCA F CB RxBleConnectionStateCONNECTING rustarlinexlibtestapp VRxBleBleConnectionCompat pool thread Connecting without reflection rustarlinexlibtestapp DBluetoothAdapter STATEON rustarlinexlibtestapp DBluetoothGatt connect device CA F CB auto false rustarlinexlibtestapp DBluetoothAdapter isSecureModeEnabled rustarlinexlibtestapp DBluetoothGatt registerApp rustarlinexlibtestapp DBluetoothGatt registerApp UUID d b ab a a b rustarlinexlibtestapp DBluetoothGatt onClientRegistered status clientIf rustarlinexlibtestapp DBluetoothGatt onClientConnectionState status clientIf deviceCA F CB rustarlinexlibtestapp IRxBleGattCallback Binder MACCA F CB onConnectionStateChange status value rustarlinexlibtestapp DRxBleConnectionOperationQueue Binder Connection operations queue to be terminated MACCA F CB compolidearxandroidble exceptionsBleDisconnectedException Disconnected from MACCA F CB with status GATTERROR at compolidearxandroidble internalconnectionRxBleGattCallback onConnectionStateChangeRxBleGattCallbackjava at androidbluetoothBluetoothGatt runBluetoothGattjava at androidbluetoothBluetoothGattrunOrQueueCallbackBluetoothGattjava at androidbluetoothBluetoothGattaccess BluetoothGattjava at androidbluetoothBluetoothGatt onClientConnectionStateBluetoothGattjava at androidbluetoothIBluetoothGattCallbackStubonTransactIBluetoothGattCallbackjava at androidosBinderexecTransactBinderjava rustarlinexlibtestapp VRxBleExecutors pool thread Terminated MACCA F CB rustarlinexlibtestapp DRxBleClientOperationQueue Binder QUEUED DisconnectOperation rustarlinexlibtestapp DRxBleClientOperationQueue Thread FINISHED ConnectOperation in ms rustarlinexlibtestapp DRxBleClientOperationQueue Thread STARTED DisconnectOperation rustarlinexlibtestapp IRxBleClientOperationQueue Thread RUNNING DisconnectOperationMACCA F CB rustarlinexlibtestapp DBluetoothManager getConnectionState rustarlinexlibtestapp DBluetoothManager getConnectedDevices rustarlinexlibtestapp VSleManager sle t listenConnection nextCA F CB RxBleConnectionStateDISCONNECTING rustarlinexlibtestapp DBluetoothGatt close rustarlinexlibtestapp DBluetoothGatt unregisterApp mClientIf rustarlinexlibtestapp VSleManager sle t listenConnection nextCA F CB RxBleConnectionStateDISCONNECTED rustarlinexlibtestapp DRxBleClientOperationQueue Thread FINISHED DisconnectOperation in ms rustarlinexlibtestapp WSleManager sle t scheduleReconnect address CA F CB rustarlinexlibtestapp ISleManager sle t scheduleReconnect time to connect CA F CB rustarlinexlibtestapp DRxBleClientOperationQueue RxBleThread QUEUED ConnectOperation rustarlinexlibtestapp DRxBleClientOperationQueue Thread STARTED ConnectOperation rustarlinexlibtestapp IRxBleClientOperationQueue Thread RUNNING ConnectOperationMACCA F CB autoConnectfalse rustarlinexlibtestapp VRxBleBleConnectionCompat pool thread Connecting without reflection rustarlinexlibtestapp DBluetoothAdapter STATEON rustarlinexlibtestapp DBluetoothGatt connect device CA F CB auto false rustarlinexlibtestapp DBluetoothAdapter isSecureModeEnabled rustarlinexlibtestapp DBluetoothGatt registerApp rustarlinexlibtestapp DBluetoothGatt registerApp UUIDdbbf c c b b c b e e rustarlinexlibtestapp DBluetoothGatt onClientRegistered status clientIf rustarlinexlibtestapp DBluetoothGatt onClientConnectionState status clientIf deviceCA F CB rustarlinexlibtestapp IRxBleGattCallback Binder MACCA F CB onConnectionStateChange status value rustarlinexlibtestapp DRxBleConnectionOperationQueue Binder Connection operations queue to be terminated MACCA F CB compolidearxandroidble exceptionsBleDisconnectedException Disconnected from MACCA F CB with status GATTERROR at compolidearxandroidble internalconnectionRxBleGattCallback onConnectionStateChangeRxBleGattCallbackjava at androidbluetoothBluetoothGatt runBluetoothGattjava at androidbluetoothBluetoothGattrunOrQueueCallbackBluetoothGattjava at androidbluetoothBluetoothGattaccess BluetoothGattjava at androidbluetoothBluetoothGatt onClientConnectionStateBluetoothGattjava at androidbluetoothIBluetoothGattCallbackStubonTransactIBluetoothGattCallbackjava at androidosBinderexecTransactBinderjava rustarlinexlibtestapp VRxBleExecutors pool thread Terminated MACCA F CB rustarlinexlibtestapp DRxBleClientOperationQueue Binder QUEUED DisconnectOperation rustarlinexlibtestapp DRxBleClientOperationQueue Thread FINISHED ConnectOperation in ms rustarlinexlibtestapp DRxBleClientOperationQueue Thread STARTED DisconnectOperation rustarlinexlibtestapp IRxBleClientOperationQueue Thread RUNNING DisconnectOperationMACCA F CB rustarlinexlibtestapp DBluetoothManager getConnectionState rustarlinexlibtestapp DBluetoothManager getConnectedDevices rustarlinexlibtestapp DBluetoothGatt close rustarlinexlibtestapp DBluetoothGatt unregisterApp mClientIf rustarlinexlibtestapp DRxBleClientOperationQueue Thread FINISHED DisconnectOperation in ms Hey Android introduced problems with connecting to multiple BLE devices for me Linked topics may be related I managed to find solution by forcing this config on connection bluetoothDeviceconnectGatt context false auto connect set to false connectCallback BluetoothDeviceTRANSPORTAUTO BluetoothDevicePHYLECODED But RxAndroidBle dont exposes possibility to set transport and phy Have you considered exposing those settings Summary It seems that setting ScanFitlerBuildersetManufacturerData int manufacturerId x byte manufacturerData null will not pass any advertisements with the specified manufacturerId More fitting solution would be to pass all advertisements with this id no matter the data Library version not a library issue Preconditions Have a peripheral advertising data with manufacturerId x Steps to reproduce actual result br Set ScanFitlerBuildersetManufacturerData int manufacturerId x byte manufacturerData null br Scan peripheral that advertises manufacturerId x br Observe results Actual result No ScanResult is emitted Expected result A ScanResult with the given manufacturerId is emitted Minimum code snippet reproducing the issue val scanSettings ScanSettingsBuilder setScanModeScanSettingsSCANMODELOWLATENCY setCallbackTypeScanSettingsCALLBACKTYPEALLMATCHES build val manuId xBEEF val scanFilter ScanFilterBuilder setManufacturerDatamanuId null build return rxBleClientscanBleDevicesscanSettings scanFilter Logs from the application running with settings java RxBleClientupdateLogOptionsnew LogOptionsBuilder setLogLevelLogConstantsDEBUG setMacAddressLogSettingLogConstantsMACADDRESSFULL setUuidsLogSettingLogConstantsUUIDSFULL setShouldLogAttributeValuestrue build no logs as Android OS does not match anything When I update my rxandroidbleparent project in Android Studio to v I get these cannot resolve symbol errors in the file RxBleGattCallbackjava bleshadow lines Inject line and Named line Everything else compiles OK Summary Currently ScanSettingss matchMode reportDelayinMillis and mNumOfMatchesPerFilter are all commented out see here This is a quite annoying oversight that has not been fixed for the past two years and doesnt even require that much of a change However the hindered functionality is quite high priority in quite a few cases and makes timed updates impossible to create eg if one wants low latency scan results but batched so every update is delivered at a second interval Library version Preconditions None the code bits are intentionally commented out Steps to reproduce actual result br Add RxAndroidBle to project br Try to create a ScanSettings instance with report delay br The call is not present on ScanSettingsBuilder Actual result The calls are not present on ScanSettingsBuilder Expected result The calls should be available Solution Uncomment the three mentioned ScanSettingsBuilder methods Regarding the MacAddressLogSetting enums could we get a version that truncates or blanks the first octets Organizationally unique identifier instead Something like this Truncated MAC address will be logged ie XXXXXX public static final int MACADDRESSOUIREMOVED DEBUG Our devices all start with the same first octets that are a BT SIG assigned constant only the last three octets are necessary to uniquely identify a device Ideally I would just like to see the octets in logs Summary Androids androidbluetoothleScanRecordparseFromBytes has changed between versions compolidearxandroidble internalutilUUIDUtilparseFromBytes function is not uptodate with the implementation This causes inconsistencies Additionally Androids native implementations also differ when wrapped by the library Library version Preconditions Scan a peripheral that advertises data not parsable by Android ie Service Data with UUIDs longer than bits Steps to reproduce actual result br Take a phone that uses Android x and Android br Run BLE scan using the new API br Observe inconsistencies in ScanResultgetServiceData if the service UUID is longer than bits Actual result Inconsistencies On Android the ScanResultgetServiceData can return an empty map where on Android it will contain entries Expected result On all Android system versions ScanResultgetServiceData should return the same nonempty data Ble allows reliable writes as a series of writes that are treated atomically so they are all garaunteed to succeed or fail together It would be helpful to be able to take advantage of that functionality through RxBle Hello First of all thanks for the amazing library I am using it in one of my projects and I came across this situation Ive mentioned in a Stackoverflow question To sum up what I want to achieve is to change the operation timeout after the connection is already established However after taking a look at different commits made in the past to address the issues and Ive also come up with the idea that instead of being able to change the timeout for the whole connection after being established it would be even better to have an extra method for writingreading characteristics that accepts a timeout parameter for that specific operation Then if it is not provided will use the one that was set while establishing the connection or the default s PD I would love to be able to help adding this functionality by myself and make a PR but I am not confident enough with my programming skills I feel I could do it in this version of the code but I got lost after the changes made in Just an idea maybe it is not possible to do Cheers Diego Summary Rapid connectdisconnect sequence fails to properly disconnect from BLE device When creating subscription to RxBleDeviceestablishConnection and cancelling it prior to connection being established the physical BLE device remains in connected state verified through JLink debugger output This only happens when unsubscribe is called prior to fully establishing connection If delay is inserted between subscribeunsubscribe calls then connect and disconnect sequence works properly Library version implementation compolidearxandroidblerxandroidble Preconditions Unsubscribe has to be called prior to connection being established Steps to reproduce actual result Create subscription to rxbledeviceestablishConnection Wait s Call subscriptionunsubscribe On Android app log shows connection and disconnect operations completing successfully On BLE Device JLink debugger output shows that device is still connected Minimum code snippet reproducing the issue Logs from the application running with setting RxBleLogsetLogLevelRxBleLogVERBOSE comlivindiresident IRxBleCancellableSubscription Scan operation is requested to stop comlivindiresident DBluetoothAdapter isLeEnabled ON beginning of system comlivindiresident DRxBleClientOperationQueue QUEUED ScanOperationApi comlivindiresident DRxBleClientOperationQueue STARTED ScanOperationApi comlivindiresident IRxBleQueueOperation Scan operation is requested to start comlivindiresident DBluetoothAdapter isLeEnabled ON comlivindiresident DBluetoothLeScanner onScannerRegistered status scannerId mScannerId comlivindiresident DRxBleClientOperationQueue FINISHED ScanOperationApi in ms comlivindiresident IRxBleCancellableSubscription Scan operation is requested to stop comlivindiresident DBluetoothAdapter isLeEnabled ON comlivindiresident DRxBleClientOperationQueue QUEUED ConnectOperation comlivindiresident DRxBleClientOperationQueue STARTED ConnectOperation comlivindiresident VRxBleBleConnectionCompat Connecting without reflection comlivindiresident DBluetoothGatt connect device DCC C E E auto false registerApp registerApp UUIDbf c cc ee e d ec bab e comlivindiresident DBluetoothGatt onClientRegistered status clientIf comlivindiresident DRxBleClientOperationQueue QUEUED ScanOperationApi comlivindiresident DRxBleClientOperationQueue QUEUED DisconnectOperation comlivindiresident IRxBleConnectionOperationQueue Connection operations queue to be terminated DCC C E E comlivindiresident DRxBleExecutorsRunnableAdapter Terminated comlivindiresident DRxBleClientOperationQueue FINISHED ConnectOperation in ms comlivindiresident DRxBleClientOperationQueue STARTED ScanOperationApi comlivindiresident IRxBleQueueOperation Scan operation is requested to start comlivindiresident DBluetoothAdapter isLeEnabled ON comlivindiresident DBluetoothLeScanner onScannerRegistered status scannerId mScannerId comlivindiresident DRxBleClientOperationQueue FINISHED ScanOperationApi in ms comlivindiresident DRxBleClientOperationQueue STARTED DisconnectOperation comlivindiresident DBluetoothManager getConnectionState getConnectedDevices comlivindiresident DBluetoothGatt close unregisterApp mClientIf comlivindiresident DRxBleClientOperationQueue FINISHED DisconnectOperation in ms Actual result BLE Device indicates it is still in connected state and never receives DISCONNECTED event INFO main onbleevt CONNECTED Expected result BLE Device receives DISCONNECTED event INFO ble onbleevt DISCONNECTED Reason x Edit dariuszseweryn Notes Related bug on Googles Issue Tracker 