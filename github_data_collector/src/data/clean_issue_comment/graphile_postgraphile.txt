I just noticed that debugPgClient is called only on postgraphile library usage but not with createPostGraphileSchemawithPostgraphileContext Would it be possible or make sense to install the same enhancer on its pool If this cannot properly be fixed please a export debugPgClient so that one can install it on own pools and b document it on the Debugging page Split JWT verification functionality to the separate module making it available for use in plugins Im submitting a check one with x bug report x feature request question alternatively ask on Discord I often write custom mutations via Postgres functions and would like to return extra context and logging from the function that doesnt easily fit into the return type which is most often a record or set of records from a table A solution would be to return Postgres logs generated via RAISE statements to the client so the standard mutation payload would include data errors logs level notice message Ideally the order of the logs would match the order in which the raise statements were executed This would be possible for DEBUG LOG INFO NOTICE WARNING EXEPTION would still include the result in errors Happy to work on this with a little guidance As discussed in this thread Im submitting a x feature request PostGraphile version Current behavior Currently no cache for PostGraphileContext Each time create PostGraphileContext take about ms some times this step even slow then real PG query request which may ms So if create a LRU cache for recent access user it can improve performance and latency ENV CPU i K single nodejs without cluster single Postgresql DB on the same machine current performance Finished requests Concurrency Level Time taken for tests seconds Complete requests Failed requests KeepAlive requests Total transferred bytes Total body sent HTML transferred bytes Requests per second sec mean Time per request ms mean Time per request ms mean across all concurrent requests Transfer rate Kbytessec received kbs sent kbs total Connection Times ms min mean sd median max Connect Processing Waiting Total Percentage of the requests served within a certain time ms longest request Expected behavior add cache for PostGraphileContext after add cache performance Finished requests Concurrency Level Time taken for tests seconds Complete requests Failed requests KeepAlive requests Total transferred bytes Total body sent HTML transferred bytes Requests per second sec mean Time per request ms mean Time per request ms mean across all concurrent requests Transfer rate Kbytessec received kbs sent kbs total Connection Times ms min mean sd median max Connect Processing Waiting Total Percentage of the requests served within a certain time ms longest request Hack on nodemodules postgraphile build postgraphile withPostGraphileContextjs roytan beginning const lru requiregraphilelru const crypto requirecrypto const createHash crypto const contextCache new lru default maxLength in function withDefaultPostGraphileContext const operationType operation null operationoperation null roytan let lastArgs JSONstringify jwtToken jwtSecret jwtAudiences jwtRole jwtVerifyOptions pgDefaultRole pgSettings let lastHash createHashsha updatelastArgsdigestbase let hashObj contextCachegetlastHash if hashObj const needTransaction pgForceTransaction sqlSettingsQuery operationType query operationType subscription roytan contextCachesetlastHash pgRole jwtClaims sqlSettingsQuery needTransaction else consolelogwithPostGraphileContext get from contextCache hashObj contextCachegetlastHash const pgRole jwtClaims sqlSettingsQuery needTransaction hashObj Are there any workplans to support declarative partitioning introduced in PostgreSQL Current behaviour is lets say i have got fruit table partitioned by type with separate partitions for each type apple banana etc Postgraphile generates schema for child tables and not for parent one Im submitting a check one with x x bug report feature request question alternatively ask on Discord PostGraphile version CLI postgraphile version Library package version For bug reports please complete the rest of this form For all other issues you can delete the rest of this form Minimal SQL file that can be loaded into a clean database sql CREATE DOMAIN testdomain AS text CREATE TABLE arraytest somearray testdomain text underneath INSERT INTO arraytest VALUES onetwothree Steps to reproduce Please describe how you are running PostGraphile CLI full postgraphile command line Library relevant code and include any relevant GraphQL queries that demonstrate the issue npx postgraphile c postgresuserpasswordlocalhostdb Make a GraphQL query from a table including an array column graphql allArrayTests nodes someArray Current behavior Query works as expected but an exception is thrown and logged on the console on every query Error Internal graphilebuildpg error should not attempt to tweak an array please process array before tweaking type pgcatalogtext at pgTweakFragmentForTypeAndModifier Usersmileselamnpmnpx libnodemodulespostgraphilenodemodulesgraphilebuildpgnode pluspluginsPgTypesPluginjs at pgTweakFragmentForTypeAndModifier Usersmileselamnpmnpx libnodemodulespostgraphilenodemodulesgraphilebuildpgnode pluspluginsPgTypesPluginjs at ObjectgetSelectValueForFieldAndTypeAndModifier Usersmileselamnpmnpx libnodemodulespostgraphilenodemodulesgraphilebuildpgnode pluspluginsPgColumnsPluginjs at ArraypgQuery Usersmileselamnpmnpx libnodemodulespostgraphilenodemodulesgraphilebuildpgnode pluspluginsPgColumnsPluginjs at Objectanonymous Usersmileselamnpmnpx libnodemodulespostgraphilenodemodulesgraphilebuildpgnode plusqueryFromResolveDataFactoryjs at queryBuilderselect Usersmileselamnpmnpx libnodemodulespostgraphilenodemodulesgraphilebuildpgnode pluspluginspgFieldjs at callIfNecessary Usersmileselamnpmnpx libnodemodulespostgraphilenodemodulesgraphilebuildpgnode plusQueryBuilderjs at QueryBuilderlock Usersmileselamnpmnpx libnodemodulespostgraphilenodemodulesgraphilebuildpgnode plusQueryBuilderjs at QueryBuilderlockEverything Usersmileselamnpmnpx libnodemodulespostgraphilenodemodulesgraphilebuildpgnode plusQueryBuilderjs at QueryBuilderbuild Usersmileselamnpmnpx libnodemodulespostgraphilenodemodulesgraphilebuildpgnode plusQueryBuilderjs The immediately preceding log line begins errors in ms query IntrospectionQuery Expected behavior No exception Exceptions are expensive performancewise Im submitting a check one with x bug report x feature request question alternatively ask on Discord PostGraphile version v Given the following SQL sql CREATE TABLE languagesid SMALLINT PRIMARY KEY CREATE TABLE fooid SMALLINT PRIMARY KEY CREATE TABLE foonames fooid SMALLINT NOT NULL REFERENCES fooid languageid SMALLINT NOT NULL REFERENCES languagesid name VARCHAR NOT NULL UNIQUE PRIMARY KEYfooid languageid I would like to be able to request resources with a composite key referencing the current object by just the other fields in the composite key gql Without pgsimplifyinflector renames to show more clearly allFoos nodes Current solution fooNamesByFooIdcondition languageId Will always return a list with asingle element since languageId fooId is the key for fooNames nodes name What I want to do here fooNamesByFooIdAndLanguageIdlanguageId Returning the element directly name I could not find any way to accomplish this currently Is this something that you would be interested in a PRplugin for Im submitting a check one with x bug report x feature request question alternatively ask on Discord PostGraphile version v For deployments within containerized environments it would be convenient if the server exposed a default health check endpoint conventionally healthz in Kubernetes A simple status code with an empty response would be enough but it might make sense to expose some basic metadata as well At minimum I think this endpoint should check for schema build errors if recoverable connection to postgres successful startup of postgraphile Some examples js status schema true postgraphile true database true js recoverable schema errors status schema false postgraphile true database true js fail to connect to postgres status schema false postgraphile true database false Im submitting a check one with x bug report x feature request question alternatively ask on Discord It is fairly trivial to expose graphqlvoyager yourself if you are already consuming postgraphile as a library Doing so is roughly as easy as ts import as express from express import express as voyagerMiddleware from graphqlvoyagermiddleware import postgraphile from postgraphile const app express appusepostgraphilePGPOOL PGSCHEMA graphileConfig appusevoyager voyagerMiddleware endpointUrl graphileConfigexternalUrlBase graphql displayOptions hideRoot true skipDeprecated true skipRelay true applistenPORT consolelogListening on localhostPORT It would be nice to have Voyager bundled for a couple reasons namely easier for CLI users to explore their schema graphically possibility for tighter integration with our custom GraphiQL interface ie deep linking which is not yet supported by Voyager could be loaded at the same graphiql endpoint