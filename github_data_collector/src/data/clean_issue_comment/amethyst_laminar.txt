As crossbeam from laminar is not semvercompatible with lateststable its not possible to name it so not possible to store it in a struct Im trying to achieve broadcast so that I dont need to resend a large amount of datagrams to a different address Is there a way to achieve sending UDP datagrams to multiple parties Currently RTT information is captured but not exposed to laminar users Sometimes Laminar sends duplicated reliable messages Heres the code I tested reliable messages with Its built on amethystnet thats the simplest way I could make a working reproducible example This is the log Ive got for server binary INFO server bCL simframe abstime INFO server bCL simframe abstime INFO server bCL simframe abstime INFO server bCL simframe abstime INFO server bCL simframe abstime INFO server bCL simframe abstime INFO server bCL simframe abstime INFO server bCL simframe abstime INFO server bCL simframe abstime INFO server bCL simframe abstime INFO server bCL simframe abstime INFO server bCL simframe abstime INFO server bCL simframe abstime INFO server bCL simframe abstime INFO server bCL simframe abstime INFO server bCL simframe abstime INFO server bCL simframe abstime INFO server bCL simframe abstime INFO server bCL simframe abstime INFO server bCL simframe abstime INFO server bCL simframe abstime INFO server bCL simframe abstime INFO server bCL simframe abstime INFO server bCL simframe abstime INFO server bCL simframe abstime INFO server bCL simframe abstime INFO server bCL simframe abstime INFO server bCL simframe abstime INFO server bCL simframe abstime INFO server bCL simframe abstime INFO server bCL simframe abstime INFO server bCL simframe abstime INFO server bCL simframe abstime INFO server bCL simframe abstime INFO server bCL simframe abstime Note the first and the last lines the first message sent on th frame was received twice Im not sure this is reproducible but with some luck it is Ive got the same log two times in a row I suppose the key to see it is to wait for at least REDUNDANTPACKETACKSSIZE packets As far as I understand if a user tries to send a message and it fails to any reason Laminar will try to resend it after getting packets without acknowledging the failed message We discussed the following case with jstnlef on Discord Lets say if a user tries connecting with sending a reliable Handshake message and keeps doing it for several times if they cant because of AddrNotAvailable error for instance then on success a server will get lots of handshakes from the same peer I believe that in this case we should give a user possibility to decide what to do with such messages on error handling Locallaminar master cargo bench Updating cratesio index Downloaded bincode v Downloaded quickcheck v Downloaded rand v Downloaded either v Downloaded libc v Downloaded crossbeamchannel v Downloaded bitflags v Downloaded arrayvec v Downloaded quickcheckmacros v Downloaded ryu v Downloaded envlogger v Downloaded nodrop v Downloaded regex v Downloaded regexsyntax v Downloaded ahocorasick v Compiling semverparser v Compiling libc v Compiling arrayvec v Compiling getrandom v Compiling winapi v Compiling nodrop v Compiling lazystatic v Compiling byteorder v Compiling procmacro v Compiling cfgif v Compiling memchr v Compiling serde v Compiling scopeguard v Compiling ryu v Compiling procmacro v Compiling unicodexid v Compiling bitflags v Compiling log v Compiling unicodexid v Compiling ppvlite v Compiling syn v Compiling autocfg v Compiling buildconst v Compiling rayoncore v Compiling unicodewidth v Compiling syn v Compiling itoa v Compiling regexsyntax v Compiling either v Compiling cast v Compiling threadlocal v Compiling crossbeamutils v Compiling semver v Compiling textwrap v Compiling crc v Compiling itertools v Compiling c chacha v Compiling numtraits v Compiling bincode v Compiling numcpus v Compiling randcore v Compiling crossbeamqueue v Compiling crossbeamchannel v Compiling regexautomata v Compiling rustcversion v Compiling criterionplot v Compiling clap v Compiling ahocorasick v Compiling csvcore v Compiling randchacha v Compiling randos v Compiling randpcg v Compiling randxoshiro v Compiling memoffset v Compiling quote v Compiling winapiutil v Compiling atty v Compiling rand v Compiling quote v Compiling samefile v Compiling crossbeamepoch v Compiling walkdir v Compiling bstr v Compiling serdejson v Compiling laminar v C Users Mooma Local laminar Compiling crossbeamdeque v Compiling csv v Compiling regex v Compiling rayon v Compiling tinytemplate v Compiling serdederive v Compiling envlogger v Compiling quickcheck v Compiling quickcheckmacros v Compiling criterion v error E unresolved imports laminarDeliveryMethod laminarProtocolVersion laminarVirtualConnection benches packetprocessingrs use laminarConfig DeliveryMethod ProtocolVersion VirtualConnection no VirtualConnection in the root no ProtocolVersion in the root help a similar name exists in the module protocolversion no DeliveryMethod in the root warning unused import ReadBytesExt benches packetprocessingrs use byteorderBigEndian ReadBytesExt WriteBytesExt note warnunusedimports on by default error aborting due to previous error For more information about this error try rustc explain E error Could not compile laminar warning build failed waiting for other jobs to finish error build failed Locallaminar master rustup show Default host x pcwindowsgnu installed toolchains stablex pcwindowsmsvc default nightlyx pcwindowsmsvc active toolchain stablex pcwindowsmsvc default rustc a f df Simple as that SendError can never happen within laminar because of crossbeams Sender and Receiver always exists together can only fail if the receiving end of a channel is disconnected Breaking changes in API Changed pub fn send mut self packet PacketResult in Socket Removed SendError from ErrorKind Add cargo udeps to Jenkins Task Description Currently we havent really validated the guaranteed reliabity yet We do have unit tests but it would be nice to see an integration test that uploads a MB file to another endpoint where after it validates the transferred file We already have a test environment set up in bin which can be used for this purpose Task TODO Add file transfer test here Create similar function as this one Make sure the file gets validated on the server 