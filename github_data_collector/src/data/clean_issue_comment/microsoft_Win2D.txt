Using third party library is an option but it would be great to have this feature So I have a CanvasVirtualControl in my app that I am using to draw ink over using a standard InkCanvas I retrieved a InkSynchronizer Then when the strokes are collected I invalidate the bounding rect of the stroke inside my CanvasVirtualControl and then handle the RegionsInvalidated event as follows private void canvasControlRegionsInvalidatedCanvasVirtualControl sender CanvasRegionsInvalidatedEventArgs args foreach var region in argsInvalidatedRegions using var ds senderCreateDrawingSessionregion ListInkStroke strokesToDraw new ListInkStroke foreach var stroke in inkStrokeContainerGetStrokes var regionRect region regionRectIntersectstrokeBoundingRect ifregionRectIsEmpty strokesToDrawAddstroke thiswetInkStrokes null SystemDiagnosticsDebugWriteLineStrokes to draw strokesToDrawCount dsDrawInkstrokesToDraw if strokesToDrawCount thisinkSyncEndDry exceptions gets thrown here BeginDry is called in onStrokesCollected This seems to work ok but when I can change the DPI of my CanvasVirtualControl I get the following error SystemInvalidOperationException HResult x E MessageA method was called at an unexpected time Exception from HRESULT x E SourceWindows StackTrace at WindowsUIInputInkingInkSynchronizerEndDry at CanvasTestingMainPagecanvasControlRegionsInvalidatedCanvasVirtualControl sender CanvasRegionsInvalidatedEventArgs args in Settting CanvasDrawingSessionEffectTileSize too big will throw an exception That is totally fine The problem is that it gets thrown in who knows what thread and basically crashes my app correction after looking this happens on the UI thread but it still crashes my app Is there a way to know the max size I can set here Hello Happy New Year Last year I asked a question issue and your team helped me using a good Win D approach Now I want to draw ECG channels simultaneous For a single channel I have followed damyanp suggestion with some mods I have a queue of amplitudesbyte protected by a lock enqueuing when new amplitudes arrive from one thread and dequeuing from a CanvasAnimatedContainerDraw event handler OnDraw I have a list of points to be shown on screen as a polyline This list is used only in OnDraw I am using an additional queue because I should not keep the entire list of points locked while I am drawing in OnDraw I just dequeue the additional queue adding the amplitudes in my list then I am releasing the lock and then I draw Now I need to draw CanvasAnimatedControl ECG channels but I have to guarantee that they are drawn simultaneously photo After minutes of running they are out of sync if the containers are unrelated to each other Then I ask you Should I rely on calling seven c i Invalidate when receiving the amplitudes for each ECG channel OR Should I model somehow that one OnDraw event handler modify each CanvasAnimatedControl Later edit OR Should I not use OnDraw event handler instead creating custom DrawingSession using draw It would be more elegant to call Invalidate but I dont know if the channel index OnDraw is called immediately and most important simultaneous Thanks execg Are you trying to include GPU D acceleration in my program but it always seems to run on the CPU or GPU Support Win d My Code CanvasBitmap BitmapMapCreateMappableBitmapCanvasDrawingSession drawingSession unsigned int width unsigned int height ComPtrID D Device d dDeviceD D InteropGetD D DevicePtrdrawingSession D D TEXTURE DDESC texDesc texDescWidth width texDescHeight height texDescFormat DXGIFORMATB G R A UNORM texDescMipLevels texDescArraySize texDescSampleDescCount texDescSampleDescQuality texDescUsage D D USAGEDYNAMIC texDescBindFlags D D BINDSHADERRESOURCE texDescCPUAccessFlags D D CPUACCESSWRITE texDescMiscFlags ComPtrID D Texture D d dTexture abiThrowIfFailedd dDeviceCreateTexture D texDesc nullptr d dTextureGetAddressOf ComPtrIDXGISurface d dSurface abiThrowIfFailedd dTextureAs d dSurface auto winRTSurface CreateDirect DSurfaced dSurfaceGet auto output CanvasBitmapCreateFromDirect D SurfacedrawingSession winRTSurface return output in CreateFromDirect D Surface is running by CPU and not by GPU Hi I am having an InkCanvas inside the Grid control and I am trying to set the InkPresenter s InputDeviceTypes property value as Touch or Mouse in the Grid PointerEntered event and I changed the InkPresenter s InputDeviceTypes to None in the InkPresenter StrokeCollected event So I can enable the drawing on a pointer to enter and disable the drawing after collected the strokes This is my requirement It is working properly on using the mouse but it is not working on Touch I can draw the path in touch in the first time only The second time it is not drawing Please help me how to resolve this issue Code snippet Xaml Grid xNamegrid PointerEnteredGridPointerEntered PointerMovedGridPointerMoved PointerPressedGridPointerPressed Image SourceBuldingimage jpeg InkCanvas xNamecanvas Grid Events private void InkPresenterStrokesCollectedInkPresenter sender InkStrokesCollectedEventArgs args canvasInkPresenterInputDeviceTypes WindowsUICoreCoreInputDeviceTypesNone private void GridPointerEnteredobject sender PointerRoutedEventArgs e canvasInkPresenterInputDeviceTypes WindowsUICoreCoreInputDeviceTypesMouse WindowsUICoreCoreInputDeviceTypesPen WindowsUICoreCoreInputDeviceTypesTouch Sample Thanks Santhiya A I believe it should be somehow possible if you were to use ID D RenderTargetCreateBitmapFromWicBitmap internally Right now Im using a workaround that is a bit expensive but it does the job namely loading a SoftwareBitmap and then converting that into a CanvasBitmap Hi Ive managed to make an example of how to get Win D working in a win C MFC app Here is the link Maybe this can be added in the samples folder I started with the tutorial here I added a vb project and user control as ultimately we have a large vb project we would like to move to xaml islands For me it literally works of the time alternately First time I run it I get Cannot create control stop and run it works and shows the VB control stop and run I get Cannot create control etc My attempt is available here belchambernetwpfapp vbzip url How do I make it work reliably This code buildsruns fine on v but I get module not found on the latest nuget update winrtMicrosoftGraphicsCanvasEffectsGaussianBlurEffect graphicsEffect