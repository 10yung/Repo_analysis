Hi Ive recently tried to promote my inapp purchases by using the new features available on iOS However I havent managed to do that because my app doesnt support the SKPaymentTransactionObserver method Here there are more information about promotions Do you think you can add this feature Thanks As it currently stands if a dev forgets to set the production boolean to YES upon submitting for the AppStore issues can incur with receipt validation app will use Apples sandbox verification server URL instead of their production verification server URL IAPHelper should utilize CLANG macros as a failsafe to automatically force that variable to YES if app is in release mode not debug mode ifdef DEBUG define releaseBuild NO else define releaseBuild YES endif Then in IAPHelperm if production Should now read if production releaseBuild When validating receipt Apples response can be nil which causes the app to crash when it tries to convert nil to JSON via NSDictionary rec IAPShare toJSONresponse I propose a modification simply in the readme docs example code to now be as follows IAPShare sharedHelper iap checkReceipt NSData dataWithContentsOfURL NSBundle mainBundle appStoreReceiptURL AndSharedSecretyour sharesecret onCompletion NSString response NSError error if response Convert JSON String to NSDictionary NSDictionary rec IAPShare toJSONresponse if rec status integerValue IAPShare sharedHelper iap provideContentWithTransactiontrans NSLogSUCCESS response NSLogPurchases IAPShare sharedHelper iappurchasedProducts else NSLogFail else NSLogFail Apple server malfunction or connection interruption Thats a screenshot of my iTunesConnect inAppPurchase page IAPShare sharedHelper iap requestProductsWithCompletion SKProductsRequest requestSKProductsResponse response if response NSLogi responseproductscount This always returns It should return Any ideas iOS support Without this some webview based app can get stuck Is it okay if I just set it up IAPShare sharedHelper iapproduction YES Your app crashed on iPad running iOS connected to an IPv network when we Launch the application Navigate to PurchaseRecharge tab Proceed to purchase one of the IAP products This occurred when your app was used On WiFi We have attached detailed crash logs to help troubleshoot this issue Next Steps To resolve this issue please revise your app and test it on a device while connected to an IPv network all apps must support IPv to ensure that it runs as expected Resources For information on how to symbolicate and read a crash log please review Tech Note TN Understanding and Analyzing Application Crash Reports For information about supporting IPv Networks please review Supporting IPv DNS NAT Networks and About Networking Hi First of all let me thank you for the great work Im a very happy adopter of your library since almost years now I would like to implement a simple mechanism to properly handle cancelled subscriptions In other words if a user disables the autorenewal of the subscription I would like to be aware of it and thus deactivate the corresponding inapp purchases when the subscription expires Whats the best way do it Will this be enough Will this automatically clear subscriptions that are no longer active IAPShare sharedHelper iap restoreProductsWithCompletion SKPaymentQueue payment NSError error if error error do your stuff else do your stuff Or should I clear inapp purchases before doing that IAPShare sharedHelper iap clearSavedPurchasedProducts Thanks Is this library compatible with iOS Has it been tested with iOS It looks like it has been updated within the past months but there is no mention of recent iOS versions unfortunately so I cant tell Thanks