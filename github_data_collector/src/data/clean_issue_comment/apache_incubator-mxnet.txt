 Requesting for C API support for MXNet Profiler Does MXNet support Profiler APIs in C packageinterface like the Python interface If it does then its great But I cannot find any documentation anywhere about this Any pointers will be helpful Thanks Description A clear and concise description of what the bug is After updating the version of mxnet to mxnetcu b I get error AttributeError module mxnetndarray has no attribute mygemm Error Message When use exampleextensionslibcustomoptestgemmpy got that AttributeError module mxnetndarray has no attribute mygemm And I check the libmxnetso found that objdump usrlocallibpython distpackagesmxnetlibmxnetso File format not recognized To Reproduce Steps to reproduce Paste the commands you ran that produced the error cd exampleextensionslibcustomop make python testgemmpy get error AttributeError module mxnetndarray has no attribute mygemm objdump T t usrlocallibpython distpackagesmxnetlibmxnetso get error objdump usrlocallibpython distpackagesmxnetlibmxnetso File format not recognized What have you tried to solve it I use MobulaOP its ok Can we explain what different between MobulaOP and MXNET Why the libmxnetso is not recognized and when can we release the Description Update the license to apache skylook could you approve it Checklist Essentials Please feel free to remove inapplicable items for your PR The PR title starts with MXNETJIRAID where JIRAID refers to the relevant JIRA issue created except PRs with tiny changes Changes are complete ie I finished coding on this PR All changes have test coverage Unit tests are added for small changes to verify correctness eg adding a new operator Nightly tests are added for complicatedlongrunning ones eg changing distributed kvstore Build tests will be added for build configuration changes eg adding a new build option with NCCL Code is welldocumented For userfacing API changes API doc string has been updated For new C functions in header files their functionalities and arguments are documented For new examples READMEmd is added to explain the what the example does the source of the dataset expected performance on test set and reference to the original paper if applicable Check the API doc at To the best of my knowledge examples are either not affected by this change or have been fixed to be compatible with this change Changes Feature tests and when applicable API doc Feature tests and when applicable API doc Comments If this change is a backward incompatible change why must this change be made Interesting edge cases to note here Description implement storage tagging the first half of the memory profiler Checklist Essentials Please feel free to remove inapplicable items for your PR x The PR title starts with MXNETJIRAID where JIRAID refers to the relevant JIRA issue created except PRs with tiny changes x Changes are complete ie I finished coding on this PR x Code is welldocumented For userfacing API changes API doc string has been updated For new C functions in header files their functionalities and arguments are documented For new examples READMEmd is added to explain the what the example does the source of the dataset expected performance on test set and reference to the original paper if applicable Check the API doc at x To the my best knowledge examples are either not affected by this change or have been fixed to be compatible with this change Changes x This PR is the first half of the GPU memory profiler It implements storage tagging which adds profiler scope name and data structure information to each allocated storage handle FYI szha erichaibinlin Description Cherrypick to fix MKLDNN license Checklist Essentials Please feel free to remove inapplicable items for your PR The PR title starts with MXNETJIRAID where JIRAID refers to the relevant JIRA issue created except PRs with tiny changes Changes are complete ie I finished coding on this PR All changes have test coverage Unit tests are added for small changes to verify correctness eg adding a new operator Nightly tests are added for complicatedlongrunning ones eg changing distributed kvstore Build tests will be added for build configuration changes eg adding a new build option with NCCL Code is welldocumented For userfacing API changes API doc string has been updated For new C functions in header files their functionalities and arguments are documented For new examples READMEmd is added to explain the what the example does the source of the dataset expected performance on test set and reference to the original paper if applicable Check the API doc at To the best of my knowledge examples are either not affected by this change or have been fixed to be compatible with this change Changes Feature tests and when applicable API doc Feature tests and when applicable API doc Comments If this change is a backward incompatible change why must this change be made Interesting edge cases to note here Description The NewTensor and NewStream API had changed to different signatures while the basicstreamcu sample still use the incorrect interface Checklist Essentials Please feel free to remove inapplicable items for your PR The PR title starts with MXNETJIRAID where JIRAID refers to the relevant JIRA issue created except PRs with tiny changes x Changes are complete ie I finished coding on this PR x All changes have test coverage Unit tests are added for small changes to verify correctness eg adding a new operator Nightly tests are added for complicatedlongrunning ones eg changing distributed kvstore Build tests will be added for build configuration changes eg adding a new build option with NCCL Code is welldocumented For userfacing API changes API doc string has been updated For new C functions in header files their functionalities and arguments are documented For new examples READMEmd is added to explain the what the example does the source of the dataset expected performance on test set and reference to the original paper if applicable Check the API doc at x To the best of my knowledge examples are either not affected by this change or have been fixed to be compatible with this change Changes Feature tests and when applicable API doc Feature tests and when applicable API doc Comments If this change is a backward incompatible change why must this change be made Interesting edge cases to note here Description Fixes Checklist Essentials Please feel free to remove inapplicable items for your PR The PR title starts with MXNETJIRAID where JIRAID refers to the relevant JIRA issue created except PRs with tiny changes Changes are complete ie I finished coding on this PR All changes have test coverage Unit tests are added for small changes to verify correctness eg adding a new operator Nightly tests are added for complicatedlongrunning ones eg changing distributed kvstore Build tests will be added for build configuration changes eg adding a new build option with NCCL Code is welldocumented For userfacing API changes API doc string has been updated For new C functions in header files their functionalities and arguments are documented For new examples READMEmd is added to explain the what the example does the source of the dataset expected performance on test set and reference to the original paper if applicable Check the API doc at To the best of my knowledge examples are either not affected by this change or have been fixed to be compatible with this change Changes Feature tests and when applicable API doc Feature tests and when applicable API doc Comments If this change is a backward incompatible change why must this change be made Interesting edge cases to note here Description Back port Checklist Essentials Please feel free to remove inapplicable items for your PR The PR title starts with MXNETJIRAID where JIRAID refers to the relevant JIRA issue created except PRs with tiny changes Changes are complete ie I finished coding on this PR All changes have test coverage Unit tests are added for small changes to verify correctness eg adding a new operator Nightly tests are added for complicatedlongrunning ones eg changing distributed kvstore Build tests will be added for build configuration changes eg adding a new build option with NCCL Code is welldocumented For userfacing API changes API doc string has been updated For new C functions in header files their functionalities and arguments are documented For new examples READMEmd is added to explain the what the example does the source of the dataset expected performance on test set and reference to the original paper if applicable Check the API doc at To the best of my knowledge examples are either not affected by this change or have been fixed to be compatible with this change Changes Feature tests and when applicable API doc Feature tests and when applicable API doc Comments If this change is a backward incompatible change why must this change be made Interesting edge cases to note here ERROR testgluondatavisiontestrandomtransforms Traceback most recent call last File usrlocallibpython distpackagesnosecasepy line in runTest selftestselfarg File workmxnettestspythonunittestcommonpy line in testnew origtestargs kwargs File workmxnettestspythonunittesttestgluondatavisionpy line in testrandomtransforms assertalmostequalnumapplyfloatiteration File workmxnetpythonmxnettestutilspy line in assertalmostequal print n Maximum errors for vector of size rtol atol nformatasize rtol atol AttributeError float object has no attribute size begin captured logging common INFO Setting test npmxpython random seeds use MXNETTESTSEED to reproduce end captured logging Description This PR introduces an improved implementation of GPU BatchNorm when useglobalstats is True Performance results using V PCIe card shape of data dtype float FWDBWD axis Old implementation time ms New implementation time ms speedup FWD x BWD x FWD x BWD x FWD x BWD x FWD x BWD x dtype float FWDBWD axis Old implementation time ms New implementation time ms speedup FWD x BWD x FWD x BWD x FWD x BWD x FWD x BWD x Kh L Jerryzcn FYI Checklist Essentials Please feel free to remove inapplicable items for your PR x Changes are complete ie I finished coding on this PR x All changes have test coverage x To the best of my knowledge examples are either not affected by this change or have been fixed to be compatible with this change