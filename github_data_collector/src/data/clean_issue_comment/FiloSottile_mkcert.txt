If the user wants to give mkcert the ability to run as root via sudo then they should explicitly do so Having a process fallback to running via sudo automatically itself is very scary It basically allows mkcert to piggy back root privileges of the back of another unrelated commands sudo timeout window This is pretty ripe for abuse It is also very surprising when you run mkcert without sudo and discover that has somehow magically managed to write to your system trust store This is exactly what happened to me and led to me trying to figure out how this happened Printing a message saying That operation requires root rerun with sudo should be all that is needed Potential change for first change and first Go code so Im sure there are things that could be improved CC dsebastien I want to create a certification for a host with a specific port bash mkcert localhost On execute this following command we get this following result Using the local CA at UserstruongnmtLibraryApplication Supportmkcert ERROR localhost is not a valid hostname IP URL or email Related to I recently installed the latest mkcert and am unable to see the cert in Certificate Trust Settings I tried uninstalling deleting the root and regenerating for good measure but no dice IMG EF D D C Windows x Chrome Wildcard certificates created per the doc do not work on Windows The cert shows up in Chrome as Invalid for whoamilocalhost mkcert keyfile keypem certfile certpem localhost Nonwildcard certificates with specific subject alternative names do work This shows up as Valid in Chrome for whoamilocalhost mkcert keyfile keypem certfile certpem blogexamplecom whoamilocalhost Hi I tried to use mkcert on Windows However when I use mkcert install it is failed because access is denied I dont know the problem because I use cmd as administrator Screenshot mkcert currently sets the name of the Root CA certificate to mkcert userhost at least thats what I see in my Trusted Root Certification Authorities on Windows Would it be possible to customize even partly the name eg adding a custom suffix In my case for isolation purposes I generate multiple Root CA certificates for each environment of my application Of course this is only used on the developers machines but it would be nice for us to be able to distinguish the entries alpine based dockerfile multistage build scratch container create Makefile use gox for cross go compilation This PR creates a new package duplicating the truststore logic into its own package My intent is for a subsequent PR to refactor main to use the truststore package and remove truststore logic from the main package A simple mkcert install isnt enough to inject the Root CA to Chromium from puppeteer Anybody have any good advice EDIT Note I run puppeteer in docker maybe this is the problem Whatever The problem is that pkinssdb doesnt exist So i came to this workaround mkdir p HOMEpkinssdb certutil d sqlHOMEpkinssdb N emptypassword rootbinmkcert install And now the Chromium called via puppeteer can verify the ssl certificates and ignorecertificateerrors is not needed any more