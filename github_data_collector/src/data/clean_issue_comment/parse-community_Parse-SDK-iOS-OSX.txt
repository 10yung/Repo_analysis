I have implemented the sign in with the apple and connected it to Parse Everything worked fine until I started saving objects in different classes I got Following Error Error jwt expired Code Version Optionaljwt expired Before making any conclusion on this issue I tried to refresh my token by logging In again with apple I am now able to save objects in any class In facebook there is the token expiration date if token would expire login In again would do the trick but the problem is there is no expiry date attached with Auth Token returned by Apple Is there any other way around to solve this issue or to ask user every time to signup with apple For some reason weve never added OCMock as an official dependency in Carthage Its just automatically loaded because of the Facebook SDK till now I am trying to implement Sign in With Apple I am able to successfully authenticate the user on my iPhone running iOS using iOS API Parse Server version Parse iOS SDK As part of login process i save more information in User for the newly created user after PFUserlogInWithAuthTypeinBackground apple is executed successfully I get error when saving I read somewhere that it could be related nil sessionToken it is indeed nil after successful login The PFUsercurrentauthenticated is true I read in many posts about keychain access but not able find entry for my app in Keychain app is missing entry an issue How to add it Keychain Sharing is enabled I have also Facebook and email based account These work fine How to fix the issue Things i have tried Clear build Clean folder Delete app Thanks Ashish Ive been using Parse since around and have migrated to AWS ever since Ive become pretty familiar with it but this new issue I found is a bit odd When you execute a PFQuery on a PFRelation object with a limit value of the query returns incorrect objects I havent manipulated the server code so Im assuming this is an issue with the iOS SDK Heres an example of what I have MARK DispatchGroup let dispatchGroup DispatchGroup Initialized array of Post objects to append to this class posts array each time the user scrolls to the end of the collection view Useful to sort each new list of Post objects from newest to oldest var additionalPosts Post Post additionalPostsremoveAll Loop through the Group PFObjects for group in groups MARK DispatchGroup dispatchGroupenter MARK PFQuery let postsQuery grouprelationforKey postsquery postsQueryorderbyDescending createdAt postsQueryskip postsQuerylimit If it returns the incorrect objects sometimes not at all If it works fine postsQueryfindObjectsInBackground objects PFObject error Error in if error nil Iterate through each Post PFObject objectsforEach object PFObject in MARK Post let post Postobject group additionalPostsappendpost Sort the additionalPosts array with the new element additionalPosts additionalPostssortedby objectcreatedAt Date objectcreatedAt Date MARK DispatchGroup dispatchGroupleave else print file line Error errorlocalizedDescription as Any MARK DispatchGroup dispatchGroupleave Essentially this piece of code gets the first posts per each group the current user is a member of The reason why we even need to use skip and limit on these queries is because we page the UICollectionView once the user scrolls to the end of the list classic implementation seen in every product Once scrolled to the end of the list the request gets the next most recent posts per each group youre a part of but this doesnt happen It only happens when the limit is Hi folks So Ive started working on this but Ive run into some trouble that Im going to need some extra eyes on Basically in recent versions of our stack you can check for iOS and above in Objective C using this syntax if availableiOS Since Sign in with Apple is officially available for iOS and newer only Im using this to ensure the compiler doesnt choke on the new types Unfortunately its choking on them anyway The static analysis doesnt show any issues but at actual build time this gets thrown up img width altScreenshot at src Ive tried creating a new project with a deploy target of like ours but it just works So this is likely some build setting somewhere and I have no idea where that might be Any hints or help would be appreciated EDIT The code in question can be found in PFLoginViewControllerm in the loginWithApple method logic error Converting a pointer value of type NSNumber to a primitive boolean value instead either compare the pointer to nil or call boolValue Converting a pointer value of type NSNumber to a primitive boolean value instead either compare the pointer to nil or call boolValue nil returned from a method that is expected to return a nonnull value So I wanted to create an issue to being a discussion on things we need to do to resume regular releases Seems we have several issues out there that keep our builds from passing and most need to be fixed in order to have a release build complete We have some pull requests that are currently being worked on at fixing a few of these issues Information is spread out all over and I feel we need a discussion to bring all the information together so we can work out what needs to be fixed and what does not Also its safe to mention that most of these issues also effect ParseLiveQuery So let this issue serve as a discussion for both Ill start the discussion by providing some info and then I welcome any and all feedback Bolts Xcode build tools now handles macOS builds We are seeing that dependencies that have a nonspecific target namesaka Bolts vs BoltsmacOS or dynamic dependencies are attempting to use what was previously and iOS only target as dynamic or macOSCatalyst targets I dont know which it is but basically iOS targets are somehow being used for macOS builds now When loaded in Xcode you can clearly see all files in compiled sources for those targets to be marked as macOS and iOS This issue primarily effects builds that are using Carthage The primary issue here is that Bolts is no longer being maintained by Facebook and currently our only option is to update it ourselves through our own fork found here Currently mman has started removing all deprecated aka iOS only class UIWebView We still need to fix universal build targets to includeexclude specific files from specific platforms Overall this is a temporary fix as this needs a lot of work Promise Kit is a framework that has been tossed in there as a potential replacement Id love to hear opinions about wether or not we should bring bolts up to date and maintain it or switch to a well maintained async Promiselike framework like Promise Kit Also if anyone would like to assist us in implementing this let us know CircleCI and Travis Now I know weve been using both for quite a while but looking at other repos and seeing what CircleCI does now Im beginning to question whether or not we need both Both services are now capable of unit testing building multiple targets for different devices and running documentationrelease scripts Do we really want to keep maintaining both Was there a specific reason they both where implemented If anyone reading this has experience with creating CircleCITravis config files Id love to hear from you So far Ive learned enough to get our builds working again but I feel they are far from perfect Also if anyone is adept at writing rake files I feel ours could use an update to take into account the latest iOS versions and Xcode We could use your advice on not only Parse and ParseLiveQuery but on updating our Bolts fork as well ParseUI Apple Sign In The last word I heard about this is that we where looking at adding some code that helped with the login process via added functions If we really want to implement this correctly we need to update the LoginSignup UI with the official required button from Apple as well as automatically have this added as a dependency anytime Twitter or Facebook submodules are used Apples official policy is that all apps that use any other form of rd party oAuth that Apple Sign In must be offered and presented as the first option If we do this properly we can save a lot of developers so major time and I think it will be much appreciated iPad OS Catalyst Now I havent looked into what will be required to support these two but I do know we need some testers for our current components PFImageView TableView etc all could use a bit of testing to see what kind of work if any needs to be done to offer ParseUI to those platforms If its too much we need to be excluding those elements from those platforms to protect users from potentially some major confusion or frustration In the future we should look to make specific iPadOS and Catalyst classes to make developing for those platforms with Parse easier Unit Tests We have several tests failing for iOS and macOS We need this fixed if we really want to get back on track Anyone that would like to take a look at the build logs and help us get them fixed would be extremely appreciated Warnings Now that we have officially upgraded everything to Swift we should have a look at our warnings Ive seen popping up in our CICD builds Id love to see these go away before our next release Docs Id like to thank everyone whos been helping getting our docs repo updated so that our guide on parseplatformorg remains accurate However we still need quite a bit of work done This obviously isnt required for our next release but I thought it was worth mentioning Conclusion We have a lot of work to do but if we can all work together to knock these out we can get back to adding features and improving Parse and LiveQuery with the regularity Parse is known for Id love to hear any and all feedback about any of these issues If anyone wants to start working on any of them Id love to start getting the other associated issues assigned to them It seems we are kind of all over the place and all our issues are becoming dated making it hard to keep track of what we need done Please lets use this discussion to regroup and get on the same page and make our next release possible If anyone is interested in being a regular contributor and joining our team let us know This started a few days ago There havent been any source changes to trigger this Has our environment been changed parsecommunityiososx EDIT Full disclosure I posted this before I tested it locally I think I just wanted attention But bundle exec rake testcocoapods locally fails at the same spot with Xcode Hi We always download the iOS source ZIP file from It normally consists of files eg version Boltsframework Parseframework However the ZIP for iOS only contains the Parseframework Is this intentional And can the Boltsframework from version still be used Thanks Hi I understand that Parse Server has been updated with native support for Apple Sign In though Im very uncertain whats recommended to implement it with this SDK Should I write a helper that conforms to PFUserAuthenticationDelegate similar to what the SDK has in PFFacebookUtils or is that overkill PFFacebookUtils calls FBSDKAccessToken setCurrentAccessToken token but idk what the equivalent would be for Apple Perhaps this information would be helpful to include in the SDK docs