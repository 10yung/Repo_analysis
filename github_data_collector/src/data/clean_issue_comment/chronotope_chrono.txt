I have searched extensively so please excuse me if this has been addressed Im using stdweb api and compiling with cargo web My wasm module panics with a not implemented I have tried all feature options including defaultfeatures false jssys and wasmbindgen Obviously with wasmbindgen I get Error loading Rust wasm module calendar TypeError import object field wbindgenplaceholder is not an Object Its unclear what exact line of of my code produces the panic but it appears to be the time crate causing the panic img width altScreen Shot at PM src rust time line pub fn gettime i i unimplemented The only types Im using are use chronoDuration NaiveDate NaiveDateTime NaiveTime What am I missing Does chrono work with stdweb or only wasmbindgen Also add the naive versions These would just be useful to have for completeness in the library Closes Draft Stage NOTE This is a work in progress its not quite ready to be merged yet I dont think A NaivePeriod covers the period of time between two NaiveDateTimes inclusive This data structure can be used to intersect two NaivePeriods to determine if they overlap This is in partial fulfillment of but does not provide necessary code to handle DateTime objects with offsets Refs Context Back in a similar request for a date transition API was closed I wish to reopen conversation for a more generalized API for the same Such APIs are utilized extensively in timeseries analytical workloads and with chrono almost being the canonical datetime crate for Rust there is value to be had by having such APIs within the library I am already building this and would like put forth a PR for the same In the meanwhile checking if the stance of the team on the issue has changed Public Interface Support for following methods on a NaiveDate instance for the following APIs rust startofyear Transforms to endofyear Transforms to startofmonth Transforms to endofmonth Transforms to startofweek Transforms to endofweek Transforms to All the APIs can also have startofpred endofpred startofsucc endofsucc keeping things consistent While I am explicitly referring to NaiveDate other structs can also be considered one at a time While there are some issuesPRs etc relating to wasm there is no specific section in documentation properly detailing steps to use it with something like wasmpack For now v the following code fails to compile rust extern crate wasmbindgen use wasmbindgenprelude use chronoNaiveDate wasmbindgen pub struct Request date NaiveDate The error message is wasmbindgen the trait wasmbindgenconvertFromWasmAbi is not implemented for chrononaivedateNaiveDate A Period data structure is similar to a Duration except that it has a specific start date For example one might have a period of days starting from January which would have a start datetime of and an end datetime of Obviously these dont have timezonesoffsets so they are more likely to be NaivePeriod objects I am working on an implementation for this in a branch of chrono The reason I am thinking this might be useful within the chrono library itself is that given a NaivePeriod object we can then determine if there is overlap with another NaivePeriod or whether it contains a NaiveDateTime I personally am working on a scheduling app and thus this is a useful use case for me That said Im not sure it belongs within the chrono library perhaps a separate addon library would be more useful Thanks for your feedback This code toml dependencies chrono rust use chronoLocal TimeZone fn main println Localymdopt results in panic inside time crate cargo r Compiling ymdpanic v C code ymdpanic Finished dev unoptimized debuginfo targets in s Running target i pcwindowsmsvc debug ymdpanicexe thread main panicked at attempt to subtract with overflow C time src sysrs note run with RUSTBACKTRACE environment variable to display a backtrace error process didnt exit successfully target i pcwindowsmsvc debug ymdpanicexe exit code The time crate will hopefully have a v release coinciding with the release of Rust As such all references to the time crate make clear that it is the v crate not the soontobereleased v crate The first line of the README was also changed as its not a strict superset of the new version Implementation for a Month enum allowing serderialization The implementation mostly mirrors the Weekday enum It only adds the enum with minimal integration so as to not cause any backwards compatibility issue A deeper integration should be up to discussion Suggested in Issue 