 Summary As a modern cross platform developer I need to be able to add a project type for web assembly to my Xamarin Forms solution and deploy a webassembly packageversionbuild of my application It should work the exact same as a UWP app maximized into the current size of the browsers rendering window API Changes None Intended Use Case Deploy my applications to a web assembly container that runs within a sandbox and has default access to local sandboxed storage on the device As is expected when running a UWP app Bug report best practices Description You can test the problem in the MainPagexamlcs file in our sample project On Android and IOS there is no such problem Basic Information Platform Target Frameworks UWP Description of Change Modifies the UWP EntryRenderer FormsTextBox and FormsTextBoxTemplate to support optionally hiding the Delete Button as support by the other platforms Method used to implement this is to extract the ButtonVisible visual state and remove it from the control template when the entry is set to not display the delete button If it is changed back the ButtonVisible state is added back to the control template Issues Resolved Fixes API Changes None Platforms Affected UWP BehavioralVisual Changes Describe any changes that may change how a users app behaves or appears when upgrading to this version of the codebase Delete button will be shown or not shown based on the Entrys ClearButtonVisibility value BeforeAfter Screenshots If possible take a screenshot of your test case before these changes were made and another screenshot after the changes were made to show possible visual changes Default Behavior Updated behavior when clear button is set to never Testing Procedure Open the issue page in the control gallery and follow the instructions Just clicking the toggle button will flip the state back and forth PR Checklist To be completed by reviewers Targets the correct branch Tests are passing or failures are unrelated Description The Image and Button Image that its source is set to FontImageSource disappears on UWP after you lock the screen for few seconds or just Ctrl Alt Del then Cancel after few seconds Steps to Reproduce Create Xamarin forms app add UWP only copy this code Xaml Button Margin ButtonImageSource FontImageSource FontFamilyArial GlyphX Size ColorBlue ButtonImageSource Button Ctrl Alt Del Wait like seconds It is interesting that the issue will not appear if you cancel quickly Cancel You will see the images gone Expected Behavior Images should still be showing Actual Behavior Anything assigned to FontImageSource will disappear Basic Information Latest everything It doesnt matter which UWP target it is It doesnt matter if you use Image or Button or if you use custom fonts or not Screenshots fontimg fontimg Description If I bind a Stepper and an Entry to the same double property they do not always seem to stay in sync and many strange behaviors occur Steps to Reproduce Representative XAML StackLayout Entry TextBinding DurationSeconds Label TextBinding DurationSeconds Stepper Minimum Maximum Increment ValueBinding DurationSeconds StackLayout Representative ViewModel public class MainPageViewModel INotifyPropertyChanged private double durationSeconds public double DurationSeconds get return durationSeconds set if value durationSeconds durationSeconds value RaisePropertyChanged public MainPageViewModel DurationSeconds private void RaisePropertyChanged CallerMemberName string propertyName null PropertyChangedInvokethis new PropertyChangedEventArgspropertyName public event PropertyChangedEventHandler PropertyChanged Start the application Tap the Entry and wait for the keyboard to appear Push backspace until the field is blank Type The application freezes A handful of other quirks are described below under actual behavior Expected Behavior I expect the value to be clamped up to if I type a value less than and clamped to if I type a value greater than Actual Behavior Typing values greater than such as is allowed and the values are not clamped The stepper properly alters its button state properly Attempting to type a value like usually properly clamps to However if you type then use the arrows to add a in front then use the arrows to finish typing the value will not clamp If the first thing you type is after starting the app an infinite loop begins It appears the Stepper tries to clamp the value to but for some reason the Entry refuses to accept the new value and publishes as a newlyentered value Then the Stepper and Entry fight over it forever HOWEVER if you type any amount of text then clear it then type it clamps to This is weird because in any other circumstance typing clamps up to In this state it seems typing any value below the minimum is allowed All of the above is true on multiple Android devices Ive tried On iOS trying to type clamps to which is still incorrect but better than crashing But wont clamp down to although typing values like will It feels like a bug particularly the infinite loop since typing some amount of text will cause the behavior to change Basic Information Version with issue Tested with Xamarin Forms and Last known good version NA IDE Visual Studio for Mac build Platform Target Frameworks iOS Android UWP NA Android Support Library Version Whatever the default template includes Nuget Packages NA Affected Devices Samsung Galaxy Tab Active Samsung Galaxy Tab Two prototype industrial Android devices I cant name iPhone Description of Change Because of visual differences that occur when setting TargetPlatformVersion to we should be testing our CG against Otherwise we arent getting the full truth when trying to fix issues Platforms Affected UWP Testing Procedure Make sure the gallery runs PR Checklist To be completed by reviewers x Targets the correct branch Tests are passing or failures are unrelated Description If you create a UWP I know beta app and use Shell and in the Appxamlcs register a route that isnt defined in the Shell markup and then navigate to that page the page code Constructor onappearing etc executes but its never displayed in the UI Steps to Reproduce Create a shell app Add UWP per the documentation Add a custom route registration Add a page in tabs and have a link on it to the custom route Expected Behavior Should display exactly like Android and iOS Actual Behavior Doesnt display Basic Information Version with issue Last known good version none IDE VSnet Platform Target Frameworks UWP Bug report best practices Description Setting a button with CharacterSpacing does not respect it Steps to Reproduce Add a button with TextTest and CharacterSpacing for example Also add it with a Label instead to see the difference Run in UWP Label respects CharacterSpacing Button does not Expected Behavior Same behavior than Label Actual Behavior Does not have same behavior than Label No spacing Basic Information Version with issue Last known good version IDE Visual Studio Platform Target Frameworks UWP Affected Devices Windows PC Be able to set ShellNavBarIsVisibleFalse but still have a navicon floating on top of content Basically push all content to the top of the screen and have a hamburger icon overlayed on top Refer to this question for more details Description of Change All these changes were applied to both iPhone and iPad based implementations Calculate the flyout positioning based on RTL settings propagate RTL to search handler propagate RTL to ContentPage propagate RTL to Navigation Bar Modify EffectiveFLowDirection so that its set during FlowDirectionChanging not FlowDirectionChanged Issues Resolved Please use the format fixes xxxx for each issue this PR addresses fixes Platforms Affected iOS BehavioralVisual Changes RTL Store Shell Testing Procedure Go into Store shell and play with the Flow Direction button that has been added PR Checklist To be completed by reviewers Targets the correct branch Tests are passing or failures are unrelated 