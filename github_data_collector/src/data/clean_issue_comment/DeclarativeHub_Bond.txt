 This PR proposes to update our Xcode project to use Swift Packages rather than Carthagecompiled frameworks This has a few knockon effects It should resolve the build issues weve been seeing when adding this project to the Swift Source Compatibility Suite It will require developers to use Xcode x or a newer version The Playgrounds still use the Carthagecompiled frameworks I couldnt see a way to get these to use SPMprovided packages Ive also raised the Swift tools version to Swift Its not required but its implied by requiring Xcode Hi Love ReactiveKit Bond but Im having trouble implementing drag to reorder in a table view backed by a MutableObservableArray I tried using the proposed solution in using tableViewreactivedataSourceforwardTo self but the reorderControl does not appear Ive also noticed that declaring that data source proxy after mockDatabindto tableView causes no cells to load at all It seems that Bond brought significant changes to data sources could that have reintroduced the issue resolved by v Hi I have this property in my viewModel that change the value of my UIImage if my method returns true of false var image ObservableUIImage if musicServiceisPlaying return ObservableUIImageUIImagenamed icpause else return ObservableUIImageUIImagenamed icplay Want I want is to be able to update the value of my property and notify its observers that the value changed or didnt change without having to imageObserveNext cause I dont have any additional processing to do with the closure Example func foo Do something imageUPDATE So basically I want to know if there is another method that I can call to pass again in my property return the right image and notify all the observers Id like to be able to bind to an ObservableArray while only receiving updates on the first n items of that array Much like I would use prefix on an Array For example reviewsprefixCollection bindto Is there any way I can achieve this effect without using filterCollection and looking up the index in the closure I am trying to create a MutableObservableArray D so that I can bind it with a table view which has different sections I cant seem to get it right Here is my code Properties let upcomingTrips MutableObservableArray DString TripListModelArray D let trips TripListModel JSONArray data result as String Any selfupcomingTripsvalue Array DString TripListModelsectionsWithItems Dictionarygrouping trips by time First I am mapping API response to an array on objects and then grouping them according to date string but I cant assign it to instance of MutableObservableArray D What am I doing wrong here batchUpdate causes the crashes on both UITAbleView and UICollectionView swift func testBatchUpdates arraybatchUpdate array in array arrayremoveat the crucial thing here is array Add testing target for MacOS Implement test for NSTableView SignalProtocol diff Fix issue with excessive reloadData in NSTableView SignalProtocol diff Working on collectionschangesets I found a possible issue swift case nextlet element let newCollection element if let collection collection let diff generateDiffcollection newCollection observerreceiveOrderedCollectionChangesetcollection newCollection patch diff diff else observerreceiveOrderedCollectionChangesetcollection newCollection patch collection newCollection Line observerreceiveOrderedCollectionChangesetcollection newCollection patch diff diff I think this is a mistake You shouldnt pass patch option there Then this patch will be used here swift open func applychangeset Changeset guard let tableView tableView else return let patch changesetpatch if patchisEmpty collection clonechangesetcollection tableViewreloadData else tableViewbeginUpdates patchforEachapply tableViewendUpdates And as far as its empty it always reloadData Ive had a bit of a poke at this one but I cant get the moons to align to let me apply sorting to MutableObservableArray D I was hoping to be able to sort the nodes at the current level of the tree so nonrecursively 