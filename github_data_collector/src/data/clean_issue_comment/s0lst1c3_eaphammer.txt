Is your feature request related to a problem Please describe No its a feature Describe the solution youd like Add EAP authentication to the list of fake access point authentication types Describe the bug After installing dependencies and running eaphammer the script hangs on Saving Current IP Configuration with no error messages Ive also tried running the above with a second wifi adapter identified by wlan with no success To Reproduce Steps to reproduce the behavior kalisetup eaphammer certwizard eaphammer i wlan channel auth wpaeap essid ECorp creds Preview rootkalieaphammereaphammer eaphammer i wlan channel auth wpaeap essid CorpWifi creds Am I root Checking for rootness I AM ROOOOOOOOOOOOT Root privs confirmed D Saving current iptables configuration Command strings used eaphammer i wlan channel auth wpaeap essid EAPHammer verbose output using the debug flag email null essid CorpWifi fragmthreshold null greenfield false hostileportal false ht null htdelayedblockack false hwmode null interface wlan interfacepool null karma false keylength knownbeacons false knownssids null knownssidsfile null ldpc false locale null loud false lsigtxopprot false macblacklist null macwhitelist null manualconfig null maxnumstations null maxspatialstreams null negotiate balanced notafter notbefore obssinterval null org null orgunit null owetransitionbssid null owetransitionssid null password null peapversion null pivot false pmf null pmkid false privatekey null privatekeypasswd null pskcapturefile null reapcreds true remoterig null requireht false rtsthreshold null saveconfig null saveconfigonly null selfsigned false servercert null shortgi false smps null ssidblacklist null ssidwhitelist null state null trolldefender false usemaxamsdulength false userlist null wmm false wordlist rooteaphammereaphammerwordlistsrockyoutxt wpapassphrase null wpaversion null Saving current iptables configuration EAPHammer Version eaphammer version Paste output here OS the OS from which you are running EAPHammer Kali Linux ARM for the Raspberry Pi kalilinux rpi nexmon Configuration of Target Access Point if known applicable ESSID CorpWifi Channel Authentication WPAEAP During an assessment I had problems within a PEAP communication but as the TLS tunnel was created using DH to share keys I wasnt able to decrypt the tunnel Anyway I finally discovered that if in hostapdwpe you comment the line where the DH file is indicated the dhfilepathtodhparams line the TLS tunnel is created sharing keys via RSA and you can easily decrypt that tunnel with Wireshark using the servers private key Describe the solution youd like I would like that eaphammer implement this behaviour by default if the author considers that this wont suppose any security issue Describe alternatives youve considered Create an eaphammer parameter to indicate when you want this behaviour Add this behaviour to debug Additional context I suppose that this would also be useful to decrypt EAPTTLS tunnels but I havent tried it yet Thank you very much for the tool and for your time Hola the hostapd output only shows that a mac connected to manaap but is there a way to see the ssid the client used to connect It seems that airodump does not sniff reliably The goal is just to enumerate all items in the PNL How does the beaconing work anyway Client hops fastly through all the channels and the AP beacons n times per second So eaphammers hostapd has a predefined channel Hi Gabriel during my latest usage of EAP password spray I encountered the following eaphammer eapspray interfacepool wlan essid someESSID password Password userlist rootuserstxt snip Root privs confirmed D wlan Trying credentials testPassword someESSID Exception in thread Thread Traceback most recent call last File usrlibpython threadingpy line in bootstrapinner selfrun File usrlibpython threadingpy line in run selftargetselfargs selfkwargs File rootDownloadseaphammercoreeapsprayworkerpy line in start if wpasupplicanttestcreds File rootDownloadseaphammercorewpasupplicantpy line in testcreds printlinereplaces selfinterface s selfinterface end TypeError a byteslike object is required not str Small fix is attached Thank you for building and maintaining this tool Describe the bug Import error To Reproduce Normal install Install enerate certificates ImportError No module named pem unprofit dagger Expected behavior Install Screenshots Command strings used eaphammer certwizard eaphammer EAPHammer verbose output using the debug flag eaphammer certwizard Traceback most recent call last File eaphammer line in module import certwizard File homeusereaphammercertwizardinitpy line in module from certwizardcore import importcert File homeusereaphammercertwizardcorepy line in module import certwizardcertutils as certutils File homeusereaphammercertwizardcertutilspy line in module import pem ImportError No module named pem EAPHammer Version eaphammer version eaphammer version Traceback most recent call last File eaphammer line in module import certwizard File homeusereaphammercertwizardinitpy line in module from certwizardcore import importcert File homeusereaphammercertwizardcorepy line in module import certwizardcertutils as certutils File homeusereaphammercertwizardcertutilspy line in module import pem ImportError No module named pem OS the OS from which you are running EAPHammer Parrot OSKali Configuration of Target Access Point if known applicable Configuration of Target Client Device if known applicable Additional context Tried using python m install pem same issue Tried using sudo python m pip install pem same issue Tried using sudo python m pip install pem Same issue Is your feature request related to a problem No its more of a nice to have sort of thing Describe the solution youd like It would be helpful if hashes andor plaintext passwords captured by eaphammer were able to be saved to their own unique files in the loot folder or a directory of the users choice Its not like its super inconvenient or anything for me to do some grepmagic to yank user hashes out of the hostapd output log and drop them into a file but it would be really nice if eaphammer did it for you It would also pave the way to be able to send hashes to a hashcracking server via the autocrack feature down the road Describe alternatives youve considered You could always just tell me to shut up and grep it manshrugging Tool relies on of responder Responder went through massive changes in the update and eaphammer will no longer work with the changes Tested under Ubuntu Is your feature request related to a problem Please describe This is an alltoocommon problem we face with wifi hacking where we are in a targetrich environment with APs that broadcast across multiple channels Launching a deauth attack against a single AP or a handful of stations on one channel is easy but when APs broadcast on multiple aband channels deauths are less reliable Describe the solution youd like It would be useful to designate deauth interfaces and target APsStations so that you could launch more aggressive deauth attacks against a span of bssids channels The hope would be that these stations would eventually attempt to associate to the rogue AP before the timeout occurred and it would attempt to reassociate with the legitimate AP Describe alternatives youve considered Bettercap appears to have implemented this according to its wifi modules and it does appear capable of deauthing multiple clients even during channel hopping This is a good workaround but would be awesome if implemented directly within eaphammer 