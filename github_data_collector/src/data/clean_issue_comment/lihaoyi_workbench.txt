Hello it looks that the current build of Workbench is incompatible with Scalajs do you have any plans to add support for this upcoming major version error javalangNoClassDefFoundError orgscalajssbtpluginScalaJSPluginAutoImport error at comlihaoyiworkbenchWorkbenchPlugininitWorkbenchPluginscala error at comlihaoyiworkbenchWorkbenchPluginclinitWorkbenchPluginscala error at javalangClassforName Native Method error at javalangClassforNameClassjava error at sbtinternalincModuleUtilitiesgetObjectModuleUtilitiesscala error at sbtinternalincModuleUtilitiesgetCheckedObjectModuleUtilitiesscala error at sbtinternalincModuleUtilitiesanonfungetCheckedObjects ModuleUtilitiesscala error at scalacollectionimmutableStreamanonfunmap Streamscala error at scalacollectionimmutableStreamConstailStreamscala error at scalacollectionimmutableStreamConstailStreamscala error at scalacollectiongenericGrowableloop Growablescala error at scalacollectiongenericGrowablepluspluseqGrowablescala error at scalacollectiongenericGrowablepluspluseqGrowablescala error at scalacollectionmutableListBufferpluspluseqListBufferscala error at scalacollectionmutableListBufferpluspluseqListBufferscala error at scalacollectionTraversableLikeplusplusTraversableLikescala error at scalacollectionTraversableLikeplusplusTraversableLikescala error at scalacollectionimmutableListplusplusListscala error at sbtinternalPluginDiscoverydiscoverAllPluginDiscoveryscala error at sbtinternalLoadloadPluginsLoadscala error at sbtinternalLoadloadPluginDefinitionLoadscala error at sbtinternalLoadbuildPluginsLoadscala error at sbtinternalLoadpluginsLoadscala error at sbtinternalLoadanonfunloadUnit Loadscala error at sbtinternalLoadtimedLoadscala error at sbtinternalLoadanonfunloadUnit Loadscala error at sbtinternalLoadtimedLoadscala error at sbtinternalLoadloadUnitLoadscala error at sbtinternalLoadanonfunbuiltinLoader Loadscala error at sbtinternalBuildLoaderanonfuncomponentLoader BuildLoaderscala error at sbtinternalBuildLoaderapplyBuildLoaderscala error at sbtinternalLoadloadURI Loadscala error at sbtinternalLoadloadAllLoadscala error at sbtinternalLoadloadURILoadscala error at sbtinternalLoadloadLoadscala error at sbtinternalLoadanonfunapply Loadscala error at sbtinternalLoadtimedLoadscala error at sbtinternalLoadapplyLoadscala error at sbtinternalLoaddefaultLoadLoadscala error at sbtBuiltinCommandsliftedTree Mainscala error at sbtBuiltinCommandsdoLoadProjectMainscala error at sbtBuiltinCommandsanonfunloadProjectImpl Mainscala error at sbtCommandanonfunapplyEffect Commandscala error at sbtCommandanonfunapplyEffect Commandscala error at sbtMainLoopprocessCommandMainLoopscala error at sbtMainLoopanonfunnext MainLoopscala error at sbtStateanon runCmd Statescala error at sbtStateanon processStatescala error at sbtMainLoopanonfunnext MainLoopscala error at sbtinternalutilErrorHandlingwideConvertErrorHandlingscala error at sbtMainLoopnextMainLoopscala error at sbtMainLooprunMainLoopscala error at sbtMainLoopanonfunrunWithNewLog MainLoopscala error at sbtioUsingapplyUsingscala error at sbtMainLooprunWithNewLogMainLoopscala error at sbtMainLooprunAndClearLastMainLoopscala error at sbtMainLooprunLoggedLoopMainLoopscala error at sbtMainLooprunLoggedMainLoopscala error at sbtStandardMainrunManagedMainscala error at sbtxMainrunMainscala error at xsbtbootLaunchanonfunrun applyLaunchscala error at xsbtbootLaunchwithContextLoaderLaunchscala error at xsbtbootLaunchrunLaunchscala error at xsbtbootLaunchanonfunapply applyLaunchscala error at xsbtbootLaunchlaunchLaunchscala error at xsbtbootLaunchapplyLaunchscala error at xsbtbootBootrunImplBootscala error at xsbtbootBootmainBootscala error at xsbtbootBootmainBootscala This PR builds upon and includes commits in PR by zikolach Ive been using this with Play and these updates now solve akka version conflicts with Ive presumptive bumped the project version to feel free to correct Cheers Ive just upgraded from Play to Play and have noticed an incompatible version of Akka when running startWorkbenchServer sbtadmin startWorkbenchServer Detected javalangNoSuchMethodError error which MAY be caused by incompatible Akka versions on the classpath Please note that a given Akka version MUST be the same across all modules of Akka that you are using eg if you use akkaactor resolved from current classpath all other core Akka modules MUST be of the same version External projects like Alpakka Persistence plugins or Akka HTTP etc have their own version numbers please make sure youre using a compatible set of libraries As a test I cloned PR that updated Akka and other libraries and ran publishLocal Im pleased to announce that this pull request fixed the issue for me Could we please get his merged so others can update to Play scalajs akka sbt scala I would like to ask some questions about this project which do not belong in an issue Would it be possible to have a gitter channel for this project for general inquiries Would you please update the example app to latest versions It is really outdated now I tried to do it myself but Im still too much a newbie in sbt scalajs to succeed Thanks When developing react apps Ive been using webpack proxy to forward api to eg localhost api for speedy development of single page web apps Correct me if Im wrong but I dont see any way to proxy servers with workbench Effectively this gives my webapp the illusion that it is being hosted on the actual server allowing me to keep relative paths everywhere autowire is not an option for me currently Would it be much work to add a configuration to forward some subpath to a user chosen URL The line override def requires WorkbenchPlugin causes the refresh plugin to load It should be override def requires WorkbenchBasePlugin scalaVersion in ThisBuild val client projectinfileclient settings name testclient enablePluginsScalaJSPlugin WorkbenchSplicePlugin Loading Workbench workbenchjs Workbench connected workbenchjs workbench Splicing workbenchjs workbench Checking testclientjsdepsjsjs workbenchjs workbench Checking testclientjsdepsjs workbenchjs workbench Checking testclientfastoptjsjs workbenchjs workbench Checking testclientfastoptjs workbenchjs workbench Reloading Pages If I override that it does load modified files without refreshing but none of the modify methods while preserving state behaviour works I dont think any of the munge regexes work on the current fastOptJS I can make the pr if youd like but the language here seems to indicate the author should do it Im running bash sbt fastOptJS and point my browser at When I change some code and fastOptJS triggers but gives an compileerror my browser is refreshing anyways and therefore I cannot see the compile error in the browser log Is this expected behavior