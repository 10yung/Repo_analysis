for example the following test case will fail TESTThreadPool Case ThreadPool pool int x auto res poolenqueue int y y x resget EXPECTEQx class A virture void a class Bpublic A void a override how can I use override function a like this A a new B enqueue aa this I have many locations to wait the result so thousand futures are created but the program throw an exception about the future creations The reason may be the inner stdasync use the stdlaunchasync mode This PR solves conflicts when using this repo as a git submodule This simplifies using this repo within large git projects Dear developer I want to add shutdown function that waits until all worker finish Because I found ThreadPool will deconstructing directly if process exit I think user have right to choose terminate ThreadPool or wait for finishing Are you agree with me If you do I can submit a PR Have a good day Since its already and most compilers have supported C C feature may be used now When compiling with GCC using Winline the compiler warns that the call to the destructor will not be inlined I use ThreadPool in multiple places ThreadPoolThreadPoolh warning inlining failed in call to ThreadPoolThreadPool noexcept call is unlikely and code size would grow Winline inline ThreadPoolThreadPool Besides there is no reason in inline here Removing it Some thing like getActiveCount in java so to let consumers of the threadpool know if waiting is needed