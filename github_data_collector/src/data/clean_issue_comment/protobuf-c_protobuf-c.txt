Hello I have a protobuf code in Python that writes my data to a bin file and I need to read that data from that bin file using C using the protobufc I did the generation of the libraries for C and protobuf python to get the library for python for the same proto file The writing is good however the reading I am facing so much issues Please help me with it As I cannot find a solution to this elsewhere I am new to protobufc I want to know how the proto file complier works so I plan to debug a single test case to learn about the C code generation process Can someone tell me how to do it Thanks Linking with libprotobufca will cause relocation RX error currently Can we add fPIC in the configureac file I have tried to build according to documentation but I just got a protocgenc It looks to depend on protobuf and libprotoXXXdylib on my machine How can I get a separate protocc binary which can be copied to any other machines and exec protocc coutxxxxxxx directly Hey guys This was made as an answer to which I would also need as it is a useful feature when implementing union like messages Obviously this isnt an actual patch I just commented out the lines that specifically disable the behaviour Id like but I hoped to show more interest for this feature and maybe we can discuss howif you want that feature implemented always on commandline option buildtime arg Thanks In requiredfieldpacktobuffer maybe also others there is case PROTOBUFCTYPEMESSAGE where the nested message is first encoded into simplebufferscratch and then this temporary buffer is appended to the user supplied buffer Now my alternative way is determine the packed size of the nested message by means of protobufcmessagegetpackedsize and append that size to the buffer then call protobufcmessagepacktobuffer recursively with the nested message and the same buffer Con Pro Con In my suggestion we have to descent twice once for the count once for encoding In the current implementation counting and encoding is done in one step so we have to descent only once Pro saves a copy Not only a single one but in the current implementation there is a copy on each nesting level Eg the contents of a message that is on level N counting from the top level is copied N times in total From my perspective descending twice should be more performant than copying I also created a patch and it worked for a small example Would need more testing but I could file a merge request if interested The file gribiaftproto has a message LabelEntryKey which has enum and oneof with same name just the case difference enum Label LABELUNSET LABELNOLABEL yextyangname NOLABEL oneof label Label labellabel uint labeluint With the recent version of protobufc this results in error redeclaration of enumerator error Here is a simplified version of the replication of the problem enuminttestproto syntax proto message EnumIntTest enum Label LABEL LABEL oneof label Label labellabel uint labeluint This proto file generates the following header file enuminttestpbch enums typedef enum EnumIntTestLabel ENUMINTTESTLABELLABEL ENUMINTTESTLABELLABEL PROTOBUFCFORCEENUMTOBEINTSIZEENUMINTTESTLABEL EnumIntTestLabel messages typedef enum ENUMINTTESTLABELNOTSET ENUMINTTESTLABELLABELLABEL ENUMINTTESTLABELLABELUINT PROTOBUFCFORCEENUMTOBEINTSIZEENUMINTTESTLABEL EnumIntTestLabelCase It has this definition PROTOBUFCFORCEENUMTOBEINTSIZEENUMINTTESTLABEL twice including this header file resuling in compilation error enuminttestc include enuminttestpbch int main return protoc cout enuminttestproto gcc enuminttestc In file included from enuminttestpbch from enuminttestc enuminttestpbch error redeclaration of enumerator ENUMINTTESTLABELISINTSIZE PROTOBUFCFORCEENUMTOBEINTSIZEENUMINTTESTLABEL enuminttestpbch note previous definition of ENUMINTTESTLABELISINTSIZE was here PROTOBUFCFORCEENUMTOBEINTSIZEENUMINTTESTLABEL I believe this was introduced through this commit One of the possible fixes that I tried is to add a variant ONEFOF in this line Changed this line printerPrintvars PROTOBUFCFORCEENUMTOBEINTSIZEucclassnameoneofname n to printerPrintvars PROTOBUFCFORCEENUMTOBEINTSIZEucclassnameONEOFoneofname n This should result in the following code in enuminttestpbch enums typedef enum EnumIntTestLabel ENUMINTTESTLABELLABEL ENUMINTTESTLABELLABEL PROTOBUFCFORCEENUMTOBEINTSIZEENUMINTTESTLABEL EnumIntTestLabel messages typedef enum ENUMINTTESTLABELNOTSET ENUMINTTESTLABELLABELLABEL ENUMINTTESTLABELLABELUINT PROTOBUFCFORCEENUMTOBEINTSIZEENUMINTTESTONEOFLABEL EnumIntTestLabelCase Reaching out to this community to see if there is a better alternative Executing configure produces the following error configure homeedanAG qlolsdkqlolcrosstoolsysrootsx oesdklinuxusrbinarmoelinux gnueabiarmoelinuxgnueabigcc mfloatabihard E conftestc conftestc fatal error acnonexistenth No such file or directory include acnonexistenth 