Thanks for this pretty useful library In the docs events like cropend show supported options like mouseup pointercancel etc How do I use these options Any examples would be great Also saw this SO post with a similar question It is a bug or is there a necessary code step required to avoid the creation of additional croppercontainer elements Thanks MaccabeeY Hello i dont know touch rotating is possible or already enabled If still is not it is featured Can you please add it too If it is already existed then how i can implement it I am trying to crop an image before uploading it in reacttypescript and it works fine on smaller images However when I try to work with large images mb x it moves out of the canvas and doesnt follow the style rules It just stays at a smaller size x which is set after a crop event is triggered AFTER the ready event Two crop events happen before the ready event and the size comes what is expected around x however I dont understand why another crop event is being triggered after the ready event even though I am not doing anything which sets the image to x If I try to set the canvas size using setCanvasData in the crop event after the ready event it says too much recursion and if I try to zoom in using the slider the zoom starts from the initial position and zooms in assuming the image is back to x Here is the gist Firefox v bit on Windows moving or dragging the crop box with the mouse isnt working Did a bit of javascript tracing action attribute value is not persisting between cropStart and CropMove I can see thisaction being assigned the correct value in line cropperjs v but its empty again at the start of the cropMove on line Please dont delete this template PULL REQUEST TEMPLATE Update to x to check a box Summary What kind of change does this PR introduce check at least one x Bugfix Feature Code style update x Refactor Docs Buildrelated changes Other please describe If changing the UI of default theme please provide the beforeafter screenshot Does this PR introduce a breaking change check one x Yes No If yes please describe the impact and migration path for existing applications All the TypeScript type definitions has been rewritten The migration path could involve some fixes on the user codebase typings by the way the new types should be already battletested because they should be already used by many users through DefinitelyTyped The PR fulfills these requirements When resolving a specific issue its referenced in the PRs title eg fix xxx xxx where xxx is the issue number You have tested in the following browsers Providing a detailed version will be better Chrome Firefox Safari Edge IE If adding a new feature the PRs description includes A convincing reason for adding this feature Related documents have been updated Related tests have been updated To avoid wasting your time its best to open a feature request issue first and wait for approval before working on it Other information One of the main reason of this PR is about the type definitions of reactcropper on DefinitelyTyped because it depends on this module From a recent update it depends on a new version of cropperjs which includes the type definitions and they conflicts with the ones defined in typesreactcropper I tried last version as well as alpha but the problem is always the same Used settings cropper new Cropperimg viewMode aspectRatio targetWidthtargetHeight for zoomable false Image used to test with the above settings test Result cropped image test result Describe the bug Im unable to find the right Typescript import that will allow me to do a new Cropper and also give me Typescript typing while coding To Reproduce Im trying to get this to work const cropper Cropper new Cropperthiselement aspectRatio viewMode cropevent consolelogeventdetailx consolelogeventdetaily consolelogeventdetailwidth consolelogeventdetailheight consolelogeventdetailrotate consolelogeventdetailscaleX consolelogeventdetailscaleY These are the various imports Ive tried with the results import Cropper from cropperjsdistcropperesmjs The new Cropper works but then I have no intellisense typing import Cropper from cropperjs I get intellisense typing but a runtime exception Uncaught in promise TypeError cropperjs default is not a constructor import as Cropper from cropperjs I get intellisense typing but a webpack build error TS Cannot use new with an expression whose type lacks a call or construct signature Which version should give me a working new Cropper and Typescript typing What am I missing Desktop please complete the following information OS Windows Browser Chrome Version Additional context Cropperjs v Typescript v My tsconfigjson is awesomeTypescriptLoaderOptions forkChecker true resolveGlobs true buildOnSave false compileOnSave false compilerOptions allowJs true allowSyntheticDefaultImports true baseUrl src declaration false emitDecoratorMetadata true experimentalDecorators true inlineSources false lib dom domiterable es listFiles false mapRoot module commonjs moduleResolution node noEmitHelpers false noImplicitAny false paths app app shared shared preserveConstEnums true pretty true removeComments false sourceMap true suppressExcessPropertyErrors true suppressImplicitAnyIndexErrors true target es typeRoots nodemodulestypes How to use it in mpvue Feature request So now there is only a single script like cropperjs cropperminjs and etc in built library Describe the solution youd like Consider splitting one file to multiple ones like in your src folder at least Or for example take a look at tinymce editor Each plugin for it has separate js and css file which is very convenient as I use about features of this editor and would be convenient in cropperjs case because I use like of features