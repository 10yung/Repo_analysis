I use comment is possible store comment in data i read yajl and stored with this same comment in this same place Support asjson so we can change Rails json implementation and this method is required Yajl used to not support asjson because there was an infinite loop but here if the object returns from asjson is not the one that we called asjson on then we dump that cc tenderlove brianmario Trying to parse large json files using yajl The code is working great in my local system But when deployed in production I am getting HTTP bad request The file is coming from amazon s Not sure of the exact issue here Is it because of some authentication or wrong credentials Code require yajl require yajldeflate require yajlhttpstream require uri uri URIparseamazon s link hash YajlHttpStreamgeturi headers ContentType applicationjson Accept applicationjson Error YajlParseError lexical error invalid char in json text T Z HTTP Bad Request Date right here Any help would be appreciated I was a rspec fan for years but that time has since passed This also brings in a couple of conventions I enjoy elsewhere like scripttest and scriptcibuild The travis config has been updated to use scriptcibuild which now runs both the rspec and minitest suites For the moment Ive only moved a single rspec spec file over to minitest to prove out this approach In an attempt to keep these small Im planning on merging this and opening more smaller pulls as I port more of the tests over until theyre fully on minitest Changelog has nothing since in its missing and Why the archive streaming support will be deprecated in See assert is used for debug purposes and should not be used for code that is intended to be used in production While building the package seen this warning from the compiler yajlextc In function rbyajlparserparse yajlextc warning variable stat set but not used Wunusedbutsetvariable yajlstatus stat Probably not harming but also seems to be safe and easy to fix Hi I have the following case ruby require yajl validjson invalidjson validjsonsub YajlParserparseinvalidjson invalidjson validjsonsub YajlParserparseinvalidjson require yajlversion YajlVERSION In my opinion this is really a strange behavior Can we check whether JSON is valid and if not then raise an exception