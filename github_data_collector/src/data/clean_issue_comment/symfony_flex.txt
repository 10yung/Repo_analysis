 Sidekick of I have flex recipes for a my bundle dstwebappbundle with following folder layout dst webappbundle When I install webappbundle xdev branch flex loads recipe and not the which I need it to load in order to test branch changes Any idea what I could be doing wrong or is this an issue with flex The entire flex functionality seems to be mystery when it comes to what folder rev will be grabbed or how it is done Everything else in composer world uses tag while flex seems to follow arbitrary rules I must be missing some flag or something to properly pick correct recipe version I would appreciate any help to correct this Kind Regards Dave After run unpack twice for different recipes and sections dev and nondev same third dependency is placed in both require and requiredev Steps to reproduce bash mkdir project cd project composer init n composer require symfonyflex composer require unpack twig composer require unpack dev profiler cat composerjson Common dependency is symfonytwigbundle Expected Result json require symfonytwigbundle twigtwig twigextrabundle scripts autoscripts cacheclear symfonycmd assetsinstall PUBLICDIR symfonycmd requiredev symfonystopwatch symfonywebprofilerbundle symfonyflex Actual Result x symfonytwigbundle is present in both require and requiredev json require symfonytwigbundle twigtwig twigextrabundle scripts autoscripts cacheclear symfonycmd assetsinstall PUBLICDIR symfonycmd requiredev symfonystopwatch symfonytwigbundle symfonywebprofilerbundle symfonyflex Receiving an error trying to install Flex using composer composer require symfonyflex Using version for symfonyflex composerjson has been created Loading composer repositories with package information Updating dependencies including requiredev Package operations install updates removals Installing symfonyflex v Loading from cache Plugin installation failed rolling back Removing symfonyflex v Installation failed deleting composerjson RuntimeException Could not delete varwwwpublicvendorsymfonyflexsrcCommand Composer version PHP version PHP binary path usrbinphp having a simple composerjson file with the flexrequire fails with The property flexrequire is not defined and the definition does not allow additional properties how to reproduce wget create composerjson json name c sexample type project license MIT description x require symfonyflex flexrequire sensioframeworkextrabundle run php composerphar validate Hi This can probably only be answered by Fabien Is it feasible for the Flex API to support fetching an old version of a recipe For example suppose were talking about twigextensions Would it be possible to ask for the c e sha of the version of the recipe which would be one commit before HEAD If we could do this it would allow us to do two more things slightly more accurately On package removal we could remove using the same version of a recipe as the user originally had installed Minor but better On package update we could remove using the original recipe first and THEN upgrade to the latest That would fix the problem where a fileparameter that was added in the OLD recipe is NOT added in the new recipe Currently that fileparameters is NOT removed But if we were able to remove the original recipe it WOULD remove that old fileparameter So is that possible to add to the API Thank you It looks like Flex is the only Symfony library that still doesnt exclude tests directory via gitattributes Hi everybody Ive got one question about namespaces in app My thought is that App namespace is redundant Because when you are developing looks like huge applications its not a good idea to store everything in one dir called App its better to separate logic in different dirs just for better understanding For those purposes at this moment i removed App namespace at all and i feels lucky So whats the reason to use App namespace I think that app is looking better when all code is under one space called root or src Just have a look at my structure Of course you need some tuning in Kernel composer but now i think it looks better So what do you think My idea is that restricting propagating all code to App namespace it is a little bit hard to newer Symfony developers Its better to just open new source namespace under root and be free There is a lack of documentation on how to properly use Symfony Flex For example the behavior described in this comment is not documented anywhere The guide for upgrading Symfony doesnt describe how to upgrade with Flex When it comes to composer I was not very familiar with how everything worked so trying to upgrade Symfony left me with a lot of questions that dont seem to be answered anywhere Im thankful that I was able to have someone explain Flex a bit better and how to modify my composerjson to upgrade by asking in Slack But this should be available in documentation