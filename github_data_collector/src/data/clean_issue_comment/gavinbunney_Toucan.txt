thx Toucanimage hexagonImageViewimage maskWithRoundedRectcornerRadius maskWithPathpath pathimage this code not working Do you have any best practicesguide for using the API in a way that doesnt block the main thread swift let roundImage Toucanimage imagemaskWithEllipseborderWidth borderColor UIColorwhiteimage Especially when used in a TableView with lots of rounded images causes quite a bit of main thread activity img width alttoucan src The following code takes the upper bound of which is when UIScreenmainscale is let size UIScreenmainscale let image Toucanimage itemimageresizeCGSizewidth size height size fitMode ToucanResizeFitModeclipimage It should have been resized the image according to the float in size Not the upper bound of it We currently expire crashes in our app which we fixed by removing force unwraps and adding logging to get more insights Crashlog Crashed comapplerootuserinteractiveqos Rabbit x fc specialized static ToucanUtilCGImageWithCorrectOrientationUIImage CGImage Toucanswift Rabbit x c specialized static ToucanResizeresizeImageUIImage size CGSize fitMode ToucanResizeFitMode UIImage Toucanswift Rabbit x c specialized ThumbnailGeneratorgeneratefor UIImage ThumbnailGeneratorGeneratedThumbnail ThumbnailGeneratorswift Rabbit x fa specialized ContentMetadataFetchergenerateVisualPreviewsfor Content image UIImage storageController LocalStorageController completionHandler VisualPreview closure closure ContentMetadataFetcherThumbnailsswift Rabbit x fa c partial apply for ContentMetadataFetchergenerateVisualPreviewsfor Content image UIImage storageController LocalStorageController completionHandler VisualPreview closure closure ContentMetadataFetcherThumbnailsswift Rabbit x db thunk ContentCreationControllerswift libdispatchdylib x a a dispatchcallblockandrelease libdispatchdylib x a a dispatchclientcallout libdispatchdylib x b ea dispatchrootqueuedrain libdispatchdylib x b a dispatchworkerthread libsystempthreaddylib x f c pthreadwqthread libsystempthreaddylib x eb c startwqthread Device and system information iOS and iOS iPad and iPhone Known stats from logging The crash is happening on this line which force unwraps the CGContext It seems that scenarios exist in which the created context is nil After adding a guard and logging in the return statement weve seen logs like this swift Error DomainToucan Code width height bitsPerComponent bitmapInfo UserInfoNSLocalizedDescriptionwidth height bitsPerComponent bitmapInfo swift Error DomainToucan Code width height bitsPerComponent bitmapInfo UserInfoNSLocalizedDescriptionwidth height bitsPerComponent bitmapInfo Ive tried to reproduce the crash by hardcoding these values but that didnt reproduce the crash Ive also made sure that the cgImage and Colorspace are non nil swift guard let cgImage imagecgImage else throw NSErrordomain Toucan code userInfo NSLocalizedDescriptionKey CGImage is nil guard let colorSpace cgImagecolorSpace else throw NSErrordomain Toucan code userInfo NSLocalizedDescriptionKey Color space is nil Weve never seen these being logged Next steps We for now prevented this crash from happening again by adding guards and throws instead of force unwrapping It would be great if we can find the cause of this crash and fix it instead Hello Were using toucan in our app to resize product images using FitModecrop This fit mode produce really bad quality image even though the cropped image would maintain same aspect ratio as the original image Resize code in UIImageExtension Toucanimage selfresizeCGSizewidth height fitMode ToucanResizeFitModecropimage I couldnt find any reason why this is happening Please help Hi guys I just got a crash CGBitmapContextCreate invalid data bytesrow should be at least for integer bitscomponent components kCGImageAlphaNoneSkipLast using Toucanimage imageresizesize fitMode cropimage from an image taken with the camera Same build is working in iOS but is crashing on Any help Hey I just noticed that each operation in Toucan starts off with a call to CGImageWithCorrectOrientation function which involves creating a new context and drawing an image into it So for example if I want to crop an image with UIImageOrientationLeft then instead of simply cropping the image which is extremely fast Toucan would first physically rotate its bitmap which is much more expensive then cropping itself and just then crop the image It would also change the image orientation to UIImageOrientationUp I understand that it might be tempting to just fix an orientation so that all the other functions would only have to deal with images in UIImageOrientationUp However if would be nice if Toucan could add a proper support for images in all orientations 