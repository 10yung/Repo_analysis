 What changes were proposed in this pull request add vmemcache and noevict strategy How was this patch tested unit test passed What changes were proposed in this pull request Lazy init the input stream of parquet file reader to avoid unnecessary filesystem operation How was this patch tested existing uts What changes were proposed in this pull request Use Caffeine Cache instead of Guava cache How was this patch tested unit test What changes were proposed in this pull request Upgrade Guava version to How was this patch tested Passed unit tests different scales TPCDS What changes were proposed in this pull request This is a preview for ORC Binary Cache Later will refine code framework after parquet binary cache feature merged How was this patch tested unit tests integration tests If this patch involves UI changes please attach a screenshot otherwise remove this We have introduced BinaryDataFiberId for binary cache and works well with parquet fileformat right now To make it compatible with more fileformat such as orc at least need to do some improvement What changes were proposed in this pull request Make DropIndexCommand concurrently execute on Executor side to improve performance How was this patch tested unit tests integration tests manual tests As mentioned in we will introduce a new parquet file reader for binary cache use and import parquet source code Maybe we could try to find a better way to do this and decouple with ParquetFileReaderthe parquet source file imported What changes were proposed in this pull request Surprisingly OAP does not support building index for different partitions concurrently below is the reasoning process for this conclusion Suppose there is a table named tbl which use hdfstbl as the base location When OAP create Job A and Job B for building index for different partition of table tbl this two job will use hdfstbltemporary as their temporary output dir If Job A finish before Job B during Job A committing it will delete temporary dir which will cause the index file produced by tasks of Job B missed We create a OapIndexFileOutputCommitter similar to FileOutputCommitter except that it will use output dir jobid temporary as the jobs temporary output dir so that jobs with same output dir will not interference with each other How was this patch tested unit tests integration tests manual tests What changes were proposed in this pull request Make the OAP DRAM cache independent of Spark OffHeap for better cache management and avoiding Spark Executor launch issues How was this patch tested unit tests integration tests If this patch involves UI changes please attach a screenshot otherwise remove this 