Bumps lodash from to details summaryCommitssummary ddfd b Bump to v b fce Rebuild lodash and docs be d Bump to v a fe b Rebuild lodash and docs e Bump to v e Rebuild lodash and docs fd a Bump to v e d Rebuild lodash and docs d Update OpenJS references eac Fix minified build Additional commits viewable in compare view details br Dependabot compatibility score Dependabot will resolve any conflicts with this PR as long as you dont alter it yourself You can also trigger a rebase manually by commenting dependabot rebase dependabotautomergestart dependabotautomergeend details summaryDependabot commands and optionssummary br You can trigger Dependabot actions by commenting on this PR dependabot rebase will rebase this PR dependabot recreate will recreate this PR overwriting any edits that have been made to it dependabot merge will merge this PR after your CI passes on it dependabot squash and merge will squash and merge this PR after your CI passes on it dependabot cancel merge will cancel a previously requested merge and block automerging dependabot reopen will reopen this PR if it is closed dependabot ignore this patchminormajor version will close this PR and stop Dependabot creating any more for this minormajor version unless you reopen the PR or upgrade to it yourself dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency unless you reopen the PR or upgrade to it yourself dependabot use these labels will set the current labels as the default for future PRs for this repo and language dependabot use these reviewers will set the current reviewers as the default for future PRs for this repo and language dependabot use these assignees will set the current assignees as the default for future PRs for this repo and language dependabot use this milestone will set the current milestone as the default for future PRs for this repo and language You can disable automated security fix PRs for this repo from the Security Alerts page details Removed the unstable notice as per the authors comment at Refactor IndexedConcatenatedSequence to use an ArrayLikeSequence for other property This force concatArrayLikeSequence to return an ArrayLikeSequence instead of a Sequence and indirectly fix Code to reproduce javascript const Lazy requirelazyjs const als Lazy consolelogalsunshift instanceof LazyArrayLikeSequence expected result true actual result false This is due to the use of concat with an ArrayLikeSequence inside unshift One dirty way to fix it will be to use toArray before concat Although I think it should be wiser to refactor IndexedConcatenatedSequence in order to accept ArrayLikeSequence async function iterateDirdir let list await fsreaddirdir fspromise implementation of readdir for let file of list yield file LazygenerateiterateDirout async specifies a second interval between each element mapfunctionx return StringfromCharCodex take eachfunctionchar consolelogchar When working with transform streams in Nodejs its obvious how to push new values onto the stream you simply just push additional values onto the next stream handler With Lazyjs underscore lodash etc its not as obvious how to introduce new values into the stream In Lazyjs several API calls exist to exclude or filter values but few for introducing new values One way to do it is to have the map function return an array and then call flatten next Please consider including a dead simple example in the docs for writing to a Lazyjs stream The existing example for LazycreateWrapper is too complicated Also consider renaming LazycreateWrapper to something else like Lazyemitter LazycreateEmitter Lazyfactory or LazycreateFactory The following code is what I was aiming to achieve However my data will ultimately come from a WebSocket I did manage to work out how to simply and dynamically originate a Lazyjs factory javascript Lazyemitter LazycreateWrapper Lazyemitterfunction var counter setIntervalfunction thisemitcounter bindthis take eachfunctioneach consolelogeach each Like lodashfp but lazy or The TC process seems to be settling on a specification for Observables and AsyncGenerators It would be great to follow these APIs in Lazyjs See also 