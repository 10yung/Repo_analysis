According to Hound CI supports a curated list of Rubocop extensions However it is difficult to tell which extensions are available and which are not Please list supported Rubocop extensions on documentation pages Hello Seems like were not able to use the reactnativecommunity ESLint plugin Every time I push to a PR branch Hound shows this error message Some files could not be reviewed due to errors Oops Something went wrong ESLint ESLint couldnt find the config reactnativecommunity to extend from Please check that the name of the config is correct The config reactnativecommunity was referenced from the config file in eslintrc If you still have problems please stop by to chat with the team houndyml yaml eslint enabled true configfile eslintrc version eslintrc js parser typescripteslintparser root true extends reactnativecommunity prettier prettiertypescripteslint prettierreact Is there the support to Postgres scripts or any SQL lint in the pipeline Hello Hound Thank you for this useful tool Linter versioning is really helpful It would be great if hamllint could be added to the list of tools that hound supports for custom versioning as hamllint is pretty outofdate Thanks much for your consideration Hey there Talked to gylaz through the chat opening the issue here as requested Any plans on the roadmap to support to lint HTML files An example linter that would fit is this Thanks a lot GitHubs Suggested Changes feature allows PR reviewers to suggest quick oneliner changes that can be easily incorporated by the author An excellent use for this would be to combine with the autocorrect feature of linters where available With this Hound could report the problem suggest the autocorrect fix and the PR author could simply apply it This would save a huge amount of time vs normal Git workflows for simple eg whitespace changes Admittedly this seems like it might potentially be complex to implement but the timesavings would be immense Hound currently only supports specifying single ESLint config file to be used for the whole repository Unfortunately this does not play nicely with monorepos or repositories with different types of JS source files that have different linting requirements Quoting from the ESLint docs The first way to use configuration files is via eslintrc and packagejson files ESLint will automatically look for them in the directory of the file to be linted and in successive parent directories all the way up to the root directory of the filesystem unless root true is specified This option is useful when you want different configurations for different parts of a project or when you want others to be able to use ESLint directly without needing to remember to pass in the configuration file It would be great if Hound could support use the same resolution logic for ESLint projects Instead of specifying the config file explicitly you would just specify the files directories to be linted and let ESLint handle the config resolution This repo describes why you would want to use different ESLint configs in the same repo clarkeslintconfigember Thank you for considering Im working on a project that uses several different JavaScript frameworks Vue and React in different areas of the application As such it requires multiple configurations for linters such as sasslint This works fine locally as my IDE automatically parses the multiple sasslint configuration files at the root and in any subdirectories This seems to be standard practice for plugins with standalone configuration files Ideally Hound work pick up on any configuration files with standard naming but given that that may be difficult to maintain it should at least support multiple configpaths ala sasslint configfile sasslintyml pathtoanothersasslintyml Hi love the tool but wondering if you had any plans to add mypy support at some point This is something my team would be interested in getting integrated alongside our existing hound flake eslint checks