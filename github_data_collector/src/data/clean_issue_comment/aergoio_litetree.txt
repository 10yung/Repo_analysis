Is the multi branch work with multi thread or process I mean for example branch master work on thread A and test for thread B at same time without lock As a fork LiteTree is inevitably going to need updating as newer versions of SQLite are released At the moment SQLite is up to while litetree is still based on Keeping up with SQLite can be very important if one needs new features or bug fixes How does one perform such an update All I see in here are heavily modified versions of sqlite c and sqlite h not any tools for updating the source Does one just run a waymerge tool and feed it litetrees source the unmodified version of the same SQLite release and the new SQLite release It would be good to document this so potential users of the library can feel that theyre not going to be stuck on an old release of SQLite forever or be dependent on someone else to keep it up to date for them I am on High Sierra I tried to follow the given instruction to build litetree on my machine and it gave me some errors as follows macossiMaclitetree macos make test cd test python testpy v test readconfig mainTestSQLiteBranches ERROR test branches mainTestSQLiteBranches FAIL test branchinfo mainTestSQLiteBranches FAIL test branchtree mainTestSQLiteBranches ERROR test bsqllog mainTestSQLiteBranches ERROR test readingbranchesatthesametime mainTestSQLiteBranches FAIL test concurrentaccess mainTestSQLiteBranches FAIL test singleconnectionuri mainTestSQLiteBranches FAIL test invalidbranchname mainTestSQLiteBranches ERROR test renamebranch mainTestSQLiteBranches FAIL test truncatebranch mainTestSQLiteBranches ERROR test deletebranch mainTestSQLiteBranches FAIL test rollback mainTestSQLiteBranches ERROR test attacheddbs mainTestSQLiteBranches FAIL test temporarydb mainTestSQLiteBranches FAIL test discardcommits mainTestSQLiteBranches FAIL test forwardmerge mainTestSQLiteBranches FAIL test forwardmerge mainTestSQLiteBranches FAIL test savepoints mainTestSQLiteBranches ERROR test closedconnection mainTestSQLiteBranches ERROR test openwhilewriting mainTestSQLiteBranches ERROR test internaltemporarydbs mainTestSQLiteBranches ERROR test normalsqlite mainTestSQLiteBranches ok Anything I can trace from the log where are they located EDIT I fixed the formatting it did not go well with the code tag When my db file reaches MB every updateinsert query creates an SQL logic error Is there any command line interface to interact with litetree database does it support merge branch I have compiled the latest litetree on macOS and I cannot get the branch commands to work From the output the new commands are available but for some reason just not working sqlite PRAGMA newbranchtest at master Error SQL logic error sqlite PRAGMA newbranchtest at master Error SQL logic error sqlite PRAGMA newbranchtest at master Error SQL logic error sqlite PRAGMA newbranchtest Error SQL logic error sqlite PRAGMA newbranch Error argument required sqlite PRAGMA branch sqlite PRAGMA branches Since aergo blockchain kernel is written in go is there a golang wrapper for litetree