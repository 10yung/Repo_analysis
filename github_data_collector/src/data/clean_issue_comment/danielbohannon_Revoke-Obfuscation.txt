This patch allows to run RevokeObfuscation on both Windows PowerShell and PowerShell Core ImportModule RevokeObfuscation ImportModule The current Windows PowerShell host is Visual Studio Code Host version The module C Users home Documents WindowsPowerShell Modules RevokeObfuscation RevokeObfuscationpsd requires a minimum Windows PowerShell host version of to run Running Powershell on Windows Two parameters were added AzureML to use a web deployed model on Azure ML API settings are required Normalized to pick only normalized and important features New vectors weights were obtained To normalize every feature I used the data binning technique It is a way to group widely distributed nonlinear features into a smaller number of bins by default To get rid of unimportant features I only picked those features where number of unique buckets is more than some specific number I set by default in the future it is recommended to compare other values The full report can be provided upon request settingsjson is used to store the feature bins indexes of the important features and API settings as well as the weights and parameterized threshold Minimum version of the Windows PowerShell host was lowered to so users could use VS Code debugger Fixed empty script bug empty script is not obfuscated a priori no errors need to be thrown Hello i have generated an obfuscated command using InvokeObfuscation and can see the scriptblock log in the event log i exported the log entry to a separate evtx file and executed the following commands to test for obfuscation and im getting the following errors and am i missing something here turn hash code into a function add hashing to getrvoscriptblock getrvoscriptblock is helpful for other projects as well having the hash calculated there makes the function more portable also added a check to measurervoscriptblock to see if the hash already exists if not hash then adds support for a file containing hashes to whitelist I dont want to keep a copy of the whitelisted script and would like to whitelist based on hash only the bigger goal is to have MeasureRvoObfuscation send me a message of obfuscated results with hash and scriptblock I can determine if I want to WL based on the scriptblock then update my list of hashes in a tracked repo support for file to be stored in Whitelist subfolder or defined by parameter This is what I had to do to make it work with PS Core on Ubuntu Not sure how you feel about squashing all the cs files If nothing else can leave it for others reference PS C Program Files x Microsoft VS Code gi Codeexeversioninfo ProductVersion FileVersion FileName C Program Files x Microsoft VS Code Codeexe PS C Program Files x Microsoft VS Code gethost Name Visual Studio Code Host Version InstanceId a dcba e cf cae UI SystemManagementAutomationInternalHostInternalHostUserInterface CurrentCulture enUS CurrentUICulture enUS PrivateData DebuggerEnabled True IsRunspacePushed False Runspace SystemManagementAutomationRunspacesLocalRunspace This pull request will add functionality to the getrvoscriptblock function to support search results from FireEye Helixs API First Rev