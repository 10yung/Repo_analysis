Hey guys is there any plan to support RxJava I cloned the project and tried to compile the project with the RxJava RC dependency but for some reason my AS is not able to find an NDK dependency or tool the project needs so I cant figure out whats going on The previous test suite for extension functions of single and the Singles singleton was leaving a lot to be desired This PR introduces tests that check that any extension function or method behave the same as the RxJava equivalent An issue suggested being able to convert ListSingleT to SingleListT This PR introduces such an operation for Single Observable Flowable and Maybe Each new operation comes with tests Add an extension method to each Rx chain that has a value to match Kotlins mapNotNull Sample implementations fun T R SingleTmapNotNulltransform T R flatMapMaybe value MaybefromCallable transformvalue fun T R ObservableTmapNotNulltransform T R flatMapIterable value listOfNotNulltransformvalue If in ActivityA it keep reference to private val subjectA PublishSubjectObjectB PublishSubjectcreate private var dispose Disposable null Does we need to call onComplete method of subject in onDestroy method of Activity override fun onDestroy subjectAonComplete disposedispose superonDestroy I just updated RxKotlin from to and this code no longer compiles kotlin ObservablejustUnit withLatestFromthis item T item Now I have to write kotlin ObservablejustUnit withLatestFromthis BiFunctionUnit T T item item Kotlin Possibly related to Hi The new stable version of Android Studio suggest to update Gradle to to get all the latest benefits After updating my Gradle from wrapper to wrapper the library is not resolved properly That means all the references to rxKotlin in my project are not resolved The behaviour is similar to commenting out the dependency in buildgradle Error examples Unresolved reference CompositeDisposable Unresolved reference BehaviorSubject Unresolved reference subjects library reference implementation ioreactivexrxjava rxkotlin kotlin gradle plugin version Steps to fix project clean cache removal invalidate caches restart remove build folder try in a different project By default RxJava does not allow to set a lambda which specify key to sort the observables These simple operators will help greatly simplify lambdascomparators for sorting observables Based off this tweet fun T testSideEffectf TestObserverTT Unit Unit Unit val obs TestObserverT val sub PublishSubjectcreateTapply subscribeobs fobs subonNextit fun main testSideEffectInt consumer Observablejust doOnNext consumerit subscribe assertValueCount assertValues added a function for onErrorResumeNext to resolve ambiguity and easier use in kotlin