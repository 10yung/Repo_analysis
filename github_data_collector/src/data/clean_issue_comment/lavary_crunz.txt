Faced out problem when did mistake in weeklyOn method just forgot to specify day param weeklyOn Such call was converted to and its invalid format And as a result all tasks after this didnt work at all And there were no visible errors it stop somewhere under the hood of cron I guess Would be very useful to have autocheck of cron expression and trigger error if there is a problem and dont run problematic task Thanks Description A clear and concise description of the new feature Is it possible for there to be a way to set a task specific onError callback function Right now an onError function can be set but theres no way afaik to limit it to a single task like before and after It would be nice if onError can be used just like before and after callbacks Basically a postexecution callback thats only called if the execution of the event not schedule is unsucessful Example A simple example of the new feature in action include PHP code etc If the new feature changes an existing feature include a simple beforeafter comparison In addition to this use Crunz Schedule schedule new Schedule task scheduleruncommandtorun taskeveryFiveMinutes schedule onErrorfunction Send mail onErrorfunction Do something else return schedule It would be nice if this was supported use Crunz Schedule schedule new Schedule task scheduleruncommandtorun taskeveryFiveMinutes taskonErrorfunction Send mail onErrorfunction Do something else return schedule I am able to trigger php files with the scheduler but am having trouble initiating a command on the server I want to run a simple fetchmail vk command which should be able to run from anywhere on the server To check however I ran the command from the same location the scheduler triggers the php files that is the home folder for the website on the server So running the fetchmail vk command via a SSH connection from said folder is successful To run php files of course you have to prepend the run command with usrbinphp like so schedulerunusrbinphp scriptphp is there something I have to use before the fetchmail command Right now its just schedulerunfetchmail vk For frequency I am using everyTwoHours Thanks for any help Description To address some of last requests and users should be able to provide logger instance used by Crunz the idea is to let users use any PSR compatible logger by returning it from configured loggerfactory This means new configuration option will be added to allow specifying LoggerFactoryInterface Example below shows simple file logging by Monolog but there can be Zend Db logging used instead every PSR class will work By default Crunz will provide same file logging as before Example Interface itself php use Psr Logger LoggerInterface interface LoggerFactoryInterface public function createLoggerarray crunzConfiguration LoggerInterface Example implementation php use Monolog Logger use Monolog Handler StreamHandler class MonologLoggerFactory implements LoggerFactoryInterface public function createLoggerarray crunzConfiguration LoggerInterface log new Loggername logpushHandlernew StreamHandlerpathtoyourlog LoggerWARNING return log Crunz configuration crunzyml yml Class loadable by autloader loggerfactory Vendor MonologLoggerFactory Hi PabloKowalczyk Thanks for your lib I also have question that I want to get detail error so i can insert the error into database How can I do that Thanks Description It would be nice to be able to define dynamic filenames for error and cronjob logs like cronjoberrorYmdlog Or in extension to what might be needed to implement it might be in general nice to be able to add a generic error handler so that we can add for instance a Monolog handler to receive everything Crunz outputs Hi I begin using Crunz in Zend Framwork and I want to receive logerror and write it to database Can you tell me if there is a way to do it Thanks I am searching these kind of libs to implement into a symfony project I like the most this lib comparing to others it is simple and easy to use but when i define the rule it should save into a list like sqlite mysql or even into a single file so it will be more controllable by programmatically Generating task files dynamically may create issues and also not convenient for large projects In the crunzyml file it states this The events which have dedicated log files defined with them wont be logged to this file though This is currently not happening and it is logging to both files This PR is to fix this and only log to the main log file if the event does not have a log file set This new PR is now based of the x branch