I tried the following with the example it doesnt work extern crate log extern crate log rs use logLevelFilter use log rsappendconsoleConsoleAppender use log rsappendfileFileAppender use log rsencodepatternPatternEncoder use log rsconfigAppender Config Logger Root fn main let notservice true let requests FileAppenderbuilder encoderBoxnewPatternEncodernewd mn buildlogrequestslog unwrap let mut configbuilder Configbuilder appenderAppenderbuilderbuildrequests Boxnewrequests if notservice let stdout ConsoleAppenderbuilderbuild configbuilder appenderAppenderbuilderbuildstdout Boxnewstdout configbuilder loggerLoggerbuilderbuildappbackenddb LevelFilterInfo loggerLoggerbuilder appenderrequests additivefalse buildapprequests LevelFilterInfo let config configbuilder buildRootbuilderappenderstdoutbuildLevelFilterWarn unwrap let handle log rsinitconfigconfigunwrap use handle to change logger configuration at runtime It always complains about the move even if I use borrowmut Hopefully there is a way to do this Compiling playground v playground warning unused variable handle srcmainrs let handle log rsinitconfigconfigunwrap help consider prefixing with an underscore handle note warnunusedvariables on by default warning variable does not need to be mutable srcmainrs let mut configbuilder Configbuilder help remove this mut note warnunusedmut on by default error E use of moved value configbuilder srcmainrs let mut configbuilder Configbuilder move occurs because configbuilder has type log rsconfigConfigBuilder which does not implement the Copy trait configbuilder value moved here configbuilder value used here after move error E use of moved value configbuilder srcmainrs let mut configbuilder Configbuilder move occurs because configbuilder has type log rsconfigConfigBuilder which does not implement the Copy trait configbuilder value moved here let config configbuilder value used here after move error aborting due to previous errors For more information about this error try rustc explain E error could not compile playground To learn more run the command again with verbose Compression of large files during log rotation may take several seconds At this time all threads writing logs are blocked which can lead to undesirable delays The problem is resolved when the rotation is executed in a separate thread Library users can enable new behavior using feature asyncrotation Latest master as of writing this issue Please add CI for Windows Thanks cargo build Updating cratesio index Downloaded serde v Downloaded serdevalue v Downloaded serdejson v Downloaded serdederive v Downloaded serdeyaml v Downloaded syn v Compiling procmacro v Compiling autocfg v Compiling winapi v Compiling libc v Compiling unicodexid v Compiling syn v Compiling serde v Compiling crc fast v Compiling ryu v Compiling log v Compiling adler v Compiling traitobject v Compiling cfgif v Compiling linkedhashmap v Compiling quickerror v Compiling dtoa v Compiling itoa v Compiling fnv v Compiling antidote v Compiling arcswap v Compiling logmdc v Compiling humantime v Compiling unsafeany v Compiling minizoxide v Compiling yamlrust v Compiling typemap v Compiling numtraits v Compiling numinteger v Compiling flate v Compiling quote v Compiling orderedfloat v Compiling time v Compiling threadid v Compiling chrono v Compiling serdederive v Compiling serdevalue v Compiling serdejson v Compiling serdeyaml v Compiling log rs v E Code log rs error E unresolved import encode src encode writer consolers use encodeself Color Style no encode external crate error E unresolved import privio src encode writer consolers use privioStdWriter StdWriterLock help a similar path exists crateprivio note use statements changed in Rust read more at error E failed to resolve use of undeclared type or module Color src encode writer consolers ColorBlack use of undeclared type or module Color error E failed to resolve use of undeclared type or module Color src encode writer consolers ColorRed winconFOREGROUNDRED use of undeclared type or module Color error E failed to resolve use of undeclared type or module Color src encode writer consolers ColorGreen winconFOREGROUNDGREEN use of undeclared type or module Color error E failed to resolve use of undeclared type or module Color src encode writer consolers ColorYellow winconFOREGROUNDRED winconFOREGROUNDGREEN use of undeclared type or module Color error E failed to resolve use of undeclared type or module Color src encode writer consolers ColorBlue winconFOREGROUNDBLUE use of undeclared type or module Color error E failed to resolve use of undeclared type or module Color src encode writer consolers ColorMagenta winconFOREGROUNDRED winconFOREGROUNDBLUE use of undeclared type or module Color error E failed to resolve use of undeclared type or module Color src encode writer consolers ColorCyan winconFOREGROUNDGREEN winconFOREGROUNDBLUE use of undeclared type or module Color error E failed to resolve use of undeclared type or module Color src encode writer consolers ColorWhite use of undeclared type or module Color error E failed to resolve use of undeclared type or module Color src encode writer consolers ColorBlack use of undeclared type or module Color error E failed to resolve use of undeclared type or module Color src encode writer consolers ColorRed winconBACKGROUNDRED use of undeclared type or module Color error E failed to resolve use of undeclared type or module Color src encode writer consolers ColorGreen winconBACKGROUNDGREEN use of undeclared type or module Color error E failed to resolve use of undeclared type or module Color src encode writer consolers ColorYellow winconBACKGROUNDRED winconBACKGROUNDGREEN use of undeclared type or module Color error E failed to resolve use of undeclared type or module Color src encode writer consolers ColorBlue winconBACKGROUNDBLUE use of undeclared type or module Color error E failed to resolve use of undeclared type or module Color src encode writer consolers ColorMagenta winconBACKGROUNDRED winconBACKGROUNDBLUE use of undeclared type or module Color error E failed to resolve use of undeclared type or module Color src encode writer consolers ColorCyan winconBACKGROUNDGREEN winconBACKGROUNDBLUE use of undeclared type or module Color error E failed to resolve use of undeclared type or module Color src encode writer consolers ColorWhite use of undeclared type or module Color error E cannot find type Style in this scope src encode writer consolers fn setstyle self style Style ioResult not found in this scope help possible candidate is found in another module you can import it into scope use crateencodeStyle error E cannot find type Style in this scope src encode writer consolers fn setstyle mut self style Style ioResult not found in this scope help possible candidate is found in another module you can import it into scope use crateencodeStyle error E cannot find type Style in this scope src encode writer consolers fn setstyle mut self style Style ioResult not found in this scope help possible candidate is found in another module you can import it into scope use crateencodeStyle warning unused imports Color Style src encode writer consolers use encodeself Color Style note warnunusedimports on by default error aborting due to previous errors Some errors have detailed explanations E E E For more information about an error try rustc explain E error Could not compile log rs To learn more run the command again with verbose It would be good to be able to use a packages log level as a switch for certain more expensive code If there is a method already to do this it could do with documentation or an example in the srcexamples section or md docs Currently I dont believe if you use the JSON encoder you can format it it would be awesome if this was the case Im ok with this being closed as wontfix if Im misreading something but the documentation should probably mention that the pattern for a fixedwindow rolling file is a path I recently ran into an issue where our log file was varlogmyservicelog but our rolled logs were in appmyservice log because we thought pattern myservicelog was a pattern against the log file not a path relative to the working directory To be clear the only thing that needs changing is the docs for log rsappendrollingfilepolicycompoundrollfixedwindowFixedWindowRollerDeserializer I would like to be able to log the name of the function name from where the logging request was issued similar to log j For example if the pattern were F where F is the function name the following log call would produce main fn main info It would also be nice if associative and static functions could log the data name for which they are implemented For example the following would log something like Pointnew struct Point x i y i impl Point pub fn new Self info warning the trait typemapCloneAny cannot be made into an object note warnwhereclausesobjectsafety on by default warning this was previously accepted by the compiler but is being phased out it will become a hard error in a future release note for more information see issue note method cloneanysend references the Self type in where clauses This requires to Choose traits of log rs whichre needed downcasting I suggest implement downcasting at least for these traits which can be accessed through log rsconfigConfig Append and Filter Add Any as constraint of chosen traits and extend them with methods upcasting to dyn Any rust use stdanyAny pub trait Append Any fmtDebug Send Sync static fn asany self Box dyn Any Update all implementations of chosen traits in log rs according to preceding changes Document this feature Following information will be likely desired How to upgrade old code to new major release of log rs How and in which cases this feature can be used UPD no foreign crates required for this feature more about required docs My log looks like this T DEBUG T DEBUG T DEBUG T DEBUG Every time the microseconds ends in eg the second log line there they are truncated to nearest millisecond which messes up the readability of the log While it is possible to tweak the formatting the default settings should give a fixed width