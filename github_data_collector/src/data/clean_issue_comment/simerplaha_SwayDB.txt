Booting up databases on incompatible versions could create files with different formats This should be check on startup Streams should perform nearly at the same speed as an Iterator Optimisations like the following are required removal of usage of Option implement transform function in Tag instead of using map to convert types possibly allowing the the Tag to be applied only the time of materialising Internal Stream is a very basic Stream implementation intentional which makes it easier to interop with Java Akka Streams FS Scalazstream ZIOstreams etc should all be supported Currently each database instance can produce the following Streamer type similar to an Iterator T This type basically starts iteration from head and fetches the next item in the Stream given the previously read item on request scala trait Streamer A T def head T Option A def nextprevious A T Option A If there is a way to interop with all other streaming libraries given the above type then supporting others will be easier Reactive Stream is another way to support interop but is complex to implement see Remove the use of macro from KeyValueId when calculating maxKeyValueIdByteSize which is causing the KeyValueIds values to be set incorrectly and is causing reads to fail resulting in Invalid keyvalue id This scala val maxKeyValueIdByteSize BytessizeOfUnsignedIntallmapmaxKeyUncompressedKeyValueIdmax Should be scala val maxKeyValueIdByteSize Ive made this change on another branch which is currently WIP with performance improvements This will be available in the next release SortedIndex and Values are read in full during compaction Since they are already inmemory caching them will improve read performance of Segments with compaction inprogress Currently CRC is added for only sortedIndex block This is also required for all other blocks the following program will print done but wont end normally def mainargs Array String Unit val map Map String String Nothing ApiIO persistentMap String String Nothing ApiIO map get map putabc def get map foreachprintln materializeget map closeget printlndone 