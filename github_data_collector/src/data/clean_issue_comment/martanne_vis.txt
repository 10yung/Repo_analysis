When the cursor is on a delimiter whose match should be highlighted this patch limits the search to the viewport If the matching delimiter is out of sight theres no point in highlighting it I found this when I had a very large binary file opened and the cursor got stuck for a long time when i moved over a parenthesis Check for endoftext Fixed order of rules Some keywords were identified as type now corrected Added compilerspecific common keywords Added boolean and additional integer constants Added support for number suffixes Removed if comments because it needs some work on the else branch Now it just makes things unreadable With Fedora gcc and glibc I get this cc stdc DPOSIXCSOURCE L DXOPENSOURCE DNDEBUG DVERSION v ge e DHAVEMEMRCHR DVISPATH vis DCONFIGHELP DCONFIGCURSES DCONFIGLUA DCONFIGLPEG DCONFIGTRE DCONFIGSELINUX DCONFIGACL arrayc bufferc libutfc mainc mapc samc textc textmotionsc textobjectsc textutilc uiterminalc viewc visc visluac vismodesc vismotionsc visoperatorsc visregistersc vismarksc vispromptc vistextobjectsc textregexc lc o vis In file included from textc utilh error static declaration of memrchr follows nonstatic declaration static void memrchrconst void m int c sizet n In file included from textc usrincludestringh note previous declaration of memrchr was here extern void memrchr const void s int c sizet n make Makefile vis Error Summary Extracting orgmode sections skips every second one Could very well be that my command is incorrect but I cant see where snapshot Command x n n Test data title sentence paragraph title sentence paragraph title sentence paragraph p title sen The lua docs state that both filesavepost and filesavepre expose file and path where path is the full path to the file being written If I open vis without specifying a filename however and then run w filename the respective variables dont seem to be set to the correct values Heres a small visrclua you can use to confirm this behaviour lua require vis viseventssubscribeviseventsFILESAVEPRE function file path print printFILESAVEPRE filepath is printfilepath printFILESAVEPRE path is printpath end viseventssubscribeviseventsFILESAVEPOST function file path print printFILESAVEPOST filepath is printfilepath printFILESAVEPOST path is printpath end I get the following output when running w filename indentation cleaned up FILESAVEPRE filepath is nil FILESAVEPRE path is filename FILESAVEPOST filepath is tmpfilename FILESAVEPOST path is If I run w again afterwards the output is as expected FILESAVEPRE filepath is tmpfilename FILESAVEPRE path is tmpfilename FILESAVEPOST filepath is tmpfilename FILESAVEPOST path is tmpfilename vis v vis v ge e curses lua tre acl Currently doing vis to hit end of file results in last line being centered in the terminal window how can I override this and draw the bottom line at the bottom of the screen Neither vis zb nor vis viswindowredrawbottom worked Ideally Id like to avoid having to add a custom command in either configh or visrclua Is there a vis actionviswindowredrawbottom or similar My succesful attempt at fixing my own issue In this issue the cursorline dissapears to late when mode switching Even when the visc drawcursorline or something like that is called and propperly returns without drawing so the issue seems to be that the screen or at least the portion what contains the cursor since the status bar insert does change to normal The PR is open for suggestions this is my first contribution to the project and hope it is of any use greetings o Hi I am trying to change my cursorline based on the mode I am in Since there are no mode change events in lua yet I tryed this viseventssubscribeviseventsWINSTATUS functionwin if vismode vismodesINSERT then viscommandset cursorline on end if vismode vismodesNORMAL then viscommandset cursorline off end end Unfortunately this throws two stack overflow exceptions many times upon user input visstdlua C stack overflow visstdlua C stack overflow Can anyone help me out to get the desired out behavior and understand the project a bit more