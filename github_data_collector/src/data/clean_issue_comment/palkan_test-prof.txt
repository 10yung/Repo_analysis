 When reporting is enabled AnyFixture will introspect its cache after suite has run But if AnyFixture has not been used the cache will be empty and this will return nil cachestatskeysmap sizemax Then nil will throw an error I think the reportstats method should return immediately if cache is empty with a simple message No AnyFixture Stats available With Rspec there is an idiomatic way to customize context inclusion by providing a block This will allow to write thinks like withaninvoicerb sharedcontext with an invoice do letinvoiceowner raise you must provide an invoice owner when including this context end actual spec includecontextwith an user owning resources this context exposes a complex letuser includecontextwith an invoice do this context exposes a complex letinvoice letinvoiceowner user here I am using the previous user to customize the invoice end When following this pattern with letitbe the customization block is added to the list of beforeall it does not override the previous one How do you handle this scenario Tell us about your environment Ruby Version ruby p Framework Version RSpec Minitest FactoryGirl Rails whatever RSpec v FactoryBot v Rails v TestProf Version v What did you do I am adding testprof to my project to be able to use letitbe Im using the Rails version that allows transactional tests with a shared connection when using feature tests with Capybara Having a controller test I changed from this ruby letfoo createfoo To this ruby letitbefoo createfoo The Foo model has a belongsto association to a model Bar from a different database ruby class Foo ActiveRecordBase belongsto bar end class Bar ActiveRecordBase establishconnection otherdatabaseRailsenvtosym end When I was using just letfoo given I have configusetransactionalfixtures true both records were destroyed after every run After I changed to letitbefoo It works on the first run but afterwards I get an error when trying to create the Foo record because it says a Bar already exists with that name I added a bindingpry and in fact it looks like a record is in the database in the first line of the test I started resetting the test database and again it works the first time and fails afterwards What did you expect to happen I would have expected the transaction to rollback all records no matter the database What actually happened Even though the Foo record was cleared as expected that didnt happen with Bar Do you have any idea of whats going on Is this a known issue EDIT In case this helps Ive just also tried doing this ruby beforeall do bar createbar end And Its definitely not rolling back the transaction for the other database Thats not the case for creating records on the main database How complex would it be to support merging test results Were running tests in parallel its easy to configure each one to spit out separate files but it would be great to be able to merge results across the entire test suite into one report of flamechart Im using your gem to analyze a huge project and Im wondering if theres an option to collect all Profilers results into plain text files for later analysis Right now all the results are outputted to stdout and are not handy to be managed when are executed in CI I wish to have it in plain files and get it from CI as artifacts Any idea Thank you Can testprof run in parallel using gem flatware or gem paralleltests This thread not a an issue at all aims to collect the stories of detecting and fixing test suites bottlenecks Not necessary related to TestProf btw That would help others to improve their tests and would help me to make the TestProf gem better Please comment on this issue to share your story