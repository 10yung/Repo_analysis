 My Environment Software Version Operating System MacOS Jets Ruby Expected Behaviour I would expect Timezone to return the systems timezone Timezone ActiveSupportTimeZone x fb da f nameEastern Time US Canada utcoffsetnil tzinfoTZInfoDataTimezone AmericaNewYork Current Behavior Timezone nil Solution Suggestion My guess is its not being initialized properly Summary I was checking if I use pry console for debugging It seems there are no gems like pryrails I assume this is because JetsTurbine currently doesnt support console option See how an external gem can extend the behavior Motivation For debugging Guidelevel explanation Explain the proposal as if it was already included in the project and you were teaching it to another programmer That generally means Introducing new named concepts Explaining the feature largely in terms of examples If applicable provide sample error messages deprecation warnings or upgrade guidance If this is a small feature you may omit this section Referencelevel explanation This is the technical portion of the feature request Explain the design in sufficient detail that Its interaction with other features is clear It is reasonably clear how the feature would be implemented Corner cases are dissected by example If you do not know how to answer this you can omit it No worries Drawbacks Why should we not do this Unresolved Questions What related issues do you consider out of scope for this feature that could be addressed in the future independently of the solution that comes out of this feature Checklist Make sure that youve done all of these To mark a checkbox done replace with x Or after you create the issue you can click the checkbox x Upgrade Jets Are you using the latest version of Jets This allows Jets to fix issues fast Theres a jets upgrade command that makes this a simple task Theres also an Upgrading Guide x Reproducibility Are you reporting a bug others will be able to reproduce and not asking a question If youre unsure or want to ask a question do so on x Code sample Have you put together a code sample to reproduce the issue and make it available Code samples help speed up fixes dramatically If its an easily reproducible issue then code samples are not needed If youre unsure please include a code sample My Environment Please fill out the table below with debugging info to help Software Version Operating System OSX Jets Ruby Expected Behaviour When a gem is removed from the Gemfile or Gemfilelock it is not deployed Current Behavior When a gem is removed from the Gemfile or Gemfilelock it remains in your gems directory and is still deployed Stepbystep reproduction instructions Add a very large gem to your Gemfile like bootstrapsass bundle install Deploy the app Remove the gem from your Gemfile bundle install Deploy the app Notice how the the gems directory open tmpjetsprojectnamestagecodevendorgemsruby still has the gem inside it If your lambda package is too large then it rejects the deploy Solution Suggestion Quick and easy Offer a clean command to clear out the cache If your Gemfilelock file changes since the last deploy clean the gem cache Only remove the gems that are not inside your Gemfilelock Hi Thanks for considering to file a bug with Jets Please take the time to answer the basic questions Please try to be as detailed as possible To be sensitive to everyones time if not enough details are provided the issue may be closed without comment If you repeatedly fail to provide enough details you may be blocked from ever submitting issues to Jets again Please use your best judgment If you are unsure this is a bug in Jets please consider asking your question at Thanks Checklist Make sure that youve done all of these To mark a checkbox done replace with x Or after you create the issue you can click the checkbox x Upgrade Jets Are you using the latest version of Jets This allows Jets to fix issues fast Theres a jets upgrade command that makes this a simple task Theres also an Upgrading Guide x Reproducibility Are you reporting a bug others will be able to reproduce and not asking a question If youre unsure or want to ask a question do so on x Code sample Have you put together a code sample to reproduce the issue and make it available Code samples help speed up fixes dramatically If its an easily reproducible issue then code samples are not needed If youre unsure please include a code sample My Environment Please fill out the table below with debugging info to help Software Version Operating System OSX G Jets Ruby Expected Behaviour After deployment my service is accessible myappmydomaincom What is it you expected to happen This should be a description of how the functionality you tried to use is supposed to work Try to keep this to oneparagraph Current Behavior Deployment fails because it cannot create the domain Describe the details of the bug Try to keep this to oneparagraph Stepbystep reproduction instructions Configure the service Create custom domain on Route Create certificate on AWS ACM applicationrb ruby Jetsapplicationconfigure do configdomainroute true configdomainname myapp configdomainhostedzonename mydomaincom configdomaincertarn arnawsacmuseast certificatecertificateid configdomainendpointtype EDGE end Run jets deploy Logs here Be sure to include any steps you took for the problem to exist This is likely the longest part of the report Please include any logs you think relevant here If the logs are long more than lines please make a gist of the logs and link to it With long logs you can also use the details tag to keep the report readable Example details summarySummary Goes Heresummary this is hidden collapsable content start with a blank line to get terminal output to format right details Code Sample Please provide a code repository gist code snippet or sample files to reproduce the issue Solution Suggestion Comment configdomainhostedzonename and the deployment is successfull Note I deploy in the zone euwest and the certificate is in useast zone Please provide possible solutions If you cant think of anything feel free to omit Please be kind and add helpful possible solutions For example Fix it is not a helpful solution suggestion We are mere mortals Please be constructive Hi Is it possible to filter parameters in logs as Rails is actually doing We tried to add Jetsapplicationconfigfilterparameters password passwordconfirmation in an initializer without any success Thanks for your help and keep up the good work Summary Option for more control over current Auto Replace API gateway behavior that can happen with a jets deploy Motivation Currently a jets deploy can possibly replace the API Gateway Jets does some Routes Change Detection Jets computes and figures out whether or not it needs to replace the REST API as part of a deployment Jets does this because it is sometimes the only way to deploy successfully Otherwise the CloudFormation stacks rollback It also removes the need to do the bluegreen deployment manually If the app does not yet have a Custom Domain setup replacing the API Gateway can cause issues as the API Gateway endpoint is changed Guidelevel explanation The option could be configdeployapiautoreplace with possible values Value Description nil This is the default behavior Jets checks if a Custom Domain is configured If a Custom Domain is set there is no prompt If Custom Domain not set then it depends on Routes Change Detection When an API replacement is required itll prompt the user let them know that the API endpoint will change and let the user decide false Never replace the API Gateway even if Routes Change Detection is positive So the CloudFormation stack will always rollback in that case true Replace the API Gateway if Routes Change Detection is positive Note The default nil behavior can block CICD setups but its better than causing issues postdeploy Maybe timeout after some time The prompt should point users to documentation explaining their options and answering questions that they will likely have Referencelevel explanation Can be configured in configapplicationrb Example ruby Jetsapplicationconfigure do configdeployapiautoreplace nil default Note Would also like a JETSAUTOREPLACEAPI env variable option also that overrides the applicationlevel config so demo presentation wont accidentally run into the prompt Drawbacks Mentioned it earlier It can block CICD builds The prompt should point users to documentation explaining their options and answering questions that they will likely have Can lead to users not setting up Custom Domains Think will handle with encouraging messaging to set up a Custom Domain name Manual bluegreen deployments quickly become an annoyance anyway Unresolved Questions Cant think of any at the moment Related Hi Thanks for considering to file a feature request with Jets Please take the time to answer the basic questions Please try to be as detailed as possible Thanks Summary When jets server is run in local development mode all jobs should be running Specifically I would like any jobs based on sqsevent to be running and to respond to events pushed into the queue they are attached to when in local development mode Ideally all jobs would work no matter the type Motivation Without supporting local jobs doing local development becomes very problematic A developer ends up having to continuously deploy any changes to the their jobs any time a modification has been made this is obviously very slow It also forces every developer to have an cloudfront stack running in AWS rather than being able to do development locally and then deploy to a common integration environment as is common with many git flows The only alternative to this that I can find is to manually run the jobs but even running the manually is a problem as you have fetch the sqs events by hand before executing the jobs Guidelevel explanation Explain the proposal as if it was already included in the project and you were teaching it to another programmer That generally means Introducing new named concepts Explaining the feature largely in terms of examples If applicable provide sample error messages deprecation warnings or upgrade guidance If this is a small feature you may omit this section Referencelevel explanation This is the technical portion of the feature request Explain the design in sufficient detail that Its interaction with other features is clear It is reasonably clear how the feature would be implemented Corner cases are dissected by example If you do not know how to answer this you can omit it No worries Drawbacks Ideally this would work consistently for all different types of jobs This seems complex and expensive to implement Unresolved Questions What related issues do you consider out of scope for this feature that could be addressed in the future independently of the solution that comes out of this feature This is a feature or enhancement x Ive added tests if its a bug feature or enhancement x Ive adjusted the documentation if its a feature or enhancement x The test suite passes run bundle exec rspec to verify this Summary This will allow i n to be used out of the box on jets As there is already some international adoption this seems like a good idea Provide a description of what your pull request changes Context Relevant issue Is this related to any GitHub issues or another relevant link Version Changes Which semantic version change would you recommend If you dont know feel free to omit it This is a minor patch in my opinion Hi thanks for your job Could we remove activerecord and actionmailer as the gem dependency For example Im using dynamoid and I dont need activerecord at all In other words developers can choose any other ORM depending on their own cases Thanks I can send a pull request if you agree with me Hi Thanks for considering to file a feature request with Jets Please take the time to answer the basic questions Please try to be as detailed as possible Thanks Summary I need an AWSSQSQueuePolicy I noticed that the SNS resource has an associated topic policy and so I have modeled a Jets core implementation for AWS Queue Policy soon to be PR to match The SNS topic policy implementation looks incomplete unused and doesnt have spec coverage or Im missing something A oneparagraph explanation of the feature Motivation I need an SQS queue policy specialized resource for Amazon MWS Subscription API integration MWS uses a specific policy to enable subscription to events from Amazon stores Im sure this pattern is used in other places A generalized AWSSQSQueuePolicy resource implementation would be useful to all Why do you want to see this feature in Jets What use cases does it support How the feature would be relevant to or more of Jets users Guidelevel explanation Explain the proposal as if it was already included in the project and you were teaching it to another programmer That generally means Introducing new named concepts Explaining the feature largely in terms of examples If applicable provide sample error messages deprecation warnings or upgrade guidance If this is a small feature you may omit this section A general implementation of AWSSQSQueuePolicy linked above modeled after the existing SNS Topic Policy Referencelevel explanation This is the technical portion of the feature request Explain the design in sufficient detail that Its interaction with other features is clear It is reasonably clear how the feature would be implemented Corner cases are dissected by example If you do not know how to answer this you can omit it No worries Drawbacks Why should we not do this I could implement this as an extension but it is a core feature and would be a nice addition for others Unresolved Questions Extension or core Does SNS Topic Policy work now Where should I add a spec for this What related issues do you consider out of scope for this feature that could be addressed in the future independently of the solution that comes out of this feature 