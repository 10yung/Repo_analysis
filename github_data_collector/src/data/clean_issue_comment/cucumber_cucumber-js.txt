 Could you please list the breaking changes in the formatter which are mentioned in CHANGELOG Custom formatters Formatter helpers and EventDataCollector had breaking changes to support retry Currently it is really hard to figure out what changed and what must be changed to support Cucumber if we create a custom formatter Eg getTestCaseData has been removed and it is not clear how getTestCaseAttempt would replace it or what other function does At the same time the link to EventDataCollector in the documentation is not valid After the move to Gherkin and cucumbermessages we can execute specs that include RuleExample syntax but still need to update the formatter helpers and builtin formatters to handle the results Now that we have converted to Typescript have a few post merge tasks that would be nice tsconfig set noImplicitAny to true tsconfig set noImplicitThis to true tsconfig set noImplicitReturns to true checkout using remove external typings in DefinitelyTyped after release Please comment if you think there are other tasks we should complete and I can add them to the list Also comment if you start working on a task The currently closed issue Adding property to Arrayprototype in page object file causes error still exists This error coerces us to put cucumber in an isolated environment desired anyway where we have to give up our handy array extensions not desired Sadly I have no patch ready yet Nevertheless thank you for the great effort you put into cucumberjs so far I have been playing around with the parallel feature and spent some time trying to understand how to pass arguments to the slaves beside using worldparameters It took me to read the source code to realize that the master env was cloned into each slave env It might be helpful to make it explicit in the documentation for example with Each slave is run in a separate node process and receives the following env variables in addition to the master env emphasis mine instead of Each slave is run in a separate node process and receives the following env variables Or this information could be added as a note To pass custom variables from the master to the slaves you can use env variables which will be propagated For information my use case was to pass processargv to the slave to be able to have some custom logic based on the arguments Thanks Description Ive runned features in parallel mode with tag parallel Session info from branch DuckDuckGo id a b cfd b cbdcapabilitiesacceptInsecureCertsfalseacceptSslCertsfalseapplicationCacheEnabledfalsebrowserConnectionEnabledfalsebrowserNamechromechromechromedriverVersion edb c f de fd a b f cae f d ad refsbranchheads userDataDirC Users AppData Local Temp scopeddir cssSelectorsEnabledtruedatabaseEnabledfalsegoogchromeOptionsdebuggerAddresslocalhost handlesAlert struehasTouchScreenfalsejavascriptEnabledtruelocationContextEnabledtruemobileEmulationEnabledfalsenativeEventstruenetworkConnectionEnabledfalsepageLoadStrategynormalplatformWindows NTproxyrotatablefalsesetWindowRectt ruestrictFileInteractabilityfalsetakesHeapSnapshottruetakesScreenshottruetimeoutsimplicit pageLoad script unexpectedAlertBehaviourignoreversion webStorageEnabledtrueid a f fdd c d d e capabilitiesacceptInsecureCertsfalseacceptSslCertsfalseapplicationCacheEnabledfalsebrowserConnectionEnabledfalsebrowserNamechromechromechromedriverVersion edb c f de fd a b f cae f d ad refsbranchheads userDataDirC Users AppData Local Temp scopeddir cssSelectorsEnabledtruedatabaseEnabledfalsegoogchromeOptionsdebuggerAddresslocalhost handlesAlertstruehasTouchScreenfalsejavascriptEn abledtruelocationContextEnabledtruemobileEmulationEnabledfalsenativeEventstruenetworkConnectionEnabledfalsepageLoadStrategynormalplatformWindows NTproxyrotatablefalsesetWindowRecttruestrictFileInteractabilityfalsetakes HeapSnapshottruetakesScreenshottruetimeoutsimplicit pageLoad script unexpectedAlertBehaviourignoreversion webStorageEnabledtrue Then the title is DuckDuckGo Privacy simplifieddsdsd DuckDuckGo id a b cfd b cbdcapabilitiesacceptInsecureCertsfalseacceptSslCertsfalseapplicationCacheEnabledfalsebrowserConnectionEnabledfalsebrowserNamechromechromechromedriverVersion edb c f de fd a b f cae f d ad refsbranchheads userDataDirC Users AppData Local Temp scopeddir cssSelectorsEnabledtruedatabaseEnabledfalsegoogchromeOptionsdebuggerAddresslocalhost handlesAlert struehasTouchScreenfalsejavascriptEnabledtruelocationContextEnabledtruemobileEmulationEnabledfalsenativeEventstruenetworkConnectionEnabledfalsepageLoadStrategynormalplatformWindows NTproxyrotatablefalsesetWindowRectt ruestrictFileInteractabilityfalsetakesHeapSnapshottruetakesScreenshottruetimeoutsimplicit pageLoad script unexpectedAlertBehaviourignoreversion webStorageEnabledtrueid a f fdd c d d e capabilitiesacceptInsecureCertsfalseacceptSslCertsfalseapplicationCacheEnabledfalsebrowserConnectionEnabledfalsebrowserNamechromechromechromedriverVersion edb c f de fd a b f cae f d ad refsbranchheads userDataDirC Users AppData Local Temp scopeddir cssSelectorsEnabledtruedatabaseEnabledfalsegoogchromeOptionsdebuggerAddresslocalhost handlesAlertstruehasTouchScreenfalsejavascriptEn abledtruelocationContextEnabledtruemobileEmulationEnabledfalsenativeEventstruenetworkConnectionEnabledfalsepageLoadStrategynormalplatformWindows NTproxyrotatablefalsesetWindowRecttruestrictFileInteractabilityfalsetakes HeapSnapshottruetakesScreenshottruetimeoutsimplicit pageLoad script unexpectedAlertBehaviourignoreversion webStorageEnabledtrue Session info from branch Google id a b cfd b cbdcapabilitiesacceptInsecureCertsfalseacceptSslCertsfalseapplicationCacheEnabledfalsebrowserConnectionEnabledfalsebrowserNamechromechromechromedriverVersion edb c f de fd a b f cae f d ad refsbranchheads userDataDirC Users AppData Local Temp scopeddir cssSelectorsEnabledtruedatabaseEnabledfalsegoogchromeOptionsdebuggerAddresslocalhost handlesAlertst ruehasTouchScreenfalsejavascriptEnabledtruelocationContextEnabledtruemobileEmulationEnabledfalsenativeEventstruenetworkConnectionEnabledfalsepageLoadStrategynormalplatformWindows NTproxyrotatablefalsesetWindowRecttrue strictFileInteractabilityfalsetakesHeapSnapshottruetakesScreenshottruetimeoutsimplicit pageLoad script unexpectedAlertBehaviourignoreversion webStorageEnabledtrueid a f fdd c d d e capabilitiesacceptInsecureCertsfalseacceptSslCertsfalseapplicationCacheEnabledfalsebrowserConnectionEnabledfalsebrowserNamechromechromechromedriverVersion edb c f de fd a b f cae f d ad refsbranchheads userDataDirC Users AppData Local Temp scopeddir cssSelectorsEnabledtruedatabaseEnabledfalsegoogchromeOptionsdebuggerAddresslocalhost handlesAlertstruehasTouchScreenfalsejavascriptEnable dtruelocationContextEnabledtruemobileEmulationEnabledfalsenativeEventstruenetworkConnectionEnabledfalsepageLoadStrategynormalplatformWindows NTproxyrotatablefalsesetWindowRecttruestrictFileInteractabilityfalsetakesHeap SnapshottruetakesScreenshottruetimeoutsimplicit pageLoad script unexpectedAlertBehaviourignoreversion webStorageEnabledtrue Then the title is Google Testing if the page title equals Google ms And the Google search form exists Testing if element input nameq is visible ms google googlesecond Scenario Searching Google again Given I open Googles search page Google id a b cfd b cbdcapabilitiesacceptInsecureCertsfalseacceptSslCertsfalseapplicationCacheEnabledfalsebrowserConnectionEnabledfalsebrowserNamechromechromechromedriverVersion edb c f de fd a b f cae f d ad refsbranchheads userDataDirC Users AppData Local Temp scopeddir cssSelectorsEnabledtruedatabaseEnabledfalsegoogchromeOptionsdebuggerAddresslocalhost handlesAlertst ruehasTouchScreenfalsejavascriptEnabledtruelocationContextEnabledtruemobileEmulationEnabledfalsenativeEventstruenetworkConnectionEnabledfalsepageLoadStrategynormalplatformWindows NTproxyrotatablefalsesetWindowRecttrue strictFileInteractabilityfalsetakesHeapSnapshottruetakesScreenshottruetimeoutsimplicit pageLoad script unexpectedAlertBehaviourignoreversion webStorageEnabledtrueid a f fdd c d d e capabilitiesacceptInsecureCertsfalseacceptSslCertsfalseapplicationCacheEnabledfalsebrowserConnectionEnabledfalsebrowserNamechromechromechromedriverVersion edb c f de fd a b f cae f d ad refsbranchheads userDataDirC Users AppData Local Temp scopeddir cssSelectorsEnabledtruedatabaseEnabledfalsegoogchromeOptionsdebuggerAddresslocalhost handlesAlertstruehasTouchScreenfalsejavascriptEnable dtruelocationContextEnabledtruemobileEmulationEnabledfalsenativeEventstruenetworkConnectionEnabledfalsepageLoadStrategynormalplatformWindows NTproxyrotatablefalsesetWindowRecttruestrictFileInteractabilityfalsetakesHeap SnapshottruetakesScreenshottruetimeoutsimplicit pageLoad script unexpectedAlertBehaviourignoreversion webStorageEnabledtrue As you can see cucumber use the same session for their branches Expected Behavior Need to paralyze feature files Different sessions for branches Current Behavior Scenarios paralyzing but not feature files Same session for branches Steps to Reproduce for bugs test mkdirp report cucumberjs featuresfeature require cucumberconfjs requiremodule babelregister require stepdefinitions parallel format nodemodulescucumberpretty format jsonreportcucumberreportjson Your Environment cucumber nightwatch babelcore babelpresetenv babelregister Window Linux node v Context Cucumber version Node version Operating system macOS same on circleci image node Notice This may be an issue on cucumberexpression but Im not sure Description With cucumberjs version the regexp was detected as an empty string if in the feature file it was empty As of version its null Example Lets define the step const When requirecucumber When The value equals async functionvalue consolelogvalue Lets call the step The value equals The console output is null whereas it should just log an empty string Problem I have a setup with cucumber and webdriverio and I use a BeforeAll hook to connect to the webdriver server I also have a command that runs cucumber in dryrun mode just to print out snippets for the missing step definitions But when I run that command the BeforeAll hook still executes and it tries to connect to the webdriver server which of course fails if Im not running the server and I never get to see my snippets Replicate First create these two files packagejson json scripts start cucumberjs dryrun require hooksjs devDependencies cucumber hooksjs js const BeforeAll requirecucumberBeforeAll BeforeAllfunction consolelogBeforeAll executes Then run these two commands npm install npm start s BeforeAll executes scenarios steps m s I would expect the BeforeAll hook to never execute Environment SoftwareVersion Ubuntu npm cucumberjs I get the same result with yarn Workaround In this case connecting to the webdriver server in the world constructor does not work or not very well at least since the world constructor is strictly synchronous and I want to run webdriverio in async mode My best workaround is setting an environment variable in the script command and check if this is set in the hook and just return if it is Cucumber version Is there a way to retry a scenario when a specified expection is thrown Perhaps grabbing the exception from the testCase in after hooks and then triggering a retry If so how can the exception be grabbed and subsequently how can the retry be triggered