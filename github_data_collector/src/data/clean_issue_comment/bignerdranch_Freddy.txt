Changes build configurations across the range to use Swift Heres a fix for the missingKeyBecomesNil Option catching errors from decode calls below For instance Swift struct A JSONDecodable let b B initjson JSON throws b try jsondecodeat b alongPath missingKeyBecomesNil struct B JSONDecodable let string String initjson JSON throws string try jsondecodeat string If I were to call decode with the following invalid json json b The previous implementation wouldnt throw an error but return Ab nil If you still want the previous functionality you can use the parameter applyRecursively Swift b try jsondecodeat b alongPath missingKeyBecomesNil Will throw an error b try jsondecodeat b alongPath missingKeyBecomesNil applyRecursively true nil Ive made some changes so that Freddy will build and work on Linux Tests can be run with swift test in the Freddy directory What appears to work Freddy disclaimer for my use and of its tests What doesnt work Tests that rely on Bundlefor because it has yet to be implemented in Foundation These include some of the JSONSubscriptingTests JSONTests and all of the JSONSerializingTests Note that the tests are not necessarily failing They just wont run at the moment For now Ive commented out these tests and added some conditional compilation statements to prevent the code from being reached on Linux Of the tests that run properly only a single fails projectTestsFreddyTestsJSONParserTestsswift error JSONParserTeststestOverflowingIntResultsInStringWithNSJSONSerializationParser XCTAssertEqual failed nil is not equal to Optional e as double I have yet to look for the culprit