 Summary Argo CLI should support Basic username and password auth with API server Checklist x Either a Ive created an enhancement proposal and discussed it with the community b this is a bug fix or c this is a chore x The title of the PR is a conventional b states what changed and c suffixes the related issues number Eg fixcontroller Updates such and such Fixes x I have written unit andor e e tests for my change PRs without these are unlike to be merged x Optional Ive added My organization is added to the README x Ive signed the CLA and required builds are green See Checklist x Ive included the version x Ive included reproduction steps x Ive included the workflow YAML x Ive included the logs What happened i followed the CONTRIBUTINGmd to setup my dev environment i built myrepworkflowcontrollerv image and install argo with myrepworkflowcontrollerv it was successed but when i logs kubectl logs workflowcontroller cf ffb fhck g n argo it shows error E reflectorgo githubcomargoprojargoworkflowcroncontrollergo Failed to list v alpha CronWorkflow cronworkflowsargoprojio is forbidden User systemserviceaccountargoargo cannot list resource cronworkflows in API group argoprojio at the cluster scope E reflectorgo githubcomargoprojargoworkflowcroncontrollergo Failed to list v alpha CronWorkflow cronworkflowsargoprojio is forbidden User systemserviceaccountargoargo cannot list resource cronworkflows in API group argoprojio at the cluster scope E reflectorgo githubcomargoprojargoworkflowcroncontrollergo Failed to list v alpha CronWorkflow cronworkflowsargoprojio is forbidden User systemserviceaccountargoargo cannot list resource cronworkflows in API group argoprojio at the cluster scope E reflectorgo githubcomargoprojargoworkflowcroncontrollergo Failed to list v alpha CronWorkflow cronworkflowsargoprojio is forbidden User systemserviceaccountargoargo cannot list resource cronworkflows in API group argoprojio at the cluster scope but i edit the pod workflowcontroller cf ffb fhck g and use the argoprojworkflowcontrollerv image it works the logs kubectl logs workflowcontrollerc dbfdb hl t n argo time T Z levelwarning msgConfigMap workflowcontrollerconfigmap does not have key config time T Z levelinfo msgStarting workflow TTL controller resync m s time T Z levelinfo msgWorkflow Controller version v starting time T Z levelinfo msgWorkers workflow pod time T Z levelinfo msgWatch Workflow controller config map updates time T Z levelinfo msgDetected ConfigMap update Updating the controller config time T Z levelwarning msgConfigMap workflowcontrollerconfigmap does not have key config time T Z levelinfo msgStarted workflow TTL worker time T Z levelinfo msgAlloc TotalAlloc Sys NumGC Goroutines time T Z levelinfo msgAlloc TotalAlloc Sys NumGC Goroutines W reflectorgo githubcomargoprojargoworkflowcontrollerconfigcontrollergo watch of v ConfigMap ended with too old resource version time T Z levelinfo msgAlloc TotalAlloc Sys NumGC Goroutines time T Z levelinfo msgAlloc TotalAlloc Sys NumGC Goroutines time T Z levelinfo msgAlloc TotalAlloc Sys NumGC Goroutines time T Z levelinfo msgAlloc TotalAlloc Sys NumGC Goroutines it seems my image is wrong but i followed the CONTRIBUTINGmd and then got my image And the log is ok when make start command is running so i want to know it is a bug or something wrong when i setup my dev environment What you expected to happen How to reproduce it as minimally and precisely as possible Anything else we need to know Environment Argo version argo version argo v Kubernetes version Client Version versionInfoMajor Minor GitVersionv GitCommit b f acc bed d ba dd f e cf GitTreeStateclean BuildDate T Z GoVersiongo Compilergc Platformlinuxamd Server Version versionInfoMajor Minor GitVersionv GitCommit c fef dd a e bd f daea GitTreeStateclean BuildDate T Z GoVersiongo Compilergc Platformlinuxamd kubectl version o yaml the logs when i setup my dev environment Get Go dependencies rm Rf vendornew dep ensure v Wrote contribgoopencensusioexporterocagentv Wrote githubcombeorn perksv Wrote githubcomdgrijalvajwtgov Wrote githubcomajgformv Wrote upperiodbv v Wrote githubcomdockerspdystreammaster Wrote githubcomPuerkitoBiourlescmaster Wrote githubcomKneticgovaluate aa a dcd a ff fb c e Wrote githubcomPuerkitoBiopurellv Wrote githubcomAzuregoautorestv Wrote githubcomargoprojpkgmaster Wrote githubcomcolinmarchdfs a d e ce b a c a e c e efa Wrote githubcomimdariomergov Wrote githubcomdavecghgospewv Wrote githubcomcensusinstrumentationopencensusprotov Wrote githubcomdustingohumanizev Wrote githubcomemickleigorestfulv Wrote githubcomevanphxjsonpatchv Wrote githubcomfatihstructsv Wrote githubcomghodssyamlv Wrote githubcomemirpasicgodsv Wrote githubcomgoopenapijsonpointerv Wrote githubcomgoopenapijsonreferencev Wrote githubcomgoopenapiswagv Wrote githubcomgosqldrivermysqlv Wrote githubcomgoopenapispecv Wrote githubcomhashicorpgolanglruv Wrote githubcomhashicorpgouuidv Wrote githubcomxeipuuvgojsonpointermaster Wrote githubcomimkiragointerpolv Wrote githubcomjbenetgocontextmaster Wrote githubcominconshreveablemousetrapv Wrote githubcomgorillawebsocketv Wrote gopkgininfv v Wrote gopkginyamlv v Wrote githubcomgrpcecosystemgrpcgatewayv Wrote gopkginjcmturneraesctsv v Wrote gopkgininiv v Wrote githubcomgoogleapisgnosticv Wrote gopkginjcmturnerdnsutilsv v Wrote gopkginjcmturnerrpcv v Wrote gopkginsrcdgobillyv v Wrote gopkginwarningsv v Wrote gopkginsrcdgogitv v Wrote k sioapimachineryrelease Wrote githubcomgophercloudgophercloudv Wrote githubcomstretchrobjxv Wrote githubcomrobfigcronv Wrote githubcomprometheusprocfsv Wrote githubcomsergigodiffv Wrote githubcomsirupsenlogrusv Wrote githubcomsoheilhycmuxv Wrote k siocodegeneratorrelease Wrote githubcomspf pflagv Wrote githubcomspf cobrafe e b c fa a deaa e d d Wrote githubcomsrcdgcfgv Wrote githubcomgooglegoquerystringv Wrote k sioutilsmaster Wrote githubcomgolangglogmaster Wrote githubcommatttproudgolangprotobufextensionsv Wrote githubcomgooglegofuzzv Wrote githubcomjcmturnergoforkv Wrote k sioclientgorelease Wrote githubcomjmespathgojmespathc b e Wrote githubcomjsoniteratorgov Wrote githubcomkevinburkesshconfig Wrote githubcomkonsortengowindowsterminalsequencesv Wrote k siokubeopenapimaster Wrote githubcomlibpqv Wrote githubcommailrueasyjsonv Wrote k siogengomaster Wrote githubcomtidwallprettyv Wrote githubcomstretchrtestifyv Wrote githubcomtidwallmatchv Wrote githubcomgolangprotobufv Wrote githubcommoderngoconcurrent Wrote githubcomtidwallgjsonv Wrote githubcommitchellhgohomedirv Wrote githubcommitchellhgopsmaster Wrote sigsk sioyamlv Wrote githubcomxeipuuvgojsonreferencemaster Wrote githubcomminiominiogov Wrote githubcomyalpjsonpathmaster Wrote k sioapirelease Wrote githubcomyudaigolcsmaster Wrote githubcomxeipuuvgojsonschemav Wrote githubcomklauspostcompressv Wrote githubcomyudaigojsondiff Wrote k sioklogv Wrote githubcomvalyalabytebufferpoolv Wrote githubcomvalyalafasthttpv Wrote githubcomvalyalafasttemplatev Wrote golangorgxcryptomaster Wrote githubcompkgerrorsv Wrote githubcommoderngoreflect Wrote golangorgxnetmaster Wrote githubcomxanzysshagentv Wrote gopkginjcmturnergokrb v v Wrote githubcompmezardgodifflibv Wrote githubcomprometheusclientgolangv Wrote golangorgxsyncmaster Wrote googlegolangorggrpcv Wrote githubcomprometheuscommonv Wrote githubcomprometheusclientmodelv Wrote githubcomgrpcecosystemgogrpcmiddlewarev Wrote gonumorgv gonumv Wrote gopkgingavvhttpexpectv v Wrote golangorgxtimemaster Wrote githubcomgooglegocmpv Wrote golangorgxsysmaster Wrote githubcomgogoprotobufv Wrote googlegolangorgappenginev Wrote golangorgxtextv Wrote goopencensusioaab bd a b ab c a f d cfcad ce a Wrote googlegolangorggenprotomaster Wrote golangorgxtoolsmaster Wrote cloudgooglecomgov Wrote githubcomawsawssdkgov Wrote golangorgxoauth master Wrote mouliohttp curlv Wrote googlegolangorgapiv CGOENABLED GOOSlinux GOARCHamd go build v i ldflags X githubcomargoprojargoversion X githubcomargoprojargobuildDate T Z X githubcomargoprojargogitCommit b af dd cc d ee f bc f efd b X githubcomargoprojargogitTreeStatedirty extldflags static o distworkflowcontrollerlinuxamd cmdworkflowcontroller githubcomargoprojargopkgapisworkflowv alpha githubcomargoprojargoworkflowpacker githubcomargoprojargoworkflowartifactshdfs githubcomargoprojargopkgclientlistersworkflowv alpha githubcomargoprojargopkgclientclientsetversionedscheme githubcomargoprojargoworkflowcommon githubcomargoprojargopkgclientclientsetversionedtypedworkflowv alpha githubcomargoprojargopkgclientclientsetversioned githubcomargoprojargoworkflowtemplateresolution githubcomargoprojargoworkflowvalidate githubcomargoprojargopkgclientinformersexternalversionsinternalinterfaces githubcomargoprojargopkgclientinformersexternalversionsworkflowv alpha githubcomargoprojargoworkflowutil githubcomargoprojargopkgclientinformersexternalversionsworkflow githubcomargoprojargopkgclientinformersexternalversions githubcomargoprojargoworkflowmetrics githubcomargoprojargoworkflowttlcontroller githubcomargoprojargoworkflowconfig githubcomargoprojargoworkflowcron githubcomargoprojargopersistsqldb githubcomargoprojargoworkflowcontroller githubcomargoprojargocmdworkflowcontroller Create controller image cp distworkflowcontrollerlinuxamd workflowcontroller docker build t argoprojworkflowcontrollerlatest target workflowcontroller f Dockerfiledev internal load dockerignore transferring context B done DONE s internal load build definition from Dockerfiledev transferring dockerfile kB done DONE s internal load metadata for dockeriolibrarygolang DONE s builder FROM dockeriolibrarygolang sha DONE s internal load build context transferring context MB s done DONE s builder RUN wget O dockertgz CACHED builder RUN wget CACHED builder RUN aptget update aptget install y git make CACHED builder WORKDIR tmp CACHED workflowcontroller COPY frombuilder usrsharezoneinfo usrs CACHED workflowcontroller COPY workflowcontroller bin DONE s exporting to image exporting layers exporting layers s done writing image sha c ead fe a cff ad ca a ecd b e d e b done naming to dockerioargoprojworkflowcontrollerlatest done DONE s rm f workflowcontroller Checklist Y Ive included the version Y Ive included reproduction steps Y Ive included the workflow YAML Y Ive included the logs What happened set up dev environment by following CONTRIBUTINGmd bash kubectl get po n argo NAME READY STATUS RESTARTS AGE argoserver dd c bw Running m minio Running h postgres bf fc f hhld Running h workflowcontroller d f fvq f Running m bash kubectl create ns crontest argo cron create examplescronworkflowyaml n crontest cron workflow is not started LAST RUN is NA bash argo cron list n crontest NAME AGE LAST RUN SCHEDULE SUSPENDED helloworld m NA false I cannot get any useful log for this What you expected to happen argo workflows shall be found based on schedule bash argo list n crontest How to reproduce it as minimally and precisely as possible set dev environment by following CONTRIBUTINGmd try to create cron workflow Anything else we need to know Environment Argo version argo version argo v b af BuildDate T Z GitCommit b af dd cc d ee f bc f efd b GitTreeState clean GoVersion go Compiler gc Platform darwinamd Kubernetes version kubectl version o yaml clientVersion buildDate T Z compiler gc gitCommit b f acc bed d ba dd f e cf gitTreeState clean gitVersion v goVersion go major minor platform darwinamd serverVersion buildDate T Z compiler gc gitCommit e a eaa a ed e a c gitTreeState clean gitVersion v goVersion go major minor platform linuxamd Other debugging information if applicable workflow result argo cron list n crontest NAME AGE LAST RUN SCHEDULE SUSPENDED helloworld m NA false argo list n crontest NAME STATUS AGE DURATION PRIORITY executor logs kubectl logs failedpodname c init kubectl logs failedpodname c wait workflowcontroller logs kubectl logs n argo kubectl get pods l appworkflowcontroller n argo o name Logs argo get workflowname kubectl logs failedpodname c init kubectl logs failedpodname c wait kubectl logs n argo kubectl get pods l appworkflowcontroller n argo o name kubectl logs workflowcontroller d f fvq f n argo time T Z levelinfo msgworkflow controller configuration from workflowcontrollerconfigmap nartifactRepository n archiveLogs true n s n bucket mybucket n endpoint minio n insecure true n accessKeySecret n name myminiocred n key accesskey n secretKeySecret n name myminiocred n key secretkey npersistence n connectionPool n maxIdleConns n maxOpenConns n nodeStatusOffLoad true n archive true n postgresql n host postgres n port n database postgres n tableName argoworkflows n userNameSecret n name argopostgresconfig n key username n passwordSecret n name argopostgresconfig n key password n time T Z levelinfo msgPersistence configuration enabled time T Z levelinfo msgMigrating database schema schemaVersion time T Z levelinfo msgPersistence Session created successfully time T Z levelinfo msgWorkflow archiving is enabled time T Z levelinfo msgStarting CronWorkflow controller time T Z levelinfo msgWorkflow Controller version v b af starting time T Z levelinfo msgWorkers workflow pod time T Z levelinfo msgWatch Workflow controller config map updates time T Z levelinfo msgStarting workflow TTL controller resync m s time T Z levelinfo msgDetected ConfigMap update Updating the controller config time T Z levelinfo msgworkflow controller configuration from workflowcontrollerconfigmap nartifactRepository n archiveLogs true n s n bucket mybucket n endpoint minio n insecure true n accessKeySecret n name myminiocred n key accesskey n secretKeySecret n name myminiocred n key secretkey npersistence n connectionPool n maxIdleConns n maxOpenConns n nodeStatusOffLoad true n archive true n postgresql n host postgres n port n database postgres n tableName argoworkflows n userNameSecret n name argopostgresconfig n key username n passwordSecret n name argopostgresconfig n key password n time T Z levelinfo msgPersistence configuration enabled time T Z levelinfo msgMigrating database schema schemaVersion time T Z levelinfo msgPersistence Session created successfully time T Z levelinfo msgWorkflow archiving is enabled time T Z levelinfo msgStarted workflow TTL worker time T Z levelinfo msgAlloc TotalAlloc Sys NumGC Goroutines time T Z levelinfo msgAlloc TotalAlloc Sys NumGC Goroutines time T Z levelinfo msgAlloc TotalAlloc Sys NumGC Goroutines time T Z levelinfo msgAlloc TotalAlloc Sys NumGC Goroutines time T Z levelinfo msgAlloc TotalAlloc Sys NumGC Goroutines kubectl get po n crontest No resources found in crontest namespace Issue Author Dont delete this message to ecourage other users to support your issue Message from the maintainers If you are impacted by this bug please add a reaction to this issue We often sort issues this way to know what to prioritize What happened Our Makefile does some pretty intrusive things such as installing manifests scaling up and down services and deleting untracked files in the git repo with the assumption that the current kubeconfig is pointing to a cluster which is safe for development purposes This is not always a safe assumption especially when the development namespace we are manipulating is the argo namespace where we install by default Its okay to have convenience make targets so long as if it were accidentally run against a prod kubeconfig it would fail with no affect Lets not default to the argo namespace andor allow a different namespace to be used Checklist x Ive included the version x Ive included reproduction steps Ive included the workflow YAML Ive included the logs What happened I open the UI and it redirected to but I get forbidden error What you expected to happen It should actually redirect to managed namespace How to reproduce it as minimally and precisely as possible See above Anything else we need to know Environment Argo version argo version Kubernetes version kubectl version o yaml Other debugging information if applicable workflow result argo get workflowname executor logs kubectl logs failedpodname c init kubectl logs failedpodname c wait workflowcontroller logs kubectl logs n argo kubectl get pods l appworkflowcontroller n argo o name Logs argo get workflowname kubectl logs failedpodname c init kubectl logs failedpodname c wait kubectl logs n argo kubectl get pods l appworkflowcontroller n argo o name Issue Author Dont delete this message to ecourage other users to support your issue Message from the maintainers If you are impacted by this bug please add a reaction to this issue We often sort issues this way to know what to prioritize Checklist x Either a Ive created an enhancement proposal and discussed it with the community b this is a bug fix or c this is a chore x The title of the PR is a conventional b states what changed and c suffixes the related issues number Eg fixcontroller Updates such and such Fixes x I have written unit andor e e tests for my change PRs without these are unlike to be merged x Optional Ive added My organization is added to the README x Ive signed the CLA and required builds are green While attempting to add support for K D I found and fixed a bunch of issues featcontroller Exposes container runtime executor as CLI option fixrbac Corrects RBAC roles test Add support for K D test Run all tests using v token build Speeds up builds Checklist x Either a Ive created an enhancement proposal and discussed it with the community b this is a bug fix or c this is a chore x The title of the PR is a conventional b states what changed and c suffixes the related issues number Eg fixcontroller Updates such and such Fixes x I have written unit andor e e tests for my change PRs without these are unlike to be merged x Optional Ive added My organization is added to the README Ive signed the CLA and required builds are green Summary Argo Server UI is keep showing the error page if UI gets an unauthorized response from the server What change you think needs making UI should show the login page with an error message or Error page should have login page link Motivation The token is cached in the browser if token changed or accessing the different servers UI should show the login page to update the token Also consider asking your question on our Slack channel See the README for more info Summary How to prove a private CA cert to talk to self hosted GitHub enterprise Motivation I need to be able to clone repos hosted in a private github enterprise but how to mount the CA cert to communicate with it when using the gut artifact feature 