Under PreferencesAdvanced I added an option for the user to manually select a path for their dcc downloads If the user doesnt specify it will first try to place in Downloads and if not it will fall back to Desktop I LOVE limechat however when file transfers fail for me which is common I have to start all over again which can take forever for some large files I have to use Colloquy since it supports XDCC resume which I really dont like I want to be able to use Limechat instead Please add resume support to Limechat thanks Id like the ability to inject and extract ASCII text from the client this would grant me the ability to use add on utilities with the client When I close the lid on my Macbook and Limechat is connected to an irc server it starts repeatedly disconnecting and reconnecting if the wifi connection is available This spams the irc with connection messages and also depletes the laptop battery if not connected to a power source Disabling Handoff stopped this behavior but now it says this error when I wake the computer from sleep The operation couldn t be completed kCFErrorDomainCFNetwork error Since the release LimeChat has been crashing with the following signature when reconnecting probably due to the deployment target change Thread Crashed Dispatch queue comapplemainthread libobjcAdylib x fff c be d objcmsgSend netlimechatLimeChatAppStore x fd x f comappleWebKitLegacy x fff f c CallFrameLoadDelegatevoid WebView objcselector objcobject comappleWebKitLegacy x fff f fba WebFrameLoaderClientdispatchDidFinishLoad comappleWebCore x fff dd d af WebCoreFrameLoadercheckLoadCompleteForThisFrame comappleWebCore x fff dd ccbb WebCoreFrameLoadercheckLoadComplete comappleWebCore x fff ec e f WebCoreDocumentLoaderfinishedLoading comappleWebCore x fff dd a WebCoreDocumentLoadercontinueAfterContentPolicyWebCorePolicyAction comappleWebCore x fff ec b WebCoreDocumentLoaderresponseReceivedWebCoreResourceResponse const comappleWebCore x fff ec fe WebCoreDocumentLoaderhandleSubstituteDataLoadNow comappleJavaScriptCore x fff b WTFtimerFiredCFRunLoopTimer void comappleCoreFoundation x fff fc CFRUNLOOPISCALLINGOUTTOATIMERCALLBACKFUNCTION comappleCoreFoundation x fff fbc CFRunLoopDoTimer comappleCoreFoundation x fff fb a CFRunLoopDoTimers comappleCoreFoundation x fff f d b CFRunLoopRun comappleCoreFoundation x fff f CFRunLoopRunSpecific comappleHIToolbox x fff fcdcd RunCurrentEventLoopInMode comappleHIToolbox x fff fcdcb ReceiveNextEventCommon comappleHIToolbox x fff fcdc BlockUntilNextEventMatchingListInModeWithFilter comappleAppKit x fff df da DPSNextEvent comappleAppKit x fff e e NSApplicationNSEvent nextEventMatchingEventMaskuntilDateinModedequeue comappleAppKit x fff df NSApplication run comappleAppKit x fff df a NSApplicationMain libdylddylib x fff start can we please have the option of specifying a serial port for the injection and extraction of text from the IRC client this feature will make interfacing project to the internet much easier A small feature request Please make it possible to display emojis in a larger font than the text It is harder to make out what an emoji is than plain characters so in channels where they are sparingly used it would make sense to display them much larger a bit like the preview images for links to images or videos It will stay at the same position and new messages remain hidden This seems to be happening to me a lot more now than it used to Im not sure what causes it Apple has weird keyboard layout philosophy HomeEnd key in document context instead of line context dumb EU layouts with replaced tilde etc Fortunately macOS allows to do userscoped rebinding in LibraryKeyBindingsDefaultKeyBindingdict file to fix those annoyances Current behavior LimeChat uses some input method that does not respect user key bindings For example HomeEnd keys fix UF moveToBeginningOfLine UF B moveToEndOfLine Is ignored and LimeChat still jumps to beginningend of whole chat history when homeend is pressed Expected behavior LibraryKeyBindingsDefaultKeyBindingdict should be respected by LimeChat Thanks for your hard work on this project this fixes and conforms to apples behavior on native apps just did some removals