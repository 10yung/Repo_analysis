Hi We built a search benchmark for tantivy It proved to be very helpful to get a breakdown of our performance compared to that of Lucene It helped me identify the need for a skip info for instance Would you guys want to add your engine to the bench I tried to integrate noise with it The noise API is hands off the easiest I have seen so far I might want to copy it at one point Kudos for that However I failed indexing as little as K docs Following discussion from The wrapper around the snowball stemmer is hardcoded to english Quite some flexibility could be gained by offering the ability to specify a different language supported natively by the snowballproject Obviously english should be the default From the top of my head Something along the lines of let index noiseopenmyindex true lang german Most use cases should operate on a single language so multilanguage support shouldnt be an issue Theres still a lot of work to do eg proper error propagation cc ingenieroariel Add support for integration downstream Python applications Im not sure if its a good idea or not or if there are perhaps better ways of solving this When I prepared a blog post I came across data with this shape json fy amount netOrGross Gross fy amount netOrGross Gross fy amount netOrGross Net Id now like to sum up the amount of all years where netOrGross is Gross I dont see a way to do this is a single query currently What if I could use a Bind Variable find isGrossfy netOrGross Gross fy netOrGross Gross fy netOrGross Gross return sumisGrossamount When theres a default value specified on the order clause on a Keypath that is also part of the return value with a different default value then the returned results were wrong It was sorted by the return value default not by the order clause default This fixes Prior to this change default values for aggregates were specified as maxfoo default The new syntax is putting the default value within the aggregate function maxfoo default This makes more sense as the default value is not a single value for the max function but it is applied to every Keypath within the max function It is also more symmetrical to the default values for returns There its also Keypath space default eg return foo default This is part of According to the query language reference its possible to have a default value for the ordering if the field it is ordered on isnt defined Heres an example drop targettestsquerytestorder create targettestsquerytestorder add id bar true add id bar false add id foocoll bar string add id This one is OK find order bar asc return bar null false true string This one is also OK find order bar default asc return bar default false true string This one fails It returns null as first element If it would take the default into account it would have the order shown below find order bar default asc return bar false true null string Id like to propose changing the language a bit to make it a bit more regularconsistent Order clause Currently it is is order baz asc default Id like to change it to order baz default asc Reason In return values its return baz baz default hammer hammer default So its path default kind of like a tuple Use this pattern for the order as well Grouping Currently group is groupbaz orderasc defaulta Id like to change it to groupbaz defaulta asc Reason It now has the same shape as the order clause What do others think about making this change Currently its not possible to use a field name as key in the output Example find name seinfeld return name score Expected output Seinfeld Currently you get error Error Expected at character found 