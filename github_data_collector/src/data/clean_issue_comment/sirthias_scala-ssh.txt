 info SecureCopyTest info SecureCopyTest ABORTED info javalangNoSuchMethodError netschmizzsshjxferLoggingTransferListener method initV not found info at comdecodifiedscalasshScpTransferabledefaultListenerScpTransferablescala info at comdecodifiedscalasshScpTransferableuploaddefault ScpTransferablescala info at netuptelsimscpservicesScpServiceanonfunuploadFile ScpServicescala info at scalaruntimejava JFunction mcVspapplyJFunction mcVspscala info at catseffectinternalsIORunLoopstepIORunLoopscala info at catseffectIOunsafeRunTimedIOscala info at catseffectIOunsafeRunSyncIOscala info at netuptelsimscpservicesScpServiceanonfunuploadFiles ScpServicescala info at catseffectinternalsIORunLoopliftedTree IORunLoopscala info at catseffectinternalsIORunLoopcatseffectinternalsIORunLooploopIORunLoopscala info This PR changes how commands are logged and its completely optin defaulting to the normal behaviour promiscuous logging It also adds the actual exception message to the log for easier debugging Im completely open to suggestions Ive got two virtually identical scripts that Im running on a remote server both of which succeed and complete on the remote server but one of which hangs that is its scalassh session only terminates after command timeout Im executing them via this scala code scala def remoteRequestreq SlackRequest Either Throwable SlackResponse for server findServerreq studyOpt findStudyreq serverid commandInput getCommandInputreq commandResult val domain studyOptmapdomaingetOrElse SSHserverhost HostResourceConfig client for result val command Commandsbash s domain reqargsmkString commandInput clientexeccommand yield result toEither response processRemoteResultreq commandResult yield response Heres the host resource config scalassh host config file logintype password username exxxxxxxxxxr password blahblahblah fingerprint any commandtimeout Ive attached two scripts along with their logs The lockusershtxt script runs successfully on the remote server and scalassh returns normally after the command finishes The unlockusershtxt script also runs successfully on the remote server but scalassh hangs and only terminates when the command timeout is triggered Ive verified the unlock script succeeds both by running it manually via the command line and because the db update succeeds lockusershtxt lockoklog unlockusershtxt unlockfaillog Can anyone explain whats going on here I cant tell whats different between these two cases Ive also changed the order of their execution to no avail that is same resultlock always succeeds unlock always hangs until timeout Ive got other scripts some of which work and some of which hang even though all succeed in executing and terminating normally on the remote server so I dont think this has anything to do with the scripts themselves Thanks for any insights so the regular test command doesnt run them and is properly green Hello if I execute cat tmpfootxt with the command input a a a a The command hang forever and never return How do you signal the EOTEOF aka ControlD the lazy valsexitCodeexitErrorMessage io streams etc gives null instead of Option for the channel as result of a remote command causes Segmentation fault or Floating point exception where the exception stored in exitSignal its easy to reproduce just compile following c code and run its binary with exec and then access the exitCode it throws javalangNullPointerException int mainint argc char argv int x x Default key locations specified in SshLoginscala are sshidrsa sshiddsa but the tilde is a shell specific expansion and not applied resulting in the following exception when using the default key locations javalangRuntimeException None of the configured keyfiles exists sshidrsa sshiddsa Replacing the tilde with SystemgetPropertyuserhome would be better I cant login to remote server using public key Mac jdk javalangSecurityException class orgbouncycastleopensslPEMParsers signer information does not match signer information of other classes in the same package Code example buildsbt and etc can be found here How can I connect to a host by means of an HTTP proxy 