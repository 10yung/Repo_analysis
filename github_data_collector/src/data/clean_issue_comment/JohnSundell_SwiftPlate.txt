Error output Starting to generate project SmartAPI Removing any previous temporary folder Done Making temporary folder UsersAmadeuDeveloperswiftplatetemp Done Making a local clone of the SwiftPlate repo Done Copying template folder Done Removing temporary folder Done Filling in template An error was encountered Error Error DomainNSCocoaErrorDomain Code The file Acpython pyc couldn t be opened because the text encoding of its contents can t be determined UserInfoNSFilePathUsersAmadeuDeveloperAREPLvscodetestmanualAreplTestspycacheAcpython pyc My first pull request Its quite simple I hope Im following the right protocol for this Ask to create folder if it doesn t exist instead of throwing an error If I will generate project using swiftplate there isnt path attribute in target in Packageswift Because of that I am unable to install framework as dependency through package manager After adding path Sources installation is possible Source License year updated I have this error when trying to do swiftplate r swiftplate Starting to generate project Test Removing any previous temporary folder Done Making temporary folder Testswiftplatetemp Done Making a local clone of the SwiftPlate repo Done Copying template folder An error was encountered Error Error DomainNSCocoaErrorDomain Code The folder Template doesn t exist UserInfoNSFilePathTestswiftplatetempSwiftPlateTemplate NSUserStringVariant Folder NSUnderlyingError x f afa Error DomainNSOSStatusErrorDomain Code fnfErr File not found Maybe Im missing something It work well without the option r I use cookiecutter and my custom template for project generation I guess you have the same problem its very hand to update or create a new template How you do it It would be great if you add a command for template generation based on existing project I want to write a script for it but if you have a plan for it Ill wait Will be good a feature where the users could choose the schemes to be generated in the xcode project One solution is by command line argument For example swift swiftplatemainswift create all schemes iOS macOS watchOS tvOS swift swiftplatemainswift ios create schemes only for iOS swift swiftplatemainswift ios tvos create schemes only for iOS and tvOS Couple of things here Added an optional folder for storing things that arent part of the copypaste template unless you opt into them via the prompts Added a prompt about using Cocoapods in general provides a file ready for dependencies to be added and initialises the workspace Added a prompt about using Quick and Nimble via Cocoapods uses an alternative starting podfile Added those dependencies to the package manager file if you opt into QN That last point creates a slight problem if you want to test via swift test youll end up having those dependencies included when you swift build as well which isnt ideal Its a known issue for SPM thats being worked on Im not completely across the status tho Ive included it here by default because it means this can hit all platforms but people can also delete it if theyre happy to just test through Xcode If you merge this PR Ill create an issue to track that Hi John I think this project is great and Im looking at things that would take even more steps away from the average developers initial workflow This is a TravisCI Fastlane combo which in my experience it works a treat for simplifying the commands needed to build and test without even getting into all the other delivery related goodies that are on offer As you can see in the travis config the advantage of using Fastlane for this purpose is that the entry point is dead simple and should make it easy to add other CI services as well Specifically the Fastlane script exercises all test targets and also builds the watch one If someone wants to remove a target because theyre not supporting it they just delete the relevant scan step Any more iOS devices can be easily added and Ive left some examples commented out Lemme know what you think