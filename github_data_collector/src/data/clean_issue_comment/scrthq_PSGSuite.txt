Since we already run foreach on the User thought we can allow this to be an Array String input I have also tested it and it works as expected I got the multiple user output for my search Hello I have troubles with module version Summary PSGSuite version stop working on Microsoft Windows Server Standard To resolve the issue need to upgrade GoogleApisUrlshortenerv dll to Version but I dont see one at Probably need rollback dlls to version Debugging info When I run the command ImportModule PSGSuite the errors occurred Message Unable to load one or more of the requested types Retrieve the LoaderExceptions property for more information StackTrace at SystemReflectionRuntimeModuleGetTypesRuntimeModule module at SystemReflectionAssemblyGetTypes at MicrosoftPowerShellCommandsAddTypeCommandLoadAssemblyFromPathOrNameList generatedTypes at MicrosoftPowerShellCommandsAddTypeCommandEndProcessing at SystemManagementAutomationCommandProcessorBaseComplete LoaderExceptions SystemIOFileNotFoundException Could not load file or assembly GoogleApis Version Cultureneutral PublicKeyToken b fa e db ab or one of i ts dependencies The system cannot find the file specified File name GoogleApis Version Cultureneutral PublicKeyToken b fa e db ab WRN Assembly binding logging is turned OFF To enable assembly bind failure logging set the registry value HKLM Software Microsoft FusionEnableLog DWORD to Note There is some performance penalty associated with assembly bind failure logging To turn this feature off remove the registry value HKLM Software Microsoft FusionEnableLog SystemIOFileNotFoundException Could not load file or assembly GoogleApis Version Cultureneutral PublicKeyToken b fa e db ab or one of its dependencies The system cannot find the file specified File name GoogleApis Version Cultureneutral PublicKeyToken b fa e db ab Digging further I have found that it cant load net GoogleApisUrlshortenerv dll due to it requires GoogleApis Version but version GoogleApis Version was installed See Fusion logs for more details Prebind state information LOG DisplayName GoogleApis Version Cultureneutral PublicKeyToken b fa e db ab Fullyspecified LOG Appbase fileCWindowsSystem WindowsPowerShellv LOG Initial PrivatePath NULL LOG Dynamic Base NULL LOG Cache Base NULL LOG AppName powershellexe Calling assembly GoogleApisUrlshortenerv Version Cultureneutral PublicKeyToken b fa e db ab LOG This bind starts in LoadFrom load context WRN Native image will not be probed in LoadFrom context Native image will only be probed in default load context like with AssemblyLoad LOG Using application configuration file C Windows System WindowsPowerShell v powershellexeConfig LOG Using host configuration file LOG Using machine configuration file from C Windows MicrosoftNET Framework v config machineconfig LOG Postpolicy reference GoogleApis Version Cultureneutral PublicKeyToken b fa e db ab LOG GAC Lookup was unsuccessful LOG Attempting download of new URL fileCWindowsSystem WindowsPowerShellv GoogleApisDLL LOG Attempting download of new URL fileCWindowsSystem WindowsPowerShellv GoogleApisGoogleApisDLL LOG Attempting download of new URL fileCWindowsSystem WindowsPowerShellv GoogleApisEXE LOG Attempting download of new URL fileCWindowsSystem WindowsPowerShellv GoogleApisGoogleApisEXE LOG Attempting download of new URL fileCProgram FilesWindowsPowerShellModulesPSGSuite libnet GoogleApisDLL LOG Assembly download was successful Attempting setup of file C Program Files WindowsPowerShell Modules PSGSuite lib net GoogleApisdll LOG Entering runfromsource setup phase LOG Assembly Name is GoogleApis Version Cultureneutral PublicKeyToken b fa e db ab WRN Comparing the assembly name resulted in the mismatch Minor Version ERR The assembly reference did not match the assembly definition found ERR Runfromsource setup phase failed with hr x LOG Attempting download of new URL fileCProgram FilesWindowsPowerShellModulesPSGSuite libnet GoogleApisGoogleApisDLL LOG Attempting download of new URL fileCProgram FilesWindowsPowerShellModulesPSGSuite libnet GoogleApisEXE LOG Attempting download of new URL fileCProgram FilesWindowsPowerShellModulesPSGSuite libnet GoogleApisGoogleApisEXE LOG All probing URLs attempted and failed Is it possible that you can add gdriveteam drive changes as cmdlet I would like to have a script that would run every minutes look for changes uploads to Gdrive or team drive and export selected information file id folder Id name of file folder its in etc I will use the selected information both to export to CSV and create files strm files which will link to the hosted media file I think seeing the changes to a drive would be useful information to have From Disqus on the docs page Skylar Ragan minutes ago GetGSChatWebhook appears to no longer be a valid function in this module It seems the key for the webhook value can now be named directly with the webhook parameter Reply Share Avatar Nate SCRT HQ Mod Skylar Ragan minutes ago Hey Skylar Ragan Any examples or links that show the change in usage Definitely want to get those cleaned up if I can but Im not sure exactly what the alternative you are suggesting is so I have no way to validate that claim Edit Reply Share Avatar Skylar Ragan a minute ago So both Example as well as the description for the Webhook parameter itself suggest getting the webhook URL via the GetGSChatWebhook command ie webhook GetGSChatWebhook RoomName But when attempting to call GetGSChatWebhook an error is thrown stating its not recognized as the name of a cmdlet function script file or operable program Instead both Example and Example seem to suggest calling the room name directly ie Webhook RoomName which Ive been able to verify works in the most recent version of the module Reply Share Avatar Nate SCRT HQ Mod Skylar Ragan a few seconds ago Got it that makes sense I appreciate the details I may have switched that up to make it easier to use a while back and never updated the documentation to reflect Ill get that sorted asap Edit Reply Share This isnt fully ready to be merged but I wanted to open this PR to see how you feel about these changes Im trying to migrate from a Google API module my team has written UMNGoogle to this module Our primary use case is running from within Azure Automation Additionally Were currently using a service account with a p cert to do all our authentication though our p isnt a super admin its just a regular user in our domain Additionally when we first created our p cert we reexported it with a new more secure password instead of notasecret So the first change Ive made here is to create a P KeyPassword config item It can be specified with SetPSGSuiteConfig If it exists NewGoogleService will use it instead of the default password Ive constructed it in the way I have such that if someone doesnt use this parameter theyll never see it in their config This also makes it backwards compatible with existing configs and doesnt require anything like setting the notasecret password in every config file The rest of the changes are because of our primary use case Azure Automation First Ill note that I wrote the rest of this before I saw the Import and Export Config commands So its entirely possible I could be using those but at a first glance I dont think theyd fully work in my scenario Azure Automation has its own secrets management It can storeretrieve strings It can also storeretreive a few object types like PSCredential and X Certificate Because we do all our secrets management in Azure Automation directly I dont want to have to do any work to store my configuration on the actual machine and make the deployment of new HybridRunbookWorkers as simple and automated as possible So first Ive modified the GetPSGsuiteConfig function specifically the internal Decrypt function Now it will decrypt one additional datatype a ScriptBlock It does this by actually executing the ScriptBlock which makes the configuration incredibly versatile I havent modified the corresponding Set command for this because I think it may be advanced enough that someone should have to edit their Configuration by hand if they want to do it In Azure Automation if I want to retrieve a string value I would use the command GetAutomationVariable Name name For example if I stored my App Email in a variable called gcertemail then GetAutomationVariable Name gcertemail in a runbook would return the App Email Then I can do something like this in my Configuration making it fully portable powershell AppEmail ScriptBlock GetAutomationVariable Name gcertemail The ScriptBlock construction here is a feature of the Configuration module when it deseralizes this the AppEmail property will be an actual ScriptBlock To Decrypt this I added another case if the String being decrypted is of type ScriptBlock it will execute it and return whatever it returns In my case it will return an actual string so the end result is the AppEmail config item is being set and defined by my Azure Automation Variable Azure Automation can also produce exportable passwordless certificates in the same format as your certificate construction code currently takes So Ive added another config that can be retreived with GetPSGsuiteConfig P KeyObject If P KeyObject is defined NewGoogleService will skip trying to write the bytes of the password protected cert and skip creating the certificate object and just use the value of P KeyObject directly The end result of all this is I can write a config file that looks like this powershell aaservice ConfigPath C ProgramData powershell SCRT HQ PSGSuite Configurationpsd AppEmail ScriptBlock GetAutomationVariable Name gcertemail AdminEmail ScriptBlock GetAutomationVariable Name gcertemail P KeyObject ScriptBlock GetAutomationCertificate Name gcert DefaultConfig aaservice Ive been able to test this in my environment but thats the extent of testing Ive done Im opening this to see what you think about this to determine if Ill put more work into making it merge ready Im trying to migrate off of a custom brewed Powershell Module that goes against the REST API directly to using PSGsuite and theres a few specific bits of functionality around Spredhseets that its currently missing that Ive already implemented Manipulating Data Validation in cells Resizing columns Removing specific columns or rows Ill volunteer to take this on Im not sure exactly how Ill implement this Ill have to examine the current functions how theyre currently interacting with the API and how specific or general new functionality will be I also see some spreadsheet requests in I may contribute to whatever work has happened there as well Just opening this issue to claim the work and start a place for discussion about proposals Ill have once I actually start coding something Is your feature request related to a problem Please describe We would like to GetRemoveSetUpdate the G Suite Business Archived User license Describe the solution youd like We would like to use this feature in PSGSuite Describe alternatives youve considered I have seen that GAM supports this license Additional context ProductId ProductName G Suite Archived User SkuId SkuName G Suite Business Archived User Is your feature request related to a problem Please describe GetGSDriveFileList periodically returns zero data Describe the solution youd like Method returns status code about request Describe the bug When using the startpsdrivefileupload function with the recurse switch it will create the folder structure of the directory to be uploaded but then it places all of the files in the root directory To Reproduce Steps to reproduce the behavior Use startgsdrivefileUpload Use recurse switch Expected behavior In the documentation it states that it should place the files in the same directory pattern in Google as the original directory Environment please complete the following information OS Windows PowerShell Version Powershell PSGSuite Version Is your feature request related to a problem Please describe I would like to have the ability of exporting google docs users to files as described Google Sheets xlsx Google Docs docx Google Presentations pptx and so on Describe the solution youd like Do a recursive search in a specific drive location personal shared drives or both for all user or specific one and then export all the files found on its source location Describe alternatives youve considered Additional context 