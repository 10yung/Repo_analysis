Version of noderedis introduces breaking changes see NodeRedisnoderedis Until these changes are addressed use version of the client library Hello my application crashes when Redis isbecomes unavailable and Im not sure how to handle this Should I be catching an exception somewhere Thank you While trying to test PRs I ran into this issue Need to have a default set of options which should work with both older version as well as future proof coffeeresque Thanks for this awesome module One of the things that rubyresque does at boot is inspect the list of workers redis has and check if any of them used to run on this server and check if they are still running This is important for knowing the status of your ecosystem and allowing the resque web interface to continue to make sense In our projects we use the following methods to clean up pids at boot javascript var os requireos var exec requirechildprocessexec var pidCleanup functionworker callback var self this var hostname workername var redis workerredis selfgetPidsnode functionerror matchedPids var hostKey resqueworker hostName rediskeyshostKey functionerr keys ifkeyslength callback else var started keysforEachfunctionkey started var pid parseIntkeysplit var queues keysplit ifmatchedPidsindexOfpid pid is still running processnextTickfunction started ifstarted callback else pid has crashed or been stopped consolelogremoving previously stopped worker pid from resque pid redisdelkey function var setEntry hostName pid queues redissremsetEntry function started ifstarted callback var getPids functionmatcher callback Its important here to ALSO look for what normal resque would run grep resque var grepString ps awx grep Stringmatcher resque grep v grep var child execgrepString functionerror stdout stderr var pids stdoutsplit nforEachfunctionline line linetrim iflinelength var pid parseIntlinesplit pidspushpid callbackerror pids Boot Sequence var worker requirecoffeeresqueconnectworkerqueues processor workername oshostname an important override to match rubyredis workerpidCleanupworker function callback As the title describes kinda new to redis and resque and would like to know more on how I can use this Looking for alternative to replace AWS SQS Nodejs Cheers Hey Thanks for coffeeresque its awesome Im having a question though is the changing of the process title mandatory It is causing me problems on heroku since the process title has changed I cannot catch signals like SIGTERM sent to it If I dont call workerstart I have no issue catching the signal I guess its because as long as the worker has not started the process title is not modified 