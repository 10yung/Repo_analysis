Closes Fieldsonly interfaces are commonly used as parameter object in JavaScriptTypeScript As an JSTS library user I want to instantiate such interface like scala foomethodnew ParameterObject var foo foo var isBar false But jsnative annotation does not allow this an optional parameter automatically adds undefined So lets convert optional parameters and properties to jsUndefOr T this pr fixes enum values can be expressions including unary operators binary operators string and number literals parenthesis identifiers See Note this implementation performs a flat parse that neither handles expressiontreebuilding nor operator precedences Note This commit removes the minus from the NumericLittoken and parses it explicitly in TSDefParsernumberLiteral Enum members can have optional values At the moment they are parsed by parsing a number or a string The specification however allows full expressions like enum Test Member I think its a good idea to test against the DefinitelyTyped code base This pr adds a spec that tries to import every project on DefinitelyTyped output goes into a temporary file It yields at the moment test cases this incorporates some of the currently open prs Im not really happy with how DefinitelyTyped has to be cloned manually into the root directory at the moment I tried to do it with sbt but in the end the manual way was easier and works just as good smile I made a small script that makes it even easier Reserverd words such as delete can be identifer for type query Closes Treat type guard as normal Boolean since Scala does not have a counterpart of Type Guard in TypeScript Closes Const enums can only use constant enum expressions and unlike regular enums they are completely removed during compilation Const enum members are inlined at use sites This is possible since const enums cannot have computed members Unlike normal enums const enums are inlined at use sites in TypeScript That is not related to Scalajs so this PR treat const enum as normal enums delPartially adresses del I believe this now closes Allow missing semicolon at the end of import like import A from module Allow trailing comma in import block like import A B C from module Allow commaseparated imports like import A B C from module TypeScript has foo notation to indicate optional can be nullundefined type optional field optional method parameter Currently scalajstsimporter converts foo T into foo T which can not accept jsundefined I think it should be converted to jsUndefOr T 