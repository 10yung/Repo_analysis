Status experimental for now AnimWavesAddFromTex generate displacements from heights Uses forward differences to compute derivates and displace proportionally Similar to how the disps are generated from the dynamic wave sim skaughtx r is this still of interest i think you mentioned youre using a different approach to get the displacements but thought id ask Describe the bug I found the same issue here but I noticed that its already implemented in the script However I still have this problem in my scene I usually set camerauseOcclusionCulling false but since the script that comes with Crest uses the attached camera instead of a dedicated camera it would disable occlusion culling altogether Screenshots video Log No warningserrors Versions Builtin f To Reproduce Like usual Bake the occlusion and apply the planar script to the camera Platform Windows Hardware GTX i k Getting an IndexOutOfRangeException in CrestQueryBaseUpdateQueryPoints I started to try and make a reproducible project with just the DWP demo scene and Crest and it just errors immediately the water never renders and all the water objects just fall It seems the issue is that there is a smaxQueryCount set to and if that gets exceeded exceptions start to get spammed Log The following errors are spammed repeatedly in the log IndexOutOfRangeException Index was outside the bounds of the array CrestQueryBaseUpdateQueryPoints SystemInt iownerHash CrestSamplingData isamplingData UnityEngineVector queryPoints UnityEngineVector queryNormals at AssetsCrestCrestScriptsCollisionQueryBasecs CrestQueryDisplacementsQuery SystemInt iownerHash CrestSamplingData isamplingData UnityEngineVector iqueryPoints SystemSingle oresultHeights UnityEngineVector oresultNorms UnityEngineVector oresultVels at AssetsCrestCrestScriptsCollisionQueryDisplacementscs DWP CrestWaterDataProviderGetWaterHeights UnityEngineVector p s UnityEngineVector p s UnityEngineVector p s SystemSingle waterHeights SystemSingle waterHeights SystemSingle waterHeights UnityEngineMatrix x localToWorldMatrices at AssetsDWP Dynamic Water Physics ScriptsWaterObjectWaterDataProviderCrestWaterDataProvidercs DWP WaterObjectManagerSchedule at AssetsDWP Dynamic Water Physics ScriptsWaterObjectWaterObjectManagercs DWP WaterObjectManagerFixedUpdate at AssetsDWP Dynamic Water Physics ScriptsWaterObjectWaterObjectManagercs ArgumentOutOfRangeException Specified argument was out of the range of valid values Parameter name Bad indicescount arguments managedBufferStartIndex computeBufferStartIndex count UnityEngineComputeBufferSetData SystemArray data SystemInt managedBufferStartIndex SystemInt computeBufferStartIndex SystemInt count at CbuildslaveunitybuildRuntimeExportComputeShaderbindingscs CrestQueryBaseExecuteQueries at AssetsCrestCrestScriptsCollisionQueryBasecs CrestQueryBaseUpdate at AssetsCrestCrestScriptsCollisionQueryBasecs Versions Crest master branch DWP Unity f To Reproduce This can be reproduced by adding the Crest Ocean to the DWP demo scene I have an example project but I probably cannot attach it here message me in discord and we can figure out a way to get it to you You can probably reproduce by querying more than points Platform Editor and Standalone Windows Hardware Nvidia RTX Ive made a room with complete darkness and thick walls but it seems like the reflection from outside is bleeding through Also the shadowing doesnt make the ocean completely dark Is this a bug or am I doing something wrong Annotation Hello Huw Ive noticed the ShapeGrestnerBatchedcs script is responsible for creating waves in OceanInputs OceanWavesBatched object We want to get small and frequent waves in our sea and we managed to get this look by exceeding the number of Components per Octave from to Ive got an error about exceeding buffer size and realized the look we got was actually a bug on my side and overall increasing this variable can compromise performance Also after increasing the buffer size on both the script and the shader keeping the Component per Octave at the expected look changed as well Which component should I change to get the desired result Thank you Describe the bug Here is everything with a LOD Data Resolution of img width altimage src Things go wrong for any value above that using here as it is the default but have checked and amongs other values have checked that values below do seem to work img width altimage src According to daleeidd in issue this only affects integrated GPUs and not discrete GPUs I cannot I can only confirm that I get the issue on my MacBook Air as well Log Nothing is in the log Versions Which render pipeline builtinLWRPHDRP Which version of LWRPHDRP Which version of unity including minor ie f Platform Editor and standalone MacOS Catalina Metal Hardware Confirmed Cases IntelR CoreTM i B CPU GHz GHz DualCore Intel Core i Intel UHD Graphics MB Additional context Very easy to reproduce but no error messages or other feedback that could indicate the possible cause of the error This will help address There is also vertex light support with Experimental support for pixel lights Pixel lights can be point spot or directional lights which are set to Important or in some cases Automatic Red Pixel Point Light Green Pixel Spot Light About This is a very rough PR It will need a lot of work Pass and Blending Adds another pass and uses BlendOp Max This prevents the more egregious artefacts Improving the extra pass is a better way to go Distilling the pass to only perform the necessary work for the light itself is the ideal Performance Only the tiles which are affected by the light will require additional passes Performance will depend on how many lights and their coverage Performance can be improved by removing unnecessary work Issues Plenty I havent properly worked through everything so some features are broken or misused Technical Debt In its current form technical debt is pretty high Directional Light Based on light direction rather than camera to light for spot lights This will help address There is also pixel light support with Experimental support for vertex lights Vertex lights are point lights which are set to Not Important or in some cases Automatic Night Night Time About Attenuation The attenuation formula was taken from here The UNITYLIGHTATTENUATION doesnt work for vertex lights The Shade PointLights as discussed in the thread didnt give good results Shader Parameters Ive added some shader parameters so others for flexibility for the time being Not sure if they will be merged They are mostly there to separate the parameters for the primary direction light Notes ShadeVertexLightsFull cannot be used since it is for Legacy Vertex Lit Issues Tiling Artefacts Tiling Tiling artefacts occur depending on the attenuation lights overlapping and camera orientation The frame debugger shows lighting values being filled It could be the attenuation calculation or a limitation in vertex lighting Further investigation required Underwater Underwater I have come across this issue when trying to integrate a weather asset with cloud shadows It is much worse at night Not including lights might be the best solution Or at least having it behind a toggle Missing Directional Light style reflections Hello is it possible to add a color map to have parts of the ocean with different colors For example having blue water that transitions to green near a swamp Tiling a texture vertex painting or a world aligned plane that projects a texture would be great Disabling domain reload breaks Crest currently 