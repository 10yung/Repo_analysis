 Why is this change necessary FPDI is deprecated and will no longer be updated It will throw some warnings like Function each is deprecated since PHP Use a foreach loop instead What does this change do exactly Update fpdi fpdf and mpdf Describe each step to reproduce the issue or behaviour Please link to the relevant issues if any Which documentation changes if any need to be made because of this PR Checklist I have written tests and verified that they fail without my change I have squashed any insignificant commits This change has comments for package types values functions and nonobvious lines of code x I have read the contribution requirements and fulfil them If a resource is available over SSL then always use the https URI Thank you for contributing to Shopware Please fill out this description template to help us to process your pull request Please make sure to fulfil our contribution guideline Why is this change necessary Loads page resources using protocol relative URIs Loading a resource using protocol relative URIs allow it to be requested over HTTP and opens the door for Manontheside attacks If a resource is available over SSL then always use the https URI What does this change do exactly change from http to https Describe each step to reproduce the issue or behaviour Please link to the relevant issues if any Which documentation changes if any need to be made because of this PR Checklist x I have written tests and verified that they fail without my change x I have squashed any insignificant commits This change has comments for package types values functions and nonobvious lines of code x I have read the contribution requirements and fulfil them Why is this change necessary If the invoiceShippingTaxRate is not in whitelist its not possible to create an order with the API and set the tax rate for shipping default is always What does this change do exactly add the invoiceShippingTaxRate to whitelist of the order api Describe each step to reproduce the issue or behaviour Please link to the relevant issues if any Which documentation changes if any need to be made because of this PR none Checklist I have written tests and verified that they fail without my change x I have squashed any insignificant commits This change has comments for package types values functions and nonobvious lines of code x I have read the contribution requirements and fulfil them Why is this change necessary You cant upload webp files Webp is a image format for web related images You want to be able to upload webp images What does this change do exactly Add webp as extension with the type IMAGE Describe each step to reproduce the issue or behaviour Open media manager Select webp file Click upload See error message that webp is not allowed Checklist I have written tests and verified that they fail without my change x I have squashed any insignificant commits x This change has comments for package types values functions and nonobvious lines of code x I have read the contribution requirements and fulfil them Why is this change necessary On first pull from git any access to shopware states to initialize shopware This can be done from the command line as well but a specific composer directory is not initialized The hint states to run composer install I did In the project root Someone has to say that it is not about running composer install in recoverycommon Now it does What does this change do exactly Add the working directory option to the composer install command hint Describe each step to reproduce the issue or behaviour Clone shopware Open webpage See unclear installation instruction Shopware must be configured before use Please run the installer Look up instruction in code See alternative CLI instructions Run CLI command recoveryinstallindexphp See composer install hint Run composer install Go to Which documentation changes if any need to be made because of this PR This is a documentation change Sort of Checklist I have written tests and verified that they fail without my change x I have squashed any insignificant commits This change has comments for package types values functions and nonobvious lines of code x I have read the contribution requirements and fulfil them Why is this change necessary Try passing an array to the Router assemble method Using the default generator matcher the array values will be lost What does this change do exactly Encode array values Describe each step to reproduce the issue or behaviour Run ShopwareContainergetrouterassemble foo test value The resulting url will be looking something like this The value of foo is lost Please link to the relevant issues if any Which documentation changes if any need to be made because of this PR Checklist x I have written tests and verified that they fail without my change x I have squashed any insignificant commits x This change has comments for package types values functions and nonobvious lines of code x I have read the contribution requirements and fulfil them Why is this change necessary See What does this change do exactly Describe each step to reproduce the issue or behaviour Please link to the relevant issues if any Which documentation changes if any need to be made because of this PR Checklist I have written tests and verified that they fail without my change I have squashed any insignificant commits This change has comments for package types values functions and nonobvious lines of code I have read the contribution requirements and fulfil them Thank you for contributing to Shopware Please fill out this description template to help us to process your pull request Please make sure to fulfil our contribution guideline Why is this change necessary Because there is currently no clean way to abort a registration process beside the form validation You can decorate the RegisterService but since this does not return anything you can not pass back any information to the register controller to initiate a custom handling I had the need to do this because I wanted to abort registrations after the form validation is run but before the customer is actually saved What does this change do exactly Add a new event to handle custom errors or messages in general during the registration process Describe each step to reproduce the issue or behaviour Try to abort a registration before a customer is saved to the database Example subscriber that could make use of the new event php class Test implements SubscriberInterface public static function getSubscribedEvents return ShopwareModulesAdminSaveRegisterBeforeRegister onBeforeRegister public function onBeforeRegister EnlightEventEventArgs args errors argsgetReturn customer argsgetcustomer billing argsgetbilling shipping argsgetshipping Do some custom validation stuff with the customer or the addresses eg sync them with another system and react to API errors of that system Merge to make sure you keep errors that may have been added by other plugins previously return arraymergeerrors occurred true personal reuse error structure from register controller which will be displayed in the frontend form firstname Something is wrong here mycustomerrors Add your own errors They will be passed to the view and you can handle them there Please link to the relevant issues if any Which documentation changes if any need to be made because of this PR Checklist I have written tests and verified that they fail without my change x I have squashed any insignificant commits This change has comments for package types values functions and nonobvious lines of code x I have read the contribution requirements and fulfil them Why is this change necessary When using a compilerawarecommand a command implementing the CompilerAwareInterface from the service container it has no valid reference to the service container So it is not properly initialized What does this change do exactly Readd the ConfigureContainerAwareCommands to the service container remove the redundant setContainer call in Shopware Components Console ApplicationdoRunCommand and add a test to check whether things stay that way Describe each step to reproduce the issue or behaviour Be up to use auto completion feature Type swpltabacttab tab Get Call to a member function get on null in PluginActivateCommandphp On null What is happening there Find getContainerget failing But why is it not initialized When is setContainer called Find Shopware Components Console ApplicationdoRunCommand and ConfigureContainerAwareCommands Wait didnt I implement the ConfigureContainerAwareCommands Check auto completion pull request Yes I did Did I forget adding it Check diff from pull request I did add it back then Is it still present NO grafik Checklist x I have written tests and verified that they fail without my change x I have squashed any insignificant commits This change has comments for package types values functions and nonobvious lines of code x I have read the contribution requirements and fulfil them Why is this change necessary In case of an update on a page the sliders can occasionally be updated This will slide them to the first item This also can reset the position although no change happened Either situation is appreciatable so it is now optionally disablable What does this change do exactly Add an option to deactivate that setPosition call The default is behaving like before so no real change in bahaviour unless configured differently Describe each step to reproduce the issue or behaviour Have a product slider at the top of the page Slide to the right Scroll down where an update is triggered to product sliders Scroll up and the slider is back to the start What product was I looking again Have Yarisade in your team debugging it down to the problematic area Checklist I have written tests and verified that they fail without my change x I have squashed any insignificant commits This change has comments for package types values functions and nonobvious lines of code x I have read the contribution requirements and fulfil them