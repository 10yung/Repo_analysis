During the execution of the program there are no errors but the inscription why the console says no code space found constantly appears What does it mean ubuntu Go Qt ERRO failed to run command funcRunCmd cmdbash c optgobingo build p v trimpath o xxx tagsminimal ldflagsall s w flag provided but not defined w w flag is lonely escapedFlags might need like this cmdArgs appendcmdArgs fmtSprintfldflagsvv pattern escapeFlagsldFlags ldFlagsCustom therecipe Looking at the Qt Documentation there should be a function QPlainTextEditsetExtraSelections and further the type QTextEditExtraSelection but I cant find those in the Go packages This should fix some instances of error warning that ANDROIDAPI macro is redefinied when system ANDROIDNDKPLATFORM was different than default value android Hello I am working on an application that uses OpenCV to grab frames from a Raspberry Pi camera and I would like to display those frames in a QT window If I understand things correctly I should be using an Image to display those frames I am using QML to define the UI for my application but I am a little confused on how to interact with the QML elements specifically how I could overwrite the image data of an Image element I am using the Gallery example from the QML folder as a jumping off point and I am just looking now to overwrite the Image logo in that example with my video frames Any pointers When I ran the qt example I encountered vendorgithubcomtherecipeqtcorecorego undefined NewQByteArrayFromPointer The relevant environment configuration is as follows INFO GOOS darwin INFO GOARCH amd INFO GOVERSION go INFO GOROOT usrlocalCellargo libexec INFO GOPATH Usersbarrygopath INFO GOBIN Usersbarrygopathbin INFO GOMOD Usersbarrygopathsrcgithubcompubgoexamplesgomod INFO QTHASH v b d INFO QTAPI INFO QTVERSION INFO QTDIR Usersbarrygopathsrcgithubcompubgoexamplesvendorgithubcomtherecipeenvdarwinamd INFO QTSTUB false INFO QTDEBUG false INFO QTQMAKEDIR INFO QTWEBKIT false INFO QTSTATIC false INFO QTGENTSD false INFO QTGENOPENGL false INFO QTGENQUICKEXTRAS false INFO QTRESOURCESBIG false INFO QTNOTCACHED false INFO QTHOMEBREW false INFO QTMACPORTS false INFO QTNIX false INFO QTFELGO false INFO XCODEDIR ApplicationsXcodeapp INFO QTPKGCONFIG false and my envdarwinamd is also configured I found this problem when I ran qtsetup qtdeploy test desktop githubcomtherecipeexamplesbasicwidgets the error following occured coreminimalcpp error coreminimalcpp error please run go env GOPATHbinqtsetup coreminimalcpp error more info here coreminimalcpp error coreminimalcpp fatal error QTextDocument file not found We have discussed graphs where the series are set in Go before however it seemed like the approach was going to be quite complex Qt offer this example which seems that the series are populated from C Any chance you or someone has ported this Im still interested in using the Graphing modules but have continously had issues populating the series for a graph from the Go side I was before attempting bar charts and pie charts but this would be a good start Windows Firefox Pressing Alt Shift KEY the standard way in Firefox when in the text editor tab inserts a capital letter in the editor widget basically ignoring the Alt key Expected result Open the menu In Edge access keys seem to work I suspect since Edge uses Alt KEY that this functionality was ported without considering different browser shortkeys Hard to describe title there If I have the slot funcrow int signalchangeFile Then when I want to wire that up to a function I can do cConnectChangeFilecchangeFile func c Controller changeFilerow int and thats great But strangely when I do something like funcindex coreQModelIndex signalpatchDiff Then I need to do aConnectPatchDifffuncindex coreQModelIndex controllerInstancePatchDiffindex to connect the Mocd function to the function I want to call The error is cannot use controllerInstancePatchDiff type funccoreQModelIndexITF as type funccoreQModelIndex in argument to aConnectPatchDiff Is the reason anything to do with a QModelIndex not being a standard Go type or something Its more a general knowledge question as the func approach works Second question With regard to the calendar example we have discussed here I want to be able to get the index and by index I mean the coreQModelIndex when an event is clicked in the left hand eventsListView At the moment we are populating it with an array from the EventsForDate function and when I look at other examples this is ok The reason I want to get the QModelIndex that relates back to the database entry is I have two views for my database entries the calendar view so you can select by date and A TableView where you can see all of them just in order From both views I want to be able to deleteedit the events From the TableView I can successfully get the QModelIndex and then in Go extract the database ID and act accordingly I want to have the events for a calendar date appear on the left we already have this working and then be able to click on one and get the same QModelIndex so that I can use the same functions in Go to delete the event there I think the confusion I have is because the events come from the calendar and then populate the ListView the QModelIndex is changing from the underlying model In any event I have tried variations of stuff to get the QModelIndex consolelogrow detailEventModelcurrentRow consolelogpatch detailEventModeldatadetailEventModelindexdetailEventModelcurrentRow QtUserRole detailEventModelindexdetailEventModelcurrentRow QtUserRole detailEventModelmodelindextableViewcurrentRow patchFileShowRequestdetailEventModelindexdetailEventModelcurrentRow but when I try to convert it to the underlying ID with something such as if patchID indexDataintcoreQtUserRole ToInt ok ok I get ok false I think the func e eventModel dataindex coreQModelIndex role int coreQVariant is where this conversion between QModelIndex and Go data type is defined however we dont particularly have a data function defined that well so I am not sure whether indexDataintcoreQtUserRole can be currently converted to the ID Note using the above approaches to retrieve the QModelIndex in QML I receive console logs a bit like QModelIndex x eventModelb ca x c however when the QModelIndex is correct ie from my TableView I get indexes looking more like QModelIndex x e eventModelb ca x c ie the third entry is not x which is currently the clue that Im doing something wrong EDIT Perhaps to make it clearer My plan is that the left list view gives more details about the underlying event than the calendar can display When a user clicks one I want to be able to editdelete it from the database To do so I believe that I should be getting the QModelIndex from qml when its clicked and sending that to Go to then act on The issue is getting the QModelIndex is not as trivial as I expected I have hacked around by passing the database index to the calendar and that populating the listview from QML but that really is a hack What I want to do is connect the listview to the same model as the calendar This works I still however am struggling to get the correct index Where it gets more complicated is as its a detail view of events and I have multiple ways to view events one is on a calendar another is just as a list in a tableView When an event is clicked in the tableView which is a viewsort model I also want that to display it in the listview on the left This means that the listview can be populated from two different models I guess the way is to create a specific model for this listView that somehow can items can be added to from either the calendar event model or the treeViewmodel In whatever case i somehow need the QModelIndex from the listview so that I can access the entry in the database EDIT After further work I have some more specific examples of the model I am trying to put together This is the model that I am putting together that will populate the listView once a calendar date is selected var DetailModel detailModel type DiffDetail struct coreQObject int propertyid string propertyname string propertydescription string propertystartTime string propertyscreenshot coreQDateTime propertystartDate coreQDateTime propertyendDate type detailModel struct coreQAbstractListModel manager logicManager details DiffDetail funcdiffs DiffDetail reset bool signalupdate func m detailModel InitWithmanager logicManager DetailModel m DetailModelmanager manager DetailModelConnectRowCountDetailModelrowCount DetailModelConnectDataDetailModeldata DetailModelConnectUpdateDetailModelupdate func m detailModel rowCountparent coreQModelIndex int return lenmdetails so the controller needs to read the events from the calendar and pass them to the update method here the model func m detailModel dataindex coreQModelIndex role int coreQVariant if role intcoreQtDisplayRole fmtPrintlnrole is not equal to displayRole role return coreNewQVariant fmtPrintlndetailModel indexRow indexRow role role fmtPrintfdetail from index returned v v r n mdetailFromIndexindex fmtPrintfdescription for index d is s r n indexRow mdetailFromIndexindexDescription return coreNewQVariant mdetailFromIndexindexDescription needed only for qml func m detailModel roleNames map int coreQByteArray return map int coreQByteArray intcoreQtUserRole coreNewQByteArray ID intcoreQtUserRole coreNewQByteArray Name intcoreQtUserRole coreNewQByteArray Description intcoreQtUserRole coreNewQByteArray StartTime intcoreQtUserRole coreNewQByteArray Screenshot intcoreQtUserRole coreNewQByteArray StartDate intcoreQtUserRole coreNewQByteArray EndDate func m detailModel detailFromIndexindex coreQModelIndex DiffDetail for v range mdetails fmtPrintfvId v index d r n vId indexRow if vId indexRow does it need to be fmtPrintlnfound it v return v return DiffDetail func m detailModel updatediffs DiffDetail reset bool mBeginResetModel if reset mdetails diffs else mdetails appendmdetails diffs mEndResetModel Based on the calendar example mentioned before I have renamed CalendarEvent to DiffDetail for a it is more relevant to my project and b more importantly it is no longer only used by the calendar but a tableView aswell that when a row is clicked can also append to this detailModel The controller for the listView starts like func init detailControllerQmlRegisterType Detail DetailController type detailController struct quickQQuickItem func constructorinit coreQAbstractItemModel propertydetailModel and then the ListView looks like ListView id eventsListView model detailModel header eventListHeader delegate Rectangle Text text consolelogindex index model eventsListViewmodeldataeventsListViewmodelindexindex QtDisplayRole consolelogpatch detailViewmodeldatadetailViewmodelindexdetailViewcurrentRow QtUserRole detailViewmodelindexdetailViewcurrentRow QtUserRole return display Now from the main controller when the calendarDate is clicked I can push to the detailModel with cDetailUpdateevents true I think perhaps the reason I am not able to get an index that allows me to reference the correct backend database object from clicking an item in the listView is that I am confused about the dataindex role function of Qt What I think confused me is the job and use of roles and from the front end how and when I can use modelData and styleData because I seem not to have a styleData available to me so I think I am supposed to use roles Does what I am saying here at all make any sense as to what my problem is