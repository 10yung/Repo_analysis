I am attempting to shift my automation at work from Selenium to Splinter As part of this I have chosen to utilize the pytestselenium plugin for better QOL Unfortunately it appears that Splinter is raising an UnboundLocalError when run from a Docker container not when running from command line This error is raised at line in browserpy within the Splinter library Any thoughts on what could be happening here splinterwebdriver chrome retrycount def getbrowsersplinterwebdriver retrycount kwargs getargsdriversplinterwebdriver downloaddirsplinterfiledownloaddir downloadftypessplinterdownloadfiletypes firefoxprefsplinterfirefoxprofilepreferences firefoxprofdirsplinterfirefoxprofiledirectory remoteurlsplinterremoteurl executablesplinterwebdriverexecutable headlesssplinterheadless driverkwargssplinterdriverkwargs try return splinterbrowserclass splinterwebdriver visitconditionsplinterbrowserloadcondition visitconditiontimeoutsplinterbrowserloadtimeout waittimesplinterwaittime kwargs usrlocallibpython sitepackagespytestsplinterpluginpy args chrome kwargs headless True waittime visitcondition function splinterbrowserloadconditionlocalslambda at x ff aaaf visitconditiontimeout def Browserargs kwargs Emulate splinters Browser visitcondition kwargspopvisitcondition visitconditiontimeout kwargspopvisitconditiontimeout browser splinterBrowserargs kwargs usrlocallibpython sitepackagespytestsplinterpluginpy drivername chrome retrycount args kwargs headless True waittime driver class splinterdriverwebdriverchromeWebDriver def Browserdrivernamefirefox retrycount args kwargs Returns a driver instance for the given name When working with firefox its possible to provide a profile name and a list of extensions If you dont provide any drivername then firefox will be used If there is no driver registered with the provided drivername this function will raise a classsplinterexceptionsDriverNotFoundError exception try driver DRIVERS drivername except KeyError raise DriverNotFoundErrorNo driver for s drivername return getdriverdriver args kwargs usrlocallibpython sitepackagessplinterbrowserpy driver class splinterdriverwebdriverchromeWebDriver retrycount args kwargs headless True waittime def getdriverdriver retrycount args kwargs Try to instantiate the driver Common selenium errors are caught and a retry attempt occurs This can mitigate issues running on Remote WebDriver for in rangeretrycount try return driverargs kwargs except IOError HTTPException WebDriverException MaxRetryError as e pass raise e E UnboundLocalError local variable e referenced before assignment usrlocallibpython sitepackagessplinterbrowserpy UnboundLocalError Dockerfile I am using FROM python slimbuster Set working directory WORKDIR pythontestsautomation Install thirdparty dependencies RUN pip install pipenv COPY Pipfile COPY Pipfilelock RUN pipenv install system deploy ignorepipfile Copy automation data and configuration COPY Clear pyc files for conftestpy import RUN find name pyc delete Install Google Chrome RUN aptget update aptget install y wget dpkg wget dpkg i googlechromestablecurrentamd deb aptget fy install RUN webdriverdownloader chrome RUN pytest m splinter It looks like Browser is taking retrycount as an argument which is never used Fixed by adding it to getdriver Add CookieManagerdeleteall method Standardize the init phase for CookieManager subclasses Remove ability to send a list to CookieManageradd This was undocumented and having an argument that takes multiple types seems like a bad idea Rewrite CookieManageradd to accept arguments for cookie parameters instead of a dict with a keyvalue for name and value parameters The change to CookieManageradd is incompatible with the current function signature unfortunately Note that flask does not use the samesite parameter and zope does not use httponly and samesite parameters Fixes and probably but it needs to be tested When using screenshot function under splinterdriverwebdriverWebDriverElement I get the following error def screenshotself name suffixpng fullFalse name name or fd filename tempfilemkstempprefixname suffixsuffix dont hold the file osclosefd if full selfparentfullscreen target selfscreenshotaspng selfparentrecoverscreen E AttributeError WebDriverElement object has no attribute recoverscreen I believe its because of the refactored function find in Webdriverinitpy When WebDriverElement calls the find function it instantiates the object using self on line def findself finder selector if elements elemlist selfelementclasselement self for element in elements return elemlist and self type WebDriverElement is passed to become the parent of that element And thats when the error occurs because the screenshot function expects selfparent to be of type WebDriver that has recoverscreen function This was working before because parent was always type WebDriver This can be seen in findby methods in WebDriverElement For example looking at older code ver you can see that WebDriverElementfindbyxpath passes the parent instead of self to instantiate def findbyxpathself selector originalfindNone originalqueryNone elements ElementListselfelementfindelementsbyxpathselector return ElementList selfclasselement selfparent for element in elements findbyxpath queryselector Quick solution is to pass the parent instead of self in find function when self is of type WebDriverElement but I do not know the code enough and may cause more issues Another possible solution is to implement the the missing functions that was expected for WebDriver such as recoverscreen fullscreen for WebDriverElement class Let me know if any of the solution above is good and Ill create a pull request for it Hello I am using Django with LiveServerTestCase I was trying to load my chrome driver with a cookie that preloads a user session cookie for example cookie path value gl p wlrtgkw dfer vi jievkks f name sessionid however the cookie doesnt load properly and the user is not logged in when i run browsercookiesaddcookie browserreload When I inspected the code at splinterdriverwebdrivercookiemanagerpy I found that the way cookies are added is by for key value in cookiesitems selfdriveraddcookiename key value value resulting name path value name value value gl p wlrtgkw dfer vi jievkks f name name value sessionid which didnt really work I have revised the add function such that a cookie dict is added as a whole using Selenium addcookie function This is the new function def addself cookies if isinstancecookies list for cookie in cookies selfdriveraddcookiecookie return selfdriveraddcookiecookies Hope this helps When I want to visit url by splinter browservisiturl spanish characters like etc usually change into window encoding thus the url couldnt be visited For example I visit the url browser changed it to and linkedin response Page not found but if I manually replace the E into it exist Maybe its not the problem of splinter but Chrome but how do I fix this problem as it really bothered me for days and couldnt be solved thanks all Looks awesome logs the https requests fails probably Splinter error selElselectoptvalue FAILS will set the st select in fieldset regardless we have in selEl only the nd one ie in code bellow we cannot select impact Regardless only impact is selected select changes always criticity this replacement directly with webdriver works well from seleniumwebdriversupportui import Select select SelectselfbrdriverfindelementbynameselElfirst name selectselectbyvalueoptvalue or selectbyvisibletextBanana class VyjimkyAdminadminModelAdmin form VyjimkyForm fieldsets Vyjimky fields vyjimkaid name reason criticity impact scope When I run the given Google example on Linux i get the following python Traceback most recent call last File usrlocallibpython distpackagessplinterelementlistpy line in getitem return selfcontainer index IndexError list index out of range During handling of the above exception another exception occurred Traceback most recent call last File usrlocallibpython distpackagessplinterelementlistpy line in getattr return getattrselffirst name File usrlocallibpython distpackagessplinterelementlistpy line in first return self File usrlocallibpython distpackagessplinterelementlistpy line in getitem selffindby selfquery splinterexceptionsElementDoesNotExist no elements could be found with name btnG During handling of the above exception another exception occurred Traceback most recent call last File usrlocallibpython distpackagessplinterelementlistpy line in getattr return getattrselfcontainer name AttributeError list object has no attribute click During handling of the above exception another exception occurred Traceback most recent call last File splintertestpy line in module browserfindbynamebtnGclick File usrlocallibpython distpackagessplinterelementlistpy line in getattr selfclassname name AttributeError ElementList object has no attribute click I did an inspect on the google website and it seems the button is called btnK so I changed it to that but now get this seleniumcommonexceptionsElementNotInteractableException Message Element input classgNO b namebtnK typesubmit could not be scrolled into view 