There is a small typo in qrcodemainpy Should read multidimensional rather than multidimensonal Error while running a basic program such as that given in the module documentation Hello This is a image factory for NumPy array for NumPy and OpenCV users python from PyQt QtGui import QImage import qrcode from qrcodeimagenumpy import NpImage image qrcodemakeselfcompressedscript imagefactoryNpImage pixmap QPixmapfromImageimagegetqimageQImage At the moment the code assumes that color values will be strings This limits the range of colors that can be used Trying to pass an RGB tuple raises an exception on the string methods used By performing the string methods earlier and catching and ignoring the exceptions other data structures can quietly pass through to Imagenew to be accepted if supported or to raise an exception Ideally PilImage should be color type agnostic and convert all values to some common color type to make the code as flexible as possible Hey Ive been using your awesome library for a project of mine But since I need the code as PDF I first built a solution using reportlab to convert the SVG to PDF But then I thought it would be a good excuse to learn some more about creating PDFs So I did so I made a very simple PDFImageModule thats only able to output QRCodes but that was all I needed If you like it you can mainline it I think PDF is a very useful format to have I use it to include QRCodes in TeX documents and since I perfer vectordata over pixeldata in my printproducts this might be something other people might benefit from too I created a table for products and its have an ImageField like this productQrImage modelsImageFielduploadtomedia blankTrue nullTrue and that is my code for generate a qrcode and it takes product name as you can see down its save png file to media its ok but I need to save it to database and than retrieve to product list page I search for this about two days I havent find any solution qr qrcodeQRCode version errorcorrectionqrcodeconstantsERRORCORRECTL boxsize border qrName requestPOSTgetproductName s qrName qradddatas qrmakefitTrue qrPath mystaticmedia qrName png img qrmakeimagefillcolorblack backcolorwhite imgsavemystaticmedia qrName png I added functionality for qrcodes to be made out of diamonds Similar to how you can choose different shapes on wwwqrcodemonkeycom qr Try it out yourself by passing the shapediamond in the qrcodemake function If no shape argument is passed it will default to square Code below results in DataOverFlow error bruno python qrpy Traceback most recent call last File qrpy line in module qrmakefitTrue File usrlocallibpython sitepackagesqrcodemainpy line in make selfbestfitstartselfversion File usrlocallibpython sitepackagesqrcodemainpy line in bestfit raise exceptionsDataOverflowError qrcodeexceptionsDataOverflowError If reducing the number of generated qrcodes it works fine pip install Pillow pip install qrcode pip install lxml Import QR Code library import qrcode import qrcodeimagesvg Create qr code instance qr qrcodeQRCode version errorcorrection qrcodeconstantsERRORCORRECTM boxsize border factory qrcodeimagesvgSvgPathImage allqr for numero in allqr The data that you want to store data Add data qradddatadata qrmakefitTrue Create an image from the QR Code instance img qrcodemakedata imagefactory factory Save it somewhere change the extension as needed imgsaveqrcodenumerosvg If you freeze your pip file or even worse you run it in a container that depends on your requirementstxt the e flag helps you to get e gitgithubcomojiipymaginggit a fce e d e c fbe f eggpymaging e gitgithubcomojiipymagingpnggit d c e b e c e a f bb feggpymagingpng instead of the normal looking but failing pymaging pymagingpng which will fail terribly see 