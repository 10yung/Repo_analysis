 Right now just layers on bits can pe parsed this commit contains the fix and psd on bits can be parsed Im having a problem with the parseZip function in file channelimagecoffee It seems that this function is not yet coded Some PSD file has zipped images inside and psdjs failed to transform them Do you know how I can do when calling toPng on a Group item which has many Layers inside it throw an Error pngjs Uncaught DOMException Failed to execute getImageData on CanvasRenderingContext D The source width is at LazyExecutetoBase at LazyExecutetoPng at GrouptoPng at anonymous Is it possible to export Group item to png var PSD requirepsd var psd PSDfromFileironManpsd psdparse var entry psdtreeexport var node psdtreedescendants forvar i inodelength i item node i consolelogitemtext I am not getting text information from text layer Bumps lodash from to details summaryRelease notessummary Sourced from lodashs releases lodash v was big year Lodash became the most depended on npm package passed billion downloads its v release saw massive adoption The year was also one of collaboration as discussions began on merging Lodash Underscore Much of Lodash v is proofing out the ideas from those discussions Lodash v would not be possible without the collaboration contributions of the Underscore core team In the spirit of merging our teams have blended with several members contributing to both libraries For lodash v we wanted to cut loose push forward take things up a notch Modern only With v we re breaking free from old projects old environments dropping old IE support kB Core Lodash s kitchensink size will continue to grow as new methods functionality are added However we now offer a kB gzipped core build that s compatible with Backbone v for folks who want Lodash without lugging around the kitchen sink More ES We ve continued to embrace ES with methods like isSymbol added support for cloning comparing array buffers maps sets symbols converting iterators to arrays iterable In addition we ve published an esbuild pulled babelpluginlodash into core to make treeshaking a breeze More Modular Pop quiz What category path does the bindAll method belong to Is it A requirelodashfunctionbindAll B requirelodashutilitybindAll C requirelodashutilbindAll Don t know Well with v it doesn t matter because now module paths are as simple as js var bindAll requirelodashbindAll We ve also reduced module complexity making it easier to create smaller bundles This has helped Lodash adoption with libraries like Async Redux st Class FP With v we introduced lodashfp We learned a lot with v we decided to pull it into core Now you can get immutable autocurried iterateefirst datalast methods as simply as js var requirelodashfp var object a trtable truncated details details summaryCommitssummary ddfd b Bump to v b fce Rebuild lodash and docs be d Bump to v a fe b Rebuild lodash and docs e Bump to v e Rebuild lodash and docs fd a Bump to v e d Rebuild lodash and docs d Update OpenJS references eac Fix minified build Additional commits viewable in compare view details br Dependabot compatibility score Dependabot will resolve any conflicts with this PR as long as you dont alter it yourself You can also trigger a rebase manually by commenting dependabot rebase dependabotautomergestart dependabotautomergeend details summaryDependabot commands and optionssummary br You can trigger Dependabot actions by commenting on this PR dependabot rebase will rebase this PR dependabot recreate will recreate this PR overwriting any edits that have been made to it dependabot merge will merge this PR after your CI passes on it dependabot squash and merge will squash and merge this PR after your CI passes on it dependabot cancel merge will cancel a previously requested merge and block automerging dependabot reopen will reopen this PR if it is closed dependabot ignore this patchminormajor version will close this PR and stop Dependabot creating any more for this minormajor version unless you reopen the PR or upgrade to it yourself dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency unless you reopen the PR or upgrade to it yourself dependabot use these labels will set the current labels as the default for future PRs for this repo and language dependabot use these reviewers will set the current reviewers as the default for future PRs for this repo and language dependabot use these assignees will set the current assignees as the default for future PRs for this repo and language dependabot use this milestone will set the current milestone as the default for future PRs for this repo and language You can disable automated security fix PRs for this repo from the Security Alerts page details Hi thanks for the tool I have a several psd files which contains a text with font size that is different from Photoshop For example In enginedict font size is In Photoshop font size is pt If we assume that is pixels and translate into points pt Document DPI Then it turns out what Photoshop shows Can PSD file contains a PX for font size and how we can determine it Or any other property may affect on the font size and we should recalculate it Thanks ScreenShot at thisfilepos of reading layerInfoSize is wrong when the psd image mode is in bitchannel I found pos is offseted by the length of image resource section correctly but somehow there are still bytes of zero and BIMLr before layerInfoSize According to Adobes document makes no sense With extra offsets of layerInfoSize is read correctly It works to me js layerInfoSize Utilpad thisfilereadInt if layerInfoSize thisheaderdepth thisfiledataslicethisfilepos thisfilepos compareBufferfrom BIMLr thisfilepos layerInfoSize Utilpad thisfilereadInt if layerInfoSize bitpsdsavedfrompscc psdzip 