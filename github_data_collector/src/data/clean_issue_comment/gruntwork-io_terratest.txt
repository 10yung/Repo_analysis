I tend to use this a lot in my infrastructure tests Hi there I have just started to use terratest and I would like to know which will be a best practices for example testing a RDS Database which creation is really hard When an AWS resource takes longer than minutes aprox which can we do Terratest doesnt currently seem to detect or report warnings in Terraform runs It would be useful to detect warning messages and optionally fail tests if warnings are present I noticed that running the test against examplesterraformawsexample failed as it was missing tags after the Just wondering if the tests should be working against terraform v Im using terraform v when I execute the following tests go test v run TestTerraformAwsRdsExample I see the following errors panic test timed out after m s goroutine running testingMstartAlarmfunc usrlocalCellargo libexecsrctestingtestinggo xdf created by timegoFunc usrlocalCellargo libexecsrctimesleepgo x goroutine chan receive minutes testingtRunnerfunc xc e usrlocalCellargo libexecsrctestingtestinggo x testingtRunner xc e xc ddc usrlocalCellargo libexecsrctestingtestinggo xd testingrunTests xc x ea x f x f x usrlocalCellargo libexecsrctestingtestinggo x a testingMRun xc x usrlocalCellargo libexecsrctestingtestinggo x mainmain testmaingo x goroutine select goopencensusiostatsviewworkerstart xc ded Usersgauravggopkgmodgoopencensusiov statsviewworkergo x created by goopencensusiostatsviewinit Usersgauravggopkgmodgoopencensusiov statsviewworkergo x goroutine chan receive githubcomgolangglogloggingTflushDaemon x fdc Usersgauravggopkgmodgithubcomgolangglogv def e c bgloggo x b created by githubcomgolanggloginit Usersgauravggopkgmodgithubcomgolangglogv def e c bgloggo x f goroutine semacquire minutes syncruntimeSemacquire xc usrlocalCellargo libexecsrcruntimesemago x syncWaitGroupWait xc usrlocalCellargo libexecsrcsyncwaitgroupgo x githubcomgruntworkioterratestmodulesshellreadStdoutAndStderr xc ea x xc d x xc e xc dfc xc dfc x x xc f Usersgauravggosrcgithubcomgruntworkioterratestmodulesshellcommandgo x d githubcomgruntworkioterratestmodulesshellrunCommandAndStoreOutputE xc ea x e d x xc bcd x a x a x eae x xc be x Usersgauravggosrcgithubcomgruntworkioterratestmodulesshellcommandgo x githubcomgruntworkioterratestmodulesshellRunCommandAndGetOutputE xc ea x e d x xc bcd x a x a x eae x xc be x Usersgauravggosrcgithubcomgruntworkioterratestmodulesshellcommandgo xb githubcomgruntworkioterratestmodulesterraformRunTerraformCommandEfunc xc x e c x c xc Usersgauravggosrcgithubcomgruntworkioterratestmodulesterraformcmdgo xad githubcomgruntworkioterratestmodulesretryDoWithRetryableErrorsEfunc xc ea x x ecd xc Usersgauravggosrcgithubcomgruntworkioterratestmodulesretryretrygo x b githubcomgruntworkioterratestmodulesretryDoWithRetryE xc ea xc a x x x xc af x a x x bbc xc df Usersgauravggosrcgithubcomgruntworkioterratestmodulesretryretrygo x ff githubcomgruntworkioterratestmodulesretryDoWithRetryableErrorsE xc ea xc a x x x x xc ac x a x e x a Usersgauravggosrcgithubcomgruntworkioterratestmodulesretryretrygo x a githubcomgruntworkioterratestmodulesterraformRunTerraformCommandE xc ea xc ec xc bcd x a x a x a x a xc bf x Usersgauravggosrcgithubcomgruntworkioterratestmodulesterraformcmdgo x ea githubcomgruntworkioterratestmodulesterraformDestroyE xc ea xc ec x x f d a x e xc c Usersgauravggosrcgithubcomgruntworkioterratestmodulesterraformdestroygo xc githubcomgruntworkioterratestmodulesterraformDestroy xc ea xc ec x bd xf Usersgauravggosrcgithubcomgruntworkioterratestmodulesterraformdestroygo x runtimeGoexit usrlocalCellargo libexecsrcruntimepanicgo xec testingcommonFailNow xc ea usrlocalCellargo libexecsrctestingtestinggo x testingcommonFatal xc ea xc d x x usrlocalCellargo libexecsrctestingtestinggo x githubcomgruntworkioterratestmodulesawsGetWhetherSchemaExistsInRdsMySqlInstance xc ea xc c x xcea x e bb x x e b c x x e d x Usersgauravggosrcgithubcomgruntworkioterratestmodulesawsrdsgo x githubcomgruntworkioterratesttestTestTerraformAwsRdsExample xc ea Usersgauravggosrcgithubcomgruntworkioterratesttestterraformawsrdsexampletestgo x testingtRunner xc ea x f ba usrlocalCellargo libexecsrctestingtestinggo xc created by testingTRun usrlocalCellargo libexecsrctestingtestinggo x goroutine chan receive minutes testingrunTestsfunc xc e usrlocalCellargo libexecsrctestingtestinggo x b created by testingrunTestsfunc usrlocalCellargo libexecsrctestingtestinggo xac goroutine IO wait internalpollruntimepollWait x d e x xffffffffffffffff usrlocalCellargo libexecsrcruntimenetpollgo x internalpollpollDescwait xc x xb xb e xffffffffffffffff usrlocalCellargo libexecsrcinternalpollfdpollruntimego x internalpollpollDescwaitRead usrlocalCellargo libexecsrcinternalpollfdpollruntimego internalpollFDRead xc xc e xb e xb e x x x usrlocalCellargo libexecsrcinternalpollfdunixgo x b osFileread usrlocalCellargo libexecsrcosfileunixgo osFileRead xc d xc e xb e xb e xc eea xc e x f usrlocalCellargo libexecsrcosfilego x bufioScannerScan xc c xc usrlocalCellargo libexecsrcbufioscango xa githubcomgruntworkioterratestmodulesshellreadData xc ea xc c xc xc xc dfc Usersgauravggosrcgithubcomgruntworkioterratestmodulesshellcommandgo xd created by githubcomgruntworkioterratestmodulesshellreadStdoutAndStderr Usersgauravggosrcgithubcomgruntworkioterratestmodulesshellcommandgo x df goroutine IO wait minutes internalpollruntimepollWait x d cc x xffffffffffffffff usrlocalCellargo libexecsrcruntimenetpollgo x internalpollpollDescwait xc x x x xffffffffffffffff usrlocalCellargo libexecsrcinternalpollfdpollruntimego x internalpollpollDescwaitRead usrlocalCellargo libexecsrcinternalpollfdpollruntimego internalpollFDRead xc xc x x x x x usrlocalCellargo libexecsrcinternalpollfdunixgo x b osFileread usrlocalCellargo libexecsrcosfileunixgo osFileRead xc e xc x x x x x usrlocalCellargo libexecsrcosfilego x bufioScannerScan xc d x usrlocalCellargo libexecsrcbufioscango xa githubcomgruntworkioterratestmodulesshellreadData xc ea xc d xc xc xc dfc Usersgauravggosrcgithubcomgruntworkioterratestmodulesshellcommandgo xd created by githubcomgruntworkioterratestmodulesshellreadStdoutAndStderr Usersgauravggosrcgithubcomgruntworkioterratestmodulesshellcommandgo x f exit status FAIL githubcomgruntworkioterratesttest s s user s system cpu s total Just wondering if the tests modules and examples under terratest are being kept up to date Hello I was thinking to add a new aws module for interacting with the AWS secretsmanager It would be something similar to the SSM module We have some terraform workspaces that rely on some secrets that are already created So we would use this module for creating them before running our tests Thanks I could not find any example code using AWS Lambda in the repo Is there any reason why AWS Lambda and terratest would not work well together Ive done some initial work in a fork here to see how it might work Do not want to contribute bloat to the repo but AWS Lambda is a popular AWS service Im pretty new at using Terratest I can hard code the awsRegion useast and all works but when using the random region which I want to use I get the resources created and destroyed consistently without error but then the assertions run and error out It seems like the AWSDEFAULTREGION isnt being used Im using an AWS ECS Fargate container with an Admin IAM policy attached to its ECSTaskExecution role to run these tests Has anyone seen this before Not sure if I need to pass in awsRegion specifically to the terratest calls like we do to the aws SDK calls TestTerraformAwsEcs Example T Z commandgo awsecsclusterexample Destroying idarnawsecsuseast xxxxclusterterratestawsecsexamplecluster BCIRm TestTerraformAwsEcs Example T Z commandgo awsecstaskdefinitionexample Destroying idterratest TestTerraformAwsEcs Example T Z commandgo awsecstaskdefinitionexample Destruction complete after s TestTerraformAwsEcs Example T Z commandgo awsiamroleexecution Destroying idterratestawsecsexamplecluster BCIRmecsexecution TestTerraformAwsEcs Example T Z commandgo awsecsclusterexample Destruction complete after s TestTerraformAwsEcs Example T Z commandgo awsiamroleexecution Destruction complete after s TestTerraformAwsEcs Example T Z commandgo TestTerraformAwsEcs Example T Z commandgo Destroy complete Resources destroyed FAIL TestTerraformAwsEcs Example s ecsgo Error Trace ecsgo terraformawsecs testgo Error Received unexpected error Expected to find ECS cluster named terratestawsecsexamplecluster BCIRm in region euwest but found Test TestTerraformAwsEcs Example FAIL FAIL test s FAIL Here is my whole script just using one of the Terratest simple examples for testing with a simple ECS Fargate cluster setup package test import fmt testing githubcomgruntworkioterratestmodulesaws githubcomgruntworkioterratestmodulesrandom githubcomgruntworkioterratestmodulesterraform awsSDK githubcomawsawssdkgoaws githubcomstretchrtestifyassert An example of how to test the Terraform module in examplesterraformawsecsexample using Terratest func TestTerraformAwsEcs Examplet testingT tParallel expectedClusterName fmtSprintfterratestawsecsexampleclusters randomUniqueId expectedServiceName fmtSprintfterratestawsecsexampleservices randomUniqueId Pick a random AWS region to test in This helps ensure your code works in all regions awsRegion awsGetRandomStableRegiont stringuseast euwest nil awsRegion useast terraformOptions terraformOptions The path to where our Terraform code is located TerraformDir examplesecs Variables to pass to our Terraform code using var options Vars map string interface clustername expectedClusterName servicename expectedServiceName Environment variables to set when running Terraform EnvVars map string string AWSDEFAULTREGION awsRegion At the end of the test run terraform destroy to clean up any resources that were created defer terraformDestroyt terraformOptions This will run terraform init and terraform apply and fail the test if there are any errors terraformInitAndApplyt terraformOptions Run terraform output to get the value of an output variable taskDefinition terraformOutputt terraformOptions taskdefinition Look up the ECS cluster by name cluster awsGetEcsClustert awsRegion expectedClusterName assertEqualt int awsSDKInt ValueclusterActiveServicesCount Look up the ECS service by name service awsGetEcsServicet awsRegion expectedClusterName expectedServiceName assertEqualt int awsSDKInt ValueserviceDesiredCount assertEqualt FARGATE awsSDKStringValueserviceLaunchType Look up the ECS task definition by ARN task awsGetEcsTaskDefinitiont awsRegion taskDefinition assertEqualt awsSDKStringValuetaskCpu assertEqualt awsSDKStringValuetaskMemory assertEqualt awsvpc awsSDKStringValuetaskNetworkMode terraform output only supports outputs from the root module unless otherwise specified with a module argument Similarly in terratest terraformOutput works fine for single modules but not nested child modules It doesnt look like the terratest code for outputs allows passing in optional arguments like the CLI terrafom output does Lets say I have a repo called base which calls a submodule called test I need to get an autoscaling group name from test when running terratest from base The test module has an output defined output asgname value awsautoscalinggrouptestname The base module has this which doesnt work because I have no way of telling Outputs to give me outputs for the test module instead of base asgName terraformOutputt terraformOptions asgname Am I missing something or will this require a new feature request Hello Do you consider for helm support If yes any ETA on this