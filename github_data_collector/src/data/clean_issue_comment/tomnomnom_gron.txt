Hi tomnomnom thanks for the great tool It was a great help to me on multiple occasions I just wanted to let you know that Ive started the process of packaging gron for Fedora It is already accepted for the next release and Im hoping to get it in the current release in the next days Once its in users will be able to just dnf install gron Let me know if you have any questions If not feel free to simply close this issue Thanks again for creating gron Hello I have a minor feature suggestion Id like to have a vvar option that sets the name of the root output variable echo gron v a a a a My use case is replacing a nested leaf with content from another json file so in this case Id have a complicated var like json key and replace the input line with multiple output lines I can imagine just putting a compact single line chunk of json as a value but that isnt permitted either currently There may also be other ways to tackle this problem Heres a more complicated example head inputjson ajson bjson inputjson key a key key b key ajson id a value bjson id b value Heres a pipeline that greps the key lines and replaces them with the content from another file gron inputjson perl ple if key gron json sed s json chomp gron u jq c key idavalue key key idbvalue key With this suggestion it the sed could be dropped gron inputjson perl ple if key gron v json chomp gron u Thank you Implicitly depends on Feel free to comment on that one if you want me to make changes to it or this one whichever This is mostly to allow another upcoming PR to allow least fuzzing gron I would also modify the API a bunch but am not sure if thats helpful to anyone at least yet I would suggest a struct based api rather than flag based if at some point this package becomes public but while its internal its a moot point I recently got a multigigabyte JSONL file and before committing to a downstream pipeline that would run for many minutes before producing output I ran console head entriesjsonl gron and discovered that gron only interpreted the first line So I ran console head entriesjsonl jq s entriesjson and used this temporary file as my test data It was only after this that I noticed the s option which I had probably read in help when I first tried gron but had since forgotten This works equally as well console head entriesjsonl gron s I wonder if JSONL couldn t be autodetected At a minimum if a filename is given and it ends with the suffix jsonl it should be possible to turn on stream mode Perhaps if there s a pattern matching jsonl b in a URL too Besides suffix matching I don t know whether it s realistic to switch to stream mode if the first JSON object terminates and there s still a newline and another JSON object remaining in the input If this suggestion were implemented a nostream option would need to be added in case somebody decided to name their files xxxjsona xxxjsonb xxxjsonc xxxjsonl for some pathological reason or if autodetection of streams is done by analyzing the input text It would be nice to have gron available as a library in order to use it directly in other go projects without using the command line tool According to the gron documentation To preserve array keys arrays are padded with null when values are missing For example using the test data in the Git repo gron testdataonejson fgrep w fum gron ungron five alpha null fum Would it be possible to add a command line option to exclude that artificial null for example gron testdataonejson fgrep w fum gron ungron nonull five alpha fum Thanks I have a deeply nested directory of archived JSON responses that I would like to analyze extract fields from each of the response files find exec gron would probably work but the hierarchy holds important context so Id want to have the file path included in the output Im thinking something like grep r Using gron even with nosort on a MB file generated here results in high mem utilizationcpu load and hanging hi tomnomnom there is an other set of tools which makes similar transformation on html xml and on csv files as gron performs on json ive read you have been suggested other names still i encourage you to consider renaming or at least make an alias to eg json cheers 