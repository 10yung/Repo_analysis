 Describe the bug Its not clear to me on what controls the StateChanged event should work in the documentations some button controls are mentioned However when applied on a TextBox nothing works which is strange to me Id expect that any control would have a GazeElement StateChanged event trigged eg the users gaze enters a TextBox The docs should be more clear as well indicating on which controls it would or wouldnt work Is this bug a regression in the toolkit If so what toolkit version did you last see it work Steps to Reproduce Steps to reproduce the behavior Create a TextBox and add a StateChanged event to its GazeElement TextBox Height gazeGazeInputIsSwitchEnabledTrue TextWrappingWrap HorizontalAlignmentStretch gazeGazeInputGazeElement gazeGazeElement StateChangedGazeElementStateChanged gazeGazeInputGazeElement TextBox Use an eye tracker and look at the TextBox nothing happens Replacing TextBox with Button will work Expected behavior The StateChanged event should trigger on any atleast interactive control Screenshots Environment Check one or more of the following options with x NuGet Packages Package Versions Windows Build Number Fall Creators Update X April Update October Update May Update Insider Build build number App min and target version Fall Creators Update April Update October Update May Update Insider Build xxxxx Device form factor X Desktop Xbox Surface Hub IoT Visual Studio version version X Preview version Additional context Add any other context about the problem here UWP projects are not signed Get the following error SystemIOFileLoadException Could not load file or assembly MicrosoftToolkitUwpNotifications Version Cultureneutral PublicKeyTokennull or one of its dependencies A stronglynamed assembly is required Exception from HRESULT x PLEASE HELP US PROCESS GITHUB ISSUES FASTER BY PROVIDING THE FOLLOWING INFORMATION ISSUES MISSING IMPORTANT INFORMATION MAY BE CLOSED WITHOUT INVESTIGATION Describe the bug I am trying to apply a DropShadow to an Ellispe filled with a RadialGradientBrush I am not able to get this to work The DropShadowPanel works as expected if I change the Brush to a SolidColorBrush Steps to Reproduce xaml controlsDropShadowPanel CanvasLeftBinding Left CanvasTopBinding Top BlurRadius IsMaskedTrue OffsetX OffsetY ShadowOpacity ColorBlack Ellipse WidthBinding Diameter HeightBinding Diameter FillBinding Fill EllipseRenderTransform TranslateTransform XBinding Left YBinding Top EllipseRenderTransform Ellipse controlsDropShadowPanel where Fill is a RadialGragientBrush generated in code behind With RadialGadientBrush With SolidColorBrush Expected behavior image with the RadialGradientBrush applied Screenshots see above Environment Check one or more of the following options with x NuGet Packages Package Versions Windows Build Number Fall Creators Update April Update October Update X May Update Insider Build build number App min and target version Fall Creators Update April Update X October Update X May Update Insider Build xxxxx Device form factor X Desktop Xbox Surface Hub IoT Visual Studio version X version Preview version Additional context Here is a sample App if it helps Note I am not a programmer by profession so maybe this code is not up to your standard PLEASE HELP US PROCESS GITHUB ISSUES FASTER BY PROVIDING THE FOLLOWING INFORMATION ISSUES MISSING IMPORTANT INFORMATION MAY BE CLOSED WITHOUT INVESTIGATION Describe the bug The following code had been working flawlessly for about years until today when I updated a bunch of NuGet packages oneDriveRootFolder await OneDriveServiceInstanceRootFolderForMeAsync Now it throws the following exception Could not load file or assembly MicrosoftIdentityModelClientsActiveDirectoryPlatform Version Cultureneutral PublicKeyToken bf ad e The system cannot find the file specified at MicrosoftToolkitServicesMicrosoftGraphMicrosoftGraphServiceLoginAsyncd MoveNext at SystemRuntimeCompilerServicesAsyncMethodBuilderCoreStart TStateMachine TStateMachine stateMachine at MicrosoftToolkitServicesMicrosoftGraphMicrosoftGraphServiceLoginAsyncString loginHint at MicrosoftToolkitServicesOneDriveOneDriveServiceLoginAsyncd MoveNext at SystemRuntimeExceptionServicesExceptionDispatchInfoThrow at SystemRuntimeCompilerServicesTaskAwaiterHandleNonSuccessAndDebuggerNotificationTask task at MicrosoftToolkitServicesOneDriveOneDriveServiceRootFolderForMeAsyncd MoveNext at SystemRuntimeExceptionServicesExceptionDispatchInfoThrow at SystemRuntimeCompilerServicesTaskAwaiterHandleNonSuccessAndDebuggerNotificationTask task at SystemRuntimeCompilerServicesTaskAwaiter GetResult I understand OneDriveService is obsolete Is this expected I would love to have it working now while preparing to use Graph SDK to replace it x Is this bug a regression in the toolkit If so what toolkit version did you last see it work Steps to Reproduce Steps to reproduce the behavior OneDriveServiceServicePlatformInitializer new OneDriveServicePlatformInitializer OneDriveServiceInstanceInitializeAppClientId new string FilesReadWriteAll OneDriveStorageFolder oneDriveRootFolder await OneDriveServiceInstanceRootFolderForMeAsync Expected behavior No error Screenshots If applicable add screenshots to help explain your problem Environment Check one or more of the following options with x NuGet Packages Package Versions Windows Build Number Fall Creators Update April Update October Update x May Update Insider Build build number App min and target version Fall Creators Update April Update October Update x May Update Insider Build xxxxx Device form factor x Desktop Xbox Surface Hub IoT Visual Studio version x version Preview version Additional context Add any other context about the problem here Fixes Link to relevant issue for ex which will automatically close the issue once the PR is merged PR Type What kind of change does this PR introduce Please uncomment one ore more that apply to this PR Bugfix Feature Code style update formatting Refactoring no functional changes no api changes Build or CI related changes Documentation content changes Sample app changes Style Change What is the current behavior Please describe the current behavior that you are modifying or link to a relevant issue The Expander Header is left aligned What is the new behavior The expander header will stretch to fit its space BREAKING CHANGE PR Checklist Please check if your PR fulfills the following requirements x Tested code with current supported SDKs readmemdsupported Pull Request has been submitted to the documentation repository instructions contributingmddocs Link docs PR link Sample in sample app has been added updated for bug fixes features Icon has been created if new sample following the Thumbnail Style Guide and templates Tests for the changes have been added for bug fixes features if applicable Header has been added to all new source files run buildUpdateHeadersbat Contains NO breaking changes If this PR contains a breaking change please describe the impact and migration path for existing applications below Please note that breaking changes are likely to be rejected This is a breaking style change Content that was left aligned will now stretch This could change how an application looks Other information Describe the bug When a UWP app is linked using NET Native and shipped to the store toast notifications built using MicrosoftToolkitUwpNotificationsdll stop working They still appear but they lose all context provided by the user and show up as AppName New Notification The workaround is to include the notifications assembly in rdxml like so Assembly NameMicrosoftToolkitUwpNotifications DynamicRequired All x Is this bug a regression in the toolkit Yes because this used to work without unnatural acts But unclear when that was Steps to Reproduce Build a simple app that uses MicrosoftToolkitUwpNotifications to trigger notifications Confirm it works Compile it with NET Native debug builds are fine Confirm all context is lost in notifications Add the directive mentioned above Confirm it works again Expected behavior The Toolkit NuGet package should provide an rdxml that just works so apps dont have to figure this out themselves cf Screenshots Environment Package Versions Windows Build Number Fall Creators Update April Update October Update x May Update Insider Build build number App min and target version Fall Creators Update x April Update October Update May Update Insider Build xxxxx Device form factor x Desktop Xbox Surface Hub IoT Visual Studio version version x version CPU usage is taken high When we load the records with columns CPU usage is to and when we mouse hover in DataGrid the CPU usage is to Is this bug a regression in the toolkit If so what toolkit version did you last see it work Steps to Reproduce Steps to reproduce the behavior Run the sample Click the DataGrid button and note the CPU usage in Task Manager And Mouse hover in DataGrid and note the CPU usage in Task Manager Expected behavior Have to reduce the CPU usage Screenshots Data Loading img width altDataLoading src Hovering img width altHovering src Environment NuGet Packages MicrosoftToolkitUwpUIControlsDataGrid Package Versions Windows Build Number x May Update App min and target version x October Update Device form factor x Desktop Visual Studio x version Sample Location DataGridUWPzip PLEASE HELP US PROCESS GITHUB ISSUES FASTER BY PROVIDING THE FOLLOWING INFORMATION ISSUES MISSING IMPORTANT INFORMATION MAY BE CLOSED WITHOUT INVESTIGATION Describe the bug I have a GridView in a pagecache enabledin the GridViewItem data template DataTemplate StackPanel Button RelativePanel controlsImageEx xNameImageExCover IsCacheEnabledTrue Width Height SourcexBind seriescoverimageurl ConverterStaticResource imageUrlCompress StretchUniformToFill PlaceholderSourceAssetsSlicesxxxpng PlaceholderStretchUniformToFill Border TextBlock Border Border BorderBackground mediaBackdropBlurBrush Amount BorderBackground TextBlock Border RelativePanel Button TextBlock TextBlock StackPanel DataTemplate When enter an item and navigate back some items may become black Does this relate to ImageExs IsCacheEnabled Sometimes when I first enter page there still exists some black Screenshots I met several times this morning but now I cant reproduce it If this occured I will put the screenshot here Environment Check one or more of the following options with x NuGet Packages Package Versions MicrosoftToolkitUwpUIControls Windows Build Number Fall Creators Update April Update October Update May Update x Device form factor x Desktop x Xbox Surface Hub IoT Visual Studio version x version Preview version Additional context Add any other context about the problem here It would be great for AdvancedCollectionView to implement ICollectionViewCollectionGroups based on items IGrouping just like the default view implementation of CollectionViewSource does This would allow using groping and incremental loading together which CollectionViewSource doesnt support Currently Im working on inheriting from AdvancedCollectionView and redefining CollectionGroups to see how far I can go with this scenario Describe the problem this feature would solve Please describe or link to any existing issues or discussions For example I want to translate the word run as in run a computer program but not run on a track Microsoft Translator has a perfect option includeAlignment to do this Describe the solution A clear and concise description of what you want to happen It would be great if TranslatorServiceInstanceTranslateAsync allows optional parameters To make the implementation simple it could return the raw json response and let the user parse it Describe alternatives youve considered A clear and concise description of any alternative solutions or features youve considered Additional context Screenshots Add any other context or screenshots about the feature request here 