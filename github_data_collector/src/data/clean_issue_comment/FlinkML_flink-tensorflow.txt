 Flink to Tensorflow to rc Added Installation instructions in SBT and Maven in readme Add saved model for MNISTdense that includes a prediction signature Create a PredictionMethod to use the prediction signature Create a test for the saved model and prediction signature Implement outofbox interoperability with TF Serving models Given a model that works in TF Serving make it easy to use directly in a Flink program eg implementations of predict and classification signature MapFunction implementations w appropriate types tfExample Array Byte Example code Some snippets to look at Serving a TensorFlow Model mnistsavedmodelpy API definitions Make it possible to define TF graphs from scratch in addition to existing support for using externallydeveloped models Because the object model of TensorFlow graphs is extensive and evergrowing we should hesitate to introduce a Flinkspecific DSL We should consider creating or incorporating a pure Scala TensorFlow library where such a DSL could be developed The library today has numerous layers of functionality that could benefit from refactoring to reduce dependencies and clarify concepts The conceptual layering from bottom up Scala language bindings a focus on using the TensorFlow library in Scala not Flink specific Core Flink integration code a graphmodel loaders b tensors in the Flink type system eg TensorValue type tags c core lifecycle classes eg ModelAwareFunction d future integration of graph state with Flink managed state ML specializations a representations of specific ML signatures classify regress predict b TF Serving interoperability c FlinkML integration d converters for specific datatypes eg LabeledVector Example Ideally the core module would shed its dependency on twitterbijection though it may still be useful in Lets prove that serving TF models inprocess has a performance advantage over making RPC calls to TF Serving Make it possible to use TensorFlow models as elements of a FlinkML pipeline as described here Possible features include Use TF models as FlinkML transformers and predictors Support FlinkML datatypes Train new models to be used for inference andor exported Integrate graph state into Flink operator state Support checkpointing Support keyed streams