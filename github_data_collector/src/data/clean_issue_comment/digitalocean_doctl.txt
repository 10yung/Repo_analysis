 CVE Medium Severity Vulnerability detailssummaryimg src width height Vulnerable Library bk sioclientgotransportv bpsummary pGo client for Kubernetesp p Dependency Hierarchy k sioclientgorestv Root Library k sioclientgopluginpkgclientauthexecv x k sioclientgotransportv Vulnerable Library pFound in HEAD commit a href p details pp detailssummaryimg src width height Vulnerability Detailssummary p The Kubernetes clientgo library logs request headers at verbosity levels of or higher This can disclose credentials to unauthorized users via logs or command output Kubernetes components such as kubeapiserver prior to v which make use of basic or bearer token authentication and run at high verbosity levels are affected pPublish Date pURL a href p details pp detailssummaryimg src width height CVSS Score Details b bsummary p Base Score Metrics Exploitability Metrics Attack Vector Network Attack Complexity Low Privileges Required Low User Interaction None Scope Unchanged Impact Metrics Confidentiality Impact High Integrity Impact None Availability Impact None p For more information on CVSS Scores click a href p details pp detailssummaryimg src width height Suggested Fixsummary p pType Upgrade versionp pOrigin a href pRelease Date p pFix Resolution p p details pp Step up your Open Source Security Game with WhiteSource here There may be doctl but no ssh access for droplet Therefore it would be convenient to add SSH keys for existing droplet Rerated to I installed doctl trough snap sudo snap install doctl and then I give it permissions sudo snap connect doctlsshkeys sshkey But if I try to enter to my droplet via doctl using doctl compute ssh dropletname it fails to add droplets IP to the list of known hosts while if I enter with ssh it works as intended ssh q rootdropletip exit Doctl gives the following message The authenticity of host dropletip cant be established ECDSA key fingerprint is SHA dropletsha Are you sure you want to continue connecting yesno yes Failed to add the host to the list of known hosts homeusernamesshknownhosts And then continues Enter passphrase for key homeusernamesshkeyname Is Doctl able to add droplets IP to the list of known hosts right now Is this a bug related to SnapLinux or isnt a present feature By the waty my specs npx envinfo are the following System OS Linux Ubuntu Disco Dingo Container Yes Shell usrbinfish Binaries Node confignvm binnode Yarn usrbinyarn npm confignvm binnpm Utilities Make usrbinmake GCC usrbingcc Git usrbingit Virtualization Docker usrbindocker VirtualBox usrbinvboxmanage Languages Bash binbash Perl usrbinperl Python usrbinpython Ruby usrbinruby Databases MongoDB usrbinmongo Figured out how to implement this It required updating Cobra Adding the remaining resources wont be too difficult just tedious Still need to figure out how to handle nested completion like doctl kubernetes cluster nodepool get clusteridclustername poolidpoolname Closes The API supports updating a database clusters firewall rules known as trusted sources in the control panel Is there a plantimeline to include this functionality in doctl Related Links doctl is unable to access docker to authenticate to the registry when installed via snap doctl registry login Error unable to find the Docker CLI binary Make sure docker is installed But docker is installed via snap docker version Docker version build eb I believe a slot is needed for doctl snap to support dockersupport interface Is it possible to have the userdata and userdatafile flag work with Droplet rebuild actions For example instead of running this command doctl compute droplet action rebuild dropletid imageid We can have doctl compute droplet action rebuild dropletid imageid userdatafilepathtouserdatayaml I dont know if this is due to a limitation of doctl or the API itself but it would be a really nice feature to have Please let me know if theres already something similiar in the command line tool or if theres a beta version with the functionality In some cases it can be useful to configure doctl noninteractively Currently we support this when setting up the default context For example running the following will validate the token and add it to the doctl config file without additional user interaction doctl auth init t DOTOKEN Using token asupersekrettokenthatisverylongidontwanttotypeit Validating token OK If the context flag is added to that command the token is ignored and the user is prompted to enter the token manually doctl auth init context newcontext t DOTOKEN DigitalOcean access token The behaviour should be consistent When passing a token and a context together to doctl auth init we should validate the token and configure a new context to use it without additional user input Example doctl kubernetes cluster kubeconfig save tab would suggest existing clusters to tab complete kubectl does this for all existing resources Looks like the implementation is here Figuring out how this works should only be difficult for the first resource we implement it on this command has detach as its parallel already command that was removed has been deprecated for over years users should have an easy fix switch to detach if they are even using this action