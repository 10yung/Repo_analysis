When dealing with the tree structure sometimes we want to remove the all children nodes of a specific node but keeping the node itself For example removing anything between tags p and p Here is a snippet demonstrating how to implement detachchildren with indextree rust fn detachchildrenTself arena mut ArenaT for child in selfchildrenarena let node arena child nodeparent None nodenextsibling None nodeprevioussibling None let node arena self nodefirstchild None nodelastchild None I havent tried it yet so it may not be compiled This is a PoC implementation of I noticed Updating neighbors are O cost if all the nodes have parents indextree does not provide implicit root nodes and toplevel nodes can have siblings without parents For such nodes updating neighbors are Onumofsiblings Now all neighors getters such as Nodeparent should receive ArenaT This is not intrinsic difficutly because when people wanted to get NodeId from NodeT then they would have ArenaT However I feel it is just annoying to pass arena as an argument all the time If this change is worth merging then I think indextree should support some mechanism for pseudoparent node or implicit root node to make updates constant time See Data structures for the document object model section for a neat trick to save one pointer per node while maintaining O operations