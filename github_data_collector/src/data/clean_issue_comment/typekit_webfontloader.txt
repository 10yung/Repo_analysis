I would consider this a bug otherwise please consider this a feature request slightlysmilingface Scenario Say I make a call to request a specific font at different times during runtime javascript WebFontload google families Montserrat Desired behavior After the first load the two subsequent calls to WebFontload gets ignored html link relstylesheet href mediaall Actual behavior identical HTML tags and reduntant requests html link relstylesheet href mediaall link relstylesheet href mediaall link relstylesheet href mediaall If you work with webfontloader in a context where fonts are loaded conditionally during runtime it becomes rather inconvenient to make all the checking before requesting a font I hope this will be fixed sometimes soon blush I have locally defined fonts which Im loading as custom fonts These are actually Google fonts however I have them local The primary reason for this is because this will be a Cordova app so I dont want to have to hit the external network if I can avoid it I declare these custom fonts with fontface fontface fontfamily Bowlby One SC src urlassetsBowlbyOneSCRegularttf formattruetype fontface fontfamily Roboto sansserif src urlassetsRobotoRegularttf formattruetype Codewise I load it via WebFontload google families Pacifico custom families Roboto Bowlby One SC active function appwebFontsLoaded true if appcoreAssetsLoaded appinitialStartGame fontloading functionname string consolelogL name fontactive functionname string consolelogname You can see I have some debug on when loading occurs and when a font is active I did have some debug logging in active but Ive removed it from this code snippet What I find is that when custom is not used it loads quickly However when custom is used its very slow to load even though I see the loading message and active message for the font There is a clear second delay before the actual active is being called Visually I see a white screen for seconds Then the game starts Im using your suggested configuration like so import WebFont from webfontloader WebFontload monotype projectId xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx loadAllFonts true And the browser is making a request to that always gives a The sample code for the project which I download from fontscom which is not using webfontloader works like a charm so the fontscom projectid itself seems to work Is there something additional configurations to fontscom I need to do in order to use webfontloader that is not documented here Adding domains etc seems to have been a thing in the past because fontscom marks those guides as legacy now I understand this isnt the projects typical use case and references a number of third party libraries However Im just looking to get some insight into the underlying problem Maybe someone else ran into the same issue and possibly found a solution Unfortunately StackOverflow comes up very bare on solutions Hopefully someone can provide me with some information Basic info Nodejs version jsdom version webfontloader Minimal reproduction case const html htmlheadstyle typetextcss fontface fontfamily MontserratBold src url stylebodybodyhtml requirejsdomglobalhtml resources usable const WebFont requirewebfontloader const WebFontConfig custom families MontserratBold active function consolelogactive inactive function consoleloginactive fontinactive functionfamilyName consolelogfontInactive familyName WebFontloadWebFontConfig The above example always returns fontInactive MontserratBold and inactive How does similar code behave in browsers Returns active I have an issue using Typekit fonts on banner animations The licensing pages say this it totally allowed however my ads are being blocked by the Ad Platform in this case Google Ads because of the calls to usetypekitnet It is worth noting that Adobe Advertising Cloud is already a certified ATP vendor and already has several URLs whitelisted including useedgefontsnet and ptypekitnet just not usetypekitnet Would it be possible to add an implementation where you can use a typekit project id with the edge fonts api url eg WebFontload typekit id xyz api useedgefontsnet or ptypekitnet Open similar here As per best practices Would it be possible to add the rel prop in the generated link with the different options Sometimes is required for performance optimization google font api started supporting display param as of may announced at google io I have prepared a change to allow the use of this functionality through webfontloader changes added also to README and tests Theres hasnt been a single commit on master in over a year and a half I wanted to check whether or not its worth my team or I using or contributing to this project if its no longer maintained There are many open issues and PRs with no recent activity from what I can tell No worries if not of course Just wanted to make sure