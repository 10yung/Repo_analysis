Hello I have some stupid problem I built all made sudo make install and i want to integrate libfannso in android studio Where can i take libfannso file or how i can build it hello i search for using FANN with GPU and found only one example and now understand this can you show more examples for GPU request simplerobotmushroomxor etc with gpu use thank you hello i have no trouble on linux with fann erlang there i get executable file fannerl in fannerlpriv and all is ok but i do not fully understand how install fann on windows i install visual studio community install c there install erlang this is ok next i choose VS directory inside fanndir open the fannsln solution click build in VS visual studio says all ok compiling ok but i do not understand what next help me please after compiling fann i see next dll E fann bin fanndoubledll fanndoubleddll fannfixeddll fannfixedddll fannfloatdll fannfloatddll what of thet needs for erlang in E fannerl src fannerlerl at line PrivDir codeprivdirfannerl fannerl in erlang compiles fine E fannerlrebar compile Verifying dependencies Compiling fannerl but tests not run ok E fannerlrebar eunit Verifying dependencies Compiling fannerl Performing EUnit tests EUnit file fannerlapp application fannerl module fannerl module fannerltests Tests that fannerl can be started and stopped accordingly fannerltests fannerlstartstoptestCRASH REPORT May crasher initial call fannerlinit pid registeredname fannerl exception error enoent in function openport called as openportspawne fannerl priv packet nousestdiobinaryexitstatus in call from fannerlinit efannerlsrcfannerlerl line ancestors messagequeuelen messages links dictionary trapexit true status running heapsize stacksize reductions neighbours neighbour pid registeredname initialcall eunitprocgroupleaderprocess currentfunction eunitprocgroupleaderloop ancestors messagequeuelen links trapexit false status waiting heapsize stacksize reductions currentstacktrace eunitprocgroupleaderloop fileeunitprocerlline neighbour pid registeredname initialcall erlangapply currentfunction proclibsyncwait ancestors messagequeuelen links trapexit false status waiting heapsize stacksize reductions currentstacktrace proclibsyncwait fileprocliberlline fannerltestsfannerlstartstop fileefannerltestfannerltestserl line eunittestruntestfun fileeunittesterlline eunitprocruntest fileeunitprocerlline eunitprocwithtimeout fileeunitprocerlline eunitprochandletest fileeunitprocerlline eunitproctestsinorder fileeunitprocerlline eunitprocwithtimeout fileeunitprocerlline skipped undefined unexpected termination of test process enoent erlangopenport spawne fannerl priv packet nousestdiobinaryexitstatus fileerlangerlline fannerlinit fileefannerlsrcfannerlerlline proclibinitpdoapply fileprocliberlline Failed Skipped Passed One or more tests were cancelled Error running tests help me please thanks I have a net with layers Created using the code stdvectorunsigned int layers layerspushback for int i i i layerspushback layerspushback anncreatestandardarray layersdata In the net file it is saved as layersizes which I assumed has no bearing on actual performance Except that it does while the input output getting functions return the correct appropriate values gettotalneurons returns the ones saved in the net file instead of real neurons tested for MinGWgcc and MSVC eg kerasinitializersRandomNormal The function has several TODO comments regarding the correctness of the algorithms implementation We should review these lines and either fix them or remove the comments Closes Closes The iRProp algorithm as given in its original paper does not have weightbacktracking If the sign of the derivative changes in an iteration the weights should not be updated at all This PR should not be merged yet it is still missing a unit test for the new behavior Unfortunately Im a bit lost as to how we could unittest this change andersfylling do you maybe have an idea I had a overflowerror with the bit fannfloatdll rpropincreasefactor and rpropdecreasefactor were similar to Fixed it with this issue from ache fanntrainc void fannupdateweightsirpropmstruct fann ann unsigned int firstweight unsigned int pastend fanntype trainslopes anntrainslopes fanntype weights annweights fanntype prevsteps annprevsteps fanntype prevtrainslopes annprevtrainslopes double prevstep nextstep slope prevslope samesign float increasefactor annrpropincreasefactor float decreasefactor annrpropdecreasefactor float deltamin annrpropdeltamin float deltamax annrpropdeltamax unsigned int i firstweight for i pastend i prevstep fannmaxprevsteps i fanntype prevstep may not be zero because then the training will stop slope trainslopes i prevslope prevtrainslopes i samesign prevslope slope nextstep prevstep if samesign nextstep fannminprevstep increasefactor deltamax else if samesign nextstep fannmaxprevstep decreasefactor deltamin slope if slope weights i nextstep if weights i weights i else if slope weights i nextstep if weights i weights i ifsamesign nextstep fannminprevstep increasefactor deltamax else nextstep fannmaxprevstep decreasefactor deltamin slope ifslope weights i nextstep ifweights i weights i else weights i nextstep ifweights i weights i ifi printfweightf slopef nextstepf prevstepf n weights i slope nextstep prevstep update global data arrays prevsteps i nextstep prevtrainslopes i slope trainslopes i 