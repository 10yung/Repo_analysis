In the doc there are two approaches to deal with emojis Emojis Not run Load R twitter data x readdelimsystemfiledocsrtweetstxt package textclean stringsAsFactors FALSE x librarydplyr librarymagrittr There are approaches Approach Replace with words x mutateTweet replaceemojiTweet sentimentTweet Approach Replace with identifier token combinedemoji updatepolaritytable lexiconhashsentimentjockersrinker x lexiconhashsentimentemojis x mutateTweet replaceemojiidentifierTweet sentimentTweet polaritydt combinedemoji EndNot run The result is different emoji approaches Is there any hint about why the results are different and in what circumstance which one is better Thanks Hello Tyler all First of all thank you on amazing work on this package I have a question regarding the Hu Liu dictionary loaded into the package Doing a simple frequency check returned the following distribution of words Total Observations in Table Thus it appears that words have polarity of words polarity of and polarity of Eg i wish or unduly both carry a weight and is like and im like carry a Consulting the dictionary avaialable at none of these seem to appear there In fact I did not see any twoword items in the dictionary there While these do make sense I wanted to ask about why they are included and if these weights are indeed accurate and as intended How are these bigrams accounted for in the calculation Or am I doing something wrong Thanks Can you explain why the following sentences which all seem positive were given a negative score using this package Sentence SentimentR Current Package Great boost of energy without a nasty crash afterwards My lips have never looked or felt better It is absolutely perfect no play in blade gorgeous to look at and hold extremely solid No gaps perfectly centered blade geometrical cemetrical grind on both sides It was a nice clean smell not floral or fruity Hi I love this package Ive been using it in regular sentiment analysis and had previously set up something like the example presidentialdebates getsentences This used to produce a dataframe with all columns retained and the individual sentences that I could then run sentiment on This no longer works and Im struggling to find a way to get sentiment on a sentence level while preserving all of the remaining data in the original dataframe Here is a reprex for what Im working through librarysentimentr librarymagrittr librarydplyr x tibbletext cI like data a lot sentimentr is great for sentiment analysis I use it a lot rating c x Does not preserve rating colulmn and is not at sentence level x mutatesentence getsentencestext sentimentbysentence Preserves rating column but does not allow for sentencelevel sentiment x mutatesentence getsentencestext sentimentbysentence listrating Allows for sentencelevel sentiment but does not preserve rating column x mutatesentence getsentencestext sentimentsentence Ive also tried a combination of getsentences tidyrunnest and then using bindcols on a separate dataset built using sentiment which works most of the time but fails when for whatever reason sentiment produces more rows than its supporting dataframe produced by getsentences tidyrunnest mytext c do you like it It is red But I hate really bad dogs I am the best friend Do you really like it Im not happy ss sentimentbymytext highlightss gives this Error in datatabley listsentiment attributesx averagingfunction sentiment attempt to apply nonfunction Doing this attrss averagingfunction sentimentraveragedownweightedzero will make highlight work but is clunky If I customize my own dictionary with polaritydt valenceshiftersdt in dataframe and specify that as arguments to sentiment or sentimentby does that replace the default dictionary If so and I want to add to the existing lexicons how do I go about doing that The emotion function is returning inconsistent results Example emotionI lie The result should be a score for anger disgust and sadness The function instead returns score for such emotions Looking at the code the problem seems to be the result of an incorrect merge operation on the temporary variable out Notice that the problem disappears when analyzing multiple sentences in a vector if at least one of the sentences contains a negated emotion Example emotioncI dont love I lie The score for the second sentence is correct Example emotioncI love I lie The score for the second sentence is different from the example above and incorrect I am getting this issue when I run my code simple code emotiontext emotiondt lexiconhashnrcemotions valenceshiftersdt lexiconhashvalenceshifters dropunusedemotions FALSE unasnegation TRUE unasnegationwarn isTRUEallequalvalenceshiftersdt lexiconhashnrcemotions nbefore nafter Error Error in allequalvalenceshiftersdt lexiconhashnrcemotions object valenceshiftersdt not found How do I importaccess the valence shifters lexicon Mailed Case and Changes description to tylerrinkergmailcom Like questiinsquotes are often not indicative of the speakers sentiment Consider a way to weight these similar to questions