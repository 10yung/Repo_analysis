I get the following exception JmesPath SyntaxErrorException Syntax error at character datarelationshipsflowactionsdata id Did not reach the end of the token stream With a JSON document like json data type flows id e fb ff e c d a attributes name Patient Intake details Intake of a new Dialysis patient updatedat T createdat T relationships flowactions links related data type flowactions id a f aae bb b af ccdeb d links self The same expression works correctly with the demo on the home page We currently fail on the following upstream compliance tests comment Combined syntax given cases expression result null expression result expression result null The first and last case are incorrect but we handle the middle case correctly at the moment Add Arithmetic Operators describe in READMErst Add Root Operator describe in READMErst hi Does it support to travers object when data is loaded with json serializer for example the result data set if fully loaded object This adds support for PHP objects that are not Array or stdClass Provided your classes implement either JmesPathableObjectInterface or JmesPathableArrayInterface you will be able use JMESPath expressions to extract information from objects derived from them The small example below hopefully provides an explanation php product new StdClassLike product title Item One product price product new StdClassLike product title Item Two product price basket new StdClassLike basketitems new ArrayLike product product result JmesPath Envsearchmaxbyitems price basket vardumpresult objectStdClassLike valuesStdClassLikeprivate array title string Item Two price float Two gists show how StdClassLike and ArrayLike are implemented StdClassLike ArrayLike Ive updated the compliance test so that another pass is made through the test suites This extra pass rebuilds the json as PHP objects before running the compliance test Extra tests have also been added to cover the changes made to the code I perfectly understand if these changes wont be accepted JMESPath is primarily for extracting information from json Providing the same functionality for PHP objects may be outside of its scope and there may not be enough interest from PHP developers to justify maintaining the code Hello With envy I have seen that jmespathpy added a custom function feature in jmespathjmespathpy and that is something I need for the PHP implementation too so I created this PR that should add this feature I also added tests and documentation let me know if anything is missing PS I also changed the singleton handling a bit in FnDispatcher as IMHO the instance should be a defined static class property not implicitly created in the getInstance method 