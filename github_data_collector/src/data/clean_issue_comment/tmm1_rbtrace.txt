Architecture mips el My build type is mips elunknownlinuxgnuand the configguess in msgpack targz is too oldit cannot guess build type Im trying to follow this guide with ruby rails On my locally running sidekiq instance it does not seem to work bundle exec rbtrace p pid e load commandrb Ive put the following line in commandrb to work around the Mac OS linetoolong issue ThreadnewGCstart require objspaceioFileopentmprubyheapdump w ObjectSpacedumpalloutput io ioclose In my applicationrb I have require rbtrace require objspace ObjectSpacetraceobjectallocationsstart Yet the result I get is attached to process load yolorb ThreadError cant be called from trap context detached from process Please advise how I can get around this thanks in advance AbstractMysqlAdapter was introduced in activerecord v so add also AbstractMysqlAdapter to support v or later cf running a bundle exec rbtrace p memory Output is attached to process detached from process bundler failed to load command rbtrace Usersarthurnnsrcdependencygraphapivendorgemsruby binrbtrace ArgumentError command is too long Usersarthurnnsrcdependencygraphapivendorgemsruby gemsrbtrace librbtracerbtracerrb in sendcmd Usersarthurnnsrcdependencygraphapivendorgemsruby gemsrbtrace librbtracerbtracerrb in eval Usersarthurnnsrcdependencygraphapivendorgemsruby gemsrbtrace librbtraceclirb in run Usersarthurnnsrcdependencygraphapivendorgemsruby gemsrbtrace binrbtrace in top required Usersarthurnnsrcdependencygraphapivendorgemsruby binrbtrace in load Usersarthurnnsrcdependencygraphapivendorgemsruby binrbtrace in top required I am assuming the memory dump is too big or something so it would break the msgpack buffer size is there a work around of some sort Postinstall message from trollop The trollop gem has been deprecated and has been replaced by optimist See And run rbtrace p PID firehose in MacOS ruby compiling rbtracec rbtracec In function eventhook rbtracec warning rbframemethodidandclass is deprecated Wdeprecateddeclarations rbframemethodidandclass mid klass In file included from usrincluderuby rubyrubyh from usrincluderuby rubyh from rbtracec usrincluderuby rubybackwardh note declared here DECLAREDEPRECATEDINTERNALFEATURErbframemethodidandclass usrincluderuby x linuxgnurubyconfigh note in definition of macro NORETURN define NORETURNx attribute noreturn x usrincluderuby rubybackwardh note in expansion of macro ERRORFUNC NORETURNERRORFUNCdeprecated internal function DEPRECATEDvoid funcvoid usrincluderuby rubybackwardh note in expansion of macro DEPRECATED NORETURNERRORFUNCdeprecated internal function DEPRECATEDvoid funcvoid usrincluderuby rubybackwardh note in expansion of macro DECLAREDEPRECATEDINTERNALFEATURE DECLAREDEPRECATEDINTERNALFEATURErbframemethodidandclass rbtracec error too many arguments to function rbframemethodidandclass rbframemethodidandclass mid klass In file included from usrincluderuby rubyrubyh from usrincluderuby rubyh from rbtracec usrincluderuby rubybackwardh note declared here DECLAREDEPRECATEDINTERNALFEATURErbframemethodidandclass usrincluderuby x linuxgnurubyconfigh note in definition of macro NORETURN define NORETURNx attribute noreturn x usrincluderuby rubybackwardh note in expansion of macro ERRORFUNC NORETURNERRORFUNCdeprecated internal function DEPRECATEDvoid funcvoid usrincluderuby rubybackwardh note in expansion of macro DEPRECATED NORETURNERRORFUNCdeprecated internal function DEPRECATEDvoid funcvoid usrincluderuby rubybackwardh note in expansion of macro DECLAREDEPRECATEDINTERNALFEATURE DECLAREDEPRECATEDINTERNALFEATURErbframemethodidandclass rbtracec In function sigurg rbtracec warning implicit declaration of function rbpostponedjobregisterone Wimplicitfunctiondeclaration rbpostponedjobregisterone rbtracereceive make Makefile rbtraceo Error ERROR Error installing homeabuildrpmbuildSOURCESrbtrace gem ERROR Failed to build gem native extension Building has failed See above output for more information on the failure make failed exit code Does not rely on the GC hooks patch uses MRIs GC events API directly instead This is just a quick attempt to get the GC tracing working again and might be a hack Ill be happy to incorporate any feedback Im running a rbtrace on a plain ruby project with celluloid Ruby version Trying to run a rbtrace from Terminal rbtrace p e ThreadnewGCstartrequire objspaceioFileopen FIRSTjson w ObjectSpacedumpalloutput io ioclose Yield the following result Error argument pid pid is not listening for messages did you require rbtrace rbtrace is required successfully on the project No idea what is wrong over here OS Ubuntu LTS ruby p revision x linux sudo lsof p grep rbtrace ruby joshianiket mem REG homejoshianiket rvmgemsruby thescpgemsrbtrace librbtraceso Hello I have the following setup using rails ruby def create require rbtrace pid Processpid result systembundle exec rbtrace u p pid e load Railsrootscriptheapdumprb render json status result end require rbtrace returns true my Gemfile does not require the gem ie gem rbtrace require false And I still get the following error Error argument pid pid is not listening for messages did you require rbtrace PID is defined and Im running in a separate thread which I later then join to the main one ie ruby heapdumprb Threadnew do require objspace should rbtrace be required here ObjectSpacetraceobjectallocationsstart GCstart filename DateTimenowstrftimed BYENV USER Railsenvupcasejson ObjectSpacedumpalloutput Fileopenfilename w s AwsS Resourcenewcredentials AwsCredentialsnewENV AWSACCESSKEYID ENV AWSSECRETACCESSKEY region useast object s bucketmemorybenchmarksobjectfilename objectuploadfilefilename acl authenticatedread endjoin Maybe I need to require rbtrace on the block passed to the new thread but if theres any known issues around requiring the library it would be good to know Im also using puma as my web server 