EnvCentos Versionxdotool el x rpm Question I have successfully installed Xdotool on Centos But when I use Xdotool command in terminal it doesnt workand there is no error log There are two related issues that I noticed today windowsize doesnt work when window is fullscreen Reproduction Environment GNOME Shell Ubuntu Open a window I used a Chrome window Double click on the top to make it the full size of the desktop and focused Run xdotool windowsize sync usrbinxdotool getwindowfocus The window will not change size windowsize has a delayed effect on window sizes even with sync Reproduction Environment GNOME Shell Ubuntu Open a window I used a Chrome window Double click on the top to make it the full size of the desktop and focused Run the following shell script set ex wmctrl i r usrbinxdotool getwindowfocus b removefullscreen wmctrl i r usrbinxdotool getwindowfocus b removemaximizedvert wmctrl i r usrbinxdotool getwindowfocus b removemaximizedhorz wmctrl i r usrbinxdotool getwindowfocus e xdotool windowsize sync usrbinxdotool getwindowfocus xwininfo id usrbinxdotool getwindowfocus sleep xwininfo id usrbinxdotool getwindowfocus Notice that only the second xwininfo shows the correct window resolution I would expect the sync flag would wait until the window is resized and then return xdotool needs to subtract decorations when reporting window position Using these fixed values with windowmove will result placing window correctly at the current position Current users get value which is outright wrong absolute position as reported by xwininfo plus decorations Possible useful values to user are absolute position drawable part of window or window position sans decorations which is what this patch provides Either fix will slightly break existing users unless both are provided as option or new command Hello thanks for making xdotool it really is quite an useful little helper Is there a way to focus a window without also bringing it to the front The idea is to interact with the window under the mouse cursor the same way you would with an actual mouse ie the window doesnt have to be raised or even focused But many windows ignore XSendEvent as mentioned in the manpage A semiworkaround could be to focus a window then use regular XTEST events However windowfocus also raises a window when used on it which is not desirable for this use case Is there a way to prevent this or is this up to the WM Thanks On the man page Type a given keystroke Examples being altr ControlLJ ctrlaltn BackSpace Generally any valid X Keysym string will work Multiple keys are separated by Aliases exist for alt ctrl shift super and meta which all map to FooL such as AltL and ControlL etc Please be sure to document the names of all the keys Eg one has to search the web to finally find how to specify the PageUp key many thanks in advance cheers Hi not sure if the issue in mainly due to xdotool LibreOffice or Debian but I cant test at present different combinations of OS LO and Debian distribution On a Raspberry Pi B running Raspbian Buster while I can move a window running a LO Impress presentation all the xdotool commands aimed at changing slides like key and click issued either from another terminal window or from a python program by the ossystemcmd call do nothing issuing no error The same commands and programs run flawlessly on the same HW platform under Raspbian Stretch featuring LibreOffice Please let me know if I can try anything or provide any other info to help understanding and possibly fixing this strange behavior Best regards I tried to kill a certain process when I lose focus of a window by this command xdotool behave windowid blur exec kill pid But this keeps xdotool to exec kill command even after the first command I want a feature like xdotool behave once windowid blur exec kill pid can run the command once and then stop running command afterwards Implement pid searching without additional search argument to allow commands like bash xdotool search pid setwindow urgency I dont think it made much sense to search by name and pid previously you had to do something like this bash xdotool search pid namethatdoesnotexist setwindow urgency Defaulting to search window name class and classname Fixes valgrind reports bytes in blocks are definitely lost in loss record of at x F malloc in usrlibx linuxgnuvalgrindvgpreloadmemcheckamd linuxso by x DB XGetWindowProperty in usrlibx linuxgnulibX so by x F E xdogetwindowpropertybyatom in usrlibx linuxgnulibxdoso by x F FC in usrlibx linuxgnulibxdoso by x F C xdogetdesktopforwindow in usrlibx linuxgnulibxdoso by x F BEC in usrlibx linuxgnulibxdoso by x F FD in usrlibx linuxgnulibxdoso by x F F in usrlibx linuxgnulibxdoso by x F A xdosearchwindows in usrlibx linuxgnulibxdoso by x F openplayer playerc by x C B main mainc Running valgrind on xdotool search I get more lost memory from allocated by XQueryTree There are probably more places where memory is allocated and not being freed afterwards I havent done an extensive check