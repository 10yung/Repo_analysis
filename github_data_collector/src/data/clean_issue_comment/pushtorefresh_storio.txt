Latest commit on Dec StorIO is Dead buildgradle implementation compushtorefreshstorio sqlite sync error Failed to resolve compushtorefreshstorio sqlite How we can migrate to androidx with storio Maybe you have some jar files There is still some issue with Jetifier not properly handling the annotation processors I have a large legacy project that cannot easily go through a transition to Storio however we desperately need to migrate to AndroidX Is this something that someone familiar with this project can update I have the source downloaded but do not have the time to find my way around migrate it to AndroidX and then make a PR FAILURE Build failed with an exception Where Script Usersla AndroidStudioProjectsTelstra x telstra x androidappbuildscriptscopytestresourcesgradle line What went wrong Could not find method execute for arguments on task appcopyTestSqiObfuscatedReleaseResources of type orggradleapitasksCopy Try Run with stacktrace option to get the stack trace Run with info or debug option to get more log output Run with scan to get full insights Get more help at Deprecated Gradle features were used in this build making it incompatible with Gradle Use warningmode all to show the individual deprecation warnings See This PR replaces the framework SQLite version with the new SupportSQLite from AndroidX This new implementation allows to use more SQL implementations besides the framework one like the sqliteandroid database from requery which was requested at All tests are passing and the sample app works but I dont know if I missed something Readme should be updated too to reflect the changes required to use the new approach with FrameworkSQLiteOpenHelperFactory I guess this PR would be included in a x release smile It looks like the last version has not been published since I got Failed to resolve compushtorefreshstorio sqlite Failed to resolve compushtorefreshstorio sqliteannotations when building my project Hey guys Great lib you are buiding here As far as I understood it is possible to use StorIOSQLiteCreator annotation only on Kotlin primary constructor In my case I have Parcelable data class with some but not all fields to be stored in db I wonder if there is an option to create secondary kotlin constructor for storio that would use full list of stored fields or use primary constructor but not annotate some fields with StorIOSQLiteColumn For gradually migration from v v we have to share changes between old and new StorIOSQLite Should we rename PreparedWriteOperation for this purpose Maybe PreparedCompletableOperation