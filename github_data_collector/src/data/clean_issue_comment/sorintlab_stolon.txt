Use k s client patch method to update pod annotations in some versions replacing the whole pod object will return an error As described in I propose the following changes to improve the documentation of the syncTimeout As multiple users have experienced the hard way the default timeout is currently an undocumented arbitrary number of minutes that can easily become a problem if you need to recover from a full backup a day ago and need to replay a large number of transactions Out of scope A nicer solution might be to monitor the progress of the recovery but Im not sure how to implement that Yet another option may be to remove the timeout entirely For now the least I can do is try and improve the user experience by improving the documentation as suggested previously johannesboon Feel free to open an RFE issue to request this to be documented and also a PR to add this to the doc Originally posted by sgotti in NOTE Please submit only bug reports or RFE via the issue tracker For other question or if unsure ask on the mailing list or gitter channel Submission type Delete the inappropriate option below Bug report Request for enhancement RFE Environment kubernetes Stolon version Additional environment information if useful to understand the bug Stolon keeper stops working and I see following messages T Z ERROR cmdkeepergo cannot get configured pg parameters error dial unix tmpsPGSQL connect connection refused T Z ERROR cmdkeepergo cannot get configured pg parameters error dial unix tmpsPGSQL connect connection refused T Z INFO cmdkeepergo our db requested role is master T Z INFO postgresqlpostgresqlgo starting database UTC FATAL preexisting shared memory block key ID is still in use UTC HINT Terminate any old server processes associated with data directory stolondatapostgres T Z ERROR cmdkeepergo failed to start postgres error postgres exited unexpectedly T Z ERROR cmdkeepergo cannot get configured pg parameters error dial unix tmpsPGSQL connect connection refused T Z ERROR cmdkeepergo cannot get configured pg parameters error dial unix tmpsPGSQL connect connection refused T Z INFO cmdkeepergo our db requested role is master T Z INFO postgresqlpostgresqlgo starting database UTC FATAL preexisting shared memory block key ID is still in use UTC HINT Terminate any old server processes associated with data directory stolondatapostgres Bug report Expected behaviour you didnt see Stolon postgres should have been up Unexpected behaviour you saw Stolon postgres instance is down Steps to reproduce the problem Over period of time stolon shows this behavior RFE Enhancement Description With this change we ensure that the replica pods of the same deployment do not get assigned to the same node Fot this we have employed k s antiaffinity rule NOTE Please submit only bug reports or RFE via the issue tracker For other question or if unsure ask on the mailing list or gitter channel Submission type Delete the inappropriate option below Request for enhancement RFE RFE Enhancement Description Currently there is a single way to init or restore standby node via pgbasebackup with hardcoded options This becomes problematic both for users preferring to add custom options to pgbasebackup and for enterprises with big databases TB wishing to restore data from external backup through highthroughput network and to not have any impact on master at restore process I propose to specify the option in cluster config or for nodes in particular that describes the custom sequence of strategies to restore standby node as its implemented in patroni I see it have to be specified as array sequence of objects each of which consists of dataRestoreCommand field describing data restoring and optional archiveRecoverySettings that describes WAL recovery Custom recovery stops as soon as any first strategy succeeds Any thoughts ideas or objections Given the resolutions to the following issues I felt that having an explicit doc would increase visibility for the solution Hence this PR In sentinel when timerSincekihTimer ssleepInterval will delete this keeperInfo but the time between twice check is already ssleepInterval so should it more than ssleepInterval Correct me if i am wrong else if kihSeen timerSincekihTimer ssleepInterval Remove since it wasnt updated deletetmpKeepersInfo kiUID Currently sleepInterval is respected by keeper and sentinel It is not there for proxy sgotti Correct me if I am wrong Can we add it proxy We dont have timeout for libkv based storeswe are using consul at here Can we add it Is there any reason for not having it