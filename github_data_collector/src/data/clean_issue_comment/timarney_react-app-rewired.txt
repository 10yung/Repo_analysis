Id like to change webpack dev server port on configoverrides files since I dont want to pollute our packagejson file Ive tried using the following configuration without success js moduleexports devServer functionconfigFunction return functionproxy allowedHost const config configFunctionproxy allowedHost configport return config I have the configoverrides file as below const WorkboxWebpackPlugin requireworkboxwebpackplugin const eslintdisableline override fixBabelImports addLessLoader addExternalBabelPlugins useEslintRc addDecoratorsLegacy addWebpackModuleRule disableEsLint addWebpackAlias requirecustomizecra const path requirepath moduleexports function overrideconfig env fixBabelImportsimport libraryName idb libraryDirectory configplugins configpluginsmapplugin if pluginconstructorname GenerateSW return new WorkboxWebpackPluginInjectManifest swSrc srcswjs swDest serviceworkerjs return plugin return config I try using customizecra to implement it but unsucessful Is there any way so that i can import the file in the swjs hey I have projectsseparate repositories projectmain using reactapprewired typescript version projectmodule different react repo also ts projectmodule different react repo also ts projectmodule and projectmodule are linked with yarn to projectmain and creates bundle inside of main project with ts compiler Current solution img width altScreenshot at src What I want to achieve img width altScreenshot at src Basically I need to get rid of part where modules compiles themselves to main project and instead that connect them somehow to main repository compiler in real time So whenever there will be local code change in folders projectmodule or projectmodule change will be automatically reflected on localhost There is also idea connect projectmain server to modules servers but I think it would be extremely complicated What do you think please I wanted to enable type module in packagejson in my project some silly reason like writing own helper scripts as ES modules whatever However it seems I cant use reactapprewired in this case node v tells me that yarn start yarn run v reactapprewired start node Warning require of ES modules is not supported require of myprojconfigoverridesjs from myprojnodemodulesreactapprewiredconfigoverridesjs is an ES module file as it is a js file whose nearest parent packagejson contains type module which defines all js files in that package scope as ES modules Instead rename myprojconfigoverridesjs to end in cjs change the requiring code to use import or remove type module from myprojpackagejson I cant rename my local configoverrides to cjs extension as thats not found by reactapprewired I seems that rewired hardcodes the name of the override file I wonder if perhaps rewired can be updated to be an ES module so that it can import all kinds of modulespackagesetc Or would that break other things