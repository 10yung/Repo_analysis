 Please make sure the issue reproduces on the master branch If you have an issue with project loading please include the output of cquery check path make sure to run cquery in your project directory Consider doing a debug build which has asserts enabled I use cquery in neovim through LanguageClientneovim I found whenever I open a file in a project sitehomexxxproject this is the project root there are two separate folders created in the cache directory One is sitehomexxxproject The other is sitehomexxxproject lets call them the dir and the dir NOTE In my system home is a symlink to sitehome Some of the files inside these folders duplicates Assume there is a file sitehomexxxprojectincludeahpp two separate cache files exists sitehomexxxprojectincludeahpp sitehomexxxprojecthomexxxprojectincludeahpp NOTE no site appeared in the filename with exactly the same content When I query some definitions both of them will popup in the list Is this the normal behavior What are the differences between the two directories cquery project seems to be no longer maintained by anyone Perhaps we can have it archived and add a description suggesting users to choose alternatives Could be a fork project like or official one like Undefined symbols for architecture x std sharedtimedmutexlockshared referenced from ImportManagerGetStatusstd basicstringchar std chartraitschar std allocatorchar const in importmanagercco std sharedtimedmutexunlockshared referenced from ImportManagerGetStatusstd basicstringchar std chartraitschar std allocatorchar const in importmanagercco std sharedtimedmutexlock referenced from anonymous namespaceIndexMainDoParseDiagnosticsEngine WorkingFiles FileConsumerSharedState TimestampManager anonymous namespaceIModificationTimestampFetcher ImportManager IIndexer in importpipelinecco QueryDbImportMainQueryDatabase ImportManager ImportPipelineStatus SemanticHighlightSymbolCache WorkingFiles in importpipelinecco std sharedtimedmutexunlock referenced from anonymous namespaceIndexMainDoParseDiagnosticsEngine WorkingFiles FileConsumerSharedState TimestampManager anonymous namespaceIModificationTimestampFetcher ImportManager IIndexer in importpipelinecco QueryDbImportMainQueryDatabase ImportManager ImportPipelineStatus SemanticHighlightSymbolCache WorkingFiles in importpipelinecco std sharedtimedmutexsharedtimedmutex referenced from RunQueryDbThreadstd basicstringchar std chartraitschar std allocatorchar const in commandlinecco DOCTESTANONSUITE FixtureFixture in importpipelinecco ld symbols not found for architecture x clang error linker command failed with exit code use v to see invocation gmake CMakeFilescquerydirbuildmake cquery Error gmake CMakeFilesMakefile CMakeFilescquerydirall Error Hi Raspberry Pi running Ubuntu The CXX compiler identification is GNU Check for working CXX compiler usrbinc Check for working CXX compiler usrbinc works Detecting CXX compiler ABI info Detecting CXX compiler ABI info done Detecting CXX compile features Detecting CXX compile features done Using downloaded Clang Downloading Clang Extracting downloaded Clang with CMake builtin tar The C compiler identification is GNU Check for working C compiler usrbincc Check for working C compiler usrbincc works Detecting C compiler ABI info Detecting C compiler ABI info done Detecting C compile features Detecting C compile features done Looking for pipe Looking for pipe found CMake Error at cmakeFindClangcmake message Error retrieving Clang resource directory with Clang executable Output homerichardcodecquerybuildclangllvm x linuxgnuubuntu binclang homerichardcodecquerybuildclangllvm x linuxgnuubuntu binclang ELF not found homerichardcodecquerybuildclangllvm x linuxgnuubuntu binclang homerichardcodecquerybuildclangllvm x linuxgnuubuntu binclang Syntax error unexpected Call Stack most recent call first CMakeListstxt findpackage Configuring incomplete errors occurred See also homerichardcodecquerybuildCMakeFilesCMakeOutputlog make No targets specified and no makefile found Stop make No rule to make target install Stop Obviously this is never going to work as the Raspberry Pi is an Arm architecture so why is it trying to download and run the x version Thanks Richard Hi This is pretty frustrating to be honest why is the build process downloading a compiler when it is already installed Ubuntu The issue cmake DCMAKEBUILDTYPERelease DCMAKEINSTALLPREFIXrelease DCMAKEEXPORTCOMPILECOMMANDSYES The CXX compiler identification is GNU Check for working CXX compiler usrbinc Check for working CXX compiler usrbinc works Detecting CXX compiler ABI info Detecting CXX compiler ABI info done Detecting CXX compile features Detecting CXX compile features done Using downloaded Clang Downloading Clang But clang is already installed apt policy clang clang Installed Candidate Version table discouniverse amd Packages varlibdpkgstatus Why cant the build process just use the installed version Thanks Richard Please make sure the issue reproduces on the master branch If you have an issue with project loading please include the output of cquery check path make sure to run cquery in your project directory Consider doing a debug build which has asserts enabled Platform win editor vscode Environment variables are listed below set MSMPI MSMPIBENCHMARKSC Program Files Microsoft MPI Benchmarks MSMPIBINC Program Files Microsoft MPI Bin MSMPIINCC Program Files x Microsoft SDKs MPI Include MSMPILIB C Program Files x Microsoft SDKs MPI Lib x MSMPILIB C Program Files x Microsoft SDKs MPI Lib x And the ccpppropertiesjson is configurations name Win includePath workspaceFolder envMSMPIBIN envMSMPIINC envMSMPILIB defines DEBUG UNICODE UNICODE windowsSdkVersion compilerPath CProgram Files x Microsoft Visual Studio CommunityVCToolsMSVC binHostx x clexe cStandard c cppStandard c intelliSenseMode msvcx version However cpptools can pharse the environment variables envMSMPIBIN envMSMPIINC and envMSMPILIB but cquery cannot The reason is that these environment variables have space within them which is frequently occurred in Windows I hope it could be fixed An apt repository would avoid the need for people to have to compile CQuery from source easing the installation process and allowing for easier removal if they change their minds The text CLICK HERE was not clickable The following wiki page should probably be removed It only shows four letters unko The main repository page shows this text Getting started CLICK HERE which links to The previous Getting Startedmd wiki file was deleted in this commit More tidying up DaanDeMeyer DaanDeMeyer committed on Jul ea 