Hello When migrating from to my PHPUnit fails when I have a emrefreshentity inside a test I have a skeleton app to reproduce the issue Here is the error There was error App Tests Controller AdminFlatControllerTesttestEditFlat Doctrine ORM ORMInvalidArgumentException Entity App Entity Flat ce b is not managed An entity is managed if its fetched from the database or registered as new through EntityManagerpersist UsersadrienwilmetSitessfskeletonvendordoctrineormlibDoctrineORMORMInvalidArgumentExceptionphp UsersadrienwilmetSitessfskeletonvendordoctrineormlibDoctrineORMUnitOfWorkphp UsersadrienwilmetSitessfskeletonvendordoctrineormlibDoctrineORMUnitOfWorkphp UsersadrienwilmetSitessfskeletonvendordoctrineormlibDoctrineORMEntityManagerphp UsersadrienwilmetSitessfskeletontestsControllerAdminFlatControllerTestphp Here is my test internal class AdminFlatControllerTest extends CreateEntityWebTestCase public function testEditFlat flat thisemgetRepositoryFlatclassfindOneByNotetest crawler thisclientrequestGET sprintfadminflatdedit flatgetId thisassertEquals thisclientgetResponsegetStatusCode buttonNode crawlerselectButtonadmineditflatsubmit form buttonNodeform form admineditflat guests crawler thisclientsubmitform thisassertEquals thisclientgetResponsegetStatusCode thisemrefreshflat thisassertEquals flatgetGuests And CreateEntityWebTestCase php namespace App Tests use Doctrine ORM EntityManagerInterface use Symfony Bundle FrameworkBundle Client use Symfony Bundle FrameworkBundle Test WebTestCase use Symfony Component PropertyAccess PropertyAccess use Symfony Component PropertyAccess PropertyAccessor internal class CreateEntityWebTestCase extends WebTestCase var Client protected client var EntityManagerInterface protected em var PropertyAccessor protected propertyAccessor protected function setUp void parentsetUp if null statickernel statickernelshutdown thisclient selfcreateClient thisclientdisableReboot thisem selfcontainergetdoctrineormentitymanager thisembeginTransaction thisemgetConnectionsetAutoCommitfalse protected function tearDown void thisemrollback thisemclose thisem null thisclient null parenttearDown Am I missing a configuration change somewhere Fixes Btw I was trying to find how other people deprecated this and found that nobody actually did not even Symfony Not even with readme entry like we are doing here Hi everyone Small question about DropDatabaseDoctrineCommand is there any historical reasons to not define a shortcut when it comes to force shard connection and ifexists Thanks a lot for the answer and have a great day This PR adds a copy button on runnable queries I also took the opportunity to copy paste all the specific CSS for the Doctrine panel from Symfony core inside this bundle so we can remove it from Symfony core in Let me know if you prefer to have the two things splitted for clarity Screenshot img width altScreenshot at src This just reflects the command from upstream in the same way the other commands are See doctrinedbal This feature will allow you to register EntityMessageCollector as an event listener This class will be merged into Symfony When injecting an entity manager into a service auto wiring the service by using the EntityManagerInterface type will always wire the default entity manager This makes it complicated to inject a custom entity manager for users that have more than one manager configured To select a correct entity manager users would have to create a specific entity manager for each entity that decorates the entity manager service created This could be done automatically in a compiler pass by using a service tag which specifies which entity manager to use The syntax would be simple xml tag namedoctrineentitymanager entityApp Entity MyEntity Same goes for repositories Currently users have to create an empty repository class if they want to use service repositories that they can inject into other services To avoid this boilerplate code we can leverage the same technique xml tag namedoctrinerepository entityApp Entity MyEntity This is similar to what the MonologBundle does when configuring a channel using the monologlogger tag Description I would like to create an alternative to fallback of this command if the database is not created For example by putting the command to create it or directly ask if you want to create it This avoids wasting time What do you think of that Example Replace By Unknown database symfony Do you want to run doctrinedatabasecreate instead yesno no OR You need use this command php binconsole doctrinedatabasecreate or create your database in a different way i have a case where i dont execute commands in production environment so i dont need symfonyconsole and registration of the commands in the production code I was wondering if priority support could be added to entity listeners tags in the compiler pass as its supported for doctrine eventsubscriber and eventlistener tags in doctrine symfony bridge 