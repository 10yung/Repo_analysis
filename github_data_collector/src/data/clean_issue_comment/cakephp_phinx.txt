Hi I create a PR for adding the support of json output format for the status command run from the TextWrapper utility extension Please review and accept if considered useful Let me know any consideration Thanks With this simple PR we grant the TextWrapper status command the support for json output format for ease of use Looking quickly at the official docs we can found on the beginning of the description this phrase It is preferred that you write your migrations using the Phinx PHP API but raw SQL is also supported Phynx Migrations But if in my migration folder I put files containing SQL code like createsql additionalsql and then run phynx migrate I found in the database just being generating the table for the phynx migration log empty but none of the sql files are being executed I also get a correct output from terminal but without any migration listed My configuration its ok either for db connection data and for folder paths What does exactly raw SQL support means and how to make it work Thanks php smallSerial new Phinx Db Table ColumnsetNameid setType Phinx Db Adapter AdapterInterfacePHINXTYPESMALLINTEGER setIdentityTRUE thistabletest id FALSE primarykey id addColumnsmallSerial create The result table contains column id with type integer instead smallint This is because of this code php buffer columngetType biginteger BIGSERIAL SERIAL Can any one fix this I seem to be unable to use the external variables as mentioned here When running vendorbinphinx status I get the connection error where the variables have not been replaced with values Eg There was a problem connecting to the database SQLSTATE HY Access denied for user PHINXDBUSERlocalhost using password YES Im using Docker with a separate database container When using the hardcoded values for the db connection in phinxyml I am able to connect Fix There is an error in SQLiteAdapter that creates the columns as NULL despite having indicated the field as NOT NULL Currently the only way to create a NOT NULL field is to specify a DEFAULT value for that column With this change it is allowed to create a NOT NULL column without indicating its DEFAULT value In order to allow for backward compatibility this change will cause SQLiteAdapter continue to create a column as NULL by default when it is not specified whether it is null or not Per the docs you can now do the following CREATE TABLE geom p POINT SRID g GEOMETRY NOT NULL SRID Where now those columns have a set SRID This was not available prior to The getColumns function for the PostgresAdapter does not handle geometric or geographic types very well missing in capturing the defined shape as well as set coordinate system This is due to the fact that this information is not set in the informationschemacolumns table but rather Postgis defines two secondary tables geometrycolumns and geographycolumns tables While cycling through each column if the type is geography or geometry query the above tables as appropriate eg SELECT FROM publicgeographycolumns WHERE ftableschema s AND ftablename s Hello On some DBMS like PostgreSQL it is possible to have deferrable constraints This is useful and we use this feature for almost all of our Foreign Key constraints It seems that it is not possible to have this feature when using the addForeignKey function It there something that I missed or it is not implemented in Phinx If it is not implemented is there any chance to have this feature supported in Phinx