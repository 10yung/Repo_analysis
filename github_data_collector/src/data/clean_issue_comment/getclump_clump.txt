Currently a lot of confusion at work comes from the fact that Clumps can be in one of states State Successful contains the expected element State Failed contains an exception State Undefined key was missing from batch get contains neither element nor exception This commit unifies states and into a single Failed state by introducing ClumpNoSuchElementException which gets thrown when a key is missing from a batch get Currently this only changes the internal implementation and not the public API It greatly simplifies the internal implementation because Clumps dont store Options anymore In the future I would like to expose ClumpNoSuchElementException and allow it to be the main way of dealing with missing keys The two main goals I have with this commit are reduce the number of possible states a Clump can be in simplify the API by removing extraneousconfusing methods To accomplish these goals Ive deprecated the following things so that they can be removed in version Methods that only dealt with state orElse orDefault getOrElse list get With the ClumpNoSuchElementException exposed these methods could all be implemented in user code instead of special subclasses of Clump Methods that are synonyms for other methods handle rescue Clumpapply Clumpvalue Clumpexception Clumptraverse and Clumpcollect and Clumpsequence that had parameters lists Clumpcollect The following behaviour changes will be introduced in version Clumpsequence will no longer filter out undefined clumps Instead mark each Clump as optional and then flatten the resulting list recover and recoverWith will allow you to match on ClumpNoSuchElementException fallback and fallbackTo will catch ClumpNoSuchElementExceptions Somewhat unrelated I would also like to rename Clumpfuture to Clumpapply because it gets used so often but the current apply method has to be deprecated first This commit will turn into version which follows versioning rules because no behaviour is changing The only other change is that apply now throws a ClumpNoSuchElementException but this is a subclass on NoSuchElementException so its backwards compatible Id like to be able to use clump from ScalaJS The cross build itself is simple but the pull request has many changes because specs isnt compatible with ScalaJS so I had to migrate the tests to use 