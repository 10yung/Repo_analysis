Not for merging This PR fix the navigator decencies that were remove a bit too eagerly in f e c e abc b f e af c b Before this PR the command bazel run navigatornavigatorbinary server failed with the error message Version Exception in thread main javalangClassNotFoundException akkaeventslf jSlf jLoggingFilter at javanetURLClassLoaderfindClassURLClassLoaderjava at javalangClassLoaderloadClassClassLoaderjava at sunmiscLauncherAppClassLoaderloadClassLauncherjava at javalangClassLoaderloadClassClassLoaderjava Pull Request Checklist Read and understand the contribution guidelines Include appropriate tests X Set a descriptive title and thorough description Add a reference to the issue this PR will solve if appropriate X Include changelog additions in one or more commit message bodies between the CHANGELOGBEGIN and CHANGELOGEND tags Normal production system change include purpose of change in description NOTE CI is not automatically run on nonmembers pullrequests for security reasons The reviewer will have to comment with AzurePipelines run to trigger the build This PR fixes a minor issue where we were including more references than we need which causes problems on older SDKs where GHCPrim is not a stable module since GHCPrim cannot be imported it s builtin GHC magic More importantly this PR adds a test for crossSDK datadependencies against the DAVL DAR which is built with SDK before we started making all the changes The test also includes a slightly hacky but mostly reasonable way of actually using the templates instead of just the data types from the DAVL DAR which and a scenario to test this changelogbegin changelogend Pull Request Checklist Read and understand the contribution guidelines Include appropriate tests Set a descriptive title and thorough description Add a reference to the issue this PR will solve if appropriate Include changelog additions in one or more commit message bodies between the CHANGELOGBEGIN and CHANGELOGEND tags Normal production system change include purpose of change in description NOTE CI is not automatically run on nonmembers pullrequests for security reasons The reviewer will have to comment with AzurePipelines run to trigger the build This PR extends OptionalT so as to support nested optionals This issue tracker is only for technical issues related to the DAML SDK If you suspect that your issue has a security impact do not use this issue tracker In that case please contact securitydigitalassetcom and follow our responsible disclosure policy For general questions about DAML andor support request you should use Stack Overflow Here is the scenario describes the issue When partyA and partyB both can exercise a nonconsuming choice on contractC to create multiple contracts eg spamming contractCA contractCA contractCB contractCB if partyA and partyB queries contractssearch immediately right after their choice exercise interchangeablyconcurrently the query store gets confused on which cached query result to serve to which party As a result from partyA s perspective the query result of contractssearch POST for specific templateId has less data compared to the result of a postfilter of contractssearch GET by using that templateId After run truncate table templateid cascade directly on the query store database and do a contractssearch POST again as partyA the result for that specific templateId matches the result of contractssearch GET however if partyB exercise query again the result becomes indeterministic again Please see the below model with scenariosteps for reproducing and reach out to limada if you cannot reproduce Copyright c The DAML Authors All rights reserved SPDXLicenseIdentifier Apache daml module Main where import DAList template Chat with operator Party creator Party members Party name Text where signatory operator observer members choice ChatAddMembers ContractId Chat with member Party newMembers Party controller member do create this with members dedup newMembers members nonconsuming choice ChatPostMessage ContractId Message with poster Party message Text controller poster do create Message with sender poster recipients members template Message with sender Party message Text recipients Party where signatory sender observer recipients setup scenario do operator getParty Operator alice getParty Alice bob getParty Bob operator creates a chat on behalf of Alice chatCid operator submit create Chat with creator alice members alice name sleekcheek alice sends a message helloCid alice submit exercise chatCid ChatPostMessage with poster alice message first message without invite Bob and query as Alice after do a contractssearch POST with Alices party token templates moduleNameMainentityNameChatmoduleNameMainentityNameMessage everything from Alice match contractssearch GET operatoralice adds bobas a member to chat Chat gets recreated chatCid operator submit exercise chatCid ChatAddMembers with member operator newMembers bob act as Bob and bob sends a message goodbyeCid bob submit exercise chatCid ChatPostMessage with poster bob message Bob enters and post first message query as Bob after repeat contractssearch POST but with Bobs party token then contractssearch POST with Alices party token and you can see there are missing results compared with contractssearch GET results matches after you run truncate table templateid cascade return This fixes the ZIP modification times in all DARs to a specific value whereas they used the current time before This both gives us the nice property that not only our DALF builds but also DAR builds should be deterministic and there is a test for this I have a suspicion that this could help significantly with build times and avoid rerunning half of the Scala tests on a change to damlc that should not change the DALFs changelogbegin DAML Compiler The modification times in a DAR are now fixed to a given value which makes the output of daml build deterministic in singlethreaded mode which is the default changelogend Pull Request Checklist Read and understand the contribution guidelines Include appropriate tests Set a descriptive title and thorough description Add a reference to the issue this PR will solve if appropriate Include changelog additions in one or more commit message bodies between the CHANGELOGBEGIN and CHANGELOGEND tags Normal production system change include purpose of change in description NOTE CI is not automatically run on nonmembers pullrequests for security reasons The reviewer will have to comment with AzurePipelines run to trigger the build This issue tracker is only for technical issues related to the DAML SDK If you suspect that your issue has a security impact do not use this issue tracker In that case please contact securitydigitalassetcom and follow our responsible disclosure policy For general questions about DAML andor support request you should use Stack Overflow contractssearch GET POST shouldnt work when specified ledgerid is different from the sandboxs ledgerid however commandcreate works as expected erroring out ledgerid mismatch Please investigate Looking through the logs of the docs cron for release I have discovered a few minor issues This is the first in a series of corresponding fixes attempting to address the fact that the builds have not managed to successfully verify any of the checksums The docs build is currently not reproducible as it include totheminute timeofbuild information It also includes some Sphinx binary caches which I suppose will also not be reproducible though I have not checked the details there This commit attempts to remove all sources of nonreproducibility from the docs build though this is hard to test without having a stable older release to compare with Support DAMLLF type synonyms in scala code base AST decode type check tiny fix to Haskell pretty printer for Type Synonyms Currently the daml compiler doesnt create any type synonyms so to test this code I made a temporary mod to LFConversionhs which introduces a synonym for every field of every record type and ran the integration tests Few things still TODO marked in code Pull Request Checklist Read and understand the contribution guidelines Include appropriate tests Set a descriptive title and thorough description Add a reference to the issue this PR will solve if appropriate Include changelog additions in one or more commit message bodies between the CHANGELOGBEGIN and CHANGELOGEND tags Normal production system change include purpose of change in description NOTE CI is not automatically run on nonmembers pullrequests for security reasons The reviewer will have to comment with AzurePipelines run to trigger the build Because of the way the DAML standard library docs are recombined across packages and make frequent use of MOVE the stdlib ends up with a lot of orphan instance docs that arent really orphan instances Well they really are orphan instances but they shouldnt be considered orphan instances as far as the standard library docs are concerned because users dont need to worry about how these are implemented Pruning these is expensive and complicated but a simple approach that gets us of the way there is to just drop all orphan instance docs from the stdlib docs This PR refactors DADamlDocTransform into separate modules adds a droporphaninstances flag and uses this flag to improve the stdlib docs CHANGELOGBEGIN DAML SDK Added a droporphaninstances flag in daml damlc docs CHANGELOGEND Pull Request Checklist Read and understand the contribution guidelines Include appropriate tests Set a descriptive title and thorough description Add a reference to the issue this PR will solve if appropriate Include changelog additions in one or more commit message bodies between the CHANGELOGBEGIN and CHANGELOGEND tags Normal production system change include purpose of change in description NOTE CI is not automatically run on nonmembers pullrequests for security reasons The reviewer will have to comment with AzurePipelines run to trigger the build 