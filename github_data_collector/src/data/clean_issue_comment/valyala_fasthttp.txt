You can use the following methods in the handler to find out which listener the connection is coming in on go RequestCtxIsTLS RequestCtxLocalAddr RequestCtxRequestHeaderHost For what it worth I feel it would be useful to provide use case and wiki so that anyone can get confident about using FastHTTP for their project Wiki can provides inner details on FastHTTP or any useful info for developers who haven t explore into Go yet Although there is a blog As of now the only way to override Host header is to use HostClient as per Issue This means we have to manage reusingcleanup of HostClients ourselves which fasthttpClient provided out of the box We will be writing something very similar to fasthttpClient to handle this Is it ok to remove the HostClient if it is not being used from more than MaxIdleConnDuration or something as we are sure all goroutines for individual connection cleaning would have run We dont have access to connsCount as it is an unexported field and was modified to use connsCount instead of time go if tSubvLastUseTime MaxIdleConnDuration deletem k If not what is the recommendation here Hi I develop an interface for the Neo j HTTP API fasthttp is very powerful Thanks Running tool D Go bin goexe test benchmem run POC Neo j test bench BenchmarkNeo jHTTPAPI v goos windows goarch amd pkg POCNeo jtest BenchmarkNeo jHTTPAPI nsop Bop allocsop PASS ok POCNeo jtest s Success Benchmarks passed Hi Was trying the following piece of code The idea here is concurrent requests are received from the users in the main and those requests further sent to endpoints in req concurrently Each request in main is sent to endpoints concurrently This code is just to check max QPS handled at the server This code fails at higher concurrency wrk t c d s After running wrk no free connections available to host appear in the error log I understood what valyala has explained in But ctxRequestResetConnectionClose is no longer seems to be present in the package Also couldnt find any alternative var c fasthttpClient var wLog osFile func main runtimeGOMAXPROCSruntimeNumCPU fmtPrintlnStart test const n c fasthttpClient ReadTimeout timeMillisecond WriteTimeout timeMillisecond cLog osOpenFiletestlog osOAPPENDosOWRONLYosOCREATE wLog osOpenFilewarnlog osOAPPENDosOWRONLYosOCREATE logPrint e fasthttpListenAndServe funcctx fasthttpRequestCtx start timeNow done makechan bool for range n int go reqdone for range n int done t colorBoldtimeSincestartRoundtimeMillisecond LLogItcLog map string string T t fmtFprintfctx ok if e nil fmtPrintlne func reqdone chan bool rq fasthttpAcquireRequest rp fasthttpAcquireResponse defer func fasthttpReleaseRequestrq fasthttpReleaseResponserp rqSetRequestURI rqReset Did not help rqResetBody same here rqResetConnectionClose No longer exists as answered in issue by valyala if e cDoTimeoutrq rp timeMillisecond e nil LLogItwLog map string string E colorRede else fmtPrintlnrpBody done true So how do I fix this Thanks Hi the nethttp package exposes two handy method which are SetBasicAuth BasicAuth I could not find those helpers for the Header in the project Am I missing something If not what do you think about implementing them as it is related to I would not mind doing it The CopyTo method does not copy multipartForm Hi valyala erikdubbelboer kirillDanshin I am wondering whether we ought to migrate fasthttp into an organization fasthttp is widely used and it is definitely going to thrive so I think its better to make fasthttp a formalized opensource project and migrating into an organization could be the first step to do that Ive already seen an organization fasthttp created by kirillDanshin and what is the blocker that stops the migration BTW thanks for your efforts in building such a awesome http framework fix cannot use custom host in header usually used in proxy the same as proxysetheader Host host in nginx see I use reqHeaderReadbufioNewReaderbuf to get request and i need sent this request to a special host so i call reqSetHostSPECIALADDR but then request head Host value has been change too i think maybe there is a typo