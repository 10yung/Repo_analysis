Hi After updating from to my prepush hook stopped working I get error as below githooksprepush export refsheadsmaster bad variable name huskyrcjs moduleexports hooks commitmsg commitlint e HUSKYGITPARAMS precommit lintstaged prerebase lintstaged prepush branchnamelint OS Ubuntu Node Git Logs huskydebug husky v created at huskydebug precommit hook started huskydebug Current working directory is homejakubPulpittest huskydebug precommit hook started husky precommit node v No staged files match any of provided globs huskydebug yarn run silent huskyrun exited with exit code On branch choreupdate Using pnpm husky v and this config json scripts test mocha testtestjs husky hooks precommit lintstaged prepush test lintstaged js eslint fix git add The precommit hook works fine but the prepush always fails without running test sh export HUSKYDEBUG time git push huskydebug husky v created at AM huskydebug prepush hook started huskydebug Current working directory is homesesamathprojetsgitsesaparcours huskydebug prepush hook started husky prepush node v husky prepush hook failed add noverify to bypass huskydebug pnpx noinstall huskyrun exited with exit code error failed to push some refs to gitframagitorgSesamathsesaparcoursgit real m s but pnpm test works fine time pnpm test devnull echo test exit code real m s user m s sys m s test exit code If you like husky please consider supporting this project by clicking the Sponsor button Weve noticed Husky can add a significant overhead to git commands when used together with Yarn due to the fact that it needs to spawn at least one Node process for each hook called and multiple hooks are called when doing a commit and Node processes arent exactly cheap What would you think of adding a pay only for what you use mode where Husky would only add hooks that are actually used by the project In most cases that would limit them to precommit and if you want to addremove a hook youd just have to run yarn husky to regenerate them I could open a PR if you think that would be useful Hi guys I already used husky Unfortunatly now I work for a project where if user push on master the push will trigger a production release It is possible to catch the push with husky and print some red text color whit are you sure yesno And if User tap yes it will push when i install husky v xx I found below error npm git node version is in below screenshot I saw the source code Found processenvINITCWD is undefined js Get INITCWD env variable function getInitCwdEnv const INITCWD processenv INITCWD is undefined if INITCWD undefined const name version whichpmruns default throw new ErrorINITCWD is not set please upgrade your package manager name version debug debugINITCWD is set to INITCWD return INITCWD husky version is in below image OS MacOS C Git git version which git usrlocalbingit node v v which node usrlocalbinnode which npx usrlocalbinnpx Nodejs installed with brew package manager husky When making commit in VSCode GUI Cant find npx in PATH usrlocalCellargit libexecgitcoreusrbinbinusrsbinsbin Skipping precommit hook Cant find npx in PATH usrlocalCellargit libexecgitcoreusrbinbinusrsbinsbin Skipping preparecommitmsg hook Cant find npx in PATH usrlocalCellargit libexecgitcoreusrbinbinusrsbinsbin Skipping commitmsg hook Cant find npx in PATH usrlocalCellargit libexecgitcoreusrbinbinusrsbinsbin Skipping postcommit hook Everything works fine when making commit from VSCode terminal hr Version works fine Sample output from v Info cant find node in PATH trying to find a node binary on your system husky precommit node v Stashing changes started Stashing changes skipped No partially staged files found Running tasks started Running tasks for jststsxcssmd started tslint fix started tslint fix completed prettier write started prettier write completed git add started git add completed Running tasks for jststsxcssmd completed Running tasks completed Support Array of Commands will be useful for non js config files Closes The recent change to have husky exit with a real error code is causing my CI build to fail For a variety of historical reasons we dont have git available during our CI builds the old behavior of having husky fail to install silently was quite beneficial to us in this situation I can see that generally the error code is a good thing but would you be open to allowing a silent failure if for example a CI specific environment variable was set MacOS iterm w ohmyzsh My config from husky x is not working for x but works for This is my config husky hooks precommit lintstaged preparecommitmsg scriptsaddtpnumbertocommitsh HUSKYGITPARAMS The specific script Im using hasnt changed and it only uses from HUSKYGITPARAMS Output HUSKYDEBUG git commit m upgrade husky version huskydebug husky v created at PM huskydebug precommit hook started huskydebug Current working directory is Usersparkerjohnsongitproject huskydebug precommit hook started husky precommit node v Stashing changes skipped No partially staged files found Running tasks huskydebug npx noinstall huskyrun exited with exit code huskydebug husky v created at PM huskydebug preparecommitmsg hook started huskydebug Current working directory is Usersparkerjohnsongitproject huskydebug preparecommitmsg hook started husky preparecommitmsg node v cat message No such file or directory huskydebug npx noinstall huskyrun exited with exit code Support all documented git hooks with githookslist module Missing hooks fsmonitorwatchman p presubmit postindexchange FYI this githookslist module is build to sort huskyhooks field in packagejson 