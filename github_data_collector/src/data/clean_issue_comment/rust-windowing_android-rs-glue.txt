Used by cargoflutter Makes a couple of things public adds support for passing additional rust flags configload function takes a cargocorePackage replaces cargocoreTarget with BuildTarget in buildapks I developed bindings to c library which widely uses global variables which requires runtime initializationfinalization The library builds using clang from android NDK I have many linking errors like an error undefined reference to dsohandle when I build application Im sure that this is common problem but I still cannot find appropriate workaround which can help solve this I guess that linker itself should use appropriate crto module to deal around it but I dont know details why this is not so Command is failing with following message binsh eo pipefail echo DOCKERHUBPASSWORD docker login u DOCKERHUBLOGIN passwordstdin docker push IMAGENAME Error response from daemon Get unauthorized incorrect username or password Exited with code cc tomaka Currently it is difficult to interact with the JNI and NDK through rust This issue is asking for A way to insert code called on the main thread at startup In java or preferably rust A more exposed java interface for more complex calls to java code This can be mostly covered by androidndkrs but a portion of it should probably be done here This is closer to a goal than an issue When I migrated my project to cargoapk from the current dev branch I ran into this problem Test project cargoapkreprocasezip Output Compiling injectedglue for armv linuxandroideabi Compiling cargoapktest v D Sources cargoapktest Finished dev unoptimized debuginfo targets in s armeabiv a Compile thumb androidnativeappglue androidnativeappgluec armeabiv a StaticLibrary libandroidnativeappgluea armeabiv a SharedLibrary libcargoapktestso D Sources cargoapktest target armv linuxandroideabi debug build glutineglsys abc f cc d d outeglbindingsrs error undefined reference to eglGetDisplay D Sources cargoapktest target armv linuxandroideabi debug build glutineglsys abc f cc d d outeglbindingsrs error undefined reference to eglInitialize D Sources cargoapktest target armv linuxandroideabi debug build glutineglsys abc f cc d d outeglbindingsrs error undefined reference to eglMakeCurrent D Sources cargoapktest target armv linuxandroideabi debug build glutineglsys abc f cc d d outeglbindingsrs error undefined reference to eglQueryString D Sources cargoapktest target armv linuxandroideabi debug build glutineglsys abc f cc d d outeglbindingsrs error undefined reference to eglChooseConfig D Sources cargoapktest target armv linuxandroideabi debug build glutineglsys abc f cc d d outeglbindingsrs error undefined reference to eglCreateContext D Sources cargoapktest target armv linuxandroideabi debug build glutineglsys abc f cc d d outeglbindingsrs error undefined reference to eglDestroyContext D Sources cargoapktest target armv linuxandroideabi debug build glutineglsys abc f cc d d outeglbindingsrs error undefined reference to eglDestroySurface D Sources cargoapktest target armv linuxandroideabi debug build glutineglsys abc f cc d d outeglbindingsrs error undefined reference to eglGetProcAddress D Sources cargoapktest target armv linuxandroideabi debug build glutineglsys abc f cc d d outeglbindingsrs error undefined reference to eglGetConfigAttrib D Sources cargoapktest target armv linuxandroideabi debug build glutineglsys abc f cc d d outeglbindingsrs error undefined reference to eglGetCurrentContext D Sources cargoapktest target armv linuxandroideabi debug build glutineglsys abc f cc d d outeglbindingsrs error undefined reference to eglGetCurrentDisplay D Sources cargoapktest target armv linuxandroideabi debug build glutineglsys abc f cc d d outeglbindingsrs error undefined reference to eglGetCurrentSurface D Sources cargoapktest target armv linuxandroideabi debug build glutineglsys abc f cc d d outeglbindingsrs error undefined reference to eglCreateWindowSurface D Sources cargoapktest target armv linuxandroideabi debug build glutineglsys abc f cc d d outeglbindingsrs error undefined reference to eglCreatePbufferSurface D Sources cargoapktest target armv linuxandroideabi debug build glutineglsys abc f cc d d outeglbindingsrs error undefined reference to eglBindAPI D Sources cargoapktest target armv linuxandroideabi debug build glutineglsys abc f cc d d outeglbindingsrs error undefined reference to eglGetError clangexe error linker command failed with exit code use v to see invocation make objlocalarmeabiv alibcargoapktestso Error error process didnt exit successfully cmd C D AndroidNDK androidndkr b buildndkbuildcmd NDKLIBSOUTlib exit code This was discussed a little in It would be great to rename androidversion minsdkversion and targetsdkversion to a more coherent naming scheme Some options could be buildsdkversion minsdkversion targetsdkversion buildandroidversion minandroidversion targetandroidversion androidplatform minandroidplatform targetandroidplatform However this is very much a breaking change so it merits some discussion The latest version of cargoapk on cratesio is while on GitHub it is now at While Android SDKNDK only run in x Termux shell supports aapt dx and ecj tools which offer a lighter alternative to Android SDKNDK Im wondering why cargoapk is calling gcc and other linkers from NDK For it to be used easily in Termux it could rather lookup the basic tools This builds on top of and allows users of cargoapk to configure the gradle build such that it operates entirely in offline mode Requires the user to set up a file that replaces the hardcoded jcenter repository thingy 