I create VMs using the following command in R vms gcevmclustervmprefixvmbasename clustersizeclustersize dockerimage mydocker sshargs listusernametestuser keypubhometestusersshgooglecomputeenginepub keyprivatehometestusersshgooglecomputeengine predefinedtype n highmem now when I SSH into the VMs I do not find the docker folder in the home directory testusertestservername gcloud beta compute project mytestproject ssh zone uscentral a rvm testuserrvm ls a bashhistory bashlogout bashprofile bashrc ssh Now the below command gives an error obviously testuserrvm docker pull gcriomytestprojectmyimageversion Unable to find image gcriomytestprojectmyimageversion locally usrbindocker Error response from daemon unauthorized You dont have the needed permissions to perform this operation and you may have invalid credentials To authenticate your request follow the steps in See usrbindocker run help I need to run the dockercredentialgcr configuredocker command to get the folderfile dockerconfigjson testuserrvm dockercredentialgcr configuredocker hometestuserdockerconfigjson configured to use this credential helper for GCR registries testuserrvm ls a bashhistory bashlogout bashprofile bashrc docker ssh Now testuserrvm docker pull gcriomytestprojectmyimageversion version Pulling from mytestprojectmyimage Digest sha abc d e f ghi j k l m no p qrs t Status Image is up to date for gcriomytestprojectmyimageversion gcriomytestprojectmyimageversion What I am trying to resolve I need the dockerconfigjson to appear in the VMs without SSHing in and running the dockercredentialgcr configuredocker command I get an error when Im trying to setup an instance i dont know why because Im following all the tutorial steps To Reproduce When I run project rootestvis zone uscentral a accountkey rootestvis b fjson SyssetenvCGEAUTHFILE accountkey GCEDEFAULTPROJECTID project GCEDEFAULTZONE zone gceglobalprojectproject gceglobalzonezone vm gcevmtemplate rstudio name rstudiobot username rstudio password rforpresident Instead of everything going ok I get the following error Request Status Code Error API returned Insufficient Permission Request had insufficient authentication scopes Session Info R version Platform x pclinuxgnu bit Running under Linux Mint Matrix products default BLAS usrlibx linuxgnublaslibblasso LAPACK usrlibx linuxgnulapackliblapackso locale LCCTYPEenUSUTF LCNUMERICC LCTIMEenUSUTF LCCOLLATEenUSUTF LCMONETARYptBRUTF LCMESSAGESenUSUTF LCPAPERptBRUTF LCNAMEC LCADDRESSC LCTELEPHONEC LCMEASUREMENTptBRUTF LCIDENTIFICATIONC attached base packages stats graphics grDevices utils datasets methods base other attached packages googleComputeEngineR loaded via a namespace and not attached Rcpp codetools listenv future packrat digest assertthat R jsonlite httr rlang curl fs googleAuthR tools glue parallel compiler askpass gargle globals memoise openssl What goes wrong Calling gcevmdelete or gcevmstop googleComputerEngineR package throws an error Request Status Code Error API returned Invalid value T Values must match the following regular expression az az az The datetime here appears to be the current datetime The problem seems to be the T in the datetime string Using R in Rstudio on Debian Linux I am posting here because I tracked the error down to the underlying function googleAuthRgarapigenerator but I cannot figure out where the datetime parsing error originates within that function Steps to reproduce the problem Start a vm vm gcevmvmssh Stop vm gcevmstopvm Or delete vm gcevmdeletevm Expected output No error Actual output Request Status Code Error API returned Invalid value T Values must match the following regular expression az az az Note that the vm does stop or is deleted depending on the function called despite the error Before you run your code please run optionsgoogleAuthRverbose and copypaste the console output here Check it doesnt include any sensitive info like auth tokens or accountIds you can usually just edit those out manually and replace with say XXX No output Session Info Please run sessionInfo so we can check what versions of packages you have installed attached base packages stats graphics grDevices utils datasets methods base other attached packages googleComputeEngineR googleCloudStorageR loaded via a namespace and not attached zip Rcpp compiler googleAuthR prettyunits remotes tools testthat digest packrat pkgbuild pkgload jsonlite memoise gargle rlang cli rstudioapi parallel curl yaml withr httr globals desc fs askpass devtools rprojroot glue listenv R processx sessioninfo callr magrittr codetools backports ps usethis assertthat future mime openssl crayon It should not let you launch a VM unless you specify the usernamepassword Is it possible to add in a vector of username and password I have tested with the gcevm with template rstudio and the following did not work as expected gcerstudioadduserinstance vm username cuser user password cuser user My installation version is cloudyrgoogleComputeEngineRb de e Describe the bug When connecting to google compute engine I am able to set up a machine but am not able to communicate with it To Reproduce r librarygoogleComputeEngineR Setting scopes to Successfully autoauthenticated via UsersKendallDocumentsprogrammingkeyjson Set default project ID to learning Set default zone to uswest a vm gcevm name newvm Name of the VM on GCE predefinedtype n standard template rstudio Use the rockerrstudio docker image username oprah password oprah Username and password for RStudio Server login Creating template VM Operation running Operation running Operation complete in secs VM Template rstudio running at On first boot wait a few minutes for docker container to install before logging in Google Compute Engine Instance Name newvm Created Machine Type n standard Status RUNNING Zone uswest a External IP Disks deviceName type mode boot autoDelete newvmbootdisk PERSISTENT READWRITE TRUE TRUE Metadata key value template rstudio googleloggingenabled true rstudiouser oprah rstudiopw oprah gcerdockerimage rockertidyverse newvm VM running gcevmstopvm Request Status Code Error lexical error invalid char in json text Not Found right here Not Found Error lexical error invalid char in json text Not Found right here supCreated on by the reprex package v sup Expected behavior I expected to be able to stop the virtual machine from within R studio Session Info R version Platform x appledarwin bit Running under macOS High Sierra Matrix products default BLAS SystemLibraryFrameworksAccelerateframeworkVersionsAFrameworksvecLibframeworkVersionsAlibBLASdylib LAPACK LibraryFrameworksRframeworkVersions ResourcesliblibRlapackdylib locale enUSUTF enUSUTF enUSUTF CenUSUTF enUSUTF attached base packages stats graphics grDevices utils datasets methods base other attached packages googleComputeEngineR loaded via a namespace and not attached Rcpp compiler googleAuthR prettyunits remotes tools digest pkgbuild jsonlite memoise evaluate rlang reprex cli rstudioapi curl parallel xfun withr httr knitr fs askpass globals rprojroot listenv R processx rmarkdown whisker callr clipr magrittr backports codetools ps htmltools assertthat future openssl crayon Additional context Thanks Hi all Ive also been struggling with this issue while trying to set up a VM cluster using gcevmcluster and unfortunately the solutions suggested both here and in have not been working Here is how my gcevmcluster is set up ssh list username crayn sshoverwrite FALSE keypub filepathCUsers crayn ssh idrsapub keyprivate filepathCUsers crayn ssh idrsa vms gcevmcluster vmprefix attempt clustersize dockerimage rockerrparallel sshargs ssh project gcegetglobalproject zone gcegetglobalzone Ive gone through all the suggestions both here and in but am getting the following error message Creating cluster with settings template rbase dynamicimage rockerrparallel wait FALSE predefinedtype n standard Operation running Operation running Operation complete in secs attempt VM running Setting up SSHusername craynsshoverwrite FALSEkeypub CUserscraynsshidrsapubkeyprivate CUserscraynsshidrsa Using sshkey files given as CUserscraynsshidrsapub CUserscraynsshidrsa Public SSH key uploaded to instance Testing cluster Failed to add the host to the list of known hosts C Users crayn AppData Local Temp RtmpkP Tshosts GetConsoleMode on STDINPUTHANDLE failed with My session then hangs for several minutes until it times out although it does creates the VM in my GCP Console After doing some investigation with trace the problem seems to isolate to gcesshaddkeys dosystem system It tried running the same arguments through system verbosely testcmd ssh testsargs c v o BatchModeyes o StrictHostKeyCheckingno o UserKnownHostsFileC Users crayn AppData Local Temp RtmpkP Tshosts i C Users crayn ssh idrsa crayn echo attempt ssh working system testcmd args testsargs wait TRUE stdout stderr This produced the following readout OpenSSHforWindows p LibreSSL debug Connecting to port debug Connection established debug identity file C Users craynsshidrsa type debug keyloadpublic No such file or directory debug identity file C Users craynsshidrsacert type debug keyloadpublic No such file or directory debug identity file C Users craynsshiddsa type debug keyloadpublic No such file or directory debug identity file C Users craynsshiddsacert type debug keyloadpublic No such file or directory debug identity file C Users craynsshidecdsa type debug keyloadpublic No such file or directory debug identity file C Users craynsshidecdsacert type debug keyloadpublic No such file or directory debug identity file C Users craynsshided type debug keyloadpublic No such file or directory debug identity file C Users craynsshided cert type debug keyloadpublic No such file or directory debug identity file C Users craynsshidxmss type debug keyloadpublic No such file or directory debug identity file C Users craynsshidxmsscert type debug Local version string SSH OpenSSHforWindows debug Remote protocol version remote software version OpenSSH debug match OpenSSH pat OpenSSH compat x debug Authenticating to as crayn debug SSH MSGKEXINIT sent debug SSH MSGKEXINIT received debug kex algorithm curve sha debug kex host key algorithm sshed debug kex serverclient cipher chacha poly opensshcom MAC implicit compression none debug kex clientserver cipher chacha poly opensshcom MAC implicit compression one debug expecting SSH MSGKEXECDHREPLY debug Server host key sshed SHA fJX gVMR gN SlA BCwZvvwmbt JlRQcXa LKfU Failed to add the host to the list of known hosts C Users crayn AppData Local Temp RtmpkP Tshosts debug rekey after blocks debug SSH MSGNEWKEYS sent debug expecting SSH MSGNEWKEYS debug SSH MSGNEWKEYS received debug rekey after blocks debug SSH MSGEXTINFO received debug kexinputextinfo serversigalgssshed sshrsarsasha rsasha sshdssecdsasha nistp ecdsasha nistp ecdsasha nistp debug SSH MSGSERVICEACCEPT received debug Authentications that can continue publickey debug Next authentication method publickey debug Offering public key RSA SHA R VhkqCUoT Clr qCBH dC AFD eUJopH q szWWMY C Users crayn ssh idrsa debug Authentications that can continue publickey debug Offering public key RSA SHA GPFycnKhdNiG HhPpxxcfmY oIkRSDF Dfu Bg kk C Users craynsshidrsa debug Server accepts key pkalg rsasha blen debug Authentication succeeded publickey Authenticated to debug channel new clientsession debug Requesting nomoresessionsopensshcom debug Entering interactive session debug pledge network debug clientinputglobalrequest rtype hostkeys opensshcom wantreply debug Sending command echo attempt ssh working debug clientinputchannelreq channel rtype exitstatus reply GetConsoleMode on STDINPUTHANDLE failed with debug clientinputchannelreq channel rtype eowopensshcom reply It seems to me that the problem has something to do with writing to the hosts file Do you have any suggestion to resolve this Originally posted by camraynor in Hardest bit is finding where the error logs are A section on logging and finding stuff Include docker exec it shiny bash ls varlog docker container ls docker logs containerid If a template VM had a startup script that ran the Docker container containing the R script that VM can be booted up by cloud scheduler or a cloud function Preventing the build at the moment 