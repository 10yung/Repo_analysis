I see modularization by layer How would packagemodularize by feature to improve build speeds fall into this I have a question the data model that are using for sending between activityfragment live the data model most likely domains data model but its can be serializedParcelized Hi Im new on Clean architecture and we are planning to convert our projectMVP to Clean architecture and Im making POC project from our code base and see how it goes for my team as the sample code the data fetch from the cache only the cache not expired or cached in our case is fetch the data from cached when fetching the data from network failed whatever case Any ideas App cant load data from the URL gives The layer defines the Bufferoo class but no mapper This is because the Domain layer is our central layer it knows nothing of the layers outside of it so has no need to map data to any other type of model Is there a detailed reason why the Domain Has no Mappings wouldnt a Bufferoo fetched from an external source need to be mapped to a Bufferoo in the domain Hi one question related to domain projectmodule Can you explain a little bit more what is a reason that usecases and domain logic are in the same module shouldnt it be more appropriate to separate usecases to application layer and domain entities with all their logic to domain layer This way the domain layer is shareable as enterprisewide rules More on stackexchange Application layer vs Domain layer On the screen that shows the members If I want to fetch the network on the pagination event like while the user is scrolling What would it be the best aproach Presentation gradle has def presentationDependencies rootProjectextcacheDependencies def presentationTestDependencies rootProjectextcacheTestDependencies but I guess that this has to be something like def presentationDependencies rootProjectextpresentationDependencies def presentationTestDependencies rootProjectextpresentationTestDependencies Also in dependenciesgradle presentationDependencies has to be changed to provide only the necessary libraries Updated gradle kotlin and travis configuration to compile with Android Oreo which is the default for new projects now