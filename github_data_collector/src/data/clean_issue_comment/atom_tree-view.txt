This might prevent unintended deletion of files if picked by ctrlrightclick The prefs contain the following two settings img width altScreen Shot at src The latter is available as command treeviewtogglevcsignoredfiles Would it be very complicated to make the first one available as command as well eg treeviewtoggleignorednames Background Id like to add a button to my flexbar which toggles the two settings thus showinghiding those ignored files in the tree view Thanks for considering this addition Bumps lodash from to details summaryCommitssummary ddfd b Bump to v b fce Rebuild lodash and docs be d Bump to v a fe b Rebuild lodash and docs e Bump to v e Rebuild lodash and docs fd a Bump to v e d Rebuild lodash and docs d Update OpenJS references eac Fix minified build Additional commits viewable in compare view details br Dependabot compatibility score Dependabot will resolve any conflicts with this PR as long as you dont alter it yourself You can also trigger a rebase manually by commenting dependabot rebase dependabotautomergestart dependabotautomergeend details summaryDependabot commands and optionssummary br You can trigger Dependabot actions by commenting on this PR dependabot rebase will rebase this PR dependabot recreate will recreate this PR overwriting any edits that have been made to it dependabot merge will merge this PR after your CI passes on it dependabot squash and merge will squash and merge this PR after your CI passes on it dependabot cancel merge will cancel a previously requested merge and block automerging dependabot reopen will reopen this PR if it is closed dependabot ignore this patchminormajor version will close this PR and stop Dependabot creating any more for this minormajor version unless you reopen the PR or upgrade to it yourself dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency unless you reopen the PR or upgrade to it yourself dependabot use these labels will set the current labels as the default for future PRs for this repo and language dependabot use these reviewers will set the current reviewers as the default for future PRs for this repo and language dependabot use these assignees will set the current assignees as the default for future PRs for this repo and language dependabot use this milestone will set the current milestone as the default for future PRs for this repo and language You can disable automated security fix PRs for this repo from the Security Alerts page details Prerequisites x Put an X between the brackets on this line if you have done all of the following Reproduced the problem in Safe Mode Followed all applicable steps in the debugging guide Checked the FAQs on the message board for common solutions Checked that your issue isnt already filed Checked that there is not already an Atom package that provides the described functionality Description If I use FileName to exclude certain files that would have been ignored otherwise Atoms function to show and hide ignored files from VCS does not work Steps to Reproduce Use FileName in your gitignore Expected behavior with i I should be able to toggle ignored files from VCS git Actual behavior see above Reproduces how often all the time Versions Atom Electron Chrome Node Additional Information Probably introduced with atom on my machine Ive only tested it with Python repositories running on windows Prerequisites x Put an X between the brackets on this line if you have done all of the following Followed all applicable steps in the debugging guide Checked the FAQs on the message board for common solutions Checked that your issue isnt already filed Checked that there is not already an Atom package that provides the described functionality Description I wrote a package which replaces the default TextEditor by a graphical view in angularjs To update the file I have ways of doing it directly from the package using fswriteFileSync to save it by executing a subprocess spawnexec which will overwrite the file we are viewing The problem is that when the file is updated by these ways it is not refreshed in the treeview no git status If I use alttab or change the current ubuntu workspace and return to my atom window then the treeview git status of the file is correctly changed Steps to Reproduce have a custom package In which the file URI is overwriten either by var fs requirefs fswriteFileSyncuri data either by a subprocess called with spawnexec functions Expected behavior I expect the file git status to be updated Actual behavior The git status of the file isnt updated Reproduces how often Versions Ubuntu atom version Atom Electron Chrome Node apm version apm npm node x atom python git Additional Information Description Tree view is not working since the last update Expected behavior is to see the project tree view of the file opened Steps to Reproduce With either a closed Atom OR opened Atom editor Open toplevel file in project folder Expected behavior Expected behavior is to see the project tree view with files in the project folder of the file opened Actual behavior Open toplevel file in project folder No Project Tree view visible for current editable file Reproduces how often of the time since last update Versions x Prerequisites X Put an X between the brackets on this line if you have done all of the following Reproduced the problem in Safe Mode Followed all applicable steps in the debugging guide Checked the FAQs on the message board for common solutions Checked that your issue isnt already filed Checked that there is not already an Atom package that provides the described functionality Description The Edit Copy menu select doesnt add files from the Tree View to the clipboard Steps to Reproduce Highlight a file in Tree View Open the Edit menu on the system bar and select Copy Attempt to paste the file into another directory in Tree View Expected behavior What you expect to happen The file should be added to the clipboard and pasted Actual behavior What actually happens The last object from the clipboard is pasted If it was code nothing happens If it was another file that file is erroneously pasted instead Reproduces how often What percentage of the time does it reproduce Always Versions Atom x apm macOS High Sierra Additional Information The expected behavior occurs if I use the context menu within tree view or cmdcv I have no idea what possessed me to attempt to manually use the Edit menu but there you have it Im not entirely sure what repo this belongs in however if I attempt to manually use the Edit menu CP with content from the core it works as expected The bug only affects the tree view This tries to make specs easier to follow and hopefully a little quicker as well This is an issue that is meant to spark some discussion and hopefully come to a conclusion regarding the expected behavior when copypasting or dragdropping squashed directories Currently Copypasting a squashed directory only copypastes the final directory in the chain given a squashed directory path dir dir dir only dir will be copypasted when selecting the squashed path Dragdropping a squashed directory moves only the final directory in the chain but does not update the visual appearance of the squashed directory it continues to appear as dir dir dir Attempting to draganddrop this squashed directory again results in an error being logged to console ENOENT about the directory path not being found as the last directory has been moved Collapsing and reexpanding the parent directory updates the visual appearance Proposals When manipulating squashed directories copymove only the last directory Benefits Each directory can be individually manipulated albeit with some TowerofHanoiing from leedohm Directory manipulation is consistent in the sense that the last folder is always moved Downsides The operation does not line up visually with what is selected When manipulating squashed directories copymove the entire squashed directory structure Benefits Directory manipulation is consistent in the sense that the operation will line up visually with what is selected Downsides There is no way to manipulate any of the intermediate directories When selecting squashed directories unsquash them Benefits Each directory can be individually manipulated and it is always clear what directory is being targeted Downsides Changes the visual appearance of the Tree View when a squashed directory is selected Prerequisites x Put an X between the brackets on this line if you have done all of the following Reproduced the problem in Safe Mode Followed all applicable steps in the debugging guide Checked the FAQs on the message board for common solutions Checked that your issue isnt already filed Checked that there is not already an Atom package that provides the described functionality Description Treeview startup and deserialization takes a fair chunk of time Its possible were triggering a synchronous directory walk of the project structure Steps to Reproduce NA Versions NA Additional Information NA 