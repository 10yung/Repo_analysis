Currently the library does not support stroke width and you said you do not want to implement it The problem is that the current code is filled with protected private constructors and prevent expanding the library from Kotlin to implement this In Java its relatively simple to achieve in Kotlin we need to copy and convert of the code To see the issue just convert package mezhanghaiandroidmaterialprogressbar import androidgraphicsPaint public class SingleCircularProgressDrawable dp extends SingleCircularProgressDrawable SingleCircularProgressDrawable dpint style superstyle setShowBackgroundfalse Override protected void onPreparePaintPaint paint superonPreparePaintpaint paintsetStrokeWidth to kotlin and see all the errors about package private protected This is not cool to have to maintain java code in a full kotlin project just for this use case Hi there Thank you for great library It would be very nice to implement one more determinateCircularProgressStyle with always spinning ring with gap decreasing its size with progress In current implementation animation just stops when reaching target progress the idea is to have continuous spinning Does it violate Material Design principles colorAccent is used instead of colorControlActivated Theme Legend App Theme style nameBaseThemeLegend parentAppTheme Attributes for all APIs item namecolorPrimarycolormaterialred item item namecolorPrimaryDarkcolormaterialblue item item namecolorAccentcolormaterialgreena item item namecolorControlActivatedcolormaterialpurple item item namecolorControlHighlightcolormateriallime item item namedialogThemestyleAppThemeDialogLegenditem item namealertDialogThemestyleAppThemeDialogAlertLegenditem style Layout xml version encodingutf androidsupportv widgetCardView stylestyleCardStyleHome xmlnsandroid androidlayoutwidthmatchparent androidlayoutheightwrapcontent xmlnsapp LinearLayout androidlayoutwidthmatchparent androidlayoutheightwrapcontent androidorientationvertical TextView androidlayoutwidthwrapcontent androidlayoutheightwrapcontent androidtextstringmaterialthemeprogressindicators androidtextAppearancestyleTextStyleTitle TextView androidlayoutwidthwrapcontent androidlayoutheightwrapcontent androidlayoutmarginTopdimenviewspacingmedium androidtextstringmaterialthemestock androidtextAppearancestyleTextStyleBody LinearLayout androidlayoutwidthmatchparent androidlayoutheightwrapcontent androidlayoutmarginTopdimenviewspacingsmall androidgravitycentervertical ProgressBar androidlayoutwidthwrapcontent androidlayoutheightwrapcontent androidlayoutmargindimenviewspacingsmall androidindeterminatetrue ProgressBar stylestyleProgressBarStyleHorizontal androidlayoutwidthmatchparent androidlayoutheightwrapcontent androidlayoutmargindimenviewspacingsmall androidindeterminatetrue LinearLayout TextView androidlayoutwidthwrapcontent androidlayoutheightwrapcontent androidlayoutmarginTopdimenviewspacingmedium androidtextstringmaterialthemematerialprogress androidtextAppearancestyleTextStyleBody LinearLayout androidlayoutwidthmatchparent androidlayoutheightwrapcontent androidlayoutmarginTopdimenviewspacingsmall androidgravitycentervertical androidthemestyleAppThemeGreen mezhanghaiandroidmaterialprogressbarMaterialProgressBar stylestyleWidgetMaterialProgressBarProgressBar androidlayoutwidthwrapcontent androidlayoutheightwrapcontent androidlayoutmargindimenviewspacingsmall androidindeterminatetrue mezhanghaiandroidmaterialprogressbarMaterialProgressBar stylestyleWidgetMaterialProgressBarProgressBarHorizontal androidlayoutwidthmatchparent androidlayoutheightwrapcontent androidlayoutmargindimenviewspacingsmall appmpbprogressStylehorizontal androidindeterminatetrue LinearLayout LinearLayout androidsupportv widgetCardView Tested on emulator API and Although rendering error is avoided the widget shows up as blank now