 Bug report part of the solution remove duplicates of the output coreset fixed the break statement still needs some fixes in StreamKM Summary of the changes BucketManagers getCoreset returned a lot of duplicate Examples in the resulted coreset Almost over of the examples was duplicates With these changes this percentage is around but not zero in splitCoresetTreeLeaf sometimes the one child had all the points and the other was empty Now it rechooses a center and splits the points again in splitCoresetTree changed the way of choosing the which node to split Similar to moas treeCoreset in BucketManager the break statement in getCoreset does not work properly Now there is a flag that stops the process when a full bucket is found Tests need to print the resulted coreset in StreamKM be sure getCoreset is invoked at least once Bug Report TreeCoresetStreamKMBucketManager Expected behavior A TreeCoreset contains the methods to extract an msized array of Examples from an nsized stream of Examples where nm Observed behavior The extracted coreset contains many duplicate Examples with weight I used a custom file as input since some of the readers have issues I attached the file below Command line sparksh ClusteringTrainEvaluate c StreamKM s w s SocketTextStreamReader resulttxt logstreamKMlog To reproduce the issue several changes needs to be done In bucketManager method getCoreset needs to change because break obviously does not work so I used an isFound flag instead any other suggestions instead of a flag are welcomed def getCoreset Array Example ifbucketsL isFull bucketsL pointstoArray else var i var coreset Array Example fori until L ifbucketsiisFull coreset bucketsipointstoArray break val start i forj start until L val examples bucketsjpointstoArray coreset val tree new TreeCoreset coreset treeretrieveCoresettreebuildCoresetTreeexamples maxsize new Array Example coreset You have to print the output of the coreset in StreamKM using ExampletoString and Exampleweight to see that some Examples are changing their weight values to even if is the default value Thats probably happening in line of TreeCoresetscala where the leaf node has no elements so en is zero I did a pull request in StreamKM but the issues are still there Since method getCoreset is called every time a new Example input comes a really slow process I checked moas version in java line and there is a comment about calling getCoreset after the streaming process is finished So in spark Iam guessing we should call it when numInstances are equals to rddcount divided with the number of workers or the repartition of the input in TreeCoresetscala line funCost has sometimes zero value so when costOfPoint is divided by funcost sum is NaN Any thoughts on how to solve the problem with the duplicates Thanks in advance txt file with randomly chosen points random txt Infrastructure details Java Version Scala Version Spark version OS version ubuntu Spark Standalone cluster mode ONCE based on spark streaming Summary of the changes ONCE streamdm ONCE streamDMmastersrcmainscalaorgapachesparkstreamdm ONCEStreaming Scala Senderscala list RDD socket ONCEStreamingscala Senderscala spark ONCEStreamingscala spark Tests testresulttxt Enhancement Description ONCE Spark Streaming streamdm Resources ONCE Counting the Frequency of Timeconstrained Serial Episodes in a Streaming Sequence Command line Senderscala ONCEStreamingscala ONCE Senderscala socket spark ONCEStreamingscala socket Sender Data source RDD RDD socket Infrastructure details Java Version ea Scala Version Spark versionspark binhadoop OS versionmacOS local mode 