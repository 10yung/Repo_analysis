So long story short OPTIONS with the following origin works returning Connection state changed MAXCONCURRENTSTREAMS updated HTTP date Tue Nov GMT contentlength server nginx accesscontrolallowheaders contenttype accesscontrolalloworigin accesscontrolallowmethods POST PUT GET OPTIONS DELETE accesscontrolmaxage OPTIONS with the following origin doesnt Connection state changed MAXCONCURRENTSTREAMS updated HTTP date Tue Nov GMT server nginx allow POST My Akka Http Cors is the following private val corsSettings CorsSettings CorsSettingsactorSystem withAllowedOriginsHttpOriginMatcher withAllowCredentialsfalse withAllowedMethodsscalacollectionimmutableSeqHttpMethodsPOST HttpMethodsPUT HttpMethodsGET HttpMethodsOPTIONS HttpMethodsDELETE withExposedHeadersscalacollectionimmutableSeq ContentType XContentType xaccesstoken xrefreshtoken Akka doesnt seem to manage origin which are not hostnames Hello Im trying to use your library to apply cors in akkahttp When I configured with corssettings route and settings includes allowedOrigins it seems that the requests from the same origin also be blocked with invalidOrigin rejection Is there a good way to filter that out Some methods in CoreSettings take a Seq eg CoreSettingswithAllowedMethods However this does not work with the default Seq that is imported from the scala package It requires the more restrictive scalacollectionimmutableSeq which is a subclass of the default Seq The reason for this is that CorsSettingsscala has import scalacollectionimmutableSeq so all uses of Seq refer to the more restrictive type Looking at the code there appears to be no benefit from this more restrictive type so the fix is to remove the import I had great difficulties overriding the settings in a test I think this is caused by the defaultconfig is loaded too early scala val defaultSettings applyConfigFactoryloadgetClassgetClassLoader The above works when configuring in the default applicationconf but not in a different configfile used specifically when starting the actorsystem It also does not work to configure it by parsing config string when starting actorSystem If I loaded the config like this AFTER the actorSystem had started scala def corsSettingsactorSystemActorSystemCorsSettings CorsSettingsactorSystem Then it used the config that was current Sorry for the bad explanation in Non preflight request is being rejected because it came from an unknown origin correct behaviour Non preflight requests from unknown origins should not be rejected 