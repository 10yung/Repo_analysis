I found that the new version of the code is missing a foldervendorgolangorgx Should I add these files directly what is the corresponding version This includes code from and add a tests See for further discussion Resolves TODO Needs to be declared private which I dont know how to HTTPSSVC too Implements for draftietftlsesni thus if we dont declare it private people will try to use with Cloudflares servers which are draftietftlsesni that is incompatible with the SVCB record See We should add this record as a private RR type for the time being Wireformat is fairly straight forward except for the value field which resembles TXT but not entirely and it can be switched to something else by a previous value in the RR I was thinking off SVCB RR See RFC xxxx type SVCB struct Hdr RRHeader Priority uint Target string dnsdomainname Value string dnstxt this is wrong if priority this must be something else entirely The draft talks about SvcFieldPriority instead of Priority which I really dislike hence Priority in the above example Target is a better name than SvcDomainName which is used in the draft this also mimics the SRV record a bit There is a new zone parser that works better than the old Its time to start thinking about deprecating the old parser somewhere in Specially this means removing ParseZone and parseZone and cleaning up the tests Do a go get u and go mod tidy This updates all deps to a newer version A newly created Server which has had ServerShutdown called on it returns Errorerr server not started However unlike gos http server dnsServer still allows you to call ServerListenAndServe after a Shutdown call Is this expected behavior Or would it be better to follow httpServers lead and once a server is Shutdown it will forever return Errorerr Server closed This follows up This time around I thought Id try adjusting the lengths after packing the values which is probably a bit simpler I havent considered performance if this approach seems okay avoiding the packUintXs might be worthwhile Also Im a bit rusty so I may have missed some things Hi Im Yevgeny Founder of Fuzzit Continuous fuzzing as a service platform I saw that you implemented Fuzz targets but they are currently not running as part of the CI We have a free plan for OSS and I would be happy to contribute a PR if thats interesting The PR will include the following Continuous Fuzzing of master branch which will generate new corpus and look for new crashes Regression on every PR that will run the fuzzers through all the generated corpus and fixed crashes from previous step This will prevent new or old bugs from crippling into master You can see our basic example here and you can see and example of in the wild integration here Let me know if this is something worth working on Cheers Yevgeny miekg Hi im use this in windows When I use threads to nslookup and send UDP package to dns server it finds that there are too many goroutines and occupying large memory of heaps So I review the code and find that there is no limits when proccess UDP packages in servergo I dont sure if it is all right May anybody help me my code func serveDNSladdr string error serveMux dnsNewServeMux serveMuxHandleFunc handleDnsRequest glogErrorfserveDNS Begin e makechan error for net range stringudp tcp srv dnsServerAddr laddr Net net Handler serveMux go funcsrv dnsServer e srvListenAndServe srv return e dns code githubcommiekgdnsservergo for srvisStarted m s err readerReadUDPl rtimeout if err nil if srvisStarted return nil if netErr ok errnetError ok netErrTemporary continue return err if lenm headerSize if capm srvUDPSize srvudpPoolPutm srvUDPSize continue wgAdd go srvserveUDPPacket wg m l s 