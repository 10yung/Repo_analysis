 During installation the gem attempts to download installsh from uwsgiitinstall but the response body says the file has been moved permanently Redirecting extconfrb to pull the file from github allows the install to complete as normal So this just started happening I rebuilt a virtual environment for a new deployment and installed uWSGI It now segfaults at startup The strange thing is if I go to the old virtualenv the same version of uWSGI is installed here it runs fine Also this seems to happen on just of our servers The others are running uWSGI fine and are also FreeBSD Here is the traceback env grinchahweb envsgrinchreleases grinch uwsgi ini deployuwsgiini uWSGI getting INI configuration from deployuwsgiini Starting uWSGI bit on Mon Jan compiled with version Compatible FreeBSD Clang tagsRELEAS E final on January os FreeBSD RELEASEp FreeBSD RELEASEp GENERIC nodename ahweb machine amd clock source unix pcre jit disabled detected number of CPU cores current working directory usrhomegrinchenvsgrinchreleases grinch writing pidfile to tmpuwsgigrinch pid detected binary path usrhomegrinchenvsgrinchreleases grinchenvbinuwsgi chdir to homegrinchenvsgrinchreleases grinch your processes number limit is your memory page size is bytes WARNING you have enabled harakiri without post buffering Slow upload could be rejected on postunbuffered webservers detected max file descriptor number lock engine POSIX semaphores thunder lock disabled you can enable it with thunderlock uwsgi socket bound to UNIX address tmpuwsgigrinch sock fd Python version default Jan Clang tagsRELEASE final PEP virtualenv detected homegrinchenvsgrinchreleases grinchenv Set PythonHome to homegrinchenvsgrinchreleases grinchenv Python threads support is disabled You can enable it with enablethreads Python main interpreter initialized at x fb a your server socket listen backlog is limited to connections your mercy for graceful operations on workers is seconds mapped bytes KB for cores Operational MODE preforking added homegrinchenvsgrinchreleases grinch to python path uWSGI process got Segmentation Fault backtrace of x c c uwsgibacktrace x c at usrhomegrinchenvsgrinchreleases grinchenvbinuwsgi x c d uwsgisegfault x at usrhomegrinchenvsgrinchreleases grinchenvbinuwsgi x c pthreadsigmask x at liblibthrso end of backtrace VACUUM pidfile removed VACUUM unix socket tmpuwsgigrinch sock removed env grinchahweb envsgrinchreleases grinch Here is the contents of uwsgiini uwsgi chdirhomegrinchenvsgrinchreleases grinch modulewebwsgiapplication envDJANGOSETTINGSMODULEwebsettings pphomegrinchenvsgrinchreleases grinch homehomegrinchenvsgrinchreleases grinchenv mastertrue pidfiletmpuwsgigrinch pid vacuumtrue enableproxyprotocoltrue maxrequests uidgrinch gidgrinch processes harakiri sockettmpuwsgigrinch sock chmodsocket touchreloadhomegrinchenvsgrinchreleases grinchdeploytouchtoreloadwsgi Ive tried with and its the same thing Any ideas why uwsgi would be crashing Hi I was unable to find anything related to python support Is python support is already in the pipeline or can it already be used in some official capacity Thanks Hi Im facing a problem with Flask uWSGI and Zuul Gateway The very first response is OK but when I reload the page Zuul Gateway says Caused by javalangRuntimeException orgapachehttpNoHttpResponseException failed to respond When I put Nginx on top of uWSGI it works without any problem My config uwsgi wsgifile runpy callable app http processes threads master true vacuum true dieonterm true Im using uWSGI uwsgi version the count of core files been dumped equals the count of workers it looks like something cause lock wrong when workers are starting Here is the gdb screen shot gdb homeadminappvirtualenvbinuwsgi core uwsgi GNU gdb GDB Red Hat Enterprise Linux alios Copyright C Free Software Foundation Inc License GPLv GNU GPL version or later This is free software you are free to change and redistribute it There is NO WARRANTY to the extent permitted by law Type show copying and show warranty for details This GDB was configured as x redhatlinuxgnu For bug reporting instructions please see Reading symbols from homeadminappvirtualenvbinuwsgidone New LWP Thread debugging using libthreaddb enabled Using host libthreaddb library lib libthreaddbso Missing separate debuginfo for homeadminappvirtualenvlibpython libdynloadlibncurseswso Missing separate debuginfo for homeadminappvirtualenvlibpython libdynloadlibtinfowso Missing separate debuginfo for homeadminappvirtualenvlibpython libdynloadlibffiso Core was generated by uwsgi ini homeadminappuwsg Program terminated with signal Quit x efe dad b in pthreadmutexlockfull from lib libpthreadso Missing separate debuginfos use debuginfoinstall cyrussasllib alios x gpython x glibc alios x keyutilslibs alios x libcomerr alios x libidn alios x libselinux alios x libssh alios x libuuid alios x openldap alios x pcre alios x gdb bt x efe dad b in pthreadmutexlockfull from lib libpthreadso x d in uwsgilockfast x f dd in wsgireqaccept x dd in simplelooprun x c e in simpleloop x b in uwsgiignition x f ed in uwsgiworkerrun x ffdf in uwsgirun x ea e in main gdb after upgrade to mac C uwsgi fails I reinstall using pip but still no luck There is no error msg just do not work any more I wonder if uwsgi works on catalina or not Thanks Ah the joys of variadic arguments in C So when using zendparseparameters PHP internally loops through the type specifiers and accordingly uses vaarg to get the corresponding argument Since the arguments are expected to be pointers to the corresponding values the size of them does matter because PHP simply writes to the corresponding address with a size of sizet If we for example pass a pointer to a bit integer and PHP writes bits we have an overflow of bytes From READMEPARAMETERPARSINGAPI in the PHP source tree Please note that since version PHP uses zendlong as integer type and zendstring with sizet as length so make sure you pass zendlongs to l and sizet to strings length ie for s you need to pass char and sizet not the other way round Both mistakes might cause memory corruptions and segfaults char str long strlen XXX THIS IS WRONG Use sizet instead zendparseparametersZENDNUMARGS s str strlen int num XXX THIS IS WRONG Use zendlong instead zendparseparametersZENDNUMARGS l num To fix this I changed the types accordingly to use sizet and zendlong if the PHP major version is Thinking that when opening an pidfile for writing the pid have to print out error if the pidfile does not exist instead of creating the pidfile if it exists then pass and keep going Commit f e set the default for uwsgineedapp to This results in the termination of uWSGI when using the PHP plugin only as this plugin does not register any app This feels a bit like a workaround I ran into this while attempting to test current mastertree uwsgi is not affected as f e isnt there with the following PHP config file and it was reported in as well uwsgi master true workers plugins httpphp httpmodifier http phpdocroot tphp phpindex testphp 