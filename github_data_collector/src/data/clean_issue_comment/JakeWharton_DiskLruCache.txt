this is needed when we notice the lru content is stale and we dont want to move it forward in the linked hash map FilelistFiles will return null if the directory has been deleted This scenario isn t totally far fetched because it s fairly common for Android developers to place their disk caches in the Android application cache directory The cache directory can be cleared at any time by the system including while the app is open which in turn can cause unexpected IOExceptions when delete is called See for additional context I came across an exception where my key length exceeded characters so I was browsing through the repo to figure out a reason for this cap on key length It seems after the key length was increased the newer jar never got deployed to mavenbintray It would be great if we can have a way to know the count of the entities and even better if we can have an iterator of the snapshots like the one in the OkHttp implementation Will it possible to have a new release I am particularly interested in this commit which increases the cache key length to what can cause cache is closed I am using this cache to store many many small files I set a max of MB but the cache grows up to more than MB Thats because each small file takes at least kb in disk Since this is a disk cache I would assume that setting a max would take block size in consideration This deletes all files stored on disk and invalidates any uncommitted editors Hello guys I use DiskLruCache in a multithread environment I get an infinite loop in the trimToSize method while size maxSize MapEntryString Entry toEvict lruEntriesentrySetiteratornext removetoEvictgetKey The remove call fails to remove the entry as an other thread is editing the toEvict entry Shouldnt we check if the remove worked and for example silently return if it did not In FAT filesystem which is the default filesystem for external SD Card we can only store around k files in a directory In most cases it shouldnt be a problem But when I need to cache a lot of small images with DiskLruCache it brings this issue to me Hence I would like to know if its possible to create the subdirectory within DiskLruCaches cahce directory so we can solve this issue for good FAT filesystem limit information 