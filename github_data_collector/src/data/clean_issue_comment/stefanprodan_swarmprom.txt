I want to be able to use swarmprom behind reverse proxy First problem is grafana when i query I get If youre seeing this Grafana has failed to load its application files This could be caused by your reverse proxy settings If you host grafana under subpath make sure your grafanaini rootpath setting includes subpath If you have a local dev build make sure you build frontend using npm run dev npm run watch or npm run build Sometimes restarting grafanaserver can help I found solution here I need to be able to change rooturl var docker exec it d a a e bincat confdefaultsini grep rooturl rooturl protocolsdomainshttpports Is there a way to do this I created a config file defaultsini bind on usrsharegrafanaconfdefaultsini And changed value as rooturl protocolsdomainshttpportsgrafana But i still get the same msg Here my complete dockerstack file version networks net driver overlay attachable true traefikpublic external true volumes prometheus grafana alertmanager configs dockerdconfig file dockerdexporterCaddyfile noderules file prometheusrulesswarmnoderulesyml taskrules file prometheusrulesswarmtaskrulesyml grafanaconfig file grafanadefaultsini services dockerdexporter image stefanprodancaddy networks net environment DOCKERGWBRIDGEIP configs source dockerdconfig target etccaddyCaddyfile deploy mode global resources limits memory M reservations memory M cadvisor image googlecadvisor networks net command logtostderr dockeronly volumes varrundockersockvarrundockersockro rootfsro varrunvarrun syssysro varlibdockervarlibdockerro deploy mode global resources limits memory M reservations memory M grafana image stefanprodanswarmpromgrafana networks default net traefikpublic environment GFSECURITYADMINUSERADMINUSERadmin GFSECURITYADMINPASSWORDADMINPASSWORDpassword GFUSERSALLOWSIGNUPfalse GFSERVERROOTURLGFSERVERROOTURLlocalhost GFSMTPENABLEDGFSMTPENABLEDfalse GFSMTPFROMADDRESSGFSMTPFROMADDRESSgrafanatestcom GFSMTPFROMNAMEGFSMTPFROMNAMEGrafana GFSMTPHOSTGFSMTPHOSTsmtp GFSMTPUSERGFSMTPUSER GFSMTPPASSWORDGFSMTPPASSWORD configs source grafanaconfig target usrsharegrafanaconfdefaultsini volumes grafanavarlibgrafana deploy mode replicated replicas placement constraints noderole manager resources limits memory M reservations memory M labels traefikenabletrue traefikhttproutersgrafanaentrypointshttps traefikhttproutersgrafanatlstrue traefikhttproutersgrafanaruleHosttspedaswarmsupervisioninfradomainfr PathPrefixgrafana traefikhttpservicesgrafanaloadbalancerserverport alertmanager image stefanprodanswarmpromalertmanagerv networks default net traefikpublic environment SLACKURLSLACKURL SLACKCHANNELSLACKCHANNELgeneral SLACKUSERSLACKUSERalertmanager command configfileetcalertmanageralertmanageryml storagepathalertmanager volumes alertmanageralertmanager deploy mode replicated replicas placement constraints noderole manager resources limits memory M reservations memory M labels traefikenabletrue traefikhttproutersalertmanagerentrypointshttps traefikhttproutersalertmanagertlstrue traefikhttproutersalertmanagerruleHosttspedaswarmsupervisioninfradomainfr PathPrefixalertmanager traefikhttpservicesalertmanagerloadbalancerserverport unsee image cloudflareunseev networks default net traefikpublic environment ALERTMANAGERURISdefault deploy mode replicated replicas labels traefikenabletrue traefikhttproutersunseeentrypointshttps traefikhttproutersunseetlstrue traefikhttproutersunseeruleHosttspedaswarmsupervisioninfradomainfr PathPrefixunsee traefikhttpservicesunseeloadbalancerserverport nodeexporter image stefanprodanswarmpromnodeexporterv networks net environment NODEIDNodeID volumes prochostprocro syshostsysro rootfsro etchostnameetcnodename command pathsysfshostsys pathprocfshostproc collectortextfiledirectoryetcnodeexporter collectorfilesystemignoredmountpoints sysprocdevhostetc nocollectoripvs deploy mode global resources limits memory M reservations memory M prometheus image stefanprodanswarmpromprometheusv networks default net traefikpublic command configfileetcprometheusprometheusyml storagetsdbpathprometheus storagetsdbretentionPROMETHEUSRETENTION h volumes prometheusprometheus configs source noderules target etcprometheusswarmnoderulesyml source taskrules target etcprometheusswarmtaskrulesyml deploy mode replicated replicas placement constraints noderole manager resources limits memory M reservations memory M labels traefikenabletrue traefikhttproutersprometheusentrypointshttps traefikhttproutersprometheustlstrue traefikhttproutersprometheusruleHosttspedaswarmsupervisioninfradomainfr PathPrefixprometheus traefikhttpservicesprometheusloadbalancerserverport Hi Have you considered adding Grafana Loki to the stack It would allow to monitor logs too and even mix current metrics with logrelated ones for better insights It would be pretty easy to set up with its new Docker Logging Driver Plugin Hi Would be great if we could update packages PrometheusGrafanaNodeexporter all to latest versions Best Samir If DOMAIN variable is not set the stack will be deployed with meaningless labels like following yaml traefikfrontendruleHostgrafana This PR make DOMAIN variable to be required which means deployment will fail if the variable is not set I have simple nodes swarm cluster where each node is master and worker ID HOSTNAME STATUS AVAILABILITY MANAGER STATUS ENGINE VERSION oxmqs lze dk m ni me msnu dock Ready Active Leader cwyprb cxtepai h no as dock Ready Active Reachable o b ttd wxbyfh e yovj rxw dock Ready Active Reachable So because in current dockercomposeyml file placement for Grafana Prometheus Caddy and AlertManager is setup to be deployed on master I changed it to be deployed only to dock using placement placement constraints nodehostname dock Unfortunately it didnt work and most of these services went to dock Next try I applied label Monitoringtrue to dock and used placement placement constraints nodelabelsMonitoring true but this same situation When I did this same on Swarm node with master only all placement constraints works correctly Does anyone have this same situation like I have After setting up alerts within Grafana I found that if the Prometheus instance was temporarily unavailable this would cause the alert to fail permanently with description Error Could not find datasource Data source not found This would retrigger until I went into Grafana and manually retested the rule and saved the alert with no actual changes to the alert or data sources This issue suggests the cause is specifying deleteDatasources which has the same name as datasource defined after it I tried this in my deployment then killed prometheus I witnessed the alerts reenter pending and then clear automatically with no other sideeffects eg duplication of the data source within Grafana Im not aware of why this entry exists so I have created this quick PR to remove it If its needed please let me know and Ill look at other workarounds The READMEmd currently mentions how to do this using DNS but could this process not be improved on by using Consul instead As already mentioned in the readme DockerSwarmrocks recommends Traefik and HTTPS This install uses Consul as a keyvalue store for the SSL certificates which means manymost of the Docker Swarm installs following that recipe will have Consul installed as well Relevant Prometheus docs Could Memory Usage by Node have the total available memory per node too That would be quite useful Hi could we have the Caddy dockerfile as well It seems that is missing from the corresponding directory Thanks Ioan Not an issue but more of a questionHow do we monitor Windows workers in a hybrid swarm cluster Nodeexporter Cadvisor and Dockerdexporter will not run on my Windows worker nodes Has anyone come up with a solution to handle a hybrid environment Thank you