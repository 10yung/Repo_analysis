 What have you changed Supposing there are several hot delegates and they are fetched by one thread at the same time The thread will keep processing these delegates by its own even there are idle threads This PR introduces two new mechanism to solve the problem Yield from delegate when it triggers write more than times this is to avoid single hot delegates make other delegates wait too long in a round of processing Reschedule delegates that have been processed by the same thread too much times This is to make balance between threads What is the type of the changes Improvement How is the PR tested Unit test Integration test Does this PR affect documentation docs or should it be mentioned in the release notes No Does this PR affect tidbansible No Feature Request Describe the feature youd like Setting recyclelogfilenum to speed up WAL in sync mode Teachability Documentation Adoption Migration Strategy c Recycle log files If nonzero we will reuse previously written log files for new logs overwriting the old data The value indicates how many such files we will keep around at any point in time for later use This is more efficient because the blocks are already allocated and fdatasync does not need to update the inode after each write Default sizet recyclelogfilenum Enabling ratebytespersec would keep rocksdb background compaction steadily runs smoothing both IO and CPU usage However few of our users are using the option Since ansible runs fio test by default we can use the result to set an initial default value for ratebytespersec if user didnt set it To be more specific we can run fio write only with threads default maxbackgroundjobs and use the throughput as upper bound Then we can maybe set ratebytespersec to of the upper bound Other suggestions are welcome Currently only kvdb respect ratebytespersec We should also make raftdb respect it too Task breakdown Make raftdb respect ratebytespersec Update ansible to set default value for ratebytespersec benchmark to show what would be a good default ratebytespersec Feature Request Is your feature request related to a problem Please describe A description of what the problem is Mount two disk path for TiKV one store hot data while another store cold data Describe the feature youd like A description of what you want to happen Most of data could be stored in HDD and little data which is L or L could be put in SSD Of course data of raftdb would be store in SSD for effective write performance Teachability Documentation Adoption Migration Strategy If you can explain some scenarios how users might use this or situations in which it would be helpful Any API designs mockups or diagrams are also helpful Signedoffby Liqi Geng gengliqiiigmailcom What have you changed Change the merge flow path to fix and the bug in comment execcommitmerge in target applyfsm oncatchuplogsformerge in source peerfsm if the source peer has already executed the corresponding onreadypreparemerge set pendingremove and jump to step raft append and apply logs onreadypreparemerge in source peerfsm and set pendingremove means source region has finished applying all logs logsuptodateformerge in source applyfsm destroy itself and send Noop to trigger target applyfsm resume execcommitmerge in target applyfsm onreadycommitmerge in target peerfsm onmergeresult in source peerfsm destroy itself and send Noop to trigger target peerfsm resume onreadycommitmerge in target peerfsm The first failpoint test can detect bug with a high probability which is about loss of data on the master branch The second test about the bug in comment is not reliable to detect it I will fix this soon What is the type of the changes Bugfix a change which fixes an issue How is the PR tested Integration test Does this PR affect documentation docs or should it be mentioned in the release notes No Does this PR affect tidbansible No Refer to a related PR or issue link optional Thank you for contributing to TiKV If you havent already please read TiKVs CONTRIBUTING document If youre unsure about anything just ask somebody should be along to answer within a day or two What have you changed Change BoxXXXObserver from Send Sync to Send Clone for avoiding the cost of synchronization What is the type of the changes Engineering engineering change which doesnt change any feature or fix any issue How is the PR tested Please select the tests that you ran to verify your changes Unit test Does this PR affect documentation docs or should it be mentioned in the release notes If there is a document change please file a PR in docs and add the PR number here If this PR should be mentioned in the release note please update the release notes No Does this PR affect tidbansible If there is a configuration or metrics change please file a PR in tidbansible and add the PR number here No What have you changed update titan to use individual thread pool for titan GC What is the type of the changes Bugfix a change which fixes an issue How is the PR tested Manual test add detailed scripts or steps below Does this PR affect documentation docs or should it be mentioned in the release notes Yes Does this PR affect tidbansible No What have you changed Add several benchmark cases to batch system It will be used to measure the future improvement What is the type of the changes Engineering How is the PR tested Unit test Integration test Manual test Does this PR affect documentation docs or should it be mentioned in the release notes No Does this PR affect tidbansible No Benchmark result if necessary optional Following result comes from benchmark on my desktop fairness time us us us imbalance time ms ms ms spawnmany time ms ms ms routersend time ns ns ns Signedoffby Steven Gu asongala com What have you changed Tries to fix Issue Reference PR to fix tnxtypesError Replaces original Error with ErrorInner Defines a new Error as pub struct Errorpub BoxErrorInner Fixes the all compiling errors What is the type of the changes Improvement a change which is an improvement to an existing feature How is the PR tested Unit test Does this PR affect documentation docs or should it be mentioned in the release notes No Does this PR affect tidbansible No Refer to a related PR or issue link optional Issue and PR Signedoffby kbpers tangminghuapingcapcom Thank you for contributing to TiKV If you havent already please read TiKVs CONTRIBUTING document If youre unsure about anything just ask somebody should be along to answer within a day or two What have you changed Fix unstable test What is the type of the changes Pick one of the following and delete the others Bugfix a change which fixes an issue How is the PR tested Please select the tests that you ran to verify your changes Unit test Does this PR affect documentation docs or should it be mentioned in the release notes If there is a document change please file a PR in docs and add the PR number here If this PR should be mentioned in the release note please update the release notes No Does this PR affect tidbansible If there is a configuration or metrics change please file a PR in tidbansible and add the PR number here No Refer to a related PR or issue link optional 