 Im running the following command for a CTF binary chal chal is basically an echo server so after the following I connect to it with netcat and get the last two lines below Anything sent is not returned Im very new to nsjail and Im not sure how to troubleshoot the problem The binary works fine without nsjail of course chal is bit and uses the normal socket functions socket listen bind connect send recv write read etc system fork dlsym memset and others Nothing really out of the ordinary This is on Ubuntu Server using commit a fe cffd b a a nsjail Ml port cwd homeuserctffinal chroot R bin R lib R lib R lib rw homeuserctffinalchal I T Mode LISTENTCP I T Jail parameters hostnameNSJAIL chroot processhomeuserctffinalchal bind maxconnsperip timelimit personality daemonizefalse clonenewnettrue clonenewusertrue clonenewnstrue clonenewpidtrue clonenewipctrue clonenewutstrue clonenewcgrouptrue keepcapsfalse disablenonewprivsfalse maxcpus I T Mount flagsMSBINDMSRECMSPRIVATE type options dirtrue I T Mount bin bin flagsMSRDONLYMSBINDMSRECMSPRIVATE type options dirtrue I T Mount lib lib flagsMSRDONLYMSBINDMSRECMSPRIVATE type options dirtrue I T Mount lib lib flagsMSRDONLYMSBINDMSRECMSPRIVATE type options dirtrue I T Mount lib lib flagsMSRDONLYMSBINDMSRECMSPRIVATE type options dirtrue I T Mount proc flagsMSRDONLY typeproc options dirtrue I T Uid map insideuid outsideuid count newuidmapfalse I T Gid map insidegid outsidegid count newgidmapfalse I T Listening on I T New connection from ffff on ffff I T Executing homeuserctffinalchal for ffff When I first saw chroot with rw I was under the impression that if I do chroot then the whole system is mounted RO so nothing can be modified this is how robind in bubblewrap works If not for the quick test Id still assume thats the case Then I saw bindmountro but it seems that it works the same way While my case is not important its not impossible that some other users could misinterpret those options the same way I did especially bindmountro if theyve used bubblewrap before Now I see that this behaviour is intended but maybe the doc could be improved a bit I dont really know how Is there any plan to add report statistics of the execution Something like the cpu and wall time elapsed max memory usage exit code kill signal etc I think this can be added easily with cgroups for example Im thinking something like what ioiisolate does with the meta file Or is this outside the scope of the project I couldnt find a simple tool that defines the syscalls permissions of a program etc I created this simple script based on strace and grep that gets a list of all the unique syscalls of a binary on the run This way one can whitelist some flows of a program easily without disassembling Id be happy to create something bigger then that a solution for nsjailfirejail policies definitions It would be awesome if you could add support to join an existing namespaces Hi While running nodejs script inside nsjail execution fails with following error contents of testjs javascript consolelogtest Verbose output follows nsjailnsjail Me c v keepcaps node testjs T Mode STANDALONEEXECVE T Jail parameters hostnameNSJAIL chroot processnode bind maxconnsperip timelimit personality daemonizefalse clonenewnettrue clonenewusertrue clonenewnstrue clonenewpidtrue clonenewipctrue clonewnewutstrue clonenewcgrouptrue keepcapstrue disablenonewprivsfalse maxcpus T Mount point src dst flagsMSRDONLYMSBINDMSRECMSPRIVATE type options isdirtrue T Mount point src dstproc flagsMSRDONLY typeproc options isdirtrue T Uid map insideuid outsideuid count newuidmapfalse T W void cmdlinelogParamsnsjconft Process will be UIDEUID in the global user namespace and will have user rootlevel access to files T Gid map insidegid outsidegid count newgidmapfalse T W void cmdlinelogParamsnsjconft Process will be GIDEGID in the global user namespace and will have group rootlevel access to files T D bool nsjailSetSigHandlerint Setting sighandler for signal SIGINT T D bool nsjailSetSigHandlerint Setting sighandler for signal SIGQUIT T D bool nsjailSetSigHandlerint Setting sighandler for signal SIGUSR T D bool nsjailSetSigHandlerint Setting sighandler for signal SIGALRM T D bool nsjailSetSigHandlerint Setting sighandler for signal SIGCHLD T D bool nsjailSetSigHandlerint Setting sighandler for signal SIGTERM T D bool nsjailSetSigHandlerint Setting sighandler for signal SIGTTIN T D bool nsjailSetSigHandlerint Setting sighandler for signal SIGTTOU T D void subprocrunChildnsjconft int int int Entering namespace with flagsCLONENEWNSCLONENEWCGROUPCLONENEWUTSCLONENEWIPCCLONENEWUSERCLONENEWPIDCLONENEWNETSIGUNKNOWN T D bool utilwriteBufToFileconst char const void sizet int Written bytes to proc setgroups T D bool usergidMapSelfnsjconft pidt Writing to proc gidmap T D bool utilwriteBufToFileconst char const void sizet int Written bytes to proc gidmap T D bool useruidMapSelfnsjconft pidt Writing to proc uidmap T D bool utilwriteBufToFileconst char const void sizet int Written bytes to proc uidmap T D bool userinitNsFromChildnsjconft setgroups NULL T D bool userinitNsFromChildnsjconft setgroupsNULL failed Operation not permitted T D bool usersetResGidgidt setresgid T D bool usersetResUiduidt setresuid T D bool pidinitNsnsjconft Creating a dummy init process T D pidt subproccloneProcuintptrt Cloning process with flagsCLONEFSSIGUNKNOWN T D pidt subproccloneProcuintptrt Cloning process with flagsCLONEFSSIGCHLD T D bool mntmkdirAndTestconst char Couldnt create runuser nsjailroot directory No such file or directory T D bool mntmkdirAndTestconst char Created accessible directory in tmpnsjailroot T D bool mntmkdirAndTestconst char Couldnt create runuser nsjailtmp directory No such file or directory T D bool mntmkdirAndTestconst char Created accessible directory in tmpnsjailtmp T D bool mntmountPtmountt const char const char Mounting src dst flagsMSRDONLYMSBINDMSRECMSPRIVATE type options isdirtrue T D bool mntmountPtmountt const char const char Mounting src dstproc flagsMSRDONLY typeproc options isdirtrue T D bool mntremountROconst mountt Remounting RO flagsMSRDONLYMSREMOUNTMSBINDMSRELATIME T D bool mntremountROconst mountt Remounting RO proc flagsMSRDONLYMSNODEVMSREMOUNTMSBINDMSRELATIME T D bool utsinitNsnsjconft Setting hostname to NSJAIL T D bool capsinitNsKeepCapscapuserdatat Adding the following capabilities to the inheritable set CAPCHOWN CAPDACOVERRIDE CAPDACREADSEARCH CAPFOWNER CAPFSETID CAPKILL CAPSETGID CAPSETUID CAPSETPCAP CAPLINUXIMMUTABLE CAPNETBINDSERVICE CAPNETBROADCAST CAPNETADMIN CAPNETRAW CAPIPCLOCK CAPIPCOWNER CAPSYSMODULE CAPSYSRAWIO CAPSYSCHROOT CAPSYSPTRACE CAPSYSPACCT CAPSYSADMIN CAPSYSBOOT CAPSYSNICE CAPSYSRESOURCE CAPSYSTIME CAPSYSTTYCONFIG CAPMKNOD CAPLEASE CAPAUDITWRITE CAPAUDITCONTROL CAPSETFCAP CAPMACOVERRIDE CAPMACADMIN CAPSYSLOG CAPWAKEALARM CAPBLOCKSUSPEND T D bool capsinitNsKeepCapscapuserdatat Added the following capabilities to the ambient set CAPCHOWN CAPDACOVERRIDE CAPDACREADSEARCH CAPFOWNER CAPFSETID CAPKILL CAPSETGID CAPSETUID CAPSETPCAP CAPLINUXIMMUTABLE CAPNETBINDSERVICE CAPNETBROADCAST CAPNETADMIN CAPNETRAW CAPIPCLOCK CAPIPCOWNER CAPSYSMODULE CAPSYSRAWIO CAPSYSCHROOT CAPSYSPTRACE CAPSYSPACCT CAPSYSADMIN CAPSYSBOOT CAPSYSNICE CAPSYSRESOURCE CAPSYSTIME CAPSYSTTYCONFIG CAPMKNOD CAPLEASE CAPAUDITWRITE CAPAUDITCONTROL CAPSETFCAP CAPMACOVERRIDE CAPMACADMIN CAPSYSLOG CAPWAKEALARM CAPBLOCKSUSPEND T D bool cpuinitCpunsjconft No maxcpus limit set T D bool containcontainMakeFdsCOEProcnsjconft openprocselffd ODIRECTORYORDONLYOCLOEXEC No such file or directory T D bool containcontainMakeFdsCOENaivensjconft FD will be passed to the child process T D bool containcontainMakeFdsCOENaivensjconft FD will be passed to the child process T D bool containcontainMakeFdsCOENaivensjconft FD will be passed to the child process T Executing varvcappackagesnodebinnode for STANDALONE MODE T D int subprocsubprocNewProcnsjconft int int int int Arg varvcappackagesnodebinnode T D int subprocsubprocNewProcnsjconft int int int int Arg r T D int subprocsubprocNewProcnsjconft int int int int Arg testjs node pthreadcreate Invalid argument Fatal error in heap setup Allocation failed process out of memory Illegal instruction How to launch a process with a custom selinux label From my very coarse understanding of macvlan it doesnt seem possible to use it if the adapter is virtualized or otherwise allow for multiple MAC addresses eg on VMWare or a cloud hosting provider Either I misunderstand how to configure macvlan in these scenarios and I hope I do or is there an alternative to macvlan for forwarding network packets to the jail Question of use whats the best way to integrate nsjail with systemd systemd has some features that overlaps with nsjail and could conflict ideas nsjail as setuid capabilities systemd unit running as root dont use systemd security features at all 