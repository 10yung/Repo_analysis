 add TransactionUtil to support incremental job As an initial PR Ive added swagger doc and UI support and added API docs for the admin services for now mutate and query services will come later How to test Build the project with sbt package Start the project in the targetapaches graph SNAPSHOTincubatingbin directory through binstarts graphsh command Visit the Swagger UI at Expand admincreateService and click on Try it out button Replace the body with the following and click on Execute button serviceName s graph Check if the result is with a JSON output and the status is ok Try out admincreateLabel with body set to the following label userarticleliked srcServiceName s graph srcColumnName userid srcColumnType long tgtServiceName s graph tgtColumnName articleid tgtColumnType string indices props serviceName s graph Check if the result is with a JSON output and the status is ok Try out admincreateLabel with body set to the following label friends srcServiceName s graph srcColumnName userid srcColumnType long tgtServiceName s graph tgtColumnName userid tgtColumnType long indices name idxaffinitytimestamp propNames affinityscore timestamp props name affinityscore dataType float defaultValue name timestamp dataType long defaultValue name ishidden dataType boolean defaultValue false name isblocked dataType boolean defaultValue true name errorcode dataType integer defaultValue serviceName s graph consistencyLevel strong Check if the result is with a JSON output and the status is ok Try out adminaddIndex with body set to the following label friends indices name idx rd propNames isblocked timestamp Check if the result is with a JSON output and the status is ok Try out admingetLabelname with name set to friend Check if the result is with a JSON output Ive added a configuration for curl example base url and let each rst source refer to the variable for interpolation As the variable is used in code block I also had to replace code bash with parsedliteral curl command examples actually do not get much benefit from code bash so I think parsedliteral is good enough for the purpose And I removed the sentence mentioning scripttestsh and designdatamodel page reference because they dont exist and make logs errors Please review the changes and merge it if okay Thanks add SchemaManager add SerializeUtilDeserializeUtil refactor S GraphSinkS GraphSource to use SerializeUtilDeserializeUtil JIRA S GRAPH WIP adding datastore storage Unused variable refactoring JIRA S GRAPH Issue This PR has really big changes but those are mostly related to code styles In this PR I changed level of some rules in scalastyle from warning to error Many projects raise error rather than warning when scalastyle checker fails In near future we are able to change warning rule to raise error by do refactoring codebase I will create another issue to do refactoring our codebase according to some published scala best practice and design pattern Tools related to code style which we use Scalafmt Scalastyle This PR add options for EvictionOption at root level 