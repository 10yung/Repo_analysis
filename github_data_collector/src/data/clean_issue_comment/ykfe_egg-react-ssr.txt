 renderToStream serverjs serverjs serverjs globalserverStream typeof serverJs string requireserverJsdefault serverJs worker serverjs globalserverStream serverjs worker Index News Index globalserverStream typeof serverJs string requireserverJsdefault serverJs const serverRes await globalserverStreamctx globalserverStream Indexserverjs News globalserverStream typeof serverJs string requireserverJsdefault serverJs globalserverStream Newsserverjs Index const serverRes await globalserverStreamctx Index News Newsserverjs Typescript import Context from midway import useCdn from useCdn import Config from interfaceconfig import Global from interfaceglobal declare const global Global const renderToStream async ctx Context config Config const baseDir configbaseDir processcwd const isLocal processenvNODEENV development configenv local const useCDN configuseCDN globalisLocal isLocal let serverJs configserverJs if useCDN serverJs await useCdnserverJs as string if isLocal typeof serverJs string require useCDN delete requirecache serverJs let csr if ctxrequest ctxrequestquery express koa query csr ctxrequestquerycsr if configtype ssr csr const renderLayout requireykclilibrenderLayoutdefault const str await renderLayoutctx return str if globalrenderToNodeStream for this issue globalrenderToNodeStream requirebaseDir nodemodulesreactdomserverrenderToNodeStream if globalserverStream globalserverStream if globalserverStream isLocal globalserverStream serverJs typeof serverJs string requireserverJsdefault serverJs const serverRes await globalserverStream serverJs ctx const stream global renderToNodeStreamserverRes return stream export default renderToStream boilerplate vs skeleton Boilerplate code From Wikipedia the free encyclopedia In computer programming boilerplate code or boilerplate is the sections of code that have to be included in many places with little or no alteration It is often used when referring to languages that are considered verbose ie the programmer must write a lot of code to do minimal jobs The need for boilerplate can be reduced through highlevel mechanisms such as metaprogramming which has the computer automatically write the needed boilerplate text convention over configuration which provides good default values reducing the need to specify program details in every project and modeldriven engineering which uses models and modeltocode generators eliminating the need for boilerplate manual code bolierplate skeleton bolierplate csr csr webpack layout webpack npm i production devdependencies layout add packagesmiddleware package name ssrmiddleware add koakoa middlwares example const conf requireconfigconfigssr const ssr requireeggreactssrkoaconf const Koa requirekoa const app new Koa mount routes from config appusessr ctxssrRender appuseasync ctx ctxssrRender applisten PWA example 