 corrected errorwarning usrshareautomake amltlibraryam archiver requires AMPROGAR in configureac when running autogensh Support of compilation for cxx version autoptr was removed Use uniqueptr instead If server is shutdown immediately after HandlerSocket plugin has initialized it may hit a race condition between worker thread initialisation which happens asynchronously and at some point adds threads to the server global thread list and server shutdown which waits for the thread count to go down to zero This race condition may result in some worker threads not receiving kill notifications and thus hanging the server shutdown The same race condition may also result in a crash Core was generated by homelaurynasobjpercona debugsqlmysqlddebug defaultsgroupsuffix Program terminated with signal SIGSEGV Segmentation fault pthreadkill threadidoptimized out signo at sysdepsunixsysvlinuxpthreadkillc sysdepsunixsysvlinuxpthreadkillc No such file or directory Current thread is Thread x f a f LWP pthreadkill threadidoptimized out signo at sysdepsunixsysvlinuxpthreadkillc x b ea e in mywritecore sig at homelaurynasmysqlservermysysstacktracec x c in handlefatalsignal sig at homelaurynasmysqlserversqlsignalhandlercc signal handler called x da in inlinemysqlrwlockrdlock that x srcfile xf c homelaurynasmysqlserversqlrplgtidh srcline at homelaurynasmysqlserverincludemysqlpsimysqlthreadh x c in Checkablerwlockrdlock this x at homelaurynasmysqlserversqlrplgtidh x a d in gtidrollback thd x f bfc at homelaurynasmysqlserversqlrplgtidexecutioncc x d in harollbacktrans thd x f bfc alltrue at homelaurynasmysqlserversqlhandlercc x e c in transrollback thd x f bfc at homelaurynasmysqlserversqltransactioncc x babed in THDcleanup this x f bfc at homelaurynasmysqlserversqlsqlclasscc x bafba in THDreleaseresources this x f bfc at homelaurynasmysqlserversqlsqlclasscc x f a f e c in denadbcontexttermthread this x f c b at homelaurynasmysqlserverpluginHandlerSocketPluginforMySQLhandlersocketdatabasecpp x f a in denaanonymous namespacethrinitthrinit this x f a f e inchrgoptimized out at homelaurynasmysqlserverpluginHandlerSocketPluginforMySQLhandlersockethstcpsvrworkercpp x f a ab in denahstcpsvrworkerrun this x f c f at homelaurynasmysqlserverpluginHandlerSocketPluginforMySQLhandlersockethstcpsvrworkercpp x f a b in denaworkerthrobjoperator this x f c c at homelaurynasmysqlserverpluginHandlerSocketPluginforMySQLhandlersockethstcpsvrcpp x f a ccf in denathreaddenaworkerthrobjthreadmain arg x f c c at homelaurynasmysqlserverpluginHandlerSocketPluginforMySQLlibhsclientthreadhpp x f ab b fa in startthread arg x f a f at pthreadcreatec x f aae eb d in clone at sysdepsunixsysvlinuxx cloneS Percona Server has merged a fix for this at Valgrind or LeakSanitizer on a server shutdown with HS installed gives the following errors to see the actual stacktraces comment out dlclose call in sqlplugincc or HS will be unloaded by the time Valgrind tries to resolve the stacktraces bytes in blocks are indirectly lost in loss record of at x C E EF operator newunsigned long vgreplacemallocc by x C denadatabasecreatecontextbool volatile databasecpp by x D denahstcpsvrworkerhstcpsvrworkerdenahstcpsvrworkerarg const hstcpsvrworkercpp by x D denahstcpsvrworkericreatedenahstcpsvrworkerarg const hstcpsvrworkercpp by x C denaworkerthrobjworkerthrobjdenahstcpsvrworkerarg const hstcpsvrcpp by x CD A denathreaddenaworkerthrobjthreaddenahstcpsvrworkerargdenahstcpsvrworkerarg const unsigned long threadhpp by x C denahstcpsvrstartlisten abicxx hstcpsvrcpp by x FB A daemonhandlersocketinitvoid handlersocketcpp by x plugininitializestpluginint sqlplugincc by x A A mysqlinstallpluginTHD stmysqllexstring const stmysqllexstring const sqlplugincc by x B E mysqlexecutecommandTHD sqlparsecc by x F mysqlparseTHD char unsigned int Parserstate sqlparsecc by x E dispatchcommandenumservercommand THD char unsigned int sqlparsecc by x F A docommandTHD sqlparsecc by x D F dohandleoneconnectionTHD sqlconnectcc by x D handleoneconnection sqlconnectcc bytes in blocks are indirectly lost in loss record of at x C E EF operator newunsigned long vgreplacemallocc by x D denahstcpsvrworkericreatedenahstcpsvrworkerarg const hstcpsvrworkercpp by x C denaworkerthrobjworkerthrobjdenahstcpsvrworkerarg const hstcpsvrcpp by x CD A denathreaddenaworkerthrobjthreaddenahstcpsvrworkerargdenahstcpsvrworkerarg const unsigned long threadhpp by x C denahstcpsvrstartlisten abicxx hstcpsvrcpp by x FB A daemonhandlersocketinitvoid handlersocketcpp by x plugininitializestpluginint sqlplugincc by x A A mysqlinstallpluginTHD stmysqllexstring const stmysqllexstring const sqlplugincc by x B E mysqlexecutecommandTHD sqlparsecc by x F mysqlparseTHD char unsigned int Parserstate sqlparsecc by x E dispatchcommandenumservercommand THD char unsigned int sqlparsecc by x F A docommandTHD sqlparsecc by x D F dohandleoneconnectionTHD sqlconnectcc by x D handleoneconnection sqlconnectcc by xB CF pfsspawnthread pfscc by x A F startthread pthreadcreatec bytes in blocks are indirectly lost in loss record of at x C E EF operator newunsigned long vgreplacemallocc by x CFD denadbcontextinitthreadvoid const int volatile databasecpp by x CBE denaanonymous namespacethrinitthrinitstdautoptrdenadbcontexti const int volatile hstcpsvrworkercpp by x D D denahstcpsvrworkerrun hstcpsvrworkercpp by x C AA denaworkerthrobjoperator hstcpsvrcpp by x E denathreaddenaworkerthrobjthreadmainvoid threadhpp by x A F startthread pthreadcreatec by x EB C clone cloneS bytes in blocks are indirectly lost in loss record of at x C E EF operator newunsigned long vgreplacemallocc by x E DF gnucxxnewallocatorcharallocateunsigned long void const newallocatorh by x DC B gnucxxalloctraitsstdallocatorchar allocatestdallocatorchar unsigned long alloctraitsh by x D stdVectorbasechar stdallocatorchar Mallocateunsigned long stlvectorh by x C A stdvectorchar stdallocatorchar Mfillinsertgnucxxnormaliteratorchar stdvectorchar stdallocatorchar unsigned long char const vectortcc by x AB stdvectorchar stdallocatorchar insertgnucxxnormaliteratorchar stdvectorchar stdallocatorchar unsigned long char const stlvectorh by x C stdvectorchar stdallocatorchar resizeunsigned long char stlvectorh by x EC denadbcontextdbcontextdenadatabase volatile bool databasecpp by x D denadatabasecreatecontextbool volatile databasecpp by x D denahstcpsvrworkerhstcpsvrworkerdenahstcpsvrworkerarg const hstcpsvrworkercpp by x D denahstcpsvrworkericreatedenahstcpsvrworkerarg const hstcpsvrworkercpp by x C denaworkerthrobjworkerthrobjdenahstcpsvrworkerarg const hstcpsvrcpp by x CD A denathreaddenaworkerthrobjthreaddenahstcpsvrworkerargdenahstcpsvrworkerarg const unsigned long threadhpp by x C denahstcpsvrstartlisten abicxx hstcpsvrcpp by x FB A daemonhandlersocketinitvoid handlersocketcpp by x plugininitializestpluginint sqlplugincc bytes in blocks are indirectly lost in loss record of at x C E EF operator newunsigned long vgreplacemallocc by x A gnucxxnewallocatorepolleventallocateunsigned long void const newallocatorh by x A gnucxxalloctraitsstdallocatorepollevent allocatestdallocatorepollevent unsigned long alloctraitsh by x F stdVectorbaseepollevent stdallocatorepollevent Mallocateunsigned long stlvectorh by x BE stdvectorepollevent stdallocatorepollevent Mfillinsertgnucxxnormaliteratorepollevent stdvectorepollevent stdallocatorepollevent unsigned long epollevent const vectortcc by x AA stdvectorepollevent stdallocatorepollevent insertgnucxxnormaliteratorepollevent stdvectorepollevent stdallocatorepollevent unsigned long epollevent const stlvectorh by x E stdvectorepollevent stdallocatorepollevent resizeunsigned long epollevent stlvectorh by x BF denahstcpsvrworkerhstcpsvrworkerdenahstcpsvrworkerarg const hstcpsvrworkercpp by x D denahstcpsvrworkericreatedenahstcpsvrworkerarg const hstcpsvrworkercpp by x C denaworkerthrobjworkerthrobjdenahstcpsvrworkerarg const hstcpsvrcpp by x CD A denathreaddenaworkerthrobjthreaddenahstcpsvrworkerargdenahstcpsvrworkerarg const unsigned long threadhpp by x C denahstcpsvrstartlisten abicxx hstcpsvrcpp by x FB A daemonhandlersocketinitvoid handlersocketcpp by x plugininitializestpluginint sqlplugincc by x A A mysqlinstallpluginTHD stmysqllexstring const stmysqllexstring const sqlplugincc by x B E mysqlexecutecommandTHD sqlparsecc direct indirect bytes in blocks are definitely lost in loss record of at x C E EF operator newunsigned long vgreplacemallocc by x C denahstcpsvrstartlisten abicxx hstcpsvrcpp by x FB A daemonhandlersocketinitvoid handlersocketcpp by x plugininitializestpluginint sqlplugincc by x A A mysqlinstallpluginTHD stmysqllexstring const stmysqllexstring const sqlplugincc by x B E mysqlexecutecommandTHD sqlparsecc by x F mysqlparseTHD char unsigned int Parserstate sqlparsecc by x E dispatchcommandenumservercommand THD char unsigned int sqlparsecc by x F A docommandTHD sqlparsecc by x D F dohandleoneconnectionTHD sqlconnectcc by x D handleoneconnection sqlconnectcc by xB CF pfsspawnthread pfscc by x A F startthread pthreadcreatec by x EB C clone cloneS bytes in blocks are possibly lost in loss record of at x C E EF operator newunsigned long vgreplacemallocc by x A gnucxxnewallocatorepolleventallocateunsigned long void const newallocatorh by x A gnucxxalloctraitsstdallocatorepollevent allocatestdallocatorepollevent unsigned long alloctraitsh by x F stdVectorbaseepollevent stdallocatorepollevent Mallocateunsigned long stlvectorh by x BE stdvectorepollevent stdallocatorepollevent Mfillinsertgnucxxnormaliteratorepollevent stdvectorepollevent stdallocatorepollevent unsigned long epollevent const vectortcc by x AA stdvectorepollevent stdallocatorepollevent insertgnucxxnormaliteratorepollevent stdvectorepollevent stdallocatorepollevent unsigned long epollevent const stlvectorh by x E stdvectorepollevent stdallocatorepollevent resizeunsigned long epollevent stlvectorh by x BF denahstcpsvrworkerhstcpsvrworkerdenahstcpsvrworkerarg const hstcpsvrworkercpp by x D denahstcpsvrworkericreatedenahstcpsvrworkerarg const hstcpsvrworkercpp by x C denaworkerthrobjworkerthrobjdenahstcpsvrworkerarg const hstcpsvrcpp by x CD A denathreaddenaworkerthrobjthreaddenahstcpsvrworkerargdenahstcpsvrworkerarg const unsigned long threadhpp by x C denahstcpsvrstartlisten abicxx hstcpsvrcpp by x FB A daemonhandlersocketinitvoid handlersocketcpp by x plugininitializestpluginint sqlplugincc by x A A mysqlinstallpluginTHD stmysqllexstring const stmysqllexstring const sqlplugincc by x B E mysqlexecutecommandTHD sqlparsecc This is caused by hstcpsvrthreads which is autoptrcontainerstdvectorworkerthreadtype effectively stdvectorfoo having clear method which clears the container without deleting the member pointers which are owned by the container HandlerSocket bundled with Percona Server has merged the fix at On Percona Server trunk with AddressSanitizer if HandlerSocket is installed ERROR AddressSanitizer heapuseafterfree on address x ee at pc x e da bp x f fb sp x f fb READ of size at x ee thread T x e da in internpluginlock homelaurynasmysqlserversqlsqlplugincc x f cd in pluginthdvarinitTHD bool homelaurynasmysqlserversqlsqlplugincc x in THDinit homelaurynasmysqlserversqlsqlclasscc x c in THDTHDbool homelaurynasmysqlserversqlsqlclasscc x f c in denadbcontextinitthreadvoid const int volatile homelaurynasmysqlserverpluginHandlerSocketPluginforMySQLhandlersocketdatabasecpp x f e d in thrinit homelaurynasmysqlserverpluginHandlerSocketPluginforMySQLhandlersockethstcpsvrworkercpp x f e d in denahstcpsvrworkerrun homelaurynasmysqlserverpluginHandlerSocketPluginforMySQLhandlersockethstcpsvrworkercpp x f b in denaworkerthrobjoperator homelaurynasmysqlserverpluginHandlerSocketPluginforMySQLhandlersockethstcpsvrcpp x f b in denathreaddenaworkerthrobjthreadmainvoid homelaurynasmysqlserverpluginHandlerSocketPluginforMySQLlibhsclientthreadhpp x f c f in startthread libx linuxgnulibpthreadso x f x f b c in clone libx linuxgnulibcso x b c x ee is located bytes inside of byte region x ee x ee freed by thread T here x f fcf ca in interceptorfree usrlibx linuxgnulibasanso x ca xff b in myfree homelaurynasmysqlservermysysmymallocc x e d in internpluginunlock homelaurynasmysqlserversqlsqlplugincc x f f in pluginunlockTHD stpluginint homelaurynasmysqlserversqlsqlplugincc x c f in initializestorageengine homelaurynasmysqlserversqlmysqldcc x a f in initservercomponents homelaurynasmysqlserversqlmysqldcc x a f in mysqldmainint char homelaurynasmysqlserversqlmysqldcc x e in main homelaurynasmysqlserversqlmaincc x f f in libcstartmain libx linuxgnulibcso x f previously allocated by thread T here x f fcf in malloc usrlibx linuxgnulibasanso x xff e in mymalloc homelaurynasmysqlservermysysmymallocc x e e in internpluginlock homelaurynasmysqlserversqlsqlplugincc x fa f in plugininitint char int homelaurynasmysqlserversqlsqlplugincc x a c in initservercomponents homelaurynasmysqlserversqlmysqldcc x a c in mysqldmainint char homelaurynasmysqlserversqlmysqldcc x e in main homelaurynasmysqlserversqlmaincc x f f in libcstartmain libx linuxgnulibcso x f Thread T created by T here x f f d in pthreadcreate usrlibx linuxgnulibasanso x x f da in denathreaddenaworkerthrobjstartnothrow homelaurynasmysqlserverpluginHandlerSocketPluginforMySQLlibhsclientthreadhpp x f da in denathreaddenaworkerthrobjstart homelaurynasmysqlserverpluginHandlerSocketPluginforMySQLlibhsclientthreadhpp x f da in denahstcpsvrstartlisten abicxx homelaurynasmysqlserverpluginHandlerSocketPluginforMySQLhandlersockethstcpsvrcpp x f a in daemonhandlersocketinit homelaurynasmysqlserverpluginHandlerSocketPluginforMySQLhandlersockethandlersocketcpp x ed in plugininitialize homelaurynasmysqlserversqlsqlplugincc x fb in plugininitint char int homelaurynasmysqlserversqlsqlplugincc x a c in initservercomponents homelaurynasmysqlserversqlmysqldcc x a c in mysqldmainint char homelaurynasmysqlserversqlmysqldcc x e in main homelaurynasmysqlserversqlmaincc x f f in libcstartmain libx linuxgnulibcso x f There is a race condition between HS worker threads initializing default SE and default temp SE fields and the server main thread initializing the same globally wo locking HandlerSocket bundled with Percona Server has a fix at The fix is to initialize HS worker thread THD object without plugin support as it does not care about the server default storage engine or default temp storage engine setting Is there a client for NET I have written an article which has a description of the HS protocol with examples If you find it useful I could add it to HS wiki Also I have made another PHP extension for communicating with HS Cheers At the moment if I have a DATETIME column with a default value of CURRENTTIMESTAMP and I do not specify a value for this column when performing an INSERT with handlersocket I get Same id true for a column of type TIMESTAMP which has DEFAULT CURRENTTIMESTAMP ON UPDATE CURRENTTIMESTAMP On insert if I dont specify a value by hand it gets created with In case I update a row and do not specify a value for the timestamp column it remains the same as before update Thus I have to track all this stuff on the app level This is not critical but annoying Ive been running on without issue When attempting to upgrade to compiled from source as usual I get a segfault when attempting to start up the server Note InnoDB started log sequence number CONFIG numthreads CONFIG nonblocking default CONFIG useepoll CONFIG readsize CONFIG connperthread default CONFIG forwrite default CONFIG plainsecretdefault CONFIG timeout CONFIG listenbacklog CONFIG hostdefault CONFIG port CONFIG sndbuf CONFIG rcvbuf CONFIG stacksize default CONFIG wrlocktimeout CONFIG acceptbalance CONFIG wrlocktimeout CONFIG acceptbalance CONFIG wrlocktimeout CONFIG acceptbalance CONFIG wrlocktimeout CONFIG acceptbalance UTC mysqld got signal This could be because you hit a bug It is also possible that this binary or one of the libraries it was linked against is corrupt improperly built or misconfigured This error can also be caused by malfunctioning hardware We will try our best to scrape up some info that will hopefully help diagnose the problem but since we have already crashed something is definitely wrong and this may fail Could you provide description of errors Or maybe does some documentation already exist 