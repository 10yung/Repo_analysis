Use of fibrous and glob together can be a problem because of this When fibrous has been loaded a new object like this has sync in its prototype so the glob check if optionssync is true js var obj consolelogobjsync undefined var fibrous requirefibrous var obj consolelogobjsync that It would be great to have an option when loading fibrous to change the name of the sync function to something else less likely to interfere with other modules I feel like this should work what am I doing wrong fibrous fibrouswait fibrous future Error object Object is not a future at ObjectFuturewait UsersmaxedmandsProjectsgarbanzonodemodulesfibersfuturejs at Functionanonymous UsersmaxedmandsProjectsgarbanzonodemodulesfibrouslibfibrousjs at REPLServeranonymous UsersmaxedmandsProjectsgarbanzosrcorzoserverlibreplcoffee at UsersmaxedmandsProjectsgarbanzonodemodulesfibersfuturejs at Functionwait UsersmaxedmandsProjectsgarbanzonodemodulesfibersfuturejs at Functionfibrouswait UsersmaxedmandsProjectsgarbanzonodemodulesfibrouslibfibrousjs at repl at replDefaultseval UsersmaxedmandsProjectsgarbanzonodemodulescoffeescriptlibcoffeescriptrepljs at REPLServerevalWithUnderscore UsersmaxedmandsProjectsgarbanzosrcorzoserverlibreplcoffee at Functionanonymous UsersmaxedmandsProjectsgarbanzonodemodulesfibrouslibfibrousjs at Functionanonymous UsersmaxedmandsProjectsgarbanzonodemodulesfibrouslibfibrousjs at REPLServeranonymous UsersmaxedmandsProjectsgarbanzosrcorzoserverlibreplcoffee at UsersmaxedmandsProjectsgarbanzonodemodulesfibersfuturejs FYI makebbekus My app has a dep tree with two versions of fibrous in it npm ls fibrous customersapi UsersmaxedmandsProjectsopssuperappscustomersapi fibrous goodeggsopscommon fibrous when I run code that tries to use the inner fibrous I get this error TypeError Cannot redefine property future at FunctiondefineProperty native at defineMemoizedPerInstanceProperty UsersmaxedmandsProjectsopssuperappscustomersapinodemodulesgoodeggsopscommonnodemodulesfibrouslibfibrousjs at Objectanonymous UsersmaxedmandsProjectsopssuperappscustomersapinodemodulesgoodeggsopscommonnodemodulesfibrouslibfibrousjs at Objectanonymous UsersmaxedmandsProjectsopssuperappscustomersapinodemodulesgoodeggsopscommonnodemodulesfibrouslibfibrousjs at Modulecompile modulejs at ObjectModuleextensionsjs modulejs at Moduleload UsersmaxedmandsProjectsopssuperappscustomersapinode Is there any real reason two versions of fibrous cant coexist Should we just check to see if Objectfuturesync is already defined and avoid trying to do it again Is this still beta software Imagine webdriver checks run in parallel coffee fibrouswait browser elementByCss entrytitle textshouldbecome Fibrous Promises browser elementByCss entryauthorname textshouldeventuallycontain Could be you Its possible today with coffee fibrouswait browser elementByCss entrytitle textshouldbecome Fibrous Promises futurenodeify browser elementByCss entryauthorname textshouldeventuallycontain Could be you futurenodeify but it could be cleaner Any reason not to have fibrous futures comply with PromisesA and have fibrouswait accept any A promise 