Im trying to use twirl as part of my integration tests My integration tests have an HTTP simplicator that mimics a real world service To implement this simplicator in the tests Im using spraycan embedded HTTP server which needs to spit out responses based on twirl templates My tests are located at srcitscala so naturally I want to place these twirl templates inside srcittwirl This doesnt work since the twirl compiler ignores this directory If I place the twirl templates in srcmaintwirl everything works fine but Im trying to avoid this because I dont want these templates to clutter the production package the templates only come into play in the tests so they should only compile inside when the tests are run How can I tell the twirl compiler to look for templates in the new directory Ive got an old Scala app Im slowing converting over to SBT It still has some Spring stuff in it yea I know I know I will rip it out soon and I have one thing in my application context that looks like so bean idconvertersAsScalaMap classscalacollectionJavaConversions factorymethodmapAsScalaMap constructorarg refconverters bean The trouble is when I add Twirlsettings to the bottom of my buildsbt my entire application breaks I see this in my logs coming from Spring Cannot resolve reference to bean convertersAsScalaMap while setting bean property converters nested exception is orgspringframeworkbeansfactoryCannotLoadBeanClassException Cannot find class scalacollectionJavaConversions for bean with name convertersAsScalaMap defined in class path resource iobigsensespringspringxml nested exception is javalangClassNotFoundException scalacollectionJavaConversions Ive narrowed it down to the Twirlsettings If I comment it out I cant use templates of course but I no longer see this exception from calling the same set of beans Im on sbt and Scala My sbttwirl plugin in Does the twirl plugin do something weird that makes JavaConversions inaccessible Id really like to use the Play template engine to replace my old JSPs Here is the source code Revision e and the one right before it on the reengineering branch Itd be great if it was possible to use jade in the same way as twirl ie as a standalone template engine available to SBT Possibly this would entail implementing support for several different language plugins 