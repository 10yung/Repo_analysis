Originates from Current behavior When acceptFrom is used but no sortable with the selector can be found the sortable freezes Needs validation This should be validated with an example on codepen Desired behavior Catch error from isConnected and log to console Make sure the sortables work as if acceptFrom was not present Sortable not working with iframes indexhtml html doctype html head meta charsetutf titleHTML Sortable librarytitle link relstylesheet hrefbasscsscss script src script srchtml sortablejsscript head body iframe srcframehtml width height stylefloatleftiframe div stylewidth px floatleft ul classosortable list flex flexcolumn listreset li classp mb border borderwhite white bgorangeItem li li classp mb border borderwhite white bgorangeItem li li classp mb border borderwhite white bgorangeItem li ul div script sortableosortable copy true forcePlaceholderSize true placeholderClass phclass hoverClass bgmaroon yellow script body framehtml html doctype html head meta charsetutf titleHTML Sortable librarytitle link relstylesheet hrefbasscsscss script src script srchtml sortablejsscript head body div ul classosortable list flex flexcolumn listreset li classp mb border borderwhite white bgorangeItem li li classp mb border borderwhite white bgorangeItem li li classp mb border borderwhite white bgorangeItem li ul div script sortableosortable acceptFrom osortable forcePlaceholderSize true placeholderClass phclass hoverClass bgmaroon yellow script body Im opening this issue because I am experiencing an issue when dragging images in Firefox After dragging is complete I am redirected to URL of the image that was dragged Works as expected in other browsers supporting information I use sortable version I tested in the following browser incl versions FF Windows OS XmacOS or Linux macOS How can the issue be reproduce the problem I can reproduce this problem given the following ul classsortable imagescontainer ariadropeffectmove li classuploaded roleoption ariagrabbedfalse img src draggabletrue li li classuploaded roleoption ariagrabbedfalse img src draggabletrue li li classuploaded roleoption ariagrabbedfalse img src draggabletrue li li classuploaded roleoption ariagrabbedfalse img src draggabletrue li li classuploaded roleoption ariagrabbedfalse img src draggabletrue li ul Forgive me if this specific issue has already been brought up but i was unable to find it at least in open issues Thank you Two listeners are added for dragenter One here preaddEventListenersortableElement dragenter function e var target getEventTargete var sortableContainer findSortabletarget e pre and the second here preaddEventListenerlistItemsconcatsortableElement dragenter onDragOverEnterpre The callback is stored using the event name preelementaddEventListenereventName callback storeelementsetDataevent eventName callbackpre which causes one to overwrite the other Now only one callback can be retrieved for removal preelementremoveEventListenereventName storeelementgetDataevent eventName storeelementdeleteDataevent eventNamepre A fix could be to remove this line altogether preaddEventListenerlistItemsconcatsortableElement dragenter onDragOverEnterpre Dragging would still be caught by the dragover event listener in the adjacent line Is there a reason why we need both dragover and dragenter See issue for background Im opening this issue because I used wrappers to group some elements and wanted to reorder the wrappers css of hoverClass set in config would not show up since most of the time my cursor is on a child element It is probably result of this line the eventtarget from a child element will not match item supporting information I use sortable version v I tested in the following browser incl versions Google Chrome Windows OS XmacOS or Linux Windows How can the issue be reproduce the problem Wrap the list content text of the first example provided in a p item no longer changes to maroon when hovered ul classml jssortable sortable list flex flexcolumn listreset li classmb navy bgyellow styleposition relative zindex p classmb p Item pli li classmb navy bgyellow styleposition relative zindex p classmb p Item pli li classmb navy bgyellow styleposition relative zindex p classmb p Item pli li classmb navy bgyellow styleposition relative zindex p classmb p Item pli li classmb navy bgyellow styleposition relative zindex p classmb p Item pli li classmb navy bgyellow styleposition relative zindex p classmb p Item pli ul As a quick fix I modified the html sortablejs adding a class to all sortablelist property to define as sortable sortableElementisSortable true sortableElementclassListaddisSortable then check if the eventtarget a descendant of item and if they share the same parent sortablelist if itemcontainseventtarget itemclosestisSortable eventtargetclosestisSortable a itemclassListremoveapplya hoverClasses Hope this would be helpful not sure if this will cause any conflicts Im opening this issue because supporting information I use sortable version I tested in the following browser incl versions Windows OS XmacOS or Linux How can the issue be reproduce the problem Please add a complete description of how to reproduce the problem Thank you for contributing Please make sure your contribution is in line with the contribution guidelines Participation in this open source project is subject to the Code of Conduct Before creating a feature requests please review the existing feature requests and make sure there isnt one that already describes the feature you are missing Whats the feature What problem is the feature intended to solve Is this feature similar to an existing feature in another project In an iFrame with web security flags turned on the dragover event never fires thereby breaking the drag and drop feature of html sortable Apparently the web security settings do this to prevent dragging and dropping content outside the bounds of the iFrame Unfortunately I dont have control over the iFrame since that iFrame and the security settings applied to it are controlled by Twitch and my code a Twitch extension runs in that iFrame they provide and launch with my page content as the URL source for the iFrame Is there a way to fix this perhaps a workaround involving using some other technique or event that would not conflict with the iFrames web security settings Im opening this issue because improve drag element supporting information I use sortable version I tested in the following browser incl versions chrome bit Windows OS XmacOS or Linux OS XmacOS The current code uses height values even when moving left and right and it should be drag over half of elements height To avoid flicker determine where to position the placeholder based on where the mouse pointer is relative to the elements vertical center var placeAfter false try var elementMiddle offsetelementtop elementoffsetHeight placeAfter pageY elementMiddle catch e placeAfter placeholderIndex thisIndex if placeAfter insertAfterelement storesortableElementplaceholder else insertBeforeelement storesortableElementplaceholder How about improving drag like this if you just get in the rectangle and try to respond This way it does not matter whether you move it to the left or right This will help in natural movement for sort prevY prevX global var prevY var prevX try placeAfter prevY offsetelementtop pageY offsetelementtop prevX offsetelementleft pageX offsetelementleft prevY pageY prevX pageX catch e placeAfter placeholderIndex thisIndex if placeAfter insertAfterelement storesortableElementplaceholder else insertBeforeelement storesortableElementplaceholder Maybe adding this way as an argument would be nice like this sortablesomesortable method halfOfHeight sortablesomesortable method Rectangle Thanks for using a good library Built a drag and drop webpage builder where users can drag and drop elements onto a template they can also add a youtube video as a video background Bug If a user loads a background video before dragging and dropping anything in to the page this stops the users from being able to add from the drag and drop elements from html Sortable The page does not crash This has only happened in the latest version of Chrome All other browsers if works as expected Im opening this issue because disabled items should never be draggable and sortable supporting information I use sortable version latest version I tested in the following browser incl versions Chrome Windows OS XmacOS or Linux Windows How can the issue be reproduce the problem Steps to reproduce Navigate to the examples page Go to the third example of Exclude Items The positive test works Try dragging the normal enabled list items a few times The negative test fails Try dragging the disabled item you can drag it by hard holding the mouse on the item and slightly dragging it left or right then you can place it anywhere before or after other items When you try to drag the disabled item it allows you to thus drag and move reorder the item which as per definition should not be draggable Thank you for contributing Please make sure your contribution is in line with the contribution guidelines Participation in this open source project is subject to the Code of Conduct Before creating a feature requests please review the existing feature requests and make sure there isnt one that already describes the feature you are missing Whats the feature What problem is the feature intended to solve Is this feature similar to an existing feature in another project 