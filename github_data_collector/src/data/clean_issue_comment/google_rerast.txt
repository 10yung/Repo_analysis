I was trying to replace rtry with in a project which happens to be inside a workspace Ive put an example here Running cargo nightly rerast rulesfilertryrs diff from inside cratesrerasttest inside that repo just outputs error No such file or directory os error If I rename the Cargotoml in the workspace root to Cargotoml then it works I have a project which has moved to the edition and has had rustfix applied to replace try with rtry Should rerast work converting those to I tried with the latest release master and the nightly version mentioned above in all cases the diff is empty and force has no effect Originally posted by jugglerchris in Id like to write a rule that modifies function declarations such as deleting an argument of a specific type For instance Id like to translate all functions of type fn foofile File s str to delete the s argument and all uses of it However in trying to do so I received an error from replace saying that no rules expected the token fn How can I write a rule that would match fn foofile File s str and delete the s str argument And then additionally match inside the body of any matching function to make more changes With an up to date nightly rustc nightly f ac I get the following build failure Compiling rerast v error E this pattern has fields but the corresponding tuple variant has fields homejoshcargoregistrysrcgithubcom ecc db ec rerast srcrulefinderrs if let hirExprKindAddrOf ref expr addrexprkind expected fields found error E this pattern has fields but the corresponding tuple variant has fields homejoshcargoregistrysrcgithubcom ecc db ec rerast srcrulematcherrs ExprKindAddrOfpkind pmut ref pexpr expected fields found error E this pattern has fields but the corresponding tuple variant has fields homejoshcargoregistrysrcgithubcom ecc db ec rerast srcrulematcherrs ExprKindAddrOfckind cmut ref cexpr expected fields found I tried this code rust extern crate rcc use rccdataLocation fn rule l Location Location replacelclone l unreachable but I get a very long JSON error saying cant find crate for rcc Ive been trying to get a rules file that rewrites Resultr BoxError into Resultr Boxdyn Error and failing It would be useful to have an example for the replacetype macro since those are pretty much undocumented at the moment For reference my current attempt at this looks like rust use stderrorError fn usedynforboxederrortraitsTr T replacetypeResultr BoxError Resultr Boxdyn Error unreachable If a crate has a nonempty features section then it seems that not all targets get checked for matches unless the user runs cargo clean first