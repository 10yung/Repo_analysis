When using tonich over UDS I think it should be possible to allow the in the authority header This looks related to where Jan is also mentioning potential issues might arise once h would be used over UDS From RFC For example the file URI scheme is defined so that no authority an empty host and localhost all mean the endusers machine whereas the http scheme considers a missing authority or empty host invalid A longer description of the issue can be found at Perhaps it would be possible to support file and then also perhaps the unix scheme and depending on that determine if the authority header is valid for the current scheme Most of the unsafe code used when interacting with BytesStr is during construction to ensure that the bytes supplied are in valid utf but without performing validation on the input It turns out that all usages of BytesStrfromutf unchecked can be replaced with two functions fn fromstr str BytesStr and const fn fromstaticstr static str BytesStr and I cant see any reason for there to be a difference in performance I have already coded up the changes before I realised that the contribution guide suggested that a ticket should be raised before creating a PR You can find my changes here If you are happy for me to go ahead Ill make it a PR Im trying to create a service using h I can use but doesnt build Version grep h Cargotoml Cargolock Cargotomlh Cargolockname h Cargolock h registry Cargolockchecksum h registry b d e c fd a b fc b d a f c d cd feb b d Compiling h v error E type mismatch resolving impl corefuturefutureFuture as corefuturefutureFutureOutput stdoptionOptionstdresultResultusize errorError Usersmartincargoregistrysrcgithubcom ecc db ec h srcsharers pub async fn data mut self buf mut u OptionResultusize crateError expected struct bytesbytesBytes found usize note expected type stdoptionOptionstdresultResultbytesbytesBytes found type stdoptionOptionstdresultResultusize note the return type of a function must have a statically known size Looking at the code in my cargo cache it does look strange data which takes buf and returns usize delegates to the hidden polldata which returns a Bytes pub async fn data mut self buf mut u OptionResultusize crateError futuresutilfuturepollfnmove cx selfpolldatacxawait Get optional trailers for this stream pub async fn trailers mut self ResultOptionHeaderMap crateError futuresutilfuturepollfnmove cx selfpolltrailerscxawait dochidden pub fn polldata mut self cx mut Context PollOptionResultBytes crateEr ror selfinnerinnerpolldatacxmaperrIntointo Is a strange release Somewhere in between std futures and bytes See eg h serverConnection which doesnt mention the Stream instance at all A serverpush and clientpush example is added to show the usage of serverpush Hi Im testing the serverpush feature that was just recently merged but tokio seems to always panic when using this feature Here is the code I use for the server and the client In serverpush rs rust use h server use bytes use httpuri use httpRequest Response StatusCode use stderrorError use tokionetTcpListener TcpStream tokiomain pub async fn main Result Boxdyn Error let envloggertryinit let mut listener TcpListenerbind await printlnlistening on listenerlocaladdr loop if let Oksocket peeraddr listeneracceptawait tokiospawnasync move if let Erre handlesocketawait println err e async fn handlesocket TcpStream Result Boxdyn Error let mut connection serverhandshakesocketawait printlnH connection bound while let Someresult connectionacceptawait let request mut respond result printlnrequest uri requesturi printlnGOT request request let response ResponsebuilderstatusStatusCodeOKbodyunwrap let mut pusheduriparts uriParts requestintoparts uriinto pusheduripartspathandquery uriPathAndQueryfromstaticpushedinto let uri uriUrifrompartspusheduripartsunwrap printlnuri uri let uri uriUrifromstatic let uri uriUrifromstatic printlnuri uri let pushedreq Requestbuilder uriuri body unwrap let pushedreq Requestbuilder uriuri body unwrap let pushedrsp httpResponsebuilderstatus bodyunwrap let pushedrsp httpResponsebuilderstatus bodyunwrap let mut sendpushed respond pushrequestpushedreq unwrap sendresponsepushedrsp false unwrap let mut sendpushed respond pushrequestpushedreq unwrap sendresponsepushedrsp false unwrap let mut send respondsendresponseresponse false println pushing data sendpushedsenddataBytesfromstaticbPushed data n true sendpushed senddataBytesfromstaticbAnother Pushed data n true println sending data sendsenddataBytesfromstaticbhello world true println H connection CLOSE Ok In clientrs rust use h client use httpHeaderMap Request use stderrorError use tokionetTcpStream tokiomain pub async fn main Result Boxdyn Error let envloggertryinit let tcp TcpStreamconnect await let mut client h clienthandshaketcpawait printlnsending request let request Requestbuilder uri body unwrap let request Requestbuilder uri body unwrap let request Requestbuilder uri body unwrap let mut trailers HeaderMapnew trailersinsertzomg helloparseunwrap let response mut stream clientsendrequestrequest falseunwrap let response mut stream clientsendrequestrequest falseunwrap let response mut stream clientsendrequestrequest falseunwrap send trailers streamsendtrailerstrailersunwrap Spawn a task to run the conn tokiospawnasync move if let Erre h await printlnGOT ERR e let response responseawait printlnGOT RESPONSE response let response response await printlnGOT RESPONSE response let response response await printlnGOT RESPONSE response Get the body let mut body responseintobody let mut body response intobody let mut body response intobody while let Somechunk bodydataawait printlnGOT CHUNK chunk while let Somechunk body dataawait printlnGOT CHUNK chunk while let Somechunk body dataawait printlnGOT CHUNK chunk if let Sometrailers bodytrailersawait printlnGOT TRAILERS trailers Ok A panic caused by a failed assertion in h has been observed in The assertion selfslabisempty fails under some circumstances in the Drop impl for protostreamsstoreStore The diagnostic gives me no idea whether this could be an application problem or how to mitigate it Hellom Im trying to use the new pushpromise feature I edited the server example to reply a indexhtml page and push a scriptjs file but it ends up with a PROTOCOLERROR and Im unable to debug it use h server use httpResponse Request StatusCode use tokionetTcpListener tokiomain pub async fn main let mut listener TcpListenerbind awaitexpectBind error Accept all incoming TCP connections loop if let Oksocket peeraddr listeneracceptawait Spawn a new task to process each connection tokiospawnasync move Start the HTTP connection handshake let mut h serverhandshakesocketawaitexpectHandshake error Accept all inbound HTTP streams sent over the connection while let Somerequest h acceptawait let request mut respond requestexpectIncoming request error printlnReceived request request Build a response with no body let response Responsebuilder statusStatusCodeOK body expectFirst response build error Send the response back to the client let mut stream respondsendresponseresponse false expectFirst response send error let contents bindexhtml contentstovec streamsenddatacontentsinto trueexpectindexhtml send error prepare the PUSH request let request Requestbuilder uriscriptjs body expectscriptjs request build error init the PUSH sequence let mut push respondpushrequestrequest expectscriptjs request send error Build a response with no body let response Responsebuilder statusStatusCodeOK body expectSecond response build error Send the response back to the client let mut stream pushsendresponseresponse false expectSecond response send error let contents bscriptjs contentstovec streamsenddatacontentsinto trueexpectscriptjs send error Can you please help me creating a working PUSH example Thank you A curious thing happened panics from the same server same process within a second Both related to the h crate Aug PM UTC OS Version Linux generic None Report Version Application Specific Information value out of range Thread h xc b e h hpackencoderencodeint encoderrs h xc cb inlined h hpackencoderencodesizeupdate encoderrs h xc cb inlined h hpackencoderEncoderencodesizeupdates encoderrs h xc cb h hpackencoderEncoderencode encoderrs h xc e e inlined h frameheadersEncodingHeaderBlockencode headersrs h xc e e h frameheadersHeadersencode headersrs h x ed h codecframedwriteFramedWriteTbuffer framedwriters h x f inlined h codecCodecTbuffer modrs h x f inlined h protostreamsprioritizePrioritizepollcomplete prioritizers h x f h protostreamssendSendpollcomplete sendrs h x d e e h protostreamsstreamsStreamsTpollcomplete streamsrs h x f h protoconnectionConnectionTpoll connectionrs h x a dc inlined h serverConnectionTpollclose serverrs h x a dc h serverConnectionT as futuresstreamStreampoll serverrs hyper x f inlined hyperprotoh serverServingTpollserver serverrs hyper x f inlined hyperprotoh serverServerT as futuresfutureFuturepoll serverrs futures x f futuresfutureeitherEitherT as futuresfutureFuturepoll eitherrs futures x c e inlined futuresfutureoptionTpoll optionrs hyper x c e hyperserverconnConnectionT as futuresfutureFuturepoll connrs flyproxy x add inlined flyproxysessionhttpHttpSession as futuresfutureFuturepoll modrs flyproxy x add flyproxysessionSession as futuresfutureFuturepoll modrs flyproxy x cb inlined flyproxydispatchMachine as flyproxydispatchPollMachinepolldrivingsession modrs core x cb inlined coreopsfunctionFnOncecallonce functionrs renttoown x cb inlined renttoownRentToOwnTwith librs flyproxy x cb inlined flyproxydispatchMachineFuture as futuresfutureFuturepoll modrs flyproxy x cb flyproxydispatchDispatchFuture as futuresfutureFuturepoll modrs flyproxy x ff inlined flyproxyfrontendtlsMachine as flyproxyfrontendtlsPollMachinepolldispatch tlsrs flyproxy x ff inlined flyproxyfrontendtlsMachineFuture as futuresfutureFuturepollclosureclosure tlsrs renttoown x ff inlined renttoownRentToOwnTwith librs flyproxy x ff inlined flyproxyfrontendtlsMachineFuture as futuresfutureFuturepollclosure tlsrs renttoown x ff renttoownRentToOwnTwith librs flyproxy x e inlined flyproxyfrontendtlsMachineFuture as futuresfutureFuturepoll tlsrs flyproxy x e flyproxyfrontendtlsTlsHandlerFuture as futuresfutureFuturepoll tlsrs flyproxy x flyproxyruntimeTemporaryT as futuresfutureFuturepoll runtimers alloc xbfcb inlined allocboxedBoxT as futuresfutureFuturepoll modrs futures xbfcb inlined futurestaskimplSpawnTpollfuturenotifyclosure modrs futures xbfcb inlined futurestaskimplSpawnTenterclosure modrs futures xbfcb futurestaskimplstdset modrs futures xbfc inlined futurestaskimplSpawnTenter modrs futures xbfc inlined futurestaskimplSpawnTpollfnnotify modrs futures xbfc inlined futurestaskimplSpawnTpollfuturenotify modrs tokiothreadpool xbfc inlined tokiothreadpooltaskTaskrunclosure modrs core xbfc inlined coreopsfunctionFnOncecallonce functionrs std xbfc inlined stdpanicAssertUnwindSafeT as coreopsfunctionFnOnceTcallonce panicrs std xbfc stdpanickingtrydocall panickingrs unknown xdce ea rustmaybecatchpanic librs std xbf db inlined stdpanickingtry panickingrs std xbf db inlined stdpaniccatchunwind panicrs tokiothreadpool xbf db tokiothreadpooltaskTaskrun modrs tokiothreadpool xbf inlined tokiothreadpoolworkerWorkerruntask modrs tokiothreadpool xbf tokiothreadpoolworkerWorkerruntask modrs tokiothreadpool xbf ee inlined tokiothreadpoolworkerWorkertrystealtask modrs tokiothreadpool xbf ee inlined tokiothreadpoolworkerWorkertryruntask modrs tokiothreadpool xbf ee tokiothreadpoolworkerWorkerrun modrs tokio xbcf e inlined tokioruntimethreadpoolbuilderBuilderbuildclosureclosureclosureclosure builderrs tokiotimer xbcf e inlined tokiotimertimerhandlewithdefaultclosure handlers std xbcf e inlined stdthreadlocalLocalKeyTtrywith localrs std xbcf e stdthreadlocalLocalKeyTwith localrs tokiotimer xbcefdf inlined tokiotimertimerhandlewithdefault handlers tokio xbcefdf inlined tokioruntimethreadpoolbuilderBuilderbuildclosureclosureclosure builderrs tokiotimer xbcefdf inlined tokiotimerclockclockwithdefaultclosure clockrs std xbcefdf inlined stdthreadlocalLocalKeyTtrywith localrs std xbcefdf stdthreadlocalLocalKeyTwith localrs tokiotimer xbcf b inlined tokiotimerclockclockwithdefault clockrs tokio xbcf b inlined tokioruntimethreadpoolbuilderBuilderbuildclosureclosure builderrs tokioreactor xbcf b inlined tokioreactorwithdefaultclosure librs std xbcf b inlined stdthreadlocalLocalKeyTtrywith localrs std xbcf b stdthreadlocalLocalKeyTwith localrs tokioreactor xbd e inlined tokioreactorwithdefault librs tokio xbd e tokioruntimethreadpoolbuilderBuilderbuildclosure builderrs tokiothreadpool xbfd inlined tokiothreadpoolcallbackCallbackcall callbackrs tokiothreadpool xbfd inlined tokiothreadpoolworkerWorkerdorunclosureclosure modrs tokioexecutor xbfd inlined tokioexecutorglobalwithdefaultclosure globalrs std xbfd inlined stdthreadlocalLocalKeyTtrywith localrs std xbfd stdthreadlocalLocalKeyTwith localrs tokioexecutor xbfd e inlined tokioexecutorglobalwithdefault globalrs tokiothreadpool xbfd e inlined tokiothreadpoolworkerWorkerdorunclosure modrs std xbfd e inlined stdthreadlocalLocalKeyTtrywith localrs std xbfd e stdthreadlocalLocalKeyTwith localrs tokiothreadpool xbf e inlined tokiothreadpoolworkerWorkerdorun modrs tokiothreadpool xbf e inlined tokiothreadpoolpoolPoolspawnthreadclosure modrs std xbf e stdsyscommonbacktracerustbeginshortbacktrace backtracers std xbfc c inlined stdthreadBuilderspawnuncheckedclosureclosure modrs std xbfc c inlined stdpanicAssertUnwindSafeT as coreopsfunctionFnOnceTcallonce panicrs std xbfc c stdpanickingtrydocall panickingrs unknown xdce ea rustmaybecatchpanic librs std xbf ed inlined stdpanickingtry panickingrs std xbf ed inlined stdpaniccatchunwind panicrs std xbf ed inlined stdthreadBuilderspawnuncheckedclosure modrs core xbf ed coreopsfunctionFnOncecalloncevtableshim functionrs alloc xdb f allocboxedBoxT as coreopsfunctionFnOnceTcallonce boxedrs alloc xdcdc inlined allocboxedBoxT as coreopsfunctionFnOnceTcallonce boxedrs std xdcdc inlined stdsyscommonthreadstartthread threadrs std xdcdc stdsysunixthreadThreadnewthreadstart threadrs Aug PM UTC OS Version Linux generic None Report Version Application Specific Information called Resultunwrap on an Err value PoisonError inner Thread core x bf coreresultunwrapfailed macrosrs core x d inlined coreresultResultTunwrap resultrs h x d h protostreamsstreamsStreamRefTreservecapacity streamsrs h x e f d inlined h shareSendStreamTreservecapacity sharers hyper x e f d hyperprotoh PipeToSendStreamT as futuresfutureFuturepoll modrs hyper x d inlined hyperprotoh serverH StreamTpoll serverrs hyper x d hyperprotoh serverH StreamT as futuresfutureFuturepoll serverrs alloc xbfcb inlined allocboxedBoxT as futuresfutureFuturepoll modrs futures xbfcb inlined futurestaskimplSpawnTpollfuturenotifyclosure modrs futures xbfcb inlined futurestaskimplSpawnTenterclosure modrs futures xbfcb futurestaskimplstdset modrs futures xbfc inlined futurestaskimplSpawnTenter modrs futures xbfc inlined futurestaskimplSpawnTpollfnnotify modrs futures xbfc inlined futurestaskimplSpawnTpollfuturenotify modrs tokiothreadpool xbfc inlined tokiothreadpooltaskTaskrunclosure modrs core xbfc inlined coreopsfunctionFnOncecallonce functionrs std xbfc inlined stdpanicAssertUnwindSafeT as coreopsfunctionFnOnceTcallonce panicrs std xbfc stdpanickingtrydocall panickingrs unknown xdce ea rustmaybecatchpanic librs std xbf db inlined stdpanickingtry panickingrs std xbf db inlined stdpaniccatchunwind panicrs tokiothreadpool xbf db tokiothreadpooltaskTaskrun modrs tokiothreadpool xbf inlined tokiothreadpoolworkerWorkerruntask modrs tokiothreadpool xbf tokiothreadpoolworkerWorkerruntask modrs tokiothreadpool xbf ee inlined tokiothreadpoolworkerWorkertrystealtask modrs tokiothreadpool xbf ee inlined tokiothreadpoolworkerWorkertryruntask modrs tokiothreadpool xbf ee tokiothreadpoolworkerWorkerrun modrs tokio xbcf e inlined tokioruntimethreadpoolbuilderBuilderbuildclosureclosureclosureclosure builderrs tokiotimer xbcf e inlined tokiotimertimerhandlewithdefaultclosure handlers std xbcf e inlined stdthreadlocalLocalKeyTtrywith localrs std xbcf e stdthreadlocalLocalKeyTwith localrs tokiotimer xbcefdf inlined tokiotimertimerhandlewithdefault handlers tokio xbcefdf inlined tokioruntimethreadpoolbuilderBuilderbuildclosureclosureclosure builderrs tokiotimer xbcefdf inlined tokiotimerclockclockwithdefaultclosure clockrs std xbcefdf inlined stdthreadlocalLocalKeyTtrywith localrs std xbcefdf stdthreadlocalLocalKeyTwith localrs tokiotimer xbcf b inlined tokiotimerclockclockwithdefault clockrs tokio xbcf b inlined tokioruntimethreadpoolbuilderBuilderbuildclosureclosure builderrs tokioreactor xbcf b inlined tokioreactorwithdefaultclosure librs std xbcf b inlined stdthreadlocalLocalKeyTtrywith localrs std xbcf b stdthreadlocalLocalKeyTwith localrs tokioreactor xbd e inlined tokioreactorwithdefault librs tokio xbd e tokioruntimethreadpoolbuilderBuilderbuildclosure builderrs tokiothreadpool xbfd inlined tokiothreadpoolcallbackCallbackcall callbackrs tokiothreadpool xbfd inlined tokiothreadpoolworkerWorkerdorunclosureclosure modrs tokioexecutor xbfd inlined tokioexecutorglobalwithdefaultclosure globalrs std xbfd inlined stdthreadlocalLocalKeyTtrywith localrs std xbfd stdthreadlocalLocalKeyTwith localrs tokioexecutor xbfd e inlined tokioexecutorglobalwithdefault globalrs tokiothreadpool xbfd e inlined tokiothreadpoolworkerWorkerdorunclosure modrs std xbfd e inlined stdthreadlocalLocalKeyTtrywith localrs std xbfd e stdthreadlocalLocalKeyTwith localrs tokiothreadpool xbf e inlined tokiothreadpoolworkerWorkerdorun modrs tokiothreadpool xbf e inlined tokiothreadpoolpoolPoolspawnthreadclosure modrs std xbf e stdsyscommonbacktracerustbeginshortbacktrace backtracers std xbfc c inlined stdthreadBuilderspawnuncheckedclosureclosure modrs std xbfc c inlined stdpanicAssertUnwindSafeT as coreopsfunctionFnOnceTcallonce panicrs std xbfc c stdpanickingtrydocall panickingrs unknown xdce ea rustmaybecatchpanic librs std xbf ed inlined stdpanickingtry panickingrs std xbf ed inlined stdpaniccatchunwind panicrs std xbf ed inlined stdthreadBuilderspawnuncheckedclosure modrs core xbf ed coreopsfunctionFnOncecalloncevtableshim functionrs alloc xdb f allocboxedBoxT as coreopsfunctionFnOnceTcallonce boxedrs alloc xdcdc inlined allocboxedBoxT as coreopsfunctionFnOnceTcallonce boxedrs std xdcdc inlined stdsyscommonthreadstartthread threadrs std xdcdc stdsysunixthreadThreadnewthreadstart threadrs Running rust This only happened once and were serving a lot of requests Still could be interesting to fix it though if possible Not panicking would probably be good if its unfixable It might be a good idea to check to see if h is vulnerable to any of these HTTP issues that Netflix has drawn attention to Hacker News comment thread 