In The link for et first line is broken at the moment uname srio Linux generic x GNULinux ruby v ruby p revision x linuxgnu apt show rubymustache Package rubymustache Version mustache v Mustache v cat nameyaml name name name cat nametemplate Hello name mustache t nameyaml nametemplate multi static n name n n name n n name n n mustache nameyaml nametemplate Hello Expected output Hello Hello Hello ps Mustache v behaves in the same way Might be unrelated cat nameyaml nametemplate mustache Traceback most recent call last from usrbinmustache in main from usrbinmustache in processfiles from usrbinmustache in reduce from usrbinmustache in each usrbinmustache in merge no implicit conversion of String into Hash TypeError or cat nameyaml nametemplate mustache Traceback most recent call last from usrlocalbinmustache in main from usrlocalbinmustache in load from varlibgems gemsmustache binmustache in top required from varlibgems gemsmustache binmustache in processfiles from varlibgems gemsmustache binmustache in reduce from varlibgems gemsmustache binmustache in each varlibgems gemsmustache binmustache in merge no implicit conversion of String into Hash TypeError I may have found an issue in the handling of partials enshrined in the testsuite for it I am looking at commit b a e e df c ace b of The issue looks to be in the handling of standalone partials Partials look to differ from the handling for other standalones like comments Checked that I could have used sections for my example as well Here is the baseline test case in commentsyml name Standalone Without Previous Line desc Standalone tags should not require a newline to precede them data template Im Still Standalone n expected The leading two spaces before the tag are eliminated as is the trailing n And the equivalent test case in partialsyml name Standalone Without Previous Line desc Standalone tags should not require a newline to precede them data template partial n partials partial n expected n Contrary to expectations the leading spaces are not eliminated Actually it seems that a second copy of these spaces is injected into the output inside the text of the partial even Ie the partials text is n and in the output we get n the spaces inserted after the n I would have expected n as output ie leading spaces eliminated and no spaces injected May I have some clarification GitHub does not honour strikethrough when split over multiple lines This commit adds an extra closing and opening tag to give the desired effect I am trying the following template Mustacherender user firstname from country JSONparseuser firstname Michael But am getting an exception about using the in my key When I try it on with the mustache engine I see no issues Thanks for the help The templatepath can be a colondelimited list This is a resurrection of PR I posted this on the main Mustache github page but Ive tried the same thing using the Bash version mo and it doesnt have the same effect Therefore I think this is a bug in the ruby gem I posted this question on stack exchange However it looks like a bug to me after reading the manual and trawling google searches all morning I stripped the code down even further since I posted that example to really try to minimise authannotations foo bar baz sam jam man echo namespace qa inputs echo authannotations authannotations inputs echo Ingress inputs inputs cat inputs echo metadata annotations nginxthing anotherthing authannotations spec rules host blablabla namespace examplecom ingressmustache echo Raw Ingress ingressmustache cat ingressmustache mustache inputs ingressmustache ingress yaml echo Will apply the following ingress cat ingress yaml Heres the output I get from the above namespace qa authannotations foo bar baz sam jam man Raw Ingress ingressmustache metadata annotations nginxthing anotherthing authannotations spec rules host blablabla namespace examplecom Will apply the following ingress metadata annotations nginxthing anotherthing foobar baz samjam man spec rules host blablablaqaexamplecom and I really dont understand why the line after anotherthing is rendered as JSON instead of YAML Im using mustashe v on Ubuntu Thanks Mustacherenderasjson causes stack overflow error SystemStackError stack level too deep For some reason options are not parsed including the r option when stdin is not a tty This is likely due to line in binmustache MustacheCLIparseoptionsARGV if stdintty This inhibits loading of Ruby libraries or in my case my own gem to add some processing options to the templates when mustache is being called from CMake This is because CMake provides mustache with a stdin that is not a tty Tried to fix this by simply removing the ifstatement at the end this works So line would become MustacheCLIparseoptionsARGV I wanted to customize just the layout template in Gollum but since the template directory you can pass in must contain all templates I wound up having to copy all the templates from the Gollum gem into my own template directory In order to make this DRYer I changed Gollum to prepend the custom directory to the gem directory with a colon delimiter then updated Mustache to accept a templatepath containing colons and do a search for templates This fixes issue Note that I bumped the version to to ease in testing my Gollum setup