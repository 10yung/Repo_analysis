Looks nicer on higher res screens Also fix some typos and update some links Includes PR Python are EOL and no longer receiving security updates or any updates from the core Python team Version Release date Supported until Source Python and are also failing on Travis CI as theyve also dropped them added some ideas for koans from Any plans on removing the python support directory and just keep python moving it to the root directory and also removing support for older python versions Hey looks like typo in aboutscopepy python def testincrementingwithlocalcounterself global counter start counter selfincrementusinglocalcounterstart should be counter instead of start selfassertEqualFalse counter start Yes in both cases the answer is False But logically in start we should keep initial value and then compare with modified counter Hey gregmalcolm I hope this post finds you well Thanks for maintaining this awesome project While solving the Koans when I saw something at the abouttuplespy file Now python def testtuplesofonelookpeculiarself selfassertEqual class selfassertEqual class selfassertEqual Im a tuple selfassertEqual Not a tuple Im not sure if thats the expected behaviour but I think it will be an improvement to check the class at the last two asserts Doing that will help those who do the koans to understand that the trailing comma means a tuple even if the value is not there and when its just an element it behaves as the value that is contained inside the tuple Suggestion python def testtuplesofonelookpeculiarself selfassertEqual class selfassertEqual class selfassertEqual Im a tupleclass selfassertEqual Not a tupleclass Ill open a PR with it just in case you think its a good idea too The CI builds appear to be failing on Python and From what I saw it looks like the installations for those versions of Python might not be available any more at the URLs were specifying Not sure if we want to try to fix that or consider dropping support for those versions of Python See Hello in python aboutinheritancepy there is a koan telling the next class PugDog def initself name pass class GreyhoundDog def initself name superinitname def testbaseinitdoesnotgetcalledautomaticallyself snoopy selfPugSnoopy with selfassertRaises name snoopyname def testbaseinithastobecalledexplicitlyself boxer selfGreyhoundBoxer selfassertEqual boxername The last one is false in Python I suggest to rearrange it to something like class PugDog def initself name pass class GreyhoundDog pass def testbaseinitcouldbeoverrideself snoopy selfPugSnoopy with selfassertRaises name snoopyname def testbaseinitisnotrequiredtobecalledexplicitlyself boxer selfGreyhoundBoxer selfassertEqual boxername Break apart the last test for clarity Removed trycatch as it seems unnecessary