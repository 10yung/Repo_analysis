Related to Theres a YAPF demo being used officially in the READMEmd Source code of the online demo If we take a look at the Pipfile We can see the online demo is using yapf version This is what the facebook style looks like in Notice that in the yapfformatted code below the array list of dictionary entries is neatly split and there is no trailing comma in the list x a a a b c b c a b c a b c y hello world z hello world a hello formatworld class fooobject def fself return def gself x y return y def fa return a xy Im currently using yapf version installed using Python bit through python m pip install yapf The facebook style used in yapf is incorrectly formatted as shown in the code below The code is identical to the code used in the online demo x a a a b c b c a b c a b c y hello world z hello world a hello formatworld class fooobject def fself return def gself x y return y def fa return a xy Notice how the array list of dictionary entries are formatted in a weird way and I think this is a regression from what is essentially a neatly formatted code No yapftest test cases were failing and PEP did not care about the indentation layout of the array list However from a readability standpoint near the closing bracket of the array list you will see an incorrectly indented which is indented twice That is the main problem of this issue There seems to be some inconsistent list formatting that somehow the test cases arent catching With google style yapf is trying to reformat this python thisislongenoughtorequireahangingindent thisislongenoughtorequireahangingindent foo Fooooosdf sdkfjdklsfj dsklf jdsklfjdsklfj dsklfj sdklfjdskl fjdskl fjdskl fjdskl fjdsklfj dklsfjdkls fjdsklfjdsklfjdskl True Like this python thisislongenoughtorequireahangingindent thisislongenoughtorequireahangingindent foo Fooooosdf sdkfjdklsfj dsklf jdsklfjdsklfj dsklfj sdklfjdskl fjdskl fjdskl fjdskl fjdsklfj dklsfjdkls fjdsklfjdsklfjdskl True With Google style yapf produces this python a aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbb Id expect the function argument to be on the next line with the parenthesis like this python a aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa bbbbbbbbb I am suggesting options like list entry on new line somelist asdfasdf to somelist asdf asdf force comma after last entry somelist asdf asdf to somelist asdf asdf space list items somelist asdfasdf to somelist asdf asdf options would also make sense to cover dictionaries Best Regards This is what I have s here is a longish array literal and this is what I get with yapf nolocalstyle stylecolumnlimit splitalltoplevelcommaseparatedvaluesTrue s here is a longish array literal But what Id like is s here is a longish array literal The real issue is the break after the I cant figure out any way to remove this I tried splitbeforeexpressionafteropeningparenFalse I tried all kinds of stuff penalties etc and no matter what I always get a break after the Any suggestions Sometimes if we add parentheses to an expression yapf gives a better reformatting Heres an example Using this config style dedentclosingbrackets true Without surrounding parentheses Input code if aaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbb ccccccccccccc and ddddddddddddddddeeeeeeeeeeeeeeeeee fffffffffffffffffffff pass Reformatted by yapf if aaaaaaaaaaaaaaaaa bbbbbbbbbbbbbbbbbb ccccccccccccc and ddddddddddddddddeeeeeeeeeeeeeeeeee fffffffffffffffffffff pass yapf reuses the parentheses of the aaa function to keep the line continuation which is clever but it doesnt look as good as the next reformatting With surrounding parentheses Im adding parentheses to the input code to hint yapf to reformat more if aaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbb ccccccccccccc and ddddddddddddddddeeeeeeeeeeeeeeeeee fffffffffffffffffffff pass yapf now gives the following output if aaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbb ccccccccccccc and ddddddddddddddddeeeeeeeeeeeeeeeeee fffffffffffffffffffff pass which looks much better yapf should be able to add parentheses by itself Hi is formatted with yapf google style and it looks right to me The CI ran with yapf though and it wanted to change the indent in a way that seems wrong to me I tried coming up with a simpler case to reproduce the issue and Ive got one but it seems unrelated to the change above so I dont think I understand whats happening at all Anyway this passes with google style but fails on python def f a str b str pass However this passes both and python def f a str b str None pass I dont understand whats going on here at all but it seems like a bug to me Formatting this with the google style python for x in fa b pass Results in this python for x in f a b pass Shouldnt the b line be indented to match a This PR make CONTINUATIONALIGNSTYLEFIXED and CONTINUATIONALIGNSTYLEVALIGNRIGHT option available for indenting with space Ref Compare to previous PR this one should solve the extra line break issue Changes made let new line indent generation method in format decision be continuation align style aware simplify tab replacement in format token as styling logic moved to format decision mostly This is a very minor bug as YAPF is mainly used with a file or a directory passed as a parameter But in case of using stdin for a code with r n Windows EOL it can break your code How to reproduce Use these code lines with Windows EOL def foo return a st variant run yapf in cmdexe on Windows with stylegoogle lines type the code above press Z ctrlz nd variant cat testpy python myapf stylegoogle lines You will see that formatting changed def foo return backslash lost a space added With Linux newlines n everything works fine Not able to get why does this problem happen from the first point of view I appreciate if you will help to understand the issue 