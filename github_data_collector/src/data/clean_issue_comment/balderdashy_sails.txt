Node version Sails version sails ORM hook version sailshookorm Sockets hook version sailshooksockets Grunt hook version sailshookgrunt hr confighttpjs moduleexportshttp locals filters numberFormat functionnum return UtilitynumberFormatnum Utilityjs numberFormat functionnum decimalpoint var self this if typeof num number return var lang typeof sailsconfiglang undefined en sailsconfiglang decimalpoint typeof decimalpoint undefined decimalpoint num numtoString num numreplace g num numreplaceg num parseFloatnum lets deal with float values if parseIntnum num decimalpoint selfdecimalPlacesnum if lang es number selfnumberformatnum decimalpoint else number selfnumberformatnum decimalpoint return number EJS b classgaugevalue reqsessionconfigdata numberFormat b Error numberFormat is undefined Please help How can I exclude the specific model from automigration in sails v I have tried to add migrate safe in the model but its not working Node version v Sails version sails ORM hook version sailshookorm Sockets hook version sailshooksockets Grunt hook version sailshookgrunt DB adapter version eg sailsmysql hr Node version v Sails version sails ORM hook version sailshookorm Sockets hook version sailshooksockets Organics hook version sailshookorganics Grunt hook version sailshookgrunt Uploads hook version sailshookuploads DB adapter version eg sailsmysql sailsmysql Skipper adapter version eg skippers skippers hr Hello I want to create a multi tenancy with my own method I have this idea which is checking a datastore owned by current user then pass it to sailsconfig or processenv variable Then Ive tried to use the datastore passed to sailsconfig or processenv in the datastore model definition but it failed because its not switching the datastore I have another idea to switch the datastore in controller However I have no idea how to do that Or Can it actually switch the datastore dynamically in the model definition after sails lift Node version Sails version sails ORM hook version sailshookorm Sockets hook version sailshooksockets Organics hook version sailshookorganics Grunt hook version sailshookgrunt Uploads hook version sailshookuploads DB adapter version eg sailsmysql sailsdisk Skipper adapter version eg skippers skippers hr h The issueh I stumbled across the issue while playing around with has many through associations in terms of resourceful pubsub When removing a model instance with this kind of association one would expect the resourceful pubsub to notify all associated model instances about the removal This does not work and even worse the pubsub routine crashes when invoking a DELETE on a model with has many through associations h How to reproduceh Create two models Post and Tag Create another model TagAssignment as an association table Create the has many through association in Post and Tag and the corresponding associations in TagAssignment Spin up sails Create one Post and one Tag and associate them actually the association is not necessary as far as I am concerned I am including this for the sake of completeness Delete either the created Post or Tag Postjs javascript moduleexports attributes tags collection tag via post through tagassignment Tagjs javascript moduleexports attributes posts collection post via tag through tagassignment TagAssignmentjs javascript moduleexports attributes post model post tag model tag h Behaviour of different database adaptersh The issue behaves different when comparing the sailsdisk adapter with the productive adapters thats why this is not an DoS issue When using sailsdisk the exception thrown is not being caught thus killing the server immediately rendering manytomany through associations in development nearly useless All productive adapters catch the exception and log it to stdout can result in heavy log spam if many models with this kind of association exist h Exception with stacktraceh homefabianDokumentelaboratorymyappnodemodulessailslibhookspubsubindexjs if reverseAttributemodel TypeError Cannot read property model of undefined at homefabianDokumentelaboratorymyappnodemodulessailslibhookspubsubindexjs at arrayEach homefabianDokumentelaboratorymyappnodemodulessailshqlodashlibindexjs at Functionanonymous homefabianDokumentelaboratorymyappnodemodulessailshqlodashlibindexjs at newConstructoranonymous homefabianDokumentelaboratorymyappnodemodulessailslibhookspubsubindexjs at homefabianDokumentelaboratorymyappnodemodulessailshqlodashlibindexjs at homefabianDokumentelaboratorymyappnodemodulessailshqlodashlibindexjs at Functionanonymous homefabianDokumentelaboratorymyappnodemodulessailshqlodashlibindexjs at newConstructorpublishDestroy homefabianDokumentelaboratorymyappnodemodulessailslibhookspubsubindexjs at newConstructorwrapper as publishDestroy homefabianDokumentelaboratorymyappnodemodulessailshqlodashlibindexjs at destroyedRecord homefabianDokumentelaboratorymyappnodemodulessailslibhooksblueprintsactionsdestroyjs at proceedToFinalAfterExecLC homefabianDokumentelaboratorymyappnodemodulesparleylibprivateDeferredjs at proceedToInterceptsAndChecks homefabianDokumentelaboratorymyappnodemodulesparleylibprivateDeferredjs at proceedToAfterExecSpinlocks homefabianDokumentelaboratorymyappnodemodulesparleylibprivateDeferredjs at homefabianDokumentelaboratorymyappnodemodulesparleylibprivateDeferredjs at afterIteratingOverRecords homefabianDokumentelaboratorymyappnodemoduleswaterlinelibwaterlinemethodsdestroyjs at homefabianDokumentelaboratorymyappnodemoduleswaterlinenodemodulesasyncdistasyncjs at homefabianDokumentelaboratorymyappnodemoduleswaterlinenodemodulesasyncdistasyncjs at eachOfLimit homefabianDokumentelaboratorymyappnodemoduleswaterlinenodemodulesasyncdistasyncjs at homefabianDokumentelaboratorymyappnodemoduleswaterlinenodemodulesasyncdistasyncjs at eachOf homefabianDokumentelaboratorymyappnodemoduleswaterlinenodemodulesasyncdistasyncjs at ObjecteachLimit homefabianDokumentelaboratorymyappnodemoduleswaterlinenodemodulesasyncdistasyncjs at homefabianDokumentelaboratorymyappnodemoduleswaterlinelibwaterlinemethodsdestroyjs h Root causeh I am new to sails and do not understand every single aspect of the framework But I tried to analyse the issue based on the exception thrown By having a look at the source files I was able to determine the root cause of this issue It seems like the pubsub routine tries to access the reverse attribute of the referenced model using the via key provided in the model As in manytomany through associations one provides the via key of the association table and not the reverse attribute of the referenced model pubsub is unable to access the reverse attribute e g when deleting a Post instance the pubsub routine tries to access the Attribute post of Tag which is undefinied in the general case Usage sails command options Node version v Sails version sails ORM hook version sailshookorm Sockets hook version sailshooksockets Organics hook version sailshookorganics Grunt hook version sailshookgrunt Uploads hook version sailshookuploads NA DB adapter version eg sailsmysql sailsmysql Skipper adapter version eg skippers NA Generated passwordResetToken and emailProofToken are not casesensitive which significantly decreases their security Steps to reproduce Generate a password reset email or account confirmation email Copypaste the link Change the case of any of the letters in the token The token will still work despite it not being an actual string match Sails version sails hr There are a number of sails dependencies which switch behaviour depending on NODEENV productionNODEENV production This means that if environmentspecific config is used for a staging environment as per the sails template project using configenvstagingjs and the env var NODEENVstaging staging environments will be following different code paths to production environments This is unexpected and probably not desirable in the majority of usecases Is there a simple way to choose that configenvstagingjs is loaded instead of configenvproductionjs even when the NODEENV environment variable is set to production Node version v Sails version sails ORM hook version sailshookorm Sockets hook version sailshooksockets Organics hook version sailshookorganics Grunt hook version sailshookgrunt Uploads hook version sailshookuploads DB adapter version eg sailsmysql sailsmongo hr Hi Everyone I ran into an issue today I deployed an API into production with docker for the first time on an empty database and my users could register twice or more with the same email even though I set it to unique true in my User model After some research I discovered that migrate safe in production also means that its NEVER going to create indexes or constraint even on the first launch when database is not even created I also discovered that its impossible to set migrate to alter in production which I understand This is very confusing because everyone expect the database to be correctly setup on first launch Especially when its working in development environment The worst part is that its not even yelling at you in any way Its like everything is working perfectly fine except not In my opinion it should either be written in bold capital letters in the documentation or fixed What do you think Node version v Sails version sails ORM hook version sailshookorm Sockets hook version sailshooksockets Grunt hook version sailshookgrunt Sails mongo version sailsmongo This is master model javascript moduleexports tableName MASTER schema true attributes name type string required true description type string whenever i am not passing description column value in request then it is storing as empty string value like this javascript name Swift description But i dont want to store description value in databasei need help asap hr fix for issue 