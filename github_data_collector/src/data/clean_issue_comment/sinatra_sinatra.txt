Should session sessionid be publicid because of perhaps Testing with Ruby rc which is the currently latest available with RVM I am getting some warnings when sinatrareloader is required Code to reproduce ruby testrb require sinatra require sinatrareloader set bind set port get do Hello world end Output ruby testrb storegemsruby rc gemssinatracontrib libsinatrareloaderrb warning The last argument is used as keyword parameters maybe should b e added to the call storegemsruby rc gemssinatra libsinatrabaserb warnin g The called method addfilter is defined here storegemsruby rc gemssinatracontrib libsinatrareloaderrb warning The last argument is used as keyword parameters maybe should be added to the call storegemsruby rc gemssinatra libsinatrabaserb warning The called method compile is defined here Sinatra v has taken the stage on for development with backup from Puma Puma starting in single mode Versions gem list sinatra sinatra sinatracontrib ruby v ruby rc master acbd f x linux Offending code and I can confirm that changing both options to options removes the warnings I wanted to submit a PR but running tests even before the change triggers tons of warnings and errors These were missed in Hi folks We have a simple route ping and wed like to prevent logging access to it What is the recommended way to do that Thank you in advance Whenever I try to install the sinatra gem the first install hangs during Installing ri documentation for sinatra I manually interrupt it then do it again and then it works I have no idea what causes it but all the other gems and their ri documentation do not have this issue I believe that there must be something special for sinatra documentation done that causes this behaviour since I do not see it at any other gem It may be difficult to find out but I am just reporting here to let you guys know anyway closes IMHO its good to give a nice convention over configuration feeling when running sinatra in development on the local machine or within docker without sacrificing security best practices in regard to exposing development applications to the local network I intentionally didnt change the default hint for the OptionParser as i consider this a convenience feature for development one thing less to get wrong where the best practice should be to declare it This is raising an exception on a production application I am running This should be fine since nil is an acceptable return type of the method x Asciidoc templates in TOC x Asciidoc templates x Mediawiki templates in TOC x Mediawiki templates x Using custom logic for template lookup in TOC x Using custom logic for template lookup x Available settings x Errors A few typos and wrong spelling here and there Were planning to change a lot of things in v probably well break some backwardcompatibility at the same time We should cut some release candidates for the version of course but I guess its not enough In order to reduce the number of people who suffer from large changes in v I believe that its very effective to headsup in advance to the major dependents