When starting a mysql container with version lastest the container is getting killed after a few seconds due to the following error taken from docker logs Note Entrypoint Entrypoint script for MySQL Server debian started Note Entrypoint Switching to dedicated user mysql Note Entrypoint Entrypoint script for MySQL Server debian started Note Entrypoint Initializing database files T Z Warning MY Server Changed limits maxopenfiles requested T Z Warning MY Server Changed limits tableopencache requested T Z Warning MY Server Disabling symbolic links using skipsymboliclinks or equivalent is the default Consider not using this option as it is deprecated and will be removed in a future release T Z System MY Server usrsbinmysqld mysqld initializing of server in progress as process T Z Warning MY Server rootlocalhost is created with an empty password Please consider switching off the initializeinsecure option Note Entrypoint Database files initialized Note Entrypoint Starting temporary server T Z Warning MY Server Changed limits maxopenfiles requested T Z Warning MY Server Changed limits tableopencache requested T Z Warning MY Server Disabling symbolic links using skipsymboliclinks or equivalent is the default Consider not using this option as it is deprecated and will be removed in a future release T Z System MY Server usrsbinmysqld mysqld starting as process T Z ERROR MY Server Failed to start mysqld daemon Check mysqld error log ERROR Entrypoint Unable to start server It works locally on a mac os system The exact linux ami is amzn amiecshvm x ebs ami d e d It is easily reproducable by running the follow command on an ec instance docker run e MYSQLROOTPASSWORDmysecretpw d mysql When running the same command but locking the version to it does work docker run e MYSQLROOTPASSWORDmysecretpw d mysql Its been a while since buster released This prevents weird errors when attributes get shifted to newline and are executed by dockerentrypointsh This PR removes the newline and when newline is stripped a Warning is printed Short version dockerentrypointsh scripts breaks as seen later in examples of this PR when newline is present with rather ugly error that is hard to analyze without checking the code of script Better error message or automated removal of newline would be more desirable This PR proposes automated newline removal Long version I have run into this when trying to get image working with kubernetes and erroneously generated kubernetes secret that contained the newline at the end From looking at the logs the error that I have made required me to do debugging of image as there was no good message on what is going on I believe there is no practical use case for having newline in any of variables if this is not true please correct me After the change proposed here the mysql image would progress with only printing warning when newline is included which would make this work in most cases With kubernetes the newline is preserved at the end of string which makes this invisible to user if such mistake is done Alternative approach to this would be to hard fail with error that newline was encountered in some variable as that will most probably never be desired and user should be aware of it Main idea for creating this PR is to avoid unnecessary image debugging when newline is accidentally included in any of the variables Please let me know what you think about this change and also let me know there are any changes needed for this to be merged Thank you How to reproduce issue aaa bb docker run name t e MYSQLROOTPASSWORDa d mysql charactersetserverutf mb collationserverutf mb unicodeci xxxxxxxx docker logs f xxxxxxxx mysql Note Entrypoint Temporary server started Warning Unable to load usrsharezoneinfoiso tab as time zone Skipping it Warning Unable to load usrsharezoneinfoleapsecondslist as time zone Skipping it Warning Unable to load usrsharezoneinfozonetab as time zone Skipping it Warning Unable to load usrsharezoneinfozone tab as time zone Skipping it Warning proxiespriv entry root b ef dce ignored in skipnameresolve mode Note Entrypoint Stopping temporary server mysqladmin unknown option bb ERROR Entrypoint Unable to shut down server mysql Note Entrypoint Temporary server started Warning Unable to load usrsharezoneinfoiso tab as time zone Skipping it Warning Unable to load usrsharezoneinfoleapsecondslist as time zone Skipping it Warning Unable to load usrsharezoneinfozonetab as time zone Skipping it Warning Unable to load usrsharezoneinfozone tab as time zone Skipping it Note Entrypoint Stopping temporary server mysqladmin ERROR unknown option bb ERROR Entrypoint Unable to shut down server mysql Note Entrypoint Temporary server started T Z System MY Server X Plugin ready for connections Socket varrunmysqldmysqlxsock Warning Unable to load usrsharezoneinfoiso tab as time zone Skipping it Warning Unable to load usrsharezoneinfoleapsecondslist as time zone Skipping it Warning Unable to load usrsharezoneinfozonetab as time zone Skipping it Warning Unable to load usrsharezoneinfozone tab as time zone Skipping it Note Entrypoint Stopping temporary server mysqladmin ERROR unknown option bb ERROR Entrypoint Unable to shut down server After fix the mysql can start properly and following can be seen in logs if there was any newline stripped including the name of variable from which it was stripped so user can fix it Warn Entrypoint Stripping newline from MYSQLROOTPASSWORD Hi folks Were running but looking to update to This is on kubernetes We can deploy new versions of fine still deploy its in our image But updating mysql to via killing the k s pod kubectl delete f pathtoyamlmysqlyaml bumping to then creating the pod kubectl create f pathtoyamlmysqlyaml fails T Z System MY Server usrsbinmysqld mysqld starting as process T Z System MY Server Starting upgrade of data directory T Z ERROR MY InnoDB Unable to lock ibdata error T Z ERROR MY InnoDB Unable to lock ibdata error T Z ERROR MY InnoDB Unable to lock ibdata error T Z ERROR MY InnoDB Unable to lock ibdata error T Z ERROR MY InnoDB Unable to lock ibdata error T Z ERROR MY InnoDB Upgrade after a crash is not supported This redo log was created with MySQL Please follow the instructions at T Z ERROR MY InnoDB Plugin initialization aborted with error Generic error T Z ERROR MY Server Failed to initialize DD Storage Engine T Z ERROR MY Server Data Dictionary initialization failed T Z ERROR MY Server Aborting T Z System MY Server usrsbinmysqld Shutdown complete mysqld MySQL Community Server GPL Any pointers I guess its the pod shutdown which is not graceful that needs to be corrected then the rest is just swapping out the MySQL version as along the lines of Hi Im using docker for a development environment which has a mysql image On my current computer running arch linux up to date with the default docker setup communitydocker and communitydockercompose All the containers I use locally works fine a ruby container a nodejs one a few dotnet core memcahed I only have issues with mysql that uses all the memory available that each time I start the container uses immediately all the memory of my computer Even the most basic use of the docker image with no database uses GB Ive tried the docker library mysql image version and the oracle version the percona version they all have the same issue Ive tried mariadb and it works as its supposed using something MB Ive tried the same mysql image with podman and had no issue it uses around MB My version of docker is Docker version ce build dd dd f Heres the Dockerfile FROM mysql ENV MYSQLROOTPASSWORD rootpassword ENV MYSQLALLOWEMPTYPASSWORDyes ENV MYSQLDATABASEdatabase Heres docker stats CONTAINER ID NAME CPU MEM USAGE LIMIT MEM NET IO BLOCK IO PIDS d ccdbd aa boringhaibt GiB GiB kB B MB MB And top inside the container top up users load average Tasks total running sleeping stopped zombie Cpus us sy ni id wa hi si st KiB Mem total used free buffers KiB Swap total used free cached Mem PID USER PR NI VIRT RES SHR S CPU MEM TIME COMMAND mysql g t S mysqld root R top I tried to limit the memory usage of the container using m and mysqld refuses to start when it is bellow g with the error ERROR mysqld failed while attempting to check config command was mysqld verbose help I found something even weirder On the same machine I run a Windows virtual machine using qemukvm When this machine is started the mysql container behave normally When this machine is not started it uses all the memory of my computer Im not entirely sure the issue is due to this docker image but Im a bit lost and dont know how to troubleshoot this problem further It seems to be specific to mysql running in a container on docker When creating an instance of the mysql container with the following variables from an env file using docker compose rootdemo confdocker cat envfileenv grep MYSQL MYSQLDATABASEsomevalue MYSQLUSERsqluser MYSQLPASSWORD TB Bf cqF MYSQLROOTPASSWORDqBr qxh J MYSQLROOTHOST MySQL crashes with the following output in the log Initializing database T Z Warning TIMESTAMP with implicit DEFAULT value is deprecated Please use explicitdefaultsfortimestamp server option see documentation for more details T Z Warning InnoDB New log files created LSN T Z Warning InnoDB Creating foreign key constraint system tables T Z Warning No existing UUID has been found so we assume that this is the first time that this server has been started Generating a new UUID a caa f e acf ac T Z Warning Gtid table is not ready to be used Table mysqlgtidexecuted cannot be opened T Z Warning rootlocalhost is created with an empty password Please consider switching off the initializeinsecure option Database initialized Initializing certificates Generating a RSA private key unable to write random state writing new private key to cakeypem Generating a RSA private key unable to write random state writing new private key to serverkeypem Generating a RSA private key unable to write random state writing new private key to clientkeypem Certificates initialized MySQL init process in progress T Z Warning TIMESTAMP with implicit DEFAULT value is deprecated Please use explicitdefaultsfortimestamp server option see documentation for more details T Z Note mysqld mysqld starting as process T Z Note InnoDB PUNCH HOLE support available T Z Note InnoDB Mutexes and rwlocks use GCC atomic builtins T Z Note InnoDB Uses event mutexes T Z Note InnoDB GCC builtin atomicthreadfence is used for memory barrier T Z Note InnoDB Compressed tables use zlib T Z Note InnoDB Using Linux native AIO T Z Note InnoDB Number of pools T Z Note InnoDB Using CPU crc instructions T Z Note InnoDB Initializing buffer pool total size M instances chunk size M T Z Note InnoDB Completed initialization of buffer pool T Z Note InnoDB If the mysqld execution user is authorized page cleaner thread priority can be changed See the man page of setpriority T Z Note InnoDB Highest supported file format is Barracuda T Z Note InnoDB Creating shared tablespace for temporary tables T Z Note InnoDB Setting file ibtmp size to MB Physically writing the file full Please wait T Z Note InnoDB File ibtmp size is now MB T Z Note InnoDB redo rollback segments found redo rollback segments are active T Z Note InnoDB nonredo rollback segments are active T Z Note InnoDB Waiting for purge to start T Z Note InnoDB started log sequence number T Z Note Plugin FEDERATED is disabled T Z Note InnoDB Loading buffer pools from varlibmysqlibbufferpool T Z Note InnoDB Buffer pools load completed at T Z Note Found capem servercertpem and serverkeypem in data directory Trying to enable SSL support using them T Z Warning CA certificate capem is self signed T Z Warning Insecure configuration for pidfile Location varrunmysqld in the path is accessible to all OS users Consider choosing a different directory T Z Note Event Scheduler Loaded events T Z Note mysqld ready for connections Version socket varrunmysqldmysqldsock port MySQL Community Server GPL Warning Unable to load usrsharezoneinfoiso tab as time zone Skipping it Warning Unable to load usrsharezoneinfoleapsecondslist as time zone Skipping it Warning Unable to load usrsharezoneinfozonetab as time zone Skipping it Warning Unable to load usrsharezoneinfozone tab as time zone Skipping it ERROR at line Unknown command J A standard installation of MySQL both for Oracle MySQL and Percona Server for MySQL will create the following directories varlibmysql varlibmysqlfiles default directory used for securefilepriv is varlibmysqlfiles whereas this is disabled in this image for some reason varlibmysqlkeyring default keyringfiledata is varlibmysqlkeyringkeyring which means that enabling the plugin immediately causes a warning and forces setting the keyring to be part of the MySQL datadir or similar Additionally the permissions for the datadir are inconsistent Here are the default permissions for the installation docker exec oraclemysql ls ld varlibmysqlfileskeyring drwxrx mysql mysql May varlibmysql drwxrx mysql mysql May varlibmysqlfiles drwxrx mysql mysql Jan varlibmysqlkeyring Here is the permission set for this image docker exec dockermysql ls ld varlibmysql drwxrxrx mysql mysql May varlibmysql if the MYSQLDATABASE environment variable contains underscores they are now escaped so that the GRANT matches exactly the given database name httpproxy can be defined as build argument when building the container behind a proxy Since version of GnuPG dirmngr takes care of accessing keyservers but dirmngr does not honor httpproxy unless it is configured to do so Because of this building the container behind a firewall fails since the base image was switched from debianjessie to debianstretch Closes 