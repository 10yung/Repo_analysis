Add support for string escapes eg n and so forth Add an ErasedAst after FinalAst where every monotype has been replaced by a JVM type Possibly introduce Box and Unbox operations in the AST Allow a form of Datalog query which consists only of a righthand side with no lefthand side Similar to how an SQL expression is just a rhs Including mutable lists sets and maps Add a collection of benchmarks for sets and maps We should split channels into two types one for sending and one for receiving A method cant have a name starting with true or false and will result in a crash Other keywords like rel or def are allowed in the beginning of a method name The crash only arise then true or false appear first in the method name As an example the following code snippet is bad def trueMethod Bool true def main Bool trueMethod and results in a crash with the following message Exception in thread main javalangStringIndexOutOfBoundsException offset count length at javabasejavalangStringcheckBoundsOffCountStringjava at javabasejavalangStringrangeCheckStringjava at javabasejavalangStringinitStringjava at orgparboiled ParserInputCharArrayBasedParserInputsliceStringParserInputscala at orgparboiled ErrorFormatterformatProblemErrorFormatterscala at orgparboiled ErrorFormatterformatErrorFormatterscala at orgparboiled ErrorFormatterformatErrorFormatterscala at orgparboiled ParserformatErrorParserscala at cauwaterlooflixlanguagephaseParserparseRootParserscala at cauwaterlooflixlanguagephaseParseranonfunrun Parserscala at cauwaterlooflixutilParOpsanonfunparMap ParOpsscala at scalaconcurrentFutureanonfunapply Futurescala at scalaconcurrentimplPromiseTransformationrunPromisescala at javabasejavautilconcurrentThreadPoolExecutorrunWorkerThreadPoolExecutorjava at javabasejavautilconcurrentThreadPoolExecutorWorkerrunThreadPoolExecutorjava at javabasejavalangThreadrunThreadjava Add a collection of Datalog benchmarks Rename the Path data type to File We should investigate whether we can support some form of JSXstyle syntax For example in JSX you can write something reminiscent of HTML div h Helloh h Good to see you hereh div This would then need to be desugared into appropriate function calls More information is available here An alternative is to look at Kotlin DSL 