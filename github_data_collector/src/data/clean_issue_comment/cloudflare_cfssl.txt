After running the following to install git go and cfssl as specified in the README bash sudo aptget install git y wget c sudo tar C usrlocal xzf go linuxamd targz export PATHPATHusrlocalgobin source profile go get u githubcomcloudflarecfsslcmdcfssl sudo mv gobincfssl bincfssl and then running bash cfssl version I get the output Version dev Runtime go which appears to be golangs version rather than the expected cfssls version Id like to note that the other cfssl commands seem to operate as cfssl typically does including help It just seems to be the version command that isnt working as expected A simple request since I spent an hour today trying to find out why cfssl didnt install after running go get u githubcomcloudflarecfsslcmdcfssl The documentation in the README seems to make it seem like cfssl will just work after running go get u githubcomcloudflarecfsslcmdcfssl but i had to ensure I moved the executable into my bin folder first before I was able to use it globally Adding a simple tidbit about this would make life easier for those out there who havent used Go before I can make these changes if you want I have Goddy wildcard certificate firmcom I want to make with my wildcard certificate for Kubernetes API certificate Thats possible CFSSL will help do it certIsRevokedCRL fetches issuer certificate from AIA extension defined URLs If none are defined or fetching fails CRL is used without signature checks even if HardFail is true This PR adds support for generating an OCSP response and inserting it into the db as soon as a cert is signed if a ocsp signer keypair is provided in serve mode I hope someone can perfect it with me link I am not entirely sure what is going on here but it seems that there is no way to generate a valid CA having an expiry less than minutes The generated CA is either a seconds away from expiry or is in fact expired Is there a work around for this Expiry handling for CA and other certs seems to be offset by minutes for some reason cfssl version Version Runtime go JSON request CN CA names C CA L QC O XYZ Inc ST Montreal OU Infrastructure CA expiry s pathlen key algo rsa size Example of the issue date cfssl gencert initca EXPcareqjson devnull jq r certopenssl x text in egrep AfterBefore date Thu Nov EST Not Before Nov GMT Not After Nov GMT Thu Nov EST The newkey and newcert endpoints now will print the sha digest in addition to md and sha Hello I maintain the cfssl package on Gentoo Linux and I am running into a couple of small issues I am patching around to get our package manager to build cfssl The first is the way VERSION is set in the makefile This doesnt work if you try to download the archive and build from there which is what our package manager does For example cd tmp wget tar xf v targz cd cfssl make fatal not a git repository or any of the parent directories git go build ldflags s w X githubcomcloudflarecfsslcliversionversion o bincfssl cmdcfssl go build ldflags s w X githubcomcloudflarecfsslcliversionversion o bincfsslbundle cmdcfsslbundle go build ldflags s w X githubcomcloudflarecfsslcliversionversion o bincfsslcertinfo cmdcfsslcertinfo go build ldflags s w X githubcomcloudflarecfsslcliversionversion o bincfsslnewkey cmdcfsslnewkey go build ldflags s w X githubcomcloudflarecfsslcliversionversion o bincfsslscan cmdcfsslscan go build ldflags s w X githubcomcloudflarecfsslcliversionversion o bincfssljson cmdcfssljson go build ldflags s w X githubcomcloudflarecfsslcliversionversion o binmkbundle cmdmkbundle go build ldflags s w X githubcomcloudflarecfsslcliversionversion o binmultirootca cmdmultirootca I can pass VERSION into the makefile but that doesnt eliminat the attempt to run git and get a version from there make VERSION fatal not a git repository or any of the parent directories git go build ldflags s w X githubcomcloudflarecfsslcliversionversion o bincfssl cmdcfssl The second issue is the use of s and w in LDFLAGS Normally stripping is handled by the package manager itself so these options should not be the default I have a patch which definitely cannot be submitted to you because it is a hack but I was wondering if we can come up with a way of fixing these issues for everyone Thanks William