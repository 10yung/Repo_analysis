This PR contains the following updates Package Type Update Change gatsby dependencies patch Release Notes details summarygatsbyjsgatsbysummary v Compare Source v Compare Source v Compare Source v Compare Source v Compare Source v Compare Source v Compare Source details Renovate configuration date Schedule every weekend in timezone AmericaLosAngeles verticaltrafficlight Automerge Enabled recycle Rebasing Whenever PR becomes conflicted or if you modify the PR title to begin with rebase nobell Ignore Close this PR and you wont be reminded about this update again rebasecheck If you want to rebaseretry this PR check this box This PR has been generated by WhiteSource Renovate View repository job log here This PR contains the following updates Package Type Update Change gatsbythemeapollodocs dependencies minor Release Notes details summaryapollographqlgatsbythemeapollosummary v Compare Source v Compare Source v Compare Source v Compare Source v Compare Source details Renovate configuration date Schedule At any time no schedule defined verticaltrafficlight Automerge Enabled recycle Rebasing Whenever PR becomes conflicted or if you modify the PR title to begin with rebase nobell Ignore Close this PR and you wont be reminded about this update again rebasecheck If you want to rebaseretry this PR check this box This PR has been generated by WhiteSource Renovate View repository job log here Whats the status of this package IssuesPRs are seemingly piling up most of which are lacking further commentslabels etc Very little activity from maintainers Last release was in March with no commits since then except auto dependency update PRs The clients request method always returns an ExecutionResultExecutionResultDataDefault regardless of the type of query being made As a result I have to cast my results to ExecutionResultwhatever I would much prefer if I could supply a generic type argument to request so that it would enforce that my onData function has the right type Bonus points if a type parameter is added for the querys variables GQLCONNECTIONERROR connectionerror is defined as a Server Client message type Yet if an exception occurs while setting up connection params or sending the connectioninit this message type is sent from Client Server If the client cant set up a connection it likely shouldnt be sending a connectionerror message to the server Fixed copy paste error README update The onOperation option of SubscriptionServer refers to a SubscriptionOptions type This type doesnt exist It should be ExecutionParams instead I am following this link to write integration for grpahql subscription but it doesnt seem to work The source code I have is as shown below When I run the test with jest I got this error message Timeout Async callback was not invoked within the ms timeout specified by jestsetTimeoutTimeout Async callback was not invoked within the ms timeout specified by jestsetTimeout The subscription event doesnt get to the server resolver Is there anything wrong with my code or is something wrong with the library const pubsub new PubSub const resolvers Subscription somethingChanged subscribe return pubsubasyncIteratorupdateevent const typeDefs gql type Topic topic String type Subscription somethingChanged Topic const gqClient const customServer new Serverwslocalhost const graphqlSchema makeExecutableSchema typeDefs resolvers SubscriptionServercreate schema graphqlSchema execute subscribe customServer const wsLink new WebSocketLink uri wslocalhost webSocketImpl WebSocket return new ApolloClient link wsLink cache new InMemoryCache testtest done gqClient subscribe query gql subscription update topic subscribe nextdata Notify your application with the new arrived data consolelogget update data done errorerr consoleerrorerr done setTimeout pubsubpublishupdateevent somethingChanged topic hello subscriptionstransportws dependency of ws but this is already missing major version this version make my server crash issue subscriptionstransportws can update to websocketreadyState WebSocketCLOSING TypeError Cannot set property readyState of undefined at SocketsocketOnClose UsersaruDesktopWanFangonecareservernodemoduleswslibwebsocketjs at Socketemit eventsjs at TCPhandleclose netjs It looks like a GQLSTOP message is being sent from the client after receiving a completion message back from the server resulting in the server then returning an error since the subscription is no longer active img width altScreenshot at src My expectation would be that if the server has initiated a complete message the client should silently unsubscribe FWIW Im using gqlgen in Go for the server