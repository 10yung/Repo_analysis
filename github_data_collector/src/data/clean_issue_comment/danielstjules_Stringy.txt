I can see theres no code commits from danielstjules since There are multiple issues and pull requests not touched for years Should we consider replacing Stringy with a different package At present hyphenated words such as uptodate would become Uptodate Allowing the option of treating hyphenated words as a individual words would be a nice feature php suptodatetitleize to Would return UptoDate The image at the top of the README seems to be missing Screenshot of Stringy README showing broken image I found an image for Stringy on another site Can this be used or is there a better one It fixes pregreplace Compilation failed invalid range in character class at offset error in PHP See Executing these use Stringy Stringy text Stringycreateasdqwe text texttrim A With mbstring extension enabled in phpini It works fine result is asdqwe B Without mbstring It is buggy result is and there is a php warning pregreplace Unknown modifier This is a fix for the Greek letter Theta which is now replaced by O which is completely irrelevant I believe this was a mistake due to the cyrilic which is correctly replaced by it is left untouched in my proposal PS I am a Greek native speaker Fixed following warning Warning pregreplace Compilation failed invalid range in character class at offset exception object ErrorExceptioncode Warning pregreplace Compilation failed invalid range in character class at offset at vendordanielstjulesstringysrcStringyphp On line of Stringifyphp there is a function called slugify I had to add an escape character in the regex pattern on the dash or hyphen to prevent the error message Im not sure if that hyphen was intended to be unescaped I made the following change to that function to prevent the error and allow the pages to load correctly Apparently the hyphen needs to be either the first or last character in the pattern or escaped invalid range in character class public function slugifyreplacement stringy thistoAscii quotedReplacement pregquotereplacement pattern azAZ d squotedReplacement u Commented this out pattern azAZ d s quotedReplacement u Added backslash in front of the hyphen stringystr pregreplacepattern stringy return stringytoLowerCasedelimitreplacement removeLeftreplacementremoveRightreplacement StringylangSpecificCharsArray defines ASCII counterparts for the following Bulgarian characters and However none of those characters have any alternatives in StringycharsArray which means they will be untouched by StringytoAscii unless language is set to bg As there are no other ASCII equivalents for these characters I think they should be defined in charsArray instead php echo Stringycreate toAscii outputs expected a echo Stringycreate toAsciibg outputs a as expected Changed log Remove the php and php support because its time to let the repo require php now Set the multiple PHPUnit versions to support different PHP versions Add the correct filter white list in phpunitxml file Add more tests Using the classbased PHPUnit namespace to be compatible with stable PHPUnit version