Highly experimental and still WIP Refers to my question is i want to stop a cliApp by codes what should i do my urfavecli version is Checklist x Are you running the latest v release The list of releases is here x Did you check the manual for your release The v manual is here x Did you perform a search about this problem Heres the Github guide about searching Describe the bug Under Note that default values set from file eg FilePath take precedence over default values set from the environment eg EnvVar But at Environment variable if specified Configuration file if specified Expected behavior Consistency withing documentation and between documentation and code via didnt work I guess Enforce that a PR has a minimum of a a title b a release notes block and c a valid kubernetes label Do this enforcement as a precheck before the PR is sent for review or at merge time something like via surfaced via What problem does this solve This would solve people creating issues about unexpected behavior from the StringSliceFlag like these ones Solution description Add an example or maybe multiple examples of how to input StringSliceFlag Describe alternatives youve considered Ive considered possibly changing StringSliceFlag to work in the way that both those users were expecting but that sounds dangerous I removed the template because this is unnecessary in this case I will just reference the lines with the bug or lack of feature and Was this intended to be covered by OnUsageError Right now when you pass invalid flags you get this error message that you cannot customize in an easy way The workaround for now is setting appHideHelp to true and implementing your own make sure to add your own OnUsageError field or alternatively bad idea for this particular issue implement your own ioWriter and set appWriter to it If it was not a bug because it was not supposed to be covered by OnUsageError then you should implement FlagNotFound that works similarly to CommandNotFound because I see that you aim for customizability but it is an issue that you cannot change the error message you get when you pass unknown flags I am not quite sure why it does not work though as it does seem to call aOnUsageError and returns after that so theoretically it should not print it when OnUsageError is declared by me right I also noticed that despite having set both appName and appHelpName it is empty for go help nonexistent It works for other commands as in it displays the appName properly for any other commands Okay so I have been messing around with it OnUsageError inside cliApp but outside cliFlags and cliCommands does get executed ie cli foo help will run the function but cli help foo will not I think the only option here to customize the error message for those sorts of usage errors is implementing your own help command Is that correct In any case I did do just that and it works perfectly Nevermind I have no way of knowing in OnUsageError which flag was the incorrect one among multiple ones Any ideas Reason for this PR is that it makes the CI fail until is merged via 