Is it possible to change this methods to borrow and return a mut reference to self To borrow self instead of moving it Would this change things a lot rust pub fn childmut self child Nodea Self selfchildrenpushchild self Is there keyed implementation I can not find it from source code Bumps bumpalo from to details summaryChangelogsummary pemSourced from a href changelogaemp blockquote h h pReleased p h Fixedh ul liThe codebumpalocollectionsformatcode macro did not used to accept a trailing comma like codeformatin bump quot quot code but it does nowli ul hr h h pReleased p h Fixedh ul liThe codebumpalocollectionsveccode macro did not used to accept a trailing comma like codevec in bump code but it does nowli ul hr h h pReleased p h Addedh ul liAdded the codeBumpallocatedbytescode diagnostic method for counting the total number of bytes a codeBumpcode has allocatedli ul hr h h pReleased p h Addedh ul li pAdded codeBumpallocstrcode for copying string slices into a codeBumpcodep li li pAdded codeBumpallocslicecopycode and codeBumpallocsliceclonecode for copying or cloning slices into a codeBumpcodep li li pAdded codeBumpallocslicefillitercode for allocating a slice in the codeBumpcode from an iteratorp li li pAdded codeBumpallocslicefillcopycode and codeBumpallocslicefillclonecode for creating slices of length codencode that are filled with copies or clones of an inital elementp li ul trtable truncated blockquote details details summaryCommitssummary ul lia href Update quickcheck dependency to li lia href Bump to version li lia href Merge pull request a href from derekdreeryformattrailingcommali lia href Allow trailing comma in codeformatcode macro fix testsli lia href Bump to version li lia href Add test for codeveccode with trailing commasli lia href Merge pull request a href from derekdreeryvecmacroli lia href Fix codeveccode macro requiring extra commali lia href Bump to version li lia href Merge pull request a href from novacrazymasterli liAdditional commits viewable in a href viewali ul details br Dependabot compatibility score Dependabot will resolve any conflicts with this PR as long as you dont alter it yourself You can also trigger a rebase manually by commenting dependabot rebase dependabotautomergestart If all status checks pass Dependabot will automatically merge this pull request dependabotautomergeend details summaryDependabot commands and optionssummary br You can trigger Dependabot actions by commenting on this PR dependabot rebase will rebase this PR dependabot recreate will recreate this PR overwriting any edits that have been made to it dependabot merge will merge this PR after your CI passes on it dependabot squash and merge will squash and merge this PR after your CI passes on it dependabot cancel merge will cancel a previously requested merge and block automerging dependabot reopen will reopen this PR if it is closed dependabot close will close this PR and stop Dependabot recreating it You can achieve the same result by closing it manually dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version unless you reopen the PR or upgrade to it yourself dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version unless you reopen the PR or upgrade to it yourself dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency unless you reopen the PR or upgrade to it yourself dependabot use these labels will set the current labels as the default for future PRs for this repo and language dependabot use these reviewers will set the current reviewers as the default for future PRs for this repo and language dependabot use these assignees will set the current assignees as the default for future PRs for this repo and language dependabot use this milestone will set the current milestone as the default for future PRs for this repo and language dependabot badge me will comment on this PR with code to add a Dependabot enabled badge to your readme Additionally you can set the following in your Dependabot dashboard Update frequency including time of day and day of week Pull request limits per update run andor open at any time Automerge options neverpatchminor and devruntime dependencies Outofrange updates receive only lockfile updates if desired Security updates receive only security updates if desired details When Im using this library sometimes I have problems flattening all my data into a bumpaloVec to use as the children for a node react solves this problem with fragments a special node type that rather than rendering an element in the dom transparently inserts its children into the parent element at the right point It might make the library faster as well since there will be less accidental reallocations from use of bumpaloVecpush When you want to respond to a user event you use the following builder method rust pub fn onFself event a str callback F Self where F static Fn mut dyn RootRender VdomWeak Event The problem comes if you want to then pass the mut dyn RootRender to a future for example if you want to update state based on some asynchronous event like an api call Because futures must be static theres no way to do it A potential solution would be for that field to give you something like RcBoxdyn RootRender thereby giving you ownership so you can use it at any point in the future What do you think about this EDIT I guess it would need to be RcRefCelldyn RootRender so you could mutate the state If you run the todomvc example when you change the filter from say all to complete the complete animation will run based on position It should only run when an action is marked complete Would it be possible to serialize a tree as an html string or some mechanism to create a dodrio dom in server side and serve it via http I really like Dodrios design but one thing is holding me back a bit There should be a way to get DOM refs In some situations you NEED to have the actual DOM nodes that have been derived from the virtual one One quite easy example is the HTMLCanvasElement From what Ive seen this could probably be done quite elegantly within the changelist interpreter One could just tag specific vdom nodes and let the interpreter maintain the dom refs globally That would result in something similar to the ref of React Im just leaving this here now to start the discussion Right now Im compensating the lack of DOM refs with a hacky pseudo CSS animation I could add that if my pet project stays alive and if this is in your interest Looks like the current list of builders is handcurated Its great that I can create a g tag manually via ElementBuilder but its more verbose Im imagine automatically generating the all of builders in the svg namespace by pulling from sort of metadata depot similar to how websys uses WebIDL Ideally typedhtml could use the same I found their dodrio macro similarly limiting as it whitelists the elements