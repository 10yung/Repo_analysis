Reading some of the issues and still having some problems myself I decided to setup a simple data model Defined are the following models and traits Dog extends Pet no additional properties Pet uses Food trait and Fur trait and has the property name Fur trait uses FurColor trait and has the property fur FurColor has the proporty color Note because of the mentioned problem of separate namespaces I applied that as well since our production environment uses a similar approach As I will mention in the result section I ran the code on both the version and the devtraitreferencefix branch The result was then checked through Files Dogphp php php use OpenApi Annotations as OA namespace animals object Class Dog package animals object OA SchemaschemaDog allOf OA SchemarefcomponentsschemasPet class Dog extends Pet Petphp php php use OpenApi Annotations as OA namespace animals object use animals traits FoodTrait use animals traits FurTrait Class Pet package animals object OA SchemaschemaPet allOf OA SchemarefcomponentsschemasHasFood OA SchemarefcomponentsschemasFur requiredname class Pet use FoodTrait use FurTrait OA Property typestring var string protected name FurTraitphp php php use OpenApi Annotations as OA namespace animals traits Trait FurTrait package animals traits OA SchemaschemaFur allOf OA SchemarefcomponentsschemasFurColor trait FurTrait use FurColorTrait OA Propertytypestring var string public fur FurColorphp php php use OpenApi Annotations as OA namespace animals traits Trait FurColorTrait package animals traits OA SchemaschemaFurColor trait FurColorTrait OA Propertytypestring var string public color FoodTraitphp php php use OpenApi Annotations as OA namespace animals traits Trait FoodTrait package animals traits OA SchemaschemaHasFood trait FoodTrait OA Propertytypestring var string public food Results Using json output json openapi info title Trait test version paths components schemas Dog properties food type string type object allOf ref componentsschemasPet Pet required name properties food type string type object allOf ref componentsschemasHasFood ref componentsschemasFur properties name type string HasFood FurColor properties color type string type object Fur allOf ref componentsschemasFurColor properties fur type string Notice that Fur has is properties in the allOf part Also note that although Pet uses all traits direct or indirect like FurColor the food property is on the object level both within Dog and Pet but the name property is also within the allOf part only within Pet Also note that HasFood has no properties at all whereas FurColor still has the property color Validating through editorswaggerio shows the different models as expected albeit HasFood is still empty Both Dog and Pet have all properties as expected Using devtraitreferencefix json output json openapi info title Trait test version paths components schemas Dog allOf ref componentsschemasPet Pet required name properties food type string fur type string type object allOf ref componentsschemasHasFood ref componentsschemasFur properties name type string HasFood FurColor properties color type string type object Fur allOf ref componentsschemasFurColor Again notice HasFood is still empty But more important notice that Fur is missing its own property fur FurColor on the contrairy still has its own property color The fur property is now attached directly to Pet Dog now has no properties attached only a reference to Pet as I would expect Validation through editorswaggerio results in Dog and Pet having all properties but only the trait that is used within another trait has its own property FurColor with color Conclusion To be honest in my opinion neither of these results are correct Sure the objects contain all properties But the traits itself which are also exported into the json output are incomplete in both cases Request If possible please provide feedback on the file hereinabove andor provide a full example using traits both with bare traits and traits using other traits Hopefully this issue and any feedback can be of service in the future Additional information php on Ubuntu zip added with project structure swagger Petexampleusingtraitszip FeatureRequest This project should validate the given data types For valid data types see As example We define the type of load as float but this should be number Defined in testphp php php declarestricttypes use OpenApi Annotations as OA OA InfotitleExample version OA Server descriptionDev url OA Get pathhealthloadjson OA Response response descriptionGet current server load OA JsonContent requiredsuccess OA Propertypropertysuccess typeboolean OA Propertypropertyload typefloat Generate output as YAML no error bash php vendorbinopenapi output testyml testphp Output as testyml yml openapi info title Example version servers url description Dev paths healthloadjson get responses description Get current server load content applicationjson schema required success properties success type boolean load type float type object Verify output with Hi If the functionsphp file is preloaded and then included at runtime it triggers a PHP Fatal error Cannot redeclare OpenApi scan Constants are not preloaded so this PR split constants and function definition to fix this issue The issue reported in and fixed in regressed with the new OA Flow keyword This annotation OA SecurityScheme typeoauth securitySchemeClientAuth OA Flow flowclientCredentials tokenUrloauth token scopes produces this YAML securitySchemes UserAuth type oauth flows password tokenUrl oauth token refreshUrl oauth token scopes As per the spec this should be an empty object which there isnt a way to directly define with the annotations This applies the same fix as but now in the Flow element versus the SecurityScheme element to match OAS With this patch we get securitySchemes UserAuth type oauth flows password tokenUrl oauth token refreshUrl oauth token scopes There doesnt seem to be a way to create a reusable list parameters to be reusable in multiple routes I posted the desired outcome here Ive been scratching my head on this for a day cant tell if im ignorant to some syntaxannotation or if this is a swagger OR swaggerphp package limitation Fixes Additionally this allows the parser to now read php native property types typedproperties for augmenting the schema so no need to declare var Type anymore typedproperties Hi The new PHP typed property feature is a godsend for this library and would really help reduce the use of comment Annotations in Models type can now be directly deduced from PHP tokens as well as the nullable property cf which brings a more robust way of defining Models Example PHP php OA Schema class ExampleModel var intnull OA Property private id var string OA Property private name var DateTimeInterfacenull OA Propertytypedatetime private createdAt PHP php OA Schema class ExampleModel OA Property private int id OA Property private string name OA Propertytypedatetime private DateTimeInterface createdAt I tried them out and they make the StaticAnalyser fail it fails to get property names while parsing the tokens as it doesnt recognise the new format Since several days I cant reacht You should either fix the link or remove it entirely I would like to add a custom property in the ref Article example in the json its the countries array property message Get one article status data id title Title countries id name Country name Annotation in controller Currently on the annotation I have this without countries property it works OA Response response descriptionGet one article success OA MediaType mediaTypeapplicationjson OA Schema allOf OA SchemarefcomponentsschemasStandardResponse OA Property propertydata refcomponentsschemasArticle Article schema OA Schema schemaArticle typeobject titleArticle OA Propertypropertyid typeinteger descriptionArticle id OA Propertypropertytitle typestring descriptionArticle title Countries schema OA Schema schemaCountry typeobject titleCountry OA Propertypropertyid typeinteger descriptionCountry id OA Propertypropertyname typestring descriptionCountry name I would like to add countries property in propertydata I tried it to add directly Countries Property in Data Property without success OA Response response descriptionGet one article success OA MediaType mediaTypeapplicationjson OA Schema allOf OA SchemarefcomponentsschemasStandardResponse OA Property propertydata refcomponentsschemasArticle OA Property propertycountries typearray OA ItemsrefcomponentsschemasCountries 