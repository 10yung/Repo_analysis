 Short description Write a small description of what this Pull Request fixes or provides including the issue s This is slightly faster especially with a larger number of entries Checklist please indicate if any of these things are doneincluded with this Pull Request Not all boxes need to be checked for the Pull Request to be accepted I have x read the CONTRIBUTINGmd document x compiled this code x tested this code included documentation including possible behaviour changes documented the code added or modified regression tests added or modified unit tests Short description Write a small description of what this Pull Request fixes or provides including the issue s This PR is a workinprogress to reduce the number of temporary memory allocations and copies in the authoritative server Comments welcome Checklist please indicate if any of these things are doneincluded with this Pull Request Not all boxes need to be checked for the Pull Request to be accepted I have x read the CONTRIBUTINGmd document x compiled this code x tested this code included documentation including possible behaviour changes documented the code added or modified regression tests added or modified unit tests Short description Write a small description of what this Pull Request fixes or provides including the issue s Before this change both the query and packet caches in the authoritative server can exceed their maximum size by a lot until the next cleaning cycle This is particularly nasty since the current cleaning algorithm will never remove entries from the cache until they expire as opposed to what we do in the recursor for example where we nuke the leastrecently used entries even if they are still valid when the cache is full This commit changes that by removing the least recently inserted or updated entry from the cache after inserting a new one when the cache is full thus enforcing the maximum size more strictly Note that this is really the least recently insertedupdated and not the least recently used one as is done in the recursor Having a proper LRU in the auth would require acquiring a write lock for a simple lookup instead of a potentially concurrent readlock at the moment We might want to consider changing that at some point as a LRU might be fairer and the lock contention might be very small since the caches are sharded Checklist please indicate if any of these things are doneincluded with this Pull Request Not all boxes need to be checked for the Pull Request to be accepted I have x read the CONTRIBUTINGmd document x compiled this code x tested this code included documentation including possible behaviour changes x documented the code added or modified regression tests added or modified unit tests Hi Thanks for filing an issue It will be read with care by human beings Can we ask you to please fill out this template and not simply demand new features or send in complaints Thanks Also please search the existing issues both open and closed to see if your report might be duplicate Please dont file an issue when you have a support question send support questions to the mailinglist or ask them on IRC Tell us what is issue is about Program Recursor Issue type Bug report Short description Just a quick email to say that were seeing an inconsistency in the PowerDNS beta output between lua and protobuf When we request a domain that is listed in a whitelist RPZ the responseappliedPolicy is not being set in the protobuf output The lua scripting environment does appear to see the policy set as shown by logging dqappliedPolicypolicyName Is it possible to confirm if this is a known and or expected behaviour Our assumption is that any RPZ policy matching applied and recorded in dqappliedPolicypolicyName should also be reflected in the protobuf response output Environment Tell us about the environment Operating system Not sure Centos I think Software version beta Software source PowerDNS repository Steps to reproduce See above Hi Thanks for filing an issue It will be read with care by human beings Can we ask you to please fill out this template and not simply demand new features or send in complaints Thanks Also please search the existing issues both open and closed to see if your report might be duplicate Please dont file an issue when you have a support question send support questions to the mailinglist or ask them on IRC Tell us what is issue is about Program dnsdist delete the ones that do not apply Issue type Bug report Short description Explain in a few sentences what the issuerequest is On response processing path dnsdist ignores any value assigned into DNSQuestionlen field and sends on a buffer of the original size anyway Environment Tell us about the environment Operating system Fedora Software version commit d d b b bd b f cd f b becf a Software source compiled myself Steps to reproduce Tell us stepbystep how the issue can be triggered Please include your configuration files and any Lua scripts that are loaded Build dnsdist Create a configuration file dnsdistlua with the following contents lua addLocal reusePorttrue setECSOverridetrue setECSSourcePrefixV setECSSourcePrefixV function onresponsedq printqnamedqqnametoString print oldlendqlen dqlen size of DNS message header print newlendqlen return DNSActionNone end addResponseActionAllRule LuaResponseActiononresponse newServeraddress useClientSubnetfalse Start dnsdist up using the command sudo dnsdist C dnsdistlua Start Wireshark and listen on the loopback interface Try to resolve wwwgooglecom using the command host t a wwwgooglecom Expected behaviour host command fails because the DNS response contains only the header In Wireshark it can be seen that the DNS response only contains the header Actual behaviour What did happen Please if possible provide logs output from dig andor tcpdumpwireshark data host command completes successfully displaying multiple IPv addresses of wwwgooglecom In Wireshark it can be seen that the DNS response was not modified ie is not shortened to the size of a DNS header Other information if you already did more digging into the issue please provide all the information you gathered Id like to request a way to serve Prometheus metrics without authorization which I havent been able to accomplish apparently due to the way all webServer access is hardcoded to require BasicAuth The reason is purely due to the way Prometheus jobs are configured While this works fine for a single target setting credentials in the Prometheus job config it only sortof works when jobs are dynamically discovered via any of the service discovery mechanisms requiring all discovered targets to have the same credentials Most exporters do not require any auth since metrics are generally not considered confidential or securitysensitive In normal operations in the database the reverse entries have no trailing point but its possible to have one anyway On our production server we had about of all PTR with a trailing point We have no idea how or why it was added since we only change the DB via the API or via pdnsutil editzone never via SQL edits The problem is that the DNS server doesnt care about the final point but the API does It caused some issues for our API client which was blind to some records that actually existed And doubling every search to cover the potential final point is a bit costly We had to manually correct the records in the DB Tested on the current master branch as of Jan Installed via the ubuntu bionic package provided by pdns on a amd bionic machine pdnsauthproxy version alpha master gd cf pdnsbionic with a mysql backend Bug first seen on a production server Example of the issue with a manually crafted entry mysql select from records where name inaddrarpa G row id domainid name inaddrarpa type PTR content wwwexamplecom ttl prio changedate NULL disabled ordername NULL auth row in set sec The resolution is fine dig short ptr inaddrarpa wwwexamplecom but the search API wont return this entry if I dont explicitely add the trailing point curl s H XApiKey password jq content disabled false name wwwexamplecom objecttype record ttl type A zone examplecom zoneid examplecom curl s H XApiKey password jq content wwwexamplecom disabled false name inaddrarpa objecttype record ttl type PTR zone inaddrarpa zoneid inaddrarpa Short description This changes the serial from to the correct value in a domainspecific API call such as apiv serverslocalhostzonesexamplecom apiv serverslocalhostzones yields the right serial without this patch and I see that void LMDBBackendgetAllDomainsvectorDomainInfo domains bool includedisabled uses more direct code to get the serial PRing this as draft until I figure out which code is right Checklist please indicate if any of these things are doneincluded with this Pull Request Not all boxes need to be checked for the Pull Request to be accepted I have read the CONTRIBUTINGmd document compiled this code tested this code included documentation including possible behaviour changes documented the code added or modified regression tests added or modified unit tests remove this line if your PR is against master checked that this code was merged to master testluaauth cccc In member function void luaauth cctestprequerytestmethod testluaauth cccc error expected unqualifiedid before token catch const LuaContextExecutionErrorException e Short description Write a small description of what this Pull Request fixes or provides including the issue s Checklist please indicate if any of these things are doneincluded with this Pull Request Not all boxes need to be checked for the Pull Request to be accepted I have read the CONTRIBUTINGmd document compiled this code tested this code included documentation including possible behaviour changes documented the code added or modified regression tests added or modified unit tests remove this line if your PR is against master checked that this code was merged to master Short description Write a small description of what this Pull Request fixes or provides including the issue s Since e a we scanned all policies for an exact match before looking for wildcard matches It brokes the promise that filtering policies are evaluated in the order they are defined After a passthru match we should not process any other RPZ rule Export the filtering policy type to Lua Checklist please indicate if any of these things are doneincluded with this Pull Request Not all boxes need to be checked for the Pull Request to be accepted I have x read the CONTRIBUTINGmd document x compiled this code x tested this code included documentation including possible behaviour changes x documented the code x added or modified regression tests x added or modified unit tests 