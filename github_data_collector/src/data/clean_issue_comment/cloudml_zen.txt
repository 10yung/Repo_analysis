Hi It seems that these distance computation functions ie euclideanDistancea b frequently return the euclidean distance upper than Im not sure this is the best solution but I think its better than to set the larger value eg use instead of for similarity testing Cheers Whats the status of the project The version published on Maven is and is dated back to the version on the repository is SNAPSHOT with the latest update dating back months This all raises the question of whether the project is at all alive Could you provide file formats to run LambdaMARTRunnerscala Or files itself It would be better to support this defacto standart Hello Could you provide some documentation to run the examples Im having issues compiling as mvn install is disabled its difficult to do a mvn execjava from inside the examples directory Is there a way to get a single shaded Jar for all submodules The jar created in assemblytarget does not include the examples and with install disabled Im not clear how to run an example Any advice Craig I use the fm algorithm in zen to train a dataset which has partition and about MB The training is so slow about h m The xgboost and lr algorithm only cost min I get the exception below whenever I run the FM code on any of my real datasets It seems to break roughly when you have k training examples and machines javalangArrayIndexOutOfBoundsException at orgapachesparkgraphxutilcollectionGraphXPrimitiveKeyOpenHashMapmcJIspapplymcJIspGraphXPrimitiveKeyOpenHashMapscala at orgapachesparkgraphximplEdgePartitionupdateVerticesEdgePartitionscala at orgapachesparkgraphximplReplicatedVertexViewanonfun anonfunapply applyReplicatedVertexViewscala at orgapachesparkgraphximplReplicatedVertexViewanonfun anonfunapply applyReplicatedVertexViewscala at scalacollectionIteratoranon nextIteratorscala at scalacollectionIteratoranon hasNextIteratorscala at scalacollectionIteratoranon hasNextIteratorscala at orgapachesparkshufflesortUnsafeShuffleWriterwriteUnsafeShuffleWriterjava at orgapachesparkschedulerShuffleMapTaskrunTaskShuffleMapTaskscala at orgapachesparkschedulerShuffleMapTaskrunTaskShuffleMapTaskscala at orgapachesparkschedulerTaskrunTaskscala at orgapachesparkexecutorExecutorTaskRunnerrunExecutorscala at javautilconcurrentThreadPoolExecutorrunWorkerThreadPoolExecutorjava at javautilconcurrentThreadPoolExecutorWorkerrunThreadPoolExecutorjava at javalangThreadrunThreadjava Heres the driver stacktrace orgapachesparkrddRDDmapPartitionsRDDscala comgithubcloudmlzenmlpartitionerDBHPartitionerpartitionByDBHDBHPartitionerscala comgithubcloudmlzenmlrecommendationFMinitializeDataSetFMscala The odd thing is that the driver stacktrace shows the error happening in initializeDataSet but it doesnt seem to occur until training is done To speed reproduction of the problem I set numIterations to Id like to make any changes necessary to graphx to use the upstream library This repo is still on graphx I believe and so were not getting any of the graphx bug fixes I sent and to reduce the diff between graphx and upstream I sent to upstream addition of a new method Changes left GraphImplfromEdgeRDD visibility RoutingTablePartitionroutingTable visibility Immutability in EdgePartition Can you explain why this change in GraphImpl was necessary If I run mvn test I get Tests succeeded failed canceled ignored pending TESTS FAILED 