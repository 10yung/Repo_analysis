Thanks for this nice package I am a teacher mainly interested in including sections of help pages in my xaringan presentations so that I can explain functions to students However I still want my tibbles printed in the regular way Could you make the functionality modular so that we can choose what gets prettyprinted Instead of reproducing everything repr has been doing for a long time knitprint should use repr instead of this Help pages are rendered as a code block in knit to pdf whereas for knit to html the proper page is displayed Is there any way to get similar result in pdf Tibbles do not render correctly all the time when printr is used If they are grouped they are rendered as plain text Versions printr knitr Below is a reproducible example r librarydplyr libraryprintr Normal tibble is rendered as table r mtcars head mpg cyl disp hp drat wt qsec vs am gear carb Mazda RX Mazda RX Wag Datsun Hornet Drive Hornet Sportabout Valiant Grouped tibble is rendered as text r mtcars groupbycyl head A tibble x Groups cyl mpg cyl disp hp drat wt qsec vs am gear carb dbl dbl dbl dbl dbl dbl dbl dbl dbl dbl dbl Removing the class groupeddf leads to correct rendering again r classx setdiffclassxgroupeddf x head mpg cyl disp hp drat wt qsec vs am gear carb I would like an option to limit the maximum rowscols for latex output An option similar to optionsdplyrprintmax would be good There should be some indication of how many rows columns are omitted similar to the tibble string output I have a few tables with hundreds of rows and columns In the notebook preview these print nicely as tibble truncated tables rows max but when rendered to PDF I get pages of tables which also overflow the right margin It would be great to have printrs magic work with the elegant jquery tables from the DT package for HTML documents I like the concept of Rmd partials for repetitive things I do like summaries of models robustness checks making a codebook for the items in a survey But Im not sure Im using them right because it seems a bit hacky at times To give an example here you can see where I used one to summarise a regression with some plots and headlines this is a simplified example its usually a bit more involved The partial itself Used Here are things that felt a bit hacky I needed to set optionsknitrduplicatelabel allow globally if I want named chunks I needed this convenience function so that its rendered asis and so that the environment is the calling environment for knitchild I wanted to call the partials from a function could simply be knitprintlm or something more custom like I use now So it takes arguments from the calling environment but I cannot specify these in the Rmd file I tried using parameters but I think knitrknitchild does not support them I was thinking of packaging some partials that Ive made for myself but wanted to collect your opinion on best practices first Should I maybe use an htmlwidgetstyle approach for this as this is more standard I like about the knitchild approach that I can treat it like text concatenate several etc This makes sessionInfo look better in markdown documents by changing the output to a nested unnumbered list It provides a bit more information for packages installed from GitHub via devtools by giving the SHA hash for those packages I was working with a series of tables and had put a between them to get a horizontal line However this seemed to really destroy the LaTex rendering if there was not a blank line between the preceding code chunk and the Maybe there is an rmarkdown rule I am unaware of about this I just wanted to note it since someone else may come across it There is still a slight problem in that it prints Prt as Pr t in LaTeX documents 