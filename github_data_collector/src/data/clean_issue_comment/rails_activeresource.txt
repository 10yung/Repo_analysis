Currently the ConnectionError class that ServerError inherits its behavior from implements a failure message that builds a Response message Response message responsemessage if responserespondtomessage This is resulting in errors from our remote service always returning Internal Server Error so instead of being able to manually create more granular failure reasons we have roughly Internal Server Errors I propose implementing an additional line to the error message where developers can add in custom error messages something like this message Error Message responsebodyerrors if responserespondtobody responsebodyrespondtoerrors This way we can add in additional functionality without having to change the existing api Thanks in advance Steps to reproduce Make a REST API endpoint which supposedly fails and returns HTML response instead of JSON Add a rescue block to catch all errors and get the error object from it Make the request with ActiveResource to that REST API endpoint See that the request blows up with an exception JSONParserError See that in the error object in the rescue block doesnt have a response attribute Expected result The error object should ideally have the request and response objects attributes so that we can log them and properly react to such cases depending on the request and response attributes headers etc Code place where the issue is Its in file This code fragment ruby Find every resource def findeveryoptions begin case from options from when Symbol instantiatecollectiongetfrom options params options params when String path fromquerystringoptions params instantiatecollectionformatdecodeconnectiongetpath headersbody options params else prefixoptions queryoptions splitoptionsoptions params path collectionpathprefixoptions queryoptions instantiatecollectionformatdecodeconnectiongetpath headersbody queryoptions prefixoptions end rescue ActiveResourceResourceNotFound Swallowing ResourceNotFound exceptions and return nil as per ActiveRecord nil end end This call fails ruby formatdecodeconnectiongetpath headersbody The call is chained so the request and response objects are not captured to a raised error and cannot be accessed if formatdecode raises an exception Suggested solution ruby module ActiveResource class ResponseError StandardError attrreader response def initializeresponse message nil response response message message end def tos message end end end Raise the ResponseError when there is an error parsing response JSON Would be really valuable if this can be solved Thanks so much Can i using bulk query in action In my case at least Unlike ActiveRecord thing Basecreate doesnt support argument shape of array If this feature doesnt implemented yet is there any great idea to implement it on the concept of rails way