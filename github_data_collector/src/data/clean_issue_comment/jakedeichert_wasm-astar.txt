Seems like theres some gotchas when it comes to what parts of Rust you use and how large it can cause your wasm output to be The current wasm output file size is kb before wasmgc and kb after This has been bugging me for a few days and I havent looked into it until now A basic hello world I created was kb before wasmgc and bytes after which sounds much better After disabling some code ive found a few factors that seem to heavily change the wasm output size Creating a vec causes kb of file size I disabled a bunch of code to get down to this point I havent recreated a minimal example yet though Indexing a vec by a random number causes an extra kb of file size totaling kb This seems to take up more than half of the final wasm size If I index the vec by a hard coded number less than the vecs length the file size remains at kb as noted above But if I hard coded a number the vecs length the file size increases to kb too Ill post any more findings I have here Hoping someone can enlighten me on ways to keep the file size down and perhaps as to why indexing a vec costs so much i tried cell phones browser cant get the view of game if the mobile browser not supported for wasm 