Looks like bintrayChangeCredentials doesnt work under sbt It probably has to do with the way new sbt works with console UI It just hangs and you cant even terminate the process with CtrlC Im not normally an SBT user so please forgive my ignorance and correct me if Im looking in the wrong place for help here But I am trying to publish an SBT plugin to Bintray with this plugin but it doesnt look like it publishes a pomxml I can use the published plugin from a local Bintray resolver but when I try to Add to JCenter from within the Bintray admin UI I get the following error Please fix the following before submitting a JCenter inclusion request Add a POM file to the latest version of your package I want to add the plugin to JCenter so users can use it with just resolvers ResolverjcenterRepo instead of resolvers ResolverbintrayRepojavaeden sbtplugins How can I get this POM published so I can get the plugin added to JCenter Heres the plugin I am trying to get published Suggestion to add a new SettingKey for VCS tag so that the tag name can be set by a CI tool while publishing the project so that Bintray can automatically link Release Notes to the corresponding GitHub Release The default value for bintrayVcsUrl introduced in appears to not follow the URL RFC spec sbtscodecbson show bintrayVcsUrl info SomegitgitlabcomlJoublancscodecbsongit This doesnt prevent publishing However when from the bintray webinterface you try to add your project to JCenter and Maven Central you get an error as a result of this See this stackoverflow question for more detail It points out that on the webpage the tooltip says this should be a valid URL The value that is set here also appears to be publicly visible on the bintray website and is an href link which leads me to believe that it should start with http s as per the SO question However changing this to eg gitgitgitlabcomlJoublancscodecbsongit which is a valid URL according to RFC appears to work around the publishing to maven central issue in the SO question alone The default is currently derived from git in resolveVcsUrl Should the default be changed Should it accept a nonhttp prefix such as git as this will be linked on the web UI Or should we somehow infer http s always Should this work for nongithub locations too eg gitlab what about a localprivate repo I am getting Status code Bad Request when publishing a Debian package According to Bintray It looks like you didn t send the distribution component and architecture as part of the URL as mentioned when artifacts are uploaded to a Debian repository using the Automatic index layout the Debian distribution information is required and must be specified error completeProjpublishSigned javautilconcurrentExecutionException javanetConnectException When also publishing nighly snapshots to bintray using a version convention such as it would be nice to add a task that gets the versions from bintray and deletes all old snapshots except but a configurable number of mostrecent ones For example if theres and and we keep we should keep and Ive had to let each submodule create and publish to their own Bintray package because at least on initial upload having them set to the same Bintray package would error saying it could not find or update the package Even with staging it would be nice to have an option to delete packages prior to pushing them If they exist already you have to manually remove them prior to uploading This part of sbtbintray irks me scala override def requires sbtpluginsJvmPlugin override def trigger allRequirements Because of this upgrading from bintraysbt to sbtbintray commit here broke the publishing of all my artifacts that are not supposed to be published to Bintray but to Sonatype Example scala info Setting version to info Reapplying settings info Set current project to Scalajs in build filelocalhomedoeraeneprojectsscalajs show sbtPluginpublishTo info SomeRawBintraySbtPublishscalajsscalajsreleasessbtscalajs show compilerpublishTo info Somesnapshots compilerpublish info Updating filelocalhomedoeraeneprojectsscalajscompiler info Packaging localhomedoeraeneprojectsscalajscompilertargetscala scalajscompiler SNAPSHOTsourcesjar info Wrote localhomedoeraeneprojectsscalajscompilertargetscala scalajscompiler SNAPSHOTpom info Resolving comnovocodejunitinterface info Done packaging info Resolving orgfusesourcejansijansi info Done updating info delivering orgscalajsscalajscompiler SNAPSHOT SNAPSHOT integration Mon Aug CEST info delivering ivy file to localhomedoeraeneprojectsscalajscompilertargetscala ivy SNAPSHOTxml info Compiling Scala sources to localhomedoeraeneprojectsscalajscompilertargetscala classes info Main Scala API documentation to localhomedoeraeneprojectsscalajscompilertargetscala api model contains documentable templates warn warn one warning found info Main Scala API documentation successful info Packaging localhomedoeraeneprojectsscalajscompilertargetscala scalajscompiler SNAPSHOTjavadocjar info Done packaging warn two warnings found info Packaging localhomedoeraeneprojectsscalajscompilertargetscala scalajscompiler SNAPSHOTjar info Done packaging info published scalajscompiler to info published scalajscompiler to info published scalajscompiler to info published scalajscompiler to trace Stack trace suppressed run last compilerbintrayRelease for the full output error compilerbintrayRelease failed to release sjrdscalajscompiler SNAPSHOT messageVersion SNAPSHOT was not found error Total time s completed Aug PM I specifically set publishTo in nonBintray artifacts so show compilerpublishTo correctly shows osssonatypeorg However doing compilerpublish after correctly publishing to Sonatype still insists on doing bintrayRelease which fails An AutoPlugin that alters existing keys must not be automatically triggered It must be optin Its not because I need sbtbintray for some artifacts in my build that I want it for all of them I guess using disablePluginsBintrayPlugin on all my other projects would be a workaround