I wanted to use hexyl as a library to pretty print the memory of a VM I am working on for error dumps The memory is just u so I imagine it should be pretty simple but I couldnt find an example of how to use this as a library I guess that can be simplified to just look for isasciigraphic else if self isasciigraphic I would also prefer to change the name of the variable AsciiPrintable because printable normally also includes the space I have tried to implement the syntax suggested in the discussion on issue hexyl range Means start at th byte read until byte bytes hexyl range Means start at th byte read bytes hexyl range Means start at th byte I did not add support for negative offsets simply because I do not see a simple way to implement it for Stdin If required I suppose it could be implemented with a buffering solution that reads M N bytes into a buffer until it reaches the end of Stdin before passing it to a reader My solution differs from by not modifying the Printer itself merely the Reader that it receives This means that it works just as well for Stdin as for a file A consequence of this is that the bytes are no longer automatically aligned in the output but that just might be what you want in this situation hexyl r x hexyl f c ELF e d hexyl r x x hexyl e F d This is my first contribution of Rust code and I welcome suggestions that can help me improve Unit Implemented Description Examples Suggested implementation Decimal x A decimal integer which is equivalent to specifying a single byte unit for the count u fromstr Hex Maybe in A hexadecimal integer Specified with a leading x x x u fromstrradix Blocks A single block which is by default bytes but configurable via config flag b n blockbrbrNB one cannot use a block unit to define the block size Add a flag to optionally define block size then check for a trailing block when parsing numbers Multiply by block size Bytes A byte size familiar to most IT professionals Specified by B at the end of the count and can include an optional magnitudinal spec like kilobytes K or megabytes M ulli B byteslili KB kilobytesliul Implement a regex of the form Pcount dPmagnitudeunit KM B Other open questions Should the block unit which might be controversial be scoped into another issue Should a single leading or sign be supported Not sure how is useful xxds manual states that for the s option is useful only for stdin Not sure what that means though new option s hexylnew related issue Some kinds of characters including ruled lines and have east asian ambiguous width characters so they have single width in some environments and double width in some environments In area where such characters have double width mainly east asia output layout of current hexyl v is broken screenshot There are some way to fix this Know line characters width by wcwidth CLI options or something and use appropriate number of line characters However this wont solve and issue Or use only ASCII characters when user wanted Or make symbols configurable through config file or CLI options If those characters are made configurable will be solved at the same time screenshot It should probably handle SIGINT and terminate the output as if it was EOF but maybe with some mark f ae b ae c a df e d f d f W l a e b bd bf a b e ab C C The nlength flag is a great feature good especially for quickly checking if file headers match something Another use case I can think of for limited output is inspecting say an entire block of some data from a file thats been dumped from a disk Lets say Im using Linux and reading the first block of a disk somewhere to determine its contents manually hexyl n diskdump Some output here I read the output and discover that theres an MBR at the beginning with the first partition starting at logical block address Sweet lets mosey on over to x and read another block I could implement this by using dd inputfileviminfo blocksize blocknum dd bsblocksize statusnone skipblocknum countblocksize ifinputfile hexyl but theres two issues with this dd isnt usually available on Windows machines Because were using stdin we cant get the correct set of offsets the file starts at x regardless of what parameters I gave dd Perhaps something like this spitballed set of options might help hexyl start Could also be written as Could be bikeshed to begin length One could use an end offset instead of a length end Could also be written as e x I would be more than happy to push implementation of this since Ive great personal interest in allowing more of my reverse engineering flow in the terminal Let me know if you want me to hack on it Unresolved questions Adding several more arguments that accept offsetssizes might add pressure to create a system of unitsradices a la xxd for the appropriate arguments Where should the line be drawn in terms of what this project is willing to support This is excellent and the default width of is great Itd be really nice if we could print according to custom alignments though this is a fairly standard feature in most hex editors and I cant imagine it being egregiously complex to add this Another couple of ideas Getting the max width based on a provided terminal width would be nice this would let me simply plug in a width and let hexyl calculate the space overhead of borders for me An autowidth flag which is like the above for the current terminal width to be used would also be handy it would have some overlap with the above but there could be reasons for setting Prototypical suggestion for options Ideas for a fixed column width c columns Sets the number of hex data columns to be displayed Cannot be used with other widthsetting options w width Ideas for terminal autowidth a autowidth Sets the number of hex data columns to be adjusted according to the detected terminal width Conceptually this could be an alias of t terminalwidth Cannot be used with other widthsetting options Ideas for fixed terminal width t terminalwidth Sets the number of terminal columns to be displayed Since the terminal width may not be an evenly divisible by the width per hex data column this will use the greatest number of hex data columns that can fit in the requested width but still leave some space to the right Cannot be used with other widthsetting options Im more than happy to push on this if effort is a concern 