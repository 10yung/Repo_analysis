Hi I am using MiniProfiler v on ASPNET Core I am using the web ui script in swashbuckle custom indexhtml script asyncasync idminiprofiler srcprofilerincludesminjsv gcc adf dataversion gcc adf datapathprofiler datacurrentid ec c d eaf c e efa a dataids datapositionLeft dataauthorizedtrue datamaxtraces datatoggleshortcutAltP datatrivialmilliseconds dataignoredduplicateexecutetypesOpenOpenAsyncCloseCloseAsyncscript I get the following error thrown that seems to come from MiniProfiler It seems to only happens when the swagger UI first loads The JSON value could not be converted to SystemNullable SystemGuid Path Id LineNumber BytePositionInLine Stacktrace at SystemTextJsonThrowHelperReThrowWithPathReadStack readStack Utf JsonReader reader Exception ex at SystemTextJsonJsonSerializerReadCoreJsonSerializerOptions options Utf JsonReader reader ReadStack readStack at SystemTextJsonJsonSerializerReadCoreJsonReaderState readerState Boolean isFinalBlock ReadOnlySpan buffer JsonSerializerOptions options ReadStack readStack at SystemTextJsonJsonSerializerReadAsyncd MoveNext at SystemRuntimeExceptionServicesExceptionDispatchInfoThrow at SystemRuntimeCompilerServicesTaskAwaiterThrowForNonSuccessTask task at SystemRuntimeCompilerServicesTaskAwaiterHandleNonSuccessAndDebuggerNotificationTask task at SystemThreadingTasksValueTask getResult at SystemRuntimeCompilerServicesValueTaskAwaiter GetResult at StackExchangeProfilingMiniProfilerMiddlewareGetSingleProfilerResultAsyncd MoveNext in C projects dotnet src MiniProfilerAspNetCore MiniProfilerMiddlewarecsline at SystemRuntimeExceptionServicesExceptionDispatchInfoThrow at SystemRuntimeCompilerServicesTaskAwaiterThrowForNonSuccessTask task at SystemRuntimeCompilerServicesTaskAwaiterHandleNonSuccessAndDebuggerNotificationTask task at SystemRuntimeCompilerServicesConfiguredTaskAwaitable ConfiguredTaskAwaiterGetResult at StackExchangeProfilingMiniProfilerMiddlewareHandleRequestd MoveNext in C projects dotnet src MiniProfilerAspNetCore MiniProfilerMiddlewarecsline at SystemRuntimeExceptionServicesExceptionDispatchInfoThrow at SystemRuntimeCompilerServicesTaskAwaiterThrowForNonSuccessTask task at SystemRuntimeCompilerServicesTaskAwaiterHandleNonSuccessAndDebuggerNotificationTask task at SystemRuntimeCompilerServicesConfiguredTaskAwaitableConfiguredTaskAwaiterGetResult at StackExchangeProfilingMiniProfilerMiddlewareInvoked MoveNext in C projects dotnet src MiniProfilerAspNetCore MiniProfilerMiddlewarecsline at SystemRuntimeExceptionServicesExceptionDispatchInfoThrow at SystemRuntimeCompilerServicesTaskAwaiterThrowForNonSuccessTask task at SystemRuntimeCompilerServicesTaskAwaiterHandleNonSuccessAndDebuggerNotificationTask task at SystemRuntimeCompilerServicesTaskAwaiterGetResult at SwashbuckleAspNetCoreSwaggerUISwaggerUIMiddlewareInvoked MoveNext at SystemRuntimeExceptionServicesExceptionDispatchInfoThrow at SystemRuntimeCompilerServicesTaskAwaiterThrowForNonSuccessTask task at SystemRuntimeCompilerServicesTaskAwaiterHandleNonSuccessAndDebuggerNotificationTask task at SwashbuckleAspNetCoreSwaggerSwaggerMiddlewareInvoked MoveNext at SystemRuntimeExceptionServicesExceptionDispatchInfoThrow at SystemRuntimeCompilerServicesTaskAwaiterThrowForNonSuccessTask task at SystemRuntimeCompilerServicesTaskAwaiterHandleNonSuccessAndDebuggerNotificationTask task at SystemRuntimeCompilerServicesTaskAwaiterGetResult at xxxxxxAspNetCoreMiddlewareExceptionResponseCodesExceptionResponseCodeMiddlewareInvokeAsyncd MoveNext in C Users ckarcz dev code xxxxx sources xxxxxAspNetCore Middleware ExceptionResponseCodes ExceptionResponseCodeMiddlewarecsline I just want to use it in the net standard class library and I didnt find the appropriate way to use it Hi I would like to work on Blazor support for miniprofiler Before anything are you interested by this I can work on my side but it might be better here Here are the thing I would like to do start with blazor client side create a component that renders miniprofiler display server timings display timing gathered in blazor app add automatic timings for rendering event handler save client side timing to server handle blazor server side If this fit in this repo do you think I should translate all the typescript code to blazor Itll force the repo to maintain version ts and razor but itll remove any need for jquery What do you think Hello I have the same issue net Framework WPF Application MiniProfilerEF Initialize is the first line in my programcsmain function And Im getting that Im creatingstarting the profiler when the user clicks on a button AGP at Activate all ms Activation ms sql ms in cmds Counting ms sql ms in cmds you can see why im interested in getting query details Originally posted by guillaumejay in Got a aspnet core app I would like to profile ef core for The docs rely on razor taghelpers This issue mentions the same thing as Im wondering but I dont really know what the answer recommends Can anyone clarify what the recommended way of loading the client part of MiniProfiler when using React is Ref This is related to however I am not able to use synchronous code here without duplicating the logic for the authorization Specifically we are using policy based authorization using IAuthorizationService which only provides an async method We are having to force the execution to be synchronous which is working fine because behind the scenes there really isnt anything that requires the call to be async csharp services AddMiniProfilerx xResultsAuthorize request requestHttpContextRequestServicesGetRequiredServiceIAuthorizationServiceAuthorizeAsyncrequestHttpContextUser CanProfileResultSucceeded Im Currently using MiniProfiler V with WebAPI Owin how Im seeing at times intermittently errors related to the using MiniProfilerStop Actual Exception Object reference not set to an instance of an object at StackExchangeProfilingMiniProfilerStopImpl in c TeamCity buildAgent work a cbc StackExchangeProfiling MiniProfilercsline Im using the SingletonProfileProvider from what I read this is not considered thread safe but not sure what the alternative as I had a look around but seems a bit all over the place If I dont use this particular Provider then find my actual MiniProfilerCurrent instance is always null Any ideas This line of code in MiniProfilerMiddleware eventually leads to this call to save the timing information to the storage provider On each request It would be nice to have an option on the Middleware to invoke the StopAsync as mpStopAsyncConfigureAwaitfalse or TaskRun so we dont block on the write to the provider slowing down the request Especially when the provider is a networked database An alternative would be to add that option to the provider but I count different networked database providers The option would have to be added to each new provider created Would MiniProfilers maintainers consider such a pull request as described in the second paragraph Im profiling a web service API I would like to record additional metrics like some of the input parameters number of data points requested and the size of the response I realize this might not be what MiniProfiler was designed for but might it be possible Issue MiniProfiler does not catch exceptions thrown from a storage provider so they endup being propagated to the caller app and therefore can crash the app that uses MiniProfiler or a request in a web api Ive encountered the issue when using PostgreSqlStorage but from looking at the source code of other storage providers I believe they are also affected Workaround Ive created a SanitizedDefaultProfilerProvider that catches any exceptions thrown in the Save Async method and just writes it to the logger which also makes the configuration a bit more ugly public SanitizedDefaultProfilerProviderILoggerSanitizedDefaultProfilerProvider logger logger logger protected async Task SaveAsyncMiniProfiler profiler try await storageSaveAsyncprofilerConfigureAwaitfalse catch Exception ex loggerLogErrorex Unable to save trace from MiniProfiler But I dont think that resolves the issues completely as any method in IAsyncStorage can throw an exception due to various issues with DB server downinvalid credentialsnonexisting and therefore crash the app Similar issue 