Similarly to how Bullet Physics was ported to Ammojs via Emscripten how much work would be involved in porting the now open source PhysX engine My understanding of C isnt strong enough to figure this out and I assume there are probably people out there that could do this without breaking a sweat If anyone is available to do this lets discuss here Im willing to pay for this to happen but have no idea how long this kind of thing takes or what is involved in making it happen And of course I would want this port to be released as open source also I have a rayTest problem like this so I want to test the BTUSEDOUBLEPRECISION macro I modified the makepyadded DBTUSEDOUBLEPRECISION stageBuild bindings args DBTUSEDOUBLEPRECISION Isrc c for include in INCLUDES args include include emscriptenBuildingemccgluecpp args glueo assertospathexistsglueo Configure with CMake on Windows and with configure on Unix cmakebuild emscriptenWINDOWS if cmakebuild if not ospathexistsCMakeCachetxt stageConfigure via CMake emscriptenBuildingconfigure emscriptenPYTHON ospathjoinEMSCRIPTENROOT emcmake cmake DBUILDDEMOSOFF DBUILDEXTRASOFF DBUILDCPUDEMOSOFF DUSEGLUTOFF DCMAKEBUILDTYPERelease else if not ospathexistsconfigh stageConfigure if this fails run autogensh in bullet first emscriptenBuildingconfigure configure disabledemosdisabledependencytracking stageMake and modified the ammoidlreplaced keyword float to double Make succeed but link throw errors error undefined symbol ZN btSoftBody appendNodeERK btVector d warning To disable errors for undefined symbols use s ERRORONUNDEFINEDSYMBOLS error undefined symbol ZN btSoftBody appendAnchorEiP btRigidBodybd error undefined symbol ZN btSoftBody setTotalMassEdb error undefined symbol ZN btSoftBody setMassEid error undefined symbol ZN btSoftBodyC EP btSoftBodyWorldInfoiPK btVector PKd error undefined symbol ZN btConeShapeC Edd error undefined symbol ZN btRigidBody setDampingEdd error undefined symbol ZN btRigidBody setMassPropsEdRK btVector error undefined symbol ZN btShapeHull buildHullEd error undefined symbol ZN btConeShapeXC Edd error undefined symbol ZN btConeShapeZC Edd error undefined symbol ZN btAngularLimit setEddddd error undefined symbol ZN btCapsuleShapeC Edd error undefined symbol ZN btCapsuleShapeXC Edd error undefined symbol ZN btCapsuleShapeZC Edd error undefined symbol ZN btRaycastVehicle applyEngineForceEdi error undefined symbol ZN btRaycastVehicle setSteeringValueEdi error undefined symbol ZN btRaycastVehicle updateSuspensionEd error undefined symbol ZN btRaycastVehicle addWheelERK btVector S S ddRKNS btVehicleTuningEb error undefined symbol ZN btRaycastVehicle setBrakeEdi error undefined symbol ZN btConvexHullShapeC EPKdii error undefined symbol ZN btHingeConstraint setMotorTargetEdd error undefined symbol ZN btSoftBodyHelpers CreateFromTriMeshER btSoftBodyWorldInfoPKdPKiib error undefined symbol ZN btMultiSphereShapeC EPK btVector PKdi error undefined symbol ZN btStaticPlaneShapeC ERK btVector d error undefined symbol ZN btHeightfieldTerrainShapeC EiiPKvdddi PHYScalarTypeb error undefined symbol ZN btGeneric DofSpringConstraint setDampingEid error undefined symbol ZN btGeneric DofSpringConstraint setStiffnessEid error undefined symbol ZN btGeneric DofSpringConstraint setEquilibriumPointEid error undefined symbol ZN btKinematicCharacterController setGravityEd error undefined symbol ZN btKinematicCharacterController setMaxSlopeEd error undefined symbol ZN btKinematicCharacterController setFallSpeedEd error undefined symbol ZN btKinematicCharacterController setJumpSpeedEd error undefined symbol ZN btKinematicCharacterController setMaxJumpHeightEd error undefined symbol ZN btKinematicCharacterControllerC EP btPairCachingGhostObjectP btConvexShapedi error undefined symbol ZNK btCollisionShape getBoundingSphereER btVector Rd error undefined symbol ZNK btCollisionShape getContactBreakingThresholdEd error undefined symbol ZNK btCollisionWorld convexSweepTestEPK btConvexShapeRK btTransformS RNS ConvexResultCallbackEd Error Aborting compilation due to previous errors sharedERROR UsersknightzhuDownloadsemsdkmasternode bitbinnode UsersknightzhuDownloadsemsdkmasterfastcompemscriptensrccompilerjs varfolderspzqd ksvn gqbvrvx ckfwhsbyxm TtmpFx O txt UsersknightzhuDownloadsemsdkmasterfastcompemscriptensrclibrarypthreadstubjs failed I tried s ERRORONUNDEFINEDSYMBOLS generated ammojs succeed but throw runtime error missing function ZN btCapsuleShapeXC Edd Anybody can help Hi there I wanted to ask if there is a good if there is a good example how to use the btCompoundShape in a js Threejs project I sticked to the examples I found for C but I miss the calculatePrincipalAxisTransform method ind js All I want to create is Torus rigid Body which is dynamic Weve been using ammojs in and recently I were going through some memory leaks related to ammojs Everything has to be manually cleared but there are certain references left in ammojs cache objects Here are few examples creating btRigidBody then get use getMotionState on it Then Ammodestroybody but motionState will remain in AmmobtMotionStatecache Calling Ammodestroystate on it will throw an error as I would assume it is actually destroyed already with body but reference still in present Creating btCollisionShape of different types like btBvhTriangleMeshShape Calling Ammodestroyshape removes shape but leaves btBvhTriangleMeshShape in AmmobtBvhTriangleMeshShapecache btDefaultMotionState when related btMotionState is destroyed it does not remove related AmmobtDefaultMotionStatecache Calling manifoldgetBody or manifoldgetBody will return btCollisionObject but then references to it never removed as well when that object is eventually destroyed by AmmodestroyrigidBody How do we properly remove those related cache references when their actual objects are destroyed internally Doing delete AmmobtBvhTriangleMeshShapecache shapeptr seems very hacky Hello I just ran the vehicle demo at The friction slip is being applied at line but it is not working as the speed remains same wheelInfosetmfrictionSlipfriction Steps to reproduce Increase speed using the w key and release the key The vehicle will stay at the same speed after releasing the key so it is not effected by any kind of friction applied to it Add function btCollisionObjectsetIgnoreCollisionCheck from bullet Fix a collision check bug with setIgnoreCollisionCheck and CCD Running python testpy hits that now Is anyone running into that in practice Or is it a test suite bug Pointerstringify is gone from Emscripten so it should maybe be replaced with UTF ToString in makepy I get the following error when running buildsh gluecpp error allocating an object of abstract class type DebugDrawer return new DebugDrawer srcLinearMathbtIDebugDrawh note unimplemented pure virtual method getDebugMode in DebugDrawer virtual int getDebugMode const error generated Hey all I am currently building a pinball project which uses btHingeConstraints on the flippers I originally had it working with a three mesh with BoxBufferGeometry to test but now I am cloning geometry from a loaded GLTF to a new mesh with BufferGeometry and now the motor wont rotate to turn the flippers Are there limitations in using BufferGeometries as opposed tgo BoxBufferGeometries in these cases Just to note I am creating the hinge constraints when the gltf has loaded so trying to declare before the geometry is available isnt the problem and the geometry is being created correctly and positioning correctly on the hinge cheers