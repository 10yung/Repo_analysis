This change adds an option to exclude the cache directory from backup the first time it is created data property of SPTPersistentCacheRecord is declared as strong This could lead to problem when instances of SPTPersistentCacheRecord are created with NSMutableData PR adds failing test case to show this behaviour and fix for it W aG Thank you in advance for taking a look at this SPTPersistentCache doesnt compile via standard Carthage pull under Xcode The error is CompileC Usersz r LibraryCachesorgcarthageCarthageKitDerivedData A aSPTPersistentCache BuildIntermediatesnoindexArchiveIntermediatesSPTPersistentCacheiOSIntermediateBuildFilesPathSPTPersistentCacheFrameworkbuildReleaseiphoneosSPTPersistentCacheiOSbuildObjectsnormalarmv SPTPersistentCacheo Usersz r DustinHarmonyiOSCarthageCheckoutsSPTPersistentCacheSourcesSPTPersistentCachem normal armv objectivec comapplecompilersllvmclang compiler in target SPTPersistentCacheiOS cd Usersz r DustinHarmonyiOSCarthageCheckoutsSPTPersistentCacheSPTPersistentCacheFramework export LANGenUSUSASCII Usersz r DownloadsXcode appContentsDeveloperToolchainsXcodeDefaultxctoolchainusrbinclang x objectivec arch armv fmessagelength fdiagnosticsshownoteincludestack fmacrobacktracelimit stdgnu fobjcarc fmodules gmodules fmodulescachepathUsersz r LibraryCachesorgcarthageCarthageKitDerivedData A aSPTPersistentCache ModuleCachenoindex fnoautolink fmodulespruneinterval fmodulespruneafter fbuildsessionfileUsersz r LibraryCachesorgcarthageCarthageKitDerivedData A aSPTPersistentCache ModuleCachenoindexSessionmodulevalidation fmodulesvalidateonceperbuildsession Wnonmodularincludeinframeworkmodule Werrornonmodularincludeinframeworkmodule fmodulenameSPTPersistentCache Wnotrigraphs fpascalstrings Os fnocommon Werrorincompatiblepointertypes Werrorimplicitfunctiondeclaration Wmissingfieldinitializers Wmissingprototypes Werrorreturntype Wdocumentation Wunreachablecode Wnullabletononnullconversion Wimplicitatomicproperties Werrordeprecatedobjcisausage Wnoobjcinterfaceivars Werrorobjcrootclass Warcrepeateduseofweak Wnoarcmayberepeateduseofweak Wexplicitownershiptype Wimplicitretainself Wduplicatemethodmatch Wmissingbraces Wparentheses Wswitch Wunusedfunction Wunusedlabel Wnounusedparameter Wunusedvariable Wunusedvalue Wemptybody Wuninitialized Wconditionaluninitialized Wunknownpragmas Wshadow Wfourcharconstants Wconversion Wconstantconversion Wintconversion Wboolconversion Wenumconversion Wfloatconversion Wnonliteralnullconversion Wobjcliteralconversion Wassignenum Wsigncompare Wshorten to Wpointersign Wnewlineeof Wselector Wstrictselectormatch Wundeclaredselector Wdeprecatedimplementations DNSBLOCKASSERTIONS DOBJCOLDDISPATCHPROTOTYPES isysroot Usersz r DownloadsXcode appContentsDeveloperPlatformsiPhoneOSplatformDeveloperSDKsiPhoneOS sdk fstrictaliasing Wprotocol Wdeprecateddeclarations miphoneosversionmin g Wsignconversion Winfiniterecursion Wcomma Wblockcaptureautoreleasing Wstrictprototypes Wnosemicolonbeforemethodbody fembedbitcode iquote Usersz r LibraryCachesorgcarthageCarthageKitDerivedData A aSPTPersistentCache BuildIntermediatesnoindexArchiveIntermediatesSPTPersistentCacheiOSIntermediateBuildFilesPathSPTPersistentCacheFrameworkbuildReleaseiphoneosSPTPersistentCacheiOSbuildSPTPersistentCachegeneratedfileshmap IUsersz r LibraryCachesorgcarthageCarthageKitDerivedData A aSPTPersistentCache BuildIntermediatesnoindexArchiveIntermediatesSPTPersistentCacheiOSIntermediateBuildFilesPathSPTPersistentCacheFrameworkbuildReleaseiphoneosSPTPersistentCacheiOSbuildSPTPersistentCacheowntargetheadershmap IUsersz r LibraryCachesorgcarthageCarthageKitDerivedData A aSPTPersistentCache BuildIntermediatesnoindexArchiveIntermediatesSPTPersistentCacheiOSIntermediateBuildFilesPathSPTPersistentCacheFrameworkbuildReleaseiphoneosSPTPersistentCacheiOSbuildSPTPersistentCacheallnonframeworktargetheadershmap ivfsoverlay Usersz r LibraryCachesorgcarthageCarthageKitDerivedData A aSPTPersistentCache BuildIntermediatesnoindexArchiveIntermediatesSPTPersistentCacheiOSIntermediateBuildFilesPathSPTPersistentCacheFrameworkbuildReleaseiphoneosSPTPersistentCacheiOSbuildallproductheadersyaml iquote Usersz r LibraryCachesorgcarthageCarthageKitDerivedData A aSPTPersistentCache BuildIntermediatesnoindexArchiveIntermediatesSPTPersistentCacheiOSIntermediateBuildFilesPathSPTPersistentCacheFrameworkbuildReleaseiphoneosSPTPersistentCacheiOSbuildSPTPersistentCacheprojectheadershmap IUsersz r LibraryCachesorgcarthageCarthageKitDerivedData A aSPTPersistentCache BuildIntermediatesnoindexArchiveIntermediatesSPTPersistentCacheiOSBuildProductsPathReleaseiphoneosinclude Iinclude IUsersz r LibraryCachesorgcarthageCarthageKitDerivedData A aSPTPersistentCache BuildIntermediatesnoindexArchiveIntermediatesSPTPersistentCacheiOSIntermediateBuildFilesPathSPTPersistentCacheFrameworkbuildReleaseiphoneosSPTPersistentCacheiOSbuildDerivedSourcesarmv IUsersz r LibraryCachesorgcarthageCarthageKitDerivedData A aSPTPersistentCache BuildIntermediatesnoindexArchiveIntermediatesSPTPersistentCacheiOSIntermediateBuildFilesPathSPTPersistentCacheFrameworkbuildReleaseiphoneosSPTPersistentCacheiOSbuildDerivedSources Weverything Wnoerrordeprecated Wnoobjcmissingpropertysynthesis Wnognuconditionalomittedoperand Wnognu Wnodocumentationunknowncommand Wnoreservedidmacro Wnoautoimport Wnomissingvariabledeclarations Wnoc compat Werror Wnodirectivaraccess Wnopadded FUsersz r LibraryCachesorgcarthageCarthageKitDerivedData A aSPTPersistentCache BuildIntermediatesnoindexArchiveIntermediatesSPTPersistentCacheiOSBuildProductsPathReleaseiphoneos MMD MT dependencies MF Usersz r LibraryCachesorgcarthageCarthageKitDerivedData A aSPTPersistentCache BuildIntermediatesnoindexArchiveIntermediatesSPTPersistentCacheiOSIntermediateBuildFilesPathSPTPersistentCacheFrameworkbuildReleaseiphoneosSPTPersistentCacheiOSbuildObjectsnormalarmv SPTPersistentCached serializediagnostics Usersz r LibraryCachesorgcarthageCarthageKitDerivedData A aSPTPersistentCache BuildIntermediatesnoindexArchiveIntermediatesSPTPersistentCacheiOSIntermediateBuildFilesPathSPTPersistentCacheFrameworkbuildReleaseiphoneosSPTPersistentCacheiOSbuildObjectsnormalarmv SPTPersistentCachedia c Usersz r DustinHarmonyiOSCarthageCheckoutsSPTPersistentCacheSourcesSPTPersistentCachem o Usersz r LibraryCachesorgcarthageCarthageKitDerivedData A aSPTPersistentCache BuildIntermediatesnoindexArchiveIntermediatesSPTPersistentCacheiOSIntermediateBuildFilesPathSPTPersistentCacheFrameworkbuildReleaseiphoneosSPTPersistentCacheiOSbuildObjectsnormalarmv SPTPersistentCacheo Usersz r DustinHarmonyiOSCarthageCheckoutsSPTPersistentCacheSourcesSPTPersistentCachem error implicit conversion from nullable pointer NSString Nullable to nonnullable pointer type ObjectType Nonnull aka id WerrorWnullabletononnullconversion userInfo NSLocalizedDescriptionKey errorString Usersz r DustinHarmonyiOSCarthageCheckoutsSPTPersistentCacheSourcesSPTPersistentCachem warning messaging unqualified id Wobjcmessagingid currentCacheSize image SPTDataCacheFileAttributesKey NSFileSize integerValue Usersz r DustinHarmonyiOSCarthageCheckoutsSPTPersistentCacheSourcesSPTPersistentCachem warning messaging unqualified id Wobjcmessagingid currentCacheSize image SPTDataCacheFileAttributesKey NSFileSize integerValue I put in a PR to fix but cant figure out why the CI process fails on the PR Would like to use SPTPersistentCache from master if possible not from a fork that I took Thank you for any help This has been deprecated for over two years If we merge this it s a semver MAJOR change so I guess the question is if we want anything else in a release rastersize W aG dflems I see in the code that there are functions to determine the URI of the cached images however they are not exposed Are there any exposed functions or recommended methods for determining the URI of a cached image I need this for an application that will be using QMChatViewController and the library only accepts URI paths for image attachments Thanks I have an app that is a comic book reader so the user can download a book then read it later even without internet Im thinking to cache all pagesimages of the book with SPTPersistentCache I need to save each book in a different folder ex spider man will be saved on a folder spidermanpages minions will be saved on minionspages and so on Also SPTPersistentCache cant garbage the books downloaded it must keep the cache until the user delete that specific book Also no disk size limite What I need is the very same way Spotify does with offline musics downloaded Can I do that Expose enqueueGarbageCollection Scheduling garbage collection by time isnt appropriate for shortlived applications This adds an alternative API which allows you to schedule the garbage collection instantly This fixes Expose minimumFreeDiskSpaceFraction Defaulting to require of free disk space does not make sense for some apps For example on a huge disk say GB there is no reason to require GB free space for a MB cache Im considering how to schedule the garbage collector for an app that does not have long sessions I understand that the current way of scheduling works fine for Spotify since your app will be long running in the background Do you guys have any suggestions on how to handle scheduling in an app where the average user session is around seconds Scheduling it to run every seconds seems unnecessary but scheduling it to run at seconds could mean that the GC never runs for some users since we need to unschedule when the app enters the background to avoid an NSTimer keeping the app awake I think ideally SPTPersistentCache should have a way to manually start the GC instead of scheduling it This would allow us to run it once when the app enters background before it gets terminated I could achieve this in the current way by scheduling it at seconds when the app enters background and then immediately unscheduling it This seems kind of insecure though since it could run times or even cancel before it runs at all Any input is appreciated Whenever we try to save large files MB actual size depends on device capabilities to cache nothing happens except console log message like machvmmapsize failed error code error cant allocate region set a breakpoint in mallocerrorbreak to debug The problem is in SPTPersistentCache method NSError storeDataSyncNSData data forKeyNSString key ttlNSUIntegerttl lockedBOOLisLocked withCallbackSPTPersistentCacheResponseCallbackcallback onQueuedispatchqueuetqueue The following code does not work for large rawDataLength NSMutableData rawData NSMutableData dataWithCapacityrawDataLength One way to handle large amounts of data is to fill temporary file with relatively small blocks of data first and then writing it atomically to target filePath I expect to get the cache from the return value rather than in a block Is there an alternative way to implement that makes it can return cache value directly BOOLloadDataForKeyNSString key withCallbackSPTPersistentCacheResponseCallback Nullablecallback onQueuedispatchqueuet Nullablequeue 