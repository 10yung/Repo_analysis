Hello respect of open source framework the author I am a computer science student in China a while ago was shocked by this framework and into the framework of the study the framework is very powerful but I also found a problem that is the Node data in the Inspector panel display support is not friendly so I with the help of Odin plugins do a Demo Here are two links I would be happy to contribute to this framework if you think my proposal is enough of a branch Ill rewrite a little Demo and post it to you I did git clone on branch develop but I have problem with the look of nodes If I have the graph node editor on monitor external the look of node seems correct schermata alle If I have the graph node editor on main monitor the look of node is busted img width altschermata alle src Information Unity f Mac Hight Sierra Mac Book Pro late Currently it seems the duplication is implemented in NodeEditorInputControlscs which only create a new empty Node therefore is not handy when custom nodes contains data Will it brokes anything to let a Node duplicate themself and fill in desired data For supporting MultiMulti connections connections between two knobs with MaximumConnectionCountMulti we need a new way of editing connections The current system relies on one knob with only one possible connection to delete the connection and the other one to create them which is suboptimal Consider this a continuation of to adress and and fix and New concept for ALL connections Create new connection by dragging from any of the two knobs to the other Delete multiple connections by holding a key and dragging a cutting line to delete cut all connections under the line see from OR Delete single connections by rightclicking them or similar Preview connection values for ValueConnections and perhaps select connections important for some kind of connections that have own behaviourconditions This requires hit detection between pointbezier andor linebezier Many developers need a variable amount of InputsOutputs and as an alternative to allowing multiple inputs into one connection many node editors instead have a variable range of inputsoutputs which adapt when the user adds more connections This could currently be done in the node but a generic solution built into the node itself would be more apropriate IMO This will be addressed with a low priority in the future if nobody necessarily needs it as of now PDF shouldnt be the only format of distribution for the documentation Its hard to edit only the one you with the source file can edit it and it lacks version control because it is a binary file type I think a good alternate way would be to have GitHub pages set up with the documentation in HTML The PDF files in this repository would be a print of those files Description Selecting moving deleting and duplicating multiple nodes State None May need adjustements to NodeEditorState and the input checking system Description For the Node Editor to properly work at runtime we need support for all kinds of popups GenericMenu EnumPopup IntPopup etc even Tooltip This will also fix some bugs regarding node focussing problems as these will not block user input straight away when clicking it even the first click event Additionally this will open up the possibility to let them account for the zooming respective builtin controls will simply ignore the GUI scaling State This is easily possible using the Popup Engine I already made for the GenericMenu to work Location OverlayGUIcs and RTEditorGUIcs for implementing new popups Description A generic node for calling actions both static and instance The Inputs and Outputs should adapt automatically Progress Currently put on hold because we are unable to just serialize a function Im adressing this with a UnityFunc which is serializeable and also needed for the StateMachine Kamigaku on the forums has a specialised version already running afaik Location Due to the dependecny on UnityFunc mostlyUnityFunccs and UnityFuncEditorcs WIP Branch Description Undo support is a MUST Using the default system this would be absolutely tedious though A command based pattern would be preferred Maybe a mix of both is the best choice Progress Ive a WIP CommandPattern Undo Integration yes integration into the default systemD we can use for the editor when its finished Progressing good but currently on hold For Runtime VFW would probably be the best choice as the undo system also commandpattern Currently theres no undo support though 