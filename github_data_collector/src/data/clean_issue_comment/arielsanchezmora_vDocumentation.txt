I found a way to get QLogicEmulex HBA firmware version without SSH Comment line to GetESXIODeviceps if pciDeviceDeviceName match smart array WriteVerbose Message GetDate Format G tGet Firmware version for pciDeviceVMKernelName hpsa esxiHostExtensionDataRuntimeHealthSystemRuntimeSystemHealthInfoNumericSensorInfo WhereObject Name match HP Smart Array if hpsa firmwareVersion hpsaName split firmware Trim else WriteVerbose Message GetDate Format G tGet Extension data failed Skip Firmware version check for pciDeviceDeviceName firmwareVersion null END ifelse else WriteVerbose Message GetDate Format G tSkip Firmware version check for pciDeviceDeviceName firmwareVersion null END ifelse AddReplace by WriteVerbose Message GetDate Format G tGet Firmware version for pciDeviceVMKernelName vmbhaDetail esxclistoragesanfclistinvoke where Adapter match pciDeviceVMKernelName firmwareVersion vmbhaDetailFirmwareVersion Tested on ESXi U with PowerCLI Release build Version ESXi U Model ProLiant BL c Gen Slot Description Mezzanine Slot VMKernel Name vmhba Device Name Series Gb Fibre Channel to PCI Express HBA Vendor Name QLogic Corp Device Class Fibre Channel PCI Address VID DID SVID c SSID VIB Name qlnativefc Driver qlnativefc Driver Version OEM Firmware Version d d Version ESXi U Model ProLiant BL c Gen Slot Description Mezzanine Slot VMKernel Name vmhba Device Name Emulex OneConnect OCe FCoE Initiator Vendor Name Emulex Corporation Device Class Fibre Channel PCI Address VID df DID SVID c SSID VIB Name brcmfcoe Driver brcmfcoe Driver Version OEM Firmware Version This breaks the PassThru option adding text into the output breaking the intent of the output object If you do this I can create cool things like this ReportCardPSvDocumentation While running GetESXInventory against a VCSA from my macOS running PSCore and PowerCLI I am getting multiple errors powershell GetVMHostHardware Cmdlet GetVMHostHardware is not supported on PowerShell Core At usrlocalsharepowershellModulesvDocumentation PublicGetESXInventoryps char hostHardware vmhost GetVMHostHardware WaitForAllData CategoryInfo NotSpecified PlatformNotSupportedException FullyQualifiedErrorId SystemPlatformNotSupportedException powershell NewCimSessionOption The term NewCimSessionOption is not recognized as the name of a cmdlet function script file or operable program Check the spelling of the name or if a path was included verify that the path is correct and try again At usrlocalsharepowershellModulesvDocumentation PublicGetESXInventoryps char cimOpt NewCimSessionOption SkipCACheck SkipCNCheck CategoryInfo ObjectNotFound NewCimSessionOptionString CommandNotFoundException FullyQualifiedErrorId CommandNotFoundException powershell NewCimSession The term NewCimSession is not recognized as the name of a cmdlet function script file or operable program Check the spelling of the name or if a path was included verify that the path is correct and try again At usrlocalsharepowershellModulesvDocumentation PublicGetESXInventoryps char session NewCimSession Authentication Basic Credenti CategoryInfo ObjectNotFound NewCimSessionString CommandNotFoundException FullyQualifiedErrorId CommandNotFoundException powershell GetCimInstance The term GetCimInstance is not recognized as the name of a cmdlet function script file or operable program Check the spelling of the name or if a path was included verify that the path is correct and try again At usrlocalsharepowershellModulesvDocumentation PublicGetESXInventoryps char rac session GetCimInstance CIMIPProtocolEndpoint CategoryInfo ObjectNotFound GetCimInstanceString CommandNotFoundException FullyQualifiedErrorId CommandNotFoundException Normally I dont have the predefined VUM baselines attached I create my own I tried with and without those predefined baselines attached to my cluster or datacenter but I get this error in all cases vDocumentation v PS C GetESXPatching ExportExcel folderpath vDocExportPath Connected to vcenterdomainlocal GetESXPatching Could not find any baselines named Critical Host PatchesNonCritical Host Patches on server vcenterdomainlocal Please check Baseline name and try again At line char GetESXPatching ExportExcel folderpath vDocExportPath CategoryInfo NotSpecified WriteError WriteErrorException FullyQualifiedErrorId MicrosoftPowerShellCommandsWriteErrorExceptionGetESXPatching Running PowerShell on WinSrv Can this switch be added Id like to have one sheet for Inventory Storage etc but with separate tabs for each vCenter This will make it easier to reference the multiple environments in one place Thanks Hi there after importing ExportExcel and vDocumentation Im getting an error with the following command GetESXIODevice esxi hostname ExportExcel folderPath C Users gsmid Downloads Output is preExportExcel A positional parameter cannot be found that accepts argument C Users gsmid Downloads IODevice T xlsx At DOCHOST USERS gsmid Documents WindowsPowerShell Modules vDocumentation Public GetESXIODeviceps char ollection ExportExcel outputFile xlsx WorkSheetname IODe CategoryInfo InvalidArgument ExportExcel ParameterBindingException FullyQualifiedErrorId PositionalParameterNotFoundExportExcelpre I checked line of GetESXIODeviceps outputCollection ExportExcel outputFile xlsx WorkSheetname IODevice NoNumberConversion AutoSize BoldTopRow I found that if I modified it slightly by explicitly stating the Path paramenter everything works fine outputCollection ExportExcel Path outputFile xlsx WorkSheetname IODevice NoNumberConversion AutoSize BoldTopRow I run in large environments and connect to multiple vcenters at all times It will vastly speed up processing time as well if you add Server parameter and then add Server to all the get commands as they all have a Server parameter as well Currently when connected to many vcenters and run a single getesxInventory it takes a very long time I have to disconnect and reconnect to only the Vcenter that contains the object I will run the report on I highly recommend adding Server and would love to have it currently I am adding it myself to the code Thanks