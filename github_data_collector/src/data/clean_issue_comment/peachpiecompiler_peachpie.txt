 Proposal When the CURLOPTCOOKIEJAR option is set the following changes should be made After each request is made the CookieContainers contents should be serialized using the CreateCookieArray format and saved to the disk with file path declared in CURLOPTCOOKIEJAR Before each request is made the contents of CURLOPTCOOKIEJAR file should be read and parsed and put into the CookieContainer Description This issue causes an invalid header to be sent when using the CURLOPTENCODING option Expected AcceptEncoding Actual Accept Example code php ch curlinit curlsetoptch CURLOPTURL curlsetoptch CURLOPTENCODING gzip deflate here curlsetoptch CURLOPTRETURNTRANSFER true ret curlexecch vardumpret phpexe The request header set will be AcceptEncoding gzip deflate which is correct Peach Pie The request header set will be Accept gzip deflate which is not correct and may cause the request to fail Remarks eg IIS servers return HTTP if the received Accept header from the client does not match the expected MIME This also causes the original Accept header to be reset from the default value I was not able to find the cause of this in either CURLFunctionscs or CURLFunctionscs The main contribution are the following semantic transformations Removal of unnecessary copying Passing values of routine parameters Copying local variables assigned between each other Copying return values ords i to ints i not creating an intermediate onebyte string isseta i a i fallback to TryGetItemValuea i out val val fallback X X to X emptyx to false if x is not initialized defineX VALUE to const X VALUE IPhpCallable this method IPhpCallable SomeClass method IPhpCallablesomeFunction is now resolved in compiled time and cached in runtime Related fixes and enhancements The analysis reducing numbers to int works now for reverse loops as well eg for i i i Added FixpointAnalysisTContext TState for lightweight intraprocedural analyses separated from the global analysis performed in the analysis phase currently used to remove unnecessary copying Introduced SingleBlockWalkerT as a step between GraphVisitorT and GraphWalkerT Updated BuilderVisitor to produce CFG with continuous block ordinals some of the allocated ordinals werent originally used by being overwritten Other smaler updates Hi developers Thank you for such an amazing peachpie I have resolved many Type name could not be resolved issue in my peachpie project and it all most works But finally the remaning issues are all error PHP Yielding from an exception handling construct try catch finally is currently not supported by PeachPie Such as rootprojectsPeachPieTestWebsite rdpartysymfonycacheAdapterFilesystemTagAwareAdapterphp error PHP Yielding from an exception handling construct try catch finally is currently not supported by PeachPie rootprojectsPeachPieTestWebsiteWebsitemsbuildproj It seems like these php packages use the grammar unsupported by peachpie Do you have any plan to do this Or is there anything I could do to help you I write Net While invert and days seems to be correct now other values seem to be always As an example d should be in the range of to but not as shown below Taking the example from below m should be set to and d to something between and depending on input parameters see Name Wert Typ diff DateInterval object span SystemTimeSpan d int days int f double h int i int invert int m int s int y int Originally posted by janai in Currently Peachpie only supports Mssql Microsoft SQL Server This extension is removed in PHP Can you add support for SQLSRV Microsoft SQL Server Driver for PHP Currently compiler CodeAnalysis provides its own ErrorCode and also error code from underlaying parser runtime has its PhpException and libraries own error messages Suggesting to merge all the errorswarningsnotices into a single assembly PeachpieErrors since analysis provides the same errors as used in runtime and for sake of a better overview Also it might help for future localizations Sample datetime DateTimecreateFromFormatYmd echo vardumpdatetime r n PeachPie output Unhandled Exception SystemArgumentOutOfRangeException Year must be between and Parameter name year at SystemDateTimeIsLeapYearInt year at SystemDateTimeDaysInMonthInt year Int month at PchpLibraryDateTimeDateInfoCheckOverflowsInt y Int m Int d Int h Int daysoverflow at PchpLibraryDateTimeDateInfoGetDateTimeContext ctx DateTime utcStart at PchpLibraryDateTimeDateTimecreateFromFormatContext ctx String format String time DateTimeZone timezone at RootmainphpMainContext ctx PhpArray locals Object this RuntimeTypeHandle self in mntcDevelopmentlaravelpeachpiesampleLaravelTestsmainphpline at ScriptMainString args PHP output objectDateTime date string timezonetype int timezone string EuropeBerlin chown is not supported Changing the target of a PeachPie project from NET Core to NET Framework causes the following problems The exe wont run due to SixLaborsCore not meeting the Strong Name requirements other PeachPie libraries use a strong name Workaround for snremoveexe r dll The exe still wont run SystemBadImageFormatException The module was expected to contain an assembly manifest on PeachPieRuntimedll UPDATE I got it working by taking the PeachPie snk and resigning the following assemblies PeachPieLibraryGraphicsdll SixLaborsCoredll SixLaborsImageSharpdll So the issue is about SixLabors not being signed and PeachPieLibraryGraphics requiring it PeachPie version NET Framework version targeted 