Have looked around the internet for a proper answer but havent found one How do I ignore props added to my component using the operator in Typescript ie import TextFieldProps from materialuicoreTextField type Props The ID of the element id string ignore TextFieldProps Does not work All of the props from TextField Props are displayed as opposed to solely the id prop the npm run compile fails on windows The single quote are not something that the cmd terminal accepts easily Since the single quotes are not necessary on linux or macos we could get rid of them In my collapsible section PR I believe I have made one more mistake Before only the current section was getting the selected flag Now all its parent do to This is a fix for it see attached comment Current behavior A clear and concise description of what the bug is The documentation for the release of v states that Node is the lowest supported version While attempting to update our project to v of React my coworker couldnt build the project but I could His local machine is running Node Mine is After combing through RSG release notes he found that the package minihtmlwebpackplugin was updated in v and checked the release notes on that version which state Node is the minimum required version This is especially an issue for our group because other internal processes required to build projects are below the version of Node as well To reproduce Attempt to run Styleguidist in an environment with a Node version that less than Im not certain how to provide an example for this as it depends on a developers local environment Post a link to a reproducible demo repository here Fork the example project repository please don t use the main styleguidistreactstyleguidist repository Modify it to reproduce the issue Push to GitHub and paste the link here Most likely you ll find an issue yourself while creating a demo Make sure you re using the latest version of React Styleguidist Issues without a demo will be closed Expected behavior Updates to Styleguidist documentation that provide clarity about the current minimum required version of Node I had already done some custom styling and other additional work that now unfortunately must be cherrypicked out of my branch to implement so some form of documentation with this clarity would be useful to other developers A clear and concise description of what you expected to happen documentation update for I am trying hard to get a working configuration with expo SDK Reproduction git clone cd expobugreports git checkout reactstyleguidist npm i npm run styleguide As soon as I import thing I get jsx nodemodulesreactnativegesturehandlertouchablesTouchableHighlightjs Module parse failed Unexpected token You may need an appropriate loader to handle this file type currently no loaders are configured to process this file See export default class TouchableHighlight extends Component static defaultProps GenericTouchabledefaultProps activeOpacity nodemodulesreactnativegesturehandlertouchablesindexjs nodemodulesreactnativegesturehandlerindexjs or nodemodulesreactnativeLibrariesReactNativeUIManagerjs Module parse failed Unexpected token You may need an appropriate loader to handle this file type currently no loaders are configured to process this file See use strict import type Spec from NativeUIManager My webpackconfigjs look like this javascript const createExpoWebpackConfigAsync requireexpowebpackconfig moduleexports async function env argv const config await createExpoWebpackConfigAsyncenv argv return config My babelconfigjs look like this javascript moduleexports function api apicachetrue return presets babelpresetexpo Did anybody succeed to work with expo and reactstyleguidist Consider opening a pull request instead it s a more productive way to discuss new features At present we can show docs only for latest version of component library A clear and concise description of what the problem is Ex Im always frustrated when Would be awesome if there is a way for user to browse to older version of component library A clear and concise description of what you want to happen Add any considered drawbacks A clear and concise description of any alternative solutions or features you ve considered Add any other context or screenshots about the feature request here Example of implementation can be emberjs api documentation where you have a dropdown to select version On top of my mind an easy implementation can be code split the generated component library and use webpack to name chunks with version names Only issue i can see with this is cache busting wont work I want to use reactstyleguidist with expo for the web development of reactnative components I am able to start the styleguide for simple components but as soon as I test for example this component jsx import React from react import PropTypes from proptypes import Platform View from reactnative import AppLoading SplashScreen as ExpoSplashScreen from expo import Asset from expoasset import as Font from expofont eslintdisable globalrequire nounderscoredangle This component is used before displaying the HomeView It is in charge of handling splash image then react splash screen and displaying the home It can also handle assets loading while splash screen is displayed example SplashScreenCore splashrequiresplashpng fonts roboto requirerobotottf imageList bgpng appstorepng googleplaypng AppContainer SplashScreen class SplashScreenCore extends ReactComponent constructorprops superprops thisstate isSplashReady false isAppReady false removeWebLoading const loadingContainerId thisprops const loadingContainer documentgetElementByIdloadingContainerId if loadingContainer return const eventList webkitTransitionEnd transitionend otransitionend function clear documentbodyremoveChildloadingContainer eventListforEachevent loadingContainerremoveEventListenerevent clear false eventListforEachevent loadingContaineraddEventListenerevent clear false loadingContainerclassListaddout cacheSplashResourcesAsync async const splash thisprops return AssetfromModulesplashdownloadAsync cacheResourcesAsync async const imageList fonts thisprops ExpoSplashScreenhide try if fonts await FontloadAsyncfonts catch e we have found that Safari on iPhone was failing even if fonts are loaded const cacheImages imageListmapimage AssetfromModuleimagedownloadAsync await PromiseallcacheImages thissetState isAppReady true if PlatformOS web try thisremoveWebLoading catch e we have found that native build will log warning otherwise due to document being undefined in removeWebLoading render const splashScreen SplashScreen children thisprops const isSplashReady isAppReady thisstate if isSplashReady return AppLoading startAsyncthiscacheSplashResourcesAsync onFinish thissetState isSplashReady true onErrorprocessenvNODEENV production undefined consolewarn eslintdisableline noconsole autoHideSplashfalse return View style flex isAppReady eslintdisableline nonestedternary ReactisValidElementSplashScreen ReactcloneElementSplashScreen onLoad thiscacheResourcesAsync SplashScreen onLoadthiscacheResourcesAsync children View SplashScreenCorepropTypes a splash screen instance for your app used while pre caching the assets splashScreen PropTypesoneOfType PropTypesnode PropTypeselementType isRequired the path to a png splash screen used while loading the splashScreen splash PropTypesnodeisRequired a list of image that will be added to cache before displaying the main screen imageList PropTypesarray a font object with the key as the font name and the value the font that will loaded fonts PropTypesobject a containerId in indexhtml it will be removed after react splash screen is loaded loadingContainerId PropTypesstring ignore children PropTypesnodeisRequired SplashScreenCoredefaultProps fonts null imageList loadingContainerId loadingcontainer export default SplashScreenCore I have the following error So far I have the following when I run npm run styleguide js nodemodulesreactnativesafeareaviewindexjs Module parse failed Unexpected token You may need an appropriate loader to handle this file type currently no loaders are configured to process this file See class SafeView extends Component static setStatusBarHeight height customStatusBarHeight height nodemodulesreactnavigationnativedistindexjs nodemodulesreactnavigationsrcreactnavigationjs srccoreAppCorejs nodemodulesreactstyleguidistlibloadersstyleguideloaderjsnodemodulesreactstyleguidistlibclientindexjs nodemodulesreactstyleguidistlibclientindexjs multi styleguidesetupjs nodemodulesreactstyleguidistlibclientindex nodemodulesreactdevutilswebpackHotDevClientjs I use expo and never had to configure webpack myself in the expo project project What else do I need to add in the default reactstyleguidist webpack config in order to run the styleguide with an expo webnative app Did anyone ever tried to use reactstyleguidist with reactnativeweb context Current behavior RSG v s automatic Typescript support does not seem to play well with rd party components In v in combination with reactdocgentypescript props and methods were correctly parsed after setting the propsparser property in the config From v reactdocgen was upgraded so reactdocgentypescript was no longer required To reproduce Clone It contains branches notworking and working Not working is with v working is with v and reactdocgentypescript Start the styleguide Youll see in the the nonfunctional version no props and no methods in the working branch they do appear Expected behavior Props and methods should be extracted for rd parties to like in versions before v Thanks 