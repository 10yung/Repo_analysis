to avoid where to put those files and decreases build size already uploaded images for the maps vignette I am trying to install the package in Manjaro XFCE x I always received the following error testing if installed package can be loaded sh line Tracebreakpoint trap core dumped usrlib RbinR nosave slave tmpRtmpOFVQUUfile c d c d Fatal error in srcplatformlinuxcc line CHECKEQ result failed Expected Found ERROR loading failed I already have the Arch packages gdal geos and proj as well as udunits details summarystrongSession Infostrongsummary r R version Platform x pclinuxgnu bit Running under Manjaro Linux Matrix products default BLAS usrliblibopenblaspr so LAPACK usrlibliblapackso locale LCCTYPEenPHUTF LCNUMERICC LCTIMEenPHUTF LCCOLLATEenPHUTF LCMONETARYenPHUTF LCMESSAGESenPHUTF LCPAPERenPHUTF LCNAMEC LCADDRESSC LCTELEPHONEC LCMEASUREMENTenPHUTF LCIDENTIFICATIONC attached base packages stats graphics grDevices utils datasets methods base loaded via a namespace and not attached compiler tools yaml details There does not seem to be control over the number of digits output when passing a data frame to geojsonlist No matter how many significant digits there are in the lon and lat columns the resulting list has at most five digits to the right of the decimal eg I see from that digits were thought about at some point but Im not seeing how this translates into geojsonlist What am I missing Thanks details summarystrongSession Infostrongsummary r devtoolssessioninfo Session info setting value version R version system x darwin ui RStudio language EN collate enUSUTF tz EuropeCopenhagen date Packages package version date source assertthat CRAN R base local bindr cran bindrcpp cran citycastgtn NA local cli CRAN R commonmark CRAN R compiler local crayon CRAN R curl CRAN R datasets local devtools CRAN R digest cran dplyr cran foreign CRAN R geojson CRAN R geojsonio Github ropenscigeojsonio c fe glue cran graphics local grDevices local grid local hms CRAN R httr CRAN R jqr CRAN R jsonlite CRAN R jsonvalidate CRAN R lattice CRAN R lazyeval CRAN R lubridate CRAN R magrittr CRAN R maptools cran memoise CRAN R methods local pillar cran pkgconfig CRAN R purrr CRAN R R CRAN R Rcpp cran readr CRAN R rgdal cran rgeos cran RJSONIO CRAN R rlang Github rlibrlangd e d roxygen CRAN R rstudioapi CRAN R sp cran stats local stringi cran stringr cran tibble CRAN R tidyr cran tidyselect cran tools local utf cran utils local V CRAN R withr Github jimhesterwithr d b d xml cran yaml cran details arose from With the badtxt file below which contains JSON rgdal fails without a helpful message r libraryrgdal rgdalreadOGRbadtxt rgdalogrListLayersbadtxt Error in rgdalogrListLayersbadtxt Cannot open data source sf similarly doesnt give a helpful error sfstreadbadtxt Cannot open data source Userssckottgithubropenscigeojsoniobadtxt Error in CPLreadogrdsn layer ascharacteroptions quiet type Open failed With goodtxt it works fine r rgdalreadOGRgoodtxt rgdalogrListLayersgoodtxt OGR data source with driver GeoJSON Source Userssckottgithubropenscigeojsoniogoodtxt layer OGRGeoJSON with features It has fields An object of class SpatialPolygonsDataFrame Slot data sf works fine with good data sfstreadgoodtxt Options Use our pkg geojsonlint to lint json to attempt to make sure the json is valid geojson dont do anything check on a case by case basis as users report errors and could document that users should check that their GeoJSON is valid any others If we use geojsonlint r good should all be TRUE can check to see why hint is not working geojsonlintgeojsonhintaslocationgoodtxt FALSE geojsonlintgeojsonlintaslocationgoodtxt TRUE geojsonlintgeojsonvalidateaslocationgoodtxt TRUE bad should all be FALSE geojsonlintgeojsonhintaslocationbadtxt FALSE geojsonlintgeojsonlintaslocationbadtxt FALSE geojsonlintgeojsonvalidateaslocationbadtxt FALSE bad badtxt good goodtxt is doing for geojsonjson need to do for remainder of fxns should be geojsonlist Not for addressing now but for GDAL there is a new flag RFC to enforce the new geojson standard including automatic reprojection to WGS and enforcing the righthand rule See here We could rely on that more heavily There may be a way to avoid the round trip to disk in geojsonrw for converting Spatial objects to geojson but I havent quite been able to make it work The key you can write to stdout with rgdalwriteOGR r libraryrgdal cities readOGRsystemfilevectors package rgdal cities writeOGRcities vsistdout cities driverGeoJSON But I cant figure out a way to capture the output Ive tried various combinations of sink textConnection and captureoutput but its eluded me so far 