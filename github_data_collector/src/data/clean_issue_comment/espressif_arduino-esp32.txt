The below code is working fine for Arduino uno but returns error for ESP WrooverESP include Filtersh float testFrequency test signal frequency Hz float windowLength testFrequency how long to average the signal for statistist int sensorValue float intercept to be adjusted based on calibration testing float slope to be adjusted based on calibration testing float currentamps estimated actual current in amps unsigned long printPeriod in milliseconds Track time in milliseconds since last reading unsigned long previousMillis void setup Serialbegin start the serial port void loop RunningStatistics inputStats create statistics to look at the raw test signal inputStatssetWindowSecs windowLength while true sensorValue analogReadA read the analog in value inputStatsinputsensorValue log to Stats function ifunsigned longmillis previousMillis printPeriod previousMillis millis update time display current values to the screen Serialprint n output sigma or variation values associated with the inputValue itsel Serialprint tsigma Serialprint inputStatssigma convert signal sigma value to current in amps currentamps intercept slope inputStatssigma Serialprint tamps Serialprint currentamps Serialprint tSensor Value Serialprint sensorValue THE ERROR C Users Murali Documents Arduino libraries Filtersmaster FilterTwoPolecpp In member function void FilterTwoPoletest C Users Murali Documents Arduino libraries Filtersmaster FilterTwoPolecpp error analogWrite was not declared in this scope analogWrite oscoutput hardcoded the dial pin Multiple libraries were found for Filtersh Used C Users Murali Documents Arduino libraries Filtersmaster exit status Error compiling for board ESP Wrover Module Is it possible to utilise BT Classic BLE at the same time I am trying to build a transmitter remote control that sends a near instant throttle signal to a receiver unit Both ESP s Also I would like to be able to send temperature speed and other sensor data back to the remote control at regular intervals for display on an LCD screen Any help or hints would be much appreciated Thanks you Hardware Board Heltec WiFi Kit Core Installation version IDE name Arduino IDE Flash Frequency MHz PSRAM enabled No Upload Speed Computer OS iOS on iPhone Description HTTP authentication fails when using DIGESTAUTH with WebServerauthenticate from iOS devices It occurs in any of Safari Firefox and Chrome This could be an iOS issue but the ESP arduino core has dealt with a similar issue How does the esp arduinocore will deal with this problem Sketch The below sketch as a quote from the HttpAdvancedAuthino cpp include WiFih include ESPmDNSh include ArduinoOTAh include WebServerh const char ssid const char password WebServer server const char wwwusername admin const char wwwpassword esp const char wwwrealm Custom Auth Realm String authFailResponse Authentication Failed void setup Serialbegin WiFimodeWIFISTA WiFibeginssid password if WiFiwaitForConnectResult WLCONNECTED SerialprintlnWiFi Connect Failed Rebooting delay ESPrestart ArduinoOTAbegin serveron if serverauthenticatewwwusername wwwpassword return serverrequestAuthenticationDIGESTAUTH wwwrealm authFailResponse serversend textplain Login OK serverbegin SerialprintOpen SerialprintWiFilocalIP Serialprintln in your browser to see it working void loop ArduinoOTAhandle serverhandleClient As mentioned in the datasheet of ESP I was trying to make use of the internal RTC But not able to find any example or APIs related to it Is there any way to access the RTC Add HONEYLemon based on ESPWROOM ESP module from Espressif Hardware Board ESP wroom Core Installationupdate date IDE name Arduino IDE Flash Frequency PSRAM enabled Upload Speed Computer OS Windows Description Im working on something that needs MQTT over websocket my server limitation is mqtt just over WS On arduino IDE specifically Ive looked everywhere for it but either no one have ability to ratain or send over websocket packets D Ive somehow get to this include in arduino its close src and low language at least for me include mqttclienth and does this on my code void mqttinit espmqttclientconfigt mqttConfig mqttConfiguri wstestmosquittoorg mqttConfigport mqttConfigtransport MQTTTRANSPORTOVERWS espmqttclientstartclient and it compiled But i dont know anything about callbacks and handle functions can you help me stablish a mqtt connection over websocket with arduino ide tnx Added the channel parameter to the scan function in order to select which channel to scan The default value is all channels to preserve backward compatibility I was using this core before and I think I quite vividly remember there being an example for using the ULP It was about lines of assembler code that would read the ADC or something like that in deep sleep The instructions were just added to an array and written to the ULP before going to deep sleep Where do I remember this from I cannot find it any more Can we switch from lwIP checksum algorithm to lwIP checksum algorithm which is faster on ESP Hardware Board ESPWROOM Core Installationupdate date fc f aa IDE name Arduino IDE Flash Frequency Mhz PSRAM enabled no Upload Speed Computer OS Windows Description I am attempting to optimize TCP throughput for my application and found that the IPUDPTCP checksum implemented in lwIP for both esp and esp was using the default checksum instead of the fastest for xtensa cores I tested this by copying all three algorithms into a sketch and timing them Sketch leave the backquotes for code formatting cpp include lwipopth include lwipinetchksumh include lwipdefh include lwipipaddrh include stringh lwip checksum param dataptr points to start of data to be summed at any boundary param len length of data to be summed return host order lwip checksum noninverted Internet sum note accumulator size limits summable length to k note host endianess is irrelevant p RFC ICACHERAMATTR u t lwipstandardchksum const void dataptr int len u t acc u t src const u t octetptr acc dataptr may be at odd or even addresses octetptr const u t dataptr while len declare first octet as most significant thus assume network order ignoring host order src octetptr octetptr declare second octet as least significant src octetptr octetptr acc src len if len accumulate remaining octet src octetptr acc src add deferred carry bits acc acc acc x ffffUL if acc xffff UL acc acc acc x ffffUL This maybe a little confusing reorder sum using lwiphtons instead of lwipntohs since it has a little less call overhead The caller must invert bits for Internet sum return lwiphtonsu tacc Curt McDowell Broadcom Corp csmbroadcomcom IP checksum two bytes at a time with support for unaligned buffer Works for len up to and including x by Curt McDowell Broadcom Corp param dataptr points to start of data to be summed at any boundary param len length of data to be summed return host order lwip checksum noninverted Internet sum ICACHERAMATTR u t lwipstandardchksum const void dataptr int len const u t pb const u t dataptr const u t ps u t t u t sum int odd memptrtpb Get aligned to u t if odd len u t t pb len Add the bulk of the data ps const u t const void pb while len sum ps len Consume leftover byte if any if len u t t const u t ps Add end bytes sum t Fold bit sum to bits calling this twice is probably faster than if statements sum FOLDU Tsum sum FOLDU Tsum Swap if alignment was odd if odd sum SWAPBYTESINWORDsum return u tsum An optimized checksum routine Basically it uses loopunrolling on the checksum loop treating the head and tail bytes specially whereas the inner loop acts on bytes at a time arg start of buffer to be checksummed May be an odd byte address len number of bytes in the buffer to be checksummed return host order lwip checksum noninverted Internet sum by Curt McDowell Broadcom Corp December th ICACHERAMATTR u t lwipstandardchksum const void dataptr int len const u t pb const u t dataptr const u t ps u t t const u t pl u t sum tmp starts at odd byte address int odd memptrtpb if odd len u t t pb len ps const u t const void pb if memptrtps len sum ps len pl const u t const void ps while len tmp sum pl ping if tmp sum tmp add back carry sum tmp pl pong if sum tmp sum add back carry len make room in upper bits sum FOLDU Tsum ps const u t pl bit aligned word remaining while len sum ps len dangling tail byte remaining if len include odd byte u t t const u t ps sum t add end bytes Fold bit sum to bits calling this twice is probably faster than if statements sum FOLDU Tsum sum FOLDU Tsum if odd sum SWAPBYTESINWORDsum return u tsum static unsigned char packet void setup put your setup code here to run once Serialbegin for unsigned i i sizeof packet i packet i rand void loop u t time micros u t res lwipstandardchksum packet sizeof packet u t time micros u t res lwipstandardchksum packet sizeof packet u t time micros u t res lwipstandardchksum packet sizeof packet u t time micros Serialprint time time SerialprintSerialprinttime time SerialprintSerialprintlntime time Debug Messages Is possible to add the function for connecting a masterHC for example with a slave ESP in the standard serial bluetooth mode