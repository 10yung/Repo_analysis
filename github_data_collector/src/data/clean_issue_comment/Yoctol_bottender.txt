 Describe the bug unhandled promise rejection if session driver set file on a readonly system such as free plan on ZEIT Now Unlike local development there are always restrictions on cloud deployment especially for free accounts To Reproduce bottenderconfigjs set file as sessiondriver now See zeitco the Runtime tab Expected behaviour A clear and concise description of what you expected to happen expect errorMessage to like You havent permission to create files Screenshots Additional context free plan on ZEIT Now now version Hi I just looking for a development guide for TypeScript Or maybe just an interface LineClient or LineAction got export is enough for me The reason is bottender now got have interfaces of Action Client Event and Props etc Its wonderful With these interfaces I can say const SayHi ActionClient Event which with argument interfaces contextsendText and propsnext and etc But the problem is ActionClient Event interface has no contextsendFlex and seems LineClient has no export by bottender Therefore I can not tell VSCode ActionLineClient LineEvent Currently my workaround is ts export const QueryWar rStreams async context LineContext props PropsClient LineEvent ownPropsAsString string consoleinfopropsownPropsAsString return propsnext The workaround is working fine but it will get the next problem on import text from bottender ts export default async function Appcontext LineContext Promiseunknown return router text livei QueryWar rStreams as any sh ts Types of parameters context and context are incompatible ts Type ContextLineClient LineEvent is missing the following properties from type LineContext customAccessToken isReplied shouldBatch replyMessages and more What do you think update NLU guides due to the latest bottender NLU related oackages This is an example that deploys bottender bot on AWS Lambda and API Gateway Is your feature request related to a problem Please describe A clear and concise description of what the problem is Ex Im always frustrated when Im trying to write a solution for clients where it is actually a feature if bots can communicate directly with each other At the moment this is not possible since messages with the botmessage subtype andor a botid are filtered out entirely Describe the solution youd like A clear and concise description of what you want to happen I would like to have a solution where botmessage is its own event type Messages that are sent by this particular bot itself should be filtered out entirely of course But for the others a user should have at the option to handle them in a way that suits their purpose Describe alternatives youve considered A clear and concise description of any alternative solutions or features youve considered I tried to modify the rawEvent on the request object and also to override the isBotRequest method on the connector Both lead to very messy solutions Additional context Add any other context or screenshots about the feature request here I mentioned the whole error message in the title just for SEO performance This feature request is for showing a concise error message when confronting problem that results from duplicate ngrok running in the background Is your feature request related to a problem Please describe When running npm run dev I got an error message below An unexpected error occurred in provider dev undefined undefined undefined It turns out to be that I have another ngrok running in the background Describe the solution youd like It would be nice if the error message can point out this error for someone who will confront the same issue Its still a WIP We are moving those code from bottenderfacebook to here add docs for telegram games This PR is the workspace for the emulator experiment Its still a WIP that aim to replace nodemon with childprocess and watchpack and try to fix support ts fix exit bug