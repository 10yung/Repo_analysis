I like anyValue and Id like to add anyGreater anyLess anyGreaterOrEqual etc plus all of the row and column variants I often find myself doing anyx or something like that and these calculations are inefficient in base R because the whole of x gets calculated I can do this as a PR but I want to make sure you like the idea before going and doing it If you like it advice on how to name these functions would be appreciated Hi Henrik Great resource for matrix statsis there any plans to implement these functions for sparse matrices I understand that these functions are implemented for DelayedArrays so that is an alternativebut may R packages do not support these arrays but do seem to support sparse matrices Best Tony I was recently stumbling over the weighted functions with logical input weightedMean Error weightedMedian Error weightedVar Works Would it be possible to catch this case in an efficient way This is not meant as a full PR but is meant to support the discussion in This simple change fixes the result and the numerical stability issue but does not check the center argument for sensible length Is rowVarsmatcenter supposed to be equal to rowVarsmat center Or only if centerrowMeansmat The former is not the case r mat matrix matrixStatsrowVarsmat center matrixStatsrowVarsmat In any case the current algorithm with center is numerically instable LTLA made me aware of that in a related case r mat matrixrnorm E matrixStatscolVarsmat centercolMeansmat matrixStatscolVarsmat Furthermore center accepts vectors of any length for which maxlengthcenter nrowmat is a multiple of minlengthcenter nrowmat leading to strange results r mat matrix matrixStatsrowVarsmat center colVars is equally affected Ill open a PR to highlight the issue in the code but would only have time on the weekend to provide a full PR This seems like an easy win I just add if islogicalx x asintegerx within the required functions Love the package and have usually found it performant Noticed one slightly lengthy computation of rowSums and on benchmarking found it to be generally slower than baserowSums for even moderatelysized matrices Integerdouble storage mode not at issue though wider matrices tend to suffer more than tall ones Not critical at all for me just thought to share r librarybench librarymatrixStats benches benchpressnrows c e e e ncols c e e e typeo cinteger double M matrixreplensampleint e nrows ncols nrow nrows ncol ncols if typeo double storagemodeM double benchmarkrowSumsM rowSums M libraryknitr benches benches dplyrselectexpression nrows ncols typeo median memalloc dplyrmutatemedian ascharactermedian memalloc ascharactermemalloc kablealign lrrrrr expression nrows ncols typeo median memalloc rowSumsM integer ms KB rowSums M integer ms KB rowSumsM integer ms KB rowSums M integer ms KB rowSumsM integer ms KB rowSums M integer ms KB rowSumsM integer ms KB rowSums M integer ms KB rowSumsM integer ms KB rowSums M integer ms KB rowSumsM integer ms KB rowSums M integer ms KB rowSumsM integer ms KB rowSums M integer ms KB rowSumsM integer ms KB rowSums M integer ms KB rowSumsM integer ms KB rowSums M integer ms KB rowSumsM double ms KB rowSums M double ms KB rowSumsM double ms KB rowSums M double ms KB rowSumsM double ms KB rowSums M double ms KB rowSumsM double ms KB rowSums M double ms KB rowSumsM double ms KB rowSums M double ms KB rowSumsM double ms KB rowSums M double ms KB rowSumsM double ms KB rowSums M double ms KB rowSumsM double ms KB rowSums M double ms KB rowSumsM double ms KB rowSums M double ms KB This issue is a question feature request Do you think it would make sense to add functions like duplicated and anyDuplicated optimized to work on every rowcolumn to this package It would be nice to have this feature when rowDiffs colDiffs is used within intermediate calculations that require positional matching r x matrix ncol r librarymatrixStats colDiffsx With napad set to TRUE r libraryxts xtsdiffxtsx napad TRUE NA NA NA Also on a different note I think dim argument is not coerced to integer as intended when the dim is given manually I believe the expression dim asintegerdim was placed there to enforce it but its not passed into C call r bodycolDiffs dim asintegerdim CallCrowDiffs x dim rows cols asintegerlag asintegerdifferences FALSE Used an algorithm with partial sorting for speed See 