To be able to distinguish between explicit setting of callgraph hidecallgraph etc compared to the configuration setting it is necessary to record what has been used and handle this otherwise duringe a combine of a definition and declaration entryh memberdefh create possibility to record config explicit setting entrycpp set initial value memberdefcpp commentscanl enable disable functions have to or values to record the history memberdefcpp when checking for use check individual values memberdefcpp create functions to output raw value of call hide doxygencpp properly initialize the members docparsercpp warn in case use call hide for the same member Extended example exampletargz I have a fortran project that has samenamed twin subroutines defined in different files and different directories Clicking on one of these subroutines in the source code browser will bring up the same subroutine regardless of which one is actually being used This has been a known issue for quite awhile but is yet to be fixed There was a patch submitted with but it never even got feedback note it was submitted before the move to GitHub Im not sure how relevant that patch is to the current source code but the changes are very minimal Fixing this would not only resolve but also and It may also fix but Im not quite sure about that one doxygen version Handle define so that the argument can have a link When having a simple example like define siz typedef struct int var int var int var siz thestruct We see in the code a link to siz in the size of var but not in the define the missing links for var and var are addressed in The problematic part in the code is here the recognition of the define and its arguments in codel The rule involved here is currently at line SkipCPP n yyextracodecodifyyytext where its state SkipCPP is started by currently at line BodyBases t startFontClassyyscannerpreprocessor yyextralastSkipCppContext YYSTART yyextracodecodifyyytext BEGIN SkipCPP Probable solution would be that in case of a define the first argument is handled similar to the way siz is handled in the size of var Example exampletargz When having a simple example like define siz typedef struct int var int var int var siz thestruct We see in the code a link to var and thestruct but not to var and var There is also a link to siz in the size of var but not in the define the later will be handled in another issue In the file codel currently starting at line we see BodySCOPENAMEBN int var or var var or debugf macro or int var addTypeyyscanner changed this to generateFunctionLink see bug generateClassOrGlobalLinkyyscanneryyextracodeyytextFALSETRUE generateFunctionLinkyyscanneryyextracodeyytext yyextranameyytext BodySCOPENAMEB pfunc addTypeyyscanner generateClassOrGlobalLinkyyscanneryyextracodeyytext yyextranameyytext where var uses the first rule and var and var use the second rule I see the following possibilities to fix this extend tthe first rule from BodySCOPENAMEBN to BodySCOPENAMEBN call different link functionfor the second rule ie change generateClassOrGlobalLinkyyscanneryyextracodeyytext to generateFunctionLinkyyscanneryyextracodeyytext As Im not sure about the side effects of these possible patches I didnt create a patch Example case with html output exampletargz Assume the following minimal test case and doxygen or current master does not matter file brief Declares stuff This header file declares some stuff ifndef FOOH define FOOH brief foo namespace This is the foo namespace namespace foo brief Class in foo namespace This is a class declared in the foo namespace class Bar brief Function in foo namespace This is a free function declared in the foo namespace void bar brief Class in global namespace This is a class declared in the global namespace class Baz brief Function in global namespace This is a free function declared in the global namespace void baz endif While for both classes Bar and Baz separate HTML pages are generated which at the top list the header file has to be included to use them the situation for the free functions and other nonclass items is significantly different Function baz declared in the global namespace is documented in the page generated for Fooh and is also indexed and accessible via the File members index Good Function bar declared in the foo namespace however is only documented on the page generated for the foo namespace and no longer on the Fooh page It also disappears from the File members index With this it is impossible to figure out from the documentation which header to include to get the bar prototype definition Therefore I suggest that all nonclass items ie everything for which no dedicated page is generated declared inside namespaces are at least referenced from the file documentation page similar to classesstructs and properly indexed via File members In this case the detailed description could stay on the namespace page Alternatively the detailed description could be placed on the file page and referenced from the namespace page and likewise from custom group pages This arrangement may actually make things less cluttered for large libraries where lots of stuff is within a single namespace but scattered across many files see also The problem Consider the following code Lock coordinates Protects ref pointx ref pointy pthreadmutext LOCKcoordinates X coordinate Protected by ref LOCKcoordinates int pointx Y coordinate Protected by ref LOCKcoordinates int pointy Here the author wants to document which lock cover which variable a user defined relation in the source However Maintaining both sides of the relation pointx refers to LOCKcoordinates LOCKcoordinates refers to pointx is tedious and error prone when both sides are in different libraries components modifying an existing doc just because it is referenced might not be possible The result collection of links is embedded in the general text and is not available in an anchored sub section that can be pointed to A reader has to scan the full text to find references about relations For large code bases at scale maintaining documentation this way is not practical Use case Assume the following feature to be described below ALIAS protectsrelxrefitem protects Protects protectedby Protected by ALIAS protectedbyrelxrefitem protectedby Protected by protects Protects With the following source Lock coordinates protects pointx pthreadmutext LOCKcoordinates X coordinate int pointx Y coordinate protectedby LOCKcoordinates int pointy The generated documentation could be as follows Doc for LOCKcoordinates contains the item doc as usual contains a section named Protects with a link to x a link to y Doc for x contains the item doc as usual contains a section named Protected by with a link to LOCKcoordinates Doc for y contains the item doc as usual contains a section named Protected by with a link to LOCKcoordinates That is be specifying only once that two items are related the tool generates documentation on both sides to document the relationship FEATURE REQUEST Implement a new command of the form relxrefitem localkey local title remotekey remote title remotereference The name relxrefitem means relation cross reference item localkey and remotekey are identifiers local title and remote title are text to be displayed in the generated documentation as a section heading remotereference is the name of a documented entity similar to ref When documenting the following item Item A relxrefitem keya Role of A keyb Role of B itemb int itema Item B int itemb The generated doc should look like itema doc for itema SECTION Role of A using keya link to itemb itemb doc for itemb SECTION Role of B using keyb link to itema Note that adding a single relxrefitem command to either side of itema itemb causes both items documentation to point to the other with the proper section name Also note all relxrefitem using the same key are grouped under the section for that key As there can be other relxrefitem present with other keys an item can have multiple sections created by relxrefitem Example of intended use A typical usage is to document an arbitrary relation between entities for example to document which components writes to which log files one can define aliases like ALIAS logtorelxrefitem component Writes to logfile Collects logs from ALIAS logfromrelxrefitem logfile Collects logs from component Writes to User application class UserApp Admin application logto DebugLog class AdminApp Debug log logfrom UserApp class DebugLog The documentation for DebugLog will point to UserApp will point to AdminApp under a section named Collects logs from url derived from key logfile The documentation for UserApp will point to DebugLog under a section named Writes to url devived from key component The documentation for AdminApp will point to DebugLog under a section named Writes to url devived from key component Thanks for considering this feature request Besides verbatim and code blocks also pre and code blocks should be excluded This implementation is more consistent with verbatim and code than the implementation in Extended example exampletargz If I in doxywizard try to open a doxyfile with INCLUDE doxyfileinc and doxyfileinc is not found doxywizard will just close no error or warning Not even when I run it from commandline doxy Version OS windows Hello After upgrading Doxygen from to the building process of Westons documentation stopped working because of the function bellow c file westonlogh westonlogscope callback param sub The subscription param userdata The c userdata argument given to westoncompositoraddlogscope memberof westonlogscope typedef void westonlogscopecbstruct westonlogsubscription sub void userdata Looking at the xml files generated by Doxygen a missing parenthesis is noticeable in structwestonlogscopexml Adding the parenthesis makes everything work as usual in definitiontypedef void westonlogscopecbstruct westonlogsubscription sub void userdatadefinition in definitiontypedef void westonlogscopecb struct westonlogsubscription sub void userdatadefinition Here it is the zip to reproduce the error containing a brandnew config file only edited PROJECTNAME OUTPUT INPUT and GENERATEXML and the source files reproduceerrorzip If theres anything else that I can share to help let me know Thank you 