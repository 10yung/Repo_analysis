Looks like its missing from the package Link I have a list of posts and I have the post The list item is visually very similar to the post header and Im trying to morph it But I have two problems here I need to create morph instances dynamically somethink like id based on demand and I need to share this instance to different filescomponents Something like this listing page jsx const PostTeaser post const useMorphIdpostpostid return div morphdiv const PostList posts divpostsmappost PostTeaser post keypostid div post page jsx const PostHeader post const useMorphIdpostpostid return div morphdiv const PostPage post div PostHeader post divdiv div After many attempts and tested workarounds I was able to do it using a Context that saves the instances by id in its state and a hook that ask for a instance by id if it doesnt exist it creates if it exists it uses the existing one Code the magic is in morpherjs and morphs are in pagespostsjs and pagespostjs But questions Is there an easier way to satisfy this use case Is there a more trivial way to share instances without prop drilling or context I wanted to animate an image to resize but this only seems to work when I use the player example and have it animate between routes Using it like this makes the images disappear and appear at the end of the animation the div container animates correctly though it only seems to be an issue with images Also the image type makes no impact whatsoever png svg jpg etc none animate correctly Appjs javascript import React Component useState useEffect from react import createGlobalStyle from styledcomponents import useMorph useMorphKeys presets from reactmorph import BrowserRouter as Router Route from reactrouterdom import mapboxgldistmapboxglcss import Container from Appstyle import Header from componentsHeader import Map from componentsMap import LoadingScreen from viewsLoadingScreen const GlobalStyle createGlobalStyle html height width body height margin width root height width function App const loaded setLoaded useStatefalse const morph useMorph const morphs useMorphKeys logo container return Container onClick setLoadedloaded GlobalStyle loaded LoadingScreen morphsmorphs Header morphsmorphs Container export default App Loadingscreen javascript import React from react import logo from assetslogopng import Container Logo from loadingScreenstyle const LoadingScreen morphs Container morphscontainer img morphslogo srclogo Container export default LoadingScreen Header javascript import React from react import logo from assetslogopng import HeaderContainer Logo Menu Icon MobileMenu from headerstyle import doIcon from assetsiconsdosvg import drinkIcon from assetsiconsdrinksvg import eatIcon from assetsiconseatsvg import seeIcon from assetsiconsseesvg const Header morphs HeaderContainer morphscontainer img morphslogo srclogo Menu Icon icondrinkIcon Icon iconeatIcon Icon iconseeIcon Icon icondoIcon Menu MobileMenu Icon icondrinkIcon MobileMenu HeaderContainer export default Header Toggling the same element shouldnt trigger the cloneanimation I do not know if it is already possible but it would be interesting for create modals for example Idea of how to allow this behavior Only pick the styles dimension position when go to the second state and the portal is already mounted in the DOM 