The SQLite db I am attempting to get date from has columns that are in a DateTime format like this It seems my queries all fail to pull back the data with the error in the subject line Is there an override or way to convert it to string I have tried using all the As param options all give same error Example of query that fails Select From tablename I am iterating through tables to find specific named columns and then getting that data so I cant easily just grab all columns besides the ones with the datetime Hey I am beginning to work on supporting net core for linux use Noted you were looking for help on this Currently still testing and developing this though it partially works at the moment Will continue working on this over the next while to get it up to quality but if anyone wants to help along the way it is always welcome Connecting and invoking createinsert queries seem to work alright so far Errors with output due to the DBNullScrubber but will hopefully get this fixed and further testing done soon Thanks Hi I started using this module and its been working fine But when I started using it in Powershell Core v I get this error Unable to find type DBNullScrubber At C Users Admn Documents PowerShell Modules PSSQLite InvokeSqliteQueryps char DBNullScrubber DataRowToPSObjectrow CategoryInfo InvalidOperation DBNullScrubberTypeName RuntimeException FullyQualifiedErrorId TypeNotFound Just thought I should let you know it is a minor but I personally think we should follow the same style for commands not like this GetCommand Module PSSQLite CommandType Name Version Source Function InvokeSQLiteBulkCopy PSSQLite Function InvokeSqliteQuery PSSQLite Function NewSQLiteConnection PSSQLite Function OutDataTable PSSQLite So I changed InvokeSQLiteBulkCopy to InvokeSqliteBulkCopy In a number of different areas where I use PSSQLite I use script analyzer before things to go production This was a problem because in a number of areas it would fail tests Ive adjusted almost all of the modules scripts in the PSSQLite module so it will pass current script analyzer default tests There were no major changes that would be noticeable in daytoday use however internally in InvokeSqliteBulkCopy I had to rename NewSqliteBulkQuery to InvokeSqliteBulkQuery in order to avoid having to add SupportsShouldProcess to CmdletBinding My previous submission failed AppVeyor tests because of how PS v requires SupportsShouldProcesstrue but v and later does not I fixed that in this version as well When using this module I got an error about the property ParseViaFramework When reviewing documentation I found that there is also a constructor parameter for the same property in SQLiteConnection this does not throw an error on my machine I was still able to open a database on a UNC path starting with servername so I think this does not introduce a regression Additionally the test failed on my end because I dont use the American date format so I made that test slightly more robust as well When using InvokeSQLiteBulkCopy with an open SQLiteConnection the sqlitejournal file grows larger but never commits the changes to the database BulkCopy should throw if source and target tables column types are incompatible It currently will allow you to insert records which will then cause errors upon selection Hi Warren Today I tried to use the module on PowerShell Core running on a RaspberryPi and it failed with the following error NewObject Exception calling ctor with arguments Unable to load DLL SQLiteInteropdll The specified module or one of its dependencies could not be found It would be great to get this working with net core and PowerShell core Would this be possible Stefan This is kind of an odd one and I can fork and fix if you want but in the PSSQLitepsm file youre using the alias for SelectObject as part of the function export process at the end Under normal circumstances this is totally ok however Ive been banging my head over the last few days trying to figure out why I cant get the PSSQLite module to work as part of a constrained endpoint JEA and after doing a lot of debugging the use of the Select alias is not playing nice with a locked down endpoint shell SessionTypeEmpty and LanguageModeRestrictedLanguage I tried defining Select as a valid alias with VisibleAliases but the only way I could get it to work is if I edited the module and spelled out the alias as SelectObject So anyway we can get the Select alias removed and the full cmdlet name put int the PSSQLite module file I can do it if you want but it seems like a really small change 