 Issues with loading Alice fixtures with nelmioalice Hey were slowly upgrading to alice which in our case means the latest alice and were experiencing some issues with this new version that seem to relate to creating objects using calls while the object used in calls has been initialised using the same object Either way the calls function seem to create entirely new objects using the referenced template instead of being the object created from that template An example Given the following class php class Entity private name private ytitne public function constructstring name Ytitne ytitne thisname name thisytitne ytitne thisytitnealterEntitythis public function getName string return thisname Which gets an instance of Ytitne and calls its alterEntity function And the Ytitne class php class Ytitne private name private entity public function constructstring name thisname name public function alterEntityEntity entity void if null thisentity thisentity entity vardumpthisentitygetName entitygetName throw new InvalidArgumentExceptionCan not alter this entity as one exists thisentity entity Note the alterEntity function will throw an exception when the Entity has already been set and the given Entity is not the same as the one already configured Creating a fixture file for this we get the following brokenyaml yaml VanNes Entity entity construct word ytitne VanNes Ytitne ytitne construct word calls alterEntity entity This would imply that two objects are created and the ytitne calls the alterEntity function with the created object entity Instead if we use the following code to load this fixture file we get a completely different result php use Nelmio Alice Loader NativeLoader loader new NativeLoader loaderloadFileDIR Resourcesbrokenyaml Namely we get the following homemvannesprojectsaliceloadingissuesrcYtitnephp string quisquam homemvannesprojectsaliceloadingissuesrcYtitnephp string culpa PHP Fatal error Uncaught InvalidArgumentException Can not alter this entity as one exists in homemvannesprojectsaliceloadingissuesrcYtitnephp Stack trace homemvannesprojectsaliceloadingissuesrcEntityphp VanNes YtitnealterEntityObjectVanNes Entity homemvannesprojectsaliceloadingissuevendornelmioalicesrcGeneratorInstantiatorChainableNoCallerMethodCallInstantiatorphp VanNes Entityconstructculpa ObjectVanNes Ytitne homemvannesprojectsaliceloadingissuevendornelmioalicesrcGeneratorInstantiatorChainableAbstractChainableInstantiatorphp Nelmio Alice Generator Instantiator Chainable NoCallerMethodCallInstantiatorcreateInstanceObjectNelmio Alice Definition Fixture TemplatingFixture homemvannesprojectsaliceloadingissuevendornelmioalicesrcGeneratorInstantiatorInstantiatorRegistryphp Nelmio Alice Generator Instantiator Chainable AbstractChainableInstantiatorinstantiateObjectNelmio Alice Definition Fixture Templati in homemvannesprojectsaliceloadingissuevendornelmioalicesrcGeneratorObjectGeneratorSimpleObjectGeneratorphp on line As one can see the InvalidArgumentException is thrown And the object passed to alterEntity even has a different name from the one that was initially set through the Entity constructor or vice versa If we remove the call to this exception replace it with a return and instead look at a var dump of the created objects we get the following array ytitne class VanNes Ytitne private name string consequatur private entity class VanNes Entity private name string quisquam private ytitne entity class VanNes Entity private name string culpa private ytitne class VanNes Ytitne private name string consequatur private entity class VanNes Entity Note that the object hashes of the entity and ytitne s entity differ This feels like it isnt intended behaviour as additional objects are created instead of To test it for yourself git clone gitgithubcomMvannesaliceloadingissuegit cd aliceloadingissue composer install php appphp This was tested using the following php version PHP ubuntu debsuryorg cli built Sep NTS Copyright c The PHP Group Zend Engine v Copyright c Zend Technologies with Zend OPcache v ubuntu debsuryorg Copyright c by Zend Technologies with Xdebug v Copyright c by Derick Rethans I tried to use objects from DB to get random element from existing ones through randomElementobjects So I get the objects objects getRepositoryRepoclassfindAll and pass it as parameters in loadFile loaderloadFilefixturesyml objects objects and we have an error The class ContainerXzhxda appDevDebugProjectContainer is not cloneable Is it possible to set true for flag thisskipUncloneable in DeepCopy deepcopysrcDeepCopyDeepCopyphp I created the following fixture created strvaldateTimeBetween days now and got an error The value dateTimeBetweenARGTOKENab e fc de f a df b c contains an unclosed function I think the problem is in vendornelmioalicesrcFixtureBuilderExpressionLanguageParserTokenParserChainableFunctionTokenParserphp when we parce strval function I catch arguments dateTimeBetweenARGTOKENab e fc de f a df b c and ARGTOKEN bc b a ada d a bb ed ebed I think the reason is parseArguments method doesnt expect that divider can be used for the arguments of included function Hi I use your bundle and today im be confronted to a complicated situation with the multiplereferences I was trying to dynamically create an user and associate dynamicly an object using the current method for reference I follow your doc but you never mention the impossibility tu put the current at other place than the end for reference Exemple Nelmio Entity User Nelmio Entity Group group owner usercurrenttest If you try that that not working I have to put the current at the end and only at the end Then i ask you if you can add documentation into page please Symfony and just released and we are heavily using this bundle for testing composer require dev hautelookalicebundle Using version for hautelookalicebundle composerjson has been updated Loading composer repositories with package information Updating dependencies including requiredev Restricting packages listed in symfonysymfony to Your requirements could not be resolved to an installable set of packages Problem hautelookalicebundle v requires symfonyfinder no matching package found hautelookalicebundle requires symfonyfinder no matching package found Installation request for hautelookalicebundle satisfiable by hautelookalicebundle v Potential causes A typo in the package name The package is not available in a stableenough version according to your minimumstability setting see for more details Its a private package and you forgot to add a custom repository to find it Read for further common problems Using a reference in a PHP expression results in the following error In EvaluatedValueResolverphp evald code line Symfony Component Debug Exception ContextErrorException Notice Undefined variable instances Hi in this example we have event id name event event id name event When I try this only one record is register inside the database I use SQLite somethingevent id event current somethingevent test id event current But its working when this somethingevent id event current somethingevent test id event event Something is wrong with my usage how to work with self refference any examples I think it would be more beneficial for the user to propose a new API to write down fixtures eg php php use Is Bundle PlanBundle Entity Event use Nelmio Alice Alice return Eventclass foo title Alicefakersentence show Alicereferenceshow startDateTime AlicefakerdateTimeBetween month month isDraft false version Aliceoptional Alicereferenceversion calls setRevenue AlicefakermoneyBetween foo new Foo There is three immediate advantages there Almost no more YAML DSL to learn things could easily be discoverable via that Alice class In some cases you can ditch the Alice API altogether and just provide your object instantiated as a regular object cf foo in the example above It could be introduced as a new feature in x providing a soft migration path for the users for x which can wait plenty of time for now at least 