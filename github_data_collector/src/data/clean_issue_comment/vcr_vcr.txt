 is a failed build where Faraday is in use details Faraday hook inserts the VCR middleware just before the adapter FailureError expectconnbuilderhandlerslast map klassto eq VCRMiddlewareFaraday FaradayAdapterNetHttp expected VCRMiddlewareFaraday FaradayAdapterNetHttp got FaradayResponseLogger VCRMiddlewareFaraday compared using Diff VCRMiddlewareFaraday FaradayAdapterNetHttp FaradayResponseLogger VCRMiddlewareFaraday vendorbundleruby gemsrspecsupport librspecsupportrb in block in moduleSupport vendorbundleruby gemsrspecsupport librspecsupportrb in notifyfailure vendorbundleruby gemsrspecexpectations librspecexpectationsfailwithrb in failwith vendorbundleruby gemsrspecexpectations librspecexpectationshandlerrb in handlefailure vendorbundleruby gemsrspecexpectations librspecexpectationshandlerrb in block in handlematcher vendorbundleruby gemsrspecexpectations librspecexpectationshandlerrb in withmatcher vendorbundleruby gemsrspecexpectations librspecexpectationshandlerrb in handlematcher vendorbundleruby gemsrspecexpectations librspecexpectationsexpectationtargetrb in to speclibvcrlibraryhooksfaradayspecrb in block levels in top required vendorbundleruby gemsrspeccore librspeccoreexamplerb in instanceexec vendorbundleruby gemsrspeccore librspeccoreexamplerb in block in run vendorbundleruby gemsrspeccore librspeccoreexamplerb in block in witharoundandsingletoncontexthooks vendorbundleruby gemsrspeccore librspeccoreexamplerb in block in witharoundexamplehooks vendorbundleruby gemsrspeccore librspeccorehooksrb in block in run vendorbundleruby gemsrspeccore librspeccorehooksrb in runaroundexamplehooksfor vendorbundleruby gemsrspeccore librspeccorehooksrb in run vendorbundleruby gemsrspeccore librspeccoreexamplerb in witharoundexamplehooks vendorbundleruby gemsrspeccore librspeccoreexamplerb in witharoundandsingletoncontexthooks vendorbundleruby gemsrspeccore librspeccoreexamplerb in run vendorbundleruby gemsrspeccore librspeccoreexamplegrouprb in block in runexamples vendorbundleruby gemsrspeccore librspeccoreexamplegrouprb in map vendorbundleruby gemsrspeccore librspeccoreexamplegrouprb in runexamples vendorbundleruby gemsrspeccore librspeccoreexamplegrouprb in run vendorbundleruby gemsrspeccore librspeccorerunnerrb in block levels in runspecs vendorbundleruby gemsrspeccore librspeccorerunnerrb in map vendorbundleruby gemsrspeccore librspeccorerunnerrb in block levels in runspecs vendorbundleruby gemsrspeccore librspeccoreconfigurationrb in withsuitehooks vendorbundleruby gemsrspeccore librspeccorerunnerrb in block in runspecs vendorbundleruby gemsrspeccore librspeccorereporterrb in report vendorbundleruby gemsrspeccore librspeccorerunnerrb in runspecs vendorbundleruby gemsrspeccore librspeccorerunnerrb in run vendorbundleruby gemsrspeccore librspeccorerunnerrb in run vendorbundleruby gemsrspeccore librspeccorerunnerrb in invoke vendorbundleruby gemsrspeccore exerspec in top required vendorbundleruby binrspec in load vendorbundleruby binrspec in main vendorbundleruby binrubyexecutablehooks in eval vendorbundleruby binrubyexecutablehooks in main details Ruby Gem master HTTP Mock Rails Rspec This PR adds the Ruby element to the matrix introduced a new feature This feature is not yet promoted in the userfacing documentation Read the documentation Find where youd like to learn about this specific small feature Add a description and an example of the new feature I have a tool that executes a HEAD request to a remote service and compares the ContentLength to a previously cached copy of the ContentLength If the ContentLength increased then a GET request is issued for the additional bytes I wrote some specs to modify the local cached copy of the ContentLength to simulate certain scenarios remote file size increased remote file size same remote file size decreased As the remote file can be large I manually edited the cassettes to reduce the body sizes This means the ContentLength in the cassette isnt accurate In this case I set updatecontentlengthheader true for the cassette on the spec as I want the GET request ContentLength header to be updated to match the manuallyedited cassettes The spec fails as the initial HEAD request would have its ContentLength set to because the body is empty This breaks my tests as the scenario expects a nonzero ContentLength from the HTTP response For now I can manually update the ContentLength in the cassettes for the GET requests Ruby p Gem HTTP na Mock na Rails na Rspec Address the ability to drop unused requests in cassettes This seemed a better way to address the needs of all vs a whole new recording method Fixes Adds a new option failonrerecord which raises a runtime error when a cassette is rerecorded Fixes It would be very nice to have the option of replacing values of a cassete for some cases When setting up a test some requests might include nested resources with sequential data like an id So when choosing witch cassete to use for a given request having a way of replacing the values with the previous created records data would be very useful I see myself using this kind of like this ruby letitem create item letitem create item these must have different ids letorder create order items item item VCRusecassettesynopsis do cassete casseteattributes body order orderid or cassetedigbody order items id item id cassetedigbody order items id item id response NetHTTPgetresponseURImydomainordersorderid assertmatch Example domains responsebody end First of all thanks to all the developers and contributers of this gem We use it very intensively We do have an issue with some weird behaviour Our configuration is this unrelated stuff is not included RSpecconfigure do config VCRconfigure do c chookinto webmock or fakeweb cconfigurerspecmetadata ccassettelibrarydir specfixturesvcrcassettes cdefaultcassetteoptions erb true end end Most important is the last line With the defaultcasetteoptions set we are unable to overwrite the erboption in a single casette We have tried this many ways including the one mentioned in the documentation it deletes someting do VCRusecassettesome casette thouroughly checked that we are modifying the right one erb uid do snip end end In the casette we call the variable with uid This crashes The ERB in the snip cassette file references undefined variable uid Pass it to the cassette using erb uidsome value Now for the interesting part of this issue When not setting a default value in the configuration commenting out cdefaultcassetteoptions erb true the exact same config of ERB works In the documentation it is mentioned that the default values should be overridable but it seems not the case for us Do you have any idea about what is going on here Many thanks in advance Ruby Gem HTTP Mock Webmock Rails Rspec The singlecassette option makes every test case below the contextdescribe with this option use the description of this block as cassette name It has the same behaviour as using cassettename option in the contextdescribe but automatically generating the name Fixes AKA Relish is dead what now Apparently they have a new site called 