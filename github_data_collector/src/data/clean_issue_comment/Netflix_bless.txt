I currently am experiencing issues when using ForwardAgent and sshadd on PGPTools After trying to sshadd a key I get an Invalid Key length error It is able to add the private key just fine but something breaks with the blessed public certificate Ive started messing around with spinning up BLESS internally but after a few iterations I got stuck on the following error popping up when I ran the lambda errorMessage init got an unexpected keyword argument strict errorType TypeError stackTrace File vartaskblesslambdauserpy line in lambdahandleruser n schema BlessUserSchemastrictTrue n Anyway after a bunch of random Googlefu and stumbling through code I ran across this comment by Jeremy Stott Screen Shot at PM So like any trained security professional I simply blindly followed suggestions from random internet comments to try and get what I hope to be a critical security control for my org to work Low and behold it works smarshmallowmarshmallow got things back to a happy state Heres my current setuppy import os from setuptools import setup findpackages ROOT ospathrealpathospathjoinospathdirnamefile about with openospathjoinROOT bless aboutpy as f execfread about setup nameabout title versionabout version authorabout author authoremailabout email urlabout uri descriptionabout summary licenseabout license packagesfindpackagesexclude test installrequires boto cryptography ipaddress marshmallow kmsauth extrasrequire tests coverage flake pyflakes pytest pytestmock Ive just started to familiarize myself with Bless so I feel like Im pretty strongly lacking in context for the full implications of this change here Is this workaround of pinning to an earlier version of marshmellow the correct way forward This PR enables support for authentication with OpenIDConnect by verifying a JWT A third party library is introduced to verify a JSON Web Token JWT and parse a JSON Web Key JWK This library was chosen because it is well maintained a compatible license features on jwtio is light weight and can support JWKs Created new configuration section for JWT Auth Configure a JWK to verify a JWT signature Configure requried signature algorithms Configure required audience and issuer claims Configure name of username claim Added code block in lambdahandleruser to validate JWT if configured Require remoteusernames bastionuser Require valid JWT signature expiry and signature algorithm Require usernameclaim in JWT Require usernameclaim bastionuser Added unit tests for config and JWT validation keep the consistency between setuppy and requirementstxt Hi as shown in the following full dependency graph of bless bless requires boto the latest version while the installed version of kmsauth requires boto According to Pips first found wins installation strategy boto is the actually installed version Although the first found package version boto just satisfies the later dependency constraint boto it will lead to a build failure once developers release a newer version of bleach Dependency tree blessmasterversion range boto version range cryptographyversion range ipaddressversion range kmsauthversion range boto version range marshmallowversion range Suggestion Fix your direct dependencies to be boto and kmsauth to remove this conflict I have checked this revision will not affect your downstream projects now Ask your upstream project kmsauth to loose the version range of boto to be Thanks for your attention Best Neolith Hello Im interested in authenticating users to the BLESS lambda using OpenID Connect identity tokens This would be an alternative to using KMS auth to prove the identity of the caller Users could use AWS AssumeRoleWithWebIdentity API to get temporary credentials to invoke the lambda and then pass their identity token in the payload to get a certificate signed for a username that matches a claim in the identity token Im keen to implement this feature Is there any interest and support for new features like this Reading through the validity constraints docs for SSH certificates it doesnt look like theres the ability to specify which hosts a SSH user certificate is able to be used with How are you solving authorization issues allowing a user access to some hosts but not all in a larger environment with BLESS or are you It looks like this would mean the holder of a valid SSH certificate would have access to any host configured to trust that CA certificate plus or minus networking without the ability to make access decisions by the type of host Is that accurate or am I grossly misunderstanding something Source OpenSSH sshkeygen options docs It would be nice if keyid format was configurable from config file BLESS should be easily downloadable and installbe from PyPI Due to the security repercussions of deploying this incorrectly Are they any docs that go into more detail on a proper installation 