When using mixins autoprefixer still throws this warning In reference to this comment in the tailwind grid support pull request I think autoprefixer should translate gap to gridgap Note that this should happen even if the grid prefixing setting is set to false since this is not an IE Grid compatibility issue It is a modern CSS Grid issue Input CSS css gap gap px Expected output css gap gridgap px gap px Current output css gap gap px gridgap is essentially just a prefixed version of gap now so Im not sure why Autoprefixer wouldnt support it NodeJs v NPM v Im testing postcss with autoprefixer and also gulpautoprefixer browserslist setting is default Source scss scss body appearance none userselect none mozdocument domainexamplecom body appearance none userselect none Output css css body webkitappearance none mozappearance none appearance none webkituserselect none mozuserselect none msuserselect none userselect none mozdocument domainexamplecom body mozappearance none appearance none mozuserselect none userselect none Same result on Hi In this scenario involve Vue Single File Component Nuxtjs PostCss autoprefixer presetenv Problem Tell browser fetch image for a particular resolution using backgroundimage property with imageset as value Example p backgroundimage imageset foopng x foo xpng x fooprintpng dpi There is a clever way to pass dynamically image src data url using css variable like this template div style root heroimage url heroImage style div classpunchy h Powh div div template script export default data return heroImage script style langpostcss punchy backgroundimage varheroimage display inlineblock width px height px style So far everything is fine But when i want to create some basic fallback something like this template div style root heroimage url heroImage heroimageSet imageseturl heroImage x url heroImage x style div classpunchy h Powh div div template script export default data return heroImage heroImage script style langpostcss punchy backgroundimage varheroimage backgroundimage varheroimageSet display inlineblock width px height px style Screenshot from Browser is able to see the proper value but it seems autoprefixer are not able to issue the proper vendor prefix This test was made on Firefox Chrome the last only support imageset Screenshot from Screenshot from autoprefixer Browserslist config json browserslist last versions not last edge versions not ie postcssconfigjs javascript moduleexports plugins autoprefixer supports false postcssimport postcsscustomproperties preserve false postcsscustommedia preserve false Input CSS css supports position sticky searchresults position sticky top Output CSS css supports position sticky searchresults position webkitsticky position sticky top Expected output CSS css supports position sticky searchresults position sticky top Given the configuration option and the fact that the supports block effectively causes nonsupporting browsers to skip over the content inside wouldnt it make sense that autoprefixer didnt prefix anything inside said supports block It seems that maskposition supported but maskpositionx arent I think it will be better to add all the properties that Chrome DevTools shows webkitmaskboximageoutset webkitmaskboximagerepeat webkitmaskboximageslice webkitmaskboximagesource webkitmaskboximagewidth webkitmaskclip webkitmaskcomposite webkitmaskimage webkitmaskorigin webkitmaskpositionx webkitmaskpositiony webkitmaskrepeatx webkitmaskrepeaty webkitmasksize Possibly the same as and In IE even though each item was given the right row column by default when the change class added the row and columns ignore the gap given to the container class style and assign b c to the gaps Codepen I have this grid code css grid display grid This is producing a warning in Autoprefixer This code works perfectly in IE though gridgap px media minwidth px grid gridtemplate a b auto fr fr media maxwidth px grid gridtemplate a auto b auto fr a gridarea a b gridarea b Both the grid template declarations are wrapped in media queries The grid gap is a default that applies to both This code works fine in IE with Autoprefixer so there should not be any warning given As mentioned in Im seeing similar behaviour with span x not prefixing correctly with gridgap When declaring gridarea span it is being prefixed to the following msgridrow msgridcolumn msgridcolumnspan gridarea span But msgridcolumnspan should actually be msgridcolumnspan to account for the grid gaps Test case Support of Grid for IE is hard to guarantee since it does not support auto placement Autoprefixer can ensure support when either autoplace mode is activated or gridtemplateareas are being used The former is not applicable for all situations eg the order should be different than in the DOM The latter only works when gridtemplateareas gridtemplaterows and gridtemplatecolumns are provided in the same rule The problem is that when writing CSS that follows neither approach IE compatibility might break silently Eg when not using areas but gridcolumnrow on child elements directly which would be totally supported by IE but only when not using auto placement for any child PostCSS cannot check this as it does not know anything about the DOM structure So the safe way would be to dissallow it I would suggest to add an option that throws an error when using any css rule combination that does not enable the areas or autoplacement algorithms and also when gridcolumnrow is encountered Plus a control comment to opt out and use manual placement with gridcolumnrow on ones own risk Combined with Treat Warnings as Errors this would enable a rather resilient backward compatibility with IE 