 GoogLeNetCAM model on ImageNet I was not able to find the file modelsdeploygooglenetCAMprototxt to use with the pretrained weights Is it possible to add this in Could you please share the python code that generate the bounding box according to the heatmap Originally posted by liu in Does the VggNet apply the same data preparing prepareimagem as GoogLetNet What if i want to visualize the intermediate feature map and its channel is difference from the last layer For example Visualize the layer in resnet in pytorch Thank you for sharing the codebut can it be used for detection task For example I have classes and for single image I have heatmap with shape HWNCLASSES I train my model with sigmoid binary crossentropy At prediction time when I use larger image as network input at each pixel I want my classes to be exclusive so I need to compare heatmap values with npargmax to get best class so my questions is values in heatmaps are really comparable I tried to dump min max values of heatmap for single image i npminheatmap i npmaxheatmap i i npminheatmap i npmaxheatmap i As I can see range of values are different and heatmaps are not normalized Is there a way to normalize all planes of heatmap to range and make them comparable I am the developer of CAM Recently I found this blog article to introduce CAM and gradCAM The overview on the CAM and gradCAM in the blog article is good but found there is some bias or misleading claim to CAM compared to gradCAM This wrong claim has been existing for a while that I would like to clarify as below First of all nowadays all the mainstream network architectures such as resnet densenet or other squeezenet use global average pooling at the end so the class activation map the heatmap could be generated directly using CAM without modifying any network architectures So the claim that the gradCam is superior over CAM because of using gradcam without modifying architecture is false Meanwhile if you are using resnet or densenet or squeeznet or any modern networks so you can basically generate heatmap using CAM directly see example code at without needing the extra step to compute the gradient as in gradCAM Through that you save the backward computation in which you save almost half of the computation This is crucial in some application such as video processing that CAM is able to use the forward pass only to generate the prediction and heatmap for each frame So in the associated code of that blog they are already using the resnet but still use the gradient to generate CAM It simply wastes the computation Matlab image layout is HxWxC 