 Fill in the relevant information below to help triage your pull request Q A Type improvement BC Break Fixed issues Summary I think that the Query value object was a great idea proposed by pulzarraider in Independently if is going to be merged I see value in the Query part so here is a full refactoring of the code base to use it everywhere instead of the current different arrays holding the same data Feature Request Fill in the relevant information below to help triage your issue Q A New Feature yes RFC yes BC Break only for master Summary Switch to the more recent PSR autoload standard Provide a summary of the feature you would like to see implemented Fill in the relevant information below to help triage your pull request Q A Type improvement BC Break no Fixed issues Summary This PR adds new events onMigrationsQueryExecuting and onMigrationsQueryExecuted Use case When you are using Mysql cluster and you alter big table this operation blocks the whole cluster until the alter is done blocking DDL operations With event onMigrationsQueryExecuting you can check if the migration contains query with alter for big table and stop it before it executes with exception to avoid DB problems Big alters are then processed manually with For more info Summary When building the PHAR from the script codebuildpharshcode the file doctrinemigrationsphp is missing Current behavior codebindoctrinemigrationpharcode PHP Warning requirepharhomeantoinebsrcmigrations bindoctrinemigrationspharbinlibdoctrinemigrationsphp failed to open stream phar error libdoctrinemigrationsphp is not a file in phar homeantoinebsrcmigrations bindoctrinemigrationsphar in pharhomeantoinebsrcmigrations bindoctrinemigrationspharbindoctrinemigrations on line PHP Fatal error require Failed opening required pharhomeantoinebsrcmigrations bindoctrinemigrationspharbinlibdoctrinemigrationsphp includepathusrsharephp in pharhomeantoinebsrcmigrations bindoctrinemigrationspharbindoctrinemigrations on line How to reproduce Run the script codebuildpharshcode One way to fix it before running the command codebuildpharshcode rename doctrinemigrationsphp to doctrinemigration and add codeusrbinenv phpcode line at the beginning of the file Q A Type feature BC Break no Fixed issues Summary Before running a down migration script the migration repository will be checked to see if it was ever executed It the migration did not run a Exception of type VersionDoesNotExist will be thrown Bug Report Fill in the relevant information below to help triage your issue Q A Version Summary Provide a summary desciribing the problem you are experiencing When run migrate command from CLI the migration failed during PreChecks with the following error message Failed opening script ProxyManagerGeneratedProxyPMDoctrineDBALSchemaSchemaGenerated e fce f efb a f bc e dphp No such file or directory I checked the path and the file actually does not exist Its very strange as its the first time to migration the database connection is success brings a new configuration format to allow for multiple namespaces To avoid a hard BC break we should add a forward compatibility layer to that allows people to change the configuration to the new format However since x only supports a single namespace the config reader should throw an exception when more than one migration namespace is configured This also entails deprecating the old configuration format for removal Q A Type improvement BC Break no Fixed issues NA Summary This change updates the generated migration file to follow the PSR standard To pull the exact phrasing When you have a return type declaration present there MUST be one space after the colon followed by the type declaration The colon and declaration MUST be on the same line as the argument list closing parenthesis with no spaces between the two characters This will help keep formatting consistent between the migrations and the application and removes the need to reformat the migration file after its created Feature Request When running a down migration that was never migrated up doctrine should notice that and not try to migrate down Q A New Feature yes RFC no BC Break no Summary Im currently using doctrinemigrations version with Zend If by accident someone calls a down script as written in the text description after migration was generated eg To revert the migration you can use migrationsexecute down This will most likely result in an error In the worst case the database could result in an inconsistent state As all migrations that were executed are stored in the migrations table it should just check if it was run before Otherwise it should result in an error like This migration was never not run Feature Request Fill in the relevant information below to help triage your issue Q A New Feature yes RFC no BC Break no Summary It could be a nice feature to have the description we provide in the Migration class generated filled also in the migrationversions table The idea is to have a new column description in the migrationversions table to see what happens without going to the source code Could be interesting for dba or release manager 