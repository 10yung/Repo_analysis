 Describe the bug BaGet must be restarted after installing a new PostgreSQL database due to the following error message NpgsqlNpgsqlException x The NpgsqlDbType Citext isnt present in your database Work around Restart BaGet to fix this issue To Reproduce Install PostgreSQL Delete BaGets database if it exists Start BaGet Verify the PostgreSQL database has been created Try to push a package This will fail Additional context This bug is caused by The problem is that the first time Npgsql connects to a given database it loads all of that databases type information and caches that for all further connections Unfortunately on your first connection the citext type isnt present in your database yet since the extension hasnt been added yet and so your connections arent aware of it The solution is to call NpgsqlConnectionReloadTypes on your NpgsqlConnection after the citext extension is added this will trigger a reloading of the types and should resolve your issue details summaryFull exceptionsummary fail MicrosoftEntityFrameworkCoreDatabaseCommand Failed executing DbCommand ms Parameters id ToNormalizedString Size CommandTypeText CommandTimeout SELECT CASE WHEN EXISTS SELECT FROM Packages AS p WHERE pId id AND pVersion ToNormalizedString THEN TRUEbool ELSE FALSEbool END NpgsqlNpgsqlException x The NpgsqlDbType Citext isnt present in your database You may need to install an extension or upgrade to a newer version at NpgsqlTypeMappingConnectorTypeMapperGetByNpgsqlDbTypeNpgsqlDbType npgsqlDbType in C projects npgsql src Npgsql TypeMapping ConnectorTypeMappercsline at NpgsqlNpgsqlParameterResolveHandlerConnectorTypeMapper typeMapper in C projects npgsql src Npgsql NpgsqlParametercsline at NpgsqlNpgsqlCommandValidateParameters in C projects npgsql src Npgsql NpgsqlCommandcsline at NpgsqlNpgsqlCommandExecuteDbDataReaderCommandBehavior behavior Boolean async CancellationToken cancellationToken in C projects npgsql src Npgsql NpgsqlCommandcsline at MicrosoftEntityFrameworkCoreStorageInternalRelationalCommandExecuteAsyncIRelationalConnection connection DbCommandMethod executeMethod IReadOnlyDictionary parameterValues CancellationToken cancellationToken fail MicrosoftEntityFrameworkCoreQuery An exception occurred while iterating over the results of a query for context type BaGetDatabasePostgreSqlPostgreSqlContext NpgsqlNpgsqlException x The NpgsqlDbType Citext isnt present in your database You may need to install an extension or upgrade to a newer version at NpgsqlTypeMappingConnectorTypeMapperGetByNpgsqlDbTypeNpgsqlDbType npgsqlDbType in C projects npgsql src Npgsql TypeMapping ConnectorTypeMappercsline at NpgsqlNpgsqlParameterResolveHandlerConnectorTypeMapper typeMapper in C projects npgsql src Npgsql NpgsqlParametercsline at NpgsqlNpgsqlCommandValidateParameters in C projects npgsql src Npgsql NpgsqlCommandcsline at NpgsqlNpgsqlCommandExecuteDbDataReaderCommandBehavior behavior Boolean async CancellationToken cancellationToken in C projects npgsql src Npgsql NpgsqlCommandcsline at MicrosoftEntityFrameworkCoreStorageInternalRelationalCommandExecuteAsyncIRelationalConnection connection DbCommandMethod executeMethod IReadOnlyDictionary parameterValues CancellationToken cancellationToken at MicrosoftEntityFrameworkCoreQueryInternalAsyncQueryingEnumerable AsyncEnumeratorBufferlessMoveNextDbContext Boolean buffer CancellationToken cancellationToken at NpgsqlEntityFrameworkCorePostgreSQLStorageInternalNpgsqlExecutionStrategyExecuteAsync TStateTResult TState state Func operation Func verifySucceeded CancellationToken cancellationToken in C projects npgsqlentityframeworkcorepostgresql src EFCorePG Storage Internal NpgsqlExecutionStrategycsline at MicrosoftEntityFrameworkCoreQueryInternalAsyncQueryingEnumerable AsyncEnumeratorMoveNextCancellationToken cancellationToken at MicrosoftEntityFrameworkCoreQueryAsyncQueryMethodProviderGetResult TResult IAsyncEnumerable valueBuffers Boolean throwOnNullResult CancellationToken cancellationToken at MicrosoftEntityFrameworkCoreQueryInternalAsyncLinqOperatorProviderTaskResultAsyncEnumerable EnumeratorMoveNextCancellationToken cancellationToken at MicrosoftEntityFrameworkCoreQueryInternalAsyncLinqOperatorProviderExceptionInterceptor EnumeratorExceptionInterceptorMoveNextCancellationToken cancellationToken NpgsqlNpgsqlException x The NpgsqlDbType Citext isnt present in your database You may need to install an extension or upgrade to a newer version at NpgsqlTypeMappingConnectorTypeMapperGetByNpgsqlDbTypeNpgsqlDbType npgsqlDbType in C projects npgsql src Npgsql TypeMapping ConnectorTypeMappercsline at NpgsqlNpgsqlParameterResolveHandlerConnectorTypeMapper typeMapper in C projects npgsql src Npgsql NpgsqlParametercsline at NpgsqlNpgsqlCommandValidateParameters in C projects npgsql src Npgsql NpgsqlCommandcsline at NpgsqlNpgsqlCommandExecuteDbDataReaderCommandBehavior behavior Boolean async CancellationToken cancellationToken in C projects npgsql src Npgsql NpgsqlCommandcsline at MicrosoftEntityFrameworkCoreStorageInternalRelationalCommandExecuteAsyncIRelationalConnection connection DbCommandMethod executeMethod IReadOnlyDictionary parameterValues CancellationToken cancellationToken at MicrosoftEntityFrameworkCoreQueryInternalAsyncQueryingEnumerable AsyncEnumeratorBufferlessMoveNextDbContext Boolean buffer CancellationToken cancellationToken at NpgsqlEntityFrameworkCorePostgreSQLStorageInternalNpgsqlExecutionStrategyExecuteAsync TStateTResult TState state Func operation Func verifySucceeded CancellationToken cancellationToken in C projects npgsqlentityframeworkcorepostgresql src EFCorePG Storage Internal NpgsqlExecutionStrategycsline at MicrosoftEntityFrameworkCoreQueryInternalAsyncQueryingEnumerable AsyncEnumeratorMoveNextCancellationToken cancellationToken at MicrosoftEntityFrameworkCoreQueryAsyncQueryMethodProviderGetResult TResult IAsyncEnumerable valueBuffers Boolean throwOnNullResult CancellationToken cancellationToken at MicrosoftEntityFrameworkCoreQueryInternalAsyncLinqOperatorProviderTaskResultAsyncEnumerable EnumeratorMoveNextCancellationToken cancellationToken at MicrosoftEntityFrameworkCoreQueryInternalAsyncLinqOperatorProviderExceptionInterceptor EnumeratorExceptionInterceptorMoveNextCancellationToken cancellationToken description Is your feature request related to a problem Please describe NuGetorgs search API supports package type filtering now Describe the solution youd like BaGet search should support the same protocol The protocol libraries should support the package type filtering Describe the bug The solution creates nested packages directory To Reproduce Looking at my volume Expected behavior Only one packages directory with all my private packages cached packages Screenshots Please notice the path Screen Shot at Additional context Most of the nested directories contain the same packages and versions however there are some differentials between directories depth both packages versions Screen Shot at This is my nugets compose nuget image loicsharmabaget containername nuget environment ASPNETCOREENVIRONMENTProduction ApiKeyHashE E EE C C DB D C BEDAB F C D B AF D F StorageTypeFileSystem StoragePathvarbagetpackages PackageDeletionBehaviorHardDelete DatabaseTypeSqlite DatabaseConnectionStringData Sourcevarbagetbagetdb SearchTypeDatabase volumes nugetvarbaget restart unlessstopped Any suggestions Latest installation requires Net Core but that is already pas end of support Plans for Net Core LTS or Net Core LTS support Summary of the changes in less than chars Added the ablity to view release notes for packages Addresses Describe the bug When the internet connection is lost yeah I have that occasionally as you can see from my other opened issue about offline usage I develop while taking a train from time to time BaGet with readthrough caching enabled seems to still try and fetch the most recent information about packages from the external source eg nugetorg Ideally it should just hit the local cache and retry to update external package information later with exponential backoff To Reproduce Steps to reproduce the behavior Set up BaGet with readthrough cache of nugetorg Make sure at least one package is cached Go offline Try and restore a project using said package Observe error returned from BaGet Expected behavior Hit cache even when offline optionally retrying to fetch most recent info later when connectivity is restored Describe the bug When the machine BaGet is running on loses internet connection loading the index page leads to an infinite loop of errors trying to load the package icons Ideally the attempts to load the icons should be tried with exponential backoff not immediately after it failed To Reproduce Steps to reproduce the behavior Set up BaGet having at least one package present Disconnect internet can also be emulated by setting offline mode in browser dev tools after the initial page load but thats a little bit difficult to time Load the page See error in dev tools Request to fails in endless loop Expected behavior The immediate retry also leads to flashing of the icon area So implementing exponential backoff would be appropriate for any external component It would be great to be able to have Readthrough caching enabled even with the Docker version Maybe by adding and using two environment variables like MirrorEnabledtrue MirrorPackageSource Or simply the second one as its presence or absence would determine the mirro enablingdisabling