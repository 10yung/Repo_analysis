Symfony versions affected Description Database queries in listeners to kernelterminate event are not logged to profiler but they are still logged to varlogdevlog I would expect them to be either in both places or none I discovered this after I added a listener that saves timestamp of last user activity to database and I thought it may be a good idea to do it in kernelterminate not to block the response How to reproduce create a Symfony demo application create a listener in srcDemoListenerphp php php declarestricttypes namespace App use App Entity Post use Doctrine ORM EntityManagerInterface use Symfony Component HttpKernel Event TerminateEvent final class DemoListener var Doctrine ORM EntityManagerInterface private entityManager public function construct EntityManagerInterface entityManager thisentityManager entityManager public function invokeTerminateEvent event void posts thisentityManagercreateQueryBuilder selectpost fromPostclass post getQuerygetResult and register in in servicesyaml yaml App DemoListener tags name kerneleventlistener You can use the patch listenerpatchtxt open any page in the demo application the SELECT from the listener is not visible in profiler the SELECT from the listener is visible in varlogdevlog Possible Solution Maybe collect the profiler data in kernelterminate But I guess that would have other consequences Additional context I found an opinion that use of kernelterminate is dangerous and should be avoided but it is not mentioned in docs In this PR the second and third argument of FileLocatorconstruct were removed Before v the lookup for resources was done from paths Userspathsrc UserspathsrcResources current path UserspathsrcHomeConfigroutes Now v the paths property in FileLocator is empty so only current path is applied The resource is atemped to be resolved only as UserspathsrcHomeConfigroutessrcHomeApplicationController for my definition import resourcesrcHomeApplicationController prefixhome typeannotation The documentation still says to do this yaml configroutesyaml controllers resource srcController type annotation But for that cannot work Is the documentation outdated and this is the correct behaviour or the rootdir should have been replaced by projectdir instead and this is a bug Thanks Symfony versions affected v Description the dom crawler short circuits when reaching a special character I can not identify Ive put in the middle of this file errortxt my IDE renders the character as Box img width altScreen Shot at PM src How to reproduce Here is a simple PHPUnit test I wrote with a file containing the bad character errortxt public function testCrawlerShortCircuited html filegetcontentsDIR errortxt crawler new Symfony Component DomCrawler Crawlerhtml thisassertEqualsbodyspanprespanspanspanspanpostspanbody crawlerhtml Failed test shows the missing post span in fact the entire html document after the crazy character just gets dropped Failed asserting that two strings are equal Expected Actual bodyspanprespanspanspanspanpostspanbody bodyspanprespanspanspanbody Possible Solution Strip the character but I dont even know what it is Additional context I cant copy the character into a browser to help identify it gets stripped by chrome maybe This character is live on the internet when trying to crawl the dom of certain websites Q A Branch master see below Bug fix no New feature no please update srcCHANGELOGmd files Deprecations no please update UPGRADEmd and srcCHANGELOGmd files Tickets prefix each issue number with Fix if any License MIT Doc PR required for new features Replace this notice by a short README for your featurebugfix This will help people understand your PR and can be used as a start for the documentation Additionally see Always add tests and ensure they pass Never break backward compatibility see Bug fixes must be submitted against the lowest maintained branch where they apply lowest branches are regularly merged to upper ones so they get the fixes too Features and deprecations must be submitted against branch master Q A Branch master Bug fix no New feature no please update srcCHANGELOGmd files Deprecations no please update UPGRADEmd and srcCHANGELOGmd files Tickets prefix each issue number with Fix if any License MIT Doc PR required for new features I like these option a lot and I think it deserves to be mentioned in the command help text Q A Branch Bug fix yes New feature no Deprecations no Tickets License MIT Doc PR Mysqli doesnt support named parameters so if you pass a doctrine connection using mysqli then you get the following error You have an error in your SQL syntax check the manual that corresponds to your MySQL server version for the right syntax to use near id token UNIXTIMESTAMP This PR ensures a clear error is provided and suggests to use pdomysql instead Q A Branch master Bug fix no New feature yes Deprecations yes Tickets NA License MIT Doc PR To do The aim of this PR is to bring the possibility to modify the name converter to use at runtime Imagine you use the classical serializer for your denormalization needs if you use some DTOs for instance You also need to call an API using snake case and you want to use the serializer too In the current state you need to do something like this yaml services appserializernormalizerobjectsnakecase class Symfony Component Serializer Normalizer ObjectNormalizer autoconfigure false arguments nameConverter serializernameconvertercamelcasetosnakecase appserializerdenormalizerarraysnakecase class Symfony Component Serializer Normalizer ArrayDenormalizer autoconfigure false appserializernormalizerdatetimesnakecase class Symfony Component Serializer Normalizer DateTimeNormalizer autoconfigure false appserializerencoderjsonsnakecase class Symfony Component Serializer Encoder JsonEncoder autoconfigure false appserializersnakecase class Symfony Component Serializer Serializer autoconfigure false arguments appserializernormalizerdatetimesnakecase appserializernormalizerobjectsnakecase appserializerdenormalizerarraysnakecase appserializerencoderjsonsnakecase You have to reconfigure all the denormalizers because if you use the ones from Symfony in the declaration of your snake case serializer they can use the snake case serializer instead of the classical one when you denormalize your data mainly because of this With this PR you can just use the classical serializer with a flag given to the context php data thisnormalizernormalizeobject null AbstractNormalizerNAMECONVERTER CamelCaseToSnakeCaseNameConverterclass Q A Branch master Bug fix no New feature yes Deprecations no Tickets Fix License MIT Doc PR not done yet Support using the name attribute on the unit element in xliff to use as the translation key rather than always relying on the source content as was done on the xliff Q A Branch Bug fix no New feature yes Deprecations no License MIT Q A Branch Bug fix yes New feature no Deprecations no Tickets License MIT Doc PR This PR ensures that when adding translations to a catalogue using the addarray messages string domain messages method internally the intl icu domain is checked first Otherwise it could happen that existing messages in eg messagesintlicu are not updated but the same keys are added to messages 