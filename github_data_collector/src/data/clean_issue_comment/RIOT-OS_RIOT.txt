 Contribution description This PR fixes the following problems of the ADC line mapping for the analog onboard peripherals of the megaxplained board definition Instead of defining the ADC line for the analog onboard peripherals the corresponding GPIOs were specified in the board definition However for the ATmega platform as for all other platforms the ADC lines are not the GPIOs Instead they are defined from to ADCNUMOF For the ATmega platform the ADC line represents the bit in the corresponding ADC registers The mapping of the ADC line to the corresponding ADC registerbit combination is realized by the peripheralADC implementation Therefore the definitions of the analogue onboard peripherals have use the ADCLINE macro instead of the GPIOPIN macro For ATmega P the ADC line is mapped to PORTA line That is the ADC line corresponds to the according bit in registers for port A The order of the definition was wrong According to the data sheet it has to be Pin J ATmega P pin Shared with onboard functionality ADC PA Filter output ADC PA Light sensor ADC PA NTC sensor The problem was figured out while going through the compile errors of PR where the gpiot is no longer compatible with adct Testing procedure The mapping is straight forward so that a source code review should be sufficient If the hardware is at hand flash and test make BOARDmegaxplained C examplesdefault flash term IssuesPRs references Required for Contribution description MTD configuration for the SPI NOR flash on the PineTime Testing procedure testspkglittlefs should succeed examplesfilesystem should also work IssuesPRs references None Contribution description While testing the mtd device in the PineTime I found it rather confusing that no newline was included in the output of the cat shell command on the device Without it RIOT appears to hang and the content of the file was not printed until I executed a next shell command While the cat shell command is not to blame here including a n in the output makes it a bit more user friendly output on the PineTime without this PR main This is RIOT Version devel g c workpinetime constfs mounted successfully mount mount sda successfully mounted cat sdatest cat sdatest help testtesttest help Command Description mount mount flash filesystem format format flash file system umount unmount flash filesystem output on the PineTime with this PR main This is RIOT Version devel g c workpinetime constfs mounted successfully mount mount sda successfully mounted cat sdatest cat sdatest testtesttest On native the cat command without this PR produces output along the lines of testtesttest note the trailing of the prompt Testing procedure Reproduce the above on master with and without this PR IssuesPRs references None The RIOT community cares a lot about code quality Therefore before describing what your contribution is about we would like you to make sure that your modifications are compliant with the RIOT coding conventions see Contribution description It seems that this script has been removed from Uniflash version and resides now on the Code Composer Studio IDE Put here the description of your contribution describe which parts of RIOT is are involved if its a bug fix describe the bug that it solves and how it is solved you can also give more information to reviewers about how to test your changes Testing procedure make debugserver to launch the debug server on a RIOT application you need to specify a BOARD that uses the uniflashincmk file like the cc launchpad Details steps to test your contribution which testexample to compile for which board and is there a test command how to know that it was not workingavailable in master the expected success test output IssuesPRs references Fixes Examples Fixes See also Depends on PR Please use keywords eg fixes resolve with the links to the issues you resolved this way they will be automatically closed when your pull request is merged See IF YOUR ISSUE IS RELATED TO SECURITY please submit it to the security mailinglist securityriotosorg If your issue is a question related to the usage of RIOT please submit it to the user mailinglist usersriotosorg or to the developer mailinglist develriotosorg Description Example Cannot build gnrcnetworking application for samr xpro board Cannot launch the debug server gdbagentconsole on boards using the makefilestoolsuniflashincmk script It seems that this script has been removed from Uniflash version and resides now on the Code Composer Studio IDE linktoeditor linktoeditor Steps to reproduce the issue Try to describe as precisely as possible here the steps required to reproduce the issue Here you can also describe your hardware configuration the network setup etc Use make debugserver on any example and specifying a board that uses the CC xxCC xx processors for example the cc launchpad Expected results Example The gnrcnetworking application builds on samr xpro Getting the debugging server running Actual results Please paste or specifically describe the actual output Debug server program homejeandudeylocalopttiuniflash ccsbasecommonuscifgdbagentconsole is required but not found in PATH Aborting homejeandudeyDevRIOTexampleshelloworldMakefileinclude recipe for target debugserver failed make debugserver Error Versions Operating system Mac OSX Linux Vagrant VM Build environment GCC CLang versions you can run the following command from the RIOT base directory make printversions Operating System Environment Operating System Ubuntu LTS Bionic Beaver Kernel Linux generic x x System shell bindash probably dash makes shell bindash probably dash Installed compiler toolchains native gcc gcc Ubuntu ubuntu armnoneeabigcc armnoneeabigcc GNU Tools for Arm Embedded Processors q major release ARMarm branch revision avrgcc missing mipsmtielfgcc missing msp gcc missing riscvnoneembedgcc missing xtensaesp elfgcc missing xtensaesp elfgcc missing clang clang version ubuntu tagsRELEASE final Installed compiler libs armnoneeabinewlib mipsmtielfnewlib missing riscvnoneembednewlib missing xtensaesp elfnewlib missing xtensaesp elfnewlib missing avrlibc missing missing Installed development tools ccache ccache version cmake cmake version cppcheck missing doxygen missing git git version make GNU Make openocd Open OnChip Debugger dev ged fa c python Python python Python python Python flake error usrbinpython No module named flake coccinelle missing Thanks for contributing Contribution description This pull requests proposes a simple framework for fuzzing RIOT network applications Inspired by the examples subdirectory it adds an additional directory called fuzzing with applications for fuzzing certain network modules The fuzzing setup is based on Michal Zalewskis AFL AFL website fuzzer AFL generates random network packets from an input corpus and writes the generated data to standard input As such each application in fuzzing reads from standard input converts the data to a gnrcpktsnipt and passes it to the network module under test using RIOTs message passing mechanism The fuzzing applications are terminated as soon as the RIOT network module under test finished processing the input data fuzzing packet This is achieved differently for applications using GNRC directly and applications using the sock interface For the former RIOT is terminated using exit as soon as the generated fuzzing packet is passed to gnrcpktbufrelease For the latter it is assumed that gnrcsockrecv is called in a loop if it is called again and the previously returned packet equals the fuzzing packet RIOT is terminated using exit I have written fuzzing applications for different modules and discovered various bugs using these fuzzing applications see related issues below This PR only contains a fuzzing applications for gnrctcp Additional applications have been omitted for now to ease code review If desired I will submit those separately later Needless to say the fuzzing setup only works on native currently Besides it only sends a single packet and does not fuzz any sending functions only receiving functions I dont think that this setup is perfect as is but is definitely usable in the sense that it finds existing bugs In my opinion it is definitely superior to testing network applications with hardcoded malcious packets as done currently eg if at all Testing procedure Usage instructions are provided in fuzzingREADMEmd The best way to test the gnrctcp fuzzing application and the fuzzing setup in general is reverting some of the fixes listed below and checking whether the fuzzing setup finds the underlying bugs again For instance git revert e d f c fc ad a f fff b ecc bb ff ebefa d ca c b b make C fuzzinggnrctcp allasan make C fuzzinggnrctcp fuzz At some point AFL will find a crash keep in mind that this might take a while though IssuesPRs references The following lists issues found using the proposed fuzzing setup gnrctftp gnrctcp asymcute emcute dtlssock miri you were involved in most issues listed above Do you have any though on the changes proposed here AFL website The RIOT community cares a lot about code quality Therefore before describing what your contribution is about we would like you to make sure that your modifications are compliant with the RIOT coding conventions see Contribution description The reassembly buffer only needs and stores the headers before the fragment header called perfragment headers in RFC section Currently when a subsequent IPv fragment is received before the first fragment the fragment header is however not removed With this fix it does Put here the description of your contribution describe which parts of RIOT is are involved if its a bug fix describe the bug that it solves and how it is solved you can also give more information to reviewers about how to test your changes Testing procedure See ReleaseSpecs Task They should succeed for multiple runs especially if packets get lost To make sure loss is due to the first fragment missing I applied the following patch which causes an E to appear in the output whenever a packet is lost under this circumstance in the given test run diff diff git asysnetgnrcnetworklayeripv extfraggnrcipv extfragc bsysnetgnrcnetworklayeripv extfraggnrcipv extfragc index e a eff ecbabae asysnetgnrcnetworklayeripv extfraggnrcipv extfragc bsysnetgnrcnetworklayeripv extfraggnrcipv extfragc static gnrcpktsnipt completedgnrcipv extfragrbuft rbuf gnrcipv extfragrbuffreerbuf return res putsE return NULL Details steps to test your contribution which testexample to compile for which board and is there a test command how to know that it was not workingavailable in master the expected success test output IssuesPRs references Cause of Examples Fixes See also Depends on PR Please use keywords eg fixes resolve with the links to the issues you resolved this way they will be automatically closed when your pull request is merged See I am trying to get a gclk generator to connect to a timercounter and hooking up the generator to a GCLKIO as clock source Only the generator is active and makes the timers count but other generators arent starting even though I try to enable them Here is my code Would anyone know what is going on here Is RIOT disabling them somehow While trying to expose a boards actuators and sensors via gCoAP I noticed that it is not yet as easy and as it could be using SAUL There are several features missing for that x Adding a dynamic list of resources to a gCoAP listener While SAUL manages its resources in a linked list to allow for extensions from basically anywhere heterogenous drivers gCoAP has uses fixedsized arrays to manage the resources of a listener A way to deal with this could be to have wildcard resources that can be expanded by the resource handler A way to add those wellknowncore would be to have a special handler for those kind of resources phydat deserializer so that the data read from a device can be converted into JSON CBOR etc and viceversa reactive SAUL to implement events that trigger a CoAP OBSERVE notification Please describe your use case why you need this feature and why this feature is important for RIOT Backport of Contribution description This adds information regarding the usage of Kconfig from an user perspective and indepth information on how it is currently integrated into RIOTs build system Testing procedure Run make doc and read Kconfig in RIOT section IssuesPRs references None