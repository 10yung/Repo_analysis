The existing behaviour substitutes a variable that could not be resolved for an empty string without throwing any error This PR adds the option to throw when a variable that could not be resolved is used in a template which means it was not defined in the context This is helpful to prevent errors in templates for example if introducing a typo when referring to a variable This takes the work that bejar started in and builds upon it In addition to the Jinja trimming symbols this adds a trimBehavior TrimBehaviour on Environment This defaults to none but can be customized It also comes with a built in smart case that removes whitespace before a block and whitespace and a single newline after a block In the Swift support was introduced but no new version was released since then Is there any plan to do so If so Im happy to help Best Lennart Backing Im trying to install Kitura and Stencil from the RayWenderlich Videos project This is the file from the Packageswift packageurl upToNextMinorfrom After doing swift build the process gets stuck at Fetching Using Xcode its CLI Any ideas what might be wrong or where I might look to get forward Hi what be nice to have is a build in support for i nJSONFiles Given Mirror is being used to serialize objects that are members of the Context dictionary it only seems logical we shouldnt be limited to initializing a Context with a dictionary This PR adds the ability to initialize a context with Any Initialize Context with Any by converting to dictionary Allow Any to be pushed onto a Context in a similar way Change Environment functions to use these new functions Hello I recently tried getting an iOS project running on Catalyst and one of the issues I came across was that FileSystemLoader couldnt load any template files on macOS while it works fine on iOS Looking at the implementation the reason was clear while iOS bundles put resources at the bundle root macOS bundles put them in a Resources subdirectory and FileSystemLoaderinitbundle doesnt use BundleresourcePath or BundleresourceURL so it was looking in the wrong place Im happy to pass in resourceURL myself or write my own lil BundleResourceLoader but I figured Id ask would it be a useful contribution to adjust FileSystemLoader somehow to consider resourceURL andor to add a BundleResourceLoader I can open a PR if thatd be useful If not Im happy to go about my day Issue Grandchild blocks do not replace the ParentGrandparent blocks Appears that inheritance is not working as expected Given basehtml django DOCTYPE html html langen head meta charsetutf block baseHeadBlock endblock Custom styles overriding CSS link relstylesheet hrefstylesappcss title block baseTitleBlock baseTitleKeydefaultBase Title endblock title head body block baseBodyBlock pemStencil basehtmlemp endblock body html latexmathbasehtml django extends basehtml block baseHeadBlock MathJax script src asyncscript endblock block baseTitleBlock titleKey endblock block baseBodyBlock bodyKey pemStencil latexmathbasehtmlemp endblock latexmathinlinehtml django extends latexmathbasehtml block baseTitleBlock Stencil Math Inline endblock block baseBodyBlock pTwo equations A TS B and sqrtab p p A TS B p p sqrtab p pemStencil latexmathinlinehtmlemp endblock Expected Expected the rendered page to contain Stencil latexmathinlinehtml Actual Result The rendered page instead contained Stencil latexmathbasehtml Setup The test harness that im working with is posted at VaporExamplesLabevalvaporleafstencil Does it support zerobase in forloop thanks forloop like swift for idx in rows endfor forloopfirst in nested forloop for row in do something in row for column in do something in column How do I check the forloopfirst is for row or column if forloopfirst do something if row is first endif endfor endfor access array in nested forloop with operators for row in for column in set index row column array index attributevalue endfor endfor The Stencildocstemplatesrst pages provides a rendunant example in the last section For example basenewshtml basenewshtml Perhaps basebloghtml basenewshtml could add more clarity to the For example 