Hi im trying to integrate eslintplugingraphql to validate my queries against and SDL File Unfortunately the import fails since we have a custom schema definition schema query CustomerQuery mutation CustomerMutation type CustomerQuery All our queries type CustomerMutation All our Mutations type Mutation an independent type for Changes on certain objects When importing the sdl i receive the following SCHEMA GraphQLSchema validationErrors undefined extensions undefined astNode undefined extensionASTNodes undefined allowedLegacyNames queryType undefined mutationType Mutation subscriptionType undefined As you can see the schema definition is not being considered when building the GraphQLSchema Our Mutation Type is being used as mutationType instead of the actualCustomerMutation Am i doing something wrong or is this simply not supported Thank you Can you make import work including root fields graphql import Mutation Query from schemaauthgraphql import Mutation Query Subscription from schemausergraphql right now Id have to do the above In our schema there is a piece like this gql type ImportedOrder import errors error String With graphqlconfig lib I am reading such a schema and it fails with node UnhandledPromiseRejectionWarning Error Too few regex matches null at parseImportLine app nodemodules graphqlimport src indexts at Arraymap anonymous at parseSDL app nodemodules graphqlimport src indexts at collectDefinitions app nodemodules graphqlimport src indexts at ObjectimportSchema app nodemodules graphqlimport src indexts at ObjectreadSchema app nodemodules graphqlconfig lib utilsjs at GraphQLProjectConfiggetSchema app nodemodules graphqlconfig lib GraphQLProjectConfigjs The obvious culprit is here I am not entirely sure whats the purpose of that Why not to actually use that regex instead of matching strings like that Workaround Had to remove that comment from schema before running the code Luckily coworker was ok with changing it on serverside so it wont bugger us for now but it would be nice to fix it nonetheless I would like to get the SchemaDocument ast from importSchema instead of the printed SDL Seems like a waste to have to parse it right after it was printed Hi everyone Im urigo the founder of The Guild As recently been announced on the Prisma blog we are taking over the maintenance of this library going forward Ive expressed it in the blog post in more details but I would like to start by thanking Prisma for conceiving creating and maintaining this library so far and also for doing the selfless act of providing it with fresh life by handing over the maintenance to us We already have a certain plan in mind going forward some of it weve specified in the blog post but we want you the users and community of the library to be part of influencing the roadmap going forward One thing to note about The Guild We place all the open source packages we maintain under individual persons Github profile instead of under a GitHub org or a company That is part of our philosophy it puts more accountability on the maintainer and it also lowers the barrier of creating successful competing forks So we will transfer that repository from under Prisma as part of the transition Im looking forward to start the discussion here below Please share how and why you use the library today what are your biggest pain points today and ideas and features you would like to see in the future I will add points into the description here as we go Lets make this happen HI when building federated schema using basic builiding blocks following error is thrown error Uncaught exception messageDirective key Couldnt find type key in any of the schemas stackError Directive key Couldnt find type key in any of the schemas at collectDirective Usersusercodenodemodulesgraphqlimportsrcdefinitionts at ArrayforEach anonymous at collectNewTypeDefinitions Usersusercodenodemodulesgraphqlimportsrcdefinitionts at ObjectcompleteDefinitionPool Usersusercodenodemodulesgraphqlimportsrcdefinitionts at ObjectimportSchema Usersusercodenodemodulesgraphqlimportsrcindexts The type that causes the issue looks like this type SomeType keyfields id id ID key directive is something that glues different pieces of extended types together when federating schema See the documentation for further details Could the validation be loosened on importschema library so that key would not cause exception Our security audit failed on a vulnerability in dependency Lodash Upgrading to Lodash or higher would fix this More information Im trying to import all types from my prisma schema however nothing actually imports Here is the output If I try to import a specific type such as an input type called UserUpdateInputit will not specifically import UserUpdateInput It will only import every type that is similar such as UserUpdateManyDataInput UserUpdateManyMutationInput UserUpdateManyWithoutRolesInput etc Here is the start of my prismaschemagraphql file for referenceexample Am I misinterpreting anything packagejson name myapp version description main indexjs scripts build prisma generate prisma deploy tsc start cd distapollo node indexjs test echo Error no test specified exit keywords author license ISC dependencies apolloserver bcrypt dotenv graphqlcli graphqlimport graphqltools jsonwebtoken lodash prisma prismabinding prismaclientlib devDependencies typesbcrypt typesdotenv typesgraphql typesjsonwebtoken typeslodash typescripteslinteslintplugin typescripteslintparser eslint eslintconfigprettier eslintpluginprettier prettier typescript resolutions graphql cleftpad I am getting the following error running locally trying to use create a query to look up a unique item Error Field where Couldnt find type ItemWhereUniqueInput in any of the schemas Below is my schemagraphql file type Item id ID title String description String price Int image String largeImage String type Vehicle id ID title String description String image String largeImage String price Int type Mutation createItemtitle String description String price Int image String largeImage String Item createVehicletitle String description String price Int image String largeImage StringVehicle updateItemid ID title String description String price Int Item type Query items Item itemwhere ItemWhereUniqueInput Item vehicles Vehicle And I have the following in my generated prismagraphql file type Query userswhere UserWhereInput orderBy UserOrderByInput skip Int after String before String first Int last Int User itemswhere ItemWhereInput orderBy ItemOrderByInput skip Int after String before String first Int last Int Item vehicleswhere VehicleWhereInput orderBy VehicleOrderByInput skip Int after String before String first Int last Int Vehicle userwhere UserWhereUniqueInput User itemwhere ItemWhereUniqueInput Item vehiclewhere VehicleWhereUniqueInput Vehicle usersConnectionwhere UserWhereInput orderBy UserOrderByInput skip Int after String before String first Int last Int UserConnection itemsConnectionwhere ItemWhereInput orderBy ItemOrderByInput skip Int after String before String first Int last Int ItemConnection vehiclesConnectionwhere VehicleWhereInput orderBy VehicleOrderByInput skip Int after String before String first Int last Int VehicleConnection Fetches an object given its ID node The ID of an object id ID Node I have troubles trying to import a schema generated by postgraphile Attempt I first tried importing a specific type like this import ProdAttrsConnection from generatedpostgraphilegraphql After writing the import line I get this error with different types Unknown type ProductToAttrsOrderBy The types that throw the error are not even dependencies of the one I imported so I think it is a schema validation error In the case of the error I mentioned ProductToAttrsOrderBy is an enum and it is declared in the schema Attempt Then I tried importing the whole schema like this import from generatedpostgraphilegraphql In this case I dont get an error by just writing the import line but when I use any imported type I get this error with multiple types Interface field NodenodeId expected but ProdItemAttr does not provide it Here are the types corresponding to the error I mentioned graphql interface Node nodeId ID type ProdItemAttr implements Node nodeId ID otherStuff 