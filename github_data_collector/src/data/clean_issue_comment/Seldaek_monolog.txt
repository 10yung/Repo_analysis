just applied phpcsfixer fix by the latest version of phpcsfixer We actively use such formatter in production for a long time so I decided to propose making it available for the community The formatter is useful with the following setup Application is containerized and orchestrated using Google Kubernetes Engine GKE Application writes logs to stderrstdout Log entries are collected from stdoutstderr by GKE then forwarded to Stackdriver The problem Stackdriver uses JSONstructured logs but does not understand level field therefore it cannot understand the level of log entry On the other hand level names match Monolog level names the difference is just a field name severity instead of level or levelname Other references People use similar approach for other technical stack as well for example Python article Monolog version As stated in the MongoClient is deprecated in php and should no longer be used Unfortunately when using Symfony we are still bound to monolog because of the monologbridge requiring monolog x And the hard dependence without any classexists checking is causing a hard crash when attempting to use the MonologDBHandler I propose a simple classexists solution so the x branch and Symfony can use the MongoDBHandler without needing to install a deprecated and outdated mongo client So for example if classexists MongoClient mongo instanceof MongoClient mongo instanceof Mongo mongo instanceof MongoDB Client throw new InvalidArgumentExceptionMongoClient Mongo or MongoDB Client instance required Hi kdybymonolog package is no longer maintained Hi Today we spent severe time debugging a processor Intuitively we implement ProcessorInterface for its contract value and being a core library type Turns out the Symfony bundle auto configures these as such tagging them with monologprocessor This effectively breaks as its tagged twice thus the auto configured one has no channel causing it to be pushed to all loggers instead of a channel specific one Perhaps we should have read AFAIK the general purpose is type based autoconfiguration for DI but maybe its worth to create an additional ChannelAwareProcessorInterface for the same general purpose php interface ChannelAwareProcessorInterface extends ProcessorInterface public static function getChannels string Or add it to ProcessorInterface directly even Thoughts Monolog Formatter GelfMessageFormatter php Translates Monolog log levels to Graylog log priorities private logLevels array LoggerDEBUG LoggerINFO LoggerNOTICE LoggerWARNING LoggerERROR LoggerCRITICAL LoggerALERT LoggerEMERGENCY I needed to change this mapping a bit and I wanted to do it by extending the base class but of course it wont work because this field is private I would also have to overwrite the format method which is huge Lots of code to copy If the author followed the KISS design pattern it would be great I would suggest adding a method to obtain the GELF level Or divided the format method into smaller fragments Or did it protected field Hi Just a PR that remap new html colors on bootstrap ones that IMO a lot of developers are visually used to cf exepts for the alert where i took the critical but darker before img width altbefore src after img width altHtmlFormatter logLevelscolor src Monolog version ElasticsearchFormatter should force all records to be strings since ElasticSearch will fail on field types mixing in an index It would also make sense to not allow deep arrays basically flatten arrays and make them scalar Like we have some use case to proxy only for Slack Monolog version Write your bug report here When I run composer update I get a list of warnings as Ambiguous class resolution When I check vendor folder there are files of each class as Classname php AbstractHandler php FilterHandlerphp LogglyHandler php RollbarHandler php AbstractHandlerphp FingersCrossed LogglyHandlerphp RollbarHandlerphp AbstractProcessingHandler php FingersCrossedHandler php MailHandler php RotatingFileHandler php AbstractProcessingHandlerphp FingersCrossedHandlerphp MailHandlerphp RotatingFileHandlerphp AbstractSyslogHandler php FirePHPHandler php MandrillHandler php SamplingHandler php AbstractSyslogHandlerphp FirePHPHandlerphp MandrillHandlerphp SamplingHandlerphp AmqpHandler php FleepHookHandler php MissingExtensionException php Slack AmqpHandlerphp FleepHookHandlerphp MissingExtensionExceptionphp SlackHandler php BrowserConsoleHandler php FlowdockHandler php MongoDBHandler php SlackHandlerphp My Composer file is name laravellaravel type project description The Laravel Framework keywords framework laravel license MIT require php fideloperproxy guzzlehttpguzzle laravelframework laraveltinker predispredis requiredev barryvdhlaraveldebugbar facadeignition fzaninottofaker mockerymockery nunomadurocollision phpunitphpunit Any idea why this is happening 