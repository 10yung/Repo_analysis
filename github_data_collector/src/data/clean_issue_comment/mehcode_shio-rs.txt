While working with Shio I ran into an issue where I needed the shiohttpMethod struct to implement Clone The underlying httptypesMethod type is Cloneable so the wrapper data structure probably should be too I worked around this for now by creating my own custom Method struct which is both Clone and IntoshiohttpMethod but in general its considered good practice to derive common traits eg Clone Debug Eq Hash PartialEq for most public data types where possible The usage example is missing imports for Context and Method and possibly others I read the changelog at but could not use shiohttpMethod because rust use shiohttpMethod Could not find http in shio Fix issues with the tests I am really liking this framework Thanks for writing it I started working on a MySQL example based off the Postgres example but Im getting stuck on how to move the db connection pool outside of the handler function into a static or thread local variable When registering a route with GET test and I send a POST request to test the return is It should be Method Not Allowed What Id like to do is something like this so I can use some of the struct fields within the response extern crate shio use shioprelude use shioHandler struct TestStruct impl TestStruct pub fn testclosure self BoxHandlerResultResponse Boxnewctx ResponsewithHello World fn main let teststruct TestStruct Shiodefault routeMethodGet teststructtestclosure run unwrap This would allow responses to be built up using other struct fields But this errors out error E the trait bound stdboxedBoxshioHandlerResultshioResponse stdopsFnshioContext is not satisfied srcmainrs routeMethodGet teststructtestclosure the trait stdopsFnshioContext is not implemented for stdboxedBoxshioHandlerResultshioResponse note required because of the requirements on the impl of shioHandler for stdboxedBoxshioHandlerResultshioResponse note required because of the requirements on the impl of stdconvertFromshioMethod str stdboxedBoxshioHandlerResultshioResponse for shiorouterRoute note required because of the requirements on the impl of stdconvertIntoshiorouterRoute for shioMethod str stdboxedBoxshioHandlerResultshioResponse error aborting due to previous error error Could not compile shiotest To learn more run the command again with verbose Using the new impl trait on nightly works OK though featureconservativeimpltrait extern crate shio use shioprelude use shioHandler struct TestStruct impl TestStruct pub fn testclosure self impl HandlerResultResponse ctx ResponsewithHello World fn main let teststruct TestStruct Shiodefault routeMethodGet teststructtestclosure run unwrap Following from Currently the type signature of the shioResponse is heavily coupled to hyperBody pub struct Response pub inner hyperResponsehyperBody And setting the body requires that it can be at least converted into a hyperBody pub fn setbodyB IntohyperBody mut self body B selfinnersetbodybodyinto The body could possibly be more generic as per the hyper crate which would allow such things as providing a Stream directly to the body simplifying implementation for more tricky things like streaming files from disk If I am not mistaken the example regarding the proxying solution will create a new client per request in If I am correct how would this be done with a perthread client Hi this is awesome work I was just about to start a micro services kit myself but luckily found your effort today I am looking for some tiny layer on top of hyper but of less weight than rocket You seem to be headed towards that direction I have use cases where I need to run periodical work in the background periodic timertriggered work Id like to run this off the same core as hyper server because I am also targeting single threaded scenarios in constrained environments Do you have plans for passing a core to Shio as an alternative to having shia create its own If so could you share your plans so I can work in the right direction Anyhow so happy to see this Jan This may already be handled in another way but I cant for the life of me work it out Using the HTTP Stream example say you wanted to convert this into a POST request and include the body Youd do something like this let mut clientreq Requestnewctxmethodclone clientreqheadersmutextendctxheadersiter clientreqsetbodyctxbody Only the issue is that you cant convert shiorequestBody to hyperBody error E the trait bound hyperBody stdconvertFromshiorequestBody is not satisfied srcmainrs clientreqsetbodyctxbody the trait stdconvertFromshiorequestBody is not implemented for hyperBody 