Im using ContourLayout to build a view that will be placed inside a ScrollView with fillViewporttrue When scrolling is not required Id like for the contents to be anchored to the bottom of the ScrollView Here is how Im going about it for simplicity lets just say there are children views class MyContourView context Context private val view View private val view View private val interItemMarginPx Int private val lrMarginPx Int ContourLayoutcontext init contourHeightOf availableHeight maxOfavailableHeight view bottom interItemMarginPx override fun onInitializeLayout view applyLayout leftTo parentleft lrMarginPx rightTo parentright lrMarginPx bottomTo parentbottom interItemMarginPx view applyLayout leftTo parentleft lrMarginPx rightTo parentright lrMarginPx bottomTo view top interItemMarginPx But I get a CircularReferenceDetected error at the line where I call view bottom in contourHeightOf I can see why thats the case view references parentbottom and the parent references view bottom in determining its height Everything works if I remove the contourHeightOf block in which case its always going to be availableHeight But this breaks the scrolling if the height of the contents is greater than availableHeight How do I go about this use case The following code causes a stack overflow during layout kotlin class ParentViewcontext Context ContourLayoutcontext init setBackgroundColorColorRED val childView ChildViewcontextapply applyLayout x leftTo parentleft widthOf xdip y topTo parenttop heightOf ydip class ChildViewcontext Context ContourLayoutcontext init setBackgroundColorColorBLUE However moving ChildViews applyLayout into its onInitializeLayout solves the issue kotlin class ParentViewcontext Context ContourLayoutcontext init setBackgroundColorColorRED val childView ChildViewcontextalso addViewit class ChildViewcontext Context ContourLayoutcontext init setBackgroundColorColorBLUE override fun onInitializeLayout superonInitializeLayout applyLayout x leftTo parentleft widthOf xdip y topTo parenttop heightOf ydip I dont know if this is a bug or not but my hunch is its the intended behavior if not Id be happy to look into it I realize nesting layouts is discouraged but there are going to be situations where it is useful and people are going to do it anyway The pattern Contour uses for configuring child views MyViewcontextapply applyLayout is great and it seems clunky to have to violate it iff the child happens to be another ContourLayout I can imagine during refactoring a View that didnt start as Contour might become one later Could we make it so layout constraints declared at construction time get deferred until onInitializeLayout Either by having applyLayout behave differently for ContourLayouts or with an onInitializeLayout DSL kotlin class ParentViewcontext Context ContourLayoutcontext init setBackgroundColorColorRED val childView ChildViewcontextapply onInitializeLayout applyLayout x leftTo parentleft widthOf xdip y topTo parenttop heightOf ydip class ChildViewcontext Context ContourLayoutcontext init setBackgroundColorColorBLUE Hi Using nested contour layout is it possible to have something like wrapcontent Hi may you update readme about setup contour dependency from scratch please The idea here would be to print to logcat whenever the ContourLayout or one of its direct subviews has its position or size recalculated ie whenever one of the lambdas defined in the context of that layout gets run It would be useful for debugging view layouts especially for more complex layouts or layouts whose size changes frequently It could be answered by But let me single out this question here Consider private val name TextView TextViewcontextapply text Ben Sisko setTextColorWhite setTextSizeTypedValueCOMPLEXUNITDIP f applyLayout x leftTo parentleft dip y topTo parenttop dip How to update that name TextView to John Doe Yo guys I like what I see here and want to start using this library but cant find it on either or searchmavenorg In SampleActivity theres views i which calls invoke Using breakpoints it seems invoke reinstantiate everything in SampleView and SampleView Is that correct Or is invoke kinda redraw the view with a new state or sth like that Couldnt find invoke function defined inside ContourLayout thats why I couldnt help myself Are there use cases for parameters to be passed to the ContourLayoutinvoke function