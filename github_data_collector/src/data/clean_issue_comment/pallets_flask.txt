 Expected Behavior Missing templates should raise a TemplateNotFound exception with the correct template name Actual Behavior The toplevel template is used as the error string even when it is not the template that failed There appears to be an issue in Flasks DispatchingJinjaLoader If a template called parenthtml fails to find a subtemplate such as extends childhtml the exception that is raised will be TemplateNotFoundparenthtml instead of the correct TemplateNotFoundchildhtml This will almost certainly confuse an end user This appears to be because does not properly float up missing templates errors If it fails to find any matching template it raises the name of whatever template was first passed to rendertemplate Environment Python version all Flask version all Werkzeug version all Just like this old issue said routing behavior changed even when subdomainmatching defaults to false so take this repository as example if you comment following lines appbeforerequest def start init globals and set the schema search path for the current request guser sessiongetuser None currenturl urlparserequesturl subdomain currenturlhostnamesplit if subdomainlen redirect to home page if currenturlpath return redirecturlforindex pass pass then requests to user flasksubdomaincom wont route to index default as response Or am I missing something as a result have misunderstood it Thanks very much approute def index return rendertemplateindexhtml Environment Python version Flask version Werkzeug version This PR removes the comment in the foreword that tells Flask extensions are reviewed by Flask maintainers Its confusing when not adding the staticurlpath to Flask Class Commit checklist add tests that fail without the patch ensure all tests pass with pytest add documentation to the relevant docstrings or pages add versionadded or versionchanged directives to relevant docstrings add a changelog entry if this patch changes code Tests coverage and docs will be run automatically when you submit the pull request but running them yourself can save time Fixes Strip the ending slash when passed to ospathbasename so that the last part can be used for static url path correctly Commit checklist add tests that fail without the patch ensure all tests pass with pytest add documentation to the relevant docstrings or pages add versionadded or versionchanged directives to relevant docstrings add a changelog entry if this patch changes code Tests coverage and docs will be run automatically when you submit the pull request but running them yourself can save time Hi This fixes a docstring and remove redundant parentheses if you want me to submit as separated PR or you need me to do something else just let me know This issue tracker is a tool to address bugs in Flask itself Please use the pocoo IRC channel on freenode or Stack Overflow for general questions about using Flask or issues not related to Flask If youd like to report a bug in Flask fill out the template below Provide any extra information that may be useful related to your problem Ideally create an MCVE which helps us understand the problem and helps check that it is not caused by something in your code I am trying to serve a React app with Flask The React app uses React Router which means some routes should simply be handled by React To achieve this one can usually use a catchall route that returns the indexhtml I first couldnt get the catchall route to work at all and then I got it working by removing the trailing slash for the staticfolder parameter when calling Flask Expected Behavior When one enter a path with trailing forward slash in the staticfolder parameter for flaskFlask it shouldnt affect whether a catchall route goes into effect or not In the below code remove the trailing slash for the staticfolder and you are able to reach the catchall route home function by entering a random route like something python from flask import Flask rendertemplate app Flaskname staticfolderfrontendbuild templatefolderfrontendbuild approute def route return route approutepathpath def homepath return routeAny Actual Behavior Steps to reproduce Run the above flask app Open browser and verify that it renders the text route for route Browse to something and see that you get Not Found Environment Python version Flask version Werkzeug version This issue tracker is a tool to address bugs in Flask itself Please use the pocoo IRC channel on freenode or Stack Overflow for general questions about using Flask or issues not related to Flask If youd like to report a bug in Flask fill out the template below Provide any extra information that may be useful related to your problem Ideally create an MCVE which helps us understand the problem and helps check that it is not caused by something in your code Expected Behavior Tell us what should happen When a user creates a route that returns None flask raises TypeError The view function did not return a valid response The function either returned None or ended without a return statement The problem is that it doesnt include the route that actually caused the error Its obviously not a huge deal just a little tedious to go search through all of the routes full traceback pytb Traceback most recent call last File varwwwmysitecomvenvlibpython sitepackageswerkzeugmiddlewareproxyfixpy line in call return selfappenviron startresponse File varwwwmysitecomvenvlibpython sitepackagesflaskapppy line in wsgiapp response selfhandleexceptione File varwwwmysitecomvenvlibpython sitepackagesflaskapppy line in handleexception reraiseexctype excvalue tb File varwwwmysitecomvenvlibpython sitepackagesflaskcompatpy line in reraise raise value File varwwwmysitecomvenvlibpython sitepackagesflaskapppy line in wsgiapp response selffulldispatchrequest File varwwwmysitecomvenvlibpython sitepackagesflaskapppy line in fulldispatchrequest return selffinalizerequestrv File varwwwmysitecomvenvlibpython sitepackagesflaskapppy line in finalizerequest response selfmakeresponserv File varwwwmysitecomvenvlibpython sitepackagesflaskapppy line in makeresponse The view function did not return a valid response The TypeError The view function did not return a valid response The function either returned None or ended without a return statement Environment Python version Flask version Werkzeug version Hi everybody I have write some tests like this python pytestfixture def app app createappDBCONNECT TESTDBCONNECT yield app pytestfixture def clientapp A test client for the app return apptestclient def testhello app client test that viewing the page renders without template errors assert clientgethellostatuscode def testhello app client test that viewing the page renders without template errors assert clientgethellostatuscode and the interface hello like thisthis interface locate at a blueprint python from flask import Blueprint currentapp bp Blueprintinterfacemap name bproutehello def hello currentapploggerinfohello world test log return hello world when I running tests Expected Behavior requested INFO in interfacedemo hello world test log requested INFO in interfacedemo hello world test log Actual Behavior pytb requested INFO in interfacedemo hello world test log requested INFO in interfacedemo hello world test log requested INFO in interfacedemo hello world test log I run two tests but it log three times I have no idea what happened and I am not sure it is appropriate use currentapplogger in blueprint I also tried replace currentapplogger to print or write to a file use openfilename a it behavior no problem Environment Python version Flask version Werkzeug version appreciate for any ideas Expected Behavior It should return the LastModified header when returning Not Modified HTTP response python Here is my code def getresponse headers LastModified lastmodifiedafter Wed Dec GMT CacheControl nocache Name Test if userhasoldversion return clouddoc headers else return clouddoc headers Actual Behavior my issue is when I returning the response with the headers including the header LastModified it is gone missing when it receives to the client end But all the other headers are present I wonder how only that header is gone missing When I get the response for the else condition ie HTTP response I only get the CacheControl header and the custom Name header this LastModified gone missing But when I receive the if ie HTTP response case Im getting all the headers including the LastModified header Python version Flask version Werkzeug version 