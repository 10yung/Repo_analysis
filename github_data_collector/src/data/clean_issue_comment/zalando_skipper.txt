Is your feature request related to a problem Please describe We would like to transition to issuing ServiceAccount tokens that expire aka BoundServiceAccountTokenVolumes Skippers Kubernetes data client is currently not aware that ServiceAccount tokens can expire and therefore only reads the token once when the client is initialized eg here and here We would like for skipper to refresh the token from the mounted volume so that it always has a valid token Describe the solution you would like The token should be reread from the mounted volume while skipper is running The path to the token within the container doesnt change This can either be done in fixed intervals or by taking the expiry time within the token into account Looking at Kubernetes TokenManager itself it refreshes tokens once they are past of their lifetime or at least once per day The default validity of ServiceAccount tokens is h so in practice they will be rotated once per hour Describe alternatives youve considered optional We could use clientgo for talking to the Kubernetes API or a suitable subpackage Token refresh is handled within the client automatically and it might have other benefits or drawbacks Would you like to work on it Yes Skipper version v node EKS cluster running skipper ingress as daemonset We experienced unrelated applications starting to return s after deploying a new application containing ingress resources Initially it was fixed after uninstalling the new application scoreboardapi and reinstalling However after manually editing an ingress object we now have a situation where one ingress pod behaves correctly and another returns unexpected s so it seams triggered by a route update Some questionsthoughts What could be the origin of errors like catchall name in doesnt match Could this be related to the described issue Could us in some way incorrectly configuring ingress objects cause these kind of effects Of course I can try to provide more information if needed Im going to try if upgrading skipper to latest version might solve this If needed running this version and trying to reproduce is an option Timeline Z Deployed new application containing new ingress resources Z Skipper pods log updating routes Z s returned for grafana an already existing application also using the restricted skipper ingress class Z Skipper route updates unclear what caused those Z Skipper route updates unclear what caused those Z Client request context error appear after I killed grafana pod suspecting it just being dashboard configuration being borked in some way s persist Z Skipper route updates resulting from manually changing ingress path from into reacting to catchall name errors s persist Z Skipper route deletions resulting from uninstalling scoreboard application No more s Z Skipper route updates resulting from reinstall scoreboard application no config changes whatsoever compared to first installation No more s Log excerpt from around skipper route updates log Jan GET apidatasourcesproxy apiv queryquerysumnodenamespacepodcontainer Acontainercpuusagesecondstotal Asumrate Bcluster D C namespace D monitoring D by pod F sumkubepodcontainerresourcerequestscpucores Bcluster D C namespace D monitoring D by pod time HTTP Mozilla Macintosh Intel Mac OS X rv Gecko Firefox grafanarestrictedapps oscnutestk scloudsanomacom nstreamstderrdockercontainerid f bee e f e a ff eed f c dea b f c a f fkubernetescontainernameskipperingressnamespacenamekubesystempodnameingressrestrictedskipperingressskipper b blcontainerimageregistryopensourcezalandopathfinderskipperv containerimageiddockerpullableregistryopensourcezalandopathfinderskippersha a ab ea bb e fd aaaa c bad d a fb d e ca c aa podidc cdb eaa a c d c ehostip euwest computeinternallabelscontrollerrevisionhash c c podtemplategeneration appkubernetesioinstanceingressrestrictedappkubernetesionameskipperingressskippermasterurl log APP time T Z levelinfo msg route settings applied nstreamstderrdockercontainerid f bee e f e a ff eed f c dea b f c a f fkubernetescontainernameskipperingressnamespacenamekubesystempodnameingressrestrictedskipperingressskipper b blcontainerimageregistryopensourcezalandopathfinderskipperv containerimageiddockerpullableregistryopensourcezalandopathfinderskippersha a ab ea bb e fd aaaa c bad d a fb d e ca c aa podidc cdb eaa a c d c ehostip euwest computeinternallabelscontrollerrevisionhash c c podtemplategeneration appkubernetesioinstanceingressrestrictedappkubernetesionameskipperingressskippermasterurl log APP time T Z levelinfo msg diff taken insertsupdates deletes nstreamstderrdockercontainerid f bee e f e a ff eed f c dea b f c a f fkubernetescontainernameskipperingressnamespacenamekubesystempodnameingressrestrictedskipperingressskipper b blcontainerimageregistryopensourcezalandopathfinderskipperv containerimageiddockerpullableregistryopensourcezalandopathfinderskippersha a ab ea bb e fd aaaa c bad d a fb d e ca c aa podidc cdb eaa a c d c ehostip euwest computeinternallabelscontrollerrevisionhash c c podtemplategeneration appkubernetesioinstanceingressrestrictedappkubernetesionameskipperingressskippermasterurl log APP time T Z levelinfo msg route settings update route kubetestscoreboardapiscoreboardapicacheingressscoreboardapitestnusportnlscoreboardapicacheservice Host scoreboardapi test nusport nl PathSubtree log APP time T Z levelinfo msg route settings update route kubetestscoreboardapiscoreboardapicometingresscomettestnusportnlscoreboardapicometservice Host comet test nusport nl PathSubtree log APP time T Z levelinfo msg route settings received nstreamstderrdockercontainerid f bee e f e a ff eed f c dea b f c a f fkubernetescontainernameskipperingressnamespacenamekubesystempodnameingressrestrictedskipperingressskipper b blcontainerimageregistryopensourcezalandopathfinderskipperv containerimageiddockerpullableregistryopensourcezalandopathfinderskippersha a ab ea bb e fd aaaa c bad d a fb d e ca c aa podidc cdb eaa a c d c ehostip euwest computeinternallabelscontrollerrevisionhash c c podtemplategeneration appkubernetesioinstanceingressrestrictedappkubernetesionameskipperingressskippermasterurl log APP time T Z levelinfo msg filterRoutes incoming outgoing nstreamstderrdockercontainerid f bee e f e a ff eed f c dea b f c a f fkubernetescontainernameskipperingressnamespacenamekubesystempodnameingressrestrictedskipperingressskipper b blcontainerimageregistryopensourcezalandopathfinderskipperv containerimageiddockerpullableregistryopensourcezalandopathfinderskippersha a ab ea bb e fd aaaa c bad d a fb d e ca c aa podidc cdb eaa a c d c ehostip euwest computeinternallabelscontrollerrevisionhash c c podtemplategeneration appkubernetesioinstanceingressrestrictedappkubernetesionameskipperingressskippermasterurl log APP time T Z levelerror msg catchall name in doesnt match nstreamstderrdockercontainerid f bee e f e a ff eed f c dea b f c a f fkubernetescontainernameskipperingressnamespacenamekubesystempodnameingressrestrictedskipperingressskipper b blcontainerimageregistryopensourcezalandopathfinderskipperv containerimageiddockerpullableregistryopensourcezalandopathfinderskippersha a ab ea bb e fd aaaa c bad d a fb d e ca c aa podidc cdb eaa a c d c ehostip euwest computeinternallabelscontrollerrevisionhash c c podtemplategeneration appkubernetesioinstanceingressrestrictedappkubernetesionameskipperingressskippermasterurl log APP time T Z levelerror msg catchall name in doesnt match nstreamstderrdockercontainerid f bee e f e a ff eed f c dea b f c a f fkubernetescontainernameskipperingressnamespacenamekubesystempodnameingressrestrictedskipperingressskipper b blcontainerimageregistryopensourcezalandopathfinderskipperv containerimageiddockerpullableregistryopensourcezalandopathfinderskippersha a ab ea bb e fd aaaa c bad d a fb d e ca c aa podidc cdb eaa a c d c ehostip euwest computeinternallabelscontrollerrevisionhash c c podtemplategeneration appkubernetesioinstanceingressrestrictedappkubernetesionameskipperingressskippermasterurl log APP time T Z levelinfo msg diff taken insertsupdates deletes nstreamstderrdockercontaineridf ff dd d e d b ffc fe b f eb b efcaffd e d d kubernetescontainernameskipperingressnamespacenamekubesystempodnameingressrestrictedskipperingressskipper d hrcontainerimageregistryopensourcezalandopathfinderskipperv containerimageiddockerpullableregistryopensourcezalandopathfinderskippersha a ab ea bb e fd aaaa c bad d a fb d e ca c aa podidc d cdb eaa a c d c ehostip euwest computeinternallabelscontrollerrevisionhash c c podtemplategeneration appkubernetesioinstanceingressrestrictedappkubernetesionameskipperingressskippermasterurl log APP time T Z levelinfo msg route settings update route kubetestscoreboardapiscoreboardapicacheingressscoreboardapitestnusportnlscoreboardapicacheservice Host scoreboardapi test nusport nl PathSubtree log APP time T Z levelinfo msg route settings update route kubetestscoreboardapiscoreboardapicometingresscomettestnusportnlscoreboardapicometservice Host comet test nusport nl PathSubtree log APP time T Z levelinfo msg route settings received nstreamstderrdockercontaineridf ff dd d e d b ffc fe b f eb b efcaffd e d d kubernetescontainernameskipperingressnamespacenamekubesystempodnameingressrestrictedskipperingressskipper d hrcontainerimageregistryopensourcezalandopathfinderskipperv containerimageiddockerpullableregistryopensourcezalandopathfinderskippersha a ab ea bb e fd aaaa c bad d a fb d e ca c aa podidc d cdb eaa a c d c ehostip euwest computeinternallabelscontrollerrevisionhash c c podtemplategeneration appkubernetesioinstanceingressrestrictedappkubernetesionameskipperingressskippermasterurl log APP time T Z levelinfo msg filterRoutes incoming outgoing nstreamstderrdockercontaineridf ff dd d e d b ffc fe b f eb b efcaffd e d d kubernetescontainernameskipperingressnamespacenamekubesystempodnameingressrestrictedskipperingressskipper d hrcontainerimageregistryopensourcezalandopathfinderskipperv containerimageiddockerpullableregistryopensourcezalandopathfinderskippersha a ab ea bb e fd aaaa c bad d a fb d e ca c aa podidc d cdb eaa a c d c ehostip euwest computeinternallabelscontrollerrevisionhash c c podtemplategeneration appkubernetesioinstanceingressrestrictedappkubernetesionameskipperingressskippermasterurl log APP time T Z levelerror msg catchall name in doesnt match nstreamstderrdockercontaineridf ff dd d e d b ffc fe b f eb b efcaffd e d d kubernetescontainernameskipperingressnamespacenamekubesystempodnameingressrestrictedskipperingressskipper d hrcontainerimageregistryopensourcezalandopathfinderskipperv containerimageiddockerpullableregistryopensourcezalandopathfinderskippersha a ab ea bb e fd aaaa c bad d a fb d e ca c aa podidc d cdb eaa a c d c ehostip euwest computeinternallabelscontrollerrevisionhash c c podtemplategeneration appkubernetesioinstanceingressrestrictedappkubernetesionameskipperingressskippermasterurl log APP time T Z levelinfo msg route settings applied nstreamstderrdockercontaineridf ff dd d e d b ffc fe b f eb b efcaffd e d d kubernetescontainernameskipperingressnamespacenamekubesystempodnameingressrestrictedskipperingressskipper d hrcontainerimageregistryopensourcezalandopathfinderskipperv containerimageiddockerpullableregistryopensourcezalandopathfinderskippersha a ab ea bb e fd aaaa c bad d a fb d e ca c aa podidc d cdb eaa a c d c ehostip euwest computeinternallabelscontrollerrevisionhash c c podtemplategeneration appkubernetesioinstanceingressrestrictedappkubernetesionameskipperingressskippermasterurl log APP time T Z levelinfo msg Client request context canceled nstreamstderrdockercontainerid f bee e f e a ff eed f c dea b f c a f fkubernetescontainernameskipperingressnamespacenamekubesystempodnameingressrestrictedskipperingressskipper b blcontainerimageregistryopensourcezalandopathfinderskipperv containerimageiddockerpullableregistryopensourcezalandopathfinderskippersha a ab ea bb e fd aaaa c bad d a fb d e ca c aa podidc cdb eaa a c d c ehostip euwest computeinternallabelscontrollerrevisionhash c c podtemplategeneration appkubernetesioinstanceingressrestrictedappkubernetesionameskipperingressskippermasterurl Update Another occurence After manually editing one of the scoreboard ingress objects changing path into and vice versa we got in a state where one skipper pod was behaving correctly while another consistently returns s for some services Running repeated curl requests curl I curl I ingressrestrictedskipperingressskipper b bl grafana always hello world always ingressrestrictedskipperingressskipper d hr both always kubectl n monitoring get ep prometheusgrafana o wide NAME ENDPOINTS AGE prometheusgrafana d kubectl n examples get ep helloworldrestricted o wide NAME ENDPOINTS AGE helloworldrestricted d The misbehaving pod ingressrestrictedskipperingressskipper b bl ingressrestrictedskipperingressskipper b bl wget Odevstdout Connecting to localhost kubehealthz Pathkubesystemhealthz SourceFromLast fd status shunt kuberedirect PathRegexp PathRegexp HeaderXForwardedProto http redirectTo https shunt kubeexampleshelloworldrestrictedhellorestrictedapps oscnutestk scloudsanomacomhelloworldrestricted Host hello restricted apps oscnutest k s cloud sanoma com PathSubtree kubeexampleshelloworldundeterminedhelloundeterminedapps oscnutestk scloudsanomacomhelloworldundetermined Host hello undetermined apps oscnutest k s cloud sanoma com PathSubtree kubemonitoringprometheusgrafanagrafanarestrictedapps oscnutestk scloudsanomacomprometheusgrafana Host grafana restricted apps oscnutest k s cloud sanoma com PathSubtree kubemonitoringprometheusprometheusoperalertmanageralertmanagerrestrictedapps oscnutestk scloudsanomacomprometheusprometheusoperalertmanager Host alertmanager restricted apps oscnutest k s cloud sanoma com PathSubtree kubemonitoringprometheusprometheusoperprometheusprometheusrestrictedapps oscnutestk scloudsanomacomprometheusprometheusoperprometheus Host prometheus restricted apps oscnutest k s cloud sanoma com PathSubtree kubetestscoreboardapiscoreboardapicacheingressscoreboardapitestnusportnlscoreboardapicacheservice Host scoreboardapi test nusport nl PathSubtree kubetestscoreboardapiscoreboardapicometingresscomettestnusportnlscoreboardapicometservice Host comet test nusport nl PathSubtree kubectl n kubesystem log podingressrestrictedskipperingressskipper b bl tail f grep E hellografana Jan HEAD login HTTP curl grafanarestrictedapps oscnutestk scloudsanomacom Jan HEAD login HTTP curl grafanarestrictedapps oscnutestk scloudsanomacom Jan HEAD HTTP curl hellorestrictedapps oscnutestk scloudsanomacom Jan HEAD login HTTP curl grafanarestrictedapps oscnutestk scloudsanomacom Jan HEAD login HTTP curl grafanarestrictedapps oscnutestk scloudsanomacom Jan HEAD login HTTP curl grafanarestrictedapps oscnutestk scloudsanomacom Jan HEAD HTTP curl hellorestrictedapps oscnutestk scloudsanomacom Jan HEAD login HTTP curl grafanarestrictedapps oscnutestk scloudsanomacom The correctly behaving pod ingressrestrictedskipperingressskipper d hr ingressrestrictedskipperingressskipper d hr wget Odevstdout Connecting to localhost kubehealthz Pathkubesystemhealthz SourceFromLast fd status shunt kuberedirect PathRegexp PathRegexp HeaderXForwardedProto http redirectTo https shunt kubeexampleshelloworldrestrictedhellorestrictedapps oscnutestk scloudsanomacomhelloworldrestricted Host hello restricted apps oscnutest k s cloud sanoma com PathSubtree kubeexampleshelloworldundeterminedhelloundeterminedapps oscnutestk scloudsanomacomhelloworldundetermined Host hello undetermined apps oscnutest k s cloud sanoma com PathSubtree kubemonitoringprometheusgrafanagrafanarestrictedapps oscnutestk scloudsanomacomprometheusgrafana Host grafana restricted apps oscnutest k s cloud sanoma com PathSubtree kubemonitoringprometheusprometheusoperalertmanageralertmanagerrestrictedapps oscnutestk scloudsanomacomprometheusprometheusoperalertmanager Host alertmanager restricted apps oscnutest k s cloud sanoma com PathSubtree kubemonitoringprometheusprometheusoperprometheusprometheusrestrictedapps oscnutestk scloudsanomacomprometheusprometheusoperprometheus Host prometheus restricted apps oscnutest k s cloud sanoma com PathSubtree kubetestscoreboardapiscoreboardapicacheingressscoreboardapitestnusportnlscoreboardapicacheservice Host scoreboardapi test nusport nl PathSubtree kubetestscoreboardapiscoreboardapicometingresscomettestnusportnlscoreboardapicometservice Host comet test nusport nl PathSubtree kubectl n kubesystem log podingressrestrictedskipperingressskipper d hr tail f grep E hellografana Jan HEAD login HTTP curl grafanarestrictedapps oscnutestk scloudsanomacom Jan HEAD login HTTP curl grafanarestrictedapps oscnutestk scloudsanomacom Jan HEAD HTTP curl hellorestrictedapps oscnutestk scloudsanomacom Jan HEAD HTTP curl hellorestrictedapps oscnutestk scloudsanomacom Jan HEAD HTTP curl hellorestrictedapps oscnutestk scloudsanomacom Jan HEAD login HTTP curl grafanarestrictedapps oscnutestk scloudsanomacom Jan HEAD login HTTP curl grafanarestrictedapps oscnutestk scloudsanomacom Jan HEAD login HTTP curl grafanarestrictedapps oscnutestk scloudsanomacom Jan HEAD HTTP curl hellorestrictedapps oscnutestk scloudsanomacom Jan HEAD login HTTP curl grafanarestrictedapps oscnutestk scloudsanomacom Jan HEAD HTTP curl hellorestrictedapps oscnutestk scloudsanomacom Is your feature request related to a problem Please describe The documentation of setPath states that applying template operations in the value is experimental The feature has been there for years now and probably tested enough in production to be nonexperimental Describe the solution you would like Remove the mention of experimental status from the comments Would you like to work on it Yes Is your feature request related to a problem Please describe I need to use separate filters for separate HTTP Methods but same path EG I need to modify body of the request only for PUTPOST and PATCH This will cause configuration duplication as only single method is allowed for predicate Example putoperations Path MethodPUT modPathsomepath anotherpath modifyBody postoperations Path MethodPOST modPathsomepath anotherpath modifyBody operations Path modPathsomepath anotherpath Would become putoperations Path MethodPUT POST PATCH modPathsomepath anotherpath modifyBody operations Path modPathsomepath anotherpath There also might be other use cases for that Describe the solution you would like Allow Method predicate accept an array instead of single value Would you like to work on it Yes but I might be missing some details on why its not already done Is your feature request related to a problem Please describe I d like to have different rate limits for different users on the same route where a user would be identified by a header and the user defines the rate limit count and period which themselves could be headers Describe the solution you would like Something along the lines of the clusterClientRatelimit filter but without the static rate Instead of clusterClientRatelimitgroup h XID maybe something like filtergroup h XRatelimitCount XRatelimitPeriod XID where youd be able to define headers to check what the ratelimit count and period is for the given request and defaults otherwise Describe alternatives youve considered optional Creating multiple routes such as auth Pathfoo webhookurl XIDXRatelimitCountXRatelimitPeriod loopback user Pathfoo HeaderRegexpXID HeaderXRatelimitCount HeaderXRatelimitPeriod h dropResonseHeaderXID dropResonseHeaderXRatelimitCount dropResonseHeaderXRatelimitPeriod clusterClientRatelimitgroup h XID backend user Pathfoo HeaderRegexpXID HeaderXRatelimitCount HeaderXRatelimitPeriod h dropResonseHeaderXID dropResonseHeaderXRatelimitCount dropResonseHeaderXRatelimitPeriod clusterClientRatelimitgroup h XID backend default Pathfoo HeaderRegexpXID HeaderRegexpXRatelimitCount HeaderRegexpXRatelimitPeriod dropResonseHeaderXID dropResonseHeaderXRatelimitCount dropResonseHeaderXRatelimitPeriod clusterClientRatelimitgroup h XID backend Additional context optional I want to make sure that you couldnt get to foo as described above without passing through webhook successfully and due to the above workaround this could possibly be bypassed This is also a lot of predicatesfilters due to the requirement of loopback which could become unmaintainable for lots of routes Would you like to work on it Yes but would like some direction first There could also be a solution to write a customer filter if this is not something that is wanted in the main codebase refactor registry and add interface to make it testable test the full roundtrip of an OpenIDConnect request Signedoffby Sandor Sz cs sandorszuecszalandode Problem There is no effective way of collecting aggregated metrics for arbitrary sets of routes Skipper supports collecting metrics for individual routes which then can be used to create any aggregates but this has two problems when the set of routes belonging together changes the configuration of the metric collector needs to be updated potentiall or the route IDs have to follow a pattern when working with a large number of routes k the metrics keyspace may become too large Example When generating routes by the StackSet Controller it is important to measure current traffic and error rate of the different versions stacks during traffic switching Proposed Solution Create a filter whose only purpose is to mark a route which metrics group it belongs to Using the above example it would work as follows the StackSet foo has two active stacks v and v the ingress objects generated by the StackSet Controller would be annotated to include the version the routes generated from the ingress would include a filter either metricsGroupfoov or metricsGroupfoov Note This approach may require some kind of garbage collection mechanism of the metrics keys to avoid keeping obsolete metrics objects for too long Implementation this feature can rely on the existing filtersFilterContextMetrics feature that allows to define custom metrics from filters programmatically Related oidc filters use openid configuration URL wellknownopenidconfiguration to fetch endpoint configrations If this URL is not responding request get an error it will try only after the regular interval to fetch the data again This can lead to downtime I would suggest that we do a retry with exponential backoff in the config requests on errors Is your feature request related to a problem Please describe For example in Kubernetes people want to use server push etc features from h Describe the solution you would like The proxy should be able to connect with H C Describe alternatives youve considered optional Create mTLS infrastructure which can be a huge change without providing too much value Would you like to work on it Yes Skipper supports now graceful shutdown and TCP queue when run with HTTP without TLS We should enables these features for HTTPS as well