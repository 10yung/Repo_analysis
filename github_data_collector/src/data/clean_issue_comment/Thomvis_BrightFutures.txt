Hello Thank you for BrightFutures In this pull request I added func mapU context escaping ExecutionContext keyPath KeyPathValueValue U FutureU ValueError It is similar to map that you already have but accepts KeyPath instead of a closure Looks like has not been published to Cocopods Latest version that shows up in the repos is Thx sswiftversion will produce SWIFTVERSION in file projectpxproj which keeps Xcode to prompt to convert to Swift Setting sswiftversion fix this issue This pull request adds the functionality to AsyncType to be dispatched earliest at the given deadline This is similar to delay However instead of always waiting for a fixed interval earliestat will dispatch immediately if the deadline has already passed In other words earliestat ensures a minimum time before the future completes Motivation When using BrightFutures in combination with network requests you cant know when the server will respond to your request If you have some animations for such network requests eg activity indicators you want the user interface to behave in a smooth manner This includes no rapid UI changes With earliestat you can ensure that the user will at least catch a glimpse at the activity indicator when having a fast internet connection On the other hand there is no need for waiting an additonal interval when the network request returns after two seconds Example swift spinnerstartAnimation doNetworkTaskearliestat millisecondsfromNowonComplete in spinnerstopAnimation I call executeNext more than times app crash I tested with physical device This is my sample code Please helps me class ViewController UIViewController enum TestError Error override func viewDidLoad superviewDidLoad executeAllnumber onSuccess printsuccess private func executeAllnumber Int FutureVoid TestError return executeNextnumber number private func executeNextnumber Int FutureVoid TestError let promise PromiseVoid TestError executeOnenumber numberonSuccess if number promisesuccess else promisecompleteWithselfexecuteNextnumber number return promisefuture private func executeOnenumber Int FutureVoid TestError let promise PromiseVoid TestError promisesuccess return promisefuture Thank you Hi I have a weird error since I upgraded my code to swift error missing argument for parameter in call promisesuccess Void BrightFuturesPromise note success declared here public func success value T The compiler is claiming an argument if I insert Void promisesuccessVoid it will complain that this method doesnt have any argument Is there any workaround Thanks JC