Whether I start on a weekend date or I use the holidays feature if my starting date is a non workday and I add businessdays to it it will skip to the next day before doing the calculaiton Example holiday dt Datecivil Which is veterans day specified in holdays businessdayafterdt will yield Wednesday instead of Tuesday Example weekend dt Datecivil businessdaysafterdt Tue Nov Is this by design How do I work around this Do I need to check the start date for workday after the calculation and subtract Ive come across a situation where Id like to have a date for The friday that follows X So if X is a tuesday I want it to be the following friday if X is a friday it can return X Similar to how firstbusinessday will return the given day if it is a business day otherwise the next one If the immediately following friday isnt a workday it can return the one after that If youve done something impossible like chosen saturday and no Saturdays can be work days maybe raise an error or return nil I would propose perhaps just an additional param in firstbusinessday something like TimefirstbusinessdayTimecurrent friday Or TimefirstbusinessdayTimecurrent dayofweek friday Update FWIW Im just going to do it this way for now which is good enough for my usecase I think Timecurrent daysDatecurrentwdaydays days Dont know if this is useful but provides functionality for getting the next business day that does not involve the current day background I would like to use date end of workday like time object BusinessTimeConfigbeginningofworkdaystrftimeat IM so I add strftime method Also I thought BusinessTimeParsedTime should be return Time or DateTime object it has hour min sec but it cannot use simiilar to use Time or DateTime So I add totime todatetime method resolves Is there any way or any plans to add work hours to specific dates In our country we have short days usually minus hour in day before each holiday Sometimes because of the holidays at least in Russia working days for the weekend can be moved back For example because of the holiday on May Saturday April was a working day despite the fact that the day working week was in the config dateworkday method returned false for this date I want to be able to specify forcedworkdays for such cases It works like a holidays option ruby workday Dateparse BusinessTimeConfigforcedworkdays workday or for YAML config yaml businesstime forcedworkdays April Modified code test and documentation to allow passing a holiday or array of holidays with each invocation This is particularly useful when dealing with potentially different regional holidays during each invocations The title is quite selfexplanatory businestimeuntil returns inconsistent results when called on TimeDateTime objects and holidays are within the range Below is an example of such an inconsistency BusinessTimeConfigholidaysclear SortedSet BusinessTimeConfigholidays Datenew SortedSet Wed Oct start Timenew fin Timenew startbusinesstimeuntilfin starttodatetimebusinesstimeuntilfintodatetimetof Often the local config is used in several parts of an application For example ruby NYOFFICECONFIG holidays endofworkingday freeze ABUDHABIOFFICECONFIG holidays workweek wsun mon tue wed thu freeze BusinessDaysConfigwithNYOFFICECONFIG businesshoursfromnow BusinessDaysConfigwithABUDHABIOFFICECONFIG businessdaysago Clearly continually creating and destroying the local configs could be avoided if the generated configs were cached If the same frozen object is passed again one could reuse the previous local config I can do that if you are interested