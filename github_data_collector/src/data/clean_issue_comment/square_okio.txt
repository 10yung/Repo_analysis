Facing this exception while reading a message byte coming only for a particular server host stacktrace javalangIllegalArgumentException byteCount at okioRealBufferedSourcerequestRealBufferedSourcejava at okioRealBufferedSourcerequireRealBufferedSourcejava at okioRealBufferedSourcereadUtf RealBufferedSourcejava okio version A quick response would be appreciated Thanks Hello After reading the documentation available I would expect this simple example to potentially time out Source source Okiosourcenew FileInputStreamfile sourcetimeouttimeout TimeUnitsSECONDS sourcereadByte In this case file is a unix named pipe ie created using RuntimegetRuntimeexecmkfifo pipetoStringwaitFor However when the pipe writer doesnt write anything to the pipe the read hangs indefinitely ie the timeout is never triggered Is this scenario not supported ArrayBuffer UInt Array etc Some operations are implemented by creating a conventional ByteString We should cache this to limit the cost of using a SegmentedByteString I faced this issue writing code using web j library which in turn uses okhttp and okio After application finished few daemon threads keep running One of them is Okio Watchdog Maven exec plugin makes warning about that waits for seconds and kills threads WARNING thread Thread RxSchedulerPurge orgweb jtestWeb jTestApp was interrupted but is still alive after waiting at least msecs WARNING thread Thread RxSchedulerPurge orgweb jtestWeb jTestApp will linger despite being asked to die via interruption WARNING thread Thread RxCachedWorkerPoolEvictor orgweb jtestWeb jTestApp will linger despite being asked to die via interruption WARNING thread Thread OkHttp ConnectionPool orgweb jtestWeb jTestApp will linger despite being asked to die via interruption WARNING thread Thread Okio Watchdog orgweb jtestWeb jTestApp will linger despite being asked to die via interruption WARNING NOTE threads did not finish despite being asked to via interruption This is not a problem with execjava it is a problem with the running code Although not serious it should be remedied WARNING Couldnt destroy threadgroup orgcodehausmojoexecExecJavaMojoIsolatedThreadGroup nameorgweb jtestWeb jTestAppmaxpri javalangIllegalThreadStateException Stacktrace Okio Watchdog daemon prio osprio tid x fc c nid x dcd in Objectwait x fc b javalangThreadState TIMEDWAITING on object monitor at javalangObjectwaitNative Method waiting on x ec bb a javalangClass for okioAsyncTimeout at okioAsyncTimeoutawaitTimeoutAsyncTimeoutjava at okioAsyncTimeoutWatchdogrunAsyncTimeoutjava locked x ec bb a javalangClass for okioAsyncTimeout Looking into okio code I see that okioAsyncTimeoutWatchdogrun ignores InterruptedException Is it made intentionally What is the reason Okio version but I see the latest one is affected as well Original issue Test app Looking at FileOperator from OkHttp and potentially my own need for random access file operations Ive put together some ideas for an Okio native Store Still a bunch to do like documentation and multiplatform support but I thought this would be a good place to discuss Do you still want this abstraction in Okio What should the API require things like size and truncate Feel free to close this pull request if this is not something you want in Okio Otherwise let me know what changes you would like to see and I will work toward getting this pull request ready for merge Currently we are getting occasional crashes from our crashreport that look like the following okioBufferwrite javalangIllegalArgumentException Parameter specified as nonnull is null method kotlinjvminternalIntrinsicscheckParameterIsNotNull parameter byteString okioBufferwrite Bufferjava line okhttp CacheEntryreadCertificateList Cachejava line okhttp CacheEntryinit Cachejava line okhttp Cacheget Cachejava line okhttp Cache get Cachejava line okhttp internalcacheCacheInterceptorintercept CacheInterceptorjava line okhttp internalhttpRealInterceptorChainproceed RealInterceptorChainjava line okhttp internalhttpRealInterceptorChainproceed RealInterceptorChainjava line okhttp internalhttpBridgeInterceptorintercept BridgeInterceptorjava line okhttp internalhttpRealInterceptorChainproceed RealInterceptorChainjava line okhttp internalhttpRetryAndFollowUpInterceptorintercept RetryAndFollowUpInterceptorjava line okhttp internalhttpRealInterceptorChainproceed RealInterceptorChainjava line okhttp internalhttpRealInterceptorChainproceed RealInterceptorChainjava line okhttp RealCallgetResponseWithInterceptorChain RealCalljava line okhttp RealCallAsyncCallexecute RealCalljava line okhttp internalNamedRunnablerun NamedRunnablejava line javautilconcurrentThreadPoolExecutorrunWorker ThreadPoolExecutorjava line How can we address this feature In Okio x samples there is only jvm target sample Could you provide an iOS target sample okio version Name of automatic module okio is unstable it is derived from the modules file name 