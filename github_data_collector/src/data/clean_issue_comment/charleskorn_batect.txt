This is a draft of support for custom logconfig type This issue happens when I am trying to run batect which is going to run a docker in our Jenkin agent which is a dockerised agent hosted on ecs I have mounted docker socket into docker in batectyaml as below containers buildenv builddirectory devinfrabuildenv volumes local container code options cached varrundockersockvarrundockersock any idea what could cause this issue Hi there I started playing with batect very great tool and I noticed host environment variables arent taken into account when mounting volumes Here is my test I want to build and run a container that writes a simple file to my host through a Docker volume Batect description v yml containers test builddirectory volumes local homeUSERtest container hometest tasks setup run container test Dockerfile Dockerfile FROM alpine RUN mkdir p hometest WORKDIR hometest CMD touch mysharedfile Trace bash gobahlabs batectissue ls home gobah gobahlabs batectissue echo USER gobah gobahlabs batectissue batect setup Running setup test running setup finished with exit code in s gobahlabs batectissue ls home USER gobah It would be great to allow environment variable interpretation for volume paths For a specific case I want to run integration tests via batect inside GitlabCI It works very well but I need to mount a volume from buildsCIPROJECTPATH to get my output files I can obviously read the environment variable and then dynamically rewrite my batect file but it would be more elegant to use the env variable directly in the volume paths Continuation of discussion in for the more advanced use case some way to run commands in another container after another container becomes healthy but before any containers that depend on it start From what Ive read in the documentation tasks can be executed with additional arguments passed to the specified command like so batect mytask arg arg Also when attempting to use shell interpolation in the command it is required to modify the entrypoint to be something like binbash c necessitating the command be quoted Unfortunately because the command is considered a single unit passing additional arguments to the task doesnt add them on the inside Instead of my command being executed as binbash c my command arg arg it gets executed as binbash c my command arg arg Some fiddling around shows that this can be workedaround by specifying the command as my command Though adding this to all commands that require any kind of interpolation seems like it could be standardised with an option of some description It would be amazing if batect supported bashshell autocompletion eg so I can type batect bu hit tab and have it autocomplete to batect build As a user When I mistype the task name Andbatect gives you a suggestion of what I mostlikely meant I want batect to ask me to confirm if that is the command i meant probably with yn and if i confirmi want batect to run that command It would be great if you could define a task that executes on the host not in a Docker container This is useful because It means you can use batect as your task runner for all tasks even the ones that cantshouldnt run in Docker It means when youre setting up task workflows using dependencies you can include these A prime example I want to run a bash script that build a Docker image for my Java app The Dockerfile includes a COPY that takes my appzip which was built by Gradle and extracts it into the image I want to use that bash scripttask as a dependency of a task that then uses the new Docker image as part of a Terraform deployment This means my task flow goes Compile the Java done in a batect javaenv Run shell script to build and push the Docker image Run the Terraform done in a terraformenv More steps Right now is done in a dockerenv which actually doesnt contain much and mounts the Docker socket from the host Ideally it would be run directly on the host but I cant do that and still have my endtoend task workflow with batect Our batectyml currently has many many lines under environment blocks that look like environment HOSTNAME HOSTNAME When you want to pass a host variable through to the container as the same name and value a more concise format could be helpful This is something DockerCompose and Buildkite do well Eg environment HOSTNAME Hi I am using cntlm to go through a proxy The environment variables that I have set in my host are something like this bash httpsproxy httpproxy I have to set the variables in batectyml to something like this yml environment httpsproxy httpproxy Otherwise batectyml picks up the ones set in the environment which wouldnt work within the container