Script for exporting ALL existing AWS resources to Terraform It generated awsiampolicyattachment Is this a bug dbpg command is able to get awsdbparametergroup resources it would be good to be able to get options defined at the cluster level in other words awsrdsclusterparametergroup resources thanks for the great work Heres the error I get when I try to merge into an existing terraformtfstate terraforming cwa tfstate mergeterraformtfstate profile xxxxxxx varlibgems gemsterraforming libterraformingclirb in tfstate undefined method for nilNilClass NoMethodError from varlibgems gemsterraforming libterraformingclirb in execute from varlibgems gemsterraforming libterraformingclirb in cwa from varlibgems gemsthor libthorcommandrb in run from varlibgems gemsthor libthorinvocationrb in invokecommand from varlibgems gemsthor libthorrb in dispatch from varlibgems gemsthor libthorbaserb in start from varlibgems gemsterraforming binterraforming in top required from usrlocalbinterraforming in load from usrlocalbinterraforming in main Hello It would be nice to have the option iamugm because in Terraform this option allow import and the similar one that Terraforming uses iamgp doesnt Upstream suggest the use of awsiamusergroupmembership instead of awsiamgroupmembership due conficts Thanks Why Theres iampolicyattachment but its exclusive and theres a risk to accidentally revoke an attachment that is managed outside of this resource For more details please refer to the warning on the official documentation What Use iamrolepolicyattachment iamgrouppolicyattachment or iamuserpolicyattachment as the documentation suggests Only iamrolepolicyattachment is added in this PR Check Added resource iamrolepolicyattachment x Class name IAMRolePolicyAttachment x File name iamrolepolicyattachmentrb x Command name iamrpa x Executed terraform plan for my own resources and confirmed theres no changes terraform plan No changes Infrastructure is uptodate This means that Terraform did not detect any differences between your configuration and real physical resources that exist As a result no actions need to be performed Future work Add iamuserpolicyattachment and iamgrouppolicyattachment When doing the export to ec terraforming ec the tags appear in the following format tags Team teamx Name superinstancenew Purpose production When trying to plan that terraform latest complain about the format and have to manually correct to tags Team teamx Name superinstancenew Purpose production terraforming r r tfstate usrlocalbinterraforming usrlocalCellarterraforming libexecbinterraforming SystemLibraryFrameworksRubyframeworkVersions usrbinruby bad interpreter No such file or directory usrlocalbinterraforming line usrlocalCellarterraforming libexecbinterraforming Undefined error ProductName Mac OS X ProductVersion BuildVersion B f brew version Homebrew Homebrewhomebrewcore git revision last commit Homebrewhomebrewcask git revision e last commit Yesterday I tried to use terraforming with to get ec instances and there was some uncompatibility with new version of terraform In fact tags arent declared as resource but as a map so it changes to tags instead of tags and keys in this shouldnt be specified as a String After rebuilding it works correctly