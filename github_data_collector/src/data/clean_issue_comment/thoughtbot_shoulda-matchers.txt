Hi this PR solves the issue Its a draft for now I would love to know your opinion about it One of the things that needs to be improved in this PR is the creation of the actiontextrichtexts table Im out of ideas for now any suggestions This issue exists to collect the intermittent failures that sometimes pop up on Travis missing attribute scope Hello first of all thank you all for maintaining and improving this gem So I was wondering if there its a possibility to add something like this it isexpectedto haverichtextbody To test ActionText with RSpec Example class Post ApplicationRecord hasrichtext body end I would love to work on this if by chance this suggestion is accepted Thank you for your time EDIT For now Im using a custom matcher RSpecMatchersdefine haverichtext do expected match do actual actualsendexpectedclass ActionTextRichText end end Were a bit behind in supporting Minitest at the moment I dont think we even test that you can use controller matchers in an ActionDispatchIntegrationTest although in theory they should work I know the README advises staying on shouldamatchers x but given that we are to x now what if you try upgrading Theres a prerelease version of shouldacontext out that should fix any compatibility issues Instead of using this in your gemfile gem shoulda gem shouldamatchers try gem shouldacontext rc gem shouldamatchers Then add the following to your testhelper ruby ShouldaMatchersconfigure do config configintegrate do with withtestframework minitest withlibrary rails end end Originally posted by mcmire in I noticed this comment in I went ahead and tried this myself and was able to start using the v matchers without issue Im using Minitest Im curious whats holding back support of minitest with shouldacontext And even so should the docs for shouldamatchers be updated to suggest people use the above suggestion instead of such an old version of shouldamathers I just wrote this in case youre interested in using something like it ruby Usage it isexpectedto usesavecallbacksomethingikeep before it isexpectedto usetouchcallbacksomethingitouch after it isexpectedto usecommitcallbacksomethingicommitto after availablecallbacks ActiveRecordCallbacksCALLBACKSmap name nametosgsubafterbeforearound uniqmap tosym availablecallbacks initialize find touch validation save create update destroy commit rollback availablecallbackseach do availablecallback RSpecMatchersdefine useavailablecallbackcallback do callbackname callbackkind match do expectcallbacksforkindnamescallbackkindto includecallbackname end description do have subjectclassname callbackkindcallbackeventname callbackname end failuremessage do expected subjectclassname callbackeventname callbackname callbackkind inspect to be in callbacknamesandkindsinspect end failuremessagewhennegated do expected subjectclassname callbackeventname callbackname callbackkind inspect would not be in callbacknamesandkindsinspect end def callbacksforkindnamescallbackkind callbacksforkindcallbackkindmap filter end def callbacksforkindcallbackkind callbacksselect callback callbackkindeqlcallbackkind end def callbacknamesandkinds callbacksmap callback callbackeventname callbackfilter callbackkind end def callbacks callbacks subjectclasspublicsendcallbackeventnamecallbacks end definemethodcallbackeventname do availablecallback end def subjectclass subjectclass end end end Update instructions from Im using rails and with most of ActionController matchers is not working Tests Controller ruby require testhelper class GradesControllerTest ActionDispatchIntegrationTest extend ShouldaMatchersActionController context GET index do setup get index should usebeforeactionsetcourse should rendertemplateindex should respondwithsuccess end Errors ruby homejuanfrarbenvversions librubygems gemsshouldamatchers libshouldamatchersactivemodelvalidateinclusionofmatcherrb warning BigDecimalnew is deprecated use BigDecimal method instead Run options seed Running E Error GradesControllerTesttest GET index should render template index NoMethodError undefined method body for nilNilClass rails test homexxxxrbenvversions librubygems gemsshouldacontext libshouldacontextcontextrb E Error GradesControllerTesttest GET index should respond with NoMethodError undefined method responsecode for nilNilClass rails test homexxxxrbenvversions librubygems gemsshouldacontext libshouldacontextcontextrb Gemfile ruby group test do Adds support for Capybara system testing and selenium driver gem capybara gem seleniumwebdriver gem simplecov require false group test Easy installation and use of web drivers to run system tests with browsers gem webdrivers gem railscontrollertesting gem shoulda gem shouldamatchers end I think this is someway relate to this issues I have add this line to make it work for some of the matchers as you suggest in ruby extend ShouldaMatchersActionController But in the matchers that need the className is not working at all This feels similar to this longago bug which was fixed here Model of class Classification ApplicationRecord belongsto classifiable polymorphic true belongsto topic validates classifiableid uniqueness scope topicid classifiabletype end Spec of require railshelper describe Classification do it should belongtoclassifiable it should belongtotopic it ensures uniqueness do createclassification should validateuniquenessofclassifiableidscopedto topicid classifiabletype end end Relevant output is Failures Classification ensures uniqueness FailureError should validateuniquenessofclassifiableidscopedto topicid classifiabletype ActiveRecordSubclassNotFound Invalid singletable inheritance type Show is not a subclass of ShouldaMatchersActiveRecordUniquenessTestModelsProducu specmodelsclassificationspecrb in block levels in top required That Producu on the very end there in the error makes me suspect that were calling next on a string with Product or something somewhere in the codebase Add haveimplicitordercolumn matcher to test rails implicitordercolumn It looks like validateabsenceof doesnt work with array columns For example given a Rails application using Postgres that has migration with this line ruby tstring widgets array true and the following model validations ruby validates widgets absence true and the following test ruby it should validateabsenceofwidgets the matcher fails and produces the error below Expected SomeModel to validate that widgets is emptyfalsy but this could not be proved After setting widgets to an arbitrary value which was read back as the matcher expected the SomeModel to be invalid but it was valid instead As indicated in the message above widgets seems to be changing certain values as they are set and this could have something to do with why this test is failing If youve overridden the writer method for this attribute then you may need to change it to make this test pass or do something else entirely I think this is happening because the value chosen to test for presence here is the string an arbitrary value Because its setting an array column the string is being converted to so the test fails Ideally it would know that its an array column and use something like an arbitrary value instead There is an array method it could use in the Column class subjectclasscolumnshash attributetos array