Add iOS equivalent of GLnative implementation attempts to show geometry from lower zoom levels when panningzooming out a map and not having those tiles available yet Imo this is the best possible UX that we could give to our end users and this should remain our default implementation A customer however is reaching out to make this behavior configurable to match gljs implementation With gljs you panzoom and see the background of the style until the tiles are loaded Sidenote using setPrefetchZoomDelta doesnt result in the expected behavior cc tmpsantos malwoodsantoro Launch Checklist Thanks for the PR Feel free to add or remove items from the checklist briefly describe the changes in this PR include beforeafter visuals or gifs if this PR includes visual changes write tests for all new functionality document any changes to public APIs tagged mapboxmapsandroid mapboxmapsios mapboxcoresdk if this PR adds or updates a public API tagged mapboxgljs if this PR includes shader changes or needs a js port apply needs changelog label if a changelog is needed remove label when added Summary of the issue The customer creates and adds a layer that is built from images to his style At the horizontal boundary between the lower images and the upper images is a small gap even though the images themselves do not include a gap in their bitmap x There is no vertical gap between the left and the right images They do this by val style mapBoxMapstyle return val rasterLayer RasterLayerlayerId sourceId rasterLayersetPropertiesPropertyFactoryrasterOpacity f styleaddLayerrasterLayer for tile in tiles val layerId getLayerIdtile val sourceId getSourceIdtile val imageQuad getLatLngQuadtilex tiley tilezoom val bitmap loadBitmapFromAssetstile addImageSourceimageQuad bitmap sourceId addRasterLayerlayerId sourceId private fun getLatLngQuadx Int y Int zoom Int LatLngQuad val top TileUtiltile laty zoom val left TileUtiltile lonx zoom val bottom TileUtiltile laty zoom val right TileUtiltile lonx zoom val topLeft LatLngtop left val topRight LatLngtop right val bottomRight LatLngbottom right val bottomLeft LatLngbottom left return LatLngQuad topLeft topRight bottomRight bottomLeft source code is available What have you tried so far I have so far reproduced the issue The customer is building with a prerelease version of Android Studio Version rc I was able to compile it with the version available here They are using the new method for databinding ViewBinding This new method does not appear to be the problem I have modified the code to be compileable on Android Studio without the use of ViewBinding The issue persists Workaround The only workaround I found was to stretch the image by changing the bottom border of the top images by After that no gap was visible when zooming in private fun getLatLngQuadx Int y Int zoom Int LatLngQuad var top TileUtiltile laty zoom var left TileUtiltile lonx zoom var bottom TileUtiltile lat y zoom var right TileUtiltile lonx zoom when x when y left images top bottom reduced the bottom by top bottom when y right images top bottom did not reduce the bottom so the difference is visible top bottom val topLeft LatLngtop left val topRight LatLngtop right val bottomRight LatLngbottom right val bottomLeft LatLngbottom left return LatLngQuad topLeft topRight bottomRight bottomLeft Steps to reproduce The customer has shared his source code In order to compile it please use Android Studio rc available here FYI Same issue occurs when removing ViewBinding and using findViewById and compiling with a released version of Android Studio Platform Android Mapbox SDK version Android Mapbox SDK Steps to trigger behavior Run the application Expected behavior There should not be a gap in between the top images and the bottom images Actual behavior There is a horizontal gap between the top images and the bottom images The issue was raised in Preliminary profiling running symbol render test shows heap peak increase from master branch MB to stretchableicons MB however memory usage goes back to original level when temporary heap allocated vectors are destructed We should investigate where small vectors are used and possibility of inlining those Few known places in a codebase ImageStretches in Image Cuts in quads creation StyledText in BiDi Why do white lines appear gray Hello how to add marker on map location on MapBox SDK Thank you in advance We were able to reproduce this crash on CI when updating a downstream project Original stacktrace here Symbolicated stacktrace Crash dump Build fingerprint HuaweiH L hwH HDH L C B userotarelkeysreleasekeys pid tid name OkHttp Dispatch commapboxmapboxsdkpluginschinatestapp signal SIGSEGV code SEGVMAPERR fault addr deadbaad Stack frame pc systemliblibcso dlfree Stack frame pc dea systemliblibcso free Stack frame pc b systemliblibcryptoso CRYPTOfree Stack frame pc f systemliblibsslso sslparseserverhellotlsext Stack frame pc d systemliblibsslso ssl getserverhello Stack frame pc cf systemliblibsslso ssl connect Stack frame pc f b systemliblibsslso SSLdohandshake Stack frame pc ae systemliblibjavacryptoso Stack frame pc eb c systemliblibdvmso dvmPlatformInvoke Stack frame pc f systemliblibdvmso dvmCallJNIMethodunsigned int const JValue Method const Thread Stack frame pc fa systemliblibdvmso Stack frame pc f systemliblibdvmso dvmMterpStdThread Stack frame pc c systemliblibdvmso dvmInterpretThread Method const JValue Stack frame pc systemliblibdvmso dvmCallMethodVThread Method const Object bool JValue stdvalist Stack frame pc systemliblibdvmso dvmCallMethodThread Method const Object JValue Stack frame pc systemliblibdvmso Stack frame pc d systemliblibcso threadentry Stack frame pc d a systemliblibcso pthreadcreate tmpsantos can this be investigated by your team Hello and thanks for contributing to the Mapbox Maps SDKs for iOS and macOS To help us diagnose your problem quickly please Include a minimal demonstration of the bug including code logs and screenshots Ensure you can reproduce the bug using the latest release Only post to report a bug or request a feature direct all other questions to Start with a brief description below this line When iconAllowsOverlap is false and the values for the symbolSortKey evaluate to doubles the ordering of those values doesnt change the zlevel of where the icons are drawn in a style layer The same feature will always appear on top of the other whether you reverse the values for the sort by multiplying by or leave them asis Somewhat similar to Steps to reproduce Add a symbol style layer to the map with overlapping features Set textAllowsOverlap and iconAllowsOverlap to false Set textOptional to true Ensure both features have values for the symbolSortKey Make sure these values are doubles I used and Expected behavior Im trying to get the feature with the higher sort of to appear on top Actual behavior With the floating points above the feature with the sort value of will always be on top This is also true if you reverse the order by multiplying the sort values by If I set iconAllowsOverlap to true the sort order appears to be honored and the feature with the larger sort of is drawn on top This gist replicates the issue Here is a working project with the code from the gist Just supply an API key in AppDelegateswift IconOrderingProjectzip Configuration Mapbox SDK versions iOSmacOS versions iOS Devicesimulator models iPhone Xcode version 