Designing for eventual consistency is difficult or at least different We should provide guidelines for various design choices such as readwrite consistency levels Lets collect some topics in this issue Please contribute Links to blog posts or other related readingpresentations i noticed akkaDataReplication also use VectorClocksource from Akka i have some question use ordered UniqueAddress for compare in Akkas VectorClock maybe it is ok because the akka memberships status maintained by one leader nodeand leader is in the first place in UniqueAddress of nodes ring my understanding is correct but for ORSets merge it use Sets VectorClock to compare elements birth dot in the mergeDisjointKeys function if vclock dots vclock dots this compare also use ordered UniqueAddress is it necessary or just maybe compare vclockversionsgetnode vs dots if i miss something please correct me thanks Only for discussion not finished yet 