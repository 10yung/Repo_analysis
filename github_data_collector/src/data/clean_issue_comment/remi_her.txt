Weve noticed performance issues when profiling slow actions Significant time is spent in HashWithIndifferentAccess Also HashWithIndifferentAccess is the only reason ActiveSupport is required Her proxy nil objects and we cant use method to protect application to raise exceptions when object is null For example we have models Product Brand name Product brand null class Product include HerModel belongsto brand end class Brand include HerModel end product Productfirst productbrand nil true productbrandid nilid false productbrand name Exception NoMethodError undefined method name for nilNilClass from Usersmadmaxrbenvversions librubygems gemsher libhermodelassociationsassociationproxyrb in name For temporary solution we use try method Weve hit a problem on a project where the functionality of ActiveModelDirty has changed such that the following no longer works for a Herbacked model foo SomeModelfind footitle returns a string footitle bar foorestoretitle should restore the title actually fails because footitle is a String and Rails expects it to respond to originalvalue Havent done enough digging to determine the best course of action for fixing yet Hi Her is a terrific gem that we use with multiple repos at our company One of the constant complaints from people who join our org is that its really hard to search for issues or get support using tools like GoogleSO cause the keywords are extremely generic eg her model her ruby model ruby her In fact we have seen that the wikireadme that contains a link to this repo is visited times a month solely for the purpose of getting to this repo since its so hard to reach it from google if you dont remember the keyword remiprev Is there any possibility at all of changing the name from her to something more specific like maybe HerORM or HerRubyORM or even just rubygemher More examples of searches that return nothing relevant in the first page her model doesnt connect to endpoint her model doesnt load Adding ORM to the search term directs to this repo but still no useful SOblogs etc her orm doesnt connect to endpoint her orm model doesnt load Am I just completely missing something or do scopes just not work on JsonApi models I have the following setup class TwitterProfile include HerJsonApiModel useapi TWITTERAPI collectionpath profiles type profiles hasmany tweets hasmany favorites hasmany followers hasmany engagementdata classname TwitterEngagement end class TwitterEngagement include HerJsonApiModel useapi TWITTERAPI type engagementdata belongsto twitterprofile scope retweets wheretype retweets scope mentions wheretype mentions scope favorites wheretype favorites end Note this is not hitting the actual twitter API but rather my own server where we have some aggregated data thus the TwitterEngagement When I call twitterprofileengagementdataretweets I get an error NoMethodError undefined method retweets for HerCollection from Usersjohnhendersonrvmgemsruby stackedsportsgemsher libhermodelassociationsassociationproxyrb in retweets But if I pass the scope as an actual predicate twitterprofileengagementdatawheretype retweets I get an array as expected TwitterEngagementtwitterengagements date profileid count id twitterprofileTwitterProfileprofiles nameJustin Houston screennamejustnhouston profileimage bio LB FEAR NO MAN Instagram mrjrich id TwitterEngagementtwitterengagements date profileid count id twitterprofileTwitterProfileprofiles nameJustin Houston screennamejustnhouston profileimage bio LB FEAR NO MAN Instagram mrjrich id TwitterEngagementtwitterengagements date profileid count id twitterprofileTwitterProfileprofiles nameJustin Houston screennamejustnhouston profileimage bio LB FEAR NO MAN Instagram mrjrich id TwitterEngagementtwitterengagements date profileid count id twitterprofileTwitterProfileprofiles nameJustin Houston screennamejustnhouston profileimage bio LB FEAR NO MAN Instagram mrjrich id Is there any way to override how attributes are set at the classlevel without Faraday middleware I have a few nonrestful endpoints that I would like to wrap I can override the response middleware but that would override it on my other classes as well Sorry for all the posts but Im loving Her and just want to see it keep getting better I checked all the Issues and dont see this Is there support for association extensions For example class User hasmany addresses do def count custom get that doesnt return all the records first and then add the array end end end so useraddressescount would use the defined count instead of doing what it appears now which is Hit the User endpoint If response includes addresses return those if not hit the addresses endpoint return the count of the array afterfind is being called twice after find seeing this from up to Right now the aftersave and other related callbacks are cancelled if an error is returned This creates an issue if we are trying to catch these situations and act on them in our models For example Id like to call this after attempting to save in Rails def checkforerrors if selfresponseerrorsany selfresponseerrorseach do attribute errors errorseach do error selferrorsaddattribute error end end end end to convert the responseerrors into Rails errors but cannot because of this issue