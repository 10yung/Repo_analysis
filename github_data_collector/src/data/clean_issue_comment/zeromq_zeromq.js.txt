Everything works fine when I use x version After upgrade to x I get this error Error Socket is busy writing only one send operation may be in progress at any time My code block like below js const socket new zmqPush socketsendHighWaterMark socketsendTimeout socketconnectaddress socketsendmsg The reason I set sendTimeout to is that the message is huge at publisher side any block will be exhaust the memory So do I use zeromq in wrong way Is your feature request related to a problem Please describe zeromq is currently tested on citgm as kind of smoke test to guarantee that it does not break in case Nodejs internals change Due to the recent move to cmake its not possible to compile it anymore on our infrastructure Describe the solution youd like Please indicate if its possible to move away from the cmake requirement Removing that dependency would make it possible to run the test suite again with CITGM so that we are able to provide stable Nodejs releases Otherwise we have to remove zeromq from CITGM and that would be not be ideal Refs Only available for days Context Im running a ZeroMQ Dealer and sending a message that the Router written with pyzmq cant consume When the dealer does a receive I get this error Error Socket temporarily unavailable at SessionsendOnControl Userskylekcodesrcgithubcomrgbkrkzeromqnewfornteractsessionjs at processtickCallback internalprocessnexttickjs errno code EAGAIN My understanding is that the socket is timing out I can code around this but Im curious if I should be looking at this differently ZeroMQjs version beta with current configuration typescript v x is used for compiling which introduces backwardsincompatible typings for properties this PR uses typescript v x for compiling provides backwards compatible typings for typescript x via fields types and typesVersions in packagejson backwards compatible typings avoid typing errors error TS An accessor cannot be declared in an ambient context when zeromqjs is used in projects that use typescript v simplifies type definitions for AsyncIterator in order to increase typing compatibility make typings compatible with esnext lib instead of only es lib by omitting nd generics parameter comparing the compiled results between v and v there were no differences in the generated JavaScript code only in the generated typings ie in the dts files so currently for the actual executable code it makes no difference to downgrade to typescript v x the drawback for the nd change regarding AsyncIterator is that the typing becomes less restrictive for target es changing the TReturn type from undefined to any but I think that in this context it is justifiable when weighing it against increased typings compatibility Hello The prebuild version seems to be compiled without the withpgm config option I tried to migrate my app from zeromqnode zmq to zeromqjs but get an error now that the pgm protocoll is not supported I tried to compile libzmq by myself on windows with cmake and VS with no luck Seems that the latest version of prebuild openpgm is build with toolset version VS Is there a possibility to get pgm support for prebuild versions or does any one know where i can get a prebuild version of libzmq with pgmepgm config on so that i can use it with zmqexternal install option Thx in advance Best regards Peter Hello Im not having any luck using zeromq with Electron v or v Im having this issue Not sure which repo this belongs in x Merge ZeroMQNG into ZeroMQjs x Create zeromqjs x branch for bugfixes x PR to zeromqjsmaster that brings in zeromqng x Check that PR doesnt include any version tags x Fix CI Travis only AppVeyor is no longer needed x Provide access to integration users for Github NPM x Add encrypted API keys for Github NPM to travisyml x Await review from all maintainers x Merge PR into master x Turn off AppVeyor checks for the master branch x Merge remaining NG changes x Release v beta x Tag v beta and wait for prebuilds deployment to NPM x Release ZeroMQNG with a wrapper around the new ZeroMQjs beta x Point users of ZeroMQNG to ZeroMQjs in its README Release v x Encourage people on all issues to try the new beta and see if there are any blockers Deprecate zeromq x Publish zeromq to npm once we feel ready Submit PR to to deprecate the old manual types as of v Triage open issues and close the ones that have been fixed with the new release Updating external resources Update API usage in the official ZeroMQ guides Im working on several applications in Nodejs that communicate to each other with zeromq sockets I developed a charge test in order to see if the applications were scalable One of those charge test sends message every ms for minutes to one of those applications Ive been having a EBADF error that causes the program to abort with this charge test It seems like it is coming from zeromq Here is the stack trace from gdb after retrieving a core dump file after a crash gdb bt x f c cfd in raise from libx linuxgnulibcso x f c cfe in abort from libx linuxgnulibcso x ad a in uvasyncsend loopoptimized out loopoptimized out at depsuvsrcunixasyncc uvasyncsend handleoptimized out at depsuvsrcunixasyncc x f c a d in zmqSocketOutgoingMessageBufferReferenceFreeCallbackvoid void from mediaprojectnodemoduleszeromqbuildReleasezmqnode x f c ae in from mediaprojectnodemoduleszeromqbuildReleasezmqnode x f c c e in from mediaprojectnodemoduleszeromqbuildReleasezmqnode x f c d c in from mediaprojectnodemoduleszeromqbuildReleasezmqnode x f c dadf in from mediaprojectnodemoduleszeromqbuildReleasezmqnode x f c a in from mediaprojectnodemoduleszeromqbuildReleasezmqnode x f c f in from mediaprojectnodemoduleszeromqbuildReleasezmqnode x f c bd in from mediaprojectnodemoduleszeromqbuildReleasezmqnode x f c in from mediaprojectnodemoduleszeromqbuildReleasezmqnode x f c b in from mediaprojectnodemoduleszeromqbuildReleasezmqnode x f c ca in from mediaprojectnodemoduleszeromqbuildReleasezmqnode x f c in from mediaprojectnodemoduleszeromqbuildReleasezmqnode x f c b in startthread from libx linuxgnulibpthreadso x f c db d in clone from libx linuxgnulibcso After realising that the crash was happening in asyncc I added some printf and recompiled node in order to have some results from those lines in depsuvsrcunixasyncc static void uvasyncsenduvloopt loop const void buf ssizet len int fd int r buf len fd loopasyncwfd if definedlinux if fd static const uint t val buf val len sizeofval fd loopasynciowatcherfd eventfd endif do r writefd buf len while r errno EINTR if r len return if r if errno EAGAIN errno EWOULDBLOCK return abort So whenever a crash happens I have r fd a very high int last one was for instance errno EBADF which stands for bad file descriptor I might be wrong but I have the impression that the bug comes from a high usage of zeromq sockets in a short time It seems like this bug does not happen if I make the charge test less challenging for my app Any help advice would be greatly appreciated Issue description I cant seem to rebuild this module properly Running npm rebuild libzmq finishes immediately and doesnt appear to do anything as I still get the NODEVERSION mismatches afterward and trying to do electronrebuild v throws clang error no such file or directory Releasezmqliblibzmqa Environment macOS Hi all I have implemented a PubSub script using this library Randomly sometimes after an hour sometimes after two hours the script receive SIGABRT signal and it crash There is no error message when it crashjust receive the SIGABRT signal and crash silently I have added handler for uncaughtException event but it is not triggered Initially i have suspected the script use lot of memory I have started the script with a lot of memory limit maxoldspacesize G still receive that mysterious signal The PubSub is used intensively I mean a lot of messages are handledprocessed by the script and goes through the script Messages are small in size Anyone else encountered similar issue or have any idea what could be the source of the issue I have ran the script with strace these are the last output lines poll fd eventsPOLLIN fd reventsPOLLIN poll fd eventsPOLLIN fd reventsPOLLIN read poll fd eventsPOLLIN Timeout close poll fd eventsPOLLIN Timeout poll fd eventsPOLLIN Timeout poll fd eventsPOLLIN Timeout write poll fd eventsPOLLIN Timeout poll fd eventsPOLLIN Timeout poll fd eventsPOLLIN Timeout write poll fd eventsPOLLIN Timeout poll fd eventsPOLLIN Timeout epollpwait EPOLLIN u u NULL read epollpwait EPOLLIN u u NULL read epollpwait unfinished killed by SIGABRT Aborted Thank you for your time Gabriel 