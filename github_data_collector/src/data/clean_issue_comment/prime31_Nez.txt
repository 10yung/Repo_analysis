The Image scales accordingly if SetScale is used Before a image bigger than the Image Element was drawn Changes the initial speed of ScrollPane from f too slow to f reasonable Not sure if this is intended but function SpritesFromAtlas on Spritecs isnt exiting once MaxCellsToInclude number has been reached as the break function isnt affecting the outer for a simple solution for that would be to add the following line before the break function to exit both loops rows They were offset This PR also contains a small piece of another PR tilesetImageTexture objTileTilesetTileImageTexture Shouldnt break anything I might be misunderstanding something here but it would appear that the package on NuGet for v is missing some of the changes that were made to SpritesAnimations Namely it still contains Sprite instead of SpriteRenderer and SpriteAnimation instead of SpriteAnimator There could be more its missing Im not sure When building to target Android against I receive error message Can not resolve reference SystemDrawing referenced by Nez Please add a NuGet package or assembly reference for SystemDrawing or remove the reference to Nez Adding a nuget reference to SystemDrawingCommon isnt any help Im able to build successfully against Windows OpenGL however Issue is fixed when downgrading to Nez It seems that there is no inspector for byte and attempting to open an inspector of an entity with a component containing a public byte will crash the application Is this the intent Edit I was able to add support pretty easily following suit with how you handle integers It looks like you convert all integer types to Int and then use that value in the slider I just did the same and made sure to pass a range of if none and trim the range attribute to if its out of range For some reason when aligning a label maybe anything inside a container it does the above Is this just me Wrapping the label inside a stack doesnt cause this issue however stack has no background support Use case Deserializing an object whilst using a JsonObjectFactory In this specific case Im trying to Deserialize an entity Since Transform doesnt have a parameterless constructor a JsonObjectFactory has to be used to create the Transform during deserialization id type NezEntity name referencedentity transform id type NezTransform position id type MicrosoftXnaFrameworkVector X Y scale id type MicrosoftXnaFrameworkVector X Y rotation entity ref components id type NezComponentList components id type NezFastList NezComponent Nez Version Cultureneutral PublicKeyTokennull buffer id type NezHoornComponentsEditorEditorEntity entity ref scale ref id type NezHoornComponentsIDComponent ID entity ref null null null length componentsToAdd A JsonTypeConverter is used while serializing to serialize some of the fields as well public class TransformTypeConverter JsonTypeConverterTransform public override void OnFoundCustomDataTransform instance string key object value throw new NotImplementedException public override void WriteJsonIJsonEncoder encoder Transform value if valueparent null encoderEncodeKeyValuePairparent valueparent encoderEncodeKeyValuePairlocalScale valuelocalPosition encoderEncodeKeyValuePairlocalPosition valuelocalPosition encoderEncodeKeyValuePairlocalRotation valuelocalRotation encoderEncodeKeyValuePairposition valueposition encoderEncodeKeyValuePairscale valuescale encoderEncodeKeyValuePairrotation valuerotation public class TransformJsonFactory JsonObjectFactoryTransform public override Transform CreateType objectType IDictionary objectData Entity entity objectData entity as Entity return new Transformentity public override bool WantsExclusiveWrite false Problem Because the Transform is created through the Factory the position and scale ids are never added to the reference tracker When the EditorEntity object is deserialized the ref cannot be resolved since it was skipped over by the Factory Proposed Solution The only solution I can think of is to pass reference to the JsonDecoder and referenceTracker in the JsonObjectFactorys Create Method or give the JsonObjectFactory access a way to add a reference to the referenceTracker in a different way This same situation exists in the OnFoundCustomData in the JsonTypeConverter there are times that you want to decode the data and put it into the referenceTracker