For the Apache license to be legally binding there needs to be a copyright statement added to readme eg Copyright c your name Licensed under the Apache License Version the License you may not use this file except in compliance with the License You may obtain a copy of the License at Unless required by applicable law or agreed to in writing software distributed under the License is distributed on an AS IS BASIS WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND either express or implied See the License for the specific language governing permissions and limitations under the License Is there a possibility to specify an air resistance parameter that would gradually slow down moving particles Acceleration requires an angle which in this case depends on the angle that a certain particle is moving the acceleration should happen in the opposite direction of where the particle is moving as Is this library being maintained It seems issues are reported but not fixed Every once in awhile my app gets a NPE with the library Fatal Exception javalangNullPointerException Attempt to invoke virtual method void androidviewViewpostInvalidate on a null object reference at complattysoftleonidsParticleSystemonUpdateParticleSystemjava at complattysoftleonidsParticleSystemaccess ParticleSystemjava at complattysoftleonidsParticleSystemParticleTimerTaskrunParticleSystemjava at javautilTimerThreadmainLoopTimerjava at javautilTimerThreadrunTimerjava Now the interface just specifies x y width and height This allows for either a Android View object or alternatively an arbitrary rectangle to be used for emission locations It maintains backward compatibility with the current API by overloading each method which accepts a View The new method accepts an Emitter and the old method delegates to the new method by passing in a new ViewEmitterview whenever the new method expects an Emitter In the future this could be further refactored to expose even more flexibility For example the entire calculation for initial particle locations into the new Emitter interface That is to say instead of it being hard coded to use x y width height and hence a rectangle emission area we could instead have an interface which exposes a method generateParticleLocation Some emitters may choose to use a rect others could use a circle Others could do even more interesting things such as from a point but randomly distributed around the point according to a Gaussian distribution Another future refactoring would be to attach the gravity argument to the Emitter itself That way the ParticleSystem itself doesnt need to care about whether to anchor particles to the top or bottom of a rectangle area Instead you would configure this on the emitter object before passing it to the particle system I want my particles emitter emission from bottom to top direction and I found example activity Emit with Gravity similarly so I changed the code below to made it emission with angle new ParticleSystemthis Rdrawablestarpink setAcceleration f setSpeedByComponentsRange f f f f setFadeOut new AccelerateInterpolator emitWithGravityarg GravityTOP But the result is the particles first little down then emission from bottom to top How should I do to avoid that little down I have a fragment AnimationFragmentjava public class AnimationFragment extends Fragment Nullable Override public View onCreateViewLayoutInflater inflater Nullable ViewGroup container Nullable Bundle savedInstanceState View view inflaterinflateRlayoutanimationfragment container false new ParticleSystemgetActivity Rdrawablepoopemoji setSpeedByComponentsRange f f f f setAcceleration f emitWithGravityviewfindViewByIdRidanimationBox GravityBOTTOM return view I have a view in Fragment with animationBox id xml version encodingutf LinearLayout xmlnsandroid androidorientationvertical androidlayoutwidthmatchparent androidlayoutheightmatchparent View androidididanimationBox androidlayoutwidthmatchparent androidlayoutheightmatchparent LinearLayout Notice I initialized the ParticleSystem in onCreateView When I run the app nothing shows Can the Particle System with with Fragments The app Im working on crashes with NullPointerException with no links to the code in the app when soft keyboard is shown or hidden while the animation is running The stacktrace starts from androidwidgetFrameLayoutlayoutChildrenFrameLayoutjava The animation is bound to a RecyclerViewViewHolder and the RecyclerView is in a RelativeLayout When I googled the issue the closest cases I found were these At the moment I cancel animation in onClick on an EditView the only case when the keyboard is shown and onBackPressed but that is a crutch and Id like to have a permanent solution if thats possible If we have for example some layout like this ScrollView LinearLayout Button Button Button Button LinearLayout ScrollView How to set ParticleSystem constructor which will emit particles behind all those buttons I need particles to show only in background not to fall in front of buttons this will not work ParticleSystemactivity maxParticles drawableRedId timeToLive idOfLinearLayoutFromExampleAbove Hi everybody How to create effect fireworks for set wallpaper using Leonids library I was trying to do it but I could not do it Thanks for all the answers from you guys 