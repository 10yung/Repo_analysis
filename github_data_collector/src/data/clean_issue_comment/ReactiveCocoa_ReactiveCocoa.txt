 Checklist Updated CHANGELOGmd Experiencing a naughty crash with buttons and all inheriting classes inside NSStackView with enabled Detaches Hidden Views when the window gets closed and deallocated in the latest Catalina build App general Caught exception during runloops autorelease pool drain of client objects NSRangeException Cannot remove an observer NSStackView x aca for the key path hidden from NSButton x c f because it is not registered as an observer userInfo null App General An uncaught exception was raised App General Cannot remove an observer NSStackView x aca for the key path hidden from NSButton x c f because it is not registered as an observer CoreFoundation x fff d exceptionPreprocess libobjcAdylib x fff bf bd objcexceptionthrow Foundation x fff a NSObjectNSKeyValueObserverRegistration removeObserverforProperty Foundation x fff a NSObjectNSKeyValueObserverRegistration removeObserverforKeyPath Foundation x fff bf NSObjectNSKeyValueObserverRegistration removeObserverforKeyPathcontext AppKit x fff e cc NSStackView dealloc CoreFoundation x fff c NSArrayI dealloc libobjcAdylib x fff bf a ZN AutoreleasePoolPage releaseUntilEPP objcobject libobjcAdylib x fff bf cc objcautoreleasePoolPop CoreFoundation x fff e CFAutoreleasePoolPop CoreFoundation x fff b fc CFRunLoopRun CoreFoundation x fff b e CFRunLoopRunSpecific HIToolbox x fff c b d RunCurrentEventLoopInMode HIToolbox x fff c d ReceiveNextEventCommon HIToolbox x fff c f BlockUntilNextEventMatchingListInModeWithFilter AppKit x fff eaac DPSNextEvent AppKit x fff e NSApplicationNSEvent nextEventMatchingEventMaskuntilDateinModedequeue AppKit x fff e fd NSApplication run AppKit x fff d e d NSApplicationMain As far as I can tell this has been happening since Catalina Beta was released and still occurs on the latest GM seed which is worrying Builds produced with the latest stable Xcode and Xcode Beta suffer from the same problem Everything preCatalina works fine All of the above narrows down to ReactiveCocoa bindings Removing the following observeValues line fixes the issue swift override func viewDidLoad selflaunchOnStartupCheckboxreactiveboolValuesobserveValues Swiftprint It seems like theres something wrong with ObjC swizzling that ReactiveCocoa does behind the scenes It also looks therere some observerrelated issues is this something related or already known Otherwise happy to try isolating the issue into a sample project but theres really not much details besides that NSStackView with enabled Detaches Hidden Views NSButton reactive observer on buttons IBOutlet on window deallocation xcodebuild MT IDETestOperationsObserverDebug DACB A D B D A C B Finished requesting crash reports Continuing with testing NSObjectsignalforareactivekeyvalueobserverusingSwift SmartKeyPathstresstestsasyncdisposalofsignalwithinflightchanges Test crashed It would make the CI jobs faster with the much higher usage limits than Travis You can execute up to workflows concurrently per repository You can run up to jobs concurrently per repository across all workflows ReactiveCocoareactivecocoa Could someone with the admin right sign up for the beta Is there any reason that text signals of UISearchBar still emit optional values while those of UITextField and UITextView no longer do I ran into a compilation failure just like what described after updating ReactiveCocoa from V to V Compilation failures are totally OK to me but the error message was quite confusing Property continuousTextValues requires that UITextField inherit from UISearchBar While the message was given by the compiler I think this confusion can be avoided if these text signals with same names work in a consistent way internal class DelegateProxyDelegate NSObjectProtocol NSObject We cant extend for our agents Why cant we extend DelegateProxy in the case of pods I met a crash when rac dispose in iPhone Plus iOS v Anybody can help me destroyhelperblock in News RACSubscriber init blockinvoke in News RACDisposable dispose in News RACCompoundDisposable dispose in News RACSubscriber sendCompleted in News RACPassthroughSubscriber sendCompleted in News RACSubscriber sendCompleted in News RACPassthroughSubscriber sendCompleted in News RACSubject enumerateSubscribersUsingBlock in News RACReplaySubject sendCompleted in News RACDisposable dispose in News RACCompoundDisposable dispose in News swizzleDeallocIfNeededblockinvoke in News libobjcA anonymous namespaceAutoreleasePoolPagepopvoid in libobjcAdylib UIKitCore UIView dealloc in UIKitCore libobjcA anonymous namespaceAutoreleasePoolPagepopvoid in libobjcAdylib UIKitCore UIView dealloc in UIKitCore libobjcA anonymous namespaceAutoreleasePoolPagepopvoid in libobjcAdylib Currently says x which is a deterrent for adoption by people comparing to Rx Id make a PR myself but my employer makes that complicated Been using RAC for quite long time since it first came out From the past few months we found out that our applications are using RAC with animation quite a lot So instead of writing subscribers every time we made something kinda handy ReactiveAnimator Here is how it looks swift protocol ReactiveAnimatable AnyObject struct AnimatorBase ReactiveAnimatable let reactive ReactiveBase let duration TimeInterval init reactive ReactiveBase duration TimeInterval selfreactive reactive selfduration duration extension Reactive where Base ReactiveAnimatable var animator AnimatorBase return animatorduration func animatorduration TimeInterval AnimatorBase return Animatorself duration duration And using it is quite straightforward swift extension UIView ReactiveAnimatable extension Animator where Base UIView var isHidden BindingTargetBool return reactivemakeBindingTargeton UIScheduler duration selfduration view value in guard viewisHidden value else return let toAlpha CGFloat value viewalpha toAlpha viewisHidden false UIViewanimatewithDuration duration animations viewalpha toAlpha completion finished in viewisHidden value var borderColor BindingTargetUIColor return reactivemakeBindingTargeton UIScheduler duration selfduration view value in let animationKey reactiveanimatorborderColor viewlayerremoveAnimationforKey animationKey CATransactionbegin CATransactionsetCompletionBlock viewlayerborderColor valuecgColor let animation CABasicAnimationkeyPath borderColor animationduration duration animationtoValue valuecgColor animationisRemovedOnCompletion false animationfillMode forwards viewlayeraddanimation forKey animationKey CATransactioncommit With UILabel swift extension Animator where Base UILabel var text BindingTargetString return reactivemakeBindingTargeton UIScheduler duration selfduration view value in let transitionType CATransitionTypemoveIn viewlayerremoveAnimationforKey transitionTyperawValue let animation CATransition CATransition animationtimingFunction CAMediaTimingFunctionname easeIn animationtype transitionType animationsubtype fromBottom animationduration duration viewlayeraddanimation forKey transitionTyperawValue viewtext value Binding swift labelreactiveanimatorisHidden viewModelisHidden labelreactiveanimatorduration text viewModeltext labelreactiveanimatorduration borderColor viewModelborderColor ReactiveAnimator Just our c Not sure what tags should be applied 