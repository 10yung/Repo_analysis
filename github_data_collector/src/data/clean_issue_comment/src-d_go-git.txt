So to do a normal diff I would get my two different objectTree instances and use objectDiffTree However with staged changes Im unsure of how to get a tree if its possible at all It seems that indexIndex only provides a list of files changed with no way to get a tree Is it possible to retrieve a diffpatch describing the changes which have been added in the workspace compared to HEAD or some other arbitrary commit I cant clone from private repository I found out that gogit checking in method createHeadIfCorrectReference if referenceHash aHead but my repo not contain reference that commit is equal to repository HEAD commit In gitCloneOptions I only use Auth and URL My output when doing git remote show origin on repo clonned by git clone remote origin Fetch URL Push URL HEAD branch unknown Remote branch master tracked Local branch configured for git pull master merges with remote master Local ref configured for git push master pushes to master up to date Can someone help me with this The problem is with my gitCloneOptions or with method that Im pushing to remote Can you give me example how to remove tag lightweight or annotated in local and remote I already tried to find it in this repository but still not found Related to Before this change when adding an executable file with worktreeAdd something really strange happened the git index file entry associated with that file had its SHA updated but not its size which caused the file to appear both as staged and unstaged when running git status git status On branch xxx Your branch is ahead of originr x by commit use git push to publish your local commits Changes to be committed use git restore staged file to unstage modified ciintegritycheckspy HERE Changes not staged for commit use git add file to update what will be committed use git restore file to discard changes in working directory modified ciintegritycheckspy AND HERE However when running git diff nothing shows up ie the fact that this file appears as unstaged is just an artifact of the file length not matching the one registered on the index I guess but I could be wrong that the original intent of the line I changed was to avoid updating the size when dealing with a folder or a pipe or something like that but for some reason IsRegular was used instead of IsFile If there is some hidden reason to use IsRegular that Im not aware of please simply discard this pull request Im trying to open a local repo and pull it I want to checkout a specific branch identified by the var branch Im doing the following dir err osGetwd if err nil logrusErrorferror getting current directory v err currentUser err userCurrent if err nil logrusErrorferror getting current user v err sshAuth err sshNewPublicKeysFromFilegit currentUserHomeDirsshidrsa if err nil logrusErrorferror getting public key v err r err gitPlainOpenWithOptionsdir gitPlainOpenOptionsDetectDotGit true if err nil logrusErrorferror opening repo v err w err rWorktree if err nil logrusErrorferror getting worktree v err err wCheckout gitCheckoutOptions Branch plumbingReferenceNamefmtSprintfrefsheadss branch if err nil logrusErrorferror checking out repo v err err wPull gitPullOptionsReferenceName plumbingReferenceNamefmtSprintfrefsheadss branch Auth sshAuth if err nil logrusErrorferror pulling repo v err I keep getting errornonfastforward update when trying to pull From a debug session I saw that in master is actually returned and this causes issues when determining if we are in a fast forward situation Can someone help debug this issue andor suggest how to proceed Signedoffby lxjhk lxjpubgmailcom Issue Addressed Git blame takes a long time to run A natural optimization is to run git blame on multiple files concurrently However the existing implementation for idxfile uses Gos standard map data type which will cause concurrent read and write to a map runtime panic because of race conditions Ref Issues Changes Made Changed map int plumbingHash to syncMap Not all the tests pass yet but this makes gogit usable on Plan Please merge this after Fixes Signedoffby Fazlul Shahriar fshahriargmailcom Hi there I removed files by osRemoveAll and then add but thats didnt work the code as belows remove local files osRemoveAllpath add files prepare commit and push repo err gitPlainOpenrepository if err nil logLoggerDebugfail to init repository zapErrorerr return err wt repoWorktree err wtAdd if err nil return err Whats wrong with that code any suggestions It is possible to set multiple remoteoriginpushurl settings in Git I dont see a way to get it from this library Related to in that pushInsteadOf should also be supported here