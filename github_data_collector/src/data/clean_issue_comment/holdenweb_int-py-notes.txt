Per the recentlycompleted context manager notebook Possible Discussions What else is a context manager Writing a contect manager Handling incontext uncaught exceptions And of course whatever you want In introducingdecoratorsipynb we apply a class decorator barking to two instances the first of a class with one applicable method the second of a subclass of that class with two further applicable methods This succeeds with the first class the one with only one method but fails with the second for reasons described below Although the commentary makes it appear the very lightweight testing performed succeeds closer examination of the output reveals that the two additional methods are actually calling the same original method wag and the the original code of the decorator has a bug This issue is caused by the use of a decoratorlocal variable to wrap each nondunder method Since the same variable is used to wrap each method and since all methods are handled in a single call to the decorator the wrapped functions must necessarily all be the same This explains why both d wag and d sniff print a dog is happy the wag method is the last to be processed by the decorator and is thus the function called by all decorated methods Note also that this example demonstrates that only locallydefined methods appear in the classs dict the inherited shout method is not wrapped a second time Please comment and reassign to me for further discussion 