It seems theres a race condition when you try to use stacked data to debug embedded requests ie iframes I can confirm what the doc says about using the debug bar storage mechanism to store the data and reopen it later can be cumbersome It doesnt seem easy to debug embedded docs simply using header data because the ID generated is different Thus I moved to a lessoptimal but still doable solution with stacked data However that brings up another issue the race condition between the main request persisting the session and the embedded one writing to it I guess this could be solved if session was not used whatsoever for stacked information ie Redis storage is able to append information without having to write the entire list and creating the said race Or else if it was possible to easily passdown the DebugBar request ID no idea about this without munging embedded URLs though but I guess it happens with AJAX requests AjaxHandlerhandle Entirely replacing the session layer could probably work if there were some adjustments on the stack data code ie deleting each used key instead of clearing up the entire object I think DebugBar should come with a basic session replacer for itself as it would otherwise be dependent on external implementation in order to solve this race condition not sure but it seems stackData is not really storing the stack in the storage couldnt really doublecheck this but I guess its working fine is there a reasonable way to solve the race condition with embedded requests setStackAlwaysUseSessionStorage doesnt seem to be documented unclear from the docs that even with storage session is still used to identify which information will be shown next What is the preferred way to go about having a clean production environment It might be so trivial that its not mentioned andor Im just overlooking the hints in the docs but I dont see much mention about environments I would rather not have the debugcode running on production The manual implies you use a normal require and not requiredev so if I follow that youd get the code online at least THis is apart from the fact that you will have calls on several places You can probably easily notrender the bar in a production environment but then correct me if Im wrong your collectors are still collecting using resources and possibly affect stuff I suppose most of the collection will not be in a single place and therefore Im not seeing a quick method to nothave that code running on a production environment Only thing I could come up with is switching out your collectors with injection for some sort of dummy empty collector that does nothing But that feels hacky and as its not mentioned anywhere thats probably not the default method Is there a bestpractice somewhere to be found I follow up pullrequest about aggregate timeline This is an awesome enhancement but I think we could go further Why not merging this two Timeline systems in one First timeline do not aggregate same event measures but give them a position in the timeline Second timeline system aggregates same event measures but we lose time position information Here is a possible implementation on Roadiz CMS I do not stack measures to keep timing location and ease up debugging when you need to know when a event repeats itself Fix issue public function testBigQuery params idsegmento idpart inativo ativo query select sumqtd as total from select count as qtd from select distinct vwidmodulo vwidenvio vwidform vwversao vwidsistema vwidgrupo from vwformsdisponiveis vw where vwidpart idpart and vwidservico idsegmento and vwconcluido inativo as forms union select distinct countpesq as qtd from pesquisaavaliacaomodulodisponivel pesq join envio e on eidenvio pesqidenvio and eidservico pesqidservico join rodada r on eidenvio ridenvio join partform pf on rano pfano and ridrodada pfidrodada and pfidmodulo ridmodulo where pfidpart idpart and rdatafim datenow or pfdataexcecaofim datenow and rdataini datenow or pfdataexcecaoini datenow and eidservico idsegmento and pesqidmodulo inativo union select distinct countpidpesquisa as qtd from pesquisaspesquisa p join pesquisaspublicacao as pub on pubidpesquisa pidpesquisa left join pesquisasresposta r on ridpesquisa pidpesquisa and ridpublicacao pubidpublicacao and ridpart idpart where pubidservico idsegmento and pubexcluido inativo and pexcluido inativo and ridresposta is null and pubdataini datenow and pubdatafim date now and prespprimeirapublicacao inativo or pubidpublicacao in select r idpublicacao from pesquisasresposta r where r idpart idpart and r idpesquisa pidpesquisa or not exists select r idpesquisa from pesquisasresposta r where r idpart idpart and r idpesquisa pidpesquisa and pubtodosparts ativo or idpart in select idpart from pesquisaspublicacaopart pp where ppidpesquisa pubidpesquisa and ppidpublicacao pubidpublicacao and ppidpart idpart union select countes as qtd from especialsolicitacao es join especialdadossolicitacao d on esidservico didservico and esano dano join especialliberacao el on elano dano and elidservico didservico and elidpart esidpart left join especialprorrogados p on pano elano and pidservico elidservico and pidpart elidpart where esidusu is null possui resp and elidservico idsegmento and elidpart idpart and elidpart in or dliberada ativo and ddataini datenow and ddatafim datenow or ddatainiexcecao datenow and ddatafimexcecao datenow and pidpart not in select sidpart from especialsolicitacao s where sdata ddatainiexcecao and sidpart elidpart and sano dano and sidservico didservico or pdatafim datenow as resultadosemaberto expected select sumqtd as total from select count as qtd from select distinct vwidmodulo vwidenvio vwidform vwversao vwidsistema vwidgrupo from vwformsdisponiveis vw where vwidpart and vwidservico and vwconcluido as forms union select distinct countpesq as qtd from pesquisaavaliacaomodulodisponivel pesq join envio e on eidenvio pesqidenvio and eidservico pesqidservico join rodada r on eidenvio ridenvio join partform pf on rano pfano and ridrodada pfidrodada and pfidmodulo ridmodulo where pfidpart and rdatafim datenow or pfdataexcecaofim datenow and rdataini datenow or pfdataexcecaoini datenow and eidservico and pesqidmodulo union select distinct countpidpesquisa as qtd from pesquisaspesquisa p join pesquisaspublicacao as pub on pubidpesquisa pidpesquisa left join pesquisasresposta r on ridpesquisa pidpesquisa and ridpublicacao pubidpublicacao and ridpart where pubidservico and pubexcluido and pexcluido and ridresposta is null and pubdataini datenow and pubdatafim date now and prespprimeirapublicacao or pubidpublicacao in select r idpublicacao from pesquisasresposta r where r idpart and r idpesquisa pidpesquisa or not exists select r idpesquisa from pesquisasresposta r where r idpart and r idpesquisa pidpesquisa and pubtodosparts or in select idpart from pesquisaspublicacaopart pp where ppidpesquisa pubidpesquisa and ppidpublicacao pubidpublicacao and ppidpart union select countes as qtd from especialsolicitacao es join especialdadossolicitacao d on esidservico didservico and esano dano join especialliberacao el on elano dano and elidservico didservico and elidpart esidpart left join especialprorrogados p on pano elano and pidservico elidservico and pidpart elidpart where esidusu is null possui resp and elidservico and elidpart and elidpart in or dliberada and ddataini datenow and ddatafim datenow or ddatainiexcecao datenow and ddatafimexcecao datenow and pidpart not in select sidpart from especialsolicitacao s where sdata ddatainiexcecao and sidpart elidpart and sano dano and sidservico didservico or pdatafim datenow as resultadosemaberto traced new TracedStatementquery params result tracedgetSqlWithParams thisassertEqualsexpected result When i use the twig collection code example in the repo i get javascript errors in my console Uncaught TypeError Cannot read property ajax of null at itemRenderer widgetjs at childanonymous widgetsjs at childset debugbarjs at childanonymous widgetjs at childset debugbarjs at childanonymous debugbarjs at childset debugbarjs at Arrayanonymous debugbarjs at Functioneach jqueryminjs at childdataChangeHandler debugbarjs Here is my code profile new Twig Profiler Profile container ViewManagerclass getEnvironmentaddExtensionnew DebugBar Bridge Twig TimeableTwigExtensionProfilerprofile container DebugManagerclass getBaraddCollectornew DebugBar Bridge TwigProfileCollectorprofile when i add the time collector to the TimeableTwigExtensionProfiler i get an Failed stopping measure hometwig because it hasnt been started error I hope someone can help With the release of Twig the global namespace classes are no longer supported This PR updates the DebugBar Bridge TwigProfileCollector class to use the namespaced class names from Twig and adds a conflict rule into the Composer manifest to block newer versions of this package from being installed with Twig versions that do not support namespaces Background So far I had only displayed debug data related to the current request However I have recently switched to FileStorage to debug nonHTML requests with more data than could fit into the headers Problem The RequestData collects the POSTed password during login password change etc Question How can I prevent the password from appearing among the debug data PS Ideally I would tell the RequestDataCollector to mask certain fields like Sentrys sanitizeKeys grafik Any plans to support fetch in addition to xhr I dont see a way to hook phpdebugbar up to Apollo currently whilst it works just fine with Axios is lack of fetch support the reason I came across the docs for manual integration but it seems to be xhr specific and throwing fetch as it doesnt go so well Would be great to hook this up to Apollobased SPAs so I can see the horrendous number of database queries being ran easier 