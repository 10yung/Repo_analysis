Most of Jupyter Books magic comes from its HTML CSS JS code Right now there is a lot of custom code under the hood controlling the general layout structure etc It might simplify things if we used a lightweight web framework for this so we dont have to do as much custom stuff One possibility is bootstrap a CSSbased web framework that has been around forever For example the pandas sphinx theme uses Bootstrap under the hood and is really close to what Jupyter Book uses for its own structure With some minimal modifications we might be able to get nice outofthebox behavior that would simplify the codebase and make the HTML more responsive Another interesting project is the tufte bootstrap project which copies the behavior of the Tufte CSS project into Bootstrap classes Summary of the problem Section names with nonascii letters cannot be linked from the table of code and everything points at a problem with turbolinks turbolinks project page Full description My native language is not English and Im currently writing a nonEnglish project During this project Ive encountered a problem that may have eluded you in your tests and that I havent been able to figure out Occasionally Ive got section names with characters that do not belong on the English alphabet In particular in Spanish weve got accents on vowels and the letter and they are extremely frequent The problem I have is that the Page Navigation on the sidebar is not working for sections that have one of these special characters in their title when I click on the section name the browser jumps to the top of the page as if it wasnt recognizing the anchor You can see a live example here where the link to the subsection Int rprete is not working Something interesting to noting is that the link in the menu points to Int rprete but when I copy the link and paste it in the browser it replaces the nonascii characters and it becomes IntC A rprete I created a minimal page to test if nonascii characters were valid in HTML anchors and I found out that they do I was able to link Int rprete and get the browser to jump to that part of the page Then I pasted everything from a typical Jupyter Book head into my minimal example and the link stopped working In the end I was able to find that when turbolink is included nonascii characters in the anchors stop working These are the offending lines javascript Include Turbolinks to make page loads fast script src asyncscript As I said removing this library solves the problem but I have not been able to figure out why the problem is happening whats the actual problem I dont really understand what is wrong with the links how to force the removal of turbolinks from my book what could be the consequences of removing it I did not found any information or any issue reported in turbolinks repository about potential problems with nonascii characters While following this guide I was a bit confused about publishing on GitHub Pages Im providing this quick feedback in case it might help with the documentation If I can find time Ill suggest some changes otherwise this might be a good issue for someone looking to contribute to the community There were a few things that came up you need to modify the configyml file to point to your site in my case it was little more confusing because Im not using an organization but a project page So my configyml has the following baseurl introexpphysbook the subpath of your site eg blog If there is no subpath for your site use an empty string url the base hostname protocol for your site eg for my new repository publishing from ghpages branch was not an option It was not super clear to me where the raw content for the page and the built page should live in the repository I wanted to see an example repository The docs point to this repository but initially what you see is the code for jupyterbook as opposed to the source for the book itself I then found the ghpages branch but that is now redirecting to netlify After some hunting I found but it is still not clear to me if the book is being published directly from this or if this is just holding the code for executing jupyterbook create demo I would suggest either pointing to a vanilla ghpages published book or briefly outlining what the target structure looks like in terms of source and built page This is mine but Im not sure it should be used as an exemplar perhaps worth clarifying why the code for the book needs to be in a GitHub repository even if you are building it yourself and publishing it yourself I suppose the reason is for binder to work There is a corresponding configyml line to be edited Minor point but the first page says This documentation is for the master branch of Jupyter Book which means that it might be slightly outofdate with the latest version released on pip Which makes it sound like the pip version is the most uptodate version Later it says alternatively if youd like to install the latest version from GitHub you can run pip install git Which may confuse newcomers as to what is the latest version This is related to which talks about exploring SSGs in general this issue is specifically for thinking about using Sphinx to build books for Jupyter Book A few thoughts A quick idea for the build system Keep the CLI which would create a Sphinx template with the Jupyter Book templates preinitialized along with several extensions that well standardize across books Beyond that building the book could either be just make html or something with more sugar in it like jupyterbook build Use nbsphinx to directly support notebooks Support nbsphinx markdown features and then upstream improvements to nbsphinx as we need new features in Jupyter Book What itd require At least Conversion of all Liquid templates into Jinja templates Figure out how to map the yaml configuration files into something that works with sphinxs confpy Figure out document structure issues Jekyll uses a yml file define the site structure while AFAIK Sphinx requires you to put toctree elements in pages that define the site structure Change the Jupyter Book CLI to generate the proper template for a Sphinx site instead of a Jekyll site Potential benefits The biggest benefit of Sphinx is that it already supports many of the features we hope to implement to improve the state around publishing etc For example Notebooks can be read directly into sphinx via nbsphinx so we dont have an intermediate HTML representation however wed need to figure out a way to include tag information in the HTML that was generated Most importantly many of the features around publishing etc already exist in Sphinx For example crossreferences between notebooks other files automatically resolve equations work the same way theres more support for references though this would need to be improved etc Most of these are simply Sphinx extensions and so could be removed from Jupyter Books codebase or factored out into Sphinx extensions themselves if they are broadly useful Sphinx already supports PDF EPUB etc output because rST is used under the hood and this is a semantic markup language There is a healthy community of development around notebooks for Sphinx and as that story improves so could Jupyter Book and viceversa This is a bit of a reach but using Intersphinx we could make books aware of other books which is pretty badass We could piggyback on readthedocs for hosting documentation Potential drawbacks aside from the onetime work of converting all of the templates from Liquid Jinja and making the necessary CLI etc changes Some features may not work easily in Sphinx eg Im not sure how to get Turbolinks working in Sphinx websites but perhaps this is just a question of getting the templating right docutils is notoriously difficult to work with and debug so we might be exposing ourselves to more developing pain then again we have virtually no ability to develop Jekyll since its written in Ruby Configuration in Sphinx is pythonspecific and I dont think we want to require everyday users to write Python if anything because it will make people think Jupyter Book is pythonspecific when it is not Perhaps we can keep the YAML config layer on top somehow We still dont solve our longterm problems with publishing etc but maybe Sphinx may help get us a step closer to the solution this would similarly be true with Pandoc It is still kind of a mystery to me how Sphinx builds up its internal model of the site structure from toctree elements Maybe some performance issues around generating the HTML files How to port some features to Sphinx This is a quick section to describe how wed need to port some features from Jekyll to Sphinx Sitewide metadata In Jekyll sitewide metadata is stored in the YAML file We could keep this file and then use it to populate htmlcontext in the build Then wed have access to these variables as variable names Pagelevel metadata In Jekyll we store pagelevel metadata as a YAML header In Sphinx this is done with key value pairs at the top of the page eg see here We autopopulate the pagelevel YAML so we can do the same in rST with key value pairs Table of Contents In Jekyll we specify a table of contents with a single YAML file In Sphinx TOC is inferred from the toctree directive generally split across many pages Im not sure how wed handle this maybe insert toctree lines into some intermediate files to define the book structure that way Page HTML structure Jekyll uses Liquid templates while Sphinx uses Jinja templates Wed need to make this onetime conversion and use the Sphinx configuration variables etc instead of the jinja configyaml ones This might also be an opportunity to utilize a framework like bootstrap which could help simplify the CSS a bit I wonder if jorisvandenbossche would be interested in advising or helping with that at all Id be curious to hear other peoples thoughts on this particularly mgeier mmcky akhmerov chrisjsewell willingc who I think have thought through some of these issues re books and Sphinx before Also lheagy who I believe basically already has a pipeline like this for geoscixyz Also ping mwouts who might also have experience w sphinx and documentation formats Would love to hear thoughts on this idea if you have them I was reading the Jupyter Book documentation and found that two internal links were broken Im sure I wont do better and that in my own project its going to be the same So I was wondering if it could be an option to test all the links at compile time Anyone knows whether we can easily test that at least all internal links work If such an option exists should it be the default mode for Jupyter Book Thanks This PR demonstrates changes that could be made to the sidebarhtml liquid template to add anchoring to links in the sidebar Im adding the PR to illustrate how I understood the feature suggestion in the top comment of See issue itself for more detailed discussion It would be nice to be able to write exercise cells in the notebook using the exercise or exercise notebook extensions and be able to have the solution cells render onto the page as hidden cells similar to the Carpentries challenge and solution markdown blockquotes I think that this would be doable by Having a custom nbconvert preprocessor that knows about the exercise metadata Wiring that preprocessor into the nbconvert processing happening here Adding some javascript to handle this case as a special case of the jbcell dive Along the lines of this Am I missing any major stumbling point Hello Im trying to use Jupyterbook to write scientific papers at least drafts and Ive been making interactive plots with Bokeh along with some libraries built on top of it Holoviz eg When I include notebooks that have such plots in a book the outputs just disappear Any idea if this is supported and if not how to get started on getting the plots to display Cheers Paul Maybe related This is a small suggestion but Ive been exploring the popout feature which allows you to include extra info in the right sidebar without breaking your narrative flow I think its very cool But as the documentation explains on mobile and smaller screens the popouts become blockquotes inline with the content Thats fine However the popout as blockquote comes before the content that on a larger screen it would be next to When youre reading on mobile it has the effect of including a random bit of information before the content that would help contextualize it For example if you have a paragraph in your jupyterbook that introduces topic models you might include a popout to the right of it that says For more on topic models see XYZ But on mobile the popout For more on topic models see XYZ would come before youve ever introduced topic models So my suggestion would be to change the CSS so that you have to include popouts in the cell after the content that you want it to be next to That way on smaller screens it would become a blockquote that follows the content Big screen popout Screen Shot at AM Smaller screen blockquote Screen Shot at AM Im suggesting that this For example popout should perhaps follow the Add a popout cell Its not as necessary with this particular example but I think it is with more narrative style content I noticed that there are encoding problems when you try to download PDFs of certain jupyterbook pages with Chrome Some pages work fine but others dont for some reason And weirdly they all seem to work with Safari Im including a few example screenshots img width altScreen Shot at PM src img width altScreen Shot at PM src img width altScreen Shot at PM src 