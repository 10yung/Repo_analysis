Description This PR ensures that headers defined in proxy mode are always returned in responses Related Issue Motivation and Context In my projects I often use custom headers like xauthkey for authentication If you use Mockoon with this header xauthkey set in an environment it will work if the proxied server returns a response Incase of a error from the proxied server the header xauthkey is ignored See How Has This Been Tested Use Mockoon in proxy mode with some headers defined Access some valid endpoints in the proxied server from your browser and inspect the response headers It should return the headers defined Access an endpoint that does not exist in the proxied server such that you get a error The headers you defined in mockoon should be returned in the response as well UnitUI test No this is my entry PR to this project Things are still sketchy for me When you duplicate a route it should be good to have the cloned one right after the original not at the end of the list I use to organize the routes with the same path together but when I duplicate a route I have to go down to the bottom of the list of routes and move it It is tedious Describe the bug Environment logs entries icons are hidden when path is too long To Reproduce Make requests on long paths Expected behavior Icons shouldnt be hidden text should be truncated Screenshots Capture Mockoon version latest OS OS version all Is your feature request related to a problem Please describe When setting up an API prefix it is forwarded as is to the proxied route It can make sense that requests are proxied without the API prefix Example localhost myprefix is declared in Mockoon with no route and proxy mode active set to when calling localhost myprefixfoo it is forwarded to myprefixfoo Describe the solution youd like It could be useful to have it forwarded to foo ignoring the prefix declared in Mockoon This should be store in the settings Description Since you had trouble making version updates to the AUR PKGBUILD which I added I figured I could provide an Arch Linux container with a small script that does just that Motivation and Context Well using this it shouldnt be necessary anymore to contact me to bump the version number of the AUR package How Has This Been Tested Follow the steps provided in the READMEmd to build and run the container To see if its working you can simply use the current version as parameter to the docker run command git should then output that there have been no changes Screenshots if appropriate Happy Holidays Lukas When I used api with dynamic response I want to get the environment logs of current environment by api so i can get the api response of last api call and use it to dynamic verify in my UT Describe the bug Requesting mock route never resolves Keep waiting for response If I create same route manually it works well To Reproduce Turn On proxy mod Wait for real request to be logged in Environmental Log Create a mock route from env log Try to request the mocked route It just keeps waiting for response never resolves Expected behaviour When request the mock route it should return response Mockoon version OS OS version Mac OS We cannot resize routes pane so we cannot see from a quick look where is a specific route to make changes and we have to go through each one UPDOWN keys are not working when you try to scroll down routes as well MAC OS v i want to be able to make global rules that applies to all responses for that environment eg accesstoken in request header must be equal and exist would be nice thx bro Is your feature request related to a problem Please describe I am trying to use mockoon as a server to host my static files server as well as being able to reverse proxy per route for example when developing locally Id like to be able to reverse proxy to one or more of the microservices running locally but also reverse proxy to the dev api layer which hosts the bulk of the services Describe the solution youd like I have about microservices running and to be able to the run the application as a whole I would like to be able to point my services that I modified locally and test with the rest of the microservices on the dev env Describe alternatives youve considered I considered caddy webserver but I like mockoon GUI 