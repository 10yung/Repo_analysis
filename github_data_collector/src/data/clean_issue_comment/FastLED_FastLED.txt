Hello you already ship examples to use multiple LED strips with FastLED However all the examples use strips of the same LED length Being totally unfamiliar with FastLED this led me to the false conclusion that FastLED has a limitation that I need to have strips of the same length My suggestion would be to add one example where Length of the strips are different EG just an alteration of your examples Has an LED Ring and a LED Strip The pins here were based on an early draft of the Nano IOT package where the pin definitions were mislabeled in the comments This has recently been fixed This change uses the correct pin definitions I chose to use the last SPI but we might want to change that to something else as its used by the WiFi module and Im not exactly sure what FastLED plans to use it for but we may run into conflicts This pull request has a few substantial changes The main goal is to eliminate interruptrelated problems that cause flashy weirdness when FastLED is used in conjunction with the WiFi and web support libraries Change All RMT channels are started at the same time In the previous version we would fill each channel buffer and then start it immediately But in cases where there are many parallel LED strips it looks like the earlier channels were already getting refill interrupts while the later channels were still initializing their buffers causing timing errors The symptom is that the higher the channel number the worse the timing errors Change Each interrupt encodes exactly pixels worth of data simplifying the fill routine and speeding it up Change The refill interrupt is created at level Im not sure if this makes a huge difference but we really dont want LED output to be disrupted unless there is a damn good reason Hello i am new to FastLed and I am trying to control a WS with ardunio firefly grasshopper I want to control the LED to light up according to the integer value from serial read from firefly However the error message display primary expression before int Please advice how to fix this issue Thank you include FastLEDh include FastLEDh define NUMLEDS define DATAPIN define BRIGHTNESS define NUMLEDS define DATAPIN define CLOCKPIN CRGB leds NUMLEDS void loop while Serialavailable int val Serialread forint led led Turn the LED on then pause leds int CRGBBlue FastLEDshow delay Now turn the LED off then pause leds CRGBBlack FastLEDshow delay Until the depot resumes taking PRs Im integrating those needed for the nrf series of chips into my nrf fork as a way to help simplify getting people up and running during this transitional time Currently integrated PRs x Missing underscores in FLDEFPIN causing compilation fail regression from Issue Fix compilation fail for NRF and other singleport NRF chips Issue Feel free to reference additional NRF related PRs within this issue that youd like to see integrated in the interim fastledio is hosted on GitHub Pages and HTTPS can be enabled easily My setup ESP powered by USB common ground with LED strip WS B LEDs powered by a V A power supply D GPIO as data pin The issue Currently Im working on a project that uses the ESP as a websocket and webserver I want to run the LEDs at a certain FPS using the EVERYNMILLISECONDS FPS function I first ran all my tests without this function and everything worked as expected Then I started to add this function Id prefer a nonblocking function so the websocket can still receive data and I noticed that the LED strip started to bug out I started debugging the websocket by adding a nonblocking delay a blocking delay but it didnt help I started playing around with the code more and I figured out that it was the FastLED itself or maybe a combination with the WebSocket Whenever I dont have any waiting function and always call my FastLED function in the void loop itll work just fine But whenever theres a delay doesnt matter whether its blocking or nonblocking the LED strip starts to bug out For example not full code left out WiFi setup and Webserverwebsocket parts for readability this code works as expected c LED strip settings define DATAPIN define LEDTYPE WS B define COLORORDER GRB define NUMLEDS define MILLIAMPS void loop int frameTime framerate serverhandleClient webSocketloop juggle void juggle eight colored dots weaving in and out of sync with each other fadeToBlackBy leds NUMLEDS byte dothue for int i i i leds beatsin i NUMLEDS CHSVdothue dothue This code runs as expected the lights show up no issues at all I do receive the websocket data but I simply dont use it yet Now if I use this code c void loop int frameTime framerate serverhandleClient webSocketloop EVERYNMILLISECONDS frameTime juggle Pattern I noticed that it doesnt work anymore same for when I run my own pattern it will work correctly without the delay but if I use a delay it doesnt work anymore What happens Juggle shows x dots that go back and forward while they leave a nice faded tail whenever they cross it combines the colors With the nd code snippet it does somehow the same but theres a black dot in between the trails and each trail is almost as twice as long I guess theres a FastLED clock running somewhere in the background that is used in those functions I hoped FastLEDdelay would solve it but it didnt If the issue is unclear Ill try to record a video I hope anyone could help me out here or try the juggle animation themselves with the EVERYNMILLISECONDS framerate to see if they have the same issue I recently received an order from Ray Wu s Store I tested the following products WS B pixels led digital flexible panel light m LEDsm DC V addressable WS B led pixel strip m LEDsm DC V addressable WS B led pixel strip In testing these products with my FastLED test sketch which was slightly modified for the number of pixels and using the WS B chipset I have found that they work as expected with the Arduino Nano Wemos D mini Pro and the Lolin D MCUs They do not work correctly with the Teensy MCU at CPU speed of MHz but do work correctly when I lower the Teensy CPU to CPU speed of MHZ For the strips the cd colorwipedot function did not work properly five or more pixel lite up at a time not only one pixel at a time as it should but the fillsolid function did work correctly at the MHz CPU speed For the panel it did not work correctly at all for the fillsolid function or for the cd colorwipedot function at the Mhz CPU speed All of the products do not work correctly at all with the Teensy MCU at any CPU speed using my new product test sketch for the Teensy MCU My prior WS B strips and panel that I purchased from Ray Wu s Store in work correctly with the Teensy at MHz with the Teensy and with the other aforementioned MCUs When I contacted Ray Wu about this Ray Wu sent me an email stating the WS B has been upgraded to the V version this year so it is a little different than before Has anyone else experienced this type of problem with recently purchased WS B products Does anyone have any suggestions on how to make these products work at the higher CPU speed for the Teensy and to work for the Teensy Here are the pictures of the three products Use the zoom feature at the bottom in google pictures to get a closer look Here are the links to the three products that were just purchased from Ray Wu s Store M long ledsm WS B rgb led with WS IC builtin led pixel stripDC Vwaterproof in silicon tubeBLACK PCB m LEDsm DC V addressable WS B led pixel stripwaterproof in silicon tube pcs WS BM with pixelsBLACK PCB P mm WS B pixels led digital flexible panel lightsize cm cmDC V input Also I just tested the meter LEDsm strip with the Teensy at MHz and It does work with no level shifter and a ft length of gauge cable with JST connectors between the Teensy and the strip It does not work at all with no level shifter and a ft length of gauge cable with JST connectors between the Teensy and the strip It does work with level shifter and a ft length of gauge cable with JST connectors between the Teensy and the strip I am using the following two resistor protection circuit between the Teensy and the LEDS as seen in I am assuming that without the level shifter and the longer cable the D in voltage drop to the LED is such that the strip did not work While with the level shifter and the longer cable there is a D in voltage drop but the D in voltage at the chip is still high enough due to the level shifter so that the strip did work I will continue using the level shifter for insurance This change fix the issue with the random red pixel while using the rainbow effect based on issues and I would like you to add support for WS Using WS closest relative I found is that sometimes the LEDs show too bright colours This happens because the timing of a is much shorter for this chipset resulting in the LEDs sometimes mistakenly decodes a as a For WS using ESP FastLED outputs a as a roughly ns pulse WS wants between and So most often it works but using longer cables different voltages temperatures batchesmanufacturers it sometimes goes wrong Reference Oscilloscope picture of ESP using FastLED sending WS data bild WS manual wwwnormandledcomupload WS LED Datasheetpdf bild T hank you 