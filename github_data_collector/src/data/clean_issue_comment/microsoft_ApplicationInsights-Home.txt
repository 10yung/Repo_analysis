I see the SnapshotUploader process start successfully for my ASPNET application but no minidump file gets created Theres nothing in the log file that indicates its even tried to create a minidump like I would expect to see from here It looks like another process is supposed to be spawned which actually creates the minidump file This doesnt appear to start What triggers it The following stuff is the data that is sent to the application insight In order to find the part of the code that send this piece of data I tried to search the key word recipientName or recipientId but it shows no result Application Insights Telemetry nameMicrosoftApplicationInsights d c c b bc cc aEventtime T ZiKey d c c b bc cc atagsaicloudroleInstanceShengsMacBookProlocalaiinternalsdkVersiondotnetc databaseTypeEventDatabaseDataver nameBotMessageReceivedpropertiesfromId b d a f b d bd dlocaleenfromNameUserrecipientNameBotrecipientId c cb c fed c atextwhat is the next holiday When trying to create reference links between telemetry MSlinks attribute I observed an unexpected behavior in Azure Portal In my example the operation Say Hello batch processing has references to Single Say Hello operations think of batch processing On the portal clicking on any of the upstream operations gives the error message No operation with id xx could be found from the Say Hello batch processing operation This is a sample value for MSlinks operationId d da d ed db a bc a did d da d ed db a bc a d c f e fc operationIdb c f b b b ca id b c f b b b ca e aa e d operationId c b dd df c d ce b id c b dd df c d ce b f f ea Am I doing something wrong I have an app with some medium load mix of NET Core Micro services and old NET Framework code We have a lot of interservices calls so avg request duration is less than ms However Server Response Time chart on overview blade shows some crazy values like minutes average with minutes response time peaks Here is a response from support on how that Server Response time is calculated Duration in overviewblade is summarized by timespan and grain The avg value depends on how many grains in that timespan range The overall duration in performance grid is summarized by operations The avg value depends on avgs of operations I just dont get it Does that mean Works as expected The resulting minutes average server response time is totally unrelated to the real application performance That is times higher than avg value from Performance blade and times higher than requests summarize avgduration output What is the point of that summarization Is there any way to fix or disable it With no change to our pipelin we are now getting a failure on our Add release annotation to Azure Application Insights resource step T Z error Failed to create an annotation with Id dbfc b c a b a f fb Error Unknown Description Unknown I have tried updating the API key as i thought it had gone stale but no luck The only thing i can think of is that the Live metrics IP address has been changed Hello Ive added app insights into a wcf service Ideally Id like to grab the name of the method so I can run queries against the data coming in and view trends detailed information etc I was able to do this by adding the below into a CustomServiceHostcs However while this gave me exactly what I needed we found that this caused severe overhead onto our service as this code runs synchronously var extraTelemetry new ApplicationInsightsHelper MethodName methodName MicrosoftApplicationInsightsExtensibilityTelemetryConfigurationActiveTelemetryInitializersAddextraTelemetry Are there other alternatives to grabbing the name of the method that wont affect performance besides a custom telemetry initializer I feel as though this is something that should be supported out of the box and perhaps I just havent found the correct way to do it Thanks Daniel I am deploying AppInsights via ARM it takes about seconds to do the deployment so I am expecting it took that time to configure and initialize itself After about minutes I Deploy a function app which uses this instance of AppInsights This deployment seems to include the implicit create release annotation step as the following error gets logged debug PUT debug addReleaseAnnotation Data statusCode statusMessageNot Foundheaderscachecontrolnocachepragmanocachecontentlength contenttypeapplicationjson charsetutf expires xcontenttypeoptionsnosniffrequestcontextappIdcidv e b f aa bbb fe f a accesscontrolexposeheadersRequestContextstricttransportsecuritymaxage includeSubDomainsxmsratelimitremainingsubscriptionwrites serverMicrosoftIIS xmsrequestid d a c d d f be a d cxmscorrelationrequestid d a c d d f be a d cxmsroutingrequestidSOUTHCENTRALUS T Z d a c d d f be a d cdateMon Dec GMTconnectionclosebodycodeNotFoundmessageNot Foundinnererrordiagnosticcontexta a fd fc b a b a b a a fftime T Z Failed to add release annotation Error Failed to update Application Insights cptest Resource Error NotFound Not Found CODE debug POST debug Could not parse response debug Response undefined If I repeat the deployment after some time it succeeds Therefore the AppInsights is not ready after deployment Is there any workaround except to add a delay to my deployment pipeline Be By pharring xiaomi juliusl Restarted my webapp and StopProfiler errors have appeared every morning in my Applicationinsights Failures log Failed method MicrosoftWindowsAzureStorageSharedProtocolHttpResponseParsersProcessExpectedStatusCodeNoException Problem Id SystemNetWebException at MicrosoftWindowsAzureStorageSharedProtocolHttpResponseParsersProcessExpectedStatusCodeNoException Assembly MicrosoftWindowsAzureStorage Version Cultureneutral PublicKeyToken bf ad e at MicrosoftServiceProfilerCollectorsDetailedTraceCollectord MoveNext ApplicationInsightsProfiler Version Cultureneutral PublicKeyTokenb f f f d a a AgentVersion MachineEnvironmentType ANTARES The last time this occurred First mentioned in a restart reverted the Agent back to a previous version What is the recommended solution today Needs to be updated to release version