Before the documentation for param x in writedelim inside RwriteR was reused for writefile writelines and format which is obviously wrong This PR redefinesoverwrites the param x documentation where appropriate Hello When reading numerical data where commas are wrongfully used instead of points readtable seems to be silently removing commas leading to a modification of numerical values For example readtable turns the value to without any warning line of the original dataset r libraryreadr sparrows readtable Parsed with column specification cols Sex colcharacter wingcrd coldouble wt colnumber sparrows A tibble x Sex wingcrd wt chr dbl dbl m Thanks The second example is confusing And it for such an useful function it would be nice to have a few more examples of realistic usage R version Platform x pclinuxgnu bit readr I compiled readr from source hence at version to see if the problem went away but it did not make any difference Hi This problem stumped me for a few days as I thought I had hardware and or system library problems I was using readrreadcsv to open a large gzipped CSV file with about rows and columns I regularly check the size of the returned dataframe as Ive been performing multistage processingcleaning and save the data between stages For example r df readrreadcsvmydatacsvgz guess On one occasion I found that the data frame was only about rows and I was getting one or two warnings about parsing the file I thought I might have accidentally removed too many rows in a previous stage or used the wrong delimiter somehow I unzipped the csvgz file from a bash terminal and read the file in using base R readcsv Much to my relief I found that all the expected number of rows and columns were present so the csvgz file was fine The odd thing was that almost every time I ran the readrreadcsv function to read the csvgz file the row and column that produced the parsing error was different It was never consistent Hence I thought I had some sort of hardware problem or an odd system library issue I eventually found that my tmp directory was almost full Such that readrreadcsv would fill the tmp folder and I would get the parsing errors and a smaller tibble than expected Below is a reproducible example for a GNULinux system We can create a small temporary directory using tmpfs as root to illustrate the problem shell mkdir tmpr mount t tmpfs o size M tmpfs tmpr df Filesystem Type Size Used Avail Use Mounted on tmpfs tmpfs M M tmpr From my understanding readr decompresses files to the tempdir location so it can parse the file and guess the column types To manually override the tempdir location I found the unixtools library to be the easiest approach Well also change the temporary session path RSESSIONTMPDIR for good measure r librarydevtools devtoolsinstallgithubsuunixtools libraryunixtools unixtoolssettempdirtmpr tempdir tmpr SyssetenvRSESSIONTMPDIR tmpr SysgetenvRSESSIONTMPDIR tmpr Create a sufficiently large dataframe and save it as a CSV file r df dataframematrix nrow ncol writecsvdf mytablecsv rownames F quote T Read the csv file back into R to check if it worked r dfcsv readcsv mytablecsv dimdfcsv I could have used writecsvgzfile to compress the file but its easier do it manually in the terminal shell gzip c mytablecsv mytablecsvgz Base readcsv and gzfile has no problem reading the file This is important because readr also uses gzfile and I wanted to rule out gzfile being the cause of the problem r dfcsvgz readcsv gzfilemytablecsvgz dimdfcsvgz However running readrreadcsv produces warnings and a tibble with fewer rows than expected r dfcsvgz readrreadcsv mytablecsvgz Parsed with column specification cols default coldouble See spec for full column specifications Warning parsing failure row col expected actual file columns columns connection dimdfcsvgz The tempdir is not completely filled on the first run as you would expect If you rerunning the above command two times tempdir is filled with three files shell ls l tmpr total M rwrr user user K Dec file fd a rwrr user user K Dec file bae c rwrr user user Dec file cd Running the readcsv for a forth time results in an empty dataframe and no messages at all r dfcsvgz readrreadcsv mytablecsvgz dimdfcsvgz If we increase the tmpr directory size the problem is solved shell rm rf tmpr mount t tmpfs o remountsize M tmpfs tmpr df Filesystem Type Size Used Avail Use Mounted on tmpfs tmpfs M M tmpr r dfcsvgz readrreadcsv mytablecsvgz Parsed with column specification cols default coldouble See spec for full column specifications dimdfcsvgz I would have expected readrreadr to check if gzfile successfully decompressed the file before trying to parse it If you need any further information please let me know See comments in the reprex r libraryreadr librarytibble there is an empty string and an NA value in the data dat tibble x cNA y c printdat A tibble x x y chr dbl NA writedelimdat datcsv delim na colnames F dat readLinesdatcsv writedelim creates a csv file where the empty string is quoted while the NA value is not catdat sep n however readdelim does not respect the difference and treats both as NAs dat readdelim datcsv colnames cx y coltypes colsx colcharacter y coldouble locale localeencoding UTF delim quote na printdat A tibble x x y chr dbl NA NA writecsv uses the display option digitssecs to determine the precision of timestamps when writing csvs and will cut off decimal seconds when exporting without any sort of warning writecsv appears to do the same Also there seems to be minor precision issues with reading and writing timestamps librarylubridate libraryreadr SyssetenvTZUTC optionsdigitssecs Set to display decimal places packageVersionreadr t tibbletime mdyhms tz UTCmicroseconds t time UTC Displayed incorrectly t time ymdhms TRUE Actually equal to despite incorrect display writecsvt testtimecsv write csv with display set to decimal places optionsdigitssecs Set to only display decimal places writecsvt testtime csv write csv with display set to decimal places optionsdigitssecs Reset back to display decimal places test readcsvtesttimecsv test text readcsvtesttimecsv coltypes c read in as character test readcsvtesttime csv test text readcsvtesttime csv coltypes c read in as character t time ymdhms TRUE test texttime T Z digits but slightly off test time ymdhms TRUE test texttime T Z Only written decimal places test time ymdhms TRUE The readlinesraw is not handling correctly the CR and LF characters in UTF LE files r rawcrlf iconvab r n fromUTF toUTF LE toRaw TRUE rawcr iconvab r fromUTF toUTF LE toRaw TRUE rawlf iconvab n fromUTF toUTF LE toRaw TRUE readrreadlinesrawrawcrlf readrreadlinesrawrawcr readrreadlinesrawrawlf writeLines shows the example data in a more representative way than cat r libraryreadr fwfsample readrexamplefwfsampletxt catreadlinesfwfsample John Smith WA Y Mary Hartford CA Z Evan Nolan IL c writeLinesreadlinesfwfsample John Smith WA Y Mary Hartford CA Z Evan Nolan IL c supCreated on by the reprex package v sup Issue was supposed to have fixed the problem of reading compressed files from urls However I am getting an error when trying to read files from this ftp server The result is not the csv file inside the zip file When I download the zip first and then readcsv from local folder it works r readcsvftpftprmpcorgpubdataCS ODFW zip Hi I was wondering if there is a way to access password protected linksof the data file through readr I used to use http links to read in tsv files via readtsv function earlier until my institution made those links password protected and hence all my scripts broke This feature if available or could be made possible will be very helpful Thanks Ashu