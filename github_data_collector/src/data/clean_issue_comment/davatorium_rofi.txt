 Purpose For some script mode usages and displays the content is given additional information to help in finding the desired output like with the rofimoji and kaomoji rofi user scripts Since there is already a spec and support for adding icons it seems sensible to add in a meta field for entries to provide matchable text but not include it in the primary entry field Implementation Following the same logic as used for parsing the icon field on an entry an additional meta field is added and parsed out This field is then used along with the primary entry content when doing token matching This is similar in behavior to how the drun dialog works with matching things like keyword or category for more contextual searching Version Launch Command rofi modi ffhhomecluexperimentsfirehistffhlua show ffh asyncpreread eh sep Steps to reproduce run rofi What behaviour you see Since sep is dmenu specific option is ignored What behaviour you expect to see With rofi in dmenu mode you can use the sep and eh options to display a single selection across a multiple lines eg echo en a nb c nd rofi dmenu sep eh IMO this can be a nice way to display data I do this for a firefox tab switcher script rofi I have been wanting to display information this way but with modi scripts rather than dmenu I do not think its possible at the moment maybe programmatically in the script itself but I have not had any success yet Could the sep option or a similar function be added to mode scripts Thanks for your time Version Output of rofi v Version Configuration Output of rofi help in a gist Launch Command The commandline used to launch rofi rofi show drun Would it be possible to cache whatever data structure rofi stores the parsed application entries in and update it at startup if the application directories have changed This might solve some of the slow startup issues When using multiple keyboards with different keyboard layouts rofi does not respect the multiple keyboard layouts Instead it uses the same layout for all the keyboards It uses the layout of the keyboard where the last keypress happened before rofi was started Version Configuration everything is default Launch Command rofi dmenu Steps to reproduce acquire a second physical keyboard run xinput now connect your second keyboard to the computer run xinput again and note down the new entry thats the second keyboard run setxkbmap device de substituting with the id of your second keyboard In case there were multiple new entries in xinput repeat this step for all the new ids to make sure it works congratulations now your second keyboard has the german layout open a terminal and type rofi dmenu press the Enter key on your first physical keyboard try typing something into rofi with each of the two keyboards then quit rofi type rofi dmenu into the terminal again press the Enter key on your second physical keyboard try typing something into rofi with each of the two keyboards What behaviour you see The keyboards do not have different layouts while rofi is running Instead both of them take the layout of the keyboard on which you pressed the Enter key What behaviour you expect to see Instead I expected the keyboard layouts to work the way they work in basically all other graphical programs For example dmenu does not have this issue at all Why is this a problem Im using keyboards one for the left hand and one for the right and they have different custom layouts I assume Im not the only one But because of this issue its difficult to use rofi on such a setup Version Version giteb c bfd next Configuration Reproducable with stock config bash rofi noconfig theme dmenu Launch Command bash rofi noconfig theme dmenu Steps to reproduce run the command What behaviour you see no visible window or completely wrong for other themes rofi What behaviour you expect to see correct horizontal theme Version Version Configuration No user configuration at all Launch Command sepseq s sed s g echo e one ntwo nsep napples noranges nsep nquit rofi p Pick the right action dmenu Use Case When building CLI rofidriven menu apps it is sometimes very useful to separate groups of actions using separators to improve the UX enhance readability indicate grouping Currently one has to resort to fake separators see the above example but this has disadvantages No easy way to calculate separator width The separator is needlessly selectable which is not so good for UX One has to handle the case when the user presses Enter on a selected separator One cannot set the separator color in the theme the separator should be dimmer than the surrounding text but fake separators are text and so inherit the same foreground color Possible solutions a single special character like the horizontal boxdrawing character in the above example could be treated as a separator and extended to the right width a special string such as separator could be treated in the same way Thank you for considering this feature Rofi is an amazing tool I rely on daily Version Version Configuration No user configuration at all Launch Command echo e span colorredonespan nspan colorbluetwospan n rofi p TEST dmenu markuprows Steps to reproduce run the above command type span into the search box What behaviour you see both items are matched due to Pango markup rofispanproblem What behaviour you expect to see no items should be matched Version rofi Steps to reproduce Download releases Extract and go to subprojectslibkutilssrc Compare source file list with the corresponding repo tree Or use the attached Dockerfile to reproduce the build failure Dockerfiletxt What behaviour you see Some sources files are missing gitversionc required by meson xdgthemeexamplec required by meson tokenexamplec not required Meson setup build failed meson setup build subprojectslibnkutilsmesonbuild ERROR File srcgitversionc does not exist subprojectslibnkutilsmesonbuild ERROR File srcxdgthemeexamplec does not exist What behaviour you expect to see Sources files existing and meson setup build command success Currently using rofi Version The dmenu option can accept tabular data which in turn rofi displays as columns and rows It believe it would be useful to have support for an optional nonselectable fixed row for column headers when handling tabular data This could be placed under message bar such as the extra message bar where the data in the extra message bar is aligned with the columns beneath it My particular use case where I see this fit is extracting information from TaskWarrior and displaying it in rofi A user could have many entries and scrolling further down the list the fixed nonselectable headers row would stay under message bar ID Age Project Tag Due Description Urg h Test test d Testing h Test none d Finish me Version Launch Command rofi show drun Steps to reproduce sh rofi show drun themestr element texttransform lowercase or css themerasi element texttransform lowercase What behaviour you see A theme error of unexpected invalid property value What behaviour you expect to see A list of entries that have a lowercase style applied to them I was surprised to see this old video to somehow have lowercased elements I did notice texttransform does not seem to be supported but is this perhaps possible in a different way The option drundisplayformat seemed promising at first but I did not manage to figure out how to pass lowercase text to that in the Pango markup language 