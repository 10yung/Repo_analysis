Bumps ws from to details summaryRelease notessummary Sourced from wss releases Features Added ability to specify the readableObjectMode option when using WebSocketcreateWebSocketStream Bug fixes Fixed a bug that caused compress jobs to never be marked as complete Bug fixes An error is now thrown if the WebSocket server constructor is used incorrectly Features Added utility to wrap a WebSocket in a Duplex stream Bug fixes Reverted minor Remove unneeded if statement dbacf Bug fixes Added ability to disable sending the SNI extension Breaking changes Dropped support for Nodejs e bb Dropped support for urlUrl instances in the WebSocket constructor d b The behavior of WebSocketpiongsend has changed when the readyState attribute is not OPEN If the readyState attribute is CONNECTING an exception is thrown If the readyState attribute is CLOSING or CLOSED The bufferedAmount attribute is increased by the length of the data argument in bytes If provided the callback function is called with an error No exception is thrown even if the callback function is not provided Bug fixes trtable truncated details details summaryCommitssummary f dist e doc Fix Travis CI URL a c example Close the WebSocket connection on logout b d d minor Add ability to specify the readableObjectMode option d c f test Increase timeout for failing tests on Windows c c b fix Ensure that concat never returns uninitialized data b f perf Use TypedArrayset instead of Buffercopy bac e dist a e fix Ensure compress callback is always called fa doc Fix nits Additional commits viewable in compare view details br Dependabot compatibility score Dependabot will resolve any conflicts with this PR as long as you dont alter it yourself You can also trigger a rebase manually by commenting dependabot rebase dependabotautomergestart dependabotautomergeend details summaryDependabot commands and optionssummary br You can trigger Dependabot actions by commenting on this PR dependabot rebase will rebase this PR dependabot recreate will recreate this PR overwriting any edits that have been made to it dependabot merge will merge this PR after your CI passes on it dependabot squash and merge will squash and merge this PR after your CI passes on it dependabot cancel merge will cancel a previously requested merge and block automerging dependabot reopen will reopen this PR if it is closed dependabot ignore this patchminormajor version will close this PR and stop Dependabot creating any more for this minormajor version unless you reopen the PR or upgrade to it yourself dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency unless you reopen the PR or upgrade to it yourself dependabot use these labels will set the current labels as the default for future PRs for this repo and language dependabot use these reviewers will set the current reviewers as the default for future PRs for this repo and language dependabot use these assignees will set the current assignees as the default for future PRs for this repo and language dependabot use this milestone will set the current milestone as the default for future PRs for this repo and language You can disable automated security fix PRs for this repo from the Security Alerts page details Compiling tickgrinderutil v homerustmannRustProjectstickgrinderutil error E file not found for module conf srclibrs pub mod conf help name the file either confrs or confmodrs inside the directory src error aborting due to previous error For more information about this error try rustc explain E error Could not compile tickgrinderutil To learn more run the command again with verbose Makefile recipe for target test failed make test Error make test copy libstd to the distlib directory if its not already there if f distlibfind rustc print sysrootlib grep E libstd so head then cp find rustc print sysrootlib grep E libstd so head distlib fi cd configurator LDLIBRARYPATHdistlib RUSTFLAGSL utiltargetdebugdeps L distlib C preferdynamic cargo test nofailfast Compiling bitset v Compiling cursive v Compiling toml v Compiling rand v Compiling termion v Compiling numinteger v Compiling serdejson v Compiling numcomplex v Compiling indoc v Compiling numiter v Compiling numbigint v Compiling chan v error E this function takes parameters but parameter was supplied homecaiocargoregistrysrcgithubcom ecc db ec indoc srclibrs let unindented parsestrlit unindent nameasstr expected parameters error aborting due to previous error error Could not compile indoc warning build failed waiting for other jobs to finish error build failed make Makefile test Error Probably related to Since I do most of my development on mac these days it will be very helpful to be able to build and run the platform on it In addition many people use mac and being able to have it install there without having to go through extra hassle is a great bonus In the future Id like to get it building on Windows as well but as I dont really have a way to test that and its not a priority for me right now that will have to wait for another time Users should be able to set up and run the entire platform through Docker This will be useful for the continuous integration and will make things like automatic deployments much easier as well Currently the log viewer in the MM is a very simple implementation simply listening to messages arriving over the wire and adding them to the log table Id love to implement a reactvirtualized approach with an infinitelyscrolling list thats populated from the PostgreSQL server I honestly cant remember very well just how far along it was in development but it should also have full support for sorting filtering etc This project could really benefit from some kind of CI that automatically builds the platform in its entirety and runs the full battery of tests This will require a significant amount of effort but will probably be worth it in the long run The first step should be to get all of the tests to pass successfully Tests involving functionality that no longer exists or must be changed significantly should be removed or disabled until such a time as they can be reimplemented correctly Ideally an automatic deployment system such as nowsh would be set up as well with a full demo version of the platform but this isnt necessarily in the scope of this issue All dependencies in use by the platform should be updated to their latest versions The goal is to peg the entire platform to one version of Rust nightly which can then be incrementally updated as development continues