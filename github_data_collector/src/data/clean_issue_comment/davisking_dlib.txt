 Expected Behavior Im Using serverhttpexcpp example I just added a line after setlisteningport ourwebserversetlisteningip this IP is model i added at that time my pc public ip Current Behavior then i compile with VS and run in command line gave me a error error occurred in serverstart unable to create listener but example works perfectly with IP localhost Please let us know how should we use dlib http server to public serve Version Where did you get dlib official release Platform Windows bit Compiler visual Studio Dlib is available as a port in VCPKG documenting the install process here will help users get started by providing a single set of commands to build dlib ready to be included in their projects VCPKG is a C library manager that simplifies installation for dlib and other project dependencies we also test whether our library ports build in various configurations dynamic static on various platforms OSX Linux Windows x x UWP ARM to keep a wide coverage for users Im a maintainer for vcpkg and here is what the port script looks like We try to keep the library maintained as close as possible to the original library Hello I recently used dlib the python module for detecting human facial landmarks Id like to say dilbs detection is fast and pretty accurate However Id like to detect more facial landmarks pointseg points to improve the performance Since dlibs facial landmark detection is based on regression trees so Id like to train them by my selfdont worry for the data my partner will help me to label some face images So Id like to know is there any way that I can modify the dlib facial landmarks detector to let it detect points in a face image And if the answer is yes how should I train it Add new loss layer for binary loss per pixel say for completeness In the instancesegmentation example resolve possibly overlapping instances using the perpixel output intensity and not result rect size as previously while at it also make the instance output look soft Hello Can i feed face images with boundary boxes and resolutions from other face detectors into the DLIBs facerecognitionmodel v to get the embedding vectors For example face with boundary boxes from OpenCV cv dnnreadNetFromCaffe If it is possible how would the embedding vectors of the same image with different resolutions ie differ As python has been released for long time will dlib support python I tried several ways to install dlib in my conda environment but none of the online solutions works Thank you My install commands are conda install c menpo dlib python The conflict messages are Package certifi conflicts for python pip setuptools certifi version dlib python version a pip setuptools certifi version Package cacertificates conflicts for python openssl version b a cacertificates dlib python version a cacertificates Package pip conflicts for dlib python version a pip python pip Package python conflicts for python dlib python version a dlib numpy python version a Package setuptools conflicts for dlib python version a pip setuptools python pip setuptools Package wheel conflicts for dlib python version a pip wheel python pip wheel I tried to optimize HOG detector by resizing input image or frame by x or x but my original image before resizing was around x or it could be x Whenever image gets resized from original to x or x then below issues are happening Detection is not accurate if face is little FAR from camera so this detections output result causing issue for dlib LandmarkLM prediction So dlib LM points are coming outside the face Once image resized from x or x then face should be closer to camera in order to get a good detection result Once detection result is good then dlib LM will be accurate on face And Face wont be detected if face is little Far from camera HOG detector needs image or frame should be of resolution Standard Screen ratio otherwise detection result is not accurate Here I pass gray image for HOG detector So I get only average of to FPS after resizing image from original size And additional observations HOG detector is slower hence I am passing resized image or frame here I used below code for HOG detection Is there anyway we can improve speed and accurate detection in HOG FYI I used opencvHaarCascadexml for face detection it was faster and detects accurately for resized image or frame It gives good detection result too So dlib LM works very well with this Haarcascade for all kind of resize Please let me know how it make HOG detection accurate in result for resized image And How to improve FPS to achieve around to FPS passing gray scale image as input dlibcvimageunsigned char cimgsmallsmallframe Detect faces using dlib Hog detector stdvectordlibrectangle faces thisdetectorcimgsmall Hi davisking Thanks a lot for creating a MLDL tool for training different avenues of models I would like to leverage the tool you developed to train my own face recognition model on M images I have collected I am also willing to open source this if it passes the benchmark Fingers crossed Before I involve myself in this massive training task here are a couple of questions that seek your attention Were faces aligned for training dlibs face recognition model v If yes what techniques were used Were faces resized for training dlibs face recognition model v If yes what dimensions Does dnnmetriclearningonimagesexcpp suffice to start training Any data augmentation other than mentioned in the example file above was used during the original training of dlibs face recognition model v If there were any changes made to the above example file would you please share the changes or the original training code template Any other tipstricks for training face recognition model using dlib tool Thank you for your time Expected Behavior Say I have two GPUs in the system how to find out which one is used by dlib I gues it should be specifiable during the build as a command line argument of the compiled executable or something IMHO it is true for both examples and unit tests especially for unit tests Current Behavior GPUs or just one GPU are utilized by the samples and unit tests no idea which one no way to specify one Steps to Reproduce Just running the samples and unit tests Version Where did you get dlib dlibnet Platform Win x Compiler MSVC VS Update Expected Behavior I have compiled dlib test pack using CMake noticed that CUDA wont be used due to the lack of cuDNN then I run dtest runall without a single error using CPU only no CUDA support I have then added cuDNN last one for CUDA an recompiled test pack made sure that CUDA will be used Found CUDA CProgram FilesNVIDIA GPU Computing ToolkitCUDAv found suitable version minimum required is Looking for cuDNN install Found cuDNN CProgram FilesNVIDIA GPU Computing ToolkitCUDAv libx cudnnlib Building a CUDA test project to see if your compiler is compatible with CUDA Checking if you have the right version of cuDNN installed Enabling CUDA support for dlib DLIB WILL USE CUDA Expected to have dtest runall without a single error as well with CUDA support Current Behavior Three tests testcublas testdnn and testranking fail with similar error Failure message from test Error while calling cudaOccupancyMaxPotentialBlockSize numblocks numthreadsK in file d dlib dlib cuda cudautilsh code reason invalid device function I believe the kernel function passed to cudaOccupancyMaxPotentialBlockSize is considered as invalid via dlibcudalaunchkernel Any ideas how to fix that or what might be the cause The station Im working on has one GTX and one Tesla M other CUDAusing software run on those devices properly Im stuck with Fermi for a while which means Im stuck with CUDA and MSVC however present versions do not seem to vialoate dlib requirements Steps to Reproduce I believe everything is clear from the Expected Behaviour section Version Where did you get dlib dlibnet Platform Win x Compiler MSVC VS Update CUDA cuDNN 