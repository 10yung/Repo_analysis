hellothe jsdoc can support typescript file I see it in the betterdoc support but can not find in this the plugin can provide later Before creating a pull request please read our contributing guidelines and code of conduct Q A Bug fix no New feature yes Breaking change no Deprecations no Tests added no Fixed issues License Apache Describe your changes below in as much detail as possible Support for Node I would need to tag when a function has side effects say with sideEffects consolelog fswritefile Expected behavior This is supposed to be an array of strings or links to functions documentation within the same code base or externally or both sideEffects consolelog fswritefile or sideeffects consolelog link It could be abbreviated as sfx sfx consolelog fswritefile Related issues probably modifies doesnt seem to apply here When function types contain a signature eg functionstring boolean string catharsis parses them correctly but the type handling in JSDoc stringified them as function the signature was omitted With this change the signature is added too Fixes Before creating a pull request please read our contributing guidelines and code of conduct Q A Bug fix yes New feature no Breaking change maybe see Deprecations no Tests added no sorry Fixed issues commaseparated list of issues fixed by the pull request if any License Apache Describe your changes below in as much detail as possible Q A Bug fix yes New feature no Breaking change no Deprecations no Tests added no Fixed issues commaseparated list of issues fixed by the pull request if any License Apache The fix adds addition check to a condition In this way we will be saved when the object doesnt exist How can I achieve the following type HTMLInputElement var minifiedNavCb fixedHeaderCb fixedNavCb mobileNavCb Currently I only get the correct intellisense for minifiedNavCb Provide a general summary of the issue in the title above I am trying to create a typedef that inherits from another typedef object see below EnhancedSearch that inherits from Search Input code js typedef Object Search property string locationId an ID property Arraystring startDateRange The range of start dates property Arraystring endDateRange The range of end dates property Arraystring endDateRange The range of end dates property number perPage Page size property number page Sets current page property string order The way the sort field will be ordered by property string sortBy The field to sort the results by typedef Search EnhancedSearch property string currentDateTime The range of start dates property string timeZoneId The range of end dates property string startOfDateTimeSpan The range of end dates JSDoc configuration js source include srcsearch includePattern js excludePattern nodemodulesdocs plugins pluginsmarkdown templates cleverLinks false monospaceLinks false opts recurse true destination docs Expected behavior When I type in enhancedSearch and then I should see ALL object property options for the typedef not just for the Search typedef but for the EnhancedSearch typedef as well Current behavior When I type in enhancedSearch and then I only see object property options for the typedef Search additionally when I reference a property in enhancedSearch for example enhancedSearchtimeZoneId I see an error in vscode Property timeZoneId does not exist on type Search In case if a js file has an exported class that extends other class and this file has a function import then this class is omitted from the generated docs on recursive generation Check the following test bug reproduction repository Install dependencies Run command yarn jsdoc c jsdocjson See the following console output mntcdevelopprojectsjsdocbugnodemodulesbinjsdoc c jsdocjson Parsing mntcdevelopprojectsjsdocbugsrcBarjs Parsing mntcdevelopprojectsjsdocbugsrcFoojs Parsing mntcdevelopprojectsjsdocbugsrcfunctionsjs Generating output files Finished running in seconds Done in s All the files are parsed two classes Foo and Bar and a function Open the indexhtml document Expected result Two classes and the function are presented in the docs Actual result The Foo class is not presented in the docs Options to play Remove the function import in the Foojs Result The Foo class appeared in the docs Remove the extends Bar line in the Foojs Result The Foo class appeared in the docs Please fix that Hey guys I dont know if this is the right place to ask this but I googled a lot and I didnt find anything So regarding my question I am using the tutorial annotation to document a little bit more about my app and its quite usefull but I dont want to have those generated titles So lets say my tutorialconfigfile looks like this json manifest and in my tutorialfile named manifestmd I have some sample text then jsdoc is generating a big title and a small title So if I would have another title in my markdownfile there would be three titles So my question is Is there a way to hide those titles jsdoctutorial Expected behavior No extra titles are generated in a tutorialfile A way to manipulate the generation of those titles Current behavior big titles are generated by jsdoc Your environment Software Version JSDoc JSDoc Thu Sep GMT Nodejs v npm Operating system Windows Thanks a lot Best Regards Domae Provide a general summary of the issue in the title above Input code js Canvas class Canvas class Canvas Creates an instance of Canvas returns HTMLCanvasElement memberof Canvas constructorwidth height const canvas documentcreateElementcanvas canvaswidth width canvasheight height return canvas Expected behavior This is the js output so I know this works js const canvas new Canvas consolelogcanvaswidth Current behavior This is what happens when using a jsdoc plugin and hover over the width I would have expected the width to show that its a number js const canvas new Canvas consolelogcanvaswidth undefined 