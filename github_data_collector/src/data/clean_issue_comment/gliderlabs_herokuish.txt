For and CI tests for PRs on CircleCI does not work at all Before it worked well for and earlier See same file This is discussed in but now it is also causing issues with LumenLaravel If you have a env file in your LumenLaravel app it is read in via Herokuish The DotEnv PHP package that LumenLaravel uses will not override existing ENV values so this causes nested values to fail Nested values are formatted like MYVALUE MYNESTEDVALUEMYVALUE Outside of Herokuish MYNESTEDVALUE is set to correctly but inside the Herokuish environment is it left empty A solution would be to allow the env filename to be customised but ultimately this conflict would still exist This PR fixes slug generate gzips from tmpapp when it should gzip from app and Cannot execute any Procfile commands and fixed the issue mentioned in the blog post Running Herokuish apps in Docker Currently every time herokuish is run the app import path eg tmpapp is copied over to the app path eg app if the import path exists and has files in it This PR changes this so that the copy from the import path to the app path is only done on running herokuish buildpack build or herokuish buildpack test as suggested by matthewmueller in This means that you can now run buildpack build immediately followed by procfile start within the same container and things will work I can see at least two different ways that people were working around this issue before Mount the application volume in the app directory app rather than the import app directory tmpapp as seen in Dokku This has the disadvantage that build artifacts get written into the same directory as the source code of course you might want this you might not By using the recommended flow as outlined by michaelshobbs you create a docker image from the result of running buildpack build and then running a container from that image which doesnt have a volume mounted at tmpapp and so the contents of app is not overwritten This PR should not break those workarounds My gemfile specifies using ruby and my Gemfilelock specifies that its bundled with version Bundler version is the one that comes with ruby Unfortuationely buildpack test will fail because of this with the following error message bash Installing nodev linuxx Installing yarnv Detecting rake tasks Could not detect rake tasks ensure you can run bundle exec rake P against your app and using the production group of your Gemfile Activating bundler failed Could not find bundler required by your tmpbuildGemfilelock To update to the latest version installed on your system run bundle update bundler To install the missing version run gem install bundler Checked in GEMPATHtmpbuildvendorbundleruby execute gem env for more information To install the version of bundler this project requires run gem install bundler v tmpbuildpacks buildpackrubyliblanguagepackhelpersrakerunnerrb in loadraketasks Could not detect rake tasks LanguagePackHelpersRakeRunnerCannotLoadRakefileError ensure you can run bundle exec rake P against your app and using the production group of your Gemfile Activating bundler failed Could not find bundler required by your tmpbuildGemfilelock To update to the latest version installed on your system run bundle update bundler To install the missing version run gem install bundler Checked in GEMPATHtmpbuildvendorbundleruby execute gem env for more information To install the version of bundler this project requires run gem install bundler v ive go this issue when i installing go downloading githubcomjteeuwengobindata v incompatible go extracting githubcomjteeuwengobindata v incompatible go get githubcomjteeuwengobindata no matching versions for query latest Makefile recipe for target deps failed make deps Error Makefile recipe for target buildindocker failed make buildindocker Error make Leaving directory tmpherokuish Makefile recipe for target stack failed make stack Error make Leaving directory rootdokku Makefile recipe for target dependencies failed make dependencies Error all console log According to the proper way for browser testing is to set appjson to the following environments test buildpacks url herokunodejs url However herokuish does not support appjson It does however support buildpacks When I add the NodeJS and Google Chrome buildpacks herokuish uses the multi buildpack and fails to test because it is not using the Nodejs buildpack Steps to reproduce Use a simple node app I found this one from the examples or maybe the tests serverjs js var express requireexpress var app express appget functionreq res ressendnodejsexpress n Use PORT environment variable if it exists var port processenvPORT server applistenport processon SIGINT function consolelogCLOSING SIGINT processexit processon SIGTERM function consolelogCLOSING SIGTERM processexit consolelogServer listening on port d in s mode serveraddressport appsettingsenv packagejson json name examplenodejsexpress version scripts start node serverjs test mocha engines node yarn dependencies express x devDependencies mocha Now you can run docker run ti e NODEENVproduction rm v PWDtmpappro v PWDreleasetmprelease v PWDcachetmpcache gliderlabsherokuishlatest bash c binherokuish buildpack test binherokuish slug generate binherokuish slug export releasesreleasetargz This will build and test the app then generate the slug then export it to the release volume If you open that releases volume youll notice that its just using your prebuilt app the one at tmpapp and not the built app at app Currently after coping application to app during building in herokuish original file modification time are all lost and time for coping will be used This may cause issue when running some commands in custom buildpack Such as in default python buildpack collectstatic command will be run and this command should collect static files which modificaiton time are older than existed ones But since original file modification time are lost this command will collect all static files no matter they have been collected before or not Can we keep original file modification time during buidling such as using cp p Seems from there is no appjson support which means buildpacks like php and python dont even work completely Theres no test provided by the buildpack and youre expected to use appjson and without support it doesnt work This is a blocker for these languages using systems like gitlab autodev which us herokuish for zeroconf testing