 Brought to you by your friendly Repository Gardener Description I have an application which allows the user to to sign in anonymously during onboarding The user can sign in at a later time using GoogleFacebookApple Sign In When starting and cancelling the auto upgrade process using Apple Sign In the user account is deleted and the user is forced to sign in again effectively losing their data I have not found a workaround other than disablinghiding the Apple Sign In button during the auto upgrade process which may be against Apple guidelines I have not attempted to release the application with the button hiddendisabled I have verified that Apple Sign In works otherwise Environment Objective C or Swift Swift iOS version FirebaseUI version CocoaPods Version Steps to reproduce Sign in via Anonymous Auth Show FirebaseUI auth controller with Apple Sign In option shouldAutoUpgradeAnonymousUserstrue Click Apple Sign In option On the first Apple Sign In prompt click cancel Cancel auth controller to return to the app Close and restart the app Observed Results User is deleted User must sign in again Their previous data is effectively lost Never receive callback that login was cancelled Expected Results User should not be signed out if the sign in process was cancelled Ive verified that cancelling Google or Facebook sign in flow has no such effect Should receive callback that login was cancelled Relevant Code Looks to me thatFUIOAuthsignOut is called when the sign in flow is initiated which in turn calls FIRUserdeleteWithCompletion Xcode version Version C Firebase SDK version deepens on component not using the full sdk Firebase Component FirebaseAnalytics FirebaseUIAuth FirebaseUIEmail Crashlytics FirebasePerformance FirebaseCore Component version see above this is installed via cocoaPods Description The console log are showing many very invasive and frequent logs notio Assert Unsupported use of UIKit API off the main thread UIAccessibilityIsGuidedAccessEnabled notio Assert Unsupported use of UIKit API off the main thread UIAccessibilityIsAssistiveTouchRunning Steps to reproduce Install the cocoaPods component and use them Un able to pinpoint why this is happening The problem is as said previously extremely invasive logs that are making debugging difficult to read notio Assert Unsupported use of UIKit API off the main thread UIAccessibilityIsGuidedAccessEnabled notio Assert Unsupported use of UIKit API off the main thread UIAccessibilityIsAssistiveTouchRunning pod installation platform ios target MyAppThing do useframeworks pod SwiftLint pod FirebaseCore pod FirebaseAnalytics pod FirebaseUIAuth pod FirebaseUIEmail pod Crashlytics pod FirebasePerformance pod iOSDFULibrary end Hi I am trying to submit my app to the App Store but it got rejected by the App Review Team here is what they wrote Guideline Performance Software Requirements The Apple Signin authentication method does not use LocalAuthentication as the Apps primary authentication mechanism LocalAuthentication must be your apps primary biometric authentication method and any other custom facial recognition mechanism should be optional for login and cannot replace LocalAuthentication I have implemented the new FUIOAuthappleAuthProvider method to comply with the new rule that requires developers to provide signin with Apple in their App As it stands if we cannot use FUIOAuthappleAuthProvider to implement signin with Apple then we cant use the FUIAuth at all My only option for now is to implement Apple signin only outside of FUIAuth and implement the required LocaAuthentication protocol myself Could you please suggest any workaround this issue Did it happen to anyone besides me Thanks I am trying to Integrate FirebaseUI and implemented FUIAuthDelegate but unfortunately I am getting this warning img width altScreenshot at PM src and delegates method are not working I have check both version but getting same issue using Xcode Step Are you in the right place For issues or feature requests related to the code in this repository file a GitHub issue For general technical questions post a question on StackOverflow tagged appropriately For general Firebase discussion use the firebasetalk google group For help troubleshooting your application that does not fall under one of the above categories reach out to the personalized Firebase support channel Step Describe your environment Objective C or Swift Swift iOS version Firebase SDK version FirebaseUI version CocoaPods Version Step Describe the problem Steps to reproduce Sign in using Sign In With Apple for the first time Observed Results What happened AuthauthcurrentUserdisplayName in nil Expected Results What did you expect to happen For AuthauthcurrentUserdisplayName to be set to the fullName value of the ASAuthorizationAppleIDCredential passed into the authorizationControllerdidCompleteWithAuthorization method of the ASAuthorizationControllerDelegate Welcome to FirebaseUI and thanks for submitting an issue If not please feel free to fill in the following info so we can help faster Step Are you in the right place Yes Step Describe your environment Objective C or Swift Swift iOS version iOS Firebase SDK version Unrelated FirebaseUI version CocoaPods Version NA Step Describe the problem When using FUIEmailAuth where allowNewEmailAccounts is set to NO the user is unable to tap the email textfield to enter an email Steps to reproduce Instantiate an instance of FUIEmailAuth with allowNewEmailAccounts as NO Instantiate an instance of FUIAuth and add the above as a provider Run the app and tap Sign in with email Observed Results Unable to enter email address Expected Results Should be able to enter email address Relevant Code I think that celltextFieldenabled should only be NO when the email property of the FUIPasswordSignInViewController class is nonnull For a better experience the email textfield should always be enabled in case the user wants to use a different email to sign in Itll be helpful to add a swiftUI example that uses the standard FirebaseUI Heres skeleton code that works for me import SwiftUI import FirebaseUI import Firebase public var screenWidth CGFloat return UIScreenmainboundswidth public var screenHeight CGFloat return UIScreenmainboundsheight struct LoginView View State private var viewState CGSizewidth height screenHeight State private var MainviewState CGSizezero var body some View ZStack CustomLoginViewController error in if error nil selfstatus offsety selfMainviewStateheightanimationspring MainViewenvironmentObjectDataStoreoffsety selfviewStateheightanimationspring func status selfviewState CGSizewidth height selfMainviewState CGSizewidth height screenHeight struct LoginViewPreviews PreviewProvider static var previews some View LoginView struct CustomLoginViewController UIViewControllerRepresentable var dismiss error Error Void func makeCoordinator CustomLoginViewControllerCoordinator Coordinatorself func makeUIViewControllercontext Context UIViewController let authUI FUIAuthdefaultAuthUI let providers FUIAuthProvider FUIEmailAuth FUIGoogleAuth FUIOAuthappleAuthProvider authUIproviders providers authUIdelegate contextcoordinator let authViewController authUIauthViewController return authViewController func updateUIViewController uiViewController UIViewController context UIViewControllerRepresentableContextCustomLoginViewController coordinator class Coordinator NSObject FUIAuthDelegate var parent CustomLoginViewController init customLoginViewController CustomLoginViewController selfparent customLoginViewController MARK FUIAuthDelegate func authUI authUI FUIAuth didSignInWith authDataResult AuthDataResult error Error if let error error parentdismisserror else parentdismissnil func authUI authUI FUIAuth didFinish operation FUIAccountSettingsOperationType error Error In my SceneDelegateswift Im calling the following in scenewillConnectTo Use a UIHostingController as window root view controller if let windowScene scene as UIWindowScene let window UIWindowwindowScene windowScene if AuthauthcurrentUser nil windowrootViewController UIHostingControllerrootView LoginView else windowrootViewController UIHostingControllerrootViewMainViewenvironmentObjectDataStore selfwindow window windowmakeKeyAndVisible Hope this helps Im getting No such module FirebaseUI on Xcode Im using SwiftUI and this should be working right Heres my pod file pod FirebaseCore pod FirebaseFirestore pod FirebaseAuth pod FirebaseStorage pod FirebaseAnalytics pod GoogleSignIn pod FirebaseUI Looks like Facebook has issues No known class method for selector objectForJSONStringerror for line NSDictionary clientState FBSDKInternalUtility objectForJSONStringparameters FBSDKLoginManagerLoggingClientStateKey errorNULL Thanks