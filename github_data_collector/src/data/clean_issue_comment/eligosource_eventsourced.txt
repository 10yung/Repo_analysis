Is it possible to have MapDB as a journal in the Akka persistence library See Potentially use Typesafe Slick ScalikeJDBC Migration of inmessages outmessages acknowledgements Must also preserve original sequence number Journals that have separate counter keys must be updated after full migration accordingly See also Guidelines how to achieve backwards compatibility when the event and domain model changes over time It must be investigated if this requires further extensions to journals replay on all instances and then deliver on all instances Imagine the following scenario actors A B A is eventsourced and gets message from outside updates its internal state computes new messages and sends them to B B is not eventsourced gets message only from A updates its internal state In this case taking snapshots in a straightforward manner does not lead to consistent recovery as message sent from A to B could be either applied twice or get lost For consistent recovery the following trick can be applied Send SnapshotRequest to A A creates Asnapshot and does not call SnapshotRequestprocess but forwards its snapshot in custom message to B B creates Bsnapshot and combines it with received Asnapshot to ABsnapshot B calls SnapshotRequestprocessABsnapshot Having library support for this kind of consistent snapshots could relieve a developer from implementing the described process and probably saves a couple of process related custom types Criteria Load distribution Read consistency Just for review not intended to be merged in at this point I have done some minor adjustments wrt backticks and minor format issues that caused a bit of trouble in the conversion Doing a pandoc f markdowngithubrawhtml READMEmd o indexrst is more or less doing a perfect transformation getting warnings about not using local images but that is not a biggie to solve I need to add some table css to the sphinx theme to get a similar setup as the on github 