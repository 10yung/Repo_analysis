Closes There have been updates to the babel monorepo The devDependency babelcore was updated from to The devDependency babelparser was updated from to The devDependency babelpresetenv was updated from to These versions are not covered by your current version range If you don t accept this pull request your project will work just like it did before However you might be missing out on a bunch of new features fixes andor performance improvements from the dependency update This monorepo update includes releases of one or more dependencies which all belong to the babel group definition Publisher nicoloribaudo License MIT Find out more about this release details summaryFAQ and helpsummary There is a collection of frequently asked questions If those don t help you can always ask the humans behind Greenkeeper details Your Greenkeeper bot palmtree The devDependency flowparser was updated from to This version is not covered by your current version range If you don t accept this pull request your project will work just like it did before However you might be missing out on a bunch of new features fixes andor performance improvements from the dependency update Publisher flowtype License MIT Find out more about this release details summaryFAQ and helpsummary There is a collection of frequently asked questions If those don t help you can always ask the humans behind Greenkeeper details Your Greenkeeper bot palmtree The devDependency typesnode was updated from to This version is not covered by your current version range If you don t accept this pull request your project will work just like it did before However you might be missing out on a bunch of new features fixes andor performance improvements from the dependency update Publisher types License MIT Find out more about this release details summaryFAQ and helpsummary There is a collection of frequently asked questions If those don t help you can always ask the humans behind Greenkeeper details Your Greenkeeper bot palmtree recast esprima supports jsx Im trying to detect assignments such as CSLXmlJSONprototypechildren function how can I reconstruct the CSLXmlJSONprototypechildren left hand side when im in visitAssignment i am trying to edit ast then print it into js file but there is something confuse me after insertAfter something there is a empty linethat i do not want this let hasImport false traverseparsedCode ImportDeclarationelement if elementgetSiblingelementkey nodetype ImportDeclaration elementnodetype ImportDeclaration hasImport elementinsertAfter timportDeclaration tImportDefaultSpecifiertidentifiermoduleName tstringLiteralmodulePath hasImport true JSXElementelement const node openingElement element if openingElementnamename Redirect elementinsertAfter tjSXText n tjSXElement tjSXOpeningElement tjSXIdentifierRoute tjSXAttributetjSXIdentifierpath tstringLiteralroutePath tjSXAttributetjSXIdentifiercomponent tjSXExpressionContainertjSXIdentifiermoduleName true null true Thanks for anyone who can help benjamn The devDependency glob was updated from to This version is not covered by your current version range If you don t accept this pull request your project will work just like it did before However you might be missing out on a bunch of new features fixes andor performance improvements from the dependency update Publisher isaacs License ISC Find out more about this release details summaryFAQ and helpsummary There is a collection of frequently asked questions If those don t help you can always ask the humans behind Greenkeeper details Your Greenkeeper bot palmtree Would it be possible to use instead of specific versions and so its less likely that multiple versions of dependencies needing to be installed Im trying to support native ES modules in node through the experimentalmodules flag coming from the esm package But with recast I had a strange issue When importing it with the esm package I have to import it as import as recast from recast So recast makes itself available as separate nondefault exports that can be grouped using the syntax When importing recast with the node flag I have to import it as import recast from recast So recast seems to export a default bundling all functions The only way around it without patching recast is to check after the import whether it has a default export or not and then use the correct one js import as recast from recast const recast default in recast recastdefault recast When checking the recast code I saw the following line in the generated mainjs js ObjectdefinePropertyexports esModule value true I have no idea what it does but apparently its something from typescript that tries to enable ES modules and thus confuses the esm package or node Commenting out this line out also fixed my issue I have no idea if it should be considered an issue with the recast code with TypeScript with the esm package or with node module handling But its definitely an annoying difference