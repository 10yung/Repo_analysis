With Kotlin the support for raspberry was added which is a linuxArm Hfp plattform It would be great to extend the project for this platform I already compiled the libui manually and added it but it should be done directly in this project instead of doing it manualy These would be a welcome addition to the DSL as the tornadofx has them and theyre handy I saw this sample but it doesnt work for the ComboBox and probably others Not sure if it is macOS only and if it is blocked by upstream But I couldnt find any issueinfo in the upstream libui project Right click copy works though Hi Im using this library to build a desktop project but I need to close the window manually and recreate it later Now Im using the ktx library but I cannot find any methods to do this Are there any methods for me to use in order to close the window My code is attached below Thanks kotlin fun mainargs ArrayString appMain Display the UI and block To do some extra work fun appMain appWindow title Sample width height vbox button Quit action uiControlDestroy I tried it but the window closes without continuing the statements in main thisappWindowdispose As Kotlin now can build for bit windows I decided just switch windows build to bit and drop support for bit windows at least for now Do not see any reasons for bit windows executable for simple utilites If anyone have significant reasons please comment here and I will create new target windowsx To migrate just replace in your build scripts mingwX to mingwX and msys mingww x gcc clangllvmlld to msys mingww i gcc clangllvm Gradle should be upgraded to gradle wrapper gradleversion distributiontype all Im thinking about writing applications that run natively but also on the JVM Is it possible to write one single gui code using the kotlinlibui syntax Can the kotlinlibui library be extended so it uses eg TornadoFX but still provide the same programming interface to the developer For now there is almost no documentation except for autogenerated Any contributions will be very helpful Need to integrate coroutines support from and add sample similar to timer but based on coroutines Hi one more thing Ive seen files like this They look like they are generated from the png file and Im interested how you generated them Is the generator part of the repo And is it possible to extract the generation of the files as a step in the gradlebuild Hi me again Ive noticed the dispose method is never called for me in the examples Ive tried helloktx and controlgallery OS is Manjaro Kernel The callback from uiOnShouldQuit is never reached Even when I dispose the mainWindow manually I would have expected all childrens dispose method to be called which was not the case Im not sure if I missed something or maybe its a bug Andreas