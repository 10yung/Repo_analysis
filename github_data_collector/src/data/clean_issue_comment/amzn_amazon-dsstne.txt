Issue if available Description of changes Add NCEXCEPTION macro to replace old NcException API to let DSSTNE be compatible with newer netCDF library v By submitting this pull request I confirm that my contribution is made under the terms of the Apache license Issue if available Description of changes Replace shfl with SHFL to keep CUDA shuffle API compatible Update READMEmd to guide user to download new version CUB library because old CUB library uses legacy CUDA shuffle API By submitting this pull request I confirm that my contribution is made under the terms of the Apache license Description of changes Fix old style python code which only can be run by Python now autoencoderpy can be run by both Python and Python Replace tfsub with tfsubtract to let autoencoderpy be run by TensorFlow x By submitting this pull request I confirm that my contribution is made under the terms of the Apache license Issue if available No issue Description of changes Adds NVLINK support through DGX V and enables more efficient sparse kernels for smaller embedding widths By submitting this pull request I confirm that my contribution is made under the terms of the Apache license it threw nvcc O stdc compileroptionsfPIC usefastmath ptxasoptionsv gencode archcompute codesm gencode archcompute codesm gencode archcompute codesm gencode archcompute codesm DOMPISKIPMPICXX keepdir testworkspacectramazondsstnebuildtmpenginecuda Iusrlocalinclude isystem usrlocalcudainclude isystem usrlibopenmpiinclude isystem usrincludejsoncpp IB C IB CKernelCommon Itestworkspacectramazondsstnebuildinclude Iutils c kernelscu o testworkspacectramazondsstnebuildtmpenginecudakernelso ptxas tmptmpxft a kernelscompute ptx line error Instruction shfl without sync is not supported on target sm and higher from PTX ISA version the old CUDA shuffle API have been deprecated in CUDA and not available after CUDA link CUDA GPU NVIDIA Tesla V It threw usrincludencExceptionh note candidate expects arguments provided NNNetworkcpp error no matching function for call to netCDFexceptionsNcExceptionNcExceptionconst char stdcxx basicstringchar const char int throw NcExceptionNcException NNetworkNNetwork No weights supplied in NetCDF input file fname FILE LINE the available constructors of NcException in libnetcdfc are link class NcException public stdexception public NcExceptionconst char complaint const char fileName int lineNumber NcExceptionint errorCode const char complaint const char fileName int lineNumber there is no constructor accepting arguments like const char const stdstring const char int OS Ubuntu libnetcdfc ds installed by apt install command fp is defined here but may be NULL Stream pointer might be NULL System version Distributor ID Ubuntu Description Ubuntu LTS Release Codename bionic Cuda version nvcc NVIDIA R Cuda compiler driver Copyright c NVIDIA Corporation Built on SatAug CDT Cuda compilation tools release V When I run make command and have following errors GpuTypesh warning cudaErrort cudaThreadExit is deprecated Wdeprecateddeclarations cudaThreadExit GpuTypesh note in expansion of macro RTERROR RTERRORstatus GpuBufferDeallocate failed cudaFree In file included from usrlocalcudaincludechanneldescriptorh from usrlocalcudaincludecudaruntimeh from usrlocalcudaincludecurandh from GpuTypesh from NNNetworkcpp usrlocalcudaincludecudaruntimeapih note declared here extern CUDADEPRECATED host cudaErrort CUDARTAPI cudaThreadExitvoid In file included from NNNetworkcpp GpuTypesh warning cudaErrort cudaThreadExit is deprecated Wdeprecateddeclarations cudaThreadExit GpuTypesh note in expansion of macro RTERROR RTERRORstatus GpuBufferDeallocate failed cudaFree In file included from usrlocalcudaincludechanneldescriptorh from usrlocalcudaincludecudaruntimeh from usrlocalcudaincludecurandh from GpuTypesh from NNNetworkcpp usrlocalcudaincludecudaruntimeapih note declared here extern CUDADEPRECATED host cudaErrort CUDARTAPI cudaThreadExitvoid In file included from NNNetworkcpp GpuTypesh warning cudaErrort cudaThreadExit is deprecated Wdeprecateddeclarations cudaThreadExit GpuTypesh note in expansion of macro RTERROR RTERRORstatus GpuBufferDeallocate failed cudaFree In file included from usrlocalcudaincludechanneldescriptorh from usrlocalcudaincludecudaruntimeh from usrlocalcudaincludecurandh from GpuTypesh from NNNetworkcpp usrlocalcudaincludecudaruntimeapih note declared here extern CUDADEPRECATED host cudaErrort CUDARTAPI cudaThreadExitvoid In file included from NNNetworkcpp GpuTypesh In instantiation of void GpuBufferTDeallocate with T char GpuTypesh required from GpuBufferTGpuBuffer with T char usrincludec bitsuniqueptrh required from void stddefaultdeleteTpoperatorTp const with Tp GpuBufferchar usrincludec bitsuniqueptrh required from stduniqueptrTp Dpuniqueptr with Tp GpuBufferchar Dp stddefaultdeleteGpuBufferchar GpuSorth required from GpuSortKeyType ValueTypeGpuSortunsigned int with KeyType unsigned int ValueType unsigned int NNNetworkcpp required from here GpuTypesh warning cudaErrort cudaThreadExit is deprecated Wdeprecateddeclarations cudaThreadExit GpuTypesh note in expansion of macro RTERROR RTERRORstatus GpuBufferDeallocate failed cudaFree In file included from usrlocalcudaincludechanneldescriptorh from usrlocalcudaincludecudaruntimeh from usrlocalcudaincludecurandh from GpuTypesh from NNNetworkcpp usrlocalcudaincludecudaruntimeapih note declared here extern CUDADEPRECATED host cudaErrort CUDARTAPI cudaThreadExitvoid In file included from NNNetworkcpp GpuTypesh warning cudaErrort cudaThreadExit is deprecated Wdeprecateddeclarations cudaThreadExit GpuTypesh note in expansion of macro RTERROR RTERRORstatus GpuBufferDeallocate failed cudaFree In file included from usrlocalcudaincludechanneldescriptorh from usrlocalcudaincludecudaruntimeh from usrlocalcudaincludecurandh from GpuTypesh from NNNetworkcpp usrlocalcudaincludecudaruntimeapih note declared here extern CUDADEPRECATED host cudaErrort CUDARTAPI cudaThreadExitvoid In file included from NNNetworkcpp GpuTypesh warning cudaErrort cudaThreadExit is deprecated Wdeprecateddeclarations cudaThreadExit GpuTypesh note in expansion of macro RTERROR RTERRORstatus GpuBufferDeallocate failed cudaFree In file included from usrlocalcudaincludechanneldescriptorh from usrlocalcudaincludecudaruntimeh from usrlocalcudaincludecurandh from GpuTypesh from NNNetworkcpp usrlocalcudaincludecudaruntimeapih note declared here extern CUDADEPRECATED host cudaErrort CUDARTAPI cudaThreadExitvoid Makefile recipe for target homeuser source amazondsstnebuildtmpenginecppNNNetworko failed make homeuser source amazondsstnebuildtmpenginecppNNNetworko Error make Leaving directory homeuser source amazondsstnesrcamazondsstneengine Makefile recipe for target engine failed make engine Error According to the prediction requirements the time series is granular in minutes We first remove all the parts with missing rate exceeding in the time series but in the remaining time series there are still some sparse time series For example the time series of consumers paying per minute has a value of at many points in time If these sequences are directly modeled the prediction effect of the model may be greatly reduced So how do you preprocess these sparse time series before building a predictive model Have you ever encountered a similar situation and how is it handled Thank you The following image is a screenshot of some of the data in the sparse time series the length of time is one month I have encountered two separate issues when trying to build the Docker version of dsstne I am using the DSSTNE CUDA amife ami on a g xlarge instance in useast First I cannot run the driver information app Whenever I try to run nvidiadocker run rm nvidiacuda nvidiasmi The response is docker Error response from daemon OCI runtime create failed containerlinuxgo starting container process caused exec nvidiasmi executable file not found in PATH unknown I know the nvidiasmi app is there whereis nvidiasmi nvidiasmi usrbinnvidiasmi usrsharemanman nvidiasmi gz And if I simply run the nvidiasmi app from bash I see that the driver is installed NVIDIASMI Driver Version GPU Name PersistenceM BusId DispA Volatile Uncorr ECC Fan Temp Perf PwrUsageCap MemoryUsage GPUUtil Compute M GRID K Off Off NA NA C P W W MiB MiB Default Processes GPU Memory GPU PID Type Process name Usage No running processes found But somehow the PATH for nvidiadocker does not point to it Do I need to build nvidiadocker to resolve this PATH problem Or use another ami I see that there are other dsstne amis in useast Second if I go ahead and try to build dsstne from the repository using latest I see a warning from the makefile Step RUN cd optamazondsstnesrcamazondsstne make install Running in a f Makefile Makefile USE OF DEPRECATED MAKEFILE Makefile PLEASE USE THE ONE AT THE ROOT OF THE REPOSITORY Makefile And the make fails with the error mkdir p optamazondsstnesrcamazonamazondsstne cp rfp optamazondsstnesrcamazonbuildlib optamazondsstnesrcamazonamazondsstnelib cp cannot stat optamazondsstnesrcamazonbuildlib No such file or directory make install Error Makefile recipe for target install failed The command binsh c cd optamazondsstnesrcamazondsstne make install returned a nonzero code When I change the Dockerfile to use the Makefile at the root of the repo the build fails with In file included from srcmainnativecomamazondsstneDsstnecpp srcmainnativejniutilh fatal error jnih No such file or directory compilation terminated make targetnativebuildcomamazondsstneDsstneo Error At this point I am at an impasse I did try following the setup instructions using the community ami Amazon DSSTNE nvidiadocker ami c eb but encountered the same error My next step is to try to rebuild nvidiadocker and then continue to grind through the dsstne docker build But I hope that someone can let me know what I am doing wrong before I spend another day on this task instead of working with dsstne Mike Templeman 