The tutorial is really great and I finally managed to get a triangle on my screen I would like to provide some feedback and suggestions Adding illustrations for how things interact will help one grasp the relation bw code pieces more easily One such example I think its the only one there is from the official Vulkan tutorial Looking at these images really helped me reason better about the code and gain a better understanding of how stuff works and more importantly what I need to do to get something working It would also be nice if the code listing after each lesson had all the code added from this lesson highlighted with perhaps a color that is say lighterdarker This helps draw attention to the code modified helping with focus The sidebar is great to navigate around but for focusing on the content it would help if the main content is centered in the screen Im not sure what design would be the best but a simple hamburgerstyle slideinout sidebar would do fine Dark Mode if possible Thank you for the tutorial Had a lot of fun so far Hey am I crazy or is the up vector typod I noticed the view was not changing how I expected when I moved the camera along the xaxis I assume this is the cause Or is there something else thats making up for this There is a question how to render the realtime stream of Yuv just like the Yuv data decoded by decoder how to render it in real time Can vulkan render realtime yuv data like gl yuvtexcpp in the source code I have the latest LG SDK and NVIDIAIntel driver I use the Khronos validation layer Everything seems fine I checked the FAQ and VIA I see no issues Yet mycode does not call the callback as described in the tutorial I followed the bug instruction I also checked the comments and some old reddit posts Finally I used the extensions messenger function to send a test data and that worked and I was able to see my message from the callback Yet I see no other validation messages as described in the tutorial thus I am not sure if my code works as expected Could the info be outdated with the latest SDKs Is there anything else that I could check to see if everything is setup correctly In the generated ebooks the table of contents is missing entries and is not properly grouped as on the website and this is a bit confusing Also chapter numbers could help in that case The guide mentions push constants in Graphics pipeline basics and Descriptor layout and buffer but they are never discussed in the guide as far as I can find with search This is a bit disappointing See Your tutorials seem to be focused on building one single static scene and doesnt elaborate on how to draw objects after everything is setup and running A chapter on Best Practices For Dynamic Scenes might be a good starting point for people after they have mastered the current set of chapters I can only assume after mastering your tutorials is that we need a way to submit commands to our command buffers afterthefact but what is a good approach to take when doing this Do we need to completely flush a command buffer and resubmit all commands for every object in the scene Should buffers be split up into groups depending on how likely we are to addremove objects from the buffer A chapter exploring these ideas would be extremely valuable to newcomers to Vulkan especially since your tutorials are the best around Could someone please create a C code link just before the Frames in flight section Drawing a triangleDrawingRendering and Presentation If you dont get a triangle its REALLY hard to find the error as there is no code to compare to at that exact pointyou can only compare to the code that adds a whole bunch of extraneous frames in flight stuff Providing a C code link right before that point would make life a lot easier on people It sure would have helped me I had to basically restart from ground zero a second time and walk forward to find my error I had two bugs simultaneously and I couldnt extract one from the other because I didnt have a good basis for comparison Thanks As evident from this comment and this Reddit thread the exact operation of subpass dependencies in the tutorial is still kind of elusive There should be a better explanation of how they work possibly based on this issue 