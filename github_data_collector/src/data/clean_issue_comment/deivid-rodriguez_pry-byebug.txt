 versions from gemfilelock related to pry pry coderay methodsource prybyebug byebug pry pryrails pry With rails stacks having about frames Id like backtrace to be able to show the last frames etc Maybe a simpler solution is to just have backtrace use the pager Other commands like history all use the pager My apologies if this has been suggested before but I think it would be super useful to have a command that lets you run until you hit the next line of nonRailsnongem code Heres an example scenario Id like to use contractsruby to enforce calling contracts on methods The problem I run into is that if I want to use prybyebug to step into a method call it ends up stepping into contracts code first Although a workaround is possible via combinations of step up and next its very easily to screw that up and end up accidentally stepping right over the method call A single command that would run until hitting code that isnt inside a gem would be way more convenient If I have the time at some point Ill see if I can delve into this myself and maybe get a PR up for it but in the meantime I wanted to mention it Thanks a lot Can we get a variables box on the right side that stays onscreen so we can see our variable values When I try using prybyebug I find I am unable to step through my code It goes into some internal code not written by me and then gives an error about deadlock For anybody unfamiliar with Selenium it is a library that lets a person programmatically control a web browser I am using Mac osx I had to do gem install seleniumwebdriverwhich I guess you know And I had to install a chrome web driver which I did with brew tap homebrewcask and brew cask install chrome driver Selenium is running fine for me The program below demonstrates an issue Im having with prybyebug ApplesMBPaa apple ls l total rwrr apple staff Dec Gemfile rwrr apple staff Dec Gemfilelock rwrr apple staff Dec pbbseleniumthingrb ApplesMBPaa apple cat Gem file gem prybyebug ApplesMBPaa apple bundle install Using bundler Using byebug Using coderay Using methodsource Using pry Using prybyebug Bundle complete Gemfile dependency gems now installed Use bundle info gemname to see where a bundled gem is installed ApplesMBPaa apple cat pbbseleniumthingrb require seleniumwebdriver require pry require prybyebug bindingpry driver SeleniumWebDriverforchrome drivernavigateto puts driverfindelementtagname input puts driverfindelementname q driverfindelementname qsendkeysasdf sleep ApplesMBPaa apple ruby pbbseleniumthingrb WARN Unresolved specs during GemSpecificationreset ffi WARN Clearing out unresolved specs Please report a bug if this causes problems From Usersapplerubyselenium aapbbseleniumthingrb line require pry require prybyebug bindingpry driver SeleniumWebDriverforchrome drivernavigateto puts driverfindelementtagname input puts driverfindelementname q prymain step From usrlocallibrubygems gemsseleniumwebdriver libseleniumwebdriverrb line SeleniumWebDriverfor def selfforargs WebDriverDriverforargs end prySeleniumWebDriver step From usrlocallibrubygems gemsseleniumwebdriver libseleniumwebdrivercommondriverrb line SeleniumWebDriverDriverfor def forbrowser opts case browser when chrome ChromeDrivernewopts when internetexplorer ie IEDrivernewopts when safari SafariDrivernewopts when phantomjs PhantomJSDrivernewopts when firefox ff FirefoxDrivernewopts when edge EdgeDrivernewopts when remote RemoteDrivernewopts else raise ArgumentError unknown driver browserinspect end end prySeleniumWebDriverDriver step From usrlocallibrubygems gemsseleniumwebdriver libseleniumwebdrivercommondriverrb line SeleniumWebDriverDriverfor def forbrowser opts case browser when chrome ChromeDrivernewopts when internetexplorer ie IEDrivernewopts when safari SafariDrivernewopts when phantomjs PhantomJSDrivernewopts when firefox ff FirefoxDrivernewopts when edge EdgeDrivernewopts when remote RemoteDrivernewopts else raise ArgumentError unknown driver browserinspect end end prySeleniumWebDriverDriver step From usrlocalCellarruby libruby rubygemscoreextkernelrequirerb line Kernelrequire The normal ttrequirett functionality of returning false if that file has already been loaded is preserved def require path RUBYGEMSACTIVATIONMONITORenter path pathtopath if pathrespondto topath if spec Gemfindunresolveddefaultspecpath Gemremoveunresolveddefaultspecspec prymain step From usrlocalCellarruby libruby monitorrb line MonitorMixinmonenter def monenter if monowner Threadcurrent monmutexlock monowner Threadcurrent moncount end moncount end pryMonitor step From usrlocalCellarruby libruby monitorrb line MonitorMixinmonenter def monenter if monowner Threadcurrent monmutexlock monowner Threadcurrent moncount end moncount end pryMonitor step beforesession hook failed ThreadError deadlock recursive locking usrlocalCellarruby libruby monitorrb in lock see pryhookserrors to debug pryMonitor quit Traceback most recent call last from pbbseleniumthingrb in main from usrlocallibrubygems gemsseleniumwebdriver libseleniumwebdriverrb in for from usrlocallibrubygems gemsseleniumwebdriver libseleniumwebdrivercommondriverrb in for from usrlocalCellarruby libruby rubygemscoreextkernelrequirerb in require from usrlocalCellarruby libruby monitorrb in monenter from usrlocallibrubygems gemsbyebug libbyebugcontextrb in atline from usrlocallibrubygems gemsprybyebug libbyebugprocessorspryprocessorrb in atline from usrlocallibrubygems gemsprybyebug libbyebugprocessorspryprocessorrb in resumepry from usrlocallibrubygems gemsprybyebug libbyebugprocessorspryprocessorrb in run from usrlocallibrubygems gemsprybyebug libbyebugprocessorspryprocessorrb in catch from usrlocallibrubygems gemsprybyebug libbyebugprocessorspryprocessorrb in block in run from usrlocallibrubygems gemsbyebug libbyebughelpersevalrb in allowingotherthreads from usrlocallibrubygems gemsprybyebug libbyebugprocessorspryprocessorrb in block levels in run from usrlocallibrubygems gemsprybyebug libbyebugprocessorspryprocessorrb in block in resumepry from usrlocallibrubygems gemspry libprypryinstancerb in repl from usrlocallibrubygems gemspry libpryreplrb in start from usrlocallibrubygems gemspry libpryinputlockrb in withownership from usrlocallibrubygems gemspry libpryinputlockrb in withownership from usrlocallibrubygems gemspry libpryreplrb in block in start from usrlocallibrubygems gemspry libpryreplrb in repl from usrlocallibrubygems gemspry libpryreplrb in loop from usrlocallibrubygems gemspry libpryreplrb in block in repl from usrlocallibrubygems gemspry libpryreplrb in read from usrlocallibrubygems gemspry libpryindentrb in correctindentation from usrlocallibrubygems gemspry libpryterminalrb in screensize from usrlocallibrubygems gemspry libpryterminalrb in actualscreensize from usrlocallibrubygems gemspry libpryterminalrb in screensizeaccordingtoioconsole from usrlocalCellarruby libruby rubygemscoreextkernelrequirerb in require from usrlocalCellarruby libruby monitorrb in monenter usrlocalCellarruby libruby monitorrb in lock deadlock recursive locking ThreadError ApplesMBPaa apple When using prybyebug the bindingpry instruction is nonfunctional at the end of a code file require pry code code code bindingpry ruby myfilerb Banister from the pry repo reckons this is a bug in prybyebug See the issue here Hi I frequently want to do something where I have a method that when called breaks me out of my pry and runs a number of commands For example if I know that the next series of calls are skippable I might have a method def skipcalls next step next step next end However this doesnt work since the next command and others only exist when the pry console is open Ive tried using something like PryByebugContinueCommandnewtarget bindingprocess But this doesnt seem to work it needs a lot of additional context when initializing the parent pry command Ive also tried pryevalnext but when I call a method that references pry it says pry does not exist Is there a recommended way to accomplish this Thanks Alex One thing that really frustrates me is not being able to paste multiple lines of code I often have to make little blocks of code into a single line add semicolons use curly braces etc It would be extremely useful if there was a way to paste multiple lines of code and execute the code once you reach the final end or Actually I just started irb to test it out and it seemed to work fine which is strange Do you know why this might be working fine in irb and broken in my Rails app irb require prybyebug bindingpry Frame number prymain begin prymain puts hello prymain end hello nil prymain Im using prybyebug v byebug v Ruby p EDIT Oh yeah I also opened this issue a while ago Adapted from JoshCheek code at This fixes I searched around and couldnt find information on how I could use the rest of the byebug commands that are not explicitly exported by prybyebug for eg list list list Is there some way to descend into the byebug session from within pry Currently I need to uninstall prybyebug and instead use the byebug statement to start the debugger run pry to go into the repl run some commands then exit next next pry again commands exit next etc