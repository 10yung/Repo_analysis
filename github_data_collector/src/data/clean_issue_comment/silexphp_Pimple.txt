 instead of keep to arrayaccess fetching it with thisvalues id deleted It would be nice to be able to receive in the service definition closure the PSR container instead of the pimple container when necessary This has the benefit on enabling one to depend only on PSR instead of a specific implementation on it at the service definition side of things Maybe relying into the argument type hint php logger function Psr Container ContainerInterface c port if chasloggerport port cgetloggerport return new Gyg Gyg Logger Loggercgetloggerhost port Do you agree this is useful I can send a Pull Request if necessary Please add PSR functionality in the spirit of the PR The motivation is this If you want to write interoperable factories you want to receive a PSR container However the factories will receive a Pimple container in any case This is the reason why I have always used xtreamwayz implementation He states that his project is superseded by zendpimpleconfig They solved it by wrapping each factory in a closure I fear that this is a performance penalty and I think there is no argument against implementing the PSR interface second try for perhaps opinions have changed in years and if people need to install composer packages with full content then can and should use prefersource There is a single core and multiple modules in my app There are common services for the whole app and individual services for the modules in the app I want to use service containers to lazyload services Here how I see it php use Pimple Container coreContainer new Container coreContainer foo foo coreContainer pdo function return new PDO module Container ContaineroverridecoreContainer module Container mailer function return new Mailerserver user pass module Container ContaineroverridecoreContainer module Container foo foo module Container mailer function return new Mailerserver user pass coreContainer foo bar echo coreContainer pdo PDO echo coreContainer mailer service mailer not found echo module Container pdo PDO echo module Container mailer Mailer echo module Container foo bar echo module Container foo foo I would be really great if Pimple has this feature I can implement it if you approve an interface Inspired by mrclaypropsdic making Pimple IDE friendly php propertyread string style propertyread Dough dough propertyread Cheese cheese propertyread Pizza pizza method Slice newslice see more It would be useful if Pimple could keep track of services as they are invoked and expose a method for getting this list This would useful for example in debugging to examine exactly which services were invoked and in what order for any given request a nontrivial task in a large complex application This would also be useful to a developer who is seeking to reduce the number of dependencies for a particular request Assume the following SCCEE php class MySilex extends Silex Application public function construct parentconstruct thisregisternew Silex Provider TwigServiceProvider twigpath DIR views thisextendtwig this twigExtension public function twigExtension TwigEnvironment twig twigaddGlobalfoo bar return twig myApp new MySilex Throws an InvalidArgumentException at the extend line on the following check in Containerextend php if isobjectcallable methodexistscallable invoke throw new InvalidArgumentExceptionExtension service definition is not a Closure or invokable object Shouldnt it be using iscallable instead here 