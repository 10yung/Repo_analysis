 Thanks for contributing to Jetpack Pick a clear title Sharing add new Facebook button and proceed Steps to reproduce the issue Install WordPress Plugins Both of which use Jetpack autoloader to avoid dependency version conflicts Both require the popular guzzlehttpguzzle library If the first plugin loaded includes on older version of the guzzle V The second plugin loaded includes a newer version V When either plugin tries to use the guzzle library they will get the error that the function idnuriconvert is not defined This is because guzzles functionsphp file is included as soon as the autoloadpackagesphp file is required by the first plugin which has an older version of guzzle installed and the autoload files option is used by guzzle What I expected The latest version of guzzles functionsphp of all dependencies to be loaded What happened instead The first plugin loaded loads its version of the files rather than the latest version Jetpack autoloader should wait for all plugins to be loaded before including any files After editing cropping an image in Calypso an attempt to restore it to its original state fails Steps to reproduce the issue Go to the media library in Calypso for a Jetpack site Click on any image upload one if theres none Crop it in the editor Click the Restore original button What I expected An image to be restored to its original dimensions What happened instead The request fails the spinner never stops spinning the image is not restored The UI is locked only a refresh helps If youre looking at the logs youll see something like this NOTICE PHP message PHP Fatal error Uncaught Error Call to undefined function wpcomgetprivatefile in vardevwordpresswpcontentpluginsjetpackjsonendpointsclasswpcomjsonapieditmediav endpointphp Stack trace vardevwordpresswpcontentpluginsjetpackjsonendpointsclasswpcomjsonapieditmediav endpointphp WPCOMJSONAPIEditMediav Endpointbuildfilearrayfromurl vardevwordpresswpcontentpluginsjetpackclassjsonapiphp WPCOMJSONAPIEditMediav Endpointcallbacksites vardevwordpresswpcontentpluginsjetpackclassjsonapiphp WPCOMJSONAPIprocessrequestObjectWPCOMJSONAPIEditMediav Endpoint Array vardevwordpresswpcontentpluginsjetpackpackagesconnectionlegacyclassjetpackxmlrpcserverphp WPCOMJSONAPIservefalse vardevwordpresswpincludesIXRclassIXRserverphp JetpackXMLRPCServerjsonapiArray It was discovered by jamesozzie that filtering options for rendering Related Posts does not work on AMP pages For example in response to a support forum topic he was looking to reduce the number of posts displayed from to with code like so php function jetpackmemorerelatedposts options if functionexistsisampendpoint isampendpoint options size change the number for the amount required return options addfilter jetpackrelatedpostsfilteroptions jetpackmemorerelatedposts This turned out not to work because AMP pages render the Related Posts using JetpackRelatedPostsgetserverrenderedhtml and this method was calling JetpackOptionsgetoption relatedposts array rather than JetpackRelatedPostsgetoptions and only the later method applies the jetpackrelatedpostsfilteroptions filter as well as apply other normalizations This PR updates JetpackRelatedPostsgetserverrenderedhtml to use JetpackRelatedPostsgetoptions rather than the lowerlevel JetpackOptionsgetoption relatedposts array Issue introduced in Jetpack via for Changes proposed in this Pull Request Ensure options for rendering Related Posts are filterable when rendering on AMP pages Is this a new feature or does it addremove features to an existing part of Jetpack If youre an Automattician include a shortlink to the p discussion with Jetpack Product here Testing instructions If you were reviewing this PR how would you like the instructions to be presented Please include detailed testing steps explaining how to test your change Bear in mind that context you working on is not obvious for everyone Adding simple configuration steps will help reviewers to get to your PR as quickly as possible Before After screenshots can also be very helpful when the change is visual Add a jetpackmemorerelatedposts filter to change the size see above Verify the size change is applied to AMP and nonAMP pages alike Proposed changelog entry for your changes Ensure options for rendering Related Posts are filterable when rendering on AMP pages Use JetpackRelatedPostsgetoptions to get options for serverrendered Related Posts This is a regression introduced by cc mmtr Steps to reproduce the issue Start with a site with no SSL certificate running the most recent version of master including Log out Clear your cookies for that site Try to log back in youll see that auth cookies cannot be created and you consequently cannot log in Provide a general summary of your changes in the Title above Would you like this feature to be tested by Beta testers Please add testing instructions to totestmd in a new commit as part of your PR Fixes an issue where initial sync no longer happens during connection reconnection Changes proposed in this Pull Request In we changed the way we initialize the Sync package which was a bit too strict and didnt allow for initial syncs to happen Lets make sure we always hook to jetpackuserauthorized and attempt to doinitialsync during connections or reconnections There are safeguards in doinitialsync to protect sites that should sync from doing an initial sync Is this a new feature or does it addremove features to an existing part of Jetpack Fixes an issue in Sync package Testing instructions Get this PR running on a testing site Disconnect the site from WordPresscom if necessary reConnect to WordPresscom and ensure an initial sync was performed you verify by checking the Full Sync section of the debugger or by observing sync data in real time Proposed changelog entry for your changes none Changes proposed in this Pull Request Explain what functional changes your PR includes OpenTable and Calendly both have a block style selector which does essentially the same thing Lets extract that to a new shared component Testing instructions If you were reviewing this PR how would you like the instructions to be presented Please include detailed testing steps explaining how to test your change Bear in mind that context you working on is not obvious for everyone Adding simple configuration steps will help reviewers to get to your PR as quickly as possible Before After screenshots can also be very helpful when the change is visual Add a Calendly block and check that you can still change the styles in the sidebar Add an OpenTable block and check that you can still change the styles in the sidebar img width altScreenshot at src img width altScreenshot at src Proposed changelog entry for your changes Please do not leave this empty If no changelog entry needed state as such no changelog When compiling the assets for Jetpack Search one has two run two processes yarn buildsearch for JS yarn build in order to include CSS styling which builds the entire JP It would be fantastic if the leaner yarn buildsearch also took take of compiling SCSS files possibly originating from Fixes Changes proposed in this Pull Request Explain what functional changes your PR includes This adds CSS to the frontend of the site to adjust the close button in the Calendly widget to the height of the master bar Testing instructions Add a Calendly block to a post and set the style to link Open the post in the front end Click on the button to open the widget Check you can see the close button img width altScreenshot at src Proposed changelog entry for your changes Please do not leave this empty If no changelog entry needed state as such no changelog entry needed Steps to reproduce the issue Add the Top Posts Pages Widget to a sidebar area In the Display As section select Image List Save and view on the frontend of the site Notice the tiny lowquality images displayed Contrast to when Display As Image Grid images a clear and crisp What I expected Thumbs that a relatively clear and crisp especially if source is high quality What happened instead Thumbs are overly compressed and low quality Screenshots Heres what it looks like when Display as Image list And heres what it looks like when Display as Image Grid zd I also tried the following without success Disabled Site Accelerator and Lazy Load in Jetpack settings Deactivated the photoncdn and photon modules from CLI Tried nuking the several versions of the january white sneaker image via Photon cache nuke tool Changes proposed in this Pull Request Makes main search input as wide as possible Adds screen reader text for the search box Changes date position Update style for comments Tweaks spacings Cleans up a few styles Is this a new feature or does it addremove features to an existing part of Jetpack No Testing instructions Follow the testing instructions here to set up Jetpack Search Perform a site search to trigger the Jetpack Search overlay Ensure that the elements in the overlay look good Proposed changelog entry for your changes None needed 