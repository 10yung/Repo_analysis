The new test verifies that FrozenEngine correctly opens indices created in the previous major version with or without softdeletes Relates This issue is a placeholder issue to track changes that are needed to prepare autoscaling for release register the xpackautoscalingenabled setting in release builds cf include the autoscaling docs in release builds cf Since autoscaling is currently only under development this commit causes the autoscaling docs to be excluded any time that release docs are being built We can use Lucene index exclusively in peer recoveries and primaryreplica resync in Relates Related to This PR updates the elasticsearchcertutil command reference with the new http parameter I caused a serialization bug in It is kind of tricky to get Run a datehistogram aggregation On a shard on That shard doesnt return any results The coordinating node is before Changes Rewrites Text analysis page intro as highlevel definition Adds guidance on when users should configure text analysis Rewrites and splits indexsearch analysis content Conceptual content Index and search analysis under Concepts Taskbased content Specify an analyzer under Configure Adds detailed examples for when to use the same indexsearch analyzer and when not Adds new example snippets for specifying search analyzers Previews Text analysis intro Index and search analysis concepts Specify an analyzer task Ive recently had a build fail due to test failures in RecoveryIT and IndexingIT Looking into these test failures the cluster and indices being tested fail to reach the green state within the timeout period Ultimately the issue is caused by a tripped assertion which causes a node to stop ERROR oebElasticsearchUncaughtExceptionHandler v fatal error in thread elasticsearch v clusterApplierServiceupdateTask T exiting javalangAssertionError taskDocumentMappermapperServiceorgelasticsearchindexmapperMapperService c e typetask typeTexttask mappingSourcetaskdynamicstrictmetaversion propertiescompletedtypebooleanerrortypeobjectenabledfalseresponsetypeobjectenabledfalsetaskpropertiesactiontypekeywordcancellabletypebooleandescriptiontypetextheaderstypeobjectenabledfalseidtypelongnodetypekeywordparenttaskidtypekeywordrunningtimeinnanostypelongstarttimeinmillistypelongstatustypeobjectenabledfalsetypetypekeyword mappingtaskdynamicstrictmetaversion propertiescompletedtypebooleanerrortypeobjectenabledfalseresponsetypeobjectenabledfalsetaskpropertiesactiontypekeywordcancellabletypebooleandescriptiontypetextheaderstypeobjectenabledfalseidtypelongnodetypekeywordparenttaskidtypekeywordrunningtimeinnanostypelongstarttimeinmillistypelongstatustypeobjectenabledfalsetypetypekeyword documentParserorgelasticsearchindexmapperDocumentParser e fieldMappersorgelasticsearchindexmapperDocumentFieldMappers a objectMapperstaskheadersorgelasticsearchindexmapperObjectMapper b be taskorgelasticsearchindexmapperObjectMapper b b responseorgelasticsearchindexmapperObjectMapper c c ad taskstatusorgelasticsearchindexmapperObjectMapper errororgelasticsearchindexmapperObjectMapper ef ed hasNestedObjectsfalse deleteTombstoneMetadataFieldMappers orgelasticsearchindexmapperIdFieldMapper f e orgelasticsearchindexmapperSeqNoFieldMapper f c orgelasticsearchindexmapperTypeFieldMapper f c orgelasticsearchindexmapperVersionFieldMapper bcc db noopTombstoneMetadataFieldMappers orgelasticsearchindexmapperSeqNoFieldMapper f c orgelasticsearchindexmapperVersionFieldMapper bcc db at orgelasticsearchindexmapperMapperServiceassertMappingVersionMapperServicejava elasticsearch SNAPSHOTjar SNAPSHOT Build scans If I looked at emails of build failures correctly it appears that this started on Jan th I am not sure if this is related or not but there was a change that changed the DocumentMapper that day and this change was in the first failure I saw that manifested that way romseygeek do you think that change could be the cause of the tripped assertion This is mostly moving the agg construction code into the registry model without making many changes to the way the aggs are constructed I think there is an opportunity to refactor how were using the ExecutionMode enum to delegate some construction details but didnt want to clutter the PR with unrelated changes and wanted to keep it simple to minimize test failures Also added a basic AggregatorTestCase for an untested code path Well need to convert the rests of the tests over eventually ala Allows ML datafeeds to work with time fields that have the datenanos type Previously datafeeds only worked with time fields that had the date type