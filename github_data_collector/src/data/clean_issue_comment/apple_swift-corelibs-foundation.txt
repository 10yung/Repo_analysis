This is exposed for Linux but also is needed for linking on BSD Let me know if you think there should be one definition of machabsolutetime in Prefix and the body ifdefd between Windows and LinuxBSD I thought to include that in this PR but Im not sure I like the look of it so I omitted it If you think itd be worthwhile though Im happy to roll it in this PR I believe it was just a typo There are other similar checks already and all of them use comparison This was discovered as the reason of paragraphRangefor fail on whole string range Eg following code is crashing let s abc as NSString let range NSRangelocation length sparagraphRangefor range crash Test is also included Test checks paragraphRange on whole string range every subrange in every single paragraph every subrange in every two consecutive paragraphs This was ported from the overlay fix in Data provides a settable count property Its expected behavior is undocumented but based on the implementation it is intended to zeroextend or truncate the collection to the specified length This does not work correctly if we start with an empty Data and we try to increase the count by a small integer import Foundation var d Data dcount printdcount dcount printdcount It looks like this bug was introduced with the Data overhaul that shipped in Swift This issue was uncovered by rdar The Pragma header field allows backwards compatibility with HTTP caches so that clients can specify a nocache request that they will understand as CacheControl was not defined until HTTP When the CacheControl header field is also present and understood in a request Pragma is ignored The current implementation of HTTPURLProtocol duplicates the parsing of CacheControl header and checks for nocache but the Pragma header is ignored Also httpResponsestatusCode check for status codes was checked after the interpretations of headers wich was unnecessary From Swift new APIs of FileHandle are introduced While they are defined as open in DarwinFoundation as you know they are imported from objc they are public in SwiftFoundation They should be defined as open also in SwiftFoundation to ensure compatibility for example making subclasses of FileHandle in other modules Resolves SR The test was slow for reasons NSPathUtilitiescompletePath was slow and the test directory used may already have an unknown number of files in it POSIX NSURLDirectoryEnumerator was modified to allow it to output either a URL defualt a String with the item name relative to the directory being enumerated or the raw FTSENT result Using the raw FSENT result without constructing a full URL value the Strings used for the matches that ran against the filename and extension were constructed using StringbytesNoCopy and full copies only made if a match was found On a directory with about items this showed an improvement for the entire test from about secs to seconds Use a subdirectory of NSTemporaryDirectory to control number of files in the directory This stops the tests running on an unbounded number of files which can increase test time The documentation of DateComponentsisValidDatein indicates that the receivers timezone is used if it is set The code also appears to be attempting to implement this by setting the timeZone property on a local cal var but this var wasnt being used at all later in the function The result is that seemingly valid DateComponents can return false for isValidDate when the receivers timezone differs from the passed in calendars timezone which is often system timezone If the array or dictionary is empty do not add indention spacing Enable more tests in TestJSONEncoder that were never added to the list of tests Fixed issue SR When calling start on a synchronous operation the main was not called 