Running the following minimal working example go package main import gopkginrussrossblackfridayv func main blackfridayRun byte whatever foo panics test test done results in a panic panic runtime error index out of range with length goroutine running gopkginrussrossblackfriday ev MarkdownlistItem xc xc b a x x xc ffce x homesamgopkgmodgopkginrussrossblackfridayv v blockgo xb a gopkginrussrossblackfriday ev Markdownlist xc xc b x d x d x x homesamgopkgmodgopkginrussrossblackfridayv v blockgo x gopkginrussrossblackfriday ev Markdownparagraph xc xc b x d x d x homesamgopkgmodgopkginrussrossblackfridayv v blockgo x e gopkginrussrossblackfriday ev Markdownblock xc xc b x e x e homesamgopkgmodgopkginrussrossblackfridayv v blockgo x gopkginrussrossblackfriday ev MarkdownParse xc xc b x e x e x homesamgopkgmodgopkginrussrossblackfridayv v markdowngo x d gopkginrussrossblackfriday ev Run xc b x e x e x x x x x df xc homesamgopkgmodgopkginrussrossblackfridayv v markdowngo x b mainmain homesamtestmarkdownmaingo x e exit status Adding some sort of separator between the definition list and the references fixes things go package main import gopkginrussrossblackfridayv func main blackfridayRun byte whatever foo fixed panics test test done This looks vaguely similar to and but I couldnt be sure and they didnt appear to have any comments so I wanted to add a bit more spam to the queue Implement a furigana extension based on the syntax used in See to understand what this is for I made this some months ago and now I realized Hugo switched to goldmark oh well current and wrong li vim li right li classtasklistiteminput id disabled classtasklistitemcheckbox typecheckbox vim li result show current and wrong right Originally found as a bug in kuberneteswebsite Originally found as a bug in Hugo gohugoiohugo Tested v and v Both affected Short Description Whitespaces or Tab before parentheses opening is ignored if it comes after brackets Long Description In the text blocks that like a link are treated as a link even if they are a links of a different kind Reproducible Example golang package main import fmt gopkginrussrossblackfridayv var input exampleorg link examplenet link examplecom link hey there is space before parenthese ignoge me please exampleorg link examplecom link func main output stringblackfridayRun byteinput fmtPrintlnoutput Expected Output html ul lia href linkali lia href linkali lia href linka hey there is space before parenthese ignoge me pleaseli ul Actual Output html ul lia href linkali lia href linkali lia hrefhey there is space before parenthese ignoge me pleaseexamplecom linkali ul I did upgrade from v to v recently and I am noticing that my lists do not render properly Upon investigating I see that I am having r n in my database as line endings With v this does render fine but v does not parse the lists Is that an oversight or are only unix line endings support in v The source markdown code is This is a demo list item shell service ssh status service ssh start There should be three however it leads parse error of the githubs markdown parser And it would be parsed to html ul li pThis is a demo list itemp div classhighlight pre classchroma code classlanguageshell datalangshell service ssh status service ssh start code pre div li ul This problem also happen when using ordered list However if I add some text between list item and code block like this This is a demo list item test shell service ssh status service ssh start There should be three however it leads parse error of the githubs markdown parser And the parsed result is html ulliThis is a demo list itemliul ptestp div classhighlightpre classchromacode classlanguageshell datalangshell service ssh status service ssh startcodeprediv Anyone know how to fix it Widont is a common practice in bloggingCMS world that prevents a situation where a line break happened and theres only one world at the end For example a title or paragraph with a line break like this doesnt look good text Welcome to my really cool blog What widont extensions do is to replace the last space with nbsp nonbreaking space character so that the last two words will share the same fate text Welcome to my really cool blog Blackfriday sounds about the right place to implement a functionality like this Thoughts imports gopkginrussrossblackfridayv cannot find module providing package gopkginrussrossblackfridayv go version go windowsamd Add test for other protocols that are in browsers in particular ftp though https could also be added Closes 