I attempted to swizzle the class method JSONObjectWithDataoptionserror like this void load static dispatchoncet sInitToken dispatchonce sInitToken block NSInvocation invocation nil NSError err nil invocation self jrswizzleClassMethod selectorJSONObjectWithDataoptionserror withBlock id inObj NSData inData NSJSONReadingOptions inOptions NSError outError NSLogbefore inObj NSInvocation inv invocation copy inv setArgument inData atIndex inv setArgument inOptions atIndex inv setArgument outError atIndex inv invokeWithTarget inObj id ret nil inv getReturnValue ret NSLogafter inObj return ret error err if invocation nil NSLogDebugError swizzling NSJSONSerialization err But unfortunately this doesnt seem to work as the returned dictionary gets released before a later call to objcretainAutoreleasedReturnValue deep inside iOS causing a crash Enabling Zombie objects shows NSDictionaryI retain message sent to deallocated instance x Swizzling with a block requires using a single NSInvocation instance to call the original method But if you need to set arguments on that invocation you might be stepping on other threads doing the same thing A possible fix is to copy the invocation before modifying it In order to use the latest version of this pod as a dependency of another pod the podspec needs to be on the official repo Currently it only knows about version JRSwizzle onestopshop for all your method swizzling needs pod JRSwizzle Homepage Source Versions master repo Updating the repo is done using trunk implementation UIViewController Swizzling voidload static dispatchoncet onceToken dispatchonce onceToken SEL originSelector selectorviewWillAppear SEL swizzleSelector selectorswviewWillAppear self jrswizzleMethodoriginSelector withMethodswizzleSelector errornil voidswviewWillAppearBOOLanimated self swviewWillAppearanimated NSLogIm swizzling method end implementation ViewController voidviewWillAppearBOOLanimated super viewWillAppearanimated NSLogIm origin method end When calling super viewWillAppearanimated the logIm swizzling method print twice if not print once So whether or not to need call super In NSHipster Method Swizzling it say Swizzling should always be done in a dispatchonce My question is should I need using dispatchonce when I use JRSwizzle Why need call classaddMethod can not ensure origMethod is exist Jrswizzle belongs to the most referenced projects on CocoaPods Keep up the good work jrswizzleMethodwithMethoderror seems does not work on iOS sometimes objc this works self jrswizzleMethodselectorshow withMethodselectorswizzledShow errornil but this does not and I checked there is no any error self jrswizzleMethodselectordismissWithClickedButtonIndexanimated withMethodselectorswizzledDismissWithClickedButtonIndexanimated errornil Hi Jonathan Can Can i use swizzle a method witht a block implementation Normal swizzleMetodSELslector withSelctorSELnewSelector But I want this swizzleMetodSELslector withBlock block because I cannot import WebViewIn WebKit framework to iOS project but I want swizzle WebViews method i cannot write a category for WebView So I cannot find a place to put my newSector so I want to use block Jonathan can you give me some suggestions Thank You 