Need to subclass the RSpec Progress formatter and modify the output text to match libpactproviderrspecformatterrspec rb Formatter is configured here libpactproviderpactspecrunnerrb This is a copy of an issue from pactnode I was advised that since pactnode is a wrapper around pactruby the underlying problem is actually here Software versions OS Windows Library version Node Version Expected behaviour Pact mock client during pact provider tests should send HTTP DELETE requests with HTTP body correctly Actual behaviour It doesnt send HTTP DELETE requests correctly Im using Nodejs with Express framework as the server and Im running pact provider tests pact verifications One of the pact interactions is a DELETE request that has a request body The spec does not forbid it All other requests go through fine but the delete request seemingly makes the server freeze and not return anything until the timeout at which it resets the HTTP connection see the pact provider log attached Upon further investigation with Wireshark I found out the underlying problem the pact mock client doesnt even send all of the TCP packets that make up the HTTP DELETE request it stops short of sending the body This makes the server wait for the remaining packet which never comes thus hanging the test until it times out Interestingly it does send ContentLength in the first packet indicating that there will be a body in the following packets but it never sends it I assume that the issue is in the underlying Ruby HTTP client As stated in the previous issue thread many Ruby HTTP clients either dont support DELETE requests with body or they do but require a special way of calling them stackoverflow thread Steps to reproduce Try to verify a pact with the following interaction description A DELETE request to delete one reminder providerState User user examplecom exists with smart reminders request method DELETE path apiusers schedule headers ContentType applicationjson body items response status headers or any pact that has a HTTP DELETE method with a request body Relevant log files Log file generated by pact provider test attached pactproviderlog Hi Ive got an EmberJS app which generates pacts Lets say we fetch a list of articles each one with a title we do not want to verify explicitely The truncated generated pact is matchingRules bodydata attributestitle match type When I verify with pactruby v it seems not to understand the directive as I have the following errors Expected enim dolores nihil but got some text at data attributestitle Expected quasi cupiditate temporibus but got some text at data attributestitle Expected repellendus doloribus quis but got some text at data attributestitle Expected asperiores non labore but got some text at data attributestitle Expected quae quas consequuntur but got some text at data attributestitle What did I miss Reverts pactfoundationpactruby after a long time I checked the link again and apparently the blog owner has updated the dates so now the old link is working again Hi I work with an app that has many consumers We recently upgraded our pactbroker and I am currently setting up webhooks to verify pacts on contractcontentchanged event Im wondering is there a way for the provider to verify pacts from a specific consumer Looking at the docs I see options for passing in a provider state or a specific interaction but I couldnt find an option where one could specify verify all interactions of consumer Foo Hello Im using pactjs to verify an expressjs based provider Having debugged this issue for a while I found that pactruby expects to have multiple provider states while the pact file only contains one provider state Here is a verbose log output from the verification that uses pactproviderverifier that again uses pactruby as a library Im no ruby expert version pactproviderverifier provider myGraphlServer providerbaseurl pactbrokerbaseurl broker providerstatessetupurl verbose INFO Reading pact at broker Verifying a pact between myFrontend and myGraphqlServer Given There is a feed with semanticKey innsikthovedfeed with one notice A request for published notices with POST graphql returns a response which DEBUG Setting up provider state for consumer myFrontend using provider state set up URL A quick study of the ruby code reveals that an interaction object has a providerstate which is used for the log line with Given interactionproviderstate But then setupproviderstates is called with a different property interactionproviderstates plural this property is somehow not defined in my pact Then my nodejs based verifier receives a POST request to configure its provider state and the body of that request is consumermyFrontendstatenullstates null params intercepted with netcat nc l and theres no hack that I can currently do to make it work If you need more info I can provide a sample pact file with an exact command line to invoke the ruby verifier I believe ConsumerContractBuilder is trying to expose attrreader consumercontract but its incorrectly setting that value to consumercontractdetails instead consumercontractdetails is never used outside of this class This PR populates consumercontract instead of consumercontractdetails Hi We are coding on ruby and are looking for the system for testing our decoupled services In particular we have a number of HTTP APIs At some point we found Pact and decided to try it out And we encountered some difficulties using it First of all its somewhat weird that core ruby implementation doesnt implement rd version of pactspecification Then we have found some bugs or we just didnt understand how it works For example when we describe provider state at the provider side and we have an exception in setup block it doesnt call the teardown block We are using transaction database cleaner strategy and we cant rollback the transaction because of this behaviour We would like to use something like rspec around strategy but it just doesnt exist Secondly wed like to use an array of regexps in consumer pacts We tried to use this code dates eachlikePacttermgenerate matcher d d d and on the consumer side it sucessfully generates the json with body dates matchingRules bodydates min bodydates match type bodydates match regex regex d d d As we can see there is a matching rules for bodydates that is obviously saying that every item of the dates array must match a regexp But pactverify script doesnt respect it saying that WARN Ignoring unsupported matching rules matchregex regex d d d for path body dates Then we tried to use a regexp in Pactterm with i modifier to make it caseinsensitive like Pacttermgenerate AA matcher ai but weve got an error RuntimeError Value to generate AA does not match regular expression a We like the ideas underlying Pact and it already does a lot And wed love to use it in our projects But obviously there is some room for improvements at least with specs integration and troubleshooting Wed like to know if you are interested in collaboration foreign pull requests to codebase and will you help us to investigate and solve the problems together Hello Thank you very much for Pact Its awesome This is more of a conceptual question than a bug report so Im not providing much code but I would happily arrange it if necessary Also I guess this is a common use case but I wasnt able to find examples for it thats why Im filing this issue Hopefully it can be addressed by only referring to some examples Im using Pact for testing a services architecture like this service A consumes service B consumes service C My intended approach is writing tests by hand only for service A and having Pact to verify proper behavior for services B and C based on generated pacts I was able to generate the pact abjson from As tests execution and now I want to use it for verifying B while generating bcjson pact My attempt for this looks like this ruby specserviceconsumerspacthelperrb inside B Pactserviceprovider B do honourspactwith A do pacturi abjson end end Pactserviceconsumer B do haspactwith C do mockservice cservice do port end end end This is how I accomplished mocking B C requests cservice Pactconsumerworldconsumercontractbuildersfirst cservicegivensome state uponreceivingsome request withmethod get path resource willrespondwithstatus body This is for writing bcjson so I can verify C with Pact RSpecconfigure do config configaftersuite do Pactconsumerworldconsumercontractbuilderseach c cwritepact end end This seems to satisfy my use case but I was expecting a cleaner way for mocking and writing the pact file Specifically I feel Im missing what happens within RSpec specs when we assign pact true disposal of cservice instance on the fly and automatically written pact file I wonder if this is a common use case and how to appropriately tackle it Hope you can guide me in the right direction Thanks again Matheus I am trying to write a pact test in Ruby where consumer makes a post call with payload multipart true file fileObject name name where file is some kind of media file please make support for this feature