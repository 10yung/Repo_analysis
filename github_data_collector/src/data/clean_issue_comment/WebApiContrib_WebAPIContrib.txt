Web API nested entities throwing SystemNotSupported Exception while trying to display records on web page using include on html web api Hi i have a problem in angular when send data in post method in my client javascript thisprueba function id nombre return httppostApiURL AEmpleadoprueba id id nombre nombre then function respuesta MensajeServicesMostarMensaje Se elimino el Registro Correctamente success null vmCargarTabla return respuesta function respuesta consolelogrespuestadataMessage return false in my server csharp RoutePrefixapiAEmpleado MvcStyleBinding public class AEmpleadoController ApiController HttpPost Routeprueba public IHttpActionResult pruebaint id string nombre return Ok The error is Cannot deserialize the current JSON object eg namevalue into type SystemNetHttpFormattingFormDataCollection because the type requires a JSON array eg to deserialize correctly To fix this error either change the JSON to a JSON array eg or change the deserialized type so that it is a normal NET type eg not a primitive type like integer not a collection type like an array or ListT that can be deserialized from a JSON object JsonObjectAttribute can also be added to the type to force it to deserialize from a JSON object Path id line position in csharp private class MvcActionBinding HttpActionBinding Read the body upfront add as a ValueProvider public override Task ExecuteBindingAsyncHttpActionContext actionContext CancellationToken cancellationToken HttpRequestMessage request actionContextControllerContextRequest HttpContent content requestContent if content null FormDataCollection fd contentReadAsAsyncFormDataCollectionResult if fd null IValueProvider vp new NameValuePairsValueProviderfd CultureInfoInvariantCulture requestPropertiesAddKey vp return baseExecuteBindingAsyncactionContext cancellationToken anybody help Sorry for my english This fixes the problem that if you make a response with no content eg a redirect HeadContent will be called with a null value and throw a NullReferenceException If I have a controller with two GET actions eg apiget and apigetid when I add MvsStyleBinding to my controller I get the following error An error has occurred ExceptionMessage Multiple actions were found that match the request Get on type MvcStyleBindingProblemValuesController GetById on type MvcStyleBindingProblemValuesController ExceptionTypeSystemInvalidOperationException StackTrace at SystemWebHttpControllersApiControllerActionSelectorActionSelectorCacheItemSelectActionHttpControllerContext controllerContext at SystemWebHttpControllersApiControllerActionSelectorSelectActionHttpControllerContext controllerContext at SystemWebHttpApiControllerExecuteAsyncHttpControllerContext controllerContext CancellationToken cancellationToken at SystemWebHttpDispatcherHttpControllerDispatcherSendAsyncd MoveNext I have a very simple api project here demonstrating the problem If I remove the MvcStyleBinding then the error goes away but obviously the whole point is to actually use it Probably this topic was described before but I could not find a solution There are two ways to registrate routes in MVC and WebApi projects MVC Project you call RouteConfigRegisterRoutes RouteTableRoutes which adds routes into routes table This way is used in your example here WebApi Project by default use GlobalConfigurationConfigure WebApiConfigRegister The following example shows how to register routes in unit tests file private HttpConfiguration config SetUp public void BeforeEach config new HttpConfiguration WebApiConfigRegister config configEnsureInitialized we need to call this method after all other initialization code The problem that your framework is using RouteTable to check routes If I register routes in second way then RouteTable would be empty and route tests also would fails Could you please provide some link or explanation how to register WebApi routes without moving code into RouteTableRoutes method Im not sure that you understand me so please ask a questions if you want Thanks in advance Right now Im trying to pass multiple parameters to the action MyRecentActivity but when I run the test below an exception is thrown saying that the first parameter was while it was expecting This the method it should be mapping to public Result MyRecentActivityint offset int limit Could you shed some light on the problem const string url MobileServicesDashboardTicketsmyrecentactivity limit urlShouldMapToTicketsControllerx xMyRecentActivity GET 