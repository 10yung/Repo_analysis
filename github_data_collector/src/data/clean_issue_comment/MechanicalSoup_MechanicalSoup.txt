Python s maintenance ends in and that happens to be now there should be one last release of Python in april and then nothing We may start thinking about terminating support for Python in MechanicalSoup Id like to but I can live without it have MechanicalSoup support Python so that an easy way for people who really need it with MechanicalSoup corresponds to a version with a round number Anyway we can start writing a PR to drop support and remove any code needed only for Python A quick grep for Python and future shows that there should be only very marginal change ie only lines to remove and travisciyml to adapt Poetry and Pipenv both allow in particular pinning dependency versions hence should help us to debug subtle issues related to versions like Poetry is the most recent one uses the new standard pyprojecttoml and covers stuff that pipenv doesnt like publishing to PyPI so its probably the best option but I never used either of them so I may be wrong Step is to try it and see how cooluncool it is I use the proxy this way it seem didnt work import mechanicalsoup proxies http socks https socks url browser mechanicalsoupStatefulBrowser browsersessionproxies proxies This seem cant work page browseropenurl verifyFalse printpage printpagetext Wheres a working demo about this Thank you Current implementation parses responsetext both when contenttype is not texthtml or empty This leads parsing data when contenttype is binary data such as applicationxgzip Parse only when contenttype not passed It might be helpful to get documents translated version cause many Asians look forward to your MechanicalSoup Do you have or Do you need documents translations Thanks for reading Im getting an error for the following test in a local build teststestbrowserpytestenctypeandfilesubmit multipartformdataFalseinput namepic typefile FAILED assert foundin files E AssertionError assert form files E form E files This build uses the following dependency versions requests beautifulsoup Note that TravisCI is using requests and beautifulsoup I want to make get request and receive chunked response then parse each chunk body to get information from it But at the end of get request invoked following chain addsoupresponse Browserlookslikehtmlresponse responsetext that forces to load all chunks into memory Is addsoup method required when request has streamTrue This is a highseverity vulnerability affecting urllib versions prior to See for more info We depend on urllib through requests which has an open issue for supporting urllib see Once this issue has been resolved and a new release is made I think we should update our minimum requirement for requests Should we do any backporting to our current release or just look to do a new release soon The function requestself form urlNone kwargs from the Browser class retrieves data and files from kwargs argument data kwargspopdata dict files kwargspopfiles dict However this way of submitting data or files is not tested nor documented