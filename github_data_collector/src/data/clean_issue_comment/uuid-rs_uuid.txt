 If this PR is a breaking change ensure that you are opening it against the breaking branch If the pull request is incomplete prepend the Title with WIP Im submitting an other Description Use getrandom crate directly instead of rand for generating UUIDs using v Motivation Reduce the number of dependencies used by the crate Running the example in the README Before c chacha cfgif getrandom libc ppvlite rand randchacha randcore randhc wasi After cfgif getrandom libc wasi Tests How are these changes tested cargo test locally and test usage in a simple program Related Issues Other Wasnt sure whether I should bump the version here or not Describe the bug Uuidfromguid return type is declared as ResultUuid Error But this function returns errors only if Uuidfromfieldsle failed And that function only returns error if d is not bytes long However in fromguid it is always bytes long In fact this function is always successful Expected behavior This function should return Uuid Specifications Version git master Heres the Weekly Digest for uuidrsuuid ISSUES Last week no issues were created PULL REQUESTS Last week no pull requests were created updated or merged COMMITS Last week there were no commits CONTRIBUTORS Last week there were no contributors STARGAZERS Last week there was stargazer star TheFox You are the star star RELEASES Last week there were no releases Thats all for last week please kbdeyes Watchkbd and kbdstar Starkbd the repository uuidrsuuid to receive next weekly updates smiley You can also view all Weekly Digests by clicking here Your Weekly Digest bot calendar Heres the Weekly Digest for uuidrsuuid ISSUES Last week no issues were created PULL REQUESTS Last week no pull requests were created updated or merged COMMITS Last week there were no commits CONTRIBUTORS Last week there were no contributors STARGAZERS Last week there were stagazers star Antonito star h nyu You all are the stars star RELEASES Last week there were no releases Thats all for last week please kbdeyes Watchkbd and kbdstar Starkbd the repository uuidrsuuid to receive next weekly updates smiley You can also view all Weekly Digests by clicking here Your Weekly Digest bot calendar Im submitting an other Description Move the Builder Motivation We pub use the builder already But since the Builder itself is important it seems logical to bring it out Tests Tests should pass as is Im submitting an other Description This PR will remove all macOSLinuxWindows builds from travis and appveyor Heres the Weekly Digest for uuidrsuuid ISSUES Last week issues were created Of these issues have been closed and issues are still open OPEN ISSUES greenheart Introduce github actions to build by kinggoesgaming greenheart ClockSequence Trait Approach by DylanDPC CLOSED ISSUES heart Prepare for release by KodrAus heart Tidy up some docs by KodrAus heart Prepare for release by KodrAus heart Release a new version by nox LIKED ISSUE Release a new version by nox It received x smile x tada x and heart x NOISY ISSUE speaker Release a new version by nox It received comments PULL REQUESTS Last week pull requests were created updated or merged MERGED PULL REQUEST Last week pull requests were merged purpleheart Prepare for release by KodrAus purpleheart Tidy up some docs by KodrAus purpleheart Prepare for release by KodrAus COMMITS Last week there were commits hammerandwrench Merge Prepare for release rkinggoesgaming aKodrAus Includes There arent any code changes in this release it just includes some additional documentation Coauthoredby Ashley Mannix ashleymannixlivecomau by bors bot hammerandwrench prepare for release by KodrAus hammerandwrench Merge Tidy up some docs rDylanDPC aKodrAus Just tidying up some docs after our release Coauthoredby Ashley Mannix ashleymannixlivecomau by bors bot hammerandwrench tidy up some docs by KodrAus hammerandwrench Merge Prepare for release rDylanDPC aKodrAus Closes Changeset since the last release Includes Ive also added some docs to the bit integer methods to clarify how theyre different than tofields for consistency with other uuid libs in the wild Coauthoredby Ashley Mannix ashleymannixlivecomau by bors bot hammerandwrench use simpler version bound in readme by KodrAus hammerandwrench prepare for release by KodrAus CONTRIBUTORS Last week there were contributors bustinsilhouette bors bot bustinsilhouette KodrAus STARGAZERS Last week there were stagazers star mrzmmr star vulcangz star sukawasatoru You all are the stars star RELEASES Last week there were releases rocket uuid Docs rocket uuid API polish and consolidation Thats all for last week please kbdeyes Watchkbd and kbdstar Starkbd the repository uuidrsuuid to receive next weekly updates smiley You can also view all Weekly Digests by clicking here Your Weekly Digest bot calendar Im submitting an other Description This PR is just an experiment to see how Github Actions will work out for us I know this has already been closed but I think offering a trait to solve this problem is the wrong approach The default use of ClockSequence here is just plain wrong and should be corrected to follow spec Originally posted by PrismaPhonic in UUIDv s bytes are organized so that in a lefttoright comparison when comparing bytebybyte or nibblebynibble when comparing string encoded uuids the bytes that change will be compared first eg if I have a add e a a ae dbcce be dd e a a ae dbcce To compare itll determine theres not a match by the second char or first byte rather than compare those shared bytes first This is often what we want but if were building a large set of uuids that first group of bytes can be ordered by creation time We can optimize certain cases by sorting so entries with UUIDs closer together in creation time are grouped together mysql solves this with its timepart swapping feature which deserializes a string uuid into one where the first bytes come last Alternatively I suppose rather than decode the Bytes differently we could use special compare functions so you could sort of build a BTreeMap where order is determined by the first bytes Not blocking 