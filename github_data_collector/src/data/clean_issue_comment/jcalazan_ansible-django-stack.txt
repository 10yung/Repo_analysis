The variables set in envvars for the rabbitmq userpass will never actually be used unless the user manually overrides or deletes the lines in rolesrabbitmqvarsmainyml See Adding this PR so that we can periodically check whether the TravisCI build is working with IPV The test was skipped via due to failing tests because TravisCI isnt properly handling IPV for our uncomplicated firewall implementation Im having an issue where a long running servers logs arent being rotated causing one giant file At first I thought we might want to rotate the logs manually but as I looked into it Ubuntu actually handles NGINX log rotation on its own but only if nginx is using varlognginxlog for its logfiles My suggestion is to simplify this repo and remove these lines from the default NGINX template accesslog nginxaccesslogfile errorlog nginxerrorlogfile and the corresponding variables I dont see a whole lot of benefit putting the NGINX logs here vs in the NGINX directory and removing this setup would make logrotation work out of the box at least for Ubuntu The alternative might be to add this type of directive in etclogrotatednginx applicationlogdir daily missingok rotate compress delaycompress notifempty create wwwdata adm sharedscripts prerotate if d etclogrotatedhttpdprerotate then runparts etclogrotatedhttpdprerotate fi endscript postrotate invokercd nginx rotate devnull endscript The drawback here is that the gunicornsupervisor logs are rotated by default so I wouldnt want to affect that by adding the above config What do you think jcalazan pinging you as you created the original NGINX template Just tried an setup and got the following error on the Install Security Updates task Error EThe value bionicsecurity is invalid for APTDefaultRelease as such a release is not available in the sources Im very often getting the System restart required notification when I login to an Ubuntu instance My suggestion is to add an optional task to the security role to periodically reboot the server maybe once per month This would allow security patches added via unattendedupgrades to be applied without having to reboot manaully Curious as to whether others using this repo have a restart job in their system already and how theyve implemented it This may be a bit of an edge case but if you decide to change the hostname which is picked up from inventory then the certifcate CN wont actually change I was able to fix this by changing certbot script to use forcerenew temporarily but not sure this would make sense permanently My REMOTEADDR is always blank I just ran into an issue where a Django package expected requestMETA REMOTEADDR to be the users IP address and its causing my application to error out My current solution is to add a middleware to manually use HTTPXFORWARDEDFOR to overwrite REMOTEADDR but leaving this issue here if anyone using this repo has an NGINX setting they use to set the REMOTEADDR setting I keep getting this error when trying to install the security updates shell fatal localdev FAILED changed false msg Failed to update apt cache WThe repository testing Release does not have a Release file WData from such a repository cant be authenticated and is therefore potentially dangerous to use WSee aptsecure manpage for repository creation and user configuration details EFailed to fetch Origin Error IP ESome index files failed to download They have been ignored or old ones used instead Invalid host headers will reach the Django application throwing an error cluttering logs posing possible security risks without rejection at the Nginx level This also appears to prevent s returned by Nginx when the host header is blank from leaking the Nginx version and OS Try curl H Host and should see something like this html headtitle Bad Requesttitlehead body bgcolorwhite centerh Bad Requesth center hrcenternginx Ubuntucenter body html Should be able to see errors thrown in application with curl H Host examplecom With this PR the response should be curl Empty reply from server See This is the initial fix for This PR replaces the current envvars directory with a groupvars directory as can be found in Ansible best practices as well as in the best practices for incorporating Ansible Vault There are at least three goals here Allowing the user to override any environment variables for their playbook in one place only rather than having to search for the variable in a specific role Allowing for different variables in each group For instance right now its difficult to set a separate serveruserpassword in both staging and production environments Allowing easy use of Ansible Vault to encrypt secrets I would add instructions to the README if this PR gets pulled in jcalazan DavidCain dpward StuartMacKay do any of you have an objection to this change which would be breaking vs the current playbook