Dear Ooui Team ive bind over XAML a Button via a Command as it do not work so i bind over xname the button to a click method Same error its happen The error in my Debugger console on Chrome is Failed to process received message NewtonsoftJsonJsonSerializationException Error getting value from MessageType on OouiMessage SystemNullReferenceException Object reference not set to an instance of an object thrown in monojs i use VS Studio and the newest released nuget packages for net Standard and XamarinForms The over bindings and Code behind Systems work for me Just the Command pattern seems to be buggy There are plans to implement some more missing methods to this interface Im specifically looking for InsertPageBefore and PopAsync Thanks running the latest master branch code and testing monkey gives the following error dotnet run project samplesSamplescsproj PRESENT Listening at GET samplepicker GET oouijs WEBSOCKET samplepicker GET monkeys GET oouijs Failed to create element SystemNullReferenceException Object reference not set to an instance of an object at XamarinFormsGridAssignAbsoluteCells in D a s XamarinFormsCore GridCalccsline at XamarinFormsGridMeasureGridDouble width Double height Boolean requestSize in D a s XamarinFormsCore GridCalccsline at XamarinFormsGridOnSizeRequestDouble widthConstraint Double heightConstraint in D a s XamarinFormsCore GridCalccsline at XamarinFormsVisualElementOnMeasureDouble widthConstraint Double heightConstraint in D a s XamarinFormsCore VisualElementcsline at XamarinFormsVisualElementGetSizeRequestDouble widthConstraint Double heightConstraint in D a s XamarinFormsCore VisualElementcsline at XamarinFormsLayoutGetSizeRequestDouble widthConstraint Double heightConstraint in D a s XamarinFormsCore Layoutcsline at XamarinFormsVisualElementMeasureDouble widthConstraint Double heightConstraint MeasureFlags flags in D a s XamarinFormsCore VisualElementcsline at OouiFormsRenderersListViewRendererCalculateHeightForCellCell cell in D a Repos praeclarum Ooui OouiForms Renderers ListViewRenderercsline at OouiFormsRenderersListViewRendererUpdateItems in D a Repos praeclarum Ooui OouiForms Renderers ListViewRenderercsline at OouiFormsRenderersListViewRendererOnElementChangedElementChangedEventArgs e in D a Repos praeclarum Ooui OouiForms Renderers ListViewRenderercsline at OouiFormsVisualElementRenderer SetElementTElement element in D a Repos praeclarum Ooui OouiForms VisualElementRenderercsline at OouiFormsVisualElementRenderer OouiFormsIVisualElementRendererSetElementVisualElement element in D a Repos praeclarum Ooui OouiForms VisualElementRenderercsline at OouiFormsPlatformCreateRendererVisualElement element in D a Repos praeclarum Ooui OouiForms Platformcsline at OouiFormsVisualElementPackagerOnChildAddedVisualElement view in D a Repos praeclarum Ooui OouiForms VisualElementPackagercsline at OouiFormsVisualElementPackagerLoad in D a Repos praeclarum Ooui OouiForms VisualElementPackagercsline at OouiFormsVisualElementRenderer SetElementTElement element in D a Repos praeclarum Ooui OouiForms VisualElementRenderercsline at OouiFormsVisualElementRenderer OouiFormsIVisualElementRendererSetElementVisualElement element in D a Repos praeclarum Ooui OouiForms VisualElementRenderercsline at OouiFormsPlatformCreateRendererVisualElement element in D a Repos praeclarum Ooui OouiForms Platformcsline at OouiFormsVisualElementPackagerOnChildAddedVisualElement view in D a Repos praeclarum Ooui OouiForms VisualElementPackagercsline at OouiFormsVisualElementPackagerLoad in D a Repos praeclarum Ooui OouiForms VisualElementPackagercsline at OouiFormsVisualElementRenderer SetElementTElement element in D a Repos praeclarum Ooui OouiForms VisualElementRenderercsline at OouiFormsVisualElementRenderer OouiFormsIVisualElementRendererSetElementVisualElement element in D a Repos praeclarum Ooui OouiForms VisualElementRenderercsline at OouiFormsPlatformCreateRendererVisualElement element in D a Repos praeclarum Ooui OouiForms Platformcsline at OouiFormsPlatformAddChildVisualElement view in D a Repos praeclarum Ooui OouiForms Platformcsline at OouiFormsPlatformSetPagePage newRoot in D a Repos praeclarum Ooui OouiForms Platformcsline at XamarinFormsPageExtensionsCreateElementPage page in D a Repos praeclarum Ooui OouiForms PageExtensionscsline at XamarinFormsPageExtensionsGetOouiElementPage page in D a Repos praeclarum Ooui OouiForms PageExtensionscsline at SamplesMonkeysSampleCreateElement in D a Repos praeclarum Ooui samples MonkeysSamplecsline at SystemLazy ViaFactoryLazyThreadSafetyMode mode at SystemLazy ExecutionAndPublicationLazyHelper executionAndPublication Boolean useDefaultConstructor at SystemLazy CreateValue at OouiUIElementHandlerGetElement in D a Repos praeclarum Ooui Ooui UIcsline at OouiUIProcessWebSocketRequestd MoveNext in D a Repos praeclarum Ooui Ooui UIcsline Im curious if there are plans to update the package version hosted on nuget with all the latest changes in master of Ooui Specifically Im looking at using Ooui with xamarinforms xxx but the version that is out on nuget is x There have been a lot of great changes merged into master since last year but nuget seems to have gotten stale with the packages It would be great if these changes could be made available without pulling a submodule of the repo Hello Im really interested into Ooui For the project Im considering it one of the things that I need to do is to embed into the HTML existing rd party JavaScript controls for example a photo gallery component Is this something that we should be able to do in Ooui without problems In the example of the photo gallery adding a rd party control means modifying the HEAD of the HTML document to reference external JS and CSS files and then executing some JavaScript code on the document The library will then create new elements inside the document and attach handlers to their events Given that all this handling of elements happens in a lower level of abstraction respective to Ooui is this something that you see feasible Or is the engine going to compare versions and run over all the rogue elements and their event handlers that were created with nasty injected JavaScript Thank you This addresses the issues in and with separate issues to reflect different facets now all addressed in proposed fixes It resolves for us a final issue in porting a large complicated app to the magnificence of Ooui which we are using for a production project The problem is that WebView works only with a url passed to iframe src and not with text input This seems a show stopper because the best way to have pretty screens is to use an html editor to produce html text files for importing into Xamarin Forms Given the limitation these files could be loaded as files via a url but its slow and inefficient poor practice to keepmaintain contents on an external source Its a real leg up to load these as text directly into WebView and very frequently needed An impediment is that different browsers and versions handle text input to iframe differently We have experimented with various approaches to this and found many things that dont work eg polyfill and two solutions that seem reasonable We are not presenting the second option which we prefer for ourselves to actually detect the browser and respond accordingly This will support older browsers and has fallback in case useragent syntax should change but is a bit of black art that we feel is too timeconsuming for Frank to evaluate and personally test without very extensive discussins and testing given all his responsibilities and interests The best option we feel is one that is very simple ie just changing the iframe load from src to srcdoc which is now html standard and being adopted widely but not bothering with datatext conventions etc that can make older versions of browsers work With this change text input to WebView will in fact be implemented but only in a forward looking way It works with current Chrome Firefox etc and will soon with Edge where srcdoc is already implemented for next release It should work with other browsers that properly implement srcdoc It will not work with legacy versions even where these can be made to work with browser version detection Note some caching issues for the latter An ugly thing is that it doesnt work with IE that is in Visual Studio If one is satisfied to only support browsers as they support the recent srcdoc standard this approach might recommend itself If one is doing production and worried about all the browsers not upgraded then our other more involved solution might be preferred Depending on this and evalution of the fix issues and might be considered closed in a fashion We leave these judgments to Frank who will want to preserve his elegant architecture and careful software practices Issues around sandbox might be approached by adopting the most secure option then only backing off as time reveals it to be wise Note that for ourselves we do not pursue any javascript solutions and the various considerations that they entail We present the fix below Please note that this has been so time consuming on our critical path project that we cant generate a pull request at present Apologies if this causes difficulties we may be able to do it in a month or two We need to concentrate on product first Code changes in iframecs inside the long selfdocumenting ifdef BiasIframeToSupportSrcdocOnlyRecentBrowsersNoDetect public string Source get GetStringAttribute src null set SetAttributeProperty src value if DETECTREQUEST BiasIframeToSupportSrcdocOnlyRecentBrowsersNoDetect public string srcdoc tryfix trynew get GetStringAttributesrcdoc null set SetAttributePropertysrcdoc value public string sandbox tryfix trynew get GetStringAttributesandbox null set SetAttributesandbox stringEmpty endif detectrequest public Iframe base iframe Code changes in WebViewRenderercs if iframe null if BiasIframeToSupportSrcdocOnlyRecentBrowsersNoDetect iframesrcdoc html iframesandbox null security but research more might fail some cases else orig code notBiasIframeToSupportSrcdocOnlyRecentBrowsersNoDetect iframeSource html generally fails html text input to webview not implemented endif BiasIframeToSupportSrcdocOnlyRecentBrowsersNoDetect It was hard to find the message pump bug but at all the logical junctures where we might have given up we were enjoying learning the code and really liking the whole endeavor so that inspired us to keep on Now however we did go back and flip on our test to see if WebView works from raw text as opposed to url input Unfortunately it doesnt even when we verify the other tag closure fix is active buttons etc are active So these are separate bugs We are hoping this second one might be easy for you to see and fix knowing the code thoroughly Thanks for everything youve created here Its magnificent Needs to be tested