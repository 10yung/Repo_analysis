Loosely connected polyB zier is used six times Thats four times too many This section starts with We can also represent B zier curves as matrix operations by expressing the B zier formula as a polynomial basis function and a coefficients matrix and the actual coordinates as a matrix Lets look at what this means for the cubic curve but should include a sentence that explains were going to use P notation for coordinates representing fulldimensional vectors This function shows the standard Bezier formula using indices and component form that doesnt match the rest of the primer apodtele wrote Offsetting by scaling clearly has issues lines drop out and color is inconsistent That is understandable as the center of scaling is not equidistant from ends in general Can you try miter moves along bisectors for control points as in line joins This would preserve the tangent directions at the ends You wont need a requirement of for controls to be on one side it will work for wiggly segments too Perhaps you can come up with a reasonable criteria for a straightness based on distance from controls to the chord trisections I would love to hear your thoughts This page has illustrations and references This one does too Actually text doesnt mention that weights and points can and are usually vectors ie in d space Just applying blindly all the functions and formulas will give you a constant function or a line on d line Not very useful at all and well confusing Hi Mike thanks for a great resource Theres an inconsistency between your treatment of the tension parameter when you go from the control vector representation to the matrixpoints representation in attached screenshot Either the tension is in the denominator former rep so higher tension implies shorter tangents as in the text or tension is in the numerator latter rep so lower tension implies shorter tangents Could you fix this The inconsistency is there at various places all the way to the end of that section catmullrom x first formula should not include ratio it should include the binomial coefficient and control point explain that this operation is akin to projecting a conic which allows it to become circular change the sliders so that the current value is clear vs the minmax values This requires generating ES class code rather than using the ES createClass approach extend all examples with so that they generate a representative image that is useful in print form or mark the example however much text as for web only so it doesnt end up in the print medium create duplicate guide texts for graphics with forprint text that doesnt talk about interacting with graphics find an appropriate set of free fonts Mike Regarding Lets derive the full formula anyway via the curvature function you state the the function Ct is the cross product between the first and second derivative functions for the parametric dimensions of our curve Isnt there a denominator cube of the length of the first derivatives missing from your expression See Wikipedia Curvature Local expressions As a sanity test observe that if the point coordinates are all integers the erroneous Ct polynomial coefficients will also all be integers which isnt intuitive curvature is surely not always an integer at integer ts My understanding The missing denominator is the cube of the length of the velocity first derivative in t vector Since that length involves the square root of a polynomial the denominator is not a polynomial Hence Ct is not a polynomial and not a rational function This presents an unhappy predicament that there is no convenient way to analyze the properties of Ct with polynomialhandling code to my knowledge it can only be evaluated for specific ts The erroneous Ct happens to still work to find inflections because the roots of a quadratic numerator are the roots of any ratio with that numerator Ie a quadratic Px and Pxthing have identical roots for any given thing that is finite and nonzero The degenerate cases correspond to straight lines colinear endcontrol points zero curvature everywhere or zero extent coincident endcontrol points Also is there not a typo in the text the Bezier derivative function names should each have an x or y subscript