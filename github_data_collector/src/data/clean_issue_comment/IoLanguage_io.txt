same issue as as the NOTE of neovims job saied Note Buffered stdoutstderr data which has not been flushed by the sender will not trigger the onstdoutonstderr callback but if the process ends the onexit callback will be invoked For example ruby e buffers output so small strings will be buffered unless autoflushing stdoutsynctrue is enabled function Receivejobid data event echom printfs saeventstringadata endfunction call jobstart ruby e stdoutsync true times do sleep and puts Hello Ruby end onstdout Receive how about enable autoflush in io Is there a websocket client Any suggestions or advice for this The bindings section in docs is pretty empty Lua has extremely good bindings for Rust so I thought maybe Io should too Io x asHex Io x asHex when literal integer more than bytes the high bits will be truncated eg the of x this problem does still exist in latest release The same error is attributeused x ff I used gcc cmake Emsys homehecheiolibsiovmsourceIoNumberh error expected asm or attribute before attributeused attributeused x ff In file included from Emsys homehecheiolibsiovmsourceIoBlockc Emsys homehecheiolibsiovmsourceIoNumberh error expected asm or attribute before attributeused attributeused x ff In file included from Emsys homehecheiolibsiovmsourceIoCoroutinec Emsys homehecheiolibsiovmsourceIoNumberh error expected asm or attribute before attributeused attributeused x ff In file included from Emsys homehecheiolibsiovmsourceIoCollectorc Emsys homehecheiolibsiovmsourceIoNumberh error expected asm or attribute before attributeused attributeused x ff In file included from Emsys homehecheiolibsiovmsourceIoCompilerc Emsys homehecheiolibsiovmsourceIoNumberh error expected asm or attribute before attributeused attributeused x ff In file included from Emsys homehecheiolibsiovmsourceIoDatec Emsys homehecheiolibsiovmsourceIoNumberh error expected asm or attribute before attributeused attributeused x ff In the section Defining Objects with the do method the code snippet fails when pasting into Terminal Ubuntu bash resulting in only name and setName being defined Contact Object clone do name nil address nil city nil fullAddress methodlistname address city join n This is because of the bare value nil the same failure occurs for bare integer values This works though Contact Object clone do name nil address nil city nil fullAddress methodlistname address city join n Hey all First of all this is a super cool project Ive enjoyed learning about and understanding this language But since you guys came out with Eerie and moved all the addons out of the main repo there is absolutely no documentation for how to install them The documentation on the guide on the main website says to use the builtin Makefile which no longer exists The Eerie readme briefly mentions installing packages and the Io readme doesnt mention it at all Hopefully the website could be updated to list this information correctly I would be open to helping with documentation if I was pointed in the right direction I would greatly appreciate it if support for libreadline could be added to io interface so that users can edit input with arrow keys just like that in Python bash and many more others It would be simpler to understand the state of a release with the semantic versioning instead of the current one does it has breaking changes new features or is it a bugfix release Hi while I was working on PyParsing port for Io I hit a problem with assignment operators namely that they require their left operand to be a simple name This is enforced during operator shuffling and is implemented in IoMessageopShufflec After some wrangling with the implementation I managed to create a patch I opened a PR with it here Additionally I wrote a blog post about the whole thing posted here I plan to post it to newsycombinatorcom and maybe some other sites next week and Id appreciate any hints on how to make the post and of course the PR better TLDR my patch makes this Io code possible and working Object destructure method target a b list becomes target a target b msg call argAt lst call evalArgAt target call target msg arguments foreachi x target setSlotx name lst ati target inform the parser about our new operator OperatorTable addAssignOperator destructure o Object clone o wa wb x list o println prints Object x bcb wa wb x nil