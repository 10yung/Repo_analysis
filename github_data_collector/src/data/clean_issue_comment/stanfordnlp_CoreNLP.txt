I tested the latest Chinese CoreNLP version and found the results are quite horrible Here are few examples always tags as one NN token tagged as one NN token tagged as one NN token tagged as VV When I compared them with the results from surprisingly the results of those examples are all right Why is that Are the models different Is there a bug in the new version model from nltktag import StanfordNERTagger stanfordclassifier hometeststanfordner classifiersexampleserializednccnccsergz stanfordner hometeststanfordner stanfordnerjar Build NER tagger object st StanfordNERTaggerstanfordclassifier stanfordner A sample text for NER tagging text Ram works at Google Tag the sentence and print output tagged sttagstrtextsplit printtagged Error reported hometestDesktopmyenvbinpython hometestNlpSourcemasterssspy Traceback most recent call last File hometestNlpSourcemasterssspy line in module tagged sttagstrtextsplit File hometestDesktopmyenvlibpython sitepackagesnltktagstanfordpy line in tag return sumselftagsents tokens File hometestDesktopmyenvlibpython sitepackagesnltktagstanfordpy line in tagsents cmd classpathselfstanfordjar stdoutPIPE stderrPIPE File hometestDesktopmyenvlibpython sitepackagesnltkinternalspy line in java raise OSErrorJava command failed strcmd OSError Java command failed usrbinjava mx m cp hometeststanfordner stanfordnerjar edustanfordnlpiecrfCRFClassifier loadClassifier hometeststanfordner classifiersexampleserializednccnccsergz textFile tmptmph k mnol outputFormat slashTags tokenizerFactory edustanfordnlpprocessWhitespaceTokenizer tokenizerOptions tokenizeNLsfalse encoding utf Invoked on Tue Jan IST with arguments loadClassifier hometeststanfordner classifiersexampleserializednccnccsergz textFile tmptmph k mnol outputFormat slashTags tokenizerFactory edustanfordnlpprocessWhitespaceTokenizer tokenizerOptions tokenizeNLsfalse encoding utf tokenizerOptionstokenizeNLsfalse loadClassifierhometeststanfordner classifiersexampleserializednccnccsergz encodingutf outputFormatslashTags textFiletmptmph k mnol tokenizerFactoryedustanfordnlpprocessWhitespaceTokenizer Exception in thread main javalangRuntimeException javalangClassCastException class javautilProperties cannot be cast to class LedustanfordnlputilIndex javautilProperties is in module javabase of loader bootstrap LedustanfordnlputilIndex is in unnamed module of loader app at edustanfordnlpieAbstractSequenceClassifierloadClassifierNoExceptionsAbstractSequenceClassifierjava at edustanfordnlpiecrfCRFClassifiermainCRFClassifierjava Caused by javalangClassCastException class javautilProperties cannot be cast to class LedustanfordnlputilIndex javautilProperties is in module javabase of loader bootstrap LedustanfordnlputilIndex is in unnamed module of loader app at edustanfordnlpiecrfCRFClassifierloadClassifierCRFClassifierjava at edustanfordnlpieAbstractSequenceClassifierloadClassifierAbstractSequenceClassifierjava at edustanfordnlpieAbstractSequenceClassifierloadClassifierAbstractSequenceClassifierjava at edustanfordnlpieAbstractSequenceClassifierloadClassifierNoExceptionsAbstractSequenceClassifierjava more Process finished with exit code I am testing CoreNLPClient with the sentence Apple is great with the following output Starting server with command java Xmx G cp Userscongminminnlpstnlpstanfordcorenlpfull edustanfordnlppipelineStanfordCoreNLPServer port timeout threads maxCharLength quiet True serverProperties StanfordCoreNLPproperties preload tokenize index word apple originalText apple lemma apple characterOffsetBegin characterOffsetEnd pos NN ner O speaker PER before after index word is originalText is lemma be characterOffsetBegin characterOffsetEnd pos VBZ ner O speaker PER before after index word good originalText good lemma good characterOffsetBegin characterOffsetEnd pos JJ ner O speaker PER before after What are ner speaker in the output I have a token which is recognized as others in some classifiers however the same token is identified as Person or Organization In such a case the entity need to be identified whenever the first classifier detected as other example models used are nermodel edustanfordnlpmodelsnerenglishall classdistsimcrfsergzedustanfordnlpmodelsnerenglishconll classcaselessdistsimcrfsergz Any Rule to be defined to overwrite the condition Started server with command java mx g cp edustanfordnlppipelineStanfordCoreNLPServer annotators tokenizessplitposlemmaparsesentiment port timeout Python Client from collections import defaultdict from stanfordcorenlp import StanfordCoreNLP import json class StanfordNLP def initself host port selfnlp StanfordCoreNLPhost portport timeout quietFalse logginglevelloggingDEBUG selfprops annotators tokenize ssplit pos lemma ner parse depparse dcoref relation truecase pipelineLanguage en truecaseoverwriteText true outputFormat json If I provide the input text text rajesh lives in hyderbad def nerself sentence return selfnlpnersentence def annotateself sentence return jsonloadsselfnlpannotatesentence propertiesselfprops staticmethod def tokenstodicttokens tokens defaultdictdict for token in tokens tokens inttoken index ner token ner return tokens if name main sNLP StanfordNLP text Rajesh lives in Hyderabad print NER sNLPnertext Expected Output NER Rajesh PERSON lives O in O Hyderabad LOCATION Actual Output NER Rajesh PERSON lives O in O Hyderabad LOCATION If I provide the input text text rajesh lives in hyderbad Expected Output NER rajesh PERSON lives O in O hyderabad LOCATION Actual Output NER rajesh O lives O in O hyderabad O I wish to solve this by using truecase annotation however my attempt didnt worked out Hi Ive seen NFLAnnotatorjava in srcedustanfordnlppipelinepackageinfojava but I can not find this file Where the NFLAnnotatorjava locates This sentence generates a crash when trying to train the English SR Parser S NPSBJ DT the NNPS knights NNP inn VP VBD was ADJPPRD ADJP JJ small ADJP RB very JJ small FRAG PRN S NPSBJ PRP i VP VBP mean NP CD NN room PP IN in NP DT every NN room UCP S NPSBJ PRP it VP VBD was ADJPPRD JJ cozy NPADV DT a JJ little CC and NP DT a JJ small NN tv I am using the ColumnDataClassifierjava and for each of my test Datum and I get following scores like in the bellow screenshot img width altScreenshot at src My issue is What is the max value of the score that can reach each test Datum And it is possible to set this maxscorevalue to something like The purpose is to establish somme statistics on my test Datum I am getting IndexOutofBoundsException while running the annotation pipeline Following is the trace of the error that I am getting Adding annotator tokenize Adding annotator ssplit Adding annotator pos Loading POS tagger from edustanfordnlpmodelspostaggerenglishleft wordsenglishleft wordsdistsimtagger done sec Adding annotator lemma Adding annotator ner Loading classifier from edustanfordnlpmodelsnerenglishall classdistsimcrfsergz done sec Loading classifier from edustanfordnlpmodelsnerenglishmuc classdistsimcrfsergz done sec Loading classifier from edustanfordnlpmodelsnerenglishconll classdistsimcrfsergz done sec nerfineregexner Read unique entries out of from edustanfordnlpmodelskbpenglishgazetteersregexnercaselesstab TokensRegex patterns nerfineregexner Read unique entries out of from edustanfordnlpmodelskbpenglishgazetteersregexnercasedtab TokensRegex patterns nerfineregexner Read unique entries from files Adding annotator parse Loading parser from serialized file edustanfordnlpmodelslexparserenglishPCFGsergz done sec Processing file UserssyauDesktopFall XMLParserPilotRSTPDTBparserDPLPdatainputtxt writing to UserssyauDesktopFall XMLParserPilotRSTPDTBparserDPLPCoreNLPinputtxtout Exception in thread main javalangIndexOutOfBoundsException Index out of bounds for length at javabasejdkinternalutilPreconditionsoutOfBoundsPreconditionsjava at javabasejdkinternalutilPreconditionsoutOfBoundsCheckIndexPreconditionsjava at javabasejdkinternalutilPreconditionscheckIndexPreconditionsjava at javabasejavautilObjectscheckIndexObjectsjava at javabasejavautilArrayListgetArrayListjava at edustanfordnlppipelineNERCombinerAnnotatortransferNERAnnotationsToAnnotationNERCombinerAnnotatorjava at edustanfordnlppipelineNERCombinerAnnotatorannotateNERCombinerAnnotatorjava at edustanfordnlppipelineAnnotationPipelineannotateAnnotationPipelinejava at edustanfordnlppipelineStanfordCoreNLPannotateStanfordCoreNLPjava at edustanfordnlppipelineStanfordCoreNLPannotateStanfordCoreNLPjava at edustanfordnlppipelineStanfordCoreNLPprocessFilesStanfordCoreNLPjava at edustanfordnlppipelineStanfordCoreNLPprocessFilesStanfordCoreNLPjava at edustanfordnlppipelineStanfordCoreNLPrunStanfordCoreNLPjava at edustanfordnlppipelineStanfordCoreNLPmainStanfordCoreNLPjava I am trying to train a own ner but I always got out of memory Therefore I try use batch training The following is my step and cmd java cp stanfordnerjar mx g edustanfordnlpiecrfCRFClassifier prop trainproptxt But after my first batch training I got the domaingz How I train second batch based on domaingz Because my input of cmd is stanfordnerjar 