When using ObjectiveRecord as a dynamic framework NSBundlebundleForClassself returns the frameworks bundle which then in turn wont yield the correct CoreData model file By overriding the bundle when using CoreDataManager this can be fixed Skipped building ObjectiveRecord due to the error Dependency ObjectiveRecord has no shared framework schemes Help More like a convinience not to specify InContext when calling all find where The create call fails because in createInContext the call to self entityName returns ModuleNameClassname instead of just Classname as it did in Objc The format of the return type of NSStringFromClass changed in the latest Swift release Hi guys First I want to say that I admire what youve done on Kiwi library its very helpful for testing Thank you Ive been trying to run the latest code on Xcode Version D o but Ive been getting issues with the description field and even when I applied the fix from it still would complain about too many argument for objcmsgSend having too many arguments which is ridiculous on its own level since it supposed to expect a variadic parameter at the end But what surprised me more is that the build system showing passing when the same error is happening on the CI Im not sure if you have already attended to the problem Just wanted to give you a heads up Thanks I want to use iCloud functionality but Im not sure how to go about adding this key to the options dictionary of the NSPersistantStore Anyone using ObjectiveRecord and iCloud Accessor methods of synthesized property managedObjectModel etc were overridden Adding a readwrite property in a private category fixes this warning Ive been using your library for quite some time now and love it Also fully made the transition to Swift Can you tell me if and when there will be a Swift version coming out Id love use it If you need testers for this let me know Cheers Sidney Hello is this project still alive And what is about version Thanks Urkman 