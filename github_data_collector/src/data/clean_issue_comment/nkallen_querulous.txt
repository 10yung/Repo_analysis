Hi guys I have been happily using querulousgeneric for years and I think its brilliant I would like to take advantage of new features in Scala and was wondering if you could port it to that version I did try porting it myself but hasnt been very successful so far thank you Nasko Can there be examples for doing the above I am using ApachePoolingDatabaseFactory as shown in the example There is no way to shutdown the connection Pool The app just hangs Seing the code as well there is no Method to shutdown the App We have this object from which we are fetching our queryEvaluator object MyDataSource val queryFactory new SqlQueryFactory val apachePoolingDatabaseFactory new ApachePoolingDatabaseFactory SELECT new Duration new Duration true new Duration val queryEvaluatorFactory new StandardQueryEvaluatorFactoryapachePoolingDatabaseFactory queryFactory val queryEvaluator queryEvaluatorFactorydbConfigdriverClassName dbConfigurl dbConfigusername dbConfigpassword We are not explicitly closing connections assuming that it is handled We seem to be running out of connections on our MySQL db We are using the following dependencies libraryDependencies comtwitter querulous generic libraryDependencies mysql mysqlconnectorjava On line of configtestWhileIdle is set to false According to this means that timeBetweenEvictionRunsMillis has no effect the connections are never checked when idle and the pool sometimes returns invalid connections Is there a reason to not let this be configurable or at least default to true I am new to Scala and building Scala projects Im currently using buildr but it doesnt work because it cant find configgy in the recommended maven repositories Lots of other versions including x are available at Can you update the pom file buildr Downloading comtwitterquerulouspom Downloading Downloading netlagconfiggypom Buildr aborted RuntimeError Failed to download netlagconfiggypom tried the following repositories The Querulous ReadMe elegantly forgets to mention that Querulous only supports MySQL I hope this is not a purposeful deception but rather indicates the plan to support other databases It looks like the design of the framework is databaseagnostic and support of other databases can be done without major redesign I would like to use this framework but cannot because for this project we use Oracle I had a look at other forks of this project but it doesnt look like there is anything working there Please be nice and support general JDBC Please see inline comments Code will result in javasqlSQLException Cant call commit when autocommittrue scala def test Boolean queryEvaluatortransaction t texecuteSELECT texecuteSELECT val everythingWentSuccessful false ifeverythingWentSuccessful true else trollbackcauses the Transaction to be rolled back autoCommit will be set to true false no exception occurred so query evaluator will call commit on the transaction which yields exception It seems to me the only way to roll back a transaction right now is to a raise an error b set auto commit to false after calling rollback 