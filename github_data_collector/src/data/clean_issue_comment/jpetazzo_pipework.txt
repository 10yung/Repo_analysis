I am trying to pass the H hostnametest parameter to dhclient with dhclientH hostnametest but I am getting a hostnametest is invalid lladdr error Any ideas Edit Options need to be encased in doublequotes dhclientH hostnametest Documentation should be updated to reflect this Thank you for creating pipework Its very cool and very easy to use However I have a problem with it recently and I hope I can find a solution for it After upgrading the kernel version of my ubuntu server to I added an IP with the following command to my container pipework br i eth CONTAINER It worked fine but when I stopped the container its network was not destroyed completely I can ping the IP I tried to find the interface on the host or on the container and remove it manually but I could not find anything After restarting the server the ping was gone and the problem was solved Is there a way to remove the IP manually from the container without container termination or do you have any idea for solving the issue How do I combine get dhclient to use the DHCP serverprovided default route latest version as of Aug I can do the following to assign an IP address with all traffic flowing via but then the address has to be static sudo pipeworkpipework ens f vxlabred Or I can do the following to assign an IP address via our local DHCP server but then there is no default route see below sudo pipeworkpipework ens f i eth vxlabred dhcpf Ured root d a route n Kernel IP routing table Destination Gateway Genmask Flags Metric Ref Use Iface UG eth U eth For normal clients such as the docker host dhclient shows an additional entry UG ens f Hi this change should work much better than macvlanmode please review the changes The new option for setting upper interface was added example usage pipework br bond i eth guest This cmd will create the next chain of devices bond top interface bond vlan br bridge your container veth If vlan option is not set it will add bond directly to the bridge Hi Im trying to assign IP which is obtained from DHCP server to a docker container actually a Gitlab container I used the command sudo pipeworkpipework p p gitlabinstance udhcpcf e b b But it keeps showing the message udhcpc v started SIOCSIFFLAGS Device or resource busy Sending discover udhcpc sendto Network is down Read error Network is down reopening socket Sending discover udhcpc sendto Network is down Read error Network is down reopening socket Sending discover udhcpc sendto Network is down Read error Network is down reopening socket etcudhcpcdefaultscript Lease failed Read error Network is down reopening socket Read error Network is down reopening socket Read error Network is down reopening socket Read error Network is down reopening socket Read error Network is down reopening socket Read error Network is down reopening socket Read error Network is down reopening socket Sending discover udhcpc sendto Network is down Read error Network is down reopening socket Sending discover udhcpc sendto Network is down Read error Network is down reopening socket Sending discover udhcpc sendto Network is down Read error Network is down reopening socket This is probably related to But I still cant figure out how this works Any one encounter the same situation Thank you hello thank you for pipework Ive been struggling hard trying to get a container to have public ip address assigned by dhcp running kali linux on virtualbox network is that III type and promisc mode allow all is already set I m following these instructions commands ip link add dev macvlan link eth type macvlan macvlan being the name of the vcard lol Connect container to virtual network interface with pipework see commands pipework macvlan containerid dhcp This does not work cause I get only an xx ip which is not accesible from external networks Im trying to get an external ip address assigned to the container just like a vm machine does in bridge mode Is that possible Please help Ive been stuck on that for several days now thank you best regards I have tried to add two network interfaces to a container but for the second I received the error RTNETLINK answers file exists Both the interfaces I try to add are real and I used the command pipework eth dockerID pipework eth dockerID Thanks in advance Were using pipework with docker and running it from our systemd service unit which starts the container To get it work we had to add a sleep before the arping is done in this line Looks like udhcp does not create a pid file at least on Ubuntu I run latest script version from Github optpipeworksh intbr dockerregistry udhcpc d This command returns nonzero exit code because ip netns exec ip link set dev eth address d case DHCPCLIENT in DHCPQq ip netns exec udhcpc qi eth x hostnamedockerregistry p varrunudhcpcdockerregistrypid udhcpc v started etcresolvconfupdatedlibc Warning etcresolvconf is not a symbolic link to runresolvconfresolvconf Sending discover Sending select for Lease of obtained lease time etcresolvconfupdatedlibc Warning etcresolvconf is not a symbolic link to runresolvconfresolvconf rm varrunudhcpcdockerregistrypid rm cannot remove varrunudhcpcdockerregistrypid No such file or directory Does anybody else see this behaviour with the current new release of docker the default Policy of iptables changes from FORWARD to DROP see dockerdocker pipework wont be successful anymore to assign valid global IPs to docker containers as all packets get dropped by iptables