Hi Is there a way to validate inner properties using groups For example class ContactData IsOptional groups updatecontact IsNotEmpty groups createcontact firstname string class ContactRequest ValidateNested IsNotEmpty Type ContactData data ContactData const classData plainToClassContactRequest params validateclassData groups createcontact Because example above doesnt work for me Seems that the validator forces you to add the groups only in the first level of the class in this example ContactRequest to work like this class ContactRequest ValidateNested IsNotEmpty Type ContactData data ContactData IsOptional groups updatecontact IsNotEmpty groups createcontact firstname string The devDependency tsnode was updated from to View failing branch This version is covered by your current version range and after updating it in your project the build failed tsnode is a devDependency of this project It might not break your production code or affect downstream projects but probably breaks your build or test tools which may prevent deploying or publishing details summaryStatus Detailssummary continuousintegrationtraviscipush The Travis CI build could not complete due to an error Details details details summaryRelease Notes for FIx yn Dependencysummary pstrongFixedstrongp ul liDowngrade codeyncode due to node engine a classissuelink jsissuelink dataerrortextFailed to load issue title dataid datapermissiontextIssue title is private dataurl datahovercardtypepullrequest datahovercardurlTypeStrongtsnodepull hovercard href ul details details summaryCommitssummary pThe new version differs by commitsp ul lia href code codeli lia href codeDowngrade codeyncode due to node engine codeli lia href codeMerge codeprocessenvcode in tests for CIcodeli ul pSee the a href diffap details details summaryFAQ and helpsummary There is a collection of frequently asked questions If those don t help you can always ask the humans behind Greenkeeper details Your Greenkeeper Bot palmtree The IsLatitude decorator defines a type of ISLONGITUDE and the IsLongitude decorator defines a type of ISLONGITUDE Should be the other way around Im currently using the following classvalidator typeorm nestjsxcrud nestjsxcrudrequest nestjsxcrudtypeorm Ive read this case here is my update version on that case ts IsOptional groups UPDATE IsDefined groups CREATE IsNotEmpty IsString Column name string The intent of this definitions is that the name will be necessary in creation but optional on updates If ever during update the name is provided it should evaluate against the IsString IsNotEmpty My question is What will be the concluded validation for name field Im afraid the IsDefined is ignored on this case not sure here as indicated here ValidateIf will validate before any other rules sois there another condition hook will validate after all other rules The devDependency typesnode was updated from to This version is not covered by your current version range If you don t accept this pull request your project will work just like it did before However you might be missing out on a bunch of new features fixes andor performance improvements from the dependency update Publisher types License MIT Find out more about this release details summaryFAQ and helpsummary There is a collection of frequently asked questions If those don t help you can always ask the humans behind Greenkeeper details Your Greenkeeper bot palmtree When I try to validate with validateOrReject I receive that error even if I havent set any IsPhoneNumber decorator googassertsAssertionError message Assertion failed reportErrorToServer true messagePattern Assertion failed AssertionError Assertion failed n at new googassertsAssertionError nodemodulesgooglelibphonenumberdistlibphonenumberjs n at ObjectgoogassertsdoAssertFailure nodemodulesgooglelibphonenumberdistlibphonenumberjs n at Objectgoogassertsassert as assert nodemodulesgooglelibphonenumberdistlibphonenumberjs n at new googproto FieldDescriptor nodemodulesgooglelibphonenumberdistlibphonenumberjs n at Functiongoogproto MessagecreateDescriptor nodemodulesgooglelibphonenumberdistlibphonenumberjs n at i nphonenumbersPhoneMetadatagetDescriptor nodemodulesgooglelibphonenumberdistlibphonenumberjs n at i nphonenumbersPhoneMetadatagoogproto Message nodemodulesgooglelibphonenumberdistlibphonenumberjs n at new i nphonenumbersPhoneMetadata nodemodulesgooglelibphonenumberdistlibphonenumberjs n at Object nodemodulesgooglelibphonenumberdistlibphonenumberjs n at o nodemodulesgooglelibphonenumberdistlibphonenumberjs packagelockjson classvalidator version resolved integrity sha niAmmSPFku xsnpYYrddy NZRrCX yyoZrgPKOilE BG Ma eVCIxpR X LasL BzbYzsutGmSbAXlh zNw requires typesvalidator googlelibphonenumber validator googlelibphonenumber version resolved integrity sha QCQAaKJlSd dUqvdQf zzfb uiZHsG yhCfOdCVRfMuPZVDIEB y SYwjPQJPs ebfW jj PeobB JJ JA The devDependency sinon was updated from to This version is not covered by your current version range If you don t accept this pull request your project will work just like it did before However you might be missing out on a bunch of new features fixes andor performance improvements from the dependency update Publisher mrgnrdrck License BSD Clause Find out more about this release details summaryFAQ and helpsummary There is a collection of frequently asked questions If those don t help you can always ask the humans behind Greenkeeper details Your Greenkeeper bot palmtree validateOrReject throws an array of errors that does not have a stack That is bad in case such error is not being caught and results in Internal Server Error Is it possible to add something like validateOrError that would throw an instance like this instead class ObjectInvalid extends Error errors ValidationError Hi I have an issue using classvalidator and custom validator classes The framework that Im using is NestJS The problem is not in the validation itself but when Im writing endtoend tests using Jest as a framework I am not able to mock the custom validation classes created using classvalidator You can check the issue more in details at the following issue link that I opened in the official NestJS repo but I was diverted here 