I am using OData EDM model builder to add additional additional OData FunctionsActions to model But when I am doing it swagger will not generate proper input parameters for them because those ActionsFunctions are taking ODataActionParameters and then generated schema for these FunctionsActions schema looks like this schema type object additionalProperties type object And example models looks like this additionalProp additionalProp additionalProp It seems like ActionFunctions parameters that are defined when created are not used for swagger schema generation Can I setupconfigure EDM model exploration to get this working or do I need to implement custom IOperationFilter in swashbuckle and hack fix it manually Thank you for answer Add license file extension Fixes We are using select on PUTPATCHPOST requests to filter the properties on the model returned by a successful request This works well but we cannot get swagger to show select as an available parameter for these actions These are valid operations as per the OData spec If I change the code below to return true for PUTPATCHPOST all works as it should and it would also support the other rules of the spec I am using aspnet core project template to develop a web api There are no compilation errors Here goes my code details Programcs using System using SystemCollectionsGeneric using SystemDiagnostics using SystemLinq using SystemThreadingTasks using MicrosoftAspNetCoreHosting using MicrosoftExtensionsConfiguration using MicrosoftExtensionsHosting using MicrosoftExtensionsLogging namespace MyProject public class Program public static void Mainstring args Use the W C Trace Context format to propagate distributed trace identifiers See ActivityDefaultIdFormat ActivityIdFormatW C CreateHostBuilderargsBuildRun public static IHostBuilder CreateHostBuilderstring args HostCreateDefaultBuilderargs ConfigureWebHostDefaultswebBuilder webBuilderUseStartupStartup Startupcs using SampleAPIConstants using SampleAPIExtensions using SampleAPIGraphQL using SampleAPIMiddleware using BoxedAspNetCore using GraphQLServer using GraphQLServerUiPlayground using GraphQLServerUiVoyager using MicrosoftAspNetCoreBuilder using MicrosoftAspNetCoreDiagnosticsHealthChecks using MicrosoftAspNetCoreHosting using MicrosoftAspNetCoreMvc using MicrosoftExtensionsConfiguration using MicrosoftExtensionsDependencyInjection using MicrosoftExtensionsHosting namespace MyProject public class Startup private readonly IConfiguration configuration private readonly IWebHostEnvironment webHostEnvironment summary Initializes a new instance of the see cref Startup class summary param name configurationThe application configuration where key value pair settings are stored See param name webHostEnvironmentThe environment the application is running under This can be Development Staging or Production by default See public StartupIConfiguration configuration IWebHostEnvironment webHostEnvironment thisconfiguration configuration thiswebHostEnvironment webHostEnvironment summary Configures the services to add to the ASPNET Core Injection of Control IoC container This method gets called by the ASPNET runtime See summary public virtual void ConfigureServicesIServiceCollection services services AddCosmosDBConfigurationconfiguration AddAutoMapperConfiguration AddCustomResponseCompressionconfiguration AddCustomCors AddCustomOptionsconfiguration AddHttpContextAccessor AddCustomRouting AddCustomStrictTransportSecurity AddCustomHealthChecks AddServerTiming AddControllers AddCustomJsonOptionswebHostEnvironment AddCustomMvcOptionsconfiguration Services AddCustomGraphQLconfiguration webHostEnvironment AddGraphQLResolvers AddGraphQLResponse AddProjectRepositories AddProjectSchemas summary Configures the application and HTTP request pipeline Configure is called after ConfigureServices is called by the ASPNET runtime summary public virtual void ConfigureIApplicationBuilder application application UseIf thiswebHostEnvironmentIsDevelopment x xUseServerTiming UseForwardedHeaders UseResponseCompression UseFetchLocaleMiddleware UseIf thiswebHostEnvironmentIsDevelopment x xUseHsts UseIf thiswebHostEnvironmentIsDevelopment x xUseDeveloperExceptionPage UseRouting UseCorsCorsPolicyNameAllowAny UseEndpoints builder builder MapHealthChecksstatus RequireCorsCorsPolicyNameAllowAny builder MapHealthChecksstatusself new HealthCheckOptions Predicate false RequireCorsCorsPolicyNameAllowAny UseWebSockets Use the GraphQL subscriptions in the specified schema and make them available at graphql UseGraphQLWebSocketsMainSchema Use the specified GraphQL schema and make them available at graphql UseGraphQLMainSchema UseIf thiswebHostEnvironmentIsDevelopment x x Add the GraphQL Playground UI to try out the GraphQL API at UseGraphQLPlaygroundnew GraphQLPlaygroundOptions Path Add the GraphQL Voyager UI to let you navigate your GraphQL API as a spider graph at voyager UseGraphQLVoyagernew GraphQLVoyagerOptions Path voyager Responsecs namespace MyProject public class Response public object Data get set public string StatusCode get set public string ErrorMessage get set public Responseobject data StatusCode Success Data data public Responsestring statusCode string errorMessage StatusCode statusCode ErrorMessage errorMessage All the dependencies mentioned in the ConfigureServices of the Startupcs are available While validating the APIs I am getting a run time error as mentioned below No constructor for type MyProjectResponse can be instantiated using services from the service container and default values Here goes the dependency setup required for the Response class as mentioned below ProjectServiceCollectionExtensionscs namespace MyProject public static class ProjectServiceCollectionExtensions public static IServiceCollection AddGraphQLResponsethis IServiceCollection services servicesAddScopedResponse Can anyone help me to fix this issue by providing their guidance Be careful with your versioning If you are using SemVer then breaking changes mean bumping the major part of the version number Version of MicrosoftAspNetCoreMvcVersioningApiExplorer supports NET Standard Version does not and forces NET Core This is a breaking change for those that are not on NET Core yet Therefore a patch bump is highly inappropriate This should have been Version due to this breaking change Hello when adding the nuget package MicrosoftAspNetCoreMvcVersioning or we are hitting the following exception Part URI cannot start with two forward slashes This only happens when we use tools like Nuget Package Explorer to download the nuget It does not seem to happen when consuming directly from Visual Studios It seems this is caused by the same issue as described here Any chance we could get a similar fix Thanks Hello This must be a very simple question I have a versioned API which is based on CotrollerBasebased controllers We plan to introduce OData support in the next version of the API Could you please point out what is the best practice to do it As a test I tried to add a ControllerBasebased controller to SwaggerODataSample I attributed it with ApiController ApiVersion Routeapiv TestController The result was that loading of swaggerindexhtml resulted with Failed to load API definition Fetch error Internal Server Error swaggerv swaggerjson Hello I want to test the ASPNET Core example with OData API Explorer I want to create a basic controller to transmit methods to my main controllers via inheritance Here is the controller I created with the Get method of PeopleController v public class BaseController ODataController Producesapplicationjson ProducesResponseTypetypeofODataValueIEnumerablePerson Status OK public IActionResult GetODataQueryOptionsPerson options var validationSettings new ODataValidationSettings AllowedQueryOptions Select OrderBy Top Skip Count AllowedOrderByProperties firstName lastName AllowedArithmeticOperators AllowedArithmeticOperatorsNone AllowedFunctions AllowedFunctionsNone AllowedLogicalOperators AllowedLogicalOperatorsNone MaxOrderByNodeCount MaxTop try optionsValidatevalidationSettings catch ODataException e return BadRequest var people new new Person Id FirstName John LastName Doe Email johndoesomewherecom Phone new Person Id FirstName Bob LastName Smith Email bobsmithsomewherecom Phone new Person Id FirstName Jane LastName Doe Email janedoesomewherecom Phone return OkoptionsApplyTopeopleAsQueryable Then I inherit PeopleController from the BaseController The problem is that in swagger the skip and top methods disappear Do you know how I can solve this problem Thank you This is the same issue as here I was instructed to open the issue here as well Describe the bug Api versioning via the URL Path fails when the status contains the same character as the literal Assumption I read over the API Version Format documentation to see if there were any constrains on the values that Status in Version Group MajorMinor Status can take but did not find anything I assumed that this is not desired behavior In our case we have a v preview version for some of the routes which fails even when there is a match To Reproduce Repo with a simple Web API project to reproduce the issue I have included an insomnia config file with all the following calls No postman config as I do not use it Either way the following cURL calls will work just as good once the app is running Version Parsed and matching route Routes with literal A cURL curl X GET d cURL curl X GET d Routes with literal V cURL curl X GET d cURL curl X GET d Version parsed but no matching routes with that version cURL curl X GET d json error code UnsupportedApiVersion message The HTTP resource that matches the request URI does not support the API version sts innerError null cURL curl X GET d json error code UnsupportedApiVersion message The HTTP resource that matches the request URI does not support the API version sts innerError null Version not parsed there is a matching route but that does not really matter cause it cannot that far Routes with literal A cURL curl X GET d json error code ApiVersionUnspecified message An API version is required but was not specified innerError null Routes with literal V cURL curl X GET d json error code ApiVersionUnspecified message An API version is required but was not specified innerError null Culprit The app uses serilog and is configured to log debug messages from the middleware The following messages provided good insight into where the issue was log Debug Id Name CandidateRejectedByComplexSegment Endpoint RouteVersioningIssueControllersWeatherForecastVersionLiteralVControllerGet RouteVersioningIssue with route pattern vversionapiVersionWeatherForecastVersionLiteralV was rejected by complex segment vversion for the request path v statusWithVInWeatherForecastVersionLiteralV Debug Id Name CandidateRejectedByConstraint Endpoint RouteVersioningIssueControllersWeatherForecastVersionLiteralVControllerGet RouteVersioningIssue with route pattern vversionapiVersionWeatherForecastVersionLiteralV was rejected by constraint versionMicrosoftAspNetCoreMvcRoutingApiVersionRouteConstraint with value null for the request path v statusWithVInWeatherForecastVersionLiteralV Debug Id Name CandiateNotValid Endpoint RouteVersioningIssueControllersWeatherForecastVersionLiteralVControllerGet RouteVersioningIssue with route pattern vversionapiVersionWeatherForecastVersionLiteralV is not valid for the request path v statusWithVInWeatherForecastVersionLiteralV After some debugging I think the issue is at the following line After LastIndexOfliteralContent StringComparisonOrdinalIgnoreCase the literal ends up being the corresponding matching char in the Status instead of the first character The parameter is determined at this line As a result the condition at this line is not satisfied and the complex segment is not matched hence the behavior Further technical details MicrosoftAspNetCoreMvcVersioning ASPNET Core version MicrosoftAspNetCoreApp Include the output of dotnet info NET Core SDK reflecting any globaljson Version Commit c a Runtime Environment OS Name Windows OS Version OS Platform Windows RID win x Base Path C Program Files dotnet sdk Host useful for support Version Commit d f The IDE VS VS Code VS Mac youre running on and its version Microsoft Visual Studio Professional Version Hello commonsensesoftware You might remember that helped me to write an extension to this library a while back It adds the attributes IntroducedInApiVersion and RemovedAsOfApiVersion Ive just updated this to support aspnet core I think you were going to add this as an example of how to extend functionality of the library to the docs Would you still like to do this If so would you like me to send a PR 