It appears that in the rewrite of the Sonarqube Dockerfiles the beta images no longer perform any form of validation of the artifacts being downloaded and placed into the Docker image the only security remaining is that of the use of TLS for the HTTP connection wherein the Sonarqube zip file is downloaded While there is a code path which may provide implicit trust in the event that the image is built with the zip itself locally the other branch wherein the zip is downloaded is used as a silent failover should the zip not be correctly loaded into the image by the Dockerfile A correct fix would be reimplementing GPG verification of any downloaded artifacts Yes GPG is a pain to deal with but its far better than the consequences of a successful supply chain attack The dockerlibrary org has some guidance on effective use of faulttolerant GPG verification here Please ensure your issue adheres to the following guidelines when i use command docker run name localsonarqube e sonarwebcontextsonarqube p d sonarqube i got error info like this the point is when i find this i want to edit the sonarwebcontext through sonarproperties but i cont do that because i cant use vivim also i cant use aptget to install vim this is so bad x Please check the problem is not already reported or a known issue documented in developmd developmd x Please include enough details to reproduce the problem the command executed the host platform error messages or relevant logs See with SONAR the fix was only backported to but not i really need to have to have the svgbadges on the current LTS version which is not possible ATM In the latest x version of SonarQube the optsonarqubelibbundledplugins directory is missing and bundling plugins in for automatic installation in a Docker image doesnt to work anymore This used to work fine up to I havent tried anything inbetween and How to reproduce Use the following Dockerfile FROM sonarqubelts RUN mkdir optsonarqubelibbundledplugins ADD optsonarqubelibbundledplugins Build the image using the following command docker build t sonarqube Run the new image using docker run name sonarqube p sonarqube No plugins other than the default ones will be available Default plugins also used to ship in the bundledplugins directory allowing a persistent volume to be mounted on optsonarqubeextensionsplugins without clearing them however this is not the case anymore a new sonarqube instance with a volume mounted on the plugins directory results in no preinstalled plugins This option disables installation of recommended dependencies of the installed packages Canonical itself recommends using it see However given the package we currently do install curl unzip libfreetype and libfontconfig the benefit are not obvious However its worth trying and confirming x Please check the problem is not already reported or a known issue documented in developmd developmd Hi I am facing an interesting issue where although binaries and therefore docker image contains an initial set of plugins check even at runtime when container starts they are not initialized so that SQ can recognized them Therefore SQ instance is empty without any plugins I admit to use official stable helm chart and postgres db However in chart i do not use any plugins setting I have even tried to do this below but it still does not help plugins deleteDefaultPlugins false Did anybody else face same or similar issue I can reproduce it in of cases both on and Thanks for any tips Im attempting to start SonarQube in an Azure Kubernetes Service environment with a persistent volume claim and the pod keeps failing to start with this error INFO app osaAppFileSystem Cleaning or creating temp directory optsonarqubetemp INFO app osaesEsSettings Elasticsearch listening on INFO app osapProcessLauncherImpl Launch process keyes ipcIndex logFilenamePrefixes from optsonarqubeelasticsearch optsonarqubeelasticsearchbinelasticsearch INFO app osaSchedulerImpl Waiting for Elasticsearch to be up and running INFO app oepPluginsService no modules loaded INFO app oepPluginsService loaded plugin orgelasticsearchtransportNetty Plugin WARN app osapAbstractProcessMonitor Process exited with exit value es INFO app osaSchedulerImpl Process es is stopped INFO app osaSchedulerImpl SonarQube is stopped A thorough internet search shows that many many people have this exact issue but no one has been able to solve it It apparently relates to how elastic search refuses to be run as root user yet this is running a docker container that runs as sonarqube user not root so this cant be my problem This is related to persistent volume use as if I disable persistent volumes from the setup it works just fine This error emerges only when I try to mount a pvc with the deployment The sonarqube image cannot be run on an OpenShift or a secure Kubernetes cluster Both run containers as nonroot or an arbitrary user For OpenShift the start of the container fails on chown in runsh Another problem is the gosu and suexec for alpine It would be great to change this images to support nonroot containers