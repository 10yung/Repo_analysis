The test log files are showing the keywords with the library names Is there option to remove the library name from front of the keyword Can robotfixml be supported for py currently it is using beautifulsoup and that is not supported for py we are using robotfixml in our automation and it broke due to py migration with bs the fixxml tool is giving issues that needs to be checked We use below command for merging tests after rerun rebot outputdir results output mergedxml nostatusrc merge noncritical skipped resultsoriginalxml resultsrerunxml It used to work fine with the Robot Framework version we used previously ie After upgrading Robot Framework to we face below issue In rerun when test fails with a different reason then the final report after merging gives two entries in the Robot report as shown in below screenshot RebotNotMerged But when test fails with same reason in rerun then result is getting merged as shown in below image RebotMergedResult Can anyone please address this issue When running tests from stoppingwithsignal suite on Windows output of robot stops and exit code is not equal to even if all tests pass Related to PR Related to PR The test RobotRunningTimeouts With LoggingTimeouts with programmatic logging fails randomly on any combination of Python and OS Either this is test case flakiness or robot misbehaviour Logs are there Fixes Problem Prefer to use a NOSQL database to store test reports NOSQL databases typically require json format because its a relational database Solution Provide robotframework with the ability to use json rather than xml in the output file For example flag output robot output outputjson tests As discussed in and with pekkaklarck on Slack lets land a super simple minimal noncontroversial GitHub Action to enable further experimentation with Actions such as and This PR is similar to and but running on GitHub Actions instead of Travis CI tysonite hugovk Your reviews please Our project hasnt had CI since the Nokia Network days when we had a Jenkins based system that was running tests on Linux and on Windows using Python Jython and IronPython Luckily all our acceptance tests run in less than minutes at least on my notsonewanymore Linux laptop so its easy to run them before commits Differences between OSes and Python interpreters are also relatively small and we have great utils hiding differences so typically running tests on a single OSPython combination is enough A good CI system would nevertheless have lot of benefits Run tests in allmost supported OSPython combinations to reveal problems on all of them faster Nowadays issues with for example Jython and IronPython are typically noticed closer to releases and fixing them can take some extra time Make it possible to commit safe changes without running all tests locally the CI will soon tell if there are problems With any larger change running tests locally would be a good idea anyway Allow running tests against pull requests This would be very nice There has been quite a lot of discussion about adding CI support There are many different possible solutions but common ideas have been Use Travis or some other freely available CI system This would be pretty setup and integrate with GitHub Unfortunately such free solution typically only support Linux and Python not Windows Jython and IronPython that are important for us Adding Windows to the mix might be possible but requires paying andor using some other service Having a LinuxPython only solution doesnt give much benefits compared to running tests locally before a commit Build a custom CI using Jenkins Azure Pipelines or some other option Our old Jenkins based CI system worked well but maintaining it took some effort and there were also costs related to virtual machines Setting up and paying for such a service has been on the Robot Framework Foundation agenda for a long time but so far there hasnt been much concrete progress Use GitHub actions This is a new but very interesting looking solution It seems to be about as easy to configure as Travis but also supports Windows and even OSX outofthebox And it naturally has builtin GitHub integration We even have PRs and demonstrating how it could be used At the moment this looks the best solution for me and definitely something we should investigate more One problem with all this is that my personal knowledge about CI systems is somewhat limited Another problems is that I dont have that much time available and Id rather use that for Robot Framework development than studying CI systems in detail Luckily several companies in the Robot Framework Foundation have extensive CI experience and they ought to be able to help Ive already briefly discussed with IsNoGood Tattoo and HiFi and hope that some of them or possibly them as a group could take the main responsibility driving this forward Can you guys comment whats your current status and do you think youd have time to look at this in the near future The GitHub Actions work already done by tysonite in the aforementioned PRs also looks really good and I assume hed be willing to continue that work The first step would thus be studying those PRs Lets use this issue for general discussion about CI and save more detailed discussion to the existing or new PRs We can also use the devel channel on our Slack for more interactive chatting