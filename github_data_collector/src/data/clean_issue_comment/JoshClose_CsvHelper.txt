Hi I hava a case in which my CSV contains a set of known fields plus an arbitrary number of other fields Id wish to map the known fields to the properties of a class in the usual way and put the others in a dictionary that is a property of that same class Is it possible with a ClassMap or something else to do this thing Thanks Describe the bug Upgrading from to breaks this code In my IQueryable I have some illegal characters for instance n and which I would like to replace However in the way I did it I cant do it as Im writting the query directly csvWriteRecordsquery How could I do that public static void ConvertLINQToCsvTstring path IQueryableT query using var sw new StreamWriterpath using var csv new CsvWritersw csvConfigurationDelimiter UniversalVariablescsvDelimiterToString csvConfigurationHasHeaderRecord true csvConfigurationUseNewObjectForNullReferenceMembers true csvWriteHeaderT csvNextRecord csvWriteRecordsquery swFlush Optimize TypeConverterCache constructor by delaying the adding of default double converter and float converter from the constructor to the GetConverter method same as EnumConverter Seems like character is missing Hello before I knew about this project I created my own simple csv helper source code here and after knew about this project tried to do some usage comparisons and found some points which my looks simpler faster i dont know if this last is true maybe i didnt configure your csv library appropriately here is one example of usage of my helper hope it can give you some insight here are some points that I found notable about my helper when comparatin my helper configuration is simpler you create a new instance of GenericRecordParserT and pass to constructor a IEnumerablestring where each string is the name of a property of T first property on list will be filled with first column of csv line second property on list with second column and so on if need ignore some column simple pass null the previous point enforces POCO classes if I understood well your helper becomes verbose when we have nested objects to configure in my we simple refers a nested column with a XY string in the list that we pass to constructor where X is a property nested object of T and Y is a property of X that is no need of different configuration for nested objects in the exemple that follows bellow I used a circular reference to test my helper when trying to use it with yours helper it throws an exception when I did a simple benchamark reading a file with tons of records where all lines was the same the one in the example bellow my helper was x faster my helper parses strings not streams we choose this approach because all csv files can be converted into a sequence of csv records strings easily but the opposite is not true A csv string might not come from a csv file in fact the file that i needed to parse was a parcial csv there was lines that are csv others that not so could not parse the whole file need to parse just the lines that I found appropriate in another case each line represents an array of csv records so for each line I need to split them in many flatten them all and finally parse each string exemple of class which csv line represents c internal class Person public Color Eye get set public Color Color get set public bool IsAlive get set public char Gender get set public Document RG public int Age get set public Decimal Money get set public string Name get set public DateTime BirthDay get set public DateTime DeathDay get set public Person Father get set public class Document public Documentint public string Name public double Id get set internal enum Color Black White Yellow LightBlue example of translatin csv line to Person object c public class GenericRecordParserTests Fact public void Parse CultureInfoCurrentCulture CultureInfoInvariantCulture Arrange Color Color ColorYellow bool IsAlive true char Gender M double Id int Age Decimal Money M string Name Bob DateTime BirthDay DateTimeTodayAddYearsAge DateTime DeathDay null string FatherName nameofFatherName string GrandpaName nameofGrandpaName int GrandpaId Color Eye ColorLightBlue var mapped new nameofEye nameofColor nameofIsAlive nameofGender RGId RGName nameofAge nameofMoney nameofName nameofBirthDay nameofDeathDay FatherName FatherFatherName FatherFatherRGId var EyeColor LIGHT BLUE var parser new GenericRecordParserPersonmapped var csvLine EyeColorColorIsAliveGenderId NameAgeMoneyName BirthDayDeathDayFatherNameGrandpaNameGrandpaId Act Person person parserParsecsvLine Assert personEyeShouldBeEye personColorShouldBeColor personIsAliveShouldBeIsAlive personGenderShouldBeGender personRGIdShouldBeId personRGNameShouldBeName personAgeShouldBeAge personMoneyShouldBeMoney personNameShouldBeName personBirthDayShouldBeBirthDay personDeathDayShouldBeDeathDay personFatherNameShouldBeFatherName personFatherFatherNameShouldBeGrandpaName personFatherFatherRGIdShouldBeGrandpaId personFatherFatherFatherShouldBeNull IDataReader maps between the input source and the destination table using the schema details provided by GetSchemaTable Currently in CsvDataReader all columns are defaulted to strings which causes conversion issues when using as a source for SqlBulkCopy To remedy this I have added an additional constructor that accepts a DataTable along with the required CsvReader this DataTable should contain the schema of the destination table and can be generated like so public static DataTable GetDataTableSchemastring schema string tableName DataTable dataTable new DataTable using SqlConnection sqlConnection new SqlConnectionsqlConnectionString using SqlCommand command new SqlCommandselect top from schema tableName commandConnection sqlConnection sqlConnectionOpen using SqlDataReader reader commandExecuteReaderCommandBehaviorSchemaOnly dataTable readerGetSchemaTable sqlConnectionClose return dataTable This will ensure that the correctly typed Get method will be used within the CsvDataReader A complete example can be seen here Suggesting new default for ShouldUseConstructorParameters Unittests are still passing not sure what other ramifications this change has I only use it for a very small and specific dataset public static bool ShouldUseConstructorParametersType type return typeHasParameterlessConstructor typeHasConstructor typeIsUserDefinedStruct typeHasParameterlessConstructor typeIsInterface TypeGetTypeCodetype TypeCodeObject Hi For a task I need to bring the PLC interface into a Android Tablet For the huge amount of data with information Name Data type offset comment etc im using CsvHelper to easily save sort the information in maps Unfortunately I have some problems with my CSVfile with all the information from the PLC in it This is the error I have been searching for this problem but havent found the solution yet Any help would be great Code I also have a second question What CsvHelper should do is locate to a location on the server where the Csvfile is located Is that possible to do that with CsvHelper on a wireless Android Tablet with an mobile made application This application will be made with Xamarin on Visual Studio Thank you for your time to read this UniNan i have nested class structure and want to export csv file with header name cs public class PersonalDetailsMI public CustumerDetails PrimaryCustomer get set public CustumerDetails SecondryCustomer get set public class CustumerDetails public Name Name get set public class Name public string FirstName get set public String LastName get set Expected Csv Format PrimaryCustomerFirstName PrimaryCustomerLastNameSecondaryCustomerFirstNameSecondaryCustomerLastname currently i am able to export like this NameFirstNameNameLastNameNameFirstNameNameLastName can you please help me to resolve this