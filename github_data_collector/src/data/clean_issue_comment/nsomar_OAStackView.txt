The Interface Builder method described in docs simply doesnt work I just followed all the steps in a new project exactly as said in the Usage section Buttons stay where they are PR breaks the ability to have OAStackView be a static framework because it uses Swift and consequently breaks iOS compatibility OAStackViews own Examples project Deployment Target is broken because of this ld embedded dylibsframeworks are only supported on iOS and later rpathOAStackViewframeworkOAStackView for architecture armv It cant be worked around either as Cocoapods doesnt cant support static frameworks with Swift For example if we remove useframeworks from the Podfile we get Pods written in Swift can only be integrated as frameworks add useframeworks to your Podfile or target to opt into using it The Swift Pod being used is OAStackView What problem is OAStackViewProxyswift trying to solve PR solves the backwards compatibility problem with objcallocateClassPair I am getting error in Xcode version like Unknown type name NSASSUMENONNULBEGIN UIAccelerometerh please help me out I am trying to add stackview into my cel xib but get error Unknown class OAStackView in Interface Builder file Failed to set axisValue user defined inspected property on UIView UIView x f e cd f setValueforUndefinedKey this class is not key value codingcompliant for the key axisValue Failed to set spacing user defined inspected property on UIView UIView x f e cd f setValueforUndefinedKey this class is not key value codingcompliant for the key spacing Failed to set alignmentValue user defined inspected property on UIView UIView x f e cd f setValueforUndefinedKey this class is not key value codingcompliant for the key alignmentValue Failed to set distributionValue user defined inspected property on UIView UIView x f e cd f setValueforUndefinedKey this class is not key value codingcompliant for the key distributionValue Btw I already tested successfully on storyboard May cause crash when OAStackView was deallocated but still observing subviews hidden property Hey there oarrabi First of all thanks for OAStackView and all the effort you put into it I was just playing with it and replaced a previously iOS only codebase without many issues but found an odd one The original code which uses UIStackView follows Apples guidelines and removes subviews by calling removeFromSuperview Heres what the docs say about removeArrangedSubview This method removes the provided view from the stack s arrangedSubviews array The view s position and size will no longer be managed by the stack view However this method does not remove the provided view from the stack s subviews array therefore the view is still displayed as part of the view hierarchy OAStackView on the other hand seems to expect subviews to be removed by using removeArrangedSubview isnt that right Directly calling removeFromSuperview breaks the constraints system most of the time unfortunately I can happily submit a PR with fixes for that if you agree with the changes I just wanted to make sure the project is still under development first Thanks Any idea why this crash Crashed comapplemainthread EXCBADACCESS KERNPROTECTIONFAILURE x a e a Crashed comapplemainthread MyAPP x b OAStackViewAlignmentStrategy addConstraintsOnOtherAxis OAStackViewAlignmentStrategym MyAPP x b e c OAStackView setAlignmentConstraints blockinvoke OAStackViewm MyAPP x b d OAStackViewTraversal iterateVisibleViews OAStackViewTraversalm MyAPP x b e c OAStackView setAlignmentConstraints OAStackViewm MyAPP x b f f OAStackView layoutArrangedViews OAStackViewm MyAPP x b e OAStackView initWithArrangedSubviews OAStackViewm MyAPP x dc MyFCVMajorCell tkinitialize TKFCVMajorCellm MyAPP x b MyFCVMajorCell initWithFrame TKFCVMajorCellm UIKit x f UICollectionView dequeueReusableViewOfKindwithIdentifierforIndexPathviewCategory UIKit x abd UICollectionView dequeueReusableCellWithReuseIdentifierforIndexPath MyAPP x a MyFollowingCollectionView collectionViewcellForItemAtIndexPath MyFollowingCollectionViewm UIKit x a UICollectionView createPreparedCellForItemAtIndexPathwithLayoutAttributesapplyAttributesisFocused UIKit x a adc UICollectionView updateVisibleCellsNow UIKit x a UICollectionView layoutSubviews UIKit x e UIViewCALayerDelegate layoutSublayersOfLayer QuartzCore x d CALayer layoutSublayers QuartzCore x cd d CALayerlayoutifneededCATransaction QuartzCore x cd CALayerlayoutanddisplayifneededCATransaction QuartzCore x ccac CAContextcommittransactionCATransaction QuartzCore x cc CATransactioncommit QuartzCore x c de CATransactionobservercallbackCFRunLoopObserver unsigned long void CoreFoundation x e c CFRUNLOOPISCALLINGOUTTOANOBSERVERCALLBACKFUNCTION CoreFoundation x e a cc CFRunLoopDoObservers CoreFoundation x e a fc CFRunLoopRun CoreFoundation x dc c CFRunLoopRunSpecific GraphicsServices x ac GSEventRunModal UIKit x ae UIApplicationMain MyAPP x d fc main mainm libdispatchdylib x b Missing cd OAStackViewExample run pod install Expected Cocoapods successfully installed Actual Error see below Invalid Podfile file Unsupported options exclusivetrue for target OAStackViewExample from OAStackViewExamplePodfile target OAStackViewExample exclusive true do pod OAStackView path pod version OS X Constraints added to Stack View are not working properly So first of all let me say thank you This little fallback solution for UIStackView is awesome Ive been trying to use it but I do have a problem I create my OAStackView in Interface Builder where I prepopulate it with some subviews But then in code I want to add some more views and I thought that the method insertArrangedSubviewatIndex is what I need The problem is that when I do that it crashes Heres a screen shot of the line that causes the crash img width altscreen shot at src As you can see it seems that selfmutableArrangedSubviews is empty and Ive looked all over your code to see where it gets populated if it ever does and I cant really find the place that does that So do you think this is a bug or is there a way you can help me Thanks 