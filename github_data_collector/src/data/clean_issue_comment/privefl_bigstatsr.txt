I have an existing matrix saved as rds file and I wanted to process it via bigstatsr package But I guess I couldnt grasp the concept of FBM and I desperately need help Although I like and understand diskframe Im having great difficulty using bigstatsr My aim is to move a large matrix to an old computer with small RAM and Ill be doing random row selection as batches for some downstream analysis since Ill be doing row selection Ill be transposing the FBM in the sample code below The matrix has rows and columns The matrix is available as bigmrds My first step was to convert the matrix into FBM R bigM readRDSbigMrds bigMfbm asFBMbigM backingfilebigM bigMfbmsave some functions does not save rds automatically Then I noticed that the bk file is GB and I was not able carry with usb drive due to FAT file size limit Then I found out that bigwrite generates smaller file size R bigwritebigMfbm bigMwrite everynrow progress interactive bigMwrite is around GB carry that file to other computer in other computer run the following bigmat bigreadbigMwrite transposed bigtransposebigmat backingfilebigMt transposedsave Now I can process the file in new session as follows R bigMt bigattachbigMtrds test bigMt lets get first cols as example rownamestest lets get the rownames NULL oh no To my surprise colnames and rownames are lost although original matrix had them I know bigread and bigwrite are for dealing with text files but due to small file size they generate I used them Also I saw options for saving the matrix as chunks but I saw single bk files at my each trial So how can I convert an existing matrix to FBM preferably with multiple chunks if possible while retaining row and column names See Would be nice to implement plotgrid I have this for now Would be good to have an automatic way to choose the sizes of the title and the legend Part of See See See eg if it can be used instead of plus to save memory and time Would it be possible to add a sample weights option for the penalised regression functions like in glmnet Possibly with NULL option to output a standard R matrix Do it in scaling functions This is a problem when using eg bigrandomSVD because it would either stop with error TridiagEigen eigen decomposition failed or run for an infinite time Reprex librarybigstatsr X FBM init rnorm svd bigrandomSVDX bigscale X svd bigrandomSVDX bigscale 