is it possible to make the dev panel more readable in dark mode Turn off the dark mode for the Wormholy dev panel it is also a good solution for now it looks like this Currently Im experiencing a spike of memory leaks on my graph every time I use the pod Thoughts about it Group If I call the WormholyenablesessionConfiguration to disable logging of network traffic on either the URLSessionConfigurationdefault or URLSessionConfigurationephemeral the next time either of those configurations are referenced Wormholy will reenable logging for those configurations as the swizzled accessors in NSURLSessionConfigurationWormholy automatically enable logging As of now Im not really sure how to completely disable logging without completely removing the framework Wormholy overriding certificate pinning options while using with Alamofire Im using the example code block to pin certificates While Wormholy enabled it is not working correctly var serverTrustPolicies String ServerTrustPolicy let trustPolicy ServerTrustPolicypinCertificates certificates ServerTrustPolicycertificates validateCertificateChain true validateHost true serverTrustPolicies xxxxxcom trustPolicy let configuration URLSessionConfigurationdefault let serverTrustPolicyManager ServerTrustPolicyManagerpolicies serverTrustPolicies let sessionManager SessionManager configuration configuration serverTrustPolicyManager serverTrustPolicyManager return sessionManager while using CocoaPods version the below code in PodFile to support swift version will not work and get error when pod install postinstall do installer installerpodsprojecttargetseach do target targetbuildconfigurationseach do config configbuildsettings SWIFTVERSION end end end The CocoaPods blog says that CocoaPods deprecated the swiftversion file the swiftversion should be moved to podspec file Deprecating swiftversion File Up until now most pod authors have been relying on specifying a swiftversion file at the root of their repo in order to successfully publish their pod with the Swift version they officially support However this information is never transcribed within the published podspec and therefore during integration none of it is taken into consideration when choosing which Swift version to use This can cause numerous issues especially when a new version of Swift is released This is because a consumer will automatically pick the latest version of Swift to use without the pod author officially claiming that it is supported We strongly recommend pod authors to migrate over to use the officially supported swiftversion DSL within their podspec instead We also recommend deleting the swiftversion file in your repo unless you use it for other tools such as swiftenv The swiftversion DSL will always take precedence over the swiftversion file Finally a warning will be displayed during lint that encourages pod authors to migrate away from using the swiftversion file and in a future major release of CocoaPods we plan to completely remove support for it maybe adding this line in podspec will helps sswiftversion thats my code NSMutableURLRequest request requestSerializer requestWithMethod obj methodString URLString NSString stringWithFormat obj apiUrl parametersparams errornil NSURLSessionDataTask dataTask selfmanager dataTaskWithRequestrequest uploadProgress NSProgress Nonnull uploadProgress downloadProgress NSProgress Nonnull downloadProgress completionHandler NSURLResponse Nonnull response id Nullable responseObject breakpoint not run here in wormholy override initrequest URLRequest cachedResponse CachedURLResponse client URLProtocolClient superinitrequest request cachedResponse cachedResponse client client if session nil session URLSessionconfiguration default delegate self delegateQueue nil When using Wormholy a UIWebView that receives a Redirect response issues requests for the redirect URL You can see it happening by monitoring the web requests in Charles This does not happen with WKWebView but there is a bug with that implementation which means I have to use UIWebView for now Ive attached a sample project which demonstrates the failing behaviour and also screenshots illustrating the duplicate request Without Wormholy installed img width altscreen shot at src With Wormholy installed img width altscreen shot at src WormholyWebViewDuplicateRequestExamplezip Found an issue with library After making an api call which is a POST request with multipart content Every next API call results into timeout Please suggest a resolution for this 