Added in I am looking to build just a little more experience with this attribute in real code before settling on how best to approach it in docs For example error data currently works but error data does not We should make the var variables work wherever possible Id like to use a single Error type for various modules inside my crate and occasionally the need arises to propagate errors from other projects using for ergonomics It seems intuitive to just include a rust errorInternal Error InternalError from e anyhowError in my Error enum but the problem is that some errors require an additional conversion into anyhowError for example rust fn loadrecordsdb DB ResultVecRecord MyError dbgetconnectionloadrecords In the above example Id like the possible errors from dieselr d what not to map to my InternalError variant The problem is there is no automatic conversion from those into MyError since it requires an additional conversion to anyhowError What is the idiomaticrecommended way to deal with these cases Thanks in advance I recently cooked up which fixed a double error message getting printed for errors such as rust pub enum CompileError errorWebAssembly translation error Wasm from WasmError Itd be great if this crate could somehow issue a diagnostic indicating that theres no need to include the in the error because its already rendered in the final error via from I think itd be immensely useful if iterchain can be added on the type that derives Error and delegated to stderrorErrors iterchain on nightlies with erroriter feature Sure one can always convert it into the stderror trait object and do it from there but I think this will be ergonomic to have it right on the type 