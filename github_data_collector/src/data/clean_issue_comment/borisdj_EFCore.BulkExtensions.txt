Not doing anything fancy I insert a list of rows var bulkConfig new BulkConfig PreserveInsertOrder true SetOutputIdentity true await contextBulkInsertAsyncnewRows bulkConfig At this point the Ids of newRows are filled but in reverse order from how they are filled in the database If theres more than rows it works fine tested with if theres less than rows the Ids are reversed tested with about different sizes For clarity if I insert rows Id Content A Id Content B Id Content C They are updated to Id Content A Id Content B Id Content C But the rows in the database end up being Id Content A Id Content B Id Content C Hi My idea is to use BulkUpdate to update only the modified fields If i am passing only modified fields then its updating null for remaining fields in the rows Also PropertiesToExclude is excluding the column from all the rows Is there a way to update only the modified fields Note each row data will have different modified fieldscolumns Can someone please guide on this issue Regards Yaju Solution is inspired by Im finding that when an entity has a nullable property eg bool the property has a converter eg BoolToStringConverter the entitys value for that property is null Sqlite is being used Then an exception is thrown when BulkInsert saves that entity Message SystemInvalidCastException Object cannot be cast from DBNull to other types Stack Trace IConvertibleToBooleanIFormatProvider provider ConvertChangeTypeObject value Type conversionType IFormatProvider provider ConvertChangeTypeObject value Type conversionType ValueConverter Sanitize T Object value cDisplayClass SanitizeConverterb Object v SqlBulkOperationLoadSqliteValues T TableInfo tableInfo TypeAccessor typeAccessor T entity SqliteCommand command SqlBulkOperationInsertAsync T DbContext context IList entities TableInfo tableInfo Action progress CancellationToken cancellationToken I believe a null should never be passed to a value converter see so I guess that call just needs null protection Thanks for your good BatchUpdateAsync and BatchDeleteAsync functions it helped a lot What about adding new extension method IQueryableT BatchInsertToDbSetT ExpressionT T to support queries like INSERT INTO MyDb AAA BBB SELECT a CCC AS AAA b DDD AS BBB FROM ASet AS a BSet AS b or so on I have been trying to get my data process to work when deploying to a Linux container in Cloud Foundry I am using the dotnetcorebuildpack buildpack and cflinuxfs stack Its running DotNetCore and targeting linuxx self contained I have tried many things to get this to work but the process would always hang when calling BulkInsertOrUpdateAsync Sorry I dont know how to provide any specific details Im not getting an exception or anything All I have to go on is logging and that stops giving any messages when it hangs Please let me know if there is a way to debug this further I was able to get it to work by changing over to the binarybuildpack buildpack and targeting win x self contained Again sorry I dont know how to provide more details but I at least wanted to report the issue This allows to insertupdate from derived entity colums even an enumerable from the abstract base type is passed into the function Hello I came accross an issue when inserting a list of entities with an abstract base type TPH pattern and the enumerable passed into the function is of the base type The problem here is that none of the derived properties are filled only the ones from the base type Ive created a repo to reproduce the error Is this an inteded behaviour Fix ArgumentOutOfRangeException when involving a field of type timestamp Hi First of all thank you for the hard work you did with this library In our project we need to insert a large amount of data into database periodically Daily Weekly Monthly Yearly and this tool perfectly fit the needs D Heres the context we have objects that have children and each of them also have children So I used the same kind of code that I found here on the following link to bulkinsert entities and then subEntities and again subSubEntities I defined a BulkConfig to set both PreserveInsertOrder and SetOutputIdentity to true but Im meeting an ArgumentOutOfRangeException Specified argument was out of the range of valid values Parameter name I dont understand what does name refers but heres the stacktrace in case you can help me and others who may encounter the same problem at FastMemberdynamicRoundInstanciated getItemObject String at EFCoreBulkExtensionsTableInfoUpdateEntitiesIdentity T IList entities IList entitiesWithOutputIdentity at EFCoreBulkExtensionsTableInfoLoadOutputDataAsyncd MoveNext at SystemRuntimeExceptionServicesExceptionDispatchInfoThrow at SystemRuntimeCompilerServicesTaskAwaiterThrowForNonSuccessTask task at SystemRuntimeCompilerServicesTaskAwaiterHandleNonSuccessAndDebuggerNotificationTask task at EFCoreBulkExtensionsSqlBulkOperationMergeAsyncd MoveNext at SystemRuntimeExceptionServicesExceptionDispatchInfoThrow at EFCoreBulkExtensionsSqlBulkOperationMergeAsyncd MoveNext at SystemRuntimeExceptionServicesExceptionDispatchInfoThrow at SystemRuntimeCompilerServicesTaskAwaiterThrowForNonSuccessTask task at SystemRuntimeCompilerServicesTaskAwaiterHandleNonSuccessAndDebuggerNotificationTask task at SystemRuntimeCompilerServicesTaskAwaiterGetResult at LBTriggerAPIControllersInstanciationControllerBulkInsertd MoveNext in C Users skype source repos LBTriggerAPI LBTriggerAPI Controllers InstanciationControllercsline Thanks in advance guys Technical environment EFCoreBulkExtensions but this issue also occured with version Entity Framework Core 