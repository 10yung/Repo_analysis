This PR prevents multiple calls to editor storePosition and editor restorePositionAfterOperations during block editing as these methods require the LayoutManager to perform layout which causes a crash if used between textStorage beginEditing textStorage endEditing Instead the restoration takes place after textStorage endEditing has been called I use iTerm and I hope open a iTerm window SEE iMac Retina K inch GB RAM Radeon Pro GB MacOS Had windows open with files in each window the same files Selected a chunk for block edit Placed cursor inside blocked area hit Delete It did not delete the character and from that moment forward I could place the cursor anywhere in my file but could not type anything in any window I chose to Save the files which thankfully did work After clicking around for a while selecting various windows and tabs it got to the point where I could not select anything with the mouse I finally Quit the app and of the windows closed but stayed open Finally had to force quit the app to regain control I lost my highlighted changed text doing the app restart which really really hurt I wish we could choose when to forget the highlighting on the changed text Heres my approach to tackle If a mode contains a resource called WebPreviewjs the script will be used to transform the text to HTML by calling webPreviewtext string An example is implemented in the Markdownseemode using showdownjs Things to be done before making this available as public API x error handling reporting right now it just fails silently x settle on naming x document this feature x move the webPreview work on a background queue eg fileUsersdomLibraryContainersdecodingmonkeysSubEthaEditMacFULLDataDesktopfoobartxt which should just be fileUsersdomDesktopfoobartxt to the user Steps join a network document eg by left clicking it in the Document Hub close the now open document window Results The hosting SubEthaEdit does not see this document as left Expected Results The host should be acutely aware of the window having been closed Notes Actually cant make this happen reliably But if it happens there is certainly bad state around that is unhelpful as the document even cant be rejoined Short Description A collaborator and I have been using SEE to meet remotely weekly since Since I upgraded to Catalina we have weird behavior I have trouble joining sessions he is hosting Steps to Reproduce the Issue I click the SEE url and my window only partially opens it hangs on joining session I can join the session if I open a bug report tab then suddenly the session is visiable as a tab and we can meet I can export our session as a webpage but I cant save it save and save as etc are all grey SubEthaEdit Version System Version Build A Language English Hardware Hardware Overview Model Name MacBook Air Model Identifier MacBookAir Processor Name DualCore Intel Core i Processor Speed GHz Number of Processors Total Number of Cores L Cache per Core KB L Cache MB HyperThreading Technology Enabled Memory GB Boot ROM Version iBridge Serial Number system FVFZF VALYWP Hardware UUID BB F EBA A A FD D D Now that theres finally an API for NSFontmonospacedSystemFontofSizeweight it would be nice if we could choose that font SF Mono in SubEthaEdits Styles preferences Currently the system San Francisco fonts do not show up in the standard Fonts panel unless the user installs a local copy of them But it is possible to get at them programmatically by using the various NSFont systemFont API calls I havent seen much UI convention for choosing a system font yet Some apps eg Bear just include System as an entry in their font selection preference popup menu Terminal and Xcode have cheated and just bundled their own copies of SF Mono so that it shows up in the Fonts panel This PR implements monkeydom s concept from However it does not introduce any additional knobs switches to turn the feature on or off It would be nice to have AppleScript as an available language for syntax highlighting 