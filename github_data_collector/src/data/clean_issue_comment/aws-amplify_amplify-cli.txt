Describe the bug Lambda triggers generated code with boilerplates has a long startup time seconds Amplify CLI Version To Reproduce Generating any cognito triggers boilerplates as per It generate an indexjs like this exportshandler event context callback const modules processenvMODULESsplit for let i i moduleslength i const handler requiremodules i handlerevent context callback Expected behavior Lambda to finish execution without a timeout Screenshots Second call to the function is faster and doesnt timeout Desktop please complete the following information OS Mac Node Version AWS Nodejs x Region useast Additional context If you overwrite the content of indexjs with the code of the generated boilerplate for example boilerplatecreatechallengejs for createAuthChallenge trigger then execution time is back to normal ms ms Even for a cold start first execution Describe the bug DataStore code generation fails when following documentation for multiple frontends The Amplify CLI seems to expect that the amplify directory exists however it does not exist in cases after an amplify pull in which the developer opts to not manage the backend from the project Amplify CLI Version To Reproduce Create frontend eg React Initialize new Amplify project and add API Generate model code Create frontend eg iOS app that will use same backend Use amplify pull to retrieve the backend project Select the desired project When prompted with the question Do you plan on modifying your backend Yn select No per documentation Two files will be created in project amplifyconfigurationjson and awsconfigurationjson NOTE the amplify directory will be briefly created and then destroyed when selecting No Attempt to generate model classes for DataStore using amplify codegen models Error You are not working inside a valid amplify project Use amplify init in the root of your app directory to initialize your project with Amplify Error You are not working inside a valid amplify project Expected behavior Code generation should complete successfully creating model classes etc Which Category is your question related to Auth API Function What AWS Services are you utilizing Cognito What am I supposed to do use amplify publish after every git push and get a cloudfront domain Is it possible to use the amplify CICD pipeline with hosting Or do I amplify push my backend and create a front end connection within the amplify GUI to take advantage of CICD on git push If I hook up my Backend composed of Auth API with cognito authentication and an add user to group Function I get update failed authProjectXXXXX Parameters hostedUIProviderCreds must have values when the Amplify console build starts but on initial amplify push Successfully completes with zero failures Issue if available NA Description of changes tsconfigjson file for amplifycli contained a property compilerOptionsmapRoot lib that would cause tsc version latest command to produce version fileindexjssourceRootsources indexts names mappings Sources should read srcindexts I m not exactly sure howwhy its set up this way but all other tsconfig files in this project do not specify a mapRoot so this change brings this in line with all the other packages and now I can debug the cli package again By submitting this pull request I confirm that my contribution is made under the terms of the Apache license Which Category is your question related to Storage Amplify CLI Version What AWS Services are you utilizing DynamoDB Lambda S Cloudfront Provide additional details eg code snippets Im wondering if its possible to add storage without requiring the use of cognito Which Category is your question related to deployment What AWS Services are you utilizing S Provide additional details eg code snippets I accidentally removed S deployment bucket which amplify uses to deploy resources Same as here What I did Open amplify backend amplifymetajson and look for the value of DeploymentBucketName Create a bucket in S with the value of DeploymentBucketName aws s api createbucket bucket mycoolappxxxxxdeployment region eucentral createbucketconfiguration LocationConstrainteucentral My API Key was outdated then I created a new in AWS Appsync and added it to the awsexport file Also added it to amplifymetajson amplifymetajson GraphQLAPIKeyOutput NEW API KEY parametersjson I set APIKeyExpirationEpoch amplify update api GraphQL no im done amplify push Error Fetching updates to backend environment prod from the cloudnode UnhandledPromiseRejectionWarning NoSuchKey The specified key does not exist Issue if available NA Description of changes As a developer I would like an accurate link to the page that describes how to write a custom transformer By submitting this pull request I confirm that my contribution is made under the terms of the Apache license Describe the bug amplify mock returns the full data object passed as rd argument for utilerrorString String Object However according to the documentation it should only return the selected fields data will be filtered based on the query selection set This is also how it works within AppSync Amplify CLI Version To Reproduce Handle an error in the response mapping template using utilerrorString String Object And test this with amplify mock Expected behavior The data property of the error should only return the selected fields Desktop please complete the following information OS Windows Node Version v GraphQL expects a String scalar however modelgen with the Amplify CLI creates a string type in modelsschemajs with React Which means the field doesnt show up in IndexedDB locally when using the Amplify DataStore Manually editing the modelsschemajs and changing to String solves the problem Sample schema I was testing with type Note model authrules allow owner id ID note String Issue if available This PR fixes the Amplify Console issue Description of changes Add check on if a project is fully setup for the amplify service migration logic By submitting this pull request I confirm that my contribution is made under the terms of the Apache license