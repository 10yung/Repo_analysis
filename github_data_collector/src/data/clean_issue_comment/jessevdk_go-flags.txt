For example I have some data sensitive option like password in my config struct I would like to set special flag in tags for example resetenv go Secret string longsecret envSECRET descriptionSecret for signing JWT requiredtrue resetenvtrue And it will reset env variable after parsing so printenv in shell will now show this in output For now I can workaround this using such function go resetEnv clears sensitive env vars func resetEnvenvs string for env range envs if err osUnsetenvenv err nil logPrintf WARN cant unset env s s env err But it not convenient when using envnamespace feature and this clear func could easily stop clearing sensitive vars Based on various posts here on using the callback option to load settings from INI file it isnt immediately clear that where you declare the option in the struct is relevant If you declare the callback option first then it gets called before the other items are parsedand or defaults set which basically leads to problems So always place callback option declarations last in your struct definition For ex this test below fails to make it pass move the Config declaration to the end func TestIniRequiredSliceShouldNotNeedToBeSpecifiedOnClit testingT type options struct Config funcstring shortc defaultxyz noinitrue Items string longitem requiredtrue Other string shorto var opts options ini Application Options itemabc args stringo other parser NewParser opts Default optsConfig funcstring inip NewIniParserparser inipParseAsDefaults true tLogfBefore ini v opts inipParsestringsNewReaderini tLogfAfter ini v opts err parserParseArgsargs if err nil tErrorfUnexpected failure v err if optsItems abc tErrorfExpected first option to be abc but was v optsItems If a ininame tag is set on the option write it to file even if the option is a function Maintains state to keep track of when switching over from parsing INI to CLI and clears slicemap options based on that define a slice option as required read ini file containing said option with a value Do not specify the option on the cli Fails with required option x not specified Secondary if option is specified on CLI it replaces the option in the ini file instead of appending parseAsDefault does not seem to matter Updated dec edited to reflect that replacing option is the correct behavior I dropped this entire framework because default value cannot be declared for bool Ie you want to have an argument dryRun this definitely should be true by default This cannot be setup with this framework Currently environment variables beat command line arguments It would be nice to be able to reverse this behavior with an option env the default value of the option is overridden from the specified environment variable if one has been defined optional Fixes This project is has not been updated sense Commits on Dec and from godocsorg Package flags imports packages graph and is imported by packages Updated days ago Refresh now Tools for package owners I am a happy user of this packagelibrary and I am not alone but their seams to be other priorities for the maintainer Is this something the community can help with jessevdk let us know if we can do anything Im in a situation where I have a toplevel command that I want to mark as hidden however I want to display all of the commands options when explicitly calling help on the subcommand eg cmd h doesnt show this subcommand but cmd hiddencommand h should show all of hiddencommands options mcmd h Usage mcmd OPTIONS subcmd Application Options v verbose Show verbose debug information May be specified multiple times Help Options h help Show this help message Available commands subcmd Visible subcommand mcmd hcmd h Usage mcmd OPTIONS hcmd hcmdOPTIONS Hidden command Application Options v verbose Show verbose debug information May be specified multiple times Help Options h help Show this help message This is incorrect IMO because there should be some options under hcmd If I unhide hcmd and rerun I see the desired output mcmd hcmd h Usage mcmd OPTIONS hcmd hcmdOPTIONS Hidden command Application Options v verbose Show verbose debug information May be specified multiple times Help Options h help Show this help message hcmd command options o filename Output default STDOUT Is this intended It looks like in WriteHelp needs to be changed to differentiate the handling of Hidden for Group and Option or a Command that is Hiddentrue versus a a Commands Groups Options which should be visible even if the Command is not