Currently we are using the width and height attributes of the HTMLImageElement to set the size of the created HTMLCanvasElement However these two attributes are depending on the styles of the HTMLImageElement This will make the result inconsistent and untestable For example if we take these twoimgs we may get different results Because the pixel data is different html img srcfoopng width height img srcfoopng width height Use the naturalWidth and naturalHeight will set the size of the canvas the same as the intrinsic size of the image file This will assure the pixelcount is always the same for the same image file Can you update colorthief to canvas Im not sure that this is the issue but its most likely because when Im trying to install canvas standalone I get the same error but I dont with Im installing all dependencies for canvas RUN aptget install y buildessential libcairo dev libpango dev libjpegdev libgifdev librsvg dev Here is my error canvas install usrsrcappnodemodulescanvas nodepregyp install fallbacktobuild nodepregyp WARN Using request for nodepregyp https download nodepregyp WARN Tried to download nodepregyp WARN Prebuilt binaries not found for canvas and node nodev ABI glibc falling back to source compile with nodegyp make Entering directory usrsrcappnodemodulescanvasbuild SOLINKMODULEtarget Releaseobjtargetcanvaspostbuildnode COPY Releasecanvaspostbuildnode CXXtarget ReleaseobjtargetcanvassrcbackendBackendo CXXtarget ReleaseobjtargetcanvassrcbackendImageBackendo CXXtarget ReleaseobjtargetcanvassrcbackendPdfBackendo CXXtarget ReleaseobjtargetcanvassrcbackendSvgBackendo CXXtarget ReleaseobjtargetcanvassrcbmpBMPParsero CXXtarget ReleaseobjtargetcanvassrcBackendso CXXtarget ReleaseobjtargetcanvassrcCanvaso CXXtarget ReleaseobjtargetcanvassrcCanvasGradiento CXXtarget ReleaseobjtargetcanvassrcCanvasPatterno CXXtarget ReleaseobjtargetcanvassrcCanvasRenderingContext do srcCanvasRenderingContext dcc In static member function static NanNANMETHODRETURNTYPE Context dDrawImageNanNANMETHODARGSTYPE srcCanvasRenderingContext dcc error call of overloaded absdouble is ambiguous double currentscalex abstransforms In file included from usrincludec cstdlib from usrincludec extstringconversionsh from usrincludec bitsbasicstringh from usrincludec string from usrincludec stdexcept from usrincludec array from usrincludec tuple from usrincludec functional from usrincludec memory from rootcachenodegyp includenodev h from rootcachenodegyp includenodenodeh from nannanh from srcbackendBackendh from srcCanvash from srcCanvasRenderingContext dh from srcCanvasRenderingContext dcc usrincludestdlibh note candidate int absint extern int abs int x THROW attribute const wur In file included from usrincludec extstringconversionsh from usrincludec bitsbasicstringh from usrincludec string from usrincludec stdexcept from usrincludec array from usrincludec tuple from usrincludec functional from usrincludec memory from rootcachenodegyp includenodev h from rootcachenodegyp includenodenodeh from nannanh from srcbackendBackendh from srcCanvash from srcCanvasRenderingContext dh from srcCanvasRenderingContext dcc usrincludec cstdlib note candidate int stdabsint absGLIBCXXTYPEINTN x return x x x usrincludec cstdlib note candidate long long int stdabslong long int abslong long x return builtinllabs x usrincludec cstdlib note candidate long int stdabslong int abslong i return builtinlabsi srcCanvasRenderingContext dcc error call of overloaded absdouble is ambiguous double currentscaley abstransforms In file included from usrincludec cstdlib from usrincludec extstringconversionsh from usrincludec bitsbasicstringh from usrincludec string from usrincludec stdexcept from usrincludec array from usrincludec tuple from usrincludec functional from usrincludec memory from rootcachenodegyp includenodev h from rootcachenodegyp includenodenodeh from nannanh from srcbackendBackendh from srcCanvash from srcCanvasRenderingContext dh from srcCanvasRenderingContext dcc usrincludestdlibh note candidate int absint extern int abs int x THROW attribute const wur In file included from usrincludec extstringconversionsh from usrincludec bitsbasicstringh from usrincludec string from usrincludec stdexcept from usrincludec array from usrincludec tuple from usrincludec functional from usrincludec memory from rootcachenodegyp includenodev h from rootcachenodegyp includenodenodeh from nannanh from srcbackendBackendh from srcCanvash from srcCanvasRenderingContext dh from srcCanvasRenderingContext dcc usrincludec cstdlib note candidate int stdabsint absGLIBCXXTYPEINTN x return x x x usrincludec cstdlib note candidate long long int stdabslong long int abslong long x return builtinllabs x usrincludec cstdlib note candidate long int stdabslong int abslong i return builtinlabsi canvastargetmk recipe for target ReleaseobjtargetcanvassrcCanvasRenderingContext do failed make Leaving directory usrsrcappnodemodulescanvasbuild make ReleaseobjtargetcanvassrcCanvasRenderingContext do Error gyp ERR build error gyp ERR stack Error make failed with exit code gyp ERR stack at ChildProcessonExit usrlocallibnodemodulesnpmnodemodulesnodegyplibbuildjs gyp ERR stack at ChildProcessemit eventsjs gyp ERR stack at ProcessChildProcesshandleonexit internalchildprocessjs gyp ERR System Linux linuxkit gyp ERR command usrlocalbinnode usrlocallibnodemodulesnpmnodemodulesnodegypbinnodegypjs build fallbacktobuild moduleusrsrcappnodemodulescanvasbuildReleasecanvasnode modulenamecanvas modulepathusrsrcappnodemodulescanvasbuildRelease napiversion nodeabinapinapi napibuildversion nodenapilabelnodev gyp ERR cwd usrsrcappnodemodulescanvas gyp ERR node v v gyp ERR nodegyp v v gyp ERR not ok nodepregyp ERR build error nodepregyp ERR stack Error Failed to execute usrlocalbinnode usrlocallibnodemodulesnpmnodemodulesnodegypbinnodegypjs build fallbacktobuild moduleusrsrcappnodemodulescanvasbuildReleasecanvasnode modulenamecanvas modulepathusrsrcappnodemodulescanvasbuildRelease napiversion nodeabinapinapi napibuildversion nodenapilabelnodev nodepregyp ERR stack at ChildProcessanonymous usrsrcappnodemodulesnodepregyplibutilcompilejs nodepregyp ERR stack at ChildProcessemit eventsjs nodepregyp ERR stack at maybeClose internalchildprocessjs nodepregyp ERR stack at ProcessChildProcesshandleonexit internalchildprocessjs nodepregyp ERR System Linux linuxkit nodepregyp ERR command usrlocalbinnode usrsrcappnodemodulesbinnodepregyp install fallbacktobuild nodepregyp ERR cwd usrsrcappnodemodulescanvas nodepregyp ERR node v v nodepregyp ERR nodepregyp v v nodepregyp ERR not ok Failed to execute usrlocalbinnode usrlocallibnodemodulesnpmnodemodulesnodegypbinnodegypjs build fallbacktobuild moduleusrsrcappnodemodulescanvasbuildReleasecanvasnode modulenamecanvas modulepathusrsrcappnodemodulescanvasbuildRelease napiversion nodeabinapinapi napibuildversion nodenapilabelnodev npm WARN optional SKIPPING OPTIONAL DEPENDENCY fsevents nodemodulesfsevents npm WARN notsup SKIPPING OPTIONAL DEPENDENCY Unsupported platform for fsevents wanted osdarwinarchany current oslinuxarchx npm ERR code ELIFECYCLE npm ERR errno npm ERR canvas install nodepregyp install fallbacktobuild npm ERR Exit status npm ERR npm ERR Failed at the canvas install script npm ERR This is probably not a problem with npm There is likely additional logging output above npm ERR A complete log of this run can be found in npm ERR rootnpmlogs T Zdebuglog I believe you meant to check NumberisIntegerquality not the inverse Also I feel hardcoding the upper limit of shouldnt be a thing and that it should be a default option IE report TypeMismatchError Exception here js var CanvasImage function image in node we use strings as path to an image whereas in the browser we use an image element if iAmOnNode thiscanvas CanvascreateCanvas var img new Image ifimage instanceof Buffer imgsrc image else imgsrc fsreadFileSyncimage else thiscanvas documentcreateElementcanvas documentbodyappendChildthiscanvas var img image thiscontext thiscanvasgetContext d var width imgwidthbaseVal imgwidthbaseValvalue imgwidth var height imgheightbaseVal imgheightbaseValvalue imgheight thiswidth thiscanvaswidth width thisheight thiscanvasheight height thiscontextdrawImageimg thiswidth thisheight the first picture was from the website the second picture i download the dist from github i compared two pictures the result is different why Im working with logos and I need to know the color of the backgrounds logo So I was thinking to get the color of the topbotom left pixel How can do that Thanks Would be great to be able to specify a square on the picture x x x and compute the colour from that Use case Im using a gradient that overlaps the bottom of the image and Id like to get the colours from the lower third of the picture instead of the whole thing Thanks Using colorthief for greenscreen or bluescreen detection sometimes the clothes or skin color of the person are more dominant than the background How about to give an input color eg FF for green to the function that it can look for the closest dominant color to the input value First thanks for this great Library Working with this cool Library congrats and thanks in nodejs in particular making responsimage I found that the image input value could be not only a path string to the image but also a Buffer since the url argument It can be a relative path an http url a data url or an inmemory Buffer And this is cool and sound coherent when working in node But in this scenario I found that the second argument type is needed type is an optional mime type for the image required when using a Buffer So made this PR to fix that part adding the relative test Keep in mind that I didnt include the dist with bundled files I added this folder to let use my repo as the packages source in the meanwhile otherwise some projects are broken Let me know in any case and thanks again for this great Library 