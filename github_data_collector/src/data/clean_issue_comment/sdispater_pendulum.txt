 I tried this streamlink l debug cli debug OS Linux ovhxxxxstdipv x withcentos Core cli debug Python cli debug Streamlink g c c cli debug Requests Socks Websocket cli info Found matching plugin youtube for URL pluginyoutube debug Video ID from URL pluginyoutube debug Using video ID sd DTMWzFQ pluginyoutube debug getvideoinfo Found data error No playable streams found on this URL streamlink version streamlink g c c Please check and fix it Thank you Parsing token x according to documentation it should parse to microseconds timestamp but it parses to milliseconds timestamp Not sure what was intended here but there is a discrepancy code TOKENS x lambda dt dformatdtinttimestamp dtmicrosecond Something really strange is going on python a pendulumnow aclassbases type datetimedatetime class pendulumdateDate isinstancea datetimedatetime False Surely isinstance should return True here python datetimedatetimenow datetimedatetimenow datetimetimedelta pendulumnow pendulumnow TypeError TypeErrorunsupported operand types for DateTime and DateTime To be a dropin replacement subtracting should probably call diff As python has gotten better and better support for type annotations we should add support for type annotations inside pendulum Thankfully theres already a PR open for this Happy to help out in any way possible to get this through the finish line This seems to have been caused by bpo Before that change adding a timedelta to a datedatetime subclass would always return an instance of datedatetime instead of the subclass After the change the subclass is preserved The RecursionError was caused by adding a timedelta to a DateTime Doing this uses the convert method of the DateTimes timezone to convert the new DateTime into the correct timezone In the case of FixedTimezones this requires adding the UTC offset of the timezone a timedelta to the DateTime causing the recursion Before bpo the subclass of the DateTime was dropped while calling astimezone This meant that the object that was passed into fromutc by astimezone was a stdlib datetime not a Pendulum DateTime Calling the stdlib datetimes add function would then do the addition and return the result which would then be upconverted back into a Pendulum DateTime instance Now due to the subclass being preserved the Pendulum DateTimes add function is being called instead causing the recursion This commit fixes the RecursionError by always using the stdlib datetimes addition function to add the offset to the DateTime when calling fromutc bpo commit Fixes Im developing an application where each request coming to the server may need to have different default timezone I wanted to initialize pendulum with right timezone and set in request local variable Im not able to that as pendulum uses global to save the local timezone Can someone suggest me an approach to achieve this The new zipapp module permits one to create a bundled python program inside of a zip file I went ahead and made such a program but I have an issue when I try to execute it it seems like pendulum is not able to locate the locale files import pendulum File frozen importlibbootstrap line in findandload File frozen importlibbootstrap line in findandloadunlocked File frozen importlibbootstrap line in loadunlocked File frozen importlibbootstrap line in loadbackwardcompatible File distbobctlpyzpenduluminitpy line in module File frozen importlibbootstrap line in findandload File frozen importlibbootstrap line in findandloadunlocked File frozen importlibbootstrap line in loadunlocked File frozen importlibbootstrap line in loadbackwardcompatible File distbobctlpyzpendulumdatetimepy line in module def cmpx y File frozen importlibbootstrap line in findandload File frozen importlibbootstrap line in findandloadunlocked File frozen importlibbootstrap line in loadunlocked File frozen importlibbootstrap line in loadbackwardcompatible File distbobctlpyzpendulumdatepy line in module File frozen importlibbootstrap line in findandload File frozen importlibbootstrap line in findandloadunlocked File frozen importlibbootstrap line in loadunlocked File frozen importlibbootstrap line in loadbackwardcompatible File distbobctlpyzpendulumhelperspy line in module File distbobctlpyzpendulumformattingdifferenceformatterpy line in init File distbobctlpyzpendulumlocaleslocalepy line in load ValueError Locale en does not exist Resolves along with comparison against None and other classes