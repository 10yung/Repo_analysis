 Allow for different fitting procedures following carettrainControl Hi I was checking your work and found a bug in predictFFForest that results in the error Error in matrixNA nrow nrowdata ncol ntrees nonnumeric matrix extent After checking the lastest source file predictFFForestfunctionR I noticed that it tries to access the list key treesim to iterate the various trees lines and However the key with the simulations in the list returned by FFForest is named fftsim I tested by renaming the key in the list returned by FFForest and the predict function works without error Perhaps it could be changed in predictFFForest Also great work these trees provide great explainability that allows to integrate nontechnical users with extensive domain knowledge into the modeling decision processes There appears to be an overlooked condition in inwords in that a predictive covariate of type l fails to result in an assignment of sentencei and thus this line errors I cant tell if this is supposed to be a restriction on the input data no logical columns or just a bug but at first glance it seems like the latter Minimal reprexes r suppressPackageStartupMessageslibraryFFTrees create a perfectly dependent column which is logical heartdisease heartdisease heartdisease lgl heartdisease diagnosis heartfft FFTreesformula diagnosis data heartdisease progress FALSE Error object sentencei not found With an independent logical column the issue is bypassed r heartdisease heartdisease setseed heartdisease lgl samplecTRUE FALSE nrowheartdisease replace TRUE heartfft FFTreesformula diagnosis data heartdisease progress FALSE heartfftinwords If thal rdfd predict True If cp a predict False If ca predict False otherwise predict True With a perfectly dependent integer column the issue is bypassed r heartdisease heartdisease heartdisease lgl asintegerheartdisease diagnosis heartfft FFTreesformula diagnosis data heartdisease progress FALSE heartfftinwords If lgl predict True If thal rdfd predict False If cp a predict False otherwise predict True Goal Create an FFTrees building algorithm that allows for classifying more than classes Method A The basic idea is to for each cue class combination calculate a decision threshold that maximises a joint function of classification accuracy and percentage of cases classified For example a threshold that classifies of class A with an accuracy of might be preferred to a threshold that classifies of class A with an accuracy of For example in the plot below I show the relationship between classification proportions and classification accuracy for many different thresholds The best value should be one that has a relatively high classification proportion and accuracy In this case threshold might a good choice because it has a relatively high accuracy around where of cases are classified Its an important milestone that the latest version allows for missing values Nonetheless some related issues remain How are missing values treated when evaluating individual cue validities The current version simply ignores missing values However this could yield undeserved high value to cues with many missing values Thus a more cautious alternative could classify cases according to the criterions baseline probabilities when classifying cases with missing values An imaginary cue with ALL values missing would then perform at baseline level and any improvement beyond this would be due to actual cue information How are missing values treated when applying an FFT to data In the current version nodes with missing data are simply skipped This seems fine but what when the cue data of a final node is missing Again classification according to the baseline probabilities seems an obvious choice as is what presently happens Another and complementary way to deal with many missing values is to build larger FFTs As long as the cues at each node perform better than baseline this should increase the likelihood that a case can be classified at some node More advanced issues include What happens when new variables or levels of variablesfactors appear during testing that have not been encountered before during training What about imputing missing values from existing data in plotFFTrees add options to only show ROC curve and main tree with icons Rewrite plotFFTrees in grid