 Help us help you If you are reporting a bug include a Minimum Working Example without any dependencies except libc that shows the issue and ideally reproduces in the Rust playground the target triple libc supports many targets and many APIs instructions to reproduce logs eg build logs links to TravisCI logs uploads to github gists etc If you are requesting a new API include the target triple link to the documentation of the API showing the type signatures how to use it etc In general just please consider that the people who can help you are all very busy they will be helping you in their free time there are a lot of people in need of help so they need to prioritize to which issues they devote their free time etc So try to give most of the information upfront be concise show small selfcontained examples nobody has time to create a new cargo project set up dependencies etc Help us help you Target triple x unknownlinuxmusl Version libc Errorerror E cannot find type nlmsghdr in this scope i use cargo doc open target x unknownlinuxmusl to check doc libc doc not include struct nlmsghdr but on cargo doc open target x unknownlinuxgnu doc libc now include struct nlmsghdr Can libc support to build a static binaries Adds bindings for ntpadjtime co for Linux FreeBSDNetBSDDarwin and SolarisIllumOS Some of the type definitions are already defined in the common modrs for bit GNULinux This also refactor the type definitions to use types from crate root memmem is a nonstandard extension first added in GNU libc and later ported to other systems Support for it is nonuniform thus it was only added to platforms that seem to support it Also move getauxval where it should be Im opening this here as continuation of discussion on This also might be related to Currently sighandlert is an alias to usize on Windows targets While this works it is strictly speaking wrong and the right type should be something like Optionextern C fncint There are however concerns about the switch It is an API change that might break someones code At least a crater run would be needed What is the correct type Due to the fact this doesnt always contain a valid function pointer but also some marker constants eg SIGIGN which has value of it is unclear if this is correct on the Rust side It seems the consensus is function pointers need to be nonnull solved by the Option and properly aligned but the alignment of function pointer on all platforms Windows currently run is so for that reason this should be fine According to NetBSD x unknownnetbsd has had the accept system call since February When the system call was added it seems NetBSD wasnt released yet I have two questions Its it oldstable enough to add Or is this crate targeting NetBSD Can anyone with a NetBSD installation add the system call I would add it myself but I dont have a NetBSD installation so I would have no idea if I did it correctly as NetBSD isnt run on the CI either it seems Related fix fix 