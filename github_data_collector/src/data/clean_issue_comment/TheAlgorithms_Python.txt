I am working towards adding for producing bezier curves and bspline curving given certain control points Can you please guide me on which directory should I put the code files Hello Im a student and I want to learn and to practice more about Python I notice that you made some compression algorithms and Ive made one with the LZW method So I would like to ask if I can add it Describe your change x Add an algorithm No x Fix a bug or typo in an existing algorithm Improve the existing implementation with more succint code x Documentation change No need Checklist x I have read CONTRIBUTINGmd x This pull request is all my own work I have not plagiarized x I know that pull requests will not be merged if they fail the automated tests x This PR only changes one algorithm file To ease review please open separate PRs for separate algorithms x All new Python files are placed inside an existing directory x All filenames are in all lowercase characters with no spaces or dashes All functions and variable names follow Python naming conventions x All function parameters and return values are annotated with Python type hints All functions have doctests that pass the automated testing All new algorithms have a URL in its comments that points to Wikipedia or other similar explanation Specifically line resultappendleft if left right else rightpop pop method is On when you extract the first item you need to shift all remaining items to the left Because the line is inside the while loop the merge function is On My benchmark tests support this using a randomly generated list with items merge sort time new merge time sorted time merge sort is current implementation new merge is my merge sort implementation using two pointer approach and sorted is just the sorted builtin function I tried to benchmark with items but the current merge sort never completed waited maybe sec If I am correct above then I dont think an On logn algorithm should be implemented as On Thank you Hello I wanted to add my own implementation of an algorithm that approximates the length of a curve and one which approximates the area under a curve where the curve is defined by a function If thats alright could you also please indicate which folder I should push to Thanks Describe your change Add an algorithm x Fix a bug or typo in an existing algorithm Documentation change Checklist I have read CONTRIBUTINGmd x This pull request is all my own work I have not plagiarized I know that pull requests will not be merged if they fail the automated tests This PR only changes one algorithm file To ease review please open separate PRs for separate algorithms All new Python files are placed inside an existing directory All filenames are in all lowercase characters with no spaces or dashes x All functions and variable names follow Python naming conventions All function parameters and return values are annotated with Python type hints All functions have doctests that pass the automated testing All new algorithms have a URL in its comments that points to Wikipedia or other similar explanation Hey Im new to github and thought this repo would be a good opportunity to get familiar and contribute a simple algorithm I noticed the sorts folder is lacking a recursive implementation of the insertion sort Is it OK if I add one Though i am not a fan of using LGTM but while browsing through the reports i found out there are instances that actually makes sense My question revolves around whether we should ask the respective code authors to do the same in a way relaying to them the code quality issue which can be used as learning and as a reference for new contributors or do it all by ourselves I Have Add the Another Method of Longest Common Subsequence using Topdown Approach Memoization in Dynamic Programming Hi I have Saw your Dynamic Programming Directory in Your Repo It is Quite Exciting But I want Contribute a Different Approach in Longest Common Sub Sequence using Dynamic Approach Using TopDown Approach Memoization Instead of the Bottom UP Approach Tabulation Hope it is Quite Interesting