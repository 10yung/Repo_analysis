Imagine we have Author and Note Note can have many Authors and Authors can have many Notes How to create a Note with Author id or even Note with Author id GET with Join works fine but not POST a Note with Authors I want to execute a certain codesection after my data has been updated I tried AfterUpdate decorative in my entityts file but its not working When I added a console it wasnt getting printed stating the function is never called The update Im doing is through nestjs crud ie patch request Ex Consider table usersaddresses Assume its has following fields idinteger useridinteger namestring isprimaryboolean Now whenever user adds or updates an address as primary we have to first check into database if there exist any other primary address if yes then set its value as false and make current as trueprimary I also tried using using subscriber but no success Kindly assist Version details nest packagejson nestjstypeorm nestjsxcrud nestjsxcrudtypeorm typeorm there is a condition is that i need use filter and join operation my url path is like this in database the deptid field is a integer the stack info is like this req filter deptidin join dept exception Error Main alias is not set at SelectQueryBuilderget as alias D Mycode newschool src querybuilder QueryBuilderts at EntityManageranonymous D Mycode newschool src entitymanager EntityManagerts at step D Mycode newschool nodemodules tslib tslib tslibjs at Objectnext D Mycode newschool nodemodules tslib tslib tslibjs i dont if this problem is occur by typeorm the packagejson is like this nestjsxcrud nestjsxcrudtypeorm Hi I was currently struggling with data validation in the PUT method since it Creates or Updates an entity I thought it would respect the corresponding CrudValidationGrup depending on the actual action its going to perform But after some digging I realized that the problem was in this line and occurred me that is too hard to decide what validation group its going to use at the route creation Since the validation occurs before the endpoint actually getting hit and therefore before it can check entity existence Im not sure what would be the best approach to this From the top of my head what I can think of is Change the mentioned line to make PUT use the same validations as POST probably the easiest way to change but Im not sure if it can bring any hidden bugs I will open a CR for this Change replaceOne to be a route that does no validation and just checks user existence and redirects to the appropriate route with the appropriate validations may increase the overhead for each call Create a new CrudValidationGroup I dont think that helps very much since it will probably be used at the same places as the CREATE For now I can overcome this by hiding the replaceOneBase route creating one of my own and redirecting the call to replaceOneBase after validation The problem is that I dont know an easy way of adding the ValidationPipe with the correct configurations besides of creating a new controller and overriding createOneBase what is terrible Hello I am testing new CrudAuth as a supposed way to get rid of my own implementation of service and controller which were extended before updating to For getOneBase and getManyBase this CrudAuth decorator works perfectly However I cannot find a way to restrict user of creating entities which he does not own For example the user is an admin of organization which has departments He can select only employees who belong to departments of his organization it is completed by eager joining of employee with department and with departments organization and then checking organizations ID Trying to select other organizations employee results in which is perfectly okay However this user still can create an employee with not own departmentId and get its data on creation However he cannot select it later But this is a problem cause some organization admins can fill my DB with garbage data on purpose or by accident For now I cannot find a way to verify saved entity by nested relation field May anyone help me with solution of this Maybe I should implement some validation by creating custom class validator decorator which loads related entites from DB check them and after that returns possible error Or a possiblity to add some specific query into transaction before saving new entity Thanks Hi I use a Postgres database with TypeORM I have several columns which are an array with some strings inside I would like to filter on these columns but it seems to me that there is not yet support for the any operator Has anyone ever done this If yes how did you do it Thanks for your help You are able to query a table for an entity using an excluded column Here is an example scenario I have a table of user accounts Each user has a password email and nickname I mark the password field as excluded in the usercontrollerts file When you fetch a big list of users from my API it just has the nickname and email great But for some reason I am able to query all users using the password field For example I can get every user whose password contains e with this filter passwordcontLe This seems like unexpected behavior that should be fixed because of potential security implications Hi I try to fix issue This is my commits Please check it I noticed that when run example app and get json there is an undefined path on open api json Unfortunately I was unable to understand the problem Bumps handlebars from to details summaryChangelogsummary Sourced from handlebarss changelog v November th Bugfixes fix add noprototypebuiltins eslintrule and fix all occurences f f d fix add more properties required to be enumerable Chores Build fix use instead of c b f add chai and dirtychai and sinon for cleaner testassertions and spies deprecate old assertionmethods e e ba dad a Security The properties proto defineGetter defineSetter and lookupGetter have been added to the list of properties that must be enumerable If a property by that name is found and not enumerable on its parent it will silently evaluate to undefined This is done in both the compiled template and the lookuphelper This will prevent new RemoteCodeExecution exploits that have been published recently Compatibility notes Due to the securityfixes The semantics of the templates using proto defineGetter defineSetter and lookupGetter in the respect that those expression now return undefined rather than their actual value from the proto The semantics have not changed in cases where the properties are enumerable as in js proto some string The change may be breaking in that respect but we still only increase the patchversion because the incompatible usecases are not intended undocumented and far less important than fixing RemoteCodeExecution exploits on existing systems Commits v November th Bugfixes fix use Stringfield in lookup when checking for constructor d test add fluent API for testing Handlebars c ac c Compatibility notes no incompatibility are to be expected trtable truncated details details summaryCommitssummary c c b v c d Update release notes f f d fix add noprototypebuiltins eslintrule and fix all occurences fix add more properties required to be enumerable ba testchore add chaiexpect and sinon to runtimeenvironment dad test add sinon as global variable to eslint in the specs a test add sinonjs for spies deprecate current assertions e e chore add chai and dirtychai for better test assertions c b f fix use instead of de d v Additional commits viewable in compare view details br Dependabot compatibility score Dependabot will resolve any conflicts with this PR as long as you dont alter it yourself You can also trigger a rebase manually by commenting dependabot rebase dependabotautomergestart dependabotautomergeend details summaryDependabot commands and optionssummary br You can trigger Dependabot actions by commenting on this PR dependabot rebase will rebase this PR dependabot recreate will recreate this PR overwriting any edits that have been made to it dependabot merge will merge this PR after your CI passes on it dependabot squash and merge will squash and merge this PR after your CI passes on it dependabot cancel merge will cancel a previously requested merge and block automerging dependabot reopen will reopen this PR if it is closed dependabot ignore this patchminormajor version will close this PR and stop Dependabot creating any more for this minormajor version unless you reopen the PR or upgrade to it yourself dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency unless you reopen the PR or upgrade to it yourself dependabot use these labels will set the current labels as the default for future PRs for this repo and language dependabot use these reviewers will set the current reviewers as the default for future PRs for this repo and language dependabot use these assignees will set the current assignees as the default for future PRs for this repo and language dependabot use this milestone will set the current milestone as the default for future PRs for this repo and language You can disable automated security fix PRs for this repo from the Security Alerts page details until now the CrudRequest has two parts one is parsed from the client by every requests another is options static server side config now there should be extramaybe other name the server side per request config it is convenient for handle different users queries with different data scopes