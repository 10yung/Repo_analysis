 Are we enabled to run C codes with an optimized way in jupyter notebook There is a property named Optimize Code in Visual Studio to let the compiler knows whether the code will be optimized or not Something like this do you provide us Im asking this feature because there is x for loop only small benchmarking performance gap between Try Net and Net Core Optimize Code is enabled and x performance gap when Optimize Code is disabled I also develop a deep learning library in NET Core I have to know and care about performance issues This handles the basic messages HandleSubmitCode HandleRequestCompletion HandleCancelCurrentCommand but is just a noop at the moment Things pending in this PR Order matters right now the output stream is shown at the end but it should be shown in the middle Handling cancel tests Example PowerShell notebook that came from this very change Eg r nugetMicrosoftML r nugetMicrosoftMLOnnxTransformer var x hello world reports error CS Implicitlytyped variables cannot have multiple declarators error CS The name hello does not exist in the current context Error should occur on line not line This is a proposal for Usage would be publish Samples format Markdown targetdirectory Samples published Supported formats are Markdown and HTML Root directory can be identical to targetdirectory In that case with Markdown formatting selected source files will replaced with the ones that contain the updated source blocks from the sample solutions I was insecure about file access Read access to directories is done via IDirectoryAccessor but write access is not abstracted that seems incorrect So any suggestions welcome Problem I want to use net interactive documentation to write my documentation but markdown doc files should still display my code samples when viewed in an environment without try net hosting git hub README or simple markdown viewer Right now I have to copy the sample regions manually from the C projects to markdcown code blocks to make sure the samples are visible without try net which is errorprone and inconvenient Suggestion I would like to use the global dotnet try tool to keep my markdown in sync with the sample code It would be great to have a sync command that just copies the referenced regions into the markdown code blocks Usage would be similar to the existing verify command dotnet try sync RootDirectory Even if the docs are never used as interactive docs one gets the great advantage of writing sample code with compiler support So no more broken code samples in the documentation Basic implementation I created a basic implementation with the current try dotnet version It is working for me and perhaps it is useful to start with unfortunately pull requests are not possible at the moment csharp using SystemCommandLine using SystemIO using SystemLinq using SystemThreadingTasks using Markdig using MarkdigRenderersNormalize using MarkdigSyntax using MicrosoftDotNetTryMarkdown using MLSAgentMarkdown using MLSAgentTools using WorkspaceServer namespace MLSAgentCommandLine public static class SyncCommand public static async Taskint Do SyncOptions syncOptions IConsole console StartupOptions startupOptions null var directoryAccessor syncOptionsRootDirectory var packageRegistry PackageRegistryCreateForTryModedirectoryAccessor var markdownProject new MarkdownProject directoryAccessor packageRegistry startupOptions var markdownFiles markdownProjectGetAllMarkdownFilesToArray if markdownFilesLength consoleErrorWriteLineNo markdown files found under directoryAccessorGetFullyQualifiedRoot return foreach var markdownFile in markdownFiles var document ParseMarkdownDocumentmarkdownFile var pipeline new MarkdownPipelineBuilderUseNormalizeCodeBlockAnnotationsBuild var writer new StringWriter var renderer new NormalizeRendererwriter rendererOptionsExpandAutoLinks true pipelineSetuprenderer var blocks document OfTypeAnnotatedCodeBlock OrderByc cOrder ToList if blocksAny continue await TaskWhenAllblocksSelectb bInitializeAsync rendererRenderdocument writerFlush var updated writerToString var fullName directoryAccessorGetFullyQualifiedPathmarkdownFilePathFullName FileWriteAllTextfullName updated consoleOutWriteLineUpdated code sections in file fullName return private static MarkdownDocument ParseMarkdownDocumentMarkdownFile markdownFile var pipeline markdownFileProjectGetMarkdownPipelineFormarkdownFilePath var document MarkdigMarkdownParse markdownFileReadAllText pipeline return document using Markdig using MarkdigRenderers using MarkdigRenderersNormalize using MarkdigSyntax namespace MicrosoftDotNetTryMarkdown public static class MarkdownNormalizePipelineBuilderExtensions public static MarkdownPipelineBuilder UseNormalizeCodeBlockAnnotations this MarkdownPipelineBuilder pipeline var extensions pipelineExtensions if extensionsContainsNormalizeBlockAnnotationExtension extensionsAddnew NormalizeBlockAnnotationExtension if extensionsContainsSkipEmptyLinkReferencesExtension extensionsAddnew SkipEmptyLinkReferencesExtension return pipeline public class NormalizeBlockAnnotationExtension IMarkdownExtension public void SetupMarkdownPipelineBuilder pipeline public void SetupMarkdownPipeline pipeline IMarkdownRenderer renderer var normalizeRenderer renderer as NormalizeRenderer var renderers normalizeRendererObjectRenderers if renderers null renderersContainsNormalizeAnnotatedCodeBlockRenderer var codeLinkBlockRenderer new NormalizeAnnotatedCodeBlockRenderer renderersInsert codeLinkBlockRenderer public class NormalizeAnnotatedCodeBlockRenderer CodeBlockRenderer protected override void Write NormalizeRenderer renderer CodeBlock codeBlock if codeBlock is AnnotatedCodeBlock codeLinkBlock codeLinkBlockArguments codeLinkBlockAnnotationsLanguage codeLinkBlockAnnotationsRunArgs baseWriterenderer codeBlock else baseWriterenderer codeBlock public class SkipEmptyLinkReferencesExtension IMarkdownExtension public void SetupMarkdownPipelineBuilder pipeline public void SetupMarkdownPipeline pipeline IMarkdownRenderer renderer var normalizeRenderer renderer as NormalizeRenderer var renderers normalizeRendererObjectRenderers if renderers null renderersRemoveAllr r is LinkReferenceDefinitionRenderer var linkRefRenderer new SkipEmptyLinkReferencesRender renderersInsert linkRefRenderer public class SkipEmptyLinkReferencesRender LinkReferenceDefinitionRenderer protected override void WriteNormalizeRenderer renderer LinkReferenceDefinition linkDef if linkDefLabel null linkDefUrl null return baseWriterenderer linkDef Describe the bug IntelliSense suggestions for extension methods have property icon like instead of a methodlike box thing Did this error occur while using dotnet try or online dotnettry NET Jupyter Notebook x online What kind of error was it x User Interface UI IntelliSense icon is incorrect using property one for extension methods like LINQs Any All Aggregate etc Service Error Other Screenshots Edge Chrome Please complete the following OS Windows macOS Linux Please specify distro iOS Android Browser x Chrome x Edge Safari MLNET version Im working to port this sample to MLNET and being able to use it in Jupyter Notebooks Even though it works smoothly as VS solution when trying to run it on a Jupyter I get the following error SystemInvalidOperationException Splitterconsolidator worker encountered exception while consuming source data To do this Ive splitted the Programcs file into different cells In order to more easily handle the different dependencies and to avoid filling the notebook with other declarations Ive also referenced the dll created at binDebug when running it on VS This is the code and the outputs of the notebook cells MLNET Nuget packages installation r nugetMicrosoftML r nugetMicrosoftMLImageAnalytics r nugetMicrosoftMLVision r nugetSciSharpTensorflowRedist r nugetSharpZipLib r C Users Desktop DeepLearningImageClassificationTraining vjupyter ImageClassificationTrain bin Debug netcoreapp ImageClassificationShareddll r C Users Desktop DeepLearningImageClassificationTraining vjupyter ImageClassificationTrain bin Debug netcoreapp ImageClassificationTraindll Installing package SharpZipLib Installing package MicrosoftMLImageAnalytics Installing package MicrosoftMLVision Installing package MicrosoftML version Installing package SciSharpTensorflowRedist by the way in this one ive found no way to do the r without the absolute path despite what its said in and the inner issue suggestions using System using SystemCollectionsGeneric using SystemDiagnostics using SystemIO using SystemLinq using Common using ImageClassification using ImageClassificationDataModels using ImageClassificationTrain using MicrosoftML using MicrosoftMLTransforms using MicrosoftMLVision using static MicrosoftMLTransformsValueToKeyMappingEstimator private static void EvaluateModelMLContext mlContext IDataView testDataset ITransformer trainedModel ConsoleWriteLineMaking predictions in bulk for evaluating models quality Measuring time var watch StopwatchStartNew var predictionsDataView trainedModelTransformtestDataset var metrics mlContextMulticlassClassificationEvaluatepredictionsDataView labelColumnNameLabelAsKey predictedLabelColumnName PredictedLabel ConsoleHelperPrintMultiClassClassificationMetricsTensorFlow DNN Transfer Learning metrics watchStop var elapsed Ms watchElapsedMilliseconds ConsoleWriteLinePredicting and Evaluation took elapsed Ms seconds private static void TrySinglePredictionstring imagesFolderPathForPredictions MLContext mlContext ITransformer trainedModel Create prediction function to try one prediction var predictionEngine mlContextModel CreatePredictionEngineInMemoryImageData ImagePredictiontrainedModel var testImages FileUtilsLoadInMemoryImagesFromDirectory imagesFolderPathForPredictions false var imageToPredict testImagesFirst var prediction predictionEnginePredictimageToPredict ConsoleWriteLine Image Filename imageToPredictImageFileName Scores stringJoin predictionScore Predicted Label predictionPredictedLabel public static IEnumerableImageData LoadImagesFromDirectory string folder bool useFolderNameAsLabel true FileUtilsLoadImagesFromDirectoryfolder useFolderNameAsLabel Selectx new ImageDataximagePath xlabel public static string DownloadImageSetstring imagesDownloadFolder get a set of images to teach the network about the new classes SINGLE SMALL FLOWERS IMAGESET files const string fileName flowerphotossmallsetzip var url WebDownloadurl imagesDownloadFolder fileName CompressUnZipPathJoinimagesDownloadFolder fileName imagesDownloadFolder SINGLE FULL FLOWERS IMAGESET files string fileName flowerphotostgz string url WebDownloadurl imagesDownloadFolder fileName CompressExtractTGZPathJoinimagesDownloadFolder fileName imagesDownloadFolder return PathGetFileNameWithoutExtensionfileName public static void ConsoleWriteImagePredictionstring ImagePath string Label string PredictedLabel float Probability var defaultForeground ConsoleForegroundColor var labelColor ConsoleColorMagenta var probColor ConsoleColorBlue ConsoleWriteImage File ConsoleForegroundColor labelColor ConsoleWritePathGetFileNameImagePath ConsoleForegroundColor defaultForeground ConsoleWrite original labeled as ConsoleForegroundColor labelColor ConsoleWriteLabel ConsoleForegroundColor defaultForeground ConsoleWrite predicted as ConsoleForegroundColor labelColor ConsoleWritePredictedLabel ConsoleForegroundColor defaultForeground ConsoleWrite with score ConsoleForegroundColor probColor ConsoleWriteProbability ConsoleForegroundColor defaultForeground ConsoleWriteLine private static void FilterMLContextLogobject sender LoggingEventArgs e if eMessageStartsWith SourceImageClassificationTrainer ConsoleWriteLineeMessage string outputMlNetModelFilePath ImageClassificationTrainassetsoutputsimageClassiferzip string imagesFolderPathForPredictions ImageClassificationTrainassetsinputsimagesimagesforpredictionFlowersPredictions string imagesDownloadFolderPath ImageClassificationTrainassetsinputsimages Download the image set and unzip string finalImagesFolderName DownloadImageSetimagesDownloadFolderPath string fullImagesetFolderPath PathCombineimagesDownloadFolderPath finalImagesFolderName var mlContext new MLContextseed Specify MLContext Filter to only show feedback logtraces about ImageClassification This is not needed for feedback output if using the explicit MetricsCallback parameter mlContextLog FilterMLContextLog ImageClassificationTrainassetsinputsimagesflowerphotossmallsetzip already exists Load the initial full imageset into an IDataView and shuffle so itll be better balanced IEnumerableImageData images LoadImagesFromDirectoryfolder fullImagesetFolderPath useFolderNameAsLabel true IDataView fullImagesDataset mlContextDataLoadFromEnumerableimages IDataView shuffledFullImageFilePathsDataset mlContextDataShuffleRowsfullImagesDataset Load Images with inmemory type within the IDataView and Transform Labels to Keys Categorical IDataView shuffledFullImagesDataset mlContextTransformsConversion MapValueToKeyoutputColumnName LabelAsKey inputColumnName Label keyOrdinality KeyOrdinalityByValue AppendmlContextTransformsLoadRawImageBytes outputColumnName Image imageFolder fullImagesetFolderPath inputColumnName ImagePath FitshuffledFullImageFilePathsDataset TransformshuffledFullImageFilePathsDataset Split the data into train and test sets train and evaluate var trainTestData mlContextDataTrainTestSplitshuffledFullImagesDataset testFraction IDataView trainDataView trainTestDataTrainSet IDataView testDataView trainTestDataTestSet Define the models training pipeline using DNN default values var pipeline mlContextMulticlassClassificationTrainers ImageClassificationfeatureColumnName Image labelColumnName LabelAsKey validationSet testDataView AppendmlContextTransformsConversionMapKeyToValueoutputColumnName PredictedLabel inputColumnName PredictedLabel SourceImageClassificationTrainer ImageClassificationTrainer KindTrace Channel started OPTIONAL Define the models training pipeline by using explicit hyperparameters var options new ImageClassificationTrainerOptions FeatureColumnName Image LabelColumnName LabelAsKey Just by changingselecting InceptionV MobilenetV ResnetV you can try a different DNN architecture TensorFlow pretrained model Arch ImageClassificationTrainerArchitectureMobilenetV Epoch BatchSize LearningRate f MetricsCallback metrics ConsoleWriteLinemetrics ValidationSet testDataView var pipeline mlContextMulticlassClassificationTrainersImageClassificationoptions AppendmlContextTransformsConversionMapKeyToValue outputColumnName PredictedLabel inputColumnName PredictedLabel Traincreate the ML model ConsoleWriteLine Training the image classification model with DNN Transfer Learning on top of the selected pretrained modelarchitecture Measuring training time var watch StopwatchStartNew Train ITransformer trainedModel pipelineFittrainDataView watchStop var elapsedMs watchElapsedMilliseconds ConsoleWriteLineTraining with transfer learning took elapsedMs seconds Training the image classification model with DNN Transfer Learning on top of the selected pretrained modelarchitecture SourceImageClassificationTrainer Ensuring meta files are present KindTrace Channel started SourceImageClassificationTrainer Ensuring meta files are present KindTrace Channel finished Elapsed SourceImageClassificationTrainer Ensuring meta files are present KindTrace Channel disposed Saver not created because there are no variables in the graph to restore SystemInvalidOperationException Splitterconsolidator worker encountered exception while consuming source data at MicrosoftMLDataDataViewUtilsSplitterBatchSetAllOutPipe pipes at MicrosoftMLDataDataViewUtilsSplittercDisplayClass ConsolidateCoreb at MicrosoftMLDataDataViewUtilsSplitterCursorDisposeBoolean disposing at MicrosoftMLDataViewRowDispose at MicrosoftMLDataSynchronizedCursorBaseDisposeBoolean disposing at MicrosoftMLDataViewRowDispose at MicrosoftMLDataLinkedRootCursorBaseDisposeBoolean disposing at MicrosoftMLDataViewRowDispose at MicrosoftMLVisionImageClassificationTrainerCacheFeaturizedImagesToDiskIDataView input String labelColumnName String imageColumnName ImageProcessor imageProcessor String inputTensorName String outputTensorName String cacheFilePath Dataset dataset Action metricsCallback at MicrosoftMLVisionImageClassificationTrainerTrainModelCoreTrainContext trainContext at MicrosoftMLTrainersTrainerEstimatorBase TrainTransformerIDataView trainSet IDataView validationSet IPredictor initPredictor at MicrosoftMLTrainersTrainerEstimatorBase FitIDataView input at MicrosoftMLDataEstimatorChain FitIDataView input at Submission Initialized MoveNext End of stack trace from previous location where exception was thrown at MicrosoftCodeAnalysisScriptingScriptExecutionStateRunSubmissionsAsync TResult ImmutableArray precedingExecutors Func currentExecutor StrongBox exceptionHolderOpt Func catchExceptionOpt CancellationToken cancellationToken I am unable to utilize the benefits of static typing due to the lack of autocomplete and goto definition functionality Use Cases When inside a functionclass initializer shift tab should show what parametersoverloads the functionclass accepts An objects properties should have autocomplete as well when you call on them Pressing tab inside a Jupyter notebook shows the objects available methodsproperties Describe the bug Using MicrosoftAzureCosmos and CosmosClient throws Unhandled Exception Could not load file or assembly MicrosoftAzureCosmosDirect Version Cultureneutral PublicKeyToken bf ad e The system cannot find the file specified Code r nugetMicrosoftAzureCosmos using MicrosoftAzureCosmos string uri string key ThisIsMadeUpAndThankYouForLookingAtThisIssueAETGPCjrVXat KlIOaf SxAxTzsujT XyfZuEw using CosmosClient client new CosmosClienturi key Adding a reference to CosomsDirect r nugetMicrosoftAzureCosmosDirect created a new error Unhandled Exception Could not load file or assembly SystemConfigurationConfigurationManager Version Cultureneutral PublicKeyTokencc b ffcd ddd Reference assemblies should not be loaded for execution They can only be loaded in the Reflectiononly loader context x at MicrosoftAzureCosmosDocumentClientInitializeUri serviceEndpoint ConnectionPolicy connectionPolicy Nullable desiredConsistencyLevel HttpMessageHandler handler ISessionContainer sessionContainer Nullable enableCpuMonitor IStoreClientFactory storeClientFactory at MicrosoftAzureCosmosDocumentClientctorUri serviceEndpoint String authKeyOrResourceToken EventHandler sendingRequestEventArgs ConnectionPolicy connectionPolicy Nullable desiredConsistencyLevel JsonSerializerSettings serializerSettings ApiType apitype EventHandler receivedResponseEventArgs HttpMessageHandler handler ISessionContainer sessionContainer Nullable enableCpuMonitor Func transportClientHandlerFactory IStoreClientFactory storeClientFactory at MicrosoftAzureCosmosCosmosClientctorString accountEndpoint String authKeyOrResourceToken CosmosClientOptions clientOptions at Submission Initialized MoveNext End of stack trace from previous location where exception was thrown at MicrosoftCodeAnalysisScriptingScriptExecutionStateRunSubmissionsAsync TResult ImmutableArray precedingExecutors Func currentExecutor StrongBox exceptionHolderOpt Func catchExceptionOpt CancellationToken cancellationToken Seems related to Im on dotnettry version b d e a b e a caed dc Thanks Did this error occur while using dotnet try or online dotnettry x NET Jupyter Notebook online What kind of error was it User Interface UI For example the output never displayed Service Error For example The service is temporarily unavailable We are working on it x Other Screenshots Please complete the following OS x Windows macOS Linux Please specify distro iOS Android Browser Chrome x Edge new Safari 