The example for SwitchTransition isnt a complete example the FadeTransition element isnt defined anywhere which takes from the explanation of SwitchTransition I changed out the FadeTransition for CSSTransition and defined the fade classes to remove any unnecessary confusion Hello beautiful humans Im using ReactCSSTransitionGroup on a mobile website This animation works perfectly fine with every navigators but Safari const backgroundTransition enter animated enterActive fadeIn leave animated leaveActive fadeOut const Modality children isDisplayed onClose Fragment ReactCSSTransitionGroup transitionNamebackgroundTransition transitionEnterTimeout transitionLeaveTimeout I mean it works but its not smooth at all it appears in two times Do you have any idea Thanks What is the current behavior I am working on an app built on Cordova and Electron for Android and Windows use The transitions are working with a ms timeout on localhost but when I run the project on Electron and Android the transitions are not working like a ms timeout What is the expected behavior It is possible that this library not work with Electron and Android Code Appts HashRouter Route renderlocation TransitionGroup CSSTransition keylocationpathname timeout classNamesfade Switch locationlocation Route exact path componentBasket Route pathmanualentry componentManualEntry Route pathcheckout componentCheckout Route pathorderreceipt componentOrderReceipt Route pathpaymentscreen componentPaymentScreen Switch CSSTransition TransitionGroup HashRouter Appcss page position absolute left right flex height fadeappear fadeenter opacity zindex fadeappearactive fadeenterfadeenteractive opacity transition opacity ms linear ms fadeexit opacity fadeexitfadeexitactive opacity transition opacity ms linear And in the components I added a div in the beginning that calls the class Page Thanks What is the current behavior I manage my frontend routes with reachrouter at present And also use reacttransitiongroup to manage the animation When I first navigate into a component and click on an a element with an anchor the animation will be triggered which makes the anchor doesnt work at first click But everything goes right after the first click When I refresh the current page and do the same stuff the animation also doesnt be triggered so the anchor could work What is the expected behavior When I first navigate into a component and click the element with an anchor the animation shouldnt be triggered Otherwise the anchor wouldnt work for the first time Could you provide a CodeSandbox demo reproducing the bug Sure here is the demoPlease be sure to run this demo in a new window otherwise the anchor wouldnt work in CodeSandboxs iframe Demo All you need to do is to click the page link one first Then click the article link Now try to click the content list on the right of the page to observe what happen next You will find that the first click triggers the route changing animation which causes the anchor doesnt work I have tried to animate views that are lazy loaded with Reactlazy i have just picked the example at link and modified the Components to be lazy loaded then i suspect when trying to unmount ReactSuspense breaks something codesandbox Bumps npm from to details summaryRelease notessummary Sourced from npms releases v BUGFIXES ac aee npmbinlinks npmgentlefs Do not remove global binman links inappropriately isaacs DEPENDENCIES fd gentlefs isaacs d f c b binlinks isaacs v DEPENDENCIES ce a binlinks Properly normalize sanitize and verify bin entries in packagejson c aae npmpacklist fb ecd d pacote f npmpacote npmpacote fix Do not drop perms in git when not root isaacs darcyclarke f f sanitize and normalize package bin field isaacs cb readpackagejson v BUG FIXES b fix docs target typo richardlau fixpackageRelativePath fix where for file deps larsgw d f c Revert windows Add preliminary WSL support for npm and npx craigloewenmsft e b e remove unnecessary packagejson read when reading shrinkwrap LightingJack c d ac fixfund open url for string shorthand ruyadorno ae afe Dont log error message if git tagging is disabled woppa c b f a Warn the user that it is uninstalling npminstall Hoidberg v BUG FIXES d d fixfund support funding string shorthand ruyadorno b c b should not publish tapsnapshot folder ruyadorno d Add preliminary WSL support for npm and npx infinnie ef f print quick audit report for human output isaacs TESTING dbbf ac added workflow to trigger and run benchmarks mikemimik trtable truncated details details summaryChangelogsummary Sourced from npms changelog BUGFIXES ac aee npmbinlinks npmgentlefs Do not remove global binman links inappropriately isaacs DEPENDENCIES fd gentlefs isaacs d f c b binlinks isaacs DEPENDENCIES ce a binlinks Properly normalize sanitize and verify bin entries in packagejson c aae npmpacklist fb ecd d pacote f npmpacote npmpacote fix Do not drop perms in git when not root isaacs darcyclarke f f sanitize and normalize package bin field isaacs cb readpackagejson BUG FIXES b fix docs target typo trtable truncated details details summaryCommitssummary fd f aca docs changelog for ac a Do not remove global binman links inappropriately d f c binlinks fd gentlefs c bc docs changelog for cb readpackagejson fb ecd pacote c a npmpacklist Additional commits viewable in compare view details br Dependabot compatibility score Dependabot will resolve any conflicts with this PR as long as you dont alter it yourself You can also trigger a rebase manually by commenting dependabot rebase dependabotautomergestart dependabotautomergeend details summaryDependabot commands and optionssummary br You can trigger Dependabot actions by commenting on this PR dependabot rebase will rebase this PR dependabot recreate will recreate this PR overwriting any edits that have been made to it dependabot merge will merge this PR after your CI passes on it dependabot squash and merge will squash and merge this PR after your CI passes on it dependabot cancel merge will cancel a previously requested merge and block automerging dependabot reopen will reopen this PR if it is closed dependabot ignore this patchminormajor version will close this PR and stop Dependabot creating any more for this minormajor version unless you reopen the PR or upgrade to it yourself dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency unless you reopen the PR or upgrade to it yourself dependabot use these labels will set the current labels as the default for future PRs for this repo and language dependabot use these reviewers will set the current reviewers as the default for future PRs for this repo and language dependabot use these assignees will set the current assignees as the default for future PRs for this repo and language dependabot use this milestone will set the current milestone as the default for future PRs for this repo and language You can disable automated security fix PRs for this repo from the Security Alerts page details Most other React community modules as well as React itself have MIT license Can this repo move to MIT as well Is this an oversight that this repo still has BSD See What is the current behavior When using CSSTransition with in set to false I dont see any class names get applied to the child element What is the expected behavior I expect there to be some class applied by default My use case is along the lines of a slideshow where there is one slide showing at a time but for purposes of SEO each slide should always be rendered in the DOM Below is a Sandbox illustrating the basic idea In the sandbox you can see that no class names are applied by default and once you do a full rotation through the slides everything is good also ignore the fact that theres no animationstransitions just illustrating the absense of default classnames Could you provide a CodeSandbox demo reproducing the bug If theres another way to be doing this let me know I might be misusing CSSTransition in this context Timeout prop is still mandatory while addEndListener is in use in TypeScript Expected behaviour timeout prop shouldnt be required when addEndListener is used According to docs Actual behaviour timeout prop is always required What is the current behavior Use of SwitchTransition results in Error A crossorigin error was thrown React doesnt have access to the actual error object in development See for more information everywhere ive tried to use it What is the expected behavior SwitchTransition just works Could you provide a CodeSandbox demo reproducing the bug not yet