Hi weve found an issue when running following script js let i JSONparse printi let i JSONparse printi The second print sometimes prints extra numbers after Ive tracked this down to here Here strtod is used on tokenptr This pointer is however a nonnullterminated string which is the problem Sometimes the memory after the string contains valid data with regard to strtod which makes strtod parsing happily past intended buffer strtod really should stop parsing after tokenlen bytes Ive reproduced it in following example where I also redefined malloc to mymalloc in mjsc C file bugc include stdioh include stringh include mjsh void mymallocsizet d void p mallocd memsetp d return p int mainint argc char argv mjsvalt res struct mjs mjs mjscreate const char script let i JSONparse n printi OK Prints n let i JSONparse n printi BAD Prints n mjserrt err mjsexecmjs script res printferrd tres ld lx nerr res res return Compile by bash cc o bug mjsc bugc ldl One solution is to implement a strntod sort of like this somethingish C double strntodconst char str sizet len char safeforstrtod len strncpysafeforstrtod str len safeforstrtod len abruptly put an end to any overreads here return strtodsafeforstrtod NULL and use that instead of wherever strtod is used now Hi The library is very interesting I am interested to know if there is any project or planning to transpire ES code to mJS With its proper linters etc The for loop parsing fails if any of the statements is missing Each of these fail to parse javascript let i for i i Do something javascript for i i if i break javascript for i i i The JavaScript allows any of those to be omitted While the nd and rd statement is rarely omitted it is not that rare the st statement is omitted The workaround is javascript let i for i i i i Do something it would be really cool if one could debug the JS script with a standard debugger Adding this file mjs can be used natively in ESP RTOSSDK Hi can I use JS to setup and connect to Wifi I noticed theres no JS API available 