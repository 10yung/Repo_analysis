Depending on if you have a packagejson in your project you will get a prompt to install prismaclient or now Both methods behave differently C Users Jan Documents throwaway prisma generate In order to use the prismaclientjs generator you need to install prismaclient to your project Do you want to install it now yes yarn add v info No lockfile found Resolving packages Fetching packages Linking dependencies Building fresh packages success Saved lockfile success Saved new dependency info Direct dependencies prismaclient alpha info All dependencies prismaclient alpha Done in s C Users Jan Documents throwaway prisma generate Error Error In order to use the prismaclientjs generator you need to install prismaclient to your project npm install prismaclient at CProgramDatanvmv nodemodulesprisma buildindexjs at Generatornext anonymous at CProgramDatanvmv nodemodulesprisma buildindexjs at new Promise anonymous at moduleexports awaiter CProgramDatanvmv nodemodulesprisma buildindexjs at Objectprismaclientjs CProgramDatanvmv nodemodulesprisma buildindexjs at Objectanonymous CProgramDatanvmv nodemodulesprisma buildindexjs at Generatornext anonymous at CProgramDatanvmv nodemodulesprisma buildindexjs at new Promise anonymous C Users Jan Documents throwaway npm install prismaclient prismaclient alpha postinstall C Users Jan Documents throwaway nodemodules prisma client node scriptspostinstalljs undefined Error In order to use prismaphoton please install prisma You can install it with npm add D prisma at main C Users Jan Documents throwaway nodemodules prisma client scripts postinstalljs at processTicksAndRejections internalprocesstaskqueuesjs npm notice created a lockfile as packagelockjson You should commit this file npm WARN prismaclient alpha requires a peer of prisma but none is installed You must install peer dependencies yourself npm WARN No description npm WARN No repository field prismaclient alpha added package and audited package in s found vulnerabilities C Users Jan Documents throwaway I used prisma init to create a schema in a new empty folder then edited it manually and introspected the database successfully Then C Users Jan Documents throwaway initTest prisma generate Error Error In order to use the prismaclientjs generator you need to install prismaclient to your project npm install prismaclient at CProgramDatanvmv nodemodulesprisma buildindexjs at Generatornext anonymous at CProgramDatanvmv nodemodulesprisma buildindexjs at new Promise anonymous at moduleexports awaiter CProgramDatanvmv nodemodulesprisma buildindexjs at Objectprismaclientjs CProgramDatanvmv nodemodulesprisma buildindexjs at Objectanonymous CProgramDatanvmv nodemodulesprisma buildindexjs at Generatornext anonymous at CProgramDatanvmv nodemodulesprisma buildindexjs at new Promise anonymous C Users Jan Documents throwaway initTest npm install prismaclient prismaclient alpha postinstall C Users Jan Documents throwaway initTest nodemodules prisma client node scriptspostinstalljs undefined Error In order to use prismaphoton please install prisma You can install it with npm add D prisma at main C Users Jan Documents throwaway initTest nodemodules prisma client scripts postinstalljs at processTicksAndRejections internalprocesstaskqueuesjs npm WARN saveError ENOENT no such file or directory open C Users Jan Documents throwaway initTest packagejson npm notice created a lockfile as packagelockjson You should commit this file npm WARN enoent ENOENT no such file or directory open C Users Jan Documents throwaway initTest packagejson npm WARN prismaclient alpha requires a peer of prisma but none is installed You must install peer dependencies yourself npm WARN initTest No description npm WARN initTest No repository field npm WARN initTest No README data npm WARN initTest No license field prismaclient alpha added package and audited package in s found vulnerabilities C Users Jan Documents throwaway initTest prisma v prisma alpha binary version a db ffce c d ab c Note that a packagelockjson got created but a packagejson did not Before This is your Prisma schema file learn more about it in the docs The datasource block is used to specify the connection to your DB Set the provider field to match your DB type postgresql mysql or sqlite The url field must contain the connection string to your DB Learn more about connection strings for your DB datasource db provider sqlite url sqlitechinookdb Other examples for connection strings are SQLite url sqlitedevdb MySQL url mysqljohndoejohndoelocalhost mydb You can also use environment variables to specify the connection string By adding the generator block you specify that you want to generate Prismas DB client The client is generated by runnning the prisma generate command and will be located in nodemodulesprisma and can be imported in your code as import Prisma Client from prismaclient generator client provider prismaclientjs Next steps Add your DB connection string as the url of the datasource block Run prisma introspect to get your data model into the schema Run prisma generate to generate Prisma Client JS Start using Prisma Client JS in your application After generator client provider prismaclientjs datasource db provider sqlite url sqlitechinookdb model albums AlbumId Int id ArtistId artists Title String trackses tracks relationreferences AlbumId model artists ArtistId Int id Name String albumses albums model customers Address String City String Company String Country String CustomerId Int id Email String Fax String FirstName String LastName String Phone String PostalCode String State String SupportRepId employees invoiceses invoices relationreferences CustomerId model employees Address String BirthDate DateTime City String Country String Email String EmployeeId Int id Fax String FirstName String HireDate DateTime LastName String Phone String PostalCode String ReportsTo employees relationemployeesToemployeesReportsTo State String Title String customerses customers employeeses employees relationemployeesToemployeesReportsTo model genres GenreId Int id Name String trackses tracks relationreferences GenreId model invoices BillingAddress String BillingCity String BillingCountry String BillingPostalCode String BillingState String CustomerId customers InvoiceDate DateTime InvoiceId Int id Total Float invoiceitemses invoiceitems model invoiceitems InvoiceId invoices InvoiceLineId Int id Quantity Int TrackId tracks UnitPrice Float model mediatypes MediaTypeId Int id Name String trackses tracks relationreferences MediaTypeId model playlists Name String PlaylistId Int id playlisttracks playlisttrack model tracks AlbumId albums Bytes Int Composer String GenreId genres MediaTypeId mediatypes Milliseconds Int Name String TrackId Int id UnitPrice Float invoiceitemses invoiceitems playlisttracks playlisttrack model playlisttrack PlaylistId playlists TrackId tracks id Int id Current output of successful introspection C Users Jan Documents throwaway initTest prisma introspect Introspecting based on datasource defined in prisma schemaprisma Done with introspection in ms Moved existing prisma schemaprisma to prisma schemabackupprisma Wrote prisma schemaprisma It is unclear if this backup behavior is indeed what we want the command to do Introspecting SQLite CREATE TABLE playlisttrack PlaylistId INTEGER NOT NULL TrackId INTEGER NOT NULL id INTEGER PRIMARY KEY AUTOINCREMENT FOREIGN KEYPlaylistId REFERENCES playlistsPlaylistId ON DELETE NO ACTION ON UPDATE NO ACTION FOREIGN KEYTrackId REFERENCES tracksTrackId ON DELETE NO ACTION ON UPDATE NO ACTION Creates error message ERROR Oops an unexpected error occured Schema parsing error Error parsing attribute id Fields that are marked as id must be required schemaprisma TrackId tracks id Int id Error message does not include name of tablemodel for context Problem we had previously After reporting an error the process just does not return to command line CtrlC also doesnt do anything C Users Jan Documents throwaway initTest prisma v prisma alpha binary version a db ffce c d ab c Terminal is cmdexe via Cmder Right now introspection orders all fields of a model alphabetically Due to the special status of id fields primary key I suggest to have an extra rule for those and always put them into the model as the first first For example before model Profile bio String id Int id user User after model Profile id Int id bio String user User prisma generator client provider prismaclientjs datasource db provider postgresql url postgresqlschicklinglocalhost schickling model Comment author User id String id post Post text String default model Post author User id String id title String default comments Comment model User email String default unique id String id name String default comments Comment posts Post Its hard to tell the useful error message with instructions apart from the stacktrace We should improve streamline our CLI error formatting A tracking issue for CockroachDB related 