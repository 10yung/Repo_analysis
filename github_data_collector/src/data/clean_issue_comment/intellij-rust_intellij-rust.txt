I want to inject language to a macros string but there is no such option How may I do that Note build for platform uses CLion as a dependency for debugger module instead of Native Debug plugin because the second one is not published yet for doesnt provide integration with Grazie plugin because it is not published for too Hello and thank you for the issue If you would like to report a bug we have added some points below that you can fill out Feel free to remove all the irrelevant text to request a new feature Environment IntelliJ Rust plugin version nightly Rust toolchain version e x appledarwin IDE name and version IntelliJ IDEA Ultimate Edition IU Operating system macOS tomldepsbug Problem description Crate documentation line markers provided by CargoCrateDocLineMarkerProvider disappear sometimes on pushing Enter button Steps to reproduce Place caret before or after dependency in Cargotoml and push Enter one or more times Before PR ignoreWithoutQuickFix set totrue default Screenshot from Before PR ignoreWithoutQuickFix set to false Screenshot from After PR Screenshot from This PR is tested with experimental macro expansion engine enabled so this PR would probably make more sense to merge after making new engine the default I removed ignoreWithoutQuickFix checkbox it is my main issue with current implementation as it defeats one of the main purposes of the inspection which is to show references that cannot be resolved for reasons more than just not imported Also previously this inspection could register problem for same PsiElement multiple times this is fixed in PR Due to ignoreWithoutQuickFix being removed several tests that assumed this variable was set to true do not really make sense now some were corrected This PR is WIP because it broke some tests in AutoImportFixTest and AutoImportFixStdTest and Id like some feedback on the PR before fixing There are also some failed tests in RsBuildActionTest and CargoBuildManagerTest not sure whether this is my fault Environment IntelliJ Rust plugin version Rust toolchain version ea x unknownlinuxgnu IDE name and version IntelliJ IDEA Community Edition IC Operating system Linux arch Problem description IDEA hangs after adding in multicursor mode Steps to reproduce Create a Rust project and write the following code rust fn getdata static static str u a a a a a a a a a a a a a a a a a a a a a a a a a a The goal is to replace each a line with a Select all the relevant lines in multicursor mode Place cursor right before the first Press Environment IntelliJ Rust plugin version nightly Rust toolchain version ea x appledarwin IDE name and version CLion Snapshot CL Operating system macOS Problem description Some methods eg intoiter are missing from completion on itertoolsGroupBy once a closure is passed to groupby call Steps to reproduce rust extern crate itertools use itertoolsItertools fn foodata str datacharsgroupby chr chrintoi try finish completion with intoiter img width altbad src without the closure img width altgood src provide Attach Cargo Project action for files Cargotoml and its parent dir in project view provide editor notification that Cargotoml doesnt belong to any cargo project with Attach action The action creates new cargo project in project model without manual choice of directory Related to Environment IntelliJ Rust plugin version nightly Rust toolchain version ea x appledarwin IDE name and version CLion Snapshot CL Operating system macOS Problem description I usually write returncollect last when implementing a functionmethod this way the plugin is constantly complaining about the wrong return type till the function is actually finished This means the last function expression is underlined in red of the time Sometimes I even put a mock value in the end while coding just to see more meaningful errors hidden behind wrong type I would argue thats too harsh why not highlighting the return type in the function signature as an error instead This way it will be easier on eyes and still present img width altScreen Shot at src Since plugins can be dynamic ie can be installed without IDE restart And it would be great to make IntelliJ Rust plugin dynamic To achieve it we need to get rid of all components use only dynamic extension points mark own extension points as dynamic etc Full documentation about dynamic plugins can be found here Hello and thank you for the issue If you would like to report a bug we have added some points below that you can fill out Feel free to remove all the irrelevant text to request a new feature Environment IntelliJ Rust plugin version nightly Rust toolchain version nightly de d f x appledarwin IDE name and version IntelliJ IDEA Preview Ultimate Edition IU Operating system macOS Macro expansion engine experimental Problem description The plugin fails to infer an array size that is returned by tobebytes method of primitive integer types The main reason at this moment plugin cant evaluate memsizeofT expression that is used to declare array size For example its implementation of tobebytes method for u rust pub const fn tobebytesself u memsizeofSelf selftobetonebytes Steps to reproduce rust fn main let bytes u tobebytes Please include as much of your codebase as needed to reproduce the error If the relevant files are large please provide a link to a public repository or a Gist 