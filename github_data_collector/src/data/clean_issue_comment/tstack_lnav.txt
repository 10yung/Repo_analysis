configure does not exist in the repository Users need to run autogensh in order to generate it This PR adds this step in the README file I love lnav and its so close to do what I want in viewing log files however Im finding its philosophy a bit off for my use cases It feels like lnav is built for coming at a huge log file and looking for something in particular eg finding some set of interactions in a web log whereas what I am usually doing is getting a firehose of junk and trying to pare it down and make sense of it while debugging applications To that end what I really desperately want is two things compound filters eg I want to be able to AND intersect the in filters so that I can incrementally make them more stringent I know that I could partially achieve this with single filters and regexs but that requires more thought and is harder to edit I would give anything for a clear key and maybe startstop tailing keys What I want to do is logically remove everything surrounding the stuff I care about and slowly whittle it down I know that I can mark lines and there is a hide facility but its awkward to use for this and I end up bailing out and using vim to edit the file down Please correct me if Im missing some obvious ways to achieve the effects above Also are key bindings coming Id love to add some more vim style movement operations I am constantly hitting G to try to go to the top of the file Just food for thought Thanks for your work on lnav This is causing a crash rewriter select xid bork I have a JSON field that appears in several of my log messages but not all I dont want to include it in the lineformat setting as it would just be noise for of my log messages However the places it appear Id really like to run a transformation on the text Specifically the field contains nanoseconds and I want to display it in a more humanreadable format Is it possible to run transformations on JSON fields that are not part of the format defined in lineformat Or optionally is it possible to define multiple lineformats differentiating between them on either a regex or which fields are present I have a server running on UTC with apps that log UTC dates without a timezone specifier WARN I also have pesky users who report problems in nonUTC like pm in Los Angeles I would love to be able to run TZAmericaLosAngeles lnav atlassianconfluencelog and have lnav translate those UTC dates to in this case PST Sometimes im using lnav over a flaky network connection that gets dropped in the middle of the session It appears that lnavs internal state isnt being autosaved while running so when my connection gets dropped I lose things like filter state marked lines etc It would save me some frustration if lnav periodically saved its state lnav seems nonlinearly slow when running SQL on more than one file Here are two sample files ls lah varlogsyslog gz rwr syslog adm K Nov varlogsyslog gz rwr syslog adm M Nov varlogsyslog gz Parsing syslog gz on its own takes s time TERMxterm lnav varlogsyslog gz n c select from sysloglog devnull real m s user m s sys m s Parsing syslog gz on its own takes s time TERMxterm lnav varlogsyslog gz n c select from sysloglog devnull real m s user m s sys m s but parsing syslog gz and syslog gz together takes s time TERMxterm lnav varlogsyslog gz n c select from sysloglog devnull real m s user m s sys m s Another realworld example with access logs rwr jturner adm M Nov accesslog rwr jturner adm M Nov accesslog Command Time time TERMxterm lnav accesslog n c select from accesslog devnull s time TERMxterm lnav accesslog n c select from accesslog devnull s time TERMxterm lnav accesslog accesslog n c select from accesslog devnull m s Title says it all ideally keep an updates LINES in environ table at any resize Crash log attached crash log Its not always clear why a file is not matching a log format We have some clear diagnostics for the sample lines in a log format we should do the same when detecting any file