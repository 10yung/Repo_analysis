 Enum is used for radio box but if yout list has less than items you could use SET for the checkboxs This is a elegant MySQL solution instead of use all varchar Enum you must choose only one option Set you could storage more than one option Added When scaffold apiscaffold and api commands run at the last file createdcreating events fired When rollback command run at the end file deleteddeleting events fired How to test Run any scaffold or api generator command and listen specific events Create your event listener and listen for event GeneratorFileCreated GeneratorFileCreating GeneratorFileDeleting and GeneratorFileDeleted You will receive command type and other related data by listening given events Dears great job on that package I wonder if there is any event listeners for before model generation after model generation before update and after update as I want to make some checks before actually generating a model and some database insertions and a git commit after creating it Symfony Component Debug Exception FatalThrowableError Cannot use object of type InfyOm Generator Common GeneratorField as array checkboxValue value field htmlType Relationships are not managed in view generation I know that Relationships are in Beta and I would like to be sure about that If I generate scaffold from a json file where I added a relation the generated view doesnt reflect the data eg Select for selecting related records Is that right or am I missing something Thanks This enables Infyom Laravel Generator to be used with I added another option moduleName which when specified changes the config locations and namespace point to the given module Should fix Hi From time to time I pick one opensource project to read and learn from and if I have something to contribute to that project whatever that thing I will do I have picked up yours and I have learned from it Thank you However during my reading for HTMLFieldGenerator class I came with an idea of contribution for this class and because I didnt read everything related to the structure of this project that helps me to fork it I will try to contribute by that idea here Problem However HTMLFieldGenerator as I understood trying to generate fieldtemplate and return it based on the field type As you know each time that you would like to add delete or modify any fieldtemplategenerator you will go and modify the HTMLFieldGeneratorgenerateHTML method to do that Solution Lets take the benefits of the Polymorphism here For example if we created a new interfaceabstract class to represent the fieldtemplategenerator in general and call it for example FieldTemplateGenerator then each time we need to create a new fieldtemplategenerator we will inherit from this class This way we will separate the fieldtemplategenerator from the main HTMLgenerator That separation will help us to avoid modifying HTMLgenerator itself and put our focus in the fieldtemplategenerator class Example To get the big picture I will try to explain that in a short way php abstract class FieldTemplateGenerator abstract public function generate concrete field generator class CheckboxFieldGenerator extends FieldTemplateGenerator public function generate return template class HTMLFieldGenerator public static function generateHTML return generatorgenerate This way if you would to like to add new fieldtemplategenerator all that you need is to create new class for that and when you have something to modify you will not modify the HTMLFieldGenerator Moreover now designing a fieldtemplategenerator became extendable I have used the short way to explain the classes and you should take care of the classes design if you have decided to deal with this issue same way Thank you You can use users and userspage offset or userspagenone limit skip 