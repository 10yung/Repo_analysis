READMEmd indicates a number of Scala types suitable for serializationdeserialization including Map Running a test with MeatLocker suggests Option and Either types may also be used Can this be added to READMEmd if it is indeed correct the tests are using a scala string enrichment that has a colliding name in java lines on String so the compilation breaks We should add a openjdk test to the travis setup cc nevillelyh Updates comgoogleprotobufprotobufjava from to Ill automatically update this PR to resolve conflicts as long as you dont change it yourself If youd like to skip this version you can just close this PR If you have any feedback just mention me in the comments below Have a fantastic day writing Scala details summaryIgnore future updatessummary Add this to your scalastewardconf file to ignore future updates of this dependency updatesignore groupId comgoogleprotobuf artifactId protobufjava details labels semverminor Hi I would like to add compression when serializing object and then deserialize object back Since I havent found any info related in either GH or scaladoc I tried to manipulate exisintg KryoPool class to achieve that However I am getting comesotericsoftwarekryoKryoException Buffer too small capacity required here is the class Copyright Twitter Inc Licensed under the Apache License Version the License you may not use this file except in compliance with the License You may obtain a copy of the License at Unless required by applicable law or agreed to in writing software distributed under the License is distributed on an AS IS BASIS WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND either express or implied See the License for the specific language governing permissions and limitations under the License package comtwitterchill import comesotericsoftwarekryoKryo import comesotericsoftwarekryoioInput import comesotericsoftwarekryoioInputChunked import comesotericsoftwarekryoioOutput import orgconstellationconsensusSnapshotInfo import javaioByteArrayInputStream import javaioOutputStream import javaioByteArrayOutputStream import javaioIOException import javautilzip Simple ResourcePool to save on Kryo instances which are expensive to allocate abstract public class KryoPoolHacked extends ResourcePoolSerDeState protected KryoPoolHackedint poolSize superpoolSize Override public void releaseSerDeState st stclear superreleasest Output is created with new OutputoutBufferMin outBufferMax public static KryoPoolHacked withBufferint poolSize final KryoInstantiator ki final int outBufferMin final int outBufferMax return new KryoPoolHackedpoolSize protected SerDeState newInstance return new SerDeState kinewKryo new Input new Outputnew DeflaterOutputStreamnew ByteArrayOutputStreamnew Deflater true Output is created with new Outputnew ByteArrayOutputStream This will automatically resize internally public static KryoPoolHacked withByteArrayOutputStreamint poolSize final KryoInstantiator ki return new KryoPoolHackedpoolSize protected SerDeState newInstance return new SerDeState kinewKryo new Input new Outputnew DeflaterOutputStreamnew ByteArrayOutputStreamnew Deflater true We have to take extra care of the ByteArrayOutputStream Override public void clear superclear ByteArrayOutputStream byteStream ByteArrayOutputStreamoutputgetOutputStream byteStreamreset Override public byte outputToBytes outputflush ByteArrayOutputStream byteStream ByteArrayOutputStreamoutputgetOutputStream return byteStreamtoByteArray Override public void writeOutputToOutputStream os throws IOException outputflush ByteArrayOutputStream byteStream ByteArrayOutputStreamoutputgetOutputStream byteStreamwriteToos public T T deepCopyT obj return TfromBytestoBytesWithoutClassobj objgetClass public Object fromBytesbyte ary SerDeState serde borrow try serdesetInputnew InflaterInputStreamnew ByteArrayInputStreamary return serdereadClassAndObject finally releaseserde public T T fromBytesbyte ary ClassT cls SerDeState serde borrow Systemoutprintlnwkoszycki try serdesetInputnew InflaterInputStreamnew ByteArrayInputStreamary return serdereadObjectcls finally releaseserde public byte toBytesWithClassObject obj SerDeState serde borrow try serdewriteClassAndObjectobj return serdeoutputToBytes finally releaseserde public byte toBytesWithoutClassObject obj SerDeState serde borrow try serdewriteObjectobj return serdeoutputToBytes finally releaseserde public boolean hasRegistrationClass obj SerDeState serde borrow try return serdehasRegistrationobj finally releaseserde setting bytes as input first and then stream public Object fromBytesbyte ary SerDeState serde borrow try serdesetInputary serdesetInputnew InflaterInputStreamnew ByteArrayInputStreamary return serdereadClassAndObject finally releaseserde ends with following javautilzipZipException incorrect header check Please help Currently chill doesnt support Try serialization because it doesnt support javas Throwable serialization see for details It worth adding Throwable serialization to chilljava package and maybe explicit serialization Try serialization to chill package Hello My understanding is that Chill Akka user requiredRegistration false and FieldSerializer for all classes Is there a way to Register some specific classes Provide backwards compatibility for messages useful for rolling restarts with new messages Are there any plans to make an official Akka release seems to work fine with Akka but still it would me nice to have all the dependancies right Look at this The webpage that you provide for a GitHub repo is suppose to match the library or framework in the repo is a different technology entirely is a I use Kryosharded I want to deserialize a data but I have an Exception when I write kryofromBytesbytes comesotericsoftwarekryoKryoException javalangIndexOutOfBoundsException Index Size at comesotericsoftwarekryoserializersObjectFieldreadObjectFieldjava at comesotericsoftwarekryoserializersFieldSerializerreadFieldSerializerjava at comesotericsoftwarekryoKryoreadObjectKryojava at comesotericsoftwarekryoserializersObjectFieldreadObjectFieldjava at comesotericsoftwarekryoserializersFieldSerializerreadFieldSerializerjava at comesotericsoftwarekryoKryoreadObjectKryojava at comesotericsoftwarekryoserializersObjectFieldreadObjectFieldjava at comesotericsoftwarekryoserializersFieldSerializerreadFieldSerializerjava at comesotericsoftwarekryoKryoreadObjectKryojava at comesotericsoftwarekryoserializersObjectFieldreadObjectFieldjava at comesotericsoftwarekryoserializersFieldSerializerreadFieldSerializerjava at comesotericsoftwarekryoKryoreadClassAndObjectKryojava at comtwitterchillSerDeStatereadClassAndObjectSerDeStatejava at comtwitterchillKryoPoolfromBytesKryoPooljava 