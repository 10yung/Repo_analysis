In reference to issue tkgettimeseriesummary returns an error r librarytidyquant librarytimetk librarytidyverse dataFANG package tibbletime Works with timebased tibbles FBtbl FANG filtersymbol FB FBidx tkindexFBtbl tkgettimeseriessummaryFBidx Error in dimnamesx dnx dimnames applied to nonarray The issue originates from the gettimeseriessummarydate function when trying to tidy a summary table object using broomtidy This might be a result of broomtidytable now being deprecated A working fix is to substitute the broomtidy function with aslist As I stumbled upon this issue when using the anomalize package I am not sure what kind of output the broomtidytable would provide if it worked as intended Using the suggested fix the output would look like this A tibble x nobs start end units scale tzone diffMin diff st Qu diffMedian int date date chr chr chr dbl dbl dbl days day UTC with more variables diffMean dbl diff rd Qu dbl diffMax dbl Hello A bit of a random thought and I may be completely missing something But it looks to me like timetk has a bunch of dependencies in DESCRIPTION DESCRIPTION that are probably not needed Contrasted with I wanted to ask why some of these dependencies were there and if you would be amenable to a PR that tries to strip some of them out If this is a convenience to the enduser is this something that could be remedied with documentation ie devtools was a dependency that seemed to be unnecessary just from my quick perusing Again I am completely open to the fact that I may be missing your hard dependence on these packages elsewhere in the repo Thanks Cole EDIT I did some searching of the other packages and functions are declared with pkgfun etc and just not expressly imported The reason for my request started with me wondering why devtools was a runtime dependency for one of my apps smile I have a datatable called dt with a POSIXct column called timestamp tkxtsdt datevar timestamp gives the error Error in syms invalid argument type I tracked it down to line of tkxtsdataframe where this call is made ret dplyrselectifret isnumeric Hi tibbles are extended to deal with time in three packages that I know of timetk tibbletime and tsibble Im still trying to understand which package is best suited to use for what and I find they have quite an overlap I know the former two packages are both created by you have you considered joining forces with tsibbles author to create a single complete package Thanks for the nice packages Hi again After further playing around with timetk I found another problem where tkindex does not return the correct timebased index librarytimetk Create some hourly time series data datatbl tibbletibble date seqfrom asPOSIXct tzEuropeBerlin by lengthout x rnorm y The datatbl date field is correct and tkindex returns the correct timebase index from datatbl datatbl A tibble x date x y dttm dbl int datatbldate CET CET CET CET CET asnumericdatatbldate tkindexdatatbl Returns timebased index vector consistent with previous results CET CET CET CET CET However the tkindex problem occurs after coercing datatbl to a ts object using tkts datats tktsdatatbl datats Time Series Start End Frequency x y attrindex attrindexattrtzone EuropeBerlin attrindexattrtclass POSIXct POSIXt attrindexCLASS POSIXct POSIXt attrtclass POSIXct POSIXt attrindexTZ EuropeBerlin attrtzone EuropeBerlin tkindex returns the correct regularized index tkindexdatats timetkidx FALSE Returns regularized index However the timebased index is incorrect tkindexdatats timetkidx TRUE Returns original timebased index vector CET CET CET CET CET Warning message In checktzonese e tzone attributes are inconsistent The same problem occurs when coercing datatbl to an XTS object Here we can see the XTS object has the correct timebased index The xts object preservers the correct datetime stamps but tkindex does not return the correct datetime stamps dataxts tkxtsdatatbl dataxts x y Get timebased index from xts object using index which returns the correct value zooindexdataxts CET CET CET CET CET As you can see below tkindex returns the wrong timebased index tkindexdataxts timetkidx FALSE Returns regularized index CET CET CET CET CET Warning message In checktzonese e tzone attributes are inconsistent tkindexdataxts timetkidx TRUE Returns original timebased index vector CET CET CET CET CET Warning message In checktzonese e tzone attributes are inconsistent I hope this helps Hi Im trying to use an index based on POSIXct with the timezone set to a non UTC zone Unfortunately the tkmakefuturetimeseries does not handle the creation of future time series correctly when the timezone has been set to something other than UTC The first example is based on the one given for the tkmakefuturetimeseries function that works as expected idx c ymdhms idx idx tkmakefuturetimeseriesnfuture UTC UTC UTC However once we set a time zone for the idx things get weird idx c ymdhmstz AfricaBujumbura idx idx tkmakefuturetimeseriesnfuture CAT CAT CAT Here the Bujumbura future time series starts in the middle of the idx time series idx c ymdhmstz Hongkong idx idx tkmakefuturetimeseriesnfuture HKT HKT HKT The Hong Kong future time series starts before the idx time series starts which is not expected A inefficient workaround is to convert the posixct to numerical values then back again after calling tkmakefuturetimeseries idx c ymdhmstz Hongkong idx idxfuture asnumericidx tkmakefuturetimeseriesnfuture asPOSIXctidxfuture origin tz Hongkong HKT HKT HKT Hence we get the expected future time series I hope this can be fixed as timetk looks to be a very useful toolbox that helps with many of the compatibility issues between the Pantheon of time series packages So this package is amazing thank you But its most useful feature is a little broken Suppose I want to make forecast for the next business days If I understand correctly I should use this function idxpred tkmakefuturetimeseriesindexdftrain inspectweekdays TRUE The problem is that depending on where the weekends fall in my out of sample data the tkmakefuturetimeseries call returns a different length vector Rather than returning the next sixty business days it looks like its taking the calendar for the next sixty days and dropping the weekends This is a disaster because predxts xtspred idxpred fails with an error about series needing to be the same length as their dates from the working with time series vignette The index gives the user a lot of information in a simple timestamp Consider the datetime From this timestamp we can decompose the datetime to get the signature which consists of the year quarter month day day of year day of month hour minute and second of the occurrence of a single observation Actually if I saw a with that much precision I would assume the time is actually unknown and I am really working with lubridateymd data which in R type datasets is more common than a precise UTC value Hi Im trying to push a newer stringi version to CRAN Its available at installgithubgagolewsstringi Even though the changes between v and v are very cosmetic mods to the CC code removed pragmas suppressing some warnings and changing the order of the parameters to some class constructor affecting the Windowsonly build I got a response from the CRAN team that your package errored during check Package timetk Check tests New result ERROR Running testthatR s s Running the tests in teststestthatR failed Complete output librarytestthat librarytimetk testchecktimetk Error unknown testtkindexR orderby requires an appropriate timebased object tkxtsAAPLtbl select date datevar date at testthattesttkindexR tkxtsdata data select select datevar datevar silent silent tkxtsdefaultdata data select select datevar datevar silent silent xtsxtsdata stoporderby requires an appropriate timebased object Failure tbl tot tbl test returns tibble with correct rows and columns nrowtesttbl not equal to mismatches Failure tbl tot tbl test returns tibble with correct rows and columns ncoltesttbl not equal to mismatches Failure tbl tot tbl test returns tibble with correct rows and columns colnamestesttbl not equal to date mismatches x data y date Error unknown testtktblR orderby requires an appropriate timebased object tkxtsAAPLtbl select date datevar date at testthattesttktblR tkxtsdata data select select datevar datevar silent silent tkxtsdefaultdata data select select datevar datevar silent silent xtsxtsdata stoporderby requires an appropriate timebased object testthat results OK SKIPPED FAILED Error unknown testtkindexR Failure tbl tot tbl test returns tibble with correct rows and columns testtktblR Failure tbl tot tbl test returns tibble with correct rows and columns testtktblR Failure tbl tot tbl test returns tibble with correct rows and columns testtktblR Error unknown testtktblR Error testthat unit tests failed Execution halted Is the error likely to be on the stringi side Cheers