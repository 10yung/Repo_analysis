Updates comgithubgseitzsbtrelease from to Release NotesChangelog Ill automatically update this PR to resolve conflicts as long as you dont change it yourself If youd like to skip this version you can just close this PR If you have any feedback just mention me in the comments below Have a fantastic day writing Scala details summaryIgnore future updatessummary Add this to your scalastewardconf file to ignore future updates of this dependency updatesignore groupId comgithubgseitz artifactId sbtrelease details labels sbtpluginupdate semverpatch Updates orgscalasbtsbt from to Release NotesChangelog Ill automatically update this PR to resolve conflicts as long as you dont change it yourself If youd like to skip this version you can just close this PR If you have any feedback just mention me in the comments below Have a fantastic day writing Scala details summaryIgnore future updatessummary Add this to your scalastewardconf file to ignore future updates of this dependency updatesignore groupId orgscalasbt artifactId sbt details labels libraryupdate semverpatch Since dottyScala is going to swap the meaning of these two already does with a flag would it be possible to support it in kindprojector to be able to crosscompile Scala dotty projects with new syntax directly without going through intermediate period That would be convenient for those projects that are more comfortable making syntax jump right now instead of syntax jumps in the future would a volunteer like to assemble release notes to help call attention to interesting changes I think it would be useful to implement a Scalafix rewrite that rewrote code to use the improved syntax kindprojector provides scala check kindprojector new symbols check kindprojector package scala Caught javalangAssertionError assertion failed none semigroupscala javalangAssertionError assertion failed none at scalareflectinternalSymbolTablethrowAssertionErrorSymbolTablescala at scalatoolsnsctypecheckerTypersTypertypedPackageDef Typersscala at scalatoolsnsctypecheckerTypersTypertypedMemberDef Typersscala at scalatoolsnsctypecheckerTypersTypertyped Typersscala at scalatoolsnsctypecheckerTypersTyperrunTyper Typersscala at scalatoolsnsctypecheckerTypersTypertypedInternalTypersscala at scalatoolsnsctypecheckerTypersTyperbody Typersscala at scalatoolsnsctypecheckerTypersTypertypedTypersscala at scalatoolsnsctypecheckerTreeCheckersTreeCheckertypedTreeCheckersscala at scalatoolsnsctypecheckerTypersTypertypedTypersscala at scalatoolsnsctypecheckerTreeCheckersanonfuncheck TreeCheckersscala at scalatoolsnsctypecheckerTreeCheckersrunWithUnitTreeCheckersscala at scalatoolsnsctypecheckerTreeCheckerscheckTreeCheckersscala at scalatoolsnsctypecheckerTreeCheckersanonfuncheckTrees TreeCheckersscala at scalatoolsnsctypecheckerTreeCheckersanonfuncheckTrees TreeCheckersscala at scalatoolsnsctypecheckerTreeCheckersanonfuncheckTrees adaptedTreeCheckersscala at scalacollectionIteratorforeachIteratorscala at scalacollectionIteratorforeachIteratorscala at scalacollectionAbstractIteratorforeachIteratorscala at scalatoolsnsctypecheckerTreeCheckerscheckTreesTreeCheckersscala at scalatoolsnscGlobalRunrunCheckersGlobalscala at scalatoolsnscGlobalRuncompileUnitsInternalGlobalscala at scalatoolsnscGlobalRuncompileUnitsGlobalscala at scalatoolsnscGlobalRuncompileSourcesGlobalscala at scalatoolsnscGlobalRuncompileGlobalscala at xsbtCachedCompiler runCompilerInterfacescala at xsbtCachedCompiler runCompilerInterfacescala at xsbtCompilerInterfacerunCompilerInterfacescala at sunreflectNativeMethodAccessorImplinvoke Native Method at sunreflectNativeMethodAccessorImplinvokeNativeMethodAccessorImpljava at sunreflectDelegatingMethodAccessorImplinvokeDelegatingMethodAccessorImpljava at javalangreflectMethodinvokeMethodjava at sbtinternalincAnalyzingCompilercallAnalyzingCompilerscala at sbtinternalincAnalyzingCompilercompileAnalyzingCompilerscala at sbtinternalincAnalyzingCompilercompileAnalyzingCompilerscala at sbtinternalincMixedAnalyzingCompileranonfuncompile MixedAnalyzingCompilerscala at scalaruntimejava JFunction mcVspapplyJFunction mcVspjava at sbtinternalincMixedAnalyzingCompilertimedMixedAnalyzingCompilerscala at sbtinternalincMixedAnalyzingCompilercompileScala MixedAnalyzingCompilerscala at sbtinternalincMixedAnalyzingCompilercompileMixedAnalyzingCompilerscala at sbtinternalincIncrementalCompilerImplanonfuncompileInternal IncrementalCompilerImplscala at sbtinternalincIncrementalCompilerImplanonfuncompileInternal adaptedIncrementalCompilerImplscala at sbtinternalincIncrementaldoCompileIncrementalscala at sbtinternalincIncrementalanonfuncompile Incrementalscala at sbtinternalincIncrementalCommonrecompileClassesIncrementalCommonscala at sbtinternalincIncrementalCommoncycleIncrementalCommonscala at sbtinternalincIncrementalanonfuncompile Incrementalscala at sbtinternalincIncrementalmanageClassfilesIncrementalscala at sbtinternalincIncrementalcompileIncrementalscala at sbtinternalincIncrementalCompileapplyCompilescala at sbtinternalincIncrementalCompilerImplcompileInternalIncrementalCompilerImplscala at sbtinternalincIncrementalCompilerImplanonfuncompileIncrementally IncrementalCompilerImplscala at sbtinternalincIncrementalCompilerImplhandleCompilationErrorIncrementalCompilerImplscala at sbtinternalincIncrementalCompilerImplcompileIncrementallyIncrementalCompilerImplscala at sbtinternalincIncrementalCompilerImplcompileIncrementalCompilerImplscala at sbtDefaultscompileIncrementalTaskImplDefaultsscala at sbtDefaultsanonfuncompileIncrementalTask Defaultsscala at scalaFunction anonfuncompose Function scala at sbtinternalutiltildegreateranonfunu TypeFunctionsscala at sbtstdTransformanon workSystemscala at sbtExecuteanonfunsubmit Executescala at sbtinternalutilErrorHandlingwideConvertErrorHandlingscala at sbtExecuteworkExecutescala at sbtExecuteanonfunsubmit Executescala at sbtConcurrentRestrictionsanon anonfunsubmitValid ConcurrentRestrictionsscala at sbtCompletionServiceanon callCompletionServicescala at javautilconcurrentFutureTaskrunFutureTaskjava at javautilconcurrentExecutorsRunnableAdaptercallExecutorsjava at javautilconcurrentFutureTaskrunFutureTaskjava at javautilconcurrentThreadPoolExecutorrunWorkerThreadPoolExecutorjava at javautilconcurrentThreadPoolExecutorWorkerrunThreadPoolExecutorjava at javalangThreadrunThreadjava Ideally the poly value syntax could support multiple arguments so instead of this scala implicit val functorOption Functor Option new Functor Option override def map A B f A Bfa Option A Option B famapf we could write this scala implicit val functorOption Functor Option Functor Option f fa famapf It would be even better if type inference could figure out the type arg to but I have a feeling thats a baked in limitation at the moment scala implicit val functorOption Functor Option f fa famapf it seems D options no longer work please consider migration to P plugin options see I happen to be stuck with a build pipeline that uses gradle and its scala plugin Is there a way to use this with gradle Hi is it possible to encode higher order type lambdas like A B A or A B A I tried but end up with not found type B and not found type Thanks