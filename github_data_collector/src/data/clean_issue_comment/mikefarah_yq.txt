In hassbert points out that the version of yq handles doublequoted values differently from the currently released version In the currently released version if you pass in a value with double quotes around it it takes the characters between the quotes as a string In version it is treating the entire value including the double quotes as a string It might be nice if yq were backwards compatible in this regard On the other hand the doublequotes are kind of a hack and are handled inconsistently from single quotes which are not removed in either version It might be nice to adopt a new more consistent and elegant approach to handling input values Two such approaches come to mind Always parse values as a string no quote removal unless a special option is provided that says the value should be parsed as yaml text eg yq n b y true b true and yq n b true b true Always parse values as yaml text unless a special option is provided that says the value should be always considered a string eg yq n b true b true and yq n b s true b true See also I noticed you are switching to a new script format that is very similar to RFC JSON Patch The main incompatibility seems to be the use of op instead of command and slight differences in the name of the commandsops replace vs update I wonder if it would make sense to either adopt that format asis or support it as an alternative Not to say that RFC is some kind of famous standard with widespread adoption but it is used in kustomize which is fairly popular for kubernetes users If yq supported the same patch format then kustomize users could use yq to run an RFC patch as a way to preview its effects If you adopted it as a standard you could potentially publish your own RFC YAML Patch i tryed to merge two yaml files but something is wrong ayaml version services hello image helloworld port byaml version services hello port i run yq like this yq m x ayaml byaml what i expect version services hello image helloworld port and what i get is yq version services hello image helloworld port version and yq version beta version services hello image helloworld port the main problem in latest version is the wrong order and indentation in the first beta order is fixed but still issues with the indentation I would expect inputfilename to work like it does in jq with yq however it always outputs stdin Actual result yq inputfilename problemyaml stdin stdin stdin stdin stdin stdin Expected result yq inputfilename problemyaml projectalphaproblemyaml projectzeroproblemyaml questionsproblemyaml researchproblemyaml stuffproblemyaml testproblemyaml It would be helpful for the merge feature to get an option to show the source filename for each value If you merge few files and want to easily track where did the specific value came from it could be printed just after the value as a comment The tricky part is to skip the not simple values containing yml objects For instance one could invoke merge yq s merge fileayml filebyml filecyml or yq showSource merge fileayml filebyml filecyml where option s or showSource could indicate to print the value source output prea z fileayml x filebyml b name Abcd filecymlpre When i run a command to replace a value in yaml for example yq w fileNameyaml globalcontainerTagssite valuesnew expected value is gloabl containerTags site actual value is e this only happen if i try to write a number with digits or more digits or less works fine I would like to delete the nodes which have a matching nested key for example schema which has description but not schema that has ref paths xxxxxxxsymbolssymbols get description Fetches symbol operationId GetSymbols parameters description List of symbols in path name symbols required true schema description List of symbols type string delete this type string responses schema ref definitionsErrorResponse dont delete this what i have tried yd d i swaggeryaml paths schema deletes both any way to delete only the schema node that have an underlying node as description Hi Mike This PR includes package spec for Chocolatey as per our email discussion To build the package on Linux Im not sure if you need PowerShell at all but I think you need mono and chocolatey for this my googlefu gave only this link navigate to choco directory and execute something like mono pathtochocoexe pack yqnuspec it will either work or not if not consider changing the tools path in the nuspec file see comment when it works it will output yq nupkg file send it to me for verification to be sure everything is okay after were done with it basically two more things to mention publishing a package sign up on chocolatey community packages and basically just submit the yq nupkg file through web UI theres also a CLI helper for that step choco push if you will release a new version change version in nuspec Url Url Url bit and Checksum in ps then pack then push I believe thats it Drop me a note with the resulting nupkg and whether I need to update tools path in the nuspec Ill update the PR if you wont do it already PS this PR does not document choco installation yet lets get a package submitted and only then document this way of installing Version Using yq latest stable release at time of writing Description yqs appears to just drop merge keys rather than produce any output or an error Example Input foo foo a bar bar b foobar foobar c Expected output bar b foo a foobar a b c Actual output foo a bar b foobar c Example Input foo foo a foobar foo c Expected output foo a foobar a c Actual output foo a foobar c Example Input list foo a bar b foobar foobar c Expected output list a b foobar a b c Actual output list a b foobar c Example yq does handle simple aliases correctly Input foo foo foo bar bar bar foobar foo foo bar bar foobar foobar Expected output foo foo bar bar foobar foo foo bar bar foobar foobar Actual output foo foo bar bar foobar foo foo bar bar foobar foobar It would be very beneficial if there was an option to keep comments and formatting when updating the data for example with yq w 