Please put the defined parameters from onwards also in the READMEmd in a concise table Can e EXITCODE be repeated Signedoffby Dominic Yin yindongchaoinspurcom Add support for mips el add R AF option to emulate docker restart alwaysonfailure behavior REASON FOR CHANGE The tinibased container could be run via nondocker container runtime eg containerd crio or raw runC which may not support the xxx restart alwaysonfailure behavior This change adds the restarts capability straight into the tini code When TINIMINIMAL was defined the error message read To fix the problem or set the environment krallin I was wondering if you would be willing to back port some of the releases for s x and ppc le Some projects I found are still using dated versions of Tini like v and v but no binaries exist for s x and ppc le This makes it hard to get other open source projects to support s x and ppc le since now it requires them to add in the functionality of manually building Tini Would you be willing to release the binaries and push them to the GitHub release page The most dated version I saw was v So ideally if you could push binaries for architectures at v and v that would be amazing When I am execing the mysqld inside entrypointsh the zombie process occurs Without execing I always get an extra process that is shell as immediate child of tini and mysqld as the child of that shell Am I doing something wrong Dockerfile COPY entrypointsh ENTRYPOINT tini g EXPOSE CMD entrypointsh entrypointsh binsh set ex mkfifo tmpmysqldinit echo CREATE DATABASE IF NOT EXISTS test tmpmysqldinit exec mysqld initfiletmpmysqldinit top PID PPID USER STAT VSZ VSZ CPU CPU COMMAND mysql S m mysqld initfiletmpmysqldinit root R top root S tini g entrypointsh root Z entrypointsh I also tried tini as subreaper Something like below inside entrypointsh but tini itself become zombie Without a control operator it works fine tini s vvv sleep And here is the output I get TRACE tini Registered as child subreaper INFO tini Spawned child process sleep with pid TRACE tini No child to reap TRACE tini No child to reap TRACE tini No child to reap DEBUG tini Received SIGCHLD DEBUG tini Reaped child with pid INFO tini Main child exited normally with status TRACE tini No child to wait TRACE tini Exiting child has exited Adds support to tini for implementing post processing commands These commands can be used to run clean up procedures or remap exit codes This is an improvement recommendation to make tinistatici smaller by linking it against an alternative libc uClibc musl etc File size can go down to as low as kB For example using xstatic to link against uClibc compiled with gcc on a Linux amd system git clone cd tini wget chmod x ptsxstaticlatestsfx z ptsxstaticlatestsfx z y rm f ptsxstaticlatestsfx z touch tiniConfigh ptsxstaticbinxstatic gcc s Os W Wall I DPRSETCHILDSUBREAPER DPRGETCHILDSUBREAPER DTINIVERSIONxstatic DTINIGIT o tini srctinic file tini tini ELF bit LSB executable Intel version SYSV statically linked stripped ls l tini rwxrxrx pts pts Apr tini xstatic can be integrated to other build workflows eg make cmake just use xstatic gcc instead of gcc Read more about xstatic on Hi Thank you for tini During my tests with Docker I noticed tini starts the process given as the argument as the first child forwards received signals to the first child only or the subprocess branch if g is used returns the exit code of the first child In the case where some process has been orphaned and adopted by tini is it possible to make tini forward signals to these running child processes as well I noticed on an Ubuntu VM that traditional init seems to ask all remaining processes to terminate by sending SIGTERM Id like to reproduce this behaviour in order to gracefully stop every child process even adopted ones Thank you for your help Some containerbased programs can do an inline reload when a config file particularly those mounted on a Volume changes but need to be signalled For a local docker we can do docker kill and let the signal pass through tini but on a scheduler like Kubernetes we either have to run commands in each container or delete and recreate the containers as per the replicationgroup strategy With this patch we can run something like prometheus or fluentd in containers and be able to use kubernetes to push updates with the relevant program autoreloading without the need for a sidebar watcher making tini a little bit more like a supervisor