When I try and parse a nullable enum I get TypeCastException import combeustklaxonKlaxon import orgjunitjupiterapiTest import kotlintestassertEquals import kotlintestassertNotNull import kotlintestassertNull enum class MyEnum FIRST SECOND THIRD class WithEnum var myVal MyEnum null class EnumTest Test fun should deserialize null enum val parsed KlaxonparseWithEnum myVal null assertNotNullparsed assertNullparsedmyVal Test fun should deserialize proper enum val parsed KlaxonparseWithEnum myVal FIRST assertNotNullparsed assertEqualsMyEnumFIRST parsedmyVal This code kotlin Test fun test parsing string of single double quote Klaxonlet itparseStringittoJsonString Result in this exception The main problem seems to be that the parser cant handle the at the end of the input In classFortype Any method on casting the type to any Object type other than primitive types result in exception class combeustklaxonJsonObject cannot be cast to class Object we cast to Steps to reproduce Write the following code and run kotlin class PacketWrapper TypeForfield packet adapter WebSocketModelTypeAdapterclass val header PacketHeader val packet WebSocketModel class WebSocketModelTypeAdapter TypeAdapterWebSocketModel override fun classFortype Any KClassout WebSocketModel val header type as PacketWrapperPacketHeader error here return when headerop interface WebSocketModel Expected behavior The type should be casted to given class Tried the most basic example class Person val name String var age Int val startTime SystemcurrentTimeMillis val jsonString name John Smith val klaxon Klaxon val parsed klaxonparsePersonjsonString val endTime SystemcurrentTimeMillis TimberiEndtime Starttime endTime startTime This example would print Endtime Starttime This cannot be right This is more a question than an issue Not sure if this is possible in the current Klaxon version I am trying to deserialize a polymorphic class using an enum and not a string This is what I want kotlin TypeForfield type adapter ResponseTypeAdapterclass open class Responseval type ResponseType platform MessagingPlatform null data class TextResponse val platform MessagingPlatform val options ListString ResponseResponseTypeTEXT platform data class CarouselResponse val platform MessagingPlatform val cardsArray ListAny ResponseResponseTypeCAROUSEL platform where ResponseType is an enum constant like koltin enum class ResponseType TEXT VIDEO QUICKANSWERS CAROUSEL IMAGE SHARE HANDOVER Of course I cannot create a TypeAdapter like the one below because I think Klaxon will still use the original string in the Response initialization In fact I get the error javalangIllegalArgumentException Could not find enum value for text Note that text is lower case like in the JSON kotlin class ResponseTypeAdapter TypeAdapterResponse override fun classFortype Any KClassout Response val responseType ResponseTypevalueOftype as StringtoUpperCase return whenresponseType ResponseTypeTEXT TextResponseclass ResponseTypeCAROUSEL CarouselResponseclass all the other cases This works only if the enum and the string in the JSON are represented by the same string constant For instance if my enum is defined in lower case like the string in the JSON the deserialization works fine kotlin enum class ResponseType text image carousel This enum works So in conclusion I am asking if there is a way to discriminate using the TypeAdapter but returning also a converted discriminant type Ive boiled it down to a pretty simple example and cant see what Im doing wrong val downcase object FieldRenamer override fun fromJsonfieldName String String return fieldNametoLowerCase override fun toJsonfieldName String String return fieldNametoLowerCase val klaxon Klaxon fieldRenamerdowncase class Thing var uniqueid String null var name String null var description String null Jsonnameform var form String null var type String null var status String null var iot String null var imt String null var region String null val json created T Z modified T Z formLocation IOTValue goes here Created T Z UniqueIDLAMG XZJXM IMTASEAN NameBangkok Thailand DescriptionBangkok Thailand TypeA Modified T Z RegionAP ASEAN StatusOpen trimIndent val doc klaxonparseThingjson printlndocuniqueid I just get null as output Problem Currently JSON AST abstract syntaxt tree ie abstract json representation is not exposed when converting objects to json This is a design issue inherently leading to lack of flexibility and capability An example no support for pretty printing json of an object Related issuesconcepts which would benefit from this simple Converters COnverter would be able to leverage json DSL which would be pretty awesome Each of JsonReaders public functions do not accept null values anymore I used to use nextString but now even that doesnt work consumeValueString would work however consumeValue is private For example I dont know how to parse this in the streaming API json key null Trying to deserialize the following JSON breakfast file somepathbreakfast lightsvg star file somepathstar boldsvg Please find bellow the complete test set Note that if the map is nested parser works fine testNestedHashMap If the map is the top object parser either produces an empty HashMap testTopLevelHashMap or fails with exception Unable to instantiate HashMap with parameters testTopLevelHashMap class ParseHashMapTest data class Dataval file String data class NestedHashMapval icons HashMapString Data class TopLevelHashMap HashMapString Data private val json breakfast file somepathbreakfast lightsvg star file somepathstar boldsvg Test Works fun testNestedHashMap val result KlaxonparseNestedHashMap icons json assertresulticonssize assertresulticons breakfast file somepathbreakfast lightsvg assertresulticons star file somepathstar boldsvg Test Produces empty map fails on assertresultsize fun testTopLevelHashMap val result KlaxonparseTopLevelHashMapjson assertresultsize assertresult breakfast file somepathbreakfast lightsvg assertresult star file somepathstar boldsvg Test Fails with exception Unable to instantiate HashMap with parameters fun testTopLevelHashMap val result KlaxonparseHashMapString Datajson assertresultsize assertresult breakfast file somepathbreakfast lightsvg assertresult star file somepathstar boldsvg I am using lookup and obj to get the meetingId value of the JSON below but I get a null value The code I have kotlin val parser Parser Parserdefault val stringBuilder StringBuilder javalangStringBuildermessage val json JsonObject parserparsestringBuilder as JsonObject val meetingId jsonlookupStringcoreheadermeetingIdget loginfoThe meeting ID is meetingId I get The meeting ID is null displayed The json string json envelope namePresentationConversionCompletedSysPubMsg routing senderbbbweb core header namePresentationConversionCompletedSysPubMsg meetingId f bf a a bdb e c eb b e c userIdnotUsedYet body podIdDEFAULTPRESENTATIONPOD messageKeyCONVERSIONCOMPLETED codeCONVERSIONCOMPLETED presentation id e c aa cd c aa c e cc namepresentationpdf currenttrue pages id e c aa cd c aa c e cc num thumbUri swfUri txtUri svgUri currenttrue xOffset yOffset widthRatio heightRatio downloadablefalse What is wrong with my code