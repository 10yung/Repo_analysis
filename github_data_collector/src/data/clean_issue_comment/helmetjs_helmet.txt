Can you explain How to implement in angular step by step Whilst migrating the main helmet package over to TypeScript I discovered an issue to do with exporting types Property dnsPrefetchControl of exported interface has or is using name DnsPrefetchControlOptions from private module nodemodulesdnsprefetchcontroldistindex In this example I believe the DnsPrefetchControlOptions type needs to be exported in the main module definition However because we are using CJS exports we cannot simply prefix the type definition with export as there can only be a single export Instead the suggested way is to use namespaces ts eslintdisable typescripteslintnonamespace namespace dnsPrefetchControl export interface DnsPrefetchControlOptions eslintdisablenextline noredeclare function dnsPrefetchControl options dnsPrefetchControlDnsPrefetchControlOptions In the interest of preserving CJS exports does this seem like a reasonable way for now In the future we can make a breaking change to use ES modules everywhere which would make things a lot nicer but this change would at least make it possible to migrate this module to TypeScript Hi I have a site build in NodeExpress and I am trying to get around the Content Security Policy that blocks all inline scripts I have used the example code at the bottom of this page However it all works it generates the nonce the header is showing up properly but as soon as I get to the last line of code where it is supposed to inject the nonce into all the script tags it just spits out that individual script tag onto a blank HTML page It will not load my site anymore Here is the code I get Screen Shot at PM And here are the console errors I am getting Screen Shot at PM Has anyone else had this problem Theres a very early draft of CrossOriginEmbedderPolicy COEP However I think its worth tracking at this point This document also explains the relation to CORP and COOP Documentation describes how to disable or configure specific features but I was wondering why wouldnt we just disable all and enable only the items we need Or am I missing something Need to do this across Helmet not just in this repo I noticed that for a while the helmetjs project has been active in reviewing updates to the DefinetelyTyped definitions for helmet and wondered if it was worth migrating the types to this repository They could still be a second class citizen but it would mean users only need to include a single dependency to get the types and the helmet project would be able to ship changes more readily to the types without having to wait for the changes to go out via DT This may not be practical as itll add overhead to the maintainership of helmet but if time is already being spent to review the types it could actually reduce the effort even if changes are left to the community to submit PRs for As a user of helmet and typescript Id be happy to help maintain the types and be tagged as a reviewer if in any community PRs This discussion has been bought over from Hey I think it would be awesome if helmetjs would be more open for other frameworks or use without any As far as I understand this is already possible correct I think it would be good to document this prominently in the repo See Because this is a breaking change itll happen in Helmet version 