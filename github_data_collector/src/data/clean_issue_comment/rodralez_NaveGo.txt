Hi Im working with an actual IMU While generating the error parameters using allanimum I got inconsistent tau lengths From line of allanimum the for loop repeats times in the first time allanoverlap returns a tau that has items but in the second time the allanoverlap returns a tau that has items Then the program retuens an error says the dimention of left side is the dimention of left side is error allanimu line imufbtau i tau And I debugged the program it seems that in line of allanoverlapm the program returns and in first and second time So is there a walkaround of this problem Glad to have your reply The data I used is Hi Dear Rodralez Im using NaveGo to deal with my own IMU data from UAV during the process I found the result was ridiculously wrong after a careful examine I found the gravity directions are different in my IMU data and the NaveGo code and the NaveGo simulated example data I used both a DJI UAV and an Xsens MTi IMU to collect the original data Their body coordinate system are all FRD which are supposed to be the same with NaveGo But their data are acting differently with the NaveGo simulated example data dji this is the DJI UAV IMU data img width altmti src This is the data from an Xsens MTi sensor In both case the body is firstly still and then moving upwards and downwards back The upwards accelerations are negative which meets the FRD coordinate definition well The Z acceleration data is around which means the gravity is in their FRD coordinate system But directly providing these data to NaveGo leads to a messy result Then I checked the simulated example data I found the body acceleration data is like img width altimu src the Z accleration data is around initially I thought this may be an inverted axisBut according to the simulated track the body experienced an upward acceleration if the axis was inverted the upward acceleration should be positive however the upward acceleration is still negative with the gravity So it appears that in NaveGo the gravity is positive in the body FRD coordinate system unlike conventional sensors definition Now Im working around this problem by making fnc fn coriolis g to fnc fn coriolis g The results get reasonable but still not perfect So im wondering besides altering g to g is there anything else I should do to make up for the different gravity direction problem Will this affect allan regression result Dear Rodrigo First of all thank you for your code it is very helpful However I noticed a strange phenomenon at the beginning of my simulation the hybridization is actually worse than GPS alone For almost min there is about cm of error for the hybride trajectory whereas GPS error is below cm Imu data are generated from the reference trajectory with error estimated in static with Allanvariance What I do not understand is that since GPSstdm is of about cm for this period the kalman filter should give more weight to GNSS and it appears not to be the case I have spent days on it I dont see what I am missing I tried to take only gnss when RTK is received with no success kalman filter diverge Screenshots are attached Thank you in advance for your answer Sincerely The vehicle starts moving after sec 