 GORM dbTabletable as t dbWheremapWhere dbSelectt t Joinsleft join table t on t idt idRows SQL scopeog tableName map key sqls appendsqls fmtSprintfvv s v quotedTableName scopeQuotekey equalSQL scopeAddToVarsvalue map key sqls appendsqls fmtSprintfv s v scopeQuotekey equalSQL scopeAddToVarsvalue The reason to update this package was goroutine leak in v which occurred when used idle MySQL connections I am instrumenting the code with opentracing The library I used is smacker opentracinggorm which take the advantages of gorm callbacks to add the trace points Nevertheless the Exec queries are not reported to the tracing backend After some lookup it seems that gorm does not implement the callbacks of Exec Therefore smackeropentracinggorm is unable to add trace point to it It would be great if it supports callbacks on all the queries Your issue may already be reported Please search on the issue track before creating one What version of Go are you using go version Which database and its version are you using Please provide a complete runnable program to reproduce your issue IMPORTANT Need to runnable with GORMs docker compose config or please provides your config go package main import githubcomjinzhugorm githubcomjinzhugormdialectsmssql githubcomjinzhugormdialectsmysql githubcomjinzhugormdialectspostgres githubcomjinzhugormdialectssqlite var db gormDB func init var err error db err gormOpensqlite testdb db err gormOpenpostgres usergorm passwordgorm DBnamegorm port sslmodedisable db err gormOpenmysql gormgormtcplocalhost gormcharsetutf parseTimeTrue db err gormOpenmssql sqlservergormLoremIpsum localhost databasegorm if err nil panicerr dbLogModetrue func main if failure condition fmtPrintlnfailed else fmtPrintlnsuccess The gorm update from v to v has led to all callback registrations getting logged like info registering callback ddtracegobeforecreate from UsersnilswernerCodeGolangserviceappservicespersistencepostgresutilitiesgo I cant turn it off using dbLogModefalse and I feel like it should be off by default Im on githubcomjinzhugorm v Your issue may already be reported Please search on the issue track before creating one What version of Go are you using go version Which database and its version are you using Please provide a complete runnable program to reproduce your issue IMPORTANT Need to runnable with GORMs docker compose config or please provides your config go package main import githubcomjinzhugorm githubcomjinzhugormdialectsmssql githubcomjinzhugormdialectsmysql githubcomjinzhugormdialectspostgres githubcomjinzhugormdialectssqlite var db gormDB func init var err error db err gormOpensqlite testdb db err gormOpenpostgres usergorm passwordgorm DBnamegorm port sslmodedisable db err gormOpenmysql gormgormtcplocalhost gormcharsetutf parseTimeTrue db err gormOpenmssql sqlservergormLoremIpsum localhost databasegorm if err nil panicerr dbLogModetrue func main if failure condition fmtPrintlnfailed else fmtPrintlnsuccess How to get data with FROM ONLY tablename from a postgreSQL INHERITS table When I use dbExecSELECT FROM sometable Error Incorrect table name return go version go version go linuxamd mysql version mysql gorm version v code package main import fmt githubcomgosqldrivermysql githubcomjinzhugorm type RealTimeQPS struct Id int gromprimarykey jsonid DomainName string jsondomainname DomainPathId string jsondomainpathid DomainPath string jsondomainpath func main var err error db err gormOpenmysql testtesttcp testcharsetutf mb parseTimeTrue locLocal if err nil fmtPrintfOpen Error s n err return defer dbClose err dbDebugError if err nil fmtPrintlnerr err dbDBPing if err nil fmtPrintfPing Error s n errError return var r RealTimeQPS errs dbExecSELECT FROM realtimeqpsScan rGetErrors if lenerrs for e range errs fmtPrintlneError return I use gorm in a web application and I divide the pacage according to the module I want to define the struct and the handler function in a same package but it is an import cycle occurs How can I use the many to many relation in this case For example there are use and language in different package usergo go type User struct gormModel Languages languageLanguage gormmany manyuserlanguages languagego go type Language struct gormModel Name string Users userUser gormmany manyuserlanguages Model int 