 Proposal Use case Why is this important Docker Content Trust allows us to verify if the images downloaded are indeed the images that atmozsftp published Security measures can be setup to only download signed images Is there any particular reason why signed images havent been added or is it simply a feature which hasnt been looked into yet First of all thank you for your great work I face a problem where I want to add a second user to a subdirectory Is this possible at all Example user homeuser folder folder user folder User should only have access to folder and deeper IIRC this is not possible because of the owndership of the root folder First of all thank you for this very useful image It worked right out of the box I have problems connecting to the container in my Jenkins pipeline I created the container using foopassupload and can connect from the server but when I run my app within another container I get an auth error with the same user and pass I get inputuserauthrequest invalid user foo preauth Could not get shadow information for NOUSER error This is probably due to sha keys but is it possible to do this For Instance to set stricthost key settings to no Since Windows does not support readonly permissions for Linux containers see this change will ensure that the permissions are set correctly by the entrypoint script Is it possible to add users without restarting recreating the docker container If yes how And Is it possible to reloadrefresh the public keys for all users at runtime If yes how Ive prepared an debianbuster based build here if youd like to test it hakandileksftpdebianbuster See I created a azure container instance using the atmoz image using the below yaml file Yaml File apiVersion location westus name sftptestgroup properties containers name sftp properties environmentVariables name SFTPUSERS value usernamedsdff ed image atmozsftplatest command binsh c chmod etcsshssh entrypoint ports port resources requests cpu memoryInGB volumeMounts mountPath home name sftpvolume readonly false mountPath etcssh name hostkey osType Linux restartPolicy OnFailure ipAddress type Public ports port dnsNameLabel sftptestgroup volumes name sftpvolume azureFile sharename sftpfileshare readonly false storageAccountName storageAccountKey name hostkey secret sshhostrsakey sshhosted key sshdconfig tags type MicrosoftContainerInstancecontainerGroups Error Message ssh keys are mounted in etcssh to a link file which has permission because of that the ssh key is not getting loaded and unable to connect it from filezilla Hey everybody Im trying to mount host keys as Google kubernetes engine configmap and when I try to mount etcssh for the file tried etcsshsshhostrsakey too I get Readonly file system error message This is my configmap file apiVersion v data sshhostrsakey my key kind ConfigMap metadata name sshhostrsa namespace default And this is my atmoz deployment yaml apiVersion appsv kind Deployment metadata annotations name sftp namespace default spec progressDeadlineSeconds replicas revisionHistoryLimit selector matchLabels app sftp strategy rollingUpdate maxSurge maxUnavailable type RollingUpdate template metadata creationTimestamp null labels app sftp spec containers args clientsftp env name sftp value image atmozsftp imagePullPolicy IfNotPresent name sftp ports containerPort name sftp protocol TCP resources securityContext capabilities add SYSADMIN procMount Default terminationMessagePath devterminationlog terminationMessagePolicy File volumeMounts mountPath homeclientsftp name sftp mountPath homeclientsshkeys name sftppublickeys mountPath etcssh name sshhosted dnsPolicy ClusterFirst restartPolicy Always schedulerName defaultscheduler securityContext fsGroup terminationGracePeriodSeconds volumes name sftp persistentVolumeClaim claimName sftpuat configMap defaultMode name sftppublickeys name sftppublickeys configMap defaultMode name sshhosted name sshhosted Errors I get from the log Saving key etcsshsshhostrsakey failed Readonly file system entrypoint Error on line sshkeygen t rsa b f etcsshsshhostrsakey N Any idea somebody Got a weird issue happening and would love some help I can connect externally via sftp but connections start droppingfiles fail to transfer after some time Here is my current dockercompose setup within docker swarm version services sftp image atmozsftp volumes ftphomefoo ftpvarwwwhtml ports command foopass I can think of a few reasons why this maybe isnt possible relying on a user directory but Im wondering if theres any hack to do it It seems like the mount doesnt allow for writes I get the message readonly file system if I try messing with www directorys permissions