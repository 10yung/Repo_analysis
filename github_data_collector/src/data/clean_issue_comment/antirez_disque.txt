Hey Im running multiple queue consumers and from time to time it happens that consumers get the same job at the same time Im not logging the time down to millisecond precision but it does happen in the same second Now multiple deliverers perse are not problematic unless they happen at the same time as everythen else then falls apart Looking to run this on a Raspberry PI Thanks Hi all many of you ask what will happen with Disque Here is all the news The project is in the process of being translated to a Redis module The code duplication with Redis was impossible to handle I tried and I failed So that was the plan Im sitting in an alpha code base of Disque as a module of Redis that does not even compile but is a very good start I translated most data structures in the past few months but more importantly as a side effect I added to Redis modules all the APIs I needed Cluster API and Timer API I think I need yet another API to force replication out of context but Im not sure Disque module will be released under the AGPL license not BSD as Redis core Redis will not be released if we dont have an RC version of Disque at least ETA You should see Disque in beta version before the end of the year RC in months The new Disque should be mostly API compatible with the old one and will have exactly the same guarantees Will be AP federated and so forth Same stuff Just as a module It will live in a different repository compared to Redis Very probably this same repository at some point Ill forcepush the new project and leave the current implementation as a branch for historical reasons If you have questions Im here ENV cluster has three node of ABC Case Step add job to A param replicate and other param with default now result A info registeredjobs qlen Binfo registeredjobs qlen C same as B clinet connect to C to consumer all of those jobs now result A info registeredjobs qlen Binfo registeredjobs qlen C same as B Note the registeredjobs at the time And consumer client connect to A jobs duplicate send to A But when AC be connected at the same time result is only be consumered once only Unreasonable it is The SHOW command doc is missing info about what fields are returned README says Disque is a synchronously replicated job queue By default when a new job is added it is replicated to W nodes before the client gets an acknowledgement about the job being added W nodes can fail and the message will still be delivered What is W by default When I add a job without the REPLICATE parameter to a cluster with nodes job info gives me repl A cluster with node gives me repl By default REPLICATEminclustersize or REPLICATEclustersize This is important because if you dont specify REPLICATE on a cluster with nodes and is down you wont be able to add jobs ADDJOB doc doesnt specify the REPLICATE default value and behavior REPLICATE count is the number of nodes the job should be replicated to The anchor text in the README is also wrong Should be addjob instead of addjobqueue Why is the syntax of command and info different REPLICATE in command repl in info Lowercase and shorter word The version has not been updated for a long timeso When the author decide to publish the stable version and if it will exist the new version I add a job with ADDJOB in the disque localhost addjob test yaya the scrreen console that D c fBAZ uyDERGtv ybjIz a A a then I exec the getjob I get this job I exec the command qlen the result returns or empty Whether I need to exec the FASTJOB or ACKJOB to GC this channel in disque after I exec GETJOB in the disqueconf file there is a section which can control the memory of disque process Note on units when memory size is needed it is possible to specify it in the usual form of k GB M and so forth k bytes kb bytes m bytes mb bytes g bytes gb bytes units are case insensitive so GB Gb gB are all the same Is it related to how much memory a disqueprocess can use If yes how to increase memory size that can be used by disque process If no is there any cap on the maxmemoryused by disque Given the cluster of nodes shouldnt the QLEN return the same results regardless the node being asked In my tests only original node returns proper queue length but GETJOB on different node still works properly rediscli h eu queue p addjob testqueue testjob D bdf f qZjI HgYKs vP ZWSeAANbK a rediscli h eu queue p qlen testqueue integer WHY rediscli h eu queue p qlen testqueue integer rediscli h eu queue p qlen testqueue integer rediscli h eu queue p getjob from testqueue testqueue D bdf f qZjI HgYKs vP ZWSeAANbK a testjob 