I was hoping to resolve my sourcerootrelative absolute import paths by marking the source root directly as a source or resource root but this does not seem to be supported It looks like you support a couple of explicit source roots In other languages eg JavascriptNodejs you can persuade intellij to resolve absolute imports by marking a directory as a source root It looks like an incantation like java VirtualFile moduleSourceRoot ProjectRootManagergetInstanceprojectgetFileIndexgetSourceRootForFilevirtualFileOrDirectory In fact looking at you implementation I think if you just replaced the line with a version of the above it might work Hello not enough comment syntax support Right now Id like to be able to change function name and class names colors Because my Monokai theme makes the solidity file look very bland Only colors are used and makes coding difficult because Ive spent years on Monokai in other languages For example in OwnabletokentransferOwnership plugin doesnt suggest to import Ownablesol for example from here appealDisputes disputeID arbitratorappealCostappealDisputes disputeID appealDisputeID extraData I think the same applies to other expressions access array item by index etc Every time I use the solidity plugin to compile the project it does a full compiling of everything It would be cool it only compiles the affected smart contracts to significantly reduce the compilation time Stacktrace comintellijdiagnosticPluginException comintellijopenapiactionSystemDefaultActionGroup myGroupId group with id BuildMenu isnt registered action will be added to the Other group Plugin mesercesolidity at comintellijopenapiactionSystemimplActionManagerImplreportActionErrorActionManagerImpljava at comintellijopenapiactionSystemimplActionManagerImplreportActionErrorActionManagerImpljava at comintellijopenapiactionSystemimplActionManagerImplgetParentGroupActionManagerImpljava at comintellijopenapiactionSystemimplActionManagerImplprocessAddToGroupNodeActionManagerImpljava at comintellijopenapiactionSystemimplActionManagerImplprocessGroupElementActionManagerImpljava at comintellijopenapiactionSystemimplActionManagerImplprocessActionsChildElementActionManagerImpljava at comintellijopenapiactionSystemimplActionManagerImplregisterPluginActionsActionManagerImpljava at comintellijopenapiactionSystemimplActionManagerImplinitActionManagerImpljava at sunreflectNativeConstructorAccessorImplnewInstance Native Method at sunreflectNativeConstructorAccessorImplnewInstanceNativeConstructorAccessorImpljava at sunreflectDelegatingConstructorAccessorImplnewInstanceDelegatingConstructorAccessorImpljava at javalangreflectConstructornewInstanceConstructorjava at orgpicocontainerdefaultsInstantiatingComponentAdapternewInstanceInstantiatingComponentAdapterjava at comintellijutilpicoCachingConstructorInjectionComponentAdapterdoGetComponentInstanceCachingConstructorInjectionComponentAdapterjava at comintellijutilpicoCachingConstructorInjectionComponentAdapterinstantiateGuardedCachingConstructorInjectionComponentAdapterjava at comintellijutilpicoCachingConstructorInjectionComponentAdaptergetComponentInstanceCachingConstructorInjectionComponentAdapterjava at comintellijopenapicomponentsimplComponentManagerImplComponentConfigComponentAdaptergetComponentInstanceComponentManagerImpljava at comintellijutilpicoDefaultPicoContainergetLocalInstanceDefaultPicoContainerjava at comintellijutilpicoDefaultPicoContainergetComponentInstanceDefaultPicoContainerjava at orgpicocontainerdefaultsBasicComponentParameterresolveInstanceBasicComponentParameterjava at orgpicocontainerdefaultsComponentParameterresolveInstanceComponentParameterjava at comintellijutilpicoCachingConstructorInjectionComponentAdaptergetConstructorArgumentsCachingConstructorInjectionComponentAdapterjava at comintellijutilpicoCachingConstructorInjectionComponentAdapterdoGetComponentInstanceCachingConstructorInjectionComponentAdapterjava at comintellijutilpicoCachingConstructorInjectionComponentAdapterinstantiateGuardedCachingConstructorInjectionComponentAdapterjava at comintellijutilpicoCachingConstructorInjectionComponentAdaptergetComponentInstanceCachingConstructorInjectionComponentAdapterjava at comintellijopenapicomponentsimplServiceManagerImplMyComponentAdaptergetComponentInstanceServiceManagerImpljava at comintellijutilpicoDefaultPicoContainergetLocalInstanceDefaultPicoContainerjava at comintellijutilpicoDefaultPicoContainergetComponentInstanceDefaultPicoContainerjava at orgpicocontainerdefaultsBasicComponentParameterresolveInstanceBasicComponentParameterjava at orgpicocontainerdefaultsComponentParameterresolveInstanceComponentParameterjava at comintellijutilpicoCachingConstructorInjectionComponentAdaptergetConstructorArgumentsCachingConstructorInjectionComponentAdapterjava at comintellijutilpicoCachingConstructorInjectionComponentAdapterdoGetComponentInstanceCachingConstructorInjectionComponentAdapterjava at comintellijutilpicoCachingConstructorInjectionComponentAdapterinstantiateGuardedCachingConstructorInjectionComponentAdapterjava at comintellijutilpicoCachingConstructorInjectionComponentAdaptergetComponentInstanceCachingConstructorInjectionComponentAdapterjava at comintellijopenapicomponentsimplComponentManagerImplComponentConfigComponentAdaptergetComponentInstanceComponentManagerImpljava at comintellijopenapicomponentsimplComponentManagerImplcreateComponentsComponentManagerImpljava at comintellijopenapiapplicationimplApplicationImpllambdacreateComponents ApplicationImpljava at comintellijopenapiprogressimplCoreProgressManagerlambdarunProcess CoreProgressManagerjava at comintellijopenapiprogressimplCoreProgressManagerregisterIndicatorAndRunCoreProgressManagerjava at comintellijopenapiprogressimplCoreProgressManagerexecuteProcessUnderProgressCoreProgressManagerjava at comintellijopenapiprogressimplProgressManagerImplexecuteProcessUnderProgressProgressManagerImpljava at comintellijopenapiprogressimplCoreProgressManagerrunProcessCoreProgressManagerjava at comintellijopenapiapplicationimplApplicationImplcreateComponentsApplicationImpljava at comintellijopenapicomponentsimplComponentManagerImplinitComponentManagerImpljava at comintellijopenapiapplicationimplApplicationImplloadApplicationImpljava at comintellijopenapiapplicationimplApplicationImplloadApplicationImpljava at comintellijideaIdeaApplicationrunIdeaApplicationjava at comintellijideaIdeaApplicationlambdainitApplication IdeaApplicationjava at javaawteventInvocationEventdispatchInvocationEventjava at javaawtEventQueuedispatchEventImplEventQueuejava at javaawtEventQueueaccess EventQueuejava at javaawtEventQueue runEventQueuejava at javaawtEventQueue runEventQueuejava at javasecurityAccessControllerdoPrivilegedNative Method at javasecurityProtectionDomainJavaSecurityAccessImpldoIntersectionPrivilegeProtectionDomainjava at javaawtEventQueuedispatchEventEventQueuejava at comintellijideIdeEventQueuedispatchEventIdeEventQueuejava at javaawtEventDispatchThreadpumpOneEventForFiltersEventDispatchThreadjava at javaawtEventDispatchThreadpumpEventsForFilterEventDispatchThreadjava at javaawtEventDispatchThreadpumpEventsForHierarchyEventDispatchThreadjava at javaawtEventDispatchThreadpumpEventsEventDispatchThreadjava at javaawtEventDispatchThreadpumpEventsEventDispatchThreadjava at javaawtEventDispatchThreadrunEventDispatchThreadjava IDE version WebStorm EAP Build WS built on October WebStorm EAP User Expiration date November JRE release b amd JVM OpenJDK Bit Server VM by JetBrains sro Windows Plugin version v I was experimenting with the native EthereumJ Wrapper generator and noticed that the generated Java classes do not contain functions in a smart contracts super classes according to Will check where importaware version can be used and will post PR 