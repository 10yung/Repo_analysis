 addresses starts to include the importnb machinery in the ipynb repo importnb has features that address a few open issues In the short term should we include both ipynb and importnb in the namespace Should we change importnb to ipynb or retain importnb importnb is a newer and better version of this package that does the same things but is more maintained I spoke to tonyfast and there is interest in making this happen It will help adoption and keep this project moving forward Things to do Import contents of that git repo to here preserving all histories Add maintainers of importnb to this repo Add maintainers of importnb to pypi Make an announcement How about python with ipynbimporterfullTrue or defsTrue import mynotebook For example it would allow to specify options like python with ipynbimporterignoreerrorsTrue import mynotebook Also we may add the ability to write python import ipynbfinder import nb import nb I can make a PR if its ok In one notebook en ruipynb I create function def ruchar return In another notebook I import first notebook and call ruchar from ipynbfsfullen ru import ruchar and I get Its really wierd that when the source notebook has the magic cell funcction matplotlib inline statement the from ipynbfsdefsoneeda import guessage throws an error citing the same The license requires that all copies of the software include the license This makes sure the license is included in the wheels See the wheel documentation here for more information Hi I found that under certain circumstances package is not defined and hence FSFinder has no packageprefix set This leads to an error when trying to import a notebook Can it be that this is because package is expected to be the same as specparent beginning with Python Anyway relying on package seems to be a risk Best Jens Henrik python sitepackagesipynb py eggipynbfsfinderpy in findspecselfipynbfsfinderFSFinder object fullnameipynbfsfulljobsubmit path sitepackagesipynb py eggipynbfsfull targetNone Claims modules that are under ipynbfs if fullnamestartswithselfpackageprefix fullnamestartswith builtin method startswith of str object at x f a selfpackageprefix None for path in selfgetpathsfullname if ospathexistspath TypeError startswith first arg must be str or a tuple of str not NoneType Im in JupyterLab with two notebooks open one of which is importing a function from the other toolsipynb import ipynbfsdefstools However it doesnt seem to pick up changes from the other one even when I rerun the cell containing the import However if I import importlib importlibreloadipynbfsdefstools Then it does indeed pick it up changes each time Unfortunately this doesnt work for the from X import Y style since the reference to the module containing the imported item isnt in scope to pass to reload Is it possible that ipynb could watch timestamps on the imported files and handle this under the hood when the imported file changes Thanks for a great project Hi I fail to load a book due to an image in a MD cell I have a small notebook mylibipynb Cell Python python api var Cell MD markdown alt text imagessystemmappng Title the below also does not work img srcimagessystemmappng width alignleft And a notebook importing python import ipynbfsdefsmylib When running this I get python File unknown line alt text imagessystemmappng Title SyntaxError invalid syntax This is OSX Python Packages appdirs appnope attrs Automat awscli bleach botocore cffi click colorama constantly cryptography cssselect cycler decorator docutils entrypoints etxmlfile excelmodellinghelper Flask FlaskSocketIO googleapipythonclient html lib httplib idna incremental ipykernel ipynb ipython ipythongenutils ipywidgets itsdangerous jdcal Jinja jmespath jsonschema jupyter jupyterclient jupytercms jupyterconsole jupytercore lxml MarkupSafe matplotlib mistune mpmath nbconvert nbformat networkx nose notebook numpy oauth client olefile onedrivesdk openpyxl packaging pandas pandoc b pandocfilters parsel patsy pbr pexpect pickleshare Pillow ply prompttoolkit ptyprocess pyasn pyasn modules pycparser PyDispatcher pydotng pydotplus Pygments pygraphviz pyOpenSSL pypandoc pyparsing PyQt pyspark hadoop pythondateutil pythonengineio pythonsocketio pytz PyYAML pyzmq qtconsole queuelib requests rsa s transfer scipy Scrapy serviceidentity simplegeneric simplejson sip six statsmodels stevedore sympy tabulate terminado testpath tornado traitlets Twisted tzlocal uritemplate virtualenv virtualenvclone virtualenvwrapper w lib wcwidth webencodings Werkzeug Whoosh widgetsnbextension xarray xlrd xlwt zopeinterface Many thanks