In the Range of Motion Tasks the spoken instruction is currently set to the task title which is simply Range of Motion This should instead be the task instruction With the new release of the RKCK Website the API Documentation that was previously published is no longer available Is there a new location for this information In certain case which I have not yet been able to identify the labels go out of bounds as shown below Im in the process of analysing the code to find where the issue may be Any Ideas OutOfBounds The RangeOfMotion tasks are not including a reference to a ORKFileResult in the step results This means that the file cannot be retrieved Based on current documentation it seems that simply providing an ORKRecorderConfiguration as the RoM task does should be sufficient to do this However although the file is written the reference is not included in step results Any suggestions Hello Im a developer collaborating with doctors to develop a game that reinforces ideal methods for keeping asthma under control The doctors intend to conduct a study of of their child patients at the beginning of next year to determine how effective the game is at achieving its goal The doctors would prefer if Patients could load the game onto their own devices so they can play in between doctors visits The application would time out and no longer be available on patient devices after a set period of time weeks The game has been developed in the Unity engine Is it possible to meet the two above criteria while launching a Unity developed gamed from researchKit maybe as a task If not are there other avenues we can explore to meet the needs of this study Any assistance you could offer would be greatly appreciated Thank you in advance Sincerely Anthony Hi guys We like ResearchKit and we used to use it in the past Wed like to use it again The most important thing stopped us from using it was that ResearchKit doesnt a flexible skin Although you can change tint color and there are some classes in skin folders but it doesnt expose an API to change it from outside of framework ie use a different font for ORKTitleLabel or more rounded Navigation button at bottom So one way to go to fork it and change the skin classes including ORKTitleLabel and etc However a better way to go and keep it more near to fork is to make the skin more flexible and contribute back to the project so that everybody can take advantage It would be great if I hear from you guys if you know a good solution to achieve this Just as a side note we have a couple of iOS developers that is already interested to contribute to OSS projects Thanks M solves the initializer instancetypeinitWithTaskidORKTasktask restorationDataNSData data delegateidORKTaskViewControllerDelegatedelegate errorNSError autoreleasing errorOut takes an optional restorationData as a parameter but since the annotation is missing one cannot pass an optional restorationData variable from Swift The text Quickly shake the device when the blue circle appears is getting clipped as becuase its been assigned to ORKTitleLabel which is restricted to lines So modified the number of lines to The scrollCellToVisible method doesnt appear to work any longer I used the keyboard notifications to scroll the tableView Only issue that I can find is that the headerView jiggles Ive seen issues with this online but no good results This appears to have been a problem since iOS Also removed an extraneous constraint on the FooterView for the Next button