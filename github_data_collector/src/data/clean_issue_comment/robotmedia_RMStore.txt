Hey Weve seen that there havent been any updates for quite some time Does it still work on iOS Does it support subscriptions still on the latest iOS Wed love to use RMStore as it has worked out perfectly for us in the past Theres a very nasty logical flaw in RMAppReceipts containsActiveAutoRenewableSubscriptionOfProductIdentifierforDate method This method first sorts through the receipt records looking for the newest one using the expiration date and then only checks that single record against the given date One major problem with this is that the reallife production App Store receipts sometimes have renewal records from the future in them This means if you use the current date or a date from a few hours ago or yesterday or whatever as your reference date this method will first find the newest possible record which is sometimes one that has already been generated for the NEXT billing period It will then check if the date comes after that records start date which of course it does not It then erroneously returns NO I posted a long thread on twitter about my adventures tracking this down here If not retained on tvOS will be always released and the delegate wont be called Trying to compile an app in for project catalyst is showing these issues Frameworks compiled for iOS only img width altScreen Shot at AM src In development XCode iOS Im able to use RMAppReceipt to verify autorenewing subscriptions just fine using RMAppReceipt appReceipt RMAppReceipt bundleReceipt if appReceipt isActive appReceipt containsActiveAutoRenewableSubscriptionOfProductIdentifier forDate NSDate date if isActive NSLogPatronSignupViewController Got a list of subscriptions a subscription IS active Restored else if receipt does not contain an active subscription NSLogPatronSignupViewController Got a list of purchases but Subscription NOT active However when I use TestFlight to beta test the app the system can never find the autorenewing subscription after Ive purchased it in TestFlight purchasing in TestFlight works fine in TestFlight too Is there something fundamentally different that I should be aware of when it comes to purchases products RMStore and TestFlight and Sandbox behaviors Thx Fixes the markdown formatting for section headers in readme Change dependency from OpenSSL to OpenSSLUniversal If we use OpenSSL as a dependency an error will occur when running pod install I suggest to change to OpenSSLUniversal I tested with my application on AppStore and it works perfect while iOS its okbut iOS cant I have to change the prefix for my AppID to my Team AppIDs prefix But according to this technical document this is going to cause issues for apps that use Keychain A onetime loss in keychain data will occur if you switch your App ID prefix For apps utilizing the Keychain Services APIs changing the App ID prefix of an existing app will have implications for your app that you should be aware of Every keychain item in iOS contains an attribute called the keychain access group An iOS app can only access those keychain items it has permission to This permission comes from the code signing entitlements stamped into the app when it is signed using your current App ID prefix iOS has one keychain and one keychain only Access to individual items is gated by their access group By default an app can only access keychain items with the keychain access group matching the applicationidentifier code signing entitlement However if you would like to share keychain items amongst your apps you can add a custom keychainaccessgroup code signing entitlement that specifies an array of keychain access groups that the app can access However if your app is using one or more custom keychainaccessgroups then if you change your App ID prefix all of your custom keychainaccessgroups will be orphaned and you will no longer be able to access them This may have only minor implications in some cases For example if your keychain usage is modest it might not be a big deal for you to make a change apps that simply store a user password in the keychain for convenience may decide to change their App ID prefix to their Team ID based App ID prefix at the small cost of requiring the user to reenter their password one more time I dont really understand much about Keychain but I know that RMStore uses it and my app uses RMStore and when the AppID prefix is changed it will change all apps that have already been deployed I know this isnt an issue so much as begging for someone to help me but I cant figure out if changing the AppID prefix will cause the app to crash because of RMStore or if the purchases wont be able to be restored or if something else terrible will happen If anyone at all has any idea what this code is doing with Keychain and what the consequences will likely be of A onetime loss in keychain data I would appreciate so much if you could share any insights with me Thanks in advance to anyone who is moved to answer I am a lone developer with no one to ask questions of and I am really hurting with this right now