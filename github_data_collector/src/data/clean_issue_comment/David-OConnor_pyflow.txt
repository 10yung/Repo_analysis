Hello Now pyflow init generates LICENSE which I dont think is useful This is because I create license file on githubcom and empty LICENSE makes it unavailable I have two alternative ideas as follows pyflow init does not create LICENSE pyflow init make user choose using license including nothing and generates it as users choose As you know cargo new does not create LICENSE for the first idea is sufficient I think Please think on it Regards With a fresh project specifying only pyversion env RUSTBACKTRACEfull pyflow Please enter the number corresponding to your Linux distro or newer Ubuntu Debian SUSE Arch Kali etc Older Centos Redhat Fedora older versions of distros listed in option Installing Python Setting up Python thread main panicked at Timed out waiting for venv to be created AliasError details Timed out attempting to create a directory srclibcoreresultrs stack backtrace x c bba unknown x c b c corefmtwriteh edf dd a c c x c c unknown x c e unknown x c e unknown x c ee stdpanickingrustpanicwithhookh f da x c e e unknown x c e d rustbeginunwind x c b e a corepanickingpanicfmth ce bc f x c b f coreresultunwrapfailedha b e f ba x c dc unknown x c fd b b unknown x c ffa unknown x c ed unknown x c e unknown x c c a rustmaybecatchpanic x c f d stdrtlangstartinternalh d f fe b x c c unknown x f dc e libcstartmain x c f dc unknown x unknown tree pypackages pypackages lib directories files Environment Debian pyflow binary download from releases When dependency is a source only distribution I got error Here is a procedure to reproduce it pyflow OS Linux Mint tmp pyflow new proj Please enter the Python version for this project eg Created a new Python project named proj tmp cd proj tmpproj master RUSTBACKTRACEfull pyflow install ifaddr Installing ifaddr thread main panicked at Problem running setuppy bdistwheel Os code kind NotFound message No such file or directory srclibcoreresultrs stack backtrace x d b daba unknown x d b c corefmtwriteh edf dd a c c x d b d c unknown x d b dd unknown x d b dd unknown x d b dde stdpanickingrustpanicwithhookh f da x d b dd e unknown x d b dd d rustbeginunwind x d b ffe a corepanickingpanicfmth ce bc f x d b fff coreresultunwrapfailedha b e f ba x d ae unknown x d ae f unknown x d ae d unknown x d ae dd unknown x d b dd unknown x d b e c a rustmaybecatchpanic x d b de d stdrtlangstartinternalh d f fe b x d ae c unknown x f b libcstartmain x d ad dc unknown x unknown tmpproj master Reading the Readme the point about pyflow using a cache stood out to me Pip does it as well on POSIX systems look at cachepipwheels Was there a reason its not used for pyflow Be on git master Make a script apy Python requires fonttools ufo import fontToolsufoLib pyflow script apy thread main panicked at Problem opening the Python script file Os code kind NotFound message No such file or directory srclibcoreresultrs note run with RUSTBACKTRACE environment variable to display a backtrace printlndebugging reveals filename in mainrs to be apy Looks like someone stepped on the dot From pyflow new aaa cd aaa pyflow install ufoLib this will install fonttools ufo Add fonttools version extras ufo lxml unicode to the pyprojecttoml file pyflow install What happened nothing What I expected the lxml and on Python unicodedata dependency are installed in addition to the ufo stuff Hello First issue posted there so tell me if I need to edit its description or title So I just want to be able to pull dependencies from my own artifactory or any other pypi clone I would own from custom python builds installation to my own libraries I would love to contribute and help you do it if youre ok with it Thanks for reading toolpyflowdependencies pywebview git causes pyflow install thread main panicked at Problem parsing Os in extras openbsd src deptypesrs because of installrequires PyQt sysplatform openbsd The point is that Im running pyflow in Windows Given that sysplatform is built dynamically in most POSIX systems as are other PEP s environment markers I think that a besteffort parsing of installrequires would be a more resilient approach Thank you for your work Python is greatly in need of tools like this I m using Fedora and after creating a new project I was asked the following bash pyflow install aiohttp Found multiple compatible Python versions Please enter the number associated with the one you d like to use python python python Pyflow could detect it s linking to the same version Maybe it could even see if it s about symlink to the same binary And then not ask this question I installed blackpflow install dev black and set pythonautoCompleteextraPaths pypackages lib but VSCode formatter did not work Setting black path to pypackages binblack or pypackages libblack has no effects Are there any workarounds Note that pflow black works as expected