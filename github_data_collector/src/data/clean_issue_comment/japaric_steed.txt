None I just ran into this issue trying to build in Arch using the lld strategy eg not Dockercross Im trying to compile steed itself not a dependent crate Note The redox issue linked to seems to be closed So Im assuming we still need to use naiveralloc I edited Xargotoml per discussion but it didnt quite work toml dependencies collections rand dependenciesstd defaultfeatures false features naiveralloc dependenciescompilerbuiltins features mem stage That config still yielded a similar error error Package ralloc v b bac does not have these features allocator Instead I fiddled with Cargotoml to try building with naivealloc toml package This is NOT an official Rust project but since most code will come from the rustlangrust repo it makes sense to use this author authors The Rust Project Developers name std version dependencies sc dependenciesralloc defaultfeatures false features allocator optional true git dependenciesnaiveralloc optional true path naiveralloc features default naiveralloc profilerelease lto true Then I tried building with xargo build The output error failed to load source for a dependency on collections Caused by Unable to update filehomecolemanrustuptoolchainsnightly x unknownlinuxgnulibrustlibsrcrustsrclibcollections Caused by failed to read homecolemanrustuptoolchainsnightlyx unknownlinuxgnulibrustlibsrcrustsrclibcollectionsCargoto ml Caused by No such file or directory os error error cargo build release manifestpath tmpxargo KcG oOf bp oCargotoml target x unknownlinuxgnu p collections failed with exit code Some note run with RUSTBACKTRACE for a backtrace Id like to set up a development environment for steed but Im not quite sure how to get past this compiler error Any pointers Im guessing the entire rand folder can be deleted still contains randreaderrs but I left it for now since it wasnt removed in rustsrclibstd yet Rust lang commit bc f b b e a d c ca d d c d fe xargo build throws an error while compiling ralloc dependency Compiling ralloc v error E feature has been removed homebosscargogitcheckoutsralloc ee a f ba csrclibrs featureallocator constfn coreintrinsics stmtexprattributes droptypesinconst error The attribute allocator is currently unknown to the compiler and may have meaning added to it in the future see issue homebosscargogitcheckoutsralloc ee a f ba csrclibrs cfgattrfeature allocator allocator help add featurecustomattribute to the crate attributes to enable error aborting due to previous errors error Could not compile ralloc Related issue Currently steed source tree is based on some mix of rusts libstd sources manually handpicked at different periods of time Copying files onebyone and maintaining tree uptodate consumes time There were several breakages recently that required copying changes from Rust master branch to steed In instead of maintaining source parity this way I propose to rebase steed changes on top of libstd I tried to make a proofofconcept extracted libstd out of rust master branch moved some changes from steed and I was able to compile static hello world example successfully It works great Here is a git command that extracts libstd from Rust sources git filterbranch pruneempty subdirectoryfilter srclibstd git filterbranch f treefilter mkdir p src mv src mv srcCargotoml true Developing steed on top of upstream libstd has following advantages bringing upstream changes simplified and becomes automatic it is much easier to see delta between upstream libstd and steed Keeping this delta small will help in the future when merging libcless support back to upstream Currently the mutex is just commented out which is bad because we now do have threads This code Rust fn main use stdioBufRead BufReader let buf vec u let reader BufReadernew buf segfaults at x in coreptrwriteu dst x error Cannot access memory at address x src at homeusovrustuptoolchainsnightly x unknownlinuxgnulibrustlibsrcrustsrclibcoreptrrs intrinsicsmovevalinit mut dst src Not a priority either needs a working pthreaddetach