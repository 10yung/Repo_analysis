I have a script running every second by the bitbar app and the Bitbar is leaking a port per execution Then bitbar crashes once it cannot get a port any more Following lines are crash log from console app Process BitBar Path ApplicationsBitBarappContentsMacOSBitBar Identifier commatryerBitBar Version Code Type X Native Parent Process Responsible BitBar User ID DateTime OS Version Mac OS X C Report Version Anonymous UUID C EA A F A C E ABF C Time Awake Since Boot seconds System Integrity Protection enabled Crashed Thread Dispatch queue comapplerootdefaultqos Exception Type EXCCRASH SIGABRT Exception Codes x x Exception Note EXCCORPSENOTIFY Application Specific Information Terminating app due to uncaught exception NSInvalidArgumentException reason NSRunLoop addPortforMode port argument cannot be nil abort called terminating with uncaught exception of type NSException Application Specific Backtrace CoreFoundation x fff ab exceptionPreprocess libobjcAdylib x fff bd objcexceptionthrow Foundation x fff f fce NSRunLoopNSRunLoop addPortforMode Foundation x fff f ed NSConcreteTask waitUntilExit BitBar x ec ExecutablePlugin refreshContentByExecutingCommand BitBar x ecca ExecutablePlugin refresh blockinvoke libdispatchdylib x fff ee dispatchcallblockandrelease libdispatchdylib x fff eea e dispatchclientcallout libdispatchdylib x fff eec dispatchqueueoverrideinvoke libdispatchdylib x fff ef e dispatchrootqueuedrain libdispatchdylib x fff ef f dispatchworkerthread libsystempthreaddylib x fff b pthreadwqthread libsystempthreaddylib x fff startwqthread I thought Id try writing a plugin in JXA rather than Nodejs since its built for dealing more closely with the OS and saves me writing a bash plugin that also contains JXA It seems to work although its a little funky in the way it outputs my main problem with it however is that it displays this little icon ahead of the item and Im not sure if I can do anything to remove this Presumably its down to the way the output works all the plugin logs display in the dropdown and the overall return value is what appears in the menu bar worth also noting this is the opposite to how it displays when run in terminal Im not sure how to remedy this and whether its possible to easily remedy but Id be interested to hear what you all think Heres the example plugin code usrbinenv osascript l JavaScript function runargv consoleloghello from jxa return jxa test And the plugin in action Screenshot at am When you set the alternate specifically to false the line is not shown I understand that normally you wouldn t add alternate to a line that isn t in fact an alternate But this bug occurred to me when reading my entries from a json file and setting the parameters automatically But I guess it should be fixed anyway because developers will wonder why items are not shown if it is set to false Say my plugin gives the output Foo Bar The default seems to be for Bar to have grey text I think thats a bit hard to read for my purposes so I want to do Barcolorblack But then if I switch to dark mode its unreadable Here are some mutually exclusive ideas for how to improve the situation Change the default to be black in light mode and white in dark mode instead of this light grey Allow plugins to specify you want high contrast eg Barcolorhighcontrast which would make the text black or white depending on the mode Allow plugins to specify different values for light and dark mode eg Barlightmodecolorblack darkmodecolorwhite Docs says I need to have direct path to nodejs executable in shebang but for nodejs installed with nvm the path is similar to Users username nvmversionsnodev binnode which is unique for every user I tried to create bash script bash usrbinenv bash nwhich node n runnerjs But which does not return the result Any idea how to run nodejs scripts in that case Is it possible to somehow run scripts with user environment Dear community and maintainers of this project Similar to any other user of BitBar I really like this application and use it daily for many things What I am wondering about though is its continued development and if its still actively maintained There is a lot of open PRs and there seem to be some forks floating around which have advanced further than the current repository Does anyone have a good overview of or knowledge about which forks to use when which are active in their development or perhaps even are official successors to the current project kind regards I have a line in my plugin Refresh bashpython UserszeeviCloudbitbarmintmintgetDatapy terminalfalse refreshtrue which does NOT run when clicked It only runs if I set terminaltrue Ive written a plugin in python that uses MintAPI which calls chromedriver The script works fine from shell but from bitbar it throws an error Permission denied chromedriver Anyone know why Hi All Id like to start a watcher process fswatch from a Bitbar shell script However because the process doesnt exit Bitbar cant handle the remainder of the script properly Ive tried forking a variety of forking tricks using Im not an expert but this doesnt seem to help Bitbar always waits for the process to finish Any ideas Here is the script The initial echo commands dont render properly as long as the fswatch process is running Im omitting some variables for brevitys sake Thanks echo echo echo Stop Processing size bashscript param pause terminalfalse export PATHHOMEbinusrlocalbinLibraryTeXtexbinPATH WATCHDIRUsersxxxTempLaTexCompile LATEXCMDUsersxxxLibraryScriptssynctexmksh Kill any existing watch process or bitbar will continue spawning them whenever the script loads ps aux grep fswatch grep tex awk print xargs kill CMDfswatch event Updated WATCHDIRtex xargs n I LATEXCMD eval CMD Does the bold ANSI escape sequence not work in dropdowns in BitBar Im using u b m and it correctly bolds the text when printed to the console but not when it appears in the BitBar dropdown