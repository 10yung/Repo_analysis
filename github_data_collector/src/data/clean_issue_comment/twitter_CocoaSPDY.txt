during unittesting with the threadsanitizer on setLoggerLevel was flagged unnecessarily as a potential datarace sharedLoggerLevel is already marked volatile and the location of the data race indicated was a debug logging message Only see in the unit test The connectedMs field in the metadata is the time the request started relative to the time the connection started Because we dispatch the first request into the socket and THEN do the connection it is essentially for the first request and the total duration of that first request includes the TCP connection time Lets break out the TCP connection time into its own field Maybe consider then subtracting that time from the duration of the first request Server set window size is for speed so server dont send window update and setting feedback wind size in code initialSendWindowSize is update in SPDYSessionm sessionSendWindowSize not update but sending data use MINinitialSendWindowSizesessionSendWindowSize Right now we do a ping at the very beginning and store that value for the life of the connection We should update it periodically but first have to define exactly when how often like Inflation failed Aborting Frame bytes on wire bits bytes captured bits on interface Raw packet data Internet Protocol Version Src Dst Transmission Control Protocol Src Port Dst Port Seq Ack Len SPDY SYNREPLY Stream Error Header decompression failed Control frame Yes Version Type SYNREPLY Flags x Length Stream ID Header block a b fd f a f e Expert Info ErrorUndecoded Inflation failed Aborting Inflation failed Aborting Severity level Error Group Undecoded In allSPDYHeader of NSURLRequest SPDYURLRequestm NSMutableDictionary spdyHeaders NSMutableDictionary alloc initWithDictionary method selfHTTPMethod path path version HTTP host urlhost scheme urlscheme the host should is hostport host the hostport See RFC portion of the URL for this request eg wwwgooglecom This header is the same as the HTTP Host header When we visit get a sub request httpNSURLConnecction BOOLcanHandleRequestNSURLRequest request return YESso this is a valid request get a crash on NSDictionary allSPDYHeaderFields of NSURLRequestSPDYURLRequestm The reason is host is nil causes crash to initialize NSMutableDictionary Now I modify the code as follows NSMutableDictionary spdyHeaders NSMutableDictionary alloc initWithDictionary method selfHTTPMethod selfHTTPMethod GET path path path version HTTP host urlhost urlhost scheme urlscheme urlscheme I try to use CocoaSPDY visit our SPDY Proxy Server in my QQ Browser meet a bug Visit a redirect the reason is that we have a error pathn wscrid lost when we use urlpath NSDictionary allSPDYHeaderFields NSDictionary httpHeaders selfallHTTPHeaderFields NSURL url selfURL static NSSet invalidKeys static NSSet reservedKeys static dispatchoncet initialized dispatchonce initialized invalidKeys NSSet alloc initWithObjects connection keepalive proxyconnection transferencoding nil reservedKeys NSSet alloc initWithObjects method path version host scheme nil by rexbegin Error Visit a redirect the reason is that we have a error pathn wscrid lost when we use urlpath Reason Apple doc for urlpath If the path has a trailing slash it is stripped Solution NSString s NSLog given s NSURL url NSURL URLWithStrings NSString cocoaPath url path NSString cfPath NSStringCFBridgingReleaseCFURLCopyPathCFURLRefurl NSString cfstrictPath NSStringCFBridgingReleaseCFURLCopyStrictPathCFURLRefurl NULL NSLog cocoaPath cocoaPath NSLog cfPath cfPath NSLogcfstrictPath cfstrictPath Result given cocoaPath pathtoid cfPath pathtoid D cfstrictPath pathtoid D NSString escapedPath CFBridgingReleaseCFURLCreateStringByAddingPercentEscapes kCFAllocatorDefault bridge CFStringRefurlpath NULL CFSTR kCFStringEncodingUTF NSMutableString path NSMutableString alloc initWithStringescapedPath NSMutableString path NSMutableString alloc initWithStringNSStringCFBridgingReleaseCFURLCopyPathCFURLRefurl end NSString query urlquery if query path appendFormat query NSString fragment urlfragment if fragment path appendFormat fragment the test result as followed is one url test i am looking forward some person to give me some suggestions to solve the question the test Method is the same devicesnearly devices s probability to use common http request when app startup and s probability to use spdy requests circlegetUserHeaderhtml WIFIIPOD ms ms WIFIIPHONE ms ms WIFIIPHONE ms ms WIFIIPHONE ms ms WIFIIPHONE ms ms WIFIIPHONE ms ms WIFIIPHONE ms ms WIFIIPHONE ms ms WIFIIPHONE ms ms WIFIIPHONE ms ms WCDMAIPHONE ms ms LTEIPHONE ms ms LTEIPHONE ms ms LTEIPHONE ms ms LTEIPHONE ms ms LTEIPHONE ms ms HSDPAIPHONE ms ms EDGEIPHONE ms ms CDMAEVDOREVAIPHONE ms ms tReqs tDelays ms ms delay s s s s spdy http 