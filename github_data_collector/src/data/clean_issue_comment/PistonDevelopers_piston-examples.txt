Hello im trying to test polygon function and i got some problems with that Firstly my base code is like rust let polys while let Somee windownext windowdraw d e c g device clear g polygon polys ctransformtrans g for item in polys ellipse ellipsecircleitem item ctransformtrans g But output is something fails output Running the example imageexe triggers a Windows Security issue I am guessing this is being triggered by a library or something Wanted to start a paper trail for posterity Not sure if this maybe needs a mini investigation to see if this needs to be passed on to piston core or something to make sure unsafe code is not used just in case Dont want cargo or piston to get a bad name My system is a Linux Debian bits recently updated Tried helloworld first but my opengl version is well I think see glxinfo below so I changed it and it looks like that version works tried helloworldimagecube same error is thrown Example userinput works fine by simply changing opengl version down to V pre cargo run bin image font color FF b Compilingbfont pistonexamples v homebenDocumentsITrustpistonexamples font color FF b Finishedbfont dev unoptimized debuginfo targets in s font color FF b Runningbfont targetdebugimage thread aposmain apos panicked at aposcalled Resultunwrap on an Err value DescriptorInitPixelExport quotTarget quot None apos srclibcoreresultrs pre pre glxinfo name of display display screen direct rendering Yes server glx vendor string SGI server glx version string server glx extensions GLXARBcreatecontext GLXARBcreatecontextnoerror GLXARBcreatecontextprofile GLXARBfbconfigfloat GLXARBframebuffersRGB GLXARBmultisample GLXEXTcreatecontextes profile GLXEXTcreatecontextesprofile GLXEXTfbconfigpackedfloat GLXEXTframebuffersRGB GLXEXTimportcontext GLXEXTlibglvnd GLXEXTnoconfigcontext GLXEXTtexturefrompixmap GLXEXTvisualinfo GLXEXTvisualrating GLXINTELswapevent GLXMESAcopysubbuffer GLXOMLswapmethod GLXSGISmultisample GLXSGIXfbconfig GLXSGIXpbuffer GLXSGIXvisualselectgroup GLXSGImakecurrentread GLXSGIswapcontrol client glx vendor string Mesa Project and SGI client glx version string client glx extensions GLXARBcontextflushcontrol GLXARBcreatecontext GLXARBcreatecontextnoerror GLXARBcreatecontextprofile GLXARBcreatecontextrobustness GLXARBfbconfigfloat GLXARBframebuffersRGB GLXARBgetprocaddress GLXARBmultisample GLXEXTbufferage GLXEXTcreatecontextes profile GLXEXTcreatecontextesprofile GLXEXTfbconfigpackedfloat GLXEXTframebuffersRGB GLXEXTimportcontext GLXEXTtexturefrompixmap GLXEXTvisualinfo GLXEXTvisualrating GLXINTELswapevent GLXMESAcopysubbuffer GLXMESAmultithreadmakecurrent GLXMESAqueryrenderer GLXMESAswapcontrol GLXOMLswapmethod GLXOMLsynccontrol GLXSGISmultisample GLXSGIXfbconfig GLXSGIXpbuffer GLXSGIXvisualselectgroup GLXSGImakecurrentread GLXSGIswapcontrol GLXSGIvideosync GLX version GLX extensions GLXARBcreatecontext GLXARBcreatecontextnoerror GLXARBcreatecontextprofile GLXARBfbconfigfloat GLXARBframebuffersRGB GLXARBgetprocaddress GLXARBmultisample GLXEXTbufferage GLXEXTcreatecontextes profile GLXEXTcreatecontextesprofile GLXEXTfbconfigpackedfloat GLXEXTframebuffersRGB GLXEXTimportcontext GLXEXTtexturefrompixmap GLXEXTvisualinfo GLXEXTvisualrating GLXINTELswapevent GLXMESAcopysubbuffer GLXMESAqueryrenderer GLXMESAswapcontrol GLXOMLswapmethod GLXOMLsynccontrol GLXSGISmultisample GLXSGIXfbconfig GLXSGIXpbuffer GLXSGIXvisualselectgroup GLXSGImakecurrentread GLXSGIswapcontrol GLXSGIvideosync Extended renderer info GLXMESAqueryrenderer Vendor Intel Open Source Technology Center x Device Mesa DRI IntelR GM x MMXSSE x a Version Accelerated yes Video memory MB Unified memory yes Preferred profile compat x Max core profile version Max compat profile version Max GLES profile version Max GLES profile version OpenGL vendor string Intel Open Source Technology Center OpenGL renderer string Mesa DRI IntelR GM x MMXSSE OpenGL version string Mesa OpenGL shading language version string OpenGL extensions GL DFXtexturecompressionFXT GLAMDseamlesscubemappertexture GLAMDshadertrinaryminmax GLANGLEtexturecompressiondxt GLANGLEtexturecompressiondxt GLAPPLEobjectpurgeable GLAPPLEpackedpixels GLARBES compatibility GLARBarraysofarrays GLARBbufferstorage GLARBclearbufferobject GLARBcleartexture GLARBclipcontrol GLARBcolorbufferfloat GLARBcompressedtexturepixelstorage GLARBcopybuffer GLARBcopyimage GLARBdebugoutput GLARBdepthbufferfloat GLARBdepthclamp GLARBdepthtexture GLARBdrawbuffers GLARBdrawelementsbasevertex GLARBdrawinstanced GLARBexplicitattriblocation GLARBexplicituniformlocation GLARBfragmentcoordconventions GLARBfragmentprogram GLARBfragmentprogramshadow GLARBfragmentshader GLARBframebufferobject GLARBframebuffersRGB GLARBgetprogrambinary GLARBgettexturesubimage GLARBhalffloatpixel GLARBhalffloatvertex GLARBinstancedarrays GLARBinternalformatquery GLARBinternalformatquery GLARBinvalidatesubdata GLARBmapbufferalignment GLARBmapbufferrange GLARBmultibind GLARBmultisample GLARBmultitexture GLARBocclusionquery GLARBocclusionquery GLARBparallelshadercompile GLARBpixelbufferobject GLARBpointparameters GLARBpointsprite GLARBpolygonoffsetclamp GLARBprograminterfacequery GLARBprovokingvertex GLARBrobustness GLARBsamplerobjects GLARBseamlesscubemap GLARBseamlesscubemappertexture GLARBseparateshaderobjects GLARBshaderbitencoding GLARBshaderdrawparameters GLARBshadergroupvote GLARBshaderobjects GLARBshadertexturelod GLARBshadinglanguage GLARBshadinglanguagepacking GLARBshadow GLARBsync GLARBtexturebarrier GLARBtextureborderclamp GLARBtexturecompression GLARBtexturecompressionrgtc GLARBtexturecubemap GLARBtextureenvadd GLARBtextureenvcombine GLARBtextureenvcrossbar GLARBtextureenvdot GLARBtexturefilteranisotropic GLARBtexturefloat GLARBtexturemirrorclamptoedge GLARBtexturemirroredrepeat GLARBtexturenonpoweroftwo GLARBtexturerectangle GLARBtexturerg GLARBtexturergb a ui GLARBtexturestorage GLARBtextureswizzle GLARBtransposematrix GLARBvertexarraybgra GLARBvertexarrayobject GLARBvertexattribbinding GLARBvertexbufferobject GLARBvertexprogram GLARBvertexshader GLARBvertextype f f frev GLARBvertextype rev GLARBwindowpos GLATIblendequationseparate GLATIdrawbuffers GLATIseparatestencil GLATItextureenvcombine GLATItexturefloat GLEXTabgr GLEXTbgra GLEXTblendcolor GLEXTblendequationseparate GLEXTblendfuncseparate GLEXTblendminmax GLEXTblendsubtract GLEXTcompiledvertexarray GLEXTcopytexture GLEXTdrawbuffers GLEXTdrawinstanced GLEXTdrawrangeelements GLEXTfogcoord GLEXTframebufferblit GLEXTframebufferobject GLEXTframebuffersRGB GLEXTgpuprogramparameters GLEXTmultidrawarrays GLEXTpackeddepthstencil GLEXTpackedfloat GLEXTpackedpixels GLEXTpixelbufferobject GLEXTpointparameters GLEXTpolygonoffsetclamp GLEXTprovokingvertex GLEXTrescalenormal GLEXTsecondarycolor GLEXTseparatespecularcolor GLEXTshadowfuncs GLEXTstenciltwoside GLEXTstencilwrap GLEXTsubtexture GLEXTtexture GLEXTtexture D GLEXTtexturearray GLEXTtexturecompressiondxt GLEXTtexturecompressionrgtc GLEXTtexturecompressions tc GLEXTtexturecubemap GLEXTtextureedgeclamp GLEXTtextureenvadd GLEXTtextureenvcombine GLEXTtextureenvdot GLEXTtexturefilteranisotropic GLEXTtextureinteger GLEXTtexturelodbias GLEXTtextureobject GLEXTtexturerectangle GLEXTtexturesRGB GLEXTtexturesRGBR GLEXTtexturesRGBdecode GLEXTtexturesharedexponent GLEXTtexturesnorm GLEXTtextureswizzle GLEXTvertexarray GLEXTvertexarraybgra GLIBMmultimodedrawarrays GLIBMrasterposclip GLIBMtexturemirroredrepeat GLINGRblendfuncseparate GLKHRcontextflushcontrol GLKHRdebug GLKHRnoerror GLKHRparallelshadercompile GLKHRrobustness GLMESApackinvert GLMESAtexturesignedrgba GLMESAwindowpos GLNVblendsquare GLNVconditionalrender GLNVdepthclamp GLNVfogdistance GLNVlightmaxexponent GLNVpackeddepthstencil GLNVprimitiverestart GLNVtexgenreflection GLNVtexturebarrier GLNVtextureenvcombine GLNVtexturerectangle GLOESEGLimage GLOESreadformat GLS s tc GLSGISgeneratemipmap GLSGIStextureborderclamp GLSGIStextureedgeclamp GLSGIStexturelod GLSUNmultidrawarrays OpenGL ES profile version string OpenGL ES Mesa OpenGL ES profile shading language version string OpenGL ES GLSL ES OpenGL ES profile extensions GLANGLEtexturecompressiondxt GLANGLEtexturecompressiondxt GLAPPLEtexturemaxlevel GLEXTblendminmax GLEXTcompressedETC RGB subtexture GLEXTdepthclamp GLEXTdiscardframebuffer GLEXTdrawbuffers GLEXTdrawelementsbasevertex GLEXTfragdepth GLEXTmapbufferrange GLEXTmultidrawarrays GLEXTocclusionqueryboolean GLEXTpolygonoffsetclamp GLEXTreadformatbgra GLEXTrobustness GLEXTseparateshaderobjects GLEXTtextureborderclamp GLEXTtexturecompressiondxt GLEXTtexturecompressions tc GLEXTtexturecompressions tcsrgb GLEXTtexturefilteranisotropic GLEXTtextureformatBGRA GLEXTtexturerg GLEXTtexturetype REV GLEXTunpacksubimage GLKHRcontextflushcontrol GLKHRdebug GLKHRnoerror GLKHRparallelshadercompile GLKHRrobustness GLNVconditionalrender GLNVdrawbuffers GLNVfbocolorattachments GLNVreadbuffer GLNVreaddepth GLNVreaddepthstencil GLNVreadstencil GLOESEGLimage GLOESEGLimageexternal GLOESEGLsync GLOEScompressedETC RGB texture GLOESdepth GLOESdepthtexture GLOESdrawelementsbasevertex GLOESelementindexuint GLOESfborendermipmap GLOESgetprogrambinary GLOESmapbuffer GLOESpackeddepthstencil GLOESrequiredinternalformat GLOESrgb rgba GLOESstandardderivatives GLOESstencil GLOESsurfacelesscontext GLOEStexture D GLOEStextureborderclamp GLOEStexturefloat GLOEStexturefloatlinear GLOEStexturehalffloat GLOEStexturehalffloatlinear GLOEStexturenpot GLOESvertexarrayobject GLOESvertexhalffloat pre All other examples work fine The issue is resolved when the windowspawning iterators is changed to so its either a problem with the gfx library seems likely or an OS issue The gfxrs library has been deprecated anyway rustc stablex unknownlinuxgnu Linux generic Ubuntu Gettingstarted example wont build failed dependency x dl Output of cargo build follows Compiling memoffset v Compiling scopedthreadpool v Compiling numtraits v Compiling log v Compiling crossbeamutils v Compiling xmlrs v Compiling unreachable v Compiling procmacro v Compiling arrayvec v Compiling x dl v Compiling inflate v error nonreference pattern used to match a reference see issue homevxvcargoregistrysrcgithubcom ecc db ec x dl buildrs for lib pcname in librariesiter help consider using a reference lib pcname error aborting due to previous error error Could not compile x dl warning build failed waiting for other jobs to finish error build failed From reading through the examples and some of the library code I cannot find a way to render a rectangle in D with a shader applied Rectangles only seem to be able to render with solid colors Would it be possible to get a minimal example of rendering a simple rectangle with a shader applied Thanks On Linux Mint Cinnamon bit using rustc and cargo Cloning the repository and running cargo run bin binary name then closing the resulting window with mouse by clicking x results in the following panic thread main panicked at Failed to close input method XError description BadDrawable invalid Pixmap or Window parameter errorcode requestcode minorcode libcoreresultrs note Run with RUSTBACKTRACE for a backtrace Running with RUSTBACKTRACE results in the following stack backtrace stack backtrace stdsysunixbacktracetracingimpunwindbacktrace at libstdsysunixbacktracetracinggccsrs stdsyscommonbacktraceprint at libstdsyscommonbacktracers at libstdsyscommonbacktracers stdpanickingdefaulthookclosure at libstdpanickingrs stdpanickingdefaulthook at libstdpanickingrs stdpanickingrustpanicwithhook at libstdpanickingrs stdpanickingbeginpanicfmt at libstdpanickingrs rustbeginunwind at libstdpanickingrs corepanickingpanicfmt at libcorepanickingrs coreresultunwrapfailed at checkoutsrclibcoremacrosrs coreresultResultT Eexpect at checkoutsrclibcoreresultrs winitplatformplatformx utilIme as coreopsdropDropdrop at homemilesandcargoregistrysrcgithubcom ecc db ec winit srcplatformlinuxx utilrs coreptrdropinplace at checkoutsrclibcoreptrrs coreptrdropinplace at checkoutsrclibcoreptrrs stdcollectionshashtableRawTableK Vrevdropbuckets at checkoutsrclibstdcollectionshashtablers stdcollectionshashtableRawTableK V as coreopsdropDropdrop at checkoutsrclibstdcollectionshashtablers coreptrdropinplace at checkoutsrclibcoreptrrs coreptrdropinplace at checkoutsrclibcoreptrrs coreptrdropinplace at checkoutsrclibcoreptrrs coreptrdropinplace at checkoutsrclibcoreptrrs coreptrdropinplace at checkoutsrclibcoreptrrs coreptrdropinplace at checkoutsrclibcoreptrrs coreptrdropinplace at checkoutsrclibcoreptrrs coreptrdropinplace at checkoutsrclibcoreptrrs coreptrdropinplace at checkoutsrclibcoreptrrs spritemain at srcspriters stdrtlangstartclosure at checkoutsrclibstdrtrs stdpanickingtrydocall at libstdrtrs at libstdpanickingrs rustmaybecatchpanic at libpanicunwindlibrs stdrtlangstartinternal at libstdpanickingrs at libstdpanicrs at libstdrtrs stdrtlangstart at checkoutsrclibstdrtrs main libcstartmain start Checked helloworld drawstate sprite and paint All panics on clickclosing The rest are not tested OS MacOS Perhaps related to but a different error Running the multiwindow example in debug mode crashes after the windows are displayed briefly Release mode works as expected RUSTBACKTRACE cargo run bin multiwindow Finished dev unoptimized debuginfo targets in secs Running targetdebugmultiwindow thread main panicked at Error InvalidOperation executing command BindProgram Usersanrussellcargoregistrysrcgithubcom ecc db ec gfxdevicegl srclibrs stack backtrace stdsysimpbacktracetracingimpunwindbacktrace at srclibstdsysunixbacktracetracinggccsrs stdsyscommonbacktraceprint at srclibstdsyscommonbacktracers stdpanickingdefaulthookclosure at srclibstdsyscommonbacktracers at srclibstdpanickingrs stdpanickingdefaulthook at srclibstdpanickingrs stdpanickingbeginpanic at srclibstdpanickingrs stdpanickingbeginpanic at srclibstdpanickingrs stdpanickingtrydocall at srclibstdpanickingrs gfxdeviceglDeviceprocess at Usersanrussellcargoregistrysrcgithubcom ecc db ec gfxdevicegl srclibrs gfxdeviceglDeviceunbindtarget at Usersanrussellcargoregistrysrcgithubcom ecc db ec gfxdevicegl srclibrs gfxdeviceglDevicenofencesubmit at Usersanrussellcargoregistrysrcgithubcom ecc db ec gfxdevicegl srclibrs gfxdeviceglDevicetrackmappedgpuaccess at Usersanrussellcargoregistrysrcgithubcom ecc db ec gfxdevicegl srclibrs gfxencoderEncoderR Cflushnoreset at Usersanrussellcargoregistrysrcgithubcom ecc db ec gfx srcencoderrs gfxencoderEncoderR Cflush at Usersanrussellcargoregistrysrcgithubcom ecc db ec gfx srcencoderrs pistonwindowPistonWindowWdraw d at Usersanrussellcargoregistrysrcgithubcom ecc db ec pistonwindow srclibrs multiwindowmain at srcmultiwindowrs panicunwinddwarfehreadencodedpointer at srclibpanicunwindlibrs stdrandreaderReaderRngR as randRngfillbytes at srclibstdpanickingrs at srclibstdpanicrs at srclibstdrtrs multiwindowmainclosure I modified the image example to show a K jpg and running it shows first a black window for a second and then the image on a white background in GTK we could render the app completely before showing it is this possible with piston cargo build in userinput gives me an error note usrbinld cannot find lSDL collect error ld returned exit status can we run the examples without using sdl only using glutin edit the tiled example works userinput doesnt so let me rephrase this to fix the examples that currently need sdl