is this still support for ios and ios when i run it on my iphoneios it show lots of errors such as canOpenURL failed for URL youtube error This app is not allowed to query for scheme youtube do you know how could i get all the apps infos that user ever installed and now on installed on their iphone GitHub changed the way Markdown headings are parsed so this change fixes it See bryant readmesfix for more information Tackles bryant readmesfix While getting list of detected apps its giving memory warning every time i run the app FYI I am running iHasApp on my iPod touch with iOS Is there a way i could hook this onto phonegap Thank you I really appreciate the work done here so I hope I am not out of line with this question After calling the detectAppDictionariesWith I get the descriptions and icons I need to display the list but lose the most important part the URL I can use to start the app Any chance of putting that into the appDictionaries array so that I dont have to mess around with your code Thanks Chris Shortt How you maintain list of the apps How can I help you with this I am not sure if the iHasApp repository is the right place to collect the data I am thinking of but for offline research eg avoid conflicting URL schemes find callable apps of a genre one would need more data than a simple mapping between URL schemes and app ids Compared to the current schemeAppjson there should be a slightly enhanced repository one can eventually derive the simple mapping between URL schemes and app ids from In addition to these values this list should mirror basic data such as name bundle id version developer website genre supported devices keywords so even in case an app has been pulled off the app store the willing developer has the chance to detect apps that might be valuable for his purpose and contact the original developer What do you think should this repository be maintained as part of iHasApp I could also think of another authority to collect and maintain this data set On possible export could then be in the format of schemeAppjson But the vast amount of existing mappings are a great start As per my comment on Pull Request there are a number of URL schemes that belong to the System sms shoebox javascript prefs etc etc A number of URL schemes that belong to certain Authoritative apps fb should uniquely identify Facebook yet is implemented by others Similar to GoogleTwitterApple apps And a number of URL schemes that are common for whatever reason plusplus in Plus games crystal in Rovio games The soontobe Developer section will need some sort of Blacklist of URL schemes that will either be unidentifiable system and common schemes or only identify a single app authoritative schemes The dataset from my initial push was actually filtered down by way of of reviews and availability from an original collection of URL schemes Previously this dataset needed to be retrieved from the server and each additional scheme check takes ms so I did this filtering for the sake of bandwidth and speed Seeing as the current dataset adds only kB to a compiled app perhaps a limit on the number of URL schemes is unnecessary As an extreme example were we to collect URL schemes not only would the compressed file size jump to MB but the detection process itself would take X longer to complete Thoughts Tags regarding dataset HBehrens steipete 