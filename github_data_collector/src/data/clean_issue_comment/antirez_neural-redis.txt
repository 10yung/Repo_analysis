 This is my latest refactoring of neuralredis I did it to learnunderstand it and to use with The code for AVX and AVX still use unaligned memory because on some machine it doesnt work with aligned memory The random initialisation used in testsnnbenchmarkc wasnt working properly so I changed the it to have a better entropy Added a function Ann Js to generate a javascript function emulating the trained network also fixedchanged the generated TCL in An Tcl because it was broken Im still do not likeunderstand the way weightgradientpgradientdelta are indexed but I could not find a better working way till now This is here just in case it can be util to other people too Cheers Hello Im refactoring a bit nnch and I think I found a mistake in the calculation of the matrix index for weight gradient sgradient pgradient and delta define WEIGHTnetlij netlayer l weight jnetlayer l unitsi define GRADIENTnetlij netlayer l gradient jnetlayer l unitsi define SGRADIENTnetlij netlayer l sgradient jnetlayer l unitsi define PGRADIENTnetlij netlayer l pgradient jnetlayer l unitsi define DELTAnetlij netlayer l delta jnetlayer l unitsi Looking at the allocation code for them it seems that the correct way to index is to multiply units by i and then add j define WEIGHTnetlij netlayer l weight inetlayer l unitsj Attached are the refactored nnch so far compiles but doesnt seem to work properly The idea is to allocate units rounded up by SIMDF for alignment and be able to do full calculations directly using simd without left overs nnzip It seems that gcc cant optimise this so using simd here give us a good performance gain My workstation is running El Capitain Mac OS I have removed xcode and reinstalled from the App Store Still I get this error when trying to build What can be done Tested on two other machines upgrading the OS on one running Sierra and updated xcode The error changed to xo files built for newer OSX version than being linked Apparently the problem isnt in my compile environment but something is different about what is building the xo files maybe Hi I have set up a R client for Redis using rredis package and I am trying to create a model on the examples given in the documentation But when I use NROBSERVE it throws an error saying ERR invalid neural network input must be a valid float precision floating point number For example I am using iris dataset to fit the model NRcreate works fine NROBSERVE is throwing the issue I understand R does not have float datatype What is the correct way of doing it Dear antirez Thank you very much for sharing this amazing code And I have a problem to figure out or I can not sleep In function float AnnGlobalErrorstruct Ann net float desired Root Mean Square RMS error is used to record the loss which means thus I suppose in function AnnCalculateOutputErrorstruct Ann net float desired should be the derivation which means but in your real implementation it is like thislet n classification number And I do integration on your real implementation to get the real loss function can you explain this a little bit for me what is the real loss function in your code Fixed a small typo NROBSERVE doesnt reject the wrong number of arguments when in a MULTI Here Im running NROBSERVE with no arguments MULTI OK NROBSERVE QUEUED NROBSERVE QUEUED EXEC error ERR wrong number of arguments for nrobserve command error ERR wrong number of arguments for nrobserve command I would expect that if you run NROBSERVE you would receive an immediate error andor trigger an EXECABORT when running the EXEC command I created a docker with the redis unstable branch and neural redis installed in it I ran it on an AWS t micro instance and tried to create a neural network just to play with The docker crashed with the below bug report The machine is just too small to work with it REDIS BUG REPORT START Cut paste starting from here M Oct Redis crashed by signal M Oct Crashed running the instuction at x fd aaff c M Oct Failed assertion no assertion failed no file STACK TRACE EIP usrsrcneuralredisneuralredissoAnnSetDeltas x c x fd aaff c Backtrace redisserver logStackTrace x x da redisserver sigsegvHandler xa x libx linuxgnulibpthreadso xf d x fd ad a d usrsrcneuralredisneuralredissoAnnSetDeltas x c x fd aaff c INFO OUTPUT Server redisversion redisgitsha f redisgitdirty redisbuildid e redismodestandalone osLinux generic x archbits multiplexingapiepoll gccversion processid runid b bc de bdf e bd a c ccf fd e tcpport uptimeinseconds uptimeindays hz lruclock executabledataredisserver configfile Clients connectedclients clientlongestoutputlist clientbiggestinputbuf blockedclients Memory usedmemory usedmemoryhuman K usedmemoryrss usedmemoryrsshuman M usedmemorypeak usedmemorypeakhuman K usedmemorypeakperc usedmemoryoverhead usedmemorystartup usedmemorydataset usedmemorydatasetperc totalsystemmemory totalsystemmemoryhuman M usedmemorylua usedmemoryluahuman K maxmemory maxmemoryhuman B maxmemorypolicynoeviction memfragmentationratio memallocatorjemalloc lazyfreependingobjects Persistence loading rdbchangessincelastsave rdbbgsaveinprogress rdblastsavetime rdblastbgsavestatusok rdblastbgsavetimesec rdbcurrentbgsavetimesec rdblastcowsize aofenabled aofrewriteinprogress aofrewritescheduled aoflastrewritetimesec aofcurrentrewritetimesec aoflastbgrewritestatusok aoflastwritestatusok aoflastcowsize Stats totalconnectionsreceived totalcommandsprocessed instantaneousopspersec totalnetinputbytes totalnetoutputbytes instantaneousinputkbps instantaneousoutputkbps rejectedconnections syncfull syncpartialok syncpartialerr expiredkeys evictedkeys keyspacehits keyspacemisses pubsubchannels pubsubpatterns latestforkusec migratecachedsockets Replication rolemaster connectedslaves masterreploffset replbacklogactive replbacklogsize replbacklogfirstbyteoffset replbackloghistlen CPU usedcpusys usedcpuuser usedcpusyschildren usedcpuuserchildren Commandstats cmdstatdelcalls usec usecpercall cmdstatzaddcalls usec usecpercall cmdstatmulticalls usec usecpercall cmdstatexeccalls usec usecpercall cmdstatpsubscribecalls usec usecpercall cmdstatpublishcalls usec usecpercall cmdstatcommandcalls usec usecpercall Cluster clusterenabled Keyspace hashinitvalue CLIENT LIST OUTPUT id addr fd name age idle flagsN db sub psub multi qbuf qbuffree obl oll omem eventsr cmdpsubscribe id addr fd name age idle flagsN db sub psub multi qbuf qbuffree obl oll omem eventsr cmdexec id addr fd name age idle flagsN db sub psub multi qbuf qbuffree obl oll omem eventsr cmdpublish id addr fd name age idle flagsN db sub psub multi qbuf qbuffree obl oll omem eventsr cmdexec id addr fd name age idle flagsN db sub psub multi qbuf qbuffree obl oll omem eventsr cmdpublish id addr fd name age idle flagsN db sub psub multi qbuf qbuffree obl oll omem eventsr cmdnrcreate CURRENT CLIENT INFO id addr fd name age idle flagsN db sub psub multi qbuf qbuffree obl oll omem eventsr cmdnrcreate argv NRCREATE argv filtersnn argv CLASSIFIER argv argv argv argv argv DATASET argv argv TEST argv argv NORMALIZE REGISTERS M Oct RAX RBX RCX ea RDX RDI e RSI ea b RBP e RSP ffde eabc R fd ad e R fd ad R ffde eabe R ecf R R ffde eacc R f R fd ab fbbd RIP fd aaff c EFL CSGSFS M Oct ffde eabcf fd ab fbaf M Oct ffde eabce c M Oct ffde eabcd fd ad a M Oct ffde eabcc fd aca M Oct ffde eabcb ffde eacc M Oct ffde eabca e e eada M Oct ffde eabc fd aaff cf M Oct ffde eabc M Oct ffde eabc fd acb M Oct ffde eabc ffde eac M Oct ffde eabc c M Oct ffde eabc M Oct ffde eabc fd aaff M Oct ffde eabc fd ab fbbd M Oct ffde eabc f M Oct ffde eabc ffde eacc FAST MEMORY TEST M Oct Bio thread for job type terminated M Oct Bio thread for job type terminated M Oct Bio thread for job type terminated Preparing to test memory region bytes Preparing to test memory region de bytes Preparing to test memory region fd ab fc bytes Preparing to test memory region fd ab fe bytes Preparing to test memory region fd ab ff bytes Preparing to test memory region fd ac bytes Preparing to test memory region fd ad bytes Preparing to test memory region fd ad a bytes Preparing to test memory region fd adbc bytes Preparing to test memory region fd adbc bytes Preparing to test memory region fd adbcf bytes OOOOOOOOOOO Fast memory test PASSED however your memory can still be broken Please run a memory test for several hours if possible DUMPING CODE AROUND EIP Symbol AnnSetDeltas base x fd aaff f Module usrsrcneuralredisneuralredisso base x fd aafec xxd r p tmpdumphex tmpdumpbin objdump adjustvma x fd aaff f D b binary m i x tmpdumpbin M Oct dump of function hexdump of bytes b f f eb c d e e e c e c e d c ff f e b d a c d c b b faf c d f e b f c e f c e f d e d f c fa a f f d f c fa f f c fa f d f c fa f b REDIS BUG REPORT END Make sure to include from START to END Dockerfile largely copied from the standard redis dockerfile FROM debianjessie TAKEN FROM add our user and group first to make sure their IDs get assigned consistently regardless of whatever dependencies get added RUN groupadd r redis useradd r g redis redis RUN aptget update aptget install y noinstallrecommends cacertificates wget rm rf varlibaptlists grab gosu for easy stepdown from root ENV GOSUVERSION RUN set x wget O usrlocalbingosu printarchitecture wget O usrlocalbingosuasc printarchitectureasc export GNUPGHOMEmktemp d gpg keyserver hapoolskskeyserversnet recvkeys B F F F E FD A C BF DD gpg batch verify usrlocalbingosuasc usrlocalbingosu rm r GNUPGHOME usrlocalbingosuasc chmod x usrlocalbingosu gosu nobody true Common dependencies RUN aptget update aptget install y gcc libc dev make git rm rf varlibaptlists Github redis unstable install RUN mkdir p usrsrc git clone usrsrcredis Disable Redis protected mode as it is unnecessary in context of Docker Ports are not automatically exposed when running inside Docker but rather explicitely by specifying p P grep q define CONFIGDEFAULTPROTECTEDMODE usrsrcredissrcserverh sed ri s define CONFIGDEFAULTPROTECTEDMODE usrsrcredissrcserverh grep q define CONFIGDEFAULTPROTECTEDMODE usrsrcredissrcserverh for future reference we modify this directly in the source instead of just supplying a default configuration flag because apparently if you specify any argument to redisserver it assumes you are going to specify everything see also more exactly this makes sure the default behavior of save on SIGTERM stays functional by default make C usrsrcredis make C usrsrcredis install rm r usrsrcredis Neural redis install RUN mkdir p usrsrc git clone usrsrcneuralredis make C usrsrcneuralredis avx Remove common dependencies RUN aptget purge y autoremove gcc libc dev make git RUN mkdir data chown redisredis data VOLUME data WORKDIR data COPY dockerentrypointsh usrlocalbin RUN chmod x usrlocalbindockerentrypointsh ENTRYPOINT dockerentrypointsh EXPOSE CMD redisserver loadmodule usrsrcneuralredisneuralredisso 