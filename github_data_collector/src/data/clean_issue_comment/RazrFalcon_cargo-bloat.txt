 Its not uncommon for large rust symbols to have a lot inlined into them It would be nice to be able to see a histogram of how much each inlined symbol is contributing to large actual symbol The addr line crate supports producing inline call stacks for a particular address Group by Currently cargo bloat support grouping by crate full symbol I think it would be helpful it cargo bloat could also group by function without type parameters I think thats important because I have lots of symbols like KiB protobuf protobufdescriptorFileOptions as protobufcoreMessagemergefrom KiB protobuf protobufdescriptorFileOptions as protobufcoreMessagewritetowithcachedsizes KiB protobuf protobufdescriptorFileDescriptorProto as protobufcoreMessagemergefrom It would be useful to sum all protobufcoreMessagemergefrom functions and find next largest generic bloated function Filtering Currenly cargo bloat supports filtering by crate I might be helpful to filter by regular expression cargo bloat filterre FieldDescriptorProto Find all symbols containing substring FieldDescriptorProto display top of them display size sum of all symbols and total size as usual It appears like goblin has support for PE files so could windows support be added cargobloat only returns the size of the textsection of the binary It would be more useful to try to figure out the size of a library in the whole binary or to make it more explicit that it only deals with the text section somehow Also would it be possible to include perlibrary how big the debug symbols for a particular library are