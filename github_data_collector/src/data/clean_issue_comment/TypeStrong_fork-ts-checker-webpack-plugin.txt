Hey piotroles What do you think about releasing v Ive been testing with them in some projects of mine since Christmas and have had a great experience so far I think this could be ready to release eslintloader has an option named emitWarning to make all errors warnings instead to help during development so hotupdates etc do not fail It would be great to allow setting this option in fork ts checker as well Current behavior Error in forktscheckerwebpackplugin after an error occurs outside of forktscheckerwebpackplugin I had a legitimate error in my postcss config file which was causing the build to bail early When this happens I get the following error Usersjonathanmyappnodemodulesforktscheckerwebpackpluginlibindexjs return thisserviceRpcdispatchmessage TypeError Cannot read property dispatch of undefined at ChildProcessserviceonmessage Usersjonathanmyappnodemodulesforktscheckerwebpackpluginlibindexjs at ChildProcessemit eventsjs at emit internalchildprocessjs at processtickCallback internalprocessnexttickjs Im not familiar with forktscheckerwebpackplugin but it appears a spawned service is receiving a message after shutting down Expected behavior Dont fail when a message is received after the service is killed Steps to reproduce the issue Forcing an error in postcssconfigjs reproduces the error for me but I imagine forcing an error in any other loader may also reproduce the error Note The fix likely entails adding a null check to the thisserviceRpcdispatch call since the RPC provider dispatches in promiseresolve callbacks and doesnt appear to have a way to tear itself down Environment forktscheckerwebpackplugin typescript tslint webpack os macOS Current behavior Sometimes when saving files quickly after another and possibly when many file watchers are active the ApiIncrementalChecker is outputing the previous Diagnostics Expected behavior Always use new diagnostics Steps to reproduce the issue Change and save files with and without errors repeatedly causes it to randomly not displaying the error but old diagnostics Possible solution This might be a windowsos issue cause its related to file watchers The reason is that webpack triggers a compile but the filewatcher of the CompilerHost didnt receive that change yet Therefor the callback of the watched file is not triggered and no compilation happens There is an if statement saying that if no compilation happened its assumed to not be a related file to typescript therefore old diagnostics apply Possible solutions I can think of Wait for a set time of ms until at least one change event happend needs a timeout as unrelated files might have changed For tests I made a while loop around until at least one itemcallback is triggered or ms are over That fixed the problem but I feel like its not a good solution A better approach I can think of is passing the changed files from webpack to that fileWatchers list and call the callback as long as the filepath matches but Im not familiar with webpack plugins and it might be a bit hard to pass that data down to the service Environment forktscheckerwebpackplugin master typescript tslint webpack alpha os Windows Current behavior Expected behavior Typings should be found by the editor Steps to reproduce the issue Add package and run yarn install Issue reproduction repository None yet Environment forktscheckerwebpackplugin typescript tslint webpack os Windows Current behavior My webpack build gets to and after it emits forktscheckerwebpackplugin the build fails Although the command exits with status like a success no build artefacts are generated With the webpack logs I see that it only ever gets to at this step sh yarn build yarn run v node scriptsbuildclientjs Ready to start the build Creating an optimized production build compiling building modules active building modules active multi homecircleciprojectsrcindextsx building modules active after chunk asset optimization SourceMapDevToolPlugin asset optimization after asset optimization after seal emitting emitting loadablewebpackplugin emitting HtmlWebpackPlugin emitting GenerateSW emitting forktscheckerwebpackplugin This is the end of the logs no artefacts are outputted That is the build folder is empty Expected behaviour The build continues to and the artefacts are outputted Steps to reproduce the issue I am using a forked version of CRA but I just run yarn build and get this situation Here is a sample from my config Full config is here js const ForkTsCheckerWebpackPlugin requirereactdevutilsForkTsCheckerWebpackPlugin new ForkTsCheckerWebpackPlugin typescript resolvesynctypescript basedir pathsappNodeModules async isEnvDevelopment useTypescriptIncrementalApi true checkSyntacticErrors true resolveModuleNameModule processversionspnp dirnamepnpTsjs undefined resolveTypeReferenceDirectiveModule processversionspnp dirnamepnpTsjs undefined tsconfig pathsappTsConfig reportFiles tests spectest srcsetupProxy srcsetupTests watch pathsappServer pathsappSrc silent true The formatter is invoked directly in WebpackDevServerUtils during development formatter isEnvProduction typescriptFormatter undefined Environment forktscheckerwebpackplugin reactdevutilsForkTsCheckerWebpackPlugin reactdevutils typescript typescript webpack webpack os circleci Now that the plugin itself supports ESLint we should probably migrate to linting the project itself with ESLint instead of TypeScript This will probably help Feature motivation Compatibility with nativescriptvue It uses nativescriptvuetemplatecompiler instead of vuetemplatecompiler Feature description Allow to set vue compiler nativescriptvuetemplatecompiler instead of vue true To be compatible with nativescriptvue based projects Feature implementation We need to fix types for vue option from boolean to boolean compiler string Pass vue options to VueProgramts if they are available then update requirevuetemplatecompiler and error message in catch block This PR adds a quiet option so that warnings get suppressed in the output I definitely would like feedback on if this was the right approach But also when I went to write an integration test for this I couldnt get it working correctly when incrementalTypsciptApi is on i get warnings like rawMessage u b m u b mERROR in u b m u b m u b m u b mundefinedundefinedundefined u b m u b m u b m u b m u b m u b m n u b mTS u b mCannot write file testcontextsrclibotherFuncjs because it would overwrite input file message u b m u b mERROR in u b m u b m u b m u b mundefinedundefinedundefined u b m u b m u b m u b m u b m u b m n u b mTS u b mCannot write file testcontextsrclibotherFuncjs because it would overwrite input file location line undefined character undefined file undefined 