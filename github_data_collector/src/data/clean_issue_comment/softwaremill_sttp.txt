Updates orgscalasbtsbt from to Release NotesChangelog Ill automatically update this PR to resolve conflicts as long as you dont change it yourself If youd like to skip this version you can just close this PR If you have any feedback just mention me in the comments below Have a fantastic day writing Scala details summaryIgnore future updatessummary Add this to your scalastewardconf file to ignore future updates of this dependency updatesignore groupId orgscalasbt artifactId sbt details labels libraryupdate semverpatch Currently OpenTracingBackend relies on span marked as active in the Tracer when creating a new span This is correct yet not very convenient for use cases which dont use this method of span propagation Alternative could be to have a specific sttp tag used for setting up the span which should be used a parent and fallback to tracer when its missing WDYT Updates comsquareupokhttp okhttp from to Release NotesChangelog Ill automatically update this PR to resolve conflicts as long as you dont change it yourself If youd like to skip this version you can just close this PR If you have any feedback just mention me in the comments below Have a fantastic day writing Scala details summaryIgnore future updatessummary Add this to your scalastewardconf file to ignore future updates of this dependency updatesignore groupId comsquareupokhttp artifactId okhttp details labels libraryupdate semverminor The safe Uriparse function does not fail on invalid URIs Examples Uriparse returns Right Uriparsehttps uri returns Right Expected LeftInvalid URI or some similar message Also not sure if this is expected behavior but this prefixes invalid protocol with valid protocol and also succeeds Uriparsettpswwwgooglecom returns Right Updates orghttp shttp sblazeclient from M to M Release NotesChangelog Ill automatically update this PR to resolve conflicts as long as you dont change it yourself If youd like to skip this version you can just close this PR If you have any feedback just mention me in the comments below Have a fantastic day writing Scala details summaryIgnore future updatessummary Add this to your scalastewardconf file to ignore future updates of this dependency updatesignore groupId orghttp s artifactId http sblazeclient details labels libraryupdate semverprerelease Updates comtwitterfinaglehttp from to Ill automatically update this PR to resolve conflicts as long as you dont change it yourself If youd like to skip this version you can just close this PR If you have any feedback just mention me in the comments below Have a fantastic day writing Scala details summaryIgnore future updatessummary Add this to your scalastewardconf file to ignore future updates of this dependency updatesignore groupId comtwitter artifactId finaglehttp details labels libraryupdate semverminor Updates comsquareupokhttp okhttp from to Release NotesChangelog Ill automatically update this PR to resolve conflicts as long as you dont change it yourself If youd like to skip this version you can just close this PR If you have any feedback just mention me in the comments below Have a fantastic day writing Scala details summaryIgnore future updatessummary Add this to your scalastewardconf file to ignore future updates of this dependency updatesignore groupId comsquareupokhttp artifactId okhttp details labels libraryupdate semverminor Updates comsoftwaremillsttpmodelcore from RC to RC Ill automatically update this PR to resolve conflicts as long as you dont change it yourself If youd like to skip this version you can just close this PR If you have any feedback just mention me in the comments below Have a fantastic day writing Scala details summaryIgnore future updatessummary Add this to your scalastewardconf file to ignore future updates of this dependency updatesignore groupId comsoftwaremillsttpmodel artifactId core details labels libraryupdate semverprerelease When I use val json asJson Xxx this warts is triggered I dont understand why Any is detected here wartremoverAny Inferred type containing Any Any error val json asJson Xxx As a developer I greatly appreciate the interop with http s However I would prefer if sttp wasnt forcing the Blaze client onto my classpath Would you consider either Remove the hard dependency on the blazeclient artifact in favour of the generic client artifact Thatd be my personal preference but it would mean a nonbackward compatible change in the sense that a couple helper constructors would have to be removed If youre absolutely against making this small breaking change make the blazeclient dependency Optional 