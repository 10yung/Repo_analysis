Without quoatation you will get an error like ERROR relation publictablewithcamelcase does not exist SQL state P if a table with name like tablewithcamelCase exists In indexitemsizes portion of the index bloat query indexes with multiple columns do not retain all attributes from the btreeindexatts subquery This is due to a misunderstanding of the contents of the pgindexindkey column From the documentation This is an array of indnatts values that indicate which table columns this index indexes For example a value of would mean that the first and the third table columns make up the index key A zero in this array indicates that the corresponding index attribute is an expression over the table columns rather than a simple column reference Thus if columns and are indexed indkey will reflect However in pgattribute the index attributes will be and Thus joining the two tables will result in only one attribute result and it will be incorrect table col index col There are generally two ways to fix this Alter the JOIN to pgattribute to use indexrelid instead and subsequently modify the JOIN to pgstats similarly Replace the regexpsplittotable call with generateseries bounded by pgindexindnatts If an index has columns the attributes in pgattribute will be listed as and This means the indkey split isnt strictly necessary Im trying to make the bloat queries work for bit compiles Is there anything needed besides switching mamaxalign from to Combines the query into a single query that checks for exact matches as well as partial matches and includes checks on the index class The query returns bloat and size information only on one index of the table even if tables has multiple indexes Using Postgres this query returns zero rows when I know that I have missing referencing indexes I think regexpsplittotableindkeytext smallint AS attnum should be generateseries arraylengthindkey smallint AS attnum the join with pgattributes include attnum but pgattributes will number the attributes for the index at the pgindex indkey is the physical index to the column within the table thanks for this query its very helpful just added order by clause 