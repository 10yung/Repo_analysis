 Problem description Whenever stepping into code via step once it gets into a vendor gem such as anything in rails it makes the debugger more of a pain because the only thing I care about while debugging is issues in my code It would be nice to have a config option to be able to ignore all gems when debugging Expected behavior Do not debug vendor gems Actual behavior Debugs vendor gems With noexitprompt setting byebug will always quit immediately when q is pressed Resolves Im hoping this will fix longstanding cant see what Im typing issues Fixes Fixes Problem description The following code is running in a pod in kubernetes require byebugcore def exec remotebyebug if debug end Actual behavior When executing this code with debug flag set to true byebug waits for connection to port and I can attach to it by doing byebug R when exec into the pod as expected However when I interrupt the byebug connection cmd c for example and execute the code again byebug does not wait for connection and just continues executing Expected behavior I figured what is required in order for it to stop at that point again is not to interrupt the connection that is keep byebug R alive Is there a way to have byebug always wait for the connection regardless of it being interrupted previously Steps to reproduce the problem Have the remote debugger setup in a pod and execute code in that pod for the first time Then after interrupting the byebug connection execute again Thanks The byebug guide at has a link to titled See Byebugstart with a block This is a dead link now but where was it meant to be linked to Problem description Having a way to generate the byebughistory at a different location saves us from having to gitignore it Related I would like to execute one or more ruby commands when byebug starts RSpecconfigure config configfuubarautorefresh false if RSpec Byebug does not appear to support that This seems like a substantial feature Is there a workaround I would imagine a file like byebughook and maybe a command source filename There are times when I would like to execute substantial blocks of ruby code too Let me open this issue as a way to exchange impressions about this Zeitwerk listens to class events to load what the project calls explicit namespaces see why at this moment in my talk in RailsConf but within a Byebug session these events are not emitted Does Byebug need specifically to disable class events or could it disable others and preserve this one If it needs them could it be a way to make both projects compatible Right now Rails applications with common defaults have this gotcha for example