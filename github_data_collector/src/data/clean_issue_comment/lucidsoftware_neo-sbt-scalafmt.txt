 info error javalangIllegalArgumentException argument type mismatch info error at sunreflectNativeMethodAccessorImplinvoke Native Method info error at sunreflectNativeMethodAccessorImplinvokeNativeMethodAccessorImpljava info error at sunreflectDelegatingMethodAccessorImplinvokeDelegatingMethodAccessorImpljava info error at javalangreflectMethodinvokeMethodjava info error at scalareflectruntimeJavaMirrorsJavaMirrorJavaVanillaMethodMirror jinvokerawJavaMirrorsscala info error at scalareflectruntimeJavaMirrorsJavaMirrorJavaMethodMirrorjinvokeJavaMirrorsscala info error at scalareflectruntimeJavaMirrorsJavaMirrorJavaVanillaMethodMirrorapplyJavaMirrorsscala info error at comlucidchartsbtscalafmtCachePlatformfileInfoPlatformscala info error at comlucidchartsbtscalafmtScalafmtCorePluginautoImportanonfunscalafmtCoreSettings ScalafmtCorePluginscala info error at scalacollectionimmutableMapEmptyMapgetOrElseMapscala info error at comlucidchartsbtscalafmtScalafmtCorePluginautoImportanonfunscalafmtCoreSettings ScalafmtCorePluginscala info error at scalacollectionTraversableLikeanonfunmap TraversableLikescala info error at scalacollectionmutableResizableArrayforeachResizableArrayscala info error at scalacollectionmutableResizableArrayforeachResizableArrayscala info error at scalacollectionmutableArrayBufferforeachArrayBufferscala info error at scalacollectionTraversableLikemapTraversableLikescala info error at scalacollectionTraversableLikemapTraversableLikescala info error at scalacollectionAbstractTraversablemapTraversablescala info error at comlucidchartsbtscalafmtScalafmtCorePluginautoImportanonfunscalafmtCoreSettings ScalafmtCorePluginscala info error at comlucidchartsbtscalafmtScalafmtCorePluginautoImportanonfunscalafmtCoreSettings adaptedScalafmtCorePluginscala info error at scalaFunction anonfuncompose Function scala info error at sbtinternalutiltildegreateranonfunu TypeFunctionsscala info error at sbtstdTransformanon workTransformscala info error at sbtExecuteanonfunsubmit Executescala info error at sbtinternalutilErrorHandlingwideConvertErrorHandlingscala info error at sbtExecuteworkExecutescala info error at sbtExecuteanonfunsubmit Executescala info error at sbtConcurrentRestrictionsanon anonfunsubmitValid ConcurrentRestrictionsscala info error at sbtCompletionServiceanon callCompletionServicescala info error at javautilconcurrentFutureTaskrunFutureTaskjava info error at javautilconcurrentExecutorsRunnableAdaptercallExecutorsjava info error at javautilconcurrentFutureTaskrunFutureTaskjava info error at javautilconcurrentThreadPoolExecutorrunWorkerThreadPoolExecutorjava info error at javautilconcurrentThreadPoolExecutorWorkerrunThreadPoolExecutorjava info error at javalangThreadrunThreadjava info error Compile scalafmt scalafmt javalangIllegalArgumentException argument type mismatch notes In sbt sbtutilFileHashModified is private scala private final case class FileHashModifiedfile File hash List Byte lastModified Long extends HashModifiedFileInfo Theres a code in the plugin to break the privacy by using reflection scala private this val fileHashModified val module mirrorreflectModulemirrorstaticModulesbtutilFileHashModified mirrorreflectmoduleinstancereflectMethodmodulesymbolinfodecluniverseTermNameapplyasMethod def fileInfofile File hash List Byte lastModified Long fileHashModifiedfile hash lastModifiedasInstanceOf AnyRef asInstanceOf HashModifiedFileInfo In sbt we are taking advantage of the privacy to change the class implementation as follows scala private final case class FileHashModifiedfile File hashArray Array Byte lastModified Long extends HashModifiedFileInfo Any plans to support This was originally reported as by zella steps git clone sbt run problem error Caused by javalangNoClassDefFoundError scalamathOrderinganon error at scalatoolsnsctransformLambdaLiftLambdaLifterinitLambdaLiftscala error at scalatoolsnsctransformLambdaLiftnewTransformerLambdaLiftscala error at scalatoolsnsctransformTransformPhaseapplyTransformscala error at scalatoolsnscGlobalGlobalPhaseanonfunapplyPhase Globalscala error at scalatoolsnscGlobalGlobalPhaseapplyPhaseGlobalscala error at scalatoolsnscGlobalGlobalPhaseanonfunrun Globalscala error at scalatoolsnscGlobalGlobalPhaseanonfunrun adaptedGlobalscala error at scalacollectionIteratorforeachIteratorscala error at scalacollectionIteratorforeachIteratorscala error at scalacollectionAbstractIteratorforeachIteratorscala error at scalatoolsnscGlobalGlobalPhaserunGlobalscala error at scalatoolsnscGlobalRuncompileUnitsInternalGlobalscala error at scalatoolsnscGlobalRuncompileUnitsGlobalscala error at scalatoolsnscGlobalRuncompileSourcesGlobalscala error at scalatoolsnscGlobalRuncompileGlobalscala error at orgfusesourcescalatesupportScalaCompilercompileScalaCompilerscala No failures without addSbtPlugincomlucidchart sbtscalafmt expectation No failures notes By default sbt uses Ivy mediator to enforce scalalibrary and scalacompiler to line up sbtsbt but neosbtscalafmt turns that off The fact that introducing this plugin changes the semantics of the build is very surprising to me I wonder if there is a way to disable the formatting when a value is passed as a environment or system variable This is useful to not format the code on the continuous integration step to fail if the code isnt formatted Thanks I have scalafmtOnCompile set to true in my buildsbt and when I run sbt compile it does run scalafmt and sbtscalafmt but it does not run testscalafmt I also tried val compileDeps List ScopedAnyInitTask ListCompile scalafmt Test scalafmt Sbt scalafmt Compile compile Compile compile dependsOn compileDeps value And this has exactly the same effect Im using sbtversion and comlucidchart sbtscalafmt Plugin works with but using scalafmtVersion I get error javalangNoSuchMethodError orgscalafmtconfigScalafmtConfigcopydefault LjavalangString error at comlucidchartscalafmtimplScalafmtteranon initScalafmtterscala error at comlucidchartscalafmtimplScalafmtterformatterScalafmtterscala error at comlucidchartsbtscalafmtScalafmtCorePluginautoImportanonfunscalafmtFn ScalafmtCorePluginscala error at scalaFunction anonfuncompose Function scala error at sbtinternalutiltildegreateranonfunu TypeFunctionsscala error at sbtstdTransformanon workSystemscala error at sbtExecuteanonfunsubmit Executescala error at sbtinternalutilErrorHandlingwideConvertErrorHandlingscala error at sbtExecuteworkExecutescala error at sbtExecuteanonfunsubmit Executescala error at sbtConcurrentRestrictionsanon anonfunsubmitValid ConcurrentRestrictionsscala error at sbtCompletionServiceanon callCompletionServicescala error at javautilconcurrentFutureTaskrunFutureTaskjava error at javautilconcurrentExecutorsRunnableAdaptercallExecutorsjava error at javautilconcurrentFutureTaskrunFutureTaskjava error at javautilconcurrentThreadPoolExecutorrunWorkerThreadPoolExecutorjava error at javautilconcurrentThreadPoolExecutorWorkerrunThreadPoolExecutorjava error at javalangThreadrunThreadjava error sbtscalafmtscalafmt javalangNoSuchMethodError orgscalafmtconfigScalafmtConfigcopydefault LjavalangString if I run sbtscalafmt in the sbtsbt build I get info Formatting Scala source in sbtRootsbt warn dsbtbuildsbt error illegal start of simple expression warn warn I think this comment is relevant Currently sbtscalafmtcoursier depends on Coursier RC while the latest version is Courser Because of this if my build depends both on Coursier and the latest sbtscalafmtcoursier I get the following warnings each time SBT is started warn Found version conflicts in library dependencies some are suspected to be binary incompatible warn iogetcoursiercoursiercache is selected over RC warn iogetcoursiersbtshared scalaVersion sbtVersion depends on warn iogetcoursiersbtcoursier scalaVersion sbtVersion depends on warn comlucidchartsbtscalafmtcoursier scalaVersion sbtVersion depends on RC warn iogetcoursiercoursier is selected over RC warn iogetcoursiercoursierextra depends on warn iogetcoursiersbtshared scalaVersion sbtVersion depends on warn iogetcoursiersbtcoursier scalaVersion sbtVersion depends on warn iogetcoursiercoursiercache depends on warn comlucidchartsbtscalafmtcoursier scalaVersion sbtVersion depends on RC This problem is not critical of course but a nuisance nevertheless Is there a particular reason to stick to the prerelease version of Coursier I had to remove neosbtscalafmt from my project because error Uncaught exception when running tests error javalangNoSuchMethodError scalaPredefrefArrayOps LjavalangObjectLscalacollectionmutableArrayOps error sbtForkMainForkError javalangNoSuchMethodError scalaPredefrefArrayOps LjavalangObjectLscalacollectionmutableArrayOps error at orgscalatesttoolsFriendlyParamsTranslatortranslateArgumentsFriendlyParamsTranslatorscala error at orgscalatesttoolsFrameworkrunnerFrameworkscala error at sbtForkMainRunrunTestsForkMainjava error at sbtForkMainRunrunForkMainjava error at sbtForkMainRunaccess ForkMainjava error at sbtForkMainmainForkMainjava this was happening consistently when trying to run my ScalaTest tests on with fork in Test true the refArrayOps thing usually indicates a Scala mismatch the cause seems to be sbtscalafortify show testfullClasspath info Updating fileUserstisuescalafortifypluginscalafortifyplugin info Done updating info Compiling Scala source to Userstisuescalafortifyplugintargetscala classes info Done compiling info AttributedUserstisuesbtbootscala libscalalibraryjar howd the stdlib get in there thats not right what it is about this plugin that actually causes that I dont know the problem occurs with both sbt and 