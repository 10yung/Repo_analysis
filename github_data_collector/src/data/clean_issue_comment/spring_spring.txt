 I dont think anybody is using Rifles harcoded lowquality particles being one of the reasons so this should do no harm and is fairly easy to replicate with Lua On the other hand Rifle could become more useful as a very simple hitscan weapon simpler than BeamLaser which still involves a projectile LegacyCpp AI interface wrapper is written in a way that expects real array size as return value after st call with outArraynullptr The issue could be fixed on LegacyCpp level pass INTMAX instead of but then in general C interface becomes inconsistent with similar functions like getLosMap Fixes KAIK please populate to maintenance Fail in CMake config phase instead of later when compiling Tested on Debian testing hey folks This is for review only Not ready for merge yet Ill also port it to develop once I have tested the code enough with maintenance Should it be ported to maintenance too Lately Ive been working to get clangtidy running for Spring and doing some cleanup in the process Clangtidy is a useful tool for modernizing code performing micro optimizations and even finding bugs provided you use it carefully and dont introduce them instead Right now Ive setup clangtidy to run while Spring is being built and Ive made it do only the checks that I wanted to deal with initially as we go long the list of checks should probably be increased but I think the first priority would be to get the warning count to by fixing diagnostics or explicitly suppressing them we change our coding style some checks will probably be disabled forever eg readabilitybracesaroundstatements Performing clangtidy while compiling can be awfully slow didnt measure but build times seemed to have tripled at least which feels largely unnecessary for the first build During development I would like to have a way to turn it on for builds eg my workflow would likely go as follows build without clangtidy do some changes build with clangtidy I would also like to do some refactoring from time to time perform full builds with clangtidy do some refactoringglobal cleanup And it would be nice to have it run on buildbots perform full builds with clangtidy CMake is not my strong suite so if anyones willing to lend a hand Id be grateful Except for demowatching specs when these do something its still unsynced only There is a stereoscopic widget that emulate D vision by moving camera left right But the method used by this widget cannot work properly for moving units If Spring could render same world twice then that method could work I have tried it here is the result with rendering twice try to focus on the circular white cursor using crosseye technique stereoscopic with doubledraw The following is the same scene but without rendering twice stereoscopic no doubledraw The boat in the centre is moving and it doesnt D correctly in second image In the proposed codechange I added the following Interface doubledraw enabledisable double drawing SpringIsDoubleDrawing to check if double drawing is active SpringGetDoubleDrawIndex output or to assist widget to select which drawframe to displayed as lefteye or righteye 