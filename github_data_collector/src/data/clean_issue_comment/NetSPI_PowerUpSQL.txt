Add GetSQLFunction These three system databases require crossdatabase ownership chaining to be turned on InvokeSQLAudit flags false positives for Excessive Privilege Database Ownership Chaining for the following databases master tempdb msdb According to the DBCHAINING option cannot be set on the master model and tempdb system databases Another reference here which says these three system databases require crossdatabase ownership chaining to be turned on add challenge option to InvokeSQLUncPathInjection so custom static challenge can be set Large queries currently timeout even with the timeout flag set because you are missing the following line in the getsqlquery function CommandCommandTimeoutTimeOut On cases where there are multiple credentials ie SQLEXPRESS it will fail Fixed the issue by iteration Also mentioned in Issue It appears that when running GetSQLServerLoginDefaultPw errors arise in cases where instances that are found that have multiple sets of credentials that need to be tried For instance SQLEXPRESS instances have four sets of credentials to try The issue is that these sets of values come out of TblResultsTempusername and TblResultsTemppassword as arrays and then are assigned to CurrentUsername and CurrentPassword respectively The CurrentUsername and CurrentPassword variables are then used as strings even though they are actually arrays at this point The fix to this is just to unroll the values and test them pairwise one at a time I have a quick fix for this and will try to get a PR done if nobody else hops on it first Thanks Hi there When trying to import PowerUpSQL into a powershell version session the user receives the following message ipmo E Pentest Tools PowerUpSQLmaster PowerUpSQLps You must provide a value expression on the righthand side of the operator CategoryInfo ParserError ParentContainsErrorRecordException FullyQualifiedErrorId ExpectedValueExpression Ill have a look at working out the exact error line but first inspection seems to be PS interpreting a as a mathematical symbol rather than a hyphen Thanks when calling InvokeSQLImpersonateService Verbose Instance InstanceName on windows I get the above error Looks like Caldera had this issue as well and had a pretty good fix for it Replaces the usage of Create with New in cmdlets the approved equivalent Note that there are still two internal functions EnumAllTokens and FreeAllTokens which use unapproved verbs these dont give errors on import though Fixes 