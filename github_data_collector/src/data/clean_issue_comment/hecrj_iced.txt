Fixes This PR changes the icedwgpuimagerasterCache to unload images from the GPU when they are no longer visible and new ones have been uploaded The change may cause applications to block more oftenly when hidingdisplaying different images like a scrolling image gallery However they are much less likely to crash due to running out of video memory We should be able to improve this strategy in by trying to deallocate before creating a new layer instead In the long run we should load and upload images asynchronously to avoid dropping frames I am writing an app that loads more than PNGs into a scroll view But it seems that VRAM is out of memory because too many images are being loaded I want to unload images outside the rendering range of the scroll view Is there a way to know the display status of children elements in scroll view Hi thank you for your work on this project I am trying to run one of the examples in the repository and I get a custom build error bash cargo run example todos Compiling x v Compiling crc fast v Compiling sluice v Compiling idna v Compiling ryu v Compiling numtraits v Compiling numcpus v Compiling crossbeamutils v error failed to run custom build command for x v Caused by process didnt exit successfully homerealtempicedtargetdebugbuildx e e e a a ceebuildscriptbuild exit code stderr thread main panicked at called Resultunwrap on an Err value Failure command pkgconfig libs cflags x x output Output status ExitStatusExitStatus stdout stderr Package x was not found in the pkgconfig search path nPerhaps you should add the directory containing x pc nto the PKGCONFIGPATH environment variable nNo package x found nPackage x was not found in the pkgconfig search path nPerhaps you should add the directory containing x pc nto the PKGCONFIGPATH environment variable nNo package x found n srclibcoreresultrs note run with RUSTBACKTRACE environment variable to display a backtrace Environment information bash rustc version rustc e lsbrelease a No LSB modules are available Distributor ID Ubuntu Description Ubuntu LTS Release Codename bionic Ubuntu is a very mainstream distribution and I dont have anything special about my system Therefore I assume many other people might have the same issue Are there any special things I need to install before being able to run the examples on my system If so is there a place I can read about it I couldnt find any information about prior requirements in the main README Might be related to There is currently no way to style individual parts of text within a text block you can only change the style of the entire block Ive seen a couple different ways of doing this on the user end Markup in strings like in PangoGTK Setting state when inserting text into the field like in JavaSwing From a user perspective I personally prefer markup strings in the text glyphbrush already supports text styling using glyphbrushlayout so implementation should just be a matter of parsing the text in whatever format to a VecSectionText I finally came around to implementing the texture atlas for images Im using guillotiere to manage the atlas space In the current implementation the atlas only grows if necessary It never shrinks I also wrote a small build script that compiles shaders at compile time using shaderc Manually compiling shaders during development was super annoying Let me know what you think Unfortunately whenever I try to run any example a window pops up then immediately closes with the following assertion failure thread main panicked at assertion failed sufsupportsqueuefamily adapterrawqueuefamilies homeUSERcargoregistrysrcwgpunative srcdevicers note run with RUSTBACKTRACE environment variable to display a backtrace Im assuming this has to do with the environment Im running this in Im using Linux Manjaro with a GTX and a Coffee Lake CPU This PR updates winit to in icedwinit There is currently an issue on macOS where the CursorMoved event is reporting a logical coordinate instead of a physical one Pending work x x Hey everyone In order for the new website to happen we need to define some sort of branding for Iced Since this should be a community effort here are my first thoughts mind map of how I reasoned about the logo and color scheme Logo What is Iced GUI Framework Platformagnostic Written in Rust Elm Architecture What does iced mean Ice Ice Cubes Snowflakes Mountains Glacier Icebergs Sharp edges Mostly lightblue colors Iced Coffee Ice cubes Brown Orange colors Modern GUI Elm Font has to be sansserif Having serif makes everything look automatically older Flat Squareish shape Draft Prototyping Rust LightOrange color Github and black color Jagged R Rust Logo maybe we can have a slight reminder of Rust in the shape of the logo Possible inspiration This whole article on the amethystrs website Logo of Flutter Logo of Electron Logo of Elm Logo of OrbTX Logo of Amethyst Colors We need to define One main color shades One accent color shades One shade of light color One shade of dark color In my opinion it is obvious that Iceds main color should be lightblue White could also largely be used as a reminder of snow Im thinking a slightly brown dark color could be used for texts Im undecided for the accent I like lightgreen together with lightblue though I think an orange accent would make for a better result because they are often used as opposite colors in video games Take Rocket League for example I also tried brownorange as an alternative My suggestions So here are my cents Im terrible at graphic design Im just an engineer and this is of course a draft that I hope someone will take further For the color scheme I took images of a glacier and extracted some colors This would be my main color suggestion I took another image of an emerald glacier and extracted shades of green I think its called teal Finally I got an image of an iced coffee and exrtacted shades of orange brown As per the logo I think Im on to something These are the result of my first iteration Im willing to add some sort of gradient to the ice cubes when I can figure out how to do that in Inkscape I think its simple enough A cool logo should never be complex as evidenced by the possible inspirations part and should work in a monochrome context both black and white which I think is kind of the case here What are your thoughts Any help welcome pray My attempt at making Svg rasterization async There are two problems with this right now The renderer does not know that a new texture finished rasterizing and therefore does not redraw the Svg widget unless it is resized or the mouse is moved usvgTree is Send Right now my implementation caches a loaded svg file as a Tree and as a xml string that can easily be passed to the rasterization thread This is not a big issue but a little more overhead and memory use than only caching the Tree Related discussion on Zulip It would be nice if we can closeminimize window to tray instead of closing the entire application like in Electron I think it might be related to 