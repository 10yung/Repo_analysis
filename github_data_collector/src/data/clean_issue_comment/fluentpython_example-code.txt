The toxiproxy settings for localhost error delay are as below TODO UPDATE NEXT PARAGRAPH There is also the XXX script which runs a proxy on port producing errors in of the responses and a s delay to of the responses You can also test it with the browser on port but rememeber that errors are expected An update for the necessary settings would help a lot According to my understanding of hashing and equality I tried to enhance the performance of equality checking by ensuring that eq does not perform component based comparison only if vectors has the same hash values if two hashes is different then the two vectors are definitely unequal because if two vectors has same hash value then either they equal they are not equal Vector and Vector will have the same hash value of the asynciopy folder doesnt have this file but this file doesnt work in aiohttp with Python the Request object has no attribute GET use query instead def homerequest try query requestGETgetquery strip except AttributeError query requestquerygetquery strip printQuery rformatquery Open a pull request in page replace long Vector format with add in the end of format to show all D The changes to futurescountriesflagsasynciopy allow it to work with Python and aiohttp When running with python with aiohttp the flagsasynciopy script outputs pairs of lines similar to this Unclosed client session clientsession aiohttpclientClientSession object at x ecbfd followed by tracebacks similar to this Task exception was never retrieved future Task finished corodownloadone done defined at flagsasynciopy exceptionTypeErrorSessionRequestContextManager object is not iterable Traceback most recent call last File flagsasynciopy line in downloadone image yield from getflagcc File flagsasynciopy line in getflag resp yield from aiohttprequestGET url TypeError SessionRequestContextManager object is not iterable When I try running the tombolarunnerpy in chapter python reports to me that the abcregistry doesnt exist I searched in docs but found that the attribute is not accesible anymore The changelog is bpo abc module is added It is a speedup module with C implementations for various functions and methods in abc Creating an ABC subclass and calling isinstance or issubclass with an ABC subclass are up to x faster In addition this makes Python startup up to faster Note that the new implementation hides internal registry and caches previously accessible via private attributes abcregistry abccache and abcnegativecache There are three debugging helper methods that can be used instead dumpregistry abcregistryclear and abccachesclear Should consider typecode in init and frombytes I see the demo d TransformDictstrlower d Foo d foo d FOO d Foo True setdkeys Foo but i dont know the object how to maintain the keys thanks 