 Add DriverPath to StartSeChrome to enable loading a specific version of ChromeDriver clean up scoping debug test It should be possible to use a Powershell pipeline to chain steps together such that powershell Driver EnterSeUrl url Driver FindSeElement ClassName SDkEP FindSeElement Name q SendSeKeys Keys PowershellSelenium SendSeKeys Keys OpenQASeleniumKeys Enter Driver StopSeDriver This may lead to a couple of possibly breaking changes if existing scripts do not expect output from certain functions Would this feature be desired by the users of this module Can you please document a consistent way to handle drop down menus It is not possible to do a FindSEElement on a drop down and then use SendSEKeys as the field will come back as not interactable In other languages implementation of Selenium I can do something like this select SelectdriverfindelementbyidUserDropDown selectselectbyvisibletextJoeSmith But I have been unable to get the syntax right in PowerShell I see a LOT of threads on SO and other sites asking for this kind of info so a solid example of implementing this would be awesome Hi adamdriscoll I was wondering how you are planning on managing Chrome Driver versions and keeping it in sync with the version of Chrome running on the system I want to be able to handle Chrome updates for my use case and would like to continue using this module It seems like we need to add functionality to automatically download the matching version of the driver to keep it in sync with the version of Chrome that is running on the users system Assuming you agree Id be happy to put together an initial implementation and submit as a PR Thoughts Thanks Mark When trying to use the send keys as an listed in the example documentation Element FindSeElement Driver Driver name userid SendSeKeys Element Element Keys username It no longer sends the keys Error SendSeKeys Cannot process argument transformation on parameter Element Cannot convert the SystemObject value of type SystemObject to type OpenQASeleniumIWebElement Started as of pm CST on Before that the code worked fine I have a PS script that uses Firefox to download a CSV file from a web site The challenge is that when I click the download button the web site opens a popup dialog box prompting me to open the file or save it The way Im currently handling this is via the AutoIt module However I see in that there is a switchToalert function So I tried DriverSwitchToAlert but got Exception calling Alert with arguments No modal dialog is currently open Im unclear if this is the correct way to handle this modal dialog Alternatively per there is a way to set a FireFox profile preference ie profilesetPreferencebrowserhelperAppsneverAsksaveToDisk textcsv Is there a way to do this in the Selenium PS module Thanks Hi Below at very bottom is the java script generated by selenium ide I use the following three lines but cant find the element called username as I dont know how to switch to frame in the document model Driver StartSeChrome EnterSeUrl Driver Driver Element FindSeElement Driver Driver Id username What is the powershell commands for the following two lines drivermanagewindowsetSizenew Dimension driverswitchToframe Generated by Selenium IDE import orgjunitTest import orgjunitBefore import orgjunitAfter import static orgjunitAssert import static orghamcrestCoreMatchersis import static orghamcrestcoreIsNotnot import orgopenqaseleniumBy import orgopenqaseleniumWebDriver import orgopenqaseleniumfirefoxFirefoxDriver import orgopenqaseleniumchromeChromeDriver import orgopenqaseleniumDimension import orgopenqaseleniumWebElement import orgopenqaseleniuminteractionsActions import orgopenqaseleniumsupportuiExpectedConditions import orgopenqaseleniumsupportuiWebDriverWait import orgopenqaseleniumJavascriptExecutor import orgopenqaseleniumAlert import orgopenqaseleniumKeys import javautil public class Test Test private WebDriver driver private MapString Object vars JavascriptExecutor js Before public void setUp driver new ChromeDriver js JavascriptExecutor driver vars new HashMapString Object After public void tearDown driverquit Test public void test driverget drivermanagewindowsetSizenew Dimension driverswitchToframe driverfindElementByidusernameclick driverfindElementByidusernamesendKeystest driverfindElementByidpasswordsendKeystest driverfindElementByidsubmitclick Hi Are there any other prerequisites for this to run I have this working fine on a Windows PC Have tried on another windows PC and it doesnt work PScore installed Selenium installed via InstallModule Selenium Chromedriver downloaded to match Chrome install SImple Script Driver StartSeChrome EnterSeUrl Driver Driver Chromedriver starts Chrome starts with Data as the URL If you go back to ChromeDriver it says Timed Out connecting to Chrome Retrying In powershell ISE i also get an error stating Method Invocation failed because SystemString does not contain a method named Navigate At C Program Files windowsPowershell Modules Selenium Seleniumpsm char DriverNavigateGoToUrlurl I have tried a simple test and want to run paralelle within Jobs But somehow the Job just completes and doesnt run the script to the end Is it even possible to run inside a Job This is the simple testscript I am using StartJob Name test ScriptBlock Driver StartSeChrome EnterSeUrl Driver Driver if FindSeElement Driver Driver ClassName gLFyf WriteVerbose Message Test successfull Verbose else WriteVerbose Message Test Error Verbose StopSeDriver Driver It would be nice if we could keep the tests contained to the machine We could use UniversalDashboard to stand up a website webserver and then test the selenium module with it