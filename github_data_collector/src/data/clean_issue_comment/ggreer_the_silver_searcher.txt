 sing Even when passing the options disablelzma andor disablezlib the build calling buildsh with the options fails if lzmah andor zlibh is missing because of undefined stuff in zfileread I hope this pull request will be helpful even if you dont take it as it is Regards I am not sure if this is an ag issue or a more general linux issue but I am noticing it with ag I hope someone has some tips I have an Ubuntu based Linux installed as VM using VMware player I am testing with GB and GB memory in the VM the host has GB total Host also has threads in total it is an AMD Ryzen Host disk is NVME SSD Vm and host disks are defragmented When I allocate CPU threads in VM settings some commands take longer to run than when allocating CPU threads The files it searches are small files around in total but only MB Notice how first run the command always take longer then nd and rd time it runs much faster but with less threads it is even faster Why is that Even worse if I give it out of CPU threads it never seems to cache that command it always takes same amount of time when I repeat the command Is this a CPU cache thing or a memory cache thing Same command on a dedicated machine with threads takes sec that is what I think is normal Edit in VM I have a cpu monitor chart and whenever there are more threads the charts never reach top usage and that is also when repeated commands still run slow But when I have threads running the command shows the CPU usage at and then repeating the command is much faster Like LINUX would not cache that content or command unless the CPU was under significant load It considers it was just some light processing work SEARCH WITH CPU THREADS time ag li foo myfiles real m s user m s sys m s time ag li foo myfiles real m s user m s sys m s time ag li foo myfiles real m s user m s sys m s SEARCH WITH CPU THREADS time ag li foo myfiles real m s user m s sys m s time ag li foo myfiles real m s user m s sys m s time ag li foo myfiles real m s user m s sys m s I use ag installed from chocolatey When searching like this cd E ag somestring v I got a couple of errors for big files then after a while ag crashed with a standard crash window It crashed while in the middle of printing content of files so I dont think this is a filesystem error I have repeated the test and found out the exact file when it crashes is not always the same It might be a bug in ag I have visual studio installed so there is the debug option but Im not familiar with this kind of debugging and would need some guidance if needed Hello This PR adds Zephir support Zephir is an open source highleveldomain specific language designed to ease the creation and maintainability of extensions for PHP with a focus on type and memory safety For more see Using ag version whenever I try to search an xlsx file which I believe is a zip format of some kind I get a segmentation fault ag version ag version Features jit lzma zlib ag TEST testxlsx ag z TEST testxlsx ERR Unsupported compression type Segmentation fault I encountered the problem with z option not being able to match anything when I installed ag on my new MacBook Pro Here you can see it is working with the older version mbplogs uname a Darwin mbplocal Darwin Kernel Version Thu Oct PDT rootxnu RELEASEX x i MacBookPro Darwin mbplogs ag version ag version Features jit lzma zlib mbplogs ag z adding logstashplainloggz head T DEBUG logstashutildecorators filtersLogStashFiltersGrok adding tag tag T DEBUG logstashutildecorators filtersLogStashFiltersMutate adding value to field fielddatetmp value datestr YYYY T DEBUG logstashutildecorators filtersLogStashFiltersMutate adding value to field fielddatetmp value datestr YYYY T DEBUG logstashutildecorators filtersLogStashFiltersMutate adding value to field fielddatetmp value datestr YYYY mbplogs In version namilogs ag version ag version Features jit lzma zlib namilogs uname a Darwin namilocal Darwin Kernel Version Wed Oct PDT rootxnu RELEASEX x namilogs ag version ag version Features jit lzma zlib namilogs ag z adding logstashplainloggz namilogs Im trying to get ag to stop at the first match because I dont care about the loopback address in ifconfig But for some reason it seems to be searching the piped output twice ifconfig ag maxcount inet ERR Too many matches in Skipping the rest of this file inet netmask broadcast ERR Too many matches in Skipping the rest of this file inet netmask Is there some parallelization causing ag to read from the pipeline multiple times Whats going on here Its not what Id expect and its not how grep works ifconfig grep m inet inet netmask broadcast Version ag version Features jit lzma zlib two Makefiles both are ISO text type ag can search contet in one file but treat other as a binary file can not found content I love ag and I am using it extensively since I discovered it few years back as it helps a lot searching big codebases ggreer you really created a great tool the number of stars does not lie Sadly today I realized that the project is not really into a maintained status as the last commit was back in march and is has open PRs some of them clearly fixing real bugs and passing CI so clearly not lingering because original contributor failed to address an issue Can you please state the maintenance status Maybe you want to make a call for getting few more contributors to help with its maintenance it would be really sad to see it perishing Future of such great project should not depend on a single human Apparently there is no rpm available in centos even after enabling epel This makes the documentation misleading