 This line of code should count the instance fields recursively While the classsuperClassinstanceSlotCount hasnt been initialized its value is I just developed an interesting JVM with Java which can run itself The most important part of the bytecode interpreter is a switch statement Is your approach different Here is my implementation maybe jvmgo can run it Can jvmgo run a jar file With my implementation you can do java jar javajar jar javajar HelloWorldClass Here is the bytecode interpreter hi i want to build a project about lightweight java vm for blockchain who has interesting in it Currently there is no support for invokedynamic I know that is a bit hard to implement but since Java lambdas invokedynamic is very present in Bytecode Useful references for implementation Invoke dynamic specification Question has anyone successfully developed and deployed an app written in go on the jvm using websockets my test class java public class Main public static void mainString args SystemoutprintlnHello World and my java version workworkdesktopworkspacetmp echo JAVAHOME usrlocaletcjdk and i run javac Mainjava and java Mainit succ workworkdesktopworkspacetmp javac Mainjava workworkdesktopworkspacetmp java Main Hello World but when i run jvmgo XuseJavaHome cp Main it fail with such error panic runtime error invalid memory address or nil pointer dereference signal xb code x addr x pc x cca goroutine running githubcomzxh jvmgojvmgoclasspathfunc x be x x x xb c x x x homeworkworkspacegosrcgithubcomzxh jvmgojvmgoclasspathentrywildcardgo x pathfilepathWalk x be x x b x x usrlocalgosrcpathfilepathpathgo x githubcomzxh jvmgojvmgoclasspathnewWildcardEntry x be x x homeworkworkspacegosrcgithubcomzxh jvmgojvmgoclasspathentrywildcardgo xa githubcomzxh jvmgojvmgoclasspathClassPathparseBootAndExtClassPath x b homeworkworkspacegosrcgithubcomzxh jvmgojvmgoclasspathclasspathgo x githubcomzxh jvmgojvmgoclasspathParse xbfaab ab x x af homeworkworkspacegosrcgithubcomzxh jvmgojvmgoclasspathclasspathgo x c githubcomzxh jvmgojvmgojvmStartup x homeworkworkspacegosrcgithubcomzxh jvmgojvmgojvmjvmgo xfe mainmain homeworkworkspacegosrcgithubcomzxh jvmgojvmgomaingo x goroutine runnable runtimeforcegchelper usrlocalgosrcruntimeprocgo runtimegoexit usrlocalgosrcruntimeasm s x goroutine runnable runtimebgsweep usrlocalgosrcruntimemgc go runtimegoexit usrlocalgosrcruntimeasm s x goroutine runnable runtimerunfinq usrlocalgosrcruntimemallocgo runtimegoexit usrlocalgosrcruntimeasm s x am i wrong and how to fix that problem thank you Hi hows support for cross platform GUO eg swing I tried to execute this code using jvmgo import javautil class prime public static void mainString args ArrayListInteger res new ArrayListInteger int last resaddlast whiletrue last last boolean prime true forint v res ifvvlast break iflastv prime false break ifprime resaddlast ifressize Systemoutprintlnlast iflast break but it took too much time more than s I terminate execution because it took too long for comparison openjdk u gives complete output within s OS bit ArchLinux Kernel version Processor i RAM GB It would be good to clarify the legal status of using this JVM implementation and whether it is a clean room implementation of Java or not Also it would be interesting to look at pure open source ie without patent nightmares rtjar to package with your VM One thing Ive been wishing for for an age is a lightweight Java alternative Ie Java syntax but only that different rtjar different memory management options everything else redesigned to allow for no bloat and fast initialization I suppose basically Android on the desktop Java is making some improvements but still theres a design emphasis that resources are cheap which if youre hosting in the cloud they aint Anyway good luck I hope you know what youve gotten yourself into 