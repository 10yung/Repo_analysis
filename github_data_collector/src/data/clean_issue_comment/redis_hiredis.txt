 The following code has null pointers dereferencing typically causing a crash or exit aeh e redisAeEventsmallocsizeofe e may be null econtext ac eloop loop efd cfd ereading ewriting dictc ntable callocrealsizesizeofdictEntry ntable may be null for i i htsize htused i if httable i NULL continue he httable i asyncc if acctimeout acctimeout calloc sizeoftv acctimeout may be null if tvtvsec acctimeouttvsec tvtvusec acctimeouttvusec return ivykish e redisIvykisEventsmallocsizeofe e may be null econtext ac libeventh e redisLibeventEventscalloc sizeofe e may be null econtext ac I think hiredissslh header file needs ifdef cplusplus extern C endif and ifdef cplusplus endif So that a c app can link to the libhiredissslso The hiredish header file uses extern C Hello When doing an synchronous update command INCRBY if I receive a timeout is it guaranteed that the server has not actually done the operation What is the best way to ensure that the serverside operation is not done when the client receives a timeout Regards branch master commit id c c e cb a b when i compile with make USESSL i meet some errors I see the error No rule to make target lssl but i dont know why the ssl is a target Please help me thanks root c caaee usr newhiredishiredis make USESSL cc stdc pedantic c O fPIC DHIREDISTESTSSL Wall W Wstrictprototypes Wwritestrings Wnomissingfieldinitializers g ggdb netc cc stdc pedantic c O fPIC DHIREDISTESTSSL Wall W Wstrictprototypes Wwritestrings Wnomissingfieldinitializers g ggdb hiredisc cc stdc pedantic c O fPIC DHIREDISTESTSSL Wall W Wstrictprototypes Wwritestrings Wnomissingfieldinitializers g ggdb sdsc cc stdc pedantic c O fPIC DHIREDISTESTSSL Wall W Wstrictprototypes Wwritestrings Wnomissingfieldinitializers g ggdb asyncc cc stdc pedantic c O fPIC DHIREDISTESTSSL Wall W Wstrictprototypes Wwritestrings Wnomissingfieldinitializers g ggdb readc cc stdc pedantic c O fPIC DHIREDISTESTSSL Wall W Wstrictprototypes Wwritestrings Wnomissingfieldinitializers g ggdb sockcompatc cc shared Wlsonamelibhiredisso o libhiredisso neto hirediso sdso asynco reado sockcompato ar rcs libhiredisa neto hirediso sdso asynco reado sockcompato cc stdc pedantic c O fPIC DHIREDISTESTSSL Wall W Wstrictprototypes Wwritestrings Wnomissingfieldinitializers g ggdb testc cc stdc pedantic c O fPIC DHIREDISTESTSSL Wall W Wstrictprototypes Wwritestrings Wnomissingfieldinitializers g ggdb sslc ar rcs libhiredisssla sslo make No rule to make target lssl needed by hiredistest Stop The following code never aborts when malloc is unsuccessful causing dereferencing of null pointers asyncc C redisCallback dup mallocsizeofdup memcpydupsrcsizeofdup dup may be null return dup dictc C dict ht mallocsizeofht dictInithttypeprivDataPtr ht may be null dictc C entry mallocsizeofentry entrynext httable index entry may be null dictc C dictIterator iter mallocsizeofiter iterht ht iter may be null redisContext uses the calloc function to create the structure Therefore all values are I use Redis in my project My project is a gateway I am creating a tcp server I have a lot of connections to Redis so an error occurs and a socket for tcp connection with Redis is not created and therefore fd Further by example I clear the memory of the redisContext structure and at this time the socket closes with fd It is not right Next this fd is freed up and allocated by my client to connect to my tcp server which causes my program to crash Please set fd for the redisContext structure to InvalidSocket Hi add please OPTION like ENABLESTATIC to choose compile static or shared type library OPTIONENABLESTATIC Build hiredis static library OFF Thanks The current implementation doesnt keep a callback for UNSUBSCRIBE command the reason from the code base comments is that every channel will receive an unsubscribe msg This design cause two problem Callback passed with unsubscribe command never trigged If the channel hasnt been subscribed then we dont have a chance to handle related msg As no callback for that channel yet 