Hi I was using Azure Redis cache for bot service I was facing the issue when set or get the data It was not possible to connect to the redis servers UnableToConnect on AzureRedisCacheConnectionString Interactive InitializingNotStarted last NONE origin BeginConnectAsync outstanding lastread s ago lastwrite s ago keepalive s state Connecting mgr of available lastheartbeat never global s ago v Thanks Hi Im using Net Core app with explicit reference to Netstandard library For some reason there is no IOCP and WORKER stats in log From documentation the log part should be present IOCP and WORKER threads will not be shown on NET Core if using netstandard Im using Netstandard which is latest available MicrosoftExtensionsCachingRedis SDK version in use is And here is log that i get ExceptionStackExchangeRedisRedisTimeoutException Timeout performing EVAL inst queue qu qs qc wr wq in ar clientName ActivityService serverEndpoint Unspecifiedcacheamazonawscom keyHashSlot Please take a look at this article for some common clientside issues that can cause timeouts Can you advise me or point me in right direction interface as follows c summary Execute an arbitrary command against the server this is primarily intended for executing modules but may also be used to provide access to new features that lack a direct API summary param namecommandThe command to runparam param nameargsThe arguments to pass for the commandparam remarksThis API should be considered an advanced feature inappropriate use can be harmfulremarks returnsA dynamic representation of the commands resultreturns TaskRedisResult ExecuteAsyncstring command params object args my code as follows c public class RedisHelper private ConnectionMultiplexer redis get set private IDatabase db get set public RedisHelperstring redisConntectionString redis RedisConnectionHelprGetInstanceredisConntectionString db redisGetDatabase public async Task SetRightValuesBatchAsyncstring key try var batch dbCreateBatch await batchExecuteAsyncrpush key dataxxx catch Exception ex throw ex How to realize the bloon filter From lets give it a test run spin just to check things out The following code dont create the stream if not exist await dbStreamCreateConsumerGroupAsynceventsstream eventsconsumergroup StreamPositionNewMessages The documentation suggest that it should see Consumer Groups section The following creates a consumer group and tells Redis from which position within the stream to begin reading If you call the method prior to first creating the stream the StreamCreateConsumerGroup method will create the stream for you by default You can override this default behavior by passing false for the createStream optional parameter It dont it create the stream and the API dont have overload which get createStream optional parameter Add the following overloads to StreamAddAsync for better usability TaskRedisValue StreamAddAsyncRedisKey key params NameValueEntry streamPairs TaskRedisValue StreamAddAsyncRedisKey key bool useApproximateMaxLength params NameValueEntry streamPairs It will enable a cleaner API call RedisValue value await StreamAddAsyncA new NameValueEntryA new NameValueEntryB Rather RedisValue value await StreamAddAsyncA new new NameValueEntryA new NameValueEntryB Im trying to get values via SortedSetRangeByValue but not behave as expected what is the orderBy logic csharp var redis ConnectionMultiplexerConnect var db redisGetDatabase var zSetKey testZSet dbSortedSetAddzSetKey EnumerableRange Selecti new SortedSetEntryi ToArray var values dbSortedSetRangeByValuezSetKey min max intMaxValue take L order OrderAscending exclude ExcludeStart the values I got always an empty array Hi Im using dotnet core on Linux using docker with StackExchangeredis and getting time out exception for a burst of work StackExchangeRedisRedisTimeoutException Timeout awaiting response outbound KiB inbound KiB ms elapsed timeout is ms commandEXISTS next EXISTS BurnedGameTicketstYNbv inst qu qs aw False rs ReadAsync ws Idle in inpipe outpipe serverEndpoint UnspecifiedcacheRedis mgr of available clientName gameserver IOCP Busy Free Min Max WORKER Busy Free Min Max Using ThreadPoolSetMinThreads will fix the issue but should I use it As Im using version I think its a bug I am trying to write records from a dictionary with around records to a Redis cache But sometimes I get the below exception I have no clue why I am getting this error I have checked on the internet but could not find any solution or root cause of this issue using ConnectionMultiplexer redis ConnectionMultiplexerConnectconfigurationGetConnectionStringredisserver IDatabase db redisGetDatabase foreach KeyValuePairstring string keyValuePair in dictAllData dbStringSetkeyValuePairKey keyValuePairValue TimeSpanFromMinutes Exception No connection is available to service this operation SETEX IOCP Busy Free Min Max WORKER Busy Free Min Max LocalCPU na StackExchangeRedis Version 