Bumps rubyzip from to details summaryRelease notessummary Sourced from rubyzips releases v Security Default the validateentrysizes option to true so that callers can trust an entrys reported size when using extract This option defaulted to false in for backward compatibility but it now defaults to true If you are using an older version of ruby and cant yet upgrade to x you can still use and set the option to true Tooling Documentation Remove test files from the gem to avoid problems with antivirus detections on the test files Drop support for unsupported ruby versions v Security Add validateentrysizes option so that callers can trust an entrys reported size when using extract This option defaults to false for backward compatibility in this release but you are strongly encouraged to set it to true It will default to true in rubyzip New Feature Add addstored method to simplify adding entries without compression Tooling Documentation Add more gem metadata links v Do not rewrite zip files opened with openbuffer that have not changed Tooling Documentation Update examplerecursiverb in README Hold CI at trusty for now automatically pick the latest ruby patch version use rbx and hold jruby at v Allow tilde in zip entry names fixes regression in from Support frozen string literals in more files Require pathname explicitly fixes regression in from Tooling Documentation CI updates Bump supported ruby versions and add JRuby failures are no longer ignored reverts part of Add changelog entry that was missing for last release Comment cleanup Since the GitHub release information for is missing I will also include it here trtable truncated details details summaryChangelogsummary Sourced from rubyzips changelog Security Default the validateentrysizes option to true so that callers can trust an entrys reported size when using extract This option defaulted to false in for backward compatibility but it now defaults to true If you are using an older version of ruby and cant yet upgrade to x you can still use and set the option to true Tooling Documentation Remove test files from the gem to avoid problems with antivirus detections on the test files Drop support for unsupported ruby versions Security Add validateentrysizes option so that callers can trust an entrys reported size when using extract This option defaults to false for backward compatibility in this release but you are strongly encouraged to set it to true It will default to true in rubyzip New Feature Add addstored method to simplify adding entries without compression Tooling Documentation Add more gem metadata links Do not rewrite zip files opened with openbuffer that have not changed Tooling Documentation Update examplerecursiverb in README Hold CI at trusty for now automatically pick the latest ruby patch version use rbx and hold jruby at Allow tilde in zip entry names fixes regression in from Support frozen string literals in more files Require pathname explicitly fixes regression in from Tooling Documentation CI updates Bump supported ruby versions and add JRuby failures are no longer ignored reverts part of Add changelog entry that was missing for last release Comment cleanup details details summaryCommitssummary Merge pull request from rubyzipv cb b Bump version to e d af Merge pull request from rubyzipbumpsupportedruby a Merge pull request from rubyzipremovetestfiles e d ea Merge pull request from rubyzipv c e e Bump version to d fe b Merge pull request from rubyzipchecksize f Drop old ruby and JDK versions from CI d bec Remove test files from gem cb ae Warn when an entry size is invalid Additional commits viewable in compare view details br Dependabot compatibility score Dependabot will resolve any conflicts with this PR as long as you dont alter it yourself You can also trigger a rebase manually by commenting dependabot rebase dependabotautomergestart dependabotautomergeend details summaryDependabot commands and optionssummary br You can trigger Dependabot actions by commenting on this PR dependabot rebase will rebase this PR dependabot recreate will recreate this PR overwriting any edits that have been made to it dependabot merge will merge this PR after your CI passes on it dependabot squash and merge will squash and merge this PR after your CI passes on it dependabot cancel merge will cancel a previously requested merge and block automerging dependabot reopen will reopen this PR if it is closed dependabot ignore this patchminormajor version will close this PR and stop Dependabot creating any more for this minormajor version unless you reopen the PR or upgrade to it yourself dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency unless you reopen the PR or upgrade to it yourself dependabot use these labels will set the current labels as the default for future PRs for this repo and language dependabot use these reviewers will set the current reviewers as the default for future PRs for this repo and language dependabot use these assignees will set the current assignees as the default for future PRs for this repo and language dependabot use this milestone will set the current milestone as the default for future PRs for this repo and language You can disable automated security fix PRs for this repo from the Security Alerts page details Hi guys I got a question for you please take it seriously rly I know it sounds crasy but give me a chance please Is there a way this system transmits to mhz I know its a lot but Im trying to make it work for space purposes like sending messages and stuff right from my computer without the need of anthenas trying to make a minimmalist instrument over here just my computer some mics and I please let me know if its possible to at least send signals to devices that are meters or further I will try to make it work and let you all know if it does Andy This sounds insane but I wonder if certain radio frequencies have a measurable effect on the system If one can send RF maybe one can receive too If this is true it would make device localization side channel information transfer and more scary stuff possible Given audio input probably even without an antenna it might be possible to decode radio signals But Im wondering if the same can be done without any IO permissions Hi Pro Do you know how to catch analog signals using wifi card on macOS What I want to do is to catch the raw analog signals from the wifi card or something like that and write the data down might be in the form of binary s and s As I know that wifi router will emitreceive EM waves and wifi card on laptop also receiveemit that EM waves So just want to know how the analog data is Thanks There is this part AM tuner at Hz The k for Kilo is missing It should be AM tuner at kHz Right Not really an issue but Ill hope youll indulge this misapplication for a quick discussion Anyone else have the MacBook Air with the i I hear something but it sounds pretty bad I am using a Grundig G radio Would the processor make any difference I tried some different frequencies They all sound bad and I wonder if the i actually puts out more noise and garbage and crap Makes me wonder how the hell this passed FCC at all I have downloaded the files and I followed the steps on the GitHub page but how do I playrun the tune files in my terminal ps I am working with a macbook pro We should have a common format for describing tunes series of beeps across the different implementations in this repository Extensive searching was done a simple widespread standard was not found Following is proposed Simple text file Each line represents a beep or a pause Column one is a positive integer number of milliseconds Column two is a positive integer frequency in Hz or which represents silence Columns are separated by a space Line ending is unix format File extension is tune Although not necessarily part of the tune consider adding a silence at the end so that looped playback sounds good Example for maryhadalittlelambtune Work plan x Convert existing tunes into this format save to tunes folder Update each implementation to accept a tune file on the command line stdin or however else x Using mmstreamsi Using counter and threads x In Javascript x Update run instructions so users know to supply the song file Related 