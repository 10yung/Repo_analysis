This PR contains the following updates Package Type Update Change googleclosurelibrary source devDependencies major googleclosurelibrary source devDependencies major Release Notes details summarygoogleclosurelibrarysummary v Compare Source details Renovate configuration date Schedule before am on Friday UTC verticaltrafficlight Automerge Disabled by config Please merge this manually once you are satisfied recycle Rebasing Whenever PR becomes conflicted or if you modify the PR title to begin with rebase nobell Ignore Close this PR and you wont be reminded about these updates again rebasecheck If you want to rebaseretry this PR check this box This PR has been generated by WhiteSource Renovate View repository job log here This PR contains the following updates Package Type Update Change googleclosurecompiler source devDependencies major Release Notes details summarygoogleclosurecompilernpmsummary v Compare Source v Compare Source v Compare Source v Compare Source v Compare Source v Compare Source v Compare Source v Compare Source details Renovate configuration date Schedule before am on Friday UTC verticaltrafficlight Automerge Disabled by config Please merge this manually once you are satisfied recycle Rebasing Whenever PR becomes conflicted or if you modify the PR title to begin with rebase nobell Ignore Close this PR and you wont be reminded about this update again rebasecheck If you want to rebaseretry this PR check this box This PR has been generated by WhiteSource Renovate View repository job log here Hi I have witnessed a major bug with Firestore where when you update a document one field failed to get updated while succeeding in other fields There is no way I can reproduce it again and there no debugging logs from Firestore that I have to give you but the update method for document failed to update one field while updating the other two in the below example once Is it possible that update for document fails for one field but not the others Does the update gets written all together atomically All or nothing I saw it happen in Firebase database console after I called cloud function it updated nd and rd rows but not st row of the document see below example I am troubled by it and without changing anything I reran the function and all three field got updated just fine But it is deeply troubling that sometimes firebase update would not update all fields I have stared at the code and really the dictionary key from the below example should have been updated but it didnt Codes around this await line got called meaning this code did get executed and updated two fields and I know this for SURE After staring at my code there is no way that I could have caused this Is it possible that Firestore update to a document field fails to write while succeeding in other fields in rare cases My dictionaryObject is dictionary objects inside a dictionary Let me know if this is ever possible await documentSnapShotrefupdate dictionary dictionaryObject outerDictionaryinnerDictionaryKeyNamefieldName object outerDictionaryinnerDictionaryKeyNamefieldName object Describe your environment Operating System version macOS Browser version Chrome Firebase SDK version Firebase Product firestore Describe the problem When Im updating a few hundred documents with batches rendering is blocked while firestore is sending the changed documents back through the WebChannel Having firebasefirestoresetLogLeveldebug on I can see that I get a bunch of messages one for each document change Connection WebChannel received documentChange While these messages are received the rendering of my application is blocked Using snapshotdocChanges I have already got the documents and rendered the changes but the lag happens after that while the server is responding with pending writes This breaks the dependency of SyncEngine and RemoteStore on indexeddbpersistencets and makes it easier to have a clean separation between yettobenamedcomponent and firebasefirestorepersistence Step READ THIS Are you in the right place For issues or feature requests related to the code in this repository file a Github issue If this is a feature request make sure the issue title starts with FR For general technical questions post a question on StackOverflow with the firebase tag For general Firebase discussion use the firebasetalk google group For help troubleshooting your application that does not fall under one of the above categories reach out to the personalized Firebase support channel Step REQUIRED Describe your environment Operating System version na Browser version na Firebase SDK version Firebase Product firestore Step REQUIRED Describe the problem Using CollectionReferenceadd the add command returns a promise containing a WriteResult but the documentation says it should be a DocumentReference javascript const admin requirefirebaseadmin adminintializeApp const db adminfirestore dbcollectionthingsadd a thenref ref is of type WriteResult consolelogrefid is undefined Update I do not see see this issue in the web version of the sdk just in the admin googlecloudfirestore thing Probably has something to do with this I couldnt find any info online after digging for awhile so I am asking two important pricing questions below From Firebase Video from Todd Kerpelman says that when you send messages in on chat in minutes there will be roughly writes and reads I dont know why it is reads Shouldnt it be writes and reads from the other person When you send a message why would that count as write AND read Why we have to pay more read whenever you write once to a document Does this mean when I do addSnapshotListenerWithIncludeMetadataChanges instead of mere addSnapshotListener would I would get twice as more reads Whenever you send a message it would be write read when hasPendingWrites true and read when hasPendingWrites false Thank you for answering my questions Seems like Firebase will be pretty costly for messaging apps This is my current state The code changes in src are not meant to be looked at and a bit hacky If you invoke yarn build in packagesfirestore it spits out two ESM files distthickclientindexemsjs distpersistenceindexemsjs The two things that I am still trying to figure out its How do I change persistence to import from thickclient Right now it imports all external dependencies from src How do I export all internal state in thickclient so that persistence can find it Note that for now this Rollup change is based on our existing code structure If that is a blocker we can split out code into multiple packages