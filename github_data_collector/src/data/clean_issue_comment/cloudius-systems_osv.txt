photoszzt discovered that our implementation of dlopen and dlsym is not complete Here is the list of shortcomings dlopen ignores all flags the default behavior should be RTLDLOCAL not RTLDGLOBAL which is the current default dlsym does not implement RTLDNEXT dlsym does not lookup for symbols in the dependant objects for nonRTLDDEFAULT and nonRTLDNEXT handle handle created with dlopen It would be nice to add vsock support to OSv For details of what it would take please see this conversation on mailing list Building an OSv image one including the OSv kernel and an application currently requires running OSv Both scriptsbuild and Capstan run the OSv kernel and utilities stored on its ramdisk namely toolsmkfsso to create a ZFS filesystem and toolscpiodso to create a ZFS filesystem on the image and upload files onto it In the back of our minds we always considered the idea of doing the last step creating the ZFS filesystem and copying files into it on the Linux build host without running an OSv guest at all But this never worked properly as demonstrated by issue But now that this issue was fixed we can return to this idea Not running the guest to build the filesystem has several advantages One is making the image smaller cpiodso is no longer as big as it was see but its still is over KB and we put it twice on each image and some of the other ZFS stuff in bootfsmanifestskel and usrmanifestskel might not be needed any more as well The second benefit is speeding up the build of OSv images on machines where running a guest is very slow eg VMs with no support for nested virtualization or not possible at all eg crosscompilation Im marking this issue as low priority because the current approach of scriptsbuild ie running the guest to uploads files onto it has been working quite well for years so were are in no real rush to replace it Hello I am running a fresh build of the Docker image at dockerDockerfile but tracingsmoketest still fails My steps docker build t osvbuilder Ive also tried with nocache to ensure my image is fresh docker run it privileged osvbuilder scriptsbuild check The check fails on tracingsmoketest with the following TEST tracingsmoketest Test tracingsmoketest FAILED Traceback most recent call last File gitrepososvscriptstestpy line in module main File gitrepososvscriptstestpy line in main runtests File gitrepososvscriptstestpy line in runtests runteststorun File gitrepososvscriptstestpy line in run runtesttest File gitrepososvscriptstestpy line in runtest testrun File gitrepososvscriptsteststestingpy line in run selff File gitrepososvscriptsteststesttracingpy line in tracingsmoketest assert BOOTPDHCP Request from in tcpdump AssertionError Some resources look for virtiofs This would require implementing a new virtio device and a new filesystem The challenge is that Linux implementation and uses FUSE layer which is OSv does not implement and never will probably For starters we could limit the initial implementation to a readonly part Even though per comments in issue boost spirit QI used by commandcc increases the size of loaderstrippedelfby K only it would still be desirable to replace it with something lighter One such replacement could use stdregex and following expressions like so Replace unescaped characters Use regex to extract all of kinds of things s quoted string s nonquoted string s is used for any whitespace character not just command terminatordelimiter Iterate over all matches to group then into vectors and start new vector on command delimiter Given the Python endoflife scheduled for Jan st we should upgrade at least the key scripts setuppy modulepy testpy etc under script to be Python compatible Please see These are two issues in rwlock discovered during reviewing of other bugs but did not directly cause them so it is of low priority fixing these issues rwlock is recursive for the writelock holder ie a thread holding a write lock can take another one But if a thread already holds a write lock and now tries to take also a read lock it will hang forever We should consider if this is to be allowed immediately or assert just hanging forever is never a good idea rwlockwunlock if the lock was recursive reduces the recursion count but that continues to go on to wake up a waiter This is a spurious wakeup the woken thread will discover the lock is still taken and go back to sleep So we should probably immediately return after reducing the recursion count The commit fixed the original crash reported by issue However when a user presses CtrlC on running golangpiehttpserver app OSv prints message about unimplemented tgkill syscall instead of exiting gracefully The goal of this issue is to provide a limited but reasonable implementation of this syscall to let Golang apps like the one mentioned here exit gracefully For more details please see this discussion on OSv dev list TravisCI offers free CI builds tests etc services to opensource projects I opened an OSv page there By adding a properlyformatted travisyml project see explanation in we could easily ask Travis to automatically try to build OSv after every commit Even more interestingly we can ask it to build on several different Linux distributions which can help us make sure that OSv still builds properly on older distros which the developers no longer have or test In the long run it would be nice for these automated build to also do make check ie run the tests but these will be very slow because Travis doesnt support nested virtualization so everything will be run in qemus emulator But OSvs build itself should be quick it enough it only minimally uses qemu to build the image this will be slower than usual but probably not prohibitively slow