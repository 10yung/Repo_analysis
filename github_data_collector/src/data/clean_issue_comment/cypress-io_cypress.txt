Hi My App uses following url to download a json file ModulesCommonconfigjson the last number is dynamically generated I want to stub this and load a json in my fixtures folder I have not been able to come up with a regex for this Any ideas Current behavior Given a static webpage with zero JavaScript present no jQuery library if there exists a DOM element with an id attribute set to jquery for example p idjqueryjQueryp then the cyvisit method throws a TypeError TypeError itemfirst is not a function Debug Logs cypressrunnerjs TypeError itemfirst is not a function Because this error occurred during a before each hook we are skipping the remaining tests in the current suite homepage at ObjectunwrapFirst at From previous event at runCommand at next From previous event at From previous event at run at Objectcycomputed as visit at Contextrunnablefn at callFn at HookdrivernodemodulesmochalibrunnablejsRunnablerun at From previous event at ObjectonRunnableRun at Cypressaction at HookRunnablerun at next at at timeslice logError cypressrunnerjs Added a breakpoint to view the object thats considered a jQuery object Desired behavior In a previous issue this type of error was thrown when an older version of jQuery was found on the webpage being tested According to the issue thread it was resolved in Cypress v Id expect that a webpage with zero JavaScript present shouldnt encounter this error Test code to reproduce The READMEmd file will contain directions on how to quickly reproduce this bug Versions Cypress v Operating System Mac OS X Browser Cypress Test Runners Default Browser Im testing a HTTPS site and after the script put the credencials to log in its not login with success Ive opened the security sheets page and notice that a error about certificate was showed Cypress v on MAc Spec js describeQA Admin itLoads the auth page not an empty frame cyvisit cygetinput Page is blank Notice the iframed document only has headhead element no body at all See the following in the terminal I have added a few line breaks to break the single string ERRORCONSOLE Blocked script execution in datatexthtmlcharsetUTF Chead E Cscript typetextjavascript E documentdomain alumniqcom var Cypress windowCypress parentCypress if Cypress B throw new ErrorSomething went terribly wrong and we cannot proceed We expected to find the global Cypress in the parent window but it is missing This should never happen and likely is a bug Please open an issue D Cypressactionappwindowbeforeload window Cscript E Chead E because the documents frame is sandboxed and the allowscripts permission is not set source datatexthtmlcharsetUTF Chead E Cscript typetextjavascript E documentdomain alumniqcom var Cypress windowCypress parentCypress if Cypress B throw new ErrorSomething went terribly wrong and we cannot proceed We expected to find the global Cypress in the parent window but it is missing This should never happen and likely is a bug Please open an issue D Cypressactionappwindowbeforeload window Cscript E Chead E Relevant error from the above text Blocked script execution in datatexthtml because the documents frame is sandboxed and the allowscripts permission is not set source datatexthtmlcharsetUTF Is this a question Questions WILL BE CLOSED Ask in our chat Current behavior The JS file is not getting loaded while testing using Cypress There is a check added to load the JS file when one of the window property is set Cypress opens the requested URL into iframes which has its own window object So the actual window object of the site is different and the Cypress window object is different Due to this JS file is not loading in Cypress browser The window property which is required to load the JS file returns value as undefined because the Cypress runs the site in its own frame which has its own window object Solutions We tried Which still does not works We tried setting the property of window object from the test itself Also tried adding chromeWebSecurity false to the config file A description including screenshots stack traces DEBUG logs etc Desired behavior A clear description of what you want to happen Test code to reproduce describe ExampleTest itVerify test cyvisitCypressconfigbaseUrl cyloginemail password parentwindowGLOBALVAR true windowGLOBALVAR true parentwindowframes windowGLOBALVAR true parentwindowframes windowGLOBALVAR true cywindowthenwindow windowGLOBALVAR true windowframes windowGLOBALVAR true If we cannot fully run the tests as provided the issue WILL BE CLOSED Issues without a reproducible example WILL BE CLOSED You can fork repo set up a failing test then link to your fork Versions Chrome Browser Version Version Official Build bit Version Official Build canary bit Cypress operating system browser Thanks for contributing Read our contribution guidelines here Example Closes Closes User facing changelog Cypress will now detect if your browser tab has crashed and will cleanly exit Additional details previously Cypress would hang open until the CI job timed out methods used to tell if the browser tab has crashed if the user is not cyvisiting and the socket disconnects and there is not a new runner connection already the browser tab crashed if the user is cyvisiting the socket disconnects and it does not reconnect within seconds generous this makes the code a lot more complex maybe the rules should just be if the runner disconnects and it does not reconnect within seconds the browser tab crashed dont try to be smart about it what do we do when an unexpected exit does occur always kill the browser in run mode exit with the error in open mode display the error as a warning in the desktopgui and bring desktopgui to front WIP using the existing RENDERERCRASHED error and cleaning it up a bit to be generic PR Tasks These tasks must be completed before a PR is merged Delete tasks if they are not applicable Have tests been addedupdated Has the original issue been tagged with a release in ZenHub internal team only Has a PR for userfacing changes been opened in cypressdocumentation Link to PR here Have API changes been updated in the type definitions clitypesindexdts Have new configuration options been added to the cypressschemajson clischemacypressschemajson Current behavior The Test Runner uses the Chrome fontawesome icon for many browser logos and the Firefox logo is outofdate with Mozillas current branding With cross browser support nearly complete we should take the opportunity to use official branded iconography for all of the browsers we support img width altScreen Shot at PM src Desired behavior Replace all usage of fontawesome browser logos with the proper branded icon Edge Firefox Chrome Chrome Canary Chromium Electron The test runner allows users to test against arbitrary Chromium browsers If given a name eg brave attempt to find the correct icon in the browserlogos package If no icon matches continue to use the faglobe icon Increase the size of the browser logo in the Test Runner from px to px Ensure all text that follows is vertically centered with the logo Is this a question Questions WILL BE CLOSED Ask in our chat Current behavior Every test that runs in Cypress causes Firefox to use a little more RAM up until Firefox consumes all available system RAM and crashes We have implemented a workaround in that will force Firefox to run garbage collection routines on a regular interval By default it is only enabled in run mode where it runs between every single test It is disabled by default in open mode because it causes the browser to freeze up between tests which can be annoying Users can override the default interval between forced GCs by setting the firefoxGcInterval config value to a positive number to set the interval for both open and run mode to null to disable it for both open and run mode to an object like runMode number null openMode number null to set different intervals for each mode Desired behavior This workaround becomes unnecessary once Firefox can fix this upstream Links Firefox tracking issue Incorrect Node version is being shown in Setting tab Actual Node version is being shown in setting tab Expcted Node Version should be shown in setting tab Version Details Cypress OS Win Enterprise bit Chrome NodeIssue bit When we open the mocha test case from test runner we get this error message Cypress Expected result test cases should run Actual result At of the start test case execution itself we get error RangeError Maximum call stack size exceeded Versions Cypress Os win Enterprise bit Chrome bit 