 Just ran gofmt w on the project root Thats all I made this PR with a project going on over at and its definitely a work in progress So if I got something wrong or this is annoying at all please file an issue over there and well sort it out Since this repo is no longer maintained it should probably be archived This may help make it more obvious as well If there is an error and the returned container is nil containerLogs panics This branches to ensure containerLogs isnt called with nil See issue where mattes states Everyone I started migrate years ago and Im happy its seeing widespread adoption I see forks at designs codeship uber segmentio newrelic gitGNU postmates and many more who find migrate helpful and try to help pushing it forward Some months ago I cofounded wwwtemplarbitcom and ever since things are busier than ever Its unfortunate but I wont be able to keep maintaining migrate Who is interested in stepping in and taking migrate over The most active successor seems to be this Thanks mattes for your efforts in bringing it this far Hi doing the following code i still get a cant acquire lock error go if err mUp err nil err migrateErrNoChange err migrateErrLocked loggerFatalfmigrating up v err any idea why would like someone implements support one of following tools for your great tool SQL migrations is a good thing but likely useless in many cases Migrate must support go migrations ie a function that accepts an instance of the database or a transaction object in case of SQL datastores Something along the lines of this to up the version go func uptx sqlTx error err txExecALTER TABLE calls ADD stats text return err down also looks the same go func downtx sqlTx error err txExecALTER TABLE calls DROP COLUMN stats return err ents in a single migrate file updown Truncate cause an implicit commit Currently all database backends must be compiled into migrate Some issues with this There is a shortterm annoyance with this that a recompilation is needed to add a new backend There is also a longterm risk that two backends will require different incompatible versions of a third party library Will allow external plugins outside of this repository to make each plugin maintained by different maintainers What are your thoughts on this