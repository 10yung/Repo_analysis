It is documented but not exposed This has been driving me up the wall for a few days now I want to do some advanced configuration of the USG and unifidocker but I can not for the life of me figure out where to put this file Everything I read tells me that I should put it into a folder called sites followed by my site ID There is no such folder Or do I need to create the whole directory structure here The folder structure is unifidata drwxrwxrx unifi unifi Nov backup drwxrwxrx unifi unifi Jan db rwxrwxrx unifi unifi Jan firmwarejson rwxrwxrx unifi unifi Nov keystore rwxrwxrx unifi unifi Jan systemproperties rwxrwxrx unifi unifi Jan systempropertiesbk drwxrwxrx unifi unifi Nov webrtc Do I need to create a folder here called sitessiteIDconfiggatewayjson Hi since Im using Raspberry Pi B with UEFI and Debian arm I needed to create version that support this arch Simply updated gosu to and changed base image I am trying to configure your docker image to utilize letsencrypt Somehow Im missing a step The unifi controller is running with the default unifi cert via port I can see the letsencrypt certs in unificerts But I cant figure out how to force them to be used in place of the unifi cert Could you look at my dockercompose and tell me where I went astray version services mongo image mongo containername uimongo networks unifi restart always volumes dbdatadb unifi image jacobalbertyunifi containername uicontroller dependson mongo init true networks unifi subnet restart always volumes unifidataunifidata unifilogunifilog unificertsunificert unifiinitunifiinitd environment DBURI mongodbmongounifi STATDBURI mongodbmongounifistat DBNAME unifi RUNASUID false TZ AmericaLosAngeles MEMLIMIT M VIRTUALHOST subdomainexamplecom LETSENCRYPTHOST subdomainexamplecom LETSENCRYPTEMAIL webmasterexamplecom CERTNAME certpem CERTPRIVATENAME privkeypem ports udp STUN tcp Speed test tcp Device controller comm tcp Controller GUIAPI as seen in a web browser tcp HTTP portal redirection tcp HTTPS portal redirection udp AP discovery logs image bash containername logs dependson unifi command bash c tail F unifiloglog restart always volumes logunifilog proxy image jwildernginxproxy containername proxy restart unlessstopped labels comgithubjrcsletsencryptnginxproxycompanionnginxproxy true volumes varrundockersocktmpdockersockro unificertsetcnginxcertsro vhostetcnginxvhostd htmlusrsharenginxhtml confetcnginxconfd dhparametcnginxdhparam uploadsizeconfetcnginxconfduploadsizeconfro ports networks default subnet proxyletsencrypt image jrcsletsencryptnginxproxycompanion containername letsencrypt restart unlessstopped environment NGINXPROXYCONTAINERproxy volumes varrundockersockvarrundockersockro unificertsetcnginxcertsrw volumesfrom proxy dependson proxy networks default subnet volumes vhost html conf dhparam db data log init networks subnet unifi Host operating system Ubuntu What tag are you using Example What complete docker command or dockercomposeyml do you use to launch the container omitting sensitive values docker run rm init p p p udp p udp e TZEuropeStockholm name unifi jacobalbertyunifi Problem description The Web GUI setup wizard should automatically detect my AP AC device but it does not I struggled today with getting this to work I started a container based on tag stable but could not get my AP to detectbe adopted I tried resetting it SSH to it and trigger resend of the inform packet setinform but nothing helped I inspected my network traffic and saw that the inform POST request got a response from the controller Then I checked with the info command on my AP and it said Server reject as its status So then I started experimenting with different tagged versions from Dockerhub and found that it worked in However the manual informmessages that I sent still got even when it was automatically detected So Im thinking the is a red herring but it got me on the right track tag detection works No No Yes Ive got a Ubiquiti AP AC with firmware version on it Will try to narrow this down further when I have the time Host operating system Ubuntu What tag are you using stable arm What complete docker command or dockercomposeyml do you use to launch the container omitting sensitive values Used docker compose file to sudo dockercompose up Note A screenshot of your configuration page if using a gui is acceptable What do you expect to happen Unifi Controller runs and visualizes devices as adopted What actually happens After using my backup from my Windows unifi controller instances to restore on the docker unifi controller I can log in When I log in I see my configuration etc but all devices have a greyed out botton saying Adopt Also there is some connecteddisconnected fluctuation When I start again my Windows Unifi Controller instances everything looks normal Synology NAS Working UniFi Controller inside Docker that can be accessed locally I can connect to the NAS interface from a remote location using QuickConnect synology technology I cannot figure out how to access the UniFi Controller page when I am remote when I am local I just useappend the port and all works fine Host operating system Synology DS Example Debian stretch or Open Media Vault What tag are you using Example latest hi have done was on this side is download latest version stop controller delete files start controller restore from backup version again What complete docker command or dockercomposeyml do you use to launch the container omitting sensitive values Example docker run rm init p p p udp p udp e TZAfricaJohannesburg v unifidatavarlibunifi v unifilogsvarlogunifi name unifi jacobalbertyunifiunifi Note A screenshot of your configuration page if using a gui is acceptable What do you expect to happen What actually happens Host operating system Synology What tag are you using latest What complete docker command or dockercomposeyml do you use to launch the container omitting sensitive values defaults What do you expect to happen A screen should pop up that allows the user to search for a picture for their client devices What actually happens Error Failed to load Some data requirements failed to load Please try again later I am using the Container station on QNAP and have just downloaded your latest unifi controller container I would like to upgrade this controller to the latest beta build which is and also be in a position to upgrade whenever a new version is released by Ubiquiti I have tried to SSH to the controller and use the documented method to do this using the wget controller url then installing from there This does not appear to be working as the wget command is not available in the container that you have made Is there another way to do this upgrade Do you provide containers with the beta versions If there is no easy way to do this I may end up just sticking with the stable releases assuming that you do create new containers with each stable release On that topic how soon after the stable versions are released do you publish the new containers Sorry for all the questions I am pretty new to both the unifi equipment and relatively new to using containers as well Cheers