Happy This update adds some new features as well as the groundwork for introducing new ones via the new GitHub v API Since it involves quite a few changes under the hood a bit of beta testing would be greatly appreciated links below New features Added option to use GitHub v API for syncing data If you sync a large amount of PRs Repositories sync status items responses andor review statusesassignments then turning this option on can result in dramatic speed improvements when syncing and a reduction in corresponding API usage since the number of calls Trailer has to make is significantly reduced Trailer needs to migrate some data before being able to turn this option on if you have existing data so you will have to sync all servers at least once before being able to turn this option on v API sync also features various improvements and optimisations to speed up some operations Option to display teams that have been assigned to review a PR Option to mark merge conflicts in PRs v API only Option to show addedremoved line counts in PRs as well as the ability to sort using that as a criterion v API only Option to scan closed and merged items for new events like comments and reactions v API only Reaction and status scanning logic has changed to keep syncs sane and help them scale up for larger numbers of items From now on Trailer will scan a fixed amount of items for statuses and reactions on every sync and will roundrobin through all items So if you sync items and you ve set items per refresh then all items will be refreshed within syncs Various minor bug fixes and tweaks across both macOS and iOS macOS Improvements to colours and dark mode handling Improvements to keyboard handling in the repository list editor Notarised binary for greater security iOS iOS is now mature enough and has enough handling for windowing and multitasking that it makes no sense to have an inapp web view and splitscreen detail view on the iPad Instead Trailer now works on iOS the same way it works on macOS ie as a directory of items and leaves opening and handling the URL of each item to the system For instance on iPad you can now set up your own splitscreen by dragging an entry to the side of the screen and creating a new Safari window Major UI refresh for iOS including improved system appearance support iOS native system icons context menus for items and many miscellaneous UI fixes Installing the beta macOS iOS If you want to be totally safe and be able to rollback to an earlier release remember to back up your data folder in LibraryApplication SupportcomhousetripTrailer I have a watched repository thats configured to only show my issuesPRs and if I turn on the autosnooze feature it puts all the other issues in that repository into my snoozed section Ive noticed that LibraryApplication SupportTrailerSparkle folder on my disk is where all previous app versions are silently placed They arent even deleted after update Over time this folder can grow to a considerable size because each upgrade adds files zipped version unzipped version Not sure if you can do something about it Hi Its an amazing app and Im wondering if we could add a feature to ignore some of those pull requests in Participated section I dont know if this is due to upgrading to Catalina because its been a while since I tried running Trailer from the command line Anyways when I do Im now seeing this error Trailer seems to be running ok but I just wanted to report this CoreData annotation Failed to load optimized model at path ApplicationsTrailerappContentsResourcesTrailermomdTrailer omo Environment App Version MacOS A standard Github server It seems like mentiones from closed merged PRs are not coming to the app while Github email notifications are being sent in such cases Is there a setting to enable that or its not supported Its a tiny UX bug that I noticed some time ago but never opened an issue I am running v on macOS Steps to reproduce Open Preferences Open Repositories tab Enter some text in the Group field for repository Press Return key on the keyboard Expected Get out of editing mode same as most other apps eg renaming file in Finder Happened Adds a space after the group name Screenshot Screenshot at Im trying to understand the sync behavior of Trailer It seems like PRs created before the first sync but updated after are not pulled in I cracked open the sqlitedb and saw that theres PRs for a repo Im in which has at least an order of magnitude more open PRs than that When I look at the Trailer logs it seems that it calls the pulls API but does not sort by updated which means it sorts by created by default This raised some questions in my head It almost seems like Trailer only updates PRs while they are open If my PR gets a comment after it merges would Trailer see that Is there some truncation of list of all PRs to If I stay offline for a long time relative to how frequently the repo gets updated is it possible to miss some PRs I tried reading some of the code but my Swift reading ability is kindergarden level at best Id appreciate any pointers to help my understanding The users I set to ignore are all bots They post predictable responses to URLs builds etc Itd be nice if the badge counts didnt include their comments since I know for every new PR I create a bot would add a comment Thanks Similar to how its possible to ignore things by a certain user would it make sense to ignore certain labels and not show them Some labels may be used for automation and deployment which may not be as useful when looking at PRs as a set of conversations to have with teammates