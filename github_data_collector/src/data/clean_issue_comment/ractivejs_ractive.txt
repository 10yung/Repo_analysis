 Description The second setup in the Wiki link to where the guide is supposed to be hosted points to nowhere when you go there also the link seems to be not correct as the correct path would be to point to the actual website url Versions affected NA Platforms affected NA Reproduction NA Description When ontap is on radio button even if the button is tapped the button is not be checked Versions affected Platforms affected Safaricordova ios webview Reproduction HTML input typeradio namersu value ontap rsuchanged input typeradio namersu value ontap rsuchanged JS rsuchanged e arg ifarg thisdataplayinforsu thisdataplayinfohalf no thisractiveset half info half no thisdataplayinfohalf no half course cno cname playinfo thisdataplayinfo selecthidden commonisEmptythisdatacourse else thisdataplayinforsu if commonisEmptythisdatacourse thisdataplayinfohalf no thisdatacourse cno thisractiveset half info half no thisdataplayinfohalf no half course half course selecthidden false playinfo thisdataplayinfo return true Description Im dynamically loading in ractive components with webpacks import and then using RactiveattachChildlazyLoadedComponentInstance anchorname But the dynamicallyattached child component doesnt seem to get torn down The parent component that owns the anchor anchorname tears down when its hidden but the dynamically attached child doesnt example code below Docs for attachChild indicate that the parent will manage the attached childs renderunrender cycle Does that cycle include teardown Versions affected Reproduction This code demonstrates how dynamicallyattached child components dont teardown but nondynamicallyattached children do teardown DOCTYPE html html langen head titleRactive Dynamic Componentstitle head body body script src script Page Ractiveextend template Page msg onteardown consolelogtearing down page Page Ractiveextend template Page something onteardown consolelogtearing down page AppRoutesDynamic Ractiveextend template h Dynamic page componentsh button onclicksetactive page Page button button onclicksetactive page Page button div if active page page msgyay if if active page page somethingyep if div oninit consolelogAppRoutesDynamic initing thispage null thispage null thisobserveactive active if active null return if page component isnt yet attached attach it if active page thispage null thispage Page thisattachthispage page else if active page thispage null thispage Page thisattachthispage page onteardown consolelogAppRoutesDynamic tearing down goTo componentName if componentName page if thispage null thispage Page thisattachthispage page else if thispage null thispage Page thisattachthispage page attachpageInstance target thisattachChildpageInstance target AppRoutes Ractiveextend template h Static page componentsh button onclicksetactive page Page button button onclicksetactive page Page button div if active page Page msgyay if if active page Page somethingyep if div components Page Page data return active null onteardown consolelogAppRoutes tearing down Ractive el documentbody template button onclicktoggleshowToggle page components parentbuttonbrbr if show AppRoutes this works as expected AppRoutesDynamic this one doesnt call teardown on page components else AppRoutes hidden so expecting currentlyshown page component to tear down if components AppRoutes AppRoutesDynamic data return show true script html Im new to ractive and looking at the table sort tutorial at I see this in my console Overriding Ractive prototype function sort without calling the bsuper b method can be very dangerous Am I doing something wrong Is there any way to stop event propagation with event delegation in iterative sections on Hi I have this code example javascript const MyComponentA Ractiveextend template h Hello from my custom component Ah const MyComponentB Ractiveextend template h Hello from my custom component Bh const InnerComponent Ractiveextend template div classcustomyielddiv const OuterComponent Ractiveextend components InnerComponent template div classoutercontentdiv const app new Ractive components MyComponentA MyComponentB OuterComponent el documentbody template div classapp OuterComponent InnerComponent MyComponentA InnerComponent InnerComponent MyComponentB InnerComponent OuterComponent div I know that this code wont render MyComponentA neither MyComponentB as yield keyword actually sets the context to OuterComponent which doesnt know how to resolve them Is there a way to move yield context multiple levels up or am I just doing the whole thing terribly wrong Thanks Currently you can use computeds with get and set keys as the syntax Id love to also see a compare key The compare key allows you to define a custom comparator for new and old values to see whether downstream dependencies and observers should fire I could be wrong but right now all nonliteral computeds seem to always fire observers when their upstream values change This change would allow me to stop nonchanges to objects from trickling downstream unnecessarily For example computed myObj get const foo thisgetmySourceObj return Objectassign foo compare JSONstringify This would use JSONstringifyval JSONstringifyoldVal instead of val oldVal Hi the example is here There are two tables The first is plainly in the template With an onclicklinkkeypath selectedBis and the other basically the same but wrapped inside a component You can see that clicking on the first table propagates the binding to the second table its the same data but if you click on the second table wrapped in a component the onclicklinkkeypath selectedBis appears to break the link In order to keep Ractive rocking I think providing examples is a good way to go forward Contributions welcome make it even greater Possibly even linking it in the main site Sorry if the style is not up to date Most of it was done prethemechange Hi I noticed that a recent update from I assume its latest and gone from to changed how event methods are handled Following snippet button onclickdoSomethingthisbutton doesnt work anymore and just throws a cryptic exception Instead it should apparently now be replaced with the more unambiguous button onclickthisdoSomethingthisbutton Due to the widespread usage of calls like onclicksetmykeypath foo I think placing a warning if such methods dont start with a would be very helpful Otherwise people have no clue whats going on when updating