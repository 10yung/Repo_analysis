Using version i got following behaviour img width altbefore src img width altmid src img width altafter src As you can see color for ie brightblack seems to get changed but not reseted Feature Request Terminal emulators default to either a light background based theme or a dark background based theme This tool assumes a dark background based terminal but this isnt true for all terminals For example the default terminal on Linux Mint girtwhitebackground It is currently possible to modify the colors to ensure that the text is visible on a white terminal but it should be possible to switch the rebase editor to a lightdark mode that would provide a better set of defaults This should also be configurable via an environment variable so that systems that switch lightdark mode based on the time of day can dynamically change the mode The color configuration should be updated to optionally take two colors per configuration Version is ready to be released A tasks required to get version completed x Test on Windows x Test on MacOS x Test on Linux x Update CHANGELOG x Bump Cargotoml version number x Tag new release Release on Arch x Release to Cargo x Release to Homebrew Release to FreeBSD Release to Chocolatey Release to Scoop Verify release complete I would nice to have this project available everywhere I dont have the energy or knowledge to provide builds for everywhere the tool could be used If anyone is willing to create a package I would be grateful List taken from ripgrep x Debian deb x Homebrew x FreeBSD pkg Linuxbew MacPorts x Windows Chocolatey x Windows Scoop x Arch Linux pacman Gentoo emerge Fedora dnf openSUSE zypper Ubuntu apt PPA OpenBSD pkgadd NetBSD pkgin If anyone is willing to help please comment below It would be nice if in addition to the commit information the commits diffpatch were shown Git supports a git rebase todo file that handles merges that occur during rebase For example git rebase i r label onto Branch MitMarotimusetryfrom reset onto pick d e Use TryFrom trait now that it is stable label MitMarotimusetryfrom Branch MitMarotimbasicbreaksupport reset onto merge C cdea MitMarotimusetryfrom Merge pull request from MitMarotimusetryfrom label branchpoint pick ac Add basic support for the break instruction label MitMarotimbasicbreaksupport reset branchpoint Merge pull request from MitMarotimusetryfrom merge C c a c f MitMarotimbasicbreaksupport Merge pull request from MitMarotimbasicbreaksupport pick a Add full support for the break action Rebase df a onto df commands Commands p pick commit use commit r reword commit use commit but edit the commit message e edit commit use commit but stop for amending s squash commit use commit but meld into previous commit f fixup commit like squash but discard this commits log message x exec command run command the rest of the line using shell b break stop here continue rebase later with git rebase continue d drop commit remove commit l label label label current HEAD with a name t reset label reset HEAD to a label m merge C commit c commit label oneline create a merge commit using the original merge commits message or the oneline if no original merge commit was specified Use c commit to reword the commit message These lines can be reordered they are executed from top to bottom If you remove a line here THAT COMMIT WILL BE LOST However if you remove everything the rebase will be aborted Note that empty commits are commented out Would it be feasible to have exceptional package built for older Debianbased releases like Ubuntu trusty Ive got a bunch of legacy setups where Id like to use this tool but cannot upgrade to newer Ubuntu release If I got things right its only about versions of dependencies not the tool itself Thanks in advance Im not sure where this option would go right since theres no config yet Itd be neat if there was an option to have references to commits in the commit messages rewritten when successfully rebased For example lets say we have the following commits commit b d c f b a c bc f dc HEAD master Date Sat Sep rd Refs bcc commit bcc f a c ac d d d c Date Sat Sep nd commit aff b b fa fc b d e a Date Sat Sep st When I rebase the nd and rd commits it would be useful if the rd commits message could automagically have its reference to bcc updated to the new hash of the nd commit Its nice to be able to diff your current tree from what youre rebasing against and a keybinding like v for view to run git diff would be helpful At least in my case theres often a bunch of unused screen real estate and displaying the help menu or changing the display of the Actions bar at the bottom would be nice Sort of like WordStar 