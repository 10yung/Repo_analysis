As titled Checklist x run npm run test and npm run benchmark x tests andor benchmarks are included documentation is changed or added x commit message and code follows Code of conduct Project Charter is published on website or github I followed this template I think we should write down a process on the Section Decisionmaking Voting andor Elections since there is not a written standard right now in our CONTRIBUTINGmd Ref Checklist run npm run test and npm run benchmark tests andor benchmarks are included x documentation is changed or added x commit message and code follows Code of conduct Added a reference to chainable methods on inject function based on the update of lightmyrequest Thank you for your pull request Please provide a description above and review the requirements below Bug fixes and new features should include tests and possibly benchmarks Tip npm run bench to compare branches interactively Contributors guide Checklist x run npm run test and npm run benchmark x tests andor benchmarks are included x documentation is changed or added x commit message and code follows Code of conduct Thank you for your pull request Please provide a description above and review the requirements below Bug fixes and new features should include tests and possibly benchmarks Tip npm run bench to compare branches interactively Contributors guide Checklist x run npm run test and npm run benchmark x tests andor benchmarks are included documentation is changed or added x commit message and code follows Code of conduct Draft PR in conjunction with Can also merge this work into that PR if delvedor wants Closes Currently missing async hook function definitions Will add those next either in this branch or another one Ref x Update legal copyright notice on project website and github Checklist run npm run test and npm run benchmark tests andor benchmarks are included x documentation is changed or added x commit message and code follows Code of conduct Bug Report npm test FAIL testsampletestjs timeout test TAP signal SIGTERM handles type Server events request connection clientError connectionKey expired TAP stack emit nodemodulessignalexitindexjs processlistener nodemodulessignalexitindexjs FAIL testsampletestjs failed of s timeout This test case not finishing and it says timeout error To Reproduce Steps to reproduce the behavior appjs const Fastify requirefastify function buildFastify const fastify Fastify fastifyget function request reply replysend hello world fastifylesten return fastify moduleexports buildFastify testjs const tap requiretap const buildFastify requireapp taptestGET route t tplan const fastify buildFastify At the end of your tests it is highly recommended to call close to ensure that all connections to external services get closed ttearDown fastifyclose fastifyinject method GET url err response terrorerr tstrictEqualresponsestatusCode tstrictEqualresponseheaders contenttype applicationjson charsetutf tdeepEqualJSONparseresponsepayload hello world run npm test Current behavior This program should quit and test result must be shown A clear and concise description of what you expected to happen Paste the results here FAIL adminauthauthtestjs timeout test TAP signal SIGTERM handles type Server events request connection clientError connectionKey expired TAP stack emit nodemodulessignalexitindexjs processlistener nodemodulessignalexitindexjs FAIL adminauthauthtestjs failed of s timeout Expected Behavior Suites of completed Asserts passed of Time s File Stmts Branch Funcs Lines Uncovered Line s All files apptjs Your Environment node version v fastify version os Mac any other relevant information Im opening this PR to get feedback about how I would like to refactor the validation and serialization The code of this PR is not working yet it is only a blueprint of how I would like to proceed The main targets are drop the shared schema feature for these reasons it is not standard the standard admin the definitions that can be used with ref to works as the shared schema does a lot of less code to maintain we dont need to traverse the schemas and apply logic the validators ajv joi etc and the serializer fastjsonstringify will do the job for us improve the usability of the compiler function to let the user less pain in the configuration of custom modules If we reach these goals I think we will have fewer issues on this piece of code The impact on actual users would be refactor of the setup of custom validators change the schemas used with shared schema feature adding a standard id and adding ref newId in the routes schema What do you think Checklist run npm run test and npm run benchmark tests andor benchmarks are included documentation is changed or added commit message and code follows Code of conduct Hello folks As you know we have decided to remove middlewares support from Fastify core and move it to an external plugin which will be middie and fastifyexpress If you want to know more about this decision take a look at In this pr we are removing any line of code that handled our middlewares the request lifecycle has been updated same for test and documentation EthanArrowood would you like to work on the type definitions All the tests that I have removed from Fastify core will be added to fastifyexpress and middie so we can be sure that the behavior of the API will be the same Closes Checklist x run npm run test and npm run benchmark x tests andor benchmarks are included x documentation is changed or added x commit message and code follows Code of conduct Related Maybe it is a nodejs bug but in handleRequestjs function preValidationCallback err request reply if replysent true replyresfinished true return if err null replysenderr return function preHandlerCallback err request reply if replysent replyresfinished true return if err null replysenderr return when handle HEAD request replyresfinished will be true but replyreswritableEnded is false use finished would cause client pending because server early returns I changed my nodemodulesfastify source use writableEnded then everything is Ok Since finished is Deprecated in Nodejs v I think use writableEnded if it exists is the right thing