 img width altWeChat f cf b e ff c a src Hello there monitoring index of catonAlso please teach thank you Hello Hockey App is depreciated and the service will make a transition into App Center Will you plan a App Center integration Since version found in KSCrashReportVersionh a different method for converting the report timestamp into a date string is used Instead of ksdateutcStringFromTimestamp now ksdateutcStringFromMicroseconds is invoked What is the use case for this since NSDateFormatter does not support microseconds Fix suggesstion if ksdateutcStringFromMicroseconds is needed extend the report fields totimestamp and timestampPrecise I would be happy to create this pull request Xcode adds a new IDEWorkspaceChecksplist file to a workspaces shared data to store the state of necessary workspace checks Committing this file to source control will prevent unnecessary rerunning of those checks for each user opening the workspace ref Xcode Release Notes Remove secondary thread in mach exception monitor I will explain why I do this blow Lets focus on KSCrashMonitorMachExceptionc First line we call restoreExceptionPorts in which we set exception port to gpreviousExceptionPorts From now all exception message will be sent to gpreviousExceptionPorts Then we resume gsecondaryMachThread on line in case of the crash handling code itself crashes However gsecondaryMachThread listens on gexceptionPort which no longer receive any exception message Hello We have found that when the KSCrash pod is included with the gRPCCore pod it leads to C undefined template errors to do with the Optional type The minimal reproduction case is to Create an empty iOS application using Swift in Xcode Run pod init Add pod KSCrash and pod gRPCCore to the dependencies Run pod install Open the workspace file Try to build the project Compilation is halted early due to many errors such as Implicit instantiation of undefined template llvmOptionalchar Demanglecpp As I understand it both dependencies declare an Optional template but in different namespaces Independently these dependencies compile fine but together you can observe the errors above Can anyone possibly explain the issue and point us in the right direction for a solution to enable use of both libraries Thanks in advance Chris PS this is the tooling Im using Xcode Swift CocoaPods nullcrash In KSCrashReportSinkQuincyHockeym file line Did you mean CPUSUBTYPEARM V Does the subType CPUSUBTYPEARMV exist in the CPU architecture of arm Looking forward to your reply Best wishes I would like to obtain the crash report in a string format and put the crash reports contents into my own log file I dont want to upload the crash report to any server and do not want to send it via email either Out of all the KSCrash installation types available KSCrashInstallationConsole seems like the one to use for my scenario But the console installation has comments that its used for testing purpose only So I would like to know what is the right way to retrieve crash report in string format using KSCrash I am new to obtaining stack trace from iOS apps so any help is appreciated 