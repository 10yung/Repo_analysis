Hi there Wheres the website Cheers If the same download path is used for all instances it may prove problematic especially if it is configured to download specific files the file would be overwritten and the data lost Adding the instance name to the path allows the feature to be used by multiple instances in succession without potentially overwriting files cc tas smurawski gep This is faster as it doesnt have to traverse the whole file system for the requires Signedoffby Tim Smith tsmithchefio Updates the requirements on minitest to permit the latest version details summaryChangelogsummary pemSourced from a href changelogaemp blockquote p p ul li p minor enhancementsp ul liBlockassertions eg assertoutput now error if raised inside the block casperisfineli liChanged assertraises to only catch Assertion since that covers Skip and friendsli ul li li p bug fixesp ul liAdded example for value wrapper with block to Expectations module stomarli liFixed use of mustwontbewithindelta on Expectation instance stomarli liRenamed UnexpectedErrorexception to error to avoid problems with reraising casperisfineli ul li ul p p ul li p minor enhancementsp ul liAdded MinitestGuardosxli liAdded examples to documentation for assertraises lxxxvili liAdded expectations pathmustexist and pathwontexist Not thrilled with the namesli liAdded failafteryear month day msg to allow timebombing after a deadlineli liAdded skipuntilyear month day msg to allow deferring until a deadlineli liDeprecated MinitestGuardmaglevli liDeprecated MinitestGuardrubiniusli liFinally added assertpathexists and refutepathexists deividrodriguezli liRefactored and pulled Assertionsthingstodiff out of diff BurdetteLamarli ul li li p bug fixesp ul liFix autorun bug that affects fork exit status in tests dylanahsmithjhawthornli liImproved documentation for valueexpect especially for blocks svoopli liSupport new Proctos format ko li ul li ul p p ul li p bug fixp ul liAfter chatting w a href and others decided to lower support to include ruby li ul li ul p p ul li p minor enhancementp ul liAdded documentation for Reporter classes sshawli ul li li p bug fixesp ul liAvoid using match to support older ruby versions yyagili liFixed broken link to reference on goodnessoffit testing havenwoodli liUpdate requirements in readme and Rakefilehoe specli ul li ul trtable truncated blockquote details details summaryCommitssummary ul lia href prepped for releaseli lia href Closed temporary IOs when exiting capturesubprocessio doudouli lia href Added example for value wrapper with block to Expectations module stomarli lia href Added minitestlog to known modules BurdetteLamarli lia href Blockassertions eg assertoutput now error if raised inside the block li lia href Fixed use of mustwontbewithindelta on Expectation instance stomarli lia href Changed assertraises to only catch Assertion since that covers Skip and frli lia href Renamed UnexpectedErrorexception to error to avoid problems with reraisinli lia href prepped for releaseli lia href Deprecated MinitestGuardmaglevli liAdditional commits viewable in a href viewali ul details br Dependabot will resolve any conflicts with this PR as long as you dont alter it yourself You can also trigger a rebase manually by commenting dependabot rebase dependabotautomergestart dependabotautomergeend details summaryDependabot commands and optionssummary br You can trigger Dependabot actions by commenting on this PR dependabot rebase will rebase this PR dependabot recreate will recreate this PR overwriting any edits that have been made to it dependabot merge will merge this PR after your CI passes on it dependabot squash and merge will squash and merge this PR after your CI passes on it dependabot cancel merge will cancel a previously requested merge and block automerging dependabot reopen will reopen this PR if it is closed dependabot close will close this PR and stop Dependabot recreating it You can achieve the same result by closing it manually dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version unless you reopen the PR or upgrade to it yourself dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version unless you reopen the PR or upgrade to it yourself dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency unless you reopen the PR or upgrade to it yourself dependabot use these labels will set the current labels as the default for future PRs for this repo and language dependabot use these reviewers will set the current reviewers as the default for future PRs for this repo and language dependabot use these assignees will set the current assignees as the default for future PRs for this repo and language dependabot use this milestone will set the current milestone as the default for future PRs for this repo and language dependabot badge me will comment on this PR with code to add a Dependabot enabled badge to your readme Additionally you can set the following in your Dependabot dashboard Update frequency including time of day and day of week Pull request limits per update run andor open at any time Outofrange updates receive only lockfile updates if desired Security updates receive only security updates if desired details Description Im using three step provisioning kitchen create kitchen converge and kitchen verify With latest testkitchen version converge action often fails due to communication issue After small delay converge may start to work normally Most likely default transport attributes are not good enough in this case Here is a list of related attributes I have connectionretries connectionretrysleep maxwaituntilready operationtimeout receivetimeout Which attribute I need to adjust to allow winrm to be available later kitchenyml transport section ruby transport name winrm elevated true username ENV VCENTERGuestElevatedUserName unknown password ENV VCENTERGuestElevatedPassword unknown Kitchen Version ruby kitchen version Test Kitchen version ChefDK Version ruby chef version ChefDK version Chef Infra Client version Chef InSpec version Test Kitchen version Foodcritic version Cookstyle version Platform Version Windows Server Datacenter Evaluation Replication Case Im running this via vmware vcenter driver on vmWare farm remotely from WS ServerDC agent with ChefDK ant testkitchen installed After kitchen create a full clone of virtual machine is created on farm and then kitchen converge is called That converge action fails from time to time but if you repeat it again it started normally Kitchen Output ruby kitchen create VS ProfWin LTSB Starting Test Kitchen v Creating VS ProfWin LTSB Cloning VS BaseWin LTSBs to create the VM Waiting for VMware tools to become available timeout seconds Waiting for IP timeout seconds Created machine VS ProfWin LTSB b c with IP Finished creating VS ProfWin LTSB m s Test Kitchen is finished m s kitchen converge VS ProfWin LTSB Starting Test Kitchen v Converging VS ProfWin LTSB Preparing files for transfer Preparing dnajson Resolving cookbook dependencies with Berkshelf Removing noncookbook files before transfer Preparing validationpem Preparing clientrb Exception Class KitchenActionFailed Message actions failed Failed to complete converge action No connection could be made because the target machine actively refused it No connection could be made because the target machine actively refused it connect for port on VS ProfWin LTSB Please see kitchenlogskitchenlog for more details Also try running kitchen diagnose all for configuration Kitchen Diagnose Here is transport portion of kitchen diagnose all output ruby transport connectionretries connectionretrysleep elevated true kitchenroot DdevchefVS Prof loglevel info maxwaituntilready name winrm operationtimeout password vagrant port rdpport receivetimeout scheme http testbasepath DdevchefVS Proftestintegration username vagrant winrmtransport negotiate Description At present testkitchen is only building commands that support for chefclient As we can not guarantee that every distribution of Chef OSS will create the symlinks for wrapping chefclient We should create a provisioner attribute that defines the executables used for our various chef provisioners chefapply chefsolo chefzero The defaults still should be the expected offical Chef executables chefzero chefapply chefsolo This also is outlined in the distribution standards distributed by Chef Additionally commands used to execute the distribution if they include trademarks of Chef must be different from those in Chef Softwares distribution For example if you create a distribution of Chef the command to use your distributions binary cannot be chef though it can be something like kitty the goal is prevent confusion about which distributions come from Chef Software and which come from another source That said it is ok to symlink a command to a distributions equivalent command If you have created a distribution of chef called kitty it is fine to symlink chefclient to call kittyclient In these cases you do need to make it clear that the user is using kitty and not chef If someone uses chefclient and it calls kittyclient the command output should display words to the user reminding them that they are using kitty and a symlinked command rather that the official chef distribution Source Kitchen Version ruby kitchen version Test Kitchen version ChefDK Version NA Ruby Version ruby ruby p revision x darwin Platform Version MacOS Replication Case If I use the Cinc client as an example if they didnt have cincwrapper to symlink chef executables then testkitchen will not work for it Updates the requirements on thor to permit the latest version details summaryChangelogsummary Sourced from thors changelog release Fix say nonString break regression release Add support for a default to ask Avoid namespace not initialized warning Avoid private attribute warning Fix initializing with unknown options Loosen requiredrubygemsversion for compatibility with Ubuntu Shellask support a noecho option for stdin Shellask change API to be echo false Display a message without a stack trace for ambiguous commands Make say and saystatus thread safe Dependency for console io version check Alias help to help on subcommands Use mimetypes x for Ruby compatibility for Ruby only Accept tt files as templates Check if numeric value is in enum Use Readline for user input Fix dispatching of subcommands concerning help and args Fix warnings when running specs with VERBOSE true Make subcommand help more consistent Make the current command chain accessible in command release Revert regressions found in release Remove rake thor Only display colors if output medium supports colors Pass parentoptions to subcommands Fix nondashprefixed aliases Make error messages more helpful Rename task to command Add the method to allow for custom package name release Add better support for tasks that accept arbitrary additional arguments eg things like bundle exec Add stoponunknownoption Only strip from stdingets if it wasnt ended with EOF Allow send as a task name Allow passing options as arguments after Autoload ThorGroup release Add enum to string arguments release Fix regression when destination root contains reserved regexp characters trtable truncated details details summaryCommitssummary c da f Release c a Merge pull request from malissue a e Convert message to string f d Convert message to string See full diff in compare view details br Dependabot will resolve any conflicts with this PR as long as you dont alter it yourself You can also trigger a rebase manually by commenting dependabot rebase dependabotautomergestart dependabotautomergeend details summaryDependabot commands and optionssummary br You can trigger Dependabot actions by commenting on this PR dependabot rebase will rebase this PR dependabot recreate will recreate this PR overwriting any edits that have been made to it dependabot merge will merge this PR after your CI passes on it dependabot squash and merge will squash and merge this PR after your CI passes on it dependabot cancel merge will cancel a previously requested merge and block automerging dependabot reopen will reopen this PR if it is closed dependabot close will close this PR and stop Dependabot recreating it You can achieve the same result by closing it manually dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version unless you reopen the PR or upgrade to it yourself dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version unless you reopen the PR or upgrade to it yourself dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency unless you reopen the PR or upgrade to it yourself dependabot use these labels will set the current labels as the default for future PRs for this repo and language dependabot use these reviewers will set the current reviewers as the default for future PRs for this repo and language dependabot use these assignees will set the current assignees as the default for future PRs for this repo and language dependabot use this milestone will set the current milestone as the default for future PRs for this repo and language dependabot badge me will comment on this PR with code to add a Dependabot enabled badge to your readme Additionally you can set the following in your Dependabot dashboard Update frequency including time of day and day of week Pull request limits per update run andor open at any time Outofrange updates receive only lockfile updates if desired Security updates receive only security updates if desired details Description I am looking for help understanding the control flow of testkitchen I am updating the kitchen driver kitchenopennebula to use the latest fogopennebula gem When I run kitchen I am getting the following warning fog DEPRECATION Unable to load FogOpenNebulaCompute fog DEPRECATION The format FogComputeOpenNebula is deprecated Starting Test Kitchen v My problem is as follows When test kitchen starts where is it calling FogComputeOpenNebula from Test kitchen runs without error The issue is just the deprecation warning I have removed the obvious references to FogComputeOpenNebula from the kitchendriver but I cannot figure out where fog would be referenced from in the testkitchen program We are using an old version of ChefKitchen but as far as I can tell the deprecation warning is not related to the old version Kitchen Version Tell us which version of testkitchen you are using kitchen version ruby Test Kitchen version ChefDK Version If you are running testkitchen via ChefDK or Chef Workstation chef version will provide additional relevent version details ruby Chef Development Kit Version chefclient version delivery version master ebb a c b d ff c be fee e berks version kitchen version inspec version Ruby Version If you are not using testkitchen via ChefDK or Chef Workstation please provide the output of ruby version ruby ruby p revision x linux Platform Version Tell us which Operating System distribution and version testkitchen is running on Ubuntu Replication Case I doubt this will be useful since I dont know of any public OpenNebula cluster to test this on But the key change is that the kitchenopennebula driver is using fogopennebula instead of the fog gem Note that I am just wondering about how test kitchen loads thirdparty drivers It is not clear how my deprecation warning above is occurring Kitchen Output Please note that kitchen runs as expected no errors the problem is the deprecation warning ruby fog DEPRECATION Unable to load FogOpenNebulaCompute fog DEPRECATION The format FogComputeOpenNebula is deprecated Starting Test Kitchen v truncated Kitchen Diagnose I will add if information would be helpful Feature Request It would be helpful to have an environment variable that we could use to specify the instances we want to work on For example say i have instances I work with windows server windows server windows client windows client rhelserver rhelclient But I am only working with the windows server and the rhelserver today I can use regex to specify those but then i have to append that to every kitchen command I run It would be nice if I could have something like WORKINGINSTANCESregex and then kitchen would check for that variable That way you could just update the var if you wanted to work with different instances instead of updating each command Description When using kitchen with RHEL RedHat with subscriptionmanager register which requires a registration for basic packages such as nfsutils or rsync using the KITCHENNFS env which switched the syncedfolders to NFS fails on default Installing NFS client STDERR The following SSH command responded with a nonzero exit status Vagrant assumes that this means the command failed if command v dnf then dnf y install nfsutils nfsutilslib portmap else yum y install nfsutils nfsutilslib portmap fi if test ps o comm systemd then binsystemctl restart rpcbind nfs else etcinitdrpcbind restart etcinitdnfs restart fi Stdout from the command Loaded plugins productid searchdisabledrepos subscriptionmanager This system is not registered with an entitlement server You can use subscriptionmanager to register No package nfsutils available No package nfsutilslib available No package portmap available Kitchen Version Tell us which version of testkitchen you are using kitchen version ruby Copypaste your results here optchefdkbinkitchen version Test Kitchen version ChefDK Version If you are running testkitchen via ChefDK chef version will provide additional relevent version details ruby Copypaste your results here optchefdkbinchef version ChefDK version Chef Infra Client version Chef InSpec version Test Kitchen version Foodcritic version Cookstyle version Ruby Version If you are not using testkitchen via ChefDK please provide the output of ruby version ruby Copypaste your results here optchefdkembeddedbinruby version ruby p revision x linux Platform Version Ubuntu 