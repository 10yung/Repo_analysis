Hey it would be really cool if you can add line graph feature to SandDance I am currently trying to recreate the SandDance app example on within a Nuxtjs project I was able to figure out most of the functionalities but I cant seem to find a solution for keeping the selection highlight coloring of the cubes when changing the chart type At the moment I use viewerrender to change the displayed graph when updating the insight So after I select some data inside the graph it highlights the selected data correctly Then I click to change the chart type using viewerrender with an updated insight and the highlight disappears but the selection still exists and is the same as before because onSelectionChange isnt called How does it work in the SandDance app example on to keep the selection highlight when changing to a different chart type Maybe I can find a solution if I understand that Created a chart with Years as the Y axis was the last number on the Y access but bar contained Filtered out as a year and the last bar was comprised of and data Bug Sandance Years mixed on Bar It should be possible to visualize SandDance visualizations in VRAR There are some examples of this in DeckGL here What might this look like in SandDance A different view mode Thanks I am sure some Blazor SandDance sample project would be very useful It is interesting how to use SD in the Blazor projects using Blazor possibilities The image says it all There are items with the the code OflReconciliationStatsEventSeriesNotAssignedToAnyEvents but it only goes to on the chart Here is the data passed in through the load method on the mounted callback AdditionalData null Code OflReconciliationStatsEventSeriesNotAssignedToAnyEvents EventSeriesDescription Shine EventSeriesId AdditionalData null Code OflReconciliationStatsEventSeriesNotAssignedToAnyEvents EventSeriesDescription Well Played Cup EventSeriesId AdditionalData null Code OflReconciliationStatsEventSeriesNotAssignedToAnyEvents EventSeriesDescription Liga Oficial Playstation EventSeriesId AdditionalData null Code OflReconciliationStatsEventSeriesNotAssignedToAnyEvents EventSeriesDescription NA Online Event EventSeriesId AdditionalData null Code OflReconciliationStatsEventSeriesNotAssignedToAnyEvents EventSeriesDescription LA Online Event EventSeriesId AdditionalData null Code OflReconciliationStatsEventSeriesNotAssignedToAnyEvents EventSeriesDescription EU Online Event EventSeriesId AdditionalData null Code OflReconciliationStatsEventSeriesNotAssignedToAnyEvents EventSeriesDescription AO Online event EventSeriesId AdditionalData null Code OflReconciliationStatsEventSeriesNotAssignedToAnyEvents EventSeriesDescription Red Bull Proving Grounds EventSeriesId AdditionalData Code OflReconciliationStatsEventSeriesNumbersInEventSeriesDescription EventSeriesDescription Red Bull Proving Grounds EventSeriesId AdditionalData null Code OflReconciliationStatsEventSeriesNotAssignedToAnyEvents EventSeriesDescription Old Furious EventSeriesId AdditionalData null Code OflReconciliationStatsEventSeriesNotAssignedToAnyEvents EventSeriesDescription DreamHack Austin EventSeriesId AdditionalData null Code OflReconciliationStatsEventSeriesNotAssignedToAnyEvents EventSeriesDescription KSB EventSeriesId AdditionalData null Code OflReconciliationStatsEventSeriesNotAssignedToAnyEvents EventSeriesDescription CPT Online Events EventSeriesId AdditionalData Code OflReconciliationStatsEventSeriesNumbersInEventSeriesDescription EventSeriesDescription CPT Online Events EventSeriesId AdditionalData null Code OflReconciliationStatsEventSeriesNotAssignedToAnyEvents EventSeriesDescription Northern Arena Knockout EventSeriesId AdditionalData null Code OflReconciliationStatsEventSeriesNotAssignedToAnyEvents EventSeriesDescription Gwinnett Brawl EventSeriesId AdditionalData Code OflReconciliationStatsEventSeriesNumbersInEventSeriesDescription EventSeriesDescription Mikado Tenkaichi Budoukai EventSeriesId AdditionalData null Code OflReconciliationStatsEventSeriesNotAssignedToAnyEvents EventSeriesDescription Evolution EventSeriesId AdditionalData null Code OflReconciliationStatsEventSeriesNotAssignedToAnyEvents EventSeriesDescription CEO Citrus Clash EventSeriesId AdditionalData null Code OflReconciliationStatsEventSeriesNotAssignedToAnyEvents EventSeriesDescription Fighting Tuesday EventSeriesId AdditionalData null Code OflReconciliationStatsEventSeriesNotAssignedToAnyEvents EventSeriesDescription Revival EventSeriesId AdditionalData null Code OflReconciliationStatsEventSeriesNotAssignedToAnyEvents EventSeriesDescription Cyclops Weeklies EventSeriesId It would be great if we could set a right click handler or some sort of rendering mechanism that would allow us to render something when we right click on the mark I imagine that of the time this would be for a context menu but it should be flexible enough to allow for anything to be rendered on right click This would take advantage of in that the row and column data and associated metadata would be passed to this render method An example would be the following Lets say I have the following object used in the explorer eventId description some event start end Along with the associated metadata for the columns its assumed the keys are related to the properties above eventId adminPageRoot adminevents Then in the render method all this information could be put together to render a link with the following URL adminevents Which would allow someone right clicking on that mark to be taken to a page related to that specific mark and its type While this isnt a necessary feature for the data displayed on the screen or maybe it would it would form the core for other features in the system that focus around allowing custom rendering of items related to marks on the screen There are two potential avenues I see there may be more for how to attach data note this applies to JSON objects in that Im not sure how this would be reflected in flat delimited formats A reserved property in JSON Something like this id Other properties metadata Whatever you want Where metadata is a reserved property name and ignored by SandDance when applied to data rows This wouldnt apply to columns although the next one would Dedicated wrapper type for data and metadata The load method instead of taking an array of objects or a DataView would take an array of datacontainer objects with an optional metadata property something like in TypeScript interface DataRow data unknown metadata unknown The interface would be specifically for data rows for columns wherever those are defined they would have a specific property on them allowing metadata to be attached to them The load method would then take a DataView or an array of DataRow objects Note this is strongly related to in that whatever mechanism is used to define column data or attachmodify existing column data would be expanded to include metadata for the column the referenced issue doesnt have a mechanism for data Then when there are rendering methods exposed that are related to marks on the screen it would be passed the following The data itself The metadata for the row The data for the columns The metadata for the columns see Data Preview vscode extension for example of how to integrate those data formats You can use or peruse my custom Data Manager API srcdataproviders folder for data loading and saving implementation details to enrich SandDance with more data source type choices Expected Clicking on Open Vega Editor popup would open generated chart Vega specification in an online Vega Editor in the default browser using vscodeopen command with encoded vega spec url See for more info on the latter part Alternatively you can integrate with Vega Viewer vscode extension for this part and open generated Vega specification in Vega Viewer via commandsexecuteCommandvegapreview vegaSpecUri