Im working on a Slack bot where I have one subclass of SlackRubyBotCommandsBase per file I also have my logger and Slack token that gets set within a Rails initializer file What I have is equivalent to ruby require slackrubybot require logger SlackRubyBotconfigure do config configtoken ENV MYSLACKTOKEN configlogger LoggernewSTDOUT level LoggerINFO end class FirstCommand SlackRubyBotCommandsBase command first do client data match clientsaytext channel datachannel end end class SecondCommand SlackRubyBotCommandsBase command second do client data match clientsaytext channel datachannel end end class MySlackBot SlackRubyBotBot end MySlackBotrun Is this a reasonable structure I didnt see anything in the README or examples to suggest otherwise configtoken doesnt seem to work I get the following stack trace when I run my code MYSLACKTOKENmytokenhere bundle exec ruby myslackbotrb Traceback most recent call last from myslackbotrb in main from Usersjeffrabovskygemruby gemsslackrubybot libslackrubybotbotrb in run from Usersjeffrabovskygemruby gemsslackrubybot libslackrubybotbotrb in instance from Usersjeffrabovskygemruby gemsslackrubybot libslackrubybotapprb in instance from Usersjeffrabovskygemruby gemsslackrubybot libslackrubybotapprb in new from Usersjeffrabovskygemruby gemsslackrubybot libslackrubybotapprb in initialize from Usersjeffrabovskygemruby gemsslackrubybot libslackrubybotrb in configure Usersjeffrabovskygemruby gemsslackrubybot libslackrubybotapprb in block in initialize Missing ENV SLACKAPITOKEN RuntimeError But when I run my code like SLACKAPITOKENmytokenhere bundle exec ruby myslackbotrb instead it works as expected It seems odd to have an empty subclass of SlackRubyBotBot Is that the right way to combine and run multiple subclasses of SlackRubyBotCommandsBase Thanks for your help Seriously although we had a good laugh this is almost PEGI My team thought I did it on purpose Screenshot at Slack performs encoding of special characters Those should be unencoded by the app but currently arent So when in slack I type myBot find students of MSc MBA what is actually returned by match is MatchData find students of MSc amp MBA Hi there We are using this gem in a simple project that uses a database Weve noticed that when we let the app idle for some time unsure exactly for how long maybe about an hour then the bot processes text commands multiple times The gems slackrubybot and slackrubyclient are on the latest version I have created a minimal setup with which I am able to reproduce this issue This is a very simple app that manages a list of items Note that it was based on and uses the MVC approach The available commands are hi show print a list of items add add an item to the list clear clear the list Similar to our real project the issue of multiple command processing happens when I let the app run for a while Here is a screenshot where the bot responds twice to hi img width altScreenshot at src The steps to reproduce are Run the app check that it works by running some commands Let it running for a while at least an hour but possibly several hours Run some commands again More often than not but not always the issue will present itself We are currently investigating potential sources for this issue Without confirmation we think these might include websocketping setting on the realtime client currently not set to zero Could this issue be caused by the client attempting to reestablish its connection to the message server The CONCURRENCY environment variable is not set Would you based on this information be able to suggest the cause of this issue and the best way to fix it Thanks Hi When trying to rspec test a command such as commandsupport client data match channelrealname clientchannelsdigdatachannel name clientsaychannel datachannel text channelrealname support url with the following spec file requirerelative commandssupport require pry describe MyBotCommandsSupport do it gives support link do expectmessage SlackRubyBotconfiguser supportto respondwithslackmessagesupport url end end and spechelper require slackrubybotrspec require webmockrspec LOADPATHunshiftFiledirnameFILE require yaml require json require async requirerelative mybot When running rspec I get MyBotCommandsSupport gives support link FailureError clientchannelsdigdatachannel name NoMethodError undefined method dig for nilNilClass Whereas Im expecting to get a green passing test In order to get over the error I think I need to connect to slack but I can t find the proper documentation for doing so Thanks Avoid constantly logging ping worker connectdisconnect Companion change to Its possible that Im doing something wrong but I have my aliases working if I dont use any whitespace but I was hoping to use a two word phrase to trigger my bot ie okay google I noticed that my Bot had problems with ephemeral messages in particular with unfolding URLs How it can be reproduced bot posts an URL to a channel slackbot unfolds it bot posts the same URL to the channel slackbot sends message Pssst I didn u t unfurl https examplecom because it was already shared in this channel quite recently within the last hour and I didn u t want to clutter things up my bot responds with a Sorry slackbot I dont understand that command now slackbot responds that he didnt understand there is a pingpong Possible solution The message hook should filter out those ephemeral messages I think it will be something like libslackrubybothooksmessagerb rb module SlackRubyBot module Hooks class Message def callclient data return if messagetoselfnotallowed messagetoselfclient data return if ephemeralmessagedata this would be new datatext datatextstrip if datatext result childcommandclassesdetect d dinvokeclient data result builtincommandclassesdetect d dinvokeclient data result SlackRubyBotCommandsUnknowntap d dinvokeclient data result end private def ephemeralmessagedata dataisephemeral and you could also check for the datasubtype botmessage end I would be willing to contribute this fix if you like the solution Hi Thanks for this project its been months since Ive been using it for my bot I am now turning the bot into a Slack app which requires a web server and I chose Rails Rails has auto loading and eager loading mechanisms and usually load files in alphabetical order Looking at the implementation of match scan and routes it seems and this is how the app behave in production that the order of command registration matters Meaning requiring a file that matches all first eg match answerm would prevent other files from matching at all This is our unknown command it has did you mean and implements our conversation logic We also want to guarantee help to be available at all times so that one would need to be the first route that is checked when routeseachpair It would be nice if there was a way to specify where a command should be put in the ordered list of routes At this moment the I named the command zzzunknown to get the correct behaviour My suggestion is to draw inspiration from Ruby Array insert method so our commands for example ruby catch all match answerm insert do client data match clientsay I was the last match end commandhelp insert do client data match clientsay No one can ever match help before me end The obvious problem with this solution is that if another command used insert and it was required after help then that command would be first The other potential idea is to separate the matchescommands into a separate file like Rails routes I havent thought much about this approach but it could be a nice looking one Thanks for taking the time to read and consider this issue feature request Im writing a command and I want to clientsay something then reply to that in a thread with more details At the moment I have no way of getting the datats or datathreadts that I need to make a threaded message clientsay just returns truefalse Thanks