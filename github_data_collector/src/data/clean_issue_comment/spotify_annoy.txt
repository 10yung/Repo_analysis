I have an Image Retrieval application where each image is stored as a vector Ddimensional and then we compute the similarity of a query image against the database by the dot product These are the features we need to support Our initial database can have a few saved vectors Many different users can query for similar images at the same time Many different users can store batches to N of new vectors in our database A user can remove a batch of vectors from our database Memoryefficient ie I cant load all the database to memory to return the most similar vectors Reading the docs I concluded A Reading and Writing at the same time is not possible but this is not a huge deal for us B Annoy does not let you add items to existing indexes So we need to create a new index every time we receive a new batch of vectors Then at search time we would need to search in every index right Am I on the right path Thanks Hi all I am trying to install this package locally by running python setuppy install For reasons of how the system on which I am working works I cannot simply install the package through pip it does not allow for external internet acces so I need to manually upload the package to the system and build from there The problem is that I keep running into an error when I am trying to build the package and I cant figure out what is causing it Here is the error message python setuppy install running install running bdistegg running egginfo writing annoyegginfoPKGINFO writing toplevel names to annoyegginfotopleveltxt writing dependencylinks to annoyegginfodependencylinkstxt reading manifest file annoyegginfoSOURCEStxt reading manifest template MANIFESTin writing manifest file annoyegginfoSOURCEStxt installing library code to buildbdistlinuxx egg running installlib running buildpy running buildext building annoyannoylib extension gcc pthread B homeec useranaconda envstensorflowp compilercompat Wlsysroot fnostrictaliasing g O DNDEBUG g fwrapv O Wall Wstrictprototypes fPIC Ihomeec useranaconda envstensorflowp includepython c srcannoymodulecc o buildtemplinuxx srcannoymoduleo marchnative O ffastmath fnoassociativemath cc plus error unrecognized command line option mnosha cc plus error unrecognized command line option mnosgx cc plus error unrecognized command line option mnoavx f cc plus error unrecognized command line option mnoavx er cc plus error unrecognized command line option mnoavx cd cc plus error unrecognized command line option mnoavx pf cc plus error unrecognized command line option mnoprefetchwt cc plus error unrecognized command line option mnoclflushopt cc plus error unrecognized command line option mnoxsavec cc plus error unrecognized command line option mnoxsaves cc plus error unrecognized command line option mnoavx dq cc plus error unrecognized command line option mnoavx bw cc plus error unrecognized command line option mnoavx vl cc plus error unrecognized command line option mnoavx ifma cc plus error unrecognized command line option mnoavx vbmi cc plus error unrecognized command line option mnoavx fmaps cc plus error unrecognized command line option mnoavx vnniw cc plus error unrecognized command line option mnoclwb cc plus error unrecognized command line option mnomwaitx cc plus error unrecognized command line option mnoclzero cc plus error unrecognized command line option mnordpid cc plus warning command line option Wstrictprototypes is valid for CObjC but not for C enabled by default srcannoymodulecc error bad value broadwell for march switch Copyright c Spotify AB srcannoymodulecc error bad value broadwell for mtune switch error command gcc failed with exit status I would appreciate any help thanks Runtime Annoy AWS Lambda Python Runtime Problem Annoy causes an interpreter crash AWS just continues to use the same Lambda container for subsequent calls but the container just continues to fail each time More details Index has items The vectors are in length Configured at trees Using angular metric The index is packaged with the Lambda code Problem seems to take place when calling either getnnsbyitem getdistance getnnsbyvector did not test but Im assuming same code path that causes issue Nothing is printed to the console The Lambda just terminates with a Process exited before completing request message in the logs I tried to see if I can identify an issue when loading the Annoy index by calling getnitems getntrees getitemvector but all worked fine The same packaged code also yields lambda instances that work fine It seems that once the lambda is able successfully call getnnsbyitem it just works Instances that fail on a call to getnnsbyitem never recover Note that since the interpreter crashes the next time Lambda invokes the same lambda instancecontainer it goes through the entire Cold Start process and loads the index again The most unfortunate part of this is that since there is no way of trapping the problem in the Python code or at least I have not found a way the Lambda exist but AWS continues to reuse the instance If we could catch these error at the python level I could throw a RuntimeError to force the destruction of the instance Any help is appreciated Would like to try this library for my ongoing project Windows installation for python instructions still do not exist on official web site How to resolve this issue We have seen much speedup by executing both the random projection and tree building computations in GPUs I am thinking the querying might also benefit from performance gains on GPUs Im wondering if the indices in Annoy could be mapped to GPU memory for a significant performance gain Do you see any benefit to this Is Annoy still actively being used at Spotify The latest version fails to build the index on disk Building the index results in Error truncating file Inputoutput error Same code works on Python Windows when i run program in windows I can additem and build many times However when i run programe in linuxI can only build one timewhat is wrong whit this Hello I cannot compile due the absence of the mentioned header files I was hoping that they are present in the same directory as annoymodulecc I am using CentOS and pythondevel is installed The documentation for searchk is inconsistent In some places it says searchk nodes which defaults to ntrees n if not provided In other places it says If searchk is not provided it will default to n ntrees D where n is the number of approximate nearest neighbors and D is a constant depending on the metric Which is it And if it is D could you enumerate the different D values for each metric I searched the code for a few minutes but I was unable to determine what D is