Updates orgscalasbtsbt from to Release NotesChangelog Ill automatically update this PR to resolve conflicts as long as you dont change it yourself If youd like to skip this version you can just close this PR If you have any feedback just mention me in the comments below Have a fantastic day writing Scala details summaryIgnore future updatessummary Add this to your scalastewardconf file to ignore future updates of this dependency updatesignore groupId orgscalasbt artifactId sbt details labels libraryupdate semverpatch Right now its not possible to deprecate the generated render apply and f methods So we have no choice of breaking the API as soon the args passed via change This bit as before and bites us again in Therefore I propose to once and for all fix this problem by adding a deprecatedParams tag which you can use to overload the render and apply method with deprecated ones There is just one small problem We can not overload the f method because they just differ in the return type Therefore to make this work we need to rename that f method Therefore I will add a templateFunctionName tag which just sets the name of the f method And this is how I suggest it will look like Given you have the following template html This is a comment import comtypsafe this one Int two Int Template content here And you want to deprecate the arguments and replace them with String equivalents html This is a comment import comtypsafe this templateFunctionNamefn deprecatedParams fone Int two Int val newOne one val newTwo two applynewOnetoString newTwotoString one String two String Template content here We pass the deprecatedParams the version since when we want the methods to be deprecate and the name of the f function which should be deprecated here its f because that is the default name the generated annotation will be like deprecatedsince messageUse new method fn instead for the f method and deprecatedsince messageUse arguments one String two String instead for apply and render Finally we pass the arguments for the deprecated render apply and return type of f Now in the next version we can just remove the deprecatedParams tag but keep the templateFunctionName because thats the methods name now html This is a comment import comtypsafe this templateFunctionNamefn one String two String Template content here Now in case we want to again deprecate these arguments you can now just remove the templateFunctionName resulting in the generating the method f with its default name but tell deprecatedParams fn that the method to deprecate is fn TODOs x templateFunctionName Docs for templateFunctionName deprecatedParams Docs for deprecatedParams Tests Docs need to be added to Java and Scala API always Hi Currently the TwirlCompiler emits a comment like this GENERATED DATE Wed Mar CET SOURCE homebardurwdcwconsultsilomodulespostgresqlsrcmaintwirldkcwconsultsilopostgresqlcoreimplLockStreamSQLscalatxt HASH aca ba a a ef db c a f b eb MATRIX LINES GENERATED Unfortunately this contains two pieces of information that are bad for reproducible builds The absolute path of the source file The timestamp of compilation Its generally also bad for build systems where you ideally want the output of a build step to be stable if its inputs are to avoid eg spurious rebuilds It would be much appreciated if they could either just be outright removed or if we could have an option to disable embedding these fields Im not sure if the ordering on eg MATRIX and LINES output is deterministic but it should be made so as well If either of these seems acceptable I think I should be able to code it up fairly quickly Im not really familiar with the Play ecosystem but one assumes that this may be for templatedebugging purposes where a dev server can show the file None of the following lines produces a desirable outcome twirl variabletype variabletype variabletype Use javalangStringBuilder instead of scala wrapper Rewrite HtmlbuildString to use bulk copy methods when possible This line of code is currently SBTspecific It would make sense for it to happen in TwirlCompiler instead so that it happens in Maven and Gradle builds as well I write a extremely simple demo which works well on my OSX When I run it on Win it gives me a NPE I dont know where Im doing wrong or its a bug on Windows pluginssbt addSbtPlugincomtypesafeplay sbtplugin buildsbt name playdemo version scalaVersion lazy val playdemo project in fileenablePluginsPlayScala libraryDependencies Seq guice specs Test orgwebjars bootstrap The demo I used is accessable via Error trace as belows info pcsAkkaHttpServer Listening for HTTP on Server started use Enter to stop and go back to the console error javalangExceptionInInitializerError error at playtwirlcompilerTwirlCompilerTemplateAsFunctionCompilergetFunctionMappingTwirlCompilerscala error at playtwirlcompilerTwirlCompilergenerateCodeTwirlCompilerscala error at playtwirlcompilerTwirlCompilergenerateFinalTemplateTwirlCompilerscala error at playtwirlcompilerTwirlCompilerparseAndGenerateCodeTwirlCompilerscala error at playtwirlcompilerTwirlCompilercompileTwirlCompilerscala error at playtwirlsbtTemplateCompileranonfuncompile TemplateCompilerscala error at scalacollectionTraversableLikeWithFilteranonfunforeach TraversableLikescala error at scalacollectionimmutableListforeachListscala error at scalacollectionTraversableLikeWithFilterforeachTraversableLikescala error at playtwirlsbtTemplateCompilercompileTemplateCompilerscala error at playtwirlsbtSbtTwirlanonfuncompileTemplatesTask SbtTwirlscala error at scalaFunction anonfuncompose Function scala error at sbtinternalutiltildegreateranonfunu TypeFunctionsscala error at sbtstdTransformanon workSystemscala error at sbtExecuteanonfunsubmit Executescala error at sbtinternalutilErrorHandlingwideConvertErrorHandlingscala error at sbtExecuteworkExecutescala error at sbtExecuteanonfunsubmit Executescala error at sbtConcurrentRestrictionsanon anonfunsubmitValid ConcurrentRestrictionsscala error at sbtCompletionServiceanon callCompletionServicescala error at javautilconcurrentFutureTaskrunUnknown Source error at javautilconcurrentExecutorsRunnableAdaptercallUnknown Source error at javautilconcurrentFutureTaskrunUnknown Source error at javautilconcurrentThreadPoolExecutorrunWorkerUnknown Source error at javautilconcurrentThreadPoolExecutorWorkerrunUnknown Source error at javalangThreadrunUnknown Source error Caused by javalangNullPointerException error at javautilArrayssortUnknown Source error at scalatoolsnscclasspathJFileDirectoryLookuplistChildrenDirectoryClassPathscala error at scalatoolsnscclasspathJFileDirectoryLookuplistChildrenDirectoryClassPathscala error at scalatoolsnscclasspathDirectoryClassPathlistChildrenDirectoryClassPathscala error at scalatoolsnscclasspathDirectoryClassPathlistChildrenDirectoryClassPathscala error at scalatoolsnscclasspathDirectoryLookuplistDirectoryClassPathscala error at scalatoolsnscclasspathDirectoryLookuplistDirectoryClassPathscala error at scalatoolsnscclasspathDirectoryClassPathlistDirectoryClassPathscala error at scalatoolsnscclasspathAggregateClassPathanonfunlist AggregateClassPathscala error at scalacollectionTraversableLikeanonfunmap TraversableLikescala error at scalacollectionIteratorforeachIteratorscala error at scalacollectionIteratorforeachIteratorscala error at scalacollectionAbstractIteratorforeachIteratorscala error at scalacollectionIterableLikeforeachIterableLikescala error at scalacollectionIterableLikeforeachIterableLikescala error at scalacollectionAbstractIterableforeachIterablescala error at scalacollectionTraversableLikemapTraversableLikescala error at scalacollectionTraversableLikemapTraversableLikescala error at scalacollectionAbstractTraversablemapTraversablescala error at scalatoolsnscclasspathAggregateClassPathlistAggregateClassPathscala error at scalatoolsnscsymtabSymbolLoadersPackageLoaderdoCompleteSymbolLoadersscala error at scalatoolsnscsymtabSymbolLoadersSymbolLoadercompleteSymbolLoadersscala error at scalareflectinternalSymbolsSymbolinfoSymbolsscala error at scalareflectinternalMirrorsRootsBaseinitMirrorsscala error at scalatoolsnscGlobalrootMirrorlzycomputeGlobalscala error at scalatoolsnscGlobalrootMirrorGlobalscala error at scalatoolsnscGlobalrootMirrorGlobalscala error at scalareflectinternalDefinitionsDefinitionsClassObjectClasslzycomputeDefinitionsscala error at scalareflectinternalDefinitionsDefinitionsClassObjectClassDefinitionsscala error at scalareflectinternalDefinitionsDefinitionsClassinitDefinitionsscala error at scalatoolsnscGlobalRuninitGlobalscala error at scalatoolsnscinteractiveGlobalTyperRuninitGlobalscala error at scalatoolsnscinteractiveGlobalnewTyperRunGlobalscala error at scalatoolsnscinteractiveGlobalinitGlobalscala error at playtwirlcompilerTwirlCompilerTemplateAsFunctionCompilerCompilerInstancecompilerlzycomputeTwirlCompilerscala error at playtwirlcompilerTwirlCompilerTemplateAsFunctionCompilerCompilerInstancecompilerTwirlCompilerscala error at playtwirlcompilerTwirlCompilerTemplateAsFunctionCompilerPresentationCompilerinitTwirlCompilerscala error at playtwirlcompilerTwirlCompilerTemplateAsFunctionCompilerPresentationCompilerclinitTwirlCompilerscala error at playtwirlcompilerTwirlCompilerTemplateAsFunctionCompilergetFunctionMappingTwirlCompilerscala error at playtwirlcompilerTwirlCompilergenerateCodeTwirlCompilerscala error at playtwirlcompilerTwirlCompilergenerateFinalTemplateTwirlCompilerscala error at playtwirlcompilerTwirlCompilerparseAndGenerateCodeTwirlCompilerscala error at playtwirlcompilerTwirlCompilercompileTwirlCompilerscala error at playtwirlsbtTemplateCompileranonfuncompile TemplateCompilerscala error at scalacollectionTraversableLikeWithFilteranonfunforeach TraversableLikescala error at scalacollectionimmutableListforeachListscala error at scalacollectionTraversableLikeWithFilterforeachTraversableLikescala error at playtwirlsbtTemplateCompilercompileTemplateCompilerscala error at playtwirlsbtSbtTwirlanonfuncompileTemplatesTask SbtTwirlscala error at scalaFunction anonfuncompose Function scala error at sbtinternalutiltildegreateranonfunu TypeFunctionsscala error at sbtstdTransformanon workSystemscala error at sbtExecuteanonfunsubmit Executescala error at sbtinternalutilErrorHandlingwideConvertErrorHandlingscala error at sbtExecuteworkExecutescala error at sbtExecuteanonfunsubmit Executescala error at sbtConcurrentRestrictionsanon anonfunsubmitValid ConcurrentRestrictionsscala error at sbtCompletionServiceanon callCompletionServicescala error at javautilconcurrentFutureTaskrunUnknown Source error at javautilconcurrentExecutorsRunnableAdaptercallUnknown Source error at javautilconcurrentFutureTaskrunUnknown Source error at javautilconcurrentThreadPoolExecutorrunWorkerUnknown Source error at javautilconcurrentThreadPoolExecutorWorkerrunUnknown Source error at javalangThreadrunUnknown Source error aaActorSystemImpl Internal server error sending response scalaMatchError javalangExceptionInInitializerError of class javalangExceptionInInitializerError at playsbtrunPlayReloadanonfuntaskFailureHandler PlayReloadscala at scalaOptionmapOptionscala at playsbtrunPlayReloadtaskFailureHandlerPlayReloadscala at playsbtrunPlayReloadcompileFailurePlayReloadscala at playsbtrunPlayReloadanonfuncompile PlayReloadscala at scalautilEitherLeftProjectionmapEitherscala at playsbtrunPlayReloadcompilePlayReloadscala at playsbtrunPlayRunanonfunplayRunTask PlayRunscala at playrunsupportReloaderanonfunreload Reloaderscala at playrunsupportReloaderanon runReloaderscala error Compile twirlCompileTemplates javalangExceptionInInitializerError Thanks Today I tried to make use of a scalaOption in my twirl template but found it rather hard unelegant to use it in a nice way what I had to do was ifmyOptionisDefined some code myOptionget else some alternative code What I wanted was something like a map with an else block basically this kind of code ifmyOption value code when my value is value else code when my value is not present Is there something like this already If not how would I get started in providing a PR Is it a good idea to enhance the if with this or should I focus on implementing a new thing like ifdefinedmyOption value else Currently a case statement Scala or JavaScript followed by an ES Arrow Function using is parsed as a caseExpression This also causes parsing errors if a brace exists in between To resolve this I have Removed caseExpression from mixed Created atLeastOne because a matchblock requires at least one caseExpression Created a matchBlock which requires only caseExpressions I have created this by adding an argument to block to avoid code duplication Changed matchExpOrSafeExpOrExpr when it is a match to require a matchBlock instead of a block This has the additional benefit or removing invalid parsing Other options in mixed are invalid within a matchBlock caseExpressions are invalid outside a matchBlock I have added test caseAndArrowFunctionsscalajs to cover the new behaviour and patternMatching to make sure I did not break anything other than the currently allowed invalid parsing listed above Some frameworks require adding annotations to the class For example if you use classpath scanning in Spring to detect components you need to add the Component annotation We should add a TwirlKeysclassAnnotations setting to allow this See also 