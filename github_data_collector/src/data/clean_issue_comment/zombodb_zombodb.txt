ZomboDB version Postgres version PostgreSQL on x pclinuxgnu compiled by gcc GCC Red Hat bit Elasticsearch version Problem Description A postgres function is inserting into a table which has a zombodb index in it After the function ends the table in postgress has the info but the zombodb index is missing this inserts inside the function Error Message if any No ZomboDB version Postgres version Elasticsearch version Problem Description I am wondering if there is a way to specify a join on two or more tables when creating a zombo index Here is my use case sql CREATE TABLE A id int NOT NULL title varchar NOT NULL description varchar CONSTRAINT aidfkey FOREIGN KEY id REFERENCES Bid PRIMARY KEY id CREATE TABLE B id int NOT NULL createdat timestamp organizationid int NOT NULL PRIMARY KEY id For the following two tables how can i create an index that allows me to lookup all elements in table A when field organizationid of B is a certain value Notice that you can join the two tables on Aid Bid Elasticsearch started to have support for index sorting Index sorting can only be enabled at index creation time by specifying the sortfield and sortorder options Document Is it possible to have zombodb pass these additional options to ES at CREATE INDEX time ZomboDB version Postgres version Elasticsearch version Problem Description May relate to but that was fixed When I run a query returning many rows and use zdbhighlight on the results sometimes I get a json parse error That is to say this works select docid text from docs d where d wh and this does not select docid zdbhighlight ctid text as texthighlighted text from docsd where d wh I have no particular reason to move to ES but I thought I would ask Have folks here used ES successfully with zombodb How are new ES versions added PR part of roadmap other Thx So I have this problem with accurate fast counting I have this table that keeps track of who is online right now basically just ids And this table is fairly small hundreds to thousands And I have a table with all of the meta data about all of the users Large table Millions This table has a zombodb index on it When querying these tables individually it is fine I can apply a limit in ES and is generally not a problem sql WHERE table dsllimit dslbool If I need to join these two tables I cant apply a limit through elastic search and it is returning everything in the index on a table with M things this is pretty slow especailly when users first trigger the query there are no filters to pass through to ES so it basically just returns everything sql SELECT ou FROM onlineusers ou INNER JOIN userattributes ua on ouid uauserid WHERE ua bool must What I tried to do was pass IDs of the smaller table as subquery sql SELECT ou FROM onlineusers ou INNER JOIN userattributes ua on ouid uauserid and ouorganizationid WHERE ua dslbool dslmust dslterms userid SELECT id FROM onlineusers where organzationid but that doesnt work ZomboDB version Postgres version Elasticsearch version Problem Description Were seeing some unacceptably slow insert on a table w a zombodb index I was able to tweak of index settings and improve write throughput by to order of magnatude individual inserts not batch inserts The docs layout a few settings that can be controlled with the ALTER INDEX command but none of the ones im looking for Possible to expose more of them Im particularly looking for tweaking some of the default translog settings Other Discussion I tried the increasing the batch size to mb and the concurrency to prior to manually changing some index settings that didnt seem to help very much ZomboDB version Postgres version Elasticsearch version x Problem Description Looking for a way to do deep pagination I see the limit offset API which maps to size and from but that will only go so far Im aware of searchfrom and the scroll api The scroll api has a bit of over head and Im not so sure Id want to expose the to end users Is there a way to use the searchfrom option w postgres zombo db ZomboDB version v release Postgres version Elasticsearch version Problem Description make clean install fails Error Message srccindexamcreateindexc error use of undeclared identifier ACLKINDNAMESPACE aclcheckerroraclresult ACLKINDNAMESPACE srccindexamcreateindexc error use of undeclared identifier ACLKINDTABLESPACE did you mean RELOPTKINDTABLESPACE aclcheckerroraclresult ACLKINDTABLESPACE RELOPTKINDTABLESPACE usrlocalCellarpostgresql includeserveraccessreloptionsh note RELOPTKINDTABLESPACE declared here RELOPTKINDTABLESPACE srccindexamcreateindexc error no member named iiKeyAttrNumbers in struct IndexInfo did you mean iiIndexAttrNumbers AttrNumber attno indexInfoiiKeyAttrNumbers i iiIndexAttrNumbers usrlocalCellarpostgresql includeservernodesexecnodesh note iiIndexAttrNumbers declared here AttrNumber iiIndexAttrNumbers INDEXMAXKEYS srccindexamcreateindexc error too many arguments to function call expected have stmtconcurrent checkrights usrlocalCellarpostgresql includeservercatalogindexh note indexcreate declared here extern Oid indexcreateRelation heapRelation srccindexamcreateindexc error too few arguments to function call expected have indexbuildrel indexRelation indexInfo stmtprimary false usrlocalCellarpostgresql includeservercatalogindexh note indexbuild declared here extern void indexbuildRelation heapRelation srccindexamcreateindexc error no member named iiKeyAttrNumbers in struct IndexInfo did you mean iiIndexAttrNumbers indexInfoiiKeyAttrNumbers attn attformattnum iiIndexAttrNumbers usrlocalCellarpostgresql includeservernodesexecnodesh note iiIndexAttrNumbers declared here AttrNumber iiIndexAttrNumbers INDEXMAXKEYS srccindexamcreateindexc error no member named iiKeyAttrNumbers in struct IndexInfo did you mean iiIndexAttrNumbers indexInfoiiKeyAttrNumbers attn Var exprvarattno iiIndexAttrNumbers usrlocalCellarpostgresql includeservernodesexecnodesh note iiIndexAttrNumbers declared here AttrNumber iiIndexAttrNumbers INDEXMAXKEYS srccindexamcreateindexc error no member named iiKeyAttrNumbers in struct IndexInfo did you mean iiIndexAttrNumbers indexInfoiiKeyAttrNumbers attn marks expression iiIndexAttrNumbers usrlocalCellarpostgresql includeservernodesexecnodesh note iiIndexAttrNumbers declared here AttrNumber iiIndexAttrNumbers INDEXMAXKEYS srccindexamzdbamc error too many arguments to function call expected have NULL LibraryDeveloperCommandLineToolsusrlibclang includestddefh note expanded from macro NULL define NULL void usrlocalCellarpostgresql includeservercatalognamespaceh note RangeVarGetRelidExtended declared here extern Oid RangeVarGetRelidExtendedconst RangeVar relation srccindexamzdbamc error too few arguments to function call expected have reltuples IndexBuildHeapScanheapRelation indexRelation indexInfo true zdbbuildCallback buildstate usrlocalCellarpostgresql includeservercatalogindexh note IndexBuildHeapScan declared here extern double IndexBuildHeapScanRelation heapRelation srccindexamcreateindexc error too few arguments to function call expected have namespaceId usrlocalCellarpostgresql includeservercommandsdefremh note ChooseRelationName declared here extern char ChooseRelationNameconst char name const char name srccindexamcreateindexc error too few arguments to function call expected have namespaceId usrlocalCellarpostgresql includeservercommandsdefremh note ChooseRelationName declared here extern char ChooseRelationNameconst char name const char name errors generated make srccindexamzdbamo Error make Waiting for unfinished jobs srccindexamcreateindexc error too few arguments to function call expected have namespaceId usrlocalCellarpostgresql includeservercommandsdefremh note ChooseRelationName declared here extern char ChooseRelationNameconst char name const char name srccindexamcreateindexc error too few arguments to function call expected have namespaceId usrlocalCellarpostgresql includeservercommandsdefremh note ChooseRelationName declared here extern char ChooseRelationNameconst char name const char name errors generated Other Discussion In esatterwhite mentioned that ZomboDB seems to install fine with PG My intention was to submit ZomboDB formula to Homebrew to facilitate installation on macOS Homebrews default Postgres is and for some reason they dont support installing extensions for postgres formula ZomboDB version b Postgres version Elasticsearch version Problem Description When removing a column from a table the related field is left in the index mapping in elastic search This means you cant drop a column and add it back with a different column type The only thing that seems to get a round the problem is a full REINDEX or add a suffix to the column names Is this expected 