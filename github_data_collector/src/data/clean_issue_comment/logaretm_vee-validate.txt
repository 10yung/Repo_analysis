Hi I have a design where I should show the list of all messages passed rules with green checkmark failed rules with red xmark For now if I use this construction ValidationProvider vslot errors classes namenewPasswordlabel vidconfirmation rulesrequiredminmax digits capitals classpasswordholder I have only one failed rule at a time and no access to passed rules It would be nice to have access to the whole list of failed rules and also to the list of passed rules Versions veevalidate vue Describe the bug Im trying to migrate from x and runs into problems when using nested components which used to work with a tweak but not anymore When exposing the nested component I get an infinite loop maximum call stack size Earlier I used the following code but it wont work anymore component vbindistype valuesqid inputnewValue sqid newValue fieldsqcomponent To reproduce Steps to reproduce the behavior Go to demolink The vradiocomponent contains nested components Remove the REMOVE from subquestionREMOVE in Demovue Expected behavior A clear and concise description of what you expected to happen Demo link Desktop please complete the following information OS win Browser chrome Version latest Versions veevalidate vue Describe the bug Im setting a debounce on ValidationProvider for my async backend validation After submitting the form Im clearing input value and run reset method then after ms setted by deboucne the validation starts on empty field and shows errors Overview Its sometimes useful to do some action when the validation state of a provider changes For example Two inputs are invalid with a complex relationship behind it changing one input will mark it as valid however the second one while now valid will not revalidate because the value did not change forcing the revalidation of this other provider from the valid event would solve the problem Emitting an event every time the valid flag changes would take care of this use case Versions veevalidate vue Demo link Additional context Please check the above When first loaded ValidationObserver has a valid status of false If its original it should be true for it to be normal But here this refsformvalidate If you run it back to true again Do I have to call validate each time on first load Is there anything I missed Is your feature request related to a problem Please describe As designed the ValidationProviders disabled prop only controls whether an inputs validation status will be included when calling a ValidationObservers validate method The inputs vmodel can be changed by means other than the input element vuex a linked control whatever and in this case the validators still run including async validators even when the provider is disabled I want to prevent these unnecessary serverside calls and errors in my e e tests Even for syncronous validators there is likely a tiny performance benefit to not running them unnecessarily Describe the solution youd like Validators should not be run at all if disabled is true A watcher should immediately run the validators if the disabled state changes Describe alternatives youve considered Im currently using rulesdisabled null validationPropsrules on the ValidationProvider to disable all rules when disabled This works fine but I believe its counterintuitive and shouldnt be necessary Additional context Possibly related to Versions veevalidate vue Describe the bug Im not sure how this is supposed to work but in a VO with the errors slot prop if I try to use it like errors vid it throws errors complaining that TypeError Cannot read property of undefined I can see ways around that like checking that errors vid exists before I use it but Im wondering if veevalidate could take care of that during initialization Demo link I got this Q via SO trying to answer a question Versions veevalidate vue Describe the bug When chrome autofill form vee validate still thinks form is invalid while all fields are valid Errors are empty Touched is true pristine is false but invalid is true while it should be false To reproduce Open repro link click login enter anything click login save chrome creds Reload page open again Expected behavior form is valid after chrome autofill Demo link Is your feature request related to a problem Please describe If you have nested form with ValidationObserver and they use ValidationProvider you cant ignore result of some of them Describe the solution youd like ValidationObserver should have a prop for ignore to child component validationProviders Versions veevalidate vue Describe the bug Using the string interpolation described to add messages to validators is returning field instead of the name of the field To reproduce No need to reproduce the issue is present on the example on the VeeValidate homepage Screenshot Expected behavior The field interpolation should pass the name of the input not field