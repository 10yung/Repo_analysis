Debug info Version Motion true Supports WebGL true Feature Phone no Standalone Mode no Screen Width px Screen Height px DPR Device Memory Concurrency UA Mozilla Macintosh Intel Mac OS X rv Gecko Firefox Describe the bug When you open PROXX in Private Mode in Firefox it is impossible to start the game All form fields have no values set preventing the start button from working Its likely that PROXX fails when IndexedDB isnt present as is the case in private mode Originally reported here To Reproduce Steps to reproduce the behaviour Open a Private tab in Firefox Go to proxxapp See that all fields are empty Click start and see that it doesnt react due to failed form validation Expected behavior Start the game see rollup brings in types for node which are then automatically registered and mean typecript wont error if you use an API that is only available in node I watched your jsconf presentation on making things fast which was great by the way and towards the end you mentioned including warning comments to try and prevent accidentally importing something into the entry bundle I thought there must be a way of automating this so that the comments could actually enforce it and put together a rollup plugin Interested to know what you think The result of this PR is if you try and import something from a module that is in the entry group that is not itself in the entry group or an exception in the config it will error out Items x Add rollup plugin rolluppluginsize x Add configuration filegithubsizepluginyml for sizeplugin Install Github App jakearchibald Note putting this pull request in draft state it will be ready after Github App installation Bumps lodash from to details summaryCommitssummary ddfd b Bump to v b fce Rebuild lodash and docs be d Bump to v a fe b Rebuild lodash and docs e Bump to v e Rebuild lodash and docs fd a Bump to v e d Rebuild lodash and docs d Update OpenJS references eac Fix minified build Additional commits viewable in compare view details br Dependabot compatibility score Dependabot will resolve any conflicts with this PR as long as you dont alter it yourself You can also trigger a rebase manually by commenting dependabot rebase dependabotautomergestart dependabotautomergeend details summaryDependabot commands and optionssummary br You can trigger Dependabot actions by commenting on this PR dependabot rebase will rebase this PR dependabot recreate will recreate this PR overwriting any edits that have been made to it dependabot merge will merge this PR after your CI passes on it dependabot squash and merge will squash and merge this PR after your CI passes on it dependabot cancel merge will cancel a previously requested merge and block automerging dependabot reopen will reopen this PR if it is closed dependabot ignore this patchminormajor version will close this PR and stop Dependabot creating any more for this minormajor version unless you reopen the PR or upgrade to it yourself dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency unless you reopen the PR or upgrade to it yourself dependabot use these labels will set the current labels as the default for future PRs for this repo and language dependabot use these reviewers will set the current reviewers as the default for future PRs for this repo and language dependabot use these assignees will set the current assignees as the default for future PRs for this repo and language dependabot use this milestone will set the current milestone as the default for future PRs for this repo and language You can disable automated security fix PRs for this repo from the Security Alerts page details Do not merge Just testing I went into a rabbit hole after reading Surmas article Is postMessage Slow and became curious to know the feasibility of using an ArrayBuffer with PROXX for performant postMessage calls My thoughts were to provide native JS property access while maintaining behavior of interface Cell to allow usage like gridcells col row hasMine true Do you think the approach below could provide benefits or is the current patchset implementation already performant enough Instead of cluttering this thread with code I wrote an independent POC to test the transferability of Cell states in a x grid Start at CellGrid and Cell in branch Theres an app currently on the Google Play store called Proxx modern minesweeper However checking the developer info suggests that this app wasnt published by the Google Chrome Labs team img src altplay google comstoreappsdetailsidname ratson spaxx height Also one of the reviews suggests that that app eats battery and the back of the phone was over heating like crazy which could indicate that this app version of Proxx contains a Bitcoin miner other nasties or just perhaps wasnt created properly If Im wrong and the app has been published by Google Chrome Labs team it might be better to update the developer info and investigate the reviewers performance issues Or otherwise if it an unofficial clone it may be useful to add detailscode on how to add a PWA to the Google Play store and also publish an official version Debug info Version Motion true Supports WebGL true Feature Phone no Standalone Mode no Screen Width px Screen Height px DPR Device Memory Concurrency UA Mozilla iPhone CPU iPhone OS like Mac OS X AppleWebKit KHTML like Gecko Version Mobile E Safari Describe the bug If hold the pressing between empty spots sometime others too it start select from browser as it have text to copy A BCB ECD CB BA F EB A D To Reproduce Steps to reproduce the behavior Start the game in the iPhone Click on start Play a bit Press and hold between blocks Expected behavior Copypasteselect should be disabled while playing the game Debug info Version Motion true Supports WebGL true Feature Phone no Standalone Mode no Screen Width px Screen Height px DPR Device Memory Concurrency UA Mozilla Windows NT Win x AppleWebKit KHTML like Gecko Chrome Safari Describe the bug Every now and then I flag a black hole and then some other one usually nearby becomes white still flagged Visual representation Bottom row rd column from left It is worth noting that its not unique to Chrome on Windows It also occurred to me while playing in the PWA version as well as on Android in the app version To Reproduce I dont know seems to randomly happen Expected behavior All the flagged black holes should be colored in blue and stay as blue