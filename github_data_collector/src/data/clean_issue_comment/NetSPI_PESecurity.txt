Hi GetPESecurity is a great tool and it works well to scan a wide variety of EXEs and DLLsI have one EXE that fails to scan hasplmsexe sentinel security license manger with the error at line Cannot find type PEIMAGESECTIONHEADER Win Version Cultureneutral PublicKeyTokennull make sure the assembly containing this type is loaded Is there anything that can be done about that I can send the EXE to someone for analysis if thats helpful Thanks in advance Dave Edit this is on a Server R Standard bit machine with PowerShell in case that makes any difference Request to add support for stack protection GS option see for more information SafeSEH is reported False for resourceonly DLLs While it is technically valid it just generates a noise in the reports as this cant be fixed in the DLL itself Resourceonly DLLs contain no code so they cant have safe Structured Exception Handlers PESecurity could skip such DLLs by checking whether they have non entry point More info IOFile ReadAllBytes will place entire file in memory On large files this is a performance issue GetAuthenticodeStatus is extremely slow on large files Added SkipAuthenticode argument to skip checking authenticode Its not clear if this is related to Issue or not but on a Windows system with PowerShell Im trying to do a recursive directory scan of C Program Files and a couple of errors are emitted before PowerShell crashes win pesecurity It seems reasonable to do a scan of the executable code on an entire system To do this I ran GetPESecurity Directory C Recursive pesecuritylog Eventually the script started throwing errors Exception calling ReadAllBytes with arguments Exception of type SystemOutOfMemoryException was thrown At C Users testuser GetPESecuritypsm char FileByteArray IOFile ReadAllBytesCurrentFile CategoryInfo NotSpecified MethodInvocationException FullyQualifiedErrorId OutOfMemoryException Im not too keen on powershell to know where the problem is but just looking at the memory usage of PowerShell when doing a recursive directory scan it is mostly only increasing Id think that ideally as it crawls through the directories it analyzes a binary one at a time outputting the results and releasing any allocated memoryobjects for each one The current behavior never actually gets to the point of outputting any results because it runs out of memory before it gets to that point I am running PESecurity against an EXE that has SAFESEH set in its linker options however when I run PESecurity against the EXE its reporting SafeSEHFalse If I run BinSkim or BinScope it detects its set correctly Hey first of all thanks for providing this Can you tell me if this is also providing information about the validity of a authenticode signing Thanks in advance It would be nice if ASLR High Entropy would be also tested 