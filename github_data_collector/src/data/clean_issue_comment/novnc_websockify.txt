Trying to start websockify on RHEL gives Starting webserver and WebSockets proxy on port usrbinpython websockify is a package and cannot be directly executed Failed to start WebSockets proxy RHEL has Python this issue seems to have been fixed in python This pull request builds on b fab to further sanitize the port value that comes in when using the BaseTokenAPI plugin As far as I can tell b fab only supports ascii based port values like ssh and not integerbased values like This results in identical failures to the ones described in novncwebsockify WebSocket server settings Listen on No SSLTLS support no cert file proxying from to targets generated by BaseTokenAPI Sep Plain nonSSL ws WebSocket connection Sep Path websockifytoken bff f c df eb b Sep connecting to Sep Failed to connect to This commit makes two changes Strips any leading or trailing spaces from the port value Checks to see if the asciiencoded string is composed of digits and if so coerce the value to an int There could be any error during a normal GET operation or even during a serverup check before making an upgrade call These errors are currently unhandled as a result the exception rises to the top of the stack and if runonce is not used the entire process crashes with an exception This problem become widely visible when using the WebSocketProxy which uses a request handler class To handle every request a new process is spawned and if it is an invalid request empty request SSL HELLO etc the process crashes With this patch in such a case the request is caught and an error is sent back allowing a graceful termination of process Added a PyInstaller spec file to build a frozen distribution Also set C locale to limit required encodings modules I currently cant find a way to gracefully reload websockify in case the certificate changes With graceful Id mean something similar to haproxy when you reload haproxy all existing connections are still served but new ones receive the new certificate At the moment I restart websockify which terminates any connections This would I imagine become more needed with lets encrypt especially if they intend to shorten the certificate validity further If this is already possible documentation would help in avoiding similar questions Currently there doesnt seem to be a way to limit the negotiated ciphers and friends to TLS and above Itd be great if there was some way to pass this configuration option to websockify Im referring mainly to the Python implementation but surely all can benefit from it When running behind a reverse proxy websockify doesnt currently read and log anything that could provide information on the originating client This code adds a startup flag logproxiedclient to enable logging of originating client plus intermediate proxies Information is retrieved from the XForwardedFor header if present The immediate client would be logged too at the end of the content of the header separated by a comma Eg default message Token abcd not found using the logproxiedclient option Token abcd not found See also Hi Im running websockify behind Apache configured as reverse proxy websockify listens on the loopback interface and connects to the VNC servers using a custom token plugin Everything works nicely but Id like to get info regarding the original client in the logs of websockify for each relevant entry I made some changes to the request handler and to WebSockifyServer to accomodate this Im sharing them in case anybody is interested using websockify behind a reverse proxy seems to be quite common and I would greatly appreciate some feedback The change to the request handler is quite straightforward just get the info from the XForwardedFor header if present I also wanted to show this in the logs produced by WebSockifyServer for example when no token is found When this happens an exception gets raised from the request handler so I added the information to the exception for WebSockifyServer to read It works but I dont particularly like it can anybody think of a better way to do it Thanks The log messages are like the following when communication is proxied forwarded by Mar GET tokentokenABC HTTP And heres the diff diff diff git awebsockifywebsocketserverpy bwebsockifywebsocketserverpy index d aef d awebsockifywebsocketserverpy bwebsockifywebsocketserverpy class WebSocketRequestHandlerBaseHTTPRequestHandler def initself request clientaddress server BaseHTTPRequestHandlerinitself request clientaddress server def originalclientself Get the originating client if running behind reverse proxies Defaults to BaseHTTPRequestHandleraddressstring if request is not proxied fwdlist selfheadersgetXForwardedFor None return fwdlistsplit if fwdlist else selfaddressstring def handleonerequestself Extended request handler diff git awebsockifywebsockifyserverpy bwebsockifywebsockifyserverpy index f c c c awebsockifywebsockifyserverpy bwebsockifywebsockifyserverpy class WebSockifyRequestHandlerWebSocketRequestHandler SimpleHTTPRequestHandler WebSocketRequestHandlerinitself req addr server def logmessageself format args selfloggerinfos s s selfaddressstring selflogdatetimestring format args WebSocketRequestHandler loggingoutput functions def logmessageself format args selfloggerinfos s s selfprintoriginalclientip selflogdatetimestring format args def printoriginalclientipself client selforiginalclient if client selfaddressstring return originalclient forwarded by lastproxyformatoriginalclientclient lastproxyselfaddressstring return client def printtrafficself token Show traffic flow mode if selftraffic class WebSockifyRequestHandlerWebSocketRequestHandler SimpleHTTPRequestHandler def handleupgradeself ensure connection is authorized and determine the target selfvalidateconnection try selfvalidateconnection except Exception as e if selforiginalclient selfaddressstring Add info on remote client and reraise eorigclient selfprintoriginalclientip raise WebSocketRequestHandlerhandleupgradeself class WebSockifyServerobject WebSockifyServer loggingoutput functions def msgself args kwargs def msgself msg args kwargs Output message as info selfloggerlogloggingINFO args kwargs selfloggerlogloggingINFO selfprefixmsgmsg kwargspopprefixmsg None args kwargs def vmsgself args kwargs def vmsgself msg args kwargs Same as msg but as debug selfloggerlogloggingDEBUG args kwargs selfloggerlogloggingDEBUG selfprefixmsgmsg kwargspopprefixmsg None args kwargs def warnself args kwargs def warnself msg args kwargs Same as msg but as warning selfloggerlogloggingWARN args kwargs selfloggerlogloggingWARN selfprefixmsgmsg kwargspopprefixmsg None args kwargs def prefixmsgself msg prefixNone return s s prefix msg if prefix else msg Events that canshould be overridden in subclasses class WebSockifyServerobject try try client selfdohandshakestartsock address except selfEClose exc sysexcinfo Connection was not a WebSockets connection if excargs selfmsgs s address excargs except WebSockifyServerTerminate raise except Exception exc sysexcinfo selfmsghandler exception s strexc selfvmsgexception excinfoTrue except Exception as e Handle the generic exception first so that we get the original client once try originalclient eorigclient except AttributeError originalclient None try raise except selfEClose as e exc sysexcinfo Connection was not a WebSockets connection if excargs selfmsgs s address excargs prefixmsgoriginalclient except WebSockifyServerTerminate raise except Exception exc sysexcinfo selfmsgoriginal client handler exception sformatoriginalclient strexc prefixmsgoriginalclient selfvmsgexception excinfoTrue prefixmsgoriginalclient finally if client and client startsock Issue mentions that passing concatenated certs to websockify can cause issues We should investigate and fix this First off thank you for this project Second have read and third have tried read wstelnetjs As per issue is it incumbent upon user to rewrite wstelnetjs to support the token path syntax as from looking at telnet code and also trying it seems like the URI is not rebuiltsupported only host and port lines of wstelnetjs or am I missing something in front of my nose Currently I have noVNC working with tokenswebsockify but am confused about whether tokens should work with wstelnetjs Please feel free to point me elsewhere andor close if wrong forummedium