I suppose that you can add one very usefull option or improve eyes training with some tip ive found When your model is trained enough but eyes are gone wild do this Change dst and src folders names srcdst dstsrc Train for k iterations Change folder names back Train for kinda iterations and convert you will see that the most eyes are fixed but the problem is face will be more similar to dst So i think you can use it to make some new algorytm OpenCL RX GB Gigabyte avatar only i find that the trained model hard to tranform skin color and using much time to eliminate the hard face boundary because their different skin color and light so the convert result is also hard to get very really face and u can find the fake face traces Is possible that using the GAN model to tranform the dst face skin light to the converted face automatically eliminateing the converting fake traces and making the fake face with other areas integrated Hi there If i wanna load my old model files with the new Cuda Version DeepFaceLabCUDAbuild i got some errors Loading model Press enter in seconds to override model settingsUsing TensorFlow backend Error Dimension in both shapes must be equal but are and Shapes are and for Assign op Assign with input shapes Traceback most recent call last File N xy internal python lib sitepackages tensorflow python framework opspy line in createcop cop capiTFFinishOperationopdesc tensorflowpythonframeworkerrorsimplInvalidArgumentError Dimension in both shapes must be equal but are and Shapes are and for Assign op Assign with input shapes During handling of the above exception another exception occurred Traceback most recent call last File N xy internal DeepFaceLab mainscripts Trainerpy line in trainerThread deviceargsdeviceargs File N xy internal DeepFaceLab models ModelBasepy line in init selfonInitialize File N xy internal DeepFaceLab models ModelSAEHD Modelpy line in onInitialize loaded notloaded selfloadweightssafenotloaded File N xy internal DeepFaceLab models ModelBasepy line in loadweightssafe modelloadweightsfilename File N xy internal python lib sitepackages keras engine networkpy line in loadweights f selflayers reshapereshape File N xy internal python lib sitepackages keras engine savingpy line in loadweightsfromhdf group Kbatchsetvalueweightvaluetuples File N xy internal python lib sitepackages keras backend tensorflowbackendpy line in batchsetvalue assignop xassignassignplaceholder File N xy internal python lib sitepackages tensorflow python ops variablespy line in assign namename File N xy internal python lib sitepackages tensorflow python ops stateopspy line in assign validateshapevalidateshape File N xy internal python lib sitepackages tensorflow python ops genstateopspy line in assign uselockinguselocking namename File N xy internal python lib sitepackages tensorflow python framework opdeflibrarypy line in applyophelper opdefopdef File N xy internal python lib sitepackages tensorflow python util deprecationpy line in newfunc return funcargs kwargs File N xy internal python lib sitepackages tensorflow python framework opspy line in createop opdefopdef File N xy internal python lib sitepackages tensorflow python framework opspy line in init controlinputops File N xy internal python lib sitepackages tensorflow python framework opspy line in createcop raise ValueErrorstre ValueError Dimension in both shapes must be equal but are and Shapes are and for Assign op Assign with input shapes Previous i used DeepFaceLabCUDA AVXbuild How can i fix that and please dont say me that i have to retrain Thansk for u work i have same problems in your work the option Enable true face training Is the samples without flip or warp translating when training why training the face with the extra background not using the only facesmasked face Currently using DFL for NVidia with ti gb on windows plaftorm and achieving some nice results using trainSAEHD and convertSAEHD to avoid outofmemory errors Is there a benefit speedaccuracy in moving to a later build ANDor the Open GL version THIS IS NOT TECH SUPPORT FOR NEWBIE FAKERS POST ONLY ISSUES RELATED TO BUGS OR CODE Expected behavior I want to run the program with my GPU i bought a new graphic card for this but it is not using GPU while training Actual behavior firstly before i write here i searched every topics When i run the Train SAEHD it first says this error photo tensorflowstreamexecutorcudacudadrivercc failed to allocate G bytes from device CUDAERROROUTOFMEMORY out of memory and i get rid of this error doing theseunfortunately it just helps the erase the error nothing morebefore that photo train was also not work reducing batch size helped to work but try batch size of dims Try lowering the batch size ie start from and double until you get the error If this doesnt work changing line in nnlibpy to configgpuoptionsallowgrowth False seemed to stop this error appearing for me Train model is working but its not using my GPU now It uses RAM and CPU Is it should be like this or how can i work my GPU This is how i train now IT uses shared GPU Ram but not processor Also not actual GRAM it uses from my normal RAM Other relevant information Batch size Operating system and version AMD Ryzen processor Nvidia RTX GB Graphic card DFL build is the latest one Windows bit i formatted several days ago is it possible any other driver or program missing Python version Python bit THIS IS NOT TECH SUPPORT FOR NEWBIE FAKERS POST ONLY ISSUES RELATED TO BUGS OR CODE Behavior When Training This seems to be somewhat random but I get a GPU Sync Failed error Booting up training seems to allow things to go forward for anywhere between minutes to hours Sometimes it works continually but this is somewhat rare Restarting my computer seems to allow a higher chance of success for a period Steps to reproduce Im not sure how to reproduce it since it seems random However it does appear to increase in likelihood with each instance that I stop training and then start it up at some point before restarting my computer Other relevant information Operating system Windows Pro Python version Prebuilt Windows Binary Hello now there is only the M key to apply the current config to only the previous frame In my opinion would be very useful a key like the key to apply the current config to ALL previous frames Windows bit Graphics card is a Radeon VII Downloaded latest OpenCL version and when I try to train it hangs at this INFOplaidmlOpening device openclamdgfx EDIT I downgraded to older version of DFL and and it works fine now So it seems the latest version of DFL OpenCL is still the culprit