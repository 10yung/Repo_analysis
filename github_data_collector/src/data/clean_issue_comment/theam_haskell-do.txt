This workaround would download all the required dependencies so they are cached When I created a new project via haskelldo the indicator on the web page kept spinning for several minutes I finally gave up Please add an indication that things can take VERY long initially ten minutes andor add a better progress indicator stack build by default produces progress output I assume you hide it on purpose Not good Ive been taking a look at the source code of interoneovim and it looks like we can make something like what they do for handling errors We can either use intero itself or just parse the output from stack It is important that has been done first as it helps with source mapping Right now we store the users project as a Markdown file with some options on top so inliterate can render it properly The thing is that this is not really efficient because if the user were to use the project as a library on a production system they would have to drag inliterate and all of its dependencies with them So we can do something intelligent with it When the user works within Haskelldo everything gets stored in a regular no inliterate Libhs Haskell file replacing Haskelldo blocks like this Everything that is text except code gets stored as a multiline comment for example text Im text haskell top im Code im undefined Im text too but multiline Would get stored as haskell Im text im Code im undefined Im text too but multiline Same with haskell eval and haskell do blocks These are for exploration and in the end they are just comments on steroids that we use to explain things the only difference that they would be stored like haskell haskell eval haskell do x readFile foo The placement of the braces is important because it allows us to have the same line numbers See where this is going Now the user can safely remove the inliterate dependency from their project without having to worry about that unless they are using it in their library functions of course So how do we render everything Easy when we compile the project we generate a Mainhs file with the format that inliterate expects This is great because of two things First we decouple inliterate from the user which is counterproductive Second we can generate a source map so we can highlight errors The second point is very important as right now the output of GHC for errors is quite random for us because inliterate generates the boilerplate required to render everything so this way we could parse the error strings and highlight the errors on the document This would make a much faster compilation making preview nearly instant Instead of running stack build each time which includes compilation and linking we could just run a text r main In a repl and get the output GHCJS x has support for ghci which means that it would not be needed to recompile all the project each time we want to reload something for the UI This would improve things No more need to build GHCJS first time Automatic installation of NodeJSrequired libraries 