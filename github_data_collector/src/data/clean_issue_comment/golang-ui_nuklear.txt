I met a random crash on MacOS v with go version with GLFW backend The crash log is fatal error unexpected signal during runtime execution signal SIGSEGV segmentation violation code x addr xffffffffffffffff pc xffffffffffffffff runtime stack runtimethrow x f d x a usrlocalCellargo libexecsrcruntimepanicgo x runtimesigpanic usrlocalCellargo libexecsrcruntimesignalunixgo x c goroutine syscall locked to thread runtimecgocall x f xc cbc xc usrlocalCellargo libexecsrcruntimecgocallgo x b fp xc cbc sp xc cbc pc x bb githubcomgolanguinuklearnkCfuncnkgroupbegin x a xc a x x cgogotypesgo x d fp xc cbc sp xc cbc pc x e d It will happen after few minutes run I tried to found out why but cgo cannot provide enough information about where exactly the crash is happened so I put it here if anyone could give me a hint OS MacOS GO Backend GLFW GL Nuklear Minimal code sample is name nkNewTextEdit nkNkTexteditInitDefaultname nkNkEditBufferctx nkEditEditor name nkNkFilterDefault I cannot enter any character in edit if the flag is nkEditEditor If change the flag to nkEditBox infinite Enter key is triggered once the edit box is focused I noticed that proposed two solutions to use it but Im wondering are they the suggested way to use NkEditString NkEditBuffer NkEditStringTerminated Hello This is a newbie question as I am not very aware of the different graphical toolkits Is there any chance to run a Golang nuklear application under Sailfish OS Go getting the package leads to an error probably due to the fact that Sailfish runs Wayland but I am not sure Regards I made a PR to add Nuklear in the awesomego list It seems that one required thing for this is to fix some issues in the govet and golint as explained by a collaborator The goreportcardtool lists the result of a few common linters used for go projects Vet for example reports suspicous constructs whereas golint lists some formal issues Most of those issues can be quickly fixed and in addition to improve code quality figuring in the awesomego list will improve Nuklear visibility Hi Im attempting to use this library to create a UI for the game engine Im developing here Ive read the previous issues on styling and editing the Context of Nuklear and I understand that cgogen is not able to auto generate Getters and Setters for structs so they have to be written by hand at the moment as you have done in etcgo I also read that you have chosen not to export the fields of these structs due to the large amount of internal state they contain In this case is it possible for me to use cgogen to create my own bindings for Nuklear in which all struct fields are exported I think that this would be a much more convenient solution despite the downsides Thanks Rishabh It renders one frame and then just freezes Hiya Im getting an issue when trying to go get this go get githubcomgolanguinuklearnk githubcomgoglglfwv glfw In file included from C Users Claudia dev go src githubcom gogl glfw v glf wglfwsrcwin initc from C Users Claudia dev go src githubcom gogl glfw v glf w cglfwwindowsgo C Users Claudia dev go src githubcom gogl glfw v glfwglfwsrcwin init c warning GUIDDEVINTERFACEHID initialized and declared extern DEFINEGUIDGUIDDEVINTERFACEHID x d e b xf f x cf x xcb x x x x x x C Users Claudia dev go src githubcom gogl glfw v glfwglfwsrcwin joyst ickc warning IIDIDirectInput W initialized and declared extern DEFINEGUIDIIDIDirectInput W xbf x a x da xaa x x d x xe d x x x C Users Claudia dev go src githubcom gogl glfw v glfwglfwsrcwin joyst ickc warning GUIDXAxis initialized and declared extern DEFINEGUIDGUIDXAxis xa d e xc f x cf xbf xc x x x x x x C Users Claudia dev go src githubcom gogl glfw v glfwglfwsrcwin joyst ickc warning GUIDYAxis initialized and declared extern DEFINEGUIDGUIDYAxis xa d e xc f x cf xbf xc x x x x x x C Users Claudia dev go src githubcom gogl glfw v glfwglfwsrcwin joyst ickc warning GUIDZAxis initialized and declared extern DEFINEGUIDGUIDZAxis xa d e xc f x cf xbf xc x x x x x x C Users Claudia dev go src githubcom gogl glfw v glfwglfwsrcwin joyst ickc warning GUIDRxAxis initialized and declared extern DEFINEGUIDGUIDRxAxis xa d f xc f x cf xbf xc x x x x x x C Users Claudia dev go src githubcom gogl glfw v glfwglfwsrcwin joyst ickc warning GUIDRyAxis initialized and declared extern DEFINEGUIDGUIDRyAxis xa d f xc f x cf xbf xc x x x x x x C Users Claudia dev go src githubcom gogl glfw v glfwglfwsrcwin joyst ickc warning GUIDRzAxis initialized and declared extern DEFINEGUIDGUIDRzAxis xa d e xc f x cf xbf xc x x x x x x C Users Claudia dev go src githubcom gogl glfw v glfwglfwsrcwin joyst ickc warning GUIDSlider initialized and declared extern DEFINEGUIDGUIDSlider xa d e xc f x cf xbf xc x x x x x x C Users Claudia dev go src githubcom gogl glfw v glfwglfwsrcwin joyst ickc warning GUIDButton initialized and declared extern DEFINEGUIDGUIDButton xa d f xc f x cf xbf xc x x x x x x C Users Claudia dev go src githubcom gogl glfw v glfwglfwsrcwin joyst ickc warning GUIDPOV initialized and declared extern DEFINEGUIDGUIDPOV xa d f xc f x cf xbf xc x x x x x x In file included from C Users Claudia dev go src githubcom gogl glfw v glf w cglfwwindowsgo C Users Claudia dev go src githubcom gogl glfw v glfwglfwsrcwin windo wc In function updateCursorImage C Users Claudia dev go src githubcom gogl glfw v glfwglfwsrcwin windo wc warning passing argument of LoadCursorW from incompatible point er type Wincompatiblepointertypes SetCursorLoadCursorWNULL IDCARROW In file included from c mingw include windowsh from C Users Claudia dev go src githubcom gogl glfw v glf wglfwsrcwin platformh from C Users Claudia dev go src githubcom gogl glfw v glf wglfwsrcinternalh from C Users Claudia dev go src githubcom gogl glfw v glf wglfwsrcwin initc from C Users Claudia dev go src githubcom gogl glfw v glf w cglfwwindowsgo c mingw include winuserh note expected LPCWSTR aka const short uns igned int but argument is of type CHAR aka char WINUSERAPI HCURSOR WINAPI LoadCursorW HINSTANCE LPCWSTR In file included from C Users Claudia dev go src githubcom gogl glfw v glf w cglfwwindowsgo C Users Claudia dev go src githubcom gogl glfw v glfwglfwsrcwin windo wc In function translateCursorShape C Users Claudia dev go src githubcom gogl glfw v glfwglfwsrcwin windo wc warning return from incompatible pointer type Wincompatiblepoint ertypes return IDCARROW C Users Claudia dev go src githubcom gogl glfw v glfwglfwsrcwin windo wc warning return from incompatible pointer type Wincompatiblepoint ertypes return IDCIBEAM C Users Claudia dev go src githubcom gogl glfw v glfwglfwsrcwin windo wc warning return from incompatible pointer type Wincompatiblepoint ertypes return IDCCROSS C Users Claudia dev go src githubcom gogl glfw v glfwglfwsrcwin windo wc warning return from incompatible pointer type Wincompatiblepoint ertypes return IDCHAND C Users Claudia dev go src githubcom gogl glfw v glfwglfwsrcwin windo wc warning return from incompatible pointer type Wincompatiblepoint ertypes return IDCSIZEWE C Users Claudia dev go src githubcom gogl glfw v glfwglfwsrcwin windo wc warning return from incompatible pointer type Wincompatiblepoint ertypes return IDCSIZENS C Users Claudia dev go src githubcom gogl glfw v glfwglfwsrcwin windo wc In function glfwRegisterWindowClassWin C Users Claudia dev go src githubcom gogl glfw v glfwglfwsrcwin windo wc warning passing argument of LoadCursorW from incompatible point er type Wincompatiblepointertypes wchCursor LoadCursorWNULL IDCARROW In file included from c mingw include windowsh from C Users Claudia dev go src githubcom gogl glfw v glf wglfwsrcwin platformh from C Users Claudia dev go src githubcom gogl glfw v glf wglfwsrcinternalh from C Users Claudia dev go src githubcom gogl glfw v glf wglfwsrcwin initc from C Users Claudia dev go src githubcom gogl glfw v glf w cglfwwindowsgo c mingw include winuserh note expected LPCWSTR aka const short uns igned int but argument is of type CHAR aka char WINUSERAPI HCURSOR WINAPI LoadCursorW HINSTANCE LPCWSTR In file included from C Users Claudia dev go src githubcom gogl glfw v glf w cglfwwindowsgo C Users Claudia dev go src githubcom gogl glfw v glfwglfwsrcwin windo wc warning passing argument of LoadImageW from incompatible pointe r type Wincompatiblepointertypes IDIAPPLICATION IMAGEICON In file included from c mingw include windowsh from C Users Claudia dev go src githubcom gogl glfw v glf wglfwsrcwin platformh from C Users Claudia dev go src githubcom gogl glfw v glf wglfwsrcinternalh from C Users Claudia dev go src githubcom gogl glfw v glf wglfwsrcwin initc from C Users Claudia dev go src githubcom gogl glfw v glf w cglfwwindowsgo c mingw include winuserh note expected LPCWSTR aka const short uns igned int but argument is of type CHAR aka char WINUSERAPI HANDLE WINAPI LoadImageW HINSTANCE LPCWSTR UINT int int UINT Im also getting a similar problem when downloading manually as zip and trying to go install Getting this build error C Program Files x Console go get githubcomgolanguinuklearcmdnkexample githubcomgoglglfwv glfw In file included from C Users Martin go src githubcom gogl glfw v glfw cglfwwindowsgo C Users Martin go src githubcom gogl glfw v glfwglfwsrcwin monitorc In function createMonitor C Users Martin go src githubcom gogl glfw v glfwglfwsrcwin monitorc warning implicit declaration of function wcscpy Wimplicitfunctiondeclaration wcscpymonitorwin adapterName adapterDeviceName C Users Martin go src githubcom gogl glfw v glfwglfwsrcwin monitorc In function glfwPlatformIsSameMonitor C Users Martin go src githubcom gogl glfw v glfwglfwsrcwin monitorc warning implicit declaration of function wcslen Wimplicitfunctiondeclaration if wcslenfirstwin displayName C Users Martin go src githubcom gogl glfw v glfwglfwsrcwin monitorc warning implicit declaration of function wcscmp Wimplicitfunctiondeclaration return wcscmpfirstwin displayName secondwin displayName githubcomgolanguinuklearcmdnkexample C Go pkg tool windowsamd linkexe running gcc failed exit status C Users Martin AppData Local Temp golink goo file not recognized File format not recognized collect exe error ld returned exit status GCC C Program Files x Console gcc v Using builtin specs COLLECTGCCgcc COLLECTLTOWRAPPERcmingwbinlibexecgccmingw ltowrapperexe Target mingw Configured with srcgcc configure buildx pclinuxgnu hostmingw targetmingw withgmpmingw withmpfr withmpcmingw withislmingw prefixmingw disablewin registry witharchi withtunegeneric enablelanguagesccobjcobjcfortranada withpkgversionMinGWorg GCC enablestatic enableshared enablethreads withdwarf disablesjljexceptions enableversionspecificruntimelibs withlibiconvprefixmingw withlibintlprefixmingw enablelibstdcxxdebug enablelibgomp disablelibvtv enablenls Thread model win gcc version MinGWorg GCC Go C Program Files x Console go version go version go windowsamd There is a problem with the handling of enter keys The backend returns different codes for the normal enter key and the keypad enter key but nuklearh checks only one This is very confusing We can either change nuklearh and check both or we can modify implglfwcommongo to deliver the same code for both Both are easy to do Which way is best