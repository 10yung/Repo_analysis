 Thanks for contributing a pull request Please ensure you have taken a look at the contribution guidelines Reference Issue Fixes What does this implementfix Explain your changes This pull request implements the YIN and pYIN algorithms for pitch tracking The YIN function is based on lostanlens PR with a few modifications while the pYIN function is based on this paper Any other comments Both functions work well but some refactoring is definately needed I compared the outputs of pYIN to the official vamp plugin and the results are comparable I havent added any special treatment of low amplitude frames yet so silent frames with periodic noice occasionally give wrong results Also note that I havent used the librosacoreautocorrelate function The librosacoreautocorrelate computes equation in the YIN paper which seems to perform worse than the one used here which computes equation I tried scaling by the window size as suggested in the paper but it didnt improve things much I havent implemented any tests yet so it would be good to get some guidance there What does this implementfix Explain your changes This PR removes all deprecated features slated for removal at It also increments the version number I want to get this out of the way before any subsequent development gets underway especially because a large portion of the series centers on maintenance and testing Itll be easier to do those jobs if were not trying to maintain code that will be removed anyway If your issue is a usage question submit it our Google Group instead Instructions For Filing a Bug Description Example Error when computing spectralcontrast on a single frame Error when using librosafeaturestackmemory function the returned array contains some values that doesnt exists in the input array and the wrong result is random the probability of failure increases with bigger nsteps parameter StepsCode to Reproduce Example import librosa Generate one frame of random STFTlike energy S nprandomrandn contrast librosafeaturespectralcontrastSS If the code is too long feel free to put it in a public gist and link it in the issue python import librosa import numpy as np generate random array in range x npremaindernprandomrandom astypeint assert x all fthis should not alarm stackedX librosafeaturestackmemory x nsteps modeconstant same error with mode type edge and reflect printfstackedX stackedX will print very big integers assert stackedX all fthis will alarm Expected Results Example contrast should have shape python test nothing happens Actual Results Please paste or specifically describe the actual output or traceback python test Traceback most recent call last File testSTpy line in module assert stackedX all fthis will alarm AssertionError this will alarm Versions Please run the following snippet and paste the output below import platform printplatformplatform import sys printPython sysversion import numpy printNumPy numpyversion import scipy printSciPy scipyversion import librosa printlibrosa librosaversion python import platform printplatformplatform Linux genericx withdebianbustersid import sys printPython sysversion Python default Aug GCC import numpy printNumPy numpyversion NumPy import scipy printSciPy scipyversion SciPy import librosa printlibrosa librosaversion librosa Thanks for contributing Reference Issue Fixes What does this implementfix Explain your changes This PR reintroduces support for libsamplerate as a samplerate conversion backend New restype values are supported to map onto libsamplerates modes Functionally I dont think theres anything to do here We should perhaps have a conversation about packaging dependencies and possible deprecation of resampy though I was noticing that the beats detected using the beat module both plp and beattrack were a fraction of a second delayed compared to where Id expect them to be Graphing librosas onset strength envelope against madmom beat module outputs I saw that the beats typically occur just before the onsets Thus by using onset peaks as the primary method of beat detection we end up reporting late beats Indeed by playing clicks at the beat positions the madmom beats feel more correct than the librosa ones Obviously madmom uses entirely different techniques compared to the onsetbased ones that librosa uses but I found it interesting that I found a consistent bias late by s amongst several songs I tested The bias persisted with both and sampling rates Since I couldnt find anything in the literature about this wanted to check if anyone had come across this before or had any hypotheses for why it could be happening Perhaps beats typically occur at the beginning of the offsets rather than the peak Repro import subprocess import librosa sp subprocessPopen ffmpeg i testmp f wav stdoutsubprocessPIPE stderrsubprocessSTDOUT stream librosastreamspstdoutfileno blocklength framelength hoplength nextstream Stacktrace File usrlocallibpython sitepackageslibrosacoreaudiopy line in stream sr sfinfopathsamplerate File usrlocallibpython sitepackagessoundfilepy line in info return SoundFileInfofile verbose File usrlocallibpython sitepackagessoundfilepy line in init with SoundFilefile as f File usrlocallibpython sitepackagessoundfilepy line in init selffile selfopenfile modeint closefd File usrlocallibpython sitepackagessoundfilepy line in open Error opening r formatselfname File usrlocallibpython sitepackagessoundfilepy line in errorcheck raise RuntimeErrorprefix ffistringerrstrdecodeutf replace RuntimeError Error opening File contains data in an unknown format One fix would be to optionally take sr as input from the user Related issue Description Now that the resample interface is fully flexible we could easily introduce pythonsamplerate as an optional dependency and add its implemented modes to our restype dispatch linear srcbest sincbest srcfastest sincfastest srcmedium sincmedium zeroorderhold Down the line since libsamplerate is now BSDlicensed and the python bindings are MITlicensed we could also put it back in the main dependency line and possibly deprecate resampy This is more a question of packaging and maintenance than of functionality but its something to consider If your issue is a usage question submit it our Google Group instead Instructions For Filing a Bug Description Example Error when computing spectralcontrast on a single frame Hi librosa seems to have a bug Im using Windows and after Ive installed librosa I cant import librosa basically the my program enter an infinite loop while importing librosa heres a screeshot does anyone have this problem before StepsCode to Reproduce Example import librosa Generate one frame of random STFTlike energy S nprandomrandn contrast librosafeaturespectralcontrastSS If the code is too long feel free to put it in a public gist and link it in the issue Expected Results Example contrast should have shape Actual Results Please paste or specifically describe the actual output or traceback Versions Please run the following snippet and paste the output below import platform printplatformplatform import sys printPython sysversion import numpy printNumPy numpyversion import scipy printSciPy scipyversion import librosa printlibrosa librosaversion Thanks for contributing Thanks for contributing a pull request Please ensure you have taken a look at the contribution guidelines Reference Issue Example Fixes NA What does this implementfix Explain your changes This defaults gamma such that filter bandwidths are proportional to ERB Any other comments NA If your issue is a usage question submit it our Google Group instead Instructions For Filing a Bug Description Example Error when computing spectralcontrast on a single frame Python segfaults when importing librosa before pytorch but works fine if import statements are switched StepsCode to Reproduce bash parallelsanselmGANNtdowithoutyou python Python default Nov GCC on linux Type help copyright credits or license for more information import librosa import torch Segmentation fault core dumped parallelsanselmGANNtdowithoutyou python Python default Nov GCC on linux Type help copyright credits or license for more information import torch import librosa Expected Results Example contrast should have shape No seg fault regardless of import order Actual Results Please paste or specifically describe the actual output or traceback Segmentation fault when librosa is imported before torch no seg fault when order is switched Versions Please run the following snippet and paste the output below import platform printplatformplatform import sys printPython sysversion import numpy printNumPy numpyversion import scipy printSciPy scipyversion import librosa printlibrosa librosaversion bash Linux genericx withUbuntu bionic Python default Nov GCC NumPy SciPy librosa pytorch Thanks for contributing 