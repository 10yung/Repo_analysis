 API developer often changes Models So NSNumber parser works well when JSON comes as value but fails when value I can add special fields to handle such mistakes But how can I parse it in more general way Hi I have a model as below Screen Shot at pm While parsing JSON I am getting Error DomainMTLTransformerErrorHandlingErrorDomain Code Value did not match expected type UserInfoMTLTransformerErrorHandlingInputValueErrorKey NSLocalizedDescriptionValue did not match expected type NSLocalizedFailureReasonExpected to be of class NSValue but got NSCFString Earlier I was using Mantle version it was working fine But recently I have updated POD and getting this error Screen Shot at pm My question is why is Mantle changed type difference in both versions How to solve this issue and is there any JSONTransfomer need to write for CLLocationDegrees Hi I am using Mantle version and getting error No known class method for selector arrayTransformerWithModelClass My JSONTransformer code is Screen Shot at pm I can see arrayTransformerWithModelClass method in version but I am searching alternate method in OLD Mantle version Any help please Xcode deprecates Swift requiring a minimum of Swift so I am updating the projects Swift version to and also updating Quick and Nimble to versions that support I use Xcodes Analyze to find out a memory leak in this method mtlpropertyAttributes mtlcopyPropertyAttributes objcpropertyt property Problem Description As noted in the README Cocoapods has been unofficially supported via spec submissions from community members However as Cocoapods has moved towards the Trunk service where there is a list of owners who are the only ones with access control to push new spec updates it seems like this unofficial support has pretty much been unable to continue as the only folks who are able to update the specs are Owners Robert B hnke REDACTED Jan Gorman REDACTED David Caunt REDACTED The last Cocoapods spec that was submitted was tied to Mantle so several changes that have been pushed since to fix warnings such since Oct have not been made available to folks using the unofficial Cocoapods support With many other thirdparty library documentation pushing folks toward Cocoapods like Googles Firebase it doesnt seem unlikely folks may be utilizing this outofsync Cocoapods spec Path Forward Given the way Cocoapods Trunk service works with ownership unofficial support without the intervention of at least one of the listed owners in the Cocoapods Trunk service is no longer possible It seems like the only way the unofficial support could continue would be if the podspec gets added into repository some individual is designated in the Cocoapods Trunk ACL wholl push the podspecs that get accepted from communitysubmitted pull requests maybe adding something into the README stating that Cocoapods support is only updated by designee based off of submitted accepted pull requests marking that designee as the code owner for the podspec file etc Im more than happy to submit a pull request adding a podspec that works with the latest changes but it seems like given the challenges of Cocoapods Trunk services ACL requirements that a policy decision needs to be made by the maintainers on what theyre comfortable doing With the final release of Xcode and watchOS Apple is rejecting submission of watchOS applications with a WATCHOSDEPLOYMENTTARGET below but it is set to The error detail ibMobileGestalt MobileGestaltc MGIsDeviceOneOfType is not supported on this platform Please help for me