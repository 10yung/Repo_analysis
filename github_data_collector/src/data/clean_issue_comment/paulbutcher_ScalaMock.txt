 ScalaMock Version Scala Version Runtime Scalac JVM Please describe the expected behavior of the issue orgscalamockscalatestMockFactory should be able to mock the trait Please provide a description of what actually happens Compiler error type mismatch found rtype with underlying type X required X Parameter type in structural refinement may not refer to an abstract type defined outside that refinement Parameter type in structural refinement may not refer to a type member of that refinement Reproducible Test Case Scastie scala import orgscalamockscalatestMockFactory class SmallSpec extends MockFactory trait Broken T def bad X T r X Unit val debug stub Broken Unit Pull Request Checklist x I agree to licence my contributions under the MIT licence I have added copyright headers to new files I have added tests for any changed functionality Fixes Fixes Purpose Introduces MockFactoryRecordingUnexpectedCalls which reports all unexpected calls after each test This is usable especially with asynchronous tests since the original exception can be silently dropped Background Context Why did you take this approach Fully backward compatible records all unexpected call to be replayed later Then optionally mixed in Factory verifies the empty call log of unexpected calls This approach is backward compatible since it does not change current behavior still eagerly fails on an unexpected call and optionally fails again in the event the original failure was ignored ScalaMock Version Scala Version Runtime JVM Please describe the expected behavior of the issue trying to stubmock a java class which accepts varargs in a constructor should work Please provide a description of what actually happens But compilation fails with the following message error found String error required String error val site stub MyClass error Reproducible Test Case java public class MyClass public MyClassString varargs scala testmy failing test val s stub MyClass ScalaMock Version Scala Version Runtime JVM Please describe the expected behavior of the issue I would expect to mock Java Generic interfaces having overloaded method with different number of params in the same way I mock other Java interfaces or Scala traits Please provide a description of what actually happens When trying to mock this interface I get the following compile error bash error value expects is not a member of String javautilconcurrentCallable String Unit ERROR msend String Callable String expects ERROR error value expects is not a member of String Unit ERROR msend Stringexpectsonce ERROR Reproducible Test Case java import javautilconcurrentCallable public interface GOInterfaceT void sendT record void sendT record CallableT onComplete scala it should mock java generic interface with overloaded method with different number of parameters in import javautilconcurrentCallable var result val m mock GOInterface String msend String Callable String expects onCall cases String c Callable String ccallonce msendhello new Callable String override def call String result world result result should beworld it should mock java generic interface with overloaded method with different number of parameters in import javautilconcurrentCallable var result val m mock GOInterface String msend Stringexpectsonce msendhello result should be An unexpected call to one of the method of a mock raise an orgscalatestexceptionsTestFailedException But if this exception is somehow suppressed the failure is silently ignored ScalaMock Version eg Scala Version eg Runtime JVM or JS JVM Please describe the expected behavior of the issue The test should fail with an Unexpected call error Please provide a description of what actually happens The test doesnt fails Reproducible Test Case scala import orgscalamockscalatestMockFactory import orgscalatestFlatSpec import scalautilcontrolNonFatal trait Foo def bar class FooBarTest extends FlatSpec with MockFactory foo should bar in val m mock Foo try mbar catch case NonFatale printlne ScalaMock Version eg Scala Version eg Runtime JVM or JS JVM Please describe the expected behavior of the issue There should be a way to mock traitsclasses that have functions returning thistype Please provide a description of what actually happens Theres either a compiletime error or a NoSuchMethod with proxies Reproducible Test Case scala it should work in trait A def foo thistype val a stub A afoo afoo verify You can try this with both MockFactory and MockFactory with ProxyMockFactory First one results in compile error overriding method foo in trait A of type xxXxSpecanontype method foo has incompatible type Second one in NoSuchMethod javalangNoSuchMethodException comsunproxyProxy mockfoo This is probably related to thanks ScalaMock Version eg Scala Version eg Runtime JVM or JS JVM Please describe the expected behavior of the issue Mock should be created correctly No exceptions thrown Please provide a description of what actually happens Compilation exception is thrown when pass as parameter a List of internal classes error method method overrides nothing error Note the super classes of anon servicesassessmentcentreSome contain the following non final members named method error def method i Long p List Param Unit forSome val servicesassessmentcentreSomeval mockspecialmockName String override def methodi Longp List SomethisParam Unit val mockmethod orgscalamockfunctionMockFunction LongList SomethisParam Unit error val mockSome mock Some error error one error found error testcompileIncremental Compilation failed Reproducible Test Case scala trait Some case class Paramname String def methodi Long p List Param Unit in test val mockSome mock Some will fail to compile Woraround Move Param case class outside or at least to object with the same name If you want to discuss a new feature please ignoreclear this form ScalaMock Version eg Scala Version eg Runtime JVM or JS JS Please describe the expected behavior of the issue Mocking the CanvasRenderingContext D class should yield a mock object Please provide a description of what actually happens Compilation failure Error When overriding a native method with default arguments the overriding method must explicitly repeat the default arguments val canvas mock CanvasRenderingContext D Reproducible Test Case Heres a really simple test case that wont compile yields the error shown above with different rowcol values because not the same code as used above Note that this test case works fine with Mockito so Ill switch to Mockito for now but would love to be able to use ScalaMock scala import orgscalajsdomCanvasRenderingContext D import orgscalamockscalatestMockFactory import orgscalatestFunSpec class BadSpec extends FunSpec with MockFactory describeBad itmakes a mock val canvas mock CanvasRenderingContext D worked in broken in real example scala class MockableBroadcast T ClassTag extends orgapachesparkbroadcastBroadcast T L override protected def getValue Nothing override protected def doUnpersistblocking Boolean Unit override protected def doDestroyblocking Boolean Unit val lookup mock MockableBroadcast Map String Long minified example scala class Foo T ClassTag val mf mock Foo Nothing compiler error Error type mismatch found scalareflectClassTag T required scalareflectClassTag Nothing Note T Nothing but trait ClassTag is invariant in type T You may wish to investigate a wildcard type such as Nothing SLS val mf mock Foo Nothing Mock testing in Specs came across a compiler crash that is easily reproducible Mock testing works on curried functions in this style def funcarg Aarg A A But it blows up when using the function return style def funcarg A A A I have reproduced it in a very simple test using the exact format my actual code contained trait IntFunctions def cfi Int Int Int class Implemented extends IntFunctions override def cfi Int i i i Test for github new MockContext val additionFunc mock IntFunctions additionFunccf Int Intexpects val firstStep additionFunccf firstStep Changing the final bit of the test to additionFunccf results in the exact same issue Here is the compiler crash snippet error error last tree to typer Thisanon org scalamock specs MockContext error tree position line of testscala error tree tpe test anon error symbol final anon org scalamock specs MockContext in package tests error symbol definition final class anon extends org scalamock specs MockContext a ClassSymbol error symbol package tests error symbol owners anon org scalamock specs MockContext error call site anon Function in package tests in package tests error error Source file context for tree position error error error error Test for github new MockContext error val additionFunc mock IntFunctions error error additionFunccf Int Intexpects error error Total time s completed Aug PM But if I change the implementation to what we see in the documentation trait IntFunctions def cfi Inti Int Int class Implemented extends IntFunctions override def cfi Inti Int i i Test for github new MockContext val additionFunc mock IntFunctions additionFunccf Int Intexpects val firstStep additionFunccf firstStep Then we get a successful test case success Total time s completed Aug PM 