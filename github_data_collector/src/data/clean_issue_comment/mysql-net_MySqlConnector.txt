At a user posts this exception from having a malformed connection string SystemFormatException at SystemNumberStringToNumberReadOnlySpan str NumberStyles options NumberBuffer amp number NumberFormatInfo info Boolean parseDecimal at SystemNumberParseUInt ReadOnlySpan value NumberStyles options NumberFormatInfo numfmt at SystemStringSystemIConvertibleToUInt IFormatProvider provider at SystemConvertChangeTypeObject value Type conversionType IFormatProvider provider at MySqlDataMySqlClientMySqlConnectionStringValueOption ChangeTypeObject objectValue in C projects mysqlconnector src MySqlConnector MySqlDataMySqlClient MySqlConnectionStringBuildercsline at MySqlDataMySqlClientMySqlConnectionStringValueOption GetValueMySqlConnectionStringBuilder builder in C projects mysqlconnector src MySqlConnector MySqlDataMySqlClient MySqlConnectionStringBuildercsline at MySqlConnectorCoreConnectionSettingsctorMySqlConnectionStringBuilder csb in C projects mysqlconnector src MySqlConnector Core ConnectionSettingscsline at MySqlConnectorCoreConnectionPoolGetPoolString connectionString in C projects mysqlconnector src MySqlConnector Core ConnectionPoolcsline at MySqlDataMySqlClientMySqlConnectionOpenAsyncNullable ioBehavior CancellationToken cancellationToken in C projects mysqlconnector src MySqlConnector MySqlDataMySqlClient MySqlConnectioncsline at MySqlDataMySqlClientMySqlConnectionOpen in C projects mysqlconnector src MySqlConnector MySqlDataMySqlClient MySqlConnectioncsline at MicrosoftEntityFrameworkCoreStorageRelationalConnectionOpenDbConnectionBoolean errorsExpected at MicrosoftEntityFrameworkCoreStorageRelationalConnectionOpenBoolean errorsExpected at PomeloEntityFrameworkCoreMySqlStorageInternalMySqlRelationalConnectionOpenBoolean errorsExpected at MicrosoftEntityFrameworkCoreStorageRelationalConnectionBeginTransactionIsolationLevel isolationLevel at MicrosoftEntityFrameworkCoreStorageRelationalConnectionBeginTransaction at MicrosoftEntityFrameworkCoreUpdateInternalBatchExecutorExecuteIEnumerable commandBatches IRelationalConnection connection at MicrosoftEntityFrameworkCoreStorageRelationalDatabaseSaveChangesIList entries at MicrosoftEntityFrameworkCoreChangeTrackingInternalStateManagerSaveChangesIList entriesToSave at MicrosoftEntityFrameworkCoreChangeTrackingInternalStateManagerSaveChangesDbContext Boolean acceptAllChangesOnSuccess at PomeloEntityFrameworkCoreMySqlStorageInternalMySqlExecutionStrategyExecute TStateTResult TState state Func operation Func verifySucceeded at MicrosoftEntityFrameworkCoreChangeTrackingInternalStateManagerSaveChangesBoolean acceptAllChangesOnSuccess at MicrosoftEntityFrameworkCoreDbContextSaveChangesBoolean acceptAllChangesOnSuccess at MicrosoftEntityFrameworkCoreDbContextSaveChanges This is not an easy exception message or call stack to understand It would be better to have a message such as x is not a valid value for the y connection string option ConnectorNET introduces a new format for the Server connection string option Example with priority serveraddress priority addresslocalhost priority Example without priority and with multiple ports host localhost uidtestpasswordxxxx Specifying multiple hosts with the same priority is equivalent to LoadBalanceRandom specifying different priorities is equivalent to LoadBalanceFailOver in descending order of priority This is a superset of MySqlConnectors current multipleserver option because a a port can be specified for each server b a mix of Failover and Random behaviour can be obtained by specifying different or the same priority values It appears that address and priority must appear in exactly that order and that priority must be specified for all or no hosts ConnectorNET adds tlsversion Its a commadelimited list of TLS protocol versions to support defaulting to Tlsv Tlsv Tlsv Tlsv Hi there I am facing with invalid operation exception when I use the same connection in multiple async methods The error message is Cannot set MySqlCommandCommandText when there is an open DataReader for this command it must be closed first The simplified version off my code is as follows csharp class Name public async Task MainMethod using var connection new MySqlConnectionConnectionString await connectionOpenAsync using var transaction connectionBeginTransactionReadUncommitted ifawait IsValidconnection transaction Some logic await Saveconnection transaction transactionCommit connectionClose private async Taskbool IsValueMySqlConnection connection var command connectionCreateCommand commandCommandText Select Count From Table Where Condition var count int await commandExecuteScalarAsync return count private async Task SaveMySqlConnection connection var command connectionCreateCommand Error happens in the following line commandCommandText Update Table await commandExecuteNonQueryAsync Due to this issue I learned that I may not use a connection in multiple threads or use it in parallel tasks But my code is not multithreading although I use asyncawait Hi Im using this library along with the NLog connector to log database info Net Core Everything is working great but you dont seem to be logging the full untokenized string ie If i have a query select companyName from company where companyId companyId when i execute the query with MySqlConnector log settings set to Debug all i get is this line in the log DEBUG MySqlConnectorLoggingLoggerExtensionsDebug Session Preparing command payload CommandText select companyName from company where companyId CompanyId Thats not really helpful when the query is not returning something it shouldnt be It would be great if you could log the full statement after the tokens are replaced like DEBUG MySqlConnectorLoggingLoggerExtensionsDebug Session Preparing command payload CommandText select companyName from company where companyId Is there a way to get this to log and im just missing it If not can you add this feature at some point in the future And is there a way for me to pull the full query string from the MySqlCommand object so i can log it myself Thanks Joe When the IDbCommandCommandType property is set to TableDirect the IDbCommandCommandText property should be set to the name of the table to be accessed The user may be required to use escape character syntax or include qualifying characters if any of the tables named contain any special characters The SqlClient packages dont appear to support this enumeration value others just implement it as SELECT FROM CommandText which seems simple enough From EnlistTransactionnull should throw InvalidOperationException if the current transaction is still active but should unenlist the connection from the transaction if the transaction has completed A recent integration test suite failed with SideBySideCancelTestsCancelBatchBeforeRead SKIP SideBySideCancelTestsCancelBatchBeforeRead ms The active test run was aborted Reason Test host process crashed Unhandled exception SystemInvalidOperationException This MySqlConnection is already in use See at MySqlConnectorCoreServerSessionStartQueryingICancellableCommand command in homevstswork ssrcMySqlConnectorCoreServerSessioncsline at MySqlConnectorCoreCommandExecutorExecuteReaderAsyncIReadOnlyList commands ICommandPayloadCreator payloadCreator CommandBehavior behavior IOBehavior ioBehavior CancellationToken cancellationToken in homevstswork ssrcMySqlConnectorCoreCommandExecutorcsline at MySqlDataMySqlClientMySqlCommandExecuteNonQueryAsyncIOBehavior ioBehavior CancellationToken cancellationToken in homevstswork ssrcMySqlConnectorMySqlDataMySqlClientMySqlCommandcsline at MySqlDataMySqlClientMySqlCommandExecuteNonQuery in homevstswork ssrcMySqlConnectorMySqlDataMySqlClientMySqlCommandcsline at MySqlConnectorCoreStandardEnlistedTransactionOnRollbackEnlistment enlistment in homevstswork ssrcMySqlConnectorCoreStandardEnlistedTransactioncsline at MySqlConnectorCoreEnlistedTransactionBaseSystemTransactionsIEnlistmentNotificationRollbackEnlistment enlistment in homevstswork ssrcMySqlConnectorCoreEnlistedTransactionBasecsline at SystemTransactionsVolatileEnlistmentAbortingEnterStateInternalEnlistment enlistment at SystemTransactionsVolatileEnlistmentActiveInternalAbortedInternalEnlistment enlistment at SystemTransactionsTransactionStateAbortedEnterStateInternalTransaction tx at SystemTransactionsTransactionStateActiveRollbackInternalTransaction tx Exception e at SystemTransactionsEnlistableStatesTimeoutInternalTransaction tx at SystemTransactionsBucketTimeoutTransactions at SystemTransactionsBucketSetTimeoutTransactions at SystemTransactionsTransactionTableThreadTimerObject state at SystemThreadingExecutionContextRunInternalExecutionContext executionContext ContextCallback callback Object state At first glance it appears that an active connection is being used to issue a ROLLBACK command This will fail if the connection is already being used to execute a query To make it work we would need to cancel the command ie issue KILL QUERY x on a separate connection wait for the first connection to become idle then execute the ROLLBACK This could be done either by blocking or perhaps by setting a pending rollback flag on the connection that is executed when any existing command finishes running Split from and MySqlCommandPrepare should support CommandTypeStoredProcedure it currently fails Note that prepared stored procedures can natively return output parameters without executing a separate SELECT statement this will need to be supported See and example code here If the MySqlConnectionOpen method is called when the LAN cable is disconnected it will stop for a long time OS Windows DLL MySqlConnector Framework NET Core TestCode using System using SystemDiagnostics using MySqlDataMySqlClient namespace MySqlConnectorTest class Program static void Mainstring args var timeFormat yyyyMMdd HHmmssfff var builder new MySqlConnectionStringBuilder builderServer testserver builderDatabase mydb builderPort builderUserID user builderPassword password builderConnectionTimeout builderDefaultCommandTimeout var conStr builderToString DebugWriteLineconStr conStr while true try using var con new MySqlConnectionconStr DebugWriteLineOpen Start DateTimeNowToStringtimeFormat conOpen DebugWriteLineOpen End DateTimeNowToStringtimeFormat using var cmd conCreateCommand cmdCommandText select now cmdExecuteScalar conClose catch Exception ex DebugWriteLineCatch Exception DateTimeNowToStringtimeFormat DebugWriteLineexToString SystemThreadingThreadSleep Result resulttxt 