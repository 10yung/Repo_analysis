rootniuyulingmntcUsersniuyulingDesktoplibini cc testc L lini static usrbinld tmpcc AcSuno in function main testctextstartup x undefined reference to getinikeystring usrbinld testctextstartup x f undefined reference to getinikeystring usrbinld testctextstartup x a undefined reference to getinikeyint usrbinld testctextstartup xdd undefined reference to getinikeylong usrbinld testctextstartup x undefined reference to getinikeyfloat usrbinld testctextstartup x undefined reference to putinikeystring usrbinld testctextstartup x d undefined reference to getinikeystring usrbinld testctextstartup x cd undefined reference to getinikeystring collect error ld returned exit status rootniuyulingmntcUsersniuyulingDesktoplibini rootniuyulingmntcUsersniuyulingDesktoplibini cc testc L lini static usrbinld lini collect error ld returned exit status rootniuyulingmntcUsersniuyulingDesktoplibini Can I support multiple files or link library files A better shebang would be bintrue usrbinc exit as it would keep file compileable with normal gcc invocation See example of this here also discussion on StackOverflow It would be great to be able to pipe into c sh cat filec c sh c filec This would allow the use of tools that compile into c such as awib I am not sure if you have much interest in this but I found that this method of creating id is no less reliable and faster as well as cheaper I must admit I have not done exhaustive testing but if you find this interesting I am happy to do a good bit more validation In my limited testing it has been reliable Ran a few comparisons just so theres something I can show The only difference is this changeset These are my two test scripts binsh echo Run iterations new method for i in seq do homeubuntubincnew redish getc ggdb Wall Iusrincludehiredis pkgconfig libs cflags hiredis h tags devnull done echo Done running new method binsh echo Run iterations original method for i in seq do homeubuntubinc redish getc ggdb Wall Iusrincludehiredis pkgconfig libs cflags hiredis h tags devnull done echo Done original method Run iterations new method Done running new method user system elapsed CPU avgtext avgdata maxresidentk inputs outputs major minorpagefaults swaps Run iterations new method Done running new method user system elapsed CPU avgtext avgdata maxresidentk inputs outputs major minorpagefaults swaps Run iterations original method Done original method user system elapsed CPU avgtext avgdata maxresidentk inputs outputs major minorpagefaults swaps Run iterations original method Done original method user system elapsed CPU avgtext avgdata maxresidentk inputs outputs major minorpagefaults swaps Thanks hello man can you help me in C i now how to extract ANCII chars and concaternate them what i need to know its how can i execute that ancii string after concaternation example i what to extract the string whoami from ancii chart concaternate the chars to build whoami command and execute the string concaternated this code does allmost everything it extracts the chars concaternate them but it only prints the string but i dont what to print i want to execute include stdioh include stringh int mainvoid variable declarations char a ancii character w char b ancii character h char c ancii character o char d ancii character a char e ancii character m char f ancii character i concaternate and transform decimal values to ancii chars using putchar char command putcharaputcharbputcharcputchardputchareputcharf execute command using system int systemchar command systemcommand I got your script working on freebsd with multiple parameters using this as my first line usrbinenv S c Iusrlocalinclude g Lusrlocallibmysql lmysqlclient might be worth mentioning in the readme Hi I noticed that depending upon what I pass to C sometimes result is not what I expect Having looked at I am a bit confused and thought it is worth raising this question I see that here instead of trying to process all command line arguments we there is a for arg in which even if we do a shift later wont mean that this for look is going to run more than once I assumed that maybe that should have been but it would break some of this logic also Anyway I think my question since there are not comments there to help me understand is whether or not this loop at line was meant to be gone through more than once If so I think there may be problems with it Thanks None it would be great to have a debug flag to launch gdb 