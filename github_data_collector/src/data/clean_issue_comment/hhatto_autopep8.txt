 Python Code python Traceback most recent call last File Userstrevorphillipslocalsharevirtualenvstaxbotwebl QEaBVwbinautopep line in module sysexitmain File Userstrevorphillipslocalsharevirtualenvstaxbotwebl QEaBVwlibpython sitepackagesautopep py line in main args parseargsargv applyconfigapplyconfig File Userstrevorphillipslocalsharevirtualenvstaxbotwebl QEaBVwlibpython sitepackagesautopep py line in parseargs parser readconfigargs parser File Userstrevorphillipslocalsharevirtualenvstaxbotwebl QEaBVwlibpython sitepackagesautopep py line in readconfig value configgetintsection k File usrlocalCellarpython FrameworksPythonframeworkVersions libpython configparserpy line in getint fallbackfallback kwargs File usrlocalCellarpython FrameworksPythonframeworkVersions libpython configparserpy line in getconv kwargs File usrlocalCellarpython FrameworksPythonframeworkVersions libpython configparserpy line in get return convselfgetsection option kwargs ValueError invalid literal for int with base auto Command Line shell autopep i r Your Environment Python version Python autopep version autopep pycodestyle Platform macOSX If it is possible compare Autopep with and with regarding features ease of use plugins etc As a table that looks like When using the autopep command with a globalconfig the global config is not respected when doing an inplace directly on a file This is especially problematic with editors such as VS Code as there is no way to respect the flake file contained in the root of the repo See Command Line and Configuration flake ini flake exclude pathtofilepy Command Line shell autopep globalconfig homeusernameprojectflake r i pathto Respects the ignore autopep globalconfig homeusernameprojectflake i pathtofilepy Does NOT respect the ignore Your Environment Python version autopep version pycodestyle Platform Linux The docs for E specify Try to make lines fit within maxlinelength characters Therefore if I wanted to use autopep to only reformat line length I would presumably run autopep maxlinelength length inplace recursive selectE somefilepy However Im finding this command has no effect On a file with code in excess of columns running autopep maxlinelength inplace recursive selectE somefilepy does not modify the file in any way when I would expect it to reformat code into continuations and wrap docstrings and comments Im running autopep with Python The documentation says By default if HOMEconfigpycodestyle pycodestyle in Windows environment exists it will be used as global configuration file Alternatively you can specify the global configuration file with the globalconfig option Also if setupcfg toxini pep and flake files exist in the directory where the target file exists it will be used as the configuration file pep pycodestyle and flake can be used as a section Other linters or formatters look upwards in the directory hiearachy for a config file in case one does not exist in the current directory This is how it works for flake ESLint TSLint and many other major linters I expected autopep to work the same which made me open a faulty issue on the VS Code Python extension as I thought this was a problem with the extension when it in fact seems to be a missing feature of autopep It would be great if autopep could look upwards maybe levels in the directory structure for a config file and select the closest one Python Code python for a in printhello world for b in printa b turns into python for a in printhello world for b in printa b Line s first indentation is intended but line s has one extra indentation Command Line and Configuration pep setupcfg ini pep Command Line shell autopep Your Environment Python version Python autopep version autopep pycodestyle Platform windows linux macOSX and other OS Ubuntu Python Code python import json whateverjson name JSON Error long string This sentence is so long that it breaks the autopep autoformatter or am I doing something wrong It would be great to know Thanks Awesome Tool btw def doingjsonthings Doing JSON things printwhateverjson Command Line and Configuration Command Line shell autopep inplace aggressive aggressive testpy Your Environment Python version autopep version Platform macOSX Id like to be able to automatically fix some of the simple warnings from flake with flake docstrings including D No blank lines allowed after function docstring D blank line required after class docstring The code changes in the users files are trivial addingremoving blank lines and I assume fairly easy to add to autopep but would it be within the project scope as this is a PEP issue not PEP Python Code python if True if True selfagentsessions agentutilsrunagentbasepath selfhostlistservers Command Line and Configuration Command Line shell autopep tmpfoopy if True if True selfagentsessions agentutilsrunagent basepath selfhostlistservers Your Environment Python version autopep version autopep pycodestyle Platform linux Id rather see the above lined up as python if True if True selfagentsessions agentutilsrunagentbasepath selfhostlistservers Is that possible I have used the command from the readme autopep aggressive aggressive and as a result my code stoped running SyntaxError from future imports must occur at the beginning of the file The reason is that the from future imports were moved to seemingly random location among other imports