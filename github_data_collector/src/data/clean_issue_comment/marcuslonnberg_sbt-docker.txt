 What has been done in this PR Add the possibility to change the Java options when creating an image with autoPackageJavaApplicationSettings Using javaOptions in docker instead of just javaOptions to allow better refinement Using JAVAOPTIONS as default value for javaOptions in docker Added some tests to ensure this is working Also changed travisyml to ensure scripted tests are being run Docker tags are not allowed to contain certain characters Docker tags might be based on eg git branch names which can contain those characters It would be useful to sanitize the tags to not unnecessarily limit the naming freedom of future git branches Fixes Dovetailing off of this comment I think its appropriate for staging files to overwrite existing files It seems like this operation should be idempotent Were trying to set an environment variable for the docker container Below is our docker configuration dockerfile in docker new Dockerfile val dockerAppPath app val mainClassString mainClass in Compilevalueget val classpath fullClasspath in Compilevalue fromjava addclasspathfiles dockerAppPath envENVIRONMENT test entryPointjava cp sdockerAppPathdockerAppPath smainClassString The resulting Dockerfile thats generated in the target directory contains the following command ENV ENVIRONMENTtest But our application running within the container doesnt seem to be picking it up When we set this environment locally it does work though Were using sbtdockercompose in conjuction with sbtdocker to run integration tests For certain scenarios I would like to skip tests when running sbt batch myappdockerstage What is a way to do this Ive tried sbt set test in Test batch myappdockerstage but this doesnt work eitherIt still runs tests there are serval project in my root can i choose which project to publish to my dockerhub