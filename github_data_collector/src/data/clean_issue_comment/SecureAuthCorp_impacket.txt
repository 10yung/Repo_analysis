smbexecpy and samrdumppy modules always use NT LM dialect of SMB while connecting to a remote host So if the host supports a minimum SMB version higher than SMB then the following error occurs Impacket v dev Copyright SecureAuth Corporation Errno Connection reset by peer Before the fix x After the fix x Simple script to quickly list all delegation relationships unconstrained constrained constrained w protocol transition resourcebased constrained in an AD environment Useful for enum identifying escalation paths findDelegationScreenshot The different LDAP attacks were not working on the network Im currently testing so I created a LDAP shell to allow an attacker to manually perform basic operations like Creating a new user Adding a user to a group Search users and groups Retrieve all groups a user is a member of Retrieve all members of a group Dump the AD This works pretty much the same way as the SMB interactive mode A new console accessible via netcat will be created after each successful relay Note This PR is dependent on PR I kept getting an UnsupportedOperationnot writable when trying to use the interactive shell with Python It seems like socketmakefile doesnt support reading and writing at the same time I created two different files one for forwarding stdin and one for forwarding stdoutstderr Configuration impacket version it should be as thats the latest version and i did a git clone but for whatever reason the changelog in the root directory says see Python version Target OS kali linux Debug Output With Command String sudo ntlmrelayxpy debug Traceback most recent call last File ntlmrelayxpy line in module c startserversoptions threads File ntlmrelayxpy line in startservers csetLDAPOptionsoptionsnodump optionsnoda optionsnoacl optionsnovalidateprivs optionsescalateuser optionsaddcomputer optionsdelegateaccess TypeError setLDAPOptions takes exactly arguments given Additional context Exact steps taken git clone cd impacket pip install cd examples sudo ntlmrelayxpy also tried with a valid command such as sudo ntlmrelayxpy t ldapdchere delegateaccess escalateuser MACHINEHERE serveimage testjpg but getting same error It seems impacket inherited the requirement on the ldap dependency from ldapdomaindump Hence it is pinned to ldap This causes conflicts in some package managers which already contain newer versions Since ldap v contains fixes for the compatibility issues and the recently published ldapdomaindump v is fine with modern ldap versions again I propose to also loosen the requirements here for impacket Configuration impacket version dev Python version Target OS MacOS MOJAVE Context I want to connect to my NVIDIA SHILED shared folder which is accessible from all my other machines MacOS Raspberry Code python from impacketsmbconnection import SMBConnection conn SMBConnectionShield preferredDialectsmbSMBDIALECT connloginanassraissouni password Output ValueError Traceback most recent call last ipythoninput ec e in module conn SMBConnectionShield connloginanassraissouni password anaconda envsfactorylibpython sitepackagesimpacketsmbconnectionpy in loginself user password domain lmhash nthash ntlmFallback try if selfgetDialect smbSMBDIALECT return selfSMBConnectionloginuser password domain lmhash nthash ntlmFallback else return selfSMBConnectionloginuser password domain lmhash nthash anaconda envsfactorylibpython sitepackagesimpacketsmbpy in loginself user password domain lmhash nthash ntlmfallback if selfdialectsparameters Capabilities SMBCAPEXTENDEDSECURITY try selfloginextendeduser password domain lmhash nthash usentlmv True except If the target OS is Windows or Samba lets try using NTLMv anaconda envsfactorylibpython sitepackagesimpacketsmbpy in loginextendedself user password domain lmhash nthash usentlmv sessionData SMBSessionSetupAndXExtendedResponseDataflags smb Flags sessionData SecurityBlobLength sessionParameters SecurityBlobLength sessionDatafromStringsessionResponse Data respToken SPNEGONegTokenRespsessionData SecurityBlob anaconda envsfactorylibpython sitepackagesimpacketstructurepy in fromStringself data if selfdebug printfromString s s r field field data size selfcalcUnpackSizefield data field if selfdebug print size d size anaconda envsfactorylibpython sitepackagesimpacketstructurepy in calcUnpackSizeself format data field two formatsplit if lentwo return selfcalcUnpackSizetwo data length specifier anaconda envsfactorylibpython sitepackagesimpacketstructurepy in calcUnpackSizeself format data field asciiz specifier if format u l dataindexb x x return l l and or ValueError substring not found Additional context I tried unsuccessfully without prefferedDialect and with the other dialects which I import like this python from impacket import smb from impacketsmb structs import SMB DIALECT SMB DIALECT SMB DIALECT Before the fix in python I know I know its almost deprecated we get the following error when trying to decrypt a masterkey using the domain backup key dpapipy masterkey file c bb eb a ebda fc ada pvk backupkeypvk Impacket v dev Copyright SecureAuth Corporation MASTERKEYFILE Version Guid c bb eb a ebda fc ada Flags Policy MasterKeyLen BackupKeyLen CredHistLen DomainKeyLen local variable long referenced before assignment After the patch everything works as intended I Receiving the following error after Getting TGT Getting TGT for ConstraintsIntersection object at xb f c consts ConstraintsUnion object at xb dac consts SingleValueConstraint object at xb d c consts SingleValueConstraint object at xb d c consts failed at ValueConstraintErrorConstraintsUnion object at xb dac consts SingleValueConstraint object at xb d c consts SingleValueConstraint object at xb d c consts failed at ValueConstraintError all of SingleValueConstraint object at xb d c consts SingleValueConstraint object at xb d c consts failed for at Integer Add Flake F tests which are usually about the confusion between identity and equality in Python Use to compare str bytes and int literals is the classic case These are areas where a b is True but a is b is False or vice versa Python will raise SyntaxWarnings on these instances