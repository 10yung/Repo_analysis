 this report when a class has a HTMLCanvasElement property RangeError Maximum call stack size exceeded at JsonSchemaGeneratorgetDefinitionForRootType homejoeleeprojectsrichloxenginenodemodulestypescriptjsonschematypescriptjsonschemats at JsonSchemaGeneratorgetTypeDefinition homejoeleeprojectsrichloxenginenodemodulestypescriptjsonschematypescriptjsonschemats at JsonSchemaGeneratorgetDefinitionForRootType homejoeleeprojectsrichloxenginenodemodulestypescriptjsonschematypescriptjsonschemats at JsonSchemaGeneratorgetTypeDefinition homejoeleeprojectsrichloxenginenodemodulestypescriptjsonschematypescriptjsonschemats at JsonSchemaGeneratorgetDefinitionForRootType homejoeleeprojectsrichloxenginenodemodulestypescriptjsonschematypescriptjsonschemats at JsonSchemaGeneratorgetTypeDefinition homejoeleeprojectsrichloxenginenodemodulestypescriptjsonschematypescriptjsonschemats at JsonSchemaGeneratorgetDefinitionForRootType homejoeleeprojectsrichloxenginenodemodulestypescriptjsonschematypescriptjsonschemats at JsonSchemaGeneratorgetTypeDefinition homejoeleeprojectsrichloxenginenodemodulestypescriptjsonschematypescriptjsonschemats at JsonSchemaGeneratorgetDefinitionForRootType homejoeleeprojectsrichloxenginenodemodulestypescriptjsonschematypescriptjsonschemats at JsonSchemaGeneratorgetTypeDefinition homejoeleeprojectsrichloxenginenodemodulestypescriptjsonschematypescriptjsonschemats error Command failed with exit code problem consider Recordstring true and that it outputs ref definitionsRecordstring true where definitionsRecordstring true in the definitions object is RecordstringRecordstringtrue description Construct a type with a set of properties K of type T type object discussion i would expect that such an abstract type may be unpacked into more specific things or compiled into an intermediate representation that is key string true which would yield nicer definitions im a rook w some of this stuff so i may have not used the correct verbiage thx typescript enum Fruit Apple apple Orange orange class Test fruit Fruit FruitApple Then I get typescript fruit enum apple orange type string I expect the default can be set in here This PR just shows whether or not you can do type integer number interface MyObject array integer and get an array with itemstype set to integer Test case for I think if we switch to a slightly different usage of the typescript API then the compilers config loader will handle extends in tsconfig files Asis it looks like extends is ignored tsnode uses the compiler API differently and gets extends support for free Annotations are not generated for enum types npx typescriptjsonschema version Example types export enum Fruit An Apple Apple apple An Orange Orange orange export interface Menu Type of Fruit fruit Fruit Processed with npx typescriptjsonschema tsconfigjson Menu Generates schema definitions Fruit enum apple orange type string properties fruit ref definitionsFruit description Type of Fruit type object tsnode tts xxx nodemodules typescript typescript lib typescriptjs function trySymbolTablesymbols ignoreQualification RangeError Maximum call stack size exceeded tts const path requirepath const TJS requiretypescriptjsonschema const glob requireglob optionally pass argument to schema generator const settings required true uniqueNames true out ajson strictNullChecks true include schemats TJSexectsconfigjson settings tsconfigjson compilerOptions Basic Options incremental true Enable incremental compilation target es Specify ECMAScript target version ES default ES ES ES ES ES ES or ESNEXT module ESNext Specify module code generation none commonjs amd system umd es or ESNext lib Specify library files to be included in the compilation allowJs true Allow javascript files to be compiled checkJs true Report errors in js files jsx preserve Specify JSX code generation preserve reactnative or react declaration true Generates corresponding dts file declarationMap true Generates a sourcemap for each corresponding dts file sourceMap true Generates corresponding map file outFile Concatenate and emit output to single file outDir Redirect output structure to the directory rootDir Specify the root directory of input files Use to control the output directory structure with outDir composite true Enable project compilation tsBuildInfoFile Specify file to store incremental compilation information removeComments true Do not emit comments to output noEmit true Do not emit outputs importHelpers true Import emit helpers from tslib downlevelIteration true Provide full support for iterables in forof spread and destructuring when targeting ES or ES isolatedModules true Transpile each file as a separate module similar to tstranspileModule Strict TypeChecking Options strict true Enable all strict typechecking options noImplicitAny true Raise error on expressions and declarations with an implied any type strictNullChecks true Enable strict null checks strictFunctionTypes true Enable strict checking of function types strictBindCallApply true Enable strict bind call and apply methods on functions strictPropertyInitialization true Enable strict checking of property initialization in classes noImplicitThis true Raise error on this expressions with an implied any type alwaysStrict true Parse in strict mode and emit use strict for each source file Additional Checks noUnusedLocals true Report errors on unused locals noUnusedParameters true Report errors on unused parameters noImplicitReturns true Report error when not all code paths in function return a value noFallthroughCasesInSwitch true Report errors for fallthrough cases in switch statement Module Resolution Options moduleResolution node Specify module resolution strategy node Nodejs or classic TypeScript pre baseUrl Base directory to resolve nonabsolute module names paths src utils srcutils components srccomponents A series of entries which remap imports to lookup locations relative to the baseUrl rootDirs List of root folders whose combined content represents the structure of the project at runtime typeRoots List of folders to include type definitions from types Type declaration files to be included in compilation allowSyntheticDefaultImports true Allow default imports from modules with no default export This does not affect code emit just typechecking esModuleInterop true Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports Implies allowSyntheticDefaultImports preserveSymlinks true Do not resolve the real path of symlinks allowUmdGlobalAccess true Allow accessing UMD globals from modules Source Map Options sourceRoot Specify the location where debugger should locate TypeScript files instead of source locations mapRoot Specify the location where debugger should locate map files instead of generated locations inlineSourceMap true Emit a single file with source maps instead of having a separate file inlineSources true Emit the source alongside the sourcemaps within a single file requires inlineSourceMap or sourceMap to be set Experimental Options experimentalDecorators true Enables experimental support for ES decorators emitDecoratorMetadata true Enables experimental support for emitting type metadata for decorators It seems integer typing is broken currently the following code foots minimum TJStype integer export type natural number class Foo bar natural results in the following JSON schema schema properties bar minimum type number type object bar should be an integer but it gets casted to number Weve confirmed this behaviour happening on multiple systems running MacOS on different versions of this package This was working as intended at least months ago or so perhaps sooner 