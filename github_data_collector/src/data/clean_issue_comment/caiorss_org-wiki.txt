I have implemented the I hope final requirements as requested in your pull request for publishing the package to MELPA Could you please create another pull request for publishing to MELPA I am happy to apply any further updates to meet any further requirements Also I am happy to create the pull request but I need the rights to do that I am also willing to fork this repository and create the pull request for publishing but the MELPA contributing guidelines state that they only publish original repositories of the authors of the packages with very few exceptions I hope you find time to reply to my request Otherwise I hope you are okay with it if I try to publish a fork of this repository because your package is awesome I am try to install orgwiki by method bootstrap installer I got following error Not found I am using org files to keep notes with As time goes by the file is getting bigger and bigger which bring a lot of duplication also makes auto save and backup files big and cause a lot more extra disk io not good for the hard drive So I am thinking about a purely simple tag base system a tag datafile tag value tag is a string without blank characters value is a numeric value eg linux debian emacs a notes folder note file name is the joined string of tag values sort in ascending order eg a note with both linux and debian tag should be named just plain org files without the org extension The search operation is simple too a search tag function search tag datafile with keywords separated by space to find all the matched values each single tag uses fuzzy matching eg search for dbian linx will retrun files match the glob pattern but the file name list is converted to tag names like debian linux debian emacs linux you can select the file to open with number or you can goto open them all in a temp buffer with all files inserted using the nice thing is you can view all of them in one buffer and maybe cut and paste from one file to another The tag manipulation is very simple Delete a tag remove the tag from the datafile replace the tag value from all notes files names move file name the same as tag value to trash and warn the user save the tag value to a file named availabletagvalues Add a new tag search the tag datafile if no match create a new tag value and associate to the tag name the value in availabletagvalues will used first Add a tag to the current note rename it to a name include the tag value rename a tag just rename it in the tag datafile This will break big notes files into smaller ones and does not affect the viewing thanks to org translusion However I only have a very limited knowledge of emacs I am looking forward to hear your opinion and on how to bring the feature to this repo Thank you Overview section Remove the empty last table row Features section Removed duplicate Mx Moved both the key binding and command to the second line Github still shows the comment and key bindingcommand on a single line but its easier to read in the readmeorg file when Mx is on the same line as the command Demos section Added verbatim emphasis equal signs around Mx commands Screenshots section Update renamed command dash to slash Mx orgwikisearchpattern Mx orgwikisearchpattern Missing s after page Mx orgwikisearchpattern Search for all wiki page that contains a pattern string or regex pattern Missing t in patern in Mx orgwikisearchpatern SystemWindows Workflow section Added verbatim emphasis around Mx commands and a key binding Configuration section Added verbatim emphasis around the single and double backslashes double backslashes were not visible on github Open orgwiki pages in readonly section Added verbatim emphasis around a key binding Start the wiki section Added verbatim emphasis around Mx command Command Summary section Reduced double empty table rows to a single row between the sections Navigation and Close Command Alias Command and Backup Command And removed the two empty table rows at the end of the Misc section Mx orgwikiinsertlink section Added verbatim emphasis around Mx command Mx orgwikiheader section Added missing closing verbatim emphasis sign Mx orgwikiassetcreate section Changed backticksgrave accent characters around commands to verbatim emphasis Mx orgwikiassetdownloadinsert section Added verbatim emphasis around Mx command and a key binding Fixed typo happesn happens Mx orgwikiassetdownloadinsert section Added verbatim emphasis around Mx command Changed the command ending in a to end in a Mx orgwikiassetdownloadinsert Mx orgwikiassetdownloadinsert Since its in the orgwikiassetdownloadinsert section the command probably should use the command ending in a Modify it section Added verbatim emphasis around Mx commands Backlinks known from wikis available in orgwiki The different link types could be represented by different colors in emacs buffer if set somehow in emacs The idea has its origin in TheBrain or orgbrain but having a similar feature directly in orgwiki would open up new possibilities Having at least those new link categories helps in structuring your navigation travels within your notes so you could always walk into more general direction just by following parent links only and the opposite in child direction friend links would be kind of like the normal links which orgwiki has now where its hierarchical location is somewhat free to current concept Say my index page links to page A and page A links to page B and I follow the links in this order is there a easy shortcut to get to the previous wiki page like from B back to A and from A back to the index Like pushing and popping visited links on and off a stack Thanks I would love to be able to create notes directly from orgwikihelm In this way the user would first use orgwikihelm to search for the note Then failing that he would hit RET to automatically create the file This would be similar to how orgvelocity and deft work except that it relies on helm which of course makes it all that much better MXLinux Emacs graphical initel complete environment orgwiki configuration require orgwiki setq orgwikilocationlist orgwiki First wiki root directory is the default Initialize first orgwikidirectory or default orgwiki setq orgwikilocation car orgwikilocationlist I have a wiki that I created using orgmode I tried using orgwiki with it but it cannot see the subdirectories and only lists the files that are in the same dir as indexorg I also tried creating a new wiki and put some files in there and orgwiki could not see them Does orgwiki support files in different places or I should just put everything in the same folder orgwikireplaceextension not work correctly when filename include and browseurl on file should add file as prefix