See See PR opened to investigate issue Subject of the issue andcalloriginal with keyword arguments causes the following warning rbenvversions librubygems gemsrspecmocks librspecmocksmessageexpectationrb warning Using the last argument as keyword parameters is deprecated maybe should be added to the call Your environment Ruby version rspecexpectations version Steps to reproduce ruby require rspec class Foo def initializebar nil end end RSpecdescribe Foo do it works do expectFooto receivenewwithbar quxandcalloriginal Foonewbar qux end end RSpecExampleGroupsFoorun Expected behavior No warning is emitted Actual behavior A warning is emitted Subject of the issue I was trying to use rspec expectations compound feature as in expectto havereceivedandhavereceived actually for using with ordered but the and method is missing from HaveReceived matcher and i guess from the others too Including RSpecMatchersComposable into the matcher solves the problem though the error may be somewhat misleading as for example if the argument expectations fail it still complains about calls out of order Your environment Ruby version rspecmocks version Steps to reproduce Try to chain compound methods onto havereceived matcher Expected behavior Should work Actual behavior It raises NoMethodError Subject of the issue Calling expectto receivewith with a composed matcher doesnt use the full capabilities of the passed matcher in order to provide a more precise error message to the user You can argue that the diff produced in the attached example is correct the passed array doesnt match the expected one so the diff include the whole array that said the other example shows that it could be done better Your environment Ruby version ruby rspecmocks version Steps to reproduce begin require bundlerinline rescue LoadError e stderrputs Bundler version or later is required Please update your Bundler raise e end gemfiletrue do source gem rspec Activate the gem and version you are reporting the issue against end puts Ruby version is RUBYVERSION require rspecautorun class A def testparams end end B Structnewa b RSpecdescribe additions do lettestdouble instancedoubleA letpassedattributes do Bnew Bnew Bnew Bnew end letattributematcher do haveattributesa b haveattributesa b haveattributesa b haveattributesa b end it shows the whole array instead of elements which dont match do expecttestdoubleto receivetestwithacollectioncontainingexactlyattributematcher testdoubletestpassedattributes end it shows only not matching elements do expectpassedattributesto containexactlyattributematcher end end Expected behavior I would expect that error message shows only elements of the array which dont match the expectation Actual behavior Error message lists the whole array Subject of the issue Calling havereceive always become true not havereceive d havereceive does this matcher method exist I only see havereceive d Your environment ruby p revision x darwin rspecmocks Steps to reproduce ruby describe havereceive do letobject spyobject it do objectsomemethod This is expected to be true expectobjectto havereceivedsomemethod end This is expected to be false but is true and it doesnt even raise an error for havereceive it expectobjectto havereceivemethodnevercalled end Expected behavior ruby This should not pass or should raise an error for the method missing it expectobjectto havereceiveneverexistmethod Actual behavior ruby This passes when it shouldnt it expectobjectto havereceiveneverexistmethod Subject of the issue When using andwraporiginal on allowanyinstanceofSomeModule calling the original method results in a SystemStackError It appears that the method passed by andwraporiginal is actually the stubbed method and so its calling itself Your environment Ruby version rspecmocks version reproduced on pre aab d and Steps to reproduce ruby module MyModule def doworkarg value arg tos end end class MyObject include MyModule def initialize value end end RSpecdescribe MyObject do specify andwraporiginal works do allowanyinstanceofMyModuleto receivedoworkandwraporiginal original arg originalcallarg MyObjectnewdoworka end end Expected behavior The stub block calls the stubbed method Actual behavior The stub block calls itself resulting in SystemStackError 