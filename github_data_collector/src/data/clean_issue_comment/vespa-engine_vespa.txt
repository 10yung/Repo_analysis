also refactor from tlsSecretKeys several endpoint certificate classes This makes the format from applicationmetricsv values equal to the future metricsv values api Add bindings to be able to send requests to testerv API on tester containers not fully implemented yet This makes the Cluster Controller use the vdsdatastoredbucketspacebucketstotal dimension bucketSpacedefault to determine whether a content node manages zero buckets and if so will allow the node to go permanently down This is used when a node is retiring and it is to be removed from the application The change is guarded by the usebucketspacemetric default true If the new metric doesnt work as expected we can revert to using the currentold metric by flipping the flag The flag can be controlled per application vekterli PR hakonhall please review and merge Opensource Vespa does not support the accesscontrol element in servicesxml The feature is currently only available in the inhouse Vespa distribution Verizon Media Spinoff from Reverts vespaenginevespa This in now done in ThreadedRequestHandler handled for all handlers not only search Search definition snippet field latLong type position indexing attribute field allLatLong type arrayposition indexing attribute Doing a document PUT like so works subsequent GET shows allLatLong is there fields allLatLong N o W o latLong N o W o Doing a partial document UPDATE like so does not work fields allLatLong assign N o W o latLong assignN o W o create true The update to allLatLong does not take effect Currently its not possible to get any rank features from matching over maparray structures Consider the following example struct person field firstname type string field lastname type string field popularity type int field identities type mapstring person indexing summary structfield key indexing attribute structfield valuelastname indexing attribute structfield valuepopularity indexing attribute I think we should support the following rank features which is per document matchesname matchesidentitieskey matchesidentitiesvaluelastname For matchingread attribute value features I think we should hook into the foreach feature so that the aggregator can be chosen by the user in case there are multiple matches eg when using prefix search over attribute by introducing new dimensions today we have terms fields attributes We could maybe support a maparray field as a dimension which allows iterating over the values foreachidentitieskeykeyattributeMatchidentitieskeykey max foreachidentitiesvaluepopularitypattributeidentitiesp max 