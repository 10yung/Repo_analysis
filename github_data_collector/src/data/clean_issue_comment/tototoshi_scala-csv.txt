Ignore the case where the escape char is not the quote and is used in the content Hi I am wondering is anybody interested in adding feature of writingreading custom classes at least product types into CSV Something similar to what circe does for JSON A user has uploaded a CSV which uses solely carriage return CR or r characters for their newlines The current SourceLineReaderreadLineWithTerminator handles this by successfully reading in the header row and then discarding the rest We want it to display every row in the CSV We run something like this scala get a blob from Google Cloud Platform storage val spreadsheetSource SourcefromInputStreamChannelsnewInputStreamblobreader val reader CsvReaderopenspreadsheetSource val lines readerall lines List List String ListListFirst Name Last Name email This is despite the fact that the file were reading from has five lines I have also tried this with SourcefromFile and theres no difference I created the file from a normal CSV with LFstyle line endings and then ran this bash command bash tr n r fnlncsv fnlncrcsv Side note why cant we use Sources builtin getLines function Is there a reason that we need the line terminator in each string Instead of change CSVParserparse to handle QUOTENONE I simply deleted all quote related branches and states in CSVParserparse and get CSVParserQuoteNoneparse Ihis will make CSVParserQuoteNoneparse faster When calling toStreamWithHeadershead two times it takes the headers correctly on the first call the second call it used the next line as headerline scala import comgithubtototoshicsvCSVWriter DefaultCSVFormat import playapilibsjsonJson implicit object MyCSVFormat extends DefaultCSVFormat override val escapeChar Char val writer CSVWriteropennew javaioOutputStreamWriterSystemout writerwriteRowSeq Jsonobjcreated SystemcurrentTimeMillistoString import comgithubtototoshicsvCSVWriter DefaultCSVFormat returns created but I expect created Hi Toshiyuki Ive used your library in many projects recently Ive been using scalajs quite a lot and I was missing a good csv library so Ive tried to do a porting of your library and actually it was quite simple so here the pull request It didnt changed the API for the JVM ive just added an object CSV to access read and write directly without writing or reading a file The method in CSV are def readinput Stringimplicit format CSVFormat List List String def writeAllinput Seq Seq String implicit format CSVFormat String def writeRowinput Seq String implicit format CSVFormat String It would be great if you could merge my pull request and release it on the maven repository I guess also for the library to be listed between the libraries that are supporting scalajs would be a good visibility Regards and thank you for your great work Andrea Example scala import javaioByteArrayInputStream import javaioInputStreamReader import comgithubtototoshicsvCSVReader object App extends App val csv uE D uE uE BF u uE F uEF uEAC uEDEE uF uEE uED uF AC T Z uEF uEEF uF E u B uEE uE uE AF uEF B uF u FF uD A uEFBF uA CA uE D uF uEB E T Z val input new InputStreamReadernew ByteArrayInputStreamcsvgetBytesUTF val res CSVReaderopeninputall printlnres The output is ListList List T Z E T Z But the second value was supposed to be instead it was truncated to None This way all the APIs that use with headers is guaranteed to be in same order