when trying kitgen on one of the examples it works fine but when trying to run it on my own service it panics C Users OmegaRogue go src gokittodolist todoservicekitgen servicego panic interface conversion astNode is astSelectorExpr not astIdent goroutine running mainwalkIdentListfunc x cf xc d a CUsersOmegaRoguegosrcgithubcomgokitkitcmdkitgenreplacewalkgo x f mainwalkToReplacefunc x cf xc d a CUsersOmegaRoguegosrcgithubcomgokitkitcmdkitgenreplacewalkgo x mainselectifyIdentfunc x cf xc b aa xc d c x f xc d c CUsersOmegaRoguegosrcgithubcomgokitkitcmdkitgentransformgo x f mainselIdentFnVisit xc c ac x cf xc b aa xc d c xc d x d e CUsersOmegaRoguegosrcgithubcomgokitkitcmdkitgentransformgo x b mainwalkToReplace x ce a xc c ac x cf xc b aa xc dab CUsersOmegaRoguegosrcgithubcomgokitkitcmdkitgenreplacewalkgo xe mainwalkIdentList x ce a xc c ac xc fd x x CUsersOmegaRoguegosrcgithubcomgokitkitcmdkitgenreplacewalkgo x mainwalkToReplace x ce a xc c ac x cefc xc b xc d CUsersOmegaRoguegosrcgithubcomgokitkitcmdkitgenreplacewalkgo x ad mainwalkToReplace x ce a xc c ac x cf xc b xc d ba CUsersOmegaRoguegosrcgithubcomgokitkitcmdkitgenreplacewalkgo x mainwalkToReplace x ce a xc c ac x cf xc b xc d b CUsersOmegaRoguegosrcgithubcomgokitkitcmdkitgenreplacewalkgo x b mainwalkToReplace x ce a xc c ac x cf xc b xc d CUsersOmegaRoguegosrcgithubcomgokitkitcmdkitgenreplacewalkgo x db mainwalkToReplace x ce a xc c ac x cf xc b c xc daa CUsersOmegaRoguegosrcgithubcomgokitkitcmdkitgenreplacewalkgo x mainwalkDeclList x ce a xc c ac xc x x CUsersOmegaRoguegosrcgithubcomgokitkitcmdkitgenreplacewalkgo x mainwalkToReplace x ce a xc c ac x cf xc xc d CUsersOmegaRoguegosrcgithubcomgokitkitcmdkitgenreplacewalkgo x f mainWalkReplace x ce a xc c ac x cf xc x d ac xc d CUsersOmegaRoguegosrcgithubcomgokitkitcmdkitgenreplacewalkgo xa mainselectifyIdent xc c x xc x d e xc d a xc xc ca CUsersOmegaRoguegosrcgithubcomgokitkitcmdkitgentransformgo xf mainselectify xc x c c x xc c x xc fcb x xc CUsersOmegaRoguegosrcgithubcomgokitkitcmdkitgentransformgo x maindeflayouttransformAST xc a b x c xc c d x xc a xc c d CUsersOmegaRoguegosrcgithubcomgokitkitcmdkitgendeflayoutgo x mainprocess xc c xa x cde xc x ce xc x x xc CUsersOmegaRoguegosrcgithubcomgokitkitcmdkitgenmaingo xbf mainmain CUsersOmegaRoguegosrcgithubcomgokitkitcmdkitgenmaingo x ac i cant really find any differences between my code and the example code go my code package todosvc import context type Service interface Helloctx contextContext string error ListAllctx contextContext List error Listctx contextContext user string List error type List struct User string jsonname Tasks map string string jsontasksomitempty go example code package profilesvc import context type Service interface PostProfilectx contextContext p Profile error GetProfilectx contextContext id string Profile error PutProfilectx contextContext id string p Profile error PatchProfilectx contextContext id string p Profile error DeleteProfilectx contextContext id string error GetAddressesctx contextContext profileID string Address error GetAddressctx contextContext profileID string addressID string Address error PostAddressctx contextContext profileID string a Address error DeleteAddressctx contextContext profileID string addressID string error type Profile struct ID string jsonid Name string jsonnameomitempty Addresses Address jsonaddressesomitempty type Address struct ID string jsonid Location string jsonlocationomitempty This is an experimental PR suggested by basvanbeek in It adds a span name getter function to the opencensus endpoint tracer config Other options might worth adding StartOptions GetStartOptions See the opencensus ochttp plugin for more Im playing around with jwt errors handling and I found out that there is a HS specific error in jwtgo library that is returned as inner error by the gokit parser I believe that this error should be handled by the parser and ErrTokenInvalid should be returned Any thoughts This PR adds a middleware to the endpoint package that attaches an operation name to the context as well as adds support to the existing tracer implementations to use this name in a backward compatible way Its supposed to be a near top level middleware in the chain so subsequent middleware can utilize it go func MakeEndpoint endpointEndpoint return endpointChain endpointEndpointNameMiddlewareendpointName someTracingTraceEndpointtracer do not set an operation name LoggingMiddlewarelogger endpointFunc The motivation behind this middleware is to avoid duplicating an endpoint name when setting up the chain go func MakeEndpoint endpointEndpoint return endpointChain someTracingTraceEndpointtracer endpointName LoggingMiddlewarelogger endpointName SomeOtherMiddlewareendpointName endpointFunc The middleware can also help with moving other middleware depending on a name to a global chain go func MakeEndpointglobalMWs endpointMiddleware endpointEndpoint return endpointChain endpointEndpointNameMiddlewareendpointName globalMWs tracer and logger does not have to be setup per endpoint with a name endpointFunc Last but not least this middleware can easily be used by code generation tools to automatically populate the context with an operation name without manually initializing it TODO Think about a better name for the middleware eg OperationName is used by tracing implementations What should happen when a name is empty fallback to a default one like the tracing implementations do return the original endpoint directly or attach an empty name to the context Hello I have use kit generate to create some cmd but when i get import from githubcomopenzipkinzipkingoopentracing I can not use NewHTTPCollector NewRecorder NewTracer Please help me Thank you very much when I do go get the output is go githubcomgokitkitexamplesstringsvc imports githubcomnatsiogonats githubcomnatsiogonatsv parsing gomod module declares its path as githubcomnatsionatsgo but was required as githubcomnatsiogonats looks like it is here that the error is picking up on Any tipsworkaroundsfixes Thanks for the wonderful product I think it would be fair to point the limitations of calling New in the documentation since calling New again calls panic Hi We want to use the gokit log logrus adapter library and we found something a bit strange every time you want to use the log API you must provide the key message msg for the main message otherwise it will be printed as empty why the log everytime printed as info even though filtering correctly according levelDebugloggerLogmessage in debug mode key foo This prints key foo fieldslevellevelinfomessagein debug modemsg Thanks My sdEndpointer have endpoints which call different data centers Round Robin choses endpoints on a cyclic basis but call of some instances placed further than other ones takes longer time I want the call of further endpoint only to come when near endpoint returns error Is there way to give a priority to endpoint If there is no realization please help me with design Asked this question on Slack some time ago How do you all use the JWT middleware to return proper status codes to the user I dont want JWT errors to show up in the server error logs since they are client errors so for now I added another endpoint middleware in front of it which converts returned errors to endpointFailer instances and returns them as endpoint responses instead of errors This also means that I cant use the ServerErrorEncoder to encode these errors Error encoding is now part of the response encoding which is also not ideal I have to add error encoding to all response encoders One alternative solution I see is implementing some sort of filtering in the ServerErrorHandler to skip client xx errors like invalid token errors I would love to hear other opinions I also noticed that while the basic auth returns a common error type jwt auth does not Is that on purpose I just wanted to open an issue for it so that it can serve as a base for future discussions about error handling in gokit