Per the quickstart docs the schema gets yaml and the config get yml Seems unnecessarily inconsistent afaik theres no consensus on which extension gets used but seems like within a single project only one should be used Theres already a TODO in the code for this but when parsing the OpenAPI schema API Star does not seem to cater for media types other than applicationjson The OpenAPI specification makes provision for operations to consume many different media types in requestBody as per the example for Form Data below survey post requestBody required true content applicationxwwwformurlencoded API Star does not support using this media type schema type object properties name type string favnumber type integer required name email At the moment using anything other than applicationjson in the schema will raise a ClientError with code invalidproperty current this proposed that Trying to install apistar inside a venv created with python m venv venv python m apistar yields no module named apistar Not sure what I am doing wrong I recorded this from my terminal These should be steps to reproduce wurst tmp python version Python wurst tmp pip version pip from usrlibpython sitepackagespip python wurst tmp python m venv venv wurst tmp source venvbinactivate venv wurst tmp which pip homewursttmpvenvbinpip venv wurst tmp pip install apistar Ignoring user since user sitepackages are not visible in this virtualenv Collecting apistar Using cached Collecting click from apistar Using cached Collecting jinja from apistar Using cached Collecting requests from apistar Using cached Collecting pyyaml from apistar Using cached Collecting typesystem from apistar Using cached Collecting MarkupSafe from jinja apistar Using cached Collecting chardet from requestsapistar Using cached Collecting idna from requestsapistar Using cached Collecting urllib from requestsapistar Using cached Collecting certifi from requestsapistar Using cached Installing collected packages click MarkupSafe jinja chardet idna urllib certifi requests pyyaml typesystem apistar Running setuppy install for pyyaml done Running setuppy install for typesystem done Running setuppy install for apistar done Successfully installed MarkupSafe apistar certifi chardet click idna jinja pyyaml requests typesystem urllib venv wurst tmp python m apistar homewursttmpvenvbinpython No module named apistar venv wurst tmp which apistar homewurstlocalbinapistar venv wurst tmp deactivate wurst tmp exit This pull requests will add the following Extend the openapi validator to allow the examples field eee and Render the examples and the already existing example field in the apistar theme documentation img width altapistarexamples src Both OpenAPI Swagger and OpenAPI offer a deprecated boolean attribute on operation objects parameter objects and schema objects APIStar could raise a warning when calling a deprecated endpoint using a deprecated parameter or schema or at least make the attributes available to the user in the Link and Field classes Following the instructions here Im trying to create an endpoint in a Tornado app that shows the API documentation Im setting up a static file handler similar to this python from pathlib import Path import apistar from tornadoweb import StaticFileHandler apistarstaticpath Pathapistarfileparentjoinpaththemes themename static handlers apistar StaticFileHandler path strapistarstaticpath This works fine if themename apistar but there are several s with swaggerui and redoc themes due to missing JSCSS files that are not included in apistarthemes If these files arent going to be included in the package then there should be a way to specify a vendor URL prefix cf Required structure looks like this requestbody content applicationjson schema Prior to this fix Id missed the schema level but apistar was reporting a valid schema This makes error messages and tracebacks fancier I am however unsure about how the ClientError should display its messages in str Closes 