following Hi lmullen got a random Q for you I recently needed a nonEnglish nametogender categorizer and was surprised how few there were even for English So I built a wrapper around some really impressive C code based on names that site is in German but names and languages span most of the global north including Asia Ive currently bundled the code into this repo but suspect it would be useful asin a package of its own right And so What would you think about me PRing the lot into this package You can check out the current readme for a demo and easily take it for a spin yourself Note that it might not work because I have to figure out how to get a compiled object to read a staticallypackaged external file If it just returns INTERNALERROR then change this line to instdictnamdicttxt and you should be good The obvious problem Your package is currently quite specifically aimed at accessing and utilising a single source of historical data What Im proposing is quite a different kind of functionality and one which would alter how the overall aim of this package would have to be positioned It would then become more like genderizer but I am definitely not going to PR my code into there because thats a simple wrapper to a highly commerical api that only allows free requests before requiring outrageous costs The primary benfits This code is truly multilingual covering at least all languages listed here and Its blindingly fast as demod on current readme at around names per second Let me know what you think and Ill completely understand if youd rather not I guess in that case Id just spin up yet another R gender package but hope not to have to do that Follow guidelines here At the moment if I pass names in and dont match Ill get rows back This can be a problem for explicitly getting a row per entry Id propose adding a fillmissing parameter set to FALSE by default that allows one to explicitly include rows for names with missing data If thats okay Ill write the patch myself I wanted to report that the documentation is a bit out sync with the code The documentation gives genderize and kantrowitz as possible methods but if you use those the code returns the following error Error in matchargmethod arg should be one of ssa ipums napp demo Apologies for not browsing through all the release history for this and just spamming you with some notquitebugs but I wanted to raise a few questions about method napp that arent fully described in the docs A few places in the documentation at least in the function gender it says that Germany is a valid option but it isnt in those cases Denmark seems usually not to be listed as an option though it is and should probably be added Although there are very few names from Denmark see the last chart The year range is listed as to but there are only total people each with a distinct name in the sample from the first years all in Norway or Sweden I clipped the US ipums data to start in because there are only names in that year and fewer for those born before something similar might be appropriate here probably at around or so for Norway and later for other countries It is also might worth flagging in the notes that while United Kingdom is included it is significantly smaller than three of the other countries I was tempted to use it as a generalpurpose method for to until inspecting the data file to see how few names there were Iceland is also small but probably people know that Some of the more recent NAPP releases have British samples so maybe they would fix this Ill post that gendervectors method soon from the other issue I filed which will incorporate most of this in its default settings so it may not be necessary to address more than the first issue here genderdf is very useful but requires a lot of programming for what I imagine is the normal case creating a new column with the gender of every person in a frame born in many different years that might well span Im finding I need a function that works on vectors in a lesshadleyversemandating kind of way I just want to feed it a list of names and years and maybe countries and get a vector of male female or NA for each name in the set This is essentially the same in result as the function humaniformatfirstname which I must not be the only one using in conjunction with this I wonder if something like this would be useful in the package it selects the appropriate namedata set based on the year marks an NA for anything that it doesnt know how to handle and allows you to just add gender to a dataframe without loads of merging and unmerging Eg r bloo authors ungroup filterisnaname mutategender vectorizedgendernames firstyears birthfuzz Buggy featureincomplete and barely tested version of the function below If you want pull request with a clean version let me know and maybe I can make it I can see all sorts of reasons you wouldnt r vectorizedgender functionyearsnamesfuzzthreshold A function that takes a list of years and names and vectorizes the assignment of gender Returns a vector the same length as years and names where each element is male female or NA It uses ssa for dates after and ipums for dates before fuzz is the wiggle room on either side of the given year eg if fuzz is and year is names between and will be matched Avoids duplicating identical queries by using the genderdf method input dataframenamenamesyearyearsid lengthnamesstringsAsFactors F minsframe dataframemethod cssaipumsNA maxx c NA minn c NA labeled input mutatemethod ifelse isnayearNA ifelseyear fuzz NA ifelseyear fuzz NA ifelse year ssa ipums mutatemin yearfuzz max yearfuzz innerjoinminsframe mutatemin ifelsemin minn minn min max ifelsemax maxx maxx max mergeable labeled groupbymethod filtermethod in cssaipumsnapp dogenderdf yearcol cminmax namecol name method method ungroup filterabsqlogisproportionmaleabsplogisthreshold mutateminyearminmaxyearmax selectminmaxnamegender metamergeable labeled leftjoinmergeable selectnameyeargender distinct newversion input leftjoinmetamergeable newversiongender If I have someone named Orestes in I cant match it in the IPUMS sample genderOrestesyearsc methodipums Source local data frame x Variables not shown name chr proportionmale dbl proportionfemale dbl gender lgl yearmin No problem right Just broaden the net when you have a rare name genderOrestesyearsc methodipums Source local data frame x name proportionmale proportionfemale gender yearmin yearmax chr dbl dbl chr dbl dbl Orestes male Super But if I want to do a batch test on many names Id like to be able to just set the years for each of them at cyear year But this is going to raise loads of errors for anyone near the edge of the range genderOrestesyearsc methodipums Error in genderOrestes years c method ipums Please provide a year range between and Of course I can muck up my codes with a lot of maxes and mins for each of the datasets Im using But why not just clip c to c and write a warning instead of raising an error Data on Finnish namegender mappings is available from the Finnish population register for Finnish names that are in use in However there is no information of birth years Would such data set be appropriate addon in the gendergenderdata package as the birth year info is missing If yes I could potentially contribute that data set processing codes here Namegender mappings with birth year info are available with a good coverage for Finnish name here but there is probably little variation in gender mappings in such short period and hence the addec value would be limited There are also statistics on the most common top it seems to me names in the th century with gender and birth year information code here But again it is just the few top names and the value is limited I can provide more info on these if useful 