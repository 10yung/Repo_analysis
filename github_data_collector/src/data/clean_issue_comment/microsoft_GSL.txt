C will have stdspan standardized Does gslspan satisfy the requirements of an stdspan implementation other than the different namespace If it doesnt how Does gslspan have standardcompliant behavior or features beyond whats defined for stdspan Yes it does eg at If so what is it Answers to these questions and an overview of the difference between gslspan and stdspan implementations eg in libstdc and libc should be provided somewhere I believe the wiki is an appropriate place with a link from READMEmd Only for the test suite Remove the pragmas used to suppress compiler warnings This brings all the compile flags together in the testsCMakeListstxt In addition compilerosversion selection is made a bit more specific and unnecessary suppression flags are removed A disadvantage is the lack for a clean way in CMake to set flags for specific files Thus some flags are disabled with a wider scope then before Extend CI reach x Add compilers GCC and GCC LLVMClang and Clang AppleClang Xcode and different compilers x Build both C and C with all capable compilers x Add validation of the CMake configuration with all supported versions Fixes Generate with Wdev Werrordev warnuninitialized Libc with Clang Improve Job performance x Use the default CMake versions on all images This significantly improves setup times x Change default Linux image to Ubuntu Bionic Beaver Use Ubuntu Xenial where needed for older compilers Get Clang form the Ubuntu packages where available Other x Use readable names for builds x Add verification of variables Bash fix setting path x Use stages to end CI after jobs with the latest compilers have failed The latest compilers have the best error messages There is no benefit in running all legacy compilers before the error is fixed Same for ending the CI run after a CMake error is found x Clang and AppleClang report false positive warnings for Wundefinedfunctemplate In tests and only in C mode x Increase CMake requirement for AppleClang to CMake GoogleTest uses feature detection for C AppleClang features information is added in CMake Failure with GCC Changes to the Travis matrix Upgrading the distro from Trusty to Bionic because Trusty is EOL Upgrading XCode to the latest versions from XCode and Removing Clang Adding Clang and Changes to the test files The diagnostic inconsistentmissingdestructoroverride is missing in Clang and earlier I added major version detection to the warning suppression to only add this flag to versions that support it Recently notnull and strictnotnull started failing their LLVM build phases with warnings pertaining to the lack of CTAD guides That is being addressed by stephantlavavej brought up in a comment though that we may want to evaluate each of the GSL types should all the use of CTAD if they need deduction guides or if theyre fine existing asis cstddef was being included to detect whether GSLUSESTDBYTE should be set to or But if the user provided GSLUSESTDBYTE no detection is required and the header was never included dpackage Allows to use the installed library as msgslGSL in eg addlinklibraries statements Note At least the INSTALLINTERFACE generator expression in the targetincludedirectories statement cannot be distributed over multiple lines So I also reformatted the BUILDINTERFACE expression With this PR a user can use CMakes findpackage command to easily integrate this library to her CMake project like this findpackagemicrosoftgsl REQUIRED targetlinklibraries myprogram PUBLIC microsoftgslGSL This is typical way to use a library with vcpkg Hello I believe it would compose nicely with And please help me with stridedspan cause I have no idea what that beast might be Fixes 