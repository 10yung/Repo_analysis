Hello and thanks for working on Thruster I have been experimenting with various Rust web frameworks over the past few days to potentially replace my usage of Rocket So far Thruster has been one of the more promising candidates I love the simplicity of the API and how easy it is to create manipulate and pass around the App type I have a few questions on how to use the framework correctly Is the bestonly way to serve static files to write a middleware which loads the entire file in memory and calls contextbodyentirefilecontent This seems very inefficient if that is the case Also on the subject of serving static files how would you recommend matching the trailing portion of a route For example lets say I want to make all URL starting with swagger to serve the corresponding files in a docs directory on disk For instance hitting swaggerimglogopng should serve docsimglogopng When using Appcreate it would be very useful if it was possible to pass in a closure as the generatecontext argument As it stands I am not sure how to shove any data that is determined during application startup into the context objects EDIT I guess this is the answer Many thanks in advance Getting many errors compiling with latest stable Are there plans to allow storing application state in some form Like an R D connection manager that can be used within routes to retrieve a database session Thruster should be able to have have gRPC support like tonic Update this issue with more details as they evolve Would love to get the homegrown implementation of an http encoderdecoder more in line with hypers perf For perf focused users you can now easily use Hyper as the backend but it would be nice to be on level playing fields in the future Hi I would like to share a state between requests storing it into request context The proposal is to create a new trait that implements a method generate pub trait ContextGenerator fn generatereq R T The change is about create a new constructor create a basic implementation of ContextGenerator in order to support the older constructor While using the hyper server this should already be possible This is the tracking issue to make that support first class along with an example and short guide Ideally the upgrade for the socket will be handled via a single middleware function but we should consider the following Should each socket be stored in a static map somewhere for reference later Should we also have first class support for socketio