This PR updates the CI matrix to use latest JRuby JRuby release blog post See for more details Relies on This is currently raising a NoMethodError for NilClass and I expect this should be evaluating with the instance This used to be possible in roar Let me know if my assumptions are correct or if you have other ideas about where this should be fixed Maybe theres a way to do this but if there is Im hitting a wall Suppose you had this class ArticleRepresenter RoarDecorator include RoarJSON property author execcontext decorator decorator UserRepresenter property lasteditor execcontext decorator decorator UserRepresenter def author representedauthor end end class ArticlesRepresenter RoarDecorator include RoarJSONCollection items extend ArticleRepresenter end Now say this is for an API and you only want to render certain fields depending on user permissions So when rendering the collection of articles or a single article you show author all the time but only lasteditor if the user is an editor Seems like one way to do this would be pass in some kind of set of options and check them in the decorator methods I think this can be accomplished on the single representer by passing in the options with initialize but how would you do this at the collection level and have it pass it down to each single representer Hi It doesnt seem possible to represent timestamp properties in certain or default format Steps to reproduce configinitializersdateformatrb ruby TimeDATEFORMATS default YmdTHMSNz It converts timestamp to proper format ruby songcreatedattos T apprepresenterssongrepresenterrb ruby class SongRepresenter RoarDecorator include RoarJSON property createdat end Actual behavior Anyway it renders not expected output ruby SongRepresenternewsongtojson createdat T Z expected createdat T Please help me understand if its a bug or find a way to achieve expected result System configuration Roar version A model that has imageversions might want to have a link for image item in the field Like so json id imageversions small large links imagesmall href imagelarge href we can override but maybe we want a better DSL How about something that is evaluated on an instance before representing it ruby beforerepresent do representedimageversions each do imageversion link imageversion do end end end Hi there sorry to keep bothering you about these HAL rendering issues On the latest Im still having the following issue ruby RoarVERSION class PersonRepresenter RoarDecorator include RoarJSONHAL property id skiprender true property name collection favoritefoods decorator FavoriteFoodRepresenter class OpenStruct as favoriteFoods embedded true skiprender true renderempty false end class FavoriteFoodRepresenter RoarDecorator include RoarJSONHAL property id skiprender true property name end jsonstring id name Bob embedded favoriteFoods id name Pizza jsonstring id name Joe embedded favoriteFoods person PersonRepresenternewOpenStructnewfromjsonjsonstring OpenStruct id nameBob favoritefoods OpenStruct id namePizza person PersonRepresenternewOpenStructnewfromjsonjsonstring OpenStruct id nameJoe favoritefoods PersonRepresenternewperson tojson name Bob embedded favoriteFoods PersonRepresenternewperson tojson name Joe As you can see from the above contrived example the skiprender option only empties out the related collection but still renders an empty array in its place In addition to that the renderempty option wont help in this scenario either although it does work when the collection is legitimately empty Hope this helps I am using cells concept cells So I kind of expect support for similar syntax in representable But this is what I need for rendering a controller loaded neighbourhoods with a city ruby class MyRepresenter RoarDecorator include RoarJSON selfrepresentationwrap city collection neighbourhoods getter args args neighbourhoods do property name end end MyRepresenternewcitytojsonneighbourhoods mycustomneighbourhoods I kind of expect ruby class MyRepresenter RoarDecorator include RoarJSON include RoarSomeMagicModule P selfrepresentationwrap city collection neighbourhoods do property name end private def neighbourhoods args neighbourhoods Still not the best form but still better than setting a lambda in option end end MyRepresenternewcity neighbourhoods mycustomneighbourhoods I understand the class might also used for parsing input But is there anyway to NOT use option to get custom input Or I should use a custom class eg Struct for carrying the data into the representer Code ruby class ProductRepresenter RoarDecorator include RoarJSON include RoarXML selfrepresentationwrap nil Productattributenameseach do attr property attrtosym rendernil true end This works fine cause this is a required attribute property manufacturer class Manufacturer decorator ManufacturerRepresenter rendernil true For the product in Question this distributionrestriction is nil can be set to NULL if there is no restriction so it causes a problem when trying to render xml property distributionrestriction class DistributionRestriction decorator RestrictionRepresenter rendernil true end here is the error ruby ArgumentError Requires a Node NodeSet or String argument and cannot accept a NilClass You probably want to select a node from the Document with at or search or create a new Node via Nodenew from homevagrantrbenvversions librubygems gemsnokogiri libnokogirixmlnoderb in coerce 