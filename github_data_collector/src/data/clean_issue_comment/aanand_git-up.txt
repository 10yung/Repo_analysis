What I used git up for See if every branch is in a valid state Valid means Nothing to stash Remote tracking branch is set correctly No commit behind or in front What rebase autostash does Nagging about missing tracking branch and aborting So in general I do no longer get a sum up of all the problem to handle them but instead I get one problem after another which is so damn slowing down Would you recover working on this tool Shall I Are there other from Please update README with a section explaining how recent git versions solved this problem Shell output Failed to rebase w b onto originw b Heres what Git said binsh b command not found Changed PNG Badge to SVG and added Code Blocks We just migrated to a github forked repo workflow and really miss gitups just do the right thing mentality With multiple remotes gitup just pulls from the immediate fork origin and not from upstream repo origin gitgithubcombedgectsdkgit fetch origin gitgithubcombedgectsdkgit push upstream gitgithubcomXXXXctsdkgit fetch upstream gitgithubcomXXXXctsdkgit push Any possibility that gitup could be adapted to optionally fetch form the upstream repo as well as just the origin When running git up in a submodule folder the following error occurs Fetching origin usrlocallibrubygems gemsgrit libgritgitrb in read Not a directory rbsysopen UsersSUBMODULEgitHEAD ErrnoENOTDIR from usrlocallibrubygems gemsgrit libgritgitrb in fsread from usrlocallibrubygems gemsgrit libgritrefrb in current from usrlocallibrubygems gemsgrit libgritreporb in head from usrlocallibrubygems gemsgitup libgituprb in returningtocurrentbranch from usrlocallibrubygems gemsgitup libgituprb in block levels in run from usrlocallibrubygems gemsgitup libgituprb in withstash from usrlocallibrubygems gemsgitup libgituprb in block in run from usrlocallibrubygems gemsgrit libgritgitrb in withtimeout from usrlocallibrubygems gemsgitup libgituprb in run from usrlocallibrubygems gemsgitup bingitup in top required from usrlocalbingitup in load from usrlocalbingitup in main Problem If you have stashed changes and run gitup on a clean working directory your stashed changes will be applied at the end of the gitup script Expectation My stashed changes will not be applied and stay stashed Possible fix Name gitups own stash operation and only pop the named stash git up Fetching origin From x deleted none originmaster refsremotesoriginHEAD has become dangling remote Counting objects done remote Total delta reused delta packreused Unpacking objects done c a e ghpages originghpages varlibgems gemsgitup libgituprb in rebaseallbranches undefined method for nilNilClass NoMethodError from varlibgems gemsgitup libgituprb in block levels in run from varlibgems gemsgitup libgituprb in returningtocurrentbranch from varlibgems gemsgitup libgituprb in block levels in run from varlibgems gemsgitup libgituprb in withstash from varlibgems gemsgitup libgituprb in block in run from varlibgems gemsgrit libgritgitrb in withtimeout from varlibgems gemsgitup libgituprb in run from varlibgems gemsgitup bingitup in top required from usrlocalbingitup in load from usrlocalbingitup in main git status On branch master Your branch is based on originmaster but the upstream is gone use git branch unsetupstream to fixup nothing to commit working directory clean git up Cant update your repo because it doesnt has any branches with tracking information I would love to be able to set something like GITUPTRYORIGINMASTER that would try pulling from originmaster in this case 