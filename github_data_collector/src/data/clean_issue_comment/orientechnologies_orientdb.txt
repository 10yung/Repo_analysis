 OrientDB Version Java Version openJDK OS MacOS Issue When performing a count with an ORDER BY If no rows match instead of getting a result with a count field set to we get an empty result set This is similar to and which I had previously reported Expected behavior A count result of should be returned Actual behavior An empty result set is returned Steps to reproduce Create the schema SQL CREATE CLASS Test CREATE Property Testid String Test Works SQL SELECT count as count FROM Test JSON result type d version count fieldTypes countl Test Doesnt Work SQL SELECT count as count FROM Test ORDER BY id ASC JSON result OrientDB Version orientdb Java Version version here OS Linux el x x Expected behavior No ERROR message Actual behavior OrientDB prints ERROR message Steps to reproduce connect to existing OrientDB database OrientDB prints this ERROR message for all indexed fields These ERROR messages are printed every time client is connecting to the database It seems the database is still working and client still can get data by searching Question What is the meaning of this ERROR What shall I do to solve the problem behind this ERROR ERROR OIndexManagerRemote Error on loading of index by configuration typeUNIQUEnameORolenameindexVersion indexDefinitionclassNameORolefieldnamekeyTypeSTRINGcollatecinullValuesIgnoredfalseindexDefinitionClasscomorientechnologiesorientcoreindexOPropertyIndexDefinitionclusters algorithmCELLBTREEvalueContainerAlgorithmNONE javalangIllegalArgumentException COLLATE cannot be null at comorientechnologiesorientcoreindexOAbstractIndexDefinitionsetCollateOAbstractIndexDefinitionjava at comorientechnologiesorientcoreindexOAbstractIndexDefinitionsetCollateOAbstractIndexDefinitionjava at comorientechnologiesorientcoreindexOPropertyIndexDefinitionserializeFromStreamOPropertyIndexDefinitionjava at comorientechnologiesorientcoreindexOPropertyIndexDefinitionfromStreamOPropertyIndexDefinitionjava at comorientechnologiesorientcoretypeODocumentWrapperNoClassfromStreamODocumentWrapperNoClassjava at comorientechnologiesorientcoreindexOIndexAbstractloadMetadataInternalOIndexAbstractjava at comorientechnologiesorientcoreindexOIndexManagerRemotefromStreamOIndexManagerRemotejava at comorientechnologiesorientcoretypeODocumentWrapperNoClassreloadODocumentWrapperNoClassjava at comorientechnologiesorientcoreindexOIndexManagerAbstractloadOIndexManagerAbstractjava at comorientechnologiesorientcoredbdocumentOSharedContextRemoteloadOSharedContextRemotejava at comorientechnologiesorientcoredbdocumentODatabaseDocumentRemoteloadMetadataODatabaseDocumentRemotejava at comorientechnologiesorientcoredbdocumentODatabaseDocumentRemoteinitAtFirstOpenODatabaseDocumentRemotejava at comorientechnologiesorientcoredbdocumentODatabaseDocumentRemoteinternalOpenODatabaseDocumentRemotejava at comorientechnologiesorientcoredbOrientDBRemoteopenOrientDBRemotejava at comorientechnologiesorientcoredbdocumentODatabaseDocumentTxopenODatabaseDocumentTxjava at comtinkerpopblueprintsimplsorientOrientBaseGraphopenOrCreateOrientBaseGraphjava at comtinkerpopblueprintsimplsorientOrientBaseGraphinitOrientBaseGraphjava at comtinkerpopblueprintsimplsorientOrientGraphNoTxinitOrientGraphNoTxjava OrientDB Version Java Version OpenJDK OS Debian Buster Expected behavior Start a node distributed cluster When a node goes down writes should be redirected to the node that is up Actual behavior Writes cannot be performed on the cluster anymore comorientechnologiesorientserverdistributedODistributedException No enough nodes online to execute the operation online nodes master Steps to reproduce Start a node clustermaster master using dserversh Close dserversh from from the first server master Go to OrientDB Studio using the IP of the healthy node Edit a node For example edit the country name of a node from the demo database The defaultdistributeddbconfigjson on both servers autoDeploy true readQuorum writeQuorum majority executionMode undefined readYourWrites true newNodeStrategy dynamic servers clusters internal servers The issue relates to the closed issue but the solutions provided did not solve the problem Reads work as expected OrientDB Version Java Version JavaTM SE Runtime Environment build b Java HotSpotTM Bit Server VM build b mixed mode OS Linux insightcom generic Ubuntu SMP Wed Aug UTC x x x GNULinux Expected behavior No error Actual behavior csawk ERROR exception occurred getting message fecd f cfefc ab f from database comorientechnologiesorientcoreexceptionOStorageException Error on commit M DB name be e d f bca ff e at comorientechnologiesorientclientremoteOStorageRemotebaseNetworkOperationOStorageRemotejava at comorientechnologiesorientclientremoteOStorageRemotenetworkOperationRetryTimeoutOStorageRemotejava at comorientechnologiesorientclientremoteOStorageRemotenetworkOperationNoRetryOStorageRemotejava at comorientechnologiesorientclientremoteOStorageRemotecommitOStorageRemotejava at comorientechnologiesorientcoredbdocumentODatabaseDocumentAbstractinternalCommitODatabaseDocumentAbstractjava at comorientechnologiesorientcoretxOTransactionOptimisticdoCommitOTransactionOptimisticjava at comorientechnologiesorientcoretxOTransactionOptimisticcommitOTransactionOptimisticjava at comorientechnologiesorientcoredbdocumentODatabaseDocumentAbstractcommitODatabaseDocumentAbstractjava at comorientechnologiesorientcoredbdocumentODatabaseDocumentAbstractcommitODatabaseDocumentAbstractjava at comorientechnologiesorientcoredbdocumentODatabaseDocumentTxcommitODatabaseDocumentTxjava at comtinkerpopblueprintsimplsorientOrientTransactionalGraphcommitOrientTransactionalGraphjava Caused by javalangClassCastException null Steps to reproduce Occurs in production OrientDB Version Java Version OpenJDK OS WindowsMac Expected behavior No exception Actual behavior Exception due to use of sunmisc package Steps to reproduce JDK and higer removal of sunmisc package OrientDB Version Java Version OS Debian Docker Docker image Need to be done Currently I am always live patching the orientdb image but this is unnecessary Could you please update the following libs Update hazelcast hazelcast Add hazelcastkubernetes The Dockerfile I used and how I have accomplished live patching Dockerfile FROM orientdb The patch Hazelcast Versions ENV KUBERNETESHAZELCASTVERSION ENV HAZELCASTVERSION Hazelcast Version to be patched ENV ORIENTDBHAZELCASTVERSION Default Home for Orientdb ENV ORIENTDBHOMEorientdb Remove current hazelcast and add own hazelcast with kubernetes support RUN rm ORIENTDBHOMElibhazelcastORIENTDBHAZELCASTVERSIONjar wget nv directoryprefixORIENTDBHOMElib wget nv directoryprefixORIENTDBHOMElib Expected behavior This config should work but the discovery module is missing xml xml version encodingUTF Copyright c Hazel Bilisim Ltd All Rights Reserved Licensed under the Apache License Version the License you may not use this file except in compliance with the License You may obtain a copy of the License at Unless required by applicable law or agreed to in writing software distributed under the License is distributed on an AS IS BASIS WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND either express or implied See the License for the specific language governing permissions and limitations under the License hazelcast xsischemaLocation hazelcastconfig xsd xmlns xmlnsxsi group namenamename passwordpasswordpassword group properties property namehazelcastdiscoveryenabledtrueproperty properties network port autoincrementfalse port join multicast enabledfalse tcpip enabledfalse discoverystrategies discoverystrategy enabledtrue classcomhazelcastkubernetesHazelcastKubernetesDiscoveryStrategy properties property namenamespacenamespaceproperty property nameservicenameserviceproperty property nameserviceport property property namecacertificateproperty properties discoverystrategy discoverystrategies join network hazelcast Actual behavior The provided config is not working for kubernetes hazelcast setup It is needed because it makes the cluster more stable than using the current behavior of hard coding cluster members Steps to reproduce Configure a three node cluster setup with the helm chart from here Delete one node and wait Restart the node The node is not able to join again This is fixed when using hazelcastkubernetes OrientDB Version Java Version openjdk version OS Ubuntu Expected behavior I am storing list of schedules in embedded map as property in Edge type I need to append the schedule whenever new schedule updated between two vertex The schedule is for pick up and dropoff of kids I am using orientjs library to update the edge properties The update query is below UPDATE EDGE PicksFromHome SET SCHEDULE Apr Apr Apr Apr Apr Apr Apr Apr Apr Apr Apr Apr Apr Apr Apr Apr Apr Apr Apr Apr Apr Apr where rid IN Mar Mar Mar Mar Mar Mar Mar Mar Mar Mar Mar Mar Mar Mar Mar Mar Mar Mar Mar Mar Mar Mar Apr Apr Apr Apr Apr Apr Apr Apr Apr Apr Apr Apr Apr Apr Apr Apr Apr Apr Apr Apr Apr Apr I am able to achieve the expected behavior from studio but from orientjs does not Actual behavior Mar Mar Mar Mar Mar Mar Mar Mar Mar Mar Mar Mar Mar Mar Mar Mar Mar Mar Mar Mar Mar Mar Apr Apr Apr Apr Apr Apr Apr Apr Apr Apr Apr Apr Apr Apr Apr Apr Apr Apr Apr Apr Apr Apr Steps to reproduce Create a two Vertex with properties first name last name Create a edge with property embedded map with value data type string Create a link between two vertex using edge along with value mentioned above Try to update the edge with query mentioned in the problem statement An SQL script to reproduce the problem or a JUnit test case will increase A LOT the chance to have a quick fix OrientDB Version Java Version OpenJDK OSLinux Expected behavior Traversal of a property will only traverse that property Actual behavior Unpredictable traversal is happening Steps to reproduce Create Classes SQL CREATE CLASS Model CREATE PROPERTY Modelid String CREATE CLASS DataValue CREATE PROPERTY DataValueid String CREATE CLASS ObjectValue EXTENDS DataValue CREATE PROPERTY ObjectValuechildren LINKMAP DataValue CREATE CLASS ArrayValue EXTENDS DataValue CREATE PROPERTY ArrayValuechildren LINKLIST DataValue CREATE CLASS StringValue EXTENDS DataValue CREATE PROPERTY StringValuevalue String CREATE PROPERTY DataValuemodel LINK Model CREATE PROPERTY Modeldata LINK ObjectValue Create Data SQL LET model INSERT INTO Model SET id model LET objectString INSERT INTO StringValue SET idobjectString modelmodel valueobjectString LET arrayString INSERT INTO StringValue SET idarrayString modelmodel valuearrayString LET objectChild INSERT INTO ObjectValue SET idobjectChild modelmodel children LET arrayChild INSERT INTO ArrayValue SET idarrayChild modelmodel children LET stringChild INSERT INTO StringValue SET idstringChild modelmodel valuestringChild LET root INSERT INTO ObjectValue SET idroot modelmodel children UPDATE ObjectValue SET childrenobjectChild objectChild WHERE id root UPDATE ObjectValue SET childrenarrayChild arrayChild WHERE id root UPDATE ObjectValue SET childrenstringChild stringChild WHERE id root UPDATE ObjectValue SET childrenobjectString objectString WHERE id objectChild UPDATE ArrayValue SET children arrayString WHERE id arrayChild UPDATE Model SET data root Inspect results Step Just SELECT the data SQL SELECT FROM DataValue img width alt selectdatavalues src We see all of the DataValues properly created Step Try to traverse all children from the root ObjectValue SQL TRAVERSE children FROM SELECT FROM DataValue WHERE id root img width alt traverse children From Root src As mentioned in this will not traverse the root elements children LINKMAP Step Try to traverse using childrenvalues from the root ObjectValue SQL TRAVERSE childrenvalues FROM SELECT FROM DataValue WHERE id root img width alt traversechildrenvaluesfromroot src The traversal through the LINKMAP works But there are two issues First why do we have the Model object in the traversal It is not traversable via the children property Also the arrayString value which is a child of the arrayChild ArrayValue is missing Step Since there seems to be something odd with the ArrayValue try to traverse using childrenvalues from the arrayChild ArrayValue SQL TRAVERSE childrenvalues FROM SELECT FROM DataValue WHERE id arrayChild img width alt traversechildrenvaluesfromarray src Here we directly see that the Model is coming from the traversal of the ArrayValue And that the ArrayValues children are not properly being traversed Step Lets just verify that a traversal of the normal children properly will work from the arrayChild SQL TRAVERSE children FROM SELECT FROM DataValue WHERE id arrayChild img width alt traversechildrenfromarray src The Model is gone and we do get the StringValue Step Try traversing on both children and childrenvalues from the root SQL TRAVERSE children childrenvalues FROM SELECT FROM DataValue WHERE id root img width alt traversechildrenandvaluesfromroot src Now we get all the values we WANT but we are still incorrectly getting the Model Step Use an additional SELECT to filter on the DataValue class SQL SELECT FROM TRAVERSE children childrenvalues FROM SELECT FROM DataValue WHERE id root WHERE class INSTANCEOF DataValue img width alt filtertraversalondatavalueclass src Now we finally get what we wanted Discussion This seems a bit messy and probably a bit inefficient We have multiple projections and an extra SELECT Fixing may avoid this problem because we would not have to call values in the first place But this still seems like a bug OrientDB Version Java Version OpenJDK OS Linux Expected behavior Ability to use TRAVERSE in the Document API through a LINKMAP Actual behavior Only the initial entry point node is returned Steps to reproduce Create the DataValue class SQL CREATE CLASS DataValue CREATE PROPERTY DataValueid String CREATE PROPERTY DataValuechildren LINKMAP DataValue Insert Data and then TRAVERSE SQL LET r INSERT INTO DataValue SET idr children LET r INSERT INTO DataValue SET idr children LET r c INSERT INTO DataValue SET idr c children LET r c INSERT INTO DataValue SET idr c children LET r c c INSERT INTO DataValue SET idr c c children LET r c c INSERT INTO DataValue SET idr c c children LET r c INSERT INTO DataValue SET idr c children LET r c INSERT INTO DataValue SET idr c children UPDATE DataValue SET childrenc r c WHERE id r UPDATE DataValue SET childrenc r c WHERE id r UPDATE DataValue SET childrenc r c c WHERE id r c UPDATE DataValue SET childrenc r c c WHERE id r c UPDATE DataValue SET childrenc r c WHERE id r UPDATE DataValue SET childrenc r c WHERE id r TRAVERSE children FROM SELECT FROM DataValue WHERE id r Only the r element is returned JSON result type d rid version class DataValue children c c id r notification Query executed in sec Returned records Is it not possible to TRAVERSE through links in a LINKMAP I have not gone back and verified but I thought this was possible in a previous X version OrientDB Version Java Version OS ubuntu Expected behavior I saved a Vertex which already had relationships and the relation should have persisted IMHO Actual behavior the relationship is still there but is empty has no in or out vertex ids And I can delete the relationship and recreate it Im getting Relationship content is invalid on field Steps to reproduce not quite sure Would just like to know how to proceed in removing the broken link and then I can recreate it 