 I was running a report that simply grabs the data from edda and noticed several instances that I knew had been stopped were showing they were running I verified this in the AWS console I then went back and modified a couple of other instances by putting them into the stopped state They are stopped but Edda is still showing them as running From an instance lookup be able to identify the ELBs it is in Currently all the iam crawlers only process the first page of all these results ListAccessKeysResult ListGroupPoliciesResult ListGroupsResult ListMFADevicesResult ListRolesResult ListUserPoliciesResult ListUsersResult They need to be checked and paginated using resultgetIsTrunctated and resultgetMarker then on the subsequent request call setMarker egineer since you contributed the code perhaps you could look into this or ralphtice since you were interested in these collections We dont use the iam collections at Netflix so we have not noticed the problem but Bob Brown on the eddausers ran into this issue Cory In an increasingly complex eddaproperties file it is too easy to make typos in an accountname or forget a part of the proper suffix for config options Look into the ability to sanity check configuration options especially around account credentials which will silently inherit higher level credentials or try to autodiscover via metadata At the least consider adding informational log messages regarding credential providers and what value the credentials were sourced from or autodiscovered via metadata This is related to issue There seems to be a problem with hostedRecords creating to many document revisions I have found thousands of new documents with identical content as the previous revision diff also show no output My hunch is that multiple records are colliding perhaps multiple CNAME records acting as a RR dns entry So at a minimum I think we cannot use the name attribute as the id but looking at the resource I dont see any attribute that could be used as the resource id We probably need to keep the recordSets together as a single resource Cory 