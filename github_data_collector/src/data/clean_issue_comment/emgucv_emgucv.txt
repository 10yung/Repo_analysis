Trying to install the EmguCV nuget package to an Android project throws the following error Error NU Package ZedGraph is not compatible with monoandroid MonoAndroidVersionv Package ZedGraph supports net client NETFrameworkVersionv ProfileClient Thanks taking a look any help is appreciated VideoCapture webCam webCamSetCapturePropertyEmguCVCvEnumCapPropBrightness imageboximage webCamQueryFrame The above code set the brightness but it did not apply GetCapturePropertyEmguCVCvEnumWhenCapPropBrightness However the brightness is set to Both commercial and open source nugetzip builds of unable to decode TIF files with CCITT T compression While other builds work this is the latest build in x series covered by our commercial license EmguCVCvInvokeImreadfileName EmguCVCvEnumImreadModesGrayscale call fails with exception Sample file My code was structured like so c CvInvokeFindContoursimg contours null RetrTypeList contoursMethod forint i i count i var moments CvInvokeMomentscontours i Do Stuff momentsDispose contours i Dispose I was witnessing a pretty serious memory leak as my algorithm performs many iterations over this block And it caused a significant performance hit because my application quickly became resourceconstrained I had nitpicked various other sections But profiling kept pointing VectorOfVectorOfPoint instances So I switched out calls to Dispose for using statements the memory leak disappeared and performance was vastly improved c CvInvokeFindContoursimg contours null RetrTypeList contoursMethod forint i i count i usingvar contour contours i usingvar moments CvInvokeMomentscontour One of these method implementations must be throwing exceptions internally or something weird is happening in unmanaged space Because other than the exception handling aspect ie implicit finally block calling Dispose should be no different than calling using I do make use of the Dispose pattern in numerous places where I interact with emgucv simply because the structure of the code lends itself to that So it would be great to know if I need to consider changing these elsewhere I am using the commercial build of the latest version Im using the Kalman Filter for tracking a signal Ive found that small changes to Measurement Noise can cause sudden instability in the Kalman Filter for no reason that I can work out For instance here is the filter with a Measurement Noise of This is good the error at the start is because of poor initial estimates But if I lower the Measurement Noise to You can see that there is a sudden spike in the values I have no idea why this is happening and Ive used other implementations of the Kalman in python that dont do this For my version below processNoise is f KalmanFilter tracker new KalmanFilter var transitionMatrix new Matrixfloatnew f f f f var measurementMatrix new Matrixfloatnew f measurementMatrixSetIdentity var procNoiseCov new Matrixfloat procNoiseCovSetIdentitynew MCvScalarprocessNoise var measurementNoise new Matrixfloat measurementNoiseSetIdentitynew MCvScalarmeasurementNoiseValue var errorCovPost new Matrixfloat errorCovPostSetIdentitynew MCvScalar transitionMatrixMatCopyTotrackerTransitionMatrix measurementMatrixMatCopyTotrackerMeasurementMatrix procNoiseCovMatCopyTotrackerProcessNoiseCov measurementNoiseMatCopyTotrackerMeasurementNoiseCov errorCovPostMatCopyTotrackerErrorCovPost trackerStatePostSetTonew float Listfloat measurements new Listfloat Listfloat smoothed new Listfloat foreach var dt z in timesZipvalues time value time value measurementsAddz Im using a constant time even though I should be setting to dt It doesnt affect the problem trackerTransitionMatrixSetValue trackerTransitionMatrixSetValue trackerTransitionMatrixSetValue Matrixfloat measurement new Matrixfloatnew z Matrixfloat corrected new Matrixfloat trackerCorrectmeasurementMatCopyTocorrected trackerPredict smoothedAddcorrected return times values smoothedToArray I dont know enough about the inner workings of the Kalman filter to be able to guess what might be going wrong Ive attached the zvalues file in case it helps ZValuesOnlytxt Hello I build this Version from Master on Ubuntu So far everything is working but when I want to use tesseract I get not exactly a muchexpressive error message I also have Tesseract installed tessubuntu tesseract v tesseract alpha leptonica libgif libjpeg d libjpegturbo libpng libtiff zlib libwebp libopenjp Found AVX Found AVX Found FMA Found SSE Training files are from here bash Line Memory access error memory dump written usrsharedotnetdotnet KIRunnerStandarddll development Also no memory dump has been written using var ocr new EmguCVOCRTesseracthometessTesseractTessdata eng OcrEngineModeDefault ocrPageSegMode mode ocrSetImagenew ImageGray bytehometessTesseracttestbmp return ocrGetUTF Text Hi I am trying to integrate the quantized Mobilenet SSD v model to unity I am getting an index out of bound exception while reading the width and height from the input tensor using the following command int height CocoSsdMobilenetinputTensorDims I checked my model and it appears to be fine Below is the screenshot of it if I am commenting these lines and initializing height and width as on clicking on the play button unity engine is crashing with giving any exception Please suggest Porting this project to Net Core I am trying to implement a video recording tool using emgucv version The user can select the preferred resolution and if the user does not select any preference the app is supposed to choose the maximum resolution After some googling I found many articles write that I can input dummy large values for frame height and width as follows captureSetCapturePropertyEmguCVCvEnumCapPropFrameHeight captureSetCapturePropertyEmguCVCvEnumCapPropFrameWidth After calling this I inspected the frame width and height using GetCaptureProperty and it seems like the above did the trick because the returned frame widthheight values seem to be the real maximum resolution But the problem is that the ImageGrabbed event handler is not being called for this maximum resolution The worse thing is that it does not raise any exceptions I tried to find a solution everywhere but no luck Hope the developers could help me with this issue Thanks in advance This code gives a memory leak static void Mainstring args String mPath StringEmpty if argsLength mPath args if DirectoryExistsmPath foreach String mFilename in DirectoryGetFilesmPath jpg Mat mImage CvInvokeImreadmFilename Bitmap mBitmap mImageToImageBgr ByteToBitmap mBitmapDispose mImageDispose MessageBoxShowDone When i change Bitmap mBitmap mImageToImageBgr ByteToBitmap to ImageBgr Byte mX mImageToImageBgr Byte Bitmap mBitmap mXToBitmap the memory leak is gone