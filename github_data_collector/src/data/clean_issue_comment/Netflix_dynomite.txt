This superseeds as I cannot push to the original feature branch axelfauvel if you are not ok with this can you please merge the current state of dynomite in your branch so I could pick from there smukil I think I have all your remarks covered in the origanl PR Hopefully we can take it from here This commit is based on from axelfauvel in and tries to close Unfortunatelly the initial commit was already so old and the dynomite code base already evolved that it was easier to not jump directly on this Especically as there were some refactorings requested Redis Datastore Authentification If Dynomite is configured to require a password via config option requirepass the following behaviour will be applied On Dynomite startup the server authenticates with the backend itself by calling the datastore agnostic function gdatastoreauth The corresponding Redis response will be handeled in gisauthenticated Dynomite will exit if authentification to the datatstore was not successful Each newly created client connection will require authentification Clients can authentificate itself by issue the AUTH command against dynomite Dynomite will check the password and simulate an AUTH response If AUTH was successful the authrequired flag on the connection is reset and the client can process further commands through this connection Dose Dynomite support all the redis version Or Dynomite have no relate with the version of redis Hi All I am new to DynomiteDB As of now I have set up two racks in the same DC rack nodes rack nodes Dynomite DB is working good I see replication is happening Now my Question here is How to setup Haproxy or Dyno How clients need to hit a single IP where that should take care of which rack is active and send traffic to that rack can you explain how to setup Dyno step by step including config file and path Can I use system environment variables instead of config files when starting dynomite I use it in k s and docker There are many environment and only one config file in docker image can be used when starting Then I want to use system environment variables instead of config file for example there are previously servers in a single rack now Im doing linear scalabiliy scale UP make it server in this rack I guess there must be some data migration happen from the previous servers to the newly added server right even could be very little keys since consistent hashing is not perfect So how does dynomite handle this case by design Dynomite log gets flooded with the following messages clientunrefinternaltryput CONNCLIENT x bc from localhost unref owner POOL x f dynomite clientunrefinternaltryput CONNCLIENT x bc from localhost unref owner POOL x f dynomite clientunrefinternaltryput CONNCLIENT x from localhost unref owner POOL x f dynomite clientunrefinternaltryput CONNCLIENT x bc from localhost unref owner POOL x f dynomite clientunrefinternaltryput CONNCLIENT x bc from localhost unref owner POOL x f dynomite clientunrefinternaltryput CONNCLIENT x bc from localhost unref owner POOL x f dynomite clientunrefinternaltryput CONNCLIENT x bc from localhost unref owner POOL x f dynomite clientunrefinternaltryput CONNCLIENT x bc from localhost unref owner POOL x f dynomite clientunrefinternaltryput CONNCLIENT x bc from localhost unref owner POOL x f dynomite clientunrefinternaltryput CONNCLIENT x bc from localhost unref owner POOL x f dynomite clientunrefinternaltryput CONNCLIENT x from localhost unref owner POOL x f dynomite clientunrefinternaltryput CONNCLIENT x bc from localhost unref owner POOL x f dynomite clientunrefinternaltryput CONNCLIENT x from localhost unref owner POOL x f dynomite clientunrefinternaltryput CONNCLIENT x bc from localhost unref owner POOL x f dynomite clientunrefinternaltryput CONNCLIENT x bc from localhost unref owner POOL x f dynomite clientunrefinternaltryput CONNCLIENT x bc from localhost unref owner POOL x f dynomite clientunrefinternaltryput CONNCLIENT x bc from localhost unref owner POOL x f dynomite Almost everything works correctly but we cannot set loglevel higher than Dynomite version v but it happens also on Config dynomite datacenter dc rack rack dynlisten dynseeds rack dc rack dc listen varrundynomitedynomitesock servers varrunredisredissock timeout tokens secureserveroption none datastore writeconsistency DCSAFEQUORUM statslisten mbufsize maxmsgs serverconnections Hello there This is more a report than an issue but here we go Until yesterday I was suffering with the memory leak mentioned in this pull request So Ive upgraded of my servers with v but after this my dynomite returns an empty string in the REST API and when I run dynomite version also Here is an example In my second DC where I did not upgrade dynomite yet it appears like this I did the upgrade just by running the buildsh script in releases root directory Dont know for sure if it is a real problem or just a buildcompile mistake Gustavo This took a while to figure out DC is a VM on Azure DC is an onprem VM After a little while they got out of sync and connection timeouts occured This is due to the way Azure handles TCP connections All VMs are NATted and TCP connections are silently dropped no TCP RST after minutes of inactivity Dynomite respects Linux tcp keepalive values But these keepalive probes start after hrs of inactivity So the connection drops after minutes and Dynomite gets a read timeout after seconds and drops the packets To fix it I changed the tcp keepalive settings on the linux vm to the following netipv tcpkeepalivetime netipv tcpkeepaliveintvl netipv tcpkeepaliveprobes This seems to have remediated the issue On remote host roottestymemtiermemtierbenchmark redisbenchmark h testb p t ping Error Connection reset by peer On dynomite host roottestbsrcdynomitedynomite srcdynomite c redisnodeyml dnprintrun dynomitev g b a built for Linux pve x started on pid dnprintrun run rabbit run dig that hole forget the sun and when at last the work is done dont sit down its time to dig another one proxyaccept CONNPROXY x a f c listening on accepted CONNCLIENT x a f c from proxyaccept CONNPROXY x a f c listening on accepted CONNCLIENT x a f d d from proxyaccept CONNPROXY x a f c listening on accepted CONNCLIENT x a f da a from proxyaccept CONNPROXY x a f c listening on accepted CONNCLIENT x a f da d from proxyaccept CONNPROXY x a f c listening on accepted CONNCLIENT x a f da from proxyaccept CONNPROXY x a f c listening on accepted CONNCLIENT x a f daa from proxyaccept CONNPROXY x a f c listening on accepted CONNCLIENT x a f dad from proxyaccept CONNPROXY x a f c listening on accepted CONNCLIENT x a f db from proxyaccept CONNPROXY x a f c listening on accepted CONNCLIENT x a f db c from proxyaccept CONNPROXY x a f c listening on accepted CONNCLIENT x a f db f from proxyaccept CONNPROXY x a f c listening on accepted CONNCLIENT x a f dba from proxyaccept CONNPROXY x a f c listening on accepted CONNCLIENT x a f dbd from proxyaccept CONNPROXY x a f c listening on accepted CONNCLIENT x a f dc from proxyaccept CONNPROXY x a f c listening on accepted CONNCLIENT x a f dc b from proxyaccept CONNPROXY x a f c listening on accepted CONNCLIENT x a f dc e from proxyaccept CONNPROXY x a f c listening on accepted CONNCLIENT x a f dca from proxyaccept CONNPROXY x a f c listening on accepted CONNCLIENT x a f dcd from proxyaccept CONNPROXY x a f c listening on accepted CONNCLIENT x a f dd from proxyaccept CONNPROXY x a f c listening on accepted CONNCLIENT x a f dd a from proxyaccept CONNPROXY x a f c listening on accepted CONNCLIENT x a f dd d from proxyaccept CONNPROXY x a f c listening on accepted CONNCLIENT x a f dda from proxyaccept CONNPROXY x a f c listening on accepted CONNCLIENT x a f ddd from proxyaccept CONNPROXY x a f c listening on accepted CONNCLIENT x a f de from proxyaccept CONNPROXY x a f c listening on accepted CONNCLIENT x a f de from proxyaccept CONNPROXY x a f c listening on accepted CONNCLIENT x a f de c from proxyaccept CONNPROXY x a f c listening on accepted CONNCLIENT x a f de f from proxyaccept CONNPROXY x a f c listening on accepted CONNCLIENT x a f ded from proxyaccept CONNPROXY x a f c listening on accepted CONNCLIENT x a f df from proxyaccept CONNPROXY x a f c listening on accepted CONNCLIENT x a f df from proxyaccept CONNPROXY x a f c listening on accepted CONNCLIENT x a f df b from proxyaccept CONNPROXY x a f c listening on accepted CONNCLIENT x a f df e from proxyaccept CONNPROXY x a f c listening on accepted CONNCLIENT x a f dfd from proxyaccept CONNPROXY x a f c listening on accepted CONNCLIENT x a f e from proxyaccept CONNPROXY x a f c listening on accepted CONNCLIENT x a f e from proxyaccept CONNPROXY x a f c listening on accepted CONNCLIENT x a f e a from proxyaccept CONNPROXY x a f c listening on accepted CONNCLIENT x a f e d from proxyaccept CONNPROXY x a f c listening on accepted CONNCLIENT x a f e d from proxyaccept CONNPROXY x a f c listening on accepted CONNCLIENT x a f e from proxyaccept CONNPROXY x a f c listening on accepted CONNCLIENT x a f e from proxyaccept CONNPROXY x a f c listening on accepted CONNCLIENT x a f e from proxyaccept CONNPROXY x a f c listening on accepted CONNCLIENT x a f e c from proxyaccept CONNPROXY x a f c listening on accepted CONNCLIENT x a f e cf from proxyaccept CONNPROXY x a f c listening on accepted CONNCLIENT x a f e from proxyaccept CONNPROXY x a f c listening on accepted CONNCLIENT x a f e from proxyaccept CONNPROXY x a f c listening on accepted CONNCLIENT x a f e from proxyaccept CONNPROXY x a f c listening on accepted CONNCLIENT x a f e b from proxyaccept CONNPROXY x a f c listening on accepted CONNCLIENT x a f e ce from proxyaccept CONNPROXY x a f c listening on accepted CONNCLIENT x a f e from proxyaccept CONNPROXY x a f c listening on accepted CONNCLIENT x a f e from proxyaccept CONNPROXY x a f c listening on accepted CONNCLIENT x a f e from reqserverenqueueimsgq Bad tailq NEXT x a f b dd tqhlast NULL Aborted core dumped Config roottestb cat srcdynomiteredisnodeyml dynomite datacenter dc rack rack dynlisten dynseeds testc rack dc testd rack dc listen servers tokens secureserveroption datacenter pemkeyfile confdynomitepem datastore readconsistency DCSAFEQUORUM writeconsistency DCSAFEQUORUM statslisten Hi Current setup is DC rack with node each We are using and we started noticing the following issue when there is a spike in activity in our service connected to dynomiteredis coreprintpeerstatus x afd dcus rack x NORMAL coreprintpeerstatus x aff dceu rack x rack dceu NORMAL coretimeout REQ x ed a REQREDISHMSET len on CONNSERVER x a to timedout timeout was coreclose close CONNSERVER x a to on event FF eof done rb sb Connection timed out serverclose close CONNSERVER x a to Dropped outqueue inqueue requests eventdelconn epoll ctl on e sd failed No such file or dire ctory reqforwardtopeer Failed to forward request to local datastore reqforwardtopeer Failed to forward request to local datastore reqforwardtopeer Failed to forward request to local datastore reqforwardtopeer Failed to forward request to local datastore reqforwardtopeer Failed to forward request to local datastore reqforwardtopeer Failed to forward request to local datastore reqforwardtopeer Failed to forward request to local datastore reqforwardtopeer Failed to forward request to local datastore The timeout could be understandable but not sure why the No such file or directory error or the failed to forward request to local datastore which never recovers This causes our service to crash Any help or clarification on this issue is appreciated 