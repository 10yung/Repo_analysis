When a serviceproto have more then one services the protocgenswagger tool can not find right othernot the first one services method comments I changed protoCommentss argument then the serviceswaggerjsons summary field was right But Im not sure is the right way to fix it Please checkout thanks Bumps rubyzip from to details summaryRelease notessummary Sourced from rubyzips releases v Security Default the validateentrysizes option to true so that callers can trust an entrys reported size when using extract This option defaulted to false in for backward compatibility but it now defaults to true If you are using an older version of ruby and cant yet upgrade to x you can still use and set the option to true Tooling Documentation Remove test files from the gem to avoid problems with antivirus detections on the test files Drop support for unsupported ruby versions v Security Add validateentrysizes option so that callers can trust an entrys reported size when using extract This option defaults to false for backward compatibility in this release but you are strongly encouraged to set it to true It will default to true in rubyzip New Feature Add addstored method to simplify adding entries without compression Tooling Documentation Add more gem metadata links v Do not rewrite zip files opened with openbuffer that have not changed Tooling Documentation Update examplerecursiverb in README Hold CI at trusty for now automatically pick the latest ruby patch version use rbx and hold jruby at details details summaryChangelogsummary Sourced from rubyzips changelog Security Default the validateentrysizes option to true so that callers can trust an entrys reported size when using extract This option defaulted to false in for backward compatibility but it now defaults to true If you are using an older version of ruby and cant yet upgrade to x you can still use and set the option to true Tooling Documentation Remove test files from the gem to avoid problems with antivirus detections on the test files Drop support for unsupported ruby versions Security Add validateentrysizes option so that callers can trust an entrys reported size when using extract This option defaults to false for backward compatibility in this release but you are strongly encouraged to set it to true It will default to true in rubyzip New Feature Add addstored method to simplify adding entries without compression Tooling Documentation Add more gem metadata links Do not rewrite zip files opened with openbuffer that have not changed Tooling Documentation Update examplerecursiverb in README Hold CI at trusty for now automatically pick the latest ruby patch version use rbx and hold jruby at details details summaryCommitssummary Merge pull request from rubyzipv cb b Bump version to e d af Merge pull request from rubyzipbumpsupportedruby a Merge pull request from rubyzipremovetestfiles e d ea Merge pull request from rubyzipv c e e Bump version to d fe b Merge pull request from rubyzipchecksize f Drop old ruby and JDK versions from CI d bec Remove test files from gem cb ae Warn when an entry size is invalid Additional commits viewable in compare view details br Dependabot compatibility score Dependabot will resolve any conflicts with this PR as long as you dont alter it yourself You can also trigger a rebase manually by commenting dependabot rebase dependabotautomergestart dependabotautomergeend details summaryDependabot commands and optionssummary br You can trigger Dependabot actions by commenting on this PR dependabot rebase will rebase this PR dependabot recreate will recreate this PR overwriting any edits that have been made to it dependabot merge will merge this PR after your CI passes on it dependabot squash and merge will squash and merge this PR after your CI passes on it dependabot cancel merge will cancel a previously requested merge and block automerging dependabot reopen will reopen this PR if it is closed dependabot ignore this patchminormajor version will close this PR and stop Dependabot creating any more for this minormajor version unless you reopen the PR or upgrade to it yourself dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency unless you reopen the PR or upgrade to it yourself dependabot use these labels will set the current labels as the default for future PRs for this repo and language dependabot use these reviewers will set the current reviewers as the default for future PRs for this repo and language dependabot use these assignees will set the current assignees as the default for future PRs for this repo and language dependabot use this milestone will set the current milestone as the default for future PRs for this repo and language You can disable automated security fix PRs for this repo from the Security Alerts page details Not ready for merge yet start of work towards solving I was able to get proto internals to not fail by generating the proto files as part of the testsnot sure if this is the approach that yall want to take grpcgateway has an odd restriction on query parameters with map types Specifically it refuses to unmarshal a map type whether the value type is a string slice such as map string string grpcgateway makes the assumption that the underlying Go type is authoritative for its representation in query parameters I would expect q foobar hello q foobar world to successfully unmarshal to both a map string string if using GoGo protobufs custom type mappings as well as the following type raw protobuf type proto message MapStringSlice string key string value message RPC repeated MapStringSlice q The wire representation of this type is identical to protos mapstring string and is recommended for backwards compatibility by the documentation for implementations that may not support map Im happy to write a patch for this functionality if its welcomed by the maintainers Makes it possible to omit the package comment from generated code This is useful if the generated code is added to an existing package that already has package documentation the generated package comment might be misleading in that case For an example of a package where this would be useful see Add an empty package to grpcgatewaythirdpartygoogleapis to allow vendoring the folder For example a toolsgo file may look like the followings go package yourpackage import githubcomgrpcecosystemgrpcgatewaythirdpartygoogleapis And you vendor this package by running go mod vendor To generate grpc gateway code you can run with the followings protoc I Ivendorgithubcomgrpcecosystemgrpcgatewaythirdpartygoogleapis pluginprotocgengrpcgrpcrubyplugin grpcgatewayoutlogtostderrtrue pathtoyourserviceproto Our team makes heave use of and would like a way for those validations to end up in the swagger spec so we dont need to define them twice This is not a bug reports But I find it little bit awkward to implement more Swagger features by digging into the Swagger proto files included with protocgenswagger as I could not find documentation on how to use more advanced features of swagger with grpcgateway Anyway after digging much I could not find any way to setup route level Bearer security Heres an example swaggerjson file that has route level security setup js orderorderid get security Bearer With this I can define which routes are public JWT Bearer Token not required or protected JWT Bearer Token required How can I define this in proto so that protocgenswagger can generate the swaggerjson with the security option Thanks theRealWardo provide a solution to support stream googleapiHttpBody for grpcgateway I modify his codes to adapt current master branch The main change is Unpack stream googleapiHttpBody to get the real data Properly set the ContentType of HTTP header when stream googleapiHttpBody response is received The doc of replacearesponseforwarderpermethod is not very clear We cannot directly access the forwardMyServiceCheckout variable outside the generated gw file If we modify the gw file directly it will break the automatic generation mechanism So whats the recommended way to overwrite the default forwarder