Hi Im trying to read in a csv file that has about columns On the parseCSV method I am getting this error Ive parsed other CSV files I have and it works fine suspecting there may be an issue with the number of columns testDataForge Error Error toString failed at stringSlice bufferjs at BuffertoString bufferjs at ObjectfsreadFileSync fsjs at SyncFileReaderparseCSV D Applications ModernAnalytics TestDataForge nodemodules dataforgefs build indexjs at dirname D Applications ModernAnalytics TestDataForge testDataForgejs at Objectanonymous D Applications ModernAnalytics TestDataForge testDataForgejs at Modulecompile modulejs at ObjectModuleextensionsjs modulejs at Moduleload modulejs at tryModuleLoad modulejs Thanks Rob Bumps handlebars from to details summaryChangelogsummary Sourced from handlebarss changelog v November th Bugfixes fix add noprototypebuiltins eslintrule and fix all occurences f f d fix add more properties required to be enumerable Chores Build fix use instead of c b f add chai and dirtychai and sinon for cleaner testassertions and spies deprecate old assertionmethods e e ba dad a Security The properties proto defineGetter defineSetter and lookupGetter have been added to the list of properties that must be enumerable If a property by that name is found and not enumerable on its parent it will silently evaluate to undefined This is done in both the compiled template and the lookuphelper This will prevent new RemoteCodeExecution exploits that have been published recently Compatibility notes Due to the securityfixes The semantics of the templates using proto defineGetter defineSetter and lookupGetter in the respect that those expression now return undefined rather than their actual value from the proto The semantics have not changed in cases where the properties are enumerable as in js proto some string The change may be breaking in that respect but we still only increase the patchversion because the incompatible usecases are not intended undocumented and far less important than fixing RemoteCodeExecution exploits on existing systems Commits v November th Bugfixes fix use Stringfield in lookup when checking for constructor d test add fluent API for testing Handlebars c ac c Compatibility notes no incompatibility are to be expected trtable truncated details details summaryCommitssummary c c b v c d Update release notes f f d fix add noprototypebuiltins eslintrule and fix all occurences fix add more properties required to be enumerable ba testchore add chaiexpect and sinon to runtimeenvironment dad test add sinon as global variable to eslint in the specs a test add sinonjs for spies deprecate current assertions e e chore add chai and dirtychai for better test assertions c b f fix use instead of de d v Additional commits viewable in compare view details br Dependabot compatibility score Dependabot will resolve any conflicts with this PR as long as you dont alter it yourself You can also trigger a rebase manually by commenting dependabot rebase dependabotautomergestart dependabotautomergeend details summaryDependabot commands and optionssummary br You can trigger Dependabot actions by commenting on this PR dependabot rebase will rebase this PR dependabot recreate will recreate this PR overwriting any edits that have been made to it dependabot merge will merge this PR after your CI passes on it dependabot squash and merge will squash and merge this PR after your CI passes on it dependabot cancel merge will cancel a previously requested merge and block automerging dependabot reopen will reopen this PR if it is closed dependabot ignore this patchminormajor version will close this PR and stop Dependabot creating any more for this minormajor version unless you reopen the PR or upgrade to it yourself dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency unless you reopen the PR or upgrade to it yourself dependabot use these labels will set the current labels as the default for future PRs for this repo and language dependabot use these reviewers will set the current reviewers as the default for future PRs for this repo and language dependabot use these assignees will set the current assignees as the default for future PRs for this repo and language dependabot use this milestone will set the current milestone as the default for future PRs for this repo and language You can disable automated security fix PRs for this repo from the Security Alerts page details Hi I am loading a CSV file with the fromCSV function When I run detectTypes on the dataframe at that time I see something like string phone object phone DataForge is treating empty values nulls as an object After running a transform such as below to uppercase a value there are some type differences dataFrametransformSeries sourceColumn value value valuetoLocaleUpperCase Running detectTypes again generates string phone undefined phone Even explicitly returning a null such as dataFrametransformSeries sourceColumn value value valuetoLocaleUpperCase null returns an undefined It seems there is an inconsistency between fromCSV dynamic typing parsing and transformSeries handling nulls andor undefined Can you tell me whats the equivalent of Pandas valuecounts in dataforge Panda has cumsum for its series Whats the equivalent in data forge It doesnt seem like it exists upon first look whats the recommended workaround Is there no way to edit cell values directly similarly to how its done in Pandas Example df name name I havent found anything relevant in the documentation so I assume there is no function for this So then the question is is there any way to modify data frames without having to rebuild whole framesseries every time a modification is done A feature request for consideration including transforms for widetolong and longtowide data structures For example Thanks for considering Thanks for this awesome DataFrame library for nodejs much wanted Indexing and using at function is quite slow with large DataFrames at looks like very useful in terms of improving performance Any workaround until at is fixed for its real intention A fix will be much helpful if possible Sorry that i am not aware of the internal working of a DataFrame for a PR