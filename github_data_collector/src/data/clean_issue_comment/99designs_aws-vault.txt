On awsvault login having a flag to return the generated URL to STDOUT would be handy for a couple of use cases Manipulating the generated login URL on remote systems without it opening a browser on that end Copying and pasting the URL into a Firefox container I just upgraded from to The biggest change I noticed is that I now have to use my MFA token on every invocation of the tool When looking in my Keychain Access in MacOS I no longer see a session being created like I had before no matter how many times I run the command Here is my command with debug sh awsvault debug exec PROFILE duration h aws s ls keyring Considering backends keychain pass file Loading config file Userscgilmerawsconfig Parsing config file Userscgilmerawsconfig Using region uswest from AWSDEFAULTREGION keyring Querying keychain for serviceawsvault keychainloginkeychain keyring Found results profile PROFILE using stored credentials profile PROFILE using AssumeRole using MFA Enter token for arnawsiamXXXXXmfacgilmer XXXXX Looking up keyring for PROFILE keyring Querying keychain for serviceawsvault accountPROFILE keychainloginkeychain keyring Found item awsvault PROFILE Generated credentials DEOK using AssumeRole expires in h m s Setting subprocess env AWSDEFAULTREGIONuswest AWSREGIONuswest Setting subprocess env AWSACCESSKEYID AWSSECRETACCESSKEY Setting subprocess env AWSSESSIONTOKEN AWSSECURITYTOKEN Setting subprocess env AWSSESSIONEXPIRATION Can I provide other details Not sure if this is a regression or intentional awsvault version v awsvault login help grep nosession awsvault exec help grep nosession n nosession Dont create a session with GetSessionToken This prevents using a duration greater than hour for the console login awsvault debug exec poc duration h nosession server Used above command to run server mode Trying to get nodes from eks cluster command kubectl get nodes OUTPUT The source profile IAM must have credentials The source profile IAM must have credentials Unable to connect to the server getting credentials exec exit status bash printenv grep AWS AWSVAULTpoc AWSDEFAULTREGIONeuwest AWSREGIONeuwest IAM Main profile POC is a profile using assume role I tried to use awsvault on both windows and mac Mac is working fine I installed awsvault in Windows with choco When i do awsvault add profile then it asks for access id and secret key it says successfully added When i try awsvault exec profile it shows awsvault error exec Failed to get credentials for PROFILE InvalidClientTokenId The security token included in the request is invalid status code request id DDGYGDYGD a eab ceAHDAHDFGASGDF I investigated it I think root cause is awsvault add profile can not set AWSACCESSKEYID and AWSSECRETACCESSKEY as Environment Variable Anyone having a similar issue TheAWSSECURITYTOKEN is set and also AWSSESSIONTOKEN but looking at this article it seems like AWSSESSIONTOKEN is the standard Having both variables can cause weird problems like I was wondering if it makes sense to add a flag for this variable or to remove it completely Hello Trying out the tool for the first time and hit a stumbling block Im unable to tell awscli to use a profile different than default when Im trying to use a different profile My app uses the aws ruby sdk Part of the SDK has a class for setting up credentials that references the AWSPROFILE env variable If its not set it assumes the profile will be default So Ive tried to set that env variable both in my zshrc file and the shell directly Ive also tried executing the wasvault command with something like AWSPROFILEdesiredprofile awsvault debug exec desiredprofile bundle exec rake pgimport But in my app when it comes time to create that AwsSharedCredentials class AWSPROFILE remains unset the shared credentials attempt to load the default profile which has no credentials and my command fails I tried setting AWSDEFAULTPROFILE as well just in case but that also did not work I saw some various issues in this repo saying that the AWSPROFILE gets unset when you use awsvault but I dont see a way to prevent that from happening when I need it to be set I saw the section in the usage document about overriding awscli to use awsvault that seemed somewhat related but when I tried pasting that command into my zshrc my terminal would immediately quit when I opened it so that did not work I can log in and execute commands using awsvault perfectly fine when the AWSPROFILE is not needed for the command My awsconfig is quite simple and is just default region useast profile dev profile prod mfaserial arnawsiam mfatoken Feel like I must be missing something obvious here any help is appreciated Currently if I awsvault foobar and dont have a foobar profile in my aws config file a profile section will be added and written to the file However if I then remove the credentials the profile section remains despite being empty The expected behavior from me would be that if the profile were still empty that is never filled with extra data by the user then it would be removed Fixes issues There are numerous usecases where the credentials server wont work particular when building tooling around awsvault itself Occasionally Ill have the following sequence of events occur t Start a session with a hour expiration t h m Invoke awsvault exec with some long running operation creating new ASGs t h Session expires Terraform starts timing out commands It would be nice to have some way to specify say minimumsessionduration or similar to ensure that a new session will be created and used if the existing one has less time on it than the minimum amount