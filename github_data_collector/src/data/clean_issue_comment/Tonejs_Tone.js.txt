Its hard to say if this is a bug or if Im lacking knowledge on common audio effects To me this should output sound only in my right speaker If the current behaviour is the expected behaviour what should I replace the first panner with to accomplish what I am trying to do Panners one extreme left one extreme right routed to a CrossFade routed to the second panner Cheers Hey I love Tonejs but its really frustrating that its impossible to add an onerror callback when loading audio buffers eg with ToneBuffers ToneSampler That basically means theres no way of knowing if anything went wrong during loading Solution I poked through the source code and I see that the onerror is in fact implemented but only on the ToneBuffer class but its not included in classes that extend it So the only thing that needs to be done is to make sure the onerror callback is included in classes that extendbuild on top of ToneBuffer like Buffers Sampler etc Should be a super quick fix but it would make a huge difference in using Tonejs especially for production Im seeing an issue in my exception handler for users on Safari and at this line in the buildesmindexjs file export var now getContextnowbindgetContext The full stack trace is as follows TypeError undefined is not an object evaluating aconnectnconnect at appnodemodulesstandardizedaudiocontextbuildes helperstestaudionodedisconnectmethodsupportjs at initializePromise native code at Promise native code at testappnodemodulesstandardizedaudiocontextbuildes helperstestaudionodedisconnectmethodsupportjs at cacheTestResultappnodemodulesstandardizedaudiocontextbuildes factoriescachetestresultjs at superappnodemodulesstandardizedaudiocontextbuildes factoriesaudionodeconstructorjs at audioDestinationNodeConstructorappnodemodulesstandardizedaudiocontextbuildes factoriesaudiodestinationnodeconstructorjs at superappnodemodulesstandardizedaudiocontextbuildes factoriesminimalbaseaudiocontextconstructorjs at superappnodemodulesstandardizedaudiocontextbuildes factoriesbaseaudiocontextconstructorjs at appnodemodulesstandardizedaudiocontextbuildes factoriesaudiocontextconstructorjs at ContextappnodemodulestonebuildesmcorecontextAudioContextjs at getContextappnodemodulestonebuildesmcoreGlobaljs at callappnodemodulestonebuildesmindexjs at webpackrequirewebpackbootstrap at callappnodemodulestinyqueueindexjs at webpackrequirewebpackbootstrap at callstatesanitizerts at webpackrequirewebpackbootstrap at callappnodemodulesnextreduxwrapperes indexjs at webpackrequirewebpackbootstrap at regFnappnodemodulesnextdistbuildwebpackloadersnextclientpagesloaderjs ac at registerappnodemodulesnextdistclientpageloaderjs at pushappnodemodulesnextdistclientpageloaderjs at callappnodemodulesnextdistbuildwebpackloadersnextclientpagesloaderjs ac at webpackrequirewebpackbootstrap at checkDeferredModuleswebpackbootstrap at webpackJsonpCallbackwebpackbootstrap at global codenextstaticKgV EMgldFzItZnOHhv npagesappjs This public sentry exception will help with source maps I am proactively using the isSupported method from standardizedaudiocontext to inform users that their browser is not supported but Im unable to catch this because it happens simply from importing the Tonejs library Is there a way to capture this without async importing Tone and catching the error Right now the code looks to be a UMD library which actually means it cant be run in the browser when using modern ES module code Would it be possible to generate a Toneumdjs as well as a Toneesmjs so that folks who are writing modern modulebased code can simply write import Tone from Toneesmjs in their scripts var synth new ToneSynth sawtoothtoMaster var lfo new ToneLFO lfoconnectsynthfrequency lfostart var scale new ToneScale var noise new ToneNoiseconnectscale scaleconnectsynthfrequency noisestart var loop new ToneLoopfunctiontime synthtriggerAttackReleaseC n time n ToneTransportstart loopstart stop m The same for LFO see the commented part By the way is there any method to select a certain pitch every time the synth is triggered Hi there As I understand the only differences between a Chorus and a Flanger are these A Flanger has a shorter delay time than a Chorus The delay time of a Flanger modulates to but doesnt with a Chorus With a Flanger the delay has feedback with a chorus it doesnt You can do the first with the current implementation but not the rd Would it be possible to add a feedback option to the Chorus If it is as simple as swapping the Delay for a FeedbackDelay I could try it myself although Im not entirely familiar with Tones architecture Or maybe make Flanger is own separate effect But I wouldnt know how to do that without copying alot of code from the Chorus effect Thanks in advance It seems the Transportposition is a little Inaccurate I scheduled a callback like this ToneTransportscheduletime consolelog And when i set the Transposttime to sometimes the callback was not be invoked It can be fixed by this ToneTransportposition ToneTime ToneTime n The demo here Did i used it in the wrong way or its just so Ive found a bug that occurs when multiple Reverbgenerate are called at the same time It appears that any of the Reverbs that are getting called after the first have the Offline context Working in next Failing in typescript Here is a simple script to demonstrate the problem pre script srclibTonejsscript script typetextjavascript var synth new TonePolySynth ToneAMSynthtoMaster synthtriggerAttackReleaseG script pre Any value except seems to work fine With there is a strange pop at the end of the sound Try or They sound fine Tested on Firefox bit on Fedora Also experienced the problem with Chromium I have spent days trying to solve this The sound is good on my PC with Chrome or even a simple windows tablet but not on my iPhone I reduced my app as far as possible and made a very small demo with just a simple noise generator for you to replicate You find the code by checking the page source It sounds really bad like a distorted sound lag If you cant hear it then it works on your device Sometimes you have to listen for a minute before the crackling starts I think this is true for any type of semicomplicated sound with tonejs Is it a performance issue This phone should be able to handle much worse applications Is there anything I can do Demo 