 Failed to run frozenpy it says unifiedallocatorcppUnifiedAllocator Cuda Error cudaErrorMemoryAllocation out of memory Even I changed nparticles to and ngrid to it also failed and there were no other programs using GPU But I can successfully run fractalspy My os Ubuntu CUDA version Taichi installation python m pip install taichinightlycuda GPU Quadro K NVIDIASMI Driver Version CUDA Version GPU Name PersistenceM BusId DispA Volatile Uncorr ECC Fan Temp Perf PwrUsageCap MemoryUsage GPUUtil Compute M Quadro K Off Off NA C P W W MiB MiB Default Processes GPU Memory GPU PID Type Process name Usage No running processes found Log xxhBoltzmanntaichi python frozenpy Release mode T loggingcppLogger Taichi core started Thread ID Taichi version cuda commit c d e Using CUDA Device Quadro K Device Compute Capability E unifiedallocatorcppUnifiedAllocator Cuda Error cudaErrorMemoryAllocation out of memory E Received signal Aborted Taichi Compiler Stack Traceback homexxhminiconda libpython sitepackagestaichicorelibtaichicoreso taichisignalhandlerint libx linuxgnulibcso x ef x f da adf libx linuxgnulibpthreadso raise homexxhminiconda libpython sitepackagestaichicorelibtaichicoreso taichiTlangUnifiedAllocatorUnifiedAllocatorunsigned long bool homexxhminiconda libpython sitepackagestaichicorelibtaichicoreso taichiTlangUnifiedAllocatorcreatebool homexxhminiconda libpython sitepackagestaichicorelibtaichicoreso taichiTlangProgramProgramtaichiTlangArch homexxhminiconda libpython sitepackagestaichicorelibtaichicoreso xdce c x f d b c homexxhminiconda libpython sitepackagestaichicorelibtaichicoreso xb d x f d f d pythonPyMethodDefRawFastCallDict x x ebd fa pythonPyCFunctionFastCallDict x x ebd fbd pythonPyObjectCallPrepend x x ebd d pythonPyObjectCall x e x ebd b e python xb x ebd d pythonPyObjectFastCallKeywords x x ebddce pythonPyEvalEvalFrameDefault x cf x ebe ce f pythonPyEvalEvalCodeWithName xc x ebd pythonPyFunctionFastCallKeywords x x ebdc pythonPyEvalEvalFrameDefault x b x ebe c c pythonPyFunctionFastCallDict x b x ebd b pythonPyObjectFastCallPrepend x x ebd d a python x b x ebddc b pythonPyEvalEvalFrameDefault x a x ebe dca pythonPyFunctionFastCallDict x b x ebd b pythonPyObjectFastCallPrepend x x ebd d a python x b x ebddc b pythonPyEvalEvalFrameDefault x a x ebe dca pythonPyEvalEvalCodeWithName x f x ebd f pythonPyEvalEvalCodeEx x x ebd f pythonPyEvalEvalCode x c x ebd c python x c x ebe pythonPyRunFileExFlags xa x ebe dcf pythonPyRunSimpleFileExFlags x c x ebe dee python x f x ebe ef pythonPyUnixMain x c x ebe f bc libx linuxgnulibcso libcstartmain python x d x ebe Taichi version cpu only commit f f ticfgarch ticuda cpu only bug Describe the bug I think there is a bug when simplifying IfStmt around how it handles atomics See the screenshots below when running rendererpy for a difference If I disable the simplification when there is an AtomicOp inside IfStmt the bug gets resolved Ie change this line in simplifycpp from cpp if isglobalwriteclause i get to cpp if clause i isGlobalStoreStmt Im running the CPU version on macOS Catalina LogScreenshots This is the result I got when running the renderer example on the head release or the master branch d c c e ba e a img width altScreen Shot at src And if I patch in the fix the rendered result will show the taichi logo img width altScreen Shot at src To Reproduce python examplesrendererpy Form many problems having the Hessian and using a NewtonRaphson solver will greatly decrease the number of iterations needed to converge Is it possible to to auto Hessian calculations mush like the auto gradient calculation now available Thanks Shai This is a really bad antipattern My bad Is your feature request related to a problem Please describe List generation on GPU for structfors can be timeconsuming especially preRTX Describe the solution youd like Automatically lower dense struct fors into range fors Describe the bug My environment is as blow jetsonjetsonnanotaichibuild jetsonrelease NVIDIA Jetson NANOTX Jetpack L T CUDA GPU architecture Libraries CUDA cuDNN cuda TensorRT cuda Visionworks n OpenCV compiled CUDA YES Jetson Performance inactive LogScreenshots taichibuild cmake DPYTHONEXECUTABLEpython DCMAKECCOMPILERusrlocalclang binclang DCMAKECXXCOMPILERusrlocalclang binclang Taichi Version Commit d bf f dc a e dc d bfe Using C compiler usrlocalclang binclang Clang compiler detected Using stdc Using float single precision as real Using python as python executable Python version include usrincludepython m library PYTHONLIBRARYNOTFOUND numpy include usrlocallibpython distpackagesnumpycoreinclude pybind include usrlocalincludepython homejetsonlocalincludepython m Building with CUDA Found CUDA Arch Found LLVM Using LLVMConfigcmake in usrlocalclang libcmakellvm llvm include dirs usrlocalclang include Could NOT find OpenMPCXX missing OpenMPCXXFLAGS OpenMPCXXLIBNAMES Could NOT find OpenMP missing OpenMPCXXFOUND OpenMP not found PYTHONLIBRARIESPYTHONLIBRARYNOTFOUND C Flags DTCISENONE stdc fsizeddeallocation Wall DTCPASSEXCEPTIONTOPYTHON DTCINCLUDED g DCUDAFOUND DTLANGWITHCUDA D TLANGCUDAVERSION Build type RelWithDebInfo Configuring done Generating done Build files have been written to homejetsontaichibuild jetsonjetsonnano taichibuild make Scanning dependencies of target taichicore Building CXX object CMakeFilestaichicoredirtaichianalysisvaluediffcppo In file included from homejetsontaichitaichianalysisvaluediffcpp In file included from homejetsontaichitaichianalysisirh In file included from homejetsontaichitaichiutilh In file included from homejetsontaichitaichicommonloaderh In file included from homejetsontaichitaichicommoninterfaceh In file included from homejetsontaichitaichicommondicth In file included from homejetsontaichitaichimathmathh In file included from homejetsontaichitaichimathgeometryutilh In file included from homejetsontaichitaichimathlinalgh In file included from usrlocalclang libclang includeimmintrinh usrlocalclang libclang includemmintrinh error use of undeclared identifier builtinia emms did you mean builtinisless builtinia emms usrlibgccaarch linuxgnu includec cmath note builtinisless declared here return builtinislessx y In file included from homejetsontaichitaichianalysisvaluediffcpp In file included from homejetsontaichitaichianalysisirh In file included from homejetsontaichitaichiutilh In file included from homejetsontaichitaichicommonloaderh In file included from homejetsontaichitaichicommoninterfaceh In file included from homejetsontaichitaichicommondicth In file included from homejetsontaichitaichimathmathh In file included from homejetsontaichitaichimathgeometryutilh In file included from homejetsontaichitaichimathlinalgh In file included from usrlocalclang libclang includeimmintrinh usrlocalclang libclang includemmintrinh error too few arguments to function call expected have builtinia emms usrlocalclang libclang includemmintrinh error use of undeclared identifier builtinia vecinitv si return m builtinia vecinitv sii usrlocalclang libclang includemmintrinh error use of undeclared identifier builtinia vecextv si return builtinia vecextv siv sim fatal error too many errors emitted stopping now ferrorlimit errors generated CMakeFilestaichicoredirbuildmake recipe for target CMakeFilestaichicoredirtaichianalysisvaluediffcppo failed make CMakeFilestaichicoredirtaichianalysisvaluediffcppo Error CMakeFilesMakefile recipe for target CMakeFilestaichicoredirall failed make CMakeFilestaichicoredirall Error Makefile recipe for target all failed make all Error Can anyone tell me how to solve it 