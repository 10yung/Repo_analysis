 Consider this function python def simplefunca b c if a b return b if b c else c else return To get good performance we want to generate code that operates on machine integers not Python objects That means that we must Profile and record that as is likely here a b and c are all integers normally Generate optimized machine code that tests that a b and c are machine integers if not bail out to the interpreter and deoptimize the generated code otherwise use the optimized machine code How can we have debugging Pyjion g and clang Ive got homeryutapackagespyjionsrcpyjiongitPyjiontaggedptrh error pasting and tmpIn does not give a valid preprocessing token PyObject name initnumbertmpname value homeryutapackagespyjionsrcpyjiongitPyjionintrinscpp note in expansion of macro INITTMPNUMBER INITTMPNUMBERtmpIn UNTAGITinI sizet tmptmpIn sizeofPyVarObject sizeofuint t sizeoftaggedptr sizeofsizet sizeofsizet PyObjecttmpIn initnumbertmptmpIn inI out PyLongAsDoubletmpIn else out PyLongAsDoublein return out PyErrOccurred PyObject name initnumbertmpname value get preprocessed to PyObjecttmpIn initnumbertmptmpIn inI of name in PyObject name initnumbertmpname value should be removed Is this change valid I dont have a Windows machine to check this change wont break the build After the death of pyston the community which had great hopes for pyjion is starting to feel nervous about the future of pyjion The repository is not very active and little communication is made of it Pyjion is cited as the most promising attempt to speed up Python on HN rpython twitter regularly so enthusiasm is here So how is it going on Be honest We all can understand people at MS have many important things to do and nobody would blame you if you couldnt work on it On the other hand if you need help money people to carry on we could spread the word What is JIT yeah I can google it but why not mention it at least once in README JIT Just In Time Compilation Never take anything for granted I was trying to run PatchDepsbat filebut it gives patch cannot be applied error C Users gillelas Desktop PyjionPatchDepsbat Disabling COM interop support in CoreCLR error patch failed srcincutilcodeh error srcincutilcodeh patch does not apply error patch failed srcutilcodeCMakeListstxt error srcutilcodeCMakeListstxt patch does not apply error patch failed srcutilcodelongfilepathwrapperscpp error srcutilcodelongfilepathwrapperscpp patch does not apply error patch failed srcutilcodeutilcpp error srcutilcodeutilcpp patch does not apply error patch failed srcCMakeListstxt error srcCMakeListstxt patch does not apply error patch failed buildcmd error buildcmd patch does not apply error patch failed clrcoreclrprops error clrcoreclrprops patch does not apply error patch failed clrdefinestargets error clrdefinestargets patch does not apply error patch failed clrdesktopprops error clrdesktopprops patch does not apply error patch failed CMakeListstxt error CMakeListstxt patch does not apply Applying changes to enable JIT support in Python error patch failed Includecevalh error Includecevalh patch does not apply error patch failed Includecodeh error Includecodeh patch does not apply error patch failed Includedictobjecth error Includedictobjecth patch does not apply error patch failed Includepystateh error Includepystateh patch does not apply error patch failed Objectscodeobjectc error Objectscodeobjectc patch does not apply error patch failed Pythoncevalc error Pythoncevalc patch does not apply Patches Python Python pylifecyclec trailing whitespace if definedWIN definedWIN Patches Python Python pylifecyclec trailing whitespace Patches Python Python pylifecyclec trailing whitespace if definedWIN definedWIN error patch failed Pythonpylifecyclec error Pythonpylifecyclec patch does not apply error patch failed Pythonpystatec error Pythonpystatec patch does not apply I also tried applying patches one by one by going into the directory by using git apply on individual files it doesnt work either It shows something like this C Users gillelas Desktop Pyjion CoreCLRgit apply Patches CoreCLR src utilcode longfilepathwrapperscpp verbose Checking patch srcutilcodelongfilepathwrapperscpp error while searching for ifndef FEATUREPAL if definedDACCESSCOMPILE definedSELFNOHOST extern HINSTANCE gpMSCorEE endif definedDACCESSCOMPILE definedSELFNOHOST BOOL PALGetPALDirectoryWrapperSString pbuffer error patch failed srcutilcodelongfilepathwrapperscpp error srcutilcodelongfilepathwrapperscpp patch does not apply I wanted to know why this is happening Any help regarding this would be greatly appreciated Now that its out we need to target the latest released version of CoreCLR We will need to decide if we want to target a specific branch or go by tags to handle updating our submodule details 