 When using the below the time printed is not changing Clock typedigital onChanget consolelogt Expected Behavior Time should increment on every printout Actual Behavior Startup time is printed over and over again URL screen shot or Codepen exhibiting the issue Steps to Reproduce Run the above code and check console Your Environment Include as many relevant details about the environment you experienced the bug in Grommet version Browser Name and version Chrome latest FF latest Operating System and version desktop or mobile Win Possible fix Changed run of Clock to fix thissetState elements nextElements if onChange if elementsduration onChange PnextElementshoursHnextElementsminutesMnextElementssecondsS else onChange TnextElementshoursnextElementsminutesnextElementsseconds I know is not a bug but Im trying to use grommet with the reacthookform library instead of formik The reacthookform is increasing its popularity and I think is a good way to manage forms in term of code quality and performance but grommet seems to not be totally compatible with it Anyone tried reacthookform with grommet Any suggestion Im trying to use the Select component and the forwardRef prop to pass the register function as needed by reacthookform but when I click on the select on browser everything crash causing a blank page Here a codesandbox If you click twice on the second Select everything will crash Provide a general summary of the issue in the Title above Im trying to use reduxform with Grommet and for some reason my validate function is getting passed undefined on submit The function is getting passed the correct values whenever a change is made to one of my inputs Tell us what should happen Validate should be passed the same data on submit that it is passed whenever the form input is changed Tell us what happens instead Validate is passed undefined URL screen shot or Codepen exhibiting the issue Steps to Reproduce Open Console in order to register consolelog statements Type input into form field and see the log statements originating from the validate function Click submit Logs show two different values for formValues one registered in the validate function undefined and one registered in the onSubmit function accurate Your Environment Include as many relevant details about the environment you experienced the bug in Grommet version Browser Name and version Chrome Version Official Build bit Operating System and version desktop or mobile MacOS Mojave Expected Behavior Grids would have similar props to Box Actual Behavior Box has many more stylistic props than Grid Reasoning As Grids and Boxes are both used for basic layouting often it could be beneficial to add similar stylistic props to Grid Currently focusing on border and pad before considering other props See this Slack thread for more info Im trying to use reacthookform with grommet but I have a typing issue Using the register function provided by reacthookform inside the ref prop see reacthookform doc with TextInput component I get this compiling error TS Type void is not assignable to type string string instance HTMLInputElement void string RefObjectHTMLInputElement instance ComponentTextInputProps Pick any any void string more RefObject RefObject Using a standard react input everything works as expected This codesandbox reproduces my problem As you can see at line I get transpiler error but next line with the standard input component I get no errors by the transpiler Grommet version What does this PR do Changed Box to add borderbetween This makes it easy to add visual separators between children of Box Where should the reviewer start Boxdocjs What testing has been done on this PR Enhanced Box Border story How should this be manually tested Storybook Do the grommet docs need to be updated yes Should this PR be mentioned in the release notes yes Is this change backwards compatible or is it a breaking change backwards compatible What does this PR do Fixed some issues with how tabindex is manipulated Supersedes Where should the reviewer start DOMjs What testing has been done on this PR storybook unit Also pair programmed this with taysea How should this be manually tested storybook observe tabindex Do the grommet docs need to be updated no Should this PR be mentioned in the release notes yes Is this change backwards compatible or is it a breaking change backwards compatible Expected Behavior When I do jsx FormField labelPassword onChangee thissetStatenewpassword etargetvalue valuethisstatenewpassword typepassword FormField labelPassword Confirm onChangee thissetStatenewpassword etargetvalue valuethisstatenewpassword typepassword I expect each form field to have distinct update logic Actual Behavior Typing into one field updates the other field Demo formfield Steps to Reproduce Use a FormField component in a normal Reactidomatic way Become surprised with the behavior Your Environment Grommet version Browser Name and version Chrome Workarounds Use FormFields only for the label and TextInput for the input logic The issue is not present with TextInput Provide a general summary of the PR in the Title above What does this PR do Adds TypeScript support for using styledcomponents interpolations as extend values in the ThemeType fixing Where should the reviewer start srcjsthemesbasedts srcjsallstoriestypescriptExtendThemetsx What testing has been done on this PR Created a TypeScript story to typecheck various usages of extend in a custom theme Updated my own project using locally linked grommet and confirmed our custom theme now passed typechecking How should this be manually tested Ensure that yarn tsc project reports no typechecking errors for the ExtendTheme story Any background context you want to provide I added a utility type called PropsOf which makes use of a TypeScript feature called conditional types This means that TypeScript Grommet users should be using TypeScript which I think is a reasonable tradeoff If one of the goals of Grommets TypeScript support is to be compatible with TypeScript pre let me know and I can come up with another solution to cover what that utility type does I spent some time also investigating the possibility of adding more types for the extend props which could be convenient for TypeScript users since they would get intellisense about what props are available when extending the theme however I couldnt see a reliable way of determining which props would be passed to the styled version of the component so most of the extend props will be typed as Recordstring any instead It should be possible to progressively type more of the props given the new definition of ExtendType but if you have any suggestions on how to tell with accuracy which props will be available in extend Id be happy to look into adding more of them One other thing to note is that there is an open issue for conflicting react reactnative types at To work around this Ive added a yarnclean to remove typesreactnative postinstall There are a few other alternatives to work around this problem suggested in that issue and if desired we can take another approach Fix typesstyledcomponents version to an older version Declare types explicitly in tsconfigjson Overall I thought the yarnclean seemed like the most straightforward way so long as this project is not planning to make use of typesreactnative at this time What are the relevant issues Do the grommet docs need to be updated I dont believe any updates are necessary Should this PR be mentioned in the release notes Potentially worth mentioning as a bug fix but probably not worth drawing a large amount of attention to it or anything Is this change backwards compatible or is it a breaking change Backward compatible for TypeScript 