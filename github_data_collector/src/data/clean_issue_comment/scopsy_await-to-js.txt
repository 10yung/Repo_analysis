Using node v yarn Windows The following code should return undefined Object object javascript const Promise requirebluebird const WebTorrent requirewebtorrent Create the torrent client const client new WebTorrent Make promises clientaddAsync Promisepromisifyclientadd const err data await toclientaddAsyncmagnet path pathToSave In this example err is the data i want and data is undefined Currently we use copy errorExt to the err object if we have an errorExt This is cleaner more functional and more understandable with an early return based on awaittojs I wrote a waittodecorater to help you better handle asynchronous logic maybe you can try Issue Hello everybody I have a problem with your cool library When i wrap my Promise in the function i need to get only response without error Like that const res await to thisrootStoreapiStorerequest url URLSSIGNIN if res return false But my ESLint prints a warning is assigned a value but never used I expect this error but I didnt understand how to properly handle it To improve this library Im ready to suggest you use Object as returned value instead of Array And I mean this should work like that const error data response await tofetchsomeapi In this case it will be possible to use one of the returned values without problems and also to save the ability to custom name variables I created PR about this issues Also in this PR Dependency update Change tslint to eslint as it seems to work better now Add nvmrc file to kind of lock the node version and sugest using one Added almost exact clone of to method that doesnt have a second argument an extra if condition I almost love this library I hate the second argument Every catch will result in running an if condition Just too costly for my blood I looked at awaitof and it has no IF but it returns with the value first and the error second Hate that more but it has no inner IF logic I looked at awaiton and thats just a no no no no Would you accept a pull request if I added another function that does all the same EXCEPT for no second argument and no catch IF condition Hello I wanted to reference a previously closed issue I just tested the following code and was still getting type errors const waiter Promiseboolean Promiseresolvetrue const test async Promiseboolean const err res await tobooleanwaiter if err return false return res Typescript complains that res may be undefined But since we have handled the error case we know that res is defined Thank you Hi I tried your repo in my little crypto project I use ccxt const ccxt requireccxt let log requireelectronlog let to requireawaittojs async withdrawcurrency amount address tag null let exchange new ccxtbitstampmyApiKey let error response error response await toexchangewithdrawcurrency amount address tag loginfoerror loginforesponse return response error When I call my withdraw function and I try to withdraw ripple and I know it should generate an error I still get node UnhandledPromiseRejectionWarning Unhandled promise rejection rejection id TypeError to is not a function node DEP DeprecationWarning Unhandled promise rejections are deprecated In the future promise rejections that are not handled will terminate the Nodejs process with a nonzero exit code node UnhandledPromiseRejectionWarning Unhandled promise rejection rejection id Error bitstamp statuserrorreasonamount Ensure this value is greater than or equal to Ideally Id like to return either the response or the error Ideas why this doesnt work Looking at your documentation I was expecting this repo to handle the errors Thanks for any help