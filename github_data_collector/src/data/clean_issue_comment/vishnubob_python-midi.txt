When I try to read a mididumppy marymidi shows this error Traceback most recent call last File C ProgramData Anaconda envs tweetproject Scripts mididumppy line in module importpkgresourcesrunscriptmidi mididumppy File C Python lib sitepackages pkgresources initpy line in module callaside File C Python lib sitepackages pkgresources initpy line in callaside fargs kwargs File C Python lib sitepackages pkgresources initpy line in initializemasterworkingset workingset WorkingSetbuildmaster File C Python lib sitepackages pkgresources initpy line in buildmaster wsrequirerequires File C Python lib sitepackages pkgresources initpy line in require needed selfresolveparserequirementsrequirements File C Python lib sitepackages pkgresources initpy line in resolve raise DistributionNotFoundreq requirers pkgresourcesDistributionNotFound The midi distribution was not found and is required by the application anyone knowa what does it means Working for py When running mididumppy UsersappleDesktopmagentapythonmidi command I am getting this error scriptcode compilescripttext scriptfilename exec File Usersappleanaconda envsmagentalibpython sitepackagesmidi py eggEGGINFOscriptsmididumppy line print Usage midifileformatsysargv How can I solve this problem Since this file belongs to my Anaconda environment I cannot make any to conversion for this Py file Suggest runningtick for event in self t eventtick eventtick runningtick runningtick t python There are different MIDI Events supported Where can I get a document describing what each MIDI Event means Thanks I converted all the print raise assert statements to python syntax I converted the initpy and fileiopy relative imports to python syntax Hi I am trying to install the package pythonmidi When trying the alternatives described pip install gitwebpage the package does build successfully but when I try to import it import midi I get a ModuleNotFoundError I would appreciate it if you could please help me on that issue Regards Mary When appending events in absolute mode and the tick of the event added is less than the previous events the event order is kept resulting in an invalid order if the mode is kept as absolute or negative and invalid tick values if restored to relative pattern midiPattern patternmaketicksabs track midiTrack patternappendtrack trackappendmidiNoteOffEventtick trackappendmidiNoteOnEventtick While from the list inheritance point of view this makes sense it does not from the midi file perspective The previous code will result in an invalid order of absolute ticks and inconsistent results in a saved file and most importantly negative values whenever the pattern is set back to relative mode in this case the saved file results like this midiPatternformat resolution tracks midiTrack midiNoteOffEventtick channel data midiNoteOnEventtick channel data Ive not yet understood how the writemidifile actually behaves whenever the maketicks methods are inconsistent between pattern and tracks maybe Ill do some digging about this The workaround is to do a tracksortkeylambda e etick for track in pattern if not tracktickrelative before actually exporting the midi file Maybe it is better to implement append and use bisectright whenever the track is using the absolute tick mode but the insert method might need some further investigation too Hi How can I use your code to extract the meta data marker events from type MIDI if not would be nice if you could guide me to write it myself Sorry I desperately need this and couldnt find email address