Adds a listOfN and option combinators to the Gen companion object making it much easier to generate lists of elements of a given size and optionals which could be needed to implement generators for case classes Also to help implementing the previous Im generalizing the picklers for containers collections Option since they can be easily derived using implicits and the current pickler implementations When using Scala Scalameter fails with the sample test throwing Exception in thread main javalangNoClassDefFoundError scalajdkCollectionConverter Caused by javalangClassNotFoundException scalajdkCollectionConverters Could it be related to CollectionConverters being removed on standard Scala but present in It appears that scalameter fails to run on jdk Here is my buildsbt lazy val Benchmark configbench extend Test This allows running ScalaMeter benchmarks in separate sbt configuration It means that when you want run your benchmarks you should type benchtest in sbt console lazy val basic Project project in file settingsSeq name leapyear organization comstormenroute scalaVersion scalacOptions Seqdeprecation unchecked feature Xlint publishArtifact false libraryDependencies Seq comstormenroute scalameter versionvalue bench ScalaMeter version is set in versionsbt orgscalatest scalatest test resolvers Seq Sonatype OSS Snapshots at Sonatype OSS Releases at testFrameworks new TestFrameworkorgscalameterScalaMeterFramework parallelExecution in Benchmark false logBuffered false configs Benchmark settings inConfigBenchmarkDefaultstestSettings Here is the versionsbt file version in ThisBuild Here is projectbuildproperties sbtversion Lastly here is the simple benchmark I am trying to work with package leapbenchmark import orgscalameterapi object RangeBenchmark extends BenchLocalTime val years Genrangeyear def leapYearyear Int year year year def nonOptimalLeapYearyear Int year year year performance of Leap in measure method leapYear in usingyears in year leapYearyear From the root directory bash sbt info Loading project definition from REDACTEDeapproject info Set current project to leapyear in build fileREDACTEDleap benchtest info Updating fileREDACTEDleapbasic info Resolving jlinejline info Done updating info Compiling Scala sources to REDACTEDleaptargetscala testclasses error REDACTEDleapsrctestscalabenchmarkLeapBenchmarkscala object scalameter is not a member of package org error import orgscalameterapi Any help I can get with setting this up so that I can actually run benchmarks would be appreciated With import orgscalameter object DumbBenchmark extends BenchLocalTime performance of sleep in usingGenunit config Keyverbose true in Threadsleep And adding verbose to app arguments I get no verbose logging Im not sure what Im doing wrong but when Ive traced the code I found no way this would work Ive placed breakpoint at Consoledebug and the currentContext has verbosefalse and looks to be the default context as Captured in setupzipper and then restored in perfomancetestscala The orgscalatoolstesting testinterface library is from circa not actively maintained and has no declared license on the maven released artifact Instead we should be using orgscalasbt testinterface which is actively maintained and has a properly declared license Hi Ive added cover with scalameter to an algorithm I then intentionally make it worse by doing a bad concat of lists in a tight loop Problem is that its so bad it never seems to fail and scalameter output keeps saying GC detected and sometimes Reinstating BenchMark Value The memory will have exploded to GB but just sit there even though I set XMX m This is how the JVM is loaded Starting new JVM java server Xmx m Xms m cp C Users hillmax AppData Local Temp classpath jarC Users hillmax AppData Roaming JetBrains IntelliJ IDEA Community Edition lib ideartjar orgscalameterexecutionMain C Users hillmax AppData Local Temp newjvm io Is XMX really working in this case Why am I hitting a GC wall at nowhere near the heap size Links at the bottom of the pages are broken Ones at the top and in the TOC seem to be working Heres one Simple Benchmark at the top good Simple Benchmark at the bottom bad Can you confirm whether this is supposed to happen info Benchmark ChunkColumnsfold info cores info hostname Luciano info name Java HotSpotTM Bit Server VM info osArch amd info osName Windows info vendor Oracle Corporation info version b info ParametersnumRows kB info ParametersnumRows kB info info Benchmark ChunkColumnsmapChunk info cores info hostname Luciano info name Java HotSpotTM Bit Server VM info osArch amd info osName Windows info vendor Oracle Corporation info version b info ParametersnumRows kB info ParametersnumRows kB If you can confirm this is not expected behaviour I can see if I can publish the tests causing this silent config argument doesnt work there just igrored output is verbose so we had to rollback to 