PTAL I tried to make the algorithm for getBindGroupLayout as formal as possible but theres some handwaviness because the spec doesnt have GPUShaderModule reflection yet This comment and the below content is programatically generated You may add a commaseparated list of anchors youd like a direct link to below eg idlserializers idlsequence Dont remove this comment or modify anything below this line If you dont want a preview generated for this pull request just replace the whole of this comments content by no preview and remove whats below a href titleLast updated on Jan PM UTC aee b Previewa a href titleLast updated on Jan PM UTC aee b Diffa Something that came out of discussion by the editors it would be interesting to explore the need for writeonly usage flags and binding types for texturebuffer storages Here are the reasons for it As investigation shows thanks JiaweiShao the writeonly use case has lower hardware requirements than readwrite at least on D D and Metal SPIRV already has separate decorators for NonWritable and NonReadable storage resources Metal shading language also has write access that is separate from readwrite on the API side at least in D D there is a clear separation with write access requiring an UAV unordered access view while read access requiring and SRV shader resource view STORAGEREAD and STORAGEWRITE would be cleaner than READONLYSTORAGE and STORAGE also more in line with existing MAPREAD and MAPWRITE If we go for it wed need to consider both STORAGEWRITE usage flags and writeonlystoragebufferwriteonlystoragetexture binding types Partially implemented by textures only also I think we can bikeshed the name Related to also distantly to introduced the readonly bindings So technically today when there is a STORAGE usage it could be readonly or it could be readwrite The difference affects whether we allow any other usage to coexist within the synchronization scope Therefore its difficult to both reason about and properly specify STORAGE usage today We could make this entirely clear by splitting the STORAGEREAD out of STORAGE leaving the latter to be strictly mutable Establishes a pattern with requestDevice for hopefullyreadable validation rule blocks This comment and the below content is programatically generated You may add a commaseparated list of anchors youd like a direct link to below eg idlserializers idlsequence Dont remove this comment or modify anything below this line If you dont want a preview generated for this pull request just replace the whole of this comments content by no preview and remove whats below a href titleLast updated on Jan PM UTC a d b Previewa a href titleLast updated on Jan PM UTC a d b Diffa This change added comprehensive validation rules for BindGroup creation I may ignored some validation rules though But I hope that the rules I added are correct PTAL Thanks This comment and the below content is programatically generated You may add a commaseparated list of anchors youd like a direct link to below eg idlserializers idlsequence Dont remove this comment or modify anything below this line If you dont want a preview generated for this pull request just replace the whole of this comments content by no preview and remove whats below a href titleLast updated on Jan AM UTC aab f Previewa a href titleLast updated on Jan AM UTC aab f Diffa Ran into this undocumented restriction when running with Metal validation layers MTLDebugBlitCommandEncoder validateCopyFromBuffersourceOffsetsourceBytesPerRowsourceBytesPerImagesourceSizetoTexturedestinationSlicedestinationLeveldestinationOriginoptions failed assertion sourceBytesPerImage must be Process stopped thread queue comapplemainthread stop reason signal SIGABRT frame x fff e df c libsystemkerneldylibpthreadkill libsystemkerneldylibpthreadkill x fff e df c jae x fff e df cc x fff e df c movq rax rdi x fff e df c jmp x fff e d cerrornocancel x fff e df cc retq Also sourceBytesPerRow must be but thats fine because WebGPU has rowPitch be a multiple of This has some validation implications on permissible values for imageHeight or zPitch in and it also means that imageHeight cannot truly mean tightly packed in Ive made an example implementation of the VKNVraytracing extension for Dawn here You can find a js example demonstrating usage here Since Khronos is working on a standard crossvendor ray tracing extension whats the current opinion of adding RT to WebGPU This patch adds readonlystoragetexture as a new enum of GPUBindingType and READONLYSTORAGE as a new enum of GPUTextureUsage This comment and the below content is programatically generated You may add a commaseparated list of anchors youd like a direct link to below eg idlserializers idlsequence Dont remove this comment or modify anything below this line If you dont want a preview generated for this pull request just replace the whole of this comments content by no preview and remove whats below a href titleLast updated on Jan AM UTC e a Previewa a href titleLast updated on Jan AM UTC e a Diffa We made requestAdapter singular due to fingerprinting concerns IIRC requestAdapters is not any more prone to fingerprinting The UA can choose to put whichever adapters it wants in the list Any adapters returned from it could have been found by searching the space of possible requestAdapter calls Many applications would end up trying to get every adapter they can find by searching the space and then using their own logic to pick among them This prevents apps from needing that pattern requestAdapters still allows an easy default eg ask for lowpower then get adapter requestAdapter is hostile to any situation where the UA does want to give a little more trust to the app perhaps Electron Node or even installed PWAs Finally adds hasMajorPerformanceCaveat as one thing that pluralizing requestAdapters enables simply EDIT will figure out later This comment and the below content is programatically generated You may add a commaseparated list of anchors youd like a direct link to below eg idlserializers idlsequence Dont remove this comment or modify anything below this line If you dont want a preview generated for this pull request just replace the whole of this comments content by no preview and remove whats below a href titleLast updated on Jan PM UTC Previewa a href titleLast updated on Jan PM UTC Diffa requestAdapter should delay until it can make the best choice about what adapter to return