 d in the object It would be nice if it were possible to specify an AMI via a search string rather than by ID like in testkitchen Heads up When trying to configure awselb in my project I encountered a mysterious issue that I think may haunt other vagrantaws users in the future Upon executing a vagrant up command I ran into this error message ELB configured for the instance does not exist Explanation Given that I was sure that the ELB did in fact exist it took a bit of debugging to realize that vagrantaws currently can only register an instance to classic load balancers and not application load balancers Vagrantaws depends on the fogaws gem which currently does not support AWS elbv ALBs as specified by this pull request Verification Test A quick test to prove this is to create a Classic Load Balancer and and Application Load Balancer then run aws elb describeloadbalancers and aws elbv describeloadbalancers Respective results will be logged Fogaws can only describe elbs Possible Solutions Merge the related fogaws PR Add a dependency to a different rubybased AWS SDK to be able to retrieve elbv s Enhance error logging to let users know that they can only register classic load balancers to an instance using the vagrant CLI For now I chose option since it does not matter for my use case however I expect others may in the future have a more strict need Thanks Attempting to install the plugin results in the error in the title The full error included below vagrant plugin install vagrantaws Installing the vagrantaws plugin This can take a few minutes Fetching xmlrpc gem Fetching formatador gem Fetching excon gem Fetching fogcore gem Fetching miniportile gem Fetching nokogiri x mingw gem Nokogiri is built with the packaged libraries libxml libxslt zlib libiconv Fetching fogxml gem Fetching fogxenserver gem Fetching optimist gem Fetching rbvmomi gem Fetching fogvsphere gem Fetching fogvoxel gem Fetching CFPropertyList gem Fetching fission gem Fetching fogvmfusion gem Fetching fogterremark gem Fetching fogjson gem Fetching fogstormondemand gem Fetching fogsoftlayer gem Fetching fogserverlove gem Fetching fogsakuracloud gem Fetching fogriakcs gem Fetching fogradosgw gem Fetching ipaddress gem Fetching fograckspace gem Fetching fogprofitbricks gem Fetching fogpowerdns gem Fetching ovirtenginesdk gem Building native extensions This could take a while Vagrant failed to properly resolve required dependencies These errors can commonly be caused by misconfigured plugin installations or transient network issues The reported error is ERROR Failed to build gem native extension current directory CUserswilliamhiggsvagrantdgems gemsovirtenginesdk extovirtsdk c CHashiCorpVagrantembeddedmingw binrubyexe r siteconf ug jrb extconfrb checking for xml config no extconfrb failed Could not create Makefile due to some reason probably lack of necessary libraries andor headers Check the mkmflog file for more details You may need configuration options Provided configuration options withoptdir withoutoptdir withoptinclude withoutoptincludeoptdirinclude withoptlib withoutoptliboptdirlib withmakeprog withoutmakeprog srcdir curdir rubyCHashiCorpVagrantembeddedmingw binRUBYBASENAME withlibxml config withoutlibxml config withpkgconfig withoutpkgconfig extconfrb in main The libxml package isnt available RuntimeError To see why this extension failed to compile please check the mkmflog which can be found here CUserswilliamhiggsvagrantdgems extensionsx mingw ovirtenginesdk mkmflog extconf failed exit code Gem files will remain installed in CUserswilliamhiggsvagrantdgems gemsovirtenginesdk for inspection Results logged to CUserswilliamhiggsvagrantdgems extensionsx mingw ovirtenginesdk gemmakeout i have an edge case where the password for an ami is the instance id of that deployed machine is there a way to ready the instance id into a variable when the Vagrantfile is provisioning a host This wouldnt use a provision script as the username and password is required before a provisioning script can be run DESCRIPTION Default profile set with either AWSPROFILE or AWSDEFAULTPROFILE seems ignored and instead plugin parses INI file manually AWS SDK has built in mechanism to parse INI given the environment variable Credentials HOMEawscredentials ini dev awsaccesskeyid REDACTED awssecretaccesskey REDACTED prod awsaccesskeyid REDACTED awssecretaccesskey REDACTED ninjapants awsaccesskeyid REDACTED awssecretaccesskey REDACTED Vagrantfile ruby Vagrantconfigure do config configvmbox dummy configvmprovider aws do aws override awskeypairname vagrant awsami ami cd dfa e overridesshprivatekeypath ENV HOME sshvagrantawspem end end Steps bash export AWSDEFAULTPROFILEninjapants export AWSPROFILEninjapants vagrant up EXPECTED RESULTS Default profile used Should profile not found friendly message that is the case ACTUAL RESULTS Usersmejoaquivagrantdgems gemsvagrantaws libvagrantawsconfigrb in readawsfiles undefined method for nilNilClass NoMethodError from Usersmejoaquivagrantdgems gemsvagrantaws libvagrantawsconfigrb in getawsinfo from Usersmejoaquivagrantdgems gemsvagrantaws libvagrantawsconfigrb in finalize from optvagrantembeddedgems gemsvagrant pluginskernelv configvmrb in block in finalize from optvagrantembeddedgems gemsvagrant pluginskernelv configvmrb in each from optvagrantembeddedgems gemsvagrant pluginskernelv configvmrb in finalize from optvagrantembeddedgems gemsvagrant libvagrantconfigv rootrb in block in finalize from optvagrantembeddedgems gemsvagrant libvagrantconfigv rootrb in each from optvagrantembeddedgems gemsvagrant libvagrantconfigv rootrb in finalize from optvagrantembeddedgems gemsvagrant libvagrantconfigv loaderrb in finalize from optvagrantembeddedgems gemsvagrant libvagrantconfigloaderrb in load from optvagrantembeddedgems gemsvagrant libvagrantvagrantfilerb in initialize from optvagrantembeddedgems gemsvagrant libvagrantenvironmentrb in new from optvagrantembeddedgems gemsvagrant libvagrantenvironmentrb in vagrantfile from optvagrantembeddedgems gemsvagrant libvagrantenvironmentrb in initialize from optvagrantembeddedgems gemsvagrant binvagrant in new from optvagrantembeddedgems gemsvagrant binvagrant in main WORKAROUND Can manually add awsawsprofile ENV AWSPROFILE but really should just let AWS SDK do the work and not get in the way vagrantdgems gemsfogaws libfogawsrb in validateregion Unknown region eunorth ArgumentError Im quite sure that eunorth is a valid region What gives Hello colleagues Currently this plugin needs a SSH username and key pair pem file as seen below overridesshusername ec user overridesshprivatekeypath abcpem Is there anyway to set a password instead Thanks Javier Caceres