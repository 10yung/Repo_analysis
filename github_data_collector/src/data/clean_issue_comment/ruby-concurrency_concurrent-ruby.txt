Introduce a ThreadFactory that will set ThreadsetDaemon according to the autoterminate value This makes the need for the AtExit functionality uneeded since all threads can now be started daemonized Furthermore the gross hack of Configurationdisableatexithandlers is especially not needed since this allows the JVM to properly terminate even with minitest You can test this with ruby testconcurrentexecutortestcachedthreadpoolrb This fixes issues reported by others wherein the JVM fails to shutdown when used with Minitest fixes fixes I have a small reproduction example ruby def testtimertask task ConcurrentTimerTasknewexecutioninterval do puts Here end taskexecute end The threads started by TimerTask should be daemons however the JVM does not shutdown There seems to be some other concurrentruby thread which is not a daemon The problem is that at the end of the test the JVM remains active and does not shutdown The following is from jstack pool thread prio osprio tid x fe nid xb in Objectwait x a javalangThreadState TIMEDWAITING on object monitor at javalangObjectwaitNative Method at javalangObjectwaitObjectjava at orgjrubyRubyThreadSleepTaskrunRubyThreadjava locked x e a a comconcurrentrubyextSynchronizationLibraryJRubyLockableObject at orgjrubyRubyThreadexecuteBlockingTaskRubyThreadjava at orgjrubyRubyThreadwaittimeoutRubyThreadjava at comconcurrentrubyextSynchronizationLibraryJRubyLockableObjectnsWaitSynchronizationLibraryjava at comconcurrentrubyextSynchronizationLibraryJRubyLockableObjectINVOKERi nsWaitDBGcallSynchronizationLibraryJRubyLockableObjectINVOKERi nsWaitDBGgen at orgjrubyinternalruntimemethodsJavaMethodJavaMethodNcallJavaMethodjava at orgjrubyinternalruntimemethodsDynamicMethodcallDynamicMethodjava at orgjrubyruntimecallsiteCachingCallSitecallCachingCallSitejava at orgjrubyirinterpreterInterpreterEngineprocessCallInterpreterEnginejava at orgjrubyirinterpreterInterpreterEngineinterpretInterpreterEnginejava at orgjrubyirinterpreterInterpreterINTERPRETBLOCKInterpreterjava at orgjrubyruntimeInterpretedIRBlockBodyyieldDirectInterpretedIRBlockBodyjava at orgjrubyruntimeIRBlockBodyyieldSpecificIRBlockBodyjava at orgjrubyruntimeBlockyieldSpecificBlockjava at orgjrubyRubyKernelloopRubyKerneljava at orgjrubyRubyKernelINVOKERs loopDBGcallRubyKernelINVOKERs loopDBGgen at orgjrubyinternalruntimemethodsJavaMethodJavaMethodZeroBlockcallJavaMethodjava at orgjrubyruntimecallsiteCachingCallSitecallCachingCallSitejava at orgjrubyruntimecallsiteCachingCallSitecallIterCachingCallSitejava at orgjrubyirinstructionsCallBaseinterpretCallBasejava at orgjrubyirinterpreterInterpreterEngineprocessCallInterpreterEnginejava at orgjrubyirinterpreterInterpreterEngineinterpretInterpreterEnginejava at orgjrubyirinterpreterInterpreterEngineinterpretInterpreterEnginejava at orgjrubyinternalruntimemethodsInterpretedIRMethodINTERPRETMETHODInterpretedIRMethodjava at orgjrubyinternalruntimemethodsInterpretedIRMethodcallInterpretedIRMethodjava at orgjrubyruntimecallsiteCachingCallSitecallCachingCallSitejava at orgjrubyruntimecallsiteCachingCallSitecallIterCachingCallSitejava at orgjrubyirinterpreterInterpreterEngineprocessCallInterpreterEnginejava at orgjrubyirinterpreterInterpreterEngineinterpretInterpreterEnginejava at orgjrubyirinterpreterInterpreterINTERPRETBLOCKInterpreterjava at orgjrubyruntimeInterpretedIRBlockBodyyieldDirectInterpretedIRBlockBodyjava at orgjrubyruntimeBlockBodyyieldBlockBodyjava at orgjrubyruntimeBlockyieldBlockjava at comconcurrentrubyextSynchronizationLibraryJRubyLockableObjectrubySynchronizeSynchronizationLibraryjava locked x e a a comconcurrentrubyextSynchronizationLibraryJRubyLockableObject at comconcurrentrubyextSynchronizationLibraryJRubyLockableObjectINVOKERi rubySynchronizeDBGcallSynchronizationLibraryJRubyLockableObjectINVOKERi rubySynchronizeDBGgen Operating system mac Ruby implementation jruby concurrentruby version concurrentrubyext installed no concurrentrubyedge used no Ruby often idiomatically uses blocks to open a resource and close it again automatically For example ruby file Fileopenfile r do work with file fileclose vs Fileopenfile r do file do work with file end file closed automatically This teaches semaphores a similar technique ruby semaphore ConcurrentSemaphorenew semaphoreacquire do work semaphorerelease vs semaphoreacquire do do work end permit automatically released This PR updates the CI matrix to use latest JRuby JRuby release blog post Solves Changes b d e Petr Blaho seconds ago Generates docs for WrappingExecutor ecb c Petr Blaho seconds ago Adds WrappingExecutor class This can be used for wrapping args and task before passing it to Executor TODO x update docs implement soft shutdown x handle reexecution It currently uses TimerSet which runs in IO pool and creates unnecessary threads Is there an easy way to wait for an Actor to terminate Im aware that I can wait till all messages are processed ruby actor MyActorspawnname actor actor dostuff actoraskawaitwait or wait for the actor to respond which AFAIK is the same ruby actor MyActorspawnname actor actor dostuff actorasksomeresultvalue or actorasksomeresult but both are not what Im looking for I want to know how to block until an actor is terminated when the actor has asynchronous execution itself ruby class MyActor ConcurrentActorContext def onmessagemessage case message when start promises timesmap do n ConcurrentPromisesfuture do sleep n end end ConcurrentPromiseszippromisesthen do selftell terminate end ConcurrentActorBehaviourMESSAGEPROCESSED else pass end end end myactor MyActorspawnname actor myactortellstart How to do this as this is obviously not great loop do break if myactoraskterminated end Trying to update concurrentruby package in Fedora the test suite is quite unstable Here are the failing tests if I am lucky enough and there is no deadlock Failures ConcurrentScheduledTask observation notifies all observers on fulfillment FailureError expectobservervalueto eq expected got nil compared using specconcurrentscheduledtaskspecrb in block levels in moduleConcurrent ConcurrentScheduledTask observation notifies all observers on rejection FailureError expectobserverreasonto beaStandardError expected nil to be a kind of StandardError specconcurrentscheduledtaskspecrb in block levels in moduleConcurrent ConcurrentScheduledTaskcancel returns false if the task has already been performed FailureError expecttaskcancelto befalsey expected falsey value got true specconcurrentscheduledtaskspecrb in block levels in moduleConcurrent ConcurrentScheduledTaskcancel returns false if the task is already in progress FailureError expecttaskcancelto befalsey expected falsey value got true specconcurrentscheduledtaskspecrb in block levels in moduleConcurrent ConcurrentScheduledTask execution sets the state to processing when the task is running FailureError expectstateto eq processing expected processing got pending compared using Diff processing pending specconcurrentscheduledtaskspecrb in block levels in moduleConcurrent ConcurrentScheduledTask behavior it should behave like obligation value blocks the caller when pending and timeout is nil FailureError Conditionwait Lock timeout fatal No live threads left Deadlock threads sleeps current x d b fc ea main thread x d b fc ea Thread x d b ff c sleepforever rbthreadt x d b fc ea native x fb a int builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentsynchronizationmutexlockableobjectrb in sleep builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentsynchronizationmutexlockableobjectrb in wait builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentsynchronizationmutexlockableobjectrb in nswait builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentsynchronizationabstractlockableobjectrb in nswaituntil builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentatomiceventrb in block in wait builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentsynchronizationmutexlockableobjectrb in block in synchronize builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentsynchronizationmutexlockableobjectrb in synchronize builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentsynchronizationmutexlockableobjectrb in synchronize builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentatomiceventrb in wait builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentconcernobligationrb in wait builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentconcernobligationrb in value builddirbuildBUILDspecconcurrentconcernobligationsharedrb in block levels in top required usrsharegemsgemsrspeccore librspeccoreexamplerb in instanceexec usrsharegemsgemsrspeccore librspeccoreexamplerb in block in run usrsharegemsgemsrspeccore librspeccoreexamplerb in block in witharoundandsingletoncontexthooks usrsharegemsgemsrspeccore librspeccoreexamplerb in block in witharoundexamplehooks usrsharegemsgemsrspeccore librspeccorehooksrb in block in run usrsharegemsgemsrspeccore librspeccorehooksrb in runaroundexamplehooksfor usrsharegemsgemsrspeccore librspeccorehooksrb in run usrsharegemsgemsrspeccore librspeccoreexamplerb in witharoundexamplehooks usrsharegemsgemsrspeccore librspeccoreexamplerb in witharoundandsingletoncontexthooks usrsharegemsgemsrspeccore librspeccoreexamplerb in run usrsharegemsgemsrspeccore librspeccoreexamplegrouprb in block in runexamples usrsharegemsgemsrspeccore librspeccoreexamplegrouprb in map usrsharegemsgemsrspeccore librspeccoreexamplegrouprb in runexamples usrsharegemsgemsrspeccore librspeccoreexamplegrouprb in run usrsharegemsgemsrspeccore librspeccoreexamplegrouprb in block in run usrsharegemsgemsrspeccore librspeccoreexamplegrouprb in map usrsharegemsgemsrspeccore librspeccoreexamplegrouprb in run usrsharegemsgemsrspeccore librspeccoreexamplegrouprb in block in run usrsharegemsgemsrspeccore librspeccoreexamplegrouprb in map usrsharegemsgemsrspeccore librspeccoreexamplegrouprb in run usrsharegemsgemsrspeccore librspeccoreexamplegrouprb in block in run usrsharegemsgemsrspeccore librspeccoreexamplegrouprb in map usrsharegemsgemsrspeccore librspeccoreexamplegrouprb in run usrsharegemsgemsrspeccore librspeccorerunnerrb in block levels in runspecs usrsharegemsgemsrspeccore librspeccorerunnerrb in map usrsharegemsgemsrspeccore librspeccorerunnerrb in block levels in runspecs usrsharegemsgemsrspeccore librspeccoreconfigurationrb in withsuitehooks usrsharegemsgemsrspeccore librspeccorerunnerrb in block in runspecs usrsharegemsgemsrspeccore librspeccorereporterrb in report usrsharegemsgemsrspeccore librspeccorerunnerrb in runspecs usrsharegemsgemsrspeccore librspeccorerunnerrb in run usrsharegemsgemsrspeccore librspeccorerunnerrb in run usrsharegemsgemsrspeccore librspeccorerunnerrb in invoke usrsharegemsgemsrspeccore exerspec in top required usrbinrspec in load usrbinrspec in main Thread x d b c ef builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb sleepforever rbthreadt x d b d bc native x fb eb int builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in pop builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in block levels in createworker builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in loop builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in block levels in createworker builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in catch builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in block in createworker Thread x d b b a builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb sleepforever rbthreadt x d b f ffe native x fb ad int builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in pop builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in block levels in createworker builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in loop builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in block levels in createworker builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in catch builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in block in createworker Thread x d b bcb builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb sleepforever rbthreadt x d b bf native x fb aa int builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in pop builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in block levels in createworker builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in loop builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in block levels in createworker builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in catch builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in block in createworker Thread x d b e eb builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb sleepforever rbthreadt x d b dc c native x fb a int builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in pop builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in block levels in createworker builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in loop builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in block levels in createworker builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in catch builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in block in createworker Thread x d b e c builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb sleepforever rbthreadt x d b d d native x fb b b b int builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in pop builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in block levels in createworker builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in loop builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in block levels in createworker builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in catch builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in block in createworker Thread x d b e a builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb sleepforever rbthreadt x d b c d native x fb b int builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in pop builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in block levels in createworker builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in loop builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in block levels in createworker builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in catch builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in block in createworker Thread x d b e fb builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb sleepforever rbthreadt x d b e native x fb bb int builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in pop builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in block levels in createworker builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in loop builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in block levels in createworker builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in catch builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in block in createworker Thread x d b e ef builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb sleepforever rbthreadt x d b bfc native x fb int builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in pop builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in block levels in createworker builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in loop builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in block levels in createworker builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in catch builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in block in createworker Thread x d b ea builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb sleepforever rbthreadt x d b c native x fb e int builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in pop builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in block levels in createworker builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in loop builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in block levels in createworker builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in catch builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in block in createworker Thread x d b ec builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb sleepforever rbthreadt x fb c c native x fb c e int builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in pop builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in block levels in createworker builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in loop builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in block levels in createworker builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in catch builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in block in createworker Thread x d b ec builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb sleepforever rbthreadt x d b cfb native x fb c fff int builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in pop builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in block levels in createworker builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in loop builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in block levels in createworker builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in catch builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in block in createworker Thread x d b ed e builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb sleepforever rbthreadt x d b e a native x fb ae int builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in pop builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in block levels in createworker builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in loop builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in block levels in createworker builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in catch builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in block in createworker Thread x d b eda f builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb sleepforever rbthreadt x d b e native x fb c d int builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in pop builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in block levels in createworker builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in loop builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in block levels in createworker builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in catch builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in block in createworker Thread x d b ef d builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb sleepforever rbthreadt x d b fc df native x fb c c int builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in pop builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in block levels in createworker builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in loop builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in block levels in createworker builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in catch builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in block in createworker Thread x d b ef builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb sleepforever rbthreadt x d b e native x fb ba int builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in pop builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in block levels in createworker builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in loop builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in block levels in createworker builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in catch builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in block in createworker Thread x d b f builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb sleepforever rbthreadt x fb e fdd native x fb ac int builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in pop builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in block levels in createworker builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in loop builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in block levels in createworker builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in catch builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in block in createworker Thread x d b f a d builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb sleepforever rbthreadt x d b dd native x fb a int builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in pop builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in block levels in createworker builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in loop builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in block levels in createworker builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in catch builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in block in createworker Thread x d b f e builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb sleepforever rbthreadt x d b db e native x fb cb int builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in pop builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in block levels in createworker builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in loop builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in block levels in createworker builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in catch builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in block in createworker Thread x d b f d e builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb sleepforever rbthreadt x d b e native x fb ab int builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in pop builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in block levels in createworker builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in loop builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in block levels in createworker builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in catch builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in block in createworker Thread x d b f ce builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb sleepforever rbthreadt x fb c native x fb c int builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in pop builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in block levels in createworker builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in loop builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in block levels in createworker builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in catch builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in block in createworker Thread x d b f b builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb sleepforever rbthreadt x d b fd native x fb bc int builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in pop builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in block levels in createworker builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in loop builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in block levels in createworker builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in catch builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in block in createworker Thread x d b f e f builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb sleepforever rbthreadt x d b efbe native x fb c d int builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in pop builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in block levels in createworker builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in loop builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in block levels in createworker builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in catch builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in block in createworker Thread x d b f eb builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb sleepforever rbthreadt x d b c native x fb e int builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in pop builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in block levels in createworker builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in loop builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in block levels in createworker builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in catch builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in block in createworker Thread x d b f bb builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb sleepforever rbthreadt x d b df native x fb c d int builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in pop builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in block levels in createworker builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in loop builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in block levels in createworker builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in catch builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in block in createworker Thread x d b f a builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb sleepforever rbthreadt x d b f f native x fb d int builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in pop builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in block levels in createworker builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in loop builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in block levels in createworker builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in catch builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in block in createworker Thread x d b f builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb sleepforever rbthreadt x d b f native x fb c e int builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in pop builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in block levels in createworker builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in loop builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in block levels in createworker builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in catch builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in block in createworker Thread x d b f a builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb sleepforever rbthreadt x d b dfd d native x fb bcd d int builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in pop builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in block levels in createworker builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in loop builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in block levels in createworker builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in catch builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in block in createworker Thread x d b f builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb sleepforever rbthreadt x d b dac e native x fb a int builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in pop builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in block levels in createworker builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in loop builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in block levels in createworker builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in catch builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in block in createworker Thread x d b f aea builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb sleepforever rbthreadt x fb c native x fb ca int builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in pop builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in block levels in createworker builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in loop builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in block levels in createworker builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in catch builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in block in createworker Thread x d b faddc builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb sleepforever rbthreadt x d b f c native x fb ba int builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in pop builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in block levels in createworker builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in loop builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in block levels in createworker builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in catch builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in block in createworker Thread x d b e e builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb sleepforever rbthreadt x d b dc native x fb ba int builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in pop builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in block levels in createworker builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in loop builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in block levels in createworker builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in catch builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in block in createworker Thread x fb f d builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb sleepforever rbthreadt x d b cec native x fb int builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in pop builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in block levels in createworker builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in loop builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in block levels in createworker builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in catch builddirbuildBUILDconcurrentruby usrsharegemsgemsconcurrentruby libconcurrentexecutorrubythreadpoolexecutorrb in block in createworker Shared Example Group obligation called from specconcurrentscheduledtaskspecrb libconcurrentsynchronizationmutexlockableobjectrb in sleep libconcurrentsynchronizationmutexlockableobjectrb in wait libconcurrentsynchronizationmutexlockableobjectrb in nswait libconcurrentsynchronizationabstractlockableobjectrb in nswaituntil libconcurrentatomiceventrb in block in wait libconcurrentsynchronizationmutexlockableobjectrb in block in synchronize libconcurrentsynchronizationmutexlockableobjectrb in synchronize libconcurrentsynchronizationmutexlockableobjectrb in synchronize libconcurrentatomiceventrb in wait libconcurrentconcernobligationrb in wait libconcurrentconcernobligationrb in value builddirbuildBUILDspecconcurrentconcernobligationsharedrb in block levels in top required ConcurrentScheduledTask behavior it should behave like obligation value returns the value when fulfilled before timeout FailureError DEFAULTFAILURENOTIFIER lambda failure opts raise failure expected truthy value got nil Shared Example Group obligation called from specconcurrentscheduledtaskspecrb builddirbuildBUILDspecconcurrentconcernobligationsharedrb in block levels in top required ConcurrentScheduledTask behavior it should behave like observable first notification calls the update method on all observers without a specified func FailureError DEFAULTFAILURENOTIFIER lambda failure opts raise failure expected got compared using Shared Example Group observable called from specconcurrentscheduledtaskspecrb builddirbuildBUILDspecconcurrentconcernobservablesharedrb in block levels in top required ConcurrentScheduledTask behavior it should behave like observable first notification calls the appropriate function on all observers which specified a func FailureError DEFAULTFAILURENOTIFIER lambda failure opts raise failure expected got compared using Shared Example Group observable called from specconcurrentscheduledtaskspecrb builddirbuildBUILDspecconcurrentconcernobservablesharedrb in block levels in top required ConcurrentScheduledTask behavior it should behave like observable first notification calls the proc for all observers added as a block FailureError DEFAULTFAILURENOTIFIER lambda failure opts raise failure expected got compared using Shared Example Group observable called from specconcurrentscheduledtaskspecrb builddirbuildBUILDspecconcurrentconcernobservablesharedrb in block levels in top required ConcurrentScheduledTask class execute passes the block to the new ScheduledTask FailureError expectexpectedto betruthy expected truthy value got false specconcurrentscheduledtaskspecrb in block levels in moduleConcurrent ConcurrentTimerTask observation notifies all observers on error FailureError expectobserverexto beaArgumentError expected nil to be a kind of ArgumentError specconcurrenttimertaskspecrb in block levels in moduleConcurrent ConcurrentTimerTask observation notifies all observers on success FailureError expectobservervalueto eq expected got nil compared using specconcurrenttimertaskspecrb in block levels in moduleConcurrent ConcurrentTimerTask observation notifies all observers on timeout FailureError expectobserverexto beaConcurrentTimeoutError expected nil to be a kind of ConcurrentTimeoutError specconcurrenttimertaskspecrb in block levels in moduleConcurrent ConcurrentTimerTask execution waits for executioninterval seconds when the runnow option is not given FailureError expectlatchwait to betruthy expected truthy value got false specconcurrenttimertaskspecrb in block levels in moduleConcurrent ConcurrentTimerTask execution waits for executioninterval seconds when the runnow option is false FailureError expectlatchwait to betruthy expected truthy value got false specconcurrenttimertaskspecrb in block levels in moduleConcurrent ConcurrentTimerTask observable it should behave like observable first notification calls the proc for all observers added as a block FailureError DEFAULTFAILURENOTIFIER lambda failure opts raise failure expected got compared using Shared Example Group observable called from specconcurrenttimertaskspecrb builddirbuildBUILDspecconcurrentconcernobservablesharedrb in block levels in top required ConcurrentTimerTask observable it should behave like observable first notification calls the appropriate function on all observers which specified a func FailureError DEFAULTFAILURENOTIFIER lambda failure opts raise failure expected got compared using Shared Example Group observable called from specconcurrenttimertaskspecrb builddirbuildBUILDspecconcurrentconcernobservablesharedrb in block levels in top required ConcurrentTimerTask observable it should behave like observable first notification calls the update method on all observers without a specified func FailureError DEFAULTFAILURENOTIFIER lambda failure opts raise failure expected got compared using Shared Example Group observable called from specconcurrenttimertaskspecrb builddirbuildBUILDspecconcurrentconcernobservablesharedrb in block levels in top required Finished in minutes seconds files took seconds to load examples failures pending Failed examples rspec specconcurrentscheduledtaskspecrb ConcurrentScheduledTask observation notifies all observers on fulfillment rspec specconcurrentscheduledtaskspecrb ConcurrentScheduledTask observation notifies all observers on rejection rspec specconcurrentscheduledtaskspecrb ConcurrentScheduledTaskcancel returns false if the task has already been performed rspec specconcurrentscheduledtaskspecrb ConcurrentScheduledTaskcancel returns false if the task is already in progress rspec specconcurrentscheduledtaskspecrb ConcurrentScheduledTask execution sets the state to processing when the task is running rspec specconcurrentscheduledtaskspecrb ConcurrentScheduledTask behavior it should behave like obligation value blocks the caller when pending and timeout is nil rspec specconcurrentscheduledtaskspecrb ConcurrentScheduledTask behavior it should behave like obligation value returns the value when fulfilled before timeout rspec specconcurrentscheduledtaskspecrb ConcurrentScheduledTask behavior it should behave like observable first notification calls the update method on all observers without a specified func rspec specconcurrentscheduledtaskspecrb ConcurrentScheduledTask behavior it should behave like observable first notification calls the appropriate function on all observers which specified a func rspec specconcurrentscheduledtaskspecrb ConcurrentScheduledTask behavior it should behave like observable first notification calls the proc for all observers added as a block rspec specconcurrentscheduledtaskspecrb ConcurrentScheduledTask class execute passes the block to the new ScheduledTask rspec specconcurrenttimertaskspecrb ConcurrentTimerTask observation notifies all observers on error rspec specconcurrenttimertaskspecrb ConcurrentTimerTask observation notifies all observers on success rspec specconcurrenttimertaskspecrb ConcurrentTimerTask observation notifies all observers on timeout rspec specconcurrenttimertaskspecrb ConcurrentTimerTask execution waits for executioninterval seconds when the runnow option is not given rspec specconcurrenttimertaskspecrb ConcurrentTimerTask execution waits for executioninterval seconds when the runnow option is false rspec specconcurrenttimertaskspecrb ConcurrentTimerTask observable it should behave like observable first notification calls the proc for all observers added as a block rspec specconcurrenttimertaskspecrb ConcurrentTimerTask observable it should behave like observable first notification calls the appropriate function on all observers which specified a func rspec specconcurrenttimertaskspecrb ConcurrentTimerTask observable it should behave like observable first notification calls the update method on all observers without a specified func It seesm that the scheduledtaskspecrb and timertaskspecrb are unstable for some reason Thank you for submitting an issue Please fill following if applicable delete otherwise Operating system linux Ruby implementation Ruby concurrentruby version concurrentrubyext installed no concurrentrubyedge used no ThreadLocalVar can be expensive as it spins a thread in finalizers In some cases consumers may want to swap in a constant value implementations that is very cheap ConcurrentConstantThreadLocalVar is interface compatible with AbstractThreadLocalVar however does not allow any changing of value See more context in pitrch how do you feel about this Would you prefer this here or in Rails 