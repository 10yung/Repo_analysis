Describe the bug Ive upgraded my project to lvgl and observed that is happening again A text area in an invisible container causes periodic calls to the drivers flushcb due to the blinking cursor To Reproduce See in the discussion of Expected behavior Text areas in invisible containers dont cause screen updates Screenshots Not applicable Additional context I believe the problem is that cursorblinkanim calls lvinvarea nowadays It used to call lvobjinvalidate in older versions and that function checked if the object is visible before invalidating the area Good Day When I used lvbtnmgetactivebtntext in the code as in the example The esp would crash if you drag your finger across multiple buttons What happens is the output string starts to concatenate and go outside the array limits if specified and the esp trow a load prohibited error To fix this I had to use c static void eventhandlerlvobjt obj lveventt event ifevent LVEVENTVALUECHANGED uint t keypress lvbtnmgetactivebtnobj ifkeypress Remove any outide values due to screen drag causing value to jump to K printfs was pressed n lvbtnmgetbtntextobjkeypress hopes this helps anyone that may also have this problem Hi Im using micropython porting for ESP with ili XPT Describe the bug After few touches on a text area system crash To Reproduce Heres the code taken from sample on python import lvgl as lv from ili import ili disp ili miso mosi clk cs dc rst power backlight mhz factor height width rotili LANDSCAPE hybridTrue import xpt touch xpt xpt cs transpose Falsecaly calx caly calx def eventhandlerobj event printevent if event lvEVENTVALUECHANGED printValue s objgettext elif event lvEVENTLONGPRESSEDREPEAT For simple test Long press the Text are to add the text below ta addtext n nYou can scroll it if the text is long enough n ta lvtalvscract ta setsize ta alignNone lvALIGNCENTER ta setcursortypelvCURSORBLOCK ta settextA text in a Text Area Set an initial text ta seteventcbeventhandler Expected behavior Screenshots Following the console output along with crash report Run c EDITORCONTENT ILI initialization completed Enable backlight Double buffer Event received Event received Event received Event received Event received Event received Event received Event received Event received Event received Guru Meditation Error Core paniced LoadStoreError Exception was unhandled Core register dump PC x a PS x A x a A x ffccf A x bf A x fff c A x A x A x A x A x A x ffccee A x A x ffb d A x f d A x A x A x SAR x e EXCCAUSE x EXCVADDR x bf LBEG x c c LEND x c LCOUNT x ELF file SHA Backtrace x a x ffccf x x ffccf x c c x ffccfd x e x ffcd x f c x ffcd x f d x ffcd x bda x ffcd d x c x ffcd f x b x ffcd x e e x ffcd x df d x ffcd x df b x ffcd x dff x ffcd a x e d x ffcd x e ab x ffcd x f x ffcd x e x ffcd x f fb x ffcd b x e d x ffcd e Rebooting ets Jun rst xc SWCPURESETboot x b SPIFASTFLASHBOOT configsip SPIWP xee clkdrv x qdrv x ddrv x cs drv x hddrv x wpdrv x modeDIO clock div load x fff len load x fff clen load x len load x len entry x f W cpustart Chip revision is higher than the one configured in menuconfig Suggest to upgrade it MicroPython v gf c c cdirty on ESP module with ESP Type help for more information Describe the bug With dev lists dont get centered when you call lvobjalignlist LVALIGNCENTER To Reproduce c lvobjt list lvlistcreatelvscract NULL lvlistaddbtnlist LVSYMBOLFILE New lvlistaddbtnlist LVSYMBOLDIRECTORY Open lvobjalignlist NULL LVALIGNCENTER Expected behavior The list should have been centered properly Screenshots Screenshot from Hi As the kisvegabor suggested I opened this issue to talk about the CMakebased build for the library orand simulator repository Here is the list of questions CMakeLists for lvgl library CMakeLists for examples CMakeLists for simulator this achieves the possibility of using IDEs that support CMakeLists such as Qt Creator CLion and other Ive provided the sample of CMakebased bulild of Simulator in my repository So if these options are acceptable I can start from implementation of Simulator CMakebuild Hi As the kisvegabor suggested I opened this issue to talk about the features we want to add to the chart object here is the list until now and AFAIK Add track cursor to the chart object support different series types on one chart XY mode maybe rework the existing chart types Maybe some of them can be combined or dropped Assign the range to the series Lets start with the first one AFAIK embeddedt did something about it so maybe its not a bad idea to open a new branch for the chart and put those codes there what do you think The MicroPython simulator is online and ready to use but needs to be polished further Here is a list of improvements compiled by amirgon Monaco Editor Allow changing the lvgl screen size Try to improve FrameRate Host SnippetBin backend on LittlevGL server instead of Heroku Improve styling of the html Bootstrap change frame sizes by dragging etc Support loading fonts on runtime on lvgl This would allow sharing snippets with custom fonts For a long time Im considering to improve the style system of LittlevGL The issues I see the styles are to complex you need to create a style to change only one parameter eg label color there is no way to easily change something locally for only one object you need to create a whole new style its difficult to describe uncommon properties eg the line length on a line meter comes from a padding in lack of better property So the goals would be support local per object style change too still support style inheritance make the styles smaller The idea My idea is inspired by CSS Have a list of enums such as LVSTYLERADIUS LVSTYLEBORDERCOLOR In lvstylet create some kind of a lists where property names and their values are stored Create this list dynamically Ie add a new element only if its explicitly set When a property eg radius is queried check if its set in the object and if so return it If not check the parent and so on Object types can also have custom properties Eg LVLMETERSTYLELINELENGTH In lvobjt have lvstyleclasst where styles can be chained Eg c lvobjaddstyleclassobj btn Buttonlike appearnce lvobjaddstyleclassobj btnlg Overwrite only paddings lvobjaddstyleclassobj btnred Overvrite only colors Besides lvstyleclasst have a simple lvstylet in lvobjt where the objects local style modifications are storder Eg c lvobjsetstylepropertyobj LVSTYLERADIUS Overwrite radius from classes What I have so far I made an initial very minimal implementation and its working c static lvstylet style lvstyleinit style lvstylesetcolor style LVSTYLEBGCOLOR LVCOLORRED lvstylesetvalue style LVSTYLEBGRADIUS lvobjt obj lvobjcreatelvscract NULL lvobjsetposobj objstylep style Now there are setget functions for opa value int t color and pointer types Its ok but there could be lvstyleset style TYPE value macro which can call the corrent function based on TYPE However the macros cant be used from Micropython so I dont know what to do with this part amirgon Its a huge rework but I think its worth it because finally it will be much easier to use the styles and they will be smaller Please let me know what you think about it I hope I explained it in an understandable way slightlysmilingface The release policy of lvgl should be reconsidered to avoid immediate hotfix releases after a minormajor release My current idea Before minormajor release release an rc release candidate version directly into master Eg xyrc Allow week to get feedback and fix warnings forgotten things etc After week remove the rc tag and make a normal release Eg xy After the normal release change the version to xy dev to indicate that the next bugfix version is under development in master Push bugfixes to master Every month near to st make a bugfix release Eg xy After bug fix releases add dev tag to the version Eg xy dev TODO list before release create a demo with all object types and try it test groups keyboard encoder run stress test test with swapped bit color depth test with disabled animations andor groups test with O Os and O optimization test with the MicroPython binding be sure libraryjson is updated Itd be nice to set up an automatic test environment Travis for the tests above and see if at least it can be compiled and run successfully even without a display dirver Writing tests for the whole library is out of scope but we can test some core modules functionality eg lvmem lvll lvtask lvcolor Ideas are very welcome So please let me know what you think Describe the bug The border part of the cell type doesnt seem to act correctly The types LVBORDERFULL LVBORDERTOP and LVBORDERLEFT seems to work as expected but not the types LVBORDERBOTTOM LVBORDERRIGHT LVBORDERINTERNAL When I use these types no borders appear at all on my table To Reproduce I took the example from the documentation and changed the fields for borderpart In this example I used LVBORDERINTERNAL and we see that no border appears at all I am using a stm F IDISC and I have the same behavior with the simulator static lvstylet stylecell lvstylecopy stylecell lvstyleplain stylecell bodyborderwidth stylecell bodybordercolor LVCOLORBLACK stylecell bodyborderpart LVBORDERINTERNAL Crealte a header cell style static lvstylet stylecell lvstylecopy stylecell lvstyleplain stylecell bodyborderwidth stylecell bodybordercolor LVCOLORBLACK stylecell bodymaincolor LVCOLORSILVER stylecell bodygradcolor LVCOLORSILVER stylecell bodyborderpart LVBORDERINTERNAL lvobjt table lvtablecreatelvscract NULL lvtablesetstyletable LVTABLESTYLECELL stylecell lvtablesetstyletable LVTABLESTYLECELL stylecell lvtablesetstyletable LVTABLESTYLEBG lvstyletransptight lvtablesetcolcnttable lvtablesetrowcnttable lvobjaligntable NULL LVALIGNCENTER Make the cells of the first row center aligned lvtablesetcellaligntable LVLABELALIGNCENTER lvtablesetcellaligntable LVLABELALIGNCENTER Make the cells of the first row TYPE use stylecell lvtablesetcelltypetable lvtablesetcelltypetable Fill the first column lvtablesetcellvaluetable Name lvtablesetcellvaluetable Apple lvtablesetcellvaluetable Banana lvtablesetcellvaluetable Citron Fill the second column lvtablesetcellvaluetable Price lvtablesetcellvaluetable lvtablesetcellvaluetable lvtablesetcellvaluetable Expected behavior I was expecting to see internals borders of the table for LVBORDERINTERNAL bottom borders for LVBORDERBOTTOM etc Additional context I am working under ubuntu littlevGL V 