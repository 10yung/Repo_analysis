Updates comgithubgseitzsbtrelease from to Release NotesChangelog Ill automatically update this PR to resolve conflicts as long as you dont change it yourself If youd like to skip this version you can just close this PR If you have any feedback just mention me in the comments below Have a fantastic day writing Scala details summaryIgnore future updatessummary Add this to your scalastewardconf file to ignore future updates of this dependency updatesignore groupId comgithubgseitz artifactId sbtrelease details labels sbtpluginupdate semverpatch My use case is to decode Protobuf message present in kafka stream For this first I need to convert proto message to class file for which I have used following Scalapb plugin Throwing windows version error and plugin is crashing scalapbc compiler tool Class files generated are throwing error in the solution Any trait can be mixed with protoc Finally I have used protoc to encode proto message to class file Included it in jar and put in on databricks cluster Now when I am trying to decode this message using sparksqlscalapb Its throwing following error Unable to find encoder for type XProtobufsMessageBufferSMSBuffer An implicit Encoder XProtobufsMessageBufferSMSBuffer is needed to store XProtobufsMessageBufferSMSBuffer instances in a Dataset Primitive types Int String etc and Product types case classes are supported by importing sparkimplicits Support for serializing other types will be added in future releases Below code I am using for decoding import javaioByteArrayInputStream ByteArrayOutputStream ObjectInputStream ObjectOutputStream def serialisevalue Any Array Byte val stream ByteArrayOutputStream new ByteArrayOutputStream val oos new ObjectOutputStreamstream ooswriteObjectvalue oosclose streamtoByteArray eventhubsselectvaluemaprow SMSBufferparseFromserialiserow Not sure where I am making the mistake Description When serializing a protobuffer with a scalarvalued wrapper type to JSON the Printer utility loses the config parameter formattingLongAsNumber as it is statically set to false Which means that the only way to format longs as numbers is to write custom writer functions for wrapper types which already exists Minimal example testMessageproto syntax proto import googleprotobufwrappersproto message TestMessage googleprotobufInt Value someLong Testscala import scalapbjson sPrinter object Test def mainargs Array String Unit val printer new PrinterformattingLongAsNumber val msg TestMessagewithSomeLong printlnprintertoJsonmsg Expected Output JObjectListsomeLongJInt Actual Output JObjectListsomeLongJString Comments It seems to me JsonFormatscala primitiveWrapperWriter could use printerconfigformattingLongAsNumber directly instead of always using false I would gladly make a PR with the change and run the tests if theres no obvious reason why it should be like this Thank you guys for a very nice job Upon using ScalaPB plugin for Vertx plugin should be able to generate stubs that use Vertx Async Handlers in addition to the Response object For example Currently the stub returns scalaconcurrentFuture ResponseObject override def methodrequest scalaconcurrentFuture ResponseObject Example override def calcSumrequest rootcomexamplesumSumRequest scalaconcurrentFuture rootcomexamplesumSumResponse rootscalapbgrpcClientCallsasyncUnaryCallchannel METHODCALCSUM options request Expected override def methodrequestObject iovertxcoreFutureResponseObject Example in Java public void unaryCalliovertxexamplegrpcMessagesSimpleRequest request iovertxcoreFutureiovertxexamplegrpcMessagesSimpleResponse response asyncUnimplementedUnaryCallgetUnaryCallMethod PingPongServiceGrpctoObserverresponsecompleter Can we also have scala tutorial like scalapb Tried another SVG approach Scala descriptors are not generated for services and as a result it is impossible to inspect in Scala methods and options See 