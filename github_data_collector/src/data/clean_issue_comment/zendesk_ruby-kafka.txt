Hi rubykafka use which message format version tks If this is a bug report please fill out the following Version of Ruby Version of rubykafka v Please verify that the problem youre seeing hasnt been fixed by the current master of rubykafka Steps to reproduce Ruby Kafka client defined as followed ruby Kafkanew w kafka logger Railslogger sslcacert Filereadconfigccparootcapem sslclientcert Filereadconfigccpaprivacysorpem sslclientcertkey Filereadconfigccpaprivacysorpem Please write an example that reproduces the problem youre describing Im encoding a message via Avro am trying to do deliver this message in doing so when I try to deliver this message I get an error that the certificate couldnt be verified In addition to this Ive confirmed that the issue isnt with the certs because when I run openssl sclient host kf cfprd preprod barfoo port CAfile rootcapem state debug cert privacysorpem key privacysorpem I get Verify return code ok Expected outcome My expected outcome is certificate verification doesnt fail Actual outcome When I try to deliver a encoded avro message to my topic I got the following ruby New topics added to target list privacyprd datadictionaryv qa Fetching cluster metadata from kafkakf cfprd dev barfoo topicmetadata Opening connection to kf cfprd dev barfoo with client id rubykafka Closing socket to kf cfprd dev barfoo OpenSSLSSLSSLError SSLconnect returned errno stateerror certificate verify failed from UsershomeCodewebbundleruby gemsrubykafka libkafkasslsocketwithtimeoutrb in connectnonblock If this is a bug report please fill out the following Version of Ruby Version of Kafka Version of rubykafka Please verify that the problem youre seeing hasnt been fixed by the current master of rubykafka Steps to reproduce Im trying to connec to three different topics I can easily connect to two of them and listen with no issue but on the third one I get the following stack error TypeError no implicit conversion of nil into Integer from usrlocalbundlegemsrubykafka libkafkaprotocolencoderrb in pack from usrlocalbundlegemsrubykafka libkafkaprotocolencoderrb in writeint from usrlocalbundlegemsrubykafka libkafkaprotocolfetchrequestrb in block levels in encode from usrlocalbundlegemsrubykafka libkafkaprotocolencoderrb in each from usrlocalbundlegemsrubykafka libkafkaprotocolencoderrb in writearray from usrlocalbundlegemsrubykafka libkafkaprotocolfetchrequestrb in block in encode from usrlocalbundlegemsrubykafka libkafkaprotocolencoderrb in each from usrlocalbundlegemsrubykafka libkafkaprotocolencoderrb in writearray from usrlocalbundlegemsrubykafka libkafkaprotocolfetchrequestrb in encode from usrlocalbundlegemsrubykafka libkafkaprotocolrequestmessagerb in encode from usrlocalbundlegemsrubykafka libkafkaprotocolencoderrb in encodewith from usrlocalbundlegemsrubykafka libkafkaconnectionrb in writerequest from usrlocalbundlegemsrubykafka libkafkaconnectionrb in block in sendrequest from usrlocalbundlegemsactivesupport libactivesupportnotificationsrb in instrument from usrlocalbundlegemsrubykafka libkafkainstrumenterrb in instrument from usrlocalbundlegemsrubykafka libkafkaconnectionrb in sendrequest from usrlocalbundlegemsrubykafka libkafkabrokerrb in sendrequest from usrlocalbundlegemsrubykafka libkafkabrokerrb in fetchmessages from usrlocalbundlegemsrubykafka libkafkafetchoperationrb in block in execute from usrlocalbundlegemsrubykafka libkafkafetchoperationrb in each from usrlocalbundlegemsrubykafka libkafkafetchoperationrb in flatmap from usrlocalbundlegemsrubykafka libkafkafetchoperationrb in execute from usrlocalbundlegemsrubykafka libkafkafetcherrb in fetchbatches from usrlocalbundlegemsrubykafka libkafkafetcherrb in step from usrlocalbundlegemsrubykafka libkafkafetcherrb in loop from usrlocalbundlegemsrubykafka libkafkafetcherrb in block in start And I cant quite figure out why is it happening has anyone had an similar issue Expected outcome I would start receiving the messages like with the other topics I use Actual outcome I got the error mentioned above We currently run kafka consumers in a jobs framework where the expectation is that jobs complete in a certain period of time eg s As it is right now the eachbatch or eachmessage block will block indefinitely until there are messages on the topic We understand that is generally desirable in the common case and that our usecase is slightly outside the norm but that is what it is dasch whats your preference here encumber the eachmessage and eachbatch methods with a timeout function described in which BTW weve been running as a fork for quite a long time successfully reopen and work to get that merged Thanks and we appreciate your time and effort into supporting rubykafka Kafka Java Client handle certain types of errors with retries For example This PR sync behavior for these scenarios I see the pause functionality has been implemented to pause processing messages for a partition But the use case I have is to pause the consumer loop for indefinite time and resume later This will pause processing of any message until notified to resume Is there a way to do this using rubykafka 