Hi overall this is just a maintenance pull request some dependencies updated modified the buildsbt to conform to the latest guidelines fixed here and there some warnings and so on I compiled this build with openjdk so a couple of classes were missing I used the similar apache Pair class as replacement scaleToHeight keeping width untouched scaleToWeight keeping height untouched Method to print all channels of an image print Alpha Red Green Blue value for png Images print Red Green Blue value for jpg Images Hi I need to use Scala in my project Could you please support that version Hello What is scrimage maintenance status I see last release about years ago but there is some useful optimizations in AwtImage on the master branch We use it in production and want a long and happy life for the library Can I help with something in scrimage development sksamuel Ive received following error It happens rarely This time it happened after times calling same method in minutes This method gets image bytes and rotates it if necessary then returns it Method body looks like this val img ImagearrayBytes val rotatedImage if imgratio imgrotateRight else img other operations flipping on image if necessary val thumbnailBytes rotatedImgbytes OkthumbnailBytesasimagejpeg Uncaught error from thread xxserverakkaactordefaultdispatcher no awt in javalibrarypath shutting down JVM since akkajvmexitonfatalerror is enabled for ActorSystem xxserver javalangUnsatisfiedLinkError no awt in javalibrarypath at javalangClassLoaderloadLibraryClassLoaderjava at javalangRuntimeloadLibrary Runtimejava at javalangSystemloadLibrarySystemjava at javaawtToolkit runToolkitjava at javaawtToolkit runToolkitjava at javasecurityAccessControllerdoPrivilegedNative Method at javaawtToolkitloadLibrariesToolkitjava at javaawtToolkitclinitToolkitjava at sunawtAppContext runAppContextjava at sunawtAppContext runAppContextjava at javasecurityAccessControllerdoPrivilegedNative Method at sunawtAppContextinitMainAppContextAppContextjava at sunawtAppContextaccess AppContextjava at sunawtAppContext runAppContextjava at sunawtAppContext runAppContextjava at javasecurityAccessControllerdoPrivilegedNative Method at sunawtAppContextgetAppContextAppContextjava at javaximageiospiIIORegistrygetDefaultInstanceIIORegistryjava at javaximageioImageIOclinitImageIOjava at comsksamuelscrimageImageinitImagescala at comsksamuelscrimageImageclinitImagescala at controllersxxAppControlleranonfunimgData AppControllerscala at scalaconcurrentFutureanonfunflatMap Futurescala at scalaconcurrentimplPromiseanonfuntransformWith Promisescala at scalaconcurrentimplCallbackRunnablerunPromisescala at akkadispatchBatchingExecutorAbstractBatchprocessBatchBatchingExecutorscala at akkadispatchBatchingExecutorBlockableBatchanonfunrun BatchingExecutorscala at scalaruntimejava JFunction mcVspapplyJFunction mcVspjava at scalaconcurrentBlockContextwithBlockContextBlockContextscala at akkadispatchBatchingExecutorBlockableBatchrunBatchingExecutorscala at akkadispatchTaskInvocationrunAbstractDispatcherscala at akkadispatchForkJoinExecutorConfiguratorAkkaForkJoinTaskexecForkJoinExecutorConfiguratorscala at akkadispatchforkjoinForkJoinTaskdoExecForkJoinTaskjava at akkadispatchforkjoinForkJoinPoolWorkQueuerunTaskForkJoinPooljava at akkadispatchforkjoinForkJoinPoolrunWorkerForkJoinPooljava at akkadispatchforkjoinForkJoinWorkerThreadrunForkJoinWorkerThreadjava Error was thrown on this line arrayByte is Array Byte type and contains JPEG image file bytes JPG file size is MB Line val img ImagearrayByte Maybe this is because of memory issue Same issue happened before and increased memory by adding following line to execution of jar file Dhttpport JXms G JXmx G Jserver JXXExitOnOutOfMemoryError At that time I was OutOfMemory error Now I dont see this error on system log but same application error no awt in javalibrarypath A Take an image B Modify its pixel colors RGBA values C Copy Image The resulting copied image C has pixel color values different than the original image B Copy image works fine when you do not tamper with the pixel colors or if the modifications are nominal scala scala comsksamuelscrimagenioImageReaderfromPathjavaniofilePathsgethomeyuriypitometsDownloadspogif comsksamuelscrimageImageParseException Unparsable image at comsksamuelscrimagenioImageReaderanonfunfromBytes ImageReaderscala at scalaOptiongetOrElseOptionscala at comsksamuelscrimagenioImageReaderfromBytesImageReaderscala at comsksamuelscrimagenioImageReaderfromStreamImageReaderscala at comsksamuelscrimagenioImageReaderanonfunfromPath ImageReaderscala at comsksamuelscrimageUsingusingUsingscala at comsksamuelscrimageUsingusingUsingscala at comsksamuelscrimagenioImageReaderusingImageReaderscala at comsksamuelscrimagenioImageReaderfromPathImageReaderscala elided po We saw this issue and also this fix but however we still notice that some images are not rotated properly This is such an image We try checking the value of the orientationTag and there are tag values List TagOrientation Left side bottom Rotate CW TagWhite Balance Fine Tune Value TagOrientation Left side bottom Rotate CW Because of TagWhite Balance Fine Tune Value the code was not able to detect the orientation properly From this image above it seems that it is not enough to determine that type is for rotations Any thoughts on this sksamuel Currently ImagemapInPlace is defined with a protected scrimage tag This does not allow with the current Filter trait the ability to mutate the image in place and create userdefined Filters It would be useful to expose this functionality to the user to allow for easy extension of filters Another possible way of providing this functionality would be to change the signature of Filterapply to def applyimage Image Image and the implementation of ImagemapInPlace to return this instead of Unit 