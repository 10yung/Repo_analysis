Allows users to avoid IPv or IPv connections to their intended IRC server In progress untested Ill confirm that this works tomorrow This resolves an issue with Cinch not correctly parsing AUTHENTICATE and potentially other types of messages See also b f c a b f bbb bc af Fixes As of commit b f c a b f bbb bc af cinch no longer responds to AUTHENTICATE messages during SASL PLAIN authentication The commit currently isnt present in any released versions Defman This lets users specify custom cafile ciphers list This adds sending an OPER request automatically if botconfigoper user botconfigoper pass are set in your config in on This adds an oper event which can be listened for This happens if the client recieves a which signifies that the client is now an operator listento oper method test This adds an operfail event which can be listened for This happens if the client recieves a which is an invalid password event listento operfail method test This adds a botisoper boolean When Opering on InspIRCd to an oline or operclass with attached snomasks ModeParser fails with a CinchModeParserTooManyParametersError exception Seems to be caused by the module not expecting usermodes to have parameters at all The issue could be fixed here blobv libcinchircrbL but i am almost completely unsure how to fix this without foobaring other networks Trace II Detected IRCd inspircd II Detected network irchighway homevhostrvmgemsruby gemscinch libcinchircrb in parsebotmodes struct CinchModeParserTooManyParametersError modess params lLAakKoOtGg CinchExceptionsInvalidModeString homevhostrvmgemsruby gemscinch libcinchircrb in onmode homevhostrvmgemsruby gemscinch libcinchircrb in parse homevhostrvmgemsruby gemscinch libcinchircrb in block levels in startreadingthread homevhostrvmgemsruby gemscinch libcinchhelpersrb in rescueexception homevhostrvmgemsruby gemscinch libcinchircrb in block in startreadingthread adding a configuration option for the bot proxy It looks like the regex on line of libcinchmessagerb is broken for twitch IRCv when emotes are used in the message Example message that breaks the regex badgesmoderator subscriber bits colorD F displaynameCyclopsDragonemotes ide db f be ff d mod roomid sentts subscriber tmisentts turbo userid usertypemod cyclopsdragoncyclopsdragoncyclopsdragontmitwitchtv PRIVMSG geoff hi gibeDu On Twitchs IRC the emotes tag will contain a colon which breaks the regex preventing the message from being parsed I have cinch bots running on multiple networks and channels I spawn a new thread for each bot I create per network Many of those channels are getting very many channel messages I have several onchannel handlers with regular expression on channel do m match match My last matchgroup would usually contain the rest of the message Quite often this last match group contains not only the remainder of the message but also another messag efollowing right afterwards without any linebreaks separating the two For me this looks like a race condition and it makes it quite difficult to create some kind of show case At least I can tell so far that I dont get any handler thread inflations which happen when my handlers were too slow At the moment cinch does not support reverse dcc sends It doesnt detect these messages and never fires the dccsend event This is due to the regex used message DCC SEND S S d d For reverse DCCs the port is set to and the filesize is followed by an additional parameter a token The first step towards supporting reverse DCCs would be to detect them by updating the regex