Hi I am having trouble with setting Android Studio so it exactly follows formatting applied by ktlint The style is set to official kotlin one img width altScreenshot at src Ive done everything as described in your readme file try to apply settings via applytoideaproject Option and also Option and I guess the problem could be probably solved by applying some settings into editorconfig file but I am not sure what property can cause it I had the same inconsistency with max line lenght property Adding maxlinelength did solved the issue Screenshots before formatting img width altScreenshot at src after formatting via Android Studio img width altScreenshot at src Any suggestions ktlint version See Source code kt val y val x y trimIndent Expected behavior ktlint experimental format is a noop after at most one invocation Actual behavior ktlint always adds additional space characters in front of y ie running ktlint n times will prepend n spaces to y If a code snippet contains a multiline type parameter list ktlint may produce contradictory errors with the experimental indentation rule Eg for this code snippet kotlin object TestCase inline fun T T T create t T t T t T do things ktlint produces this errors for each function parameter line t t t Unexpected indentation should be If the indentation on the function parameter lines is corrected like so kotlin object TestCase inline fun T T T create t T t T t T do things ktlint is still not satisfied now producing this error on each of those lines Unexpected indentation expected actual Is junitjunit really required as a runtime dependency of ktlint The list of dependencies is as follows compinterestktlint compinterestktlintktlintcore orgjetbrainskotlinkotlincompilerembeddable orgjetbrainskotlinkotlinstdlib orgjetbrainskotlinkotlinstdlibcommon orgjetbrainsannotations orgjetbrainskotlinkotlinscriptruntime orgjetbrainskotlinkotlinreflect orgjetbrainskotlinkotlinstdlib orgjetbrainskotlinkotlindaemonembeddable orgjetbrainsintellijdepstrove j orgjetbrainskotlinkotlinstdlib orgec jcoreec jcore compinterestktlintktlintreportercheckstyle compinterestktlintktlintcore orgjetbrainskotlinkotlinstdlib compinterestktlintktlintreporterjson compinterestktlintktlintcore orgjetbrainskotlinkotlinstdlib compinterestktlintktlintreporterhtml compinterestktlintktlintcore orgjetbrainskotlinkotlinstdlib compinterestktlintktlintreporterplain compinterestktlintktlintcore orgjetbrainskotlinkotlinstdlib compinterestktlintktlintrulesetexperimental compinterestktlintktlintcore compinterestktlintktlinttest compinterestktlintktlintcore orgjetbrainskotlinkotlinstdlib orgassertjassertjcore junitjunit orghamcresthamcrestcore orgjetbrainskotlinkotlinstdlib compinterestktlintktlintrulesetstandard compinterestktlintktlintcore compinterestktlintktlinttest orgjetbrainskotlinkotlinstdlib compinterestktlintktlinttest orgjetbrainskotlinkotlinstdlib orgjetbrainskotlinkotlincompilerembeddable comgithubshyikoklobklob infopicoclipicocli delete git commit m my comment it will delete all my files leaving nothing to push Consider the following example kotlin class Foo JvmOverloads SuppressLintCheckResult constructor There alternative is basically this kotlin class Foo JvmOverloads SuppressLintCheckResult constructor Which Im not sure is better From experimentalannotation Ive got a kotlin project in which its common practice to create files which hold multiple classes In each of these cases we name the file with a common suffix A simple example of this using the suffix Things would be something like kotlin FooThingskt data class Foo data class Bar The problem is that we trip the filename rule when theres only one such class in one of these files Based on this comment I was hopeful I could add an editorconfig rule like so to disable the filename error editorconfig Thingskt disabledrules filename However this doesnt work Would it be possible that ktlint respect the formatteronoff It could check the content within the tags but it should not format it The fix for in hardcoded the orggradlekotlindslprovideDelegate import but provideDelegate operator functions arent limited to orggradlekotlindsl and could be present in any Kotlin library See The fix should be extended to any import of a provideDelegate operator function 