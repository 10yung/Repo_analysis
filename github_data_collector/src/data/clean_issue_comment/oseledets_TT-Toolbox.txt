Thanks so much for writing this code I am working on a possible application for my research but need C and so have been translating pieces of your code with proper attribution of course I ran across something odd at this line of maxvol It looks like there is an iteration variable and a while loop but the iteration variable never gets incremented For the simple tests Ive tried it looks like the loop is always broken anyway but I cant tell if that was the purpose If it is intentional a comment explaining why would be helpful If not I think a simple iter iter would avoid a possible infinite loop I tried to replicate some results from the Approximation of d x d matrices paper There were results given for the approximate inverse of a D Laplacian with the Newton method However with my code it already takes more than GB of RAM to calculate this Newton iteration for a D Laplacian with d What are the reasons for this Am I even supposed to minimize the absolute as opposed to the relative residual The code Approximate inversion of D Laplace operator for varying n d maxrank eps e for i Attqlaplacedd didi I tteye di I ttmatrixI X I err j while normerrF Z round IAXepsmaxrank X roundXZepsmaxrank err I AX j j end dispnnum str di Iters num strj Error Frob num strnormerrF e n end And the output n Iters Error Frob e n Iters Error Frob e n Iters Error Frob e n Iters Error Frob e Out of memory Type help memory for your options Error in tttensorround line crcr pos Truncate storage if required Error in ttmatrixround line ttttroundttttepsrmax Error in testinv line X roundXZepsmaxrank Consider the following example M N ttx tttensorreshaperandnN factorN e ttP ttmatrixrandMN e factorM factorN ttP ttmatrixrandMN e factorN mode lengths are the same res ttP ttx works ok res ttP ttx fails I am not an expert in QTT formats and dont know if it is an expected behavior If yes I suggest you add notes on it to the documentation or matrix multiplication header Thanks It seems that you forgot to run a command to generate documentation Please run m htmlmfilestt htmldirtt doc recursive on global on Line of ttdot m on branch TT contains the following dsizett It should be split into two lines like so dsizett That is the same branch linked in the webpage So Ivan believes that its a distinctive bug in MATLAB version so on the same matrix with the same inputs xamensolve Abtolmaxfullsize kickrank x bnswp residdamp rmax ttpy amensolve swp maxdx E maxres E maxrank amensolve swp maxdx E maxres E maxrank amensolve swp maxdx E maxres E maxrank amensolve swp maxdx E maxres E maxrank amensolve swp maxdx E maxres E maxrank amensolve swp maxdx E maxres E maxrank amensolve swp maxdx E maxres E maxrank amensolve swp maxdx E maxres E maxrank amensolve swp maxdx E maxres E maxrank amensolve swp maxdx E maxres E maxrank amensolve swp maxdx E maxres E maxrank amensolve swp maxdx E maxres E maxrank amensolve swp maxdx E maxres E maxrank amensolve swp maxdx E maxres E maxrank amensolve swp maxdx E maxres E maxrank TTToolbox amensolve sweep maxdx e maxres e maxrank amensolve sweep maxdx e maxres e maxrank amensolve sweep maxdx e maxres e maxrank amensolve sweep maxdx e maxres e maxrank amensolve sweep maxdx e maxres e maxrank amensolve sweep maxdx e maxres e maxrank amensolve sweep maxdx e maxres e maxrank amensolve sweep maxdx e maxres e maxrank amensolve sweep maxdx e maxres e maxrank amensolve sweep maxdx e maxres e maxrank amensolve sweep maxdx e maxres e maxrank amensolve sweep maxdx e maxres e maxrank amensolve sweep maxdx e maxres e maxrank amensolve sweep maxdx e maxres e maxrank amensolve sweep maxdx e maxres e maxrank Dear Alexey somehow I lost track of changes in tttensor slicing If you try the following code a ttrand ba you will see that b is a D tensor containing a instead of what is expected Is there any nonstandard syntax for slicing only one dimension It seems that the full indexation a works correctly Implement an approximate tensor by tensor product over some indices tentative syntax is matlab c tenmulabind ind e where ind ind are the indices over which the summation is done 