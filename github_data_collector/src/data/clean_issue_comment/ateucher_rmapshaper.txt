See hi ateucher Im not sure if this behaviour is intended but it caught me a bit off guard librarysf libraryrmapshaper nc streadsystemfilepackage sf shapencshp nc new name nc nc new name tmp mssimplifync namesnc new name geometry namestmp newname geometry Is it possible to leave the variable names as they were even if they have special characters Add an option to check validity of outputs use sfstisvalid and rgeosgIsValid as per rsbivands suggestion in Running rgeos reverse dependency checks now on a platform with PROJ Im seeing CRS mismatch problems in the tests testthatRoutfaillog The function mssimplify changes the ID slot of the polygons when working with objects of the spatialPolygons or spatialPolygonsDataFrame classes from the sp package See reprex librarysp libraryBelgiumMapsStatBel I use this package but any package containing a spatialPolygons object will do I think libraryrmapshaper dataBEADMINMUNTY Load the spatialPolygonsDataFrame object simplifiedPol rmapshapermssimplifyBEADMINMUNTY Result BEADMINMUNTY has polygon IDs starting etc simplifiedPol has polygon IDs etc In other words polygon ID information is lost It is unclear if all polygons are still in the same order I assume yes but its not explicitly mentioned so I cannot be sure for objects with over polygons This causes problems for example when using the SpatialPolygonsDataFrame function from the sp package That function takes a spatialPolygons object and a dataframe object and returns a spatialPolygonsDataFrame object where each row of the dataframe is matched to a polygon based on the rowname of the dataframe and the ID of the polygon Hence with ID information lost this does not work Would it be possible to update the mssimplify function so as to preserve ID information Thanks in advance Im interested in apply the underlying Visvalingam algorithm directly to paths do you know if its available in R independently of the mapshaper interface The approach for sf polygons could be taken to identify shared boundaries simplify those and then piece back together Ive tried this with smoothr and it seems to work Obviously Id have to write all the de and re compose code for sf but Ive found easier ways than the current ARC approach shown there so first examples could use lines Hi When executing the following code mssimplify causes R to abort after about minutes running libraryrgdal version library rgeos version libraryrmapshaper version shpmun readOGRC brmunicipios BRMUE GCSIR stringsAsFactorsFALSE encodingUTF shp mssimplifyshpmun the execution of this line causes R to abort The map file can be found here OBS gSimplify can handle this map thus I believe that map s format is ok OBS I successfully simplified other maps using mssimplify so my rmapshaper version is supposedly ok and well installed Please let me know if you need additional clarification Regards Fabio