The more difficult inverse problem addressed by e b f d e b a a df f a In that commit I check for and eliminate any results file IDs that appear in more than page But I fear the opposite can also happen there can be files that appear in no page This is basically a reopening of I have seen this myself now Its hard to make a clean reprex as the results are stochastic Summary I can do drivefind repeatedly and get a different number of files Most recently with my personal Google identity I saw and files Note to self In out of requests I saw higher numbers reported in Items so far so the filter for duplicates is actually eliminating replicated IDs The missing files are a subset of the files in one specific folder I will attempt to create a clean example of this using curl alone no R and if successful reportask upstream I am trying to deploy a shinyapp within a docker context and would like to use googledrive to store files but I am unable to connect to it in a non interactive manner I followed these instruction In summary what I did was authorize from my RStudio server manually and stored a cache token file While building my docker image I made sure I copied the token from the docker image directory I want to know if the method that I am using is the correct one or if there is something I can do to correct getting the error Error Can only use oob authentication in an interactive session when I try to autorize r optionshttroobdefaultTRUE options gargleoauthcache secrets gargleoauthemail TRUE googledrivedriveauth drivefindnmax Im going to do this within googlesheets for now because I dont want it to require dev googledrive But the next googledrive release should definitely include this method Im trying to use googledrive and googlesheets in Google Colaboratory but tips about driveauth found in or did not solve Here is the Colab Notebook Demo of use GoogleDrive with R in Google Colaboratory that Im testing The error is trying tokenfetch trying credentialsserviceaccount Error Argument txt must be a JSON string URL or file trying credentialsappdefault trying credentialsgce trying credentialsbyooauth Error inheritstoken Token is not TRUE trying credentialsuseroauth Gargle initialize attempt from googledrive adding userinfoemail scope loading token from the cache no matching token in the cache Error Can only use oob authentication in an interactive session Error Cant get Google credentials Are you running googledrive in a noninteractive session Consider drivedeauth to prevent the attempt to get credentials Call driveauth directly with all necessary specifics Traceback driveauthuseoob TRUE stopCant get Google credentials n Are you running googledrive in a noninteractive session Consider n drivedeauth to prevent the attempt to get credentials n Call driveauth directly with all necessary specifics n call FALSE Current UI of driverm is arguably a case of using to collect metadata Email received Hello G Suite Developer We are writing to let you know that we are making changes to Drive API Drive Activity API and Google Picker API and we identified your apps as being impacted On April we introduced a new Drive API resource collection called Drives to replace the Team Drives resource collection The Drives resource collection can help you create delete get list and update your shared drives It features all the same fields resources and available methods as the Team Drives resource collection Starting June all related Team Drives fields for Drive API Drive Activity API and Google Picker API will be deprecated Consider migrating and updating your apps to the Drives resource collection as soon as possible Please see the migration guide for further details Additionally starting June applications will no longer be able to optin to support shared drives This means that shared drive items including both shared drives and files within shared drives will be returned in all relevant requests if applicable for a given user If you have additional questions or need assistance please visit this page Sincerely The G Suite Team Key hyperlinks Migration guide I wish drivedownloadWHATEVER path preexistinglocalfolder would download WHATEVER into preexistinglocalfolderWHATEVER instead of Error Path exists and overwrite is FALSE Report progress when we use purrrmap to make one API call per file For example drivereveal can be very slow and it would be good to know what its doing Ive been using the following for a little while to quickly share small datasets via Google Drive Would love to submit a PR not sure about the best final form for this r upload a data frame to google drive make it shareable and copy the shareable link into the clipboard getshareablelinktodata functiondata path direct TRUE readrwritecsvdata path df googledrivedriveuploadpath path df googledrivedrivesharedf role reader type anyone if direct link paste dfid else link googledrivedrivelinkdf cliprwritecliplink fsfiledeletepath catlink invisiblelink When direct TRUE the link can be immediately used in readcsv When direct FALSE the link send users to the Google Drive preview of the data benmarwick has agreed to do this based on conversation in 