So I installed VirtualBox and Ubuntu LTS on it with the minimal settings Installed git and curl with aptget then I ran the eval curl sL command which then I had compilation errors about missing libatomic and then some headers were not found so I also had to aptget clang This was with swift Here is the documentation on how to create an action Add build instruction for swift branch in shareswiftenvbuild dev Here is my config os linux osx language generic sudo required dist trusty osximage xcode install eval curl sL script swift build And here is my failed job log The program swift is currently not installed To run swift please ask your administrator to install the package pythonswiftclient Linux Mint as just a very popular variant of Ubuntu can also be included just to get rid off bash vision pluto swiftenv install Usage lsbrelease options lsbrelease error no such option u homevision swiftenvlibexeclibexecswiftenvinstall line unary operator expected Usage lsbrelease options lsbrelease error no such option u homevision swiftenvlibexeclibexecswiftenvinstall line unary operator expected Usage lsbrelease options lsbrelease error no such option u homevision swiftenvlibexeclibexecswiftenvinstall line unary operator expected Downloading swift swift RELEASE content omitted At least on Linux Mint lsbrelease is returns LinuxMint And thank you for this great tool Currently theres SR open which prevents me from installing the amazing Mint package manager on my Ubuntu CI running with Swift I also tried and Snapshot without success Here the related issue on that on the Mint project In the discussion of SR Joel Saltzman explains a workaround in a comment which basically means I have to pass a different parameter when installing swiftcorelibslibdispatch during the Swift installation So I was thinking of just doing that manually by running the following additional commands after installing Swift via swiftenv install like so Workaround for issue SR sudo aptget install cmake ninjabuild clang systemtapsdtdev libbsddev linuxlibcdev cmake G Ninja DCMAKECCOMPILERclang DCMAKECXXCOMPILERclang DBUILDSHAREDLIBSNO pathtosource ninja ninja install But I actually have no idea what to specify to pathtosource or if this approach could even work after having already installed Swift Is there a way I can pass the parameter DBUILDSHAREDLIBSNO when installing Swift with swiftenv Thanks for any help Yes some of us still use it GET OFF MY LAWN shell echo setenv SWIFTENVROOT HOMEswiftenv tcshrc echo setenv PATH SWIFTENVROOTbinPATH tcshrc echo eval swiftenv init sed e sexport PATHsetenv PATH tcshrc Hi Im pretty new at Swift and installed swiftenv to start playing around with it I followed the instructions on the website to install however every time I try swift v I get the follow issue swift v Apple Swift version swift RELEASE Target x applemacosx LibraryDeveloperToolchainsswift RELEASExctoolchainusrbinlldb replenableobjcinterop sdk LibraryDeveloperCommandLineToolsSDKsMacOSX sdk colordiagnostics error failed to launch REPL process process launch failed unable to locate debugserver Im on Elementary OS an Ubuntubased Linux The Swift binaries compiled for Ubuntu are fully compatible with it But if using swiftenv I get two results depending on how I install Swift swiftenv install N It first downloads the repos swift swiftllvm swiftclang swiftlldb swiftcmark swiftllbuild swiftpackagemanager swiftcompilerrt swiftcorelibsxctest swiftcorelibsfoundation swiftcorelibsdispatch Then proceeds to compile Swift console Building Swift This may take a very long time And after that when I run swift to invoke the REPL I get this error console unknown error unable to load standard library for target x unknownlinuxgnu swift homefelixswiftenvtmpswiftenvbuild swiftincludeswiftASTModuleh swiftSourceFile swiftModuleDeclgetMainSourceFileswiftSourceFileKind const Assertion Filesempty No files added yet failed homefelixswiftenvversions usrbinswift x f a homefelixswiftenvversions usrbinswift x f ce libx linuxgnulibpthreadso x x f a ae libx linuxgnulibcso gsignal x x f a f libx linuxgnulibcso abort x a x f a f b a libx linuxgnulibcso x dbd x f a f bd libx linuxgnulibcso x dc x f a f c homefelixswiftenvversions usrbinswift x dd b homefelixswiftenvversions usrbinswift x dacb homefelixswiftenvversions usrbinswift x c c homefelixswiftenvversions usrbinswift x bf c homefelixswiftenvversions usrbinswift x libx linuxgnulibcso libcstartmain xf x f a eff homefelixswiftenvversions usrbinswift x c Stack dump Program arguments homefelixswiftenvversions usrbinswift frontend repl disableobjcinterop colordiagnostics modulename REPL fish swift terminated by signal SIGABRT Abort swiftenv install SWIFTBINARIESURL After this happened I decided to try again with a directed binary installation console swiftenv install Downloading tmpswiftenv RELEASEfelix Total Received Xferd Average Speed Time Time Time Current Dload Upload Total Spent Left Speed M M k k RELEASE has been installed felixfelixX LD swift Welcome to Swift version swift RELEASE Type help for assistance Which works no problem What can be done I think the best alternative is to build under nonubuntubased distros and figure out whats wrong with the build process that doesnt let it build or configure properly the Stdlib st they can actually use swiftenv And under ubuntubased distros having a way to tell what ubuntu are they based on Then proceeding to just install the binaries as if they were that particular ubuntu What I dont know Does building work properly under vanilla Ubuntu Maybe the stdlib gets properly built or configured iff thats the OS swiftenv is under Extras I tested this both under Swift and to make sure it wasnt my PR that made swiftenv fail