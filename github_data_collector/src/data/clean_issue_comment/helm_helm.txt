Use the same install order for hooks as for normal resources nonhooks for hooks with equal weight This makes resource handling more consistent and helps when there are hook consisting of several resources like eg a service account and a job using this service account The sort functions are changed from an in place search to an out of place sort to avoid inout parameters Closes Signedoffby Daniel Strobusch dastrobuusersnoreplygithubcom Draft implementation of the update recreate strategy from The feature is implemented and ready to play around with TODOs write and fix tests test that shell completion works correctly Check if the flag can be added in backwards compatible way interfacegoL It seems to me that Helm does not provide a way to create an actionConfiguration structure if the code is running from within the cluster Here is a code sample that I have tried building my own generic flags config err restInClusterConfig if err nil panicerr insecure false genericConfigFlag genericclioptionsConfigFlags Timeout stringptr Insecure insecure APIServer stringptrconfigHost CAFile stringptrconfigCAFile BearerToken stringptrconfigBearerToken ImpersonateGroup string Namespace stringptrnamespace actionConfig actionConfiguration RESTClientGetter genericConfigFlag KubeClient kubeNewgenericConfigFlag Log logInfof Unfortunately this result in a SIGSEGV error later when running actionNewListactionConfigRun Is it the right way to define an action config for Helm from within a Kubernetes cluster without altering the current library of course In the event of a CrashLoopBackOff scenario helm upgrade simply hangs and either times out or in my case at least a context deadline exceeded error will occur It would be more useful for in this scenario to have helm upgrade to fail loudly and to output error logs If you need help or think you have found a bug please help us with your issue by entering the following information otherwise you can delete this text Output of helm version Client versionVersionSemVerv GitCommiteecf f df f c aacd dbd ae c f e GitTreeStateclean Server versionVersionSemVerv GitCommita b cc ab a dbef a f bcc c c e GitTreeStateclean Output of kubectl version Client Version versionInfoMajor Minor GitVersionv GitCommitc b fddd a c c a aa f b GitTreeStateclean BuildDate T Z GoVersiongo Compilergc Platformdarwinamd Server Version versionInfoMajor Minor GitVersionv GitCommita b ee b db a e ce adc f GitTreeStateclean BuildDate T Z GoVersiongo Compilergc Platformlinuxamd Cloud ProviderPlatform AKS GKE Minikube etc NA locally I used the required function from within a with block If I didnt provide the value it threw an error as expected If I did provide the value it evaluated to true which gets included in the output The docs dont specify it should only be declared in the global scope and it was reasonable to assume it would work in a local scope because you may have values that are only required based on another condition stripped example yaml with Valuesfavorite required Value flavor is required Valuesflavor drink drink default tea quote flavor Valuesflavor end truedrink tea flavor green After this change make works on nixos If you need help or think you have found a bug please help us with your issue by entering the following information otherwise you can delete this text Hi I am trying to install a release using the atomic flag but it seems that it hangs forever helm install bar stablemariadb n default atomic Error release bar failed and has been uninstalled due to atomic being set timed out waiting for the condition The chart resources get actually installed in the cluster but the command eventually times out and the release gets deleted helm ls NAME NAMESPACE REVISION UPDATED STATUS CHART APP VERSION Is this a bug or am I missing something Output of helm version helm version versionBuildInfoVersionv GitCommit e ee ae d de c be e f GitTreeStateclean GoVersiongo Output of kubectl version kubectl version Client Version versionInfoMajor Minor GitVersionv GitCommitd cd baca b e d ed d GitTreeStateclean BuildDate T Z GoVersiongo Compilergc Platformlinuxamd Server Version versionInfoMajor Minor GitVersionv GitCommitb cbbae ec a fc d e d e GitTreeStateclean BuildDate T Z GoVersiongo Compilergc Platformlinuxamd Cloud ProviderPlatform AKS GKE Minikube etc kind Helm wait install does not wait for Pods to be ready in a statefulset when setting updateStrategy OnDelete Output of helm version versionBuildInfoVersionv GitCommit e ee ae d de c be e f GitTreeStateclean GoVersiongo Output of kubectl version Client Version versionInfoMajor Minor GitVersionv GitCommitc fe ef df d e c c e b GitTreeStateclean BuildDate T Z GoVersiongo Compilergc Platformdarwinamd Server Version versionInfoMajor Minor GitVersionv GitCommit be bdce a dd c fd d b e fe ba GitTreeStateclean BuildDate T Z GoVersiongo Compilergc Platformlinuxamd Cloud ProviderPlatform AKS GKE Minikube etc AKS fix If you need help or think you have found a bug please help us with your issue by entering the following information otherwise you can delete this text Output of helm version versionBuildInfoVersionv GitCommit e ee ae d de c be e f GitTreeStateclean GoVersiongo Output of kubectl version Client Version versionInfoMajor Minor GitVersionv GitCommit e b efe d df fa b ea a b GitTreeStateclean BuildDate T Z GoVersiongo Compilergc Platformdarwinamd Server Version versionInfoMajor Minor GitVersionv tke GitCommit e be fe b caf GitTreeStateclean BuildDate T Z GoVersiongo Compilergc Platformlinuxamd Cloud ProviderPlatform AKS GKE Minikube etc TKE How to reproduce helm debug upgrade i redis n default wait stableredis Logs historygo debug getting history for release redis Release redis does not exist Installing it now installgo debug Original chart version installgo debug CHART PATH UsershoozecnLibraryCacheshelmrepositoryredis tgz clientgo debug creating resources waitgo debug beginning wait for resources with timeout of m s waitgo debug StatefulSet is not ready defaultredismaster out of expected pods have been scheduled waitgo debug StatefulSet is not ready defaultredismaster out of expected pods have been scheduled waitgo debug StatefulSet is not ready defaultredismaster out of expected pods have been scheduled waitgo debug StatefulSet is not ready defaultredismaster out of expected pods have been scheduled waitgo debug StatefulSet is not ready defaultredismaster out of expected pods have been scheduled waitgo debug StatefulSet is not ready defaultredismaster out of expected pods have been scheduled waitgo debug StatefulSet is not ready defaultredismaster out of expected pods have been scheduled waitgo debug StatefulSet is not ready defaultredismaster out of expected pods have been scheduled waitgo debug StatefulSet is not ready defaultredismaster out of expected pods have been scheduled waitgo debug StatefulSet is not ready defaultredismaster out of expected pods have been scheduled waitgo debug StatefulSet is not ready defaultredismaster out of expected pods have been scheduled waitgo debug StatefulSet is not ready defaultredismaster out of expected pods have been scheduled waitgo debug StatefulSet is not ready defaultredismaster out of expected pods have been scheduled waitgo debug StatefulSet is not ready defaultredismaster out of expected pods have been scheduled actual statefulset status apiVersion appsv kind StatefulSet metadata creationTimestamp T Z generation labels app redis chart redis heritage Helm release redis name redismaster namespace default resourceVersion selfLink apisappsv namespacesdefaultstatefulsetsredismaster uid c d cf eaae be eeeb d b spec podManagementPolicy OrderedReady replicas revisionHistoryLimit selector matchLabels app redis release redis role master serviceName redisheadless template metadata annotations checksumconfigmap ff febab e d a fd d cce d d fd ee f cf effc f ddf checksumhealth f b e e fdcb b c c e c fd e cd dfb f ad bd checksumsecret ebb e f ab a e bda e ac eabc fa a bb ce b creationTimestamp null labels app redis chart redis release redis role master spec containers command binbash c if n REDISPASSWORDFILE then passwordauxcat REDISPASSWORDFILE export REDISPASSWORDpasswordaux fi if f optbitnamiredisetcmasterconf then cp optbitnamiredismountedetcmasterconf optbitnamiredisetcmasterconf fi if f optbitnamiredisetcredisconf then cp optbitnamiredismountedetcredisconf optbitnamiredisetcredisconf fi ARGSport REDISPORT ARGSrequirepass REDISPASSWORD ARGSmasterauth REDISPASSWORD ARGSinclude optbitnamiredisetcredisconf ARGSinclude optbitnamiredisetcmasterconf runsh ARGS env name REDISREPLICATIONMODE value master name REDISPASSWORD valueFrom secretKeyRef key redispassword name redis name REDISPORT value image dockeriobitnamiredis debian r imagePullPolicy IfNotPresent livenessProbe exec command sh c healthpinglivenesslocalsh failureThreshold initialDelaySeconds periodSeconds successThreshold timeoutSeconds name redis ports containerPort name redis protocol TCP readinessProbe exec command sh c healthpingreadinesslocalsh failureThreshold initialDelaySeconds periodSeconds successThreshold timeoutSeconds resources securityContext runAsUser terminationMessagePath devterminationlog terminationMessagePolicy File volumeMounts mountPath health name health mountPath data name redisdata mountPath optbitnamiredismountedetc name config mountPath optbitnamiredisetc name redistmpconf dnsPolicy ClusterFirst restartPolicy Always schedulerName defaultscheduler securityContext fsGroup serviceAccount default serviceAccountName default terminationGracePeriodSeconds volumes configMap defaultMode name redishealth name health configMap defaultMode name redis name config emptyDir name redistmpconf updateStrategy type RollingUpdate volumeClaimTemplates metadata creationTimestamp null labels app redis component master heritage Helm release redis name redisdata spec accessModes ReadWriteOnce resources requests storage Gi status phase Pending status collisionCount currentReplicas currentRevision redismaster bdc d observedGeneration readyReplicas replicas updateRevision redismaster bdc d probable cause The UpdatedReplicas is missing in status of statefulset bug is fixed after kubernetes version v alpha 