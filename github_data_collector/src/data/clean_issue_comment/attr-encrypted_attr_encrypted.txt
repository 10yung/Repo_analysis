When defining multiple attributes in a single attrencrypted definition all of the attributes should have methods such as attrchanged and attrwas defined Currently only the last attribute is popped from the array and methods for all other attributes are not created For example attrencrypted name email emailwas defined emailchanged defined namewas not defined namechanged not defined Refer Binary type for attribute was getting changed to Value type for Rails due to this so passing type to attribute api Please note After the above fix Unit tests were failing as the tables did not exist in database Fixed unit tests the tables need to be present in DB before the ActiveRecord classes are loaded as attrencrypted call internally uses columnshash to identify the attribute type I have a column encrypted by attrencrypted lets call this column data I also have a custom Marshaler that loadsdumps data in the column rb attrencrypted data marshal true marshaler CustomMarshal A problem arises if I try to immediately decrypt a column that I have set using attrencrypted It returns the value Ive set but this value hasnt gone through the CustomMarshal when I expect that it would rb abc is the record newvalue hello how are you doing CustomMarshaldump is called this works like I expect it to abcdata newvalue Fails abcdata has gone through the marshaler newvalue hasnt expectabcdatatonot eqnewvalue Fails forcing newvalue through the marshaler should make it equal abcdata marshalledvalue CustomMarshaldumpnewvalue expectabcdatato eqCustomMarshalloadmarshalledvalue Passes the above tests will pass if I reload the record abcreload expectabcdatatonot eqnewvalue expectabcdatato eqCustomMarshalloadmarshalledvalue The culprit could be this line but it looks like this behavior is intentional Are my expectations here wrong I feel like if I set a custom marshaler in the options it should always use the marshaler to load and dump the values Otherwise after I set the attribute on the record I have to explicitly reload it for the marshaller to actually work See I couldnt figure out how to stub definedEncoding for coverage sorry Seems like thats always included in standard Ruby I did some googling but couldnt find an answer Yesterday everything was ok we made a deploy we did not update anything of the gem no version and not the secretkey and we are getting this error can someone help me e a introduced marking attrencrypted attributes as virtual attributes to avoid an ActiveRecord deprecation warning in AR This had the side effect of exposing the decrypted versions of the attributes in ActiveRecordBaseattributes This is problematic since the method is leveraged for things like asjson and respondwith meaning a user could inadvertely expose sensitive info with an action like def show respondwith user end Closes When upgrading an application from Rails to I noticed that decrypted fields that used to be filtered out of our JSON responses are now included I believe this was caused by if I comment out this line the secrets stay secret My theory is that this is enabled because the field is now in attributes which is enumerated when ActiveRecord creates a serializablehash of a model i use you gem in my rails project however meet some problems first i generate user model by type rails g model user encryptedpasswordstring command then modify userrb configure by add attrencrypted user key last i start rails console and type userUsernew userpassword command and console throw such error NoMethodError undefined method encryptedpasswordiv appreciate for your help When rails user model have scope returning only some columns hirb started to return errors Userbrief User Load ms SELECT usersid usersemail usersfirstname userslastname usersoncommission usersusername usersupdatedat userscreatedat FROM users Hirb Error missing attribute encryptedotpsecret From what I understand attrencrypted is adding some sort of callbacks to attached model which couses hirberror after same investigation Ive added return unless selfrespondtoencryptedattributename to definemethodattribute do instancevariablegetattribute instancevariablesetattribute decryptattribute sendencryptedattributename end Which solved my problem but Im not sure if this is really the correct place for that