We have been experiencing an issue where the wrong locale is being used for error messages returned from the Devise FailureApp I believe its due to the way that warden throws and catches The recommended way of setting the locale for a rails controller action is to use an aroundaction callback eg ruby prependaroundaction withlocale def withlocaleaction I nwithlocalecurrentlocale action end When warden fails to authenticate it throws and calls a rack endpoint the failure app This means that the aroundaction is exited so the locale is no longer applied I dont see any way to tell warden to preserve the locale that was applied when the throw was called Should warden do this internally I noticed that CI build statuses are not being reported for this repository Did a little investigation and found that this is something thats been around for a bit Per those repositories on traviscicom which are managed by GitHub Apps no longer receive updates to the GitHub Commit Status API Instead Build Statuses will be posted to the GitHub Check Runs API Is this something thats potentially affecting this repo If so the issue referenced above also lays out the steps that can be taken to resolve this To fix this issue update your repositories using protected branches to require GitHub Checks as follows Go to the repository s Branch Settings page In the Branch Protection Settings section click Edit for a protected branch Scroll down to the second box Require status checks to pass before merging Select either Travis CI Pull Request or Travis CI Branch or both Note continuousintegrationtravisci is the Status API event which is deprecated Save your changes Im my rails app with devise when user is not logged in and try to access any app resources i receive Failed to login message that cames from warden libwardenstrategiesbaserb and I try to translate that message but i cant find a good way to do that without a string comparison Is there any right way to do that I have an RSpec test in a Rails app that calls loginas and looks something like this require railshelper RSpecdescribe weird behavior type request do letuser FactoryBotcreateuser it test a do loginas user get puts sessiontohash expectsession wardenuseruserkey tonot beblank end it test b do get puts sessiontohash expectsession wardenuseruserkey to beblank end end It passes bundle exec rspec specrequestssettingspasswordspecrb order defined weird behavior sessionid f ce e a f add fc d wardenuseruserkey a cGbUk KvDfmT tv psQW test a test b Finished in seconds files took seconds to load examples failures Accidentally I added a second loginas in test A and didnt notice in real life my test is more complicated so it was easy to miss require railshelper RSpecdescribe weird behavior type request do letuser FactoryBotcreateuser it test a do loginas user get loginas user problematic call puts sessiontohash expectsession wardenuseruserkey tonot beblank end it test b do get puts sessiontohash expectsession wardenuseruserkey to beblank end end This resulted in flaky tests that would fail or pass depending on the order in which RSpec chose to run them it works if B runs before A After hours of debugging I realized the problem is that the second loginas call in test A is leaking to test B Looking at the output you can see that the Warden user key in the session printed from test B is the same as the one printed from test A bundle exec rspec specrequestssettingspasswordspecrb order defined weird behavior sessionid df b db f dc f wardenuseruserkey a zNWHx qhfFzuO c MHpqO test a sessionid eb aa c dd fc dc ccaefd wardenuseruserkey a zNWHx qhfFzuO c MHpqO test b FAILED Failures weird behavior test b FailureError expectsession wardenuseruserkey to beblank expected a zNWHx qhfFzuO c MHpqO blank to return true got false specrequestssettingspasswordspecrb in block levels in top required Finished in seconds files took seconds to load examples failure Failed examples rspec specrequestssettingspasswordspecrb weird behavior test b This is very surprising and breaks test isolation in an unexpected way Can we make the queue of pending loginascalls automatically disappear at the end of each spec Not sure if this is even feasible In my RSpec suite I start out like this loginasadmin scope admin visit newadminuserpath fillin various fields on a form clickbuttonCreate User All of which works fine But when I then call logout either with no arguments or with admin and then visit any page of the site and insert a debugger in the controller I can call wardenauthenticatescope user and I get back an object along these lines User x fd d id email adminfpcom etc Im using Warden with Devise if relevant RspecRails and Rails Advice appreciated Thanks Sasha It appears that my env warden user is lost if my app receives a post request This is the test methods I am using get amiloggedin do puts get user puts env warden userinspect puts env HTTPCOOKIE env warden authenticate You are logged in end post amiloggedin do puts post user puts env warden userinspect puts env HTTPCOOKIE env warden authenticate Logged in after post request end The HTTPCOOKIE is the same for both requests but for some reason the warden user is lost when I send a post request It is lost for that request and further all requests including get requests This is my a strategy WardenStrategiesaddpassword do def valid params user params user email params user password end def authenticate user Userfirstemail params user email if usernil throwwarden message The email you entered does not exist elsif userauthenticateparams user password successuser else throwwarden message The email and password combination end end end This is my user model DataMappersetupdefault sqliteDirpwddbdbsqlite class User include DataMapperResource property id Serial key true property username String length property password BCryptHash required true length property password BCryptHash required true attraccessor passwordconfirmation validatesconfirmationof password confirm passwordconfirmation validateslengthof passwordconfirmation min property email String required true unique true format emailaddress messages presence We need your email address isunique We already have that email format Doesnt look like an email address to me def authenticateattemptedpassword The BCrypt class which selfpassword is an instance of has defined to compare a test plain text string to the encrypted string and converts attemptedpassword to a BCrypt for the comparison But dont take my word for it check out the source if selfpassword attemptedpassword true else false end end end Tell DataMapper the models are done being defined DataMapperfinalize Update the database to match the properties of User DataMapperautoupgrade Create a test User if Usercount user Usercreateusername admin userpassword admin usersave end Is there something wrong with my strategy 