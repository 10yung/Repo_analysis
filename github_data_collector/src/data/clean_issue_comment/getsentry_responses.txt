Fix In case a BaseException or a subclass is raised in the getresponse method of a match object eg in a callback the call accounting isnt updated for that call This then leads to test failures due to Not all requests have been executed The reason is that only Exceptions are expected I noticed this in the context of gevent and its Timeout feature which raises an exception inherited from BaseException self RequestsCookieJar response requestscookiesMockResponse object at x f f e f request requestscookiesMockRequest object at x f f e e def makecookiesself response request Return sequence of Cookie objects extracted from response object get cookieattributes for RFC and Netscape protocols headers responseinfo rfc hdrs headersgetallSetCookie E AttributeError HTTPHeaderDict object has no attribute getall Feature request to add a multipartformdata contenttype I have this piece of request rs requestsSession rp rsposturl data key value key value I am tracking to mock this with responsesadd responsesPOST body key value key value status contenttypeapplicationxwwwformurlencoded matchquerystringTrue But I keep getting E requestsexceptionsConnectionError Connection refused by Responses I am using version of responses on python I am aware that the body only accepts str or BufferedReader so Ive tried manually building a url form encoded body bodykey value key value But I cant still seem to get it to work Am I missing something I an async test function is used pytest no longer knows how to await the function I suspect the responseactive wrapper is assuming this is a normal function How can we get around this python import responses import requests responsesactivate async def testsimple responsesaddresponsesGET jsonerror not found status resp requestsget assert respjson error not found assert lenresponsescalls assert responsescalls requesturl assert responsescalls responsetext error not found Resulting error testinitpytestsimple homervangorkDocumentsgithomeassistantvenvlibpython sitepackagespytestpythonpy RuntimeWarning coroutine testsimple was never awaited testfunctiontestargs When using a pytest fixture like this py pytestfixture def mockedresponses with responsesRequestsMock as rsps yield rsps In my tests I have to import responses to add mocks py import responses def testservermockedresponses mockedresponsesaddresponsesGET json Instead I believe it would be more convenient to have a shortcut for each verb py def testservermockedresponses mockedresponsesget json Note this is the API offered by aioresponses The contribution is trivial and I would be happy to do it But first what do you think Currently responses does not capture requests coming from requestsfutures library based on concurrentfutures Similar to as discussed in when using the params parameter in requests I need to set matchquerystringFalse to ignore the query string responsesadd methodresponsesGET url jsonresponse response status matchquerystringFalse req requestsget paramshello world This returns a list of calls where I can get the requested URL printrequestscalls requesturl However theres no way to see what the original params passed in the original request It would be nice to be able to also do something like the following so that I can very what the parameters are that were passed in the request printrequestscalls requestparams hello world Adds and passes kwargs through to the underlying CallbackResponse object Closes Doing the same as but includes a test 