This PR contains the following updates Package Type Update Change rollupplugincopy devDependencies patch Release Notes details summaryvladshcherbinrollupplugincopysummary v Compare Source Update typescript types details Renovate configuration date Schedule At any time no schedule defined verticaltrafficlight Automerge Disabled by config Please merge this manually once you are satisfied recycle Rebasing Whenever PR becomes conflicted or if you modify the PR title to begin with rebase nobell Ignore Close this PR and you wont be reminded about this update again rebasecheck If you want to rebaseretry this PR check this box This PR has been generated by WhiteSource Renovate View repository job log here Enables enforcement user gesture constraints in use cases like ampscript Context Following up on I had legitimate use cases for the following unsupported selectors in a recent PR class class and selector selector workaround class datavalue and class data value data value workaround I also initially tried to use class element but changes to code removed the need for it None of these are unworkaroundable of course This PR contains the following updates Package Type Update Change jsdom devDependencies major Release Notes details summaryjsdomjsdomsummary v Compare Source For this release wed like to welcome pmdartus to the core team Among other work hes driven the heroic effort of constructor prototype and reform in jsdom and its dependencies over the last few months to allow us to move away from shared constructors and prototypes and set the groundwork for custom elements support coming soon Breaking changes Node v is now the minimum supported version The domrunVMScript API has been replaced with the more general domgetInternalVMContext API Each jsdom Window now creates new instances of all the web platform globals That is our old shared constructor and prototypes caveat is no longer in play Each jsdom Window now exposes all JavaScriptspecdefined globals uniformly When runScripts is disabled it exposes them as aliases of the ones from the outer Nodejs environment Whereas when runScripts is enabled it exposes fresh copies of each global from the new scripting environment Previously a few typed array classes would always be aliased and with runScripts disabled the other classes would not be exposed at all Other changes Added the AbstractRange Range StaticRange Selection and windowgetSelection APIs Added working constructors for Comment Text and DocumentFragment Added valueAsDate valueAsNumber stepUp and stepDown to input elements kraynel Added windoworigin Removed documentorigin Fixed template to work correctly inside XML documents Fixed some bugs which would cause jsdom to choose the wrong character encoding because it was failing to detect meta charset or meta httpequivcharset elements Fixed inputtype to default to text connormeredith Fixed incorrect validation errors for input with fractional values for their step attribute kontomondo Fixed incorrect validation errors on readonly input elements Fixed input typeemail multiple pattern validation Fixed fileReaderreadAsDataURL to always base encode the result ytetsuro Fixed inserting img elements into documents without a browsing context to no longer crash when the canvas package is installed Fixed a memory leak when using windowsetTimeout or windowsetInterval Improved the performance of getComputedStyle eps lon details Renovate configuration date Schedule At any time no schedule defined verticaltrafficlight Automerge Disabled by config Please merge this manually once you are satisfied recycle Rebasing Whenever PR becomes conflicted or if you modify the PR title to begin with rebase nobell Ignore Close this PR and you wont be reminded about this update again rebasecheck If you want to rebaseretry this PR check this box This PR has been generated by WhiteSource Renovate View repository job log here How to do element full screen like on chrome elemwebkitRequestFullscreen demo Setting checked to true or false should update the element this is not happening in workerdom edit turns out it isnt reflected in either direction inspecting the checked val wont tell you if the DOM element is checked or not classListtoggle should throw an error when you include a space token you pass to it ie js elclassListtoggleone two throws workerdom accepts the value it also treats it as one token so given html div classone if you try js documentquertySelectordivclassListtoggleone two you get html div classone one two Hi I am trying to listen to events from my iframe but it just doesnt work Even though addEventListener is supported when I try to listen for message events I dont get the event from my iframe I am not sure if its because it is running inside a worker and it has its own virtual DOM but I dont receive the message sent by my iframe windowaddEventListenermessage functione consolelogcatching event eorigin logs catching event undefined false The whole code from what I am trying to achieve is this ampscript scriptnaviimpressions height rem width ampad height rem datamultisizefluid typedoubleclick dataslotmyadunit ampad ampscript script typetextplain targetampscript idnaviimpressions windowaddEventListenermessage functione consolelogcatching event eorigin false script I have an ampad that generates the iframe of my ad from google ad manager From the creative I sent a postMessage event however the same code works if I run in the parent document Go to Wait for seconds Rightclick the link and click on open in new tab Tested in Chrome According to ElementscrollTop is not yet supported Would be great to add support for that this way we could do things like windowaddEventListenerscroll e const parts documentquerySelectorglobalFooter if windowinnerHeight documentdocumentElementscrollTop partsstyledisplay block else partsstyledisplay none 