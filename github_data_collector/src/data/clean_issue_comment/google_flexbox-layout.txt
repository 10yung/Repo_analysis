Actually Im not sure that we should do it but I found a solution and describe it in the comment of FlexboxLayoutManager Also I checked that all test passed and write my own test for that solution x I have searched existing issues and confirmed this is not a duplicate Issues and steps to reproduce val itemDecoration FlexboxItemDecorationviewBindingrootcontext itemDecorationsetDrawableContextCompatgetDrawableviewBindingrootcontext Rdrawableverticaldivider itemDecorationsetOrientationFlexboxItemDecorationVERTICAL itaddItemDecorationitemDecoration Expected behavior Can I set the divider mode just as similar as the FlexboxLayout we can set like below layoutshowDividerVertical FlexboxLayoutSHOWDIVIDERMIDDLE FlexboxLayoutSHOWDIVIDEREND Version of the flexbox library Link to code val itemDecoration FlexboxItemDecorationviewBindingrootcontext itemDecorationsetDrawableContextCompatgetDrawableviewBindingrootcontext Rdrawableverticaldivider itemDecorationsetOrientationFlexboxItemDecorationVERTICAL itaddItemDecorationitemDecoration Issues and steps to reproduce When I used padding or dividerDrawable on FlexBoxLayout I used the flexBasisPercent property on the child view The width of its child views will not meet my expectations parentViewGroupSizepaddingdividerDrawableSizenumberOfShownDividerDrawable flexBasisPercent Its actual width calculation becomes the parent viewGroup size flexBasisPercent which caused me to set the flexBasisPercent of for each child view it will not display three per line but two or even one will wrap Expected behavior flexBasisPercent should consider the maximum displayable width of all child views when calculating not just the width of the parent view because it contains padding and dividerDrawable Version of the flexbox library Link to code comgoogleandroidflexboxFlexboxLayout androidlayoutwidth dp androidlayoutheightwrapcontent androidpadding dp appflexWrapwrap TextView androidlayoutwidthwrapcontent androidlayoutheightwrapcontent applayoutflexBasisPercent f TextView androidlayoutwidthwrapcontent androidlayoutheightwrapcontent applayoutflexBasisPercent f TextView androidlayoutwidthwrapcontent androidlayoutheightwrapcontent applayoutflexBasisPercent f comgoogleandroidflexboxFlexboxLayout or Measurement of childMainSize in the calculateFlexLines method in the FlexboxHelper file childMainSize MathroundmainSize flexItemgetFlexBasisPercent Issues and steps to reproduce Below you can see a screenshot of a FlexboxLayout which is clipping its children Screenshot The layout is defined as so xml comgoogleandroidflexboxFlexboxLayout androidlayoutwidthmatchparent androidlayoutheightwrapcontent androidpaddingVerticaldimenspacingsmall androidpaddingEnddimenspacingnormal appdividerDrawableVerticaldrawableverticalspaceddivider appdividerDrawableHorizontaldrawablehorizontalspaceddivider appflexWrapwrap appshowDividerVerticalmiddle appshowDividerHorizontalmiddle The dividers are implemented like so verticalspaceddividerxml xml layerlist xmlnsandroid item androiddrawableandroidattrlistDivider androidleft dp androidright dp layerlist horinzontalspaceddividerxml xml layerlist xmlnsandroid item androiddrawableandroidattrlistDivider androidtop dp androidbottom dp layerlist Expected behavior I expect the children to not be constrained horizontally and the title text of each item stays on line Each of the children has a width of wrapcontext so FlexboxLayout should be moving the item to the next line if there is not enough space If I remove the divider the items are wrapped as expect Version of the flexbox library x I have searched existing issues and confirmed this is not a duplicate Issues and steps to reproduce I dont really know what exact conditions cause this I have a few screens and it depends on items in the list andor device most probably it has something to deal with dimensions of items and screen combined Here is a video recording of how it behaves As you can see it disappears while scrolling up and then appears at the very top of the screen It reproduces on this screen every time at the same range One more important thing is that the screen should be scrolled to the very bottom otherwise it does not disappears But here is another video from the different device where it disappears right after user starts scrolling Expected behavior The scrollbar handle is visible during all the scrolling duration Version of the flexbox library and Link to code Layout xml androidxrecyclerviewwidgetRecyclerView androidididlist androidlayoutwidthmatchparent androidlayoutheightmatchparent androidpaddingStart dp androidpaddingEnd dp androidclipToPaddingfalse androidscrollbarsvertical androidscrollbarSize dp androidscrollbarStyleoutsideOverlay androidfadeScrollbarsfalse androidscrollbarAlwaysDrawVerticalTracktrue applayoutManagercomgoogleandroidflexboxFlexboxLayoutManager toolslistitemlayoutpersonalizationitem RecyclerView setup kotlin listapply setHasFixedSizefalse layoutManager FlexboxLayoutManageractivity adapter mAdapter setPaddingpaddingLeft paddingTop paddingRight dip Adapter and ViewHolders kotlin data class Item val data PersonalizationItem var isSelected Boolean class PersonalizationAdapter private val checkedChangeListener Item Unit private val title CharSequence null private val initiator PersonalizationActivityInitiator RecyclerViewAdapterRecyclerViewViewHolder Filterable companion object private const val TYPETITLE private const val TYPEITEM private const val TYPETITLESIMPLE private var mData ListItem null private val mFilter CustomFilter CustomFilterthis private val mFilteredList ArrayListItem override fun onCreateViewHolderparent ViewGroup viewType Int RecyclerViewViewHolder return when viewType TYPETITLE SecondaryPageAdapterTitleViewHolderparent title TYPETITLESIMPLE SimpleTitleViewHolderparent title TYPEITEM ItemViewHolderparent else throw Error override fun onBindViewHolderholder RecyclerViewViewHolder position Int when holder is ItemViewHolder val item if title null mFilteredList position else mFilteredList position holder as ItemViewHolderbindViewitem else override fun getItemCount Int if title null mFilteredListsize else mFilteredListsize override fun getItemViewTypeposition Int Int return if title null position if initiator PersonalizationActivityInitiatorONBOARDING TYPETITLE else TYPETITLESIMPLE else TYPEITEM fun swapDatadata ListItem mData data mFilteredListclear mFilteredListaddAlldata notifyDataSetChanged fun isEmpty Boolean mDataisEmpty true override fun getFilter Filter mFilter SuppressUNUSEDANONYMOUSPARAMETER inner class ItemViewHolderparent ViewGroup RecyclerViewViewHolderparentinflateRlayoutpersonalizationitem private val mCheck AppCompatCheckBox itemViewfindViewByIdRidcbFollow private var item Item null init mChecksetOnCheckedChangeListener compoundButton checked itemlet itisSelected itisSelected checkedChangeListenerinvokeit internal fun bindViewitem Item thisitem null mChecktext itemdatatitle mCheckisChecked itemisSelected thisitem item private inner class CustomFilter constructorprivate val mAdapter PersonalizationAdapter Filter override fun performFilteringconstraint CharSequence FilterResults mFilteredListclear val results FilterResults if constraintisEmpty mFilteredListaddAllmData emptyList else val filterPattern constrainttoStringtoLowerCasetrim it mDatafilterTomFilteredList itdatatitletoLowerCasecontainsfilterPattern resultsvalues mFilteredList resultscount mFilteredListsize return results override fun publishResultsconstraint CharSequence results FilterResults thismAdapternotifyDataSetChanged class SimpleTitleViewHolderparent ViewGroup title CharSequence RecyclerViewViewHolderparentinflateRlayoutonbordingtitleitem init itemView as TextViewapply SuppressDEPRECATION text HtmlfromHtmltitletoStringtoString textSizeDimen Rdimenpersonalizationlistheadertextsize textColorResource RcolormasterDarkGrey Item layout xml xml version encodingutf CheckBox xmlnsandroid xmlnstools androidididcbFollow androidlayoutwidthwrapcontent androidlayoutheightwrapcontent androidlayoutgravitycentervertical androidlayoutmarginTop dp androidlayoutmarginBottom dp androidlayoutmarginStart dp androidlayoutmarginEnd dp androidbackgrounddrawablepersonalizationitembg androidbuttondrawableiccheckmark androidclickabletrue androidellipsizeend androidfocusabletrue androidlines androidminHeight dp androidpaddingStart dp androidpaddingTop dp androidpaddingEnd dp androidpaddingBottom dp androidtextColorde androidtextSize sp toolscheckedtrue toolsignoreRtlSymmetry toolstextname Title layout xml xml version encodingutf TextView xmlnsandroid xmlnstools xmlnsapp androidtextSize sp androidtextStylenormal androidtextColorcolormasterBlack appfontFamilyfontcustomfontfamily androidtypefaceserif androidlayoutwidthmatchparent androidlayoutheightwrapcontent androidlayoutmarginStart dp androidlayoutmarginEnd dp androidlayoutmarginTop dp androidlayoutmarginBottom dp toolstextNesten der Du kan ogs tilpasse andre lokale samfunnsinteresser Sorry for such a noisy code I can not sare a repo so I extracted some snippets that should help If there is something missing please let me know in a comment x I have searched existing issues and confirmed this is not a duplicate Issues and steps to reproduce Not sure if this is possible I have a RecyclerView with a FlexboxLayoutManager each view in the RecyclerView is a CardView which has a FlexboxLayout which contains a set of TextViews The TextViews can extend past the bottom of the screen causing the FlexboxLayout to wrap to another column great expected behavior FlexboxLayerManager config flexboxLayoutManager FlexboxLayoutManagerbaseContext flexboxLayoutManagersetFlexDirectionFlexDirectionCOLUMN flexboxLayoutManagersetFlexWrapFlexWrapWRAP flexboxLayoutManagersetJustifyContentJustifyContentFLEXSTART When the layout wraps the two columns have the same height which can lead to lots of wasted space Im wondering if theres a setting or where I would look to be able to have the second column pin to the height of its content rather than matching the first column height img width altScreen Shot at PM src the lighter gray background is the parent CardView the darker gray backgrounds are LinearLayouts wrapping both Item with its Subitems those LinearLayouts are added to the CardViews FlexboxLayout Expected behavior hopeful behavior img width altScreen Shot at PM src It obviously looks tough because the CardView needs to be a rectangle but Im hoping to be able to trim down the empty whitespace so things can fit under it like so img width altScreen Shot at PM src Version of the flexbox library Link to code Issues and steps to reproduce Use FlexboxLayoutManager set FlewWrap to NOWRAP flexShrink to and add left padding to recycler view Screenshot Expected behavior No space on top Version of the flexbox library Link to code Hello I am trying to use flexboxlayout with RecyclerView to scroll list with dozens of elements icons with text It works mostly fine but elements would fill the whole available space on screen but I want to limit number of elements per row when scroll down or number of elements per column when scroll to the right I can achieve same thing with GridLayoutManager java final GridLayoutManager gridLayoutManager new GridLayoutManager getApplicationContext GridLayoutManagerHORIZONTAL false recyclerViewsetLayoutManagergridLayoutManager but grid layout manager does not allow me to align items by center Can I do this with FlexBoxLaout Is it possible to have all children in one row to have the same width When I use the same flexGrow value for all children they wont take up the same amount of space if their wrapped width is not the same For example two textviews side by side with a middle divider If one textview contains abc and the other abcdef then the divider isnt shown in the middle of the screen I dont know if there is a combination of attributes I can use to achieve this result The expected behavior would be to grow the children in a way that they end up with an equal width or at least grow the smallest children and leave the biggest ones as they are if theres not enough space