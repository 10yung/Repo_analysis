By adding jsPDFAutoTable into a method we can actually use it also in NodeJS Updates x README Usage x Tests x Examples jsPDF now has a separate distribution file for nodejs but jspdfautotable does not support that It adds the addon to the regular version causing docautoTable is not a function error jspdfautotable needs to load the correct distribution file and add the addon there when used under nodejs The node examples work with the regular version but not with the node version For some reason however my own tests cause ReferenceError Blob is not defined with the regular version Not sure what in my code causes jsPDF to use Blob but Blob is only available in browsers not in nodejs First Thank you for such a great plugin which made our life much easier Im facing a big problem when using the plugin with reallife data when theres even only one cell in a column with long text the other columns cells will break in the middle of words which makes it unreadable and taking double the vertical space when it should take space from the big column This makes it unusable without defining minCellWidth for columns or preventing it from wrapping altogether that could work for some cases but thats not the answer I have userdefined data in these rows which could be one word or more I want it to break into lines correctly only when needed So as an attempt to solve the problem I tried to figure out how HTML tables handle this What I found is that each column will have a minimum width that will not get smaller than the longest word in that column So I used the following hook code to set minWidth for each column to the longest word js docautoTable Prevent AutoTable from breaking lines in the middle of words by setting the minWidth to the longest word in the column WARNING this may cause the table to exceede the allowed width just like in HTML and give a cant fit page console error could be improved didParseCelldoc cell column if cell undefined return const hasCustomWidth typeof cellstylescellWidth number if hasCustomWidth cellraw null cellcolSpan return let text if cellraw instanceof Node text cellrawinnerText else if typeof cellraw object not implemented yet when a cell contains other cells colSpan return else text cellraw split cell string by spaces const words textsplit s calculate longest word width const maxWordUnitWidth wordsmaps MathfloordocgetStringUnitWidths reducea b Mathmaxa b const maxWordWidth maxWordUnitWidth cellstylesfontSize docinternalscaleFactor const minWidth cellpaddinghorizontal maxWordWidth update minWidth for cell column if minWidth cellminWidth cellminWidth minWidth if cellminWidth cellwrappedWidth cellwrappedWidth cellminWidth if cellminWidth columnminWidth columnminWidth cellminWidth if columnminWidth columnwrappedWidth columnwrappedWidth columnminWidth codepen And this was the result As you can see It fixed the problem now the spacing makes more sense and the table actually look more like the HTML version I believe that this should be the default behavior I didnt do a pull request because it still needs improvements and a way to handle colSpan but Im in the middle of a project right now so Im leaving this here as a starting point and as a quick fix for anyone who could be facing the same problem Note side effect of this it may cause the table width to get outside of the defined boundaries if the total width of the longest words in each column is greater than the defined tableWidth This is actually how HTML tables behave But I fell like it shouldnt be that way with AutoTable Im not sure 