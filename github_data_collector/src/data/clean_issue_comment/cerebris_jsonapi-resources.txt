Require all Files in jsonapi and its subdirectories Dir Fileexpandpathjsonapirb dir reverseeach do f require f end Reduces file line by I stand to be corrected This issue is a choose one X Problembug report Feature request Request for support Note Please try to avoid submitting issues for support requests Use Gitter instead Checklist before submitting Ive searched for an existing issue Ive asked my question on Gitter and have not received a satisfactory answer Ive included a complete bug report template This step helps us and allows us to see the bug without trying to reproduce the problem from your description It helps you because you will frequently detect if its a problem specific to your project The feature Im asking for is compliant with the JSONAPI spec Description Travis builds are failing semi randomly now that were testing against Postgres Tests pass when rerun manually I suspect a database contention or cleaning issue but I havent reproduced it reliably yet This issue is a choose one Problembug report X Feature request Request for support Note Please try to avoid submitting issues for support requests Use Gitter instead Checklist before submitting X Ive searched for an existing issue Ive asked my question on Gitter and have not received a satisfactory answer Ive included a complete bug report template This step helps us and allows us to see the bug without trying to reproduce the problem from your description It helps you because you will frequently detect if its a problem specific to your project The feature Im asking for is compliant with the JSONAPI spec Features Include this library and its type definitions to sorbettyped This project does use a lot YARD annotations should be some what easy to convert into rbi signatures by using something like Sord This issue is a choose one X Problembug report Feature request Request for support Note Please try to avoid submitting issues for support requests Use Gitter instead Checklist before submitting X Ive searched for an existing issue Ive asked my question on Gitter and have not received a satisfactory answer X Ive included a complete bug report template This step helps us and allows us to see the bug without trying to reproduce the problem from your description It helps you because you will frequently detect if its a problem specific to your project X The feature Im asking for is compliant with the JSONAPI spec Description Bug reports After version the relationships have a circular reference with other records I this example Ive three resources car brand and country See bug report template ruby begin require bundlerinline require bundler rescue LoadError e STDERRputs Bundler version or later is required Please update your Bundler raise e end gemfiletrue ui ENV SILENT BundlerUISilentnew BundlerUIShellnew do source gitsourcegithub repo ruby gem rails gem sqlite gem puma gem bootsnap require false group development test do gem byebug platforms mri mingw x mingw end group development do gem listen gem spring gem springwatcherlisten end gem jsonapiresources gem jsonapiresources end prepare activerecord database require activerecord class NullLogger Logger def initializeargs end def addargs block end end ActiveRecordBaseestablishconnectionadapter sqlite database memory ActiveRecordBaselogger ENV SILENT NullLoggernew LoggernewSTDOUT ActiveRecordMigrationverbose ENV SILENT ActiveRecordSchemadefine do createtable brands force cascade do t tstring name tinteger countryid null false tdatetime createdat precision null false tdatetime updatedat precision null false tindex countryid name indexbrandsoncountryid end createtable cars force cascade do t tstring name tinteger brandid null false tdatetime createdat precision null false tdatetime updatedat precision null false tindex brandid name indexcarsonbrandid end createtable countries force cascade do t tstring name tdatetime createdat precision null false tdatetime updatedat precision null false end addforeignkey brands countries addforeignkey cars brands end create models class Car ApplicationRecord belongsto brand end class Brand ApplicationRecord belongsto country hasmany cars end class Country ApplicationRecord hasmany brand end prepare rails app require actioncontrollerrailtie require actionviewrailtie require jsonapiresources class ApplicationController ActionControllerAPI include JSONAPIActsAsResourceController end prepare jsonapi resources and controllers class CarsController ApplicationController end class BrandsController ApplicationController end class CountriesController ApplicationController end class CarResource JSONAPIResource attributes name hasone brand end class BrandResource JSONAPIResource attributes name hasone country hasmany cars end class CountryResource JSONAPIResource attributes name hasmany brands end initialize app Railsapplicationinitialize JSONAPIconfigure do config configjsonkeyformat underscoredkey configrouteformat underscoredkey end draw routes Railsapplicationroutesdraw do jsonapiresources cars do end jsonapiresources brands do end jsonapiresources countries do end end Railsapplication Make request GET the code above response this JSON json data id type cars attributes name Cruze relationships brand data type brands id included id type brands attributes name Chevrolet relationships country data type countries id cars data type cars id id type countries links self attributes name USA relationships brands data type brands id In version change GEMFILE same code response this JSON json data id type cars attributes name Cruze relationships brand data type brands id included id type brands attributes name Chevrolet relationships country data type countries id id type countries links self attributes name USA Please see the diferences between both responses For example In version the country node have circular reference to others records I dont found in JSONAPI documentation any explain about this behavor I think is a bug because is breaking change In my software Ive a feature to read all relationships and stack overflow error happened in version This issue is a choose one Feature request Checklist before submitting x Ive searched for an existing issue Ive asked my question on Gitter and have not received a satisfactory answer Ive included a complete bug report template This step helps us and allows us to see the bug without trying to reproduce the problem from your description It helps you because you will frequently detect if its a problem specific to your project x The feature Im asking for is compliant with the JSONAPI spec Description Choose one section below and delete the other Features In previous versions a single resource instance was used for performing the operation and generating the response Now these parts of the request handling are split into distinct steps which each use their own resource instances As a result any instance variables stored on the resource during the operation are not present when generating the response Any resource instances that are created for the operation processing should be used for the response generation as well This issue is a choose one Problembug report x Feature request Request for support Note Please try to avoid submitting issues for support requests Use Gitter instead Checklist before submitting x Ive searched for an existing issue Ive asked my question on Gitter and have not received a satisfactory answer Ive included a complete bug report template This step helps us and allows us to see the bug without trying to reproduce the problem from your description It helps you because you will frequently detect if its a problem specific to your project The feature Im asking for is compliant with the JSONAPI spec Description The JSONAPI specification now recommends Member names SHOULD be camelcased As such we should update the default key formatter Update code Update docs This issue is a choose one x Problembug report Feature request Request for support Note Please try to avoid submitting issues for support requests Use Gitter instead Checklist before submitting x Ive searched for an existing issue x Ive asked my question on Gitter and have not received a satisfactory answer Ive included a complete bug report template This step helps us and allows us to see the bug without trying to reproduce the problem from your description It helps you because you will frequently detect if its a problem specific to your project x The feature Im asking for is compliant with the JSONAPI spec Description Choose one section below and delete the other Bug reports When multiple invalid parameters are provided only the first error is included in the response This behavior changed in d c e ccb c f eb ad b This issue is a choose one x Problembug report Feature request Request for support Note Please try to avoid submitting issues for support requests Use Gitter instead Checklist before submitting x Ive searched for an existing issue Ive asked my question on Gitter and have not received a satisfactory answer x Ive included a complete bug report template This step helps us and allows us to see the bug without trying to reproduce the problem from your description It helps you because you will frequently detect if its a problem specific to your project x The feature Im asking for is compliant with the JSONAPI spec Description If you create a polymorphic association with custom keytype id is always taken which leads to a wrong data sharing Bug reports Everything is on libjsonapiresourceserializerrb When calling sourcepublicsendrelationshipnameid it is fine faster but it does not take care about custom keytype But if you call sourcepublicsendrelationshipnametryid youre using the custom keytype Features We can set another argument to hasone to be able to mention that the keytype has been modified Here is my proposition ruby appresourcesmyawesomeresource hasone positionable polymorphic true foreignkey positionableid foreignkeytypechanged true jsonapiresourceserializerrb def foreignkeyvaluesource relationship If you have changed the keyname dont even try to look at relationshipnameid just load the association and call the custom keyname foreignkeytypechanged relationshipoptions foreignkeytypechanged false relatedresourceid if sourcepreloadedfragmentshaskeyformatkeyrelationshipname sourcepreloadedfragments formatkeyrelationshipname valuesfirsttryid elsif foreignkeytypechanged sourcerespondtorelationshipnameid If you have direct access to the underlying id you dont have to load the relationship which can save quite a lot of time when loading a lot of data This does not apply to eg hasone through relationships sourcepublicsendrelationshipnameid else sourcepublicsendrelationshipnametryid end return nil unless relatedresourceid idformatterformatrelatedresourceid end Configuration for JSONAPI JSONAPIconfigure do config none offset paged or a custom paginator name configdefaultpaginator paged configdefaultpagesize configmaximumpagesize configtoplevelmetaincluderecordcount true configtoplevelmetarecordcountkey recordcount configtoplevelmetaincludepagecount true configtoplevelmetapagecountkey pagecount end class ContactResource BaseResource attributes name email paginator none end When paginator is set to none in resource level Then it shows undefined method calculatepagecount for nilNilClass solution if paginator JSONAPIconfigurationtoplevelmetaincludepagecount recordcount pagecount paginatorcalculatepagecountrecordcount end This issue is a choose one Problembug report x Feature request Request for support Note Please try to avoid submitting issues for support requests Use Gitter instead Checklist before submitting x Ive searched for an existing issue Ive asked my question on Gitter and have not received a satisfactory answer Ive included a complete bug report template This step helps us and allows us to see the bug without trying to reproduce the problem from your description It helps you because you will frequently detect if its a problem specific to your project The feature Im asking for is compliant with the JSONAPI spec Description Choose one section below and delete the other Features If I set my attribute casing to be say camelCased but the request comes in with attributes that are snakecased or kebabcased when we throw a param not allowed can we instead check if the cases just mismatch and instead throw an error indicating that you may have been using the wrong case This is something that happens occasionally especially with new engineers getting on a project but would instantly save a bunch of frustration here and there when these bugs happen