So right now Im using your library with multiple threads Due to the fact that httplib is not thread safe I tried to use your examples python Create a new Http object for every request def buildrequesthttp args kwargs newhttp httplib Http return apiclienthttpHttpRequestnewhttp args kwargs service buildapiname apiversion requestBuilderbuildrequest Pass in a new Http manually for every request service buildapiname apiversion http httplib Http servicestampslistexecutehttphttp But either way I have the problem that the threads are not authenticated In the documentation is nothing like this mentioned I tried just building an own httplib Http object for every thread at the beginning of it and also tried the approach of overriding the default requestBuilder of the service which I used across all threads but nothing worked due to authentification issues In the end it worked for me that I just executed the following authenticateandbuildservice function for every thread This function basically return a new service object via the builddrive v credentialscreds python def authenticateandbuildservice If modifying these scopes delete the file servertokenpickle scopes creds None The file servertokenpickle stores the users access and refresh tokens and is created automatically when the authorization flow completes for the first time if ospathexistsservertokenpickle with openservertokenpickle rb as token creds pickleloadtoken If there are no valid credentials available let the user log in if not creds or not credsvalid if creds and credsexpired and credsrefreshtoken credsrefreshRequest else flow InstalledAppFlowfromclientsecretsfile servercredentialsjson scopes creds flowrunlocalserverport Save the credentials for the next run with openservertokenpickle wb as token pickledumpcreds token return builddrive v credentialscreds Nevertheless Im not sure if it has any downsides of building a service object for every thread and it would be nice if someone could comment on this and maybe even update the documentation I also didnt find a way in the execute function to specify credentials Im trying to upload files to Google Drive but the problem is even if I configured the offline access I cant get the access after the accesstoken is expired From here If you obtain a refresh token you can also specify the refresh token and token URI to allow the credentials to be automatically refreshed credentials googleoauth credentialsCredentials accesstoken refreshtokenrefreshtoken tokenuritokenuri clientidclientid clientsecretclientsecret Environment details OS Win Python version Python pip version pip googleapipythonclient version Steps to reproduce When I configure the obtaining consent from the user I do this code thisgoogleAuthgrantOfflineAccess Obtain the auth code This code I will change to the tokens from oauth client import client jsonpath ospathjoinstaticfolderpath clientsecretsjson credentials None try credentials clientcredentialsfromclientsecretsandcode jsonpath scopes authcode except Exception as ex printex return None return accesstoken credentialsaccesstoken refreshtoken credentialsrefreshtoken But when I try to make upload itself it works only for one hour credentials googleoauth credentialsCredentialsuseraccesstoken refreshtoken userrefreshtoken tokenuri clientid getconfigvarGOOGLECLIENTID clientsecret getconfigvarGOOGLECLIENTSECRET driveservice builddrive v credentialscredentials fd ioBytesIOfilebytes body name filename mimeType applicationpdf mediabody MediaIoBaseUploadfd fd mimetypeapplicationpdf file driveservicefilescreatebodybody mediabodymediabody fieldsidexecute After one hour I have the following exception invalidclient Unauthorized n error invalidclient n errordescription Unauthorized n From here it says I dont need to do anything special and the client will refresh the token itself But there is no any indication on what should be done and how it should work itself Please help While trying to get the api set up with python I kept getting a error just using the provided sample code at Google Health Trends API Starting Guide The code that I am using is usrbinpython Sample code showing how to access the Google Flu Trends API import csv import datetime import sys import time from googleapiclientdiscovery import build Insert your API key in the string below APIKEY Key SERVER APIVERSION v beta DISCOVERYURLSUFFIX discoveryv apistrends APIVERSION rest DISCOVERYURL SERVER DISCOVERYURLSUFFIX MAXQUERIES def DateToISOStringdatestring Convert date from eg Jul to Args datestring A date in the format Jul Jul or Returns The same date in the format Raises ValueError when date doesnt match one of the three expected formats try newdate datetimedatetimestrptimedatestring b d Y except ValueError try newdate datetimedatetimestrptimedatestring b Y except ValueError try newdate datetimedatetimestrptimedatestring Y except raise ValueErrorDate doesnt match any of b d Y b Y Y return newdatestrftimeYmd def GetQueryVolumesqueries startdate enddate geoUS geolevelcountry frequencyweek Extract query volumes from Flu Trends API Args queries A list of all queries to use startdate Start date for timelines in form YYYYMMDD enddate End date for timelines in form YYYYMMDD geo The code for the geography of interest which can be either country eg US region eg USNY or DMA eg geolevel The granularity for the geo limitation Can be country region or dma frequency The time resolution at which to pull queries One of day week month year Returns A list of lists one row per date that can be output by csvwriter Raises ValueError when geolevel is not one of country region or dma if not APIKEY raise ValueErrorAPIKEY not set service buildtrends APIVERSION developerKeyAPIKEY discoveryServiceUrlDISCOVERYURL dat Note that the API only allows querying queries in one request In the event that we want to use more queries than that we need to break our request up into batches of batchintervals range lenqueries MAXQUERIES for batchstart in batchintervals batchend minbatchstart MAXQUERIES lenqueries querybatch queries batchstartbatchend Make API query if geolevel country Country format is ISO letters eg US req servicegetTimelinesForHealthtermsquerybatch timestartDatestartdate timeendDateenddate timelineResolutionfrequency geoRestrictioncountrygeo elif geolevel dma See req servicegetTimelinesForHealthtermsquerybatch timestartDatestartdate timeendDateenddate timelineResolutionfrequency geoRestrictiondmageo elif geolevel region Region format is ISO letters eg USNY see more examples here enwikipediaorgwikiISO US req servicegetTimelinesForHealthtermsquerybatch timestartDatestartdate timeendDateenddate timelineResolutionfrequency geoRestrictionregiongeo else raise ValueErrorgeotype must be one of country region or dma res reqexecute Sleep for second so as to avoid hittting rate limiting timesleep Convert the data from the API into a dictionary of the form query date count resdict line uterm DateToISOStringpoint udate point uvalue for line in res ulines for point in line upoints Update the global results dictionary with this batchs results datupdateresdict Make the list of lists that will be the output of the function res date queries for date in sortedlistset x for x in dat vals datgetterm date for term in queries resappend date vals return res def main Examples of calling the GetQueryVolumes function for different geo levels and time resolutions usweekly GetQueryVolumes flu cough startdate enddate geoUS geolevelcountry frequencyweek maregiondaily GetQueryVolumes flu cough startdate enddate geoUSMA geolevelregion frequencyday bostondmamonthly GetQueryVolumes flu cough startdate enddate geo geoleveldma frequencymonth Example of writing one of these files out as a CSV file to STDOUT outwriter csvwritersysstdout for row in usweekly outwriterwriterowrow if name main main and the errors that I am getting are Traceback most recent call last File C Users me directory name Lib sitepackages test py line in module main File C Users me directory name Lib sitepackages test py line in main usweekly GetQueryVolumes flu cough File C Users me directory name Lib sitepackages test py line in GetQueryVolumes service buildtrends v beta File C Users me directory name Lib sitepackages googleapiclient helperspy line in positionalwrapper return wrappedargs kwargs File C Users me directory name Lib sitepackages googleapiclient discoverypy line in build raise e File C Users me directory name Lib sitepackages googleapiclient discoverypy line in build content retrievediscoverydoc File C Users me directory name Lib sitepackages googleapiclient discoverypy line in retrievediscoverydoc raise HttpErrorresp content uriactualurl googleapiclienterrorsHttpError HttpError when requesting returned Bad Request From searching around on github and sites before this Ive seen notes that googles documents are out of date and some use apiclientdiscovery rather than the updated googleapiclientdiscovery so Im not sure how much of the getting started guide needs to be updated or is still relevant but Ive followed it to the best of my ability Any help would be greatly appreciated Some APIs can return a contentlength of for Status OK responses that then results in a ValueError This change returns the expected response for no content if it detects a response containing no content This commit fixes issue It seems that the Admin Directory API now responds with OK and contentlengths of as their we have no content for you responses instead of an empty JSON object as this client library assumes WARNINGgoogleapiclientdiscoverycachefilecache is unavailable when using oauth client or googleauth Traceback most recent call last File homedanielprojectstestvendorgoogleapiclientdiscoverycacheinitpy line in autodetect from import filecache File homedanielprojectstestvendorgoogleapiclientdiscoverycachefilecachepy line in module filecache is unavailable when using oauth client or googleauth ImportError filecache is unavailable when using oauth client or googleauth INFOgoogleapiclientdiscoveryURL being requested GET INFOgoogleapiclientdiscoveryURL being requested GET INFOoauth clienttransportAttempting refresh to obtain initial accesstoken DEBUGoauth clientcrypt REDACTED INFOoauth clientclientRefreshing accesstoken Traceback most recent call last File examplepy line in module customermycustomer fieldsusers queryemailnoresultsexecute File homedanielprojectstestvendorgoogleapiclienthelperspy line in positionalwrapper return wrappedargs kwargs File homedanielprojectstestvendorgoogleapiclienthttppy line in execute return selfpostprocresp content File homedanielprojectstestvendorgoogleapiclientmodelpy line in response return selfdeserializecontent File homedanielprojectstestvendorgoogleapiclientmodelpy line in deserialize body jsonloadscontent File usrlibpython jsoninitpy line in loads return defaultdecoderdecodes File usrlibpython jsondecoderpy line in decode obj end selfrawdecodes idxws end File usrlibpython jsondecoderpy line in rawdecode raise ValueErrorNo JSON object could be decoded ValueError No JSON object could be decoded Environment details OS Ubuntu Python version pip version googleapipythonclient version Steps to reproduce Do a list operation with a query that returns zero results and only include the fields containing the results You get a ValueError No JSON object could be decoded since the API has started to return an OK response with contentlength of when it previously always returned an in the body Snippet to reproduce python import logging from googleapiclientdiscovery import build from oauth clientserviceaccount import ServiceAccountCredentials loggingbasicConfiglevelloggingDEBUG credentials ServiceAccountCredentialsfromjsonkeyfilename keyjson scopes credentials credentialscreatedelegatedadminexamplecom admindirectory buildadmin directoryv credentialscredentials admindirectoryuserslist customermycustomer fieldsusers queryemailnoresultsexecute Recently updated httplib library v have a breaking change causing this Exception httplib RedirectMissingLocation Redirected but response is missing a location header Steps to reproduce pip install upgrade httplib Now use the google drive library to upload a file This is where I encountered the bug it may break while using other stuffs a well It should either force to use version of httplib or adapt the breaking changes introduced in the new version A temporary fix for those using the client library would be to add httplib in requirementstxt of the project If the description of the method contains any HTML tag it will break the HTML rendering This PR escapes the HTML tag to prevent this problem depending on the different runtime python version Only the python need to encode the Unicode object to str when writing HTML to file If a nonexistent filename is passed selffd is never initialized The destructor still attempts to close the file descriptor This obscures the real error file not existing Closes quickstartpy py from future import printfunction import pickle import ospath from googleapiclientdiscovery import build from googleapiclienthttp import MediaFileUpload from googleauthoauthlibflow import InstalledAppFlow from googleauthtransportrequests import Request If modifying these scopes delete the file tokenpickle SCOPES def main creds None The file tokenpickle stores the users access and refresh tokens and is created automatically when the authorization flow completes for the first time if ospathexiststokenpickle with opentokenpickle rb as token creds pickleloadtoken If there are no valid credentials available let the user log in if not creds or not credsvalid if creds and credsexpired and credsrefreshtoken credsrefreshRequest else flow InstalledAppFlowfromclientsecretsfile credentialsjson SCOPES creds flowrunlocalserverport Save the credentials for the next run with opentokenpickle wb as token pickledumpcreds token service builddrive v credentialscreds filemetadata name foojpg media MediaFileUploadfilesfoojpg mimetypeimagejpeg file servicefilescreatebodyfilemetadata mediabodymedia fieldsidexecute print File ID s filegetid if name main main Traceback most recent call last File quickstartpy line in module main File quickstartpy line in main mimetypeimagejpeg File usrlocalgooglehomebusunkimmiscfixitdrivequickstartenvlibpython sitepackagesgoogleapiclienthelperspy line in positionalwrapper return wrappedargs kwargs File usrlocalgooglehomebusunkimmiscfixitdrivequickstartenvlibpython sitepackagesgoogleapiclienthttppy line in init fd openselffilename rb FileNotFoundError Errno No such file or directory filesfoojpg Exception ignored in function MediaFileUploaddel at x f b c Traceback most recent call last File usrlocalgooglehomebusunkimmiscfixitdrivequickstartenvlibpython sitepackagesgoogleapiclienthttppy line in del if hasattrself fd NameError name fd is not defined Environment details OS Ubuntu Python version pip version googleapipythonclient version current Steps to reproduce Add simple file upload from example to quickstart example from After running console shows error attributeerror mediafileupload object has no attribute fd