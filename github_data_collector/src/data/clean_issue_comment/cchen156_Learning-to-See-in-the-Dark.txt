Hello Which version of numpy and scipy did you use Update dataset download link PTAL Hey why do you not set the noautobright field in the rawpy postprocessing to false Hi How much time does it usually take to train on the SONY model using the specified configuration Thanks I dont have a iPhone s handy but I heard some people are getting good results with iPhone s If I try Sony model with raw images taken with iPhone with two or three cameras iPhone or iPhone will the result be roughly the same as with iPhone s Thanks It looks like the google links in the Readme have been updated Therefore downloaddatasetpy needs to be updated to work For Sony Ive used downloadfilefromgoogledrive G VruemZtpOyHjOC N Ww ftVXOydSXx Sonyzip ossystemunzip Sonyzip d dataset conv slimconv dconv rate activationfnNone scopegconv out tfdepthtospaceconv As stated above in the last part of the network you set conv s numoutputs is and then do depthtospaceconv to make the channel of out to Now I want to know why you didnt set conv s numoutputs directly After downloading the model I tried to test own sony photos When I run the test code i got no failure it looks like worked ok but no photos will be saved in results I also adapt reading black levels Do someone know why this happen I attached a screenshot how I put the test data in the folder thanks Bildschirmfoto um I download the dataset Fuji and read the image using the code provided I got the input images with size x x and the output images with size x x Here the width of the output is NOT times the width of input vs is there anything wrong or do I have to cut pixels from the output image If so how to cut from left or right or both Thanks Why not set the ratio to and let the network learn a ratio when training the model I noticed that the author set the ratio to gt exposure time short exposure time when training the model and we need to set a ratio externally when testing the model However after trying different ratios I found that the result images had different qualities besides different exposure and there exists a perfect ratio which we dont know before testing I assume that the ratio we choose affects the network performance since the ratio is applied to the image before it is put into the network So why not let the network learn a ratio