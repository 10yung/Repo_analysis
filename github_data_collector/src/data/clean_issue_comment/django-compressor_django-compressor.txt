They were replaced by COMPRESSFILTERS in i would simplify that to only have one version of those settings As per the discussion in Re Jinja added elif compress inside an elif tag getting missed in offline compression Django introduced relative paths for the extends tag for example extends basehtml These fail to resolve during offline compression and compress catches a TemplateDoesNotExist exception at line of managementcommandscompresspy The reported path appears to be correct except that it isnt written absolutely note that the first path starts with while the failing nd path does not myapptemplatesmyappbasehtml myapptemplatesmyappshowhtml extends basehtml compresscommand error logging Error parsing template homekdickersonCodemyprojectmyapptemplatesmyappshowhtml homekdickersonCodemyprojectmyapptemplatesmyappbasehtml It works correctly if I replace the relative path with a relativetotemplateloaderroot path extends myappbasehtml I was having issues with offline manifest missing hash keys Turned out if compress was nested in an elif tag it was not being caught I believe this can be rectified by updating compressorofflinejinja Jinja Parsers getnodelist function Fix for my purposes def getnodelistself node body getattrnode body getattrnode nodes if isinstancenode jinja nodesIf return body nodeelif nodeelse return body Specifically return body nodeelif nodeelse Making that change on my source code seemed to fix my issue with it Not familiar enough with djangocompressor to know if there are any issues making this change If relevant I have Jinja Potentially relevant commit re Jinja is that the right repo I made that edit on a forked repo Lets say you wrote this to create a link preload tag compress js preload script ajs script bjs script cjs endcompress It will produce this link relpreload href Now when you want the actual script and you write it without preload attribute compress js script ajs script bjs script cjs endcompress It still emits link preload tag So Expected script srcshamalamadingdongjsscript Actual link relpreload hrefshamalamadingdongjs asscript use defaultstorage to store file instead of using FileSystemStorage We will not support python Hey all Ive got a bunch of js files in html tempaltes which Im compressing as compress js script src static dir code js script script src static dir foobarjscode js script script src static dir foobarjscode js script script src static dir foobarjscode js script endcompress And this works well However Im trying to add nonceing as compress js script noncerequestcspnonce src static dir code js script script noncerequestcspnonce src static dir foobarjscode js script script noncerequestcspnonce src static dir foobarjscode js script script noncerequestcspnonce src static dir foobarjscode js script endcompress The string requestcspnonce seems to get picked up as a jinja variable and Im getting a OfflineGenerationError You have offline compression enabled but key some hash is missing from offline manifest Ive tried adding COMPRESSOFFLINECONTEXT requestcspnonce requestcspnonce to my settings file but no dice Ive also checked the manifest file and indeed the hash is missing Im not sure where its coming from Has anyone worked with this combination Am I missing something obvious compressor is minifying JS files just fine for me but not SCSS I am getting a single CSS file but its never minified Ive tried all sorts of settings but none of them seem to produce a minified CSS file Relevant snippet from settingspy SASS COMPRESSPRECOMPILERS textxsass djangolibsassSassCompiler textxscss djangolibsassSassCompiler COMPRESSFILTERS css compressorfilterscssdefaultCssAbsoluteFilter compressorfilterscssminrCSSMinFilter js compressorfiltersjsminJSMinFilter COMPRESSENABLED True COMPRESSOFFLINE True And in my basehtml I have this compress css link typetextxscss href static stylesheetsbootstrapscss relstylesheet mediaall endcompress Currently djangocompressor has support for the defer and async keywords in script tags but the support is not documented at all I think making it part of the usage examples in the documentation would help a lot