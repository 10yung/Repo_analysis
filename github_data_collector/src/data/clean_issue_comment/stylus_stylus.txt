Could not figure out why the importer resolves the wrong path when stylus is run inside of an asar archive but putting an absolute path fixes the issue Hey maintainers I believe I found some inconsistent behavior in the way Styluss Rendererrender and Rendererdeps looks for dependency files Im currently working on unofficially updated forks of electronforge electronprebuiltcompile electroncompile electroncompilers And trying to maintain the buildless system that the developers at ElectronUserland abandoned and came across this bug while trying to add dependency output for electroncompilers to use in unit tests for the repo Im using the milligram framework which conveniently built multiple packages of their framework in LESS SASS minified CSS and Stylus to unit test all of the CSS compilers but when testing Stylus itd successfully render milligram into CSS but when calling deps it would always give an error of either null or an object being passed to the path library Some debugging later and I found out that milligram was using import ExampleDependency without quotes around the file names instead of import ExampleDependency which Stylus is interpreting as identifier nodes Ident whose val is a Null node internally instead of a string node String whose val is actually the string used in the files syntax So Im not fully sure how render is interpreting the syntax correctly but this PR fixes deps and makes it consistent with render Ive also added a unit test based off of the existing basic test already under testdepsresolver to check for the missing behavior in deps Ive also attached an example snippet to demonstrate the inconsistency using milligramstylus Ive tested this on v and the dev branch using Node and on both Linux and Windows javascript const fs requirefs const path requirepath const stylus require const filePath pathposixjoinnodemodules milligramstylus dist milligramstyl consolelogstylusfsreadFileSyncfilePath utf setfilename filePathrender consolelogstylusfsreadFileSyncfilePath utf setfilename filePathdeps Steps to demonstrate behavior Clone stylus and npm install Run npm install nosave milligramstylus Save the code snippet into the projects root folder as testdepsjs Run node testdepsjs Itll show milligram compiled and then error when gathering its dependencies Stylus currently resolves stylus files if they have the same name as their parent folder with styl extension For example given the following directory structure where teststyl is the input file and testcss is the output file a astyl teststyl testcss and the following file contents teststyl stylus require a aastyl stylus body backgroundcolor red yields the following output testcss css body backgroundcolor f this seems like logical and intended behavior but it appears to not be listed in the documentation or at least not in the importmd index styles section import also supports index styles This means when you import blueprint it will resolve either blueprintstyl or blueprintindexstyl This is really useful for libraries that want to expose all their features while still allowing feature subsets to be imported Unless this behavior is unintended it should probably be changed to something like import also supports index styles This means when you import blueprint it will resolve blueprintstyl blueprintindexstyl or blueprintblueprintstyl This is really useful for libraries that want to expose all their features while still allowing feature subsets to be imported Broken version Working version Styl code stylus isspinnerbuttonloadinghover angsmallspinner marginbottom px margintop marginbottom marginleft px marginright marginleft CSS css isspinnerbuttonloadinghover angsmallspinner marginbottom px margintop marginbottom marginleft px marginright marginleft Consider the following generic styl sheet genericstyl fontsize color f somecssclass fontsize px What is happening is fontsize no longer functions as a css property within the compiled sheet instead it invokes the function call What you end up with is genericcss somecssclass color f So as you can see not only is the property declaration ignored it is ignored and invokes the function call instead While I admit the fallacy of declaring functions with the same name as properties this is a really weird side effect This stung me because I was using flex declarations in the same sheets where I had a flex function Just like this picture Code stylus fontface fontfamily OpenSans fontweight src urlassetsfontsOpenSansLightOpenSansLighteot IE src urlassetsfontsOpenSansLightOpenSansLighteotiefix formatembeddedopentype IE IE urlassetsfontsOpenSansLightOpenSansLightwoff formatwoff chrome firefox urlassetsfontsOpenSansLightOpenSansLightttf formattruetype chrome firefox opera Safari Android iOS urlassetsfontsOpenSansLightOpenSansLightsvg formatsvg iOS fontface fontfamily OpenSans fontweight src urlassetsfontsOpenSansRegularOpenSansRegulareot IE src urlassetsfontsOpenSansRegularOpenSansRegulareotiefix formatembeddedopentype IE IE urlassetsfontsOpenSansRegularOpenSansRegularwoff formatwoff chrome firefox urlassetsfontsOpenSansRegularOpenSansRegularttf formattruetype chrome firefox opera Safari Android iOS urlassetsfontsOpenSansRegularOpenSansRegularsvg formatsvg iOS fontface fontfamily OpenSans fontweight src urlassetsfontsOpenSansSemiboldOpenSansSemiboldeot IE src urlassetsfontsOpenSansSemiboldOpenSansSemiboldeotiefix formatembeddedopentype IE IE urlassetsfontsOpenSansSemiboldOpenSansSemiboldwoff formatwoff chrome firefox urlassetsfontsOpenSansSemiboldOpenSansSemiboldttf formattruetype chrome firefox opera Safari Android iOS urlassetsfontsOpenSansSemiboldOpenSansSemiboldsvg formatsvg iOS I nest multiple mixin to build BEM style codes When using block mixin without styles partial render results get lost blockname elementel el block name block Normal blocktesta width px elementela height px Render nothing blocktestb elementelb height px Lost the first blocktestc elementelc height px elementeld height px Render as testa width px Expected to have testbelb testaela height px Expected to have testcelc testceld height px Stylus stylus H s bar Hs color red Expected css bar color red Result ParseError testcss s bar Hs color red expected indent got outdent whereas stylus H s bar Hs color red works for example stylus M a b c M M x y should be generated as css a a b a c a a b b b c b a c b c c c x y but it is generated as css a a b a c a a b b b c b a c b c c c x y bug is The first selector right others wrong no spaces between them css a b b b c b a c b c c c When gridtemplatecolumns property has value that contains something like somevar stylus cant parse it Here are is the simple expample in CodePen You can switch CSS Preprocessor to Stylus and watch error 