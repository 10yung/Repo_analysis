Use the script exporter for scripts and grab the filename extension from the resource information provided by nbconvert so that file extensionsyntax highlighting etc in gists works for nonpython kernels A few minor bugfixes to make the plugin work correctly for notebooks running eg via jupyterhub as well as locally Thanks for the plugin This adds another Travis environment to install ESLint and run it Will need to dive into more how ESLint is configured to get this fixed for the Jupyter AMD modules We should run eslint or similar over all of the Javascript files as part of Travis Any preferences or best practices we want to follow I have no preference other than just picking something I followed all of the instructions to install and configure jupyternotebookgist I can see the gist button in my notebook But when I click it I get the message You havent configured your GitHub Client ID in your jupyternotebookconfigpy file Please set the Client ID and Secret before using this plugin See the README for more info I created and populated my jupyternotebookconfigpy file precisely as described in the README after creating a new OAUTH app on github I also tried launching the notebook with oauthclientid and secret specified as command line arguments No luck In the absence of any more verbose errors or debugging info I am totally stuck and have no idea how to proceed I am using jupyter version notebook version and python If using pew the installation instructions need to be modified from jupyter nbextension install py jupyternotebookgist to pew new EXAMPLE NBDIRwhich jupyter jupyter nbextension install py jupyternotebookgist nbextensionsNBDIRsharejupyternbextensions There is a great library called github py that allows much saner handling of fetching creating and updating gists This should give us the ability to really test the core pieces of the backend API 