 b f implemented daemon for systems that dont have it but the function prototype was never included in mainc where it is referenced bmah Dear sir I use iperf to test LAN performance under UDP mode The commands are as below Receiver Iperf s p Sender Iperf c p P is CPU core number u b G l a Only add l the performance will be arrive at the best If less than the results were not as good as set as b for single port test the single port s max speed is Gbps the test result was Gbps if I delete l the test results was Gbps Would you please tell me is this right command which can set as test standard THANKS Best regards Christina Context Version of iperf iperf cJSON Hardware Darwin Kernel Version Operating system and distribution if any macOS C Please note iperf is supported on Linux FreeBSD and macOS Support may be provided on a besteffort basis to other UNIXlike platforms We cannot provide support for building andor running iperf on Windows iOS or Android Other relevant information for example nondefault compilers libraries crosscompiling etc Please fill out one of the Bug Report or Enhancement Request sections as appropriate Bug Report Expected Behavior Parsable JSON for bidirectional test with unique keys Actual Behavior This JSON cannot be processed img width altScreen Shot at AM src Note duplicate keys sum sumsent sumreceived in the above JSON Steps to Reproduce iperf c hostname bidir J Possible Solution Perhaps a client server TX key and a server client RX key Possible fix for If I may for the future updates of API I would suggest all strings passed as arguments to API calls to be redesigned for const char instead of char This would make life easier when calling them Originally posted by olehyudinring in AdministratorWIN R DC iperf a bd ce ca a ac f c a f uname a CYGWINNT WIN R DC x Cygwin AdministratorWIN R DC iperf a bd ce ca a ac f c a f git log commit a bd ce ca a ac f c a f HEAD master originmaster originHEAD Author Bruce A Mah bmahesnet Date Fri Dec fix Copy some strings passed as API parameters for consistency with CLI Fixes AdministratorWIN R DC iperf a bd ce ca a ac f c a f configure checking for a BSDcompatible install usrbininstall c checking whether build environment is sane yes checking for a threadsafe mkdir p usrbinmkdir p checking for gawk gawk checking whether make sets MAKE yes checking whether make supports nested variables yes checking whether to enable maintainerspecific portions of Makefiles no checking build system type x unknowncygwin checking host system type x unknowncygwin checking for gcc gcc checking whether the C compiler works yes checking for C compiler default output file name aexe checking for suffix of executables exe checking whether we are cross compiling no checking for suffix of object files o checking whether we are using the GNU C compiler yes checking whether gcc accepts g yes checking for gcc option to accept ISO C none needed checking whether gcc understands c and o together yes checking whether make supports the include directive yes GNU style checking dependency style of gcc gcc checking for ranlib ranlib checking whether ln s works yes checking how to print strings printf checking for a sed that does not truncate output usrbinsed checking for grep that handles long lines and e usrbingrep checking for egrep usrbingrep E checking for fgrep usrbingrep F checking for ld used by gcc usrx pccygwinbinldexe checking if the linker usrx pccygwinbinldexe is GNU ld yes checking for BSD or MScompatible name lister nm usrbinnm B checking the name lister usrbinnm B interface BSD nm checking the maximum length of command line arguments checking how to convert x unknowncygwin file names to x unknowncygwin format funcconvertfilenoop checking how to convert x unknowncygwin file names to toolchain format funcconvertfilenoop checking for usrx pccygwinbinldexe option to reload object files r checking for objdump objdump checking how to recognize dependent libraries filemagic x archive import x DLL checking for dlltool dlltool checking how to associate runtime and link libraries funccygmingdllforimplib checking for ar ar checking for archiver FILE support checking for strip strip checking for ranlib cached ranlib checking command to parse usrbinnm B output from gcc object ok checking for sysroot no checking for a working dd usrbindd checking how to truncate binary pipes usrbindd bs count checking for mt no checking if is a manifest tool no checking how to run the C preprocessor gcc E checking for ANSI C header files yes checking for systypesh yes checking for sysstath yes checking for stdlibh yes checking for stringh yes checking for memoryh yes checking for stringsh yes checking for inttypesh yes checking for stdinth yes checking for unistdh yes checking for dlfcnh yes checking for objdir libs checking if gcc supports fnortti fnoexceptions no checking for gcc option to produce PIC DDLLEXPORT DPIC checking if gcc PIC flag DDLLEXPORT DPIC works yes checking if gcc static flag static works yes checking if gcc supports c o fileo yes checking if gcc supports c o fileo cached yes checking whether the gcc linker usrx pccygwinbinldexe supports shared libraries yes checking whether lc should be explicitly linked in yes checking dynamic linker characteristics Win ldexe checking how to hardcode library paths into programs immediate checking whether stripping libraries is possible yes checking if libtool supports shared libraries yes checking whether to build shared libraries yes checking whether to build static libraries yes checking for ANSI C header files cached yes checking for library containing floor none required checking for library containing socket none required checking for library containing inetntop none required checking for an ANSI Cconforming const yes checking pollh usability yes checking pollh presence yes checking for pollh yes checking syssocketh usability yes checking syssocketh presence yes checking for syssocketh yes checking for netinetsctph no checking endianh usability yes checking endianh presence yes checking for endianh yes checking for pkgconfig pkgconfig checking whether compiling and linking against OpenSSL works no checking TCPCONGESTION socket option no checking IPv flowlabel support no checking for cpusetsetaffinity no checking for schedsetaffinity yes checking for SetProcessAffinityMask yes checking for daemon yes checking for sendfile no checking for getline yes checking SOMAXPACINGRATE socket option no checking for library containing clockgettime none required checking for clockgettime yes checking that generated files are newer than configure done configure creating configstatus configstatus creating Makefile configstatus creating srcMakefile configstatus creating srcversionh configstatus creating examplesMakefile configstatus creating iperf spec configstatus creating srciperfconfigh configstatus srciperfconfigh is unchanged configstatus executing depfiles commands configstatus executing libtool commands AdministratorWIN R DC iperf a bd ce ca a ac f c a f make Making all in src make Entering directory homeAdministratoriperf a bd ce ca a ac f c a f src make allam make Entering directory homeAdministratoriperf a bd ce ca a ac f c a f src gcc DHAVECONFIGH I g g O Wall MT iperf maino MD MP MF depsiperf mainTpo c o iperf maino test f mainc echo mainc mv f depsiperf mainTpo depsiperf mainPo binsh libtool tagCC modecompile gcc DHAVECONFIGH I g O Wall MT cjsonlo MD MP MF depscjsonTpo c o cjsonlo cjsonc libtool compile gcc DHAVECONFIGH I g O Wall MT cjsonlo MD MP MF depscjsonTpo c cjsonc DDLLEXPORT DPIC o libscjsono libtool compile gcc DHAVECONFIGH I g O Wall MT cjsonlo MD MP MF depscjsonTpo c cjsonc o cjsono devnull mv f depscjsonTpo depscjsonPlo binsh libtool tagCC modecompile gcc DHAVECONFIGH I g O Wall MT iperfapilo MD MP MF depsiperfapiTpo c o iperfapilo iperfapic libtool compile gcc DHAVECONFIGH I g O Wall MT iperfapilo MD MP MF depsiperfapiTpo c iperfapic DDLLEXPORT DPIC o libsiperfapio iperfapic In function iperfonconnect iperfapic warning format llu expects argument of type long long unsigned int but argument has type uint t aka long unsigned int Wformat iperfprintftest Target Bitrate llu n testsettingsrate lu iperfapic In function iperfclearaffinity iperfapic error CPUSETSIZE undeclared first use in this function did you mean CPUSETSIZE for i i CPUSETSIZE i CPUSETSIZE iperfapic note each undeclared identifier is reported only once for each function it appears in make Makefile iperfapilo Error make Leaving directory homeAdministratoriperf a bd ce ca a ac f c a f src make Makefile all Error make Leaving directory homeAdministratoriperf a bd ce ca a ac f c a f src make Makefile allrecursive Error how to fix it Computer with Windows and two network interface one dedicated to client another to server The two interface are connected to a router that we want to test correctly configured I launch following commands Server side iperf exe s i p B f k Client side iperf exe c P i p w K B N f k t If I disconnect ethernet cable and connect it again the connection is resetted Please see picture below displaying server and client windows With Windows it was working fine the connection was not resetted and client was continuing to perform measures of bandwith Please help to fix this issue any windows configuration to change or timeout setting in iperf client iperf error NOTE The iperf issue tracker is for registering bugs enhancement requests or submissions of code It is not a means for asking questions about building or using iperf Those are best directed towards the iperf mailing list at iperfdevgooglegroupscom or question sites such as Stack Overflow A list of frequentlyasked questions regarding iperf can be found at Context Version of iperf Hardware Operating system and distribution if any Please note iperf is supported on Linux FreeBSD and macOS Support may be provided on a besteffort basis to other UNIXlike platforms We cannot provide support for building andor running iperf on Windows iOS or Android Other relevant information for example nondefault compilers libraries crosscompiling etc Please fill out one of the Bug Report or Enhancement Request sections as appropriate Bug Report Expected Behavior Actual Behavior Steps to Reproduce Possible Solution Please submit patches or code changes as a pull request Enhancement Request Current behavior Desired behavior Implementation notes If submitting a proposed implementation of an enhancement request please use the pull request mechanism NOTE The iperf issue tracker is for registering bugs enhancement requests or submissions of code It is not a means for asking questions about building or using iperf Those are best directed towards the iperf mailing list at iperfdevgooglegroupscom or question sites such as Stack Overflow A list of frequentlyasked questions regarding iperf can be found at Context Version of iperf client and server Hardware x QEMU Operating system and distribution if any Ubuntu LTS client and server Please note iperf is supported on Linux FreeBSD and macOS Support may be provided on a besteffort basis to other UNIXlike platforms We cannot provide support for building andor running iperf on Windows iOS or Android Other relevant information for example nondefault compilers libraries crosscompiling etc Please fill out one of the Bug Report or Enhancement Request sections as appropriate Bug Report Expected Behavior iperf is expected to connect from the client to the server and send packets back and forth between the client and the server Actual Behavior iperf on the client side waits indefinitely On terminating the client side iperf with ctrlC the server side shows and output that the size of data read does not correspond to the offered length and it is unable to receive parameters from the client Specifically on the client side iperf V d c iperf Linux pv vi vpsg generic Ubuntu SMP Thu Nov UTC x C Test Complete Summary Results ID Interval Transfer Bandwidth Retr CPU Utilization localsender u s remotereceiver u s iperf interrupt the client has terminated On the server side iperf s Server listening on WARNING Size of data read does not correspond to offered length iperf error unable to receive parameters from client Steps to Reproduce Start the iperf server as iperf s On the client side iperf V d ip of server The client waits indefinitely On terminating the connection on client side a message is seen on the server side as follows WARNING Size of data read does not correspond to offered length iperf error unable to receive parameters from client I have reviewed that the versions of iperf match on the client and server Further I have checked that a TCP connection is getting established using tcpdump output pl see attached tcpdump file tcpdumpnhost datatxt It appears there is a mismatch in the size of data sent by the client compared with the data expected by the server Is there a debug option to further identify this gap and what can be done to address it If this information is insufficient for a fix please suggest additional debug data that I need to provide for analysis Possible Solution Please submit patches or code changes as a pull request Enhancement Request Current behavior Desired behavior Implementation notes If submitting a proposed implementation of an enhancement request please use the pull request mechanism Context Version of iperf Bug Report Expected Behavior When using iperfsettestclient usernamepasswordrsapubkey C API it is expected these data to be passed to server This is not happening due to loadpubkeyfrombase doesnt work as expected In addition there is a leak of bio pointer allocated data Also the same is related to loadprivkeyfrombase Actual Behavior Authentication data is not sent to server testsettingsauthtoken is empty for the test during test run Steps to Reproduce Via C API setup test with iperfsettestclient usernamepasswordrsapubkey Run test and see auth failure error Possible Solution There is no need to do Base Decode cause PEMreadbioPUBKEY already requires base key string in PEM format with corresponding header and footer to work correctly Or find a different way to set raw RSA key data into OpenSSL EVPPKEY The following solution worked for me EVPPKEY loadpubkeyfrombase const char buffer BIO bio BIOnewBIOsmem BIOputsbio BEGIN PUBLIC KEY n BIOputsbio buffer BIOputsbio nEND PUBLIC KEY n EVPPKEY pkey PEMreadbioPUBKEYbio NULL NULL NULL BIOfreebio return pkey Enhancement Request I would like to see the option to enforce ratelimits on iperf running in ServerDaemon mode Specifically when using the UDP testing features Something similar has already been request in as well Current behavior For UDP testing only the iperf client can set the bandwidth on this and the server trusts the client However a misconfiguredmisbehaving client either intentionally or accidentally can then cause the server to sent UDP packets as fast as it can This behaviour can have DoS style effects on networks and as such is not desirable As example the iperf server is on a G interface in a backbone network A client behind a lower rate eg G branch uplink can trigger the server to flood the G connection affecting all clients behind that same uplink and potentially also causes flapping routing protocols if no QoS is defined No routing means the return packets from the client to the server are lost and client side control of the server is lost Desired behavior What would be great would be to allow the server side to have a configurable maximum rate Any client requesting higher rate would only get the servers configured max rate Clients requesting lower rates should still behave as is and get the requested rate This would allow serverside protection of both the network and the server from misbehavingmalicious iperf users