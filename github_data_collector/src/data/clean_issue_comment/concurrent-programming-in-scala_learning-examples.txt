 The ensime dependency causes some problems while trying to build at least for me I believe the solution introduces a race condition when there are more than producer threads While the exercise describes only producer thread I would say it is still a bit misleading for the reader if I am correct of course Do you agree val producer thread var x while x if syncVarisEmpty syncVarputx x x class SyncVar T private var empty Boolean true private var x T nullasInstanceOf T def putx T Unit thissynchronized if empty throw new Exceptionmust be empty else empty false thisx x def isEmpty synchronized empty not shown code The call to methods isEmpty and putxT is synchronized However on the producer thread they are called on separate lines Is the following possible Some producer Thread calls the method isEmpty obtaining the monitor of the syncVar instance The isEmptymethod returns true The producer Thread releases the monitor over the syncVar instance Some other producer Thread calls the same method isEmpty on the same syncVar instance It also obtains the value of true Producer Thread calls method putxT obtaining the monitor and effectively inserting a value Producer Thread calls method putxT obtains the monitor but because the syncVar variable x is no longer empty due to step if throws an exception I believe this implementation respects the requirements of the exercise and has the same semantic Hello Im having trouble with the CheckActors example in the book When I try to run the following code class CheckActor extends Actor import akkaactorIdentify ActorIdentity val log Loggingcontextsystem this override def receive case path String loginfoschecking path path loginfocontextselftoString loginfocontextparenttoString contextactorSelectionpath Identifypath case ActorIdentitypath Someref loginfosfound actor ref at path case ActorIdentitypath None loginfoscount not find an actor at path In main val checkerActorRef ourSystemactorOfProps CheckActor checker checker I get the following error when running in the sbt console INFO OurExampleSystemakkaactordefaultdispatcher akkaOurExampleSystemuserchecker checking path INFO OurExampleSystemakkaactordefaultdispatcher akkaOurExampleSystemuserchecker Actor akkaOurExampleSystemuserchecker INFO OurExampleSystemakkaactordefaultdispatcher akkaOurExampleSystemuserchecker Actor akkaOurExampleSystemuser INFO OurExampleSystemakkaactordefaultdispatcher akkaOurExampleSystemuserchecker Message akkaactorActorIdentity from Actor akkaOurExampleSystemdeadLetters to Actor akkaOurExampleSystemuserchecker was not delivered dead letters encountered This logging can be turned off or adjusted with configuration settings akkalogdeadletters and akkalogdeadlettersduringshutdown success Total time s completed Aug PM I tried it with the code from the code files too and get the same result without the extra logging statements Can you suggest what I might be doing wrong Thanks I think this is more better 