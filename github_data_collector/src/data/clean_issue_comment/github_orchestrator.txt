Related issue Description Add ConsulScheme config variable and skip TLS verification for now Fixes Hi Im pretty novice to Mysql Orchestrator but since I got the work to design solution for production MySQL database which is mission criticalI researched and found that Orchestrator along with Proxy SQL hook scripts can be best suited for requirement Talking about solution I want to have DC a Primary Master with VIP that application can connect in case DB server have issue we can failover VIP to new node without making any change in application or DNS b Slave One Lossless Semi Synchronous slave c Following Two Read Replicas with Another VIP so that if one slave have sync issue The reporting dont suffer we will switch vip to another slave i Slave for reporting ii Slave Backups DR Side a Slave That should take over when DC side is completely down Can be semi synchronous not sure b Slave Semi Synchronous to Slave c Slave would slave to slave Talking about POC I got error in first step in preparing POC environment for DC I make master with slave semi synchronous normal First of all i like orchestrator interface and its accuracy in detecting the failure But it cant failover automatic for me May be im naive and did some misconfig I have one question to ask a i was initially following the link But when reached the end i found that hook scripts vip scripts are not production ready and have some part missing in them Are the hook scripts PreFailover Post Failover Necessary to have it if we dont have will orchestrator not move to Automatic Recovery I remember some where in documentation it is written have to use some script so i thought about the flow of script For making hook scripts i feel like if master go down PreFailover script should check a All Slave status last gtid executed bAll slave readonly or not c Have semi synchronous slave or not If have gtid executed are consistent then promote semi synchronous first if gtidexecuted of semi synchronous is far behind then check among other slaves and make decision d select name for slave to promote then orchestrator promote it Post Failover a turn new master to read write b Redirect remaining slaves to new master c consistency checks I may be wrong in some of the steps but please guide if architecturesteps would have some flaw that i have overlooked orchestratorconfjsontxt ProxySQL i think should be used for Master vip relocation Can we have separated vip for reporting that can be relocated in case of issue please guide me here instance maybe nil pointer because no error handler for cc yangeagle the above lines topologyRecovery maybe be nil due to the following line so there is no need to raft sync when topologyRecovery is nil pls check cc yangeagle Please help First start orchestrator is sucessbut when I kill the orchestrator process and restart Tips FATAL Failed to parse gcfg data from file invalid section section mysql orchestrator version OS ubuntu mysql version if replicaErr nil movedReplica nil seems like should be if replicaErr nil movedReplica nil whats the original thought here cc yangeagle Hi We have few cases of the following replication flow with GTID enabled MasterRW Slave RO MasterRW Slave RWSlave RO On Slave we have an application that writes to deddicated DB on it and its being replicated to Slave We understand that slave cant replace the master but still Orchestrator identify these writes as errant transactions Can we somehow filter these caseslike Slave and not get alerts for it When using the aggregation mode the display alias feature display the wrong title it displays a bogus alias instead of the expected text The reason is that the aggregation code is modifying the title of the instance but not its alias PR on the way If master alive time is too long masters gtidslavepos does not exist slave binlog testing only