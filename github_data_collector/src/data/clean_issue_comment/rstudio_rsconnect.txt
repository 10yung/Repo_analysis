 Two things There appears to be a typo in showUsers where listApplicationAuthoization should read listApplicationAuthorization r res apilistApplicationAuthorizationapplicationid The code is currently outputting this error because of this r Error in apilistApplicationAuthoizationapplicationid attempt to apply nonfunction There is no function on the api object called listApplicationAuthorization Which means that despite fixing the typo code still doesnt work Is there another function in the api object that should be used r At line application rsconnectresolveApplicationaccountDetails appName api rsconnectclientForAccountaccountDetails strapi List of serverSettings function addUser function userRecord getUser function userId currentUser function addToken function token listApplications function accountId filters NULL createApplication function name title template accountId terminateApplicationfunction applicationId uploadApplication function appId bundlePath deployApplication function applicationId bundleId NULL configureApplicationfunction applicationId getApplication function applicationId listTasks function getTask function taskId killTask function taskId waitForTask function taskId quiet Repro Create a new application Set the following repo option r optionsrepos c CRAN Oregon State University University of California Berkeley Deploy the application using deployApp in the R console Observe Error Traceback lapplyX X FUN FUN sapplyrepos at dependenciesR setNamessapplyrepos sapplyrepos at dependenciesR snapshotDependenciesappDir inferDependenciesappMode hasParameters python hasPythonRmd at bundleR createAppManifestappDir bundleDir appMode appMode contentCategory contentCategory hasParameters hasParameters appPrimaryDoc appPrimaryDoc assetTypeName assetTypeName users users python python hasPythonRmd hasPythonRmd at bundleR bundleApptargetappName appDir appFiles appPrimaryDoc assetTypeName contentCategory verbose python at deployAppR forcecode at utilsR withStatuspaste Uploading bundle for assetTypeName applicationid python getPythonForTargetpython accountDetails bundlePath bundleApptargetappName appDir appFiles at deployAppR rsconnectdeployAppappName shiiiiny account jonathan Expect App deploys successfully Details Probably happens because we use commas to delimit repos in the lockfile Enable the rsconnect package to sync the dcf deployment files with the server so metadata like Title arent out of date and confusing syncs based on the configuration option rsconnectmetadatasynchours does not update shinyapps or rpubs deletes dcf deployment files that dont point to a valid application on the server Companion PR on RStudio open source will accompany this Not sure where this error message is coming from but it fires during after the publishing flow in the IDE when using the default rsconnect server setting inside RStudio Server Pro Error in dataframetmp configurl value replacement has row data has packageVersionrsconnect packageDescriptionrsconnect Package rsconnect Type Package Title Deployment Interface for R Markdown Documents and Shiny Applications Author JJ Allaire Maintainer Jonathan McPherson jonathanrstudiocom Description Programmatic deployment interface for RPubs shinyappsio and RStudio Connect Supported content types include R Markdown documents Shiny applications Plumber APIs plots and static web content Depends R Imports curl digest jsonlite openssl packrat rstudioapi yaml Suggests RCurl callr httpuv knitr plumber reticulate rmarkdown shiny sourcetools testthat xtable License GPL RoxygenNote Roxygen listmarkdown TRUE URL BugReports Repository RSPM RemoteSha dd d b b b e f ebc c bb f Version Date NeedsCompilation no Packaged UTC root Built R UTC unix File optR libRlibraryrsconnectMetapackagerds Would it be possible to offer feedback when using a casepreserving caseinsensitive file system and referencing ondisk files using differentcase names For example we may have an ondisk file named imagesRStudiosvg and then use it from an R Markdown document with markdown imagesrstudiosvg This renders fine on a macOS system for example but will probably err if that same content is rendered on a Linux system The image reference is nonportable Filesystem differences will cause problems when migrating code from RStudio desktop to RStudio server for example or when deploying code to shinyappsio or RStudio Connect Could we attempt to identify these situations Note We sometimes avoid this problem when deploying content as the filename for detected dependencies uses the case from the Rmd source and that case is preserved in the deployment bundle The ondisk case is used when dependencies are manually included in a deployment It is already possible to provide a appFileManifest in deployApp to list the files that should be bundle I am often in the case like with gitignore or Rbuildignore it is easier to tell what we dont want at all instead of listing everything we want I would find it interesting to have a feature like that a rscignore file that would allow to always exclude some files to be bundled by rsconnect This is like Rbuildignore that prevent bundling in R CMD build We encountered this need in some scenarios where we have projects that push in RStudio Connect the development is done externally and the code is delivered in a gitlab when tagged it should be published in one of the url One person of the project in charge of deployment need to publish This require to recreate the dev env and publish the file Some files used in development do not need be be published but is is not easy to exclude them Publishing unneeded file is not a problem but can cause issues because they are scanned for dependencies and can increase the bundle size What do you think In a way this issue relates to about how to manage bundle files We currently use OpenSSLs MD algorithm to add content checksums in several places Generally we use this wrapper However some systems most notably RHEL can be placed into a FIPS compliant mode The version of OpenSSL on these systems does not include MD since its not considered a secure hash algorithm Consequently enabling FIPS mode on these systems removes the content checksums and with them the ability to publish content to Connect We should deprecate MD as a hash algorithm for content checksums SHA would be a better choice Internal note see support ticket Hi I was trying to understand where records of deployment are written to My use case is for internal use to deploy the pkgdown website to RStudio Connect Currently the rsconnect folder is inside the docs folder and not at the root of the package not an issue per se but I find something odd Doc is saying recordDir Directory where publish record is written Can be NULL in which case record will be written to the location specified with appDir However in the code we have where appPath can be modified to appPrimaryDoc or appSourceDoc so not always appDir Should the documentation be improve or is there something wrong where the record is written Just for sharing I use this to have the record file in the root directory r working directory is package root file rsconnectdeployApp docs the directory containing the content appFiles listfilesdocs recursive TRUE the list of files to include as dependencies all of them appPrimaryDoc indexhtml the primary file appSourceDoc docsindexhtml the source doc recordDir folder where to write deployement records appName appName name of the endpoint unique to your account on Connect appTitle My app title display name for the content account myuser your Connect username server myconnectservercom the Connect server see rsconnectaccounts forceUpdate TRUE Just in case there is something that I missed When deploying to Connect with writemanifest for projects depending on the BH library rsconnect errors as BH contains more than files Many tidyverse packages depends directly or indirectly on BH so perhaps a more sensible default is needed Thanks I am trying to publish a shinyApp with Python to shinyAppsio I added the following code in the appR file as instructed by the Rstudio community virtualenvcreatepyDevpython python virtualenvinstallpyDev packages cgensim pandasnumpynltkparamiko reticulateusevirtualenvpyDev required TRUE However when I publish the app I got the following error Required version of Python virtualenvspyDevbinpython cannot be used because another version of Python usrbinpython is already initialized for this process I can still open the published application but it will disconnect from server whenever it tries to run python codes I checked the log and the app is actually still running on Python 