So when being debugged by reactnativedebugger for whatever reason dispatching an action from a React Native Switch components onValueChange causes the error Actions must be plain objects Use custom middleware for async actions This error isnt displayed when I use Chrome with react devtools to debug Example screen and reducer js const Screen return Switch onValueChangevalue dispatchsetAlertAccessibilityid value js export const setAlertAvailability id availability dispatch getState const alerts getStatealerts alertsmapalert if alertid id alertenabled availability const actionHandler SETALERTAVAILABILITY state alerts state alerts export default functionstate initialState action const handler actionHandler actiontype return handler handlerstate action state React Native Debugger app version v React Native version Platform iOS simulator Is real device of platform NO Operating System macOS React Native Debugger app version React Native version Platform iOS Is real device of platform No simulator Operating System macOS Catalina When there is some kind of version mismatch between React Native with or without Expo and RND cannot connect you get this window Screenshot of React Native Debugger waiting for client connection Its very frustrating I only work in this area sporadically and it seems like every month I get this and have to piece together why its happening and which versions are out of date Could there be some kind of debug diagnostics info about what the responses were on the port Some kind of we tried to talk to port ABC but the response was declined with XYZ would be swell cc jonsamp who has previously listened to me gripe about RN versioning this old issue seems to be back But to me it seems like an RN Debugger bug It is in RN Debugger in the console log I see the error Im not using the Chrome extension seems to happen randomly in the RN Debugger console it says React DevTools Connection to RN closed same time app shows error below React Native Debugger app version React Native version Platform iOS Is real device of platform simulator Operating System macOS Runtime is not ready for debugging Make sure Packager server is running RCTFatal RCTCxxBridge handleError RCTCxxBridge start blockinvoke invocation function for block in facebookreactanonymous namespaceRCTObjcExecutorRCTObjcExecutoridRCTJavaScriptExecutor void NSError blockpointer std sharedptrfacebookreactMessageQueueThread std facebookreactExecutorDelegate RCTWebSocketExecutor executeJSCallargumentscallback blockinvoke RCTWebSocketExecutor sendMessageonReply blockinvoke dispatchcallblockandrelease dispatchclientcallout dispatchlaneserialdrain dispatchlaneinvoke dispatchworkloopworkerthread pthreadwqthread startwqthread as Chrome add a Cookies tab in developer toolss NetWork tab how can i use this feature in reactnativedebugger I dont no if this is the right place for this issue React Native Debugger app version React Native version Platform iOS Is real device of platform No Operating System macOS I am trying to use the library cparramusereduxapi to connect my app to the backend I have read the npm instructions and looked at the codesandbox example but cannot figure out how to implement it the correct way into my app This is my Configure store js file import createStore combineReducers applyMiddleware from redux import Posts from posts import Comments from comments import thunk from reduxthunk import logger from reduxlogger import useReduxApi apiReducer from cparramusereduxapi export const appReducer combineReducers api apiReducer other reducers als export const ConfigureStore const store createStore combineReducers posts Posts comments Comments appReducer applyMiddlewarethunklogger return store and this is my ActionCreatorsjs import as ActionTypes from ActionTypes import baseUrl from sharedbaseUrl import React useEffect useState from react import useReduxApi apiReducer from cparramusereduxapi export const addComment comment type ActionTypesADDCOMMENT payload comment export const postComment postId email name body dispatch const newComment postId postId email email name name body body return fetchbaseUrl comments method POST body JSONstringifynewComment headers ContentType applicationjson credentials sameorigin thenresponse if responseok return response else var error new ErrorError responsestatus responsestatusText errorresponse response throw error error throw error thenresponse responsejson thenresponse dispatchaddCommentresponse catcherror consolelogpost comments errormessage alertYour comment could not be posted nError errormessage export const fetchPosts dispatch dispatchpostsLoadingtrue const api apiCall useReduxApiposts return useEffect apiCall endpoint thenresponse ifresponseok return response else var error new ErrorError responsestatus responsestatusText errorresponse response throw error error var errmess new Errorerrormessage throw errmess thenresponse responsejson thenposts dispatchaddPostsposts catcherror dispatchpostsFailederrormessage export const postsLoading typeActionTypesPOSTSLOADING export const postsFailed errmess typeActionTypesPOSTSFAILED payloaderrmess export const addPosts posts typeActionTypesADDPOSTS payloadposts export const fetchComments dispatch return fetchbaseUrl comments thenresponse ifresponseok return response else var error new ErrorError responsestatus responsestatusText errorresponse response throw error error var errmess new Errorerrormessage throw errmess thenresponse responsejson thencomments dispatchaddCommentscomments catcherror dispatchcommentsFailederrormessage export const commentsFailed errmess typeActionTypesCOMMENTSFAILED payloaderrmess export const addComments comments typeActionTypesADDCOMMENTS payloadcomments I have tried implementing this method with the library in the const fetchPosts but I am getting this error Error It looks like you are passing several store enhancers to createStore This is not supported Instead compose them together to a single function createStore DDocumentsjobapplicationtasksinterfellnodemodulesreduxesreduxjs ConfigureStore DDocumentsjobapplicationtasksinterfellsrcreduxconfigureStorejs export const ConfigureStore const store createStore combineReducers posts Posts comments Comments I am new to react and have never used this library before so I am a bit lost on how to do the get and post log record lines number not correct the right lines number is React Native Debugger app version FILL THIS OUT React Native version Platform iOS Is real device of platform no Operating System Mac OS React Native Debugger There are many bugs I want to fix an old version because it has affected the normal work React Native Debugger app version React Native version Platform iOS Is real device of platform No Operating System macOS Related to and a recent update to reactnativedebugger has stopped the network inspect output from showing The network inspect output was working fine on a previous version with the same reactnative version It also happens with Android and also happened before I updated to macOS Catalina Downgrading to v causes network inspect to work again but incidentally still occurs on v This PR is integration for xstatedevtools browser extension Implemented in a simple way like The XState core is used REDUXDEVTOOLSEXTENSIONconnect so it have simple logging feature with reduxdevtools The xstatedevtools wrapped the method and provided machine argument For RNDebugger I added useXStateViz devTools option allows users to choose simple logging on reduxdevtools or the visualizer of xstatedevtools js import useMachine from xstatereact const current send useMachinemachine devTools useXStateViz true I think the final goal will be integrate xstateviz into reduxdevtoolscore it can be made more features that reduxdevtoolsextension has Before submitting the issue Youre using the latest version of reactnativedebugger Yes You have read the documentation Yes For the feature requests issues of devtools integration like React Redux Apollo you should submit an issue to that repo This appears to be a bug with the debugger Please provide the following information for bug report or question if you can provide a minimal example project or screenshot or even video would be helpful for reproduce the problem You can just removed these if you want to submit a feature request React Native Debugger app version React Native version Platform iOS Is real device of platform Reproduces in simulator and on devices Operating System iOS app debugging on MacOS Generally devs are using iOS variants in the simulator Love reactnativedebugger Please consider supporting our collective Noted Issue I work on a commercial application that has been using the React Native Debugger for at least two years When we upgraded to React Native we found that suddenly touch events are not seen by the application in React Native views when the React Native Debugger is attached Touch events work fine in native views We have resorted to telling our devs to use Chrome Tools to debug but many would still prefer to use the React Native Debugger If the debugger is not attached the application operates normally 