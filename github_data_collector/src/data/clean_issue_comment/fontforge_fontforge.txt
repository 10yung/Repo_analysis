Opening Libertinus Serif Italic in FontForge and saving it immediately CTRLS without touching any glyph results in some automatic changes There are about a dozen of them here is one example Anything between is removed and replaced by StartChar longs Encoding Width GlyphClass Flags MW LayerCount Fore SplineSet m m l c c c c c c c c l c l c c c c c c c c c c c EndSplineSet Refer N EndChar The font compiles just fine with or without these automatic changes Im wondering how I can disable such changes as they make it harder to contribute to the upstream font repository Or maybe these automatic changes are in fact desirable and should be changed in the upstream font Im using FontForge on Fedora pe feature file merging the feature fails Add an option to skip the erroring out in merging feature file This helps with feature files of Indic scripts with many hundreds of ligatures some of the glyphs may not be present in all fonts yet the feature file can be reused This is WIP patch Completed extended the fontmergeFeature python interface and associated C code with documentation update TODO extending the Merge Feauture menu in GUI Motivation Main reason for this pull request is that Indic fonts can have many hundreds of ligatures conjuncts formed from many base glyphs and the OpenType featurefile holds the lookup rules This feature file can currently be reused in Fontforge based workflow if the new font have exactly same or more glyphs But if the font has lesser glyphs usually with a variant such as Bold of an existing font the featurefile cannot be merged because Fontforge taps out with error Reference to a nonexistent glyph name on line of fontfeaturefea shr No substitution specified on line of fontfeaturefea There were errors when parsing the feature file and the features have not been applied This enhancement preserves the warnings but skips the error so that applicable lines of the feature file are applied Suggestionscomments required Does this feature make sense and is the approach technically good Not happy with the flag name ignorenafeature something more intuitive required Any guidance on making the flag visible when chosen from the GUI menu Provide a description of the change here See also Type of change What kind of change is this Remove non applicable types If this fixes a bug please reference the issue eg Fixes New feature Load the attached font select the letter change weight remove anything in fuzz embolden by testzip Based on sources from UTCMLDGDK Internal Error overlap The end of the monotonic does not match that of the containing spline Internal Error overlap The end of the monotonic does not match that of the containing spline Internal Error overlap The end of the monotonic does not match that of the containing spline Internal Error overlap The end of the monotonic does not match that of the containing spline Internal Error overlap The end of the monotonic does not match that of the containing spline Internal Error overlap The end of the monotonic does not match that of the containing spline Internal Error overlap The end of the monotonic does not match that of the containing spline Internal Error overlap Winding number did not return to when y Internal Error overlap Winding number did not return to when y Internal Error overlap Winding number did not return to when y Internal Error overlap Winding number did not return to when y Internal Error overlap Winding number did not return to when y Internal Error overlap The start of the monotonic does not match that of the containing spline mallocconsolidate invalid chunk size Aborted core dumped hi fontforge skew function could be improved to support skew angle its a good idea to to merge subfunction below into one new skew function with skew angle support fontforge I have two cases two different native languages one of them works as a normal abc but some of the sane sounds have different figures the other one is a silabary and a mix of vocals and consonants but different figure as in hiragana I have watched some pngs that say there are to drawings for the same sound a Watching another drawing it says that is something like hiraganakatakana with vowels consonants and a table like that So my question is I just start drawing them in the places of A B C for lower case and uppercase or should I first choose the code point of the character becuse as far as I know there is no codes defined for those symbols because they are indigenous langs so how to approach this I gess for start it is ok to have only the drawings of each char After I updated the system version to Catalina I found that I was no longer able to use FontForge It seems that it doesnt ask for the authority to access folders and it shows below in each folder when I try to find font file to open img width altSnip src img width altSnip src img width altSnip src Since FontForge doesnt request authority of accessing I couldnt find it in system privacy safety setting and authorize it I dont know why but the buttons under the authorized apps list are grey and not available to click which might mean that I couldnt add fontforge to the list manually OS version is macOS Catalina FontForge version is Thanks for your time And this is a security risk I doubt too many people installing eg fontforgegit from the AUR think about how many people can push And remember since none of us active developers are in the habit of signing our commits anyone with push access can push in one of our names Just because nothing has happened yet doesnt mean nothing will happen people can push to the head of the repository Thats random people were trusting to all have great security and not to troll the repository and not to sell their account to someone who would troll the repository In the new year we should cut down severely on those who have push access If this results in me myself losing access thats the a cost Im willing to bear if it means that only a select few can merge PRs Though I would argue on my behalf that given how active I am and that I develop all my fonts on master I should have access so I can quickly revert bad changes as Ive done in the past Im not saying any of the are bad people Im just saying that this is wildly insecure To edify lets see how little had to be contributed to get access cicku authored a single merge commit a d b c d a b bd f which updated a translation He now has seemingly lifelong push access monkeyiq was an employee and makes a point of ignoring requests for comment He definitely should lose access I love behdad but he doesnt even seem to have made any commits at all to the project Some contributed a lot like blipvert The problem is they last contributed in Ditto for mskala who can do even more destruction as they are an Owner they last contributed in We need to come up with criteria for having push access Like being a Wikipedia admin Id say the two most important criteria are needing the extra power it grants you over normal members and actually using that power to some degree in the present The Core team is a good start for who should have push access Id add myself to that duh joy skef Joe and maybe one or two others that arent coming to mind right now Very tired this is my last email of the night I believe this was originally a bug but due to how long it has endured it has now become a feature Consider if OpenCharsInNewWindow be false and if a char be doubleclicked it will open a new tab in an existing window But if all the same is true except that the user pressed Return instead a new window is opened despite the setting of OpenCharsInNewWindow So the bug is that theres no way to open new CharView tabs from the keyboard when OpenCharsInNewWindow is false I decided ShiftReturn is just as good as any other way Type of change What kind of change is this Remove non applicable types If this fixes a bug please reference the issue eg Fixes Nonbreaking change This is not yet ready for merge Im opening this to get comment hopefully Ill at least need this or something like this to get COLRCPAL working This fixes a crash if you add fontlevel layers when a glyph has its own layers It correctly moves the glyphlevel layers and their data after the fontlevel layers I also need to make it so that multilayer that is to say fonts where glyphs can have their own number of extra layers fonts can have qudaratic layers so as you can see Im removing a lot of the rules and I added a QC marker to the UI for type fonts More UI work certainly needs to be done Im opening this now and early because if we cant even agree to do this simple stuff COLRCPAL support will never get approved An example file Compare to master especially when adding glyphonly layers in the CharView and fontlevel layers in laquoFont Info rarrLayers raquo COLRCLAPWIPsfd Apparently there is a desire to eventually get FontForge back to a BSDcompatible state This is something the project has recently made great but seemingly unnoted progress towards And the current state of the messaging is a little embarrassing Given the desire this is what the current LICENSE file says about GPL These files were created under the GPL License fontforge b aclocalm configuredynamic configurestaticin configguess configuredynamicin ltmainsh configsub configurein Makefiledynamicin configure configurestatic Makefilestaticin fontforge bfontforge Makefiledynamicin Makefilestaticin fontforge bgdraw Makefiledynamicin Makefilestaticin fontforge bgutils giomimec Makefiledynamicin Makefilestaticin fontforge binc fontforgeconfighin fontforge bplugins ANALYZEMAPCOM Makefilein fontforge bUnicode Makefiledynamicin Makefilestaticin Obviously almost all of these have been removed by jtanxs CMake work fontforgeconfighin now claims a BSD license at the top in contrast with the statement in LICENSE but has commented out lines at the end that presumably arent BSD strictly speaking Perhaps those could be removed giomimec is now ggiomimec and may be the only remaining stumbling block The authors and therefore copyright holders of each commit from when JoesCat moved the function out of giomimec are Joe Da Silva Joe JoesCat Khaled Hosny khaledhosny Jeremy Tan jtanx Skef Iterum skef Thomas Shinnick tshinnic Adrien T tar adrientetar Suppose we add a section to LICENSE for copyright holders of ggiomimec to relicense their portion as BSD by adding a statement of agreement via a PR Then we ask each author above to do so Then assuming that has happened we change the license at the top of the file to BSD with a note that it is also available under GPL and pointing to the LICENSE file notations Assuming the Open Group License is more or less BSD equivalent would the project then be validly BSD at least by its own standards 