 Im submitting a check one with x bug report x feature request support request Please do not submit support requests here use one of these channels or Current behavior Plugin is not maintened Docs says Ionic Native utilizes a maintained fork of the original cordovapluginbraintree But the plugin has not been updated for more than years Expected behavior Ionic native should provide working and up to date plugins propose alternatives or update docs Other information In ionic and cordova the pluguin not working The config fileresxmlconfigxml path is incorrect There is issues and a pull request but no one is merging I have applied the fix but it still does not work Plus there is no support for Braintree v for android to allow PSD Strong Customer Authentication I have tried using fileReader and base native but it is not working I have used same in ionic I think it is cause of webview ionic or earlier we used to have file Im submitting a check one with x X bug report feature request support request Please do not submit support requests here use one of these channels or Current behavior Describe how the bug manifests it is crashing when we choose DATAURL and it is not working with FILEURI Expected behavior Describe what the behavior would be without the bug It should not crash provide base Steps to reproduce If you are able to illustrate the bug or feature request with an example please provide steps to reproduce Repo When we choose DATAURL it is crashing timeout timeout Related code insert any relevant code here Other information List any other information that is relevant to your issue Stack traces related issues suggestions on how to fix Stack Overflow links forum links etc Ionic info run ionic info from a terminalcmd prompt and paste output below Ionic Ionic CLI usrlocallibnodemodulesionic Ionic Framework ionicangular angulardevkitbuildangular angulardevkitschematics angularcli ionicangulartoolkit Cordova Cordova CLI cordovalib Cordova Platforms ios Cordova Plugins cordovapluginionickeyboard cordovapluginionicwebview and other plugins Utility cordovares not installed nativerun update available System iosdeploy iossim NodeJS v usrlocalbinnode npm OS macOS High Sierra Xcode Xcode Build version B Hello This is Solee Choi working for a Korean IT Company which is called SIOT We offer payment API like Stripes and have been developing some modules for reactnative flutter capacitor etc Now we are working on ionic cordova plugin and trying to add iamportcordova plugin on ionicnative to make developers use our plugin on ionic environment It would be pleasure for you to allow iamportcordova plugin Thanks Im submitting a check one with x bug report feature request support request Please do not submit support requests here use one of these channels or Current behavior Describe how the bug manifests Expected behavior Describe what the behavior would be without the bug Steps to reproduce If you are able to illustrate the bug or feature request with an example please provide steps to reproduce Related code insert any relevant code here Other information List any other information that is relevant to your issue Stack traces related issues suggestions on how to fix Stack Overflow links forum links etc Ionic info run ionic info from a terminalcmd prompt and paste output below insert the output from ionic info here Im submitting a check one with x bug report X feature request support request Please do not submit support requests here use one of these channels or Current behavior ionicnativefirebaseauthentication doesnt export getCurrentUser Expected behavior why doesnt ionicnativefirebaseauthentication export getCurrentUser of cordovapluginfirebaseauthentication Is there a reason or different way to check if a user is already logged Im submitting a check one with x X bug report feature request support request Please do not submit support requests here use one of these channels or Current behavior Ionic native http client JSON serializer behaves differently in iOS than in Android httpClientsetDataSerializerjson Will create a different payload depending on the platform the order of the fields in the serialized JSON changes For iOS it seems that the order is alphabetically inverse Z to A for the field keys both in root and in nested level For Android the order of the fields in the object is preserved Expected behavior The serialization is the same regardless of the platform Steps to reproduce Create a component with a httpService Set serializer to json Make a post request The content can be verified in the server side if printing the body as it comes the serialization will be seen as different Related code import HTTP from ionicnativehttpngx export class SomeService constructorprivate httpClient HTTP async postRequesturl string postBody object Promiseobject thishttpClientsetDataSerializerjson try return await thishttpClientposturl postBody null catch e throw new MyCustomErrore Other information In order to work around the issue we set the serializer to utf stringify the payload and add a ContentType applicationjson header thishttpClientsetDataSerializerutf await thishttpClientposturl JSONstringifypostBody ContentType applicationjson Ionic info run ionic info from a terminalcmd prompt and paste output below Ionic Ionic CLI usrlocallibnodemodulesionic Ionic Framework ionicangular angulardevkitbuildangular angulardevkitschematics angularcli ionicangulartoolkit Cordova Cordova CLI cordovalib Cordova Platforms android ios Cordova Plugins cordovapluginionickeyboard cordovapluginionicwebview and other plugins Utility cordovares not installed nativerun update available System iosdeploy iossim NodeJS v usrlocalCellarnode binnode npm OS macOS Mojave Xcode Xcode Build version C Hi I have backend API like so registerFcmTokenuserIdToken string firebaseInstanceId string fcmToken string PromiseConfirmationResponseModel code Can you tell me what should I send here firebaseInstanceId I use FirebaseX plugin here I can generate thisfcmToken await thisfirebasegetToken But what is firebaseInstanceId Firebase doc says this But what is the equivalent of FirebaseX I can see this on Cordova plugin But it is not on your Typescript native wrapper Any workaround Im submitting a check one with x x bug report feature request support request Please do not submit support requests here use one of these channels or Current behavior Obviously we dont want to use any of this hardware when server side rendering But if we have a unified code base if you do import BarcodeScanner from ionicnativehttp for example youre going to run into node issues when you visit any page Imports are static so everything is processed as long as the require tree hits this file Expected behavior Enddistribution files should stick to CommonJS imports and exports along with declaration files Steps to reproduce Have serverts as an entry point to your SSR logic In that import BarcodeScanner Try to visit the server even if you dont use BarcodeScanner and of course you wont its the server Related code Troublesome code affecting all of the plugins I use is in the indexjs files Example nodemodulesionicnativebarcodescannerindexjs has import IonicNativePlugin cordova from ionicnativecore which will cause SyntaxError Unexpected token import Other information The fix is quite easy When publishing to NPM compile these files down to ES Current workaround I use is messy but I centralized all my hardware plugins into a single hardwarets file that automagically only imports when running on the client while still keeping type support typescript const LaunchReviewImport async await importionicnativelaunchreviewLaunchReview const BarcodeScannerImport async await importionicnativebarcodescannerBarcodeScanner const HTTPImport async await importionicnativehttpHTTP type UnpromiseT extends Promiseany T extends Promiseinfer U U never export const LaunchReview UnpromiseReturnTypetypeof LaunchReviewImport typeof window undefined null as any requireionicnativelaunchreviewLaunchReview export const BarcodeScanner UnpromiseReturnTypetypeof BarcodeScannerImport typeof window undefined null as any requireionicnativebarcodescannerBarcodeScanner export const HTTP UnpromiseReturnTypetypeof HTTPImport typeof window undefined null as any requireionicnativehttpHTTP Again the nulls dont matter here because all of this hardware is used on event handlers which by definition only run on the client 