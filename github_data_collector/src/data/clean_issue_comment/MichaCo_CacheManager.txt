Im using cache both in memory and redisand Im trying to reload cache using the following steps clear regionwhich is already loaded from app start add my new cache data It works in most casesbut I got a strange thing for Failed to add item because it exists sometimes logs are as below TRACEserviceCacheManagerCoreBaseCacheManagerClear region SysRegiontraceidrequestidGoldDustSyscfgCacheLoaderLoad BaseCacheManager ClearRegion MicrosoftLoggerAdapterLog TRACEserviceCacheManagerCoreBaseCacheManagerClear region SysRegion in handle innerMemoryCachetraceidrequestidGoldDustSyscfgCacheLoaderLoad BaseCacheManager ClearRegion MicrosoftLoggerAdapterLog TRACEserviceCacheManagerCoreBaseCacheManagerClear region SysRegion in handle redisCachetraceidrequestidGoldDustSyscfgCacheLoaderLoad BaseCacheManager ClearRegion MicrosoftLoggerAdapterLog TRACEserviceCacheManagerCoreBaseCacheManagerClear region SysRegion notifies backplane clear region traceidrequestidGoldDustSyscfgCacheLoaderLoad BaseCacheManager ClearRegion MicrosoftLoggerAdapterLog TRACEserviceCacheManagerCoreBaseCacheManagerAdd SysRegionc n expDefault lastAccess startedtraceidrequestidCacheManagerHelperAdd BaseCacheManager AddInternal MicrosoftLoggerAdapterLog DEBUGserviceCacheManagerRedisRedisCacheHandleDB Failed to add item SysRegionc n expAbsolute lastAccess because it existstraceidrequestidRetryHelperRetry RedisCacheHandle Set MicrosoftLoggerAdapterLog TRACEserviceCacheManagerCoreBaseCacheManagerEvict SysRegionc n from other handles excluding handle traceidrequestidBaseCacheManager AddInternal BaseCacheManager EvictFromOtherHandles MicrosoftLoggerAdapterLog DEBUGserviceCacheManagerCoreBaseCacheManagerEvicting SysRegionc n from handle innerMemoryCachetraceidrequestidBaseCacheManager EvictFromOtherHandles BaseCacheManager EvictFromHandle MicrosoftLoggerAdapterLog TRACEserviceCacheManagerCoreBaseCacheManagerAdd SysRegionc n expDefault lastAccess startedtraceidrequestidCacheManagerHelperAdd BaseCacheManager AddInternal MicrosoftLoggerAdapterLog DEBUGserviceCacheManagerRedisRedisCacheBackplaneBackplane is sending messages skippedtraceidrequestidExecutionContextRunInternal SendMessagesb dMoveNext MicrosoftLoggerAdapterLog DEBUGserviceCacheManagerRedisRedisCacheHandleDB Failed to add item SysRegionc n expAbsolute lastAccess because it existstraceidrequestidRetryHelperRetry RedisCacheHandle Set MicrosoftLoggerAdapterLog Im using aspnetcore with cachemanager This is my config code Manager CacheFactoryBuildenjoyDefaultCache options optionsWithMicrosoftLoggingloggerFactory log WithUpdateModeCacheUpdateModeUp WithMicrosoftMemoryCacheHandleinnerMemoryCache WithExpirationExpirationModeAbsolute TimeSpanFromHours EnableStatistics EnablePerformanceCounters And WithRedisConfigurationCONFIGKEYREDIS config var rds configWithAllowAdmin WithDatabase WithEndpointendPointAddressToString endPointPort if stringIsNullOrWhiteSpaceredisConfigOptionsPassword rdsWithPasswordredisConfigOptionsPassword WithMaxRetries WithRetryTimeout WithJsonSerializer rediscachehandle WithRedisBackplaneCONFIGKEYREDIS redis WithRedisCacheHandleCONFIGKEYREDIS true redis WithExpirationExpirationModeAbsolute TimeSpanFromDays EnableStatistics EnablePerformanceCounters So please give some helpthanks Hello Im using Cachemanager core v with the following config var definition new CouchbaseClientDefinition configurationGetSectionCoucheDbBinddefinition var clientConfig new ClientConfigurationdefinition ICacheManagerstring CacheInstance CacheFactoryBuildstringsettings settings Memory cach WithMicrosoftMemoryCacheHandle WithExpirationExpirationModeSliding TimeSpanFromMinutes And couch cach WithCouchbaseConfigurationcouchedb clientConfig WithJsonSerializer WithMaxRetries WithRetryTimeout WithCouchbaseCacheHandlecouchedb serviceCollectionAddSingletonCacheInstance In my code below I use the cache instance to check for a key if it doesnt exist its then added to the cache the cacheExists and cacheadd are working fine and the the item is added also in the couche db as a json doc see joined file but the Get function throws a nullReferenceException and I fail to figure out why Code snippet if cacheManagerExistsitemkey var cachedItem cacheManagerGetitemkey else cacheManagerAdditemkey itemvalue Exception SystemNullReferenceException Object reference not set to an instance of an object at CacheManagerCoreInternalBaseCache GetString key couch data snipcouch Thanks in advance I am using CacheManager for layers of caching to increase speed across my applications Im using InMemory cache along with Redis as a back plane Im working with invalidating the local inmemory cache data I have subscribed to the item update and remove event on redis cache but my application does not receive any events When I run the command it shows that it has already subscribed to the channel which can be seen from the result of the command given below localhost pubsub channels BooksleeveMasterChanged CacheManagerBackplane The event registration code can be seen below ICacheManagerobject manager GetCacheInstance managerOnRemoveByHandle EventHandlerRemove public void EventHandlerRemoveobject sender CacheItemRemovedEventArgs e This is cache registration var manager CacheFactoryBuildobjectsettings settingsWithJsonSerializer settings WithSystemRuntimeCacheHandle And WithRedisConfigurationredis config configWithAllowAdmin WithDatabase WithEndpointlocalhost WithRedisBackplaneredis WithRedisCacheHandleredis true settingsWithUpdateModeCacheUpdateModeNone Is there anything wrong with this code or do I require some additional configuration for this to make it work what I want to achieve I have Redis cache and multiple services are using this for invalidating their data using the events of this Redis cache Each service have its own local inmemory cache related to the data in the main Redis cache when the data is modified in the Redis cache each local cache will receive an event of data updated or removed from Redis cache and hence they will remove their local copy too to avoid serving stale data Since having that argument means the handle requires a serializer for sure rather than if it say read from the configuration we could provide the same error visibility for handles that miss the attribute just by checking the arguments on the ctor Hi I am using AWS Redis service and I have a primary server and readonly replica In my app most of the cache usage is readonly so I tried to configure cache manager to have instances one for Write and another for Read But while instantiating the READONLY one it fails with the message No writeable endpoint found Is there a way to achieve what I want My main purpose is that the replicas sit there only waiting for the primary to go down I would like to use those to free some of the load of the primary node Thanks I am wrapping the BaseCacheManager object to customize key values Several methods allow overrides Get Put Add etc However there are some really nice helper methods that cannot be overridden Example of the wrapper in an external project Example do flagging addtl helper methods in BaseCacheManager as virtual Since I am new to the project I may be overlooking something But my goal is to modify the key before any cache requests At first thought hooking into the various events for cache operations OnAdd OnRemove etc I could do this but they key is readonly here and thats probably a safety measure Do you see any issue with marking the additional caching methods in the BaseCacheManager class as virtual I could submit a PR if not I only have a few hours of familiarity with this project so I dont know the implications this may have on the design strategy of the CacheManager project NET Core x introduces the new builtin SystemTextJson namespace which has a higher performance than the NewtonsoftJson dependency of CacheManagerSerializationJson It would be nice to add it later Ive just started evaluating this library and I have a couple of questions Is there a way to control the amount of metadata created in a particular storeFor caches of small objects the default metadata is quite large being able to minimise or reduce the metadata if a feature is not used would be useful For a typed cache is the fully qualified type name needed or could it be inferred from the cache type It would be great to be able to registerinject a functor per type for key construction so that the key can be inferred from the type instance rather than having to explicitly provide it run AspnetCoreWebApppage error No instance of ILoggerFactory found in serviceCollection change servicesAddCacheManagerConfigurationConfiguration cfg cfgWithMicrosoftLoggingservices to servicesAddCacheManagerConfigurationConfiguration is ok I have both in my project anyways which brings me to the question does one have an advantage over the other Second question does CacheManager work with MicrosoftExtensionsCachingMemory 