from Line comments to General comments Panic in the processing of the Attribute of the endpoint that refers to the parent of the parent Example design calc parent ancestor go package design import goadesigngoav dsl var Serviceancestor func Methodshow func Payloadfunc Attributep HTTPfunc GETancestorp var Serviceparent func HTTPfunc Parentancestor Methodshow func Payloadfunc Attributex HTTPfunc GETparentx var Servicecalc func HTTPfunc Parentparent Methodadd func Payloadfunc Attributea HTTPfunc GETadda shellsession goa gen calcdesign exit status panic runtime error invalid memory address or nil pointer dereference signal SIGSEGV segmentation violation code x addr x pc x c a goroutine running goadesigngoav exprdupperDupAttribute xc e b x xc Usersikawahagosrcgoadesigngoaexprdupgo x goadesigngoav exprdupperDupType xc e b x d b xc c x x Usersikawahagosrcgoadesigngoaexprdupgo x goadesigngoav exprDup x d b xc c xc c x Usersikawahagosrcgoadesigngoaexprdupgo x f goadesigngoav exprNewMappedAttributeExpr xc e e xc de Usersikawahagosrcgoadesigngoaexprmappedattributego x d goadesigngoav exprHTTPEndpointExprPathParams xc x Usersikawahagosrcgoadesigngoaexprhttpendpointgo x goadesigngoav httpcodegenServicesDataanalyze xc b xc a x Usersikawahagosrcgoadesigngoahttpcodegenservicedatago x e goadesigngoav httpcodegenServicesDataGet xc b x b x x Usersikawahagosrcgoadesigngoahttpcodegenservicedatago xb goadesigngoav httpcodegenserverFile xc ef f x xc a xc d Usersikawahagosrcgoadesigngoahttpcodegenservergo x goadesigngoav httpcodegenServerFiles xc ef f x x bcff xc bccd x x Usersikawahagosrcgoadesigngoahttpcodegenservergo xcf goadesigngoav codegengeneratorTransport xc ef f x xc a x x x x x x x Usersikawahagosrcgoadesigngoacodegengeneratortransportgo x goadesigngoav codegengeneratorGenerate x ffeefbff e x x ef x x x x x x Usersikawahagosrcgoadesigngoacodegengeneratorgeneratego x e mainmain Usersikawahagosrcgithubcomikawahacalcgoa maingo x c What caused the bug We have a test case with a similar design but this test worked It seems that NewMappedAttributeExpr panics by duplicating attributes containing nil go DupType creates a copy of the given data type func d dupper DupTypet DataType DataType if t Empty Dont dup Empty so that code may check against it return t switch actual ttype case Primitive return t case Array return ArrayElemType dDupAttributeactualElemType case Object res Object for nat range actual fmtPrintf tnat v n nat if natAttribute nil fmtPrintln resSetnatName dDupAttributenatAttribute return res shellsession snip nat exprNamedAttributeExprNamep AttributeexprAttributeExprnil panic runtime error invalid memory address or nil pointer dereference signal SIGSEGV segmentation violation code x addr x pc x c a This is unrelated to recent changes to headers processing but I hope itd be fixed Its not fixed yet and I dont know the minimal example but there is a real example go HTTPfunc POSTrestgetStuff ResponseStatusOK withRespHeadersSuccess Responsebadrequest StatusBadRequest withRespHeadersValidation error Responsenotfound StatusNotFound withRespHeadersNot found Responseratelimit StatusTooManyRequests withRespHeadersToo many requests Rate limit exceeded Responseinternal StatusInternalServerError withRespHeadersInternal Server Error Responsenotimplemented StatusNotImplemented withRespHeadersNot implemented func withRespHeadersdesc string func return func Descriptiondesc HeaderrLimitLimitXRateLimitLimit Int HeaderrLimitRemainingXRateLimitRemaining Int HeaderrLimitResetXRateLimitReset Int Results in panic panic runtime error invalid memory address or nil pointer dereference signal SIGSEGV segmentation violation code x addr x pc x a fcd goroutine running goadesigngoav codegenAttributeContextIsPrimitivePointer xc aff x f f xb xc b x UsersxlabDocumentsdevgopkgmodgoadesigngoav v codegentransformergo x d goadesigngoav httpcodegenextractHeadersfunc x f f xb x f f x x xc e xa xa UsersxlabDocumentsdevgopkgmodgoadesigngoav v httpcodegenservicedatago x e goadesigngoav codegenWalkMappedAttr xc dcf xc x x a UsersxlabDocumentsdevgopkgmodgoadesigngoav v codegenwalkgo x goadesigngoav httpcodegenextractHeaders xc dcf xc b xc aff xc ca x xc e x UsersxlabDocumentsdevgopkgmodgoadesigngoav v httpcodegenservicedatago x b goadesigngoav httpcodegenbuildErrorsData xc xc f e xc e x xc f UsersxlabDocumentsdevgopkgmodgoadesigngoav v httpcodegenservicedatago x goadesigngoav httpcodegenServicesDataanalyze xc a xc ad x UsersxlabDocumentsdevgopkgmodgoadesigngoav v httpcodegenservicedatago x a goadesigngoav httpcodegenServicesDataGet xc a x c x xc ccc UsersxlabDocumentsdevgopkgmodgoadesigngoav v httpcodegenservicedatago xb goadesigngoav httpcodegenserverFile xc x f xc ad xc UsersxlabDocumentsdevgopkgmodgoadesigngoav v httpcodegenservergo x goadesigngoav httpcodegenServerFiles xc x f x c c c xc f x x UsersxlabDocumentsdevgopkgmodgoadesigngoav v httpcodegenservergo xcf goadesigngoav codegengeneratorTransport xc x f xc a x x x x x x x UsersxlabDocumentsdevgopkgmodgoadesigngoav v codegengeneratortransportgo x goadesigngoav codegengeneratorGenerate x ffeefbffa x x b df x x x x x x UsersxlabDocumentsdevgopkgmodgoadesigngoav v codegengeneratorgeneratego x e mainmain The code in question go IsPrimitivePointer returns true if the attribute with the given name is a primitive pointer in the given parent attribute func a AttributeContext IsPrimitivePointername string att exprAttributeExpr bool if at attFindname at nil atType exprAny atType exprBytes panics here return false if aPointer return true if aIgnoreRequired return false return attIsPrimitivePointername aUseDefault Hello Im trying to generate API spec for a design like this go package design import goadesigngoav dsl var APIAPITest func var ServiceServiceTest func MethodMain func Payloadfunc Attributefield String func Example xffff Attributefield String func Example xffff Attributefield String func Example xf b e d d dafa ebde f f Attributefield String func Example xf b e d d dafa ebde f f HTTPfunc GET The problem is that the generated Swagger spec looks like this yaml ServiceTestMainRequestBody title ServiceTestMainRequestBody type object properties field type string example xffff field type string example xffff field type string example xf b e d d dafa ebde f f field type string example xf b e d d dafa ebde f f example field xffff field xffff field xf b e d d dafa ebde f f field xf b e d d dafa ebde f f As you can see for some reason field is treated as a number Which will affect the generated documentation later And for some reason field is treated correctly So thats clearly a bug Im not sure why Goa tries to dynamically detect type if it is declared as String already in the spec raphael I need your help at this point I have an endpoint that receives and saves an array of files This is the endpoint Payload var FileBatchInputPayload TypeFileBatchInputPayload func Attributefiles ArrayOfFile uploaded files Requiredfiles But it gives me this error goa app controllersgo cannot use tmpFiles type interface as type multipartFileHeader in assignment The generated code where the error is unmarshalAddBatchPurchaseOrderFilesPayload unmarshals the request body into the context request data Payload field func unmarshalAddBatchPurchaseOrderFilesPayloadctx contextContext service goaService req httpRequest error var err error var payload fileBatchInputPayload rawFiles reqForm files tmpFiles make interface lenrawFiles for i i lenrawFiles i tmp err interfacenil errornil if err nil err goaMergeErrorserr goaInvalidParamTypeErrorfiles rawFiles interface break tmpFiles i tmp payloadFiles tmpFiles line if err nil return err if err payloadValidate err nil Initialize payload with private data structure so it can be logged goaContextRequestctxPayload payload return err goaContextRequestctxPayload payloadPublicize return nil Im using goa v Thanks Followon to When adding a validator to an attribute containing the Metastructfieldtype call the generated code fails to compile genhttpbugservertypesgo cannot use bodyBug type typesBug as type string in argument to goaValidatePattern genhttpbugclientcligo cannot use bodyBug type typesBug as type string in argument to goaValidatePattern It seems like this could be a pretty simple fix What appears to be missing is simple type conversions If we have a custom type it is almost always going to be defined as type MyType builtin where builtin is one of the base types like string or int Given that the conversion code could be extrapolated from the base type in the Attribute For example go Attributebug String bug func Metastructfieldtype typesBug githubcomoutdoorsygoabugtypes MinLength MaxLength Pattern The attribute knows it is a String base type with an override of typesBug The generator could check that base type and generate the appropriate conversions where necessary Currently we have go if bodyBug nil err goaMergeErrorserr goaValidatePatternbodybug bodyBug What we appear to need is go if bodyBug nil err goaMergeErrorserr goaValidatePatternbodybug stringbodyBug Ive attached an updated example zip file that demonstrates the issue This change would need to affect all validators goabugzip When Body DSL is specified in the response of HTTP transport the behavior seems strange I did not know the cause so I will report it Base design go var CalcResult ResultTypeapplicationvndcalcjson func Attributex Int Attributey Int Requiredx y var Servicecalc func DescriptionThe calc service performs operations on numbers Methodadd func Payloadfunc Attributea Int Attributeb Int Requireda b ResultCalcResult HTTPfunc GETaddab ResponseStatusOK Server response shellsession curl iii XGET HTTP OK ContentType applicationjson Date Wed Dec GMT ContentLength x y Its OK Add Body DSL to the HTTP Response go snip Methodadd func Payloadfunc Attributea Int Attributeb Int Requireda b ResultCalcResult HTTPfunc GETaddab ResponseStatusOK func Bodyfunc Attributex Server response shellsession curl iii XGET HTTP OK ContentType applicationjson Date Wed Dec GMT ContentLength X Y I was expecting x to return but X Y returned The key is capitalized for some reason In addition when there is View DSL in ResultType go var CalcResult ResultTypeapplicationvndcalcjson func Attributex Int Attributey Int Requiredx y Viewdefault func Attributex Attributey Viewsmall func Attributex var Servicecalc func DescriptionThe calc service performs operations on numbers Methodadd func Payloadfunc Attributea Int Attributeb Int Requireda b ResultCalcResult HTTPfunc GETaddab ResponseStatusOK func Bodyfunc Attributex goa gen goa gen calcdesign exit status template responseencoder executing response at vsbInitName nil pointer evaluating codegenInitDataName DSL code var Serviceuser func MethodShow func PayloadString user id GRPCfunc generate code BuildShowPayload builds the payload for the user Show endpoint from CLI flags func BuildShowPayloaduserShowMessage string string error var err error var message userpbShowRequest if userShowMessage err jsonUnmarshal byteuserShowMessage message if err nil return nil fmtErrorfinvalid JSON for message example of valid JSON ns n field Ipsa beatae laudantium quod similique n v messageField return v nil build dump outpu message gengrpcuserclientcligo cannot use nil as type string in return argument What does this PR change Brings in Zero into the DSL and the gRPC transformation logic This means that if no zero value is defined then just put the default zero value but if one is defined then we set that instead ie I set a zero val of I get a protobuf request in the zero value of that field defined is now reword this once this PR is out of drafts Im still fixing up the validation hence why this PR will not be ready to review until I get this sorted If anyone is interested in fighting through Go templates with me feel free to give me a shout in the comments this is more for tracking stuff for me When Extend is used in ResultType expanded Attribute is not displayed in OpenAPI document These Attributes will be displayed if they are specified in View There is no problem when using Extend in Payload Example design go package design import goadesigngoav dsl var AddResult TypeAddResult func Attributeresult Int func Descriptionadd result Requiredresult var CalcResult ResultTypeapplicationvndhogejson func Attributesfunc Attributex Int Attributey Int ExtendAddResult import result attribute var Servicecalc func DescriptionThe calc service performs operations on numbers Methodadd func Payloadfunc Attributea Int Left operand Attributeb Int Right operand ResultCalcResult HTTPfunc GETaddab goa gen openapiyaml CalcAddResponseBody does not contain result propety details summary openapiyaml definitions CalcAddResponseBody title Mediatype identifier applicationvndhogejson viewdefault type object properties x type integer example format int y type integer example format int description AddResponseBody result type default view example x y summary swagger info title version host localhost consumes applicationjson applicationxml applicationgob produces applicationjson applicationxml applicationgob paths addab get tags calc summary add calc operationId calcadd parameters name a in path description Left operand required true type integer name b in path description Right operand required true type integer responses description OK response schema ref definitionsCalcAddResponseBody schemes http definitions CalcAddResponseBody title Mediatype identifier applicationvndhogejson viewdefault type object properties x type integer example format int y type integer example format int description AddResponseBody result type default view example x y details Expected The response body contains the result property details summary openapiyaml definitions CalcAddResponseBody title Mediatype identifier applicationvndhogejson viewdefault type object properties result type integer description add result example format int x type integer example format int y type integer example format int description AddResponseBody result type default view example result x y required result summary swagger info title version host localhost consumes applicationjson applicationxml applicationgob produces applicationjson applicationxml applicationgob paths addab get tags calc summary add calc operationId calcadd parameters name a in path description Left operand required true type integer name b in path description Right operand required true type integer responses description OK response schema ref definitionsCalcAddResponseBody schemes http definitions CalcAddResponseBody title Mediatype identifier applicationvndhogejson viewdefault type object properties result type integer description add result example format int x type integer example format int y type integer example format int description AddResponseBody result type default view example result x y required result details Although it is not related to this case why is only the letter y quoted in the above example openapiyaml 