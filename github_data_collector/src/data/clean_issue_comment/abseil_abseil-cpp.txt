I get the error below when building with stdc c works find Is there a way to pass that to the abseil build or some other workaround enabling use of c dyld lazy symbol binding failed Symbol not found ZN absl ByStringC ENSt basicstringviewIcNS chartraitsIcEEEE Fixes When building the abslstrings static library libtool emits a warning which is in fact something that breaks later eventually LibraryDeveloperCommandLineToolsusrbinlibtool warning same member name escapingo in output file used for input files The gist is that you cant have two files in a MacOS static library with the same base filename as one will override the other Basically Apples libtool crops the directory name away only to keep the base filename This breaks eventually deep into gRPCs build system thanks to sanity checks provided by NodeJS build system grpcgrpc Suggest adding a suffix to this duplicated filename to make Apples libtool happy On an nvidia Xavier the cmake variable CMAKESYSTEMPROCCESSOR returns aarch This makes ARM platform detection fail here which in turn causes compilation failures with abslrandom I can get around the problem by doing diff diff git aabslcoptsAbseilConfigureCoptscmake babslcoptsAbseilConfigureCoptscmake index b e aabslcoptsAbseilConfigureCoptscmake babslcoptsAbseilConfigureCoptscmake ifCMAKESYSTEMPROCESSOR STREQUAL x else setABSLRANDOMRANDENCOPTS ABSLRANDOMHWAESX FLAGS endif elseifCMAKESYSTEMPROCESSOR STREQUAL arm elseifCMAKESYSTEMPROCESSOR STREQUAL arm OR CMAKESYSTEMPROCESSOR STREQUAL aarch if CMAKESIZEOFVOIDP STREQUAL setABSLRANDOMRANDENCOPTS ABSLRANDOMHWAESARM FLAGS elseifCMAKESIZEOFVOIDP STREQUAL but I am not entirely sure if its the best way of going about this Anyone else get this issue It is not possible to load RtlCaptureStackBackTrace at static init time in UWP CaptureStackBackTrace is the public version of RtlCaptureStackBackTrace Fix It is not possible to load RtlCaptureStackBackTrace at static init time in UWP CaptureStackBackTrace is the public version of RtlCaptureStackBackTrace UWP doesnt allow reading regkeys Unfortunately UWP also doesnt offer an API for returning nominal processor frequency at this moment Other options would require apps depending on abseilcpp to be packaged with extra manifest data or libraries for bridging platforms This change pushes the unsupported APIs accessing the registry behind a define guard This define guard makes GetNominalCPUFrequency to compile and run as usual on desktop but it will return the value on UWP Apps Store Fixes UWP doesnt allow reading regkeys Unfortunatelly UWP also doesnt offer an API for returning nominal processor frequency at this moment Other options would require apps depending on abseilcpp to be packaged with extra manifest data or libraries for bridging platforms I get the following warnings when compiling with clang Gexternalabseilcppabsltimeinternalcctzsrctimezonelibccc warning declaration shadows a local variable Wshadow if stdtm tmp localtime lo tm externalabseilcppabsltimeinternalcctzsrctimezonelibccc note previous declaration is here if stdtm tmp localtime mid tm externalabseilcppabsltimeinternalcctzsrctimezonelibccc warning result of comparison const stdintfast t aka const long is always false Wtautologicaltypelimitcompare if s stdnumericlimitsstdtimetmin externalabseilcppabsltimeinternalcctzsrctimezonelibccc warning result of comparison const stdintfast t aka const long is always false Wtautologicaltypelimitcompare if s stdnumericlimitsstdtimetmax externalabseilcppabsltimeinternalcctzsrctimezonelibccc warning unused function template tmgmtoff Wunusedtemplate auto tmgmtoffconst T tm decltypetmtmgmtoff externalabseilcppabsltimeinternalcctzsrctimezonelibccc warning unused function template tmzone Wunusedtemplate auto tmzoneconst T tm decltypetmtmzone warnings generated Building CXX object externalabseinedirinternalcctzsrctimezoneinfocco externalabseilcppabsltimeinternalcctzsrctimezoneinfocc warning declaration shadows a local variable Wshadow long pos ftellfp externalabseilcppabsltimeinternalcctzsrctimezoneinfocc note previous declaration is here const stdsizet pos namecompare file externalabseilcppabsltimeinternalcctzsrctimezoneinfocc warning declaration shadows a local variable Wshadowuncapturedlocal name const stdstring name stduniqueptrZoneInfoSource externalabseilcppabsltimeinternalcctzsrctimezoneinfocc note previous declaration is here bool TimeZoneInfoLoadconst stdstring name externalabseilcppabsltimeinternalcctzsrctimezoneinfocc warning declaration shadows a local variable Wshadowuncapturedlocal if auto zip FileZoneInfoSourceOpenname return zip externalabseilcppabsltimeinternalcctzsrctimezoneinfocc note previous declaration is here auto zip cctzextensionzoneinfosourcefactory externalabseilcppabsltimeinternalcctzsrctimezoneinfocc warning declaration shadows a local variable Wshadowuncapturedlocal if auto zip AndroidZoneInfoSourceOpenname return zip externalabseilcppabsltimeinternalcctzsrctimezoneinfocc note previous declaration is here auto zip cctzextensionzoneinfosourcefactory warnings generated Hello Is there a way to export and install abseil as a subproject I use abseil as a cmake subproject by addsubdirectoryabseil some abls targets are used in my project and it works well in the build tree But when I make install abseils libs and headers would not be exported and installed along with mine That means if I want to use my lib in another project I have to build and link abseils libs manually like bash g anothercpp lmylib labslxxxx NOTE abseils install rules are disabled according to the following codes cmake from abseilCMakeListstxt ifNOT CMAKESOURCEDIR STREQUAL PROJECTSOURCEDIR setABSLENABLEINSTALL FALSE else setABSLENABLEINSTALL TRUE endif ifABSLENABLEINSTALL endif Thanks 