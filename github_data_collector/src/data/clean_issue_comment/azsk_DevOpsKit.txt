 Description br Brief description of the requested change Checklist I have read the instructions mentioned in Contribute to Code Contributingmd I have read and understood the criteria described under submitting changes Contributingmdsubmittingchanges The title of the PR clearly describes the intent of the PR This PR does not introduce any breaking changes to the code Description Added to a counter to skip orgpolicy validation warning second time in a row Points to be discussed The counter var that is being used to track the count of policy check is set as constant As a result the policy is checked only once per PS session We should reset this counter at the end of AzSK cmdlet execution Where in the module should this be added Checklist I have read the instructions mentioned in Contribute to Code Contributingmd I have read and understood the criteria described under submitting changes Contributingmdsubmittingchanges The title of the PR clearly describes the intent of the PR This PR does not introduce any breaking changes to the code GetAzSKARMTemplateSecurityStatus support for linked templatesbr Descriptionbr We have an API management project following the proposed structure of Azure API Management DevOps Resource Kit which means we are using linked templates When sending in a master template with links no controls are found in the template and its skipped in its entirety Im guessing that is because it doesnt evaluate or retrieve the linked templates and just checks the master template for controls it can recognize MicrosoftResourcesdeployments not being one of those ergo the file is skipped Any plans on supporting linked templates Steps to reproduce Have two ARM templates one master which is being deployed and one template that is linked to from the master PowerShell GetAzSKARMTemplateSecurityStatus ARMTemplatePath C temp mastertemplatejson ParameterFilePath C temp masterparametersdevjson Debug AzSK Version Method Name GetAzSKARMTemplateSecurityStatus Input Parameters Key Value ARMTemplatePath C temp mastertemplatejson ParameterFilePath C temp masterparametersdevjson Debug True Starting analysis FileName mastertemplatejson No controls have been evaluated for file mastertemplatejson Skipped files mastertemplatejson One or more files were skipped during the scan Either the files are invalid as ARM templates or those resource types are currently not supported by this command Please verify the files and rerun the command For files that should not be included in the scan you can use the ExcludeFiles parameter No controls have been evaluated for ARM Templates Next steps Look at the individual control evaluation status in the CSV file a If the control has passed no action is necessary b If the control has failed look at the control evaluation detail in the CSV file LineNumber ExpectedValue CurrentValue etc and fix the issue c If the control status says Skipped it means that you have chosen to skip certain controls using the SkipControlsFromFile parameter For further details refer Status and detailed logs have been exported to C Users redacted AppData Local Microsoft AzSKLogs ARMChecker C Users redacted AppData Local Microsoft AzSKLogs ARMChecker Expected behaviorbr All ARM templates are being analyzed Actual behaviorbr Only the master template is analyzed which is of low value when it only contains MicrosoftResourcesdeployments resources Titlebr The version of AzSK in the PSGallery differs from here Descriptionbr The master branch here does not agree with contents of the azsknupkg in PSGallery Steps to reproduce git clone this repository grab a copy of the nupkg in PSGallery at unzip the nupkg diff rq shows differences including AzSKpsm and ConfigurationHelperps and the getmodule version using the github copy says while the version in current PSGallery shows Expected behaviorbr The PSGallery package should agree with some branch in Github Actual behaviorbr The PSGallery version differs Titlebr Setting UseOnelinePolicyStore to false does not support custom organization policies Descriptionbr Feature request Some enterprises have policies restricting the use of Azure storage accounts FinTech and data exfiltration concerns are one misuse case There is no documented easy way to create an organization extension according to the instructions at Extending AzSK Modules while disabling UseOnlinePolicyStore Steps to reproduce In AzSKSettingsjson set UseOnlinePolicyStore false Follow the instructions in Extending AzSK Modules Run a test and the extps files are ignored Expected behaviorbr A parameter like GetAzSKOrganizationPolicyStatus PolicyFolderPath LOCALEXTENSIONS would allow for local extensions to be made and kept local Actual behaviorbr extps files are ignored As a workaround one can fork the AzSK DevOpsKit and place the extensions directly in the forked SVT directory code At that point the UseOnelinePolicyStore false will work but this requires forking and altering AzSK Titlebr Malfunctions on PowershellCore OSX Linux Descriptionbr On OSX and Linux AzSK runs the builtin policies but fails to upload organization policy extensions to the storage account and fails to run them Since outside pull requests are not being accepted applying the following diffs will make things work Steps to reproduce Issue may also be caused by this problem If one uses Linux or OSX to follow the instructions for Extending AzSK Modules and then call InstallAzSKOrganizationPolicy or UpdateAzSKOrganizationPolicy no extps files will be uploaded to the storage account The issue seems to be the use of Windows specific directory separators path separators mode bits nonportable construction of paths using instead of JoinPath Expected behaviorbr extps files would be uploaded Actual behaviorbr Files not uploaded Description br Brief description of the requested change Checklist I have read the instructions mentioned in Contribute to Code Contributingmd I have read and understood the criteria described under submitting changes Contributingmdsubmittingchanges The title of the PR clearly describes the intent of the PR This PR does not introduce any breaking changes to the code Description br Based on the documentation the retention period must be greater than or equal and not only equal Checklist x I have read the instructions mentioned in Contribute to Code Contributingmd x I have read and understood the criteria described under submitting changes Contributingmdsubmittingchanges x The title of the PR clearly describes the intent of the PR x This PR does not introduce any breaking changes to the code Description br Based on the documentation below EmailAddresses must be an array instead of a string element The API preview cannot be used because the emailAccountAdmins was a string enabled disabled instead of a boolean as validated in the ARMControlChecker Checklist X I have read the instructions mentioned in Contribute to Code Contributingmd X I have read and understood the criteria described under submitting changes Contributingmdsubmittingchanges X The title of the PR clearly describes the intent of the PR x This PR does not introduce any breaking changes to the code Titlebr Support version preview for MicrosoftSqlserverssecurityAlertPolicies Descriptionbr When exporting templates from Azure Portal the MicrosoftSqlserverssecurityAlertPolicies resource is exported using api version preview The json for this version is different than the one accepted by AzSK which is based on api version preview Examples are that email adresses should be arrays in version and emailAccountAdmins is a true boolean type Any ARM Template Check fails when using version Steps to reproduce Export a SQL Server Database template from Azure Portal and run ARM Template Check using AzSK Expected behaviorbr preview api version MicrosoftSqlserverssecurityAlertPolicies resources can be verified with ARM Template Checker Actual behaviorbr Currently only api version preview will pass ARM Template Check 