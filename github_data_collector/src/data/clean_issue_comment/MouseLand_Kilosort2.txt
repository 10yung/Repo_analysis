I would like to do an analysis that extracts spike waveforms from the raw data ie the continuous voltage traces However instead of just extracting snippets of the raw data at the spike times of my unit of interest which would be contaminated by any cooccuring spikes from other templates I would like to subtract out the spikes from all other templates except for my unit of interest If I understand correctly this would be the best estimate of every individual spike waveform belonging of the unit of interest because any interference from temporally overlapping spikes from other templates would be subtracted off With static templates like in Kilosort it is straightforward to subtract out amplitudescaled templates from the raw data In Kilosort the templates vary over time and the predictDatam script from the GUI shows how to reconstruct the raw data from the templates using rez mat This is ALMOST enoughBUT the predictDatam script uses template and spike information from before the automatic mergesplit step because it appears that the timevarying template data rezWa etc are organized according to the premergesplit list of templates whereas I need to use the postmergesplit list of templates in order to not subtract out my unit of interest How can I map between the premergesplit list of templates and the postmergesplit list of templates I cant seem to find this information in the output Related questions about template information for clarification In rez mat fields like rezWa and rezW contain different numbers of templates I assume this is because as mentioned above rezWa refers to preautomergesplit list of templates and rezW refers to postautomergesplit list of templates Is this true The nd dimension of rezW is larger than the number of different templates in st ie lengthuniquerezst and further if you order the clusterView by ID in phy you see that the ids are not continous and some IDs are skipped ie is missing I assume this is just because templates undergoing merge or split in the automatic mergesplit step are assigned a new index at the end of rezW but the old index is still there in rezW Any help is greatly appreciated I have been running into an issue where it looks like fewer spikes are being detected immediately after as well as immediately before ms the onset of LED light for optogenetic manipulation I am quite certain that it is in fact before the LED comes on because light artifacts that are mistaken for spikes are quite obvious high amplitude and line up with my analog signal blue trace in attached figure for my light delivery Ive been going through the Kilosort code a lot trying to figure out where the problem is arising and so far my best guess is that is has to do with how the raw signal containing a big deflection in voltage due to light onset is getting filtered in the preprocessing stage Anyway Im wondering if anyone has any explanation for this and suggestions for how to mitigate it while its not a huge deal for my analyses because Im not analyzing spikes during this time period when the LED first comes on I noticed it because some of PSTHs look weird with a little dip in spikes immediately prior to LED onset NPRH LPdetectedspikes A few other relevant points this effect scales with LED intensity the greater the intensity the greater the drop in spikes I still see it in control animals not expressing an opsin ie its not a legitimate optogenetic effect I only noticed it when I started recording from the thalamus where spontaneous spike rates are considerably higher than in cortex and so a dip in spikes is more obvious It seems to mainly effect the detection of loweramplitude units which is why Im thinking it has to do with how the threshold for spike detection is determined from the preprocessed data Thanks in advance for any explanations andor advice The following error comes up when trying to spike sort Error using gpuArraysubsasgn An unexpected error occurred trying to launch a kernel The CUDA error was invalid argument Error in triageTemplates line Widrop remove those templates everywhere Error in learnTemplates line triageTemplates ops iW C C W U dWU mu nsp ndrop Error in learnAndSolve b line rez learnTemplatesrez iorder The error would not occur with an earlier version of kilosort The open ephys data format saves two files for continuous recordings continuousdat and timestampsnpy If we save the kilosort results in the same folder as these two files which is useful so that phy can access continuousdat the rezToPhy function will delete the timestampsnpy file Im not sure how important that file is but its probably best that it does not get removed unnecessarily Hi I recorded some monkey data simultaneously from electrodes in distinct brain areas single electrode tetrode per area Will drift correction be correctly performed with only channels per area Does that make sense to use KS with these data If yes should I process the channels from one area separately from the channels of the other area or not Thanks in advance for your answer Hi Kilosort community As I am checking the template changing across time Ive found some pretty unstable templates in the results its the dWU template x axis unit should be ms cluster reordered cluster The code I used to extract template is this for iComponent UiComponent squeezerezUAiClusteriComponentiBatch WiComponent squeezerezWAiClusteriComponentiBatch template template UiComponent WiComponent end Ive tried both with and without reference to reziorig and the templates remain unstable either way And this happens to around clusters out of clusters Kilosort detected I thought the waveform should at least change slowly over the time Is this something thats expected Or did I extract the templates wrong somehow Thanks for your time Hi I checked the phy github but I still havent found the npy file in which I can find each sorted spike belongs to which channel So I cant get the waveform of each spike in matlab if I need it We receive an error when trying to run mexGPUall described below MATLAB correctly recognizes the Quadro RTX GPU I am using MATLAB R b and have downloaded VS community Cuda toolkit MATLAB Support for MinGWw CC Compiler and the GUI layout toolbox Any suggestions When I run mex setup C MEX configured to use MinGW Compiler C for C language compilation when I run mexGPUall Warning The selected C compiler is not supported for CUDA compilation Searching for a supported compiler In mexcuda line In mexGPUall line Error using mex No supported compiler was found For options visit Error in mexcuda line varargout nargout mexmexArguments Error in mexGPUall line mexcuda largeArrayDims mexThSpkPCcu The problem is that I dont know why mexGPUall will not run successfully since I believe I do have the supported compiler Hello Does anyone know how to just process one channel at a time with Kilosort It doesnt work if I block all other channels