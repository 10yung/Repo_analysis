Fix Interceptor to lazyload modules Angular Changes implements forChild Checklist x I have read the Auth general contribution guidelines x I have read the Auth Code of Conduct x All code quality toolsguidelines in the CONTRIBUTING documentation CONTRIBUTINGmd have been runfollowed x All relevant assets have been compiled as directed in the CONTRIBUTING documentation CONTRIBUTINGmd if applicable Changes Please describe both what is changing and why this is important Include Endpoints added deleted deprecated or changed Classes and methods added deleted deprecated or changed Screenshots of new or changed UI if applicable A summary of usage if this is a new feature or change to a public API this should also be added to relevant documentation once released Any alternative designs or approaches considered References Please include relevant links supporting this change such as a support ticket community post StackOverflow post support forum thread Checklist I have read the Auth general contribution guidelines I have read the Auth Code of Conduct All code quality toolsguidelines in the CONTRIBUTING documentation CONTRIBUTINGmd have been runfollowed All relevant assets have been compiled as directed in the CONTRIBUTING documentation CONTRIBUTINGmd if applicable Description Im getting this error externalnpmnodemodulesauth angularjwtindexdts error TS JwtModuleforRoot returns a ModuleWithProviders type without a generic type argument Please add a generic type argument to the ModuleWithProviders type If this occurrence is in library code you dont control please contact the library authors when trying to build my app with Ivy Environment dependencies angulardevkitbuildangular next angularanimations next angularcdk angularcommon next angularcore next angularforms next angularlocalize next angularmaterial angularplatformbrowser next angularrouter next angularupgrade next corejs nodesass reselect rxjs tslib zonejs devDependencies angularbazel next angularcli next angularcompiler next angularcompilercli next angularlanguageservice next angularplatformbrowserdynamic next auth angularjwt babelcli babelcore babelpresetenv bazelbazel bazelbenchmarkrunner bazelbuildifier bazelibazel bazelkarma bazelrollup bazelterser bazeltypescript typescript Please do not report security vulnerabilities here The Responsible Disclosure Program details the procedure for disclosing security issues Thank you in advance for helping us to improve this library Please read through the template below and answer all relevant questions Your additional work here is greatly appreciated and will help us respond as quickly as possible For general support or usage questions use the Auth Community or Auth Support Finally to avoid duplicates please search existing Issues before submitting one here By submitting an Issue to this repository you agree to the terms within the Auth Code of Conduct Description Provide a clear and concise description of the issue including what you expected to happen Reproduction Detail the steps taken to reproduce this error what was expected and whether this issue can be reproduced consistently or if it is intermittent Where applicable please include Code sample to reproduce the issue Log files redactremove sensitive information Application settings redactremove sensitive information Screenshots Environment Please provide the following Version of this library used Version of the platform or framework used if applicable Other relevant versions language server software OS browser Other modulespluginslibraries that might be involved nodemodulesauth angularjwtsrcjwtinterceptordts has an incorrect import nodemodulesauth angularjwtsrcjwtinterceptorts has an incorrect import statement Paths for rxjs have moved please fix Changes This MR introduces the correct way to build modern Angular Libraries by using the Angular CLI build infrastructure It also ensures the compatibility with future Angular versions as well as Angular Ivy compatibility projectsangularjwt folder contains the library coude source src folder contains a mock app for the the library unit testing happens in the mock app srcappservicesexamplehttpservicespects Running tests npm run ng test There arent any major changes in the library source code or any breaking changes The compiled library was tested on a large internal project all unit tests passed the application compiled to ivy without any errors and authentication was working correctly wihtout any changes to the host application source code References support ticket Checklist x I have read the Auth general contribution guidelines x I have read the Auth Code of Conduct x All code quality toolsguidelines in the CONTRIBUTING documentation CONTRIBUTINGmd have been runfollowed x All relevant assets have been compiled as directed in the CONTRIBUTING documentation CONTRIBUTINGmd if applicable Description Im trying to use jwtOptionsFactory to handle getting token from ngrx store The interceptor works just fine but when I try to us JwtHelperService without passing token I guess it uses tokengetter by default or with passing token via thisjwtHelperServicetokenGetter does not work because my factory return promise while the method from service tries run split method on promise not on string My code function jwtOptionsFactorystore Storeany object return whitelistedDomains localhost tokenGetter return storeselectFromAppStateselectAuthToken pipetake toPromise NgModule imports JwtModuleforRoot jwtOptionsProvider provide JWTOPTIONS useFactory jwtOptionsFactory deps Store bootstrap AppComponent export class AppModule constructorprivate dialogService DialogService private jwtHelperService JwtHelperService ngOnInit void consolelogthisjwtHelperServicetokenGetter return promise not string consolelogthisjwtHelperServicedecodeTokenthisjwtHelperServicetokenGetter consolelogthisjwtHelperServiceisTokenExpiredthisjwtHelperServicetokenGetter consolelogthisjwtHelperServicegetTokenExpirationDatethisjwtHelperServicetokenGetter error Please fix this Also it would be great if this would also supports Observable Prerequisites x I have checked the README documentation x I have checked the Auth Community for related posts x I have checked for related or duplicate Issues issues and PRs pulls x I have read the Auth general contribution guidelines x I have read the Auth Code of Conduct x I am reporting this to the correct repository Environment Please provide the following Version of angular jwt being used auth angularjwt Version of the platform or framework used if applicable angularcore The doumentation state that you can use JwtModuleforRoot config tokenGetter tokenGetter whitelistedDomains examplecom blacklistedRoutes examplecomexamplebadroute It would be nice to have a warning on the documentation saying whitelistedDomains wont work Description Im operating typical api runnable proxy for my dev app running thru https app runs fine Authorization header is NOT landing on my HttpClient inside my client side userservicets Prerequisites X I have checked the README documentation X I have checked the Auth Community for related posts X I have checked for related or duplicate Issues issues and PRs pulls I have read the Auth general contribution guidelines I have read the Auth Code of Conduct X I am reporting this to the correct repository Environment Angular CLI Node OS win x Angular Package Version angulardevkitarchitect angulardevkitcore angulardevkitschematics schematicsangular schematicsupdate rxjs typescript using chrome in cognito mode and auth angularjwt Reproduction this is an eager loaded module export function tokenGetter return localStoragegetItemJWTTOKEN NgModule imports angular CommonModule JwtModuleforRoot config tokenGetter tokenGetter whitelistedDomains environmentdomainName blacklistedRoutes ngrx StoreModuleforRootreducers metaReducers StoreRouterConnectingModuleforRoot EffectsModuleforRoot AuthEffects environmentproduction StoreDevtoolsModuleinstrument name API rd party TranslateModuleforRoot loader provide TranslateLoader useFactory HttpLoaderFactory deps HttpClient declarations providers LocalStorageService AuthGuardService AnimationsService TitleService provide ErrorHandler useClass AppErrorHandlerService provide RouterStateSerializer useClass CustomSerializer exports TranslateModule export class AppCoreModule constructorOptional SkipSelf parentModule AppCoreModule if parentModule throw new ErrorCoreModule is already loaded Import only in AppModule LIVE export function HttpLoaderFactoryhttp HttpClient return new TranslateHttpLoader http environmentappRootPrefixassetsi n json Hi is there any way to pass whitelistedDomains as a promise The example bellow jwtOptionsFactory receives AppConfigService which returns the domain value Just for the record the service is provided as APPINITIALIZER export function jwtOptionsFactoryappConfig AppConfigService return tokenGetter TokenHelpergetToken headerName token authScheme whitelistedDomains appConfigdomain blacklistedRoutes Hi all I just upgrade from old version to new version Now I have a problem with header I dont now how can setup Contenttype to global Default Contenttype is textplain Now I want to change it to applicationjson When I can setup it for global My appmodulets import JwtModule from auth angularjwt JwtModuleforRoot config tokenGetter LsHelpergetAccessToken whitelistedDomains localhost 