Updates orgscalasbtsbt from to Release NotesChangelog Ill automatically update this PR to resolve conflicts as long as you dont change it yourself If youd like to skip this version you can just close this PR If you have any feedback just mention me in the comments below Have a fantastic day writing Scala details summaryIgnore future updatessummary Add this to your scalastewardconf file to ignore future updates of this dependency updatesignore groupId orgscalasbt artifactId sbt details labels libraryupdate semverpatch Updates orgspecs specs core orgspecs specs scalacheck from to Ill automatically update this PR to resolve conflicts as long as you dont change it yourself If youd like to skip this version you can just close this PR If you have any feedback just mention me in the comments below Have a fantastic day writing Scala details summaryIgnore future updatessummary Add this to your scalastewardconf file to ignore future updates of this dependency updatesignore groupId orgspecs details labels testlibraryupdate semverpatch Hello there I was going through your examples when setting up a project of my own and I noticed that you are including the swaggerui distribution directly in the projects resources files Considering http s has support for webjars and the swaggerui is distributed in its own webjar we should be possible to provide an example that uses said webjar In orghttp s rhoswagger BlazeServerBuilder IO bindHttpport withHttpAppservice service swaggerui only show routes of service does not show another Rho makes heavy use of symbolic operators and extension methods for syntax scala description route Mapoauth Listadmin route route headerDecoders route doThing Proposed in Listtag tag route My team relatively new to Scala sees this syntax as the biggest painpoint of using Rho to the point that we ended up defining our own syntax extensions scala implicit class BuilderOps HL HList val builder PathBuilder IO HL extends AnyVal def withDescriptiondescription String PathBuilder IO HL new PathBuilder buildermethod PathASTMetaConsbuilderpath RouteDescdescription implicit class RouteOps F T HList val route RouteExecutable F T extends AnyVal def bindAction U R action Uimplicit hltf HListToFunc F T U srvc CompileRoutes F R R route action Would there be interest in adding alphanumeric methods like these to the main Rho types Im thinking we could do something like the new collections did and Add methods with descriptive names to the builder classes For backwardscompat change the existing symbolic operators to call the new alphanumeric methods Ill try and put in an example next week but it appears the fix for does break using circes fully automatic derivation In the mean time the work around is just using the semiauto derivation instead Presently generating the swagger model for a shapeless Coproduct type outputs lots of implementation details about Coproducts Rho should output a composite type with each type included instead See discussion and test case here Im filing this per discussion with zarthross on Gitter How to reproduce scala import catseffectExitCode IO IOApp Sync import iocircegenericauto import orghttp sheaders import orghttp srhoswagger import orghttp sserverblazeBlazeServerBuilder import orghttp ssyntaxkleislihttp sKleisliResponseSyntax import orghttp sEntityEncoder MediaType import orghttp srhoRhoRoutes case class SampleResponsemsg String class Routes F Sync extends RhoRoutes F def acceptmediaType MediaType existsAndAccept hdr Accept hdrvaluesexistsmediaRangesatisfiedBymediaType implicit val entityEncoder EntityEncoder F SampleResponse orghttp scirceCirceEntityEncodercirceEntityEncoder F SampleResponse GET textorjson acceptMediaTypeapplicationjson OkSampleResponsesome JSON implicit val encoder EntityEncoder F SampleResponse EntityEncoderstringEncoder F contramaptoString GET textorjson acceptMediaTypetextplain OkSampleResponsesome text object Bug extends IOApp override def runargs List String IO ExitCode val httpApp new Routes IO toRoutesswaggersyntaxiocreateRhoMiddleware orNotFound BlazeServerBuilder IO bindHttp localhost withHttpApphttpApp resource useserver IOnever Once this is running I did a bash curl v and got json paths textorjson get tags textorjson operationId getTextorjsonAccept produces textplain parameters name Accept in header required true type string responses description OK schema ref definitionsSampleResponse deprecated false Id have expected to see also applicationjson in the produces array Note The actual routes work correctly bash http v GET textorjson Accepttextplain SampleResponsesome text http v GET textorjson Acceptapplicationjson msg some JSON Resolves Todos Add Secured Sonotype credentials Add Secured PGP keys for signing releases Add Secured Github token for publishing ghpages Before is released well need to start using Mima to ensure binary compatibility is preserved