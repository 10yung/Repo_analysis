Add changelog entries for Update to more compatible syntax protect stack GH by jmartinr Unlock the GVL when calculating hashes salts GH by tenderlove Static code check findings are severity slightcosmetic cryptblowfishc style The scope of the variable tmp can be reduced cryptblowfishc style The scope of the variable c can be reduced cryptblowfishc style The scope of the variable c can be reduced cryptblowfishc style The scope of the variable c can be reduced cryptblowfishc style The scope of the variable tmp can be reduced cryptblowfishc style Use pointers to const when referring to string literals certSTR C cryptgensaltc style Use pointers to const when referring to string literals certSTR C cryptgensalth style const Re Hello this happens when we try to install diasporainstaller on armhf platform varcachediasporainstallerdiaspora targz OK Extracting files Copying files to usrsharediaspora diaspora archive to copy diaspora Copying source tarball to varlibdiasporapublic Setting up environment varibales Using etcdiasporaconf export DBNAMEdiasporaproduction Using system bundler Installing gems with rubygems Fetching gem metadata from Fetching gem metadata from Fetching gem metadata from Fetching gem metadata from Fetching gem metadata from Fetching gem metadata from Fetching gem metadata from Fetching gem metadata from Fetching gem metadata from Resolving dependencies Using rake Using concurrentruby Using i n Using minitest Using threadsafe Using tzinfo Using activesupport Using builder Using erubi Using miniportile Using nokogiri Using railsdomtesting Using crass Using loofah Using railshtmlsanitizer Using actionview Using rack Using racktest Using actionpack Using nio r Using websocketextensions Using websocketdriver Using actioncable Using globalid Using activejob Using minimime Using mail Using actionmailer Using activemodel Using activemodelserializers Using arel Using activerecord Using activerecordimport Using actsastaggableon Using actsasapi Using publicsuffix Using addressable Using aeskeywrap Using excon Using formatador Using fogcore Using mimetypesdata Using mimetypes Using unfext Using unf Using assetsync Using attrrequired Using execjs Using autoprefixerrails mFetching bcrypt m mInstalling bcrypt with native extensions m mGemExtBuildError ERROR Failed to build gem native extension m current directory varlibdiasporavendorbundleruby gemsbcrypt extmri usrbinruby r siteconf n gtmsrb extconfrb creating Makefile current directory varlibdiasporavendorbundleruby gemsbcrypt extmri make DESTDIR clean current directory varlibdiasporavendorbundleruby gemsbcrypt extmri make DESTDIR compiling bcryptextc compiling cryptblowfishc compiling cryptgensaltc compiling wrapperc gcc DSKIPGNU Wdatetime DFORTIFYSOURCE DFILEOFFSETBITS c o x o x S x S Assembler messages x S Error junk at end of line first unrecognized character is make builtin x o Error make failed exit code Gem files will remain installed in usrsharediasporavendorbundleruby gemsbcrypt for inspection Results logged to usrsharediasporavendorbundleruby extensionsarmlinux bcrypt gemmakeout m mAn error occurred while installing bcrypt and Bundler cannot continue Make sure that gem install bcrypt v succeeds before bundling m In Gemfile deviselastseenable was resolved to which depends on devise was resolved to which depends on bcrypt m dpkg error processing package diasporainstaller configure installed diasporainstaller package postinstallation script subprocess returned error exit status dpkg dependency problems prevent configuration of autopkgtestsatdep autopkgtestsatdep depends on diasporainstaller however Package diasporainstaller is not configured yet tjschuck since you added that file in b ad cf b f c fbf cbd can you please make it customizable in some way or exclude it in this arch from build artifacts thanks It really could just be coincidence but Ive had a handful of users over the last couple days since running in production swearing up and down they use only one password and they definitely havent forgotten it In all the cases Ive tested produces the same results as that I was running before on my JRuby server but in fonica says updated libbcryptenginerb to pass the secret as java bytes it seems jruby messes up the encoding for certain bytes if the secret is passed as a string Could this result in the same password resulting in different hashes in and If so is it just in extreme edge cases or is this something that will happen for sure This PR changes a version specifier in the gemspec to avoid warning output when building the gem This is a trivial dusting change not a blocker for anything There is a description of in travisyml but READMEmd statesAny Ruby on a I think that is also supported but it seems that it would be better to include both and support in READMEmd We probably shouldnt just be testing against jrubyhead Per JRubys roadmap is EOLd and was compatible which weve also now EOLd so not including jruby JRuby and are intended to be MRI and compatible which we do support so including them here JRuby seems to be nontrivially failing which is curious Will look into that before merging this I think there have been a handful of issues here that jibe with that so Ill investigate later Just getting this PR open in the meantime Hi thank you for working hard to bring BCrypt to Ruby I apologize if this is not the appropriate place for suggestions However is there any way to turn off the hashing so that the cost is truly zero This is not meant for production of course but for spec performance improvements I understand the algorithm has a minimum but is there the possibility of a return here Thanks in advance