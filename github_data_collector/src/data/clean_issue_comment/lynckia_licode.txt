This PR is a workaround of crash which sometimes happens when iOS client tries to connect to the room In some cases peer and stream objects are NULL possible because of race condition in moment then method nicerIcePeerContextParseTrickleCandidate is calling In cases when skipped icecandidate is host all will be OK connection will be established But Im afraid that in cases when we skip srflx candidate it can bring to connection problems Anyway it is better than crash of the room Description After moving to nICEr we cant connect iOS client to the room It happens not always but in from attempts When iOS client connects ErizoJS restarts Steps to reproduce the issue Create room Try to connect iOS client to it Describe the results you received Room crashes all participants drops from the room Describe the results you expected iOS connected to the room Licode commitrelease where the issue is happening Happens only if use nICEr Additional details I dig into code a bit and see that crash happens in method NicerConnectionsetRemoteCandidates in this line UINT r nicerIcePeerContextParseTrickleCandidatepeer stream constcastchar candidatecstr Also I noticed that crash happened when variables peer and stream are NULL Description We were not able to susbcribe to the remote version of local streams because we were marking them as remote Not sure about the implications of this change yet so I need to investigate further to check if it could affect other features It needs and includes Unit Tests Changes in Client or Server public APIs Not needed It includes documentation for these changes in doc Description In our app we allow to limit publishing BW during session We use updateConfiguration method with parameter maxVideoBW for it But after limiting it to lower bandwidth it cant be restored to higher bandwidth Instead of it audio bandwidth is going Up Steps to reproduce the issue Simulcast is layers codecs VP OPUS Connect to room by one publisher with BW kb Limit BW to localstreamupdateConfiguration maxVideoBW Check webrtcchromeinternals bitrade droped to Limit BW to localstreamupdateConfiguration maxVideoBW Check webrtcchromeinternals video BW is still audio BW increased see attach Note reproduces only with simulcast video audio Description Queue SDP negotiation messages in ErizoJS to avoid race conditions It handle interlocks between client and ErizoJS queues It needs and includes Unit Tests Changes in Client or Server public APIs Not needed It includes documentation for these changes in doc It doesnt work in the Version bit of chrome first of all i know http cannot access the camera in new version chrome i try to use https It seems to be caused by using https but not configured wss I dont know how to configure wss details as below my computer os is Ubuntu bit LAN IP is Step execute scriptsinitLicodesh and execute scriptsinitBasicExamplesh Step visit and allow it to use camera and microphone Step click Test Connection then I see logs in chromes console connectiontestjs eyJ b tlbklkIjoiNWRmNDk OWM NTkzMWUwYzYwZDc NzMzIiwiaG zdCI IjE Mi xNjguMS xNzI ODA MCIsInNlY VyZSI ZmFsc UsInNpZ hdHVyZSI IlkyRTJPRGRpTlRSa ZzVZV rWW JMU HSTBaR rTVdWak URXhNMlV TkdFM pUVXhZUT In erizojs INFO Requested access to local media erizojs DEBUG Calling getUserMedia with config Object erizojs INFO User has granted access to local media erizojs Mixed Content The page at was loaded over HTTPS but attempted to connect to the insecure WebSocket endpoint ws socketioEIO transportwebsocket This request has been blocked this endpoint must be available over WSS bdoOpen erizojs erizojs INFO Error triggering event accessaccepted error TypeError Cannot read property onclose of undefined erizojs INFO getTracks MediaStreamTrack erizojs INFO getTracks MediaStreamTrack Lark who can help me sovle it when I connect to myIP with the chrome it returns the error thanks for who knew the answer Description This PR adds session version control to start sending bytes from Erizo when MediaStream negotiation has finished It needs and includes Unit Tests Changes in Client or Server public APIs Not needed It includes documentation for these changes in doc Description jcague I am using Ubuntu OS Took the code from commit I am facing a problem where remote subscription takes handsome time to appear Some time subscription event comes quite late or sometime after offer sdp answer sdp takes quite sometime I am able to compare it with some previous code like commit and there is not such issue there and subscription is quite quick to appear Steps to reproduce the issue Join the room with first participant Join the room with second participant and switch the browser tab to first participant And you will see this issue Even to make it more prominent you may increase the participants Describe the results you received Subscribed audiovideo appears quite late If participant increases then it may even take more than seconds to appear Describe the results you expected It should appear on remote in less then seconds after successful publishing Additional information you deem important eg issue happens only occasionally It happens times out of Licode commitrelease where the issue is happening Used the commit Additional environment details Local AWS Docker etc Tested it on local VM as well as IBM Liquidweb servers Let me know if you need additional information to investigate it This channel is used to report issues Please make sure that we do not have any duplicates already open You can ensure this by searching the issue list for this repository If there is a duplicate please close your issue and add a comment to the existing issue instead If your report is not an issue but a question or doubt regarding Licode documentation features roadmap etc please use our Discourse channel in Description Sender Bandwidth estimation fails for safari calls because of missing RTCP REMB packets despite googremb negotiated over SDP successfully Steps to reproduce the issue set log jloggerrtpSenderBandwidthEstimationHandler to TRACE in log cxxprperties Start one call leg from Chrome and one from Safari iCheck the logs Network tracetcpdump also shoing REMB feed backs are not received Describe the results you received Logs shows REMB feedback packets received from chrome but not from safari subscriber stream Describe the results you expected Logs should show the REMB packet received messages with bitrate from both chrome and safari subscriber streams Additional information you deem important eg issue happens only occasionally I also ran network trace at server to see what all RTCP packets are sent by Safari Still not receiving any REMB from Safari side despite playing the remote video This causes sender bw estimation failure for all safari subscriber streams Licode commitrelease where the issue is happening latest Additional environment details Local AWS Docker etc installed on local server