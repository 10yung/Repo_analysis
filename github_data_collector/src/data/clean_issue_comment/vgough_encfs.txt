I tried creating an encrypted view using reverse on exact copies including the encfs xml of the same folder on different machines using different encfs versions encfs version encfs version When I compared random files using md sum from the two encrypted views I got different hashes on both systems The files do actually differ while the size is the same Is the encryption result not stable across versions or is another input other than the filecontent and the encfs xml eg the files metadata or something used for the encryption Thanks encfsctl decode extpassprog rootdir encoded name will take only arguments for encoded nameand I do sometimes have hundreds Observe find encrypted sed En sencryptedp head n xargs encfsctl decode encrypted works fine EncFS Password C find encrypted sed En sencryptedp head n xargs encfsctl decode encrypted too many breaks Incorrect number of arguments for command decode encfsctl version encfsctl version I can work around this limitation but it is a bit annoying Ive used to encrypt my external disks using EncFS on Linux Now I switched to Mac and tried to decrypt and mount such an external disk on the Mac However it seems that on Mac EncFS only supports encryptingdecrypting directories not disks Is that the case Is there a way I can decrypt an external disk that was encrypted using EncFS on a Mac After running encfs encrypted decrypted If I add files to decrypted will the files be written to the disk in decrypted if so isnt it a security issue when someone steals your laptop and takes out the disk If they are not written to the disk where are they kept Also There is a security concern about Encfs EncFS is probably safe as long as the adversary only gets one copy of the ciphertext and nothing more EncFS is not safe if the adversary has the opportunity to see two or more snapshots of the ciphertext at different times EncFS attempts to protect files from malicious modification but there are serious problems with this feature If I use Encfs personally without uploading anything to the cloud Am I affected by this How can someone get their hands on two copies of an encrypted file Is it like this pasting filetxt to decrypted then there will be an encrypted file in encrypted call it version then at a later time Perhaps after umount and mount also you modify filetxt in decrypted call the modified and encrypted filetxt in encrypted version If someone has access to version and then this is where Encfs becomes insecureAm I getting this right In reverse encryption mode not tested in normal mode there doesnt appear to be a good way to determine the existence of a file because a generic io error is returned as opposed to something specific This was discusseddiscovered in this github issue and still exists in a binary built from mater I have an encrypted volume in my host OS Manjaro bit where I place my work files which includes git workspaces If I decrypt and mount the volume while inside the guest OS Ubuntu bit I cannot update the workspaces as the pull operations fails due to a permission denied in the gitobjectspack directory I checked that every directory starting from the workspace is owned by my guest OS user and that the permission is I even did a recursive chmod and chown for good measure but the error still persists If I rsync the workspace to outside the volume ie tmp then I can pull the updates and I can rsync it back without any issues Does the volume retain any identity information of the original user that created the files and directories Most if not all of the files in the volume is created and owned by my host OS user Could you please take a look at and help me figure why one test is failing When using reverse the local files are unencrypted Fixes The man page of reverse option states This can be useful for creating remote encrypted backups where you do not wish to keep the local files unencrypted However I think it is wrong and it should be the opposite This can be useful for creating remote encrypted backups where you do not wish to keep the local files encrypted Storing the local files in encrypted form is the normal usage with reverse letting you have the local files unencrypted which is suitable for users that not wish to keep the local files encrypted Hi all Use case is to synchronize a reversewrite folder between one server and different clients The sync software is syncthing which places some additional files called stignore and stfolder in the folder it is synchronizing writes data to a temporary filename when syncing syncthingfilenametmp For issue there is a workaround by having the reversewrite folder as a subfolder of the sync folder eg syncfolderreversewritefolder For issue I have a workaround to save the temp file in the parent syncthing folder then copyanddelete to the correct place in the reversewrite folder However that could lead to corrupted data if an error occurred in the copyanddelete stage So I wonder is it possible for encfs to somehow store files that are written to a reversewrite folder even when the filename or the file contents dont match the cipher and cant be decrypted More info at 