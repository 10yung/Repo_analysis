JUnit has two types of test rules MethodRule and TestRule The existing MockitoJUnit rule returns a MockitoRule which extends MethodRule However since this is not a TestRule some features of JUnit do not nicely integrate with Mockito For example the RuleChain feature of JUnit only works on TestRules Therefore add a separate entrypoint to MockitoJUnit which returns a TestRule that can be integrated with RuleChain It introduces a separate interface to make this distinction clear If we would change the existing MockitoRule to also extend TestRule the JUnit logic would no longer run the MethodRule and would thus break existing users Hi I am trying to update a codebase to mockito After the update some tests fail with orgmockitoexceptionsmisusingRedundantListenerException Problems adding Mockito listener Listener of type MismatchReportingTestListener has already been added and not removed It indicates that previous listener was not removed according to the API When you add a listener dont forget to remove the listener afterwards MockitoframeworkremoveListenermyListener For more information see the javadoc for RedundantListenerException class I was able to find out that the tests do not fail if I change the configuration of the mavensurefireplugin to not run test in parallel The codebase uses mavensurefireplugin mavencompilerplugin junit java I created an example project which reproduces the problem clone it and run mvn test It will fail with RedundantListenerException The tests do nothing special they only waste time Test public void name IntStreamrange IntegerMAXVALUEboxed forEachi assertEqualsi i x The mockito message in the stacktrace have useful information but it didnt help x The problematic code if thats possible is copied here Note that some configuration are impossible to mock via Mockito x Provide versions mockito jdk os any other relevant information x Provide a Short Self Contained Correct Compilable Example of the issue same as any question on stackoverflowcom x Read the contributing guide How about we change the main dev branch to master It will be simpler more ordinary easier to type git commands We can keep releasexy branches as needed for hotfixes but the main development on master is just simpler Thoughts Hi guys Im encountering a crash when I run AndroidTest that contain mocking class cause the ByteBuddy didnt found javaxtoolsToolProvider I tried to reinstall JDK but doesnt work It seems to be javaxtoolsToolProvider not existing in it Could you guys help me please Cheer Natthawut Environment Gradle Build time UTC Revision d b a a d a a cd a c d Kotlin Groovy Ant Apache AntTM version compiled on July JVM Oracle Corporation b OS Mac OS X x Dependencies implementation fileTreedir libs include jar implementationorgjetbrainskotlinkotlinstdlibjdk kotlinversion implementation androidxappcompatappcompat implementation androidxcorecorektx implementation androidxconstraintlayoutconstraintlayout testImplementation junitjunit testImplementation orgmockitomockitocore androidTestImplementation androidxtestextjunit androidTestImplementation androidxtestespressoespressocore androidTestImplementation orgmockitomockitoandroid androidTestImplementation iomockkmockkandroid kotlin Strack trace ETestRunner failed mockFoocosamplemockitoandroidMockWithMockitoTest begin exception ETestRunner javalangIllegalStateException Could not initialize plugin interface orgmockitopluginsMockMaker alternate null at orgmockitointernalconfigurationpluginsPluginLoader invokePluginLoaderjava at javalangreflectProxyinvokeProxyjava at Proxy isTypeMockableUnknown Source at orgmockitointernalutilMockUtiltypeMockabilityOfMockUtiljava at orgmockitointernalutilMockCreationValidatorvalidateTypeMockCreationValidatorjava at orgmockitointernalcreationMockSettingsImplvalidatedSettingsMockSettingsImpljava at orgmockitointernalcreationMockSettingsImplbuildMockSettingsImpljava at orgmockitointernalMockitoCoremockMockitoCorejava at orgmockitoMockitomockMockitojava at orgmockitoMockitomockMockitojava at cosamplemockitoandroidMockWithMockitoTestinitMockWithMockitoTestkt at javalangreflectConstructornewInstance Native Method at javalangreflectConstructornewInstanceConstructorjava at orgjunitrunnersBlockJUnit ClassRunnercreateTestBlockJUnit ClassRunnerjava at orgjunitrunnersBlockJUnit ClassRunner runReflectiveCallBlockJUnit ClassRunnerjava at orgjunitinternalrunnersmodelReflectiveCallablerunReflectiveCallablejava at orgjunitrunnersBlockJUnit ClassRunnermethodBlockBlockJUnit ClassRunnerjava at orgjunitrunnersBlockJUnit ClassRunnerrunChildBlockJUnit ClassRunnerjava at orgjunitrunnersBlockJUnit ClassRunnerrunChildBlockJUnit ClassRunnerjava at orgjunitrunnersParentRunner runParentRunnerjava at orgjunitrunnersParentRunner scheduleParentRunnerjava at orgjunitrunnersParentRunnerrunChildrenParentRunnerjava at orgjunitrunnersParentRunneraccess ParentRunnerjava at orgjunitrunnersParentRunner evaluateParentRunnerjava at orgjunitrunnersParentRunnerrunParentRunnerjava at androidxtestextjunitrunnersAndroidJUnit runAndroidJUnit java at orgjunitrunnersSuiterunChildSuitejava at orgjunitrunnersSuiterunChildSuitejava at orgjunitrunnersParentRunner runParentRunnerjava at orgjunitrunnersParentRunner scheduleParentRunnerjava at orgjunitrunnersParentRunnerrunChildrenParentRunnerjava at orgjunitrunnersParentRunneraccess ParentRunnerjava at orgjunitrunnersParentRunner evaluateParentRunnerjava at orgjunitrunnersParentRunnerrunParentRunnerjava at orgjunitrunnerJUnitCorerunJUnitCorejava at orgjunitrunnerJUnitCorerunJUnitCorejava at androidxtestinternalrunnerTestExecutorexecuteTestExecutorjava at androidxtestrunnerAndroidJUnitRunneronStartAndroidJUnitRunnerjava at androidappInstrumentationInstrumentationThreadrunInstrumentationjava Caused by javalangNoClassDefFoundError Failed resolution of LjavaxtoolsToolProvider at orgmockitointernalcreationbytebuddyInlineByteBuddyMockMakerinitInlineByteBuddyMockMakerjava at javalangClassnewInstanceNative Method at orgmockitointernalconfigurationpluginsPluginInitializerloadImplPluginInitializerjava at orgmockitointernalconfigurationpluginsPluginLoaderloadPluginPluginLoaderjava at orgmockitointernalconfigurationpluginsPluginLoaderloadPluginPluginLoaderjava at orgmockitointernalconfigurationpluginsPluginRegistryinitPluginRegistryjava at orgmockitointernalconfigurationpluginsPluginsclinitPluginsjava at orgmockitointernalconfigurationpluginsPluginsgetMockMakerPluginsjava at orgmockitointernalutilMockUtilclinitMockUtiljava at orgmockitointernalutilMockUtiltypeMockabilityOfMockUtiljava at orgmockitointernalutilMockCreationValidatorvalidateTypeMockCreationValidatorjava at orgmockitointernalcreationMockSettingsImplvalidatedSettingsMockSettingsImpljava at orgmockitointernalcreationMockSettingsImplbuildMockSettingsImpljava at orgmockitointernalMockitoCoremockMockitoCorejava at orgmockitoMockitomockMockitojava at orgmockitoMockitomockMockitojava at cosamplemockitoandroidMockWithMockitoTestinitMockWithMockitoTestkt at javalangreflectConstructornewInstance Native Method at javalangreflectConstructornewInstanceConstructorjava at orgjunitrunnersBlockJUnit ClassRunnercreateTestBlockJUnit ClassRunnerjava at orgjunitrunnersBlockJUnit ClassRunner runReflectiveCallBlockJUnit ClassRunnerjava at orgjunitinternalrunnersmodelReflectiveCallablerunReflectiveCallablejava at orgjunitrunnersBlockJUnit ClassRunnermethodBlockBlockJUnit ClassRunnerjava at orgjunitrunnersBlockJUnit ClassRunnerrunChildBlockJUnit ClassRunnerjava at orgjunitrunnersBlockJUnit ClassRunnerrunChildBlockJUnit ClassRunnerjava at orgjunitrunnersParentRunner runParentRunnerjava at orgjunitrunnersParentRunner scheduleParentRunnerjava at orgjunitrunnersParentRunnerrunChildrenParentRunnerjava at orgjunitrunnersParentRunneraccess ParentRunnerjava at orgjunitrunnersParentRunner evaluateParentRunnerjava at orgjunitrunnersParentRunnerrunParentRunnerjava at androidxtestextjunitrunnersAndroidJUnit runAndroidJUnit java at orgjunitrunnersSuiterunChildSuitejava at orgjunitrunnersSuiterunChildSuitejava at orgjunitrunnersParentRunner runParentRunnerjava at orgjunitrunnersParentRunner scheduleParentRunnerjava at orgjunitrunnersParentRunnerrunChildrenParentRunnerjava at orgjunitrunnersParentRunneraccess ParentRunnerjava at orgjunitrunnersParentRunner evaluateParentRunnerjava at orgjunitrunnersParentRunnerrunParentRunnerjava at orgjunitrunnerJUnitCorerunJUnitCorejava at orgjunitrunnerJUnitCorerunJUnitCorejava at androidxtestinternalrunnerTestExecutorexecuteTestExecutorjava at androidxtestrunnerAndroidJUnitRunneronStartAndroidJUnitRunnerjava at androidappInstrumentationInstrumentationThreadrunInstrumentationjava Caused by javalangClassNotFoundException Didnt find class javaxtoolsToolProvider on path DexPathList zip file systemframeworkandroidtestrunnerjar zip file systemframeworkandroidtestmockjar zip file dataappcosamplemockitoandroidtestZJFawUg end exception img width altScreen Shot at src MockitoAndroidzip I have a test class with tests written in java The tests are trying to verify the behaviour of the subject written in kotlin by spying on it Expected behaviour tests pass because the expected method call is made Actual behaviour The first test passes and the second identical test receives an UnfinishedVerificationException Compilable example here Problematic code SomeClasskt package orgexample open class SomeClass fun doThing doThing fun doThing printlnHey SpyingProblemTestjava package orgexample import orgjunitTest import static orgmockitoMockito public class SpyingProblemTest private SomeClass underTest spynew SomeClass Test public void cantVerifySpies WHEN underTestdoThing THEN verifyunderTest times doThing Test public void cantVerifySpies WHEN underTestdoThing THEN verifyunderTest times doThing Test output Hey Hey orgmockitoexceptionsmisusingUnfinishedVerificationException Missing method call for verifymock here at orgexampleSpyingProblemTestcantVerifySpiesSpyingProblemTestjava Example of correct verification verifymockdoSomething Also this error might show up because you verify either of finalprivateequalshashCode methods Those methods cannot be stubbedverified Mocking methods declared on nonpublic parent classes is not supported at orgexampleSpyingProblemTestinitSpyingProblemTestjava at sunreflectNativeConstructorAccessorImplnewInstance Native Method at sunreflectNativeConstructorAccessorImplnewInstanceNativeConstructorAccessorImpljava at sunreflectDelegatingConstructorAccessorImplnewInstanceDelegatingConstructorAccessorImpljava at javalangreflectConstructornewInstanceConstructorjava at orgjunitrunnersBlockJUnit ClassRunnercreateTestBlockJUnit ClassRunnerjava at orgjunitrunnersBlockJUnit ClassRunner runReflectiveCallBlockJUnit ClassRunnerjava at orgjunitinternalrunnersmodelReflectiveCallablerunReflectiveCallablejava at orgjunitrunnersBlockJUnit ClassRunnermethodBlockBlockJUnit ClassRunnerjava at orgjunitrunnersBlockJUnit ClassRunnerrunChildBlockJUnit ClassRunnerjava at orgjunitrunnersBlockJUnit ClassRunnerrunChildBlockJUnit ClassRunnerjava at orgjunitrunnersParentRunner runParentRunnerjava at orgjunitrunnersParentRunner scheduleParentRunnerjava at orgjunitrunnersParentRunnerrunChildrenParentRunnerjava at orgjunitrunnersParentRunneraccess ParentRunnerjava at orgjunitrunnersParentRunner evaluateParentRunnerjava at orgjunitrunnersParentRunnerrunParentRunnerjava at orgjunitrunnerJUnitCorerunJUnitCorejava at comintellijjunit JUnit IdeaTestRunnerstartRunnerWithArgsJUnit IdeaTestRunnerjava at comintellijrtjunitIdeaTestRunnerRepeaterstartRunnerWithArgsIdeaTestRunnerjava at comintellijrtjunitJUnitStarterprepareStreamsAndStartJUnitStarterjava at comintellijrtjunitJUnitStartermainJUnitStarterjava Process finished with exit code I originally logged this with mockitokotlin but I subsequently reproduced the issue without that library so I think the problem is in mockito Interesting version numbers kotlinversion kotlinversion junitversion junitversion mockitocoreversion mockitocoreversion Mocking types that users not own or are severely complicating test logic leads to brittle or wrong tests In particular the StackOverflow answer is wrong as the contract of javautilMap is violated When a new key is added to the Map the stubbed return would be wrong In Google we have used the DoNotMock annotation via ErrorProne to annotate these types as well as an internal list of types that cant be mocked this includes several javautil types We are using a custom Mockmaker to enforce this on runtime Based on our successful experience with DoNotMock we have seen a large reduction in badbroken tests for types involved we are proposing to open source this into Mockito itself The DoNotMock annotation can be added to any type eg classes and interfaces If in the type hierarchy of the classtobemocked there is a type that is annotated with DoNotMock Mockito will throw a DoNotMockException This would help preventing issues such as and which is inline with the guidance on our wiki A followup change would allow us to define external types like the javautil types that cant be mocked We cant add the annotation to the types as they live in the JDK instead Hey my question is when i run all tests with idea it will occurs random wrong but when i insert code in tearDown function try Threadsleep catch InterruptedException e eprintStackTrace all tests will pass I dont know why could anyone can help me explain it check that The mockito message in the stacktrace have useful information but it didnt help The problematic code if thats possible is copied here Note that some configuration are impossible to mock via Mockito Provide versions mockito jdk os any other relevant information Provide a Short Self Contained Correct Compilable Example of the issue same as any question on stackoverflowcom Read the contributing guide Currently the project is tested with the following JDKs I suggest to add a job to test with the latest release which is at the moment and move it as the next version is released to ensure that Mockito is compatible with the latest JDK Dont know if it makes sense to create separate issues but it could also be considered to Test on earlyaccess builds to know if Mockito is compatible with upcoming releases likely allowing failures Drop jobs for and as these versions are not supported to the best of my knowledge there are no updates in the OpenJDK upstream and no updated builds either by Oracle or AdoptOpenJDK or other providers Related I tried to test a template method which invokes two hook methods The template method is declared final The whole test class is defined in package mockito ie stored in the folder srcmainjavamockito package mockito public abstract class AbstractBaseClass protected abstract void hook protected abstract void hook public final void templateMethod hook hook The test class is stored in folder srctestjavamockito package mockito import static orgmockitoMockitomock import static orgmockitoMockitoverify import static orgmockitoMockitoverifyNoMoreInteractions import orgjunitjupiterapiTest public class TemplateTest Test public void testTemplate final var method mockAbstractBaseClassclass methodtemplateMethod verifymethodtemplateMethod verifyNoMoreInteractionsmethod If the test is executed then the check verifyNoMoreInteractionsmethod will report unverified invocations The test runs without problem if if method templateMethod were not declared final if method templateMethod only invokes hook or hook This is my Gradle file I use version of mockitocore plugins id java repositories jcenter sourceCompatibility targetCompatibility compileJavaoptionsencoding UTF compileTestJavaoptionsencoding UTF dependencies testImplementation orgjunitjupiterjunitjupiter testImplementation orgmockitomockitocore test useJUnitPlatform If I run the test from within Eclipse I see the following error orgmockitoexceptionsverificationNoInteractionsWanted No interactions wanted here at mockitoTemplateTesttestTemplateTemplateTestjava But found this interaction on mock abstractBaseClass at mockitoAbstractBaseClasstemplateMethodAbstractBaseClassjava For your reference here is the list of all invocations means unverified at mockitoAbstractBaseClasstemplateMethodAbstractBaseClassjava at mockitoAbstractBaseClasstemplateMethodAbstractBaseClassjava at mockitoAbstractBaseClasstemplateMethodAbstractBaseClassjava at mockitoTemplateTesttestTemplateTemplateTestjava at javabasejdkinternalreflectNativeMethodAccessorImplinvoke Native Method at javabasejdkinternalreflectNativeMethodAccessorImplinvokeNativeMethodAccessorImpljava at javabasejdkinternalreflectDelegatingMethodAccessorImplinvokeDelegatingMethodAccessorImpljava at javabasejavalangreflectMethodinvokeMethodjava at orgjunitplatformcommonsutilReflectionUtilsinvokeMethodReflectionUtilsjava at orgjunitjupiterengineexecutionMethodInvocationproceedMethodInvocationjava at orgjunitjupiterengineexecutionInvocationInterceptorChainValidatingInvocationproceedInvocationInterceptorChainjava at orgjunitjupiterengineextensionTimeoutExtensioninterceptTimeoutExtensionjava at orgjunitjupiterengineextensionTimeoutExtensioninterceptTestableMethodTimeoutExtensionjava at orgjunitjupiterengineextensionTimeoutExtensioninterceptTestMethodTimeoutExtensionjava at orgjunitjupiterengineexecutionExecutableInvokerReflectiveInterceptorCalllambdaofVoidMethod ExecutableInvokerjava at orgjunitjupiterengineexecutionExecutableInvokerlambdainvoke ExecutableInvokerjava at orgjunitjupiterengineexecutionInvocationInterceptorChainInterceptedInvocationproceedInvocationInterceptorChainjava at orgjunitjupiterengineexecutionInvocationInterceptorChainproceedInvocationInterceptorChainjava at orgjunitjupiterengineexecutionInvocationInterceptorChainchainAndInvokeInvocationInterceptorChainjava at orgjunitjupiterengineexecutionInvocationInterceptorChaininvokeInvocationInterceptorChainjava at orgjunitjupiterengineexecutionExecutableInvokerinvokeExecutableInvokerjava at orgjunitjupiterengineexecutionExecutableInvokerinvokeExecutableInvokerjava at orgjunitjupiterenginedescriptorTestMethodTestDescriptorlambdainvokeTestMethod TestMethodTestDescriptorjava at orgjunitplatformenginesupporthierarchicalThrowableCollectorexecuteThrowableCollectorjava at orgjunitjupiterenginedescriptorTestMethodTestDescriptorinvokeTestMethodTestMethodTestDescriptorjava at orgjunitjupiterenginedescriptorTestMethodTestDescriptorexecuteTestMethodTestDescriptorjava at orgjunitjupiterenginedescriptorTestMethodTestDescriptorexecuteTestMethodTestDescriptorjava at orgjunitplatformenginesupporthierarchicalNodeTestTasklambdaexecuteRecursively NodeTestTaskjava at orgjunitplatformenginesupporthierarchicalThrowableCollectorexecuteThrowableCollectorjava at orgjunitplatformenginesupporthierarchicalNodeTestTasklambdaexecuteRecursively NodeTestTaskjava at orgjunitplatformenginesupporthierarchicalNodearoundNodejava at orgjunitplatformenginesupporthierarchicalNodeTestTasklambdaexecuteRecursively NodeTestTaskjava at orgjunitplatformenginesupporthierarchicalThrowableCollectorexecuteThrowableCollectorjava at orgjunitplatformenginesupporthierarchicalNodeTestTaskexecuteRecursivelyNodeTestTaskjava at orgjunitplatformenginesupporthierarchicalNodeTestTaskexecuteNodeTestTaskjava at javabasejavautilArrayListforEachArrayListjava at orgjunitplatformenginesupporthierarchicalSameThreadHierarchicalTestExecutorServiceinvokeAllSameThreadHierarchicalTestExecutorServicejava at orgjunitplatformenginesupporthierarchicalNodeTestTasklambdaexecuteRecursively NodeTestTaskjava at orgjunitplatformenginesupporthierarchicalThrowableCollectorexecuteThrowableCollectorjava at orgjunitplatformenginesupporthierarchicalNodeTestTasklambdaexecuteRecursively NodeTestTaskjava at orgjunitplatformenginesupporthierarchicalNodearoundNodejava at orgjunitplatformenginesupporthierarchicalNodeTestTasklambdaexecuteRecursively NodeTestTaskjava at orgjunitplatformenginesupporthierarchicalThrowableCollectorexecuteThrowableCollectorjava at orgjunitplatformenginesupporthierarchicalNodeTestTaskexecuteRecursivelyNodeTestTaskjava at orgjunitplatformenginesupporthierarchicalNodeTestTaskexecuteNodeTestTaskjava at javabasejavautilArrayListforEachArrayListjava at orgjunitplatformenginesupporthierarchicalSameThreadHierarchicalTestExecutorServiceinvokeAllSameThreadHierarchicalTestExecutorServicejava at orgjunitplatformenginesupporthierarchicalNodeTestTasklambdaexecuteRecursively NodeTestTaskjava at orgjunitplatformenginesupporthierarchicalThrowableCollectorexecuteThrowableCollectorjava at orgjunitplatformenginesupporthierarchicalNodeTestTasklambdaexecuteRecursively NodeTestTaskjava at orgjunitplatformenginesupporthierarchicalNodearoundNodejava at orgjunitplatformenginesupporthierarchicalNodeTestTasklambdaexecuteRecursively NodeTestTaskjava at orgjunitplatformenginesupporthierarchicalThrowableCollectorexecuteThrowableCollectorjava at orgjunitplatformenginesupporthierarchicalNodeTestTaskexecuteRecursivelyNodeTestTaskjava at orgjunitplatformenginesupporthierarchicalNodeTestTaskexecuteNodeTestTaskjava at orgjunitplatformenginesupporthierarchicalSameThreadHierarchicalTestExecutorServicesubmitSameThreadHierarchicalTestExecutorServicejava at orgjunitplatformenginesupporthierarchicalHierarchicalTestExecutorexecuteHierarchicalTestExecutorjava at orgjunitplatformenginesupporthierarchicalHierarchicalTestEngineexecuteHierarchicalTestEnginejava at orgjunitplatformlaunchercoreDefaultLauncherexecuteDefaultLauncherjava at orgjunitplatformlaunchercoreDefaultLauncherlambdaexecute DefaultLauncherjava at orgjunitplatformlaunchercoreDefaultLauncherwithInterceptedStreamsDefaultLauncherjava at orgjunitplatformlaunchercoreDefaultLauncherexecuteDefaultLauncherjava at orgjunitplatformlaunchercoreDefaultLauncherexecuteDefaultLauncherjava at orgeclipsejdtinternaljunit runnerJUnit TestReferencerunJUnit TestReferencejava at orgeclipsejdtinternaljunitrunnerTestExecutionrunTestExecutionjava at orgeclipsejdtinternaljunitrunnerRemoteTestRunnerrunTestsRemoteTestRunnerjava at orgeclipsejdtinternaljunitrunnerRemoteTestRunnerrunTestsRemoteTestRunnerjava at orgeclipsejdtinternaljunitrunnerRemoteTestRunnerrunRemoteTestRunnerjava at orgeclipsejdtinternaljunitrunnerRemoteTestRunnermainRemoteTestRunnerjava The same error is shown if the test is executed with gradle gradle test Task test FAILED mockitoTemplateTest testTemplate FAILED orgmockitoexceptionsverificationNoInteractionsWanted at TemplateTestjava test completed failed FAILURE Build failed with an exception What went wrong Execution failed for task test There were failing tests See the report at filemockitobuildreportsteststestindexhtml Try Run with stacktrace option to get the stack trace Run with info or debug option to get more log output Run with scan to get full insights Get more help at BUILD FAILED in s actionable tasks executed uptodate Recently Im upgrading Mockito from to Theres a failure test case which was good in version that caused by OutOfMemoryXmx m when it runs a big looptimes k Ive checked the dump file and found too many StackTraceElement instances there Also noticed that for any mock object it has a property chain of mockObjmockitoInterceptorhandlermockHandlerdelegateinvocationContainerregisteredInvocationsinvocations a LinkedList which will increase after each loop And theres a StackTraceElement here invocations n locationstackTraceHolder I know theres a similar property chain in Mockito Not sure why it goes OOM after the upgradelooks like a memory leak Please verify this Thanks 