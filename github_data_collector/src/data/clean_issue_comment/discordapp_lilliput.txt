 Could this library ever support compilation onto these platforms Were having an issue with certain types of PNG images For example this x image of a tomato has a white background but has transparent borders on the top and bottom of the image tomatopng After resizing to x with lilliput we get this image tomatoout We get a visible dark line where the transparent borders begin on the original image Weve messed about with different PNG compression levels to no avail Any ideas on how we can fix this Is there a way to to make lilliput work on centos with libc installed Maybe build it in special way or something like that Build is failing on macOS Mojave githubcomdiscordapplilliput ld file too small length file Userssherifabdlnabygopkgmodgithubcomdiscordapplilliputv ddf e f bdepsosxliblibpnga for architecture x clang error unable to execute command Segmentation fault clang error linker command failed due to signal use v to see invocation Compilation finished with exit code I tried uninstalling Command Line Tools and Install High Sierras but still failing to build It build on High Sierra successfully The following gist includes the code that runs the concurrent processes that resizes images that ranges from mb to mb all in jpg format Steps the program do Reads all files in a directory named bulkin Sends goroutines for each file found the method that the goroutine runs is basically the example provided by lilliput with the addition of execution time calculation and the images that outputs the error mentioned above are glitched or gray the exact same source code is used with gocv and it works without producing this issue Information Processor GHz Intel Core i Memory GB MHz DDR OpenCV version is Go version is Any ideas would be appreciated thanks Ive compiled the examplesmaingo on both a MacBook Pro Early i and CentOS Amazon t large and the OSX build is much faster Mac time mainosx inputtlou ps pro jpg outputtest webp file type JPEG px x px image written to test webp real user sys t large ec userip examples time main inputtlou ps pro jpg outputtest webp file type JPEG px x px image written to test webp real m s user m s sys m s Is there anything obvious Im missing Ive tried the builddepslinuxsh out of the box as well as adding the following flags to the OpenCV cmake DCMAKEBUILDTYPERELEASE DWITHTBBON DWITHIPPON DWITHV LON DENABLEAVXON DENABLESSSE ON DENABLESSE ON DENABLESSE ON DENABLEPOPCNTON DENABLEFASTMATHON DBUILDEXAMPLESOFF DBUILDTESTSOFF DBUILDPERFTESTSOFF But nothing is bringing it close to the Mac speed Cheers Hi Im trying to run the example code on ubuntu but getting illegal instruction core dumped error when trying to installDo I need to install the c dependencies As a user of this project Id like to be able to align my resized image to a specified direction relative to the original image This is handled in Currently there is no flexibility in the way Image fit is done The decoded image is centred around the middle of the original image by default This PR implements additional ImageOpsSizeMethods ImageOpsFitTopLeft ImageOpsFitTopRight ImageOpsFitBottomLeft ImageOpsFitBottomRight These gives the user more flexibility on how they want to align their image respective to the original image The reason why there arent more options like ImageOpsFitTopMiddle is because the cropping only happens in one direction never in both the X and y axis So ImageOpsFitTopLeft and ImageOpsFitTopRight will accomplish the same thing if done in a scenario where the height is cropped ie aligned to top half Ive also updated the README to reflect these changes and give readers a better idea of how to resize their images