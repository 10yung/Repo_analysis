Apologies if this is the incorrect place to ask for help Im attempting to grok some of the examples and just wondering if Im reading something correctly In the proxy example the code appears to connect to the remote server at every message rust let done socketincomingforeachmove client clientaddr let server TcpStreamconnect serveraddr handle let amounts serverandthenmove server Ok Perhaps Im making a mistake regard what socket is iterating over in the call to socketincomingforeach How many iterations per connection would one expect on a long lived connection I am getting below error error E this function takes parameter but parameters were supplied homesurajprakashcargoregistrysrcgithubcom ecc db ec tokiocore srcreactorpolleventedrs if let AsyncNotReady selfpollread expected parameter error E mismatched types homesurajprakashcargoregistrysrcgithubcom ecc db ec tokiocore srcreactorpolleventedrs if let AsyncNotReady selfpollread expected enum stdresultResult found enum futuresAsync note expected type stdresultResultfuturesAsyncusize stdioError found type futuresAsync error E this function takes parameter but parameters were supplied homesurajprakashcargoregistrysrcgithubcom ecc db ec tokiocore srcreactorpolleventedrs if let AsyncNotReady selfpollwrite expected parameter error E mismatched types homesurajprakashcargoregistrysrcgithubcom ecc db ec tokiocore srcreactorpolleventedrs if let AsyncNotReady selfpollwrite expected enum stdresultResult found enum futuresAsync note expected type stdresultResultfuturesAsyncusize stdioError found type futuresAsync error E this function takes parameter but parameters were supplied homesurajprakashcargoregistrysrcgithubcom ecc db ec tokiocore srcreactorpolleventedrs if let AsyncNotReady selfpollwrite expected parameter error E mismatched types homesurajprakashcargoregistrysrcgithubcom ecc db ec tokiocore srcreactorpolleventedrs if let AsyncNotReady selfpollwrite expected enum stdresultResult found enum futuresAsync note expected type stdresultResultfuturesAsyncusize stdioError found type futuresAsync error E this function takes parameter but parameters were supplied homesurajprakashcargoregistrysrcgithubcom ecc db ec tokiocore srcreactorpolleventedrs if let AsyncNotReady selfpollread expected parameter error E mismatched types homesurajprakashcargoregistrysrcgithubcom ecc db ec tokiocore srcreactorpolleventedrs if let AsyncNotReady selfpollread expected enum stdresultResult found enum futuresAsync note expected type stdresultResultfuturesAsyncusize stdioError found type futuresAsync error E this function takes parameter but parameters were supplied homesurajprakashcargoregistrysrcgithubcom ecc db ec tokiocore srcreactorpolleventedrs if let AsyncNotReady selfpollwrite expected parameter error E mismatched types homesurajprakashcargoregistrysrcgithubcom ecc db ec tokiocore srcreactorpolleventedrs if let AsyncNotReady selfpollwrite expected enum stdresultResult found enum futuresAsync note expected type stdresultResultfuturesAsyncusize stdioError found type futuresAsync error E this function takes parameter but parameters were supplied homesurajprakashcargoregistrysrcgithubcom ecc db ec tokiocore srcreactorpolleventedrs if let AsyncNotReady selfpollwrite expected parameter error E mismatched types homesurajprakashcargoregistrysrcgithubcom ecc db ec tokiocore srcreactorpolleventedrs if let AsyncNotReady selfpollwrite expected enum stdresultResult found enum futuresAsync note expected type stdresultResultfuturesAsyncusize stdioError found type futuresAsync error aborting due to previous errors Some errors occurred E E For more information about an error try rustc explain E error Could not compile tokiocore warning build failed waiting for other jobs to finish error build failed Hey there I want to use an RPC based technique like capnprpc for my client and server side web project This lib relies on tokiocore so my naive approach was to build it for the wasm unknownunknown or wasm unknownemscripten target to use it on the client side of the web app Unfortunately the dependencies seem too tight for both compilers console Compiling numcpus v error E unresolved import sys homesaschacargoregistrysrcgithubcom ecc db ec net srctcprs use sysc Maybe a missing extern crate sys error E unresolved import sys homesaschacargoregistrysrcgithubcom ecc db ec net srcudprs use sysc Maybe a missing extern crate sys error E unresolved import sys homesaschacargoregistrysrcgithubcom ecc db ec net srcsocketrs use sys no sys in the root error E unresolved import sys homesaschacargoregistrysrcgithubcom ecc db ec net srcsocketrs use sysc Maybe a missing extern crate sys error E failed to resolve Maybe a missing extern crate sys homesaschacargoregistrysrcgithubcom ecc db ec net srcsocketrs use syscsocklent as lent Maybe a missing extern crate sys Do you think it would be useful to use the tokio related libs within a web frontend context or is my initial approach not the best Hello It seems that by using tokioexecutor under the hood the behaviour changed in backwardsincompatible way If inside one future I create a new core and try to run something in it it panics with cannot recursively call into Core I know this is an edge case and that Id try to avoid it in a real application I use it in some tests checking some edge cases of my own and that the reason for it is to actually disallow this degenerate case but it was allowed before so I dont know if its OK to forbid it now So Ive implemented a simple server here You can build this with cargo build and running it takes a socket argument for the address it should listen on The goal was to test a udp based syslog application All this really does is check the UTF datagrams to valid strings and print them The problem is I see datagram then it just consumes cpu infinitely spinning on a single core I can see in wireshark that my remote services are still sending packets but the only data Im seeing is AsyncNotReady netstat vaun shows myself listening on the expected port and that it is open There isnt every anything to encode Im just looking for a stream of incoming datagrams version info rustc nightly f c b rustc stable display idenatical behavior Im on Ubuntu kernel generic Update sometimes I just see no frames have a port open and packets hitting the port and Im still spinning at cpu with no data This adds support for liolistio a way of submitting multiple aioread aiowrite andor aiofsync operations in a single system call Higher level support will be provided by the tokiofile crate In the first example of Tokios tutorial the decode function returns an error if it has invalid UTF I hacked the decode function a bit to return that error no matter what but when I ran the server and simulated the error the connection was dropped which I surely want but that error showed up neither in the stderr nor in the response I dont really know if its omitted in the example for simplicity but I went through documentation to find how an answer to how to show that error but couldnt I am attempting to write a UdpServer which responds to packets received through UdpFramed however I run into difficulties when using Sink because it is consumed upon a call by Streamforward when making a reply I have tried placing the future returned by Streamforward to an instance variable but it is not possible to clone reasonably when a call to Handlerspawn is required as well as a new saving of the feature to the instance variable I just want the frames to be sent and flushed at the earliest time order is not required but I am no longer sure what the intended way to do this is This problem would not be an issue on a TCP connection since each client utilizes a separate Sink and therefore it is sensible to send the reply before pulling more data Let me know if I should post a Rust playground or something An example of the intended way to run a server like this would be helpful I have looked at the examples but they do not really concern my problem much at all Specifically this is because of the use of a UnsafeCell inside a long list of types so I am not sure which part exactly needs to implement this guessing it is the Queue that would assert that it is safe error E the trait bound stdcellUnsafeCellmut futuressyncmpscqueueNodestdoptionOptiontokiocorereactorMessage stdpanicRefUnwindSafe is not satisfied in gluonThread tests mainrs tensiletestnameclone move Result String the type stdcellUnsafeCellmut futuressyncmpscqueueNodestdoptionOptiontokiocorereactorMessage may contain interior mutability and a reference may not be safely transferrable across a catchunwind boundary help within gluonThread the trait stdpanicRefUnwindSafe is not implemented for stdcellUnsafeCellmut futuressyncmpscqueueNodestdoptionOptiontokiocorereactorMessage note required because it appears within the type futuressyncmpscqueueQueuestdoptionOptiontokiocorereactorMessage note required because it appears within the type futuressyncmpscInnertokiocorereactorMessage note required because it appears within the type allocarcArcInnerfuturessyncmpscInnertokiocorereactorMessage note required because it appears within the type stdmarkerPhantomDataallocarcArcInnerfuturessyncmpscInnertokiocorereactorMessage note required because it appears within the type stdptrSharedallocarcArcInnerfuturessyncmpscInnertokiocorereactorMessage note required because it appears within the type stdsyncArcfuturessyncmpscInnertokiocorereactorMessage note required because it appears within the type futuressyncmpscSendertokiocorereactorMessage note required because it appears within the type futuressyncmpscUnboundedSendertokiocorereactorMessage note required because it appears within the type tokiocorereactorRemote note required because it appears within the type stdoptionOptiontokiocorereactorRemote note required because it appears within the type gluonunnamedvmGlobalVmState note required because it appears within the type allocarcArcInnergluonunnamedvmGlobalVmState note required because it appears within the type stdmarkerPhantomDataallocarcArcInnergluonunnamedvmGlobalVmState note required because it appears within the type stdptrSharedallocarcArcInnergluonunnamedvmGlobalVmState note required because it appears within the type stdsyncArcgluonunnamedvmGlobalVmState note required because it appears within the type gluonThread note required because of the requirements on the impl of stdpanicUnwindSafe for const gluonThread note required because it appears within the type gluonunnamedgcGcPtrgluonThread note required because it appears within the type gluonRootedThread note required because it appears within the type closuretests mainrs vmgluonRootedThread namestdstringString filenamestdpathPathBuf note required because of the requirements on the impl of tensileTestable for closuretests mainrs vmgluonRootedThread namestdstringString filenamestdpathPathBuf note required by tensiletest Id like to use a UdpSocket as a StreamSink of SocketAddr Vecu Is there a reason these impls dont already exist Im aware I can use Framed but Id prefer not to have to write a UdpCodec for converting bytes to bytes IMHO UdpCodec belongs in some higherlevel library and tokiocore should just provide a UDP API for sendingreceiving packets of bytes