This PR should fix However it seems that a lot of tests are written according to the incorrect implementtaion this PR breaks a lot of tests This PR is related to and fixes an error in unmerged PR Describe the bug When I use MacOS to switch the system language to Traditional Chinese the language of the plugin package is garbled Desktop please complete the following information OS MacOS Mojave Browser Chrome Version Please run the following code in your environment and include the output momentjs Uncaught SyntaxError Invalid regular expression missing Describe the bug Everytime when I run this script for April it returns but should be returned But any other months are retuning right value var startDate moment T Z YYYYMMDDTHHmmssSSSSZ var endDate moment T Z YYYYMMDDTHHmmssSSSSZ var diff endDatediffstartDate days alertdiff Same value return without the format var startDate moment T Z var endDate moment T Z var diff endDatediffstartDate days alertdiff To Reproduce Steps to reproduce the behavior Run the script Check the number of days Expected behavior should return Momentspecific environment The time zone setting of the machine the code is running on The time and date at which the code was run Other libraries in use TypeScript Immutablejs etc Please run the following code in your environment and include the output var startDate moment T Z YYYYMMDDTHHmmssSSSSZ var endDate moment T Z YYYYMMDDTHHmmssSSSSZ var total endDatediffstartDate days alertstartDate endDate total torniker Please have a look at it is incorrect suppose to be Describe the bug To see the problem set your locale to momentlocalezhTW Then moment format a date with momentformatDDD MMM instead of getting You get Which is incorrect according to our testers Momentspecific environment Trying to test in zhTW The time zone setting of the machine the code is running on The time and date at which the code was run Other libraries in use TypeScript Immutablejs etc Please run the following code in your environment and include the output consolelognew DatetoString consolelognew DatetoLocaleString consolelognew DategetTimezoneOffset consolelognavigatoruserAgent consolelogmomentversion Wed Jan GMT Central Standard Time PM Mozilla Macintosh Intel Mac OS X AppleWebKit KHTML like Gecko Chrome Safari Additional context Add any other context about the problem here Describe the bug Creating a list of months since adding X months to the initial date Im getting The same happens to To Reproduce const moment requiremoment const initDate moment for let i i i const newDate momentinitDateaddi months consolelognewDateformatYYYYMMDD HHmmss SSS Result Desktop please complete the following information OS OSX Browser chrome and node Version x Node Momentspecific environment Please run the following code in your environment and include the output Wed Jan GMT Western European Standard Time PM Describe the bug While setting the momentcalendarFormat function typescript compiler throwing error TS Cannot assign to calendarFormat because it is a readonly property Code used momentcalendarFormat functionmyMoment const diff myMomentdiffmomentDate minutes true const retVal diff now diff sameDay diff lastDay sameElse return retVal Expected behavior The compiler should not throw any error while assigning the function Environment typescript moment Locale used engb Tue Jan GMT India Standard Time PM Mozilla Windows NT Win x AppleWebKit KHTML like Gecko Chrome Safari momentsubtractdays correctly accounts for daylight savings time in the resulting object momentsubtract does not account for daylight savings time so it is off by an hour It is my understanding that manipulating moment objects and durations is based on the number of milliseconds so I thought these two statements should be equivalent Please close this issue if it is a duplicate or a misunderstanding on my part const today Jan expectmomenttodayvalueOftoBetoday const msIn Hour const msIn Day msIn Hour const msIn Days msIn Day expectmsIn DaystoBe const days days object const days newDurationdays asMilliseconds number expectdays toBemsIn Days const days days const days newDurationdays asMilliseconds minus const todayMinus Literal today msIn Days expecttodayMinus LiteraltoBe const todayMinus todayMinus Literal msIn Hour expecttodayMinus toBe const todayMinus Minus todayMinus msIn Days msIn Hour expecttodayMinus Minus toBe const todayMinus today msIn Days msIn Days expecttodayMinus toBe plus const todayPlus Literal today msIn Days expecttodayPlus LiteraltoBe const todayPlus todayPlus Literal msIn Hour expecttodayPlus toBe const todayPlus Plus todayPlus msIn Days msIn Hour expecttodayPlus Plus toBe const todayPlus today msIn Days msIn Days expecttodayPlus toBe subtract expectmomenttodaysubtractdays valueOftoBemomenttodaysubtractdays valueOf bug the values SHOULD be equal expectmomenttodaysubtractdays valueOftoBetodayMinus this passes the input is an object expectmomenttodaysubtractdays valueOfnottoBetodayMinus Literal this passes the input is an object expectmomenttodaysubtractdays valueOftoBetodayMinus bug this fails the input is a number expectmomenttodaysubtractdays valueOfnottoBetodayMinus Literal bug this fails the input is a number expectmomenttodayMinus subtractdays valueOftoBetodayMinus Minus this passes the input is an object expectmomenttodayMinus subtractdays valueOfnottoBetodayMinus msIn Days this passes the input is an object expectmomenttodayMinus subtractdays valueOftoBetodayMinus Minus bug this fails the input is a number expectmomenttodayMinus subtractdays valueOfnottoBetodayMinus msIn Days bug this fails the input is a number expectmomenttodaysubtractdays valueOftoBetodayMinus this passes the input is an object expectmomenttodaysubtractdays valueOftoBetodayMinus this passes with input as number because DST matches for new date and old date add expectmomenttodayadddays valueOftoBemomenttodayadddays valueOf bug the values SHOULD be equal expectmomenttodayadddays valueOftoBetodayPlus expectmomenttodayadddays valueOftoBetodayPlus bug this fails the input is a number expectmomenttodayPlus adddays valueOftoBetodayPlus Plus this passes the input is an object expectmomenttodayPlus adddays valueOftoBetodayPlus Plus bug this fails the input is a number expectmomenttodayadddays valueOftoBetodayPlus this passes the input is an object expectmomenttodayadddays valueOftoBetodayPlus this passes with input as number because DST matches for new date and old date Describe the bug I loaded a page yesterday but did not close it Today I clicked a button on that page to use moment to get the date of today it got the date of yesterday