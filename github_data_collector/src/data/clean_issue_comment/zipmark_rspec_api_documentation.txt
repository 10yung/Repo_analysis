Hello This issue is pretty much for reporting the incompatibility to the gem author and hopefully it will help anyone who runs into this problem to understand whats going on Basically after we upgrade our dependencies to use Rack we noticed that our generated documentation no longer show JSON response but instead showing binary data instead Digging in further we found out that in especially this change MockResponsebody now creates a buffer and use to join the content together However on line the author uses Stringnew without specifying the encoding resulting in Ruby creating a new String with ASCII BIT encoding by default As it turns out rspecapidocumentation relies on string encoding to determine if it should include the response body in the documentation or not Hence the change in Rack broke this conditional Ive reported this issue to Rack in and hopefully we can solve this soon The solution right now for us is to lock Rack to for now Thank you very much lets say I have a structure like data id name test id name test is there a way I can document the nested fields so as a result I will get openapi generated correctly so in swagger I can add these items from the UI Added operation id to OpenAPIWriter for generating more complete swagger definitions Corresponding method in DSL added According to this issue I need to define a route but using route causes some really bad API blueprint formatting putting GET and PUT together in one section is really confusing The readme says If you dont use route then param in getparam should be an URL as states in the rest of this documentation So I tried get apicustomers do parameter keyword Filter search content example John type string letkeyword John examplerequest List All Customers do expectresponsestatusto eq end end But all I get is this error undefined method routeuri for RSpecCoreExample List All Customers NoMethodError I dont know if my code is wrong the readme is wrong or the gem doesnt work with the getparam format Documentation is scarce Any ideas When running the below command to regenerate API docs RAILSENVtest rake docsgenerate it will execute every single rspec test under specacceptancespecrb It even executes the tests that are explicitly marked as document false With this update only the rspec tests that contribute to the generation of API documentation will be executed by default which is much more efficient Aside For our team this reduced the amount of tests being executed during docs generation down from to Further notes Relevant RSpec documentation Hey there Im using RAD to document a JSONAPI formatted Rails application This means my Accept and ContentType headers are applicationvndapijson not applicationjson The tests are passing just fine The problem is the output to Slate which is strange This is an example of a test ruby context sorting do letsort name parameter sort Sorting projects example Sorting projects do dorequest expectstatusto eq expectresponsebodyto bejsonwithcontentproject idatpathdata id expectresponsebodyto bejsonwithcontentprojectatpathdata type expectresponsebodyto bejsonwithcontentproject nameatpathdata attributesname end end This results in a request block being generated in the resulting slate documentation containing this json sort name That clearly isnt JSON nor should there be a request block generated at this point This is a URL parameter So my question is how do I get rid of the request body block from the generated markdown for GET requests Steps to Reproduce I have created a minimal rails app via Github Here it is There is a User model We make use of the active storage gem to load an avatar of the user The problem in summary the specs are not passing when they should Expected Behaviour Both of the following specs should succeed ruby specrequestsuserspecrb require railshelper RSpecdescribe Users type request do describe it attaches uploaded files do it attaches the uploaded file do file fixturefileuploadRailsrootjoinpublic avatarjpg imagejpg expect post apiuserspath params user username Ben avatar file to changeActiveStorageAttachment countby end end end ruby specacceptanceapiuserscontrollerspecrb require acceptancehelper require actiondispatchtestingtestprocess resource Api do header Accept applicationjson header ContentType applicationjson header Host examplecom describe POST apiusers do post apiusers do letavatar fixturefileuploadRailsrootjoinpublic avatarjpg imagejpg letusername Test User letparams user username username avatar avatar context with avatar do it expect dorequestparams to change ActiveStorageAttachmentcount from to endruby p end end end Actual Behaviour Only one of the specs pass the request spec passes but the controller spec does not pass System Configuration Rails version Ruby Version ruby p Adds support to swaggers vendor extension xlogo in order to be used by supported frontends Otherwise it causes a name conflict if API uses httpmethod parameter