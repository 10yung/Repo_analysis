This is a great tool I came here when my notebooks werent rendering on github but this is so much quicker I wonder if this could be turned into a chrome extension Is anyone doing this I presume those are accessible via the API There seem to be javascript issues with encodingdecoding base data with nonlatin characters There are many things that could go wrong add UIvisible error reporting URL does not match what we need see the regexp data is not fetched from the API for some reason API limits are exhausted This one is really broken in nbviewerjs As discovered in we sometimes render multiple cell outputs but we should always render just one There is an ordering defined in nbconvert so we should check each when parsing the data field Before implementing this lets check a few notebooks from tests see and how they render before and after see if we can implement some of the mime types that are not yet supported eg applicationpdf grep as many notebooks as possible and check their mime types maybe there our some extra mime types out there Im not sure what the best course of action here is Whether we should just care about DOM generation or if we should go full screenshot testing using Selenium or Puppeteer The main reason is to test things like overflows in pres and imgs multiple outputs legacy versions etc Things that tend to break with changes to the library code There is basic wrapping implemented in but Id like it to be extended to all pre elements well all but code inputs which should overflow scroll Also make sure that the current CSS implementation is the most compatible one there seems to be some contention about that something of math such as formula in tex are not renderd properly and something like description of matplotlibpyplots output matplotlibfigureFigure at xd f may be customized hidden