Hello there I know there is already some issues related to this one but I didnt find any solution for now I do not know if its MongoDB library related or MongoDB Doctrine related so I posted the issue here Bug Report My currently application Symfony is hosted on Google Cloud App Engine GAE and seems to not be able to connect to MongoDB Atlas However because of GAE I cannot connect on the server using SSH and cannot test the database connection using mongo shell I always get the next error message No suitable servers found serverselectiontimeoutms timed out Failed to receive length header from server calling ismaster on mainclustershard ev mmmongodbnet Failed to receive length header from server calling ismaster on mainclustershard ev mmmongodbnet Failed to receive length header from server calling ismaster on mainclustershard ev mmmongodbnet Environment PHP Version MongoDB extension version MongoDB extension stability stable libbson bundled version libmongoc bundled version libmongoc SSL enabled libmongoc SSL library OpenSSL libmongoc crypto enabled libmongoc crypto library libcrypto libmongoc crypto system profile disabled libmongoc SASL enabled libmongoc ICU enabled libmongoc compression enabled libmongoc compression snappy disabled libmongoc compression zlib enabled Debug Capturing data for mongodbcom array name CNmongodbcom subject array CN mongodbcom hash b db f issuer array C US O Amazon OU Server CA B CN Amazon version serialNumber serialNumberHex C AFC C A E F A validFrom Z validTo Z validFromtimet validTotimet signatureTypeSN RSASHA signatureTypeLN sha WithRSAEncryption signatureTypeNID purposes array array true false sslclient array true false sslserver array true false nssslserver array false false smimesign array false false smimeencrypt array false false crlsign array true true any array true false ocsphelper array false false timestampsign extensions array authorityKeyIdentifier keyid A A B CA BF DD subjectKeyIdentifier D A C C E CE C B CEB F CB B subjectAltName DNSmongodbcom DNScorpmongodbcom DNSsupportmongodbcom keyUsage Digital Signature Key Encipherment extendedKeyUsage TLS Web Server Authentication TLS Web Client Authentication crlDistributionPoints Full Name URI certificatePolicies Policy Policy authorityInfoAccess OCSP URI CA Issuers URI basicConstraints CAFALSE ctprecertscts Signed Certificate Timestamp Version v x Log ID EE BBDB CE BAE FABE E A F E FB D C B AA FDCB Timestamp Mar GMT Extensions none Signature ecdsawithSHA E D DB A C E EF D B B E C F D D C C D FA C EE DCE C FFDAF D C E AF D B F F C BD A Signed Certificate Timestamp Version v x Log ID BFE CF C FBDF EFF D FF AB C B EAFF EA F Timestamp Mar GMT Extensions none Signature ecdsawithSHA B DECE D F AE E D B AA C F A C A BAA D B E E AE F D F A EF D BB ADF A A F FF BAD CA E EE Capturing data formainclustershard ev mmmongodbnet array name CUSSTNew YorkLNew YorkOMongoDB IncOUCloud SRECNmongodbnet subject array C US ST New York L New York O MongoDB Inc OU Cloud SRE CN mongodbnet hash c ebf issuer array C US O DigiCert Inc CN DigiCert SHA Secure Server CA version serialNumber serialNumberHex E D F EC B B C B C EEE E validFrom Z validTo Z validFromtimet validTotimet signatureTypeSN RSASHA signatureTypeLN sha WithRSAEncryption signatureTypeNID purposes array array true false sslclient array true false sslserver array true false nssslserver array array false false smimeencrypt array false false crlsign array true true any array true false ocsphelper array false false timestampsign extensions array authorityKeyIdentifier keyid F C D F E D B CE C D E subjectKeyIdentifier A E A BB D C D A C F subjectAltName DNSmongodbnet DNSmongodbnet keyUsage Digital Signature Key Encipherment extendedKeyUsage TLS Web Server Authentication TLS Web Client Authentication crlDistributionPoints Full Name URI Full Name URI certificatePolicies Policy CPS Policy authorityInfoAccess OCSP URI CA Issuers URI basicConstraints CAFALSE ctprecertscts Signed Certificate Timestamp Version v x Log ID A B B BB A CC A C F BDFB E CD EC DDC Timestamp Feb GMT Extensions none Signature ecdsawithSHA CB CD ACE CC C DEDB C EDEB FE D A D F F D EC CF B EBDA F A D E F A E A C B C F Signed Certificate Timestamp Version v x Log ID BFE CF C FBDF EFF D FF AB C B EAFF EA F Timestamp Feb GMT Extensions none Signature ecdsawithSHA D E A CB F CC CDC CD D A B EC D CF C BDF D B B AB B E FB E D CDA Signed Certificate Timestamp Version v x Log ID BBD DFBC F A B AA B AAB E A E ED Timestamp Feb GMT Extensions none Signature ecdsawithSHA A A F C CC FEC F CAFD A AA E A A E E C D A C CB B F ED FBBAF EE BE EA DC C B Signed Certificate Timestamp Version v x Log ID F AC F D A FF C D C DB A D Timestamp Feb GMT Extensions none Signature ecdsawithSHA D C D E E F BD F A D C A CE F DBAE A E E D AA BC D A DCB ECA F F B BA F DA FB BAE Thanks for your help What is the alternative for Fatal error Uncaught Error Call to undefined method MongoDB Driver CursorhasNext One of my application using MongoDB Client library with old php version I just upgraded my php version as well as upgraded mongo library When following function is calling its giving me Fatal error Uncaught Error Call to undefined method MongoDB Driver CursorhasNext function getresultrow if thiscursorhasNext return thiscursorgetNext Please suggest how i can fix it Allows fetching a new client instance with changed readConcern readPreference writeConcern and typeMap options If only the typeMap changes the original manager is reused Changing any of the readConcern readPreference writeConcern options causes instantiation of a new manager to ensure consistency between the managers options and those stored in the client Not sure if we want to merge it but I wanted to open it for discussion purposes to demonstrate the complexity of actually implementing this in PHPLIB