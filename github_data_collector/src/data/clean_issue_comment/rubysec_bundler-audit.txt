This change converts the input uri to a string within the internalsource method to avoid the ArgumentError issue from We are using Rails and Ruby x and your awesome gem as well After some gem updates the thor gem version was updated to and when I try to run a rake command like bundle exec rake T got this error TypeError NameErrorCheckers is not a module After a long investigation I realised that the thor gem caused this because they start to support didyoumean library The problem is that this support is old and in the mean time the didyoumean library was changed from this is using Ruby to this is using Ruby The thor gem was updated so version x can solve the issue but your gem does not let us to update this gem The thor gem should stay on because of that Could you update your thor support please Thor changelog Trying to use bundleraudit with Bundler fails because Scannerinternalsource gets passed a BundlerURIHTTP instance uricommonrb in URI bad argument expected URI object or URI string ArgumentError This patch uses tos on the passed object to work around that issue bundleraudit starts failing today at CI cd app bundle exec bundleaudit update bundle exec bundleaudit Updating rubyadvisorydb Cloning into homeapplocalsharerubyadvisorydb Updated rubyadvisorydb rubyadvisorydb advisories bundler failed to load command bundleaudit appvendorbundleruby binbundleaudit ArgumentError bad argument expected URI object or URI string usrlocallibruby uricommonrb in URI appvendorbundleruby gemsbundleraudit libbundlerauditscannerrb in internalsource appvendorbundleruby gemsbundleraudit libbundlerauditscannerrb in block levels in scansources appvendorbundleruby gemsbundleraudit libbundlerauditscannerrb in each appvendorbundleruby gemsbundleraudit libbundlerauditscannerrb in block in scansources appvendorbundleruby gemsbundleraudit libbundlerauditscannerrb in map appvendorbundleruby gemsbundleraudit libbundlerauditscannerrb in scansources appvendorbundleruby gemsbundleraudit libbundlerauditscannerrb in scan appvendorbundleruby gemsbundleraudit libbundlerauditclirb in check appvendorbundleruby gemsthor libthorcommandrb in run appvendorbundleruby gemsthor libthorinvocationrb in invokecommand appvendorbundleruby gemsthor libthorrb in dispatch appvendorbundleruby gemsthor libthorbaserb in start appvendorbundleruby gemsbundleraudit binbundleaudit in top required appvendorbundleruby binbundleaudit in load appvendorbundleruby binbundleaudit in top required ERROR Job failed exit code The gem found the vulnerability and printed out the information Updated rubyadvisorydb rubyadvisorydb advisories Name yard Version Advisory Criticality Unknown URL Title Possible arbitrary path traversal and file access via yard server Solution upgrade to Vulnerabilities found Its really interesting because the vulnerability hasnt advisory such a CVE I opened the source code and saw that the gem allows to ignore vulnerabilities by CVE or OSVDB But it doesnt contain any information about it How to ignore the current vulnerability I updated the submodules This should normally fix the specs Closes CI failures are not related to my PR Closes 