 error E cannot find function glfwGetX Window in module ffi usrportsgraphicsrxworkrx cargocratesglfw srclibrs let window ffiglfwGetX Windowcontextwindowptr help a function with a similar name exists glfwDestroyWindow usrportsgraphicsrxworkrx cargocratesglfw srcffimodrs pub fn glfwDestroyWindowwindow mut GLFWwindow similarly named function glfwDestroyWindow defined here error E cannot find function glfwGetX Display in module ffi usrportsgraphicsrxworkrx cargocratesglfw srclibrs let display ffiglfwGetX Display not found in ffi Is it possible to compile this library statically via the musl target I have not been successful so far Hey would it make sense to export vksys from glfw for applications that use vulkan This would ensure the versions always match I seems glfwwindow uses an identical setup which builds fine Hello Ive been happily using the glfw crate on OpenBSD so many thanks However I found out today that v does not work on OpenBSD To get v to work one needs to disable the vulkan feature but even doing that doesnt work with v I get the following errors note that all of the aaaas after filenames below was changed by me on purpose error linking with cc failed exit code note cc Wlasneeded Wlznoexecstack m L usrlocallibrustlibx unknownopenbsdlib homepersonmydocsluminancerstargetdebugdepshelloworldaaaarcguo homepersonmydocsluminancerstargetdebugdepshelloworldaaaarcguo homepersonmydocsluminancerstargetdebugdepshelloworldaaaarcguo homepersonmydocsluminancerstargetdebugdepshelloworldaaaarcguo homepersonmydocsluminancerstargetdebugdepshelloworldaaaarcguo homepersonmydocsluminancerstargetdebugdepshelloworldaaaarcguo homepersonmydocsluminancerstargetdebugdepshelloworldaaaarcguo homepersonmydocsluminancerstargetdebugdepshelloworldaaaarcguo homepersonmydocsluminancerstargetdebugdepshelloworldaaaarcguo homepersonmydocsluminancerstargetdebugdepshelloworldaaaarcguo homepersonmydocsluminancerstargetdebugdepshelloworldaaaarcguo homepersonmydocsluminancerstargetdebugdepshelloworldaaaarcguo homepersonmydocsluminancerstargetdebugdepshelloworldaaaarcguo homepersonmydocsluminancerstargetdebugdepshelloworldaaaarcguo homepersonmydocsluminancerstargetdebugdepshelloworldaaaarcguo homepersonmydocsluminancerstargetdebugdepshelloworldaaaarcguo homepersonmydocsluminancerstargetdebugdepshelloworldaaaarcguo homepersonmydocsluminancerstargetdebugdepshelloworldaaaarcguo homepersonmydocsluminancerstargetdebugdepshelloworldaaaarcguo homepersonmydocsluminancerstargetdebugdepshelloworldaaaarcguo homepersonmydocsluminancerstargetdebugdepshelloworldaaaarcguo homepersonmydocsluminancerstargetdebugdepshelloworldaaaarcguo homepersonmydocsluminancerstargetdebugdepshelloworldaaaarcguo homepersonmydocsluminancerstargetdebugdepshelloworldaaaarcguo homepersonmydocsluminancerstargetdebugdepshelloworldaaaarcguo homepersonmydocsluminancerstargetdebugdepshelloworldaaaarcguo homepersonmydocsluminancerstargetdebugdepshelloworldaaaarcguo homepersonmydocsluminancerstargetdebugdepshelloworldaaaarcguo homepersonmydocsluminancerstargetdebugdepshelloworldaaaarcguo homepersonmydocsluminancerstargetdebugdepshelloworldaaaarcguo homepersonmydocsluminancerstargetdebugdepshelloworldaaaarcguo homepersonmydocsluminancerstargetdebugdepshelloworldaaaarcguo homepersonmydocsluminancerstargetdebugdepshelloworldaaaarcguo homepersonmydocsluminancerstargetdebugdepshelloworldaaaarcguo homepersonmydocsluminancerstargetdebugdepshelloworldaaaarcguo homepersonmydocsluminancerstargetdebugdepshelloworldaaaarcguo homepersonmydocsluminancerstargetdebugdepshelloworldaaaarcguo homepersonmydocsluminancerstargetdebugdepshelloworldaaaarcguo homepersonmydocsluminancerstargetdebugdepshelloworldaaaarcguo homepersonmydocsluminancerstargetdebugdepshelloworldaaaarcguo homepersonmydocsluminancerstargetdebugdepshelloworldaaaarcguo homepersonmydocsluminancerstargetdebugdepshelloworldaaaarcguo homepersonmydocsluminancerstargetdebugdepshelloworldaaaarcguo homepersonmydocsluminancerstargetdebugdepshelloworldaaaarcguo homepersonmydocsluminancerstargetdebugdepshelloworldaaaarcguo homepersonmydocsluminancerstargetdebugdepshelloworldaaaarcguo o homepersonmydocsluminancerstargetdebugdepshelloworldf c ff b homepersonmydocsluminancerstargetdebugdepshelloworldaaaarcguo Wlgcsections pie Wlzrelro Wlznow nodefaultlibs L homepersonmydocsluminancerstargetdebugdeps L homepersonmydocsluminancerstargetdebugbuildglfwsys a e outlib L usrlocallibrustlibx unknownopenbsdlib WlBstatic homepersonmydocsluminancerstargetdebugdepslibluminanceglfwaaaarlib homepersonmydocsluminancerstargetdebugdepslibluminancewindowingaaaarlib homepersonmydocsluminancerstargetdebugdepslibglfwaaaarlib homepersonmydocsluminancerstargetdebugdepslibnumaaaarlib homepersonmydocsluminancerstargetdebugdepslibnumrationalaaaarlib homepersonmydocsluminancerstargetdebugdepslibnumbigintaaaarlib homepersonmydocsluminancerstargetdebugdepslibrandaaaarlib homepersonmydocsluminancerstargetdebugdepslibnumcomplexaaaarlib homepersonmydocsluminancerstargetdebugdepslibrustcserializeaaaarlib homepersonmydocsluminancerstargetdebugdepslibnumiteraaaarlib homepersonmydocsluminancerstargetdebugdepslibnumintegeraaaarlib homepersonmydocsluminancerstargetdebugdepslibenumprimitiveaaaarlib homepersonmydocsluminancerstargetdebugdepslibnumtraitsaaaarlib homepersonmydocsluminancerstargetdebugdepslibnumtraitsaaaarlib homepersonmydocsluminancerstargetdebugdepslibbitflagsaaaarlib homepersonmydocsluminancerstargetdebugdepsliblogaaaarlib homepersonmydocsluminancerstargetdebugdepslibcfgifaaaarlib homepersonmydocsluminancerstargetdebugdepsliblibcaaaarlib homepersonmydocsluminancerstargetdebugdepslibsemveraaaarlib homepersonmydocsluminancerstargetdebugdepslibnomaaaarlib homepersonmydocsluminancerstargetdebugdepslibluminanceaaaarlib homepersonmydocsluminancerstargetdebugdepslibglaaaarlib Wlstartgroup usrlocallibrustlibx unknownopenbsdliblibstdaaaarlib usrlocallibrustlibx unknownopenbsdliblibpanicunwindaaaarlib usrlocallibrustlibx unknownopenbsdliblibbacktracesysaaaarlib usrlocallibrustlibx unknownopenbsdliblibunwindaaaarlib usrlocallibrustlibx unknownopenbsdliblibrustcdemangleaaaarlib usrlocallibrustlibx unknownopenbsdlibliblibcaaaarlib usrlocallibrustlibx unknownopenbsdlibliballocaaaarlib usrlocallibrustlibx unknownopenbsdliblibrustcstdworkspacecoreaaaarlib usrlocallibrustlibx unknownopenbsdliblibcoreaaaarlib Wlendgroup usrlocallibrustlibx unknownopenbsdliblibcompilerbuiltinsaaaarlib WlBdynamic lutil lpthread lcabi lc lm lutil lcompilerrt many errors of similar form as below referenced by x initc homepersoncargoregistrysrcgithubcomaaaaaglfwsys srcx initc x initcoinitExtensions in archive homepersonmydocsluminancerstargetdebugdepslibglfwaaaaarlib ld error undefined symbol XRRFreeScreenResources referenced by x initc homepersoncargoregistrysrcgithubcomaaaaaglfwsys srcx initc x initcoinitExtensions in archive homepersonmydocsluminancerstargetdebugdepslibglfwaaaaarlib ld error too many errors emitted stopping now use errorlimit to see all errors cc error linker command failed with exit code use v to see invocation Best wishes Rob I am using Fedora and XWayland on x arch cargo check error cargo check verbose coloralways all alltargets Im trying to use Vulkan in combination with glfwrs but I didnt find a function that would wrap glfwCreateWindowSurface Is it missing for a reason or is it just an oversight If its just an oversight I can make a pull request later this week For now Im trying to use glfwffiglfwCreateWindowSurface instead but to do that I need the raw pointer on the GLFWwindow I didnt find a way to retrieve it from a glfwWindow is it possible EDIT Ok I found how to retrieve the pointer its windowwindowptr When window is resized on macos event polling api is blocked According to this it may be solved by redraw inside window refresh callback when window is resizing But I cannot pull it off the event loop with a loop like this rust while windowshouldclose glfwwaiteventstimeout for event in glfwflushmessages events handlewindoweventwindow event Since its blocked on waitevents or pollevents callbacks are processed by this eventloop Cargo version cargo a d Rust version rustc b ae Im not compile the vulkan example toml cargotoml package name vulkanrust version authors Florian RICHER MrDev trexricher gmailcom features default metal gfxbackendmetal gl gfxbackendgl dx gfxbackenddx vulkan gfxbackendvulkan unstable dependencies vksys envlogger image log winit glsltospirv gfxhal path gfxsrchal version gfxbackendempty path gfxsrcbackendempty version dependenciesglfw git dependenciesgfxbackendgl path gfxsrcbackendgl version features glutin optional true dependenciesgfxbackendvulkan path gfxsrcbackendvulkan version features glsltospirv optional true targetcfganytargetos macos alltargetos ios targetarch aarch dependenciesgfxbackendmetal path gfxsrcbackendmetal version optional true targetcfgwindowsdependenciesgfxbackenddx path gfxsrcbackenddx version optional true bin name main path srcmainrs rust mainrs Copyright The GLFWRS Developers For a full listing of the authors refer to the AUTHORS file at the toplevel directory of this distribution Licensed under the Apache License Version the License you may not use this file except in compliance with the License You may obtain a copy of the License at Unless required by applicable law or agreed to in writing software distributed under the License is distributed on an AS IS BASIS WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND either express or implied See the License for the specific language governing permissions and limitations under the License cfgfeature vulkan extern crate glfw extern crate vksys use stdosrawcvoid use stdmem use stdptr use vksys self as vk EntryPoints InstancePointers InstanceCreateInfo Instance as VkInstance Result as VkResult use glfwContext fn main let mut glfw glfwinitglfwFAILONERRORSunwrap glfwwindowhintglfwWindowHintVisibletrue let mut window glfwcreatewindow Defaults glfwWindowModeWindowed expectFailed to create GLFW window windowmakecurrent assertglfwvulkansupported let requiredextensions glfwgetrequiredinstanceextensionsunwraporvec VKKHRsurface will always be available if the previous operations were successful assertrequiredextensionscontains VKKHRsurfacetostring printlnVulkan required extensions requiredextensions Load up all the entry points using as the VkInstance since you cant have an instance before you get vkCreateInstance let mut entrypoints EntryPoints EntryPointsloadfunc windowgetinstanceprocaddress functostrunwrap as const cvoid let instance VkInstance unsafe createinstance mut entrypoints let mut instanceptrs InstancePointers InstancePointersloadfunc windowgetinstanceprocaddressinstance functostrunwrap as const cvoid Load other pointers and do other Vulkan stuff here unsafe destroyinstanceinstance mut instanceptrs printlnVulkan instance successfully created and destroyed unsafe fn createinstanceentrypoints mut EntryPoints VkInstance let mut instance VkInstance memuninitialized This is literally the bare minimum required to create a blank instance Youll want to fill in this with real data yourself let info InstanceCreateInfo InstanceCreateInfo sType vkSTRUCTURETYPEINSTANCECREATEINFO pNext ptrnull flags pApplicationInfo ptrnull enabledLayerCount ppEnabledLayerNames ptrnull These two should use the extensions returned by windowgetrequiredinstanceextensions enabledExtensionCount ppEnabledExtensionNames ptrnull let res VkResult entrypointsCreateInstance info as const InstanceCreateInfo ptrnull mut instance as mut VkInstance asserteqres vkSUCCESS instance unsafe fn destroyinstanceinstance VkInstance instanceptrs mut InstancePointers instanceptrsDestroyInstanceinstance ptrnull bash cargo run bin main featuresvulkan Compiling vulkanrust v filehomeflorianDocumentsvulkanrust error E no method named vulkansupported found for type glfwGlfw in the current scope srcmainrs assertglfwvulkansupported error E no method named getrequiredinstanceextensions found for type glfwGlfw in the current scope srcmainrs let requiredextensions glfwgetrequiredinstanceextensionsunwraporvec error E no method named getinstanceprocaddress found for type glfwWindow in the current scope srcmainrs windowgetinstanceprocaddress functostrunwrap as const cvoid error E no method named getinstanceprocaddress found for type glfwWindow in the current scope srcmainrs windowgetinstanceprocaddressinstance functostrunwrap as const cvoid error aborting due to previous errors For more information about this error try rustc explain E error Could not compile vulkanrust To learn more run the command again with verbose 