The PowerShell Gallery is a packagedistribution system designed specifically for PowerShell modules and scripts While NuGet provides one option for distributing NETC packages PSGallery is more tightly integrated with PowerShell and above Getting PSBuild on the PowerShell Gallery would mean anyone running PowerShell or above could install the module simply by running InstallModule PSBuild no initialization scripts or the like required Just for documentation purpose I tried to install psbuild as described in the readme PS C Users floriandecker newobject NetWebClientDownloadString iex This was followed by this errors CopyItem Could not find a part of the path C Users floriandecker AppData Local GitHub shellps psbuild At line char CopyItem Path psbPsm FileDirectoryFullName Dest CategoryInfo NotSpecified CopyItem DirectoryNotFoundException FullyQualifiedErrorId SystemIODirectoryNotFoundExceptionMicrosoftPowerShellCommandsCopyItemCommand ImportModule The specified module C Users floriandecker AppData Local GitHub shellps psbuild psbuildpsm was not loaded because no valid module file was found in any module directory At line char ImportModule Name moduleFile DisableNameChecking Force CategoryInfo ResourceUnavailable C Users floriald psbuildpsm String ImportModule FileNot FoundException FullyQualifiedErrorId ModulesModuleNotFoundMicrosoftPowerShellCommandsImportModuleCommand psbuild is installed and ready to use USAGE PS InvokeMSBuild C temp msbuild msbuildproj PS InvokeMSBuild C temp msbuild pathproj properties OutputPathc ouput visualstudioversion extraArgs nologo For more details gethelp InvokeMSBuild Or visit The log says that the installation was successfull although none of the commands worked afterwards I solved the problem by deleting the file C Users floriandecker AppData Local GitHub shellps and running the installation again Thanks for the nice project Cheers Florian Hi if Im not mistaken msbuild is not detected and used automatically when VS Buildtools installed The path changed to c Program Files x Microsoft Visual Studio BuildTools MSBuild Bin MSBuildexe Or in case VS installed look out for the edition dir name c Program Files x Microsoft Visual Studio Professional MSBuild Bin MSBuildexe Thanks for fixing or correcting me Petr Currently there is a call to SystemSecurityCryptographyHashAlgorithm Create at This doesnt work in PowerShell core We can move to the NuGet package Related to I just came across psbuild and am very interested in it However having recently moved to PowerShell Core for portability reasons I wanted to give psbuild a spin under PS Core beta PS C Kellekek Microsoft PowerShell InstallModule InvokeMsBuild PackageManagement InstallPackage Could not compare alpha to Error Cannot convert value to typ e SystemManagementAutomationSemanticVersion Error Cannot process argument because the value of argument versio n is not valid Change the value of the version argument and run the operation again Trying with the selfinstalling script PS C Users Matty Desktop InvokeWebRequest OutFile GetPSBuildps PS C Users Matty Desktop GetPSBuildps Method invocation failed because SystemEnvironment does not contain a method named GetFolderPath At C Users Matty Desktop GetPSBuildps char systemDir Environment GetFolderPathSystem CategoryInfo InvalidOperation RuntimeException FullyQualifiedErrorId MethodNotFound NewObject Cannot find type SystemNetWebClient verify that the assembly containing this type is loaded At C Users Matty Desktop GetPSBuildps char NewObject SystemNetWebClientDownloadFilenugetDown CategoryInfo InvalidType NewObject PSArgumentException FullyQualifiedErrorId TypeNotFoundMicrosoftPowerShellCommandsNewObjectCommand psbuild not found and was not downloaded successfully sorry Check your nugetconfig default pathC Users Matty AppData Roaming NuGet NuGetconfig file to ensure that nugetorg is enabled You can also try changing the versionToInstall value You can file an issue at At C Users Matty Desktop GetPSBuildps char throw psbuild not found and was not downloaded success CategoryInfo OperationStopped psbuild not foupsbuildissuesString RuntimeException FullyQualifiedErrorId psbuild not found and was not downloaded successfully sorry Check your nugetconfig default pathC Users Matty AppData Roaming NuGet NuGetconfig file to ensure that nuge torg is enabled You can also try changing the versionToInstall value You can file an issue at MSBuild now being able to build on OSX and Linux using Net Core it would be nice if psbuild followed the example Due to we should not enable masking secrets all the time Its most important for CI builds so it would be better to default this to false but if running on CI then enable it by default We can use an environment variable envPSBuildMaskSecretstrue to enable this behavior When masking secrets is enabled default today it messes up the PowerShell prompt Its pretty invasive actually and we should change the default in a better way because of this Nugetorg throws a unauthorized when I try to run GetPSBuildps Does the webclient need a user agent string PS C newobject NetWebClientDownloadString iex GetNuget Exception calling DownloadFile with arguments The remote server returned an error Unauthorized At line char nugetPath GetNuget toolsDir toolsDir nugetDownloadUrl n CategoryInfo NotSpecified GetNuget MethodInvocationException FullyQualifiedErrorId WebExceptionGetNuget psbuild not found and was not downloaded successfully sorry Check your nugetconfig default pathC Users jcarlson AppData Roaming NuGet NuGetconfig file to ensure that nugetorg is enabled You can also try changing the versionToInstall value You can file an issue at At line char throw psbuild not found and was not downloaded successfully sorr CategoryInfo OperationStopped psbuild not foupsbuildissuesString RuntimeException FullyQualifiedErrorId psbuild not found and was not downloaded successfully sorry Check your nugetconfig default pathC Users jcarlson AppData Roaming NuGet NuGetconfig file to ensure that nugetorg is enabled You can also try changing the versionToInstall value You can file an issue at I opened a question on StackOverflow for how to check Visual Studio projects csproj files for consistency in their property settings Apparently there is no straightforward way to do this and you have to either write custom tasks or manually parse csproj files as XML for testing project properties I think this is a good feature to be added to InvokeMSBuild Right now InvokeMSBuild has a properties parameter which passes these parameters for build but it does not test projects for having them For example if you pass properties WarningLevel it will ignore the current WarningLevel property in projects and use the specified value instead But what if you want the build to fail with proper error message if WarningLevel in any of the building projects is not Ive seen different team invent their own stuff to implement this kind of verification in their projects I suggest adding a new parameter to InvokeMSBuild just for this like requireProperties that will cause the build to fail if any of the projects does not comply with the specified property requirements One thing to notice is if configuration Debug is specified together with requireProperties hash then required properties will be checked only for the Debug condition For this we may want to alternatively have the option to pass an MSBuild project with all required properties on different conditions and get InvokeMSBuild to verify that every project being built follows that 