The only way Ive found so far is to grep for this line Based on romkatvpowerlevel kconfigp kleanzsh checksum in the p kzsh file zsh local lines fp kcfgpath if Mlinesbp kzsh then echo match fi But Im wondering if there isnt an easier way to do it Thanks Requires This would be really useful for the reasons I went into here basically because it makes things much simpler when using the GitHub Pull Request workflow Workaround In case this is useful to anyone else I currently work around it by adding the following lines to my p kzsh sh local a pushbehindaheadps tcommand git revlist leftright count HEADpush devnull local VCSSTATUSPUSHCOMMITSAHEADpushbehindahead local VCSSTATUSPUSHCOMMITSBEHINDpushbehindahead if behind the push branch VCSSTATUSPUSHCOMMITSBEHIND res clean VCSSTATUSPUSHCOMMITSBEHIND VCSSTATUSPUSHCOMMITSAHEAD VCSSTATUSPUSHCOMMITSBEHIND res if ahead of the push branch no leading space if also behind VCSSTATUSPUSHCOMMITSAHEAD resclean VCSSTATUSPUSHCOMMITSAHEAD You want to add them under this line sh VCSSTATUSCOMMITSAHEAD resclean VCSSTATUSCOMMITSAHEAD I tried to make it match the existing code as much as possible to the point where if the gitstatus PR was shipped and the variables defined in theory the second chunk could be PRd directly against the repo Hi Im packaging p k for NixOS and we would much prefer packaging released tags than pinning a random version from master While one can easily monitor releases the same cannot be said for a whole upstream git history Also there is the point of compatibility between p k and gitstatus versions that might break once in a while Im pretty sure other package maintainers feel the same way Would you mind considering doing releases once in a while This affects p k and gitstatus your libgit fork PS What is the chance of your libgit changes going upstream I didnt find an answer to this question anywhere timewarrior is a cli time tracker see I created this simple userdefined segment It shows the current tracking status ie it shows the tags such as work gaming etc If theres interest to create a full segment Id be willing to help I think showing the active tags is useful and what most timewarrior users would need Possible extensions are options to display the current interval length for example Hey I found out about today and I wanted to check if powerlevel k could display my package versions the same way Turns out it can with support for pyenv nodeenv rbenv etc Now I replaced all of these package managers with asdf Would it be possible to add support for asdf Im no dev but happy to take a look if I can get some pointers See for macOS implementation