As a developer I want to have an extension to IServiceCollection ExtensionsDependencyInjectionAbstractions so that I can register all stripe services and inject them directly Expected Method csharp servicesAddStripeApiKey Notice that for HTTP client it is recommended to use servicesAddHttpClient With some of the more recent changes there have been a lot of string status fields and API methods which ask for a string value which must be one of a set of values Could these not be implemented as enums instead of strings Examples List Payment Methods method has a required type parameter but doesnt tell you what values this can be API error message helpfully provided card cardpresent Payment Intent Object has a status field API documentation describes the allowed values AddExpand method previously we would set ExpandPropertyName true which was typesafe Now we need to know the name of the object to expand and this doesnt match up with the type names in this SDK eg balancetransaction on charge I appreciate that you cant easily do multilevel expansion with enums so perhaps a static class of consts would be helpful in this scenario Using enums instead of strings would make development a lot easier and reduce the possibility of runtime bugs We just starting using stripe and noticed theres nearly no documentation just as a suggestion or enhancement it would be really helpful if you at least provided some code comments within the library more specifically the net lib even if only on top of methods etc The current implementation of payment instruments ie cards bank accounts sources has a lot of inconsistencies and is hard to maintain Current state Cards Entity StripeCard API methods Creation On a customer StripeCardServiceCreate with StripeCardCreateOptions On a recipient StripeCardServiceCreate with StripeCreditCardOptions On an account not possible but you can pass a card when creating an account via StripeAccountCardOptions Retrieval On a customer StripeCardServiceGet with isRecipientfalse On a recipient StripeCardServiceGet with isRecipienttrue On an account not possible but you can access the ExternalAccounts attribute which is a StripeListSource where Source is a wrapper over StripeCard StripeBankAccount StripeDeleted Update On a customer StripeCardServiceUpdate with StripeCardUpdateOptions and isRecipientfalse On a recipient StripeCardServiceUpdate with StripeCardUpdateOptions and isRecipienttrue On an account not possible Delete On a customer StripeCardServiceDelete with isRecipientfalse On a recipient StripeCardServiceDelete with isRecipienttrue On an account not possible List On a customer StripeCardServiceList with StripeListOptions and isRecipientfalse NB currently this will hit v customersCUSTOMERIDsources which will return all payment sources and noncards will be incorrectly deserialized Cf On a recipient StripeCardServiceList with StripeListOptions and isRecipienttrue On an account not possible but you can access the ExternalAccounts attribute cf Retrieval above Bank accounts Entities CustomerBankAccount when the bank account is a payment source on a customer StripeBankAccount when the bank account is an external account on a custom account API methods Creation On a customer BankAccountServiceCreate with BankAccountCreateOptions On an account not possible but you can pass a bank account when creating an account via StripeAccountBankAccountOptions Retrieval On a customer BankAccountServiceGet On an account not possible but you can access the ExternalAccounts attribute which is a StripeListSource where Source is a wrapper over StripeCard StripeBankAccount StripeDeleted Update On a customer BankAccountServiceUpdate with BankAccountUpdateOptions On an account not possible Delete On a customer BankAccountServiceDelete On an account not possible List On a customer BankAccountServiceList with StripeListOptions This will hit v customersCUSTOMERIDbankaccounts While this returns the correct results it is deprecated and hitting v customersCUSTOMERIDsourcesobjectbankaccount would be preferable Verify On a customer BankAccountServiceVerify with BankAccountVerifyOptions On an account NA external accounts dont need to be verified Sources Entity StripeSource API methods Creation StripeSourceServiceCreate with StripeSourceCreateOptions Retrieval StripeSourceServiceGet Update StripeSourceServiceUpdate with StripeSourceUpdateOptions Delete NA source objects are not deletable Attach to a customer StripeSourceServiceAttach with StripeSourceAttachOptions Detach from a customer StripeSourceServiceDetach Listing all sources on a customer StripeSourceServiceList with StripeSourceListOptions once is merged Verify not possible Other libraries support this so we should implement this but there are no source types that use this yet so this is very lopri TODO x Decide whether methods for nested resources should live on the service for the toplevel owning resource eg StripeCustomerService or the service for the owned resource eg StripeCardService Both sides have pros and cons In the current state most methods live on the service for the owned resource so thats probably what we should use in order to minimize breaking changes This is slightly problematic for source objects which are a toplevel API resource that can also be nested under customer objects so we might need some special cases there x Get rid of CustomerBankAccount and use StripeBankAccount for all bank accounts whether theyre a customers payment source or an accounts external account x Add support for managing external accounts cf If we do decide that methods should live on the service for the owned resource then we might want to get rid of the isRecipient flag and either use different method names CreateOnCustomer CreateOnRecipient and CreateOnAccount or an enum parameter to decide which URL to hit x Refactor the Source object and ideally rename it as it is used as a destination and not a source in many places external accounts payout destinations Get rid of StripeCreditCardOptions or at least give it a better name x Add Stripe prefix to BankAccount service option objects x Add StripeSourceServiceVerify method I probably forgot a lot of things feel free to commentedit as needed 