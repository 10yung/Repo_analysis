 examples dont compile with addresses the main part of but Id also like to have converters allowing us to go between the iteratee abstractions and fs s streams Im not sure exactly what this would look like and I dont want to block waiting for us to figure it out but it should happen before In for example the fact that were only testing FutureFileModule not filesfuture allowed an initialization order bug to slip through I think thats a somewhat exceptional case and the lack of coverage is caught by Scoverage but it would be better not to have to worry about our test code being so abstract that stuff like that can slip through Im working on a new iterateeparsing module with iterateepowered parser combinators and I really want to be able to parse strings as streams of characters without representing chunks as sequences of characters This PR is a first step in that direction Theres no measurable impact on performance at least in the benchmarks Ive looked at so far since the IsSeqLike instances get instantiated once for each type involved and in the case where the chunks are sequences the conversion is just identity This is a breaking change but only to fairly internal APIs johnynek has several questions about performance on that deserve a closer look probably after which includes a Cats reworking of gets merged It would be nice to have something like gatherMap that would allow us to run a transformation in parallel over batches of items I can imagine a method like this scala def gatherMap F Monad O I gather Vector F I F Vector I size Intf O F I Enumeratee F O I This would be a little nicer if we had a NonDeterminism type class and I guess we could introduce our own but passing in a gather function isnt too bad either Id imagine the implementation would be pretty simple with sequenceI but I havent written it out yet See johnyneks question here I wonder if combine is a better name here Algebird used plussum but non really does not like that except for explicitlyadditive in name monoid Like in scalazs Iteratee lib It would be nice to have a buffer Enumeratee in order to speed latency dependent iteratees up 