 libarmcomputeso grep armcomputeversion armcomputeversionv Build options embedkernels arch arm v a opencl neon asserts debug os linux Werror Git hash be ad d f fd ed ba Platform rockpro RK Arm Operating System Ubuntu uname a Linux rockpro rockchipayufangb c a SMP Sat Sep UTC aarch aarch aarch GNULinux Issue is While using export ACLNHWC in mobilenetSSDcaffe classes there is error terminate called after throwing an instance of clError what clEnqueueMapBuffer Aborted Problem description I am using Tengine with ACL in my rockpro I followed this link Tengine provides its classes mobilenetSSD caffemodel Without using export ACLNHWC GPU utilisation is FPS FPS With using export ACLNHWC GPU utilisation is FPS FPS While using another classes MobilenetSSD caffemodel Without using export ACLNHWC GPU utilisation is FPS FPS With using export ACLNHWC throws error terminate called after throwing an instance of clError what clEnqueueMapBuffer Aborted Not sure What is the exact issue here Any suggestion Can provide the caffemodel files if required Thanks in advance I have a task of performing regression learning on a target board ARM Cortex A processor I have completed the tasks of data and feature extraction Now i am analyzing the performances of different learning algorithms GRUs and LSTM in tensorflow However my concern is that not all models has the software supports to be deployed on the target board Out of the software libraries provided by ARM for ML models i found out that only ARM NN on top of ARM compute library is the way to go Although ACL has the function defnitions needed for the basic defnition of LSTM in the description of the compute library it specifies that it supports only SVM Binary Classification and CNN models Can anyone confirm if the LSTM models translated by ARM NN works with ACL Thanks in advance Can you add theh image segmentation example like Unet to examples for graph Hi I would like to do ImageNet evaluation using armcl with models such as alexnet googlenet etc There are example programs for single image predictions which uses common class from utils What I want to make is custom program which can be used for multiple image predictions loading weights just once There I want to dump all the predictions for an input image Any help will be greatly appreciated Thanks Best Deepak Well I just want to know more details about how to accelerate the inference of NN Can someone tell me where i can find it So far Im confused about something why use buffer instead of image d why not use getlocalidlocal mem Thanks in advanced Please fill the fields below in order to help us diagnose the issue If you have a general question or a problem with the scripts you can ignore these fields Please describe the issue error expected behaviour etc and steps to reproduce it If possible share the shortest code necessary that reproduces the issue Problem description Hello I want to implement part of my processing chain which deals with discrete fourier transform using ACL The result of applying DFT is mirrored at half the dimension and I dont need the other half My problem is how should I eliminate it My DFT is a real to complex application so the end result has channels What I tried was CLReshapeLayer which doesnt work on on channels tensors CLSlice which also doesnt work on channels Tensors The following snippet illustrates my need include paths need to be set void prototypefeatextractionint sizeFFt int timeBins const stdvectorfloat signalIn int overlapInSamples sizeFFt sizeFFt timeBins CLTensor inputAudio testcreatetensorCLTensorTensorShapesizeFFt timeBins DataTypeF inputAudioinfosetdatalayoutarmcomputeDataLayoutNHWC CLTensor inputHannWindow testcreatetensorCLTensorTensorShapesizeFFtsizeFFt DataTypeF inputHannWindowinfosetdatalayoutarmcomputeDataLayoutNHWC CLLocallyConnectedMatrixMultiplyKernel multiplyWithHannWindow CLFFT D doFFT CLSlice stripMirroredParts FFT DInfo defaultFFTSetting CLTensor outputAudioWindowed testcreatetensorCLTensorTensorShapesizeFFt timeBins DataTypeF inputHannWindowinfosetdatalayoutarmcomputeDataLayoutNHWC multiplyWithHannWindowconfigure inputAudio inputHannWindow outputAudioWindowed CLTensor outputFFT DComplex testcreatetensorCLTensorTensorShapesizeFFt timeBins DataTypeF outputFFT DComplexinfosetdatalayoutarmcomputeDataLayoutNHWC CLTensor outputFFT DComplexHalf testcreatetensorCLTensorTensorShapesizeFFt timeBins DataTypeF only need half the data the mirrored part needs to be discarded as it is redundant for my purposes outputFFT DComplexHalfinfosetdatalayoutarmcomputeDataLayoutNHWC doFFTconfigure outputAudioWindowed outputFFT DComplex defaultFFTSetting stripMirroredPartsconfigure outputFFT DComplex outputFFT DComplexHalf CoordinatessizeFFt U CoordinatessizeFFt timeBins allocation and filling has been skipped CLSchedulergetenqueuemultiplyWithHannWindow true doFFTrun stripMirroredPartsrun Can this stripping be done with ACL somehow Thankyou Platform Android Operating System Linux Problem description I want to use the binary release directly and execute my model on GPU I have already implemented things mentioned in issue but there it is mentioned to add some extra LOCs to enable CL I am getting an error clerror clgetplatformids acl error when I run my app via CL I have checked that all openCL libs are present on my device Any help will be appreciated Thanks Please fill the fields below in order to help us diagnose the issue If you have a general question or a problem with the scripts you can ignore these fields Output of strings libarmcomputeso grep armcomputeversion armcomputeversionv Build options cppthreads arch armv a opencl neon build crosscompile debug openmp os linux Werror Git hashunknown Platform Raspberry Pi ModelB quad core ARM Cortex GHz GB RAM Operating System Linux Problem description I have implemented LSTM layer using ACL NELSTMLayer API and OpenMP custom implementation I found that ACL performing times slower than OpenMP implementation FYI I have attached source code of both the implementations you can download these implementation from this link Please follow below steps to see the results Run toGithubACLlstmusingaclcpp to see performance results of the LSTM layer using ACL Run toGithubCcodelstmwithoutaclcpp to see the performance of the LSTM layer using OpenMp Let me know any help to reproduce this issue Thanks Hari Hello everyone Ive wrote an cblassgemm interface like openblas and I replace it in and I wonder if there have similar gemm api in ACL so that I can made some comparison Whats more is there have some tips that how can i use acl in mxnet or tensorflow with there new version Anyone can help So much thanks Output of strings libarmcomputeso grep armcomputeversion armcomputeversion Operating System Android Problem description Hello all Arm compute library introduced NEFFT d and NEFFT d I want to use NEFFT D to process a image But the dst result is all zero Can someone point out where the error is Very thankful Waiting online Code like this class NEONFFTTestExample public Example public bool dosetupint argc char argv override const int width const int height srcallocatorinitTensorInfowidth height FormatF dstallocatorinitTensorInfowidth height FormatF nefft dconfigure src dstconfig d srcallocatorallocate dstallocatorallocate for unsigned int y y height y for unsigned int x x width x srcbuffer srcinfooffsetelementinbytesCoordinates y x floatranddoubleRANDMAX Window window windowusetensordimensionssrcinfotensorshape Iterator it src window executewindowloopwindow const Coordinates stdcout reinterpretcastfloat itptr it return true void dorun override Execute the functions nefft drun void doteardown override const int width const int height Window window windowusetensordimensionsdstinfotensorshape Iterator it dst window executewindowloopwindow const Coordinates stdcout reinterpretcastfloat itptr it stdcout stdendl private Tensor src dst NEFFT D nefft d FFT DInfo config d 