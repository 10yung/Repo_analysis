This is the ticket to track the issue about CRD informer wont stop ref The CLI prints the following message when a resource exists in the spec directory which may confuse the user It should display duplicate resource exists in spec or cluster Use fission function options for a list of global commandline options applies to all commands Error error creating function spec same name resource h already exists in namespace default The executor wrongly removes rolebindings if environment package CRDs are not in the default namespace It would be great if we can support kubectl tree or directly integrate it into CLI For example list all resources related to a CRD Its unreasonable to set fetcher cpu limits to m by default We should change it to a more reasonable value Currently the Java version tested and officially supported in Fission is Java It might be good to test and publish images for the latest versions of Java etc Resolves Adding resource exists error on spec validate Reviewablestart This change is img src height alignabsmiddle altReviewable Reviewableend Resolves Adding dry option to view the generated spec It can be used with spec as well We can view and save the spec at same time if we will provide dry and spec in same command spec will work same as previously specs directory is required but you can view your generated specs Reviewablestart This change is img src height alignabsmiddle altReviewable Reviewableend We should have better namespace isolation to prevent any confusion For example now if a function CRD created under default namespace the function pod will be created in fissionfunction which brings confusion We should create related resources in the same namespace where the CRD located The requirement is to be able to check the logs of all the components at once we can achieve that using stern as of now but if we set a common label lets say applicationfission to all the fission core components we can easily check the log using kubectl logs n fission l applicationfission 