I have a structure set up rb class Organization ActiveRecordBase hasmany groups end class Group ActiveRecordBase hasmany conversations inverseof group belongsto organization end class Conversation ActiveRecordBase belongsto group inverseof conversations hasmany messages as subject end class Message ActiveRecordBase belongsto subject polymorphic true end When I run the following search there are no issues It works great rb Messagesearchsubjectconversationtypegroupideq Message Message But heres the problem If I add the next belongsto association it fails rb Messagesearchsubjectconversationtypegrouporganizationideq ActiveRecordConfigurationError Association named group was not found for Message perhaps you misspelled it Also when running the search from the level above the polymorphism it also works fine rb Conversationsearchgrouporganizationideq Conversation Running Rails and Ruby p When search for metasearch will match any text how can I match character For example if your model contains an attribute named phone then you may got an exception For example if a model has an attribute phone the preferredmethodname changes this to phodoesnotequal substitutes the ne in phone for doesnotequal since ne is an alias for doesnotequal Then in matchesattributemethod you will get undefined method captures for nilNilClass since methodname does not match anything as phodoes isnt the attribute Im using metasearch and discovered that it seems I cant trust presentpresence with a metasearch collection they always return true regardless of whether the result set has rows or not Userwhereid present false Usersearchideq present true I was a little surprised as this is counter to what I would expect if I assume it has the same behaviour as with ActiveRelation Is this by design expected behaviour or something that should be fixed Metasearch gets confused on fields like fooorbar Cant create fooorbarequals search method as it thinks there are columns in play I have a model document which users have different roles on This role is extracted and shown in the search results table like so userrole userrole Member if standarduseridsinclude currentuserid userrole Leader if standardlead currentuser userrole Is it possible to sort by the outcome of this logic instead of by something in the document model List of checkboxes for form helper generates array of params like this I dont select any checkbox and use idin predicate Validator pass them and gem generates wrong select like this sql select from smth where id in NULL So my changes fix this issue I have a User model ruby class User ActiveRecordBase hasone otherdetails end and then ruby class OtherDetails ActiveRecordBase belongsto user end In my otherdetails table i have a column named receiveemails that is a boolean when i try to search by this attribute using ruby fcheckbox otherdetailsreceiveemailsispresent I get ruby undefined method otherdetailsreceiveemailsispresent for MetaSearchSearchesUser x fbcd def After minutes of trying everything possible i discovered this error is due the underscored column name receiveemails If i try another attribute say state it works as expected Any workarounds to this particular issue Am i forced to change this column name remove the underscore Thanks 