I have an app that makes heavy use of pymongo However once in a while I get a InvalidBSON exception I havent been able to track the original exception because pymongo discards useful information when wrapping exceptions The current code that verifies pymongo query projections does not replicate MongoDB shells behavior when the projection is an empty dictionary dbtestfind id ObjectId cec eb f d fe value id ObjectId cec ec f d fe value id ObjectId cec ec f d fe value PyMongo verifies if the projection is not None but before converting it to a proper dictionary with helpersfieldslisttodict any projection whose boolean value is False gets replaced with id In the case of an empty dictionary this is annoying as it prevents creating a projection variable with an empty dictionary and optionally adding values to it python listcollfind id ObjectId cec eb f d fe id ObjectId cec ec f d fe id ObjectId cec ec f d fe Simple problematic use case python In the scope of a request projection if not args verbose projection out return listcollfind projection Not so elegant workaround to bypass this problem python collfind projection or None manjuggling snake This is a follow up to that was closed inadvertently It implements what was decided in this JIRA ticket add type annotations in stubs according to PEP I took the work of GrierPhillips and tried to answer some of the comments on the previous PR removed internals and private methods and functions added type annotations for the bson package as well as pymongo references it sometimes cleaned up the styling to follow typesheds standards I did not find a way to automatically test the stubs against real code as this is ongoing work by the mypy team However I copied the pyi files in typeshed and ran the tests there that helped me find and fix many issues Also I did not update pymongo with updates from version after Phillips work Reviewablestart This change is img src height alignabsmiddle altReviewable Reviewableend 