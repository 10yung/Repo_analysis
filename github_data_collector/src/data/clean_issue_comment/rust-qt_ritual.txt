Would it be possible to provide an example of deploying custom qt code via ritual EG say i want to implement a custom class inheriting from QSortFilterProxyModel on the c side and integrate it into a rustqt project What is involved Maybe just create a project illustrating what is involved I was wondering if there is anything complementary in this relatively new crate qmetaobjectrs Could the approach be combined with rustqt to add support for signalsslotsetc I have a QListWidget that I am looking to connect a signal from the signal appears in the docs as coming from QListView via Deref I implement a SlotOfQListOfQModelIndex and attempt to connect them like so withpackageptr indexesmoved connect formwithpackagemoved This compiles fine but when launching the application I get this error QObjectconnect No such signal QListWidgetindexesMovedconst QList QModelIndex QObjectconnect sender name WithsListWidget That definitely looks like the right C signature to me Update I tried implementing this using the qlistview and the QStandardItemModel I ran into the same issue My slot is defined like so SlotOfQListOfQModelIndexnew move indexlist RefQListOfQModelIndex printlnohboy is it an issue with my slot I suspect there is a signature mismatch between the signal which is a const pointer and the slot which is a const reference NB I also tried this with a RawSlotOfQListOFQModelIndex Or The signal is not defined correctly in the library in QT the signature of the method is void QListViewindexesMovedconst QModelIndexList indexes but in rustqt it is pub fn indexesmoved self Signalconst QListOfQModelIndex shouldnt that be pub fn indexesmoved self Signalconst QListOfQModelIndex This would be great to get support for as I dont think there is a way without custom signals to do meaningful work outside the main thread and update the gui when done Will vulkan api be supported in the future Hi Id like to use Rust QT bindings for an embedded target The build host is an x the target is an aarch architecture However I cant figure out how to cross compile the qt bindings crate I suppose it has something to with the clib part which is part of each crate generated by ritual From my build logs I see that the host compiler instead of the target is used for clib I think this is because cmake does not get setup for crosscompiling during this build step Further it might be necessecary to regenerate my own crates to match the qtversion used on the cross target and not the host What is the preferred way to select the sysrootcross toolchain in ritual By the way I am using buildroot The missing include file see log below is present int the sysroot of the target but not on the host Thanks for your help PATHpathtodevdirdevelbuildbr hostbinpathtodevdirdevelbuildbr hostsbinpathtohomecargobinpathtohomecargobinusrlocalbinusrbinbinusrlocalgamesusrgames SYSROOTpathtodevdirdevelbuildbr hostaarch buildrootlinuxgnusysroot PKGCONFIGALLOWCROSS CARGOHOMEpathtodevdirdevelbuildbr hostsharecargo cargo build release targetaarch unknownlinuxgnu manifestpathpathtodevdirdevelbuildbr buildqtexamplescustomCargotoml verbose j error failed to run custom build command for qtgui v Caused by process didnt exit successfully pathtodevdirdevelbuildbr buildqtexamplescustomtargetreleasebuildqtgui c cc cc edbuildscriptbuild exit code stdout The C compiler identification is GNU The CXX compiler identification is GNU Check for working C compiler usrbincc Check for working C compiler usrbincc works Detecting C compiler ABI info Detecting C compiler ABI info done Detecting C compile features Detecting C compile features done Check for working CXX compiler usrbinc Check for working CXX compiler usrbinc works Detecting CXX compiler ABI info Detecting CXX compiler ABI info done Detecting CXX compile features Detecting CXX compile features done RITUAL INCLUDEPATHpathtodevdirdevelbuildbr hostaarch buildrootlinuxgnusysrootusrincludeqt pathtodevdirdevelbuildbr hostaarch buildrootlinux gnusysrootusrincludeqt QtGuipathtodevdirdevelbuildbr hostaarch buildrootlinuxgnusysrootusrincludeqt QtCore RITUALLIBRARYPATHpathtodevdirdevelbuildbr hostaarch buildrootlinuxgnusysrootusrlib RITUALLIBRARYTYPESTATIC RITUALLINKEDLIBSQt GuiQt Core RITUALCPPLIBVERSION RITUALCOMPILERFLAGSstdgnu fPIC Configuring done Generating done Build files have been written to pathtodevdirdevelbuildbr buildqtexamplescustomtargetaarch unknownlinuxgnureleasebuildqtgui ef cd cd outclibbuild usrbinmake f CMakeFilesMakefile clean usrbinc DQTGUICLIBRARY DQTNOVERSIONTAGGING DRITUALCPPLIBVERSION Ipathtodevdirdevelbuildbr buildqtexamplescustomtargetaarch unknownlinuxgnureleas ebuildqtgui ef cd cd outclibbuildsizedtypesautogeninclude Ipathtodevdirdevelbuildbr hostsharecargoregistrysrcgithubcom ecc db ec qtgui clib Ipathtodevdirdevelbuildbr buildqtexamplescustomtargetaarch unknownlinuxgnureleasebuildqtgui ef cd cd outclibbuild Ipathtodevdirdevelbu ildbr hostaarch buildrootlinuxgnusysrootusrincludeqt Ipathtodevdirdevelbuildbr hostaarch buildrootlinuxgnusysrootusrincludeqt QtGui Ipathtohomecherry cobradevelbuildbr hostaarch buildrootlinuxgnusysrootusrincludeqt QtCore Wall Wextra Wnodeprecateddeclarations Werrorreturntype stdgnu fPIC O DNDEBUG o CMakeFiles sizedtypesdirsizedtypescxxo c pathtodevdirdevelbuildbr hostsharecargoregistrysrcgithubcom ecc db ec qtgui clibsizedtypescxx make Leaving directory pathtodevdirdevelbuildbr buildqtexamplescustomtargetaarch unknownlinuxgnureleasebuildqtgui ef cd cd outclibbuild make Leaving directory pathtodevdirdevelbuildbr buildqtexamplescustomtargetaarch unknownlinuxgnureleasebuildqtgui ef cd cd outclibbuild stderr In file included from pathtodevdirdevelbuildbr hostaarch buildrootlinuxgnusysrootusrincludeqt QtGuiQtGui from pathtodevdirdevelbuildbr hostsharecargoregistrysrcgithubcom ecc db ec qtgui clibsizedtypescxx pathtodevdirdevelbuildbr hostaarch buildrootlinuxgnusysrootusrincludeqt QtGuiqopenglh fatal error GLES gl h No such file or directory include GLES gl h compilation terminated make CMakeFilessizedtypesdirbuildmake CMakeFilessizedtypesdirsizedtypescxxo Error make CMakeFilesMakefile CMakeFilessizedtypesdirall Error make Makefile all Error Error command failed with exit code cmake build j install Would be nice to get this at some point Hello guys Im trying to use rustqt on Windows Im using only qtwidgets dependency and cargo build for the build Qt is installed I have an error when cmake is called for qtcore qtgui and qtwidgets DC RINCLUDEPATHS variable seems to be bad DC RINCLUDEPATHS CdevQtQt msvc include CdevQtQt msvc include QtWidgets CdevQtQt msvc include CdevQtQt msvc include QtCore CdevQtQt msvc include CdevQtQt msvc include QtGui Is it the problem Here the error message error failed to run custom build command for qtcore v process didnt exit successfully d DEV RustProjects qttest target release build qtcore efd dc f c f buildscriptbuild exit code stderr Executing command qmake query QTVERSION QTVERSION Detecting Qt directories Executing command qmake query QTINSTALLHEADERS QTINSTALLHEADERS CdevQtQt msvc include Executing command qmake query QTINSTALLLIBS QTINSTALLLIBS CdevQtQt msvc lib Executing command qmake query QTINSTALLDOCS QTINSTALLDOCS CdevQtQt DocsQt Building C wrapper library Executing command cmake C Users QuanticBoss cargo registry src githubcom ecc db ec qtcore clib G NMake Makefiles DC RLIBRARYTYPESHARED DC RINCLUDEPATHSCdevQtQt msvc includeCdevQtQt msvc include QtCore DC RLIBPATHSCdevQtQt msvc lib DC RFRAMEWORKPATHS DC RLINKEDLIBSQt Core DC RLINKEDFRAMEWORKS DC RCOMPILERFLAGS DCMAKEBUILDTYPERelease DCMAKEINSTALLPREFIXd DEV RustProjects qttest target release build qtcorebc f e f out clibinstall Error Le fichier sp cifi est introuvable os error failed to run command cmake C Users QuanticBoss cargo registry src githubcom ecc db ec qtcore clib G NMake Makefiles DC RLIBRARYTYPESHARED DC RINCLUDEPATHSCdevQtQt msvc includeCdevQtQt msvc include QtCore DC RLIBPATHSCdevQtQt msvc lib DC RFRAMEWORKPATHS DC RLINKEDLIBSQt Core DC RLINKEDFRAMEWORKS DC RCOMPILERFLAGS DCMAKEBUILDTYPERelease DCMAKEINSTALLPREFIXd DEV RustProjects qttest target release build qtcorebc f e f out clibinstall thread main panicked at called Resultunwrap on an Err value ErrorMsgfailed to run command cmake C Users QuanticBoss cargo registry src githubcom ecc db ec qtcore clib G NMake Makefiles DC RLIBRARYTYPESHARED DC RINCLUDEPATHSCdevQtQt msvc includeCdevQtQt msvc include QtCore DC RLIBPATHSCdevQtQt msvc lib DC RFRAMEWORKPATHS DC RLINKEDLIBSQt Core DC RLINKEDFRAMEWORKS DC RCOMPILERFLAGS DCMAKEBUILDTYPERelease DCMAKEINSTALLPREFIXd DEV RustProjects qttest target release build qtcorebc f e f out clibinstall SomeOs code kind NotFound message Le fichier sp cifi est introuvable None src libcore resultrs note Run with RUSTBACKTRACE environment variable to display a backtrace Thanks Could generated qt crates depends locally only on generated crates There is a option nolocalpaths but it make all qt crates depends on version from cratesio With nolocalpaths qttest v filemntanothersrcsmyPijulqttest qtcore v filemntanothersrcsmyPijulqttest qtcore cpputils v libc v qtgui v filemntanothersrcsmyPijulqttest qtgui cpputils v libc v qtcore v cpputils v libc v qtuitools v filemntanothersrcsmyPijulqttest qtuitools cpputils v libc v qtcore v qtgui v cpputils v libc v qtcore v qtwidgets v cpputils v libc v qtcore v qtgui v qtwidgets v filemntanothersrcsmyPijulqttest qtwidgets cpputils v libc v qtcore v qtgui v Without qttest v filemntanothersrcsmyPijulqttest qtcore v filemntanothersrcsmyPijulqttest qtcore cpputils v filetmpcpptorustcpptorustcpputils libc v qtgui v filemntanothersrcsmyPijulqttest qtgui cpputils v filetmpcpptorustcpptorustcpputils libc v qtcore v filemntanothersrcsmyPijulqttest qtcore qtuitools v filemntanothersrcsmyPijulqttest qtuitools cpputils v filetmpcpptorustcpptorustcpputils libc v qtcore v filemntanothersrcsmyPijulqttest qtcore qtgui v filemntanothersrcsmyPijulqttest qtgui qtwidgets v filemntanothersrcsmyPijulqttest qtwidgets cpputils v filetmpcpptorustcpptorustcpputils libc v qtcore v filemntanothersrcsmyPijulqttest qtcore qtgui v filemntanothersrcsmyPijulqttest qtgui qtwidgets v filemntanothersrcsmyPijulqttest qtwidgets Is it possible to use cpputils from cratesio while qt crates be generated Can you provide an example or docs for extending a Qt class Eg A simple example that extends qtwidgetsmainwindowMainWindow and overrides closeEvent This is commonly needed to intercept closing of a window I assume this is not implemented per Ill just leave this open because a simple example showing this once done has a lot of value and it can make it clear to other users that this is not implemented yet