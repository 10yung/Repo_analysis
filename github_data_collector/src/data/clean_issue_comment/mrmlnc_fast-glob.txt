 Environment OS Version VM Win Nodejs Version v Actual behavior globsyncpathwitha parethesis doesnt work globsyncglobescapePathpathwitha parethesis doesnt work globsyncpathwitha parethesis doesnt works globsyncpathwitha parethesis doesnt works globsyncpathwitha parethesis works globsyncpathwitha parethesis works globsyncpathwitha parethesis doesnt works Expected behavior globsyncglobescapePathpathwitha parethesis should works Steps to reproduce do a simple globsync with some parenthesis in the name folder Code sample js options cwd VBOXSVRDocuments caseSensitiveMatch false onlyDirectories false onlyFiles false globsyncglobescapePathARQUIVOS EMPRESASINNOVAFATTO MATRIZ SPFISCAL iss options Environment OS Version macOS Nodejs Version Actual behavior glob throws a TypeError when called with an empty string but rejects with a TypeError when argument is undefined or null Expected behavior The behaviour should be consistent Either all the TypeErrors should be thrown or put in a rejection branch Steps to reproduce run fastglob with an empty string compare output to a run with undefined or null Code sample js import fg from fastglob consolelogfg TypeError Expected a nonempty string consolelogfgnull Promise rejected TypeError Patterns must be a string or an array of strings Source issues Code The change in that changed it to only allow forward slash paths turned out to be a pain Anywhere I use fastglob I now need to specially normalize paths on Windows Would be useful if fastglob had a convertToGlob kinda method with similar logic to Maybe there could even be some kind of option to loosen fastglob when you dont need glob escaping but do need to accept both file paths and globs which is actually the majority of cases at least for me Require Nodejs Currently it is not possible to stop a sync glob task Lets say I run a glob to see if any file exists similar to Arraysome then I currently have to do fgsyncpatternlength but it means that I still create the result Ideally I would be able to fgsyncpattern maxMatches length where sync would exit once it has found maxMatches matches What is the purpose of this pull request For objectMode the base path of entry should be return otherwise we cant get the base path through the results What changes did you make Give an overview add base property for Entry add basePath param for EntryTransformergetTransformerbasePath string Environment OS Version macOS Nodejs Version Actual behavior The output of fastglob contains duplicates when using nonnormalized paths in patterns like filetxt Expected behavior Duplicates should be avoided Steps to reproduce code sample Lets assume the working directory contains the following files file txt and file txt js fastGlobsync file txt returns file txt file txt file txt where Im expecting file txt file txt I just wanted to raise the issue though Im not sure if this is an actual bug or if its wanted Cheers Environment OS Version Manjaro Linux x Nodejs Version v Actual behavior shell node UnhandledPromiseRejectionWarning Error EACCES permission denied Steps to reproduce and Code sample shell dir one a js b js two error opening dir dir one a js b js fastglobjs packagejson packagelockjson js fastglobjs const fg requirefastglob fg dirdir one thenentries consolelogentries shell node fastglobjs node UnhandledPromiseRejectionWarning Error EACCES permission denied scandir homekeenwonTestfastglobtestdirtwo node UnhandledPromiseRejectionWarning Unhandled promise rejection This error originated either by throwing inside of an async function without a catch block or by rejecting a promise which was not handled with catch rejection id node DEP DeprecationWarning Unhandled promise rejections are deprecated In the future promise rejections that are not handled will terminate the Nodejs process with a nonzero exit code current user doesnt have permission to access dirtwo shell total K drwxrxrx keenwon keenwon K one drx root root K two Assume the future method is called isMatchfilePath patterns options then I want to achieve the follow fastGlobisMatchpackagejson srcjson return false Note A hidden requirement is I want to keep the ability to constraint the patterns under specify scope aka cwd Otherwise i could use micromatch directly guided from 