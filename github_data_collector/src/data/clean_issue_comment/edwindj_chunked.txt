Could you please add functions to reshape the data from wide to long format and vice versa please Its called reshape gather melt spread dcast If done with dplyr or datatable it crashes with large datasets Im trying to save a DataFrame to CSV The generated file has only the header and presented the error described in the title of this issue Steps installpackagessparklyr installpackagesdplyr installpackageschunked reposc librarysparklyr librarydplyr libraryconfig libraryDBI librarychunked librarycrassy conf sparkconfig confsparkexecutormemoryOverhead g confsparkexecutormemory g confsparkexecutorcores confsparkexecutorinstances confsparkshuffleserviceenabled TRUE confsparkdynamicAllocationenabled TRUE confsparkdynamicAllocationenabled FALSE confsparklyrdefaultPackages ccomdatastaxsparksparkcassandraconnector orgmongodbsparkmongosparkconnector comdatabrickssparkcsv confsparkserializer orgapachesparkserializerKryoSerializer Connect to spark sc sparkconnectmaster sparkmyspark sparkhome sparkhome version config conf csvfilepath homedataeventscsv mongodbname mydb mongocollection events sqltxt SELECT idapi castgeometrycoordinates as string as geo isoDateTime FROM mongowazetbl mongouri pastemongodbfoobar mongodbnamemongocollection readPreferenceprimaryPreferredsep load invokesparkgetsessionsc read invokeformat commongodbsparksqlDefaultSource invokeoption sparkmongodbinputuri mongouri invokeoption keyspace mongodbname invokeoption table mongocollection invokeoption header TRUE invokeload mongodf sparklyrsparkpartitionregisterdfsc load mongowazetbl FALSE mongoflatdf tblsc sqlsqltxt mongoflatchunkeddf readchunkwisemongoflatdf chunksize writechunkwisemongoflatchunkeddfcsvfilepath Output Warning messages In FUNX i Unsupported type logical using default type string In FUNX i Unsupported type logical using default type string In FUNX i Unsupported type logical using default type string In FUNX i Unsupported type logical using default type string In FUNX i Unsupported type logical using default type string In FUNX i Unsupported type logical using default type string In FUNX i Unsupported type logical using default type string The readrreadfwf is a nice implementation of fwf input and might be a model for work on something comparable for this package I am quoting from Great package As a potential enhancement it would be useful if one could process compressed files eg gzipped txt files using chunked I have an R workflow that now needs to merge some large csv files into a single file I find I am running out of memory so the merge has started crashing these files are getting larger each month so it needs a fix I could write some other script like Perl or whatever but I would prefer to keep the whole workflow in R Its on windows so some of the cmd script solutions would be horrible and hard to check the formats as I go Ive been looking around to see how to read files in chunks using R and your library seems perfect So I have a question more than an issue Do you think it would be possible to use it to merge files in this case it is a known set of file names each time I cant yet see a way to do it thanks very much for a useful library we are now using it to filter extracts out of some very large source files and its simplified quite a bit of our data cleaningprocessing already When using readcsvchunkwise if there is data missing in the first line of file or second line as the case may be header TRUE there is no option to use fillTRUE and the following error is shown Error in scanfile file what what sep sep quote quote dec dec line did not have elements can this be solved somehow We could implement a chunk wise samplen samplefrac with r librarytidyverse big rerun iris bindrows path tempfile writecsvbig path librarychunked samplenchunkwise functiondata size cmd lazyevallazysamplendata size chunkedrecorddata cmd readcsvchunkwisepath samplen collect The sample would be done in each chunk that way What do you think about that If it sounds like a good idea let me know and Ill send you a PR Hello I was wondering if you might be able to support reading in txt files with your package as I have data which is delimited in chunks and would be a good test case for your package Data format beername Sausa Weizen beerbeerId beerbrewerId beerABV beerstyle Hefeweizen reviewappearance reviewaroma reviewpalate reviewtaste reviewoverall reviewtime reviewprofileName stcules reviewtext A lot of foam But a lot In the smell some banana and then lactic and tart Not a good start Quite dark orange in color with a lively carbonation now visible under the foam Again tending to lactic sourness Same for the taste With some yeast and banana beername Red Moon beerbeerId beerbrewerId beerABV beerstyle English Strong Ale reviewappearance reviewaroma reviewpalate reviewtaste reviewoverall reviewtime reviewprofileName stcules reviewtext Dark red color light beige foam average In the smell malt and caramel not really light Again malt and caramel in the taste not bad in the end Maybe a note of honey in teh back and a light fruitiness Average body In the aftertaste a light bitterness with the malt and red fruit Nothing exceptional but not bad drinkable beer Is this what chunked was designed for or is this a bad use case Thanks 