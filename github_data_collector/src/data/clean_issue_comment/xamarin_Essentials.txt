Hi It will be great if you allow all objects in SecureStorage and not just string so the syntax will be like this SecureStorageSetAsyncstring key object value Thanks Jassim Hi I suggest you add an extension to the CheckStatusAsync which will force to RequestAsync when permission is not Granted without having to write it in a separate line CheckStatusAsync and later RequestAsync so it will be like this PermissionStatus status await PermissionsCheckStatusAsyncPermissionsLocationWhenInUseRequestAsync Thanks Jassim Bug report best practices Description When the following line is executed before Requesting Permission it seems to return PermissionStatusDenied for Android and PermissionStatusUnknown for iOS await PermissionsCheckStatusAsyncPermissionsLocationWhenInUse I was wondering if this is expected or can be improved please Steps to Reproduce Create a new Application Run the code described in description You should get inconsistent results between iOS and Android Expected Behavior In my opinion PermissionStatusUnknown should be returned if permission is checked before requesting it and if the user denies it on request then PermissionStatusDenied should be returned I am not sure if thats possible Basic Information Version with issue pre Last known good version IDE Platform Target Frameworks All that apply iOS The version of the iOS SDK you are compiling against eg iOS Android The version of the Android SDK you are compiling against eg Android Description of Change The idea is that we have an API which takes a URL to navigate to and an expected callback URI which defines a scheme the app should listen for a callback on This is useful particularly for web authentication scenarios where you launch a url to start the authentication flow and await the callback to the app usually with a token in the callback url Apple has this concept with their ASWebAuthenticationSession and UWP has the concept with the WebAuthenticationBroker API Changes List all API changes here or just put None example Added TaskAuthResult WebAuthenticatorAuthenticateAsyncUri url Uri callbackUrl PR Checklist x Has tests if omitted state reason in description x Has samples if omitted state reason in description x Rebased on top of master at time of PR x Changes adhere to coding standard x Updated documentation see walkthrough Description of Change Prior to saving a value first try to remove it on tizen so that overwriting an existing value works Also fix GetAsync to return null if the key does not exist Bugs Fixed API Changes None Behavioral Changes None PR Checklist X Has tests if omitted state reason in description X Has samples if omitted state reason in description No API surface change X Rebased on top of master at time of PR X Changes adhere to coding standard X Updated documentation see walkthrough No API surface change Because of I had made a ton of changes to that repo and it was suggested I bring this over here So the plan Merge Launcher FileSystem FilePicker into a single class called FileManager What I am planning to add Folder picker already have a monoiosuwpnet version working FileBase Make OpenStreamForRead a part of FileBase Or the original GetStream but I found it confusing to work with Add string FolderPath to FileBase Add bool IsRemoteFile to FileBase This would combine a few complaints and PRs into a single one the one for the devfilepicker branch What I am planning to change The insanity caused from manually mapping file types to respective platforms is quite the feat I plan on making everything work of file extentions UWP already does this and IOS and android have ways to work with this On ios for example is actually pretty easy after some testing I found that this works just fine default if null var allowedUtis new string UTTypeContent UTTypeItem publicdata example jpg jpeg png tiff if allowedTypes null Liststring typeslist new Liststring foreach var extension in allowedTypes if stringIsNullOrEmptyextension var fixedExtension extensionTrimStart var UTid UTTypeCreatePreferredIdentifierUTTypeTagClassFilenameExtension fixedExtension null typeslistAddUTid allowedUtis typeslistToArray On android you can get the mimetype from extension like var type MimeTypeMapSingletonGetMimeTypeFromExtensionfileType Platform Compatibility The plan is to have this working on everything supported by essentials Backward Compatibility None as classes will be merged Difficulty lowmediumhigh low as most of this is already done just needs to be consolidated Summary I was trying out new Permissions API introduced in version I was wondering if it is possible to add a feature in there that could ask permissions from user to turn on location services programmatically on users phone API Changes It could look something like this Request Permissions PermissionsRequestAsyncPermissionsLocationServicesEnable Check Status PermissionsCheckStatusAsyncPermissionsLocationServicesEnabled Intended Use Case This addition can be used for requesting permissions from user to turn the location services on It would be ideal in my opinion to use with newly introduced API changes for requesting and checking status of location permissions for application PR Checklist Has tests if omitted state reason in description Has samples if omitted state reason in description Rebased on top of master at time of PR x Changes adhere to coding standard Updated documentation see walkthrough Bug report best practices Description Calling SecureStorageSetAsync with a key that already exists fails on Tizen TizenSecuritySecureRepository Failed to save data aliastest errorProvided alias already exists in the database Steps to Reproduce Create a simple Xamarin app that calls c await XamarinEssentialsSecureStorageSetAsynctest one await XamarinEssentialsSecureStorageSetAsynctest two Expected Behavior Calling SetAsync twice with the same key should overwrite the existing entry Actual Behavior On Tizen you get an exception Dkanbann at InteropCheckNThrowExceptionInt err String msg Dkanbann at TizenSecuritySecureRepositoryDataManagerSaveString alias Byte data Policy policy Dkanbann at XamarinEssentialsSecureStoragePlatformSetAsyncString key String data Dkanbann at XamarinEssentialsSecureStorageSetAsyncString key String value Dk Basic Information TizenNET Xamarin Essentials Summary Some apps simply dont work when sharing items such as Reminders and Facebook Having the ability to filter out would be ideal on iOS and it is an API that exists API Changes Up for discussion Intended Use Case Would fix issues such as 