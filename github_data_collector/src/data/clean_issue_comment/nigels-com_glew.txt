I cant build with cmake fresh git repo A I cant find this files in this folders So i cant make glew as subrepo of my project CMake Error at CMakeListstxt addexecutable Cannot find source file Usersmeprojectsglewsrcglewinfoc Tried extensions c C c cc cpp cxx cu m M mm h hh h hm hpp hxx in txx CMake Error at CMakeListstxt addlibrary Cannot find source file UsersmeprojectsglewincludeGLwglewh Tried extensions c C c cc cpp cxx cu m M mm h hh h hm hpp hxx in txx I think that on WIN mingwmsys these should be used in glewh define GLEWAPIENTRYDEFINED if definedMINGW definedCYGWIN MSCVER definedSTDCALLSUPPORTED definedBORLANDC define APIENTRY stdcall ifndef GLAPIENTRY define GLAPIENTRY stdcall endif ifndef GLEWAPIENTRY define GLEWAPIENTRY endif else define APIENTRY endif ifdef GLEWSTATIC define GLEWAPI extern else ifdef GLEWBUILD define GLEWAPI declspecdllexport else define GLEWAPI declspecdllimport endif endif My language of choice Rebol loads shared libraries dynamically and this prevents the use of glewExperimental Id like it to be settable with a function like glewSetExperimental or similar Ive tried to build glew with VS but Im getting all kinds of errors Im using cmake When I press configure cmakes tells me it is done but when I tell it to generate the cmake project it errors out The Errors Im getting are Configuring done CMake Error at CMakeListstxt addexecutable Cannot find source file DDevelopmentExtDevBuildglew srcglewinfoc Tried extensions c C c cc cpp cxx cu m M mm h hh h hm hpp hxx in txx CMake Error at CMakeListstxt addlibrary Cannot find source file DDevelopmentExtDevBuildglew includeGLwglewh Tried extensions c C c cc cpp cxx cu m M mm h hh h hm hpp hxx in txx CMake Error at CMakeListstxt addexecutable Cannot find source file DDevelopmentExtDevBuildglew buildvisualinforc Tried extensions c C c cc cpp cxx cu m M mm h hh h hm hpp hxx in txx CMake Error at CMakeListstxt addexecutable No SOURCES given to target glewinfo CMake Error at CMakeListstxt addlibrary No SOURCES given to target glew CMake Error at CMakeListstxt addlibrary No SOURCES given to target glews CMake Error at CMakeListstxt addexecutable No SOURCES given to target visualinfo Shading was working with OpenGL and freeGLUT except the whole program closed when I closed the OpenGL window I found several articles about how to fix this problem but none of them worked I switched from freeGLUT to GLEW and that solved my window problem But something got lost in the translation and now my D objects are drawn in a single flat color I can control the color but all the faces are the same color no shading flat torus I link glewlinuxegl and vulkan sdk both to an exe as I need render images and save them using gl or vulkan determined by input param When the exe quit It got a double free error It seems that glewlinuxegl and vulkan sdk both release some same egl objects When I link glew alone the exe quit fine When I link vulkan sdk alone the exe also quit fine When I link both I got the exception below Any suggesitions Stack Error in XXXXX double free or corruption prev x b c lib libcso x d x f d b lib libEGLso eglReleaseThread xca x f ce c a Memory map rp fd XXXXX b rxp fd XXXXX b c rp b fd XXXXX d e rp c fd XXXXX e f rwp d fd XXXXX f rwp b rwp heap f f rwp f f p f f rwp f f c p f c f c rwp f c f p f f rwp f f p f c f c p f c f ac rwp f ac f ac p f ac f c rwp f c f c p f c f ac rwp f ac f aca p f aca f ca rwp f ca f rxp fd usrlib libnvidiafatbinaryloaderso f f p fd usrlib libnvidiafatbinaryloaderso f f rwp fd usrlib libnvidiafatbinaryloaderso f f rwp f f rxp fd usrlib libnvidiacblso f f p fd usrlib libnvidiacblso f f rwp fd usrlib libnvidiacblso f f rwp f f a rxp fd usrlib libnvidiaglvkspirvso f a f a p e fd usrlib libnvidiaglvkspirvso f a f b rp e fd usrlib libnvidiaglvkspirvso f b f c rwp ba fd usrlib libnvidiaglvkspirvso f c f d rwp f f a rxp fd usrlib libgccs so f a f p fd usrlib libgccs so f f a rp fd usrlib libgccs so f a f b rwp fd usrlib libgccs so f b f a e rxp fd usrlib libnvidiaeglcoreso f a e f c e p a fd usrlib libnvidiaeglcoreso f c e f f rwp a fd usrlib libnvidiaeglcoreso f f f f rwp f f f fa rxp fd usrlib libnvidiaglsiso f fa f a p fd usrlib libnvidiaglsiso f a f bb rwp fd usrlib libnvidiaglsiso f bb f c rwp f c f ca rxp fd usrlib librt so f ca f c p fd usrlib librt so f c f ca rp fd usrlib librt so f ca f cb rwp fd usrlib librt so f cb f b rxp fd usrlib libEGLnvidiaso f b f b p ed fd usrlib libEGLnvidiaso f b f f rwp ed fd usrlib libEGLnvidiaso f f f f rwp f f f a f rxp fd usrlib libnvidiaglcoreso f a f f a rwxp fd usrlib libnvidiaglcoreso f a f ae rxp fd usrlib libnvidiaglcoreso f ae f b p d fd usrlib libnvidiaglcoreso f b f b c rwp d fd usrlib libnvidiaglcoreso f b c f b rwp f b f b rxp fd usrlib libnvidiatlsso f b f b p fd usrlib libnvidiatlsso f b f b rwp fd usrlib libnvidiatlsso f b f b rxp fd usrlib libGLXnvidiaso f b f b rwxp ca fd usrlib libGLXnvidiaso f b f b rxp ff fd usrlib libGLXnvidiaso f b f b p fd usrlib libGLXnvidiaso f b f b d rwp fd usrlib libGLXnvidiaso f b d f b a rwp f b a f b a rxp fd usrlib libXauso f b a f baa p fd usrlib libXauso f baa f baa rp fd usrlib libXauso f baa f baa rwp fd usrlib libXauso f baa f bad rxp fd usrlib libxcbso f bad f bccf p fd usrlib libxcbso f bccf f bcd rp fd usrlib libxcbso f bcd f bcd rwp fd usrlib libxcbso f bcd f bce rxp fd usrlib libXextso f bce f bee p fd usrlib libXextso f bee f bee rp fd usrlib libXextso f bee f bee rwp fd usrlib libXextso f bee f c b rxp fd usrlib libX so f c b f c b p fd usrlib libX so f c b f c c rp fd usrlib libX so f c c f c rwp fd usrlib libX so f c f c rxp fd usrlib libGLXso f c f c p fd usrlib libGLXso f c f c rwp f fd usrlib libGLXso f c f c rwp f c f c db rxp fd usrlib libGLdispatchso f c db f c db p a fd usrlib libGLdispatchso f c db f c rwp a fd usrlib libGLdispatchso f c f c rwp f c f c rxp fd usrlib libdl so f c f c p fd usrlib libdl so f c f c rp fd usrlib libdl so f c f c rwp fd usrlib libdl so f c f c b rxp fd usrlib libGLso f c b f cbb p e fd usrlib libGLso f cbb f cbd rwp d fd usrlib libGLso f cbd f cbd rwp f cbd f cc rxp fd usrlib libvulkanso f cc f ce p fd usrlib libvulkanso f ce f ce rp fd usrlib libvulkanso f ce f ce rwp fd usrlib libvulkanso f ce f ce rxp fd usrlib libEGLso f ce f d p fd usrlib libEGLso f d f d rwp fd usrlib libEGLso f d f d f rxp fd usrlib libc so f d f f d f p b fd usrlib libc so f d f f d f rp b fd usrlib libc so f d f f d f rwp bb fd usrlib libc so f d f f d fb rwp f d fb f d rxp fd usrlib libpthread so f d f d p fd usrlib libpthread so f d f d rp fd usrlib libpthread so f d f d rwp fd usrlib libpthread so f d f d rwp f d f d d rxp fd usrlib libgompso f d d f d c p fd usrlib libgompso f d c f d d rp fd usrlib libgompso f d d f d e rwp fd usrlib libgompso f d e f d f rxp fd usrlib libm so f d f f db e p fd usrlib libm so f db e f db f rp fd usrlib libm so f db f f db rwp fd usrlib libm so f db f db rxp fd usrlib libzso f db f dd p fd usrlib libzso f dd f dd rp fd usrlib libzso f dd f dd rwp fd usrlib libzso f dd f dfef rp fd XXXXX f dfef f e rxp a fd XXXXX f e f e b rp b fd XXXXX f e b f e c p c fd XXXXX f e c f e b rp c fd XXXXX f e b f e e rwp e fd XXXXX f e e f e a rwp f e a f e b rxp fd usrlib ld so f e c f e dc rwp f e dc f e rp fd usrlib libGLEWso f e f e f rxp fd usrlib libGLEWso f e f f e rp fd usrlib libGLEWso f e f e p aa fd usrlib libGLEWso f e f e rp aa fd usrlib libGLEWso f e f e rwp b fd usrlib libGLEWso f e f e b rwp f e b f e c rp fd usrlib ld so f e c f e d rwp fd usrlib ld so f e d f e e rwp fffa b fffa bc rwp stack fffa c fffa cb rxp vdso ffffffffff ffffffffff rxp vsyscall For Issue Documentation needs updating Hello everybody My english is poor it not my mother tongue and its a bit late so I am tired which does not improve that However I have access to the internet only during eveningnight so it is no use to delay the moment I post this Maybe its a well known issue maybe the problem is how I use glew The problem is as soon as I include the glewh file the binaries produced the o file is at least around kb This is weird because normally in C binaries sizes do not increase with defines typedefs etc They are used at compile time to produce binaries but not put in it It is normal that include glewh in a file increases compilation time it is not normal that it increases binary size To reproduce the bug create a c file put a small function in it compile not link Youll get a small o go back to the c file add include GLglewh at the top of it compile not link BIG Kb o Is that normal I have more than one unit which uses opengl functions And as opengl functions with glew are actually defines over glewContexttheFunctionName I cant use glew somewhere and other header containing only function headers somewhere else Is there a fix Right now I workaround this problem like this but its far from perfect actually REALLY annoying in a h file I define function with the same signature as gl function except I replace gl with something else glEnable yyEnable below I define glEnable as yyEnable in a separate file I have at the top of it include GLglewh and below functions like this void yyEnable glEnable this separate files does not see the defines glEnable yyEnable In this way I can have one single include of glew and use opengl functions in a lot of files but thats a lot of copypasteedit of functions headers and a lot of troubles And not a normal use of glew I think What can I do The cmake exported info does not include the software version This was a bit confusing since cmake itself ships with FindGLEWcmake which also doesnt identify the GLEW version What currently happens during a build is that this librarys export is consulted no version is found so the build fallsback to FindGLEW and ignores any version information specified in findpackage This makes the build look like it succeeded but you cant actually be certain of the GLEW version it will actually attach to your project I believe the update would need to go somewhere in this block The addition of CMakePackageConfigHelperscmake to the default cmake toolset should make this straightforward to update A relevant example can be found here vs cannot open vc glewsln