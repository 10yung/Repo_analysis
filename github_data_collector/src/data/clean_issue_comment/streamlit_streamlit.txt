I want to add modules according to a dynamic number and get error dynamicnumber for i in rangedynamicnumber uploadedfile stfileuploader type png jpg jpeg tif tiff The question is how to create a dynamic number of st modules Problem I would like to be able to display a holoviews plot in a streamlit app that was generated from hvplotpandas Solution Id like to propose the following toplevel API call python niceplot pdDataFramehvplotplotfunctioncall sthvplotchartniceplot To do this I would like to propose the following simple wrapper that would accomplish this python def hvplotchartplot return stbokehcharthvrenderplot backendbokeh Additional context This issue originated from this discussion form post Problem apppy python import datetime import streamlit as st def bar return datetimestrptime H stcache def foo return bar def main foo if name main main streamlit run apppy The error message in the browser Streamlit failed to hash an object of type class function TypeError object supporting the buffer API required Traceback File homeoleminiconda envsstreamlitpglibpython sitepackagesstreamlitScriptRunnerpy line in runscript execcode moduledict File homeolesrcstreamlittestapppy line in module main File homeolesrcstreamlittestapppy line in main foo File homeoleminiconda envsstreamlitpglibpython sitepackagesstreamlitcachingpy line in wrappedfunc return getorsetcache File homeoleminiconda envsstreamlitpglibpython sitepackagesstreamlitcachingpy line in getorsetcache codehasherupdatefunc File homeoleminiconda envsstreamlitpglibpython sitepackagesstreamlithashingpy line in update selfupdateselfhasher obj context File homeoleminiconda envsstreamlitpglibpython sitepackagesstreamlithashingpy line in update hasherupdateb To me its hard to guess from the reported error that the cause is a compile error inside bar Wrapping the content of codetobytes in hashingpy in a try catch reveals the real error in this case very helpful AttributeError module datetime has no attribute strptime Solution Somehow collect the rootcause exception and display that in the browser Bonus if more info is collect like the associated function name in case of function hashing Summary Type here a clear and concise description of the bug Aim for sentences Steps to reproduce What are the steps we should take to reproduce the bug Run streamlit hello after installing via pip Enter blank on the email step same behaviour if you enter one Expected behavior Streamlit hello world applications run on localhost Actual behavior Get this error when I try to run it Errno No such file or directory O streamlit credentialstoml Is this a regression Has worked for other team members on laptops Debug info Streamlit version latest and Python version Using Conda PipEnv PyEnv Pex Tried Conda and PyEnv OS version Windows Browser version Additional information I am using a VM if that matters This happens if I try to run a sample streamlit app also I do not have an O drive mounted so not sure why its looking for credentialstoml file there I used the following Dockerfile to build an image of my streamlit app FROM continuumiominiconda latest WORKDIR app COPY app RUN conda config add channels condaforge conda env create n myapp f environmentyml rm rf optcondapkgs ENV STREAMLITCONFIGSERVERPORT CMD conda run n myapp streamlit run apppy However if I try to use port forwarding to access the container then port does not work Conversely if I use serverport in the last line it does work Summary Migrated a deckgl chart to PyDeck API When page is run get a UserWarning that the Mapbox API key is not set Old deckglchart function does not display the warning Steps to reproduce Get a personal mapbox token Verify it is set using streamlit config show mapbox Configure Streamlit to use a custom Mapbox token for elements like stdeckglchart and stmap If you dont do this youll be using Streamlits own token which has limitations and is not guaranteed to always work To get a token for yourself create an account at Its free for moderate usage levels Default pkeyJ IjoidGhpYWdvdCIsImEiOiJjamh bm NnkwMng M dydnNveWwzeWNzIn vCBDzNsEF uFSFk AM WZQ The value below was set in C Users path streamlit configtoml token pkeyJ Ijoia Run a PyDeck chart any demo should do Inspect the output from streamlit run apppy in the shell Expected behavior map displays no message in shell Actual behavior Map displays shell displays a UserWarning You can now view your Streamlit app in your browser URL c apps anaconda envs ccadash lib sitepackages pydeck bindings deckpy UserWarning Mapbox API key is not set This may impact available features of pydeck UserWarning Is this a regression That is did this use to work the way you expected in the past yes Debug info Streamlit version Python version Using Conda PipEnv PyEnv Pex Conda OS version Windows Browser version Chrome Version Official Build bit Additional information If needed add any other context about the problem here For exmaple did this bug come from or another site Link the original source here Summary Plotly graphs fail to extend in width and fill the screen in wide mode in Works in Steps to reproduce Minimal streamlit app import streamlit as st import cufflinks fig cufflinksdatagenlinesiplotasFigureTrue stwritefig Check wide mode in settings Debug info Streamlit version Python version Plotly version Cufflinks version OS version Windows as well as Debianbased docker image Summary Im trying to let my user easily switch to another location with a stselectbox or change the zoom or pitch via sliders But it does not work pydeckinitialviewstatenotworking Steps to reproduce What are the steps we should take to reproduce the bug Run the code below Try changing the initialviewstate settings via the app Code python import pathlib import pandas as pd import pydeck as pdk import streamlit as st import numpy as np POWERPLANTURL galleryglobalpowerplantdatabaseglobalpowerplantdatabasecsv LOCATIONS Orsted Copenhagen HQ latitude longitude Orsted Boston latitude longitude ORSTEDCPHHQ LOCATIONS Orsted Copenhagen HQ class ViewStateComponent def initself selflatitude ORSTEDCPHHQ latitude selflongitude ORSTEDCPHHQ longitude selfzoom selfpitch def editviewself location stsidebarselectboxLocation optionslistLOCATIONSkeys index selflatitude LOCATIONS location latitude selflongitude LOCATIONS location longitude selfzoom stsidebarsliderZoom minvalue maxvalue valueselfzoom selfpitch stsidebarslider Pitch minvalue maxvalue valueselfpitch step property def viewstateself pdkViewState return pdkViewState longitudeselflongitude latitudeselflatitude zoomselfzoom minzoom maxzoom pitchselfpitch bearing class GlobalPowerPlantDatabaseApp def initself selfviewstatecomponent ViewStateComponent selfdata selfgetdata staticmethod stcache def getdata data pdreadcsvPOWERPLANTURL return data latitude longitude dropna def scatterplotterlayerself return pdkLayer ScatterplotLayer dataselfdata getposition longitude latitude extrudedTrue getradius pickableTrue opacity strokedFalse filledTrue wireframeTrue def viewself selfviewstatecomponenteditview Does not work stpydeckchart pdkDeck mapstylemapboxstylesmapboxlightv initialviewstateselfviewstatecomponentviewstate layers selfscatterplotterlayer app GlobalPowerPlantDatabaseApp appview Debug info Streamlit version Python version python m venv venv OS version Windows Browser version Chrome Summary Ive upgraded to Streamlit and want to test out the new stpydeckchart function At some stage in my work I want to add tooltips and I cannot make it work For example the example from the documentation at does not work In Streamlit the output of the code below does not show the data In HTML the output of the code below shows the data with tooltips Steps to reproduce Run the code below Inspect the browser output Code python Example from import streamlit as st import pydeck as pdk UKACCIDENTSDATA deckgldatamasterexamples dheatmapheatmapdatacsv layer pdkLayer HexagonLayer UKACCIDENTSDATA getposition lng lat autohighlightTrue elevationscale pickableTrue elevationrange extrudedTrue coverage Set the viewport location viewstate pdkViewState longitude latitude zoom minzoom maxzoom pitch bearing Combined all of it and render a viewport r pdkDeck mapstylemapboxstylesmapboxlightv layers layer initialviewstateviewstate tooltiphtml bElevation Valueb elevationValue style color white rtohtmltesthtml openbrowserTrue notebookdisplayFalse stpydeckchartr Streamlit version Python version Using python m venv venv OS version Windows Browser version Chrome I want to be able to show clickable content via sttable or stdataframe Here is the sample codes df pdDataFrame def makeclickableval return a hrefaformatvalval dfstyleformatmakeclickable refer to this Stack Overflow thread This works in Jupyper Notebook But it does not work in Streamlit 