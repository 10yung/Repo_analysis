I am currently using CVXR to develop Lasso results I am using the SCS solver and see that it goes through iterations Is it possible to see the results of each of these iterations I am hoping to develop a plot from the results Thanks Hi In Python I could have the constraint depend on a parameter that is supplied later on param cpParameternonnegTrue prob cpProblemcpMinimizey x param paramvalue probsolve How can I achieve this in R I tried using the Parameter class and then setting the param value by calling valueparam but solve didnt work When calling solve with ignoredcp TRUE the DCP check is still run I can spot where this is happening in near line ifisdcpobject ifignoredcp printProblem does not follow DCP rules Solving a convex relaxation else stopProblem does not follow DCP rules I would suggest replacing with if ignoredcp ifisdcpobject stopProblem does not follow DCP rules Hello I am working on an optimization problem with a complex formulation and although the problem is easy to solve sec once RglpkRglpksolveLP is called the DCP check CVXRisdcp within CVXRsolve is very very slow minutes Here is a small reproducible example Though unrelated to my optimization problem it shows the kind of slow DCP check I am experiencing libraryCVXR n L m L X Variablen m y runifn cumX cumsumaxisX axis diagm cumE sumentriescumX axis y posE sumentriesposcumE negE sumentriesnegcumE objective MinimizeposE negE problem Problemobjective systemtime result isdcpproblem user system elapsed If you then run the same code but uncomment the multiplication it runs in user system elapsed If you then run the same code but uncomment the diagm it runs in user system elapsed I hope you will be able to find the problem and speed up isdcp If not or if it looks like it will take some time to implement would you please consider making the ignoredcp option skip completely the DCP check Or provide a separate option Thank you Trying to add the conflicted package to my project getting this error when trying to load CVXR while conflicted is loaded Not really sure where its coming from but figured Id raise it libraryCVXR warnconflicts FALSE Registered S method overwritten by Roo method from throwdefault RmethodsS Error fn must be an R function not a primitive function Call rlanglasterror to see a backtrace rlanglasterror error message fn must be an R function not a primitive function class rlangerror backtrace conflictedlibraryCVXR warnconflicts FALSE conflictedconflictsregister conflictedconflictscoutpkgs conflictedmap namesconflicts conflicts supersetprinciple basemapplyf x y MoreArgs list SIMPLIFY FALSE conflictedissupersetfun nonbase base base rlangfnfmlsbaseobj rlangcheckclosurefn I tried Variable and was expecting an error but did not receive one Im using CVXR for the first time today to perform a minimization of a max of a set of variables So i set my objective function as Oj Variable objective MinimizemaxentriesOj So this should minimise the maximum of the Oj values as I understand it from the CVXR documentation Now in defining constraints I am having issues in defining sets of constraints Since I have variables and more sets of variables which are muj and sigmaj defining constraints line by line is obviously tedious and I am sure there is some way of aggregating this for constraints that work by the universal quantifierfor all for example one constraint is O j pnormC j mu j sigma j for all j C is a constant vector of length I can replace the generic pnorm in R with pnorm in CVXR But how will I aggregate all constraints in one line of code Im new to using this package so Im a bit confused Additionally can functions like sqrt be used in constraints the same way or is there an equivalent for CVXR I have a constraint which is sigma j sqrtsumP i P i X ij for all j Here P is a constant vector of length X is a variable defined as XijInt Now the sum here works like the excel function SUMPRODUCT that is P P X j P P X j P P X j I would normally do this using dplyr if I knew the values of X i j Will sumentries work here The code works fine if I define each constraint line by line but there must be a more efficient way to do this right I know these doubts are pretty basic but Im just starting to learn how to code with RCVXR and any help would be appreciated Thanks The docs page github stars link goes to Shouldnt it go to this repo Thanks for the really useful package Ive run across a couple of small small issues when trying to adjust the number of iterations The names of the arguments to control the number of iterations is different for SCS and ECOS and presumably the other solvers maxiters for SCS and MAXIT for ECOS Theres no warning if you set the wrong argument name it just silently uses the default Would it be possible to check that the provided arguments are control arguments the solver uses Reaching a userset maximum iteration count leads to a solver failure in ECOS but solvedinaccurate in SCS In contrast hitting the default ECOS iteration count gives solvedinaccurate I am solving the same problem in matlab and R but I get different results the solutions are completely different for some variables not just a little here and there although all the inputs are the same for completeness here is the matlab code p cvxbegin variables bp minimizenormweightb subject to matrixb b cvxend and the R code p bVariablepnameb objective norm tweight b constrnt list matrix b b prob ProblemMinimizeobjective constrnt results solveprob lbsolutionresultsgetValueb Any insights on why this might happen