In a symfony project i use oneup flystem with a custom stream wrapper name pj configure like this configpackagesoneupflysystemyaml Read the documentation oneupflysystem adapters myadapter local directory kernelprojectdirvaruploads permissions file Fix for windows otherwise streamwrapper fail to recognize the file as public public filesystems myfilesystem adapter myadapter alias League Flysystem Filesystem Allows to read files with any stream function using pjpathoffileinflysystem streamwrapper pj For example in a symfony controller i use this stream wrapper without problem like this php Routeattachmentfilesdownloadid namedownloadattachmentfile methodsGET public function downloadAttachmentFileAttachmentFile attachmentFile Response return thisfile sprintfpjs attachmentFilegetPathFileName attachmentFilegetFileName ResponseHeaderBagDISPOSITIONATTACHMENT I would like use spout to parse and get data in Excel file I use it like this public function extractExcelSheetIndicatorsFlysystemFile file array if filegetExtension xlsx filePathname pj filegetPathname reader ReaderEntityFactorycreateReaderFromFilefilePathname readeropenfilePathname var Sheet sheet datas foreach readergetSheetIterator as sheet if INDICATEURS sheetgetName foreach sheetgetRowIterator as row datas rowgetCells break readerclose return datas else return null But an exception occurs on readeropen type title An error occurred status detail Could not open pjfoobarmyFilexlsx for reading Stream wrapper used is not supported for this type of file class Box Spout Common Exception IOException The exception thrown is defined as row in srcSpoutReaderXLSXReaderphp I dont know why If u have an idea to help me or fix it i thank you in advance o oo Protected function allow overwrite without full copy paste Even if you have to rewrite the factory method anyway first filename will be a fallback in ASCII for browser not supporting second filename with asterisk Adds support for setting default row height default column width and custom column widths configuration Fixes among others I checked what other PRs had been created to fix this and the objections in the conversations there Hopefully this fits your standards Things to note Supports xlsx and ods Has tests PSR Default row height and column widths can be set on the writer or using the options manager To be more flexible on when the column widths are set sheet initialisation was moved to when the first row is written Known issues Widthsheights not configurable per worksheet only for the whole workbook ODS default column width only applies to the columns after the rightmost custom column width No dynamic option should be a separate PR imho No docs yet lets see if you like the approach first The writer is missing support for rtl cell styling and rtl direction for spreadsheets This is a follow up of issue Cell formats have been implemented for XLSX we need to propose the same implementation for ODS files We also need to update the documentation The XLSX writer and maybe also ODS I havent check is missing support for date cells When I do some quick manual test the v branch seems a lot slower Or am I missing something obvious In a quick test rows with columns with char strings v is about secs while v is seconds That is a increase v php writer WriterFactorycreateTypeXLSX writeropenToFileoutputspout xlsx writeraddRowsdata writerclose v php writer WriterEntityFactorycreateWriterTypeXLSX writeropenToFileoutputspout xlsx foreach data as row writeraddRowWriterEntityFactorycreateRowFromArrayrow writerclose Probably because you have to create Row objects for each row which create Cell objects for each key So in this testcase arraymaps creating million objects Edit Full files here I have large XLSX file about million rows and columns First col with unique values and last with the same values When I try to read this file I saw that performance is not so good After investigation I found that in FileBasedStrategygetStringAtIndex method file with cache is rereading for each row because string index is differ greatly between first and last column of xlsx document I have optimized cache by adding additional index file with offset and length for each data and increase reading speed about times depends on column count PS Cant attach whole XLSX file because it is too big So attached only K rows testxlsx php php use Box Spout Reader Common Creator ReaderFactory use Box Spout Common Type requireonce DIR vendorautoloadphp reader ReaderFactorycreateTypeXLSX readeropenDIR testxlsx time mktime foreach readergetSheetIterator as sheet foreach sheetgetRowIterator as n row if n echo Read n in mktime time seconds n break no need to read more sheets echo Read n in mktime time seconds n readerclose Current realization php testphp Read in seconds Read in seconds Read in seconds After optimization php testphp Read in seconds Read in seconds Read in seconds Hey there I always needed the formula in my reports so Ive made an implementation of that And it would be nice to have it within the original package PS Really needed that on production ASAP so had to change the composer package if this causes a problem with the PR I can fork to different repo Thanks Eli Hi I just got bitten by the problem described in but mine is quite different I was trying to store floats in the generated spreadsheet and kept getting errors I started digging and discovered that floats in XML are stored in a localeaware way They are written asis but PHP can sometimes format them with a different decimal separator other than a dot eg in Poland we are using a comma if you start messing with setlocaleLCALL pl This results in c rC s v vc If you manually change it to c rC s v vc then Excel is happy and formats the value as a number The solution is quite simple instead of doing elseif cellisNumeric cellXML v cellgetValue vc do elseif cellisNumeric cellXML v sprintfF cellgetValue vc or even better elseif cellisNumeric cellXML v sprintf isfloatcellgetValue F d cellgetValue vc or temporarily reset LCALL LCNUMERIC during the export Im changing my code to use LCTIME because thats what I actually need right now but you need to be aware of the unusual sideeffects of locale for Spout