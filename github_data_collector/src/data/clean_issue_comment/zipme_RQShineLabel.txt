 I guess its objectivec selfendTime selfbeginTime duration instead of objectivec selfendTime selfbeginTime selfshineDuration Just wanted to put it out there in case anyone needs it Here is a swift controller and changes the text itself with a timer IntroViewControllerswift Created by Jason wang on import Foundation import UIKit import RQShineLabel import Parse class IntroViewController UIViewController var shineLabel RQShineLabel var timer Timer var textArray var currentCount override func viewDidAppear animated Bool superviewDidAppearanimated selfshineLabelshine var background UIImageView var background UIImageView override func viewDidLoad superviewDidLoad background UIImageViewimage UIImagenamed IntroBackground background contentMode scaleAspectFill background frame selfviewbounds selfviewaddSubviewbackground background UIImageViewimage UIImagenamed IntroBackground background contentMode scaleAspectFill background frame selfviewbounds background alpha selfviewaddSubviewbackground selfshineLabel RQShineLabelframe CGRectx y width height selfshineLabelnumberOfLines selfshineLabeltext Welcome to my app selfshineLabelbackgroundColor UIColorclear selfshineLabelfont UIFontname HelveticaNeueLight size selfshineLabelcenter selfviewcenter selfviewaddSubviewselfshineLabel scheduledTimerWithTimeInterval selfviewbringSubviewtoFront selflogo selfviewbringSubviewtoFront selfloginView func scheduledTimerWithTimeInterval Scheduling timer to Call the function updateCounting with the interval of seconds timer TimerscheduledTimertimeInterval target self selector selectorselfupdateCounting userInfo nil repeats true func updateCounting if selfshineLabelisVisible selfshineLabelfadeOutcompletion let textIndex selfcurrentCount selftextArraycount let text selftextArray textIndex selfshineLabeltext text selfcurrentCount UIViewanimatewithDuration animations if selfbackground alpha selfbackground alpha selfbackground alpha else selfbackground alpha selfbackground alpha selfshineLabelshine else selfshineLabelshine Hello i want repeat this animation while calling an API But its not happening Please suggest how to handle it I have tried to change the fadeoutDuration from s to another value but it doesnt work I find that you made mistake in this function voidstartAnimationWithDurationCFTimeIntervalduration selfbeginTime CACurrentMediaTime selfendTime selfbeginTime selfshineDuration selfdisplaylinkpaused NO Maybe you should add duration rather than selfshineDuration I fixed it but another bug happen and I fixed it finally with inserting these code below into your updateAttributedString if now selfendTime selfdisplaylinkpaused YES for NSUInteger i i selfattributedStringlength i selfcharacterAnimationDelays i arc randomuniformselffadeoutDuration CGFloat remain selffadeoutDuration selfcharacterAnimationDelays i floatValue selfcharacterAnimationDurations i arc randomuniformremain if selfcompletion selfcompletion You use selfshineDuration in setAttributedText it will affect the fadeoutAnimation I add those code to update characterAnimationDurations to get the right fadeoutAnimation Need pull request Hope you can understand my Chiglish I need to repeat the shine when the user touch on a UIButton There is a way to reset the label to the initial state and then call the shine again Hi Id like to ask you how can I use this component with Swift Im not familiar with Objective C at all Especially lines selfshineLabel RQShineLabel alloc initWithFrameCGRectMake and selfshineLabel shine Thank you Edit Sorry with stupid question Here is my solution Ad selfshineLabel RQShineLabelframe CGRectMake Ad selfshineLabelshine when you add this label in the controller and push out then push back loop this operation the memory will rise up what I should do at this time can it be done with a uitextview When the label is loading all of the text is compressed onto one line whilst animating will then appear normal after animation completed 