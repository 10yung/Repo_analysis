Cats has been released Any chance that you may take some time to update freek to this latest version cheers Romain can not pull this dependency could you please give me a hint on how to set my buildsbt for this dependency my buildsbt is as follow name freemonadcoproductexample version scalaVersion scala lazy val freemonadcoproductexample project in file settingsSeqaddCompilerPlugincommilessabin si fixplugin resolvers ResolverjcenterRepo resolvers ResolverbintrayRepoprojectseptemberinc maven libraryDependencies Seq orgtypelevel cats comprojectseptember freek Suppose Ive got a basic DSL defined and have a subprogram type using a couple of them scala import freek import catsId object KVStore sealed trait DSL A final case class Put A key String v A extends DSL Unit final case class Get A key String extends DSL Option A object Interpreter extends DSL Id def apply A fa DSL A Id A object WebIO sealed trait DSL A final case class Fetchkey String extends DSL String object Interpreter extends DSL Id def apply A fa DSL A Id A object FileIO sealed trait DSL A final case class Lift A value A extends DSL A Interpreter for LiftingDSL is simple Just use Applicativepure object Interpreter extends DSL Id def apply A fa DSL A Id A The subprogram object KVStoreWithWeb type PRG KVStoreDSL WebIODSL NilDSL Later on I define another program in which I use the aforementioned subprogram in addition to a yetunused DSL FileIODSL Id like to have a type for my App level Interpreter since I might use it in other parts of the app scala Main program that uses subprogram object AnotherProgram type PRG FileIODSL KVStoreWithWebPRG val PRG DSLMake PRG type Interp M Interpreter PRGCop M If I try to instantiate an Interp Id with the order mixed up the compiler blows up with an interesting error scala val interpreter Interp Id KVStoreInterpreter WebIOInterpreter FileIOInterpreter sbt error last tree to typer TypeTree error tree position line of UsersLloydDocumentsscaladevfreektesttestfreekyAppscala error tree tpe error error symbol none error symbol definition none a NoSymbol error symbol package none error symbol owners error call site object App in package freeky in package freeky error error Source file context for tree position error error type Interp M Interpreter PRGCop M error error val interpreter Interp Id KVStoreInterpreter WebIOInterpreter LiftingInterpreter error error If I fix the ordering to match the DSL type everything works fine scala val interpreter Interp Id FileIOInterpreter KVStoreInterpreter WebIOInterpreter I couldnt get my usage of this feature to compile without using expand PRG in the subprogram as shown in this test Example scala object TestService sealed trait Account sealed trait RepoF A sealed trait Repo A case class Queryno String extends Repo Either String Account case class Storeaccount Account extends Repo Either String Account case class Deleteno String extends Repo Either String Unit object Repo type PRG Repo NilDSL val PRG freekDSLMake PRG type O Either String Bulb def queryno String Queryno def storeaccount Account Storeaccount def deleteno String Deleteno How do I write this function here def updateno String OnionT Free RepoPRGCop RepoO Int for a Querynofreeko RepoPRG RepoO Storeafreeko RepoPRG RepoO yield when import catsinstanceseither isnt imported it gives a bit confusing compile error scala could not find implicit value for parameter lifter freekLifter Aux Either StringTestServiceAccount TestServiceRepoOTestServiceAccount basically it doesnt tell an implicit Application G is missing in the scope Any way to escalate implicitNotFound of Lifter into this scope ADT scala sealed trait UserGetter A object UserGetter final case class GetuserName UserName extends UserGetter Either Error Option User sealed trait UserPasswordChecker A object UserPasswordChecker final case class CheckclientSecret UserPassword hashText BcryptHashText extends UserPasswordChecker Either Error Boolean Program scala type PRG UserGetter UserPasswordChecker NilDSL type O Either Error Option Bulb for u UserGetterGetUserNameusernamefreeko PRG O r UserPasswordCheckerCheckUserPasswordpassword uhashedPasswordfreeko PRG O if r yield Optionu Compile Error scala value filter is not a member of freekOnionT catsfreeFree A freekIn oauth domainadtUserGetteroauth domainadtUserPasswordCheckerA OBoolean OnionT should implement MonadFilter I think it is very common to use guards in for comprehensions If FreeK offers this feature it should be more nicer It seem that the version depends on cats and scala RC Could you publish against scala cats info friscpiffreedslrandom SNAPSHOT info comprojectseptemberfreek info orgtypelevelcatsfree RC info comgithubmpilquistsimulacrum RC info orgtypelevelmacrocompat RC info orgtypelevelscalalibrary DSL sealed trait KVS A object KVS case class Getkey String extends KVS String case class Putkey String value String extends KVS Unit sealed trait FileIO A object FileIO case class Getname String extends FileIO File case class Deletename String extends FileIO Unit Interpreter val FileInterpreter new FileIO Future def apply A a FileIO A Future A a match case FileIOGetname Future new Filename case FileIODeletename Future new Filenamedelete val KVSInterpreter new KVS Future def apply A a KVS A Future A a match case KVSGetid Future case KVSPutid value Future val interpreter KVSInterpreter FileInterpreter It could compile successfully When I modify interpreters to val FileInterpreter new FileIO Lambda A Future Xor Exception A override def apply A fa FileIO A Future Xor Exception A fa match case FileIOGetname Future Xorrightnew Filename case FileIODeletename Future new Filenamedelete Xorright val KVSInterpreter new KVS Lambda A Future Xor Exception A def apply A a KVS A Future Xor Exception A a match case KVSGetid Future Xorright case KVSPutid value Future Xorright I cant compile it and it tells me value is not a member of cats AA thisFileIO A scalaconcurrentFuture catsdataXor ExceptionA lazy val interpreter Interpreter type In KVS FileIO type A Future Xor Exception A KVSInterpreter FileInterpreter Does someone know whats going on Currently freek pulls in all cats dependencies and hence you get test dependencies such as catslaws The dependencies should be kept to a minimum and ideally only the module which freek uses which I would assume to be catsfree 