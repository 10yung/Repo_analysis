 Is there a way to extract the affected triangles after a runtime navmesh update As per the title seems this feature set has been abandoned isnt on the package manageris it still worth using if future support is non existent now Summary Bake a NavMesh using the NavMeshSurface Save the prefab make sure no overrides in scene Create a new object using the prefab NavMesh is not present Images showing an example Here is my prefab with the NavMeshBaked Screen Shot at pm Here is a copy of the prefab obtained from the project folder Screen Shot at pm Notice how the new copy of the prefab does not have the NavMesh attached to it Any guidance would be greatly appretiated Observed throughout preview releases most recently on b Crashes Samsung Galaxy S and Oculus Quest and probably all Android based devices Summary A baked NavMeshSurface crashes Android devices on enable when built with IL CPP Detail The crash appears to happen within the NavMeshAddNavMeshData call from NavMeshSurfaceAddData Reproducibility Reproduction steps Create a new project on Switch platform to Android enable IL CPP and NET x in player settings Import NavMeshComponents Add a NavMeshSurface and bake it doesnt matter if there are any meshes to bake Run on an Android device it should crash as soon as the scene loads ADB output adboutputtxt Android Tombstone attached tombstone txt Reproduction Project NavMeshCrashzip I have this horizontal elevator white color with moving NavMeshSurface and a NavMeshLink on the edge of a static platform How to check if the NavMeshLink has turned blue ie valid Is it possible to create a navmesh to represent a more complicated navigable scene An example use case would be a solution to navigate antsbugs in a kitchen Able to walk on floors walls ceilings counters tablechair legs etc Floors and counters are accomplished fairly easy with the demos that Ive seen Things start to break down for me when I want to navmesh the walls of a room and the sides of the counters and completely fall apart when trying to add tableschairs as navigation surfaces Should I be making a navmesh surface for every surface group How many navmesh surfaces can I use before performance issues will start to become an issue I think This would make sense to make this A Package in the Package Manager for easy access and smaller project sizes At the moment this would have to be editor time because GameObjectisStatic is an editor only check if possible it would be cool to have this exposed at runtime but I imagine there are other ramifications there This is ideal because now we have to rely on layers or some custom markup to tell objects whether or not to bake Ive heard a common issue for folks using probuilder is that islands will appear inside buildings objects aligned flush with a ground object will have islands inside even if thats not intended An obvious way to fix this would be to use an algorithm after baking to detect such cases and then remove those islands but this isnt currently possible First we need an API that allows the user to directly add or remove facesislands from the bake result maybe thats setting triangulation maybe not Second we need a callback to subscribe to after surfacesnavigation window finish baking