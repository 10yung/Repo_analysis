demogo go package main import githubcomspf cobra func main var root cobraCommandUse demo var sub cobraCommandUse sub Run funccobraCommand string subLocalFlagsBooltest false blah blah rootAddCommandsub rootExecute go run demogo sub test Error unknown flag test Usage demo sub flags Flags h help help for sub test blah blah I expect Im doing something wrong but its not clear what and moreover its very confusing that test is listed in help but throws an error This checks in the failing test that references and proposes a fix to LocalFlags not copying information about whether a flag has been parsed or not If preferable I can open a PR against spf pflag to change flagSetAddFlag to copy the fact that a flag already has a value instead of performing that logic here If you call cmdLocalFlagsVisit in a child commands Run function it always visits an empty list of flags Consider the following test go func TestLocalFlagsInChildRunt testingT root Command Use root Run emptyRun var setFlags string c Command Use child Run funccmd Command args string cmdLocalFlagsVisitfuncf pflagFlag setFlags appendsetFlags fName cFlagsBoolPboolb b false a boolean flag rootAddCommandc err executeCommandroot child boolb if err nil tFatalunexpected error errError if lensetFlags setFlags boolb tErrorfexpected setFlags to be boolb but was v setFlags Which fails on master with the following error message FAIL TestLocalFlagsInChildRun s commandtestgo expected setFlags to be boolb but was It looks like this is because when a flag is added to the clflags set in LocalFlags pflagFlagSetAddFlag does not copy the fact that the flag may have been already parsed A command can have multiple parents While executing Run of a command is there a way to know which parent command was used Usecase I want to write a single child command and add multiple parents to it and then have it behave based on the parent which was used to call it This add ZSH completion on command aliases Viper is not goroutine safe and causes race conditions for any code using SetGet from multiple goroutines Packages that use both cobra and viper are forced to use the unsafe version of viper Close This PR updates pflag viper and yaml to the latest stable releases Refs Hi All I have defined a command that should look like this binary param param So when the user enters this binary param param paramX The parser code somehow ignores paramX and executes the command as if user had entered binary param param What am I missing Any suggested way to fix this Thanks I thought this sentence seemed off Note that the variable author will not be set to the value from config when the author flag is not provided by user In the Viper documentation Viper uses the following precedence order Each item takes precedence over the item below it explicit call to Set flag env config keyvalue store default One would assume that the variable author will not be set to the value from config when the author flag is provided by user Testing with cobra init bears this out cobra init pkgname test go Copyright Nickolas Kraus cobra init pkgname test author Me go Copyright Me 