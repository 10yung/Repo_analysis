I have a docker linux image with ngix which hosts the angular app It is possible to run the prism mock server in the same docker image In other words I would like to have ngix to host an Angular app and run the prismcli mock apiyaml port at the same time Api requests would be proxied to the internal port If the above is not possible I could actually create a new container to run the prismcli but I dont know how to build the image The following doesnt work for me FROM stoplightprism EXPOSE COPY apiyaml ENTRYPOINT prismcli mock apiyaml port after docker run I get internalmodulescjsloaderjs throw err Error Cannot find module micri Require stack usrsrcprismpackageshttpserverdistserverjs usrsrcprismpackageshttpserverdistindexjs usrsrcprismpackagesclidistutilcreateServerjs usrsrcprismpackagesclidistcommandsmockjs usrsrcprismpackagesclidistindexjs at FunctionModuleresolveFilename internalmodulescjsloaderjs at FunctionModuleload internalmodulescjsloaderjs at Modulerequire internalmodulescjsloaderjs at require internalmodulescjshelpersjs at Objectanonymous usrsrcprismpackageshttpserverdistserverjs at Modulecompile internalmodulescjsloaderjs at ObjectModuleextensionsjs internalmodulescjsloaderjs at Moduleload internalmodulescjsloaderjs at FunctionModuleload internalmodulescjsloaderjs at Modulerequire internalmodulescjsloaderjs code MODULENOTFOUND requireStack usrsrcprismpackageshttpserverdistserverjs usrsrcprismpackageshttpserverdistindexjs usrsrcprismpackagesclidistutilcreateServerjs usrsrcprismpackagesclidistcommandsmockjs usrsrcprismpackagesclidistindexjs Thank you Describe the bug After updating stoplightprismcli from to a property defined as type string was returned as number The example value was not encapsulated with quotes and only contained numbers To Reproduce Given this OpenAPI document openapi info title example version paths path get responses description Successful operation content applicationjson schema ref componentsschemasResponse components schemas Response type object properties stringTypeString type string example string numberTypeString type string example Run this CLI command prism mock apiaos yaml create file with contents of step See error When calling the endpoint path the property numberTypeString will be returned as number Expected behavior I expect the response to be a string as type string is defined in the OpenAPI document Environment Library version OS windows Browser Edge Additional context Encapsulating the type string example value with quotes fixed the issue for me but it is weird that the type is defined but not taken into account In OpenAPI v it is possible to define a minimum and a maximum for type number like that type number minimum exclusiveMinimum true maximum It would be great if the mocked data would reflect these boundaries to produce a more realistic data set For example if I have a property holding a temperature I get values like at the moment instead of random numbers in a realistic range se from upstream Checklist x Tests have been added for bug fixes features Docs have been added updated for bug fixes features What kind of change does this PR introduce Bug fix What is the current behavior What is the new behavior When running prism proxy it relays all headers from upstream source even after adding new ones that might be incompatible with the original response More specifically in my case my application is sending the TransferEncoding chunked header but since Prism is buffering the whole response to do response validation is also adds the ContentLength header These headers are incompatible and causes certain clients to fail For example Postman fails with a Parse error without a decent cause description Read more about the TransferEncoding header here Does this PR introduce a breaking change Should be no breaking changes with this PR as far as I can see User story As an API mock tester when I startup PRISM and my OpenAPI spec contains an unresolvable ref then I want to receive a notification so that I can try to fix the problem without having to try to fire that request against the mock by myself Is your feature request related to a problem i have tried to get started with PRISM and I have a spec with DTO models externalized into a separate file My spec is affected by bug If you experiment with the refs you need to try some calls before you know if it works or not CLI start Prism is listening on Im firing a call manually with Postman NEGOTIATOR success Found a compatible content for node UnhandledPromiseRejectionWarning Error Your schema contains ref You must provide specification in the third parameter Describe the solution youd like During startup Prism tries to resolve the refs and outputs a warning if calls use unresolvable refs Additional context Go with a Fail fast approach Closes Checklist x Tests have been added for bug fixes features x Docs have been added updated for bug fixes features What kind of change does this PR introduce feature What is the current behavior What is the new behavior This PR introduces two new cli options callbackdelaynm where n is number of seconds to wait defaults to m is optional and if set means that time to wait is randomized between n and m callbackcountnm where n is number of times to run a callback defaults to means infinitely m is optional and if set means that number of calls is randomized between n and m Does this PR introduce a breaking change No Checklist x Tests have been added for bug fixes features Docs have been added updated for bug fixes features What kind of change does this PR introduce Feature What is the current behavior What is the new behavior Prism CLI has now verbose flag which turns on request and response logging for mocking proxy and callbacks img width altScreen Shot at src Does this PR introduce a breaking change No User story As a Prism CLI user I can have more control over running callbacks so that I can delay making callback request or run it several times Is your feature request related to a problem Running callbacks not immediately but after some time or running them several times makes Prism act more like a real server That would help me prepare my applications to more real environment Describe the solution youd like Two options callbackdelaynm where n is number of milliseconds to wait defaults to m if set means that time to wait is randomized between n and m callbackcountnm where n is number of times to run a callback defaults to means infinitely m if set means that number of calls is randomized between n and m User story As a Prism CLI user I can supply verbose or debug CLI option so that I can see more verbose logs Is your feature request related to a problem There are occasions when I do not have easy access to request or response payload For those cases it would be helpful if I could see the actual request and response payloads together with headers That should help me debug possible problems with spec or request data Describe the solution youd like A ddebug or verbose CLI option which enables the above functionality Additional context This could be also super helpful in debugging callbacks which are performing asynchronous request based on previous reqres pair User Story As a Prism CLI user I am used to using Prism for improving the speed and accuracy of integrating with HTTP requestresponse APIs but I would also love help integrating webhooks for my API Details Prism is adding callbacks in but there is another feature coming through the OpenAPI proposals pipeline called Webhooks conceived and championed by lornajane in The summary for callbacks vs webhooks is this callbacks are events which are asynchronously responding to a request that happened Its the observer pattern you send a request get then within some reasonable timeframe the callback URL is hit to confirm the thing was done or failed etc Webhooks are more about general events You may subscribe to receive webhooks via a UI then that URL will be blasted with any and all relevant events which happen until the end of time As such these events are not related to paths in any way they are a new toplevel concept which use the same structure as callbacks so a lot of the same code can be used Lorna wrote a blog post about webhooks and callbacks for more context Implementation This will have nothing to do with the mock or proxy servers as these events are sent by the server whenever events happen They do not need a mock server running we just need to emulate the triggering of these events to hit the local developers code Using the nexmo SMS example yaml xwebhooks inboundsms requestbodycallback post summary Inbound SMS operationId inboundsms xexamplepath webhooksinboundsms description If you rent one or more virtual numbers from Nexmo inbound messages to that number are sent to your webhook endpoint When you receive an inbound message you must send a xx response If you do not send a xx response Nexmo will resend the inbound message for the next hours requestBody required true content applicationjson schema ref componentsschemasInboundMessage responses description Your server returns this code if it accepts the callback TBD but maybe a command like this bash prism trigger openapiyml inboundsms Questions we have both webhook name incomingsms and operationId of incomingsms is this redundant or will they sometimes be different If so for what reason requestbodycallback what is this and where is it coming from 