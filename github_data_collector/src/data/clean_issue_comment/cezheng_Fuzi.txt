Hi guys maybe you can help me to resolve my issue Im using Fuzi in my framework for at least a year it works great I even did one PR previously Now I struggle with the following thing Using cocoapods I integrate my framework compiled with Xcode Swift with the enabled flag Build Libraries for Distribution to project written in Xcode Swift I expect that it should work because we have an ABI stability released However I have an error Showing All Messages ApplicationsXcodeappContentsDeveloperPlatformsAppleTVSimulatorplatformDeveloperSDKsAppleTVSimulator sdkusrincludelibxml libxmlHTMLparserh libxmlxmlversionh file not found Could not build ObjectiveC module libxml My Framework compiled in Xcode with Swift doesnt produce errors Part of my podspec sxcconfig HEADERSEARCHPATHS SDKROOTusrincludelibxml sdependency Starscream sdependency SwiftyXML sdependency Fuzi sdependency Sentry sdependency ReachabilitySwift sdependency CryptoSwift The testing project has Other linker flags lxml Header Search Path SDKROOTusrincludelibxml I cant understand the issue Why it works for one version and doesnt work with another Previously it was complaining that module was built with another Swift version but Build Libraries for Distribution flag looks like resolve it I also tried to find any hint in thread opened by thebluepotato here but failed I will appreciate any help Thanks in advance Best regards Alex Environment Package Manager CocoaPods version Fuzi version Xcode version Description Expected behaviour XPath look from node not root Actual behaviour XPath look from root not node For example I looked for nodes with a certain class After I iterate result for look inside for one item with selected class I know there is one object with this class I checked count it returned not Environment Package Manager Carthage version CocoaPods version Manually Fuzi version Xcode version How to reproduce let nodes rootxpathsearchForNodes printnodescount return expected nodesforEach let subNodes xpathsearchForOneSubNode printsubNodescount return expected repeated for all node See ApplicationsXcodebetaappContentsDeveloperPlatformsiPhoneSimulatorplatformDeveloperSDKsiPhoneSimulator sdkusrincludelibxml libxmlHTMLparserh libxmlxmlversionh file not found Reading up on PackageDescription the headerSearchPath has to be relative and not absolute but it wasnt really enforced before Xcode beta which allowed us to use SDKROOTusrincludelibxml to point to the correct libxml headers Another issue seems to be that I cant get Xcode to read the unsafeFlags which would allow to at least build the Package but not distribute it Ill open an issue in SPM as well That could be useful in some cases Hope you feel these functions are useful as well I needs update attribute value on XMLElement If you dont mind Please check it Thank you README is kind of out of date as some description still in Swift English Chinese Japanese Description Expected behaviour XML namespaces can be bound to a prefix at any element in a document They can be bound within an element that uses that namespace prefix XPath expressions should be able to use the same prefixes Eg given the document root uBrowseResponse xmlnsuurnfoobar root the XPath expression rootuBrowseResponse should resolve to a nodelist of element Actual behaviour The XPath expression rootuBrowseResponse resolve to a nodelist of elements and the following is printed XPath error Undefined namespace prefix XPath error Invalid expression If the document is amended such that the prefix u is bound at the root element the xpath expression evaluates correctly Environment Package Manager X CocoaPods version Fuzi version Xcode version How to reproduce The following test fails demonstrating the issue func testNestedNamespacePrefixWithXPath let docStr xml version encoding UTF rootuBrowseResponse xmlnsu urnfoobar root do let document try FuziXMLDocumentstring docStr let nodes documentxpathrootuBrowseResponse XCTAssertFalsenodesisEmpty catch let error printerror XCTFailStringdescribingerror Description Expected behaviour Reading a broken XML throws an error Actual behaviour Fuzi recovers and parses the XML partially up to the error Environment Package Manager CocoaPods Fuzi version Xcode version How to reproduce While unit testing our library we want to catch that our parser fails on invalid documents Instead the broken file gets partially parsed because Fuzi sets the option to ignore errors XMLPARSENOERROR As the initializers are failable as a user wed expect it to fail for invalid documents Now I can understand that not all users might want this but could it be made available as an option For example modify the initialisers to accept an extra options parameter by default set to swift Int XMLPARSENOWARNINGrawValue XMLPARSENOERRORrawValue XMLPARSERECOVERrawValue Even better would be to provide a swift OptionSet that maps to the libxml values Example faulty XML xml xml version encodingutf resources color nameArticleTitle fe color resources Hi How add Fuzi to swift project on Ubuntu Linux