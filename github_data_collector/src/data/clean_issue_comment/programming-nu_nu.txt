With upcoming iOS versions the swizzling of NSCFMutableArrays and NSCFMutableDictionarys addObject fails as the class clusters now also have NSCFMutable classes which will not respond to the swizzeled selectors as they were not added I only looked into the crashes for mins or so there might be moreother causes for it Add the method to the other classes could fix that In general we could should look into a way to not swizzle the whole programs behaviour with added nils to arrays and only do so in a nu context Any ideaspointers timburks Implementing a SWANK backend could be interesting Would it be worth it and possible An even better target than ObjectiveC feature and structurewise Swift is great but without homoiconicity true macros and prefix notation how can anything than ClojureLisp be my favorite language It should be possible to write mobile apps in Nu due to its ObjC base am I correct Could we have some demo GUI apps with sample code Im testing my nu installation at the moment After using mininush toolsnuke install to install nu Im trying to use mininush toolsnuke uninstall to uninstall but with no luck Whats the correct way to uninstall nu git clone gitgithubcomjsallisnutmbundlegit Nutmbundle git clone gitgithubcomjsallisnutmbundlegit Nutmbundle dash should be period This repo has been modified by githubs web browser editor at a point where it wrote corrupt git objects to the repo These trees are broken bananaDeviphone vendornu nevyn master git fsck full warning in tree bfc c d f b e cdfd d dbc contains zeropadded file modes warning in tree c c d b bc fec ede da cb f contains zeropadded file modes warning in tree f a f d ed ba dab cb e a contains zeropadded file modes warning in tree cbdd d c c a c aeac ef contains zeropadded file modes warning in tree eb a becf c b fe d fea b f contains zeropadded file modes warning in tree a ea bbc f bee d efe c contains zeropadded file modes warning in tree f ae a fdb d ca f f f b bd contains zeropadded file modes warning in tree a dc c ec f c e cb f contains zeropadded file modes warning in tree ddf dcc d a e cc f e af be a contains zeropadded file modes warning in tree e e ecde c aa d e ad f ad contains zeropadded file modes warning in tree ee e c dbce e b cb b ebf cb c contains zeropadded file modes warning in tree f f a c db cbeed bff d de contains zeropadded file modes This means that the repository cant be pushed to a git server that is less forgiving about errors Im trying to fork all my external dependencies so we can keep building even if github or bitbucket is down and failing to push the fork to gerrit The only way to fix it is to rewrite the tree which will be very annoying for all forks with outstanding changes If you still want to go through with it instructions can be found in this mailing thread It claims to not be able to find signatureforidentifier It would be helpful if blocks would just work like in MacRuby I do not wish to distinguish between Nu blocks and ObjectiveC blocks lisp usrbinenv nush load nu load cblocks set myList one two three set myArray myList array puts each works myList each do obj puts obj puts cBlockWithNuBlock works myArray enumerateObjectsUsingBlock NuBridgedBlock cBlockWithNuBlock do obj idx stop puts obj signaturevI puts cblock fails myArray enumerateObjectsUsingBlock cblock void id obj unsigned long idx BOOL stop puts obj text each works one two three cBlockWithNuBlock works one two three cblock fails Nu uncaught exception NuCantFindBridgedFunction dlsymRTLDDEFAULT signatureforidentifier symbol not found If you are using a release build try rebuilding with the KEEPPRIVATEEXTERNS variable set In Xcode check the Preserve Private External Symbols checkbox from TopLevel in NuBridgedFunction from TopLevel in NuBridgedFunction functionWithName signatureforidentifier signature from TopLevel in NuBridgedFunction functionWithName signatureforidentifier signature identifier NuSymbolTable sharedSymbolTable from TopLevel in g gettypesignature from TopLevel in set from TopLevel in progn from TopLevel in bridgedblock from TopLevel in bridgedblock obj idx stop puts obj from testnu in cblock from testnu in myArray from LibraryFrameworksNuframeworkResourceshelpnu in progn 