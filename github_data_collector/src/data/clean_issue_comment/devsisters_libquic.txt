 Building CXX object boringsslcryptoaesCMakeFilesaestestdiraestestcco Usersbogdantoolslibquicboringsslcryptoaesaestestcc error bool literal returned from main WerrorWmain return false error generated It seems aestestcc has a warning and because of Werror compilation fails OS Mac CMake Compiler Apple LLVM version clang Hello Do you know about Conan Conan is modern dependency manager for C And will be great if your library will be available via package manager for other developers Here you can find example how you can create package for the library If you have any questions just ask heres the log sourcelibquicbuild cmake The C compiler identification is GNU The CXX compiler identification is GNU Check for working C compiler usrbincc Check for working C compiler usrbincc works Detecting C compiler ABI info Detecting C compiler ABI info done Detecting C compile features Detecting C compile features done Check for working CXX compiler usrbinc Check for working CXX compiler usrbinc works Detecting CXX compiler ABI info Detecting CXX compiler ABI info done Detecting CXX compile features Detecting CXX compile features done Setting build type to Debug as none was specified Looking for pthreadh Looking for pthreadh found Looking for pthreadcreate Looking for pthreadcreate not found Looking for pthreadcreate in pthreads Looking for pthreadcreate in pthreads not found Looking for pthreadcreate in pthread Looking for pthreadcreate in pthread found Found Threads TRUE Found Protobuf usrlocalliblibprotobufso Required is at least version Found Perl usrbinperl found version CMake Error at boringsslCMakeListstxt message Could not find Go Configuring incomplete errors occurred See also homeliuyafeisourcelibquicbuildCMakeFilesCMakeOutputlog See also homeliuyafeisourcelibquicbuildCMakeFilesCMakeErrorlog the newer quic has implemented BBR congestion control would you like to merge the newer quic implementation into libquic Restore header fix CPP header selection logic Not possible to build on OSX without this as the path to Go is userdependent eg installed via brew in not usrlocalbin Inherit those paths from commandlinehigherlevel build system if available So basically if im some programmer who wants to screw around with making an existing c server application use quic Where do i start What I see here are some random files with no documentation on usage inside some c application Am I missing something How about port Google quicsimpleserver and client GNU libc published deprecated readdirr see the announcement email The readdirr and readdir r functions have been deprecated It is recommended to use readdir and readdir instead This causes the build to fail Building C object boringssldecrepitsslCMakeFilesssldecrepitdirssldecrepitco FAILED boringssldecrepitsslCMakeFilesssldecrepitdirssldecrepitco usrbincc DBORINGSSLIMPLEMENTATION DUSEOPENSSL DSTDCCONSTANTMACROS DSTDCLIMITMACROS Isrc Isrcthirdpartymodpb Iboringsslinclude Isrcthirdpartyprotobufsrc Isrc Iboringssldecrepitsslinclude Wall fpic gdwarf Wall Werror Wformat Wsigncompare Wmissingfieldinitializers ggdb fvisibilityhidden Wmissingprototypes Wshadow stdc DXOPENSOURCE g MD MT boringssldecrepitsslCMakeFilesssldecrepitdirssldecrepitco MF boringssldecrepitsslCMakeFilesssldecrepitdirssldecrepitcod o boringssldecrepitsslCMakeFilesssldecrepitdirssldecrepitco c boringssldecrepitsslssldecrepitc boringssldecrepitsslssldecrepitc In function OPENSSLDIRread boringssldecrepitsslssldecrepitc error readdirr is deprecated Werrordeprecateddeclarations if readdirrctxdir ctxdirent dirent In file included from boringssldecrepitsslssldecrepitc usrincludedirenth note declared here extern int readdirr DIR restrict dirp cc all warnings being treated as errors ninja build stopped subcommand failed 