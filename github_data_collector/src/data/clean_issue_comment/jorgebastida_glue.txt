This is what I feel Im qualified to raise an issue about Sorry if its too trivial First times are always scary but confidence can outweigh importance sometimes This probably isnt one of those times In any case At least my first contribution will make me look petty rather than stupid Ill take it Also many thanks for building this It made my life so much easier EDIT Damn I had to edit it Firsts suck Version Python default Mar GCC Compatible Apple LLVM clang Traceback most recent call last File usrlocalbinglue line in module loadentrypointglue consolescripts glue File usrlocallibpython sitepackagesgluebinpy line in main sysstderrwritePIL version nformatPImageVERSION AttributeError module object has no attribute VERSION I want to use glue for Sprite Animations with trimmed frames so i need both the original frame size and the position of the trimmed image within the original frame As an output format i use json So far i only managed to get the desired results without trimming Is this currently possible with glue Its not always desirable to scale with antialiasing especially when using Glue with pixel art I added the options to override the algorithm and updated the docs to reflect the change If a user doesnt pass the scaling argument it will default to what Glue already used this is causing dep conflicts in builds with jinja Hi there Thank you for your glue its a wonderful tool for me I stucked in a trouble that restoring original files eg I have a plist file and a image file I want to restore them to original state I found glue doesnt support this for now yet Could you add this function to glue Thank you vvvvvvery much Hi there I was use glue to spriting images and got follow errors usage glue source source s output output o glue error argument sources invalid unicode value UsersliyunhangDocuments xe xa xbc xe x xa xe x a xa xe x xbb xe xa xbc xe x xa xe x xaa xe x a xa xe x c x xe x x xe xbe xa xe xa xbc xe x xa images this is command i used glue cocos source UsersliyunhangDocuments images output UsersliyunhangDocumentsreposliveanimationenginegiftTestNode This is my envrioment Python glue Could you fix this issue thank you very much First of all great library It s a godsend What I would like to know is if you would consider adding background position based on percentage so that it will work with responsive layouts An example of this implementation can be seen here If there is already an option for this please let me know as I can t find it in docs Thanks I just came across this tool and it looks awesome Im having some fun getting it going though Ive just installed on my Ubuntu server using aptget install gluesprite I didnt get any errors with the install However when I try and run it I do gluesprite icons sprites Traceback most recent call last File usrlibpython distpackagespkgresourcesinitpy line in buildmaster wsrequirerequires File usrlibpython distpackagespkgresourcesinitpy line in require needed selfresolveparserequirementsrequirements File usrlibpython distpackagespkgresourcesinitpy line in resolve raise VersionConflictdist reqwithcontextdependentreq pkgresourcesContextualVersionConflict Jinja usrlibpython distpackages RequirementparseJinja glue During handling of the above exception another exception occurred Traceback most recent call last File usrbingluesprite line in module from pkgresources import loadentrypoint File usrlibpython distpackagespkgresourcesinitpy line in module callaside File usrlibpython distpackagespkgresourcesinitpy line in callaside fargs kwargs File usrlibpython distpackagespkgresourcesinitpy line in initializemasterworkingset workingset WorkingSetbuildmaster File usrlibpython distpackagespkgresourcesinitpy line in buildmaster return clsbuildfromrequirementsrequires File usrlibpython distpackagespkgresourcesinitpy line in buildfromrequirements dists wsresolvereqs Environment File usrlibpython distpackagespkgresourcesinitpy line in resolve raise DistributionNotFoundreq requirers pkgresourcesDistributionNotFound The Jinja distribution was not found and is required by glue Any suggestions sudo dpkg l grep jinj ii python jinja all small but fast and easy to use standalone template engine Nonascii files raise errors see On Mac its more complex because the unicode filenames we read with oswalk contain different codepoints for the same unicode characters we wrote pointed me in the right direction unicodedatanormalize is your friend 