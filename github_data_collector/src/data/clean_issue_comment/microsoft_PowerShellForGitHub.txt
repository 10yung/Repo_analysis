Im unsure of if you will accept PRs that only implement one part of the functionality For example for the RepositoryContents there is Get CreateUpdate Delete Get archive link But Im really only looking to implement the Get part Is that ok for a phase approach Please let me know what else needs to be considered i havent looked at the tests yet so Im unsure if everything is tested or not We use a number of the functions within this file throughout the other UTs but not all of them There is a lack of comprehensive testing available for all the methods within this file as was recently demonstrated with and around UpdateGitHubRepository We should close the gaps on the testing of the functions within this file to increase code coverage and reduce regression possibilities The helper function WaitJobWithAnimation incorrectly handles progress and this makes it look quite ugly indeed in the ISE a spew of nonwrapped yellow lines The root of the problem is that you are creating your own WriteProgress Please use WriteProgress instead as this is more standard and will be honored across more PowerShell hosts The issue reproduces everywhere but is worst in the PowerShell ISE PowerShellForGitHub version psVersionTable Name Value PSVersion PSEdition Desktop PSCompatibleVersions BuildVersion CLRVersion WSManStackVersion PSRemotingProtocolVersion SerializationVersion To detail the fix Create an ID before the while loop Line Change your WriteInteractiveHost to WriteProgress line WriteProgress animationFrames iteration animationFramesLength Elapsed int iteration framesPerSecond seconds PercentComplete iteration animationFramesLength animationFramesLength id id Complete the Progress message at the end lines Get rid of your WriteInteractiveHost at the very end I wrote some PowerShell to publish a GitHub release recently here and was wondering if you would like it It needs changing to work with the conventions of this module of course but with some guidance I can do that Let me know if youre interested I havent exposed any other GitHub Release API support but could relatively easily Right now in order for telemetry to work NuGet packages need to be downloaded or cached MicrosoftApplicationInsights for MicrosoftApplicationInsightsdll MicrosoftDiagnosticsTracingEventSourceRedist for MicrosoftDiagnosticsTracingEventSourcedll MicrosoftBclAsync for MicrosoftThreadingTasksdll In the end the telemetry events are just being sent as web requests While the web request format isnt documented it should be possible to reverseengineer via a tool like Fiddler If we can figure out how to make those web requests directly then we can improve the firstrun experience for users to not need to have that initial binary download Tests for a few common scenarios Only Get and Create references implemented as of now as it is required for PSScriptAnalyser Run returns no issues This issue is created to implement the Git Data refs APIs from I will be initially concentrating on creation of branches as I need it for Does not contain tests yet Issue to track the implementation of the APIs for merging under the Repository section in API reference I will update this issue with my proposals for the cmdlet names and parameters Using a single issue to track the remaining work so as not to litter the Issues and give the wrong impression on the current state of the project bug wise If a contributor is interested in making progress towards any of these items they should just create a new Issue to track that specific work mention this Issue and then resolve their PR against the Issue that they created At that point Ill go ahead and update this list and check off that item Using a single issue to track the remaining work so as not to litter the Issues and give the wrong impression on the current state of the project bug wise If a contributor is interested in making progress towards any of these items they should just create a new Issue to track that specific work mention this Issue and then resolve their PR against the Issue that they created At that point Ill go ahead and update this list and check off that item Activity Core Events Issue Events are already supported Feeds Notifications Starring Watching Gists Core Comments Git Data Blobs Commits Refs Tags Trees x Issues x Core x Assignees x Comments x Events x Labels x Milestones x Timeline Migrations Orgs Source Imports Users x Miscellaneous x Codes of Conduct x Emoji x Gitignore x Licenses x Markdown x Meta x Rate Limit Organizations Core partially done Blocking Users Blocking Users Members Outside Collaborators Webhooks Projects Core Cards Collaborators Columns Repositories x Core Branches Collaborators Comments Commits Community Contents Keys Deployments Downloads x Forks Invitations Merging Pages Releases Statistics Statuses x Traffic Webhooks Pull Requests Core partially done Reviews Review Comments Review Requests Reactions Search Teams Core Discussions Discussion Comments Members 