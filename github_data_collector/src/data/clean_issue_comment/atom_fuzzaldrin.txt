Hi match usage is not described anywhere else but in the code It could be nice to give the function signature as long as an example most common case would be how to surround with strong tag See Coming from Sublime Text to Atom a major stumble for me is from what I gather that fuzzaldrin never learns from my usage and returns only results sorted by their match score However Sublime both in command palette and autocomplete menu would preselect the last used result I selected the same input Ill illustrate the need with two examples First up autocomplete When writing CSS I previously would use sort of a shorthand say bcokbdtabkbd for backgroundcolor When I use the shortcut the editor should remember the option I picked and the next time I use the exact same input bco it should preselect the exact same result backgroundcolor This is a massive timesaver that lets me have pseudosnippets of sorts where I would write CSS properties just by to letter combinations with results coming straight from autocompletes memory of my last usage Fast easy to remember and best of all simple Second command palette There are a couple of commands that arent used constantly and I dont want keyboard shortcuts for such commands but come in handy once or twice a month like converting the current file buffer from spaces to tabs or the other way around To do this Id open the command palette type in tabs or spaces and choose the appropriate command from the list In Sublime Id already have preselected the command I chose the last time I typed the same input tabs would preselect Indentation Convert to Tabs and spaces would preselect Indentation Convert to Spaces And even though there are other results for those queries and some of them may be higherscoring as indicated by the order of items the default command when I hit kbdReturnkbd is the one I actually use out of those results Instead in Atom when I type tabs into the command palette I have to scroll or arrowdown to items lower to get the one I wanted its ridiculous Right now Atom doesnt do this Instead every time I run an oftenused autocomplete input or search for a command in the command palette I get the same orderedbyscore results and have to select the one that I want which in most cases would have been the same one as always Sublime does this and its a huge time saver Id love to see Atom add this functionality And yes I could add obscure keyboard shortcuts and manually type out snippets for every single shortcut but that wouldnt be very productive or flexible More related to PHP specifically but it would allow namespaces such as JMS Serializer Annotation to look for JMSSerializerAnnotation Since of the time filenames wont have contain it would generally improve the results We have a quite nice PR which is improving the already existing state of the fuzzy finder But it doesnt feel as pertinent and snappy as the Chrome dev tools or Sublime Text one Maybe a good starting point for the next step after this PR would be to try to implement the same behaviour as the Chrome dev tools one Thankfully its open source so we can check the code here Especially in those files FilePathScoreFunctionjs FilteredItemSelectionDialogjs Any suggestion objections I suggest using LCS to rank matches Matches with lower number of substrings would come before matches with higher number of substrings This would be a lot more generic than the substring based approach suggested in some PRs If you want to play with this heres an online thing demonstrating the concept I didnt write this just found it Start by upping the Max Size a bit then type in two strings and press Execute LCS Lengths to see how it works One realworld use case where this would come in handy is when searching for git push note how its third place even though git and push are exact matches Singleword matches would be caught by this as well img width altgitpush src javascript var candidates filter results filter requirefuzzaldrinfilter candidates testcomponentscoreapplicationapplicationPageStateServiceSpecjs testcomponentscoreviewcomponentsactionsactionsServiceSpecjs results filtercandidates actionsServiceSpecjs consolelogresults This is what I get javascript testcomponentscoreapplicationapplicationPageStateServiceSpecjs testcomponentscoreviewcomponentsactionsactionsServiceSpecjs This is what I expect javascript testcomponentscoreviewcomponentsactionsactionsServiceSpecjs testcomponentscoreapplicationapplicationPageStateServiceSpecjs as actionsServiceSpecjs is exact file name match x scrot So in this screenshot Id like the local variable diagnostics to be the first item in the list here as it is the first match that has a prefix with identical case Is this something that you might consider adding maybe via an option If there are multiple files with the same filename in a project typing the filename presents them all but you cannot enter more text to narrow them down by path For example searchREADMEmd databaseREADMEmd If I enter README Ill get both files but cannot enter search or database to select from them If I enter search READ it will narrow it to a single file but I dont always know Ill have multiple matches until the filenames have been presented Think indexjs or indexcoffee in a large project By switching the search order I could enter README see there are multiple matches and start typing search to narrow it down to the one I wanted 