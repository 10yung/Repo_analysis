 I tried installing the kerasvis package both the pip and python install way However after installing it shows no module found when trying to import in spyder Version also introduces kerasbackendidentity via this PR But this isnt introduced in Keras until version So the current installrequires keras six scikitimage matplotlib h py needs to be updated to installrequires keras six scikitimage matplotlib h py Originally posted by thommiano in I have an issue with visualizing my conv layers in the following model architecture because kerasvis seems not to be able to handle model in models architecture I want to visualize a conv layer within my vgg transfered model But i cant acces them Does anyone know how to visualize the conv layers in a model within a model architecture or even how to flatten out the vgg model so i can access all layers It seems to be an open issue of kerasvis and i need the visualization urgently for my bachelor thesis Any help or recommendation of another visualization tool is greatly appreciated Thank you Layer type Output Shape Param input InputLayer None lambda Lambda None batchnormalization Batch None vgg Model multiple flatten Flatten None dense Dense None dropout Dropout None dense Dense None reshape Reshape None Total params Trainable params Nontrainable params None The VGG model consists of the following layers that i cant access input block conv block conv block pool block conv block conv block pool block conv block conv block conv block conv block pool block conv block conv block conv block conv block pool block conv block conv block conv block conv block pool model loadmodelhomemarcoHyperOptBachelorvgg final epochsweightshdf customobjectsmotionmetric motionmetric printmodelsummary print layername for layer in modelgetlayervgg layers layeridx utilsfindlayeridxmodel block conv This is just a teacher frame from my test dataset but it can to test it any image img utilsloadimghomemarcoHyperOptBachelorvgg final epochsouttest teacherpng f ax pltsubplots grads visualizesaliencymodel filterindices seedinputimg ax imshowgrads cmapjet When i try to get the index of a specific layer in that vgg model it comes up with the following error Traceback most recent call last File homemarcoPycharmProjectsidealsystemhelperscriptsvisualizationpy line in module layeridx utilsfindlayeridxmodel block conv File homemarcobachelorlibpython sitepackagesvisutilsutilspy line in findlayeridx raise ValueErrorNo layer with name within the modelformatlayername ValueError No layer with name block conv within the model so it doesnt find that layer because theres just the model not all the layers listed i guess And if i just call by index the vgg model it throws an error about that the model has mutliple output nodes I searched the internet and it seems to be an open issue but now i dont know how to keep progressing Kind Regards Marco Lengua Check that you are uptodate with the master branch of kerasvis You can update with pip install gitgitgithubcomraghakotkerasvisgit upgrade nodeps If running on TensorFlow check that you are uptodate with the latest version The installation instructions can be found here If running on Theano check that you are uptodate with the master branch of Theano You can update with pip install gitgitgithubcomTheanoTheanogit upgrade nodeps Provide a link to a GitHub Gist of a Python script that can reproduce your issue or just copy the script here if it is short Hello I also have a similar issue i am using my own image and i get the error below tensorflowpythonframeworkerrorsimplInvalidArgumentError The first dimension of paddings must be the rank of inputs node zeropadding d Pad I am giving the same size with which i trained the model for my image there is an example of gradcam with guided backprop modifier but in the literature guided gradcam means something else guided backprop multiplied by gradcam not sure why but the combination of guided backprop filterindicesNone all filters linear final activation gives me zero gradients for VGG you can see this in the demo notebook Is it possible to use visualizecam with a network having multiple inputs I have a modified version of resnet with inputs are images and is audio I want to visualize activations of input or input which are images as in this example However if I give as input to visualizecam seedinputinput or seedinput input input input I get the error Any help is more than appreciated Thanks grads visualizecammodel layeridxm filterindicesNoneseedinputscene penultimatelayeridxpenultimatelayerm File usrlocallibpython distpackagesvisvisualizationsaliencypy line in visualizecam return visualizecamwithlossesmodelinput losses seedinput penultimatelayer gradmodifier File usrlocallibpython distpackagesvisvisualizationsaliencypy line in visualizecamwithlosses grads penultimateoutputvalue optminimizeseedinput maxiter gradmodifiergradmodifier verboseFalse File usrlocallibpython distpackagesvisoptimizerpy line in minimize seedinput selfgetseedinputseedinput File usrlocallibpython distpackagesvisoptimizerpy line in getseedinput desiredshape Kintshapeselfinputtensor File usrlocallibpython distpackageskerasbackendtensorflowbackendpy line in intshape return tuplexgetshapeaslist AttributeError list object has no attribute getshape Version fixes a number of bugs for me and the current PyPI version is Check that you are uptodate with the master branch of kerasvis You can update with pip install gitgitgithubcomraghakotkerasvisgit upgrade nodeps If running on TensorFlow check that you are uptodate with the latest version The installation instructions can be found here If running on Theano check that you are uptodate with the master branch of Theano You can update with pip install gitgitgithubcomTheanoTheanogit upgrade nodeps Provide a link to a GitHub Gist of a Python script that can reproduce your issue or just copy the script here if it is short Hello I am trying to run through the Attention on MNIST Saliency and gradCAM example and I am running into the following issue AttributeError Traceback most recent call last ipythoninput faedabb eb in module model utilsapplymodificationsmodel grads visualizesaliencymodel layeridx filterindicesclassidx seedinputxtest idx Plot with jet colormap to visualize as a heatmap pltimshowgrads cmapjet jessicaanaconda envstfgpulibpython sitepackagesvisvisualizationsaliencypy in visualizesaliencymodel layeridx filterindices seedinput wrttensor backpropmodifier gradmodifier keepdims ActivationMaximizationmodellayers layeridx filterindices return visualizesaliencywithlossesmodelinput losses seedinput wrttensor gradmodifier keepdims jessicaanaconda envstfgpulibpython sitepackagesvisvisualizationsaliencypy in visualizesaliencywithlossesinputtensor losses seedinput wrttensor gradmodifier keepdims opt Optimizerinputtensor losses wrttensorwrttensor normgradsFalse grads optminimizeseedinputseedinput maxiter gradmodifiergradmodifier verboseFalse if not keepdims jessicaanaconda envstfgpulibpython sitepackagesvisoptimizerpy in minimizeself seedinput maxiter inputmodifiers gradmodifier callbacks verbose learning phase for test computedvalues selfcomputefn seedinput losses computedvalues lenselflossnames namedlosses listzipselflossnames losses locallibpython sitepackageskerasbackendtensorflowbackendpy in callself inputs return selflegacycallinputs return selfcallinputs else if pyanyistensorx for x in inputs locallibpython sitepackageskerasbackendtensorflowbackendpy in callself inputs arrayvalsappend npasarrayvalue dtypetfasdtypetensordtypeasnumpydtype if selffeeddict for key in sortedselffeeddictkeys AttributeError int object has no attribute dtype If we could reload the MNIST model trained in the example and draw all the saliency charts for for one digit eg using filter index from zero to ten we can see that its very difficult to observe the contrast using the linear activation Yet the contrast can indeed be seen using softmax activation Moreover we need to manually set a consistent scale to see the contrast It may be important at least for defect detection topics to know how and why an image is classified as one thing but not another by checking the significant contrasts in saliency visualizations from future import printfunction from kerasdatasets import mnist import numpy as np from matplotlib import pyplot as plt from visvisualization import visualizesaliency from visutils import utils from keras import activations from kerasmodels import loadmodel xtrain ytrain xtest ytest mnistloaddata Load once for a model with softmax for last dense layer and load again for one with linear swap MODELPATH modelh model loadmodelMODELPATH rawmodel loadmodelMODELPATH check layers in the model NAMES for index layer in enumeratemodellayers NAMESappendlayername printindex layername print n n n swap softmax layeridx utilsfindlayeridxmodel dense modellayers layeridx activation activationslinear model utilsapplymodificationsmodel prepare a sample image img xtest seed imgcopy seed npexpanddimsseed seed npexpanddimsseed use absolute scale for the MAXPIXELsoftmax MAXPIXELlinear for index in range print printDigit index f ax pltsubplots gradssoftmax visualizesaliencyrawmodel layeridx filterindicesindex seedinputseed backpropmodifierguided printtotal roundgradssoftmaxsum max roundgradssoftmaxmax min roundgradssoftmaxmin gradssoftmax MAXPIXELsoftmax ax settitleSoftmax strindex ax imshowgradssoftmax cmap jet gradslinear visualizesaliencymodel layeridx filterindicesindex seedinputseed backpropmodifierguided printtotal roundgradslinearsum max roundgradslinearmax min roundgradslinearmin gradslinear MAXPIXELlinear ax settitleLinear strindex ax imshowgradslinear cmap jet ax settitleRaw image ax imshowimg 