 Summary Part of Change StripesetDefaultPublishableKey behavior Make this a proxy for STPAPIClientsharedpublishableKey in line with what youd expect this to do change the publishable key the SDK uses unless otherwise specified Deprecate STPPaymentConfigurationpublishableKey stripeAccount For legacy reasons make this a proxy for STPAPIClientsharedpublishableKey stripeAccount if using the singleton Remove apiKey private property APIClient Simplify the APIClient initializers by removing the dependency on PaymentConfiguration PaymentConfiguration is just another property in APIClient instead of the sortasourceoftruth of publishableKey It defaults to PaymentConfiguration sharedConfiguration Motivation If users ignore the deprecation warnings the updated behavior of these deprecated properties should result in no change for most everyone except for Connect users cloning PMs and direct charging their connected accounts Testing Existing tests still pass Summary Make STPPaymentContext STPCustomerContext STPPinManagementService STPPushProvisioningContext STPAddCardViewController Use an explicit APIClient property to make API requests Expose that property publicly Default that property value to STPAPIClientshared Previously they used various APIClient instances leading to inconsistent and unclear configurations of APIClient properties like stripeAccount Motivation Testing Manually test basic integration app and make sure customer things work Summary When calling presentPaymentOptionsViewController and selects the already selected card then no delegate methods are calling Code to reproduce let customerContext STPCustomerContextkeyProvider StripePaymentstripeClient let config STPPaymentConfigurationshared configpublishableKey AppConfigstripeKey configcompanyName ConstantsappName configrequiredBillingAddressFields none configrequiredShippingAddressFields none let paymentContext STPPaymentContextcustomerContext customerContextconfiguration configtheme default paymentContextdelegate self paymentContexthostViewController delegatestripeController paymentContextpaymentAmount paymentContextmodalPresentationStyle fullScreen paymentContextpresentPaymentOptionsViewController Select the already selected card no delegate methods are called iOS version iOS Installation method through pod installation SDK version How to integrate a cardio with stripe so that once card is scanned the stripe should give a call back when card info is provided Summary Support for Chinese Traditional and Chinese Hong Kong Code to reproduce Localizablestrings for the aforementioned languages I actually already translated them myself for my own project Just wondering if the team would support these two languages going forward iOS version nil Installation method nil SDK version nil Other information nil Secure text entry expected In STPPaymentCardTextField were expecting secure text entry for cvv field This is enabled in SDK for Android But in iOS the cvv is in plain text And I could not find any property that toggles it Since cvv raises security concerns please help me find any property as mentioned if any or please add it Thanks Thanks for all the hard work on this I know it s not easy and requires a lot of energy and effort Question Is there any plan to have a Native swift implementation I just noticed the Android SDK is written in pure Kotlin which is amazing and is forward looking Just wondering if there has ever been any talks or discussions potentially for a native swift SDK It s be pretty cool and would be nice to have a swift first approach to a stripe API for iOS Summary We are using STPPAYMENT Context and STPPAYMENTOPTIONS view controller to display card list in our application When user deleteadd the card we are not able to find out which card has been deletedAdded We need an event where we come to know which card has been deletedAdded so that we can removeadd that card locally from our global Card Array in our application Please tell us any particular event or method to get the desired result Note We have already implemented Apple Pay Card Payment flow We just need the above information Team yukistripe dackermanstripe davedstripe Please guide us through iOS version Installation method POD SDK version Other information Anything else you can include thatll make it easier for us to help you Please only file issues here that you believe represent actual bugs or feature requests for the Stripe iOS SDK If youre having general trouble with your Stripe integration please reach out to support using the form at preferred or via email to supportstripecom Otherwise to make it easier to diagnose your issue please fill out the following Summary Codable support for StripePaymentMethod Code to reproduce StripePaymentMethod now conforms to a custom STPAPIResponseDecodable to enable basic parsing from a serialized network response swift decodedObjectfromAPIResponse try JSONSerializationjsonObjectwith data options as AnyHashable Any However this provides no conformance to the actual Decodable protocol introduced in Swift Since some of the developers may rely on generic wrappers around network calls to reduce boilerplate thus achieve cleaner code Decodable conformance would be needed With the current interface a Codable or just Decodable wrapper has to be introduced around StripePaymentMethod as far as I know this is the only solution please correct me if Im wrong iOS version iOS Installation method Manual SDK version Other Please flag as feature request if approved Summary The ability to easily integrate the CardIO library with the stripe SDK is great However as the CardIO library hasnt been maintained for a long time and has now been archived I dont think it makes sense to rely on it any more There are other options available for card scanning the best I have found is cardscan It is actively maintained and is offered for free to small businessthose who do not want to use the commercial fraud prevention offering I think it would be great to support CardScan as well as or instead of CardIO or maybe open up the STPAddCardViewController for easy custom integration