So I am using image FROM centos but when I to try to execute code it broke and to generate panic But when was tried in a VM or UNIX directly it success executing Error reference in two lines below Traceback go panic Netlink error code getting TASKSTATS family id goroutine running githubcomubercommoncpustatlibgetGenlFamily xc a x da rootgosrcgithubcomubercommoncpustatlibnetlinkgo x e githubcomubercommoncpustatlibNLInit x f df rootgosrcgithubcomubercommoncpustatlibnetlinkgo x f mainmain testgo x sudo cpustat s s n should be sudo cpustat i s n based on your description that follows As of now it looks like the main use case for cpustat is interactive As the provided metrics are super useful it would be nice to have a batch mode that allows the background logging of the metrics To achieve that at minimum a timestamp should be logged at the start of each sample Even better the tool could support for a machineparsable CSV output like sadf does Many thanks for the outstanding work much needed No idea how hard this would be but would be cool to be able to run this on nonLinux OSs particularly OSX for me Right now it fails on fatal error linuxtaskstatsh file not found unsurprising as its not Linux Hi Currently cpustat import latest versions of packages master branch in repo If some imported package change public API installation by go get command will be broken I highly recommend to use import proxy for freezing imported version gopkgin or pkgre While the builtin Go parser does work its syntax is somewhat unexpected for many users The current set of friendly command line resolutions are potentially only useful to the production environment where this program was originally developed We should add a command line flag to disable this resolution collect more examples of other runtimes and how to name them The Linux kernel doesnt necessarily update these stats as often we poll for them Hopefully there is a tunable on the Linux side we can use to get more accurate taskstats This could be because we arent giving termui enough data or it could be a bug in our fork of termui On the termui top procs pane a top process is only shown as long as it remains in the top as defined by the sorting scheme If it drops out of the top or exits while its data is still scrolling along it mysteriously disappears All of this data is still in memory but by sharing the perproc summary list we run into this problem 