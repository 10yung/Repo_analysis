macOS High Sierra Any newly opened window appears fully black Screen Shot at Usually comes back to life after mouseover move resize etc Screen Shot at When resizing it flickers between black and working cibuild Couldnt find any lower cibuilds and azure seems to be glitching so I cant check which builds exist I tried stable from NuGet works fine there As the title says The event only fires when there is item selected or the selection changed from Multiple items to a single item When the selection changes from Multiple to Single the RemovedItems correctly holds the previous Selection I would expect the event to be fired even when the selection changes from Single to Multiple MainWindowxamlcs using Avalonia using AvaloniaControls using AvaloniaMarkupXaml using SystemCollectionsGeneric using System namespace SelectionTest public class MainWindow Window public Liststring items get set ListBox listBox public MainWindow InitializeComponent if DEBUG thisAttachDevTools endif listBox thisFindControlListBoxMyListBox listBoxSelectionChanged ListBoxSelectionChanged items new Liststring DataContext this private void ListBoxSelectionChangedobject sender SelectionChangedEventArgs e ConsoleWriteLineAdded eAddedItemsCount RemovedeRemovedItemsCount private void InitializeComponent AvaloniaXamlLoaderLoadthis MainWindowxaml Window xmlns xmlnsx xmlnsd xmlnsmc mcIgnorabled dDesignWidth dDesignHeight xClassSelectionTestMainWindow TitleSelectionTest ListBox xNameMyListBox ItemsBinding items SelectionModeMultiple ListBox Window Ive installed the DataGrid package from nuget And in the xaml is show all options for datagrid Yet DataGrid ItemsBinding SessionList GridRow DataGridColumns DataGridTextColumn HeaderTitle BindingBinding Title DataGridTextColumn HeaderDescription BindingBinding Description DataGridColumns DataGrid Throws an error xaml StackPanel StackPanelStyles Style SelectorStackPanelcollapseAnimation Setter PropertyTransitions Transitions DoubleTransition PropertyMaxHeight Duration Transitions Setter Style StackPanelStyles StackPanel ClassescollapseAnimation Margin xNameBottomPane MaxHeight Spacing contents StackPanel StackPanel cs BottomPaneMaxHeight BottomPaneMaxHeight I should really be animating Height here because I dont know ahead of time how high the StackPanel is but I couldnt animate BoundsHeight so this was the next best thing Setting the height to any value including well below the actual StackPanel height say also results in the same crash Exception has occurred CLRSystemInvalidOperationException An unhandled exception of type SystemInvalidOperationException occurred in AvaloniaLayoutdll Invalid size returned for Measure at AvaloniaLayoutLayoutableMeasureSize availableSize at AvaloniaLayoutLayoutManagerMeasureILayoutable control at AvaloniaLayoutLayoutManagerExecuteMeasurePass at AvaloniaLayoutLayoutManagerExecuteLayoutPass at AvaloniaThreadingJobRunnerRunJobsNullable priority at AvaloniaWin Win PlatformWndProcIntPtr hWnd UInt msg IntPtr wParam IntPtr lParam at AvaloniaWin InteropUnmanagedMethodsDispatchMessageMSG lpmsg at AvaloniaWin Win PlatformRunLoopCancellationToken cancellationToken at AvaloniaThreadingDispatcherMainLoopCancellationToken cancellationToken at AvaloniaControlsApplicationLifetimesClassicDesktopStyleApplicationLifetimeStartString args at AvaloniaClassicDesktopStyleApplicationLifetimeExtensionsStartWithClassicDesktopLifetime T T builder String args ShutdownMode shutdownMode at ApolloCoreProgramMainString args in C Users mat jaczyyy Desktop apollostudio Apollo Core Programcsline What does the pull request do Making binding DataGridTextColumn to nullable numeric types possible What is the current behavior Binding DataGridTextColumn text property to a nullable number fails while nullable string and nonnullable number works Repro samples ControlCatalog Models Personcs Change FirstName property type from string to int samples ControlCatalog Pages DataGridPagexamlcs Update FirstName instantiations by adding integer numbers Run demo and switch to DataGridEditable FirstName cells are empty What is the updatedexpected behavior with this PR FirstName cells are no longer empty Fixed issues Fixes Perhaps something like Grid ColumnDefinitions SharedSizeGroupLabel Just want to bring this up if theres any interest on this What does the pull request do This PR introduces multiple things TextFormatter The TextFormatter will be responsible for doing all the heavy lifting for all the text processing that is needed to build up a text layout It functions as a service to implement your own layouts and it makes it possible to implement text editors etc TextBlock The TextBlock control currently uses a FormattedText implementation that doesnt work well with advanced Unicode scenarios This PR replaces FormattedText with the TextLayout class that is able to deal with all kinds of Unicode texts and produces expected results What is the current behavior If the PR is a fix describe the current incorrect behavior otherwise delete this section What is the updatedexpected behavior with this PR Describe how to test the PR How was the solution implemented if its not obvious Include any information that might be of use to a reviewer here Checklist x Added unit tests if possible x Added XML documentation to any related classes Consider submitting a PR to with user documentation Breaking changes List any breaking changes here When the PR is merged please add an entry to Fixed issues If the pull request fixes issues list them like this Fixes Fixes The PVS studio analysis at uncovered a couple of bugs related to argument ordering with SelectionChangedEventArgs and ItemsRepeaterElementIndexChangedEventArgs In short we swap the order of arguments in the constructors of these classes but some code that has been ported from WPF and WinUI still uses the WPFUWP ordering We should revert the constructors to use the WPFUWP ordering What does the pull request do A minimal implementation of scroll anchoring which is intended to improve scrolling in the ItemsPresenter with items of differing heightswidths This functionality is defined in UWP but this PR doesnt attempt to implement all of UWPs features here in particular No equivalent of UIElementCanBeScrollAnchor my thoughts here are that this functionality is too niche to deserve a property being added to every control No equivalent of ScrollViewerAnchorRequested this can be added later when needed What does the pull request do Give a bit of background on the PR here together with links to with related issues etc This is more of a investigation and not a typical PR When investigating a few UI freezes in my project at work Ive discovered that ListBoxSelectedItems is quite problematic since it spams with single item change events causing a flurry of side effects For example we have one list that contains k elements and when pressing CtrlA collection bound to SelectedItems will raise k CollectionChanged events WPF is struggling with the same issue due to So both in Avalonia and WPF SelectedItems serves as merely a convenience helper for pure MVVM user and shouldnt be used for anything bigger since it lacks any control over grouping of sentreceived events One could buffer said events but it introduces another level of complexity and potential bugs SelectionChanged event on ListBox can be used to achieve better results by writing a bit of code behind code since this one is supposed to batch changes and it does so in WPF This leads us to Avalonia which has SelectionChanged event which is only fired for a few operations like selecting a single item and nothing is raised for multiple selection scenarios or even removing items And I think even after getting these events to raise at all in current state we would also raise too many events I reckon TreeView has the same issue since it has similar implementation to SelectableItemsControl What is the current behavior If the PR is a fix describe the current incorrect behavior otherwise delete this section SelectingItemsControlSelectionChange is not raised when changing selection What is the updatedexpected behavior with this PR Describe how to test the PR SelectingItemsControlSelectionChange is raised for all operations that would change selection and it raises meaningful events batched as a whole operation and not sending an event for each addremove How was the solution implemented if its not obvious Include any information that might be of use to a reviewer here Checklist x Added unit tests if possible Added XML documentation to any related classes Consider submitting a PR to with user 