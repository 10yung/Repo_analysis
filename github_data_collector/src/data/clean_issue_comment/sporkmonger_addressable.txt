Fixing the documentation to resolve and add the missing docs entry for AddressableURIencodecomponent Fix issue Hi there Sporkmonger My Pullrequest deletes the freeze from the gemspec file and instead adds to the top of the file the magic comment frozenstringliteral true This should solve the freeze issue and makes the file a little cleaner I hope that helps Given the following example URL ruby url addressableuri AddressableURIparseurl addressableurinormalizetos normalization changes overlayalignbottom Cleft to overlayalignbottomleft Looks harmless but this change results in getting a response instead of the image itself Looking at the RFC I believe this deviates from the spec which to my understanding suggests subdelims should not be decoded in the normalization process URIs that differ in the replacement of a reserved character with its corresponding percentencoded octet are not equivalent This SO post supports that I came across which touches on the same issue Please correct me if Im reading this wrong This change ships just the necessary files for the gem the license changelog and readme This avoids shipping things like the specs and rake tasks It cuts the size of the gem artifact by and reduces file count on disk significantly which improves performance on windows hosts as they have to AV scan each file written Signedoffby Tim Smith tsmithchefio Template Used AddressableTemplatenewschemehostpathquery When the template above extracts a url with an empty query string the regex used displays immense performance degradation templateextract All the time spent seconds on a modern Macbook Pro is spent attempting to match the uri with the generated expansion regex Bad Regex regexp mix scheme azAZ afAF afAF host azAZ afAF afAF path azAZ afAF afAF azAZ afAF afAF query azAZ afAF afAF azAZ afAF afAF azAZ afAF afAF azAZ afAF afAF Reproduction Ruby require addressable require benchmark puts puts path with expansion schemehostpathquery puts template AddressableTemplatenewschemehostpathquery puts with one part puts Benchmarkmeasure puts templateextract puts with one part and empty query reDDOS puts Benchmarkmeasure puts templateextract puts expand with one part puts Benchmarkmeasure puts templateexpand scheme https host hostcom path abcdefghijklmnopqrstuvwxyz puts expand with one part and empty query puts Benchmarkmeasure puts templateexpand scheme https host hostcom path abcdefghijklmnopqrstuvwxyz query a nil ruby benchmarkrb With one part With one part and empty query Expand with one part Expand with one part and empty query puts n n n n template AddressableTemplatenewschemehostpathquery puts puts path without expansion schemehostpathquery puts puts with one part puts Benchmarkmeasure puts templateextract puts with one part and empty query puts Benchmarkmeasure puts templateextract puts expand with one part puts Benchmarkmeasure puts templateexpand scheme https host hostcom path abcdefghijklmnopqrstuvwxyz puts expand with one part and empty query puts Benchmarkmeasure puts templateexpand scheme https host hostcom path abcdefghijklmnopqrstuvwxyz query a nil ruby benchmarkrb With one part With one part and empty query Expand with one part Expand with one part and empty query When using the variable path the following regexp is generated EXPANSIONREGEXPWITHVARIABLEPATH mix scheme azAZ afAF afAF host azAZ afAF afAF path azAZ afAF afAF azAZ afAF afAF query azAZ afAF afAF azAZ afAF afAF azAZ afAF afAF azAZ afAF afAF When we dont use a variable path the following regexp is generated EXPANSIONREGEXPWITHOUTVARIABLEPATH mix scheme azAZ afAF afAF host azAZ afAF afAF path azAZ afAF afAF query azAZ afAF afAF azAZ afAF afAF azAZ afAF afAF azAZ afAF afAF puts n n n n EXPANSIONREGEXPWITHVARIABLEPATH mix scheme azAZ afAF afAF host azAZ afAF afAF path azAZ afAF afAF azAZ afAF afAF query azAZ afAF afAF azAZ afAF afAF azAZ afAF afAF azAZ afAF afAF EXPANSIONREGEXPWITHOUTVARIABLEPATH mix scheme azAZ afAF afAF host azAZ afAF afAF path azAZ afAF afAF query azAZ afAF afAF azAZ afAF afAF azAZ afAF afAF azAZ afAF afAF puts bad regexp puts Benchmarkmeasure puts puts n puts better regexp puts Benchmarkmeasure puts bad regexp better regexp Thank you joshkrueger for helping isolate the issue Hello Here is an example AddressableURIparse port user password host Traceback most recent call last from irb AddressableURIInvalidURIError Hostname not supplied It raises only with omit method When try to parse URL and use an object everything works great u AddressableURIparse upath Since rspec will raise if you pass a value trying to use the block expectation See Note the security section basically says this should only really be used for linklocal addresses Currently heuristicparseexamplecom returns At some point I think itd be better to return but we may not be there just yet