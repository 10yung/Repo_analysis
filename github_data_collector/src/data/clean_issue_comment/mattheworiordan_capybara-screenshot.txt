When Im debugging test failure I usually open the screenshot file in a browser eg Jepretan Layar pukul And then I made some changes to that specific error If another error happens I have to open the screenshot directory order it by created time and select the topmost screenshot to see what is happening It would be tedious when I have a complex error small changes may result in another error And I have to redo the step above Open dir order file click the topmost file Is there any possibility to keep the last error naming with screenshotlasterrorhtml so that when I reload the browser and then I get the latest error information I do not really care if the screenshot has to be duplicated in order to achieve it Im using selenium ruby cucumber the screenshot happens on the failure HTML screenshot runsscreenshot html Image screenshot runsscreenshot png its links but its blank gem capybarascreenshot group test require capybarascreenshotcucumber the screenshot is blank I am running Cucumber ruby with Capybara and the capybarascreenshot gem Everything was working fine until I added a driverclose call to the After scenario hook Now my screenshots are blank I know that it is because it is closing the driver FIRST and then taking the screenshot What I dont know is how to fix that how can I get cucumber to do the driver closing last but still after each scenario With Rails Im struggling getting goodlooking with css styles HTML screenshots when running my specs without JS Anyone solve this problem I run a bunch of specs without JS on because it they run faster but the default setting for webpacker in a test environment is to inject the CSS into the HTML The injection does not happen if youre not running with JS You can change webpackeryml to extractcss true and that allows you to generate the css file before running the suite but I cant figure out why my development environment does not want to serve anything from publicpackstest when I load the html screenshot in a browser Cannot GET packstestcssapplicationd css Anyone else have this use case Im not sure what the best way is to add support for system specs but this is working for me in a Rails project Maybe it can help someone else to incorporate in a cleaner way From libcapybarascreenshotrspechtmllinkreporterrb url URIescapefilepath is url configurable via a yml file Current output is filevarlibjenkinsagentworkspacetmptmpPelicanCI screenshot html Preferred capybaraassethostcapybarasavepath eg I had to patch CapybaraSeleniumDriverwaitforemptypage for that I like to make custom screenshots for demonstration purpose so this PR updates screenshotandsavepage and screenshotandopenimage with two additional parameters prefix and html This is useful to differentiate screenshots from failures See This is probably not thread safe ie running multiple parallel sessions fixes unfortunately couldnt figure out how to properly test this base capybara driver is not capable of switching windows