Currently we kubebench as part of a Jenkins Job Since the kubebench pod does not return an exit code the job passes regardless of the results For CICD it would be helpful to have an option for an exit code similar to Trivy Bitwise AND between two value in order to compare file permissions solved issue According to the new format changed all the yaml configuration files to comply Some checks in the kubebench might currently not be feasible for a user and the user wants to ignore them Currently the user can only specify all tests except for those via check It would be good if kubebench could provide a CLI argument that allows to softfail on specified tests so they still would run but would not alter the return code and fail a user could run kubebench expectfail and still the return code would be if all other checks pass Fixes Additionally the format of all file permissions checks was streamlined Some of the config files had the order of the keys different now the order is the same for all configs Adds Retry Logic Until Timeout Fixes Integration tests Fixes Adds generateDiff function to make it easier to see the difference between expected output and result Here is a sample output console FAIL TestRunWithKind s FAIL TestRunWithKindkubebench s integrationtestgo expected results Expected Result line PASSa Ensure that the serviceaccountlookup argument is set to true Scored PASS Ensure that the serviceaccountlookup argument is set to true Scored line bFAIL Ensure that the clientcafile argument is set as appropriate Scored FAIL Ensure that the clientcafile argument is set as appropriate Scored line checks INFO checks INFO NO MORE DATA PASS TestRunWithKindkubebenchnode s PASS TestRunWithKindkubebenchmaster s FAIL FAIL githubcomaquasecuritykubebenchintegration s FAIL make integrationtests Error In the event of failure the output of TestRunWithKind is a giant string of the expected and actual output both of which are hundreds of lines long To figure out the difference I have ended up copying these strings into files replacing the n with newlines and doing a file diff Would be nice if the test output showed this diff automatically Hi Team Is it possible to have a biweekly release bump the PATCH number of vMAJORMINORPATCH for downstream projects to pick up the latest fixes quickly For running my own experiments I have added config paths for Canonicals MicroK s What do you think Would it make sense to merge these to upstream Running the integrations tests I see output like this using ticker and an timer thePod kubebencht bx statusRunning using ticker and an timer thePod kubebencht bx statusRunning using ticker and an timer thePod kubebencht bx statusFailed thePod kubebencht bx Failed retrying Found pods pod kubebenchwfr z Pending using ticker and an timer thePod kubebenchwfr z statusSucceeded RUN TestRunWithKindjobnode I think these pods are running the kubebench job but why does the first of them fail And why doesnt this matter for the integration test to succeed 