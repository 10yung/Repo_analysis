 Pull Request PR description This PR adds the AD TombstoneLifetime property to the ADForestProperties resource It also makes the following changes to the ADForestProperties resource Allows clearing of the ServicePrincipalNameSuffix and UserPrincipalNameSuffix properties Adds Integration tests Refactors the unit tests This Pull Request PR fixes the following issues Fixes Fixes Fixes Task list To aid community reviewers in reviewing and merging your PR please take the time to run through the below checklist and make sure your PR has everything updated as required Change to x for each task in the task list that applies to your PR For those task that dont apply to you PR leave those as is x Added an entry to the change log under the Unreleased section of the file CHANGELOGmd Entry should say what was changed and how that affects users if applicable and reference the issue being resolved if applicable x Resource documentation addedupdated in READMEmd x Resource parameter descriptions addedupdated in READMEmd schemamof and commentbased help x Commentbased help addedupdated x Localization strings addedupdated in all localization files as appropriate x Examples appropriately addedupdated x Unit tests addedupdated See DSC Community Testing Guidelines x Integration tests addedupdated where possible See DSC Community Testing Guidelines x Newchanged code adheres to DSC Community Style Guidelines Reviewablestart This change is img src height alignabsmiddle altReviewable Reviewableend Details of the scenario you tried and the problem that is occurring The ADForestProperties resource does not currently allow the ServicePrincipalNameSuffix and UserPrincipalNameSuffix to be cleared Verbose logs showing the problem powershell PS GetADForestUpnSuffixes fabrikamcom PS InvokeDscResource Name ADForestProperties ModuleName ActiveDirectoryDsc Method Set Property ForestNamecontosocomUserPrincipalNameSuffix Verbose VERBOSE Perform operation Invoke CimMethod with following parameters methodName ResourcesetclassName MSFTDSCLocalConfigurationManagernamespaceName rootMicrosoftWindowsDesiredStateConfiguration VERBOSE An LCM method call arrived from computer DC with user sid S VERBOSE DC LCM Start Set ADForestProperties DirectResourceAccess VERBOSE DC LCM End Set ADForestProperties DirectResourceAccess in seconds VERBOSE DC LCM End Set in seconds VERBOSE Operation Invoke CimMethod complete PS GetADForestUpnSuffixes fabrikamcom Suggested solution to the issue Modify the code to check for empty ServicePrincipalNameSuffix and UserPrincipalNameSuffix parameters and set the relevant SetAdForest parameter to null The operating system the target node is running OsName Microsoft Windows Server Datacenter OsOperatingSystemSKU DatacenterServerEdition OsArchitecture bit WindowsVersion WindowsBuildLabEx amd frers release OsLanguage enUS OsMuiLanguages enUS Version and build of PowerShell the target node is running Name Value PSVersion PSEdition Desktop PSCompatibleVersions BuildVersion CLRVersion WSManStackVersion PSRemotingProtocolVersion SerializationVersion Version of the DSC module that was used Details of the scenario you tried and the problem that is occurring I am trying to apply permissions to an OU and getting get an error when applying the configuration with StartDscConfiguration Verbose logs showing the problem VERBOSE Perform operation Invoke CimMethod with following parameters methodName SendConfigurationApplyclassName MSFTDSCLocalConfigurationManagernamespaceName rootMicrosoftWindowsDesiredStateConfiguration VERBOSE An LCM method call arrived from computer AD with user sid S VERBOSE AD LCM Start Set VERBOSE AD LCM Start Resource ADUser CRMInstallAccountUser VERBOSE AD LCM Start Test ADUser CRMInstallAccountUser VERBOSE AD ADUser CRMInstallAccountUser Retrieving Active Directory user crmadmin crmadmincontosolocal ADU VERBOSE AD ADUser CRMInstallAccountUser Active Directory user crmadmin crmadmincontosolocal was NOT present ADU VERBOSE AD ADUser CRMInstallAccountUser Creating connection to Active Directory domain contosolocal ADU VERBOSE AD ADUser CRMInstallAccountUser Missing the type SystemDirectoryServicesAccountManagementPrincipalContext from the PowerShell session ADCOMMON VERBOSE AD ADUser CRMInstallAccountUser Adding the assembly SystemDirectoryServicesAccountManagement into the PowerShell session ADCOMMON VERBOSE AD ADUser CRMInstallAccountUser Checking Active Directory user crmadmin password ADU VERBOSE AD ADUser CRMInstallAccountUser User Password property is NOT in the desired state Expected Password actual Password ADU VERBOSE AD ADUser CRMInstallAccountUser User PasswordNeverExpires property is NOT in the desired state Expected True actual ADU VERBOSE AD ADUser CRMInstallAccountUser User Ensure property is NOT in the desired state Expected Present actual Absent ADU VERBOSE AD ADUser CRMInstallAccountUser User Enabled property is NOT in the desired state Expected True actual ADU VERBOSE AD LCM End Test ADUser CRMInstallAccountUser in seconds VERBOSE AD LCM Start Set ADUser CRMInstallAccountUser VERBOSE AD ADUser CRMInstallAccountUser Retrieving Active Directory user crmadmin crmadmincontosolocal ADU VERBOSE AD ADUser CRMInstallAccountUser Active Directory user crmadmin crmadmincontosolocal was NOT present ADU VERBOSE AD ADUser CRMInstallAccountUser Adding Active Directory user crmadmin ADU VERBOSE AD ADUser CRMInstallAccountUser Retrieving Active Directory user crmadmin crmadmincontosolocal ADU VERBOSE AD ADUser CRMInstallAccountUser Active Directory user crmadmin crmadmincontosolocal is present ADU VERBOSE AD ADUser CRMInstallAccountUser Creating connection to Active Directory domain contosolocal ADU VERBOSE AD ADUser CRMInstallAccountUser The type SystemDirectoryServicesAccountManagementPrincipalContext is already loaded into the PowerShell session ADCOMMON VERBOSE AD ADUser CRMInstallAccountUser Checking Active Directory user crmadmin password ADU VERBOSE AD ADUser CRMInstallAccountUser Setting Active Directory user password ADU VERBOSE AD ADUser CRMInstallAccountUser Updating user property PasswordNeverExpires withto True ADU VERBOSE AD ADUser CRMInstallAccountUser Updating user property Enabled withto True ADU VERBOSE AD ADUser CRMInstallAccountUser Updating Active Directory user crmadmin ADU VERBOSE AD LCM End Set ADUser CRMInstallAccountUser in seconds VERBOSE AD LCM End Resource ADUser CRMInstallAccountUser VERBOSE AD LCM Start Resource ADOrganizationalUnit CRMGroupsOU VERBOSE AD LCM Start Test ADOrganizationalUnit CRMGroupsOU VERBOSE AD ADOrganizationalUnit CRMGroupsOU Retrieving OU CRM groups from path DCcontosoDClocal ADOU VERBOSE AD ADOrganizationalUnit CRMGroupsOU OU CRM groups does not exist when it should exist ADOU VERBOSE AD LCM End Test ADOrganizationalUnit CRMGroupsOU in seconds VERBOSE AD LCM Start Set ADOrganizationalUnit CRMGroupsOU VERBOSE AD ADOrganizationalUnit CRMGroupsOU Retrieving OU CRM groups from path DCcontosoDClocal ADOU VERBOSE AD ADOrganizationalUnit CRMGroupsOU Creating OU CRM groups ADOU VERBOSE AD LCM End Set ADOrganizationalUnit CRMGroupsOU in seconds VERBOSE AD LCM End Resource ADOrganizationalUnit CRMGroupsOU VERBOSE AD LCM Start Resource ADGroup CRMPrivUserGroup VERBOSE AD LCM Start Test ADGroup CRMPrivUserGroup VERBOSE AD ADGroup CRMPrivUserGroup AD Group CRM PrivUserGroup was not found ADG VERBOSE AD ADGroup CRMPrivUserGroup AD Group GroupScope is not correct Expected Universal actual ADG VERBOSE AD ADGroup CRMPrivUserGroup AD Group Path is not correct Expected OUCRM groupsDCcontosoDClocal actual ADG VERBOSE AD ADGroup CRMPrivUserGroup Group membership is NOT in the desired state ADG VERBOSE AD ADGroup CRMPrivUserGroup AD Group Ensure is not correct Expected Present actual Absent ADG VERBOSE AD LCM End Test ADGroup CRMPrivUserGroup in seconds VERBOSE AD LCM Start Set ADGroup CRMPrivUserGroup VERBOSE AD ADGroup CRMPrivUserGroup AD Group CRM PrivUserGroup was not found ADG VERBOSE AD ADGroup CRMPrivUserGroup Creating AD Group CRM PrivUserGroup ADG VERBOSE AD ADGroup CRMPrivUserGroup Adding members to AD group CRM PrivUserGroup ADG VERBOSE AD LCM End Set ADGroup CRMPrivUserGroup in seconds VERBOSE AD LCM End Resource ADGroup CRMPrivUserGroup VERBOSE AD LCM Start Resource ADObjectPermissionEntry OUPermissions VERBOSE AD LCM Start Test ADObjectPermissionEntry OUPermissions VERBOSE AD ADObjectPermissionEntry OUPermissions Creating new AD PSDrive ADCOMMON VERBOSE AD ADObjectPermissionEntry OUPermissions Object permission entry not found on object OUCRM groupsDCcontosoDClocal OPE VERBOSE AD ADObjectPermissionEntry OUPermissions Object permission entry on object OUCRM groupsDCcontosoDClocal is not in the desired state OPE VERBOSE AD LCM End Test ADObjectPermissionEntry OUPermissions in seconds VERBOSE AD LCM End Set VERBOSE Operation Invoke CimMethod complete VERBOSE Time taken for configuration job to complete is seconds Testing DSC VERBOSE Perform operation Invoke CimMethod with following parameters methodName TestConfigurationclassName MSFTDSCLocalConfigurationManagernamespaceName rootMicrosoftWindowsDesiredStateConfiguration VERBOSE An LCM method call arrived from computer AD with user sid S VERBOSE AD LCM Start Compare VERBOSE AD LCM Start Resource ADUser CRMInstallAccountUser VERBOSE AD LCM Start Test ADUser CRMInstallAccountUser VERBOSE AD ADUser CRMInstallAccountUser Retrieving Active Directory user crmadmin crmadmincontosolocal ADU VERBOSE AD ADUser CRMInstallAccountUser Active Directory user crmadmin crmadmincontosolocal is present ADU VERBOSE AD ADUser CRMInstallAccountUser Creating connection to Active Directory domain contosolocal ADU VERBOSE AD ADUser CRMInstallAccountUser The type SystemDirectoryServicesAccountManagementPrincipalContext is already loaded into the PowerShell session ADCOMMON VERBOSE AD ADUser CRMInstallAccountUser Checking Active Directory user crmadmin password ADU VERBOSE AD LCM End Test ADUser CRMInstallAccountUser True in seconds VERBOSE AD LCM End Resource ADUser CRMInstallAccountUser VERBOSE AD LCM Start Resource ADOrganizationalUnit CRMGroupsOU VERBOSE AD LCM Start Test ADOrganizationalUnit CRMGroupsOU VERBOSE AD ADOrganizationalUnit CRMGroupsOU Retrieving OU CRM groups from path DCcontosoDClocal ADOU VERBOSE AD ADOrganizationalUnit CRMGroupsOU OU CRM groups exists and is in the desired state ADOU VERBOSE AD LCM End Test ADOrganizationalUnit CRMGroupsOU True in seconds VERBOSE AD LCM End Resource ADOrganizationalUnit CRMGroupsOU VERBOSE AD LCM Start Resource ADGroup CRMPrivUserGroup VERBOSE AD LCM Start Test ADGroup CRMPrivUserGroup VERBOSE AD ADGroup CRMPrivUserGroup Retrieving group membership based on SamAccountName property ADG VERBOSE AD LCM End Test ADGroup CRMPrivUserGroup True in seconds VERBOSE AD LCM End Resource ADGroup CRMPrivUserGroup VERBOSE AD LCM Start Resource ADObjectPermissionEntry OUPermissions VERBOSE AD LCM Start Test ADObjectPermissionEntry OUPermissions VERBOSE AD ADObjectPermissionEntry OUPermissions Object permission entry not found on object OUCRM groupsDCcontosoDClocal OPE VERBOSE AD ADObjectPermissionEntry OUPermissions Object permission entry on object OUCRM groupsDCcontosoDClocal is not in the desired state OPE VERBOSE AD LCM End Test ADObjectPermissionEntry OUPermissions False in seconds VERBOSE AD LCM FAILEDCompare Completed processing compare operation The operation returned False VERBOSE Operation Invoke CimMethod complete VERBOSE Time taken for configuration job to complete is seconds Test failed Stderr from the command Cannot find drive A drive with the name AD does not exist CategoryInfo ObjectNotFound AD CimException FullyQualifiedErrorId DriveNotFoundMicrosoftPowerShellCommandsGetAclCommand PSComputerName AD The PowerShell DSC resource ADObjectPermissionEntry OUPermissions with SourceInfo C tmp vagrantshellps ADObjectPermissionEntry threw one or more nonterminating errors while running the TestTargetResource functionality These errors are logged to the ETW channel called MicrosoftWindowsDSCOperational Refer to this channel for more details CategoryInfo InvalidOperation CimException FullyQualifiedErrorId NonTerminatingErrorFromProvider PSComputerName AD The SendConfigurationApply function did not succeed CategoryInfo NotSpecified rootMicrosoftgurationManagerString CimException FullyQualifiedErrorId MI RESULT PSComputerName AD Cannot find drive A drive with the name AD does not exist CategoryInfo ObjectNotFound AD CimException FullyQualifiedErrorId DriveNotFoundMicrosoftPowerShellCommandsGetAclCommand PSComputerName AD The PowerShell DSC resource ADObjectPermissionEntry OUPermissions with SourceInfo C tmp vagrantshellps ADObjectPermissionEntry threw one or more nonterminating errors while running the TestTargetResource functionality These errors are logged to the ETW channel called MicrosoftWindowsDSCOperational Refer to this channel for more details CategoryInfo InvalidOperation rootMicrosoftgurationManagerString CimException FullyQualifiedErrorId NonTerminatingErrorFromProvider PSComputerName AD Suggested solution to the issue The DSC configuration that is used to reproduce the issue as detailed as possible PowerShell ImportDscResource ModuleName PSDesiredStateConfiguration ImportDscResource ModuleName ActiveDirectoryDsc ModuleVersion domainName contosolocal Node AllNodesNodeName ADUser CRMInstallAccountUser DomainName domainName UserName CRMInstallAccountCredentialGetNetworkCredentialUserName Password CRMInstallAccountCredential PasswordNeverExpires true ADOrganizationalUnit CRMGroupsOU Name CRM groups Path DCcontosoDClocal ADGroup CRMPrivUserGroup GroupName CRM PrivUserGroup MembersToInclude CRMInstallAccountCredentialGetNetworkCredentialUserName GroupScope Universal Path OUCRM groupsDCcontosoDClocal DependsOn ADOrganizationalUnit CRMGroupsOU ADUser CRMInstallAccountUser ADObjectPermissionEntry OUPermissions Ensure Present Path OUCRM groupsDCcontosoDClocal IdentityReference contoso CRM PrivUserGroup ActiveDirectoryRights GenericAll AccessControlType Allow ObjectType ActiveDirectorySecurityInheritance All InheritedObjectType DependsOn ADGroup CRMPrivUserGroup The operating system the target node is running OsName Microsoft Windows Server Standard Evaluation OsOperatingSystemSKU OsArchitecture bit WindowsBuildLabEx amd frers release OsLanguage enUS OsMuiLanguages enUS Version and build of PowerShell the target node is running Name Value PSVersion PSEdition Desktop PSCompatibleVersions BuildVersion CLRVersion WSManStackVersion PSRemotingProtocolVersion SerializationVersion Version of the DSC module that was used Pull Request PR description Adds support for msDSManagedServiceAccount and msDSGroupManagedServiceAccount objects to the ADGroup resource by patching the AddADCommonGroupMember function of ActiveDirectoryDscCommon This Pull Request PR fixes the following issues Fixes Task list To aid community reviewers in reviewing and merging your PR please take the time to run through the below checklist and make sure your PR has everything updated as required Change to x for each task in the task list that applies to your PR For those task that dont apply to you PR leave those as is Added an entry under the Unreleased section in the CHANGELOGmd Entry should say what was changed and how that affects users if applicable Resource documentation addedupdated in resource directory READMEmd Resource parameter descriptions addedupdated in schemamof and commentbased help Commentbased help addedupdated Conceptual help topic addedupdated cultureFolder aboutResourceNamehelptxt Localization strings addedupdated in all localization files as appropriate Examples appropriately addedupdated Unit tests addedupdated See DSC Resource Testing Guidelines Integration tests addedupdated where possible See DSC Resource Testing Guidelines Newchanged code adheres to DSC Resource Style Guidelines and Best Practices Reviewablestart This change is img src height alignabsmiddle altReviewable Reviewableend Your feedback and support is greatly appreciated thanks for contributing ISSUE TITLE Please prefix the issue title with the resource name eg ResourceName Short description of my issue ISSUE DESCRIPTION this template Please provide information regarding your issue under each header below Write NA under any headers that do not apply to your issue or if the information is not available NOTE Sensitive information should be obfuscated PLEASE KEEP THE HEADERS You may remove this comment block and the other comment blocks but please keep the headers Details of the scenario you tried and the problem that is occurring If you are having an issue with the old xActiveDirectory please verify your scenario with the latest resources in the new ActiveDirectoryDsc module Were using crossforest service accounts and we want to represent the configuration in PowerShell DSC However it looks like msDSGroupManagedServiceAccount and msDSManagedServiceAccount are not supported in the AddADCommonGroupMember function in the ActiveDirectoryDscCommon module Verbose logs showing the problem VERBOSE Perform operation Invoke CimMethod with following parameters methodName SendConfigurationApplyclassName MSFTDSCLocalConfigurationManagernamespaceName rootMicrosoftWindowsDesiredStateConfiguration VERBOSE An LCM method call arrived from computer SHASTALOCALDC with user sid S VERBOSE SHASTALOCALDC LCM Start Set VERBOSE SHASTALOCALDC LCM Start Resource ADGroup dl VERBOSE SHASTALOCALDC LCM Start Test ADGroup dl VERBOSE SHASTALOCALDC ADGroup dl Retrieving group membership based on DistinguishedName property ADG VERBOSE SHASTALOCALDC ADGroup dl Group membership is NOT in the desired state ADG VERBOSE SHASTALOCALDC LCM End Test ADGroup dl in seconds VERBOSE SHASTALOCALDC LCM Start Set ADGroup dl VERBOSE SHASTALOCALDC ADGroup dl Group membership objects are in different AD Domains ADG VERBOSE SHASTALOCALDC ADGroup dl Retrieving group membership based on DistinguishedName property ADG VERBOSE SHASTALOCALDC ADGroup dl Updating AD Group MallardPermissions ADG VERBOSE SHASTALOCALDC ADGroup dl Retrieving group membership based on DistinguishedName property ADG VERBOSE SHASTALOCALDC ADGroup dl Adding members to AD group MallardPermissions ADG Cannot validate argument on parameter Members The argument is null or empty Provide an argument that is not null or empty and then try the command again CategoryInfo InvalidData CimException FullyQualifiedErrorId ParameterArgumentValidationErrorMicrosoftActiveDirectoryManagementCommandsAddADGroupMember PSComputerName localhost VERBOSE SHASTALOCALDC LCM End Set ADGroup dl in seconds The PowerShell DSC resource ADGroup dl with SourceInfo C Users Administrator desktop Testps ADGroup threw one or more nonterminating errors while running the SetTargetResource functionality These errors are logged to the ETW channel called MicrosoftWindowsDSCOperational Refer to this channel for more details CategoryInfo InvalidOperation CimException FullyQualifiedErrorId NonTerminatingErrorFromProvider PSComputerName localhost VERBOSE SHASTALOCALDC LCM End Set The SendConfigurationApply function did not succeed CategoryInfo NotSpecified rootMicrosoftgurationManagerString CimException FullyQualifiedErrorId MI RESULT PSComputerName localhost VERBOSE Operation Invoke CimMethod complete VERBOSE Time taken for configuration job to complete is seconds Suggested solution to the issue Add msDSGroupManagedServiceAccount and msDSManagedServiceAccount object types to the AddADCommonGroupMember function in ActiveDirectoryDscCommon powershell if memberObjectClass eq computer memberObject GetADComputer commonParameters elseif memberObjectClass eq group memberObject GetADGroup commonParameters elseif memberObjectClass eq user memberObject GetADUser commonParameters elseif memberObjectClass eq msDSManagedServiceAccount memberObject GetADServiceAccount commonParameters elseif memberObjectClass eq msDSGroupManagedServiceAccount memberObject GetADServiceAccount commonParameters The DSC configuration that is used to reproduce the issue as detailed as possible powershell Configuration ADGroupNewGroupMultiDomainMembersConfig ImportDscResource ModuleName ActiveDirectoryDsc node localhost ADGroup dl GroupName MallardPermissions GroupScope DomainLocal Path OUGroupsOULocalDomainDCshastaDClocal MembershipAttribute DistinguishedName Members CNsrvmallardCNManaged Service AccountsDCshastaDCcloud The operating system the target node is running Please provide as much as possible about the target node for example edition version build and language On OS with WMF the following command can help get this information GetComputerInfo Property OsName OsOperatingSystemSKU OSArchitecture WindowsVersion WindowsBuildLabEx OsLanguage OsMuiLanguages OsName Microsoft Windows Server Datacenter OsOperatingSystemSKU DatacenterServerEdition OsArchitecture bit WindowsVersion WindowsBuildLabEx amd frers release OsLanguage enUS OsMuiLanguages enUS Version and build of PowerShell the target node is running To help with this information please run this command PSVersionTable Name Value PSVersion PSEdition Desktop PSCompatibleVersions BuildVersion CLRVersion WSManStackVersion PSRemotingProtocolVersion SerializationVersion Version of the DSC module that was used dev if using current dev branch Your feedback and support is greatly appreciated thanks for contributing ISSUE TITLE Please prefix the issue title with the resource name eg ResourceName Short description of my issue ISSUE DESCRIPTION this template Please provide information regarding your issue under each header below Write NA under any headers that do not apply to your issue or if the information is not available NOTE Sensitive information should be obfuscated PLEASE KEEP THE HEADERS You may remove this comment block and the other comment blocks but please keep the headers WaitADDomain fails if DC not ready If you are having an issue with the old xActiveDirectory please verify your scenario with the latest resources in the new ActiveDirectoryDsc module Verbose logs showing the problem EC AMAZ J R LCM Start Resource WaitForADDomain ForestWait EC AMAZ J R LCM Start Test WaitForADDomain ForestWait EC AMAZ J R WaitForADDomain ForestWait Determining the current state of the Active Directory domain tftflocal WFADD EC AMAZ J R WaitForADDomain ForestWait Searching for a domain controller in the domain tftflocal WFADD EC AMAZ J R WaitForADDomain ForestWait Impersonating the credentials tftf xxxxxxxxx when looking for a domain controller WFADD EC AMAZ J R WaitForADDomain ForestWait Searching for a domain controller in the domain tftflocal ADCOMMON EC AMAZ J R WaitForADDomain ForestWait The type SystemDirectoryServicesActiveDirectoryDirectoryContext is already loaded into the PowerShell session ADCOMMON EC AMAZ J R WaitForADDomain ForestWait Get a new Active Directory context of the type Domain ADCOMMON EC AMAZ J R WaitForADDomain ForestWait The Active Directory context will target tftflocal ADCOMMON EC AMAZ J R WaitForADDomain ForestWait The Active Directory context will be accessed using the tftf xxxxxxxxx credentials ADCOMMON EC AMAZ J R LCM End Test WaitForADDomain ForestWait in seconds PowerShell DSC resource MSFTWaitForADDomain failed to execute TestTargetResource functionality with error message Exception calling FindOne with arguments Domain controller not found in the domain tftflocal CategoryInfo InvalidOperation CimException FullyQualifiedErrorId ProviderOperationExecutionFailure PSComputerName localhost Suggested solution to the issue Wait until the DC is ready The DSC configuration that is used to reproduce the issue as detailed as possible I create new server and wait for DC to become ready to join the domain If the DC is ready server joins the domain without problem but if WaitForADDomain runs when DC is being configured the resource fails During the next consistency check the server joins the domain as the DC is ready by that time also proving the configuration is hopefully correct insert configuration here WaitForADDomain ForestWait DomainName InternalDomain WaitTimeout Credential defaultcreds DependsOn DNSServerAddress DNS WaitForValidCredentials true The operating system the target node is running Please provide as much as possible about the target node for example edition version build and language On OS with WMF the following command can help get this information GetComputerInfo Property OsName OsOperatingSystemSKU OSArchitecture WindowsVersion WindowsBuildLabEx OsLanguage OsMuiLanguages OsName Microsoft Windows Server Datacenter OsOperatingSystemSKU DatacenterServerEdition OsArchitecture bit WindowsVersion WindowsBuildLabEx amd frers release OsLanguage enUS OsMuiLanguages enUS Version and build of PowerShell the target node is running To help with this information please run this command PSVersionTable Name Value PSVersion PSEdition Desktop PSCompatibleVersions BuildVersion CLRVersion WSManStackVersion PSRemotingProtocolVersion SerializationVersion Version of the DSC module that was used dev if using current dev branch Your feedback and support is greatly appreciated thanks for contributing ISSUE TITLE Please prefix the issue title with the resource name eg ResourceName Short description of my issue ISSUE DESCRIPTION this template Please provide information regarding your issue under each header below Write NA under any headers that do not apply to your issue or if the information is not available NOTE Sensitive information should be obfuscated PLEASE KEEP THE HEADERS You may remove this comment block and the other comment blocks but please keep the headers Details of the scenario you tried and the problem that is occurring If you are having an issue with the old xActiveDirectory please verify your scenario with the latest resources in the new ActiveDirectoryDsc module When using EnsureAbsent on ADComputer if the computer object is not a leaf object the delete fails Verbose logs showing the problem Im running this in Ansible so the error message looks different but should be the same message changed false domaincontroller moduleversion msg The directory service can perform the requested operation only on a leaf object The PowerShell DSC resource ADComputer DirectResourceAccess with SourceInfo threw one or more nonterminating errors while running the SetTargetResource functionality These errors are logged to the ETW channel called MicrosoftWindowsDSCOperational Refer to this channel for more details rebootrequired false Suggested solution to the issue Add Recurse to the RemoveADComputer command in MSFTADComputerpsm Does this have any undesired effect powershell elseif Ensure eq Absent and getTargetResourceResultEnsure eq Present User exists and needs removing WriteVerbose Message scriptlocalizedDataRemovingComputerAccount f ComputerName removeADComputerParameters GetADCommonParameters PSBoundParameters removeADComputerParameters Confirm false RemoveADComputer removeADComputerParameters Recurse OutNull The DSC configuration that is used to reproduce the issue as detailed as possible powershell Configuration ADComputerAddComputerAccountConfig ImportDscResource ModuleName ActiveDirectoryDsc node localhost ADComputer CreateEnabledSQL ComputerName DEVK S WW Ensure Absent Ansible yaml name Remove Active Directory computer object windsc resourcename ADComputer moduleversion ComputerName DEVK S WW DomainController domaincontroller Ensure Absent loop dc labcompanycom dc corpcompanycom loopcontrol loopvar domaincontroller The operating system the target node is running Please provide as much as possible about the target node for example edition version build and language On OS with WMF the following command can help get this information GetComputerInfo Property OsName OsOperatingSystemSKU OSArchitecture WindowsVersion WindowsBuildLabEx OsLanguage OsMuiLanguages OsName Microsoft Windows Server Standard OsOperatingSystemSKU StandardServerEdition OsArchitecture bit WindowsVersion WindowsBuildLabEx amd frers release OsLanguage enUS OsMuiLanguages enUS Version and build of PowerShell the target node is running To help with this information please run this command PSVersionTable Name Value PSVersion PSEdition Desktop PSCompatibleVersions BuildVersion CLRVersion WSManStackVersion PSRemotingProtocolVersion SerializationVersion Version of the DSC module that was used dev if using current dev branch There are some duplicated code that could be removed to simplify the resource Instead of calling GetADObject here we could instead call GetTargetResource Instead of having this code We could potentially move this code to the top of the function and make sure it also handles any duplicate accounts when Ensure eq Present Details of the scenario you tried and the problem that is occurring If the current value is not set empty or null the verbose message does not show a current value when testing the configuration Verbose logs showing the problem VERBOSE DC LCM Start Set VERBOSE DC DSCEngine Importing the module C source ActiveDirectoryDsc DscResources MSFTADReplicationSiteLink MSFTADReplicationSiteLinkpsm in force mode VERBOSE DC LCM Start Resource ADReplicationSiteLink IntegrationTest VERBOSE DC LCM Start Test ADReplicationSiteLink IntegrationTest VERBOSE DC ADReplicationSiteLink IntegrationTest Importing the module MSFTADReplicationSiteLink in force mode VERBOSE DC ADReplicationSiteLink IntegrationTest Site Integration not found in SitesIncluded Current SitesIncluded Integration Integration ADRSL VERBOSE DC ADReplicationSiteLink IntegrationTest Cost is not in desired state Current Desired ADRSL VERBOSE DC ADReplicationSiteLink IntegrationTest Description is not in desired state Current Desired Integration Test Site Link ADRSL VERBOSE DC ADReplicationSiteLink IntegrationTest ReplicationFrequencyInMinutes is not in desired state Current Desired ADRSL VERBOSE DC LCM End Test ADReplicationSiteLink IntegrationTest in seconds VERBOSE DC LCM Start Set ADReplicationSiteLink IntegrationTest VERBOSE DC ADReplicationSiteLink IntegrationTest Importing the module MSFTADReplicationSiteLink in force mode VERBOSE DC ADReplicationSiteLink IntegrationTest Adding sites Integration Integration to site link Integration Integration ADRSL VERBOSE DC ADReplicationSiteLink IntegrationTest Performing the operation Set on target CNIntegration Integration CNIPCNInterSite TransportsCNSitesCNConfigurationDCcontosoDCcom VERBOSE DC LCM End Set ADReplicationSiteLink IntegrationTest in seconds VERBOSE DC LCM End Resource ADReplicationSiteLink IntegrationTest VERBOSE DC LCM End Set VERBOSE DC LCM End Set in seconds Suggested solution to the issue This could be enhanced to handle null values to get a more descriptive verbose message The DSC configuration that is used to reproduce the issue as detailed as possible The existing integration test can be used to see and resolve this issue Snippet from the integration tests below powershell SYNOPSIS Creates a brand new Site Link in AD Sites and Services Configuration MSFTADReplicationSiteLinkCreateSiteLinkConfig ImportDscResource ModuleName ActiveDirectoryDsc node AllNodesNodeName ADReplicationSiteLink IntegrationTest Name Integration Integration SitesIncluded Integration Integration Ensure Present SYNOPSIS Change the attributes of a SiteLink Configuration MSFTADReplicationSiteLinkSetAttributesConfig ImportDscResource ModuleName ActiveDirectoryDsc node AllNodesNodeName ADReplicationSiteLink IntegrationTest Name Integration Integration SitesIncluded Integration Integration Description Integration Test Site Link Cost ReplicationFrequencyInMinutes Ensure Present The operating system the target node is running na Version and build of PowerShell the target node is running na Version of the DSC module that was used dev if using current dev branch dev Details of the scenario you tried and the problem that is occurring If a group already have one member Guest and then the group should enforce two members Guest and Administrator it looks like in the verbose log that it actually removes the Guest as member and the readds it Verbose logs showing the problem Context When using configuration MSFTADGroupEnforceMembersGroup Config WARNING It is not recommended to use domain credential for node localhost In order to suppress the warning you can add a property named PSDscAllowDomainUser with a value of true to your DSC configuration data for node localhost VERBOSE Perform operation Invoke CimMethod with following parameters methodName SendConfigurationApplyclassName MSFTDSCLocalConfigurationManagernamespaceName rootMicrosoftWindowsDesiredStateConfiguration VERBOSE An LCM method call arrived from computer DC with user sid S VERBOSE DC LCM Start Set VERBOSE DC DSCEngine Importing the module C source ActiveDirectoryDsc DscResources MSFTADGroup MSFTADGrouppsm in force mode VERBOSE DC LCM Start Resource ADGroup IntegrationTest VERBOSE DC LCM Start Test ADGroup IntegrationTest VERBOSE DC ADGroup IntegrationTest Importing the module MSFTADGroup in force mode VERBOSE DC ADGroup IntegrationTest Retrieving group membership based on SamAccountName property ADG VERBOSE DC ADGroup IntegrationTest Group membership is NOT in the desired state ADG VERBOSE DC LCM End Test ADGroup IntegrationTest in seconds VERBOSE DC LCM Start Set ADGroup IntegrationTest VERBOSE DC ADGroup IntegrationTest Importing the module MSFTADGroup in force mode VERBOSE DC ADGroup IntegrationTest Updating AD Group DscDistributionGroup ADG VERBOSE DC ADGroup IntegrationTest Retrieving group membership based on SamAccountName property ADG VERBOSE DC ADGroup IntegrationTest Removing members from AD group DscDistributionGroup ADG VERBOSE DC ADGroup IntegrationTest Adding members to AD group DscDistributionGroup ADG VERBOSE DC LCM End Set ADGroup IntegrationTest in seconds VERBOSE DC LCM End Resource ADGroup IntegrationTest VERBOSE DC LCM End Set VERBOSE DC LCM End Set in seconds VERBOSE Operation Invoke CimMethod complete Suggested solution to the issue We should not remove members that are suppose to be members We should only remove members not part of the Members property The DSC configuration that is used to reproduce the issue as detailed as possible powershell SYNOPSIS Add and remove members from a group Configuration MSFTADGroupModifyMembersGroup Config ImportDscResource ModuleName ActiveDirectoryDsc node AllNodesNodeName ADGroup IntegrationTest GroupName NodeGroup Name MembersToInclude Guest MembersToExclude Administrator Credential NewObject TypeName SystemManagementAutomationPSCredential ArgumentList NodeAdministratorUserName ConvertToSecureString String NodeAdministratorPassword AsPlainText Force SYNOPSIS Enforce members in a group Configuration MSFTADGroupEnforceMembersGroup Config ImportDscResource ModuleName ActiveDirectoryDsc node AllNodesNodeName ADGroup IntegrationTest GroupName NodeGroup Name Members Administrator Guest Credential NewObject TypeName SystemManagementAutomationPSCredential ArgumentList NodeAdministratorUserName ConvertToSecureString String NodeAdministratorPassword AsPlainText Force The operating system the target node is running na Version and build of PowerShell the target node is running na Version of the DSC module that was used dev if using current dev branch dev