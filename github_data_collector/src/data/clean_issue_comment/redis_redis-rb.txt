This error is occasionally raised when trying to use the value of a future after a pipeline block using version Is this expected and is there a recommended best practice for handling this error andor ensuring that the pipeline has executed before accessing the value The code looks something like redispipelined do akey akeyname anotherkey anotherkeyname akeyexists redisexistsakey anotherkeydata redishmgetanotherkey end x y anotherkeydatavalue When calling exists with multiple keys the return value depending on the arguments could be either a Boolean or an Integer This PR aims to fix that by creating a new method called mexists that accepts an array of keys Example of exists ruby redissetfoo world OK prymain redisexists foo foo true prymain redisexists foo foo false prymain redisexists foo foo true prymain redissetfoo world OK prymain redisexists foo foo Example of exists ruby redissetfoo world OK prymain redismexists foo foo prymain redisexists foo foo prymain redissetfoo world OK prymain redisexists foo foo Feature Request Support for ACLs w Redis In worlds where multiple users exist we may want users to do perform different Redis operations We may also want to restrict them to specific keys This will help securityconscious users and enterprises restrict clients and users to the least amount of privilege required to perform their function With the planned implementation of ACLs in Redis ecosystem drivers should begin aligning to support this In Antirezs words When ACLs are useful You want to improve security by restricting access to commands and keys so that untrusted clients have no access and trusted clients have just the minimum access level to the database in order to perform the work needed For instance certain clients may just be able to execute readonly commands You want to improve operational safety so that processes or humans accessing Redis are not allowed because of software errors or manual mistakes to damage the data or the configuration For instance there is no reason for a worker that fetches delayed jobs from Redis to be able to call the FLUSHALL command Commands in Scope Currently w Redis Multiple Arguments for AUTH username and password ACL HELP provides help information listed below ACL LOAD Reload users from the ACL file ACL LIST Show user details in config file format ACL USERS List all the registered usernames ACL CAT category List available categories List commands inside category ACL SETUSER username acl rules Create or modify a user ACL DELUSER username Delete a list of users ACL GETUSER username Get the user details ACL GENPASS Generate a secure password ACL WHOAMI Return the current connection username Error Checking No Permissions when a user does not have permission to a command or key when error for commands or keys Username does not exist getuser deluser References Hi We have a problem with random passwords generated in a hosted Redis service and this gem The service generate passwords like sJ RAYkWN SlBu y hpIGoNCdMlOXQehqs If we create the following redis url redissJ RAYkWN SlBu y hpIGoNCdMlOXQehqsmyredisservicenet and pass it to Redisnew command we get an error in password prymain redis Redisnewurl redissJ RAYkWN SlBu y hpIGoNCdMlOXQehqsmyredisservicenet Redis client v for redismyredisservicenet prymain redissetmykey hello world RedisCommandError ERR invalid password Investigating the source code in this line you are using this code ruby defaults password CGIunescapeuripassword if uripassword Its an error We must escape the URI If its the second case may be very interesant to put a note in README file about this for prevent future issues Thanks Weve been having some issues with a threaded app that is using a connection pool too manage multiple Redis connections with this gem On startup we intermittently get IOError exceptions Ive been digging through the code base but have had no luck pinpointing the issue I did try both the latest release and head Not sure if its a bug or an issue with how the gem is being used but Im hoping for some assistance IOError closed stream writenonblock at orgjrubyRubyIOjava writetosocket at jrubyappvendorbundlerjruby bundlergemsredisrb c d libredisconnectionrubyrb write at jrubyappvendorbundlerjruby bundlergemsredisrb c d libredisconnectionrubyrb loop at orgjrubyRubyKerneljava write at jrubyappvendorbundlerjruby bundlergemsredisrb c d libredisconnectionrubyrb write at jrubyappvendorbundlerjruby bundlergemsredisrb c d libredisconnectionrubyrb write at jrubyappvendorbundlerjruby bundlergemsredisrb c d libredisclientrb io at jrubyappvendorbundlerjruby bundlergemsredisrb c d libredisclientrb write at jrubyappvendorbundlerjruby bundlergemsredisrb c d libredisclientrb process at jrubyappvendorbundlerjruby bundlergemsredisrb c d libredisclientrb each at orgjrubyRubyArrayjava process at jrubyappvendorbundlerjruby bundlergemsredisrb c d libredisclientrb ensureconnected at jrubyappvendorbundlerjruby bundlergemsredisrb c d libredisclientrb process at jrubyappvendorbundlerjruby bundlergemsredisrb c d libredisclientrb logging at jrubyappvendorbundlerjruby bundlergemsredisrb c d libredisclientrb process at jrubyappvendorbundlerjruby bundlergemsredisrb c d libredisclientrb call at jrubyappvendorbundlerjruby bundlergemsredisrb c d libredisclientrb get at jrubyappvendorbundlerjruby bundlergemsredisrb c d libredisrb synchronize at jrubyappvendorbundlerjruby bundlergemsredisrb c d libredisrb monsynchronize at uriclassloaderMETAINFjrubyhomelibrubystdlibmonitorrb synchronize at jrubyappvendorbundlerjruby bundlergemsredisrb c d libredisrb get at jrubyappvendorbundlerjruby bundlergemsredisrb c d libredisrb get at libredisredisstorerb with at jrubyappvendorbundlerjruby gemsconnectionpool libconnectionpoolrb handleinterrupt at orgjrubyRubyThreadjava with at jrubyappvendorbundlerjruby gemsconnectionpool libconnectionpoolrb handleinterrupt at orgjrubyRubyThreadjava with at jrubyappvendorbundlerjruby gemsconnectionpool libconnectionpoolrb If its relevant Im creating the pool like so ruby pool ConnectionPoolnewsize poolsize timeout pooltimeout do Redisnewredisconfig end I found a slow test case SslTesttestconnectiontononsslserver s Can anyone help me how to fix this issue Ive tried reinstalling both redis and redis gem but Im still getting this segmentation fault error when Im loading it from the Ruby console Looking for any feedback on this Thanks details summaryHeres my crash report logsummary p Control frame information c p s e CFUNC getaddrinfo c p s e METHOD Usersfredrvmgemsruby gemsredis libredisconnectionrubyrb c p s e METHOD Usersfredrvmgemsruby gemsredis libredisconnectionrubyrb c p s e METHOD Usersfredrvmgemsruby gemsredis libredisclientrb c p s e BLOCK Usersfredrvmgemsruby gemsredis libredisclientrb c p s e METHOD Usersfredrvmgemsruby gemsredis libredisclientrb c p s e METHOD Usersfredrvmgemsruby gemsredis libredisclientrb c p s e METHOD Usersfredrvmgemsruby gemsredis libredisclientrb c p s e BLOCK Usersfredrvmgemsruby gemsredis libredisclientrb c p s e METHOD Usersfredrvmgemsruby gemsredis libredisclientrb c p s e METHOD Usersfredrvmgemsruby gemsredis libredisclientrb c p s e METHOD Usersfredrvmgemsruby gemsredis libredisclientrb c p s e BLOCK Usersfredrvmgemsruby gemsredis libredisrb c p s e BLOCK Usersfredrvmgemsruby gemsredis libredisrb c p s e METHOD Usersfredrvmrubiesruby libruby monitorrb c p s e METHOD Usersfredrvmgemsruby gemsredis libredisrb c p s e METHOD Usersfredrvmgemsruby gemsredis libredisrb c p s e METHOD Usersfredspuullibredisclientrb c p s e METHOD Usersfredspuullibredisclientrb c p s e EVAL irb FINISH c p s e CFUNC eval c p s e METHOD Usersfredrvmrubiesruby libruby irbworkspacerb c p s e METHOD Usersfredrvmrubiesruby libruby irbcontextrb c p s e BLOCK Usersfredrvmrubiesruby libruby irbrb c p s e METHOD Usersfredrvmrubiesruby libruby irbrb c p s e BLOCK Usersfredrvmrubiesruby libruby irbrb c p s e BLOCK Usersfredrvmrubiesruby libruby irbrubylexrb FINISH c p s e CFUNC loop c p s E b BLOCK Usersfredrvmrubiesruby libruby irbrubylexrb FINISH c p s e CFUNC catch c p s E METHOD Usersfredrvmrubiesruby libruby irbrubylexrb c p s E b METHOD Usersfredrvmrubiesruby libruby irbrb c p s E BLOCK Usersfredrvmrubiesruby libruby irbrb FINISH c p s e CFUNC catch c p s E a METHOD Usersfredrvmrubiesruby libruby irbrb c p s E METHOD Usersfredrvmgemsruby gemsrailties librailscommandsconsolerb c p s E bc METHOD Usersfredrvmgemsruby gemsrailties librailscommandsconsolerb c p s E TOP Usersfredrvmgemsruby gemsrailties librailscommandsrb FINISH c p s e CFUNC require c p s E BLOCK Usersfredrvmgemsruby gemsactivesupport libactivesupportdependenciesrb c p s E bd METHOD Usersfredrvmgemsruby gemsactivesupport libactivesupportdependenciesrb c p s E b METHOD Usersfredrvmgemsruby gemsactivesupport libactivesupportdependenciesrb c p s E TOP Usersfredspuulbinrails FINISH c p s e CFUNC load c p s E ab BLOCK Usersfredrvmgemsruby gemsactivesupport libactivesupportdependenciesrb c p s E METHOD Usersfredrvmgemsruby gemsactivesupport libactivesupportdependenciesrb c p s E METHOD Usersfredrvmgemsruby gemsactivesupport libactivesupportdependenciesrb c p s E METHOD Usersfredrvmgemsruby gemsspring libspringcommandsrailsrb c p s E a METHOD Usersfredrvmgemsruby gemsspring libspringcommandwrapperrb c p s E BLOCK Usersfredrvmgemsruby gemsspring libspringapplicationrb FINISH c p s e CFUNC fork c p s E c METHOD Usersfredrvmgemsruby gemsspring libspringapplicationrb c p s E ef BLOCK Usersfredrvmgemsruby gemsspring libspringapplicationrb FINISH c p s e CFUNC loop c p s E METHOD Usersfredrvmgemsruby gemsspring libspringapplicationrb c p s E TOP Usersfredrvmgemsruby gemsspring libspringapplicationbootrb FINISH c p s e CFUNC require c p s E METHOD Usersfredrvmrubiesruby librubysiteruby rubygemscoreextkernelrequirerb c p s E b EVAL e FINISH c p s E a TOP FINISH e in main Usersfredrvmrubiesruby librubysiteruby rubygemscoreextkernelrequirerb in require Usersfredrvmrubiesruby librubysiteruby rubygemscoreextkernelrequirerb in require Usersfredrvmgemsruby gemsspring libspringapplicationbootrb in top required Usersfredrvmgemsruby gemsspring libspringapplicationrb in run Usersfredrvmgemsruby gemsspring libspringapplicationrb in loop Usersfredrvmgemsruby gemsspring libspringapplicationrb in block in run Usersfredrvmgemsruby gemsspring libspringapplicationrb in serve Usersfredrvmgemsruby gemsspring libspringapplicationrb in fork Usersfredrvmgemsruby gemsspring libspringapplicationrb in block in serve Usersfredrvmgemsruby gemsspring libspringcommandwrapperrb in call Usersfredrvmgemsruby gemsspring libspringcommandsrailsrb in call Usersfredrvmgemsruby gemsactivesupport libactivesupportdependenciesrb in load Usersfredrvmgemsruby gemsactivesupport libactivesupportdependenciesrb in loaddependency Usersfredrvmgemsruby gemsactivesupport libactivesupportdependenciesrb in block in load Usersfredrvmgemsruby gemsactivesupport libactivesupportdependenciesrb in load Usersfredspuulbinrails in top required Usersfredrvmgemsruby gemsactivesupport libactivesupportdependenciesrb in require Usersfredrvmgemsruby gemsactivesupport libactivesupportdependenciesrb in loaddependency Usersfredrvmgemsruby gemsactivesupport libactivesupportdependenciesrb in block in require Usersfredrvmgemsruby gemsactivesupport libactivesupportdependenciesrb in require Usersfredrvmgemsruby gemsrailties librailscommandsrb in top required Usersfredrvmgemsruby gemsrailties librailscommandsconsolerb in start Usersfredrvmgemsruby gemsrailties librailscommandsconsolerb in start Usersfredrvmrubiesruby libruby irbrb in start Usersfredrvmrubiesruby libruby irbrb in catch Usersfredrvmrubiesruby libruby irbrb in block in start Usersfredrvmrubiesruby libruby irbrb in evalinput Usersfredrvmrubiesruby libruby irbrubylexrb in eachtoplevelstatement Usersfredrvmrubiesruby libruby irbrubylexrb in catch Usersfredrvmrubiesruby libruby irbrubylexrb in block in eachtoplevelstatement Usersfredrvmrubiesruby libruby irbrubylexrb in loop Usersfredrvmrubiesruby libruby irbrubylexrb in block levels in eachtoplevelstatement Usersfredrvmrubiesruby libruby irbrb in block in evalinput Usersfredrvmrubiesruby libruby irbrb in signalstatus Usersfredrvmrubiesruby libruby irbrb in block levels in evalinput Usersfredrvmrubiesruby libruby irbcontextrb in evaluate Usersfredrvmrubiesruby libruby irbworkspacerb in evaluate Usersfredrvmrubiesruby libruby irbworkspacerb in eval irb in irbbinding Usersfredspuullibredisclientrb in fetch Usersfredspuullibredisclientrb in read Usersfredrvmgemsruby gemsredis libredisrb in get Usersfredrvmgemsruby gemsredis libredisrb in synchronize Usersfredrvmrubiesruby libruby monitorrb in monsynchronize Usersfredrvmgemsruby gemsredis libredisrb in block in synchronize Usersfredrvmgemsruby gemsredis libredisrb in block in get Usersfredrvmgemsruby gemsredis libredisclientrb in call Usersfredrvmgemsruby gemsredis libredisclientrb in process Usersfredrvmgemsruby gemsredis libredisclientrb in logging Usersfredrvmgemsruby gemsredis libredisclientrb in block in process Usersfredrvmgemsruby gemsredis libredisclientrb in ensureconnected Usersfredrvmgemsruby gemsredis libredisclientrb in connect Usersfredrvmgemsruby gemsredis libredisclientrb in withreconnect Usersfredrvmgemsruby gemsredis libredisclientrb in block in connect Usersfredrvmgemsruby gemsredis libredisclientrb in establishconnection Usersfredrvmgemsruby gemsredis libredisconnectionrubyrb in connect Usersfredrvmgemsruby gemsredis libredisconnectionrubyrb in connect Usersfredrvmgemsruby gemsredis libredisconnectionrubyrb in getaddrinfo C level backtrace information libruby dylib x e b a rbvmbugreport libruby dylib x e f reportbug libruby dylib x e c rbbug libruby dylib x e e sigsegv libsystemplatformdylib x fff d b d sigtramp libsystemtracedylib x fff fa a oslogpreferencesrefresh x x Since update to gem tries to send auth command to sentinels if password is provided It does not work for redis setup where only redis servers but not sentinels do support the auth command ERR unknown command auth gems gemsredis libredisclientrb in call gems gemsredis libredisclientrb in block in connect gems gemsredis libredisclientrb in withreconnect gems gemsredis libredisclientrb in connect gems gemsredis libredisclientrb in ensureconnected gems gemsredis libredisclientrb in block in process gems gemsredis libredisclientrb in logging gems gemsredis libredisclientrb in process gems gemsredis libredisclientrb in call gems gemsredis libredisclientrb in block in resolvemaster gems gemsredis libredisclientrb in block in sentineldetect gems gemsredis libredisclientrb in each gems gemsredis libredisclientrb in sentineldetect gems gemsredis libredisclientrb in resolvemaster gems gemsredis libredisclientrb in resolve gems gemsredis libredisclientrb in establishconnection gems gemsredis libredisclientrb in block in connect gems gemsredis libredisclientrb in withreconnect gems gemsredis libredisclientrb in connect gems gemsredis libredisclientrb in ensureconnected gems gemsredis libredisclientrb in block in process gems gemsredis libredisclientrb in logging gems gemsredis libredisclientrb in process gems gemsredis libredisclientrb in call gems gemsredis libredisrb in block in smembers gems gemsredis libredisrb in block in synchronize monitorrb in monsynchronize gems gemsredis libredisrb in synchronize gems gemsredis libredisrb in smembers I not sure is this exactly a bug in redisrb or fakeredis but starting from v return value was changed as following v p Rediscurrentsetaaa aaa OK p Rediscurrentsetaaa aaa nx true false v only in test env with fakeredis in dev env with normal redis returns false p Rediscurrentsetaaa aaa OK p Rediscurrentsetaaa aaa nx true The documentation for using SSL says To enable SSL support pass the ssl true however code that checks this doesnt check for the symbol true it checks for truthiness so setting any truthy value enables SSL for example ssl false will enable SSL which is not expected from the way the docs read