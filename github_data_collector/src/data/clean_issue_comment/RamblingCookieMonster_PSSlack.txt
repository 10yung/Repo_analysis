 TimeStamp wasnt getting set when called directly Seemed to reference an old variable MessageTS The help example showed forcing overriding a ChannelID when sending pipelined input The code didnt seem to allow that previously and specifying a ChannelID to be needed when deleting from a private channel as the pipelined channel name isnt sufficient Heres the example from the help file which now works for me after these edits GetSlackHistory Count WhereObject Username match MalfunctioningBot RemoveSlackMessage ChannelID C H XBUMV Implemented Appending the option ContentType applicationjson charsetutf may fix this issue powershell InvokeRestMethod Method Post Uri Body text Test message ContentType applicationjson charsetutf worked in PowerShell in Ubuntu and in Windows chcp when i run the getslackuser function with the excludebots switch it still returns bot users Looking at the code there is a switch parameter but no where in the code is there any logic that deals excluding bot users Am i missing something Trying to send a message with Cyrillic characters All characters are replaced with in Slack Apparently this is because the default encoding in PowerShell Core nowadays is UTF but the module encodes the text with iso sendslackfile and sendslackmessage should support threads sendslackfile should be modified as follows parameterParameterSetName Content string FileType string Channel string threadts string FileName String Title String Comment process if Content body switch psboundparameterskeys Content bodycontent content Channel bodychannels Channel join threadts bodythreadts threadts FileName bodyfilename FileName Title bodyTitle Title Comment bodyinitialcomment Comment FileType bodyfiletype FileType switch psboundparameterskeys Channel bodyLines boundaryLF ContentDisposition formdata namechannelsLF ContentType multipartformdataLFLF Channel join LF threadts bodyLines boundaryLF ContentDisposition formdata namethreadtsLF ContentType multipartformdataLFLF threadtsLF FileName bodyLines boundaryLF ContentDisposition formdata namefilenameLF ContentType multipartformdataLFLF FileNameLF sendslackmessage Username parameterParameterSetName Param ValueFromPipelineByPropertyName True threadts parameterParameterSetName Param ValueFromPipelineByPropertyName True IconUrl parameterParameterSetName Param ValueFromPipelineByPropertyName True IconEmoji ifPSCmdletParameterSetName eq Param body switch psboundparameterskeys channel bodychannel channel text bodytext text username bodyusername username threadts bodythreadts threadts asuser bodyasuser AsUser iconurl bodyiconurl iconurl iconemoji bodyiconemoji iconemoji linknames bodylinknames parse bodyparse Parse UnfurlLinks bodyunfurllinks UnfurlLinks UnfurlMedia bodyunfurlmedia UnfurlMedia attachments bodyattachments Attachments Messages Body Allows for PSSlack to be run in a constrainedJea environment The only change here is replacing instances of SelectObject with MicrosoftPowerShellUtility SelectObject This allows PSSlack to be used in constrained endpoint Jea environments as constrained endpoints load a limited version of SelectObject that breaks the module Calling it using the fully qualified module path fixes the issue are there plans to support TLS I used this module for a slack app and now Slack is telling me tls and will be deprecated in and any apps using those protocol will fail when querying their api This fixes issue by adding a SendSlackChannelInvite function This change allows the user to configure the message contenttype with an optional parameter or using the PSSlackConfig as requested in the linked issue Reason for asking conversationslist seems to be cached If you make changes to objects returned by conversationslist and run it again the newly returned objects are unchanged In comparison channelslist seems to be updated on every request