I believe there is a typo on line of the lifecycle event documentation file The code reads like this javascript var fsm new StateMachine transitions name step from A to B methods onTransition functionlifecycle arg arg consoleloglifecycletransition step consoleloglifecyclefrom A consoleloglifecycleto B consolelogarg consolelogarg hello fsmstep hello Shouldnt it be this instead with onStep instead of onTransition javascript var fsm new StateMachine transitions name step from A to B methods onStep functionlifecycle arg arg consoleloglifecycletransition step consoleloglifecyclefrom A consoleloglifecycleto B consolelogarg consolelogarg hello fsmstep hello Can that be disabled If I am setting existing state machine is already in why is there event fired Can that behaviour be disabled I can see I got there from none but I do not want to have iflifecyclefrom none return in each event handler The data type of the status value is not allowed to be int javascript const StateMachine requirejavascriptstatemachine var fsm new StateMachine init transitions name melt from to name freeze from to name vaporize from to name condense from to methods onMelt functiont consolelogI meltedtthis onFreeze function consolelogI froze onVaporize function consolelogI vaporized onCondense function consolelogI condensed fsmmelt I wanted to understand if any existing feature is present or planned for something like below var fsm new StateMachine init solid transitions name melt from solid to liquid name freeze from liquid to solid name vaporize from liquid to gas name condense from gas to liquid methods canMelt function return thisinputTemperature thisdatameltingPoint canFreeze function return thisinputTemperature thisdatameltingPoint canVaporize function return thisinputTemperature thisdataboilingPoint canCondense function return thisinputTemperature thisdataboilingPoint data name water boilingPoint meltingPoint inputTemperature After this lets say a new method pushWorkflow on the StateMachine fsmpushWorkflow consolelogfsmstate Should display gas Kindly let me know if it is not there and will you be happy to accept a pull request in similar lines Please suggest some changes if you feel something is not right Hi In the first place your work is amazing in particular visualization I am wondering if it is possible to create the state machine from a string eg let myFSM new StateMachineab c where the second state is ab and the events a or b are required to reach this state Thanks a lot Paul For const config init NEW transitions name init from NEW to READY methods onBeforeTransition function here any code always returning promise with more sense than below return Promiseresolvetrue const sm new StateMachineconfig consolelogsmstate here state is none no way to wait until sm is ready to be used an idea would be to provide some method ie pendingTransition returning promise to be able to act only when state machine is ready to be used currently the only way to cancel the transition from handler seem to be rejecting the promise As returning false from handler cancels the transition Id expect resolving returned promise with false should also cancel the transition this seems to be a bit related to related When you throw an exception inside an observer the FSM state might be updated If the error is thrown before one specific observer is called onTransit then the state would not change If the error is thrown after onTransit observer then the state is changed This PR makes this consistent and it always reverts the state It basically reverts to the previous state when the exception is thrown IF the current state is different from the previous one defined in the transition Promises supported Hello So I needed a state machine in which a self loop would trigger a state entering method For example javascript const fsm new StateMachine init waiting transitions name transferred from waiting to waiting methods onWaiting function consolelogIm waiting The application was not logging twice when I tested this javascript fsmtransferred So I appended to the object provided to the constructor the following keyvalue pair observeUnchangedState true Because I saw this condition in the source code So will I get unexpected side effects when using this Im asking because this is not documented 