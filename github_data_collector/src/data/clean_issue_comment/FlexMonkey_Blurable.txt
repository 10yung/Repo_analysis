 Hi This library is awesome it will be great if it could be ported to Swift GitHub changed the way Markdown headings are parsed so this change fixes it See bryant readmesfix for more information Tackles bryant readmesfix Whenever I try to unblur a view by using viewunblur or viewblurblurRadius app crashes by throwing exception fatal error unexpectedly found nil while unwrapping an Optional value Heres the Stacktrace thread tid x c x a fc libswiftCoredylibfunction signature specialization preserving fragile attribute Arg Dead Arg Dead of SwiftfatalErrorMessage SwiftStaticString SwiftStaticString SwiftStaticString SwiftUInt flags SwiftUInt SwiftNever queue comapplemainthread stop reason EXCBADINSTRUCTION codeEXCI INVOP subcode x frame x a fc libswiftCoredylibfunction signature specialization preserving fragile attribute Arg Dead Arg Dead of SwiftfatalErrorMessage SwiftStaticString SwiftStaticString SwiftStaticString SwiftUInt flags SwiftUInt SwiftNever frame x db TouchIDDemoLoginWithPasswordVCself x fd fc d closure closure at LoginWithPasswordVCswift frame x b TouchIDDemothunk at TouchIDVCswift frame x cd libdispatchdylibdispatchclientcallout frame x d c libdispatchdylibdispatchcontinuationpop frame x de libdispatchdylibdispatchsourcelatchandcall frame x ad libdispatchdylibdispatchsourceinvoke frame x afc libdispatchdylibdispatchmainqueuecallback CF frame x ccae CoreFoundationCFRUNLOOPISSERVICINGTHEMAINDISPATCHQUEUE frame x c d CoreFoundationCFRunLoopRun frame x c f CoreFoundationCFRunLoopRunSpecific frame x dd a f GraphicsServicesGSEventRunModal frame x dc UIKitUIApplicationMain frame x f TouchIDDemomain at AppDelegateswift frame x dd d libdylddylibstart thread tid x e x c e libsystemkerneldylibworkqkernreturn frame x c e libsystemkerneldylibworkqkernreturn frame x libsystempthreaddylibpthreadwqthread frame x ed libsystempthreaddylibstartwqthread thread tid x e x c e libsystemkerneldylibworkqkernreturn frame x c e libsystemkerneldylibworkqkernreturn frame x libsystempthreaddylibpthreadwqthread frame x ed libsystempthreaddylibstartwqthread thread tid x e x ce a libsystemkerneldylibkeventqos queue comapplelibdispatchmanager frame x ce a libsystemkerneldylibkeventqos frame x f libdispatchdylibdispatchmgrwaitforevent frame x c libdispatchdylibdispatchmgrinvoke frame x be libdispatchdylibdispatchmgrthread thread tid x e x c e libsystemkerneldylibworkqkernreturn frame x c e libsystemkerneldylibworkqkernreturn frame x libsystempthreaddylibpthreadwqthread frame x ed libsystempthreaddylibstartwqthread thread tid x e x a libsystemkerneldylibmachmsgtrap name comappleuikiteventfetchthread frame x a libsystemkerneldylibmachmsgtrap frame x d libsystemkerneldylibmachmsg frame x c ba CoreFoundationCFRunLoopServiceMachPort frame x c CoreFoundationCFRunLoopRun frame x c f CoreFoundationCFRunLoopRunSpecific frame x Foundation NSRunLoopNSRunLoop runModebeforeDate frame x e b Foundation NSRunLoopNSRunLoop runUntilDate frame x a UIKit UIEventFetcher threadMain frame x FoundationNSThreadstart frame x aab libsystempthreaddylibpthreadbody frame x f libsystempthreaddylibpthreadstart frame x fd libsystempthreaddylibthreadstart thread tid x f x c e libsystemkerneldylibworkqkernreturn frame x c e libsystemkerneldylibworkqkernreturn frame x libsystempthreaddylibpthreadwqthread frame x ed libsystempthreaddylibstartwqthread Id be cool to also add Cocoapods support I done this implementation myself last month for my library Just follow this post and this checklist 