Hi I ran into an issue with styled components based on the Codepen demo It seems that using lazy children does not work except when its the only child I have forked the Codepen It works fine as long as LazyChild is the only child Once I add another child doesnt matter whether lazy or not it breaks i find this router for solid would this apply to the related projects section Ive had many people ask me about SSR In fact its probably the most requested feature So far Ive made it mechanically possible to do rehydration in the client for nonasynchronous rendered cases Using JSDOM or similar we can run Solid on the server to generate fake DOM nodes that can be stringified I dont know enough about the topic of SSR and Isomorphic Libraries to know beyond that how they are expected to work Nor am I the best suited to spearhead this as I have no reason outside of requests to look into this Its just not an area where I do work Ive been working hard to improve clientside performance to a point that TTI speed and Service worker caching makes the whole thing mute for highperformance Web Apps and PWAs But I know there are other use cases out there and that the research especially being done with React and Nextjs is impressive But Im much more incentivized to show far we can optimize SPAs Currently I am not really clear even what the essential building blocks are Routing obviously comes to mind But Im unclear on isomorphic patterns there How are lifecycles and asynchronous requests handled Lazy loaded components How do things differ between static site generation and otherwise What sort of tooling is useful If anyone has experience in these areas it would be invaluable I realize people are looking for libraries and frameworks for opinions here but I havent formed them I will work with anyone interested to make Solid be able to handle the mechanicals Unless others help take it on though I dont see SSR progressing in the next months I have a lot of other work to get done to make Solid better What can I do to Help Join the conversation Im free to chat at length about this on gitter Post in this thread what youd like to see Or any Solid specific insights you have from your experience with other SSR libraries If you think you might have answers to any of my questions above please shed some light on the issues Thank you This is a great library and builds on the shortcomings of some big libraries out there Absolutely prefer DOM library over virtual DOM implementation Thanks for this great effort I have a couple of questions Does anyone know of a cssinjs styled library that could work with solid out of the box What is the ReactcreateElement equivalent for solidjs if someone were to write a port of emotionstyled or something similar Thanks I am not a visual artist I used a logo generator I think at some point in the near future Solid needs to get a real logo Now Im not necessarily inviting an open free for all as I dont want to waste anyones time but I could definitely benefit from some help Have you considered moving the main chat to discordapp there are many advantages to it In the docs it appears only objects and arrays can be tracked I have a WebGL app that Im considering porting over and have concerns about the sheer amount of hidden classes being generated by v if using objects for highly volatile data instead of maps Is the a right way to do this with setState where its not an issue Im sure bulk edits can help Thanks I have adjusted the control flow type signatures based on the refined JSXElement type The compiler has already revealed a few interesting things I tried to remove most of the any in the control flow signatures to actually make use of the compiler In some cases a value false can be returned which was not on the list of allowed values you mentioned This currently requires as any as JSXElement casts If this is legal we can add it to the JSXElement definition The show control flow allowed transforms to undefined which is also not supported so far Ive removed the possibility to have an undefined return value The switch element would have bugs it gets arbitrary JSX children only one or multiple match elements seem to work I have narrowed down the allowed children to that The portal element currently doesnt fit into the JSXElement type I have left it out so far There was a compilation error in suspensets which I have fixed by adding NodeJS types but does NodeJSTimeout work in the browser If you feel uneasy of narrowing down the types at this moment feel free to keep the PR open for now I can update it as Solid continues to develop Just wanted to give you an impression how it could look eventually hey ryansolid i was wondering if you could add some idiomatic demos for something like this 