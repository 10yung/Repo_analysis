tokenizer wikipediatitlenounstxt nounstxt tokenizing nlpenguin TTS TTS Currently stemming returns one stem but some conjugations can have multiple conjugations For example could be either or depending on the context Another example is Is there a way to return a list of possible stems instead of just one If not could you point me in the right direction for implementing it my self I can put in a PR once Im done Hello I just figured out that the unexpected result of tokenizatin Number Foreign Even I added using OpenKoreanTextProcessorJavaaddNounsToDictionary the result doesnt change I got an error when I run examples examplesJavaOpenKoreanTextProcessorExample the following error has occurred The error dump is here I know that running this code in IntelliJ is reccomended and I successed to exec the example code in IntelliJ BUT I want to use this code in CLI environment openkoreantext examples mvn execjava DexecmainClassJavaOpenKoreanTextProcessorExample INFO Scanning for projects INFO INFO INFO Building Korean Text Examples INFO INFO INFO execmavenplugin java defaultcli example INFO INFO BUILD FAILURE INFO INFO Total time s INFO Finished at T INFO Final Memory M M INFO ERROR Failed to execute goal orgcodehausmojoexecmavenplugin java defaultcli on project example The parameters mainClass for goal orgcodehausmojoexecmavenplugin java are missing or invalid Help ERROR ERROR To see the full stack trace of the errors rerun Maven with the e switch ERROR Rerun Maven using the X switch to enable full debug logging ERROR ERROR For more information about the errors and possible solutions please read the following articles ERROR Help Here is the environment of my machine uname a Linux red generic Ubuntu SMP Mon Feb UTC x x x GNULinux mvn version Apache Maven Maven home usrsharemaven Java version vendor Oracle Corporation Java home usrlibjvmjava openjdkamd jre Default locale enUS platform encoding UTF OS name linux version generic arch amd family unix OpenKoreanTextProcessorJavanormalize and OpenKoreanTextProcessorJavatokenize Leak arround to MB of memory when called from Java Could you suggest how to release memory after each call Stems as instead of Open Korean Text currently loads resources lazily on first call this is fine for a lot of applications however for web applications can cause issues with the first request being slow can take seconds to load the resources A work around is to call the tokenizer during web app start up but it would be nicer if there were a method to trigger this loading of the resources in the OpenKoreanText API hello I user twitter analyzer with python And I want to make userdictionary It means when I tokenize now it makes tokens like this tokens Noun Noun Noun but I want to make tokens like this tokens Noun or Compound is it possible if possible how could I make this