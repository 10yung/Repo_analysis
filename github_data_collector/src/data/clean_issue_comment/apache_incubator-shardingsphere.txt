 shardingjdbc Resource private DataSource shardingDataSource public String generateTableSchemaString tableName Connection connection null try connection shardingDataSourcegetConnection DatabaseMetaData meta connectiongetMetaData ResultSet columns metagetColumnsconnectiongetCatalog tableName while columnsnext String columnName columnsgetStringCOLUMNNAME String isAutoIncrement columnsgetStringISAUTOINCREMENT int digits columnsgetIntDECIMALDIGITS int dataType columnsgetIntDATATYPE String remarks columnsgetStringREMARKS String datatype columnsgetStringDATATYPE String columnsize columnsgetStringCOLUMNSIZE String decimaldigits columnsgetStringDECIMALDIGITS String isNullable columnsgetStringISNULLABLE Printing results SystemoutprintlncolumnName datatype columnsize decimaldigits isNullable isAutoIncrement catch Exception e throw new RuntimeExceptione return null exception Caused by javasqlSQLFeatureNotSupportedException getCatalog at orgapacheshardingsphereshardingjdbcjdbcunsupportedAbstractUnsupportedOperationConnectiongetCatalogAbstractUnsupportedOperationConnectionjava Bug Report For English only other languages will not accept Before report a bug make sure you have Searched open and closed GitHub issues Read documentation ShardingSphere Doc Please pay attention on issues you submitted because we maybe need more details If no response more than days and we cannot reproduce it on current information we will close it Please answer these questions before submitting your issue Thanks Which version of ShardingSphere did you use RC Which project did you use ShardingJDBC or ShardingProxy ShardingJDBC Expected behavior Actual behavior The data was inserted successfully but an exception was thrown Reason analyze If you can Steps to reproduce the behavior such as SQL to execute sharding rule configuration when exception occur etc Example codes for reproduce this issue such as a github link Bug Report Related issue Which version of ShardingSphere did you use RC Which project did you use ShardingJDBC or ShardingProxy ShardingJDBC Expected behavior yaml spring shardingsphere sharding tables torder actualDataNodes ds torder databaseStrategy inline shardingColumn orderid algorithmExpression dsorderid tableStrategy none tableStrategy in shardingRule of torder is NoneStrategy Actual behavior tableStrategy is null Reason analyze If you can springboot will process yaml parse result to properties So if the value is empty map or collection it will ignore this propertries And then when instance bean spring boot find there are no properties for tableStrategy and skip instance tableStrategy detail see YamlProcessor in orgspringframeworkbeansfactoryconfig And ValueObjectBinder in orgspringframeworkbootcontextpropertiesbind Steps to reproduce the behavior such as SQL to execute sharding rule configuration when exception occur etc configuration yaml spring shardingsphere datasource names ds ds ds type orgapachecommonsdbcp BasicDataSource driverClassName commysqljdbcDriver url jdbcmysqllocalhost demods useUnicodetrue username root password ds type orgapachecommonsdbcp BasicDataSource driverClassName commysqljdbcDriver url jdbcmysqllocalhost demods useUnicodetrue username root password sharding tables torder actualDataNodes ds torder databaseStrategy inline shardingColumn orderid algorithmExpression dsorderid tableStrategy none props sql show true Example codes for reproduce this issue such as a github link Bug Report For English only other languages will not accept Before report a bug make sure you have Searched open and closed GitHub issues Read documentation ShardingSphere Doc Please pay attention on issues you submitted because we maybe need more details If no response more than days and we cannot reproduce it on current information we will close it Please answer these questions before submitting your issue Thanks Which version of ShardingSphere did you use dev Which project did you use ShardingJDBC or ShardingProxy ShardingProxy Expected behavior tableMetaData contain encrypt field Actual behavior tableMetaData dont contain encrypt field in MetaData config schemaName shardingencrypt dataSources ds url jdbcmysqllocalhost demods serverTimezoneUTC useSSLfalse username root password connectionTimeoutMilliseconds idleTimeoutMilliseconds maxLifetimeMilliseconds maxPoolSize ds url jdbcmysqllocalhost demods serverTimezoneUTC useSSLfalse username root password connectionTimeoutMilliseconds idleTimeoutMilliseconds maxLifetimeMilliseconds maxPoolSize shardingRule tables tuser actualDataNodes ds tuser tableStrategy inline shardingColumn userid algorithmExpression tuseruserid databaseStrategy inline shardingColumn userid algorithmExpression dsuserid keyGenerator type SNOWFLAKE column userid defaultDatabaseStrategy none defaultTableStrategy none encryptRule encryptors encryptoraes type aes props aeskeyvalue abc encryptormd type md tables tuser columns username plainColumn username cipherColumn usernamecipher encryptor encryptormd pwd plainColumn pwdplain cipherColumn pwdcipher encryptor encryptormd authentication users root password props maxconnectionssizeperquery acceptorsize The default value is available processors count executorsize Infinite by default proxyfrontendflushthreshold The default value is LOCAL Proxy will run with LOCAL transaction XA Proxy will run with XA transaction BASE Proxy will run with BASE transaction proxytransactiontype LOCAL proxyopentracingenabled false proxyhintenabled true querywithciphercolumn true sqlshow true Reason analyze If you can spring boot version jdk sharding RC I searched most of the cases and configured them with properties But I used yml but something went wrong Failed to configure a DataSource url attribute is not specified and no embedded datasource could be configured Reason Failed to determine a suitable driver class This is my configuration yaml shardingsphere datasource names ds ds ds type comalibabadruidpoolDruidDataSource driverClassName commysqlcjjdbcDriver url jdbcmysqlmysqlcielcl ds seUnicodetrue characterEncodingUTF useSSLfalse serverTimezoneAsiaShanghai username root password ciel ds type comalibabadruidpoolDruidDataSource driverClassName commysqlcjjdbcDriver url jdbcmysqlmysqlcielcl ds seUnicodetrue characterEncodingUTF useSSLfalse serverTimezoneAsiaShanghai username root password ciel sharding defaultdatabasestrategy inline shardingcolumn id algorithmexpression dsid tables torder actualdatanodes ds torder tablestrategy inline shardingcolumn id algorithmexpression torderid keygenerator column id type SNOWFLAKE torderitem actualdatanodes ds torderitem tablestrategy inline shardingcolumn orderid algorithmexpression torderitemorderid props sql show true Bug Report For English only other languages will not accept Before report a bug make sure you have Searched open and closed GitHub issues Read documentation ShardingSphere Doc Please pay attention on issues you submitted because we maybe need more details If no response more than days and we cannot reproduce it on current information we will close it Please answer these questions before submitting your issue Thanks Which version of ShardingSphere did you use Which project did you use ShardingJDBC or ShardingProxy ShardingJDBC Expected behavior insert table success Actual behavior sql not use route products all table sql and mybatis exception Reason analyze If you can I guess columns is too many couse sql analysis exception when structuring sqlStatementContext shardingConditions is empty because there is no insertValueContexts in sqlStatementContextso not use table rule and setting parameters exception debug exception orgmybatisspringMyBatisSystemException nested exception is orgapacheibatisexceptionsPersistenceException Error updating database Cause javalangIllegalStateException The error may involve defaultParameterMap The error occurred while setting parameters SQL INSERT INTO orders id orderId outOrderId orderType state createDate paymentDate issueDate orderpayment paymentStatus splitTag orderCategory mergeDate isSysMerge mergeNumber liangpinTag logisticStatus logisticVendorType logisticVendor paidAmount isUrgent username baseStore paymentType shadphoneNumber shadmobilephone shadcountrySubentity shadcityName shadname shadaddressLine shadaddressLine shippingFirstName shadpostalZone shadlatitudeValue shadlongitudeValue shadcountryIso Alpha Code shadcountryName discount carriageFee serviceCharge providerCode version source buyerMemo sellerMemo invoicecontactchannelCode invoicecontactelectronicMail invoicecontactname invoicecontactnote invoicecontacttelefax invoicecontacttelephone invoicecontactvalue invoicecontactbuyer invoicecontacttaxpayernum needinvoice createdstate prioritylevelcode shippingtaxcategory financeMemo modifiedtime reissuereason storememo scheduledshippingdate oriorderid lastname reissuetype contactchannelCode contactelectronicMail contactname contactnote contacttelefax contacttelephone contactvalue parentorder invoicetype emailid shippingandhandling invoicecontent shippinglastname customerlocale currencycode employeeid shippingmethod firstname creationtime invoicetitle expressSend typecode tenant alipayno VALUES OrderData single OrderData single OrderData single OrderData single OrderData single OrderData single OrderData single OrderData single OrderData single OrderData single OrderData single OrderData single OrderData single OrderData single OrderData single OrderData single OrderData single OrderData single OrderData single OrderData single Cause javalangIllegalStateException at orgmybatisspringMyBatisExceptionTranslatortranslateExceptionIfPossibleMyBatisExceptionTranslatorjava at orgmybatisspringSqlSessionTemplateSqlSessionInterceptorinvokeSqlSessionTemplatejava at comsunproxyProxy insertUnknown Source at orgmybatisspringSqlSessionTemplateinsertSqlSessionTemplatejava at orgapacheibatisbindingMapperMethodexecuteMapperMethodjava at orgapacheibatisbindingMapperProxyinvokeMapperProxyjava at comsunproxyProxy batchSaveOrderUnknown Source at comlppzomscreateserviceCreateOrderServiceImplcreateOrdersToDBCreateOrderServiceImpljava at sunreflectNativeMethodAccessorImplinvoke Native Method at sunreflectNativeMethodAccessorImplinvokeNativeMethodAccessorImpljava at sunreflectDelegatingMethodAccessorImplinvokeDelegatingMethodAccessorImpljava at javalangreflectMethodinvokeMethodjava at orgspringframeworkaopsupportAopUtilsinvokeJoinpointUsingReflectionAopUtilsjava at orgspringframeworkaopframeworkReflectiveMethodInvocationinvokeJoinpointReflectiveMethodInvocationjava at orgspringframeworkaopframeworkReflectiveMethodInvocationproceedReflectiveMethodInvocationjava at orgspringframeworktransactioninterceptorTransactionAspectSupportinvokeWithinTransactionTransactionAspectSupportjava at orgspringframeworktransactioninterceptorTransactionInterceptorinvokeTransactionInterceptorjava at orgspringframeworkaopframeworkReflectiveMethodInvocationproceedReflectiveMethodInvocationjava at orgspringframeworkaopframeworkJdkDynamicAopProxyinvokeJdkDynamicAopProxyjava at comsunproxyProxy createOrdersToDBUnknown Source at comlppzomscreateserviceOrderCreateServiceImplcreateBatchOrderOrderCreateServiceImpljava at sunreflectNativeMethodAccessorImplinvoke Native Method at sunreflectNativeMethodAccessorImplinvokeNativeMethodAccessorImpljava at sunreflectDelegatingMethodAccessorImplinvokeDelegatingMethodAccessorImpljava at javalangreflectMethodinvokeMethodjava at orgspringframeworkaopsupportAopUtilsinvokeJoinpointUsingReflectionAopUtilsjava at orgspringframeworkaopframeworkReflectiveMethodInvocationinvokeJoinpointReflectiveMethodInvocationjava at orgspringframeworkaopframeworkReflectiveMethodInvocationproceedReflectiveMethodInvocationjava at orgspringframeworktransactioninterceptorTransactionAspectSupportinvokeWithinTransactionTransactionAspectSupportjava at orgspringframeworktransactioninterceptorTransactionInterceptorinvokeTransactionInterceptorjava at orgspringframeworkaopframeworkReflectiveMethodInvocationproceedReflectiveMethodInvocationjava at orgspringframeworkaopframeworkJdkDynamicAopProxyinvokeJdkDynamicAopProxyjava at comsunproxyProxy createBatchOrderUnknown Source at comlppzomscreateconsumerCreateConsumer doBizCreateConsumerjava at comlppzomscreatehelperMQServiceImpl doBizMQServiceImpljava at comlppzomscreatehelperMQServiceImpl doBizMQServiceImpljava at comlppzutilrocketmqlistenerBaseLppzMessageListenerdoHandleMsgListBaseLppzMessageListenerjava at comlppzutilrocketmqlistenerlockBaseLppzLockMessageListenerdoHandleMsgListBaseLppzLockMessageListenerjava at comlppzutilrocketmqdisruptorBaseLockRocketHandlerhandleBaseLockRocketHandlerjava at comlppzutilrocketmqdisruptorBaseLockRocketMqEventHandleronEventBaseLockRocketMqEventHandlerjava at comlppzutilrocketmqdisruptorBaseLockRocketMqEventHandleronEventBaseLockRocketMqEventHandlerjava at comlmaxdisruptorBatchEventProcessorrunBatchEventProcessorjava at javalangThreadrunThreadjava Steps to reproduce the behavior such as SQL to execute sharding rule configuration when exception occur etc shardingRule defaultDataSourceName ds defaultDatabaseStrategy standard preciseAlgorithmClassName comlppzssalgorithmHashPreciseShardingAlgorithm shardingColumn id defaultTableStrategy standard preciseAlgorithmClassName comlppzssalgorithmHashPreciseShardingAlgorithm shardingColumn id defaultKeyGenerator column id props type SNOWFLAKE tables busipromotioninfo actualDataNodes ds busipromotioninfo orders actualDataNodes ds orders orderlines actualDataNodes ds orderlines ordersharding actualDataNodes ds ordersharding outorderidgenerator actualDataNodes ds outorderidgenerator paymentinfo actualDataNodes ds paymentinfo shipments actualDataNodes ds shipments Example codes for reproduce this issue such as a github link QQ befort version like RC its worked well Only modified here but it is not clear whether only the first table was judged for other reasons before see orgapacheshardingsphereencryptrewritetokengeneratorimplEncryptProjectionTokenGeneratorgenerateSQLTokens Override public CollectionSubstitutableColumnNameToken generateSQLTokensfinal SQLStatementContext sqlStatementContext CollectionSubstitutableColumnNameToken result new LinkedList OptionalSelectItemsSegment selectItemsSegment sqlStatementContextgetSqlStatementfindSQLSegmentSelectItemsSegmentclass PreconditionscheckStateselectItemsSegmentisPresent String tableName sqlStatementContextgetTablesContextgetSingleTableName OptionalEncryptTable encryptTable getEncryptRulefindEncryptTabletableName if encryptTableisPresent return CollectionsemptyList for SelectItemSegment each selectItemsSegmentgetgetSelectItems if isEncryptLogicColumneach encryptTableget resultaddgenerateSQLTokenColumnSelectItemSegment each tableName return result 