Hi I am trying to create a tibble of posterior predictions with the function addpredicteddraws and keep running into this error Error in b dataZt Cholmod error problem too large at file Corecholmoddensec line Im not sure how best to add a brief reprex here but can send you my code and data if it helps Once is released It is not clear from the documentation what the intended usage is for outputs from stanlm or stanlm where you do not have hierarchies to pass to gatherdraws or spreaddraws For example fitting a very simple model with stanlm librarytidyverse libraryrstan libraryrstanarm librarytidybayes teststanlm stanlmmpg cyl disp hp drat wt vs am gear data mtcars prior R location seed Using the standard functions in this case throws errors as I am not sure how to pass the keys in here should I just use tidydraws here These seems like the obvious answer and it works but the documentation for the function does talk about how it is mainly used by the other routines so I am curious what is the most userfriendly or intended way to proceed with a model like this in tidybayes Great work on the package hugely useful Hi there great package I was wondering whether you might be interested in adding a new ggplot stat and geom I recently wanted to plot a twodimensional HPD region for the posterior predictions of my model Because of my bounded outcome variable I was unhappy with the normal approximation created with statellipse Merging emdbookHPDregionplot and StatContour I came up with the following solution based on MASSkde d r Contours of a HDP region estimate param prob Numeric Probability level of the HDP region inheritParams ggplot statdensity d inheritParams MASSkde d param return export stathpd d functionmapping NULL data NULL geom polygon position identity narm FALSE showlegend NA inheritaes TRUE n prob ggplot layer stat StatHPDContour data data mapping mapping geom geom position position showlegend showlegend inheritaes inheritaes params listnarm narm n n prob prob StatHPDContour ggplot ggproto hpd d Stat computegroup function data scales narm FALSE h NULL n prob if isnullh h cMASSbandwidthnrddatax MASSbandwidthnrddatay dens MASSkde ddatax datay h h n n lims cscalesxdimension scalesydimension df dataframeexpandgridx densx y densy z asvectordensz dfgroup datagroup dx diffdensx dy diffdensy sz sortdensz c cumsumsz dx dy breaks sapplyprob functionx withCallingHandlers statsapproxc sz xout xy warning functionw if greplcollapsing to unique x values wmessage invokeRestartmuffleWarning ggplot StatContourcomputepaneldf scales breaks breaks requiredaes cx y Heres an example r libraryggplot ggplotdata iris aesx SepalLength y SepalWidth color Species stathpd daesfill Species prob alpha linetype size geompointsize alpha stathpd If this is something youd be interested in Id be happy to expand this into a PR add a geom create aliases such as stathpd d etc What do you think Today I was working with a brms model containing a gaussian proccess term predicteddraws with default settings didnt return results in the time I was patient to wait so I set n and then it worked Playing with n I found out that for this model prediction is very slow I then tried fitteddraws and had the same problem there but unlike with predicteddraws specifying n didnt solve the problem Looking through the source code via the debugger I found that the line causing the problem is where fittedpredicteddrawsbrmsfit is called which in turn calls brmsfittedbrmsfit Indeed calling brmsfittedbrmsfit by hand with the same arguments from the global environment gave me the same problem It was because n was not passed on In the global environment I could add nsamples to the call of brmsfittedbrmsfit which solved the problem Now two things I wasnt able to test whether changing fitteddrawsbrmsfit accordingly actually solved the problem because my RWizardry didnt suffice to be able to execute the patched function in the correct environment There might be good reasons why n isnt passed on which I dont know about So while at first sight this appears like an oversight I suspect it could actually be intentional I didnt try to read all the sourcecode to see if there is any reason not to pass n on Edit Im aware that a sample size of is very little Thats not my point here I only used that number for testing purposes Currently it is not as fast as it could be see and With new optimizations spurred on by spreaddraws and gatherdraws should be fast in most cases even with large numbers of parameters However tidydraws can still be somewhat slow when there are lots of parameters One way to deal with this is call tidydraws once ahead of time and only use pretidied draws with spreaddraws and gatherdraws Could be useful to document this pattern And add fittedpredicted draws as well The nested format worked very well at speeding up spreaddraws by nesting draws and then leaving off chain information until the end This vastly improves the performance of some reshaping operations that are currently expensive split off from When noncore say noncore tidyverse rstan packages are used explicitly mention this before those code chunks andor inside them using to help folks see where less familiar functions are coming from In the current READMERmd some stan code is executed directly and so is not clear from a replication standpoint in the READMEmd Under the stan model may I suggest adding that it can be stored as a string in ABCstancode and then that something like ABCstan rstanstanmodelmodelcode ABCstancode or such That way those hoping to run the sampling lines are aware of how to produce the stan model Also making the imports visible would help me at least as I dont inherently know all of the functions so have to hunt for them if the imports arent shown