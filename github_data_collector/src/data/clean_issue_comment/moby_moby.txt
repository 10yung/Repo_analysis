Hello We have computers where just installing docker set the default bridge network to the more of them and on some others computers this network is set to Docker dont seems consistent on this this was the exactly same installation process using Vagrant deployment No problem i think this is because of some internal mechanism The problem is we wanted to set for all so we have set in daemonjson bip Docker cannot restart with this bip setting But if we set bip it works For information we tested on several computers having already the native and they cant either this is not a problem of adresse availability on the computer The only other network on all computers is eth with a xxxxxx network So there is no networkip overlap Question please the bug Is it a bug that we cannot set bip but only bip As result we cannot have the IP address if we use bip option so only starting from But native configuration have it Question please impact Is it a problem for docker or all will work ok with instead Thanks a lot Description Im working with K S and Ive got severe issue with docker The log time T Z levelerror msgfailed to get event errorrpc error code Unavailable desc all SubConns are in TransientFailure latest connection error connection error desc transport Error while dialing dial unix runcontainerdcontainerdsock connect connection refused modulelibcontainerd namespacepluginsmoby this error is in a permanent loop I do not use snap and snap has never been install on this machine so this pb is not link to a snap install I use a classic docker version Docker version build a df ba If someone as any idea to fix it or find the reason Steps to reproduce the issue I dont know as I just use my K S Describe the results you received Describe the results you expected Additional information you deem important eg issue happens only occasionally Output of docker version Docker version build a df ba Output of docker info docker info Containers Running Paused Stopped Images Server Version Storage Driver overlay Backing Filesystem extfs Supports dtype true Native Overlay Diff true Logging Driver jsonfile Cgroup Driver cgroupfs Plugins Volume local Network bridge host macvlan null overlay Log awslogs fluentd gcplogs gelf journald jsonfile local logentries splunk syslog Swarm inactive Runtimes runc Default Runtime runc Init Binary dockerinit containerd version NA runc version e d a fabd a ad d a eeede f init version fec Security Options apparmor seccomp Profile default Kernel Version generic Operating System Ubuntu LTS OSType linux Architecture x CPUs Total Memory GiB Name b ee d e da cd ID CNN IF P EDQKUAX D IO K FUEYX M VXTBUFHIQBLG Docker Root Dir varvcapdatadockerdocker Additional environment details AWS VirtualBox physical etc If you are reporting a new issue make sure that we do not have any duplicates already open You can ensure this by searching the issue list for this repository If there is a duplicate please close your issue and add a comment to the existing issue instead If you suspect your issue is a bug please edit your issue description to include the BUG REPORT INFORMATION shown below If you fail to provide this information within days we cannot debug your issue and will close it We will however reopen it if you later provide the information For more information about reporting issues see GENERAL SUPPORT INFORMATION The GitHub issue tracker is for bug reports and feature requests General support for docker can be found at the following locations Docker Support Forums Slack communitydockercom general channel Post a question on StackOverflow using the Docker tag General support for moby can be found at the following locations Moby Project Forums Slack communitydockercom mobyproject channel Post a question on StackOverflow using the Moby tag BUG REPORT INFORMATION Use the commands below to provide key information from your environment You do NOT have to include this information if this is a FEATURE REQUEST Description dockerd ignores the defaultaddresspool option Steps to reproduce the issue cat emptyjson cat daemonjson defaultaddresspools base size dockerd configfile daemonjson while true do docker network create n devnull docker network inspect n format json jq IPAMConfig Subnet docker network rm n devnull done dockerd defaultaddresspool base size configfile emptyjson while true do docker network create n devnull docker network inspect n format json jq IPAMConfig Subnet docker network rm n devnull done Describe the results you received docker network create uses and networks Describe the results you expected docker network create should use networks which are specified by the defaultaddresspool option Additional information you deem important eg issue happens only occasionally dockerd help defaultaddresspool pooloptions Default address pools for node specific local networks Can be confusing because the name of the option in the daemonjson is plurar and the option on the CLI is singular Output of docker version Client Docker Engine Community Version API version Go version go Git commit a ea Built Wed Nov OSArch linuxamd Experimental false Server Docker Engine Community Engine Version API version minimum version Go version go Git commit a ea Built Wed Nov OSArch linuxamd Experimental false containerd Version GitCommit b a c af e c db c f fa runc Version rc dev GitCommit e f a c f e d a c b d aa dockerinit Version GitCommit fec Output of docker info Client Debug Mode false Server Containers Running Paused Stopped Images Server Version Storage Driver overlay Backing Filesystem extfs Supports dtype true Native Overlay Diff true Logging Driver jsonfile Cgroup Driver cgroupfs Plugins Volume local Network bridge host ipvlan macvlan null overlay Log awslogs fluentd gcplogs gelf journald jsonfile local logentries splunk syslog Swarm inactive Runtimes runc Default Runtime runc Init Binary dockerinit containerd version b a c af e c db c f fa runc version e f a c f e d a c b d aa init version fec Security Options apparmor seccomp Profile default Kernel Version generic Operating System Ubuntu LTS OSType linux Architecture x CPUs Total Memory GiB Name REDACTED ID SF MPRNHSXW MR WNUL JIAUQUA BAWQ CWGE GYL VV F Docker Root Dir varlibdocker Debug Mode false Registry Labels Experimental false Insecure Registries Live Restore Enabled true WARNING No swap limit support Additional environment details AWS VirtualBox physical etc If you are reporting a new issue make sure that we do not have any duplicates already open You can ensure this by searching the issue list for this repository If there is a duplicate please close your issue and add a comment to the existing issue instead If you suspect your issue is a bug please edit your issue description to include the BUG REPORT INFORMATION shown below If you fail to provide this information within days we cannot debug your issue and will close it We will however reopen it if you later provide the information For more information about reporting issues see GENERAL SUPPORT INFORMATION The GitHub issue tracker is for bug reports and feature requests General support for docker can be found at the following locations Docker Support Forums Slack communitydockercom general channel Post a question on StackOverflow using the Docker tag General support for moby can be found at the following locations Moby Project Forums Slack communitydockercom mobyproject channel Post a question on StackOverflow using the Moby tag BUG REPORT INFORMATION Use the commands below to provide key information from your environment You do NOT have to include this information if this is a FEATURE REQUEST Description dockercompose run allows spawning a container based on a service template from the compose file with overrides from command line flags This is useful for spawning oneoff containerseg jobs using the same environment as a service without having to specify on the command line the full service specs Also very useful for debugging purposeswhy is this service failing start a shell in a container using the same template as the service to look around and test While one can still use dockercompose run with a stack file useful swarmspecific options wont be supported like configs and secrets Maybe the issue is more that dockercompose and docker run dont support those options But it would be nice to have a coherent complete API that covers all use case with docker stack Additional information you deem important eg issue happens only occasionally Output of docker version Client Docker Engine Community Version API version Go version go Git commit a ea Built Wed Nov OSArch linuxamd Experimental false Server Docker Engine Community Engine Version API version minimum version Go version go Git commit a ea Built Wed Nov OSArch linuxamd Experimental false containerd Version GitCommit b a c af e c db c f fa runc Version rc dev GitCommit e f a c f e d a c b d aa dockerinit Version GitCommit fec If you are reporting a new issue make sure that we do not have any duplicates already open You can ensure this by searching the issue list for this repository If there is a duplicate please close your issue and add a comment to the existing issue instead If you suspect your issue is a bug please edit your issue description to include the BUG REPORT INFORMATION shown below If you fail to provide this information within days we cannot debug your issue and will close it We will however reopen it if you later provide the information For more information about reporting issues see GENERAL SUPPORT INFORMATION The GitHub issue tracker is for bug reports and feature requests General support for docker can be found at the following locations Docker Support Forums Slack communitydockercom general channel Post a question on StackOverflow using the Docker tag General support for moby can be found at the following locations Moby Project Forums Slack communitydockercom mobyproject channel Post a question on StackOverflow using the Moby tag BUG REPORT INFORMATION Use the commands below to provide key information from your environment You do NOT have to include this information if this is a FEATURE REQUEST Description When deploying using docker stack deploy I often end up with failed tasks for example because scheduling order is nondeterministic and some services try to start before their dependencies Or if theres a misconfiguration for some services or an application bug somewhere and then I fix it and redeploy those services will be updated and new tasks scheduled Using docker service logs to debug and check tasks status becomes inconvenient since logs of all tasks ever created for that service are mixed together and it seems logs of oldnow dead tasks keep popping up in the middle of logs from currently running tasks Suggestions option flag to force total ordering by timestamp so that newer logs always show up first taskfilter flag for docker service logs command to filter which tasks should be looked ateg taskfilter currentstaterunning Additional information you deem important eg issue happens only occasionally Output of docker version Client Docker Engine Community Version API version Go version go Git commit a ea Built Wed Nov OSArch linuxamd Experimental false Server Docker Engine Community Engine Version API version minimum version Go version go Git commit a ea Built Wed Nov OSArch linuxamd Experimental false containerd Version GitCommit b a c af e c db c f fa runc Version rc dev GitCommit e f a c f e d a c b d aa dockerinit Version GitCommit fec The node discovery feature was added to implement overlay networks with an external kv store With swarm standalone being in maintenance mode and SwarmKit providing all functionality to create overlay networks which could be used for standalone swarm if created with the attachable option we should deprecate this feature and remove it deprecateremove clusteradvertise clusterstore clusterstoreopt flags from dockerd CLI remove options from libnetwork hidedeprecate flags and print error instead remove equivalent options from daemonjson or produce error update reference docs remove flags from dockerd command line reference remove flags from dockerd man page Remove the Overlay networking with an external keyvalue store documentation The following flags will be removeddeprecated on the dockerd daemon clusteradvertise string Address or interface name to advertise clusterstore string URL of the distributed storage backend clusterstoreopt map Set cluster store options default map this is just a placeholder to start the discussion Ill add more information about things to change This allows for users to actually use githubcommobymoby imports instead of relying on github to properly resolve the repo Please make sure youve read and understood our contributing guidelines Make sure all your commits include a signature generated with git commit s For additional information on our contributing process read our contributing guide If this is a bug fix make sure your description includes fixes xxxx or closes xxxx Please provide the following information What I did Engaged the next step in dockers rename to moby How I did it rg githubcomdockerdocker l xargs sed i sgithubcomdockerdockergithubcommobymoby rg import githubcommoby l xargs sed i s import How to verify it Running tests Description for the changelog Rename imports to moby define PREFIX in base stage All uses of PREFIX are currently the same so might as well set it as an ENV in the base stage remove INSTALLBINARYNAME envs Using a variable here doesnt seem to add much so inlining the value instead mount install scripts instead of copying These scripts are only used to build the binaries and the scripts themselves dont have to be persisted in an image so we can mount them instead of copying to the stage BuildKit is planned to replace the classic builder and has been available as an optin feature since Docker BuildKit provides many enhancements over the classic builder fixes bugs that cannot be fixed or cannot easily be fixed in the classic builder and is overall recommended to be used if supported on the users platform So far BuildKit was still optin which makes it harder to use not all users are even aware of the new builder but also inconsistent with our recommendation Im opening this issue to discuss the option to make BuildKit the default builder in the next docker release Proposal make BuildKit the default builder on Linux Toggle the default if no environment variable or daemon configuration is set BuildKit will be used by default Document the classic builder to be in maintenance Bugs can be fixes but within limits no extensive modifications Featureparity enhancements can be made but should where possible be limited to fixes that affect Windows which does not yet have BuildKit support Users are still able to disable BuildKit DOCKERBUILDKIT or the equivalent daemonjson configuration Update the documentation to document new features where needed Why BuildKit is not yet the default We made BuildKit an optin feature get a wider audience for testing the new builder in many scenarios allowing us to catch important regressions without breaking existing users While stability and regressions have been addressed and were confident that BuildKit is a good replacement for most scenarios there were still some things left to be done No support on Windows For BuildKit to be used on Windows additional changes are still needed eg changes to the runtime using containerd Work on this is still in progress but there is no definitive ETA Feature parity The classic builder received some advanced options over the years not all of those are implemented yet in BuildKit and for some of those no decision has been made yet if they will be implemented or implemented in different ways See the Feature parity advanced options supported by BuildKit section below with more details Even though both of the above still hold true I think it makes sense to switch BuildKit to be the default Linux and Windows will never have full feature parity Theyre different platforms and not all things possible on Linux will be possible on Windows and viceversa There are already differences between both platforms and having a different builder will not substantially change that situation It should be properly documented though Most of the options that are not yet supported are for advanced usecases and wont be used by most users While switching the default to BuildKit would affect users of those advanced options not switching is probably worse users dont get the best experience out of the box Prerequisites Review the missing features and changes in behavior between BuildKit and the classic builder Decide if any of those options should be considered a blocking option Blocking issues estimate if they can be fixedaddressed before the next release Nonblocking issues update the documentation and prepare release notes to describe differences Create tracking issues for missing options that should be implemented in future roadmap Feature parity advanced options supported by BuildKit Note I also added a areafeatureparity label in the BuildKit repository to make it easier to find issues and pull requests related to featureparity with the classic builder Debugging is more complicated with BuildKit because no intermediate containers nor intermediate images are created therefore its not easily possible to debug failures in build by starting a container from the intermediate step document steps workarounds recommendations on how to debug build failures when using BuildKit create a planroadmap on how this can be improved in future Build progress is printed on stderr instead of stdout see This is a bugfix by design but is a change in behavior that should be called out changelog document change in behavior consider adding Successfully built Successfully tagged output BuildKit does not use intermediate images for caching but uses a dedicated buildcache While this has many advantages it also makes it less discoverable where diskspace is consumed by Docker many users are familiar with the old way and remove dangling images to clean up disk space consider enabling BuildKit garbagecollection by default improve documentation around managing buildcache and garbagecollection related for Docker Desktop consider adding configuration options in the Docker Desktop UI to make the garbagecollection options better discoverable and to make it easier to configure List of options and their status in BuildKit Note that the current CLI always shows all options even if not supported but added annotations to hide unsupported options currently only on master Looking at these options Some of these options may need discussion wether or not they will be supported by BuildKit or should be marked deprecated Decide if any of these options are a blocker for switching the default builder or a nice to have and are ok to be implemented in future updates Note that users are still able to optout by setting DOCKERBUILDKIT or disabling BuildKit to be the default in the daemon configuration Status Option NotesTracking whitecheckmark addhost whitecheckmark buildarg whitecheckmark cachefrom question cgroupparent question cpuperiod question cpuquota question c cpushares question cpusetcpus question cpusetmems whitecheckmark disablecontenttrust whitecheckmark f file whitecheckmark forcerm noop not needed for BuildKit Needs to be documented whitecheckmark iidfile question isolation windowsonly should be hidden whitecheckmark label question m memory question memoryswap question construction network only none and host but no custom networks see whitecheckmark nocache whitecheckmark o output BuildKitonly feature whitecheckmark platform whitecheckmark progress BuildKitonly feature whitecheckmark pull whitecheckmark q quiet whitecheckmark rm noop not needed for BuildKit Needs to be documented whitecheckmark secret BuildKitonly feature question securityopt question shmsize construction squash Partial support docker build squash should not squash the base image This feature is still experimental so should not be a blocker whitecheckmark ssh BuildKitonly feature whitecheckmark t tag whitecheckmark target question ulimit hasnt been updated since hasnt been updated since 