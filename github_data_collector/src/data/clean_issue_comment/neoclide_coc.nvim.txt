This will only take effect when cocpreferencesformatOnType is true and will only check this setting when not empty in order to avoid breaking change close I have around different coc extensions I reckon I am not the only one thus this would be nice if we had an opportunity to see how many plugins were installed in percentages easier to implement approach or as a progress bar a bit more difficult but still implementable once you have the percentages I think it might be more userfriendly The function for format file on saving file can be customized for certain file types but Iit seems that cocpreferencesformatOnType can only be toggle by true or false Is it possible to expand this setting for file types customization Warning We will close the bug issue without the issue template and the reproduce ways If you have question please ask at If the problem related to specific language server please checkout If your have performance issue checkout Result from CocInfo versions vim version VIM Vi IMproved May compiled Jul node version v cocnvim version a dec term iTermapp platform darwin Messages Messages maintainer Bram Moolenaar Bramvimorg cocnvim No ESLint configuration eg eslintrc found for file Usersjacobsandlunddevdotfilestestts change before seconds ago cocnvim No ESLint configuration eg eslintrc found for file Usersjacobsandlunddevdotfilesotherts Output channel tsserver Info AM Forking TSServer PATH UsersjacobsandlundrbenvshimsUsersjacobsandlundcargobinUsersjacobsandlundgobinApplicationsMacVimappContentsbinusrlocaloptpostgresql binusrlocaloptpython libexecbinusrlocalbinusrbinbinusrsbinsbinUsersjacobsandlundrbenvshimsUsersjacobsandlundcargobinUsersjacobsandlundgobinApplicationsMacVimappContentsbinusrlocaloptpostgresql binusrlocaloptpython libexecbinUsersjacobsandlundfzfbin Info AM Started TSServer path Usersjacobsandlundconfigcocextensionsnodemodulescoctsservernodemodulestypescriptlib pathLabel api versionString version Output channel eslint Info AM ESLint server running in node v Info AM ESLint library loaded from usrlocallibnodemoduleseslintlibapijs Describe the bug Quite often if I CtrlC to exit insert mode some of the helpful autosuggestions that appear in the pop up near the cursor whats that thing called dont go away They stay there even if I CtrlL or redraw The only way to get them to go away is to trigger another autosuggestion by pressing tab or a key that triggers autocomplete Reproduce the bug The vanilla minivim was enough to reproduce the bug but it took using the arrow keys to select a very long suggestion option and then CtrlCing in order to reproduce it But it did reproduce after a while Screenshots below vim set nocompatible set runtimepath pathtococnvim filetype plugin indent on syntax on set hidden Start neovim with command vim u minivim Operate vim Screenshots optional With minivim Sometimes it seems like its most often a problem with the extra pop up providing additional information on the side This was taken before CtrlC And after Thanks for an awesome plugin I use it all the time and it is a huge improvement to my workflow Result from CocInfo vim version NVIM v g ef f node version v cocnvim version f a term xterm color platform linux Describe the bug It seems that the function triggerSignatureHelp tries to determine the position parameter for signature help by which should work fine for most languages But for Lisplike languages this may be problematic For example in the following scenario the position will be incorrect clojure outerfunc parama paramb innerfunc param param Cursor cocnvim will send the position of this character Actual function whose parameters are being filled in Reproduce the bug I found this behaviour when Im trying to implement the signature help function for clojurelsp and I think the reproduction steps arent really necessary because this can be seen in the code But if this is indeed a nonexisting problem or Ive missed something somewhere please kindly tell me img width altScreen Shot at PM src I try to debug where this error comes from any hints will be appreciated coc document workspace configuration files is higher priority than user configuration files my config use configuration files cocConfig gitenableGutters false workspace configuration files cocLocalConfig gitenableGutters true workspace configuration file can not cover user configuration file cocgit not activated Other coc plugins has the same problem env vim version NVIM v node version v cocnvim version db ffd ff term iTermapp platform darwin Update After a bit more thinking I realized the Set is not needed and I have brought this pull request back to one line Tried to clarify the issue this pull request solves When root patterns are defined in lsp configuration like vue command vls filetypes vue rootPatterns vueconfigjs They will still be merged with root patterns from the language server extension so instead of looking for vueconfigjs which you would expect coc will look for packagejson vueconfigjs packagejson is coming cocveturs packagejsons root patterns contributes rootPatterns filetype vue patterns packagejson vueconfigjs Let me try to clarify this with an example Project structure projectpackagejson projectpackagesfrontendpackagejson projectpackagesfrontendvueconfigjs projectpackagesfrontendsrcAppvue old situation before this patch Open projectpackagesfrontendsrcAppvue Cocnvim will determine root Patterns as packagejson vueconfigjs Cocnvim will try to resolve workspace folder and will match project since it starts scanning from bottom up and packagejson is still in the root patterns new situation after this patch Open projectpackagesfrontendsrcAppvue Cocnvim will determine root Patterns as vueconfigjs Cocnvim will try to resolve workspace folder and will now match projectpackagesfrontend since it starts scanning from bottom up and packagejson is not defined in the root patterns anymore Result from CocInfo versions vim version NVIM v g a a node version v cocnvim version f a term xterm color platform linux Info PM Highlight server running in node v Describe the bug This only happens with nvim CocAction or CocList not exhaustive makes nvim crashes Message not related to coc displayed on terminal when it crashes nvim hometravisbuildneovimbotcibuildneovimdepsbuildsrclibuvsrcunixstreamc uvwrite Assertion nbufs failed Reproduce the bug Download nvimappimage from Give execute permission to nvimappimage with sh chmod x nvimappimage Create file minivim with vim set nocompatible set runtimepath localsharenvimpluggedcocnvim filetype plugin indent on syntax on set hidden function Foobar let foo systembar endfunction set statuslineFoobar set termguicolors Start neovim with command nvimappimage u minivim Type CocAction or CocList Warning We will close the bug issue without the issue template and the reproduce ways If you have question please ask at If the problem related to specific language server please checkout If your have performance issue checkout Result from CocInfo versions vim version VIM Vi IMproved Dec compiled Dec node version v cocnvim version term dumb platform linux NOTE Its running on WSL Windows Subsystem for Linux Debian on Windows Messages Messages maintainer Bram Moolenaar Bramvimorg Output channel highlight Info AM Highlight server running in node v Run CocInfo command and paste the content below Describe the bug I just discovered a very annoying loop that slows down vim to halt This is tested with a clean vimrc none cocnvim and only happens with cochighlight installed just open vim then repeatedly h type and close with bd times and the time it hangs with Error on request CocAutocmd timeout after s When it finally returns Vim seems fairly responsive until I quit vim with q and it halts again and I again get Error on request CocAutocmd timeout after s I tried to watch log meanwhile didnt produce anything useful in CocOpenLog with COCLOGLEVELdebug I also tried hooking up the inspector this did not follow the execution without any breakpoints so I was clueless where to break or if this would work at all I didnt see errors though I found out it can only be reproduced with cochighlight installed This is with no vimrc and only cochighlight installed without cochighlight cannot be reproduced As this did not reproduce when opening main help page h but only h type I can only assume maybe some extension is reacting to the content in h type As I know this problem is probably hard to reproduce I politely ask what might be running with CocAutocmd with extensions when a buffer is closed or deleted specifically with cochighlight could it be the Output channel Maybe its something like a NULL situation where something is trying to reach the buffer just deleted with bd Or a procedure running on every buffer exit even q Could this be OutputChannel WHY even bother Well I kept discovering a node instance consuming considerable CPU and my Vim frozen at random occassions so I tried to figure out what was causing this inbetween writing and visiting h files this made my vim unusable from time to time without knowing the cause I could not reproduce those steps easily happening at random so this is the next best thing as its the shortest path to same error Reproduce the bug Clean vim no vimrc cocnvim from git and cochighlight installed Enter h type and exit with bd approximately times Screenshots optional If applicable add screenshots to help explain your problem 