MSVC build was failing under Visual Studio with CMake v and v generated project files Compiler clexe was failing with following error code for all GCC specific compiler flags bash cl Command line error D invalid numeric argument Wextra CHECKCXXCOMPILERFLAG evaluates with GCC specific compiler flags to positive result Parse the number according to the JSON grammar ignoring the current locale Please review and merge this pull request Thanks artwyman In file included from homegenstortoolchainjson masterjsonjson cpp homegenstortoolchainjson masterjsonjson hpp error virtual const json Json json JsonValueoperator const string const was hidden Werroroverloadedvirtual virtual const Json operator const stdstring key const homegenstortoolchainjson masterjsonjson cpp error by virtual const json Json json JsonArrayoperator sizet const Werroroverloadedvirtual const Json operator sizet i const override In file included from homegenstortoolchainjson masterjsonjson cpp homegenstortoolchainjson masterjsonjson hpp error virtual const json Json json JsonValueoperator sizet const was hidden Werroroverloadedvirtual virtual const Json operator sizet i const homegenstortoolchainjson masterjsonjson cpp error by virtual const json Json json JsonObjectoperator const string const Werroroverloadedvirtual const Json operator const string key const override With set CMAKECXXFLAGSDEBUG CMAKECXXFLAGSDEBUG g fnoomitframepointer fsanitizeaddressundefined set CMAKELINKERFLAGSDEBUG CMAKELINKERFLAGSDEBUG fnoomitframepointer fsanitizeaddressundefined I get the following report usrincludec bitssharedptrbaseh runtime error member call on address x b which does not point to an object of type Spcountedbase x b note object has invalid vptr f b f be be be be invalid vptr usrincludec bitssharedptrbaseh runtime error member call on address x b which does not point to an object of type Spcountedbase x b note object has invalid vptr f b f be be be be invalid vptr This is with git cloned a few moments ago I can dig deeper a bit later Have you tested json with asan I added the following to json hpp weepy additions operator long return long intvalue operator int return intvalue operator float return float numbervalue operator double return double numbervalue operator stdstring return stringvalue operator bool return boolvalue operator object return objectitems operator array return arrayitems It makes using json much more convenient as the compiler will auto cast your variables for you eg int id myJson id I need it Dont expose the risk of accessing objects after the end of their lifetime By adding this file the library can be added to PlatformIOs library registry This way projects built with PlatformIO can depend on json and it will be automatically downloaded from GitHub and linked with the final program Let CMake create and install json Configcmake allowing other CMake projects to easily import json as a CMaketarget by setting json DIR to the corresponding location json raises a pure virtual function call exception when trying to dump the following json params method ping id this only happens in gdb