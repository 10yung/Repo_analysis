I see some commands like sort were given the power to write back to same file However other commands like slice do not have this same power xsv slice e o sundaycsv worldcitiespopcsv wc sundaycsv sundaycsv xsv slice e o sundaycsv sundaycsv wc sundaycsv sundaycsv Is this intentional or an oversight Makefile snippet release cargo build release mkdir p binbin cp targetreleasexsv binbinxsv bin should exist already Thus the installer should copy xsv to bin To use binbin the sub directory must be added to the environment This adds a nullcount option to xsv stats that keeps track of the number of null values for each column as requested in I just added a single counter to the Stats struct rather than a new type like TypedSum etc but happy to refactor however youd like I do wonder whether this this should be enabld by default It only requires a counter per field so it seems more consistent with the current behavior for it to be enabled by default Hi Im trying to partition a very big csv file rows based on the first column xsv gets terminated with Too many open files os error error Thanks Just a minor correction You repeat the word to in the help that is printed as an answer to xsv cat h the result is always equivalent to to the minimum number of rows Hello everyone In xsv there is an option to ignore the inputs headers which is fine but we dont have an option not to output the headers Here is why I think it could be useful I often find myself wanting to pipe the output of a simple xsv select to xargs and friends But the presence of the header prevents me from doing so Does anyone knows of a clever trick to ignore the first line of a stream which is always a drag in unix and not straigthforward when dealing with CSV data since adventurous users may use carriage returns in header names sigh Or could this be a useful addition Why doesnt this work tail f filecsv xsv table This works tail filecsv xsv table Thanks cargo ef a ef rustc e Previously warning trait objects without an explicit dyn are deprecated srccmdheadersrs let mut wtr BoxioWrite help use dyn dyn ioWrite note warnbaretraitobjects on by default warning trait objects without an explicit dyn are deprecated srccmdjoinrs CliResultIoStatefsFile BoxioWritestatic help use dyn dyn ioWritestatic warning trait objects without an explicit dyn are deprecated srccmdpartitionrs type BoxedWriter csvWriterBoxioWritestatic help use dyn dyn ioWritestatic warning trait objects without an explicit dyn are deprecated srccmdsplitrs CliResultcsvWriterBoxioWritestatic help use dyn dyn ioWritestatic warning trait objects without an explicit dyn are deprecated srcconfigrs ioResultcsvWriterBoxioWritestatic help use dyn dyn ioWritestatic warning trait objects without an explicit dyn are deprecated srcconfigrs ioResultcsvReaderBoxioReadstatic help use dyn dyn ioReadstatic warning trait objects without an explicit dyn are deprecated srcconfigrs pub fn ioreader self ioResultBoxioReadstatic help use dyn dyn ioReadstatic warning trait objects without an explicit dyn are deprecated srcconfigrs pub fn iowriter self ioResultBoxioWritestatic help use dyn dyn ioWritestatic warning trait objects without an explicit dyn are deprecated srcutilrs ioResultcsvWriterBoxioWritestatic help use dyn dyn ioWritestatic warning trait objects without an explicit dyn are deprecated teststestsrs fn shrink self BoxIteratorItemCsvRecordstatic help use dyn dyn IteratorItemCsvRecordstatic note warnbaretraitobjects on by default warning trait objects without an explicit dyn are deprecated teststestsrs fn shrink self BoxIteratorItemCsvDatastatic help use dyn dyn IteratorItemCsvDatastatic warning use of deprecated item stdsyncatomicATOMICUSIZEINIT the new function is now preferred testsworkdirrs static NEXTID atomicAtomicUsize atomicATOMICUSIZEINIT help replace the use of the deprecated item AtomicUsizenew note warndeprecated on by default This is an attempt at closing and allowing reading from stdin in the join command Im not sure if using Box is less memory efficient here but I can make any updates based on suggestions The join command doesnt work with pipes as second arguments which is probably due to the implementation but it also doesnt fail gracefully The first input for join can be a pipe but the second argument needs to be a file as it needs to be seekable I have the following input file normalcsv Table works fine as it doesnt seek backwards xsv table cat normalcsv a a a b b b The first input is also not seeked xsv join a cat normalcsv a normalcsv a a a a a a b b b b b b But the second argument is seeked and if it is a pipe it leads to the following error xsv join a normalcsv a cat normalcsv a a a a a a Illegal seek os error Possible fixes ideally both Save the second argument in memory and return to there This might use a lot of ram so it should be available via command line switch Check whether the second argument is a pipe and fail gracefully Please dont just prevent pipes from being used everywhere This is really useful when composing a lot of xsv commands