Should make it more clear where hyper is Hello I would like to offer you help in creation of this middleware http library for Rust Im very new in Rust world but this language captured my mind and I want practice with it to expand language infrastructure Im also thought to create http library for rust but you was first Your early http project was good start And new teepee could be modern and high performance http library Currently Im working on headers parsing algorithm here Actually Im only at start and work in secondary branch In my opinion http library could be more granular Not just an server side or client side It could be collaboration of many simple Crates that independent to each other For example http headers parsing could be very stand alone crate that can be used not only in teepee http protocol implementation Or chunk reader that also can be used in many other custom http stream readers My current goal is to create high performance http headers parser that do not prepare all headers at start but create efficient structure to work with headers Maximum headers data should stored in raw vector and prepare for user on demand Im from NET world and there is a very useful HttpHeaders class with two descendants for request and response headers I want to create something similar but in Rust style Can we unite our projects and work together lib has been deprecated and its not possible to have multiple lib in Cargotoml Multiple crates need multiple Cargo files Ive created those inspired by nphysics Re Per the TEXT rule has been removed in RFC This probably requires some minor changes to the implementation Reference and quote the up to date RFC and not the deprecated one rename some codes according to the current accepted naming I think this is in reasonable shape Parsing of timestamps may need to be revisited in the future but overall things are working well and the type scheme is doing its job 