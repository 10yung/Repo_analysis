it would be cool to be able to pass in the latex character to be used in the equation sometimes its useful to have hat beta for example thanks Hi there great package Just a suggestion to add support for quantregrq objects r libraryequatiomatic libraryquantreg Fit a simple model mod rqmpg cyl disp data mtcars Give the results to extracteq extracteqmod Error in UseMethodextractlhs model no applicable method for extractlhs applied to an object of class rq Hi I noticed that the pkgdown site is being created in travis deploying to ghpages but the it looks like the repo settings are still pointing to the docs folder in the master branch if it is pointing to ghpages then ignore this msg You can set it to ghpages and remove the docs dir from the master which will make cloning and remotesinstallgithub faster since they wont have to copy the heavyish subdirectory anymore I was wondering if this package should adopt a more standard glm notation and this might dovetail with mixed models zero inflation and others breaking models into parts For example libraryequatiomatic dat dataframecounts c treatment gl trials glmD glmcounts treatment weights dattrials family binomial data dat extracteqglmD Currently makes But often theyre easier to express more fully including showing the info about their error distribution such as Referred via Twitter Basically Im more accustomed to my coefficients being betak k K and beta the intercept using abline is always a guessing game for me Can you think of a good API for allowing this sort of flexibility in the output Thanks in advance PS let me know if youd like a fleshed out example Im on mobile now but can come back to it from my machine later if so Hi is there a way to somehow label the equation Thank you Currently in multiequation equations each term gets its own subscript while the s do not Additionally the s are in reverse order comes first ends with r setseed df dataframeoutcome sampleLETTERS replace TRUE categorical sampleletters replace TRUE continuous rnorm continuous rnorm dfoutcome ordereddfoutcome modelologit MASSpolroutcome data df Hess TRUE tex extracteqmodelologit tex log left frac P textA geq textB P textA geq textB right alpha beta textcategorical textb beta textcategorical textc beta textcontinuous beta textcontinuous epsilon log left frac P textB geq textC P textB geq textC right alpha beta textcategorical textb beta textcategorical textc beta textcontinuous beta textcontinuous epsilon log left frac P textC geq textD P textC geq textD right alpha beta textcategorical textb beta textcategorical textc beta textcontinuous beta textcontinuous epsilon log left frac P textD geq textE P textD geq textE right alpha beta textcategorical textb beta textcategorical textc beta textcontinuous beta textcontinuous epsilon Im not sure of the math behind this does each equation get its own intercept while the s are shared across the equations like is the varying that cut point thing The order of the s should probably go instead of at least though unless that breaks convention I hardly know anything about the math here Using scale in a formula seems to cause an issue with the coefficient names r libraryequatiomatic mod lmmpg scalecyl disp mtcars extracteqmod textmpg alpha beta beta textdisp epsilon supCreated on by the reprex package v sup I started a branch for dealing with ordered logistic regression via MASSpolr Im heading out of town through the end of the work week and wont have time to work on it more but it might be worth taking a look It works okay overall but the big issue currently is that the numerator and denominator are wrapped in text and so I cant insert code like geq easily I dont think this should be a terrifically difficult fix but its something we should address Heres how it looks currently r librarymagrittr libraryrio libraryequatiomatic d import setclass tibble factorize m MASSpolrapply pared public gpa data d extracteqm img width altScreen Shot at PM src On a side note I was really happy with how little code actually had to be written to make this extension I think weve set ourselves up well for future development This is mostly just a checklist of the more important models we might want to support with fancy math In theory these are all supported automatically with broom though we might want to have a general catchall way to show nonfancy formulas x Binary logistic glm family binomiallink logit Binary probit glm family binomiallink probit Ordered logistic MASSpolr method logistic and orderedclm link logit Ordered probit MASSpolr method probit and orderedclm link probit Multinomial logistic nnetmultinom Survival regression survivalSurv Multiple ANOVA statsmanova 