We have an occasional issue where using notperf crashes profiled process in AArch HW Dont have much data yet but the callstack is as follows tid procdump usertime systemtime registers x x ff cdfdf x x x x ff cdfdf xffffffffffffffff xffffffffffffffff x xffffffffffffffff xffffffffffffffff xffffffffffffffff xffffffffffffffff xffffffffffffffff x x x f d b a x f d ec x f e a f x x f b x f b x x f f x ff ce x ff ce b x ff ce x x x ff cdfdd x f d f c x ff cdfdd x f d f c x backtrace a f d f c s gsignal o x c l xcc e S f usrlib libc so a f d s abort o x l x c e S f usrlib libc so a f d b e c s ZN nwind localunwinding abort h a eb e dE o xcc l xd e S f optmemprofaarch libmemoryprofilerso a f d b a c s nwindonexceptionthroughtrampoline o x l x e S f optmemprofaarch libmemoryprofilerso a f d c f s nwindrettrampoline o x l x e S f optmemprofaarch libmemoryprofilerso Unfortunately I dont know yet if its first or second abort in said function Did this happen before Could it be issue of application eg memory corruption or some corner case bug in notperf as this seems to be during exception handling This STOPCONT pattern is used to avoid datarace between reading proc and handling things like mmap events from the kernel isnt it Anyway we are profiling some apps that dont take it very well since STOP causes syscalls to return abnormally It should be fixed but you know it is not always that easy Therefore Im proposing a switch to disable this behavior hi any chance for adding windows support removing unix dependencies Hi So I was trying to profile rav e using notperf so after few seconds it stops its saying thread main panicked at attempt to subtract with overflow here bash vibhoothiiaanandconeBoxnotperf RUSTBACKTRACE sudo homevibhoothiiaanandnotperftargetdebugnperf record P rav e w o datafile T Z INFO nperfps Waiting for process named rav e T Z INFO nperfps Process rav e found with PID T Z INFO nperfprofiler Opening datafile for writing T Z INFO nperfcmdrecord Opening perf events for T Z INFO nperfprofiler Ready to write profiling data T Z INFO nperfcmdrecord Enabling perf events T Z INFO nperfcmdrecord Running thread main panicked at attempt to subtract with overflow homevibhoothiiaanandnotperfnwindsrcdwarfrs note run with RUSTBACKTRACE environment variable to display a backtrace T Z INFO nperfprofiler Collected samples in total vibhoothiiaanandconeBoxnotperf Device Specs Device Raspberry Pi B RAM GB Arch aarch Processor CortexA ARMv bit SoC GHz OS Ubuntu LTS Hi I am looking for a profiling tool for rustanalyzer and I wonder if notperf could be of help I have some very specific requirements but I am not a profiling expert so I dont know if what I ask is at all possible hence this featurerequestsupport issue Feel free to just close with out of scope if I ask for something silly rustanalyzer relies heavily on incremental computation and Id love to profile the incremental case The interesting benchmark looks like this rust loaddatafromdisk ms of IO computecompletion triggers initial analysis seconds changesinglefile computecompletion re computation after a change ms I am only interested in profiling the block Although the runningtime of the benchmark is dominated by initial analysis I explicitly dont care much about its performance So what I like is to do sampling profiling so that I dont have to instrument my code bias times of fairly shortlived blocks of CPUheavy code hundreds of milliseconds from withing the application itself so that I can startstop profiling for specific section of code without depending on C code just because building C is a pain Is this possible at least in theory ie are there sampling tools than can give such data Could notperf be of help here My dream API would look like this rust loaddatafromdisk computecompletion let p notperfrecordtmpprofiledataperf append append to the data file so that I can run this in a loop changesinglefile computecompletion stops profiling on Drop Hi Currently with this tool after doing profiling of a process we can only get the details in a flame graph which is in SVG Format the main issue of the flame which is a good option but the main issue is it is really hard to read and do rapid analysis due to nearly not readable flame graphs So if we could provide a good way to profile the same after generating the data it will be really helpful Best Vibhoothi Currently nwind does not support PowerPC from what I could see to support a new architecture srcarcharchrs and srcarcharchgetregss are the main components here the ABI specification