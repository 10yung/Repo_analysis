OS Ubuntu Version Release Cuda swift repl crashes everytime I press tab for auto completion of any symbol printterminate called after throwing an instance of stdoutofrange what basicstringsubstr pos which is thissize which is homerpathakTemplatestmptoolsSwiftS TFToolchainusrbinlldb x d homerpathakTemplatestmptoolsSwiftS TFToolchainusrbinlldb x fd e homerpathakTemplatestmptoolsSwiftS TFToolchainusrbinlldb x a libx linuxgnulibpthreadso x x f d fef libx linuxgnulibcso gsignal xc x f d ce libx linuxgnulibcso abort x x f d e usrlibx linuxgnulibstdcso x c x f d ec usrlibx linuxgnulibstdcso x ab x f d ec ab usrlibx linuxgnulibstdcso x af x f d ec af usrlibx linuxgnulibstdcso x d x f d ec d usrlibx linuxgnulibstdcso x e x f d ec homerpathakTemplatestmptoolsSwiftS TFToolchainusrbinlibliblldbso svn xc a x f d a b homerpathakTemplatestmptoolsSwiftS TFToolchainusrbinlibliblldbso svn xc c f x f d a d f usrlibx linuxgnulibeditso elwgets x a x f d d df homerpathakTemplatestmptoolsSwiftS TFToolchainusrbinlibliblldbso svn xc bf x f d a cf homerpathakTemplatestmptoolsSwiftS TFToolchainusrbinlibliblldbso svn xbc a x f d a a homerpathakTemplatestmptoolsSwiftS TFToolchainusrbinlibliblldbso svn xbadf x f d ef homerpathakTemplatestmptoolsSwiftS TFToolchainusrbinlibliblldbso svn xbb fdf x f d fdf homerpathakTemplatestmptoolsSwiftS TFToolchainusrbinlibliblldbso svn xc a c x f d a a c libx linuxgnulibpthreadso x db x f d feeb db libx linuxgnulibcso clone x f x f d f f Crash reproducer for lldb version revision f d e e f a b b c b b Swift version dev Swift ccfceeadd Reproducer written to tmpreproducer cb Before attaching the reproducer to a bug report Look at the directory to ensure youre willing to share its content Make sure the reproducer works by replaying the reproducer Replay the reproducer with the following command homerpathakTemplatestmptoolsSwiftS TFToolchainusrbinlldb replay tmpreproducer cb Aborted core dumped swift rpathakrpathakAlienware R homerpathakTemplatestmptoolsSwiftS TFToolchainusrbinlldb replay tmpreproducer cb lldb swiftbasellvmprojectlldbincludelldbUtilityReproducerInstrumentationh T lldbprivatereproDeserializerReadlldbprivatereproValueTag T unsigned int Assertion HasDatasizeofT failed Stack dump Program arguments homerpathakTemplatestmptoolsSwiftS TFToolchainusrbinlldb replay tmpreproducer cb homerpathakTemplatestmptoolsSwiftS TFToolchainusrbinlldb x d homerpathakTemplatestmptoolsSwiftS TFToolchainusrbinlldb x fd e homerpathakTemplatestmptoolsSwiftS TFToolchainusrbinlldb x a libx linuxgnulibpthreadso x x f df ba libx linuxgnulibcso gsignal xc x f ded fe libx linuxgnulibcso abort x x f ded libx linuxgnulibcso x a x f ded a libx linuxgnulibcso x x f ded homerpathakTemplatestmptoolsSwiftS TFToolchainusrbinlibliblldbso svn x f x f def f homerpathakTemplatestmptoolsSwiftS TFToolchainusrbinlibliblldbso svn xe d x f def d d homerpathakTemplatestmptoolsSwiftS TFToolchainusrbinlibliblldbso svn xe ca x f def d ca homerpathakTemplatestmptoolsSwiftS TFToolchainusrbinlibliblldbso svnZN lldb SBReproducer ReplayEPKcb x b x f def cb homerpathakTemplatestmptoolsSwiftS TFToolchainusrbinlldb x b f homerpathakTemplatestmptoolsSwiftS TFToolchainusrbinlldb x b e libx linuxgnulibcso libcstartmain xe x f ded b homerpathakTemplatestmptoolsSwiftS TFToolchainusrbinlldb x bea Aborted core dumped Hi I built S TF with LLDB Python support so that I could run Jupyter Notebook for macOS by checking out up to commit ffb e cef d d dbadd e c d so that I avoided the regression that prevents swiftPM being built The following code from the Python Interoperability notebook results in Couldnt lookup symbols in Jupyter However if you run the code in XCode it runs OK import TensorFlow import Python printPythonversion let np Pythonimportnumpy printnp let zeros npones printzeros import TensorFlow let numpyArray npones dtype npfloat printSwift type typeof numpyArray printPython type PythontypenumpyArray printnumpyArrayshape Examples of converting numpyndarray to Swift types let array Float Arraynumpy numpyArray let shapedArray ShapedArrayFloatnumpy numpyArray let tensor TensorFloatnumpy numpyArray Examples of converting Swift types to numpyndarray printarraymakeNumpyArray printshapedArraymakeNumpyArray printtensormakeNumpyArray Examples with different dtypes let doubleArray Double Arraynumpy npones dtype npfloat let intTensor TensorInt numpy npones dtype npint You get the right answer to the last bit of code with Xcode packaged by condaforge default Jan Clang module numpy from usrlocaloptpython FrameworksPythonframeworkVersions libpython sitepackagesnumpyinitpy Swift type PythonObject Python type class numpyndarray With Jupyter you get the following for the final outpu of codet default Dec Clang clang module numpy from usrlocaloptpython FrameworksPythonframeworkVersions libpython sitepackagesnumpyinitpy Swift type PythonObject Python type class numpyndarray Error Couldnt lookup symbols extension in TensorFlowTensorFlowTensor where A PythonNumpyScalarCompatiblemakeNumpyArray PythonPythonObject extension in TensorFlowTensorFlowTensor where A PythonNumpyScalarCompatiblemakeNumpyArray PythonPythonObject extension in TensorFlowTensorFlowTensor where A PythonNumpyScalarCompatiblemakeNumpyArray PythonPythonObject extension in TensorFlowTensorFlowTensor where A PythonNumpyScalarCompatiblemakeNumpyArray PythonPythonObject extension in TensorFlowTensorFlowTensor where A PythonNumpyScalarCompatiblemakeNumpyArray PythonPythonObject extension in TensorFlowTensorFlowTensor where A PythonNumpyScalarCompatiblemakeNumpyArray PythonPythonObject The current macOS toolchain installation instructions are copied from However PATH and xcrun toolchain swift are not the easiest to work with There have been multiple issues over time The swiftenv Swift version manager is much easier to use It works nicely with Swift for TensorFlow macOS toolchains Ive personally used it since and never had any issues Example usage console swiftenv versions list available versions tensorflowDEVELOPMENT a tensorflowRELEASE tensorflowRELEASE set by Usersdanielzhengswiftenvversion swiftenv global tensorflowDEVELOPMENT a set global version swiftenv global print global version tensorflowDEVELOPMENT a swift use toolchain set by swiftenv Welcome to Swift version dev Swift a e a Type help for assistance import TensorFlow The last time I tried I couldnt figure out how to use swiftenv easily with Swift for TensorFlow Linux toolchains Thats also worth investigating I am using macOS Catalina beta and Xcode I am trying to build S TF for macOS with LLDB Python support so that I can use swiftjupyter Steps brew install python brew install python Close and reopen terminal pip install numpy future six sudo chown R whoami usrlocallibpkgconfig chmod uw usrlocallibpkgconfig brew install cmake ninja brew cask install java Download bazel installerdarwinx sh chmod x bazel installerdarwinx sh bazel installerdarwinx sh mkdir swiftsource cd swiftsource git clone b tensorflow swiftutilsupdatecheckout clone scheme tensorflow cd swift utilsbuildtoolchaintensorflow The script almost finishes but then ends on the following error code while trying to build swiftpmmacosxx UsersdanielswiftsourceswiftswiftnightlyinstallLibraryDeveloperToolchainsswifttensorflowLOCAL axctoolchainusrlibswiftmacosxDarwinswiftmodulex swiftinterface error derivative not in the same file as the original function derivativeof tan wrt x UsersdanielswiftsourceswiftswiftnightlyinstallLibraryDeveloperToolchainsswifttensorflowLOCAL axctoolchainusrlibswiftmacosxDarwinswiftmodulex swiftinterface error derivative not in the same file as the original function derivativeof asin wrt x UsersdanielswiftsourceswiftswiftnightlyinstallLibraryDeveloperToolchainsswifttensorflowLOCAL axctoolchainusrlibswiftmacosxDarwinswiftmodulex swiftinterface error derivative not in the same file as the original function derivativeof acos wrt x UsersdanielswiftsourceswiftswiftnightlyinstallLibraryDeveloperToolchainsswifttensorflowLOCAL axctoolchainusrlibswiftmacosxDarwinswiftmodulex swiftinterface error derivative not in the same file as the original function derivativeof atan wrt x UsersdanielswiftsourceswiftswiftnightlyinstallLibraryDeveloperToolchainsswifttensorflowLOCAL axctoolchainusrlibswiftmacosxDarwinswiftmodulex swiftinterface error derivative not in the same file as the original function derivativeof sinh wrt x UsersdanielswiftsourceswiftswiftnightlyinstallLibraryDeveloperToolchainsswifttensorflowLOCAL axctoolchainusrlibswiftmacosxDarwinswiftmodulex swiftinterface error derivative not in the same file as the original function derivativeof cosh wrt x UsersdanielswiftsourceswiftswiftnightlyinstallLibraryDeveloperToolchainsswifttensorflowLOCAL axctoolchainusrlibswiftmacosxDarwinswiftmodulex swiftinterface error derivative not in the same file as the original function derivativeof tanh wrt x UsersdanielswiftsourceswiftswiftnightlyinstallLibraryDeveloperToolchainsswifttensorflowLOCAL axctoolchainusrlibswiftmacosxDarwinswiftmodulex swiftinterface error derivative not in the same file as the original function derivativeof asinh wrt x UsersdanielswiftsourceswiftswiftnightlyinstallLibraryDeveloperToolchainsswifttensorflowLOCAL axctoolchainusrlibswiftmacosxDarwinswiftmodulex swiftinterface error derivative not in the same file as the original function derivativeof acosh wrt x UsersdanielswiftsourceswiftswiftnightlyinstallLibraryDeveloperToolchainsswifttensorflowLOCAL axctoolchainusrlibswiftmacosxDarwinswiftmodulex swiftinterface error derivative not in the same file as the original function derivativeof atanh wrt x UsersdanielswiftsourceswiftswiftnightlyinstallLibraryDeveloperToolchainsswifttensorflowLOCAL axctoolchainusrlibswiftmacosxDarwinswiftmodulex swiftinterface error derivative not in the same file as the original function derivativeof expm wrt x UsersdanielswiftsourceswiftswiftnightlyinstallLibraryDeveloperToolchainsswifttensorflowLOCAL axctoolchainusrlibswiftmacosxDarwinswiftmodulex swiftinterface error derivative not in the same file as the original function derivativeof log p wrt x UsersdanielswiftsourceswiftswiftnightlyinstallLibraryDeveloperToolchainsswifttensorflowLOCAL axctoolchainusrlibswiftmacosxDarwinswiftmodulex swiftinterface error derivative not in the same file as the original function derivativeof erf wrt x UsersdanielswiftsourceswiftswiftnightlyinstallLibraryDeveloperToolchainsswifttensorflowLOCAL axctoolchainusrlibswiftmacosxDarwinswiftmodulex swiftinterface error derivative not in the same file as the original function derivativeof erfc wrt x unknown error failed to load module Darwin ApplicationsXcodeappContentsDeveloperPlatformsMacOSXplatformDeveloperSDKsMacOSX sdkusrlibswiftDarwinswiftmodulex swiftinterface error use of unresolved identifier lgammafr let value lgammafrCFloatx sign ApplicationsXcodeappContentsDeveloperPlatformsMacOSXplatformDeveloperSDKsMacOSX sdkusrlibswiftDarwinswiftmodulex swiftinterface error use of unresolved identifier lgammar let value lgammarCDoublex sign ApplicationsXcodeappContentsDeveloperPlatformsMacOSXplatformDeveloperSDKsMacOSX sdkusrlibswiftDarwinswiftmodulex swiftinterface error use of unresolved identifier lgammalr let value lgammalrCLongDoublex sign bootstrap error Command env SDKROOTApplicationsXcodeappContentsDeveloperPlatformsMacOSXplatformDeveloperSDKsMacOSX sdk SWIFTCIUSELOCALDEPS DYLDLIBRARYPATHUsersdanielswiftsourcebuildbuildbotosxswiftpmmacosxx x applemacosxbootstraplibUsersdanielswiftsourcebuildbuildbotosxllbuildmacosxx lib SWIFTEXECUsersdanielswiftsourceswiftswiftnightlyinstallLibraryDeveloperToolchainsswifttensorflowLOCAL axctoolchainusrbinswiftc SWIFTPMPDLIBSUsersdanielswiftsourcebuildbuildbotosxswiftpmmacosxx x applemacosxbootstrappm Usersdanielswiftsourcebuildbuildbotosxswiftpmmacosxx x applemacosxbootstrapbinswiftbuild disablesandbox disableindexstore buildpath Usersdanielswiftsourcebuildbuildbotosxswiftpmmacosxx configuration release returned nonzero exit status utilsbuildscript fatal error command terminated with a nonzero exit status aborting utilsbuildscript fatal error command terminated with a nonzero exit status aborting danielDanielsiMac swift Issue addressed the need for better issue tracking in this repository and these issue templates address BugsPerformance issues BuildInstallation issues Documentation RequestsIssues Feature Requests There is also a general issue template for those not in one of these categories I have not altered the default issue template as I expect the repository maintainers to update it when the move away from JIRA is successful The default issue template suggests that all Swift for TensorFlow issues should filed on bugsswiftorg We are using JIRA instead of GitHub issues to track our work in order to integrate more effectively with the rest of the Swift ecosystem However weve since changed in opinion Swift compiler issues and crashes should filed on bugsswiftorg Issues related to tensorflowswiftapis the TensorFlow module should be filed as tensorflowswiftapis GitHub issues Issues related to tensorflowswiftmodels should be filed as tensoflowswiftmodels GitHub issues Issues related to Swift for TensorFlow toolchains should be filed as tensorflowswift GitHub issues or on bugsswiftorg The default issue template should be updated to reflect this Users are experiencing problem with executing S TF program in their Xcode project as being discussed in issue This PR adds a new installation step that resolves the issue by enabling the Disable Library Validation option from Signing Capabilities Hardened Runtime This option lets the Xcode project to add frameworks without requiring any code signing Please see the official documentation for details cc danzheng rxwei SwiftPM commands are broken with the swifttensorflowDEVELOPMENT a macOS toolchain swift build dyld Library not loaded rpathlibswiftCoredylib Referenced from LibraryDeveloperToolchainsswifttensorflowDEVELOPMENT axctoolchainusrbinswiftbuild Reason image not found abort swift build This error likely surfaced in the swiftDEVELOPMENTSNAPSHOT a tensorflow merge Temporary fix readd the executablepathlibswiftmacosx RPATH for SwiftPM tool binaries VERSIONswifttensorflowDEVELOPMENT a sudo installnametool addrpath executablepathlibswiftmacosx LibraryDeveloperToolchainsVERSIONxctoolchainusrbinswiftbuild sudo installnametool addrpath executablepathlibswiftmacosx LibraryDeveloperToolchainsVERSIONxctoolchainusrbinswiftpackage sudo installnametool addrpath executablepathlibswiftmacosx LibraryDeveloperToolchainsVERSIONxctoolchainusrbinswiftrun sudo installnametool addrpath executablepathlibswiftmacosx LibraryDeveloperToolchainsVERSIONxctoolchainusrbinswifttest I have followed instructions on how to install swiftfortensorflow CPUversion as outlined in the github repository and the swift REPL works at first but also throws these warnings error ld so x fffffff c adding range x a x ba which has a base that is less than the functions low PC x dc Please file a bug and attach the file at the start of this error message error ld so x fffffff c adding range x d x d which has a base that is less than the functions low PC x dc Please file a bug and attach the file at the start of this error message error ld so x fffffff c c adding range x a x ba which has a base that is less than the functions low PC x dc Please file a bug and attach the file at the start of this error message error ld so x fffffff c c adding range x d x d which has a base that is less than the functions low PC x dc Please file a bug and attach the file at the start of this error message However when I exit the terminal Ubuntu and reopen running swift doesnt return the REPL instead The above described scenario still manifested when I initially tried installing swift before s tf meaning it could be an issue with swift Current solution I currently have to add the path to the env variables everytime I open the terminal in order to use the REPL OS Ubuntu LTS bit Anybody with a clue on how to go about thiswhy this is happening Ill greatly appreciate In step of using downloads on macOS says xcrun toolchain swift This attempts to use a toolchain thats nonexistent based on the above steps The correct toolchain is comgoogleswift which can be found in LibraryDeveloperToolchainsswiftlatestInfoplist This should be changed Furthermore export PATHLibraryDeveloperToolchainsswiftlatestxctoolchainusrbinPATH breaks the command line on my machine I am not entirely sure why to be honest Finally I think it should be stated explicitly that TensorFlow has serious issues on macOS when using REPL see usagemd This information is crucial for people installing TensorFlow for the first time on their Mac Im willing to fix these errors if you would like me to Thanks