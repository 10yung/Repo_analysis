Hi I am following the Copper book and I am currently having problems with the very first program The program compiles but the objdump output is the following armnoneeabiobjdump CD targetthumbv mnoneeabidebugapp targetthumbv mnoneeabidebugapp file format elf littlearm Disassembly of section text reset x andcs r r r andeq r r r For some reason the main function is optimized away at some point If I make rustc emit the assembly file I can see the function is there with the right symbol reset so I guess that the problem comes while linking the source code parts are still dual licensed under the MITApache licenses Hey all Id like to relicense the non source code parts the documentation of this repository under the CCBY license as I understand it its a better license for prose The source code will remain dual licensed under MITApache If you are okay with CCBYMITApache licensing can you reply on this ticket with I license past and future contributions under the triple CCBYMITApache license allowing licensees to chose the license at their option Thanks and sorry for making you do this cc Tiwalun cwoodall dzamlo x jamesmunns x jedireza x limeburst Some steps are common to all platforms First of all thanks for writing this book it was a great help getting Rust code to run on my Cortex M While experimenting with my code I found a way how it can be compiled with optimization without everything being optimized away The following steps have to be done Make mod vectortable static EXCEPTIONS and static RESET public Add the nomangle attribute to EXCEPTIONS and RESET use coreptrreadvolatile and writevolatile for peripheral access If this looks okay Ill make a pull request with these changes 