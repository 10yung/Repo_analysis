This is a reproduction project this is mainrs use wslisten connect use stdthreadspawn sleep use stdtimeDuration fn main runws connectws c csend Dont know why something needs to be send to open up the connection sleepDurationfromsecs move m cshutdownunwrap Ok unwrap runws fn runws let spawn listen c move msg csend Send something back Not sure why I can not shutdown the websocket on the instance of the websocket itself Ok unwrap sleepDurationfromsecs Let server startup Why isnt the shutdown method working The program crashes because the connection isnt closed Uses the method SslAcceptorBuildermozillaintermediate which has been deprecated in the ssl package since With the closing of came support for nativetls This is great because my use case requires crossplatform builds and nativetls fits that requirement very nicely Unfortunately Im having a rough time migrating this example to using nativetls Ive been able to get it to build but when I run the process I get this error T Z ERROR wshandler WS Error Internal Failed to upgrade client to SSL the handshake process was interrupted The relevant diff can be found here If I get this working I would love to submit a PR that adds this example to the docs Thanks so much for your help on this Is this project currently being worked on The docs hosted on wsrsorg and docsrs are both out of date and PRs seemed to have stalled connectwill block the thread Can I handle multiple connections in one thread Ive scoured the docs and havent found a way to terminate a single connection between a ws Rust server and a client Im trying to do this from the serverside Sending a close message is nice when the client is still connected but I am interested in handling the case when the clients network connection drops out In this case sending a close message wont actually close the connection because the client is disconnected and cant sent a response The ws library in Nodejs provides wsterminate to forcibly terminate a connection with a client Does the ws library in Rust have a similar method or some way to terminate a connection Hi I am trying to make a wss server I use the examle sslserver code rust extern crate ws extern crate openssl extern crate envlogger use stdrcRc use stdioRead use stdfsFile use opensslsslSslAcceptor SslAcceptorBuilder SslMethod SslStream use opensslpkeyPKey use opensslx X X Ref use wsutilTcpStream struct Server out wsSender ssl RcSslAcceptor impl wsHandler for Server fn onmessage mut self msg wsMessage wsResult selfoutsendmsg fn upgradesslserver mut self sock TcpStream wsResultSslStreamTcpStream printlnnew connection selfsslacceptsockmaperrFromfrom fn main Setup logging envloggerinit let cert let data readfilecertificatecrtunwrap X frompemdataasrefunwrap let pkey let data readfileprivatekeyunwrap PKeyprivatekeyfrompemdataasrefunwrap let acceptor Rcnew let mut builder SslAcceptormozillaintermediateSslMethodtlsunwrap buildersetprivatekey pkeyunwrap buildersetcertificate certunwrap builderbuild let wssettings wsSettings maxconnections queuesize paniconnewconnection false paniconshutdown false fragmentscapacity fragmentsgrow true fragmentsize u maxvalue as usize maxfragmentsize usizemaxvalue inbuffercapacity inbuffergrow true outbuffercapacity outbuffergrow true paniconinternal true paniconcapacity false paniconprotocol false paniconencoding false paniconqueue false paniconio false panicontimeout false shutdownoninterrupt true maskingstrict false keystrict true methodstrict false encryptserver true tcpnodelay true printlnmax usizemaxvalue assertwssettingsqueuesize wssettingsmaxconnections usizemaxvalue overflow wsBuildernewwithsettingswssettingsbuildout wsSender Server out out ssl acceptorclone unwraplistenspaceiocsteenhuiscom unwrap fn readfilename str stdioResultVecu let mut file rtryFileopenname let mut buf Vecnew rtryfilereadtoend mut buf Okbuf But when I try to connect to it using javascript var wsUri wssspaceiocsteenhuiscom var output function init output documentgetElementByIdoutput testWebSocket function testWebSocket websocket new WebSocketwsUri websocketonopen functionevt onOpenevt websocketonclose functionevt onCloseevt websocketonmessage functionevt onMessageevt websocketonerror functionevt onErrorevt function onOpenevt writeToScreenCONNECTED doSendWebSocket rocks function onCloseevt writeToScreenDISCONNECTED function onMessageevt writeToScreenspan stylecolor blueRESPONSE evtdataspan websocketclose function onErrorevt writeToScreenspan stylecolor redERRORspan evtdata function doSendmessage writeToScreenSENT message websocketsendmessage function writeToScreenmessage var pre documentcreateElementp prestylewordWrap breakword preinnerHTML message outputappendChildpre windowaddEventListenerload init false but most of the time I get Connection closed before receiving a handshake response from the chrome console and sometimes it connects without a problem its super random and I have no clue why this happens The application is build using the OpenSSL build I got using vcpkg on Windows and runs on windows server The XForwardedFor header is implicitly untrustworthy the need may arise to get the last trusted address in a reverse proxy chain This adds Handshakeforwardedaddrtrusted and Requestforwardedaddrtrusted to get a address at exactly specified trusted proxy depth Eg in the common example of a service behind a Apache or Nginx reverse proxy use forwardedaddr to get the rightmost XForwardedFor header address Using forwardedaddr will always return the direct peer address Im currently using this as extension trait and its confirmed to work well When the client fails to resolve an IPdomain instead of returning an error when calling wsconnect it results a ResultOk and logs an error with Unable to establish connection to wssexamplecom WS Error IoCustom kind Other error failed to lookup address information Name or service not known 