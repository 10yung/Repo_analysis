 IMG Steps to Reproduce Download the latest MessageKit Open ChatExamplexcworkspace pod install Build and run on your phone code signing required On the Example App navigate to any Example Attempt to send an memoji memoji keyboard required Upon selecting a memoji the image will be sent to the MessageInputBar MessageKit v on iPhone running iOS Swift Hello there Please what would be the best to add a quoted view like on the image below I tried to copy the code of the default text view and add a vertical stack view with no success Cheers QuotedView MessageKit iOS swift iPhone X if VC will show in sheet mode after small drag the VC then bottom view where is input bar send button and etc is hiding how can I fix that I try to debug and after dragging VC is calling method viewWillDisappear and handleKeyboardDidChangeState but there didnt change bottom view position Can u help me What version of MessageKit are you using Last development branch What version of iOS are you running on What version of Swift are you running on Swift What devices are you testing on Are these simulators All devices Is the issue youre experiencing reproducable in the example app I have no idea swift selfmessagesCollectionViewmessagesDataSource self selfmessagesCollectionViewmessagesLayoutDelegate self selfmessagesCollectionViewmessagesDisplayDelegate self selfmessagesCollectionViewmessageCellDelegate self if let layout selfmessagesCollectionViewcollectionViewLayout as MessagesCollectionViewFlowLayout layouttextMessageSizeCalculatoroutgoingAvatarSize zero layouttextMessageSizeCalculatorincomingAvatarSize zero selfmessagesCollectionViewreloadData selfmessagesCollectionViewscrollToBottom selfmessageInputBardelegate self selfmessageInputBarinputTextViewdelegate self When I was on iOS the delegate was called correctly but with ios its not I cant click the sendButton even if the user interaction is enabled and I dont got any delegate of cell like avatar click or cell click What version of MessageKit are you using What version of iOS are you running on MacOS What version of Swift are you running on Swift What devices are you testing on Are these simulators MacBook Pro Is the issue youre experiencing reproducable in the example app Yes there is no text input possible Screenshot at I have a collection view inside a custom cell that I created inherited by swift MessageContentCell inside his cell I put a button but buttons or cell selections are not triggered when I tap on them I also ovverride the methods headles like that swift Used to handle the cells contentViews tap gesture Return false when the contentView does not need to handle the gesture open override func cellContentViewcanHandle touchPoint CGPoint Bool return true override func handleTapGesture gesture UIGestureRecognizer let touchLocation gesturelocationin self switch true case collectionViewframecontainstouchLocation for index in itemsenumerated if let cell collectionViewcellForItemat IndexPathitem index section if cellframecontainstouchLocation cellpointinside touchLocation with nil break default delegatedidTapBackgroundin self override func gestureRecognizerShouldBegin gestureRecognizer UIGestureRecognizer Bool let point gestureRecognizerlocationin collectionView let indexPath collectionViewindexPathForItemat point return indexPath nil but it doesnt work Please any help What does this implementfix Explain your changes When disabling MessageKits input bar by returning nil for inputAccessoryView in MessagesViewController this causes the method requiredInitialScrollViewBottomInset to always return This shouldnt the case as it causes the property additionalBottomInset to be completely ignored I noticed this issue as I currently handle adding InputBarAccessoryView into view myself due to wanting tab bar support Does this close any currently open issues Not that Im aware of Any relevant logs error output etc Nope Any other comments Nope Where has this been tested DevicesSimulators iPhone XS iPad Air iOS Version Swift Version MessageKit Version We are receiving keyboard notifications from child modal view controllers this is a fix to ensure that this doesnt happen This was causing issues where messages were clipped by the input accessory view because the bottom offset was incorrect Thanks for sending a pull request Please make sure you click the link above to view the contribution guidelines then fill out the blanks below What does this implementfix Explain your changes Stops the keyboard handling when it comes back from a modal view controller on iOS Does this close any currently open issues Not that I know of Any relevant logs error output etc If the logs is quite long please paste to and insert the link here Any other comments I can provide a videoscreenshot of the fix if you want Where has this been tested DevicesSimulators Devices Simulator iOS Version Swift Version MessageKit Version Thanks for sending a pull request Please make sure you click the link above to view the contribution guidelines then fill out the blanks below What does this implementfix Explain your changes Fixes docs to be inline with the API Thanks for sending a pull request Please make sure you click the link above to view the contribution guidelines then fill out the blanks below What does this implementfix Explain your changes Fixes some incorrectly used available annotations which did not properly signal to the compiler and user that the methodclassvariable was deprecatedobsoleted Namely this PR will correctly obsolete MessageInputBar MessageInputBarDelegate and will deprecate Sender Senderid Senderinitid String displayName String as previously intended The reason they were not working was that the deprecatedobsoleted version marker was using the MessageKit library version however available expects a Swift language version This change simply removes the version number as the deprecations and obsoletions do not depend on the Swift language version Does this close any currently open issues Not to my knowledge Any relevant logs error output etc If the logs is quite long please paste to and insert the link here No Any other comments This PR will cause a small however breaking change to users who are still using in their code either MessageInputBar or MessageInputBarDelegate I assume this is OK since the code was there with the intent to obsolete these all along it just did not work properly Where has this been tested DevicesSimulators Simulator iOS Version Swift Version MessageKit Version Note that this is a purely compiletime change it has no runtime effects Hence it was tested to compile under the correct API usage and tested not to compile under incorrect API usage example using an obsoleted class However I dont believe these is any way to actually write tests into the library to ensure a classmethodetc is deprecated or obsoleted