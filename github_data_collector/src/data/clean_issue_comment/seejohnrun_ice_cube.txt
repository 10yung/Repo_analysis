I added Italian translations to you gem Would be nice if you could merge them Reading RFC Exception DateTimes its unclear whether generating multiple EXDATE properties is correct The example they provide is a single property with a value that is a list of exception times EXDATE T Z T Z T Z ruby schedule IceCubeSchedulenewTimeiso T Z endtime Timeiso T Z scheduleaddrecurrenceruleIceCubeRuledaily scheduleaddexceptiontimeTimeiso T Z scheduleaddexceptiontimeTimeiso T Z scheduletoical DTSTART T Z RRULEFREQDAILY EXDATE T Z EXDATE T Z DTEND T Z I might have anticipated DTSTART T Z RRULEFREQDAILY EXDATE T Z T Z DTEND T Z Theres an old pull request that raised this but it was dismissed due to a tangential issue Inspecting the code it suggests its expecting the comma separated list data extimes valuesplitmap v TimeUtildeserializetimev I acknowledge that IceCubeIcalParser can handle the multiple EXDATE properties but is it correct Im happy to open a pull request if the list is the way to go seen on circle ci today NOTE GemSpecificationhasrdoc is deprecated with no replacement It will be removed on or after GemSpecificationhasrdoc called from homecircleciprojectvendorbundleruby bundlergemsicecube bf fc dicecubegemspec even tho we call for it should return only till the end date is reached seejohnrun avit Is this gem still maintained The latest stable release and the latest commit are from Thanks handshake i copy all values and throw them into my enyml no change will ever work somehow i try to debug the gem when i start my application and check the I nloadpaths icecube isnt in there so as soon i call icecube the I n initializer of icecube is called and append his own paths for that reason I n will allways look at the latest occurence which is always icecubes default enyml this seems to be a bad approach Highly likely that I am doing something wrongusing this gem incorrectly but I am encountering an issue We are using icecube essentially to trackmanage biweekly schedules so what I am doing may be a little unusual My setup schedule yaml starttime Z rrules validations day hourofday ruletype IceCubeWeeklyRule interval weekstart rtimes extimes aka Every weeks on Wednesdays on the rd hour of the day Using Timecop to set my current time time Timezonelocal Wed Jul UTC Timecopdbsafefreezetime Heres the weird part userutcoffset lastrunat Timezonelocal userutcoffset schedule tap r rstarttime lastrunat userutcoffset nextoccurrencelastrunat I feel requiring lastrunat here is a bug Basically given some past date I would like to know the next relevant Wednesday assuming the two week cadence is maintained In this case since I update the schedules starttime to I would expect a schedule of And indeed if I change the line to tap r rstarttime lastrunat userutcoffset puts roccurrencesTimenow monthinspect I end up with Wed Jul UTC Wed Jul UTC Wed Aug UTC Heres the issue If I call nextoccurrence without lastrunat I get back Wed Aug UTC while if I pass in lastrunat I get back Wed Jul UTC In my head given that the date is spoofed to be July shouldnt the nextoccurrence be July th Thanks for your time and assistance in advance I see clearly that IceCube creates Schedules with a start time that all Rules are based off I am wondering however if theres any support for adding Rules and Exceptions to Schedules that themselves have distinct start times eg something like scheduleaddrecurrencerule IceCubeRuledailyuntilDatetoday startsOnDatetoday Or is there any way to achieve this with current functionality Essentially doing this makes an infinite loop dayofweekmonday Full reproduction test case ruby schedule IceCubeSchedulenewTimezonenow scheduleaddrecurrenceruleIceCubeRuledailydayofweekmonday schedulefirst 