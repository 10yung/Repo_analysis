This pull request introduces a stable version of an exportsocrata function as outlined in This allows users to download the contents of a data portal to a local directory This function will download CSVs compressed PDFs Word Excel PowerPoints GeoJSON Shapefiles plain text documents uncompressed etc It will not download HTML pages As part of the process the function also copies the datajson file to act as an index for other downloaded files Ive proposed the version as Testing portal export To test this function I used the City of Norfolk VA to export all of the data sets Looking at their datajson file I counted data sets that were not HTML pages or did not have a downloadable file Executing exportsocrata resulted in downloaded files plus the copy of the datajson file Thus the expected number of files match the actual number of downloaded files Testing nonCSV documents All of the testing for Norfolk resulted in compressed CSV files however also needed to test the ability to download nonCSV files Kansas City Missouris data portal has an unusually large number of nonCSV data sets on their portal such as PDFs word documents Excel documents etc I tested the function on downloading files from their data portal The function downloaded PDFs Words Excel and other nonCSV files along with CSV files However I did encounter frequent network timeouts after approximately items were downloaded I believe this is limited to the network and not an issue with the function itself While this may not be a bug it may be a limitation on the ability to export files from Socrata Unit Testing I have not written a unit test I think any unit test will take too much time and space for typical unit testing The smallest portal download Norfolk elapsed over minutes to complete all downloads In general a recommended method for testing is to choose a reasonably small portal and do the following Export all files from the portal When finished open the datajson file and count all of the entries with the following exceptions distributionmediaType is blank distributionmediaType is texthtml distributiondownloadURL is blank Compare the counts of download files except the datajson file and the count from step Ideally the portal being used to test contains CSV files as well as nonCSV files Enhancement The Socrata Data Management API enables Socrata publishing features like dataset drafts and onplatform data transformations It would be ideal if RSocrata offered data publishers a convenient method for using the Data Management API codepath when sending data to Socrata in addition to the current SODA endpoints The test for this started failing recently The section of code testthatWarn instead of fail if XSODA headers are missing expectwarningdfCsv readsocrata info expectwarningdfJson readsocrata info expectsilentdf readsocrata expectsilentdf readsocrata expectequaldataframe classdfCsv labelclass info expectequaldataframe classdfJson labelclass info expectequal ncoldfCsv labelcolumns info expectequal ncoldfJson labelcolumns info The actual failing test message expectequal ncoldfCsv labelcolumns info Error columns not equal to ncoldfCsv mismatches I thought this might be useful but it didnt help me setdiffcolnamesdfJson colnamesdfCsv url url url url setdiffcolnamesdfCsv colnamesdfJson networkurl planbrochureurl summaryofbenefitsurl drugformularyurl adultdental premiumscenarios standardplancostsharing X percentactuarialvaluesilverplancostsharing X percentactuarialvaluesilverplancostsharing X percentactuarialvaluesilverplancostsharing It looks like the URL columns are different in name only but the other six columns are missing in the JSON Not sure if this is related to this issue or if this is something else Originally posted by geneorama in Adding a note describing differences in writing to Socrata datasets from RSocrataSODA compared to the Data Management API This is to help prevent confusion when automating data updates to Socrata that should make use of transforms applied on the platform during ingress The majorminorpatch concept is clear but what does the part after the dash indicate I believe its one of these majorminorpatchcommit majorminorpatchbuildnumber Its to me what convention tomschenkjr was using I see some big numbers which would seem like commits but I know that the CRAN submission process can be challenging and it could be actual builds Either way Id like to make a decision and clarify it in the wiki Socratas Spatial Lens most prominently used in Data Lens geographic region cards determines the geographic regions eg Chicago Community Area in which a point record falls These regions are not presented in an easily understood way in either the grid view of a dataset or the resource API but can be determined through a multistep process It would be great service if RSocrata could perform this process and return the calculated regions if present As an example see The resource API shows an example record id violationlastmodifieddate T violationdate T violationcode CN violationstatus OPEN violationdescription WATCHMAN violationordinance Maintain watchman from PM to AM for vacant and dangerous residential premises inspectorid BL inspectionnumber inspectionstatus CLOSED inspectionwaived N inspectioncategory COMPLAINT departmentbureau DEMOLITION address S JUSTINE ST streetnumber streetdirection S streetname JUSTINE streettype ST propertygroup latitude longitude location latitude longitude humanaddress address city state zip computedregionvrxfvc k computedregion mkvf dw computedregionrpca um computedregionbdys d i computedregion wa qmu computedregionawafs ux Note in particular computedregionvrxfvc k The views API shows us under columns id name Community Areas dataTypeName number fieldName computedregionvrxfvc k position renderTypeName number tableColumnId computationStrategy sourcecolumns location type georegionmatchonpoint parameters region vrxfvc k primarykey featureid So that value is the Community Area but the value is not as it might appear Community Area Instead examine Note the conversion of the underscore from the computedregion value to a hyphen The refers to the record in this dataset with featureid which turns out to be Community Area As I discovered in working through this example the Feature IDs and Community Areas do match in many cases which could lead people to think incorrectly that the computedregionvrxfvc k is the Community Area number itself The final step is determining which column in this dataset shows the relevant value Community Area in this case It should be fairly apparent to a person which column to use so given the fairly small number of computed regions types of regions not the individual regions likely used on a domain it might be feasible to leverage that in some manner However there is an API For the record Socrata gave me the following warning which I wish to record here Please note Engineering emphasized that this is not an official API so you are welcome to consult it but just know its not officially supported as a source of truth for automated processes That said if we consult and search for vrxfvc k we see id name Community Areas createdAt defaultFlag true enabledFlag true featurePk featureid geometryLabel community uid vrxfvc k view id vrxfvc k name Community Areas averageRating createdAt displayType table downloadCount hideFromCatalog true hideFromDataJson true indexUpdatedAt newBackend true numberOfComments oid provenance official publicationAppendEnabled false publicationDate publicationGroup publicationStage published tableId totalTimesRated viewCount viewLastModified viewType tabular grants inherited false type viewer flags public The item of interest is geometryLabel community That is in fact the API field name from indicating the Community Area although it is worth noting that the value in this column for the above example is not but NEW CITY the name of the Community Area rather than the number q paste selectdateextractytripstarttimestamp dateextractmtripstarttimestamp dateextractdtripstarttimestamp counttripstarttimestamp groupdateextractytripstarttimestamp dateextractmtripstarttimestamp dateextractdtripstarttimestamp tab RSocratareadsocrataq results in tab RSocratareadsocrataq getResponse Error in httr GET Error in getResponsevalidUrl email password Bad Request HTTP This is my first time noticing the end of the query the orderid part this is probably the issue before it was off the screen and I didnt see it For years I have been using The Chicago Police Department Crimes to Present data set by direct tsv for excel downloads Just started using RSocrata for access Finding that the output is completely different adding completely new columns and changing capitalization on others Whats up with this Thanks for some insight From issue The TravisCI build for release R is working The AppVeyor build is failing while installing R packages specifically openssl It looks like it is building openssl from source and is hitting a bug or configuration issue because it cannot find gcc to compile the package I believe that this commit would pass if not for this issue and the CRAN builds do not show the openssl error One of the release R builds fails on an error that looks to be unrelated to our code and I noticed some other packages on CRAN are getting the same failure Im going to move forward in the interest of time Building off of and also a prior PR this change allows users to pass offsets as the queries This skips paging and gives a message that the query has been offset Ill keep working on this if it breaks any of the current tests