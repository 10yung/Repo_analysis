I can find element in UIWebView with greyaccessibilityLabel matcher but cant find element in WKWebView with the same matcher on earlgrey branch eg EarlGrey selectElementWithMatchergreyaccessibilityLabelLink to Next Test in FTRUIWebViewTestm on master branch doesnt work in WKWebViewTestm on earlgrey branch Xcode version B error trace FunctionalTestsRunner Running tests FunctionalTestsRunner The EDOHostService x e c is created and listening on Test Suite Selected tests started at Test Suite FunctionalTestsxctest started at Test Suite WKWebViewTest started at Test Case WKWebViewTest testNavigationToWKWebViewTestController started t s Start Test at t s Set Up t s Open comgoogleearlgreyftrdev t s Launch comgoogleearlgreyftrdev t s Setting up automation session t s Wait for comgoogleearlgreyftrdev to idle FunctionalTestsRunner Application Launch Completed UI Test with EarlGrey Starting t s Setting device orientation to Portrait t s Assertion Failure WKWebViewTestm Exception comgoogleearlgreyElementInteractionErrorDomain Exception Name comgoogleearlgreyElementInteractionErrorDomain Exception Reason Interaction cannot continue because the desired element was not found Element Matcher Cannot find UI Element Exception with Assertion Assertion Criteria assertWithMatcherisNotNil Element Matcher respondsToSelectorisAccessibilityElement isAccessibilityElement accessibilityLabelLink to Next Test Recovery Suggestion Check if the element exists in the UI hierarchy printed below If it exists adjust the matcher so that it accurately matches element Bundle ID comgooglecomFunctionalxctrunner Stack Trace FunctionalTests x e de GREYDefaultFailureHandler handleExceptiondetails FunctionalTests x dcb GREYElementInteractionErrorHandler handleInteractionErroroutError FunctionalTests x f d d GREYElementInteractionProxy assertWithMatchererror FunctionalTests x f ade GREYElementInteractionProxy assertWithMatcher FunctionalTests x a WKWebViewTest testNavigationToWKWebViewTestController CoreFoundation x fff c cc invoking CoreFoundation x fff c df NSInvocation invoke FunctionalTests x ea a GREYTestCaseInvocation invoke XCTest x ea XCTestCase invokeTest blockinvoke XCTest x c b XCTestCaseFailures performFailableBlocktestCaseRunshouldInterruptTest XCTest x c a XCTestCaseFailures performTurningExceptionsIntoFailuresInterruptAfterHandlingblock XCTest x e a XCTestCase invokeTest blockinvoke XCTest x d d XCUITestContext performInScope XCTest x dfc XCTestCase testContextPerformInScope XCTest x e c XCTestCase invokeTest FunctionalTests x df XCTestCaseGREYTest greyinvokeTest XCTest x fded XCTestCase performTest blockinvoke XCTest x c b XCTestCaseFailures performFailableBlocktestCaseRunshouldInterruptTest XCTest x c a XCTestCaseFailures performTurningExceptionsIntoFailuresInterruptAfterHandlingblock XCTest x fd XCTestCase performTest blockinvoke XCTest x dc XCTContext runInContextForTestCaseblock XCTest x f XCTestCase performTest XCTest x b XCTest runTest XCTest x a a XCTestSuite performTest blockinvoke XCTest x XCTestSuite performProtectedSectionForTesttestSection XCTest x XCTestSuite performTest XCTest x b XCTest runTest XCTest x a a XCTestSuite performTest blockinvoke XCTest x XCTestSuite performProtectedSectionForTesttestSection XCTest x XCTestSuite performTest XCTest x b XCTest runTest XCTest x a a XCTestSuite performTest blockinvoke XCTest x XCTestSuite performProtectedSectionForTesttestSection XCTest x XCTestSuite performTest XCTest x b XCTest runTest XCTest x eb fe XCTTestRunSession runTestsAndReturnError blockinvoke XCTest x eb XCTTestRunSession runTestsAndReturnError blockinvoke XCTest x XCTestObservationCenter observeTestExecutionForBlock XCTest x eb bd XCTTestRunSession runTestsAndReturnError XCTest x cfd XCTestDriver runTestsAndReturnError XCTest x d a XCTestMain FunctionalTestsRunner x d fedd XCTRunnerAppDelegate applicationWillResignActive FunctionalTestsRunner x d fddb XCTRunnerRunTests CoreFoundation x fff bb c CFRUNLOOPISCALLINGOUTTOABLOCK CoreFoundation x fff bb b CFRunLoopDoBlocks CoreFoundation x fff bac CFRunLoopRun CoreFoundation x fff babe CFRunLoopRunSpecific GraphicsServices x fff bb GSEventRunModal UIKitCore x fff fb UIApplicationMain FunctionalTestsRunner x da main libdylddylib x fff a dc start x x This PR fixes an issue where if the app under test is relaunched EarlGrey would not be able to communicate with it and aborts the test This was due to wrong path of AppFramework being loaded in application under test during subsequent launches which was causing AppFramework to not be loaded with error dyld warning could not load inserted library executablepathFrameworksAppFrameworkframeworkAppFrameworkexecutablepathFrameworksAppFrameworkframeworkAppFramework into hardened process because image not found More details are in this comment I had Earlgrey working pod setup with my application But due to some other pod updates application related few other changes I had to do the setup again Now when Im trying to do the setup It is failing to get the automation session for my application Even for the basic test case It is getting crashed during the application launch Here is the backtrace for that crash libcabidylib terminating with uncaught exception of type NSException lldb bt thread queue comapplemainthread stop reason signal SIGABRT frame x c libsystemkerneldylibpthreadkill frame x cbf libsystempthreaddylibpthreadkill frame x cbc libsystemcdylibabort frame x b libcabidylibabortmessage frame x d libcabidylibdefaultterminatehandler frame x caa d libobjcAdylibobjcterminate frame x e e libcabidylibstdterminatevoid frame x e d libcabidylibstdterminate frame x caa libobjcAdylibobjcterminate frame x f libdispatchdylibdispatchclientcallout frame x d libdispatchdylibdispatchoncecallout frame x afed ac AppFrameworkInitiateCommunicationWithTest frame x afecde AppFrameworkInitHostApplication frame x af a dyldsimImageLoaderMachOdoModInitFunctionsImageLoaderLinkContext const frame x af a dyldsimImageLoaderMachOdoInitializationImageLoaderLinkContext const frame x af b dyldsimImageLoaderrecursiveInitializationImageLoaderLinkContext const unsigned int char const ImageLoaderInitializerTimingList ImageLoaderUninitedUpwards frame x af dyldsimImageLoaderprocessInitializersImageLoaderLinkContext const unsigned int ImageLoaderInitializerTimingList ImageLoaderUninitedUpwards frame x af a dyldsimImageLoaderrunInitializersImageLoaderLinkContext const ImageLoaderInitializerTimingList frame x af dyldsimdyldinitializeMainExecutable frame x af c dyldsimdyldmainmachoheader const unsigned long int char const char const char const unsigned long frame x af dyldsimstartsim frame x dylddylduseSimulatorDyldint machoheader const char const int char const char const char const unsigned long unsigned long frame x ce dylddyldmainmachoheader const unsigned long int char const char const char const unsigned long frame x dylddyldbootstrapstartmachoheader const int char const long machoheader const unsigned long frame x dylddyldstart lldb It seems like this has something to do with AppFramework Im not exactly sure though Note This exact setup was working before but now its giving this issue I tried recreating this issue with the Earlgrey sample application and Im able to recreate it This is the podfile Im using for my project I have tried this with Xcode Version App Store version Xcode Version Xcode version as stated in the pod file ssource http link returns a It seems that calling EDOClientService sendSynchronousRequestonPortwithExecutor just after starting running the test target raises an Exception Heres more from the stacktrace on the main thread x fff b af in objcexceptionthrow x fff c eda in NSException raiseformatarguments x fff c b in NSAssertionHandler handleFailureInMethodobjectfilelineNumberdescription x c fdc in EDOClientService sendSynchronousRequestonPortwithExecutor x c fd a in EDOClientService sendSynchronousRequestonPort x c ff b in EDOClientService responseObjectWithRequestonPort x c fb d in EDOClientService classObjectWithNameport x c in GREYTestApplicationDistantObject forwardingTargetForSelector x fff c f in forwarding x fff c f in forwardingprep x c db d in InitiateCommunicationWithTestblockinvoke This is reproducible with the latest EarlGrey sources on Xcode with Simulators running iOS Hey EG team Are there any plans to provide swift package manager support I feel like it would make it much easier to consume EG compared to direct project copy Hi last week my team was integrating EarlGrey into our project using Xcode and managed to get tests passing when run locally However when we run the tests through fastlane as a part of our automated build pipeline we sometimes get failures with the message xxxsampleiosEarlGreyUITestsLaunchTest testLaunchPerformance Failed to get launch progress for XCUIApplicationImpl x e comxxxxxxxxsampleios at UsersxxxxLibraryDeveloperXcodeDerivedDataxxxsampleiosdbswclogbcfuttaxymmwxbwqbbgbBuildProductsDebugiphonesimulatorxxxsampleiosapp Expired token no operation still exists for this token XCUIApplicationGREYTestm Executed test with failure unexpected in seconds As far as I could tell this error only happened when running a test that included some use of EarlGrey I tried having a loop to keep trying let app XCUIApplicationlaunch until the app exists but that did not fix the problem Any recommendations on how to solve this problem Internal change Im not able to view the Google Group from either the link in the readme or from the link you just sent img width altScreen Shot at AM src Originally posted by normand in 