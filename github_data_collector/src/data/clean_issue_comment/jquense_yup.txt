Ive just now started using yup in combination with formik and so far I like it However when I reviewed my bundle size as I often to do ensure that our application is as speedy as possible I noticed that lodash was getting included twice once in its ES module form from formik and once again from yup in CommonJS form Heres a screenshot of what I mean screenshot After this PR and switching to the ES module version of the library In order to achieve this I had to convert the Babel configuration into JavaScript but this seems to work fine and reduces the bundle size quite nicely Verified on browser Chromium and Firefox and Nodejs Version yup Im currently using Yup and Formik in React Native I want to check for any duplicate email as part of the signing up process using a custom validation from Yup js validationSchemayupobjectshape firstName yup string max required lastName yup string max required email yup string email test name duplicateemailcheck params value message Duplicate email already exists test async value firebase auth fetchSignInMethodsForEmailvalue thenresult if result password return false else return true catcherr consolelogerr required password yup string min required passwordConfirmation yup string oneOf yuprefpassword null Passwords must match required Im using fetchSignInMethodsForEmail to fetch any kind of accounts with the same email and if it exists a validation error message will be thrown Issue The problem is the error message Duplicate email already exists appears appropriately but it doesnt disappear once it shows up even though there is no duplicate email issue Im getting the following error message when I first arrive on the screen Unhandled promise rejection TypeError undefined is not an object evaluating yupErrorinnerlength I am creating a factory which churns out schemas for objects and one of the schema validations is an array of homogeneous types of exactly length n if this wasnt done at scale itd be something like this typescript type TExample string string string Yup has a niceenough way of enforcing array length and type lets say for the first object object I need it to have an array of strings exactly long typescript const kvSettings object validation would then be const shapeObject yupobjectshape args yuparrayofyupstringtesttest arg length v vlength kvSettingsobject That validation works but the inffered types incorrectly report a type of string for the array instead of string string string This happens too with the less graceful double min max syntax typescript type Test yupInferTypetypeof shapeObject type Test args string Yup should infer the types correctly as string string string First My goal is to extend the yup library add some new validation methods I already tried using addMethod extending the schema types and it worked well the only problem was that after doing so I was unable to work using intellisense suggestions with the new methods Then I thought trying to build the lib from scratch just adding some methods here and there So what i did was clone yup repo checkout to latest stable version tag v run yarn install and build run yarn publish obs i did not make any changes to the code But the result was not what i expected after importing in another project via yarn add or just copying the code actually runs but the got intellisense suggestions does not work as normally would Theres a specific way to do this process In our application we have some helpers used to generate initial values given to formik forms based on the yup schema Nullability is currently very hard to handle because it is not exposed when calling describe This will add nullable to the field description Original regex was inspired from here Ive added the length constraints max for local and max for the domain Description I want to compare two dates with the following criteria startDate should be less than endDate startDate should not be equal to endDate Comparing two equal dates with min and max results in no validation error To Reproduce javascript const startDate momenttoDate const endDate momentadd monthtoDate const schema yupobjectshape startDate yupdate defaultnew DatestartDate whenendDate endDate schema endDate schemamaxendDate requiredDate is required endDate yupdate defaultnew DateendDate minyuprefstartDate End date should be later than start date requiredDate is required Expected behavior I expect this one to raise a validation error it works as expected when I pass Does not raise an error javascript schemavalidate startDate new Date endDate new Date Raises an error as expected javascript schemavalidate startDate new Date endDate new Date Platform please complete the following information Chrome Version Latest When you try to use when method referencing to the field that has strip in its description it will always run otherwise option To Reproduce objectshape advancedSearch booleanstrip firstName mixedwhenadvancedSearch is true then stringrequired otherwise stringstrip Expected behavior That advancedSearch value first will be used in when method and will be removed at the end I am trying to validate a text field based on a drop down in the form for example if there is a drop down with list of colors and there is a text field If the selected color is red then Id field should have ID value starting with letter R and In such a way each color selected has different validation condition on ID field How to achieve this using Yup test method or any other method in Yup Describe the bug Hey there I am having trouble validating country codes I have an array with all the possible country codes below I put only to exemplify and wanted to test if the user typed one of them like below stringoneOf The validation for the work fine but the dont probably because of the Platform Version 