 Hi Im running laravels behind an IBM Load Balancer and i cant get Trustedproxy to work Ive tried all the configs mentioned in previous issues but i cant make it work thanks Hi I recently upgrade one application from Laravel to Laravel Before the upgrade I was using this library v with the configuration below php proxies headers definedIlluminate Http RequestHEADERFORWARDED Illuminate Http RequestHEADERFORWARDED forwarded null Illuminate Http RequestHEADERCLIENTIP XFORWARDEDFOR Illuminate Http RequestHEADERCLIENTHOST null Illuminate Http RequestHEADERCLIENTPROTO XFORWARDEDPROTO Illuminate Http RequestHEADERCLIENTPORT XFORWARDEDPORT After the upgrade I added the TrustProxies middleware below php php namespace App Http Middleware use Fideloper Proxy TrustProxies as Middleware use Illuminate Http Request class TrustProxies extends Middleware The trusted proxies for this application var array protected proxies The headers that should be used to detect proxies var int protected headers RequestHEADERXFORWARDEDAWSELB The issue I am having might not be related to this but basically after the upgrade php requestip the ec ip requestips ec ip client ip It seems the order or the ips is inverted I should be getting first the client ip then any other ip Is this a configuration issue on my side or is there anything else I am missing Hi I followed the installation but wonder how to be sure this is installed correctly Is there any way to check if all setups are fine Thanks Hi Prior to i could do something like this in configtrustproxyphp headers definedIlluminate Http RequestHEADERFORWARDED Illuminate Http RequestHEADERFORWARDED forwarded FORWARDED Illuminate Http RequestHEADERCLIENTIP XFORWARDEDFOR Illuminate Http RequestHEADERCLIENTHOST XFORWARDEDHOST Illuminate Http RequestHEADERCLIENTPROTO XFORWARDEDPROTOCUSTOM Illuminate Http RequestHEADERCLIENTPORT XFORWARDEDPORTCUSTOM But with i cant find a way to specify custom names for HEADERCLIENTPORT and HEADERCLIENTPROTO Does someone know how to deal with this issue thx Our setup has multiple LB IP addresses first a local one and then a public one Lastly the users IP This means that TrustedProxy should filter out and but no matter what I do it only filters out the first IP Everything worked correctly in version but after upgrading to it stopped working Doesnt TrustedProxy support multiple layers of load balancers anymore Our environment is Google Cloud Platform with Laravel and PHP This is not an issue but it took me a while to get the config right before it started working properly using Laravel behind an Amazon Web Services Application Load Balancer I thought I would post it in case anyone else was having problems getting it to work configtrustedproxyphp php return proxies headers definedIlluminate Http RequestHEADERFORWARDED Illuminate Http RequestHEADERFORWARDED FORWARDED null Illuminate Http RequestHEADERXFORWARDEDFOR XFORWARDEDFOR Illuminate Http RequestHEADERXFORWARDEDHOST XFORWARDEDHOST Illuminate Http RequestHEADERXFORWARDEDPORT XFORWARDEDPORT Illuminate Http RequestHEADERXFORWARDEDPROTO XFORWARDEDPROTO Naturally change the proxies for your ALB IPs Hi Chris Im upgrading to laravel and a bit confused about how to install You link to the laravel docs section on trusted proxy and instructions there However in my new laravel installation I have a file configtrustedproxyphp in which I have set as before but I also now have TrustProxies middleware in laravel Is one of these files redundant What I have done is set up configtrustedproxy as I did in laravel but should I also configure the middleware Im using Heroku or do I need to do both Im mentioning this because you simply reference the laravel docs on how to install on and coming from Im still a little confused as to how to setup I think I must have done php artisanvendor publish on your trusted proxy on laravel Perhaps I should not have run that and should now delete the file in config Just mentioning in case others might also be confused Thanks This seems like an excellent package Is there a way to easily enabledisable based on the env For example a config option like enableenv staging prodblue prodgreen This would of course enable in staging as well as the prod bluegreen cluster while keeping disabled in dev local testing etc Likewise it could also be set with something like this which would allow it to be set by the server env var enableproxyconfig SERVER useproxy false Perhaps these options could be both used using enableenv settings unless enableproxyconfig is set at which point the boolean in enableproxyconfig would be used Or perhaps I am misunderstanding the purpose of the package and theres no reason I would need to disable in a local directaccess DEV env If this doesnt currently exist Id be open to writing a PR for it Let me know your thoughts 