Updating model to leverage more recent docker functionality in the readme under specgen folder it reads go get u foobar godep update foobar what is this foobar thing Most importantly how do I regen the model using the most recent API If you are reporting a new issue please first search for a matching issue in this repository Output of dotnet info NET Core SDK reflecting any globaljson Version Commit c a Runtime Environment OS Name Windows OS Version OS Platform Windows RID win x Base Path C Program Files dotnet sdk Host useful for support Version Commit d f NET Core SDKs installed C Program Files dotnet sdk C Program Files dotnet sdk C Program Files dotnet sdk NET Core runtimes installed MicrosoftAspNetCoreAll C Program Files dotnet shared MicrosoftAspNetCoreAll MicrosoftAspNetCoreAll C Program Files dotnet shared MicrosoftAspNetCoreAll MicrosoftAspNetCoreApp C Program Files dotnet shared MicrosoftAspNetCoreApp MicrosoftAspNetCoreApp C Program Files dotnet shared MicrosoftAspNetCoreApp MicrosoftAspNetCoreApp C Program Files dotnet shared MicrosoftAspNetCoreApp MicrosoftNETCoreApp C Program Files dotnet shared MicrosoftNETCoreApp MicrosoftNETCoreApp C Program Files dotnet shared MicrosoftNETCoreApp MicrosoftNETCoreApp C Program Files dotnet shared MicrosoftNETCoreApp MicrosoftWindowsDesktopApp C Program Files dotnet shared MicrosoftWindowsDesktopApp What version of DockerDotNet Steps to reproduce the issue var client new DockerClientConfigurationnew Uritcplocalhost CreateClient IListContainerListResponse containers await clientContainersListContainersAsync new ContainersListParameters Limit What actually happened ListContainersAsync get an timeout What did you expect to happen Get a list of containers Additional information Docker Engine Everything else is working I can create start stop and remove containers But trying to list any container runs into an timeout I tried it on different machines different OS and with different connections strings pipe unix tcp etc I alway get an timeout When I call in my browser I get a JSON List of all Containers What am I missing If you are reporting a new issue please first search for a matching issue in this repository Output of dotnet info NET Core SDK reflecting any globaljson Version Commit c a Runtime Environment OS Name Windows OS Version OS Platform Windows RID win x Base Path C Program Files dotnet sdk Host useful for support Version Commit d f NET Core SDKs installed C Program Files dotnet sdk C Program Files dotnet sdk NET Core runtimes installed MicrosoftAspNetCoreAll C Program Files dotnet shared MicrosoftAspNetCoreAll MicrosoftAspNetCoreApp C Program Files dotnet shared MicrosoftAspNetCoreApp MicrosoftAspNetCoreApp C Program Files dotnet shared MicrosoftAspNetCoreApp MicrosoftNETCoreApp C Program Files dotnet shared MicrosoftNETCoreApp MicrosoftNETCoreApp C Program Files dotnet shared MicrosoftNETCoreApp MicrosoftWindowsDesktopApp C Program Files dotnet shared MicrosoftWindowsDesktopApp What version of DockerDotNet v Issue In order to list current running containers a lot of people do something along the lines of the following cs var dockerClient new DockerClientConfigurationnew UrinpipepipedockerengineCreateClient var currentContainers await dockerClientContainersListContainersAsync new ContainersListParameters Filters new Dictionarystring IDictionarystring bool status new Dictionarystring bool running true But this is entirely unnecessary and by default using the All false parameter should return only current running containers but instead it returns all containers We can see the appropriate behavior of the Docker API by querying localhost containersjson which shows only the current running containers but for explicitness localhost containersjsonallfalse returns only current running containers as well See Docker Engine API v Hi I need to create containers that use GPU In order to do that you need to configure the property DeviceRequests from HostConfig Object but this library doesnt have it yet There are other properties that are missing too Hope it gets updated as soon as possible Thanks Regards The docs living here seems to be outdated Eg Stream stream await clientImagesCreateImageAsync new ImagesCreateParameters Parent fedoramemcached Tag alpha new AuthConfig Email testexamplecom Username test Password paw rd Current properties of ImagesCreateParameters in seems to be FromImage FromSrc Repo Tag Hi Id like to report progress in realtime when I invoke BuildImageFromDockerfileAsync since this is an operation that could take several seconds or even minutes depending on the Dockerfile At the moment the BuildImageFromDockerfileAsync method returns a TaskStream as you can see here and that allows me to get the full command output but only when the operation has ended Instead I want to be able to get the progress in realtime as soon as its outputted by Docker Thanks If you are reporting a new issue please first search for a matching issue in this repository Output of dotnet info paste your output here What version of DockerDotNet paste your output here Steps to reproduce the issue What actually happened What did you expect to happen Additional information Some of the changes made are quite useful but no release has been made in the last years A new release will be welcomed