Vcpkg is a C dependency management system that makes installation and consumption as a dependency very easy We should support this for VW to allow consuming the lib as easy as possible Instructions for creating a new package can be found here Describe the bug When input is a list of files inverthash only includes the features in the last file For the features only exist in previous files they are ignored in inverthash file To Reproduce Datasets kjson contains k events split kjson into files k json and k json Generate model and invert hash for kjson vw cbadf l powert dsjson d kjson inverthash kinverttxt f kvw readablemodel kreadabletxt Generate model and invert hash for kjson vw dsjson d k json cbadf l powert f k vw saveresume preserveperformancecounters vw dsjson d k json cbadf l powert f kcombinedvw saveresume preserveperformancecounters i k vw inverthash kcombinedinverttxt readablemodel kcombinedreadabletxt Expected behavior hash exists in kinverttxt should be in kcombinedinverttxt as well Readable model and invert hash should be consistent between a large file and a large file breaking into small chunks Observed Behavior if features only exist in k json it doesnt exist in kcombinedinverttxt but exist in readable model Environment What version of VW did you use What OS or language did you use Linux C WinSdk version upgrade to VS minimal one Describe the bug Build fails when trying to install within python environment using poetry Environment What version of VW did you use pip install vowpalwabbit What OS or language did you use Linux ubuntu Additional context getting the following error Built target vw Scanning dependencies of target pylibvw Building CXX object pythonCMakeFilespylibvwdirpylibvwcco Linking CXX shared library liblinuxx pylibvwso usrbinld homeuserasdfinstallspython liblibpython maabstracto relocat ion RX S against PyNotImplementedStruct can not be used when making a shared object recomp ile with fPIC homeuserasdfinstallspython liblibpython ma error adding symbols Bad value collect error ld returned exit status pythonCMakeFilespylibvwdirbuildmake recipe for target liblinuxx pylibvwso failed make liblinuxx pylibvwso Error CMakeFilesMakefile recipe for target pythonCMakeFilespylibvwdirall failed make pythonCMakeFilespylibvwdirall Error CMakeFilesMakefile recipe for target pythonCMakeFilespylibvwdirrule failed make pythonCMakeFilespylibvwdirrule Error Makefile recipe for target pylibvw failed make pylibvw Error error command cmake failed with exit status Command homeuserDesktopfoldervenvbinpython u c import setuptools tokenize filetmppipinstall kigynjevowpalwabbitsetuppyfgetattrtokenize open openfileco defreadreplace r n nfcloseexeccompilecode file exec install record tm ppiprecordgv xkwluinstallrecordtxt singleversionexternallymanaged compile installheader s homeuserDesktopfoldervenvincludesitepython vowpalwabbit failed with error code in tmppipinstall kigynjevowpalwabbit You are using pip version however version is available You should consider upgrading via the pip install upgrade pip command Anything i am missing See for more details cbtype dr is a mode of learning but we should enable the ability to use the IPS estimator to compute the average loss These performance fixes are critical for the next step in the labelprediction pr Change to using references with varray where shallow copies were being used Add new print functions that use varray references and deprecate the old by value ones Use stdsort instead of qsort in featuressort Is able to make use of inlining because of the template giving better runtime performance This is the first change in a series for my prediction and label refactor The main change here is the move to enum class over direct enum Hi there I am trying to apply vowpalwabbit as a linear regression model with the Boston housing toy dataset and I came across this SO post reply Note that this SO post answer was in when the published version of vowpal was while my current version is As part of reproducibility the command line code that I used is similar to what was suggested in the post vw d traintxt f linearmodel c passes holdoutoff lossfunction squared inverthash modelreadabletxt However when I input the arguments for multi pass training with inverthash it gave me an error Error inverthash is incompatible with a cache file Use it in single pass mode only Alternatively I also came across another SO post reply on Logistic Regression multipass by Martin who suggested creating the binary model file before converting to inverted hash This post was also posted in When I used the following code as suggested for creating the binary model of multipass before converting to invertedhash on onepass testing vw d traintxt c passes f modelbinary vw d traintxt t i modelbinary inverthash linearmodelhumanreadable This resulted in a model output that purely predicted for the testing of every observation of the training data only testing Num weight bits learning rate initialt powert using no cache Reading datafile traintxt num sources average since example example current current current loss last counter weight label predict features The output of linearmodelhumanreadable is Version Id Min label Max label bits lda ngram skip options Checksum Constant I suspected that this was used some form of overfitting so instead I adjusted the multipass to vw d traintxt c passes f modelbinary vw d traintxt t i modelbinary inverthash linearmodelhumanreadable The trained single pass model still seemed to be predicting a constant value for testing of every training data only testing Num weight bits learning rate initialt powert using no cache Reading datafile traintxt num sources average since example example current current current loss last counter weight label predict features The updated output of linearmodelhumanreadble still reads similarly Version Id Min label Max label bits lda ngram skip options Checksum Constant This single multipass model seems different from the direct simple inverthash model as shown vw d traintxt lossfunction squared inverthash linearmodelIH where the outputs of the linearmodelIH reads Version Id Min label Max label bits lda ngram skip options Checksum Constant Numfeat AGE Numfeat B Numfeat CHAS Numfeat CRIM Numfeat DIS Numfeat INDUS Numfeat LSTAT Numfeat NOX Numfeat PTRATIO Numfeat RAD Numfeat RM Numfeat TAX Numfeat ZN Is there a proper option for creating inverted hash outputs for multipass models I suspect there might be an issue with my command line inputs so I appreciate any corrections on my code Thanks in advance By migrating our dependencies to using FetchContent we achieve several things Users no longer need to worry about how to install dependencies on their system No Vcpkg apt or anything like that Works the same way on all platforms We can specify dependency versions explicitly Boost can be automatically retrieved See In order for this to work we need to need to move to at least CMake and ensure all projects are available under CMake C is currently missing Requiring a newer version for CMake is not an issue as it is easy to build form source simple to install on Windows and is also obtainable through an apt repo I see the apt repo as the most likely consumption use case on Ubuntu See here for instructions 