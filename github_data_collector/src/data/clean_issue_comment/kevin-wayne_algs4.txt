The comment in Averagejava for how to run it says java Average However its in a package and should be java eduprincetoncsalgs Average Thanks Micha l A hopefully obvious fix for a bug that bothered me when trying to use listeners Ive analysed your codebase and noticed that eduprincetoncsalgs StdStats is not fully tested Ive written some tests for the methods in this class with the help of Diffblue Cover Hopefully these tests will help you detect any regressions caused by future code changes If you would find it useful to have additional tests written for this repository I would be more than happy to look at other classes that you consider important The exception is not caught by tryblock Fixes typo in Javadoc for method dot This fixes the URL leading to Data Compression Before this the URL was incorrect and linked to a nonexistent page I run this java file in win windows console but I cant stop input so I add this code ifkeyequalsq break that can stop input and output result Currently in assignments and source code tests are made via calling methods in the main method this require the user to check input output manually and is not that efficient I highly recommend that those unit tests can be written in JUnit or TestNG which is more close to the meaning of unit tests while providing convenience to students who are doing programming assignments PS I just enrolled algorithmspart at coursera and its awesome Thank you for providing such a great online free course For example for the percolation I just finished suppose we prepare test cases like thisyou can use them freely and correct if I made some mistake It spent me some time man greeting txt false heart txt false input notxt false input txt true input notxt false input txt true input notxt false input txt true input txt true input txt true input txt true input txt true input txt true input txt true input txt true input dupstxt true input notxt false input txt true java txt true jerry txt true sedgewick txt true snake txt true snake txt true wayne txt true And I wrote unit test like this which is helpful while I improve my coding to meet the grade requirement java Test public void runAll In in new InthisgetClassgetResourcepercolationtestcasestxt int failed while inisEmpty String line inreadLine String array linesplit Percolation perc thisfromarray try assertEqualspercnumberOfOpenSites IntegerparseIntarray assertEqualspercpercolates BooleanparseBooleanarray catch AssertionError e Systemerrprintlnline percnumberOfOpenSites percpercolates failed if failed throw new AssertionErrorfailed test cases failed Test public void isFull Percolation perc new Percolation percopen percopen assertFalsepercisFull percopen percopen assertFalsepercisFull percopen assertTruepercisFull assertFalsepercisFull Hi I think I have found a few problems with the BTree implementation Not sure if this is really a problem but the same key can be inserted multiple times If the same key is inserted more than M times there will be a split and only the M keys of the new node will be accessible while the other ones will be forever inaccessible When a slipt occurs the old node keeps the keys that were sent to the new node even though they now inaccessible in that node again this may not be a problem When a key is removed the method still increments the size counter instead of decreasing it Since I am using the this BTree implementation I have fixed these problems on my side