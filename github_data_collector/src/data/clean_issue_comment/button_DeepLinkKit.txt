When submitting builds to App Store built with carthage and Xcode Version B toolchain I get this error in response ERROR ITMS Invalid Infoplist value The value for the key MinimumOSVersion in bundle MeetHubDevappFrameworksDeepLinkKitframework is invalid The minimum value is This PR sets IPHONEOSDEPLOYMENTTARGET to which affects the MinimumOSVersion plist value distributed with compiled framework With this update I no longer see the App Store Connect submission error When submitting builds to App Store built with carthage and Xcode Version B toolchain I get this error in response ERROR ITMS Invalid Infoplist value The value for the key MinimumOSVersion in bundle MeetHubDevappFrameworksDeepLinkKitframework is invalid The minimum value is Does it mean that DeepLinkKitframeworks IPHONEOSDEPLOYMENTTARGET needs to be updated now to like here rather than set in Hey Im trying to use this pattern www shop example comcollectionshandle to match these urls but not this url Unfortunately if use a noncapturing group somewhere in the pattern cleaning process the character confuses the framework If I use a normal capturing group www shop example comcollectionshandle still doesnt work because it gets confused with the handle parameter As stated I got a wrong route parameter when my route handler has alternation Config Route handler pathApathBpathCpath number URL test someApppathApath Result routeParameters number pathA Do I get my configuration wrong or is it just a bug Let me know if you need more info to investigate this URL Example Test objectivec selfrouter wwwgetinappcombrpath DPLDeepLink link Function is called but is not recognizing the PATH check LOG NSLog link LOG objectivec DPLDeepLink x URL queryParameters routeParameters path callbackURL null Test objectivec selfrouter wwwgetinappcombrrestaurantcityrestaurant DPLDeepLink link Function is never called app azAZ nextevniocomcontentcontentId This is my regular expression for march url but after method stringByRemovingNamedGroupsFromString its modifiedStr is app azAZ niocomcontent Using I m noticing an issue with routes that consist of a single path component failing to be handled when a trailing slash is included in the URL This issue is not present when there is more than one path component in the registered route Example In Infoplist I have the following scheme test set up so that my test app opens from Mobile Safari for URLs that begin with test img width altscreen shot at pm src This is the entirety of AppDelegatem in an otherwise empty test project in which I demonstrate the issue objc import AppDelegateh import DeepLinkKitDeepLinkKith interface AppDelegate property nonatomic DPLDeepLinkRouter router end implementation AppDelegate BOOLapplicationUIApplication application didFinishLaunchingWithOptionsNSDictionary launchOptions selfrouter DPLDeepLinkRouter alloc init selfrouter search DPLDeepLink link Called for testsearch Not called for testsearch THE ISSUE NSLogHandled Search Link selfrouter settingsabout DPLDeepLink link Called for testsettingsabout Called for testsettingsabout NSLogHandled settingsabout Link return YES BOOLapplicationUIApplication application openURLNSURL url sourceApplicationNSString sourceApplication annotationidannotation return selfrouter handleURLurl withCompletionNULL end In summary the issue shown in this example is that when attempting to open testsearch in Mobile Safari the handler that logs the message Handled Search Link is not called Workaround There is a workaround to the issue and that is to specify to the end of the registered route to allow for an optional trailing slash In the example above that d change the registration of search to be objc selfrouter search DPLDeepLink link Called for testsearch Called for testsearch NSLogHandled Search Link However this is not ideal as it requires treating routes with different numbers of components differently The method voidplaceTargetViewControllerUIViewController targetViewController inNavigationControllerUINavigationController navigationController in DPLRouteHandlermprevents having multiple instances of the same view controller type in a navigation stack It does that by popping all view controllers above a certain type of controller and then replacing that controller with the new one Doing this messes up the navigation stack for the user when it comes to the back button If they are looking at a controller then they hit a deep link and then hit back they are not where they started before they hit the deep link Why not just always present the targetViewController in top or at least have an option to not wipe the navigation stack before presenting the targetViewController Is it possible to use a regex in the scheme Specifically to match onewwwhostcomcallback and twowwwhostcomcallback but not threewwwhostcomcallback I expected this to work but it doesnt onetwowwwhostcomcallback There seems to be a commit that added this but no mention in the docs Apparently stringByRemovingPercentEncoding returns nil on iOS The following lines NSString key pairs firstObject DPLstringByReplacingPercentEscapesUsingEncodingNSUTF StringEncoding paramsDict key crash for eg customschemewhatever for obvious reasons 