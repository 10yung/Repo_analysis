 Description Bug The examples folder jestpuppeteer doesnt work i imagine that is a topic of version because all package are configured to install last version Installed all packages then run yarn test The console doesnt print that the test failed or not another thing i did for test was delete the recording folder and it doesnt recorded a new one Ive tried those packages into my local application and they didnt work as well when trying puppeteer alone including the examples folder everything works as expected Hey there Im trying to use pollyjs with puppeteer and Im encountering a problem some noncritical requests are erroring out when changing the page with puppeteers goto This is happening even in passthrough mode sh consolegroup nodemodulespollyjscoredistcjspollyjscorejs Errored POST consoleerror nodemodulespollyjscoredistcjspollyjscorejs errorText netERRABORTED Im not sure exactly what this error is indicating either This causes the whole test to fail Im wondering if there is an easy way to have polly ignore requests for this url or disable throwing errors selectively or entirely The test is fairly simple js itshould do something async await pagesetBypassCSPtrue await pagesetRequestInterceptiontrue const polly await new Polly shoulddosomething mode passthrough adapters puppeteer adapterOptions puppeteer page recordFailedRequests true logging false await pagegoto await pagegoto Package versions pollyjsadapterpuppeteer pollyjscore pollyjspersisterfs jest jestpuppeteer puppeteer Trace Evaluation failed TypeError Failed to fetch at ExecutionContextevaluateInternal nodemodulespuppeteerlibExecutionContextjs ASYNC at ExecutionContextanonymous nodemodulespuppeteerlibhelperjs at DOMWorldevaluate nodemodulespuppeteerlibDOMWorldjs ASYNC at Frameanonymous nodemodulespuppeteerlibhelperjs at Pageevaluate nodemodulespuppeteerlibPagejs at Pageanonymous nodemodulespuppeteerlibhelperjs at evaluate nodemodulespollyjsadapterpuppeteersrcindexjs at new F nodemodulescorejslibrarymodulesexportjs at PuppeteerAdapterpassthroughRequest nodemodulespollyjsadapterpuppeteersrcindexjs at PuppeteerAdapterpassthroughRequest as onPassthrough nodemodulespollyjsadaptersrcindexjs at PuppeteerAdapteronPassthrough as passthrough nodemodulespollyjsadaptersrcindexjs at PuppeteerAdapterpassthrough nodemodulespollyjsadaptersrcindexjs ASYNC at Pageanonymous nodemodulespuppeteerlibhelperjs at evaluate nodemodulespollyjsadapterpuppeteersrcindexjs at new F nodemodulescorejslibrarymodulesexportjs at PuppeteerAdapterpassthroughRequest nodemodulespollyjsadapterpuppeteersrcindexjs at PuppeteerAdapterpassthroughRequest as onPassthrough nodemodulespollyjsadaptersrcindexjs at PuppeteerAdapteronPassthrough as passthrough nodemodulespollyjsadaptersrcindexjs at PuppeteerAdapterpassthrough nodemodulespollyjsadaptersrcindexjs at PuppeteerAdapterhandleRequest nodemodulespollyjsadaptersrcindexjs If this is a nontrivial case I can make a repro Description This is a featuredocumentation request My goal is to have a proxy server node vanilla http or express which will persist HAR files for any request that goes through it It seems like in Polly its expected to be run on the client that is sending requests In my scenario I dont control the client but I do control the server the client is sending requests to over http So I want to be able to start a node http server transparently pass through requests to the proxy target and responses to the client and have Polly running on the same server persist HAR files for these requestresponse pairs Im glad to implement this and contribute it back but Im looking for highlevel guidance on if it makes sense to do this with Polly and if so how it should be implemented It seems like I should be able to make an adapter that maps the parsed data from node httpIncomingMessage for the request and httpServerResponse for the response onto Pollys format and use the fs persister and it should just work but Im not clear on how much from the nodehttp client example is necessary and how its different since the flow is a little inverted Thoughts Description I use PollyJS with Puppeteer to record and replay http requests in E E test context I have one neverending http call Im trying to figure out why I didnt managed to find the root cause of it and started to wonder if it could be a bug Every other requests works as expected only this one doesnt the request is an http POST to a laravel backend to get an auth token oauthtoken Based on body parameters if username and password are invalid the backend answer with an error and PollyJS behave correctly If username and password are valid the backend answer code with a token Request works as expected when Polly is not enabled and request interception is off Manual tests in devtools js fetchurl method POST headers accept applicationjson contenttype applicationjsoncharsetUTF body JSONstringifycredentials Without polly img width altCapture de cran src width altCapture de cran src With polly img width altCapture de cran src Details of the passthrough request img width altCapture de cran src width altCapture de cran src I tried to understand what is happening by watching page events in the pollypuppeteeradapter and have seen my request going through these events request response request failed timeout Dependencies json pollyjsadapterpuppeteer pollyjscore pollyjspersisterfs Config js new PollyJS mode passthrough adapters puppeteer persister fs Environment Nodejs v darwin Description Because of the use of the InMemoryPersister we removed all the stored recordings generated by the tests which we used as a crutch to do semimanual regression testing eg check if certain attributes changed in the HAR file after making a change Instead we should write actual snapshot tests to catch these which will be significantly more useful Description Per convo in it looks like testintegrationadapternodetestsjs is not being run and is most likely dead code Repro steps Edit testintegrationadapternodetestsjs and add eg expectfalsetoequaltrue into one of the it blocks Description The startedDateTime is a timestamp but does not include timezone information This could lead to potential problems with expiration calculation Example situation User A records a network call in GMT expiresIn is set to eg days User B replays a network call in GMT days later The request will expire since startedDateTime will be converted to the local timezone Another example would be running code with Polly on CI which hosts servers on a different timezone than your machine This way you could get inconsistent results compared to localhost Suggested solution It would be good to save the timezone information into the startedDateTime in the har file or any other persister format so it can be parsed together with the timestamp current time converted to the timezone of the recording for comparison to get consistent results regardless of the location Description Im using Firestore in my project Firestore seems to use longpolling on HTTP GET requests to provide its realtime updates This means firestore js library im using angularfire first makes a POST request to firestore servers That one is fine Then it does a GET request which is kept open for a long time around a minute If you look at that GET request in Chromes devtool it will show you an empty response because devtools are waiting for the request to close I guess to display the response However the js code already has access to the chunks of data so firebase already displays it on the page When pollyjs gets in the picture even in passthrough mode it crashes The POST request works fine but the subsequent longlived GET queries even if passedthrough are breaking firebase js callsite The fact that passthrough also breaks firestore means its a nogo for my project Im really eager to use pollyjs and I would love to find a workaround even if it means I can ignore those firebase calls and mock the other calls Best would be of course to be able to mock those longpolling calls as well Error Message Stack Trace In order Passthrough POST ms At this point the GET request is intercepted by pollyjs but polly is not logging it cause the request is still not closed After s firebase callsite which is wrapped by polly fails to get the data they want so they print this indexesmjs T Z firebasefirestore Firestore Could not reach Cloud Firestore backend Backend didnt respond within seconds This typically indicates that your device does not have a healthy Internet connection at the moment The client will operate in offline mode until it is able to successfully connect to the backend After more time like min the request is closed I assume by the server and polly prints pollyjscorejs Passthrough GET ms pollyjscorejs Errored GET pollyjscorejs Error INVALIDSTATEERR at verifyRequestOpened pollyjsadapterxhrjs root at FakeXMLHttpRequestsetStatus pollyjsadapterxhrjs root at FakeXMLHttpRequestrespond pollyjsadapterxhrjs root at XHRAdapterrespondToRequest pollyjsadapterxhrjs root at XHRAdaptercallee pollyjsadapterxhrjs root at tryCatch pollyjsadapterxhrjs root at Generatorinvoke as invoke pollyjsadapterxhrjs root at Generatorprototypecomputed as next pollyjsadapterxhrjs root at asyncGeneratorStep pollyjsadapterxhrjs root at next pollyjsadapterxhrjs root at vendorjs root at new Promise pollyjsadapterxhrjs root at XHRAdapteranonymous pollyjsadapterxhrjs root at XHRAdapteronRequestFinished pollyjsadapterxhrjs root I think this class may be the firestore network implementation Config Copy the config used to setup the Polly instance js thispolly new Pollytestrecording adapters adapterFetch adapterXhr persister persisterLocalStorage matchRequestsBy headers false url query false logging true const server thispolly serverany Dependencies Copy the pollyjs dependencies from packagejson json pollyjsadapterfetch pollyjsadapterxhr pollyjscore pollyjspersisterlocalstorage Environment This is running inbrowser chrome Version Official Build bit macOS G Rather than generating a directory named with the recordingName and then a recordinghar file inside that Id prefer to just have the recordinghar file named with recordingName thus removing the additional directory depth Description Id like to be able to override the method use to log to the console Rather than assuming we always want to call consolelog it would be cool if that is a default but overridable with a userprovided function with some given signature One usecase is logging the mocked requests into the Cypress command log so that its clear what is going on in Polly during your tests If you are interested in a feature like this Im happy to open a pull request for it Proposed Syntax I would propose that in addition to configuring logging being enabled or disabled an alternate logger can be provided That could look something like this js new Polly logging true logger log it might be interesting to allow logger itself to be a function that returns an object with the desired properties like so js new Polly logging true logger log 