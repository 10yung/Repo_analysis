Cannot deserialize dictionary of string int AssetsPluginsFullSerializerConvertersUnityKeyframeDirectConvertercs warning CS UnityEngineKeyframetangentMode is obsolete Use AnimationUtilitySetLeftTangentMode AnimationUtilitySetRightTangentMode AnimationUtilityGetLeftTangentMode or AnimationUtilityGetRightTangentMode instead AssetsPluginsFullSerializerConvertersUnityKeyframeDirectConvertercs warning CS UnityEngineKeyframetangentMode is obsolete Use AnimationUtilitySetLeftTangentMode AnimationUtilitySetRightTangentMode AnimationUtilityGetLeftTangentMode or AnimationUtilityGetRightTangentMode instead AssetsPluginsFullSerializerConvertersUnityKeyframeDirectConvertercs warning CS UnityEngineKeyframetangentMode is obsolete Use AnimationUtilitySetLeftTangentMode AnimationUtilitySetRightTangentMode AnimationUtilityGetLeftTangentMode or AnimationUtilityGetRightTangentMode instead Provide a general summary of the issue in the Title above Expected Behavior Tell us what should happen When using FullSerializer on AOT platforms with the newest runtime compatibility level serializationdeserialization should complete successfully Current Behavior Tell us what happens instead of the expected behavior With the newest runtime NET X with compatibility level NET X serialization fails on AOT platforms Android tested in my case I have traced the offending line down to return PropertyInfomemberInfoGetValuecontext new object in fsMetaPropertyReadobject context Possible Solution Not obligatory but suggest a fixreason for the bug I worked around this issue for myself by changing the line return PropertyInfomemberInfoGetValuecontext new object to return PropertyInfomemberInfoGetGetMethodInvokecontext null While this seems to resolve the issues it causes the runtime tests to fail due to exceptions being thrown on that line Due to this I am currently using NET Standard without my workaround for now It may be possible to implement the hotfix in a compatible way by doing some kind of nullcheck prior Solution reference here Steps to Reproduce Provide a link to a live example or an unambiguous set of steps to reproduce this bug Include code to reproduce if relevant Install Unity f Build the FullSerializerTestingtestsceneunity with configuration specified in ContextEnvironment Watch it fail serialization Context Environment How has this issue affected you What are you trying to accomplish Providing context helps us come up with a solution that is most useful in the real world As Unity introduces many workflow improvements for us I have upgraded our project to use it I was experimenting with using the NET X compatibility level but after hitting these issues I have decided to stay with NET Standard for now Unity Version Unity f FullSerializer Version Latest commit c db f daa e d baea e Unity Target Android Huawei Mediapad T Scripting Runtime Version NET x Equivalent Scripting Backend IL CPP Api Compatibility Level NET x An infinite loop occurs when parsing the string Code snippet fsData fd fsJsonParserParse out fd Hi Today I have tried to serialize and deserialize doubleMaxValue using this serializer and fall into this error caused when deserializing csharp Exception Error while parsing Bad double format with E context E FullSerializerfsResultAssertSuccess FullSerializerfsJsonParserParse SystemString input It only caused when using doubleMaxValue as far as I know Any help is greatly appreciated Thanks Hi Im no longer actively involved in C so if youd like to receive commit access to this repository please reply here Small API change to EditorApplicationplaymodeStateChanged in Unity that may eventually break harder This PR only fixes for and leaves compatibility for previous versions Full serializer overrides the default Unity serializer in apparently all cases including the Bolt visual scripting plugin I was using This was causing MAJOR performance slowdowns in the unity editor You guys might want to put a strong warning to devs not to mix and match full serializer with any plugin project wide that uses serialization in any way There should also be a way to disable full serializer on a per script bases Hi thanks for the project here is my code to redefine the converter for an abstract class public class PayloadConverter fsDirectConverterPayload protected override fsResult DoSerializePayload model Dictionarystring fsData serialized serializedAddtype new fsDataadd return fsResultSuccess protected override fsResult DoDeserializeDictionarystring fsData data ref Payload model return fsResultSuccess public override object CreateInstancefsData data Type storageType Payload payloadnull string payloadTypedataAsDictionary type AsString switchpayloadType case add payloadnew AddObjectPayload break case move payloadnew MoveObjectPayload break return payload Just missing the standard code for serialization deserialiation of my object based on its reference without inistantiate it Have I to duplicate all code or maybe there is a magic function to do this Thanks a lot Christof Im using Unity f bit and after importing fullserializer into the project the annotations dont seem to do anything when added to any variables I am correct in that adding fsProperty to a variable should basically have the same function as SerializeField Like it should appear in the inspector and everything