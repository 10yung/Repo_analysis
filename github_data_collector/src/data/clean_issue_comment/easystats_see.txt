 Autoscaling the dots would be awesome I think this is doable and also preferable This is rather a slow process with small steps Remove annoying tableGrobs textual output Improve alignment r libraryrstanarm librarysee librarybayestestR model stanglmmpg wt gear data mtcars chains iter x pointestimatemodel all plotx supCreated on by the reprex package v sup DominiqueMakowski estimatefit was renamed to estimateresponse if Im not mistaken However the plot now looks a bit different I guess this is intended Could you please check if plots are OK Hi DominiqueMakowski and strengejacke There was a brand new journal just announced called Journal of Data Science Statistics and Visualisation I found out about it through the ASA listserv They announced a call for the first round of papers to be published There are no APCs and its open source What do you guys think about preparing and submitting a paper covering an introduction and implementation of see It could be a really cool thing to get easystats in on the ground level of a new journal related to what we all do Here is the homepage Let me know if youre on board If so I would be happy to take the lead on the paper and start drafting If not no worries Hi strengejacke apologies for my delay here Yeah I have some MWE for each First for the ePCP expected proportion correctly predicted we are looking for a higher value bounded between and where a model that perfectly predicted all actual observations Here is some sample code using mtcars R libraryOOmisc for ePCP libraryggplot logitmod glmvs mpg data mtcars summarylogitmod logitmod glmvs mpg cyl data mtcars summarylogitmod y mtcarsvs pred predictlogitmod typeresponse pred predictlogitmod typeresponse ePCP expected proportion of correct prediction epcp ePCPpred y alpha define observed values and obtain predicted values epcp ePCPpred y alpha epcpdata dataframerbindepcp epcp epcpdatamodel c epcpdatacount factorc label cModel Model Now the plot ggplotepcpdata aesxmodelyePCPcolourcount geombarpositionpositiondodge statidentity fill darkgray geomerrorbaraesyminlower ymaxupper width positionpositiondodge labsxModel Specification yExpected Proportion of Correct Prediction title Comparing ePCP between Model and Model colourModel Specification themebw And next for the heatmapFit which is a little less flexible the goal is to compare model predictions with smoothed empirical predictions The degree line references a perfect fit Any deviance from that line suggests a loss in goodness of fit The pvalue legend shows if any deviance is statistically significant dark color means statistical significance Using the same models as an example from mtcars it would look something like R heatmapfit libraryheatmapFit for heat maps quick rescale to bound predictions between and range functionx xminxmaxxminx pred rangepred pred rangepred heatmapfity pred reps legend TRUE heatmapfity pred reps legend TRUE You can copy and paste this code to see the figures Pretty clean efficient renderings of model fit And of course ROC curves are always great simple model fit checks Let me know thoughts if you have them Hope this helps a bit Originally posted by pdwaggoner in r librarysee librarybayestestR libraryrstanarm junk captureoutputmodel rstanarmstanglmmpg wt gear cyl disp data mtcars plotequivalencetestmodel ci Warning Possible multicollinearity between disp and wt r disp and cyl r This might lead to inappropriate results See Details in equivalencetest Picking joint bandwidth of Warning Removed rows containing nonfinite values statdensityridges supCreated on by the reprex package v sup Currently if I understand we start by keeping the samples of the posterior within the CI Then these remaining samples are passed to densityridges which computes the density and plots it Unfortunately the density estimation of a subsample done by densityridges gives a distorted vision especially in the tails which is usually of interest of the actual distribution even compared to a regular geomdensity which is already distorted r librarysee librarybayestestR libraryrstanarm libraryggplot libraryggridges df dataframex crnorm rnorm y repca b each df df dfx dfx Lets say this is my HDI bounds ggplotdf aesx x yy geomdensityridges Picking joint bandwidth of r ggplotdf dfy a aesx x geomdensity supCreated on by the reprex package v sup One of the ways to address it is to do the density estimation beforehand then select the HDI section and pass that to geomridgeline r librarysee librarybayestestR libraryrstanarm libraryggplot libraryggridgesal librarydplyr df dataframex crnorm rnorm y repca b each df rbind bayestestRestimatedensitydf dfy a x dplyrmutategroupa bayestestRestimatedensitydf dfy b x dplyrmutategroupb df df df x df x Lets say this is my HDI bounds ggplotdf aesx x ygroup heighty geomridgeline supCreated on by the reprex package v sup Add medianmean difference Enable the plotting of individual draws as segments instead of CIs