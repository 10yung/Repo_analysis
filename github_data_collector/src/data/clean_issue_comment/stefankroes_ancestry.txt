Is there a way to write something like this parentclildren arrayofchildren Where arrayofchildren is an array of objects There is some method to get all children by level If I have children and they have each using the indirect method I get then indirect users So if my indirect users have more each one can I get children from my indirect users by level Hi Thank you for gem I added small performance improvement for sort sort vs sortby Hi Great library btw Thanks Is it possible to do something like this Itemwhereid descendants Thanks Summary Currently there is no way to make optimization for a specific database This PR is to give an approach to help a developer use database techniques to do optimization For example the origin of updatedescendantswithnewancestry has a lot of N queries to update all descendants By using regexpreplace on Postgres we can use one query to remove N Related Issue Fix arrangeserializable method in ancestrylibancestryclassmethodsrb file rb ancestrylibancestryclassmethodsrb def arrangeserializableserializer nil childrennodename children options nodes nil nodes arrangeoptions if nodesnil nodesmap do parent children nodename arrangeserializableserializer childrennodename options children serializedparent serializernil parent serializernewparent serializedparentserializablehashmergechildrennodename nodename end end And in use rb UserallarrangeserializableUserSerializer items As seen here it uses find on the scope with an object instead of an id which then leads to an ArgumentError You are passing an instance of ActiveRecordBase to find Please pass the id of the object by calling id Find with an instance was already deprecated with rails x and is now completely deactivated with rails Would it be enough to just change object to objectid Hey Were planning on upgrading to Rails rc soon I traced a number of deprecation warnings back to ancestry These include using updateattributes over update as well as using class level querying methods if the receiver scope has leaked see One thing I am not sure about is using unscoped over unscopewhere Feedback would be appreciated on this Suppose I have these models ruby class Area ApplicationRecord hasancestry orphanstrategy restrict hasmany people def fullname there is a name column ancestorsmap name name join end end class Person ApplicationRecord belongsto area end So each person belongs to an area which are arranged as a tree Now if I want to print a list with a set of people and the area they belong to I get N queries ruby data peoplepreloadareamapp pname pareafullname Area Load ms SELECT areas FROM areas WHERE areasid IN ORDER BY COALESCEareasancestry ASC Area Load ms SELECT areas FROM areas WHERE areasid IN ORDER BY COALESCEareasancestry ASC Area Load ms SELECT areas FROM areas WHERE areasid IN ORDER BY COALESCEareasancestry ASC Area Load ms SELECT areas FROM areas WHERE areasid IN ORDER BY COALESCEareasancestry ASC Area Load ms SELECT areas FROM areas WHERE areasid IN ORDER BY COALESCEareasancestry ASC Area Load ms SELECT areas FROM areas WHERE areasid IN ORDER BY COALESCEareasancestry ASC Area Load ms SELECT areas FROM areas WHERE areasid IN ORDER BY COALESCEareasancestry ASC Area Load ms SELECT areas FROM areas WHERE areasid IN ORDER BY COALESCEareasancestry ASC Area Load ms SELECT areas FROM areas WHERE areasid IN ORDER BY COALESCEareasancestry ASC Area Load ms SELECT areas FROM areas WHERE areasid IN ORDER BY COALESCEareasancestry ASC Area Load ms SELECT areas FROM areas WHERE areasid IN ORDER BY COALESCEareasancestry ASC Area Load ms SELECT areas FROM areas WHERE areasid IN ORDER BY COALESCEareasancestry ASC Area Load ms SELECT areas FROM areas WHERE areasid IN ORDER BY COALESCEareasancestry ASC Area Load ms SELECT areas FROM areas WHERE areasid IN ORDER BY COALESCEareasancestry ASC Area Load ms SELECT areas FROM areas WHERE areasid IN ORDER BY COALESCEareasancestry ASC It would be great to have a way to tell rails to preload the ancestors of a set of records stefankroes Looks like travis is no longer setup to run I do not have admin permissions so I can not fix Possible solutions enable travis again for ancestry transition ancestry over to a github org ancestryrb and give me admin priviliges over there Or if you have other suggestions that would be great Thanks K