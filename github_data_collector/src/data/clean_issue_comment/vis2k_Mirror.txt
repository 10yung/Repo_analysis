The room player properties were changed but this flag was not Room slots were not being updated on clients when they should have been This comes from a Discord user Uchiha IAH and needs review Before if we use Array of custom class having its custom network readerwriter which is derived from ScriptableObject then weaver gives error Fixed by rearranging the code Test case attached below new project import Mirror master and the package below bug observer weaver errors apply this PR weaver errors gone Play in editor as LAN Host Select PlayerPrefab Clone in scene observe array has correct objects press P and X and observe correct debug logs WeaverTestzip Describe the bug The function does not run when it should be executed according to its description To Reproduce Steps to reproduce the behavior Create the below script and attach to NetworkManager GameObject with Network Manager HUD Run game as server onlyhost Run other game as client Disconnect the client See error using UnityEngine using Mirror public class CustomNetworkManager NetworkManager public override void OnClientDisconnectNetworkConnection conn baseOnClientDisconnectconn DebugLogALL OK Never called Desktop OS Windows Build target Windows Unity version f MemoryStream has some performance issues as found by Whale Describe the bug When networked objects are put into DontDestroyOnLoad DDOL in Awake client gets warning and errors from spawn messages Repro project TestDDOLzip To Reproduce Steps to reproduce the behavior Import Mirror and the attached package and restart Unity Before opening any scenes clear scenes from Build Settings and add all from the pacakge Build and run as LAN Host In the editor open the Offline scene and play as LAN Client see the warning and errors in screenshot above In Online there is a networked scene object that goes into DDOL in Awake and both the Host and Client player objects also go into DDOL in Awake For this issue ignore the UI buttons at the top theyre for another issue that uses the same repro package and have no bearing on this issue Desktop please complete the following information OS Windows Build target standalone Unity version x LTS Mirror branch master we can replace both functions with GetGameObjectNetId and GetNetworkIdentityNetId then compare the netIds with the syncVar netId via SyncVarEqual this would reduce complexity not high priority though This change will destroy the Network Manager singleton object instead of preserving it if it is carried into a scene that has a Network Manager in it eg an offline scene or an alternate network scene In the case of an offline scene one would expect to be in the original offline state without retaining whatever changes had occurred to any components on the Network Manager game object through the course of game play Changing to the offline scene should effect a reset of the initial game state but theres no way now to get the Network Manager out of DontDestroyOnLoad DDOL once its set For example the offline scene may contain a login UI and the Network Manager object may also have an Authenticator component That should be reset when a client disconnects Various other properties of the Network Manager components may have also changed especially if it has been extended with additional properties I believe these should all be reset when a client or server returns to an offline scene or any scene where a Network Manager exists and a collision occurs via DDOL note this existed since day in UNET we currently have a workaround in master where we connect the host connection before calling SpawnObjects that doesnt work with local connections that go over the transport though which is why we need a better solution the problem when setting a SyncVar in OnStartServer the hook will never be called for the host because the host isnt connected yet during OnStartServer AND once it does connect ApplySpawnPayloadOnUpdateVarsOnDeserialize is never called hence the SyncVarHooks arent called at runtime the only reason why they are called even though OnDeserialize isnt is because the weaver adds a special case to call them during SyncVarset reproduce use the planets example StartHost move ConnectHost call to AFTER SpawnObjects see how SyncVar hooks arent called current workaround currently StartHost connects the host client connect BEFORE calling SpawnObjects this however only works because of our fake local connection doesnt go through the network it connects immediately once it does go over the network we need to wait until NetworkServerOnConnectedconnId finds the host connection then spawn solutions a call ApplySpawnPayload on host too BUT this will overwrite server state from ms ago to the one that was sent it sucks b call all SyncVar hooks once the host connected BUT what if a SyncVar wasnt changed then we shouldnt call the hook sucks too c by design assume that hooks arent when modifying SyncVars in OnStartServer just live with it and remove the ugly workarounds this might be the way to do it d separate host client and host server in memory and call ApplySpawnPayloadOnDeserialize etc unfortunately this is nearly impossible with the current design where GameObjects and Hierarchy are shared by host server and host client e live with the workaround accept that host mode will never be perfect