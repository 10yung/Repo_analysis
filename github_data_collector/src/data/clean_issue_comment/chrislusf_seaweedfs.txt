Describe the bug Trying to do the following using the default dockercompose setup causes Git to throw the following arbitrary errors due to unexpected filesystem syscalls failures such as ENOENT on getcwd When some of those happen even the shell calling Git often becomes confused about what its current pwd is ending up showing it as unknown sh After starting the dockercompose setup docker run rm it network seaweedfsdefault device devfuse capadd SYSADMIN entrypoint binsh chrislusfseaweedfs apk add fuse git mkdir mntseaweedfs weed mount filer filer dir mntseaweedfs cd mntseaweedfs git config global username test git config global useremail testtesttest git init test echo Hello World hellotxt git add hellotxt git commit cd touch foo git init test Errors fatal not a git repository or any parent up to mount point mnt Stopping at filesystem boundary GITDISCOVERYACROSSFILESYSTEM not set fatal unable to get current working directory No such file or directory sh getcwd No such file or directory System Setup The default dockercompose setup from here dockerseaweedfscomposeyml The default from the dockercompose setup Alpine on top of Docker for Mac on macOS output of weed version version GB linux amd if using filer show the content of filertoml Expected behavior Git should work correctly like it does on a local disk Hi is there any way to convert a ec volume back to a normal volume best regards Stefan If the upload file size limit is configured any file larger than the limit would not be uploaded Default to no limit Describe the bug Getting timeout over seconds from volumeserver while doing GC System Setup usrlocalbinweed logtostderr master mdirmntdata meta ip defaultReplication volumePreallocate volumeSizeLimitMB pulseSeconds peers usrlocalbinweed logtostderr v volume port mserver dirmntdata datamntdata data index leveldb max ip rack photol OS version Ubuntu output of weed version version GB linux amd Expected behavior Do not get highly reduced performance while doing GC Screenshots Logs Logs from the volume server shows alot of log and a broken pipe in the periods of timeout Additional context GC by curl store original S bucket info and use it to copy or sync data Sponsors SeaweedFS via Patreon Describe the bug READMEInstallationguide Step contains command go get githubcomchrislusfseaweedfsweed It builds weed here without compiler errors but weed binary panicing same as in panic debugrequests is already registered You may have two independent copies of golangorgxnettrace in your binary trying to maintain separate state goroutine running goetcdioetcdvendorgolangorgxnettraceinit mntsrcuserprojectspkgbuildseaweedfsgitsrcsrcgoetcdioetcdvendorgolangorgxnettracetracego x cd BUT if weed is built via git clone make without go get everything is ok System Setup usrbinweed server dirhomeuserweedfs volumemax volumeport volumepublicUrl OS version ArchLinux fresh output of weed version version GB linux amd seaweedfsgit r de d Additional context Im maintainer of seaweedfsgit PKGBUILD in Archlinux AUR for last years Ive not checked build last months but before this time everything in PKGBUILD was worked without issues and strongly according to READMEs build instructions Today it switched to make due to panic in weed Can use WinFsp to support Windows Mount as FUSE WinFsp is a set of software components for Windows computers that allows the creation of user mode file systems In this sense it is similar to FUSE Filesystem in Userspace which provides the same functionality on UNIXlike computers The RClone use it to mount filesystem in windows This is project url Would iron out any potential bugs Volume server count how many object has been written if the number of objects is bigger than threshold sync the kernel cache volume server fsyncThreshold volume fsyncThreshold fsync Seaweedfs topo host rack master volume host rack master volume host rack master volume Replication High Availability Goal tolerance one machine crashed Assume an object is going to be stored in volume and volume but suddenly host crashed object failed to store in volume completely When host come back a client call for that object Seaweedfs would tell the client to find object in volume or volume But volume do not contain that object cause error My solution for this issue Implement a proxy layer in volume When volume failed to find an object ask master for the volumes list proxy the request to another volume When get the object write the object to the local disk again volume volume host host host Seaweedfs volume volume volume volume volume volume 