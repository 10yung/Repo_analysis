 What Fix a bug on the BackerDashBoardViewController where the list wasnt being refreshed after watchingunwatching a project on iOS Why Because bugs are no good JIRA ticket How On iOS the viewWillAppear is no longer being called due changes made on the default modal presentation So to be notified that the list and starred projects count should refresh the existing ksrprojectSaved notification is used The notification is posted only if after tapping the save button the project was successfully updated on the server side See refreshprojectbugfix Acceptance criteria Using a iOS devicesimulator go to Profile and tap the Saved button to see a list of saved projects Select on project and tap the heart icon to unwatch the project Dismiss the viewController The project should be removed from the list and the saved projects count should be updated This template is just a guide delete any and all parts which you dont need What Accessibility link added to settings Why Users understand Kickstarter s accessibility standards See Trello screenshots external resources Before After Simulator Screen Shot iPhone X at Screen Shot iPhone X at Accessibility Tap targets use minimum of x pts dimensions Works with VoiceOver Supports Dynamic Type Acceptance criteria Navigate to Setting Help Accessibility Statement The a y statement view TODO Add new string from What Updates the variants for the Back this project CTA experiment Previously we only had one experimental variant called experimental which was associated with the See rewards copy Now we have two experimental variants variant and variant for See the rewards and View the rewards copy respectively Why For our first Optimizely experiment we want to test two versions of updated copy instead of one How Updated the Variant enum and the logic to correspond to the correct copy added VM tests removed screenshot tests since theyre not really covering anything thats not already covered by the general ProjectPamphletViewController tests VM tests to verify the correct copy is displayed are sufficient for this behavior See Trello screenshots external resources Control Variant Variant Simulator Screen Shot iPhone at Simulator Screen Shot iPhone at Simulator Screen Shot iPhone at Accessibility x Tap targets use minimum of x pts dimensions x Works with VoiceOver x Supports Dynamic Type Acceptance criteria You can whitelist your deviceid on Optimizely by looking for the property sessiondevicedistinctid which is fired with most events x Whitelisting your deviceid into the control group navigate to any project you should see Back this project as the CTA copy x Whitelisting your deviceid into the variant group navigate to any project you should see See the rewards as the CTA copy x Whitelisting your deviceid into the variant group navigate to any project you should see View the rewards as the CTA copy What Removes the deprecated checkout code Note This is based off the Xcode branch of Also note See TODOs below for some lingering code that needs a little more consideration before removing Why Weve rebuilt this flow natively and this code is no longer needed We thank it and hope that it sparks joy in another code base How Removed all deprecated checkout files Removed old checkout related Storyboards Did a sweep for functions that are no longer in use and removed those Removed redundant tests that depended on disabled feature flags or experiments Removed v endpoints that we arent using anymore Acceptance criteria Confirm that all of the deleted code was correctly removed and is no longer needed Test affected areas of the app for regressions Project page Checkout Manage Pledge Backing VC etc TODO Remove BackingViewController if possible Unlikely to be possible soon x Refactor FeatureFlagToolsViewModelTests to not depend on actual Feature flags as we will remove these from time to time x Remove native checkout feature flags once our tests dont depend on them Run periphery on the code base to be sure I found all of the unused code Unfortunately there are issues running this with Xcode x Remove old checkoutrelated tracking functions What Back a Project flow event cleanup Renames some events adds others and updates the property groups associated with the events Why More event cleanup work How The following events are now whitelisted and flowing into the data lake Project Page Pledge Button Clicked session properties user properties project properties fires when a user taps the Back this project button in the nonbacked state Select Reward Button Clicked session properties user properties project properties pledge properties fires when the user selects a reward from the rewards carousel Pledge Submit Button Clicked session properties user properties project properties pledge properties checkout properties fires when the user taps the Pledge button ie backs a project with a credit card Checkout Payment Page Viewed session properties user properties project properties pledge properties fires when the user visits the pledge screen Acceptance criteria x Project Page Pledge Button Clicked should fire when you tap Back this project on the project page project properties x Select Reward Button Clicked should fire when you select a reward in the rewards carousel project properties pledge properties x Pledge Submit Button Clicked should fire when you tap the Pledge button on the pledge screen project properties pledge properties checkout properties x Checkout Payment Page Viewed should fire when you navigate to the pledge screen project properties pledge properties What Adds additional custom properties for us to send to Qualtrics Why These additional properties allow us to betterfilter our targeting logic for surveys How Added distinctid to distinctly identify the device Added useruid to be able to dedupe survey responses if necessary Added firstappsession which we set to after the first evaluation of the targeting logic in order to have a way of knowing that the app has been used at least once before prompting the user to complete the survey Acceptance criteria This PR should just be codereviewed we will test the behaviour with Qualtrics Intercepts separately in an alpha build x Testing passed on alpha build This template is just a guide delete any and all parts which you dont need What In rewards carousel X in the top bar is in a different location than the project page so were moving it to the same location as rewards carousel page Why So that transitioning between these screens is smoother See Before After Simulator Screen Shot iPhone X at Simulator Screen Shot iPhone X at Acceptance criteria X buttons in Project Page and Rewards Carousel appears in the same position Please kindly add Sign in with Google Account option so that we can seamlessly log in kickstarter from all platform What Updates the app to compile in Xcode and Swift with some caveats The app is currently compiling in Xcode and Swift but snapshot tests are failing We will address this in a separate PR and merge that into this one We cant merge master just yet because we first need a Swift compatible version of the Qualtrics SDK Why We know that well need to compile against iOS and Swift in the near future and want to get ahead of that requirement from the App Store as well as to keep our codebase up to date and compiling in the latest version of Xcode How Combed through the code and updated anything that wouldnt compile mainly Doubles that were being inferred as Int in many places Lenses that were causing ambiguities Updated our Formatter tests due to some changes introduced by iOS will note in the code Acceptance criteria For now this PR addresses everything except the tests in KickstarterFramework I expect that it will be a fair bit of work to fix all of the UI and snapshot regressions and will open a separate PR based off this one to address those KsApi tests pass Library tests pass Formatter test changes are TODO x Fix UI regressions and snapshot tests in separate PR which well merge into this one x Merge x Merge 