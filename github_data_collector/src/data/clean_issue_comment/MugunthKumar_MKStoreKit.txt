I am trying to translate the class into Swift to get rid of the regularly occurring issues and to eventually share it here for the hopeful benefit of everyone Though I am now stuck at let productIdentifier receipt productid let expiresDateMs receiptDictionary expiresdatems renewable subscription let previouslyStoredExpiresDateMs selfpurchaseRecord productIdentifier if previouslyStoredExpiresDateMsnil selfpurchaseRecord productIdentifier expiresDateMs purchaseRecordDirty true else if Doubletruncating expiresDateMs Doubletruncating previouslyStoredExpiresDateMs selfpurchaseRecord productIdentifier expiresDateMs purchaseRecordDirty true in function startValidatingReceiptsAndUpdateLocalStore given the fields in do not even include field productid that is needed to access the purchase record in the line soon below First I do not know how the original ObjectiveC library works given that field never arrives second I would like to know with what I may substitute that value to index selfpurchaseRecord Thanks Fabrizio When I include the MKStoreKit files in my project I get error img width altMugutntu src reporting all extern NSString const as Unknown type name NSString That does not stop compilation from completing but it is still an hinderance Why does it happen and how to fix it I have received startValidatingAppStoreReceiptWithCompletionHandler error from users in hours that never happened before What is going on On line if NSDate date timeIntervalSince expiresDateMs doubleValue The expiresDateMs is milliseconds but the first one is in seconds Ive implemented MKStoreKit successfully and get notifications successfully after purchasing But Im not able to get transactionID receipt from parameter note NSNotificationCenter defaultCenter addObserverForNamekMKStoreKitProductPurchasedNotification objectnil queue NSOperationQueue alloc init usingBlock NSNotification note NSLogPurchasedSubscribed to product with id note object To promote inapp purchases on your product page your app needs to support a delegate method in SKPaymentTransactionObserver I faced with incorrect behaviour as i think I bought nonconsumable item I change apple account new account doesnt have that nonconsumable item I check availableProducts and it have not that nonconsumable item I think its because saving and restoration of purchaseRecord When I just comment restoration of purchaseRecord it works fine I have subscription now I have bought subscription in my signup screen using my itunes email id but now I open once again signup then i want to check which product is purchased using same itunes emailHow can I check which product is purchased in view did load method UIAlertView is deprecated in iOS as its superseded by UIAlertController Hence changed the code in initiatePaymentRequestForProductWithIdentifier to switch between UIAlertView and UIAlertController in case the latter exists Also suppressed the deprecation warning for UIAlertView ObjC if SKPaymentQueue canMakePayments if TARGETOSIPHONE if UIAlertController class iOS UIAlertController alert UIAlertController alertControllerWithTitleNSLocalizedStringIn App Purchasing Disabled messageNSLocalizedStringCheck your parental control settings and try again later preferredStyleUIAlertControllerStyleAlert UIAlertAction cancelAction UIAlertAction actionWithTitleNSLocalizedStringOkay styleUIAlertActionStyleCancel handlernil alert addActioncancelAction Show Alert UIApplication sharedApplication keyWindow rootViewController presentViewControlleralert animatedYES completionnil else Before iOS pragma clang diagnostic push pragma clang diagnostic ignored Wdeprecateddeclarations UIAlertView alloc initWithTitleNSLocalizedStringIn App Purchasing Disabled messageNSLocalizedStringCheck your parental control settings and try again later delegateself cancelButtonTitleNSLocalizedStringOkay otherButtonTitlesnil show pragma clang diagnostic pop elif TARGETOSMAC NSAlert alert NSAlert alloc init alertmessageText NSLocalizedStringIn App Purchasing Disabled alertinformativeText NSLocalizedStringCheck your parental control settings and try again later alert runModal endif return Memory leaks in this place Because voidproductsRequestSKProductsRequest request didReceiveResponseSKProductsResponse response will be executed in concurrence thread and no autorelease in body of method It easy to test just add break on objcautoreleaseNoPool Read here how to do it 