Is it possible to have calculated or derived data from inside the cache Something similar to Lets say I have a list of todos inside my cache and I want to keep track of a field thats numberOfTodos Can I set something up where numberOfTodos is calculated automatically based on todoslength The only way I see to do this currently is to store numberOfTodos as an additional field in the cache which is not ideal because the goal of any state management system should be to store the least amount of data possible and have the rest be derived feature I have a Query component link apollo cache everytime the cache changed then my render props in Query component will execute for rerender but my app also subscribe a mqtt server sync update my apollo cache it will cause my pagecomponet update random and unexpected when user is watch this page I only hope doing like once query when everytime componentDidMonut then update date until next time component closecomponentWillUnMonut then componentDidMonut again so is there any option can do that function for disable rerender My function calls to the store are slow for some reason I wonder if its a config issue When the function is called updateDashboardState I print out the time that takes to check how long it takes to update the cache It is around ms which is great On the other hand when I invoke the function and check the time between the function call and the return it is around ms which is terrible Apparently the reconciliation called times instead of or The cached data seems to be the same though Any workarounds Could be related to this issue const handleSearchUpdate async event const searchTerm eventtargetvalue const time new Date await updateDashboardState variables search searchTerm consolelognew Date time THIS IS ms WHICH IS TERRIBLE const typeDefs type FilterType VEHICLEFILTERATTRIBUTESLASTCONTACTEDBY String VEHICLEFILTERATTRIBUTESLASTCONTACTEDDATESTART String VEHICLEFILTERATTRIBUTESLASTCONTACTEDDATEEND String VEHICLEFILTERATTRIBUTESWITHALERTS Boolean VEHICLEFILTERATTRIBUTESWITHSERVICEDUE Boolean const stateLink withClientState cache resolvers Mutation updateVehicleState state cache const data vehicleState typename VehicleState state cachewriteData data return null updateDashboardState activeOrderAttribute displayOrder filters search cache const startTime new Date const dashboardStateQuery gql query dashboardState client activeOrderAttribute displayOrder filters VEHICLEFILTERATTRIBUTESLASTCONTACTEDBY VEHICLEFILTERATTRIBUTESLASTCONTACTEDDATESTART VEHICLEFILTERATTRIBUTESLASTCONTACTEDDATEEND VEHICLEFILTERATTRIBUTESWITHALERTS VEHICLEFILTERATTRIBUTESWITHSERVICEDUE search const dashboardState cachereadQuery query dashboardStateQuery const data dashboardState typename DashboardState activeOrderAttribute activeOrderAttribute dashboardStateactiveOrderAttribute displayOrder displayOrder dashboardStatedisplayOrder search search undefined search dashboardStatesearch filters typename FilterType VEHICLEFILTERATTRIBUTESLASTCONTACTEDBY filters filters VEHICLEFILTERATTRIBUTESLASTCONTACTEDBY dashboardStatefilters VEHICLEFILTERATTRIBUTESLASTCONTACTEDBY VEHICLEFILTERATTRIBUTESLASTCONTACTEDDATESTART filters filters VEHICLEFILTERATTRIBUTESLASTCONTACTEDDATESTART dashboardStatefilters VEHICLEFILTERATTRIBUTESLASTCONTACTEDDATESTART VEHICLEFILTERATTRIBUTESLASTCONTACTEDDATEEND filters filters VEHICLEFILTERATTRIBUTESLASTCONTACTEDDATEEND dashboardStatefilters VEHICLEFILTERATTRIBUTESLASTCONTACTEDDATEEND VEHICLEFILTERATTRIBUTESWITHALERTS filters filters VEHICLEFILTERATTRIBUTESWITHALERTS dashboardStatefilters VEHICLEFILTERATTRIBUTESWITHALERTS VEHICLEFILTERATTRIBUTESWITHSERVICEDUE filters filters VEHICLEFILTERATTRIBUTESWITHSERVICEDUE dashboardStatefilters VEHICLEFILTERATTRIBUTESWITHSERVICEDUE cachewriteData data consolelogSTART consolelognew Date startTime THIS IS ms WHICH IS GREAT return null defaults vehicleState typename VehicleState state active dashboardState typename DashboardState activeOrderAttribute VEHICLESORTATTRIBUTESVEHICLEALERTSCOUNT displayOrder VEHICLELISTSORTATTRIBUTES VEHICLESORTATTRIBUTESVEHICLEALERTSCOUNT defaultOrder filters typename FilterType VEHICLEFILTERATTRIBUTESLASTCONTACTEDBY null VEHICLEFILTERATTRIBUTESLASTCONTACTEDDATESTART null VEHICLEFILTERATTRIBUTESLASTCONTACTEDDATEEND null VEHICLEFILTERATTRIBUTESWITHALERTS false VEHICLEFILTERATTRIBUTESWITHSERVICEDUE false search typeDefs How to read S from the from the cache I have stored the data in cache like this cache Here is my ApolloClient apclient If im reading using Fragments like below im getting data as null c Issue Labels While not necessary you can help organize our issues by labeling this issue when you open it To add a label automatically simply x mark the appropriate box below hasreproduction x feature docs blocking good first issue To add a label not listed above simply place label anotherlabelname on a line by itself x feature Is it possible for child resolvers to define required fields fragment so that they are automatically added to the remote query like in graphqltools Im aware that this package is getting deprecated but this feature is still alpha in apolloclient I need to store function references in client state is it possible with Apollo Example Native iOS or Android like header component for web on smaller screen widths Would be nice to update the header anywhere in app especially because what icons do on click and what title says usually depends on contextroutestate of the world Would be so nice to do something like this graphql header component reads this state and renders accordingly type Header title String subtitle String left HeaderButton right HeaderButton type HeaderButton icon String callback Function extend type Query header Header js React component function AnywhereInAppprops writeData is here for demo purpouse would be a waste to try write on each rerender clientwriteDatadata header typename Header title New Title subtitle left icon backarrow callback windowhistoryback right icon settings callback openSettingsModal function openSettingsModal do something return Im currently managing local state with React context which can have any value including references Id be very happy if I could replace context client state management with Apollo I have one hack in mind and its a spicy one Set callback to window object eg to windowmyAppName name Write callback name string instead of reference to store Read callback name from cache among other values Use callback like this windowmyAppName name Issue Labels While not necessary you can help organize our issues by labeling this issue when you open it To add a label automatically simply x mark the appropriate box below hasreproduction x feature docs blocking good first issue To add a label not listed above simply place label anotherlabelname on a line by itself Apollo Client is going to be released very shortly and will include integrated local state handling capabilities The functionality offered by apollolinkstate will be included in the Apollo Client core which means this projectrepository will be deprecated For those interested in trying out the new integrated local state features of AC see the changes are currently available via apolloclientalpha and reactapolloalpha Were still in alpha but will be cutting over to beta soon so if you have any feedback please add your comments in Thanks all Pull Request Labels While not necessary you can help organize our pull requests by labeling this issue when you open it To add a label automatically simply x mark the appropriate box below x feature blocking docs To add a label not listed above simply place label anotherlabelname on a line by itself I want TypeScript support to know what methodsprops the context cache has Id like to store objects in the cache that should be treated as scalars by apollo When writing the objects to the cache no typename should be required and while reading the object no subfields should be required As an example lets assume that I have such a custom TypeScript type typescript type Highlight foo string bar number baz boolean and would like to initialize the apollo client as follows typescript const client new ApolloClient clientState defaults highlight foo this resolvers Mutation updateHighlight newValue cache cachewriteData data highlight newValue return null So that I can use it in queries without needing to specify the fields graphql query highlight In a schema Id specify Highlight as a custom scalar but I dont see any examples how to do that in apollolinkstate Issue Labels While not necessary you can help organize our issues by labeling this issue when you open it To add a label automatically simply x mark the appropriate box below hasreproduction x feature docs blocking good first issue To add a label not listed above simply place label anotherlabelname on a line by itself If I try to execute an operation using execute on an apollo link state resolver has no cache Why js function testLink async function const result await makePromise executelinkState query SETVIDEOSTATE variables currentTime resolver setVideoState variables cache getCacheKey cache is undefined 