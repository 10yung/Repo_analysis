When drawing a part of a surface which is opaque we can turn off blending This happens when the same event is sent repeatedly to the server Of course the client shouldnt do this but the server should still handle it gracefully See When a touch device is disconnected and hence destroyed while it has active touch points in wlrseat they are left dangling and never cleared Should we make the output commit fail if VRR cant be enabled We dont know when VRR is indeed enabled but in some cases we know when it fails We still dont have support for testonly commits so dealing with failures is going to be annoying for compositors We need a Wayland protocol for VRR Sway implementation Minimal Sway patch blindly enabling VRR Fixes This series add a new wlroutputlayer API an implementation of this API in the Wayland backend and an example compositor My plan is to make glider switch to this API to demonstrate how it can be implemented under DRM Introduce wlroutputlayer This new API allows compositors to display buffers without needing to perform rendering operations This API can be implemented on Wayland using subsurfaces and on DRM using KMS planes The goal is to make use of this API in a future scenegraph API backendwayland implement the output layer API The output layer API is implemented using subsurfaces I chose to implement this API in the Wayland backend before doing so in the DRM backend because its way easier on Wayland On DRM one needs to figure out how buffers can be mapped to KMS planes libliftoff can help and perform atomic testonly commits our current DRM backend isnt ready for this examples add outputlayers example This new example demonstrates how to use the wlroutputlayer API Its a compositor that displays all client surfaces using wlroutputlayer To test one can for instance run buildexamplesoutputlayers s westonsimpledmabufegl westonsimpleegl Under the Wayland backend where layers work as long as clients use DMABUFs thsi should display two surfaces A new wlrscene API has been added following the design ideas from The new API contains the minimal set of features required to make the API useful The goal is to design a solid fundation and add more features in the future On my desktop AMD RX env WAYLANDDEBUG examplesdmabufcapture vaapi devdrirenderD libx nv testmkv wldisplay getregistrynew id wlregistry wldisplay syncnew id wlcallback wldisplay deleteid wlregistry global wlshm wlregistry global zwplinuxdmabufv wlregistry global wldrm wlregistry global wlcompositor wlregistry global wlsubcompositor wlregistry global wldatadevicemanager wlregistry global zwlrgammacontrolmanagerv wlregistry global gtkprimaryselectiondevicemanager wlregistry global zxdgoutputmanagerv wlregistry global orgkdekwinidle wlregistry global zwpidleinhibitmanagerv wlregistry global zwlrlayershellv wlregistry global xdgwmbase wlregistry global zwptabletmanagerv wlregistry global orgkdekwinserverdecorationmanager wlregistry global zxdgdecorationmanagerv wlregistry global zwprelativepointermanagerv wlregistry global zwppointerconstraintsv wlregistry global wppresentation wlregistry global zwlroutputmanagerv wlregistry global zwlrexportdmabufmanagerv wlregistry bind zwlrexportdmabufmanagerv new id unknown wlregistry global zwlrscreencopymanagerv wlregistry global zwlrdatacontrolmanagerv wlregistry global zwpprimaryselectiondevicemanagerv wlregistry global zwpvirtualkeyboardmanagerv wlregistry global zwlrinputinhibitmanagerv wlregistry global wlseat wlregistry global zwppointergesturesv wlregistry global wloutput wlregistry bind wloutput new id unknown wlregistry global wloutput wlregistry bind wloutput new id unknown wlcallback done wloutput geometry Dell Inc Dell S DG wloutput mode wloutput mode wloutput mode wloutput mode wloutput mode wloutput mode wloutput mode wloutput mode wloutput mode wloutput mode wloutput mode wloutput mode wloutput mode wloutput mode wloutput mode wloutput mode wloutput mode wloutput mode wloutput geometry Unknown GSYNC wloutput mode wloutput mode wloutput mode wloutput mode wloutput mode wloutput mode wloutput mode wloutput mode wloutput mode wloutput mode wloutput mode wloutput mode wloutput mode wloutput mode Capturable output Dell Inc Model Dell S DG ID Capturable output Unknown Model GSYNC ID libx x a b ec using cpu capabilities MMX SSE Fast SSSE SSE AVX libx x a b ec profile High level bit libx x a b ec core r c d H MPEG AVC codec Copyleft options cabac ref deblock analyse x x mehex subme psy psyrd mixedref merange chromame trellis x dct cqm deadzone fastpskip chromaqpoffset threads lookaheadthreads slicedthreads nr decimate interlaced bluraycompat constrainedintra bframes bpyramid badapt bbias direct weightb opengop weightp keyint keyintmin scenecut intrarefresh rclookahead rcabr mbtree bitrate ratetol qcomp qpmin qpmax qpstep ipratio aq Output matroska to testmkv Stream Video h nv x q kbs fps k tbn zwlrexportdmabufmanagerv captureoutputnew id zwlrexportdmabufframev wloutput zwlrexportdmabufframev frame zwlrexportdmabufframev object fd zwlrexportdmabufframev ready zwlrexportdmabufmanagerv captureoutputnew id zwlrexportdmabufframev wloutput AVHWFramesContext x a b b Failed to read image from surface x operation failed zwlrexportdmabufframev destroy libx x a b ec AVFrameformat is not set libx x a b ec AVFramewidth or height is not set zwlrexportdmabufframev frame zwlrexportdmabufframev object fd libx x a b ec Input picture width is greater than stride dmabufcapture x ffc ef f Error encoding Generic error in an external library wldisplay deleteid zwlrexportdmabufframev ready C dmabufcapture x ffc ef f Quitting C On my laptop Intel Core i U env WAYLANDDEBUG examplesdmabufcapture vaapi devdrirenderD libx nv testmkv wldisplay getregistrynew id wlregistry wldisplay syncnew id wlcallback wldisplay deleteid wlregistry global wlshm wlregistry global zwplinuxdmabufv wlregistry global wldrm wlregistry global wlcompositor wlregistry global wlsubcompositor wlregistry global wldatadevicemanager wlregistry global zwlrgammacontrolmanagerv wlregistry global gtkprimaryselectiondevicemanager wlregistry global zxdgoutputmanagerv wlregistry global orgkdekwinidle wlregistry global zwpidleinhibitmanagerv wlregistry global zwlrlayershellv wlregistry global xdgwmbase wlregistry global zwptabletmanagerv wlregistry global orgkdekwinserverdecorationmanager wlregistry global zxdgdecorationmanagerv wlregistry global zwprelativepointermanagerv wlregistry global zwppointerconstraintsv wlregistry global wppresentation wlregistry global zwlroutputmanagerv wlregistry global zwlrexportdmabufmanagerv wlregistry bind zwlrexportdmabufmanagerv new id unknown wlregistry global zwlrscreencopymanagerv wlregistry global zwlrdatacontrolmanagerv wlregistry global zwpprimaryselectiondevicemanagerv wlregistry global zwpvirtualkeyboardmanagerv wlregistry global zwlrinputinhibitmanagerv wlregistry global wlseat wlregistry global zwppointergesturesv wlregistry global wloutput wlregistry bind wloutput new id unknown wlcallback done wloutput geometry Sharp Corporation x wloutput mode Capturable output Sharp Corporation Model x ID AVHWDeviceContext x fd e c Failed to initialise VAAPI connection unknown libva error dmabufcapture x ffd abb a Failed to create a hardware device Inputoutput error zwlrexportdmabufmanagerv destroy Id prefer to have a dict instead eg protocolscodegetname would return the file for the generated code for instance Thats actually a pretty good idea Unfortunately meson cant use a non string literal for a dictionary key python protocolcode foreach proto path protocols protocolcode proto code This is invalid endforeach And due to the way dictionaries work ie theyre pure and some dictionaryofdictionaries type stuff I cant really think of a way to work around this eg putting it in the protocols dictionary But this will be fixed in It has been left as setvariablegetvariable currently but changed to use an array of protocol strings in the wayland backend I think this should be revisited when the next meson version is out and we eventually target it for whatever reason Originally posted by ascent in Add a destroy listener for textures which destroys the gles textures when the renderer is destroyed Fixes I am not entirely sure about the API changes since the wlrrenderer is now passed directly to the texture creation functions I am all ears for possible improvements Upcoming KMS feature See 