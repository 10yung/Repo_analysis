I rendered repeatedly and found that the following line is appended every time By this PR the advertisement is skipped if the one already exists md supCreated on r SysDate by the reprex package vr utilspackageVersionreprexsup Such as si vs sessioninfo I feel like I may need to do more around softdeprecation Figure out whether to do anything in response to this and if so what Probably related to I dislike the way outfile works In particular input NULL outfile NA is a very weird way to say create a reprex in the current working directory After the big internal refactoring its time to look at all the path handling again A few specific things to look into Maybe we should almost always reprex in a subdirectory For example if no input file is given but output NA work in current working directory maybe that should be more like the usual scenario where we work below temp dir If we start with a file should we work with a suitably named copy so that reprexrender is idempotent Ie repeated rendering doesnt potentially add multiple copies of the ad session info standard output error stub HTML preview works the way I want with the traditional reprex workflow But now that reprexdocument and reprexrender exist and are exported some people might render a reprex via the Knit button or a direct call to reprexrender And the HTML preview is wonkyspotty Prepare for release x Check current CRAN check results devtoolscheckremote TRUE manual TRUE devtoolscheckwindevel rhubcheckforcran revdepcheckrevdepchecknumworkers Update crancommentsmd Polish NEWS Review pkgdown reference index for eg missing topics Draft blog post Submit to CRAN usethisuseversionminor devtoolssubmitcran Approve email Wait for CRAN Accepted tada usethisusegithubrelease usethisusedevversion Finish blog post Tweet Add link to blog post in pkgdown news menu This is a PR to offer an alternative to current proposal in to deal with and it is inspired by it Instead of adding a custom post processing from md file produce by reprexrender to transform to JIRA markup it is build on new jira output format added in pandoc This allows to have a full conversion of markdown syntax to JIRA markup This seems more robust to build on pandoc with the drawback of requiring last pandoc version not included in RStudio IDE yet to be able to work I added a new shortcut reprexjira too and some test showing that pandoc is able to convert markdown syntax to jira markup Also it is rebased already on new dev reprex codebase One question you dont seem to use importFrom so I did not add the two rmarkdown function into NAMESPACE Various reasons it might be interesting to offer a workflow that is Rmdbased User is more comfortable in Rmd Hadley had some thoughts about this based on talking to minecetinkayarundel Chunks could take advantage of knitrrmarkdowns support for languages other than R From Projects using renv typically require some extra gymnastics which are performed normally through the use of a project Rprofile However reprex does not read that Rprofile by default leading to some subtle differences in how reprex runs code versus how renv might run that same code It could be worth considering whether reprex could support this by default eg by allowing the project Rprofile to be loaded either by default or when it detects or knows renv is active