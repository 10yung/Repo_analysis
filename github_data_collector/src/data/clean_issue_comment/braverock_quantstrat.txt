For me running bbandParametersR fails r Parameter example for BBands demo requireforeachquietlyTRUE requireiterators requirequantstrat example parallel initialization for doParallel this or doMC or doRedis are most probably preferable to doSMP requiredoParallel registerDoParallel by default number of physical cores demobbandsaskFALSE demobbands requirequantstrat suppressWarningsrmorderbookbbandsposstrategy suppressWarningsrmaccountbbandsportfoliobbandsposblotter suppressWarningsrmaccountstportfolioststockstrstratBBandsstartDateinitEqstarttendt some things to set up here stockstrIBM what are we trying it on well pass these SD how many standard deviations traditionally N how many periods for the moving average traditionally currencyUSD USD stockstockstrcurrencyUSDmultiplier IBM startDate initEq portfoliostbbands accountstbbands initPortfportfoliost symbolsstockstr bbands initAcctaccountstportfoliosbbands bbands initOrdersportfolioportfoliost addPosLimitportfoliost stockstr startDate set max pos set up parameters maTypeSMA n sdp stratstportfoliost define the strategy strategystratst storeTRUE one indicator addindicatorstrategy stratst name BBands arguments listHLC quoteHLCmktdata nn maTypemaType sdsdp labelBBands bbands add signals addsignalstrategy stratst namesigCrossover arguments listcolumnscCloseup relationshipgt labelClgtUpperBand bbands addsignalstrategy stratst namesigCrossover arguments listcolumnscClosedn relationshiplt labelClltLowerBand bbands addsignalstrategy stratstnamesigCrossover arguments listcolumnscHighLowmavg relationshipop labelCrossMid bbands lets add some rules addrulestrategy stratstnameruleSignal arguments listsigcolClgtUpperBand sigvalTRUE orderqty ordertypemarket ordersideNULL thresholdNULL osFUNosMaxPos typeenter bbands addrulestrategy stratstnameruleSignal arguments listsigcolClltLowerBand sigvalTRUE orderqty ordertypemarket ordersideNULL thresholdNULL osFUNosMaxPos typeenter bbands addrulestrategy stratstnameruleSignal arguments listsigcolCrossMid sigvalTRUE orderqty all ordertypemarket ordersideNULL thresholdNULL osFUNosMaxPos labelexitMid typeexit bbands alternately to exit at the opposite band the rules would be addrulestrategy stratstnameruleSignal arguments listdataquotemktdatasigcolLogtUpperBandsigvalTRUE orderqty all ordertypemarket ordersideNULL thresholdNULLtypeexit addrulestrategy stratstnameruleSignal arguments listdataquotemktdatasigcolHiltLowerBandsigvalTRUE orderqty all ordertypemarket ordersideNULL thresholdNULLtypeexit TODO add thresholds and stopentry and stopexit handling to test getSymbolsstockstrfromstartDateindexclasscPOSIXtPOSIXct srcyahoo IBM starttSystime outtryapplyStrategystrategybbands portfoliosbbandsparameterslistsdSDnlook at the order book getOrderBookbbands endtSystime printstrat execution time strat execution time printendtstartt Time difference of secs starttSystime updatePortfPortfoliobbandsDatespasteasDateSystimesep bbands endtSystime printupdatePortf execution time updatePortf execution time printendtstartt Time difference of secs chartPosnPortfoliobbandsSymbolstockstr plotaddBBandson sdSDnN R Quantitative Strategy Model Framework Copyright c Peter Carl Dirk Eddelbuettel Brian G Peterson Jeffrey Ryan and Joshua Ulrich This library is distributed under the terms of the GNU Public License GPL for full details see the file COPYING Id Warning message In updatePosPLPortfolio pname Symbol ascharactersymbol Could not parse as ISO string or onebothends of the range were outside the available prices Using all data instead strategystbbands User Set up pf parameter ranges to test nlist sdlist number of random samples of the parameter distribution to use for random run nsamples adddistributionstrategyst paramsetlabel BBparams componenttype indicator componentlabel BBands this is the label given to the indicator in the strat variable listn nlist label nFAST bbands adddistributionstrategyst paramsetlabel BBparams componenttype indicator componentlabel BBands this is the label given to the indicator in the strat variable listsd sdlist label nSLOW bbands results applyparamsetstrategyst paramsetlabelBBparams portfoliostportfoliost accountstaccountst nsamplesnsamples verboseTRUE numValues numResults stopped TRUE got results for task numValues numResults stopped TRUE returning status FALSE got results for task numValues numResults stopped TRUE returning status FALSE got results for task numValues numResults stopped TRUE returning status FALSE got results for task numValues numResults stopped TRUE returning status FALSE got results for task numValues numResults stopped TRUE returning status FALSE got results for task numValues numResults stopped TRUE returning status FALSE got results for task numValues numResults stopped TRUE returning status FALSE got results for task numValues numResults stopped TRUE returning status FALSE got results for task numValues numResults stopped TRUE returning status FALSE got results for task numValues numResults stopped TRUE first call to combine function evaluating call object to combine results funresult result result result result result result result result result returning status TRUE stats resultstradeStats printstats NULL PLACE THIS BLOCK AT END OF DEMO SCRIPT book getOrderBookport stats tradeStatsport rets PortfReturnsacct R Quantitative Strategy Model Framework Copyright c Peter Carl Dirk Eddelbuettel Brian G Peterson Jeffrey Ryan and Joshua Ulrich This library is distributed under the terms of the GNU Public License GPL for full details see the file COPYING Id bbandsR Z braverock printresults environment x f cd f printresultserror simpleError in mgetsymbols Portfoliosymbols second argument must be an environment simpleError in mgetsymbols Portfoliosymbols second argument must be an environment simpleError in mgetsymbols Portfoliosymbols second argument must be an environment simpleError in mgetsymbols Portfoliosymbols second argument must be an environment simpleError in mgetsymbols Portfoliosymbols second argument must be an environment simpleError in mgetsymbols Portfoliosymbols second argument must be an environment simpleError in mgetsymbols Portfoliosymbols second argument must be an environment simpleError in mgetsymbols Portfoliosymbols second argument must be an environment simpleError in mgetsymbols Portfoliosymbols second argument must be an environment simpleError in mgetsymbols Portfoliosymbols second argument must be an environment De Prado introduces the Triple Barrier Method concept for labeling observations in a potential ML model for time series The barriers are horizontal bars representing profittaking and stoploss prices and one vertical bar representing an expiration timespan ie x number of bars Where the top horizontal bar is touched first the observation gets a label of If the lower horizontal bar is touched first the observation gets a label of If the vertical bar is touched first De Prado suggests optionseither give the observation the sign of the return or a zero Your choice should depend on the problem you are trying to solve De Prado says the output from the function should be a dataframe containing the timestamps at which any barrier was touched De Prado also mentions possible configurations of the barrier triplet in which the barriers are enabled or disabled reflecting different objectives and constraints For our replication of the method we should consider all configurations some of which share some overlap with the trading strategy posed by Olsen et al in There could be a few applications of this method in quantstrat but our initial focus will be for extending it to signal analysis for any periodicity TODO Add more info Liberally edited from a prior email from braverock Survival models measure the probability that some event transition will happen in the future For signal analysis the transitions would likely be trading relevant things like pullbacks so you could us resting limits up x down x etc within some specific time horizon This is called a competing risks model appropriately enough Survival models also have a set of progression states they were developed for modeling disease progression that could tie up up etc states together Maybe we can get it into quantstrat eventually In my trading strategies class I have been trying to demonstrate Walk Forward Efficiency WFE as discussed in Ch of Pardos book which is calculated by dividing the annual Net PL from the OOS test period by that from the preceding optimized training period I am running a threeyear optimization followed by a oneyear test period and I am able to determine the annualized Net PL from the optimized training period from results T T applyparamsettradeStats by locating the highest Net PL value and dividing by three However I am not able to find the tradeStats for the corresponding OOS test The best Ive been able to find are the tradeStats for the entire threeyear test period which is formed by appending each oneyear period to the previous so three years total I can get the Net PL from resultstradeStatsNetTradingPL and then divide by three but this is not going to be as informative as calculating the WFE over each traintest interval Is there some way to retrieve each individual test period tradeStats Ive been looking through all the environments generated by walkforward and data contained within but to no avail Below is the code I used again the simple Bollinger Bands example with some commentary added libraryquantstrat stockst cSPY currencyUSD stockstockst currencyUSDmultiplier SyssetenvTZUTC initDate startDate endDate initEq e tradeSize initEq getSymbolsstockstfromstartDatetoendDateindexclassPOSIXctadjustT stratst bbands suppressWarningsrmstratstratst strategystratst storeTRUE addindicatorstratst name BBands arguments listHLC quoteHLCmktdata maTypeSMA labelBBands addsignalstratst namesigCrossover argumentslistcolumnscCloseuprelationshipgt labelClgtUpperBand addsignalstratst namesigCrossover argumentslistcolumnscClosednrelationshiplt labelClltLowerBand addsignalstratst namesigCrossover argumentslistcolumnscHighLowmavgrelationshipop labelCrossMid addrulestrategy stratst nameruleSignal argumentslistsigcolClgtUpperBandsigvalTRUE orderqty ordertypemarket ordersideNULL thresholdNULL typeenter label EnterShort addrulestrategy stratst nameruleSignal argumentslistsigcolClltLowerBandsigvalTRUE orderqty ordertypemarket ordersideNULL thresholdNULL typeenter label EnterLong addrulestrategy stratst nameruleSignal argumentslistsigcolCrossMidsigvalTRUE orderqty all ordertypemarket ordersideNULL thresholdNULL typeexit label ExitAll adddistributionstratst paramsetlabel BBOPT componenttype indicator componentlabel BBands variable listn seq by steps total label n adddistributionstratst paramsetlabel BBOPT componenttype indicator componentlabel BBands variable listsd seq by steps total label sd suppressWarningsrmstratopt initPortfnameopt stockst initDateinitDate initAcctnameopt portfoliosopt initDateinitDate initEqinitEq initOrdersportfolioopt initDateinitDate These will also be used after running WFA so define once here yrsTrain Years in each trainoptimization period yrsTest Years in each testOOS period results walkforward strategyststratst paramsetlabelBBOPT portfoliostopt accountstopt periodyears ktrainingyrsTrain ktestingyrsTest nsamples auditprefixwfa anchoredFALSE verboseTRUE savewfTRUE Now lets check the Walk Forward Efficiency for the objective namely annual Net Trading PL default As each training period is three years we will need to divide the figure by three to get the mean annual Net Trading PL later This is an attempt to demonstrate the approach discussed in Pardo Ch Training data are stored in the following environments tr results T T tr results T T tr results T T Now focusing on the first training period we can get the index of the optimized training period as follows optComboIdx tr testingparamcomboidx Get Next we can locate the trade stats for the optimized training run as follows this works as long as the rows of trainStats are in numerical order see row numbers trainStats tr applyparamsettradeStats optTrainStats trainStats optComboIdx Now get the annual averaged Net PL for both optimized training and OOS test periods We can get the annualized value as follows annNetTradePLtrain optTrainStatsNetTradingPLyrsTrain Now how do we get the test trade stats for the same period This is the issue Without being able to get the test run results corresponding to each optimized training backtest the best we can do is take the mean of the Net Trading PL over the entire combined threeyear test period but this leaves something to be desired We really should be able to get the Net Trading PL for each individual test period Note We can get the total number of test runs in general from resultstestingparameters annNetTradePLtest resultstradeStatsNetTradingPLyrsTest nrowresultstestingparameters The WFE is then wfeNetTradePl annNetTradePLtestannNetTradePLtrain The result is which is above the threshold recommended by Pardo Next step would be to repeat the process for tr and tr Allows to fix the position limit in percentage of the current portfolio equity Also I didnt quite understood why I cannot pass the tests at package check but can do it manually Ill be happy to contribute I use your packages at my every day work Please write me any questions I am getting the following err on applyparamset Error in if nrowresultstradeStats nrowresultstradeStats missing value where TRUEFALSE needed Load libraries libraryquantstrat librarylubridate librarydplyr Run multi cores libraryparallel librarydoMC registerDoMCcores detectCores source functions sourcehomealanR financechartFunctionR Set currency and timezone SyssetenvTZUTC currencyBRL set paramenters to download data and for setting up account startdate ymd enddate ymd initdate ymd initequity stockstring BBDC SA Download and clean data getSymbolsSymbols stockstring src yahoo from startdate to enddate adjust TRUE i getstockstring assignstockstring getstockstring i Define setting for strategy portfoliost basicportfolio accountst basicaccount strategyst OBVstrat Clear hipothetical previous runs rmstratportfoliost rmstrataccountst Strategy setup stockstockstring currency BRL multiplier Define currency for stock initPortfname portfoliost symbols stockstring initDate initdate initAcctname accountst portfolios portfoliost initDate initdate initEq initequity initOrdersportfoliost stockstring initdate strategystrategyst store TRUE Add indicators nn smastring paste smannobv addindicatorstrategyst name OBV arguments listprice quoteClmktdata volume quoteVomktdata label obv addindicatorstrategyst name SMA arguments listx quotemktdataobv nnn label smastring Add Signals addsignalstrategyst name sigCrossover arguments listcolumns cobv smastring relationship gt label long addsignalstrategyst name sigCrossover arguments listcolumns cobv smastring relationship lt label short Add rules for entering positions enter long position addrulestrategyst name ruleSignal arguments listsigcol long sigval TRUE orderqty ordertype market orderside long threshold prefer Open TxnFees replace FALSE type enter label EnterLong enter short position addrulestrategyst name ruleSignal arguments listsigcol short sigval TRUE orderqty ordertype market threshold orderside short replace FALSE TxnFees prefer Open type enter label EnterShort Add rules for exiting opened postions exit long positions addrulestrategyst name ruleSignal arguments listsigcol short sigval TRUE orderside long ordertype market orderqty all TxnFees replace TRUE type exit label ExitLong exit short positions addrulestrategyst name ruleSignal arguments listsigcol long sigval TRUE orderside short ordertype market orderqty all TxnFees replace TRUE type exit label ExitShort Add Distribution nSMA c adddistributionstrategyst paramsetlabel SMA componenttype indicator componentlabel smastring variable listn nSMA label nSMA Apply paramset applyparamsetstrategyst paramsetlabel SMA portfoliost portfoliost accountst accountst Error in if nrowresultstradeStats nrowresultstradeStats missing value where TRUEFALSE needed sessionInfo R version Platform x pclinuxgnu bit Running under Ubuntu LTS Matrix products default BLAS usrlibx linuxgnublaslibblasso LAPACK usrlibx linuxgnulapackliblapackso locale LCCTYPEptBRUTF LCNUMERICC LCTIMEptBRUTF LCCOLLATEenUSUTF LCMONETARYptBRUTF LCMESSAGESenUSUTF LCPAPERptBRUTF LCNAMEC LCADDRESSC LCTELEPHONEC LCMEASUREMENTptBRUTF LCIDENTIFICATIONC attached base packages parallel stats graphics grDevices utils datasets methods base other attached packages doMC iterators dplyr lubridate quantstrat foreach blotter PerformanceAnalytics FinancialInstrument quantmod TTR xts zoo loaded via a namespace and not attached Rcpp bindr magrittr MASS tidyselect lattice R rlang quadprog stringr tools grid yaml assertthat tibble bindrcpp purrr codetools curl glue stringi pillar compiler boot pkgconfig When i create my own Symbol data in minutes my periodicityRunits is mins as a result the function throws follwing Error Error in if units months nrowR units years missing value where TRUEFALSE needed I would propose to add mins to the units starting row in chartforwardR units switchunits minshours seconds hours minutes hours hours days days months weeks years months years quarters years years years I dont know if this counts as a Bug when i run the demo demoluxor walkforwardR i get following Error Error in xtssymboldata testingstartv subscript out of bounds I looked into walkforwardR and narrowed the problem down I seemd to me as if walkforward is deviding the preiods wrong In my case the Ending point of the is nrowsmktdata testingstartv trainingendv I think here is the problem in row in walkforwardR I am having problem with running applyparamset with doParalleldoSnow i have tried it in Windows and Linux Reproducible example as follow libraryquantstrat SyssetenvTZ UTC currencycUSD symbols AAPL getSymbolssymbols stocksymbols currency USD AAPL AAPL initdate startdate enddate initequity e adjustment FALSE portfoliost LuxorOpt accountst LuxorOpt strategyst LuxorOpt rmstratname portfoliost initPortfname portfoliost symbols symbols initAcctname accountst portfolios portfoliost initEq initequity initOrdersportfolio portfoliost symbols symbols strategystrategyst store TRUE fastMAcustom slowMAcustom signalMAcustom maTypeEMA MAforest forest functionx fastMAcustom slowMAcustom signalMAcustom step EMAxfastMAcustom step EMAxslowMAcustom step step step step EMAstep signalMAcustom step step step returnstep smaforest functionx step EMAxfastMAcustom step EMAxslowMAcustom step step step step EMAstep signalMAcustom step step step step EMAstep MAforest returnstep addindicatorstrategy strategyst name forest arguments listxquoteClmktdata fastMAcustom slowMAcustom signalMAcustom labelforest addindicatorstrategystrategyst name smaforest arguments listxquoteClmktdata labelsmaforest addsignalstrategy strategyst namesigCrossover arguments listcolumns cforest smaforest relationship gte label long addsignalstrategy strategyst namesigCrossover arguments listcolumns cforest smaforest relationship lte label short addrulestrategyst name ruleSignal arguments listsigcol long sigval TRUE orderqty ordertype market orderside long TxnFees replace FALSE type enter label EnterLONG addrulestrategyst name ruleSignal arguments listsigcol short sigval TRUE orderqty ordertype market orderside short replace FALSE TxnFees type enter label EnterSHORT addrulestrategyst name ruleSignal arguments listsigcol short sigval TRUE orderside long ordertype market orderqty all TxnFees replace TRUE type exit label Exit SHORT addrulestrategyst name ruleSignal arguments listsigcol long sigval TRUE orderside short ordertype market orderqty all TxnFees replace TRUE type exit label Exit LONG addPosLimitportfoliost symbols timestampinitdate maxpos minpos applyStrategystrategyst portfoliost updatePortfportfoliost tradeStatsportfoliost symbols Portfolio Symbol NumTxns NumTrades NetTradingPL AvgTradePL MedTradePL LargestWinner LargestLoser GrossProfits GrossLosses StdDevTradePL StdErrTradePL PercentPositive PercentNegative ProfitFactor AAPL LuxorOpt AAPL AvgWinTrade MedWinTrade AvgLosingTrade MedLosingTrade AvgDailyPL MedDailyPL StdDevDailyPL StdErrDailyPL AnnSharpe MaxDrawdown ProfitToMaxDraw AvgWinLossRatio MedWinLossRatio MaxEquity MinEquity AAPL EndEquity AAPL adddistributionstrategyst paramsetlabel forestopt The label we will use when we want to run this optimisation in paramset componenttype indicator The custom function is of indicator type not other alternatives including signal or rule componentlabel forest this is the name of your custom function variable listfastMAcustom seq by label myForestOptLabel choose whatever you want librarydoSNOW cl makeCluster type C SOCK registerDoSNOWcl resultsopt applyparamsetstrategyst paramsetlabel forestopt portfoliost portfoliost accountst accountst nsamples stopClustercl resultsopttradeStats This is the result run in sequentielwithout having registerDoSnow myForestOptLabel Portfolio Symbol NumTxns NumTrades NetTradingPL AvgTradePL MedTradePL LargestWinner LargestLoser GrossProfits GrossLosses StdDevTradePL LuxorOpt AAPL LuxorOpt AAPL LuxorOpt AAPL StdErrTradePL PercentPositive PercentNegative ProfitFactor AvgWinTrade MedWinTrade AvgLosingTrade MedLosingTrade AvgDailyPL MedDailyPL StdDevDailyPL StdErrDailyPL AnnSharpe MaxDrawdown ProfitToMaxDraw AvgWinLossRatio MedWinLossRatio MaxEquity MinEquity EndEquity where as the following are the results with registerDoSNOW myForestOptLabel Portfolio Symbol NumTxns NumTrades TotalNetProfit AvgTradePL MedTradePL StdErrTradePL LargestWinner LargestLoser GrossProfits GrossLosses StdDevTradePL PercentPositive LuxorOpt LuxorOpt LuxorOpt PercentNegative ProfitFactor AvgWinTrade MedWinTrade AvgLosingTrade MedLosingTrade AvgDailyPL MedDailyPL StdDevDailyPL StdErrDailyPL AnnSharpe MaxDrawdown ProfitToMaxDraw AvgWinLossRatio MedWinLossRatio MaxEquity MinEquity EndEquity SessionInfo R version Platform x pclinuxgnu bit Running under Ubuntu Matrix products default BLAS usrlibx linuxgnublaslibblasso LAPACK usrlibx linuxgnulapackliblapackso locale LCCTYPECUTF LCNUMERICC LCTIMECUTF LCCOLLATECUTF LCMONETARYCUTF LCMESSAGESCUTF LCPAPERCUTF LCNAMEC LCADDRESSC LCTELEPHONEC LCMEASUREMENTCUTF LCIDENTIFICATIONC attached base packages stats graphics grDevices utils datasets methods base other attached packages doSNOW snow iterators quantstrat foreach blotter PerformanceAnalytics FinancialInstrument quantmod TTR xts zoo loaded via a namespace and not attached quadprog lattice codetools MASS grid curl boot tools compiler 