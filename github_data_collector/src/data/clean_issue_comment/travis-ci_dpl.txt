Upgrading firebasetools version to This should solve the Unexpected error has occurred issues Includes a cherrypicked unrelated fix from otherwise tests fail This is a possible solution to speed up the GCS provider closes by passing the localdir and m to gsutil instead of copying each file individually I dont expect this to get merged given the breaking changes but I wanted to share this solution Breaking Changes This introduces the following breaking changes for the user but makes the provider usable for users wanting to upload more than a handful of files dotmatch Not available with gsutil by wildcards Per standard Unix behavior the wildcard only matches files that dont start with a character to avoid confusion with the and directories present in all Unix directories gsutil provides this same behavior when using wildcards over a file system URI detectencoding compressextensions This allows using the z ext z Applies gzip contentencoding to any file upload whose extension matches the z extension list glob was removed since the user can pass wildcard into localdir which unfortunately is unable to match current functionality since gsutil flattens wildcard directory structure Timing and Logs The following timing results are run over k objects and MiB Current s Build This PR s Build It would be great to remove the the iteration of file uploads and allow gsutil gsutil m cp r dir gsmybucket to be used instead Right now I am waiting many minutes for what should take a few seconds When running the following on Windows bash dpl heroku apikey xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx app fesfseteststaging It results in an error from tar tar child Cannot connect to C resolve failed tar Child returned status tar Error is not recoverable exiting now This error is raised because tar handles the path as a remote path because of the sign This behaviour can be prevented via passing the forcelocal flag Source I wonder if this flag can be added to support deployment on windows or not Looking at the API It might be possible to trigger a recipe build after an import The requestBuild Custom POST method seems like it will trigger the build but Im not sure how it would interact with waiting for the triggered import to complete This fixes On Git Bash on Windows the dpl executable runs cmdexe which does not play well with the bash syntax Thus I added a check to be on Windows and then execute bashexe This required new dependency on os to check for Windows reroute calls from Kernelsystem to shell I also fixed the setup phase The git config command was called inside the source directory which typically is not a git directory and not in the target directory which is the git repository being pushed Tested on Windows with a GitHub repository Minor fix typo