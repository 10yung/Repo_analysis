I often I run into use cases where I want to run a piece of code on a node and express this declaratively in a lithtml template For example to maintain an expandedcollapsed state of an element it would be great to be able to do something like this js html myelement expandCollapseexpanded myelement This isnt possible directives that operate on an element must be applied to an attribute even when it doesnt do anything with the attribute name So we either need to make up a fake attribute js html myelement expandCollapseexpanded myelement Or make it a directive that must be used in a NodePart and query the first rendered element js html expandCollapseexpanded html myelementmyelement Im wondering if its possible to support directives that operate on a node like in the first example without being associated with any attribute Ive seen something similar being proposed before but then to be able to add arbitrary attributesproperties on a tag This understandably isnt within the design goal of lithtml but allowing this for directives will not cause any changes to the output HTML so it seems like something that should be feasible Added in Added in Description Only the last ifDefined instance is respected If the last value is defined the committer is dirtied and setAttribtue is called causing the attribute to be rendered with the ToString value of the directive rendered to the attribute Steps to Reproduce Write this code ts htmldiv fooifDefinedaifDefinedundefineddiv See this output Please read our contribution guidelines Description When some one wants to submit small changes its to much overhead to run npm install and npm formart the project should change its pipeline to apply formart changes on merge if needed not in the inital pull request Steps to Reproduce Edit a ts file Write this code ts longCondition notSolong thisWillbeLonger yesITisLongerThenTheAllowedLineLengthYaa FinalyAFormartErrorYaaa WeDidItaFormartErrorInOneLineOfCode See this output jenkins will fail with a formart suggestion if you submit a pr with that code while the code is maybe valid legit and well tought and formed Expected Results All Tests do finish and can be merged into a extra branch to apply codestyles or additional stuff that the developer dont needs to be aware of Actual Results Jenkins will error with formart suggestions Browsers Affected Check all that apply x Chrome x Firefox x Edge x Safari x Safari x IE Its used to check against the actual DOM value attribute property or boolean attribute only instead of the previous values set though lithtml This is useful in cases where the underlying value might change underneath lithtml but the template author wants the lithtml provided version to overwrite the DOM value The classic case is js htmlinput valuex Added in Came here to fix a broken link got more than I bargained for Other recommendations like linting and IDE plugins may need updating as well To allow server side rendered templates we need to be able to create a template result from existing template tags Take this example If you have a select with its value property bound to something things work fine ts renderhtmlselect valuefoo option valueaAoption option valuebBoption select node However if the options are computed ie subtemplates ts const options someArraymapi htmloptionioption renderhtmlselect valuefoo options select node The options are added to DOM after the value property of the select is set meaning the select ultimately defaults to the first option every time We should probably document this somewhere or decide what to do with it Its expected behaviour i think but could lead to a fair amount of confusion seeing as this is a fairly common use case cc justinfagnani Please read our contribution guidelines Description Im at the airport and cloned the repo so I could read the docs offline on the plane Installing downloading and compiling Ruby and the required Jekyll deps took a long time mins What do you think of converting the docs from Jekyll Ruby to ty JavaScript to keep the docs within the JS stack Happy to take this on if everyone would find it beneficial to remove the Ruby dependency and migrate to JavaScriptnpm Steps to Reproduce bash time gem install bundler jekyll 