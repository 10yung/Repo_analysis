I followed the instructions on this page But instead of installing visual studio I installed Visual C Build Tools since I use VSCode as my main editor and dont want to waste disk space The Visual C compiler and linker is properly installed on my machine and is located in C Program Files x Microsoft Visual Studio BuildTools VC Tools MSVC bin Hostx x linkexe Any ideas on how I can fix it on my end or is this something that has to be fixed in ponyc This addresses Declaring a variable at the end of a function which expects a return value or having generally a variable declaration where the compiler expects to use the return value caused in most cases an error stating that the variable is undefined but its value is used actor Main new createenvEnv confusingerrormsg fun confusingerrormsg String var s A string This bit of code triggers the following error on Error mainpony the left side is undefined but its value is used var s A string Error mainpony left side must be something that can be assigned to var s A string The presence of the second error was also considered to be erroneous This patch discriminates in the islvalue function from passreferc cases where the lefthand side of the assignment is not an lvalue and cases where it triggers an error This way the compiler can tell between the left side not being something that can be assigned to or it having triggered an error Additionally an Info message is triggered when the left sides old value is needed in a declaration This is what the error message now looks like Error mainpony the left side is undefined but its value is used var s A string Info mainpony the previous value of s is used because you are trying to use the return value of this var declaration var s A string This pull request fixes issue where not if not for and not while resulted in a parse error even though these should technically be valid Tests have been included to prevent this issue from happening again in the future The following code causes the compiler to segfault during the Functions step pony actor Main new createenv Env Dealerfrom U Dealer does not cause any segfault class Dealer new from U U Dealer val u U val Note commenting out this match fixes the issue match u let u U None let u Dealer val None end new createu U Dealer val this function is harmless match u let u U None let u Dealer val None end This happens when a function with generics containing in a union the class itself tries to match a variable of that generic type This function has to be covered in order for this segfault to occur Occurs on Arch Linux x ponyc release installed through the communityponyc package compiled with llvm with GCC When working on Windows builds for ponyup I found that it wouldnt link due to an error with the FFI call in symlink This commit adds a test to verify that symlink works This PR contains a test that I verified fails on Windows and then adds a change to FilePathsymlink that then allows the failing test to pass riscv support mostly works main issue seems to be with error unwinding maybe the lsda or personality stuff needs tweaking hopefully someone with more timeknowledge can figure out what the issue is tested in docker via sudo docker run privileged it rm v pwdpwd w pwd ubuntu In docker install compilergitetc aptget update aptget install y gdbmultiarch qemuuser gcc riscv linuxgnu g riscv linuxgnu cmake git buildessential python soft link riscv libs to the right path for qemu based execution to work ln s usrriscv linuxgnulib lib clean old build artifactsstate make f Makefilelibllvm llvmarchstotargetX RISCV configrelease defaultpictrue verbose jnproc cleanall compile ponyc and vendored llvm with support for X RISCV make f Makefilelibllvm llvmarchstotargetX RISCV configrelease defaultpictrue verbose jnproc all run tests for normal X ponyc make f Makefilelibllvm llvmarchstotargetX RISCV configrelease defaultpictrue verbose testci cross compile libponyrtpic for RISCV make f Makefilelibllvm llvmarchstotargetX RISCV configrelease defaultpictrue verbose CCriscv linuxgnugcc CXXriscv linuxgnug archrv gc tunerocket bits cpugenericrv crossllcargsmarch riscv targetabi lp d mattrmafdc CFLAGSidirafter usrcrossinclude CXXFLAGSidirafter usrcrossinclude LDFLAGSidirafter usrcrossinclude PONYPATHusrcrosslib jnproc libponyrtpic compile ponyc again just in case should be a noop make f Makefilelibllvm llvmarchstotargetX RISCV configrelease defaultpictrue verbose PONYPATHusrcrosslib crosstripleriscv unknownlinuxgnu crossarchrv gc crosscpugenericrv crosslinkerriscv linuxgnugcc crossponycargsabilp d featuresmafdc linkldcmdbfd QEMURUNNERqemuriscv jnproc all cross compile stdlib and run it in qemu make f Makefilelibllvm llvmarchstotargetX RISCV configrelease defaultpictrue verbose PONYPATHusrcrosslib crosstripleriscv unknownlinuxgnu crossarchrv gc crosscpugenericrv crosslinkerriscv linuxgnugcc crossponycargsabilp d featuresmafdc linkldcmdbfd QEMURUNNERqemuriscv testcrossci This the cross compiled stdlib will get stuck on builtinStringu due to the error unwinding issue on the u test case that should raise an error We are disabling the CodegenTestTryBlockCantCatchCppExcept for LLVM and above for now see as there is an LLVM bug that is breaking it see As part of the CMake build system work we will implement a system to patch our vendored LLVM and include this patch until the LLVM patch is in their source then reenable the failing test We should also test this on Windows to see if LLVM has fixed Windows support for exceptions Alpine Linux doesnt support e for readlink However we are using it in libllvmMakefile on line readlink on osx also doesnt support e and so we require greadlink We should be looking for how we can support the proper flags on a perplatform basis without such hackery A configure script is the tried and true approach here with all its usual tradeoffs cc kulibali so you are thinking about issues like this in relation to and our transition to cmake Target release date is February st