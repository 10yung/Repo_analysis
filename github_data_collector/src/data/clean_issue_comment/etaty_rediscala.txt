At the moment only RedisClient and RedisBlockingClient accepts connectTimeout This PR adds connectTimeout field to RedisServer which can then be used in any redis connection Fixes SMEMBERS is a read only command therefore it should be run on slaves Although it is a read only command Smembers is set as isMasterOnly true Therefore SMEMBERS calls are run against master in RedisClientMasterSlaves mode One workaround could be using SINTER with one key as it is set as isMasterOnly false The current stable release still doesnt have this fix Hi there As noted in my previous pull request Ive made some changes to support redis and the new Streams commands This branch is based on my featuresredis branch so please disregard the common changes Ill rebase this if the other pull request is accepted This is still a workinprogress but I think there is enough here to get meaningful feedback especially on the interface and reply decoding for stream commands If the current approach looks good Ill add support for consumer groups and blocking stream commands Thanks David Not sure how we got this though rediscala scala x javalangException Redis Protocol error Got as initial reply byte for Operation OperationGetwaylaydefaultpublickey ccc d d e c a af FutureFailureredisactorsInvalidRedisReply Could not decode the redis reply Connection closed at redisactorsRedisReplyDecoderdecodeRedisReplyRedisReplyDecoderscala at redisactorsRedisReplyDecoderdecodeRepliesRecurRedisReplyDecoderscala at redisactorsRedisReplyDecoderdecodeRepliesRedisReplyDecoderscala at redisactorsRedisReplyDecoderanonfunreceive applyOrElseRedisReplyDecoderscala at akkaactorActoraroundReceiveActorscala at akkaactorActoraroundReceiveActorscala at redisactorsRedisReplyDecoderaroundReceiveRedisReplyDecoderscala at akkaactorActorCellreceiveMessageActorCellscala at akkaactorActorCellinvokeActorCellscala at akkadispatchMailboxprocessMailboxMailboxscala at akkadispatchMailboxrunMailboxscala at akkadispatchMailboxexecMailboxscala at akkadispatchforkjoinForkJoinTaskdoExecForkJoinTaskjava at akkadispatchforkjoinForkJoinPoolWorkQueuerunTaskForkJoinPooljava at akkadispatchforkjoinForkJoinPoolrunWorkerForkJoinPooljava at akkadispatchforkjoinForkJoinWorkerThreadrunForkJoinWorkerThreadjava Im wondering if version or were compiled using JVM since Im getting the following error when I run it using JVM javalangUnsupportedClassVersionError redisutilCRC has been compiled by a more recent version of the Java Runtime class file version this version of the Java Runtime only recognizes class file versions up to Thanks Starting from version Redis provides a new Stream data type with a bunch of new commands Do you have any plans for supporting it Ive been playing with the code a bit and it looks like its not super hard to add new commands I could probably try to implement streams support Will you be interested Thanks hi etaty when a connection fails when using redisscala it seems to go into an endless retry loop is there some config somewhere to change this thanks One can set connect timeout for a simple RedisClient Its not the case with RedisClientPool The latter extends RedisClientPoolLike which creates RedisClientActors with following way def makeRedisClientActorserver RedisServer active Ref Boolean ActorRef systemactorOfRedisClientActorpropsnew InetSocketAddressserverhost serverport getConnectOperationsserver onConnectStatusserver active redisDispatchername withDispatcherredisDispatchername name RedistempName So there is no way to provide a connection timeout in the RedisClientActorprops method 