Hi I think it will be nice if you support Redirect history logs This function prevents it but If I pass a byte buffered body then it works About HTTP GET and request body The RFC referenced as HTTP spec is now obsolete In it was replaced by RFCs Quote the messagebody SHOULD be ignored when handling the request has been deleted Its now just Request message framing is independent of method semantics even if the method doesnt define any use for a message body The nd quote The GET method means retrieve whatever information is identified by the RequestURI was deleted Can You add a method to directly obtain all the original request packets and response packets It is convenient to output to the log center to understand the entire process of sending packets at that time Similar to the following GET jsgowalkerjsv HTTP Host gowalkerorg Connection close Pragma nocache CacheControl nocache UserAgent xxxxx Accept SecFetchSite sameorigin SecFetchMode nocors Referer AcceptEncoding gzip deflate AcceptLanguage enq Cookiexxxxx HTTP OK AcceptRanges bytes ContentLength ContentType applicationjavascript Date Fri Jan GMT LastModified Sat Mar GMT Server Caddy Connection close documentreadyfunction Im using this library for our internal projects command line tools and I met a problem that we need a customized flag dryrun to print all useful information but the request will not really sent Currently I added a util package to print the client object directly in clientOnBeforeRequest if the dry run mode is enabled then let the function return not nil error and it seems not a good solution Do you have any suggestion to print the request information and stop sending API in this case Currently my solution go if utilIsDryRunEnabled client clientOnBeforeRequestfunc restyClient request restyRequest error fmtPrintlnIn dryrun mode fmtPrintlnrequest return errorsNewDry run and interrupted Is there a way to see the how many bytes have been uploaded already when uploading a file as a multipart field Ive tried displaying the reading progress of the reader but that doesnt work because resty seems to read the entire file at once Im new to Go so I apologize if there is an obvious solution to this that Im just not seeing Thank you for creating such a useful library I check the response body in the RetryConditionFunc And If the response body is invalid I will return true to retry But after maxRetry it will still output the response What I want is to return an error so after maxRetry it will return the error instead of the invalid response I find out there is an option to provide fallback contenttype when its not available in response But what if the response has a wrong contenttype Can I force a correct contenttype For example with the following code I expect to see a applicationjson contenttype go resp clientRSetResult objGeturl But the server incorrectly replies a json plain text with contenttype textplain Its a json format in a plain text type How can I handle this Thanks a lot Hi It would be really really practical if there was SetHostURLs that accepts multiple addresses Resty would choose one of them upon each request This could be configurable as well but a random choice at first could suffice Cheers Hi Thank you so much for this project it saved me a lot of time Do you plan on adding a perendpoint rate limiter or a global ratelimiter of outgoing requests Thanks Its possible to get a OK response with HTML contents from a JSON endpoint due to faulty backend configuration eg a problem in API gateway etc Since resty only parses response if content type is JSON or XML the call wont return an error Such errors could be hard to debug I suggest to fix the default behaviour and always parse response if SetResult has been called