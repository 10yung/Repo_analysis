 Motivation Brute force fix for Bad access in SPTSharedExampleGroups Test I dont know if this breaks existing tests because tests do not run No visible interface for XCTestSuite declares the selector run Reproduce Xcode beta macOS Sierra High Sierra Pull calabashiosserver develop branch Update code sign settings for the XCTest target to match your signing environment Run an individual XCTest via the Xcode UI until the crash happens takes tries Expected Tests to complete Found Bad access in SPTShareExampleGroupsmL Analysis if numClasses classes Class mallocsizeofClass numClasses numClasses objcgetClassListclasses numClasses Class klass superClass foruint i i numClasses i klass classes i superClass classgetSuperclassklass if superClass SPTSharedExampleGroupsClass klass alloc init sharedExampleGroups freeclasses I believe classes are being deallocd during the loop I am not sure what this code is trying to accomplish Skipping the loop appears to have no effect on Specta No visible interface for XCTestSuite declares the selector run machi Its okay on Xcode but in Xcode tests failed shows in the picture Some test are skipped in a random way It happens what the editing and undoing operations affects to this behavior even if in the result the code still be the same Product cleaning doesnt help Xcode Gif spectabug Here is the code import SpectaSpectah SpecBeginTEST describeTEST ittest NSLog ittest NSLog ittest NSLog ittest NSLog ittest NSLog afterEach afterAll SpecEnd I recently found an fdescribe checked into a project Our continuous integration showed all the tests as passing so it looked like everything was in good order even though only about of tests were being run Im wondering if it would make sense to when an fdescribe or fit are in the suite mark other tests as either failing or pending to make it more obvious that only a subset of the tests were run Yes Ill be adding a Danger rule to prevent this in the future Sometimes you have unittests failing randomly due to dependencies between tests SPECTASHUFFLE as an environment variable is a nice feature to detect issues like these but it would be a nice additional feature to have a second envvariable to set a repeat count similar to encapsulating your context or fit in a forloop The XCTest API changed a little but but nothing massive this agrees to all of the apple migration update thingies too Im getting this error when trying to run a test with a tvOS app target Specta has bitcode disabled ENABLEBITCODE NO but it is required for the appletvos platform I noticed that Bitcode was disabled in at the same time that tvOS support was introduced which I thought was odd since tvOS requires Bitcode to be turned on FYI Im using Cocoapods beta Im also getting the same error on Expecta Ive found that clicking on the test result arrow test result in the Xcode Test Reports UI takes me directly to the right code for XCTestCase tests but doesnt do anything for individual Specta tests The arrow buttons for the spec files themselves work correctly for Specta test files Using Xcode and Specta 