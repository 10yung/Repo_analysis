 Bumps npm from to details summaryRelease notessummary Sourced from npms releases v BUGFIXES ac aee npmbinlinks npmgentlefs Do not remove global binman links inappropriately isaacs DEPENDENCIES fd gentlefs isaacs d f c b binlinks isaacs v DEPENDENCIES ce a binlinks Properly normalize sanitize and verify bin entries in packagejson c aae npmpacklist fb ecd d pacote f npmpacote npmpacote fix Do not drop perms in git when not root isaacs darcyclarke f f sanitize and normalize package bin field isaacs cb readpackagejson v BUG FIXES b fix docs target typo richardlau fixpackageRelativePath fix where for file deps larsgw d f c Revert windows Add preliminary WSL support for npm and npx craigloewenmsft e b e remove unnecessary packagejson read when reading shrinkwrap LightingJack c d ac fixfund open url for string shorthand ruyadorno ae afe Dont log error message if git tagging is disabled woppa c b f a Warn the user that it is uninstalling npminstall Hoidberg v BUG FIXES d d fixfund support funding string shorthand ruyadorno b c b should not publish tapsnapshot folder ruyadorno d Add preliminary WSL support for npm and npx infinnie ef f print quick audit report for human output isaacs TESTING dbbf ac added workflow to trigger and run benchmarks mikemimik trtable truncated details details summaryChangelogsummary Sourced from npms changelog BUGFIXES ac aee npmbinlinks npmgentlefs Do not remove global binman links inappropriately isaacs DEPENDENCIES fd gentlefs isaacs d f c b binlinks isaacs DEPENDENCIES ce a binlinks Properly normalize sanitize and verify bin entries in packagejson c aae npmpacklist fb ecd d pacote f npmpacote npmpacote fix Do not drop perms in git when not root isaacs darcyclarke f f sanitize and normalize package bin field isaacs cb readpackagejson BUG FIXES b fix docs target typo trtable truncated details details summaryCommitssummary fd f aca docs changelog for ac a Do not remove global binman links inappropriately d f c binlinks fd gentlefs c bc docs changelog for cb readpackagejson fb ecd pacote c a npmpacklist Additional commits viewable in compare view details br Dependabot compatibility score Dependabot will resolve any conflicts with this PR as long as you dont alter it yourself You can also trigger a rebase manually by commenting dependabot rebase dependabotautomergestart dependabotautomergeend details summaryDependabot commands and optionssummary br You can trigger Dependabot actions by commenting on this PR dependabot rebase will rebase this PR dependabot recreate will recreate this PR overwriting any edits that have been made to it dependabot merge will merge this PR after your CI passes on it dependabot squash and merge will squash and merge this PR after your CI passes on it dependabot cancel merge will cancel a previously requested merge and block automerging dependabot reopen will reopen this PR if it is closed dependabot ignore this patchminormajor version will close this PR and stop Dependabot creating any more for this minormajor version unless you reopen the PR or upgrade to it yourself dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency unless you reopen the PR or upgrade to it yourself dependabot use these labels will set the current labels as the default for future PRs for this repo and language dependabot use these reviewers will set the current reviewers as the default for future PRs for this repo and language dependabot use these assignees will set the current assignees as the default for future PRs for this repo and language dependabot use this milestone will set the current milestone as the default for future PRs for this repo and language You can disable automated security fix PRs for this repo from the Security Alerts page details For example the following will print the real state to the console once during the immediate callback but then print undefined for all future callbacks const stateCallback state return state const updateCallback value consolelogvalue const options nested true immediate true overmindreactionstateCallback updateCallback options As the title says Ive been reading good stuff about Overmind and Id like to know if there are plans to port this library to Flutter Im exploring this library for use with angular but Im encountering a build issue Im struggling to understand I can only reproduce the issue with angulars prod build mode and not in normal or dev build mode Ive reproduced the problem with multiple versions of angular and overmind in a small variety of local projects The following repo which was created by another user for a different issue can also reproduce the problem The overmind usage seems consistent with whats illustrated in the guide here Just change line of packagejson from this build ng build to this build ng build prod Then run npm run build The error is ERROR in overmindangularlibdirectivets Error during template compile of OVERMINDINSTANCE Only initialized variables and constants can be referenced in decorators because the value of this variable is needed by the template compiler overmindangularlibdirectivets Error during template compile of OVERMINDINSTANCE Only initialized variables and constants can be referenced in decorators because the value of this variable is needed by the template compiler Invalid provider for the NgModule AppModule in angovermindsrcappappmodulets only instances of Provider and Type are allowed got object Object The documentation for that error is here Ive tried to resolve this by using a factory provider instead of a value provider for OVERMINDINSTANCE but Im still struggling Id like to see any example overmindangular project which compiles in production mode Can anyone point me to one Any chance we could add the ability to scroll here Long state objects will overflow on the Y axis and then you cant scroll down I see in the last release the suspend method for concurrent mode But with the latest and the next tag in npm it appears to not exists How to use it This original TS code example raised the error Type InferredReturnValue extends void state actions effects IContextConfig Promisevoid is not assignable to type Actionvoid void Type Promisevoid is not assignable to type void InferredReturnValue Type Promisevoid is not assignable to type InferredReturnValue TS The new code has been suggested by PyCharm IDE but maybe there is a better way Hello all Update with specifics on the bug are on the bottom of this issue I have the following issue which Im stuck at I have the following action addAjacent state sourceNodeUuid destinationNodeUuid if stategraph sourceNodeUuid stategraph destinationNodeUuid ObjectdefinePropertystategraph sourceNodeUuid adjacents destinationNodeUuid Ensure we can remove the reference if we want to configurable true Place a general getter on the uuid see return object node Destination node that is being attached to the source node get return stategraph destinationNodeUuid Im building a simple graph where nodes can be linked to each other My state is const state graph c ea c e bad b deb d b d type specialElement adjacents get c bf e fbe ff e return stategraph b efc dc a db a dfba b efc dc a db a dfba type anyOf adjacents The idea is that graph objects can be linked to each other without duplicating objects Based on the overmind information link I used ObjectdefineProperty to generate a getter so I would replicate the following lines dynamically get c bf e fbe ff e return stategraph b efc dc a db a dfba However the end result is that the generated getter is not in state when I request it I tried out the code on plain JS objects and that worked so Im wondering whether Im using it correctly for overmind Anyone got any clue Update I found that the defineProperty handler is not trapped in the ObjectProxy on link Therefore when the object is being read that contains the newly set getter the value is being returned from a cached proxy that does not have the newly defined Property because the methods of the MutationTree hasnt been updated However calling the getter directly provides the result because the get handler handles getters differently returns the value directly testget bug in proxystatetree const overmind createOvermindMockconfig overmindactionsaddAjacent sourceNodeUuid c ea c e bad b deb d b d destinationNodeUuid bf ee ef cfc a b expectovermindstategraph c ea c e bad b deb d b d adjacents bf ee ef cfc a b toBeDefined This works because the value is retrieved from the Object itself expectovermindstategraph c ea c e bad b deb d b d adjacentstoHaveLength This is instead of because the MutationTree with an old view of the Object exists Context of any action contains execution with helpfull properties like namespacePathstring or actionNamestring But when a module is lazy loaded the execution context has not set these properties namespacePath is empty actionName does not contain the module namespace part Normal not lazy loaded NotLazyLoaded NotLazyLoadedExecutionContext Lazy loaded LazyLoadedModule LazyLoadedExecutionContext 