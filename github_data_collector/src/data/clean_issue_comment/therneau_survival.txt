The READMEmd file provides the following line of code for how to install the survival package from github r librarydevtools installgittherneausurvival However this fails with the following error text Error Failed to install unknown package from Git Error in git rremotels unsupported URL protocol I believe this could should either read r librarydevtools installgithubtherneausurvival or r librarydevtools installgit Ive just tried running the following code r devtoolsinstallgithubtherneausurvival However the installation fails The last few lines of output are written displayed below text installing to homebenjaminRx pclinuxgnulibrary LOCKsurvival newsurvivallibs R data moving datasets to lazyload DB inst bytecompile and prepare package for lazy loading help installing help indices copying figures building package indices installing vignettes testing if installed package can be loaded from temporary location Warning S methods coxzph printcoxzph were declared in NAMESPACE but not found Error package or namespace load failed for survival in namespaceExportns exports undefined exports coxzph Error loading failed Execution halted ERROR loading failed removing homebenjaminRx pclinuxgnulibrary survival Error Failed to install survival from GitHub converted from warning installation of package tmpRtmppsaKUZfile df survival targz had nonzero exit status Im using R version on Manjaro Linux Gnome kernel version Ive recently set up a pipeline fitting coxph to a training partition of my data testing on the remaining coxPHmodelFit functiondataset coxphSurveventTimecensored age gender race eGFRmed flagiftapreTrans flagiftaAtPostTrans flagiftaotherpreTrans flagiftaotherAtPostTrans flagglopcpreTrans flagglopcAtPostTrans flagtransglomepreTrans flagtransglomeAtPostTrans flaginterinflamtAtPostTrans datadataset datasetflag dfailure xTRUE yTRUE Train iiiiiivbts i held out training on bootstrap resamples of of the data CPHeGFRcohort trniiiiiivbts lapplyeGFRcohort trniiiiiivbts functiondf coxmodel coxPHmodelFitdf coxmodel Test on ibts bootstrap resamples of of data trained on iiiiiivbts for i in nboots CPHeGFRcohort Concordibts i concordanceobjectCPHeGFRcohort trniiiiiivbts i newdataeGFRcohort pibtspost i timewtn In seeking to calculate the concordance of the predictions made for the test fold I get the error Error in function y x strata weights ymin NULL ymax NULL timewt cn x and y are not the same length As per this post on CrossValidated it looks like the function will work correctly if x train data and y test data have the same dimensions Please advise of a solution Many thanks Hello I was trying to reproduce the last example of coxph but encountered an error xcoxphsurv x ttx datadb ttfunctionxt psplinex t printx Call coxphformula surv x ttx data x tt functionx t psplinex t Error in coxphwtestvar coef NANaNInf in foreign function call arg After quite a lot of debugonce I saw that this error is thrown at the print time because the last coefficient of x is missing xcoefficients It happens that this error will not be thrown with degree coxphsurv x ttx datadb ttfunctionxt psplinex t degree Here is an input for a reproducible example sorry for the size of the table This might be due to x being an integer in my case but I think this still deserves a warning or a clear error message at the pspline level or at the survivalprintcoxphpenal level nevertheless dbstructurelistsurv structurec NA NA NA NA Dim c L L Dimnames listNULL ctime status type right class Surv x c class ctbldf tbl dataframe rownames cNA L leaving a warning rather than to just print out the message may be more apt I wonder why the following lines are printed instead of returning a warningerror For me this lead to some confusion Any thoughts Thank you sunflower Dear professor Terry M Therneau I do analysis by using survival package as follows librarysurvival logranksurvdiffSurvqsecvsmpgdatamtcars logrank Call survdiffformula Survqsec vs mpg data mtcars N Observed Expected OE E OE V mpg mpg NaN NaN mpg NaN NaN mpg mpg NaN NaN mpg mpg NaN NaN mpg NaN NaN mpg mpg mpg mpg mpg mpg mpg NaN NaN mpg mpg mpg mpg mpg mpg NaN NaN mpg mpg mpg mpg Chisq on degrees of freedom p We see the p value is degree of freedom is Because the result has NaN so the degree is equaling to However In some other methords for calculating the p value of logrank test based on survival package they take different degrees Methord pchisqlogrankchisq lengthlogrankn This methord is used widely It takes lengthlogrankn as the degree which is The p value is Methord Package emil provides pvalue function to extract the p value from survdiff results emilpvaluelogrank This function takes the same methord with Methord So p value is still Methord Package survminer also provides ggsurvplot function to display p value in survival plot librarysurvminer fit survfitSurvqsecvsmpgdatamtcars ggsurvplotfitdatamtcars pval TRUE The p value is still I think these methords take the same degree to calculate p value by chisquare test However the degree in survival package is which omit NaNs So my question is which degree is right Best Wishes Jing Zhang The following give two different results survivalcoxphsurvivalSurvtimeeventarmsurvivalclusteridweightswgtdatatestdat Gives Call survivalcoxphformula survivalSurvtime event arm survivalclusterid data testdat weights wgt coef expcoef secoef z p arm survivalclusterid Using cluster survivalcluster survivalcoxphsurvivalSurvtimeeventarmclusteridweightswgtdatatestdat Gives survivalcoxphformula survivalSurvtime event arm clusterid data testdat weights wgt coef expcoef secoef robust se z p arm Likelihood ratio test on df p n number of events The namespace should be stripped away automatically at the very least This is closely related to and also probably has minimal impact In predictcoxphpenal when there is only a sparse penalty term in the model the newdata argument if supplied gets ignored in calculating the predictions except for the assignment line which gets overwritten Currently if newdata has been supplied an error stops execution at line unless indx has been defined outside the function issue but when that is fixed the resulting predictions ignore newdata We noticed that clogit is much slower in recent survival package releases The following demonstrates that clogit in version fit a particular model in less than half a second while the same model in version took seconds librarysurvival sessionInfootherPkgssurvivalVersion N ng exd dataframe grep ng each Nng outrep L LN xsample L L N prob c replace TRUE systemtime mod clogitout x stratag methodexact data exd user system elapsed detachpackagesurvival librarydevtools devmodeon TRUE installversionsurvival librarysurvival sessionInfootherPkgssurvivalVersion systemtime mod clogitout x stratag methodexact data exd user system elapsed 