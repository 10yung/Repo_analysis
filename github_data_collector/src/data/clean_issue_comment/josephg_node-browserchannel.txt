may be the wrong file but i hope you get the idea i got annoyed by firefox getting spammed there if this already existed im sorry to push it var socket new windowBCSocketchannel reconnecttrue debugfalse Firefox is warning Attempt to set a forbidden header was denied Connection which points to bcsocketuncompressedjs in my bundled code I believe its coming from this line Im not sure what dependency is adding that or ifhow it should be fixed If one of the maintainers can point me in the right direction Ill open an issue on the actual offending librarys issue tracker instead of here Unfortunately I missed some cases in my last PR I added new tests to ensure that cors headers are correctly sent in all cases and refactored the internal options interface to ensure this sort of error is now impossible Also included is a change to npm test to ensure that it always runs against the latest coffeescript code TypeError Cannot read property c of null xxxnodemodulesracerbrowserchannelnodemodulesbrowserchanneldistbcsocketuncompressedjs in Ka at line thissendMap Ka functiona var b if b rreadyState hb b CLOSED b w if bc throw ErrorInvalid operation sending map when state is closed E btlength baJAlready have queued maps upon queueing yba btpushnew Gdbsc a bc bc Qdb my mainjs just import the library var BCSocket requirebrowserchannelBCSocket I compile file with gulpfile below var gulp requiregulp browserify requirebrowserify del requiredel source requirevinylsourcestream babelify requirebabelify var paths srcJs mainjs js bundlejs gulptaskclean functiondone del build done gulptaskjs clean function browserifydebug true transformbabelify requiremainjs entry true bundle onerror function err consolelogError errmessage pipesourcebundlejs pipegulpdeststatic Rerun tasks whenever a file changes gulptaskwatch js function gulpwatchpathssrcJs js When I open file in browser I achieve an error Uncaught TypeError fsstatSync is not a function What may cause the problem Example ported to connect issue may be within connect library chathtml socket new BCSocketchannel socketonopen function socketsendhithere socketclose chatjs var connect requireconnect var http requirehttp var browserChannel requirebrowserchannelserver var serveStatic requireservestatic var app connect appuseserveStaticdirname appusebrowserChannelfunction session consolelogNew session sessionid from sessionaddress with cookies sessionheaderscookie sessiononmessage function data consolelogsessionid sent JSONstringifydata sessionsenddata etc socketclose in chathtml needs to be commented out for hithere message to get through As discussed nodebrowserchannel may eventually be ported from coffeescript to javascript If this happens coffeescript would continue to be used for the test suite The coffeescript should be compiled to javascript and the javascript should be cleaned up manually in small commits At no point should the test suite be broken So the current implementation gives the client an etag which is already nice but the browser will still send out a request Using the connectstatic maxAge parameter sets the caching headers so the browser will not even send a request for the code speeding up the connection Since youre not using connectstatic I think it may be enough to just add the header at but there may be some subtlety involved It is desirable to turn off this header while developing the client code so some sort of option would have to be settable but I think setting the default to at least a day is probably a good idea 