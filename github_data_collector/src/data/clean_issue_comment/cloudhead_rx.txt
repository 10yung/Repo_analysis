fullmoonwithface reminder not to merge this via the GitHub UI parserrs the parser should be property tested with something like quickcheck cmdrs CommandLine should be tested with ascii and utf resourcesrs Gif export should be tested sessionrs inputs mouse keyboard should be fuzztested to ensure nothing can crash the program sessionrs selection commands should be tested in headless mode sessionrs all commands that take user input should be tested with unexpected inputs to ensure there is no division by zero for example librs rxs entry point should be tested with different inputs Test that everything that modifies a view sets the modified flag on it Basically what the topic says Would be nice to have some autocomplete functionality command history etc for the command mode Thanks The cargo install documentation is missing the following packages for debianubuntu systems buildessential libxcursordev libxidev I needed to install the latter two to compile the x dependencies in addition to the others in the docs and Im guessing you need the first Im trying to build a snap of rx on an Ubuntu system Using rust nightly it fails to build as below Any ideas what I can do here Compiling rgx v Compiling rx v rootpartsrxbuild error E mismatched types srcrendererrs OpFill fonttexture fontimgasslice expected struct rgxcoreRgba found u note expected reference rgxcoreRgba found reference u error E mismatched types srcrendererrs OpFill cursorstexture cursorsimgasslice expected struct rgxcoreRgba found u note expected reference rgxcoreRgba found reference u error E mismatched types srcrendererrs OpFill checkertexture checkerimg expected slice found array u note expected reference rgxcoreRgba found reference u error E mismatched types srcrendererrs OpClear viewdatafb RgbaTRANSPARENT expected struct rgxcoreBgra found struct rgxcoreRgba error E mismatched types srcrendererrs OpClear viewdatastagingfb RgbaTRANSPARENT expected struct rgxcoreBgra found struct rgxcoreRgba error E this function takes parameters but parameters were supplied srcrendererrs OpTransfer viewdatafb pixelsasslice sw Source width th Transfer height expected parameters error E mismatched types srcrendererrs rprepare OpFillfb snapshotpixelsasslice expected struct rgxcoreBgra found u note expected reference rgxcoreBgra found reference u error E mismatched types srcrendererrs OpClear viewdatafb RgbaTRANSPARENT expected struct rgxcoreBgra found struct rgxcoreRgba error E mismatched types srcrendererrs OpClear viewdatastagingfb RgbaTRANSPARENT expected struct rgxcoreBgra found struct rgxcoreRgba error E mismatched types srcrendererrs OpFill viewdatafb pixels expected slice found struct stdvecVec note expected reference rgxcoreBgra found reference stdvecVecu error E no function or associated item named empty found for type rgxcoreRect in the current scope srcsessionrs selfselection Rectempty function or associated item not found in rgxcoreRect error E no function or associated item named empty found for type rgxcoreRect in the current scope srcsessionrs selfselection Rectempty function or associated item not found in rgxcoreRect error aborting due to previous errors Opened frames with fclone to draw a simple snake used without savings editor crashed trace thread main panicked at assertion failed left right left Okfalse right Oktrue GPU got stuck on a frame image homeniktobcargoregistry srcgithubcom ecc db ec wgpunative srcswapchainrs note run with RUSTBACKTRACE environment variable to display a backtrace thread main panicked at assertion failed left right left Okfalse right Oktrue GPU got stuck homeniktobcargoregistrysrcgithubcom ecc db ec wgpunative srcdevicers stack backtrace x c b backtracebacktracelibunwindtraceh c d efbf f at cargoregistrysrcgithubcom ecc db ec backtrace srcbacktracelibunwindrs x c b backtracebacktracetraceunsynchronizedhfaa ce a b at cargoregistrysrcgithubcom ecc db ec backtrace srcbacktracemodrs x c b stdsyscommonbacktraceprintfmth b ca d b b at srclibstdsyscommonbacktracers x c b stdsyscommonbacktraceprintDisplayBacktrace as corefmtDisplayfmthb f c c at srclibstdsyscommonbacktracers x c b e c corefmtwriteh fe dc ed at srclibcorefmtmodrs x c b ef stdioWritewritefmth d c a at srclibstdiomodrs x c b e stdsyscommonbacktraceprinth f e b d e at srclibstdsyscommonbacktracers x c b e stdsyscommonbacktraceprinthd d d e at srclibstdsyscommonbacktracers x c b e stdpanickingdefaulthookclosureh d d cfaa b at srclibstdpanickingrs x c b stdpanickingdefaulthookhcf a ca at srclibstdpanickingrs x c b d stdpanickingrustpanicwithhookh d ccf ba c f at srclibstdpanickingrs x c b stdpanickingcontinuepanicfmthd a c at srclibstdpanickingrs x c b cc stdpanickingbeginpanicfmth a bc d a at srclibstdpanickingrs x c b d wgpunativedeviceDevice gfxbackendvulkanBackendmaintainhb ab e x c b b c wgpudevicepoll x c b f ad coreptrrealdropinplaceh d d ea b x c b f rxplatformrunhbca d a e e x c b e f rxinith aa b b c x c b f c rxmainh e fd fc fe x c b f e stdrtlangstartclosureh d df be aebcc x c b stdrtlangstartinternalclosureh d f f at srclibstdrtrs x c b stdpanickingtrydocallh b c aa f at srclibstdpanickingrs x c b a rustmaybecatchpanic at srclibpanicunwindlibrs x c b ecd stdpanickingtryhd abb f c at srclibstdpanickingrs x c b ecd stdpaniccatchunwindh f f c aff at srclibstdpanicrs x c b ecd stdrtlangstartinternalhc ec f at srclibstdrtrs x c b f a main x faeecc libcstartmain x c b e e start x unknown thread panicked while panicking aborting illegal hardware instruction core dumped rx System ArchLinux on Linux Intel Corporation UHD Graphics rev sway version Related to Windows compiled with stable vulkan feature flag rx does not go into command mode when writing using a SwedishNordic keyboard layout Shift Period and instead zooms in one level It seems to recieve a colon in the RecievedCharacter event but the KeyboardInput contains a period Logs T Z DEBUG rx event KeyboardInputKeyboardInput state Pressed key SomeShift modifiers ModifiersState shift true ctrl false alt false meta false T Z DEBUG rxsession KeyboardInput state Pressed key SomeShift modifiers ModifiersState shift true ctrl false alt false meta false T Z DEBUG rxsession command BrushSetMulti T Z DEBUG rx event KeyboardInputKeyboardInput state Pressed key SomePeriod modifiers ModifiersState shift true ctrl false alt false meta false T Z DEBUG rx event ReceivedCharacter T Z DEBUG rxsession KeyboardInput state Pressed key SomePeriod modifiers ModifiersState shift true ctrl false alt false meta false T Z DEBUG rxsession command ZoomIncr T Z DEBUG rxsession zoom T Z DEBUG rx event KeyboardInputKeyboardInput state Released key SomePeriod modifiers ModifiersState shift true ctrl false alt false meta false T Z DEBUG rxsession KeyboardInput state Released key SomePeriod modifiers ModifiersState shift true ctrl false alt false meta false T Z DEBUG rx event KeyboardInputKeyboardInput state Released key SomeShift modifiers ModifiersState shift false ctrl false alt false meta false T Z DEBUG rxsession KeyboardInput state Released key SomeShift modifiers ModifiersState shift false ctrl false alt false meta false T Z DEBUG rxsession command BrushUnsetMulti It would be great if a user could control brush with keyboard instead of frame Maybe it could be done in modal fashion like vim Right now it doesnt make sense to use hjkl when you need to use mouse at the same time Also it would be great if you could map specific keybindings for creating specific patterns maybe through scripting language or just with libraries of images Runs fine if I enable vsync This seems similar to other issues I have encountered on nvidia GPUs where there is no delay when vsync is disabled so it renders and queues frames way too fast until it ooms Quite possibly an issue with wgpu instead of rx but I havent investigated it at all Occurs on OS Arch Linux GPU GTX Driver Nvidia proprietary driver version Backend Vulkan The validation errors repeat many times before hitting the panic I omitted most of them T Z ERROR gfxbackendvulkan VALIDATION VUIDVkSwapchainCreateInfoKHRimageExtent vkCreateSwapchainKHR called with imageExtent which is outside the bounds returned by vkGetPhysicalDeviceSurfaceCapabilitiesKHR currentExtent minImageExtent maxImageExtent The Vulkan spec states imageExtent must be between minImageExtent and maxImageExtent inclusive where minImageExtent and maxImageExtent are members of the VkSurfaceCapabilitiesKHR structure returned by vkGetPhysicalDeviceSurfaceCapabilitiesKHR for the surface object info type DEVICE hndl T Z ERROR gfxbackendvulkan VALIDATION UNASSIGNEDCoreValidationDrawStateSwapchainTooManyImages vkAcquireNextImageKHR Application has already acquired the maximum number of images x object info type SWAPCHAINKHR hndl T Z ERROR gfxbackendvulkan VALIDATION VUIDVkSwapchainCreateInfoKHRimageExtent vkCreateSwapchainKHR called with imageExtent which is outside the bounds returned by vkGetPhysicalDeviceSurfaceCapabilitiesKHR currentExtent minImageExtent maxImageExtent The Vulkan spec states imageExtent must be between minImageExtent and maxImageExtent inclusive where minImageExtent and maxImageExtent are members of the VkSurfaceCapabilitiesKHR structure returned by vkGetPhysicalDeviceSurfaceCapabilitiesKHR for the surface object info type DEVICE hndl T Z ERROR gfxbackendvulkan VALIDATION UNASSIGNEDCoreValidationDrawStateSwapchainTooManyImages vkAcquireNextImageKHR Application has already acquired the maximum number of images x object info type SWAPCHAINKHR hndl T Z ERROR gfxbackendvulkan VALIDATION VUIDVkSwapchainCreateInfoKHRimageExtent vkCreateSwapchainKHR called with imageExtent which is outside the bounds returned by vkGetPhysicalDeviceSurfaceCapabilitiesKHR currentExtent minImageExtent maxImageExtent The Vulkan spec states imageExtent must be between minImageExtent and maxImageExtent inclusive where minImageExtent and maxImageExtent are members of the VkSurfaceCapabilitiesKHR structure returned by vkGetPhysicalDeviceSurfaceCapabilitiesKHR for the surface object info type DEVICE hndl T Z ERROR gfxbackendvulkan VALIDATION UNASSIGNEDCoreValidationDrawStateSwapchainTooManyImages vkAcquireNextImageKHR Application has already acquired the maximum number of images x object info type SWAPCHAINKHR hndl T Z ERROR gfxbackendvulkan VALIDATION VUIDVkSwapchainCreateInfoKHRimageExtent vkCreateSwapchainKHR called with imageExtent which is outside the bounds returned by vkGetPhysicalDeviceSurfaceCapabilitiesKHR currentExtent minImageExtent maxImageExtent The Vulkan spec states imageExtent must be between minImageExtent and maxImageExtent inclusive where minImageExtent and maxImageExtent are members of the VkSurfaceCapabilitiesKHR structure returned by vkGetPhysicalDeviceSurfaceCapabilitiesKHR for the surface object info type DEVICE hndl thread main panicked at called Resultunwrap on an Err value OutOfMemoryOutOfHostMemory srclibcoreresultrs stack backtrace backtracebacktracelibunwindtrace at cargoregistrysrcgithubcom ecc db ec backtrace srcbacktracelibunwindrs backtracebacktracetraceunsynchronized at cargoregistrysrcgithubcom ecc db ec backtrace srcbacktracemodrs stdsyscommonbacktraceprint at srclibstdsyscommonbacktracers stdsyscommonbacktraceprint at srclibstdsyscommonbacktracers stdpanickingdefaulthookclosure at srclibstdpanickingrs stdpanickingdefaulthook at srclibstdpanickingrs stdpanickingrustpanicwithhook at srclibstdpanickingrs stdpanickingcontinuepanicfmt at srclibstdpanickingrs rustbeginunwind at srclibstdpanickingrs corepanickingpanicfmt at srclibcorepanickingrs coreresultunwrapfailed at rustceae dfe e afdc f a d ddf bsrclibcoremacrosrs coreresultResultTEunwrap at rustceae dfe e afdc f a d ddf bsrclibcoreresultrs wgpunativedevicedevicecreateswapchain at homerubiccargoregistrysrcgithubcom ecc db ec wgpunative srcdevicers wgpuswapchaingetnexttexture at homerubiccargoregistrysrcgithubcom ecc db ec wgpunative srcswapchainrs wgpuSwapChaingetnexttexture at homerubiccargoregistrysrcgithubcom ecc db ec wgpu srclibrs rgxcoreSwapChainnext at homerubiccargoregistrysrcgithubcom ecc db ec rgx srccoremodrs rxrendererRendererframe at srcrendererrs rxinitclosureclosure at srclibrs rxFrameTimerrun at srclibrs rxinitclosure at srclibrs rxplatformbackendEventsrunclosure at srcplatformwinitrs winitplatformimplplatformstickyexitcallback at homerubiccargoregistrysrcgithubcom ecc db ec winit alpha srcplatformimpllinuxmodrs winitplatformimplplatformx EventLoopTrunreturn at homerubiccargoregistrysrcgithubcom ecc db ec winit alpha srcplatformimpllinuxx modrs winitplatformimplplatformx EventLoopTrun at homerubiccargoregistrysrcgithubcom ecc db ec winit alpha srcplatformimpllinuxx modrs winitplatformimplplatformEventLoopTrun at homerubiccargoregistrysrcgithubcom ecc db ec winit alpha srcplatformimpllinuxmodrs winiteventloopEventLoopTrun at homerubiccargoregistrysrcgithubcom ecc db ec winit alpha srceventlooprs rxplatformbackendEventsrun at srcplatformwinitrs rxinit at srclibrs rxmain at srcmainrs stdrtlangstartclosure at rustceae dfe e afdc f a d ddf bsrclibstdrtrs stdrtlangstartinternalclosure at srclibstdrtrs stdpanickingtrydocall at srclibstdpanickingrs rustmaybecatchpanic at srclibpanicunwindlibrs stdpanickingtry at srclibstdpanickingrs stdpaniccatchunwind at srclibstdpanicrs stdrtlangstartinternal at srclibstdrtrs stdrtlangstart at rustceae dfe e afdc f a d ddf bsrclibstdrtrs main libcstartmain start note Some details are omitted run with RUSTBACKTRACEfull for a verbose backtrace 