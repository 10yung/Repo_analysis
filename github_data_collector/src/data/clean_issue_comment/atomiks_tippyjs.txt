 Bug description When using the mouse rest plugin tooltips will still be hidden when set up to be interactive Reproduction Hover over the button and then try to select the content because its interactive the mouseleave event will remove the tooltip when Id expect it to remain Currently the only triggers are mouseenter focus click and manual This means you have to directly wrap the target element or reference it which can be difficult for React apps It would be nice to have a way to show the tooltip when focus enters the target element and hide it when focus leaves FezVrasta and I have been working hard on releasing the next Popper version v since November the rewrite initially started by him in though but laid dormant for ages due to difficulties The rewrite of Popper will be explained more indepth in an article once the final release is out but it fixes tons of bugs and API flaws that have come to light over the past years Popper v was released in early and has been in use since Tippy v Its a breaking major so Tippy will need to increment its own major v Id like to make some other changes to Tippy as well to better integrate with libraries like reactspring effectively stripping the builtin CSS animations out and element creation and making them optional but of course still easy to use and add in Bug description Tooltip flips when offset prop is used with negative y axis value eg For more background see Reproduction Hi I tried to add tippy on area on image maps But it did not work I see the tooltip below the image Is there any way I can do this img sarcassetsimagescpPNG usemapimagemap map nameimagemap styleposition relative area target altUPS idare titleUPS href coords shaperect area target altpac titlepac href coords shaperect map Javascript tippydocumentquerySelectorare content TheTooltip showOnCreate true hideOnClick false Bug description A few weeks ago we opened a bug code in which we indicated that when displaying the tooltip for the first time in an event with the showOnCreate property delay and followCursor were not respected The problem with the delay has been corrected but we still have the problem with the followCursor We have detected that the error occurs with Chrome v and Firefox v but with Internet Explorer v it works correctly Reproduction In the same request indicated above a CodePen was attached in which we see that the incidence can be reproduced CodePen link The error is reproduced as follows Place the cursor on the button It is the first time that the onmouseover event is executed so the tippy instance will be created and displayed thanks to the showOnCreate property The tooltip will appear in a centered position Move the cursor from the button Reposition the cursor over the button It is the second time the onmouseover event is executed Now the tooltip will appear in its correct position next to the cursor We have recorded a video reproducing the error with the CodePen Tippyjs issue zip KubaJastrz if youre up to it couldnt really get these working These are the main ones Im aware of currently Functions should be typed with exported interface types from typests Tippy Delegate Im not sure how to get this working with the new function overload types however I think it will require some refactoring js This const tippy Tippy Instead of current function tippy Tippy will return undefined if called a second time with multiple false default currently not typed at all How can we type that correctly ts Assuming reference is an Element const instance tippyreference Instance const instance tippyreference undefined const instance tippyreference multiple true Instance Remove tsignore comments and type correctly there are currently a few I havent touched the Travis file for like years I think it only runs test without linting or type checks Automated unitintegration tests current theres more work to be done there Automated visual tests how this seems finicky npm run devthemesanimations are current ones Automated type tests Semantic releases Though it seems to publish a new release after every successful build I prefer batching many fixeschanges into a single release to reduce noise since overly frequent releases are really annoying I try to limit each release to days minimum unless something is bothering me or theres a critical problem Maybe it can be configured Automated website deploys update tippyjsreact dep along with it I think build files should also become ts with tests on dist to make sure they work theres been some problems reported with the iife version lately since it uses different techniques from esm cjs cc KubaJastrz I think you know more about this than I do Problem When updating content it would be nice if the dimensions could transition from one size to another This makes singleton transitions and dynamic content look more natural Solution Seen experimentally here Since the solutions Ive worked on dont work for every case this will likely be documentation only 