 When trying to do bundle install we receive an error like the following Downloading loldba revealed dependencies not in the API or the lockfile actionpack activerecord railties Used gem versions rails loldba The error seems to be caused by the version constraint in the gemspec file Returned options hash from within parseoptions method in CLI application See Issue Using the command loldbafindindexes on the command line results in the following error trace Traceback most recent call last from usrlocalbundlebinloldba in main from usrlocalbundlebinloldba in load from usrlocalbundlegemsloldba binloldba in top required from usrlocalbundlegemsloldba libloldbaclirb in start from usrlocalbundlegemsloldba libloldbaclirb in start from usrlocalbundlegemsloldba libloldbaclirb in rescue in start usrlocalbundlegemsloldba libloldbaclirb in no implicit conversion of Symbol into Integer TypeError Upon further investigation it seems that the options variable in the LolDbaCLI class is not being populated correctly On line in the rescue clause the options variable is an array not a hash like is expected Hi I am using v and polymorphic indexes are still suggested despite them already being present in different order see Furthermore I believe the suggestion should be in the format polytype polyid This is somewhat of a controversial topic but the reasoning for putting the type first is that it is more useful Pros Index can be used for searches only by type in case we want a count of how many records by types there are Cons Index can not be used to search by just polyid but this should be a nonproblem since it can be argued that searching by just polymorphic ID does not guarantee that the correct record is selected Additionally there are false positives when using Rails STI pattern If a table has a type column loldba proposes an id type index which is redundant especially if an index on just type is present and id is indexed by default Closes The index may have been added with columns in inverse order and that wont affect the performance at all Closes I am getting this recommendation after installing the door keeper gem DB Indexes sets the proper db indexes FailureError expectrake dbfindindexesto matchYey no missing indexes found lambda Missing db indexes were find run rake dbfindindexes Missing db indexes were find run rake dbfindindexes Diff Yey no missing indexes found TIP if you have a problem with the index nameindex name too long you can solve with the name option Something like name myindex run rails g migration AddMissingIndexes and add the following content class AddMissingIndexes ActiveRecordMigration def change addindex oauthaccesstokens doorkeeperapplicationid doorkeeperapplicationid end end Any idea how I can resolve this Useful to be used in a build pipeline Intercept Arel querys to allow query specific indexes Maybe something like this ruby LolDbasuggestindex do Customerwherename Diego end And we suggest an index on name related 