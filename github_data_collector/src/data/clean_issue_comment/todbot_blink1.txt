Im on v I can set a color blink Serials AE lastColor ff ff lastTime lastLedn cmd fadeToRGB When I try to retrieve last color Cannot GET blink lastColor I have read in issue the API changed to retrieve last color using fadeToRGB endpoint by itself but it is not accurate color shows as blink Serials AE lastColor lastTime lastLedn cmd fadeToRGB status bad hex color specified undefined My setup is a DELL laptop with the D Dell docking station I was expecting the server tickle function to play when I unplug my laptop from the docking station but that doesnt happen I discovered this today after some heavy duty debugging until my head nearly imploded If the macOS system language is set to any language with a comma separator delimiter instead of a period which is the default in all English languages as far as I know adding a new pattern through Blink Control wont work unless you replace all period characters with a comma This can be totally confusing because the comma already separates the different segments of the URL but Im afraid the rabbit hole is far deeper and far more complex Even if adding the pattern will succeed and by that I mean that the repeats timing and rgb hex is translated correctly to their respective places in the response text it is not possible to play the pattern afterwards because as you may have guessed by now patternplay is hard coded to understand periods instead of commas and thats what almost made my head implode when I tried to grasp the inner beast of this logic Its kind of like reverse engineering a catch Examples This will fail One theory I have is that the is interpreted as afull stop or something else by OSX which messes up the resulting pattern that ends up like this ff This however works But as I mentioned its of no use because the pattern wont play correctly unless you implement some clever string replacing but thats almost impossible to do due to the complexity of it all and LOTS of culprits The bit being one of them Ok Ive done my best in explaining the problem so I leave it hanging there for the moment Now you know Tatatataaaa Andreas Homebrew is shipping blink but it currently fails to build because the recorded commit ID for v a is de c a af cb ef ae b efe which was correct as of However now that tag appears to be commit ID and thus Homebrew fails Can you confirm that there was an intentional retag This project seems really cool and vital to Blink If this is the offical SDK for it it would be great to see this offer a BSD or MIT style license as well The CCBYSA is not bad but there is some ambiguity that might leave people not comfortable using it and reverting to just using the command line tools and shell exec It would be great if there was a setting to match the blink s and the menu bar icon color Currently the servertickle D firmware command will play the entire programmed color pattern in a loop It should be possible to play a subpattern like blink tool play play blueblueblue in a loop blink tool t servertickle after seconds play greengreengreen in a loop This requires both changes to blink tool and the blink firmware Hello I had previous bought one of the blink mk devices for testing with an embedded system that I am working on a proofofconcept for I am utilizing Buildroot link for creating my embedded system image with Linux kernel version v and have attempted to get it working I am using the precompiled raspberry pi blink tool executable found here but am unable to get the LEDs to trigger I am continually greeted with the no blink devices found error I have used the following command both with and without sudo prefixing it utilizing the udev rule for the nonsudo user just to do a quick test sudo blink toolrpi t random I can see the usb device via lsusb Bus Device ID b ed but it appears that the physical device and application are not linking up I have been able to get the blink device working with regular Ubuntu and Raspbian images I tested this in hopes to glean any information I could unfortunately this did not get me anywhere If you have an ideas how I would be able to get the blink to function on under an embedded buildroot device that would be greatly appreciated I could be missing a step somewhere along the way so I would appreciate your thoughts Thanks You can do cool things with blink using just blink tool Lets document that better For instance heres a customized flashing thing eg both of these should result in blink flashing red for eternity blink tool playpattern ff blink tool rgb FF blink This does break the philosophy of blink tool always eventually exiting but well allow it in this case