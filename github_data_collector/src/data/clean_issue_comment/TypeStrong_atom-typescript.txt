Many times when trying to sort out errors in return types the output is a mess It comes back as a big long tooltip that says language like more undefinedSomeTypeError Reasoning about this is so difficult I often even wish i could copy and paste I actually take a screenshot and try to read this output because i cant even select copy and past from the tooltip Please Im not sure if something changed recently but Im trying to use this package with languagebabel and the init screen no longer seems to be working I know atom also recently updated but wanted to check here as well do grammarPackageImUsing languagebabel atompackagesonDidTriggerActivationHook grammarPackageImUsinggrammarused atompackagestriggerActivationHook languagetypescriptgrammarused x All compiled assets are included atom packages are git tags and hence the built files need to be a part of the source control This feature is about check errors from related files by cursor position in design time It using several protocols of tsserver navtree NavTree request for find a semantic node references Find references request for search related files updateOpen Request to synchronize list of open files with the clientshould require before getting diagnostics semanticDiagnosticsSync Synchronous request for semantic diagnostics Way use sync protocol geterr command is does not guarantee the response of all files It should be necessary synchronized list of openand closed files between the Atom Handle for error messages for triggerFile It is recognize for currently opened file in editor with working on ChecklistResolver Doesnt need diagnostics of syntactic and suggestion because savedor not opened files are passed alreadygetter command will always get diagnostics syntactic and suggestion And much faster response then geterr command This PR is recreated for resolve sync state of openclosechange of files between Atom editor and external modifier x All compiled assets are included atom packages are git tags and hence the built files need to be a part of the source control When this option enabled It will be report all problems in current project when on file saved My teams projects use two spaces of indentation in all source files so it would be nice if we could set this same level of indentation for the tooltips that appear with types VSCode allows customising the location of TypeScript thanks to typescripttsdk Could the same be possible for atomtypescript After digging in the sources Ive noticed that there is an automatic detection but in my users case TypeScript is located outside of the nodemodules folder When i click into a path like this i do not jump into the source ts someappappappcontext It would be great to hide tooltips because they are very annoying and overlay autocompletion Ive tried different options in settings like increasing delay and so on but nothing helped Maybe its not tooltip but there are no other options in settings img width altscreenshot at src Itd be nice to make the tooltip stay when hovering over it and to disappear when the mouse leaves similar to linteruidefault or with atomide tooltips Then we can make the text selectable which is super useful for copying type identifiers etc We could also make type identifiers clickable to take us to the definitions Some context I made a function that takes an interface with properties as an argument ts interface MyInterface readonly myProperty string readonly anotherProperty number optionalProperty number optionalProperty number I can have some comments to describe this property in great detail lastProperty string function interfaceConsumermyVariable MyInterface string some code here return TS knows everything about that interface it shows hints about expected properties and would warn me when in function arguments I create an object not compatible with the interface TS shows hints for interface properties TS warns when object does not conform to the interface So can I have a way to autocomplete that interface in function parameters I could copypaste interface declaration sure but its not the same and I would need to add commas remove additional metadata or comments I might have there What would it look like Simulated experience with TS interface template autocompletion ts interfaceConsumer myProperty string anotherProperty number optionalProperty number optionalProperty number lastProperty string Leading commas and alignment are my personal preferences of course Having types as initial values is quite crucial though its important to have there something invalid so that user does not leave a value unmodified by accident and having type information inserted could be handy IMO Dropping information about optional arguments doesnt look like a good idea so Id insert it back with trailing comment The question Can I have such interface autocompletion experience now Tell me if there are pluginshotkeysworkflows Im not aware of that would let me have this experience 