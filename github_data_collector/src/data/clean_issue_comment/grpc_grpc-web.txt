Hey Today my envoy proxy stopped working after I rebuild my Docker image I am getting that error using your example critical main sourceserverservercc error initializing configuration etcenvoyyaml Proto constraint validation failed Using deprecated option envoyapiv routeCorsPolicyalloworigin from file routecomponentsproto This configuration will be removed from Envoy soon Please see for details If continued use of this field is absolutely necessary see for how to apply a temporary and highly discouraged override alloworigin allowmethods GET PUT DELETE POST OPTIONS allowheaders keepaliveuseragentcachecontrolcontenttypecontenttransferencodingcustomheader xacceptcontenttransferencodingxacceptresponsestreamingxuseragentxgrpcwebgrpctimeout exposeheaders customheader grpcstatusgrpcmessage maxage Dockerfile This configuration will build a Docker container containing an Envoy proxy that routes to Google FROM envoyproxyenvoydevlatest RUN aptget update COPY envoyyaml etcenvoyyaml CMD usrlocalbinenvoy c etcenvoyyaml I want to use it in production but there is no update for long time I cloned this repository and run dockercompose up d nodeserver envoy commonjsclient but failed with the error Error code upstream connect error or disconnectreset before headers reset reason connection failure failedd Hi all I have a very basic question and cannot find an answer yet This is what I have from docs ts const echoService new EchoServiceClient null null Thats all fine until it comes to deployment to the real world where I have just one domain lets say this is a limitation and want to split the traffic by path prefixes as one normally does in REST In other words this is the desired URL structure web app grpcweb proxy and the configuration of the client would be ts const echoService new EchoServiceClient null null or even more preferrable ts const echoService new EchoServiceClientgrpcproxy null null There is an option to configure some sort of path prefix strip and make one more proxy step on the envoy itself so it looks something like browser envoy proxy strip path prefix envoy grpc web proxy grpc server However it looks dirty And I am still unsure whether the grpcweb library itself is going to support the nonroot path prefixes such as described above in the long run Is this possible Is there an example how to configure envoy in this case Thanks in advance We are running a grpcpython server on a k s cluster with knative We are able to connect to the server from a grpcnode client but struggle to set up the connection from a grpcweb client Has anyone done that If I am not mistaken we are able to circumvent the istiogateway and envoy sidecar in the case of the grpcnode call by connection to servicenamespaceclusterport but have to go through that for grpcweb We tried following this blog post which sets up a connection with a service through the istio gateway but we struggle to convert it to a knative setup Allows the specification of commonjs as an import style as documented here I do have a simple service which provides a server streaming to all users connected via grpcweb and a simple unary call to send a message to a specific user My question is how can I send something to all grpc connected users what is the best approach I was thinking to store all connected users in a go map structure and then iterate over it but this method doesnt really scale in case if I have multiple services service NotificationsService rpc SendNotificationMessageNotificationMessageRequest returns NotificationMessageResponse rpc GetLatestNotificationsNotificationsRequest returns stream NotificationsResponse Hello There seems to be an issue with the capitalization of the header names It seems that everything under this repository expects lowercase capitalization for the header names This is a bit odd seeing that header names are usually capitalized on each word GrpcMessage vs grpcmessage The golang proxy of improbable engineering returns the former GrpcMessage and GrpcStatus which causes the error handling to fail in the grpcweb javascript client The callback for the request is never called if an error is returned Manually editing these to include the caps solves the issue Note I believe this might also the issue causing This fixes that a grpcstatus in the response header resulted in double execution of the callback that was provided to the rpcCall In the echoAbort exampl to test grpc error response codes this bug was not hit because the used server library grpcjs is not fully compliant with other grpc server libraries It seems that the grpcjs library is not sending grpcstatus response headers in the same way as the golang c implementations or that these headers are removed by envoy if grpcjs is used this needs to be confirmed separately In my tests I found that simply changing the npm package to the native grpc library in the provided examples would result in the bug mentioned above Therefore I suggest to switch to the grpc npm package in the examples ie grpcjs is still in beta If you run the docker file for It will fail to compile the Nginx proxy stating githubgrpcwebnetgrpcgatewayprotospairpbcc error dynamicinitdummypair eproto defined but not used Werrorunusedvariable static bool dynamicinitdummypair eproto PROTOBUFNAMESPACEIDinternalAddDescriptors descriptortablepair eproto true cc plus all warnings being treated as errors make objsaddonprotospairpbo Error objsMakefile recipe for target objsaddonprotospairpbo failed make Leaving directory githubgrpcwebthirdpartynginxsrc make all Error Makefile recipe for target all failed make Leaving directory githubgrpcwebthirdpartynginxsrc make nginxstatic Error Makefile recipe for target nginxstatic failed The command binsh c cd githubgrpcweb make returned a nonzero code I could go in and ignore this warning But if this is an issue I know others will be running on I only found this because Im running an Ubuntu base with those RUN commands plus a few of my own Running this Dockerfile from the latest master will fail But in node stretch with the same commands will successfully compile Running them one at a time in a clean Ubuntu there is an issue after running make install in the thirdpartygrpc and it doesnt initialize correctly thirdpartygrpcthirdpartyprotobuf I can move to node stretch for the time but I need to get this figured out