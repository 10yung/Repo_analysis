while running sphinx code it is taking more time to execute the LISTENING RECOGNIZING functions The question is there any way to reduce the time consumption that these function takeslike arguments or parameters Im trying to run this command pocketsphinxcontinuous hmm homerichardtestPSAudioenusadapt lm homerichardtestPSAudioenuslmbin dict homerichardtestPSAudionewmerge dict infile wav result txt and I get a segmentation fault The file wav is Mbytes Ive tried chopping Mbytes off the front of the file and this seems to have the effect of changing the number of bytes written to the text file Thus far The version of pocketsphinx is from Debianstable pocketsphinx prealpha b amd deb Im unfamiliar with the working of pocketsphinx and its been a while since I ran a debugger so Ill need some guidance on which files you may need to investigate this Im looking to get possible guesses for words other then those appearing in the segment list These look to be contained in the lattice However I dont see how those get mapped to probabilities Shouldnt a probability be contained on the frame line Thanks Therere many default constant values in feh which are important for recognition My question is that can some of them be modified based on actual input speech data Take DEFAULTFRAMERATE and DEFAULTWINDOWLENGTH as examples DEFAULTFRAMERATE is defined as However the speech FPS is in my case can I just simply change it to DEFAULTWINDOWLENGTH is defined as can I change it to which means ms Memory allocation error on pssearchstep while nfr acmodprocessrawacmod bptr nread TRUE while acmod nfeatframe pssearchstepngs acmod outputframe acmodadvanceacmod fprintfstderr nprocessed d frames n nfr device iPhone plus iOS Following is the crash log Crashed NSOperationQueue x c ee QOS UNSPECIFIED libsystemkerneldylib x e pthreadkill libsystempthreaddylib x a pthreadkillVARIANTmp libsystemcdylib x cfd c abort libsystemmallocdylib x a d nanoptrinuseenumerator libsystemmallocdylib x a bd nanomalloccheckclear libsystemmallocdylib x a a c nanocalloc libsystemmallocdylib x a c malloczonecalloc libsystemmallocdylib x f calloc SpeechDecoding x ckdcalloc SpeechDecoding x a c glistaddptr SpeechDecoding x aa fsghistoryentryadd SpeechDecoding x c fsgsearchnullprop SpeechDecoding x c fsgsearchstep SpeechDecoding x e c c testdecodeptm phonedecodec SpeechDecoding x e a executephonesequenceptm phonedecodec SpeechDecoding x e c runPhoneSequence PocketSphinxProcessorm SpeechDecoding x df PocketSphinxManager runPLDecoderForRecordingFileallpFilemlqFlagoneWordFlag PocketSphinxManagerm SpeechDecoding x df PocketSphinxManager runPLDecoderForRecordingFileoutFDirmlqFlagoneWordFlag PocketSphinxManagerm SpeechDecoding x df fa PocketSphinxManager processPronunciationForRecordingFileAsyncphraseoutFDir blockinvoke PocketSphinxManagerm Foundation x e NSBLOCKOPERATIONISCALLINGOUTTOABLOCK Foundation x d NSBlockOperation main Foundation x cac NSOperationInternal start Foundation x c NSOQSchedulef libdispatchdylib x cca dispatchclientcallout libdispatchdylib x d e dispatchcontinuationpopVARIANTmp libdispatchdylib x d cc dispatchasyncredirectinvokeVARIANTmp libdispatchdylib x d cac dispatchrootqueuedrain libdispatchdylib x d fc dispatchworkerthread libsystempthreaddylib x fffac pthreadwqthread libsystempthreaddylib x ffb startwqthread Hello Running configure make make install with todays git results in libpython sitepackagespocketsphinx being created but not a pocketsphinxegginfo file installed It means that one cant use python from pkgresources import require requirepocketsphinx to depend on pocketsphinx and apparently poses problem to at least some applications see Samuel acmodc In function acmodreadscores acmodc error macro EDEBUG passed arguments but takes just acmodsenscrframe acmodnsenoneactive Hi Nshmyrev I need some assistance regarding this Am I supposed to drag both the sphinxbase and pocketsphinx folders directly into the project Im still struggling to get this working and Im not familiar with dragging C code directly into a project Im using Swift as the language Can you provide me detailed steps to directly incorporate the pocketsphinx sources properly into an iOS app 