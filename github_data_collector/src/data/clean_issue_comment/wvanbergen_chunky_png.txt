Im trying to paste a series of images into a single image each image has a size of x for a total size of x when i try to paste i get this error CRuby librubygems gemschunkypng libchunkypngcanvaspngencodingrb in block in encodepngimagepasstostream failed to allocate memory NoMemoryError And when i try to save the single image i get this error FATAL failed to allocate memory Is there a way to do it like a IO Stream Is there a memory leak in Chunky PNG I have GBusing GB of Memory Ram Windows bits Example Code require chunkypng WIDTH HEIGHT FOLDER images x y count filenamesize DirentriesFOLDERsize Files background ChunkyPNGImagenewWIDTH HEIGHT ChunkyPNGColorTRANSPARENT for filename in DirentriesFOLDER image ChunkyPNGImagefromfileFOLDERfilename NoMemoryError backgroundreplaceimage x y count puts filename saved countfilenamesize files left x x WIDTH if x y end break if count To get FATAL failed to allocate memory error end puts Saving background image backgroundsavebackgroundpng FATAL failed to allocate memory I need it to easily add iTXt chunks to bake OpenBadges Hope itll help someone and I didnt break any backward compatibilities ruby imagemetadata iTXtfun ChunkyPNGChunkInternationalTextnewiTXtfun Hola es expectmetadata iTXtfun to eq ChunkyPNGChunkInternationalTextnewiTXtfun Hola es this just seems very unclear can we have an example someplace The links to and leads to a served by GitHub Pages If I clone the repository and serve locally using bundle exec jekyll serve they work without problem jekyll under ruby p so I suspect it might be something strange on Githubs part These two methods encapsulate the knowledge of how to convert from DPI back to pixels per unit as well as automatically setting the unit when setting DPI Hello Im wondering if anyone has tried or had luck with using ChunkyPNG to create an animated PNG from a sequence of images From what I understand the APNG format is just an extension to PNG with additional chunks for defining animation settings Thanks for any insight into this It would be nice to have api support for generating the pHYs section as it is part of the PNG Specification Its possible to do it manually if there is already a chunk streameachchunk do c if ctype pHYs ccontent packN C end end But its not as easy to insert this node into a fresh PNG I plan on inserting a ChunkyPNGChunkGeneric into otherchunks but this feels really a tad dirty I propose that Datastream have ChunkyPNGChunkPhys and a corresponding physchunk accessor Move useful stuff to chunkypngcom 