Fixes Hardened runtime prohibits relative paths when looking up libraries This change makes the path to libjlidylib absolute allowing the signed app to run As of macOS Catalina apps signed with a new Developer ID need to have the hardened runtime enabled to run as per If the app created by packr is signed with the hardened runtime enabled the app will halt when running producing this error dlopenjrelibjlilibjlidylib no suitable image found Did find file system relative paths not allowed in hardened programs Error failed to load VM runtime library Using openjdk I get a dlopenjrelibjlilibjlidylib image not found error which fails the launch of the jvm I think this is an error specifically for later jres because when I look back at my jre x it contains the file specified Any thoughts for solving this Thanks I was compressing ojdk version which is mentioned in Packr github Due to incompatibility between u versions and Intel Sandy bridge processors I have to downgrade to u I downloaded the jdk from oracle and ran packr on it but the extracted jre is unable to start my windows application Error jvmdll is missing cannot run application Need help When I run this tool in a folder that already contains files it completely deletes them after building the file This should be fixed Hi there I cant run my builded app After clicking on exe file nothing happens but process is run found in Task Manager I use Amazon Correto JDK for Windows link and JavaFX link Config platform windows jdk C Program Files Amazon Corretto jdk executable mysimpleapp classpath mysimpleapp jar C dev java library javafxsdk lib C dev java library javafxsdk bin mainclass mysimpleappMainApp vmargs modulepath lib addmodules javafxcontrolsjavafxfxml output mysimpleappoutwin After build command java jar packrjar configjson and enter the build folder cd mysimpleappoutwin I can run the jar with command java modulepath lib addmodules javafxcontrolsjavafxfxml jar mysimpleapp jar but running exe doesnt work Please help After upgrading from openjdk to openjdk the generated executable for MacOS will not launch Running the executable from a terminal displays the following error message prior to exit dlopenjrelibjlilibjlidylib image not found Error failed to load VM runtime library In openjdk the location of this dynamic library was moved from jrelibjlilibjlidylib to jreliblibjlidylib The jli subdirectory no longer exists The root cause appears to be the following line in packrmacoscpp Manually creating the jli subdirectory and then adding a symbolic link libjlidylib libjlidylib in the jre is a temporary workaround to this issue However attempting to create the symbolic link within the target jre prior to running packr caused packr to fail while copying the jre What works is to create the symbolic link within the packr generated output appnameappContentsResourcesjre prior to running pkgbuild to create the installer Both has jre issue packr examples ask zip for JDK I downloaded jdk u linuxi tarzg and jre u macosxx targz from Oracle I converted both to zip Run json to get issues For Mac Downloaded jre u macosxx tar then converted it to zip The structure of zip is jre u macosxx zip jre jre folder Contents Home folder MacOS folder infoplist Home has jre contents like bin lib etc Got error message javaioIOException Couldnt find JRE in JDK see C docs packr outmac Contents Resources tmp Can someone help for a clue Related StackOverFlow question In my program LibGDX program I obtain the users IP by contacting I tried using both LibGDX HTTP methods and standard Java URL methods The code works when I run the jarfile directly but causes the app to exit when I run the exe I compiled and packaged my app with JDK I manually created the jre folder which Packr looks for and copied bin and lib into it Heres the Packr config I used json platform windows jdk C Program Files Java jdk executable ShengJiwin classpath desktop jar removelibs desktop jar mainclass comsageshengjidesktopDesktopLauncher minimizejre soft output outwindows This code in the show method for one of my Screens doesnt work when I run the exe java NetHttpRequest httpGet new NetHttpRequestNetHttpMethodsGET SystemoutprintlnAfter httpGet object creation httpGetsetUrl SystemoutprintlnAfter set httpGet url GdxnetsendHttpRequesthttpGet new NetHttpResponseListener Override public void handleHttpResponseNetHttpResponse httpResponse Systemoutprintlnin handleHttpResponse Override public void failedThrowable t Systemoutprintlnin failed Override public void cancelled Systemoutprintlnin cancelled SystemoutprintlnAfter GdxnetsendHttpRequest It works as intended when I run the jarfile directly However when I run the exe and print to a log file After GdxnetsendHttpRequest is never printed and neither are any of the print statements in the HttpRequestListeners methods As far as I can tell the rest of the app works fine with the exe When I put the faulty code in a separate thread the app does not close and all other parts seem to work correctly I decided to save the outputed executable to my desktop This shouldnt seem too unusual What was unusual was when packr said something along the lines of cleaning up directory it wiped all links files and folders from my desktop Why is there no warning that unrelated files might be tampered with Why does packr assume its saving to an empty folder This was very frustrating to deal with