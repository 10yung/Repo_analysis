This will allow stdvectorConnection and stdvectorScopedConnection to resize a little more efficiently Was only waiting until our minimum compiler on MSW was v which is now the case Fixes That issue is marked for milestone although this is a pretty minor modification so it can be merged before or after that lands I cannot get this signal to emit when moving an app from my laptop to an external monitor Im trying to handle ImGui content scaling changes when the monitor changes but I have to trigger a resize manually instead to do this Do I have to do something to enable this signal or is this a new issue In an ortho box the area of the near and far sides are the same I needed to override the getFarClipCoorinates to not use the ratio factor MovieGl signals in linux seem to be never called Consider the following situation glScopedFrameBuffer scpFbo mFbo Fbo is now bound and marked as dirty setViewportAndDrawSomething glScopedFrameBuffer scpFbo mFbo Fbo s color texture is resolved and returned Fbo is no longer marked as dirty const auto colors mFbo getTexture GLCOLORATTACHMENT drawSomethingUsing colors We can still draw to Fbo but its texture will not be resolved unless we explicitly mark the Fbo as dirty drawSomethingElse Texture is not resolved and wont contain the elements drawn in drawSomethingElse const auto oops mFbo getTexture GLCOLORATTACHMENT mFbo markAsDirty const auto yay mFbo getTexture GLCOLORATTACHMENT I ran into this particular sequence of calls while working on my latest project and it took more than hours of debugging to find out why my content wasnt showing up Would it be possible to automatically flag Fbo as dirty when its bound again after Fbo is popped Paul Heres another example Recently I ran into a situation that I need two versions for my program commandline version and GUI version By default Cinder app compiles into a GUI version Is there a commandline mode for the macro CINDERAPP Maybe this requires a different entrance function other than the setupdrawupdate loop but it can reuse most of the other functions in the GUI version When I compile the samplesRenderer dBasic in Ubuntu I got the following error Can anyone advise me how to fixe it Renderer dAppcpp error invalid use of incomplete type class cinderappRenderer d elieliUX build make j Configuring done Generating done Build files have been written to homeeligitCindersamplesRenderer dBasicprojcmakebuild Scanning dependencies of target Renderer dBasic Building CXX object CMakeFilesRenderer dBasicdirhomeeligitCindersamplesRenderer dBasicsrcRenderer dAppcppo In file included from homeeligitCinderincludecinderappApph from homeeligitCindersamplesRenderer dBasicsrcRenderer dAppcpp homeeligitCindersamplesRenderer dBasicsrcRenderer dAppcpp In function int mainint char homeeligitCindersamplesRenderer dBasicsrcRenderer dAppcpp error invalid use of incomplete type class cinderappRenderer d CINDERAPP Renderer dApp Renderer d In file included from homeeligitCinderincludecinderappAppBaseh from homeeligitCinderincludecinderapplinuxAppLinuxh from homeeligitCinderincludecinderappApph from homeeligitCindersamplesRenderer dBasicsrcRenderer dAppcpp homeeligitCinderincludecinderappRendererh note forward declaration of class cinderappRenderer d typedef stdsharedptrclass Renderer d Renderer dRef make CMakeFilesRenderer dBasicdirbuildmake CMakeFilesRenderer dBasicdirhomeeligitCindersamplesRenderer dBasicsrcRenderer dAppcppo Error make CMakeFilesMakefile CMakeFilesRenderer dBasicdirall Error make Makefile all Error Inspired by to get the delta in seconds between the last update and the current update Cinders current cmake system actually works well on Windows but the runtime library is fixed to MT which is not the default setting of other cmake projects When cinder is used together with other cmake based MSW projects the setting should have a switch to change between MT and MD