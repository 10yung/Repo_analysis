User data should be specified inside a bullet tag with a userdata tag The userdata tag should also specify a key attribute First thanks for the great work you have done and are doing on bullet and pybullet According to the PyBullet Quick Start Guide the implementation of TORQUECONTROL in setJointMotorControl relies on external forcestorques External forces only work when explicitly stepping the simulation I assume that TORQUECONTROL therefore also only works when explicitly stepping the simulation If this is correct I think it would be helpful to add a quick note stating this somewhere near the section on setJointMotorControl such that this info is easier to find Hi Dose pybullet share the feature for collision margin or collision distance since i see my gripper often give the distance which is larger than the actual radius of the cylinder for example cylinder with radius of m but the two finger gripper distance of m also actually with position control i can grasp the cylinder So would it be able to adjust the collision margin for my grasping task the visual shape is same as the collision shape in the picture Thanks very much I noticed that the bodyname argument is not being used in the BodyPart constructor Is there a particular reason for this or can it be added as a class attribute with the other arguments It looks like this is exported to bulletpcin but is not done for BulletConfigcmakein Should BULLETDEFINITIONS in BulletConfigcmakein be changed to the argument used in bulletpcin Hello Im having an issue with changeVisualShape with loaded texture in Direct Mode The images returned by getCameraImage seems not changing while its updated in GUI mode and TinyRenderer Any ideas why it could be happening Also is there APIs to change ambient light intensities in Direct Mode Thanks Hi erwincoumans I wanted to share my parallel version of the soft body class specialization It helps a lot to increase soft body instance count in a dynamic scene especially for games or other realtime applications Take your time to review it Enjoy and happy new year See For now this is only supported for btMultiBody this is a feature request to atleast give the option to also make this possible for btRigidBody In btQuaternionh the function btScalar getAngle const calculates the angle from the inverse cosine of w This gives numerical issues when the angle is almost zero e in case of double In that case the w term becomes almost in which case a lot of significant digits are lost w and the calculation of the angle becomes less precise than possible This can be solved by calculating the angle from the atan instead btVector xyz q q q double w q double n xyznorm double angle atan n absq if w angle angle This approach can be found in the Eigen and scipy python packages Removes srcDSStore Apple Finder meta and updates gitignore to prevent regression in the future