In the unreleased modernbase stylesheet there are rules to normalize the behavior of replaced elements like img video svg iframe canvas and audio According to the related issue of normalizecss one of the reasons behind not adopting these rules is that it can trigger certain bugs in IE which modernnormalize doesnt support On the other hand I would be interested in usecases where applying maxwidth causes undesired behavior for replaced elements when you have something like overflow auto on desktop browsers and Android the scroll is natural Only on iOS it stops scrolling immediately when you release your finger According to mdn webkitoverflowscrolling is not standard so I feel like this is a missing default feature on iOS While it can be used to manually fix some light text on dark backgrounds on Macs it shouldt be used on the entire page It often leads to overly thin text with smaller weights such as this example If you look at how DirectWrite and Cocoa work on Windows and Mac native elements they use subpixel AA on normal DPI screens and default to greyscale on high DPI screens The same is true with Chrome which disable subpixel AA when the device DPR is over Twitter did a similar thing on their site css media screen and webkitmindevicepixelratio screen and minresolution dppx body mozosxfontsmoothing grayscale webkitfontsmoothing antialiased While modernnormalizecss is great for ensuring consistency the default browser styles are not that nice The goal of modernbasecss is to be a better base style that you use in addition to modernnormalizecss This base can afford to be opinionated Happy to consider suggestions for what to include but only essential things miniresetcss is another solid alternative to normalize I think you should consider adding a section that explains why users choose this one over minireset We should add a comparison table to README to explain the differences over other projects such as miniresetcss rebootcss and such Hey first of all nice project I am just wonder why you set the lineheight to Is it because the default leading for most browsers is between to The line height typically recommended in typography is Do you have a special reason Otherwise I would recommend something like because it still looks nice but greater leading is actually a good practise for accessibility You could even go all the way up to which is the recommended leading by the W C accessibility guidelines I would think if we want to normalize we could also try to normalize not just to the defaults but also a little bit in the direction of an overall accessible web Looking forward to your thoughts The goal of this project is to make itself obsolete We should try to get browsers to fix their own styles so we dont have to work around them indefinitely If you want to help out Pick a style in modernnormalizecss Go to the relevant browser issue trackers Chrome Firefox Safari search for an existing issue and if none report it Ensure you follow the guidelines for reporting Comment here with a link to the issue so we can track it even if its an existing issue