Bumps handlebars from to details summaryChangelogsummary Sourced from handlebarss changelog v November th Bugfixes fix add noprototypebuiltins eslintrule and fix all occurences f f d fix add more properties required to be enumerable Chores Build fix use instead of c b f add chai and dirtychai and sinon for cleaner testassertions and spies deprecate old assertionmethods e e ba dad a Security The properties proto defineGetter defineSetter and lookupGetter have been added to the list of properties that must be enumerable If a property by that name is found and not enumerable on its parent it will silently evaluate to undefined This is done in both the compiled template and the lookuphelper This will prevent new RemoteCodeExecution exploits that have been published recently Compatibility notes Due to the securityfixes The semantics of the templates using proto defineGetter defineSetter and lookupGetter in the respect that those expression now return undefined rather than their actual value from the proto The semantics have not changed in cases where the properties are enumerable as in js proto some string The change may be breaking in that respect but we still only increase the patchversion because the incompatible usecases are not intended undocumented and far less important than fixing RemoteCodeExecution exploits on existing systems Commits v November th Bugfixes fix use Stringfield in lookup when checking for constructor d test add fluent API for testing Handlebars c ac c Compatibility notes no incompatibility are to be expected trtable truncated details details summaryCommitssummary c c b v c d Update release notes f f d fix add noprototypebuiltins eslintrule and fix all occurences fix add more properties required to be enumerable ba testchore add chaiexpect and sinon to runtimeenvironment dad test add sinon as global variable to eslint in the specs a test add sinonjs for spies deprecate current assertions e e chore add chai and dirtychai for better test assertions c b f fix use instead of de d v Additional commits viewable in compare view details br Dependabot compatibility score Dependabot will resolve any conflicts with this PR as long as you dont alter it yourself You can also trigger a rebase manually by commenting dependabot rebase dependabotautomergestart dependabotautomergeend details summaryDependabot commands and optionssummary br You can trigger Dependabot actions by commenting on this PR dependabot rebase will rebase this PR dependabot recreate will recreate this PR overwriting any edits that have been made to it dependabot merge will merge this PR after your CI passes on it dependabot squash and merge will squash and merge this PR after your CI passes on it dependabot cancel merge will cancel a previously requested merge and block automerging dependabot reopen will reopen this PR if it is closed dependabot ignore this patchminormajor version will close this PR and stop Dependabot creating any more for this minormajor version unless you reopen the PR or upgrade to it yourself dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency unless you reopen the PR or upgrade to it yourself dependabot use these labels will set the current labels as the default for future PRs for this repo and language dependabot use these reviewers will set the current reviewers as the default for future PRs for this repo and language dependabot use these assignees will set the current assignees as the default for future PRs for this repo and language dependabot use this milestone will set the current milestone as the default for future PRs for this repo and language You can disable automated security fix PRs for this repo from the Security Alerts page details Bumps flask from to details summaryRelease notessummary Sourced from flasks releases The Pallets team is pleased to release Flask Read the announcement on our blog There are over a years worth of changes in this release Many features have been improved or changed Read the changelog to understand how your projects code will be affected JSON Security Fix Flask previously decoded incoming JSON bytes using the content type of the request Although JSON should only be encoded as UTF Flask was more lenient However Python includes nontext related encodings that could result in unexpected memory use by a request Flask will now detect the encoding of incoming JSON data as one of the supported UTF encodings and will not allow arbitrary encodings from the request Install or Upgrade Install from PyPI with pip pip install U Flask details details summaryChangelogsummary Sourced from flasks changelog Version Released Python and are no longer supported Bump minimum dependency versions to the latest stable versions Werkzeug Jinja itsdangerous Click issue Skip methapprun Flaskrun when a Flask application is run from the command line This avoids some behavior that was confusing to debug Change the default for dataJSONIFYPRETTYPRINTREGULAR to False funcjsonjsonify returns a compact format by default and an indented format in debug mode pr methFlaskinit Flask accepts the hostmatching argument and sets it on attrFlaskurlmap issue methFlaskinit Flask accepts the statichost argument and passes it as the host argument when defining the static route issue funcsendfile supports Unicode in attachmentfilename pr Pass scheme argument from funcurlfor to methFlaskhandleurlbuilderror pr methFlaskaddurlrule accepts the provideautomaticoptions argument to disable adding the OPTIONS method pr classviewsMethodView subclasses inherit method handlers from base classes pr Errors caused while opening the session at the beginning of the request are handled by the apps error handlers pr Blueprints gained attrBlueprintjsonencoder and attrBlueprintjsondecoder attributes to override the apps encoder and decoder pr methFlaskmakeresponse raises TypeError instead of ValueError for bad response types The error messages have been improved to describe why the type is invalid pr Add routes CLI command to output routes registered on the application pr Show warning when session cookie domain is a bare hostname or an IP address as these may not behave properly in some browsers such as Chrome pr Allow IP address as exact session cookie domain pr SESSIONCOOKIEDOMAIN is set if it is detected through SERVERNAME pr Autodetect zeroargument app factory called createapp or makeapp from FLASKAPP pr Factory functions are not required to take a scriptinfo parameter to work with the flask command If they take a single parameter or a parameter named scriptinfo the trtable truncated details details summaryCommitssummary f c Bump version number to e a release c Merge branch maintenance b Merge pull request from palletssetuplink c d ensure order of project urls a a Add projecturls so that PyPI will show GitHub stats ede b add donate link aec add donate link df f Merge pull request from greylipatch df Fix typo in docs Additional commits viewable in compare view details br Dependabot compatibility score Dependabot will resolve any conflicts with this PR as long as you dont alter it yourself You can also trigger a rebase manually by commenting dependabot rebase dependabotautomergestart dependabotautomergeend details summaryDependabot commands and optionssummary br You can trigger Dependabot actions by commenting on this PR dependabot rebase will rebase this PR dependabot recreate will recreate this PR overwriting any edits that have been made to it dependabot merge will merge this PR after your CI passes on it dependabot squash and merge will squash and merge this PR after your CI passes on it dependabot cancel merge will cancel a previously requested merge and block automerging dependabot reopen will reopen this PR if it is closed dependabot ignore this patchminormajor version will close this PR and stop Dependabot creating any more for this minormajor version unless you reopen the PR or upgrade to it yourself dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency unless you reopen the PR or upgrade to it yourself dependabot use these labels will set the current labels as the default for future PRs for this repo and language dependabot use these reviewers will set the current reviewers as the default for future PRs for this repo and language dependabot use these assignees will set the current assignees as the default for future PRs for this repo and language dependabot use this milestone will set the current milestone as the default for future PRs for this repo and language You can disable automated security fix PRs for this repo from the Security Alerts page details See related The long term plan for Tessera is to rewrite the backend in Go and add support for multiple time series DBs along the way via a proxy layer that translates results to a single datapoint series format for the Tessera UI to use In the meantime however adding a few additional routes in the Flask code of the existing backend to proxy Graphite traffic can be done easily and will greatly simplify deployment and configuration as the browser would no longer need to talk directly to Graphite eliminating CORS configuration having multiple ports and addresses accessible to the browser etc OR Get a better easy to use Docker image running nginx in front of tessera and graphite to accomplish the same thing with better performance Some dashboard items inherit properties from their parent types but dont make use of them due to specialized rendering Those items should remove the unused properties from their property lists to clean up the editing UI and avoid confusion jQuery should be updated to x for security and avoiding bitrot but doing so breaks the datetime picker which doesnt seem to be maintained anymore Consider switch to which is recent and also fits Tesseras aesthetics very well Copying issues from This looks like just the thing Ive been looking forconsidering writing for managing multiple npm packages from the frontend codebase Tessera currently uses handlebars for expanding templates in items such as the markdown item and most importantly in queries Internal to UA to be released eventually we integrate that with handlebars helper functions that call clusto to build graphite queries from rolebased queries to clusto to retrieve hostnames Because handlebars is synchronous that means making synchronous HTTP calls which is no fun mitigated by inbrowser caching but still Possible approaches to mitigate this Replace the template engine with one that supports both async rendering and async extensions This also means rewriting portions of dashboard rendering using Promises also not a bad thing It also likely means some incompatibilities in the templates see below which is not ideal but probably acceptable Keep handlebars but add an async data gathering phase so we dont need to make async calls within template helpers This is attractive from an MVC standpoint but would really need a much more sophisticated editor which is probably much more expensive to write in terms of effort Async Template Engines nunjucks A Deep Dive into Asynchronous Templating is a great writeup dustjs marko The export commandimport screen is great for copying dashboards from one instance to another I use it all the time to copy dashboards out of production into a local instance to experiment on them But theres no way to update an existing dashboard from a complete definition you can only import it which creates a new board with a new URL Being able to update a complete dashboard definition in place from JSON would be fantastic for that workflow One of the things wed like to do is script the creation and maintenance of dashboards from other automated internal tooling To do that we need to extract a clean API client library so the frontend code needs to be split into modules Likely modules tesseracore stuff from srctscore registry log eventsource NOT properties or actions as those are UIspecific tesseramodel core model classes stripped of their rendering code tesseraclient HTTP API client for interacting with the server This will end up complicating the process of adding new dashboard items a bit as well need to separate the model object from the rendering code but a thats a good separation to have and b adding new dashboard items isnt that frequent a task weve got quite an extensive roster of them already 