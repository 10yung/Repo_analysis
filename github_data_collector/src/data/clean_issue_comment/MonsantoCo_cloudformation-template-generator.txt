 Also added deprecation warnings to versions of node that have been marked as deprecated by AWS Adds support for Cognito Adds very rudimentary codegen functionality Updates AWSAutoScalingAutoScalingGroup to support conditional AZs and health checks Adds missing ServiceName field to AWSECSService Fixes How can I make nested function calls like below FnSelect Token String StringBackedInt FnGetAZsAWSRegion Compilation error Error type mismatch found commonsantoarchcloudformationmodelFnGetAZs required commonsantoarchcloudformationmodelToken Seq commonsantoarchcloudformationmodelToken String val value FnSelect Token String StringBackedInt FnGetAZsAWSRegion OR FnFindInMap AMIId MappingRefawsRegionArch AMI AWSRegion FnFindInMap Token String MappingRefawsInstanceType Arch ParameterRefinstanceTypeParam Arch Error type mismatch found commonsantoarchcloudformationmodelFnFindInMap commonsantoarchcloudformationmodelToken String required commonsantoarchcloudformationmodelToken String ImageId FnFindInMap AMIId MappingRefawsRegionArch AMI AWSRegion FnFindInMap Token String MappingRefawsInstanceType Arch ParameterRefinstanceTypeParam Arch Ive got around lines in different files of library code built up The compile times are becoming significant around seconds on a new MacBook Pro Does anyone have advice about keeping these times down All the time is spent in the type checker An OptionSetting in an AWSElasticBeanstalkConfigurationTemplate has an optional ResourceName parameter which can be used to pass options to the underlying elements ie the Elastic Load Balancer For example yaml Resources ElasticBeanstalkTest Type AWSElasticBeanstalkConfigurationTemplate Properties Namespace awselblistener ResourceName AWSEBLoadBalancer OptionName ListenerProtocol Value TCP The commonsantoarchcloudformationmodelresourceOptionSetting class only supports the Namespace OptionName and Value parameters but not the optional ResourceName Currently DependsOn is spottily implemented in resources Since DependsOn should be possible for all resources I propose making it part of the Resource signature and dropping all occurrences in the individual resources Some discussion is here Is there any hope this library will make it to maven central any time soon All of our other dependencies are available there Im getting pushback trying to import this library because it requires a lot of churn in our build system Thanks The docs say value A value of any type that you want to compare So I believe that FnEquals should support more than just String arguments I havent tried to make this change and I cant quite resolve all of the types in my head but I think we should be able to do something along the lines of case class FnEquals T a Token T b Token T extends NestableAmazonFunctionCall String FnEquals type CFBackingType Token T Token T val arguments a b I suspect there will be troubles with the serialization though Announcement IdentityPool IdentityPoolRoleAttachment UserPool UserPoolClient UserPoolGroup UserPoolUser UserPoolUserToGroupAttachment 