This will fix issue Reviewablestart This change is img src height alignabsmiddle altReviewable Reviewableend The AlterTable statements seems to lack support for adding a new column to an existing table rust pub enum AlterTableOperation AddConstraintTableConstraint DropConstraint name Ident I want to use this crate as a dependency to implement my own keywords and operations It would be really nice to see a concrete example Maybe I missed something but I think placeholders are not yet supported and cannot be parsed I would like to ask if this could be added Ideally with few extensions than a regular parser In regular SQL queries only SELECT INSERT UPDATE queries can have placeholders But for my use case it would be great if also other statements can have them like CREATE VIEW which takes a query and that one could have placeholders because CREATE VIEW is specially processed in my case See for more information Common SQL databases support positionbased placeholders I would love it some way of having keywordbased ones could be added This then maps very well to how one can provide values with a dict structure instead of position Intervals are confusing This makes the interpretation of the individual fields more obvious Hi I am using sqlparser and rust version Sql Query SELECT empid FROM emp WHERE empid LIMIT binds Parse error ParserErrorExpected literal int found Used Dialect rust impl Dialect for AckoPostgresSqlDialect fn isidentifierstart self ch char bool ch a ch z ch A ch Z ch ch ch fn isidentifierpart self ch char bool ch a ch z ch A ch Z ch ch ch ch ch I am using sqlparser with rust version Query SELECT empid empdata FROM emp WHERE id AND dataid binds empname Error ParserErrorExpected an expression found Dialect Used rust impl Dialect for MyPostgresSqlDialect fn isidentifierstart self ch char bool ch a ch z ch A ch Z ch ch ch fn isidentifierpart self ch char bool ch a ch z ch A ch Z ch ch ch ch ch Even I am adding chars and into isidentifierpart then it is giving Error ParserErrorExpected end of statement found id Resubmission of which caused some compilation failures due to merge skew when it landed andygrove are you game to try this again Postgresql RETURNING sql INSERT INTO users firstname lastname VALUES Joe Cool RETURNING id UPDATE products SET price price WHERE price RETURNING name price AS newprice DELETE FROM products WHERE obsoletiondate today RETURNING rust ErrParserErrorExpected end of statement found RETURNING It would be nice to have a parseselect method that returns SQLSelect struct rather than have to deal with SQLQuery and SQLSetExpr for simple use cases