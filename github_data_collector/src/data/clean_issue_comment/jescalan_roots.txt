 Action required Switch to the new Greenkeeper now This version of Greenkeper will be shutdown on May st With Integrations firstclass bot support landed on GitHub and we ve rewritten Greenkeeper to take full advantage of it Simpler setup fewer pullrequests faster than everbrbrimg src Hello lovely humans chai just published its new version table tr th alignleft State th td Update rocket td tr tr th alignleft Dependency td td chai td tr tr th alignleft New version td td td tr tr th alignleft Type td td devDependency td tr table This version is not covered by your current version range Without accepting this pull request your project will work just like it did before There might be a bunch of new features fixes and perf improvements that the maintainers worked on for you though I recommend you look into these changes and try to get onto the latest version of chai Given that you have a decent test suite a passing build is a strong indicator that you can take advantage of these changes by merging the proposed change into your project Otherwise this branch is a great starting point for you to work on the update Do you have any ideas how I could improve these pull requests Did I report anything you think isn t right Are you unsure about how things are supposed to work There is a collection of frequently asked questions and while I m just a bot there is a group of people who are happy to teach me new things Let them know Good luck with your project sparkles You rock palmtree The new version differs by commits b b d codefix remove browser field code d ace codeUpdate supported node version badge in README FIX code ab fbad codeMerge pull request from chaijschoreuncommenttravisdeploycode ca f codechore uncomment travis linescode ff codeMerge pull request from lucasfcostarelease code fe b codechai code a codeMerge pull request from lucasfcostaremovelibbumpcode ba a codeRemove bump command to change libchaijscode codeMerge pull request from zetamorphassertnestedIncludeownIncludecode f adfd codefix PhantomJS x incompatibility code b codeAssert made documentation more descriptivecode e codetest added custom message test to negated nested deep ownincludecode codetest added message argument to negated nested deep own and deepOwnIncludecode bb codeassert interface add deepOwnInclude and notdeepOwnIncludecode b codeassert interface add ownInclude and notOwnIncludecode There are commits in total See the full diff Action required Switch to the new Greenkeeper now This version of Greenkeper will be shutdown on May st With Integrations firstclass bot support landed on GitHub and we ve rewritten Greenkeeper to take full advantage of it Simpler setup fewer pullrequests faster than everbrbrimg src Hello lovely humans npm just published its new version table tr th alignleft State th td Update rocket td tr tr th alignleft Dependency td td npm td tr tr th alignleft New version td td td tr tr th alignleft Type td td dependency td tr table This version is not covered by your current version range Without accepting this pull request your project will work just like it did before There might be a bunch of new features fixes and perf improvements that the maintainers worked on for you though I recommend you look into these changes and try to get onto the latest version of npm Given that you have a decent test suite a passing build is a strong indicator that you can take advantage of these changes by merging the proposed change into your project Otherwise this branch is a great starting point for you to work on the update Do you have any ideas how I could improve these pull requests Did I report anything you think isn t right Are you unsure about how things are supposed to work There is a collection of frequently asked questions and while I m just a bot there is a group of people who are happy to teach me new things Let them know Good luck with your project sparkles You rock palmtree GitHub Release pWowowowowow npm p pThis release marks months of hard work for the young scrappy and hungry CLI team and includes some changes weve been hoping to do for literally years npm takes npm a pretty big step forward significantly improving its performance in almost all common situations fixing a bunch of old errors due to the architecture and just generally making it more robust and faulttolerant It comes with changes to make life easier for people doing monorepos for users who want consistencysecurity guarantees and brings semver support to git dependencies See below for all the deetsp h Breaking Changesh ul li pExisting npm caches will no longer be used you will have to redownload any cached packages There is no tool or intention to reuse old caches a href li li pcodenpm install packagessubdircode will now create a symlink instead of a regular installation codefilepathtotarballtgzcode will not change only directories are symlinked a href li li pnpm will now scold you if you capitalize its name seriously it will fight youp li li pa href will codesavecode by default nowa Additionally codepackagelockjsoncode will be automatically created unless an codenpmshrinkwrapjsoncode exists a href li li pGit dependencies support semver through codeuserreposemver code a href a href a href li li pGit dependencies with codepreparecode scripts will have their codedevDependenciescode installed and codenpm installcode run in their directory before being packedp li li pcodenpm cachecode commands have been rewritten and dont really work anything like they did before a href li li pcodecachemincode and codecachemaxcode have been deprecated a href li li pRunning npm while offline will no longer insist on retrying network requests npm will now immediately fall back to cache if possible or fail a href li li ppackage locks no longer exclude codeoptionalDependenciescode that failed to build This means packagelockjson and npmshrinkwrapjson should now be crossplatform a href li li pIf you generated your package lock against registry A and you switch to registry B npm will now try to a href the packages from registry B instead of Aa If you want to use different registries for different packages use scopespecific registries codenpm config set myscoperegistry Different registries for different unscoped packages are not supported anymorep li li pShrinkwrap and packagelock no longer warn and exit without saving the lockfilep li li pLocal tarballs can now only be installed if they have a file extensions codetarcode codetargzcode or codetgzcodep li li pA new loglevel codenoticecode has been added and set as defaultp li li pOne binary to rule them all codeclijscode has been removed in favor of codebinnpmclijscode In case you were doing something with codeclijscode itself a href a href li li pStub file removed a href a href li li pThe extremely legacy codetokencode couchToken has been removed a href li ul h Feature Summaryh h Installer changesh ul li pA new standardised lockfile feature meant for crosspackagemanager compatibility codepackagelockjsoncode and a new format and semantics for shrinkwrap a href li li pcodesavecode is no longer necessary All installs will be saved by default You can prevent saving with codenosavecode Installing optional and dev deps is unchanged use codeDsavedevcode and codeOsaveoptionalcode if you want them saved into those fields instead Note that since npm npm will automatically update npmshrinkwrapjson when you save this will also be true for codepackagelockjsoncode a href li li pInstalling a package directory now ends up creating a symlink and does the Right Thing as far as saving to and installing from the package lock goes If you have a monorepo this might make things much easier to work with and probably a lot faster too gemoji aliasgrin fallbacksrc iosversion gemoji a href li li pProjectlevel toplevel codepreinstallcode scripts now run before anything else and can modify codenodemodulescode before the CLI reads itp li li pTwo new scripts have been added codeprepackcode and codepostpackcode which will run on both codenpm packcode and codenpm publishcode but NOT on codenpm installcode without arguments Combined with the fact that codeprepublishOnlycode is run before the tarball is generated this should round out the general story as far as putzing around with your code before publicationp li li pGit dependencies with codepreparecode scripts will now a href their devDependencies installed and their prepare script executeda as if under codenpm packcodep li li pGit dependencies now support semverbased matching codenpm install gitgithubcomnpmnpmsemver code a href classissuelink jsissuelink dataurl dataid dataerrortextFailed to load issue title datapermissiontextIssue title is private a a href classissuelink jsissuelink dataurl dataid dataerrortextFailed to load issue title datapermissiontextIssue title is private ap li li pcodenodegypcode now supports codenodegypcmdcode on Windows a href li li pnpm no longer blasts your screen with the whole installed tree Instead youll see a summary report of the install that is much kinder on your shell realestate Specially for large projects a href li ul precode npm install npm added removed updated and moved packages in s codepre ul li pcodeparseablecode and codejsoncode now work more consistently across various commands particularly codeinstallcode and codelscodep li li pIndentation is now a href and preserveda for codepackagejsoncode codepackagelockjsoncode and codenpmshrinkwrapjsoncode If the package lock is missing it will default to codepackagejsoncodes current indentationp li ul h Publishingh ul liNew a href will now include embothem codesha codea and codesha code checksums Versions of npm from onwards will use the strongest algorithm available to verify downloads a href ul h Cache Rewriteh pWeve been talking about rewriting the cache for a loooong time So here it is Lots of exciting stuff ahead The rewrite will also enable some exciting future features but well talk about those when theyre actually in the works a href is the main PR for all these changes Additional PRscommits are linked inlinep ul li pPackage metadata package download and caching infrastructure replacedp li li pIts a bit faster a href it will be noticeablea gemoji aliasthinking fallbacksrc iosversion gemojip li li pWith the shrinkwrap and packagelock changes tarballs will be looked up in the cache by content address and verified with itp li li pCorrupted cache entries will a href be removed and refetcheda on integrity check failurep li li pnpm CLI now supports tarball hashes with any hash function supported by Nodejs That is it will a href codesha code for tarballs from registries that send a codesha code checksum as the tarball hasha Publishing with codesha code is added by a href and may be backfilled by the registry for older entriesp li li pRemote tarball requests are now cached This means that even if youre missing the codeintegritycode field in your shrinkwrap or packagelock npm will be able to install from the cachep li li pDownloads for large packages are streamed in and out of disk npm is now able to install packages of any size without running out of memory Support for publishing them is pending due to registry limitationsp li li pa href fallbacktooffline modea npm will seamlessly use your cache if you are offline or if you lose access to a particular registry for example if you can no longer access a private npm repo or if your git host is unavailablep li li pA new codepreferofflinecode option will make npm skip any conditional requests checks for stale cache data and emonlyem hit the network if something is missing from the cachep li li pA new codepreferonlinecode option that will force npm to revalidate cached data with checks ignoring any staleness checks and refreshing the cache with revalidated fresh datap li li pA new codeofflinecode option will force npm to use the cache or exit It will error with an codeENOTCACHEDcode code if anything it tries to install isnt already in the cachep li li pA new codenpm cache verifycode command that will garbage collect your cache reducing disk usage for things you dont need handwave and will do full integrity verification on both the index and the content This is also hooked into codenpm doctorcode as part of its larger suite of checking toolsp li li pThe new cache is emveryem fault tolerant and supports concurrent accessp ul liMultiple npm processes will not corrupt a shared cacheli liCorrupted data will not be installed Data is checked on both insertion and extraction and treated as if it were missing if found to be corrupted I will literally bake you a cookie if you manage to corrupt the cache in such a way that you end up with the wrong data in your installation installer bugs notwithstandingli licodenpm cache clearcode is no longer useful for anything except clearing up disk spaceli ul li li pPackage metadata is cached separately per registry and package type you cant have package name conflicts between locallyinstalled packages private repo packages and public repo packages Identical tarball data will still be shareddeduplicated as long as their hashes matchp li li pHTTP cacherelated headers and features are fully lol supported for both metadata and tarball requests if you have your own registry you can define your own cache settings the CLI will obeyp li li pcodeprepublishOnlycode now runs embeforeem the tarball to publish is created after codepreparecode has runp li ul The new version differs by commits d code code d codedoc update changelog for npm code a da codedocs END OF AN ERA OF CHANGELOGS code c e codepkglock remove packageIntegrity field of doomcode c codelifecycle added prepack and postpack code db codecacache code d codepreinstall Runs in the final dest not the staging foldercode a fa codepacote more alwaysAuth logiccode f codepacote decode password before passing it oncode d bf codels Nothing is extraneous without a packagejsoncode da bbb codeinstall allow parseable output for nodes wo pathscode ea a codetest gentlyrmlinkedmodule Cleanup outputcode c coderemovedeps Update dependencies list even if were not savingcode ce c codepacote look for alwaysauth toocode ab c codepacote send usernamepassword auth through toocode There are commits in total See the full diff Action required Switch to the new Greenkeeper now This version of Greenkeper will be shutdown on May st With Integrations firstclass bot support landed on GitHub and we ve rewritten Greenkeeper to take full advantage of it Simpler setup fewer pullrequests faster than everbrbrimg src Hello lovely humans micromatch just published its new version table tr th alignleft State th td Update rocket td tr tr th alignleft Dependency td td micromatch td tr tr th alignleft New version td td td tr tr th alignleft Type td td dependency td tr table This version is not covered by your current version range Without accepting this pull request your project will work just like it did before There might be a bunch of new features fixes and perf improvements that the maintainers worked on for you though I recommend you look into these changes and try to get onto the latest version of micromatch Given that you have a decent test suite a passing build is a strong indicator that you can take advantage of these changes by merging the proposed change into your project Otherwise this branch is a great starting point for you to work on the update Do you have any ideas how I could improve these pull requests Did I report anything you think isn t right Are you unsure about how things are supposed to work There is a collection of frequently asked questions and while I m just a bot there is a group of people who are happy to teach me new things Let them know Good luck with your project sparkles You rock palmtree The new version differs by commits a c codeensure options is a plain objectcode b ab code code e c f codeMerge pull request from micromatchdevcode f coderun verb to generate readmecode c bc codeadd more unit testscode f codelintcode d f codeupdate benchmarkscode c ef codefix grammarcode ad d codeMerge branch master into devcode cfeaa codedocscode bf cc a codefix urlcode b dc codeMerge pull request from DianeLooneymastercode afd codeFixed the build badgecode d afb codeadds examplescode c e e b codeminor editscode There are commits in total See the full diff Action required Switch to the new Greenkeeper now This version of Greenkeper will be shutdown on May st With Integrations firstclass bot support landed on GitHub and we ve rewritten Greenkeeper to take full advantage of it Simpler setup fewer pullrequests faster than everbrbrimg src Hello lovely humans micromatch just published its new version table tr th alignleft State th td Update rocket td tr tr th alignleft Dependency td td micromatch td tr tr th alignleft New version td td td tr tr th alignleft Type td td dependency td tr table This version is not covered by your current version range Without accepting this pull request your project will work just like it did before There might be a bunch of new features fixes and perf improvements that the maintainers worked on for you though I recommend you look into these changes and try to get onto the latest version of micromatch Given that you have a decent test suite a passing build is a strong indicator that you can take advantage of these changes by merging the proposed change into your project Otherwise this branch is a great starting point for you to work on the update Do you have any ideas how I could improve these pull requests Did I report anything you think isn t right Are you unsure about how things are supposed to work There is a collection of frequently asked questions and while I m just a bot there is a group of people who are happy to teach me new things Let them know Good luck with your project sparkles You rock palmtree The new version differs by commits e c f codeMerge pull request from micromatchdevcode f coderun verb to generate readmecode c bc codeadd more unit testscode f codelintcode d f codeupdate benchmarkscode c ef codefix grammarcode ad d codeMerge branch master into devcode cfeaa codedocscode bf cc a codefix urlcode b dc codeMerge pull request from DianeLooneymastercode afd codeFixed the build badgecode d afb codeadds examplescode c e e b codeminor editscode f bb codemove compose to main filecode e de coderemove dead code minor reorgcode There are commits in total See the full diff Action required Switch to the new Greenkeeper now This version of Greenkeper will be shutdown on May st With Integrations firstclass bot support landed on GitHub and we ve rewritten Greenkeeper to take full advantage of it Simpler setup fewer pullrequests faster than everbrbrimg src Hello lovely humans sinon just published its new version table tr th alignleft State th td Update rocket td tr tr th alignleft Dependency td td sinon td tr tr th alignleft New version td td td tr tr th alignleft Type td td devDependency td tr table This version is not covered by your current version range Without accepting this pull request your project will work just like it did before There might be a bunch of new features fixes and perf improvements that the maintainers worked on for you though I recommend you look into these changes and try to get onto the latest version of sinon Given that you have a decent test suite a passing build is a strong indicator that you can take advantage of these changes by merging the proposed change into your project Otherwise this branch is a great starting point for you to work on the update Do you have any ideas how I could improve these pull requests Did I report anything you think isn t right Are you unsure about how things are supposed to work There is a collection of frequently asked questions and while I m just a bot there is a group of people who are happy to teach me new things Let them know Good luck with your project sparkles You rock palmtree GitHub Release ul liFix failing sandboxresetBehavior a href classissuelink jsissuelink dataurl dataid dataerrortextFailed to load issue title datapermissiontextIssue title is private ali liFix restoring getterssettersvalues for previously unexisting props a href classissuelink jsissuelink dataurl dataid dataerrortextFailed to load issue title datapermissiontextIssue title is private ali liCalled in order takes callCount into account Closes a href classissuelink jsissuelink dataurl dataid dataerrortextFailed to load issue title datapermissiontextIssue title is private ali ul The new version differs by commits ahead by behind by d codeUpdate docschangelogmd and set new release id in docsconfigymlcode e bb codeAdd release documentation for v code abc code code e abe codeUpdate Changelogtxt and AUTHORS for new releasecode f e codeMerge pull request from lucasfcostacalledinorderconsiderscallcountcode af a codeMerge pull request from fearphageremovetryfromtestscode c d b codeMerge pull request from fatso failingsandboxresetcode bf a codeFix failing sandboxresetBehaviorcode be e b codeAdd failing tests for sandboxresetcode fe aa codeAdd code snippet for createStubInstance code e c a codeadded rule to prevent trycatch usage in testscode a dc codeswitched from trycatch to assertexceptioncode d dac codeAdd downloads per month banner to READMEmdcode e add codeAdd sitedocs to eslintignorecode ebe da codeAdd documentation for has matcher on embedded objects code There are commits in total See the full diff Action required Switch to the new Greenkeeper now This version of Greenkeper will be shutdown on May st With Integrations firstclass bot support landed on GitHub and we ve rewritten Greenkeeper to take full advantage of it Simpler setup fewer pullrequests faster than everbrbrimg src Hello lovely humans chai just published its new version table tr th alignleft State th td Update rocket td tr tr th alignleft Dependency td td chai td tr tr th alignleft New version td td td tr tr th alignleft Type td td devDependency td tr table This version is not covered by your current version range Without accepting this pull request your project will work just like it did before There might be a bunch of new features fixes and perf improvements that the maintainers worked on for you though I recommend you look into these changes and try to get onto the latest version of chai Given that you have a decent test suite a passing build is a strong indicator that you can take advantage of these changes by merging the proposed change into your project Otherwise this branch is a great starting point for you to work on the update Do you have any ideas how I could improve these pull requests Did I report anything you think isn t right Are you unsure about how things are supposed to work There is a collection of frequently asked questions and while I m just a bot there is a group of people who are happy to teach me new things Let them know Good luck with your project sparkles You rock palmtree The new version differs by commits ab fbad codeMerge pull request from chaijschoreuncommenttravisdeploycode ca f codechore uncomment travis linescode ff codeMerge pull request from lucasfcostarelease code fe b codechai code a codeMerge pull request from lucasfcostaremovelibbumpcode ba a codeRemove bump command to change libchaijscode codeMerge pull request from zetamorphassertnestedIncludeownIncludecode f adfd codefix PhantomJS x incompatibility code b codeAssert made documentation more descriptivecode e codetest added custom message test to negated nested deep ownincludecode codetest added message argument to negated nested deep own and deepOwnIncludecode bb codeassert interface add deepOwnInclude and notdeepOwnIncludecode b codeassert interface add ownInclude and notOwnIncludecode d fa codeassert interface add deepNestedInclude and notDeepNestedIncludecode b codeassert interface add nestedInclude and notNestedIncludecode There are commits in total See the full diff Action required Switch to the new Greenkeeper now This version of Greenkeper will be shutdown on May st With Integrations firstclass bot support landed on GitHub and we ve rewritten Greenkeeper to take full advantage of it Simpler setup fewer pullrequests faster than everbrbrimg src Hello lovely humans mocha just published its new version table tr th alignleft State th td Update rocket td tr tr th alignleft Dependency td td mocha td tr tr th alignleft New version td td td tr tr th alignleft Type td td devDependency td tr table This version is not covered by your current version range Without accepting this pull request your project will work just like it did before There might be a bunch of new features fixes and perf improvements that the maintainers worked on for you though I recommend you look into these changes and try to get onto the latest version of mocha Given that you have a decent test suite a passing build is a strong indicator that you can take advantage of these changes by merging the proposed change into your project Otherwise this branch is a great starting point for you to work on the update Do you have any ideas how I could improve these pull requests Did I report anything you think isn t right Are you unsure about how things are supposed to work There is a collection of frequently asked questions and while I m just a bot there is a group of people who are happy to teach me new things Let them know Good luck with your project sparkles You rock palmtree GitHub Release h h h gemoji aliasbug fallbacksrc iosversion gemoji Fixesh ul lia href Remove call to deprecated ostmpDir a href lia href Eagerly set processexitCode a href ul h gemoji aliasnutandbolt fallbacksrc iosversion gemoji Otherh ul lia href Move linting into an npm script a href ul Action required Switch to the new Greenkeeper now This version of Greenkeper will be shutdown on May st With Integrations firstclass bot support landed on GitHub and we ve rewritten Greenkeeper to take full advantage of it Simpler setup fewer pullrequests faster than everbrbrimg src Hello lovely humans sinon just published its new version table tr th alignleft State th td Update rocket td tr tr th alignleft Dependency td td sinon td tr tr th alignleft New version td td td tr tr th alignleft Type td td devDependency td tr table This version is not covered by your current version range Without accepting this pull request your project will work just like it did before There might be a bunch of new features fixes and perf improvements that the maintainers worked on for you though I recommend you look into these changes and try to get onto the latest version of sinon Given that you have a decent test suite a passing build is a strong indicator that you can take advantage of these changes by merging the proposed change into your project Otherwise this branch is a great starting point for you to work on the update Do you have any ideas how I could improve these pull requests Did I report anything you think isn t right Are you unsure about how things are supposed to work There is a collection of frequently asked questions and while I m just a bot there is a group of people who are happy to teach me new things Let them know Good luck with your project sparkles You rock palmtree GitHub Release ul liMake calledAfter symetric with calledBefore a href classissuelink jsissuelink dataurl dataid dataerrortextFailed to load issue title datapermissiontextIssue title is private ali ul The new version differs by commits ahead by behind by f c codeUpdate docschangelogmd and set new release id in docsconfigymlcode bf f codeAdd release documentation for v code eee code code dc codeUpdate Changelogtxt and AUTHORS for new releasecode c cdc codeMerge pull request from lucasfcostasimmetriccallAftercode cc codeMerge pull request from mroderickremoveissue testcode e d codeRemove test for issue code d be codeUpdate docschangelogmd and set new release id in docsconfigymlcode d b b codeAdd release documentation for v code d code code e codeUpdate Changelogtxt and AUTHORS for new releasecode dc codeMerge pull request from lucasfcostarefactorsandboxstubcode fb cf codeMerge pull request from mroderickstyleimprovementscode bf codeMerge pull request from mroderickaddrelatedlibrariestohowtopagecode de f codeForce fenced code blocks to use smaller fontcode There are commits in total See the full diff Action required Switch to the new Greenkeeper now This version of Greenkeper will be shutdown on May st With Integrations firstclass bot support landed on GitHub and we ve rewritten Greenkeeper to take full advantage of it Simpler setup fewer pullrequests faster than everbrbrimg src Hello lovely humans sinon just published its new version table tr th alignleft State th td Update rocket td tr tr th alignleft Dependency td td sinon td tr tr th alignleft New version td td td tr tr th alignleft Type td td devDependency td tr table This version is not covered by your current version range Without accepting this pull request your project will work just like it did before There might be a bunch of new features fixes and perf improvements that the maintainers worked on for you though I recommend you look into these changes and try to get onto the latest version of sinon Given that you have a decent test suite a passing build is a strong indicator that you can take advantage of these changes by merging the proposed change into your project Otherwise this branch is a great starting point for you to work on the update Do you have any ideas how I could improve these pull requests Did I report anything you think isn t right Are you unsure about how things are supposed to work There is a collection of frequently asked questions and while I m just a bot there is a group of people who are happy to teach me new things Let them know Good luck with your project sparkles You rock palmtree GitHub Release ul liAllow stubbing of accessors with and without sandbox a href classissuelink jsissuelink dataurl dataid dataerrortextFailed to load issue title datapermissiontextIssue title is private ali liadd throwsArgindex to stubs a href classissuelink jsissuelink dataurl dataid dataerrortextFailed to load issue title datapermissiontextIssue title is private ali liFix forEach requires this argument a href classissuelink jsissuelink dataurl dataid dataerrortextFailed to load issue title datapermissiontextIssue title is private ali liOnly reset history when calling resetHistoryli ul The new version differs by commits ahead by behind by d be codeUpdate docschangelogmd and set new release id in docsconfigymlcode d b b codeAdd release documentation for v code d code code e codeUpdate Changelogtxt and AUTHORS for new releasecode dc codeMerge pull request from lucasfcostarefactorsandboxstubcode fb cf codeMerge pull request from mroderickstyleimprovementscode bf codeMerge pull request from mroderickaddrelatedlibrariestohowtopagecode de f codeForce fenced code blocks to use smaller fontcode e codeImprove styling of h code fd b codeRemove deprecation warning from tests for old APIcode e fd codeAdd missing final dot to sandbox docscode ea e codeAdd docs for stubvaluecode c fb codeDeprecate stubbing sandbox value in favor of value behaviorcode dbefd codeName restore function on stubNonFunctionPropertycode fe b ac codeAdd related libraries section to How To pagecode There are commits in total See the full diff Action required Switch to the new Greenkeeper now This version of Greenkeper will be shutdown on May st With Integrations firstclass bot support landed on GitHub and we ve rewritten Greenkeeper to take full advantage of it Simpler setup fewer pullrequests faster than everbrbrimg src Hello lovely humans coffeescript just published its new version table tr th alignleft State th td Update rocket td tr tr th alignleft Dependency td td coffeescript td tr tr th alignleft New version td td td tr tr th alignleft Type td td dependency td tr table This version is not covered by your current version range Without accepting this pull request your project will work just like it did before There might be a bunch of new features fixes and perf improvements that the maintainers worked on for you though I recommend you look into these changes and try to get onto the latest version of coffeescript Given that you have a decent test suite a passing build is a strong indicator that you can take advantage of these changes by merging the proposed change into your project Otherwise this branch is a great starting point for you to work on the update Do you have any ideas how I could improve these pull requests Did I report anything you think isn t right Are you unsure about how things are supposed to work There is a collection of frequently asked questions and while I m just a bot there is a group of people who are happy to teach me new things Let them know Good luck with your project sparkles You rock palmtree The new version differs by commits f e code missing updated outputcode f f code code e fa d codeFix chained calls incorrectly wrapping enclosing implicit objects code c codeFix Correctly outdent ternary followed by method call code cb a codereturn and export default can now accept implicit objects code ac b b codeIss unicode code point escapes cleanup code b c f codeFix Unicode code point escapes code bfce codeFix parenthesized conditions in ifelse assignment code ff e a codefix future reserved words test code da d codeFix broken links update redirected links code fecdbac codeA particular REPL test is broken in Node because of a regression that was fixed in Node just disable the test for Node Fixes code e a codeMerge pull request from GeoffreyBoothtestsexitcodecode faf d codecake buildbrowser should just assemble the browser build not also test it add cake buildbrowserfull to additionally run the testscode d d c codeIf the tests fail return a nonzero exit codecode a b codeMerge branch master of githubcomjashkenascoffeescriptcode There are commits in total See the full diff 