Hi Testing out and kicking the tires of OData gave me an idea of how OData operates I think like this OData sits between my endpoint controller and client facing endpoint OData uri route OData want to operate on data context to do all of its magic like select and so on Eg Client OData route Controller OData magic Result to client My first question is if I got this right My second question is if there is a way to intercept operations by OData say that I want to intercept a skip or select before it happens and make alternative or complementary actions Thanks OData Web Api Client throws exception in case of passing null value to property of ICollectionT during executing action Although my EdmModel supports nullvalue Assemblies affected Which assemblies and versions are known to be affected eg MicrosoftODataClient Reproduce steps Call service action and pass object with nullvalue property Expected result Null values allowed Actual result Exception is thrown Additional detail Node NameCollection has no attribute Nullable so it is nullable by default ComplexType NameMyItem ComplexType ComplexType NameMyServiceModel BaseTypeBaseServiceModel Property NameCollection TypeCollectionMyItem ComplexType Exception has the following info Timestamp Message The value of the property Collection is null Properties that are a collection type of primitive or complex types cannot be null Level Error Exception SystemInvalidOperationException The value of the property Collection is null Properties that are a collection type of primitive or complex types cannot be null at MicrosoftODataClientWebUtilValidateCollectionType collectionItemType Object propertyValue String propertyName Boolean isDynamicProperty at MicrosoftODataClientODataPropertyConverterCreateODataResourceSetWrapperForComplexCollectionType collectionItemType String propertyName Object value HashSet visitedComplexTypeObjects Boolean isDynamicProperty Boolean setTypeAnnotation at MicrosoftODataClientODataPropertyConverterCreateODataComplexCollectionPropertyResourceSetClientPropertyAnnotation property Object propertyValue String serverTypeName HashSet visitedComplexTypeObjects at MicrosoftODataClientODataPropertyConverterTryConvertPropertyToResourceOrResourceSetClientPropertyAnnotation property Object propertyValue String serverTypeName HashSet visitedComplexTypeObjects ODataItemWrapper odataItem at MicrosoftODataClientODataPropertyConverterPopulateNestedComplexPropertiesObject resource String serverTypeName IEnumerable properties HashSet visitedComplexTypeObjects at MicrosoftODataClientODataPropertyConverterCreateODataResourceWrapperType entityType Object value ClientPropertyAnnotation properties at MicrosoftODataClientSerializerWriteBodyOperationParametersList operationParameters ODataRequestMessageWrapper requestMessage at MicrosoftODataClientDataServiceRequestCreateExecuteResultObject source DataServiceContext context AsyncCallback callback Object state String method at MicrosoftODataClientDataServiceContextInnerBeginExecute TElement Uri requestUri AsyncCallback callback Object state String httpMethod String method Nullable singleResult OperationParameter operationParameters at MicrosoftODataClientDataServiceContextBeginExecute TElement Uri requestUri AsyncCallback callback Object state String httpMethod Boolean singleResult OperationParameter operationParameters at MicrosoftODataClientDataServiceActionQuerySingle BeginGetValueAsyncCallback callback Object state at SystemThreadingTasksTaskFactory FromAsyncImplFunc beginMethod Func endFunction Action endAction Object state TaskCreationOptions creationOptions at SystemThreadingTasksTaskFactory FromAsyncFunc beginMethod Func endMethod Object state markdownlintdisable MD MD When defining a specific odata route on a controller all proper formatting is removed from the result Assemblies affected OData WebAPI on NET Core Reproduce steps See this repo Check the StudentsControllercs and note the route RouteodataStudents When running the odata endpoint the following result is returned id c eb a f bee e e nameCody Allenscore id a f b b a c abeef a nameTodd Ostermeierscore idbc e cac c a ddb f a nameViral Pandyascore But if you change RouteodataStudents to lets say RouteapiStudents the result is correct odatacontext AllenScore Id c c c b e a e aNameTodd OstermeierScore Id d a e d bb c cf a b da NameViral PandyaScore The issue is that I need to be able to set the route attribute on my controllers otherwise Swashbuckle wont be able to find these controllers markdownlintdisable MD MD I have been playing around with OData actions and functions As documented I can add parameters to an action using the Parameter method but it forces me to declare every single parameter which does not work well if the action acts on an opentype Adding extra parameters to the request leads to a null ODataActionParameter The ugly workaround I have found is to create an opentype property bag complextype and add a parameter of this type But this does not align well with the opentype semantic where all properties are flatten Assemblies affected MicrosoftAspNetCoreOData Reproduce steps Model var myEntityAction myEntityCollectionActiondosomething myEntityActionParameterargRequired controller public async Task DoSomethingAsyncODataActionParameters actionParameters request body arghello otherarg world Expected result the method in the controller gets an instance of ODataActionParameters that contains all properties including those that are not declared in the model Actual result the ODataActionParameters is null Additional detail markdownlintdisable MD MD Im upgrading OData and EF Core to and After doing so im seeing new errors when trying to get a groupBy working The same request did work before I wasnt sure if i should open an issue here or on EF Core github If im wrong feel free to tell me and ill move it The request that fails for me is applygroupbyActif Assemblies affected MicrosoftAspNetCoreOData MicrosoftEntityFrameworkCore Reproduce steps Get a project running with EF Core and OData Expected result The result of the groupBy Actual result Exception is thrown An unhandled exception has occurred while executing the request SystemInvalidCastException Unable to cast object of type SystemBoolean to type MicrosoftAspNetODataQueryExpressionsGroupByWrapper at getNestedValueObject at SystemTextJsonJsonPropertyInfoCommon GetValueAsObjectObject obj at SystemTextJsonJsonSerializerWriteUtf JsonWriter writer Int originalWriterDepth Int flushThreshold JsonSerializerOptions options WriteStack state at SystemTextJsonJsonSerializerWriteAsyncCoreStream utf Json Object value Type inputType JsonSerializerOptions options CancellationToken cancellationToken at MicrosoftAspNetCoreMvcFormattersSystemTextJsonOutputFormatterWriteResponseBodyAsyncOutputFormatterWriteContext context Encoding selectedEncoding at MicrosoftAspNetCoreMvcFormattersSystemTextJsonOutputFormatterWriteResponseBodyAsyncOutputFormatterWriteContext context Encoding selectedEncoding at MicrosoftAspNetCoreMvcInfrastructureObjectResultExecutorExecuteAsyncEnumerableActionContext context ObjectResult result IAsyncEnumerable asyncEnumerable at MicrosoftAspNetCoreMvcInfrastructureResourceInvokerInvokeNextResultFilterAsyncgAwaited TFilterTFilterAsync ResourceInvoker invoker Task lastTask State next Scope scope Object state Boolean isCompleted at MicrosoftAspNetCoreMvcInfrastructureResourceInvokerRethrowResultExecutedContextSealed context at MicrosoftAspNetCoreMvcInfrastructureResourceInvokerResultNext TFilterTFilterAsync State next Scope scope Object state Boolean isCompleted at MicrosoftAspNetCoreMvcInfrastructureResourceInvokerInvokeResultFiltersgAwaited ResourceInvoker invoker Task lastTask State next Scope scope Object state Boolean isCompleted at MicrosoftAspNetCoreMvcInfrastructureResourceInvokerInvokeNextResourceFiltergAwaited ResourceInvoker invoker Task lastTask State next Scope scope Object state Boolean isCompleted at MicrosoftAspNetCoreMvcInfrastructureResourceInvokerRethrowResourceExecutedContextSealed context at MicrosoftAspNetCoreMvcInfrastructureResourceInvokerNextState next Scope scope Object state Boolean isCompleted at MicrosoftAspNetCoreMvcInfrastructureResourceInvokerInvokeFilterPipelineAsyncgAwaited ResourceInvoker invoker Task lastTask State next Scope scope Object state Boolean isCompleted at MicrosoftAspNetCoreMvcInfrastructureResourceInvokerInvokeAsyncgAwaited ResourceInvoker invoker Task task IDisposable scope markdownlintdisable MD MD Expand of the propertyproperties on the subobject is failing if more than one object is included in the expand directive on the first level Assemblies affected MicrosoftAspNetCoreOData MicrosoftEntityFrameworkCoreSqlServer Reproduce steps Send HTTP get request to the following URL Expected result Service should render object with two subobjects and expand collection property in the respected subobject Actual result Application failing with exception SystemArgumentOutOfRangeException Index was out of range Must be nonnegative and less than the size of the collection Parameter index Additional detail following requests are working as expected you can find source code for the sample project in markdownlintdisable MD MD I found an issue with using multiple expand clauses This scenario was previously working in net core Assemblies affected MicrosoftAspNetCoreOData MicrosoftEntityFrameworkCoreSqlServer Reproduce steps To demonstrate this issue I stoodup an environment for testing As an example getting data from one to two tables these queries work As soon as you try to add a third or fourth table using any of the below examples you ll get an HTTP error Expected result I would expect this to behave as it did in net core where it populate arrays for the expanded tables Actual result HTTP Error Application Insights logs the exception like so Exception type SystemArgumentOutOfRangeException Exception message Index was out of range Must be nonnegative and less than the size of the collection Parameter index Exception Stack Trace EfCoreODataIssuetxt Additional detail The source code for this projectexample can be found at You can use the solution filter I added some unit tests that illustrate the issue invoking both a standard EF core query as well as the relevant OData query These tests can be found here If it makes it easier I have a docker image for the SQL database docker pull ikemtznrsrxemployeessqllatest For context and to help illustrate things a bit here is my SQL database diagram EfCoreODataIssue It would appear that the issues discussed in have broken applygroupby and friends when using net coreefcore but hopefully someone here canhas come up with a workaround Was testing applygroupby not part of the release process for net core or is really not ready for prime time yet on net core even though it is released if not it might be good to put up a list of what works and doesnt work on net core somewhere so people know what to expect If I do I get SystemInvalidOperationException Processing of the LINQ expression GroupByShaperExpression KeySelector new GroupByWrapper GroupByContainer new LastInChain Name ProvModel Value oProvModel ElementSelectorEntityShaperExpression EntityType OntDTO ValueBufferExpression ProjectionBindingExpression EmptyProjectionMember IsNullable False by RelationalProjectionBindingExpressionVisitor failed This may indicate either a bug or a limitation in EF Core See for more detailed information at MicrosoftEntityFrameworkCoreQueryInternalRelationalProjectionBindingExpressionVisitorVisitExtensionExpression extensionExpression at SystemLinqExpressionsExpressionAcceptExpressionVisitor visitor at MicrosoftEntityFrameworkCoreQueryInternalRelationalProjectionBindingExpressionVisitorVisitExpression expression at SystemLinqExpressionsExpressionVisitorVisitUnaryUnaryExpression node at SystemLinqExpressionsUnaryExpressionAcceptExpressionVisitor visitor at MicrosoftEntityFrameworkCoreQueryInternalRelationalProjectionBindingExpressionVisitorVisitExpression expression at SystemDynamicUtilsExpressionVisitorUtilsVisitArgumentsExpressionVisitor visitor IArgumentProvider nodes at SystemLinqExpressionsExpressionVisitorVisitMethodCallMethodCallExpression node at SystemLinqExpressionsMethodCallExpressionAcceptExpressionVisitor visitor at MicrosoftEntityFrameworkCoreQueryInternalRelationalProjectionBindingExpressionVisitorVisitExpression expression at SystemLinqExpressionsExpressionVisitorVisitUnaryUnaryExpression node at SystemLinqExpressionsUnaryExpressionAcceptExpressionVisitor visitor at MicrosoftEntityFrameworkCoreQueryInternalRelationalProjectionBindingExpressionVisitorVisitExpression expression at MicrosoftEntityFrameworkCoreQueryInternalRelationalProjectionBindingExpressionVisitorVisitMemberAssignmentMemberAssignment memberAssignment at SystemLinqExpressionsExpressionVisitorVisitMemberBindingMemberBinding node at MicrosoftEntityFrameworkCoreQueryInternalRelationalProjectionBindingExpressionVisitorVisitMemberInitMemberInitExpression memberInitExpression at SystemLinqExpressionsMemberInitExpressionAcceptExpressionVisitor visitor at MicrosoftEntityFrameworkCoreQueryInternalRelationalProjectionBindingExpressionVisitorVisitExpression expression at MicrosoftEntityFrameworkCoreQueryInternalRelationalProjectionBindingExpressionVisitorVisitMemberAssignmentMemberAssignment memberAssignment at SystemLinqExpressionsExpressionVisitorVisitMemberBindingMemberBinding node at MicrosoftEntityFrameworkCoreQueryInternalRelationalProjectionBindingExpressionVisitorVisitMemberInitMemberInitExpression memberInitExpression at SystemLinqExpressionsMemberInitExpressionAcceptExpressionVisitor visitor at MicrosoftEntityFrameworkCoreQueryInternalRelationalProjectionBindingExpressionVisitorVisitExpression expression at MicrosoftEntityFrameworkCoreQueryInternalRelationalProjectionBindingExpressionVisitorTranslateSelectExpression selectExpression Expression expression at MicrosoftEntityFrameworkCoreQueryRelationalQueryableMethodTranslatingExpressionVisitorTranslateSelectShapedQueryExpression source LambdaExpression selector at MicrosoftEntityFrameworkCoreQueryQueryableMethodTranslatingExpressionVisitorVisitMethodCallMethodCallExpression methodCallExpression at MicrosoftEntityFrameworkCoreQueryRelationalQueryableMethodTranslatingExpressionVisitorVisitMethodCallMethodCallExpression methodCallExpression at SystemLinqExpressionsMethodCallExpressionAcceptExpressionVisitor visitor at MicrosoftEntityFrameworkCoreQueryQueryCompilationContextCreateQueryExecutor TResult Expression query at MicrosoftEntityFrameworkCoreStorageDatabaseCompileQuery TResult Expression query Boolean async at MicrosoftEntityFrameworkCoreQueryInternalQueryCompilerCompileQueryCore TResult IDatabase database Expression query IModel model Boolean async at MicrosoftEntityFrameworkCoreQueryInternalQueryCompilercDisplayClass ExecuteAsyncb at MicrosoftEntityFrameworkCoreQueryInternalCompiledQueryCacheGetOrAddQueryCore TFunc Object cacheKey Func compiler at MicrosoftEntityFrameworkCoreQueryInternalCompiledQueryCacheGetOrAddQuery TResult Object cacheKey Func compiler at MicrosoftEntityFrameworkCoreQueryInternalQueryCompilerExecuteAsync TResult Expression query CancellationToken cancellationToken at MicrosoftEntityFrameworkCoreQueryInternalEntityQueryProviderExecuteAsync TResult Expression expression CancellationToken cancellationToken at MicrosoftEntityFrameworkCoreQueryInternalEntityQueryable GetAsyncEnumeratorCancellationToken cancellationToken at MicrosoftAspNetCoreMvcInfrastructureAsyncEnumerableReaderReadInternal T IAsyncEnumerable value at MicrosoftAspNetCoreMvcInfrastructureObjectResultExecutorExecuteAsyncEnumerableActionContext context ObjectResult result IAsyncEnumerable asyncEnumerable at MicrosoftAspNetCoreMvcInfrastructureResourceInvokerInvokeNextResultFilterAsyncgAwaited TFilterTFilterAsync ResourceInvoker invoker Task lastTask State next Scope scope Object state Boolean isCompleted at MicrosoftAspNetCoreMvcInfrastructureResourceInvokerRethrowResultExecutedContextSealed context at MicrosoftAspNetCoreMvcInfrastructureResourceInvokerResultNext TFilterTFilterAsync State next Scope scope Object state Boolean isCompleted at MicrosoftAspNetCoreMvcInfrastructureResourceInvokerInvokeResultFilters End of stack trace from previous location where exception was thrown at MicrosoftAspNetCoreMvcInfrastructureResourceInvokerInvokeNextResourceFiltergAwaited ResourceInvoker invoker Task lastTask State next Scope scope Object state Boolean isCompleted at MicrosoftAspNetCoreMvcInfrastructureResourceInvokerRethrowResourceExecutedContextSealed context at MicrosoftAspNetCoreMvcInfrastructureResourceInvokerNextState next Scope scope Object state Boolean isCompleted at MicrosoftAspNetCoreMvcInfrastructureResourceInvokerInvokeFilterPipelineAsync End of stack trace from previous location where exception was thrown at MicrosoftAspNetCoreMvcInfrastructureResourceInvokerInvokeAsyncgLogged ResourceInvoker invoker at MicrosoftAspNetCoreBuilderRouterMiddlewareInvokeHttpContext httpContext at MicrosoftAspNetCoreBuilderExtensionsMapMiddlewareInvokeHttpContext context at MicrosoftAspNetCoreAuthorizationAuthorizationMiddlewareInvokeHttpContext context at MicrosoftAspNetCoreAuthenticationAuthenticationMiddlewareInvokeHttpContext context at MicrosoftAspNetCoreDiagnosticsDeveloperExceptionPageMiddlewareInvokeHttpContext context markdownlintdisable MD MD Issues This pull request fixes issue Description When requesting an entity collection with a simple expand of a many to one relation performance is killed when the model has many entities and actions defined Checklist Uncheck if it is not completed Test cases added Build and test with oneclick build and test script passed The ticket has a exported project to reproduce the issue Additional work necessary The pull request has a static cache with has as a key the model The cache will be holding a reference to the model wich might be a memory problem if there is an escenario where models are create and discarded often An option could be to use a hash of the model or any other unique identity that the model could have markdownlintdisable MD MD Issues This pull request fixes issue Description An error is observed when an entity is created by an insert request and then referenced in a subsequent add link create ref request in the same batch This behaviour is observed on an OData service created using MicrosoftAspNetCoreOData or lower The behaviour is not observed against an equivalent service created using MicrosoftAspNetOData The bug seems to have been introduced by the addition of an extension method GetODataContentIdMapping in the MicrosoftAspNetCoreODataExtensions namespace that returns null instead of the expected dictionary comprising of ContentID to Location mapping An extension method with a similar signature is defined in the MicrosoftAspNetCoreODataBatch namespace where it returns the expected value The inability to fetch the ContentID to Location mapping results into the create ref action method in the controller being sent the prefixed request identifier as the Uri instead of the resource location By examining the logic in MicrosoftAspNetOData codebase and based on the fact that the ContentID to Location mapping is currently applicable to batch requests the GetODataContentIdMapping in MicrosoftAspNetCoreODataExtensions namespace is dropped to allow MicrosoftAspNetCoreODataBatch namespace provide the implementation of GetODataContentIdMapping required for use within the ODataInputFormatter class This change fixes the error A related fix was made to a property ODataContentIdMapping in the WebApiRequestMessage adapter class that also return null instead of the ContentID to Location mapping Checklist Uncheck if it is not completed Test cases added Build and test with oneclick build and test script passed Additional work necessary If documentation update is needed please add Docs Needed label to the issue and provide details about the required document change in the issue 