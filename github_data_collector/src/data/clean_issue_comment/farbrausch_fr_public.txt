 Use Linuxstyle public symbol names sym instead of symblah Rewrite inline assembly in v mplayercpp as C or use GNUstyle inline assembly define stdcall away when WIN isnt defined Disable Ronan by default but can be switched on if you want Emulate cdecl because stdcall isnt a thing on Linux Might work on FreeBSD as well Example playback code here Hi I would like to test the GLES renderer but it seems to be quite outdated or so Does anybody know how to get it to work I run into problems like this werkkzeug gles tbind Or this werkkzeug gles shadercreator I tried to make some sense out of the errors but I dont know what to do with them It looks to me that there are only HLSL shaders generated so the C code must be rewritten for GLSL Hi just tried to build this but I ran into a few problems It took a bit to figure it out so the next person will have it easier First generate the solutionproject files normally Drag drop the generated G frpublic altonawz wz werkkzeug werkkzeug sln on Visual Studio Either Visual Studio retargets it automatically or if not simply right click on Solution werkkzeug and click on Retarget Now open basetypeshpp Rewrite this define sCONFIGNATIVEINT int w define sCONFIGINT int w to this because w doesnt exist in Visual Studio define sCONFIGNATIVEINT int define sCONFIGINT int You need the DX or DX headers and libs which can be installed by running this The DirectX setup will error with some short error message but all the lib files and header includes are saved on disc Now we actually need to tell Visual Studio where to find the headerslibs Add to include search path C Program Files x Microsoft DirectX SDK June Include C Program Files x Microsoft Visual Studio VC include C Program Files x Windows Kits Include ucrt C Program Files x Windows Kits Include um C Program Files x Windows Kits Include shared Add the lib search path only needed for werkkzeug project C Program Files x Microsoft DirectX SDK June Lib x C Program Files x Windows Kits Lib ucrt x First one was called but fails it needs win not Win case sensitive yasm Xvc f Win rnasm pnasm o releasedx Win incbinobj incbinasm yasm Xvc f win rnasm pnasm o releasedx Win incbinobj incbinasm Add legacystdiodefinitionslib to werkkzeug project The last problem is that Visual Studio doesnt allow overwriting the new operator easily anymore But it works again by defining these two defines for every project just select all rightclick on options CC Preprocessor and set those two defines PLACEMENTNEWINLINE PLACEMENTVECNEWINLINE Otherwise the project will compile but wont link because two functions already have a body I guess this also works with Visual Studio but I didnt test it yet Have fun xd Hmmm you said that GUI doesnt work on linux but it works for me The only problem is makeproject Hey if you have it pleaseeeeeeeeeeeeeeeeeee gimme that These patches remove a few oversights and bugs that prevent building asc et al on POSIX platforms They also add a cmake script greatly increasing portability Untested on anything else than Linuxamd Scanned with three anti virus applications Two of them have identified threats on three files frpublicmasterwerkkzeug datadebrisreleasefr debrisexe frpublicmasterwerkkzeug datadebrisreleasefr debriszip frpublicmasterv binlibexampletinyplayerexe The third anti virus confirms tinyplayerexe It seems a problem affect all k files generated by werkkzeug I also tried with the originals files from this repository The result is playerdemoexe give something like debris k or simple example k after clicking Demo on this image the parameters doesn t matter it also does the same error in full screen Hi there is there any plans to do that and is it difficult to do I could help to do it too and even donate something Many people want it to be playable on their mobile phones macs and linuxes Is it possible that you could release some tool to convert v m to mid Of course the instruments will be gone but you can add them by Hand later on I just wanted to ask if you could make such a tool Greetz 