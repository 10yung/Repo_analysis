Not bin exact but should implement all the logic UseItem still isnt bin exact but it didnt make much sens not to add the part that makes oils usable infostr size has been corrected to be instead of consistent with MACPSX dArch has been renamed to dSpecial implied by its usage in similar named functions added bugfix note to CheckUnique not properly spawning uniques with multiple bases added bugfix note to PlaceGroup adding X scrambler to Y instead of the Y scrambler the unused variables for screen size have been corrected mac showed they lined up with psx corrected variable name dwRecCount implied packets received counter side note ViewDXY probably means View dungeonview dimension and ViewBXY means View blocks dwRecCount is not used for anything implying it was likely a debug feature added later to track number of packets being recieved would be cool to implement this The only meaning full change here is the dowhile The rest is probably nop and a bit odd I think this solves most of the bool types but I havent looked at the handling of return values from functions that return bool fully checking types of values given as a parameter or functions that are passed as parameters There are probably still a lot of NULL that are set as I just happened to spot one when going over things Probably there are still more enums that havent been fully applied Ps CLang isnt happy about this and I have some diff to sort out change insertions deletions change insertions deletions havent figured out how to make them bin exact in vanilla and hellfire with same code P my bad forgot how to do hellfire xD Note this has a considerable slowdown when compiling using VC On my laptop a x slowdown On galaxyhaxz perhaps even more This is counterintuitive but the stats dont lie With split headers ie only import whats used time make f MakefileVC j real user sys Without merged headers ie import allh time make f MakefileVC j real user sys Updates 