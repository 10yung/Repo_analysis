In case when I am using image from url I am getting an following error mapboxgljs Uncaught DOMException Failed to execute getImageData on CanvasRenderingContext D The canvas has been tainted by crossorigin data const image new Image imagesrc What is wrong and how can I user image from url The code right now checks If there was a listener and got removed then unlisten from the map If there wasnt a listener before and one was added to the props add it to the map But its not checking if the listener simply changed This fixes that issue making the map be always up to date with the listeners passed through props All Layers are seemingly only using the images option set by the Layer that is defined first in my render method My problem is as follows Two Layers using the same GeoJSONLayer as a source seem to use the iconimage of the Layer that is defined first in my render method In my example unclusteredarrivedlayer and clusteredarrivedlayer both use icon A and clusteredtransitlayer and unclusteredtransitlayer both use icon B despite using a different images option Furthermore and even weirder Addingdeleting Layers seems to influence the behavior of Layers that are using an entirely different GeoJSONLayer Eg deleting the clusteredarrivedlayer in my source also changes the icon used by Layer unclusteredtransitlayer Layer idclusteredarrivedlayer sourceIdarrivedid typesymbol imagesCLUSTERIMAGES contains SVGs for clustered transit and arrived markers layout iconimage arrived iconallowoverlap true iconanchor bottom filter has pointcount Layer idunclusteredarrivedlayer sourceIdarrivedid typesymbol imagesMARKERIMAGES contains SVGs for unclustered transit and arrived markers layout iconimage arrived iconallowoverlap true iconanchor bottom filter has pointcount Both Layers appear with same icon CONTEXT In my project I have the following situation I have potentially thousands of pointlocation each one having a status property that is either arrived or transit I want the points to cluster BUT not with each other so all points with status transit should cluster with each other but not any points that have status arrived and vice versa My current solution is to use two separate GeoJSONLayersources one for transit and one for arrived points For each GeoJSONLayer source I create two Layers one for clustered markers and one for unclusters markers each one using a different iconimage All images are SVGs When using just one layer and source they all render just fine I have also tested the filters on the Layers separately which also seems to work just fine Im not using the Cluster component since I potentially have A LOT of data which as declared by the docs and issue has a negative impact on performance and I want to use SVG images as icons not HTML Markers Full Render method render let containerFeatures thispropsloadingContainers thispropserrorContainers null thispropscontainersfeatures First we filter all containers containerFeatures FILTERHELPERINSTANCEfilterFeaturescontainerFeatures thispropsfilterValues let arrivedContainers GEOJSONHELPERINSTANCEfilterFeaturesByStatuscontainerFeatures arrived let transitContainers GEOJSONHELPERINSTANCEfilterFeaturesByStatuscontainerFeatures transit return div classNamemapContainer Mapbox zoom thisstatezoom centerthisstatecenter onDragEndmap thisonDragEndmap onZoomEndmap thisonZoomEndmap stylemapboxstylesmapboxstreetsv eslintdisableline reactstylepropobject containerStyleheight width maxBounds Determine if we are still fetching containers from the API If we are return null thispropsloadingContainers thispropserrorContainers null div ARRIVED GeoJSONLayer idarrivedid dataarrivedContainers sourceOptions cluster true clusterMaxZoom clusterRadius Layer idclusteredarrivedlayer sourceIdarrivedid typesymbol imagesCLUSTERIMAGES contains SVGs for clustered transit and arrived markers layout iconimage arrived iconallowoverlap true iconanchor bottom filter has pointcount Layer idunclusteredarrivedlayer sourceIdarrivedid typesymbol imagesMARKERIMAGES contains SVGs for unclustered transit and arrived markers layout iconimage arrived iconallowoverlap true iconanchor bottom filter has pointcount TRANSIT GeoJSONLayer idtransitid datatransitContainers sourceOptions cluster true clusterMaxZoom clusterRadius Layer idclusteredtransitlayer sourceIdtransitid typesymbol imagesCLUSTERIMAGES contains SVGs for clustered transit and arrived markers layout iconimage transit iconallowoverlap true iconanchor bottom filter has pointcount Layer idunclusteredtransitlayer sourceIdtransitid typesymbol imagesMARKERIMAGES contains SVGs for unclustered transit and arrived markers layout iconimage transit iconallowoverlap true iconanchor bottom div Mapbox div See Consider the following a fixed GeoJSONLayer combined with a variable amount of GeoJSONLayers javascript Map stylemapboxstylesmapboxlightv GeoJSONLayer data Array fillmapdata i GeoJSONLayer keyi datadata Map This gives a typescript error Type Element Element is not assignable to type Element Element Element undefined Element string Element number Element false Element true more undefined Type Element Element is not assignable to type Element Something is wrong with the childrens definition on Prop Also adding a comment above the Element part fixes it for some reason javascript Map stylemapboxstylesmapboxlightv GeoJSONLayer data magic comment Array fillmapdata i GeoJSONLayer keyi datadata Map It could be useful to animate a line I am trying to add WMS source to the map I followed the documentation for adding the raster source const RASTERSOURCEOPTIONS type raster tiles minzoom maxzoom scheme tms tileSize Inside render Source idwmsid tileJsonSourceRASTERSOURCEOPTIONS Layer typeraster idlayerid sourceIdwmsid Layer Map doesnt seem to render the raster image it works if I have static value of BBOX in the WMS url localhost geoservercitewmsSERVICEWMS VERSION REQUESTGetMap FORMATimage Fpng TRANSPARENTtrue tiledtrue LAYERScite AKhokanaNadirtransparentmosaicgroup exceptionsapplication Fvndogcseinimage WIDTH HEIGHT SRSEPSG A STYLES BBOXbboxepsg but not with BBOXbboxepsg like in the mapboxgl example Please note that there is not issue with the WMS service Mapbox docs give this clear example reactmapboxgl docs describe how to work with the original mapbox API But I cannot change the language of my map labels by combining these two pieces of documentation I have tried both methods described for working with the original mapbox documentation Ive also tried Mapbox GL Language plugin Using Mapbox GL Language plugin as described combined with the docs on how to interact with original mapbox API wipes out map labels completely Im clearly doing something perhaps many things wrong Can someone point me in the right direction to learn how to localize a reactmapboxgl map Or even better share a working code sample of how you implemented map localization with reactmapboxgl Thank you How I could call sth like javascript if mapboxglhasRTLTextPlugin mapboxglsetRTLTextPluginMap mapType RTLTextPlugin mapboxglhasRTLTextPlugin true without importing mapboxgl in my component I am rendering some geoJson polygons in my app using the GeoJSONLayer component I have provided some fill expressions and things are working well I noticed this layer is by default called geojson fill and it seems that neither Layer nor the GeoJSONLayer component allow you to change this Is there a way to specifically give that layer a name