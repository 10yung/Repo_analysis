Specify a version of bundler to use with Travis as it seems like the CI tests for older versions of Ruby are failing because of version incompatibilities with Bundler URIescape and URIencode are deprecated this PR replaces the URIencode method call with CGIescape Hi maintainers Im curious if youd be open to transferring the maintenance of this gem to Chef We utilize this gem in our compliance offering Chef InSpec and for systems testing in our Chef Workstation product Its pretty critical to us and wed like to see that things are updated to at least a new enough API revision that it will support Docker on Windows Let me know at tsmithchefio When attempting to call Dockerversion I get the following error bundle exec rake apply DEBUG get v version nil rake aborted DockerErrorTimeoutError connectwrite timeout reached CcodeprojectRakefile in top required Caused by ExconErrorTimeout connectwrite timeout reached CcodeprojectRakefile in top required Caused by IOEINPROGRESSWaitWritable A blocking operation is currently executing connect would block CcodeprojectRakefile in top required Caused by ExconErrorTimeout connectwrite timeout reached CcodeprojectRakefile in top required Caused by IOEINPROGRESSWaitWritable A blocking operation is currently executing connect would block CcodeprojectRakefile in top required Caused by ExconErrorTimeout connectwrite timeout reached CcodeprojectRakefile in top required Caused by IOEINPROGRESSWaitWritable A blocking operation is currently executing connect would block CcodeprojectRakefile in top required Caused by ExconErrorTimeout connectwrite timeout reached CcodeprojectRakefile in top required Caused by IOEINPROGRESSWaitWritable A blocking operation is currently executing connect would block CcodeprojectRakefile in top required See full trace by running task with trace Heres the code Im running ruby gem dockerapi require dockerapi Dockerlogger logger Dockerurl Fileexistvarrundockersock unixvarrundockersock tcplocalhost Dockeroptions connecttimeout Dockerversion Dockerinfo Environment details ruby version ruby p revision x mingw curl PlatformNameDocker Engine CommunityComponents NameEngineVersion DetailsApiVersion Archamd BuildTime T ExperimentaltrueGitCommit a f GoVersiongo KernelVersion linuxkitMinAPIVersion Oslinux Version ApiVersion MinAPIVersion GitCommit a f GoVersiongo OslinuxArchamd KernelVersion linuxkitExperimentaltrueBuildTime T docker version Client Docker Engine Community Version API version Go version go Git commit a f Built Thu Feb OSArch windowsamd Experimental false Server Docker Engine Community Engine Version API version minimum version Go version go Git commit a f Built Thu Feb OSArch linuxamd Experimental true Relevant resolved ruby versions dockerapi excon multijson The choice bits of the stacktraces DockerErrorTimeoutError connectwrite timeout reached CappsRuby x librubygems gemsdockerapi libdockerconnectionrb in rescue in request CappsRuby x librubygems gemsdockerapi libdockerconnectionrb in request CappsRuby x librubygems gemsdockerapi libdockerconnectionrb in block levels in classConnection CappsRuby x librubygems gemsdockerapi libdockerrb in version Caused by ExconErrorTimeout connectwrite timeout reached CappsRuby x librubygems gemsexcon libexconsocketrb in selectwithtimeout CappsRuby x librubygems gemsexcon libexconsocketrb in rescue in block in connect CappsRuby x librubygems gemsexcon libexconsocketrb in block in connect CappsRuby x librubygems gemsexcon libexconsocketrb in each CappsRuby x librubygems gemsexcon libexconsocketrb in connect CappsRuby x librubygems gemsexcon libexconsocketrb in initialize CappsRuby x librubygems gemsexcon libexconconnectionrb in new CappsRuby x librubygems gemsexcon libexconconnectionrb in socket CappsRuby x librubygems gemsexcon libexconconnectionrb in requestcall CappsRuby x librubygems gemsexcon libexconmiddlewaresbaserb in requestcall CappsRuby x librubygems gemsexcon libexconmiddlewaresmockrb in requestcall CappsRuby x librubygems gemsexcon libexconmiddlewaresinstrumentorrb in requestcall CappsRuby x librubygems gemsexcon libexconmiddlewaresbaserb in requestcall CappsRuby x librubygems gemsexcon libexconmiddlewaresbaserb in requestcall CappsRuby x librubygems gemsexcon libexconmiddlewaresbaserb in requestcall CappsRuby x librubygems gemsexcon libexconmiddlewaresbaserb in requestcall CappsRuby x librubygems gemsexcon libexconconnectionrb in request CappsRuby x librubygems gemsexcon libexconmiddlewaresidempotentrb in errorcall CappsRuby x librubygems gemsexcon libexconmiddlewaresbaserb in errorcall CappsRuby x librubygems gemsexcon libexconmiddlewaresbaserb in errorcall CappsRuby x librubygems gemsexcon libexconmiddlewaresbaserb in errorcall CappsRuby x librubygems gemsexcon libexconconnectionrb in rescue in request CappsRuby x librubygems gemsexcon libexconconnectionrb in request CappsRuby x librubygems gemsexcon libexconmiddlewaresidempotentrb in errorcall CappsRuby x librubygems gemsexcon libexconmiddlewaresbaserb in errorcall CappsRuby x librubygems gemsexcon libexconmiddlewaresbaserb in errorcall CappsRuby x librubygems gemsexcon libexconmiddlewaresbaserb in errorcall CappsRuby x librubygems gemsexcon libexconconnectionrb in rescue in request CappsRuby x librubygems gemsexcon libexconconnectionrb in request CappsRuby x librubygems gemsexcon libexconmiddlewaresidempotentrb in errorcall CappsRuby x librubygems gemsexcon libexconmiddlewaresbaserb in errorcall CappsRuby x librubygems gemsexcon libexconmiddlewaresbaserb in errorcall CappsRuby x librubygems gemsexcon libexconmiddlewaresbaserb in errorcall CappsRuby x librubygems gemsexcon libexconconnectionrb in rescue in request CappsRuby x librubygems gemsexcon libexconconnectionrb in request CappsRuby x librubygems gemsdockerapi libdockerconnectionrb in request CappsRuby x librubygems gemsdockerapi libdockerconnectionrb in block levels in classConnection CappsRuby x librubygems gemsdockerapi libdockerrb in version Caused by IOEINPROGRESSWaitWritable A blocking operation is currently executing connect would block CappsRuby x libruby socketrb in connectnonblock CappsRuby x libruby socketrb in connectnonblock CappsRuby x librubygems gemsexcon libexconsocketrb in block in connect CappsRuby x librubygems gemsexcon libexconsocketrb in each CappsRuby x librubygems gemsexcon libexconsocketrb in connect CappsRuby x librubygems gemsexcon libexconsocketrb in initialize CappsRuby x librubygems gemsexcon libexconconnectionrb in new CappsRuby x librubygems gemsexcon libexconconnectionrb in socket CappsRuby x librubygems gemsexcon libexconconnectionrb in requestcall CappsRuby x librubygems gemsexcon libexconmiddlewaresbaserb in requestcall CappsRuby x librubygems gemsexcon libexconmiddlewaresmockrb in requestcall CappsRuby x librubygems gemsexcon libexconmiddlewaresinstrumentorrb in requestcall CappsRuby x librubygems gemsexcon libexconmiddlewaresbaserb in requestcall CappsRuby x librubygems gemsexcon libexconmiddlewaresbaserb in requestcall CappsRuby x librubygems gemsexcon libexconmiddlewaresbaserb in requestcall CappsRuby x librubygems gemsexcon libexconmiddlewaresbaserb in requestcall CappsRuby x librubygems gemsexcon libexconconnectionrb in request CappsRuby x librubygems gemsexcon libexconmiddlewaresidempotentrb in errorcall CappsRuby x librubygems gemsexcon libexconmiddlewaresbaserb in errorcall CappsRuby x librubygems gemsexcon libexconmiddlewaresbaserb in errorcall CappsRuby x librubygems gemsexcon libexconmiddlewaresbaserb in errorcall CappsRuby x librubygems gemsexcon libexconconnectionrb in rescue in request CappsRuby x librubygems gemsexcon libexconconnectionrb in request CappsRuby x librubygems gemsexcon libexconmiddlewaresidempotentrb in errorcall CappsRuby x librubygems gemsexcon libexconmiddlewaresbaserb in errorcall CappsRuby x librubygems gemsexcon libexconmiddlewaresbaserb in errorcall CappsRuby x librubygems gemsexcon libexconmiddlewaresbaserb in errorcall CappsRuby x librubygems gemsexcon libexconconnectionrb in rescue in request CappsRuby x librubygems gemsexcon libexconconnectionrb in request CappsRuby x librubygems gemsexcon libexconmiddlewaresidempotentrb in errorcall CappsRuby x librubygems gemsexcon libexconmiddlewaresbaserb in errorcall CappsRuby x librubygems gemsexcon libexconmiddlewaresbaserb in errorcall CappsRuby x librubygems gemsexcon libexconmiddlewaresbaserb in errorcall CappsRuby x librubygems gemsexcon libexconconnectionrb in rescue in request CappsRuby x librubygems gemsexcon libexconconnectionrb in request CappsRuby x librubygems gemsdockerapi libdockerconnectionrb in request CappsRuby x librubygems gemsdockerapi libdockerconnectionrb in block levels in classConnection CappsRuby x librubygems gemsdockerapi libdockerrb in version This is my ruby of code ruby require docker container DockerContainergetba ef fcdf result containerattachstream true stdin StringIOnewconsolelog n stdout true stderr true logs true tty true p p result p p containerlogsstdout true f eb d b f b My question is containerlogsstdout true cant take latest tty data Is there anyone willing to help me container DockerContainercreateImage debianlatest Cmd sleep infinity containerstart containerexec sleep infinity wait DockerErrorTimeoutError read timeout reached containerexec sleep infinity wait stdin StringIOnewhello hangs containerexec bash c cat sleep infinity wait stdin StringIOnewhello hangs Hijacking the Excon socket instead of the underlying socket gets the timeout to work again but I dont know if that would break anything else diff git alibdockerutilrb blibdockerutilrb index ca dc f e alibdockerutilrb blibdockerutilrb module DockerUtil debug hijack starting stdin copy thread threads Threadstart do debug hijack copying stdin socket IOcopystream stdin socket socketwrite stdinread debug hijack closing write end of hijacked socket closewritesocket closewritesocketinstancevariablegetsocket end debug hijack starting hijacked socket read thread module DockerUtil debug hijack reading from hijacked socket begin while chunk socketreadpartial while chunk socketread debug hijack got chunkbytesize bytes from hijacked socket attachblockcall chunk nil nil end diff git alibexconmiddlewareshijackrb blibexconmiddlewareshijackrb index cf b b c alibexconmiddlewareshijackrb blibexconmiddlewareshijackrb module Excon datum response buildresponsestatus socket ExconResponseparseheaderssocket datum datum hijackblock call socketinstancevariablegetsocket datum hijackblock callsocket end stackresponsecalldatum I had an issue trying to build a project called pixelfed require git require docker git Gitclone path tmppxf gitcheckoutv DockerImagebuildfromdirtmppxf This gave me the following DockerErrorServerError Cannot locate specified Dockerfile Dockerfile However doing this manually on the command line works fine git clone git checkout v docker build t pixelfed At first I thought it was due to Dockerfile being a symbolic link but after some debugging it turns out in pixelfed they keep their Dockerfiles in dockerignore for some reason This is probably not correct on their part but I find it interesting the CLI tool still transmits everything in dockerignore to the daemon itself and the daemon then ignores those files in buildingcopying I found the issue where this support was added I can see the advantage of doing this before sending the data to the Docker daemon but this behavior doesnt match the docker CLI and should probably have a configuration setting to enable it or disable it Im not sure what the bestcorrect solution is but if anyone else encounters this heres a quick and dirty monkey patch ruby require docker module DockerUtil def selfremoveignoredfilesdirectory files Remove this function as it breaks compatiablity with the docker CLI discovered with Pixelfed end end Seems like the travis CI tests cover ruby specrequiredrubyversion Test on currently supported releases of Ruby Signedoffby Tim Smith tsmithchefio Always exclude Dockerfile and dockerignore from being ignored You can even use the dockerignore file to exclude the Dockerfile and dockerignore files These files are still sent to the daemon because it needs them to do its job But the ADD and COPY instructions do not copy them to the image resolves 