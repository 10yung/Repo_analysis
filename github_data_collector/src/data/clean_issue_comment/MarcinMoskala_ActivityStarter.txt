 symbol class GalleryRecyclerAdapterBinder e kapt An exception occurred javautilNoSuchElementException Array contains no element matching the predicate at activitystartercompilermodelclassbindingKnownClassTypeCompaniongetByTypeKnownClassTypekt at activitystartercompilerprocessingClassBindingFactorygetKnownClassTypeClassBindingFactorykt at activitystartercompilerprocessingClassBindingFactorycreateClassBindingFactorykt at activitystartercompilerActivityStarterProcessorprocessActivityStarterProcessorkt at orgjetbrainskotlinkapt baseProcessorWrapperprocessannotationProcessingkt at comsuntoolsjavacprocessingJavacProcessingEnvironmentcallProcessorJavacProcessingEnvironmentjava at comsuntoolsjavacprocessingJavacProcessingEnvironmentdiscoverAndRunProcsJavacProcessingEnvironmentjava at comsuntoolsjavacprocessingJavacProcessingEnvironmentaccess JavacProcessingEnvironmentjava at comsuntoolsjavacprocessingJavacProcessingEnvironmentRoundrunJavacProcessingEnvironmentjava at comsuntoolsjavacprocessingJavacProcessingEnvironmentdoProcessingJavacProcessingEnvironmentjava at comsuntoolsjavacmainJavaCompilerprocessAnnotationsJavaCompilerjava at comsuntoolsjavacmainJavaCompilerprocessAnnotationsJavaCompilerjava at orgjetbrainskotlinkapt baseAnnotationProcessingKtdoAnnotationProcessingannotationProcessingkt at orgjetbrainskotlinkapt baseAnnotationProcessingKtdoAnnotationProcessingdefaultannotationProcessingkt at orgjetbrainskotlinkapt AbstractKapt ExtensionrunAnnotationProcessingKapt Extensionkt at orgjetbrainskotlinkapt AbstractKapt ExtensionanalysisCompletedKapt Extensionkt at orgjetbrainskotlinkapt ClasspathBasedKapt ExtensionanalysisCompletedKapt Extensionkt at orgjetbrainskotlinclijvmcompilerTopDownAnalyzerFacadeForJVManalyzeFilesWithJavaIntegration invokeTopDownAnalyzerFacadeForJVMkt at orgjetbrainskotlinclijvmcompilerTopDownAnalyzerFacadeForJVManalyzeFilesWithJavaIntegrationTopDownAnalyzerFacadeForJVMkt at orgjetbrainskotlinclijvmcompilerTopDownAnalyzerFacadeForJVManalyzeFilesWithJavaIntegrationdefaultTopDownAnalyzerFacadeForJVMkt at orgjetbrainskotlinclijvmcompilerKotlinToJVMBytecodeCompileranalyze invokeKotlinToJVMBytecodeCompilerkt at orgjetbrainskotlinclijvmcompilerKotlinToJVMBytecodeCompileranalyze invokeKotlinToJVMBytecodeCompilerkt at orgjetbrainskotlinclicommonmessagesAnalyzerWithCompilerReportanalyzeAndReportAnalyzerWithCompilerReportkt at orgjetbrainskotlinclijvmcompilerKotlinToJVMBytecodeCompileranalyzeKotlinToJVMBytecodeCompilerkt at orgjetbrainskotlinclijvmcompilerKotlinToJVMBytecodeCompilercompileModulescliKotlinToJVMBytecodeCompilerkt at orgjetbrainskotlinclijvmK JVMCompilerdoExecuteK JVMCompilerkt at orgjetbrainskotlinclijvmK JVMCompilerdoExecuteK JVMCompilerkt at orgjetbrainskotlinclicommonCLICompilerexecImplCLICompilerjava at orgjetbrainskotlinclicommonCLICompilerexecImplCLICompilerjava at orgjetbrainskotlinclicommonCLIToolexecCLIToolkt at orgjetbrainskotlindaemonCompileServiceImplcompile invokeCompileServiceImplkt at orgjetbrainskotlindaemonCompileServiceImplcompile invokeCompileServiceImplkt at orgjetbrainskotlindaemonCompileServiceImpldoCompileinlinedifAlivelambda invokeCompileServiceImplkt at orgjetbrainskotlindaemonCompileServiceImpldoCompileinlinedifAlivelambda invokeCompileServiceImplkt at orgjetbrainskotlindaemoncommonDummyProfilerwithMeasurePerfUtilskt at orgjetbrainskotlindaemonCompileServiceImplcheckedCompileCompileServiceImplkt at orgjetbrainskotlindaemonCompileServiceImpldoCompileCompileServiceImplkt at orgjetbrainskotlindaemonCompileServiceImplcompileCompileServiceImplkt at sunreflectNativeMethodAccessorImplinvoke Native Method at sunreflectNativeMethodAccessorImplinvokeNativeMethodAccessorImpljava at sunreflectDelegatingMethodAccessorImplinvokeDelegatingMethodAccessorImpljava at javalangreflectMethodinvokeMethodjava at sunrmiserverUnicastServerRefdispatchUnicastServerRefjava at sunrmitransportTransport runTransportjava at sunrmitransportTransport runTransportjava at javasecurityAccessControllerdoPrivilegedNative Method at sunrmitransportTransportserviceCallTransportjava at sunrmitransporttcpTCPTransporthandleMessagesTCPTransportjava at sunrmitransporttcpTCPTransportConnectionHandlerrun TCPTransportjava at sunrmitransporttcpTCPTransportConnectionHandlerlambdarun TCPTransportjava at javasecurityAccessControllerdoPrivilegedNative Method at sunrmitransporttcpTCPTransportConnectionHandlerrunTCPTransportjava at javautilconcurrentThreadPoolExecutorrunWorkerThreadPoolExecutorjava at javautilconcurrentThreadPoolExecutorWorkerrunThreadPoolExecutorjava at javalangThreadrunThreadjava MarcinMoskala I have fixed the conflicts that Jeffrey do Loof mentioned previously and also updated dependencies Please check it Thanks for your time Any plans for implementing incremental compilation support Right now it seems there are no obstacles for this The processor can define isolating in most cases or aggregating if there is ActivityStarterConfig defined somewhere within the project dynamically using the latest Gradle support According to this processor satisfies all the rules Im just not sure if it is possible to make a processor dynamic based on the presence of an annotation Why is it important isolating processors are much faster Probably a compiler flag by a user can signal that a user doesnt use config Library version beta There is an issue if you would try to pass an ArrayListCustomElement with this library CustomElement has annotation Parcelize and extends Parcelable For single element its correctly generating fill method in xStarter class for example it would look like activitysetCustomElementCustomElementsavedInstanceStategetParcelableCUSTOMELEMENTKEY But for an ArrayList of this CustomElement it look like activitysetCustomElementssavedInstanceStategetParcelableArrayListCUSTOMELEMENTSKEY And Android Studio marks it as error 