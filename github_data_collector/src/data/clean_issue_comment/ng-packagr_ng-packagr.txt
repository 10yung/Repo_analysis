See Im submitting a Bug Fix x Feature Other Refactoring Added tests Documentation Checklist x Commit Messages follow the Conventional Commits pattern A feature commit message is prefixed feat A bugfix commit message is prefixed fix Tests for the changes have been added Description This adds support for rootDirs array in tsconfigjson This is a work in progress becase handling everything with rootDirs only breaks the triple slash references for unknown reasons tests not yet implemented Does this PR introduce a breaking change Yes x No This PR contains the following updates Package Type Update Change tsnode devDependencies minor Release Notes details summaryTypeStrongtsnodesummary v Compare Source Fixed Downgrade yn due to node engine v Compare Source Fixed Fix the resolution order of TSNODECOMPILEROPTIONS closes v Compare Source Fixed Remove normalize slashes from config file loading for Windows Added Configure using tsconfigjson cspotcode Allow dir to be configurable Add build flag for emitting compiled TypeScript under compilerhost mode Incremental compiler support details Renovate configuration date Schedule At any time no schedule defined verticaltrafficlight Automerge Disabled by config Please merge this manually once you are satisfied recycle Rebasing Whenever PR becomes conflicted or if you modify the PR title to begin with rebase nobell Ignore Close this PR and you wont be reminded about this update again rebasecheck If you want to rebaseretry this PR check this box This PR has been generated by WhiteSource Renovate View repository job log here This PR contains the following updates Package Type Update Change karmajasmine devDependencies minor Release Notes details summarykarmarunnerkarmajasminesummary v Compare Source Features adapter support specname URL and sharding b Bug Fixes npm ignore integrationtests f cb Bug Fixes adapter Remove incorrect function and its call cada a build run eslint on npm test a d console Readd Error to the stack d b d dep Depend upon the jasminecore version we test c dfef stack On error in beforeAllafterAll relevant information to debug are miss cd f time report correct time since Jasmine v ee closes travis use new syntax for xenial and pin to it cb ef return false for every entry is irrelevant d d closes githubcomkarmarunnerkarmajasminepull discussionr Chores deps Drop node v support e Features adapter log when Jasmine fails because no expect were run e reporter On nosinglerun and failure emit a debug URL f a Propagate errors thrown in afterAll blocks f fa closes update the version to and restrict node version available to c e Update deps and drop node v to match karma v eed closes feat adapter Use jasmines new configure method e closes BREAKING CHANGES drop support for node v Also update travis config to drop v andd v stopOnFailure which was previously documented in karmajasmines README is not configuration option for jasmine Use oneFailurePerSpec instead Requires peerDependency Jasmine deps Drop support for node x details Renovate configuration date Schedule At any time no schedule defined verticaltrafficlight Automerge Disabled by config Please merge this manually once you are satisfied recycle Rebasing Whenever PR becomes conflicted or if you modify the PR title to begin with rebase nobell Ignore Close this PR and you wont be reminded about this update again rebasecheck If you want to rebaseretry this PR check this box This PR has been generated by WhiteSource Renovate View repository job log here Im submitting a Bug Fix Feature x Other Refactoring Added tests Documentation Checklist x Commit Messages follow the Conventional Commits pattern A feature commit message is prefixed feat A bugfix commit message is prefixed fix x Tests for the changes have been added Description Adding a failing test for Does this PR introduce a breaking change Yes x No Im submitting a Bug Fix x Feature Other Refactoring Added tests Documentation Checklist x Commit Messages follow the Conventional Commits pattern A feature commit message is prefixed feat A bugfix commit message is prefixed fix x Tests for the changes have been added Description Recent PR Introduced the feature to copy assets But the current format will limit us to Having all assets under project src from looking at the code and we cannot customize the destination folder structure ie we are expecting assets to be under projectslibnameassets and destination will always be mapped to distpathlibnameassets in my project we have multiple projects libraries appsin same repo and we have a common folder for assets and this is out side of the project root as expected with this i would not be able to use this ngpackagr feature as is Expected Behaviour I was looking at the AsstePattern syntax of anuglarbuilder browser export type AssetPattern The pattern to match glob string The input directory path in which to apply glob Defaults to the project root input string An array of globs to ignore ignore string Absolute path within the output output string string this will allow to be more granular and as a user of the ngpackagr i can get alot of flexibility Does this PR introduce a breaking change Yes x No Type of Issue Bug Report x Feature Request Description Recent PR Introduced the feature to copy assets But the current format will limit us to Having all assets under project src from looking at the code and we cannot customize the destination folder structure we are expecting assets to be under projectslibnameassets and destination will always be mapped to distpathlibnameassets in my project we have multiple projects libraries appsin same repo and we have a common folder for assets and this is out side of the project root as expected with this i would not be able to use this ngpackagr feature as is Expected Behaviour I was looking at the AsstePattern syntax of anuglarbuilder browser export type AssetPattern The pattern to match glob string The input directory path in which to apply glob Defaults to the project root input string An array of globs to ignore ignore string Absolute path within the output output string string this will allow to be more granular and as a user of the ngpackagr i can get alot of flexibility I wanted this feature badly for my projects so did a poc for the same in the forked repo NOTE I will create a PR on the master branch with the above changes soon Version Information nodemodulesbinngpackagr version ngpackagr rc angular typescript rxjs node npm Please include all version numbers that might be relevant eg thirdparty libraries Type of Issue x Bug Report Feature Request Description Since we can import JSON files and they are correctly bundled into a library build I love this It allows me to define contracts through JSON and use that as both a value and a type with typeof However when importing that library into an app Typescript complains that the JSON file cannot be found it is referenced from a dts file but was not copied into the dts folder tree How To Reproduce First generate a library bash ng new jsonbug createapplicationfalse cd jsonbug ng generate library jsonbug Then create some JSON and use it as both a value and a type diff diff git aprojectsjsonbugsrclibconfigjson bprojectsjsonbugsrclibconfigjson new file mode index d bc devnull bprojectsjsonbugsrclibconfigjson base diff git aprojectsjsonbugsrclibjsonbugservicets bprojectsjsonbugsrclibjsonbugservicets index a b c aprojectsjsonbugsrclibjsonbugservicets bprojectsjsonbugsrclibjsonbugservicets import Injectable from angularcore import defaultConfig from configjson type ConfigJSON typeof defaultConfig Injectable export class Config implements ConfigJSON base string Injectable providedIn root export class JsonBugService private API string constructor constructorconfig Config thisAPI configbase Follow instructions to allow JSON files from diff diff git aprojectsjsonbugtsconfiglibjson bprojectsjsonbugtsconfiglibjson index bd e a aprojectsjsonbugtsconfiglibjson bprojectsjsonbugtsconfiglibjson angularCompilerOptions annotateForClosureCompiler true annotateForClosureCompiler false skipTemplateCodegen true strictMetadataEmit true fullTemplateTypeCheck true diff git atsconfigjson btsconfigjson index ffd cef atsconfigjson btsconfigjson module esnext moduleResolution node importHelpers true resolveJsonModule true esModuleInterop true allowSyntheticDefaultImports true target es typeRoots nodemodulestypes Build the library and inspect the dist bash ng build head distjsonbuglibjsonbugservicedts import defaultConfig from configjson tree distjsonbuglib distjsonbuglib jsonbugcomponentdts jsonbugmoduledts jsonbugservicedts Theres no configjson file in lib so the import in jsonbugservicedts fails when using in an app Generate an app to test the import bash ng generate app testing style css routing false Import the library diff diff git aprojectstestingsrcappappmodulets bprojectstestingsrcappappmodulets index f c a aprojectstestingsrcappappmodulets bprojectstestingsrcappappmodulets import BrowserModule from angularplatformbrowser import NgModule from angularcore import AppComponent from appcomponent import Config from jsonbug NgModule declarations import AppComponent from appcomponent imports BrowserModule providers providers provide Config useValue base bootstrap AppComponent export class AppModule Build the testing app bash ng build testing ERROR in distjsonbuglibjsonbugservicedts error TS Cannot find module configjson import defaultConfig from configjson Can you reproduce the error in the integration tests in ngpackagr If possible take a look at the integrationsamples integrationsamples and try to break one of these builds Is the error you faced in an application importing the library Try to break the Angular CLI app in integrationconsumersngcli integrationconsumersngcli Failing test in Expected Behaviour The JSON file is available in the dist for the dts files or it is inlined into the dts files Version Information nodemodulesbinngpackagr version ngpackagr angularcompiler rollup tsickle typescript node version v npm version RxJS is at but I dont think thats relevant This PR contains the following updates Package Type Update Change rolluppluginsourcemaps dependencies minor Release Notes details summarymaxdavidsonrolluppluginsourcemapssummary v Compare Source Drop support for Node lt and make use of ES features Switch from Babel to TypeScript Remove jsnextmain field from packagejson details Renovate configuration date Schedule At any time no schedule defined verticaltrafficlight Automerge Disabled by config Please merge this manually once you are satisfied recycle Rebasing Whenever PR becomes conflicted or if you modify the PR title to begin with rebase nobell Ignore Close this PR and you wont be reminded about this update again rebasecheck If you want to rebaseretry this PR check this box This PR has been generated by WhiteSource Renovate View repository job log here This PR contains the following updates Package Type Update Change typesnode devDependencies major Renovate configuration date Schedule At any time no schedule defined verticaltrafficlight Automerge Disabled by config Please merge this manually once you are satisfied recycle Rebasing Whenever PR becomes conflicted or if you modify the PR title to begin with rebase nobell Ignore Close this PR and you wont be reminded about this update again rebasecheck If you want to rebaseretry this PR check this box This PR has been generated by WhiteSource Renovate View repository job log here Type of Issue Bug Report x Feature Request Description I found that ngcc Angular Compatibility Compiler supports parallel build by using nodes cluster module PR link In my understanding ngcc and ngpackagr have similar build process calculate interpackage dependency Sort packages by dependency Run build jobs by order So supporting ngcc style parallel build can reduce build time dramatically It may not as easy as what I wrote so feel free to close this issue if you think this isnt worth of time to implement How To Reproduce NA Expected Behaviour ngpackagr can run build jobs in parallel Version Information ngpackagr rc angularcompiler rc rollup tsickle typescript 