 Let s get started with automated dependency management for AngularFun muscle This pull request updates all your dependencies to their latest version Having them all up to date really is the best starting point I will look out for further dependency updates and make sure to handle them in isolation and in realtime as soon as you merge this pull request I won t start sending you further updates unless you have merged this very pull request details summary How to check the status of this repositorysummary There is a badge added to your README indicating the status of this repository This is how your badge looks like pointright Greenkeeper badge details details summary How to ignore certain dependenciessummary In case you can not or do not want to update a certain dependency right now you can of course just change the packagejson file back to your liking Add a greenkeeperignore field to your packagejson containing a list of dependencies you don t want to update right now js packagejson greenkeeper ignore packagenames youwantmetoignore details details summary How to update this pull requestsummary bash change into your repository s directory git fetch git checkout greenkeeperinitial npm installtest adapt your code so it s working again git commit m chore adapt code to updated dependencies git push origin greenkeeperinitial details details summary How the updates will look likesummary As soon as you merge this pull request I ll create a branch for every dependency update with the new version applied The branch creation should trigger your testing services to check the new version Using the results of these tests I ll try to open meaningful and helpful pull requests and issues so your dependencies remain working and uptodate diff underscore underscore In the above example you can see an inrange update is included in the old range because of the caret character When the test services report success I ll delete the branch again because no action needs to be taken everything is fine When there is a failure however I ll create an issue so you know about the problem immediately This way every single version update of your dependencies will either continue to work with your project or you ll get to know of potential problems immediately diff lodash lodash In this example the new version is not included in the old range For version updates like these let s call them out of range updates you ll receive a pull request Now you no longer need to check for exciting new versions by hand I ll just let you know automatically And the pull request will not only serve as a reminder to update In case it passes your decent test suite that s a strong reason to merge right away shipit details details summary Not sure how things are going to work exactlysummary There is a collection of frequently asked questions and of course you may always ask my humans details Good luck with your project and see you soon sparkles Your Greenkeeper Bot palmtree Hi these changes need to work together with to work properly For example if we place a image file to srcimagesfoopng or srcstylesimagesbarpng and then we want to reference it in srcindexhtml or srcstylesstylesless then bug will appears if we run grunt prod Obviously the foopng and barpng was renamed as fooxxxxxxxpng and barxxxxxxxpng but img srcimagesfoopng in srcindexhtml and backgroundimageurlstylesimagesbarpng in srcstylesstylesless not updated However the bust task in grunthustler need to be upgraded for this purpose Hi srcindexhtml need to be excluded for watchbasic task because it should be processed by watchspaHtml task in which the templateindexDev will handle the content Run tasks when monitored files change watch basic files srcfonts srcimages srcscriptsjs srcstylescss srchtml srcindexhtml in order for watchspaHtml tasks copyapp copydev karma options livereload true nospawn true spaHtml files srcindexhtml tasks copyapp templateindexDev copydev karma options livereload true nospawn true 