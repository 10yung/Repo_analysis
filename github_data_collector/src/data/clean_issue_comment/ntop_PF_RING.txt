I have different CentOS machines where I have nprobe installed For the last months or so everytime I need to update nprobe I run into a dependency conflict caused by pfrings ndpi dependency which conflicts with nprobe because they are each requiring different versions yum clean all yum update doesnt fix the issue I have to remove pfring first by running rpm e nodeps pfring then yum update I attached a log file of the process pfringlog cat etcyumreposdntoprepo ntop namentop packages baseurl enabled gpgcheck gpgkey ntopnoarch namentop packages baseurl enabled gpgcheck gpgkey Current PFRING distribution uses strdup in several of the shipped binaries Would it be possible to use strdup directly Alternatively would it be possible to provide binaries for musl userlands Musl in Alpine Linux only exposes strdup symbol so any binaries trying to link to libpfring will fail because of the missing strdup The problem can of course be hacked around by defining a custom strdup which uses strdup when insomd pfring i e dirver then reboot ssh error sshexchangeidentification read Connection reset by peer i e version centos os and kenel version el x I was running pfcount with ZC but pfcount throws the below error It works fine without ZC Version of pfringZC PFRINGZCixgbe usrbinpfcount i zcens f pfringopen error No such device pfring not loaded or interface zcens f is down Details of interface and commands executed ens f flags UPBROADCASTRUNNINGMULTICAST mtu inet netmask broadcast inet fe a ffffe f b prefixlen scopeid x link ether a f f b txqueuelen Ethernet RX packets bytes B RX errors dropped overruns frame TX packets bytes B TX errors dropped overruns carrier collisions device memory xfbc fbe pfringcfg listinterfaces Name eno Driver tg Name eno Driver tg Name eno Driver tg Name eno Driver tg Name ens f Driver ixgbe Running ZC Name virbr nic Driver tun Name virbr Driver bridge Name ens f Driver ixgbe Running ZC cat etcredhatrelease CentOS Linux release Core free g total used free shared buffcache available Mem Swap I noticed that pfring zc and Bro with some restrictfilter arent filtering the specified host correctly I think that the problem is in the pfring ZC driver In order to isolate the problem I did several tests I tried both virtual hypervisor used VMware ESXi and physical machines belong to the same VLAN Maybe the problem could be related to the VLAN tag I also tried to perform tests using tcpdump with BPF filters as in Bro I suspect the issue could be in Pfring ZC driver Here is a list of the tests I did snf refers to a interface that uses an Intel i e driver zc is a virtual interface made from pfring zc Test tcpdump i snf host IP Tcpdump captures the traffic of both virtual and physical machines without issues Test tcpdump i zc host IP The test has failed In detail it doesnt filter some virtual and physical machines Test tcpdump i zc net IPnetnetmask The test has failed In detail it doesnt filter some virtual and physical machines Thank you Regards Pasquale Reload protostxt during runtime especially in zbalanceipc without restart It should update the filter table with new ipscustom filters without traffic disruption Found another potential issue with PFRING and RedHat This time Im trying to install the latest YUM package for the ZC Drivers Most of the drivers display this error during the script execution portion of the yum package install DKMS makelog for ixgbezc for kernel el x x Wed Dec EST cd usrsrcpfring make make warning jobserver unavailable using j Add to parent make rule make Entering directory usrsrcpfring make C libmodules el x build SUBDIRSusrsrcpfring EXTRACFLAGSIusrsrcpfring DGITREV devd ad f c df e c dbe c nopie fnopie modules make Entering directory usrsrckernels el x Building modules stage MODPOST modules make Leaving directory usrsrckernels el x make Leaving directory usrsrcpfring cp usrsrcpfring Modulesymvers make C libmodules el x build SUBDIRSvarlibdkmsixgbezc build modules make Entering directory usrsrckernels el x CC M varlibdkmsixgbezc buildixgbemaino CC M varlibdkmsixgbezc buildixgbecommono CC M varlibdkmsixgbezc buildixgbeapio CC M varlibdkmsixgbezc buildixgbeparamo CC M varlibdkmsixgbezc buildixgbelibo CC M varlibdkmsixgbezc buildixgbeethtoolo CC M varlibdkmsixgbezc buildkcompato CC M varlibdkmsixgbezc buildixgbe o CC M varlibdkmsixgbezc buildixgbe o CC M varlibdkmsixgbezc buildixgbex o CC M varlibdkmsixgbezc buildixgbex o In file included from varlibdkmsixgbezc buildixgbeosdeph from varlibdkmsixgbezc buildixgbetypeh from varlibdkmsixgbezc buildixgbedcbh from varlibdkmsixgbezc buildixgbeh from varlibdkmsixgbezc buildixgbemainc varlibdkmsixgbezc buildkcompath error redefinition of struct flowmatch struct flowmatch In file included from includenetpktclsh from varlibdkmsixgbezc buildkcompath from varlibdkmsixgbezc buildixgbeosdeph from varlibdkmsixgbezc buildixgbetypeh from varlibdkmsixgbezc buildixgbedcbh from varlibdkmsixgbezc buildixgbeh from varlibdkmsixgbezc buildixgbemainc includenetflowoffloadh note originally defined here struct flowmatch In file included from varlibdkmsixgbezc buildixgbeosdeph from varlibdkmsixgbezc buildixgbetypeh from varlibdkmsixgbezc buildixgbedcbh from varlibdkmsixgbezc buildixgbeh from varlibdkmsixgbezc buildixgbemainc varlibdkmsixgbezc buildkcompath error redefinition of struct flowmatchbasic struct flowmatchbasic In file included from includenetpktclsh cut for brevity Looks like the kcompath is redefining structs that exists in the RedHat kernel source In kcompath if LINUXVERSIONCODE KERNELVERSION ifdef HAVETCSETUPCLSFLOWER include netpktclsh struct flowmatch struct flowdissector dissector void mask void key struct flowmatchbasic struct flowdissectorkeybasic key mask struct flowmatchcontrol struct flowdissectorkeycontrol key mask cut for brevity Looks like there needs to be another test because RedHat kernel version X is implementing changes from Linux Generic Kernel Source and greater OS CentOS Linux release kernel el x Suricata RELEASE run suricata with pfring zc rootlocalhost logstash PFRINGFTCONFetcpfringftrulesconf suricata pfringintzcens f c etcsuricatasuricatayaml Notice This is Suricata version RELEASE Info CPUscores online Config luajit states preallocated Config default server has requestbodyminimalinspectsize set to and requestbodyinspectwindow set to after randomization Config default server has responsebodyminimalinspectsize set to and responsebodyinspectwindow set to after randomization Config SMB stream depth Config Protocol detection and parser disabled for modbus protocol Config Protocol detection and parser disabled for enip protocol Config Protocol detection and parser disabled for DNP Config allocated bytes of memory for the host hash buckets of size Config preallocated hosts of size Config host memory usage bytes maximum Info Max dump is Info Core dump setting attempted is Info Core dump size set to Config allocated bytes of memory for the defrag hash buckets of size Config preallocated defrag trackers of size Config defrag memory usage bytes maximum Config stream preallocsessions per thread Config stream memcap Config stream midstream session pickups disabled Config stream asynconeside disabled Config stream checksumvalidation enabled Config streaminline disabled Config stream bypass disabled Config stream maxsynackqueued Config streamreassembly memcap Config streamreassembly depth Config streamreassembly toserverchunksize Config streamreassembly toclientchunksize Config streamreassemblyraw enabled Config streamreassembly segmentprealloc Config enabling evelog module alert Config enabling evelog module http Config enabling evelog module dns Config enabling evelog module tls Config enabling evelog module files Config forcing magic lookup for logged files Config forcing sha calculation for logged or stored files Config enabling evelog module smtp Config enabling evelog module nfs Config enabling evelog module smb Config enabling evelog module tftp Config enabling evelog module ikev Config enabling evelog module krb Config enabling evelog module dhcp Config enabling evelog module ssh Config enabling evelog module stats Warning ERRCODE SCWARNEVEMISSINGEVENTS evestats will not display all decoder events correctly See Set a prefix in statsdecodereventsprefix In the prefix will default to decoderevent Config enabling evelog module flow Config enabling evelog module netflow Info stats output device regular initialized statslog Config Delayed detect disabled Info Running in live mode activating unix socket Config pattern matchers MPM hs SPM hs Config grouping tcpwhitelist default Config grouping udpwhitelist default Config prefilter engines MPM Info Loading reputation file etcsuricatarulessciriusipreplist Perf host memory usage bytes maximum Config Loading rule file etcsuricatarulessciriusrules Info rule files processed rules successfully loaded rules failed Info Threshold config parsed rules found Perf using shared mpm ctx for tcppacket Perf using shared mpm ctx for tcpstream Perf using shared mpm ctx for udppacket Perf using shared mpm ctx for otherip Perf using shared mpm ctx for httpuri Perf using shared mpm ctx for httprequestline Perf using shared mpm ctx for httpclientbody Perf using shared mpm ctx for httpresponseline Perf using shared mpm ctx for httpheader Perf using shared mpm ctx for httpheader Perf using shared mpm ctx for httpheadernames Perf using shared mpm ctx for httpheadernames Perf using shared mpm ctx for httpaccept Perf using shared mpm ctx for httpacceptenc Perf using shared mpm ctx for httpacceptlang Perf using shared mpm ctx for httpreferer Perf using shared mpm ctx for httpconnection Perf using shared mpm ctx for httpcontentlen Perf using shared mpm ctx for httpcontentlen Perf using shared mpm ctx for httpcontenttype Perf using shared mpm ctx for httpcontenttype Perf using shared mpm ctx for httpprotocol Perf using shared mpm ctx for httpprotocol Perf using shared mpm ctx for httpstart Perf using shared mpm ctx for httpstart Perf using shared mpm ctx for httprawheader Perf using shared mpm ctx for httprawheader Perf using shared mpm ctx for httpmethod Perf using shared mpm ctx for httpcookie Perf using shared mpm ctx for httpcookie Perf using shared mpm ctx for httprawuri Perf using shared mpm ctx for httpuseragent Perf using shared mpm ctx for httphost Perf using shared mpm ctx for httprawhost Perf using shared mpm ctx for httpstatmsg Perf using shared mpm ctx for httpstatcode Perf using shared mpm ctx for dnsquery Perf using shared mpm ctx for tlssni Perf using shared mpm ctx for tlscertissuer Perf using shared mpm ctx for tlscertsubject Perf using shared mpm ctx for tlscertserial Perf using shared mpm ctx for tlscertfingerprint Perf using shared mpm ctx for ja hash Perf using shared mpm ctx for ja string Perf using shared mpm ctx for dcestubdata Perf using shared mpm ctx for dcestubdata Perf using shared mpm ctx for smbnamedpipe Perf using shared mpm ctx for smbshare Perf using shared mpm ctx for sshprotocol Perf using shared mpm ctx for sshprotocol Perf using shared mpm ctx for sshsoftware Perf using shared mpm ctx for sshsoftware Perf using shared mpm ctx for filedata Perf using shared mpm ctx for filedata Perf using shared mpm ctx for filedata Perf using shared mpm ctx for filedata Perf using shared mpm ctx for krb cname Perf using shared mpm ctx for krb sname Info signatures processed are IPonly rules are inspecting packet payload inspect application layer are decoder event only Config building signature grouping structure stage preprocessing rules complete Perf TCP toserver port groups unique SGHs copies Perf TCP toclient port groups unique SGHs copies Perf UDP toserver port groups unique SGHs copies Perf UDP toclient port groups unique SGHs copies Perf OTHER toserver proto groups unique SGHs copies Perf OTHER toclient proto groups unique SGHs copies Perf Unique rule groups Perf Builtin MPM toserver TCP packet Perf Builtin MPM toclient TCP packet Perf Builtin MPM toserver TCP stream Perf Builtin MPM toclient TCP stream Perf Builtin MPM toserver UDP packet Perf Builtin MPM toclient UDP packet Perf Builtin MPM other IP packet Perf AppLayer MPM toserver httpuri Perf AppLayer MPM toserver httprequestline Perf AppLayer MPM toserver httpclientbody Perf AppLayer MPM toclient httpresponseline Perf AppLayer MPM toserver httpheader Perf AppLayer MPM toclient httpheader Perf AppLayer MPM toserver httpheadernames Perf AppLayer MPM toserver httpaccept Perf AppLayer MPM toserver httpreferer Perf AppLayer MPM toserver httpcontentlen Perf AppLayer MPM toserver httpcontenttype Perf AppLayer MPM toclient httpcontenttype Perf AppLayer MPM toserver httpstart Perf AppLayer MPM toserver httprawheader Perf AppLayer MPM toserver httpmethod Perf AppLayer MPM toserver httpcookie Perf AppLayer MPM toclient httpcookie Perf AppLayer MPM toserver httprawuri Perf AppLayer MPM toserver httpuseragent Perf AppLayer MPM toserver httphost Perf AppLayer MPM toclient httpstatcode Perf AppLayer MPM toserver dnsquery Perf AppLayer MPM toserver tlssni Perf AppLayer MPM toclient tlscertissuer Perf AppLayer MPM toclient tlscertsubject Perf AppLayer MPM toclient tlscertserial Perf AppLayer MPM toserver sshprotocol Perf AppLayer MPM toserver filedata Perf AppLayer MPM toclient filedata Info ZC interface detected not setting clusterid for PFRING iface zcens f Info ZC interface detected not setting cluster type for PFRING iface zcens f Warning ERRCODE SCERRSYSCALL Failure when trying to get feature via ioctl for zcens f No such device Warning ERRCODE SCERRSYSCALL Failure when trying to get feature via ioctl for zcens f No such device Warning ERRCODE SCERRSYSCALL Failure when trying to get feature via ioctl for zcens f No such device Warning ERRCODE SCERRSYSCALL Failure when trying to get feature via ioctl for zcens f No such device Warning ERRCODE SCERRSYSCALL Failure when trying to get feature via ioctl for zcens f No such device Info Going to use threads Perf Enabling zerocopy for zcens f Info ZC interface detected not adding thread to cluster Perf W zcens f Using PFRING v interface zcens f clusterid singlepfringthread Info RunModeIdsPfringWorkers initialised Config using flow manager threads Config using flow recycler threads Info Running in live mode activating unix socket Info Using unix socket file varrunsuricatasuricatacommandsocket Notice all packet processing threads management threads initialized engine started Warning ERRCODE SCERRPFRINGVLAN no VLAN header in the raw packet See Notice Signal Received Stopping engine Perf new flows established flows were timed out flows in closed state Info time elapsed s Perf flows processed Perf W zcens f Kernel Packets dropped Perf W zcens f Packets bytes Info Alerts Perf ippair memory usage bytes maximum Perf host memory usage bytes maximum Info cleaning up signature grouping structure complete Notice Stats for zcens f pkts drop invalid chksum Perf Cleaning up Hyperscan global scratch Perf Clearing Hyperscan database cache redis db record did not changed either run suricata with out pf ringaf packet same config Notice This is Suricata version RELEASE Info CPUscores online Config luajit states preallocated Config default server has requestbodyminimalinspectsize set to and requestbodyinspectwindow set to after randomization Config default server has responsebodyminimalinspectsize set to and responsebodyinspectwindow set to after randomization Config SMB stream depth Config Protocol detection and parser disabled for modbus protocol Config Protocol detection and parser disabled for enip protocol Config Protocol detection and parser disabled for DNP Config allocated bytes of memory for the host hash buckets of size Config preallocated hosts of size Config host memory usage bytes maximum Info Max dump is Info Core dump setting attempted is Info Core dump size set to Config allocated bytes of memory for the defrag hash buckets of size Config preallocated defrag trackers of size Config defrag memory usage bytes maximum Config stream preallocsessions per thread Config stream memcap Config stream midstream session pickups disabled Config stream asynconeside disabled Config stream checksumvalidation enabled Config streaminline disabled Config stream bypass disabled Config stream maxsynackqueued Config streamreassembly memcap Config streamreassembly depth Config streamreassembly toserverchunksize Config streamreassembly toclientchunksize Config streamreassemblyraw enabled Config streamreassembly segmentprealloc Config enabling evelog module alert Config enabling evelog module http Config enabling evelog module dns Config enabling evelog module tls Config enabling evelog module files Config forcing magic lookup for logged files Config forcing sha calculation for logged or stored files Config enabling evelog module smtp Config enabling evelog module nfs Config enabling evelog module smb Config enabling evelog module tftp Config enabling evelog module ikev Config enabling evelog module krb Config enabling evelog module dhcp Config enabling evelog module ssh Config enabling evelog module stats Warning ERRCODE SCWARNEVEMISSINGEVENTS evestats will not display all decoder events correctly See Set a prefix in statsdecodereventsprefix In the prefix will default to decoderevent Config enabling evelog module flow Config enabling evelog module netflow Info stats output device regular initialized statslog Config Delayed detect disabled Info Running in live mode activating unix socket Config pattern matchers MPM hs SPM hs Config grouping tcpwhitelist default Config grouping udpwhitelist default Config prefilter engines MPM Info Loading reputation file etcsuricatarulessciriusipreplist Perf host memory usage bytes maximum Config Loading rule file etcsuricatarulessciriusrules Info rule files processed rules successfully loaded rules failed Info Threshold config parsed rules found Perf using shared mpm ctx for tcppacket Perf using shared mpm ctx for tcpstream Perf using shared mpm ctx for udppacket Perf using shared mpm ctx for otherip Perf using shared mpm ctx for httpuri Perf using shared mpm ctx for httprequestline Perf using shared mpm ctx for httpclientbody Perf using shared mpm ctx for httpresponseline Perf using shared mpm ctx for httpheader Perf using shared mpm ctx for httpheader Perf using shared mpm ctx for httpheadernames Perf using shared mpm ctx for httpheadernames Perf using shared mpm ctx for httpaccept Perf using shared mpm ctx for httpacceptenc Perf using shared mpm ctx for httpacceptlang Perf using shared mpm ctx for httpreferer Perf using shared mpm ctx for httpconnection Perf using shared mpm ctx for httpcontentlen Perf using shared mpm ctx for httpcontentlen Perf using shared mpm ctx for httpcontenttype Perf using shared mpm ctx for httpcontenttype Perf using shared mpm ctx for httpprotocol Perf using shared mpm ctx for httpprotocol Perf using shared mpm ctx for httpstart Perf using shared mpm ctx for httpstart Perf using shared mpm ctx for httprawheader Perf using shared mpm ctx for httprawheader Perf using shared mpm ctx for httpmethod Perf using shared mpm ctx for httpcookie Perf using shared mpm ctx for httpcookie Perf using shared mpm ctx for httprawuri Perf using shared mpm ctx for httpuseragent Perf using shared mpm ctx for httphost Perf using shared mpm ctx for httprawhost Perf using shared mpm ctx for httpstatmsg Perf using shared mpm ctx for httpstatcode Perf using shared mpm ctx for dnsquery Perf using shared mpm ctx for tlssni Perf using shared mpm ctx for tlscertissuer Perf using shared mpm ctx for tlscertsubject Perf using shared mpm ctx for tlscertserial Perf using shared mpm ctx for tlscertfingerprint Perf using shared mpm ctx for ja hash Perf using shared mpm ctx for ja string Perf using shared mpm ctx for dcestubdata Perf using shared mpm ctx for dcestubdata Perf using shared mpm ctx for smbnamedpipe Perf using shared mpm ctx for smbshare Perf using shared mpm ctx for sshprotocol Perf using shared mpm ctx for sshprotocol Perf using shared mpm ctx for sshsoftware Perf using shared mpm ctx for sshsoftware Perf using shared mpm ctx for filedata Perf using shared mpm ctx for filedata Perf using shared mpm ctx for filedata Perf using shared mpm ctx for filedata Perf using shared mpm ctx for krb cname Perf using shared mpm ctx for krb sname Info signatures processed are IPonly rules are inspecting packet payload inspect application layer are decoder event only Config building signature grouping structure stage preprocessing rules complete Perf TCP toserver port groups unique SGHs copies Perf TCP toclient port groups unique SGHs copies Perf UDP toserver port groups unique SGHs copies Perf UDP toclient port groups unique SGHs copies Perf OTHER toserver proto groups unique SGHs copies Perf OTHER toclient proto groups unique SGHs copies Perf Unique rule groups Perf Builtin MPM toserver TCP packet Perf Builtin MPM toclient TCP packet Perf Builtin MPM toserver TCP stream Perf Builtin MPM toclient TCP stream Perf Builtin MPM toserver UDP packet Perf Builtin MPM toclient UDP packet Perf Builtin MPM other IP packet Perf AppLayer MPM toserver httpuri Perf AppLayer MPM toserver httprequestline Perf AppLayer MPM toserver httpclientbody Perf AppLayer MPM toclient httpresponseline Perf AppLayer MPM toserver httpheader Perf AppLayer MPM toclient httpheader Perf AppLayer MPM toserver httpheadernames Perf AppLayer MPM toserver httpaccept Perf AppLayer MPM toserver httpreferer Perf AppLayer MPM toserver httpcontentlen Perf AppLayer MPM toserver httpcontenttype Perf AppLayer MPM toclient httpcontenttype Perf AppLayer MPM toserver httpstart Perf AppLayer MPM toserver httprawheader Perf AppLayer MPM toserver httpmethod Perf AppLayer MPM toserver httpcookie Perf AppLayer MPM toclient httpcookie Perf AppLayer MPM toserver httprawuri Perf AppLayer MPM toserver httpuseragent Perf AppLayer MPM toserver httphost Perf AppLayer MPM toclient httpstatcode Perf AppLayer MPM toserver dnsquery Perf AppLayer MPM toserver tlssni Perf AppLayer MPM toclient tlscertissuer Perf AppLayer MPM toclient tlscertsubject Perf AppLayer MPM toclient tlscertserial Perf AppLayer MPM toserver sshprotocol Perf AppLayer MPM toserver filedata Perf AppLayer MPM toclient filedata Perf cores so using threads Perf Using AFPACKET threads for interface ens f Config ens f enabling zero copy mode by using data release call Info Going to use threads Config using flow manager threads Config using flow recycler threads Info Running in live mode activating unix socket Info Using unix socket file varrunsuricatasuricatacommandsocket Notice all packet processing threads management threads initialized engine started Perf AFPACKET RX Ring params blocksize blocknr framesize framenr Perf AFPACKET RX Ring params blocksize blocknr framesize framenr Perf AFPACKET RX Ring params blocksize blocknr framesize framenr Perf AFPACKET RX Ring params blocksize blocknr framesize framenr Info All AFP capture threads are running Notice Trying to connect to Redis Notice Connected to Redis Notice Signal Received Stopping engine Perf new flows established flows were timed out flows in closed state Info time elapsed s Perf flows processed Perf W ens f Kernel Packets dropped Perf W ens f Kernel Packets dropped Perf W ens f Kernel Packets dropped Perf W ens f Kernel Packets dropped Info Alerts Info QUIT Command sent to redis Connection will terminate Info Missing reply from redis disconnected Info Disconnecting from redis Perf ippair memory usage bytes maximum Perf host memory usage bytes maximum Info cleaning up signature grouping structure complete Notice Stats for ens f pkts drop invalid chksum Perf Cleaning up Hyperscan global scratch Perf Clearing Hyperscan database cache work fine with afpacket I dont know this is pfring problem or a problem with Suricata However some of the errors that pfring causes seem to skip some of the settings of the suricata It would be nice to have stacketh X that matches the same nic rings so theres no synchronization primitives required to inject packets to and from the host stack When using the AFXDP feature Ingress traffic is already detached from the host stack However egress traffic is not when using stack It would be nice if this was the same in both directions