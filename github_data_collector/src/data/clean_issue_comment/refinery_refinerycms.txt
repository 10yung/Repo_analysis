 Context For full Zeitwerk support we require all gems that currently depend on something in Refinery by requiring the gems name to update the require to a path inside the gem For example if a gem had require refinerycmspages This has to change to require refinerypages Not a huge code change but needs to be done everywhere Changes Applies the above suggestion to code that lives inside this repository Considerations One issue is that this kind of violates the namespace expectation of a gem called refinerycmscore which should have librefinerycmscorerb Perhaps this is worth a lot of consideration as an alternative Resolves Hi parndt Ive tried to fix all flaky tests with wait for ajax or sleep It looks like it works but im not a big fan of this solution Do you have something better to recommand Waiting for parndt sponsor Hi Few months ago I wrote tutorial how to run Refinery CMS app on rpi in Docker I see that in Refinery CMS documentation there is no guide about Refinery CMS and Docker So if you want feel free to copy paste or reuse only some sections fix grammar and put it to documentation Let me know what do you think about it The link is Have a nice day Martin I cannot find a version of that allows Rails Is this intentional Is there no support for Rails in Refinery CMS We were reordering a lot of pages on our production server recently Ruby Rails Refinery stable branch and the production server crashed outright and needed to be rebooted I cant really prove reordering was what did it but going from the logs it seems likely The reorder ended in a and after that the log was full of Active Record errors until we rebooted I couldnt even reach the server for a puma restart had to go full reboot Im trying various ways of reordering on development now to test My simplest test case With a dump of my entire production db approx pages I move one rootlevel page one position up None of the pages that are affected by reordering have child pages Still this takes ms and writes more than lines of log entries Thats from moving one page without children If we cant make this less taxing on the SQL queries I fear I need to decouple our news and staff pages into different models probably using an engine or extension and then use a different frontend ordering scheme for them Which is doable but a lot of work for whats basically a workaround I actually prefer that the pages belong to the standard refinery page model eg I reuse the view templates for nonnews pages and just reordering when needed But if the CMS cant handle it then its back to the drawing board This is not a new issue When we were still on Refinery and using Unicorn I had to manually raise the Unicorn timeout just for page reordering and even then it was errorprone I frequently had the server giving up midway through the reordering with extremely unpredictable results Back then we probably had pages or less Im aware of this PR and I havent had the incorrect order after failed jobtimeout since then but its still extremely taxing and I can see a huge disk usage write spike x more than a normal session on our server logs from the time it happened Any ideas howif this can be made more efficient somehow This is a very short PR It puts in place the basic features needed to implement a duplicate action The default duplicate action is very naive it copies the item and opens the copy to be edited There is no attempt to copy any associations apart from belongsto which is held on the model A full implementation of a duplicate action will need a more sophisticated duplicate method it will depend on the model and the implementor Although the example below using refinerycmspages adds some more steps a true duplicator for refinerycmspages needs attention paid to translations and other associations added by refinery extensions I dont think it is ready to be submitted as a PR yet Each model will have different considerations starting with whether it is appropriate to duplicate at all For an extension to implement the duplicate action it will need to add a route to the action change indexmodel view to add a link for the action perhaps override the default duplicate method to extend the duplication to copy associations To implement duplicate in an extension This is still a simple duplication Adding a route refinerycmspagesconfigroutesrb namespace admin path RefineryCorebackendroute do get pagespathedit to pagesedit as editpage get pagespathduplicate to pagesduplicate as duplicatepage Override the default duplicate action so pageparts are duplicated refinerycmspagesappcontrollersrefineryadminpagescontrollerrb module Refinery module Admin class PagesController RefineryAdminController def duplicate originalpage page page originalpagedup pagetitle copy originalpagepartseach pagepart do pageparts pagepartdup end pagesave render edit end add a link to the duplicate action in the adminindex refinerycmspagesappviewsrefineryadminpagespagehtmlerb actioniconduplicate refineryadminduplicatepagepathpagenestedurl tduplicate scope refineryadminpages Note The example duplicate action saves the page before sending it to be edited Seems to work Finally I tried to write a routing test but didnt manage to get it working Help appreciated I am wondering if it is possible to show display the default locale in the URL bar For example and not only If en is the default locale Thanks in advance Hendry Iskandar