It would be great to have the same lib written in Kotlin and available for Android Rules could be the same for both OS and increase the amount of your users While I was testing something I was not sure if DatedateAtendOfDay and DatedateAtEndOfday produced the same result so I tried comparing them like this swift XCTAssertEqualDatedateAtendOfDay DatedateAtEndOfday Which produced the error XCTAssertEqual failed is not equal to Which seemed odd using swift XCTAssertEqualDatedateAtendOfDaytimeIntervalSince DatedateAtEndOfdaytimeIntervalSince It shows the problem XCTAssertEqual failed is not equal to From what I looked trough they dont use the same implementation which does not seem like a good idea and can lead to unexpected problems I realise that date comparison should be done using methods proper for that but these two should not differ Hi when compiling with Linux I get this error using version and Swift TimeIntervalFormatterswift error DateComponentsFormatter is unavailable Not supported in swiftcorelibsfoundation public var zeroFormattingBehavior DateComponentsFormatterZeroFormattingBehavior FoundationDateComponentsFormatter note DateComponentsFormatter has been explicitly marked unavailable here Seems to me that DateComponentsFormatter is not available for Linux unfortunately I couldnt find out if it s just not there yet or never will be Any idea how I can get around this let dateString let dateInCurrentRegion DateInRegioninitdate format YYYYMMdd HHmmss region current When I print it like printdateInCurrentRegiontoFormatYYYYMMdd HHmmss The output is But I am expecting it to be WeekdayConvenience getter for the dates weekday component is not equal for date in iOS iOS Issue is reproducing only on devices The intention of cachedValues to me seems to be to cache the deserialised JSON for faster access in subsequent calls This only ever seemed to be assigned to not read from and this assignment was causing me an EXCBADACCESS in my app This change simply returns the cached value if one is found This not only prevents the crash in my app but actually speeds up subsequent relative formatting Hi I am trying to have the exact date When I print this Datedescriptionwith current it will show in the console this Saturday November at AM Pacific Standard Time but if I print the following absdate T Z repdate T regioncalendargregorian timezoneAmericaLosAngeles localeenUS date timeIntervalSinceReferenceDate region calendargregorian timezoneAmericaLosAngeles localeenUS calendar gregorian current identifier gregorian kind current locale OptionalLocale some enUS current identifier enUS kind current timeZone AmericaLosAngeles current identifier AmericaLosAngeles kind current abbreviation OptionalString some PST secondsFromGMT isDaylightSavingTime false firstWeekday minimumDaysInFirstWeek customFormatter nil The data is correct except the time it is am right now not am Please what is the step to use the date correctly Thank you A native speaker of zhhant fixed some translations for the relative time format current