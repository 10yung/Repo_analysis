kjk Whilst testing some bookmarks handling I noticed Bold and Italic fonts as used by Tracker software do not reflect what is shown in SumatraPDF unclear which is right but Acrobat agrees with Tracker Test sample Tracker bookmarkspdf The difference appears to be due to a reversal in code there may be more but the obvious ones are srcBaseEngineh approx line None x Bold x Italic x srcPdfEnginecpp approx line TODO not sure about the mappings yet if flags x res res TocItemFlagsItalic if flags x res res TocItemFlagsBold if flags x TODO is there more CrashMe To check chm handling including utf characters I use Windows System Help files for other languages That does not mean they are error free but they should be reasonable Since chm can used in two modes I tested in both and with these files there are the expected differences in page numbers per mode However what was unexpected was missing entries after some bookmarks And secondly this was more evident in FixedPageUI The different behaviours including in the English file suggest it may not be simply down to rogue characters but some other cause chmbkm from fixedUIfalsezip chmbkm from fixedUItruezip My current comic book reader automatically opens book when Im at the end of book This feature would help me move over to sumatrapdf as my only cbz cbr reader Whilst it is commendable there is a settings for default scaling it causes problems that it is initially set to shrink So as to avoid some problems with scale I understand that it is better to set reduced to shrink rather than expand to fit However it would be better if it starts at none see forum issue PS there is also the confusion if it should be none or noscale as used for CLI thus it would also help if the internal argument and external argument were identical see I would recommend noscale as the more informative Totally clean installation of windows thus no history Install SumatraPDF for First user no problems Thats an admin account So install for a secondary user expecting all first user pointers would be ignored Install appeared to go well I should have twigged that I did not need to select options as they were ALREADY selected It took hours to fully untangle the registry settings remove the first user install and revert to Program Files for both users see comment by sumatrapeter I think it is easier to illustrate with screen grabs if you need more info let me know Request Add method for external programs to get the filepath to the active document in a particular SumatraPDF window via SendMessage Why Makes it easier for external programs to interact with the document file and its related smx annotations file What is already possible If advanced setting FullPathInTitle true is set then the active documents filepath can be parsed from the window title Works but at the cost of filename not visible to user in the window title if the path is very long Code for illustrationdiscussion Below are my two hacky attempts to add this to SumatraPDF clipboard method Makes SumatraPDF receptive to a new message and in reaction add the active document filepath to the clipboard Gist with code to add to two SumatraPDF source files Tested on SumatraPDF source from This clipboard method works quickly and reliably so far The external program can be made to backuprestore the previous clipboard data beforeafter the extraction But still it would be better to avoid using clipboard I think wmcopydata method Makes SumatraPDF receptive to a new message and in reaction pass the active document filepath via WMCOPYDATA Gist with code to add to two SumatraPDF source files Tested on SumatraPDF source from The wmcopydata code is not yet working I successfully receive a message back to the external program and get correct dwData from it Looks like cbData is correct too But lpData turns out garbledasian characters Can you spot errors in my code Can also be errors in my receiver code Ill keep troubleshooting that too Request Add method for external programs to get the document canvas X Y position under the mouse cursor in pt unit same unit that smx files use for highlights via SendMessage Why External programs can use the X Y data to interact with annotations under the mouse by parsing the smx file Possible use cases Detect click on annotation or mouseover annotation React by addingremoving annotation change annotation colorstyle What is already possible We can send key m to make SumatraPDF show a small cursor position helper notification in the top left corner of the document Then repeat m until the notification shows pt units Then continually parse the text from that control as the mouse cursor moves Thats what I do in sumatrahighlighthelper Works but can miss highlights if the mouse moves rapidly And not silent because of the notification Code for illustrationdiscussion Below is my hacky attempt to add this to SumatraPDF Compiles and works silently without issues so far in my own very limited tests It seems this method can read the position more quickly compared to the old method above Gist with code to add to two SumatraPDF source files Tested on SumatraPDF source from Overview The added code makes SumatraPDF listen for a new wmcommand message and react by sending back canvas X Y position under mouse cursor as that messages return LRESULT data The passed X Y data is two numbers with up to digits each so will fit packed in the LRESULT No extra WMCOPYDATA step needed I assumed a gist was best when only discussing the topic Can make a PR if asked but assume my code needs changes Partly related issue on error in position notification data in FixedUI epub or at least mismatch with data in smx kjk Probably too premature but out of interest added several random windowschm together then attempted to print to pdf update just to confirm it is not file type as such since just a few pages of a couple of pdf files will crash when attempting to print thevbmk sumatrapdfcrashzip SumatraPDF is historically biased to keyboard usage and the only way to improve on usage for touch users is to ensure many of those key combinations are accessible with minimal cascading of sub menus via the menu bar or the context menus which is slower due to the wait after holding Prerelease updates have helped in one or two cases by showing more contextual entries The sometimes impossible to reach functions are those like hovering over a comment which thus requires hold which does NOT ALWAYS show comment then tap copy and paste to a separate window just to see that it could be ignored This limitation could also impact other feature requested tooltip suggestions such as those to say read tab filenames it would be much better for tablet users if a right clicklong touch were to hint display the full path and name and optionally other copyable data much like file properties 