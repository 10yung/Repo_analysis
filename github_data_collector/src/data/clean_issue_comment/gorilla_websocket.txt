 Fixes Summary of Changes Fixed duration order consistency when multiplying number by time unit in conngo Description When web socket client disconnect due to network off server not able to notify immediately Server getting read time out error after specific amount of timeapprox minutes Versions go version go socket connection Gorilla websocket My Code block for writing message to client err cConnWriteJSONmessage if err nil logPrintlnoffline test before adding offline msg to db message databaseStoreOfflineMessagesmessage cConnClose When writing message to client if any error come those messages will be store in databaseSo when there is network off at client side and if any other client send message to client which has no network server will still assuming that client is alive and sending messagesBecause of that some data loss is happening Is there any solution to handle this in gorilla websocket Fixes a couple of small typos in the example test docs Summary of Changes Use empty struct instead of boolean for write protection on connection Motivation Using empty struct for signaling is more idiomatic compared to booleans because users might wonder what happens on false or true Empty struct removes this problem There is also a side benefit of occupying less memory but it should be negligible in this case Summary of Changes input autofocus im too lazy to move my mouse The print function adds text as innerHTML but the text is not HTML Use textContent instead Xnip Describe the problem youre having According to you have answered The error indicates that the client did not set the framemasked header bit to as required by the protocol According to the protocol All frames sent from client to server have this bit set to The RFC protocol does not mention the following situation sending frames from client to server over TLS Sending and handling mask on top of those frames is unnecessary Also Sending frames from client to server without mask can be done for example in node js that do not enforce this Do you have any suggestion to this missing implementation Versions Go version go version package version run git revparse HEAD inside the repo Show me the code A minimal code snippet can be useful otherwise were left guessing Handle frame masking if mask cisServer return noFrame chandleProtocolErrorincorrect mask flag Hint wrap it with backticks to format it 