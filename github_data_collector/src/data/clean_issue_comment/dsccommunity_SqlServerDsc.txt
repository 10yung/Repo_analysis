Details of the scenario you tried and the problem that is occurring SqlRSSetup does not contain SvcAccount parameter similar to RSSvcAccount in SQLSetup We need to be able to specify a service account during install The DSC configuration that is using the resource as detailed as possible na Version of the Operating System SQL Server and PowerShell the DSC Target Node is running Microsoft SQL Server Reporting Services What module SqlServer or SQLPS and which version of the module the DSC Target Node is running na Version of the DSC module youre using or dev if youre using current dev branch Pull Request PR description Added verbose messages to measure the time it takes to run the tests This Pull Request PR fixes the following issues Preparation for issue Task list To aid community reviewers in reviewing and merging your PR please take the time to run through the below checklist and make sure your PR has everything updated as required Change to x for each task in the task list that applies to your PR For those task that dont apply to you PR leave those as is x Added an entry to the change log under the Unreleased section of the file CHANGELOGmd Entry should say what was changed and how that affects users if applicable and reference the issue being resolved if applicable Resource documentation addedupdated in READMEmd Resource parameter descriptions addedupdated in READMEmd schemamof and commentbased help Commentbased help addedupdated Localization strings addedupdated in all localization files as appropriate Examples appropriately addedupdated Unit tests addedupdated See DSC Community Testing Guidelines Integration tests addedupdated where possible See DSC Community Testing Guidelines x Newchanged code adheres to DSC Community Style Guidelines Reviewablestart This change is img src height alignabsmiddle altReviewable Reviewableend At present this SqlServerDsc PowerShell module is consistently using a part version eg Unfortunately when using the Microsoftrecommended approach to copyingduplicatingrepublishing a PowerShell module the version of the SqlServerDsc module published to the localinternal repository omits the final zero eg becomes presumably on the basis that this adds nolittle valuemeaning to the version of the module Seemingly there are some aspects of PowerShellGet and PowerShell module management and dependency management that treat and the same and other areas that treat them as different values so ensuring these are identical is important Is there any need for the SqlServerDsc PowerShell module to be published to the public PowerShell Gallery with the final zero Can the public published version please be updated to a part version if the final part is going to be zero to removereduce this downstream version adjustment problem from future versions going forward for anybody that may consumereuse this module in their own private PowerShell repositoriesgalleries Hi We are setting a SQL Server Failover Cluster in Azure with VMs We are wanting to use an Azure Storage Account setup as a FileShare This is very similar to the setup defined in the Microsoft Docs here The SqlServer DSC block is as follows SqlSetup ConfigureSqlServerWithAlwaysOn SourcePath NodeSqlSetupSourceFiles ForceReboot true Action InstallFailoverCluster SQLSvcAccount SQLServicecreds InstanceName NodeSqlInstanceName Features NodeSqlSetupFeatures SQLCollation NodeSqlCollation SecurityMode NodeSqlSecurityMode SQLTempDBDir NodeSqlUserTempDbDataDir SQLTempDBLogDir NodeSqlUserTempDbLogsDir SQLBackupDir NodeSqlUserBackupDir SQLUserDBDir NodeSqlUserDbDir SQLUserDBLogDir NodeSqlUserLogsDir InstallSQLDataDir NodeSqlUserDbDir ProductKey NodeSqlProductKey SQMReporting true ErrorReporting true SAPwd AgtSvcAccount SQLServicecreds SQLSysAdminAccounts NodeSqlSysAdminAccounts UpdateEnabled NodeSqlUpdateEnabled FailoverClusterGroupName NodeSqlClusterGroupName FailoverClusterNetworkName NodeSqlClusterNetworkName FailoverClusterIPAddress NodeSqlClusterIpAddress PsDscRunAsCredential DomainCreds DependsOn Computer DomainJoin WindowsFeature FailoverClusterTools We are using configuration data an extract is shown below SqlUserDbDir lthtuksppmdevsdclusterfilecorewindowsnet sqldata Data SqlUserLogsDir lthtuksppmdevsdclusterfilecorewindowsnet sqllogs Logs SqlUserTempDbDataDir lthtuksppmdevsdclusterfilecorewindowsnet sqldata TempDb SqlUserTempDbLogsDir lthtuksppmdevsdclusterfilecorewindowsnet sqllogs TempDb SqlUserBackupDir lthtuksppmdevsdclusterfilecorewindowsnet sqldata backup So the SqlSetup section when running fails with the following VERBOSE ppmazsdsqlsql LCM End Set SqlSetup ConfigureSqlServerWithAlwaysOn in seconds PowerShell DSC resource MSFTSqlSetup failed to execute SetTargetResource functionality with error message SystemException Unable to map the specified paths to valid cluster storage Drives mapped An extract of the logs are shown below VERBOSE ppmazsdsqlsql SqlSetup ConfigureSqlServerWithAlwaysOn The feature ADVSSMS is already installed so it will not be installed again VERBOSE ppmazsdsqlsql SqlSetup ConfigureSqlServerWithAlwaysOn Found assigned parameter InstallSQLDataDir Adding path lthtuksppmdevsdclusterfilecore windowsnet sqldata Data to list of paths that required cluster drive VERBOSE ppmazsdsqlsql SqlSetup ConfigureSqlServerWithAlwaysOn Found assigned parameter SQLUserDBDir Adding path lthtuksppmdevsdclusterfilecorewind owsnet sqldata Data to list of paths that required cluster drive VERBOSE ppmazsdsqlsql SqlSetup ConfigureSqlServerWithAlwaysOn Found assigned parameter SQLUserDBLogDir Adding path lthtuksppmdevsdclusterfilecorew indowsnet sqllogs Logs to list of paths that required cluster drive VERBOSE ppmazsdsqlsql SqlSetup ConfigureSqlServerWithAlwaysOn Found assigned parameter SQLTempDBDir Adding path lthtuksppmdevsdclusterfilecorewind owsnet sqldata TempDb to list of paths that required cluster drive VERBOSE ppmazsdsqlsql SqlSetup ConfigureSqlServerWithAlwaysOn Found assigned parameter SQLTempDBLogDir Adding path lthtuksppmdevsdclusterfilecorew indowsnet sqllogs TempDb to list of paths that required cluster drive VERBOSE ppmazsdsqlsql SqlSetup ConfigureSqlServerWithAlwaysOn Found assigned parameter SQLBackupDir Adding path lthtuksppmdevsdclusterfilecorewind owsnet sqldata backup to list of paths that required cluster drive VERBOSE ppmazsdsqlsql SqlSetup ConfigureSqlServerWithAlwaysOn Perform operation Query CimInstances with following parameters queryExpression SELECT FROM MSClusterResourceGroup WHERE Name Available StoragequeryDialect WQLnamespaceName rootMSCluster VERBOSE ppmazsdsqlsql SqlSetup ConfigureSqlServerWithAlwaysOn Perform operation Enumerate Associated CimInstances with following parameters sourceRole sourceInstance MSClusterResourceGroup Name Available StorageassociationClassName MSClusterResourceGroupToResourcenamespaceName rootMSClusterresultClassName MS ClusterResourceresultRole VERBOSE ppmazsdsqlsql SqlSetup ConfigureSqlServerWithAlwaysOn Operation Query CimInstances complete VERBOSE ppmazsdsqlsql SqlSetup ConfigureSqlServerWithAlwaysOn Operation Enumerate Associated CimInstances complete VERBOSE ppmazsdsqlsql SqlSetup ConfigureSqlServerWithAlwaysOn Perform operation Enumerate CimInstances with following parameters namespaceName root MSClusterclassName MSClusterClusterSharedVolume VERBOSE ppmazsdsqlsql SqlSetup ConfigureSqlServerWithAlwaysOn Operation Enumerate CimInstances complete VERBOSE ppmazsdsqlsql LCM End Set SqlSetup ConfigureSqlServerWithAlwaysOn in seconds PowerShell DSC resource MSFTSqlSetup failed to execute SetTargetResource functionality with error message SystemException Unable to map the specified paths to valid cluster storage Drives mapped CategoryInfo InvalidOperation CimException FullyQualifiedErrorId ProviderOperationExecutionFailure PSComputerName ppmazsdsqlsql So I understand what it is saying that Sql Setup cannot find the file share as part of a Cluster Disk which is correct Am I missing something but this configuration should be ok When setting this up via the SQL Server Setup UI a warning is displayed but you can continue Is there a way to override and Force the installation to continue Thanks for your help Cheers Simon Your feedback and support is greatly appreciated thanks for contributing Hi just wondering if this repository has a script to wait or checking for additional AG replica like that of SqlWaitForAG I would like to have a checking if nodes or more Primary and Seconday are already added as replicas in the same AG group Tried with SqlAGReplica but the script will only add replica as new node in the AG group Thanks Your feedback and support is greatly appreciated thanks for contributing Hi I am getting Error An internal error occurred upon executing SqlAGDatabase script in the Primary node The backuppath is already existing via UNC Does anyone bumped on the same error sqlagdatabaseAGDatabase ensure Present databasename myAGDatabase servername hostname instancename MSSQLSERVER availabilitygroupname AGGroup backuppath myserver mySQLBackup force true isactivenode true Just to add I get this error whenever I run the script without a Secondary node in AG group only Primary I have separate script for Primary and Secondary nodes AG stuffs I think it is somehow related with the but am having issue in the first run I have to relate my other open issue here I can successfully add AG Databases if and only if the Secondary node exists Any idea how to make SqlAGDatabase wait for a secondary replica added in AG prior to running Thanks Details of the scenario you tried and the problem that is occurring Deploying SQL using DSC push and MSA and analysis services will not start The MSA account does get added to the correct OLAP local group however that group is only added to P data MSOLAP ACL with full access and apparently for AS to start it needs to be in P data Adding to the P data ACL manually lets AS start with no issues P data is a mounted volume btw Additionally tried deploying with builtin accounts NT SERVICE MSSQLSERVEROLAPSERVICE and ran into the same problem Verbose logs showing the problem VERBOSE TESTSERVER SqlSetup InstallDefaultInstance OPSQLBase SQLBase Connected to SQL instance TESTSERVER SQLCOMMON VERBOSE TESTSERVER SqlSetup InstallDefaultInstance OPSQLBase SQLBase Clustered instance not detected VERBOSE TESTSERVER SqlSetup InstallDefaultInstance OPSQLBase SQLBase Detecting Fulltext feature VERBOSE TESTSERVER SqlSetup InstallDefaultInstance OPSQLBase SQLBase Fulltext feature not detected VERBOSE TESTSERVER SqlSetup InstallDefaultInstance OPSQLBase SQLBase Detecting Reporting Services feature VERBOSE TESTSERVER SqlSetup InstallDefaultInstance OPSQLBase SQLBase Reporting Services feature not detected VERBOSE TESTSERVER SqlSetup InstallDefaultInstance OPSQLBase SQLBase Detecting Analysis Services feature VERBOSE TESTSERVER SqlSetup InstallDefaultInstance OPSQLBase SQLBase Analysis Services feature detected VERBOSE TESTSERVER SqlSetup InstallDefaultInstance OPSQLBase SQLBase Perform operation Query CimInstances with following parameters queryExpression SELECT FROM Win Service WHERE Name MSSQLServerOLAPServicequeryDialect WQLnamespaceName root cimv VERBOSE TESTSERVER SqlSetup InstallDefaultInstance OPSQLBase SQLBase Operation Query CimInstances complete VERBOSE TESTSERVER LCM End Test SqlSetup InstallDefaultInstance OPSQLBase SQLBase in seconds PowerShell DSC resource MSFTSqlSetup failed to execute TestTargetResource functionality with error message SystemInvalidOperationException Failed to connected to Analysis Services instance TESTSERVER SQLCOMMON SystemManagementAutomationMethodInvocationException Exception calling Connect with arguments A connection cannot be made Ensure that the server is running MicrosoftAnalysisServicesConnectionException A connection cannot be made Ensure that the server is running SystemNetSocketsSocketException No connection could be made because the target machine actively refused it at SystemNetSocketsTcpClientctorString hostname Int port at MicrosoftAnalysisServicesXmlaClientGetTcpClientConnectionInfo connectionInfo End of inner exception stack trace at MicrosoftAnalysisServicesXmlaClientOpenConnectionConnectionInfo connectionInfo Boolean isSessionTokenNeeded at MicrosoftAnalysisServicesXmlaClientConnectConnectionInfo connectionInfo Boolean beginSession at MicrosoftAnalysisServicesCoreServerConnectString connectionString String sessionId ObjectExpansion expansionType at MicrosoftAnalysisServicesCoreServerConnectString connectionString at CallSiteTargetClosure CallSite Object Object End of inner exception stack trace at SystemManagementAutomationExceptionHandlingOpsCheckActionPreferenceFunctionContext funcContext Exception exception at SystemManagementAutomationInterpreterActionCallInstruction RunInterpretedFrame frame at SystemManagementAutomationInterpreterEnterTryCatchFinallyInstructionRunInterpretedFrame frame at SystemManagementAutomationInterpreterEnterTryCatchFinallyInstructionRunInterpretedFrame frame End of inner exception stack trace CategoryInfo InvalidOperation CimException FullyQualifiedErrorId ProviderOperationExecutionFailure PSComputerName TESTSERVER Suggested solution to the issue na The DSC configuration that is used to reproduce the issue as detailed as possible powershell SqlSetup InstallDefaultInstance InstanceName MSSQLSERVER Features Nodesqlfeatures SQLCollation Nodecollation SQLSvcAccount NodeSqlServiceCredential SQLSvcStartupType NodeSqlSvcStartupType AgtSvcAccount NodeSqlAgentServiceCredential RSSvcAccount NodeSqlReportingServiceCredential ISSvcAccount NodeSqlIntegrationServiceCredential ASSvcAccount NodeSqlAnalysisServiceCredential FTSvcAccount NodeSqlFTSearchServiceCredential SQLSysAdminAccounts DOMAIN Group ASSysAdminAccounts DOMAIN Group InstallSharedDir C Program Files Microsoft SQL Server InstallSharedWOWDir C Program Files x Microsoft SQL Server InstanceDir C Program Files Microsoft SQL Server InstallSQLDataDir NodeDataVolume SQLUserDBDir NodeDataVolume MSSQL SQLUserDBLogDir NodeLogVolume MSSQL SQLTempDBDir NodeTempdbVolume MSSQL SQLTempDBLogDir NodeTempdbVolume MSSQL SQLBackupDir NodeDataVolume Backup ASServerMode TABULAR ASConfigDir NodeDataVolume MSOLAP Config ASDataDir NodeDataVolume MSOLAP ASLogDir NodeLogVolume MSOLAP ASBackupDir NodeDataVolume MSOLAP Backup ASTempDir NodeTempdbVolume MSOLAP SourcePath JoinPath NodeDestTempPath childpath NodeSQLVersion UpdateEnabled True UpdateSource JoinPath NodeDestTempPath childpath NodeUpdatesFolder ForceReboot true PsDscRunAsCredential NodeSqlInstallCredential SQL Server edition and version the target node is running Microsoft SQL Server RTMCU KB X Mar Copyright C Microsoft Corporation Enterprise Edition Corebased Licensing bit on Windows Server Standard X Build Hypervisor SQL Server PowerShell modules present on the target node Name Version Path SQLPS C Program Files x Microsoft SQL Server Tools PowerShell Modules SQLPS SQLPSpsd The operating system the target node is running OsName Microsoft Windows Server Standard OsOperatingSystemSKU StandardServerEdition OsArchitecture bit WindowsBuildLabEx amd frers release OsLanguage enUS OsMuiLanguages enUS Version and build of PowerShell the target node is running Name Value PSVersion PSEdition Desktop PSCompatibleVersions BuildVersion CLRVersion WSManStackVersion PSRemotingProtocolVersion SerializationVersion Version of the DSC module that was used dev if using current dev branch Name Version Path SqlServerDsc C Program Files WindowsPowerShell Modules SqlServerDsc SqlServerDscpsd The unit tests have always been running too long this is due to the tests are too complex and the code being tested need to be broken down into smaller units see issue Recently this issue has gotten worse and the tests run so long so that the CI cant complete before the timeout of hours We need to refactor code in the offending resources and make sure the test runs optimally Details of the scenario you tried and the problem that is occurring Im using the SqlSetup DSC resource to install a multinode SQL cluster The primary node uses the InstallFailoverCluster Action parameter while the secondary nodes use the AddNode Action This works fine on an initial install However subsequent runs of the same code on the primary node fails The SqlSetup resource runs through its Test function and then reports that the FailoverClusterIPAddress is not in the desired state for this cluster Of course it then starts the Set function IMHO it shouldnt Even if SQL is now active on another node in the cluster the Test should still return that everything is in the desired state The SQLSetup resource proceeds to execute the Set function but then that fails because Set also runs a Test and they dont agree Note My code also includes a DSC Script that adds the IPs on the secondary nodes assigned for the SQL cluster as dependencies on the SQL Network cluster resource eg img width altScreen Shot at AM src FWIW subsequent runs on the secondary nodes AddNode action works just fine Verbose logs showing the problem FailoverClusterIPAddress is not in the desired state VERBOSE AUE SQL D SqlSetup InstallPrimaryInstance Clustered install checking parameters VERBOSE AUE SQL D SqlSetup InstallPrimaryInstance FailoverClusterIPAddress is not in the desired state for this cluster VERBOSE AUE SQL D LCM End Test SqlSetup InstallPrimaryInstance in seconds VERBOSE AUE SQL D LCM Start Set SqlSetup InstallPrimaryInstance Set function fails because it doesnt match the Test PowerShell DSC resource MSFTSqlSetup failed to execute SetTargetResource functionality with error message SystemException TestTargetResource function returned false when SetTargetResource function verified the desired state This indicates that the SetTargetResource did not correctly set set the desired state or that the function TestTargetResource does not correctly evaluate the desired state Suggested solution to the issue The DSC configuration that is used to reproduce the issue as detailed as possible powershell SqlSetup InstallPrimaryInstance Action InstallFailoverCluster ForceReboot false UpdateEnabled False SourcePath localhost MSSQLmedia SourceCredential is only included to force the installer to first copy the media to a local location Installation from a remote share does not work consistently SourceCredential ADCredentials InstanceName SQLInstanceName Features SQLENGINEReplicationFullTextDQ InstallSharedDir C Program Files Microsoft SQL Server InstallSharedWOWDir C Program Files x Microsoft SQL Server InstanceDir C Program Files Microsoft SQL Server SQLCollation SQLLatin GeneralCP CIAS SQLSvcAccount SQLPSCredentials AgtSvcAccount SQLPSCredentials SQLSysAdminAccounts DomainAdminUser SQLAdminUserAD Using Cluster Shared Volume InstallSQLDataDir C ClusterStorage SQL FailoverClusterNetworkName SQLClusterNetworkName FailoverClusterIpAddress SQLClusterIP PsDscRunAsCredential ADCredentials DependsOn WindowsFeature NetFramework WindowsFeature NetFramework xSmbShare MSSQLMedia SQL Server edition and version the target node is running Enterprise Edition SQL Server PowerShell modules present on the target node Name Version Path SqlServer C Program Files WindowsPowerShell Modules SqlServer SqlServerpsd SQLPS C Program Files x Microsoft SQL Server Tools PowerShell Modules SQLPS SQLPSpsd The operating system the target node is running OsName Microsoft Windows Server Datacenter OsOperatingSystemSKU DatacenterServerEdition OsArchitecture bit WindowsVersion WindowsBuildLabEx amd frers release OsLanguage enUS OsMuiLanguages enUS Version and build of PowerShell the target node is running Name Value PSVersion PSEdition Desktop PSCompatibleVersions BuildVersion CLRVersion WSManStackVersion PSRemotingProtocolVersion SerializationVersion Version of the DSC module that was used dev if using current dev branch SqlServerDsc C Program Files WindowsPowerShell Modules SqlServerDsc SqlServerDscpsd Details of the scenario you tried and the problem that is occurring I am using SqlAGDatabase with the windsc module in Ansible in order to add the databases to the AG When i try to add the database already in sync in the AG between WINPRI primary and SECWIN secondary in the nd replica SECWIN using the SqlAGDatabase it gets added but does not sync The DSC configuration that is used to reproduce the issue as detailed as possible powershell SqlAGDatabase TestAGDatabaseMemberships AvailabilityGroupName NodeAvailabilityGroupName BackupPath SQL AgInitialize DatabaseName DB AdventureWorks InstanceName NodeInstanceName ServerName NodeNodeName Ensure Present ProcessOnlyOnActiveNode true PsDscRunAsCredential SqlAdministratorCredential But the above i am passing as below via Ansible name Add Database to Always On Availability Group in WINSER windsc resourcename SqlAGDatabase DatabaseName D Test ServerName WINSER InstanceName MSSQLSERVER AvailabilityGroupName TESTAG BackupPath WINSER backupdemo Ensure Present ReplaceExisting true SQL Server edition and version the target node is running Microsoft SQL Server SP KB X SQL Server PowerShell modules present on the target node Name Version Path SqlServer C Program Files WindowsPowerShell Modules SqlServer SqlServerpsd SQLPS C Program Files x Microsoft SQL Server Tools PowerShell Modules SQLPS SQLPSpsd The operating system the target node is running OsName Microsoft Windows Server R Datacenter OsOperatingSystemSKU DatacenterServerEdition OsArchitecture bit WindowsBuildLabEx amd frewinbluer OsLanguage enUS OsMuiLanguages enUS Version and build of PowerShell the target node is running Name Value PSVersion PSEdition Desktop PSCompatibleVersions BuildVersion CLRVersion WSManStackVersion PSRemotingProtocolVersion SerializationVersion Version of the DSC module that was used dev if using current dev branch Name Version Path SqlServerDsc C Program Files WindowsPowerShell Modules SqlServerDsc SqlServerDscpsd img width altissue src 