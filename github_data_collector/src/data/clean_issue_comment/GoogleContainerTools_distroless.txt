Hi all Is there a timeframe for promoting the Python base containers from experimental to production ready In distrolesspythong debian latest python suffers the following published CVEs Seems the python debian is not picking up the fixes for CVEs along side the Debian Buster release cycle as these are fixed in deb u EDIT python debian latest also suffers CVE and CVE in libncursesw deb u Both are fixed in in Debian Buster in libncursesw deb u Testing with gcriodistrolesspython debian sha a a c e e ae c d c fee b aeba c b d debug from th October bash python Python default Apr GCC on linux Type help copyright credits or license for more information import gzip import shutil with gzipopenusrsharedocpython minimalchangelogDebiangz as fin with openusrsharedocpython minimalchangelogDebian wb as fout shutilcopyfileobjfin fout cd usrsharedocpython minimal ls READMEDebian changelogDebian changelogDebiangz copyright cat changelogDebian python unstable urgencyhigh Matthias Klose CVE Fix issue Add check for characters in netloc that normalize to separators Closes CVE Fix issue Stop urllib exposing the localfile schema file Dimitri John Ledkov Bump BuildDepedency and Dependency of libssldev and libss to or higher As TLS constants leak into ssl module thus one shouldnt mix and match python libssl LP Matthias Klose dokodebianorg Sat Apr Testing with python installed on debianbuster bash gunzip usrsharedocpython minimalchangelogDebiangz head n usrsharedocpython minimalchangelogDebian head n changelogDebian python deb u buster urgencymedium CVE CVE CVE Closes CVE CVE CVE Moritz M hlenhoff jmmdebianorg Fri Oct python unstable urgencyhigh Matthias Klose CVE Fix issue Add check for characters in netloc that normalize to separators Closes CVE Fix issue Stop urllib exposing the localfile schema file Dimitri John Ledkov Bump BuildDepedency and Dependency of libssldev and libss to or higher As TLS constants leak into ssl module thus one shouldnt mix and match python libssl LP Matthias Klose dokodebianorg Sat Apr It would be very useful if it were easier to add custom ca certs PR aims to do that Failed to execute goal comgooglecloudtoolsjibmavenplugin build default on project tdprovider Tried to pull image manifest for gcriodistrolessjavadebian latest but failed because Failed to fetch latest from request v distrolessjavadebian manifestslatest If this is a bug please file an issue at Not Found with the full openjdk is included in the debug image to get the debug binarys This increases the size from to MB Is it neccesary include the full jdk with alls sources modules etc maybe its better to only include the binarys itself only a few MB What do you think I tested this manuelly and it does work While looking to adopt distroless for an application I wanted to know how to run my application as a non root user It took me a while to discover that there is a nonroot and nobody uidgid in the images Document the availability of nonroot and nobody Also document the differences between them and when they should be used v Release Notes Custom jre built with jlink provides substantial image size reduction In Our custom base image were trying to use distroless base as a base image for jlink but it seems is missing important libraries which are java specific like fontconfig as eg was reported here Cant we make a distroless java dependency hierarchy two level instead of one level ie instead of base java make it base javabase java where javabase includes required native libs but does not include jre itself It looks like the latest version is not labeled on GCR Ive already cleaned up the BUILD file in that can now publish Java Debian images Now I only need to do this on the cloudbuildyaml file and we should be good However I realized the problem that cloudbuildyaml cannot have more than steps donmccasland can we break it up into two files cloudbuild yaml and cloudbuild yaml