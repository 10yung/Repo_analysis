The order fixtures are applied appears to have changed become indeterminate in pytest which breaks the overriding of mpltestsettings that we were doing in testbackendqt This moves the skipping logic to mpltestsettings but leaves the importing of QtCore in the qtcore fixture This is a follow on to that should work for all versions of pytest Backport PR TST something changed in pytest that breaks our qt fixtures PR Summary Redo of Lots of discussion there Suppose lenx is N leny is M and sizeC is M N Previously if shadingflat then pcolormesh would silently drop the last row and column of C and x and y would specify the edges of the colorer quadrilaterals While compatible with Matlab this is both arbitrary and probably not what the user wanted This PR changes a few related things if shadingflat and the dimensions of x y and C match a Deprecation Warning is raised the data is no longer silently dropped A new shadingnearest is provided that only allows for x y and C to match and centers the colors on the grid points A new shadingauto is provided that will choose flat or nearest depending on the size of the data A new rcParam pcolorshading is provided that defaults to flat for back compatibility Demo python import numpy as np import matplotlibpyplot as plt fig axs pltsubplots sharexTrue shareyTrue nx ny x nparangenx y nparangeny X Y npmeshgridx y nprandomseed C nprandomrandny nx deprecation warning axs pcolormeshx y C vmin vmax shadingflat axs scatterX Y cCflat ecw axs settitleflat Emits deprecation warning no deprecation warning axs pcolormeshx y C vmin vmax shadingflat axs scatterX Y cCflat ecw axs settitleflat No warning no deprecation warning axs pcolormeshx y C shadingnearest vmin vmax axs scatterX Y cCflat ecw axs settitlenearest no deprecation warning axs pcolormeshx y C shadinggouraud vmin vmax axs scatterX Y cCflat ecw axs settitlegouraud axs setxlim axs setylim no deprecation warning axs pcolormeshx y C vmin vmax shadingauto axs scatterX Y cCflat ecw axs settitleauto matching size no deprecation warning axs pcolormeshx y C vmin vmax shadingauto axs scatterX Y cCflat ecw axs settitleauto c smaller The first call emits testpcolormeshpy MatplotlibDeprecationWarning shadingflat when X and Y have the same dimensions as C is deprecated since Either specify the corners of the quadrilaterals with X and Y or pass shadingauto nearest or gouraud or set rcParams pcolorshading axs pcolormeshx y C vmin vmax shadingflat pcolor PR Checklist Has Pytest style unit tests Code is Flake compliant New features are documented with examples if plot related Documentation is sphinx and numpydoc compliant Added an entry to docusersnextwhatsnew if major new feature follow instructions in READMErst there Documented in docapiapichangesrst if API changed in a backwardincompatible way Thank you so much for your PR To help us review your contribution please consider the following points A development guide is available at Help with git and github is available at Do not create the PR out of master but out of a separate branch The PR title should summarize the changes for example Raise ValueError on nonnumeric input to setxlim Avoid nondescriptive titles such as Addresses issue The summary should provide at least sentences describing the pull request in detail Why is this change required What problem does it solve and link to any relevant issues If you are contributing fixes to docstrings please pay attention to In particular note the difference between using single backquotes double backquotes and asterisks in the markup We understand that PRs can sometimes be overwhelming especially as the reviews start coming in Please let us know if the reviews are unclear or the recommended next step seems overly demanding if you would like help in addressing a reviewers comments or if you have been waiting too long to hear back on your PR PR Summary Backport of PR Summary This is the first step of It currently looks like this grafik The contents will be adapted during the following steps To help us understand and resolve your issue please fill out the form to the best of your ability You can feel free to delete the sections that do not apply I would like to move the version links on the main page to the sidebar Similar to exact format to be detemined grafik I propose to reuse the existing versionshtml with adapted so that older versions of the page still can show uptodate version information This can be handled in separate steps for which I plan to make dedicated PRs Move the version snippet to the sidebar For update the EOL announcement For x remove the EOL announcement Update the contents of versionstxt To help us understand and resolve your issue please fill out the form to the best of your ability You can feel free to delete the sections that do not apply Bug report Bug summary A short sentences that succinctly describes the bug spy always draws with the origin in the upper left corner if marker is not None even if originlower is provided as a keyword argument Code for reproduction A minimum code snippet required to reproduce the bug Please make sure to minimize the number of dependencies required and provide any necessary plotted data Avoid using threads as Matplotlib is explicitly not threadsafe python points npzeros points fig ax pltsubplots axspypoints marker originlower Actual outcome spypointmarker After this point the origin appears to be fixed in the upper left corner Any subsequent commands imshow spy seem to ignore originlower The output produced by the above code which may be a screenshot console output etc Expected outcome A description of the expected outcome from the code snippet If this used to work in an earlier version of Matplotlib please note the version it used to work on Note that axspypoints originlower omitting the marker argument works properly spydefaultmarker Though its worth pointing out that the xaxis ticks and labels always end up in upper spine not the lower one regardless of originupper or originlower The behavior of imshow is a bit different If originlower the ticks and labels are moved to the bottom The documentation for spy notes that If Z is a scipysparsespmatrix or marker or markersize are None a matplotliblinesLine D object will be returned with the value of marker determining the marker type and any remaining kwargs passed to Axesplot So that seems to explain why including marker changes the functions behavior Matplotlib version Please specify your platform and versions of the relevant libraries you are using Operating system Centos Matplotlib version Matplotlib backend printmatplotlibgetbackend Qt Agg Python version Jupyter version if applicable Other libraries Please tell us how you installed matplotlib and python eg from source pip conda If you installed from conda please specify which channel you used if not the default Installed using anaconda Looks like unless Ive missed a shorter route with the master docs to access the API changes you need to click on Documentation top menu API Overview find the small inconspicuous See also the API Changes link and possibly then again the small Old API changes link and I only figured that out because I grepped the source It doesnt have to be toplevel but this seems a bit too well hidden to me PR Summary This provides two fixes for which independently fix the reported bug The first merges segments when iterating through the paths the second ensures that a length segment intersects with no other segment rather than all or maybe just some segments The length segment not intersecting any segments including ones it is a point on matches the behavior of shapely attn TarasKuzyo PR Checklist x Has Pytest style unit tests x Code is Flake compliant Thank you so much for your PR To help us review your contribution please consider the following points A development guide is available at Help with git and github is available at Do not create the PR out of master but out of a separate branch The PR title should summarize the changes for example Raise ValueError on nonnumeric input to setxlim Avoid nondescriptive titles such as Addresses issue The summary should provide at least sentences describing the pull request in detail Why is this change required What problem does it solve and link to any relevant issues If you are contributing fixes to docstrings please pay attention to In particular note the difference between using single backquotes double backquotes and asterisks in the markup We understand that PRs can sometimes be overwhelming especially as the reviews start coming in Please let us know if the reviews are unclear or the recommended next step seems overly demanding if you would like help in addressing a reviewers comments or if you have been waiting too long to hear back on your PR None