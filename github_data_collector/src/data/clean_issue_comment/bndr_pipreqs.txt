Pipreqs does not seem to be able to infer the googlecloudtranslate package from the import that is suggested in the package instructions from googlecloud import translate Operating system and version WSL running Ubuntu on Windows Python Steps to reproduce Create new python file Import google translate via from googlecloud import translate run pipreqs The package will not be found in the requirementstxt A numpy subfolder in the project hides the numpy pypi package from requirementstxt even if empty and nonfunctional Repro steps mkdir temp cd temp echo import matplotlib bugpy echo import numpy bugpy echo printnumpyversion bugpy py bugpy pipreqs print mkdir numpy py bugpy pipreqs print Expected after the second run matplotlib numpy Actual matplotlib Feature request A cool new feature would be to also crawl Jupyter Notebooks for import statements Pipreqs was failing with UnicodeDecodeError without indicating the filename that caused the error The root case was PipEnvs venv folder was being processed This PR adds venv to directories to ignore and moves the code that reads the file to process inside the trycatch block in order to log the filename that caused the issue The file that caused the failure was UsersXXXXXdevXXXXXvenvlibpython sitepackagesIPythoncoretestsnonasciipy and the terminal output was pipreqs debug Traceback most recent call last File UsersXXXXXdevXXXXXvenvbinpipreqs line in module sysexitmain File UsersXXXXXdevXXXXXvenvlibpython sitepackagespipreqspipreqspy line in main initargs File UsersXXXXXdevXXXXXvenvlibpython sitepackagespipreqspipreqspy line in init followlinksfollowlinks File UsersXXXXXdevXXXXXvenvlibpython sitepackagespipreqspipreqspy line in getallimports contents fread File UsersXXXXXdevXXXXXvenvbinlibpython codecspy line in decode result consumed selfbufferdecodedata selferrors final UnicodeDecodeError utf codec cant decode byte xb in position invalid start bytedatetime Although pipreqs would have worked properly adding ignore venv flag the user would not easily know where it was failing My environment is MacOS Python pipreqs Hi all I am trying to run pipreqs on my repository I run into a problem when I use the uselocal flag Ive checked the code and it seems that there is a small discrepancy between the two modes when trying to get a package that is in the mapping file In my example I am missing the scikitlearn package which is installed as scikitlearn but is imported as sklearn Adding to the problem is the sklearn package on PyPi which is deprecated Of course you are familiar with this In the normal mode where PyPi is being queried the candidates are mapped to their respective counterpart sklearn is mapped to scikitlearn or scikitlearn This works in the online mode where PyPi is queried This fails in the uselocal mode because getlocallyinstalledpackages returns the following for this package sklearn version name scikitlearn In the following step for the uselocal mode it will check if it can find the package in the keys if this dict But sklearn has been mapped to scikitlearn so it will not find it in the dict and it will return an empty requirementstxt When I remove line from the mapping file which contains sklearnscikitlearn then it works with the uselocal mode but it fails with it Without that flag it will return a requirementstxt with two entries scikitlearn and sklearn Of course this is unwanted behaviour Ive make a hotfix for the uselocal flag but I think the code should be aligned for both modes My suggestion for the hotfix is to change the behaviour of the getimportlocal function from python def getimportlocalimports encodingNone local getlocallyinstalledpackages result for item in imports if itemlower in local resultappendlocal itemlower removing duplicates of packageversion resultunique dictt for t in set tupleditems for d in result return resultunique to python def getimportlocalimports encodingNone local getlocallyinstalledpackages result for item in imports for pkg attributes in localitems if item pkglower or item attributes name lower resultappendlocal pkg break removing duplicates of packageversion resultunique dictt for t in set tupleditems for d in result return resultunique It seems that for sklearn the name and the pkg name are interchangeable I assume this to happen in more packages therefore a check if the import is in the keys or as the name of the package makes sense but I dont know much about the inner workings of pip so any suggestions are welcome Let me know what you think I am working on a MacBook Pro with conda python pipreqs This code shows how colourscience is detected as colour pip install colourscience echo import colour bugpy echo printcolourversion bugpy python bugpy pipreqs print ERROR Failed on file src action browserpy Traceback most recent call last File e installedprograms continuum anaconda lib runpypy line in runmoduleasmain main fname loader pkgname File e installedprograms continuum anaconda lib runpypy line in runcode exec code in runglobals File E installedprograms Continuum Anaconda Scripts pipreqsexe mainpy line in module File e installedprograms continuum anaconda lib sitepackages pipreqs pipreqspy line in main initargs File e installedprograms continuum anaconda lib sitepackages pipreqs pipreqspy line in init extraignoredirsextraignoredirs File e installedprograms continuum anaconda lib sitepackages pipreqs pipreqspy line in getallimports raise exc File unknown line record jsonospathjoinconfigbiilinfodirtoday fselftitlejson infodata daytoday SyntaxError invalid syntax This is close to but I dont think that is resolved I have the following setup Main fold apy fold fold bpy fold fold cpy if I do pipreqs in Main the imports from bpy or cpy do not show up I needed to do separately pipreqs mainfold and mainfold fold add apacheairflow instead of airflow to requirementstxt See For packages that import airflow eg Collecting airflow Downloading ERROR Command errored out with exit status command optcondaenvscortexbinpython c import sys setuptools tokenize sysargv tmppipinstall i f airflowsetuppy filetmppipinstall i f airflowsetuppyfgetattrtokenize open openfilecodefreadreplace r n nfcloseexeccompilecode file exec egginfo eggbase tmppipinstall i f airflowpipegginfo cwd tmppipinstall i f airflow Complete output lines running egginfo creating tmppipinstall i f airflowpipegginfoairflowegginfo writing tmppipinstall i f airflowpipegginfoairflowegginfoPKGINFO writing dependencylinks to tmppipinstall i f airflowpipegginfoairflowegginfodependencylinkstxt writing toplevel names to tmppipinstall i f airflowpipegginfoairflowegginfotopleveltxt writing manifest file tmppipinstall i f airflowpipegginfoairflowegginfoSOURCEStxt reading manifest file tmppipinstall i f airflowpipegginfoairflowegginfoSOURCEStxt writing manifest file tmppipinstall i f airflowpipegginfoairflowegginfoSOURCEStxt Traceback most recent call last File string line in module File tmppipinstall i f airflowsetuppy line in module raise RuntimeErrorPlease install package apacheairflow instead of airflow RuntimeError Please install package apacheairflow instead of airflow ERROR Command errored out with exit status python setuppy egginfo Check the logs for full command output 