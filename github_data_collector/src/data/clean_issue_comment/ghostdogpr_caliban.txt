This PR adds source location mapping to fields and fragments It is primarily used for outputting when errors occur In Several implementations of graphql there exists possibility to extend scalar types Blog blog also mentions JSON scalar extension for an implementation of graphql I can t see any easy way how to do it with current implementation of caliban If you folks agree that it should be implemented I can try to make some PR in near future an HTTP adapter for would be useful to us Were very interested in Caliban Add support for the extensions data for each error as defined in the GraphQL spec json errors message Name for character with ID could not be fetched locations line column path hero heroFriends name extensions code CANNOTFETCHBYID timestamp Fri Feb UTC See initial discussion in Add support for the locations data for each error as defined in the GraphQL spec json errors message Name for character with ID could not be fetched locations line column path hero heroFriends name extensions code CANNOTFETCHBYID timestamp Fri Feb UTC This will require extracting the line and column information of each field when parsing queries See initial discussion in StreamStep return a StreamValue after execution but this only makes sense when using subscriptions For queries and mutations we could run the stream and return a ListValue of the result instead With support for Play Json serialization and routing Target and solved questions Add the Schema for catsdataOptionT and and fs Stream so that users can use these two data types in Query Mutation and Subscription directly Problems Because I cannot find a way to convert from fs Stream to ZStream directly so I just convert fs Stream to a Vector and then change it to ZStream I have no idea if there will be any performance issue Say having such the Queries scala final case class Queries F Effect Or any other traits users F List User userById UserId F Option User userByEmail Email F Option User final case class PrettierQueries F Effect Or any other traits users fs Stream F User userById UserId OptionT F User userByEmail Email OptionT F User Neither of them can pass the compile Just throw the errors Cannot find a Schema for type comukonnrawonderlanduserendpointgraphqlQueries F error Caliban derives a Schema automatically for basic Scala types case classes and sealed traits but error you need to manually provide an implicit Schema for other types that could be nested in endpointgraphqlQueries F error If you use a custom type as an argument you also need to provide an implicit ArgBuilder for that type error See for more information error val interpreter GraphQLgraphQLRootResolverqueriesinterpreter See Relay specs here 