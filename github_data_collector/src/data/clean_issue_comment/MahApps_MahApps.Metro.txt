Is your feature request related to a problem Please describe Based on We should add also a RadioButton Windows style inspired from UWP h when using TiltBehavior color and Theme change does not work gif Does something like a timespan updown exist in MahApps Metro Ive tried NumericUpDown control but that only allows a double value And the TimePicker control is a time picker great if you want to choose a day time However I would need the user to choose a value within a specific time range more like within a duration only The extended toolkit has such a control Is your feature request related to a problem Please describe I ran into the same issue as the OP in While i did find a workaround to link up TabItems in a mvvm friendly way getting a solution which is asyncawait friendly is more of an issue Describe the solution youd like Ideally would be public delegate Task so resulting event handlers can be executed asynchronously That way a viewModel could contain method signatures like Task TryCloseTabAsync and do non blocking calls and set the close args onec the async call is done The current state is very annoying if you try to delegate close permission handling to the viewModel since you have to do a blocking call on the viewModel of a tab in the event handler before setting the args to Canceled Closed Issues Describe the changes you have made to improve this project Introduce a new ColorCanvas Control With this Control we can build a ColorPicker in the future Still to do improve eyepicker Implement a ColorPalette Create a ColorPickerComboBox Unit test None until now Additional context Add any other context or screenshots about the feature request here Closed Issues Part solution for I cannot use CodedUI to create a test on a window that has multiple ToggleSwitch controls The automation ID for every toggle control is always Switch even though I have set up my own AutomationAutomationID in my XAML Technically the problem exists for a single ToggleSwitch too I can record commands to turn onoff the different toggleswitches but on playback of course it only ever finds the first one Expected behavior I expected my automation IDs to be used for the controls I need to be able to turn the toggles onoff and be able to test against the controls state of Pressed Screenshots Clip Environmentplease complete the following information MahAppsMetro version v OS Win Visual Studio NET Framework Describe the bug When running ShowModalInputExternal or any type of MahApps external modal from a button click the PowerShell process will crash I know an earlier alpha from October the external modal worked but the OK and Cancel buttons were missing their styles This works perfectly on though To Reproduce Steps to reproduce the behavior Download the repo linked below Rightclick Run Meps click Run with PowerShell Click the Open external input modal button in the window PowerShell will crash along with the window Expected behavior The dialog should be appearing above the main window Environment MahAppsMetro version Windows PowerShell Visual Studio NET Core Repo Im migrating my NET WPF application using MahAppsMetro to NET Core using MahAppMetro alpha and some of my styles that were working fine simply break at runtime with the newest version MetroListBox style is not referenced anymore thus break the styling of my ListBox The same goes for MetroListBoxItem AccentedSquareButtonStyle style does not exist anymore and break the styling of my Buttons SearchMetroTextBox style does not exist anymore and break the styling of my TextBox Ive carefullly watched the documentation and searched for those missing styles but couldnt find any equivalentmigration guide for these particular components Description Add DataGrid Set as ItemsSource ObservableCollection with records which implement INotifyDataErrorInfo and INotifyPropertyChanged and with errors after initialization Run app Textbox has red border but icon is missing strange but I can live with that Double click on cell icon in row header is shown fix value and hit enter Textbox hasnt got red border PASS but icon with tooltip with original error is still there FAIL Am I implemented it incorrectly Or its an issue in header style Environment NET Framework Windows Nuget libraries MahAppsMetro FluentValidation for validation Fody PropertyChangedFody for autiomatic notifications CaliburnMicro only base class Code c using CaliburnMicro using FluentValidation using System using SystemCollections using SystemCollectionsGeneric using SystemCollectionsObjectModel using SystemComponentModel using SystemLinq using SystemRuntimeCompilerServices namespace WpfDataGridValidation public class MainWindowViewModel ConductorIScreenCollectionAllActive public MainWindowViewModel var validator new MyRecordValidator var record new MyRecordvalidator Records new ObservableCollectionMyRecordEnumerableRepeatrecord public ObservableCollectionMyRecord Records get set public class MyRecord CaliburnMicroPropertyChangedBase INotifyDataErrorInfo private readonly FluentValidationAbstractValidatorMyRecord validator public MyRecordFluentValidationAbstractValidatorMyRecord validator validator validator Validate public event EventHandlerDataErrorsChangedEventArgs ErrorsChanged public bool HasErrors ErrorsAny public IEnumerable GetErrorsstring propertyName if stringIsNullOrEmptypropertyName return null if ErrorsTryGetValuepropertyName out Liststring value return value return EnumerableEmptystring private void Validate if validator null return var previousKeys ErrorsSelectx xKeyToList Errors validatorValidatethis Errors GroupByx xPropertyName ToDictionaryx xKey x xSelecty yErrorMessageToList if ErrorsChanged null return foreach var key in ErrorsKeys ErrorsChangedInvokethis new DataErrorsChangedEventArgskey foreach var key in previousKeysExceptErrorsSelectx xKey ErrorsChangedInvokethis new DataErrorsChangedEventArgskey public override void NotifyOfPropertyChange CallerMemberName string propertyName null if propertyName null propertyName nameofErrors propertyName nameofHasErrors Validate baseNotifyOfPropertyChangepropertyName public string Name get set public Dictionarystring Liststring Errors get private set new Dictionarystring Liststring public class MyRecordValidator FluentValidationAbstractValidatorMyRecord public MyRecordValidator RuleForx xNameNotEmpty MainWindow view xaml Window xClassWpfDataGridValidationMainWindow xmlns xmlnsx xmlnsd xmlnsmc xmlnslocalclrnamespaceWpfDataGridValidation mcIgnorabled TitleMainWindow Height Width Grid DataGrid xNamedataGrid ItemsSourceBinding Records CanUserAddRowsFalse CanUserSortColumnsFalse CanUserResizeColumnsFalse CanUserResizeRowsFalse CanUserReorderColumnsFalse SelectionModeSingle SelectionUnitCell AutoGenerateColumnsFalse VerticalAlignmentTop HorizontalAlignmentLeft GridLinesVisibilityAll VirtualizingStackPanelVirtualizationModeStandard HeadersVisibilityAll RowHeaderWidth DataGridColumns DataGridTextColumn HeaderName BindingBinding Name NotifyOnSourceUpdatedTrue NotifyOnTargetUpdatedTrue NotifyOnValidationErrorTrueValidatesOnNotifyDataErrorsTrue DataGridColumns DataGrid Grid Window MainWindow bode behind c using SystemWindows namespace WpfDataGridValidation public partial class MainWindow Window public MainWindow InitializeComponent DataContext new MainWindowViewModel Appxaml xaml Application xClassWpfDataGridValidationApp xmlns xmlnsx xmlnslocalclrnamespaceWpfDataGridValidation StartupUriMainWindowxaml ApplicationResources ResourceDictionary ResourceDictionaryMergedDictionaries ResourceDictionary SourcepackapplicationMahAppsMetrocomponentStylesControlsxaml ResourceDictionary SourcepackapplicationMahAppsMetrocomponentStylesFontsxaml ResourceDictionary SourcepackapplicationMahAppsMetrocomponentStylesColorsxaml ResourceDictionary SourcepackapplicationMahAppsMetrocomponentStylesAccentsGreenxaml ResourceDictionary SourcepackapplicationMahAppsMetrocomponentStylesAccentsBaseLightxaml ResourceDictionaryMergedDictionaries ResourceDictionary ApplicationResources Application I am using MahAppsMetro v MetroWindow with mahDialogParticipationRegisterBinding doesnt get disposed after the ShowDialog call Example usage I have two windows MainWindow and MyDialogView Each has its own view model MainWindowViewModel and MyDialogViewModel MainWindowViewModel contains a OpenDialogCommand which opens the dialog view MyDialogViewModel contains a CloseCommand which raises an OnClose event The MainWindowViewModel handles the OnClose event and closes the dialog window For easier debugging I instantiate a large byte array in the MyDialogViewModel constructor If I open and close the dialog window multiple times the memory usage only increases by GB But if I remove the DialogParticipationRegister parameter then the memory usage gets decreased when the garbage collector runs I prepared an example here 