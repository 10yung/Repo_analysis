We keep our inventory in Gitlab so I was having trouble figuring out how to reference it in semaphore Do you think it would work to create a playbook for the purpose of downloading our inventory and then configure an inventory file that points to that inventory It seems that I misunderstood how mux works during my last work on routing refactor This should fix I now understand better why mulekick was implemented Not sure if the use of middleware in this project is idiomatic in golang it seems logical to me of course but I come from Nodejs background where middleware for request context enrichment and policy control is the defacto and most importantly its applied on separate routes not router level Seems kinda ugly and because you must split into a separate subrouter every time you need to change a middleware stack tracking down route path becomes rather difficult added a function print out registered paths for debugging purposes At any rate I dont feel comfortable refactoring this right now so I just fixed the mux router usage strangeman or matejkramny can you pls do the honors I run semaphore config configjson and service has been started But there was something wrong with the put and delete api they all returned but post and get api is normal A SSH has been inserted in the Key Store After running a task the file accesskey with private key is created in the Semaphore home directory Permission rw for the semaphore user But after the task has finished this file is not cleaned up When sharing a project with multiple users it would be nice to assign SSH to users in stead of a project When running a task using a static inventory provided with a name is doesnt create this inventory with this name but will use inventory Moreover when running the task several times it will recreate the same file as inventory Is this a bug Wouldnt it be logical to save the file the same as the name provided to it and not to recreate is every time you run the task When starting version we see this Semaphore v Port MySQL root semaphore Tmp Path projects home tmpsemaphore Checking DB migrations Executing migration v at UTC m WARN ERR Query update precision of output logs also prevents confusion when sorting the table to guarantee it is in the same order alter table taskoutput change time time datetime not null Rolling back v time UTC m Rollback SQL does not exist panic Error You have an error in your SQL syntax check the manual that corresponds to your MySQL server version for the right syntax to use near not null at line goroutine running mainmain gosrcgithubcomansiblesemaphoresemaphoreclimaingo x a the datatime on mysql cant be Add environment are different other api interface havent return What do you think about feature in subject I have already implemented it for a long time in my fork but not in the best way My implementation is very simple Added column type to projecttemplate table It can be empty default build or deploy Added column buildtemplateid to projecttemplate table It used for templates with type deploy to specify build template Added variables semaphoretaskid passed for build and deploy and semaphorebuildtaskid passed only for deploy witch passes to ansible playbook over environment vars like semaphorerevision semaphoretaskid semaphorebuildrevision semaphorebuildtaskid Thats all Ansible playbook must support build deploy stages by using this vars I sure support build deploy stages very important for Semaphore Please help I tried to execute playbook with semaphore in my playbook includetasks networktype yaml which tried to pass variables networktype to it I add an environment as below networktype calico but still it runs with error The offending line appears to be includetasks networktype yaml here We could be wrong but this one looks like it might be an issue with missing quotes Always quote template expression brackets when they start a value For instance withitems foo 