 top up user load average Tasks total running sleeping stopped zombie Cpus us sy ni id wa hi si st KiB Mem total free used buffcache KiB Swap total free used avail Mem PID USER PR NI VIRT RES SHR S CPU MEM TIME COMMAND root g g R ssdbserver root S kswapd root R top root S systemd root S ideawu Redis del Keyvalue hashzsetqueue SSDB SSDB SSDB hclearzclearqclear SSDB twemproxy twemproxy redis flushdbkeys SSDB TwemProxy del ssdb del keydel SSDB hashzsetqueue Pr keyvalue del kdel delhclearzclearqclear del bug releases Hello I set key value in cache with phpfastcache and ssdb driver with php i can see the key is been in cache i can get the value but when i search with phpssdbadmin or command line i cant find the key value I dont understand why Thanks ssdb nginx twemproxy pyssdb ssdb DEBUG servercpp new link from fd links DEBUG servercpp fd read delete link s Could not connect to Redis at not connected The ssdbcli nagios checks n replication etc print a relevant result of OK WARNING CRITICAL but the exit code is always leaving nagios to believe the result is always OK nagios reads the exit code not the console output The nagioscpy routines correctly return respectively for OK WARNING CRITICAL but the wrapper routine ssdbclicpy puts an uncoditional exit after it hello there is an issue with the current sync of ssdb which makes it harder to operate a ssdb cluster syncmirror Currently when two masters nodes that use syncmirror go out of sync it is needed to completely shutdown both ssdb processes and then remove META directories in order to restore the sync state This works but requires a downtime In situations when one uses actively only one of the two masters itd be very good if there would be a way to let SSDB recreate its META directory without needing to shutdown and restart the server In my case I have two mirrors but I only actively use one of them master A So in my case Master A contains all data and master B is a copy of it I dont actively write to master B When there is a problem with Master A my ssdb client switches seamless to master B When Master A comes back up then my ssdb client switches back to it This is working well in my case but I have only this issue that if when Im using actively MAster A there is a problem in master B then when i fix master B and i restart it it gets synced to master A but master A goes OUTOFSYNC from master B even though nothing is written to master B And this forces me to restart Master A and bring down my whole web service When this happens i need to bring down the server and delete META and DATA in master B and then delete META in Master A then i restart and MasterB will sync again from master A This is fine but it requires are restart of master A Itd be really good if there is a way to let master A forget about master B state and rebuild its META without needing to restart it thanks ssdb setx redis setex setex redis ssdb