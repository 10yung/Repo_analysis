Bumps rack from to details summaryChangelogsummary Sourced from racks changelog CVE Prevent timing attacks targeted at session ID lookup tenderlove rafaelfranca Fixed Remove calls to eof on Rack input in MultipartParser as this breaks the specification matthewd Preserve forwarded IP addresses for trusted proxy chains SamSaffron Fixed CVE Reduce buffer size of MultipartParser to avoid pathological parsing tenderlove Fix a call to a nonexisting method acceptshtml in the ShowExceptions middleware tomelm CVE Whitelist HTTP and HTTPS schemes in Requestscheme to prevent a possible XSS attack PatrickTulskie Fixed Record errors originating from invalid UTF in MethodOverride middleware instead of breaking mclark Changed Ensure the Lock middleware passes the original env object lugray Improve performance of MultipartParser when uploading large files tompng Increase buffer size in MultipartParser for better performance jkowens Reduce memory usage of MultipartParser when uploading large files tompng Replace ConcurrentRuby dependency with native Queue devmchakan Fixed Require the correct digest algorithm in the ETag middleware matthewd Documentation Update homepage links to use SSL hugoabonizio Changed Ensure env values are ASCII bit encoded eileencodes Fixed trtable truncated details details summaryCommitssummary de e Merge branch sec into stable b d Bump version d e f making diff smaller a a fix memcache tests on f cb e fix tests on ff c Introduce a new base class to avoid breaking when upgrading f Add a version prefix to the private id to make easier to migrate old values da e Fallback to the public id when reading the session in the pool adapter a d Also drop the session with the public id when destroying sessions fe c Fallback to the legacy id when the new id is not found Additional commits viewable in compare view details br Dependabot compatibility score Dependabot will resolve any conflicts with this PR as long as you dont alter it yourself You can also trigger a rebase manually by commenting dependabot rebase dependabotautomergestart dependabotautomergeend details summaryDependabot commands and optionssummary br You can trigger Dependabot actions by commenting on this PR dependabot rebase will rebase this PR dependabot recreate will recreate this PR overwriting any edits that have been made to it dependabot merge will merge this PR after your CI passes on it dependabot squash and merge will squash and merge this PR after your CI passes on it dependabot cancel merge will cancel a previously requested merge and block automerging dependabot reopen will reopen this PR if it is closed dependabot ignore this patchminormajor version will close this PR and stop Dependabot creating any more for this minormajor version unless you reopen the PR or upgrade to it yourself dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency unless you reopen the PR or upgrade to it yourself dependabot use these labels will set the current labels as the default for future PRs for this repo and language dependabot use these reviewers will set the current reviewers as the default for future PRs for this repo and language dependabot use these assignees will set the current assignees as the default for future PRs for this repo and language dependabot use this milestone will set the current milestone as the default for future PRs for this repo and language You can disable automated security fix PRs for this repo from the Security Alerts page details One of our pages uses redirect to an external site That seems to work fine on Android On iOS we end up with an exception I did a bit of digging Im pretty sure the code ends up in WebViewswift in the WKScriptMessageHandler The messagename is VisitRequestFailed and code is Ideal situation would be to preform the redirect recognize the site is external and call TurbolinksSessionDelegatesession openExternalURL This fix layout issues with navigation bar and tab bar When you are using VisitableViewController for an application that uses a UINavigationController or UITabBarController WKWebView renders ignoring navigation items insets So web views are rendered wrong in these scenarios I am opening a PR with a fix for this one Bumps rackprotection from to details summaryCommitssummary See full diff in compare view details br Dependabot compatibility score Dependabot will resolve any conflicts with this PR as long as you dont alter it yourself You can also trigger a rebase manually by commenting dependabot rebase dependabotautomergestart dependabotautomergeend details summaryDependabot commands and optionssummary br You can trigger Dependabot actions by commenting on this PR dependabot rebase will rebase this PR dependabot recreate will recreate this PR overwriting any edits that have been made to it dependabot merge will merge this PR after your CI passes on it dependabot squash and merge will squash and merge this PR after your CI passes on it dependabot cancel merge will cancel a previously requested merge and block automerging dependabot reopen will reopen this PR if it is closed dependabot ignore this patchminormajor version will close this PR and stop Dependabot creating any more for this minormajor version unless you reopen the PR or upgrade to it yourself dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency unless you reopen the PR or upgrade to it yourself dependabot use these labels will set the current labels as the default for future PRs for this repo and language dependabot use these reviewers will set the current reviewers as the default for future PRs for this repo and language dependabot use these assignees will set the current assignees as the default for future PRs for this repo and language dependabot use this milestone will set the current milestone as the default for future PRs for this repo and language You can disable automated security fix PRs for this repo from the Security Alerts page details I have a home page that loads as part of my turbolinks app On this page there is a button that links to open which opens a door and redirects back to the home page This works just fine in a turbolinksenabled iOS app with one exception When the user is sitting on the home page and they pull to refresh Turbolinks actually visits the open URL instead of refreshing the current page I have confirmed this with a proxy and lots of logging It looks to me like the last visit not the current URL is the URL that is fetched upon pulltorefresh Hello I have a question I used the TurboLinks to build a IOS app and it works great But i get complains from my Users that they are logged out af they close the app or something I tried everything on my own phone to simulate this probably but cant find any I know this is a long shot but does anybody has the same problem or knows what I can do to prevent this On the Ruby backend I use the device gem for sign in thank you Hi When reloading a page using pulltorefresh after visiting a URL that redirects somewhere else the original URL is reloaded instead of the URL that was redirected to This is inconsistent with how Turbolinks works in a browser where the address bar is updated using the History API causing reloading the page to reload the URL that was redirected to This happens both for cold boot visits and JavaScript visits This PR is an attempt to solve this problem by having the Turbolinks WebView adapter report back the final location after loading a page for cold boot visits or completing a visit for JavaScript visits This might be a terrible solution but maybe it can help illustrate the problem Ive also created a minimal Rails app that can be used to test this by changing ApplicationControllerurl to point to port in the demo app diff import Turbolinks class ApplicationController UINavigationController fileprivate let url URLstring fileprivate let url URLstring fileprivate let webViewProcessPool WKProcessPool fileprivate var application UIApplication When the demo app starts it will first GET that will redirect to redirecttarget causing another GET for this path Before this PR reloading the page using pulltorefresh would cause the same series of requests GET then GET redirecttarget After this PR it only causes a GET redirecttarget The exact same behavior can be observed when clicking the Go to link causing a JavaScript visit instead of a cold boot visit Bundle executables on ruby is located on bin path instead exe path Hello and thanks for a great framework In a Turbolinks app Im currently working on we display multiple navigation controllers in a tab bar controller Each navigation controller has their own Session but share the same WKProcessPool When showing and hiding the network activity indicator in response to receiving sessionDidStartRequest and sessionDidEndRequest messages I found that sessionDidEndRequest wasnt called if I switched to a different tab before the request hda finished Since were using reference counting to show and hide the indicator this caused the indicator to never be hidden In d c I have made some changes that make this easier to reproduce just start the demo app switch to the second tab and watch the printed messages in the Xcode debugger output pane We should make sure to remove this commit before merging if you decide doing so makes sense The reason sessionDidEndRequest isnt called is the the WKWebView wont send the webViewdidFinish message to its navigationDelegate ie the ColdBootVisit after switching to a different tab I dont know why it doesnt do so and cant find any documentation describing this behavior In ceb I add a call to finishRequest in ColdBootVisitcompleteVisit to fix this problem Since finishRequest only calls sessionDidEndRequest once and we know that the request must have finished at this point I think this should be safe Let me know what you think