Importing Abstract Base Classes ABC from collections module is deprecated since Python and will be removed in Python I have tried fixing as many instances I could find in the codebase If I missed some please mention them below Hey I started to learn how to use angr and I wanted to test it out with the collision challenge at pwnablekr I followed this guide about how to do it but when I tried to do as he says I didnt get the correct input from the program this is my code import angr import claripy def main Main Func addr entrypoint mainaddr x cd bincat flag addr command findaddr x e At this moment the EDI register contains the argv variable findaddr x x wrong password x fc usage s password x bad length avoidaddr x x fc x Save input address to extract the correct input to use to get the flag inputaddr xff b Create Project proj angrProjectcol autoloadlibs False Create blank state state projfactoryblankstateaddrmainaddraddoptionsangroptionsLAZYSOLVES Create simulation manager sm projfactorysimulationmanagerstate Run the program and stop once you got to the bincat flag addr smexplorefindfindaddr avoidavoidaddr Print somehow the correct input from stack found smfound print print foundsolverevalfoundmemoryloadinputaddr if name main main I just set the function which I desire to reach then the functions that I want to avoid saved the place where the input should be and then tried to access it and print result in the screen but I get only any ideas why When I try to access the EDI register just like he did he used rdi because he compiled to bit for some reason I find out that it doesnt contain the flag for some reason and also when I try to access from the stack This updates the tests in relation to Hi Im recently thinking about how to facilitate the SE in angr with static analysis Since the binary Im analyzing has a lot of branches just smexplore from the entry point until it reaches my targets is really timeconsuming I got the idea from control dependency graph and finally obtain a set of potential control flow paths consisting of multiple connected CFG blocksI have some selfdefined rules so only a few branches are needed by me My initial idea is to guide the simulation manager to preferrlypriorily take these selected paths so that I can collect all constraints in the end When it comes to the implementation I got two different plans Using SimStateInspectb everytime a simulation manager reaches a branch my breakpoint will invoke a callback in which I can modify the SimStateregspc so that the control flow can follow my way Implement a new ExplorationTechnique in this way the original simulation manager behavior will not be violated I can select those states following the right branches and put them in a new stash maybe called obedient Im preferring the first approach since it is direct and easy to understand Directly modifying the pc register can make sure all things happen as I wish Could someone give me some hints on this Thank you Disclaimer The angr suite is maintained by a small team of volunteers While we cannot guarantee any timeliness for fixes and enhancements we will do our best For more realtime help with angr from us and the community join our Slack Describe the bug Please include a clear and concise description of what the bug is From massive experiment result an exception is raised during decompilation EVENT DECOMPILERFAIL Package Binary usrsbinripngd Function main x be Exception Traceback most recent call last File processpy line in catcher yield File processpy line in doitraw decompilation elfanalysesDecompilercfgfunctions a cfgcfg File homeangrangrdevangrangranalysesanalysispy line in call oselfinitargs kwargs File homeangrangrdevangrangranalysesdecompilerdecompilerpy line in init selfdecompile File homeangrangrdevangrangranalysesdecompilerdecompilerpy line in decompile sptrackertrackmemoryselfsptrackertrackmemory File homeangrangrdevangrangranalysesanalysispy line in call oselfinitargs kwargs File homeangrangrdevangrangranalysesdecompilerclinicpy line in init selfanalyze File homeangrangrdevangrangranalysesdecompilerclinicpy line in analyze selfsimplifyblocksstackpointertrackerspt File homeangrangrdevangrangranalysesdecompilerclinicpy line in simplifyblocks simplified selfsimplifyblockailblock stackpointertrackerstackpointertracker File homeangrangrdevangrangranalysesdecompilerclinicpy line in simplifyblock simp selfprojectanalysesAILBlockSimplifierailblock stackpointertrackerstackpointertracker File homeangrangrdevangrangranalysesanalysispy line in call oselfinitargs kwargs File homeangrangrdevailmentailmentanalysesblocksimplifierpy line in init selfanalyze File homeangrangrdevailmentailmentanalysesblocksimplifierpy line in analyze block selfeliminatedeadassignmentsblock File homeangrangrdevailmentailmentanalysesblocksimplifierpy line in eliminatedeadassignments observationpoints insn blockstatements insaddr OPAFTER File homeangrangrdevangrangranalysesanalysispy line in call oselfinitargs kwargs File homeangrangrdevangrangranalysesreachingdefinitionsreachingdefinitionspy line in init selfanalyze File homeangrangrdevangrangranalysesforwardanalysisinitpy line in analyze selfanalysiscoregraph File homeangrangrdevangrangranalysesforwardanalysisinitpy line in analysiscoregraph jobstate selfinitialabstractstaten File homeangrangrdevangrangranalysesreachingdefinitionsreachingdefinitionspy line in initialabstractstate initfuncselfinitfunc ccselfcc funcaddrfuncaddr File homeangrangrdevangrangranalysesreachingdefinitionslivedefinitionspy line in init raise ValueErrorThe architecture being ppc the parameter rtocvalue should be provided ValueError The architecture being ppc the parameter rtocvalue should be provided Environment Information Many common issues are caused by problems with the local Python environment Before submitting doublecheck that your versions of all modules in the angr suite angr cle pyvex are up to date Please include the output of python m angrmiscbugreport here To Reproduce Please include both a script to reproduce the crash and attach the binary used if possible Additional context Add any other context about the problem here Disclaimer The angr suite is maintained by a small team of volunteers While we cannot guarantee any timeliness for fixes and enhancements we will do our best For more realtime help with angr from us and the community join our Slack Describe the bug Please include a clear and concise description of what the bug is From massive experiment result an exception is raised during decompilation EVENT DECOMPILERFAIL Package Binary usrbinv l compliance Function Z buftype sB cxx i x Exception Traceback most recent call last File processpy line in catcher yield File processpy line in doitraw decompilation elfanalysesDecompilercfgfunctions a cfgcfg File homeangrangrdevangrangranalysesanalysispy line in call oselfinitargs kwargs File homeangrangrdevangrangranalysesdecompilerdecompilerpy line in init selfdecompile File homeangrangrdevangrangranalysesdecompilerdecompilerpy line in decompile rs selfprojectanalysesRecursiveStructurerriregion kbselfkb File homeangrangrdevangrangranalysesanalysispy line in call oselfinitargs kwargs File homeangrangrdevangrangranalysesdecompilerstructurerpy line in init selfanalyze File homeangrangrdevangrangranalysesdecompilerstructurerpy line in analyze st selfprojectanalysesStructurercurrentregion parentmapparentmap File homeangrangrdevangrangranalysesanalysispy line in call oselfinitargs kwargs File homeangrangrdevangrangranalysesdecompilerstructurerpy line in init selfanalyze File homeangrangrdevangrangranalysesdecompilerstructurerpy line in analyze selfanalyzeacyclic File homeangrangrdevangrangranalysesdecompilerstructurerpy line in analyzeacyclic selfrecoverreachingconditions File homeangrangrdevangrangranalysesdecompilerstructurerpy line in recoverreachingconditions reachingconditions node selfsimplifyconditionreachingcondition File homeangrangrdevangrangranalysesdecompilerstructurerpy line in simplifycondition simplified selfrevertshortcircuitconditionscond File homeangrangrdevangrangranalysesdecompilerstructurerpy line in revertshortcircuitconditions orarg orarg condargs ValueError not enough values to unpack expected got Environment Information Many common issues are caused by problems with the local Python environment Before submitting doublecheck that your versions of all modules in the angr suite angr cle pyvex are up to date Please include the output of python m angrmiscbugreport here To Reproduce Please include both a script to reproduce the crash and attach the binary used if possible Additional context Add any other context about the problem here Disclaimer The angr suite is maintained by a small team of volunteers While we cannot guarantee any timeliness for fixes and enhancements we will do our best For more realtime help with angr from us and the community join our Slack Describe the bug Please include a clear and concise description of what the bug is From massive experiment result an exception is raised during decompilation EVENT DECOMPILERFAIL Package Binary usrbintnftp Function remglob x b Exception Traceback most recent call last File processpy line in catcher yield File processpy line in doitraw decompilation elfanalysesDecompilercfgfunctions a cfgcfg File homeangrangrdevangrangranalysesanalysispy line in call oselfinitargs kwargs File homeangrangrdevangrangranalysesdecompilerdecompilerpy line in init selfdecompile File homeangrangrdevangrangranalysesdecompilerdecompilerpy line in decompile codegen selfprojectanalysesStructuredCodeGeneratorselffunc sresult cfgselfcfg kbselfkb File homeangrangrdevangrangranalysesanalysispy line in call oselfinitargs kwargs File homeangrangrdevangrangranalysesdecompilerstructuredcodegenpy line in init selfanalyze File homeangrangrdevangrangranalysesdecompilerstructuredcodegenpy line in analyze selftext funccreprindentselfindent posmapselfposmap File homeangrangrdevangrangranalysesdecompilerstructuredcodegenpy line in crepr funcbody selfstatementscreprindentindent INDENTDELTA posmapposmap File homeangrangrdevangrangranalysesdecompilerstructuredcodegenpy line in crepr stmtstr stmtcreprindentindent posmapposmap File homeangrangrdevangrangranalysesdecompilerstructuredcodegenpy line in crepr linesappendselffalsenodecreprindentindent INDENTDELTA posmapposmap File homeangrangrdevangrangranalysesdecompilerstructuredcodegenpy line in crepr stmtstr stmtcreprindentindent posmapposmap File homeangrangrdevangrangranalysesdecompilerstructuredcodegenpy line in crepr linesappendselffalsenodecreprindentindent INDENTDELTA posmapposmap File homeangrangrdevangrangranalysesdecompilerstructuredcodegenpy line in crepr stmtstr stmtcreprindentindent posmapposmap File homeangrangrdevangrangranalysesdecompilerstructuredcodegenpy line in crepr linesappendselftruenodecreprindentindent INDENTDELTA posmapposmap File homeangrangrdevangrangranalysesdecompilerstructuredcodegenpy line in crepr stmtstr stmtcreprindentindent posmapposmap File homeangrangrdevangrangranalysesdecompilerstructuredcodegenpy line in crepr stmtstr stmtcreprindentindent posmapposmap File homeangrangrdevangrangranalysesdecompilerstructuredcodegenpy line in crepr retexprstr selfretexprcreprposmapposmap File homeangrangrdevangrangranalysesdecompilerstructuredcodegenpy line in crepr posmapaddmappingposmappos lens self File homeangrangrdevangrangranalysesdecompilerstructuredcodegenpy line in addmapping raise ValueErrorNew mapping is overlapping with an existing element ValueError New mapping is overlapping with an existing element Environment Information Many common issues are caused by problems with the local Python environment Before submitting doublecheck that your versions of all modules in the angr suite angr cle pyvex are up to date Please include the output of python m angrmiscbugreport here To Reproduce Please include both a script to reproduce the crash and attach the binary used if possible Additional context Add any other context about the problem here Disclaimer The angr suite is maintained by a small team of volunteers While we cannot guarantee any timeliness for fixes and enhancements we will do our best For more realtime help with angr from us and the community join our Slack Describe the bug Please include a clear and concise description of what the bug is From massive experiment result an exception is raised during decompilation EVENT DECOMPILERFAIL Package Binary usrbinzbackup Function GLOBALsubIZN Compression EnDecoderC Ev x d Exception Traceback most recent call last File processpy line in catcher yield File processpy line in doitraw decompilation elfanalysesDecompilercfgfunctions a cfgcfg File homeangrangrdevangrangranalysesanalysispy line in call oselfinitargs kwargs File homeangrangrdevangrangranalysesdecompilerdecompilerpy line in init selfdecompile File homeangrangrdevangrangranalysesdecompilerdecompilerpy line in decompile sptrackertrackmemoryselfsptrackertrackmemory File homeangrangrdevangrangranalysesanalysispy line in call oselfinitargs kwargs File homeangrangrdevangrangranalysesdecompilerclinicpy line in init selfanalyze File homeangrangrdevangrangranalysesdecompilerclinicpy line in analyze selfsimplifyblocksstackpointertrackerspt File homeangrangrdevangrangranalysesdecompilerclinicpy line in simplifyblocks simplified selfsimplifyblockailblock stackpointertrackerstackpointertracker File homeangrangrdevangrangranalysesdecompilerclinicpy line in simplifyblock simp selfprojectanalysesAILBlockSimplifierailblock stackpointertrackerstackpointertracker File homeangrangrdevangrangranalysesanalysispy line in call oselfinitargs kwargs File homeangrangrdevailmentailmentanalysesblocksimplifierpy line in init selfanalyze File homeangrangrdevailmentailmentanalysesblocksimplifierpy line in analyze block selfeliminatedeadassignmentsblock File homeangrangrdevailmentailmentanalysesblocksimplifierpy line in eliminatedeadassignments observationpoints insn blockstatements insaddr OPAFTER File homeangrangrdevangrangranalysesanalysispy line in call oselfinitargs kwargs File homeangrangrdevangrangranalysesreachingdefinitionsreachingdefinitionspy line in init selfanalyze File homeangrangrdevangrangranalysesforwardanalysisinitpy line in analyze selfanalysiscoregraph File homeangrangrdevangrangranalysesforwardanalysisinitpy line in analysiscoregraph changed outputstate selfrunonnoden jobstate File homeangrangrdevangrangranalysesreachingdefinitionsreachingdefinitionspy line in runonnode state engineprocessstate blockblock failfastselffailfast File homeangrangrdevangrangranalysesreachingdefinitionsengineailpy line in process selfprocessstate None blockkwargspopblock None File homeangrangrdevangrangrengineslightenginepy line in process selfprocessStmtwhitelistwhitelist File homeangrangrdevangrangrengineslightenginepy line in processStmt selfailhandleStmtstmt File homeangrangrdevangrangranalysesreachingdefinitionsengineailpy line in ailhandleStmt superSimEngineRDAIL selfailhandleStmtstmt File homeangrangrdevangrangrengineslightenginepy line in ailhandleStmt getattrself handlerstmt File homeangrangrdevangrangranalysesreachingdefinitionsengineailpy line in ailhandleAssignment src selfexprstmtsrc File homeangrangrdevangrangrengineslightenginepy line in expr return getattrself handlerexpr File homeangrangrdevangrangranalysesreachingdefinitionsengineailpy line in ailhandleLoad dataaddselfprojectloadermemoryunpackwordaddr sizesize File homeangrangrdevcleclememorypy line in unpackword return selfunpackaddr selfarchstructfmtsizesize signedsigned endnessendness File homeangrangrdevarchinfoarchinfoarchpy line in structfmt raise ValueErrorInvalid size Must be a integer power of less than ValueError Invalid size Must be a integer power of less than Environment Information Many common issues are caused by problems with the local Python environment Before submitting doublecheck that your versions of all modules in the angr suite angr cle pyvex are up to date Please include the output of python m angrmiscbugreport here To Reproduce Please include both a script to reproduce the crash and attach the binary used if possible Additional context Add any other context about the problem here The binary has been decompressed and attached which is a MIPS binary The target function is called clearlog at address x fed From ida I can see the xrefs it is called in function executeotherrequests However when using CFG I got the predecessor of node at x fed like below In node cfgmodelgetanynode x fed In nodepredecessors Out CFGNode x fec The x fec is out of the scope of executeotherrequests mycgizip Disclaimer The angr suite is maintained by a small team of volunteers While we cannot guarantee any timeliness for fixes and enhancements we will do our best For more realtime help with angr from us and the community join our Slack Describe the bug Please include a clear and concise description of what the bug is Testing the backward slice plugin I stumbled upon the following error Traceback most recent call last File angrscriptpy line in module executepuresymbolictarget argsinput File angrscriptpy line in executepuresymbolic getbackwardslicep File angrscriptpy line in getbackwardslice printbsdbgrepr File venvlibpython sitepackagesangranalysesbackwardslicepy line in dbgrepr s selfdbgreprrunrunaddr n File venvlibpython sitepackagesangranalysesbackwardslicepy line in dbgreprrun if i in chosenstatements TypeError argument of type bool is not iterable A quick fix is simply if i in selfchosenstatements but I am not sure if that is really the fix needed Environment Information Many common issues are caused by problems with the local Python environment Before submitting doublecheck that your versions of all modules in the angr suite angr cle pyvex are up to date Please include the output of python m angrmiscbugreport here Most recent angr source build from source To Reproduce Please include both a script to reproduce the crash and attach the binary used if possible cfg projectanalysesCFGEmulated keepstate True stateaddoptions angrsimoptionsrefs contextsensitivitylevel targetfunc cfgkbfunctionsfunctionname exit targetnode cfggetanynodetargetfuncaddr Now make the backwards slice bs projectanalysesBackwardSlicecfgcfg cdgNone ddgNone controlflowsliceTrue targets targetnode printbsdbgrepr 