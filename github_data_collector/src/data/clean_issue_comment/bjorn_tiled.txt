QJSEngine can pass a nullptr to a QINVOKABLE or QPROPERTY function if the argument is either undefined or the wrong type Closes Redo of Users could have previously had custom properties of type int that referenced objects by ID Registering a converter for ObjectRef to and from int should help migration to the new object reference type Updates TLDR With the JS API is there a way to get a tileset images size in pixels Before v and the JS API extensions feature I was using python export scripts to create custom export formats I noticed a missing featureproperty with the JS API that was available with the python scripts Getting a tilesets real image size in pixels You could do this with python scripts with python width tilesetimageWidth height tilesetimageHeight see The JS API doesnt seem to provide that information So Im asking is there a way to get this currently If not is this maybe a feature worth implementing Sadly I need this functionality to generate custom config files for the tilesets It would be very convenient for me to have this feature in the JS API otherwise Ill probably need to generate those files outside of the Tiled extension Thanks Currently it enumerates all objects recursively until an object matches In bjorn pointed out that this is kinda silly for an ID field We should add a mapID object of some kind It doesnt appear possible to test the scripting API in its current state Wed either have to rip it out into its own module which defeats the purpose or have some way to set it up via the command line It might be possible to have a few test scripts that when loaded begin to test various parts of the API However wed need to extract from tiled whether the test passed or failed Wed also have to set up a test harness that can start up tiled with the correct scripting directory We could make it work with some command line options Connect the logging to stdout That lets us parse js errors and we can require tests that succeed to print a final message through tiledlog Name it logtostdout An option to manually specify a script directory Or to manually specify a preferences file though then our test harness would have to generate a preferences file Name it scriptdir An option to quit once all scripts are evaluated A test harness that can run tiled and listen to its stdout to check the tests This assumes that running a windowed application on travisappveyor even works The UI needs to be running for a lot of the scripting commands to work even if we never actually use it At least I think it does I was confused why I couldnt make a folder starting with a dot on windows and had to do some searching to solve hope this will help other noobs figure this out quicker When opening a new map the stamp tool will work immediately But the erase tool will not work until youve selected a layer I think this behavior issue only applies to maps with exactly one layer eg when creating a new map Its caused me confusion in the past and someone else recently Im making a macro for an addon that walks me through set paths in a game using map coordinates Planning the path is easy but checking the coordinates and copying them one by one to a text file is painful The macro will have hundreds of coordinates through dozens of maps and that wont be the last macro either for me Now I suggest that youd make a simple path tool for stuff like this for example NPC patrol paths etc could probably benefit from it thatd let you for example click on the coordinates you need and then copy the selected coordinates to a text box or something When the Repeat last export on save option is enabled the Save map before executing option in custom commands should also repeat the last export after saving Related to this the assetAboutToBeSaved and assetSaved signals are also not emitted in case the file is saved as part of executing a custom command