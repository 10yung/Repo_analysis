Resolves Added a Clean switch to PSGalleryModule When specified via parameters PSDependOptions Target C temp Pester DependencyType PSGalleryModule Name Pester Parameters Clean true Version AddToPath C temp the script will clean out any existing versions of the same module located within any of the paths defined in envPSModulePath Had to refactor a good amount of the code to accommodate this feature In order to maintain a desired state for your module environment there needs to be a way to clean out any unexpected module version conflicts For example if I already have Pester v installed on my machine and want to additionally define a dependency with v I would want PSDepend to allow me to delete the old v automatically Trying to use PSDepend with UniversalDashboard module but PSRepositoryModule dependency type doesnt support AcceptLicense WARNING Parameter AcceptLicense with value True is not a valid parameter for PSGalleryModule ignoring Valid params AllowClobber Dependency Import PSDependAction Repository SkipPublisherCheck This PR adds in a AcceptLicense parameter to PSGalleryModule which defaults to true powershell Pester latest UniversalDashboard Name UniversalDashboard DependencyType PSGalleryModule Parameters AcceptLicense true Version With regard to By adjusting the reference to the path variable and adjusting the support property in the DependMappsd file the Dependency Handler Git can also run on nix systems This came from Added documentation for the Credential dependency property and the Credentials parameter as I couldnt find any information on it Clarified the function based help for InvokePSDepend on the Credentials parameter Whitespace changes tabs to spaces for the code added to InvokePSDepend to support the Credentials parameter When using the Credentials parameter when calling InvokePSDepend for dependencies that dont require credentials would result in the erroneous warning WARNING No credential found for the specified name Was the dependency misconfigured Example sh InvokePSDepend Path dependspsd Install Import Credentials repo WithCredential GetCredential File dependspsd sh PSModule Name PSModule Version DependencyType PSGalleryModule Credential repo WithCredential Parameters Repository repo WithCredential PSModule Name PSModule Version DependencyType PSGalleryModule Parameters Repository repo WithoutCredential Would generate the warning when processing the PSModule dependency sh WARNING No credential found for the specified name Was the dependency misconfigured Fix The Name parameter in ResolveCredential is cast from null to an empty string So now both null and an empty string are checked When using a Git repository if target doesnt exist the dependency is downloaded in the current directory and the error is silenced affecting the path sctructure of your proyect Unless you check the Errors variable youll never now what is happening However when using PowerShell Gallery the bellow piece of code does the work in the SaveModule function When Force is specified Path will be created if not available When Force is specified Path will be created if not available ifnot Force ifPath destinationPath ResolvePathHelper Path Path CallerPSCmdlet PSCmdlet MicrosoftPowerShellUtility SelectObject First ErrorAction Ignore ifnot destinationPath or not MicrosoftPowerShellManagement Testpath destinationPath errorMessage LocalizedDataPathNotFound f Path ThrowError ExceptionName SystemArgumentException ExceptionMessage errorMessage ErrorId PathNotFound CallerPSCmdlet PSCmdlet ExceptionObject Path ErrorCategory InvalidArgument PSBoundParameters Path destinationPath else destinationPath ResolvePathHelper Path LiteralPath IsLiteralPath CallerPSCmdlet PSCmdlet MicrosoftPowerShellUtility SelectObject First ErrorAction Ignore ifnot destinationPath or not MicrosoftPowerShellManagement TestPath LiteralPath destinationPath errorMessage LocalizedDataPathNotFound f LiteralPath ThrowError ExceptionName SystemArgumentException ExceptionMessage errorMessage ErrorId PathNotFound CallerPSCmdlet PSCmdlet ExceptionObject LiteralPath ErrorCategory InvalidArgument PSBoundParameters LiteralPath destinationPath I propose then to implement the same behaviour in Gitps script with the following lines else if Force NewItem ItemType Directory Name DependencyTarget Force OutNull WriteDebug Target folder DependencyTarget created as Force switch was specified Target JoinPath PWD DependencyTarget else Target PWDPath WriteDebug Target defaulted to current dir Target I would think we could just use the web cmdlets here I wanted to use FileDownload in a project but sadly cant because its windows only Say I have a PSDepend that is BuildHelpers And I already have buildhelpers installed PSDepend should not do a findmodule but accept that it is there This would massively speed up dependency checking when a lot of modules are involved since PSdepend doesnt run in parallel If latest is specified it will always findmodule regardless Ill write a PR if you agree I can write is as a parameter FastVersionMatch or something Backward compatible This should fix adding Prerelease option Fix by adding a filter like gt and le or gt Also supports SemVer NuGet versions and filter Should fix by piping the module to Ipmo force scope global RamblingCookieMonster might not be for merging but asking for feedback