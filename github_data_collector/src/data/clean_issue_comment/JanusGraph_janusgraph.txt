Production in memory storage is added in the PR issue We extend documentation with inmemory backend production usage and limitations Also it would be good to add explanations about other possible in memory solutions with JanusGraph like Aerospike or BerkeleyDb in memoryonly mode For discussion on internal implementation details of JanusGraph or proposing a major new feature or subproject use the janusgraphdev Describe the feature If JanusGraph added this plugin it may be possible to support cypher query language relatively easily If the storage were serverless like a managed cassandra service and the janusgraph were containerized and run on serverless container service like fargate or cloud run then we could have serverless autoscaling graphs with both cypher and gremlin If this were infrastructure as code ready with ex terraform or pulumi or cdk or cfn the whole stack could be launched with a few termina l commands And youd pay nothing if you werent using it because itd be serverless That sounds like a major win but im not familiar with the codebase can you please help me add cypher and infrastructure as code Describe a specific use case for the feature startups or prototypes can copy a terraform template and with a couple commands launch a serverless graph with cypher and gremlin Hi Im having trouble building JanusGraph under Ubuntu using Java and Maven git clone cd janusgraph mvn clean install tee logtxt Seems like the inmemory target is not being built when its needed for some reason Any help you can provide about what Im doing wrong would be much appreciated Full logfile attached logtxt Bumps jackson version from to Updates jacksoncore from to details summaryCommitssummary ul lia href mavenreleaseplugin prepare release jacksoncore li lia href Merge branch of githubcomFasterXMLjacksoncore into li lia href prepare for li lia href Add missing delegation for JsonGeneratorcanWriteFormattedNumbersli lia href Minor fix for custom escape handling wrt quotlong quot gt chars escape handlingli lia href Minor fix to encoding of long UTF text valuesli lia href One more small fix to codeFilteringGeneratorDelegatecodeli lia href li lia href Fix a href lia href Update link in travis file remove JDK setup since build wont use itli liAdditional commits viewable in a href viewali ul details br Updates jacksondatabind from to This update includes security fixes details summaryVulnerabilities fixedsummary pemSourced from The GitHub Security Advisory Databaseemp blockquote pstrongLow severity vulnerability that affects comfasterxmljacksoncorejacksondatabindstrong FasterXML jacksondatabind x before might allow attackers to have a variety of impacts by leveraging failure to block the logbackcore class from polymorphic deserialization Depending on the classpath content remote code execution may be possiblep pAffected versions lt p blockquote pemSourced from The GitHub Security Advisory Databaseemp blockquote pstrongModerate severity vulnerability that affects comfasterxmljacksoncorejacksondatabindstrong SubTypeValidatorjava in FasterXML jacksondatabind before mishandles default typing when ehcache is used leading to remote code executionp pAffected versions lt p blockquote pemSourced from The GitHub Security Advisory Databaseemp blockquote pstrongModerate severity vulnerability that affects comfasterxmljacksoncorejacksondatabindstrong A Polymorphic Typing issue was discovered in FasterXML jacksondatabind x before This occurs when Default Typing is enabled either globally or for a specific property for an externally exposed JSON endpoint and the service has the logback jar in the classpathp pAffected versions lt p blockquote pemSourced from The GitHub Security Advisory Databaseemp blockquote pstrongHigh severity vulnerability that affects comfasterxmljacksoncorejacksondatabindstrong FasterXML jacksondatabind through and x through allows unauthenticated remote code execution because of an incomplete fix for the CVE deserialization flaw This is exploitable by sending maliciously crafted JSON input to the readValue method of the ObjectMapper bypassing a blacklist that is ineffective if the Spring libraries are available in the classpathp pAffected versions lt p blockquote pemSourced from The GitHub Security Advisory Databaseemp blockquote pstrongHigh severity vulnerability that affects comfasterxmljacksoncorejacksondatabindstrong A deserialization flaw was discovered in the jacksondatabind in versions before and which could allow an unauthenticated user to perform code execution by sending the maliciously crafted input to the readValue method of the ObjectMapper This issue extends the previous flaw CVE by blacklisting more classes that could be used maliciouslyp pAffected versions lt p blockquote pemSourced from The GitHub Security Advisory Databaseemp blockquote pstrongHigh severity vulnerability that affects comfasterxmljacksoncorejacksondatabindstrong FasterXML jacksondatabind before and x before allows unauthenticated remote code execution because of an incomplete fix for the CVE deserialization flaw This is exploitable by sending maliciously crafted JSON input to the readValue method of the ObjectMapper bypassing a blacklist that is ineffective if the c p libraries are available in the classpathp pAffected versions lt p blockquote pemSourced from The GitHub Security Advisory Databaseemp blockquote pstrongHigh severity vulnerability that affects comfasterxmljacksoncorejacksondatabindstrong A deserialization flaw was discovered in the jacksondatabind versions before and which could allow an unauthenticated user to perform code execution by sending the maliciously crafted input to the readValue method of the ObjectMapperp pAffected versions lt p blockquote pemSourced from The GitHub Security Advisory Databaseemp blockquote pstrongCritical severity vulnerability that affects comfasterxmljacksoncorejacksondatabindstrong A Polymorphic Typing issue was discovered in FasterXML jacksondatabind before It is related to comzaxxerhikariHikariConfigp pAffected versions lt p blockquote pemSourced from The GitHub Security Advisory Databaseemp blockquote pstrongCritical severity vulnerability that affects comfasterxmljacksoncorejacksondatabindstrong A Polymorphic Typing issue was discovered in FasterXML jacksondatabind before It is related to comzaxxerhikariHikariDataSource This is a different vulnerability than CVE p pAffected versions lt p blockquote pemSourced from The GitHub Security Advisory Databaseemp blockquote pstrongModerate severity vulnerability that affects comfasterxmljacksoncorejacksondatabindstrong A Polymorphic Typing issue was discovered in FasterXML jacksondatabind through When Default Typing is enabled either globally or for a specific property for an externally exposed JSON endpoint and the service has the commonsdbcp jar in the classpath and an attacker can find an RMI service endpoint to access it is possible to make the service execute a malicious payload This issue exists because of orgapachecommonsdbcpdatasourcesSharedPoolDataSource and orgapachecommonsdbcpdatasourcesPerUserPoolDataSource mishandlingp pAffected versions lt p blockquote pemSourced from The GitHub Security Advisory Databaseemp blockquote pstrongCritical severity vulnerability that affects comfasterxmljacksoncorejacksondatabindstrong A Polymorphic Typing issue was discovered in FasterXML jacksondatabind through When Default Typing is enabled either globally or for a specific property for an externally exposed JSON endpoint and the service has the apachelog jextra version x jar in the classpath and an attacker can provide a JNDI service to access it is possible to make the service execute a malicious payloadp pAffected versions lt p blockquote pemSourced from The GitHub Security Advisory Databaseemp blockquote pstrongModerate severity vulnerability that affects comfasterxmljacksoncorejacksondatabindstrong A Polymorphic Typing issue was discovered in FasterXML jacksondatabind through When Default Typing is enabled either globally or for a specific property for an externally exposed JSON endpoint and the service has the p spy jar in the classpath and an attacker can find an RMI service endpoint to access it is possible to make the service execute a malicious payload This issue exists because of comp spyenginespyP DataSource mishandlingp pAffected versions lt p blockquote pemSourced from The GitHub Security Advisory Databaseemp blockquote pstrongHigh severity vulnerability that affects comfasterxmljacksoncorejacksondatabindstrong An issue was discovered in FasterXML jacksondatabind prior to and When Default Typing is enabled either globally or for a specific property the service has the Jodddb jar for database access for the Jodd framework in the classpath and an attacker can provide an LDAP service to access it is possible to make the service execute a malicious payloadp pAffected versions lt p blockquote pemSourced from The GitHub Security Advisory Databaseemp blockquote pstrongLow severity vulnerability that affects comfasterxmljacksoncorejacksondatabindstrong FasterXML jacksondatabind x before might allow attackers to have a variety of impacts by leveraging failure to block the logbackcore class from polymorphic deserialization Depending on the classpath content remote code execution may be possiblep pAffected versions lt p blockquote details details summaryCommitssummary ul liSee full diff in a href viewali ul details br Updates jacksondatatypejsonorg from to details summaryCommitssummary ul lia href mavenreleaseplugin prepare release jacksondatatypejsonorg li lia href prepare for li lia href li lia href mavenreleaseplugin prepare for next development iterationli lia href mavenreleaseplugin prepare release jacksondatatypejsonorg li lia href prepare for li lia href li lia href Merge pull request a href from GedMarc li lia href Update JSONorg moditect definitions for jdk and upli lia href mavenreleaseplugin prepare for next development iterationli liAdditional commits viewable in a href viewali ul details br Updates jacksonannotations from to details summaryCommitssummary ul liSee full diff in a href viewali ul details br Updates jacksonmodulescala from to details summaryCommitssummary ul lia href prepare releaseli lia href uptake jackson li lia href add test caseli lia href add test caseli lia href test with SNAPSHOTli lia href remove old release notes now consolidated into releasenotesVERSIONmdli lia href Setting version to SNAPSHOTli lia href Setting version to li lia href jackson li lia href make test more robust by not relying on order of json elementsli liAdditional commits viewable in a href viewali ul details br Dependabot will resolve any conflicts with this PR as long as you dont alter it yourself You can also trigger a rebase manually by commenting dependabot rebase dependabotautomergestart dependabotautomergeend Note This repo was added to Dependabot recently so youll receive a maximum of PRs for your first few update runs Once an update run creates fewer than PRs well remove that limit You can always request more updates by clicking Bump now in your Dependabot dashboard details summaryDependabot commands and optionssummary br You can trigger Dependabot actions by commenting on this PR dependabot rebase will rebase this PR dependabot recreate will recreate this PR overwriting any edits that have been made to it dependabot merge will merge this PR after your CI passes on it dependabot squash and merge will squash and merge this PR after your CI passes on it dependabot cancel merge will cancel a previously requested merge and block automerging dependabot reopen will reopen this PR if it is closed dependabot close will close this PR and stop Dependabot recreating it You can achieve the same result by closing it manually dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version unless you reopen the PR or upgrade to it yourself dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version unless you reopen the PR or upgrade to it yourself dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency unless you reopen the PR or upgrade to it yourself dependabot use these labels will set the current labels as the default for future PRs for this repo and language dependabot use these reviewers will set the current reviewers as the default for future PRs for this repo and language dependabot use these assignees will set the current assignees as the default for future PRs for this repo and language dependabot use this milestone will set the current milestone as the default for future PRs for this repo and language dependabot badge me will comment on this PR with code to add a Dependabot enabled badge to your readme Additionally you can set the following in your Dependabot dashboard Update frequency including time of day and day of week Pull request limits per update run andor open at any time Outofrange updates receive only lockfile updates if desired Security updates receive only security updates if desired details Bumps airline from to details summaryCommitssummary ul lia href mavenreleaseplugin prepare release li lia href Retain original exception when parsing failsli lia href Update to Airbase li lia href Remove duplicate line in gitignoreli lia href Fix typo in Option documentationli lia href Update to li lia href mavenreleaseplugin prepare for next development iterationli lia href mavenreleaseplugin prepare release li lia href Update to Airbase li lia href Replace Guava functional helpers with streamsli liAdditional commits viewable in a href viewali ul details br Dependabot compatibility score Dependabot will resolve any conflicts with this PR as long as you dont alter it yourself You can also trigger a rebase manually by commenting dependabot rebase dependabotautomergestart dependabotautomergeend Note This repo was added to Dependabot recently so youll receive a maximum of PRs for your first few update runs Once an update run creates fewer than PRs well remove that limit You can always request more updates by clicking Bump now in your Dependabot dashboard details summaryDependabot commands and optionssummary br You can trigger Dependabot actions by commenting on this PR dependabot rebase will rebase this PR dependabot recreate will recreate this PR overwriting any edits that have been made to it dependabot merge will merge this PR after your CI passes on it dependabot squash and merge will squash and merge this PR after your CI passes on it dependabot cancel merge will cancel a previously requested merge and block automerging dependabot reopen will reopen this PR if it is closed dependabot close will close this PR and stop Dependabot recreating it You can achieve the same result by closing it manually dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version unless you reopen the PR or upgrade to it yourself dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version unless you reopen the PR or upgrade to it yourself dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency unless you reopen the PR or upgrade to it yourself dependabot use these labels will set the current labels as the default for future PRs for this repo and language dependabot use these reviewers will set the current reviewers as the default for future PRs for this repo and language dependabot use these assignees will set the current assignees as the default for future PRs for this repo and language dependabot use this milestone will set the current milestone as the default for future PRs for this repo and language dependabot badge me will comment on this PR with code to add a Dependabot enabled badge to your readme Additionally you can set the following in your Dependabot dashboard Update frequency including time of day and day of week Pull request limits per update run andor open at any time Outofrange updates receive only lockfile updates if desired Security updates receive only security updates if desired details Add a new DefaultSchemaMaker that logs auto created objects Thank you for contributing to JanusGraph In order to streamline the review of the contribution we ask you to ensure the following steps have been taken For all changes x Is there an issue associated with this PR Is it referenced in the commit message x Does your PR body contain xyz where xyz is the issue number you are trying to resolve x Has your PR been rebased against the latest commit within the target branch typically master x Is your initial contribution a single squashed commit For code changes Have you written andor updated unit tests to verify your changes x If adding new dependencies to the code are these dependencies licensed in a way that is compatible for inclusion under ASF x If applicable have you updated the LICENSEtxt file including the main LICENSEtxt file in the root of this repository x If applicable have you updated the NOTICEtxt file including the main NOTICEtxt file found in the root of this repository For documentation related changes x Have you ensured that format looks appropriate for the output in which it is rendered x If this PR is a documentationonly change have you added a doc only tag to the first line of your commit message to avoid spending CPU cycles in Travis CI when no code tests or build configuration are modified Note Please ensure that once the PR is submitted you check Travis CI for build issues and submit an update to your PR as soon as possible Describe the feature This DefaultSchemaMaker would extends proxy the JanusGraphDefaultSchemaMaker and a WARN log when an object edge vertex property is created Describe a specific use case for the feature Sometimes some property may have been forgot to add in the schema This can be detected using the DisableDefaultSchemaMaker but it would fail the request With this mode such error can be seen by looking at logs then schema can be fixed for next schema creation I could implements this improvement but I would like to know if it might be accepted master Berkeley Lucene Sometimes I have an error javalangIllegalArgumentException Multiple entries with same key listid listid and listid listid at comgooglecommoncollectImmutableMapconflictExceptionImmutableMapjava guava jrejar at comgooglecommoncollectImmutableMapcheckNoConflictImmutableMapjava guava jrejar at comgooglecommoncollectRegularImmutableMapcheckNoConflictInKeyBucketRegularImmutableMapjava guava jrejar at comgooglecommoncollectRegularImmutableMapfromEntryArrayRegularImmutableMapjava guava jrejar at comgooglecommoncollectImmutableMapBuilderbuildImmutableMapjava guava jrejar at orgjanusgraphgraphdbtypesindextypeIndexTypeWrappergetFieldIndexTypeWrapperjava janusgraphcore SNAPSHOTjar at orgjanusgraphgraphdbtypesindextypeMixedIndexTypeWrappergetFieldMixedIndexTypeWrapperjava janusgraphcore SNAPSHOTjar at orgjanusgraphgraphdbdatabasemanagementJanusGraphIndexWrappergetIndexStatusJanusGraphIndexWrapperjava janusgraphcoreBICSNAPSHOTjar at orgjanusgraphgraphdbdatabasemanagementGraphIndexStatusWatchercallGraphIndexStatusWatcherjava janusgraphcore SNAPSHOTjar That error is not reproducible If you make retry after error than you will be succeed I think that guava ImmutableMap could be changed on simple HashMap I can make PR This PR is related to It currently contains the following changes add check in constructQueryWithoutProfile method in BasicVertexCentricQueryBuilderjava The check method will check whether the adjacent query has set the label If not all the labels will be obtained and set When the adjacent vertex query is not set labelall edges are returned Version fc c e b efc d ca current Storage Backend hbase Mixed Index Backend no Steps to Reproduce janusGraphmultiQueryvertexadjacentvertex edges If you query like this all edges will be returned not only the edges of adjacent vertex that have been specified So it will lose the ability to quickly judge whether there is an edge between two vertices in super node vertex