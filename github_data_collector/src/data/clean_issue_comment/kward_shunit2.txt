Hello Shunit is amazing But I dont find how to request report file generation Please advise Regards Arnaud It has been more than years since mksh has taken over pdksh So lets update it Also READMEmd has wrong path only one period even if it is meant to be run from examples directory Let me add way to use shunit provided by the distribution If script is in PATH variable path it will be found without exact path Add assertStartsWith and assertEndsWith to complement assertContains If there is interest in this I can submit a PR Intent is to use POSIX Paramter Expansion On that note is there any reason why echo grep was used for assertContains Hello Im trying to create tests for checking that the program outputs correctly what I want For example Id to check that the following output when I call my application name foo version Since its multilines output its pretty complicated to check line by line Do you have some recommendation for that purpose Im thinking about creating a file as output expectation and perhaps calling diff on it in an assert The only problem is that Id need to show the diff each time it fails It think it might be a good idea to note somewhere that assertTrue and assertFalse evaluate the condition in a subshell That note would have helped me to understand why the following simplified assertion failed bash assertTrue not in subshell BASHSUBSHELL eq Hi Im trying to test the output of a command to see if it matches my assertion but Im not not sure how to go about it I have provided an example below usrbinenv bash file examplescmdoutsh checkCmdOut outputecho good bye assertEquals hello Load and run shUnit shunit I see the following reported cmdoutsh Ran tests OK I would expect to see a test and run and fail What am missing here Thanks shunit misctestsh is tested with the shell that set in the environment variable SHELL eg sh Note the test script is prefixed with chars so that shUnit does not incorrectly interpret the embedded functions as real functions testUnboundVariable unittestFSHUNITTMPDIRunittest sed s unittestF EOF Treat unset variables as an error when performing parameter expansion set u boom x This function goes boom if no parameters are passed testboom assertEquals boom No parameter given assertEquals SHUNITCOLORnone THSHUNIT EOF exec SHELLsh unittestF stdoutF stderrF assertFalse expected a nonzero exit value grep ASSERTunknown failure stdoutF devnull assertTrue assert message was not generated However SHELL is not the current running shell but the shell when login testrunner tries to test all installed shells but it test only login shell probably bash only I did a quick hack to test then the current ba d and v test failed note SHUNITSHELL was used instead of SHELL on v console git diff diff git atestrunner btestrunner index a e fde atestrunner btestrunner EOF Check for existence of shell shellbinshell export SHELLshell or SHUNITSHELLshell on v shellname shellpresentRUNNERFALSE case shell in details summaryResult of testrunnersummary console testrunner System data uname mprsv Linux generic Ubuntu SMP Thu Aug UTC x x OS Name Linux OS Version Ubuntu Test run info shells binsh ash binbash bindash binksh binpdksh binzsh tests shunit argstestsh shunit assertstestsh shunit failurestestsh shunit macrostestsh shunit misctestsh shunit standalonetestsh Running the test suite with binsh shell name sh shell version unknown Executing the shunit args test suite nondefaulttest testnondefaultran Ran tests OK Executing the shunit asserts test suite testAssertEquals testAssertNotEquals testAssertSame testAssertNotSame testAssertContains testAssertNotContains testAssertNull testAssertNotNull testAssertTrue testAssertFalse Ran tests OK Executing the shunit failures test suite testFail testFailNotEquals testFailSame Ran tests OK Executing the shunit macros test suite testAssertEquals testAssertNotEquals testSame testNotSame testNull testNotNull testAssertTrue testAssertFalse testFail testFailNotEquals testFailSame testFailNotSame Ran tests OK skipped Executing the shunit misc test suite testUnboundVariable testIssue testIssue testIssue testIssue testIssue ASSERTfailure message for assertFalse was not generated shunit ERROR testIssue returned nonzero return code testPrepForSourcing testEscapeCharInStr testEscapeCharInStrspecialChars testExtractTestFunctions testIssue testColors testColorsWitoutTERM Ran tests FAILED failures Executing the shunit standalone test suite Running the test suite with ash shell name ash shell version Executing the shunit args test suite nondefaulttest testnondefaultran Ran tests OK Executing the shunit asserts test suite testAssertEquals testAssertNotEquals testAssertSame testAssertNotSame testAssertContains testAssertNotContains testAssertNull testAssertNotNull testAssertTrue testAssertFalse Ran tests OK Executing the shunit failures test suite testFail testFailNotEquals testFailSame Ran tests OK Executing the shunit macros test suite testAssertEquals testAssertNotEquals testSame testNotSame testNull testNotNull testAssertTrue testAssertFalse testFail testFailNotEquals testFailSame testFailNotSame Ran tests OK skipped Executing the shunit misc test suite testUnboundVariable testIssue testIssue testIssue testIssue testIssue ASSERTfailure message for assertFalse was not generated shunit ERROR testIssue returned nonzero return code testPrepForSourcing testEscapeCharInStr testEscapeCharInStrspecialChars testExtractTestFunctions testIssue testColors testColorsWitoutTERM Ran tests FAILED failures Executing the shunit standalone test suite Running the test suite with binbash shell name bash shell version release Executing the shunit args test suite nondefaulttest testnondefaultran Ran tests OK Executing the shunit asserts test suite testAssertEquals testAssertNotEquals testAssertSame testAssertNotSame testAssertContains testAssertNotContains testAssertNull testAssertNotNull testAssertTrue testAssertFalse Ran tests OK Executing the shunit failures test suite testFail testFailNotEquals testFailSame Ran tests OK Executing the shunit macros test suite testAssertEquals testAssertNotEquals testSame testNotSame testNull testNotNull testAssertTrue testAssertFalse testFail testFailNotEquals testFailSame testFailNotSame Ran tests OK Executing the shunit misc test suite testUnboundVariable testIssue testIssue testIssue testIssue testIssue testPrepForSourcing testEscapeCharInStr testEscapeCharInStrspecialChars testExtractTestFunctions testIssue testColors testColorsWitoutTERM Ran tests OK Executing the shunit standalone test suite Running the test suite with bindash shell name dash shell version ubuntu Executing the shunit args test suite nondefaulttest testnondefaultran Ran tests OK Executing the shunit asserts test suite testAssertEquals testAssertNotEquals testAssertSame testAssertNotSame testAssertContains testAssertNotContains testAssertNull testAssertNotNull testAssertTrue testAssertFalse Ran tests OK Executing the shunit failures test suite testFail testFailNotEquals testFailSame Ran tests OK Executing the shunit macros test suite testAssertEquals testAssertNotEquals testSame testNotSame testNull testNotNull testAssertTrue testAssertFalse testFail testFailNotEquals testFailSame testFailNotSame Ran tests OK skipped Executing the shunit misc test suite testUnboundVariable testIssue testIssue testIssue testIssue testIssue ASSERTfailure message for assertFalse was not generated shunit ERROR testIssue returned nonzero return code testPrepForSourcing testEscapeCharInStr testEscapeCharInStrspecialChars testExtractTestFunctions testIssue testColors testColorsWitoutTERM Ran tests FAILED failures Executing the shunit standalone test suite Running the test suite with binksh shell name ksh shell version AJM u Executing the shunit args test suite nondefaulttest testnondefaultran Ran tests OK Executing the shunit asserts test suite testAssertEquals testAssertNotEquals testAssertSame testAssertNotSame testAssertContains testAssertNotContains testAssertNull testAssertNotNull testAssertTrue testAssertFalse Ran tests OK Executing the shunit failures test suite testFail testFailNotEquals testFailSame Ran tests OK Executing the shunit macros test suite testAssertEquals testAssertNotEquals testSame testNotSame testNull testNotNull testAssertTrue testAssertFalse testFail testFailNotEquals testFailSame testFailNotSame Ran tests OK Executing the shunit misc test suite testUnboundVariable ASSERTexpected a nonzero exit value ASSERTassert message was not generated ASSERTfailure message was not generated shunit ERROR testUnboundVariable returned nonzero return code testIssue testIssue testIssue testIssue testIssue ASSERTfailure message for assertFalse was not generated shunit ERROR testIssue returned nonzero return code testPrepForSourcing testEscapeCharInStr testEscapeCharInStrspecialChars testExtractTestFunctions testIssue testColors testColorsWitoutTERM Ran tests FAILED failures Executing the shunit standalone test suite Running the test suite with binpdksh runnerWARN unable to run tests with the pdksh shell Running the test suite with binzsh shell name zsh shell version Executing the shunit args test suite nondefaulttest testnondefaultran Ran tests OK Executing the shunit asserts test suite testAssertEquals testAssertNotEquals testAssertSame testAssertNotSame testAssertContains testAssertNotContains testAssertNull testAssertNotNull testAssertTrue testAssertFalse Ran tests OK Executing the shunit failures test suite testFail testFailNotEquals testFailSame Ran tests OK Executing the shunit macros test suite testAssertEquals testAssertNotEquals testSame testNotSame testNull testNotNull testAssertTrue testAssertFalse testFail testFailNotEquals testFailSame testFailNotSame Ran tests OK Executing the shunit misc test suite testUnboundVariable ASSERTassert message was not generated ASSERTtest count message was not generated ASSERTfailure message was not generated shunit ERROR testUnboundVariable returned nonzero return code testIssue testIssue ASSERTexpected but was testIssue ASSERTfailure message for assertEquals was not generated ASSERTfailure message for assertNotEquals was not generated ASSERTfailure message for assertNull was not generated ASSERTfailure message for assertNotNull was not generated ASSERTfailure message for assertSame was not generated ASSERTfailure message for assertNotSame was not generated ASSERTfailure message for assertTrue was not generated ASSERTfailure message for assertFalse was not generated shunit ERROR testIssue returned nonzero return code testIssue ASSERTfailure of oneTimeSetUp did not end test ASSERTfailure of setUp did not end test ASSERTfailure of tearDown did not end test ASSERTfailure of oneTimeTearDown did not end test shunit ERROR testIssue returned nonzero return code testIssue ASSERTfailure message for assertFalse was not generated shunit ERROR testIssue returned nonzero return code testPrepForSourcing testEscapeCharInStr testEscapeCharInStrspecialChars testExtractTestFunctions testIssue testColors testColorsWitoutTERM Ran tests FAILED failures Executing the shunit standalone test suite details Hi I am running a unit test script containing tests Suppose two test fails in that the output shows failures as Log testcheckdate testcheckdate ASSERTTest expectedRPM tcpdmp was installed before days but wasRPM tcpdump was installed before days shunit ERROR testcheckdate returned nonzero return code testcheckdate ASSERTTest expected but was shunit ERROR testcheckdate returned nonzero return code Ran tests FAILED failures Ideally it should return test failures A very useful project thank you Some new assertions to consider assertFileExists assertFileDoesNotExist assertFileContains assertFileDoesNotContain assertDirectoryExists assertDirectoryDoesNotExist