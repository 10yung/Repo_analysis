PowerShell on Windows PSGitHub The module uses the FollowRelLink of InvokeWebRequest InvokeRestMethod This does not exist prior to PowerShell Should you wish to retain support for PS I wrote an implementation of this as an example You can find that here Thanks Improvements Enhancements New cmdlet NewGitHubOrganization specifically for users of GitHub Enterprise Server GHES x New cmdlet GetGitHubOrganization specifically for users of GHES New cmdlet SetGitHubOrganization specifically for users of GHES Class Definition Test Coverage The goal of this PR is to begin implementing functionality for GHES administrators to easily manage GitHub Organizations The cmdlets could be used to retrieve the list of gitignore templates and download one GetGitIgnoreTemplateList would contain something like this powershell function GetGitIgnoreTemplateList CmdletBinding param return InvokeWebRequest URI UseBasicParsingContent ConvertFromJSON GetGitIgnoreTemplate would be like this powershell function GetGitIgnoreTemplateList CmdletBinding param String TemplateName InvokeWebRequest URI UseBasicParsing SelectObject ExpandProperty Content ConvertFromJSON SelectObject ExpandProperty Source I can submit a PR with the changes if this is something youd want to include We need to add formatting files for object output to ensure that useful data is displayed by default As a prerequisite to this we will need to build out a GitHub data model probably using PowerShell v Classes and map the GitHub REST API output to the data models NOTE This work item is exempt form the contribution guidelines which state no XML smile Priority Work Items Formatting file for GitHub Repositories Formatting file for GitHub Users Formatting file for GitHub Issues Formatting file for GitHub Gists We need to add operations for GitHub Gist code snippets Gists x List out all Gists for the authenticated user List starred Gists for the authenticated user Starunstar Gists x List out all public Gists for a specific GitHub user x Get a specific Gist x Create a new Gist x Delete a Gist We need to add PowerShell commands to the PSGitHub module that support repository migration and import of external revision control repositories Repository Import Invoke a repository migration from an external service List inprogress migrations Get status of a specific migration Download a migration archive Delete a migration archive Unlock a repository Enterprise Migrations Start a migration Get a list of enterprise migrations Get the status of a specific migration Download a migration archive Delete a migration archive Unlock a repository We need to fill out some of the core commands for interacting with GitHub Core We need to figure out how to handle data pagination Authentication Support authentication in Microsoft Azure Automation runbook service using PSCredential asset type x Encrypt GitHub Personal Access Token ondisk in JSON configuration file Add support for multiple usernames and Personal Access Tokens Enable user to switch between contexts Enable user to specify a GitHub profile during each command call Repositories List the authenticated users GitHub repositories List a specific users public GitHub repositories List all public repositories x Create new repositories Edit modify properties of existing repositories x Delete existing repositories List contributors List languages in project List branches Get a specific branch List Git tags on a specific repository Pull Requests View outstanding Pull Requests for an owner repository Merge one or more Pull Requests one PowerShell command Update a Pull Request title description state Create a Pull Request Search x Search for GitHub repositories Search for GitHub issues Search for GitHub users Search for code Issues x Create new GitHub issues Close or reopen GitHub issues List all or individual issues Lock and unlock issues Milestones Create a milestone List all milestones Get a specific milestone Update a milestone Delete a milestone 