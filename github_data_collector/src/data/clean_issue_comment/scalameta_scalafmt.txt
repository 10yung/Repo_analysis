This template is a guideline not a strict requirement Version Integration IntelliJ Configuration version maxColumn Steps Given code like this scala ORIGINAL CODE When I run scalafmt like this bash scalafmt Problem Scalafmt formats code like this scala dotty rc error identifier expected but found def xs Seq String longestStrings Expectation I would like the formatted output to look like this scala EXPECTED FORMATTING OUTPUT Workaround Notes See also If the block is part of an infix expression rewrite only if it also contains an infix expression do not rewrite infix block if its closing brace is the first nonwhitespace character on the line dont apply the special ifwithinif logic when the nested expression is not if change how and when we remove newlines after a brace is removed Fixes Fixes nonvalue generating statements Incorrect newlines in infix a b c is rewritten as a b c instead of a b c Infix lambda calls a map toString to a map toString lambda expressions val a if b c Int d else c Int e to val a if b c Int d else c Int e We already have native images pipeline in Github Actions It might make sense to move the rest jobs to Actions for unified CI system Rf I originally raised the above issue with the Intellij team but I think now it is a scalafmt issue Please see above link for the actual bug details This is my scalafmt config addSbtPluginorgscalameta sbtscalafmt latestintegration version RC style defaultWithAlign maxColumn lineEndings unix importSelectors singleLine project git true align most align tokens code owner CaseTypeArgByName should shouldBe must arrowEnumeratorGenerator true openParenCallSite false openParenDefnSite false binPack parentConstructors false continuationIndent callSite defnSite newlines penalizeSingleSelectMultiArgList false sometimesBeforeColonInMethodReturnType true rewrite rules RedundantBraces RedundantParens AsciiSortImports redundantBraces maxLines includeUnitMethods true stringInterpolation true generalExpressions true spaces inImportCurlyBraces false beforeContextBoundColon false Version Integration IntelliJ Configuration version maxColumn projectgit true projectexcludeFilters Wsbttest W Winputsources W Wcontrabandscala W recommends the JavaDoc style scalascala is written that way too docstrings JavaDoc This also seems more idiomatic to include whitespace in import x yyy spacesinImportCurlyBraces true This is more idiomatic Scala alignopenParenCallSite false alignopenParenDefnSite false For better code clarity danglingParentheses true trailingCommas preserve Steps Set intellij to autoformat on save Problem Intellij is unable to resolve scalafmt to so no formatting on save occurs Expectation Intellij should correctly resolve scalafmt Workaround If I bump the version to then intellij resolves it fine Unfortunately this creates many format changes in the sbt project where I noticed the issue It is annoying for my local development that I have to upgrade scalafmt generate a huge diff check it in keep working on my feature and when Im done revert the scalafmt diff Notes The no formatting is especially annoying with intellij because sbt has scalafmtOnCompile set to true I know so the file ends up being changed out from underneath intellij if any formatting is done Also Ive noticed this behavior since early in the x series It seems like intelij will almost always be ok resolving the latest scalafmt versions but not always the older ones I tried upgrading to RC and I always get error scalafmt version RC classpath is corrupted Ive tried running sbt clean update and that did not help This issue is not present with so I do not believe it is my setup Thanks for the great tool looking forward to using My configuration is version RC maxColumn rewriterules PreferCurlyFors SortModifiers AvoidInfix SortImports trailingCommas always assumeStandardLibraryStripMargin true optInbreakChainOnFirstMethodDot false spacesinImportCurlyBraces true includeCurlyBraceInSelectChains true spacesbeforeContextBoundColon Always These are copied from rewriteneverInfixexcludeFilters until to by eq ne should contain must in ignore be taggedAs thrownBy synchronized have when size only noneOf oneElementOf noElementsOf atLeastOneElementOf atMostOneElementOf allElementsOf inOrderElementsOf theSameElementsAs these are new throws returns satisfy To avoid frequent discussions in code review requesting formatting changes in the code to induce scalafmt to produce different output I would like to introduce an option to format input and ignore input newlines except adjacent to comments Propose options flag not specified produces current mixed approach of sometimes ignoring input line breaks and sometimes following them option to keep line breaks as specified two options to try and ignore line breaks one for fewer lines and another for shorter lines both are affected by config style select chains bin pack and other similar options not sure if they should supercede then As this requires a lot of changes Id like to consider this option as workinprogress until all changes have been merged and larger community had time to comment It will not be subject to edition guards until the logic has been finalized and declared completed NB Followon to Updates orgscalametasbtmdoc from to Release NotesChangelog Ill automatically update this PR to resolve conflicts as long as you dont change it yourself If youd like to skip this version you can just close this PR If you have any feedback just mention me in the comments below Have a fantastic day writing Scala details summaryIgnore future updatessummary Add this to your scalastewardconf file to ignore future updates of this dependency updatesignore groupId orgscalameta artifactId sbtmdoc details labels sbtpluginupdate semverpatch Updates orgscalamacrosparadise gitgithubcomscalamacrosparadisegit from to Ill automatically update this PR to resolve conflicts as long as you dont change it yourself If youd like to skip this version you can just close this PR If you have any feedback just mention me in the comments below Have a fantastic day writing Scala details summaryIgnore future updatessummary Add this to your scalastewardconf file to ignore future updates of this dependency updatesignore groupId orgscalamacros artifactId paradise details labels libraryupdate semverpatch