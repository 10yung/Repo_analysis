 Please fill out this template with all the relevant information so we can understand whats going on and fix the issue We appreciate bugs filed and PRs submitted If your issue is regarding one of the query APIs getByText getByLabelText etc then please file it on the domtestinglibrary repository instead If you file it here it will be closed Thanks Please make sure that you are familiar with and follow the Code of Conduct for this project found in the CODEOFCONDUCTmd file Well probably ask you to submit the fix after giving some direction If youve never done that before thats great Check this free short video tutorial to learn how Not sure if this is a bug or by design but thought id post here to make sure either way I was asked if its possible to ensure that preventDefault was called using a mock reacttestinglibrary version latest react version latest node version npm or yarn version Relevant code or config jsx import React from react import render fireEvent from testinglibraryreact itshould prevent default on mousedown const getByText render button onClicke consolelogcalled epreventDefault click me button const mockEvent preventDefault jestfn fireEventclickgetByTextclick me mockEvent expectmockEventpreventDefaulttoBeCalled If this is an issue with documentation please file an issue on the docs repo What you did tried to mock the preventDefault function see above What you were doing What happened mock is not called Please provide the full error messagescreenshotsanything Reproduction If possible please create a repository that reproduces the issue with the minimal amount of code possible Template repo Or if you can try to reproduce the issue in a Codesandbox You can fork the one here Problem description not sure if its a problem or by design but is it possible to ensure that a button event calls preventDefault Please describe why the current behavior is a problem Suggested solution Its ok if you dont have a suggested solution but it really helps if you could do a little digging to come up with some suggestion of how to improve things Please fill out this template with all the relevant information so we can understand whats going on and fix the issue We appreciate bugs filed and PRs submitted If your issue is regarding one of the query APIs getByText getByLabelText etc then please file it on the domtestinglibrary repository instead If you file it here it will be closed Thanks Please make sure that you are familiar with and follow the Code of Conduct for this project found in the CODEOFCONDUCTmd file Well probably ask you to submit the fix after giving some direction If youve never done that before thats great Check this free short video tutorial to learn how reacttestinglibrary version react version node version npm or yarn version yarn Relevant code or config This is how the MouseEvent is set up tsx const cell documentcreateElementtd const tdClass documentcreateAttributeclass tdClassvalue jexcelselectall cellsetAttributeNodetdClass const proxyHandler get obj prop if prop x return if prop y return any other properties that need to be added if prop target return cell return obj prop export const getMouseEvent const mouseClick new MouseEventmousedown button return new ProxymouseClick proxyHandler And this is how Im calling the event Ive also added an event listener to consolelog e and windowevent tsx function mouseTeste consoleloge consolelogwindowevent windowaddEventListenermousedown mouseTest false const mouseClick getMouseEvent fireEventdocumentbodyownerDocumentdefaultView mouseClick What you did Im currently working on testing an application that uses Jexcel with React testing library Jexcel essentially uses a HTML table with Javascript to set up an Excellike interface for example the styling for a selected cell is set up via a global mousedown event handler To set up a click on a specific cell Ive created a MouseEvent that mocks all the information that is used by the mousedown event handler in JExcel but when using this MouseEvent with fireEvent on documentbodyownerDocumentdefaultView based on a comment I saw here Ive noticed discrepancies in what e and windowevent return What happened Within a regular browser both return the mousedown event with the appropriate divelement being the target so if I click on a cell the td cell is the target However because I have to specify the window using documentbodyownerDocumentdefaultView the mock MouseEvent I set up loses its information e returns a basic MouseEvent and windowevent is undefined Is there a way to fire the MouseEvent without specifying a target st the target within my mock MouseEvent does not change Please fill out this template with all the relevant information so we can understand whats going on and fix the issue We appreciate bugs filed and PRs submitted If your issue is regarding one of the query APIs getByText getByLabelText etc then please file it on the domtestinglibrary repository instead If you file it here it will be closed Thanks Please make sure that you are familiar with and follow the Code of Conduct for this project found in the CODEOFCONDUCTmd file Well probably ask you to submit the fix after giving some direction If youve never done that before thats great Check this free short video tutorial to learn how reacttestinglibrary version latest react version latest node version latest npm or yarn version latest Relevant code or config js const debug renderdiv style test size hello worldsdiv debug If this is an issue with documentation please file an issue on the docs repo What you did Test the above What happened CSS variables dont appear on the element look in console from debug Reproduction If possible please create a repository that reproduces the issue with the minimal amount of code possible Template repo Or if you can try to reproduce the issue in a Codesandbox You can fork the one here Run code above Problem description Please describe why the current behavior is a problem I expected the styles to be available like they would be in the browser they arent currently Suggested solution Its ok if you dont have a suggested solution but it really helps if you could do a little digging to come up with some suggestion of how to improve things make them resolve ill have to dig into the code to see why they arent there its more than likely related to maybe theres nothing we can do right now Im trying to test a component in my project that uses materialui popover even kept the same code provided by the documentation the test should be very simple and passes coverage of the functions handlePopoverOpen and handlePopoverClose provided by lib But the test that should detect if the popover content is missing from the component failed I found that in the system the behavior works as it should follows a gif in the browser In the testing library debug after mouseLeave the content still exists as if popover did not behave as expected follows a gif debug I dont know if this is a bug from the materialui lib testinglibrary lib or my test error I created an issue in the repo of materialui with the same questionbug put the code in stackBlitz I think it is easier for anyone willing to judge downloading or checking the code Vote on feature requests by adding a This helps maintainers prioritize what to work on Please fill out this template with all the relevant information so we can understand whats going on and fix the issue We appreciate bugs filed and PRs submitted If youre issue is regarding one of the query APIs getByText getByLabelText etc then please file it on the domtestinglibrary repository instead If you file it here it will be closed Thanks Please make sure that you are familiar with and follow the Code of Conduct for this project found in the CODEOFCONDUCTmd file Itd be great if after the discussion youre the one who submits the PR that implements this feature If youve never done that before thats great Check this free short video tutorial to learn how Describe the feature youd like Currently there is no documentation recommendations or APIs that I could find regarding testing components that are rendered in a server side context A clear and concise description of what you want to happen Add any considered drawbacks Suggested implementation Helpful but optional Describe alternatives youve considered currently I use the hack jestenvironment node import React from react import renderToString from reactdomserver const foo img srcbarpng describeServerside rendering itrenders on a server without crashing const foo img srcbarpng const renderOnServer renderToString main foo main expectrenderOnServernottoThrow itrenders with the src attribute const foo img srcbarpng const ElementImageHtml renderToStringfoo expectElementImageHtmltoContainsrcbarpng A clear and concise description of any alternative solutions or features youve considered If you can explain how users will be able to use this and possibly write out a version of the docs Thanks for your interest in the project Bugs filed and PRs submitted are appreciated Please make sure that you are familiar with and follow the Code of Conduct for this project found in the CODEOFCONDUCTmd file Also please make sure youre familiar with and follow the instructions in the contributing guidelines found in the CONTRIBUTINGmd file If youre new to contributing to open source projects you might find this free video course helpful Please fill out the information below to expedite the review and hopefully merge of your pull request What changes are being made What featurebug is being fixed here What Fixing an error on readme Why are these changes necessary Why In the complex example catch already sets error to errormessage So in render it should just show stateerror How were these changes implemented How Render function updated to just show stateerror instead of stateerrormessage Have you done all of these things Checklist add NA to the end of each line thats irrelevant to your changes to check an item place an x in the box like so x Documentation x Documentation added to the docs site Tests NA Typescript definitions updated NA x Ready to be merged In your opinion is this ready to be merged as soon as its reviewed Yes Either that or catch shoud update error on the state as error error instead of error errormessage feel free to add additional comments Vote on feature requests by adding a This helps maintainers prioritize what to work on Please fill out this template with all the relevant information so we can understand whats going on and fix the issue We appreciate bugs filed and PRs submitted If youre issue is regarding one of the query APIs getByText getByLabelText etc then please file it on the domtestinglibrary repository instead If you file it here it will be closed Thanks Please make sure that you are familiar with and follow the Code of Conduct for this project found in the CODEOFCONDUCTmd file Itd be great if after the discussion youre the one who submits the PR that implements this feature If youve never done that before thats great Check this free short video tutorial to learn how Describe the feature youd like Id like to add a simple utility function createWrapper to create wrapper components easily See example below Instead of this js function Wrapper children return Router history Provider store children Provider Router const utils renderMyComponent wrapper Wrapper createWrapper function could replace the code above js const utils renderMyComponent wrapper createWrapperRouter history Provider store import React from react import Provider from reactredux import RouteComponentProps withRouter from reactrouterdom import store from store import Routes from routerrouter const App ReactFCRouteComponentProps return Provider storestore Routes Provider export default withRouterApp function renderWithRouterAndStore ui route history createMemoryHistory initialEntries route const Wrapper children return Provider storestore IntlProvider localeen MemoryRouter initialEntries route Route pathloginchildrenRoute MemoryRouter IntlProvider Provider return renderui wrapper Wrapper history I have Login Component when i submit the form and if the login is successfully it navigates to I am using thispropshistorypush But my test case fail Cannot read property push of undefined How to test a React component with RouteComponentProps Describe the feature youd like Examples using the getAll queries As all the matchers work on a singular element not arrays i dont really know how to use the getAll queries and in my current case id really love to use something like javascript expectgetAllByRolefiguresometag expecttagtoHaveTextContentdatacurrentbalance But im not sure how or even if its possible to do this Please fill out this template with all the relevant information so we can understand whats going on and fix the issue We appreciate bugs filed and PRs submitted If your issue is regarding one of the query APIs getByText getByLabelText etc then please file it on the domtestinglibrary repository instead If you file it here it will be closed Thanks Please make sure that you are familiar with and follow the Code of Conduct for this project found in the CODEOFCONDUCTmd file Well probably ask you to submit the fix after giving some direction If youve never done that before thats great Check this free short video tutorial to learn how reactrouterdom version history version jest version reacttestinglibraryjestdom version reacttestinglibrary version react version node version yarn version Relevant code or config js apptestjs import React from react import Router from reactrouterdom import createMemoryHistory from history import render fireEvent from testinglibraryreact import App LocationDisplay from app import testinglibraryjestdomextendexpect testfull app renderingnavigating const history createMemoryHistory const container getByText render Router historyhistory App Router verify page content for expected route often youd use a datatestid or role query but this is also possible expectcontainerinnerHTMLtoMatchYou are home fireEventclickgetByTextabouti check that the content changed to the new page expectcontainerinnerHTMLtoMatchYou are on the about page testlanding on a bad page shows page const history createMemoryHistory historypushsomebadroute const getByRole render Router historyhistory App Router expectgetByRoleheadingtoHaveTextContent Not Found testrendering a component that uses withRouter const history createMemoryHistory const route someroute historypushroute const getByTestId render Router historyhistory LocationDisplay Router expectgetByTestIdlocationdisplaytoHaveTextContentroute js appjs import React from react import withRouter from reactrouter import Link Route Router Switch from reactrouterdom const About h You are on the about pageh const Home h You are homeh const NoMatch h Not Foundh export const LocationDisplay withRouter location div datatestidlocationdisplaylocationpathnamediv export const App return div Link toHomeLink Link toaboutAboutLink Switch Route exact path componentHome Route pathabout componentAbout Route componentNoMatch Switch LocationDisplay div What you did Copied example tests from and ran it with jest via npx jest pathtofile and it failed with an error message What happened I did not expect errors but this returned General Error Message img width altScreen Shot at AM src In Depth Stacktrace bash Element type is invalid expected a string for builtin components or a classfunction for composite components but got undefined You likely forgot to export your component from the file its defined in or you might have mixed up default and named imports const route someroute historypushroute const getByTestId render Router historyhistory LocationDisplay Router at createFiberFromTypeAndProps nodemodulesreactdomcjsreactdomdevelopmentjs at createFiberFromElement nodemodulesreactdomcjsreactdomdevelopmentjs at reconcileSingleElement nodemodulesreactdomcjsreactdomdevelopmentjs at reconcileChildFibers nodemodulesreactdomcjsreactdomdevelopmentjs at reconcileChildren nodemodulesreactdomcjsreactdomdevelopmentjs at updateHostRoot nodemodulesreactdomcjsreactdomdevelopmentjs at beginWork nodemodulesreactdomcjsreactdomdevelopmentjs at HTMLUnknownElementcallCallback nodemodulesreactdomcjsreactdomdevelopmentjs at invokeEventListeners nodemodulesjsdomlibjsdomlivingeventsEventTargetimpljs at HTMLUnknownElementImpldispatch nodemodulesjsdomlibjsdomlivingeventsEventTargetimpljs at HTMLUnknownElementImpldispatchEvent nodemodulesjsdomlibjsdomlivingeventsEventTargetimpljs at HTMLUnknownElementImpldispatchEvent nodemodulesjsdomlibjsdomlivingnodesHTMLElementimpljs at HTMLUnknownElementdispatchEvent nodemodulesjsdomlibjsdomlivinggeneratedEventTargetjs at ObjectinvokeGuardedCallbackDev nodemodulesreactdomcjsreactdomdevelopmentjs at invokeGuardedCallback nodemodulesreactdomcjsreactdomdevelopmentjs at beginWork nodemodulesreactdomcjsreactdomdevelopmentjs at performUnitOfWork nodemodulesreactdomcjsreactdomdevelopmentjs at workLoopSync nodemodulesreactdomcjsreactdomdevelopmentjs at performSyncWorkOnRoot nodemodulesreactdomcjsreactdomdevelopmentjs at scheduleUpdateOnFiber nodemodulesreactdomcjsreactdomdevelopmentjs at updateContainer nodemodulesreactdomcjsreactdomdevelopmentjs at nodemodulesreactdomcjsreactdomdevelopmentjs at unbatchedUpdates nodemodulesreactdomcjsreactdomdevelopmentjs at legacyRenderSubtreeIntoContainer nodemodulesreactdomcjsreactdomdevelopmentjs at Objectrender nodemodulesreactdomcjsreactdomdevelopmentjs at nodemodulestestinglibraryreactdistpurejs at batchedUpdates nodemodulesreactdomcjsreactdomdevelopmentjs at act nodemodulesreactdomcjsreactdomtestutilsdevelopmentjs at Objectrender nodemodulestestinglibraryreactdistpurejs Reproduction Oddly enough the same repro doesnt error out Is this because of my babel config If possible please create a repository that reproduces the issue with the minimal amount of code possible Template repo Or if you can try to reproduce the issue in a Codesandbox You can fork the one here Problem description We cant test react routers behavior Suggested solution We can switch out reactrouter with reachrouter Its boilerplate worked fine 