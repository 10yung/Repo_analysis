I was wanting to ask about the icon names of Appimages I was wondering why would there be a appimagekit prefix on the icon names instead of using the upstream icon name on the desktop files installed via AppImage or hardcoding the icon names found on the desktop files I was looking through an issue of the Numix icon theme We could ship a static patchelf Hi Few users of Tutanota are having difficulties with running the app because their TMPDIR is noexec Running with TMPDIRXDGRUNTIMEDIR helps but we have no way of configuring that What is the preferred way of solving this It seems like theres no big difference between TMPDIR and XDGRUNTIMEDIR securitywise but people still do this Thanks this PR depens on Alpine has libc compat which provides ldlinux so in theory it should run there but in practice we are getting patchelf apk add libc compat Installing libc compat r OK patchelf appimagetool x AppImage Error relocating appimagetool x AppImage gnudevmakedev symbol not found When using appimageextractandrun getting Failed to remove directory tmpappimageextracted c ecedd b b f b eusrsharemanman Directory not empty Failed to remove directory tmpappimageextracted c ecedd b b f b eusrshareman Directory not empty Failed to remove directory tmpappimageextracted c ecedd b b f b eusrsharedocpatchelf Directory not empty Failed to remove directory tmpappimageextracted c ecedd b b f b eusrsharedoc Directory not empty Failed to remove directory tmpappimageextracted c ecedd b b f b eusrshare Directory not empty Failed to remove directory tmpappimageextracted c ecedd b b f b eusrbin Directory not empty Failed to remove directory tmpappimageextracted c ecedd b b f b eusr Directory not empty Failed to remove directory tmpappimageextracted c ecedd b b f b e Directory not empty TheAssassin It works but only when I remove metadata xml file Otherwise it fails as below Found appimagetool tmpmountlinuxdCqqmwpusrbinappimagetool Running command tmpmountlinuxdCqqmwpusrbinappimagetool AppDir g appimagetool continuous build commit fef a build built on UTC WARNING appstreamcli command is missing please install it if you want to use AppStream metadata Using architecture x devshmrclonebrowser d e ebeAppImageAppDir should be packaged as RcloneBrowser d e ebex AppImage Deleting preexisting DirIcon Creating DirIcon symlink based on information from desktop file AppStream upstream metadata found in usrsharemetainforclonebrowserappdataxml Trying to validate AppStream information with the appstreamutil tool In case of issues please refer to devshmrclonebrowser d e ebeAppImageAppDirusrsharemetainforclonebrowserappdataxml FAILED urlnotfound screenshot failed to connect SSL handshake failed urlnotfound screenshot failed to connect SSL handshake failed Validation of files failed Failed to validate AppStream information with appstreamutil rename RcloneBrowser rename to rclonebrowser failed No such file or directory cp cannot stat AppImage No such file or directory the same metadata xml file works perfectly on Ubuntu Both urls it complains about are valid The issue is in reference to linuxdeploylinuxdeploypluginappimage Trying to sign AppImage with my pgp keys Embedding MD digest gpg and sha sum are installed and user requested to sign hence signing Error cannot embed key in AppImage size exceeds reserved ELF section size Could not find any information about what keys are permitted obviously mine is too long bits Any details on this somewhere The issue is in reference to linuxdeploylinuxdeploypluginappimage knarfS reports When building AppImageKit the installbuilddepssh only checks for Ubuntu to install a newer version of cmake but shouldnt check it also for because LTS has expired in April I guess more and more people will use instead And whats about Ubuntu bit you have to compile a newer cmake yourself To be honest I never build locally we have a quite involved setup using Docker and CentOS for this repository to ensure increased binary compatibility with older systems So yes installbuilddepssh should probably be updated Shouldnt the build process work with the cmake version that is supplied by Ubuntu This is a question for TheAssassin Is the cmake version that is supplied by Ubuntu sufficient to build AppImageKit AppImageKit needs cmake version comes with Can we make it so that is sufficient If not why not