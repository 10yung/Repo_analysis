As per issue There are plenty of errorsnotices in the webserver that are not localised I believe all the admin errors and notices are localised as well as the antiCSRF error These should all be localised at least in English so that they can be translated whenever and Just Worktm When using pastegg with Javascript disabled the experience is considerably less nice Ive recently updated some buttons to work better without JS but there are still some pain points With JS disabled x Anonymous pastes cannot be deleted button shows modal and does nothing without JS Solution make button a link to a page that has an input for the deletion key Show the modal if JS is enabled More than one file cannot be added to a paste Pastes cannot be edited outside of metadata x Destructive actions have no warning Rendered content cannot be switched to the source tab No highlighting Solution use serverside highlighting This is solved in the SSH branch but that branch is not ready for production and it will be a miracle when it is If anyone has additional issues when JS is disabled please add them Aside from anonymous pastes Im not sure about the best way to handle nonJS Destructive actions could get individual pages that prompt for a confirmation but that seems a lot of work and very clunky Any other way to display a warning to nonJS users before a destructive action Diesel supports embedding migrations into the binary so they can be called and applied from the binary itself paste could just run the migrations every time its started instead of having to compile dieselcli in the docker image and run them that way This is an issue for the featserverhighlighting branch In this branch pastes dockercompose starts a microservice that handles highlighting for the backend in order to produce prehighlighted code that doesnt require any JS when viewing pastes I would like to use the same microservice for highlighting the code editor which will eventually be cspeditor cspeditor allows using a callback to produce the highlighted code If we use nginx to reverse proxy the microservice internalonly at the moment and update the microservice to use websockets we can write a throttled callback to highlight the code lol I am worried about abuse of the reverseproxied websocket How can we limit abuse so that ideally only people actually editing a paste can use it to produce highlighted code highlightrb ruby usrbinenv ruby require rack require rouge require fayewebsocket FayeWebSocketloadadapterthin class Highlight html nil lexer nil def initializekind name if kind file lexers RougeGuesserguess RougeGuessersFilenamenewname RougeLexerall lexer lexers RougeLexersPlainText elsif kind snippet lexer RougeLexerfindname RougeLexersPlainText else raise ArgumentError kind must be file or snippet end html RougeFormattersHTMLnew end def highlightcode htmlformatlexerlexcode end end class Server KEEPALIVETIME def callenv if FayeWebSocketwebsocketenv ws FayeWebSocketnewenv nil ping KEEPALIVETIME wson message do event lang type source eventdatasplit n begin hl Highlightnewtype lang rescue ArgumentError send nothing else wssendhlhighlightsource end end wson close do event ws nil end return wsrackresponse else end end end RackHandlerThinrun Servernew I like to put my files in a logical order for sharing but pastegg reorders them alphabetically which makes it confusing for the reader The hunk subtitles on the revisions page are quite a bit bigger compared to the actual content could use with a bit of shrinking It is currently hard to tell where one revision starts and ends as the horizontal rule is not easy to see and is also quite small A title such as revision revision etc might work See title So I did a search for pastegg I dont like the term SEO It feels somewhat dirty after continued use by socalled SEO consultants who mainly peddle snakeoil However we could definitely make some simple improvements in my opinion We could do with a meta description explaining wtf pastegg is this will then potentially be used as the snippet Googles current snippet is made up of random form labelsbuttons which isnt ideal More fundamentally we could do with some text on the main page pointing out its a minimalistic pastebin or some other slogan Ill let someone marketinginclined think about possibilities laughing We could also do with a title a la what you get on as a loggedout user googleoff index in footer maybe Not much point indexing commit hashes Thoughts