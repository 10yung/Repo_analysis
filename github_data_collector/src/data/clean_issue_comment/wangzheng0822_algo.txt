 redis redis zset for i in rangeselftail lenselfitems selfitemspopi QueueBasedOnLinkedListjava enQueue iftail null ifheadnull GolangPython HC lichengqianbytedancecom public void deleteByValueint value value if head null headdata value head headnext Node pNode head while pNode null if pNodenextdata data pNodenext pNodenextnext continue pNode pNodenext Hello the current version for findMiddleNode method in LinkedListAlgojava may behave a little bit odd The code snippet java while fast null fastnext null fast fastnextnext slow slownext in the file should work both for odd number and even number of nodes However when the number of nodes is even there are two nodes in the middle This part of code returns the second node of the two Should it return the first node According to the integer division for example will result in because of the truncation This can be viewed as it returns between and Comparably when there are two nodes in the middle I think we should return the first node Actually the original code works as I said Please check it out 