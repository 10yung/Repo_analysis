 New Issue Checklist x I have read and understood the CONTRIBUTING guide x I have read the Documentation x I have searched for a similar issue in the project and found none Feature Request Its been used previously in SDWebImageSwiftUI for watchOS performance is better than current CADisplayLink Need iOS macOS tvOS watchOS Supports GIFAPNGHEICS only See more New Issue Checklist x I have read and understood the CONTRIBUTING guide x I have read the Documentation x I have searched for a similar issue in the project and found none Feature Request For modern iOS App performance metrics is important for both optimizations and big company data analysis SDWebImage should provide a better support for customers to need the metrcis This Feature Request focus on the network metrics there may be also metrcis like Decoding Cache etc See more New Issue Checklist x I have read and understood the CONTRIBUTING guide x I have read the Documentation x I have searched for a similar issue in the project and found none Issue Info Info Value Platform Name ios Platform Version SDWebImage Version master branch Integration Method cocoapods Xcode Version Xcode Repro rate sometimes Issue Description and Steps When i simulated the UIImageView show the image some times i could find two request for the same image url NSString urlStr selfimageURL NSURL URLWithStringurlStr selfimageView sdsetImageWithURLselfimageURL selfimageView sdsetImageWithURLselfimageURL selfimageView sdsetImageWithURLselfimageURL dispatchafterdispatchtimeDISPATCHTIMENOW int t NSECPERSEC dispatchgetmainqueue selfimageView sdsetImageWithURLselfimageURL This is the same requests that Charles fetched WX bug in the file SDImageCache the method nullable NSOperation queryCacheOperationForKeynullable NSString key optionsSDImageCacheOptionsoptions donenullable SDCacheQueryCompletedBlockdoneBlock BOOL shouldQueryMemoryOnly image options SDImageCacheQueryDataWhenInMemory this line code has return value for shouldQueryMemoryOnly is not we expect I think it will be right for BOOL shouldQueryMemoryOnly image options SDImageCacheQueryDataWhenInMemory need delete the in options SDImageCacheQueryDataWhenInMemory I want you to make sure for this and give me a reply best wishes for you SD SD New Issue Checklist V I have read and understood the CONTRIBUTING guide V I have read the Documentation V I have searched for a similar issue in the project and found but that issue does not have enough information Issue Info Info Value Platform Name ios Platform Version x SDWebImage Version Integration Method cocoapods Xcode Version Xcode Repro rate sometimes Repro with our demo prj no Demo project link no Issue Description and Steps Crashed at SDMemoryCache commonInit on iOS x img width altfabric src Info Value Platform Name ios Platform Version SDWebImage Version Integration Method cocoapods Xcode Version Xcode Xcode Issue Description and Steps the SDWebImageWebPCoder is in iOS x or lower version can not show webp image but the strange thing when I debug app to those devices using xcode it can show webp correctly and close debug startup app directly it cannot show webp again btw when I use and webpcoder everything is fine Platform Name iOS Platform Version iOS SDWebImage Version Integration Method Carthagecocoapods Xcode Version Repro rate Repro with our demo prj unsure Demo project link na Issue Description and Steps I filed a stack overflow question like the guide suggested but I didnt get a response Basically Im wondering if I can configure SDWebImage to use a head method with refreshCached enabled to prevent unnecessary download bandwidth usage on our backend Copypasted the text from the stack overflow question here Im using SDWebImage for caching images in a SwiftiOS app and we are using it in some places with refreshCached option enabled Were using Amazon s for images which has support for the LastModified header on the request My understanding is that with refreshCached enabled SDWebImage should check the http header with a HEAD method to check to see the last modified date in the header THEN if the LastModified date has changed it can perform a GET method on the URL to get the image data saving bandwidth However when I inspect the calls that the app is making using CocoaDebug I only see the GET methods in the log meaning even when the image is cached were still fetching all the image data On subsequent views where the images are visible I see that images load instantly implying the cache is working but I still see the full GET methods and no HEAD method in the log Does SDWebImage support this HEAD followed by GET flow or am I doing something wrong or otherwise misunderstanding New Issue Checklist x I have read and understood the CONTRIBUTING guide x I have read the Documentation x I have searched for a similar issue in the project and found none Issue Info Info Value Platform Name ios Platform Version SDWebImage Version Integration Method cocoapods Xcode Version Xcode Repro rate all the time Issue Description and Steps The imagesize property of all images have sizeheight and sizewidth However cgImagewidth has size greater than Also all images must have some width and height as they are being displayed correctly within the UIImageView swift profileImageViewsdsetImagewith URLstring userprofileImageUrl weak self image err cachType url in guard let image image else return let imageSize imagesize let height imageSizeheight let width imageSizewidth printcgImage width imagecgImagewidth printimage width width printimage height height Issue Info Info Value Platform Name ios I assume it affects all platforms Platform Version as above SDWebImage Version Integration Method swift package manage Xcode Version Xcode Repro rate all the time Repro with our demo prj did not test Demo project link see snippets below Issue Description and Steps I created an SDImageTransformer that affects the scale of a UIImage swift class ScaleFactorImageTransformer NSObject SDImageTransformer let scale CGFloat initscale CGFloat selfscale scale superinit var transformerKey String ScaleFactorImageTransformer scale func transformedImagewith image UIImage forKey key String UIImage if let ciImage imageciImage return UIImageciImage ciImage scale scale orientation imageimageOrientation if let cgImage imagecgImage return UIImagecgImage cgImage scale scale orientation imageimageOrientation return nil I am using an iPhone Pro The first time SDWebImageManagerloadImage is called the returned image has the applied scaled correctly However on subsequent runs presumably when the image is loaded from the cache the scale of the image is The code I am using is in its simplest form swift let url URLstring let transformer ScaleFactorImageTransformerscale UIScreenmainscale let context SDWebImageContextOption Any SDWebImageContextOptionimageTransformer transformer SDWebImageManagersharedloadImagewith url options context context progress nil image error cacheType in if let image image printScale imagescale On first run the console says Scale On subsequent runs it says Scale The size of the image incorrectly increases in image views on subsequent runs This seems to be related to the closed issue 