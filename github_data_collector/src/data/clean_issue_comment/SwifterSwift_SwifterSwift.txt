 Provide a general summary of your changes in the Title above Checklist Please go over all the following points and put an x in all the boxes that apply If youre unsure about any of these dont hesitate to ask Were here to help x I checked the Contributing Guidelines before creating this request x New extensions are written in Swift x New extensions support iOS tvOS macOS watchOS or use available if not x I have added tests for new extensions and they passed x All extensions have a clear comments explaining their functionality all parameters and return type in English x All extensions are declared as public x I have added a changelog entry describing my changes andand to sort collectionssequences by multiple key paths Provide a general summary of your changes in the Title above Checklist Please go over all the following points and put an x in all the boxes that apply If youre unsure about any of these dont hesitate to ask Were here to help x I checked the Contributing Guidelines before creating this request x New extensions are written in Swift x New extensions support iOS tvOS macOS watchOS or use available if not x I have added tests for new extensions and they passed x All extensions have a clear comments explaining their functionality all parameters and return type in English x All extensions are declared as public x I have added a changelog entry describing my changes What did you do decode url safe base base string What did you expect to happen decode it What happened instead return nil SwifterSwift Environment SwifterSwift version latest Xcode version macOS version running Xcode Swift version Platforms running SwifterSwift macOS Demo Project Please link to or upload a project we can download that reproduces the issue Current our minimum deployment target for iOS and we want to upgrade it to iOS To do that we need to change it in the project and also make sure the Podspec and documentation eg readme is updated too Provide a general summary of your changes in the Title above Checklist Please go over all the following points and put an x in all the boxes that apply If youre unsure about any of these dont hesitate to ask Were here to help x I checked the Contributing Guidelines before creating this request x New extensions are written in Swift x New extensions support iOS tvOS macOS watchOS or use available if not x I have added tests for new extensions and they passed x All extensions have a clear comments explaining their functionality all parameters and return type in English x All extensions are declared as public x I have added a changelog entry describing my changes Added Optional Added unwrappedor error Error to get the wrapped value of an optional If the optional is nil calls Neverreturning closure Note I didnt add tests since all the assertions shouldnt be by default in production code Also I know only one tough way to implement global default Never returning functions replacement in order to organise proper testing of ones The other option is to use rd party library with similar testing abilities Feel free to comment and propose more suitable solutions if possible Checklist Please go over all the following points and put an x in all the boxes that apply If youre unsure about any of these dont hesitate to ask Were here to help x I checked the Contributing Guidelines before creating this request x New extensions are written in Swift x New extensions support iOS tvOS macOS watchOS or use available if not I have added tests for new extensions and they passed x All extensions have a clear comments explaining their functionality all parameters and return type in English x All extensions are declared as public x I have added a changelog entry describing my changes Provide a general summary of your changes in the Title above Checklist Please go over all the following points and put an x in all the boxes that apply If youre unsure about any of these dont hesitate to ask Were here to help x I checked the Contributing Guidelines before creating this request x New extensions are written in Swift x New extensions support iOS tvOS macOS watchOS or use available if not x I have added tests for new extensions and they passed x All extensions have a clear comments explaining their functionality all parameters and return type in English x All extensions are declared as public I have added a changelog entry describing my changes Added String Added matchings function to verify if string matches the regex pattern and return corresponding parts of string Checklist Please go over all the following points and put an x in all the boxes that apply If youre unsure about any of these dont hesitate to ask Were here to help x I checked the Contributing Guidelines before creating this request x New extensions are written in Swift x New extensions support iOS tvOS macOS watchOS or use available if not x I have added tests for new extensions and they passed x All extensions have a clear comments explaining their functionality all parameters and return type in English x All extensions are declared as public x I have added a changelog entry describing my changes The MKMapViewTestsswift file was not added to the SwifterSwiftproject file Also there is an unneeded fatal error and an unneeded guard statement that was removed The unit tests for the MKMapViewTestsswift file now cover of the cases Checklist Please go over all the following points and put an x in all the boxes that apply If youre unsure about any of these dont hesitate to ask Were here to help x I checked the Contributing Guidelines before creating this request x New extensions are written in Swift x New extensions support iOS tvOS macOS watchOS or use available if not x I have added tests for new extensions and they passed x All extensions have a clear comments explaining their functionality all parameters and return type in English x All extensions are declared as public x I have added a changelog entry describing my changes I propose to add options as default parameter to function apply in NSAttributedStringExtensions file line For example theres common case of using caseInsensitive option which cannot be ignored SwifterSwift Apply attributes to substrings matching a regular expression Parameters attributes Dictionary of attributes pattern a regular expression to target options The regular expression options that are applied to the expression during matching See NSRegularExpressionOptions for possible values Returns An NSAttributedString with attributes applied to substrings matching the pattern func applyingattributes NSAttributedStringKey Any toRangesMatching pattern String options NSRegularExpressionOptions NSAttributedString guard let pattern try NSRegularExpressionpattern pattern options options else return self let matches patternmatchesin string options range NSRange length let result NSMutableAttributedStringattributedString self for match in matches resultaddAttributesattributes range matchrange return result 