mtail log mtaillinestotal is still growing but other metrics count did not grow any more const UUID Puuid w w w counter nginxlognomatchcount counter condall counter nginx counter nginx counter nginx Phost s S Puri s S Pstatus s S Prequesttime s S Pupstreamresponsetime s S Pupstreamaddr s S Pupstreamstatus s S uri gkids report UUID nginx uri gkidshow class picturebook UUID nginx uri gkids class picturebook UUID nginx else condall else nginxlognomatchcount there are line in the log nginx prognginxmtail nginx prognginxmtail nginx prognginxmtail condallprognginxmtail but lines match else condtion it is not right maybe the else conditon only work with condition the else condtion should be lines nginx log uri containes with uuid string like appxxcom apireporta dd f b ed da appxxcom apireportb ef ef f b ed s dfdf nginxrequestdurationbyhostbuckethostappxxcomprognginxmtailstatus uriapireporta dd f b ed da nginxrequestdurationbyhostbuckethostappxxcomprognginxmtailstatus uriapireportapireportb ef ef f b ed s dfdf there are too many records in the metrics I want put this two line into one uri apireport so I need to replace the uuid b ef ef f b ed s dfdf to string like uuidstring then the metrics will be nginxrequestdurationbyhostbuckethostappxxcomprognginxmtailstatus uriapireportuuid how can I replace the uuid in regex in mtail config file nginxmtail counter requestcount by host requesturi status as nginxrequestcount counter nginxlognomatchcount Phost S Prequesturi S Pstatus d Prequesttime S Pupstreamresponsetime S Pupstreamaddr S Pupstreamstatus S requestcount host requesturi status else nginxlognomatchcount nginx log like this abc com wechatqueryclass abc com clazzes b bf de acb d d b c ateachercom nginxmtail Runtime error panic in thread vmthreadpc matchedfalse matchesmap int string stringnil string timetimeTimewall x ext loctimeLocationnil stack interface false at instr capref runtime error index out of range I vmgo Error occurred at instruction capref originating in nginxmtail at line the line contains with two upstreamaddrs and mtail parse faild and it cannot work Hi Im using mtail on a single host to extract k Prometheus metrics thus metrics is MB and it can generate significant amounts of traffic when polled frequently enough Is compressing HTTP responses something that could be added to mtail Thanks It seems like systemdjournald support was left out due to the possiblity to read from a named pipe or unix socket While trying to configure mtail to read from the runsystemdjournalsyslog where systemdjournald forwards all messages to I got the following error I loadergo Loaded program linecountmtail I mtailgo Tail pattern runsystemdjournalsyslog I tailgo AddPattern runsystemdjournalsyslog I logwatchergo Adding a watch on resolved path runsystemdjournal I logwatchergo No abspath in watched list added new one for runsystemdjournal I tailgo glob matches runsystemdjournalsyslog I logwatchergo Adding a watch on resolved path runsystemdjournalsyslog I logwatchergo No abspath in watched list added new one for runsystemdjournalsyslog I tailgo openlogPath runsystemdjournalsyslog false I logwatchergo Adding a watch on resolved path runsystemdjournal I logwatchergo Found this processor in watched list I filego fileNewrunsystemdjournalsyslog false I filego open failed all retries W mtailgo attempting to tail runsystemdjournalsyslog open runsystemdjournalsyslog no such device or address mtail version and command line sudo mtail logs runsystemdjournalsyslog progs logtostderr v I maingo mtail version v rc git revision aedde f c e d a ece a c a fdb go version go go arch amd go os linux Related Issues while trying to run mtail in kubernetes I get the following warning that mtail found an unexpected path name W tailgo Unexpected bad pathname varlogcontainersmtailvbrpxkubesystemmtail f cabdee d a d a a e d be d aa d log mtail version and command line I maingo mtail version v rc git revision aedde f c e d a ece a c a fdb go version go go arch amd go os linux I maingo Commandline usrbinmtail logtostderr logs varloglog logs varlogcontainerslog port progs etcmtail Really like the projects work so far Hi Linux kernal Linux el uekx Its happening usually nowadays that the mtail processes are getting killed after certain time The most recent error I was able to capture was panic runtime error index out of range goroutine running Log file created at bytesBufferWriteByte xc b xc c x x usrlocalgosrcbytesbuffergo xa bytesBufferWriteRune xc b x x e x x usrlocalgosrcbytesbuffergo x d githubcomgooglemtailinternaltailerFileRead xc d xacc a xc b aa x x gosrcgithubcomgooglemtailinternaltailerfilego x a githubcomgooglemtailinternaltailerTaileropenLogPath xc e e xc a x x x x gosrcgithubcomgooglemtailinternaltailertailgo x githubcomgooglemtailinternaltailerTailerhandleCreateGlob xc e e xacc a xc b xc a x gosrcgithubcomgooglemtailinternaltailertailgo x githubcomgooglemtailinternaltailerTailerProcessFileEvent xc e e xacc a xc b x xc a x gosrcgithubcomgooglemtailinternaltailertailgo x githubcomgooglemtailinternalwatcherLogWatchersendWatchedEvent xc d xc b x xc a x gosrcgithubcomgooglemtailinternalwatcherlogwatchergo x c githubcomgooglemtailinternalwatcherLogWatchersendEvent xc d x xc a x gosrcgithubcomgooglemtailinternalwatcherlogwatchergo xef githubcomgooglemtailinternalwatcherLogWatcherrunEvents xc d gosrcgithubcomgooglemtailinternalwatcherlogwatchergo x d created by githubcomgooglemtailinternalwatcherNewLogWatcher gosrcgithubcomgooglemtailinternalwatcherlogwatchergo x b Startup binbash mtail pollinterval ms port progs progsbasketPerfLogmtail logs rmslogsbsktapiAperfKVSbsktapiA log logs rmslogsbsktapiAperfKVSbsktapiA log logs rmslogsbsktapiAperfKVSbsktapiA log logs rmslogsbsktapiAperfKVSbsktapiA log Mtail version mtail version v rc git revision aedde f c e d a ece a c a fdb go version go go arch amd go os linux FYI There are no Kernel logs I can see on the server Thats not good Im getting this error when running mtail with oneshot mode Metrics storeE maingo failed to marshal metrics into json json unsupported value Inf I started getting this error when I first added a histogram which makes me think it has to do with the leInf label But I havent dug any deeper yet Hi I have used strptime to parse the timestamp from log but mtail is still using current system time as the time of the event instead of timestap from log file I have built docker image using Dockerfile availble in mtail repo Docker run command used docker run it p v Userssanprogstomcatmtailprogstomcatmtail v Userssanlogslogs mtail logtostderr progs progstomcatmtail logs logslocalhostaccesslogtxt emitmetrictimestamp Below is the output of mtail version mtail version v rc g b a git revision b a c f e e a d b c f go version go go arch amd go os linux Content of mtail progam counter apachehttprequeststotal by requestmethod uri requeststatus counter apachehttpbytestotal by requestmethod httpversion requeststatus Ptimestamp d w d d d d d Pclienthostname AZaz Pserverhostname AZaz Premoteusername AZaz Pport d Prequestmethod AZ Puri S PhttpversionHTTP Prequeststatus d Presponsesize d Presponsetime d strptimetimestamp Jan apachehttprequeststotal requestmethod uri requeststatus responsesize apachehttpbytestotal requestmethod httpversion requeststatus responsesize Example Log line Sep CC Administrator GET ccrestenUSreportsexecute D EFF E D F A B D HTTP Above program is correctly parsing the log line below is the link to regex which verifies the regex Output from metrics endpoint apachehttprequeststotalprogtomcatmtailrequestmethodGETrequeststatus uriccrestenUSreportsexecute D EFF E D F A B D Here timestamp is the time when mtail ran instead of Sep from log