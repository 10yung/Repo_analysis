Fix by creating Packageswift tonymillion please merge or comment on some of these PRs this is a useful repository please add support to swift package manager as soon as possible thank you I use this library for years for production Recently I found this bug on iOS iPad Mini connect over wifi How to produce the bug Connect the iPad to the wifi network and then disconnect optical cable simulate lost internet connection But it continue to REACHABLE I have not test this on the iPhone Code test on Xcode MacOS Allocate a reachability object Reachability reach Reachability reachabilityWithHostnamewwwgooglecom Set the blocks reachreachableBlock Reachabilityreach keep in mind this is called on a background thread and if you are updating the UI it needs to happen on the main thread like this dispatchasyncdispatchgetmainqueue NSLogREACHABLE reachunreachableBlock Reachabilityreach NSLogUNREACHABLE Start the notifier which will cause the reachability object to retain itself reach startNotifier My app is crashing oftenly for users PFA crashatics logs I am using block based notifier and starting it on app launch Method called on didfinishlaunching func listenInternetConnection selfreach ReachabilityforLocalWiFi selfreachreachableBlock reach Reachability Void in selfcheckAndUploadPendingConsultations selfreachunreachableBlock reach Reachability Void in printUNREACHABLE selfreachstartNotifier Please find logs Crashed comtonymillionreachability myapp x c d specialized AppDelegatecheckAndUploadPendingConsultations AppDelegateswift myapp x c thunk for escaping calleeguaranteed guaranteed Reachability compilergenerated Arctern x f Reachability reachabilityChanged Reachabilitym Arctern x fc TMReachabilityCallback Reachabilitym SystemConfiguration x a fa reachPerformAndUnlock libdispatchdylib x ed c dispatchcallblockandrelease libdispatchdylib x ee dispatchclientcallout libdispatchdylib x bd dispatchlaneserialdrainVARIANTmp libdispatchdylib x dispatchlaneinvokeVARIANTmp libdispatchdylib x eeb dispatchworkloopworkerthread libsystempthreaddylib x d dc pthreadwqthread libsystempthreaddylib x d cec startwqthread libobjcAdylib objcretain xxx TMReachabilityCallback Reachabilitym SystemConfiguration reachPerformAndUnlock SystemConfiguration SCNetworkReachabilityRestartResolverblockinvoke libnetworkdylib nwresolverupdateclientblockinvoke libdispatchdylib dispatchcallblockandrelease libdispatchdylib dispatchclientcallout libdispatchdylib dispatchlaneserialdrainVARIANTmp libdispatchdylib dispatchlaneinvokeVARIANTmp libdispatchdylib dispatchworkloopworkerthread libsystempthreaddylib pthreadwqthread When my phone open airplane mode and shadowsocks is on reachablity will return reachable to me mac environment simulator ios when I shortdown the WIFI Reachability calback NotReachable then i connect to WIFI Reachability cannot callback any more I set breakpoint in Reachabilitym to monior static void ReachabilityCallbackSCNetworkReachabilityRef target SCNetworkReachabilityFlags flags void info pragma unused target flags NSCAssertinfo NULL info was NULL in ReachabilityCallback NSCAssert bridge NSObject info isKindOfClass Reachability class info was wrong class in ReachabilityCallback Reachability noteObject bridge Reachability info Post a notification to notify the client that the network reachability changed NSNotificationCenter defaultCenter postNotificationName kReachabilityChangedNotification object noteObject the bug just appears in ios it totally seems fine in my ios simulator Could you please explain the reason for this mismatch tonymillionReachability Reachabilityh typedef NSENUMNSInteger NetworkStatus Apple NetworkStatus Compatible Names NotReachable ReachableViaWiFi ReachableViaWWAN Apples Reachability sample code Reachabilityh typedef enum NSInteger NotReachable ReachableViaWiFi ReachableViaWWAN NetworkStatus Using Reachability via Cocoapods in swift project Sometimes catching a crash like this reachability m Cannot reproduce this crash but I catch it on device only Could it happen because I call stopNotifier in instance owner deinit Probably the object has been already deallocated but a block in reachabilitySerialQueue is still executed Wouldnt it be better to pass self in contextinfo using bridgeretained so no garbage will pass in the callback instancetypereachabilityWithHostnameNSStringhostname SCNetworkReachabilityRef ref SCNetworkReachabilityCreateWithNameNULL hostname UTF String if ref id reachability self alloc initWithReachabilityRefref return reachability return nil Call to function SCNetworkReachabilityCreateWithName returns a Core Foundation object of type SCNetworkReachabilityRef Nullable with a retain count Assuming ref is non Object leaked object allocated and stored into ref is not referenced later in this execution path and has a retain count of i get the above error messages when analysing my project and have no idea if this is a serious issue or not please advise thanks 