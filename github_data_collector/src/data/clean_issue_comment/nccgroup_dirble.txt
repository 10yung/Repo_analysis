Hi Im using dirble to run a scan using this wordlist with this options RUSTBACKTRACEfull dirble l scrapelistable scan scan showhtaccess w contentdiscoveryalltxt x jsphpjavabaksqlincconfigold u and this is what I get Dirble commit b c aa build Developed by Izzy Whistlecroft Targets Wordlists contentdiscoveryalltxt No Prefixes Extensions bak config inc java js old php sql No lengths hidden INFO Detected nonexistent paths for httpblankblank are CODE INFO Increasing wordlistsplit for initial scan of to thread unnamed panicked at called Resultunwrap on an Err value Utf Error validupto errorlen Some srclibcoreresultrs stack backtrace x b d ab stdpanickingdefaulthookclosurehd d f b ac x b d stdpanickingdefaulthookh ad e b af x b d c d stdpanickingrustpanicwithhookh ae f bb c x b d a stdpanickingcontinuepanicfmth e a x b d rustbeginunwind x b ece d corepanickingpanicfmth f ccf fc a x b ecf coreresultunwrapfailedh f f a c bd x b a bac dirblerequestmakerequesth d e e b x b af dirblerequestthreadthreadspawnh b fdc a d e x b stdsyscommonbacktracerustbeginshortbacktracehb b fb ee x b c stdpanickingtrydocallh c cdca ded e x b d da rustmaybecatchpanic x b coreopsfunctionFnOncecalloncevtableshimhcdba b c c x b c daf allocboxedBoxF as coreopsfunctionFnOnceAcallonceh ec de e x b d ef stdsysunixthreadThreadnewthreadstarth ef a d d x f d d fd cf startthread x f d d d clone x unknown Curl error after requesting cUsersPersonal DesktopPortofolio Unsupported protocol cUsersPersonal DesktopPortofolio CODE SIZE Curl error after requesting cUsersctyiDesktop Unsupported protocol cUsersctyiDesktop CODE SIZE Curl error after requesting cUsersctyiDesktop Unsupported protocol cUsersctyiDesktop CODE SIZE Curl error after requesting cUsersKHOWDesktopcodeResponsivePortfolio Unsupported protocol cUsersKHOWDesktopcodeResponsivePortfolio CODE SIZE Hi I got this error with newest source code from github thread unnamed panicked at called Optionunwrap on a None value srclibcoreoptionrs note Some details are omitted run with RUSTBACKTRACEfull for a verbose backtrace stack backtrace stdsysunixbacktracetracingimpunwindbacktrace stdsyscommonbacktraceprint stdpanickingdefaulthookclosure stdpanickingdefaulthook stdpanickingrustpanicwithhook stdpanickingcontinuepanicfmt rustbeginunwind corepanickingpanicfmt corepanickingpanic dirbleoutputdirectoryname allocsliceimpl T sortbyclosure allocslicemergesort dirbleoutputprintreport thread main panicked at called Resultunwrap on an Err value Any srclibcoreresultrs stack backtrace stdsysunixbacktracetracingimpunwindbacktrace stdsyscommonbacktraceprint stdpanickingdefaulthookclosure stdpanickingdefaulthook stdpanickingrustpanicwithhook stdpanickingcontinuepanicfmt rustbeginunwind corepanickingpanicfmt coreresultunwrapfailed dirblemain stdrtlangstartclosure stdpanickingtrydocall rustmaybecatchpanic stdrtlangstartinternal main Currently the output all short alias is oA with two dashes Nmap uses oA with one dash and attempts to use oA with dirble result in weird error messages eg Short term Error when oA is specified Long term Make it so that oA works as expected Hi I just wanted to drop here another use case that itll be great to drop out from the results marking it as a false positive During the nonexistent paths detection itll be great to test a random file with different extensions as Ive seen several cases where the response varies depending only on the extension appended Eg bash curl s o devnull w sizedownload curl s o devnull w sizedownload In this example any request that ends in html will have a size of bytes and any request that finishes in php will have a size of bytes Itll be great if the nonexistent detection routine could handle these cases too My two cents It would be useful to be able to optionally display all or a subset of the response headers from each request or to flag up when a reponse header matches a particular search string A recent test I did involved checking a load of API endpoints for header injection and my requests included XSomeCustomHeader scriptalert script and the server would sometimes duplicate this header in its response or copy the header value into the response body Being able to filter responses based on whether they included the payload in the response against a wordlist of endpoints would dramatically speed up this testing The CURLOPTRESOLVE option instructs libcurl to override DNS lookups for particular or all hostnames This would be useful when scanning a server that requires SNI but does not have a public DNS record as an alternative to modifying etchosts See also libcurl does not base SNI on the Host header In testing out dirble I noticed that it will attempt exactly the url that is given but seems to not understand what to do if for example the following scenario is encountered dirble host abccom dirble brutes abccom but abccom s absolutely every request curl skv abccom to curkskv to real site resides on but input provided is just abccom wpscan handles this pretty well with a function called follow initial redirect If something like that could be possible here it would greatly improve workflow A list of features that would be nice to add listed in no particular order Input Load base request from a file Load headers from a file Remove empty lines from a wordlist when its read in but always scan url x Support for multiple wordlists Load command line options from a config file x Better detection of where the default wordlist is located Option to pause and resume scans later Error Checking Check before scanning if a certificate is invalid Optionally output certificate details Better errors when curl returns an error this is currently represented as a code Detection and handling of URL rewriting Wait after receiving a Too Many Requests x Detect when all responses are Unauthorized or Forbidden Output Better header on report Separate report sections for different hosts x JSON output format x XML output format x Option to store all output formats Filter output based on regex x Filter on response length Option to output all found content to a folder Option to display when a cookie is set by the server x Output colouring based on response code Security header audit Option to output Page Title Filtering on MIME type Option to report MIME type Scraping Scrape pages for in scope URLs to scan Printing of interesting comments things such as todo urls high entropy sections such as hashes Scrape robotstxt for URLs to scan Scanning Detect if a server is case sensitive Detect if a server replies sensibly to HEAD requests and if it does use those to save bandwidth would potentially interfere with scraping however x Support for different HTTP verbs Option to change string used to detect if a directory is listable x Set which status codes to ignoreoutput Interactive recursion Option to not scan without an extension Set subdirectories to exclude in the scan Options to set predefined user agents Option to use random user agents Better x handling x Wordlist prefixes Vhost bruteforcing x Not found tuning x Max recursion depth setting Get OPTIONS for each folder scanned Option to take a screenshot of each page found similar to Eyewitness Check if a page is requesting basic auth Releasing x Mac build Debian dpkg Arch pkgbuild Ubuntu snap Ubuntu PPA CentosFedora RPM Gentoo ebuild Windows installer selfupdating Mac Homebrew release Release on cratesio Generate man page with clap Generate autocompletion script with clap Actions x Run tests on Windows Mac Linux Crosscompile for ARM Build releases Build dpkg RPM