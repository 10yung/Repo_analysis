This other crate is being maintained it offers better performances when using the asm feature especially on AArch It also allows deduplicating SHA crates in cargoweb This PR provides a more informative error message when a WebSocketOtherError is displayed The main driver of this change is viwebsocat which would then indicate the concrete status code obtained from the server In order to use any of the connect functions I would be required to depend on nativetls directly It would be easier if you exposed the version you depend on use nativetlsTlsConnector Errors out currently use websocketnativetlsTlsConnector Certificate What I propose let mut file Fileopencertpem let mut dataVecu Vecnew filereadtoend mut data let rootca Certificatefrompem data let connector TlsConnectorbuilderaddrootcertificaterootcabuild let mut builder ClientBuilder ClientBuilderfromurl selfurl let mut client builderconnectSomeconnector I would like to be able to run serveraccept and have it block for a Duration after which I have an opportunity to perform other logic before continuing my loop My purpose is so I can implement a kill switch an ArcAtomicBool updated elsewhere and end my thread if its flipped Do you have a roadmap as to the asyncawaitbased API I think it will require migrating to edition and other breaking changes so I wonder what the plan is Using clientconnectNone to connect to a wss endpoint but got TLS Handshake failure Connecting to ws endpoint works just fine Toolchain stablei pcwindowsgnu Environment Windows x Is there any way to diagnose the problem Any pointers The stream seems to fail if there is an invalid connection Incoming stream When one connection failed with some bytes remained on the stream the entire listener failed and the only way to get out from this situation is binding a new one TcpListener does not do that Bad connections are the TcpStreams responsibility but not the TcpListeners What can I do here Hi wave TLDR im currently using this great crate in my projects as a client for now and recently i had to containerize my package into docker container that is not a problem the problem is i want to use musl libc so i can build a static minimum baremetal image using rustls would make cross compiling a way better so any plans to support it under a feature flag maybe asyncrustls and syncrustls Thank you all for your great work See Pretty standard usage of ws connecting to wsswebrtcnirbheekin via asyncconnect What happens here is that it resolves to a e f c fffeae and tries the first gets connection refused and does not even try the next one Im using the sync client of websocketsrs to connect to a server written in actixweb over localhost Ive got a KB chunk of binary that Im requesting from my server then sending back Im getting the chunk just fine from the server but when I try to send it back the server never registers a message Looking at wireshark theres some packets that have length Im sending the data like this let binmessage OwnedMessageBinarydata clientsendmessage binmessage where data is a Vecu A binary chunk of bytes went back and forth just fine Do I need to handle the byte streaming myself Why does this work on the receiving end and not the sending Ive verified my server with a python websocket client I know its working on that end pcap of the traffic is attached dumpfilezip 