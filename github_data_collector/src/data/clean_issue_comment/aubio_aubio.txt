Hi I am considering writing a crossplatform software that will do pitch detection among other things and I was considering RtAudio as a libary for the audio inputoutput it seems more used than PortAudio nowadays and is more ubiquitous than JACK or ALSA indeed For the pitch detection Aubio seems like a perfect choice Does someone have an example program that plugs together RtAudio and Aubio That would be quite handy Thank Like the title mention I want to increase the order of the biquad filter so the slope of the cutoff frequency gets steeper I looked through the files but couldnt find something Is it possible that i overlooked something or is there some workaround for this i used to have the same problem like and it was solved by pip install git After aubio a installed i tried running demopitchpy and get errors below while importing aubio File G PYTHON python lib sitepackages aubio initpy line in module from aubio import version as version UnicodeDecodeError utf codec cant decode bytes in position invalid continuation byte Hi I tried to search in the docs but found nothing useful Is there a way to name the various mel coefficients that aubiomfcc returns Thanks Currently unsigned ints are used for sample positions etc which is enough if you analyze only a single song but if you analyze live music you get an integer overflow after hours So an build option using defines to switch to longs would be cool Fixed some issue when I use docker to build aubio with emscripten Now we can use Docker to build WebAssembly module with bash docker run rm v pwdsrc trzeciemscripten binbash c scriptsgetwafsh scriptsbuildemscripten Hi all following piem suggestion i commented out line in scriptsgetwafsh Building process starts but get stuck on the last line I wonder why the building script is apparently searching for VS compiler Doesnt should be rely on MinGW provided by MSYS enviroment Heres my console output Live MachineLiveMachine MINGW homelivemachineaubio make make Entering directory homelivemachineaubio scriptsgetwafsh cUsersPublicDocumentsWondershareCreatorTemptmpyqGtqC yjn homelivemachineaubio cUsersPublicDocumentsWondershareCreatorTemptmpyqGtqC yjnwaf cUsersPublicDocumentsWondershareCreatorTemptmpyqGtqC yjn homelivemachineaubio Executing code from the toplevel wscript Configuring the project Setting top to CUsersPublicDocumentsWondershareCreatorTemptmpyqGtqC yjnwaf Setting out to CUsersPublicDocumentsWondershareCreatorTemptmpyqGtqC yjnwaf build Checking for program python Cmsys mingw binpythonexe Waf Entering directory CUsersPublicDocumentsWondershareCreatorTemptmpyqGtqC yjnwaf build Creating waf preparing tmpwaf adding waflibBuildpy as waflibBuildpy adding waflibConfigSetpy as waflibConfigSetpy adding waflibConfigurepy as waflibConfigurepy adding waflibContextpy as waflibContextpy adding waflibErrorspy as waflibErrorspy adding waflibLogspy as waflibLogspy adding waflibNodepy as waflibNodepy adding waflibOptionspy as waflibOptionspy adding waflibRunnerpy as waflibRunnerpy adding waflibScriptingpy as waflibScriptingpy adding waflibTaskpy as waflibTaskpy adding waflibTaskGenpy as waflibTaskGenpy adding waflibToolsinitpy as waflibToolsinitpy adding waflibToolsarpy as waflibToolsarpy adding waflibToolsasmpy as waflibToolsasmpy adding waflibToolsbisonpy as waflibToolsbisonpy adding waflibToolscpy as waflibToolscpy adding waflibToolscaliasespy as waflibToolscaliasespy adding waflibToolscconfigpy as waflibToolscconfigpy adding waflibToolscosxpy as waflibToolscosxpy adding waflibToolscpreprocpy as waflibToolscpreprocpy adding waflibToolsctestspy as waflibToolsctestspy adding waflibToolsccrootpy as waflibToolsccrootpy adding waflibToolsclangpy as waflibToolsclangpy adding waflibToolsclangxxpy as waflibToolsclangxxpy adding waflibToolscompilercpy as waflibToolscompilercpy adding waflibToolscompilercxxpy as waflibToolscompilercxxpy adding waflibToolscompilerdpy as waflibToolscompilerdpy adding waflibToolscompilerfcpy as waflibToolscompilerfcpy adding waflibToolscspy as waflibToolscspy adding waflibToolscxxpy as waflibToolscxxpy adding waflibToolsdpy as waflibToolsdpy adding waflibToolsdconfigpy as waflibToolsdconfigpy adding waflibToolsdscanpy as waflibToolsdscanpy adding waflibToolsdbuspy as waflibToolsdbuspy adding waflibToolsdmdpy as waflibToolsdmdpy adding waflibToolserrcheckpy as waflibToolserrcheckpy adding waflibToolsfcpy as waflibToolsfcpy adding waflibToolsfcconfigpy as waflibToolsfcconfigpy adding waflibToolsfcscanpy as waflibToolsfcscanpy adding waflibToolsflexpy as waflibToolsflexpy adding waflibToolsg py as waflibToolsg py adding waflibToolsgaspy as waflibToolsgaspy adding waflibToolsgccpy as waflibToolsgccpy adding waflibToolsgdcpy as waflibToolsgdcpy adding waflibToolsgfortranpy as waflibToolsgfortranpy adding waflibToolsglib py as waflibToolsglib py adding waflibToolsgnudirspy as waflibToolsgnudirspy adding waflibToolsgxxpy as waflibToolsgxxpy adding waflibToolsiccpy as waflibToolsiccpy adding waflibToolsicpcpy as waflibToolsicpcpy adding waflibToolsifortpy as waflibToolsifortpy adding waflibToolsintltoolpy as waflibToolsintltoolpy adding waflibToolsirixccpy as waflibToolsirixccpy adding waflibToolsjavawpy as waflibToolsjavawpy adding waflibToolsldc py as waflibToolsldc py adding waflibToolsluapy as waflibToolsluapy adding waflibToolsmd tstamppy as waflibToolsmd tstamppy adding waflibToolsmsvcpy as waflibToolsmsvcpy adding waflibToolsnasmpy as waflibToolsnasmpy adding waflibToolsnobuildpy as waflibToolsnobuildpy adding waflibToolsperlpy as waflibToolsperlpy adding waflibToolspythonpy as waflibToolspythonpy adding waflibToolsqt py as waflibToolsqt py adding waflibToolsrubypy as waflibToolsrubypy adding waflibToolssunccpy as waflibToolssunccpy adding waflibToolssuncxxpy as waflibToolssuncxxpy adding waflibToolstexpy as waflibToolstexpy adding waflibToolsvalapy as waflibToolsvalapy adding waflibToolswafunittestpy as waflibToolswafunittestpy adding waflibToolswinrespy as waflibToolswinrespy adding waflibToolsxlcpy as waflibToolsxlcpy adding waflibToolsxlcxxpy as waflibToolsxlcxxpy adding waflibUtilspy as waflibUtilspy adding waflibinitpy as waflibinitpy adding waflibansitermpy as waflibansitermpy adding waflibextrasinitpy as waflibextrasinitpy adding waflibextrascemscriptenpy as waflibextrascemscriptenpy adding waflibfixpy py as waflibfixpy py adding waflibprocessorpy as waflibprocessorpy Waf Leaving directory CUsersPublicDocumentsWondershareCreatorTemptmpyqGtqC yjnwaf build build finished successfully s cUsersPublicDocumentsWondershareCreatorTemptmpyqGtqC yjn homelivemachineaubio homelivemachineaubio cUsersPublicDocumentsWondershareCreatorTemptmpyqGtqC yjnwaf waf homelivemachineaubiowaf make Leaving directory homelivemachineaubio python waf configure verbose destdir homelivemachineaubiobuilddist jobs Info current tree is not clean M scriptsgetwafsh Setting top to Cmsys homelivemachineaubio Setting out to Cmsys homelivemachineaubiobuild Checking for msvc C compiler runner C Program Files x Microsoft Visual StudioInstallervswhereexe products legacy format json runner cmdexe Eon Von C Cmsys homelivemachineaubiobuildwafprintmsvc bat Hello All i am trying to use below code and seeing it can only detect upto around Hz where i am playing or above hz can i know how to make sure i can get accurate value in any freq import aubio import numpy as num import pyaudio import wave PyAudio object p pyaudioPyAudio Open stream stream popenformatpyaudiopaFloat channels rate inputTrue framesperbuffer Aubios pitch detection pDetection aubiopitchdefault Set unit pDetectionsetunitHz pDetectionsetsilence while True data streamread samples numfromstringdata dtypeaubiofloattype pitch pDetectionsamples Compute the energy volume of the current frame volume numsumsamples lensamples Format the volume output so that at most it has six decimal numbers volume fformatvolume printpitch printvolume Im trying to download the framework for the latest release but its not at hi I am using aubionotes with aubio on Linux to detect the pitch of a eguitar It works fine except with low frequencies When I play any note lower than Hz midi note it is not recognized I guess it might be a setting of aubionotes but I could not find anything fitting in the manual Is this a correct behaviour or is there a setting to change it