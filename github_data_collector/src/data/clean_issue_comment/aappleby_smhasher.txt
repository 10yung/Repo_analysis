Does it only counts collisions or handle them as well If I want to build my own hash table with MurmurHash how should I handle collisions Thank you Is it possible to add Adler Will there ever be a bit version of MurMur for avoiding hash collisions in larger datasets In MurmurHash cpp theres some care to point out that getblock and getblock are customization points for alignment and endianness as data is loaded from the void key But there are alignment and endian issues with writing to the void out parameters as well For example lines like uint tout h Maybe add analogous putblock putblock functions as customization points void putblock void p int i uint t t memcpycharp i sizeoft t sizeoft void putblock void p int i uint t t memcpycharp i sizeoft t sizeoft so putblock out h formerly uint tout h putblock out h formerly uint tout h Im not sure its technically ok to even form the unaligned pointers in the first place That is I dont think its safe C to cast a void to uint t unless its aligned appropriately I tried to test but it might take a while Hi I was just looking at possibly using MurmurHash in a project and Im assuming if I called MurmurHash x then each of the bit values returned will contain a random value between and the maximum value of an unsigned value ie I wanted to check is there a way I could limit either or both bit values to the maximum size of a signed bit value ie Thanks Hello I noticed that when you compile with Wextra Wall etc gcc complains that this statement may fall through in the switch cases The idea is to warn the programmer that the standard is to use a break statement Assuming you do want to go through all cases maybe you can add a attribute fallthrough in the cases Something like switchlen case k uint ttail attribute fallthrough case k uint ttail attribute fallthrough etc srccrccpp is a very simple CRC implementation SIMD implementations can be more than x faster See The last mixing steps in the loops of murmur and murmur A do h m h k And similar in murmur B h m h k h m h k But in murmur A they are reversed h k h m Is that intentional If so curious as to why Thanks