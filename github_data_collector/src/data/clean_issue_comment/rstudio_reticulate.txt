Stuff like b tfzerosshape b None is used pretty often from Python from R though youd need a workaround This PR adds pyellipsis so we can do b tfzerosshape c L L b reticulatepyellipsis NULL I am running the below code chunk with knitr in RStudio enginepython comment a True a False comment The expected output is that it prints an error immediately after a False but it somehow buffers until after comment as indicated below My temporary fix is to enginepython echoFALSE def fl import sys sysstdoutflush sysstderrflush enginepython comment a True a False fl comment However I cant be putting fl everywhere How can I make it print before comment without additional lines of code such as fl Im seeing an issue that has previously been reported Im on RHEL My version of python has been built from source using bash configure prefixoptpython withensurepipinstall enableshared enableoptimizations make j sudo make install Ive created a virtual environment using renvusepythonpython optpython binpython This creates a virtual environment in the project folder I activate this environment and use pip to install the necessary dependencies Heres a print of reticulatepyconfig r python dataanalyseogindsigtusersjwareposscreenduckrenvpythonvirtualenvsrenvpython binpython libpython optpython liblibpython mso pythonhome optpython optpython version default Jan GCC Red Hat numpy dataanalyseogindsigtusersjwareposscreenduckrenvpythonvirtualenvsrenvpython libpython sitepackagesnumpy numpyversion NOTE Python version was forced by RETICULATEPYTHON Everything seems to look fine If I run the python pytorch script from R using reticulate or reticulaterepl prediction results are random If I source the script from within the python virtual environment from the command line results come out correct What could be the reason for this Thanks a bunch I can supply the pytorch python code if needed but I dont think thats the issue here r Session info setting value version R version os Red Hat Enterprise Linux system x linuxgnu ui RStudio language EN collate enUSUTF ctype enUSUTF tz EuropeCopenhagen date Packages package version date lib source P assertthat RSPM R P cli RSPM R P crayon RSPM R P jsonlite RSPM R P packrat RSPM R png RSPM R P rappdirs RSPM R P Rcpp RSPM R renv local P reticulate RSPM R P rstudioapi RSPM R P sessioninfo RSPM R P withr RSPM R dataanalyseogindsigtusersjwareposscreenduckrenvlibraryR x pclinuxgnu tmpRtmp FA inrenvsystemlibrary P Loaded and ondisk path mismatch Otherwise packages configuring Python with eg onLoad functionlibname pkgname reticulateconfigureenvironmentpkgname could inadvertently attempt to configure a system copy of Python This ensures that packages do not accidentally behave in a userhostile way that is by disallowing packages from initializing Python before explicitly requested by the user Hi When running R in RStudio my R session is unable to automatically find the conda binary in order to manage conda environments when using reticulate It works when I explicitly provide the path to the conda binary or when I run R from a shell external to RStudio but I was wondering why it couldnt find conda since I installed anaconda in a pretty standard manner Running Syswhichconda turns up nothing meanwhile running which conda in the RStudio terminal finds the binary probably because it searches PATH Does Syswhich not have access to PATH It must not at least in my case I went looking through the source code and noticed that reticulatefindconda searches in a lot of standard locations as shown below However as it turns out my conda binary is located at optanaconda binconda Is this an unusual location Im sure I installed Anaconda in a normal way so Im wondering if opt should be added to condalocations in the below code in addition to opt and others For added context I am on MacOS Happy to do submit a simple PR if you agree these paths should be added r findconda function conda Syswhichconda if nzcharconda condalocations c minicondaconda pathexpandoptanacondabinconda pathexpandoptanaconda binconda pathexpandoptanaconda binconda pathexpandoptanaconda binconda pathexpandoptminicondabinconda pathexpandoptminiconda binconda pathexpandoptminiconda binconda pathexpandoptminiconda binconda pathexpandanacondabinconda pathexpandanaconda binconda pathexpandanaconda binconda pathexpandanaconda binconda pathexpandminicondabinconda pathexpandminiconda binconda pathexpandminiconda binconda pathexpandminiconda binconda pathexpandanacondabinconda pathexpandanaconda binconda pathexpandanaconda binconda pathexpandanaconda binconda pathexpandminicondabinconda pathexpandminiconda binconda pathexpandminiconda binconda pathexpandminiconda binconda if iswindows anacondaversions windowsregistryanacondaversions anacondaversions subsetanacondaversions anacondaversionsarch Platformrarch if nrowanacondaversions condascripts utilsshortPathName filepathanacondaversionsinstallpath Scripts condaexe condabats utilsshortPathName filepathanacondaversionsinstallpath condabin condabat condalocations ccondalocations condabats condascripts condalocations condalocations fileexistscondalocations if lengthcondalocations condalocations else NULL else conda Short description Calling usecondaenv with a valid Anaconda installation throws a subscript out of bounds error Reprex Consider this reprex r libraryreticulate pydiscoverconfig python CUsersusernameAnaconda pythonexe libpython CUsersusernameAnaconda python dll pythonhome CUsersusernameAnaconda version default Aug MSC v bit AMD Architecture bit numpy CUsersusernameAnaconda Libsitepackagesnumpy numpyversion python versions found CUsersusernameAnaconda pythonexe CPython pythonexe CPython pythonexe usecondaenv Error in condaenvpython subscript out of bounds usecondaenvbase Error in condaenvpython subscript out of bounds usecondaenvbase Anaconda Scriptscondaexe Error Specified conda binary Anaconda Scriptscondaexe does not exist supCreated on by the reprex package v sup Expected behavior There is a valid Anaconda installation which is reported as the first result by pydiscoverconfig Thus usecondaenv or usecondaenvbase should return TRUE Observed behavior A subscript out of bounds error is thrown Session Info Here is my sessionInfo r R version Platform x w mingw x bit Running under Windows x build Matrix products default locale LCCOLLATEEnglishUnited States LCCTYPEEnglishUnited States LCMONETARYEnglishUnited States LCNUMERICC LCTIMEEnglishUnited States attached base packages stats graphics grDevices utils datasets methods base loaded via a namespace and not attached Rcpp ps packrat digest R jsonlite reprex evaluate rlang fs callr whisker reticulate rmarkdown tools xfun compiler processx clipr htmltools knitr I am working on windows Installed python Open a fresh Rstudio session and Installed the github version of the reticulate package and ran the following commands Not sure why virtualenvcreate and it resulted in the following error and did not understand what I am missing r reticulatepyconfig python CPython pythonexe libpython python dll pythonhome CPython version v c f d e Oct MSC v bit AMD Architecture bit numpy CUsersusernameAppDataRoamingPythonPython sitepackagesnumpy numpyversion reticulatevirtualenvcreate envname python env python C Python pythonexe Creating virtual environment python env Using python C Python pythonexe Warning in system python args CUsersusernameDocumentsvirtualenvs python envbinpython not found Error Error installing packages pip wheel setuptools supCreated on by the reprex package v sup details summarySession infosummary r devtoolssessioninfo Session info setting value version R version os Windows x system x mingw ui RTerm language EN collate EnglishUnited States ctype EnglishUnited States tz AmericaNewYork date Packages package version date lib source assertthat CRAN R backports CRAN R callr CRAN R cli CRAN R crayon CRAN R desc CRAN R devtools CRAN R digest CRAN R ellipsis CRAN R evaluate CRAN R fansi CRAN R fs CRAN R glue CRAN R highr CRAN R htmltools CRAN R jsonlite CRAN R knitr CRAN R lattice CRAN R magrittr CRAN R Matrix CRAN R memoise CRAN R pkgbuild CRAN R pkgload CRAN R prettyunits CRAN R processx CRAN R ps CRAN R R CRAN R rappdirs CRAN R Rcpp CRAN R remotes CRAN R reticulate Github rstudioreticulate ccbad rlang CRAN R rmarkdown CRAN R rprojroot CRAN R sessioninfo CRAN R stringi CRAN R stringr CRAN R testthat CRAN R usethis CRAN R withr CRAN R xfun CRAN R yaml CRAN R CUsersusernameDocumentsRR library details If I run the following code in RStudio r libraryreticulate builtins importbuiltins builtinsprintfoo I get no output However if I run it from an R terminal I get the expected output foo Note that in RStudio if I later trigger anything in Python with reticulate even running an empty Python command r libraryreticulate builtins importbuiltins builtinsprintfoo do some other stuff pyrunstring I will finally see the printed output foo This is a critical issue in that for Python packages that print messages for the user a user using RStudio will likely never see the messages and if they do it will not be at the time the message was intended to be printed Dear Rstudio team I have a problem The cause might be reticulate shiny or an interaction between both Details of my system sessionInfo R version Platform x w mingw x bit Running under Windows x build Matrix products default locale LCCOLLATEEnglishGermany LCCTYPEEnglishGermany LCMONETARYEnglishGermany LCNUMERICC LCTIMEEnglishGermany attached base packages stats graphics grDevices utils datasets methods base other attached packages readr datatable mailR anytime DT reticulate rmarkdown shiny loaded via a namespace and not attached Rcpp pillar compiler later RmethodsS Rutils tools zeallot digest jsonlite evaluate tibble pkgconfig rlang rstudioapi crosstalk yaml xfun fastmap rJava stringr knitr rappdirs htmlwidgets vctrs hms R magrittr backports promises htmltools mime xtable httpuv stringi crayon Roo reticulatepyconfig python CProgramDataAnaconda pythonexe libpython CProgramDataAnaconda python dll pythonhome CProgramDataAnaconda version default Jun MSC v bit AMD Architecture bit numpy CProgramDataAnaconda Libsitepackagesnumpy numpyversion python versions found CUsersAppDataLocalProgramsPythonPython pythonexe CProgramDataAnaconda pythonexe The problem I have a a shiny app calling a python file through pyrunfile When I launch the app the first time in a new R session within Rstudio it works as expected After stopping the app and launching it again the second time it crashes stops without delivered errors The third time it works The fourth time it crashes etc It does not depend on the content of the python file Moreover I can call pyrunfile without any problems from the R console in RStudio Morover if I call the python file from the R console after a successful launch of the app and before a potential nonsuccessful launch then the problem dissapears the next launch of the app will be also successful If I start the app from the RGui it crashes and delivers following error Warning Error in sysstdoutflush attempt to apply nonfunction pyflushoutput pyrunstring pyinjectr ensurepythoninitialized pyrunfile observer C Users Desktop Test serverR runApp reprex testpy import numpy as np anparray serverR libraryshiny libraryreticulate shinyServerfunctioninput output session observe pyrunfiletestpy outputa renderTextpastepya uiR libraryshiny shinyUIfluidPage fluidRow column h Test h textOutputa Further details The problem is new it arrised after an update of the R libraries on the January The previous update was on December I have removed and installed the older versions of packages which were updated in this period for example reticulate it did not help I cannot find the cause of the problem Please help Thanks 