Hi I am trying to implement inapp purchasing in the steam game Im using steamwroksnet SDK ingame but it not working And I have no idea how to implement inapp in the steam network please anyone give suggestions Thanks in advance Hello Ive always build for Windows Mac and Linux from my Windows but now that Apple need to have the Mac builds notarised I need to build the Mac version from my MacBook Pro Ive got the notarisation part fixed But my builds wont initialise Steam properly Im using Unity f and SteamworksNET My OS is Catalina Ive tried to move out the libsteamapi and rename it to steamapibundle but that doesnt work Project affected Im also running this nonunity project at the same time I start the game then enter the lobby screen then exit When starting the game again unity crashes My guess is SteamMatchmakingServerListResponse finishes but doesnt properly release the HServerListRequest instance Ive tried everything I can I cant find this handler in your library Help please hi I am trying to login in steam using appid but issues are when I am login in unity editor it work fine when I make exe build and run it showing error like below SteamworksNET SteamAPIInit failed Refer to Valves documentation or the comment above this line for more information What I can do Please give me a suggestion I need help to solve this issue Thanks advance Untitled So I am trying to connect to the server using Auth Session ticketsTo ark official server in the steamworks docs after you InitiateGameServercnnection it states The contents of pAuthBlob should then be sent to the game server for it to use to complete the authentication process I got the point where I get the blob and it is not but there is no guidemethod to use to send the blob to the server any help Current code mTicket new byte SteamUserGetAuthSessionTicketmTicket out mpcbTicket ConsoleWriteLineSteamUserGetAuthSessionTicketTicket out pcbTicket mHAuthTicket mpcbTicket await TaskDelay if mHAuthTicket HAuthTicketInvalid mpcbTicket EBeginAuthSessionResult ret SteamUserBeginAuthSessionmTicket intmpcbTicket SteamUserGetSteamID ConsoleWriteLineSteamUserBeginAuthSessionmTicket intmpcbTicket SteamUserGetSteamID ret else ConsoleWriteLineCall GetAuthSessionTicket first TaskDelay int blobl SteamUserInitiateGameConnectionpAuthBlob CSteamID true ConsoleWriteLineBlobl value blobl When getting SteamUGCDetailstmrgchTitle by calling SteamUGCGetQueryUGCResult nonEnglish values in my case Japanese and Chinese will cause an encoding issue It seems to be affected by Administrative Language Settings in Windows The return value only appears to be correct when Beta Use Unicode UTF for worldwide language support is enabled Unity requires filenames to be the same as class names for MonoBehaviour components to work Otherwise the IDE reports a warning or does something worse The current implementation of the DISABLESTEAMWORKS define creates a broken component in certain versions of Unity This causes some real headscratching bugs as Unity throws a little tantrum whenever I try to put other components on the same gameobject The SteamManager class will of course not declare itself as the cause because DISABLESTEAMWORKS has hidden the entire class and left nothing in its place Upgrading Unity is also a nightmare as the project has a fit trying to figure out what the broken component is Ideally I would like the component to be empty but not report warnings or errors when referenced When I looked at how my coworkers had implemented SteamworksNET they had rewritten the SteamManager class to avoid this issue Eg if UNITYANDROID UNITYIOS UNITYTIZEN UNITYTVOS UNITYWEBGL UNITYWSA UNITYPS UNITYWII UNITYXBOXONE UNITYSWITCH UNITYEDITOR define DISABLESTEAMWORKS endif if DISABLESTEAMWORKS using UnityEngine using SystemCollections using Steamworks etc else my coworkers addition using UnityEngine public class SteamManager MonoBehaviour public static bool Initialized get return false endif DISABLESTEAMWORKS Please consider making the SteamManager a bit more conscientious rlabrecque Hi Im looking for a Steamworks package version for Unity but cant find one So I fork this and modify it to a package I would like to know if you are planning to do this so I neednt maintain the package by myself Anyway thanks for your sharing I originally though the implementation was built against an older version of the API but it seems to be built against but the call to invite to Remote Play Together BSendRemotePlayTogetherInvite in ISteamRemotePlay is missing Is there an easy way to add it to the implementation myself or could the code be updated with this part of the API Sorry for closing and reopening I was a little to fast