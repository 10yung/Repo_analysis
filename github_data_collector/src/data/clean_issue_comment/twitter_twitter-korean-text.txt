Were migrating to Scala and need an artifact of this library On trying to build the twitterkoreantext project I get the following error The method iterator is ambiguous for the type SeqKoreanTokenizerKoreanToken Other than the initial library code I installed m scala and am using scalatest version which is for scala versions What am I doing wrong Updated pomxml Twitter Korean Text Scala library to process Korean text Copyright Twitter Inc Licensed under the Apache License Version the License you may not use this file except in compliance with the License You may obtain a copy of the License at Unless required by applicable law or agreed to in writing software distributed under the License is distributed on an AS IS BASIS WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND either express or implied See the License for the specific language governing permissions and limitations under the License project xmlns xmlnsxsi xsischemaLocation modelVersion modelVersion groupIdcomtwitterpenguingroupId artifactIdkoreantextartifactId packagingjarpackaging version SNAPSHOTversion nameKorean Text Processing Utilitiesname url descriptionScala library to process Korean textdescription inceptionYear inceptionYear licenses license nameThe Apache Software License Version name url distributionrepodistribution commentsA businessfriendly OSS licensecomments license licenses scm url connectionscmgit developerConnectionscmgitgitgithubcomtwittertwitterkoreantextgit developerConnection tagkoreantext tag scm prerequisites maven maven prerequisites developers developer idnlpenguinid nameHohyon Ryuname url developer developers issueManagement url systemGithub Issuessystem issueManagement properties projectbuildsourceEncodingUTF projectbuildsourceEncoding projectreportingoutputEncodingUTF projectreportingoutputEncoding mavencompilersource mavencompilersource mavencompilertarget mavencompilertarget scalaversion scalaversion scoveragepluginversion scoveragepluginversion encodingUTF encoding properties distributionManagement snapshotRepository idsonatypenexussnapshotsid nameSonatype Nexus Snapshotsname url snapshotRepository repository idsonatypenexusstagingid nameNexus Release Repositoryname url repository distributionManagement dependencies dependency groupIdorgscalalanggroupId artifactIdscalalibraryartifactId versionscalaversionversion dependency dependency groupIdcomtwittergroupId artifactIdtwittertextartifactId version version dependency dependency groupIdorgslf jgroupId artifactIdslf jnopartifactId version version scopeprovidedscope dependency dependency groupIdorgscalatestgroupId artifactIdscalatest M artifactId version version scopetestscope dependency dependency groupIdjunitgroupId artifactIdjunitartifactId version version scopetestscope dependency dependencies reporting plugins plugin groupIdnetalchim mavengroupId artifactIdscalamavenpluginartifactId version version plugin plugin groupIdorgapachemavenpluginsgroupId artifactIdmavenprojectinforeportspluginartifactId version version plugin plugin groupIdorgscoveragegroupId artifactIdscoveragemavenpluginartifactId versionscoveragepluginversionversion configuration excludedPackagescomtwitterpenguinkoreanqaexcludedPackages configuration plugin plugins reporting build pluginManagement plugins plugin groupIdorgapachemavenpluginsgroupId artifactIdmavensitepluginartifactId version version plugin plugin groupIdorgapachemavenpluginsgroupId artifactIdmavenscmpublishpluginartifactId version version configuration contentprojectreportingoutputDirectorycontent checkinCommentPublishing Site Docs for projectartifactIdprojectversion checkinComment skipDeletedFilestrueskipDeletedFiles pubScmUrlscmgitgitgithubcomtwittertwitterkoreantextgitpubScmUrl scmBranchghpagesscmBranch configuration plugin plugin groupIdnetalchim mavengroupId artifactIdscalamavenpluginartifactId version version executions execution idscalacompilefirstid phaseprocessresourcesphase goals goaladdsourcegoal goalcompilegoal goals execution execution idscalatestcompileid phaseprocesstestresourcesphase goals goaltestCompilegoal goals execution executions plugin plugin groupIdorgapachemavenpluginsgroupId artifactIdmavencompilerpluginartifactId version version executions execution phasecompilephase goals goalcompilegoal goals execution executions plugin plugin groupIdorgapachemavenpluginsgroupId artifactIdmavensurefirepluginartifactId version version plugin plugin groupIdorgapachemavenpluginsgroupId artifactIdmavenreleasepluginartifactId version version plugin plugin groupIdorgscoveragegroupId artifactIdscoveragemavenpluginartifactId versionscoveragepluginversionversion executions execution goals goalcheckgoal goals execution executions configuration scalaVersionscalaversionscalaVersion configuration plugin plugin groupIdorgeludercoverallsgroupId artifactIdcoverallsmavenpluginartifactId version version configuration coberturaReports paramprojectbuilddirectorycoberturaxmlparam coberturaReports sourceDirectories parambasedirparam sourceDirectories configuration plugin plugins pluginManagement build profiles profile idreleaseprofileid build plugins plugin groupIdorgapachemavenpluginsgroupId artifactIdmavengpgpluginartifactId version version executions execution idsignartifactsid phaseverifyphase goals goalsigngoal goals execution executions plugin plugins build profile profiles project hello I user twitter analyzer with python And I want to make userdictionary It means when I tokenize now it make tokens like this tokens Noun Noun Noun but I want make tokens like this tokens Noun or Compound is it possible if possible how could I make this I removed character in nounstxt The following strings take more than ms to be tokenized Bamcos We also run into OOM errors when tokenizing many of these in a row javalangOutOfMemoryError GC overhead limit exceeded VM error GC overhead limit exceeded Scala is released last week Do you have a plan to publish twitterkoreantext for it in the near future In this case maven scala plugin does not have dedicated cross building feature so that Id like to open a PR for migration from maven to SBT if you agree Tools class names need to be updated Thanks for your convenient and fast Korean parsing system However I found there exists a wrong rule on stemming system which does not follow the Korean spelling system For example has root form of so correct stemming form should be one of or while the stemming system understands that word as which means with redundant ending token There is another example like Correct form so correct form should be System says Correct form so correct form should be or System says Stemming system only misgiving this type of spelling error for variations Because usually is the basic form is a ending morpheme to make the end of sentence or word Although its very common error in Korean spelling system and doesnt related with the developing issue I think you should provide it correctly FYI herekorean is an semiofficial article from the National Institute of the Korean Language Thanks again with the convenient system Stemming system hash hash posHashtag text hash hash twittertext repo 