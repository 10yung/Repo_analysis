It impedes workflow to keep asking whether urbandictionary results should be shown in available ideally there would be an argument like showUrbanDictionarycgetOptionsessionshowUDNATF that asks the user for their preference on first call saves it in option sessionshowUD and then uses that choice unless the argument showUrbanDictionary is explicitly set to T or F so as per its possible for people to publish a package name that isnt identical to other package names but is extremely similar Perhaps that should be a check too It does add a bit of computational overhead that will slow things down but a quick stringdiststringdist could be run between the proposed name and everything on CRAN or github or whatevs and if anything returns a string distance of then that should be in its own section as not quite your name but close What do you think The sentiment part of my results is not getting populated I poked around a wee bit and also notice this tidytext workaround that can probably get dismantled now Indeed changes in tidytext probably explain why sentiment analysis isnt working right now When I visit the README via CRAN one or more of the screenshots are very large The template for READMEs in usethis might have some good remedies in particular the chunk option outwidth Prepare for release x devtoolscheck x devtoolscheckwindevel x rhubcheckforcran x revdepcheckrevdepchecknumworkers x Polish NEWS x Polish pkgdown reference index Submit to CRAN x usethisuseversionpatch x Update crancommentsmd x devtoolssubmitcran x Approve email Wait for CRAN x Accepted tada usethisusegithubrelease usethisusedevversion Tweet availableongithubreproducibleexample Error in openconnectioncon rb HTTP error on mac R It would be great if we could turn off the check by geturbandata when we call available Something like r geturbandata function name warnoffensive TRUE if interactive warnoffensive catUrban Dictionary can contain potentially offensive results n should they be included Y es N o n result tryCatchscan what character quiet TRUE nlines error functionx N if identicaltoupperresult Y returnNULL term tryCatchasdataframeudapigettermname error functione e tags tryCatchudapigettagsnametags error functione e structurelistterm tags class availableurban And then r available function name browse getOptionavailablebrowse TRUE warnoffensive TRUE res listvalidpackagenamename availableoncranname availableonbiocname availableongithubname terms nametosearchtermsname res cres unlistrecursive FALSE lapplyterms functionterm compactlistgetbadwordsterm getabbreviationterm getwikipidiaterm getwiktionaryterm geturbandataterm warnoffensive getsentimentterm structureres class availablequery packagename name browse browse This is a start on tackling It takes a list of US indigenous tribe names from US Bureau of Indian Affairs alerts the user to avoid naming a new pkg with anything anything on that list Im a bit stuck on one detail for example this will flag dispute because it contains ute Not sure what the best way to handle this is There are a lot of words that contain ute as I discovered using so we might need a different matching approach here Using an Indigenous tribes names for software packages is widely considered to be an inappropriate and offensive use of those names eg In the spirit of the bad words checking that this pkg does I wonder if this pkg could be a good place to have a checker that looks to see if a proposed pkg name is a tribes name and alert the developer to avoid it Perhaps this could be a good list to check names with and its available in XML but would still need a little tidying to be useful here Several of my anthropologist colleagues have recommended this list also available in JSON XML and CSV geturbandata checks with the user if they want to include Urban dictionary as a source Because Urban Dictionary can contain potentially offensive results should they be included Y es N o However I got asked times Which I think it is too much Could that check be done before the lappy call and just once I could submit a PR to change this 