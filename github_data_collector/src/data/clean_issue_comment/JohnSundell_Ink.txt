See CommonMark example Added GroupFragment protocol that can hold multiple fragments HTML fragment comforms to this as it needs to hold its HTML plus any Markdown fragments included inside the HTML block HTML parsing will set state possibleMarkdown whenever it comes across two newlines in a row At this point it checks for markdown characters and tries to parse them Checkout the tests I added for examples of markdown inside HTML I specifically added this so I could create a div with a class attribute containing images as follows Thus allowing me to use css to style the images div classmyimageclass My image imagejpg div Characters which are not in the single byte Unicode range are not rendered properly in the output generated by Ink Characters like em dash used in the Ink READMEmd file are passed through unchanged to the output HTML There may be browser settings to cope with such extended graphemes but Safari by default does not This code intercepts such characters and converts them to HTML entities so an em dash for example is converted to Im far from certain that I put that intercept in an optimal place and is a pretty bruteforce approach but Im sure discussion here will improve that Note the correct rendering of a line from the Ink README img width altInkUnicode src As mentioned in benchmarkingmd this PR is not ready to be merged at this stage just here for discussion The CLI improvements are ready to be merged as PR 