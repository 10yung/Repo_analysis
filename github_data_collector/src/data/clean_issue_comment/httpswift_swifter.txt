The content length field is parsed without validation in readHttpRequest if let contentLength requestheaders contentlength let contentLengthValue IntcontentLength requestbody try readBodysocket size contentLengthValue If contentlength is set to this results in the creation of an UnsafeMutableBufferPointer with a negative count downstream a fatalError Routing behavior for variable paths has changed in compared to The variable path can no longer match multiple subpaths For example I have this route foobarpath I expect it to be able to match anything after foobar such as foobarabc As of the HttpRouter behaved as expected but this change line of HttpRouterswift that was released with added a new behavior that requires the path to be the same length as the route Now the route will only match on a path such as foobara and will not match on foobarab since the path goes deeper than the length of the route Was this an intentional change or can this be reverted to the old behavior Dear Thank you for reading my issue I have launched http server on Mac OS using your library Your library is working well on Mac OS but when I run http server on Mac OS server is not running and show bindFailedPermission denied I attached screenshot for my issue I thank if you tell me how to resolve this issue Thanks Regards When using Swifter for unit tests it would be nice to be able to reset all routes in tearDown Occasionally a request will fail with error The network connection was lost likely due to stoppingstarting several servers very quickly that all try to bind to Being able to keep an instance running but resetting the routes should make this error less likely Can i get query parameters from websocket route let server HttpServer server ws websockettext session text in connected session in get someparameter here disconnected session in In the WebSocket API for html they have a bufferedCount property that we can use to determine if we should send more messages or if we should wait My app sends image frames from the screen and I would like to drop frames instead of trying to send them all in case the connected client can t receive them fast enough Im currently trying to fix an issue where overwriting the handler for GETpathto does not give the correct result While fixing that bug I have encountered issues because I am not familiar with iterators and recursion and you seem to use where its not necessary I think Id like to know the reasoning behind using inout generators and recursion instead of iteration and arrays because Im thinking of rewriting a few functions to fix some issues I ran into and I dont want my pull request to go to waste I try to upload files by WLAN but the speed is not as fast as expected It looks like let rv UInt buffer bytesRead which located in Socketswift cost much time And the UInt is for requestbody I wonder why Uint is used as the type of requestbody And will there be potential problem if I use another typelike Data instead of UInt Im new for Swift and not good at English Wish I have expressed my question properly I tried to load local html as follow let path BundlemainresourcePath let server HttpServer server path directoryBrowserpath do try serverstart forceIPv true printServer has started port try serverport Try to connect now catch printServer start error error When I visit it shows some error as follow The page loading is ok but no content showing maybe its the problem with resource like css and js And when I start a simple http server like python m SimpleHTTPServer its working perfectly 