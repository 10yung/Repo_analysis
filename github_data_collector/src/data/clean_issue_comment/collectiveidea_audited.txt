Added reference to initializer file name auditedrb Replace the hardcoded error message for a blank audit comment with Rails default This meets Rails convention and allows i n support Change If a model requires audit comments but you only change attributes that are excluded from auditing then dont require an audit comment Example of need Im working on a project with Southwark Council We are creating a public audit log of changes to affordable housing in the local area I have needed to monkey patch this fixfeature in twice I dont want to create an audit log entry when changing the aasm state field By adding the state field as an excluded column this fixes that but then creates a validation error if I turn on commentrequired A different user of the system edits two attributes on this model to the other attributes on the model and I dont want to create audit logs for these either Same problem as above Considerations I am pretty certain that this is a bug when it comes to updating a model However my suggested fix also makes it so that an audit comment isnt required if youre creating a model where only excluded attributes are present I think there is more room for debate around whether this is expecteddesired behaviour We would like to store the audits table in a separate database With Rails or ankanemultiverse I can do that by setting up an abstract base record for all models I want to store in a secondary database ruby class SecondaryRecord ActiveRecordBase selfabstractclass true connectsto database writing secondary reading secondaryreplica end and would then want to set up the audit model to live there ruby class CustomAudit SecondaryRecord end But since that CustomAudit record does not inherit from AuditedAudit this wont really work This pull request creates an AuditedAuditable concern which lets me store audits in the secondary database like so ruby class CustomAudit SecondaryRecord include AuditedAuditable end I am referring to the associatedid associatedtype userid and usertype columns I only have a small Rails API and only have model so no associations When audited populates the table all of these columns are populated with NULL and Id idealling like to remove them I have tried removing all references to them in the migration file but that returns the ErrorActiveModelMissingAttributeError cant write unknown attribute userid Is there a way to simply remove these columns from the table This changes adds support to apartment users setting tenantid to audit using the method currenttenant This commit d d b d cbafb b a e b e fd de added the redacted feature which should redact chosen attributes while not ignoring them completely It was previously only working on update this commit makes it work on create as well Additionally redacted attributes with the correct redaction value were showing up in auditedchanges column even if they werent changed This fixes that as well Resolves The enum change is a major breaking change but is not listed under Breaking Changes data in the database still contains the enum string values Ideally the CHANGELOG would list the enum change as such and provide a migration path for users who already rely on the behavior of Also semirelated The CHANGELOG still says is unreleased even though its in releases or if its trying to show nothing under UNRELEASED that is not very clear cc fatkodima EDIT Deleted some paragraph saying that reverting still produced different results that was due to a bad merge conflict resolution Reverting the PR fixes the issue It would be useful if this could audit when an object was accessed using the afterfind ActiveRecord callback Additionally auditing of the afterarchive callback from the actasarchival project when saving the audit for a create action fields marked as redacted have their value saved in the database on update the value is correctly ignored