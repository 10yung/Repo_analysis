 This PR changes the build badges to SVG for sharper readability PS Also removes a gemnasium badge since that service has ben disontinued As we had a Nominatim custom instance we needed to set a custom API server host other than I also updated readme Feel free to tell me if I have anything to change in unit testing If you set GeokitGeocodersproviderorder or GeokitGeocodersipproviderorder to fcc it blows up because camelcases the class provider name to FccGeocoder even though the name of the class is actually FCCGeocoder After the failed attempt with now we did some changes that enable the support to Ruby v v and v This PR includes Bump to a newer version of Webmock Fix some expectations failing due to case sensitiveness with nonASCII characters Drop testing on Travis to no longer maintained Ruby versions Add testing on Travis to maintained Ruby versions Add nonblocking testing on Travis to Ruby head version Why there is add all method but first method is not assigned now GeokitGeocodersGoogleGeocoderapikey apikey res GeokitGeocodersGoogleGeocoderdoreversegeocodelonlan p resallfirstfulladdress expect GeokitGeocodersGoogleGeocoderapikey apikey res GeokitGeocodersGoogleGeocoderdoreversegeocodelonlan p resfirstfulladdress The documentation specifies you can set a global wait time with GeokitGeocodersrequesttimeout However it would be nice to be able to specify this on a per request basis In certain situations the acceptable wait time for a request is higher than others For example if I want to attempt to locate a user based on their ip with IpGeocoder when a user first visits my application I would think the acceptable wait time is a lot less than if the application tries to geolocate an address after a form submission It would be nice if the geocode method accepted an arg to have a custom timeout time for a specific request GeokitGeocodersIpGeocodergeocodexxxxxxxxxxxx requesttimeout Hi Im using the geokit gem to determine if a polygon contains a point or not Somehow if a point is close to the border of a large polygon coordinates geokit says it is not included even if it is included To reproduce the error see the following example Link to an image of the polygon and the point Link to the polygon And the Point looks like this type Feature properties geometry type Point coordinates Im using geokit gem to determine if polygon contains point or not Faced with geokit issue point is obviously inside polygon while geokit says it is not I need help how to manage with geokit to make it work properly See picture code attached ruby version ruby rc trunk x linux gem list geokit LOCAL GEMS geokit Code require geokit region GeokitPolygonnew GeokitLatLngnew GeokitLatLngnew GeokitLatLngnew GeokitLatLngnew regioncontains GeokitLatLngnew Result irb rc require geokit true rc region GeokitPolygonnew rc GeokitLatLngnew rc GeokitLatLngnew rc GeokitLatLngnew rc GeokitLatLngnew rc GeokitPolygon x a points GeokitLatLng x a lat lng GeokitLatLng x a f lat lng GeokitLatLng x a c lat lng GeokitLatLng x a a lat lng GeokitLatLng x a lat lng rc regioncontains GeokitLatLngnew false Here is a piece of screenshot with polygon bounds and point inside it I have some issues on the endpoint and heading methods that seems to send incorrect results For exemple the heading between points are not exactly degrees if you go from point A to point B and point B to point A ruby p GeokitLatLngnew p GeokitLatLngnew p headingfromp p headingfromp 