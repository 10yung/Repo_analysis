Since upgrading to bundler I cannot utilize Appraisal anymore I get this error shell script bundle exec appraisal env rake version BUNDLEGEMFILErootgemfilesenvgemfile bundle exec rake version bundler failed to load command rake usrlocalbundleruby binrake GemLoadError You have already activated bundler but your Gemfile requires bundler Since bundler is a default gem you can either remove your dependency on it or try updating to a newer version of bundler that supports bundler as a default gem usrlocalbundlegemsbundler libbundlerruntimerb in checkforactivatedspec usrlocalbundlegemsbundler libbundlerruntimerb in block in setup usrlocalbundlegemsbundler libbundlerspecsetrb in each usrlocalbundlegemsbundler libbundlerspecsetrb in each usrlocalbundlegemsbundler libbundlerruntimerb in map usrlocalbundlegemsbundler libbundlerruntimerb in setup usrlocalbundlegemsbundler libbundlerrb in setup usrlocalbundlegemsbundler libbundlersetuprb in block in top required usrlocalbundlegemsbundler libbundleruishellrb in withlevel usrlocalbundlegemsbundler libbundleruishellrb in silence usrlocalbundlegemsbundler libbundlersetuprb in top required rootb d eb fe This error does not happen if I upgrade to a version of bundler lower than The error persists even if I uninstall the default version of bundler which seems to be causing the loader confusion The error persists regardless of what bundler version is set as the default Steps to reproduce Start a Ruby docker container any Ruby version that supports bundler and appraisal will do shell script docker run it ruby bash Then inside the container shell script cd Go to HOME directory to avoid creating files under Update to newer bundler version gem update system Ensure RubyGems is uptodate gem install bundler v echo appraise env do gem rake Any gem will do end Appraisals echo source gem appraisal Gemfile bundle install bundle exec appraisal install bundle exec appraisal env rake version I expect rake version xyz One thing to note is that the error does NOT happen if I use the appraisalgenerated gemfile manually shell script BUNDLEGEMFILErootgemfilesenvgemfile bundle exec rake version rake version Preliminary investigation Tweaking how Appraisal prepares the Bundler environment for the desired subcommand to execute I was able to get my command to run properly if I removed RUBYOPT from the list of environment variables unset during unsetbundlerenvvars I wonder if it would be more correct to prepare the Bundler environment using logic similar to Bundlerwithoriginalenv or Bundlerwithcleanenv I seem to be getting this error when running bundle exec appraisal rails rake spec FailureError super unless initialized SprocketsRailtieManifestNeededError Expected to find a manifest file in appassetsconfigmanifestjs But did not please create this file and use it to link any assets that need to be rendered by your app Example linktree images linkdirectory javascripts js linkdirectory stylesheets css and restart your server my Appraisals file look like appraise rails do gem rails gem rspecrails end appraise rails do gem rails gem rspecrails end appraise rails do gem rails gem rspecrails end appraise rails do gem rails rc gem rspecrails end appraise rails do gem rails gem rspecrails beta end and I have a dummy app here in spec dummy app assets config manifestjs controllers abccontrollerrb applicationcontrollerrb note that the dummy app itself has the appassetsconfigmanifestjs but it doesnt seem to be picked up when I run the specs Im trying to follow the same pattern I see in clearance to implement the Appraisals Also make install spec less specific about generated option order Ignore rubyversion and rubygemset to ease local development Fixes If you declare a gitsource at the top level of your Gemfile or a spec in Appraisals it will substitute the gem source in gem declarations If you want to use those gem sources in nested groups declared with group platforms platform source git or path the gitsource declarations from the top level arent inherited so they dont work like they do with bundler Fortunately in BundlerDSL theres a protected gitsources writer and all the groups are also declared in that file It should be easy enough to assign all of the group objects to a copy of the gitsources That would make the substitutions work These rubies are no longer maintained and by dropping support we get inline with the range of rubies bundler supports and get CI green Using bundler and Rails not sure which if either are relevant after running bundle exec appraisal install I have a directory at gemfilesbundle It has one file in it config containing only BUNDLERETRY I guess current bundler somehow puts this there to store config just for those gemfiles Or something Do you think this should be checked into source control or gitignored Im not really sure Im not sure why I dont end up with a bundle dir at the root of my project when using bundler ordinarily or why it shows up here Can the README offer advice Question I have a basic spec and am simply trying to debug it with byebug specsetupspec require spechelper describe XYZObject do it should allow me to set it up do byebug end end Gemfile source gem appraisal gem rdoc gem railscontrollertesting group test development do gem byebug require true gem rspecrails end platforms ruby do end Appraisals file appraise rails do gem rails end appraise rails do gem rails end appraise rails do gem rails end when I run appraisal rails rake spec I get XYZObject should allow me to set it up FAILED Failures XYZObject should allow me to set it up FailureError byebug NameError undefined local variable or method byebug for RSpecExampleGroupsXYZObject x fdfac a specsettingsspecrb in block levels in top required however if I simply throw a require byebug at the top of settingsspecrb then it appears to drop into byebug correctly is that the expected behavior the reason Im asking is because I had thought the gems listed in Gemfile should be available during the appraisal run Note that I tried this with my Gemfile as both gem byebug and also gem byebug require true I should note that I am testing a GEM that has a gemspec file at its root as well as a Gemfile and also an Appraisals file evalgemfile is not supported by appraisal Error appraisal libappraisalgemfilerb in run undefined method evalgemfile for AppraisalGemfile x dfb f bb NoMethodError evalgemfile is useful for sharing dependencies between multiple Gemfiles Eg I have a rubocopgemfile thats included into the main Gemfile but also into a separate rubocoponly Gemfile for running as a separate task on CI The README suggests not checking in the lockfiles This means that when you update your local repo with latest remote master your appraisal gemfiles may be updated but the lockfiles contain different incompatible versions causing an error during appraisal install eg You have requested nokogiri The bundle currently has nokogiri locked at Try running bundle update nokogiri Is there any way to force appraisal to regenerate the lockfiles in such a case I upgraded from the older paradigm of using Appraisal in which I had specified Appraisal in a Gemfile that was in a folder at the same level of my gemfile folder was this a mistake In any event I added to specifying in my gemspec file to sadddevelopmentdependency appraisal and I removed the gem appraisal that was in my Gemfile but unfortunately now I get File does not exist minitestrg did I miss something My specs are written in Minitest and they are all in testlib since they are all testing lib code I have four specs and they all end in testrb trying to figure out what I missed here bundle exec appraisal rake test BUNDLEGEMFILEUsersjasonProjectsnondestructivemigrationsnondestructivemigrationsgemfilesrails gemfile bundle exec rake test File does not exist minitestrg Run options seed Running tests Finished tests in s testss assertionss tests assertions failures errors skips Coverage report generated for Unit Tests to UsersjasonProjectsnondestructivemigrationsnondestructivemigrationscoverage LOC covered rake aborted Command failed with status Usersjasonrvmgemsruby gemsrake exerake in top required Usersjasonrvmgemsruby binrubyexecutablehooks in eval Usersjasonrvmgemsruby binrubyexecutablehooks in main Tasks TOP test See full trace by running task with trace Run options seed Running tests Finished tests in s testss assertionss tests assertions failures errors skips 