Issue AESGCMPKCS Padding is an alias for AESGCMNoPadding on most JVMs Some JVMs do not have this alias defined which results in an Exception with the default configuration orgapacheshirocryptoCryptoException Unable to acquire a Java JCA Cipher instance using javaxcryptoCiphergetInstance AESGCMPKCS Padding AES under this configuration is required for the orgapacheshirocryptoAesCipherService instance to function Caused by javasecurityNoSuchAlgorithmException Cannot find any provider supporting AESGCMPKCS Padding at javaxcryptoCiphergetInstanceUnknown Source at orgapacheshirocryptoJcaCipherServicenewCipherInstanceJcaCipherServicejava Closes SHIRO Fixes SHIRO NOTE this is the first pass and uncovered a few issues with the differences between the JSR and Shiro Annotations RolesAllowed only supports a logical OR RequiresRoles defaults to a logical AND PermitAll allows any subject guest or not Per spec there is interaction between the JSR annotations that the Shiro Annotations do NOT have Each Shiro annotation is processed without knowledge of other annotations the JSR versions are processed together for example java PermitAll class ExamplePermitAtClass DenyAll void expectDenied void expectAllowed RolesAllowedblah foo void withRoles To implement this I needed to search out the annotations in Jsr MethodInterceptor without the use of the AnnotationResolver component the issue here is we have a separate implementation for Spring We could extend the AnnotationResolver interface and add methods that return annotations for a Class or a method the current method does both TODO Make sure Javadoc has been added Add JAXRS support Add Spring Support Add Guice support SimpleCookie get cookie failedwhen I set cookie to rootbut in sub path exists the sample cookieId shiro get invaid cookie eg wwwdomaincom cookie one wwwdomaincomabc cookie two private static javaxservlethttpCookie getCookieHttpServletRequest request String cookieName javaxservlethttpCookie cookies requestgetCookies javaxservlethttpCookie cookie null if cookies null for javaxservlethttpCookie cookie cookies if cookiegetNameequalscookieName cookie cookie return cookie d a suffix to the username at all So where authentication is handled with the userPrincipalName but where the userDN is required for authorization I havent found a REALM implementation that resolves this issue The setup Im handling is a AD one For making this more concrete The userPrincipalName format is johnthegreatwhateverwhatevercom while the distinguishedName format is CNJohn The GreatCNUsersDCwhateverDCwhateverDCcom The username is seen as firstNamelastName without the spaces while the group membership used for authorization is handled with the userDN Currently I created a custom implementation for supporting this LDAP but I was wondering whether I am the only one facing this problem Instead of working with an userDnTemplate I worked with an authenticationTemplate and a user search base Using those I was able to retrieve the userDN This approach still supports providing the userDN template as authenticationTemplate I supposed this to be the case when the userSearchBase is not provided This is the config file Im currently using ldapRealm comcompanyldaprealmCustomLdapRealm ldapRealmauthenticationTemplate whateverwhatevercom ldapRealmuserSearchBase CNUsersDCwhateverDCwhateverDCcom ldapRealmuserSearchFilter sAMAccountName ldapRealmgroupSearchBase OUGroupsDCwhateverDCwhateverDCcom ldapRealmgroupSearchFilter member ldapRealmgroupSearchFilterAttribute distinguishedName ldapRealmgroupRoleAttribute cn ldapRealmcontextFactoryurl ldapwhateverwhatevercom ldapRealmcontextFactorysystemUsername systemuser ldapRealmcontextFactorysystemPassword systempassword I have a local branch where Ive implemented the changes in case youre willing to check them out Please be critic to what Ive done Your experience in this area might result in a better approach for handling this Add Enforcer rule to detect duplicate classes Fixes SHIRO when our application was runing behind a nginx proxy The request context was different with tomcats context for example my nginx proxy configuare is something like location proxypass the session will lost because of cookie path change though I know I can use proxycookiepath to change the cookie path I found its still very useful when my class extend the FormAuthenticationFilter class so I think its betther to provide two functions that are very useful when your application running behind a proxy server which has different context also very useful for subclasses pass parameters to the login page How do you think Because of Stormpath Joins Forces With Okta New user of Shiro cannot create new Stormpath account that they cannot follow up the web demo So the stepbystep demo using Stormpath account should switch to another platform Pls kindly modify the Tutorial that we could catch up with this demo Really thanks Please consider the pull request as documented in The Reverted patch was wrongly made against a The relevant patch is dc da 