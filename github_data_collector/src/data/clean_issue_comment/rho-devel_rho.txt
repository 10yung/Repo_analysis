From the build logs Error in texi dvifile file pdf TRUE clean clean quiet quiet unable to run pdflatex on NEWStex Calls Anonymous texi pdf texi dvi Execution halted make NEWSpdf Error Presumably NEWStex is invalid I get build errors when trying to build with RMEMORYPROFILING enabled Some errors are trivial to fix but some seem to be nontrivial For example the Rfmemtracereport function seems to have gone missing I merged Aruns branch into the current master branch and tried to build on OSX with Clang I get this build error In file included from srcmainnamescpp In file included from srcincludeInternalh srcincluderhoBuiltInFunctionhpp error definition with same mangled name as another definition TableEntryconst char name FUNCTION function srcincluderhoBuiltInFunctionhpp note previous definition is here srcincluderhoBuiltInFunctionhpp error definition with same mangled name as another definition TableEntryconst char name FUNCTION function srcincluderhoBuiltInFunctionhpp note previous definition is here The line it complains about is the declaration of the TableEntry constructor The constructor is templated and is used only as a convenience to construct table entries for the builtin function table Here is the entirety of the TableEntry struct struct TableEntry templatetypename FUNCTION TableEntryconst char name FUNCTION function unsigned int variant unsigned int flags int arity PPinfo ppinfo const char firstargname nullptr DispatchType dispatch DispatchTypeNONE functionnew BuiltInFunctionname function variant flags arity ppinfo snextoffset firstargname dispatch BuiltInFunction function static unsigned int snextoffset It seems like it should be possible to remove the TableEntry struct and instead constructing builtin functions directly could solve the compile error The snextoffset counter would need to be moved to BuiltInFunction instead In R almost every symbol can be redefined which forces the interpreter JIT to continuous check what its bound to In practice the most common and performance critical symbols if are never redefined and promoting them to keywords should improve performance without sacrificing compatibility Since this is a change to the semantics of the R language we need to be careful here Making it an error to assign to any of those symbols in an environment would reduce the risk of ever having rho silently produce incorrect results but might also break code that uses environments as hash tables Perhaps we can automatically distinguish between the two cases An environment is executable if Any function has it as its environment Any executable environment has it as its parent It is a package environment namespace namespace imports or namespace exports A promise uses it as its evaluation environment A call to eval uses it as its execution environment Others In order to get this correct reliably and robustly wed need to check that the environment has been tagged as executable on each entry to a function or eval and possibly symbol lookups as well Changing an environments parent might need extra care too For compatibility with packages that explicitly use Tierneys byte compiler we need to add a compiler package with a matching API but where all the functions are noops I reliably get a crash on my machine when I hit CtrlD and then type c and hit enter This happens in the current commit b c aecb d eb efc ab a f d but it has also happened for a few previous commits that Ive built The segfault happens only when I press CtrlD running quit does not trigger the segfault This was my configure command CXXclang CCclang configure withboostlibdirusrlibx linuxgnu withblas withlapack withllvmusrbinllvmconfig enablellvmjit enablebytecompiledpackagesno Program terminated with signal SIGABRT Aborted Here is the backtrace x fdc ccc in GIraise sigsigentry at nptlsysdepsunixsysvlinuxraisec x fdc a d in GIabort at abortc x fdc e f db in cxxabiv terminate handleroptimized out at srclibstdcv libsupcehterminatecc x fdc e f in stdterminate at srclibstdcv libsupcehterminatecc x fdc e f in cxxabiv cxarethrow at srclibstdcv libsupcehthrowcc x f c in jumptotopex tracebackoptimized out tryUserHandleroptimized out processWarningsoptimized out resetConsoleoptimized out ignoreRestartContextsoptimized out at srcmainerrorscpp x dba in Rfjumptotoplevel at srcmainerrorscpp x e a in RstdCleanUp saveactoptimized out statusoptimized out runLastoptimized out at srcunixsysstdc x f ef in Rfmainloop at srcmainmaincpp x b in main ac av x a at srcmainRmaincpp 