Hello This is an issue to follow the release of rspecrails As mentioned in we have pending PRissue that needs review or work I think we should tag them with v or set a milestone to help us to work on At the moment I dont know where I could help Thanks Disable monkey patching and fix specs related to this Below are a few steps itd be super if you could follow If you cant do all of these dont worry but if you can itll help us resolve your bug faster What Ruby Rails and RSpec versions are you using Ruby version Rails version RSpec version details ruby p revision x darwin Rails RSpec rspeccore rspecexpectations rspecmocks rspecrails rspecsupport details You can run bundle exec ruby version bundle exec rails version bundle exec rspec version Observed behaviour please provide a concise description of the behaviour you are observing with RSpec and Rails Test helpers provided by Rails should be useable out of the box Specifically their Minitest lifecycle hooks should be honoured automatically by default Expected behaviour Please provide a description of what you expect to be happening and how that differs from the current behaviour Some test helpers do not work out of the box as their lifecycle hooks are not called Specifically ActiveSupportTestingTimeHelpers can be included and freezetime will work but TimeHelpersafterteardown is not called meaning it doesnt clean up after itself as it is supposed to To get it to work requires including RSpecRailsMinitestLifecycleAdapter which is not obvious and error prone See indepth discussion and motivation in rubocophqrubocoprails Can you provide an example app This step is probably the most important in allowing us to quickly debug your issue and we typically ask that you follow these steps rails new an app at the specific version of ruby and rails that you are using commit that app so that we have the rails skeleton in a separate commit Make all the changes necessary adding RSpec models specs controllers etc to reproduce the issue There should be a failing test or tests that you expect to pass Well run bundle exec rspec but if you can provide a readme with more detailed instructions thatd be amazing Commit Provide a link to a github repo a description of the app and what youre expecting here I have constructed an example usage of ActiveSupportTestingTimeHelpersfreezetime in this repository The test does not fail due to the difficulty of testing test hooks However it puts messages which indicate if it is working or not TLDR ruby describe TimeHelpersfreezetime do it works freezetime end The test above doesnt work unless the following is added to specrailshelperrb ruby configinclude ActiveSupportTestingTimeHelpers This is unfortunate but acceptable However the TimeHelpersafterteardown hook fails to run unless we also add ruby configinclude RSpecRailsMinitestLifecycleAdapter This means time is left frozen after the test and violates the contract of freezetime which is supposed to always cleanup Closes Ouf this is quite some work TODO Make the generated specs actually work Implement differences for api flag Fix the problem from Integration test Fix the double request spec problem Add appendix with example results into PR body Consistent generation of pathsurls As I try to get up to speed to potentially make a PR to rspecrails I unfortunately dont seem to have green tests even off of unedited master But I see master is green on travis So I may be missing a setup step or something The relevant docs at dont seem to mention anything special I can get further by first running bundle exec rake on a fresh checkout instead of just doing bundle exec cucumber The stuff in default rake task seems to do some necessary setup I get further running tests this way But even despite that still some cucumber failures Usersjrochkindrubiesruby binruby S bundle exec cucumber tag railspost tag systemtest tag railspost Usersjrochkindgemruby gemsgherkin libgherkinformatterfilterformatterrb warning constant Fixnum is deprecated Usersjrochkindgemruby gemsgherkin libgherkinformatterfilterformatterrb warning constant Fixnum is deprecated Using the default profile FFFFF failed steps expected that command binrspec spec has exit status of but has RSpecExpectationsExpectationNotMetError featuresmailerspecsmailerspecfeature in Then the examples should all pass expected that command binrspec spec has exit status of but has RSpecExpectationsExpectationNotMetError featuresmailerspecsurlhelpersfeature in Then the examples should all pass expected that command binrspec spec has exit status of but has RSpecExpectationsExpectationNotMetError featuresmailerspecsurlhelpersfeature in Then the examples should all pass expected that command binrspec specmailersusermailerspecrb has exit status of but has RSpecExpectationsExpectationNotMetError featuresmatchershaveenqueuedmailmatcherfeature in Then the examples should all pass expected that command binrspec specmailersusermailerspecrb has exit status of but has RSpecExpectationsExpectationNotMetError featuresmatchershaveenqueuedmailmatcherfeature in Then the examples should all pass Failing Scenarios cucumber featuresmailerspecsmailerspecfeature Scenario using URL helpers without default options cucumber featuresmailerspecsurlhelpersfeature Scenario using URL helpers with default options cucumber featuresmailerspecsurlhelpersfeature Scenario using URL helpers without default options cucumber featuresmatchershaveenqueuedmailmatcherfeature Scenario Checking mailer class and method name cucumber featuresmatchershaveenqueuedmailmatcherfeature Scenario Checking mailer enqueued time scenarios failed passed steps failed passed m s Any ideas or tips for how to run tests and get them green on a developer checkout Anything that should be added to the developer docs I am not very familiar with cucumber Up for discussion obviously Is your feature request related to a problem Please describe Im always frustrated when the files from a generator are generated do result in linting tools mostly rubocop screaming at me I know obviously that completely adhering to one style is obviously a bit pointless But the first one rubocop offense top of the file String literals are not frozen And a rspec test file completely full of string literals This is not a Style issue it is a technical issue I think it would help developer UX when that would not be necessary to change after the generator execution Describe the solution youd like Template files start with the now very common frozenstringliteral true pragma Describe alternatives youve considered Excluding the cop check from spec directory Uncool Freeze strings by default when executing the ruby interpreter yeah not happening To cumbersome too brittle Additional context It was even decided that string literals will not be frozen by default with Ruby So the problem will not go away automatically when the rails projects are getting updated to ruby See Similar problem like in Upon using rails generate scaffold it would be good if controller tests would not get generated and instead request specs are generated Context Rails offer the possibility to create our own set of generators While executing the following command binrails generate generator myawesomegenerator the test framework is called See hookfor testframework RSpec must give the expected generator Problem The given command get this error binrails generate generator foo create libgeneratorsfoo create libgeneratorsfoofoogeneratorrb create libgeneratorsfooUSAGE create libgeneratorsfootemplates error rspec not found History yhirano provided an implementation Jul which I dont know why it wasnt integrated in the first place penelopezone tragiclifestories opened an issue about it on Feb ConSou implemented a version the same day and it was merged a couple of days after by JonRowe on Mar However as kdiogenes commented a couple of days ago here this doesnt work Environment Rails Rspec Rails This PR fix the issue binrails generate generator help Running via Spring preloader in process Usage rails generate generator NAME options Options skipnamespace noskipnamespace Skip namespace affects only isolated applications namespace nonamespace Namespace generator under libgeneratorsname Default true t testframeworkNAME Test framework to be invoked Default rspec Rspec options generatorspecs nogeneratorspecs Generate generator specs Runtime options f force Overwrite files that already exist p pretend nopretend Run but do not make any changes q quiet noquiet Suppress status output s skip noskip Skip files that already exist Description Stubs out a new generator at libgenerators Pass the generator name as an argument either CamelCased or snakecased Example rails generate generator Awesome creates a standard awesome generator libgeneratorsawesome libgeneratorsawesomeawesomegeneratorrb libgeneratorsawesomeUSAGE libgeneratorsawesometemplates testlibgeneratorsawesomegeneratortestrb Rspec options generatorspecs nogeneratorspecs Generate generator specs binrails generate generator awesome Running via Spring preloader in process exist libgeneratorsawesome create libgeneratorsawesomeawesomegeneratorrb create libgeneratorsawesomeUSAGE exist libgeneratorsawesometemplates invoke rspec create specgeneratorawesomesgeneratorspecrb What Ruby Rails and RSpec versions are you using Ruby version Rails version RSpec versions rspecrails pre rspeccore pre rspecexpectations pre rspecmocks pre rspecsupport pre I wouldnt normally use nonstable releases but I had the same issues as the user on this thread and solved them per the suggestion there Observed behaviour In an Rspec test in Rails and eg a Devise confirmable user run the following command expect nil notto change userconfirmationsentat where nil can be any operation and confirmationsentat is a standard ActiveRecord attribute method returning an instance of ActiveSupportTimeWithZone This fails with a message like expected userconfirmationsentat not to have changed but did change from to where the two times are identical Expected behaviour The test should pass Can you provide an example app I set up a Rails app without Devise and with the same versions of the relevant testing gems and unfortunately it didnt recreate the issue I dont have time to plug in Devisecheck the other libraries until it triggers the edge case and in the meantime I can work around the bug easily enough by just storying the values of confirmationsentat so Ill paste our Gemfilelock below in the hope that this is helpful to you GIT remote revision b c da fde cbbff b e db specs rspeccore pre rspecsupport pre GIT remote revision f bcaff a f d f e e eca ab f specs rspecexpectations pre difflcs rspecsupport pre GIT remote revision b e f f aef f ed f f a e specs rspecmocks pre difflcs rspecsupport pre GIT remote revision caec d e c f ddd deef branch master specs rspecrails pre actionpack activesupport railties rspeccore pre rspecexpectations pre rspecmocks pre rspecsupport pre GIT remote revision cdd b b d ece d f d dc specs rspecsupport pre GEM remote specs CFPropertyList actioncable actionpack nio r websocketdriver actionmailbox actionpack activejob activerecord activestorage activesupport mail actionmailer actionpack actionview activejob mail railsdomtesting actionpack actionview activesupport rack racktest railsdomtesting railshtmlsanitizer actiontext actionpack activerecord activestorage activesupport nokogiri actionview activesupport builder erubi railsdomtesting railshtmlsanitizer activejob activesupport globalid activemodel activesupport activerecord activemodel activesupport activestorage actionpack activejob activerecord marcel activesupport concurrentruby i n minitest tzinfo zeitwerk addressable publicsuffix administrate actionpack actionview activerecord autoprefixerrails datetimepickerrails jqueryrails kaminari momentjsrails sasscrails selectizerails autoprefixerrails execjs awesomeprint awseventstream awspartitions awssdkcore awseventstream awspartitions awssigv jmespath awssdkkms awssdkcore awssigv awssdkrails awssdkses railties awssdks awssdkcore awssdkkms awssigv awssdkses awssdkcore awssigv awssigv awseventstream backports bcrypt bindex builder capybara addressable minimime nokogiri rack racktest regexpparser xpath capybaraemail capybara mail carrierwave activemodel activesupport addressable imageprocessing mimemagic minimime carrierwaveaws awssdks carrierwave childprocess codeclimatetestreporter simplecov coderay coffeerails coffeescript railties coffeescript coffeescriptsource execjs coffeescriptsource colored concurrentruby connectionpool contentful http multijson contentfulmanagement http json multijson contentfulmodel activesupport contentful contentfulmanagement redcarpet countries i ndata sixarmrubyunaccent unicodeutils countryselect countries sortalphabetical crack safeyaml crass cucumber builder cucumbercore cucumberexpressions cucumberwire difflcs gherkin multijson multitest cucumbercore backports cucumbertagexpressions gherkin cucumberexpressions cucumberrails capybara cucumber mimetypes nokogiri railties cucumbertagexpressions cucumberwire databasecleaner datetimepickerrails momentjsrails devise bcrypt ormadapter railties responders warden difflcs docripper CFPropertyList colored docile domainname unf dotenv dotenvrails dotenv railties emailspec htmlentities launchy mail erubi execjs factorybot activesupport factorybotrails factorybot railties faraday multipartpost faradaymiddleware faraday ffi fficompiler ffi rake gherkin globalid activesupport hashdiff hashie hellosignrubysdk faraday mimetypes multijson htmlentities http addressable httpcookie httpformdata httpparser httpcookie domainname httpformdata httpparser fficompiler i n concurrentruby i ndata imageprocessing minimagick rubyvips jmespath jqueryrails railsdomtesting railties thor json jwt kaminari activesupport kaminariactionview kaminariactiverecord kaminaricore kaminariactionview actionview kaminaricore kaminariactiverecord activerecord kaminaricore kaminaricore launchy addressable letteropener launchy loofah crass nokogiri mail minimime marcel mimemagic methodsource mimetypes mimetypesdata mimetypesdata mimemagic minimagick minimime miniportile minidown minitest momentjsrails railties multijson multitest multixml multipartpost mustermann nio r nokogiri miniportile oauth faraday jwt multijson multixml rack omniauth hashie rack omniauthgoogleoauth jwt multijson omniauth omniauthoauth omniauthlinkedinoauth omniauthoauth omniauthoauth oauth omniauth ormadapter pg pry coderay methodsource pryrails pry pryremote pry slop publicsuffix puma nio r rack rackprotection rack rackproxy rack racktest rack rails actioncable actionmailbox actionmailer actionpack actiontext actionview activejob activemodel activerecord activestorage activesupport bundler railties sprocketsrails railscontrollertesting actionpack x actionview x activesupport x railsdomtesting activesupport nokogiri railshtmlsanitizer loofah railsi n i n railties rails factor railsservestaticassets railsstdoutlogging railsservestaticassets railsstdoutlogging railties actionpack activesupport methodsource rake thor rake rbfsevent rbinotify ffi redcarpet redis redisactionpack actionpack redisrack redisstore redisactivesupport activesupport redisstore redisrack rack redisstore redisrails redisactionpack redisactivesupport redisstore redisstore redis regexpparser responders actionpack railties restforce faraday faradaymiddleware hashie json jwt rspecjunitformatter rspeccore rubyvips ffi rubyzip sablon nokogiri rubyzip safeyaml sass sasslisten sasslisten rbfsevent rbinotify sassrails railties sass sprockets sprocketsrails tilt sassc ffi sasscrails railties sassc sprockets sprocketsrails tilt selectizerails seleniumwebdriver childprocess rubyzip sentryraven faraday shouldamatchers activesupport sidekiq connectionpool rack rackprotection redis simplecov docile json simplecovhtml simplecovhtml sinatra mustermann rack rackprotection tilt sixarmrubyunaccent slop sortalphabetical unicodeutils spring sprockets concurrentruby rack sprocketsrails actionpack activesupport sprockets stripe thor threadsafe tilt timecop tzinfo threadsafe uglifier execjs unf unfext unfext unicodeutils vcr warden rack webconsole actionview activemodel bindex railties webdrivers nokogiri rubyzip seleniumwebdriver webmock addressable crack hashdiff webpacker activesupport rackproxy railties websocketdriver websocketextensions websocketextensions xpath nokogiri zeitwerk PLATFORMS ruby DEPENDENCIES administrate awesomeprint awssdkrails capybara capybaraemail carrierwave carrierwaveaws codeclimatetestreporter coffeerails contentfulmodel countryselect cucumberrails databasecleaner devise docripper dotenvrails emailspec factorybotrails hellosignrubysdk jqueryrails kaminari launchy letteropener minimagick minidown omniauthgoogleoauth omniauthlinkedinoauth omniauthoauth pg pryrails pryremote puma rails railscontrollertesting railsi n rails factor redisrails restforce rspeccore rspecexpectations rspecmocks rspecrails rspecsupport rspecjunitformatter sablon sassrails seleniumwebdriver sentryraven shouldamatchers sidekiq sinatra spring stripe timecop uglifier vcr webconsole webdrivers webmock webpacker RUBY VERSION ruby p BUNDLED WITH Below are a few steps itd be super if you could follow If you cant do all of these dont worry but if you can itll help us resolve your bug faster What Ruby Rails and RSpec versions are you using Ruby version Rails version RSpec version branch dev You can run bundle exec ruby version bundle exec rails version bundle exec rspec version Observed behaviour please provide a concise description of the behaviour you are observing with RSpec and Rails Given an email enqueued with SomeMailerwithobject foo option amended true somemethoddeliverlater I would expect the following to pass expect someactionwhichenqueuesmail to haveenqueuedmailSomeMailer somemethodwithobject foo option amended true It doesnt pass when setting the default delivery job to ActionMailerMailDeliveryJob but does when using the legacy ActionMailerParameterizedDeliveryJob ie configloaddefaults and Railsapplicationconfigactionmailerdeliveryjob ActionMailerMailDeliveryJob commented out in configinitializersnewframeworkdefaults rb The listed enqueued mails shows the mail has been enqueued but I cannot seem to access it with my test criteria 