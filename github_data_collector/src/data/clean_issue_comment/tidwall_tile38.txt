Hi Thanks for the application its really great For my use case of tile I end up with a large number of unique fields set in the same key where many of those objects dont have the field set say of unique fields are popular whereas of fields are sparse The current tile design for field storage is optimized exclusively for the case where all fields are set Memory is allocated as though all fields will be filled for every object so effectively theres an immense memory waste in my use case Additionally the default field value of is particularly intuitive for these kinds of queries It makes querying the set of objects where the field may not be present a pain Id like to inquire about whether or not theres interest in supporting the sparse field use case from a performance perspective I have an implementation of a different field storage thats far more efficient in the sparse use case but I think theres an inherent trade off between having performance in the sparse case and the saturated case You must add overhead for sparse fields that would reduce performance in the saturated case From the benchmarks Ive run performance is orders of magnitude better for sparse fields and perhaps slower for saturated fields Would a pull request with these changes be supported Note the benchmarks I ran were specifically for fields I think collectionSet with many fields and if I were to guess the limiting performance factor is elsewhere on queries Hi tidwall We are using tile geofencing functionality But in our project some objects get every time tracked positions coming in at the same timedifferent latlon We have noticed that sometimes when these positions are partly outside and partly inside of the geofence we often miss the enter event So we would like to know how does tile handle when multiple positions of the same object come at the same time Would this cause confusions for tile Here is an example example Describe the bug I got this error on the server when trying to use OBJECT type WITHIN fleet FENCE OBJECT type Polygoncoordinates To Reproduce Steps to reproduce the behavior Run tile server Connect using tile cli Send the command Expected behavior Should get OK or JSON replies Logs If applicable provide logs panics system messages to help explain your problem Operating System please complete the following information OS Ubuntu OSX Catalina Version tile Ubuntu tile OSX Catalina Additional context It was stated as resolved in but not stated what resolves it Sample object was taken from RFC Is your feature request related to a problem Please describe These are the problems that we are trying to solve We are trying to run Tile as a sidecar to an application that has high reads and low writes We want to sync data between different instances of Tile In order to do this whenever a write command is issued to tile on success we send a message to a kafka topic with the command details Each app instance additionally has a consumer with receives this message and applies the changes to the local Tile if it is not published by the same instance This approach would improve latency and availability of running tile We are running Tile in stateless containers so we are syncing the AOF produced by Tile nodes to S periodically on startup before loadingAOF we download the latest file We also replay messages from kafka for the last x minutes to ensure that we dont miss any updates if we are using We want to solve these problems using Tile hooks The hooks would just trigger this logic and this logic will reside outside the main tile codebase Describe the solution youd like We would want to add support for the following hooks in Tile Pre AOF load hook Preserver server start hook before health check passes Postcommand execution hooks for write commands in handInputCommand function We did a small POC to validate this Please look at comments in the diff Please note that these hooks would just be called with some context only is enabled in config and Tile will provide a noop implementation for these hooks The user can bind their custom module to this Then user can inject certain functionalities to tile through hooks without the overhead of maintaining the fork We can use hooks to achieve some of the things mentioned in this ticket also Describe alternatives youve considered For problem we have considered moving the logic to the application interaction with tile library connecting to tile and tile This is the comparison Criteria App Using Tile Redis Client Tile Server Development Violates DRY Repeated work HIGH Should be implemented for all redis clients and languages if required MEDIUM Can be implemented centratally and distributed LOW Maintainability Will have to be implemented by application and adoption would be low Will have to maintain multiple clients in multiple languages Will have to fork Tile and maintain although changes will be isolated in clustered mode Complexity Replay Should implement replay once health check passes Once Tile health check passes we will have to replay Health check can pass once AOF reload and replay can is done Complexity Consumer Group Management Would be hard to clean unused consumer group Easily clean unused consumer groups Easily clean unused consumer groups Distribution Left to the application Sidecar Custom Client Clustered Sidecar For problem we had considered writing a separate script but the drawback was alerting monitoring etc needs to be done for this separate process Additional context We are using the Kafka approach for HA vs sentinal because as a company we have expertise in maintaining a stable Kafka cluster We are uploading AOF instead of using persistent disk because of the limitation of the Kubernetes cluster that we are using internally and have expertise in tidwall others please let us know what you think about this Hi I am using tile Works fast everything suits But there is one problem I have objects with geocoordinates and many layers a layer is a geofence polygon and a set of filters over the attributes of objects I decided to store the coordinates of the objects in tile and as the name of the fields the identifiers of the layers into which the object belongs well in the value or The calculation is included in the layer or not another process is calculated that pushes data into tile To which clients subscribe SETHOOK with a filter by fields on the test with layers everything worked fine but adding layers for objects tile ate GB of RAM should it be so Add pytile python client Hi I am running Tile docker image on a container instance in the Azure Cloud While going through the documentation I found that I can use the SETHOOK command of Tile to send messages to an Azure Topic SETHOOK warehouse amqpsharedaccesskeynamesharedaccesskeyvaluenamespaceservicebuswindowsnettestgeofence But this doesnt seem to send message to my Topic Maybe a version problem as Azure uses AMQP v whereas TIle supports AMQP v Or is it something I am doing wrong Can we set TTL on a geofence in tile Can check if a geofence is created already in tile and ingest data to tile only if the geofence is present How can we check if a geofence is created How do we delete a geofence I think we can drop the collection but will it delete other metadata when the geofence is created Hi tidwall We are looking to use this project in production Expecting there to be multiple indexes in the order of GBs million points in each index I want to check if there are any benchmarks around how long it takes for a new slave to be ready to serve traffic with this size of the index Also if I were to copy AOF from the leader and then ask the follower to follow the leader will that reduce the time to scale up I have noticed that even after copying the AOF tile takes a considerable time to come up Are there any other approaches that you recommend for quick scaling up of Tile Hi there I am maintaining a project and I received a requirement recently in which I need to find points in an annulus and I search a lot and find tile hasnt supported it directly So I request all points in the outer circle USING NEARBY command and reject points in the inner one I dont think it such complex to get the points in the annulus because NEARBY can find the points in the outer circle and the inner circle separately Is the points in the outer circle minus the points in the inner circle a good solution What I said above is my superficial opinion and I am looking forward to receiving a response Thanks