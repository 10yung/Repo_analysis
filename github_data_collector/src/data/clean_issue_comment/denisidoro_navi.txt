The time to start displaying snippets still is perceptible a cache could be implemented initial AWK transformations could be faster results could be displayed on demand instead of being shown in a single batch This project started as just a few lines of code then it gained some traction More features were introduced The code became cluttered Even though I still have a clear vision of everything that is happening I understand it is a little bit difficult for a newcomer to know where heshe should look at The namespaces dont make much sense anymore In the beginning everything that resulted into printing something into the screen was located in uish I took some shortcuts and now there are model namespaces such as argsh that call fzf for example Considering I dont plan to write this in another programming language in the near future Id like to use a more robust design pattern One that wont allow me to take shortcuts In a nutshell Id like the following ui fstate Considering this is bash and theres nothing like react available Ill need to scratch my head a little bit Any suggestions are welcome If yum isnt installed for example all snippets that start with yum should be hidden this shouldnt impact startup time if showall is used there should be no filtering Hi Thanks for the project I have noticed a bug when I use the binding ctrlg in bash This command in a cheat fails because it replaces the by A In my cheat its Find primary local IP address ip o route get to sed n ssrc p The command parsed after the binding is ip o route get to sed n ssrc Ap Terminal tilix bash Thanks First draft at Ive been using skim for a while now and if I change the commands from fzf to sk it invokes fine but interactive searching doesnt work so well Im sure there are some differences between i in both tools but do not know how to move forward