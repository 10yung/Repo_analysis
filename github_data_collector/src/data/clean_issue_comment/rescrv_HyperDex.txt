Hi I was wondering if anyone is actively using Hyperdex Love the project and everything about it very sad that its no longer maintained Dave Im interested in evaluating HyperDex for a new project but if possible Id like to avoid that effort if this project is no longer being actively maintained Looking at the release and commit history it seems this is primarily a one person effort by a CS PhD student By all appearances thats an impressive achievement However Ive been burned by gradware in the past where a talented graduate student builds cool open source things but then gets a job and moves on Theres no shame in that but I want to know upfront if that is the situation Here its hard to tell because there appears to be or have been a business behind this But the inactivity and lack of roadmap are red flags and point to this project being near the end of its life Is this a fair characterization or am I missing something add new function sum sum the number of objects that match the specified checks This will return the number of objects counted by the search If an error occurs during the sum the sum may reflect a partial sum The real sum will be higher than the returned value modify interface using latest of po fixed memory leak of valuetoattributes in utilcc better free for hyperdexclientdestroyattrs add java and python interface i was doing hyperdex reevaluation for our environment after a year again however it seems that stabilityrobustness regressed rather than progressed sources is not possible to build from repos as tagsreleases are missing ive therefore used ones in download section in during initial space creation Error in python free invalid next size fast x Backtrace usrliblibcso x x ff e b e usrliblibcso x a x ff e b a usrliblibcso x e x ff e b e usrliblibhyperdexadminso x de x ff df dee usrliblibhyperdexadminso x f x ff df d f usrliblibhyperdexadminso x b x ff df ea b usrliblibhyperdexadminso x c x ff df ed usrliblibhyperdexadminso hyperdexadminaddspace x x ff df f f homewebdevteahubsrcteahubsteelappvendorleilavendorhyperdexadminso xf x ff df usrliblibpython mso xc x ff e a homewebdevteahubsrcteahubsteelappvendorleilavendorhyperdexadminso xbe d x ff df ee d usrliblibpython mso PyCFunctionCall x x ff e ca homewebdevteahubsrcteahubsteelappvendorleilavendorhyperdexadminso xda x ff df a usrliblibpython mso PyEvalEvalFrameEx x e x ff e a usrliblibpython mso PyEvalEvalFrameEx x c x ff e d usrliblibpython mso x df x ff e df usrliblibpython mso PyEvalEvalFrameEx x f x ff e af usrliblibpython mso x df x ff e df usrliblibpython mso PyEvalEvalCodeEx x x ff e ed usrliblibpython mso PyEvalEvalCode x b x ff e efb usrliblibpython mso x x ff e usrliblibpython mso PyRunFileExFlags x x ff e usrliblibpython mso PyRunSimpleFileExFlags xf x ff e f usrliblibpython mso PyMain xec x ff e e python main x x af usrliblibcso libcstartmain xf x ff e b c python start x x b regards I installed hyperdex with python using homebrew on OS X In python installed with homebrew running from hyperdexadmin import Admin SegFaults It would be really nice to get the java client via maven central and not have to compile it from source Also having the ability to define the native bindings by something like a HYPERDEXNATIVEJAVALIBRARY variable to point to the native binary Reported on list by Tadeusz Kope tadeuszbkopecgmailcom Testing by checking out releases releases releases and running go build from rescrvHyperDexbindingsgo I always get some error For githubcomrescrvHyperDexbindingsgoclient could not determine kind of name for Chyperdexclientdocumentatomicadd githubcomrescrvHyperDexbindingsgo hypergogo undefined req in reqstatus hypergogo undefined req in reqsuccess hypergogo undefined req in reqsuccess hypergogo undefined req in reqfailure hypergogo undefined req in reqfailure hypergogo undefined req in reqstatus hypergogo undefined req in reqfailure hypergogo undefined req in reqfailure hypergogo undefined i hypergogo too many errors Is there some flaw in how Im building it Didnt inspect too well but for and it looks like theres some form of for or while loop missing Ill try to write a pull request to fix this Does hyperdex have any Jepsen Hermitage test results that are available It would really help in making a strong case for using Hyperdex in a production environment Hi I wanted to understand how well HyperDex scales with very large datasets much bigger than RAM Im also interested in knowing how HyperDex would compare with FoundationDB and CockroachDB in terms of raw performance as well as scalability when you consider a Multi Data Center scenario Have there been any tests done for the same 