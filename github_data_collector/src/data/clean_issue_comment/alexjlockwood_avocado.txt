Ive launched avocado on this vector vector xmlnsandroid androidwidth dp androidheight dp androidviewportWidth androidviewportHeight path androidpathDataM C C C C C C L C L C L C C ZM L L L L ZM C L L L L L L L L L L L L L L L C C C C C C C C C C C C C Z androidstrokeWidth androidfillColor androidfillTypenonZero androidstrokeColor vector Unfortunately Android Studio is still telling me long vector even after the optimization I was trying to batch updating all my drawables Got this error message Error No such file or directory D Development myfoodyappandroid app src main res drawable xml at checkOptimizeFileError C Users Nicola AppData Roaming npm nodemodules avocado dist lib indexjs at C Users Nicola AppData Roaming npm nodemodules avocado dist lib indexjs Thanks for your time alexjlockwood I want to optimize an SVGwhich I cant attach it directly here but the avocado remove the whole datapath Please share your email then Ill send the SVG to you Thanks I have the following image xml version encodingutf vector xmlnsandroid androidwidth dp androidheight dp androidviewportHeight androidviewportWidth group androidtranslateX androidtranslateY group androidscaleX path androidfillColoracacac androidpathDataM L Z group group vector After converting xml version encodingutf vector xmlnsandroid androidwidth dp androidheight dp androidviewportHeight androidviewportWidth path androidfillColoracacac androidpathDataM L l L z vector The new image is completely invisible My guess is that the scaleX is causing the bug vector androidheight dp androidviewportHeight androidviewportWidth androidwidth dp xmlnsandroid path androidfillColor androidfillTypenonZero androidpathDataM l l l l l z androidstrokeColor androidstrokeWidth path androidfillColor androidfillTypenonZero androidpathDataM l l l l l l z androidstrokeColor androidstrokeWidth path androidfillColor androidfillTypenonZero androidpathDataM m a a androidstrokeColor androidstrokeWidth path androidfillColor androidfillTypenonZero androidpathDataM l l l l l l l l l l l l l l l l l l l l z androidstrokeColor androidstrokeWidth path androidfillColor androidfillTypenonZero androidpathDataM h v h z androidstrokeColor androidstrokeWidth path androidfillColor androidfillTypenonZero androidpathDataM h v h z androidstrokeColor androidstrokeWidth vector SVGO supports setting a precision value p PRECISION precisionPRECISION Set number of digits in the fractional part overrides plugins params I often see lint warnings because my vector paths are too long It suggests me to decrease the float precision It would be great if avocado supported this too Together with rewriting paths this could decrease the complexity of the vector quite a bit Shapes with evenOdd fillType should be converted to implicit unspecified nonZero Thoughts on a detect mode that exits with an error code on any unoptimized vector Use cases commit hooks continuous integration Id be happy to contribute just curious if you think this is scope creep or would be a better suited as a plugin I ran Avocado on this xml vector xmlnsandroid xmlnstools androidwidth dp androidheight dp androidviewportHeight androidviewportWidth group androidtranslateX androidtranslateY path androidfillColor A androidfillTypenonZero androidpathDatastringiccorepathcarrot toolstargetApin path androidfillColor A androidfillTypenonZero androidpathDatastringiccorepathcarrotleaves toolstargetApin group vector Here is the output I got vector xmlnsandroid androidwidth dp androidheight dp androidviewportHeight androidviewportWidth In all fairness it is smaller but I did lose a bit of info there p 