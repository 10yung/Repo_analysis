 TensorFlowjs version Browser version Google Chrome Describe the problem or feature request For the additionrnn example entering for the size of digits always results in the following JavaScript error regardless of training size Error in slice D begin size would overflow inputshape Code to reproduce the bug link to feature request Open Enter for Digits and for Training Size then click Train Model I tried running the simple demo example in the tfjsbackendwasm readme just now html script src script src script async function await tfsetBackendwasm script But I get a for the wasm file that the script tries to request I think it should instead be because that returns the wasm file and this code does work js await tfwasmsetWasmPath await tfsetBackendwasm To see the logs from the Cloud Build CI please join either our discussion or announcement mailing list Reviewablestart This change is img src height alignabsmiddle altReviewable Reviewableend BUG Avoid using applycall due to new ts compiler flag Reviewablestart This change is img src height alignabsmiddle altReviewable Reviewableend Reviewablestart This change is img src height alignabsmiddle altReviewable Reviewableend TensorFlowjs version Describe the problem or feature request Id like to be able to use the Stats module and specifically Pearson Correlation that are available in the Python library FIX What happens Run case one by one yarn test grep pass But when run several together Some case may fail Example case Case may be failed due to cache reasonsdivArithmetictestts gradient Tensor D with int Actual expected gradient Tensor D Actual expected gradient Tensor D Tensor D w broadcast Actual expected Root cause This problem is introduced by two reasons makeShaderKey called before the real shader generatedcompileProgram and makeShader Which means two different shaders may possibly share the same shader key The shader key optimization which use several key properties of the shader instead of the full shader source as shader key For most case especially all properties are selfcontained in the shaders WebGPUProgram file this works But when some properties are originated from the shaderpreprocessorts two different shader may be collided with the same shader key Currently the fix is to disable the shader key and shader cache first The follow up todo is Also add square and neg operators Reviewablestart This change is img src height alignabsmiddle altReviewable Reviewableend This issue is from PR And below comments is copied from it What happens Run case one by one yarn test grep pass But when run several together Some case may fail Example case Case may be failed due to cache reasonsdivArithmetictestts gradient Tensor D with int Actual expected gradient Tensor D Actual expected gradient Tensor D Tensor D w broadcast Actual expected Root cause This problem is introduced by two reasons makeShaderKey called before the real shader generatedcompileProgram and makeShader Which means two different shaders may possibly share the same shader key The shader key optimization which use several key properties of the shader instead of the full shader source as shader key For most case especially all properties are selfcontained in the shaders WebGPUProgram file this works But when some properties are originated from the shaderpreprocessorts two different shader may be collided with the same shader key Currently the fix is to disable the shader key and shader cache first To get help from the community we encourage using Stack Overflow and the tensorflowjs tag TensorFlowjs version or Browser version The problem was found both in Chrome and FireFox Operating system version Windows Describe the problem or feature request I have a tensor called result after run command var boxes tfsliceresult the boxes replace some self data to be zero like this see penultimate row and third row resultprint arrayopsts Tensor dtype float rank shape values boxesprint arrayopsts Tensor dtype float rank shape values Used in handtracking