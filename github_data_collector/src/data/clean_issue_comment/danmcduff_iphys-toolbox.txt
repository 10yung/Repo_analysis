Where do you use the automatic face tracker whose usage you explain in the paper It is critical and important for most applications but I cannot find any Hi First of all thank you for your contribution to the field I have concerns about the input video format mp as these typically apply some compression to the images It would be more faithful if for example the input video data also would be in mat uncompressed raw data Of course a general large benchmark dataset could be constructed in this way to benchmark the different algorithms that is in line with your codes It would be also nice to include Wangs FVP algo function H FVPframes Fs FVP Full Video Pulse extraction frames sequence of RGB images N h w c Fs Frame rate N sizeframes K L Fs u L B pulse band calculated for L Jt zeros K N Pt zeros K N Zt zeros K N H zeros N for i N Generate weighting masks Id imresizesqueezeframesi box downsize D reshapebsxfunrdivide Id sumId sizeId sizeId A pdist D D euclidean u svdsA K correct the eigenvector signs u bsxfuntimes u signsumu u u u w u K u K w bsxfunminus w minw w bsxfunrdivide w sumw Weight and combine spatial pixel values J bsxfuntimes reshapeId sizeId sizeId w Jt i meanJ varJ Extract rPPgsignals with POS ifi L C Jt i L i Cn bsxfunrdivide C meanC X Cn Cn Y Cn Cn Cn P X bsxfuntimes stdX stdY Y Z Cn Cn Cn Pt i L i Pt i L i bsxfunrdivide bsxfunminus P meanP stdP Zt i L i Zt i L i bsxfunrdivide bsxfunminus Z meanZ stdZ end Combine rPPG signals into pulse ifi L P Pt i L i Z Zt i L i Fp fftbsxfunrdivide bsxfunminus P meanP stdP L Fz fftbsxfunrdivide bsxfunminus Z meanZ stdZ L W absFp conjFp absFz conjFz W B W B end h realifftsumW Fp H i L i H i L i h meanhstdh end end end And an example for the usage of the code addpathCODESMATLABalgorithms N Num of frames in the directory Fs L stride result zeros N frames zeros dur fi for i N fname sprintfPIC bit dpng i framesfi imreadfname fi fi imshowsqueezeframesi maxframesi all if sizeframes L dispCalculating POS resultiL i resultiL i FVPframes Fs frames stride fi fi stride change frame indexing according deletion end dispi end This is the original code he submitted in his PHD thesis but I would apply some modifications on it To be more specific it is not advisable to zero out frequencies in the Fourier domain and then transform back that part could be changed to zero phase filtering the way you do generally on the implemented algos W B W B end h realifftsumW Fp Parameters LPF low cutoff frequency Hz Hz in reference HPF high cutoff frequency Hz both Hz and Hz used in reference Filter Normalize NyquistF FS BA butter LPFNyquistF HPFNyquistF Butterworth rd order filter originally specified in reference with a th order butterworth using filtfilt function BVPF filtfiltBAdoublehmeanh Thank you for sharing it is a good open source project However I found that the cutoff frequency of the band pass filter seems to be inconsistent with the corresponding comment leading to wrong cutoff frequency of the filter This problem exist for several methods including CHROM ICA GREEN POS Here is the corresponding frequency respond of the filter using filtfilt and the code how I get it fps LPF low cutoff frequency Hz specified as bpm Hz in reference HPF high cutoff frequency Hz specified as bpm Hz in reference n n imp nn NyquistF fps BA butter LPFNyquistF HPFNyquistF imprep filtfiltBAdoubleimp N nextpow lengthimprep F fftimprepN freqstep fpsN freq fps freqstepfps freqstep freq freq Hz to bpm freq freqN end plotfreqabsF N xlabelfreqbpm ylabelmag Thank you for sharing it is a good open source project But when I was executing the POSWANGm file there was a problem on line of it Cn RGBmn meanRGBmn The matrix dimensions are inconsistent