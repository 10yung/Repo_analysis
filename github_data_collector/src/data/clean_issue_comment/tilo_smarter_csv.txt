Hi I have a picky client and need to clarify the licensing is it MIT and GPL or MIT or GPL Thanks Paul This gem looks amazing and like it would solve a lot of CSV parsing issues I run into over and over Of particular usefulness is the hashtransformations and headertransformations I see in the wiki Unless Im mistaken it looks like these options are only available in the release When will that release be publicly available I would even be okay with a pre release as long as its a git tag or a rubygems release but currently it looks like I either need to point at master or the x versions This PR updates the CI matrix to use latest JRuby JRuby release blog post Steps to reproduce Given a file called datacsv with the following id start end Run the following script ruby usrbinenv ruby require smartercsv path Fileexpandpathdatacsv dir data SmarterCSVprocess path colsep t hashtransformations removeblankvalues convertvaluestonumericunlessleadingzeros dataeach do row s e row start row end puts start s sclass tend e eclass end Expected Values are strings Leading zeroes are preserved Actual start Integer end Integer start Integer end Integer start Integer end Integer start Integer end Integer start Integer end Integer start Integer end Integer start Integer end Integer start Integer end Integer start Integer end Integer start Integer end Integer Im using the Readline method with StringIO I get this warning about UTF WARNING you are trying to process UTF input but did not open the input with butf option See README file NOTES about File Encodings I have consulted that part of the Readme but I dont see how I would actually fix this because Im not reading anything from a file Its coming from the ftpgetbinaryfile method in NetFTP I ran into this issue while processing poorly quoted non standard CSV files with odd numbers of unescaped quotes found in the CSV lines So I used the forcesimplesplit true option to process those files the column separator character is so its working very well since there is almost no chance I encounter the character in the data itself The problem is that the count of quotes options quotechar is used to detect multilines row data This is working for well quoted CSV files but not for a nonstandard CSV files with odd quotes number that will be processed with the option forcesimplesplit true Because of that the core code detects a multiline row data and I get the following error when processing the files EOFError end of file reached libsmartercsvsmartercsvrb in readline libsmartercsvsmartercsvrb in process I added a test case so you can reproduce the error Im fully aware that this is not a perfect solution since it would be impossible to process multiline row data files with forcesimplesplit to true But in my opinion using the forcesimplesplit option means you cant rely on quote to parse the file Thats why Im proposing this quick but effective fix Hello Your smartercsv library and README was a great inspiration for using plain hashes for returning records in the new csvreader library instead of CSVTable CSVRow etc as done in the old std csv library Anyways as far as I can tell your library doesnt have its own csv parser and still uses the old std csv library under the hood I invite you to consider to use the new modern csvreader see that offers more formats dialects variants for example Also since youre a leading CSV ruby expert and user it would be greatly appreciated if you could tell dont hold any negatives back whats missing in the new csvreader library and if it would be a good replacement dare I say for smartercsv too getting back in the long run to a new better modern ruby csv std base library Cheers Prost Greetings from Vienna Austria Ive changed hashvalidations to use instanceexec instead of just a normal call so that the Proc can add errors to errors and warnings to warnings I thought about doing it for datavalidations and headervalidations but it seemed kind of pointless Ive also added tests to make sure it all works If you pass in a file with a bom character the rewind jumps back to before the bom file Fileopencsvfile rbomutf filereadlinefirst xEF true no BOM character filerewind filereadlinefirst xEF true BOM character This is a problem for required and missing headers because the first header value will contain the blank character and not correctly match the given string Problem line stablelibsmartercsvsmartercsvrbL Related stack overflow keymapping contains a list of csv headers mapped to attribute names requiredheaders is actually expected to contain a list of attribute names not csv headers For example lets say a csv has required column in it with the header of name You need the attribute to be mapped to fullname because that is what you called it in your model Your keymapping would look like this name fullname The csv header would be name and if you wanted to require name I would think you would need to set requiredheaders name not fullname since the header as the user sees it is is user Unfortunately currently requiredheaders really is requiredattributenames or something along those lines 