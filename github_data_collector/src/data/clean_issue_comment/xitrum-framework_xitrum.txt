Compressing data before encrypting it gives information away about what is encrypted if the end user has control over what is encrypted Through trial and error you could effectively decrypt the contents See Update scala version to so we can use latest features ngocdaothanh Thanks and it enabled to prevent single big file request But there are some vulnerability I want to allow user to upload big file and prevent evil request Is there any way to protect service from those evil scenario Evil Scenario Many requests less than maxSizeInMB at same time xitrumconf request maxSizeInMB maxSizeInKBOfUploadMem Using not isAPPLICATIONXWWWFORMURLENCODEDorMULTIPARTFORMDATA header with less than MB body at same time cmdprintf ttt d curl X POST H ContentType applicationxml d bash c cmd bash c cmd bash c cmd bash c cmd bash c cmd bash c cmd bash c cmd bash c cmd Evil Scenario Too many small file less than maxSizeInKBOfUploadMem in one request xitrumconfUnrealistic value to make it easier to reproduce request maxSizeInMB maxSizeInKBOfUploadMem curl X POST F tmpdat F tmpdat F tmpdat F tmpdat F tmpdat F tmpdat F tmpdat F tmpdat F tmpdat F tmpdat This patch allows to document JSON models from case classes with Swagger like this example scala package quickstartaction import javautilDate import xitrumFutureAction import xitrumannotationPOST Swagger import xitrumutilSeriDeseri POSTapitest Swagger SwaggerJsonBodyrequest This is request model TestRequestType SwaggerResponse Success SomeTestResponseType SwaggerResponse Success SomeTestResponseArrayType SwaggerResponse Not found class Test extends FutureAction override def execute Unit SeriDeserifromJValue TestRequest requestContentJValue match case Somereq do something useful case None reply or something object Test case class SubsubValue Option Int case class Responsevalue String sub Sub case class Requestinteger Int long Long float Float double Double string String boolean Boolean dateTime Date optional Option String list List String seq Seq Sub obj Sub val RequestType SwaggerarrayOf Request val ResponseType SwaggervalueOf Response val ResponseArrayType SwaggerarrayOf Response And this code will produce following swaggerjson json swagger info title APIs documented by Swagger version SNAPSHOT basePath paths apitest post operationId test parameters name request in body description This is request model required true schema type array items ref definitionsTestRequest responses description Success schema ref definitionsTestResponse description Success schema type array items ref definitionsTestResponse description Not found definitions TestRequest type object properties integer type integer format int long type integer format int float type number format float double type number format double string type string format boolean type boolean format dateTime type string format datetime optional type string format list type array items type string format seq type array items ref definitionsTestSub obj ref definitionsTestSub required integer long float double string boolean dateTime list seq obj TestSub type object properties subValue type integer format int TestResponse type object properties value type string format sub ref definitionsTestSub required value sub You may want to load that json to Swagger Online Editor to check how the documentation looks like This patch supports simple case classes as models not sure about inheritance and other advanced features Seq List Set as array types Option for nonmandatory fields Hello I use microservices and MessageQueue for interservice communication So on endpoint service I have deserialized FullHttpRequest instance from queue and requsted url is there any possibillity in xitrum to handle my http request directly with action or something else For example I would like to be able to see which data gets passed to Scalate view through at variable during my unit and integration tests This way I want to make sure that the logic is solid This feature may be implemented in a separate project like xitrumtest Why this is a good feature to have This is for convenience so that we dont have to install additional reverse proxies like Nginx HAProxy etc We usually use those for reverse proxy and static file serving Xitrum is already good at adding will make Xitrum more complete Example Site X is written with Xitrum It also needs to integrate Discourse With this reverse proxy feature we can mount Discourse at forum of site X For now we dont support request and response interception In the future we can Allow code to intercept requests and responses to modify headers etc or extract info Add respondProxy for actions How to implement For performance we avoid parsing as much as possible Probably we only need to look at the first request line to know the URL and inject proxy info headers to the request We dont modify responses just send them asis Headers to set Use this task to drive Add plugin architecture 