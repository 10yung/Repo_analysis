Im creating a Position component like so import styled from styledcomponents import position from styledsystem import Box as Base from rebassstyledcomponents const Position styled position props Base props position export default Position Im expecting to be able to use it like so after importing into another file const Header styledPosition color red Header asheader mb Box styled props pt Box styled props positionsticky top leftauto rightauto zIndex Do I need to be utilizing forwardRef Is there a way to pass down both Box props and Position props from an extended component Hi I recently updated my Rebass V to V and found that variants are not getting applied In migration document I found saying The undocumented theme keys for Box Flex Text Heading Link Button Image and Card are no longer supported Use variants instead Can I get example for this Existing code Rebass V export const buttons primary color colorspureWhite secondary color colorsblue Rebass V export const variants Button primary color colorspureWhite secondary color colorsblue Hey wanted to get a discussion going about this With the switch from styledcomponents to emotion as the default cssinjs in version I think it would make sense to have the DefinetlyTyped typings follow suit Right now the types have been updated to match Rebass But they are using styledcomponents as the base This works for the most part except for css prop which conflicts with the Emotion definition Sure you might mostly be using the sx prop for styling Rebass but it will result in an error if you try to create a component that composes the BoxProps ts This causes a TypeScript error when using Emotion type Props BoxProps customProp string Basically the problem is this definition ts export interface BaseProps extends ReactRefAttributesany as ReactElementType css StyledComponentsCSSObject StyledComponentsFlattenSimpleInterpolation string It should look like this when using Emotion ts export interface BaseProps extends ReactRefAttributesany as ReactElementType css InterpolationWithThemeany Im not sure of the best way to handle this in DefinetlyTyped but I think it would make sense to have them split typesrebass typesrebassstyledcomponents or typesrebassstyledcomponents Ive been trying to get it solved in this pull request but surprisingly hard to get the build to pass I might just try again in a new branch Ive created a local copy of the typings that are working fine on the project im working on See also which is caused by this issue In response to this issue I created this PR I am not very seasoned in working with build systems but from my local testing it looks like i achieved the umd build to be compatible with unpkgcom