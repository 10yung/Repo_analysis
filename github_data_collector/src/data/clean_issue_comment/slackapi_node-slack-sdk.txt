 Description When I use webchatupdate like below code the iconemoji and username information used in webchatpostMessage are disappear What type of issue is this place an x in one of the x bug enhancement feature request question documentation related testing related discussion Requirements place an x in each of the x Ive read and understood the Contributing guidelines and have done my best effort to follow them x Ive read and agree to the Code of Conduct x Ive searched for any related issues and avoided creating a duplicate issue Bug Report Packages Select all that apply x slackwebapi slackeventsapi slackinteractivemessages slackrtmapi slackwebhooks I dont know Reproducible in package version slackwebapi node version v OS versions macOS Mojave Expected result The iconemoji and username information used in postMessage should be maintained Actual result When I use webchatupdate like below code the iconemoji and username information used in webchatpostMessage are disappear javascript import WebClient from slackwebapi const web new WebClientgroupaccessToken object contains the same iconemoji username information used in webchatpostMessage const arg webchatupdatearg On the other hand if I use axios with responseurl like axiospostresponseurl arg It works well Attachments button is handled by axios button is handled by webchatupdate Summary Updating the documentation in preparation for granular bot permissions Also added a warning for RTM users not to update Related to Requirements place an x in each x Ive read and understood the Contributing Guidelines and have done my best effort to follow them x Ive read and agree to the Code of Conduct Description If a user creates a new Slack app using the granular permission model they will not be able to use the RTM API Also if a user updates scopes of an existing app they will lose the ability to use the RTM API This is the situation in We should call out these situations proactively in the documentation for slackrtmapi Requirements place an x in each of the x Ive read and understood the Contributing guidelines and have done my best effort to follow them x Ive read and agree to the Code of Conduct x Ive searched for any related issues and avoided creating a duplicate issue Description Describe your issue here What type of issue is this place an x in one of the x bug enhancement feature request question documentation related testing related discussion Requirements place an x in each of the x Ive read and understood the Contributing guidelines and have done my best effort to follow them x Ive read and agree to the Code of Conduct x Ive searched for any related issues and avoided creating a duplicate issue Bug Report Filling out the following details about bugs will help us solve your issue sooner Packages Select all that apply slackwebapi slackeventsapi x slackinteractivemessages slackrtmapi slackwebhooks I dont know Reproducible in package version node version v OS versions Linux Ubuntu Steps to reproduce Send an user a message with this blocks type section text type mrkdwn text The results of your search are now available accessory type button text type plaintext text Show my options emoji true value searchId actionid showsearchresults Pressing the button will produce a payload of this kind type blockactions team id domain user id username name teamid apiappid token container type message messagets channelid isephemeral false triggerid channel id name directmessage message type message subtype botmessage text Thiscontentcantbedisplayed ts username botid blocks type section blockid Kzy text type mrkdwn text Theresultsofyoursearcharenowavailable verbatim false accessory type button actionid showavailableoptions text type plaintext text Showmyoptions emoji true value responseurl https hooksslackcom actions actionid showavailableoptions blockid Kzy text type plaintext text Showmyoptions emoji true value type button actionts The handler of this action showavailableoptions is not called Thorough debugging shows that the dispatching process causes an exception in the matchCallback method of adapterts search for SlackMessageAdapterprototypematchCallback function currently line Wrapping the code inside thiscallbacksfind with a trycatch that returns false in case of exception solves the issue Expected result The action handler specified by me for this payload should have been called Actual result The payload was processed as valid but was not dispatched to the right handler because of a silent internal exception Attachments You can see from the log the last message printed is request signing verification success After that the dispatching process fails Thu Dec GMT expressrouter dispatching POST slackinteractions Thu Dec GMT expressrouter query slackinteractions Thu Dec GMT expressrouter expressInit slackinteractions Thu Dec GMT expressrouter initialize slackinteractions Thu Dec GMT expressrouter trim prefix slackinteractions from url slackinteractions Thu Dec GMT expressrouter anonymous slackinteractions slackinteractions T Z slackinteractivemessageshttphandler request received method POST path T Z slackinteractivemessageshttphandler Parsing raw request T Z slackinteractivemessageshttphandler request signing verification success Summary This is just a new PR for the work by clavin in Ive fixed the issue with webapi not generating a model and rebased from master Still need to add some info about this process to the readme clavin also had a nice potential enhancement for inline interfaces nested interfaces he would like added which he describes over at Requirements place an x in each x Ive read and understood the Contributing Guidelines and have done my best effort to follow them x Ive read and agree to the Code of Conduct I am creating a service to add and remove bots in slack channels but Im not receiving any events for memberleftchannel function registerListenersrtm slackService rtmonmemberjoinedchannel async event return await botJoinedChannelslackService event rtmonmemberleftchannel async event consolelogevent return await botLeftChannelslackService event Description While first working with the slackinteractivemessages library and the new Slack App patterns I misunderstood the role of the callbackid Now I understand callbackid as a way to uniquely identify which workflow step is sending a given callback to easily route the callbacks to the correct handlers Originally however I thought that the callbackid was used to tie together several steps in a workflow so was using the same callbackid value for both message actions and view submissions Given that there are registration handlers for different types of callback payloads I was surprised when a handler I had registered through the viewSubmission method started intercepting messageaction payloads eg the action registration method implies a type messageaction constraint the viewSubmission registration method implies a type viewsubmission constraint but these implied constraints dont seem to get applied What type of issue is this place an x in one of the x bug enhancement feature request question documentation related testing related discussion Requirements place an x in each of the x Ive read and understood the Contributing guidelines and have done my best effort to follow them x Ive read and agree to the Code of Conduct x Ive searched for any related issues and avoided creating a duplicate issue Bug Report Filling out the following details about bugs will help us solve your issue sooner Packages Select all that apply slackwebapi slackeventsapi x slackinteractivemessages slackrtmapi slackwebhooks I dont know Reproducible in package version slackinteractivemessages node version v OS versions Steps to reproduce create a slack app and configure a message interaction to send an orderpizza callback id create an api using slackinteractivemessages to handle callbacks from this slack app register a messageaction handler using the action js slackInteractionsaction type messageaction callbackid orderpizza openPizzaOptionsModal return a view payload to open a modal view with the view callbackid set to orderpizza because its part of the same workflow initiate the action in the slack app verify that the Pizza Options modal dialog opens add a new handler before the action handler because sometimes scanning folders for files reads and registers dialogHandlersjs before messageHandlersjs js slackInteractionsactionorderpizza pizzaOrderSubmitted initiate the action in the slack app Expected result the openPizzaOptionsModal handler fires opening the Pizza Options dialog on submission of the Pizza Options dialog the pizzaOrderSubmitted handler fires Actual result the pizzaOrderSubmitted handler fires on the initial messageaction throws an error because it expects the payload to match the viewsubmission schema no dialog gets opened the slack user gets no feedback about why clicking on the message action had no effect Summary Requirements place an x in each X Ive read and understood the Contributing Guidelines and have done my best effort to follow them X Ive read and agree to the Code of Conduct Summary There is an imported type from http that doesnt exist The changes will remove the nonexisting import and replaces with the proper types Fixes Requirements x Ive read and understood the Contributing Guidelines and have done my best effort to follow them x Ive read and agree to the Code of Conduct Description when installing the library in a typescript project and building it I am getting an error Conflicting definitions for node found at homeubuntuPROJECTnodemodulesslackwebhooknodemodulestypesnodets indexdts and homeubuntuPROJECTnodemodulestypesnodeindexdts Consider installing a specific version of this library to resolve the conflict What type of issue is this place an x in one of the X bug enhancement feature request question documentation related testing related discussion Requirements place an x in each of the X Ive read and understood the Contributing guidelines and have done my best effort to follow them X Ive read and agree to the Code of Conduct X Ive searched for any related issues and avoided creating a duplicate issue Bug Report Filling out the following details about bugs will help us solve your issue sooner Packages slackwebapi slackeventsapi slackinteractivemessages slackrtmapi X slackwebhooks I dont know Reproducible in package version node version latest OS versions ubunutu mac OSX Steps to reproduce create a node project npm i slackwebhook run tsc Expected result The project should run Actual result The build failed Attachments Conflicting definitions for node found at homeubuntuPROJECTnodemodulesslackwebhooknodemodulestypesnodets indexdts and homeubuntuPROJECTnodemodulestypesnodeindexdts Consider installing a specific version of this library to resolve the conflict When looking into packagelock file or yarnlock the requirements for node for the webhooks package are requires typesnode while on most libraries its requires typesnode 