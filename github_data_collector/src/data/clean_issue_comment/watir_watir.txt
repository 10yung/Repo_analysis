this looks to fix but unfortunately im unsure of any widerreaching impact of this change Meta Watir Version Selenium Version Browser Version Chrome and FF Browser Driver Version Chromedriver and Geckodriver OS Version Linux Mint Expected Behavior executing multiple calls to different elements in a frame properly return the elements in the frame Actual Behavior when an element selector comes before the frame the first call succeeds but subsequent calls will fail Steps to reproduce This example behaves as expected gem watir require watir browser WatirBrowsernew chrome or firefox browsergoto browseriframename resultdivclass istaskdescriptionexists true browseriframename resultdivclass taskdescriptionexists true This example reproduces the bug gem watir require watir browser WatirBrowsernew chrome or firefox browsergoto browserdivclass resultsPaneliframename resultdivclass istaskdescriptionexists true browserdivclass resultsPaneliframename resultdivclass taskdescriptionexists false Meta Watir Version Selenium Version Browser Version Google Chrome Browser Driver Version Chromedriver OS Version Centos Ruby Version Expected Behavior ruby scrolllabel labelelementtext label waituntil Failed to find label label to scroll into view do scrolllabelpresent end scrolllabelscrollintoview Should simply scroll to a given text label inside of a modal dialog Actual Behavior Throws WatirExceptionUnknownObjectException immediately when the scrollintoview method is reached Error message indicates a timeout of seconds but this is incorrect as there was no wait time element located but timed out after seconds waiting for WatirLabel located truetextCan Create Dashboards tagnamelabel to be present WatirExceptionUnknownObjectException I rolled back seleniumwebdriver to with recommendation from due to depreciation warnings after the upgrading to but this did not rectify the issue selenium was updated as well Screen Shot at PM Watir Version NoMethodError undefined method for nilNilClass varlibgems gemswatir libwatirwaittimerrb in remainingtime varlibgems gemswatir libwatirelementselementrb in rescue in elementcall varlibgems gemswatir libwatirelementselementrb in elementcall varlibgems gemswatir libwatirelementselementrb Meta Watir Version Selenium Version Browser Version Chrome Browser Driver Version Chromedriver OS Version Windows Expected Behavior When using the adjacent methods eg followingsibling to return an Input element the more specific subclass eg TextField is returned Actual Behavior The adjacent methods return a WatirInput Steps to reproduce Given the HTML html body labelsomethinglabel input typetext body html The following returns an Input which prevents calling methods such as clear field browserlabelfollowingsiblingtagname input WatirInput located false tagnamelabel tagnameinput adjacentfollowing index fieldclear NoMethodError undefined method clear for WatirInput x e This was originally reported on Stack Overflow The current solution is to manually call tosubtype Meta Watir Version Selenium Version Browser Version Chrome Browser Driver Version OS Version Windows Expected Behavior Frame switching should be successful when the after hook attempts to interact with an element outside of the iframe My use case is that I am using the afterhooks to wait while the page load spinner is present after clicking a link that launches a dialog with an iframe Actual Behavior Timeout occurs when I attempt to interact with an element inside the iframe Heres the stack trace from the reproducible test script included below Traceback most recent call last from framewaitrb in main from IOptRubyRuby x librubygems gemswatir libwatirwaitrb in waituntil IOptRubyRuby x librubygems gemswatir libwatirwaitrb in until timed out after seconds waiting for true condition on WatirD iv located false idwatir tagnameiframe classintro tagnamediv WatirWaitTimeoutError I have tracked down the cause to commit be cd ee fc b fc e e b Frame switching is successful if I revert this commit Steps to reproduce HTML html Save as frametesthtml html langen body h idpagetitlePage Titleh iframe idwatir src height px width pxiframe body html Gemfile gem webdrivers gem ffi On Windows gem watir Test Script ruby require webdrivers require watir browser WatirBrowsernew chrome headingcheck proc headingfound browserh id pagetitlepresent browserafterhooksadd headingcheck Navigate to test page browsergoto Filejoinfile Fileexpandpathframetesthtml IFrame should be present puts IFrame found browseriframeid watirpresent Look for Div inside iframe puts Div text browseriframeid watirdivclass introtext Check for presence of heading element outside the iframe puts Heading found headingfound browserclose I have hosted this code in a repo here I am getting the timeout error with following on Ubuntu though Chrome browser is starting require watir false browser WatirBrowsernew NetReadTimeout NetReadTimeout from irb in new from irb ChromeDriver started chromedriver Starting ChromeDriver a dcaf e ec f a cc e c e refsbranchheads on port Only local connections are allowed Please protect ports used by ChromeDriver and related test frameworks to prevent access by malicious code Any idea Fixes Note that in the SelectorBuilderXPath that text and containstext are now the same ie comparing to normalizespace From what I could see theres no reason that they should ever be different However for now to minimize changes I have left them separate Im using all the latest versions of Selenium Watir Linux Basically I want to start the window maximized So if I do things using the traditional Watir opts method I get args startmaximized b WatirBrowsernew chrome options args args url which doesnt work If I try this however everything works well caps SeleniumWebDriverRemoteCapabilitieschromechromeOptions args startmaximized b WatirBrowsernew chrome desiredcapabilities caps url but I get a warning WARN Watir usecapabilities You can pass values directly into WatirBrowser opt without needing to use desiredcapabilities It seems like Watir does not recognize when you want to start a Selenium Hub option and doesnt adjust the desired options appropriately Meta Watir Version Selenium Version Reproduced in v alpha as well Browser Version Chrome No error in IE Browser Driver Version Chromedriver OS Version Windows Build Note This may not be specific to watir and could be a seleniumwebdriver issue Posting this here after discussing with Titus to give him all the info he needs to decide where to fix this Expected Behavior A link nested inside an iframe should be clicked without errors when calling click on it Calling click does not raise any errors Please put down your pitchforks I know click should not be used This was in an old test running on IE that we recently ran on Chrome and caught this error The test has been updated to use click and it passes now Actual Behavior When click is called on a link nested inside an iframe an error is raised AND the link is clicked unknown error unhandled inspector error code messageCannot find context with specified id Session info chrome Driver info chromedriver c f a abc d da dff db b a c platformWindows NT x SeleniumWebDriverErrorUnknownError Simplified Watir Code ruby browser WatirBrowsernew chrome options options w c true browsergoto A test step opens a new window browserwindowslastuse More steps to get to the iframe SeleniumWebDriverloggerlevel info SeleniumWebDriverloggeroutput seleniumlog lnk browseriframesrc SearchPageProceduretableid ctl PVProcedureLookupConrolProcedureResultsPanelctl trclass GridRowBasicGridlinktext visible true lnkclick Raises error Selenium log from the above code click click 