Regarding your considerations create git pull I hope Change login attemp in message to eventid removed certifi changed from twisted to treq I did my best despite not being a developer Hello Im a cowrie honeypot user For my need I developed an output plugin for Telegram Bot Just add to etccowriecfg outputtelegram enabled true botid ASDASDASDASqwertyuiopasdfghjkl zxcvbnm chatid And create file srccowrieoutputtelegrampy based on elasticsearchpy Simple Telegram Bot logger from future import absoluteimport division import urllib import certifi from twistedpython import log import cowriecoreoutput from cowriecoreconfig import CowrieConfig class OutputcowriecoreoutputOutput telegram output def startself selfbotid CowrieConfiggetoutputtelegram botid selfchatid CowrieConfiggetoutputtelegram chatid def stopself pass def writeself logentry for i in listlogentrykeys remove twisted legacy keys if istartswithlog del logentry i if login attempt in logentry message msgtxt cowrie logentry timestamp msgtxt logentry message msgtxt session logentry session try https urllib PoolManagercertreqsCERTREQUIRED cacertscertifiwhere r httpsrequestGET selfbotid sendMessagechatid strselfchatid text msgtxt except urllib exceptionsSSLError as err print ERROR Telegram SSL error err Telegram message can be customized This is my first solution Hope it helps Is your feature request related to a problem Please describe Many newer bots are running commands with the in the command knowing that the fake shell will not properly handle the background They use this to their advantage and can tell they are in a honeypot Describe the solution youd like I would like it if you added realistic handling of the background in the fake shell Additional context I noticed this when a lot of bots were running the command uname a lscpu and then exiting right after This made me realize that the shell is not properly handling the background in the shell When setting sshversion to a seemingly valid but actually invalid value connections to the honeypot will time out and an error is not logged To Reproduce Steps to reproduce the behavior Manipulate cowriecfg ini ssh version OpenSSH p Ubuntu ubuntu Restart cowrie Connect to it via SSH and observe how your connection will time out ssh v output debug sshexchangeidentification debug sshexchangeidentification debug sshexchangeidentification E debug sshexchangeidentification cbc descbcblowfishcbccast cbc sshexchangeidentification Connection closed by remote host When the connection is closed cowrie reports that the timeout for this connection was reached The invalid value is not reported This also causes those strange escape codes While debugging this problem I found issue which provided a solution Expected behavior Cowrie logs an error that the value is not valid and does not fail silently Invalid OpenSSH p Ubuntu ubuntu Valid SSH OpenSSH p Ubuntu ubuntu prepended SSH My telnet honeypot is running on kvm when I login it success and type any command eg ls logout Then Id like to query data from kibana page But it just only datas the one is sessionconnect and the other one is sessionclosed I dont know why it doesnt record input data img width alt src Hello micheloosterhof I have some problems when I try to use cowrie in proxy mode I would like to deploy cowrie on my machine in proxy mode in this way when a user do ssh on my machine he is able to access completely to it but all is logged This is how proxy mode may work isnt it In order to do that i set the cowrieconfig as follows honeypot backend proxy proxy backend simple Do I miss something in my settings Is it possible to hide cowrie to ps x command Similar to SANS DShield and CSIRTG AbuseIP also offers a public list of bad actors with ability to export feeds to FAIL BAN API documentation at cowrieouttxt While pip can install the csirtgsdk module and its dependencies cowrie fails to initialize a function and does not make use of this output module It still launches though Failed to load output engine csirtg due to ImportError cannot import name Client from csirtgsdkclient homecowriecowriecowrieenvlibpython sitepackagescsirtgsdkclientinitpy Running latest source from GitHub as of Nov PM EST csirtgsdk is properly installed cowrieenv cowriexxxcowrie csirtg csirtgyml configuration no longer supported Please setup your environment variables export CSIRTGTOKEN cowrieenv cowriexxxcowrie I think need to add protocol field img width alt src In the cowriecfgdist file the parameter interactivetimeout is described as follows determines when logged in sessions are terminated for being idle However the interactivetimeout is only set once at the beginning of a SSH session in transportpy or Telnet session in userauthpy In consequence each session is terminated when the interactive timeout is reached no matter whether input is received in the meantime or not To Reproduce In cowriecfg set interactivetimeout Start Cowrie not in proxy mode I did not check this Connect via Telnet or SSH interact with the system and stop the time until the connection is closed due to timeout Expected behavior Each time after a command is executed the timeout is supposed to be reset to the time period specified in interactivetimeout Otherwise it has to be described differently in cowriecfgdist Server OS Ubuntu Python 