 Bug Report The routesPaths parameter passed to the postBuild lifecycle event contains the wrong path to the html file if you have a baseUrl configured in docusaurusconfigjs This results in wrong data generated by plugins that access the routesPaths parameter An example is the sitemap plugin which generates an invalid sitemap entry Have you read the Contributing Guidelines on issues Yes To Reproduce Set the baseUrl to something different than just in docusuaurusconfigjson Build the documentation and log the routesPaths parameter in a plugins postBuild lifecycle callback Youll see the wrong path to the file Open the generates sitemap Again the path to the file is wrong Expected behavior I would expect the routesPaths to look like this js baseurl html baseurl baseurldocsgettingstarted and the sitemap to contain xml url loc changefreqweeklychangefreq priority priority url Actual Behavior Currently routesPaths look like this js html baseurl baseurldocsgettingstarted The sitemapxml file looks like this xml url loc changefreqweeklychangefreq priority priority url Reproducible Demo To reproduce build the documentation inside the docs folder of Thank you for sending the PR We appreciate you spending the time to work on these changes Help us understand your motivation by explaining why you decided to make this change You can learn more about contributing to Docusaurus here Happy contributing Motivation Currently the correct syntax theme is not applied to live code blocks if you go not through client navigation for example open a link directly This PR fixes this Have you read the Contributing Guidelines on pull requests Yes Test Plan Compare current version with preview one Thank you for sending the PR We appreciate you spending the time to work on these changes Help us understand your motivation by explaining why you decided to make this change You can learn more about contributing to Docusaurus here Happy contributing Motivation I wrote a remark plugin for admonitions remarkadmonitions and mentioned it over in yangshun suggested I add it to docusauruspresetclassic so I did Have you read the Contributing Guidelines on pull requests Yes Test Plan I tested it in two ways Creating a new site with the modified version of docusaurusinit using both templates Creating a new site from scratch using the modified version docusauruspresetclassic screenshot Related PRs I havent added anything to the docs yet as Im not sure where it would fall under Right now Im thinking any docs would go in if admonitions need to be mentioned Bug Report I added a table to the document but the table is too wide Document directory structure should be on the right but now it ran to the bottom Is there any way to solve it Bug Report This bug applies to v v seems to work correctly When you click a link in the navbar and the page renders the navbar item is highlighted so the user has context to what area they are in That highlight will disappear when you click around the sidebar unless you click on the first link in the sidebar Have you read the Contributing Guidelines on issues Yes To Reproduce This happens in my project but it can be reproduced using Docusauruss own doc page Go the Docusaurus website Click the Docs link in the navbar which takes you to Notice that the Docs item in the navbar is highlighted in green Click on any other sidebar item At the time of writing this bug the second item was Design Principles Notice that Docs in the navbar is no longer highlighted Click back on the first item in the sidebar Introduction and Docs is once again highlighted in the navbar If you go the v site this doesnt occur Go to Click Docs in the navbar and notice its highlighted though subtly Click on another item in the sidebar and notice Docs continues to stay highlighted Expected behavior While clicking around the sidebar I expect the navbar item to stay highlighted so the user has context to what section they are in Actual Behavior The navbar item only highlights if the first item in the sidebar is the current page My guess is that its coming from docusaurusconfigjs js moduleexports themeConfig navbar links to introduction label Introduction position left ie The highlight in the navbar is only occurring if the current sidebar item matches the above setting in your config file In my sidebarjs I even specified the type as doc js moduleexports someSidebar Introduction type doc id doc type doc id doc But it had no noticeable effect Reproducible Demo No demo needs to be included to reproduce this as it can be reproduced live on Docusauruss own website I hope that suffices But if needed I can upload a minimal project that reproduces the issue Thank you for sending the PR We appreciate you spending the time to work on these changes Help us understand your motivation by explaining why you decided to make this change You can learn more about contributing to Docusaurus here Happy contributing Motivation Most of our codebase is in Typescript We want some dynamic documentation to where we can reference variables in Typescript files It would be awesome to further support inline Typescript files as well This is a very simple change that enables a lot of possibilities Have you read the Contributing Guidelines on pull requests Yes Test Plan Pretty straight forward Try putting a ts file in the pages folder and a js file for backwards compatibility and test it compiles Try putting a ts or a tsx file somewhere in the project then reference it in any md or mdx file and be amazed as it works Related PRs Let me know how we want this documented a page or a footnote and Ill add it to the PR Fixes Feature The Docusaurus v mobile theme does not currently implement a way to view the inpage headings TOC that appears in the right sidebar in the desktop theme I propose altering the v mobile button behavior to consolidate all page nav link access from the upperleft hamburger button and convert the lowerright floating button to showing the page headings TOC instead Have you read the Contributing Guidelines on issues Yes Motivation There are three major navigation sections in a standard Docusaurus page The top nav bar shows a short list of major links like Docs Tutorials Github etc and includes the search input The left sidebar contains all the actual docs page links grouped into collapsible categories The right sidebar shows the H H headings for the current page facilitating navigation within a single page v Mobile Theme In DSv the mobile theme implemented all three nav areas in basically the same way as seen in this ReactRedux docs screenshot DS v multiple toolbars The top nav bar is always visible here but due to space constraints the nav links are on a second row below the site title search bar In addition theres a third top toolbar containing the current page title and two more buttons The upperleft outarrows button triggers showing the left sidebar DS v left sidebar While the upperright hamburger button shows the current page headings TOC DS v right sidebar The flaw in this design is that the multiple top toolbars take up a lot of extra space v Mobile Theme DS v s mobile simplifies things considerably Theres now just a single top toolbar with the site title and search button as well as a hamburger button in the upperleft Theres also a floating button in the bottom right DS v whole page The upperleft button now shows the content from the top nav bar links in a popover layer that shows the links stacked vertically DS v top nav bar The bottomright button shows the content from the left sidebar DS v left sidebar v Theme Observations The v theme top bar behavior is a major improvement over v because theres only one top bar visible at all times That saves a lot of vertical space However the v theme has no way to show the page TOC This is a major deficiency compared to v Pitch I would specifically like to see the v mobile theme rewritten so that The upperleft hamburger button shows a popup layer that contains both the top nav bar links and the left sidebar categories pages TOC I imagine that the links from the top nav might be added as an extra pseudocategory on top of the others perhaps labeled Nav Links The lowerright floating button should be changed to show a popup layer that contains the inpage headings TOC from the right sidebar This would be a distinct improvement because All page navigation UI is now triggered from the same button in the upperleft The page heading TOC is now accessible when before it wasnt Feature Allow irrelevant sections of code to be folded away in code samples Have you read the Contributing Guidelines on issues Yes Motivation Sometimes its nice to be able to fold away irrelevant sections in a full code example so that you can focus on the important parts Pitch For example if I wrote a Rust function rust fn main samplestart printlnhello sampleend Id want it to display as note the indentation rust printlnhello There would be a button on the code block to allow this to be expanded to the full code rust fn main printlnhello Example Kotlins documentation For a live example you can check out the Kotlin docs They seem to have a nice UI for unfolding examples For example here is their documentation on defining variables Folded img width altScreen Shot at pm src Unfolded img width altScreen Shot at pm src Markdown source img width altScreen Shot at pm src Motivation This PR should fix the issue yarn build is failing when there are special characters in markdown files Have you read the Contributing Guidelines on pull requests Yes Test Plan Ive reproduced the issue by adding in websiteversionneddocsblogmd title After investigation I have changed the ssrhtmltemplatejs file to escape the input HTML cf EJS feature Ive launched again yarn build which has succeeded Finally ive launched the build on a local server to check that the result was fine Bug Report When running the command npm run build files in the nodemodules folder are checked by the engine This creates a lot of unnecessary overhead and logs many errors in the console like so WARN unresolved links in file websitenodemodulesmixindeepnodemodulesisextendableREADMEmd verbmd WARN unresolved links in file websitenodemodulesmixindeepREADMEmd verbmd WARN unresolved links in file websitenodemodulesnanomatchREADMEmd githubcontributingmd verbmd There also are some errors logged from the fixture files for the tests Header field unlisted in homejeaheldevthehivedocumentationwebsitenodemodulesdocusauruslibcore tests fixtures blogpostwithdraftmd is not supported Header field authorTwitter in homejeaheldevthehivedocumentationwebsitenodemodulesdocusauruslibserver tests fixtures docusaurusmd is not supported And some errors with BABEL still in the nodemodules folder BABEL Note The code generator has deoptimised the styling of homejeaheldevthehivedocumentationwebsitenodemodulesdocusauruslibcoremetadatajs as it exceeds the max of KB Have you read the Contributing Guidelines on issues I have To Reproduce Create a new Docusaurus project with docusaurusinit Build the website with cd website npm run build Look at the console output Expected behavior I expect the engine not to go through the nodemodules folder not to waste time and no log errors about files I am not supposedrequired to know about errors about the fixtures and BABEL Actual Behavior The opposite all files from the dependencies in nodemodules are parsed and errors about unknown files are printed out Reproducible Demo No need to clone a repo juste create a new Docusaurus project with npx docusaurusinit 