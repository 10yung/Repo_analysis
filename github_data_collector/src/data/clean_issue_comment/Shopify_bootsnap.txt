When running rspec for an application for which a new configsomethingymlexample file has been added and some code expects that configsomethingyml is present an obscure error appears from Userspirjrvmgemsruby myprojectgemsbootsnap libbootsnaploadpathcachecoreextkernelrequirerb in require from Userspirjsourcemyprojectlibmodelssomemodelrb in top required from Userspirjsourcemyprojectlibmodelssomemodelrb in classSomeModel from Userspirjsourcemyprojectlibconcernssomeconcernrb in someattribute from Userspirjsourcemyprojectlibconcernssomeconcernrb in delete from Userspirjsourcemyprojectlibconcernssomeconcernrb in block in someattribute from Userspirjrvmgemsruby myprojectgemsbootsnap libbootsnapcompilecacheyamlrb in block in install Userspirjrvmgemsruby myprojectgemsbootsnap libbootsnapcompilecacheyamlrb in fetch No such file or directory bsfetchopencurrentfileopen ErrnoENOENT scrubbed where the line that is fetching conf is ruby config YAMLloadfileRailsrootjoinpathdeepsymbolizekeys env WDYT of adding handling for this case to libbootsnapcompilecacheyamlrb diff rescue ErrnoEACCES BootsnapCompileCachepermissionerrorpath rescue ErrnoENOENT Something explaining which file cant be found end end I can send a pull request real quick but would appreciate if you suggest what should be raised and how since Im not very familiar with the internals of Bootsnap Hey when I am trying to run rails server I am getting the process aborted due to the following problem rvmgemsruby projectnamegemsbootsnap libbootsnaploadpathcachecoreextkernelrequirerb in require cannot load such file dryvalidationschemaform LoadError are you aware how can I fix it Google does not provide and useful ideas I am running on Mac OS Catalina I had some kernel related issue with the curb gem where I had to upgrade it from to Maybe this case is somehow related Since I am not a backend developer I can only guess what s going on here If youre using Spring with Bootsnap Spring requires fileutils via gem name ie require fileutils which in turn always loads the latest version installed Bootsnap requires fileutils directly from the ruby lib dir which can cause already initialized constant FileUtils if you have multiple versions installed For example on my system I have the following versions installed fileutils default Spring will load v and Bootsnap will load v Any suggestions Or maybe Bootsnap should check if the FileUtils constant is already loaded before trying to require it Thanks for your time Update This really has nothing to do with Spring it just so happens it uses fileutils and its run before Bootsnap I decided to keep up the momentum with and create a tenative pull request with my proposed changes to load path cache This includes Additional option to exclude some path to try them as potential load path to scan New module in C to replace Dirglob It is both faster and easier on memory unlike Dirglob creating a large array and then iterating it it yields with every found path and does path exclusion on C level Extending TravisCI matrix to test both with this new extension and without I tested those changes against Discourse but without significant speedup cold warm no exclusions Ruby no exclusions C exclusions Ruby exclusions C However with my internal project with a lot of javascript webpacker etc caching etc savings are significant cold warm no exclusions Ruby no exclusions C exclusions Ruby exclusions C Legend cold with load path cache purged rm tmpcachebootsnaploadpathcache warm with load path cache present and no changes to the files Im not the best C programmer or even mediocre one so to use this new C extension one must set environment variable BOOTSNAPEXPERIMENTAL This way people with project in dire need to speed up can experimentally use this while most of the people can safely use existing version Let me know what you think about this direction I noticed that out of seconds of my applications startup time after requiring bootsnap is consumed by BootsnapLoadPathCachePathScannercall By tracking the issue down I found that it checks more than files that Dirglobpath ALLFILES returns Most of those files are nodemodules cache files and compiled assets This is obviously unnecessary By simply hardcoding skipping of those path I gained less of application boot time I was wondering how this can be parameterized without actually overwriting part of Bootsnap code Allin approach would be writing a C extension that would only return those paths that are not explicitly excluded from load path optimization instead of Dirglob I have some preliminary working result here Lighter approach would be to just next if excludedpathsany ep absolutepathstartwithep to the block inside Dirglobeach but of course this would be a bit less performant I dont know how much less What are your thoughts about this issue my project has many large migration files stack level too deep error occurs when executed RAILSENVtest bundle exec rake appsetup but not repro comment out require bootsnap and Bootsnapsetup in bootrb rake aborted SystemStackError stack level too deep using ruby rails bootsnap Thank you Since upgrading our Rails app to a few months ago and introducing Bootsnap currently using v I have intermittent issues with User and Admin namespaces not found after starting the rails server on my dev machine and visiting our login signup or admin routes The workaround is to reload the page or restart the server and eventually Im able to visit those pages The errors do not occur in test and production environments Below is an example of error trace details Started GET signup for at ActionControllerRoutingError uninitialized constant Users bootsnap libbootsnaploadpathcachecoreextactivesupportrb in block in loadmissingconstant bootsnap libbootsnaploadpathcachecoreextactivesupportrb in withoutbootsnapcache bootsnap libbootsnaploadpathcachecoreextactivesupportrb in rescue in loadmissingconstant bootsnap libbootsnaploadpathcachecoreextactivesupportrb in loadmissingconstant activesupport libactivesupportinflectormethodsrb in constget activesupport libactivesupportinflectormethodsrb in block in constantize activesupport libactivesupportinflectormethodsrb in each activesupport libactivesupportinflectormethodsrb in inject activesupport libactivesupportinflectormethodsrb in constantize actionpack libactiondispatchhttprequestrb in controllerclassfor actionpack libactiondispatchhttprequestrb in controllerclass actionpack libactiondispatchroutingroutesetrb in controller actionpack libactiondispatchroutingroutesetrb in serve actionpack libactiondispatchroutingmapperrb in block in classConstraints actionpack libactiondispatchroutingmapperrb in serve actionpack libactiondispatchjourneyrouterrb in block in serve actionpack libactiondispatchjourneyrouterrb in each actionpack libactiondispatchjourneyrouterrb in serve actionpack libactiondispatchroutingroutesetrb in call newrelicrpm libnewrelicagentinstrumentationmiddlewaretracingrb in call rackpjax librackpjaxrb in call newrelicrpm libnewrelicagentinstrumentationmiddlewaretracingrb in call omniauth libomniauthstrategyrb in call omniauth libomniauthstrategyrb in call newrelicrpm libnewrelicagentinstrumentationmiddlewaretracingrb in call httpacceptlanguage libhttpacceptlanguagemiddlewarerb in call newrelicrpm libnewrelicagentinstrumentationmiddlewaretracingrb in call newrelicrpm libnewrelicrackagenthooksrb in tracedcall newrelicrpm libnewrelicagentinstrumentationmiddlewaretracingrb in call newrelicrpm libnewrelicrackbrowsermonitoringrb in tracedcall newrelicrpm libnewrelicagentinstrumentationmiddlewaretracingrb in call remotipart libremotipartmiddlewarerb in call newrelicrpm libnewrelicagentinstrumentationmiddlewaretracingrb in call warden libwardenmanagerrb in block in call warden libwardenmanagerrb in catch warden libwardenmanagerrb in call newrelicrpm libnewrelicagentinstrumentationmiddlewaretracingrb in call rack libracktempfilereaperrb in call newrelicrpm libnewrelicagentinstrumentationmiddlewaretracingrb in call rack libracketagrb in call newrelicrpm libnewrelicagentinstrumentationmiddlewaretracingrb in call rack librackconditionalgetrb in call newrelicrpm libnewrelicagentinstrumentationmiddlewaretracingrb in call rack librackheadrb in call newrelicrpm libnewrelicagentinstrumentationmiddlewaretracingrb in call actionpack libactiondispatchhttpcontentsecuritypolicyrb in call newrelicrpm libnewrelicagentinstrumentationmiddlewaretracingrb in call rack libracksessionabstractidrb in context rack libracksessionabstractidrb in call newrelicrpm libnewrelicagentinstrumentationmiddlewaretracingrb in call actionpack libactiondispatchmiddlewarecookiesrb in call newrelicrpm libnewrelicagentinstrumentationmiddlewaretracingrb in call activerecord libactiverecordmigrationrb in call newrelicrpm libnewrelicagentinstrumentationmiddlewaretracingrb in call actionpack libactiondispatchmiddlewarecallbacksrb in block in call activesupport libactivesupportcallbacksrb in runcallbacks actionpack libactiondispatchmiddlewarecallbacksrb in call newrelicrpm libnewrelicagentinstrumentationmiddlewaretracingrb in call actionpack libactiondispatchmiddlewareexecutorrb in call newrelicrpm libnewrelicagentinstrumentationmiddlewaretracingrb in call actionpack libactiondispatchmiddlewaredebugexceptionsrb in call newrelicrpm libnewrelicagentinstrumentationmiddlewaretracingrb in call actionpack libactiondispatchmiddlewareshowexceptionsrb in call newrelicrpm libnewrelicagentinstrumentationmiddlewaretracingrb in call railties librailsrackloggerrb in callapp railties librailsrackloggerrb in block in call activesupport libactivesupporttaggedloggingrb in block in tagged activesupport libactivesupporttaggedloggingrb in tagged activesupport libactivesupporttaggedloggingrb in tagged railties librailsrackloggerrb in call newrelicrpm libnewrelicagentinstrumentationmiddlewaretracingrb in call sprocketsrails libsprocketsrailsquietassetsrb in call newrelicrpm libnewrelicagentinstrumentationmiddlewaretracingrb in call actionpack libactiondispatchmiddlewareremoteiprb in call newrelicrpm libnewrelicagentinstrumentationmiddlewaretracingrb in call requeststore librequeststoremiddlewarerb in call newrelicrpm libnewrelicagentinstrumentationmiddlewaretracingrb in call actionpack libactiondispatchmiddlewarerequestidrb in call newrelicrpm libnewrelicagentinstrumentationmiddlewaretracingrb in call rack librackmethodoverriderb in call newrelicrpm libnewrelicagentinstrumentationmiddlewaretracingrb in call rack librackruntimerb in call newrelicrpm libnewrelicagentinstrumentationmiddlewaretracingrb in call activesupport libactivesupportcachestrategylocalcachemiddlewarerb in call newrelicrpm libnewrelicagentinstrumentationmiddlewaretracingrb in call actionpack libactiondispatchmiddlewareexecutorrb in call newrelicrpm libnewrelicagentinstrumentationmiddlewaretracingrb in call actionpack libactiondispatchmiddlewarestaticrb in call newrelicrpm libnewrelicagentinstrumentationmiddlewaretracingrb in call rack libracksendfilerb in call newrelicrpm libnewrelicagentinstrumentationmiddlewaretracingrb in call honeybadger libhoneybadgerrackerrornotifierrb in block in call honeybadger libhoneybadgeragentrb in withrackenv honeybadger libhoneybadgerrackerrornotifierrb in call newrelicrpm libnewrelicagentinstrumentationmiddlewaretracingrb in call honeybadger libhoneybadgerrackuserfeedbackrb in call newrelicrpm libnewrelicagentinstrumentationmiddlewaretracingrb in call honeybadger libhoneybadgerrackuserinformerrb in call newrelicrpm libnewrelicagentinstrumentationmiddlewaretracingrb in call webpacker libwebpackerdevserverproxyrb in performrequest rackproxy librackproxyrb in call newrelicrpm libnewrelicagentinstrumentationmiddlewaretracingrb in call railties librailsenginerb in call newrelicrpm libnewrelicagentinstrumentationmiddlewaretracingrb in call puma libpumaconfigurationrb in call puma libpumaserverrb in handlerequest puma libpumaserverrb in processclient puma libpumaserverrb in block in run puma libpumathreadpoolrb in block in spawnthread details I would be grateful if someone would have an idea of the cause and how to fix this thanks Using Bootsnap Ruby Bundler Rails on macOS Create a new appwhen I run rails s it throws me a cannot load such file bindex error I tried gem install bindex it throws me the same error tried bundle update the same error tried gem update the same error I have no idea how to fix this Please help me out macos mojave rails orc ruby master rails s Booting Puma Rails rc application starting in development Run rails server help for more startup options Exiting Traceback most recent call last binrails BootsnapLoadPathCacheFallbackScan from binrails in main from binrails in load from Userssujizeapp binspring in top required from Userssujizeapp binspring in require from Userssujizervmgemsruby gemsspring libspringbinstubrb in top required from Userssujizervmgemsruby gemsspring libspringbinstubrb in load from Userssujizervmgemsruby gemsspring binspring in top required from Userssujizervmgemsruby gemsspring libspringclientrb in run from Userssujizervmgemsruby gemsspring libspringclientcommandrb in call from Userssujizervmgemsruby gemsspring libspringclientrailsrb in call from Userssujizervmgemsruby gemsspring libspringclientrailsrb in load from Userssujizeapp binrails in top required from Userssujizervmgemsruby gemsactivesupport rc libactivesupportdependenciesrb in require from Userssujizervmgemsruby gemsactivesupport rc libactivesupportdependenciesrb in loaddependency from Userssujizervmgemsruby gemsactivesupport rc libactivesupportdependenciesrb in block in require from Userssujizervmgemsruby gemsbootsnap libbootsnaploadpathcachecoreextkernelrequirerb in require from Userssujizervmgemsruby gemsbootsnap libbootsnaploadpathcachecoreextkernelrequirerb in requirewithbootsnaplfi from Userssujizervmgemsruby gemsbootsnap libbootsnaploadpathcacheloadedfeaturesindexrb in register from Userssujizervmgemsruby gemsbootsnap libbootsnaploadpathcachecoreextkernelrequirerb in block in requirewithbootsnaplfi from Userssujizervmgemsruby gemsbootsnap libbootsnaploadpathcachecoreextkernelrequirerb in require from Userssujizervmgemsruby gemsrailties rc librailscommandsrb in main from Userssujizervmgemsruby gemsrailties rc librailscommandrb in invoke from Userssujizervmgemsruby gemsrailties rc librailscommandbaserb in perform from Userssujizervmgemsruby gemsthor libthorrb in dispatch from Userssujizervmgemsruby gemsthor libthorinvocationrb in invokecommand from Userssujizervmgemsruby gemsthor libthorcommandrb in run from Userssujizervmgemsruby gemsrailties rc librailscommandsserverservercommandrb in perform from Userssujizervmgemsruby gemsrailties rc librailscommandsserverservercommandrb in tap from Userssujizervmgemsruby gemsrailties rc librailscommandsserverservercommandrb in block in perform from Userssujizervmgemsruby gemsrailties rc librailscommandsserverservercommandrb in start from Userssujizervmgemsruby gemsrailties rc librailscommandsserverservercommandrb in logtostdout from Userssujizervmgemsruby gemsrack librackserverrb in wrappedapp from Userssujizervmgemsruby gemsrack librackserverrb in app from Userssujizervmgemsruby gemsrack librackserverrb in buildappandoptionsfromconfig from Userssujizervmgemsruby gemsrack librackbuilderrb in parsefile from Userssujizervmgemsruby gemsrack librackbuilderrb in newfromstring from Userssujizervmgemsruby gemsrack librackbuilderrb in eval from configruin main from configruin new from Userssujizervmgemsruby gemsrack librackbuilderrb in initialize from Userssujizervmgemsruby gemsrack librackbuilderrb in instanceeval from configru in block in main from Userssujizervmgemsruby gemsbootsnap libbootsnaploadpathcachecoreextkernelrequirerb in requirerelative from Userssujizervmgemsruby gemsactivesupport rc libactivesupportdependenciesrb in require from Userssujizervmgemsruby gemsactivesupport rc libactivesupportdependenciesrb in loaddependency from Userssujizervmgemsruby gemsactivesupport rc libactivesupportdependenciesrb in block in require from Userssujizervmgemsruby gemszeitwerk libzeitwerkkernelrb in require from Userssujizervmgemsruby gemsbootsnap libbootsnaploadpathcachecoreextkernelrequirerb in require from Userssujizervmgemsruby gemsbootsnap libbootsnaploadpathcachecoreextkernelrequirerb in requirewithbootsnaplfi from Userssujizervmgemsruby gemsbootsnap libbootsnaploadpathcacheloadedfeaturesindexrb in register from Userssujizervmgemsruby gemsbootsnap libbootsnaploadpathcachecoreextkernelrequirerb in block in requirewithbootsnaplfi from Userssujizervmgemsruby gemsbootsnap libbootsnaploadpathcachecoreextkernelrequirerb in require from Userssujizeapp configenvironmentrb in main from Userssujizervmgemsruby gemsrailties rc librailsapplicationrb in initialize from Userssujizervmgemsruby gemsrailties rc librailsinitializablerb in runinitializers from Userssujizervmrubiesruby libruby tsortrb in tsorteach from Userssujizervmrubiesruby libruby tsortrb in tsorteach from Userssujizervmrubiesruby libruby tsortrb in eachstronglyconnectedcomponent from Userssujizervmrubiesruby libruby tsortrb in call from Userssujizervmrubiesruby libruby tsortrb in each from Userssujizervmrubiesruby libruby tsortrb in block in eachstronglyconnectedcomponent from Userssujizervmrubiesruby libruby tsortrb in eachstronglyconnectedcomponentfrom from Userssujizervmrubiesruby libruby tsortrb in block levels in eachstronglyconnectedcomponent from Userssujizervmrubiesruby libruby tsortrb in block in tsorteach from Userssujizervmgemsruby gemsrailties rc librailsinitializablerb in block in runinitializers from Userssujizervmgemsruby gemsrailties rc librailsinitializablerb in run from Userssujizervmgemsruby gemsrailties rc librailsinitializablerb in instanceexec from Userssujizervmgemsruby gemswebconsole libwebconsolerailtierb in block in classRailtie from Userssujizervmgemsruby gemsactivesupport rc libactivesupportdependenciesrb in require from Userssujizervmgemsruby gemsactivesupport rc libactivesupportdependenciesrb in loaddependency from Userssujizervmgemsruby gemsactivesupport rc libactivesupportdependenciesrb in block in require from Userssujizervmgemsruby gemszeitwerk libzeitwerkkernelrb in require from Userssujizervmgemsruby gemsbootsnap libbootsnaploadpathcachecoreextkernelrequirerb in require from Userssujizervmgemsruby gemsbootsnap libbootsnaploadpathcachecoreextkernelrequirerb in rescue in require from Userssujizervmgemsruby gemsbootsnap libbootsnaploadpathcachecoreextkernelrequirerb in requirewithbootsnaplfi from Userssujizervmgemsruby gemsbootsnap libbootsnaploadpathcacheloadedfeaturesindexrb in register from Userssujizervmgemsruby gemsbootsnap libbootsnaploadpathcachecoreextkernelrequirerb in block in requirewithbootsnaplfi Userssujizervmgemsruby gemsbootsnap libbootsnaploadpathcachecoreextkernelrequirerb in require cannot load such file bindex LoadError The error from Userssujizervmgemsruby gemsbootsnap libbootsnaploadpathcachecoreextkernelrequirerb in block in requirewithbootsnaplfi Userssujizervmgemsruby gemsbootsnap libbootsnaploadpathcachecoreextkernelrequirerb in require cannot load such file bindex LoadError Github In vanilla MRI if you require a file via absolute path which is also present on LOADPATH MRI internally caches it under its relative path and will allow it to satisfy future require relativepath calls even if such a call would otherwise resolve to a file earlier in LOADPATH bootsnap does not properly implement this behavior resulting in a difference in behavior versus MRIs require which turned out to break our application This is honestly an odd behavior for us to be relying on and Im going to attempt to work around it locally but I wanted to report the bug for visibility This behavior is rather unclear to me from the Ruby documentation and arguably this could be reported as an MRI bug instead Ive built a simple reproducer that demonstrates different behavior under bootsnap and without here Summary I have a cache path problem during test the cache path generated by bootsnap seems randomly This is occurred only in Debian packaging environment this might not an bootsnap issue Could you give some clue for solving this failure Which thing makes the cache path randomly Problem Hi when I build this gem with Debian package build tools dpkgbuildpackage sbuild pbuilder etc I got two test failures diff Failure CompileCacheTesttestinvalidcachefile PKGBUILDDIRtestcompilecachetestrb Expected false to be truthy Failure CompileCacheTesttestnowritepermissiontocache PKGBUILDDIRtestcompilecachetestrb BootsnapCompileCachePermissionError expected but nothing was raised I found that both unit tests use the path made by Helpcachepath for testing write to desired cache path chmod the cache dir However cache path generated by Helpcachepath and generated by bootsnap C extension are different More I created a test unit to validate this mismatching problem more explicitly And failed diff Failure HelperTesttestvalidatecachepath PKGBUILDDIRtesthelpertestrb Expected true Actual false Debugging logs Patch for debugging For tracing how the caches going on I added two patches for debugging This patch will add a function Helplistdirdir on testhelperrb to get a recursive dir directory listing diff atesttesthelperrb btesttesthelperrb FileUtilstouchpath mtime mtime path end def listdirdir Dir dir end end end end This patch will raise a failure intentionally to print a tmpdir recursive listing using above Helplistdir on compilecachetestrb tests testnowritepermissiontocache testinvalidcachefile diff atestcompilecachetestrb btestcompilecachetestrb folder FiledirnameHelpcachepathtmpdir path FileUtilsmkdirpfolder FileUtilschmod folder loadpath assertoutputstdout Helplistdirtmpdireach x puts x assertraisesBootsnapCompileCachePermissionError loadpath end FileUtilsmkdirpFiledirnamecp Filewritecp nope loadpath assertoutputstdout Helplistdirtmpdireach x puts x assertFilesizecp cache was overwritten end end Start a debugging I ran the tests times with above two patches applied First try diff Failure CompileCacheTesttestinvalidcachefile PKGBUILDDIRtestcompilecachetestrb In stdout expected actual tmpbootsnaptest vls yb tmpbootsnaptest vls yb a bb d tmpbootsnaptest vls y a tmpbootsnaptest vls y ad a ba a tmpbootsnaptest vls yarb Failure CompileCacheTesttestnowritepermissiontocache PKGBUILDDIRtestcompilecachetestrb In stdout expected actual tmpbootsnaptest ptev qd tmpbootsnaptest ptev qd b b ab tmpbootsnaptest ptev q a tmpbootsnaptest ptev qarb Second try diff Failure CompileCacheTesttestnowritepermissiontocache PKGBUILDDIRtestcompilecachetestrb In stdout expected actual tmpbootsnaptest bfb f tmpbootsnaptest bfb f b d d c f tmpbootsnaptest bfb a tmpbootsnaptest bfb arb Failure CompileCacheTesttestinvalidcachefile PKGBUILDDIRtestcompilecachetestrb In stdout expected actual tmpbootsnaptest eo u s c tmpbootsnaptest eo u s cdfdbe ff cc tmpbootsnaptest eo u s a tmpbootsnaptest eo u s ad a ba a tmpbootsnaptest eo u sarb Third try diff Failure CompileCacheTesttestinvalidcachefile PKGBUILDDIRtestcompilecachetestrb In stdout expected actual tmpbootsnaptest audvy tmpbootsnaptest audvy aa ef f tmpbootsnaptest audvy a tmpbootsnaptest audvy ad a ba a tmpbootsnaptest audvyarb Failure CompileCacheTesttestnowritepermissiontocache PKGBUILDDIRtestcompilecachetestrb In stdout expected actual tmpbootsnaptest vv gq c tmpbootsnaptest vv gq c b d a tmpbootsnaptest vv gq a tmpbootsnaptest vv gq arb Wrap up In test CompileCacheTesttestinvalidcachefile Helpcachepath always output ad a ba a for all three times but when real cache created with loadpath its locations always differ first try b a bb d second try cdfdbe ff cc third try aa ef f Also same in test CompileCacheTesttestnowritepermissiontocache first try d b b ab second try f b d d c f third try c b d a Question This is occurred only in Debian packaging environment this might not an bootsnap issue For solving this problem I have to know which part of bootsnap code affect this issue Could you give some clue for solving this failure Which thing makes the cache path randomly Could the cache path affected by any arguments or C extensions build arguments Thank you System information System Information Debian Release APT prefers unstable APT policy unstable Architecture amd x Kernel Linux amd SMP w CPU cores Kernel taint flags TAINTOOTMODULE TAINTUNSIGNEDMODULE Locale LANGenUSUTF LCCTYPEenUSUTF charmapUTF ignored LCALL set to enUSUTF LANGUAGEenUSUTF charmapUTF ignored LCALL set to enUSUTF Shell binsh linked to usrbindash Init systemd via runsystemdsystem LSM AppArmor enabled 