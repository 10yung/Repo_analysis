See previous discussion Well need to resolve the following issues around num and compatibility first Ive been using this crate recently for some robotics path planning experiments Ive done similar work using python and shapely and the fact that this crate offers a lot of the features shapely does I felt like it was a great fitthanks for making this crate One thing I havent figure out how to do is create a circle with a radius In shapely you do this by adding a boundary to a circle see here for example and then if you intersect a line with this point it intersects this boundary I dont see any way to do this in geo currently It would be nice to be able to either have a Circle geotype or similar to shapely have a point that can have a defined boundary of a given radius which can be intersected and used for Contains trait Im not sure if this is implemented or a proper way of doing this exists If not I can see if I can create a PR if anyone would offer a little guidance on getting started For anyone else with this same issue my current workaround is to create a polygon which represents the circle I do this by plotting points around the circumference radius length from the center like socode isnt tested use stdf constsPI fn createcirclecenter Coordinatef radius f Polygonf let cx cy centerxy let circum PI radius this controls how many points to create by dividing circum by units of measurement let n circum ceil let mut points Vecf f new for x in n as usize let x x as f pointspush PI n xcos radius cx PI n xsin radius cy PolygonnewLineStringfrompoints vec Right now MultiPolygonrotate rotates all its polygons individually However Id expect it to rotate them around its own centroid Otherwise Id just iterate over the inner polygons and rotate them myself Obviously this would be a breaking change so itd probably be better to add a separate function for this Ideally itd be nice to have a variant where you just pass the pivot explicitly This PR Adds nonconsuming iteration functionality iter itermut and indexing to GeometryCollection Adds TryFrom impls from Geometry enums to Geo primitives deprecating but not removing the previous functions Doctest examples of working with GeometryCollection rust pub static COORDPRECISION f e m Consider changing to stdf EPSILON instead For example if the coordinates are decimal degrees then difference in longitude at the equator is kilometers Haversine distance Thats an arbitrary distance and actually it is being used by at least one algorithm rust pub fn pointcontainspointTp PointT p PointT bool where T Float lineeuclideanlengthLinenewp p tof unwrap COORDPRECISION I noticed that Triangle and Rect are missing from enum GeometryT in geotypessrcgeometryrs I could add them This might make a good PR for me being new to Rust Relates to Relates to Given a LineString starting and ending Points is it possible to slice the line from the start and end using the points This is the beginning of an implementation for I based part of my implementation off of whats already there for ClosestPoint because its used so heavily Im pretty new to Rust and would appreciate some pointers or advice to make sure Im contributing good code which fits well with the library Id also appreciate input on the naming conventions 