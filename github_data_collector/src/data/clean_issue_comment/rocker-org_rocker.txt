Disclaimer I know this is a known issue with rootless docker I am posting this here because I think this is related to and Which host OS you are using OS Arch Linux x Kernel arch Which Docker containers you tried rockerrstudio What command you launched I tried these two UID docker run e USERIDUID e DISABLEAUTHtrue p v homekmfrickDocumentsCodehomerstudiocode rockerrstudio docker run user e DISABLEAUTHtrue p v homekmfrickDocumentsCodehomerstudiocode rockerrstudio Docker is running in rootless mode started with systemctl user start docker What you were expecting A homerstudiocode directory that I could read from and write to inside the container Which error you get Everything under homerstudiocode is owned by root so there is no write access s mkdir warning unable to mkdir varruns Permission denied Im new to Rocker so I apologize if this is a dumb question or it has been asked already I currently have a rocker project that has a developer run a shell script to open RStudio LOCALPATH IMAGENAME docker run rm it p e RENVPATHSCACHErenvcache v LOCALPATHrenvcache v LOCALPATHhomerstudioproject name p ctnr e PASSWORDp password IMAGENAME As you can see renv is used to keep track of the package versions What I would like to happen is to add a setwdhomerstudioproject command to this docker run and then to activate the renv environment Something like this LOCALPATH IMAGENAME docker run rm it p e RENVPATHSCACHErenvcache v LOCALPATHrenvcache v LOCALPATHhomerstudioproject name p ctnr e PASSWORDp password IMAGENAME R e setwdhomerstudioproject renvactivate So the project automatically sets the project to the project folder and activates renv when a user opens RStudio Server But this code above does not work Is there any way to do this Or does a user have to go into RStudio and set the window and activate renv every time he or she wants to use RStudio Server through Docker The checkbashisms script is now required by R CMD check ascran see This is available from the devscripts system package I am trying to build a docker image using the rbase docker image I am using a Dockerfile that I had been using for a while and has all of a sudden started returning an error When running docker build I receive the following error Warning unable to access index for repository internet routines cannot be loaded Warning message package tidyverse is not available for R version Below is the source of the docker file Docker FROM rbase WORKDIR app System dependencies RUN aptget update aptget install y libssldev libcurl openssldev libxml dev R dependencies RUN install r error deps TRUE tidyverse RUN install r error deps TRUE lubridate RUN install r error deps TRUE feather RUN install r error deps TRUE magrittr RUN install r error deps TRUE Rcpp RUN install r error deps TRUE datatable RUN install r error deps TRUE awss ADD preprocessR ADD buscarindiceprimerpositivocpp ADD buscarindiceultimopositivocpp ENTRYPOINT Rscript apppreprocessR This Dockerfile is very similar to another Dockerfile that still works where the only difference is the installation of openjdk jdk in the latter Adding this to previous image allows it to build That means in the Dockerfile above I change the installation the libraries to Docker RUN aptget update aptget install y libssldev libcurl openssldev libxml dev openjdk jdk I am not entirely sure why the java package is necessary for to access the cran repository and why it wasnt necessary before Its purpose the Dockerfile that I copied it from is for a spark program If I increase the version of R to or greater this error goes away but then I encounter inconsistencies in the code Any help would be greatly appreciated Thank you Hi I have an RStudio server running currently on my AWS EC machine using docker Im planning to move to Kubernetes for scaling purposes What would you suggest to be the best practice for maintaining multiuser on a multideployment Is there a way to decouple user management Like using a database instead of Linux users back up home or users to common shared location which can be used by multi containers Connect the container to Active Directory Local AD or PAM Authentication or can we hook up OAuth for authentication Please suggest the best practice to achieve RStudio deployment on Kubernetes and still maintain multiuser consistency without any issue Thanks V Currently rbase only has tags for complete releases This means as soon as you release a new image this will be out of date Ideally there would be an immutable tag for each release eg and a tag thats updated with every patch image release eg Ive been playing around with podman and Rocker images a bit see README in Although is a known issue with RStudio in containers started with podman see running the R prompt was no problem at all Building the image required a small fix prepending the registry name in the FROM instruction which is added by default for the Docker CLI For example the rver Dockerfile would start with FROM dockeriolibrarydebianstretch The rstudio file would start with FROM dockeriorockerrver What do you think about adding the registry and library explicitly to all Dockerfiles Advantages I see images can be build with podman without any change potentially also with other builders the origin of the used base image is made more explicit My dockercompose file looks like this services rstudio image rockerverse volumes GITgit DASHBOARDSGITdashboards DASHBOARDSCONFIGconfig DASHBOARDSDATAAPPdataapp DASHBOARDSDATACLEANdataclean DASHBOARDSDATARAWdataraw DASHBOARDSRESULTSresults DASHBOARDSJUNITjunit DASHBOARDSRSTUDIOhomerstudio xtmpxtmp environment COMPUTERCOMPUTERnoname PASSWORDrstudio DISABLEAUTHtrue Inside RStudio I type SysgetenvPASSWORD SysgetenvCOMPUTER If I log into the terminal as root xxxxxx xxx docker exec it infrastructurerstudio bash root fd echo PASSWORD rstudio root fd echo COMPUTER xxx So the environmental variables make it into the docker container but RStudio Server seems to strip them out Any idea on how to make the environmental variables accessible internally First of all I want to thank you for your hard work maintaining this Your project saved me for a lot of issues Unfortunately I have a problem connecting the rstudio to a postgres db I can do it through R but not from connections tab within rstudio Im thinking there may be some other packages that need to be installed or ODBC sourcesdrivers Does the container come prepared for this kind of connection I look forward to receiving your reply Thanks Dan Thank you so much for your work I have a problem choosing the correct container for using RStudio remotely on iPad as the latest containers of rstudio and verse seem to have different RStudio versions On one hand rockerrstudiodailydevel runs RStudio which solves many compatibility issues on iOS particularly a bug that made impossible to scroll on the source panel But on the downside I cant install certain packages on this container particularly jpeg On the other hand rockerversedevel has no problem installing jpeg but it uses RStudio so scrolling doesnt work correctly on iOS Is it possible to get a container of verse with a higher RStudio build such as just like rstudiodailydevel does in order to get the latest iOS compatibility fixes