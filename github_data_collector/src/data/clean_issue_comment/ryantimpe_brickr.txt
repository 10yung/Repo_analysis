Hey This is the coolest package in the world Could we have buildinstructions work with a ggplot object And maybe other useful functions only working with brickrobj Currently it crushes somewhere when trying to figure out the object type r df dataframetrt ca b c outcome c ggplotdf aestrt outcome geombrickcolaesfill trt scalefillbrick coordbrick themebrick p buildinstructionsp Error in if type mosaic argument is of length zero I could previously create Lego mosaics without apparent issues but not sure if it is related to the latest version of the package its dependencies or anything else now brickr makes strange colour selection This happens also following exactly the example code and example files provided in the documentation To minimise issues I have run the code in a separate project with packrat and all freshly installed packages Here is the resulting reprex with the resulting image Suggestions for troubleshooting r remotesinstallgithubryantimpebrickr Skipping install of brickr from a github remote the SHA ad feef has not changed since last install Use force TRUE to force installation librarybrickr Loading required package ggplot iffileexistsdemopngFALSE downloadfileurl destfile demopng mosaic pngreadPNGdemopng imagetomosaicimgsize Length of each side of mosaic in bricks Plot D mosaic mosaic buildmosaic supCreated on by the reprex package v sup details summarySession infosummary r sessionInfo R version Platform x redhatlinuxgnu bit Running under Fedora Workstation Edition Matrix products default BLASLAPACK usrlib RliblibRblasso locale LCCTYPEenIEUTF LCNUMERICC LCTIMEenDKUTF LCCOLLATEenIEUTF LCMONETARYenDKUTF LCMESSAGESenIEUTF LCPAPERenDKUTF LCNAMEC LCADDRESSC LCTELEPHONEC LCMEASUREMENTenDKUTF LCIDENTIFICATIONC attached base packages stats graphics grDevices utils datasets methods base other attached packages brickr ggplot loaded via a namespace and not attached Rcpp compiler pillar highr remotes tools zeallot digest evaluate lifecycle tibble gtable pkgconfig png rlang curl yaml xfun xml httr withr stringr dplyr knitr vctrs grid tidyselect glue R rmarkdown farver purrr tidyr magrittr ellipsis backports scales htmltools assertthat mime colorspace labeling stringi lazyeval munsell crayon details Many issues with this Identify background color in image and remove the color Allow to replace with a solid other color Same as the LEGO Mosaic Maker Currently brick dimensions are a determined by the ggplotcalculated width of a bar This results in awkwardlyheighted bars especially with sparse data Allow this to be more flexible either with a widthscale input or changes to coordbrick Rectangular plots do not render correctly I realize this may be out of your original scope but I think it would be convenient to have a wrapper function to import an image from file For the app I allowed for JPEG or PNG files to be imported In the case of PNG files I used the magick to convert the image to JPEG and then simply used jpegreadJPEG like your earlier prototypes You can see how I used this in my import module here Happy to turn this in to a function for the package if you are on board with this idea One of my bigger future ideas for shinyLEGO is to let the user download a set of instructions they can use to build the mosaic after they select their desired number of steps The UI in my current version lets the user view the individual steps I created some utility functions and updated existing functions in the backend inspired by your previous posts to facilitate step creation Would you be open to me contributing this functionality to brickr Or did you have that already in the works Im sure I would need to do a bit of refactoring to make it compatible with brickr Here are links for more info generatesteps Creates a tidy data frame with the bricks required at a specified number of steps This is very much similar to your earlier function Uses the Imgbricks data frame as input steppieces Generate a tidy data frame with pieces required at each step uses data frame produced by generatesteps as input Optionally it can simply have a specific step number and it will only return the pieces needed for that step plotinstructions Very similar to your previous version but it takes the output from generatesteps as input and either prints instructions for all steps or for a specified step number tablepieces Very similar to your earlier version but allows for summarizing a particular step if specified 