Looks like mint version does not work on macOS Catalina For example command mint run swiftformat swiftformat swiftversion config swiftformat returns an error but swiftformat swiftversion config swiftformat works fine Hi First of all thank you so much for your great work on Mint Description I want to specify one exact commit rather than branch or tag name in Mintfile And Ive found this line When I saw this line I thought Mintfile already support specifying version using commit hash like yonaskolbMint ebe but it doesnt work because because git clone b doesnt support cloning using commit hash ref Ive experimentally added commit hash support like yonaskolbMintcommit ebe on this PR Its still draft because no tests are added and I havent understood Mint completely These changes are very rough but you can review my concept Do you have any ideas about this Questions When does this code executed In my PR commit hash is specified as yonaskolbMintcommit ebe so it conflicts to these lines but I dont understand when appeares after in current specification or implementation just curious Are there any usecases that packagePartscount becomes true I dont know when s appear in one line Summary This is a fix for the problem detailed on Changes In the run command uses the single executable available or ask the user to chose one of the available executables Using the parameter arguments sent to the run command as the arguments for the executable without dropping the first argument Problem Whenever I want to run the subcommand of a given executable Im required to type the name of the command again Im fairly sure this is because the first one is just referencing the repo and running the default command I think this is by design but it feels unintuitive I actually thought SwiftFormat was broken for a while since mint run swiftformat kept failing System Information macOS Version Shell zsh Mint Version Examples Examples are using SwiftLint mint run swiftlint Using RealmSwiftLint from Mintfile SwiftLint already installed Running swiftlint Loading configuration from swiftlintyml Linting Swift files at paths Linting LinuxMainswift more files Done linting Found violations serious in files mint run swiftlint autocorrect Using RealmSwiftLint from Mintfile SwiftLint already installed Couldnt find executable autocorrect mint run swiftlint swiftlint autocorrect Using RealmSwiftLint from Mintfile SwiftLint already installed Running swiftlint Loading configuration from swiftlintyml Correcting Swift files at paths Correcting LinuxMainswift more files Done correcting files Background Mint is a great tool and it is helpful to use it in CI to install tools like SwiftLint It would be nice if Mint had docker support to avoid having to manually set up Mint in CI This has also been requested in Implementation Added a basic Dockerfile This will create a docker image with Mint installed at usrlocalbin An image can be created by running docker build t name when in the root directory of this project Question Would you be able to publish the image to Docker Hub so it can easily be used by other people It would be nice if it is possible to use an untagged revision in Mintfile for example yonaskolbXcodeGen e d b ceffc e d c c This PR adds two commands outdated returns all linked packages that are not up to date update reinstall all outdated packages fixes Hi I tried to update Mint from to Instead of update I get error mint install yonaskolbmint Cloning mint Resolving package Failed to read Packageswift file Couldnt decode package dump keyNotFoundCodingKeysstringValue producttype intValue nil SwiftDecodingErrorContextcodingPath CodingKeysstringValue products intValue nil JSONKeystringValue Index intValue debugDescription No value associated with key CodingKeysstringValue producttype intValue nil producttype underlyingError nil xcodeselect was set to Xcode Hi wonderful project While I was exploring Swift CI and gitlab I found myself in the unbearable situation to have to rebuild tooling over and over Then I though I could leverage Docker in order to speed up the process Now mint is a big part of the success and it would be a great addition to add a Dockerfile to this project in order to provide mint through the docker hub we could design the docker files simply for a single swift version or similartly to the ones in this project What do you say Obviously I would take care of this I created a PR for the issue maybe its easier to discuss it with the code present Please feel free to edit the messages to the user and the description in the README these are only placeholders I am open to suggestions of course 