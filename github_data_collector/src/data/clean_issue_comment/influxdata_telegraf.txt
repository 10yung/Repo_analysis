 Required for all PRs x Signed CLA x Associated READMEmd updated x Has appropriate unit tests Required for all PRs Signed CLA X Associated READMEmd updated X Has appropriate unit tests Add additional counters for statsd in udp mode closes Required for all PRs x Signed CLA Associated READMEmd updated Has appropriate unit tests Im using radsniff to collect freeradius statistics and forward to a collectd listener Using collectd it seems to work I use socat to sniff the unix socket and it looks good collectd also is populating RRDs When I redirect radsniff to telegraf with the below configuration telegraf logs an error telegraf T Z E inputssocketlistener Unable to parse incoming line Collectd parser error invalid length I also have the socat capture from this communication upon request Relevant telegrafconf cat etctelegraftelegrafdcollectdconf inputssocketlistener serviceaddress unixvarruntelegraftelegrafsock dataformat collectd collectdtypesdb usrlocalsharefreeradiusradsnifftypesdb collectdparsemultivalue split socketmode System info uname a Linux ccc amd SMP Debian x GNULinux cat etcdebianversion telegraf version Telegraf git HEAD c Additional info radsniff v radsniff version built on Jan at libpcap version with TPACKETV collectdclient version Feature Request Opening a feature request kicks off a discussion Proposal Add a configuration options possibly maxparserthreads to the StatsD Input plugin config to allow user configuration of the number of goroutines to spin up for parsing inputs off of the input channel to increase throughput Current behavior As per my reading every incoming messages adds to the sin channel which is of size allowedpendingmessages and only the parser function is pulling messages off of the channel The parser is run using a goroutine here but its only spinning off a single goroutine Desired behavior Spin up n goroutines to do the listening instead of But still default to the current behavior Use case Why is this important helps with prioritizing requests My team is seeing consistent message dropping from our telegraph instances using the statsD input plugin Were seeing the log message inputsstatsd Error statsd message queue full We have dropped num messages so far You may want to increase allowedpendingmessages in the config Our issue I believe is due to the fact that the parser isnt able to keep up with incoming message volume Wed like to improve its throughput If people have other suggestions for configuration tweaks we can make to improve throughput wed also love to hear those Feature Request We would like to be able to use SNMP traps version Opening a feature request kicks off a discussion Proposal Can SNMP traps version be implemented in a similar way to the existing v c and v versions Current behavior Only works for v and v c Desired behavior To work on v Use case Why is this important helps with prioritizing requests We have K devices and this split total no Of v total no Of v c total no Of v We are thinking of implementing the TICK stack and this feature is really important as allows us to monitor most of our routersswitches in a secure way as v provides usernamepassword which v does not Closes As its my first contrib to this project x signed CLA x make check make test integration test dockercompose up would not start problem with dockercredentialsecretservice I couldnt identify a suitable test to add I could update PR if you have some guidance on that Required for all PRs x Signed CLA x Associated READMEmd updated x Has appropriate unit tests This PR adds AMQP as output plugin Can be used with eg Azure ServiceBus This replaces my old PR Required for all PRs X Signed CLA X Associated READMEmd updated X Has appropriate unit tests make test and make check also pass Its working for me on a Mimic and a Nautilus cluster Add tag for replica set name 