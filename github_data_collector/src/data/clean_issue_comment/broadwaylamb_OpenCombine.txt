Tests coming soon Hi folks So I have the following swift public func mergedMoviesids movieIDs String AnyPublisher Movie APIError let movieIDs ArraymovieIDsprefix preconditionmovieIDsisEmpty let initialPublisher movieid movieIDs let remainder ArraymovieIDsdropFirst if canImportCombine return remainderreduceinitialPublisher combined id in return combined mergewith movieid id eraseToAnyPublisher else return remainderreduceinitialPublisher combined id in return combined mergewith movieid id eraseToAnyPublisher endif I am getting two errors swift value of type Any has no member eraseToAnyPublisher eraseToAnyPublisher and swift value of type AnyPublisher Movie APIError has no member merge mergewith movieid id Not sure where ocombine should reside to resolve that if that is the fix Thanks x PublishersCatch Tests for PublishersCatch PublishersTryCatch Tests for PublishersTryCatch For and my team lack of support for Carthage dependency manager is a real barrier to adoption It would be great if OpenCombine supported it This is a sketch that doesnt work yet This implementation is not complete yet Im currently maintaining a few forks of opensource libraries that make those compatible with OpenCombine GRDBOpenCombine and its dependency OpenCombineExpectations Id appreciate any input and contributions to these forks and maybe some coordinated effort to push a more sane support for polyfill libraries in future versions of Swift If the latter happens we probably even could upstream changes from these forks to their origin repositories Either way it would make sense to maintain these forks proposals and related helper projects under one umbrella OpenCombine organization with an open list of maintainers This would make the project more visible and I hope attract more attention and contributors Im not sure if existing OpenCombine organization is the one previously created for this purpose if not maybe something like OpenCombineHQ could work as a name just as well Tests are coming soon Looks like is abandoned this rebases it on top of master and cleans up allTests Closes picking up x Make it work with generic classes x Add tests for NSObject subclasses x Add tests where a class contains a field of resilient struct type x Add CI jobs for Apple platforms without Swift runtime before iOS macOS x Add CI jobs for Apple platforms that support Swift x Ideally test on a bit Apple platform Remove unneeded C code Resolve FIXMEs 