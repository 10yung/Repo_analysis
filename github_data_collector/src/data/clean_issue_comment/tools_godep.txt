My project used gin and in gin you can use built in encodingjson or jsoniter my porject use encodingjsonso in GOPATHsrcI dont have jsonitermy gin works good when i use godep save my projectshows info godep Package githubcomjsoniteratorgo not found I think there are a lot like this because gin used govendor when i entered gin s source direcotryuse govender listthere are lots of missing but i build success m githubcomcampoyembedmd m githubcomclient misspellcmdmisspell m githubcomdavecghgospewspew v v m githubcomdustingobroadcast m githubcomgingonicautotls m githubcomjessevdkgoassets m githubcomjsoniteratorgo v v m githubcommanucorporatstats m githubcomstretchrtestifyassert v v m githubcomthinkeroufavicon m golangorgxlintgolint m golangorgxnetcontext m golangorgxsyncerrgroup m googlegolangorggrpc m googlegolangorggrpcreflection When i godep save may i exclude somelike in my caseexclude jsoniter go build success then I godep save and go build failed gitxfyuncncontainergenesismodulesauthentication modulesauthenticationcreateKubeConfigGogo cannot use kubeconfigCreateWithTokenspecAPIServer clustername specClientName gitxfyuncncontainergenesisvendork sioclientgoutilcertEncodeCertPEMspecCACert specTokenAuthToken type k sioclientgotoolsclientcmdapiConfig as type gitxfyuncncontainergenesisvendork sioclientgotoolsclientcmdapiConfig in return argument modulesauthenticationcreateKubeConfigGogo cannot use clientCertConfig type gitxfyuncncontainergenesisvendork sioclientgoutilcertConfig as type k sioclientgoutilcertConfig in argument to pkiutilNewCertAndKey modulesauthenticationcreateKubeConfigGogo cannot use kubeconfigCreateWithCertsspecAPIServer clustername specClientName gitxfyuncncontainergenesisvendork sioclientgoutilcertEncodeCertPEMspecCACert gitxfyuncncontainergenesisvendork sioclientgoutilcertEncodePrivateKeyPEMclientKey gitxfyuncncontainergenesisvendork sioclientgoutilcertEncodeCertPEMclientCert type k sioclientgotoolsclientcmdapiConfig as type gitxfyuncncontainergenesisvendork sioclientgotoolsclientcmdapiConfig in return argument modulesauthenticationcreateKubeConfigGogo cannot use config type gitxfyuncncontainergenesisvendork sioclientgotoolsclientcmdapiConfig as type k sioclientgotoolsclientcmdapiConfig in argument to kubeconfigWriteToDisk Steps to reproduce behavior git clone cp r kubernetes GOPATHsrck sio cp r kubernetesvendork sio GOPATHsrck sio rm GOPATHsrck siokubernetesgit cd GOPATHsrck sio git init git add git commit m add Our project using kubernetes source code then go build will success then godep save go build build failed beacuse of godep not save kubernetes ls vendork sio api apimachinery clientgo utils we import this kubeadmutil k siokubernetescmdkubeadmapputil godep version output godep v darwinamd go go version output go version go darwinamd Hi My employer recently switched git provider from bitbucket to github There was also a different developer working on this project I noticed he used Godeps I am wondering if this package could help me change all the package importslinks to github instead of bitbucket Note I am fairly new with goLang Thank you Expected behavior Need go install to look for githubcomaccountNamerepoNamefolderName instead of bitbucketorgaccountNamerepoNamefolderName Actual behavior After go clone from github Did go install I am receiving cannot find package bitbucketorgaccountNamerepoNamefolderName in any of UsersmyNamegolangsrcgithubcomaccountNamerepoNamevendorbitbucketorgaccountNamerepoNamefolderName vendor tree usrlocalgosrcbitbucketorgaccountNamerepoNamefolderName from GOROOT UsersmyNamegolangsrcbitbucketorgaccountNamerepoNamefolderName from GOPATH Steps to reproduce behavior Private repo Please excuse the privacy godep version output I have not installed godep myself go version output go version go darwinamd Contents of Godepsjson file ImportPath bitbucketorgaccountNamerepoName GoVersion go GodepVersion v Deps Can the specified directory be excluded when godep save I have a nodemodules folder under my project directory which contains a lot of JS files godep save cant work very well Expected behavior if the dependency is in the GOPATH it should not require the internet connection our build machines are behind the proxy and downloads are usually very slow through proxy Actual behavior It seems it is downloading something not sure if it is just metadata or actual package which makes our build really slow Steps to reproduce behavior godep save delete everything from Godeps directory except Godepsjson file we do not commit third party packages these packages will in the GOPATH when we build disconnect internet godep restore godep version output godep v darwinamd go go version output go version go darwinamd Contents of Godepsjson file ImportPath projectcomABCD GoVersion go GodepVersion v Deps ImportPath golangorgxnetcontext Rev a affb dc b d ffed b de fa ImportPath golangorgxnetcontextctxhttp Rev a affb dc b d ffed b de fa ImportPath golangorgxnethttp Rev a affb dc b d ffed b de fa ImportPath golangorgxnethttp hpack Rev a affb dc b d ffed b de fa ImportPath golangorgxoauth Rev b adcc dcdf d edc ecbaff f bb ImportPath golangorgxoauth google Rev b adcc dcdf d edc ecbaff f bb ImportPath golangorgxoauth internal Rev b adcc dcdf d edc ecbaff f bb ImportPath golangorgxoauth jws Rev b adcc dcdf d edc ecbaff f bb ImportPath golangorgxoauth jwt Rev b adcc dcdf d edc ecbaff f bb ImportPath googlegolangorgcloudcomputemetadata Rev eb ba d d cfbfbc daf cc f ImportPath googlegolangorgcloudinternal Rev eb ba d d cfbfbc daf cc f ImportPath gopkgininfv Comment v Rev ee ecf df b e b d c b adaa f e ImportPath gopkginmgov Comment r g cc Rev cc a ca f ff f d f cc ImportPath gopkginmgov bson Comment r g cc Rev cc a ca f ff f d f cc ImportPath gopkginmgov internalsasl Comment r g cc Rev cc a ca f ff f d f cc ImportPath gopkginmgov internalscram Comment r g cc Rev cc a ca f ff f d f cc ImportPath gopkginyamlv Rev a b f c addabc d c bbf ImportPath k siokubernetespkgapi Comment v Rev a aed ee af b fb e fd ImportPath k siokubernetespkgapiendpoints Comment v Rev a aed ee af b fb e fd ImportPath k siokubernetespkgapierrors Comment v Rev a aed ee af b fb e fd ImportPath k siokubernetespkgapiinstall Comment v Rev a aed ee af b fb e fd ImportPath k siokubernetespkgapimeta Comment v Rev a aed ee af b fb e fd ImportPath k siokubernetespkgapimetametatypes Comment v Rev a aed ee af b fb e fd ImportPath k siokubernetespkgapipod Comment v Rev a aed ee af b fb e fd ImportPath k siokubernetespkgapiresource Comment v Rev a aed ee af b fb e fd Expected behavior godep get should add the package to vendor just like godep save would Actual behavior godep get looks at the packages but doesnt add it to vendor and to Godepsjson Steps to reproduce behavior set up Godeps with Go for a project try to use godep get to add a package to vendor the package doesnt get added to vendor I can reproduce this with a simple brand new setup and with existing setups godep version output godep v linuxamd go go version output go version go linuxamd Expected behavior godep update does not add the updated dependencies vendored dependencies Actual behavior godep update vendors dependencies vendored dependencies Step correctly does not create GOPATHsrcbarvendorfoovendorquux but step does Steps to reproduce behavior With this tree GOPATHsrc foo vendor quux quuxgo foogo bar bargo And assuming that bar imports foo cd GOPATHsrcbar godep save godep update foo godep version output godep v darwinamd go go version output go version go darwinamd Expected behavior Happiness Actual behavior Sadness Steps to reproduce behavior on Ubuntu go The program go is currently not installed To run go please ask your administrator to install the package gccgogo sudo aptget install gccgogo Then with GOPATH and PATH set correctly go install githubcomtoolsgodep godep version godep version output godep Error determining major go version from xgcc go version output go version xgcc Ubuntu ubuntu linuxamd Contents of Godepsjson file ImportPath githubcomtoolsgodep GoVersion go GodepVersion v Deps ImportPath githubcomkrfs Rev f dbd de cb e c d b ad b ImportPath githubcomkrpretty Comment goweekly gf d Rev f d e c e ae dbea c ImportPath githubcomkrtext Rev e f ad ecef de b ImportPath githubcompmezardgodifflibdifflib Rev f a fd f f d c fc ImportPath golangorgxtoolsgovcs Rev f b f af c fd ec Expected behavior I have a program which uses these packages details summary go get v summary githubcompkgerrors download githubcomxeipuuvgojsonschema download githubcomxeipuuvgojsonreference download githubcomxeipuuvgojsonpointer download githubcompkgerrors githubcomxeipuuvgojsonpointer githubcomxeipuuvgojsonreference githubcomAzurecustomscriptextensionlinuxblobutil githubcomAzurecustomscriptextensionlinuxpreprocess githubcomxeipuuvgojsonschema githubcomAzurecustomscriptextensionlinuxdownload githubcomAzurecustomscriptextensionlinux githubcomAzurecustomscriptextensionlinux runtimemain call to external function mainmain runtimemain mainmain not defined runtimemain undefined mainmain details However I use githubcomstretchrtestifyrequire in my tests Since it is a test depencency it does not show up in go get Problem Even though testifyrequire is a library they have a vendor directory IMO it is a bad mistake but it shouldnt be affecting me in this case So when I run godep save I dont expect any packages related to this test dependency or its dependencies to be even considered Actual behavior Now I run godep save v which tells me godep Go Version go godep No old Godepsjson found godep Finding dependencies for godep Found package githubcomAzurecustomscriptextensionlinux godep Deps bytes encodingjson errors fmt githubcompkgerrors githubcomxeipuuvgojsonpointer githubcomxeipuuvgojsonreference githubcomxeipuuvgojsonschema io ioioutil log math net nethttp neturl os path pathfilepath reflect regexp runtime strconv strings time unicodeutf godep Computing new Godepsjson file godep Package githubcomstretchrtestifyrequire not found Then I go get githubcomstretchrtestifyrequire then run it again godep Go Version go godep No old Godepsjson found godep Finding dependencies for godep Found package githubcomAzurecustomscriptextensionlinux godep Deps bytes encodingjson errors fmt githubcompkgerrors githubcomxeipuuvgojsonpointer githubcomxeipuuvgojsonreference githubcomxeipuuvgojsonschema io ioioutil log math net nethttp neturl os path pathfilepath reflect regexp runtime strconv strings time unicodeutf godep Computing new Godepsjson file godep Package githubcomdavecghgospewspew not found Now it is complaining about githubcomdavecghgospewspew which is a dependency of githubcomstretchrtestifyrequire and vendored under its vendor tree d GOPATHsrcgithubcomstretchrtestify Usersalpworkspacegopathcustomscriptextensionlinuxsrcgithubcomstretchrtestify Godeps codegen assert http mock require suite vendor githubcom davecgh gospew spew pmezard godifflib difflib stretchr objx codegen But this should not be godeps concern because it is not supposed to do anything for test dependencies am I right Steps to reproduce behavior Described above godep version output godep v darwinamd go go version output go version go darwinamd Contents of Godepsjson file NA Expected behavior After following the migration steps I expect to have a new vendor directory in my package Actual behavior no vendor directory exists this is the output from the godep save no dependencies found godep save v godep Go Version go godep Finding dependencies for godep Found package githubcomtonimorenosnmpcollector godep Deps godep Computing new Godepsjson file godep Computing diff between old and new deps godep Rewriting paths if necessary Steps to reproduce behavior go get to install godep go run buildgo setup here download dependencies go get githubcomSirupsenlogrus go get githubcomgomacaronbinding go get githubcomgomacaroncache go get githubcomgomacaronsession go get githubcominfluxdatainfluxdbclientv go get githubcomsoniahgosnmp go get githubcomspf viper now migration process cd snmpcollector unset GO VENDOREXPERIMENT godep restore rm rf Godeps godep save godep version output godep v linuxamd go go version output go version go linuxamd Contents of Godepsjson file developerptlarqdev srcgospacesrcgithubcomtonimorenosnmpcollector cat GodepsGodepsjson ImportPath githubcomtonimorenosnmpcollector GoVersion go GodepVersion v Deps 