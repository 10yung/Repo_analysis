The current implementation of the ErdosRenyi graph seems to have an issue related to the generation of the adjacency matrix In particular the edge probability does not follow the input probability p but it is roughly half This is due to the following lines GW sprandsymNp GW N end where sprandsymNp generates a sparse matrix with nonzero probability p but the nonzero entries are normally distributed so taking only selects half of those A quick fix albeit inefficient is GW trilrandNNp GW GW eyeN GW GW GW function appears to have many dependencies not included in the repo including normalizedata gabwin I think the behavior on L in gspgraphmultiresolutionm is wrong in the case when largesteigenvector which now leads to filling largesteigenvector with s as sign I suggest L being executed only if largesteigenvector Also as eig works up to eps precision one should IMHO have nonnegativelogicalslargesteigenvector eps instead of nonnegativelogicalslargesteigenvector as the current may lead to problems with graphs with multiple connected components which are then numerically not properly identified to be kept which may lead to NaNs in Kron reduction The current code throws GSPGRAPHSPARSIFY Epsilon out of required range if gspgraphmultiresolution comes to the point that the current graph has three nodes I think L in gspgraphmultiresolutionm should be if Gslev N as sqrt a condition in gspgraphsparsify Another useful condition would be sumfindGslev A as otherwise there is nothing to sparsify and this later leads to error in resultsgendistPeq In addition a piggybacked comment gspgraphsparsify should be documented that it is nondeterministic