 Steps to reproduce Async remote mehtod When i call begin transacction it change the resstatusCode to Current Behavior Change the resstatusCode Expected Behavior No change the resstatusCode Thanks is there a way to add a remote hook directly to a built in User model in a boot script like in the docs say when adding a remote method without having to create a model that extends the built in one and adding the hook in this new one in the user management example user is extended and the a hook is addeddidnt want to extend simply add the hook to the built in model tried doing it gave me in a boot script UserafterRemote is not a function We are seeing repeated event loop blocked results in our Loopback application Steps to reproduce Download and npm install the sandbox app Start a postgres database using dockercompose f postgresqlyml up or update the data source to point to an existing postgres insteallation Start the app using node Open loopback explorer and create the suppliers contained in suppliersjson Do a get on Suppliers and see the blocking in the logs checking client timeout connecting new client new client connected pulse queue no queued requests Event loop blocked for milliseconds at Socketconnect netjs at Connectionconnect Usersdavidknapploopbacksandboxnodemodulespglibconnectionjs at Clientconnect Usersdavidknapploopbacksandboxnodemodulespglibclientjs at Clientconnect Usersdavidknapploopbacksandboxnodemodulespglibclientjs at PoolnewClient Usersdavidknapploopbacksandboxnodemodulespgpoolindexjs at Poolconnect Usersdavidknapploopbacksandboxnodemodulespgpoolindexjs at PostgreSQLexecuteSQL Usersdavidknapploopbacksandboxnodemodulesloopbackconnectorpostgresqllibpostgresqljs at Usersdavidknapploopbacksandboxnodemodulesloopbackconnectorlibsqljs at Usersdavidknapploopbacksandboxnodemodulesloopbackdatasourcejugglerlibobserverjs at doNotify Usersdavidknapploopbacksandboxnodemodulesloopbackdatasourcejugglerlibobserverjs at PostgreSQLObserverMixinnotifyBaseObservers Usersdavidknapploopbacksandboxnodemodulesloopbackdatasourcejugglerlibobserverjs at PostgreSQLObserverMixinnotifyObserversOf Usersdavidknapploopbacksandboxnodemodulesloopbackdatasourcejugglerlibobserverjs at PostgreSQLObserverMixinnotifyObserversAround Usersdavidknapploopbacksandboxnodemodulesloopbackdatasourcejugglerlibobserverjs at PostgreSQLSQLConnectorexecute Usersdavidknapploopbacksandboxnodemodulesloopbackconnectorlibsqljs at PostgreSQLfind as all Usersdavidknapploopbacksandboxnodemodulesloopbackconnectorlibsqljs at invokeConnectorMethod Usersdavidknapploopbacksandboxnodemodulesloopbackdatasourcejugglerlibdaojs at Usersdavidknapploopbacksandboxnodemodulesloopbackdatasourcejugglerlibdaojs at doNotify Usersdavidknapploopbacksandboxnodemodulesloopbackdatasourcejugglerlibobserverjs at doNotify Usersdavidknapploopbacksandboxnodemodulesloopbackdatasourcejugglerlibobserverjs at doNotify Usersdavidknapploopbacksandboxnodemodulesloopbackdatasourcejugglerlibobserverjs at doNotify Usersdavidknapploopbacksandboxnodemodulesloopbackdatasourcejugglerlibobserverjs at FunctionObserverMixinnotifyBaseObservers Usersdavidknapploopbacksandboxnodemodulesloopbackdatasourcejugglerlibobserverjs at FunctionObserverMixinnotifyObserversOf Usersdavidknapploopbacksandboxnodemodulesloopbackdatasourcejugglerlibobserverjs at FunctionObserverMixinnotifyBaseObservers Usersdavidknapploopbacksandboxnodemodulesloopbackdatasourcejugglerlibobserverjs at FunctionObserverMixinnotifyObserversOf Usersdavidknapploopbacksandboxnodemodulesloopbackdatasourcejugglerlibobserverjs at FunctionObserverMixinnotifyBaseObservers Usersdavidknapploopbacksandboxnodemodulesloopbackdatasourcejugglerlibobserverjs at FunctionObserverMixinnotifyObserversOf Usersdavidknapploopbacksandboxnodemodulesloopbackdatasourcejugglerlibobserverjs at FunctionObserverMixinnotifyBaseObservers Usersdavidknapploopbacksandboxnodemodulesloopbackdatasourcejugglerlibobserverjs at FunctionObserverMixinnotifyObserversOf Usersdavidknapploopbacksandboxnodemodulesloopbackdatasourcejugglerlibobserverjs at Functionfind Usersdavidknapploopbacksandboxnodemodulesloopbackdatasourcejugglerlibdaojs at SharedMethodinvoke Usersdavidknapploopbacksandboxnodemodulesstrongremotinglibsharedmethodjs at HttpContextinvoke Usersdavidknapploopbacksandboxnodemodulesstrongremotinglibhttpcontextjs at phaseInvoke Usersdavidknapploopbacksandboxnodemodulesstrongremotinglibremoteobjectsjs at runHandler Usersdavidknapploopbacksandboxnodemodulesloopbackphaselibphasejs at Usersdavidknapploopbacksandboxnodemodulesloopbackphasenodemodulesasyncdistasyncjs at replenish Usersdavidknapploopbacksandboxnodemodulesloopbackphasenodemodulesasyncdistasyncjs at Usersdavidknapploopbacksandboxnodemodulesloopbackphasenodemodulesasyncdistasyncjs at eachLimit Usersdavidknapploopbacksandboxnodemodulesloopbackphasenodemodulesasyncdistasyncjs at Objectanonymous Usersdavidknapploopbacksandboxnodemodulesloopbackphasenodemodulesasyncdistasyncjs at runHandlers Usersdavidknapploopbacksandboxnodemodulesloopbackphaselibphasejs at Usersdavidknapploopbacksandboxnodemodulesloopbackphasenodemodulesasyncdistasyncjs at replenish Usersdavidknapploopbacksandboxnodemodulesloopbackphasenodemodulesasyncdistasyncjs at Usersdavidknapploopbacksandboxnodemodulesloopbackphasenodemodulesasyncdistasyncjs at eachLimit Usersdavidknapploopbacksandboxnodemodulesloopbackphasenodemodulesasyncdistasyncjs at Objectanonymous Usersdavidknapploopbacksandboxnodemodulesloopbackphasenodemodulesasyncdistasyncjs at Phaserun Usersdavidknapploopbacksandboxnodemodulesloopbackphaselibphasejs at Usersdavidknapploopbacksandboxnodemodulesloopbackphaselibphaselistjs at Usersdavidknapploopbacksandboxnodemodulesloopbackphasenodemodulesasyncdistasyncjs at replenish Usersdavidknapploopbacksandboxnodemodulesloopbackphasenodemodulesasyncdistasyncjs at iterateeCallback Usersdavidknapploopbacksandboxnodemodulesloopbackphasenodemodulesasyncdistasyncjs at Usersdavidknapploopbacksandboxnodemodulesloopbackphasenodemodulesasyncdistasyncjs at Usersdavidknapploopbacksandboxnodemodulesloopbackphasenodemodulesasyncdistasyncjs at replenish Usersdavidknapploopbacksandboxnodemodulesloopbackphasenodemodulesasyncdistasyncjs at iterateeCallback Usersdavidknapploopbacksandboxnodemodulesloopbackphasenodemodulesasyncdistasyncjs at Usersdavidknapploopbacksandboxnodemodulesloopbackphasenodemodulesasyncdistasyncjs at Usersdavidknapploopbacksandboxnodemodulesloopbackphasenodemodulesasyncdistasyncjs at replenish Usersdavidknapploopbacksandboxnodemodulesloopbackphasenodemodulesasyncdistasyncjs at iterateeCallback Usersdavidknapploopbacksandboxnodemodulesloopbackphasenodemodulesasyncdistasyncjs at Usersdavidknapploopbacksandboxnodemodulesloopbackphasenodemodulesasyncdistasyncjs at Usersdavidknapploopbacksandboxnodemodulesstrongremotinglibremoteobjectsjs at processtickCallback internalprocessnexttickjs remove idle client Use explorer to run the custom Supplierslist endpoint and see that there is not any blocking Current Behavior We see numerous event loop blocked messages in our large loopback application We were able to reproduce the issue in the minimal sandbox app attached At first we believed that the issue was with the pg library but could not reproduce the issue in a standalone nodejs app Then we added the custom list method on the supplier model and called the connector for the get and we did not get any blocking messages We believe that this indicates that the issue is elsewhere in Loopback The blocking appears to be related to getting a new connection from the pool If you click try it out multiple times you may not see the error on the second and subsequent clicks If you then wait for the connection to be closed after the default second idle timeout you will likely see if the blocked message again In this small app on my machine the blocks are ms In our complex app we see blocks reach the ms range We see these blocks running in cloud foundry with compose databases as well so we do not believe that this is os or machine related Expected Behavior Loopback should not block the event loop Link to reproduction sandbox Additional information node e consolelogprocessplatform processarch processversionsnode darwin x npm ls prod depth grep loopback loopbacksandbox Usersdavidknapploopbacksandbox loopback loopbackboot loopbackcomponentexplorer loopbackconnectorpostgresql Related Issues I have two models edParty user edParty hasMany users through model named userParties user hasMany edParties through userParties I can do this edPartyusersfind where name inq name name but when I replace name with id in filter it gives an empty array edPartyusersfind where id inq and this is working fine UserModelfind where id inq I use Mongo connector The READMEmd has an enterprise section to a dead hyperlink I would love to see this Is it private or on the roadmap Curious why no hyperlink or repo for this Thanks Your project is new to me but looked exciting Steps to reproduce I have two simple models using mongoDB for DB I have a model called wedding and another one called person on the wedding I have relations json people type hasMany model person foreignKey options nestRemoting true partner type hasOne model person foreignKey partner type hasOne model person foreignKey So my wedding document in DB looks something like this id de c f d a ad ca date T Z userId de c f d a ad ca created T Z partner Id de c f d a ad ca partner Id de c f d a ad ca Current Behavior When I do filter include partner partner on I am getting this json date T Z id de c f d a ad ca userId de c f d a ad ca created T Z partner Id de c f d a ad ca partner Id de c f d a ad ca partner id de c f d a ad ca fullName Jessica Alba spouse spouse contacts verified false created T Z updated T Z userId de c f d a ad ca weddingId de c f d a ad ca partner id de c f d a ad ca fullName Jessica Alba spouse spouse contacts verified false created T Z updated T Z userId de c f d a ad ca weddingId de c f d a ad ca Expected Behavior What I should have gotten is json date T Z id de c f d a ad ca userId de c f d a ad ca created T Z partner Id de c f d a ad ca partner Id de c f d a ad ca partner id de c f d a ad ca fullName Michael Knight spouse spouse contacts verified false created T Z updated T Z userId de c f d a ad ca weddingId de c f d a ad ca partner id de c f d a ad ca fullName Jessica Alba spouse spouse contacts verified false created T Z updated T Z userId de c f d a ad ca weddingId de c f d a ad ca Additional information loopback loopbackboot loopbackcomponentexplorer loopbackconnectormongodb loopbackslug STOP STOP STOP THE ISSUE TRACKER IS NOT FOR QUESTIONS DO NOT CREATE A NEW ISSUE TO ASK A QUESTION Please use one of the following resources for help Questions Immediate support I would like to login with the loopback api with some additional conditional parameters like username or email password status is active or inactive if active member only can be able to login into the systems and access the token only if it is active user for inactive user the user should not login can you help me out to fix this issue Im really looking forward for your help Steps to reproduce Create an embedsMany relation where the embedded model has a composite id as described by Add an array of embedded objects where one eg the first of the id properties is a duplicate but other id properties is not a duplicate Current Behavior The code errors on the first duplicate property Expected Behavior No error is generated unless all id properties are duplicate Link to reproduction sandbox Coming soon Please do not close See Note Failure to provide a sandbox application for reproduction purposes will result in the issue being closed Additional information The bug is here loopbackdatasourcejuggler lib relationdefinitionjs line Related Issues STOP STOP STOP Are you using LoopBack version Please report the bug here HELP US HELP YOU PLEASE Do a quick search to avoid duplicate issues Provide as much information as possible reproduction sandbox use case for features etc Consider using a more suitable venue for questions such as Stack Overflow Gitter etc Please fill in the entire template below Steps to reproduce Describe how to reproduce the issue I was following this tutorial Introduction to LoopBack Using It With SQlite These are the steps in short npm install loopbackconnectorsqlite save Create datasource file lb datasource Modified datasourcesjson Modified modelconfigjson npm i g loopbackmigrationtool lbmigration migrate dsdb sqliteDS Make a POST request in API Explorer insert a new Coffeshop Reload Browser Now when I start LB with npm start LB is showing an error This was not the case with the inmemory database Current Behavior Describe the observed result Unhandled error for request GET imagesthrobbergif Error Cannot GET imagesthrobbergif at raiseUrlNotFoundError projectsloopbackgettingstartednodemodulesloopbackservermiddlewareurlnotfoundjs at Layerhandle as handlerequest projectsloopbackgettingstartednodemodulesexpresslibrouterlayerjs at trimprefix projectsloopbackgettingstartednodemodulesexpresslibrouterindexjs at projectsloopbackgettingstartednodemodulesexpresslibrouterindexjs at Functionprocessparams projectsloopbackgettingstartednodemodulesexpresslibrouterindexjs at next projectsloopbackgettingstartednodemodulesexpresslibrouterindexjs at SendStreamerror projectsloopbackgettingstartednodemodulesservestaticindexjs at SendStreamemit eventsjs at SendStreamerror projectsloopbackgettingstartednodemodulessendindexjs at SendStreamonStatError projectsloopbackgettingstartednodemodulessendindexjs at onstat projectsloopbackgettingstartednodemodulessendindexjs at FSReqWraponcomplete fsjs Expected Behavior Describe what did you expect instead what is the desired outcome No error after starting LB Link to reproduction sandbox See Note Failure to provide a sandbox application for reproduction purposes will result in the issue being closed Additional information node e consolelogprocessplatform processarch processversionsnode linux x npm ls prod depth grep loopback loopbackgettingstarted homenickworkspaceTESTSFrameworksBackendFrameworksNodeJSFrameworksLoopBackLoopBack loopbackgettingstarted loopback loopbackboot loopbackcomponentexplorer loopbackconnectorsqlite Copypaste the output of these two commands node e consolelogprocessplatform processarch processversionsnode npm ls prod depth grep loopback Related Issues Did you find other bugs that looked similar See Reporting Issues for more tips on writing good issues 