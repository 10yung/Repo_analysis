Since were ignoring local files in test environment do the same in cucumber for consistency In production I call Settingsreload after saving the new config in settingsyml The settings seem updated only in the current process but not for all other Passenger processes I need to touch tmprestarttxt to be sure that the configuration is up to date on all processes Others have had this problem Any idea to solve Version Im trying to use the useenv setting but was noticing the override wasnt working On closer inspection it appears as if all of my settings are loaded prior to the Configsetup block being executed I verified this by checking it in the initializer ruby Configsetup do config configconstname Settings configuseenv true configenvprefix SETTINGS configenvseparator configenvconverter downcase configenvparsevalues true end puts ENV SETTINGSFOO baz puts Settingsfoo bar Settingsreload puts Settingsfoo baz Has anyone else experienced this I dont think its due to any special setup for my particular app but will try to spin up an example app to test Do you have any plans that Configloadfiles support Hash or add Configloadhashes ConfigOptionsaddsource has been already supported Hash but Configloadfiles has not been supported Hash Fixes I would expect toh and tohash to have the same behaviour however looks like this gem only overrides the definition of tohash and does not alias that definition with toh Settingselasticsearchtoh hostlocalhost logtrue testConfigOptions testtrue Settingselasticsearchtohash hostlocalhost logtrue testtesttrue Happy to file a patch with the alias just wanted to check this wasnt the desired behaviour Merging doesnt seem to work Can someone investigate My expectation after executing merge is the disablefarmerdeassignment value to be returning true and NOT false If you try this example in ruby it returns true but not in the case below Is this a bug or thats something expected pry defaultconfigdisablefarmerdeassignment false pry regionconfigdisablefarmerdeassignment true pry defaultconfigmergeregionconfig ConfigOptions enforcerestingfalse assigntrue assignonlyqlapprovedtrue deassigndaily deassignintradaydndfalse ensurecategorymixtrue warntrue specializationfalse hunterfarmerfalse assignerworthpropertypredictedgbcallable regularcapacitymultiplier outsidesalescapacitymultiplier immediateintradayfalse disablefarmerdeassignmentfalse Hello I found this problem with a specific combination of ENV variables like BACKENDDATABASEdevelopment BACKENDDATABASEUSERpostgres When iterating on the second env variable libconfigoptionsrb raises no implicit conversion of Symbol into Integer when trying to find leaf keyslast but leaf is a string containing development My workaround for this is to make sure the ENV variables dont get into this form of nesting BACKENDDATABASENAMEdevelopment BACKENDDATABASEUSERpostgres Its probably reasonable to require this form in the docs as I wouldnt imagine how to create a structure where one of the keys contains both data and other keys 