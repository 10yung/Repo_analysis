 Question I am seeing a realmArrayinitfrommemrealmMemRef crash in production I am unable to reproduce it my self Does anyone have an idea what could cause this Actual Results Crashed comapplemainthread Realm x e af realmArrayinitfrommemrealmMemRef Realm x ed c realmGroupattachunsigned long bool Realm x edfdd realmSharedGroupbeginreadrealmVersionID Realm x edcf realmSharedGroupdoopenstd basicstringchar std chartraitschar std allocatorchar const bool bool realmSharedGroupOptions Realm x e cb realmSharedGroupopenrealmReplication realmSharedGroupOptions string Realm x e c realmSharedGroupSharedGrouprealmReplication realmSharedGroupOptions string Realm x dffffc realmRealmopenwithconfigrealmRealmConfig const std uniqueptrrealmReplication std defaultdeleterealmReplication std uniqueptrrealmSharedGroup std defaultdeleterealmSharedGroup std uniqueptrrealmGroup std defaultdeleterealmGroup realmRealm string Realm x dff f realmRealmRealmrealmRealmConfig std sharedptrrealmimplRealmCoordinator memory Realm x d a realmRealmmakesharedrealmrealmRealmConfig std sharedptrrealmimplRealmCoordinatormakesharedenablermakesharedenablerrealmRealmConfig std sharedptrrealmimplRealmCoordinator memory Realm x d std sharedptrrealmRealmmakesharedrealmrealmRealmConfig std sharedptrrealmimplRealmCoordinatormakesharedenabler std sharedptrrealmRealmmakesharedrealmrealmRealmConfig std sharedptrrealmimplRealmCoordinatormakesharedenablermakesharedrealmRealmConfig std sharedptrrealmimplRealmCoordinator realmRealmConfig std sharedptrrealmimplRealmCoordinator memory Realm x d e realmimplRealmCoordinatordogetrealmrealmRealmConfig std sharedptrrealmRealm std uniquelockstd mutex bool memory Realm x d e realmimplRealmCoordinatorgetrealmrealmRealmConfig sharedrealmhpp Realm x e e realmRealmgetsharedrealmrealmRealmConfig sharedrealmhpp Realm x dd d RLMRealm realmWithConfigurationerror memory RealmSwift x d Realminit compilergenerated App x b f static Realmcreateretry Realmswift App x d e closure in closure in static UsergetUser Userswift libswiftObjectiveCdylib x e f d autoreleasepoolAinvoking App x b d specialized thunk for escaping calleeguaranteed guaranteed escaping calleeguaranteed guaranteed SingleEventUser out Disposable compilergenerated RxSwift x c partial apply for closure in static PrimitiveSequenceTypecreatesubscribe Singleswift RxSwift x f AnonymousObservableSinkrun Createswift RxSwift x f AnonymousObservablerunAcancel Createswift RxSwift x e ProducersubscribeA Producerswift RxSwift x ObservableTypesubscribe ObservableTypeExtensionsswift RxSwift x ce PrimitiveSequenceTypesubscribe Singleswift RxSwift x c PrimitiveSequenceTypesubscribeonSuccessonError Singleswift App x b closure in SessionControllerinitialiseUser SessionControllerswift App x daced partial apply for thunk for escaping calleeguaranteed guaranteed escaping calleeguaranteed guaranteed SingleEventUser out Disposable compilergenerated RxSwift x c partial apply for closure in static PrimitiveSequenceTypecreatesubscribe Singleswift RxSwift x f AnonymousObservableSinkrun Createswift RxSwift x f AnonymousObservablerunAcancel Createswift RxSwift x e ProducersubscribeA Producerswift RxSwift x c e RetryWhenSequenceSinksubscribeToNext RetryWhenswift RxSwift x b TailRecursiveSinkmoveNextCommand TailRecursiveSinkswift RxSwift x f protocol witness for InvocableWithValueTypeinvoke in conformance TailRecursiveSinkA B compilergenerated RxSwift x b e InvocableScheduledIteminvoke InvocableScheduledItemswift RxSwift x a AsyncLockinvoke AsyncLockswift RxSwift x f TailRecursiveSinkschedule TailRecursiveSinkswift RxSwift x e TailRecursiveSinkrun TailRecursiveSinkswift RxSwift x c RetryWhenSequenceSinkrun RetryWhenswift RxSwift x cacc RetryWhenSequencerunAcancel RetryWhenswift RxSwift x e ProducersubscribeA Producerswift RxSwift x ObservableTypesubscribe ObservableTypeExtensionsswift RxSwift x ce PrimitiveSequenceTypesubscribe Singleswift RxSwift x c PrimitiveSequenceTypesubscribeonSuccessonError Singleswift App x da fc closure in IntroControllerfetchMetaAndUser IntroControllerswift RxSwift x closure in ObservableTypedoonNextafterNextonErrorafterErroronCompletedafterCompletedonSubscribeonSubscribedonDispose Doswift RxSwift x partial apply for closure in ObservableTypedoonNextafterNextonErrorafterErroronCompletedafterCompletedonSubscribeonSubscribedonDispose compilergenerated RxSwift x DoSinkon Doswift RxSwift x b protocol witness for ObserverTypeon in conformance DoSinkA compilergenerated RxSwift x f SinkforwardOn Sinkswift RxSwift x bcd RetryWhenSequenceSinkIteron RetryWhenswift RxSwift x c protocol witness for ObserverTypeon in conformance RetryWhenSequenceSinkIterA B C D compilergenerated RxSwift x b e closure in ObserveOnSerialDispatchQueueSinkinitschedulerobservercancel ObserveOnswift RxSwift x b d partial apply for thunk for escaping calleeguaranteed guaranteed ObserveOnSerialDispatchQueueSinkA inguaranteed EventAElement out Disposable compilergenerated RxSwift x bc MainSchedulerscheduleInternalAaction MainSchedulerswift RxSwift x b f ObserveOnSerialDispatchQueueSinkonCore ObserveOnswift RxSwift x ObserverBaseon ObserverBaseswift RxSwift x protocol witness for ObserverTypeon in conformance ObserverBaseA compilergenerated RxSwift x f SinkforwardOn Sinkswift RxSwift x f SubscribeOnSinkon SubscribeOnswift RxSwift x fe protocol witness for ObserverTypeon in conformance SubscribeOnSinkA B compilergenerated RxSwift x f SinkforwardOn Sinkswift RxSwift x c ZipSinknext Zipswift RxSwift x ad ZipObserversynchronizedon Zipswift RxSwift x SynchronizedOnTypesynchronizedOn compilergenerated RxSwift x c ZipObserveron Zipswift RxSwift x b protocol witness for ObserverTypeon in conformance ZipObserverA compilergenerated RxSwift x f SinkforwardOn Sinkswift RxSwift x a b DeferredSinkon Deferredswift RxSwift x a cc protocol witness for ObserverTypeon in conformance DeferredSinkA B compilergenerated RxSwift x f SinkforwardOn Sinkswift RxSwift x f AnonymousObservableSinkon Createswift RxSwift x f protocol witness for ObserverTypeon in conformance AnonymousObservableSinkA compilergenerated RxSwift x b e partial apply compilergenerated RxSwift x e AnyObserveron AnyObserverswift RxSwift x b closure in closure in static PrimitiveSequenceTypecreatesubscribe Singleswift App x efca closure in closure in static ProfileMetagetMetagender ProfileMetaswift RxSwift x c partial apply for closure in static PrimitiveSequenceTypecreatesubscribe Singleswift RxSwift x f AnonymousObservableSinkrun Createswift RxSwift x f AnonymousObservablerunAcancel Createswift RxSwift x e ProducersubscribeA Producerswift RxSwift x b b protocol witness for ObservableTypesubscribeA in conformance ObservableA compilergenerated RxSwift x a aa DeferredSinkrun Deferredswift RxSwift x a ddc DeferredrunAcancel Deferredswift RxSwift x e ProducersubscribeA Producerswift RxSwift x deb ZipSink run Ziparityswift RxSwift x e Zip runAcancel Ziparityswift RxSwift x ea closure in ProducersubscribeA Producerswift RxSwift x eb partial apply for thunk for escaping calleeguaranteed out Disposable compilergenerated RxSwift x specialized CurrentThreadSchedulerscheduleAaction CurrentThreadSchedulerswift RxSwift x e b ProducersubscribeA Producerswift RxSwift x b b protocol witness for ObservableTypesubscribeA in conformance ObservableA compilergenerated RxSwift x fb closure in SubscribeOnSinkrun SubscribeOnswift RxSwift x e f thunk for escaping calleeguaranteed out Disposable compilergenerated RxSwift x b closure in DispatchQueueConfigurationscheduleAaction DispatchQueueConfigurationswift RxSwift x thunk for escaping calleeguaranteed compilergenerated libdispatchdylib x b dispatchcallblockandrelease libdispatchdylib x b dispatchclientcallout libdispatchdylib x b a c dispatchmainqueuecallback CFVARIANTarmv CoreFoundation x b d a CFRUNLOOPISSERVICINGTHEMAINDISPATCHQUEUE CoreFoundation x b d c CFRunLoopRun CoreFoundation x b d a CFRunLoopRunSpecific GraphicsServices x bb GSEventRunModal UIKitCore x b c UIApplicationMain App x b c c main SignUpInputTextViewControllerswift libdylddylib x b c start Realm Object Server version Xcode version iOSOSX version iOS Dependency manager version Carthage MANDATORY TO FILL OUT Questions If you have questions about HOW TO USE Realm ask on StackOverflow or in our Swift Forum or ObjC Forum Feature Request Just fill in the first two sections below Bugs To help you as fast as possible with an issue please describe your issue and the steps you have taken to reproduce it in as many details as possible Goals What do you want to achieve Integrate Realm with existing iOS project with cocoapods Expected Results What did you expect to happen with no errors Actual Results What happened instead eg the stack trace of a crash ErrnoENOENT No such file or directory rbcheckrealpathinternal UserslaxPerspiredemoappiosPodsRealmincludeRealmRLMAccessorh This path is a soft link to RealmRLMAccessorh which does not exist this issue happens to Realm while for Realm theres no such issue Steps to Reproduce What are steps we can follow to reproduce this issue add pod Realm to Podfile then run pod install Code Sample Provide a code sample or test case that highlights the issue If relevant include your model definitions For larger code samples links to external gistsrepositories are preferred Alternatively share confidentially via mail to helprealmio Full Xcode projects that we can compile ourselves are ideal Version of Realm and Tooling In the CONTRIBUTING guidelines you will find a script which will help determining some of these versions Realm framework version Realm Object Server version Xcode version iOSOSX version Dependency manager version cocoapods Installing Realm Error installing Realm usrbingit clone varfoldersmm jtp m pzp xltmr gnTd tnrjjx template singlebranch depth branch v Cloning into varfoldersmm jtp m pzp xltmr gnTd tnrjjx fatal unable to access Could not resolve host githubcom I have been facing below issue while installing Realm pod binbash c set e sh buildsh cocoapodssetup core is not a symlink Deleting Downloading dependency sync from tar Error opening archive Unrecognized archive format Questions If you have questions about HOW TO USE Realm ask on StackOverflow or in our Swift Forum or ObjC Forum Feature Request Just fill in the first two sections below Bugs To help you as fast as possible with an issue please describe your issue and the steps you have taken to reproduce it in as many details as possible Goals No particular goal our application is crashing Expected Results I expected the app to run as usual Actual Results The app is crashing It seems to happen only on macOS Here is an excerpt of the crash report Application Specific Information dyld launch loading dependent libraries Dyld Error Message Symbol not found oslogdefault Referenced from ApplicationsApplicationappContentsMacOSFrameworksRealmframeworkVersionsARealm Expected in usrliblibSystemBdylib in ApplicationsApplicationappContentsMacOSFrameworksRealmframeworkVersionsARealm It looks like Realm is calling a function that do not exist in libSystelBdylib Steps to Reproduce Launching an application using Realm should be sufficient on macOS This particular crash from which the excerpt is taken is happening on macOS F Code Sample No code to share Version of Realm and Tooling In the CONTRIBUTING guidelines you will find a script which will help determining some of these versions Realm framework version v Realm Object Server version none Xcode version iOSOSX version macOS F Dependency manager version Carthage v Comments Im still trying to understand how this is happening is it the version of Xcode used to build the dependency I dont know any pointer to a solution will be appreciated Initial implementation of MongoDB Realm Adds the concept of a Realm Application Adds existing Stitch functionality while avoiding changes to Realm local or Realm Sync Removes authentication functionality from SyncUser This pull request will be broken up into several sequential pull requests for easier reviewing Warning There are commits that Ive cherry picked from the SwiftUI branch so that I can more easily implement the sample application that uses MongoDB Realm Notable additions RLMApph The RLMApp has the fundamental set of methods for communicating with a MongoDB Realm application backend RLMAuthh RLMAuth acts as an authentication manager for a given RLMApp It contains access to the currently active user and a dictionary of all logged in users for an application RLMFunctionsh RLMFunctions allow a user to call any remote functions they have declared on the MongoDB Realm server RLMPushh RLMPush allows a user to register or deregister for push notifications and send push messages to other users RLMServicesh RLMServices give user an access to rd party services theyve enabled with their Realm application See RLMMongoDBService and RLMTwilioService for examples RealmAppswift Extends ObjC layer to Swift Fairly incomplete at the moment I have also added an application to the RealmExamples workspace called Translate Its effectively a language translator Please see AppEnvironmentswift for usage of the RLMApp TODO Rename Sync related classes not tied directly to sync as App eg RLMAppUser Remove all references to permissionsroles Add app metadata endpoint Add refresh token logic Define method stubs ExtendedJSON encoder decoder Goals I would like to be able to use both RealmSwift and FolioReader in xCode Expected Results I hopedto be able to continue using FolioReader with RealmSwift in xCode Actual Results primary key property name does not exist on object realmswiftpermissionrole Steps to Reproduce Install pods for RealmSwift below in xCode Code Sample pod RealmSwift Version of Realm and Tooling Realm framework version Realm Object Server version Xcode version iOSOSX version Dependency manager version See RPM for details See RPM for details Goals Ive added a primary key to an object that didnt have one before which is based on some of the objects property one of which has a ListString data type However I am not able to correctly access the list property hence I cant write the migration for the new primary key Expected Results Being able to parse the elements in the List property Actual Results Not being able to parse the list Code Sample My database object looks as follows Swift objcMembers public class TestObject Object dynamic privateset var id String let foobar ListString init privateset public var foobar SomeEnum set foobarremoveAll foobarappendobjectsIn newValuemap rawValue get return foobarcompactMap SomeEnumrawValue public override class func primaryKey String return id convenience initfoo SomeEnum selfinit let foobar fooreduce rawValue selfid foobar selffoobar foo In my migration block Im trying to access foobar but cant seem to get it right Swift static func migratePrimaryKey migration RealmSwiftMigration migrationenumerateObjectsofType TestObjectclassName old in let field String foobar let test old field as ListString let test old field as String let test old field as ListDynamicObject let test old field Both test and test are nil test throws some exceptions Could not cast value of type NSTaggedPointerString x fff a a to RealmSwiftDynamicObject x f fe The output of test shows the following Swift lldb po test OptionalAny some Liststring x fb f someContent There seems to be some technical restriction which prevents me from accessing the actual list properties of my migration object Version of Realm and Tooling Realm framework version Realm Object Server version Xcode version iOSOSX version Dependency manager version Carthage 