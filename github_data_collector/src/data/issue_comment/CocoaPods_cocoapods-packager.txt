I ran `bundle exec pod package <local_spec>`, and it started cloning the specs repo. I'm using cocoapods-packager 1.5.0 and cocoapods 1.8.4.
I want check the detail of error.
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/libtool: for architecture: i386 file: Pods/build-sim/libSDK_Temp_oc.a(ReplaceMe.o) has no symbols
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/libtool: for architecture: x86_64 file: Pods/build-sim/libSDK_Temp_oc.a(ReplaceMe.o) has no symbols

when using `pod package xxx.podspec --force --embedded --no-mangle --exclude-deps --configuration=Release --spec-sources=xxx`

checking the package files, can NOT FOUND dsym file or BCSymbolMap.

Is there any settings to output the dsym file or BCSymbolMap?

Another question is :
how to select the output archs for the framework?
 what i see now the framework info msg is : armv7 armv7s i386 x86_64 arm64.
我的命令为：pod package xxx.podspec --force --embedded --no-mangle --exclude-deps --configuration=Release --spec-sources=xxx

生成的目录中没有找到 dsym 文件，请问有选项可以设置输出嘛？

另外，如何设置编译的架构，默认打出来的包含 armv7 armv7s i386 x86_64 arm64，想要增减架构如何配置？

麻烦解答下，十分感激！
***ArgumentError - wrong number of arguments (given 3, expected 7..9)***


### Command
```
/usr/local/bin/pod package XXX.podspec --force --dynamic --bundle-identifier=com.xxx.xxxx --no-mangle --spec-sources=private --verbose --configuration=Release
```

### Plugins

```
cocoapods-deintegrate : 1.0.4
cocoapods-packager    : 1.5.0
cocoapods-plugins     : 1.0.0
cocoapods-search      : 1.0.0
cocoapods-stats       : 1.1.0
cocoapods-trunk       : 1.4.1
cocoapods-try         : 1.1.0
```

### Error

```
ArgumentError - wrong number of arguments (given 3, expected 7..9)
/Library/Ruby/Gems/2.6.0/gems/cocoapods-1.8.4/lib/cocoapods/target/pod_target.rb:86:in `initialize'
/Library/Ruby/Gems/2.6.0/gems/cocoapods-packager-1.5.0/lib/cocoapods-packager/pod_utils.rb:161:in `new'
/Library/Ruby/Gems/2.6.0/gems/cocoapods-packager-1.5.0/lib/cocoapods-packager/pod_utils.rb:161:in `build_dynamic_target'
/Library/Ruby/Gems/2.6.0/gems/cocoapods-packager-1.5.0/lib/cocoapods-packager/pod_utils.rb:131:in `install_dynamic_pod'
/Library/Ruby/Gems/2.6.0/gems/cocoapods-packager-1.5.0/lib/pod/command/package.rb:83:in `build_in_sandbox'
/Library/Ruby/Gems/2.6.0/gems/cocoapods-packager-1.5.0/lib/pod/command/package.rb:100:in `block in build_package'
/Library/Ruby/Gems/2.6.0/gems/cocoapods-packager-1.5.0/lib/pod/command/package.rb:99:in `each'
/Library/Ruby/Gems/2.6.0/gems/cocoapods-packager-1.5.0/lib/pod/command/package.rb:99:in `build_package'
/Library/Ruby/Gems/2.6.0/gems/cocoapods-packager-1.5.0/lib/pod/command/package.rb:66:in `run'
/Library/Ruby/Gems/2.6.0/gems/claide-1.0.3/lib/claide/command.rb:334:in `run'
/Library/Ruby/Gems/2.6.0/gems/cocoapods-1.8.4/lib/cocoapods/command.rb:52:in `run'
/Library/Ruby/Gems/2.6.0/gems/cocoapods-1.8.4/bin/pod:55:in `<top (required)>'
/usr/local/bin/pod:23:in `load'
/usr/local/bin/pod:23:in `<main>'
```



Using the following command:

`pod package ../MyLib.podspec --force --no-mangle --exclude-deps --subspecs=Core --spec-sources='https://git.repo.com/local-cocoapods.git','https://github.com/CocoaPods/Specs.git' --verbose
`

On Mojave (10.14.6) with : 
  XCode11 beta7 (Build 11M392r)
  Attempted with both CocoaPods 1.7.5 and 1.8.0 beta.2  
I get the following error:


```
sh: line 1: 46561 Illegal instruction: 4  xcodebuild GCC_PREPROCESSOR_DEFINITIONS='$(inherited) PodsDummy_Pods_MyLib=PodsDummy_PodPackage_MyLib' CONFIGURATION_BUILD_DIR=build clean build -configuration Relea
Build command failed: xcodebuild GCC_PREPROCESSOR_DEFINITIONS='$(inherited) PodsDummy_Pods_MyLib=PodsDummy_PodPackage_MyLib'   CONFIGURATION_BUILD_DIR=build clean build -configuration Release -target Pods-pa
Output:
    Build settings from command line:
        CONFIGURATION_BUILD_DIR = build
        GCC_PREPROCESSOR_DEFINITIONS = $(inherited) PodsDummy_Pods_MyLib=PodsDummy_PodPackage_MyLib

    2019-09-09 09:05:19.666 xcodebuild[46561:835863] +dataWithFirstBytes:1024 ofFile:"/var/folders/tf/yz1zzdfn20n9w4lzxpjyryx19vvw7z/T/cocoapods-12t5vzg2/Pods/ComScore/.pod" failed, errno = 2
    note: Using new build system

    ** CLEAN SUCCEEDED **

```

Packaging works fine when using XCode10.3, 10.2, etc.
I can successfully Lint using Xcode 11 beta and Xcode 10.x.
I have tried this on two different machines with the same result.

At this point I'm not sure what else I can do and am inclined to think there is something with the packager. 

thx. 


# when

```sh
curl https://raw.githubusercontent.com/leancloud/objc-sdk/11.6.6/AVOSCloud.podspec > AVOSCloud.podspec && pod package AVOSCloud.podspec --verbose
```

# then

```txt
Building mangled framework
usage: cp [-R [-H | -L | -P]] [-fi | -n] [-apvXc] source_file target_file
       cp [-R [-H | -L | -P]] [-fi | -n] [-apvXc] source_file ... target_directory
```

# but

```
├── AVOSCloud-11.6.6
│   ├── AVOSCloud.podspec
│   ├── build
│   │   ├── Pods.build
│   │   └── XCBuildData
│   ├── ios
│   │   └── AVOSCloud.framework
│   ├── osx
│   │   └── AVOSCloud.framework
│   ├── tvos
│   │   └── AVOSCloud.framework
│   └── watchos
│       └── AVOSCloud.framework
└── AVOSCloud.podspec
```

<details>
  <summary>log</summary>
╰─>$ curl https://raw.githubusercontent.com/leancloud/objc-sdk/11.6.6/AVOSCloud.podspec > AVOSCloud.podspec && pod package AVOSCloud.podspec --verbose
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100  3157  100  3157    0     0    789      0  0:00:04  0:00:04 --:--:--   789
  Preparing

Analyzing dependencies

Fetching external sources
-> Fetching podspec for `AVOSCloud` from `AVOSCloud.podspec`

Resolving dependencies of 
  CDN: trunk Relative path: CocoaPods-version.yml exists! Returning local because checking is only perfomed in repo update

Comparing resolved specification to the sandbox manifest
  A AVOSCloud

Downloading dependencies

-> Installing AVOSCloud (11.6.6)
  > Copying AVOSCloud from `/Users/Madordie/Library/Caches/CocoaPods/Pods/External/AVOSCloud/de4a00d8380c22b172850122983700da-72406` to `Pods/AVOSCloud`
  - Running pre install hooks

Generating Pods project
  - Creating Pods project
  - Installing files into Pods project
    - Adding source files
    - Adding frameworks
    - Adding libraries
    - Adding resources
    - Linking headers
  - Installing Pod Targets
    - Installing target `AVOSCloud` iOS 7.0
      - Generating dummy source at `Pods/Target Support Files/AVOSCloud/AVOSCloud-dummy.m`
  - Installing Aggregate Targets
    - Installing target `Pods-packager` iOS 7.0
      - Generating dummy source at `Pods/Target Support Files/Pods-packager/Pods-packager-dummy.m`
  - Stabilizing target UUIDs
  - Running post install hooks
  - Writing Xcode project file to `Pods/Pods.xcodeproj`
  Cleaning up sandbox directory
  - Writing Lockfile in `Podfile.lock`
  - Writing Manifest in `Pods/Manifest.lock`

Skipping User Project Integration
  - Running post install hooks
    - cocoapods-stats from `/Users/Madordie/.rvm/gems/ruby-2.4.1@global/gems/cocoapods-stats-1.0.0/lib/cocoapods_plugin.rb`
      CDN: trunk Relative path: CocoaPods-version.yml exists! Returning local because checking is only perfomed in repo update

-> Pod installation complete! There is 1 dependency from the Podfile and 1 total pod installed.
Building framework AVOSCloud (11.6.6) with configuration Release
Mangling symbols
Building mangled framework
usage: cp [-R [-H | -L | -P]] [-fi | -n] [-apvXc] source_file target_file
       cp [-R [-H | -L | -P]] [-fi | -n] [-apvXc] source_file ... target_directory
  Preparing

Analyzing dependencies

Fetching external sources
-> Fetching podspec for `AVOSCloud` from `AVOSCloud.podspec`

Resolving dependencies of 
  CDN: trunk Relative path: CocoaPods-version.yml exists! Returning local because checking is only perfomed in repo update

Comparing resolved specification to the sandbox manifest
  A AVOSCloud

Downloading dependencies

-> Installing AVOSCloud (11.6.6)
  > Copying AVOSCloud from `/Users/Madordie/Library/Caches/CocoaPods/Pods/External/AVOSCloud/de4a00d8380c22b172850122983700da-72406` to `Pods/AVOSCloud`
  - Running pre install hooks

Generating Pods project
  - Creating Pods project
  - Installing files into Pods project
    - Adding source files
    - Adding frameworks
    - Adding libraries
    - Adding resources
    - Linking headers
  - Installing Pod Targets
    - Installing target `AVOSCloud` macOS 10.9
      - Generating dummy source at `Pods/Target Support Files/AVOSCloud/AVOSCloud-dummy.m`
  - Installing Aggregate Targets
    - Installing target `Pods-packager` macOS 10.9
      - Generating dummy source at `Pods/Target Support Files/Pods-packager/Pods-packager-dummy.m`
  - Stabilizing target UUIDs
  - Running post install hooks
  - Writing Xcode project file to `Pods/Pods.xcodeproj`
  Cleaning up sandbox directory
  - Writing Lockfile in `Podfile.lock`
  - Writing Manifest in `Pods/Manifest.lock`

Skipping User Project Integration
  - Running post install hooks
    - cocoapods-stats from `/Users/Madordie/.rvm/gems/ruby-2.4.1@global/gems/cocoapods-stats-1.0.0/lib/cocoapods_plugin.rb`

-> Pod installation complete! There is 1 dependency from the Podfile and 1 total pod installed.
Building framework AVOSCloud (11.6.6) with configuration Release
Mangling symbols
Building mangled framework
usage: cp [-R [-H | -L | -P]] [-fi | -n] [-apvXc] source_file target_file
       cp [-R [-H | -L | -P]] [-fi | -n] [-apvXc] source_file ... target_directory
  Preparing

Analyzing dependencies

Fetching external sources
-> Fetching podspec for `AVOSCloud` from `AVOSCloud.podspec`

Resolving dependencies of 
  CDN: trunk Relative path: CocoaPods-version.yml exists! Returning local because checking is only perfomed in repo update

Comparing resolved specification to the sandbox manifest
  A AVOSCloud

Downloading dependencies

-> Installing AVOSCloud (11.6.6)
  > Copying AVOSCloud from `/Users/Madordie/Library/Caches/CocoaPods/Pods/External/AVOSCloud/de4a00d8380c22b172850122983700da-72406` to `Pods/AVOSCloud`
  - Running pre install hooks

Generating Pods project
  - Creating Pods project
  - Installing files into Pods project
    - Adding source files
    - Adding frameworks
    - Adding libraries
    - Adding resources
    - Linking headers
  - Installing Pod Targets
    - Installing target `AVOSCloud` tvOS 9.0
      - Generating dummy source at `Pods/Target Support Files/AVOSCloud/AVOSCloud-dummy.m`
  - Installing Aggregate Targets
    - Installing target `Pods-packager` tvOS 9.0
      - Generating dummy source at `Pods/Target Support Files/Pods-packager/Pods-packager-dummy.m`
  - Stabilizing target UUIDs
  - Running post install hooks
  - Writing Xcode project file to `Pods/Pods.xcodeproj`
  Cleaning up sandbox directory
  - Writing Lockfile in `Podfile.lock`
  - Writing Manifest in `Pods/Manifest.lock`

Skipping User Project Integration
  - Running post install hooks
    - cocoapods-stats from `/Users/Madordie/.rvm/gems/ruby-2.4.1@global/gems/cocoapods-stats-1.0.0/lib/cocoapods_plugin.rb`

-> Pod installation complete! There is 1 dependency from the Podfile and 1 total pod installed.
Building framework AVOSCloud (11.6.6) with configuration Release
Mangling symbols
Building mangled framework
usage: cp [-R [-H | -L | -P]] [-fi | -n] [-apvXc] source_file target_file
       cp [-R [-H | -L | -P]] [-fi | -n] [-apvXc] source_file ... target_directory
  Preparing

Analyzing dependencies

Fetching external sources
-> Fetching podspec for `AVOSCloud` from `AVOSCloud.podspec`

Resolving dependencies of 
  CDN: trunk Relative path: CocoaPods-version.yml exists! Returning local because checking is only perfomed in repo update

Comparing resolved specification to the sandbox manifest
  A AVOSCloud

Downloading dependencies

-> Installing AVOSCloud (11.6.6)
  > Copying AVOSCloud from `/Users/Madordie/Library/Caches/CocoaPods/Pods/External/AVOSCloud/de4a00d8380c22b172850122983700da-72406` to `Pods/AVOSCloud`
  - Running pre install hooks

Generating Pods project
  - Creating Pods project
  - Installing files into Pods project
    - Adding source files
    - Adding frameworks
    - Adding libraries
    - Adding resources
    - Linking headers
  - Installing Pod Targets
    - Installing target `AVOSCloud` watchOS 2.0
      - Generating dummy source at `Pods/Target Support Files/AVOSCloud/AVOSCloud-dummy.m`
  - Installing Aggregate Targets
    - Installing target `Pods-packager` watchOS 2.0
      - Generating dummy source at `Pods/Target Support Files/Pods-packager/Pods-packager-dummy.m`
  - Stabilizing target UUIDs
  - Running post install hooks
  - Writing Xcode project file to `Pods/Pods.xcodeproj`
  Cleaning up sandbox directory
  - Writing Lockfile in `Podfile.lock`
  - Writing Manifest in `Pods/Manifest.lock`

Skipping User Project Integration
  - Running post install hooks
    - cocoapods-stats from `/Users/Madordie/.rvm/gems/ruby-2.4.1@global/gems/cocoapods-stats-1.0.0/lib/cocoapods_plugin.rb`

-> Pod installation complete! There is 1 dependency from the Podfile and 1 total pod installed.
Building framework AVOSCloud (11.6.6) with configuration Release
Mangling symbols
Building mangled framework
usage: cp [-R [-H | -L | -P]] [-fi | -n] [-apvXc] source_file target_file
       cp [-R [-H | -L | -P]] [-fi | -n] [-apvXc] source_file ... target_directory
</details>

## Command
pod `_1.5.3_` package ./Pack_MTGLDebug.podspec --dynamic --verbose

this is the project i am trying:
https://github.com/hello-david/Pack_MTGLDebug

## Report
### What did you do?
Really just run the above command on current supported dynamic packager.

### What did you expect to happen?
A dynamic framework should have been created

### What happened instead?

```
    Undefined symbols for architecture armv7s:
      "std::PodPack_MTGLDebug_exception::what() const", referenced from:
          vtable for std::__1::bad_function_call in libMTGLDebug.a(MTGLDebugCore.o)
          vtable for std::__1::bad_function_call in libMTGLDebug.a(MTGLDebugCoreBridge.o)
          vtable for std::__1::bad_function_call in libMTGLDebug.a(MTGLDebugQueue.o)
      "typeinfo for std::PodPack_MTGLDebug_exception", referenced from:
          typeinfo for std::__1::bad_function_call in libMTGLDebug.a(MTGLDebugCore.o)
          typeinfo for std::__1::bad_function_call in libMTGLDebug.a(MTGLDebugCoreBridge.o)
          typeinfo for std::__1::bad_function_call in libMTGLDebug.a(MTGLDebugQueue.o)
      "std::PodPack_MTGLDebug_exception::~PodPack_MTGLDebug_exception()", referenced from:
          std::__1::bad_function_call::~bad_function_call() in libMTGLDebug.a(MTGLDebugCore.o)
          std::__1::bad_function_call::~bad_function_call() in libMTGLDebug.a(MTGLDebugCore.o)
          std::__1::bad_function_call::~bad_function_call() in libMTGLDebug.a(MTGLDebugCoreBridge.o)
          std::__1::bad_function_call::~bad_function_call() in libMTGLDebug.a(MTGLDebugCoreBridge.o)
          std::__1::bad_function_call::~bad_function_call() in libMTGLDebug.a(MTGLDebugQueue.o)
          std::__1::bad_function_call::~bad_function_call() in libMTGLDebug.a(MTGLDebugQueue.o)
    ld: symbol(s) not found for architecture armv7s
    clang: error: linker command failed with exit code 1 (use -v to see invocation)
```

## Solution
For now, I just skip the `<exception>` file symbol and worked. Can someone tell me how to fix it more safely?

![](https://user-images.githubusercontent.com/17873903/58298570-98d13480-7e0e-11e9-88e1-1d4578910288.png)


I'd like to be able to run `pod package <pod> --target=ios` and skip building for all of the other supported targets in a pod. I don't think this is supported today