Some dependencies are abandoned:

```
Package phine/exception is abandoned, you should avoid using it. No replacement was suggested.
Package phine/path is abandoned, you should avoid using it. No replacement was suggested.
Package herrera-io/version is abandoned, you should avoid using it. No replacement was suggested.
Package herrera-io/json is abandoned, you should avoid using it. Use kherge/json instead.
Package herrera-io/phar-update is abandoned, you should avoid using it. No replacement was suggested.
Package herrera-io/annotations is abandoned, you should avoid using it. No replacement was suggested.
```
I have written a Docker image (from official php7 alpine3 image) to use this amazing tool:

* https://github.com/ebuildy/docker-box
* https://hub.docker.com/r/ebuildy/box/

``docker run -v $PWD:/app ebuildy/box:v0.0.4 build``

Tell me what do you think about!


Complementary PR for https://github.com/box-project/box2-lib/pull/27
Unfortunately, where I work we still use svn to version control. And I had to make a copy of the project and git init then git commit to being able to build.
Current CI tests are failing. E.g. [build 305500447](https://travis-ci.org/box-project/box2/builds/305500447).
Fatal error: Class 'phpseclib\Crypt\Common\AsymmetricKey' not found in /var/www/html/kowboykit.com/htdocs/phpseclib/Crypt/RSA.php on line 63

Is throwing every time I use include('Crypt/RSA.php');
Dialog helper was deprecated from 2.5, should be replaced by Question helper. Breaks on asking for the passphrase to a private key when signing phars with openssl. Temporary workaround, when installing box as an isolated composer dev dependency, is to manually require-dev symfony/console for 2.8.
If you have something like:

```json
{
    "output": "build/foo.phar",
    "main": "bin/foo.php",
    "base-path": "src"
}
```

Then the real path of the main used is `$CWD/src/bin/foo.php` and the output _should_ be `$CWD/src/build/foo.phar` but actually is `$CWD/build/foo.phar`.
There is a tool called cgr (for composer global require) that
install every tool that needs to be globaly available in their own
custom folder. It does so that each tool dependecy don't infuences
other tools dependencies.

This means that the logic that was previously used by the autoloader
location code for box is broken. For some reason the code used to look
for the last autoloader in the folder structure ( the one closest to
the root folder ). I have no idea why it was doing so.

For [cgr](https://github.com/consolidation/cgr) to work it needs to be the first one found that needs to be
used. I have changed the logic accordingly in this PR as well as
removed some dead code (an option that was never used).

Any comment ?
PHP's `Phar` class sadly requires that the output file name's extension must be `.phar`.  Hence, the `output` directive for _box2_ will always need to be named `*.phar`.  However, I always like to rename my executable Phar archives to just the basename.  I use `composer` not `composer.phar`, and `box build` not `box.phar build`, etc.  Clearly I can rename my output many different ways (command line, Makefile, Composer script, etc.), but I'd really love to have a self-contained process where `box` can rename `myapp.phar` to `myapp` before exiting.