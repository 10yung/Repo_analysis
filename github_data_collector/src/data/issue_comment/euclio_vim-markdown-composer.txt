Give us an option to send the markdown modifications to the browser after saving the file. That will be great.

Thanks for this great plugins! :+1:
Hello

According to no-script extension, the opened page downloads and runs some javascript from cloudflare.com. This is done through plain http. As there are records of various entities modifying and injecting malicious code to http content in-flight, this is potentially dangerous. Is it possible to switch to https for these scripts?

(What does the script do anyway? It seems the preview works just fine if I forbid executing this script)
Hello,

more of a suggestion than a request, but I would find it super nice to be able to render tikz figures with this plugin. What are the pre-requisites and what would it take as a workload? If the developers were to provide a little help, I would like to work on that feature, if it is okay :)

 
The following table is not rendered properly:

| Name 	| Type 	| Required 	| Description 	|
|:-----------:	|:--------:	|:--------:	|:-----------------------------------------------------------------------------------------------------------------------------------------------------------:	|
| xxxx 	| xxxxxxxx 	| ✓ 	| xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 	|
| yyyy 	| yyyyyyyy 	| ✓ 	| yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy 	|
| zzzzzzzzzzz 	| zzzzzzzz 	|&nbsp;| zzzzzzzzzzzzzzzzzzzzzzzzzzzzz 	|

Just installed it and it works very well, but going through the docs, I noticed the usage of "refresh rate" term, which means how many times per given time period something is refreshed. The higher the refresh rate, the more times the refresh is happening.

However, in the docs, the refresh rate is used synonymous  to refresh timeout. Since this would cause an incompatible change because of the naming confusion present in the settings, I am creating this issue before submitting any PRs for this.

Here is a search for "refresh rate": https://github.com/euclio/vim-markdown-composer/search?q=refresh+rate&unscoped_q=refresh+rate

I would propose to have `refresh_period` or `refresh_every` instead of `refresh_rate`.
The markdown renderer doesn't make "table of contents" links clickable. e.g. on Github, READMEs can have fragment links that point to headers in the README, making table of contents possible (e.g. https://github.com/euclio/vim-markdown-composer#vim-plug). This doesn't work with the default markdown renderer.
Simple LaTeX equations are handled correctly
```
$$
a = b
$$
```
But aligned environment is not:
```
$$
\begin{aligned}
a & = b \\
c & = d \\
\end{aligned}
$$
```

![image](https://user-images.githubusercontent.com/15910645/47001749-7e720280-d12b-11e8-8e8b-61406abcdfbf.png)
Due to how nixos works, I have to install the rust component outside of the vim plugin. I gues I could create a symlink  but assuming the binary in PATH or allowing to set the path to it would be nice.
Currently, it seems like the path to the binary is hardcoded:
https://github.com/euclio/vim-markdown-composer/blob/61a0ba176a420ca6c0c5fd3d41b47685acb010f9/after/ftplugin/markdown/composer.vim#L15-L16

Hi,

I'm currently using a ubuntu subsystem in windows. I tried to install vim-markdown-composer and everything seems to work fine. I first installed Rust following  their instruction on the website and here's the command line output for rustup
```
$ rustup --version
rustup 1.13.0 (ea9259c1b 2018-07-16)
```
I also copied paste the vim-plug installation script into my vimrc, ran PlugInstall and everything seems to work well. (no errors or any) But I can't open any browser preview either by opening a new md file or by ```:ComposerStart```

Could you help me a bit and tell me where am I missing?

Thanks!
* OS: Fedora 28
* Vim: v8.1
* Default browser: Firefox v61.0.2

N.B. This is purely a 'newbie' mistake after first installing the plugin, but having **not** run the `cargo build` in the plugin directory.

After installing the plugin (via Vundle) this plugin generates errors on any kind of keypress with markdown files:

```
Error detected while processing function <SNR>120_sendBuffer:
line    6:
E906: Not an open channel
```

I also get when switching buffers:

```
Error detected while processing function <SNR>157_chdir:
line    7:
E906: Not an open channel
Error detected while processing function <SNR>157_sendBuffer:
line    6:
E906: Not an open channel
Press ENTER or type command to continue
```

The startup message is very helpful:

```
Could not execute markdown composer: try `cargo build --release --no-default-features --features json-rpc` in the plugin directory
```

However would it be possible to do some kind of error handling to prevent this large number of errors before the plugin is fully working?