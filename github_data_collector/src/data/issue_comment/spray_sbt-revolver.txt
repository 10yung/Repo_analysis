I would like to create a tmp directory at the beginning of **reStart** and delete at the end of **reStop**. How might look example code?
This is my first scala native project so no idea why this happens

```
sbt:scala-native-web-stack> scala-native-web-stack[ERROR] Exception in thread "main" scala.scalanative.runtime.UndefinedBehaviorError
scala-native-web-stack[ERROR] 	at scala.scalanative.runtime.package$.undefined(package.scala:34)
scala-native-web-stack[ERROR] 	at scala.scalanative.native.Tag$.<init>(Tag.scala:11)
scala-native-web-stack[ERROR] 	at scala.scalanative.native.Tag$.<clinit>(Tag.scala)
scala-native-web-stack[ERROR] 	at webserver.Main$$anonfun$runServer$1.apply(Main.scala:28)
scala-native-web-stack[ERROR] 	at webserver.Main$$anonfun$runServer$1.apply(Main.scala:27)
scala-native-web-stack[ERROR] 	at scala.scalanative.native.Zone$.apply(Zone.scala:21)
scala-native-web-stack[ERROR] 	at webserver.Main$.runServer(Main.scala:27)
scala-native-web-stack[ERROR] 	at webserver.Main$.delayedEndpoint$webserver$Main$1(Main.scala:23)
scala-native-web-stack[ERROR] 	at webserver.Main$delayedInit$body.apply(Main.scala:8)
scala-native-web-stack[ERROR] 	at scala.Function0$class.apply$mcV$sp(Function0.scala:34)
scala-native-web-stack[ERROR] 	at scala.runtime.AbstractFunction0.apply$mcV$sp(AbstractFunction0.scala:12)
scala-native-web-stack[ERROR] 	at scala.App$$anonfun$main$1.apply(App.scala:76)
scala-native-web-stack[ERROR] 	at scala.App$$anonfun$main$1.apply(App.scala:76)
scala-native-web-stack[ERROR] 	at scala.collection.immutable.List.foreach(List.scala:392)
scala-native-web-stack[ERROR] 	at scala.collection.generic.TraversableForwarder$class.foreach(TraversableForwarder.scala:35)
scala-native-web-stack[ERROR] 	at scala.App$class.main(App.scala:76)
scala-native-web-stack[ERROR] 	at webserver.Main$.main(Main.scala:8)
scala-native-web-stack[ERROR] 	at webserver.Main.main(Main.scala)
scala-native-web-stack ... finished with exit code 1
```
Is there a way to set envVars for revolver? [Here's my interpretation of the readme](https://github.com/spray/sbt-revolver#configuration) applied to a scenario where I want my dev server to run locally with dev only env vars:

```
addCommandAlias(
  "server-dev",
  "; project server" +
  "; set envVars in reStart := Map(\"aws_region\" -> \"us-east-1\")" +
  "; reStart"
)
```

but I cannot access those variables in any task that restart triggers, e.g. this fails:`println(sys.env("aws_region"))`

of course I can get this working simply by exporting manually, like: 
```
export aws_region=us-east-1 && sbt server-dev
```
There is at least at least one cryptoprovider that makes some changes to the JVM it's installed to (breaking the standard HTTPS implementation). I have to test my code with such JVM, but I don't need it doing anything else in my project.

This change allows overriding `javaHome` just for `reStart`.
Potential fields when process is started:
 * Start time
 * PID

Potential fields when process is running (for showing with `reStatus`):
 * Start time, run time
 * CPU usage
 * Mem usage 

Potential fields when process is stopped:

 * Start time, end time, (wall-clock) run time
 * CPU usage
 * Max mem usage

The difficulty might be getting the PID but if we have that we can probably go to proc for the other things. 
This patch is my original work and I license the work to the sbt-revolver project under the projectâ€™s open source license.
For esoteric reasons (but reasonable ones can probably be imagined), I have some projects with executable classes living in the sbt test configuration. `test:run` works fine and `show test:reStart::mainClass` is set as expected, but running it fails. Here is a trivial reproduction:

```
$ mkdir -p /tmp/revolver-test/{project,src/test/scala}

$ cd /tmp/revolver-test

$ echo 'sbt.version = 1.0.4' > project/build.properties

$ echo 'addSbtPlugin("io.spray" % "sbt-revolver"  % "0.9.1")' > project/plugins.sbt

$ cat <<'EOF' >> src/test/scala/Hello.scala
> object Hello extends App {
>   println("Hello, world!")
> }
> EOF

$ sbt test:reStart
[info] Loading settings from plugins.sbt ...
[info] Loading global plugins from /Users/cmartin/.sbt/1.0/plugins
[info] Loading settings from plugins.sbt ...
[info] Loading project definition from /private/tmp/revolver-test/project
[info] Set current project to revolver-test (in build file:/private/tmp/revolver-test/)
[info] Application revolver-test not yet started
[error] java.lang.RuntimeException: No main class detected!
[error] 	at scala.sys.package$.error(package.scala:27)
[error] 	at spray.revolver.Actions$.$anonfun$startApp$2(Actions.scala:38)
[error] 	at scala.Option.getOrElse(Option.scala:121)
[error] 	at spray.revolver.Actions$.startApp(Actions.scala:38)
[error] 	at spray.revolver.Actions$.restartApp(Actions.scala:30)
[error] 	at spray.revolver.RevolverPlugin$.$anonfun$settings$6(RevolverPlugin.scala:58)
[error] 	at scala.Function1.$anonfun$compose$1(Function1.scala:44)
[error] 	at sbt.internal.util.$tilde$greater.$anonfun$$u2219$1(TypeFunctions.scala:42)
[error] 	at sbt.std.Transform$$anon$4.work(System.scala:64)
[error] 	at sbt.Execute.$anonfun$submit$2(Execute.scala:257)
[error] 	at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:16)
[error] 	at sbt.Execute.work(Execute.scala:266)
[error] 	at sbt.Execute.$anonfun$submit$1(Execute.scala:257)
[error] 	at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(ConcurrentRestrictions.scala:167)
[error] 	at sbt.CompletionService$$anon$2.call(CompletionService.scala:32)
[error] 	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
[error] 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
[error] 	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
[error] 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
[error] 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
[error] 	at java.lang.Thread.run(Thread.java:745)
[error] (*:reStart) No main class detected!
[error] Total time: 0 s, completed Dec 28, 2017 1:11:50 AM
```
I tried sbt 1.0.0 and 1.0.2 and had the same issue when was using sbt-revolver. All log messages look like it's error message. Even if it's just info or warn or whatever:

```
sbt:skunkworks> ~reStart
[info] Application root not yet started
root Starting com.compstak.skunkworks.Main.main()
[info] Starting application root in the background ...
[success] Total time: 1 s, completed Oct 22, 2017 10:05:56 PM
1. Waiting for source changes... (press enter to interrupt)
root[ERROR] Oct 22, 2017 10:05:58 PM com.twitter.finagle.Init$ $anonfun$once$1
root[ERROR] INFO: Finagle version 7.0.0 (rev=fae57e6086e3131a20130999e609bb187adb4bbd) built at 20170816-173649
```
If I am receiving a continuous string of logs as my app runs with `reStart`, then when I type `reStop` into sbt, the text will keep flying above me. The command still works but it is a little confusing. Is there a keybinding I can use (like ctrl-d) to execute the reStop command?
