Check full [question](https://stackoverflow.com/questions/59784726/android-volley-returning-results-twice-for-one-request-if-used-cache)
- Create a new MutipartRequest file in com.android.volley.toolbox package for multipart request
- Update how to use MutipartRequest in Readme.md
Take request's priority into account in WaitingRequestManager to make sure higher priority requests don't wait for lowe priority requests to be completed.
Using the last release of library, I face this line in build output after successful build:

```
INFO: API 'variant.getJavaCompiler()' is obsolete and has been replaced with 'variant.getJavaCompileProvider()'.
It will be removed at the end of 2019.
For more information, see https://d.android.com/r/tools/task-configuration-avoidance.
To determine what is calling variant.getJavaCompiler(), use -Pandroid.debug.obsoleteApi=true on the command line to display more information.
Affected Modules: volley
```

The project compiles and runs correctly.
I'm using the last version of library and this line is at the start of the` build.gradle` file:

`import net.ltgt.gradle.errorprone.CheckSeverity`

However, the world import `CheckSeverity` is in red color and the error message says: "Cannot resolve symbole 'CheckSeverity'". The project compiles and run correctly.
It would be awesome if volley exposed a set of `suspend` functions for making requests that work well with Kotlin coroutines. Sure I can roll my own solution, but it would be awesome to have an officially supported one.
example : 
on xml : 
```
<com.android.volley.toolbox.NetworkImageView
		android:layout_width="100dp"
		android:layout_height="100dp"
		android:scaleType="centerCrop"/>
```

and set the image url to:
`"https://upload.wikimedia.org/wikipedia/commons/thumb/1/11/20130330_-_Vannes_Volley-Ball_-_Terville_Florange_Olympique_Club_-_054.jpg/1200px-20130330_-_Vannes_Volley-Ball_-_Terville_Florange_Olympique_Club_-_054.jpg"
`

The resulted image is not cropped to square and it keeps the aspect ratio of the original image.

I think the bug may be in this code in ImageRequest.java : 
```
// If necessary, scale down to the maximal acceptable size.
            if (tempBitmap != null
                    && (tempBitmap.getWidth() > desiredWidth
                            || tempBitmap.getHeight() > desiredHeight)) {
                bitmap = Bitmap.createScaledBitmap(tempBitmap, desiredWidth, desiredHeight, true);
                tempBitmap.recycle();
            } else {
                bitmap = tempBitmap;
            }
```
I think maybe it was supposed to use mMaxWidth/mMaxHeight instead of desiredWidth/desiredHeight.
Thanks
Instead of just arrays.
https://github.com/google/volley/blob/master/src/main/java/com/android/volley/toolbox/BasicNetwork.java#L293

Method threw 'java.lang.NullPointerException' exception. Cannot evaluate com.android.volley.toolbox.PoolingByteArrayOutputStream.toString()

i get a NPE when use MockWebServer to mock a post request 

```java
server = new MockWebServer();
    final Dispatcher dispatcher = new Dispatcher() {

      @Override public MockResponse dispatch(RecordedRequest request) {
        switch (request.getPath()) {
          case "/api/xxx/xx":
            return new MockResponse().setResponseCode(500).setBody("bad request");
          case "/api/xx":
            return new MockResponse().setResponseCode(200).setBody("version=9");
          default:
            return new MockResponse().setResponseCode(404);
        }
      }
    };

    server.setDispatcher(dispatcher);```
CacheDispatcher threads should not be limited to 1. It should be customizable as per the need of application. If an application serves most of the request from cache, number of cache dispatcher threads should be customizable.