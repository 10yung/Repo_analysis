#### Pull Request (PR) description

This PR updates the module to use the new CI process

#### This Pull Request (PR) fixes the following issues

- Fixes #435 

#### Task list

- [x] Added an entry under the Unreleased section of the change log in the CHANGELOG.md.
      Entry should say what was changed, and how that affects users (if applicable).
- [x] Resource documentation added/updated in README.md in resource folder.
- [x] Resource parameter descriptions added/updated in schema.mof
      and comment-based help.
- [x] Comment-based help added/updated.
- [x] Localization strings added/updated in all localization files as appropriate.
- [x] Examples appropriately added/updated.
- [x] Unit tests added/updated. See [DSC Resource Testing Guidelines](https://github.com/PowerShell/DscResources/blob/master/TestsGuidelines.md).
- [x] Integration tests added/updated (where possible). See [DSC Resource Testing Guidelines](https://github.com/PowerShell/DscResources/blob/master/TestsGuidelines.md).
- [x] New/changed code adheres to [DSC Resource Style Guidelines](https://github.com/PowerShell/DscResources/blob/master/StyleGuidelines.md) and [Best Practices](https://github.com/PowerShell/DscResources/blob/master/BestPractices.md).

@johlju - would you mind reviewing this one when you have time?

<!-- Reviewable:start -->
---
This change isâ€‚[<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/dsccommunity/networkingdsc/436)
<!-- Reviewable:end -->

Since being migrated to the DSC Community, this module must be updated to use the new CI process and repository structure.
#### Details of the scenario you tried and the problem that is occurring
Disabling netbios generates an error if the adapter is disabled.  Test-DSCConfiguration determines the status appropriately, but Start-DSCConfiguration errors out when the adapter is disabled. 
#### Verbose logs showing the problem
From output when running start-dscConfiguration
PowerShell DSC resource MSFT_NetBios  failed to execute Set-TargetResource functionality with error message: System.InvalidOperationException: An error result 
of '84' was returned when attemting to set NetBIOS configuration to 'Disable'. 
    + CategoryInfo          : InvalidOperation: (:) [], CimException
    + FullyQualifiedErrorId : ProviderOperationExecutionFailure
    + PSComputerName        : localhost

From Event Log:
Log Name:      Microsoft-Windows-DSC/Operational
Source:        Microsoft-Windows-DSC
Date:          12/13/2019 12:13:57 PM
Event ID:      4250
Task Category: None
Level:         Error
Keywords:      
User:          SYSTEM
Computer:      Obfuscated.contoso.com
Description:
Job {16931954-1DE5-11EA-80D1-00155D741A0B} : 
Message System.InvalidOperationException: An error result of '84' was returned when attemting to set NetBIOS configuration to 'Disable'. 
HResult -2146233087 
StackTrack    at System.Management.Automation.Runspaces.PipelineBase.Invoke(IEnumerable input)
   at System.Management.Automation.PowerShell.Worker.ConstructPipelineAndDoWork(Runspace rs, Boolean performSyncInvoke)
   at System.Management.Automation.PowerShell.Worker.CreateRunspaceIfNeededAndDoWork(Runspace rsToUse, Boolean isSync)
   at System.Management.Automation.PowerShell.CoreInvokeHelper[TInput,TOutput](PSDataCollection`1 input, PSDataCollection`1 output, PSInvocationSettings settings)
   at System.Management.Automation.PowerShell.CoreInvoke[TInput,TOutput](PSDataCollection`1 input, PSDataCollection`1 output, PSInvocationSettings settings)
   at System.Management.Automation.PowerShell.Invoke(IEnumerable input, PSInvocationSettings settings)
   at Microsoft.PowerShell.DesiredStateConfiguration.Internal.ResourceProviderAdapter.ExecuteCommand(PowerShell powerShell, ResourceModuleInfo resInfo, String operationCmd, List`1 acceptedProperties, CimInstance nonResourcePropeties, CimInstance resourceConfiguration, LCMDebugMode debugMode, PSInvocationSettings pSInvocationSettings, UInt32& resultStatusHandle, Collection`1& result, ErrorRecord& errorRecord, PSModuleInfo localRunSpaceModuleInfo)

#### The DSC configuration that is used to reproduce the issue (as detailed as possible)
```powershell
Configuration Test
{
    [CmdletBinding()]
    Import-DSCResource -ModuleName NetworkingDsc -ModuleVersion 7.4.0.0

    NetBios Test
    {
        InterfaceAlias = 'SampleAlias'
        Setting        = 'Disable'
    }
}
```

#### The operating system the target node is running
Server 2012 R2 Datacenter 64-bit
WindowsBuildLabEx: 9600.19538.amd64fre.winblue_ltsb_escrow.191014-1700
OsLanguage:             en-US
OsMuiLanguages:     {en-US}

#### Version and build of PowerShell the target node is running
Powershell 5.1

#### Version of the DSC module that was used ('dev' if using current dev branch)
ModuleVersion 7.4.0.0
#### Details of the scenario you tried and the problem that is occurring
Enable the "PolicyStore" parameter to be specified to permit targeting the local group policy store of the machine as well as the default persistent store when using both the Firewall and FirewallProfile resources

#### Verbose logs showing the problem
New Feature request

#### Suggested solution to the issue
Add "policystore" as a DSC property for both Firewall and FirewallProfile resources
Set the default value of the "policystore" parameter to be "persistentstore" to make it a non-breaking change and accommodate all existing configurations.
Add "policystore" parameter to
+ Get/Set/Test-TargetResource functions in both Resources
+ Get-FirewallRule and Get-FirewalRulleProperty helper functions in Firewall resource
+ Get/Set/New-NetFirewallRule commands in Firewall resource
+ Get/Set-NetFirewallProfile commands in FirewallProfile resource

#### The DSC configuration that is used to reproduce the issue (as detailed as possible)
New Feature request

#### The operating system the target node is running
Server 2016/2019 - New Feature request

#### Version and build of PowerShell the target node is running
New Feature request

#### Version of the DSC module that was used ('dev' if using current dev branch)
dev

I have made and tested the required changes and can happily submit a pull request with the updates to the code and localization strings.

I have also added two Pester tests to the Firewall resources for the helper function "Get-FirewallRule" when the -policystore is specified and the firewall rule is present/absent.
<!--
    Your feedback and support is greatly appreciated, thanks for contributing!

    ISSUE TITLE:
    Please prefix the issue title with the resource name, e.g.
    'ResourceName: Short description of my issue'

    ISSUE DESCRIPTION (this template):
    Please provide information regarding your issue under each header below.
    Write N/A under any headers that do not apply to your issue, or if the
    information is not available.

    NOTE! Sensitive information should be obfuscated.

    PLEASE KEEP THE HEADERS.

    You may remove this comment block, and the other comment blocks,
    but please keep the headers.
-->
#### Details of the scenario you tried and the problem that is occurring
I need to ensure that the DNS client does not try to register the interface connection while having no DNS specific suffixes.

#### Verbose logs showing the problem

When not providing the DnsConnectionSuffix parameter the error occurs when compiling the MOF:

```powershell
PSDesiredStateConfiguration\Node : At line:2 char:2
+  DnsConnectionSuffix LAN_2055578403 {
+  ~~~~~~~~~~~~~~~~~~~
Resource 'DnsConnectionSuffix' requires that a value of type 'String' be provided for property 'ConnectionSpecificSuffix'.
At C:\Program Files\WindowsPowerShell\DscService\Scripts\New-DscConfiguration.ps1:102 char:5
+     Node $AllNodes.NodeName {
+     ~~~~
    + CategoryInfo          : ParserError: (:) [PSDesiredStateConfiguration\node], ParentContainsErrorRecordException
    + FullyQualifiedErrorId : MissingValueForMandatoryProperty,PSDesiredStateConfiguration\node
```

When providing an empty DnsConnectionSuffix parameter an error occurs when the MOF is applied on computer:

```powershell
Could not find mandatory property ConnectionSpecificSuffix. Add this property and try again.
    + CategoryInfo          : ObjectNotFound: (root/Microsoft/...gurationManager:String) [], CimException
    + FullyQualifiedErrorId : MI RESULT 6
```

#### Suggested solution to the issue
The resource should not be dependent on the connection suffix but on the interface alias.
With the command line the registration can be disabled, whether the interface has or has not a connection specific suffix.
```powershell
Get-NetIPInterface | Set-DnsClient -RegisterThisConnectionsAddress $false
```

#### The DSC configuration that is used to reproduce the issue (as detailed as possible)
YAML format for Datum

```powershell
NetworkingDsc:
  DnsConnectionSuffix:
    - InterfaceAlias: LAN
      RegisterThisConnectionsAddress: False
      UseSuffixWhenRegistering: False
```

#### The operating system the target node is running
<!--
    Please provide as much as possible about the target node, for example
    edition, version, build and language.
    On OS with WMF 5.1 the following command can help get this information.

    Get-ComputerInfo -Property @(
        'OsName',
        'OsOperatingSystemSKU',
        'OSArchitecture',
        'WindowsVersion',
        'WindowsBuildLabEx',
        'OsLanguage',
        'OsMuiLanguages')
-->
```powershell
OsName               : Microsoft Windows Server 2016 Datacenter
OsOperatingSystemSKU : DatacenterServerEdition
OsArchitecture       : 64-bit
WindowsBuildLabEx    : 14393.1794.amd64fre.rs1_release.171008-1615
OsLanguage           : en-US
OsMuiLanguages       : {en-US}
```
```powershell
OsName               : Microsoft Windows Server 2019 Datacenter
OsOperatingSystemSKU : DatacenterServerEdition
OsArchitecture       : 64-bit
WindowsVersion       : 1809
WindowsBuildLabEx    : 17763.1.amd64fre.rs5_release.180914-1434
OsLanguage           : en-US
OsMuiLanguages       : {en-US}
```
#### Version and build of PowerShell the target node is running
<!--
    To help with this information, please run this command:
    $PSVersionTable
-->
```powershell
PSVersion                      5.1.14393.1884
PSEdition                      Desktop
PSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}
BuildVersion                   10.0.14393.1884
CLRVersion                     4.0.30319.42000
WSManStackVersion              3.0
PSRemotingProtocolVersion      2.3
SerializationVersion           1.1.0.1
```
```powershell
PSVersion                      5.1.17763.316
PSEdition                      Desktop
PSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}
BuildVersion                   10.0.17763.316
CLRVersion                     4.0.30319.42000
WSManStackVersion              3.0
PSRemotingProtocolVersion      2.3
SerializationVersion           1.1.0.1
```
#### Version of the DSC module that was used ('dev' if using current dev branch)
```powershell
Name : NetworkingDsc
Path : C:\Program Files\WindowsPowerShell\Modules\NetworkingDsc\7.4.0.0\NetworkingDsc.psd1
Description : Module with DSC Resources for Networking area
ModuleType : Manifest
Version : 7.4.0.0
```
<!--
    Your feedback and support is greatly appreciated, thanks for contributing!

    ISSUE TITLE:
    Please prefix the issue title with the resource name, e.g.
    'ResourceName: Short description of my issue'

    ISSUE DESCRIPTION (this template):
    Please provide information regarding your issue under each header below.
    Write N/A under any headers that do not apply to your issue, or if the
    information is not available.

    NOTE! Sensitive information should be obfuscated.

    PLEASE KEEP THE HEADERS.

    You may remove this comment block, and the other comment blocks,
    but please keep the headers.
-->
#### Details of the scenario you tried and the problem that is occurring

I am trying to configure an interface profile to LocalNetwork but the resource does not find the CIM object.

#### Verbose logs showing the problem

TimeCreated  : 23/10/2019 14:39:21
ProviderName : Microsoft-Windows-DSC
Id           : 4103
Message      : Job {033F100F-F592-11E9-AF98-005056A08475} : 
               This event indicates that a non-terminating error was thrown when DSCEngine was executing Set-TargetResource on MSFT_NetConnectionProfile DSC resource. FullyQualifiedErrorId is 
               CmdletizationQuery_NotFound,Set-NetConnectionProfile. Error Message is No matching MSFT_NetConnectionProfile objects found by CIM query for instances of the 
               root/StandardCimv2/MSFT_NetConnectionProfile class on the  CIM server: SELECT * FROM MSFT_NetConnectionProfile  WHERE ((InterfaceAlias LIKE 'LAN')) AND ((IPv4Connectivity = 3)) AND 
               ((IPv6Connectivity = 3)). Verify query parameters and retry..

#### Suggested solution to the issue

So far I understand the error message, the resource is searching for an interface named LAN which has IPv4 and IPv6 set as LocalNetwork.

However, the conectivity type (LocalNetwork) is not the value the resource should be searching for but instead it shoud set it.

Searching an interface named LAN and setting it to LocalNetwork is the goal...

#### The DSC configuration that is used to reproduce the issue (as detailed as possible)
YAML format for Datum:
```powershell
NetworkingDsc:
  NetConnectionProfile:
    - InterfaceAlias: LAN
      IPv4Connectivity: LocalNetwork
      IPv6Connectivity: LocalNetwork
      NetworkCategory: Private
```

#### The operating system the target node is running
<!--
    Please provide as much as possible about the target node, for example
    edition, version, build and language.
    On OS with WMF 5.1 the following command can help get this information.

    Get-ComputerInfo -Property @(
        'OsName',
        'OsOperatingSystemSKU',
        'OSArchitecture',
        'WindowsVersion',
        'WindowsBuildLabEx',
        'OsLanguage',
        'OsMuiLanguages')
-->
OsName               : Microsoft Windows Server 2019 Datacenter
OsOperatingSystemSKU : DatacenterServerEdition
OsArchitecture       : 64-bit
WindowsVersion       : 1809
WindowsBuildLabEx    : 17763.1.amd64fre.rs5_release.180914-1434
OsLanguage           : en-US
OsMuiLanguages       : {en-US}

#### Version and build of PowerShell the target node is running
<!--
    To help with this information, please run this command:
    $PSVersionTable
-->

PSVersion                      5.1.17763.316                                                                                                                                                             
PSEdition                      Desktop                                                                                                                                                                   
PSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}                                                                                                                                                   
BuildVersion                   10.0.17763.316                                                                                                                                                            
CLRVersion                     4.0.30319.42000                                                                                                                                                           
WSManStackVersion              3.0                                                                                                                                                                       
PSRemotingProtocolVersion      2.3                                                                                                                                                                       
SerializationVersion           1.1.0.1   

#### Version of the DSC module that was used ('dev' if using current dev branch)

Name              : NetworkingDsc
Path              : C:\Program Files\WindowsPowerShell\Modules\NetworkingDsc\7.4.0.0\NetworkingDsc.psd1
Description       : Module with DSC Resources for Networking area
ModuleType        : Manifest
Version           : 7.4.0.0
#### Pull Request (PR) description

Fixed Network Adapter renaming


#### This Pull Request (PR) fixes the following issues
- Fixes #382 

#### Task list
- [x] Added an entry under the Unreleased section of the change log in the CHANGELOG.md.
      Entry should say what was changed, and how that affects users (if applicable).
- [ ] Resource documentation added/updated in README.md in resource folder.
- [ ] Resource parameter descriptions added/updated in schema.mof
      and comment-based help.
- [ ] Comment-based help added/updated.
- [ ] Localization strings added/updated in all localization files as appropriate.
- [ ] Examples appropriately added/updated.
- [x] Unit tests added/updated. See [DSC Resource Testing Guidelines](https://github.com/PowerShell/DscResources/blob/master/TestsGuidelines.md).
- [ ] Integration tests added/updated (where possible). See [DSC Resource Testing Guidelines](https://github.com/PowerShell/DscResources/blob/master/TestsGuidelines.md).
- [ ] New/changed code adheres to [DSC Resource Style Guidelines](https://github.com/PowerShell/DscResources/blob/master/StyleGuidelines.md) and [Best Practices](https://github.com/PowerShell/DscResources/blob/master/BestPractices.md).

<!-- Reviewable:start -->
---
This change isâ€‚[<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/powershell/networkingdsc/424)
<!-- Reviewable:end -->

#### Details of the scenario you tried and the problem that is occurring
I apply the same configuration on Windows 2016 GUI, Windows 2016 Core, Windows 2019 GUI and Windows 2019 Core.

DSC modules like cChoco are working fine as soon as the proxy configuration has been set set via the **ProxySettings** resource of the **NetworkingDsc** module, except for Core servers.

#### Suggested solution to the issue

Currently the **ProxySettings** resource is applying proxy settings on this registry key: `HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Internet Settings\Connections`

It does also apply successfully these settings on the same key on Core servers, though it has no effect.

However, when I manually apply the same values on the system account, it works fine on Core servers too after a computer restart or a new DSC pull session.
Here is the key where I apply the configuration:
`registry::HKEY_USERS\S-1-5-18\Software\Microsoft\Windows\CurrentVersion\Internet Settings\Connections`

The proxy configuration should be added to this registry key too, in order to make it functioning on Core servers and not only GUI servers.

#### The operating system the target node is running
<!--
    Please provide as much as possible about the target node, for example
    edition, version, build and language.
    On OS with WMF 5.1 the following command can help get this information.

    Get-ComputerInfo -Property @(
        'OsName',
        'OsOperatingSystemSKU',
        'OSArchitecture',
        'WindowsVersion',
        'WindowsBuildLabEx',
        'OsLanguage',
        'OsMuiLanguages')
-->

OsName               : Microsoft Windows Server 2019 Datacenter
OsOperatingSystemSKU : DatacenterServerEdition
OsArchitecture       : 64-bit
WindowsVersion       : 1809
WindowsBuildLabEx    : 17763.1.amd64fre.rs5_release.180914-1434
OsLanguage           : en-US
OsMuiLanguages       : {en-US}

OsName               : Microsoft Windows Server 2016 Datacenter
OsOperatingSystemSKU : DatacenterServerEdition
OsArchitecture       : 64-bit
WindowsBuildLabEx    : 14393.1794.amd64fre.rs1_release.171008-1615
OsLanguage           : en-US
OsMuiLanguages       : {en-US}

#### Version and build of PowerShell the target node is running
<!--
    To help with this information, please run this command:
    $PSVersionTable
-->

PSVersion                      5.1.17763.316
PSEdition                      Desktop
PSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}
BuildVersion                   10.0.17763.316
CLRVersion                     4.0.30319.42000
WSManStackVersion              3.0
PSRemotingProtocolVersion      2.3
SerializationVersion           1.1.0.1

PSVersion                      5.1.14393.1884                                                                                                                                                                                          
PSEdition                      Desktop                                                                                                                                                                                                 
PSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}                                                                                                                                                                                 
BuildVersion                   10.0.14393.1884                                                                                                                                                                                         
CLRVersion                     4.0.30319.42000                                                                                                                                                                                         
WSManStackVersion              3.0                                                                                                                                                                                                     
PSRemotingProtocolVersion      2.3                                                                                                                                                                                                     
SerializationVersion           1.1.0.1

#### Version of the DSC module that was used ('dev' if using current dev branch)

7.4.0.0
#### Details of the scenario you tried and the problem that is occurring
If you try to enable a predefined rule that does not already exist than instead you end up with a wide open rule permitting all traffic inbound.

This could potentially cause security holes to someone that does not notice.

Firewall export of the rule as CSV
RemoteFwAdmin-In-TCP,,All,Yes,Allow,No,Any,Any,Any,Any,Any,Any,Any,Any,Any,Any,Any,Any,

#### Verbose logs showing the problem

#### Suggested solution to the issue
Perhaps send an error to the user indicating that the builtin rule they are trying to use does not exist and do not create a wide open rule.

#### The DSC configuration that is used to reproduce the issue (as detailed as possible)
```powershell
Configuration Firewall_EnableBuiltInFirewallRule_Config
{
    Import-DSCResource -ModuleName NetworkingDsc

    Node localhost
    {
        Firewall EnableBuiltInFirewallRule
        {
            Name                  = 'RemoteFwAdmin-In-TCP'
            Ensure                = 'Present'
            Enabled               = 'True'
        }
    }
}

# insert configuration here
```
instance of MSFT_Firewall as $MSFT_Firewall51ref
{
ResourceID = "[Firewall]RemoteFwAdmin-In-TCP";
 Enabled = "True";
 Ensure = "Present";
 Name = "RemoteFwAdmin-In-TCP";
 ModuleName = "NetworkingDSC";
 ModuleVersion = "7.3.0.1";

};

#### The operating system the target node is running
OsName               : Microsoft Windows Server 2016 Standard
OsOperatingSystemSKU : StandardServerEdition
OsArchitecture       : 64-bit
WindowsBuildLabEx    : 14393.3204.amd64fre.rs1_release.190830-1500
OsLanguage           : en-US
OsMuiLanguages       : {en-US}

#### Version and build of PowerShell the target node is running
Name                           Value
----                           -----
PSVersion                      5.1.14393.3053
PSEdition                      Desktop
PSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}
BuildVersion                   10.0.14393.3053
CLRVersion                     4.0.30319.42000
WSManStackVersion              3.0
PSRemotingProtocolVersion      2.3
SerializationVersion           1.1.0.1

#### Version of the DSC module that was used ('dev' if using current dev branch)
 ModuleName = "NetworkingDSC";
 ModuleVersion = "7.3.0.1"
## Details of the scenario you tried and the problem that is occurring
When defining multiple entries on a single line it will write them to the host file every time the LCM kicks off.

Line 233 -259 takes in account for multiple entries per line but then a compare happens later against that array and a string that was passed into the Get-HostEntry.

#### Suggested solution to the issue
Change line 368 
FROM: `if ($result.Host -eq $HostName)` 
TO: `if ([string]$result.Host -eq HostName)`

#### The DSC configuration that is used to reproduce the issue (as detailed as possible)
```powershell
HostsFile "Test1"
            {
                HostName  = 'test-ocsp-responder testVM.lab.local'
                IPAddress = '192.168.1.50'
                Ensure    = 'Present'
            }
```

#### The operating system the target node is running
```powershell
OsName               : Microsoft Windows Server 2012 R2 Standard
OsOperatingSystemSKU : StandardServerEdition
OsArchitecture       : 64-bit
WindowsBuildLabEx    : 9600.19358.amd64fre.winblue_ltsb_escrow.190505-1600
OsLanguage           : en-US
OsMuiLanguages       : {en-US}
```
#### Version and build of PowerShell the target node is running
```powershell
Name                           Value
----                           -----
PSVersion                      5.1.14409.1018
PSEdition                      Desktop
PSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}
BuildVersion                   10.0.14409.1018
CLRVersion                     4.0.30319.42000
WSManStackVersion              3.0
PSRemotingProtocolVersion      2.3
SerializationVersion           1.1.0.1
```

#### Version of the DSC module that was used ('dev' if using current dev branch)
6.1.0.0 The code for this issue looks the same. 