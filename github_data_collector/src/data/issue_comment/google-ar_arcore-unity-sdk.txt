
Hi, I'm trying to develop an App like the one from Ikea, the idea is to select some items from a menu and tap where u want to place it, I used the Example Scene from ObjectManipulation as starting point.
The first issue is that the only canvas I can use is Screen Space-Overlay, if I try using any different type it just won't work, the Screen Space (because it's attached to the camera and doesn't follow as it should) and in Screen Space - Camera becomes 1D at run, I don't know why but it just folds up himself.

So the 1st problem is that I can't stop the Frame.Raycast from PawnManipulator. I've tried using EventSystem.current.IsPointerOverGameObject with a return but it doesn't read the touch because it's reading the gestures, and if I try to control it with touchCount and .phase, then it doesn't pass through and the only thing working is the canvas. So how can I stop the Raycast at UI?

By the way, the tour of object manipulation at ARCore developer is obsolete.

Another question is that I don't find any Gesture control, is it in the ManipulationSystem.cs Update? I mean: are those calls to the specific gestures the ones in which the logic edition should be done?

Thanks a lot.


### VERSIONS USED
- Unity: 2018.4.13f1
- ARCore SDK for Unity: 1.14
- Device manufacturer, model, and O/S: mobile: Samsung Galaxy S7, Android 8.0.0 
SPECIFIC ISSUE ENCOUNTERED
I placed some object to scene by static coordinate (coordinates don`t changing). When user cover up camera by chance or camera located near some objects (wall, table etc.) - i get "frozen" scene. 
Any help would be appreciated. I am using the AugmentedImage example but in the visualizer I changed the update function:

```
void Update()
    {
        if (Image == null || Image.TrackingState != TrackingState.Tracking)
        {
            Model.SetActive(false);
            return;
        }

        if (AugmentedImageTrackingMethod.FullTracking == Image.TrackingMethod) {
            Model.SetActive(true);
        }
        return;
    }
```

If you need more details, feel free to ask.

VERSIONS USED
Unity: 2017.4.6f1
ARCore SDK for Unity: v1.6
Device manufacturer, model, and O/S: Testing on Oppo Reno 2

STEPS TO REPRODUCE THE ISSUE
Run app
Scan AugmentedImage 
Model shows up
Cover up camera
Moving device with covered camera

### SPECIFIC ISSUE ENCOUNTERED
When using `Frame.CameraMetadata.TryGetValues(CameraMetadataTag.SyncFrameNumber,  new List<CameraMetadataValue>())` it will cause a SegFault crash when building with ARM64. When building with ARMv7 it operates fine.

It seems the pointer recieved from `ExternApi.ACameraMetadata_getConstEntry` in `CameraMetadatApi.TryGetValues()` is invalid on ARM64. It works on ARMv7 implying it is a 32-bit/64-bit pointer issue.

Look at CustomArCoreBackgroundRenderer.cs for our usage example.

Here is the full crash message.
```
2020-01-15 16:30:07.122 10756-10817/com.ModestTree.NativeAr E/CRASH: signal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr 52da4ea800000000
2020-01-15 16:30:07.122 10756-10817/com.ModestTree.NativeAr E/CRASH: *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***
2020-01-15 16:30:07.122 10756-10817/com.ModestTree.NativeAr E/CRASH: Build type 'Development', Scripting Backend 'il2cpp', CPU 'arm64-v8a'
2020-01-15 16:30:07.122 10756-10817/com.ModestTree.NativeAr E/CRASH: Build fingerprint: 'OnePlus/OnePlus3/OnePlus3T:9/PKQ1.181203.001/1911042108:user/release-keys'
2020-01-15 16:30:07.122 10756-10817/com.ModestTree.NativeAr E/CRASH: Revision: '0'
2020-01-15 16:30:07.122 10756-10817/com.ModestTree.NativeAr E/CRASH: pid: 10756, tid: 10817, name: UnityMain  >>> com.ModestTree.NativeAr <<<
2020-01-15 16:30:07.122 10756-10817/com.ModestTree.NativeAr E/CRASH:     x0   0000007e6db3d130  x1   52da4ea800000000  x2   0000000000000008  x3   0000007e52da4ea0
2020-01-15 16:30:07.122 10756-10817/com.ModestTree.NativeAr E/CRASH:     x4   0000007f0de55240  x5   0000000000000008  x6   0000007e52da4ea8  x7   b57a5acc4a2ae128
2020-01-15 16:30:07.122 10756-10817/com.ModestTree.NativeAr E/CRASH:     x8   0000000000000014  x9   0000007e6b9fb200  x10  0000007e6b9fb208  x11  0000007e6db3d130
2020-01-15 16:30:07.122 10756-10817/com.ModestTree.NativeAr E/CRASH:     x12  0000000000000000  x13  0000000000000008  x14  0000000000000001  x15  0000000000000001
2020-01-15 16:30:07.123 10756-10817/com.ModestTree.NativeAr E/CRASH:     x16  0000007e6d6730f0  x17  0000007f0df254b8  x18  00000000000004e0  x19  52da4ea800000000
2020-01-15 16:30:07.124 10756-10817/com.ModestTree.NativeAr E/CRASH:     x20  0000007e6ddf0c00  x21  0000007e6db3d120  x22  000000000000000a  x23  0000007e6db42440
2020-01-15 16:30:07.124 10756-10817/com.ModestTree.NativeAr E/CRASH:     x24  0000000000000001  x25  0000000000000003  x26  0000007e6d22857c  x27  0000007e6d6eab38
2020-01-15 16:30:07.124 10756-10817/com.ModestTree.NativeAr E/CRASH:     x28  0000000000000003  x29  0000007e6fd8f0d0  x30  0000007e6c5f8fe8
2020-01-15 16:30:07.124 10756-10817/com.ModestTree.NativeAr E/CRASH:     sp   0000007e6fd8f0b0  pc   0000007f0df25704  pstate 0000000080000000
2020-01-15 16:30:07.124 10756-10817/com.ModestTree.NativeAr E/CRASH: backtrace:

```


### VERSIONS USED
- Unity: 2018.4.14f1
- ARCore SDK for Unity: 1.13
- Device manufacturer, model, and O/S:  OnePlus3T Android 9.0 

### STEPS TO REPRODUCE THE ISSUE
 1. Open SegFaultDemo Scene
 2. Build included project for ARM64 only.
 3. Run on device.
 4. Observe crash.


### WORKAROUNDS (IF ANY)
Other than not using `Frame.CameraMetadata.TryGetValues(CameraMetadataTag.SyncFrameNumber,` there is no known workaround.

### ADDITIONAL COMMENTS
Project - https://drive.google.com/open?id=1Y7vHunuSZFcyW5MQ0XwuOfIsMLe6LoCT

<!-- Use this issue tracker to file bugs and feature requests
related to the ARCore SDK for Unity.

For advice and general questions, please use the `ARCore` tag on
Stack Overflow: https://stackoverflow.com/questions/tagged/ARCore

- If using Unreal, use https://github.com/google-ar/arcore-unreal-sdk
- If using Android Studio, use https://github.com/google-ar/arcore-android-sdk
- For Sceneform issues, use https://github.com/google-ar/sceneform-android-sdk
-->


### SPECIFIC ISSUE ENCOUNTERED
Good morning I'm creating an AR app using augmented images.
I want to be able for the user to add images as targets (either by taking a picture or selecting a photo from the gallery). This is done and working fine.
My issue is that I want to provide feedback to the user of the quality of the target (value from 0 to 100) and by adding the image at run-time the quality property is set to an empty string.
But, when we add a new image to the augmented images database on the editor the quality property is set by calling (running a shell command) one of the executable files (depending on the OS) on the folder GoogleARCore/CLI/

like this:

`.\augmented_image_cli_win.exe eval-img --input_image_path ..\..\Resources\Targets\000.jpg`

My question is:
- Is there a way to get the quality value of the image on the android device?
- Or is the source code for the augmented_image_cli_win.exe file or one of the others available somewhere, so I can replicate the eval-img function? 
- If not, it is possible to provide (open-source) the source code for those executables?

### VERSIONS USED
- Unity: 2019.2.15f1
- ARCore SDK for Unity: 1.14
- Device manufacturer, model, and O/S: Samsung A50
- ARCore: 1.14.191118106
  On Windows, use: `adb shell pm dump com.google.ar.core | findstr /i "packages: versionName"`
  On macOS, use: `adb shell pm dump com.google.ar.core | egrep -i versionName\|packages:`
- Output of `adb shell getprop ro.build.fingerprint`: 
I made a very simple app based on the demo scene. The config is set to AutoFocus. It works fine on S8 but on a Pixel3 the camera is out of focus and will not auto focus.

Any ideas?


### VERSIONS USED
- Unity: 2019.3
- ARCore SDK for Unity: 1.14
- Device manufacturer, model, and O/S: Pixel 3
- ARCore: 1.14.191118106




### SPECIFIC ISSUE ENCOUNTERED

Hosting (and resolving) cloud anchors doesn't work in Unity Editor when using Instant Preview.


### VERSIONS USED
- Unity: 2019.1.14
- ARCore SDK for Unity: 1.14.0
- Device manufacturer, model, and O/S: Unity Editor on Windows OS


### STEPS TO REPRODUCE THE ISSUE
 1. Start the CloudAnchors scene from the SDK examples, running it in Unity Editor
 2. Scan a surface using Instant Preview, tap to place an anchor on the surface
 3. You now get an "Failed to host Cloud Anchor: ErrorInternal" error


### WORKAROUNDS (IF ANY)

Works when building for Android and iOS, but being able to test and debug in Editor is very important.

### ADDITIONAL COMMENTS

I tried to create a new app with Unity 2019.2.15 and ARCore 1.14 but even in older app made with Unity 2019.1.2 and ARCore 1.9.0 that used to run fine now has this weird symptom. The camera background shakes around even with the phone standing still. The augmented gameobject seems to stay still though. The only thing that changes should be the ARCore components that get autoupdated from google play.

My phone is Xiaomi mi 8.
Anyone having this issue too?

### SPECIFIC ISSUE ENCOUNTERED
After I try to create new image database I get:

```
FileNotFoundException: Could not find file "E:\UnityProjects\AR\Temp\UnityTempFile-814596dc803f9cf4c98f1dec77585e6e\out_database.imgdb"
System.IO.FileStream..ctor (System.String path, System.IO.FileMode mode, System.IO.FileAccess access, System.IO.FileShare share, System.Int32 bufferSize, System.Boolean anonymous, System.IO.FileOptions options) (at <437ba245d8404784b9fbab9b439ac908>:0)
System.IO.FileStream..ctor (System.String path, System.IO.FileMode mode, System.IO.FileAccess access, System.IO.FileShare share) (at <437ba245d8404784b9fbab9b439ac908>:0)
(wrapper remoting-invoke-with-check) System.IO.FileStream..ctor(string,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)
System.IO.File.OpenRead (System.String path) (at <437ba245d8404784b9fbab9b439ac908>:0)
System.IO.File.ReadAllBytes (System.String path) (at <437ba245d8404784b9fbab9b439ac908>:0)
GoogleARCore.AugmentedImageDatabase.BuildIfNeeded (System.String& error) (at Assets/GoogleARCore/SDK/Scripts/AugmentedImageDatabase.cs:284)
GoogleARCoreInternal.AugmentedImageDatabasePreprocessBuild.OnPreprocessBuild (UnityEditor.BuildTarget target, System.String path) (at Assets/GoogleARCore/SDK/Scripts/Editor/AugmentedImageDatabasePreprocessBuild.cs:41)
GoogleARCoreInternal.PreprocessBuildBase.OnPreprocessBuild (UnityEditor.Build.Reporting.BuildReport report) (at Assets/GoogleARCore/SDK/Scripts/Editor/PreprocessBuildBase.cs:52)
UnityEditor.Build.BuildPipelineInterfaces+<>c__DisplayClass15_0.<OnBuildPreProcess>b__1 (UnityEditor.Build.IPreprocessBuildWithReport bpp) (at <3b74787e58694cdda2c241162159b3b7>:0)
UnityEditor.Build.BuildPipelineInterfaces.InvokeCallbackInterfacesPair[T1,T2] (System.Collections.Generic.List`1[T] oneInterfaces, System.Action`1[T] invocationOne, System.Collections.Generic.List`1[T] twoInterfaces, System.Action`1[T] invocationTwo, System.Boolean exitOnFailure) (at <3b74787e58694cdda2c241162159b3b7>:0)
UnityEditor.BuildPlayerWindow:BuildPlayerAndRun()
```

There is no problem to use default image db that is in package, I I try to create ne or modify existing one I get error above and cannoc compile apk and run on device.

### VERSIONS USED
- Unity: 2019.3.0f1
- ARCore SDK for Unity: 1.14
- Device manufacturer, model, and O/S: Win 10
I use the HelloAR Example Scene and the only thing I changed is within the code of HelloARController.cs. In the Update Method. I added the following lines of code directly after _UpdateApplicationLifecycle();

if (Frame.CameraImage.Texture == null)
{
return;
}

using (var image = Frame.CameraImage.AcquireCameraImageBytes())
{
if (!image.IsAvailable)
{
Debug.Log("Not available");
return;
}
Debug.Log("Available");
}
When I use Frame.CameraImage.AcquireCameraImageBytes() I get the following Error in Instantrun:

EntryPointNotFoundException: AImage_getPlaneData
GoogleARCoreInternal.ImageApi.GetImageBuffer (System.IntPtr imageHandle, System.Int32& width, System.Int32& height, System.IntPtr& yPlane, System.IntPtr& uPlane, System.IntPtr& vPlane, System.Int32& yRowStride, System.Int32& uvPixelStride, System.Int32& uvRowStride) (at Assets/GoogleARCore/SDK/Scripts/Api/Wrappers/ImageApi.cs:55)
GoogleARCore.CameraImageBytes..ctor (System.IntPtr imageHandle) (at Assets/GoogleARCore/SDK/Scripts/CameraImageBytes.cs:43)
GoogleARCoreInternal.FrameApi.AcquireCameraImageBytes () (at Assets/GoogleARCore/SDK/Scripts/Api/Wrappers/FrameApi.cs:80)
GoogleARCore.Frame+CameraImage.AcquireCameraImageBytes () (at Assets/GoogleARCore/SDK/Scripts/Frame.cs:618)
GoogleARCore.Examples.HelloAR.HelloARController.Update () (at Assets/GoogleARCore/Examples/HelloAR/Scripts/HelloARController.cs:93)

And the following Warning:

Failed to acquire camera image with status ErrorNotYetAvailable.
UnityEngine.Debug:LogWarningFormat(String, Object[])
GoogleARCoreInternal.FrameApi:AcquireCameraImageBytes() (at Assets/GoogleARCore/SDK/Scripts/Api/Wrappers/FrameApi.cs:76)
GoogleARCore.CameraImage:AcquireCameraImageBytes() (at Assets/GoogleARCore/SDK/Scripts/Frame.cs:618)
GoogleARCore.Examples.HelloAR.HelloARController:Update() (at Assets/GoogleARCore/Examples/HelloAR/Scripts/HelloARController.cs:93)

This problem only occurs in arcore-unity-sdk-1.10.0 and newer. In earlier versions the code runs fine and prints ”Available” as expected.

Is this a known Issue? Is there a workaround? Any kind of Feedback is very appreciated.

Thank you!
Dominik