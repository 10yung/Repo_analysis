---

## Python Code
```python

Traceback (most recent call last):
  File "/Users/trevorphillips/.local/share/virtualenvs/taxbot-web-l9QEaBVw/bin/autopep8", line 8, in <module>
    sys.exit(main())
  File "/Users/trevorphillips/.local/share/virtualenvs/taxbot-web-l9QEaBVw/lib/python3.7/site-packages/autopep8.py", line 4176, in main
    args = parse_args(argv[1:], apply_config=apply_config)
  File "/Users/trevorphillips/.local/share/virtualenvs/taxbot-web-l9QEaBVw/lib/python3.7/site-packages/autopep8.py", line 3650, in parse_args
    parser = read_config(args, parser)
  File "/Users/trevorphillips/.local/share/virtualenvs/taxbot-web-l9QEaBVw/lib/python3.7/site-packages/autopep8.py", line 3761, in read_config
    value = config.getint(section, k)
  File "/usr/local/Cellar/python/3.7.6_1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/configparser.py", line 818, in getint
    fallback=fallback, **kwargs)
  File "/usr/local/Cellar/python/3.7.6_1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/configparser.py", line 808, in _get_conv
    **kwargs)
  File "/usr/local/Cellar/python/3.7.6_1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/configparser.py", line 802, in _get
    return conv(self.get(section, option, **kwargs))
ValueError: invalid literal for int() with base 10: 'auto'
```

Command Line
```shell
$ autopep8 -i -r .
```

## Your Environment
* Python version: Python 3.7.6
* autopep8 version: autopep8 1.4.4 (pycodestyle: 2.5.0)
* Platform: macOSX


If it is possible, compare Autopep8 with:
- https://github.com/psf/black and https://github.com/google/yapf
- https://github.com/PyCQA/pylint with https://github.com/PyCQA/pyflakes

(regarding features, ease of use, plugins etc.)
As a table that looks like https://github.com/wemake-services/wemake-python-styleguide#what-we-are-about

When using the autopep8 command with a `--global-config` the global config is not respected when doing an `--in-place` directly on a file. This is especially problematic with editors such as VS Code as there is no way to respect the .flake8 file contained in the root of the repo. See https://github.com/microsoft/vscode-python/issues/7040

## Command Line and Configuration
`.flake8`

```ini
[flake8]

exclude=
  pathto/file.py
```

Command Line
```shell
$ autopep8 --global-config /home/username/project/.flake8 -r -i pathto/ # Respects the ignore
$ autopep8 --global-config /home/username/project/.flake8 -i pathto/file.py # Does NOT respect the ignore
```

## Your Environment
* Python version: 3.6.9
* autopep8 version: 1.4.4 (pycodestyle: 2.5.0)
* Platform: Linux



The docs for E501 specify "Try to make lines fit within --max-line-length characters."

Therefore, if I wanted to use autopep8 to only reformat line length, I would presumably run:

    autopep8 --max-line-length <length> --in-place --recursive --select=E501 somefile.py

However, I'm finding this command has no effect. On a file with code in excess of 100 columns, running:

    autopep8 --max-line-length 80 --in-place --recursive --select=E501 somefile.py

does not modify the file in any way, when I would expect it to reformat code into continuations and wrap docstrings and comments.

I'm running `autopep8 1.4.4` with `Python 3.7.3`.
The documentation says:

> By default, if $HOME/.config/pycodestyle (~\.pycodestyle in Windows environment) exists, it will be used as global configuration file. Alternatively, you can specify the global configuration file with the --global-config option.
> 
> Also, if setup.cfg, tox.ini, .pep8 and .flake8 files exist in the directory where the target file exists, it will be used as the configuration file.
> 
> pep8, pycodestyle, and flake8 can be used as a section.

Other linters (or formatters) look upwards in the directory hiearachy for a config file in case one does not exist in the current directory. This is how it works for flake8, ESLint, TSLint and many other major linters. I expected autopep8 to work the same which made me open a (faulty) issue https://github.com/microsoft/vscode-python/issues/6505  on the VS Code Python extension, as I thought this was a problem with the extension when it in fact seems to be a missing feature of autopep8.

It would be great if autopep8 could look upwards (maybe 10 levels) in the directory structure for a config file and select the closest one.
---

## Python Code
```python
for a in [1, 2, 3]:
   print('hello world')
    for b in [1, 2, 3]:
        print(a, b)
```
turns into
```python
for a in [1, 2, 3]:
    print('hello world')
    for b in [1, 2, 3]:
            print(a, b)
```
Line 2's first indentation is intended, but line 4's has one extra indentation.

## Command Line and Configuration
`.pep8`, `setup.cfg`, ...

```ini
[pep8]

```

Command Line
```shell
$ autopep8 
```

## Your Environment
* Python version: Python 2.7.12
* autopep8 version: autopep8 1.4.4 (pycodestyle: 2.5.0)
* Platform: windows, linux, macOSX, and other OS...
Ubuntu 16.04

---

## Python Code
```python
import json

whatever_json = {
    "name": "JSON Error",
    "long string": "This sentence is so long that it breaks the autopep autoformatter, or am I doing something wrong? It would be great to know. Thanks.",
    "Awesome": "Tool btw"
}


def doing_json_things():
    """Doing JSON things.
    """
    print(whatever_json)

```

## Command Line and Configuration

Command Line
```shell
$ autopep8 --in-place --aggressive --aggressive test.py
```

## Your Environment
* Python version: 2.7.15
* autopep8 version: 1.4.4
* Platform: macOSX

I'd like to be able to automatically fix some of the simple warnings from ``flake8`` with `` flake8-docstrings`` including:

```
D202 No blank lines allowed after function docstring
D204 1 blank line required after class docstring
```

The code changes in the user's files are trivial - adding/removing blank lines, and I assume fairly easy to add to autopep8 - but would it be within the project scope as this is a PEP257 issue, not PEP8?
---

## Python Code
```python
if True:
    if True:
        self.agent_sessions = agent_utils.run_agent(basepath, self.hostlist_servers)
```

## Command Line and Configuration
Command Line
```shell
$ autopep8 /tmp/foo.py
if True:
    if True:
        self.agent_sessions = agent_utils.run_agent(
            basepath, self.hostlist_servers)
```

## Your Environment
* Python version: 2.7.15
* autopep8 version: autopep8 1.4.4 (pycodestyle: 2.5.0)
* Platform: linux

I'd rather see the above lined up as:

```python
if True:
    if True:
        self.agent_sessions = agent_utils.run_agent(basepath,
                                                    self.hostlist_servers)
```

Is that possible?
I have used the command from the readme (autopep8 --aggressive -aggressive) and as a result my code stoped running:
SyntaxError: from __future__ imports must occur at the beginning of the file

The reason is that the from __future__ imports were moved to seemingly random location among other imports.