Hi guys!
I got an issue with rJava. I successfully installed it. And in terminal it's like "java version "11.0.6" 2020-01-14 LTS
Java(TM) SE Runtime Environment 18.9 (build 11.0.6+8-LTS)
Java HotSpot(TM) 64-Bit Server VM 18.9 (build 11.0.6+8-LTS, mixed mode)"

In IntelliJ, it's like "/Library/Java/JavaVirtualMachines/jdk-9.0.4.jdk/Contents/Home/bin/java "-javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=50720:/Applications/IntelliJ IDEA.app/Contents/bin" -Dfile.encoding=UTF-8 -classpath /Users/yhe12/IdeaProjects/GuessingGame/out/production/GuessingGame com.company.Main Process finished with exit code 0
"
But when I use it R, it always shows package failed...

"library(rJava)
Error: package or namespace load failed for ‘rJava’:
 .onLoad failed in loadNamespace() for 'rJava', details:
  call: dyn.load(file, DLLpath = DLLpath, ...)
  error: unable to load shared object '/Library/Frameworks/R.framework/Versions/3.6/Resources/library/rJava/libs/rJava.so':
  dlopen(/Library/Frameworks/R.framework/Versions/3.6/Resources/library/rJava/libs/rJava.so, 6): Library not loaded: /Library/Java/JavaVirtualMachines/jdk-11.0.1.jdk/Contents/Home/lib/server/libjvm.dylib
  Referenced from: /Library/Frameworks/R.framework/Versions/3.6/Resources/library/rJava/libs/rJava.so
  Reason: image not found"

Thank you for your help!!!
There have been a few reports of the following error with 1.3:

```
Error in yaml.load(string, error.label = error.label, ...) : 
  Scanner error: while scanning a simple key at line 2, column 1 could not find expected ':' at line 8, column 1
```

It is fairly clear that this is a regression caused by https://github.com/rstudio/rstudio/pull/5973. The problem is mostly that we look for a YAML header in all kinds of files to see if it has any interesting dependencies. This is normally harmless, but if an R script contains something that _looks_ like a pair of YAML demarcators, an attempt will be made to parse everything inside them as YAML, with predictable results.

The fix is to only do this kind of scan in R Markdown files, and to swallow any errors we do find (as they are both harmless and not actionable). 
This change fixes an annoying issue with focus while debugging, which is that the cursor jumps into the Source pane a lot more than most people expect. 

The reason this occurs is somewhat involved (see #6039 for details). The short version is that we open tabs to view source code while stepping through instructions, then automatically close those tabs when we are done stepping. The problem is that closing a tab always causes us to open _and then immediately focus_ the adjacent tab -- regardless of where focus was before. 

The fix is to use a custom selection event that carries information about whether we had focus when the tab was closed, and to only restore focus if we had it in the first place. 

Fixes https://github.com/rstudio/rstudio/issues/6039.
- on macOS, Safari and Firefox show their own preferences when Cmd+comma is pressed so make the shortcut Cmd+Option+comma when running on those browsers
- Cmd+comma works as desired on Chrome and Edge on Mac, so leave as-is for users who were already using it on Chrome

Fixes #6015 

<!--
IMPORTANT: Please fill out this template fully! Failure to do so will result in the issue being closed automatically.

This issue tracker is for bugs and feature requests in the RStudio IDE. If you're having trouble with R itself or an R package, see https://www.r-project.org/help.html, and if you want to ask a question rather than report a bug, go to https://community.rstudio.com/. Finally, if you use RStudio Server Pro, get in touch with our Pro support team at support@rstudio.com.
-->

### System details

    RStudio Edition : RStudio Desktop Pro
    RStudio Version : 1.3.753-1
    OS Version      : MacOS 10.15.2
    R Version       : 3.6.2

### Steps to reproduce the problem
Open the New Project dialogue
Select to use `renv` and open the project in a new session
The library paths for the initial session are overwritten as the new project is opened

![renv-new-project](https://user-images.githubusercontent.com/10444878/72659742-c3659400-3981-11ea-8f5f-289ce24e4ac8.gif)

### Describe the problem in detail
When a new `renv` project is initialized in a new session from RStudio, the original R session inherits the `renv` library path of the new project.

### Describe the behavior you expected
The library paths of the original project should remain unchanged.

<!-- 
Please keep the below portion in your issue, and check `[x]` the applicable boxes.
-->

- [x] I have read the guide to submitting good bug reports at https://github.com/rstudio/rstudio/wiki/Writing-Good-Bug-Reports . 
- [x] I have installed the latest version of RStudio and confirmed that the issue still persists.
- [x] If I am reporting a RStudio crash, I have included a diagnostics report. https://support.rstudio.com/hc/en-us/articles/200321257-Running-a-Diagnostics-Report
- [x] I have done my best to include a minimal, self-contained set of instructions for consistently reproducing the issue.


JJ reported this bug earlier this week. Because `boost::system::error_code`s can be implicitly converted to `int`, sometimes `Error(int code, std::string name, ErrorLocation location)` was being invoked instead of `Error(boost::system::error_code, std::string message, ErrorLocation location)`, resulting in the name (category) of the error being set to the intended message. This PR resolves that issue by swapping the name and code parameters. It also revealed the need for `Error(boost::system::error_condition)` constructors.

There's also a minor change to SessionFind errors. 
<!--
IMPORTANT: Please fill out this template fully! Failure to do so will result in the issue being closed automatically.

This issue tracker is for bugs and feature requests in the RStudio IDE. If you're having trouble with R itself or an R package, see https://www.r-project.org/help.html, and if you want to ask a question rather than report a bug, go to https://community.rstudio.com/. Finally, if you use RStudio Server Pro, get in touch with our Pro support team at support@rstudio.com.
-->

### System details

    RStudio Edition : Server
    RStudio Version : 1.2.5033
    OS Version      : Ubuntu 18.04
    R Version       : 3.6.2

### Steps to reproduce the problem

Install tensorflow in a fresh environment
```
install.packages("tensorflow")
install_tensorflow(method = "virtualenv", version = "2.0.0")
```

Run `tensorflow` commands from RStudio
```
x <- matrix(2, ncol = 1, nrow = 1)
m <- tf$matmul(x, x)
m
```
RStudio returns message:

> R Session Error
The previous R session was abnormally terminated due to an unexpected crash.
You may have lost workspace data as a result of this crash.

### Describe the problem in detail

The crash occurs whenever I attempt to use one of the `tensorflow::tf$*` functions.

While the error suggests that this is an R crash, I think it is an RStudio issue because I can put the same commands into a script `tensorflow.R` and run `Rscript tensorflow.R` from the terminal (even RStudio's built-in terminal) just fine:

```
ubuntu@run-5e21ef797043a50006f98198-sqlj7:/mnt$ Rscript tensorflow.R
2020-01-17 14:19:46.567377: I tensorflow/core/platform/cpu_feature_guard.cc:142] Your CPU supports instructions that this TensorFlowbinary was not compiled to use: AVX2 AVX512F FMA
2020-01-17 14:19:46.571845: I tensorflow/core/platform/profile_utils/cpu_utils.cc:94] CPU Frequency: 2500000000 Hz
2020-01-17 14:19:46.572210: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x560c23c662a0 executing computations on platform Host. Devices:
2020-01-17 14:19:46.572240: I tensorflow/compiler/xla/service/service.cc:175]   StreamExecutor device (0): Host, Default Version
tf.Tensor([[4.]], shape=(1, 1), dtype=float64)
```

I can even run the commands interactively in a plain R session (with RStudio's built-in terminal, even):

```
ubuntu@run-5e21ef797043a50006f98198-sqlj7:/mnt$ R

R version 3.6.2 (2019-12-12) -- "Dark and Stormy Night"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(tensorflow)
> x <- matrix(2, ncol = 1, nrow = 1)
> m <- tf$matmul(x, x)
2020-01-17 14:22:40.037945: I tensorflow/core/platform/cpu_feature_guard.cc:142] Your CPU supports instructions that this TensorFlowbinary was not compiled to use: AVX2 AVX512F FMA
2020-01-17 14:22:40.042353: I tensorflow/core/platform/profile_utils/cpu_utils.cc:94] CPU Frequency: 2500000000 Hz
2020-01-17 14:22:40.042770: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x55b39cc31050 executing computations on platform Host. Devices:
2020-01-17 14:22:40.042800: I tensorflow/compiler/xla/service/service.cc:175]   StreamExecutor device (0): Host, Default Version
> m
tf.Tensor([[4.]], shape=(1, 1), dtype=float64)
>
```

Similar to #5406, except reinstalling `tensorflow`, R, or RStudio does not solve the issue.

I am running RStudio Server in Docker, so none of the instructions for generating a diagnostics report seemed applicable. Happy to do this if someone can tell me how.

### Describe the behavior you expected

For the `tensorflow` code to run successfully.

<!-- 
Please keep the below portion in your issue, and check `[x]` the applicable boxes.
-->

- [X] I have read the guide to submitting good bug reports at https://github.com/rstudio/rstudio/wiki/Writing-Good-Bug-Reports . 
- [X] I have installed the latest version of RStudio and confirmed that the issue still persists.
- [ ] If I am reporting a RStudio crash, I have included a diagnostics report. https://support.rstudio.com/hc/en-us/articles/200321257-Running-a-Diagnostics-Report
- [X] I have done my best to include a minimal, self-contained set of instructions for consistently reproducing the issue.


<!--
IMPORTANT: Please fill out this template fully! Failure to do so will result in the issue being closed automatically.

This issue tracker is for bugs and feature requests in the RStudio IDE. If you're having trouble with R itself or an R package, see https://www.r-project.org/help.html, and if you want to ask a question rather than report a bug, go to https://community.rstudio.com/. Finally, if you use RStudio Server Pro, get in touch with our Pro support team at support@rstudio.com.
-->

### System details

    RStudio Edition : Desktop & Server
    RStudio Version : 1.3.743 & 1.3.730
    OS Version      : MacOS 10.15.3 & Red Hat 7.8
    R Version       : 3.6.1 & 3.6.0

### Steps to reproduce the problem

1. Create a file called `mischief.R` containing just one line, `Loki`.
2. On the command line: change the file permissions to read-only and a different (real) owner and group, e.g.
```
chmod 444 mishchief.R
chown another_user mishchief.R
chgrp another_group mishchief.R
```
3. Make sure that the permissions, owner, and group have been updated correctly, e.g.
```
# ls -l mischief.R 
-r--r--r--. 1 another_user another_group 5 Jan 17 18:58 mischief.R
```
3. In the IDE: Edit -> Find in Files
4. Under "Find" type `Loki`
5. Under "Search In" choose the directory containing the file `mischief.R`
6. Click on "Find"
    - The search should display the file name and location above, with _Loki_ highlighted in the matching lines
7. Next to "Replace With" type `Trickster`
8. Replace All -> Yes
    - The search should display the file name and location above, with _Trickster_ highlighted in the matching lines
9. On the command line, check the permissions, etc., on the file
    - Write permissions have been added to the file, and the owner and group have reverted to the user and group associated with the RStudio account
```
# ls -l mischief.R 
-rw-rw-r--. 1 rstudio rstudio 5 Jan 17 18:58 mischief.R
```
10. Check the contents of the file: _Loki_ is replaced with _Trickster_
```
[root@ip-10-0-0-42 global]# cat mischief.R 
Trickster
```

### Describe the problem in detail

The file has been updated, and its permissions, owner, and group have been changed.

### Describe the behavior you expected

The existing file properties should be respected:
1. File permissions, owner, and group should not be changed.
2. The file should not be changed, as it's not supposed to be writable.

<!-- 
Please keep the below portion in your issue, and check `[x]` the applicable boxes.
-->

----------

- [x] I have read the guide to submitting good bug reports at https://github.com/rstudio/rstudio/wiki/Writing-Good-Bug-Reports . 
- [x] I have installed the latest version of RStudio and confirmed that the issue still persists.
- [ ] If I am reporting a RStudio crash, I have included a diagnostics report. https://support.rstudio.com/hc/en-us/articles/200321257-Running-a-Diagnostics-Report
- [x] I have done my best to include a minimal, self-contained set of instructions for consistently reproducing the issue.


<!--
IMPORTANT: Please fill out this template fully! Failure to do so will result in the issue being closed automatically.

This issue tracker is for bugs and feature requests in the RStudio IDE. If you're having trouble with R itself or an R package, see https://www.r-project.org/help.html, and if you want to ask a question rather than report a bug, go to https://community.rstudio.com/. Finally, if you use RStudio Server Pro, get in touch with our Pro support team at support@rstudio.com.
-->

### System details

    RStudio Edition : Desktop
    RStudio Version : 1.3.743
    OS Version      : MacOS 10.15.3
    R Version       : 3.6.1

### Steps to reproduce the problem

1. Download a custom dictionary of English medical terms, the file `en_med_glut.dic` at https://github.com/glutanimate/hunspell-en-med-glut
2. In IDE: Tools -> Global Options -> Spelling -> Add
3. Choose the new dictionary and click on “Open”
4. Click on “OK"
5. Close and Restart RStudio Desktop or open a new session in RStudio Server (see #6045)
6. Tools -> Global Options -> Spelling 
    - Make sure that the dictionary is listed
7. In a new Rmd file, enter the following. text
```
allegra
Allegra
zyrtec
Zyrtec
fexofenadine
Fexofenadine
alleni
Alleni
latuda
Latuda
```
8. Save the file

Note: The example includes various capitalizations to make sure that’s not a factor.  

### Describe the problem in detail

Spellcheck results:
- _Allegra_ and _Zyrtec_ (capitalized) are identified as spelled correctly, but they’re also in the en_US dictionary.
- The rest of the terms are in the custom medical dictionary (though capitalization may differ), but they’re being labelled as misspelled.
- Right-clicking on the “misspelled” words only suggests words in English, if at all. For example, _alleni_ results in words such as _fallen_ and _alien_ as alternatives.

Similar behavior occurs when running spellcheck with Edit -> Check Spelling.


### Describe the behavior you expected

All terms in the custom dictionary should be marked as spelled correctly.

<!-- 
Please keep the below portion in your issue, and check `[x]` the applicable boxes.
-->

- [x] I have read the guide to submitting good bug reports at https://github.com/rstudio/rstudio/wiki/Writing-Good-Bug-Reports . 
- [x] I have installed the latest version of RStudio and confirmed that the issue still persists.
- [ ] If I am reporting a RStudio crash, I have included a diagnostics report. https://support.rstudio.com/hc/en-us/articles/200321257-Running-a-Diagnostics-Report
- [x] I have done my best to include a minimal, self-contained set of instructions for consistently reproducing the issue.


<!--
IMPORTANT: Please fill out this template fully! Failure to do so will result in the issue being closed automatically.

This issue tracker is for bugs and feature requests in the RStudio IDE. If you're having trouble with R itself or an R package, see https://www.r-project.org/help.html, and if you want to ask a question rather than report a bug, go to https://community.rstudio.com/. Finally, if you use RStudio Server Pro, get in touch with our Pro support team at support@rstudio.com.
-->

### System details

    RStudio Edition : Desktop & Server
    RStudio Version : 1.3.743 & 1.3.730
    OS Version      : MacOS 10.15.3 & Red Hat 7.8
    R Version       : 3.6.1 & 3.6.0

### Steps to reproduce the problem

1. Download a custom dictionary, such as the English medical terms en_med_glut.dic file at https://github.com/glutanimate/hunspell-en-med-glut
2. In IDE: Tools -> Global Options -> Spelling -> Add
3. Choose the new dictionary and click on “Open”
    - The new dictionary should show up in the list, e.g. en_med_glut 
4. Click on “OK"
5. Tools -> Global Options -> Spelling 
    - The dictionary is no longer in the list
6. Click on “Cancel”
7. Close and Restart RStudio Desktop or open a new session in RStudio Server
9. Tools -> Global Options -> Spelling 
    - The dictionary is listed

### Describe the problem in detail

The new dictionary isn’t listed under Global Options until RStudio Desktop is restarted or a new session is created in RStudio Server.

### Describe the behavior you expected

The dictionary should be available without having to restart RStudio or creating a new session.

<!-- 
Please keep the below portion in your issue, and check `[x]` the applicable boxes.
-->

- [x] I have read the guide to submitting good bug reports at https://github.com/rstudio/rstudio/wiki/Writing-Good-Bug-Reports . 
- [x] I have installed the latest version of RStudio and confirmed that the issue still persists.
- [ ] If I am reporting a RStudio crash, I have included a diagnostics report. https://support.rstudio.com/hc/en-us/articles/200321257-Running-a-Diagnostics-Report
- [x] I have done my best to include a minimal, self-contained set of instructions for consistently reproducing the issue.

