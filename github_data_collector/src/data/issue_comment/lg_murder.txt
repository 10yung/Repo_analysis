Change originally authored by Tony Rice. Edited to include only the fix, and remove the version bump.

 lrl@Ubuntu4-8LW3:cap murder:start_seeding tag="Deploy1"
- 2014-01-23 08:57:59 executing `murder:start_seeding'
- executing "screen -dms 'seeder-Deploy1' python /home/lrl/Documents/murder/dist/murder_client.py seeder '/tmp/Deploy1.tgz.torrent' '/tmp/Deploy1.tgz' `LC_ALL=C host $HOSTNAME | awk '/has address/ {print $4}' | head -n 1`"
  servers: ["10.0.0.104"]
  Password: 
  [10.0.0.104] executing command
  **\* [err :: 10.0.0.104] Usage: host [-aCdlriTwv] [-c class] [-N ndots] [-t type] [-W time]
  **\* [err :: 10.0.0.104] [-R number] [-m flag] hostname [server]
  **\* [err :: 10.0.0.104] -a is equivalent to -v -t ANY
  **\* [err :: 10.0.0.104] -c specifies query class for non-IN data
  **\* [err :: 10.0.0.104] -C compares SOA records on authoritative nameservers
  **\* [err :: 10.0.0.104] -d is equivalent to -v
  **\* [err :: 10.0.0.104] -l lists all hosts in a domain, using AXFR
  **\* [err :: 10.0.0.104] -i IP6.INT reverse lookups
  **\* [err :: 10.0.0.104] -N changes the number of dots allowed before root lookup is done
  **\* [err :: 10.0.0.104] -r disables recursive processing
  **\* [err :: 10.0.0.104] -R specifies number of retries for UDP packets
  **\* [err :: 10.0.0.104] -s a SERVFAIL response should stop query
  **\* [err :: 10.0.0.104] -t specifies the query type
  **\* [err :: 10.0.0.104] -T enables TCP/IP mode
  **\* [err :: 10.0.0.104] -v enables verbose output
  **\* [err :: 10.0.0.104] -w specifies to wait forever for a reply
  **\* [err :: 10.0.0.104] -W specifies how long to wait for a reply
  **\* [err :: 10.0.0.104] -4 use IPv4 query transport only
  **\* [err :: 10.0.0.104] -6 use IPv6 query transport only
  **\* [err :: 10.0.0.104] -m set memory debugging flag (trace|record|usage)
  command finished in 116ms

Maybe, 
"-s" option of screen is a mistake to "-S"? 

http://www.delorie.com/gnu/docs/screen/screen_3.html
- "-s" Set the default shell
- "-S" Set the name of the new session

after i enter the peer command, it shows the following error:

 *\* [out :: 172.23.99.7] Incorrect number of arguments
 *\* [out :: 172.23.99.7] 
 *\* [out :: 172.23.99.7] Usage:
 *\* [out :: 172.23.99.7] python murder_client.py peer/seed out.torrent OUT.OUT 127.0.0.1
 *\* [out :: 172.23.99.7] 
 *\* [out :: 172.23.99.7] The last parameter is the local ip address, normally 10.x.x.x
 *\* [out :: 172.23.99.7] 
 *\* [out :: 172.23.99.5] Incorrect number of arguments
 *\* [out :: 172.23.99.5] 
 *\* [out :: 172.23.99.5] Usage:
 *\* [out :: 172.23.99.5] python murder_client.py peer/seed out.torrent OUT.OUT 127.0.0.1
 *\* [out :: 172.23.99.5] 
 *\* [out :: 172.23.99.5] The last parameter is the local ip address, normally 10.x.x.x
 *\* [out :: 172.23.99.5] 
 *\* [out :: 172.23.98.78] Incorrect number of arguments
 *\* [out :: 172.23.98.78] 
 *\* [out :: 172.23.98.78] Usage:
 *\* [out :: 172.23.98.78] python murder_client.py peer/seed out.torrent OUT.OUT 127.0.0.1
 *\* [out :: 172.23.98.78] 
 *\* [out :: 172.23.98.78] The last parameter is the local ip address, normally 10.x.x.x
 *\* [out :: 172.23.98.78] 
    command finished
failed: "sh -c 'python /u/apps/example-app/shared/murder/murder_client.py peer '\''/tmp/Test_2.tgz.torrent'\'' '\''/tmp/Test_2.tgz'\'' `LC_ALL=C host 172.23.99.7 | awk '\\''/has address/ {print $4}'\\'' | head -n 1`'" on 172.23.99.7; "sh -c 'python /u/apps/example-app/shared/murder/murder_client.py peer '\''/tmp/Test_2.tgz.torrent'\'' '\''/tmp/Test_2.tgz'\'' `LC_ALL=C host 172.23.98.78 | awk '\\''/has address/ {print $4}'\\'' | head -n 1`'" on 172.23.98.78; "sh -c 'python /u/apps/example-app/shared/murder/murder_client.py peer '\''/tmp/Test_2.tgz.torrent'\'' '\''/tmp/Test_2.tgz'\'' `LC_ALL=C host 172.23.99.5 | awk '\\''/has address/ {print $4}'\\'' | head -n 1`'" on 172.23.99.5

As you can see, it throws an "Incorrect number of arguments" error on every peer.

In the introduction video, the functionality of disabling DHT, UPnP, Encryption was mentioned. Could please point me to the files doing them? I cannot find them in the code as I went through murder code and also did a diff on bittornado directory. Thanks. 

Hello,

I get this error while trying to deploy:

```
call failed #<Capistrano::CommandError: failed: "sh -c 'pkill -f \"murder_client.py peer.*/tmp/20110927221958.tar.gz.tgz\"'" on server1,server2...>
*** [deploy:update_code] rolling back
```

I can't figure out why it is failing.  
- I tried modifing the commands to append a "; true" 
- using sudo
- re-writing it using ps|grep|awk|kill

I ended up ignoring the issue by using the following code:

```
namespace :murder do

 task :stop_peering, :roles=>:peer do
  logger.info 'override'
 end

 task :stop_seeding, :roles=>:peer do
  logger.info 'override'
 end

 task :stop_tracker, :roles=>:peer do
  logger.info 'override'
 end

end
```

Then after each deploy, i have to go and kill murder (lol) processes.

ENV:
- The servers are running Ubuntu 8.04
- I am using a cap file similar to https://github.com/lg/murder/blob/master/doc/examples/Capfile

Thanks,
-Dave

when I run "cap murder: peer" the following error occurs

 *\* [out :: LABO03] /tmp/Deploy0000002.tgz.torrent is not a valid responsefile
 *\* [out :: LABO02] Incorrect number of arguments
 *\* [out :: LABO02] 
 *\* [out :: LABO02] Usage:
 *\* [out :: LABO02] python murder_client.py peer/seed out.torrent OUT.OUT 127.0.0.1
 *\* [out :: LABO02] 
 *\* [out :: LABO02] The last parameter is the local ip address, normally 10.x.x.x
 *\* [out :: LABO02] 
 *\* [out :: LABO01] /tmp/Deploy0000002.tgz.torrent is not a valid responsefile

Any idea?

Regards

Hi,

Please pull these portability fixes for FreeBSD. They shouldn't break anything on Linux, afaik, but please let me know if they I'm wrong.

Thanks,
Steve
