<!---
1. Please ensure that your PR points to our develop branch. If not, please retarget the branch in the upper left corner.
2. Please ensure that the develop branch of your fork is up to date!
  a. git checkout develop
  b. git remote add upstream https://github.com/automatedlab/automatedlab.git
  c. git pull --rebase upstream develop
  d. Work on any merge conflicts and follow the on-screen instructions of the git client
  e. git push [--force, overwriting any changes you did to develop that were not part of our branch]
  f. git checkout <YOURBRANCH>
  g. git pull --rebase origin develop
  h. Work on any merge conflicts and git push again
  i. Open PR
3. Please provide a meaningful title for the PR. If you fix an issue, please reference it with (Fixes #nnn)
 -->
## Description

Please describe your changes in detail, unless the title is already descriptive enough.

- [x] - I have tested my changes.  
- [ ] - I have updated CHANGELOG.md and added my change to the Unreleased section
- [ ] - The PR has a meaningful title.  
- [x] - I updated my fork/branch and have integrated all changes from AutomatedLab/develop before creating the PR.

## Type of change
<!--- Check all that apply. -->

- [ ] Bug fix  
- [ ] New functionality  
- [ ] Breaking change
- [x] Documentation

## How was the change tested?
<!--
Please describe what you did to test your change, if applicable.
We are aware that there are currently no unit and integration tests, so we need
your help.
By letting us know how you tested, we can better judge what we need to test in
addition to that.
 -->

## Description
I've deployed a Sample Lab with the expected results.
Now, I wanted to deploy a new Lab with three machines which fails with a strange error message.

## Expected behavior
The deployment and configuration of the treee machines
## Actual behavior
```
PS C:\WINDOWS\system32> . 'H:\LabSources\SampleScripts\HyperV\SfB_Std_Lab.ps1'
14:35:34|00:00:00|00:00:00.000| Initialization
14:35:34|00:00:00|00:00:00.053| - Host operating system version: '10.0.18363'
14:35:34|00:00:00|00:00:00.069| - Creating new lab definition with name 'SfBSmallLab01'
14:35:34|00:00:00|00:00:00.117| - Location of lab definition files will be 'C:\ProgramData\AutomatedLab\Labs\SfBSmallLab01'
14:35:34|00:00:00|00:00:00.287| - Location of LabSources folder is 'H:\LabSources'
14:35:34|00:00:00|00:00:00.000| - Auto-adding ISO files
14:35:35|00:00:00|00:00:00.240|   - found 13 OS images in the cache
14:35:35|00:00:01|00:00:01.002|   - Added 'H:\LabSources\ISOs\Skype_for_Business_Server_2019_Evaluation_en-US.iso'
14:35:35|00:00:01|00:00:01.027|   - Added 'H:\LabSources\ISOs\SQLServer2014SP3-FullSlipstream-x64-ENU.iso'
14:35:35|00:00:01|00:00:01.056|   - Added 'H:\LabSources\ISOs\Windows_10_Enterprise_EVAL_en-us.iso'
14:35:35|00:00:01|00:00:01.079|   - Added 'H:\LabSources\ISOs\Windows_Server_2012_R2_Datacenter_EVAL_en-us.iso'
14:35:35|00:00:01|00:00:01.093|   - Added 'H:\LabSources\ISOs\Windows_Server_2016_Datacenter_EVAL_en-us.iso'
14:35:35|00:00:01|00:00:01.118|   - Added 'H:\LabSources\ISOs\Windows_Server_2019_Datacenter_EVAL_en-us.iso'
14:35:35|00:00:01|00:00:01.147|   - Done
14:35:36|00:00:02|00:00:02.576| - Added 'H:\LabSources\ISOs\SQLServer2014SP3-FullSlipstream-x64-ENU.iso'
14:35:37|00:00:03|00:00:00.000| - Adding Hyper-V machine definition 'SfBADC01'    (Roles: RootDC, WebServer, CaRoot)
14:35:42|00:00:08|00:00:04.886|   - Done
14:35:42|00:00:08|00:00:00.001| - Adding Hyper-V machine definition 'SfBFES01'   
14:35:42|00:00:08|00:00:00.312|   - Done
14:35:43|00:00:08|00:00:00.000| - Adding Hyper-V machine definition 'SfBSQL01'    (Roles: SQLServer2014)
14:35:43|00:00:08|00:00:00.291|   - Done
14:35:43|00:00:09|00:00:09.450| Estimated (additional) local drive space needed for all machines: 6 GB
14:35:44|00:00:10|00:00:10.568| Location of Hyper-V machines will be 'H:\AutomatedLab-VMs'
14:35:45|00:00:11|00:00:11.120| Done
14:35:45|00:00:11|00:00:00.000| Validating lab definition
Cannot convert argument "c", with value: "ണ", for "AddRange" to type "System.Collections.ICollection": "Cannot convert the "ണ" value of type 
"System.String" to type "System.Collections.ICollection"."
At C:\Program Files\WindowsPowerShell\Modules\HostsFile\5.16.0\HostsFile.psm1:119 char:9
+         $hostContent.AddRange($currentHostContent)
+         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], MethodException
    + FullyQualifiedErrorId : MethodArgumentConversionInvalidCastArgument
 
Cannot convert argument "c", with value: "ണ", for "AddRange" to type "System.Collections.ICollection": "Cannot convert the "ണ" value of type 
"System.String" to type "System.Collections.ICollection"."
At C:\Program Files\WindowsPowerShell\Modules\HostsFile\5.16.0\HostsFile.psm1:119 char:9
+         $hostContent.AddRange($currentHostContent)
+         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], MethodException
    + FullyQualifiedErrorId : MethodArgumentConversionInvalidCastArgument
 
Cannot convert argument "c", with value: "ണ", for "AddRange" to type "System.Collections.ICollection": "Cannot convert the "ണ" value of type 
"System.String" to type "System.Collections.ICollection"."
At C:\Program Files\WindowsPowerShell\Modules\HostsFile\5.16.0\HostsFile.psm1:119 char:9
+         $hostContent.AddRange($currentHostContent)
+         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], MethodException
    + FullyQualifiedErrorId : MethodArgumentConversionInvalidCastArgument
 
14:35:50|00:00:15|00:00:04.437| - Could not invoke validator AutomatedLab.UnknownRoleProperties
14:35:50|00:00:16|00:00:04.893| - Success
14:35:51|00:00:16|00:00:00.001| Lab 'SfBSmallLab01' hosted on 'HyperV' imported with 3 machines
14:35:52|00:00:18|00:00:00.000| Creating virtual networks
14:35:52|00:00:18|00:00:00.001| - Creating Hyper-V virtual network 'SfBSmallLab01'
14:35:52|00:00:18|00:00:00.292|   - The network switch 'SfBSmallLab01' already exists, no changes will be made to configuration
14:35:52|00:00:18|00:00:00.344|   - Done
14:35:52|00:00:18|00:00:00.455| - done
14:35:52|00:00:18|00:00:00.001| - Creating base images
14:35:53|00:00:18|00:00:00.375|   - All base images were created previously
14:35:54|00:00:20|00:00:01.744|   - Done
14:35:54|00:00:20|00:00:02.235| - done
14:35:54|00:00:20|00:00:00.000| - Creating Additional Disks
14:35:56|00:00:22|00:00:01.839|   - Done
14:35:56|00:00:22|00:00:00.000| - Creating VMs
Get-HostFile : Cannot convert argument "c", with value: "ണ", for "AddRange" to type "System.Collections.ICollection": "Cannot convert the "ണ" value of 
type "System.String" to type "System.Collections.ICollection"."
At C:\Program Files\WindowsPowerShell\Modules\HostsFile\5.16.0\HostsFile.psm1:219 char:34
+     $hostContent, $hostEntries = Get-HostFile
+                                  ~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [Get-HostFile], MethodException
    + FullyQualifiedErrorId : MethodArgumentConversionInvalidCastArgument,Get-HostFile
 
14:35:56|00:00:22|00:00:00.000|   - Installing Root Domain Controllers
14:35:56|00:00:22|00:00:00.032|     - Machines with RootDC role to be installed: 'SfBADC01'
14:35:56|00:00:22|00:00:00.179|     - Waiting for machines to start upGet-VM : Hyper-V was unable to find a virtual machine with name "SfBADC01".
At C:\Program Files\WindowsPowerShell\Modules\AutomatedLabWorker\5.16.0\AutomatedLabWorkerVirtualMachines.psm1:1365 char:12
+     $vms = Get-VM -Name $ComputerName
+            ~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (SfBADC01:String) [Get-VM], VirtualizationException
    + FullyQualifiedErrorId : InvalidParameter,Microsoft.HyperV.PowerShell.Commands.GetVM
 
Could not start Hyper-V machine 'SfBADC01': Hyper-V was unable to find a virtual machine with name "SfBADC01".
At C:\Program Files\WindowsPowerShell\Modules\AutomatedLabWorker\5.16.0\AutomatedLabWorkerVirtualMachines.psm1:959 char:13
+             throw $ex
+             ~~~~~~~~~
    + CategoryInfo          : OperationStopped: (:) [], Exception
    + FullyQualifiedErrorId : Could not start Hyper-V machine 'SfBADC01': Hyper-V was unable to find a virtual machine with name "SfBADC01".
```

## Steps to reproduce
`$labName = 'SfBSmallLab01'
New-LabDefinition -Name $labName -DefaultVirtualizationEngine HyperV
Add-LabIsoImageDefinition -Name SQLServer2014 -Path $labSources\ISOs\SQLServer2014SP3-FullSlipstream-x64-ENU.iso
Add-LabVirtualNetworkDefinition -Name $labName -AddressSpace 192.168.82.0/24
Set-LabInstallationCredential -Username Install -Password ('Pa{0}w0rd' -f $$)
Add-LabDomainDefinition -Name 'uandme.de' -AdminUser Peter -AdminPassword ('Pa{0}w0rd' -f $$)

$role = @()
$role += Get-LabMachineRoleDefinition -Role RootDC
$role += Get-LabMachineRoleDefinition -Role WebServer
$role += Get-LabMachineRoleDefinition -Role CaRoot
Add-LabMachineDefinition -Name SfBADC01 -Memory 4096MB -Network $labName -DomainName 'uandme.de' -IpAddress 192.168.82.10 -DnsServer1 192.168.82.10 -Roles $role -ToolsPath $labSources\Tools -OperatingSystem 'Windows Server 2016 Datacenter Evaluation (Desktop Experience)'

Add-LabMachineDefinition -Name SfBFES01 -Memory 4096MB -Network $labName -DomainName 'uandme.de' -IpAddress 192.168.82.20 -DnsServer1 192.168.82.10 -ToolsPath $labSources\Tools -OperatingSystem 'Windows Server 2016 Datacenter Evaluation (Desktop Experience)'

Add-LabMachineDefinition -Name SfBSQL01 -Memory 4096MB -Network $labName -DomainName 'uandme.de' -IpAddress 192.168.82.30 -DnsServer1 192.168.82.10 -Roles SQLServer2014 -ToolsPath $labSources\Tools -OperatingSystem 'Windows Server 2016 Datacenter Evaluation (Desktop Experience)'

Install-Lab

Install-LabSoftwarePackage -ComputerName (Get-LabVM) -Path $labSources\SoftwarePackages\npp.7.8.2.Installer.exe -CommandLine /S
Install-LabSoftwarePackage -ComputerName (Get-LabVM) -Path $labSources\SoftwarePackages\Wireshark-win64-3.2.0.exe -CommandLine /S

Enable-LabCertificateAutoenrollment -Computer -User -CodeSigning

Show-LabDeploymentSummary -Detailed
`

## Environment details

PowerShell Version
```
Name                           Value                                                                                                                   
----                           -----                                                                                                                   
PSVersion                      5.1.18362.145                                                                                                           
PSEdition                      Desktop                                                                                                                 
PSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}                                                                                                 
BuildVersion                   10.0.18362.145                                                                                                          
CLRVersion                     4.0.30319.42000                                                                                                         
WSManStackVersion              3.0                                                                                                                     
PSRemotingProtocolVersion      2.3                                                                                                                     
SerializationVersion           1.1.0.1  
```

AutomatedLab components
```Name                      Version
----                      -------
AutomatedLab              5.17.0 
AutomatedLab.Common       2.0.184
AutomatedLabDefinition    5.16.0 
AutomatedLabNotifications 5.16.0 
AutomatedLabUnattended    5.16.0 
AutomatedLabWorker        5.16.0 
```
<!---
1. Please ensure that your PR points to our develop branch. If not, please retarget the branch in the upper left corner.
2. Please ensure that the develop branch of your fork is up to date!
  a. git checkout develop
  b. git remote add upstream https://github.com/automatedlab/automatedlab.git
  c. git pull --rebase upstream develop
  d. Work on any merge conflicts and follow the on-screen instructions of the git client
  e. git push [--force, overwriting any changes you did to develop that were not part of our branch]
  f. git checkout <YOURBRANCH>
  g. git pull --rebase origin develop
  h. Work on any merge conflicts and git push again
  i. Open PR
3. Please provide a meaningful title for the PR. If you fix an issue, please reference it with (Fixes #nnn)
 -->
## Description

See issue #793, removes a hardcoded path for SQL configuration file

- [x] - I have tested my changes.  
- [x] - I have updated CHANGELOG.md and added my change to the Unreleased section
- [x] - The PR has a meaningful title.  
- [x] - I updated my fork/branch and have integrated all changes from AutomatedLab/develop before creating the PR.

## Type of change
<!--- Check all that apply. -->

- [x] Bug fix  
- [ ] New functionality  
- [ ] Breaking change
- [ ] Documentation

## How was the change tested?
<!--
Please describe what you did to test your change, if applicable.
We are aware that there are currently no unit and integration tests, so we need
your help.
By letting us know how you tested, we can better judge what we need to test in
addition to that.
 -->

Created a 1 machine lab installing 1 SQL instance using a SQL configuration file
## Description

I was troubleshooting something and I noticed [this line](https://github.com/AutomatedLab/AutomatedLab/blob/a376ac1031ce87a98f8c65a151f6510df1da0c4d/AutomatedLab/AutomatedLabSQL.psm1#L174). 

Should the path be hard coded to be `D:\SQLConfig.ini`? I feel it would make more sense if it were `$role.Properties.ConfigurationFile` looking at where else `$configurationFileContent` is referenced.

## Expected behavior

## Actual behavior

<!-- 
If you intend to provide error messages, try to format them in a code block.
To make troubleshooting easier (unless the issue is easy to reproduce), the verbose output
of Install-Lab -Verbose will also be helpful in a code block.
-->

## Steps to reproduce

```powershell
#Please add all PowerShell Code necessary to reproduce your issue here.
```

## Environment details

PowerShell Version
```code
Name                           Value
----                           -----
PSVersion                      5.1.18362.145
PSEdition                      Desktop
PSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}
BuildVersion                   10.0.18362.145
CLRVersion                     4.0.30319.42000
WSManStackVersion              3.0
PSRemotingProtocolVersion      2.3
SerializationVersion           1.1.0.1
```

AutomatedLab components
```code
Name                      Version
----                      -------
AutomatedLab              5.17.0
AutomatedLab.Common       2.0.188
AutomatedLab.Recipe       5.17.0
AutomatedLab.Ships        5.17.0
AutomatedLabDefinition    5.17.0
AutomatedLabNotifications 5.17.0
AutomatedLabTest          5.17.0
AutomatedLabUnattended    5.17.0
AutomatedLabWorker        5.17.0
```
## Description

Some output from jobs is returned to console for SQL2017 role, see image: 

![image](https://user-images.githubusercontent.com/6683266/72086946-adabfb00-32ff-11ea-8a02-0aff2a081cff.png)


## Expected behavior

No blank lines.

Some messages missing Write-ScreenInfo lovely stuff.

## Actual behavior

Blank lines and some messages missing Write-ScreenInfo stuff.

## Steps to reproduce

Install using SQL2017 role.

## Environment details

PowerShell Version
```code
Name                           Value
----                           -----
PSVersion                      5.1.17763.771
PSEdition                      Desktop
PSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}
BuildVersion                   10.0.17763.771
CLRVersion                     4.0.30319.42000
WSManStackVersion              3.0
PSRemotingProtocolVersion      2.3
SerializationVersion           1.1.0.1
```

AutomatedLab components
```code
Name                      Version
----                      -------
AutomatedLab              5.17.0
AutomatedLab.Common       2.0.188
AutomatedLab.Recipe       5.17.0
AutomatedLab.Ships        5.17.0
AutomatedLabDefinition    5.17.0
AutomatedLabNotifications 5.17.0
AutomatedLabTest          5.17.0
AutomatedLabUnattended    5.17.0
AutomatedLabWorker        5.17.0
```
## Description

When adding a SQL 2017 ISO to my lab, AL throws this non-terminating exception when calling `Install-Lab`:

![image](https://user-images.githubusercontent.com/6683266/72071414-a4149a00-32e3-11ea-9201-a747ac979e32.png)

In the lab's XML (C:\ProgramData\AutomatedLab\Labs\CMLab01\Lab.xml) I do see:

```
...
<IsoImage>
  <Name>SQLServer2017</Name>
  <Path>C:\LabSources\ISOs\en_sql_server_2017_standard_x64_dvd_11294407.iso</Path>
  <Size>1546244096</Size>
  <OperatingSystems />
</IsoImage>
...
```

I expect it's not related but the closing `<OperatingSystems />` does seem to be not needed here. [Link to whole XML on paste bin](https://pastebin.com/X7Tv4T7w).

## Expected behavior

Not to print error to screen.

## Actual behavior

<!-- 
If you intend to provide error messages, try to format them in a code block.
To make troubleshooting easier (unless the issue is easy to reproduce), the verbose output
of Install-Lab -Verbose will also be helpful in a code block.
-->

Printing error to screen.

I don't think it's an issue with installing the SQL role so the media seems to be used fine.

## Steps to reproduce

[Link](https://github.com/codaamok/PoSH/blob/master/AutomatedLab/CM-1902.ps1#L369)

## Environment details

PowerShell Version
```code
Name                           Value
----                           -----
PSVersion                      5.1.17763.771
PSEdition                      Desktop
PSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}
BuildVersion                   10.0.17763.771
CLRVersion                     4.0.30319.42000
WSManStackVersion              3.0
PSRemotingProtocolVersion      2.3
SerializationVersion           1.1.0.1
```

AutomatedLab components
```code
Name                      Version
----                      -------
AutomatedLab              5.17.0
AutomatedLab.Common       2.0.188
AutomatedLab.Recipe       5.17.0
AutomatedLab.Ships        5.17.0
AutomatedLabDefinition    5.17.0
AutomatedLabNotifications 5.17.0
AutomatedLabTest          5.17.0
AutomatedLabUnattended    5.17.0
AutomatedLabWorker        5.17.0
```
<!---
1. Please ensure that your PR points to our develop branch. If not, please retarget the branch in the upper left corner.
2. Please ensure that the develop branch of your fork is up to date!
  a. git checkout develop
  b. git remote add upstream https://github.com/automatedlab/automatedlab.git
  c. git pull --rebase upstream develop
  d. Work on any merge conflicts and follow the on-screen instructions of the git client
  e. git push [--force, overwriting any changes you did to develop that were not part of our branch]
  f. git checkout <YOURBRANCH>
  g. git pull --rebase origin develop
  h. Work on any merge conflicts and git push again
  i. Open PR
3. Please provide a meaningful title for the PR. If you fix an issue, please reference it with (Fixes #nnn)
 -->
## Description

New custom role for ConfigMgr 1902 including updates to 1906 or 1910. 

Moving forward, for every baseline release of ConfigMgr, I intend to re-release this script and a new custom role with the corresponding name of the released basline. e.g. the next release in Q1 of this year will be called "CM-2002" (assuming 2002 is the version number of the next current branch release).

This custom role is hugely influenced by the current SCCM custom role. 

The most noticeable difference is the accompanying CM-1902.ps1 script that I've placed in the Scenarios folder of Samples Scripts. It's a different approach compared to the other sample scripts in the sense that the AutomatedLab build is configured via parameters rather than the user modifying the script's body.

I'm open to discussions on this approach. I can't imagine it being a deal breaker for you. From my experience, there's a reasonably sized portion of ConfigMgr admins who aren't comfortable with PowerShell and I wrote this with the intention to reduce their exposure to the body of code. Hopefully just calling a script with (or without!) parameters encourages wider use.

- [x] - I have tested my changes.  
- [x] - The PR has a meaningful title.  
- [x] - I updated my fork/branch and have integrated all changes from AutomatedLab/develop before creating the PR.

## Type of change
<!--- Check all that apply. -->

- [ ] Bug fix  
- [x] New functionality  
- [ ] Breaking change
- [ ] Documentation

## How was the change tested?
<!--
Please describe what you did to test your change, if applicable.
We are aware that there are currently no unit and integration tests, so we need
your help.
By letting us know how you tested, we can better judge what we need to test in
addition to that.
 -->

Initiate build from calling CM-1902.ps1 with various combinations of parameters, rinse and repeat. I know this might sound vague, but it's true. Apologies if it's unhelpful, that's not my intention.

## Description

I made my own version based on the script "VpnConnectedLab.ps1". If I start the script now it sometimes works and sometimes it doesn't. I can't find a regularity. I've done it about 15 times in the past few days and it worked in about 4-5 runs.

The error always occurs when the domain is set up on Azure-based VMs, and always at the same time.

Does somebody have any idea? How could I isolate the problem?

## Expected behavior

Log:

```code
Installing Root Domain Controllers
- Machines with RootDC role to be installed: 'AZTOADDC01'
- Waiting for machines to start up..
- Waiting for Root Domain Controllers to complete installation of Active Directory and restart.......done
- Root Domain Controllers have now restarted. Waiting for Active Directory to start up........
- Done
Installing Additional Domain Controllers
- Machines with DC role to be installed: 'AZTOADDC02'
- Waiting for machines to start up..
- Waiting for additional Domain Controllers to complete installation of Active Directory and restart.....done
- Additional Domain Controllers have now restarted. Waiting for Active Directory to start up...........
- Done
Starting remaining machines
- Waiting for machines to start up.....
- Done
Performing post-installations tasks defined for each machine
- Post-installations done
```

## Actual behavior

```code
Installing Root Domain Controllers
- Machines with RootDC role to be installed: 'AZTOADDC01'
- Waiting for machines to start up..
- Waiting for Root Domain Controllers to complete installation of Active Directory and restart.....................................................................................................Wait-LabVMRestart : The following machines have not restarted in the timeout of 60 minute(s): AZTOADDC01
In C:\Program Files\WindowsPowerShell\Modules\AutomatedLab\5.16.0\AutomatedLabADDS.psm1:935 Zeichen:9
+         Wait-LabVMRestart -ComputerName $machines.Name -StartMachines ...
+         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [Write-Error], WriteErrorException
    + FullyQualifiedErrorId : Microsoft.PowerShell.Commands.WriteErrorException,Wait-LabVMRestart
```

## Steps to reproduce

```powershell
$Tenant                               = 'xxxxxxxx.onmicrosoft.com'
$TenantID                             = ''
$SubscriptionID                       = ''

Disable-AzContextAutosave -Scope Process | Out-Null
$Account = Connect-AzAccount -TenantId $TenantID
If ($TenantID -eq $Account.Context.Tenant.Id){
  Write-Verbose -Message ("Log in on Tenant '" + $Tenant + "' with Account '" + $Account.Context.Account.Id + "'")
}

$currentAzureContext = Get-AzContext
$tenantId = $currentAzureContext.Tenant.Id
$accountId = $currentAzureContext.Account.Id

$AzureAD = Connect-AzureAD -TenantId $tenantId -AccountId $accountId
$ActiveTenantName = (Get-AzureADDomain | Where-Object {($_.Name -like '*onmicrosoft*') -and ($_.Name -notlike '*mail.onmicrosoft*')}).Name
Write-Verbose -Message ("Log in on Azure AD '" + $ActiveTenantName + "' with Account '" + $AzureAD.Account.Id + "'")

$Context = Set-AzContext -Scope Process -Tenantid $Tenantid -SubscriptionId $SubscriptionID
$SubscriptionId = (Get-AzContext).Subscription.Id

$labs = @(
  @{
    labName = 'AzureOneSite'
    labShortName = 'AZTO'
    labSubnet = '10.25.0.0/16'
    labRootDomain = 'lab.local'
    labGateway = '10.25.1.1'
    labDns1 = '10.25.1.10'
    labDns2 ='10.25.1.11'
    labLocation = 'West Europe'
    labLocationShort = 'EUWE'
    labUserName = 'Install'
    labPassword = 'Somepa$$01'
  }
)

$labSources = Get-LabSourcesLocation
$labDrive   = "$Env:ProgramData\AutomatedLab\Labs" # Use the default path, if you use another path, some issue can happen
$labVMDrive = 'C:\AutomatedLabs-VMs' #this is the drive where to create the VMs

foreach ($lab in $labs.GetEnumerator()) {

  # Create the folder path for the lab using Join-Path
  $labPath = Join-Path -Path $labDrive -ChildPath $lab.labName
  $labVMPath = Join-Path -Path $labVMDrive -ChildPath $lab.labName

  # Create the target directory if it does not exist
  if (-not (Test-Path $labPath)) { New-Item $labPath -ItemType Directory | Out-Null }
  if (-not (Test-Path $labVMPath)) { New-Item $labVMPath -ItemType Directory | Out-Null }


  New-LabDefinition -Name $lab.labName -DefaultVirtualizationEngine Azure
  
  Add-LabAzureSubscription -Path ($labDrive + '\' + $lab.labName) -DefaultLocation $lab.labLocation
  
  Sync-LabAzureLabSources -SkipIsos
  
  Add-LabVirtualNetworkDefinition -Name $lab.labName -AddressSpace $lab.labSubnet

  Add-LabDomainDefinition -Name $lab.labRootDomain -AdminUser Install -AdminPassword $lab.labPassword
  Set-LabInstallationCredential -Username Install -Password $lab.labPassword 

  # First DC, the root domain gets a first domain controller
  $DefaultParamDC = @{}
  $DefaultParamDC['Network']= $lab.labName
  $DefaultParamDC['ToolsPath']= "$labSources\Tools"
  $DefaultParamDC['Gateway']= $lab.labGateway
  $DefaultParamDC['DnsServer1']=$lab.labDns1
  $DefaultParamDC['DnsServer2']=$lab.labDns2
  $DefaultParamDC['DomainName']=$lab.labRootDomain
  $DefaultParamDC['Memory']=512MB
  $DefaultParamDC['OperatingSystem']='Windows Server 2016 Datacenter (Desktop Experience)'
  $DefaultParamDC['AzureRoleSize']='Standard_B2ms'

  $roles = Get-LabMachineRoleDefinition -Role RootDC @{
    ForestFunctionalLevel = 'Default'
    DomainFunctionalLevel = 'Default'
    SiteName = $lab.labName
    SiteSubnet = $lab.labSubnet
  }

  $postInstallActivity = @()
  $postInstallActivity += Get-LabPostInstallationActivity -ScriptFileName PrepareRootDomain.ps1 -DependencyFolder $labSources\PostInstallationActivities\PrepareRootDomain
  $postInstallActivity += Get-LabPostInstallationActivity -ScriptFileName 'New-ADLabAccounts 2.0.ps1' -DependencyFolder $labSources\PostInstallationActivities\PrepareFirstChildDomain
  Add-LabMachineDefinition -Name ($lab.labShortName + 'ADDC01') -IpAddress 10.25.1.10 -Roles $roles -PostInstallationActivity $postInstallActivity @DefaultParamDC

  # Second DC, the root domain gets a second domain controller
  $roles = Get-LabMachineRoleDefinition -Role DC
  Add-LabMachineDefinition -Name ($lab.labShortName + 'ADDC02') -IpAddress 10.25.1.11 -Roles $roles @DefaultParamDC 
  
  Install-Lab 
  Stop-LabVM -All -Wait
}
```

## Environment details

PowerShell Version
```code
Name                           Value                                                                                                                                                                                                                        
----                           -----                                                                                                                                                                                                                        
PSVersion                      5.1.17763.771                                                                                                                                                                                                                
PSEdition                      Desktop                                                                                                                                                                                                                      
PSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}                                                                                                                                                                                                      
BuildVersion                   10.0.17763.771                                                                                                                                                                                                               
CLRVersion                     4.0.30319.42000                                                                                                                                                                                                              
WSManStackVersion              3.0                                                                                                                                                                                                                          
PSRemotingProtocolVersion      2.3                                                                                                                                                                                                                          
SerializationVersion           1.1.0.1         
```         

AutomatedLab components
```code
Name                      Version
----                      -------
AutomatedLab              5.16.0 
AutomatedLab.Common       2.0.184
AutomatedLabDefinition    5.16.0 
AutomatedLabNotifications 5.16.0 
AutomatedLabUnattended    5.16.0 
AutomatedLabWorker        5.16.0 
```  

Az components
```code
Name                            Version  
----                            -------  
AzSK                            4.1.0    
Az.Accounts                     1.6.1    
Az.Advisor                      1.0.0    
Az.Aks                          1.0.1    
Az.AnalysisServices             1.1.0    
Az.ApiManagement                1.2.0    
Az.ApplicationInsights          1.0.1    
Az.Automation                   1.3.1    
Az.Batch                        1.1.0    
Az.Billing                      1.0.0    
Az.Cdn                          1.3.0    
Az.CognitiveServices            1.2.0    
Az.Compute                      2.4.1    
Az.ContainerInstance            1.0.1    
Az.ContainerRegistry            1.1.0    
Az.DataFactory                  1.1.3    
Az.DataLakeAnalytics            1.0.0    
Az.DataLakeStore                1.2.1    
Az.DeploymentManager            1.0.0    
Az.DevTestLabs                  1.0.0    
Az.Dns                          1.1.1    
Az.EventGrid                    1.2.1    
Az.EventHub                     1.3.0    
Az.FrontDoor                    1.1.0    
Az.HDInsight                    2.0.0    
Az.IotHub                       1.2.0    
Az.KeyVault                     1.3.0    
Az.LogicApp                     1.3.0    
Az.MachineLearning              1.1.0    
Az.ManagedServices              1.0.0    
Az.MarketplaceOrdering          1.0.0    
Az.Media                        1.1.0    
Az.Monitor                      1.2.1    
Az.Network                      1.12.0   
Az.NotificationHubs             1.1.0    
Az.OperationalInsights          1.3.2    
Az.PolicyInsights               1.1.2    
Az.PowerBIEmbedded              1.1.0    
Az.RecoveryServices             1.4.3    
Az.RedisCache                   1.1.0    
Az.Relay                        1.0.1    
Az.Resources                    1.6.1    
Az.ServiceBus                   1.3.0    
Az.ServiceFabric                1.1.1    
Az.SignalR                      1.0.2    
Az.Sql                          1.13.1   
Az.Storage                      1.5.1    
Az.StorageSync                  1.2.0    
Az.StreamAnalytics              1.0.0    
Az.TrafficManager               1.0.1    
Az.Websites                     1.4.0    
AzTable                         2.0.2    
AzureAD                         2.0.2.31 
AzureAutomationAuthoringToolkit 0.2.4.2  
AzureInformationProtection      1.54.33.0
```  
## Description

Please create a function to enable azure bastion for labs hosted in azure.

## Expected behavior

ability for RDP in the Browser


The performance of `Get-LabInternetFile()` could be better if didn't use `Write-Progress` (or at least offered option to suppress it) and using `System.Net.WebClient` instead. The `+=` operator to append to `$bytesProcessed` is also killer on performance.

I'd like to submit PR but before I make changes, I wanted to understand if there was a particular reason why this method to download was used? Perhaps there's history to it.