@lukemelas  i am trying to replace Resnet50+FPN with Resent50/101+BiFPN and i am getting this error "RuntimeError:  the size of tensor a (9)  must match the size of tensor b (10) at non-singleton  dimension 3 " any idea to resolve this?? cannot we integrate BiFPN with any other architectures 
pytorch : 1.4.0a0 + 46f32e1
onnx    : 1.6.0
onnx2trt: 7.0
tensorrt: 7.0.0.11

![image](https://user-images.githubusercontent.com/22209240/72286001-38358700-367f-11ea-82f2-289b5298d886.png)

![image](https://user-images.githubusercontent.com/22209240/72285698-9f067080-367e-11ea-8294-ef4315b8d611.png)

Any suggestions on this issue?

Thanks
   in the efficientnet_pytorch/model.py , it has two function " from_pretrained  "
  what is the different?


def from_pretrained(cls, model_name, num_classes=1000, in_channels = 3):

def from_pretrained(cls, model_name, num_classes=1000):


Hi , I want to test how to export ONNX model , and I use your colab jupyter notebook  demo.
`Successfully installed efficientnet-pytorch-0.5.1`
`Successfully installed onnx-1.6.0`
and It stop in `return (%880)` , I can not see any error information. So Can you check this [colab notebook](https://colab.research.google.com/drive/1rOAEXeXHaA8uo3aG2YcFDHItlRJMV0VP)? 

b.t.w I tried using 

> model.set_swish(memory_efficient=False)

like this 
![Screenshot from 2019-12-27 17-44-44](https://user-images.githubusercontent.com/10268274/71512440-26a75d80-28d1-11ea-9360-92049f7b9ae4.png)

Even it sucessful export onnx model. But when I run `Test Export` ,that next Cell.

The system crashed!!

Hope you can check it ,thank you very much

I wonder why there is skip connection only when the stride equals to one . Is it the origin realization of Efficient, would you please explain it ? That would be so much appreciated :) . 
@lukemelas 
![image](https://user-images.githubusercontent.com/24486813/71504422-5300b100-28b4-11ea-8f68-064e8ee76691.png)

code in MBConvBlock:

```
        # Skip connection and drop connect
        input_filters, output_filters = self._block_args.input_filters, self._block_args.output_filters
        if self.id_skip and self._block_args.stride == 1 and input_filters == output_filters:
            if drop_connect_rate:
                x = drop_connect(x, p=drop_connect_rate, training=self.training)
            x = x + inputs  # skip connection
```

What I'm saying is  , why not add residual connection to every block we have ?
Thanks for providing this repository !  How should i do if i want to use the efficientnet as the backbone of the RefineDet(  caffe vesion  ) ? 
If I do not need to transform the tensorflow pre-trained weight into this model, instead I train it from scratch. Can I just delete the `Conv2dStaticSamePadding`?
I'm training a efficientnet-b0 on CIFAR-100. 
I resize the picture to 224 x 224 using Image.BICUBIC.
And I set the initial lr to 0.1, and multiply it by 0.1 every 3 epoches. 
But I only get acc@85.62%. 
But the result on the paper is 88.1%. 
How can I get the similar result?
Hi I am trying to load a model I just trained to continue training from the last step, however I get the following error:

AttributeError: 'IncompatibleKeys' object has no attribute 'load_state_dict'

This is the command I am using:
model = model.load_state_dict(torch.load(f'efficientnet-b0_model_loss_0.18790134154737087.pt'))

Could you please help in this regard