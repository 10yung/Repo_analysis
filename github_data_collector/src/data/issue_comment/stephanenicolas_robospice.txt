How can I use xmlrpc request. I have my own object which handle everything very well and returns data response. I want to keep using my object to do network related task and finally willing to save to realm. All work should be done by my object but I still want to use robospice to handle all background thread. Is it robospice suitable for my case please help I'm totally screwed with asynctask. I'm using account manager to fetch data for different user account and finally I'm saving it to realm as default account. The problem occurred whe. I switched account in case asynctask running and it never stoppes which leads wrong data on wrong account. 
I've got this new error for users using android 8.1.0 : 
"android.app.RemoteServiceException: Bad notification for startForeground: java.lang.RuntimeException: invalid channel for service notification: Notification(channel=null..."

I can reproduce the error on emulator using API level 27.

I've found this topic  : 
[https://stackoverflow.com/questions/47531742/startforeground-fail-after-upgrade-to-android-8-1](url)

The error is not systematic and depend on the robospice service : if the service is completed when onDestroy is called => no crash, if the service is still running => crash.

I'm not 100% that the crash is due to Robospice, but I do not use notification manager in my code, and it always crash when leaving the app with service un background.

Here is the full error in logcat : 
E/UncaughtException: android.app.RemoteServiceException: Bad notification for startForeground: java.lang.RuntimeException: invalid channel for service notification: Notification(channel=null pri=-2 contentView=null vibrate=null sound=null defaults=0x0 flags=0x40 color=0x00000000 vis=PRIVATE)
                                            at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1768)
                                            at android.os.Handler.dispatchMessage(Handler.java:106)
                                            at android.os.Looper.loop(Looper.java:164)
                                            at android.app.ActivityThread.main(ActivityThread.java:6494)
                                            at java.lang.reflect.Method.invoke(Native Method)
                                            at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:438)
                                            at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:807)

Thanks for your help.
How would RoboSpice interact within the new MVVM Architecture Components introduced at Google IO 2017? Considering we'd have a data layer consisting of repositories which fetch data from a web API and store that data inside an ORM, all of this without taking life-cycle into account and the view layer not knowing anything about the data layer (thus not being able to start/stop the SpiceManager inside Activities and Fragments).

I've tried to search the issues for relevant threads and the best I could find was this one from 3 years ago: https://github.com/stephanenicolas/robospice/issues/211

Architecture Components reference: https://developer.android.com/topic/libraries/architecture/index.html
**Here is the error message:**
 com.android.build.api.transform.TransformException: java.util.zip.ZipException: duplicate entry: org/apache/commons/io/CopyUtils.class

**If I try to include it in the following way. It gives some bugs(some request doesn't gives  the response )**
/*compile ('com.octo.android.robospice:robospice-spring-android:1.4.14'){
        exclude group: 'org.apache.commons', module: 'commons-io'
    }*/
    //compile 'commons-io:commons-io:1.3.2'

Hello,

I am looking for a way to download a file from server, I see two options, one of them is to use: `BinaryRequest` but it works only if you pass the total path of the file, for example: `"https://www.ietf.org/rfc/rfc2616.txt"`, and I need to send parameters to the server in this way:  `api/SomeServiceTranslationFile?Language=en"`, in that request I send the parameter "en" and RS responds with a  `Java.io.FileNotFoundException:` .

The other way is to make use of  `RetrofitSpiceRequest <InputStream, MyInterface>` , here I send my parameters like any other request, however, the response is treated to be parsed by GSON
`An exception occurred during request network execution :Failed to invoke public java.io.InputStream() with no args
                                                                                       retrofit.RetrofitError: Failed to invoke public java.io.InputStream() with no args`


Have any suggestions?

How do the new background service limitations in the newest Android O Developer Preview affect RoboSpice? Even on earlier releases, when the Activity goes into background and a request hasn't finished yet, a blank notification is being shown.

Reference: https://developer.android.com/preview/features/background.html#services
`BigBinaryRequest` doesn't allow customizing request headers (passing auth headers).
Tried overriding `loadDataFromNetwork` request to create `HttpURLConnection` instance and setting headers but seems like `loadDataFromNetwork` is a final method at `BinaryRequest` and hence cannot be overridden.

Is there any way to use `BigBinaryRequest` with headers. I would like to get benefit of cache file too (Otherwise I could make use of normal request and write received byte array).

Thanks
This method was working fine in version 1.4.11. But to fix one issue https://github.com/stephanenicolas/robospice/issues/91
We upgraded robospice version to 1.4.13

After that removeDataFromCache(Class clazzm, Object cacheKey) is not working.

Is it known issue or we are missing something in latest version?
Hi.
i am using this library in conjunction with spring (using the class SpringAndroidSpiceRequest).

here is my load data from network:

```
@Override
	public T loadDataFromNetwork() throws Exception
	{
		HttpHeaders headers = new HttpHeaders();

		headers.add("Accept", "application/vnd.github.v3+json");

		headers.add("Authorization", User.getCurrentUserAuthenticationValue());

		if(mHttpMethod == HttpMethod.PUT)
		{
			headers.add("Content-Length", "0");
		}

		ResponseEntity<T> entity = getRestTemplate().exchange(mUrl, mHttpMethod, new HttpEntity<>(headers), mResponseType);

		mResponseHeaders = entity.getHeaders();

		return entity.getBody();
}
```

the problem is that for some reason mResponseHeaders is missing some headers, in particular one that is called "Link"

the header exists if i send the same request via web browser (using the DHC plugin):

![4444444444444](https://cloud.githubusercontent.com/assets/17179542/20554379/2c11a524-b164-11e6-8c2d-b27b61d90610.JPG)


am i doing something wrong? any ideas?
I ran into Robospice by looking at another Android project.  From my understanding Robospice has the ability to convert POST requests to binary before sending them over the HTTP protocol? am I correct?

Can Robospice convert the binary data back to something human readable? 

I would appreciate any information regarding the issue.