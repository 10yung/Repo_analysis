This allows for the histdb script to be loaded with oh-my-zsh. Useful for use in tandem with https://github.com/zsh-users/zsh-completions
Just started getting this error on fresh install of Ubuntu 18.04. 
```
Linux 4.18.0-15-generic #16~18.04.1-Ubuntu SMP Thu Feb 7 14:06:04 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux
zsh 5.4.2 (x86_64-ubuntu-linux-gnu)
sqlite3 3.22.0 2018-01-22 18:45:57 0c55d179733b46d8d0ba4d88e01a25e10677046ee3da1d5b1581e86726f2alt1
```

Currently at master 873610f. Typing `histdb` shows 
```
Error: no such column: true
Error: no such column: true
error in -header -separator                          select strftime(case when datetime(max_start, 'unixepoch') > datetime('now', 'start of day') then '%H:%M' else '%d/%m' end, max_start, 'unixepoch', 'localtime') as time, session as ses, dir, argv as cmd from (select session, replace(places.dir, '/home/user', '~') as dir, replace(commands.argv, '
', '
') as argv, max(start_time) as max_start
from
  commands 
  join history on history.command_id = commands.id
  join places on history.place_id = places.id
where true and places.host='guibox'
group by history.command_id, history.place_id
order by max_start desc
limit 20) order by max_start asc
histdb:211: bad math expression: operator expected at `in select ...'
```

If I checkout 9598f2f and restart zsh, the error goes away. 
I tried to install this plugin on my vm.
Found an error with `Error: no such column: true`.
![image](https://user-images.githubusercontent.com/1673006/68090782-e4563700-feb2-11e9-9b5a-3fca159607e2.png)

Spend quite a few time on this issue. Turns out it's quite easy. The sqlite3 **version** need to be > 3.23.0.
> https://stackoverflow.com/questions/2510652/is-there-a-boolean-literal-in-sqlite

I think it is necessary to add it to the readme, help people like me to save some time.
Hi 

> For wildcards within a history line, you can use the % character, which is like the shell glob *, so histdb this%that will match any history line containing this followed by that with zero or more characters in-between.

I tried both `this%that` and `this*that` with -d to debug. 

Turns out that `this%that` didn't work. 
And this one `histdb this\*that` works for me.

![image](https://user-images.githubusercontent.com/1673006/68085148-81e04500-fe78-11e9-9fe4-03eecba8ecdf.png)

Use the "localtime" modifier in sqlite3's datetime() function to display localtime when doing reverse isearch :)
```
os: ubuntu 18.04
zsh 5.1.1 (x86_64-ubuntu-linux-gnu), 5.4.2
zsh-histdb git sha: 882e7b6debaea5293357df888b98700e1f49f6a0
oh-my-zsh git sha: 77ad69e
```

First, I have been using histdb for about a year and I LOVE it. I started noticing issues when provisioning new systems. 

I get `zsh: histdb-update-outcome: function definition file not found` on execution of the line `add-zsh-hook precmd histdb-update-outcome`. I have another system which has been working fine for months, but now whenever I set up a new system, I get this error on every prompt. I even tried grafting my working system's `.oh-my-zsh` to a new system, to no avail. 

Also, strangely, on the new systems, `histdb` command cannot be found. This is even after running `source $HOME/.oh-my-zsh/custom/plugins/zsh-histdb/sqlite-history.zsh`. On the working system, `type histdb` yields 

```
histdb is a shell function from /home/mike/.oh-my-zsh/custom/plugins/zsh-histdb/sqlite-history.zsh
```

as expected. 
Incorporates PR #38 
I'm using these ZSH widgets for history search:

> bindkey "^[[5~" history-beginning-search-backward       # page up
> bindkey "^[[6~" history-beginning-search-forward        # page down

I'd like to use zsh-histdb the same way.
fresh install install using the suggested `oh-my-zsh` plugin dir and after adding commands to `~/.zshrc`:

```
Error: incomplete SQL: PRAGMA user_version = 2
error in
History database /home/max/.histdb/zsh-history.db is using an older schema (0) and will be updated to version 2.
Backing up database to /home/max/.histdb/zsh-history.db-1563991992.bak before migration
cp: missing destination file operand after '/home/max/.histdb/zsh-history.db-1563991992.bak'
Try 'cp --help' for more information.
Update successful (you may want to remove the backup)
```

it looks like `HISTDB_FILE` isn't being set correctly - but i'm not sure. 

there's also no backup present, so that flow looks incorrect. 
If I call `histdb --in` while in `~/dev/vim`, it yields results from `~/dev/vim` as well as `~/dev/vimrc`. I assume the logic that is meant to handle the "current dir or below" logic is using some kind of simple substring matching, therefore seeing `~/dev/vimrc` as including the substring `~/dev/vim` and returning a match.

In fact, it seems that's exactly what's happening: https://github.com/larkery/zsh-histdb/blob/0a7a52a59fbc3244392ef5d19ef7c4d6f0b8838b/sqlite-history.zsh#L220