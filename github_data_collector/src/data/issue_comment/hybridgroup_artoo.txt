I use HM11 Bluetooth card. How I can connect it with artoo.

Also how I can use arduino libraries? Example sensor libraries.
https://github.com/hybridgroup/artoo/issues/171
https://github.com/hybridgroup/artoo/blob/e5e67f6659fa3c5530d28a2a324810c7673e8735/lib/artoo/adaptors/io/digital_pin.rb#L17

When you open file in Ruby using `File.open` with block, file closes automatically.

```
File.open(...){ |f| f << something }
```

You need to close file only if you use `open` without block. It this case `open` is just synonym for `new`

```
f = File.open(...)
f << something
f.close
```
Hi!
I'm trying to run the blinking example with an Arduino MEGA2560.
These are the steps I followed:

$ gort scan serial
```
/dev/cu.Bluetooth-Incoming-Port		/dev/tty.Bluetooth-Incoming-Port
/dev/cu.usbmodem1421			/dev/tty.usbmodem1421
```

So I changed the adaptor to port => '/dev/tty.usbmodem1421' (also tried with /dev/cu.usbmodem1421 having the same result)

Then gort arduino install and it installed avrdude successfully.
Now I run:

$ gort arduino upload firmata /dev/tty.usbmodem1421 -b mega2560
```
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.01s

avrdude: Device signature = 0x1e9801 (probably m2560)
avrdude: reading input file "/var/folders/2l/2x1l6t5530s25fzgvyfzdp_r0000gn/T/816739554"
avrdude: writing flash (12224 bytes):

Writing | ################################################## | 100% 1.97s

avrdude: 12224 bytes of flash written
avrdude: verifying flash memory against /var/folders/2l/2x1l6t5530s25fzgvyfzdp_r0000gn/T/816739554:
avrdude: load data flash data from input file /var/folders/2l/2x1l6t5530s25fzgvyfzdp_r0000gn/T/816739554:
avrdude: input file /var/folders/2l/2x1l6t5530s25fzgvyfzdp_r0000gn/T/816739554 contains 12224 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 1.57s

avrdude: verifying ...
avrdude: 12224 bytes of flash verified

avrdude done.  Thank you.

```

According to the output of that command, the firmata software was successfully loaded. So the only thing left to do is run the program:

$ ruby blink_led.rb
```
I, [2017-08-01T19:48:42.463021 #22491]  INFO -- : Registering connection 'arduino'...
I, [2017-08-01T19:48:42.463138 #22491]  INFO -- : Registering device 'board'...
I, [2017-08-01T19:48:42.463169 #22491]  INFO -- : Registering device 'led'...
I, [2017-08-01T19:48:42.463193 #22491]  INFO -- : Preparing work...
I, [2017-08-01T19:48:42.463942 #22491]  INFO -- : Initializing artoo::connection arduino...
I, [2017-08-01T19:48:42.472186 #22491]  INFO -- : Initializing artoo::device board...
I, [2017-08-01T19:48:42.473928 #22491]  INFO -- : Initializing artoo::device led...
I, [2017-08-01T19:48:42.476191 #22491]  INFO -- : Starting work...
I, [2017-08-01T19:48:42.476433 #22491]  INFO -- : Connecting to 'arduino' on port '/dev/cu.usbmodem1421'...
```
And it just hangs there.

I'm running macOS Sierra 10.12.5 and ruby version 2.2.2 (as needed by artoo-arduino dependencies)

I saw this same issue hapening in gobot: https://github.com/hybridgroup/gobot/issues/374
They resolved it applying some changes. Could Artoo be having the same issues?

Thanks

Have you guys looked at GrovePi or Arduberry. Any chance you might support either?

Is it possible to control an Arduino slave via RPi both of which can leverage your DSL?

It's unclear which Sphero models are supported.  I'm specifically interested in the BB-8, but it would be helpful if the Sphero page mentioned all supported and unsupported models.  

If the answer is simply "all models", it would be helpful to either say "all models as of X/Y/Z date" or else still list them individually, since simply saying "all models" may become untrue at some point in the future with the introduction of a new model that breaks backwards compatibility.

Thanks.

So the GPIO documentation for the Raspberry Pi does not include sensors? Why not? Does the sensor interface not work for RPi?

Hi hybridgroup. How can i make blink led robot same first video http://artoo.io/videos/ and running independently of the physical computer? 
