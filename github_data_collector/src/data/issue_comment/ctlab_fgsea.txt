Is it possible to add an option to add ranks labels to `plotEnrichment()`? Currently, it is not possible to determine the ranks order from the plot without some additional information. For example, if you are comparing KO to WT, it would be helpful add "KO" and "WT" to opposite ends of the X (ranks) axis.

Here is an example from `limma::barcodeplot()` to illustrate what I am trying convey:
![image](https://user-images.githubusercontent.com/6363505/70381386-6d7be600-1917-11ea-99de-4526c2a38b18.png)

If that is outside the scope of this package, do you have any suggestions on how to best add something like that with least interference with other elements?

Hi! Would it be possible to add arguments to modify plots? Especially the output of the function plotGseaTable is a bit limited and changing fonts and colors of signaling pathways and bars could be nice. Maybe that would be possible by altering the source code, but was not able to do that.

Nonetheless, this is a very nice and efficient package!
This may be outside of the desired scope of your software, but it would be quite useful if fgsea could be extended to support one-tailed GSEA tests.

This way, fgsea could be used to analyze other non-expression single-tailed gene statistics, and could also be used to look `abs(fold change)` rankings.

Here is an example of another package which implements such an approach:

- https://www.ncbi.nlm.nih.gov/pmc/articles/PMC5102490/
- https://cran.r-project.org/web/packages/AbsFilterGSEA/AbsFilterGSEA.pdf
Hello,

First of all, thanks for writing/maintaining such a fantastic package!  I have recently encountered an issue with the collapsePathways() function in fgsea 1.6.0, in which I get the following error after a successful fgsea() run: "Error in FUN(X[[i]], ...) : 
  GSEA statistic is not defined when all genes are selected"  

I am running collapsePathways() as described in the vignette (see below) though filtering my input fgseaRes df such that padj < 0.05 rather than 0.01.  On some datasets this has worked fine but on others I get the above error.  Interestingly, lowering the padj threshold down to 0.01 alleviates the problem.  Any help understanding this would be much appreciated!

I've added some code below showing my calls, error messages, and sessionInfo().  The .gmt file was downloaded from MSigDB.  I'd also be happy to email a file containing the gene ranking for proper reproducibility if that would be helpful.

Thanks again!
Andrew

```
head(ranked_genes)
``` 
```
   KLHL1   SLC6A5     LBX1    LRP1B    GLRA2   TRIM67 
4021.458 3393.911 3320.055 2859.702 2844.379 2825.953
```

```
bp_go <- gmtPathways("/home/andrew/projects/daily_log/09292018/c5.bp.v6.2.symbols.gmt")

fgseaRes <- fgsea(pathways = bp_go, 
                  stats = ranked_genes,
                  minSize=15,
                  maxSize=1000,
                  nperm=100000)
```

fgsea runs normally as far as I can tell - only warning me about some ties:

`Warning message:
In fgsea(pathways = bp_go, stats = ranked_genes, minSize = 15, maxSize = 1000,  :
  There are ties in the preranked stats (0.18% of the list).
The order of those tied genes will be arbitrary, which may produce unexpected results.`

The results are expected for my data and give a number of significant categories:

```
fgseaRes %>% arrange(pval) %>% select(pathway, pval, padj, ES, NES, nMoreExtreme, size) %>% head()
```

| pathway                                     | pval     | padj        | ES        | NES      | nMoreExtreme | size |
|---------------------------------------------|----------|-------------|-----------|----------|--------------|------|
| GO_NEUROGENESIS                             | 1.00E-05 | 0.006736106 | 0.7743695 | 1.315848 | 0            | 960  |
| GO_CENTRAL_NERVOUS_SYSTEM_DEVELOPMENT       | 1.00E-05 | 0.006736106 | 0.8157949 | 1.384007 | 0            | 615  |
| GO_REGULATION_OF_NERVOUS_SYSTEM_DEVELOPMENT | 1.00E-05 | 0.006736106 | 0.7999929 | 1.355705 | 0            | 523  |
| GO_HEAD_DEVELOPMENT                         | 1.01E-05 | 0.006736106 | 0.8081064 | 1.369204 | 0            | 513  |
| GO_CELL_CELL_SIGNALING                      | 2.04E-05 | 0.009308852 | 0.8186953 | 1.378237 | 1            | 344  |
| GO_SYNAPTIC_SIGNALING                       | 2.08E-05 | 0.009308852 | 0.8530924 | 1.420684 | 1            | 229  |

```
collapsedPathways <- collapsePathways(fgseaRes[order(pval)][padj < 0.05], 
                                      bp_go, ranked_genes)
```

Running collapsePathways() as above, though, gives the below error.  Running it with padj < 0.01 instead eliminates the error and returns a result (though still producing the tie warnings).

```
Error in FUN(X[[i]], ...) : 
  GSEA statistic is not defined when all genes are selected
In addition: Warning messages:
1: In fgsea(pathways = pathways[pathwaysToCheck], stats = stats[u1],  :
  There are ties in the preranked stats (0.17% of the list).
The order of those tied genes will be arbitrary, which may produce unexpected results.
2: In fgsea(pathways = pathways[pathwaysToCheck], stats = stats[u2],  :
  There are ties in the preranked stats (0.1% of the list).
The order of those tied genes will be arbitrary, which may produce unexpected results.
3: In fgsea(pathways = pathways[pathwaysToCheck], stats = stats[u1],  :
  There are ties in the preranked stats (0.16% of the list).
The order of those tied genes will be arbitrary, which may produce unexpected results.
4: In fgsea(pathways = pathways[pathwaysToCheck], stats = stats[u2],  :
  There are ties in the preranked stats (0.16% of the list).
The order of those tied genes will be arbitrary, which may produce unexpected results.
5: In fgsea(pathways = pathways[pathwaysToCheck], stats = stats[u1],  :
  There are ties in the preranked stats (0.17% of the list).
The order of those tied genes will be arbitrary, which may produce unexpected results.
6: In fgsea(pathways = pathways[pathwaysToCheck], stats = stats[u2],  :
  There are ties in the preranked stats (0.29% of the list).
The order of those tied genes will be arbitrary, which may produce unexpected results.
7: In fgsea(pathways = pathways[pathwaysToCheck], stats = stats[u1],  :
  There are ties in the preranked stats (0.18% of the list).
The order of those tied genes will be arbitrary, which may produce unexpected results.
8: In fgsea(pathways = pathways[pathwaysToCheck], stats = stats[u1],  :
  There are ties in the preranked stats (0.18% of the list).
The order of those tied genes will be arbitrary, which may produce unexpected results.
9: In fgsea(pathways = pathways[pathwaysToCheck], stats = stats[u1],  :
  There are ties in the preranked stats (0.16% of the list).
The order of those tied genes will be arbitrary, which may produce unexpected results.
```

```
sessionInfo()

R version 3.5.1 (2018-07-02)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Ubuntu 16.04.4 LTS

Matrix products: default
BLAS: /usr/lib/libblas/libblas.so.3.6.0
LAPACK: /usr/lib/lapack/liblapack.so.3.6.0

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C               LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    
 [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8    LC_PAPER=en_US.UTF-8       LC_NAME=C                 
 [9] LC_ADDRESS=C               LC_TELEPHONE=C             LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       

attached base packages:
[1] parallel  stats4    stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
 [1] bindrcpp_0.2.2              fgsea_1.6.0                 Rcpp_0.12.18                DESeq2_1.20.0              
 [5] SummarizedExperiment_1.10.1 DelayedArray_0.6.5          BiocParallel_1.14.2         Biobase_2.40.0             
 [9] GenomicRanges_1.32.6        GenomeInfoDb_1.16.0         IRanges_2.14.11             S4Vectors_0.18.3           
[13] BiocGenerics_0.26.0         tximport_1.8.0              matrixStats_0.54.0          genefilter_1.62.0          
[17] ballgown_2.12.0             forcats_0.3.0               stringr_1.3.1               dplyr_0.7.6                
[21] purrr_0.2.5                 readr_1.1.1                 tidyr_0.8.1                 tibble_1.4.2               
[25] ggplot2_3.0.0               tidyverse_1.2.1            

loaded via a namespace (and not attached):
 [1] nlme_3.1-137             bitops_1.0-6             lubridate_1.7.4          bit64_0.9-7              RColorBrewer_1.1-2      
 [6] httr_1.3.1               tools_3.5.1              backports_1.1.2          R6_2.2.2                 rpart_4.1-13            
[11] Hmisc_4.1-1              DBI_1.0.0                lazyeval_0.2.1           mgcv_1.8-24              colorspace_1.3-2        
[16] nnet_7.3-12              withr_2.1.2              gridExtra_2.3            tidyselect_0.2.4         bit_1.1-14              
[21] compiler_3.5.1           cli_1.0.0                rvest_0.3.2              htmlTable_1.12           xml2_1.2.0              
[26] labeling_0.3             rtracklayer_1.40.6       checkmate_1.8.5          scales_1.0.0             digest_0.6.17           
[31] Rsamtools_1.32.3         foreign_0.8-71           XVector_0.20.0           htmltools_0.3.6          base64enc_0.1-3         
[36] pkgconfig_2.0.2          limma_3.36.3             htmlwidgets_1.2          rlang_0.2.2              readxl_1.1.0            
[41] rstudioapi_0.7           RSQLite_2.1.1            bindr_0.1.1              jsonlite_1.5             acepack_1.4.1           
[46] RCurl_1.95-4.11          magrittr_1.5             GenomeInfoDbData_1.1.0   Formula_1.2-3            Matrix_1.2-14           
[51] munsell_0.5.0            stringi_1.2.4            zlibbioc_1.26.0          plyr_1.8.4               grid_3.5.1              
[56] blob_1.1.1               crayon_1.3.4             lattice_0.20-35          Biostrings_2.48.0        haven_1.1.2             
[61] splines_3.5.1            annotate_1.58.0          hms_0.4.2                locfit_1.5-9.1           knitr_1.20              
[66] pillar_1.3.0             geneplotter_1.58.0       fastmatch_1.1-0          XML_3.98-1.16            glue_1.3.0              
[71] latticeExtra_0.6-28      data.table_1.11.4        modelr_0.1.2             cellranger_1.1.0         gtable_0.2.0            
[76] assertthat_0.2.0         xtable_1.8-3             broom_0.5.0              survival_2.42-6          GenomicAlignments_1.16.0
[81] AnnotationDbi_1.42.1     memoise_1.1.0            cluster_2.0.7-1          sva_3.28.0 

```
[ranked_genes.tsv.gz](https://github.com/ctlab/fgsea/files/2461663/ranked_genes.tsv.gz)
[c5.bp.v6.2.symbols.gmt.gz](https://github.com/ctlab/fgsea/files/2461664/c5.bp.v6.2.symbols.gmt.gz)


I found that this error occurs when the input named vector of scores contain NA values.

```
plotEnrichment(zebrafish_GO[["extracellular_matrix(2)"]], ranked_vec)
Error in if (NR == 0) { : missing value where TRUE/FALSE needed
traceback()
2: calcGseaStat(statsAdj, selectedStats = pathway, returnAllExtremes = TRUE)
1: plotEnrichment(zebrafish_GO[["extracellular_matrix(2)"]], ranked_vec)

```

It might be nice to check for NAs in the input and give a more informative error.

By the way, fgsea() does not give an error given the same  NA-containing input.
Hi, great package.
I am wondering how it is manage when the metric of the ranked genes it is a tie, this for values not equal to 0.   

The Broad Institute java software has a warning [about this](http://software.broadinstitute.org/gsea/doc/GSEAUserGuideFrame.html?_GSEAPreranked_Page), but I did not find any information about it in the preprint nor the vignette.
    
Should ties be solve with jittering the duplicated values?  or a warning be printed when there are ties in the ranked gene list?