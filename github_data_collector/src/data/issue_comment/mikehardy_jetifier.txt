Changes:
- pretifier the code
- added includes/excludes/mapping CLI options
- added androidx webkit package processing
- added ability to verbose CLI actions
It seems that this library by design reads java files, xml files and kotlin files - but not build.gradle-files. This causes my project to not convert properly, since I have the following modules that aren't updated:

    // react-native-cross-geolication:
    implementation "com.android.support:appcompat-v7:${_supportLibVersion}"
    
    // react-native-maps:
    implementation "com.android.support:appcompat-v7:${safeExtGet('supportLibVersion', '28.0.0')}"
    
    // react-native-camera:
    implementation "com.android.support:exifinterface:${safeExtGet('supportLibVersion', '27.1.0')}"
    implementation "com.android.support:support-annotations:${safeExtGet('supportLibVersion', '27.1.0')}"
    implementation "com.android.support:support-v4:${safeExtGet('supportLibVersion', '27.1.0')}"

The refactoring tool in Android Studio catches these, and changes the files respectively to:

    // react-native-cross-geolication:
    implementation "androidx.appcompat:appcompat:${_supportLibVersion}"
    
    // react-native-maps:
    
    implementation "androidx.appcompat:appcompat:1.0.0-beta01"
    
    // react-native-camera:
    
    implementation "androidx.exifinterface:exifinterface:1.0.0-beta01"
    implementation "androidx.annotation:annotation:1.0.0-beta01"
    implementation "androidx.legacy:legacy-support-v4:1.0.0-beta01"

I can of course manually  run the refactoring tool in Android Studio when required, but maybe there's a way to make this tool handle these cases as well?
after a yarn command, I execute on postInstall
    npx jetify

I get no errors but npx never ends! After waiting 10 minutes I had to cut it. No error or logs:
![image](https://user-images.githubusercontent.com/14353978/61669375-3b465080-acb6-11e9-81ec-a709499a7888.png)

I have installed npx globally.

What am I doing wrong?

Thanks
`jetifxy android/**`

this could help react-native bridge package maintainers to easily transform their libraries
it would be cool to run `jetify` on all node_modules of a yarn monorepo