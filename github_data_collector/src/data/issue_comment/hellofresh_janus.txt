
I'm trying to run "janus 3.8.18-10d2b39 (janus_windows-amd64.exe)" into "Windows 10 x64".
But always hit the same error.  I try it in _CMD.EXE_ and _x86_64-w64-mingw32_.

**Reproduction Steps:**

1. Downloaded <https://github.com/hellofresh/janus/releases/download/3.8.18/janus_windows-amd64.tar.gz>
2. Created a basic "**janus.toml**"
3. Started as "**janus_windows-amd64.exe start --config ./janus.toml**"


**Observed behavior:**

==> OUTPUT ERROR:

`time="2020-01-08T08:04:04-03:00" level=info msg="Janus starting..." version=3.8.18-10d2b39
[StatsGo] 2020/01/08 08:04:04 Stats counter incremented metric=app.init.ES9905-F9843094.janus__windows-amd64_exe
[StatsGo] 2020/01/08 08:04:04 Stats counter incremented metric=total.app
{"level":"info","msg":"Invalid or no stats exporter was specified","stats.exporter":"","time":"2020-01-08T08:04:04-03:00"}
{"level":"info","msg":"Invalid or no tracing exporter was specified","time":"2020-01-08T08:04:04-03:00","tracing.exporter":"None"}
Error: could not build a repository for the database: could not create a file system repository: open /etc/janus/apis: O sistema não pode encontrar o caminho especificado.
`

**Environment:**

```
$ stat /etc/ /etc/janus
  File: /etc/
  Size: 0               Blocks: 4          IO Block: 65536  directory
Device: 542d3607h/1412249095d   Inode: 1125899906971290  Links: 1
Access: (0755/drwxr-xr-x)  Uid: (197609/ Willian)   Gid: (197121/ UNKNOWN)
Access: 2020-01-07 13:36:34.681643700 -0300
Modify: 2020-01-07 13:36:34.681643700 -0300
Change: 2020-01-07 13:36:34.681643700 -0300
 Birth: 2019-12-18 10:57:58.133897500 -0300
  File: /etc/janus
  Size: 0               Blocks: 0          IO Block: 65536  directory
Device: 542d3607h/1412249095d   Inode: 1407374883759239  Links: 1
Access: (0755/drwxr-xr-x)  Uid: (197609/ Willian)   Gid: (197121/ UNKNOWN)
Access: 2020-01-07 13:41:49.071859600 -0300
Modify: 2020-01-07 13:41:49.071859600 -0300
Change: 2020-01-07 13:41:49.071859600 -0300
 Birth: 2020-01-07 13:36:34.681643700 -0300
```

**Janus version:** janus 3.8.18-10d2b39
**OS and version:** Windows 10 x64

Thanks!

[@WillianBR](https://api.whatsapp.com/send?phone=5561999881277&text=ABOUT%3A%20janus%203.8.18-10d2b39%20(janus_windows-amd64.exe)%20at%20https%3A%2F%2Fgithub.com%2Fhellofresh%2Fjanus)

Hi,
I'm trying to set oauth2 plugin for endpoint. When I set the token_strategy as jwt, it showed that I need authentication, and then it went throug after I got a token from oauth server. However, when I set the token_strategy as introspection, it just went through without a valid token.

Here's my config for oauth2 plugin:
```
{
    "name": "local",
    "oauth_endpoints": {
        "introspect": {
            "preserve_host": false,
            "listen_path": "/auth/token2",
            "upstreams": {
                "balancing": "roundrobin",
                "targets": [{
                    "target": "http://192.168.10.213:8080/hello/d"
                }]
            },
            "strip_path": true,
            "append_path": false,
            "methods": [
                "GET",
                "POST"
            ]
        }
    },
    "token_strategy": {
        "name": "introspection",
        "settings": {
            "use_auth_header": true,
            "auth_header_type": "token"
        }
    }
}
```
jwt config is 
```
{
    "name": "local",
    "oauth_endpoints": {
        "token": {
            "preserve_host": false,
            "listen_path": "/auth/token",
            "upstreams": {
                "balancing": "roundrobin",
                "targets": [{
                    "target": "http://192.168.10.213:8080/hello/c"
                }]
            },
            "strip_path": true,
            "append_path": false,
            "methods": [
                "GET",
                "POST"
            ]
        }
    },
    "token_strategy": {
        "name": "introspection",
        "settings": [
            {"alg": "HS256", "key" : "secret"}
        ]
    }
}
```
Both of **_token_strategy.settings_** maybe  conflict？？

Because I found that log is :
```
{
	"log": "{\"api_name\":\"example\",\"error\":\"You need to set a JWT secret\",\"level\":\"error\",
  		\"msg\":\"Error executing plugin\",\"name\":\"oauth2\",\"time\":\"2019-12-31T23:20:05+08:00\"}\n",
	"stream": "stderr",
	"time": "2019-12-31T15:20:05.396673601Z"
}
```
> Note: This project is in maintenance mode. There will be bug fixes, but no feature development

you guys not developing it anymore ? can I ask for the reason if you don't mind, we are using should we look for alternative ?
[Short description of problem here]

I am thinking:janus as an api gateway to proxy upstream api serice,can it proxy the total web page with sub request of css、js、png so on.

**Reproduction Steps:**

1. [First Step]
Create an API Definition with
Set the listen_path as :/something,
Set the upstream target as: http://my.private.blogsite.com(some real blog site)
2. [Second Step]
visit http://localhost:8080/something
3. [Other Steps...]
got the page with single html,but the page's css、js、png got the 404 response（which are the request in the html some like:/css/blog.css、/js/jquery-1.11.3.min.js、/img/favicon.png）

**Expected behavior:**
proxy all the regular target ,just like nginx.as so the css、png、js can also be proxied

[Describe expected behavior here]
can the upstream target can be set with the same rule as listen_path,es：http://my.private.blogsite.com/*

[Short description of problem here]

**Reproduction Steps:**

1. [First Step]
    I want my gateway to support https. I refer to the configuration in janus-tls under example, but my client will get the error message of ssl error protocol during the access process
2. [Second Step]
    This situation is random, can be temporarily solved by restarting the gateway, I tried some methods on the Internet, such as modifying the system time, etc. can not completely solve this problem.
**Expected behavior:**

[Successful access to my api]

**Observed behavior:**

[Browser randomness ssl error protocol error]

**Janus version:** [ 3.8.11-rc.4  ]
**OS and version:** [ubuntu 16.04]
Please help me solve my problem，thank you.
I wonder if it should be possible to add two endpoints which have the same listen path "/" but listen on different hosts? for example the first endpoint listens on "example.org" and the second on "example1.org". As of now it doesn't seem possible?
When `oauth_servers` is updated via REST API, the changes are saved (if using mongo provider), but are not immediately loaded, requiring a server restart, or API Definition change to trigger configuration reload. It should be immediately reloaded when it is updated.

**Reproduction Steps:**
1. Create/Update/Delete an oauth server via REST API

**Expected behavior:**
Changes are immediately effective.

**Observed behavior:**
Database is updated, but janus does not reload the updated configuration.

**Janus version:** 3.8.6

**Workaround**
Sending any API Definition update will reload OAuth Server configurations as well.
When a file change is detected via `fsnotify`, janus reads [(only) the changed file](https://github.com/hellofresh/janus/blob/98b9f36d39c62193af07e0e4a8ee27068bb918bd/pkg/api/file_repository.go#L80-L104) and loads the configuration, ignoring the other configuration files.

**Reproduction Steps:**
1. Start janus using filesystem repository with > 1 configuration file
2. Update a configuration file

**Expected behavior:**
Janus should reload all the configuration files.

**Observed behavior:**
Janus crashes with segmentation fault.

[Describe observed behavior here]

**Janus version:** 3.8.6

Janus daemon is crashing on hot reload when the /etc/janus/auth directory is missing.
That seems to be because, on startup, `repo` is not built if auth directory is missing.
and on reload, the `repo` is used without any 'nil' checks.

```
Apr 23 12:48:04 mn-0 janus[17411]: time="2019-04-23T12:48:04+03:00" level=warning msg="an error occurred when an event was triggered" error="Could not create a file based repository for the oauth servers: open /etc/janus/auth: no such file or directory" event_name=startup
...
...

Apr 23 12:35:58 mn-0 janus[10631]: time="2019-04-23T12:35:58+03:00" level=debug msg="Registering a route" listen_path=/example1
Apr 23 12:35:58 mn-0 janus[10631]: time="2019-04-23T12:35:58+03:00" level=debug msg="Registering a route" listen_path="/example1/*"
Apr 23 12:35:58 mn-0 janus[10631]: time="2019-04-23T12:35:58+03:00" level=debug msg="API registered" api_name=example1
Apr 23 12:35:58 mn-0 janus[10631]: time="2019-04-23T12:35:58+03:00" level=debug msg="Event triggered" event_name=reload
Apr 23 12:35:58 mn-0 janus[10631]: panic: runtime error: invalid memory address or nil pointer dereference
Apr 23 12:35:58 mn-0 janus[10631]: [signal SIGSEGV: segmentation violation code=0x1 addr=0x0 pc=0xa72f55]
Apr 23 12:35:58 mn-0 janus[10631]: goroutine 14 [running]:
Apr 23 12:35:58 mn-0 janus[10631]: github.com/hellofresh/janus/pkg/plugin/oauth2.(*FileSystemRepository).FindAll(0x0, 0xc0002765f0, 0xc00009e0a0, 0xc0001f4c90, 0xbf27d4ff8ab85f54, 0x1238f17533)
Apr 23 12:35:58 mn-0 janus[10631]:         <autogenerated>:1 +0x5
Apr 23 12:35:58 mn-0 janus[10631]: github.com/hellofresh/janus/pkg/plugin/oauth2.(*OAuthLoader).getOAuthServers(0x0, 0xe5cc00, 0x0, 0xc00009e0a0, 0xc0001f4c90, 0x0)
Apr 23 12:35:58 mn-0 janus[10631]:         /root/containerfolder/src/github.com/hellofresh/janus/pkg/plugin/oauth2/loader.go:80 +0x49
Apr 23 12:35:58 mn-0 janus[10631]: github.com/hellofresh/janus/pkg/plugin/oauth2.(*OAuthLoader).LoadDefinitions(0x0, 0xe5cc00, 0x0)
Apr 23 12:35:58 mn-0 janus[10631]:         /root/containerfolder/src/github.com/hellofresh/janus/pkg/plugin/oauth2/loader.go:25 +0x3f
Apr 23 12:35:58 mn-0 janus[10631]: github.com/hellofresh/janus/pkg/plugin/oauth2.onReload(0xc34b20, 0xc000272420, 0xd2f370, 0x6)
Apr 23 12:35:58 mn-0 janus[10631]:         /root/containerfolder/src/github.com/hellofresh/janus/pkg/plugin/oauth2/setup.go:60 +0x5a
Apr 23 12:35:58 mn-0 janus[10631]: github.com/hellofresh/janus/pkg/plugin.EmitEvent(0xd2f370, 0x6, 0xc34b20, 0xc000272420, 0x0, 0x0)
Apr 23 12:35:58 mn-0 janus[10631]:         /root/containerfolder/src/github.com/hellofresh/janus/pkg/plugin/plugin.go:99 +0x177
Apr 23 12:35:58 mn-0 janus[10631]: github.com/hellofresh/janus/pkg/server.(*Server).handleEvent(0xc000122770, 0xc000269f40)
Apr 23 12:35:58 mn-0 janus[10631]:         /root/containerfolder/src/github.com/hellofresh/janus/pkg/server/server.go:352 +0x14c
Apr 23 12:35:58 mn-0 janus[10631]: github.com/hellofresh/janus/pkg/server.(*Server).listenProviders(0xc000122770, 0xc000092360)
Apr 23 12:35:58 mn-0 janus[10631]:         /root/containerfolder/src/github.com/hellofresh/janus/pkg/server/server.go:236 +0x161
Apr 23 12:35:58 mn-0 janus[10631]: created by github.com/hellofresh/janus/pkg/server.(*Server).StartWithContext
Apr 23 12:35:58 mn-0 janus[10631]:         /root/containerfolder/src/github.com/hellofresh/janus/pkg/server/server.go:92 +0x295
```

**Reproduction Steps:**

1. start janus without the auth directory (/etc/janus/auth by default)
2. modify the api definition json file
3. on hot reload, janus will crash

**Expected behavior:**

Janus should not crash

**Observed behavior:**

Janus crash

**Janus version:** master
**OS and version:** fedora

Hi 
We have observed some random UDP port is getting started along with Janus Server. Have already checked the code but not able to locate any such code who is opening this port.


**We are testing with janus 3.8.7-6878f19**
[fedora@robs-2018 APIGateway]$ ./janus_linux-amd64 version
janus 3.8.7-6878f19

with a sample janus.toml as 
################################################################
# Global configuration
################################################################
port = 8080
[log]
  level = "debug"
  format = "text"
################################################################
# API configuration backend
################################################################
[web]
  port = 8081
  [web.credentials]
  # The algorithm that you want to use to create your JWT
  algorithm = "HS256"
  # This is the secret that you will use to encrypt your JWT
  secret = "secret key"
  [web.credentials.basic]
  # A dictionary with the user and password
  users = [{admin = "admin"}]
[database]
  dsn = "file:///etc/janus"


**Reproduction Steps:**

./janus_linux-amd64 start -c janus.toml

[fedora@robs-2018 RCP2.0]$ ps -eaf | grep janus
fedora   30930 25242  0 09:59 pts/4    00:00:00 ./janus_linux-amd64 start -c janus.toml


[fedora@robs-2018 RCP2.0]$ netstat -lanp | grep 30930
(Not all processes could be identified, non-owned process info
 will not be shown, you would have to be root to see it all.)
tcp6       0      0 :::8081                 :::*                    LISTEN      30930/./janus_linux
tcp6       0      0 :::8080                 :::*                    LISTEN      30930/./janus_linux
**udp6       0      0 :::42106                :::*                                30930/./janus_linux**

Q: Who is opening this UDP socket and Why and how can we close it . I assume it is still in RC and not yet released one.

Q: The other questions is we are planning to use Janus in our project but not sure how widely it is used and also as the project is moved to maintenance mode how about critical BUG support ? 

I appreciate currently how it is developed and all features it supports currently but e.g TLS mode does not take the port mentioned in [TLS] field but from Global Config as listener seems to be created before this check, like this one.

Thanks in Advance
Swanand 

