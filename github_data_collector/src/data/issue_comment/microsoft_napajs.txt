in a main thread,accept request. in a child thread ,execute caculate. but in child thread, there needs other module. this module is easy using in the main thread,how can i use it in child thread or child thread used main thread context.
Hello, 

I want to use napa, but when run my following simple code:
```javascript
const napa = require('napajs');
    const zone1 = napa.zone.create('zone1', { workers: 2 });

    // Broadcast code to all 4 workers in 'zone1'.
    zone1.broadcast('console.log("hello world");');
``` 
it throw error:
```shell
Error: dlopen(xxx/node_modules/napajs/bin/napa-binding.node, 1): no suitable image found.  Did find:
        xxx/node_modules/napajs/bin/napa-binding.node: unknown file type, first eight bytes: 0x4D 0x5A 0x90 0x00 0x03 0x00 0x00 0x00
        xxx/node_modules/napajs/bin/napa-binding.node: unknown file type, first eight bytes: 0x4D 0x5A 0x90 0x00 0x03 0x00 0x00 0x00
    at Object.Module._extensions..node (module.js:681:18)
    at Module.load (module.js:565:32)
    at tryModuleLoad (module.js:505:12)
    at Function.Module._load (module.js:497:3)
    at Module.require (module.js:596:17)
    at require (internal/module.js:11:18)
    at Object.<anonymous> (xxx/node_modules/napajs/lib/binding.js:2:22)
```

my node version is v8.11.4, npm version is 6.10.1 on Mac.
notice that the install script is trying to get release v67 but looking at the releases page the asset is **v64**

```
node-pre-gyp ERR! node -v v11.9.0
node-pre-gyp ERR! node-pre-gyp -v v0.6.39
node-pre-gyp ERR! not ok 
404 status code downloading tarball https://github.com/Microsoft/napajs/releases/download/0.4.0-pre/napa-v0.4.0-pre-node-v67-linux-x64.tar.gz
```
 use electron-quick-start  add napajs 

 **D:\project> node -v**
  v10.15.3 

download  https://github.com/Kitware/CMake/releases/download/v3.14.0-rc4/cmake-3.14.0-rc4-win64-x64.msi   
 install cmake 

**D:\project>cmake -version**
cmake version 3.14.0-rc4

**D:\project>npm install -g cmake-js** 
**D:\project>cmake-js --version**

[ 'D:\\Program Files\\nodejs\\node.exe',
  'C:\\Users\\MyPC\\AppData\\Roaming\\npm\\node_modules\\cmake-js\\bin\\cmake-js',
  '--version' ]
5.1.0

**D:\project> git clone https://github.com/electron/electron-quick-start**
**D:\project> cd  electron-quick-start**
**D:\project\electron-quick-start> npm install** 
**D:\project\electron-quick-start> npm install napajs --save**

goto  https://visualstudio.microsoft.com/downloads/#build-tools-for-visual-studio-2017  websize 
![image](https://user-images.githubusercontent.com/1456271/54326342-18899880-4641-11e9-8854-94bb8f05649a.png)




D:\project\electron-quick-start>cd  node_modules\napajs\


package.json


 {
  "_from": "napajs",
  "_id": "napajs@0.2.3",
  "_inBundle": false,
  "_integrity": "sha512-42KQsVd8rUBs8+OtUh99R0ID5+u0895XMITgfRdmKxvhV1p9zo41gX/J5yxwONpTJfMyALGh62WiN4CmSXaMIw==",
  "_location": "/napajs",
  "_phantomChildren": {},
  "_requested": {
    "type": "tag",
    "registry": true,
    "raw": "napajs",
    "name": "napajs",
    "escapedName": "napajs",
    "rawSpec": "",
    "saveSpec": null,
    "fetchSpec": "latest"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/napajs/-/napajs-0.2.3.tgz",
  "_shasum": "51b3f946f0b517ea73915c48c9b9b93a5971e8c4",
  "_spec": "napajs",
  "_where": "D:\\project\\electron-quick-start",
  "author": {
    "name": "napajs"
  },
  "binary": {
    "module_name": "napa-binding",
    "module_path": "./bin/",
    "host": "https://github.com/Microsoft/napajs/releases/download/",
    "remote_path": "{version}"
  },
  "bugs": {
    "url": "https://github.com/Microsoft/napajs/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "node-pre-gyp": "^0.6.36",
    "npmlog": "^4.1.2",
    "semver": "^5.5.0"
  },
  "deprecated": false,
  "description": "Napa.js is a multi-threaded JavaScript runtime built on V8",
  "devDependencies": {
    "@types/mocha": "^2.2.41",
    "@types/node": "^8.0.22",
    "markdown-table": "^1.1.1",
    "mocha": "^3.5.0",
    "node-pre-gyp-github": "^1.3.1",
    "typescript": "^2.4.2"
  },
  "homepage": "https://github.com/Microsoft/napajs#readme",
  "license": "MIT",
  "main": "./lib/index.js",
  "name": "napajs",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/Microsoft/napajs.git"
  },
  **"cmake-js": {
	"runtime": "electron",
	"runtimeVersion": "4.0.7",
	"arch": "x64"
  },**
  "scripts": {
    "benchmark": "node benchmark/bench.js",
    "install": "node scripts/install.js",
    "prepare": "tsc -p lib && tsc -p test && tsc -p benchmark",
    "rebuild": "cmake-js rebuild && tsc -p lib",
    "rebuildd": "cmake-js rebuild --debug && tsc -p lib",
    "retest": "cmake-js rebuild -d test/module/addon && tsc -p test && mocha test --recursive",
    "reunittest": "cmake-js rebuild -d unittest && node unittest/run.js",
    "test": "mocha test -g \"^((?!napajs/timers).)*$\" --recursive && mocha test -g \"^napajs/timers\"",
    "unittest": "cmake-js compile -d unittest && node unittest/run.js"
  },
  "types": "./types/index.d.ts",
  "version": "0.2.3"
}



================================================


**D:\project\electron-quick-start\node_modules\napajs> cmake-js rebuild**


[ 'D:\\Program Files\\nodejs\\node.exe',
  'C:\\Users\\MyPC\\AppData\\Roaming\\npm\\node_modules\\cmake-js\\bin\\cmake-js',
  'rebuild' ]
info TOOL Using Visual Studio 15 2017 Win64 Win64 generator.
info CMD CLEAN
info RUN cmake -E remove_directory "D:\project\electron-quick-start\node_modules\napajs\build"
info CMD CONFIGURE
info RUN cmake "D:\project\electron-quick-start\node_modules\napajs" --no-warn-unused-cli -G"Visual Studio 15 2017 Win64 Win64" -DCMAKE_JS_VERSION="5.1.0" -DCMAKE_BUILD_TYPE="Release" -DCMAKE_RUNTIME_OUTPUT_DIRECTORY="D:\project\electron-quick-start\node_modules\napajs\build" -DCMAKE_JS_INC="C:\Users\MyPC\.cmake-js\electron-x64\v4.0.7\include\node" -DNODE_RUNTIME="electron" -DNODE_RUNTIMEVERSION="4.0.7" -DNODE_ARCH="x64" -DCMAKE_JS_LIB="C:\Users\MyPC\.cmake-js\electron-x64\v4.0.7\x64\node.lib"
**Not searching for unused variables given on the command line.
CMake Error: Could not create named generator Visual Studio 15 2017 Win64 Win64**

Generators
  Visual Studio 16 2019        = Generates Visual Studio 2019 project files.
                                 Use -A option to specify architecture.
* Visual Studio 15 2017 [arch] = Generates Visual Studio 2017 project files.
                                 Optional [arch] can be "Win64" or "ARM".
  Visual Studio 14 2015 [arch] = Generates Visual Studio 2015 project files.
                                 Optional [arch] can be "Win64" or "ARM".
  Visual Studio 12 2013 [arch] = Generates Visual Studio 2013 project files.
                                 Optional [arch] can be "Win64" or "ARM".
  Visual Studio 11 2012 [arch] = Generates Visual Studio 2012 project files.
                                 Optional [arch] can be "Win64" or "ARM".
  Visual Studio 10 2010 [arch] = Generates Visual Studio 2010 project files.
                                 Optional [arch] can be "Win64" or "IA64".
  Visual Studio 9 2008 [arch]  = Generates Visual Studio 2008 project files.
                                 Optional [arch] can be "Win64" or "IA64".
  Borland Makefiles            = Generates Borland makefiles.
  NMake Makefiles              = Generates NMake makefiles.
  NMake Makefiles JOM          = Generates JOM makefiles.
  Green Hills MULTI            = Generates Green Hills MULTI files
                                 (experimental, work-in-progress).
  MSYS Makefiles               = Generates MSYS makefiles.
  MinGW Makefiles              = Generates a make file for use with
                                 mingw32-make.
  Unix Makefiles               = Generates standard UNIX makefiles.
  Ninja                        = Generates build.ninja files.
  Watcom WMake                 = Generates Watcom WMake makefiles.
  CodeBlocks - MinGW Makefiles = Generates CodeBlocks project files.
  CodeBlocks - NMake Makefiles = Generates CodeBlocks project files.
  CodeBlocks - NMake Makefiles JOM
                               = Generates CodeBlocks project files.
  CodeBlocks - Ninja           = Generates CodeBlocks project files.
  CodeBlocks - Unix Makefiles  = Generates CodeBlocks project files.
  CodeLite - MinGW Makefiles   = Generates CodeLite project files.
  CodeLite - NMake Makefiles   = Generates CodeLite project files.
  CodeLite - Ninja             = Generates CodeLite project files.
  CodeLite - Unix Makefiles    = Generates CodeLite project files.
  Sublime Text 2 - MinGW Makefiles
                               = Generates Sublime Text 2 project files.
  Sublime Text 2 - NMake Makefiles
                               = Generates Sublime Text 2 project files.
  Sublime Text 2 - Ninja       = Generates Sublime Text 2 project files.
  Sublime Text 2 - Unix Makefiles
                               = Generates Sublime Text 2 project files.
  Kate - MinGW Makefiles       = Generates Kate project files.
  Kate - NMake Makefiles       = Generates Kate project files.
  Kate - Ninja                 = Generates Kate project files.
  Kate - Unix Makefiles        = Generates Kate project files.
  Eclipse CDT4 - NMake Makefiles
                               = Generates Eclipse CDT 4.0 project files.
  Eclipse CDT4 - MinGW Makefiles
                               = Generates Eclipse CDT 4.0 project files.
  Eclipse CDT4 - Ninja         = Generates Eclipse CDT 4.0 project files.
  Eclipse CDT4 - Unix Makefiles= Generates Eclipse CDT 4.0 project files.

ERR! OMG Process terminated: 1


 

Ask each master to help see this problem, thank you.

The issue occurs when calling zone.broadcastSync();
- exactly here in my codes

```
zone.broadcastSync(() => {
      global.module = require('module');
});
```

and here inside napajs source code (zone-impl.js file)
```
ZoneImpl.prototype.broadcastSync = function (arg1, arg2) {
        var spec = this.createBroadcastRequest(arg1, arg2);
        var result = this._nativeZone.broadcastSync(spec);
        if (result.code !== 0) {
            throw new Error(result.errorMessage);
        }
    };
```
I tried to find a solution without opening a new issue - but it looks like this library does not have a big community
so I hope to have a quick help
test.js


```
const napa = require('napajs');
const zone = napa.zone;
const producer = napa.zone.create('test', {workers: 6});

for (let index = 0; index < 10; index++) {
            let item = result[index];
            producer.execute('./test',
                'foo',
                [channel, app], {timeout: 0})
                .then((response) => {
                    console.log('execute succeeded:', response.value);
                })
                .catch((error) => {
                    console.log(error)
                });
}

 function foo(p1,p2) {
   return p1+p2;
}
module.exports.foo = foo
```
the environment is:
- Darwin Kernel Version 17.5.0:
- node 10.13
- script
    - parallel-quick-sort.js
    - recursive-fibonacci.js
Update hello-world.ts, fixing cannot find name require.
