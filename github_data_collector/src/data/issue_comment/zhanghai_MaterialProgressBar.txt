Currently the library does not support stroke width and you said you do not want to implement it. (#61)

The problem is that the current code is filled with protected / private constructors and prevent expanding the library from Kotlin to implement this.

In Java it's relatively simple to achieve, in Kotlin we need to copy and convert 90% of the code :(

To see the issue just convert:
```
package me.zhanghai.android.materialprogressbar;

import android.graphics.Paint;

public class SingleCircularProgressDrawable2dp extends SingleCircularProgressDrawable {

    SingleCircularProgressDrawable2dp(int style) {
        super(style);
        setShowBackground(false);
    }

    @Override
    protected void onPreparePaint(Paint paint) {
        super.onPreparePaint(paint);
        paint.setStrokeWidth(2);
    }
}
```
to kotlin and see all the errors about package private / protected :(

This is not cool to have to maintain java code in a full kotlin project just for this use case :(
Hi there! Thank you for great library.
It would be very nice to implement one more determinateCircularProgressStyle with always spinning ring with gap decreasing its size with progress.
In current implementation animation just stops when reaching target progress, the idea is to have continuous spinning.
Does it violate Material Design principles?
colorAccent is used instead of colorControlActivated:

![image](https://user-images.githubusercontent.com/273338/27013021-cff21aa6-4edb-11e7-8a38-815cb74c11d4.png)

Theme:
```
    <!-- Legend App Theme -->
    <style name="BaseTheme.Legend" parent="AppTheme">
        <!-- Attributes for all APIs -->
        <item name="colorPrimary">@color/material_red_500</item>
        <item name="colorPrimaryDark">@color/material_blue_700</item>
        <item name="colorAccent">@color/material_green_a700</item>
        <item name="colorControlActivated">@color/material_purple_500</item>
        <item name="colorControlHighlight">@color/material_lime_500</item>
        <item name="dialogTheme">@style/AppTheme.Dialog.Legend</item>
        <item name="alertDialogTheme">@style/AppTheme.Dialog.Alert.Legend</item>
    </style>
```

Layout:
```
<?xml version="1.0" encoding="utf-8"?>
<android.support.v7.widget.CardView
    style="@style/CardStyle.Home"
    xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="wrap_content"
    xmlns:app="http://schemas.android.com/apk/res-auto">

    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:orientation="vertical">

        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="@string/material_theme_progress_indicators"
            android:textAppearance="@style/TextStyle.Title"/>

        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_marginTop="@dimen/view_spacing_medium"
            android:text="@string/material_theme_stock"
            android:textAppearance="@style/TextStyle.Body2"/>

        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginTop="@dimen/view_spacing_small"
            android:gravity="center_vertical">

            <ProgressBar
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_margin="@dimen/view_spacing_small"
                android:indeterminate="true"/>

            <ProgressBar
                style="@style/ProgressBarStyle.Horizontal"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_margin="@dimen/view_spacing_small"
                android:indeterminate="true"/>
        </LinearLayout>

        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_marginTop="@dimen/view_spacing_medium"
            android:text="@string/material_theme_material_progress"
            android:textAppearance="@style/TextStyle.Body2"/>

        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginTop="@dimen/view_spacing_small"
            android:gravity="center_vertical"
            android:theme="@style/AppTheme.Green">

            <me.zhanghai.android.materialprogressbar.MaterialProgressBar
                style="@style/Widget.MaterialProgressBar.ProgressBar"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_margin="@dimen/view_spacing_small"
                android:indeterminate="true"/>

            <me.zhanghai.android.materialprogressbar.MaterialProgressBar
                style="@style/Widget.MaterialProgressBar.ProgressBar.Horizontal"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_margin="@dimen/view_spacing_small"
                app:mpb_progressStyle="horizontal"
                android:indeterminate="true"/>
        </LinearLayout>
    </LinearLayout>
</android.support.v7.widget.CardView>
```

Tested on emulator API 25 and 16.
Although rendering error is avoided, the widget shows up as blank now.