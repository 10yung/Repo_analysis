Please help me to install this source to Heroku and integrate with Google Drive
in
`
If you want to use TLS using your own certificates, set tls-listener to :443, force-https, tls-cert=file and tls-private-key.
`

replace `tls-cert=file` with `tls-cert-file`
This could allow multi-arch supporting using `docker buildx`. At the very least, it enables support for ARM by building on an ARM device.

References: https://docs.docker.com/engine/reference/commandline/buildx/
With this PR transfer.sh has native bindings to the Storj network.
Previously it was using the S3 backend and proxying the data through a S3 Gateway ( https://github.com/storj/storj/cmd/gateway/ ).

@aspacca If needed, i can grant access to the Beta Network to try it out. I would appreciate a throughout test!
Hi there,
This pull request tries to add helm chart feature for transfer.sh.  I have currently deployed this chart in my testing cluster.  Let me know in case of any changes required.
Server storage crypt uploaded file and tar for securty.
When download request file untar and decrpyt and send data to user
Its supports Gdriver, like will it support Google Cloud Storage(GCS)?
Only slightly related to #177.

After I uploaded a file using `curl -H "Max-Days:2" ...` is there a way to see/learn how much more time until the file is destroyed? I would have expected to see that at `https://transfer.sh/UjsCv/my_file.txt`.
`X-Encrypt-Password`/`X-Decrypt-Password` headers work seemingless  as in gpg piping shell examples
(This is the proposal mentioned in https://github.com/dutchcoders/transfer.sh/issues/85#issuecomment-336584896.)

At the moment, the processes in the Docker containers run as root. This is a security problem, as Docker's isolation is not perfect and there's a lot of exploits that could make a root user break out of the container (it's way less of an issue for some random users which are ideally not existing on the host system).

Some links I picked up quite some while ago:

* http://blog.dscpl.com.au/2015/12/don-run-as-root-inside-of-docker.html
* https://stackoverflow.com/questions/41991905/docker-root-access-to-host-system

I don't have the time to fix and test this right now. PRs welcome, I guess.

Some drawbacks I experienced earlier which I don't want to withhold (might be useful for the person creating the fix):

 * When changing the user ID of the processes in the container, the existing volumes (whether it's a named one or a bind mount to a local directory) will require a manual upgrade (changing the owner)
 * Users trying to use a mount bind might experience issues (especially when that mount is already created but its owner is not set to the Docker process's user ID)

(If I should remember any other ones, I'll post them here.)

You can make it easier for anyone if you pick a very high user ID for the Docker container processes, anything above 10000 should suffice.