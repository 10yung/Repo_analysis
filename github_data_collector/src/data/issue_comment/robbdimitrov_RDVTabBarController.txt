### Description

[Description of the issue]

### Steps to Reproduce

[Steps or usage snippet reproducing the issue]

1. [First Step]
2. [Second Step]
3. [and so on...]

```
<snippet>
```

**Expected behavior:** [What you expect to happen]
**Actual behavior:** [What actually happens]
**Reproduces how often:** [What percentage of the time does it reproduce?]

### System configuration

Xcode version:
iOS version:
Affected device:

### Description

[Description of the issue]

### Steps to Reproduce

[Steps or usage snippet reproducing the issue]

1. [First Step]
2. [Second Step]
3. [and so on...]

```
<snippet>
```

**Expected behavior:** [What you expect to happen]
**Actual behavior:** [What actually happens]
**Reproduces how often:** [What percentage of the time does it reproduce?]

### System configuration

Xcode version:
iOS version:
Affected device:

### Description

[Description of the issue]

### Steps to Reproduce

[Steps or usage snippet reproducing the issue]

1. [First Step]
2. [Second Step]
3. [and so on...]

```
<snippet>
```

**Expected behavior:** [What you expect to happen]
**Actual behavior:** [What actually happens]
**Reproduces how often:** [What percentage of the time does it reproduce?]

### System configuration

Xcode version:
iOS version:
Affected device:

I am using RDVTabBarControler How to adjust UI on iPhoneXR safe area layout guides.


Xcode 10.1
Swift 4.2

Please help
Thanks 

以下源代码不够严谨：
[viewController willMoveToParentViewController:nil];
[viewController.view removeFromSuperview];
[viewController removeFromParentViewController];
如果需要重新setViewControllers时，会移除之前的控制器，如果之前的控制器view没有加载，移除时会先走viewDidLoad， 然后才移除，若viewDidLoad里面同步任务较多，造成卡顿等问题。

可改为：
[viewController willMoveToParentViewController:nil];
if (viewController.isViewLoaded) {//判断view是否已加载
        [viewController.view removeFromSuperview];
}
[viewController removeFromParentViewController];

### Description

[Description of the issue]

### Steps to Reproduce

[Steps or usage snippet reproducing the issue]

1. [First Step]
2. [Second Step]
3. [and so on...]

```
<snippet>
```

**Expected behavior:** [What you expect to happen]
**Actual behavior:** [What actually happens]
**Reproduces how often:** [What percentage of the time does it reproduce?]

### System configuration

Xcode version:
iOS version:
Affected device:

### tabBarHeight is fixed to 58.f

so my code  [self.tabBar setHeight:49 + bottomHeight]   mean nothing

### Steps to Reproduce

    CGSize viewSize = self.view.bounds.size;
    CGFloat tabBarStartingY = viewSize.height;
    CGFloat contentViewHeight = viewSize.height;
    CGFloat tabBarHeight = CGRectGetHeight([[self tabBar] frame]);

    if (!tabBarHeight) {
        if (@available(iOS 11.0, *)) {
            CGFloat safeAreaBottom = UIApplication.sharedApplication.keyWindow.safeAreaInsets.bottom;
            tabBarHeight = 58.f + safeAreaBottom / 1.5f;
        } else {
            tabBarHeight = 58.f;
        }
    } else if (@available(iOS 11.0, *)) {
        CGFloat safeAreaBottom = UIApplication.sharedApplication.keyWindow.safeAreaInsets.bottom;
        tabBarHeight = 58.f + safeAreaBottom / 1.5f;
    }


### do like this?

```
else if (@available(iOS 11.0, *)) {
        CGFloat safeAreaBottom = UIApplication.sharedApplication.keyWindow.safeAreaInsets.bottom;
        tabBarHeight = tabBarHeight + safeAreaBottom / 1.5f;
    }
```

Looking forward to your reply!!!

The final result is as follows:

`- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions {
    // Override point for customization after application launch.
    
    self.window = [[UIWindow alloc] initWithFrame:[UIScreen mainScreen].bounds];
    ViewController *vc1 = [[ViewController alloc] init];
    ViewController *vc2 = [[ViewController alloc] init];
    UITabBarController *tvc = [[UITabBarController alloc] init];
    [tvc setViewControllers:@[vc1, vc2]];
    
    [tvc.tabBar.items enumerateObjectsUsingBlock:^(UITabBarItem * _Nonnull obj, NSUInteger idx, BOOL * _Nonnull stop) {
        NSString *title = [NSString stringWithFormat:@"vc->%ld", idx];
        UIImage *selectedImage = [[UIImage imageNamed:@"tabbar_cate_highlight"] imageWithRenderingMode:UIImageRenderingModeAlwaysTemplate];
        UIImage *normalImage = [[UIImage imageNamed:@"tabbar_cate"] imageWithRenderingMode:UIImageRenderingModeAlwaysTemplate];
        
        obj.title = title;
        obj.image = normalImage;
        obj.selectedImage = selectedImage;
    }];
    
    [[UITabBar appearance] setTintColor:[UIColor redColor]];
    [[UITabBar appearance] setUnselectedItemTintColor:[UIColor yellowColor]];
    
    self.window.rootViewController = tvc;
    
    [self.window makeKeyAndVisible];
    return YES;
}`
### Description

[Description of the issue]

### Steps to Reproduce

[Steps or usage snippet reproducing the issue]

1. [First Step]
2. [Second Step]
3. [and so on...]

```
<snippet>
```

**Expected behavior:** [What you expect to happen]
**Actual behavior:** [What actually happens]
**Reproduces how often:** [What percentage of the time does it reproduce?]

### System configuration

Xcode version:
iOS version:
Affected device:

    //adjust  the height of contentView ;prevent a event that reset the selectedIndex when the tabBarHidden is yes