The same logic for ignoring a temp-related filesystem event in
`handleEvents` from `commands/hugo.go` is now used to ignore files
when (re)building the site.

Fixes #6773
<!-- Please answer these questions before submitting your issue. Thanks! -->

### What version of Hugo are you using (`hugo version`)?

v0.62.2-83E50184/extended linux/amd64

### Does this issue reproduce with the latest release?

Yes

I wasn't sure why I'd often be seeing the live preview of my site break on saves, when the state on the filesystem was fine. Digging into the `no such file or directory` message, I see this has to do with [Emacs lock files](https://www.gnu.org/software/emacs/manual/html_node/elisp/File-Locks.html#File-Locks) being followed where I don't believe they should be. The full message is in the form of:

```
Error: add site dependencies: load resources: loading templates: walk: Readdir: decorate: lstat $SITE_ROOT/layouts/partials/$USER@$MACHINE.$PID:$BOOT: no such file or directory
```

Of course the lock file is a symlink pointing to this path, with the prefix `.#` added to the file name in an unsaved, modified buffer.

This is true for both content and templating files, as long as a buffer is open with a modified version. This happens for both `hugo` and `hugo server` commands. It's easiest to reproduce by triggering a rebuild (running `hugo` or saving a change to a different file with `hugo server` running), and having a file open in emacs with a modified state so the lock symlink exists. It seems to also happen as a race condition when editing only a single file with `hugo server` running, where the rebuild reaches the lock symlink before emacs removes it.

I believe `hugo server` ignores events around temporary files so a rebuild isn't triggered, but does not ignore these files in the building of a site. I further believe that, well‚Ä¶ that's the wrong behavior.

I have a fix that solves my issue, see imminent pull request.
The example blog had not been updated for some time and I had to restructure it a little bit.

Fixes #6752

Changed tag and category directory structure
The issue here is that when there are only comments in a `_index.md` file like below:

```
---
title: Reference docs overview
main_menu: true
weight: 80
---

<!--
Much of the Kubernetes reference documentation is generated from Kubernetes
source code, using scripts. The topics in this section document how to generate
this type of content.
-->
```

There also will be an item for the `_index.md` file with empty content.

![Screen Shot 2020-01-18 at 12 52 05 PM](https://user-images.githubusercontent.com/6169722/72658834-9f419b80-39f1-11ea-99d3-28f4eb9c19ec.png)


<!-- Please answer these questions before submitting your issue. Thanks! -->

### What version of Hugo are you using (`hugo version`)?

<pre>
$ hugo version
Hugo Static Site Generator v0.62.2/extended darwin/amd64 BuildDate: unknown
</pre>

### Does this issue reproduce with the latest release?
Yes.

<!-- Please answer these questions before submitting your issue. Thanks! -->

### What version of Hugo are you using (`hugo version`)?

<pre>
Hugo Static Site Generator v0.62.2/extended darwin/amd64 BuildDate: unknown
</pre>

I am experiencing a weird problem where the title is rendered inside the <twitter:card> meta tag, instead of "summary_large_image". I am not quite sure how it gets there, but I wasn't able to find any obvious configuration problems for now.
I am using the default Hugo rendering with the default Hugo template, but the result is this:

```
<meta property="twitter:card" content="Tips and Tricks when Climbing with Apple Watch">
```

This is weird, and the problem is that the twitter card is rejected by twitter:
```
INFO:  Page fetched successfully
INFO:  16 metatags were found
INFO:  twitter:card = Tips and Tricks when Climbing with Apple Watch tag found
ERROR: Invalid card name (Card error)
```

This is how my content prefix looks like:
```
---
title: "Tips and Tricks when Climbing with Apple Watch"
date: 2020-01-15
image: "/images/redpoint-hero.jpg"
tags: ["appstore", "apple", "apps", "Redpoint", "Climbing", "Bouldering"]
type: "post"
comments: false
---
```

I am not quite sure where to continue debugging. From a quick look at [the template](https://github.com/gohugoio/hugo/blob/25a6b33693992e8c6d9c35bc1e781ce3e2bca4be/tpl/tplimpl/embedded/templates/twitter_cards.html) I also couldn't see how this could happen.
(But how do I know that I'm using the built in template?)

üôè Any help appreciated! üôè
<!-- Please answer these questions before submitting your issue. Thanks! -->

### What version of Hugo are you using (`hugo version`)?

<pre>
$ hugo version
Hugo Static Site Generator v0.62.2/extended windows/amd64 BuildDate: unknown
</pre>

We have a [data file](https://github.com/twbs/bootstrap/blob/master/site/data/theme-colors.yml) but when I change any of its values, hugo server reloads but doesn't reflect any changes.

The relevant content file:

```md
{{< example >}}
{{< badge.inline >}}
{{- range (index $.Site.Data "theme-colors") }}
<span class="badge bg-{{ .name }}{{ if or (eq .name "light") (eq .name "warning") }} text-dark{{ end }}">{{ .name | title }}</span>{{- end -}}
{{< /badge.inline >}}
{{< /example >}}
```

Hugo is invoked with `hugo server --port 9001 --disableFastRender`
currently Hugo allows you to ignore certain files:

https://gohugo.io/getting-started/configuration#ignore-content-files-when-rendering

Contrast with GitIgnore, which has a negate syntax:

> An optional prefix `!` which negates the pattern; any matching file excluded
> by a previous pattern will become included again.

https://git-scm.com/docs/gitignore

that allows you to ignore a certain type with an exception:

~~~
*.txt
!sunday.txt
~~~

or even all files with exception:

~~~
*
!*.md
~~~

#### What version of Hugo are you using (`hugo version`)?

    v0.62.2-83E50184/extended


I'm trying to get the width / height of a image
In the code below, `$img` outputs  `files/stats/img/my_image.png`
The file is located at 
```
/var/www/mydomain/assets/files/stats/img/my_image.png
```
When calling imageConfig, it shows this error:

```
at <imageConfig $img>: error calling imageConfig: open /var/www/mydomain/files/stats/img/my_image.png: no such file or directory
```
Note the missing mydomain/**assets**/files

```
{{ $img := resources.GetMatch (.Get 0)}} 
{{ if $img }} 
<figure>                                                                        
    <img
        src="{{ $img.RelPermalink }}"                                           
        alt="{{ .Get 1 }}"                                                      
        {{ with imageConfig $img }}                                             
        height="{{ .Height }}"                                                  
        width="{{ .Width }}"                                                    
        {{ end }}                                                               
        />                                                                      
    <figcaption>{{ .Get 1 }}</figcaption>                                       
</figure>                                                                       
{{ else }}                                                                      
<p>NO IMAGE MATCH</p>                                                           
{{ end }}
```
* `.Type` on-page now returns an empty string if not set in front matter or if `.Section` returns empty. See [#6760](https://github.com/gohugoio/hugo/issues/6760)
* Baseof logic revised/expanded
This is in line with the documentation. The implementation returns `page` in this case, which is some very old code which also messes up with the template resolution logic.