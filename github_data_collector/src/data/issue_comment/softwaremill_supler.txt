Current implementation of creating actions is blocking: 

```
def action[T](name: String)(action: T => ActionResult[T]): ActionField[T]
```

 "save" or "delete" actions could potentially communicate with DB so there'll be nice if they could use async API. This could be better approach for some usecases:  

```
def action[T](name: String)(action: T => Future[ActionResult[T]]): ActionField[T]
```

I found that row customisation is hard. There is no simple way to split row for example to "col-md-4" and "col-md-8". Additional field in FieldData with current position (positionInRow) should fix this problem.

Hi,

Maybe I am doing something wrong, but after adding withMeta("key","value") I was expecting {"key":"value"} JSON object in the front-end and hidden in HTML. An example with such case is available in Play2Example folder at https://github.com/pawank/supler/tree/master/examples/Play2Example. I can't see this happening.

Thanks

http://www.webjars.org

They have to be unique, but with indexes you might end up in a situation, where you save with something else then selected if the possibleValues returns a different order for some reason (like the dictionary entities might have changed)


`:` causes two problems:
- IDEs expect it to define a namespace and give errors all around
- it's used as selectors in jquery

Once the data is captured on the modal, the "parent" form should be updated


otherwise user might get really funny problems, hard to spot
