Hello, 
I am creating the iOS Mobile application to detect snoring, I need to apply Mfcc and Spectrogram to the audio file and need to pass these two in the Tensorflow lite  I need to apply Mfcc [Mel-frequency cepstral coefficients] and Spectrogram to the audio file. Can you suggest me any solution for this?

Thanks in Advance!
Tried to use a simple Neural Network without an activation layer at the output. 
The output needs to be a continuous number (example price).
The API requires an activation function (linear), but the back-propagation is not implemented.

That way failing pull requests could be seen automatically.

travis-ci.org does this for free and it's super popular.
This probably isn't an issue for this SDK, I just added this as a "discussion"...

I've been messing around with getting Neural Networks to play games, for example, but I want to take it a step further: Would it be possible to use something like "Mendel" (an iOS SDK for Genetic Algorithms) to evolve a Neural Network using this SDK?
- Tanmay Bakshi (TajyMany)

**To those following this repository:**

We are in the process of performing a complete rewrite of Swift AI, which will include an update to Swift 3, full Linux support, many new features, and major improvements and optimizations across the board!

Here's an overview of what's happening:
### Swift 3 / Package Manager
- [x] Create a GitHub organization account
- [x] Use SPM modules for each component
- [x] Update full library to Swift 3
- [x] Break out iOS and macOS examples into separate, dedicated packages
### Features
- [x] Brand-new feed-forward neural network
- [ ] Recurrent neural network
- [ ] Convolutional neural network
- [x] Deep learning support
- [ ] Tools for building genetic algorithms
- [ ] Signal processing APIs (Fourier transforms, etc)
### Linux
- [ ] Use a C BLAS library for optimized vector calculations
- [ ] OpenCL/CUDA acceleration
### iOS / macOS
- [ ] Metal acceleration
- [ ] Experiment with Apple's new [neural network tools](https://developer.apple.com/reference/accelerate/1912851-bnns) for certain operations (iOS 10+)
### API
- [x] More intuitive API for creating, training and updating neural networks
- [x] More intelligent training methods
- [ ] Potentially support Caffe models
### Optimizations
- [ ] Better memory management. The neural network training routines are currently optimized for speed, at the expense of memory (large up-front allocations are made in order to avoid small heap allocations later). We can achieve a better balance.
- [x] Make use of `UnsafePointer` when appropriate. Bypassing Swift's type safety in certain places can give us a big performance boost.
- [x] Better random generation of weights. Some applications need weights generated along a normal distribution instead of a uniform distribution.
- [x] Better support for alternative activation functions
### Website
- [ ] A place for viewing documentation, sharing code and getting help
- [ ] This would be fun to have. But it also costs $$
## Help and Contributions
Since I'll be making some dramatic changes to this library, I probably won't be accepting contributions until I've at least settled on the new APIs and standards. However, there are a few places where I could use some help:
- Feature/API suggestions:  I'm especially interested in feedback from people who have used other machine learning frameworks like TensorFlow, Torch, etc.
- Deep learning experts: If this is you, let's be in touch.
- Logo and branding:  The Swift bird is cool, but apparently some [fruit company](https://www.apple.com) owns it.
- Sponsorship:  Asking for money is lame. But it helps things move faster.

Thanks to everybody for using Swift AI. I'm excited to see what we build!

Collin

There doesn't seem to be much testing going on. I've got a slave server dedicated to Jenkins. Also TDD would be cool. I heard it's popular with the kids. 

Thoughts?
