I believe there should also be a place in the documentation that should explicitly explain that the firebase.json file is and where it should go.
Any idea where I should put that?
# Summary
In build, error occurred below.
```
* What went wrong:
A problem occurred evaluating project ':app'.
> Project with path ':@react-native-firebase_in-app-messaging' could not be found in project ':app'.
```

So, I fixed document.

### Checklist

- [x] Supports `Android`
- [x] Supports `iOS`
- [x] `e2e` tests added or updated in packages/**/e2e
- [x] Flow types updated
- [x] Typescript types updated

### Summary
update `ios-firebase-credentials` docs: should open `.xcworkspace` if using Pods and in reverse, open `.xcodeproj`
## Issue
I have an issue with react-native-firebase. Whenever user changes his device(buy a new one) and restores the application the token remains the same for the restored app running on the new device. For some reason notifications are not received in this scenario.

## Environment
react: 16.9.0 => 16.9.0 
react-native: 0.61.5 => 0.61.5
react-native-firebase: 5.5.6


### Summary

Fix naming conflict

### Checklist

- [x ] Supports `iOS`

[IOS][BUGFIX] [Pods]


<!---
Hello there you awesome person;
Please note that the issue list of this repo is exclusively for bug reports;

1) For feature requests please visit our [Feature Request Board](https://boards.invertase.io/react-native-firebase).
2) For questions and support please use our Discord chat: https://discord.gg/C9aK28N or Stack Overflow: https://stackoverflow.com/questions/tagged/react-native-firebase
3) If this is a setup issue then please make sure you've correctly followed the setup guides, most setup issues such as 'duplicate dex files', 'default app has not been initialized' etc are all down to an incorrect setup as the guides haven't been correctly followed.
-->

<!-- NOTE: You can change any of the `[ ]` to `[x]` to mark an option(s) as selected -->

<!-- PLEASE DO NOT REMOVE ANY SECTIONS FROM THIS ISSUE TEMPLATE   -->
<!--   Leave them as they are even if they're irrelevant to your issue -->

## Issue

<!-- Please describe your issue here --^ and provide as much detail as you can. -->
<!-- Include code snippets that show your usages of the library in the context of your project. -->
<!-- Snippets that also show how and where the library is imported in JS are useful to debug issues relating to importing or methods not found issues -->


On iOS, after installing the app and launching it for the _first time_, I receive notifications when my app is in background but I can't reach `onNotification()` and `onNotificationOpened()` (after clicking on a notification) callbacks.
Then when closing the app (killing it) and upon relaunch, everything works fine.


---

## Project Files

<!-- Provide the contents of key project files which will help to debug -->
<!--     For Example: -->
<!--        - iOS: `Podfile` contents. -->
<!--        - Android: `android/build.gradle` contents. -->
<!--        - Android: `android/app/build.gradle` contents. -->
<!--        - Android: `AndroidManifest.xml` contents. -->

<!-- ADD THE CONTENTS OF THE FILES IN THE PROVIDED CODE BLOCKS BELOW -->

### Javascript

<details><summary>Click To Expand</summary>
<p>

#### `package.json`:

```json
{
  "name": "xxx",
  "version": "2.0.4",
  "private": true,
  "scripts": {
    "postinstall": "npx jetify"
  },
  "dependencies": {
    "@react-native-community/netinfo": "^4.4.0",
    "@types/react-native-orientation": "^5.0.1",
    "@types/react-native-video": "^3.1.5",
    "@types/react-redux": "^7.1.1",
    "axios": "^0.19.0",
    "intl": "^1.2.5",
    "jwt-decode": "^2.2.0",
    "native-base": "^2.12.1",
    "react": "16.8.6",
    "react-native": "0.60.0",
    "react-native-config": "^0.12.0",
    "react-native-firebase": "^5.5.6",
    "react-native-image-picker": "https://github.com/xxx/react-native-image-picker.git",
    "react-native-image-zoom-viewer": "^2.2.26",
    "react-native-intercom": "https://github.com/xxx/react-native-intercom.git",
    "react-native-keyboard-aware-scroll-view": "^0.9.1",
    "react-native-launch-navigator": "^1.0.6",
    "react-native-modal-datetime-picker": "^7.5.0",
    "react-native-orientation": "^3.1.3",
    "react-native-pdf": "^5.1.4",
    "react-native-sentry": "^0.43.2",
    "react-native-simple-device-info": "^0.24.0",
    "react-native-swiper": "^1.5.14",
    "react-native-video": "^5.0.2",
    "react-navigation": "^2.18.3",
    "react-redux": "^7.1.0",
    "redux": "^4.0.2",
    "rn-fetch-blob": "^0.10.16"
  },
  "devDependencies": {
    "@babel/core": "^7.5.0",
    "@babel/runtime": "^7.5.2",
    "@react-native-community/async-storage": "^1.4.0",
    "@react-native-community/eslint-config": "^0.0.5",
    "@types/jest": "^24.0.15",
    "@types/react": "^16.8.23",
    "@types/react-native": "^0.60.0",
    "@types/react-navigation": "^3.0.7",
    "@types/react-test-renderer": "^16.8.2",
    "babel-jest": "^24.8.0",
    "detox": "^14.9.2",
    "eslint": "^6.0.1",
    "jest": "^24.9.0",
    "jetifier": "^1.6.4",
    "metro-react-native-babel-preset": "^0.55.0",
    "react-addons-test-utils": "^15.6.2",
    "react-native-typescript-transformer": "^1.2.12",
    "react-test-renderer": "16.8.6",
    "ts-jest": "^24.0.2",
    "typescript": "^3.5.3"
  },
  "jest": {
    "presets": [
      "react-native",
      "@babel/preset-env",
      "@babel/preset-react",
      "@babel/preset-typescript"
    ],
    "moduleFileExtensions": [
      "ts",
      "tsx",
      "js"
    ],
    "transform": {
      "^.+\\.(js)$": "<rootDir>/node_modules/babel-jest",
      "\\.(ts|tsx)$": "<rootDir>/node_modules/ts-jest/preprocessor.js"
    },
    "testRegex": "(/__tests__/.*|\\.(test|spec))\\.(ts|tsx|js)$",
    "testPathIgnorePatterns": [
      "\\.snap$",
      "<rootDir>/node_modules/"
    ],
    "cacheDirectory": ".jest/cache"
  },
  "rnpm": {
    "assets": [
      "app/assets/fonts/NotoSans",
      "app/assets/fonts/TT-Norms"
    ]
  },
  "detox": {
    "configurations": {
      "ios.sim.debug": {
        "binaryPath": "ios/build/Build/Products/Debug-iphonesimulator/xxx.app",
        "build": "RN_SRC_EXT=e2e.tsx,e2e.js xcodebuild -workspace ios/xxx.xcworkspace -scheme xxx -configuration Debug -sdk iphonesimulator -derivedDataPath ios/build",
        "type": "ios.simulator",
        "device": {
          "type": "iPhone X"
        }
      }
    },
    "test-runner": "jest"
  }
}
```

#### `firebase.json` for react-native-firebase v6:

```json
# N/A
```

#### `App.tsx` :

```ts
import React from 'react';
import firebase from 'react-native-firebase';
import { Notification, NotificationOpen } from 'react-native-firebase/notifications';
...

const CHANNEL_ID_KEY = 'notifications.channelId';

class App extends React.Component<Props, State> {
    async componentDidMount() {
        ...

        this.setupNotifications();
    }

    componentWillUnmount(): void {
        this.unsubscribeFromNotificationsListeners();
    }

    setupNotifications = async () => {
        this.checkForAppOpenedByNotification();
        this.requestPermission();
        this.createAndroidChannel();
        this.createNotificationListeners();
    };

    async storeFCMToken() {
        let fcmToken = await localStorage.getKey(constants.fcmToken);

        if (!fcmToken) {
            fcmToken = await firebase.messaging().getToken();

            if (fcmToken) {
                console.log('fcmToken', fcmToken);
                await localStorage.saveKey(constants.fcmToken, fcmToken);
            }
        }
    }

    async requestPermission() {
        try {
            await firebase.messaging().requestPermission();
            // permission is granted
            this.storeFCMToken();
        } catch (error) {
            console.log('[Firebase] ERROR: Permission rejected.');
        }
    }

    async createAndroidChannel() {
        if (Platform.OS === 'android') {
            const channel = new firebase.notifications.Android.Channel(
                constants.FirebaseChannelId,
                constants.FirebaseChannelName,
                firebase.notifications.Android.Importance.Max
            );

            channel.setDescription(constants.FirebaseChannelDescription);

            await localStorage.saveKey(CHANNEL_ID_KEY, channel.channelId);
            await firebase.notifications().android.createChannel(channel);
        }
    }

    createNotificationListeners() {
        this.cancelNotificationListener = firebase.notifications().onNotification(async (notification: Notification) => {
            const localNotification = new firebase.notifications.Notification()
                .setNotificationId(notification.notificationId)
                .setTitle(notification.title)
                .setSubtitle(notification.subtitle || '')
                .setBody(notification.body)
                .setData(notification.data);

            // Android only
            if (Platform.OS === 'android') {
                const channelId = await localStorage.getKey(CHANNEL_ID_KEY);

                if (channelId) {
                    localNotification.android.setChannelId(channelId);
                    localNotification.android.setAutoCancel(true);
                    localNotification.android.setSmallIcon('ic_status_bar');
                }
            }

            // iOS only
            if (Platform.OS === 'ios') {
                localNotification.ios.setLaunchImage('icon-83.5@2x');
            }

            try {
                await firebase.notifications().displayNotification(localNotification);
            } catch (e) {
                console.log('[Firebase] ERROR: Can not display notification', e);
            }
        });

        this.cancelNotificationOpenedListener = firebase.notifications().onNotificationOpened((notificationOpen: NotificationOpen) => {
            // Get information about the notification that was opened
            const notification: Notification = notificationOpen.notification;

            this.handleNotificationOpened(notification);
        });
    }

    checkForAppOpenedByNotification = async () => {
        const notificationOpen: NotificationOpen = await firebase.notifications().getInitialNotification();

        if (notificationOpen) {
            const notification: Notification = notificationOpen.notification;

            this.handleNotificationOpened(notification);
        }
    }

    handleNotificationOpened = (notification: Notification) => {
        const { state, ...payload } = notification.data;

        store.dispatch(navigateTo(state, payload));
    }

    unsubscribeFromNotificationsListeners = () => {
        if (this.cancelNotificationListener) this.cancelNotificationListener();
        if (this.cancelNotificationOpenedListener) this.cancelNotificationOpenedListener();
    }

    render() {
        ...
    }
}
```

</p>
</details>

---

### iOS

<details><summary>Click To Expand</summary>
<p>

#### `ios/Podfile`:

- [ ] I'm not using Pods
- [x] I'm using Pods and my Podfile looks like:

```ruby
platform :ios, '9.0'
require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'

target 'xxx' do
  # Pods for xxx
  pod 'React', :path => '../node_modules/react-native/'
  pod 'React-Core', :path => '../node_modules/react-native/React'
  pod 'React-DevSupport', :path => '../node_modules/react-native/React'
  pod 'React-fishhook', :path => '../node_modules/react-native/Libraries/fishhook'
  pod 'React-RCTActionSheet', :path => '../node_modules/react-native/Libraries/ActionSheetIOS'
  pod 'React-RCTAnimation', :path => '../node_modules/react-native/Libraries/NativeAnimation'
  pod 'React-RCTBlob', :path => '../node_modules/react-native/Libraries/Blob'
  pod 'React-RCTImage', :path => '../node_modules/react-native/Libraries/Image'
  pod 'React-RCTLinking', :path => '../node_modules/react-native/Libraries/LinkingIOS'
  pod 'React-RCTNetwork', :path => '../node_modules/react-native/Libraries/Network'
  pod 'React-RCTSettings', :path => '../node_modules/react-native/Libraries/Settings'
  pod 'React-RCTText', :path => '../node_modules/react-native/Libraries/Text'
  pod 'React-RCTVibration', :path => '../node_modules/react-native/Libraries/Vibration'
  pod 'React-RCTWebSocket', :path => '../node_modules/react-native/Libraries/WebSocket'

  pod 'Firebase/Core', '~> 5.19.0'
  pod 'GoogleIDFASupport', '~> 3.14.0'
  pod 'Firebase/Messaging', '~> 5.19.0'

  pod 'React-cxxreact', :path => '../node_modules/react-native/ReactCommon/cxxreact'
  pod 'React-jsi', :path => '../node_modules/react-native/ReactCommon/jsi'
  pod 'React-jsiexecutor', :path => '../node_modules/react-native/ReactCommon/jsiexecutor'
  pod 'React-jsinspector', :path => '../node_modules/react-native/ReactCommon/jsinspector'
  pod 'yoga', :path => '../node_modules/react-native/ReactCommon/yoga'

  pod 'DoubleConversion', :podspec => '../node_modules/react-native/third-party-podspecs/DoubleConversion.podspec'
  pod 'glog', :podspec => '../node_modules/react-native/third-party-podspecs/glog.podspec'
  pod 'Folly', :podspec => '../node_modules/react-native/third-party-podspecs/Folly.podspec'
  # pod 'react-native-video', :path => '../node_modules/react-native-video'
  pod 'react-native-video', :path => '../node_modules/react-native-video/react-native-video.podspec'
  pod 'Intercom'
  pod 'react-native-intercom', :path => '../node_modules/react-native-intercom'

  target 'xxx' do
    inherit! :search_paths
    # Pods for testing
  end

  use_native_modules!
end

target 'xxx-tvOS' do
  # Pods for xxx-tvOS

  target 'xxx-tvOSTests' do
    inherit! :search_paths
    # Pods for testing
  end

end
```

#### `AppDelegate.m`:

```objc
/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

#import "AppDelegate.h"

#import <React/RCTBridge.h>
#import <React/RCTBundleURLProvider.h>
#import <React/RCTRootView.h>
#import <Firebase.h>
#import "RNFirebaseNotifications.h"
#import "Orientation.h"
#import "Intercom/intercom.h"

@implementation AppDelegate

- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions
{
  NSString *intercomAppId = [[NSBundle mainBundle] objectForInfoDictionaryKey:@"INTERCOM_APP_ID"];
  NSString *intercomApiKey = [[NSBundle mainBundle] objectForInfoDictionaryKey:@"INTERCOM_API_KEY"];

  [Intercom setApiKey:intercomApiKey forAppId:intercomAppId];

  [FIRApp configure];
  [RNFirebaseNotifications configure];

  RCTBridge *bridge = [[RCTBridge alloc] initWithDelegate:self launchOptions:launchOptions];
  RCTRootView *rootView = [[RCTRootView alloc] initWithBridge:bridge
                                                   moduleName:@"xxx"
                                            initialProperties:nil];

  rootView.backgroundColor = [[UIColor alloc] initWithRed:1.0f green:1.0f blue:1.0f alpha:1];

  self.window = [[UIWindow alloc] initWithFrame:[UIScreen mainScreen].bounds];
  UIViewController *rootViewController = [UIViewController new];
  rootViewController.view = rootView;
  self.window.rootViewController = rootViewController;
  [self.window makeKeyAndVisible];
  return YES;
}

- (void)application:(UIApplication *)application didRegisterForRemoteNotificationsWithDeviceToken:(NSData *)deviceToken {
    [Intercom setDeviceToken:deviceToken];
}

- (void)application:(UIApplication *)application didReceiveLocalNotification:(UILocalNotification *)notification {
  [[RNFirebaseNotifications instance] didReceiveLocalNotification:notification];
}

- (NSURL *)sourceURLForBridge:(RCTBridge *)bridge
{
#if DEBUG
  return [[RCTBundleURLProvider sharedSettings] jsBundleURLForBundleRoot:@"index" fallbackResource:nil];
#else
  return [[NSBundle mainBundle] URLForResource:@"main" withExtension:@"jsbundle"];
#endif
}

- (UIInterfaceOrientationMask)application:(UIApplication *)application supportedInterfaceOrientationsForWindow:(UIWindow *)window {
  return [Orientation getOrientation];
}

@end
```

</p>
</details>

---

### Android

<details><summary>Click To Expand</summary>
<p>

#### Have you converted to AndroidX?

<!--- Mark any options that apply below -->
- [ ] my application is an AndroidX application?
- [ ] I am using `android/gradle.settings` `jetifier=true` for Android compatibility?
- [ ] I am using the NPM package `jetifier` for react-native compatibility?

#### `android/build.gradle`:

```groovy
// N/A
```

#### `android/app/build.gradle`:

```groovy
// N/A
```

#### `android/settings.gradle`:

```groovy
// N/A
```

#### `MainApplication.java`:

```java
// N/A
```

#### `AndroidManifest.xml`:

```xml
<!-- N/A -->
```

</p>
</details>


---

## Environment

<details><summary>Click To Expand</summary>
<p>

**`react-native info` output:**

<!-- Please run `react-native info` on your terminal and paste the contents into the code block below -->

```
 System:
    OS: macOS Mojave 10.14.6
    CPU: (4) x64 Intel(R) Core(TM) i5-7360U CPU @ 2.30GHz
    Memory: 21.11 MB / 8.00 GB
    Shell: 3.2.57 - /bin/bash
  Binaries:
    Node: 10.16.3 - ~/.nvm/versions/node/v10.16.3/bin/node
    Yarn: 1.15.2 - /usr/local/bin/yarn
    npm: 6.9.0 - ~/.nvm/versions/node/v10.16.3/bin/npm
    Watchman: 4.9.0 - /usr/local/bin/watchman
  SDKs:
    iOS SDK:
      Platforms: iOS 13.2, DriverKit 19.0, macOS 10.15, tvOS 13.2, watchOS 6.1
    Android SDK:
      API Levels: 23, 25, 26, 27, 28
      Build Tools: 27.0.3, 28.0.2, 28.0.3
      System Images: android-26 | Google Play Intel x86 Atom, android-28 | Google Play Intel x86 Atom
  IDEs:
    Android Studio: 3.5 AI-191.8026.42.35.5791312
    Xcode: 11.2.1/11B500 - /usr/bin/xcodebuild
  npmPackages:
    react: 16.8.6 => 16.8.6 
    react-native: 0.60.0 => 0.60.0 
  npmGlobalPackages:
    react-native-cli: 2.0.1
```

<!-- change `[ ]` to `[x]` to select an option(s) -->

- **Platform that you're experiencing the issue on**:
  - [x] iOS
  - [ ] Android
  - [ ] **iOS** but have not tested behavior on Android
  - [ ] **Android** but have not tested behavior on iOS
  - [ ] Both
- **`react-native-firebase` version you're using that has this issue:**
  - `5.5.6 | 5.6.0 (tried both)`
- **`Firebase` module(s) you're using that has the issue:**
  - `notifications`
- **Are you using `TypeScript`?**
  - `Y` & `^3.5.3`
  
</p>
</details>


<!-- Thanks for reading this far down ❤️  -->
<!-- High quality, detailed issues are much easier to triage for maintainers -->

<!-- For bonus points, if you put a 🔥 (:fire:) emojii at the start of the issue title we'll know -->
<!-- that you took the time to fill this out correctly, or, at least read this far -->

---

Think `react-native-firebase` is great? Please consider supporting all of the project maintainers and contributors by donating via our [Open Collective](https://opencollective.com/react-native-firebase/donate) where all contributors can submit expenses. [[Learn More]](https://invertase.io/oss/react-native-firebase/contributing/donations-expenses)

- 👉 Check out [`React Native Firebase`](https://twitter.com/rnfirebase) and [`Invertase`](https://twitter.com/invertaseio) on Twitter for updates on the library.


<!-- Thanks for submitting a pull request! Please provide enough information so that others can review your pull request properly. -->
<!-- If this PR fixes an issue, type "Fixes #issueNumber" to automatically close the issue when the PR is merged. -->


### Summary

Fix a wrong import example on the docs

### Checklist

- [x] Supports `Android`
- [x] Supports `iOS`
- [ ] `e2e` tests added or updated in packages/**/e2e
- [ ] Flow types updated
- [ ] Typescript types updated

### Test Plan

<!-- Demonstrate the code is solid. -->
<!-- Example: The exact testing commands you ran and their final output (e.g. screenshot of test summary). -->
<!-- Example: Screenshots / videos if the pull request changes UI related code such as Notifications or Admob -->
Do not need

<!--
  **INTERNAL tagged notes will not be included in the next version's release notes.**

    CATEGORY
  [----------]      TYPE
  [ TYPES    ] [-------------]       LOCATION
  [ JS       ] [ BREAKING    ] [------------------]
  [ GENERAL  ] [ BUGFIX      ] [ {FirebaseModule} ]
  [ INTERNAL ] [ ENHANCEMENT ] [ {Filename}       ]
  [ IOS      ] [ FEATURE     ] [ {Directory}      ]   |-----------|
  [ ANDROID  ] [ MINOR       ] [ {Framework}      ] - | {Message} |
  [----------] [-------------] [------------------]   |-----------|

 EXAMPLES:

 [IOS] [ANDROID] [BREAKING] [AUTHENTICATION] - Change a thing that breaks other things
 [ANDROID] [BUGFIX] [FIRESTORE] - Did a thing to fix a thing with a Firestore thing
 [JS] [BREAKING] - Remove a deprecated thing
 [TYPES] [ENHANCEMENT] [NOTIFICATIONS] - Update flow types for a thing in notifications
 [JS] [ENHANCEMENT] - Expose export of a internal thing utility for public usage
 [INTERNAL] [FEATURE] [./utils] - Added an internal util to make doing a thing easier
-->

---

Think `react-native-firebase` is great? Please consider supporting the project with any of the below:

- 👉 Donate via [Open Collective](https://opencollective.com/react-native-firebase/donate)
- 👉 Follow [`React Native Firebase`](https://twitter.com/rnfirebase) and [`Invertase`](https://twitter.com/invertaseio) on Twitter
- 👉 Star this repo on GitHub ⭐️
- 👉 Contribute; see our [contributing guide](/CONTRIBUTING.md)

## Documentation Feedback

If you see here:

https://invertase.io/oss/react-native-firebase/v6/firestore/reference/query#onSnapshot

The docs say that the `onSnapshot` would receive:

```
  .onSnapshot({
    error: (e) => console.error(e),
    next: (querySnapshot) => {},
  });
```

But the TS type says:

```
    onSnapshot(
      onNext: (snapshot: QuerySnapshot) => void,
      onError?: (error: Error) => void,
      onCompletion?: () => void,
    ): () => void;
```

And the actual implementation is:

```
  onSnapshot(...args) {
    let snapshotListenOptions;
    let callback;
    let onNext;
    let onError;

    try {
      const options = parseSnapshotArgs(args);
      snapshotListenOptions = options.snapshotListenOptions;
      callback = options.callback;
      onNext = options.onNext;
      onError = options.onError;
    } catch (e) {
      throw new Error(`firebase.firestore().collection().onSnapshot(*) ${e.message}`);
    }
   ...
```

Also: we're experiencing the `QuerySnapshot` coming `undefined` on `onNext`, but maybe I should report this bug somewhere else (unless it isn't!)

---

Think `react-native-firebase` is great? Please consider supporting all of the project maintainers and contributors by donating via our [Open Collective](https://opencollective.com/react-native-firebase/donate) where all contributors can submit expenses. [[Learn More]](https://invertase.io/oss/react-native-firebase/contributing/donations-expenses)

- 👉 Check out [`React Native Firebase`](https://twitter.com/rnfirebase) and [`Invertase`](https://twitter.com/invertaseio) on Twitter for updates on the library.


<!-- Thanks for submitting a pull request! Please provide enough information so that others can review your pull request properly. -->
<!-- If this PR fixes an issue, type "Fixes #issueNumber" to automatically close the issue when the PR is merged. -->


### Summary
Currently I was unable to add multiple query cursors to a firestore query.
For example adding both `startAfter` and `endBefore` to a query resulted in the following error:

> firebase.firestore().collection().${cursor}(*) You are trying to start or end a query using a document for which the field `'__name__`' (used as the orderBy) does not exist.

When I looked into the FirestoreQuery.js file, I found that the current code somewhat assumes that there will always going to be a single query cursor in the query. So the code was trying to get the `__name__` field from the `documentSnapshot` provided to the latter query cursor(s).
This PR handles this by allowing `__name__` field to be added to the `_orders` field only once as well as takes care to not let the code to get `__name__` field from the `documentSnapshot `provided to latter cursor(s).

<!-- Explain the **motivation** for making this change e.g. what existing problem does the pull request solve? -->

### Checklist

- [*] Supports `Android`
- [*] Supports `iOS`
- [ ] `e2e` tests added or updated in packages/**/e2e
- [ ] Flow types updated
- [ ] Typescript types updated

### Test Plan
Testing was done manually. After the fix, the query no longer throws error and returns expected results.
The following logging result for the following query demonstrates this:
Query Code:

      const first = await firestore()
        .collection('orders')
        .doc('322aANRVXM0RTgM1BK6b')
        .get();

      const last = await firestore()
        .collection('orders')
        .doc('9iJaiA3ylpF2kLVDDDCy')
        .get();

      const query = firestore()
        .collection('orders')
        .orderBy('createdAt', 'desc')
        .startAfter(first)
        .endBefore(last);

      console.log(JSON.stringify(query._modifiers, null, 4));

Corresponding Logs:

```
{
    "_filters": [],
    "_orders": [
        {
            "fieldPath": "createdAt",
            "direction": "DESCENDING"
        },
        {
            "fieldPath": "__name__",
            "direction": "DESCENDING"
        }
    ],
    "_type": "collection",
    "_startAfter": [
        [
            13,
            [
                1578698717,
                160000000
            ]
        ],
        [
            8,
            "322aANRVXM0RTgM1BK6b"
        ]
    ],
    "_endBefore": [
        [
            13,
            [
                1578688673,
                0
            ]
        ],
        [
            8,
            "9iJaiA3ylpF2kLVDDDCy"
        ]
    ]
}
```
<!-- Demonstrate the code is solid. -->
<!-- Example: The exact testing commands you ran and their final output (e.g. screenshot of test summary). -->
<!-- Example: Screenshots / videos if the pull request changes UI related code such as Notifications or Admob -->

### Release Plan
[JS] [BUGFIX] [FIRESTORE] - Fixed bug when applying multiple query cursors to the same query
<!-- Help reviewers and the release process by writing your own release notes. See below for examples. -->
<!--
  **INTERNAL tagged notes will not be included in the next version's release notes.**

    CATEGORY
  [----------]      TYPE
  [ TYPES    ] [-------------]       LOCATION
  [ JS       ] [ BREAKING    ] [------------------]
  [ GENERAL  ] [ BUGFIX      ] [ {FirebaseModule} ]
  [ INTERNAL ] [ ENHANCEMENT ] [ {Filename}       ]
  [ IOS      ] [ FEATURE     ] [ {Directory}      ]   |-----------|
  [ ANDROID  ] [ MINOR       ] [ {Framework}      ] - | {Message} |
  [----------] [-------------] [------------------]   |-----------|

 EXAMPLES:

 [IOS] [ANDROID] [BREAKING] [AUTHENTICATION] - Change a thing that breaks other things
 [ANDROID] [BUGFIX] [FIRESTORE] - Did a thing to fix a thing with a Firestore thing
 [JS] [BREAKING] - Remove a deprecated thing
 [TYPES] [ENHANCEMENT] [NOTIFICATIONS] - Update flow types for a thing in notifications
 [JS] [ENHANCEMENT] - Expose export of a internal thing utility for public usage
 [INTERNAL] [FEATURE] [./utils] - Added an internal util to make doing a thing easier
-->

---

Think `react-native-firebase` is great? Please consider supporting the project with any of the below:

- 👉 Donate via [Open Collective](https://opencollective.com/react-native-firebase/donate)
- 👉 Follow [`React Native Firebase`](https://twitter.com/rnfirebase) and [`Invertase`](https://twitter.com/invertaseio) on Twitter
- 👉 Star this repo on GitHub ⭐️
- 👉 Contribute; see our [contributing guide](/CONTRIBUTING.md)

<!---
Hello there you awesome person;
Please note that the issue list of this repo is exclusively for bug reports;

1) For feature requests please visit our [Feature Request Board](https://boards.invertase.io/react-native-firebase).
2) For questions and support please use our Discord chat: https://discord.gg/C9aK28N or Stack Overflow: https://stackoverflow.com/questions/tagged/react-native-firebase
3) If this is a setup issue then please make sure you've correctly followed the setup guides, most setup issues such as 'duplicate dex files', 'default app has not been initialized' etc are all down to an incorrect setup as the guides haven't been correctly followed.
-->

<!-- NOTE: You can change any of the `[ ]` to `[x]` to mark an option(s) as selected -->

<!-- PLEASE DO NOT REMOVE ANY SECTIONS FROM THIS ISSUE TEMPLATE   -->
<!--   Leave them as they are even if they're irrelevant to your issue -->

## Issue

<!-- Please describe your issue here --^ and provide as much detail as you can. -->
<!-- Include code snippets that show your usages of the library in the context of your project. -->
<!-- Snippets that also show how and where the library is imported in JS are useful to debug issues relating to importing or methods not found issues -->


Hi! 
I am having a problem with the `notifications` library.  I need to get the notification data in order to open my application in a specific page. Everything is working fine in Android for every app state, but in iOS, when the app is closed and I click the notification, `getInitialNotification` method is not returning notification data. It is triggered, but the value is `undefined`. When the app is in foreground or background everything is ok.

I'm sending remote cloud notifications that look like this: 
```json
{ "to":"token here",
    "notification": {
        "title": "Test Notification",
        "body": "password reset"
    },
    "data": {
        "url": "myApp://password/reset?token=dfsfsdfsdfsdfdsfsdf"
    }
}
```

Any ideas on what it might be?

I'm using v5.6.0, but I forked it and done some changes: 
<img width="1779" alt="Screenshot 2020-01-13 at 16 46 42" src="https://user-images.githubusercontent.com/4881189/72274775-aef16680-3624-11ea-9023-67970802421b.png">

P.S: I didn't fill out the Android project files part of the issues since my problem is only in iOS, but please let me know if that would be helpful.

---

## Project Files

<!-- Provide the contents of key project files which will help to debug -->
<!--     For Example: -->
<!--        - iOS: `Podfile` contents. -->
<!--        - Android: `android/build.gradle` contents. -->
<!--        - Android: `android/app/build.gradle` contents. -->
<!--        - Android: `AndroidManifest.xml` contents. -->

<!-- ADD THE CONTENTS OF THE FILES IN THE PROVIDED CODE BLOCKS BELOW -->

### Javascript

<details><summary>Click To Expand</summary>
<p>

#### `package.json`:

```json
{
  "name": "myPackageName",
  "version": "1.0.0",
  "private": true,
  "description": "My app",
  "author": "My app",
  "main": "index.js",
  "dependencies": {
(...)
    "react-native": "0.61.5",
    "react-native-firebase": "git+ssh://git@github.com/my-org/react-native-firebase#mybranch",
(...)
  },
  "devDependencies": {
    "@babel/core": "7.6.2",
    "@babel/runtime": "7.6.2",
    "babel-core": "7.0.0-bridge.0",
    "babel-jest": "24.9.0",
    "chai": "4.2.0",
    "detox": "14.0.3",
    "eslint-plugin-detox": "1.0.0",
    "jest": "24.9.0",
    "mailosaur": "5.0.8",
    "react-devtools-core": "3.4.3",
    "react-test-renderer": "16.9.0",
    "reactotron-react-native": "2.0.0",
    "relay-compiler": "1.6.2",
    "stylelint": "10.1.0"
  },
  "resolutions": {
    "react-devtools-core": "3.4.3"
  },
  "rnpm": {
    "assets": [
      "./src/lib/assets/fonts"
    ]
  },
  "detox": {
    "configurations": {
      "android": {
        "binaryPath": "android/app/build/outputs/apk/debug/app-debug.apk",
        "build": "pushd android && ./gradlew assembleDebug assembleAndroidTest -DtestBuildType=debug && popd",
        "name": "device",
        "session": {
          "sessionId": "manualsession",
          "server": "ws://localhost:8099"
        },
        "type": "android.emulator"
      },
      "ios": {
        "binaryPath": "ios/build/Build/Products/Debug-iphonesimulator/MyApp.app",
        "build": "xcodebuild -workspace ios/Wallet.xcworkspace -UseNewBuildSystem=NO -scheme Wallet -configuration Debug -sdk iphonesimulator -derivedDataPath ios/build ",
        "name": "iPhone 8",
        "type": "ios.simulator"
      }
    },
    "test-runner": "jest"
  }
}
```

### `index.js`
```json
export class Application extends Component {
  constructor(props) {
    super(props);
  }

  componentDidMount() {
    this.removeNotificationListener = firebase.notifications().onNotification(received => {
      if (received && get(received, '_data.displayInForeground') !== 'false') {
        const notification = new firebase.notifications.Notification()
          .setBody(get(received, '_body'))
          .setData(get(received, '_data'))
          .setNotificationId(get(received, '_notificationId'))
          .setTitle(get(received, '_title'));

        if (Platform.OS === 'android') {
          const channel = new firebase.notifications.Android.Channel(
            'my-channel',
            'My Channel',
            firebase.notifications.Android.Importance.Max
          ).setDescription('My notifications channel');

          firebase.notifications().android.createChannel(channel);

          notification.android.setColor(styles.colors.p06);
          notification.android.setChannelId('my-channel');
          notification.android.setPriority(firebase.notifications.Android.Priority.Max);
          notification.android.setSmallIcon('ic_notifications');
        }

        firebase.notifications().displayNotification(notification);
      }
    });

    this.removeNotificationOpenedListener = firebase.notifications().onNotificationOpened(notification => {
      this.handleNotificationOpened(notification);
    });

    firebase
      .notifications()
      .getInitialNotification()
      .then(notification => {
        if (notification) {
          this.handleNotificationOpened(notification);
        }
      });
  }

  componentWillUnmount() {
    this.removeNotificationOpenedListener();
    this.removeNotificationListener();
  }


  handleNotificationOpened(notification) {
    if (notification && get(notification, 'notification._data.url')) {
      this.setUser({ notification });

      if (PlatformUtils.isIOS) {
        const navigation = get(NavigatorInstance.navigator, '_navigation');

        Navigation.navigate(navigation, 'splash');
      }
    }
  }
}
```

#### `firebase.json` for react-native-firebase v6:

```json
# N/A
```

### iOS

<details><summary>Click To Expand</summary>
<p>

#### `ios/Podfile`:

- [ ] I'm not using Pods
- [x] I'm using Pods and my Podfile looks like:
```json
platform :ios, '9.0'
require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'

source 'https://github.com/CocoaPods/Specs.git'

use_frameworks!

target "Wallet" do
  pod 'JumioMobileSDK/Netverify', '3.3.1'

  # Required by react native.
  pod 'DoubleConversion', :podspec => '../node_modules/react-native/third-party-podspecs/DoubleConversion.podspec'
  pod 'FBLazyVector', :path => "../node_modules/react-native/Libraries/FBLazyVector"
  pod 'FBReactNativeSpec', :path => "../node_modules/react-native/Libraries/FBReactNativeSpec"
  pod 'Firebase/Core', '~> 6.13.0'
  pod 'Firebase/Messaging', '~> 6.13.0'
  pod 'Folly', :podspec => '../node_modules/react-native/third-party-podspecs/Folly.podspec'
  pod 'glog', :podspec => '../node_modules/react-native/third-party-podspecs/glog.podspec'
  pod 'RCTRequired', :path => "../node_modules/react-native/Libraries/RCTRequired"
  pod 'RCTTypeSafety', :path => "../node_modules/react-native/Libraries/TypeSafety"
  pod 'React-Core', :path => '../node_modules/react-native/'
  pod 'React-Core/DevSupport', :path => '../node_modules/react-native/'
  pod 'React-Core/RCTWebSocket', :path => '../node_modules/react-native/'
  pod 'React-CoreModules', :path => '../node_modules/react-native/React/CoreModules'
  pod 'React-cxxreact', :path => '../node_modules/react-native/ReactCommon/cxxreact'
  pod 'React-jsi', :path => '../node_modules/react-native/ReactCommon/jsi'
  pod 'React-jsiexecutor', :path => '../node_modules/react-native/ReactCommon/jsiexecutor'
  pod 'React-jsinspector', :path => '../node_modules/react-native/ReactCommon/jsinspector'
  pod 'React-RCTActionSheet', :path => '../node_modules/react-native/Libraries/ActionSheetIOS'
  pod 'React-RCTAnimation', :path => '../node_modules/react-native/Libraries/NativeAnimation'
  pod 'React-RCTBlob', :path => '../node_modules/react-native/Libraries/Blob'
  pod 'React-RCTImage', :path => '../node_modules/react-native/Libraries/Image'
  pod 'React-RCTLinking', :path => '../node_modules/react-native/Libraries/LinkingIOS'
  pod 'React-RCTNetwork', :path => '../node_modules/react-native/Libraries/Network'
  pod 'React-RCTSettings', :path => '../node_modules/react-native/Libraries/Settings'
  pod 'React-RCTText', :path => '../node_modules/react-native/Libraries/Text'
  pod 'React-RCTVibration', :path => '../node_modules/react-native/Libraries/Vibration'
  pod 'React', :path => '../node_modules/react-native/'
  pod 'ReactCommon/jscallinvoker', :path => "../node_modules/react-native/ReactCommon"
  pod 'ReactCommon/turbomodule/core', :path => "../node_modules/react-native/ReactCommon"
  pod 'Yoga', :path => '../node_modules/react-native/ReactCommon/yoga'
end

post_install do |installer|
  rnfirebase = installer.pods_project.targets.find { |target| target.name == 'RNFirebase' }
  rnfirebase.build_configurations.each do |config|
    config.build_settings['HEADER_SEARCH_PATHS'] = '$(inherited) ${PODS_ROOT}/Headers/Public/**'
  end
end

use_native_modules!
```

<!--        - Android: `android/build.gradle` contents. -->
<!--        - Android: `android/app/build.gradle` contents. -->
<!--        - Android: `AndroidManifest.xml` contents. -->

```ruby
# N/A
```

#### `AppDelegate.m`:

```objc
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */

#import "AppDelegate.h"

#import <Firebase.h>

#import <React/RCTBridge.h>
#import <React/RCTBundleURLProvider.h>
#import <React/RCTRootView.h>
#import <React/RCTLinkingManager.h>
#import "RNSplashScreen.h"
#import "RNFirebaseNotifications.h"
#import "RNFirebaseMessaging.h"

@implementation AppDelegate

- (BOOL)application:(UIApplication *)application openURL:(NSURL *)url
  sourceApplication:(NSString *)sourceApplication annotation:(id)annotation
{
  return [RCTLinkingManager application:application openURL:url
                      sourceApplication:sourceApplication annotation:annotation];
}

- (void)applicationWillEnterForeground:(UIApplication *)application
{
    [[self.window.rootViewController.view viewWithTag:999] removeFromSuperview];
}

// Only if your app is using [Universal Links](https://developer.apple.com/library/prerelease/ios/documentation/General/Conceptual/AppSearch/UniversalLinks.html).
- (BOOL)application:(UIApplication *)application continueUserActivity:(NSUserActivity *)userActivity
 restorationHandler:(void (^)(NSArray * _Nullable))restorationHandler
{
  return [RCTLinkingManager application:application
                   continueUserActivity:userActivity
                     restorationHandler:restorationHandler];
}

- (void)applicationDidEnterBackground:(UIApplication *)application
{
    UIBlurEffect *effect = [UIBlurEffect effectWithStyle:UIBlurEffectStyleRegular];
    UIVisualEffectView *bluredView = [[UIVisualEffectView alloc] initWithEffect:effect];

    bluredView.frame = self.window.rootViewController.view.bounds;
    bluredView.tag = 999;

    [self.window.rootViewController.view addSubview:bluredView];
}

- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions
{
  if ([FIRApp defaultApp] == nil) {
    [FIRApp configure];
  }

  if (launchOptions) { //launchOptions is not nil
      NSDictionary *userInfo = [launchOptions valueForKey:UIApplicationLaunchOptionsRemoteNotificationKey];
      NSDictionary *apsInfo = [userInfo objectForKey:@"aps"];
      if (apsInfo) { //apsInfo is not nil
        NSLog(@"apsInfo %@", apsInfo);
        [[RNFirebaseNotifications instance] didReceiveRemoteNotification:userInfo fetchCompletionHandler:nil];
      }
  }

  [RNFirebaseNotifications configure];

  RCTBridge *bridge = [[RCTBridge alloc] initWithDelegate:self launchOptions:launchOptions];
  RCTRootView *rootView = [[RCTRootView alloc] initWithBridge:bridge moduleName:@"Wallet" initialProperties:nil];
  rootView.backgroundColor = [UIColor blackColor];
  self.window = [[UIWindow alloc] initWithFrame:[UIScreen mainScreen].bounds];

  if (@available(iOS 13.0, *)) {
    self.window.overrideUserInterfaceStyle = UIUserInterfaceStyleLight;
  }

  UIViewController *rootViewController = [UIViewController new];
  rootViewController.view = rootView;
  self.window.rootViewController = rootViewController;
  [self.window makeKeyAndVisible];

//  [RNSplashScreen show];
  [RNSplashScreen showSplash:@"LaunchScreen" inRootView:rootView];

  UNUserNotificationCenter.currentNotificationCenter.delegate = self;

  [UIApplication sharedApplication].applicationIconBadgeNumber = 0;

  return YES;
}

- (void)application:(UIApplication *)application didReceiveLocalNotification:(UILocalNotification *)notification {
  [[RNFirebaseNotifications instance] didReceiveLocalNotification:notification];
}

- (void)application:(UIApplication *)application didReceiveRemoteNotification:(nonnull NSDictionary *)userInfo
                                                       fetchCompletionHandler:(nonnull void (^)(UIBackgroundFetchResult))completionHandler{
  [[RNFirebaseNotifications instance] didReceiveRemoteNotification:userInfo fetchCompletionHandler:completionHandler];
}

- (void)application:(UIApplication *)application didRegisterUserNotificationSettings:(UIUserNotificationSettings *)notificationSettings {
  [[RNFirebaseMessaging instance] didRegisterUserNotificationSettings:notificationSettings];
}

- (NSURL *)sourceURLForBridge:(RCTBridge *)bridge
{
#if DEBUG
  return [[RCTBundleURLProvider sharedSettings] jsBundleURLForBundleRoot:@"index" fallbackResource:nil];
#else
  return [[NSBundle mainBundle] URLForResource:@"main" withExtension:@"jsbundle"];
#endif
}

- (void)userNotificationCenter:(UNUserNotificationCenter* )center willPresentNotification:(UNNotification* )notification withCompletionHandler:(void (^)(UNNotificationPresentationOptions options))completionHandler {

  completionHandler(UNNotificationPresentationOptionAlert);
}

@end

```

</p>
</details>

---

### Android

<details><summary>Click To Expand</summary>
<p>

#### Have you converted to AndroidX?

<!--- Mark any options that apply below -->
- [ ] my application is an AndroidX application?
- [ ] I am using `android/gradle.settings` `jetifier=true` for Android compatibility?
- [X] I am using the NPM package `jetifier` for react-native compatibility?

#### `android/build.gradle`:

```groovy
// N/A
```

#### `android/app/build.gradle`:

```groovy
// N/A
```

#### `android/settings.gradle`:

```groovy
// N/A
```

#### `MainApplication.java`:

```java
// N/A
```

#### `AndroidManifest.xml`:

```xml
<!-- N/A -->
```

</p>
</details>


---

## Environment

<details><summary>Click To Expand</summary>
<p>

**`react-native info` output:**

<!-- Please run `react-native info` on your terminal and paste the contents into the code block below -->

```
warn Your project is using deprecated "rnpm" config that will stop working from next release. Please use a "react-native.config.js" file to configure the React Native CLI. Migration guide: https://github.com/react-native-community/cli/blob/master/docs/configuration.md
warn The following packages use deprecated "rnpm" config that will stop working from next release:
  - react-native-sentry: https://github.com/getsentry/react-native-sentry
Please notify their maintainers about it. You can find more details at https://github.com/react-native-community/cli/blob/master/docs/configuration.md#migration-guide.
info Fetching system and libraries information...
System:
    OS: macOS 10.15.2
    CPU: (12) x64 Intel(R) Core(TM) i7-9750H CPU @ 2.60GHz
    Memory: 55.24 MB / 32.00 GB
    Shell: 5.7.1 - /bin/zsh
  Binaries:
    Node: 10.17.0 - /usr/local/opt/node@10/bin/node
    Yarn: 1.21.0 - /usr/local/bin/yarn
    npm: 6.11.3 - /usr/local/opt/node@10/bin/npm
  SDKs:
    iOS SDK:
      Platforms: iOS 13.2, DriverKit 19.0, macOS 10.15, tvOS 13.2, watchOS 6.1
    Android SDK:
      API Levels: 28, 29
      Build Tools: 28.0.3, 29.0.2
  IDEs:
    Android Studio: 3.5 AI-191.8026.42.35.6010548
    Xcode: 11.3/11C29 - /usr/bin/xcodebuild
  npmPackages:
    react: 16.9.0 => 16.9.0
    react-native: 0.61.5 => 0.61.5
```

<!-- change `[ ]` to `[x]` to select an option(s) -->

- **Platform that you're experiencing the issue on**:
  - [X] iOS
  - [ ] Android
  - [ ] **iOS** but have not tested behavior on Android
  - [ ] **Android** but have not tested behavior on iOS
  - [ ] Both
- **`react-native-firebase` version you're using that has this issue:**
  - `v5.6.0`
- **`Firebase` module(s) you're using that has the issue:**
  - `Notifications`
- **Are you using `TypeScript`?**
  - `N`
  
</p>
</details>


<!-- Thanks for reading this far down ❤️  -->
<!-- High quality, detailed issues are much easier to triage for maintainers -->

<!-- For bonus points, if you put a 🔥 (:fire:) emojii at the start of the issue title we'll know -->
<!-- that you took the time to fill this out correctly, or, at least read this far -->

---

Think `react-native-firebase` is great? Please consider supporting all of the project maintainers and contributors by donating via our [Open Collective](https://opencollective.com/react-native-firebase/donate) where all contributors can submit expenses. [[Learn More]](https://invertase.io/oss/react-native-firebase/contributing/donations-expenses)

- 👉 Check out [`React Native Firebase`](https://twitter.com/rnfirebase) and [`Invertase`](https://twitter.com/invertaseio) on Twitter for updates on the library.

