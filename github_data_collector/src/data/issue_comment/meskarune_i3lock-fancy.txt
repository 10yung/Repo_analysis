de145dffe728b9cb67d19addb1daf6a060e34c07 fixed the leak of tmp files, I'l appreciate a lot seeing it land on Debian :)

Thanks a lot for i3lock-fancy, I greatly appreciate it! (I sometime remove the text, lock, a blur, when I'm teaching, so I can lock my machine, go grab a coffee, while my students can still read on the video projector, don't know if we should turn this as a feature or not).
That is fork of work but have fix many errors
https://github.com/meskarune/i3lock-fancy/pull/147
little fix
D≈çjutsu(Literally meaning: Eye Techniques) images look pretty cool when applied as i3-locks , these images are 200X200 pixels and perfectly matches the lock screen size.
This PR will make it very popular among anime fans as the Sharingan,Rinnegan etc look really good as i3 lock icons.
It would be really handy to have an uninstall option in the Makefile, instead of having to remove everything manually. 
Added Multi-Monitor support to the current version of i3lock-fancy
The main motivation for this was to speed up the script (see #6). I also added support for an arbitrary number of monitors (see #10).
It now takes around 0.3 s on my desktop and 0.6 s on my laptop (0.2/0.4 if you use `-pixelate`).

The method is to build up a `filtergraph` for `ffmpeg`. The stages of the filtergraph are as follows:
- Blur or pixelate or greyscale the input image.
- Add the lock images.
- Add text. This is achieved by creating a small (800x100) area which black text is added to and then blurred, then adding some non-blurred black text for a more solid outline, and finally adding the white text over the top. The result is a black shadow around the text so it can be read on any background. The reason for the 800x100 area is it's quicker to apply the blur.

Missing features and problems:
- No lightness/darkness detection.
- As `ffmpeg` handles capturing the desktop now, I removed the custom `scrot` command part, so you can no longer set custom flags e.g. imposing a delay. I don't think this is a huge problem as you can create your delay before executing the script.
- Using `xrandr` to figure out the size and location of all the displays. It's probably not ideal but I couldn't find an easier way.
I was trying to use the `-n` option for `i3lock` in `i3lock-fancy` to use in a helper script but it doesn't work.

```
#!/bin/bash
killall compton
i3lock-fancy -npg
compton
```

I want to kill compton before run the `i3lock-fancy` but this script only work with `i3lock`.
This project installs a bunch of icons, but only allows two of them to be used (and they're automatically selected).
This PR allows overriding the automatic behaviour to allow any image to be used and adds a default "empty" image.
I have adapted the makefile and i3lock-fancy so that a custom installation prefix can be specified.