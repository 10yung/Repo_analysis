With CVE-2019-1448
KB product IDs are different but have the same URL link.
I think this is an API bug.
Have you considered helping.
Details of attached file.

Some other CVE-IDs are similar.
[Microsoft-API_2019-nov.xlsx](https://github.com/microsoft/MSRC-Microsoft-Security-Updates-API/files/3995467/Microsoft-API_2019-nov.xlsx)

Hello, I'm working with a project team who is building a security/compliance app that takes details of applicable KBs for (usually Windows Server) systems from WSUS and/or SCCM, and uses that export as input to call Security Update API.  In general, this process works, but the team will have a consisten number (about 45) updates that are determined to be applicable, and these updates are not found when calling the Security Update API.

Can the forum moderator help us identify why these particular KBs are not being found?
There is bit in of a pattern as 25 of the 50 "missing KBs" look to be related to .NET Framework updates, and there are at least 4 related to servicing stack updates, but remainder, on surface, don't appear to have any specific pattern. 

Compared the missing updates to another post from this forum in 2018, and there were no common KBs (from the 2018 post), so curious if someone who directly supports the Security Update API is able to repro independently and then confirm what behavior is expected and whether we have possible fixes or mitigations.


[MissingKBsv2.xlsx](https://github.com/microsoft/MSRC-Microsoft-Security-Updates-API/files/3976841/MissingKBsv2.xlsx)
[SecurityUpdateGuideSupersedence.docx](https://github.com/microsoft/MSRC-Microsoft-Security-Updates-API/files/3976842/SecurityUpdateGuideSupersedence.docx)


When I try running this : `https://api.msrc.microsoft.com/Updates?api-version=2019&$filter=CurrentReleaseDate gt 2019-10-01`
it returns
`{
    "error": {
        "code": "",
        "message": "OData URI failed validation"
    }
}`
This was working fine, but have noticed this week the failure.
Swagger and documentation on the API mentioned that OData is supported
Hello,

What is the meaning of 2 or 5 or other values in the Type field of $cvrfDoc.Vulnerability.Remediations ?

Thanks
Since there is one/more Product ID with every KB:

example:

10521    Microsoft Office 2010 Service Pack 2 (32-bit editions)

My question is how this "10521" calculated? Is it from the GUID "{90140000-0016-0409-0000-0000000FF1CE}"?

I need to convert all the GUID to Product ID to map all affected products on my system.


THANK YOU
Dataset `2016-Oct` and `2017-May-B` has no Vulnerabilities field, why do you keep it here O_O

e.g

```
{
  "DocumentTitle": {
    "Value": "May 8 2017 Security Updates"
  },
  "DocumentType": {
    "Value": "Security Update"
  },
  "DocumentPublisher": {
    "ContactDetails": {
      "Value": "secure@microsoft.com"
    },
    "IssuingAuthority": {
      "Value": "The Microsoft Security Response Center (MSRC) identifies, monitors, resolves, and responds to security incidents and Microsoft software security vulnerabilities. For more information, see http://www.microsoft.com/security/msrc."
    },
    "Type": 0
  },
  "DocumentTracking": {
    "Identification": {
      "ID": {
        "Value": "2017-May-B"
      },
      "Alias": {
        "Value": "2017-May-B"
      }
    },
    "Status": 2,
    "Version": "1.0",
    "RevisionHistory": [
      {
        "Number": "1",
        "Date": "2017-05-08T07:00:00",
        "Description": {
          "Value": "May 8 2017 Security Updates"
        }
      }
    ],
    "InitialReleaseDate": "2017-05-08T07:00:00",
    "CurrentReleaseDate": "2017-05-08T07:00:00"
  },
  "DocumentNotes": [
    {
      "Title": "Release Notes",
      "Audience": "Public",
      "Type": 1,
      "Ordinal": "1",
      "Value": "<p>The May security release consists of security updates for the following software:</p>\n<ul>\n<li>Microsoft Forefront</li>\n<li>Windows Defender</li>\n</ul>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p><u>Known Issues</u></p>\n<p>&nbsp;</p>"
    },
    {
      "Title": "Legal Disclaimer",
      "Audience": "Public",
      "Type": 5,
      "Ordinal": "2",
      "Value": "The information provided in the Microsoft Knowledge Base is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply."
    }
  ],
  "ProductTree": {
    "Branch": [
      {
        "Type": 0,
        "Name": "Microsoft"
      }
    ]
  }
}
```
In the [old excel table](https://www.microsoft.com/en-us/download/details.aspx?id=36982) I can find information about KB4010318

But in the updates API it's gone (I downloaded all available crvf JSON)

```
2016-Apr.json.gz
2016-Aug.json.gz
2016-Dec.json.gz
2016-Jul.json.gz
2016-Jun.json.gz
2016-May.json.gz
2016-Nov.json.gz
2016-Oct.json.gz
2016-Sep.json.gz
2017-Apr.json.gz
2017-Aug.json.gz
2017-Dec.json.gz
2017-Feb.json.gz
2017-Jan.json.gz
2017-Jul.json.gz
2017-Jun.json.gz
2017-Mar.json.gz
2017-May-B.json.gz
2017-May.json.gz
2017-Nov.json.gz
2017-Oct.json.gz
2017-Sep.json.gz
2018-Apr.json.gz
2018-Aug.json.gz
2018-Dec.json.gz
2018-FEB.json.gz
2018-Jan.json.gz
2018-Jul.json.gz
2018-Jun.json.gz
2018-Mar.json.gz
2018-May.json.gz
2018-Nov.json.gz
2018-Oct.json.gz
2018-Sep.json.gz
2019-Feb.json.gz
2019-Jan.json.gz
```

Am I wrong?

When requesting an API key one needs to set the name field in the Microsoft account via account.microsoft.com, otherwise the request website (Security Updates Guide) will run in circles (login, request, login, request, login, ...), as discussed in issue #15.
```
$KBArticleObject | 
        ForEach-Object {
            $kb = $_
            #In older months, there won't be a subtype. Handle this so there are not empty ()'s
            if($kb.SubType){
                $HTML_TO_RETURN += $('<a href="{0}" >{1} ({2})' -f $kb.URL, $kb.ID, $kb.SubType)
            } else {
                $HTML_TO_RETURN += $('<a href="{0}" >{1}' -f $kb.URL, $kb.ID)
            }
```

This script under Process takes data from Get-MSrcCVRFAffectedSoftware, where $KB = $_ .However there does not exist a $KB.subtype, as $KB is a sub object under Get-MsrcCVRFAffectedSoftware output object.

Example of one output object of Get-MsrcCVRFAffectedSoftware

FullProductName : Windows Server 2008 for x64-based Systems Service Pack 2
KBArticle       : @{ID=4131188; URL=https://catalog.update.microsoft.com/v7/site/Search.aspx?q=KB4131188; SubType=Security Update}
CVE             : CVE-2018-8120
Severity        : Important
Impact          : Elevation of Privilege
RestartRequired : Yes
Supercedence    : 4093224
CvssScoreSet    : @{base=7.00; temporal=6.30; vector=CVSS:3.0/AV:L/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H/E:P/RL:O/RC:C}

Hence the line $KB = $_ should actually be $kb = $_.KBArticle
Is there a way of fetching the list of all Microsoft products and their Product ID rather than using the productTree list everymonth. 