### What problem does this feature solve?
I'm currently debugging the integration of a Date Range Picker component, which generates *a lot* of events. Finding the events relevant to me is a bit cumbersome, as they get lost in a sea of irrelevant events.

I can filter for events, but that function is somewhat limited:

- <del>it only matches the event name (matching also the component name would help)</del>
  <ins>(I've just discovered that `<Component>` matches against component names)</ins>
- negative matches are not possible (sth. like `-hover` or CSS-like `:not(hover)` would help)
- multiple matches are not possible (sth. like `birthday, price` or `birthday OR price` would help)

I'm aware that the suggestions above might be in conflict with existing (bad?) practice of actually naming an event `-hover` (or, more realistically, finding events names `on-hover`), but I'm not fixed on syntax.

### What does the proposed API look like?
I'm not familiar with the internals of vue-devtools.

<!-- generated by vue-issues. DO NOT REMOVE -->

![image](https://user-images.githubusercontent.com/327411/72440567-5f887300-37a9-11ea-86e9-5875b5efad7c.png)

### Version
5.3.3



### Browser and OS info
Win10 electron





### Steps to reproduce
- 加载项目
- 点击vue-devtool的组件项
- vue-devtool屏幕变成全灰色
- 无法使用vue-devtool
- 刷新项目仍然无效，并不显示vue-devtool成功加载的输出
- 重新加载项目
- 点出devtool中的vue，vue可以输出vue-devtool成功加载
- 再次点击vue--devtool的组件项又会进入全灰色
- CMD项目加载中vue-devtool加载显示Attempted to load extension "Vue.js devtools" that has already been loaded.无变化

### What is expected?
vue-devtool可以使用

### What is actually happening?
这个情况是在我使用vue ui 使用ESlint 检查后出现

<!-- generated by vue-issues. DO NOT REMOVE -->

![3](https://user-images.githubusercontent.com/45911286/71957745-8a168100-3229-11ea-939e-d061d894afc4.gif)

### Version
5.3.3



### Browser and OS info
chrome 74





### Steps to reproduce
my project use iframe which has same domain but different url,like this:
(example)my project url is http://es.cn.com/d.html#/query and iframe's url is http://es.cn.com/#/querypanel,
the devtools sometimes show iframe's vuex state

### What is expected?
show my project's vuex state

### What is actually happening?
show iframe's vuex state

---
Actually，i create a demo and it's ok,but in my real project,it's show iframe's vuex state,it's really Annoying ,i want know why and how to fix it

<!-- generated by vue-issues. DO NOT REMOVE -->
### What problem does this feature solve?
When developing vue applications on remote servers is not always possible to connect with the ngrok tunnel as proposed on the README for the standalone electron app. It is also very inconvenient having to install ngrok and the electron shell just to be able to debug the application. 

I believe extensions provide a better user experience as they are directly integrated in the web browser and do not require configuration on the projects or developers machines.

### What does the proposed API look like?
Unfortunately I don't have experience developing safari extensions but I'm willing to spend time helping on the development of this feature and learning how to do it if the idea is supported.

<!-- generated by vue-issues. DO NOT REMOVE -->
Before:
![image](https://user-images.githubusercontent.com/3998654/71641685-9db16d00-2ca8-11ea-95a2-837f334333ef.png)
After:
![image](https://user-images.githubusercontent.com/3998654/71641690-b4f05a80-2ca8-11ea-906a-ebbcd11b7b6c.png)

Resolves https://github.com/vuejs/vue-devtools/issues/1136
Some things have to be improved !

- [ ] persist the element isolated somewhere in order to avoid multiple isolated elements (one element should be isolated)
- [ ] use an animation
- [ ] provide a way to customize the opacity level (in the settings panel)
- [ ] remove parents style without hiding them
### What problem does this feature solve?
When we want to work on a specific and complex component (like SVG component), we would like somehow to only see the concerned component, not others.

This could help the developer to focus on his work ! I know it could be helpful for me.

### What does the proposed API look like?
![2019-12-30 03 43 24](https://user-images.githubusercontent.com/2922851/71566295-c3772000-2ab6-11ea-8138-b29dd4c83578.gif)

Siblings elements have to be hidden (or made translucent) for getting the isolation behavior. Thus, this must done for all parent nodes (parent nodes don't have to be hide/translucent, only theirs siblings).

Technically, it could be done by two way (at this moment) : 
* by a loop that add or remove a simple `el.style.opacity = 0`
* by a generated style which hides/translucents all elements (this way is heavier but could keep a better HMR experience).

Please consider this small feature request, and please look at the following PR.

Thanks.

<!-- generated by vue-issues. DO NOT REMOVE -->
### Version
5.3.3



### Browser and OS info
Firefox, version 71.0 64bit/ Ubuntu 18.04.3 LTS





### Steps to reproduce
1.Run any sample vue project.
2. open the vue server in firefox.
3. open vue devtools and try to edit any data variables.
4. try to search for any components in the project

### What is expected?
1.we should be able to search for components.
2. we should be able to edit data variables.

### What is actually happening?
1. not able to search components.
2. not able to edit data variables.

<!-- generated by vue-issues. DO NOT REMOVE -->
### Version
5.3.3



### Browser and OS info
Chrome 77 and 78 (at least)





### Steps to reproduce
A Vuex mutation like this:
```
    ENQUEUE_CALC(state, future) {
        state.calculationQueue = state.calculationQueue.then(future);
        throw Error();
    }
```

The workaround is to avoid throwing mutations.


### What is expected?
State to load.

### What is actually happening?
The "Loading state..." message hanging forever

---
Found after Chrome 77 started throwing unexpected exceptions from my previously working promises: https://bugs.chromium.org/p/chromium/issues/detail?id=1008376

<!-- generated by vue-issues. DO NOT REMOVE -->
### Version
5.3.3

### Browser and OS info
Chrome 79.0.3945.79 / Windows 10

### Steps to reproduce
1. Open Vue devtools
2. Navigate to Vuex tab
3. Click on any state record

### What is expected?
The Vuex state shows correctly populated data, matching what's shown on the webpage

### What is actually happening?
The store is showing empty strings, objects, and arrays where there should be data. It seems that the state hasn't changed from the initial state.

![image](https://user-images.githubusercontent.com/11031514/70819793-b363fe80-1d9c-11ea-9ffd-544533b9d29b.png)

---
The workaround is to keep closing and re-opening the entire Chrome devtools window until the Vuex tab shows the correct data again

<!-- generated by vue-issues. DO NOT REMOVE -->