**Device codename**: Xiaomi Redmi 8

Can you please provide official TWPR for this model?

Thank you.


**Device codename**:  Redmi Note 8 Pro
Please provide Official TWRP 
Thankyou in Advance
- [ ] I am running an official build of TWRP, downloaded from https://twrp.me/Devices/
- [x] I am running the latest version of TWRP
- [x] I have read the FAQ (https://twrp.me/FAQ/)
- [x] I have searched for my issue and it does not already exist

**Device codename**: M3s
**TWRP version**: From master (https://github.com/omnirom/android_bootable_recovery/commit/a895118a1fb88595d41c7e29b079d9f3c547258c)

#### WHAT STEPS WILL REPRODUCE THE PROBLEM?
Just build TWRP for Android 5.1

#### WHAT IS THE EXPECTED RESULT?
No build problems

#### WHAT HAPPENS INSTEAD?
Build problem
`bootable/recovery/twrp-functions.cpp:527:17: error: no matching constructor for initialization of 'std::ifstream' (aka 'basic_ifstream<char, char_traits<char> >')`

#### ADDITIONAL INFORMATION
You can find full build log here: https://travis-ci.com/ElXreno/twrp_device_meizu_m3s/jobs/252510147#L8733 (line with error are shown automatically)

- [ ] I am running an official build of TWRP, downloaded from https://twrp.me/Devices/
- [ ] I am running the latest version of TWRP
- [ ] I have read the FAQ (https://twrp.me/FAQ/)
- [x] I have searched for my issue and it does not already exist

**a610**: <!-- Device codename -->
**latest*: <!-- TWRP version installed -->

#### WHAT STEPS WILL REPRODUCE THE PROBLEM?
<!-- Explain the steps necessary to reproduce the problem, as completely as possible -->
I tey compili android 9 twrp and it comment this issue:

[ 99% 746/747] glob vendor/omni/overlay/common/**/*
[  4% 489/10453] target  C++: libinit_mediatek <= vendor/mediatek/init/init_mediatek.cpp
FAILED: /home/popravki/1/omnirom/out/target/product/a610/obj/STATIC_LIBRARIES/libinit_mediatek_intermediates/init_mediatek.o
/bin/bash -c "PWD=/proc/self/cwd /usr/bin/ccache prebuilts/clang/host/linux-x86/clang-4691093/bin/clang++       -I vendor/mediatek/include -I system/core/init -I vendor/mediatek/init -I /home/popravki/1/omnirom/out/target/product/a610/obj/STATIC_LIBRARIES/libinit_mediatek_intermediates -I /home/popravki/1/omnirom/out/target/product/a610/gen/STATIC_LIBRARIES/libinit_mediatek_intermediates -I libnativehelper/include_jni \$(cat /home/popravki/1/omnirom/out/target/product/a610/obj/STATIC_LIBRARIES/libinit_mediatek_intermediates/import_includes)  -I system/core/include -I system/media/audio/include -I hardware/libhardware/include -I hardware/libhardware_legacy/include -I hardware/ril/include -I libnativehelper/include -I frameworks/native/include -I frameworks/native/opengl/include -I frameworks/av/include -isystem /home/popravki/1/omnirom/out/target/product/a610/obj/include -isystem bionic/libc/include -isystem bionic/libc/kernel/uapi -isystem bionic/libc/kernel/uapi/asm-arm64 -isystem bionic/libc/kernel/android/scsi -isystem bionic/libc/kernel/android/uapi -c  -Werror=implicit-function-declaration -DANDROID -fmessage-length=0 -W -Wall -Wno-unused -Winit-self -Wpointer-arith -no-canonical-prefixes -DNDEBUG -UDEBUG -fno-exceptions -Wno-multichar -O2 -g -fno-strict-aliasing -fdebug-prefix-map=/proc/self/cwd= -D__compiler_offsetof=__builtin_offsetof -Werror=int-conversion -Wno-reserved-id-macro -Wno-format-pedantic -Wno-unused-command-line-argument -fcolor-diagnostics -Wno-expansion-to-defined -Wno-zero-as-null-pointer-constant -fdebug-prefix-map=\$PWD/= -ffunction-sections -fdata-sections -fno-short-enums -funwind-tables -fstack-protector-strong -Wa,--noexecstack -D_FORTIFY_SOURCE=2 -Wstrict-aliasing=2 -Werror=return-type -Werror=non-virtual-dtor -Werror=address -Werror=sequence-point -Werror=date-time -Werror=format-security -nostdlibinc -march=armv8-a -mcpu=cortex-a53 -target aarch64-linux-android -Bprebuilts/gcc/linux-x86/aarch64/aarch64-linux-android-4.9/aarch64-linux-android/bin  -Wsign-promo -Wno-inconsistent-missing-override -Wno-null-dereference -D_LIBCPP_ENABLE_THREAD_SAFETY_ANNOTATIONS -Wno-thread-safety-negative -Wno-gnu-include-next -fvisibility-inlines-hidden  -std=gnu++14   -fno-rtti -Wall -Wall -fPIC -D_USING_LIBCXX -DANDROID_STRICT   -Werror=int-to-pointer-cast -Werror=pointer-to-int-cast -Werror=address-of-temporary -Werror=return-type -Wno-tautological-constant-compare -Wno-null-pointer-arithmetic -Wno-enum-compare -Wno-enum-compare-switch     -MD -MF /home/popravki/1/omnirom/out/target/product/a610/obj/STATIC_LIBRARIES/libinit_mediatek_intermediates/init_mediatek.d -o /home/popravki/1/omnirom/out/target/product/a610/obj/STATIC_LIBRARIES/libinit_mediatek_intermediates/init_mediatek.o vendor/mediatek/init/init_mediatek.cpp"
vendor/mediatek/init/init_mediatek.cpp:36:10: fatal error: 'vendor_init.h' file not found
#include "vendor_init.h"
         ^~~~~~~~~~~~~~~
1 error generated.
[  4% 494/10453] target  C++: libadbd <= system/core/adb/adb.cpp
ninja: build stopped: subcommand failed.
02:48:51 ninja failed with: exit status 1

then i get from lineage 16 vendor_init.h and vendor_init.cpp and copy it to correct directory. After compile rm -rf out it comment can't something copy "" Ofiicialy this zte a610 dont have twrp yestarday i make it run but it compile every time more than 20 mb. recovery image. And twrp LIE that new twrp is small of old. I disable all busybox, crypto. And all issue was IN init. init was compiled 2.x MB. compare with old twrp init is 3 byte now i paste init from mediatek and it is impossible to compile. I try with kernel source and prebuilt kernel. When i paste new twrp with old twrp only move directory and init is old it run... ut when run new twrp with new init 2.x mb it don't run.
#### WHAT IS THE EXPECTED RESULT?
<!-- Explain what the expected result is, as completely as possible -->

#### WHAT HAPPENS INSTEAD?
<!-- Explain what happens instead, as completely as possible -->

#### ADDITIONAL INFORMATION
<!-- Add any additional information you know about the issue, such as possible causes and solutions -->

<!-- Use https://paste.omnirom.org/ and upload `/tmp/recovery.log` and the output of `dmesg` -->
`/tmp/recovery.log`: <!-- Link here -->
`dmesg`: <!-- Link here -->

When I try to decrypt my Pixel using TWRP, `gatekeeper verification failed` appears in the logs. What does this mean and why is it relevant?
- [ ] I am running an official build of TWRP, downloaded from https://twrp.me/Devices/
- [x] I am running the latest version of TWRP
- [x] I have read the FAQ (https://twrp.me/FAQ/)
- [x] I have searched for my issue and it does not already exist

**Device codename**: raphael
**TWRP version**: 3.3.x

#### WHAT STEPS WILL REPRODUCE THE PROBLEM?
I created a backup of all partitions (except cache) using TWRP.

#### WHAT IS THE EXPECTED RESULT?
I expect the folder /data/misc/keystore/user_0 (which contains the Signal secret private key file and the registered fingerprints for example) to be included in the backup.

#### WHAT HAPPENS INSTEAD?
I wanted to ensure that the backup contains the expected folder. So I walked through the split data images and there the /data/misc/keystore/user_0 folder does not exist. 

Restoring a previous TWRP backup didn't work and I had to wipe and start from fresh.

May be some more folders are missing. I opened a recent TWRP backup from my OnePlus2 device and there the mentioned path exists in the backup. I assume that restoring the newly backup made will also be not recoverable because it's missing some crucial data.

Other content from the data partition like /data/data or /data/app was included in the backup so TWRP was able to access this partition. I don't know why it excluded some folders.

#### ADDITIONAL INFORMATION
I already opened an issue for in the repo of the maintainer for this unofficial build and he mentioned that I should contact you. (https://github.com/mauronofrio/android_device_xiaomi_raphael/issues/2)

`/tmp/recovery.log`: there was an error while uploading (413 Request Entity Too Large), so I've put it in my nextcloud (https://cloud.therealdarklord.eu/s/QxR8Qpebqtwdi6e), added .txt extension there so a short preview is shown
`dmesg`:

- [/ ] I am running an official build of TWRP, downloaded from https://twrp.me/Devices/
- [/ ] I am running the latest version of TWRP
- [/ ] I have read the FAQ (https://twrp.me/FAQ/)
- [/ ] I have searched for my issue and it does not already exist

**Device codename**: crosshatch
**TWRP version**: 3.3.1-2

#### WHAT STEPS WILL REPRODUCE THE PROBLEM?
Update to android 10
run TWRP via fastboot boot
observe not asking for system password
try to mount /data
profit

#### WHAT IS THE EXPECTED RESULT?
Asks for password, allows mounting of data, system, etc

#### WHAT HAPPENS INSTEAD?
No password, doesnt mount (checkbox doesnt check)

#### ADDITIONAL INFORMATION
<!-- Add any additional information you know about the issue, such as possible causes and solutions -->

<!-- Use https://paste.omnirom.org/ and upload `/tmp/recovery.log` and the output of `dmesg` -->
`/tmp/recovery.log`: https://paste.omnirom.org/view/52ac5552
`dmesg`: https://paste.omnirom.org/view/d539a4c5

#### WHAT STEPS WILL REPRODUCE THE PROBLEM?
Adding ``TW_OEM_BUILD := true`` to a device's BoardConfig.mk and building.

#### WHAT IS THE EXPECTED RESULT?
Build finishes successfully.

#### WHAT HAPPENS INSTEAD?
The build fails with the following errors:
```
bootable/recovery/gui/gui.cpp:861:1: error: unused label 'error' [-Werror,-Wunused-label]
error:
^~~~~~
bootable/recovery/gui/gui.cpp:872:63: error: unused parameter 'allow_commands' [-Werror,-Wunused-parameter]
extern "C" int gui_startPage(const char *page_name, const int allow_commands, int stop_on_page_done)
                                                              ^
2 errors generated.
```
In some devices fastboot can be locked down again, thus rendering the smartphone somewhat secure again (after setting a password in android of course)

Keeping TWRP installed in this case means a security hole, anyone can just boot in recovery and just do whatever he wants

This issue could be solved by saving a password somewhere in a file in the /data partition (I would advice against reusing /sdcard/TWRP/.twrps because it's readable by even unprivileged applications)
- [ ] I am running an official build of TWRP, downloaded from https://twrp.me/Devices/
- [x] I am running the latest version of TWRP
- [x] I have read the FAQ (https://twrp.me/FAQ/)
- [x] I have searched for my issue and it does not already exist

**Device codename**: raphael

**TWRP version**: 3.3.1-0

#### WHAT STEPS WILL REPRODUCE THE PROBLEM?
- Make a backup

#### WHAT IS THE EXPECTED RESULT?
- The backup should restore perfectly, as no errors were displayed on creation.

#### WHAT HAPPENS INSTEAD?
The dreaded `extractTarFork() process ended with ERROR: 255`.

#### ADDITIONAL INFORMATION
I've lost so much data over the years because my TWRP backups have failed, and this happens to me on 3 different devices I've owned. If the filesystem is even slightly corrupted when a TWRP backup is created, the backup will fail to restore. Backups can fail to restore even if the host file system appears to be fine, seemingly at random. *e2fsck should be run before the backup is created, and the backup tarballs should be tested afterwards, to prevent data loss!*