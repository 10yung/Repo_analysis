Apple is now attaching this warning to any app store uploads whose binaries contain the string `UIWebView`:

> **ITMS-90809: Deprecated API Usage** - Apple will stop accepting submissions of apps that use UIWebView APIs . See https://developer.apple.com/documentation/uikit/uiwebview for more information.

For now, it's just a warning, and doesn't stop the upload from going through. I don't have enough context on how XCode/App Store Connect finds the references to `UIWebView` to know if gating the `UIWebView` stuff behind a preprocessor macro would work, but I suspect it would.
Hello,

We started seeing an increasing number of crashes in our app on the iPad device with iOS 12.4 that looks like this:

<img width="595" alt="Screen Shot 2019-09-10 at 5 20 50 PM" src="https://user-images.githubusercontent.com/20915786/64660058-5e37ea00-d447-11e9-99d2-6861d379d7fe.png">

After investigating our code we narrow it down to the possibility that the onepassword extension may be causing this when invoking ``findLoginForURLString`` at line:
```Objective-C
[viewController presentViewController:activityViewController animated:YES completion:nil];
```
Is there a way to resolve this? Or at least determine if this really is the cause or not. Through our tests, we could not replicate the crash.




With Catalyst, UIWebView is not a defined class. So code like the following and others isn't going to compile.

`NSAssert([webView isKindOfClass:[UIWebView class]] || [webView isKindOfClass:[WKWebView class]], @"webView must be an instance of WKWebView or UIWebView.");`
My app includes the 1Password app extension on the login and signup form to enable ease of authentication for our common users.

However, by default, the UIButton that I've configured with assets from 1Password doesn't behave well with VoiceOver, since it doesn't have an `accessibilityLabel` set on it. If I use the phrase "OnePassword" as the accessibility label for the button, Voiceover gets confused and pronounces it as "Oh-nay-password". Using "1Password" works fine and as expected.

Are there any guidelines for this? Additionally are there any recommendations on localizing the voiceover hints to different languages? My app is localized in 11 different languages.
I'm building an app that allows users to view their passwords from any domain. Users have no password that is directly associated with my domain or bundle. I know that they can touch the search button if findLoginForURLString doesn't return any results, but it would be nice if there were a way to open the list of all their logins by default rather than first having to search by URL, which will always return nothing.
Sometimes you have to deal with bad developed sites which doesn't allows you to autocomplete fields, for those cases I have some bookmarklets that for example change the `autocomplete` value for some tag in order to allow 1Password to fill that field. It adds more steps to the process. 
It would be magical if as an advanced option one could add some javascript code to be executed before the field filling.
I could for example run the following code I am actually running with a bookmarklet
```
javascript:document.querySelector('input[type=password]').autocomplete = '';
```
It isn't a hard to implement feature and would be very helpful 
I’m implementing a sign up flow for my application tied to AWS Cognito user pools. I have integration with 1Password for generating the password that I then use to create the user account. At the end of my sign up process, I give the user the choice of configuring MFA using either SMS or TOTP. If the user chooses TOTP, I’m displaying the QR code or have a button that will open the `otpauth://...` URL to open an app like Google Authenticator.

My question is that I would like to have the option to associate the TOTP with the user’s 1Password login record, but I am not sure how to do this since the account has already been created. Is there an API that I can use to update the login with the TOTP secret key?
One of our business requirements is to ensure passwords contain 1 uppercase and 1 lowercase letter. Unfortunately we can't currently enforce this with the 1Password extension.

Seems like a bit of a crappy requirement to me. Nevertheless I'm wondering if it will be possible in the future.
Both these files state copyright with all rights reserved, which makes their use troublesome for diligent users:

* https://raw.githubusercontent.com/AgileBits/onepassword-app-extension/master/OnePasswordExtension.h
* https://raw.githubusercontent.com/AgileBits/onepassword-app-extension/master/OnePasswordExtension.m

I note this repo is MIT licensed; could you please reflect that fact in the header of the above files (and others if appropriate - these are the only ones I've looked at so far).

Thank you!