Available in pkgsrc (via pkgin) as [scm-blackbox](http://pkgsrc.se/security/scm-blackbox) 

Just noticed that I forgot to do this along with #277
I register a new file and see in the blackbox-files.txt its full path: 
for example, 

> c/users/"user"/documents/github/notes/test.md

If I then add a new admin, re-encrypt files, commit and push and new admin will pull and try to decrypt, he will get an error of not being able to find a file by my old path, wich includes my username.

I can be doing something wrong...
This might not be an issue with blackbox so much as user error, but I'm not sure where else to post.

I'm running into `gpg: decryption failed: No secret key`.

I have a new machine with a new gpg key, and from that machine (which has ssh access to my git secrets repo) I did blackbox_add_admin with the corresponding email address.

However, any attempt to run blackbo_cat, blackbox_edit, etc runs into the above error. I think I need to do `blackbox_update_all_files`, but doing so gives the same error.

I also tried running `blackbox_update_all_files` on an old machine which can run all the other blackbox commands fine. Update all files fails with the same error.

Now, my guess is that to reencrypt all files, all of the admin's gpg keys must be on the same machine. Is that the case? If so I understand why I'm hitting this error; otherwise I'm quite confused.

Thanks for any help.
Is there a way to suppress the log spam from GPG?
just corrected some grammatical mistakes.
I followed the instructions on how to setup automated users (role accounts) in the readme file and whenever I try to `blackbox_postdeploy` I just get the `no-secret key` error in NEWMASTER even if `gpg -K`  and `gpg2 -K` say the secret key is imported.

I had to re-generate a new key using gpg v.1 instead of gpg2 for my role account to work.

Posting here in case someone experiences the same thing.
I'm trying to create a subkey for one of our servers which has gpg2, and when I get to the point of trying to decrypt the files, I get stuck with a failing prepare_keyring. Looks like the command `gpg2 --keyring /home/user/project/keyrings/live/pubring.kbx --export` returns an error even though the output looks good. I'm not sure if the problem is with my keys or with blackbox.

```
user@host:~/project$ GPG=gpg2 bash -x `which blackbox_postdeploy`
+ export PATH=/usr/bin:/bin:/home/user/bin:/home/user/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
+ PATH=/usr/bin:/bin:/home/user/bin:/home/user/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
+ set -e
+ source /usr/local/bin/_blackbox_common.sh
++ source /usr/local/bin/_stack_lib.sh
+++ cd /usr/local/bin
+++ pwd
++ : /usr/local/bin
++ declare -a BLACKBOXDATA_CANDIDATES
++ BLACKBOXDATA_CANDIDATES=('.blackbox' 'keyrings/live')
++ : vi
++ : gpg2
++ which git
++ git rev-parse --show-toplevel
++ VCS_TYPE=git
+++ git rev-parse --show-toplevel
++ REPOBASE=/home/user/project
++ export VCS_TYPE
+++ physical_directory_of /home/user/project
++++ dirname /home/user/project
+++ local d=/home/user
++++ basename /home/user/project
+++ local f=project
+++ cd /home/user
++++ pwd -P
++++ sed 's/\/$//'
+++ echo /home/user/project
++ export REPOBASE=/home/user/project
++ REPOBASE=/home/user/project
++ [[ -n '' ]]
++ '[' -z '' ']'
++ BLACKBOXDATA=.blackbox
++ for candidate in '${BLACKBOXDATA_CANDIDATES[@]}'
++ '[' -d /home/user/project/.blackbox ']'
++ for candidate in '${BLACKBOXDATA_CANDIDATES[@]}'
++ '[' -d /home/user/project/keyrings/live ']'
++ BLACKBOXDATA=keyrings/live
++ break
++ KEYRINGDIR=/home/user/project/keyrings/live
++ BB_ADMINS_FILE=blackbox-admins.txt
++ BB_ADMINS=/home/user/project/keyrings/live/blackbox-admins.txt
++ BB_FILES_FILE=blackbox-files.txt
++ BB_FILES=/home/user/project/keyrings/live/blackbox-files.txt
++ SECRING=/home/user/project/keyrings/live/secring.gpg
++ : 0022
+ [[ '' == '' ]]
+ FILE_GROUP=
+ change_to_vcs_root
+ local rbase=/home/user/project
+ cd /home/user/project
+ prepare_keychain
+ local keyringasc
+ echo '========== Importing keychain: START'
========== Importing keychain: START
+ make_self_deleting_tempfile keyringasc
+ local __resultvar=keyringasc
+ local name
+ case $(uname -s) in
++ uname -s
++ mktemp
+ name=/tmp/tmp.daEPkMZLbX
+ add_on_exit rm -f /tmp/tmp.daEPkMZLbX
+ local n=0
+ on_exit_items[$n]='rm -f /tmp/tmp.daEPkMZLbX'
+ [[ 0 -eq 0 ]]
+ trap on_exit EXIT
+ eval keyringasc=/tmp/tmp.daEPkMZLbX
++ keyringasc=/tmp/tmp.daEPkMZLbX
+ export LANG=C.UTF-8
+ LANG=C.UTF-8
+ [[ gpg2 != \g\p\g\2 ]]
+ gpg2 --import
++ get_pubring_path
++ [[ -f /home/user/project/keyrings/live/pubring.gpg ]]
++ echo /home/user/project/keyrings/live/pubring.kbx
+ gpg2 --keyring /home/user/project/keyrings/live/pubring.kbx --export
gpg: skipped packet of type 12 in keybox
gpg: skipped packet of type 12 in keybox
gpg: skipped packet of type 12 in keybox
gpg: skipped packet of type 12 in keybox
gpg: skipped packet of type 12 in keybox
gpg: skipped packet of type 12 in keybox
gpg: skipped packet of type 12 in keybox
gpg: skipped packet of type 12 in keybox
gpg: skipped packet of type 12 in keybox
gpg: skipped packet of type 12 in keybox
gpg: skipped packet of type 12 in keybox
gpg: skipped packet of type 12 in keybox
gpg: skipped packet of type 12 in keybox
gpg: skipped packet of type 12 in keybox
gpg: skipped packet of type 12 in keybox
gpg: skipped packet of type 12 in keybox
gpg: skipped packet of type 12 in keybox
gpg: skipped packet of type 12 in keybox
gpg: skipped packet of type 12 in keybox
gpg: skipped packet of type 12 in keybox
gpg: skipped packet of type 12 in keybox
gpg: skipped packet of type 12 in keybox
gpg: skipped packet of type 12 in keybox
gpg: skipped packet of type 12 in keybox
gpg: skipped packet of type 12 in keybox
gpg: skipped packet of type 12 in keybox
gpg: skipped packet of type 12 in keybox
gpg: skipped packet of type 12 in keybox
gpg: skipped packet of type 12 in keybox
gpg: skipped packet of type 12 in keybox
gpg: skipped packet of type 12 in keybox
gpg: skipped packet of type 12 in keybox
gpg: skipped packet of type 12 in keybox
gpg: skipped packet of type 12 in keybox
gpg: skipped packet of type 12 in keybox
gpg: skipped packet of type 12 in keybox
gpg: skipped packet of type 12 in keybox
gpg: skipped packet of type 12 in keybox
gpg: key 0FABA1E6: "user@staging.flashnode.io <user@host.domain.com>" not changed
gpg: key 79C263EC: "user2 <developers@domain.com>" not changed
gpg: key E5CA7402: "user3 <user3@domain.com>" not changed
gpg: key D7D027C4: "user@host2.domain.com <user@host2.domain.com>" not changed
gpg: key 79C263EC: "user2 <developers@domain.com>" not changed
gpg: key E5CA7402: "user3 <user3@domain.com>" not changed
gpg: key D7D027C4: "user@host2.domain.com <user@host2.domain.com>" not changed
gpg: skipped packet of type 12 in keybox
gpg: skipped packet of type 12 in keybox
gpg: skipped packet of type 12 in keybox
gpg: skipped packet of type 12 in keybox
gpg: skipped packet of type 12 in keybox
gpg: skipped packet of type 12 in keybox
gpg: skipped packet of type 12 in keybox
gpg: skipped packet of type 12 in keybox
gpg: skipped packet of type 12 in keybox
gpg: skipped packet of type 12 in keybox
gpg: key 0FABA1E6: "user@host.domain.com <user@host.domain.com>" not changed
gpg: Total number processed: 8
gpg:              unchanged: 8
+ on_exit
+ for i in '"${on_exit_items[@]}"'
+ eval rm -f /tmp/tmp.daEPkMZLbX
++ rm -f /tmp/tmp.daEPkMZLbX
```
Hi,

when you run `blackbox_addadmin`, the code firstly add the admin-to-be to the `blackbox-admins.txt`, then access GPG database and fails if the key does not exists. Steps to reproduce:

```
mkdir /dev/shm/empty_repo && cd $_
git init
blackbox_initialize
blackbox_addadmin dummy_admin@dummy_domain.com
```

The code will fail with `GPG warning: nothing were exported` and `GPG key 'dummy_admin@dummy_domain.com' not found ...`. But the repo is changed:

```
cat .blackbox/blackbox-admins.txt
dummy_admin@dummy_domain.com
```

I think that adding a check for the key existence or simply moving the code:
https://github.com/StackExchange/blackbox/blob/9d305233caba57737391beb6400e79965f10dea1/bin/blackbox_addadmin#L19-L22
below the GPG import part would be enough. 

-- 
K.
`blackbox_addadmin <userid>` adds all keys to the internal keychain that match the given userid, even if one of the keys is revoked.

 
Every command is separate, e.g. `blackbox_edit`, `blackbox_cat`. There should be a single `blackbox` command that takes verbs like `edit`, `cat`, `ls` as arguments.

I can't even run the command `blackbox` because it doesn't exist. So you can't even do `blackbox help`.

Am I the only one who finds this behavior to be absolute insanity?