 %%stata  
display "Hello, I am printed in Stata."

produces


---------------------------------------------------------------------------
com_error                                 Traceback (most recent call last)
C:\Users\Public\Anaconda3\lib\site-packages\win32com\client\dynamic.py in _GetGoodDispatch(IDispatch, clsctx)
     88                 try:
---> 89                         IDispatch = pythoncom.connect(IDispatch)
     90                 except pythoncom.ole_error:

com_error: (-2147221005, 'Invalid class string', None, None)

During handling of the above exception, another exception occurred:

com_error                                 Traceback (most recent call last)
<ipython-input-5-692603ccd765> in <module>
----> 1 get_ipython().run_cell_magic('stata', ' ', 'display "Hello, I am printed in Stata."  \n')

C:\Users\Public\Anaconda3\lib\site-packages\IPython\core\interactiveshell.py in run_cell_magic(self, magic_name, line, cell)
   2356             with self.builtin_trap:
   2357                 args = (magic_arg_s, cell)
-> 2358                 result = fn(*args, **kwargs)
   2359             return result
   2360 

<C:\Users\Public\Anaconda3\lib\site-packages\decorator.py:decorator-gen-127> in stata(self, line, cell, local_ns)

C:\Users\Public\Anaconda3\lib\site-packages\IPython\core\magic.py in <lambda>(f, *a, **k)
    185     # but it's overkill for just that one bit of state.
    186     def magic_deco(arg):
--> 187         call = lambda f, *a, **k: f(*a, **k)
    188 
    189         if callable(arg):

C:\Users\Public\Anaconda3\lib\site-packages\ipystata\ipystata_magic.py in stata(self, line, cell, local_ns)
    318             time.sleep(0.5)
    319             self.log_dict[session_id] = os.path.join(self._lib_dir, 'log_%s.txt' % session_id)
--> 320             self.session_dict[session_id] = win32com.client.Dispatch("stata.StataOLEApp")
    321             self.do_dict[session_id] = self.session_dict[session_id].DoCommandAsync
    322             self.session_dict[session_id].UtilShowStata(1)

C:\Users\Public\Anaconda3\lib\site-packages\win32com\client\__init__.py in Dispatch(dispatch, userName, resultCLSID, typeinfo, UnicodeToString, clsctx)
     93   """
     94   assert UnicodeToString is None, "this is deprecated and will go away"
---> 95   dispatch, userName = dynamic._GetGoodDispatchAndUserName(dispatch,userName,clsctx)
     96   return __WrapDispatch(dispatch, userName, resultCLSID, typeinfo, clsctx=clsctx)
     97 

C:\Users\Public\Anaconda3\lib\site-packages\win32com\client\dynamic.py in _GetGoodDispatchAndUserName(IDispatch, userName, clsctx)
    112         else:
    113                 userName = str(userName)
--> 114         return (_GetGoodDispatch(IDispatch, clsctx), userName)
    115 
    116 def _GetDescInvokeType(entry, invoke_type):

C:\Users\Public\Anaconda3\lib\site-packages\win32com\client\dynamic.py in _GetGoodDispatch(IDispatch, clsctx)
     89                         IDispatch = pythoncom.connect(IDispatch)
     90                 except pythoncom.ole_error:
---> 91                         IDispatch = pythoncom.CoCreateInstance(IDispatch, None, clsctx, pythoncom.IID_IDispatch)
     92         else:
     93                 # may already be a wrapped class.

com_error: (-2147221005, 'Invalid class string', None, None)

I've just started using IPyStata and it's great, but the inline graphs were displaying as blank / gray boxes in the jupyter notebook. My install is a little unusual so I'm not sure if others have run into the same problem, but it looks like it's related to [this issue](https://github.com/jupyter/notebook/issues/2404) from Jupyter. If I understand correctly there was a security-minded fix to Jupyter that prevents .pdf images from being loaded inline in notebooks. This seems to be the case, since I couldn't load pdf images directly from the Jupyter project folder but was able to load png images. Unfortunately, unix/linux Stata is unable to save graphs to png.

I've implemented a kludgy fix on my installation which uses imagemagick to convert temp_file.pdf to temp_file.png before loading the graph in the notebook with IFrame, but it doesn't seem like a good solution to the problem since it introduces system calls and adds a non-Python dependency. 

Has anyone else run into this problem?

My setup: 

Jupyter 4.4.0
Jupyter-notebook 5.6.0 (and 5.7.0dev0)
IPython 6.4.0
Python 3.6.4
latest IPyStata
chromebook / ChromeOS 67
Hi. Just wanted to point out that while "import os" in cell above enables writing of log file, it also seems to turn off output to the Jupyter notebook. So you can have one or the other, but not both-- output to Jupyter notebook and a log file. It would be nice to be able to get both-- command window output to Jupyter AND a log file. A nice enhancement if there is an easy way to do this.

Thanks again for writing this terrific Stata magic...
as we know, in Stata 14  , even the variable names can be Chinese characters ,but  Ipystata cannot display those names properly.  Hope you  will fix this minior problem in the future.
-----------------------------
ipystata is  a really GREAT thing! 
It would be great if it were possible to show multiple graphs per cell (like `ipython` [can](http://nbviewer.jupyter.org/gist/Tooblippe/6151560)). I believe this could be done by keeping track of the graph-data before and after a cell is run to see if any are new. Stata's `graph dir` lists the graph names. New graphs would be those that have new names or have been regenerated (the date and time can be checked with `graph describe <name>`). Graph exporting and display likely would be the same. This approach could be always done, removing the need to explicitly use `-gr`.
actually I have a question. 

I see that you can send a dataframe to stata and get back some data from Stata. How do you do that? Are you using the to_stata method in Pandas? And for the other way around?

This is a very useful function, but it can be very tricky. What about the dtypes? How does it work?

Thanks

(Just a quick note, feel free to close and -wontfix- the issue)

There is a way to have Stata automation with OS X through AppleScript commands. I don't have OS X so I can't do a PR, but there is a working Python example here:

https://github.com/andrewheiss/SublimeStataEnhanced/

There are ways to get the location of the stata binary by calling the `winreg` package and looking for some keys. There is an example here for instance:

https://github.com/sergiocorreia/StataEditor/blob/master/StataEditorPlugin.py#L507

It's not perfect but it works quite well for Stata 12-14

Is it possible to toggle cell magic  on/off for multiple cells? This would be cool because we wouldn't have to use `%%stata` for every cell.
