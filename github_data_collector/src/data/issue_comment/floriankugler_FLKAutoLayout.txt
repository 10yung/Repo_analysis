Do we have any update plan for iPhone X with safe area layout guide?
FLKAutoLayout supported an interesting feature of Auto Layout that would let you create predicates that would not be applied due to too high of a priority, this breaks all the nullability checks in 1.0 alas, and so is removed via runtime asserts.

Re #49 

Here is what I am using:

`button.alignTop("20", leading: FLKNoConstraint, bottom: FLKNoConstraint, trailing: "-27", toView: self.view)`

In previous version, it works perfectly, but in 1.0 version, it cause crash.

Currently the API is:

``` objc
- (NSArray <NSLayoutConstraint *> *)alignToView:(id)view;
```

This `id` isn't optimal. With Swift we could do something like:

``` swift
@objc protocol FLKViewable {
  var flkView: UIView { get }
}

extension UIView: FLKViewable {
  var flkView: UIView  {
    return self
  }
}
extension UILayoutGuide: FLKViewable {
  var flkView: UIView  {
    return self.representedView
  }
}
extension FLKLayoutGuide: FLKViewable {
  var flkView: UIView  {
    return self.flk_view
  }
}
```

Then we could constrain the view to be a FLKViewable:

``` objc
- (NSArray <NSLayoutConstraint *> *)alignToView:(NSObject <FLKViewable> *)view;
```

I'll save this one for a patch release, and get 1.0.0 out - so this isn't blocking. 

I'm interested in the ramifications here:

``` diff
-    CGFloat multiplier = 0;
+    CGFloat multiplier = 0.01;
```

It seems reasonable to think when FLKAutoLayout was written Auto Layout would accept a multiplier of `0` in constraints - but since then, maybe since iOS8? The API does not allow using a 0 as the multiplier - which causes crashes in the example app, and assumably in all of the app code ( I don't see any uses of `distributeCenterXOfViews` or the others in Eigen, I expect because of this. )

Can you think of a better way to do this, and/or do you think this would cause issues?

/cc @alloy if you want to have a think too

this is part of the log

<pre>
translatesAutoresizingMaskIntoConstraints) 
(
    "<NSLayoutConstraint: 0x7fcb10cac940> H:[UIView:0x7fcb10e31a20(80)] (Bar view 0, (null))",
    "<NSLayoutConstraint: 0x7fcb10c27840> H:[UIView:0x7fcb10e31a20(100)] (Bar view 0, (null))"
)
....

Terminating app due to uncaught exception 'NSInvalidArgumentException', reason: '*** +[NSLayoutConstraint constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:]: A multiplier of 0 or a nil second item together with a location for the first attribute creates an illegal constraint of a location equal to a constant. Location attributes must be specified in pairs'
</pre>

Hi, I have just installed FLKAutoLayout. It looks powerful. But when I run example layout not always look same. Here is how example looks after run in simulator. Also when switch orientation, space between left and right view (views with dark grey colour as background) has random width. Here is one screenshot.
![screenshot 2014-01-29 21 39 29](https://f.cloud.github.com/assets/747573/2034160/da405fbe-8926-11e3-8127-746a9e17ffba.png)

Apply the categories on `NSView` instead of `UIView` on OS X.
