This link from the landing page is broken https://github.com/Azure/azure-blockchain-projects/blob/master/bletchley/%22AnatomyofASmartContract.md
consider remove the double quotes
Regards
Hi all, I refer to Enterprise Ethereum Architecture Stack (EEAS) at (https://entethalliance.org/wp-content/uploads/2018/05/EEA-Architecture-Stack-Spring-2018.pdf)

Is there an equivalent of such framework for Microsoft Azure blockchain? Does Coco Framework seek to adhere to the EEA architecture or seeks a different direction/architecture? 

Nathan Aw 
https://sg.linkedin.com/in/awnathan/zh-cn 

I am Nathan Aw from Singapore and I am developing smart contracts on Quorum. Microsoft Bletchley, Cryptlet and Coco Framework looks very exciting and promising. 

May I know what the roadmap and timeline looks like? And the consensus algorithm(s) that Microsoft is proposing to use (Raft, Istanbul BFT, Paxos or some new fangled consensus like Tangaroa) and if pluggable consensus is supported? 

Thank you! 

Nathan Aw
Hey 
I am just creating an application using smart contract and I am trying to Deploy it on Azure Consorium Block Chain.
I dont have any idea how to deploy it their can you please help me out with that

Thank you and Happy New Year
Contract lifecycle - create, use, kill , publish, dispose, initial fulfillment, could be significantly simplified if the contract is associated with Roles within Consortium. In case, #55 Contract repos the role could be associated with a particular repo instance. 
Currently, I'm working on healthcare concept that would require that all contract would expose behavior required by Consortium Leader or Consortium Member. It is not that you could not implement it with the current Ethereum  layout,  but it is very convoluted and easy to make a mistake. I would suggest to find the way to enable Leader or Member base contract that all other contract will automatically inherit and used by EVM. The setting for the chain's base contract should be done on the leader/member configuration page within azure portal 
I found,  it might make scene to introduce concept  of the contract binary repository similar to the Nexus and Artifactory. This would help to de-couple publishing contract and consuming contract within a chain.  Also, If you would be able to marry this concept with secure docker image, you might be able to run multiple blockchain implementations  (Ethereum, Corda, and Hyperledger ,,,) within a single chain  and prepare Bletchley to the Web 3 where the contract state, data and compute will represent one docker unit. Could talk more in case you are interested 
Cryptlets  is very powerful design pattern that covers a lot of off-chain interactions scenarios . However, please consider adding a somekind one-direction messaging service to be a part of the Blockchain Fabric. This will allow to simplify one-way  pub/sub type messaging  implementation and will easy attestation and  trust concerns ( reason: one directional -  blockachain-to-off-chain) .  In the use case where completion of the contract is logical event that is published into the accessible to the blockchain EventHub and consumed by off-chain subscribers   for the off-chain reconciliation process, such messaging service would reduce implementation efforts and would effect ROI 
Any plans to share the code or provide the whole platform to test/use on premises?

Thanks
We are seeing an error "UnexpectedCommaAfterLastMemeber" which is causing the deployment to fail, can you please fix it.