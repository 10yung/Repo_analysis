Sometimes I want to add custom entries to pages that already contain 8 entries. The tldr guidelines only allow up to 8 entries per page.

Maybe we could set up a way to register "patchfiles" with tealdeer (e.g. by placing them somewhere in the `.config/tealdeer/` directory). Those patchfiles would be appended to the corresponding pages when updating the cache.
`tealdeer` currently fetches all languages from the tldr.sh API.  However, it only ever displays English documentation.  It seems that `tealdeer` should offer a flag/config option that would display documentation from other languages, when available.  (Or maybe it should read the `$LANG` environmental variable?)

Alternatively, if `tealdeer` is not going to display non-English documentation, it probably should not save the non-English docs in the user's cache (since they take up space without providing any benefit).

In an ideal world, `tealdeer` would offer a user the option of selecting their language(s) before downloading the cache, but that seems like a lower priority. 
This is useful for when you want to open it up in a pager which doesn't
support ansi escape codes by default. In my use case it allows me to
open it inside vim without having to use an addon to convert ansi escape
codes to colours.
```
   Compiling pager v0.15.0
error[E0433]: failed to resolve: could not find `unix` in `os`
 --> C:\Users\user\.cargo\registry\src\github.com-1ecc6299db9ec823\pager-0.15.0\src\utils.rs:2:14
  |
2 | use std::os::unix::ffi::OsStringExt;
  |              ^^^^ could not find `unix` in `os`

error[E0412]: cannot find type `pid_t` in crate `libc`
  --> C:\Users\user\.cargo\registry\src\github.com-1ecc6299db9ec823\pager-0.15.0\src\utils.rs:20:24
   |
20 | pub fn fork() -> libc::pid_t {
   |                        ^^^^^ not found in `libc`

error[E0425]: cannot find function `fork` in crate `libc`
  --> C:\Users\user\.cargo\registry\src\github.com-1ecc6299db9ec823\pager-0.15.0\src\utils.rs:21:20
   |
21 |     unsafe { libc::fork() }
   |                    ^^^^ not found in `libc`
help: possible candidate is found in another module, you can import it into scope
   |
1  | use utils::fork;
   |

error[E0425]: cannot find value `STDOUT_FILENO` in crate `libc`
   --> C:\Users\user\.cargo\registry\src\github.com-1ecc6299db9ec823\pager-0.15.0\src\lib.rs:188:55
    |
188 |         if self.skip_on_notty && !utils::isatty(libc::STDOUT_FILENO) {
    |                                                       ^^^^^^^^^^^^^ not found in `libc`

error[E0425]: cannot find value `STDOUT_FILENO` in crate `libc`
   --> C:\Users\user\.cargo\registry\src\github.com-1ecc6299db9ec823\pager-0.15.0\src\lib.rs:204:52
    |
204 |                     utils::dup2(main_stdout, libc::STDOUT_FILENO);
    |                                                    ^^^^^^^^^^^^^ not found in `libc`

error[E0425]: cannot find value `STDIN_FILENO` in crate `libc`
   --> C:\Users\user\.cargo\registry\src\github.com-1ecc6299db9ec823\pager-0.15.0\src\lib.rs:209:52
    |
209 |                     utils::dup2(pager_stdin, libc::STDIN_FILENO);
    |                                                    ^^^^^^^^^^^^ not found in `libc`

error[E0599]: no method named `into_vec` found for type `std::ffi::OsString` in the current scope
 --> C:\Users\user\.cargo\registry\src\github.com-1ecc6299db9ec823\pager-0.15.0\src\utils.rs:9:44
  |
9 |     unsafe { CString::from_vec_unchecked(s.into_vec()) }
  |                                            ^^^^^^^^ method not found in `std::ffi::OsString`

error[E0061]: this function takes 3 parameters but 1 parameter was supplied
  --> C:\Users\user\.cargo\registry\src\github.com-1ecc6299db9ec823\pager-0.15.0\src\utils.rs:45:25
   |
45 |     assert_eq!(unsafe { libc::pipe(fds.as_mut_ptr()) }, 0);
   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected 3 parameters

error: aborting due to 8 previous errors

```
The `app_dirs` crate has a negative `crev` review:

```
cargo crev repo query review app_dirs
---
kind: package review
version: -1
date: "2019-01-06T15:49:21.839825922-08:00"
from:
  id-type: crev
  id: FYlr8YoYGVvDwHQxqEIs89reKKDy-oWisoO0qXXEfHE
  url: "https://github.com/dpc/crev-proofs"
package:
  source: "https://crates.io"
  name: app_dirs
  version: 1.2.1
  digest: mWo2YhBk4cw2sAuMAtQQukncheMihw0EDklVz6nqQGs
review:
  thoroughness: none
  understanding: none
  rating: negative
comment: |-
  It looks like it's not maintained, and they are problems with it. See https://github.com/dpc/crev/pull/133
```

In https://github.com/crev-dev/cargo-crev/pull/133 they migrated to the `directories` crate. Maybe tealdeer should do this too.
As discussed in #73, there could be a config option where - if it's set - the cache automatically refreshes itself when it's outdated.

Implementation notes (copied from [here](https://github.com/dbrgn/tealdeer/pull/73#issuecomment-453783054)):

This would require a slight reorganization of the `main` function:

- Handle `args.flag_config_path` and `args.flag_seed_config` right after handling `args.flag_version` (simply move up the code blocks)
- Move the config loading code in `print_page` into the main function, right after the `args.flag_seed_config` handling block
- In `src/config.rs`, add the new config elements to the `RawConfig` and `Config` structs and add the defaults to `RawConfig::new()`.

The default configuration can be generated with `tldr --seed-config`. My suggestion would be:

```
[updates]
auto_update = false
auto_update_interval_hours = 720
```

(The `auto_update_interval_hours` could then be set to `MAX_CACHE_AGE * 24` by default.)
I am running FreeBSD but trying to use `tldr --os sunos truss` to view the page for SunOS's truss which exists in tldr's cache and am unable to. I am getting: 

```bash
Page truss not found in cache
Try updating with `tldr --update`, or submit a pull request to:
https://github.com/tldr-pages/tldr
```

Looks like this is due to [this line](https://github.com/dbrgn/tealdeer/blob/74c37193e303fb13302c6829b086cf84e2a9b817/src/cache.rs#L136) in `cache.rs`. I can replace the None with Some('sunos') and it lets me see the page as you would expect. I see you have a comment there but not sure how it is relevant.


The color becomes annoying and unwanted when outputs to pipe

    ~ $ tldr ls | less

or Emacs

    (shell-command-to-string "tldr ls")

Some programs such as `ls` provide `--color=auto|never|always`
`tldr tldr` shows `tldr git checkout` as an option:

```
➜  components git:(develop) ✗ tldr tldr

  Simplified man pages.

  Get typical usages of a command (hint: this is how you got here!):

      tldr command

  Show the tar tldr page for linux:

      tldr -p linux tar

  Get help for a git subcommand:

      tldr git checkout

➜  components git:(develop) ✗
```

`tldr git checkout` doesn't work:

```
➜  components git:(develop) ✗ tldr tealdeer
Page tealdeer not found in cache
Try updating with `tldr --update`, or submit a pull request to:
https://github.com/tldr-pages/tldr
➜  components git:(develop) ✗
```

Poking around, `tldr git-checkout` works:

```
➜  components git:(develop) ✗ tldr git-checkout

  Checkout a branch or paths to the working tree.
  Homepage: <https://git-scm.com/docs/git-checkout>.

  Create and switch to a new branch:

      git checkout -b branch_name

  Create and switch to a new branch based on a specific reference (branch, remote/branch, tag are examples of valid references):

      git checkout -b branch_name reference

  Switch to an existing local branch:

      git checkout branch_name

  Switch to an existing remote branch:

      git checkout --track remote_name/branch_name

  Discard all unstaged changes in the current directory (see `git reset` for more undo-like commands):

      git checkout .

  Discard unstaged changes to a given file:

      git checkout file_name

  Replace a file in the current directory with the version of it committed in a given branch:

      git checkout branch_name -- file_name

➜  components git:(develop) ✗
```

I think that perhaps if there are variable arguments they get joined together with a dash. It would be nice if everything `tldr tldr` worked with tealdeer :)
Right now, due to #44, the config is loaded twice:

```
$ RUST_LOG=tldr=debug cargo run --features logging -- tar
DEBUG 2019-03-11T10:16:47Z: tldr::config: Loading config
Cache wasn't updated for more than 30 days.
You should probably run `tldr --update` soon.
DEBUG 2019-03-11T10:16:47Z: tldr::config: Loading config
DEBUG 2019-03-11T10:16:47Z: tldr::formatter: Ignoring title
DEBUG 2019-03-11T10:16:47Z: tldr::formatter: Detected command name: tar

  Archiving utility.
  Often combined with a compression method, such as gzip or bzip.
```

This should be avoided for performance reasons.