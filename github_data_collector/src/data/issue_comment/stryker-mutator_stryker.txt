**Summary**

Everytime I try to run stricker on my project I get 

ERROR StrykerCli an error occurred { [Error: EMFILE: too many open files, open '/media/filipe/Data/fsvieira/github/identicobjects/node_modules/chardet/match.js']
  errno: -24,
  code: 'EMFILE',
  syscall: 'open',
  path:
   '/media/filipe/Data/fsvieira/github/identicobjects/node_modules/chardet/match.js' }

Its always a file from node modules, and not always the same file, maybe stricker is searching node_modules dir ?

**Stryker config**

```js
module.exports = function(config) {
  config.set({
    mutator: "javascript",
    packageManager: "npm",
    reporters: ["html"],
    testRunner: "jest",
    transpilers: [],
    coverageAnalysis: "off"
  });
};
```

**Test runner config**

No Configuration, using Jest.

**Stryker environment**

```
├─┬ @stryker-mutator/core@2.5.0
│ ├─┬ @stryker-mutator/api@2.5.0
│ ├── @stryker-mutator/util@2.5.0
├─┬ @stryker-mutator/html-reporter@2.5.0
│ ├── @stryker-mutator/api@2.5.0 deduped
│ ├── @stryker-mutator/util@2.5.0 deduped
├─┬ @stryker-mutator/javascript-mutator@2.5.0
│ ├── @stryker-mutator/api@2.5.0 deduped
├─┬ @stryker-mutator/jest-runner@2.5.0
│ ├── @stryker-mutator/api@2.5.0 deduped
```

```
+-- jest@24.9.0
```

**Test runner environment**

```shell
# npm test
```

**Your Environment**

| software         | version(s)
| ---------------- | -------
| node             | v11.12.0
| npm              | 6.13.6
| Operating System | Linux Ubuntu

**Add stryker.log**

npx stryker run --fileLogLevel trace --logLevel debug
22:13:29 (18886) INFO ConfigReader Using stryker.conf.js in the current working directory.
22:13:29 (18886) DEBUG ConfigReader Loading config stryker.conf.js
22:13:29 (18886) DEBUG ConfigReader Loaded config: {
  "mutate": [
    "{src,lib}/**/*.js?(x)",
    "!{src,lib}/**/__tests__/**/*.js?(x)",
    "!{src,lib}/**/?(*.)+(spec|test).js?(x)",
    "!{src,lib}/**/*+(Spec|Test).js?(x)"
  ],
  "logLevel": "debug",
  "fileLogLevel": "trace",
  "timeoutMS": 5000,
  "timeoutFactor": 1.5,
  "plugins": [
    "@stryker-mutator/*"
  ],
  "reporters": [
    "html"
  ],
  "coverageAnalysis": "off",
  "testRunner": "jest",
  "mutator": "javascript",
  "transpilers": [],
  "maxConcurrentTestRunners": null,
  "symlinkNodeModules": true,
  "thresholds": {
    "break": null,
    "high": 80,
    "low": 60
  },
  "allowConsoleColors": true,
  "dashboard": {
    "baseUrl": "https://dashboard.stryker-mutator.io/api/reports",
    "reportType": "mutationScore"
  },
  "tempDirName": ".stryker-tmp",
  "packageManager": "npm",
  "configFile": "stryker.conf.js"
}
22:13:29 (18886) DEBUG PluginLoader Loading @stryker-mutator/* from /media/filipe/Data/fsvieira/github/identicobjects/node_modules/@stryker-mutator
22:13:29 (18886) DEBUG PluginLoader Loading plugin "/media/filipe/Data/fsvieira/github/identicobjects/node_modules/@stryker-mutator/html-reporter" (matched with expression @stryker-mutator/*)
22:13:29 (18886) DEBUG PluginLoader Loading plugin "/media/filipe/Data/fsvieira/github/identicobjects/node_modules/@stryker-mutator/javascript-mutator" (matched with expression @stryker-mutator/*)
22:13:29 (18886) DEBUG PluginLoader Loading plugin "/media/filipe/Data/fsvieira/github/identicobjects/node_modules/@stryker-mutator/jest-runner" (matched with expression @stryker-mutator/*)
22:13:29 (18886) DEBUG PluginLoader Loading plugins /media/filipe/Data/fsvieira/github/identicobjects/node_modules/@stryker-mutator/html-reporter
22:13:29 (18886) DEBUG PluginLoader Loading plugins /media/filipe/Data/fsvieira/github/identicobjects/node_modules/@stryker-mutator/javascript-mutator
22:13:29 (18886) DEBUG PluginLoader Loading plugins /media/filipe/Data/fsvieira/github/identicobjects/node_modules/@stryker-mutator/jest-runner
22:13:29 (18886) DEBUG PluginLoader Loading plugins /media/filipe/Data/fsvieira/github/identicobjects/node_modules/@stryker-mutator/core/src/reporters/index.js
22:13:30 (18886) DEBUG BroadcastReporter Broadcasting to reporters ["html"]
22:13:30 (18886) ERROR StrykerCli an error occurred { [Error: EMFILE: too many open files, open '/media/filipe/Data/fsvieira/github/identicobjects/node_modules/chardet/encoding/unicode.js']
  errno: -24,
  code: 'EMFILE',
  syscall: 'open',
  path:
   '/media/filipe/Data/fsvieira/github/identicobjects/node_modules/chardet/encoding/unicode.js' }


Bumps [karma-jasmine](https://github.com/karma-runner/karma-jasmine) from 3.0.3 to 3.1.0.
<details>
<summary>Release notes</summary>
<p><em>Sourced from <a href="https://github.com/karma-runner/karma-jasmine/releases">karma-jasmine's releases</a>.</em></p>
<blockquote>
<h2>v3.1.0</h2>
<h1><a href="https://github.com/karma-runner/karma-jasmine/compare/v3.0.3...v3.1.0">3.1.0</a> (2020-01-10)</h1>
<h3>Features</h3>
<ul>
<li><strong>adapter:</strong> support spec=name URL and sharding (<a href="https://github-redirect.dependabot.com/karma-runner/karma-jasmine/issues/243">#243</a>) (<a href="https://github.com/karma-runner/karma-jasmine/commit/39b1582987f4b82d6da4775414f208a8433ec794">39b1582</a>)</li>
</ul>
</blockquote>
</details>
<details>
<summary>Changelog</summary>
<p><em>Sourced from <a href="https://github.com/karma-runner/karma-jasmine/blob/master/CHANGELOG.md">karma-jasmine's changelog</a>.</em></p>
<blockquote>
<h1><a href="https://github.com/karma-runner/karma-jasmine/compare/v3.0.3...v3.1.0">3.1.0</a> (2020-01-10)</h1>
<h3>Features</h3>
<ul>
<li><strong>adapter:</strong> support spec=name URL and sharding (<a href="https://github-redirect.dependabot.com/karma-runner/karma-jasmine/issues/243">#243</a>) (<a href="https://github.com/karma-runner/karma-jasmine/commit/39b1582987f4b82d6da4775414f208a8433ec794">39b1582</a>)</li>
</ul>
<p><a name="3.0.3"></a></p>
</blockquote>
</details>
<details>
<summary>Commits</summary>
<ul>
<li><a href="https://github.com/karma-runner/karma-jasmine/commit/516f9f141fd4da65b58c140587f4e46f743aa310"><code>516f9f1</code></a> chore(release): 3.1.0 [skip ci]</li>
<li><a href="https://github.com/karma-runner/karma-jasmine/commit/39b1582987f4b82d6da4775414f208a8433ec794"><code>39b1582</code></a> feat(adapter): support spec=name URL and sharding (<a href="https://github-redirect.dependabot.com/karma-runner/karma-jasmine/issues/243">#243</a>)</li>
<li><a href="https://github.com/karma-runner/karma-jasmine/commit/b2c3cb49aad472111ad13a7dbbef6e39fd488013"><code>b2c3cb4</code></a> chore(lint): add commitlint config (<a href="https://github-redirect.dependabot.com/karma-runner/karma-jasmine/issues/254">#254</a>)</li>
<li><a href="https://github.com/karma-runner/karma-jasmine/commit/a63c37c3949c1ea8a68989fa6f736e1f5a4b2f2b"><code>a63c37c</code></a> docs(readme): reorder badges (<a href="https://github-redirect.dependabot.com/karma-runner/karma-jasmine/issues/253">#253</a>)</li>
<li><a href="https://github.com/karma-runner/karma-jasmine/commit/8189c8e8e1fc80dbb74f8f7f356ab05ae8c69f60"><code>8189c8e</code></a> chore(lint): add commitlint and husky to verify commit message headers (<a href="https://github-redirect.dependabot.com/karma-runner/karma-jasmine/issues/252">#252</a>)</li>
<li><a href="https://github.com/karma-runner/karma-jasmine/commit/40db343ad541fc286b20efcf963bd09fae490f30"><code>40db343</code></a> doc(readme): Declare semantic release, make it so (<a href="https://github-redirect.dependabot.com/karma-runner/karma-jasmine/issues/251">#251</a>)</li>
<li><a href="https://github.com/karma-runner/karma-jasmine/commit/6f5b789e50bf63ef9ca249c2b30d57f305ee40e4"><code>6f5b789</code></a> chore(docs): Simplify for modern jasmine case (<a href="https://github-redirect.dependabot.com/karma-runner/karma-jasmine/issues/250">#250</a>)</li>
<li><a href="https://github.com/karma-runner/karma-jasmine/commit/9b6e5f8987db4549ef8eeb95d89917ed10d736a6"><code>9b6e5f8</code></a> chore(ci): Setup semantic-release (<a href="https://github-redirect.dependabot.com/karma-runner/karma-jasmine/issues/247">#247</a>)</li>
<li>See full diff in <a href="https://github.com/karma-runner/karma-jasmine/compare/v3.0.3...v3.1.0">compare view</a></li>
</ul>
</details>
<br />


[![Dependabot compatibility score](https://api.dependabot.com/badges/compatibility_score?dependency-name=karma-jasmine&package-manager=npm_and_yarn&previous-version=3.0.3&new-version=3.1.0)](https://dependabot.com/compatibility-score.html?dependency-name=karma-jasmine&package-manager=npm_and_yarn&previous-version=3.0.3&new-version=3.1.0)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
If all status checks pass Dependabot will automatically merge this pull request.

[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language
- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language
- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language
- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language
- `@dependabot badge me` will comment on this PR with code to add a "Dependabot enabled" badge to your readme

Additionally, you can set the following in your Dependabot [dashboard](https://app.dependabot.com):
- Update frequency (including time of day and day of week)
- Pull request limits (per update run and/or open at any time)
- Automerge options (never/patch/minor, and dev/runtime dependencies)
- Out-of-range updates (receive only lockfile updates, if desired)
- Security updates (receive only security updates, if desired)



</details>
**Summary**

I have a repo with a `src/` directory and a `test/`. My `test/` directory is treated as its own submodule with a separate `package.json`. I set up Stryker in the `test/` directory and configured it to include files from the `src/` directory with relative paths. When I run the tests from the `test/` directory some mutants survive that I know should be killed. If I reconfigure Stryker to run from the root directory then the mutants that I would expect to be killed are killed.

This may be due to a pathing issue when creating the sandbox. I notice that when I run Stryker from the `test/` subdirectory the `src/` directory is copied into `.stryker-tmp/` rather than `.stryker-tmp/sandboxXXXXXXX/`.

I have filled in the requested information below, but I would also suggest looking at this repo that contains a simplified project for reproducing the issue and my test results: https://github.com/thompsnm/stryker-bug-reproduction

**Stryker config**

```js
module.exports = function(config) {
  config.set({
    mutator: "javascript",
    packageManager: "npm",
    reporters: ["clear-text", "progress"],
    testRunner: "jest",
    transpilers: [],
    coverageAnalysis: "off",
    files: [
      './comparator.test.js',
      '../src/comparator.js'
    ],
    mutate: [
      '../src/comparator.js'
    ]
  });
};
```

**Test runner config**

No additional Jest config necessary.

**Stryker environment**

```
+-- @stryker-mutator/core@2.4.0
+-- @stryker-mutator/javascript-mutator@2.4.0
+-- @stryker-mutator/jest-runner@2.4.0
```

```
+-- jest@24.9.0
```

**Test runner environment**

```shell
jest
```

**Your Environment**

| software         | version(s)
| ---------------- | -------
| node             | v8.11.4
| npm              | 5.6.0
| Operating System | macOS Mojave 10.14.4

**Add stryker.log**

[stryker.log](https://github.com/stryker-mutator/stryker/files/4041963/stryker.log)

**Summary**
```
08:29:51 (11148) ERROR InitialTestExecutor One or more tests resulted in an error:
        SyntaxError: Unexpected identifier
C:\Users\groszek\Desktop\BigMath\.stryker-tmp\sandbox7456346\src\basic.js:40
 */cov_2npd496e0a.s[208]++;exports.expm1=a=>{cov_2npd496e0a.f[12]++;cov_2npd496e0a.s[209]++;return exports.subtract(exports.exp(a),1n);};cov_2npd496e0a.s[210]++;exports.doubleFactorial=a=>{cov_2npd496e0a.f[13]++;cov_2npd496e0a.s[211]++;a=util_1.normalize(a);cov_2npd496e0a.s[212]++;if((cov_2npd496e0a.b[50][0]++,a.comma!==0)||(cov_2npd496e0a.b[50][1]++,a.sign)){cov_2npd496e0a.b[49][0]++;cov_2npd496e0a.s[213]++;throw new util_1.DomainError(util_1.stringify(a),'positive integers');}else{cov_2npd496e0a.b[49][1]++;}let n=(cov_2npd496e0a.s[214]++,a.number);cov_2npd496e0a.s[215]++;if(n<7n){cov_2npd496e0a.b[51][0]++;cov_2npd496e0a.s[216]++;return{comma:0,number:[1n,1n,2n,3n,8n,15n,48n][+`${n}`],sign:false};}else{cov_2npd496e0a.b[51][1]++;}cov_2npd496e0a.s[217]++;switch((n+1n)%4n){case0n:cov_2npd496e0a.b[52][0]++;const p=(cov_2npd496e0a.s[218]++,(n-1n)/2n);cov_2npd496e0a.s[219]++;n+=1n;let prod=(cov_2npd496e0a.s[220]++,1n);cov_2npd496e0a.s[2

SyntaxError: Unexpected identifier
    at wrapSafe (internal/modules/cjs/loader.js:1055:16)
    at Module._compile (internal/modules/cjs/loader.js:1103:27)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1159:10)
    at Module.load (internal/modules/cjs/loader.js:988:32)
    at Function.Module._load (internal/modules/cjs/loader.js:896:14)
    at Module.require (internal/modules/cjs/loader.js:1028:19)
    at require (internal/modules/cjs/helpers.js:72:18)
    at Object.<anonymous> (C:\Users\groszek\Desktop\BigMath\.stryker-tmp\sandbox7456346\src\BigMath.js:1:70956)
    at Module._compile (internal/modules/cjs/loader.js:1139:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1159:10)
08:29:51 (11148) ERROR StrykerCli an error occurred Error: Something went wrong in the initial test run
    at InitialTestExecutor.validateResult (C:\Users\groszek\Desktop\BigMath\node_modules\@stryker-mutator\core\src\process\InitialTestExecutor.js:86:15)
    at InitialTestExecutor.run (C:\Users\groszek\Desktop\BigMath\node_modules\@stryker-mutator\core\src\process\InitialTestExecutor.js:41:14)
    at processTicksAndRejections (internal/process/task_queues.js:97:5)
    at async Stryker.runMutationTest (C:\Users\groszek\Desktop\BigMath\node_modules\@stryker-mutator\core\src\Stryker.js:54:38) 
```

**Stryker config**

```js
module.exports = function(config) {
  config.set({
    mutator: 'typescript',
    packageManager: 'npm',
    reporters: ['html', 'clear-text', 'progress'],
    testRunner: 'mocha',
    transpilers: ['typescript'],
    testFramework: 'mocha',
    coverageAnalysis: 'perTest',
    tsconfigFile: 'tsconfig.json',
    mutate: ['src/**/*.ts']
  });
};
```

**Test runner config**

mocha + nyc + ts
```nycrc
{
  "extends": "@istanbuljs/nyc-config-typescript",
  "check-coverage": true,
  "lines": 100,
  "statements": 100,
  "functions": 100,
  "branches": 100,
  "compact": false,
  "reporter": [
    "html"
  ]
}
```

Again some problems with PerTest options.
changing coverageAnalysis to `off` fixes issue.
Honestly I don't know why this issue occurs, but I think too many `exports` / `lines` in 1 file can cause it (but I am not sure, since there is nothing really different from version to version [works for one, small changes - doesn't work])

Repo + build + PR:
https://github.com/kmdrGroch/BigMath
https://github.com/kmdrGroch/BigMath/pull/69
https://travis-ci.com/kmdrGroch/BigMath/jobs/271439516
(In this particular job there is no saying it's caused by stryker, but later on after some tweaks I got message like on top [tests and coverage run good]).
Changing `coverageAnalysis` works 

[stryker.log](https://github.com/stryker-mutator/stryker/files/4013865/stryker.log)


**Summary**

When using a jest config file with `projects` property, `stryker run` fails with `Jest: Cannot use configuration as an object without a file path.` Related: https://github.com/facebook/jest/issues/5421#issuecomment-363274999

**Stryker config**

<!--- Please place your stryker config below. Feel free to change paths in the files and mutate arrays if you cannot share them. -->

```js
module.exports = function(config) {
  config.set({
    mutate: ['src/**/*.(js|ts)?(x)', '!src/**/*@(.test).(js|ts)?(x)'],
    mutator: 'typescript',
    testRunner: 'jest',
    reporters: ['progress', 'clear-text', 'html'],
    coverageAnalysis: 'off',
    jest: {
      projectType: 'custom',
      config: require('./config/jest/jest.config.js'),
    },
  });
};
```

**Test runner config**

<!--- Please Put your Jest / Karma / Jasmine / Mocha (...) configuration here. -->

```
jest: {
      projectType: 'custom',
      config: require('./config/jest/jest.config.js')
}
```

**Stryker environment**

<!-- Please list your stryker plugins + versions here (output of `npm ls | grep stryker`) -->

```
+-- @stryker-mutator/core@2.4.0
+-- @stryker-mutator/api@2.4.0
+-- @stryker-mutator/util@2.4.0
+-- @stryker-mutator/html-reporter@2.4.0
+-- @stryker-mutator/jest-runner@2.4.0
+-- @stryker-mutator/typescript@2.4.0
```

<!-- Please also add the test runner you are using.  Examples:-->

```
+-- jest@24.9.0
```

**Test runner environment**

<!-- Please add your test command here (probably the command you use in `npm test`) command -->

```shell
jest -c config/jest/jest.config.js
```

<!-- Please add any config files that are used by your test runner. For example jest.config.js, karma.conf.js, angular.json, mocha.opts, ...  -->

```js
module.exports = {
  rootDir: path.join(__dirname, '../../'),
  projects: [
    {
      ...common,
      displayName: 'Foo',
    },
    {
      ...common,
      displayName: 'Bar',
    },
  ],
};
```


**Your Environment**

| software         | version(s)
| ---------------- | -------
| node             | 11.12.0
| yarn              | 1.19.1
| Operating System | MacOS 10.14.4

**Add stryker.log**

[stryker.log](https://github.com/stryker-mutator/stryker/files/3972566/stryker.log)

<!-- Your source code is never logged to this file, however file names are logged. Feel free to obfuscate those log messages if you think it is a problem -->

**Question**

We have the good fortune to receive wonderfull help from [the Stryker community](https://github.com/stryker-mutator/stryker/graphs/contributors). However, we've been pretty lousy in honoring them 😔. We need to change this 💖!

The question is, how do we want to do that? Who better to ask than our contributors themselves? Please (in no particular order) @JoshuaKGoldberg @ollelauribostrom @bharaninb @simondel @Archcry @mthmulders @brodybits @kmdrGroch @philippw @mshogren @sharikovvladislav @mscharley @tommilligan (and all the people I've forgot to include here (don't hesitate to add more)): How do you want to be honored?

There is a tool out there called [all-contributors-bot](https://github.com/all-contributors/all-contributors-bot#hello-all-contributors-bot-) than can add you're face to a readme file. Would you mind that? Since we have more than 1 readme file (1 per package), I suggest using the main readme file. However, I think we can also choose multiple readme files (or use the CLI tool to do that). So we can choose the main readme and the stryker core readme for example.

Other suggestions are welcome as well! 
**Is your maintenance request related to a problem? Please describe.**
Ever since [mutation-testing-elements](https://github.com/stryker-mutator/mutation-testing-elements) we don't have actual logic in the html reporter package anymore. However, people seem to have problems finding it. For larger projects it is much more helpful than the console reporter

**Describe the solution you'd like**
Let's add the reporter to the [standard list of reporters](https://github.com/stryker-mutator/stryker/tree/master/packages/core/src/reporters) and enable it by default.


fixes: #1472
closes: #1810
**pipe/chain functions.**
It is popular and very widespred to use pipe functions or some chains.
 

>  mycollection.filter(e=>e.active).map(e=>e.value).sort();

And very usefull to remove one call from chain to verify tests

> mycollection.map(e=>e.value).sort();

> mycollection.filter(e=>e.active).sort();

> mycollection.filter(e=>e.active).map(e=>e.value);

May be it's not good for some projects and can generate some lifeless mutants,
 but my experience show, that this is one of usefull mutator,
 when you use array pipes or work with RxJs

I'm using this implementation
  https://github.com/wolf-off/stryker-rxjs/blob/master/src/mutator/FunctionChainMutator.ts

While working on the additional mutations I proposed in PR #1891, I started wondering if it might be practical to consider combine the JavaScript & TypeScript mutators together.

I can think of a couple of possible approaches:

- Prettier is able to have a unified "estree" format from Babel and from TypeScript using `@typescript-eslint/typescript-estree` package. Prettier is also able to use Babel to parse TypeScript, with some known limitations at this point, as proposed in prettier/prettier#6400.
- It would also be possible to use the TypeScript parser to parse both JavaScript and TypeScript, an idea discussed in prettier/prettier#6888.

Another thing that can probably help some parsing beginners like myself is: https://astexplorer.net/

P.S. I can think of some important points that should be summarized here in the description as well:

- My idea to use `@typescript-eslint/typescript-estree` is there to help bridge the differences in syntax tree output from Babel and `typescript` parsers, as I explained in multiple comments below.
- I am now thinking that the parser could be moved into its own pluggable stage
- The next challenge is how to deal with things like JSX, TSX, Vue with JavaScript, and Vue with TypeScript. (Prettier seems to already have a solution to deal with these formats.)

Please, if anything is not clear in this descriptions or in the comments below, ask.