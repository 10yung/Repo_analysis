As far as I can see, there is no versioning in the configuration.

It would be nice if we could add some versioning to the configuration
and then Get-PSSessionConfiguration should also output the version.

I'm not sure this is the correct repo for this?
I have a MOF file, which has RoleDefinitions hashtable as string. The hashtable itself is not sorted.
` RoleDefinitions = "@{'test\\svilen-t' = @{'RoleCapabilities' = 'Role1'};'test\\TestGroup' = @{'RoleCapabilities' = 'Role1'};'test\\svilen' = @{'RoleCapabilities' = 'Role2'}}";`

When I do test I get the following:
```powershell
VERBOSE: [TESTSERVER]:                            [[WACJeaEndpoint]Endpoint] Argument1: {
    "test\\TestGroup":  {
                              "RoleCapabilities":  "Role1"
                          },
    "test\\svilen":  {
                            "RoleCapabilities":  "Role2"
                        },
    "test\\svilen-t":  {
                              "RoleCapabilities":  "Role1"
                          }
}
VERBOSE: [TESTSERVER]:                            [[WACJeaEndpoint]Endpoint] Argument2: {
    "test\\svilen":  {
                            "RoleCapabilities":  "Role2"
                        },
    "test\\TestGroup":  {
                              "RoleCapabilities":  "Role1"
                          },
    "test\\svilen-t":  {
                              "RoleCapabilities":  "Role1"
                          }
}
VERBOSE: [TESTSERVER]:                            [[WACJeaEndpoint]Endpoint] RoleDfinitions not equal: @{
    'test\svilen' = @{
        'RoleCapabilities' = 'Role2' }
    'test\svilen-t' = @{
        'RoleCapabilities' = 'Role1' }
    'test\TestGroup' = @{
        'RoleCapabilities' = 'Role1' } }

```
The both hashtables are obviously equal. Expected is:

```powershell
VERBOSE: [TestServer]:                            [[WACJeaEndpoint]Endpoint] string
VERBOSE: [TestServer]:                            [[WACJeaEndpoint]Endpoint] Argument1: {
    "Test\\TestGroup":  {
                              "RoleCapabilities":  "Role1"
                          },
    "Test\\svilen":  {
                            "RoleCapabilities":  "Role2"
                        },
    "Test\\svilen-t":  {
                              "RoleCapabilities":  "Role1"
                          }
}
VERBOSE: [TestServer]:                            [[WACJeaEndpoint]Endpoint] Argument2: {
    "Test\\TestGroup":  {
                              "RoleCapabilities":  "Role1"
                          },
    "Test\\svilen":  {
                            "RoleCapabilities":  "Role2"
                        },
    "Test\\svilen-t":  {
                              "RoleCapabilities":  "Role1"
                          }
}
```

To me, it looks like SafeGetValue() works different on both ASTs (the one from the current PSSC file and the one from the MOF file.)
I'm ready to open PR for that, if you belive that this is really an issue. 
Whether I explicitly add Domain Admins group in the RunAsVirtualAccountsGroups parameter or not it seems that I am not being given domain access right when running cmdlets like New-ADusers or New-ADComputer

# Whether to run this session configuration as the machine's (virtual) administrator account
RunAsVirtualAccount = $true

RunAsVirtualAccountGroups = 'mesa\Domain Admins'



Access is denied
    + CategoryInfo          : PermissionDenied: (CN=jeauser2,CN=Users,DC=mesa,DC=internal:String) [New-ADUser], Unauth
   orizedAccessException
    + FullyQualifiedErrorId : ActiveDirectoryCmdlet:System.UnauthorizedAccessException,Microsoft.ActiveDirectory.Manag
   ement.Commands.NewADUser

Fix the DSC Resource links

<!-- Reviewable:start -->
---
This change isâ€‚[<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/powershell/jea/58)
<!-- Reviewable:end -->



<!-- Reviewable:start -->
This change isâ€‚[<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/powershell/jea/55)
<!-- Reviewable:end -->

GitHub doesn't seem to like the space in the paths for repo links

<!-- Reviewable:start -->
---
This change isâ€‚[<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/powershell/jea/54)
<!-- Reviewable:end -->

When running the resource using 

```powershell
Invoke-DscResource -ModuleName JustEnoughAdministration -Name JeaEndpoint -Method Set -Verbose -Property @{
            EndpointName        = 'Microsoft.PowerShell'
            RoleDefinitions     = "@{ 'CONTOSO\DnsAdmins' = @{ RoleCapabilities = 'DnsAdmin' } }"
            TranscriptDirectory = 'C:\ProgramData\JeaEndpoint\Transcripts'
            ScriptsToProcess    = @('C:\ProgramData\JeaEndpoint\startup.ps1')
            VisibleCmdlets      = "'DnsServer\*',
                @{
                    'Name'       = 'Restart-Service'
                    'Parameters' = @{
                        'Name'        = 'Name'
                        'ValidateSet' = 'Dns'
                    }
                }"
}
```

At one point it restarts the WinRM service, which then fails the DSC run.

```
VERBOSE: [SQLTEST]:                            [[JeaEndpoint]DirectResourceAccess] Restarting WinRM service
WARNING: [WSManNetworkFailureDetected] The network connection to localhost has been interrupted. Attempting to reconnect for up to 4 minutes... 
WARNING: [WSManConnectionRetryAttempt] Attempting to reconnect to localhost ... 
WARNING: [WSManConnectionRetrySucceeded] The network connection to localhost has been restored. 
The WS-Management service cannot process the operation. The operation is being attempted on a client session that is unusable.  This may be related to a recent restart of the WS-Management service. Please create a new client ses
sion and retry the operation if re-executing the operation does not have undesired behavior.
    + CategoryInfo          : InvalidOperation: (root/Microsoft/...gurationManager:String) [], CimException
    + FullyQualifiedErrorId : HRESULT 0x803381fa
    + PSComputerName        : localhost
```

Would it be better to override the restart the service, and instead allow the resource to restart the node using `$global:DSCMachineStatus = 1`. ðŸ¤” 
The example in DemoConfig.ps1 has a problem with the property `ScriptsToProcess`. It is assigned a string, but it expects a string array. 

https://github.com/PowerShell/JEA/blob/e53cdcb78fb9c80c564f7d0d57d295ca9198ae76/DSC%20Resource/DemoConfig.ps1#L14-L21

Running the example gives this error

```
Convert property 'ScriptsToProcess' value from type 'STRING' to type 'STRING[]' failed
 At line:12, char:2
 Buffer:
irectResourceAccess";
};^
insta
    + CategoryInfo          : SyntaxError: (root/Microsoft/...gurationManager:String) [], CimException
    + FullyQualifiedErrorId : MiClientApiError_Failed
    + PSComputerName        : localhost
```

I suggest to change the property `ScriptsToProcess` to this

```
ScriptsToProcess    = @('C:\ProgramData\JeaEndpoint\startup.ps1')
```

For example when running this on a node not part of the CONTOSO domain.

```powershell
Invoke-DscResource -ModuleName JustEnoughAdministration -Name JeaEndpoint -Method Set -Verbose -Property @{
            EndpointName        = 'Microsoft.PowerShell'
            RoleDefinitions     = "@{ 'CONTOSO\DnsAdmins' = @{ RoleCapabilities = 'DnsAdmin' } }"
            TranscriptDirectory = 'C:\ProgramData\JeaEndpoint\Transcripts'
            ScriptsToProcess    = @('C:\ProgramData\JeaEndpoint\startup.ps1')
            VisibleCmdlets      = "'DnsServer\*',
                @{
                    'Name'       = 'Restart-Service'
                    'Parameters' = @{
                        'Name'        = 'Name'
                        'ValidateSet' = 'Dns'
                    }
                }"
}
```

It's reporting this error, but continue to process without failing.

```plaintext
'Could not grant remote access to 'CONTOSO\DnsAdmins': 'Some or all identity references could not be translated.'
```

I suggest adding `-ErrorAction` to the calls to `Register-PSSessionConfiguration`, and maybe also `Unregister-PSSessionConfiguration`.
This adds the correct folder structure for class-based resources. This will make sure the resource is found when running `Get-DscResource`.

This PR just renames the folders, and adds a main module manifest (with new unique guid) that loads (nested) all class-based resource (although there is only one today).

<!-- Reviewable:start -->
---
This change isâ€‚[<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/powershell/jea/50)
<!-- Reviewable:end -->
