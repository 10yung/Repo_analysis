After running test cases on the booted simulator, "idb list-targets" shows so many duplicate simulators in the Terminal. 

version: idb-companion HEAD-4351288

![image](https://user-images.githubusercontent.com/54052330/69042611-753d1e80-0a2c-11ea-8416-7ab848e49aaa.png)

When and how to support the UI TestCase class(Not Unit Test Case) ,most wanted

### Description
I am trying to generate a video of the Simulator screen which is booted by idb

**What I did:**
Executed command- 
```
$idb record record-video --udid xxxxxxxx-7848-47C5-B199-xxxxxxxxxxxx --log INFO video.mp4

2019-10-29 15:51:17,136 [INFO] - video - idb state file stored at /tmp/idb_state
2019-10-29 15:51:17,137 [INFO] - video - idb local targets file stored at /tmp/idb_local_targets
Running video until ^C
2019-10-29 15:51:17,137 [INFO] - video - Starting connection to backend
2019-10-29 15:51:17,137 [INFO] - video - using companion CompanionInfo(udid='xxxxxxxx-7848-47C5-B199-xxxxxxxxxxxx', host='localhost', port=55880, is_local=True)
2019-10-29 15:51:17,138 [INFO] - video - Starting video recording to local file video.mp4
^C
Stopping video
2019-10-29 15:51:40,289 [INFO] - video - Stopping video recording
2019-10-29 15:51:40,290 [INFO] - video - Video saved at output path
```

**What I expected:**
After I perform `^c` on keyboard, it should generate a `video.mp4` file in the current directory with the recording of simulator screen

**What actually happened:**
I do not see any `.mp4` file created in the current directory

### Reproduction
**Host OS** - MAC
**OS version** - macOS Mojave 10.14.6
**python version** - 3.7.4
**XCode version** - 11.1
**idb client** - Installed using `pip3 install fb-idb` on 28th October 2019
**idb_companion installation details** - (version 1.0.8)
```
$brew info idb-companion

facebook/fb/idb-companion: stable 1.0.9 (bottled), HEAD
A Powerful Command Line for automating iOS Simulators
https://github.com/facebook/idb/README.md
/usr/local/Cellar/idb-companion/HEAD-23adc4c (252 files, 25.4MB) *
  Built from source on 2019-10-28 at 17:01:24
From: https://github.com/facebook/homebrew-fb/blob/master/idb-companion.rb
==> Dependencies
Required: grpc --1.23.0_1 ✔
==> Requirements
Build: xcode ✔
==> Options
--HEAD
	Install HEAD version
```
```
$idb describe

TargetDescription(udid='xxxxxxxx-7848-47C5-B199-xxxxxxxxxxxx', name='iPhone 8', state='booted', target_type='simulator', os_version='iOS 13.1', architecture='x86_64', companion_info=CompanionInfo(udid='', host='', port=0, is_local=False), screen_dimensions=ScreenDimensions(width=750, height=1334, density=2.0, width_points=375, height_points=667))
```

**Steps:**

1. `idb boot --udid xxxxxxxx-7848-47C5-B199-xxxxxxxxxxxx`
2. `idb connect xxxxxxxx-7848-47C5-B199-xxxxxxxxxxxx`
3. `idb record record-video --udid xxxxxxxx-7848-47C5-B199-xxxxxxxxxxxx --log INFO video.mp4`
4. `^C` on terminal

### Description
**What I did:** 
``` 
idb xctest install ./HelloDemo_iphonesimulator13.1-x86_64.xctestrun
```

**What I Excepted:**  
xctestrun is installed successfully.

**What I got actually:**
`Expected exactly one test in the xctestrun file, got: 0`
But I'm sure I have some UITest cases, and I can run them successfully by Xcode directly.

### Reproduction

Generate the xctestrun file though Xcode. And try `idb xctest install the_xctestrun_file`.


### Additional Information

* `idb` revision:  `--HEAD`

Previously, I used the fbsimctl to lunch the simulator/real devices with specific ports as parallel. And then using capsulate webdriveragent with different languages in projects. But now we just can use idb in the command line, actually, it's easier to use but not very powerful for setting up an automation project as engineering level.

My question is, can we combine idb with wda to make the automation project more flexible?
# Description

- idb open dgvg://cmd/profile (or any deeplink)

### Reproduction

1) Connect to any real device via idb connect <udid>,
2) idb open "deeplink" or http://google.com,
3) Target doesn't conform to FBSimulatorLifecycleCommands protocol.

### Solution

Do this possible to make it happen? Pass a deeplink to device so that iOS system window with "Close" or "Open" going to appear? Any wild ideas? Voodoo magic?

### Additional Information

* `idb` revision: tried 1.0.8 and head


### Description

Hi there! The Docusaurus team is currently developing Docusaurus 2 and are almost done with an MVP that doesn't include translations and versioning features, which means there's feature parity with your website's current usage of Docusaurus.


Docusaurus 2 brings about many improvements:

- Client-side rendering with prerendering (site renders without JavaScript!)
- More flexible appearance - Customizable layouts, CSS modules, etc
- Embeddable interactive React components within markdown via MDX

I will be your POC in helping you throughout the migration process. Let me know what you think!

cc @yangshun @endiliey @wgao19 


### Description

I now use `fbsimctl stream --bgra --fps 10 -` to receive the screen cast in real time but would like to switch to idb command line tool.
But I can't find the corresponding command for idb so I really appreciate if idb has such real time streaming command.
### Description

Question here... you guys plan on making it possible to use this tool for connecting iPhone devices to xcode over the network? Instead of having to open up Xcode and connect through *Devices & Simulators* 

Would be a great feature. 

# Description
idb list-targets returns "NO avalibale target"

python version: 3.7

brew info idb-companion
facebook/fb/idb-companion: stable 1.0.9 (bottled), HEAD
A Powerful Command Line for automating iOS Simulators
https://github.com/facebook/idb/README.md
/usr/local/Cellar/idb-companion/1.0.9 (248 files, 24.3MB) *
  Poured from bottle on 2019-10-08 at 11:26:26
From: https://github.com/facebook/homebrew-fb/blob/master/idb-companion.rb
==> Dependencies
Required: grpc --1.23.0_1 ✔
==> Requirements
Build: xcode ✔

brew info grpc
grpc: stable 1.23.0 (bottled), HEAD
Next generation open source RPC library and framework
https://grpc.io/
/usr/local/Cellar/grpc/1.23.0_3 (310 files, 21.9MB) *
  Poured from bottle on 2019-10-08 at 11:13:50
From: https://github.com/Homebrew/homebrew-core/blob/master/Formula/grpc.rb
==> Dependencies
Build: autoconf ✔, automake ✘, libtool ✔
Required: c-ares ✔, gflags ✔, openssl@1.1 ✔, protobuf ✔

idb_companion --notify /tmp/idb_local_targets
dyld: Library not loaded: /usr/local/opt/protobuf/lib/libprotobuf.20.dylib
  Referenced from: /usr/local/bin/idb_companion
  Reason: image not found
Abort trap: 6



I could find `libprotobuf.21.dylib` in fold `/usr/local/opt/protobuf/lib/` but there is no `libprotobuf.20.dylib`. Did I install the incorrect version of the `grpc`?


### Reproduction

execute `idb list-targets`

### Solution


### Additional Information

* `idb` revision: 1.0.9
