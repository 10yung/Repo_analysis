OSLib: 1.4.2
Scala: 2.13
SBT: 1.2.8

I've been using the following way of spawning a child process and I see intermittent 143 / 137 errors. The application handles these errors and keeps running.

```
os.proc(commandLine()).call(timeout = 60)
```

I'm also trying out ZeroTurnarouns `zt-exec` where things seem to be consistently working.

I wanna peek the how many bytes in `OutputStream` that I can read, in case of blocked by process.
However I found when I use `sub.stdout.available`, it always returns 0, seems `available` didn't implemented by `os.OutputStream` nor `java.lang.ProcessPipeInputStream`.
Thus there might be no way to implement a non-block reading by `os-lib`