
       Реализую авторизацию в приложении через ВК.  После успешной авторизации, если не пользоваться приложением некоторое время (в среднем на android 8.0 около 6-8 часов, на android 7.0 12 часов), то происходит разлогинивание.  При проверке на входе метод VK.isLoggedIn() вернет false. Пробовал запрашивать бессрочный токен (List<VKScope> tmp=new ArrayList<>(); tmp.add(VKScope.OFFLINE);VK.login(LoginActivity.this,tmp);), но ситуация не изменилась.
fun VK.login(Activity, Collection<VKScope>) есть, а 
fun VK.login(Fragment, Collection<VKScope>) нет. Почему? Версия 2.1.1
Почему нет возможности выполнить авторизацию с указанием конкретного appId?
```
fun login(activity: Activity, appId: Int = getAppId(activity), scopes: Collection<VKScope>) {
        val params = VKAuthParams(appId, scopes)
        if (VKUtils.isAppInstalled(activity, VK_APP_PACKAGE_ID) && VKUtils.isIntentAvailable(activity, VK_APP_AUTH_ACTION)) {
            startAuthActivity(activity, params)
        } else {
            // start dialog with webview
            startInternalAuthActivity(activity, params)
        }
    }```
Такой вариант конструктора более универсален. Он противоречит внутренней политике?
При открытии авторизации через ВК, поведение кнопки `Sign up`, расположенной внизу экрана с id = FloatBtn FloatBtn_nowrap FloatBtn_open, неправильное: после попытки загрузить страницу по умолчанию https://oauth.vk.com/join?from=float, открывается ошибка {"error":"invalid_client","error_description":"client_id is incorrect"}.

Переопределить поведение кнопки изменить невозможно.


В SDK присутствует реализация для загрузки файлов через метод `VKHttpPostCall.Builder()`, однако нет реализации для простого GET запроса для  **upload_url** (например, при загрузке видеозаписи из сторонних источников).

Если попытаться использовать `VKHttpPostCall.Builder()`, то он потребует соответствующее тело для загрузки:

> Multipart body must have at least one part.

Прошу добавить специальный метод для вызова поля **upload_url**.

Если на телефоне не установлено приложение ВКонтакте, то показывается webview в котором происходит авторизация. Но показывается ошибка client_id_error если нажимаем на синюю кнопку "Регистрация", которая с крестиком, а не большая кнопка "Зарегистрироваться". Причем авторизация отрабатывает нормально, и регистрация с большой кнопки работает нормально тоже, а вот с круглой синей кнопки нет. Уберите ее вообще тогда, зачем две кнопки, одна из которых не работает?
Функции save у VKAccessToken подразумевает наличие nullable полей.
При вызове restore вылетает
java.lang.IllegalStateException: vkTokenBundle.getString(key) must not be null
поскольку HashMap<String, String> ожидает увидеть not null value
Наше приложение содержит режим тестирования, в котором требуется авторизация с другим vk appId. Как можно в runtime выполнить авторизацию с appId отличным от того, что указан в файле ресурсов?
Пытаюсь установить кастомный конфиг используя VK SDK 2.0.2. Использую следующий код:

        VKApiConfig.Builder vkApiConfig = new VKApiConfig.Builder();
        vkApiConfig.context(this);
        vkApiConfig.logger(new DefaultApiLogger(Logger.LogLevel.VERBOSE, "myTag"));
        vkApiConfig.getOkHttpProvider().updateClient(builder -> {
            return new OkHttpClient.Builder()
                    .someMethod1()
                    .someMethod2()
        });
        VK.setConfig(vkApiConfig.build());

Но в логах записи с "myTag" не появляются и настройки HttpClient-а не изменяются судя по всему. Вероятно, конфиг не обновляется. Как это делать правильно?