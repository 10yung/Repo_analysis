Hi there,

I am working on an application that is interested not only on events that a file/dir has been modified but also if it is being `viewed/opened` by an external application like finder/explorer.

I am wondering if this is possible with certain enhancements to this library?
If so, can you point me in a direction that I can do more research on?

Thanks.
Before reporting an issue, please ensure you are using the latest release of fsnotify.
Yeah

### Which operating system (GOOS) and version are you using?

Windows: go 1.12, windows 10

### Please describe the issue that occurred.
On windows, when we try to extract the event path name from the OS, we create a buf with length as syscall.MAX_PATH (https://github.com/fsnotify/fsnotify/blob/master/windows.go#L454).
However, it is possible to create a file name whose length exceeds this.

So, can we instead of using a fixed syscall.MAX_PATH buf, we create a buf that is the size of the path name based on the `raw.FileNameLength` like the following?
```
size := int(raw.FileNameLength / 2)
var buf []uint16
sh := (*reflect.SliceHeader)(unsafe.Pointer(&buf))
sh.Data = uintptr(unsafe.Pointer(&raw.FileName))
sh.Len = size
sh.Cap = size

name := syscall.UTF16ToString(buf)
```

### Code to create a long path dir exceeding syscall.MAX_PATH:

```
// Copyright 2012 The Go Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// +build !plan9

package main

import (
	"crypto/rand"
	"encoding/hex"
	fmt "fmt"
	"os"
	"path/filepath"
)

func RandString(bytes int) string {
	buf := make([]byte, bytes)
	_, err := rand.Read(buf)
	if err != nil {
		return ""
	}
	return hex.EncodeToString(buf[:])[:len(buf)]
}

func main() {

	longPath := ""
	for i := 0; i < 10; i++ {
		longPath = filepath.Join(longPath, RandString(26))
	}

	parentDir := "C:/Users/hangk/Downloads/temp"
	fmt.Println(longPath)
	err := os.MkdirAll(filepath.Join(parentDir, longPath), 0700)
	fmt.Println(err)
}

``` 

Now if we watch this longPath dir, fsnotify will crash.

Notes:

For our application need, I also have to modify `fsnotify` here: https://github.com/fsnotify/fsnotify/blob/master/windows.go#L350 to perform recursive watch.

Empty implementation, just to allow build

#### What does this pull request do?
It proposes an empty implementation, so that this can bu built on AIX 

#### Where should the reviewer start?
Only one file to review, rather simple as all methods return either nil, or errors.New("not implemented")

#### How should this be manually tested?
This new file allows you to build the package on AIX. 
This fsnotify package is used as a dependency but the runtime is not necessary.

#### What does this pull request do?
Adds support for the Linux inotify IN_CLOSE_WRITE event. This is triggered when a file writer/modifier has finished making changes to a file (e.g. if use is monitoring a FTP upload folder, event is fired when a new file has finished being written).

#### Where should the reviewer start?
fsnotify.go has an extra Op flag: CloseWrite
inotify.go has changes that add the IN_CLOSE_WRITE flag.

#### How should this be manually tested?
Run an app monitoring any directory. Open a file for write (e.g. using vim). On file close (:wq in vim) the IN_CLOSE_WRITE event will be triggered.

### Which operating system (GOOS) and version are you using?

Linux. See job https://travis-ci.org/fsnotify/fsnotify/jobs/594068880

### Please describe the issue that occurred.

The sys package (dependency) requires math/bits, which in turn requires Go 1.9 or greater.
https://github.com/golang/sys/blob/master/unix/affinity_linux.go

```
Fetching https://golang.org/x/sys/unix?go-get=1
Parsing meta tags from https://golang.org/x/sys/unix?go-get=1 (status code 200)
get "golang.org/x/sys/unix": found meta tag main.metaImport{Prefix:"golang.org/x/sys", VCS:"git", RepoRoot:"https://go.googlesource.com/sys"} at https://golang.org/x/sys/unix?go-get=1
get "golang.org/x/sys/unix": verifying non-authoritative meta tag
Fetching https://golang.org/x/sys?go-get=1
Parsing meta tags from https://golang.org/x/sys?go-get=1 (status code 200)
golang.org/x/sys (download)
package math/bits: unrecognized import path "math/bits" (import path does not begin with hostname)
```

### Are you able to reproduce the issue? Please provide steps to reproduce and a code sample if possible.

See job https://travis-ci.org/fsnotify/fsnotify/jobs/594068880
There are a number of open issues for documentation.

We can continue to extend the FAQ in the Readme, but it may make sense to start adding documentation over on the website instead?

https://github.com/fsnotify/fsnotify.org

What do people think?
Before reporting an issue, please ensure you are using the latest release of fsnotify.

### Which operating system (GOOS) and version are you using?
LSB Version:	:core-4.1-amd64:core-4.1-noarch:cxx-4.1-amd64:cxx-4.1-noarch:desktop-4.1-amd64:desktop-4.1-noarch:languages-4.1-amd64:languages-4.1-noarch:printing-4.1-amd64:printing-4.1-noarch
Distributor ID:	CentOS
Description:	CentOS Linux release 7.3.1611 (Core) 
Release:	7.3.1611
Codename:	Core

### Please describe the issue that occurred.
We have 2 NFS clients, saying that A and B, and A and B have a share mount point /opt/files. We deploy our app which integrates fsnotify on A, another app writes data to /opt/files on B. We were surprised to find that the app could not catch the events when files were written on B. 
  
### Are you able to reproduce the issue? Please provide steps to reproduce and a code sample if possible.
1. deploy one NFS server and two NFS clients.
2. add some share path on one of NFS clients, and write data to the share path on the other NFS client.

My program watches a directory and the sub directories at the same time with fsnotify. I moved a folder with many files and sub folders to the directory, no file system events reveived and the watcher came up with an error event. 



Before reporting an issue, please ensure you are using the latest release of fsnotify.

### Which operating system (GOOS) and version are you using?

kubernetes pod

### Please describe the issue that occurred.

I have two pods with the same volume mounted. I run fsnotify in pod a and operate files in pod b, in this case, I can not see any notify. But if I operate files in pod a, I can see output which tells me the changes of file.

### Are you able to reproduce the issue? Please provide steps to reproduce and a code sample if possible.

1. write a program which will print notify
1. create pod a and b using kubernetes and mount same pvc to a and b
1. start the programs above in pod a and watch the folder which the pv mount in
1. operate folder in pod b which the pv mount in

and you can not see any output in pod a
