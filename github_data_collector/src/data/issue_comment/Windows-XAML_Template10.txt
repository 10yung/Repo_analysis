Right now you have to do this if you want to navigate to `Settings`.

````csharp
public override void RegisterTypes(IContainerRegistry container)
{
    container.RegisterView<SettingsPage, SettingsPageViewModel>();
}
````

Even if all you are doing is this:

````csharp
public override void RegisterTypes(IContainerRegistry container)
{
    container.RegisterView<SettingsPage>();
}
````

I guess I have forgotten why we don't support navigating to a page by using a hunt for the type based on the key passed to the `NavigationService`. I can't remember the reason we would not have done this and it seems like conventions-based should handle most use cases, which would make the `RegisterTypes()` method considerably smaller/simpler/easier. It would also enable simple apps to just plug and play.

What am I missing?
It's already possible to retrieve the `NavigationService` in a Template 10 view-model using the `GetNavigationService()` extension method off the `NavigationParameters` passed into the `OnNavigatedTo` and `OnNavigatedToAsync` methods. You can also use `GetSynchronizationContext()` to help with threading. These are not discoverable, I know, but they are easy. 

Here's the syntax:

````csharp
public class MyViewModel : ViewModelBase
{
    private INavigationService _nav;

    public override void OnNavigatedTo(INavigationParameters parameters)
    {
        _nav = parameters.GetNavigationService();
    }
}
````

The issue here, however, is the change in heart I have had with `NavigationService`. I believe that an app should create its own `NavigationService`, lately I have been calling mine `NavigationManager` in order to disambiguate the name. The reason to remove it from `ViewModelBase` as a public property is that it encourages a generic use case instead of an app-specific one. It also shows up when using binding and that's really confusing. 

Here's what I am recommending:

````csharp
public class NavigationManager
{
    private readonly NavigationService _navigationService;

    public NavigationManager(NavigationService navigationService)
    {
        _navigationService = navigationService;
    }
}

public class MyViewModel : ViewModelBase
{
    private readonly NavigationManager _nav;

    public MyViewModel(NavigationManager navigationManager)
    {
        _nav = navigationManager;
    }
}
````

This is not a recommendation to remove the extension methods or the ability to access the `NavigationService`. Just removing the public property on the view-model in order to encourage better patterns. If you don't want better patterns, then the extension methods are still there. You can also sub-class `ViewModelBase` in order to restore the property, too. 
Hi 
i am using these two methods(OnNavigatedToAsync,OnNavigatedFromAsync) in the view model,

when i am navigating to NavigateService then these two method was called.
but when i am navigating using Frame.Navigate method this will not work.
please help





Currently has `ToString()` which requires:

````csharp
var path = PathBuilder.Create(BackStackBehaviors.Clear, nameof(MyView)).ToString();
await NavigationService.NavigateAsync(new Uri(path, UriKind.Relative));
````

This works and should not be changed.

The desired ADDITIONAL syntax would be:

````csharp
var path = PathBuilder.Create(BackStackBehaviors.Clear, nameof(MyView)).ToUri();
await NavigationService.NavigateAsync(path);
````

It will be difficult to remember the `UriKind.Relative` part anyway.
Hello

I am not able build project from Template10 GitHub. I am not sure where is the problem (source code, Visual studio or Windows). My windows is version 10. 0. 19028. insider preview fast ring, Visual Studio is Microsoft Visual Studio Community 2019 Version 16.3.10 VisualStudio.16.Release/16.3.10+29519.87

There are 3 Solutions in Template10 GitHub

**1.  Template10.Nuget.Sample is OK**
1>------ Rebuild All started: Project: Template10.Nuget.Sample, Configuration: Debug ARM ------
1>  Template10.Nuget.Sample -> C:\Users\PetrM\Source\Repos\Template10\Samples\Template10.Nuget.Sample\Template10.Nuget.Sample\bin\ARM\Debug\Template10.Nuget.Sample.exe
========== Rebuild All: 1 succeeded, 0 failed, 0 skipped ==========

**2. I could not load Template10.Core.Default**
Error occurred while restoring NuGet packages: The operation failed as details for project Template10.Core.Default could not be loaded.
Error occurred while restoring NuGet packages: The operation failed as details for project Template10.Core could not be loaded. 
========== Rebuild All: 1 succeeded, 6 failed, 1 skipped ==========

**3.  And similar situation in Template10.Core solution**
Error occurred while restoring NuGet packages: The operation failed as details for project Template10.Core could not be loaded. 
========== Rebuild All: 0 succeeded, 7 failed, 1 skipped ==========

Visual studio 2019 interface 

![image](https://user-images.githubusercontent.com/13888026/69412267-d1df5880-0d0e-11ea-9d65-eaa592922995.png)

Here is link to ZIP file with Visual studio activity log.
[https://1drv.ms/u/s!AhtRMLXsfitXmIF6fRHPQHQZ7g_Efg?e=QNvQXy](url)

Do not hesitate and ask me for details.
Petr
Right now we do both. If you invoke a background task Application's `EnteringBackground` event is raised and `OnStart` is called. Is that confusing? Is that okay? Not sure. Would like your opinions.
Though I do believe this is a nice convenience for most developers, it undermines the use of extended splash screens that delay activate until after the splash image loads. That said, perhaps there a way to make this conditional somehow. Anyway, at the least, it should be removed.
This could be a `UWP` bug, but the `Template10` version of `LeavingBackground` should not be raised until, at least, the `EnteringBackground` has been raised one time.
In old T10 version there was a way to create extended splash screen in app constructor SplashFactory = (e) => new Views.Splash(e); There is solution to override OnLaunched method in standard UWP App. Unfortunate this method is sealed in Template 10.
I did not find any description ow web. Please will you point me out where is some docs describing my problem. Thanks in advance.
