there is third crash:
```
(gdb) run /home/lx/DIVE/Trunk/bin/hfl/output/2014113C514B5678181A5B721E6B693F638486/hfl-crash-758-{rva_0xA6BE}{code_0xB}{access_0x8}{luna}
Starting program: /home/lx/5_30/luna/luna-master/luna /home/lx/DIVE/Trunk/bin/hfl/output/2014113C514B5678181A5B721E6B693F638486/hfl-crash-758-{rva_0xA6BE}{code_0xB}{access_0x8}{luna}
(call

Program received signal SIGSEGV, Segmentation fault.
0x000000000040a6be in visit_call (self=0x7fffffffdb20, node=0x616090) at src/prettyprint.c:325
325	  if (luna_vec_length(node->args->vec)) {
```
```
(gdb) bt
#0  0x000000000040a6be in visit_call (self=0x7fffffffdb20, node=0x616090) at src/prettyprint.c:325
#1  0x000000000040d0be in luna_visit (self=0x7fffffffdb20, node=0x616090) at src/visitor.c:35
#2  0x000000000040a3a3 in visit_block (self=0x7fffffffdb20, node=0x616010) at src/prettyprint.c:112
#3  0x000000000040cf14 in luna_visit (self=0x7fffffffdb20, node=0x616010) at src/visitor.c:26
#4  0x000000000040a287 in luna_prettyprint (node=0x616010) at src/prettyprint.c:501
#5  0x0000000000405653 in eval (source=0x616250 "nm47(481, 2-)4", 
    path=0x7fffffffe566 "/home/lx/DIVE/Trunk/bin/hfl/output/2014113C514B5678181A5B721E6B693F638486/hfl-crash-758-{rva_0xA6BE}{code_0xB}{access_0x8}{luna}") at src/luna.c:162
#6  0x0000000000405817 in main (argc=2, argv=0x7fffffffe2c8) at src/luna.c:212
```

```
(gdb) i r
rax            0x0	0
rbx            0x0	0
rcx            0x8	8
rdx            0x7ffff7acf9e0	140737348696544
rsi            0x7ffffff7	2147483639
rdi            0x7ffff7ff700b	140737354100747
rbp            0x7fffffffda50	0x7fffffffda50
rsp            0x7fffffffd9e0	0x7fffffffd9e0
r8             0xffffffff	4294967295
r9             0x0	0
r10            0x7ffff7acc6a0	140737348683424
r11            0xfffffffc	4294967292
r12            0x401220	4198944
r13            0x7fffffffe2c0	140737488347840
r14            0x0	0
r15            0x0	0
rip            0x40a6be	0x40a6be <visit_call+142>
eflags         0x10202	[ IF RF ]
cs             0x33	51
ss             0x2b	43
ds             0x0	0
es             0x0	0
fs             0x0	0
gs             0x0	0
```
```
(gdb) x/10i $pc
=> 0x40a6be <visit_call+142>:	mov    0x8(%rax),%rax
   0x40a6c2 <visit_call+146>:	cmpq   $0x0,(%rax)
   0x40a6c6 <visit_call+150>:	je     0x40a8d0 <visit_call+672>
   0x40a6cc <visit_call+156>:	movabs $0x4115f2,%rdi
   0x40a6d6 <visit_call+166>:	mov    $0x0,%al
   0x40a6d8 <visit_call+168>:	callq  *0x6158d8
   0x40a6df <visit_call+175>:	movl   $0x0,-0x18(%rbp)
   0x40a6e6 <visit_call+182>:	mov    %eax,-0x48(%rbp)
   0x40a6e9 <visit_call+185>:	mov    -0x18(%rbp),%eax
   0x40a6ec <visit_call+188>:	cmp    0x615874,%eax
```

there is second crash.
gdb error information:
```
(gdb) run /home/lx/DIVE/Trunk/bin/hfl/output/2014113C514B5678181A5B721E6B693F638486/hfl-crash-475-{rva_0x88EA}{code_0xB}{access_0x400018}{luna}
Starting program: /home/lx/5_30/luna/luna-master/luna /home/lx/DIVE/Trunk/bin/hfl/output/2014113C514B5678181A5B721E6B693F638486/hfl-crash-475-{rva_0x88EA}{code_0xB}{access_0x400018}{luna}

Program received signal SIGSEGV, Segmentation fault.
0x00000000004088de in primary_expr (self=0xffffffffffffffff) at src/parser.c:283
```

bt:

```
(gdb) bt
#0  0x00000000004088de in primary_expr (self=0xffffffffffffffff) at src/parser.c:283
#1  0xffffffffffffffff in ?? ()
#2  0xffffffffffffffff in ?? ()
#3  0x00000001ffffffff in ?? ()
#4  0x00007fffffffd500 in ?? ()
#5  0x00000000004088da in primary_expr (self=<error reading variable: Cannot access memory at address 0xffffffffffffffef>) at src/parser.c:283
Backtrace stopped: previous frame inner to this frame (corrupt stack?)
```

```
(gdb) i r
rax            0x1	1
rbx            0x0	0
rcx            0x131ff	78335
rdx            0x7fffffffdc18	140737488346136
rsi            0x7fffffffd477	140737488344183
rdi            0xffffffffffffffff	-1
rbp            0x7fffffffd500	0x7fffffffd500
rsp            0x7fffffffd530	0x7fffffffd530
r8             0xffffffffffffffff	-1
r9             0xffffffffffffffff	-1
r10            0xffffffffffffffff	-1
r11            0x7ffff778e201	140737345282561
r12            0x401220	4198944
r13            0x7fffffffe2b0	140737488347824
r14            0x0	0
r15            0x0	0
rip            0x4088de	0x4088de <primary_expr+270>
eflags         0x10202	[ IF RF ]
cs             0x33	51
ss             0x2b	43
ds             0x0	0
es             0x0	0
fs             0x0	0
gs             0x0	0
```

```
(gdb) x/10i $pc
=> 0x4088de <primary_expr+270>:	mov    0x20(%rdi),%rdi
   0x4088e2 <primary_expr+274>:	add    $0x28,%rdi
   0x4088e6 <primary_expr+278>:	mov    -0x10(%rbp),%rcx
   0x4088ea <primary_expr+282>:	mov    %rdi,0x18(%rcx)
   0x4088ee <primary_expr+286>:	mov    -0x18(%rbp),%rcx
   0x4088f2 <primary_expr+290>:	mov    %rcx,-0x8(%rbp)
   0x4088f6 <primary_expr+294>:	mov    %eax,-0x30(%rbp)
   0x4088f9 <primary_expr+297>:	jmpq   0x40890b <primary_expr+315>
   0x4088fe <primary_expr+302>:	mov    -0x10(%rbp),%rdi
   0x408902 <primary_expr+306>:	callq  0x408bc0 <paren_expr>
```


then luna is crashed by my crash file.I think it is also caused by High truncation.then I want to show my error information to help your guys.

gdb crash information:
```
(gdb) run /home/lx/DIVE/Trunk/bin/hfl/output/2014113C514B5678181A5B721E6B693F638486/hfl-crash-365-{rva_0x43C2}{code_0xB}{access_0x7fe56e4b8000}{luna}heapoverflow[returnaddr=luna.0x133B, addr=0x00007fe56e4bc000,0x10]
Starting program: /home/lx/5_30/luna/luna-master/luna /home/lx/DIVE/Trunk/bin/hfl/output/2014113C514B5678181A5B721E6B693F638486/hfl-crash-365-{rva_0x43C2}{code_0xB}{access_0x7fe56e4b8000}{luna}heapoverflow[returnaddr=luna.0x133B, addr=0x00007fe56e4bc000,0x10]

Program received signal SIGSEGV, Segmentation fault.
__GI_fseek (fp=0x0, offset=0, whence=2) at fseek.c:38
38	fseek.c: No such file or directory.
```
Hello everyone.I use my company tools to fuzz test luna.But when it firstly run,luna is crash.So I dig to find the key problem. It is due to Makefile wasn't perfect.
  
when luna use old Makefile,luna wasn't crash.But when it use ASAN,luna crashed.Because Makefile is lack of -D_GNU_SOURCE make config. there is new Makefile.but when it use new Makefile,ASAN also print.ERROR: LeakSanitizer: detected memory leaks.So I want to show my process in fuzz test.
 

The debug macro in parse.c is:
```
#ifdef EBUG_PARSER
#define debug(name) \
  fprintf(stderr, "\n\e[90m%s\e[0m\n", name); \
  luna_token_inspect(&self->lex->tok);
#else
#define debug(name)
#endif
```

But following debug statement will crash because the self->lex->tok hasn't been assigned a valid token.
```
static luna_block_node_t *
program(luna_parser_t *self) {
  debug("program");
  ...
}
```

Can the debug macro be changed to:

```
#ifdef EBUG_PARSER
#define debug(name) \
  fprintf(stderr, "\n\e[90m%s\e[0m\n", name); \
  if(self->lex->offset) \
    luna_token_inspect(&self->lex->tok);
#else
#define debug(name)
#endif
```
Hey @tj, I've just opened Hacker News and saw this announcement [Luna lang](http://www.luna-lang.org/)

Does it mean you have to change your language's name now? :(

I really liked it.
Is  the list of opcode complete or are there more to be added?

Hi, guys
YOU GUYS are doing exciting things. I love your idea but since I look through the issues, I didn't find any issue about type system. Have you ever thought about it? If you want to make it expressive, I think it's one of the most important matters.

Thanks 

Does Luna have null?
Does Luna have the concept of tagged unions/ variant types?
Can you pass a function as a parameter to another function, if so, what is the type declaration of the function?

Thanks.
