I know this isn't an issue, but I wanted to provide some information that may help others in the same position as myself.

I had relied upon Cupertino to handle provisioning profiles in my CI setup for building iOS apps (simulator and device. In House / Enterprise, Debug, AdHoc, App Store)

As we know, Apple made changes to how the website worked, which caused Cupertino to stop functioning. The workaround suggested by many was to move to Fastlane, specifically the sigh tool.

Sigh is very powerful and useful, don't get me wrong. The repair feature is fantastic. However, I could not replicte Cupertino's operation. I simply cannot provide a profile name and download that profile. You have to provide a bundle ID as well. For the vast majority, that likely isn't a problem and it just works, but for me, that's not the case.

After asking on Faslane wether I was missing something, and if not, will they add functionality to Sigh to replicate Cupertino's behaviour, it was suggested I look at the Spaceship component of Fastlane.

It took me a fair few hours, as I've never used Ruby before, but I believe I've come up with code that will allow me to download a specific profile by name. I also added the ability to repair just that specified profile and not all of them - which is the behaviour of Sigh's repair function.

There's obviously no check as to wether you have the code signing identity / keys to actually use the profile you downloaded. But hey, if we're looking at sigh, we likely know the pitfalls of provisioning and code signing.

Below is the code I came up with. I execute it by calling the appropriate .rb file within my Execute Shell build phase of a Jenkins job.

I hope that this might prove useful to other people :)

**Code to repair a specific provisioning profile**

```
Usage:
./repair_specific_provisioning_profile.rb "myemail@email.com" "PaSSw0rd" "TMGXYQV"  "My Provisioning Profile Name"
```

```
#!/usr/bin/env ruby
# This script will use Spaceship - part of the Fastlane tools - to login to the developer portal and repair the specified provisioning profile

the_user_name = ARGV[0]
the_user_password = ARGV[1]
the_team_id = ARGV[2]
the_profile_name = ARGV[3]

require "spaceship"
begin
    puts ""
    # Login
    puts "   Logging into Developer Portal as: '#{the_user_name}'"
    puts ""
    Spaceship.login(the_user_name, the_user_password)

    # Select team
    puts "   Selecting team: '#{the_team_id}'"
    puts ""
    Spaceship.client.team_id = the_team_id

    # Find the exact profile we're looking for
    puts "   Finding profile named: '#{the_profile_name}'"
    puts ""
    my_profile = Spaceship.provisioning_profile.all.find { |p| p.name == the_profile_name }

    # Repair the profile
    puts "   Repairing profile named: '#{the_profile_name}'"
    puts ""
    my_profile.repair!
end
```

**Code to download a specific profile**

```
Usage:
./download_specific_provisioning_profile.rb "myemail@email.com" "PaSSw0rd" "TMGXYQV"  "My Provisioning Profile Name" "/path/to/profile/location"
```

```
#!/usr/bin/env ruby
# This script will use Spaceship - part of the Fastlane tools - to login to the developer portal and download the specified provisioning profile
the_user_name = ARGV[0]
the_user_password = ARGV[1]
the_team_id = ARGV[2]
the_profile_name = ARGV[3]
base_profile_path = ARGV[4]


require "spaceship"
begin
    puts ""
    # Login
    puts "   Logging into Developer Portal as: '#{the_user_name}'"
    puts ""
    Spaceship.login(the_user_name, the_user_password)

    # Select team
    puts "   Selecting team: '#{the_team_id}'"
    puts ""
    Spaceship.client.team_id = the_team_id

    # Find the exact profile we're looking for
    puts "   Finding profile named: '#{the_profile_name}'"
    puts ""
    my_profile = Spaceship.provisioning_profile.all.find { |p| p.name == the_profile_name }

    # Download the profile
    the_profile_name = the_profile_name.tr(' ', '_')
    the_profile_path = "#{base_profile_path}#{the_profile_name}.mobileprovision"
    puts "   Downloading profile named named: '#{the_profile_name}' to: '#{the_profile_path}'"
    puts ""
    File.write(the_profile_path, my_profile.download)
end
```

**Some notes:**
the_user_name = Email address of the account that has access to the Developer Portal. For repairing a profile you'd need "Admin" permissions

the_user_password = Password for the above account

the_team_id = The Team ID for the above account. You can find it by signing into the Developer Portal, the selecting Account, and then the Membership option, you will then see "Team ID" listed there.

the_profile_name = The name of the profile as specified in the development portal. If you click on a profile in the portal then it's the item specified by "Name:". _Note:_ The profile name when downloaded will have spaces replaced with underscores. This is the same behaviour as the development portal

base_profile_path = Path to where you want the profile to be downloaded to. _Note:_ Do not supply a trailing slash on the path.

please update 

Thanks in advance

shikeim01deMac-mini:~ shikeim01$ ios devices:list
error: Cupertino::ProvisioningPortal::UnexpectedContentError. Use --trace to view backtrace

thank you.

ios devices:list

getting

error: 404 => Net::HTTPNotFound for https://developer.apple.com/account/ios/device/deviceList.action -- unhandled response. Use --trace to view backtrace

it was working till few days ago, anyone aware of it?

Error:

```
/opt/rubies/2.2.2/lib/ruby/gems/2.2.0/gems/mechanize-2.5.1/lib/mechanize/http/agent.rb:304:in `fetch': 404 => Net::HTTPNotFound for https://developer.apple.com/account/ios/profile/profileList.action?type=limited -- unhandled response (Mechanize::ResponseCodeError)
```

The change is quite dramatic it seems. At first it looks like a URL change:

```
        url = case type
              when :development
                'https://developer.apple.com/account/ios/profile/profileList.action?type=limited'
              when :distribution
                'https://developer.apple.com/account/ios/profile/profileList.action?type=production'
              else
                raise ArgumentError, 'Provisioning profile type must be :development or :distribution'
              end
```

became:

```
        url = case type
              when :development
                'https://developer.apple.com/account/ios/profile/limited'
              when :distribution
                'https://developer.apple.com/account/ios/profile/production'
              else
                raise ArgumentError, 'Provisioning profile type must be :development or :distribution'
              end
```

But the resulting page, is all js loaded content now:

```
<!--  -->
<!doctype html>
<html lang="en">
  <head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=EmulateIE7, IE=9" />
    <title>Certificates, Identifiers & Profiles - Apple Developer</title>
    <meta name="description" content="Apple Developer Certificates, Identifiers & Profiles" />
    <meta name="Author" content="Apple Inc." />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link rel="shortcut icon" href="/favicon.ico" />
    <link rel="icon" href="/favicon.ico" />
    <link rel="stylesheet" href="/account/cips/global.css" type="text/css" />
    <link rel="stylesheet" href="https://developer.apple.com/assets/core/styles/base.css" type="text/css" />
    <link rel="stylesheet" href="https://developer.apple.com/assets/core/styles/adc.css" type="text/css" />
    <link rel="stylesheet" href="https://developer.apple.com/assets/styles/jqueryui/smoothness-custom-1.8.17/jquery-ui-1.8.17.css" type="text/css" />
    <link rel="stylesheet" href="https://developer.apple.com/assets/scripts/lib/jqgrid/css/ui.jqgrid.css" type="text/css" />
    <link rel="stylesheet" href="/account/cips/cips-min.css" type="text/css" />
    <style id="css"></style>
</head>
  <body>
    <div id="app"></div>
    <script src="/account/cips/lib-min.js"></script>
    <script src="/account/cips/app-min.js"></script>
    <script src="/account/cips/account-min.js"></script>
  </body>
</html>
```

I'm seeing login failures when requesting the device list.

It looks like for some reason, we are being redirected to a different login page.

This is what I see in my browser:

```
https://idmsa.apple.com/IDMSWebAuth/login?&appIdKey=XXXXXXX...
```

This is what I'm seeing in the failed login attempts:

```
https://idmsa.apple.com/IDMSWebAuth/authenticate;jsessionid=XXXXXX...
```

From looking at the other Page::Links returned, it looks like this is the Apple ID login page instead of the Apple Developer login page.

Here is the command that I'm running:

``` sh
$ ios devices
```

Any ideas?

How is it possible to select a team when same email address is linked to different developer accounts? I think this should be supported (if possible)


With cupertino 1.3.4

```
/Library/Ruby/Gems/2.0.0/gems/mechanize-2.5.1/lib/mechanize/http/agent.rb:304:in `fetch': 415 => Net::HTTPUnsupportedMediaType for https://developer.apple.com/services-account/QH65B2/account/ios/device/validateDevices.action?struts.token.name=clientToken&clientToken=NI48Q6R918K8SKO5C5IHMVJHSVPT68NG&register=multiple&deviceNames=&deviceNumbers= -- unhandled response (Mechanize::ResponseCodeError)
    from /Library/Ruby/Gems/2.0.0/gems/mechanize-2.5.1/lib/mechanize.rb:407:in `get'
    from /Library/Ruby/Gems/2.0.0/gems/cupertino-1.3.4/lib/cupertino/provisioning_portal/agent.rb:45:in `block in get'
    from /Library/Ruby/Gems/2.0.0/gems/cupertino-1.3.4/lib/cupertino/provisioning_portal/agent.rb:44:in `times'
    from /Library/Ruby/Gems/2.0.0/gems/cupertino-1.3.4/lib/cupertino/provisioning_portal/agent.rb:44:in `get'
    from /Library/Ruby/Gems/2.0.0/gems/mechanize-2.5.1/lib/mechanize.rb:517:in `submit'
    from /Library/Ruby/Gems/2.0.0/gems/mechanize-2.5.1/lib/mechanize/form.rb:178:in `submit'
    from /Library/Ruby/Gems/2.0.0/gems/cupertino-1.3.4/lib/cupertino/provisioning_portal/agent.rb:156:in `add_devices'
    from /Library/Ruby/Gems/2.0.0/gems/cupertino-1.3.4/lib/cupertino/provisioning_portal/commands/devices.rb:60:in `block (2 levels) in <top (required)>'
    from /Library/Ruby/Gems/2.0.0/gems/commander-4.3.5/lib/commander/command.rb:178:in `call'
    from /Library/Ruby/Gems/2.0.0/gems/commander-4.3.5/lib/commander/command.rb:178:in `call'
    from /Library/Ruby/Gems/2.0.0/gems/commander-4.3.5/lib/commander/command.rb:153:in `run'
    from /Library/Ruby/Gems/2.0.0/gems/commander-4.3.5/lib/commander/runner.rb:428:in `run_active_command'
    from /Library/Ruby/Gems/2.0.0/gems/commander-4.3.5/lib/commander/runner.rb:68:in `run!'
    from /Library/Ruby/Gems/2.0.0/gems/commander-4.3.5/lib/commander/delegates.rb:15:in `run!'
    from /Library/Ruby/Gems/2.0.0/gems/commander-4.3.5/lib/commander/import.rb:5:in `block in <top (required)>'
```

Hi,

I have been having issues using ios since Wednesday September 9 (the day of the apple conference). When trying to fetch ios profiles, I get a connection issue. Has anyone noticed the same?

ios profiles
error: connection refused: developer.apple.com:443.

Thanks,
Cédric
