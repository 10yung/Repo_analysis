A sample showing how to import native dependencies from Maven. This sample uses curl, OpenSSL, and JsonCpp to display a list of the most recent 10 reviews submitted to AOSP's code review system.

This is still somewhat WIP (it needs a lot of comments, and shouldn't be checked in until it's usable with a published AGP), but it's ready for some initial review.
Hello,
I have compiled the camera sample on my galaxy A8 2018.
There is no button on the screen in order to capture an image.
There is just the video view.

The procedure 👍 public void EnableUI(final long[] params)
(line 274 of CameraActivity.java)
is never called (detected by the Android studio compiler)

Sincerely,
F.NICOLAS
Hello,
is it possible to do HEVC hardware decoding using this sample code?
I tried an HEVC video sequence, but I got the error "NativeCodec has stopped".

Thank you in advance.
Best regards
Hello everyone,

I have a video source file which works, with read in native code (c++).
Today, i use the camera/basic (remastered) sample to show it.

In fact, instead of show in final buffer the camera output i write on it my frame that was out from my acquisitions reader for my video source.

However, the problem is that is too long, it is too slow.. And i can't stay with it. I ask you today to know if you have any answer of my request, if you have any idea's ? or any others project (sample) which can works well ? 

Required for it : 

- I need a buffer to put my frame data on it.


EDIT:

https://github.com/ochornenko/Camera2GLPreview This open source project could be good, instead of show the output of your camera you "memcpy" your frame on it.

Thank you too guys, and have a good day.
```java
apply plugin: 'com.android.library'

android {

    compileSdkVersion 28

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        externalNativeBuild {
            cmake {
                abiFilters 'armeabi-v7a', 'x86'
                cppFlags "-frtti -fexceptions -D__ANDROID__ -std=c++11"
                cFlags "-D__ANDROID__ -DAL_ALEXT_PROTOTYPES -DANDROID"
            }
        }

        //非 app module里面就需要
        ndk {
            moduleName "ffmpeg"
            ldLibs "log"
            abiFilters 'armeabi-v7a', 'x86'

        }
    }

    buildTypes {
        release {
            debuggable false
            jniDebuggable false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            debuggable true
            jniDebuggable true

        }
    }
    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }
    //非APP module里面就需要
    packagingOptions {
        pickFirst 'lib/armeabi-v7a/libzplay-lib.so'
        pickFirst 'lib/x86/libzplay-lib.so'
    }


}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
}

```
what should I do.....(=.=!!)
I'm using android studio 3.2 to build osg libs, my  build.gradle as following:
```
apply plugin: 'com.android.application'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.example.renren.myapplication"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
                arguments '-DOSG_BUILD_PLATFORM_ANDROID=ON'
                '-DUSE_ANDROID_STUDIO=ON'
                '-DOSG_GL_DISPLAYLISTS_AVAILABLE=OFF '
                '-DOSG_GL_MATRICES_AVAILABLE=OFF '
                '-DOSG_GL_VERTEX_FUNCS_AVAILABLE=OFF '
                '-DOSG_GL_VERTEX_ARRAY_FUNCS_AVAILABLE=OFF '
                '-DOSG_GL_FIXED_FUNCTION_AVAILABLE=OFF'
                '-DOSG_CPP_EXCEPTIONS_AVAILABLE=OFF '
                '-DOSG_GL1_AVAILABLE=OFF '
                '-DOSG_GL2_AVAILABLE=OFF '
                '-DOSG_GL3_AVAILABLE=OFF '
                '-DOSG_GLES1_AVAILABLE=OFF '
                '-DOSG_GLES2_AVAILABLE=ON'
                '-DDYNAMIC_OPENTHREADS=OFF'
                '-DDYNAMIC_OPENSCENEGRAPH=OFF'
                cppFlags "-Wno-narrow"
                abiFilters "arm64-v8a","armeabi-v7a"
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    externalNativeBuild {
        cmake {
            path "../../osg-android-master/CMakeLists.txt"
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}
```

but when I build the project, nothing happens, the log like this:
`Executing tasks: [:app:assembleDebug]

:app:checkDebugClasspath UP-TO-DATE
:app:preBuild UP-TO-DATE
:app:preDebugBuild UP-TO-DATE
:app:compileDebugAidl NO-SOURCE
:app:compileDebugRenderscript UP-TO-DATE
:app:checkDebugManifest UP-TO-DATE
:app:generateDebugBuildConfig UP-TO-DATE
:app:prepareLintJar UP-TO-DATE
:app:mainApkListPersistenceDebug UP-TO-DATE
:app:generateDebugResValues UP-TO-DATE
:app:generateDebugResources UP-TO-DATE
:app:mergeDebugResources UP-TO-DATE
:app:createDebugCompatibleScreenManifests UP-TO-DATE
:app:processDebugManifest UP-TO-DATE
:app:splitsDiscoveryTaskDebug UP-TO-DATE
:app:processDebugResources UP-TO-DATE
:app:generateDebugSources UP-TO-DATE
:app:javaPreCompileDebug UP-TO-DATE
:app:compileDebugJavaWithJavac UP-TO-DATE
:app:generateJsonModelDebug UP-TO-DATE
**:app:externalNativeBuildDebug**
:app:compileDebugSources
:app:mergeDebugShaders UP-TO-DATE
:app:compileDebugShaders UP-TO-DATE
:app:generateDebugAssets UP-TO-DATE
:app:mergeDebugAssets UP-TO-DATE
:app:transformClassesWithDexBuilderForDebug UP-TO-DATE
:app:transformDexArchiveWithExternalLibsDexMergerForDebug UP-TO-DATE
:app:transformDexArchiveWithDexMergerForDebug UP-TO-DATE
:app:mergeDebugJniLibFolders UP-TO-DATE
:app:transformNativeLibsWithMergeJniLibsForDebug UP-TO-DATE
:app:transformNativeLibsWithStripDebugSymbolForDebug UP-TO-DATE
:app:checkDebugLibraries UP-TO-DATE
:app:processDebugJavaRes NO-SOURCE
:app:transformResourcesWithMergeJavaResForDebug UP-TO-DATE
:app:validateSigningDebug UP-TO-DATE
:app:packageDebug UP-TO-DATE
:app:assembleDebug

BUILD SUCCESSFUL in 1s
30 actionable tasks: 1 executed, 29 up-to-date
`
and in commen, there should the native building information below the **:app:externalNativeBuildDebug** block.
Is this a bug of android studio or is there something wrong with my configuration?
Hi,
I made measurements on nexus 4 on the audio-echo project from google ndk examples and I got the following result:

![image](https://user-images.githubusercontent.com/25776246/46602777-d8eedb80-caf9-11e8-81ca-3c4a6defada2.png)

The first line is the recommended parameter of the system(fast path). Could you explain the meaning of the fast path ?

Every time , I multiplied by whole multiples of 10 the buffer size.
My question is: How can I explain the differance of latency ? Why is there no corroletion of the latency ?

Thanks,
Alex
In the teapot sample, the FPS doesn't show.
![Uploading Screenshot_20180926-224723.jpg…]()






Opencv Matrice is composed with this method BGR. If you want to draw many red points you need to draw the third entry.

**SYSTEM:**

> Android 7.
> One Plus 6.

**PROJECT:**

> Camera/Basic

I have a huge project which works on other plateforme, i want to export it into Android, i use Camera/Basic Project (GoogleSamples) which works good except one thing but it's not the problem.

On my project i create a matrice like this (cv::Mat ....) and i play with it, i draw on the RED channel my points and i will copy Opencv Matrice data into a ANativeWindow_Buffer which is provide with ANativeWindow_Lock.

Before continue, i would say that these two buffers have same width same height else i will meet a lot crashed but not yet.

In fact, after opencv Mat modified i will make a memcpy on my window buffer :

```cpp

// buff->bits --> provide by ANativeWindow_Lock
// my_Mat.data ---> data which was changed and contain red points for example.
 cv::Size size_mat = my_Mat.size();
 memcpy(buff->bits, my_Mat.data , sizeof(uchar) * my_Mat.step * size_mat.height);
```

And i thought that Camera/Basic project algorithm to convert YUV ---> TO ---> RGB placed a pixel with a correct method but not same as Opencv.

_the convertion algorithm that i spoke can be read on Image_Reader.cpp on every PresentImage*_ 

When i draw my Mat data into ANativeWindow Buffer data, when i show it on my App, i have my drawing but with many different colors instead of only red points then i didn't understand why.

Then, i proven that the algorithm conversion filled theses three channels without same method as Opencv which is BGR (Blue Green Red)

### **My question is, how do you placed it  ?** 

RGB ? BGR ? RRR ? i don't know.
The first :  Blue Green or Red ?
Second : Blue Green or Red ? 
Third : Blue Green or Red ?

Thank you advance and see you soon here i hope.

Best Regards,
The sample doesn't seem to take into account the various build types (debug, release)
set(distribution_DIR ${CMAKE_SOURCE_DIR}/../../../../distribution)
That doesn't seem right to me.