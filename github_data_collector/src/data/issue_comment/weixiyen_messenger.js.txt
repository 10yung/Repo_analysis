Hi,
Great work here, very nice lib!
Question I have now is: any plan to have some kind of broadcast from the server to all clients ?
Thanks for your response,
Joel
What license is this available under?  I can't see any specific license anywhere.  Might I suggest MIT or Unlicense; MIT is by far the most common on npm.
For many users of this library the presence of the copyright and license information would be very helpful.
Why are there no events catching errors and verifying if the sockets are connected properly?
I have no idea why my messages are not sent and theres no response from your library.

Probably adding promise support would be great...
I'm looking for an npm package that provides capabilities for Instant Messages between two users of my app. Can messenger.js do this?

Thanks in advance for the info.


``` sh
$ node 1.js 
undefined:1
GET / HTTP/1.1
^

SyntaxError: Unexpected token G
    at Object.parse (native)
    at Socket.<anonymous> (/home/ionicabizau/Documents/ipc/node_modules/messenger/lib/listener.js:37:26)
    at emitOne (events.js:77:13)
    at Socket.emit (events.js:169:7)
    at readableAddChunk (_stream_readable.js:146:16)
    at Socket.Readable.push (_stream_readable.js:110:10)
    at TCP.onread (net.js:523:20)
```

I just opened `localhost:8000` in the browser.

If I have sever listening on one process and then kill the process that has the client requesting I get the error ECONNRESET... Any ideas on how to stop this?

The full erorr is:

```
Uncaught exception:
Error: read ECONNRESET
  at exports.errnoException (util.js:846:11)
  at TCP.onread (net.js:540:26)
```


warning: Recursive process.nextTick detected. This will break in the next version of node. Please use setImmediate for recursive deferral.

I have a gobal part of my app that sends server side:

var msgr=require('../public_html/node_modules/messenger');
var msnd=msgr.createSpeaker(8000);
G.pool.on('share',function(isValidShare,isValidBlock,_){
    msnd.request('share',{'isValidShare':isValidShare,'isValidBlock':isValidBlock,'_':_});
    });

then I want to listen locally server side:

var messenger = require('../public_html/node_modules/messenger');
var mrecv=messenger.createListener(8000);
mrecv.on('share',function(_){
    share(_.isValidShare,_.isValidBlock,_._);
    });

the app crashes when the browser page is refreashed. I am not attempting to communicate client-to-server I am trying server-to-server communication.
