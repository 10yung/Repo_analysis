Hi,

I recently installed the standalone version but I get this error when I try to open any example CT data:
        LoadMatFileFcn: Could not load selected data

Thanks in advance for the help!

I create .mat file from dicom files. The .mat file load in the matrad gui but this error will appear for dose calculation.
How can i solve this error ?
 
![1](https://user-images.githubusercontent.com/57658660/70516522-62f66200-1b4c-11ea-8328-98f7f361fb5e.JPG)


- Added base data generation in MatRad_MCsquareBaseData, EnergySpread is determined using a fit to TOPAS data.
- Added possibility to give mcSquare maximal statistical uncertainty instead of nCasePerBixel.
- Fixed offset in HLUT. Now water is exactly at 0 HU.
- Added function to fit analytical base data to given dose cube.
fixes a dimensional error in the mex-interfaced sparse matrix reader that would crash Matlab if cube dimensions in x and y are not the same (thanks @pamede).

I changed the cpp-file and recompiled the interface for windows (btw: can someone compile this on win / linux?).

Since there is some reformatting going on as well in the changed file:
The bug was in line 186 (now 187).

Issue from line 90 in matRad_importDicomRTDose (dev).

`resultName = strcat(doseTypeHelper,'_',num2str(doseInstanceHelper),beamSuffix);`

I think the additional underscore mess up resultGUI in the end. You will find a 'resultGUI.physicalDose_' after import in your workspace. If you now try to recalc, you get an 'reference to a non existing field 'w_' ' error dialog.

![Unbenannt](https://user-images.githubusercontent.com/34025665/67839878-ed32bb80-faf4-11e9-8c99-c83416f231fe.png)

In my case this error occurs because of a missing InstanceNumber. 
To keep the functionality one could edit **'_',num2str(doseInstanceHelper)** like **beamSuffix** in line 84-86 and add this to line 51 or we should accordingly edit the string concatenation/creation of **resultGUI.w**.

_Originally posted by @mingersming in https://github.com/e0404/matRad/pull/368_
Merged 'dev' into 'photonKernelVal' with an additional update for photon dose calculation. The Update takes care of the extended kernel version (see photonPencilBeamKernelCalc).
Furthermore, implementation of the collimator rotation (for import process and recalculation) which takes account for possible collimator rotation of imported plans. Be aware, Collimator rotation is not yet implemented in GUI.

Dear @markbangert @eric11210 ,

this is my **updated** attempt at merging dev_VMAT with dev especially concerning the new optimization interface, but also dose calculation. 

What I did here, is merge dev_VMAT into a copy of the current dev branch. I think that this is better than what I did before (#376 ), because know you have a better acces to the changed files within this pull request (and see the changes i did within the merge commit).
Also @markangert should be able to close (#308 ).

It seems like it runs smoothly now with the old settings, i.e. fluence Opt & DAO opt without preconditioning. It doesn't work with VMAT yet (dose calculation works, but fluence optimization is weird and DAO/VMAT doesn't work)
But anyways, I hope you now have a better basis to continue with the merge.

Some comments:

-    integration worked quite well with VMAT Optimization Problem deriving from DAO. Yet I am not clear on how to do something similar with the daoVec2Aperture stuff. I am not familiar enough with the implementation, at the moment the changes are in the OptimizationProblemDAO class within the respective functions.
-    for me siochi leaf sequencing with fails with the matRad.m script, but only when sequencing is turned on and DAO (& of course VMAT) is turned of. Yet I like the idea of putting the number of leves into pln, so I changed all sequencers to have the pln struct in their call.
-    With preconditioning enabled, DAO gives worse results than directly after sequencing.
-    I don't like that the fluence optimization now needs the stf only because the tiny part of VMAT code. Can this be handled differently?
 -   Should we just write a matRad_VMAToptimization that itself calls fluence optimization and dao?
 -   Merging was at some points weird (git associated some wierd code parts with each other esp in generateStf and dosecalc). I hope I didn't mess something up there.

Let me know if you have questions. I will let you know if I forgot something in the list.

P.S.: Does someone of you have a very light test script for the VMAT?
issue with the previous idea of dose grid speed up was that our carbon ion spot could be smaller than the voxel. 
here we sample some percentage of voxels from each structure, but maintain a ring of voxels on the inside of each stucture for full resolution of edge effects, 

Here selecting samples from a full dij ( to be kept for use in final dose calculation ) 

ideas that can be further developed:
1. I can think of scalar mulitplication with mask vector for voxel selection.
2. also can define unique sampling fractions for each structure if needed ( eg. target (90%), OAR(50%), body( 10% ) ) 

Hi there,

after switching the (photon) machine recalc fails. The problem occurs because the bixel width in the propStf is set from 'field' to 'NaN' after changing the machine. The GUI still shows 'field'. There must be a mistake for the initial procedure.
For the first you can solve it with the command pln.propStf.bixelWidth = 'field' before pressing recalc.
These developments change the main and dicom GUI so it uses external Layout and Main-Functions. 
The layout function & mainfcn are obtained by exporting from MATLAB's guide editor. 

To minimize the changes to the used GUI file and maximize compability,  a custom function for altering the exported guide m file and automatically creating the external files is provided, called `matRad_fixExportedGUI`. This also allows to apply the same procedure on other branches. The external layout function may also be used to create the figure again, being editable with guide to be exported again, however this has not been thoroughly tested.

Nevertheless this should help us with merging GUI developments  in the future and also provide experimental GUIs to Octave users (version >=5.1). 