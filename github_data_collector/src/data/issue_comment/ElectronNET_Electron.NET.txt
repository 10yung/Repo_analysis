I am using Serilog for logging to a file. It works when I run the site on the web. But when I run it as Electron NET app it does not write any log. When I change the Sink from File to Console it spits the logs on the console screen. 
Is anyone aware of this issue?
ElectronNET version: 7.30.2
.NET Core 3.0.1 (produces the same issue with v3.1.0)

*(project that reproduces the behavior is attached)*

[BlazorOnReadyToShowIssue.zip](https://github.com/ElectronNET/Electron.NET/files/4021717/BlazorOnReadyToShowIssue.zip)

Create an ElectronNET based Blazor project with the standard steps
1. `mkdir BlazorOnReadyIssue`
2. `cd BlazorOnReadyIssue`
3. `dotnet new blazorserver --no-https`
4. `dotnet add package ElectronNET.API`
5. `dotnet new tool-manifest`
6. `dotnet tool install ElectronNET.CLI`
7. `dotnet electronize init`
8. Set up `Program.cs`:
```csharp
// ...
public static IHostBuilder CreateHostBuilder(string[] args) =>
    Host.CreateDefaultBuilder(args)
        .ConfigureWebHostDefaults(webBuilder =>
        {
             webBuilder
                 .UseStartup<Startup>()
                 .UseElectron(args);  // --- Added this
        });
// ...
```
9.  Set up `Startup.cs`:

```csharp
// --- At the end of Configure
// ...
Task.Run(async () =>
{
    var browserWindow = await Electron.WindowManager.CreateWindowAsync(
        new BrowserWindowOptions
        {
            Title = "OnReadyToShow",
            Width = 1152,
            Height = 864,
            Show = false // --- When set to true, project works properly
        });
    browserWindow.OnReadyToShow += () => browserWindow.Show();
});
```

10. Run the project (either with Ctrl+F5 or `electronize start`)

**Expected behavior**: The Electron Shell window is displayed with the Blazor App.

**Issue**: The Electron Shell window does not display.

![VsDebugConsole_mpnXKwDexe](https://user-images.githubusercontent.com/4783390/71763338-33344300-2edb-11ea-8321-f3624ee3758f.png)
![Taskmgr_5k2ICKnU0m](https://user-images.githubusercontent.com/4783390/71763340-3deed800-2edb-11ea-800b-ef9888b8463c.png)

Whenever I change the `Show` property of `BrowserWindopOptions` to `true`, the project works fine, but, of course, for a few seconds an empty page is displayed according to the normal behavior.


NET.CORE

After the application starts, we go to another program. also we press the button.
Our program reads the key, but the focus in another program no longer sees this letter.. Even if you go to the notebook. The key is not fulfilled.

![изображение](https://user-images.githubusercontent.com/5789051/71197217-ccd3e180-2299-11ea-8dee-85a7dfac34f4.png)

<!-- Please search existing issues to avoid creating duplicates. -->

<!-- Which version of Electron.NET CLI and API are you using? -->
<!-- Please always try to use latest version before report. -->
* **Version**: 
I am using latest with .net core 3.1 
<!-- Which version of .NET Core and Node.js are you using (if applicable)? -->

<!-- What target are you building for? -->
* **Target**: 

<!-- Enter your issue details below this comment. -->
<!-- If you want, you can donate to increase issue priority (https://donorbox.org/electron-net) -->

Steps to Reproduce:
In my app i am using openid connection authentication. my issue is app every time use different port   my return url does not does not match. how can i use the fix url.
I noticed this on Mac. Whether I close or quit the desktop window, the HTTP service does not shut down.

Does the mechanism that I'm looking for exist and doesn't reliably function, or is it not there at all? Am I missing a part of configuration that relates? I don't believe that I have anything within my dotnet app that might be non-standard or in a way to preventing the backend console to die.

Thank you.
Hari
Hi,
I configured my splash screen in electron.manifest.json file like this in my .net core web application:

"splashscreen": {
    "imageFile": "/wwwroot/assets/img/about@2x.png"
  }

After running my application, splashscreen appears on the screen perfectly. But when I click on splashscreen image or anywhere on the screen, splash screen immediately disappears and my application stops. How can I turn this behavior off ?

Thank you.
Hello,
Is it possible to improve the time of starting application?
It takes about 5-10 seconds, when app was builded
Add print capability and also get printer list.
Hi everybody,

When I want to start simple Electron application I'm getting the following error:

```
Invoke electron.cmd - in dir: \...\obj\Host\node_modules\.bin
Unhandled exception. System.AggregateException: One or more errors occurred. (The directory name is invalid.)
 ---> System.ComponentModel.Win32Exception (267): The directory name is invalid.
   at System.Diagnostics.Process.StartWithCreateProcess(ProcessStartInfo startInfo)
   at System.Diagnostics.Process.Start()
   at ElectronNET.CLI.ProcessHelper.CmdExecute(String command, String workingDirectoryPath, Boolean output, Boolean waitForExit) in D:\Code\GitHub\Electron.NET\ElectronNET.CLI\ProcessHelper.cs:line 81
   at ElectronNET.CLI.Commands.StartElectronCommand.<ExecuteAsync>b__12_0() in D:\Code\GitHub\Electron.NET\ElectronNET.CLI\Commands\StartElectronCommand.cs:line 113
   at System.Threading.Tasks.Task`1.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj)
   at System.Threading.ExecutionContext.RunFromThreadPoolDispatchLoop(Thread threadPoolThread, ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.ExecutionContext.RunFromThreadPoolDispatchLoop(Thread threadPoolThread, ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
   --- End of inner exception stack trace ---
   at System.Threading.Tasks.Task.ThrowIfExceptional(Boolean includeTaskCanceledExceptions)
   at System.Threading.Tasks.Task`1.GetResultCore(Boolean waitCompletionNotification)
   at System.Threading.Tasks.Task`1.get_Result()
   at ElectronNET.CLI.Program.Main(String[] args) in D:\Code\GitHub\Electron.NET\ElectronNET.CLI\Program.cs:line 59
```
What would be a reason? Why the Electron pointing at location which does not exist like: D:\Code\GitHub\Electron.NET\ElectronNET.CLI\Commands\StartElectronCommand.cs
**Description:** Today I have decided to use electron.NET with blazor server, I have followed this [tutorial](https://maherjendoubi.io/blazor-electron/) and it worked fine.
Now when I started my app again to after some things I have added to my project and I got this issue in the console ``warn: Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware[3]
      Failed to determine the https port for redirect.`` I have decided to debug it IIS Express and I got no issues at all.
To try to fix I have tried to: 
* Remove things from the original project.
* Create a new project, follow the tutorial and without changing anything and adding any code to the project use ``electronize start``. 

* **Electron.NET Version:** Latest
* **.NET Core:** Latest
* **Node.js and npm Version:** Latest
* **Blazor Type:** Server

Steps to Reproduce:

1. Create new blazor server project.
2. Install and setup Electron.NET like in the tutorial.
3. Run ``electronize start``
