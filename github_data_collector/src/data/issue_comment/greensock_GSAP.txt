I'm using a wrapper around your library in Typescript. 
````
export const Tween = (target: {}, duration: number = 0, properties: gsap.TweenVars, settings?: gsap.TweenVars): gsap.core.Tween => {
  [...]    
  return gsap.to(target, vars);
}
````
When I export and generate declaration files for Typescript I get to following error:
> error TS4025: Exported variable 'Tween' has or is using private name 'gsap.core.Tween'.

Is it possible to export a `Tween` const from the types like you do with `TweenMax` and `TweenLite` etc in `gsap-core.d.ts`?

Something like:

`export class Tween extends gsap.core.Tween {}`
I'm using ``gsap.to`` on a custom input text field made in PixiJS and this object has a getter named ``length``. 

 ```
 public get length(): number {
    return this.field.length;
 }
```

Tweening this object results in a warning ``GSAP target [object Object] not found. https://greensock.com`` . 

Off course I can rename my getter, but maybe the detection used is not robust enough. 👍 
I'm working on a upgrade to V3 in a project and somehow I get random errors regarding the handling of promises.

![image](https://user-images.githubusercontent.com/884899/72572528-280de980-38c3-11ea-8834-82ca4c60275e.png)

I'm unable to pin why it's happening, since it's happing at multiple tween at random occurrences..

Maybe you can shed some light on it? 

Thanks! ❤️ 
On v3, when adding a **paused timeline to another timeline**, internally having the Timeline a value of `_ts = 0` will make its end to be `Infinity`:

![image](https://user-images.githubusercontent.com/702490/72226563-b49e6c00-3592-11ea-8e9d-0b00c6841e40.png)

That's because dividing by zero, which we all know is something bad.
Updated typings. delayedCall can take params of any type but is currently restricted to strings. Changed that so that the parameters are of type any.
Hello! Excellent library, thanks for the hard work! I know PR 319 exists, but I independently noticed the bug and I figured I'd offer up a more piecemeal fix for the `TimeLine.add` declaration if you're interested in it for a smaller patch release.

Here's an example that's not compiling for me FWIW.

```typescript
import gsap from 'gsap'; // Assuming 3.0.1

const t = gsap.timeline();
t.add(() => console.log('Hello world'));
```

Thanks again!
Linked with #318 

- Expose namespace GSAPStatic to public API
- Fix wrong type declaration of method add from class Timeline

There is maybe a more Typescript idiomatic way to do, but this way expose the entire namespace with a minimum of changes.