On some Ubuntu-based systems (Elementary OS) PPAs are disabled by default.
The package `software-properties-common` needs to be manually installed.
Anbox doesn't appear to load on first run - but shows in system monitor. Launches on second attempt - but the GUI only displays a border w/ an image of whatever was behind it at launch.

I have installed, rebooted, uninstalled & reinstalled. Can I install an apk and run it anway?

I'm trying to use Anbox to run Cricut Design Space for Android.

Computer Information:
    Manufacturer:  Unknown
    Model:  Unknown
    Form Factor: Desktop
    No Touch Input Detected

Processor Information:
    CPU Vendor:  AuthenticAMD
    CPU Brand:  AMD Ryzen 5 3600X 6-Core Processor             
    CPU Family:  0x17
    CPU Model:  0x71
    CPU Stepping:  0x0
    CPU Type:  0x0
    Speed:  3800 Mhz
    12 logical processors
    6 physical processors
    HyperThreading:  Supported
    FCMOV:  Supported
    SSE2:  Supported
    SSE3:  Supported
    SSSE3:  Supported
    SSE4a:  Supported
    SSE41:  Supported
    SSE42:  Supported
    AES:  Supported
    AVX:  Supported
    AVX2:  Unsupported
    AVX512F:  Unsupported
    AVX512PF:  Unsupported
    AVX512ER:  Unsupported
    AVX512CD:  Unsupported
    AVX512VNNI:  Unsupported
    SHA:  Unsupported
    CMPXCHG16B:  Supported
    LAHF/SAHF:  Supported
    PrefetchW:  Unsupported

Operating System Version:
    Ubuntu 19.10 (64 bit)
    Kernel Name:  Linux
    Kernel Version:  5.3.0-26-generic
    X Server Vendor:  The X.Org Foundation
    X Server Release:  12005000
    X Window Manager:  GNOME Shell
    Steam Runtime Version:  steam-runtime_0.20191210.1

Video Card:
    Driver:  NVIDIA Corporation GeForce RTX 2060 SUPER/PCIe/SSE2
    Driver Version:  4.6.0 NVIDIA 440.48.02
    OpenGL Version: 4.6
    Desktop Color Depth: 24 bits per pixel
    Monitor Refresh Rate: 143 Hz
    VendorID:  0x10de
    DeviceID:  0x1f47
    Revision Not Detected
    Number of Monitors:  2
    Number of Logical Video Cards:  1
    Primary Display Resolution:  2560 x 1440
    Desktop Resolution: 4480 x 1440
    Primary Display Size: 27.44" x 15.43" (31.46" diag)
                                            69.7cm x 39.2cm (79.9cm diag)
    Primary Bus: PCI Express 16x
    Primary VRAM: 8192 MB
    Supported MSAA Modes:  2x 4x 8x 16x 

Sound card:
    Audio device: Nvidia GPU 93 HDMI/DP

Memory:
    RAM:  32128 Mb

Miscellaneous:
    UI Language:  English
    LANG:  en_US.UTF-8
    Total Hard Disk Space Available:  937262 Mb
    Largest Free Hard Disk Block:  874291 Mb
    VR Headset: None detected

Runtime information tool temporarily disabled.
Hi,
on German Keyboard Layout it isn't possible to input characters like @,â‚¬,|, ... .
Does anyone know the solution.
Thanks.
1. Please check that no similar bug is already reported. Have a look on the list of open bugs at https://github.com/anbox/anbox/issues
There are a few, none with answers + apparently different problems
2. Make sure you are running the latest version of Anbox before reporting an issue. Update snap to latest: `snap refresh --devmode --edge anbox`
Done
3. Make sure you have debug logs enabled:
`sudo snap set anbox debug.enable=true`
Done
4. Reproduce the error while debug logs enabled.
[launch.cpp:214@operator()] Session manager failed to become ready
5. Run the anbox logs collection utility and attach the tar file.
`sudo /snap/bin/anbox.collect-bug-info `
Done
[anbox-system-diagnostics-2020-01-14.zip](https://github.com/anbox/anbox/files/4060719/anbox-system-diagnostics-2020-01-14.zip)

6. ** Please paste the result of `anbox system-info` below:**
<details>
<summary>anbox system-info output</summary>

```version: 4
snap-revision: 186
cpu:
  arch:  x86
  brand: Intel(R) Core(TM) i7-7700HQ CPU @ 2.80GHz
  features: 
    - aes
    - sse4_1
    - sse4_2
    - avx
    - avx2
os:
  name: Ubuntu
  version: 19.10 (Eoan Ermine)
  snap-based: true
kernel:
  version: Linux version 5.3.0-24-generic (buildd@lgw01-amd64-035) (gcc version 9.2.1 20191008 (Ubuntu 9.2.1-9ubuntu2)) #26-Ubuntu SMP Thu Nov 14 01:33:18 UTC 2019
  binder: true
  ashmem: true
graphics:
  egl:
    vendor: NVIDIA
    version: 1.5
    extensions:
      - EGL_EXT_buffer_age
      - EGL_EXT_client_sync
      - EGL_EXT_create_context_robustness
      - EGL_EXT_output_base
      - EGL_EXT_stream_acquire_mode
      - EGL_EXT_sync_reuse
      - EGL_IMG_context_priority
      - EGL_KHR_config_attribs
      - EGL_KHR_create_context_no_error
      - EGL_KHR_context_flush_control
      - EGL_KHR_create_context
      - EGL_KHR_display_reference
      - EGL_KHR_fence_sync
      - EGL_KHR_get_all_proc_addresses
      - EGL_KHR_partial_update
      - EGL_KHR_swap_buffers_with_damage
      - EGL_KHR_no_config_context
      - EGL_KHR_gl_colorspace
      - EGL_KHR_gl_renderbuffer_image
      - EGL_KHR_gl_texture_2D_image
      - EGL_KHR_gl_texture_3D_image
      - EGL_KHR_gl_texture_cubemap_image
      - EGL_KHR_image
      - EGL_KHR_image_base
      - EGL_KHR_image_pixmap
      - EGL_KHR_reusable_sync
      - EGL_KHR_stream
      - EGL_KHR_stream_attrib
      - EGL_KHR_stream_consumer_gltexture
      - EGL_KHR_stream_cross_process_fd
      - EGL_KHR_stream_fifo
      - EGL_KHR_stream_producer_eglsurface
      - EGL_KHR_surfaceless_context
      - EGL_KHR_wait_sync
      - EGL_NV_nvrm_fence_sync
      - EGL_NV_post_sub_buffer
      - EGL_NV_quadruple_buffer
      - EGL_NV_stream_cross_display
      - EGL_NV_stream_cross_object
      - EGL_NV_stream_cross_process
      - EGL_NV_stream_cross_system
      - EGL_NV_stream_dma
      - EGL_NV_stream_flush
      - EGL_NV_stream_metadata
      - EGL_NV_stream_remote
      - EGL_NV_stream_reset
      - EGL_NV_stream_socket
      - EGL_NV_stream_socket_inet
      - EGL_NV_stream_socket_unix
      - EGL_NV_stream_sync
      - EGL_NV_stream_fifo_next
      - EGL_NV_stream_fifo_synchronous
      - EGL_NV_stream_consumer_gltexture_yuv
      - EGL_NV_stream_attrib
      - EGL_NV_stream_origin
      - EGL_NV_system_time
      - EGL_NV_output_drm_flip_event
      - EGL_NV_triple_buffer
  gles2:
    vendor: NVIDIA Corporation
    vendor: OpenGL ES 3.2 NVIDIA 435.21
    extensions:
      - GL_EXT_base_instance
      - GL_EXT_blend_func_extended
      - GL_EXT_blend_minmax
      - GL_EXT_buffer_storage
      - GL_EXT_clear_texture
      - GL_EXT_clip_control
      - GL_EXT_clip_cull_distance
      - GL_EXT_color_buffer_float
      - GL_EXT_color_buffer_half_float
      - GL_EXT_conservative_depth
      - GL_EXT_copy_image
      - GL_EXT_depth_clamp
      - GL_EXT_debug_label
      - GL_EXT_discard_framebuffer
      - GL_EXT_disjoint_timer_query
      - GL_EXT_draw_buffers_indexed
      - GL_EXT_draw_elements_base_vertex
      - GL_EXT_EGL_image_array
      - GL_EXT_EGL_image_storage
      - GL_EXT_EGL_image_external_wrap_modes
      - GL_EXT_float_blend
      - GL_EXT_frag_depth
      - GL_EXT_geometry_point_size
      - GL_EXT_geometry_shader
      - GL_EXT_gpu_shader5
      - GL_EXT_map_buffer_range
      - GL_EXT_multi_draw_indirect
      - GL_EXT_multisample_compatibility
      - GL_EXT_multisampled_render_to_texture
      - GL_EXT_multisampled_render_to_texture2
      - GL_EXT_multiview_texture_multisample
      - GL_EXT_multiview_timer_query
      - GL_EXT_occlusion_query_boolean
      - GL_EXT_polygon_offset_clamp
      - GL_EXT_primitive_bounding_box
      - GL_EXT_render_snorm
      - GL_EXT_robustness
      - GL_EXT_separate_shader_objects
      - GL_EXT_shader_group_vote
      - GL_EXT_shader_implicit_conversions
      - GL_EXT_shader_integer_mix
      - GL_EXT_shader_io_blocks
      - GL_EXT_shader_non_constant_global_initializers
      - GL_EXT_shader_texture_lod
      - GL_EXT_shadow_samplers
      - GL_EXT_sparse_texture
      - GL_EXT_sRGB
      - GL_EXT_sRGB_write_control
      - GL_EXT_tessellation_point_size
      - GL_EXT_tessellation_shader
      - GL_EXT_texture_border_clamp
      - GL_EXT_texture_buffer
      - GL_EXT_texture_compression_bptc
      - GL_EXT_texture_compression_dxt1
      - GL_EXT_texture_compression_rgtc
      - GL_EXT_texture_compression_s3tc
      - GL_EXT_texture_cube_map_array
      - GL_EXT_texture_filter_anisotropic
      - GL_EXT_texture_format_BGRA8888
      - GL_EXT_texture_mirror_clamp_to_edge
      - GL_EXT_texture_norm16
      - GL_EXT_texture_rg
      - GL_EXT_texture_sRGB_R8
      - GL_EXT_texture_sRGB_decode
      - GL_EXT_texture_storage
      - GL_EXT_texture_view
      - GL_EXT_draw_transform_feedback
      - GL_EXT_unpack_subimage
      - GL_EXT_window_rectangles
      - GL_KHR_context_flush_control
      - GL_KHR_debug
      - GL_EXT_memory_object
      - GL_EXT_memory_object_fd
      - GL_KHR_parallel_shader_compile
      - GL_KHR_no_error
      - GL_KHR_robust_buffer_access_behavior
      - GL_KHR_robustness
      - GL_EXT_semaphore
      - GL_EXT_semaphore_fd
      - GL_KHR_shader_subgroup
      - GL_NV_bgr
      - GL_NV_bindless_texture
      - GL_NV_blend_equation_advanced
      - GL_NV_blend_equation_advanced_coherent
      - GL_NV_blend_minmax_factor
      - GL_NV_conditional_render
      - GL_NV_copy_buffer
      - GL_NV_copy_image
      - GL_NV_draw_buffers
      - GL_NV_draw_instanced
      - GL_NV_draw_texture
      - GL_NV_draw_vulkan_image
      - GL_NV_EGL_stream_consumer_external
      - GL_NV_explicit_attrib_location
      - GL_NV_fbo_color_attachments
      - GL_NV_framebuffer_blit
      - GL_NV_framebuffer_multisample
      - GL_NV_generate_mipmap_sRGB
      - GL_NV_instanced_arrays
      - GL_NV_internalformat_sample_query
      - GL_NV_gpu_shader5
      - GL_NV_image_formats
      - GL_NV_occlusion_query_samples
      - GL_NV_non_square_matrices
      - GL_NV_pack_subimage
      - GL_NV_packed_float
      - GL_NV_packed_float_linear
      - GL_NV_path_rendering
      - GL_NV_pixel_buffer_object
      - GL_NV_polygon_mode
      - GL_NV_read_buffer
      - GL_NV_read_depth
      - GL_NV_read_depth_stencil
      - GL_NV_read_stencil
      - GL_NV_shader_noperspective_interpolation
      - GL_NV_shader_subgroup_partitioned
      - GL_NV_shadow_samplers_array
      - GL_NV_shadow_samplers_cube
      - GL_NV_sRGB_formats
      - GL_NV_texture_array
      - GL_NV_texture_barrier
      - GL_NV_texture_border_clamp
      - GL_NV_texture_compression_latc
      - GL_NV_texture_compression_s3tc
      - GL_NV_texture_compression_s3tc_update
      - GL_NV_timer_query
      - GL_NV_viewport_array
      - GL_KHR_blend_equation_advanced
      - GL_KHR_blend_equation_advanced_coherent
      - GL_OES_compressed_ETC1_RGB8_texture
      - GL_EXT_compressed_ETC1_RGB8_sub_texture
      - GL_OES_depth24
      - GL_OES_depth32
      - GL_OES_depth_texture
      - GL_OES_depth_texture_cube_map
      - GL_OES_copy_image
      - GL_OES_draw_buffers_indexed
      - GL_OES_draw_elements_base_vertex
      - GL_OES_texture_border_clamp
      - GL_OES_tessellation_point_size
      - GL_OES_tessellation_shader
      - GL_OES_texture_buffer
      - GL_OES_geometry_point_size
      - GL_OES_geometry_shader
      - GL_OES_gpu_shader5
      - GL_OES_shader_io_blocks
      - GL_OES_texture_view
      - GL_OES_primitive_bounding_box
      - GL_OES_EGL_image
      - GL_OES_EGL_image_external
      - GL_OES_EGL_image_external_essl3
      - GL_OES_EGL_sync
      - GL_OES_element_index_uint
      - GL_OES_fbo_render_mipmap
      - GL_OES_get_program_binary
      - GL_OES_mapbuffer
      - GL_OES_packed_depth_stencil
      - GL_OES_rgb8_rgba8
      - GL_OES_sample_shading
      - GL_OES_sample_variables
      - GL_OES_shader_image_atomic
      - GL_OES_shader_multisample_interpolation
      - GL_OES_standard_derivatives
      - GL_OES_surfaceless_context
      - GL_OES_texture_cube_map_array
      - GL_OES_texture_npot
      - GL_OES_texture_float
      - GL_OES_texture_float_linear
      - GL_OES_texture_half_float
      - GL_OES_texture_half_float_linear
      - GL_OES_texture_stencil8
      - GL_OES_texture_storage_multisample_2d_array
      - GL_OES_vertex_array_object
      - GL_OES_vertex_half_float
      - GL_OES_viewport_array
      - GL_OVR_multiview
      - GL_OVR_multiview2
      - GL_OVR_multiview_multisampled_render_to_texture
      - GL_ANDROID_extension_pack_es31a


```
</details>

**Please describe your problem:**
I was using Anbox perfectly today morning, tried installing Lutris and then Anbox stopped working; I uninstalled Lutris and purged all its files, then did the same with Anbox, however, the problem persisted.
**What were you expecting?:**
A full reinstall solve my issue

**Additional info:**
I really don't want to cause much of a fuss, I'll keep trying to fix the issue here

1. Please check that no similar bug is already reported. Have a look on the list of open bugs at https://github.com/anbox/anbox/issues
2. Make sure you are running the latest version of Anbox before reporting an issue. Update snap to latest: `snap refresh --devmode --edge anbox`
3. Make sure you have debug logs enabled:
`sudo snap set anbox debug.enable=true`
4. Reproduce the error while debug logs enabled.
5. Run the anbox logs collection utility and attach the tar file.
`sudo /snap/bin/anbox.collect-bug-info `

6. ** Please paste the result of `anbox system-info` below:**
<details>
<summary>anbox system-info output</summary>

```
[please paste printout of `anbox system-info` here]
```
</details>

**Please describe your problem:**


**What were you expecting?:**


**Additional info:**


I have compiled and installed Anbox from Debian patched source. After installation, desktop files for apps weren't showing up inside the _Anbox_ category, so I changed source a bit and submitted a bug report with a patch in Debian Bug Tracker. Then The Maintainer told me to create a issue/pr with the patch here because it's an upstream bug. And I saw that the bug isn't fixed here too.
I am attaching the patch below.
[0080-desktop-launcher-included-in-Anbox-menu.patch.gz](https://github.com/anbox/anbox/files/4050916/0080-desktop-launcher-included-in-Anbox-menu.patch.gz)

<details>
<summary>anbox system-info output</summary>

```
version: 0.0~git20190124-1-Ubuntu
cpu:
  arch:  x86
  brand: Intel(R) Pentium(R) CPU G3250 @ 3.20GHz
  features: 
    - sse4_1
    - sse4_2
os:
  name: Linux Mint
  version: 19.3 (Tricia)
  snap-based: false
kernel:
  version: Linux version 4.15.0-74-generic (buildd@lcy01-amd64-022) (gcc version 7.4.0 (Ubuntu 7.4.0-1ubuntu1~18.04.1)) #84-Ubuntu SMP Thu Dec 19 08:06:28 UTC 2019
  binder: true
  ashmem: true
graphics:
  egl:
    vendor: Mesa Project
    version: 1.4
    extensions:
      - EGL_ANDROID_blob_cache
      - EGL_ANDROID_native_fence_sync
      - EGL_CHROMIUM_sync_control
      - EGL_EXT_buffer_age
      - EGL_EXT_create_context_robustness
      - EGL_EXT_image_dma_buf_import
      - EGL_EXT_image_dma_buf_import_modifiers
      - EGL_KHR_config_attribs
      - EGL_KHR_create_context
      - EGL_KHR_create_context_no_error
      - EGL_KHR_fence_sync
      - EGL_KHR_get_all_proc_addresses
      - EGL_KHR_gl_colorspace
      - EGL_KHR_gl_renderbuffer_image
      - EGL_KHR_gl_texture_2D_image
      - EGL_KHR_gl_texture_3D_image
      - EGL_KHR_gl_texture_cubemap_image
      - EGL_KHR_image
      - EGL_KHR_image_base
      - EGL_KHR_image_pixmap
      - EGL_KHR_no_config_context
      - EGL_KHR_reusable_sync
      - EGL_KHR_surfaceless_context
      - EGL_EXT_pixel_format_float
      - EGL_KHR_wait_sync
      - EGL_MESA_configless_context
      - EGL_MESA_drm_image
      - EGL_MESA_image_dma_buf_export
      - EGL_MESA_query_driver
      - EGL_NOK_texture_from_pixmap
      - EGL_WL_bind_wayland_display
  gles2:
    vendor: Intel Open Source Technology Center
    vendor: OpenGL ES 3.1 Mesa 19.0.8
    extensions:
      - GL_EXT_blend_minmax
      - GL_EXT_multi_draw_arrays
      - GL_EXT_texture_filter_anisotropic
      - GL_EXT_texture_compression_s3tc
      - GL_EXT_texture_compression_dxt1
      - GL_EXT_texture_compression_rgtc
      - GL_EXT_texture_format_BGRA8888
      - GL_OES_compressed_ETC1_RGB8_texture
      - GL_OES_depth24
      - GL_OES_element_index_uint
      - GL_OES_fbo_render_mipmap
      - GL_OES_mapbuffer
      - GL_OES_rgb8_rgba8
      - GL_OES_standard_derivatives
      - GL_OES_stencil8
      - GL_OES_texture_3D
      - GL_OES_texture_float
      - GL_OES_texture_float_linear
      - GL_OES_texture_half_float
      - GL_OES_texture_half_float_linear
      - GL_OES_texture_npot
      - GL_OES_vertex_half_float
      - GL_EXT_texture_sRGB_decode
      - GL_OES_EGL_image
      - GL_OES_depth_texture
      - GL_OES_packed_depth_stencil
      - GL_EXT_texture_type_2_10_10_10_REV
      - GL_OES_get_program_binary
      - GL_APPLE_texture_max_level
      - GL_EXT_discard_framebuffer
      - GL_EXT_read_format_bgra
      - GL_EXT_frag_depth
      - GL_NV_fbo_color_attachments
      - GL_OES_EGL_image_external
      - GL_OES_EGL_sync
      - GL_OES_vertex_array_object
      - GL_OES_viewport_array
      - GL_ANGLE_texture_compression_dxt3
      - GL_ANGLE_texture_compression_dxt5
      - GL_EXT_occlusion_query_boolean
      - GL_EXT_robustness
      - GL_EXT_texture_rg
      - GL_EXT_unpack_subimage
      - GL_NV_draw_buffers
      - GL_NV_read_buffer
      - GL_NV_read_depth
      - GL_NV_read_depth_stencil
      - GL_NV_read_stencil
      - GL_EXT_draw_buffers
      - GL_EXT_map_buffer_range
      - GL_KHR_debug
      - GL_KHR_robustness
      - GL_OES_depth_texture_cube_map
      - GL_OES_required_internalformat
      - GL_OES_surfaceless_context
      - GL_EXT_color_buffer_float
      - GL_EXT_sRGB_write_control
      - GL_EXT_separate_shader_objects
      - GL_EXT_shader_implicit_conversions
      - GL_EXT_shader_integer_mix
      - GL_EXT_tessellation_point_size
      - GL_EXT_tessellation_shader
      - GL_INTEL_performance_query
      - GL_EXT_base_instance
      - GL_EXT_compressed_ETC1_RGB8_sub_texture
      - GL_EXT_draw_buffers_indexed
      - GL_EXT_draw_elements_base_vertex
      - GL_EXT_gpu_shader5
      - GL_EXT_polygon_offset_clamp
      - GL_EXT_primitive_bounding_box
      - GL_EXT_render_snorm
      - GL_EXT_shader_io_blocks
      - GL_EXT_texture_border_clamp
      - GL_EXT_texture_buffer
      - GL_EXT_texture_cube_map_array
      - GL_EXT_texture_norm16
      - GL_KHR_blend_equation_advanced
      - GL_KHR_context_flush_control
      - GL_KHR_robust_buffer_access_behavior
      - GL_NV_image_formats
      - GL_OES_draw_buffers_indexed
      - GL_OES_draw_elements_base_vertex
      - GL_OES_gpu_shader5
      - GL_OES_primitive_bounding_box
      - GL_OES_sample_shading
      - GL_OES_sample_variables
      - GL_OES_shader_io_blocks
      - GL_OES_shader_multisample_interpolation
      - GL_OES_tessellation_point_size
      - GL_OES_tessellation_shader
      - GL_OES_texture_border_clamp
      - GL_OES_texture_buffer
      - GL_OES_texture_cube_map_array
      - GL_OES_texture_stencil8
      - GL_OES_texture_storage_multisample_2d_array
      - GL_EXT_blend_func_extended
      - GL_EXT_buffer_storage
      - GL_EXT_geometry_point_size
      - GL_EXT_geometry_shader
      - GL_EXT_shader_samples_identical
      - GL_EXT_texture_sRGB_R8
      - GL_KHR_no_error
      - GL_OES_EGL_image_external_essl3
      - GL_OES_geometry_point_size
      - GL_OES_geometry_shader
      - GL_OES_shader_image_atomic
      - GL_EXT_clip_cull_distance
      - GL_EXT_disjoint_timer_query
      - GL_MESA_shader_integer_functions
      - GL_EXT_texture_compression_bptc
      - GL_EXT_shader_framebuffer_fetch_non_coherent
      - GL_MESA_framebuffer_flip_y
```
</details>

**Please describe your problem:**
Desktop files for Android apps didn't show up in Anbox Category.

**What were you expecting?:**
I expected that the desktop launchers would be under the Anbox category.

**Additional info:**
[Bug Report](https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=948618)
The files showed up under Anbox Category after applying the patch.

the file 'data/desktop/anbox-android.menu' should be in 'CONFIGDIR/xdg/menus/applications-merged'
1. Please check that no similar bug is already reported. Have a look on the list of open bugs at https://github.com/anbox/anbox/issues
2. Make sure you are running the latest version of Anbox before reporting an issue. Update snap to latest: `snap refresh --devmode --edge anbox`
3. Make sure you have debug logs enabled:
`sudo snap set anbox debug.enable=true`
4. Reproduce the error while debug logs enabled.
5. Run the anbox logs collection utility and attach the tar file.
`sudo /snap/bin/anbox.collect-bug-info `

6. ** Please paste the result of `anbox system-info` below:**
<details>
<summary>anbox system-info output</summary>

```
[please paste printout of `anbox system-info` here]
version: 4
snap-revision: 186
cpu:
  arch:  x86
  brand: Intel(R) Core(TM) i5 CPU       M 520  @ 2.40GHz
  features: 
    - aes
os:
  name: Linux Mint
  version: 19.3 (Tricia)
  snap-based: true
kernel:
  version: Linux version 5.0.0-37-generic (buildd@lcy01-amd64-023) (gcc version 7.4.0 (Ubuntu 7.4.0-1ubuntu1~18.04.1)) #40~18.04.1-Ubuntu SMP Thu Nov 14 12:06:39 UTC 2019
  binder: true
  ashmem: true
graphics:
  egl:
    vendor: NVIDIA
    version: 1.4
    extensions:
      - EGL_NV_system_time
      - EGL_KHR_surfaceless_context
      - EGL_KHR_image
      - EGL_KHR_image_base
      - EGL_KHR_gl_texture_2D_image
      - EGL_KHR_gl_texture_cubemap_image
      - EGL_KHR_gl_renderbuffer_image
      - EGL_KHR_config_attribs
      - EGL_KHR_fence_sync
      - EGL_NV_sync
      - EGL_KHR_reusable_sync
      - EGL_KHR_create_context
      - EGL_EXT_create_context_robustness
      - EGL_KHR_stream
      - EGL_KHR_stream_fifo
      - EGL_KHR_stream_producer_eglsurface
      - EGL_KHR_stream_consumer_gltexture
      - EGL_NV_stream_sync
      - EGL_KHR_get_all_proc_addresses
      - EGL_IMG_context_priority
      - EGL_NV_post_sub_buffer
      - EGL_KHR_image_pixmap
      - EGL_EXT_buffer_age
  gles2:
    vendor: NVIDIA Corporation
    vendor: OpenGL ES 2.0 340.107
    extensions:
      - GL_EXT_blend_minmax
      - GL_EXT_color_buffer_half_float
      - GL_EXT_debug_label
      - GL_EXT_frag_depth
      - GL_EXT_map_buffer_range
      - GL_EXT_occlusion_query_boolean
      - GL_EXT_robustness
      - GL_EXT_separate_shader_objects
      - GL_EXT_shader_integer_mix
      - GL_EXT_shadow_samplers
      - GL_EXT_sRGB
      - GL_EXT_sRGB_write_control
      - GL_EXT_texture_compression_dxt1
      - GL_EXT_texture_compression_s3tc
      - GL_EXT_texture_filter_anisotropic
      - GL_EXT_texture_format_BGRA8888
      - GL_EXT_texture_rg
      - GL_EXT_texture_sRGB_decode
      - GL_EXT_texture_storage
      - GL_EXT_unpack_subimage
      - GL_KHR_debug
      - GL_NV_bgr
      - GL_NV_copy_buffer
      - GL_NV_copy_image
      - GL_NV_draw_buffers
      - GL_NV_draw_instanced
      - GL_NV_EGL_stream_consumer_external
      - GL_NV_explicit_attrib_location
      - GL_NV_fbo_color_attachments
      - GL_NV_framebuffer_blit
      - GL_NV_framebuffer_multisample
      - GL_NV_generate_mipmap_sRGB
      - GL_NV_instanced_arrays
      - GL_NV_occlusion_query_samples
      - GL_NV_non_square_matrices
      - GL_NV_pack_subimage
      - GL_NV_packed_float
      - GL_NV_packed_float_linear
      - GL_NV_pixel_buffer_object
      - GL_NV_read_buffer
      - GL_NV_read_depth
      - GL_NV_read_depth_stencil
      - GL_NV_read_stencil
      - GL_NV_shadow_samplers_array
      - GL_NV_shadow_samplers_cube
      - GL_NV_sRGB_formats
      - GL_NV_texture_array
      - GL_NV_texture_border_clamp
      - GL_NV_texture_compression_latc
      - GL_NV_texture_compression_s3tc
      - GL_NV_texture_compression_s3tc_update
      - GL_NV_timer_query
      - GL_OES_compressed_ETC1_RGB8_texture
      - GL_OES_depth24
      - GL_OES_depth32
      - GL_OES_depth_texture
      - GL_OES_depth_texture_cube_map
      - GL_OES_EGL_image
      - GL_OES_EGL_sync
      - GL_OES_element_index_uint
      - GL_OES_fbo_render_mipmap
      - GL_OES_get_program_binary
      - GL_OES_mapbuffer
      - GL_OES_packed_depth_stencil
      - GL_OES_rgb8_rgba8
      - GL_OES_standard_derivatives
      - GL_OES_surfaceless_context
      - GL_OES_texture_npot
      - GL_OES_texture_half_float
      - GL_OES_texture_half_float_linear
      - GL_OES_vertex_array_object
      - GL_OES_vertex_half_float

**Please describe your problem:**
Anbox launched with white ( sometimes black ) screen in 2-3 seconds at first and then disappeared ( crash i may say ). Also i've just finished installed anbox,restart and this happened to me.

**What were you expecting?:**
Want to use anbox properly, only need to bypass this problem.

**Additional info:**


just a quick question, while i wait for the download of anbox to get done... 
basically if this is not given i dont need to try further.

i wanna run osmand in anbox.
i need gps for that and also some way to have the largely sized maps folder mounted accessible to the app.
I have a usb to serial converting gps dongle, that delivers /dev/ttyUSB0, which can then again be hosted to some network address via gpsd.

Can apps inside get access to gps data of the host system? Is a shared folder for maps possible?

Thanks

1. Please check that no similar bug is already reported. Have a look on the list of open bugs at https://github.com/anbox/anbox/issues

Searched and found nothing.

2. Make sure you are running the latest version of Anbox before reporting an issue. Update snap to latest: `snap refresh --devmode --edge anbox`

Trying to build anbox package from source. Remaining questions don't apply, no Snap used.


**Please describe your problem:**
Building anbox package from source for Manjaro on aarch64. I had to disable warnings handled as errors, but now I'm stuck again, with an "undefined reference to 'main'" during Linking CXX executable intent_tests. I'm trying to determine where the issue lies.

I know aarch64/arm64 is not officially supported, I'm just hoping to see if this is possible, anbox is the only package I lack.


**What were you expecting?:**

Expected anbox package to compile.

**Additional info:**

Current output and errors when trying to compile:
`$ make V=1 debug.enable=true
[  7%] Built target process-cpp
[ 10%] Built target emugen
[ 12%] Built target OpenglCodecCommon
[ 15%] Built target GLESv2_dec
[ 17%] Built target renderControl_dec
[ 19%] Built target GLESv1_dec
[ 24%] Built target emugl_common
[ 26%] Built target OpenGLESDispatch
[ 27%] Built target xdg
[ 29%] Built target xdg_test
[ 30%] Built target backward
[ 31%] Built target backward_object
[ 36%] Built target cpu_features
[ 37%] Built target list_cpu_features
[ 40%] Built target anbox-protobuf
[ 89%] Built target anbox-core
[ 90%] Built target anbox
[ 90%] Linking CXX executable intent_tests
/usr/bin/ld: /usr/lib/gcc/aarch64-unknown-linux-gnu/9.2.0/../../../../lib/Scrt1.o: in function `_start':
init.c:(.text+0x18): undefined reference to `main'
/usr/bin/ld: init.c:(.text+0x1c): undefined reference to `main'
/usr/bin/ld: CMakeFiles/intent_tests.dir/intent_tests.cpp.o: in function `testing::internal::scoped_ptr<std::__cxx11::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > >::reset(std::__cxx11::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >*)':
/usr/include/gtest/internal/gtest-port.h:1215: undefined reference to `testing::internal::IsTrue(bool)'
/usr/bin/ld: CMakeFiles/intent_tests.dir/intent_tests.cpp.o: in function `testing::internal::scoped_ptr<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::reset(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)':
/usr/include/gtest/internal/gtest-port.h:1215: undefined reference to `testing::internal::IsTrue(bool)'
/usr/bin/ld: CMakeFiles/intent_tests.dir/intent_tests.cpp.o: in function `Intent_IsValid_Test::TestBody()':
/home/user/anbox/tests/anbox/android/intent_tests.cpp:26: undefined reference to `testing::internal::GetBoolAssertionFailureMessage[abi:cxx11](testing::AssertionResult const&, char const*, char const*, char const*)'
/usr/bin/ld: /home/user/anbox/tests/anbox/android/intent_tests.cpp:26: undefined reference to `testing::internal::AssertHelper::AssertHelper(testing::TestPartResult::Type, char const*, int, char const*)'
/usr/bin/ld: /home/user/anbox/tests/anbox/android/intent_tests.cpp:26: undefined reference to `testing::Message::Message()'
/usr/bin/ld: /home/user/anbox/tests/anbox/android/intent_tests.cpp:26: undefined reference to `testing::internal::AssertHelper::operator=(testing::Message const&) const'
/usr/bin/ld: CMakeFiles/intent_tests.dir/intent_tests.cpp.o: in function `testing::internal::scoped_ptr<std::__cxx11::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > >::reset(std::__cxx11::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >*)':
/usr/include/gtest/internal/gtest-port.h:1215: undefined reference to `testing::internal::IsTrue(bool)'
/usr/bin/ld: CMakeFiles/intent_tests.dir/intent_tests.cpp.o: in function `Intent_IsValid_Test::TestBody()':
/home/user/anbox/tests/anbox/android/intent_tests.cpp:26: undefined reference to `testing::internal::AssertHelper::~AssertHelper()'
/usr/bin/ld: CMakeFiles/intent_tests.dir/intent_tests.cpp.o: in function `testing::internal::scoped_ptr<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::reset(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)':
/usr/include/gtest/internal/gtest-port.h:1215: undefined reference to `testing::internal::IsTrue(bool)'
/usr/bin/ld: CMakeFiles/intent_tests.dir/intent_tests.cpp.o: in function `Intent_IsValid_Test::TestBody()':
/home/user/anbox/tests/anbox/android/intent_tests.cpp:24: undefined reference to `testing::internal::GetBoolAssertionFailureMessage[abi:cxx11](testing::AssertionResult const&, char const*, char const*, char const*)'
/usr/bin/ld: /home/user/anbox/tests/anbox/android/intent_tests.cpp:24: undefined reference to `testing::internal::AssertHelper::AssertHelper(testing::TestPartResult::Type, char const*, int, char const*)'
/usr/bin/ld: /home/user/anbox/tests/anbox/android/intent_tests.cpp:24: undefined reference to `testing::Message::Message()'
/usr/bin/ld: /home/user/anbox/tests/anbox/android/intent_tests.cpp:24: undefined reference to `testing::internal::AssertHelper::operator=(testing::Message const&) const'
/usr/bin/ld: CMakeFiles/intent_tests.dir/intent_tests.cpp.o: in function `testing::internal::scoped_ptr<std::__cxx11::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > >::reset(std::__cxx11::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >*)':
/usr/include/gtest/internal/gtest-port.h:1215: undefined reference to `testing::internal::IsTrue(bool)'
/usr/bin/ld: CMakeFiles/intent_tests.dir/intent_tests.cpp.o: in function `Intent_IsValid_Test::TestBody()':
/home/user/anbox/tests/anbox/android/intent_tests.cpp:24: undefined reference to `testing::internal::AssertHelper::~AssertHelper()'
/usr/bin/ld: CMakeFiles/intent_tests.dir/intent_tests.cpp.o: in function `testing::internal::scoped_ptr<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::reset(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)':
/usr/include/gtest/internal/gtest-port.h:1215: undefined reference to `testing::internal::IsTrue(bool)'
/usr/bin/ld: CMakeFiles/intent_tests.dir/intent_tests.cpp.o: in function `Intent_IsValid_Test::TestBody()':
/home/user/anbox/tests/anbox/android/intent_tests.cpp:30: undefined reference to `testing::internal::GetBoolAssertionFailureMessage[abi:cxx11](testing::AssertionResult const&, char const*, char const*, char const*)'
/usr/bin/ld: /home/user/anbox/tests/anbox/android/intent_tests.cpp:30: undefined reference to `testing::internal::AssertHelper::AssertHelper(testing::TestPartResult::Type, char const*, int, char const*)'
/usr/bin/ld: /home/user/anbox/tests/anbox/android/intent_tests.cpp:30: undefined reference to `testing::Message::Message()'
/usr/bin/ld: /home/user/anbox/tests/anbox/android/intent_tests.cpp:30: undefined reference to `testing::internal::AssertHelper::operator=(testing::Message const&) const'
/usr/bin/ld: CMakeFiles/intent_tests.dir/intent_tests.cpp.o: in function `testing::internal::scoped_ptr<std::__cxx11::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > >::reset(std::__cxx11::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >*)':
/usr/include/gtest/internal/gtest-port.h:1215: undefined reference to `testing::internal::IsTrue(bool)'
/usr/bin/ld: CMakeFiles/intent_tests.dir/intent_tests.cpp.o: in function `Intent_IsValid_Test::TestBody()':
/home/user/anbox/tests/anbox/android/intent_tests.cpp:30: undefined reference to `testing::internal::AssertHelper::~AssertHelper()'
/usr/bin/ld: CMakeFiles/intent_tests.dir/intent_tests.cpp.o: in function `testing::internal::scoped_ptr<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::reset(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)':
/usr/include/gtest/internal/gtest-port.h:1215: undefined reference to `testing::internal::IsTrue(bool)'
/usr/bin/ld: CMakeFiles/intent_tests.dir/intent_tests.cpp.o: in function `Intent_IsValid_Test::TestBody()':
/home/user/anbox/tests/anbox/android/intent_tests.cpp:28: undefined reference to `testing::internal::GetBoolAssertionFailureMessage[abi:cxx11](testing::AssertionResult const&, char const*, char const*, char const*)'
/usr/bin/ld: /home/user/anbox/tests/anbox/android/intent_tests.cpp:28: undefined reference to `testing::internal::AssertHelper::AssertHelper(testing::TestPartResult::Type, char const*, int, char const*)'
/usr/bin/ld: /home/user/anbox/tests/anbox/android/intent_tests.cpp:28: undefined reference to `testing::Message::Message()'
/usr/bin/ld: /home/user/anbox/tests/anbox/android/intent_tests.cpp:28: undefined reference to `testing::internal::AssertHelper::operator=(testing::Message const&) const'
/usr/bin/ld: CMakeFiles/intent_tests.dir/intent_tests.cpp.o: in function `testing::internal::scoped_ptr<std::__cxx11::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > >::reset(std::__cxx11::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >*)':
/usr/include/gtest/internal/gtest-port.h:1215: undefined reference to `testing::internal::IsTrue(bool)'
/usr/bin/ld: CMakeFiles/intent_tests.dir/intent_tests.cpp.o: in function `Intent_IsValid_Test::TestBody()':
/home/user/anbox/tests/anbox/android/intent_tests.cpp:28: undefined reference to `testing::internal::AssertHelper::~AssertHelper()'
/usr/bin/ld: CMakeFiles/intent_tests.dir/intent_tests.cpp.o: in function `testing::internal::scoped_ptr<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::reset(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)':
/usr/include/gtest/internal/gtest-port.h:1215: undefined reference to `testing::internal::IsTrue(bool)'
/usr/bin/ld: CMakeFiles/intent_tests.dir/intent_tests.cpp.o: in function `Intent_IsValid_Test::TestBody()':
/home/user/anbox/tests/anbox/android/intent_tests.cpp:28: undefined reference to `testing::internal::AssertHelper::~AssertHelper()'
/usr/bin/ld: /home/user/anbox/tests/anbox/android/intent_tests.cpp:26: undefined reference to `testing::internal::AssertHelper::~AssertHelper()'
/usr/bin/ld: /home/user/anbox/tests/anbox/android/intent_tests.cpp:24: undefined reference to `testing::internal::AssertHelper::~AssertHelper()'
/usr/bin/ld: /home/user/anbox/tests/anbox/android/intent_tests.cpp:30: undefined reference to `testing::internal::AssertHelper::~AssertHelper()'
/usr/bin/ld: CMakeFiles/intent_tests.dir/intent_tests.cpp.o: in function `Intent_IsValid_Test::~Intent_IsValid_Test()':
/home/user/anbox/tests/anbox/android/intent_tests.cpp:22: undefined reference to `testing::Test::~Test()'
/usr/bin/ld: CMakeFiles/intent_tests.dir/intent_tests.cpp.o: in function `Intent_IsValid_Test::~Intent_IsValid_Test()':
/home/user/anbox/tests/anbox/android/intent_tests.cpp:22: undefined reference to `testing::Test::~Test()'
/usr/bin/ld: CMakeFiles/intent_tests.dir/intent_tests.cpp.o: in function `Intent_IsValid_Test::Intent_IsValid_Test()':
/home/user/anbox/tests/anbox/android/intent_tests.cpp:22: undefined reference to `testing::Test::Test()'
/usr/bin/ld: CMakeFiles/intent_tests.dir/intent_tests.cpp.o: in function `__static_initialization_and_destruction_0':
/home/user/anbox/tests/anbox/android/intent_tests.cpp:22: undefined reference to `testing::internal::GetTestTypeId()'
/usr/bin/ld: /home/user/anbox/tests/anbox/android/intent_tests.cpp:22: undefined reference to `testing::internal::MakeAndRegisterTestInfo(char const*, char const*, char const*, char const*, testing::internal::CodeLocation, void const*, void (*)(), void (*)(), testing::internal::TestFactoryBase*)'
/usr/bin/ld: CMakeFiles/intent_tests.dir/intent_tests.cpp.o:(.data.rel.ro._ZTI19Intent_IsValid_Test[_ZTI19Intent_IsValid_Test]+0x10): undefined reference to `typeinfo for testing::Test'
/usr/bin/ld: CMakeFiles/intent_tests.dir/intent_tests.cpp.o:(.data.rel.ro._ZTV19Intent_IsValid_Test[_ZTV19Intent_IsValid_Test]+0x20): undefined reference to `testing::Test::SetUp()'
/usr/bin/ld: CMakeFiles/intent_tests.dir/intent_tests.cpp.o:(.data.rel.ro._ZTV19Intent_IsValid_Test[_ZTV19Intent_IsValid_Test]+0x28): undefined reference to `testing::Test::TearDown()'
collect2: error: ld returned 1 exit status
make[2]: *** [tests/anbox/android/CMakeFiles/intent_tests.dir/build.make:110: tests/anbox/android/intent_tests] Error 1
make[1]: *** [CMakeFiles/Makefile2:1889: tests/anbox/android/CMakeFiles/intent_tests.dir/all] Error 2
make: *** [Makefile:141: all] Error 2`
1.run  command "anbox session-manager --single-window --window-size=480,800",
2.Settings can run for the first time ï¼Œ return to the launcher. The second time, only the white screen will be displayed