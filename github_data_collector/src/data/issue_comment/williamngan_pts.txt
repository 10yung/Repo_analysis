Ie. Render in a child `canvas` but bind events to parent `div`. 

This would allow for easily overlaying the canvas with interactive dom elements.
Hi,
I noticed that an object of the Circle class is implemented as a Group of two points, the center (x, y) and a pair of the radius (r, r). This works fine, but Group methods like `rotate2D`, `shear2D`, `moveTo` etc. don't do anymore what their name suggests (except scaling from the center). The same holds for the Curve and Line classes I think. This could lead to confusion when trying to for example shear a circle.

The best solution that I can think of is to move those transformation methods to the Polygon class, since that's the context in which they do work as intended. Perhaps some methods that also work easily on circles like `moveTo` and `scale` could then be added to the Circle class.
Hello !

I'm using `Pts` version `0.8.9` with npm.
I'm trying to use the `Types` `PtsCanvasRenderingContext2D` as I want to clip an image under a `Curve.bspline`.
However even after reading the documentation, I don't quite understand how to use Types. I've noticed though that the `Types.js` file under my `node-modules` is empty, except the license comments.
Would you have more information about this ?

Thanks üëç
In the first example of the animation guide it is stated that every 1 beat the square's color changes, and every 2 beats the circle's color changes and the rotation completes once. But this is not what actually happens in the shown example, since every 1 beat the square's color stays the same, only the number inside the square changes, and every 2 beats the color of both the square and circle change and the rotation completes. The comments in the code do describe the correct behaviour.

So the text has to change a little bit to match the example code (or vice versa).
I have an error when adding tempo to the space like it is described in the guide :

```
 // Add tempo instance as a player to track animation
  space.add( tempo );
```
ERROR

`Argument of type 'Tempo' is not assignable to parameter of type 'IPlayer | AnimateCallbackFn'.
  Type 'Tempo' is not assignable to type 'AnimateCallbackFn'.
    Type 'Tempo' provides no match for the signature '(time?: number, frameTime?: number, currentSpace?: any): void'.`

Fixed by adding

`implement IPlayer` to Tempo Class and changing the animate property to public don't know if it's the right way to go but it works.
I was trying out multiple forms in HTML space, I had 1 form for drawing circles and 1 form for drawing text. This resulted in the text being placed in the circles (or the circles around the text depending on the order of operations) since both forms start counting with the same kind of domID from 0. So the first text and first circle have the same ID and hence get placed in the same HTML element, and thus also at the same location. This is a bug and not a feature, right?

Maybe something like a formID can be added such that forms don't interfere with each other.
For example
```
form.font(...)
form.text(...)
```
doesn't apply the font options to the text and something like
```
form._ctx.style['font-family'] = 'Arial' 
```
has to be used. I suppose this can be solved pretty easily by setting the context style accordingly every time `form.font()` gets called.

I also noticed that font-variant is not an option when setting a font, is this intentional since there are otherwise too many arguments, or forgotten by accident? Maybe in this case, passing an options object instead of multiple arguments would be a good idea since there are so many (optional) arguments and it can also be hard to remember the order in which they have to be supplied.

What do you think @williamngan? I'm happy to help with a pull request if you want.
Currently, once a style is applied to one element, it will get applied to all elements (as stored in a single `ctx.style` object). There's a reset function but it's not consistent with the default. 

We should also allow user to set their own default options.
- add https://cdnjs.com/libraries/pts link
- sound and other features callout
- mobile homepage should have links before the fold

Also update README.md
Very cool library! I'm having a blast playing with it and am really admiring the attention to detail and API UX.

I had one question about the `Utils.split` function. When called like this:

```js
Utils.split([1,2,3], 2, 1, true) // [[1,2],[2,3],[3]]
```

with loopback set to `true`, I would expect the last element of the returned array to be `[3, 1]`, NOT `[3]`. Is this an accurate expectation on my end? Or am I misunderstanding something?