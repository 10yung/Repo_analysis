

VB allows you to write:

```vb
    ''' <summary>
    ''' <see cref="Integer?"/>
    ''' </summary>
```

but emits 

```
<see cref="T:System.Int32"/>
```

for that.  

Note: C# warns in this case as something invalid.  If you want to reference a nullable type at the top level, you need to write it as `<see cref="Nullable{SomeTName}"/>`
Builds on #41072.
Extracted from #40746 and generalized to work with Visual Basic.

Baseline numbers (49a468ca83f5d61e8bcab9341398a86ccbd71690 + #41072):

```text
Found 24193 diagnostics in 97737ms (148431953600 bytes allocated)
Execution times (ms):
CSharpSimplifyTypeNamesDiagnosticAnalyzer:      1552142
  SimpleMemberAccessExpression: 917073ms to try simplifying 1383559 instances
  IdentifierName: 321246ms to try simplifying 2951512 instances
  GenericName: 127254ms to try simplifying 92323 instances
  QualifiedName: 60160ms to try simplifying 158084 instances
  QualifiedCref: 238ms to try simplifying 1245 instances
  AliasQualifiedName: 10ms to try simplifying 30 instances
VisualBasicSimplifyTypeNamesDiagnosticAnalyzer: 1528633
  SimpleMemberAccessExpression: 1098896ms to try simplifying 632418 instances
  IdentifierName: 272517ms to try simplifying 1197747 instances
  GenericName: 51408ms to try simplifying 32776 instances
  QualifiedName: 48384ms to try simplifying 62234 instances
```

Updated numbers (49a468ca83f5d61e8bcab9341398a86ccbd71690 + this pull request):

```text
Found 24202 diagnostics in 93467ms (141284021216 bytes allocated)
Execution times (ms):
CSharpSimplifyTypeNamesDiagnosticAnalyzer:      1601508
  SimpleMemberAccessExpression: 1237560ms to try simplifying 1383578 instances
  GenericName: 169917ms to try simplifying 92326 instances
  QualifiedName: 73563ms to try simplifying 158087 instances
  IdentifierName: 1724ms to try simplifying 10343 instances
  QualifiedCref: 340ms to try simplifying 1245 instances
  AliasQualifiedName: 10ms to try simplifying 30 instances
VisualBasicSimplifyTypeNamesDiagnosticAnalyzer: 1487597
  SimpleMemberAccessExpression: 1300676ms to try simplifying 632444 instances
  QualifiedName: 57909ms to try simplifying 62236 instances
  GenericName: 57496ms to try simplifying 32779 instances
  IdentifierName: 1739ms to try simplifying 4668 instances
```

üìù The increase in diagnostics is due to a bug in Simplify Type Names for the Visual Basic code `NameOf([Object])`. The apparent increase in analyzer execution time is noise caused by contested locks used for measuring the callbacks. The allocation numbers and end-to-end time improvements were consistent.

üìù In combination with #41072, **99.75%** of calls to `TrySimplify` were eliminated as unnecessary for `IdentifierNameSyntax`.

The current system just dumps too much code into a single location, leading to lots of confusino about the purpose of each method and causing clutter with lots of unrelated methods.
These identifiers are already simplified as part of nodes further up the tree.

Extracted from #40746.

Baseline numbers (49a468ca83f5d61e8bcab9341398a86ccbd71690):

```text
Found 24193 diagnostics in 102883ms (150147571248 bytes allocated)
Execution times (ms):
CSharpSimplifyTypeNamesDiagnosticAnalyzer:      2190940
  SimpleMemberAccessExpression: 1170342ms to try simplifying 1383556 instances
  IdentifierName: 605398ms to try simplifying 4466446 instances
  GenericName: 146827ms to try simplifying 92323 instances
  QualifiedName: 68286ms to try simplifying 158081 instances
  QualifiedCref: 434ms to try simplifying 1245 instances
  AliasQualifiedName: 10ms to try simplifying 30 instances
VisualBasicSimplifyTypeNamesDiagnosticAnalyzer: 1764312
  SimpleMemberAccessExpression: 1236160ms to try simplifying 632416 instances
  IdentifierName: 353337ms to try simplifying 1860769 instances
  GenericName: 64360ms to try simplifying 32776 instances
  QualifiedName: 55078ms to try simplifying 62234 instances
```

Updated numbers (49a468ca83f5d61e8bcab9341398a86ccbd71690 + this pull request):

```text
Found 24193 diagnostics in 97737ms (148431953600 bytes allocated)
Execution times (ms):
CSharpSimplifyTypeNamesDiagnosticAnalyzer:      1552142
  SimpleMemberAccessExpression: 917073ms to try simplifying 1383559 instances
  IdentifierName: 321246ms to try simplifying 2951512 instances
  GenericName: 127254ms to try simplifying 92323 instances
  QualifiedName: 60160ms to try simplifying 158084 instances
  QualifiedCref: 238ms to try simplifying 1245 instances
  AliasQualifiedName: 10ms to try simplifying 30 instances
VisualBasicSimplifyTypeNamesDiagnosticAnalyzer: 1528633
  SimpleMemberAccessExpression: 1098896ms to try simplifying 632418 instances
  IdentifierName: 272517ms to try simplifying 1197747 instances
  GenericName: 51408ms to try simplifying 32776 instances
  QualifiedName: 48384ms to try simplifying 62234 instances
```
Closes #40452

Thanks @cston for your help with this.
This found a bug (added tests and a simple fix in `CommandLineParser.EnumerateFiles`).
I also added a null check in `CommandLineParser` (line 428) which I could not protect or rationalize otherwise.
