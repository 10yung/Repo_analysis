Thx for this awesome plugin. 

I found a really mysterious bug. It works well with either tmux or gnu coreutils but not with both. Specifically,

1. 'Selecta' works well inside tmux if I comment out the following line from my .zshrc:
```export PATH="/usr/local/opt/coreutils/libexec/gnubin:$PATH"```
2. 'Selecta' works well outside tmux no matter if I comment out the above line or not.
3. 'Selecta' **does not work** if I use **both** tmux and gnu tools.
The error message is the following:
```stty: 'standard input': unable to perform all requested operations
Traceback (most recent call last):
        9: from /usr/local/bin/selecta:839:in `<main>'
        8: from /usr/local/bin/selecta:45:in `main'
        7: from /usr/local/bin/selecta:584:in `with_screen'
        6: from /usr/local/bin/selecta:801:in `with_tty'
        5: from /usr/local/bin/selecta:591:in `block in with_screen'
        4: from /usr/local/bin/selecta:613:in `restore_tty'
        3: from /usr/local/bin/selecta:821:in `stty'
        2: from /usr/local/bin/selecta:828:in `command'
        1: from /usr/local/bin/selecta:828:in `pipe'
/usr/local/bin/selecta:831:in `block in command': Command failed: "stty 6902:3:4b00:5cb:4:ff:ff:7f:17:15:12:0:3:1c:1a:19:11:13:16:f:1:0:14:0" (RuntimeError)
```
so yeah, I think it might be because of the incompatibilities between /bin/stty and gnu stty or else.

My environment:
- macOS High Sierra 10.13.4
- tmux 2.7
- brew coreutils 8.30
- zsh 5.6.2
 

I haven't dug into this too hard yet, I will probably try and get `strace` on it if nobody knows why this isn't working:

```
$ echo -e '1\n2\n3' | selecta
# ui appears; I select "2"
2

$ set -x RESULT (echo -e '1\n2\n3' | selecta)
# nothing happens; next prompt immediately shown

# just to show that this is how you normally set something from a subshell in fish:
$ set -x RESULT (echo -e '1\n2\n3')
$ echo $RESULT
1 2 3
```

I'm guessing it's failing to get /dev/tty from within the subshell for some reason?

I found this handy so I figured I'd share. Feel free to close if you don't want it :).

I've realized that for my two main coding use cases (`git add` and opening files in Vim), I almost always need to select more than one thing. For instance, I'll usually change prod code together with test code, and then want to add both to git:

```
> CM.java (2/78 choices)
src/main/java/com/github/rschmitt/collider/ClojureMap.java
src/test/java/com/github/rschmitt/collider/ClojureMapTest.java
```

This quickly gets annoying, since I'll end up typing the exact same query twice for no good reason. If I want to `git add` (or open), say, five files (which is hardly uncommon), this gets tedious enough that I'll switch to `git add -i`, `git add -p`, or copy-and-paste using the mouse, because invoking hs repeatedly is just too cumbersome.

I took the time to whip up a prototype of multi-select functionality in Heatseeker, and so far it really seems like it has legs. It looks like this:
![screen shot 2015-06-14 at 1 00 28 pm](https://cloud.githubusercontent.com/assets/3725049/8150213/7cebe8d4-1295-11e5-85a8-bdb8cf1cff42.png)
Thanks to Rust stabilization, you can now install Heatseeker using Homebrew to play with this feature:

```
brew install https://raw.githubusercontent.com/rschmitt/heatseeker/master/heatseeker.rb
```

The controls are:
- Control-T will toggle the currently highlighted choice and move the cursor down.
- Enter will select everything that has been selected, as well as the currently highlighted choice.
- Control-G will select everything that has been selected, but _not_ the current choice, unless it has been selected with Control-T.

To support multiselect, the `SelectaCommand` script can be modified as follows (note that I'm using this with `:tabe` rather than `:e`):

``` vim
function! SelectaCommand(choice_command, selecta_args, vim_command)
  try
    silent let selections = system(a:choice_command . " | hs " . a:selecta_args)
  catch /Vim:Interrupt/
    redraw!
    return
  endtry
  redraw!
  for selection in split(selections)
    exec a:vim_command . " " . selection
  endfor
endfunction
```

And the zshrc function `insert-selecta-path-in-command-line` only needs a one-line change:

``` shell
selected_path=$(find * -type f | hs | paste -sd' ' -) || return
```

If I run `bash -c 'cat $(ls | selecta)'` and `^C` out of the `selecta` prompt, then I get the following error:

```
/home/michaelpj/bin/selecta:782:in `block in command': Command failed: "stty 4500:5:bf:8a3b:3:1c:7f:15:4:0:1:ff:11:13:1a:ff:12:f:17:16:ff:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0\n" (RuntimeError)
        from /home/michaelpj/bin/selecta:779:in `pipe'
        from /home/michaelpj/bin/selecta:779:in `command'
        from /home/michaelpj/bin/selecta:772:in `stty'
        from /home/michaelpj/bin/selecta:565:in `restore_tty'
        from /home/michaelpj/bin/selecta:543:in `ensure in block in with_screen'
        from /home/michaelpj/bin/selecta:544:in `block in with_screen'
        from /home/michaelpj/bin/selecta:752:in `call'
        from /home/michaelpj/bin/selecta:752:in `with_tty'
        from /home/michaelpj/bin/selecta:536:in `with_screen'
        from /home/michaelpj/bin/selecta:44:in `main'
        from /home/michaelpj/bin/selecta:791:in `<main>'
```

If I try to run this in a `bash` shell directly, then I don't see the error, but my terminal becomes messed up: input stops appearing, but I can still enter commands.

I've tried with `--norc --noprofile --noediting --posix`, and that doesn't help. 

I also see the error when I run `zsh -c 'cat $(ls | selecta)'`, but have no problems running the command directly at a `zsh` prompt.

I _don't_ see this using `sh` on my system (which is `dash`).

I'm sure this is some weird terminal interaction, but I'm afraid I don't have any more leads than that! In general, it seems to only happen when `selecta` is running inside a command substitution.

I've made the scoring algorithm smarter about sequential matching characters and word boundaries (to improve results when querying for acronyms). It's merged to master, along with some other changes, in d874c99dd7f0f94225a95da06fc487b0fa5b9edc. The README contains a summary (search it for "algorithm").

I'd love to hear feedback from actual Selecta users, especially after you've used it on actual projects.

As far as I understand, selecta currently _requires_ a tty. However, it might also be useful to just have a sort of fuzzy-grep. 
In my case I have a script which yields a list of urls, and I want to get a list of urls (fuzzy) matching a string ordered by score.
