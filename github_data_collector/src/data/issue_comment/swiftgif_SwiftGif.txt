So in storyboard I have an imageView, did set its class as "GIFImageView".
When running app, the error in title is displayed.

Library installed as pod `pod 'SwiftGifOrigin', '~> 1.7.0'`

I also did a global search in the project Pods folder, and there are no results for a word "GIFImageView" - the class is not found in the library.

This is what I see:

![Screenshot 2019-12-30 at 17 37 28](https://user-images.githubusercontent.com/18443089/71588715-328e5c00-2b2b-11ea-950d-ead9181726de.png)

First of all, awesome extension!

I'm using SwiftGif to display animations along the UI, but with iOS 13 I found some of my animations are not displaying correctly on DarkMode, so I'd like to have *trait variations* as we have with `UIColor`:
```swift
static var customAccent: UIColor {
    if #available(iOS 13, *) {
        return UIColor { (traitCollection: UITraitCollection) -> UIColor in
            if traitCollection.userInterfaceStyle == .dark {
                return MaterialUI.orange300
            } else {
                return MaterialUI.orange600
            }
        }
    } else {
        return MaterialUI.orange600
    }
}
```

I can make something similar with UIImage [using this code](https://gist.github.com/timonus/8b4feb47eccb6dde47ca6320d8fc6b11#gistcomment-3004630) (below), but I cannot get it to work with the Gifs.
```swift 
extension UIImage {
    /// Creates a dynamic image that supports displaying a different image asset when dark mode is active.
    static func dynamicImageWith(
        light makeLight: @autoclosure () -> UIImage,
        dark makeDark: @autoclosure () -> UIImage
    ) -> UIImage {
        let image = UITraitCollection(userInterfaceStyle: .light).makeImage(makeLight())

        image.imageAsset?.register(makeDark(), with: UITraitCollection(userInterfaceStyle: .dark))

        return image
    }
}

extension UITraitCollection {
    /// Creates the provided image with traits from the receiver.
    func makeImage(_ makeImage: @autoclosure () -> UIImage) -> UIImage {
        var image: UIImage!
        performAsCurrent {
            image = makeImage()
        }
        return image
    }
}
```

Anyone have any idea on how to solve the problem?

The network request captures self strongly, so if the imageView gets deallocated the app crashes.
The library was working good for a while, and today for no reason it crashed while loading the Gif from assets.

The given error is : 
```
==319==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x0001625a04e0 at pc 0x000103eeb7ac bp 0x00016f8b0b10 sp 0x00016f8b0b08
READ of size 8 at 0x0001625a04e0 thread T1
    #0 0x103eeb7a8 in $sSo7UIImageC14SwiftGifOriginE20delayForImageAtIndex_6sourceSdSi_So16CGImageSourceRefaSgtFZ (/private/var/containers/Bundle/Application/28B9D6D0-2AE8-4362-A106-57DEE6F810F2/ecb.app/Frameworks/SwiftGifOrigin.framework/SwiftGifOrigin:arm64+0xf7a8)
    #1 0x103ee8a98 in $sSo7UIImageC14SwiftGifOriginE23animatedImageWithSourceyABSgSo07CGImageH3RefaFZ (/private/var/containers/Bundle/Application/28B9D6D0-2AE8-4362-A106-57DEE6F810F2/ecb.app/Frameworks/SwiftGifOrigin.framework/SwiftGifOrigin:arm64+0xca98)
    #2 0x103ee7b78 in $sSo7UIImageC14SwiftGifOriginE3gif4dataABSg10Foundation4DataV_tFZ (/private/var/containers/Bundle/Application/28B9D6D0-2AE8-4362-A106-57DEE6F810F2/ecb.app/Frameworks/SwiftGifOrigin.framework/SwiftGifOrigin:arm64+0xbb78)
    #3 0x103ee730c in $sSo7UIImageC14SwiftGifOriginE3gif5assetABSgSS_tFZ (/private/var/containers/Bundle/Application/28B9D6D0-2AE8-4362-A106-57DEE6F810F2/ecb.app/Frameworks/SwiftGifOrigin.framework/SwiftGifOrigin:arm64+0xb30c)
    #4 0x103ee6c44 in $sSo11UIImageViewC14SwiftGifOriginE04loadD05assetySS_tFyycfU_ (/private/var/containers/Bundle/Application/28B9D6D0-2AE8-4362-A106-57DEE6F810F2/ecb.app/Frameworks/SwiftGifOrigin.framework/SwiftGifOrigin:arm64+0xac44)
    #5 0x103ee5c5c in $sIeg_IeyB_TR (/private/var/containers/Bundle/Application/28B9D6D0-2AE8-4362-A106-57DEE6F810F2/ecb.app/Frameworks/SwiftGifOrigin.framework/SwiftGifOrigin:arm64+0x9c5c)
    #6 0x1010557c4 in __wrap_dispatch_async_block_invoke (/var/containers/Bundle/Application/28B9D6D0-2AE8-4362-A106-57DEE6F810F2/ecb.app/Frameworks/libclang_rt.asan_ios_dynamic.dylib:arm64+0x517c4)
    #7 0x10421f6ec in _dispatch_call_block_and_release (/usr/lib/system/introspection/libdispatch.dylib:arm64+0x36ec)
    #8 0x104220c70 in _dispatch_client_callout (/usr/lib/system/introspection/libdispatch.dylib:arm64+0x4c70)
    #9 0x104223ad0 in _dispatch_queue_override_invoke (/usr/lib/system/introspection/libdispatch.dylib:arm64+0x7ad0)
    #10 0x104231dc4 in _dispatch_root_queue_drain (/usr/lib/system/introspection/libdispatch.dylib:arm64+0x15dc4)
    #11 0x1042327a8 in _dispatch_worker_thread2 (/usr/lib/system/introspection/libdispatch.dylib:arm64+0x167a8)
    #12 0x1f6ba41b0 in _pthread_wqthread (/usr/lib/system/libsystem_pthread.dylib:arm64+0xc1b0)

0x0001625a04e1 is located 0 bytes to the right of 1-byte region [0x0001625a04e0,0x0001625a04e1)
allocated by thread T1 here:
    #0 0x101057160 in wrap_posix_memalign (/var/containers/Bundle/Application/28B9D6D0-2AE8-4362-A106-57DEE6F810F2/ecb.app/Frameworks/libclang_rt.asan_ios_dynamic.dylib:arm64+0x53160)
    #1 0x22487b87c in swift_slowAlloc (/usr/lib/swift/libswiftCore.dylib:arm64+0x28987c)
    #2 0x103eeb608 in $sSo7UIImageC14SwiftGifOriginE20delayForImageAtIndex_6sourceSdSi_So16CGImageSourceRefaSgtFZ (/private/var/containers/Bundle/Application/28B9D6D0-2AE8-4362-A106-57DEE6F810F2/ecb.app/Frameworks/SwiftGifOrigin.framework/SwiftGifOrigin:arm64+0xf608)
    #3 0x103ee8a98 in $sSo7UIImageC14SwiftGifOriginE23animatedImageWithSourceyABSgSo07CGImageH3RefaFZ (/private/var/containers/Bundle/Application/28B9D6D0-2AE8-4362-A106-57DEE6F810F2/ecb.app/Frameworks/SwiftGifOrigin.framework/SwiftGifOrigin:arm64+0xca98)
    #4 0x103ee7b78 in $sSo7UIImageC14SwiftGifOriginE3gif4dataABSg10Foundation4DataV_tFZ (/private/var/containers/Bundle/Application/28B9D6D0-2AE8-4362-A106-57DEE6F810F2/ecb.app/Frameworks/SwiftGifOrigin.framework/SwiftGifOrigin:arm64+0xbb78)
    #5 0x103ee730c in $sSo7UIImageC14SwiftGifOriginE3gif5assetABSgSS_tFZ (/private/var/containers/Bundle/Application/28B9D6D0-2AE8-4362-A106-57DEE6F810F2/ecb.app/Frameworks/SwiftGifOrigin.framework/SwiftGifOrigin:arm64+0xb30c)
    #6 0x103ee6c44 in $sSo11UIImageViewC14SwiftGifOriginE04loadD05assetySS_tFyycfU_ (/private/var/containers/Bundle/Application/28B9D6D0-2AE8-4362-A106-57DEE6F810F2/ecb.app/Frameworks/SwiftGifOrigin.framework/SwiftGifOrigin:arm64+0xac44)
    #7 0x103ee5c5c in $sIeg_IeyB_TR (/private/var/containers/Bundle/Application/28B9D6D0-2AE8-4362-A106-57DEE6F810F2/ecb.app/Frameworks/SwiftGifOrigin.framework/SwiftGifOrigin:arm64+0x9c5c)
    #8 0x1010557c4 in __wrap_dispatch_async_block_invoke (/var/containers/Bundle/Application/28B9D6D0-2AE8-4362-A106-57DEE6F810F2/ecb.app/Frameworks/libclang_rt.asan_ios_dynamic.dylib:arm64+0x517c4)
    #9 0x10421f6ec in _dispatch_call_block_and_release (/usr/lib/system/introspection/libdispatch.dylib:arm64+0x36ec)
    #10 0x104220c70 in _dispatch_client_callout (/usr/lib/system/introspection/libdispatch.dylib:arm64+0x4c70)
    #11 0x104223ad0 in _dispatch_queue_override_invoke (/usr/lib/system/introspection/libdispatch.dylib:arm64+0x7ad0)
    #12 0x104231dc4 in _dispatch_root_queue_drain (/usr/lib/system/introspection/libdispatch.dylib:arm64+0x15dc4)
    #13 0x1042327a8 in _dispatch_worker_thread2 (/usr/lib/system/introspection/libdispatch.dylib:arm64+0x167a8)
    #14 0x1f6ba41b0 in _pthread_wqthread (/usr/lib/system/libsystem_pthread.dylib:arm64+0xc1b0)

Thread T1 created by T0 here:
    <empty stack>
```

Thanks.
[#81 ](https://github.com/swiftgif/SwiftGif/issues/81#issue-437683715)



Hello! would be good you could add support for swift 5.0