**Describe the bug**
fails to install

**To Reproduce**
npm ci

**Expected behavior**
install

**Screenshots**
If applicable, add screenshots to help explain your problem.

**Desktop (please complete the following information):**
 - OS: Ubuntu 18.04.3 LTS
 - Browser chrome

[2020-01-06T06_49_50_644Z-debug.log](https://github.com/microsoft/VoTT/files/4024997/2020-01-06T06_49_50_644Z-debug.log)


**Describe the bug**
A clear and concise description of what the bug is.
Does not build on my mac

**To Reproduce**
Steps to reproduce the behavior:
1. Go to '...'
2. Click on '....'
3. Scroll down to '....'
4. See error
run npm ci
run npm run release
I get something along the lines of perl being 64 bit but a module not being that. And something along the lines of "Can't locate Mac/Memory.pm in @INC" but I deleted those in my solving frenzy. Here (https://github.com/electron-userland/electron-builder/issues/3990) I read that electron-build had to be upgraded to 21.2.0. It worked, it builds, but I have no idea if it still does on Windows or Linux. And most likely you could do with a newer version (let's say less exact than 21.2.0). Hope this helps.

**Expected behavior**
A clear and concise description of what you expected to happen.
An dmg is built

**Screenshots**
If applicable, add screenshots to help explain your problem.

**Desktop (please complete the following information):**
 - OS: [e.g. iOS] macOS
 - Browser [e.g. chrome, safari] All
 - Version [e.g. 22] Catalina

**Additional context**
Add any other context about the problem here.
Close me!
I have removed several images from the project image source folder, before they were even annotated, and yet VoTT seems to still expect them to be there, and so I am getting errors 'Unable to load asset'
How do I tell VoTT to forget about these missing images?

See screenshot here:
![image](https://user-images.githubusercontent.com/43221921/71493109-622b2480-280a-11ea-88c0-615acbe49a37.png)


**Desktop (please complete the following information):**
 - OS: [Windows 10]
 - Browser [Chrome]
 - Version [VoTT v 2.1.0]

Additionally, could this be causing issue #929 ?

**It's really an excellent tool for annotation I couldn't help praising.**

**Besides, I've got some ideas on making this tool more user-friendly.**

1. ~~Make the video playing speed controllable somehow so as not to ignore the labeled frame which is isolated and imperceptible/unperceived~~-- these frames also need specially highlighted on time progress bar, maybe yellow-versus-green contrasting is not clear enough-- ~~between raw frames at normal speed especially when back-checking.~~

2. The time progress bar seems coarse-grained on time display with only precision to second level. However I propose that millisecond is better. Even better, there could be an accurate frame counter somewhere on the time progress bar.

3. ~~The tag menu popup will be more convenient if floating near the bbox when finishing drawing.~~

4. The annotating cursor shape while drawing bbox is of arrow shape now, which will cover/obstruct/overlap quite a bit of regions especially of a minor bbox, interrupting the judgement of edge. Maybe a semitransparent cross shape (e.g., âž•) cursor is better.

**P.S. It's much more considerate to have yolov3 annotation type as an native option.**
How to convert COCOModel to JSON model?Steps needed?
**Desktop:**
 - OS: Ubuntu 18.04
 - Version: v2.1.0 (electron version)


**Describe the bug**
The `xml` in `Annotations folder` in brief:
```xml
<annotation verified="yes">
    <folder>Annotation</folder>
    <filename>20190102085831_6_030180.jpg</filename>
    <path>OCR-PascalVOC-export/Annotations/20190102085831_6_030180.jpg</path>
</annotation>
```
When exporting labels in Pascal VOC format, I hit an error in `<path>`. The path should be `OCR-PascalVOC-export/JPEGImages/*.jpg`

**Expected behavior**
Changing `OCR-PascalVOC-export/Annotations/*.jpg` into `OCR-PascalVOC-export/JPEGImages/*.jpg` or `OCR-PascalVOC-export/Annotations/*.xml`
**Is your feature request related to a problem? Please describe.**
I consider that tagged mark should be on just tagged visualize object.
But,mark of object removed all tag remain , is not changed to viewed.

**Describe the solution you'd like**
If visualize object is removed all tag,its mark should be changed to "viewed".

**Describe alternatives you've considered**
None.
**Additional context**
![vott_bug_censored](https://user-images.githubusercontent.com/52390154/69299261-7b611400-0c53-11ea-9855-ece7b33b777c.jpg)

**Describe the bug**
Getting, _Could not load the Visual C++ component "VCBuild.exe"_  on _npm ci_.

**To Reproduce**
Steps to reproduce the behavior:
1. Clone the repo.
2. Run "npm ci"
3. See error the error "Build Failed"
_MSBUILD : error MSB3428: Could not load the Visual C++ component "VCBuild.exe". To fix this, 1) install the .NET Framework 2.0 SDK, 2) install Microsoft Visual Studio 2005  
or 3) add the location of the component to the system path if it is installed elsewhere._

**Expected behavior**
Build Success.

**Desktop (please complete the following information):**
 - OS: [e.g. iOS] Windows 10
 - NPM: 6.12.0
 - Node: v12.13.0
**Describe the bug**
For images with width 640, the x coordinates of the bndbox in Pascal VOC annotaion file can be 0 and 640, which should only range from 0 to 639 or 1 to 640!

**Annotation example**
``` xml
<size>
        <width>640</width>
        <height>480</height>
        <depth>3</depth>
</size>

<bndbox>
        <xmin>0</xmin>
        <ymin>232.55614581592582</ymin>
        <xmax>13.322651161698396</xmax>
        <ymax>249.49733795329212</ymax>
</bndbox>

<bndbox>
        <xmin>618.6933730742735</xmin>
        <ymin>220.74866310160428</ymin>
        <xmax>640</xmax>
        <ymax>234.60962958514372</ymax>
</bndbox>
```

**Desktop:**
 - OS: Windows 10
 - Version 2.1.0

Japanese translation verified by @aykhara and other native Japanese speakers