Hi, 
overall this is just a maintenance pull request... some dependencies updated, modified the build.sbt to conform to the latest guidelines, fixed here and there some warnings and so on.
I compiled this build with openjdk 11, so a couple of classes were missing: I used the similar apache Pair class as replacement.
scaleToHeight keeping width untouched
scaleToWeight keeping height untouched
Method to print all channels of an image
print Alpha, Red, Green, Blue value for png Images
print Red, Green, Blue value for jpg Images

Hi
I need to use Scala 13 in my project.
Could you please support that version?
Hello! What is scrimage maintenance status? I see last release about 2 years ago, but there is some useful optimizations in AwtImage on the master branch.

We use it in production and want a long and happy life for the library. Can I help with something in scrimage development?

@sksamuel 
I've received following error. It happens rarely. This time it happened after 13 times calling same method in 30 minutes. This method gets image bytes and rotates it if necessary then returns it. Method body looks like this:
```
val img = Image(arrayBytes)
val rotatedImage = if (img.ratio > 1) {
        img.rotateRight
      } else {
        img
      }
// other operations (flipping) on image if necessary
// val thumbnailBytes = rotatedImg.bytes
Ok(thumbnailBytes).as("image/jpeg")
```

```
Uncaught error from thread [xx-server-akka.actor.default-dispatcher-51164]: no awt in java.library.path, shutting down JVM since 'akka.jvm-exit-on-fatal-error' is enabled for ActorSystem[xx-server]
java.lang.UnsatisfiedLinkError: no awt in java.library.path
at java.lang.ClassLoader.loadLibrary(ClassLoader.java:1867)
at java.lang.Runtime.loadLibrary0(Runtime.java:870)
at java.lang.System.loadLibrary(System.java:1122)
at java.awt.Toolkit$3.run(Toolkit.java:1640)
at java.awt.Toolkit$3.run(Toolkit.java:1638)
at java.security.AccessController.doPrivileged(Native Method)
at java.awt.Toolkit.loadLibraries(Toolkit.java:1637)
at java.awt.Toolkit.<clinit>(Toolkit.java:1674)
at sun.awt.AppContext$2.run(AppContext.java:277)
at sun.awt.AppContext$2.run(AppContext.java:266)
at java.security.AccessController.doPrivileged(Native Method)
at sun.awt.AppContext.initMainAppContext(AppContext.java:266)
at sun.awt.AppContext.access$400(AppContext.java:135)
at sun.awt.AppContext$3.run(AppContext.java:321)
at sun.awt.AppContext$3.run(AppContext.java:304)
at java.security.AccessController.doPrivileged(Native Method)
at sun.awt.AppContext.getAppContext(AppContext.java:303)
at javax.imageio.spi.IIORegistry.getDefaultInstance(IIORegistry.java:154)
at javax.imageio.ImageIO.<clinit>(ImageIO.java:66)
at com.sksamuel.scrimage.Image$.<init>(Image.scala:809)
at com.sksamuel.scrimage.Image$.<clinit>(Image.scala)
at controllers.xx.AppController.$anonfun$imgData$3(AppController.scala:232)
at scala.concurrent.Future.$anonfun$flatMap$1(Future.scala:303)
at scala.concurrent.impl.Promise.$anonfun$transformWith$1(Promise.scala:37)
at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:60)
at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55)
at akka.dispatch.BatchingExecutor$BlockableBatch.$anonfun$run$1(BatchingExecutor.scala:91)
at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:81)
at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:91)
at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:40)
at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(ForkJoinExecutorConfigurator.scala:44)
at akka.dispatch.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260)
at akka.dispatch.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339)
at akka.dispatch.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979)
at akka.dispatch.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107)
```
Error was thrown on this line:
```
// arrayByte is Array[Byte] type and contains JPEG image file bytes. JPG file size is 1.5MB
// Line 232
val img = Image(arrayByte)
```
Maybe this is because of memory issue. Same issue happened before and increased memory by adding following line to execution of jar file:
`-Dhttp.port=9000 -J-Xms1G -J-Xmx2G -J-server -J-XX:+ExitOnOutOfMemoryError`
At that time I was OutOfMemory error. Now I don't see this error on system log, but same application error `no awt in java.library.path`.
A - Take an image.
B - Modify its pixel colors (RGBA values)
C - Copy Image

The resulting copied image (C)  has pixel color values different than the original image (B).
Copy image works fine when you do not tamper with the pixel colors or if the modifications are nominal.
```scala
scala> com.sksamuel.scrimage.nio.ImageReader.fromPath(java.nio.file.Paths.get("/home/yuriypitomets/Downloads/po.gif"))
com.sksamuel.scrimage.ImageParseException: Unparsable image
  at com.sksamuel.scrimage.nio.ImageReader$.$anonfun$fromBytes$5(ImageReader.scala:40)
  at scala.Option.getOrElse(Option.scala:121)
  at com.sksamuel.scrimage.nio.ImageReader$.fromBytes(ImageReader.scala:40)
  at com.sksamuel.scrimage.nio.ImageReader$.fromStream(ImageReader.scala:30)
  at com.sksamuel.scrimage.nio.ImageReader$.$anonfun$fromPath$1(ImageReader.scala:24)
  at com.sksamuel.scrimage.Using.using(Using.scala:7)
  at com.sksamuel.scrimage.Using.using$(Using.scala:5)
  at com.sksamuel.scrimage.nio.ImageReader$.using(ImageReader.scala:14)
  at com.sksamuel.scrimage.nio.ImageReader$.fromPath(ImageReader.scala:23)
  ... 36 elided
```
![po](https://user-images.githubusercontent.com/2434691/49244053-8f46b100-f417-11e8-9a35-ab20a3e8af7d.gif)

We saw this [issue](https://github.com/sksamuel/scrimage/issues/109) and also this [fix](https://github.com/sksamuel/scrimage/commit/62f19e59034291afc85f96599b963930188f6c05), but however, we still notice that some images are not rotated properly. This is such an image: 

https://user-images.githubusercontent.com/3712071/45652493-c822eb00-baa2-11e8-9cea-fff0099a1837.jpg

We try checking the value of the `orientationTag` and there are 3 tag values: 

```
List(
    Tag(Orientation,274,8,Left side, bottom (Rotate 270 CW)),
    Tag(White Balance Fine Tune Value,274,0,0),
    Tag(Orientation,274,8,Left side, bottom (Rotate 270 CW))
)
```

Because of `Tag(White Balance Fine Tune Value,274,0,0)`, the code was not able to detect the orientation properly. 

From this image above, it seems that it is not enough to determine that `type == 274` is for rotations. Any thoughts on this @sksamuel ?
Currently, `Image.mapInPlace` is defined with a `protected[scrimage]` tag. This does not allow, with the current Filter trait, the ability to mutate the image in place and create user-defined Filters. It would be useful to expose this functionality to the user to allow for easy extension of filters. Another possible way of providing this functionality would be to change the signature of `Filter.apply` to `def apply(image: Image): Image` and the implementation of `Image.mapInPlace` to return `this` instead of `Unit`. 