Move definition of the deactivate function inside workon, so it is only defined when using a virtual environment. Then when deactivate is called, it removes itself from the session.
The docs use the stable branch, and it doesn't include certain features, which the latest version already provides (in my case the 'environment' plugin).
I believe the auto_activation philosophy is to only have the venv activated when you cd to the directory.
I saw that the venv would stick to you if you cd'd out of a project using the project plugin and the "workon" command

Made so thtat the project "workon" command tries to cd first and then set the venv if auto_activation didn't do it first.

Tried to respect case handling feel free to modify.
I've been using this on my machine, after getting inspired by `pipenv`, so I thought this could be a good addition to virtualfish.

Basically, the `vf new` command can automatically guess an appropriate virtualenv name using this function, and create the virtualenv without having to manually provide a dir name.

```fish
function __dir_hash
    echo (basename $PWD)-(echo $PWD | shasum  | cut -c -8)
end
```

For example:

```
$ __dir_hash
ampy-3fa85e2a
$ pwd
/home/dev/Projects/ampy
```


Thanks for this wonderful plugin!
Hi, first of all i would like to tank you for your work with this project!

I'm fairly new to fish and this project and have a problem with installation.
Following setup instructions ends up by "/usr/bin/python: No module named virtualfish" in Debian 9.

What's happening:

**aa@DEV ~> sudo pip install virtualfish**
```
Collecting virtualfish
  Downloading https://files.pythonhosted.org/packages/79/27/37bcb550a4b3bc2eecbb44d9d5f1016684e84d2c088643e1d953967d01e3/virtualfish-1.0.6-py2.py3-none-any.whl
Requirement already satisfied: virtualenv in /usr/local/lib/python3.5/dist-packages (from virtualfish) (16.0.0)
Installing collected packages: virtualfish
Successfully installed virtualfish-1.0.6
You are using pip version 18.1, however version 19.0.1 is available.
You should consider upgrading via the 'pip install --upgrade pip' command.
```
**aa@DEV ~> echo "eval (python -m virtualfish)" >> ~/.config/fish/config.fish**
**aa@DEV ~> fish**
```
/usr/bin/python: No module named virtualfish
aa@DEV ~>
```

{ Deleting appended string from config.fish }

**aa@DEV ~> echo "eval (python3 -m virtualfish)" >> ~/.config/fish/config.fish**
**aa@DEV ~> fish**
`aa@DEV ~>`
**aa@DEV ~> vf**
```
The directory /home/aa/.virtualenvs does not exist.
Would you like to create it?
Tip: To use a different directory, set the variable $VIRTUALFISH_HOME.
y/n> y
virtualfish 1.0.6

Usage: vf <command> [<args>]

Available commands:

    activate        Activate a virtualenv
    addpath         Adds a path to sys.path in this virtualenv
    all             Run a command in all virtualenvs sequentially
    cd              Change directory to this virtualenv
    cdpackages      Change to the site-packages directory of this virtualenv
    connect         Connect this virtualenv to the current directory
    deactivate      Deactivate this virtualenv
    globalpackages  Toggle global site packages
    help            Print VirtualFish usage information
    ls              List all of the available virtualenvs
    new             Create a new virtualenv
    rm              Delete a virtualenv
    tmp             Create a virtualenv that will be removed when deactivated

For full documentation, see: http://virtualfish.readthedocs.org/en/1.0.6/

aa@DEV ~> 
```

**aa@DEV ~> cat /etc/issue**
`Debian GNU/Linux 9 \n \l`

I find it strange that i used pip and not pip3 and installed it eventually for python3. I think it's somehow related to debian distribution, and as debian is mainstream distribution it probably would  be good to point newcomers somehow to solution. 

-- With great respect for your work!
When executing
```
vf new -h
vf new --help
vf new --version
```
new environments are created with name of the flag instead of displaying help/version information. 
vf takes the last argument and creates the virtualenv [(here)](https://github.com/adambrenecki/virtualfish/blob/master/virtualfish/virtual.fish#L133-L138). This is probably related to #16 

I'll try to send a PR in the future.
Using multiple `cd` calls means one cannot use `cd -` to return to the previous directory. (#95)

`vf globalpackages` isn't supposed to change directory, so it should use `pushd`/`popd` instead (#108)
Fixes #108 
Wrap the creation of the installdir (~/.config/fish/conf.d) in a try sentence in case you already have it in your system (ie. omf creates the conf.d directory). Also changed the the second parameter to 755 and deleted exists_ok. All this to make it compatible with python 2.X that can't parse "exists_ok".

Stock Python [`venv` module](https://docs.python.org/3/library/venv.html) has an `--upgrade` function that lets you upgrade virtualenvs created via that, but that doesn't seem to work with virtualfish created venvs. Having a similar mode for `vf` (e.g., `vf upgrade $venv`) would be great.