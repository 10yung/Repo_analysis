https://docs.cesanta.com/v7/dev

This link seems to be broken. It'd be nice to have that fixed, as I don't seem to find any other way of finding out how I could implement `require` or even `import`.

Thanks!
include <stdio.h>
#include "v7.h"

int main(void)
{
    struct v7* v7 = v7_create();
    v7_val_t a = v7_mk_array(v7);

    v7_array_push(v7, a, v7_mk_number(v7, 0));
    v7_array_push(v7, a, v7_mk_number(v7, 1));
    v7_array_push(v7, a, v7_mk_number(v7, 2));
    printf("%d\n", v7_array_length(v7, a));

    v7_array_del(v7, a, 0);
    printf("%d\n", v7_array_length(v7, a));

    v7_destroy(v7);
    return 0;
}

the output is:
3
3
if I change v7_array_del(v7, a, 0); to v7_array_del(v7, a, 2);
the output is:
3
2

it seems that only the last entry can be deleted
Some values can't be passed directly to a function.

I was trying to pass `true` as the first argument to a function, but it got turned into `undefined`. From what I've seen this happens with `false` and `null` as well.

Check the below example and its output (from running `./v7 file.js`), written in the comments:

```
'use strict'

function fn(a, b) { print("a: " + a + ", b: " + b) }

fn(3, 2) // a: 3, b: 2 
fn(true) // a: undefined, b: undefined 
fn(true, true) // a: true, b: undefined 
fn(true, "foo") // a: true, b: foo 
```

If instead you put the `true` value in a variable and pass it through that variable, everything works well.

```
print('-- from a variable')
var trueVar = true

fn(trueVar) // a: true, b: undefined 
fn(trueVar, trueVar) // a: true, b: true 
fn(trueVar, "foo") // a: true, b: foo 
```

Everything works if `true` is generated from any expression as well.

I compiled the latest master (as of today) of v7 with the following command:

`gcc -O0 -DV7_EXE -DV7_ENABLE_STACK_TRACKING -DV7_ENABLE_FILE v7.c -lm`

But even when keeping only `-DV7_EXE` I can still reproduce this issue.
could you give me one example about ajax?
Hello,
I was using American Fuzzy Lop (afl-fuzz) to fuzz input the v7 program. Is fixing the crashes from these input files something you're interested in? The input files can be found here: https://github.com/rwhitworth/v7-fuzz/tree/master/2015-05-09.

The files can be executed as `./v7 id_filename` to cause seg faults.

Let me know if I can provide any more information to help narrow down this issue.
Fixed errors in example code.

<!-- Reviewable:start -->
---
This change is [<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/cesanta/v7/581)
<!-- Reviewable:end -->

Fixed errors in example code.

<!-- Reviewable:start -->
---
This change is [<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/cesanta/v7/580)
<!-- Reviewable:end -->

I couldn't get the example shown in the docs to run properly (after fixing several syntax errors!), so I put together this simple test program:

```C
#include "v7.h"

static v7_val_t
    js_get_1024(struct v7* v7, v7_val_t this_obj, v7_val_t args)
{
    (void)this_obj;
    (void)args;
    return v7_mk_number(v7, 1024);
}

int
    main(void)
{
    struct v7*
        v7 = v7_create();
    v7_set_method(v7, v7_get_global(v7), "get_1024", &js_get_1024);
    v7_val_t
        result = 0;
    enum v7_err
        status = v7_exec(v7, "print('get_1024: ' + get_1024())", &result);
    if(status != V7_OK)
        fprintf(stderr, "error: %d\n", (int)status);
    else
        printf("result: %f\n", (float)v7_get_double(v7, result));
    v7_destroy(v7);
    return (int)status;
}

```

The output of the program is:

> get_1024: undefined 
> result: -nan

Program was compiled with GCC 6.2.1:

>gcc  -Wno-incompatible-pointer-types -lm -o test v7.c test.c 

Any ideas as to what's going on?
Can I pre-compile the javascript code via `v7_compile` and then directly load the byte code and execute? I haven't found any interface that could deal with the generate byte code.

please impl the getter/setter supports, we need it.
