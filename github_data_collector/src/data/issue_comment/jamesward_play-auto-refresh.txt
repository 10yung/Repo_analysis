I have `scalaVersion := "2.12.2"` and `sbt.version=0.13.17` and `addSbtPlugin("com.typesafe.play" % "sbt-plugin" % "2.6.17")`
I keep getting this error. Is this plugin supported for 2.6.x? Do I need to add a resolver in plugins.sbt?

```
[error] (*:update) sbt.ResolveException: unresolved dependency: com.jamesward#play-auto-refresh;0.0.16: not found
```
Is there a way to avoid Botnet Chrome on my machine ? 

There must be something ... could I connect to it without the Play dev tools ? maybe with the Firefox LiveReload Plugin ? 

Thanks

Is there a way to specify a different location for the basedirectory, im using Maven layout in my Play project so the directory structure is `/src/main/assets` `/src/main/public` `/src/main/scala` `/src/main/twirl`.

Plugin seems to be expecting all files to watch to be in standard `/app` structure.

Any advice?

It would be nice to get the description about setting it up in akka-http projects.

What do you think of the following idea:

Instead of fixing the port to `9001`, we could just use Play's current port and add `10000` to it. The browser extensions could do just the same, so communication between multiple browser windows and auto-refresh projects would work in parallel.

Hi James

I Would really love to get the reload feature to work with our new play (Activator based) project.

It complains in build.scala about the livereload setting:

Build.scala:20: no `: __' annotation allowed here
[error](such annotations are only allowed in arguments to *-parameters)
[error]     com.jamesward.play.BrowserNotifierPlugin.livereload: __,
[error]                                                        ^
[error] one error found
[error](compile:compile) Compilation failed
Project loading failed: (r)etry, (q)uit, (l)ast, or (i)gnore?

Configuration file is:

import com.ketalo.play.plugins.emberjs.EmberJsKeys
import sbt._

object ApplicationBuild extends Build with EmberJsKeys {

  val appName         = "???"
  val appVersion      = "0.1-SNAPSHOT"

  val appDependencies = Seq(
    "com.google.inject" % "guice" % "3.0",
    "javax.inject" % "javax.inject" % "1",
    "org.reactivemongo" %% "reactivemongo" % "0.10.0",
    "org.reactivemongo" %% "play2-reactivemongo" % "0.10.2",

```
"org.mockito" % "mockito-core" % "1.9.5" % "test"
```

  )

  val main = play.Project(appName, appVersion, appDependencies).settings(
    com.jamesward.play.BrowserNotifierPlugin.livereload: _*,
    emberJsVersion := "1.5.1"
  )

}

Hope that you are able to help, that auto reload increases my productivity!

Kind regards
Steffen

@jamesward , @huntc - This will be the perfect companion for the sbt-web story.

Ideally, it could just support livereload, like https://github.com/guard/guard-livereload 

I just tried to integrate the auto-refresher in a bigger project with some submodules, and noticed that the Play app reloads after each request (reloading all the database plugins and restarting the default akka system, etc.) , even if no changes are made. Is this  behavior intended?

If not, any hints on what could cause this behavior?

The SBT BrowserNotifierPlugin settings are only included in the main project, and the Play app works fine when I exclude them (without unnecessary reloads).

If an application defines multiple assets mapping outside default `/public` directory, executing `play ~run` will complain about `playAssetsDirectories` ambiguous reference because it's imported twice in the same scope of `build.sbt`.

Error (I'm using activator but i think it'll also complain about the same error using play console):

```
$ ./activator ~run
[info] Loading project definition from /home/me/hello-play/project
[warn] Multiple resolvers having different access mechanism configured with same name 'typesafe-ivy-releases'. To avoid conflict, Remove duplicate project resolvers (`resolvers`) or rename publishing resolver (`publishTo`).
/home/me/hello-play/build.sbt:33: error: reference to playAssetsDirectories is ambiguous;
it is imported twice in the same scope by
import play.Project._
and import _root_.com.jamesward.play.BrowserNotifierPlugin._
playAssetsDirectories <+= baseDirectory / "showdash"
^
[error] Type error in expression
Project loading failed: (r)etry, (q)uit, (l)ast, or (i)gnore? i
[warn] Ignoring load failure: no project loaded.
[error] Continuous execution not configured.
```

My `build.sbt` file:

```
import play.Project._

name := """hello-play"""

version := "1.0-SNAPSHOT"

libraryDependencies ++= Seq(
  "org.webjars"   %%  "webjars-play"      % "2.2.0",
  "org.webjars"   %   "jquery"            % "1.10.2",
  "org.webjars"   %   "jquery-ui"         % "1.10.3",
  "org.webjars"   %   "font-awesome"      % "4.0.3",
  "org.webjars"   %   "bootstrap"         % "3.0.3",
  "be.objectify"  %%  "deadbolt-java"     % "2.2.1-RC2",
  "com.feth"      %%  "play-authenticate" % "0.5.2-SNAPSHOT",
  "net.vz.mongodb.jackson" %% "play-mongo-jackson-mapper" % "1.1.0")

resolvers += Resolver.url("Objectify Play Repository (release)", url("http://schaloner.github.com/releases/"))(Resolver.ivyStylePatterns)

resolvers += Resolver.url("Objectify Play Repository (snapshot)", url("http://schaloner.github.com/snapshots/"))(Resolver.ivyStylePatterns)

resolvers += Resolver.url("play-easymail (release)", url("http://joscha.github.com/play-easymail/repo/releases/"))(Resolver.ivyStylePatterns)

resolvers += Resolver.url("play-easymail (snapshot)", url("http://joscha.github.com/play-easymail/repo/snapshots/"))(Resolver.ivyStylePatterns)

resolvers += Resolver.url("play-authenticate (release)", url("http://joscha.github.com/play-authenticate/repo/releases/"))(Resolver.ivyStylePatterns)

resolvers += Resolver.url("play-authenticate (snapshot)", url("http://joscha.github.com/play-authenticate/repo/snapshots/"))(Resolver.ivyStylePatterns)

playJavaSettings

com.jamesward.play.BrowserNotifierPlugin.livereload

playAssetsDirectories <+= baseDirectory / "public2"

```
