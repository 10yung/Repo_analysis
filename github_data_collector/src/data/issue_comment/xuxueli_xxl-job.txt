报错信息：
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'scopedTarget.oauth2ClientContext': Scope 'request' is not active for the current thread; consider defining a scoped proxy for this bean if you intend to refer to it from a singleton; nested exception is java.lang.IllegalStateException: No thread-bound request found: Are you referring to request attributes outside of an actual web request, or processing a request outside of the originally receiving thread? If you are actually operating within a web request and still receive this message, your code is probably running outside of DispatcherServlet: In this case, use RequestContextListener or RequestContextFilter to expose the current request.
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:365)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1105)
	at com.xxl.job.core.executor.impl.XxlJobSpringExecutor.initJobHandlerMethodRepository(XxlJobSpringExecutor.java:82)
	at com.xxl.job.core.executor.impl.XxlJobSpringExecutor.afterPropertiesSet(XxlJobSpringExecutor.java:36)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)


源码是XxlJobSpringExecutor 类 initJobHandlerMethodRepository 方法里遍历applicationContext.getBeanDefinitionNames(); 然后无法getBean ,怎么解决
调度中心挂了，任务还会正常运行吗？正在运行的任务做什么处理？
比如说我在调度中心配置了两个使用相同jobhandler的任务，在同一时间点发送两个执行请求，该任务单个执行时间为10mine，那么这个时间点，任务在执行器中是处理了第一个10mine后再处理第二个，还是开两个线程同时执行这两个任务
Please answer some questions before submitting your issue. Thanks!

### Which version of XXL-JOB do you using?
2.1.2
### Expected behavior

### Actual behavior

### Steps to reproduce the behavior

### Other information
 XXL-JOB 2.2.0-SNAPSHOT 控制台配置的cron表达式，执行错误
配置的5分钟执行一次，但实际是每秒执行
如图，获取下5次执行时间
![image](https://user-images.githubusercontent.com/6244378/72585479-44dd0800-3929-11ea-9ed9-7f5cbd686889.png)

Please answer some questions before submitting your issue. Thanks!

### Which version of XXL-JOB do you using?
2.1.0
### Expected behavior
如题
### Actual behavior
实际上，我运行着项目，再运行测试会出现xxljob端口占用错误
### Steps to reproduce the behavior

### Other information
是否可以增加一个开关，可以关闭正常调度的调度日志，目前产生的日志文件个数实在是太多了。
线程池环境下，XxlJobLogger.log() 日志输出异常

### Which version of XXL-JOB do you using?
2.1.0
### Expected behavior
在线程池的环境下，job的日志应该输出到对应的日志文件里
### Actual behavior
job日志输出到了第一次创建线程job的日志文件里。
### Steps to reproduce the behavior
Spring boot环境下，使用Async注解，设置线程池参数如下：
```
ThreadPoolTaskExecutor threadPool = new ThreadPoolTaskExecutor();
threadPool.setCorePoolSize(2);
```
//省略其他配置
......

然后新建一个JobHandler，使用Async注解，里面使用XxlJobLogger.log()方法打印日志，运行三次后会发现第三次的日志会输出到第一次的日志文件里。
### Other information

### 已知解决办法
引入 TransmittableThreadLocal 依赖，
更改 XxlJobFileAppender 的contextHolder 为
```
public static final InheritableThreadLocal<String> contextHolder = new TransmittableThreadLocal<>();
```
更改@Async配置为 TtlExecutors.getTtlExecutor(threadPool)；
示例：
```
public Executor getAsyncExecutor() {
        ThreadPoolTaskExecutor threadPool = new ThreadPoolTaskExecutor();
        //省略其他配置
        return TtlExecutors.getTtlExecutor(threadPool);
    }
```

2020-01-16 16:02:29.842 ERROR 31229 --- [ryMonitorHelper] c.x.j.a.c.t.JobRegistryMonitorHelper     : >>>>>>>>>>> xxl-job, job registry monitor thread error:{}

org.springframework.dao.DeadlockLoserDataAccessException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLTransactionRollbackException: Deadlock found when trying to get lock; try restarting transaction
### The error may involve com.xxl.job.admin.dao.XxlJobRegistryDao.removeDead-Inline
### The error occurred while setting parameters
### SQL: DELETE FROM xxl_job_registry   WHERE update_time   <   DATE_ADD(NOW(),INTERVAL -? SECOND)
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLTransactionRollbackException: Deadlock found when trying to get lock; try restarting transaction
; SQL []; Deadlock found when trying to get lock; try restarting transaction; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLTransactionRollbackException: Deadlock found when trying to get lock; try restarting transaction
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:262) ~[spring-jdbc-4.3.24.RELEASE.jar!/:4.3.24.RELEASE]
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:73) ~[spring-jdbc-4.3.24.RELEASE.jar!/:4.3.24.RELEASE]

Please answer some questions before submitting your issue. Thanks!
2.1.2
XxlJobRemotingUtil.postBody object转json 用的BasicJson 
admin 中JobApiController解析json用的是JacksonUtil JacksonUtil 针对msg 返回长文本报错
