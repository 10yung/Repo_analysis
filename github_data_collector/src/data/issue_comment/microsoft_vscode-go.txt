**Is your feature request related to a problem? Please describe.**
before switch to go module, I use vendor to keep my dependencies, and `go to definition` jump to vendor file if exist, this very convenient, I can check all files in that refered pkg to figure out more interesting thing.
 
but things not good when I switch to go modles, `go to definition` always jumpt  `xx/pkg/mod`, even a vendor exist in my project.

**Describe the solution you'd like**
I think It's a good idea to refer vendor first, if vendor not exist, then refer to `xx/pkg/mod`


**Is your feature request related to a problem? Please describe.**
Feature request

**Describe the solution you'd like**
I recently released a new golang formatter that shortens long lines and aligns struct tags (on top of whatever is done by an underlying formatter like goimports): https://github.com/segmentio/golines. It would be nice to have it as an option in vscode since I think it could be useful for many. I'm happy to implement the change.

**Describe alternatives you've considered**
Using the existing formatters.


The version of GO I have installed is 0.12.0 and the version on VS code is 1.41.1 (user setup). I have the following error 

Failed to run "go env" to find GOPATH as the "go" binary cannot be found in either GOROOT(undefined) or PATH;

<Details>

Failed to run "go env" to find GOPATH as the "go" binary cannot be found in either GOROOT(undefined) or PATH(C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\iCLS\;C:\Program Files\Intel\Intel(R) Management Engine Components\iCLS\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\130\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\140\Tools\Binn\;C:\Program Files\Microsoft SQL Server\140\Tools\Binn\;C:\Program Files\Microsoft SQL Server\140\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Users\theb0\AppData\Local\Microsoft\WindowsApps;C:\Users\theb0\.dotnet\tools;C:\Users\theb0\AppData\Local\Microsoft\WindowsApps;C:\Users\theb0\AppData\Local\GitHubDesktop\bin)
The next version of the vscode-languageclient has been released.
The receiver type for a method is now considered. So, if there are >= 1 method names in the same file, then clicking "generate unit tests for function" creates test functions only for the selected method.

funcName like "(*Point).Move" will results in "gotests -w -only ^PointMove$ calls.
Issue Type: <b>Bug</b>

Hi, I need to input string data to debug my golang program, but the Debug Console can not be input.

Extension version: 0.12.0
VS Code version: Code 1.41.1 (26076a4de974ead31f97692a0d32f90d735645c0, 2019-12-18T14:58:56.166Z)

### What version of Go, VS Code & VS Code Go extension are you using?

* go version go1.13.6 linux/amd64
* VSCode 1.41.1 (26076a4de974ead31f97692a0d32f90d735645c0, x64, WSL2, Ubuntu-18.04 image)
* go extension v0.12.0
* golangci-lint has version v1.22.2 built from (unknown, mod sum: "h1:iaihss3Tf6NvZVjun3lHimKSgofPV1+FqE/cbehoiRQ=") on (unknown)

### Share the Go related settings you have added/edited

```json
{
    "go.formatTool": "goimports",
    "go.gotoSymbol.includeGoroot": true,
    "go.gotoSymbol.includeImports": true,
    "go.lintOnSave": "workspace",
    "go.lintTool": "golangci-lint",
    "go.autocompleteUnimportedPackages": true,
    "go.coverOnSingleTest": true,
    "go.buildOnSave": "off",
    "go.vetOnSave": "off",
    "[go]": {
        "editor.snippetSuggestions": "none",
        "editor.formatOnSave": true,
        "editor.codeActionsOnSave": {
            "source.organizeImports": true
        },
    },
    "go.lintFlags": [
        "--fast"
    ]
}
```

### Describe the bug

When running golangci-lint as linter and some critical code error appeared (like missing parameter) - nothing shown in problems view. Yet golangci-lint prints error with file path and lineno, but not from the very beginning.

### Steps to reproduce the behavior:

Use that code:

```go
req, _ := http.NewRequest("GET", "https://microsoft.com")
```

As you can see there is clearly a problem - no third parameter which should implement ``io.Reader`` for reading request's body. Yet:

![изображение](https://user-images.githubusercontent.com/869402/72593473-de56ea80-3926-11ea-8f96-7927d5d3769a.png)

(No problems was found).

golangci-lint output about that problem:

```
% golangci-lint run
WARN [runner] Can't run linter unused: buildssa: analysis skipped: errors in package: [/home/pztrn/projects/go/src/HOSTNAME/GROUP/PROJECT/internal/cache/clustering.go:51:121: too few arguments in call to http.NewRequest]
WARN [runner] Can't run linter goanalysis_metalinter: bodyclose: failed prerequisites: buildssa@HOSTNAME/GROUP/PROJECT/internal/cache
ERRO Running error: bodyclose: failed prerequisites: buildssa@HOSTNAME/GROUP/PROJECT/internal/cache
```

Even if I add ``--fast`` to linter parameters it shows up an error which should be somehow shown:

```
WARN [runner] Can't run linter goanalysis_metalinter: unparam: failed prerequisites: buildssa@HOSTNAME/GROUP/PROJECT/internal/cache
ERRO Running error: unparam: failed prerequisites: buildssa@HOSTNAME/GROUP/PROJECT/internal/cache
```
When the cursor is inside a double quoted string in the editor and I expand the selection repeatedly using using smart select shortcut (Shift + Alt + Right Arrow), the selection does not stop when all the content inside the quotes  is selected, rather it jumps to select the whole line.

For example with the following valid go code:

`content := "some string here"`

if the cursor is anywhere inside the double quotes and I press Shift+Alt+Right Arrow twice, the selection 'jumps' and the whole line is selected. 

I would only expect the text inside the quotes to be selected _first_. This problem is specific to .go files as I **don't** have this problem with JavaScript files, the selection expands correctly.

Version information as below:
```
Version: 1.41.1
Commit: 26076a4de974ead31f97692a0d32f90d735645c0
Date: 2019-12-18T15:04:31.999Z
Electron: 6.1.5
Chrome: 76.0.3809.146
Node.js: 12.4.0
V8: 7.6.303.31-electron.0
OS: Linux x64 5.3.0-26-generic
```

The contents of my settings.json are:

```
{
    "breadcrumbs.enabled": false,
    "editor.folding": false,
    "editor.minimap.enabled": false,
    "editor.parameterHints.enabled": false,
    "editor.renderControlCharacters": true,
    "editor.renderWhitespace": "all",
    "editor.quickSuggestions": {
        "other": false,
        "comments": false,
        "strings": false
    },
    "explorer.confirmDelete": false,
    "explorer.confirmDragAndDrop": false,
    "files.autoSave": "afterDelay",
    "files.exclude": {
        "**/.bin": true,
        "**/.classpath": true,
        "**/.factorypath": true,
        "**/.gradle": true,
        "**/.project": true,
        "**/.settings": true,
        "**/.vscode": true,
        "**/bin": true,
        "**/build": true
    },
    "files.trimTrailingWhitespace": true,
    "go.gopath": "/home/XXX/go",
    "go.toolsEnvVars": {
        "GO111MODULE":"auto"
    },
    "go.useLanguageServer": true,
    "go.vetFlags": [
        "-composities",
        "false"
    ],
    "telemetry.enableTelemetry": false,
    "workbench.activityBar.visible": true,
    "workbench.editor.enablePreviewFromQuickOpen": false,
    "window.menuBarVisibility": "default",
    "window.title": "${dirty}${separator}${activeEditorLong}${separator}${appName}",
    "window.zoomLevel": 0,
    "editor.suggestSelection": "first",
    "vsintellicode.modify.editor.suggestSelection": "automaticallyOverrodeDefaultValue",
}
```
### What version of Go, VS Code & VS Code Go extension are you using?
- Run `go version` to get version of Go
	- go1.13.4
- Run `code -v` or `code-insiders -v` to get version of VS Code or VS Code Insiders
	- 1.41.1
- Check your installed extensions to get the version of the VS Code Go extension 
	- 0.12.0
- Run `go env GOOS GOARCH` to get the operating system and processor arhcitecture details
	- darwin amd64


### Describe the bug
Install/Update tools does not list or update goimports when `go.formatTool` is set to goreturns.

This is an issue because goreturns internally uses goimports, so you should really have an up-to-date version of goimports. However, your version of goimports will never get updated to latest.

### Screenshots or recordings
![Screen Shot 2020-01-15 at 11 50 46 AM](https://user-images.githubusercontent.com/8562683/72466226-4ffb3100-378d-11ea-8566-05541604f707.png)




I ran ```go test``` several times with the same result (although I set ```go test -count=1```), eventually removing everything from test and still running the cached content. I had to run ```go test``` from the terminal to get what I wanted to run.

There are other ways to disable caching entirely?