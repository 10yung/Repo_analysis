
Further discussion from #2266

## Expected Behavior
Remove the extra complexity.

## Current Behavior
Issue kinds can be weighted to influence the build failure threshold higher than other issues.
Do we want to maintain this feature?
The only usecase I see is to have specific rules printed on the console as a reminder to remove them someday.

## Context
#2266
<!--- Providing context helps us come up with a solution that is most useful in the real world -->


## Expected Behavior
`--build-upon-default-config` should be `true` by default.
new flag `--all-rules` which activates all rules
remove `--fail-fast`
introduce new flag `--max-issues` to quickly manipulate the number of allowed issues without having a config file.

## Current Behavior
`--fail-fast` does three things: `--build-upon-default-config` + `maxIssues=0` + activates all rules

## Context
Align behavior wiht tools like PMD and ESLint
It appears that the validation is based off of the default config in the repo.

The default config contains formatting so any formatting rules placed in a config will not be reported as incorrect config even if you do not have the detekt-formatting plugin enabled.

Similarly to this since the default config contains formatting rules but they don't ship with the detekt gradle plugin it is confusing to not have them enabled or reporting.
## Expected Behavior
If I run the cli and I have issues at the end of the output I get the numer of issues onces

## Observed Behavior
I'm getting this output twice:

> Build failed with 3178 weighted issues (threshold defined was 10).
> io.gitlab.arturbosch.detekt.cli.BuildFailure: Build failed with 3178 weighted issues (threshold defined was 10).

## Steps to Reproduce
Run the cli on a project that have issues

## Context
I found this issue testing #2258 and then I saw that it was in master too.

## Your Environment
* Version of detekt used: master (1.4.0)
On the homepage there should be a separate chapter regarding rules that use type and symbol solving and how to configure them in Gradle. The existing section are missing some essential information.

- [ ] How to configure and use these rules on Android (code underneath this todo list)
- [ ] Run the `detekt main` -> see https://github.com/arturbosch/detekt/issues/2038#issuecomment-574347664
- [ ] Mention that this is still experimental and has some peculiarities

From the Slack chat:

```kotlin
dependencies {
    detekt(project(":detekt-cli"))
    detektPlugins(project(":detekt-formatting"))
}
val detektAll by tasks.registering(Detekt::class) {
    description = "Runs over whole code base without the starting overhead for each module."
    parallel = true
    buildUponDefaultConfig = true
    include("**/*.kt")
    exclude("**/resources/**")
    exclude("**/build/**")
    exclude("**/*.kts")
    // baseline.set(file("$rootDir/config/detekt/baseline.xml"))
    classpath.setFrom(project.configurations.getByName("detekt"))
    reports {
        xml.enabled = false
        html.enabled = false
        txt.enabled = false
    }
}
```
Adding clli argument and gradle plugin functionality to enable verbose logging.

On our project we only want to log to console if an error occurs for cleaner logging,

Swapped default logic to not output unless errors present or verbose flag enabled

## Expected Behavior
Allow to write plugins which can mapilate detekt's `Detektion` result.

```kotlin
interface ResultFilter {
    fun filter(result: Detektion): Detektion
}
```

## Current Behavior
The user can suppress findings via baseline file or suppress annotations.

## Context
#2224 
The bug you're experiencing might have already be reported!
Please search in the [issues](https://github.com/arturbosch/detekt/issues) before creating one.

## Expected Behavior
Should not flag these lines as a single line that's too long

## Observed Behavior
Getting an invalid line is too long error

## Steps to Reproduce
Code looks like this:

```
      if (view is MyScreen) {
            val pageTracker: PageTracker = view.Tracker
            val featureToggle = getFeatureToggle(pageType)
            fragmentManager?.let {
....
```

and it flags the "if view()" line as being too long and underlines the next few lines

## Context
Just running detekt on our app

## Your Environment
* Version of detekt used: 1.3.1 and also tried the latest 1.4.0
* Version of Gradle used (if applicable): 3.4.1
* Operating System and version: OSX
