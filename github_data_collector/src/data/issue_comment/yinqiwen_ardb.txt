The old timeout is 1ms, this cause ardb keep consuming CPU (about 10%), increase timeout to 1000ms solved this problem.
Since builds currently fail on newer g++ versions due to string format warnings, it'd be nice to be able to disable `-Werror` by including an additional `-Wno-error`. This could be done with `override CXXFLAGS += ...` and `make CXXFLAGS=-Wno-error`.
Run `make`, then 
```
util/status.cc: In static member function ‘static const char* rocksdb::Status::CopyState(const char*)’:
util/status.cc:28:15: error: ‘char* strncpy(char*, const char*, size_t)’ output truncated before terminating nul copying as many bytes from a string as its length [-Werror=stringop-truncation]
   std::strncpy(result, state, cch - 1);
   ~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
util/status.cc:19:18: note: length computed here
       std::strlen(state) + 1; // +1 for the null terminator
       ~~~~~~~~~~~^~~~~~~
cc1plus: all warnings being treated as errors
make[2]: *** [Makefile:1879: util/status.o] Error 1
make[2]: Leaving directory '/home/jc/ardb/deps/rocksdb-5.14.2'
make[1]: *** [Makefile:401: /home/jc/ardb/src/../deps/rocksdb-5.14.2/librocksdb.a] Error 2
make[1]: Leaving directory '/home/jc/ardb/src'
make: *** [Makefile:4: all] Error 2
```

```
gcc version 8.2.1 20180905 (Red Hat 8.2.1-3) (GCC)
```
The redis `sdiff` has the signature `sdiff key1 [key2...]` meaning only one key needs to be provided and keys that aren't present are considered empty sets. Ardb requires at least two keys to be provided or else it errors out with "incorrect number of arguments". Ardb does correctly treat absent keys as empty sets. 

Ref: https://redis.io/commands/sdiff
ardb release: 0.9.7
Hi,

RocksDB supports column family as a way of partitioning. I can see rocksdb_engine.cpp also handles family name from from context variable. But I am am unable to find a way to send this information through redis command. I am using redis SET and GET commands.

Thanks
The test was successful when there was no write operation. Is it related to the write operation?
```
[3236] 10-31 01:30:00,778 INFO ========================Period Statistics Dump End===========================
?ERROR
[3236] 10-31 01:20:24,191 INFO [RocksDB]              Options.memtable_prefix_bloom_size_ratio: 0.100000
[3236] 10-31 01:20:24,191 INFO [RocksDB]  Options.memtable_huge_page_size: 0
[3236] 10-31 01:20:24,191 INFO [RocksDB]                          Options.bloom_locality: 1
[3236] 10-31 01:20:24,191 INFO [RocksDB]                   Options.max_successive_merges: 0
[3236] 10-31 01:20:24,191 INFO [RocksDB]               Options.optimize_filters_for_hits: 0
[3236] 10-31 01:20:24,191 INFO [RocksDB]               Options.paranoid_file_checks: 0
[3236] 10-31 01:20:24,191 INFO [RocksDB]               Options.force_consistency_checks: 0
[3236] 10-31 01:20:24,191 INFO [RocksDB]               Options.report_bg_io_stats: 0
[3236] 10-31 01:20:24,198 INFO [RocksDB][db/version_set.cc:2996] Recovered from manifest file:/opt/db/ardb/data/rocksdb/MANIFEST-000001 succeeded,manifest_file_number is 1, next_file_number is 3, last_sequence is 0, log_number is 0,prev_log_number is 0,max_column_family is 0

[3236] 10-31 01:20:24,198 INFO [RocksDB][db/version_set.cc:3004] Column family [default] (ID 0), log number is 0

[3236] 10-31 01:20:24,201 INFO [RocksDB][db/db_impl_open.cc:1111] DB pointer 0x7f3e2c44e000
[3236] 10-31 01:20:24,201 INFO Ardb init engine:rocksdb success.
[3236] 10-31 01:20:24,204 INFO Ardb will accept connections on 10.4.4.201:16379
[3236] 10-31 01:20:24,205 INFO Ardb started with version 0.9.6
[3236] 10-31 01:20:53,219 INFO [Slave]Connecting master 10.33.4.101:16379
[3236] 10-31 01:20:53,220 INFO [Slave]Remote master is an ardb instance.
[3236] 10-31 01:20:53,220 INFO Send psync ? 0 cksm 0 engine rocksdb
[3236] 10-31 01:20:53,220 INFO Recv psync reply:FULLBACKUP b803a1c56e690428bb5feefba799b9351741e7b6 187961927321701 17920804113527670030
[3236] 10-31 01:20:53,220 INFO [Slave]Create sync backup path:/opt/db/ardb/backup/sync-rocksdb-backup.187961927321701.17920804113527670030.1572484853.tmp
[3236] 10-31 01:29:09,207 INFO Backup file: sync success.
[3236] 10-31 01:29:09,207 INFO Backup sync success.
[3236] 10-31 01:29:09,207 INFO Start loading snapshot:/opt/db/ardb/backup/sync-rocksdb-backup.187961927321701.17920804113527670030.1572484853
[3236] 10-31 01:29:09,208 INFO [RocksDB][db/db_impl.cc:225] Shutdown: canceling all background work
[3236] 10-31 01:29:09,208 INFO [RocksDB][db/db_impl.cc:355] Shutdown complete
[3236] 10-31 01:29:09,208 ERROR Failed to backup rocksdb for reason:NotFound: /opt/db/ardb/backup/sync-rocksdb-backup.187961927321701.17920804113527670030.1572484853/meta is missing
[3236] 10-31 01:29:09,208 INFO [RocksDB]RocksDB version: 5.8.8

[3236] 10-31 01:29:09,208 INFO [RocksDB]Git sha rocksdb_build_git_sha:8f7f3af29542cf912c2f8b2fc0e1ec9ad03ecd7d
[3236] 10-31 01:29:09,208 INFO [RocksDB]Compile date Jan 15 2018
[3236] 10-31 01:29:09,208 INFO [RocksDB]DB SUMMARY

[3236] 10-31 01:29:09,208 INFO [RocksDB]CURRENT file:  CURRENT

[3236] 10-31 01:29:09,208 INFO [RocksDB]IDENTITY file:  IDENTITY

[3236] 10-31 01:29:09,208 INFO [RocksDB]MANIFEST file:  MANIFEST-000001 size: 13 Bytes

[3236] 10-31 01:29:09,208 INFO [RocksDB]SST files in /opt/db/ardb/data/rocksdb dir, Total Num: 0, files:

[3236] 10-31 01:29:09,208 INFO [RocksDB]Write Ahead Log file in /opt/db/ardb/data/rocksdb: 000003.log size: 0 ;
```
ardb version : 0.9.6
data: 96GB
master: ardb 
slave: ardb 

salve cant copy 96GB data , only copy new data ,can you give me any help ?
In order to search for proximity neighbors is data set required to be in some projection such as mercator or lat lon grid is acceptable ? 
I'm running ARDB with RocksDB as a backend. My database is around 100 GB. I usually have one window with `watch redis-cli info` to monitor the status, and if I do `redis-cli compactdb` and wait a while, the first window will freeze. All requests to ARDB will get blocked for a while until the compaction ends.

This doesn't happen right away when I start compaction, only after a short while. I haven't looked too deep into this. Is this a known issue?
In the config file there is
```
# Close the connection after a client is idle for N seconds (0 to disable)
timeout 0
```

but I don't seem to find anywhere that references this value. Especially in db.cpp:`~Ardb::ScanClients`, it's using `GetConf().tcp_keepalive` to kick out idle clients instead of `timeout`. Is this configuration not used?