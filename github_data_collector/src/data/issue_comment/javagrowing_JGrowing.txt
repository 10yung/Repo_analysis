一个JIT激进优化引起的可见性误解文章中的两个例子我都在自己电脑上进行测试，并未出现无法停止的问题。但是看到编译后的class文件和文章中给的相同。请问是什么原因呢？
我自己在学习MySQL性能优化时的笔记


解决方案2的意思是说，先使用select ...  for update ;获取到是否重复，然后在进行更新吗？
有很多内容可写，没有动力，mark一下，定时产出，一起分享
您好，很高兴看到这个项目，非常受益。有点问题想跟您讨论下。
1. CompletionService是通过内部队列保存线程执行的结果，并保证了先执行完线程的结果会优先进入队列；然而，很难想到有啥实际的应用场景。第一，如果是为了拿每个线程的结果做二次处理，那么完全可以放在各个子线程中去处理；第二，如果是为了拿到所有线程的执行结果返回给上层服务，那么可以采用CompletableFuture.allOf来做。。。求大神指教。
2. ListenableFuture是添加了监听的功能，当执行完成或者抛出异常后，做处理。。。既然这样，为什么不是在子线程执行中直接做处理呢？感觉很奇怪。。求大神指教
使用SpringBoot2年~第一次尝试写文档

Hello,欢迎您加入javagrowing开源组织,希望一起学习Java，但学到的不仅仅是Java。和大家参与开源项目不仅仅对自己个人成长非常有帮助，并且还会扩大你自己的影响力，让更多的人能分享到你的知识。
# 如何加入
直接在issue下面留言，我将会邀请你进入https://github.com/javagrowing ， 然后到 https://github.com/javagrowing 这个页面中进行接受邀请。同时最好将你自己的可见性设置为public。


