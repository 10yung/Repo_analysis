**Environment report**
Linux but in a internal network.

`./bin/install --offline ` is very useful for a linux without network. While this offline is only for the omf, but in the process of installing, it will access network to retrieve package-main and theme-default. But there is no an easy to cheat the install process by providing the two packages tar ball.


Describe the problem you are having and how to reproduce it. Include any other additional context that can help us troubleshoot.

**Environment report**

Run the command `omf doctor` and paste the output here. Example:

```
OS type:              Linux
Fish version:         fish, version 3.0.2
Git version:          git version 2.24.0
Git core.autocrlf:    no
Your shell is ready to swim.
```
![image](https://user-images.githubusercontent.com/5040231/71049753-5bebd700-217e-11ea-963b-6fcb85e7f265.png)

I was installed vi-mod and fzf plugins with omf, but don't work at all.

I was getting an error while trying to update omf so I tried a reinstall and got the following:
```
Updating https://github.com/oh-my-fish/packages-main master... There is no tracking information for the current branch.
Please specify which branch you want to merge with.
See git-pull(1) for details.

    git pull <remote> <branch>

If you wish to set tracking information for this branch you can do so with:

    git branch --set-upstream-to=<remote>/<branch> master

Error
```
It looks like the installer is using `git pull` instead of `git clone` to me but I haven't been able to find where the repository is stored in `~/.local/share/omf/` so I can't resolve it. I haven't been able to reproduce the error on any other computer, omf installs normally on my laptop and raspberry pi

**Environment report**
```
Oh My Fish version:   6
OS type:              Linux
Fish version:         fish, version 3.0.0
Git version:          git version 2.24.0
Git core.autocrlf:    no
Your shell is ready to swim.
```

I'm using tmuxinator to open tmux sessions with a specific layout of panes. Each pane runs a different command (eg, one could be vim, another starts a server up etc)

The issue is that tmuxinator is trying to run a command which relies on a fish plugin (nvm) but i get an intermittent error that fnm is not defined, because the plugins haven't loaded, and i'm not sure how to prevent whatever race condition is causing this

**Environment report**

I haven't provided an Environment report as the command is being run before omf has finished loading. Happy to provide debug information, but just not sure where to start?
I installed the lambda theme, but it keeps spawning:

```
╭─vistaus at ThinkArch in ⌁/Downloads/oh-my-fish (master ✔)
╰─λ lsd                                                                                                                                             0 < 00:00:00 < 14:09:26
  AUTHORS    CHANGELOG.md    CONTRIBUTING.md    docs         lib        pkg          repositories    tests
  bin        CODEOWNERS      Dockerfile         init.fish    LICENSE    README.md    templates       tools
0.000001: value not completely converted
0.000083: value not completely converted
0.005: value not completely converted
╭─vistaus at ThinkArch in ⌁/Downloads/oh-my-fish (master ✔)
╰─λ 0.000001: value not completely converted                                                                                                        0 < 00:00:00 < 14:09:27
0.000083: value not completely converted
╭─vistaus at ThinkArch in ⌁/Downloads/oh-my-fish (master ✔)
╰─λ  
```

**Environment report**

Run the command `omf doctor` and paste the output here. Example:

```
Oh My Fish version:   6-46-g6b2ce5c
OS type:              Linux
Fish version:         fish, version 3.0.2
Git version:          git version 2.24.0
Git core.autocrlf:    no
Your shell is ready to swim.
```

How do I fix this?
I'm having issues after reinstalling OMF. After I did `omf destroy` and then did another install,  `fish_funciton_path` has all of the omf entries duplicated, once for the first install, and once for the fresh install.

i can't tell if this an issue w/ OMF or Fish (or something else)? It seems like `omf destroy` doesn't  remove everything, but maybe it's something else?

I've tried to manually clean up `fish_function_path` but none of my changes seem to persist (after restarting the terminal).

Here is what my `fish_function_path` currently looks like:
```
$  echo $fish_function_path  | tr " " "\n" | nl   

     1	/home/shaun/.config/fish/functions
     2	/home/shaun/.local/share/omf/pkg/omf/functions/compat
     3	/home/shaun/.local/share/omf/pkg/omf/functions/core
     4	/home/shaun/.local/share/omf/pkg/omf/functions/index
     5	/home/shaun/.local/share/omf/pkg/omf/functions/packages
     6	/home/shaun/.local/share/omf/pkg/omf/functions/themes
     7	/home/shaun/.local/share/omf/pkg/omf/functions/bundle
     8	/home/shaun/.local/share/omf/pkg/omf/functions/util
     9	/home/shaun/.local/share/omf/pkg/omf/functions/repo
    10	/home/shaun/.local/share/omf/pkg/omf/functions/cli
    11	/home/shaun/.local/share/omf/pkg/fish-spec/functions
    12	/home/shaun/.local/share/omf/pkg/omf/functions
    13	/home/shaun/.local/share/omf/lib
    14	/home/shaun/.local/share/omf/lib/git
    15	/home/shaun/.local/share/omf/themes/bobthefish
    16	/home/shaun/.local/share/omf/themes/bobthefish/functions
    17	/etc/fish/functions
    18	/usr/share/fish/vendor_functions.d
    19	/usr/share/fish/functions
    20	/home/shaun/.config/fish/functions/local_functions/
    21	/usr/share/fish/functions
    22	/usr/share/fish/functions
    23	/home/shaun/.local/share/omf/pkg/omf/functions/compat
    24	/home/shaun/.local/share/omf/pkg/omf/functions/core
    25	/home/shaun/.local/share/omf/pkg/omf/functions/index
    26	/home/shaun/.local/share/omf/pkg/omf/functions/packages
    27	/home/shaun/.local/share/omf/pkg/omf/functions/themes
    28	/home/shaun/.local/share/omf/pkg/omf/functions/bundle
    29	/home/shaun/.local/share/omf/pkg/omf/functions/util
    30	/home/shaun/.local/share/omf/pkg/omf/functions/repo
    31	/home/shaun/.local/share/omf/pkg/omf/functions/cli
    32	/home/shaun/.local/share/omf/pkg/fish-spec/functions
    33	/home/shaun/.local/share/omf/pkg/omf/functions
    34	/home/shaun/.local/share/omf/lib
    35	/home/shaun/.local/share/omf/lib/git
    36	/home/shaun/.local/share/omf/themes/bobthefish
    37	/home/shaun/.local/share/omf/themes/bobthefish/functions
```

And here is the output for `omf doctor`:
```
Oh My Fish version:   6
OS type:              Linux
Fish version:         fish, version 3.0.2
Git version:          git version 2.20.1
Git core.autocrlf:    false
```
# Description

Some paragraphs are rendered incorrectly in [Themes.md](./docs/Themes.md).
I fixed Markdown syntax by adding spaces after *#-paragraphs*

Fixes # N/A

**Environment report**
N/A

# Checklist:

- [x] My code follows the [style guidelines](https://github.com/oh-my-fish/oh-my-fish/blob/master/CONTRIBUTING.md#code-style) of this project
- [x] I have performed a self-review of my own code
- [x] I have commented my code, particularly in hard-to-understand areas
- [x] I have made corresponding changes to the documentation
# Description

Added the spanish translations for README, FAQ and Packages files


# Checklist:

- [x ] My code follows the [style guidelines](https://github.com/oh-my-fish/oh-my-fish/blob/master/CONTRIBUTING.md#code-style) of this project
- [x ] I have performed a self-review of my own code
- [x ] I have commented my code, particularly in hard-to-understand areas
- [x ] I have made corresponding changes to the documentation
- [x ] New and existing tests pass locally with my changes <!--
remove next checkbox if you didn't change the install script -->
- [ ] I have updated the SHA256 checksum for the install script

oh-my-ssh will output a control sequence `\e[30m\e[0;10m` when ssh, causing commands like scp or rsync to be stuck or broken. For example:

```
$ ssh somehost /bin/true | xxd
00000000: 1b5b 3330 6d1b 5b30 3b31 306d            .[30m.[0;10m
```

**Environment report**

Run the command `omf doctor` and paste the output here.

```
Oh My Fish version:   6
OS type:              Linux
Fish version:         fish, version 2.7.1
Git version:          git version 2.17.1
Git core.autocrlf:    no
Your shell is ready to swim.
```

I am using fish-shell 3.0.2 on Debian (in the Windows Subsystem for Linux) with oh-my-fish installed. When I run the shell, it shows the prompt not on the black background, but on the light blue instead. 

![symbolsonblue](https://user-images.githubusercontent.com/44437701/64877980-2a351280-d65b-11e9-82b9-9d3b81af2bda.png)

This is running in Windows Terminal with Campbell theme and Consolas font (and as for oh-my-fish, the default theme).

On the plain WSL, in fact, this is even worse. Instead of showing the back part of the "fish", it shows the question mark.

![questionmark](https://user-images.githubusercontent.com/44437701/64877996-315c2080-d65b-11e9-850f-e2575cb20255.png)

Is this supposed to be like so or is this some kind of an error? If this is an error, please tell me how to fix it.

Here's what the "doctor" shows:
```
Oh My Fish version:   6
OS type:              Linux
Fish version:         fish, version 3.0.2
Git version:          git version 2.20.1
Git core.autocrlf:    no
Your shell is ready to swim.
```