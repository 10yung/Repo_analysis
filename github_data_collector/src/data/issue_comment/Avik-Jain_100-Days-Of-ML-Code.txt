/home/jupyterlab/conda/envs/python/lib/python3.6/site-packages/sklearn/preprocessing/_encoders.py:390: DeprecationWarning: The 'categorical_features' keyword is deprecated in version 0.20 and will be removed in 0.22. You can use the ColumnTransformer instead.
  "use the ColumnTransformer instead.", DeprecationWarning)

I tried step 4 created a dummy variable, and got this problem, can I get any advise how can I fix it
**Describe the bug**
The boundary of logistic regression is linear. However, in the Day 4 infographics, the boundary is shown as sigmoid which is false. Check out this link for clarification on why the boundary of logistic regression is linear. https://stats.stackexchange.com/questions/93569/why-is-logistic-regression-a-linear-classifier

cross_validation is renamed to model_selection in sklearn

## Pull Request Prelude
Thank you for your contribution :)

Please complete the below steps before filing your PR:

 I have read and understood CONTRIBUTING document.
 I have read and understood  CODE_OF_CONDUCT document.
 I have included tests for the changes in my PR. If not, I have included a rationale for why I haven't.
 I understand my PR may be closed if it becomes obvious I didn't actually perform all of these steps.
## Why this change is necessary and useful
This is the change from `sklearn`. `cross_validation` is renamed to `model_selection`

I got the warning of deprecated class
`/usr/local/lib/python3.6/dist-packages/sklearn/utils/deprecation.py:66: DeprecationWarning: Class Imputer is deprecated; Imputer was deprecated in version 0.20 and will be removed in 0.22. Import impute.SimpleImputer from sklearn instead.
  warnings.warn(msg, category=DeprecationWarning)`

So using `SimpleImputer` instead

## Pull Request Prelude
Thank you for your contribution :)

Please complete the below steps before filing your PR:

 I have read and understood CONTRIBUTING document.
 I have read and understood  CODE_OF_CONDUCT document.
 I have included tests for the changes in my PR. If not, I have included a rationale for why I haven't.
 I understand my PR may be closed if it becomes obvious I didn't actually perform all of these steps.
## Why this change is necessary and useful
[Please explain in detail why the changes in this PR are needed.]

Target Leakage in mentioned steps in Data Preprocessing. Train/test split needs to be before missing value imputation. Else you will have a bias in test/eval/serve.
added about linear and logistic regression

## Pull Request Prelude
Thank you for your contribution :)

Please complete the below steps before filing your PR:

 I have read and understood CONTRIBUTING document.
 I have read and understood  CODE_OF_CONDUCT document.
 I have included tests for the changes in my PR. If not, I have included a rationale for why I haven't.
 I understand my PR may be closed if it becomes obvious I didn't actually perform all of these steps.
## Why this change is necessary and useful
[Please explain in detail why the changes in this PR are needed.]

DeprecationWarning: Class Imputer is deprecated; Imputer was deprecated in version 0.20 and will be removed in 0.22. Import impute.SimpleImputer from sklearn instead.
  warnings.warn(msg, category=DeprecationWarning)

I tried with both Imputer and SimpleImputer but its not working, can I get any advise how can i fix it
is it processing?
plt.scatter(X_set[y_set == j, 0], X_set[y_set == j, 1],
                c = ListedColormap(('red', 'green'))(i), label = j)
here why set X_set[y_set == j]?It can show a random state?
The more important,I understand it always get the column = 0 values ,but y_set == j get where values? And what can y_set equal.
Can you give me the code of Day 7 please?
