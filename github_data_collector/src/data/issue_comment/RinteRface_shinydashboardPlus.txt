When `boxPlus(closable=TRUE)`, an `X` icon appears that allows the user to close the box. It would be very helpful if this event generated a callback to shiny so that we can know when that happens.

I saw some discussion of this in #10 but that issue is for something else so I wanted to open a dedicated issue for this.
Could it be possible to make main_img and header_img, arguments to the flipBox function, reactive to some input? I've tried to put the url as a uiOutput but it doesn't work. 

Thank you!



Is it possible to remove main_img and header_img elements of flipBox?

If I just set arguments to NULL:
```
 main_img = NULL,
 header_img = NULL,
```
it looks like an empty circle on a white background, but they are still there.

Via the https://rinterface.com/shiny/shinydashboardPlus example provided the dashboard appears to either have css hard coded for each menu item. Or there is some argument that allows for the menu item to adjust based on the height taken up by the contents of that menu item....I've been using tags$head(tags$style(HTML('.content-wrapper { height: 2050px !important;}'))) placed in the dashboardSidebar to give more room for the content in the dashboard body. 

This did not work for me when I tried placing this code in individual menu items, it only works when placed in the dashboard dashboardSidebar and gives all of the other menu items the same space. How did you go about either hard coding the css for each menu item or is there an argument I am missing from the documentation to get the same results you have in the demo above.

Hi.

I'm using your ShinydashboardPlus package, I re-write my shinyapp code with your package.

But I found an error with column width.

this is my example code about layout in body section

```
tab_kpi <- function() {
  list(
    fluidPage(
      fluidRow(
        id = "row_title",
        column(width = 5, 
               id = "col_title",
               h4("example")
        )
      )
    )
  )
}
```
At first run, no error occurs, but after that `column width must be between 1 and 12` error occurs.

Is there any solution to this error? 

Hi,

I think the `input$sidebarCollapsed` does not work for shinydashboardPlus. It works for dashboardPage but as soon as I use dashboardPagePlus it does not work.

The code below does not work properly. 

Ivo

```
library(shiny)
library(shinydashboard)
library(shinydashboardPlus)

ui <- dashboardPagePlus(
    dashboardHeader(), 
    dashboardSidebar(),
    dashboardBody(
        textOutput("res")
    )
)

server <- function(input, output, session) {
    output$res <- renderText({
        if (input$sidebarCollapsed) {
            "Sidebar is collapsed"
        } else {
            "Sidebar is expanded"
        }
    })
}

shinyApp(ui, server)

```
Hi David,

I have an issue when I expand or collapse the control bar, the plot does not adapt its size in body, eg reduces when controlbar is expanded, or increases when controlbar is collapsed.

This behaviour is not happening with sidebar, that's why I thought it might be fixed with control bar ?

Here is a reprex : 

```
library(shiny)
library(shinydashboard)
library(shinydashboardPlus)

ui <- dashboardPagePlus(
  dashboardHeaderPlus(
    enable_rightsidebar = TRUE,
    rightSidebarIcon = "filter"
  ),
  dashboardSidebar(),
  rightsidebar = rightSidebar(
    .items = selectInput("input", "label", choices = c("test1", "test2"))
  ),
  dashboardBody(
    plotOutput("plot")
  )
)

server <- function(input, output) {
  output$plot <- renderPlot({
    plot(mtcars)
  })
}

shinyApp(ui, server)
```
- Change width parameter value to receive numeric values as pixels or percentage for dynamic width adjustment.
Reproducible example below; read documentation, but can't find a way to turn off `loadingState()`.

Expected: after 10 secs, spinner will fade away.

Outcome: plot renders after 10 secs, but spinner still shows

```r
if (interactive()) {
  library(shiny)
  library(shinydashboard)
  library(shinydashboardPlus)
  shinyApp(
    ui = dashboardPage(
      dashboardHeader(),
      dashboardSidebar(),
      dashboardBody(
        box(
          title = "loading spinner",
          loadingState(),
          plotOutput("plot2")
        )
      ),
      title = "Loading State"
    ),
    server = function(input, output) {
      output$plot2 <- renderPlot({
        Sys.sleep(10)
        plot(iris)
      }) 
    }
  )
}
```
I think this parameter is redundant with the skin one.