Force kaspresso check version of adb server for compatibility.
If not compatible then report current and compatible version and fail test on first request to adb server. 
**Stacktrace**:
E/UiDevice: failed to save screen shot to file
 java.io.FileNotFoundException: /storage/emulated/0/screenshots/com.kaspersky.kaspressample.simple_tests.SimpleTest/test/1578485958639_SimpleTest_step_1.png: open failed: ENOENT (No such file or directory)
        at libcore.io.IoBridge.open(IoBridge.java:496)

**Additional information**:
[screenshot with the error](https://habrastorage.org/webt/yo/vo/83/yovo83nze_jrmwcbxqosyved-ee.png)


Added https://oss.jfrog.org/artifactory snapshots 

Need to configure CircleCI and Webhooks before merge
В Telegram-чате Kaspresso&AdbServer support [RU] обсуждали идею удобного и интуитивно понятного API для ситуаций, когда необходимо ожидать появления View в иерархии (аналог Espresso Idling Resource).

Проблематика: сейчас это можно реализовать с помощью flakySafely + метода isVisible(), но это неудобно (нужно оборачивать в before{ }.after{ }.run{ }), неочевидно и решает не совсем ту задачу, о которой я пишу.

Хотелось бы иметь возможность явно указать, что View может изначально не быть в иерархии (ViewNotFoundException). Какие варианты мне видятся наиболее лаконичными (в порядке убывания):

1. Использование аннотации (**@Idling, @Idle, @IdlingResource**) при инициализации KView. Например:
```
class MainActivityScreen : Screen<MainActivityScreen>() {    
    @Idling(maxWaitMillis = 60_000)
    val moreBtn = KButton {withId(R.id.btn_more)}
}
```

2. С помощью дополнительного метода в самом тесте, например, wait(maxWaitMillis = 60_000):
```
@Test
    fun mainActivityTest() {
        mainActivityScreen{
            moreBtn {
                wait(maxWaitMillis = 60_000)
                click()
            }
        }
    }
```

Второй вариант делает чтение теста более понятным (т.к. аннотация находится в другом классе, ее не будет видно из класса с тестами, в отличие от метода wait()). Можно конечно заморочиться и для аннотированных объектов генерировать объект с именем moreBtnIdle и в тесте использовать уже его, но это полет фантазии уже)

Также часто возникают ситуации, когда нужно дождаться состояния уже существующего в иерархии View (например, дождаться состояния кнопки isEnabled, а затем кликнуть по ней).

Пусть это будет метод waitFor{} (waitForState{}, waitState{}) в который можно поместить assert-ы которые доступны только для объявленного KView (в данном случае KButton). Также должна быть возможность указать кастомные matcher-ы/assert-ы

Применив идею на примере выше, было бы отлично писать код в следующем стиле:
```
@Test
    fun mainActivityTest() {
        mainActivityScreen{
            moreBtn {
               wait(maxWaitMillis = 60_000) //или аннотация @Idling
               waitFor(maxWaitMillis = 60_000) {
                      isEnabled()
               }
               click()
               waitFor(maxWaitMillis = 60_000) {
                      withText(R.string.new_btn_text)
               }
            }
        }
    }
```

В результате тест можно было трактовать так: ждать появления в иерархии moreBtn максимум 60 секунд. После того, как кнопка появится, ждать состояния isEnabled и после этого выполнить по ней клик, после чего дождаться текста R.string.new_btn_text

Был бы очень рад такому API. Возможно, вы разовьете идею и придумаете еще более элегантное решение. Заранее спасибо)

Hello! I am trying to implement Kaspresso in my project, but i have conflicts with core annotations library:

```FAILURE: Build failed with an exception.

* What went wrong:
Execution failed for task ':core:checkDebugAndroidTestDuplicateClasses'.
> 1 exception was raised by workers:
  java.lang.RuntimeException: Duplicate class org.intellij.lang.annotations.Identifier found in modules adbserver-device-1.0.0.jar (com.kaspersky.android-components:adbserver-device:1.0.0) and annotations-12.0.jar (com.intellij:annotations:12.0)
  Duplicate class org.intellij.lang.annotations.JdkConstants found in modules adbserver-device-1.0.0.jar (com.kaspersky.android-components:adbserver-device:1.0.0) and annotations-12.0.jar (com.intellij:annotations:12.0)
  Duplicate class org.intellij.lang.annotations.JdkConstants$AdjustableOrientation found in modules adbserver-device-1.0.0.jar (com.kaspersky.android-components:adbserver-device:1.0.0) and annotations-12.0.jar (com.intellij:annotations:12.0)
  Duplicate class org.intellij.lang.annotations.JdkConstants$BoxLayoutAxis found in modules adbserver-device-1.0.0.jar (com.kaspersky.android-components:adbserver-device:1.0.0) and annotations-12.0.jar (com.intellij:annotations:12.0)
  Duplicate class org.intellij.lang.annotations.JdkConstants$CalendarMonth found in modules adbserver-device-1.0.0.jar (com.kaspersky.android-components:adbserver-device:1.0.0) and annotations-12.0.jar (com.intellij:annotations:12.0)
  Duplicate class org.intellij.lang.annotations.JdkConstants$CursorType found in modules adbserver-device-1.0.0.jar (com.kaspersky.android-components:adbserver-device:1.0.0) and annotations-12.0.jar (com.intellij:annotations:12.0)
  Duplicate class org.intellij.lang.annotations.JdkConstants$FlowLayoutAlignment found in modules adbserver-device-1.0.0.jar (com.kaspersky.android-components:adbserver-device:1.0.0) and annotations-12.0.jar (com.intellij:annotations:12.0)
  Duplicate class org.intellij.lang.annotations.JdkConstants$FontStyle found in modules adbserver-device-1.0.0.jar (com.kaspersky.android-components:adbserver-device:1.0.0) and annotations-12.0.jar (com.intellij:annotations:12.0)
  Duplicate class org.intellij.lang.annotations.JdkConstants$HorizontalAlignment found in modules adbserver-device-1.0.0.jar (com.kaspersky.android-components:adbserver-device:1.0.0) and annotations-12.0.jar (com.intellij:annotations:12.0)
  Duplicate class org.intellij.lang.annotations.JdkConstants$InputEventMask found in modules adbserver-device-1.0.0.jar (com.kaspersky.android-components:adbserver-device:1.0.0) and annotations-12.0.jar (com.intellij:annotations:12.0)
  Duplicate class org.intellij.lang.annotations.JdkConstants$ListSelectionMode found in modules adbserver-device-1.0.0.jar (com.kaspersky.android-components:adbserver-device:1.0.0) and annotations-12.0.jar (com.intellij:annotations:12.0)
  Duplicate class org.intellij.lang.annotations.JdkConstants$PatternFlags found in modules adbserver-device-1.0.0.jar (com.kaspersky.android-components:adbserver-device:1.0.0) and annotations-12.0.jar (com.intellij:annotations:12.0)
  Duplicate class org.intellij.lang.annotations.JdkConstants$TabLayoutPolicy found in modules adbserver-device-1.0.0.jar (com.kaspersky.android-components:adbserver-device:1.0.0) and annotations-12.0.jar (com.intellij:annotations:12.0)
  Duplicate class org.intellij.lang.annotations.JdkConstants$TabPlacement found in modules adbserver-device-1.0.0.jar (com.kaspersky.android-components:adbserver-device:1.0.0) and annotations-12.0.jar (com.intellij:annotations:12.0)
  Duplicate class org.intellij.lang.annotations.JdkConstants$TitledBorderJustification found in modules adbserver-device-1.0.0.jar (com.kaspersky.android-components:adbserver-device:1.0.0) and annotations-12.0.jar (com.intellij:annotations:12.0)
  Duplicate class org.intellij.lang.annotations.JdkConstants$TitledBorderTitlePosition found in modules adbserver-device-1.0.0.jar (com.kaspersky.android-components:adbserver-device:1.0.0) and annotations-12.0.jar (com.intellij:annotations:12.0)
  Duplicate class org.intellij.lang.annotations.JdkConstants$TreeSelectionMode found in modules adbserver-device-1.0.0.jar (com.kaspersky.android-components:adbserver-device:1.0.0) and annotations-12.0.jar (com.intellij:annotations:12.0)
  Duplicate class org.intellij.lang.annotations.Language found in modules adbserver-device-1.0.0.jar (com.kaspersky.android-components:adbserver-device:1.0.0) and annotations-12.0.jar (com.intellij:annotations:12.0)
  Duplicate class org.intellij.lang.annotations.MagicConstant found in modules adbserver-device-1.0.0.jar (com.kaspersky.android-components:adbserver-device:1.0.0) and annotations-12.0.jar (com.intellij:annotations:12.0)
  Duplicate class org.intellij.lang.annotations.Pattern found in modules adbserver-device-1.0.0.jar (com.kaspersky.android-components:adbserver-device:1.0.0) and annotations-12.0.jar (com.intellij:annotations:12.0)
  Duplicate class org.intellij.lang.annotations.PrintFormat found in modules adbserver-device-1.0.0.jar (com.kaspersky.android-components:adbserver-device:1.0.0) and annotations-12.0.jar (com.intellij:annotations:12.0)
  Duplicate class org.intellij.lang.annotations.PrintFormatPattern found in modules adbserver-device-1.0.0.jar (com.kaspersky.android-components:adbserver-device:1.0.0) and annotations-12.0.jar (com.intellij:annotations:12.0)
  Duplicate class org.intellij.lang.annotations.RegExp found in modules adbserver-device-1.0.0.jar (com.kaspersky.android-components:adbserver-device:1.0.0) and annotations-12.0.jar (com.intellij:annotations:12.0)
  Duplicate class org.intellij.lang.annotations.Subst found in modules adbserver-device-1.0.0.jar (com.kaspersky.android-components:adbserver-device:1.0.0) and annotations-12.0.jar (com.intellij:annotations:12.0)
  Duplicate class org.jetbrains.annotations.Nls found in modules adbserver-device-1.0.0.jar (com.kaspersky.android-components:adbserver-device:1.0.0) and annotations-12.0.jar (com.intellij:annotations:12.0)
  Duplicate class org.jetbrains.annotations.NonNls found in modules adbserver-device-1.0.0.jar (com.kaspersky.android-components:adbserver-device:1.0.0) and annotations-12.0.jar (com.intellij:annotations:12.0)
  Duplicate class org.jetbrains.annotations.NotNull found in modules adbserver-device-1.0.0.jar (com.kaspersky.android-components:adbserver-device:1.0.0) and annotations-12.0.jar (com.intellij:annotations:12.0)
  Duplicate class org.jetbrains.annotations.Nullable found in modules adbserver-device-1.0.0.jar (com.kaspersky.android-components:adbserver-device:1.0.0) and annotations-12.0.jar (com.intellij:annotations:12.0)
  Duplicate class org.jetbrains.annotations.PropertyKey found in modules adbserver-device-1.0.0.jar (com.kaspersky.android-components:adbserver-device:1.0.0) and annotations-12.0.jar (com.intellij:annotations:12.0)
  Duplicate class org.jetbrains.annotations.TestOnly found in modules adbserver-device-1.0.0.jar (com.kaspersky.android-components:adbserver-device:1.0.0) and annotations-12.0.jar (com.intellij:annotations:12.0)
```

I have tried to exclude org.jetbrains.annotations module from kaspresso dependency in implementing dependency process, but it couldn't help. Please, give me the way, how i can resolve that:)

My gradle code:
```
dependencies {
    androidTestImplementation libraries.junitAndroid
    androidTestImplementation( libraries.kaspresso ){
        exclude(group: 'com.intellij', module: 'annotations')
    }
    androidTestImplementation libraries.espressoCore
    androidTestImplementation libraries.uiAutomator
    androidTestImplementation libraries.kakao
    androidTestImplementation libraries.espressoWeb
    androidTestImplementation libraries.espressoContrib
    androidTestImplementation libraries.espressoIntents 
}
 ```

dependencies.gradle:
```
        junitAndroid            : "androidx.test.ext:junit:1.1.1",
        kaspresso               : "com.kaspersky.android-components:kaspresso:1.0.1",
        espressoCore            : "androidx.test.espresso:espresso-core:3.2.0",
        uiAutomator             : "androidx.test.uiautomator:uiautomator:2.2.0",
        kakao                   : "com.agoda.kakao:kakao:2.2.0,
        espressoWeb             : "androidx.test.espresso:espresso-web:3.2.0",
        espressoContrib         : "androidx.test.espresso:espresso-contrib:3.2.0",
        espressoIntents         : "androidx.test.espresso:espresso-intents:3.2.0",
```
The simplest thing can be done to avoid the appearance of autofill dialog is to call `context.getSystemService(AutofillManager::class.java).disableAutofillServices()` before the test starts. This can be done via implementing the DefaultTestRunWatcherInterceptor which will make such a call before every test.

`device.keyboard.typeText("йцуке")`
throws
`com.kaspersky.kaspresso.internal.exceptions.AdbServerException: command=input text й was performed with failed result=CommandResult(status=FAILED, description=exitCode=137, message=)`

tested with:
* kaspresso 1.0.1
* emulator Pixel 2 API 25.
Если попытаться сделать typetext в такой элемент, то ничего не впечатается


<item
        android:id="@+id/menu_search"
        android:title="@string/app_l******rch"
        app:actionViewClass="androidx.appcompat.widget.SearchView"
        android:imeOptions="actionSearch"
        app:showAsAction="always"/>
Very often, there is a need to extend BaseTextContext and put in the extended version some custom classes. 