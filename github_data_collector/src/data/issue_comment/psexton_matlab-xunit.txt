This PR adds an option `-throwerrors` to runxunit which defaults to false if not supplied. It used, then test cases will be run outside a try catch block. The purpose it to make it easier to debug test cases, and use test cases for development of features.
PR #16, the fix for #14, introduced a test failure on R2012a (Windows, 64-bit). "TestSuiteTest:test_fromName_with_relative_dirname_on_path" fails with the message below because matlab.system.CoreBlockSystem contains an error:

> The specified super-class 'matlab.system.BlockCore' contains a parse error or cannot be found on MATLAB's search path, possibly shadowed by another file with the same name.

I modified the test to use its own directory on the path, rather than assuming anything about MATLAB's internal packages. I verified that this version of the test fails in R2012a and R2017a when the fix for TestSuite.fromName is backed out. 
**Merged in multiple logging support from adambard commits** 86fb63f9da665350f205b38173315a768da3c01f, cd9a9a3de1fb4d5be66d36fb4a98703f73d9e778

Fixed to work with psexton branch.

Example usage:
Output test results to console, text log file and JUnit XML file:
`runxunit -verbose -logfile testreport.txt -xmlfile testreport.xml tests`

Output multiple JUnit XML files (one per TestSuite):
`runxunit -verbose -logfile testreport.txt -xmlfile C:\tools\matlab\matlab-xunit\testreport\ tests`

The documentation for `filemarker` will be helpful here:  http://www.mathworks.com/help/techdoc/ref/filemarker.html

There's some that's just \n and some that are \r\n

Git seems to really want them to be \n in the repository, but since so many Matlab people use it on Windows, I'm not sure if that's best.

If you run your examples in Matlab that's like 130 columns wide, but the tests are run in an environment that's only 80 columns wide, there will be differences in how Matlab paginates the output, so the tests will fail.  This only happens if you e.g. print a 30x30 matrix.
