has this project been abandoned?
siege -c 100 -v 100 ---content-type“ application / json”'http://domain.com POST {“ ids”：[“ 1”，“ 2”，“ 3”] }'

ids is random number.

what  should i do ?
Is PUT supported?  POST works for me, but when I replace POST with PUT (while testing my REST API), siege does not pass the data to the URL.

The idea with this change is to realize that `POST <` does not automatically mean we are reading a file for input. Instead we check to see if the character following is the start of an XML declaration such as `<?xml ... ?>`
Any XML POST inputs will confuse siege.
Example:
`siege -c 1 -r 1 -g "http://testsrv/ POST <?xml version='1.0' encoding='UTF-8'?><foobar/>"`

This happens because siege will only look at the '<' character, and try to process the rest of the line as a filename. Issue is in ./src/url.c `__parse_post_data(URL this, char *datap)`.

The following can help fix the issue by looking for the XML declaration.

```
diff --git a/src/url.c b/src/url.c
index 9297376..b9e83c3 100644
--- a/src/url.c
+++ b/src/url.c
@@ -643,7 +643,7 @@ __parse_post_data(URL this, char *datap)
   for (; isspace((unsigned int)*datap); datap++) {
     /* Advance past white space */
   }
-  if (*datap == '<') {
+  if (*datap == '<' && *(datap+1) != '?') {
     datap++;
     load_file(this, datap);
     datap = __url_set_path(this, datap);
```

Fixed time listed under Elapsed time to match the sample output.  Was 14.67 but sample output was 58.57.
This corresponds to the default set at https://github.com/JoeDog/siege/blob/master/doc/siegerc.in#L267
_KRB5  -g -O2 -c auth.c
auth.c: In function ‘__get_md5_str’:
auth.c:1114: error: storage size of ‘ctx’ isn’t known
auth.c:1122: warning: implicit declaration of function ‘md5_init_ctx’
auth.c:1123: warning: implicit declaration of function ‘md5_process_bytes’
auth.c:1124: warning: implicit declaration of function ‘md5_finish_ctx’
How can I solve this problem? When the make command is executed
Addresses https://github.com/JoeDog/siege/issues/109 for siege 4.0.2

This does seem to conflict with master, which has its own fix (but doesn't have the SSL_COMP_free_compression_methods() call). 
I am trying to test an authenticated system simulating multiple users. I know I can use the URLs file to add multiple URLs but I would like to send a different set of headers for each URL.
Would it be possible to make the "-H" header syntax from the command line for a single URL to be supported as a param against each URL in the URLs file?

So you'd have
```
# user 1
http://homer.whoohoo.com/index.shtml -H "Authorization: Bearer User1"
http://homer.whoohoo.com/howto.jsp -H "Authorization: Bearer User1"

#user 2
http://homer.whoohoo.com/index.shtml -H "Authorization: Bearer User2"
http://homer.whoohoo.com/howto.jsp -H "Authorization: Bearer User2"
```
