A friend of mine is looking for a good game engine he can use to work on his project. Seeing that the last update was around 6 months ago... should he try Piston, or is the project no longer being worked on?

Thanks in advance! :)
For something like `rectangle` it's:
```rust
rectangle(
	[1.0, 0.0, 0.0, 1.0], // RGBA
	[0.0, 0.0, 100.0, 100.0], // [x, y, w, h]
	context.transform, graphics
);
```

But for `text` it's:
```rust
let transform = context.transform.trans(10.0, 100.0);

text::Text::new_color([0.0, 0.0, 0.0, 1.0], 32).draw(
	"Hello world!",
	&mut font,
	&context.draw_state,
	transform, graphics
).unwrap();
```
Why does `text` require `transform`, and not just `x` and `y` coordinates?
This lint makes it easier to see when a new `pub` causes a breaking change.
In order to push an event, implementing a window backend your self seems to be the only way to the best of my knowledge. There should be some generic/higher-level ways that accepts events to be raised in application code, since the window may not only update because of the input.
There is a `create_proxy` function in glutin seems to be useful, but it is still in alpha and is not supported by both window::Window and window::AdvancedWindow.

Is there any good way to push a custom event for now?
- [x] event_id::EventId
- [x] event_id::AFTER_RENDER
- [x] event_id::CONTROLLER_AXIS
- [x] event_id::CURSOR
- [x] event_id::FOCUS
- [x] event_id::CLOSE
- [x] event_id::IDLE
- [x] event_id::MOUSE_SCROLL
- [x] event_id::MOUSE_RELATIVE
- [x] event_id::MOUSE_CURSOR
- [x] event_id::BUTTON
- [x] event_id::RENDER
- [x] event_id::RESIZE
- [x] event_id::TEXT
- [x] event_id::TOUCH
- [x] event_id::UPDATE
- [x] event_id::FILE_DRAG
- [x] Button
- [x] Motion
- [x] HatState
- [x] FileDrag
- [x] Input
- [x] Loop
- [x] Event
- [x] AfterRenderArgs
- [x] AfterRenderEvent
- [x] ButtonState
- [x] ButtonArgs
- [x] ButtonEvent
- [x] PressEvent
- [x] ReleaseEvent
- [x] CloseArgs
- [x] CloseEvent
- [x] ControllerButton
- [x] ControllerHat
- [x] ControllerAxisArgs
- [x] ControllerAxisEvent
- [x] CursorEvent
- [x] FocusEvent
- [x] GenericEvent
- [x] IdleArgs
- [x] IdleEvent
- [x] ModifierKey
- [x] Key
- [x] MouseButton
- [x] MouseCursorEvent
- [x] MouseRelativeEvent
- [x] MouseScrollEvent
- [x] RenderArgs
- [x] RenderEvent
- [x] ResizeArgs
- [x] ResizeEvent
- [x] TextEvent
- [x] Touch
- [x] TouchArgs
- [x] TouchEvent
- [x] UpdateArgs
- [x] UpdateEvent
- [x] TimeStamp
See https://github.com/KenSuenobu/rust-pushrod/pull/138#discussion_r290547097

Some games or applications do not use e.g. "idle" events, so they might want to disable it.
The freetype example is fixed to using SDL2-Window instead of the generic PistonWindow and therefore cannot be combined with the other examples like src/sprite.rs.
How can I set a window icon to the window backends?
There is nothing documented online regarding this.
Do I need to access the window backend manually?
At the moment piston is just a bunch of libraries, and it doesn't offer GUI game editor, like Godot and Unity.

Can we in the near future implement a full GUI game engine?