
Incompability using Laravel 6 and PHP 7.4

When I trying create a Presenter, I'm getting following error.
RFC: https://wiki.php.net/rfc/deprecations_php_7_4
ErrorException  : implode(): Passing glue string after array is deprecated. Swap the parameters

  at xxx/vendor/prettus/l5-repository/src/Prettus/Repository/Generators/Generator.php:262
    258|         if ($rootNamespace == false) {
    259|             return null;
    260|         }
    261| 
  > 262|         return 'namespace ' . rtrim($rootNamespace . '\\' . implode($segments, '\\'), '\\') . ';';
    263|     }

in Stubs/migration/create.stub and ~/change.stub

missing : 
`use Illuminate\Support\Facades\Schema;`

Thanks
Add missing info about conversion from snakeCase to camel_case in search query params.
Also some minor (grammar / eloquence) changes to other parts of documentation.
Hi, can you apply this for better readable code

https://www.php-fig.org/psr/psr-12/

Thank you,
Hi,
Currently I am working on a project which is using multiple database connection, one for read and another for write. In this repository there you any way to to make sure its taking from write connection, not from read or replica?

Please let me know ASAP.
Hi
I was wondering how I can update a record with criteria
I have a  users table and info table with one to one relationship
Users need to be able to update only their info which is connected through user_id on the info table
what is the best solution?

            $this->repository->pushCriteria(EndUserCriteria::class);
            $client = $this->repository->update($request->all(), $id);


class EndUserCriteria implements CriteriaInterface
{
    /**
     * Apply criteria in query repository
     *
     * @param string              $model
     * @param RepositoryInterface $repository
     *
     * @return mixed
     */
    public function apply($model, RepositoryInterface $repository)
    {
        $model = $model->where('user_id','=', Auth::user()->id );
        return $model;
    }
}

this doesn't work




When using the RequestCriteria it is not possible to specify a default order/sort.
In one of the controller methods I want to default sort to 'desc', but it's hardcoded to 'asc' in the RequestCriteria.
https://github.com/andersao/l5-repository/blob/master/src/Prettus/Repository/Criteria/RequestCriteria.php#L45
```
[
    {
        "id": 1,
        "name": "John Doe",
        "email": "john@gmail.com",
        "created_at": "-0001-11-30 00:00:00",
        "updated_at": "-0001-11-30 00:00:00"
    },
    {
        "id": 2,
        "name": "Lorem Ipsum",
        "email": "lorem@ipsum.com",
        "created_at": "-0001-11-30 00:00:00",
        "updated_at": "-0001-11-30 00:00:00"
    },
    {
        "id": 3,
        "name": "Laravel",
        "email": "laravel@gmail.com",
        "created_at": "-0001-11-30 00:00:00",
        "updated_at": "-0001-11-30 00:00:00"
    }
]
```

this is doc example
Should I validate the data with `request` or` laravel-validator`? Can you explain to me the benefits of using the `laravel-validtor` library?