Hi, when I run script/bootstrap after I have cloned kart i got this error in the Terminal :

Installing modules âœ“
npm WARN deprecated wrench@1.5.4: wrench.js is deprecated! You should check out fs-extra (https://github.com/jprichardson/node-fs-extra) for any operations you were using wrench for. Thanks for all the usage over the years.
abbrev@1.0.7 node_modules/grunt-download-electron/node_modules/decompress-zip/node_modules/nopt/node_modules/abbrev -> node_modules/abbrev
[cut a part because it was too long, and the installation seems to do correctly]
github-releases@0.2.1 node_modules/grunt-download-electron/node_modules/github-releases -> node_modules/github-releases
wrench@1.5.4 node_modules/grunt-download-electron/node_modules/wrench -> node_modules/wrench
npm WARN Kart@0.1.0 No repository field.
npm WARN Kart@0.1.0 No license field.
rm: atom-shell: No such file or directory
Warning: Task "grunt-download-electron" not found. Use --force to continue.

Aborted due to warnings.

I don't know what to do after, and also I'm on a mac with everything in the last update

Please add a license so that we know that we may actually do something with this :smile: 

This lets us see the original coffeescript source files while debugging in the developer tools, not just the js generated by the coffeescript source.

Not sure if this is something you want... i just noticed it while messing with some atom language tests and thought it might be a good addition. Although, since i dont know coffeescript, it's kinda nice to see the js that gets generated... the more i'm typing the less sure i am about creating this PR.

:construction: :construction: :construction: :construction: :construction: :construction: :construction: WIP :construction: :construction: :construction: :construction: :construction: :construction: :construction: 

This is early, but I'm gonna push it up while I work on it.

This lets you edit the art for a rom right from inside Kart. It adds a new button to the game card that prompts a modal giving choices of art. I wrote a quick consolegrid.com scraper in Ruby and threw it up on Heroku so it had something simple to call out to as an API. It works pretty well. 

![edit-art](https://cloud.githubusercontent.com/assets/260/4066842/fb489108-2e27-11e4-850e-40fe90b51dd0.gif)
### To Do
- [x] Add loading UI while the api request is still processing.
- [x] Add credit to consolegrid.com in the modal, linking to them.
- [x] Add form for adding art via a URL
- [x] Clean up the modal to just look a little better
- [x] Some error handling
- [ ] Fix loader to be adjusted to where the art will appear
- [ ] Make sure the art results content can scroll with an overflow
- [ ] Add loader when updating art via url
- [ ] Figure out why events stop working after the first time the modal is shown

One of my frustrations with this app when I first started was that I had games in the right folders, but I didn't see any of them show up. I added backgrounds to the images folders and then they would show up.

It was pretty confusing to have roms but not see anything show up. A flood of doubts overwhelmed me :cry: (ok, ok, I exaggerate), but I started to question whether I had set something up wrong, didn't have libretro working, or if kart was just broken.

I think having a generic image would be helpful if there's no image already. I've been using the [geopatterns stuff](https://github.com/btmills/geopattern) in other projects of mine because they're easy and look good. I can use those when there isn't an image for a rom already present.

I don't mind coding up a PR, just wanted to get your thoughts. What do you think? Did you have other ideas for this already?

Way later down the road, it would be nice to allow the user to find a good image for a rom through a Creative Commons search.
