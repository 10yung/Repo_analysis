Device: iPhone xs max
iOS Version : 13.2.3

sample code 
`let filter = CIFilter.init(name: "CIQRCodeGenerator")`
CocoaDebug crash code
<img width="818" alt="WX20200113-160643@2x" src="https://user-images.githubusercontent.com/42987624/72240431-173d4980-361f-11ea-8177-ffd471e77d57.png">



UIScrollView scrollsToTop is invalid when I call CocoaDebug.enable()
I can not use CocoaDebug in my project becauset I configured https . What should I do  ?
crash in _fishhook.c line 105.
CocoaDebug version: 1.0.2

xcode output:
dyld: Library not loaded: @rpath/libswiftCore.dylib
  Referenced from: /private/var/containers/Bundle/Application/xxx/xx.app/Frameworks/CocoaDebug.framework/CocoaDebug
  Reason: image not found
(lldb) 

Thread 1: EXC_BREAKPOINT (code=1, subcode=0x1200a9088)

Thanks
When uploading a new version of my app to Apple, I receive an email warning about deprecated API for UIWebView.

> ITMS-90809: Deprecated API Usage - Apple will stop accepting submissions of apps that use UIWebView APIs . See https://developer.apple.com/documentation/uikit/uiwebview for more information.

Could you fix this?
This line of code crash for iOS 10.2 simulator.
[_OCLogHelper.shared handleLogWithFile:@"" function:@"" line:999999999 message:[[NSString alloc] initWithFormat:format arguments:va] color:[UIColor whiteColor]]; 
I see in the introduction that there is a reference to private Api, can the project refer to this when it hits the appstore?
I use the log process, if the error is refreshed frequently, there will be a large memory footprint.
--------------------------------------------------------------------------------
我使用 log的过程中如果刷新输错比较频繁会出现很大的内存占用
new releases cause crash related to customhttpprotocol stoploading method,

```
-[_CustomHTTPProtocol stopLoading]: message sent to deallocated instance 0x28108cba0
```

```
hread #13, name = 'com.apple.CFNetwork.CustomProtocols', stop reason = EXC_BREAKPOINT (code=1, subcode=0x1cc8b010c)
  * frame #0: 0x00000001cc8b010c CoreFoundation`___forwarding___ + 1208
    frame #1: 0x00000001cc8b1e6c CoreFoundation`_CF_forwarding_prep_0 + 92
    frame #2: 0x00000001cce815cc CFNetwork`CFURLProtocol_NS::forgetProtocolClient0() + 88
    frame #3: 0x00000001cce81564 CFNetwork`___ZN16CFURLProtocol_NS20forgetProtocolClientEv_block_invoke + 24
    frame #4: 0x0000000106828c78 libdispatch.dylib`_dispatch_client_callout + 16
    frame #5: 0x000000010682c840 libdispatch.dylib`_dispatch_block_invoke_direct + 232
    frame #6: 0x00000001cd0a4b20 CFNetwork`RunloopBlockContext::_invoke_block(void const*, void*) + 36
    frame #7: 0x00000001cc7dd3e0 CoreFoundation`CFArrayApplyFunction + 80
    frame #8: 0x00000001cd0a49f0 CFNetwork`RunloopBlockContext::perform() + 128
    frame #9: 0x00000001cd0a5b54 CFNetwork`MultiplexerSource::perform() + 312
    frame #10: 0x00000001cd0a58d0 CFNetwork`MultiplexerSource::_perform(void*) + 60
    frame #11: 0x00000001cc83c728 CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_A_SOURCE0_PERFORM_FUNCTION__ + 24
    frame #12: 0x00000001cc83c6a8 CoreFoundation`__CFRunLoopDoSource0 + 88
    frame #13: 0x00000001cc83bf90 CoreFoundation`__CFRunLoopDoSources0 + 176
    frame #14: 0x00000001cc836ecc CoreFoundation`__CFRunLoopRun + 1004
    frame #15: 0x00000001cc8367c0 CoreFoundation`CFRunLoopRunSpecific + 436
    frame #16: 0x00000001cce5074c CFNetwork`-[__CoreSchedulingSetRunnable runForever] + 216
    frame #17: 0x00000001cd331674 Foundation`__NSThread__start__ + 984
    frame #18: 0x00000001cc4c92c0 libsystem_pthread.dylib`_pthread_body + 128
    frame #19: 0x00000001cc4c9220 libsystem_pthread.dylib`_pthread_start + 44
    frame #20: 0x00000001cc4cccdc libsystem_pthread.dylib`thread_start + 4
```