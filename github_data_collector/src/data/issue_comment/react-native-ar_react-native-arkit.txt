Bumps [lodash](https://github.com/lodash/lodash) from 4.17.4 to 4.17.13.
<details>
<summary>Commits</summary>

- [`e371828`](https://github.com/lodash/lodash/commit/e37182845f16715a0d1c391c8662d83c55609cee) Bump to v4.17.13.
- [`357e899`](https://github.com/lodash/lodash/commit/357e899e685872b4af5403ecc4b2a928f961ae63) Rebuild lodash and docs.
- [`fd9a062`](https://github.com/lodash/lodash/commit/fd9a062d57646450b61f74029315abd4cc834b08) Bump to v4.17.12.
- [`e77d681`](https://github.com/lodash/lodash/commit/e77d68121ff00ba86b53eed5893d35adfe94c9dd) Rebuild lodash and docs.
- [`629d186`](https://github.com/lodash/lodash/commit/629d1865793182cd967196716f4beff223aa4a91) Update OpenJS references.
- [`2406eac`](https://github.com/lodash/lodash/commit/2406eac542b2a1282be8d812a6d8a45433ade80a) Fix minified build.
- [`17a34bc`](https://github.com/lodash/lodash/commit/17a34bc5854bb982ef333bfe7ae469f4dfcee0ec) Fix test bootstrap for core build.
- [`53838a3`](https://github.com/lodash/lodash/commit/53838a38f8e4f6204ef2f837fecc4e07d09afe77) Fix tests in older browsers.
- [`29e2584`](https://github.com/lodash/lodash/commit/29e258497b5ff45494a85cfa58743517aaeeff52) Fix style:test lint nits.
- [`8f4d3eb`](https://github.com/lodash/lodash/commit/8f4d3eb018884d96eb57fba3f724bfff494df724) Update deps.
- Additional commits viewable in [compare view](https://github.com/lodash/lodash/compare/4.17.4...4.17.13)
</details>
<br />

[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=lodash&package-manager=npm_and_yarn&previous-version=4.17.4&new-version=4.17.13)](https://help.github.com/articles/configuring-automated-security-fixes)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot ignore this [patch|minor|major] version` will close this PR and stop Dependabot creating any more for this minor/major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language
- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language
- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language
- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language

You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/react-native-ar/react-native-arkit/network/alerts).

</details>
Hi,

I have used the library for the last couple of weeks and built and pretty interesting application. I would like share some code that will benefit most of the people using the library on object manipulation; specifically tapping on any object rendered and moving it around at will

```
objectToMove = ''

    constructor(props) {
        super(props)

        this.state = {
            objects: [], //add objects or models here
            tapPosition: {x: 0, y: 0, z: 0},
            objectId: ''
        }
    }

handleResponderMove = (e) => {
        this.hitTest({ x: e.nativeEvent.pageX, y: e.nativeEvent.pageY })
    }
    
    hitTest = async (location) => {
        const hits = await ARKit.hitTestPlanes(location, 1)
        const result = await ARKit.hitTestSceneObjects(location);

        // Detect hit on object
        if (result.results.length) {
            let id = result.results[0].id
            this.state.objects.forEach((element) => {
                if (element.props.id === id){   
                    this.objectToMove = id
                }
            })
        }

        // Update position on plane hit
        if (hits.results.length) {
            let x = hits.results[0].position.x * 10
            let y = hits.results[0].position.y * 10
            let z = hits.results[0].position.z * 10
            let pos = { x: x, y: y, z: z };

            this.setState({
                tapPosition: pos
            })
        }

renderElements = () => {
        return this.state.objects.map(element => {
            if (element.props.id === this.objectToMove){
                console.log(element)
                element.props.position.x = this.state.tapPosition.x
                element.props.position.y = this.state.tapPosition.y
                element.props.position.z = this.state.tapPosition.z
                element.props.eulerAngles.y = this.state.rotationY
                return element
            }
            else {
                return element   
            }
        })

 <View
                    style={{flex: 1}}
                    onResponderMove={this.handleResponderMove.bind(this)}
                    onStartShouldSetResponder={() => true}
                    onMoveShouldSetResponder={() => false}
                >
                    <ARKit
                        style={{ flex: 1 }}
                        planeDetection={ARKit.ARPlaneDetection.Horizontal}
                        lightEstimationEnabled
                    >
                        <ARKit.Group position={{ x: 0, y: 0, z: 0 }} scale={0.1}>
                            {this.renderElements()}                            
                        </ARKit.Group>
                        <ARKit.Light
                            position={{ x: 0, y: 15, z: 40 }}
                            type={ARKit.LightType.Omni}
                            color="white"
                        />
                    </ARKit>
</View>
```
Same error for me with same version of react-native.
This package is awesome but not works with last version of react-native.

Need to improve this package for works with last version please !

Thanks

_Originally posted by @WestFR in https://github.com/react-native-ar/react-native-arkit/issues/201#issuecomment-515003850_
It throws RCTConvert.h not found at first line of color-grabber. 
Manually linked the library, using react-native 0.60.3.

Any ideas?
These two properties of material were not bound.  Now you can control the texture per-pixel transparency and emission from javascript.
Hi,

I tried to get the position and the eulerAngles of the image I detect with the event listener "onAnchorDetected" here is my code

```
render() {
    console.log("render");
    return (
      <View style={styles.container}>
        <ARKit
          style={{ flex: 1 }}
          debug
          onAnchorDetected={anchor => this.imageDetected(anchor)}
          onAnchorUpdated={anchor => this.imageDetected(anchor)}
          detectionImages={[{ resourceGroupName: 'DetectionImages' }]}
          onARKitError={console.log} >
        </ARKit>
      </View>

    );
  }
```

```
imageDetected = (anchor) => {
    console.log(anchor);
  }
```

Here is what the console return :
for the onAnchorDetected
<img width="1197" alt="Screenshot 2019-06-05 at 11 22 50" src="https://user-images.githubusercontent.com/32643369/58945545-5996d200-8784-11e9-9956-f5d6d05946a6.png">

for the onAnchorUpdated
<img width="1215" alt="Screenshot 2019-06-05 at 11 24 41" src="https://user-images.githubusercontent.com/32643369/58945635-8c40ca80-8784-11e9-8b4b-d1dddd4d93f1.png">

Here we can see that the onAnchorUpdated return the correct values and when the event is called after the values update properly.

Thank you
I have done simple things:

(1) react-native init MyApp

(2) yarn add react-native-arkit

But libRCTARKIT. a  shows not founded.

<img width="497" alt="Screen Shot 2019-04-24 at 6 49 24 PM" src="https://user-images.githubusercontent.com/205781/56699310-fd3f8d80-66c2-11e9-99a8-4482f0f37823.png">

My Xcode is 

<img width="939" alt="Screen Shot 2019-04-24 at 6 59 13 PM" src="https://user-images.githubusercontent.com/205781/56699338-13e5e480-66c3-11e9-8e4a-2f1853fe4028.png">

Please help!!


First of all thank you very much for a great library! Having a question here.
Is it possible to access the child elements of the .dae or .scn models loaded using the `ARKit.Model` component?
I can build my demo app but unable to run on a device. I get the following: 

`dyld: Library not loaded: @rpath/PocketSVG.framework/PocketSVG
  Referenced from: /var/containers/Bundle/Application/D9192E4B-C3DA-4520-AF0C-C9B10545F85C/RNArkitApp.app/RNArkitApp
  Reason: image not found`

![image](https://user-images.githubusercontent.com/17223788/50237954-d293a000-0383-11e9-8806-a99adb06452a.png)

![image](https://user-images.githubusercontent.com/17223788/50237968-d8898100-0383-11e9-9bd9-3c5dc63dcb30.png)

I have the PocketSVG.xcodeproj added per the manual instructions. Is there an extra step that I'm missing? 

react-native-cli: 2.0.1
react-native: 0.57.8
react-native-arkit: ^0.9.0
react: 16.6.3
Xcode version: 10.1 (10B61)
iOS version: 12
Device: iPhone X
Hi,

I've tried to use this library but I got this error when I start my app:

```
ARSCNView *arView = [[ARSCNView alloc] init]; // ERROR: Thread 1: EXC_BAD_ACCESS (code=1, address=0x48)
```

Could you please help me?

Many Thanks
Marcus
