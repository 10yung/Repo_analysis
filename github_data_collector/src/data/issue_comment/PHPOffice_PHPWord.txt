How can I build [column chart like that](http://prntscr.com/qo41nm)?
I need to place items from each of series side by side.
My code:
```
$section = $phpWord->addSection();
$categories = array('A', 'B', 'C', 'D', 'E');
$series1 = array(5, 3, 4, 2, 7);
$series2 = array(15, 2, 9, 5, 9);
$chart = $section->addChart('column', $categories, $series1);
$chart->getStyle()->setWidth(Converter::inchToEmu(2.5))->setHeight(Converter::inchToEmu(2));
$chart->addSeries($categories,$series2);
```

My result [on this link](http://prntscr.com/qo46by)

The same with 'bar' type.
I'm using phpword to generate documents and I am trying to figure out how I can add padding between the the number/bullet of the list item and the paragraph that follows?

I've tried using paragraph styling like indentation and spaceBefore, but all of them will indent the list item number along with the paragraph and not add space between the two. I've read through the documentation and looked into multiple examples, but could not find a solution that would work for me.

Any advice would be appreciated.
Thanks in advance! 
### Describe the Bug

I'm creating a word document containing a table with multiples cells containing HTML. I'm using PhpOffice\PhpWord\Shared\Html::addHtml() to add html to the cell. I'm using br  tag to add breakline. Everything with the Writer is working correctly (The Word document is showing breakline correctly).

The problem happen on the Reader. When I read the cell values, I got every elements but all TextBreak are missing.

### Steps to Reproduce

To understand the problem, just before save the document, I parse the phpWord object variable to find the elements save in the cells.

```php
var_dump($phpWord->getSection(1)->getElement(0)->getRows()[4]->getCells()[2]->getElements(0)[0]->getElements()[0])
```

The dump is :

```php
array (size=12)
          0 => 
            object(PhpOffice\PhpWord\Element\Text)[1062]
              ...
          1 => 
            object(PhpOffice\PhpWord\Element\Link)[1060]
              ...
          2 => 
            object(PhpOffice\PhpWord\Element\Text)[1067]
              ...
          3 => 
            object(PhpOffice\PhpWord\Element\Link)[1069]
              ...
          4 => 
            object(PhpOffice\PhpWord\Element\Text)[1073]
              ...
          5 => 
            object(PhpOffice\PhpWord\Element\TextBreak)[1077]
              ...
          6 => 
            object(PhpOffice\PhpWord\Element\TextBreak)[1078]
              ...
          7 => 
            object(PhpOffice\PhpWord\Element\Text)[1079]
              ...
          8 => 
            object(PhpOffice\PhpWord\Element\Link)[1061]
              ...
          9 => 
            object(PhpOffice\PhpWord\Element\TextBreak)[1084]
              ...
          10 => 
            object(PhpOffice\PhpWord\Element\TextBreak)[1082]
              ...
          11 => 
            object(PhpOffice\PhpWord\Element\Link)[1075]
```

When I read the Word document, I fetch the same exact cell values. And the dump is :

```php
array (size=8)
  0 => string 'PhpOffice\PhpWord\Element\Text' (length=30)
  1 => string 'PhpOffice\PhpWord\Element\Link' (length=30)
  2 => string 'PhpOffice\PhpWord\Element\Text' (length=30)
  3 => string 'PhpOffice\PhpWord\Element\Link' (length=30)
  4 => string 'PhpOffice\PhpWord\Element\Text' (length=30)
  5 => string 'PhpOffice\PhpWord\Element\Text' (length=30)
  6 => string 'PhpOffice\PhpWord\Element\Link' (length=30)
  7 => string 'PhpOffice\PhpWord\Element\Link' (length=30)
```

We can see that two TextBreak are missing from the previous dump.

For reading, I'm using PhpOffice\PhpWord\IOFactory::load($filepath) method.

Maybe I'm not using the correct method.

If you have a chance to look that will be very appreciate.

Thank you !



Please fill in your environment information:

- PHP Version: 7.2
- PHPWord Version: 0.17.0

Hello, 

I try to include inside of a Word template a simple text with titles (text and titles generated dynamically by PHP and integrated in a "nice" Word file). 

Everything went well, I've used the `TemplateProcessor` and its `setComplexBlock`.
However,  in the generated document, the "titles" are not really appearing as Titles but as simple text. I see that the XML generated contains the style "Heading1" but simple text appears inside  Microsoft Word ...  

Here some sample code : 

```
$pw = new PhpWord();
$mainSection = $pw->addSection();

// I fill my section with titles and content
$mainSection->addTitle('First Chapter', 1);
$textrun = $mainSection->addTextRun('pStyle');
$textrun->addText('Lorem ipsum....');
$mainSection->addTitle('Second Chapter', 2);
$textrun = $mainSection->addTextRun('pStyle');
$textrun->addText('Second Lorem ipsum....');

// Set my section inside the template
$templateProcessor = new TemplateProcessor($myTemplatePath);
$container = new Container($mainSection); // (explained below)
templateProcessor->setComplexBlock("my-content-here", $container);
templateProcessor->save();
```

🙏🏼 **Have you ever meet that type of problem ? Do I miss something ?** 

----

**Note** : 

You will notice that I use a "Container". It's because PhpWord don't let me to give my object `$mainSection` as second argument of `setComplexBlock(`.  I will have a error `"Attempted to load class "Section" from namespace "PhpOffice\PhpWord\Writer\Word2007\Element"."` (I guess it is normal, there is no Section.php class in the Writer Elements of PhpWord).
 
Then, I have created a `Container` (see code below) : it is a simple Class that extend the `PhpWord\Element\Section` and forwards the section's elements.  

```
class Container extends \PhpOffice\PhpWord\Element\Section
{
    public function __construct($section)
    {
        parent::__construct($section->getSectionId());
        $this->elements = $section->getElements();
    }
}
```



### Description
Reference Issue:   #1800 
When you have multiple Blocks in multiple Rows, some of blocks cannot be replaced
Only the last block was replaced.
This because some word file will drop-line after `xml` tag, and the regular expression engine in different versions cannot find the matched block.

Fixes # (issue)
File: `TemplateProcessor.php`
Line: 740

Change the regexp pattern to: 
```php
'/(.*((?s)<w:p\b(?:(?!<w:p\b).)*?\${' . $blockname . '}<\/w:.*?p>))(.*)((?s)<w:p\b(?:(?!<w:p\b).)*?\${\/' . $blockname . '}<\/w:.*?p>)/is',
```
Describe: 
- Do not find for xml.
- Start find the `<w:p` tag that closest to the blockname.
- This `<w:p` does not contain any other `<w:p` inside it.

### Checklist:
All Done

- [x] I have run `composer run-script check --timeout=0` and no errors were reported
- [x] The new code is covered by unit tests (check build/coverage for coverage report)
- [x] I have updated the documentation to describe the changes

### Describe the Bug

When you have multiple Blocks in multiple Rows, some of blocks cannot be replaced
Only the last block was replaced. 
This because some word file will drop-line after `xml` tag, and the regular expression engine in different versions cannot find the matched block.

### Steps to Reproduce

See the image below, only blocks `#6` has been replaced. 
- **TemplateProcessor** 
- The template has a table with clone rows. Each row has different dynamic data. 
- The blocks name in each row will be `block#1`, `block#2`,... 

<img width="314" alt="screenshot" src="https://user-images.githubusercontent.com/5735071/71869492-d1771180-3144-11ea-8556-7de419406245.png">

```php
<?php
...
$this->processor->cloneRow('client', $amount);
for (...) {
    $suffix = '#' . ($i + 1);
    // block_year.
    $this->processor->cloneBlock('block_year' . $suffix);
}
```

### Expected Behavior

Replaced all Blocks 

### Current Behavior

Only blocks in the last row was replaced

### Context

Please fill in your environment information:

- PHP Version: 7.3.9
- PHPWord Version: 0.17.0

### Fix & Pull Request:
File: `TemplateProcessor.php`
Line: 740

Change the regexp pattern to: 
```php
'/(.*((?s)<w:p\b(?:(?!<w:p\b).)*?\${' . $blockname . '}<\/w:.*?p>))(.*)((?s)<w:p\b(?:(?!<w:p\b).)*?\${\/' . $blockname . '}<\/w:.*?p>)/is',
```

Describe: 
- Do not find for xml.
- Start find the `<w:p` tag that closest to the blockname.
- This `<w:p` does not contain any other `<w:p` inside it.

After fix: 
<img width="298" alt="fixed" src="https://user-images.githubusercontent.com/5735071/71870169-84486f00-3147-11ea-926f-3be5ba3c25bf.png">

Hope this helps.

### Description

Word2007 Reader didn't read images where pictures was between <wp:anchor>, accepction only with <wp:inline>. 

The OpenOffice XML docs says:

> The XML for placement of the picture (e.g., whether it is inline [**<wp:inline>**] or anchored [**<wp:anchor>**]) is within the wordprocessing drawingML namespace: xmlns:wp="http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing".

Improved tests to be capable of read images from docs generated by ```AbstractTestReader::getDocumentFromString```

### Checklist:

- [x] I have run `composer run-script check --timeout=0` and no errors were reported
- [x] The new code is covered by unit tests (check build/coverage for coverage report)
- [ ] I have updated the documentation to describe the changes

Would fix https://github.com/PHPOffice/PHPWord/issues/1797

### Description

Fixes the abandoned project from zendwork

Fixes # (issue)
https://github.com/PHPOffice/PHPWord/issues/1797

### Checklist:

Against develop they run into errors. Against master they work.
- [x] I have run `composer run-script check --timeout=0` and no errors were reported
- [x] The new code is covered by unit tests (check build/coverage for coverage report)
- [ ] I have updated the documentation to describe the changes

### Describe the Bug

Package zendframework/zend-escaper is abandoned, you should avoid using it. Use laminas/laminas-escaper instead.

### Steps to Reproduce

Simply install or update via composer update/composer install

### Expected Behavior

It shouldn't warn for an abandoned package

### Current Behavior

Showing the following warning:
Package zendframework/zend-escaper is abandoned, you should avoid using it. Use laminas/laminas-escaper instead.

### Context

Please fill in your environment information:

- PHP Version: 7.4.1
- PHPWord Version: 0.17.0

Implement a number of features implemented in PhpWord,
   but not yet supported in PhpWord ODT Writer.
1. Add default file to tests/PhpWord/_includes/XmlDocument.php to make it
   considerably easier to test ODT changes (and Word2007 changes involving
   files other that document.xml).
2. Page break before each section.
3. Page numbering start.
4. Font style for Headings.
5. Alignment for images.
6. Paragraph style for TextRun.
7. "Hide grammatical errors" for whole document.
8. Page layout for each section.
9. For each page layout, support user-specified page width, page height,
   orientation, margin top, margin bottom, margin left, margin right.
10. Page header and footer.
11. Named colors.
12. NoProof font style.
13. Paragraph Style - spaceBefore, spaceAfter, lineHeight, pageBreakBefore,
    indentation, text alignment.
14. Tab stops.
15. Basic support for some Fields (DATE, PAGE, NUMPAGES).
16. Link had an error in how it was handling internal links (needs leading #).
17. In addition to tests for all the above, added some tests for Tables.

Item 11 above needs 1 module from Pull Request 1775, which is targeted
    for v0.18.0 but not yet merged, so the relevant module is also here.
Item 15 above needs 1 module from Pull Request 1774, which is targeted
    for v0.18.0 but not yet merged, so the relevant module is also here.
Testing change from Pull Request 1771 is included here, but was
    merged after my fork.

### Description

Please include a summary of the change and which issue is fixed. Please also include relevant motivation and context.

Fixes # (issue)

### Checklist:

- [X] I have run `composer run-script check --timeout=0` and no errors were reported
- [X] The new code is covered by unit tests (check build/coverage for coverage report)
- [ ] I have updated the documentation to describe the changes
