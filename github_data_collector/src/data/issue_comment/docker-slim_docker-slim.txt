When I try to shrink the application docker image based on the `node:12-alpine`.

After I try to start the slim docker container, it through the error:
```
Post https://kms.ap-southeast-2.amazonaws.com/: x509: certificate signed by unknown authority
```

What's wrong with this?
~This includes https://github.com/docker-slim/docker-slim/pull/122 https://github.com/docker-slim/docker-slim/commit/452e0a2ca8126c52cf6fbd8d43a7d816bd04cedb~

golangci-lint: https://github.com/golangci/golangci-lint

Sample of the result of CircleCI: https://circleci.com/gh/suzuki-shunsuke/docker-slim/5

To use CircleCI, we have to enable CircleCI.
I'm getting a bunch of `Module does not exist` issue after doing:

```ssh
docker-slim build thecodingmachine/php:7.3-v2-apache-node12
```
 
Running the slim container returns:
```
ERROR: Module actions does not exist!
ERROR: Module allowmethods does not exist!
ERROR: Module asis does not exist!
ERROR: Module auth_digest does not exist!
.
.
.
ERROR: Module substitute does not exist!
ERROR: Module suexec does not exist!
ERROR: Module unique_id does not exist!
ERROR: Module userdir does not exist!
ERROR: Module usertrack does not exist!
ERROR: Module vhost_alias does not exist!
ERROR: Module xml2enc does not exist!
```

Am I missing something? 

Thanks
Hi,

I've created simple java project with quarkus(https://quarkus.io/guides/getting-started). If I build image with quarkus native mode I can successfully  build slim image but if I use jvm based image it fails to run after  build-slim process

Steps:

1.Create project 
```
mvn io.quarkus:quarkus-maven-plugin:1.1.0.Final:create \
    -DprojectGroupId=org.acme \
    -DprojectArtifactId=getting-started \
    -DclassName="org.acme.quickstart.GreetingResource" \
    -Dpath="/hello"
cd getting-started
```

2. Build java app
`./mvnw package -DskipTests=true
`
3. Build docker image(JVM based)
`docker build -f src/main/docker/Dockerfile.jvm -t quarkus/getting-started-jvm .
`
4. docker-slim

`docker-slim build  --http-probe=false quarkus/getting-started-jvm
`
5. Run and got the error:
`docker run quarkus/getting-started-jvm.slim
`"Error occurred during initialization of VM
Could not find agent library instrument on the library path, with error: Error loading shared library libinstrument.so: No such file or directory"


Is may be related with this issue https://github.com/docker-slim/docker-slim/issues/80 but not sure...

Note:
```
Dockerfile generated by quarkus

FROM fabric8/java-alpine-openjdk8-jre:1.6.5
ENV JAVA_OPTIONS="-Dquarkus.http.host=0.0.0.0 -Djava.util.logging.manager=org.jboss.logmanager.LogManager"
ENV AB_ENABLED=jmx_exporter

# Be prepared for running in OpenShift too
RUN adduser -G root --no-create-home --disabled-password 1001 \
  && chown -R 1001 /deployments \
  && chmod -R "g+rwX" /deployments \
  && chown -R 1001:root /deployments

COPY target/lib/* /deployments/lib/
COPY target/*-runner.jar /deployments/app.jar
EXPOSE 8080

# run with user 1001
USER 1001

ENTRYPOINT [ "/deployments/run-java.sh" ]
```


Thanks



Given [this Dockerfile](https://github.com/umccr/umccrise/blob/master/dockerfiles/Dockerfile), after running `docker-slim` (via [AWS CodeBuild BuildSpec CI/CD file](https://github.com/umccr/umccrise/blob/master/buildspec.yml)) it seems to let go of `/bin/sh`... can anybody explain why before I delve into the code and general docker-slim strategy? :)

Unsure but perhaps related (and good repro) for issue https://github.com/docker-slim/docker-slim/issues/14? I am using the following docker-slim command line:

```
docker run -v /var/run/docker.sock:/var/run/docker.sock dslim/docker-slim --in-container build --http-probe=false $ECR:umccrise-$CODEBUILD_GIT_TAG-$SHORT_COMMIT_HASH --tag $ECR:umccrise-$CODEBUILD_GIT_TAG-$SHORT_COMMIT_HASH.slim
```

Happy to share further logs and context for this if needed, cheers!

```
[Container] 2019/12/18 11:03:58 Running command docker run -v /var/run/docker.sock:/var/run/docker.sock dslim/docker-slim --in-container build --http-probe=false $ECR:umccrise-$CODEBUILD_GIT_TAG-$SHORT_COMMIT_HASH --tag $ECR:umccrise-$CODEBUILD_GIT_TAG-$SHORT_COMMIT_HASH.slim 
Unable to find image 'dslim/docker-slim:latest' locally 
latest: Pulling from dslim/docker-slim 
282d05007e0d: Pulling fs layer 
282d05007e0d: Download complete 
282d05007e0d: Pull complete 
Digest: sha256:d3fd45591048cc59e9e1494835db461e0068fb777537ef014854f7423e192772 
Status: Downloaded newer image for dslim/docker-slim:latest 
time="2019-12-18T11:04:14.693489331Z" level=info msg="shim containerd-shim started" address="/containerd-shim/moby/4dd2f2ab41a777868270d6927169e50a20e781604817aa81dd52659e45fc0575/shim.sock" debug=false pid=9525  
docker-slim[build]: info=probe message='changing continue-after from probe to enter because http-probe is disabled' 
docker-slim[build]: state=started 
docker-slim[build]: info=params target=843407916570.dkr.ecr.ap-southeast-2.amazonaws.com/umccr:umccrise-NOTAG-715441723b continue.mode=enter 
docker-slim[build]: state=image.inspection.start 
docker-slim[build]: info=image id=sha256:8004f3f670ac0713425d41884881066e0fe82b2a014f0b0105be26f73eb283aa size.bytes=11116957340 size.human=11 GB 
docker-slim[build]: info=image.stack index=0 name='ubuntu:16.04' id='sha256:56bab49eef2ef07505f6a1b0d5bd3a601dfc3c76ad4460f24c91d6fa298369ab' 
docker-slim[build]: info=image.stack index=1 name='843407916570.dkr.ecr.ap-southeast-2.amazonaws.com/umccr:umccrise-NOTAG-715441723b' id='sha256:8004f3f670ac0713425d41884881066e0fe82b2a014f0b0105be26f73eb283aa' 
docker-slim[build]: state=image.inspection.done 
docker-slim[build]: state=container.inspection.start 
time="2019-12-18T11:04:15.227149616Z" level=info msg="Layer sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef cleaned up" 
docker-slim[build]: info=container status=created name=dockerslimk_1_20191218110415 id=3dc9cb664879bae30040b556d873a1d064ab773f0532b853ba9217c952385315 
time="2019-12-18T11:04:15.706991243Z" level=info msg="shim containerd-shim started" address="/containerd-shim/moby/3dc9cb664879bae30040b556d873a1d064ab773f0532b853ba9217c952385315/shim.sock" debug=false pid=9648  
docker-slim[build]: info=cmd.startmonitor status=sent 
docker-slim[build]: info=event.startmonitor.done status=received 
docker-slim[build]: info=container name=dockerslimk_1_20191218110415 id=3dc9cb664879bae30040b556d873a1d064ab773f0532b853ba9217c952385315 target.port.list=[] target.port.info=[] message='YOU CAN USE THESE PORTS TO INTERACT WITH THE CONTAINER' 
docker-slim[build]: info=continue.after mode=enter message='provide the expected input to allow the container inspector to continue its execution' 
docker-slim[build]: info=prompt message='USER INPUT REQUIRED, PRESS <ENTER> WHEN YOU ARE DONE USING THE CONTAINER' 
docker-slim[build]: state=container.inspection.finishing 
time="2019-12-18T11:04:26.240596977Z" level=info msg="shim reaped" id=3dc9cb664879bae30040b556d873a1d064ab773f0532b853ba9217c952385315  
time="2019-12-18T11:04:26.250872768Z" level=info msg="ignoring event" module=libcontainerd namespace=moby topic=/tasks/delete type="*events.TaskDelete" 
time="2019-12-18T11:04:26.371559824Z" level=warning msg="3dc9cb664879bae30040b556d873a1d064ab773f0532b853ba9217c952385315 cleanup: failed to unmount IPC: umount /var/lib/docker/containers/3dc9cb664879bae30040b556d873a1d064ab773f0532b853ba9217c952385315/mounts/shm, flags: 0x2: no such file or directory" 
docker-slim[build]: state=container.inspection.artifact.processing 
docker-slim[build]: state=container.inspection.done 
docker-slim[build]: state=building message='building minified image' 
time="2019-12-18T11:04:28.626526431Z" level=info msg="Layer sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef cleaned up" 
time="2019-12-18T11:04:29.774991031Z" level=info msg="Layer sha256:34a39f193026946bf7c4c3cf7bbce187fac1ac1cb0074178660c31a2db4c2d70 cleaned up" 
time="2019-12-18T11:04:29.994522372Z" level=info msg="Layer sha256:34a39f193026946bf7c4c3cf7bbce187fac1ac1cb0074178660c31a2db4c2d70 cleaned up" 
time="2019-12-18T11:04:30.159216667Z" level=info msg="Layer sha256:34a39f193026946bf7c4c3cf7bbce187fac1ac1cb0074178660c31a2db4c2d70 cleaned up" 
time="2019-12-18T11:04:30.326488749Z" level=info msg="Layer sha256:34a39f193026946bf7c4c3cf7bbce187fac1ac1cb0074178660c31a2db4c2d70 cleaned up" 
time="2019-12-18T11:04:30.486972939Z" level=info msg="Layer sha256:34a39f193026946bf7c4c3cf7bbce187fac1ac1cb0074178660c31a2db4c2d70 cleaned up" 
time="2019-12-18T11:04:30.679525373Z" level=info msg="Layer sha256:34a39f193026946bf7c4c3cf7bbce187fac1ac1cb0074178660c31a2db4c2d70 cleaned up" 
time="2019-12-18T11:04:30.850356790Z" level=info msg="Layer sha256:34a39f193026946bf7c4c3cf7bbce187fac1ac1cb0074178660c31a2db4c2d70 cleaned up" 
time="2019-12-18T11:04:31.026751110Z" level=info msg="Layer sha256:34a39f193026946bf7c4c3cf7bbce187fac1ac1cb0074178660c31a2db4c2d70 cleaned up" 
time="2019-12-18T11:04:31.207166347Z" level=info msg="Layer sha256:34a39f193026946bf7c4c3cf7bbce187fac1ac1cb0074178660c31a2db4c2d70 cleaned up" 
docker-slim[build]: state=completed 
docker-slim[build]: info=results status='MINIFIED BY 195.52X [11116957340 (11 GB) => 56859375 (57 MB)]' 
docker-slim[build]: info=results  image.name=843407916570.dkr.ecr.ap-southeast-2.amazonaws.com/umccr:umccrise-NOTAG-715441723b.slim image.size='57 MB' data=true 
docker-slim[build]: info=results  artifacts.location='/bin/.docker-slim-state/images/8004f3f670ac0713425d41884881066e0fe82b2a014f0b0105be26f73eb283aa/artifacts' 
docker-slim[build]: info=results  artifacts.report=creport.json 
docker-slim[build]: info=results  artifacts.dockerfile.original=Dockerfile.fat 
docker-slim[build]: info=results  artifacts.dockerfile.new=Dockerfile 
docker-slim[build]: info=results  artifacts.seccomp=843407916570.dkr.ecr.ap-southeast-2.amazonaws.com-umccr-seccomp.json 
docker-slim[build]: info=results  artifacts.apparmor=843407916570.dkr.ecr.ap-southeast-2.amazonaws.com-umccr-apparmor-profile 
docker-slim[build]: state=done 
docker-slim[build]: info=report file='slim.report.json' 
time="2019-12-18T11:04:31.860561642Z" level=info msg="shim reaped" id=4dd2f2ab41a777868270d6927169e50a20e781604817aa81dd52659e45fc0575  
time="2019-12-18T11:04:31.870663861Z" level=info msg="ignoring event" module=libcontainerd namespace=moby topic=/tasks/delete type="*events.TaskDelete" 
time="2019-12-18T11:04:32.015253963Z" level=warning msg="4dd2f2ab41a777868270d6927169e50a20e781604817aa81dd52659e45fc0575 cleanup: failed to unmount IPC: umount /var/lib/docker/containers/4dd2f2ab41a777868270d6927169e50a20e781604817aa81dd52659e45fc0575/mounts/shm, flags: 0x2: no such file or directory" 
 
[Container] 2019/12/18 11:04:32 Running command docker run -t --cpus 4 -v=$PWD/umccrise_test_data/results/bcbio_test_project_docker:/output_dir -v=$PWD/umccrise_test_data/data/bcbio_test_project:/bcbio_project -v=/codebuild/output/refdata/genomes:/work/genomes $ECR:umccrise-$CODEBUILD_GIT_TAG-$SHORT_COMMIT_HASH.slim /bcbio_project -o /output_dir --genomes /work/genomes 
time="2019-12-18T11:04:32.208887900Z" level=info msg="shim containerd-shim started" address="/containerd-shim/moby/e23f682c233a8f2cb5a9a5c3b32da605ad6be0c653b29e6266982fe20145f714/shim.sock" debug=false pid=9926  
Error processing line 1 of //miniconda/envs/umccrise/lib/python3.7/site-packages/matplotlib-3.1.1-py3.7-nspkg.pth: 
 
  Traceback (most recent call last): 
    File "//miniconda/envs/umccrise/lib/python3.7/site.py", line 168, in addpackage 
      exec(line) 
    File "<string>", line 1, in <module> 
    File "<frozen importlib._bootstrap>", line 580, in module_from_spec 
  AttributeError: 'NoneType' object has no attribute 'loader' 
 
Remainder of file ignored 
umccrise_docker 
NOUSER 
 
/miniconda/envs/umccrise/bin/umccrise /bcbio_project -o /output_dir --genomes /work/genomes 
 
---------------------------------------------------------------------- 
Using genomes directory: /work/genomes 
snakemake  --snakefile /umccrise/umccrise/Snakefile --printshellcmds --directory /output_dir -j 1 --rerun-incomplete --restart-times 2  --config bcbio_project=/bcbio_project genomes_dir=/work/genomes upload_igv=no total_cores=1  
Traceback (most recent call last): 
  File "/miniconda/envs/umccrise/bin/umccrise", line 7, in <module> 
    exec(compile(f.read(), __file__, 'exec')) 
  File "/umccrise/scripts/umccrise", line 230, in <module> 
    main() 
  File "//miniconda/envs/umccrise/lib/python3.7/site-packages/click/core.py", line 764, in __call__ 
    return self.main(*args, **kwargs) 
  File "//miniconda/envs/umccrise/lib/python3.7/site-packages/click/core.py", line 717, in main 
    rv = self.invoke(ctx) 
  File "//miniconda/envs/umccrise/lib/python3.7/site-packages/click/core.py", line 956, in invoke 
    return ctx.invoke(self.callback, **ctx.params) 
  File "//miniconda/envs/umccrise/lib/python3.7/site-packages/click/core.py", line 555, in invoke 
    return callback(*args, **kwargs) 
  File "/umccrise/scripts/umccrise", line 193, in main 
    run_simple(cmd) 
  File "//miniconda/envs/umccrise/lib/python3.7/site-packages/ngs_utils/call_process.py", line 20, in run_simple 
    subprocess.check_call(cmd, shell=shell_arg, executable=executable_arg, env=env) 
  File "//miniconda/envs/umccrise/lib/python3.7/subprocess.py", line 342, in check_call 
    retcode = call(*popenargs, **kwargs) 
  File "//miniconda/envs/umccrise/lib/python3.7/subprocess.py", line 323, in call 
    with Popen(*popenargs, **kwargs) as p: 
  File "//miniconda/envs/umccrise/lib/python3.7/subprocess.py", line 775, in __init__ 
    restore_signals, start_new_session) 
  File "//miniconda/envs/umccrise/lib/python3.7/subprocess.py", line 1522, in _execute_child 
    raise child_exception_type(errno_num, err_msg, err_filename) 
FileNotFoundError: [Errno 2] No such file or directory: '/bin/sh': '/bin/sh' 
time="2019-12-18T11:04:32.735786323Z" level=info msg="shim reaped" id=e23f682c233a8f2cb5a9a5c3b32da605ad6be0c653b29e6266982fe20145f714  
time="2019-12-18T11:04:32.745838556Z" level=info msg="ignoring event" module=libcontainerd namespace=moby topic=/tasks/delete type="*events.TaskDelete" 
time="2019-12-18T11:04:32.895191383Z" level=warning msg="e23f682c233a8f2cb5a9a5c3b32da605ad6be0c653b29e6266982fe20145f714 cleanup: failed to unmount IPC: umount /var/lib/docker/containers/e23f682c233a8f2cb5a9a5c3b32da605ad6be0c653b29e6266982fe20145f714/mounts/shm, flags: 0x2: no such file or directory" 
```
Hello maybe i'am missing something buth after creating a .slim image all the things that should be present on it are not. For example there is not apt even is the build is base on `debian` no python found. Do not understand why everything that I have installed in my image disapear after being _slimmed_.

Here the command i am issuing to create the img. 

```shell
docker-slim build  -include-path="/bin" --include-path="/sbin" --include-path="/lib" --http-probe=false --continue-after=3 XXX/debian-10-builder:test
```
```shell
docker run -it XXX/ansible.slim bash
bash-5.0# python
bash: python: command not found
bash-5.0# apt
bash: apt: command not found
```
Maybe i'am doing something wrong but cannot understand my mistake. 




I have a Ruby app based on `ruby:2.5.3-alpine` with a `CMD` that cannot find bundler.

It's being built as:

`docker-slim build --http-probe --include-shell --include-exe sleep --include-exe grep --include-exe jq --include-exe /usr/local/bin/bundle myapp`

CMD:

`CMD ["./scripts/server.sh"]`

server.sh:

```
#!/bin/sh

# Starting puma server
bundle exec puma -C config/puma.rb
```

I'm not sure if `--include-exe` pointing to bundler's absolute path is _correct_. I also tried `--include-bin` without success.

When running docker-compose pointing to `my-app.slim`, it raises the following error:

`my-app | ./scripts/server.sh: line 4: bundle: not found`

```
Client: Docker Engine - Community
 Version:           19.03.4
 API version:       1.40
 Go version:        go1.12.10
 Git commit:        9013bf5
 Built:             Thu Oct 17 23:44:48 2019
 OS/Arch:           darwin/amd64
 Experimental:      false
```

Let me know if you have any idea. Thanks in advance!
This same setup works fine on my MacBook Pro - same Dockerfile and build, same docker-slim invocation. I'm trying to get the same setup to work in CodeBuild. It may be worth mentioning - could be related - that the image I'm building is for armhf but I'm running on x86_64 on the host.

Here's the output when I run in CodeBuild:

```
[Container] 2019/12/12 06:34:34 Running command /tmp/docker-slim build --http-probe=false --continue-after 20 mosquitto 
docker-slim[build]: state=started 
docker-slim[build]: info=params target=mosquitto continue.mode=timeout 
docker-slim[build]: state=image.inspection.start 
docker-slim[build]: info=image id=sha256:91b3503e148d20dc7fb30893771a0d653498f4d3efc53d066447c22a38207ecc size.bytes=178925852 size.human=179 MB 
docker-slim[build]: info=image.stack index=0 name='balenalib/armv7hf-alpine:3.9-run' id='sha256:ab2e215257f0e5ad3a590e54ab721b7e4b6195b52dad28a21fb5ad65450145c7' 
docker-slim[build]: info=image.stack index=1 name='mosquitto:latest' id='sha256:91b3503e148d20dc7fb30893771a0d653498f4d3efc53d066447c22a38207ecc' 
docker-slim[build]: info=image.exposed_ports list='1883,8883' 
docker-slim[build]: state=image.inspection.done 
docker-slim[build]: state=container.inspection.start 
docker-slim[build]: info=container status=created name=dockerslimk_2107_20191212063435 id=49e3da49e38b0de1212657b2d33a5b3dd5e03114236f4b7917a0013e3d4d29a1 
docker-slim[build]: info=cmd.startmonitor status=sent 
docker-slim[build]: info=event.error status=received data=SensorError{Op:sensor.ptrace.Run/target.Start,Kind:call.error,Wrapped:{Type=*os.PathError,Info=fork/exec /usr/bin/entry.sh: exec format error,Line:88,File:github.com/docker-slim/docker-slim@/internal/app/sensor/monitors/ptrace/monitor.go}} 
docker-slim[build]: state=exited version=linux|Transformer|1.26.1|2ec04e169b12a87c5286aa09ef44eac1cea2c7a1|2019-11-28_04:37:59PM 
 
[Container] 2019/12/12 06:34:35 Command did not exit successfully /tmp/docker-slim build --http-probe=false --continue-after 20 mosquitto exit status 132 
[Container] 2019/12/12 06:34:35 Phase complete: BUILD State: FAILED 
[Container] 2019/12/12 06:34:35 Phase context status code: COMMAND_EXECUTION_ERROR Message: Error while executing command: /tmp/docker-slim build --http-probe=false --continue-after 20 mosquitto. Reason: exit status 132 
```

I assume this is the relevant part:

```
{Type=*os.PathError,Info=fork/exec /usr/bin/entry.sh: exec format error,Line:88,File:github.com/docker-slim/docker-slim@/internal/app/sensor/monitors/ptrace/monitor.go}
```

On my MacBook I get this:

```
$ .../docker-slim build --http-probe=false --continue-after 20 mosquitto
docker-slim[build]: state=started
docker-slim[build]: info=params target=mosquitto continue.mode=timeout
docker-slim[build]: state=image.inspection.start
docker-slim[build]: info=image id=sha256:6c325f64bc1714ff4317ea1e67e6abf39631b6ace1acf35917ec608a07194b28 size.bytes=175693956 size.human=176 MB
docker-slim[build]: info=image.stack index=0 name='balenalib/armv7hf-alpine:3.9-run' id='sha256:ab2e215257f0e5ad3a590e54ab721b7e4b6195b52dad28a21fb5ad65450145c7'
docker-slim[build]: info=image.stack index=1 name='mosquitto:latest' id='sha256:6c325f64bc1714ff4317ea1e67e6abf39631b6ace1acf35917ec608a07194b28'
docker-slim[build]: info=image.exposed_ports list='1883,8883'
docker-slim[build]: state=image.inspection.done
docker-slim[build]: state=container.inspection.start
docker-slim[build]: info=container status=created name=dockerslimk_74755_20191212215300 id=446d664664d0a424fb7f8fef507771448feed30226eb4a93b09c80fc74c037b6
docker-slim[build]: info=cmd.startmonitor status=sent
docker-slim[build]: info=event.startmonitor.done status=received
docker-slim[build]: info=container name=dockerslimk_74755_20191212215300 id=446d664664d0a424fb7f8fef507771448feed30226eb4a93b09c80fc74c037b6 target.port.list=[32771,32770] target.port.info=[1883/tcp => 0.0.0.0:32771,8883/tcp => 0.0.0.0:32770] message='YOU CAN USE THESE PORTS TO INTERACT WITH THE CONTAINER'
docker-slim[build]: info=continue.after mode=timeout message='no input required, execution will resume after the timeout'
docker-slim[build]: info=prompt message='waiting for the target container (20 seconds)'
docker-slim[build]: info=event message='done waiting for the target container'docker-slim[build]: state=container.inspection.finishing
docker-slim[build]: state=container.inspection.artifact.processing
docker-slim[build]: state=container.inspection.done
docker-slim[build]: state=building message='building minified image'
docker-slim[build]: state=completed
docker-slim[build]: info=results status='MINIFIED BY 37.37X [175693956 (176 MB) => 4701356 (4.7 MB)]'
docker-slim[build]: info=results  image.name=mosquitto.slim image.size='4.7 MB' data=true
docker-slim[build]: info=results  artifacts.location='/Users/mark/Downloads/dist_mac/.docker-slim-state/images/6c325f64bc1714ff4317ea1e67e6abf39631b6ace1acf35917ec608a07194b28/artifacts'
docker-slim[build]: info=results  artifacts.report=creport.json
docker-slim[build]: info=results  artifacts.dockerfile.original=Dockerfile.fat
docker-slim[build]: info=results  artifacts.dockerfile.new=Dockerfile
docker-slim[build]: info=results  artifacts.seccomp=mosquitto-seccomp.json
docker-slim[build]: info=results  artifacts.apparmor=mosquitto-apparmor-profile
docker-slim[build]: state=done
docker-slim[build]: info=report file='slim.report.json'
```

I'm going to keep hacking away at it for now but any suggestions would be very welcome.
I have a simple sanic server, it runs ok with normal docker, but failed to launch when slimed.

```bash
$ docker build -t server .
$ docker-slim build server .
$ docker run -d server.slim
```

and container exit with error
```
Traceback (most recent call last):
  File "main.py", line 12, in <module>
    app.blueprint(swagger_blueprint)
  File "/usr/local/lib/python3.7/site-packages/sanic/app.py", line 726, in blueprint
    blueprint.register(self, options)
  File "/usr/local/lib/python3.7/site-packages/sanic/blueprints.py", line 158, in register
    uri, future.file_or_directory, *future.args, **future.kwargs
  File "/usr/local/lib/python3.7/site-packages/sanic/app.py", line 704, in static
    content_type,
  File "/usr/local/lib/python3.7/site-packages/sanic/static.py", line 146, in register
    )(_handler)
  File "/usr/local/lib/python3.7/site-packages/sanic/app.py", line 201, in response
    name=name,
  File "/usr/local/lib/python3.7/site-packages/sanic/router.py", line 147, in add
    self._add(uri, methods, handler, host, name)
  File "/usr/local/lib/python3.7/site-packages/sanic/router.py", line 303, in _add
    route = merge_route(route, methods, handler)
  File "/usr/local/lib/python3.7/site-packages/sanic/router.py", line 255, in merge_route
    uri, ",".join(list(duplicated))
sanic.router.RouteExists: Route already registered: /swagger/<file_uri:/?.+> [HEAD,GET]
```

code as below, include `main.py`, `Dockerfile` and `requirements.txt`

Dockerfile
```
FROM python:3.7
COPY requirements.txt /requirements.txt
RUN pip install -r requirements.txt

COPY . /app
WORKDIR /app
EXPOSE 8000
CMD python main.py
```

main.py
```python
from sanic import Sanic
from sanic_openapi import swagger_blueprint
app = Sanic()
app.blueprint(swagger_blueprint)
if __name__ == "__main__":
    app.run(host="0.0.0.0", port=8000)
```

requirements.txt
```
sanic
sanic-openapi
```

Note that if I commented out line `app.blueprint(swagger_blueprint)`, slim container can launch success
I'm trying to build a Dockerfile I normally run with docker-compose, so there's lots of arguments that I keep forgetting to add (`--mount`, `--env`, etc.). It's painful to troubleshoot this because I have to wait for `docker-slim` to make five tries and timeout before I can see what the error is. Would it be possible to show the logs from `--show-clogs` immediately, after the first HTTP failure?

Current output:

```
docker-slim[build]: info=container name=dockerslimk_17520_20191212010301 id=e6285282f34f2ed3a00152b847a3078719fa04173448724d842d18769fe8df7c target.port.list=[32794] target.port.info=[3000/tcp => 0.0.0.0:32794] message='YOU CAN USE THESE PORTS TO INTERACT WITH THE CONTAINER'
docker-slim[build]: state=http.probe.starting message='WAIT FOR HTTP PROBE TO FINISH'
docker-slim[build]: info=continue.after mode=probe message='no input required, execution will resume when HTTP probing is completed'
docker-slim[build]: info=prompt message='waiting for the HTTP probe to finish'
docker-slim[build]: state=http.probe.running
docker-slim[build]: info=http.probe.ports count=1 targets='32794'
docker-slim[build]: info=http.probe.commands count=1 commands='GET /'
docker-slim[build]: info=http.probe.call status=error method=GET target=http://127.0.0.1:32794/ attempt=1 error='Get http://127.0.0.1:32794/: read tcp 127.0.0.1:56516->127.0.0.1:32794: read: connection reset by peer' time=2019-12-12T01:03:14Z
docker-slim[build]: info=http.probe.call status=error method=GET target=http://127.0.0.1:32794/ attempt=2 error='Get http://127.0.0.1:32794/: read tcp 127.0.0.1:56524->127.0.0.1:32794: read: connection reset by peer' time=2019-12-12T01:03:22Z
docker-slim[build]: info=http.probe.call status=error method=GET target=http://127.0.0.1:32794/ attempt=3 error='Get http://127.0.0.1:32794/: read tcp 127.0.0.1:56546->127.0.0.1:32794: read: connection reset by peer' time=2019-12-12T01:03:30Z
docker-slim[build]: info=http.probe.call status=error method=GET target=http://127.0.0.1:32794/ attempt=4 error='Get http://127.0.0.1:32794/: read tcp 127.0.0.1:56552->127.0.0.1:32794: read: connection reset by peer' time=2019-12-12T01:03:38Z
docker-slim[build]: info=http.probe.call status=error method=GET target=http://127.0.0.1:32794/ attempt=5 error='Get http://127.0.0.1:32794/: read tcp 127.0.0.1:56556->127.0.0.1:32794: read: connection reset by peer' time=2019-12-12T01:03:46Z
docker-slim[build]: info=http.probe.summary total=5 failures=5 successful=0
docker-slim[build]: state=http.probe.done warning=no.successful.calls
docker-slim[build]: info=event message='HTTP probe is done'
docker-slim[build]: state=container.inspection.finishing
docker-slim: container stdout:
docker-slim: container stderr:
time="2019-12-12T01:03:02Z" level=info msg="sensor: args => []string{\"/opt/dockerslim/bin/docker-slim-sensor\"}"
time="2019-12-12T01:03:02Z" level=info msg="sensor: waiting for commands..."
time="2019-12-12T01:03:02Z" level=info msg="sensor: monitor starting..."
time="2019-12-12T01:03:02Z" level=info msg="fanmon: Run"
time="2019-12-12T01:03:02Z" level=info msg="ptmon: Run"
... the output from my container ...
```

Requested output:

```
docker-slim[build]: info=container name=dockerslimk_17520_20191212010301 id=e6285282f34f2ed3a00152b847a3078719fa04173448724d842d18769fe8df7c target.port.list=[32794] target.port.info=[3000/tcp => 0.0.0.0:32794] message='YOU CAN USE THESE PORTS TO INTERACT WITH THE CONTAINER'
docker-slim[build]: state=http.probe.starting message='WAIT FOR HTTP PROBE TO FINISH'
docker-slim[build]: info=continue.after mode=probe message='no input required, execution will resume when HTTP probing is completed'
docker-slim[build]: info=prompt message='waiting for the HTTP probe to finish'
docker-slim[build]: state=http.probe.running
docker-slim[build]: info=http.probe.ports count=1 targets='32794'
docker-slim[build]: info=http.probe.commands count=1 commands='GET /'
docker-slim[build]: info=http.probe.call status=error method=GET target=http://127.0.0.1:32794/ attempt=1 error='Get http://127.0.0.1:32794/: read tcp 127.0.0.1:56516->127.0.0.1:32794: read: connection reset by peer' time=2019-12-12T01:03:14Z
docker-slim: container stdout:
docker-slim: container stderr:
time="2019-12-12T01:03:02Z" level=info msg="sensor: args => []string{\"/opt/dockerslim/bin/docker-slim-sensor\"}"
time="2019-12-12T01:03:02Z" level=info msg="sensor: waiting for commands..."
time="2019-12-12T01:03:02Z" level=info msg="sensor: monitor starting..."
time="2019-12-12T01:03:02Z" level=info msg="fanmon: Run"
time="2019-12-12T01:03:02Z" level=info msg="ptmon: Run"
... the output from my container ...
... all the other output I pasted above ...
```