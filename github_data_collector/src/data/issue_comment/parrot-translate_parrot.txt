Reading the documentation for updating pairs for a locale ([link](https://anthonynsimon.gitbooks.io/parrot/content/locales.html): _Updating the locale's pairs_) and making a request as documented should successfully add a new pair.

However, the documentation is incorrect, as well as confusing.

The documentation seems to imply that adding a single key will either add it or update it as the method uses the `PATCH` HTTP method.

In fact it deletes any content for keys that are not specified, only leaving the pairs specified by the keys in the request body. This is more `PUT` semantics, where the content is overwritten, as `PATCH` should only change content provided by the request body.

Secondly, the documentation shows the request content as being in the following format:

```json
{
  "key": "value"
}
```

This is incorrect, and effectively causes all keys to be deleted by removing them all as it appears to be interpreted as _"delete all keys as none were provided"_.

The actual format required (found by using Chrome Developer tools) is:

```json
{
  "pairs": {
    "key": "value"
  }
}
```

Suggestions:
  1. Update the documentation as appropriate so that following it results in successful requests by an integrator.
  1. If the API's current request behaviour is intentional, change the HTTP method to `PUT`.
  1. If a `PATCH` behaviour is intended, fix unspecified keys being deleted, only updating those specified where found and adding those not found.
  1. Reject the request with an `4xx` error if `pairs` is not specified at all to prevent accidental data loss.
For bugs or unexpected behaviors please use the following template:

## Expected Behavior
Registering an account, succeeding

## Actual Behavior
Registering an account, error

## Steps to Reproduce the Problem

1. Register an account
2. Click submit
3. Get the following error :
"Something went wrong. That's all we know. "

Your description...
API and Webapp are running, but when registering, no errors are appearing, and it seems like nothing is happening in the background? 



Several features would benefit from a normalized DB schema. For example the translation tagging feature or cascading updates/deletes to project keys. Most of this is currently handled in application code and it would be simplified if delegated to relational constraints.
Show the changes made to a given key over time
Hability to tag a set of keys, which groups them. 
Currently we automatically create tags for untranslated or unverified keys per locale that are sent to translators, and we check the status of those tags. Once he translated all of them we mark the task as done and close pay the translator. 
Each key should be able to contain screenshots or a longer description that provides context for the translators 
When the value of a key changes on the source locale, the key should be marked as unverified on the other locales so that they are reviewed and updated or marked as verified.
Hello there!

While testing a tool I faced the following bug:

1. Add a new key to a project
2. Delete this key
3. Try to perform export for some of the locales
4. Open a document with exported key/values, there you will find a key that you deleted on step 2. 
On the other hands this key will be absent on keys page and on pages associated with locales

Thanks, Andrii
When the default setting is exceeded, chrome console display error
```
Failed to load resource: the server responded with a status of 500 (Internal Server Error)
```

Update the file(`nginx/parrot.conf`) default settings.
```
client_body_buffer_size 10M;
```