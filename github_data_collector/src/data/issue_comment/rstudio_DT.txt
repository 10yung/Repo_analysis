Is there any option or workaround which will remove blank space retained after unselection of row from parent datatable. I have asked same question on SO.
https://stackoverflow.com/questions/59770128/collapse-white-space-after-row-unselection-in-parent-datatable-while-drilldown 
![image](https://user-images.githubusercontent.com/50945960/72536152-b8d2ce00-389f-11ea-9d8b-528484b46fa6.png)


![image](https://user-images.githubusercontent.com/50945960/72536063-9345c480-389f-11ea-82ac-d171b28368e0.png)




<!--
Please keep the portion below in your issue. Your issue will be closed if any of the boxes is not checked. In certain (rare) cases, you may be exempted if you give a brief explanation (e.g., you are only making a suggestion for improvement). Thanks!
-->

---

By filing an issue to this repo, I promise that

- [x] I have fully read the issue guide at https://yihui.name/issue/.
- [x] I have provided the necessary information about my issue.
    - If I'm asking a question, I have already asked it on Stack Overflow or RStudio Community, waited for at least 24 hours, and included a link to my question there.
    - If I'm filing a bug report, I have included a minimal, self-contained, and reproducible example, and have also included `xfun::session_info('DT')`. I have upgraded all my packages to their latest versions (e.g., R, RStudio, and R packages), and also tried the development version: `remotes::install_github('rstudio/DT')`.
    - If I have posted the same issue elsewhere, I have also mentioned it in this issue.
- [x] I have learned the Github Markdown syntax, and formatted my issue correctly.

I understand that my issue may be closed if I don't fulfill my promises.

Fixes rstudio#418.

This version builds on original suggestions from @chrisvwn.

It creates a function that reads multi-row headers into an array of arrays, where each arrary row is a header row. 

Further it updates csv, copy, pdf, excel and print to process the multi-row header object.

For excel it merges the cells as shown on screen.

It does not update the flash counter parts of html5 functions
I am working on a bookdown project where we have large tables that also contain citations. We are outputting in both html and pdf.
The problem is that I cannot find a way to make the citations render in the tables. I have also asked on [SO](https://stackoverflow.com/questions/59556135/citations-in-dtdatatable).

For PDF output this latex workaround works if I use kable: https://github.com/haozhu233/kableExtra/issues/214
However, for the html output I have been using `DT:datatable` and I cannot figure a way to make the references render.

Is there a way to get the markdown parsed citation in the table?



markdown example:

    ---
    title: "Untitled"
    output: html_document
    bibliography: ["references.bib"]
    ---
    
    
    In text citation [@chambers_2012].
    
    
    A plan data.frame can render the reference if inserted as text that markdown can parse.
    
    ```{r, results='asis'}
    library(dplyr)
    library(DT)
    
    data_frame(citation = "[@chambers_2012]")
    
    ```
    
    But not in a DT.
    
    ```{r, results='asis'}
    library(dplyr)
    library(DT)
    
    data_frame(citation = "[@chambers_2012]") %>% datatable()
    
    ```
    
    
    
    # bibliography


Sample references.bib

    @article{chambers_2012,
    title = {A cross-platform toolkit for mass spectrometry and proteomics.},
    author = {Chambers, Matthew C and Maclean, Brendan and Burke, Robert and Amodei, Dario and Ruderman, Daniel L and Neumann, Steffen and Gatto, Laurent and Fischer, Bernd and Pratt, Brian and Egertson, Jarrett and Hoff, Katherine and Kessner, Darren and Tasman, Natalie and Shulman, Nicholas and Frewen, Barbara and Baker, Tahmina A and Brusniak, Mi-Youn and Paulse, Christopher and Creasy, David and Flashner, Lisa and Kani, Kian and Moulding, Chris and Seymour, Sean L and Nuwaysir, Lydia M and Lefebvre, Brent and Kuhlmann, Frank and Roark, Joe and Rainer, Paape and Detlev, Suckau and Hemenway, Tina and Huhmer, Andreas and Langridge, James and Connolly, Brian and Chadick, Trey and Holly, Krisztina and Eckels, Josh and Deutsch, Eric W and Moritz, Robert L and Katz, Jonathan E and Agus, David B and {MacCoss}, Michael and Tabb, David L and Mallick, Parag},
    pages = {918-920},
    url = {http://www.nature.com/doifinder/10.1038/nbt.2377},
    year = {2012},
    month = {oct},
    urldate = {2018-01-13},
    journal = {Nature Biotechnology},
    volume = {30},
    number = {10},
    issn = {1087-0156},
    doi = {10.1038/nbt.2377},
    pmid = {23051804},
    pmcid = {PMC3471674},
    f1000-projects = {shared citations}
    }





<!--
Please keep the portion below in your issue. Your issue will be closed if any of the boxes is not checked. In certain (rare) cases, you may be exempted if you give a brief explanation (e.g., you are only making a suggestion for improvement). Thanks!
-->

---

By filing an issue to this repo, I promise that

- [X] I have fully read the issue guide at https://yihui.name/issue/.
- [X] I have provided the necessary information about my issue.
    - If I'm asking a question, I have already asked it on Stack Overflow or RStudio Community, waited for at least 24 hours, and included a link to my question there.
    - If I'm filing a bug report, I have included a minimal, self-contained, and reproducible example, and have also included `xfun::session_info('DT')`. I have upgraded all my packages to their latest versions (e.g., R, RStudio, and R packages), and also tried the development version: `remotes::install_github('rstudio/DT')`.
    - If I have posted the same issue elsewhere, I have also mentioned it in this issue.
- [X] I have learned the Github Markdown syntax, and formatted my issue correctly.

I understand that my issue may be closed if I don't fulfill my promises.

The manual at <https://rstudio.github.io/DT> does not appear to have any index or table of contents. Unless an individual page (eg. <https://rstudio.github.io/DT/002-rowdetails.html> is explicitly linked to from another explanation, there's no way to know that it exists. 

I figured out that I could look in the `gh-pages` branch for a page that might include documentation of filters and that's the only way I was able to learn that <https://rstudio.github.io/DT/008-filter.html> exists. 

A TOC or Index would be very helpful! I'm not sure how the pages are generated, so I don't know if there's an automatic way to generate an index?

<!--
Please keep the portion below in your issue. Your issue will be closed if any of the boxes is not checked. In certain (rare) cases, you may be exempted if you give a brief explanation (e.g., you are only making a suggestion for improvement). Thanks!
-->

---

By filing an issue to this repo, I promise that

- [x] I have fully read the issue guide at https://yihui.name/issue/.
- [x] I have provided the necessary information about my issue.
    - If I'm asking a question, I have already asked it on Stack Overflow or RStudio Community, waited for at least 24 hours, and included a link to my question there.
    - If I'm filing a bug report, I have included a minimal, self-contained, and reproducible example, and have also included `xfun::session_info('DT')`. I have upgraded all my packages to their latest versions (e.g., R, RStudio, and R packages), and also tried the development version: `remotes::install_github('rstudio/DT')`.
    - If I have posted the same issue elsewhere, I have also mentioned it in this issue.
- [x] I have learned the Github Markdown syntax, and formatted my issue correctly.

I understand that my issue may be closed if I don't fulfill my promises.

This PR does 2 things:

1. Uses the new bootstraplib package to compile [datatable's SASS](https://github.com/DataTables/DataTablesSrc/blob/8ea4882d84ea94c016efdfcc70b14f0ac4207b66/css/jquery.dataTables.scss#L2-L36) at run-time (if any global bootstraplib theme exists, which will be set automatically by `rmarkdown::html_document_base()` as a part of https://github.com/rstudio/rmarkdown/pull/1706), which allows us to set defaults for datatable's SASS [variables](https://github.com/DataTables/DataTablesSrc/blob/8ea4882d84ea94c016efdfcc70b14f0ac4207b66/css/jquery.dataTables.scss#L2-L36) based on sensible Bootstrap SASS variables. In other words, we can now provide much better default styling for DT when using Bootstrap/`rmarkdown::html_document_base()` (that will respect to custom user themes as well)!

2. For non-Bootstrap cases, I've added a `datatableThemeVariables()`, which allows you to control datatable's SASS variables without any other dependencies (other than the sass package).
Hello, 

I don't know if I should tag this issue as a "Feature Request" ?

As I already asked on StackOverflow (https://stackoverflow.com/questions/58873715/add-dt-custom-formating-functions) with no answer, I would like to implement a custom `formatXXX()` function to format datatables columns the same way `DT::formatCurrency(), DT::formatDate(), ....`

I implemented all the R logic following the same structure than DT formating functions so in the end I need to call a `DTWidget.formatXXX()` javascript function. I created the javascript function but I don't know how/where to add this new javascript code to be executed properly.

I saw that the DTWidget formating functions in `inst/htmlwidgets/datatables.js` are wrapped into a function() {...} in which a global var DTWidget={} object is decraled, but I've not manage to reproduce a similar logic with my custom function. 

I really have no idea how to do this, any help would be appreciated, Thank You !

<!--
Please keep the portion below in your issue. Your issue will be closed if any of the boxes is not checked. In certain (rare) cases, you may be exempted if you give a brief explanation (e.g., you are only making a suggestion for improvement). Thanks!
-->

---

By filing an issue to this repo, I promise that

- [x] I have fully read the issue guide at https://yihui.name/issue/.
- [x] I have provided the necessary information about my issue.
    - If I'm asking a question, I have already asked it on Stack Overflow or RStudio Community, waited for at least 24 hours, and included a link to my question there.
    - If I'm filing a bug report, I have included a minimal, self-contained, and reproducible example, and have also included `xfun::session_info('DT')`. I have upgraded all my packages to their latest versions (e.g., R, RStudio, and R packages), and also tried the development version: `remotes::install_github('rstudio/DT')`.
    - If I have posted the same issue elsewhere, I have also mentioned it in this issue.
- [x] I have learned the Github Markdown syntax, and formatted my issue correctly.

I understand that my issue may be closed if I don't fulfill my promises.

I'm trying to create unit tests for a shiny app I've been working on but can't work out how to input values to an editable DT table.

Example app:
```
library(shiny)
library(DT)

ui <- fluidPage(
  DTOutput("table"), 
  textOutput("mean")
)

server <- function(input, output) {
  tableUpdate <- reactiveVal(0)
  
  table <- data.frame(A = 1:5, B = 6:10, C = 11:15)
  
  output$table <- renderDT({table},
    options = list(paging = FALSE, dom = 't'),
    selection = 'none',
    server = FALSE,
    editable = list(target = 'row')
  )
  
  observeEvent(input$table_cell_edit, {
    table <<- editData(table, input$table_cell_edit)
    tableUpdate(tableUpdate() + 1)
  })
  
  output$mean <- renderText({
    tableUpdate()
    paste(mean(table$A), mean(table$B), mean(table$C))
  })
}

shinyApp(ui, server)
```

Example test:
```
library(shinytest)

app <- ShinyDriver$new(".")
app$setInputs(table_cell_clicked = list(row = 2, col = 2, value = 7), allowInputNoBinding_ = TRUE)
app$setInputs(table_cell_edit = data.frame(row = 2, col = 0:3, value = "1"), 
              allowInputNoBinding_ = TRUE, priority_ = "event", wait_ = FALSE, values_ = FALSE)
app$takeScreenshot()
app$stop()
rm(app)
```

I've kept this mostly how it came out when I recorded the test (`recordTest(".")`), but I've corrected the setInputs values of table_cell_edit and table_cell_clicked (which came out as vectors instead of dataframes).

This gives the error:
`Error in sd_getAllValues(self, private, input, output, export) : 
  Unable to fetch all values from server. Is target app running with options(shiny.testmode=TRUE?)`

Running in test mode does not fix the issue.

Have already asked here:
https://stackoverflow.com/questions/58097212/testing-editable-dt-using-shinytest

<!--
Please keep the portion below in your issue. Your issue will be closed if any of the boxes is not checked. In certain (rare) cases, you may be exempted if you give a brief explanation (e.g., you are only making a suggestion for improvement). Thanks!
-->

---

By filing an issue to this repo, I promise that

- [x] I have fully read the issue guide at https://yihui.name/issue/.
- [x] I have provided the necessary information about my issue.
    - If I'm asking a question, I have already asked it on Stack Overflow or RStudio Community, waited for at least 24 hours, and included a link to my question there.
    - If I'm filing a bug report, I have included a minimal, self-contained, and reproducible example, and have also included `xfun::session_info('DT')`. I have upgraded all my packages to their latest versions (e.g., R, RStudio, and R packages), and also tried the development version: `remotes::install_github('rstudio/DT')`.
    - If I have posted the same issue elsewhere, I have also mentioned it in this issue.
- [x] I have learned the Github Markdown syntax, and formatted my issue correctly.

I understand that my issue may be closed if I don't fulfill my promises.

Hello, 

 Here is an editable `datatable` with a `render` option at column 2:

```
library(DT)

products <- data.frame(id = 1:5, 
                       price = c(10, 15, 12, 8, 9),
                       rating = c(5, 4, 4, 3, 4))

render <- c(
  "function(data, type, row){",
  "  if(type === 'display'){",
  "    var s = '<span style=\"padding: 0 4px; border-radius: 4px; background-color: pink;\">' + data + '</span>';",
  "    return s;",
  "  } else {",
  "    return data;",
  "  }",
  "}"
)

datatable(products, editable = "cell", 
          options = list(
            columnDefs = list(
              list(targets = 2, render = JS(render))
            )
          )
)
```

Then the cells in column 2 are not editable. Is it normal ?


---

By filing an issue to this repo, I promise that

- [ ] I have fully read the issue guide at https://yihui.name/issue/.
- [ ] I have provided the necessary information about my issue.
    - If I'm asking a question, I have already asked it on Stack Overflow or RStudio Community, waited for at least 24 hours, and included a link to my question there.
    - If I'm filing a bug report, I have included a minimal, self-contained, and reproducible example, and have also included `xfun::session_info('DT')`. I have upgraded all my packages to their latest versions (e.g., R, RStudio, and R packages), and also tried the development version: `remotes::install_github('rstudio/DT')`.
    - If I have posted the same issue elsewhere, I have also mentioned it in this issue.
- [ ] I have learned the Github Markdown syntax, and formatted my issue correctly.

I understand that my issue may be closed if I don't fulfill my promises.

https://github.com/rstudio/DT/blob/832714f7c928ec8f09d595a7dcd0e9ac9a860254/inst/htmlwidgets/datatables.js#L747

Is there a way to fully disable the cells so that clicking on them does not display them in an edit-like cell? Currently using `editable=list(target='cell', disable=list(columns=c(2)))` results in column 2 being shaded and labeled as 'readonly', but it still is displayed in an edit-like cell and any formatting is lost. 

For example, if a column 2 is disabled but has formatSignif applied then when double-clicked it is redisplayed with full display of digits. Or if the column is not escaped because it contains an HTML icon, the cell is shown with the HTML - even though it's not editable.

Maybe there's a way to truly disable editing so that double clicking on a disabled column does nothing? 
Now datatables library has the official Select extension. Due to historical reasons, DT implements the selection functionality separately. Replacing the current selection implementation with Select extension can be beneficial:

1. Fewer conflicts with other extensions;
1. Reduce javascript codes so easier to maintain;
1. Consistent styles - like bootstrap or other table themes.

I have wished for this for a long time... Took a look at the last weekend and it should be technically possible...