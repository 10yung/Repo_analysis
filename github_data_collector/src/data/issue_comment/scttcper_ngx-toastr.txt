This issue fixes the warning I'm getting when using this package with Angular 9. 

Related issue: #583 

```
WARNING in Entry point 'ngx-toastr' contains deep imports into '/opt/colmena/kikstart/templates/kikstart-ui-starter/node_modules/@angular/compiler/src/core'. This is probably not a problem, but may cause the compilation of entry points to be out of order.
```
Hi,
Today found one use case for passing custom options. In my case i want to pass icon name to component. It is actually possible with directly passing but there is errors about
`Object literal may only specify known properties, and 'toastIcon' does not exist in type 'Partial<IndividualConfig>'`

Is there any workarounds for this ?
Hello,

I'm switching to the ivy render and mention that toastr library doesn't work. Upon the call I see the following error 

```
zone-evergreen.js:172 Uncaught Error: Template error: Can't bind to 'ngIf' since it isn't a known property of 'button'.
```

In this part of the code

```
    } if (rf & 2) {
        ->>>> ɵngcc0.ɵɵproperty("ngIf", ctx.options.closeButton);
        ɵngcc0.ɵɵselect(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.title);
```

I see the error even `CommonModule` is imported. 

Any thought on this?

Thanks in advance 
Everything is working as expected so it seems but i get this "Error"

`ERROR in node_modules/ngx-toastr/toastr/toastr.module.d.ts:5:53 - error TS-996005: ToastrModule.forRoot returns a ModuleWithProviders type without a generic type argument. Please add a generic type argument to the ModuleWithProviders type. If this occurrence is in library code you don't control, please contact the library authors.`
    

`"ngx-toastr": "^11.2.1"`


Hi, Im using angular 7, anf it seems that change detection is killing my application when using timeout with toastr...

Is this issue fixable? is this fixed in later version ? 
Related to #328, there seems to be an issue with the creation of APP_INITIALIZERS, which depend on toastr. Here an example:

If you specify 

```javascript
{ provide: ConfigService, useClass: ConfigService, deps: [HttpBackend, ToastrService, TranslateService] },
{ provide: APP_INITIALIZER, useFactory: configServiceFactory, deps: [ConfigService], multi: true }
```

you end up in having ConfigService instantiated twice. I did some debugging and it seems, that by Toastr Overlay instantiation a new ConfigService is created, which is to taken up by AppModule instantiation. 
toast not visible in safari
display: none; problem
current version "ngx-toastr": 10.2.0,
angular version 7.2.0
<img width="1440" alt="Screen Shot 2019-11-19 at 16 25 57" src="https://user-images.githubusercontent.com/17572461/69150266-67999e80-0ae9-11ea-8661-c0cb104348f2.png">

I use Angular 9.0.0-rc.1 and get this warnings, if I install ngx-toastr:

`npm WARN ngx-toastr@11.2.1 requires a peer of @angular/core@>=8.0.0-0 but none is installed. You must install peer dependencies yourself.
npm WARN ngx-toastr@11.2.1 requires a peer of @angular/common@>=8.0.0-0 but none is installed. You must install peer dependencies yourself.
npm WARN ngx-toastr@11.2.1 requires a peer of @angular/platform-browser@>=8.0.0-0 but none is installed. You must install peer dependencies yourself.
`
I have angular 8 app with UI theme based on bootstrap v4. I also use Less.
Can you compile complete `toastr-bs4-alert.css` with all needed functionality from bootstrap v4?
Hi Guyz,

Thank you for such a great package.

I have ngx-toastr package installed on my project but I am not using it right now. so I have no export that module in my app component. Once I run the application I am getting this error:

**core.js:4002 ERROR Error: Uncaught (in promise): NullInjectorError: StaticInjectorError(AppModule)[InjectionToken ToastConfig]: 
  StaticInjectorError(Platform: core)[InjectionToken ToastConfig]: 
    NullInjectorError: No provider for InjectionToken ToastConfig!
NullInjectorError: StaticInjectorError(AppModule)[InjectionToken ToastConfig]: 
  StaticInjectorError(Platform: core)[InjectionToken ToastConfig]:**

Once I import:

`import { ToastrModule } from 'ngx-toastr';`

```
ToastrModule.forRoot({
      timeOut: 5000,
      positionClass: 'toast-bottom-center',
      preventDuplicates: true,
      closeButton: true,
      progressBar: true,
      maxOpened: 1,
      autoDismiss: true,
      enableHtml: true
    }), 
```

then that is fine. As I am planning to use in the future. 
Do I need to import it?
