In pools larger than a /24 the internal .0 and .255 addresses (which are valid) are never allocated.  This means that the pools effectively decrease in size by 2 addresses per /24 contained within a subnet.  As far as I can tell this is caused by https://github.com/tumblr/collins/blob/master/app/collins/util/IpAddress.scala#L119-L126.
Following the curl examples on

https://tumblr.github.io/collins/api.html

I expect the API to delete my asset with

`# curl --basic -u blake:admin:first -d nuke=true -X DELETE http://localhost:9000/api/asset/testswitch
{"status":"error","data":{"message":"Reason must be specified."}}`

Same counts for decommissioning

`# curl --basic -u blake:admin:first -d status='Decommissioned' -X POST http://localhost:9000/api/asset/testswitch 
{"status":"error","data":{"message":"No reason for the status change was specified."}}`

Adding _-d reason="foobar"_ makes the API call work for both actions.

`# curl --basic -u blake:admin:first -d status='Decommissioned' -d reason='foobar' -X POST http://localhost:9000/api/asset/testswitch 
{"status":"success:ok","data":{"SUCCESS":true}}`

`curl --basic -u blake:admin:first -d nuke=true -d reason='foobar' -X DELETE http://localhost:9000/api/asset/testswitch
{"status":"success:ok","data":{"SUCCESS":true}}`

Please fix documentation.

Thanks in advance and best regards
Hi there, 

I am interested in looking at collins to help with our asset and configuration management requirements. I was reading your quick start documentation and thought docker would be a simple route to getting going.

I ran the command as listed in your documentation only to be presented with the following error message:
```
~$ docker run -p 9000:9000 tumblr/collins
Unable to find image 'tumblr/collins:latest' locally
latest: Pulling from tumblr/collins
a4d8138d0f6b: Pull complete
dbdc36973392: Pull complete
f59d6d019dd5: Pull complete
5fee445fce94: Pull complete
d270185e6f4d: Pull complete
a8d5eae35fa0: Pull complete
63dd02427be9: Pull complete
c93b261a5f70: Pull complete
8d2a5826c2b6: Pull complete
2a73bf5cb755: Pull complete
3c7df661a6e6: Pull complete
Digest: sha256:7b8c98c23b101303b6bd0692747ce1fc728aec2a36d8f795206639c13b2457a5
Status: Downloaded newer image for tumblr/collins:latest
docker: Error response from daemon: OCI runtime create failed: container_linux.go:345: starting container process caused "exec: \"/usr/bin/java\": stat /usr/bin/java: no such file or directory": unknown.
```

I have just installed docker on a vm running ubuntu 18.04:
```
Client: Docker Engine - Community
 Version:           19.03.2
 API version:       1.40
 Go version:        go1.12.8
 Git commit:        6a30dfc
 Built:             Thu Aug 29 05:29:11 2019
 OS/Arch:           linux/amd64
 Experimental:      false

Server: Docker Engine - Community
 Engine:
  Version:          19.03.2
  API version:      1.40 (minimum version 1.12)
  Go version:       go1.12.8
  Git commit:       6a30dfc
  Built:            Thu Aug 29 05:27:45 2019
  OS/Arch:          linux/amd64
  Experimental:     false
 containerd:
  Version:          1.2.6
  GitCommit:        894b81a4b802e4eb2a91d1ce216b8817763c29fb
 runc:
  Version:          1.0.0-rc8
  GitCommit:        425e105d5a03fabd737a126ad93d62a9eeede87f
 docker-init:
  Version:          0.18.0
  GitCommit:        fec3683
```
Any ideas for troubleshooting would be greatly appreciated :)

Cheers

Chris
Hey, I have been messing around with a golang build for collins CLI for a bit now and have been using it for a while without any major issue outside of a few minor bug fixes. Just thought I would add it here as well in case it's useful for others.
Hi,
Are there any plans for 2019 to have new releases or is the project closing down?

Many thanks,
Tom

OpenJDK 64-Bit Server VM warning: ignoring option MaxPermSize=384m; support was removed in 8.0
--
  | Exception in thread "main" java.io.FileNotFoundException: /opt/collins/RUNNING_PID (Permission denied)
  | at java.io.FileOutputStream.open0(Native Method)
  | at java.io.FileOutputStream.open(FileOutputStream.java:270)
  | Play server process ID is 1
  | at java.io.FileOutputStream.<init>(FileOutputStream.java:213)
  | at java.io.FileOutputStream.<init>(FileOutputStream.java:162)
  | at play.core.server.NettyServer$$anonfun$createServer$1.apply(NettyServer.scala:242)
  | at play.core.server.NettyServer$$anonfun$createServer$1.apply(NettyServer.scala:230)
  | at scala.Option.map(Option.scala:146)
  | at play.core.server.NettyServer$.createServer(NettyServer.scala:230)
  | at play.core.server.NettyServer$$anonfun$main$3.apply(NettyServer.scala:289)
  | at play.core.server.NettyServer$$anonfun$main$3.apply(NettyServer.scala:284)
  | at scala.Option.map(Option.scala:146)
  | at play.core.server.NettyServer$.main(NettyServer.scala:284)
  | at play.core.server.NettyServer.main(NettyServer.scala)


Hello,
Trying to get Collins up and running and it will not start due to issues with Akka. Collins version 2.2 on CentOS 7 with JDK 1.7.

**The error I get while starting is:**
```
akka.ConfigurationException: configuration problem while creating [akka://application/user/change_queue_processor] with router dispatcher [akka.actor.default-dispatcher] and mailbox [akka.actor.default-mailbox] and routee dispatcher [akka.actor.default-dispatcher] and mailbox [akka.actor.default-mailbox]
        at akka.actor.LocalActorRefProvider.actorOf(ActorRefProvider.scala:752)
        at akka.actor.dungeon.Children$class.makeChild(Children.scala:207)
        at akka.actor.dungeon.Children$class.attachChild(Children.scala:42)
        at akka.actor.ActorCell.attachChild(ActorCell.scala:369)
        at akka.actor.ActorSystemImpl.actorOf(ActorSystem.scala:552)
        at collins.callbacks.Callback$.setupCallbacks(Callback.scala:21)
        at Global$.onStart(Global.scala:45)
        at play.api.GlobalPlugin.onStart(GlobalSettings.scala:220)
        at play.api.Play$$anonfun$start$1$$anonfun$apply$mcV$sp$1.apply(Play.scala:91)
        at play.api.Play$$anonfun$start$1$$anonfun$apply$mcV$sp$1.apply(Play.scala:91)
        at scala.collection.immutable.List.foreach(List.scala:381)
        at play.api.Play$$anonfun$start$1.apply$mcV$sp(Play.scala:91)
        at play.api.Play$$anonfun$start$1.apply(Play.scala:91)
        at play.api.Play$$anonfun$start$1.apply(Play.scala:91)
        at play.utils.Threads$.withContextClassLoader(Threads.scala:21)
        at play.api.Play$.start(Play.scala:90)
        at play.core.StaticApplication.<init>(ApplicationProvider.scala:55)
        at play.core.server.NettyServer$.createServer(NettyServer.scala:253)
        at play.core.server.NettyServer$$anonfun$main$3.apply(NettyServer.scala:289)
        at play.core.server.NettyServer$$anonfun$main$3.apply(NettyServer.scala:284)
        at scala.Option.map(Option.scala:146)
        at play.core.server.NettyServer$.main(NettyServer.scala:284)
        at play.core.server.NettyServer.main(NettyServer.scala)
Caused by: akka.ConfigurationException: Configuration missing for router [akka://application/user/change_queue_processor] in 'akka.actor.deployment' section.
        at akka.routing.FromConfig.verifyConfig(RouterConfig.scala:297)
        at akka.routing.RoutedActorRef.<init>(RoutedActorRef.scala:40)
        at akka.actor.LocalActorRefProvider.actorOf(ActorRefProvider.scala:750)
        ... 22 more
```

Configuration is very minimally different than the stock production.conf (just changed the mysql details to point to our cluster instead of a local instance).

There are currently 3 clients for Collins - you have to roll your own even for Java.

If there was an [OpenAPI](https://www.openapis.org/) document somewhere it could be used to generate clients in at least a dozen languages. [Swagger Codegen](https://github.com/swagger-api/swagger-codegen) being the example that would be most obvious.



Ever found a bunch of machines that somehow got misconfigured and aren't set to PXE boot, but your IPMI access does appear to work?

Here's a gross hack. Pipe the list of affected asset tags to this abomination.
```while read tag; do collins find -c ipmi -t $tag; done  | awk '{print $9,$21}' | sed 's|[,)]||g' | awk '{print "ipmitool -I lanplus -H",$1,"-P",$2,"-U root chassis bootdev pxe"}' | bash -x```

Much better would be if collins or consolr could easily issue that IPMI `chassis bootdev pxe` command to them in a more standard way.

Should be very easy to add to consolr. Having it go via the collins server would of course provide better logging.
I removed my version eye profile. Version eye was used for monitoring dependencies. I used it to make sure that dependencies were up to date, _when I used to actively work on collins, it's been over a year since I have_

It shows up on the README as a badge

![image](https://user-images.githubusercontent.com/110992/31837593-693c7e18-b5a7-11e7-9772-dee6e6ade45c.png)

Previously had a number in place of unknown . If interested someone should create a new version eye integration, it is very straight forward. Alternatively update the readme.