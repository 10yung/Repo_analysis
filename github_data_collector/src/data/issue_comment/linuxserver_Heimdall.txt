Hello,

I work with my team on a framework for Big Data analysis : [FADI](https://github.com/cetic/fadi). This toolkit is mainly based on Helm and Kubernetes. We want to integrate a dashboard that would make navigation between services (Ingress) more interactive and pleasant. Heimdall seems to be the ideal candidate.

However, we would like to be able to automate the tasks of adding elements and users so that the dashboards are self-generated according to the services present in our cluster of containerized applications. At the moment this is not possible using only the routes in the file `routes/web.php`. 
We hope this use case will lead you to develop the API of your application. Because we prefer to use an existing mature tool and support it rather than developing it from scratch.

With this in mind, if this functionality were to come to light, we certainly plan to collaborate to enrich the list of enhanced supported applications and transmit a lot of feedback.
When running multiple instances of Heimdall (e.g one for LAN and one for WAN) it would be useful to see the URL you are going to visit at the bottom of an item:

![image](https://user-images.githubusercontent.com/6213695/72108726-84599200-3334-11ea-80f1-9d07277367cc.png)

So here, maybe in light blue or gray pointing to http://localhost:8000 just to get a visual indication of where you are going and that you are not visiting the WAN address instead of the LAN one.

Can't update apps list due to network connectivity issue. Is there any way to update the list manually?

Version: 2.2.2

```
[2020-01-05 07:50:37] laravel.ERROR: Error creating resource: [message] fopen(https://apps.heimdall.site/list): failed to open stream: Operation timed out
[file] /var/www/localhost/heimdall/vendor/guzzlehttp/guzzle/src/Handler/StreamHandler.php
[line] 323 {"exception":"[object] (GuzzleHttp\\Exception\\RequestException(code: 0): Error creating resource: [message] fopen(https://apps.heimdall.site/list): failed to open stream: Operation timed out
[file] /var/www/localhost/heimdall/vendor/guzzlehttp/guzzle/src/Handler/StreamHandler.php
[line] 323 at /var/www/localhost/heimdall/vendor/guzzlehttp/guzzle/src/Exception/RequestException.php:52, RuntimeException(code: 0): Error creating resource: [message] fopen(https://apps.heimdall.site/list): failed to open stream: Operation timed out
[file] /var/www/localhost/heimdall/vendor/guzzlehttp/guzzle/src/Handler/StreamHandler.php
[line] 323 at /var/www/localhost/heimdall/vendor/guzzlehttp/guzzle/src/Handler/StreamHandler.php:252)
...
```
On Ubuntu 18.04, with PHP 7.2.24, Apache 2.4.29, and Composer 1.9.1.

I got a fresh Heimdall install working just fine behind this Apache vhost:
```
<VirtualHost *:80>
   ServerAdmin webmaster@domain.se
   ServerName sub.domain.se
   DocumentRoot /var/www/html/heimdall

   Redirect permanent / https://sub.domain.se
   ErrorLog ${APACHE_LOG_DIR}/sub.domain.se_error.log
   CustomLog ${APACHE_LOG_DIR}/sub.domain.se_access.log combined
</VirtualHost>

<VirtualHost *:443>
   ServerAdmin webmaster@domain.se
   ServerName sub.domain.se
   DocumentRoot /var/www/html/heimdall

   DirectoryIndex index.php index.html default.php welcome.php
   <Directory /var/www/html/heimdall>
      Options Indexes FollowSymLinks MultiViews
      AllowOverride all
      Order allow,deny
      allow from all
   </Directory>

   SSLEngine on
   SSLCertificateKeyFile   /etc/letsencrypt/live/sub.domain.se/privkey.pem
   SSLCertificateFile      /etc/letsencrypt/live/sub.domain.se/cert.pem
   SSLCertificateChainFile /etc/letsencrypt/live/sub.domain.se/chain.pem
        
   ErrorLog ${APACHE_LOG_DIR}/sub.domain.se_error.log
   CustomLog ${APACHE_LOG_DIR}/sub.domain.se_access.log combined
</VirtualHost>
```

So with the above vhost, Heimdall works just as expected. 

But when adding Auth0 authentication (vhost below) in front of the app Heimdall throws this error:
```
Symfony \ Component \ Debug \ Exception \ FatalThrowableError (E_RECOVERABLE_ERROR)
Argument 1 passed to Illuminate\Auth\SessionGuard::login() 
must implement interface Illuminate\Contracts\Auth\Authenticatable, null given, 
called in /home/user/public/heimdall/vendor/laravel/framework/src/Illuminate/Auth/AuthManager.php on line 294
```

The (very nice, by the way) error page also highlights this function
```
/home/user/public/heimdall/vendor/laravel/framework/src/Illuminate/Auth/SessionGuard.php:
public function login(AuthenticatableContract $user, $remember = false) {
$this->updateSession($user->getAuthIdentifier());
```

I consider my Auth0 authenticator code-block very well-tested, and I strongly suspect the issue lies with Heimdall. Auth0 is working fine for me in front of several other webapps (Muximux, Radarr, Sonarr, et al.) with *exactly* the same code as here (except for domain names and so on).

Here's my Apache vhost which seems to cause Heimdall to throw the error:
```
<VirtualHost *:80>
   ServerAdmin webmaster@domain.se
   ServerName sub.domain.se
   DocumentRoot /var/www/html/heimdall

   Redirect permanent / https://sub.domain.se
   ErrorLog ${APACHE_LOG_DIR}/sub.domain.se_error.log
   CustomLog ${APACHE_LOG_DIR}/sub.domain.se_access.log combined
</VirtualHost>

<VirtualHost *:443>
   ServerAdmin webmaster@domain.se
   ServerName sub.domain.se
   DocumentRoot /var/www/html/heimdall

   DirectoryIndex index.php index.html default.php welcome.php
   <Directory /var/www/html/heimdall>
      Options Indexes FollowSymLinks MultiViews
      AllowOverride all
      Order allow,deny
      allow from all
   </Directory>

   # Auth0 authentication
   OIDCProviderIssuer https://mydomain.eu.auth0.com
   OIDCProviderAuthorizationEndpoint https://mydomain.eu.auth0.com/authorize
   OIDCProviderTokenEndpoint https://mydomain.eu.auth0.com/oauth/token
   OIDCProviderTokenEndpointAuth client_secret_post
   OIDCProviderUserInfoEndpoint https://mydomain.eu.auth0.com/userinfo
   OIDCClientID <secret-string>
   OIDCClientSecret <secret-string>
   OIDCCryptoPassphrase <secret-string>
   OIDCProviderJwksUri https://mydomain.eu.auth0.com/.well-known/jwks.json
   OIDCScope "openid profile"
   OIDCRedirectURI https://sub.domain.se/oauth2callback
   OIDCCookiePath /
   <Location />
      AuthType openid-connect
      Require valid-user
      LogLevel debug
   </Location>

   SSLEngine on
   SSLCertificateKeyFile   /etc/letsencrypt/live/sub.domain.se/privkey.pem
   SSLCertificateFile      /etc/letsencrypt/live/sub.domain.se/cert.pem
   SSLCertificateChainFile /etc/letsencrypt/live/sub.domain.se/chain.pem
        
   ErrorLog ${APACHE_LOG_DIR}/sub.domain.se_error.log
   CustomLog ${APACHE_LOG_DIR}/sub.domain.se_access.log combined
</VirtualHost>
```

And finally, my `.env`:
```
APP_NAME=Heimdall
APP_ENV=local
APP_KEY=base64:<secret-string>
APP_DEBUG=true
APP_LOG_LEVEL=debug
APP_URL=http://sub.domain.se

DB_CONNECTION=sqlite
DB_DATABASE=app.sqlite

BROADCAST_DRIVER=log
CACHE_DRIVER=file
SESSION_DRIVER=file
SESSION_LIFETIME=120
QUEUE_DRIVER=sync

REDIS_HOST=127.0.0.1
REDIS_PASSWORD=null
REDIS_PORT=6379

MAIL_DRIVER=smtp
MAIL_HOST=smtp.mailtrap.io
MAIL_PORT=2525
MAIL_USERNAME=null
MAIL_PASSWORD=null
MAIL_ENCRYPTION=null

PUSHER_APP_ID=
PUSHER_APP_KEY=
PUSHER_APP_SECRET=
PUSHER_APP_CLUSTER=mt1
```

as per title

https://iot.mozilla.org/gateway/

heimdall is generating http links when I want it to generate https links. 

I setup heimdall using docker container in kubernetes. I used https://hub.docker.com/r/linuxserver/heimdall/. The container is listening on port 80 (http). 

After initializing the application data, I edited www/.env and changed APP_URL to be "APP_URL=https://start.example.org" and restarted. Links are still incorrectly being generated. 

it is my understanding that heimdall uses laravel and it seems to have a lot of confusion surrounding generating HTTPS urls when run with a reverse proxy. 

Is there anything else to get heimdall to work in this environment?


At the moment, if you wish to have a solid colour for the background you have to create and upload a wallpaper image of just that colour.

It would be great to be able to set the background to a static colour by using the colour picker (as you do when creating an app box), thereby avoiding having to upload a wallpaper image altogether.
Heimdall already works without javascript but not optimal.
For example some icons are not shown. Some users disable javascript for privacy reasons, if there would be some configuration option for javascript on/off (of course dynamic updates wont work anymore) this would be really nice.
Enhanced qBittorrent worked fine with qBittorrent 4.1.x in LSIO docker container, but after recently upgrading to 4.2.0, the feature stopped working. Config test returns `Failed: Please make sure your URL is correct and that there is a trailing slash`.
It would be nice if we could hide the admin buttons that are in the bottom right of the homepage. My users never need these links and I access an admin tag so they would be visible there for me. Basically less clutter for the end-user.