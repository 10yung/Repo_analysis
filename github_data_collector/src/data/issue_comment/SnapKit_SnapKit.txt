Tell me please, how to get constant positionX for testButton (as it is done in frames) after set constraints to testButton.

`self.testButton.snp.makeConstraints { (make) -> Void in
      make.centerX.equalTo(self.carListView)
      make.width.equalTo(200)
      make.height.equalTo(20)
      make.top.equalTo(self.carListArray.last!.snp.bottom).offset(14)
  }`

After updating to Xcode 11, the iPhone 6S simulator is no longer
available, causing all iOS builds to fail.
Enable creation of constraints that use standard system spacing.

Implementation of this enhancement request: https://github.com/SnapKit/SnapKit/issues/630
Âú®Áà∂ËßÜÂõæÁöÑ1/3Â§ÑÊÄé‰πàÂÆûÁé∞ÂëÄ„ÄÇ‰∏çÊòØÂÆΩÂ∫¶1/3Â§Ñ„ÄÇÊòØÁ¶ªÂ∑¶Ëæπ1/3Â§Ñ
make.width.equalToSuperview().dividedBy(3)
make.height.equalTo(49)
make.leading.equalToSuperview().dividedBy(6)„ÄÇ‰∏çËµ∑‰ΩúÁî®
### New Issue Checklist

üö´ If this template is not filled out your issue **will** be closed with no comment. üö´

* [ ‚úì] I have looked at the [Documentation](http://snapkit.io/docs)
* [ ‚úì] I have read the [F.A.Q.](http://snapkit.io/faq)
* [ ‚úì] I have filled out this issue template.

### Issue Info
 Platform                |  ios
 Platform Version        |  12.0 to 13.3
 SnapKit Version         |  5.0.0
 Integration Method      | carthage
 

### Issue Description
making a constraints for a view takes for a specific case 0.18 seconds, after changing it to normal UIKit constraints it becomes 0.006 seconds. FYI this only happens in one specific block and here the code

`

          acceptedProgressBar.snp.makeConstraints { (maker) in
                maker.top.bottom.equalToSuperview()
                maker.leading.equalTo(tooFewProgressBar.snp.trailing).inset(-3)
                acceptedProgressTrailingToTooManyProgressConstraint = maker.trailing.equalTo(tooManyProgressBar.snp.leading).inset(-3).constraint
                acceptedProgressTrailingToSuperViewConstraint = maker.trailing.equalToSuperview().constraint
            }
          acceptedProgressTrailingToSuperViewConstraint?.deactivate()
`

UIKit version 
`

            acceptedProgressBar.topAnchor.constraint(equalTo: sliderContainer.topAnchor).isActive = true
            acceptedProgressBar.bottomAnchor.constraint(equalTo: sliderContainer.bottomAnchor).isActive = true
            acceptedProgressBar.leadingAnchor.constraint(equalTo: tooFewProgressBar.trailingAnchor, constant: 3).isActive = true
            acceptedProgressTrailingToTooManyProgressConstraint = acceptedProgressBar.trailingAnchor.constraint(equalTo: tooManyProgressBar.leadingAnchor, constant: -3)
            acceptedProgressTrailingToSuperViewConstraint = acceptedProgressBar.trailingAnchor.constraint(equalTo: sliderContainer.trailingAnchor)
            acceptedProgressTrailingToTooManyProgressConstraint?.isActive = true
            acceptedProgressTrailingToSuperViewConstraint?.isActive = false
            sliderContainer.layoutIfNeeded()
`


I encountered an issue like this: [https://github.com/jpsim/Yams/issues/131](https://github.com/jpsim/Yams/issues/131)
While using the **Carthage**, we must set the **DYLIB_COMPATIBILITY_VERSION** & **DYLIB_CURRENT_VERSION** to 1 otherwise other dependencies that use **SnapKit** as a dependency will be failed to run (build successfully but will be crashed on the App launch).
SnapKit works well in OS X 10.11. This PR prevents Xcode from complaining when SnapKit is added to a project whose macOS Deployment Target is 10.11.

Hello, I hope to provide support for Xcode 11 SPM.
### New Issue Checklis

* [x] I have looked at the [Documentation](http://snapkit.io/docs)
* [x] I have read the [F.A.Q.](http://snapkit.io/faq)
* [x] I have filled out this issue template.

### Issue Info

 Info                    | Value                               |
-------------------------|-------------------------------------|
 Platform                | ios/tvos
 Platform Version        | All
 SnapKit Version         | 5.0.1
 Integration Method      | All
 

### Issue Description

When laying out a series of labels vertically, [constraint(equalToSystemSpacingBelow:multiplier:)](https://developer.apple.com/documentation/uikit/nslayoutyaxisanchor/2866022-constraint) is useful, but it is not currently supported in SnapKit as far as I can tell. While it is possible to create this constraint using vanilla UIKit and the rest of our constraints in SnapKit, it would be ideal if we could do something like
```
label2.snp.makeConstraints { make in 
    make.firstBaseline.equalToSystemSpacingBelow(label1.snp.lastBaseline).multipliedBy(1)
}
```
which would be analogous to
```
label2.firstBaselineAnchor.constraint(equalToSystemSpacingBelow: label1.lastBaselineAnchor, multiplier: 1).isActive = true
```

If this is a feature people would be open to adding, I can look into what it would take to support it. 
### Issue Info

 Info                    | Value                               |
-------------------------|-------------------------------------|
 Platform                         |        iOS
 Platform Version             |      13.0
 SnapKit Version               |      4.2.0
 Integration Method           |     carthage/cocoapods/manually
 

### UIControl not working snapkit

```
UIControlView.snp.makeConstraints { make in
            make.trailing.equalToSuperview().inset(10)
            make.centerY.equalTo(viewB)
}

```

When the view has loaded, the UIControlView is left at the origin 0,0 of its superview.
However when using NSLayoutConstraint it works as expected.