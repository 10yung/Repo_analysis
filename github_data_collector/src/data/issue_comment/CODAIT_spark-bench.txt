Bumps [nokogiri](https://github.com/sparklemotion/nokogiri) from 1.8.2 to 1.10.5.
<details>
<summary>Release notes</summary>

*Sourced from [nokogiri's releases](https://github.com/sparklemotion/nokogiri/releases).*

> ## 1.10.5 / 2019-10-31
> 
> ### Dependencies
> 
> * [MRI] vendored libxml2 is updated from 2.9.9 to 2.9.10
> * [MRI] vendored libxslt is updated from 1.1.33 to 1.1.34
> 
> 
> 
> ## 1.10.4 / 2019-08-11
> 
> ### Security
> 
> #### Address CVE-2019-5477 ([#1915](https://github-redirect.dependabot.com/sparklemotion/nokogiri/issues/1915))
> 
> A command injection vulnerability in Nokogiri v1.10.3 and earlier allows commands to be executed in a subprocess by Ruby's `Kernel.open` method. Processes are vulnerable only if the undocumented method `Nokogiri::CSS::Tokenizer#load_file` is being passed untrusted user input.
> 
> This vulnerability appears in code generated by the Rexical gem versions v1.0.6 and earlier. Rexical is used by Nokogiri to generate lexical scanner code for parsing CSS queries. The underlying vulnerability was addressed in Rexical v1.0.7 and Nokogiri upgraded to this version of Rexical in Nokogiri v1.10.4.
> 
> This CVE's public notice is [sparklemotion/nokogiri#1915](https://github-redirect.dependabot.com/sparklemotion/nokogiri/issues/1915)
> 
> 
> ## 1.10.3 / 2019-04-22
> 
> ### Security Notes
> 
> [MRI] Pulled in upstream patch from libxslt that addresses CVE-2019-11068. Full details are available in [#1892](https://github-redirect.dependabot.com/sparklemotion/nokogiri/issues/1892). Note that this patch is not yet (as of 2019-04-22) in an upstream release of libxslt.
> 
> ## 1.10.2 / 2019-03-24
> 
> ### Security
> 
> * [MRI] Remove support from vendored libxml2 for future script macros. [#1871](https://github-redirect.dependabot.com/sparklemotion/nokogiri/issues/1871)
> * [MRI] Remove support from vendored libxml2 for server-side includes within attributes. [#1877](https://github-redirect.dependabot.com/sparklemotion/nokogiri/issues/1877)
> 
> 
> ### Bug fixes
> 
> * [JRuby] Fix node ownership in duplicated documents. [#1060](https://github-redirect.dependabot.com/sparklemotion/nokogiri/issues/1060)
> * [JRuby] Rethrow exceptions caught by Java SAX handler. [#1847, [#1872](https://github-redirect.dependabot.com/sparklemotion/nokogiri/issues/1872)] (Thanks, [@&#8203;adjam](https://github.com/adjam)!)
> 
> 
> 
> ## 1.10.1 / 2019-01-13
> 
> ### Features
> 
> * [MRI] During installation, handle Xcode 10's new library pathOS. [#1801, [#1851](https://github-redirect.dependabot.com/sparklemotion/nokogiri/issues/1851)] (Thanks, [@&#8203;mlj](https://github.com/mlj) and [@&#8203;deepj](https://github.com/deepj)!)
> * Avoid unnecessary creation of `Proc`s in many methods. [#1776](https://github-redirect.dependabot.com/sparklemotion/nokogiri/issues/1776) (Thanks, [@&#8203;chopraanmol1](https://github.com/chopraanmol1)!)
> 
></tr></table> ... (truncated)
</details>
<details>
<summary>Changelog</summary>

*Sourced from [nokogiri's changelog](https://github.com/sparklemotion/nokogiri/blob/master/CHANGELOG.md).*

> ## 1.10.5 / 2019-10-31
> 
> ### Dependencies
> 
> * [MRI] vendored libxml2 is updated from 2.9.9 to 2.9.10
> * [MRI] vendored libxslt is updated from 1.1.33 to 1.1.34
> 
> 
> ## 1.10.4 / 2019-08-11
> 
> ### Security
> 
> #### Address CVE-2019-5477 ([#1915](https://github-redirect.dependabot.com/sparklemotion/nokogiri/issues/1915))
> 
> A command injection vulnerability in Nokogiri v1.10.3 and earlier allows commands to be executed in a subprocess by Ruby's `Kernel.open` method. Processes are vulnerable only if the undocumented method `Nokogiri::CSS::Tokenizer#load_file` is being passed untrusted user input.
> 
> This vulnerability appears in code generated by the Rexical gem versions v1.0.6 and earlier. Rexical is used by Nokogiri to generate lexical scanner code for parsing CSS queries. The underlying vulnerability was addressed in Rexical v1.0.7 and Nokogiri upgraded to this version of Rexical in Nokogiri v1.10.4.
> 
> This CVE's public notice is [sparklemotion/nokogiri#1915](https://github-redirect.dependabot.com/sparklemotion/nokogiri/issues/1915)
> 
> 
> ## 1.10.3 / 2019-04-22
> 
> ### Security Notes
> 
> [MRI] Pulled in upstream patch from libxslt that addresses CVE-2019-11068. Full details are available in [#1892](https://github-redirect.dependabot.com/sparklemotion/nokogiri/issues/1892). Note that this patch is not yet (as of 2019-04-22) in an upstream release of libxslt.
> 
> 
> ## 1.10.2 / 2019-03-24
> 
> ### Security
> 
> * [MRI] Remove support from vendored libxml2 for future script macros. [#1871](https://github-redirect.dependabot.com/sparklemotion/nokogiri/issues/1871)
> * [MRI] Remove support from vendored libxml2 for server-side includes within attributes. [#1877](https://github-redirect.dependabot.com/sparklemotion/nokogiri/issues/1877)
> 
> 
> ### Bug fixes
> 
> * [JRuby] Fix node ownership in duplicated documents. [#1060](https://github-redirect.dependabot.com/sparklemotion/nokogiri/issues/1060)
> * [JRuby] Rethrow exceptions caught by Java SAX handler. [#1847, [#1872](https://github-redirect.dependabot.com/sparklemotion/nokogiri/issues/1872)] (Thanks, [@&#8203;adjam](https://github.com/adjam)!)
> 
> 
> ## 1.10.1 / 2019-01-13
> 
> ### Features
> 
> * [MRI] During installation, handle Xcode 10's new library path. [#1801, [#1851](https://github-redirect.dependabot.com/sparklemotion/nokogiri/issues/1851)] (Thanks, [@&#8203;mlj](https://github.com/mlj) and [@&#8203;deepj](https://github.com/deepj)!)
> * Avoid unnecessary creation of `Proc`s in many methods. [#1776](https://github-redirect.dependabot.com/sparklemotion/nokogiri/issues/1776) (Thanks, [@&#8203;chopraanmol1](https://github.com/chopraanmol1)!)
> 
> 
></tr></table> ... (truncated)
</details>
<details>
<summary>Commits</summary>

- [`1bc2ff9`](https://github.com/sparklemotion/nokogiri/commit/1bc2ff9f6218e1f814b18040e5bbb49b7b7bf60b) version bump to v1.10.5
- [`383c1f8`](https://github.com/sparklemotion/nokogiri/commit/383c1f8ee833cb63ca93fe3ecfe8d93755a993b6) update CHANGELOG
- [`43a1753`](https://github.com/sparklemotion/nokogiri/commit/43a175339b47b8c604508813fc75b83f13cd173e) dependency: update libxslt to 1.1.34 final
- [`99d8a6b`](https://github.com/sparklemotion/nokogiri/commit/99d8a6b6ec83077652a06a333571e4705120f022) dependency: update libxml to 2.9.10 final
- [`2a86496`](https://github.com/sparklemotion/nokogiri/commit/2a86496ca565aa283c4fd9cd247d21c6026d7b61) add suppressions for ruby 2.7
- [`dca794a`](https://github.com/sparklemotion/nokogiri/commit/dca794a716fb285e2b19f8e028e61e4e3613ed14) update CHANGELOG with correct release date for v1.10.4
- [`077e010`](https://github.com/sparklemotion/nokogiri/commit/077e010613cfb41f8cc03383c3e3b901a3985a49) update rake-compiler commands to install bundler
- [`beb832e`](https://github.com/sparklemotion/nokogiri/commit/beb832e3a67ba9aef1b4e83640bc8fd08fbc6da5) version bump to v1.10.4
- [`5d30128`](https://github.com/sparklemotion/nokogiri/commit/5d30128343573a9428c86efc758ba2c66e9f12dc) Merge branch '1915-css-tokenizer-load-file-vulnerability_v1.10.x' into v1.10.x
- [`c86b5fc`](https://github.com/sparklemotion/nokogiri/commit/c86b5fc02e5b50308d8de08b9a194aa71b701081) update CHANGELOG
- Additional commits viewable in [compare view](https://github.com/sparklemotion/nokogiri/compare/v1.8.2...v1.10.5)
</details>
<br />

[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=nokogiri&package-manager=bundler&previous-version=1.8.2&new-version=1.10.5)](https://help.github.com/articles/configuring-automated-security-fixes)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot ignore this [patch|minor|major] version` will close this PR and stop Dependabot creating any more for this minor/major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language
- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language
- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language
- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language

You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/CODAIT/spark-bench/network/alerts).

</details>
Apache Spark 2.4 provides built-in support for reading and writing Apache Avro Data:

[https://spark.apache.org/docs/2.4.2/sql-data-sources-avro.html](https://spark.apache.org/docs/2.4.2/sql-data-sources-avro.html)

Apache Spark 2.4.2 is pre-built with Scala 2.12.

<!-- 
    WELCOME to Spark-Bench! Thanks for being a part of the project!
    Please use Markdown code and syntax highlighting for you config file 
    and your stack trace. It makes it much easier to read! 
    https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet#code
-->
 
### spark-bench_2.3.0_0.4.0-RELEASE

I get the below error when using spark-bench to generate graph data:

Exception in thread "main" java.lang.Exception: Unrecognized or unspecified save format. Please check the file extension or add a file format to your arguments

error happens in :  verifyFormatOrThrow(SparkFuncs.scala:92)

You have said that "the Graph Data Generator can only output to .txt" but your "verifyFormat" function (SparkFuncs.scala:52) doesn't accept ".txt" !!!!

How can I use the Graph Data Generator? Is there any new release? 

Thanks in advance,
<!-- 
    WELCOME to Spark-Bench! Thanks for being a part of the project!
    Please use Markdown code and syntax highlighting for you config file 
    and your stack trace. It makes it much easier to read! 
    https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet#code
-->
 
### Spark-Bench version (version number, tag, or git commit hash)
2.3.0

### Livy Server version
0.5

### Details of your cluster setup (Spark version, Standalone/Yarn/Local/Etc)
Spark version: 2.4.0 (installed from "spark-2.4.0-bin-hadoop2.7.tgz") 
type:  Single node, no hadoop, just installed Livy server

### Scala version on your cluster
2.11.12
### Your exact configuration file (with system details anonymized for security)
The content of "local-livy-example.conf":

spark-bench = {
  spark-submit-config = [{
    livy = {
      url = "<my_spark_server_ip>:8998"
      poll-seconds = 1
    }
    spark-bench-jar = "/root/packages/apache/spark/spark-bench_2.3.0_0.4.0-RELEASE/lib/spark-bench-2.3.0_0.4.0-RELEASE.jar"
    workload-suites = [
      {
        descr = "One run of SparkPi and that's it!"
        benchmark-output = "console"
        workloads = [
          {
            name = "sparkpi"
            slices = 10
          }
        ]
      }
    ]
  }]
}



### Relevant stacktrace
Exception in thread "main" com.ibm.sparktc.sparkbench.utils.SparkBenchException: REST call returned non-sucess code: 400
	at com.ibm.sparktc.sparkbench.sparklaunch.submission.livy.LivySubmit$$anonfun$2.apply(LivySubmit.scala:37)
	at com.ibm.sparktc.sparkbench.sparklaunch.submission.livy.LivySubmit$$anonfun$2.apply(LivySubmit.scala:37)
	at com.ibm.sparktc.sparkbench.sparklaunch.submission.livy.LivySubmit$.sendPostBatchRequest(LivySubmit.scala:61)
	at com.ibm.sparktc.sparkbench.sparklaunch.submission.livy.LivySubmit.launch(LivySubmit.scala:102)
	at com.ibm.sparktc.sparkbench.sparklaunch.SparkLaunch$.com$ibm$sparktc$sparkbench$sparklaunch$SparkLaunch$$launch$1(SparkLaunch.scala:57)
	at com.ibm.sparktc.sparkbench.sparklaunch.SparkLaunch$$anonfun$launchJobs$2.apply(SparkLaunch.scala:65)
	at com.ibm.sparktc.sparkbench.sparklaunch.SparkLaunch$$anonfun$launchJobs$2.apply(SparkLaunch.scala:65)
	at scala.collection.immutable.List.foreach(List.scala:381)
	at com.ibm.sparktc.sparkbench.sparklaunch.SparkLaunch$.launchJobs(SparkLaunch.scala:65)
	at com.ibm.sparktc.sparkbench.sparklaunch.SparkLaunch$.main(SparkLaunch.scala:38)
	at com.ibm.sparktc.sparkbench.sparklaunch.SparkLaunch.main(SparkLaunch.scala)
Caused by: java.lang.Exception
	at com.ibm.sparktc.sparkbench.utils.SparkBenchException$.apply$default$2(SparkBenchException.scala:22)
	... 11 more

### Description of your problem and any other relevant info
I can't run example(e.g. local-livy-example.conf)  using "spark-bench",  detailed error stack is as above.
Not sure if it's a compatibility issue between livy server and speark-bench.
Github automatically detected and alerted about security vulnerabilities in the Gemfile for the docs site. This should be easy enough to update.
"mean" and "std" property is configured as double type. But if
it's configured as 3000 or 3000.0, it could only be recognized
as int type. Now use 3000.001 to force it as double type.

Signed-off-by: Haojian Zhuang <haojian.zhuang@linaro.org>
<!-- 
    WELCOME to Spark-Bench! Thanks for being a part of the project!
    Please use Markdown code and syntax highlighting for you config file 
    and your stack trace. It makes it much easier to read! 
    https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet#code
-->
 
### Spark-Bench version (version number, tag, or git commit hash)
spark-bench-launch-2.1.1_0.2.2-RELEASE


### Details of your cluster setup (Spark version, Standalone/Yarn/Local/Etc)
Spark.2.2.1


### Scala version on your cluster
Scala version 2.11.8
Spark Cluster: Spark Standalone ( 1 master and 2 slaves).


### Description of your problem and any other relevant info

I am working on analyzing Spark performance using as many workloads that I can use. Till this moment, I am able to use the KMeans (data generation and workload). I want to use the Logistic Regression workload but I could not because there is No data generation for Logistic Regression.
I hav tried to run the "legacy version" of spark bench, but i got some issues because my SPark version is 2.2.1 .
 IS there any way to get or generate the input data to the Logistic Regression workload? 


Many thanks in advance for your help.  
In kmeans document, the same workload is listed twice. Now remove
the duplicated one.

Signed-off-by: Haojian Zhuang <haojian.zhuang@linaro.org>
This workload will output to /tmp/kmeans-data.csv.

In LinearRegressionDataGen.scala, case class LinearRegressionDataGen()
checks whether the output file is csv file or not. If it's csv file,
stop running the workload immediately. So this workload is impossible
to run, just remove it from document.

Signed-off-by: Haojian Zhuang <haojian.zhuang@linaro.org>
commit 992a278f0e2fea6a4333bfe1d7ed98aa95011e0d
Author: Emily Curtin <emily@framebit.org>
Date:   Fri Feb 2 14:46:33 2018 -0500

    Addressing code review comments

    Moves format check to front.

This commit add verifyFormatOrThrow(outputDir, fileFormat) in
verifyOutput(). It causes graph data generator workload failure
since the workload only generate output with txt file format.
But sparkbench only supports csv, parquet, etc. The confliction
of file format causes the workload failure. Now remove the
verifyFormatOrThrow() instead.

Signed-off-by: Haojian Zhuang <haojian.zhuang@linaro.org>