Hi, I'm having issue extracting values from Starbuck's latest 10-k.

```
library(XBRL)
xbrl_sbux <- "https://www.sec.gov/Archives/edgar/data/829224/000082922418000052/sbux-20180930.xml"
old_o <- options(stringsAsFactors = FALSE)
xbrl_data <- xbrlDoAll(xbrl_sbux)
options(old_o)
```

Trace:
```
Error in fileFromCache(file) : 
  Error in download.file(file, cached.file, quiet = !verbose) : 
  cannot open URL 'https://www.sec.gov/Archives/edgar/data/829224/000082922418000052/https://xbrl.sec.gov/dei/2018/dei-2018-01-31.xsd'

In addition: Warning message:
In download.file(file, cached.file, quiet = !verbose) :
  cannot open URL 'https://www.sec.gov/Archives/edgar/data/829224/000082922418000052/https://xbrl.sec.gov/dei/2018/dei-2018-01-31.xsd': HTTP status was '403 Forbidden'
```
It seems like two links are being incorrectly appended but not sure why, any help would be great, thanks!
Hi,

I'm following the Readme GitHub file to reproduce the example listed, but when I try to use the merge.statement function, it does not work. Anyone face this problem?

Best

`merge.statement(st_all$StatementOfFinancialPositionClassified, st_all$StatementOfIncome)`
Error in merge.statement(st_all$StatementOfFinancialPositionClassified,  : 
  could not find function "merge.statement"`

im running the following code:
`
library(XBRL)
xbrl_url2014 <- "https://www.sec.gov/Archives/edgar/data/1400000/000121152415000130/abki-20150531_cal.xml"
old_o <- options(stringsAsFactors = FALSE)
xbrl_data_aapl2014 <- xbrlDoAll(xbrl_url2014)
options(old_o)
`

and keep getting the following error:

> Error in if (substr(file.name, 1, 5) != "http:") {: argument is of length zero
> Traceback:
> 
> 1. xbrlDoAll(xbrl_url2014)
> 2. xbrl$processSchema(xbrl$getSchemaName())
> 3. which(discovered.files == file)
> 4. xbrl$getSchemaName()
> 5. fixFileName(dname.inst, .Call("xbrlGetSchemaName", doc.inst, 
>  .     PACKAGE = "XBRL"))
Is it possible to apply new taxonomies?
Thanks for your work on this very interesting package. I'm getting following error (traceback copied below) using R 3.4.2 (on a Windows 64-bit machine). There's something about the date not being numeric (which it clearly isn't -- it's a string ordinarily; I've modified it to be a date in the below example) ... but I don't know why that matters to the data frame.

Any thoughts?

Mark

```
> pnl %>% calculate(calculations = profit_margins, digits = 2)
 Hide Traceback
 
 Rerun with Debug
 Error in Math.data.frame(list(Net_Margin = c(0.0947474225936983, 0.100807355791349,  : 
  non-numeric variable in data frame: date 
11.
stop("non-numeric variable in data frame: ", vnames[!mode.ok]) 
10.
Math.data.frame(structure(list(Net_Margin = c(0.0947474225936983, 
0.100807355791349, 0.107839975743066, 0.116888930060399, 0.120758688137547
), date = structure(c(15705, 16070, 16435, 16800, 17166), class = "Date")), .Names = c("Net_Margin", 
"date"), class = "data.frame", row.names = c(NA, -5L)), 2) 
9.
calculate(., calculations = profit_margins, digits = 2) 
8.
function_list[[k]](value) 
7.
withVisible(function_list[[k]](value)) 
6.
freduce(value, `_function_list`) 
5.
`_fseq`(`_lhs`) 
4.
eval(quote(`_fseq`(`_lhs`)), env, env) 
3.
eval(quote(`_fseq`(`_lhs`)), env, env) 
2.
withVisible(eval(quote(`_fseq`(`_lhs`)), env, env)) 
1.
pnl %>% calculate(calculations = profit_margins, digits = 2) 
```

Great package! Is there a way to pull outstanding shares from the qs and ks? Its usually listed on the first page of the report so I'm sure it's there, just haven't figured out how to access it.
Many thanks for publishing the finstr package!

While I was able to get this package working for XBRL documents filed with SEC, I am running into a strange error when working with XBRL documents filed with [Ministry of Corporate Affairs (MCA)](http://mca.gov.in/) (India).  Specifically, the `xbrl_get_statments()` function call fails.

```

# Get annual report XBRL and extract statements
options(stringsAsFactors = FALSE)
org2015Inst <- INST #the XML file from MCA website
org2015 <- xbrlDoAll(org2015Inst,cache.dir = "XBRLCache", prefix.out="out", verbose = TRUE)
org2015Stmts <- xbrl_get_statements(org2015)
```

And, this is the error I get.

```
> org2015Stmts <- xbrl_get_statements(org2015)
Error: incorrect length (0), expecting: 965
```

Is there any way we can get more detailed items that are there in the financial statements but not output from your functions? For example, I want to extract information on warranty accruals and warranty claims, which are output in the XBRL list. However, there is no way I can get them from your functions because they cover only high level financial statements.