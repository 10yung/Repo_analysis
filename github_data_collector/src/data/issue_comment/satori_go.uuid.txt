https://github.com/satori/go.uuid/issues/84
The readme claims `With 100% test coverage and benchmarks out of box.`
However the coveralls report (seen in the readme badge) seems to suggest that it is 31%

[this build](https://coveralls.io/builds/21830617) seems to be to blame.

As it is a single build, I think this may be an artificial coverage decrease, but I am not sure
Hello everyone, I started experimenting with mod. When I initialize the modules in my project, all libraries are loaded and github.com/satori/go.uuid is loaded accordingly.. But when starting go run server.go, I get an error **{
	"resource": "/d:/myProject/oauth/tokenstore/tokenstore.go",
	"owner": "_generated_diagnostic_collection_name_#0",
	"severity": 8,
	"message": "cannot initialize 2 variables with 1 values",
	"source": "LSP",
	"startLineNumber": 41,
	"startColumn": 20,
	"endLineNumber": 41,
	"endColumn": 30
}**

![image](https://user-images.githubusercontent.com/37252559/64837724-b4588900-d611-11e9-8c45-d063da464c68.png)


I am using vscode.

My project is outside gopath
I called uuid.NewV1() many times on Windows, it return the same result.

Does it caused by something like this?
[why-does-time-now-unixnano-returns-the-same-result-after-an-io-operation](https://stackoverflow.com/questions/57285292/why-does-time-now-unixnano-returns-the-same-result-after-an-io-operation)

any solution?
we have dependence on master branch, but go.mod could not specify master version.
Duplicate Definition
fix no new variables error in example
I have been depending on my fork for some time in projects. Seems worthwhile to merge upstream.

Added support for marshaling/unmarshaling of MongoDB's BSON UUID binary format.