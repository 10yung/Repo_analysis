Hi,
i am trying to build the source (develob branch): mvn clean install -DskitpTests=true
But it's failing with :
```
[INFO] --- scalapb-maven-plugin:1.2:compile (default) @ obp-api ---
[INFO] Reading proto files in '/home/xxx/OBP-API/obp-api/src/main/protobuf'.
[INFO] Writing Scala files in '/home/xxx//OBP-API/obp-api/src/main/scala'.
protoc-jar: protoc version: 3.0.0, detected platform: linux-x86_64 (linux/amd64)
[INFO] ------------------------------------------------------------------------
[INFO] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  5.336 s
[INFO] Finished at: 2020-01-15T22:23:56Z
[INFO] ------------------------------------------------------------------------
[ERROR] Failed to execute goal net.catte:scalapb-maven-plugin:1.2:compile (default) on project obp-api: Error compiling protobuf files: Unsupported platform: protoc-3.0.0-linux-x86_64.exe -> [Help 1]
[ERROR] 
[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.
[ERROR] Re-run Maven using the -X switch to enable full debug logging.
[ERROR] 
[ERROR] For more information about the errors and possible solutions, please read the following articles:
[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoExecutionException
```
Any hint please ?
Best regards,
![image](https://user-images.githubusercontent.com/23308710/65621585-54c08d00-dfc4-11e9-9275-51fd04959735.png)

Is it time to use UUID here? 
If there is space in username: 
eg: Hongwei Zhang.

Then, we can not get the directLogin token back!!!


![image](https://user-images.githubusercontent.com/23308710/64859738-5cc71700-d62b-11e9-842e-6b30ac0c79ab.png)

following error getting while running (build completed sucessfully)
"C:\Program Files\Java\jdk1.8.0_112\bin\java.exe" "-javaagent:D:\software\IntelliJ IDEA Community Edition 2019.2.1\lib\idea_rt.jar=56822:D:\software\IntelliJ IDEA Community Edition 2019.2.1\bin" -Dfile.encoding=UTF-8 -classpath C:\Users\10641653\AppData\Local\Temp\classpath1164776050.jar RunWebApp
Error: Could not find or load main class RunWebApp
### Scenario

Developer using api submits a `post` request to `/obp/v3.1.0/banks/BANK_ID/customers` with an invalid value for `kyc_status`

### Expected response: 

When possible, the api response must inform the api user which field is invalid.

### Actual response: 

`{"code":400,"message":"OBP-10001: Incorrect json format. The Json body should be the PostCustomerJsonV310 "}
`

##### Motivation
Developers should be able to troubleshoot api responses themselves, provided there is enough error feedback based on the structure of the data they send.

The actual repose is not helpful. Out of 22 possible data-points for this api call, the developer has no clue which properties are invalid. 


### Proposed solution: 

use `display_internal_errors` or provide api validation only errors  

When we enable the props setting `display_internal_errors=True` 
Then the error message is more useful, for example:

`
{"code":400,"message":"OBP-10001: Incorrect json format. The Json body should be the PostCustomerJsonV310  <- No usable value for kyc_status\nDo not know how to convert JString(TRUE) into boolean"}
`
Right away , as an API user, it is possible to see the error is with the `kyc_status` property. The developer can now easily focus on correcting the data they are sending. 

There is concern @hongwei1  that `display_internal_errors` is too broad for this , as it may show internal errors which are sensitive. Therefore maybe a more granular setting is needed. 

 
![image](https://user-images.githubusercontent.com/1718624/62693491-88226a80-b9ca-11e9-8d99-3a71f429f365.png)

Currently the copyright date is until 2018
Proposed solution: State the current year in the footer
When the database connection fails, the user should see an error message:

Right now, the error message does not tell the developer that the database is the problem. 
![image](https://user-images.githubusercontent.com/1718624/62693281-18ac7b00-b9ca-11e9-89b2-17d8430399bd.png)


Proposed solution:

When the database connection fails
Show an error message that the database connection has failed
Hi,
I tried to develop an app in android studio. I followed all the instruction on README. But this appears instead, is this the correct outcome? Needs some explanation and guidance here.


![outcome](https://user-images.githubusercontent.com/53160259/61701418-b409e300-ad70-11e9-90de-01511b67e403.jpeg)


Hello!

I was trying out your API and I'm struggling to understand how bank details are added by a user so that the application has access to the account data of the user.
I was trying to implement according to the wiki but the page seems to be quite outdated:
https://github.com/OpenBankProject/OBP-API/wiki/Add-a-bank-Account

The for me interesting part [Banking Details](https://github.com/OpenBankProject/OBP-API/wiki/Add-a-bank-Account#banking-details) doesn't describe how a user is redirected back to enter his account data after he is logged in by the OpenBankProject site and is redirected to the REDIRECT_URL.

Hopefully someone can help me understand this better.
Thanks
We already provide `/obp/v3.1.0/management/banks/BANK_ID/cards/CARD_ID`

As an API user, it would be convenient to be able to also get a card via it's card number.

`/obp/v3.1.0/management/banks/BANK_ID/cards/CARD_NUMBER`

Proposed solution:

Add api call to `GET` card by card number. 