Useful for working around Issue #83
Bumps [handlebars](https://github.com/wycats/handlebars.js) from 4.0.12 to 4.5.3.
<details>
<summary>Changelog</summary>

*Sourced from [handlebars's changelog](https://github.com/wycats/handlebars.js/blob/master/release-notes.md).*

> ## v4.5.3 - November 18th, 2019
> Bugfixes:
> 
> - fix: add "no-prototype-builtins" eslint-rule and fix all occurences - f7f05d7
> - fix: add more properties required to be enumerable - 1988878
> 
> Chores / Build:
> - fix: use !== 0 instead of != 0 - c02b05f
> - add chai and dirty-chai and sinon, for cleaner test-assertions and spies, 
>   deprecate old assertion-methods  - 93e284e, 886ba86, 0817dad, 93516a0
> 
> Security:
> 
> - The properties `__proto__`, `__defineGetter__`, `__defineSetter__` and `__lookupGetter__` 
>   have been added to the list of "properties that must be enumerable".
>   If a property by that name is found and not enumerable on its parent, 
>   it will silently evaluate to `undefined`. This is done in both the compiled template and the "lookup"-helper. 
>   This will prevent new Remote-Code-Execution exploits that have been
>   published recently.
> 
> Compatibility notes: 
> 
> - Due to the security-fixes. The semantics of the templates using
>   `__proto__`, `__defineGetter__`, `__defineSetter__` and `__lookupGetter__` in the respect that those expression now return 
>   `undefined` rather than their actual value from the proto.
> - The semantics have not changed in cases where the properties are  enumerable, as in:
> 
> ```js
> {
>   __proto__: 'some string'
> }
> ```
> 
> - The change may be breaking in that respect, but we still only 
>   increase the patch-version, because the incompatible use-cases
>   are not intended, undocumented and far less important than fixing
>   Remote-Code-Execution exploits on existing systems.
> 
> 
> 
> [Commits](https://github.com/wycats/handlebars.js/compare/v4.5.2...v4.5.3)
> 
> ## v4.5.2 - November 13th, 2019
> # Bugfixes
> 
> - fix: use String(field) in lookup when checking for "constructor" - d541378
> - test: add fluent API for testing Handlebars - c2ac79c
> 
> Compatibility notes:
> - no incompatibility are to be expected
></tr></table> ... (truncated)
</details>
<details>
<summary>Commits</summary>

- [`c819c8b`](https://github.com/wycats/handlebars.js/commit/c819c8b533934d2ac18001d7eb27a3205b00c2f3) v4.5.3
- [`827c9d0`](https://github.com/wycats/handlebars.js/commit/827c9d0747bef7d7f89829779523b6b2dcf3051d) Update release notes
- [`f7f05d7`](https://github.com/wycats/handlebars.js/commit/f7f05d7558e674856686b62a00cde5758f3b7a08) fix: add "no-prototype-builtins" eslint-rule and fix all occurences
- [`1988878`](https://github.com/wycats/handlebars.js/commit/198887808780bbef9dba67a8af68ece091d5baa7) fix: add more properties required to be enumerable
- [`886ba86`](https://github.com/wycats/handlebars.js/commit/886ba86c2f9cc71b7d99b9018fbe2d72a57085cc) test/chore: add chai/expect and sinon to "runtime"-environment
- [`0817dad`](https://github.com/wycats/handlebars.js/commit/0817dad7e72c51d07f7700547d0c69aa79a4976b) test: add sinon as global variable to eslint in the specs
- [`93516a0`](https://github.com/wycats/handlebars.js/commit/93516a0b07026ebd23c84fddf270a0c8b570bc59) test: add sinon.js for spies, deprecate current assertions
- [`93e284e`](https://github.com/wycats/handlebars.js/commit/93e284ed9be1e38c5e6945f15af1ccd689f2ada6) chore: add chai and dirty-chai for better test assertions
- [`c02b05f`](https://github.com/wycats/handlebars.js/commit/c02b05fa819f46bb66c878bebc6e8006408ebd5c) fix: use !== 0 instead of != 0
- [`8de121d`](https://github.com/wycats/handlebars.js/commit/8de121d21c88a6ab877e3a0eec9daaac483f3bf0) v4.5.2
- Additional commits viewable in [compare view](https://github.com/wycats/handlebars.js/compare/v4.0.12...v4.5.3)
</details>
<br />

[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=handlebars&package-manager=npm_and_yarn&previous-version=4.0.12&new-version=4.5.3)](https://help.github.com/articles/configuring-automated-security-fixes)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot ignore this [patch|minor|major] version` will close this PR and stop Dependabot creating any more for this minor/major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language
- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language
- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language
- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language

You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/jaredpalmer/the-platform/network/alerts).

</details>
`defaultMatches` bleeds through the initial render resulting in flashes of wrong state. replacing `useEffect` with `useLayoutEffect` would fix this but would require a workaround for server-side rendering

alternatively something like this could work

```js
const mediaQueryList = useRef()
const getMediaQueryList = () => window.matchMedia(
  typeof query === 'string' ? query : json2mq(query)
);
let initialMatches;
if (typeof window !== 'undefined') {
  mediaQueryList.current = getMediaQueryList();
  initialMatches = mediaQueryList.current.matches;
}

initialMatches = typeof initialMatches !== 'undefined' ? initialMatches : defaultMatches;
const [matches, setMatches] = useState(initialMatches);

useEffect(
  () => {
    mediaQueryList.current = mediaQueryList.current || getMediaQueryList()
    // the rest of the method
  },
  [query]
)
```

what do you think?
Bumps [safer-eval](https://github.com/commenthol/safer-eval) from 1.2.3 to 1.3.5.
<details>
<summary>Commits</summary>

- [`6d5ed4b`](https://github.com/commenthol/safer-eval/commit/6d5ed4b90d676a10776b818dee84014dcd41e632) 1.3.5
- [`fbbc623`](https://github.com/commenthol/safer-eval/commit/fbbc623b7a6f6b9176dfed3f1c3d12ccc848f7b8) Merge pull request [#7](https://github-redirect.dependabot.com/commenthol/safer-eval/issues/7) from commenthol/strict-mode-recommendation
- [`1a87237`](https://github.com/commenthol/safer-eval/commit/1a8723704b30ac43c3c300223c6132e27b48fc21) fix: use strict mode recommendation
- [`b81dab9`](https://github.com/commenthol/safer-eval/commit/b81dab9c7ef88345e5e9a4490426ac171a489add) 1.3.4
- [`073267a`](https://github.com/commenthol/safer-eval/commit/073267ac30e67d3e5c1762c5d0373444ead61660) Merge pull request [#6](https://github-redirect.dependabot.com/commenthol/safer-eval/issues/6) from commenthol/fix-breakout-console
- [`25c3048`](https://github.com/commenthol/safer-eval/commit/25c304828b7fbfe228fbc9055f6004b181dd2c38) docu: Update tested browsers/ node versions
- [`25fbbe5`](https://github.com/commenthol/safer-eval/commit/25fbbe53e46c54d10b4c583b8f5c659933400ccb) fix: sandbox breakout with console.constructor...
- [`1ff9411`](https://github.com/commenthol/safer-eval/commit/1ff9411b4099e71798cfd822d5b0a536b39f31d5) chore: bump dependencies
- [`d3167c8`](https://github.com/commenthol/safer-eval/commit/d3167c8cb863dbd373381a563a9045c2a07c6799) 1.3.3
- [`ba69286`](https://github.com/commenthol/safer-eval/commit/ba692863fe7062085b62669525d405257a16f486) Merge pull request [#5](https://github-redirect.dependabot.com/commenthol/safer-eval/issues/5) from commenthol/warning
- Additional commits viewable in [compare view](https://github.com/commenthol/safer-eval/compare/v1.2.3...v1.3.5)
</details>
<br />

[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=safer-eval&package-manager=npm_and_yarn&previous-version=1.2.3&new-version=1.3.5)](https://help.github.com/articles/configuring-automated-security-fixes)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot ignore this [patch|minor|major] version` will close this PR and stop Dependabot creating any more for this minor/major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language
- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language
- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language
- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language

You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/jaredpalmer/the-platform/network/alerts).

</details>
Allows to use those hooks with Gatsby for example
the [doc](https://github.com/palmerhq/the-platform#script) says that `Scripts` accepts "anything else you can pass to a `<script>` tag". But judging from the code
https://github.com/palmerhq/the-platform/blob/f721b0a2e44a86b4e5c0474c592ac46b3827ba9a/src/Script.tsx#L8-L14
it only passes src. However, some third-party libraries like paypal use data attributes to pass parameters to their scripts and that's not possible with Script
It asks us to install `react-cache` and once that's installed it throws another error:
```
TypeError
Cannot read property 'readContext' of undefined
```

CodeSandbox Link: https://codesandbox.io/s/jvnqvw17qv 
This PR runs `window.matchMedia` for the initial render of `useMedia` if we're not on the server so that layouts can be correctly determined.
:sparkles: Add FontFace resource
:books: Document `<FontFace \>` and `useFontFace`
:point_right: Add `<FontFace />` example

Resolves #76
Add `<FontFace />` and `useFontFace` to lazy load a web font using the [CSS Font Loading](https://www.w3.org/TR/css-font-loading-3/) module.

**Note**: [browser support](https://caniuse.com/#feat=font-loading) is good, but the spec is in draft. Don't know if you're interested in adding this? 