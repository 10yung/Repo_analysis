**Sylius docs version**: 1.x / latest

**Description**
I am importing product from one sylius store to another sylius store using api. but in product api response i get below response for image
` "images": [
        {
            "id": 62,
            "type": "main",
            "path": "e5/bc/487f65d31800594f9c7ccd120a23.jpeg"
        }
    ],`

actual path is like this
`http://localhost:8002/media/cache/sylius_shop_product_large_thumbnail/e5/bc/487f65d31800594f9c7ccd120a23.jpeg`

I know LiipImagine bundle  is configured with sylius to manage images.
But as i am third party user who is accessing product from sylius API. so how can i get the full path for image from ` "path": "e5/bc/487f65d31800594f9c7ccd120a23.jpeg"`

**Sylius version affected**: any

**Description**  
When adding product attributes, only current locale options are visible, translations are not available for select.

![Peek 2020-01-17 11-10](https://user-images.githubusercontent.com/2399452/72604115-9631cb00-391a-11ea-91e2-832c3928254d.gif)

**Steps to reproduce**  

1. Have at least 2 shop locale
2. Create product attribute of type "select", create a value and type its name for every locale
3. Add this product attribute to the product
4. Check each tab for each locale, only "english" options are visible
5. We end up with wrong JSON values in the database (each translation has a different uuid):

![Zaznaczenie_003](https://user-images.githubusercontent.com/2399452/72604135-9fbb3300-391a-11ea-95e3-bff7ecbcb14b.png)

Related to #10997.

 - [x] Added HTML debug comments around the blocks
 - [x] Added HTML debug comments for events (around them as well)
 - [x] Refactored event & block renderes: extracted debug-related functionality to decorators, renamed classes to better match their purpose
 - [x] Added `_event` variable to the block context, might be useful when falling back to Sonata events

Improved HTML debug:
<img width="703" alt="Screenshot 2020-01-17 at 10 13 24" src="https://user-images.githubusercontent.com/1897953/72599480-11db4a00-3912-11ea-9196-9143b2b3601f.png">

| Q               | A
| --------------- | -----
| Branch?         | master
| Bug fix?        | no
| New feature?    | yes
| BC breaks?      | no
| Deprecations?   | no
| License         | MIT

For more convenient using our documentation:

![Screenshot 2020-01-17 at 09 42 28](https://user-images.githubusercontent.com/39232096/72597518-3df4cc00-390e-11ea-859a-604cbb3c317a.png)


<!--
 - Bug fixes must be submitted against the 1.6 branch (the lowest possible)
 - Features and deprecations must be submitted against the master branch
 - Make sure that the correct base branch is set
-->

I'm working on a project where orders may be processed even after the checkout so until the user completes the payment he may change stuff. Payment is only authorized during the checkout and is  executed automatically in a few days. `Sylius\Component\Core\OrderProcessing\OrderPaymentProcessor` expects a target state as parameter, but i need that null value can be passed so that `$lastPayment = $order->getLastPayment($this->targetState);` returns the last payment whatever is the state.

I purpose to modify the class this way:
```php
namespace Sylius\Component\Core\OrderProcessing;

final class OrderPaymentProcessor implements OrderProcessorInterface
{
    /** @var OrderPaymentProviderInterface */
    private $orderPaymentProvider;

    /** @var string|null */
    private $targetState;

    public function __construct(
        OrderPaymentProviderInterface $orderPaymentProvider,
        ?string $targetState = PaymentInterface::STATE_CART
    ) {
        $this->orderPaymentProvider = $orderPaymentProvider;
        $this->targetState = $targetState;
    }
   
   ...

}
```
This is not a  breaking change because `Order::getLastPayment` accept null values as well.

In case you accept my proposal I am available to implement this modification.
Related to #10928 - unblocks Behat and related packages.
| Q               | A
| --------------- | -----
| Branch?         | 1.4
| Bug fix?        | yes
| New feature?    | no
| BC breaks?      | no
| Deprecations?   | no
| Related tickets | 
| License         | MIT
Not sure if this is an issue with the plugin skeleton, or with the sylius codebase itself..

Our sylius set-up was done by a Sylius partner, and uses the bitbag elastic search plugin. As a result, i have not seen this bug in our main sylius installation, but this issue report may rightfully belong in the main repo.

I am reporting it here, since it is with the plugin skeleton that I have seen the issue.

## Steps to reproduce

I started again with a fresh create-project.

set the doctrine config to use a pgsql dsn

follow steps exactly as per readme.

click the 'dresses' menu item in the demo store.

if you have successfully replicated my scenario, you should now see the following error:

![skeleton issue](https://user-images.githubusercontent.com/4586381/72257954-c882b600-3604-11ea-960d-846ea9b8635e.png)

| Q               | A
| --------------- | -----
| Branch?         | 1.5
| Bug fix?        | yes
| New feature?    | no
| BC breaks?      | no
| Deprecations?   | no
| Related tickets | replaces #10689
| License         | MIT

<!--
 - Bug fixes must be submitted against the 1.5 or 1.6 branch (the lowest possible)
 - Features and deprecations must be submitted against the master branch
 - Make sure that the correct base branch is set
-->

**Sylius version affected**: 1.6 for sure and probably all previous versions

**Description**  
when IntegerType value is translated it translate numbers, thus input type number does not understand translated numbers and could not set selected value 

**Steps to reproduce**  
any integer type based form field let's say inventory, add inventory and save, then change admin locale to Arabic and revisit inventory again, the value will not be shown.   

**Possible Solution**  
Do not translate IntegerType fields.

I wish I could've made a PR, but unfortunately, I could not trace where translation happens.

![Screenshot from 2020-01-13 23-38-18](https://user-images.githubusercontent.com/40537580/72294932-38258f00-365f-11ea-953b-bedb4fa7ad5f.png)