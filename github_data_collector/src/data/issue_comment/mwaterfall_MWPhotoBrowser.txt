video not work on iOS13ã€‚MPMoviePlayerController is no longer available. Use AVPlayerViewController in AVKit.
Why can't the play button be displayed
Hello,

I need to change the caption "description string" to a current open photo.

My scenario is, while user tap on edit caption then open alert controller with a text field, and user input caption of the current open photo caption and save it.

I try with reloadData(), and reloadInputViews() but not updated caption.

**Note: I am not using custom caption view only pass a string in each caption.**

Please let me know how to fix it.
need to update The Version with SDWebImageneed to update The Version with SDWebImageneed to update The Version with SDWebImageneed to update The Version with SDWebImageneed to update The Version with SDWebImageneed to update The Version with SDWebImageneed to update The Version with SDWebImageneed to update The Version with SDWebImageneed to update The Version with SDWebImageneed to update The Version with SDWebImageneed to update The Version with SDWebImageneed to update The Version with SDWebImageneed to update The Version with SDWebImageneed to update The Version with SDWebImageneed to update The Version with SDWebImageneed to update The Version with SDWebImageneed to update The Version with SDWebImageneed to update The Version with SDWebImageneed to update The Version with SDWebImageneed to update The Version with SDWebImageneed to update The Version with SDWebImageneed to update The Version with SDWebImageneed to update The Version with SDWebImageneed to update The Version with SDWebImageneed to update The Version with SDWebImageneed to update The Version with SDWebImageneed to update The Version with SDWebImageneed to update The Version with SDWebImageneed to update The Version with SDWebImageneed to update The Version with SDWebImageneed to update The Version with SDWebImageneed to update The Version with SDWebImageneed to update The Version with SDWebImageneed to update The Version with SDWebImageneed to update The Version with SDWebImageneed to update The Version with SDWebImage
need to update The Version with SDWebImage
need to update The Version with SDWebImage
need to update The Version with SDWebImage
The Important things say three times

#618 


I have created simple browser with these 2 images
 let image1 = MWPhoto.init(image: UIImage.init(named: "home1"))
 let image2 = MWPhoto.init(image: UIImage.init(named: "home2"))

I created an array and have same images and the total size of array is 8.
When I scroll through images at times I got blank Screen but coming back again the image can be displayed.

The images are not being downloaded from url they are simply stored in application. The index is within range. More importantly going back and forth the image can be seen easily.
`
var photos : [MWPhoto]?
let image1 = MWPhoto.init(image: UIImage.init(named: "home1"))
  let image2 = MWPhoto.init(image: UIImage.init(named: "home2"))
photos = [image1, image2,image1, image2,image1, image2,image1, image2] as? [MWPhoto]

 let browser = MWPhotoBrowser.init(delegate: self)
         browser?.displayActionButton = false; // Show action button to allow sharing, copying, etc (defaults to YES)
        browser?.displayNavArrows = false; // Whether to display left and right nav arrows on toolbar (defaults to NO)
        browser?.displaySelectionButtons = true; // Whether selection buttons are shown on each image (defaults to NO)
        browser?.zoomPhotosToFill = true; // Images that almost fill the screen will be initially zoomed to fill (defaults to YES)
        browser?.alwaysShowControls = false; // Allows to control whether the bars and controls are always visible or whether they fade away to show the photo full (defaults to NO)
        browser?.enableGrid = false; // Whether to allow the viewing of all the photo thumbnails on a grid (defaults to YES)
        browser?.startOnGrid = true; // Whether to start on the grid of thumbnails instead of the first photo (defaults to NO)
        browser?.autoPlayOnAppear = false; // Auto-play first video
        browser?.setCurrentPhotoIndex(1)        
        self.navigationController?.pushViewController(browser!, animated: true)


 func numberOfPhotos(in photoBrowser: MWPhotoBrowser!) -> UInt {
        return UInt(photos!.count)
    }

func photoBrowser(_ photoBrowser: MWPhotoBrowser!, photoAt index: UInt) -> MWPhotoProtocol! {
        let photo = self.photos![Int(index)] as! MWPhoto
        return photo
       // return self.photos![Int(index)]
    }
`

<img width="359" alt="screen shot 2018-08-20 at 11 58 45 am" src="https://user-images.githubusercontent.com/7734981/44325061-1081c580-a471-11e8-9d8c-c1bb14e0ee59.png">

Here is the setup I have so far:

```
import UIKit
import MWPhotoBrowser

class PhotoViewController: UINavigationController, MWPhotoBrowserDelegate {

    var photos  = [MWPhoto]()

    override func viewDidLoad() {
        super.viewDidLoad()
        retrievePics()
        initiateBrowser()
    }

    func initiateBrowser() {
        let browser = MWPhotoBrowser(delegate: self)
        
        browser?.displayActionButton = true // Show action button to allow sharing, copying, etc (defaults to YES)
        browser?.displayNavArrows = false // Whether to display left and right nav arrows on toolbar (defaults to NO)
        browser?.displaySelectionButtons = false // Whether selection buttons are shown on each image (defaults to NO)
        browser?.zoomPhotosToFill = true // Images that almost fill the screen will be initially zoomed to fill (defaults to YES)
        browser?.alwaysShowControls = false // Allows to control whether the bars and controls are always visible or whether they fade away to show the photo full (defaults to NO)
        browser?.enableGrid = true // Whether to allow the viewing of all the photo thumbnails on a grid (defaults to YES)
        browser?.startOnGrid = false // Whether to start on the grid of thumbnails instead of the first photo (defaults to NO)
        
        self.navigationController?.pushViewController(browser!, animated: true)
        
    }
    
    func numberOfPhotos(in photoBrowser: MWPhotoBrowser!) -> UInt {
        return UInt(photos.count)
    }
    
    func photoBrowser(_ photoBrowser: MWPhotoBrowser!, photoAt index: UInt) -> MWPhotoProtocol! {
        let realIndex : Int = Int(index)
        if index < photos.count {
            return photos[realIndex]
        }
        return nil
    }
    
}
```

I'm omitting my retrievePics() function for privacy purposes but essentially it converts UIImages to MWPhoto objects and appends them to the photos array. 