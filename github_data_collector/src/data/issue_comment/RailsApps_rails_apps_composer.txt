I'm getting the following error: 

```irb
composer  You are using Rails version 6.0.2.1 which is not supported. Use Rails 4.1 or newer.
```
The readme is quite out of date and almost unusable.
i am not getting any data from epri default database i.e derms2....Please help how can i insert new tables in that database

I've been getting

    The template [/var/folders/0s/nn5n43v543g_w1w934vkh69m0000gn/T/template20190224-77207-kpx9ma] could not be loaded. Error: The file /Users/redacted/redacted/app/models/user.rb does not appear to exist

today, unable to use the composer.

Help.


It would be cool if 

    rails_apps_composer new --help

behaved like

    rails new --help

What I expected:

    Some useful help

What I got

```
$ rails_apps_composer new --help
Would you like to skip Test::Unit? (yes for RSpec) (y/n)
```

Rails 5.2 uses config/master.key to encrypt credentials.

https://medium.com/@wintermeyer/goodbye-secrets-welcome-credentials-f4709d9f4698

It is important to keep config/master.key out of git.

By default, Rails 5.2 initializes git and adds a .gitignore file which ignores the master.key file.

The git recipe currently unconditionally reinitalizes git even if has already been initialized by Rails.

The git recipe currently unconditionally replaces .gitignore with an outdated version. This results in the master.key file being committed into git. Once it has been committed it is difficult to entirely remove from the git history. A naive "git rm config/master.key" will leave the file in the git history, opening a security hole.

PR #374  fixes the issues.
Rails 5.2 uses config/master.key to encrypt credentials.

https://medium.com/@wintermeyer/goodbye-secrets-welcome-credentials-f4709d9f4698

It is important to keep config/master.key out of git.

By default, Rails 5.2 initializes git and adds a .gitignore file which ignores the master.key file.

The git recipe currently unconditionally reinitalizes git even if has already been initialized by Rails.

The git recipe currently unconditionally replaces .gitignore with an outdated version. This results in the master.key file being committed into git. Once it has been committed it is difficult to entirely remove from the git history. A naive "git rm config/master.key" will leave the file in the git history, opening a security hole.

This PR fixes the git recipe to not reinitialize git if .git exists and to not clobber the Rails .gitignore file if it has already been set up.

This PR also refrains from removing all .gitignore and .gitkeep files. That doesn't seem useful or safe.

To reproduce the bug:

$ rails_apps_composer new git-bug-test -r git
$ cd git-bug-test
$ git ls-files config/master.key
config/master.key # Bug: master.key is checked into git.

Test the fix:

$ git clone git@github.com:jgorman/rails_apps_composer_pr.git
$ cd rails_apps_composer_pr
$ git co git-bug
$ rake reinstall

$ rails_apps_composer new git-bug-fixed -r git
$ cd git-bug-fixed
$ git ls-files config/master.key
$ # Fixed: master.key is not checked into git.

Test that git still gets initialized when Rails doesn't do it.

$ echo '--skip-git' > ~/.railsrc
$ rails_apps_composer new git-bug-old-rails -r git
$ cd git-bug-old-rails
$ git ls-files .gitignore
.gitignore # Older Rails: git and .gitignore are still set up.
I'm not a fan of these nested if statements, but I followed the format used for postgresql. This should resolve #371.
It looks like Rails 5.2.0 isn't happy with mysql2, ~> 0.3.18.

`Gem::LoadError: Error loading the 'mysql2' Active Record adapter. Missing a gem it depends on? can't activate mysql2 (< 0.6.0, >= 0.4.4), already activated mysql2-0.3.21. Make sure all dependencies are added to Gemfile.`

[This](https://github.com/RailsApps/rails_apps_composer#problems-with-could-not-be-loaded-you-have-already-activated) does not appear to be relevant because 'mysql2, ~> 0.3.18' is hard set.

https://github.com/RailsApps/rails_apps_composer/blob/5ae32b21d8b58aac6866c148d2794597629c68d4/recipes/gems.rb#L49
In composer you still have Mandrill for emails and it's not available for these purposes outside of mailchimp anymore, I'd suggest replacing it with mailgun and having mailgun as a default option maybe.