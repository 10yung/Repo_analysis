Command runned: sharphound.exe -c group --PrettyJson -v --OU OU=XX,OU=XX,DC=XX,DC=com -d XX.XX--SkipPing
(Domain and OU changed to XX )

If i use other command i don't get any error but it never stops Emulating objects (Let it run for over a month). this also count if i use the .ps1

nhandled Exception: System.AggregateException: AggregateException_ctor_DefaultMessage ---> System.ArgumentException: Destination array is not long enough to copy all the required data. Check array length and offset.
Parameter name: binaryForm
   at System.Security.Principal.SecurityIdentifier.CreateFromBinaryForm(Byte[] binaryForm, Int32 offset)
   at Sharphound2.Extensions.GetSid(SearchResultEntry result)
   at Sharphound2.Extensions.ResolveAdEntry(SearchResultEntry result, Boolean bypassDns)
   at Sharphound2.Enumeration.EnumerationRunner.<>c__DisplayClass22_0.<StartRunner>b__0()
   at System.Threading.Tasks.Task.InnerInvoke()
   at System.Threading.Tasks.Task.Execute()
   --- End of inner exception stack trace ---
   at System.Threading.Tasks.Task.WaitAll(Task[] tasks, Int32 millisecondsTimeout, CancellationToken cancellationToken)
   at System.Threading.Tasks.Task.WaitAll(Task[] tasks, Int32 millisecondsTimeout)
   at System.Threading.Tasks.Task.WaitAll(Task[] tasks)
   at Sharphound2.Enumeration.EnumerationRunner.StartEnumeration()
   at Sharphound2.Sharphound.Main(String[] args)
---> (Inner Exception #0) System.ArgumentException: Destination array is not long enough to copy all the required data. Check array length and offset.
Parameter name: binaryForm
   at System.Security.Principal.SecurityIdentifier.CreateFromBinaryForm(Byte[] binaryForm, Int32 offset)
   at Sharphound2.Extensions.GetSid(SearchResultEntry result)
   at Sharphound2.Extensions.ResolveAdEntry(SearchResultEntry result, Boolean bypassDns)
   at Sharphound2.Enumeration.EnumerationRunner.<>c__DisplayClass22_0.<StartRunner>b__0()
   at System.Threading.Tasks.Task.InnerInvoke()
   at System.Threading.Tasks.Task.Execute()<---
sekurlsa::dcsync -> lsadump::dcsync
As an example, the following output is provided by PowerView's `Get-DomainObjectACL`:
```
[snipped]
ObjectDN              : CN={XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX},CN=Policies,CN=System,DC=testdom
                        s,DC=local
ObjectSID             : 
ActiveDirectoryRights : CreateChild, DeleteChild, ReadProperty, WriteProperty, GenericExecute
BinaryLength          : 36
AceQualifier          : AccessAllowed
IsCallback            : False
OpaqueLength          : 0
AccessMask            : 131127
SecurityIdentifier    : S-1-5-21-0000000000-0000000000-0000000000-1162
AceType               : AccessAllowed
AceFlags              : ContainerInherit
IsInherited           : False
InheritanceFlags      : ContainerInherit
PropagationFlags      : None
AuditFlags            : None
[snipped]
```

But the SharpHound output's json file looks like it:
```
{
    "Properties": {
      "highvalue": false,
      "domain": "TESTDOM.LOCAL",
      "description": null,
      "gpcpath": "\\\\testdom.local\\SysVol\\testdom.local\\Policies\\{XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX}"
    },
    "Name": "VULN GPO@TESTDOM.LOCAL",
    "Guid": "XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX",
    "Aces": [{
      "PrincipalName": "DOMAIN ADMINS@TESTDOM.LOCAL",
      "PrincipalType": "group",
      "RightName": "Owner",
      "AceType": ""
    }, {
      "PrincipalName": "DOMAIN ADMINS@TESTDOM.LOCAL",
      "PrincipalType": "group",
      "RightName": "WriteDacl",
      "AceType": ""
    }, {
      "PrincipalName": "DOMAIN ADMINS@TESTDOM.LOCAL",
      "PrincipalType": "group",
      "RightName": "WriteOwner",
      "AceType": ""
    }, {
      "PrincipalName": "ENTERPRISE ADMINS@TESTDOM.LOCAL",
      "PrincipalType": "group",
      "RightName": "WriteDacl",
      "AceType": ""
    }, {
      "PrincipalName": "ENTERPRISE ADMINS@TESTDOM.LOCAL",
      "PrincipalType": "group",
      "RightName": "WriteOwner",
      "AceType": ""
    }]
  }
```

As you can see, the ACL for the group with SID `S-1-5-21-0000000000-0000000000-0000000000-1162` is not shown in the JSON file.

However, this ACL gave me the possibility to edit it and exploit it to further move in the domain.

I'll check in SharpHound's code to see where it should be gathered.


Add `pwdlastset` and `lastlogon` on Computer node's display map
The 'hide info' tab purposely hides `pwdlastset` for computers, probably because it was considered useless.
Therefore, accessing such info easily will help to detect potential AD configuration issues, such as no automatic password change every 30 days.
It would also help red teamers chosing a computer hash that's not going to expire tomorrow when building a silver ticket.

In a general way, i think all infos should be displayed, even when we think they have no purpose.
Hey guys,
I'm trying to export a graph to JSON, and it just does not work. 
(No errors...) 
How can I debug this?
Thanks!
Hello,

This simple query gives me all groups which have GenerilAll on all groups:

MATCH p=(m:Group)- [r:GenericAll]->(t:Group) RETURN m.name,TYPE(r),t.name

It works fine. But this one, which should do the same, just for OUs, gives me no results:

MATCH p=(m:Group)- [r:GenericAll]->(t:OU) RETURN m.name,TYPE(r),t.name

Anyone know why?

The query will be more complex of course. My thought is to exclude all groups which are privileged by default, so that only "normal" groups are checked for privileges on OUs in the AD environment.

Thanks in advance!
"Everyone" is a well-known Windows SID (S-1-1-0) that means "all users".
DACLs can be set on AD objects to allow "Everyone" to perform security sensitive operations, such as:
![image](https://user-images.githubusercontent.com/550823/67857086-32b3b080-fb16-11e9-9eee-32a4e3bc44d9.png)

This DACL is properly collected by BloodHound which considers "Everyone" as a group but without any member as it is not really an AD group. Therefore, BloodHound fails to identify paths that could go through "Everyone" (false-negatives).

Proof that it is exploitable, before and after enabling Full Control for Everyone:
![image](https://user-images.githubusercontent.com/550823/67857206-70b0d480-fb16-11e9-8f0c-80339fc85efa.png)

I'm wondering what is the better solution:
* add special handling for this SID in cypher queries?
* automatically populate this group with all objects as a special case at the end of import?
* something else?
Hi BloodHound Team, 

Fantastic work with the utility, I use it extensively and increasingly use it to provide it 'as a service' inside corporate environments. This helps a lot of system administrators simply visualize and find problems faster within Active directory.

In order to provide BloodHound in this way, I typically need to setup LDAP authentication against the Neo4J database, which works.

However the problem arises when users have the ability to tick 'Save Password' in a LDAP scenario on the login page, as BloodHound simply writes the plain text username and password into a file in their user profile for later retrieval.

Currently whenever a new BloodHound is released, I rebuild it from source and remove the Save Password from the GUI which works.

It would be great if we could hide this box with some sort of configuration flag, or alternatively encrypt the username and password on disk (even encoding it somehow so people couldn't read it would be an improvement).

Thanks :)
Hi,
You fixed the Export Graph functionality, but now when I attempt to import the graph I just saved, I get the following error:

bundle.js:38 Uncaught TypeError [ERR_INVALID_ARG_TYPE]: The "path" argument must be one of type string, Buffer, or URL. Received type undefined
    at readFile (fs.js:302)
    at fs.readFile (electron/js2c/asar.js:540)
    at fs.readFile (electron/js2c/asar.js:540)
    at t.value (bundle.js:80)
    at l.emit (bundle.js:22)
    at t.value (bundle.js:80)
    at Object.s (bundle.js:38)
    at h (bundle.js:38)
    at bundle.js:38
    at C (bundle.js:38)
    at P (bundle.js:38)
    at O (bundle.js:38)
    at j (bundle.js:38)
    at kn (bundle.js:38)
    at Ms (bundle.js:38)
    at Le (bundle.js:38)

then it allows me to select the file to import, but after that nothing happens.

Thanks