**I went through previous fixes but yet couldn't fix it**

Laravel version: 5.7
"yajra/laravel-datatables-oracle": "~8.0"


error: "Exception Message:↵↵SQLSTATE[42000]: Syntax error or access violation: 1583 Incorrect parameters in the call to native function 'lower' (SQL: select count(*) as aggregate from (select `acrm_contacts`.`id`, `acrm_contacts`.`company_id`, `acrm_contacts`.`group_id`, `acrm_contacts`.`phone1_code`, `acrm_contacts`.`phone1`, `acrm_contacts`.`phone2_code`, `acrm_contacts`.`phone2`, `acrm_contacts`.`email`, `acrm_contacts`.`skype`, `acrm_contacts`.`address`, `acrm_contacts`.`city`, `acrm_contacts`.`state_region`, `acrm_contacts`.`zip_postal_code`, `acrm_contacts`.`tax_id`, `acrm_contacts`.`country_id`, `acrm_contacts`.`thumbnail`, `acrm_contacts`.`name`, `acrm_contacts`.`fulladdress`, `acrm_contacts`.`is_user`, `acrm_contacts`.`follow_up`, `acrm_contacts`.`provience` from `acrm_contacts` where exists (select * from `acrm_roles` inner join `acrm_contact_contact_type` on `acrm_roles`.`id` = `acrm_contact_contact_type`.`contact_type_id` where `acrm_contacts`.`id` = `acrm_contact_contact_type`.`contact_id` and `id` != 11 order by `acrm_roles`.`id` desc) and (LOWER(`acrm_contacts`.`name`) LIKE %a% or exists (select * from `acrm_roles` inner join `acrm_contact_contact_type` on `acrm_roles`.`id` = `acrm_contact_contact_type`.`contact_type_id` where `acrm_contacts`.`id` = `acrm_contact_contact_type`.`contact_id` and LOWER(`acrm_roles`.`title`) LIKE %a% order by `acrm_roles`.`id` desc) or LOWER(`acrm_contacts`.`email`) LIKE %a% or LOWER(`acrm_contacts`.`address`) LIKE %a% or exists (select * from `acrm_contacts` as `acrm_laravel_reserved_0` inner join `acrm_contact_assigned_to_user` on `acrm_laravel_reserved_0`.`id` = `acrm_contact_assigned_to_user`.`user_id` where `acrm_contacts`.`id` = `acrm_contact_assigned_to_user`.`contact_id` and LOWER(`contacts` as `laravel_reserved_0.name`) LIKE %a% order by `acrm_laravel_reserved_0`.`id` desc)) and `acrm_contacts`.`deleted_at` is null order by `acrm_contacts`.`id` desc) count_row_table)"

my controller:
public function index( $type = '', $type_id = '' )
    {
        if (! Gate::allows('contact_access')) {
            return prepareBlockUserMessage();
        }


        if (request()->ajax()) {

            $query = Contact::query();

            $query->with("contact_type");

            $query->with("assigned_to");
            $template = 'actionsTemplate';

            if(request('show_deleted') == 1) {
                if (! Gate::allows('contact_delete')) {
                    return prepareBlockUserMessage();
                }
                $query->onlyTrashed();
                $template = 'restoreTemplate';
            }

            $query->select([
                'contacts.id',
                'contacts.company_id',
                'contacts.group_id',
                'contacts.phone1_code',
                'contacts.phone1',
                'contacts.phone2_code',
                'contacts.phone2',
                'contacts.email',
                'contacts.skype',
                'contacts.address',
                'contacts.city',
                'contacts.state_region',
                'contacts.zip_postal_code',
                'contacts.tax_id',
                'contacts.country_id',
                'contacts.thumbnail',

                'contacts.name',
                'contacts.fulladdress',
                'contacts.is_user',
                'contacts.follow_up',
                'contacts.provience',
            ]);
            if ( empty( $type ) ) {
                $query->whereHas("contact_type",
                    function ($query) {
                        $query->where('id', '!=', LEADS_TYPE);
                    });
            }

            /**
             * when we call invoices display from other pages!
             */
            if ( ! empty( $type ) && 'contact_type' === $type ) {
                $query->whereHas("contact_type",
                    function ($query) use( $type_id ) {
                        $query->where('roles.id', $type_id);
                    });
            }
            if ( ! empty( $type ) && 'contact_group' === $type ) {
                $query->when($type_id, function ($q, $type_id) {
                    return $q->where('contacts.group_id', $type_id);
                });
            }
            if ( ! empty( $type ) && 'contact_company' === $type ) {
                $query->when($type_id, function ($q, $type_id) {
                    return $q->where('contacts.company_id', $type_id);
                });
            }
            if ( ! empty( $type ) && 'country' === $type ) {
                $query->when($type_id, function ($q, $type_id) {
                    return $q->where('contacts.country_id', $type_id);
                });
            }
            if ( ! empty( $type ) && 'language' === $type ) {
                $query->when($type_id, function ($q, $type_id) {
                    return $q->where('contacts.language_id', $type_id);
                });
            }
            if ( ! empty( $type ) && 'department' === $type ) {
                $query->when($type_id, function ($q, $type_id) {
                    return $q->where('contacts.department_id', $type_id);
                });
            }

            $table = Datatables::of($query);
            $table->setRowAttr([
                'data-entry-id' => '{{$id}}',
            ]);
            $table->addColumn('massDelete', '&nbsp;');
            $table->addColumn('actions', '&nbsp;');
            $table->editColumn('actions', function ($row) use ($template) {
                $gateKey  = 'contact_';
                $routeKey = 'admin.contacts';

                return view($template, compact('row', 'gateKey', 'routeKey'));
            });

            $table->editColumn('thumbnail', function ($row) {
                if($row->thumbnail) { return '<a href="'. asset(env('UPLOAD_PATH').'/' . $row->thumbnail) .'" target="_blank"><img src="'. asset(env('UPLOAD_PATH').'/thumb/' . $row->thumbnail) .'"/>'; };
            });

            $table->editColumn('contact_type.title', function ($row) {
                if(count($row->contact_type) == 0) {
                    return '';
                } else {
                    return '<span class="label label-info label-many">' . implode('</span><span class="label label-info label-many"> ',
                            $row->contact_type->pluck('title')->toArray()) . '</span>';
                }

            });
            $table->editColumn('assigned_to.name', function ($row) {
                if(count($row->assigned_to) === 0) {
                    return '';
                }
                return '<span class="label label-info label-many">' . implode('</span><span class="label label-info label-many"> ',
                        $row->assigned_to->pluck('name')->toArray()) . '</span>';
            });
            $table->editColumn('first_name', function ($row) {
                return $row->name ? $row->first_name : '';
            });
            $table->editColumn('middle_name', function ($row) {
                return $row->middle_name ? $row->middle_name : '';
            });
            $table->editColumn('last_name', function ($row) {
                return $row->last_name ? $row->last_name : '';
            });
            $table->editColumn('contacts.name', function ($row) {
                $name = $row->name ? $row->name : '';
                return $name;
            });
            $table->editColumn('fulladdress', function ($row) {
                $fulladdress = $row->fulladdress ? $row->fulladdress : '';
                if ( empty( $fulladdress ) ) {
                    $fulladdress = $row->address ? $row->address : '';

                } else {
                    $fulladdress = str_replace("\n", ', ', $fulladdress);
                }
                return $fulladdress;
            });

            $table->editColumn('phone1', function ($row) {
                $code = $row->phone1_code ? '+' . $row->phone1_code . ' - ' : '';
                return $row->phone1 ? $code . $row->phone1 : '';
            });
            $table->editColumn('phone2', function ($row) {
                $code = $row->phone2_code ? '+' . $row->phone2_code . ' - ' : '';
                return $row->phone2 ? $code . $row->phone2 : '';
            });
            $table->editColumn('email', function ($row) {
                return $row->email ? $row->email : '';
            });
            $table->editColumn('address', function ($row) {
                return $row->address ? $row->address : '';
            });
            $table->editColumn('tax_id', function ($row) {
                return $row->tax_id ? $row->tax_id : '';
            });
            $table->editColumn('follow_up', function ($row) {
                return $row->follow_up ? $row->follow_up : '';
            });

            $table->rawColumns(['actions','massDelete','contact_type.title','assigned_to.name','language.language','follow_up']);
            return $table->make(true);
        }
        return view('admin.contacts.index', compact('type', 'type_id'));
    }


my script for viewing data on table:

$(document).ready(function () {
        @if ( ! empty( $type ) && ! empty( $type_id ) )
            window.dtDefaultOptionsNew.ajax.url = '{!! route('admin.list_contacts.index', [ 'type' => $type, 'type_id' => $type_id ] ) !!}?show_deleted={{ request('show_deleted') }}';
        @else
            window.dtDefaultOptionsNew.ajax.url = '{!! route('admin.contacts.index') !!}?show_deleted={{ request('show_deleted') }}';
        @endif
            window.dtDefaultOptionsNew.columns = [@can('contact_delete_multi')
            @if ( request('show_deleted') != 1 )
        {data: 'massDelete', name: 'id', searchable: false, sortable: false},
                @endif
                @endcan
            {data: 'contacts.name', name: 'contacts.name'},

            {data: 'contact_type.title', name: 'contact_type.title', sortable: false},

            {data: 'email', name: 'email'},
            {data: 'fulladdress', name: 'fulladdress'},
            {data: 'assigned_to.name', name: 'assigned_to.name',sortable: false},
            @if($type_id == 11)
            {data: 'follow_up', name: 'follow_up'},
            @endif
            {data: 'actions', name: 'actions', searchable: false, sortable: false}
        ];
        processAjaxTablesNew();
    });
### Summary of problem or feature request

I am using Laravel Yajra Datatables with polymorphic relations. the specific trouble is that I can neither filter the table nor sort properly because I populated it with different tables values.

The table A is "morphable" to tables B and C. So it has column

> morph_type and morph_id.

but also other different columns as

B.name , B.surname, C.lastname, C.firstname

Because filter does not work, I tried to implement Datatables filterColumn API. But I do not really know the right way to this query. Here is my sql (Postgresql) :

### Code snippet of problem

```php
$query = A::with('morphable')->select('*');
return Datatables::of($query)
        ->addColumn('code', function($row) {
            return $row->morphable->code_pap;
        })
        ->addColumn('name', function($row) {
            if($row->morphable->name !== null){
                return $row->morphable->name;
            } else {
                return $row->morphable->lastname;
            }
        })
        ->addColumn('surname', function($row) {
            if($row->morphable->surname !== null){
                return $row->morphable->surname;
            } else {
                return $row->morphable->firstname;
            }
        })
        ->filterColumn('name', function($query, $keyword) {
            //I check $query it retruns "select * from A;" only.
            // redefining $query does not change anything. I always get same query.
            $sqlB = "CASE WHEN exists (select 1 from B where B.name like ?)";
            $sqlC = "CASE WHEN exists (select 1 from C where C.lastname like ?)";
            $query->whereRaw($sqlB, ["%{$keyword}%"])->orWhereRaw($sqlC, ["%{$keyword}%"]);
        }) //same thing for firstname and surname ;
```

### System details

- ubuntu
- PHP 7.4.0
- laravel 6
- yajra/laravel-datatables-oracle: "^9.7"

I check $query inside filterColum it returns "select * from A;" only. Redefining $query does not change anything. I always get same query.

### Summary of problem or feature request

How to loop through columns for chaining editColumn? I did not see a "editColumns" function, only "editColumn", so I have to do:

```php
return datatables($query)
    ->editColumn('COLUMNA', function ($data) {
        return $this->getDisplay('COLUMNA', $data->COLUMNA);
    })
    ->editColumn('COLUMNB', function ($data) {
        return $this->getDisplay('COLUMNB', $data->COLUMNB);
    });
```

but I would like to do something like: 

```php
$datatable = datatables($query);
$editColumns = $this->getEditColumns();
foreach ($editColumns as $editColumn) {
    $datatable->editColumn($editColumn['name'], function ($data) use ($editColumn) {
        return $this->getDisplay($editColumn['name'], $data->{$editColumn['name']});
    });
}
return $datatable;
```

Similarly, for filterColumn, instead of having to call filterColumn chained for every column individually just to call the same callback.

Sorry if this is a php knowledge question instead of a yajra laravel-datatables question.

### System details

- Windows Server 2012
- PHP 7.3.3
- Laravel 5.8
- Laravel-Datatables 9.8

I need sometthings like as:
```php
        Column::make('project_name')
                ->title(__('Project Name'))
                ->render(function($item) {
                    return '<a href="' . route('projects.detail', $item->id) . '">' . $item->project_name . '</a>';
                })
```

Here, I can use route() and pass parameter for it to generate link of project.

I had try:
```php
datatables()
            ->eloquent($query)
            ->addColumn('project_name', function ($item) {
                return '<a href="'.route('projects.detail', $item->id).'">'.$item->project_name.'</a>';
            });
```
then:
```php
 Column::computed('project_name')
                ->title(__('Project Name'))
```
It's work but cannot sort

Hi, I am using yajra/laravel-datatables, the problem is that during the execution of the method function ```getProduction()```, the whole application hangs in the page loading for more than 50 seconds and during this time it uses much of the cpu https://imgur.com/9zrjTHB, I have no idea what is causing this, please help me to fix this issue, here is my code :

Controller :
```
function getProduction()
    {
        DB::table('count_pr_jrs')->delete();
        DB::insert('
            insert into count_pr_jrs (produit_id, nb_ns, date)
            SELECT id_produit, COUNT(Log_ns.n_s), DATE(Log_ns.created_at)
            FROM Log_ns 
            GROUP BY DATE(Log_ns.created_at)
        ');

        Production::updateOrCreate(['journee' => date('Y-m-d')], ['journee' => date('Y-m-d')]);

        DB::table('Productions')
        ->select(DB::raw("DATE(journee)"))
        ->whereDate('journee', '!=', date('Y-m-d'))
        ->update(['action' => '0']);

        DB::table('Productions')
        ->select(DB::raw("DATE(journee)"))
        ->whereDate('journee', '=', date('Y-m-d'))
        ->update(['action' => '1']);
       
        
        $pro = Log_ns::join('Magasins', 'Magasins.produit_id', '=', 'Log_ns.id_produit')
        ->join('Produits', 'Produits.id', '=', 'Magasins.produit_id')
        ->join('Productions', 'Productions.journee', '=', DB::raw('DATE(Log_ns.created_at)'))
        ->select([
            'Magasins.id', 'Log_ns.created_at',  'Produits.kit', 'Productions.action', 'Produits.produit', 'Produits.modele', 
            DB::raw('(SELECT Magasins.qte FROM Magasins WHERE Log_ns.id_produit = Magasins.produit_id AND DATE(Log_ns.created_at) = DATE(Magasins.created_at)) as qte,         
                     (SELECT nb_ns FROM count_pr_jrs WHERE Log_ns.id_produit = count_pr_jrs.produit_id AND DATE(Log_ns.created_at) = DATE(count_pr_jrs.date)) as qte_ins,
                     (SELECT total_jr_tr_st FROM Productions WHERE Log_ns.id_produit = Productions.produit_id AND DATE(Log_ns.created_at) = DATE(Productions.journee)) as qte_jr,
                     (SELECT COUNT(Reparations.n_s) FROM Reparations WHERE Reparations.n_s = Log_ns.n_s AND DATE(Log_ns.created_at) = DATE(Reparations.created_at)) as qte_rep,
                     (SELECT SUM(qte) FROM Magasins WHERE Magasins.produit_id = Log_ns.id_produit) AS qte_glob_mp,
                     (SELECT COUNT(Log_ns.n_s) FROM Log_ns WHERE Log_ns.id_produit = Magasins.produit_id) as qte_glob_pro'),
        ])
        ->groupBy(DB::raw('DATE(Log_ns.created_at)'))->distinct()->get();
        return DataTables::of($pro)
        ->make(true);
    }
```

View :
```
$('#p_table').DataTable({
                "bProcessing": true,
                "sAjaxSource": "{{ route('production.getProduction') }}",
                "columns":[
                    { "data": "id"},
                    { "data": "created_at"},
                    { "data": "produit"},
                    { "data": "modele"},
                    { "data": "kit"},
                    { "data": "qte"},
                    { "data": "qte_ins"},
                    { "data": "qte_rep"},
                    { "defaultContent": "" },
                    { "data": "action"},
                    { "data": "qte_glob_mp"},
                    { "data": "qte_glob_pro" },
                    { "defaultContent": "" }
                ],
                'rowCallback': function(row, data, index){
                    if(data.action == '1'){
                        $(row).find('td:eq(9)').html('<a href="#" class="btn btn-xs btn-primary Quantite" id="'+data.id+'"><i class="glyphicon glyphicon-plus"></i> quantité</a> <br />'+data.qte_jr);
                    }
                    else 
                    {
                        $(row).find('td:eq(9)').html(data.qte_jr);
                    }
                    $('td', row).eq(12).html(data['kit'] - data['qte_glob_pro']);
                }
            });
```


- Operating System Windows 10
- PHP Version 7.1.3
- Laravel Version 5.8.35
- Laravel-Datatables Version 9.7.2

### Summary of problem or feature request

<!-- Please describe your problem/feature request here. -->
Hello.

I'm working with few laravel projects with yajra/laravel-datatables-oracle. 

Have tables with around 15 000+ records each using server-side option. On one page there are displayed 25 records by default. Data loading on that table is approximately 15-20 seconds, which is pretty strange, while there is only 25 records. Execution time of query is 3 seconds with all scopes.

The point is blade view (EDIT, DELETE buttons) in last column is rendered for each record with 0.5 sec. 25 records * 0.5 sec = additional 12.5 sec to load data. Of course changing records per page filter to 50 double this time. Removing last column with that blade view makes data loading in 3 seconds.

Are there any possible solutions how to make it faster?

Best Regards,
Michał Popławski

### Code snippet of problem

<!--
If applicable, please include a copy of your code
which triggers the suspected bug.

You may use the markdown php code tags to format your paste:

```php
$params = ['foo'];
```
-->

So I've started investigate what is making it so slow. The last column is action column with blade view (EDIT, DELETE buttons). Here is the content of that view:
```php
<a href="/zarzadzanie/klienci/{{ $id }}#zakl-dane-osobowe" class="btn btn-primary btn-sm btn-block" onclick = "{{Session::put( 'list', Route::currentRouteName() )}}" style="margin-bottom: 5px;">Przeglądaj</a>
@can(config('const.perm.DEL_CLIENT'))
{!! Form::open(array('action' => array('Backend\ClientController@destroy', $id), 'method' => 'delete')) !!}
<button type="submit" class="btn btn-primary btn-sm btn-block del-button">Usuń</button>
{!! Form::password('password', ['class' => '_password', 'hidden']) !!}
{!! Form::close() !!}        
@endcan
```
In dataTable class I'm including this view by using addColumn and rawColumns methods like this:
```php
public function dataTable()
    {
        ini_set('max_execution_time','600');
        return $this->datatables
            ->eloquent($this->query())
            ->addColumn('action', 'backend.klient.actionButtons')
            ->rawColumns(['action'])
            //...some editColumn, filterColumn methods not related to action column
			;
    }
```
and in html method:
```php
public function html()
{
	return $this->builder()
		->columns($this->getColumns())
		->parameters([
                'processing' => true,
                'serverSide' => true,
                'responsive' => true,
                'autoWidth' => false,
                'stateSave' => true,
                'dom' => 'Bfrtipl',
                'lengthMenu' => [[25, 50, 100, -1], [25, 50, 100, "All"]],
                'buttons' => [
                    'create',
                    'export',
                    'print'
                ],
                'deferRender' => true,
                'bSortClasses' => false,
                'language' => ['url' => "/i18n/datatables/Polish.json"],
//...etc
		]);
}
```

View is rendered in vendor\yajra\laravel-datatables-oracle\src\Helper.php in method compileBlade:
```php
public static function compileBlade($str, $data = [])
{
	if (view()->exists($str)) {
		return view($str, $data)->render();//this line execution time is 0.5 sec for each record
	}

	$empty_filesystem_instance = new Filesystem();
	$blade                     = new BladeCompiler($empty_filesystem_instance, 'datatables');
	$parsed_string             = $blade->compileString($str);

	ob_start() && extract($data, EXTR_SKIP);

	try {
		eval('?>' . $parsed_string);
	} catch (\Exception $e) {
		ob_end_clean();
		throw $e;
	}

	$str = ob_get_contents();
	ob_end_clean();

	return $str;
}
```
### System details

<!--
Please include these details about your system!
If they are omitted, the ticket will be deprioritized
over other users requests/tickets.
-->

- Operating System: Windows 10 Pro
- PHP Version: 5.6.29
- Laravel Version: 5.4.36
- Laravel-Datatables Version: 7.10
### Summary of problem or feature request

I get the error above a some times like 8 out of 10 when searching the datatable or loading the page. On checking the xhr, i see the 500 internal server error on that request So this error may appear if i type very quickly. please help me out


### Code snippet of problem
------------------------------THIS IS MY CONTROLLER-------------------------------
   
        $Deposits = DB::table('deposits')->whereNull('deposits.deleted_at')
        ->join('users', 'deposits.User_ID', '=', 'users.id')
        ->join('deposit_charges', 'deposits.User_ID', '=', 'deposit_charges.User_ID')
       ->select('deposits.Deposit_ID','deposits.Payment_Date',
'deposit_charges.Deposit_Charge','deposits.Amount_Paid','users.name','deposits.Deposit','deposits.Month_For','deposits.Year_For', 'deposits.Charge_Paid')
        ->orderBy('deposits.Deposit_ID', 'DESC')
        ->get();  

        

            if(request()->ajax()){
                
                return Datatables::of($Deposits)->addColumn('action', function($data){
                    $button = '<button type = "button" name = "edit" id ="'.$data->Deposit_ID.'" class = "edit btn btn-primary btn-sm ">Edit</button>';
                    $button .= '&nbsp;&nbsp;';
                    $button .= '<button type = "button" name = "delete" id ="'.$data->Deposit_ID.'" class = "delete btn btn-danger btn-sm">Delete</button>';
    
                    return $button;
                })->editColumn('Charge_Paid', function ($inquiry) {
                    if ($inquiry->Charge_Paid == 0) return 0;
                    if ($inquiry->Charge_Paid == 1) return $inquiry->Deposit_Charge;
                    return 'Cancel';
                })
                ->addIndexColumn()
                ->rawColumns(['action'])
                ->make(true);
    
              
            }

--------------------------------THIS IS MY SCRIPT ON THE BLADE---------------------------------
$(document).ready(function(){
var table = $('#DataTable').DataTable({
    processing: true,
    serverSide: true,
    searching: true,
    
    ajax:  "/ReturnSavings",
    columns:[
        {
          data: 'DT_RowIndex',
          name: 'DT_RowIndex'
        },
        {
            data: 'Payment_Date',
            name: 'Payment_Date',
            orderable: false
        },
        {
            data: 'name',
            name: 'name',
            orderable: false
            
        },
        {
            data: 'Amount_Paid',
            name: 'Amount_Paid'
           
        },
        {
            data: 'Deposit',
            name: 'Deposit'
           
        },
        {
            data: 'Month_For',
            data: 'Month_For'
        },
        {
            data: 'Year_For',
            name: 'Year_For',
            orderable: false
        },
        {
            data: 'Charge_Paid',
            name: 'Charge_Paid'
        },
        {
            data: 'action',
            name: 'action', 
            orderable: false
        },

    ]

});

});




-------------------------------------------------DETAILS-------------------------------------
- WINDOWS 10
- PHP 7.2
- Laravel Version 5.8.32
- Laravel-Datatables Version 9.8

Couldn' t it be implemented for CollectionDataTable as well ?

Any other tips to improve performance on big datasets ?

Also, I'm currently using Laravel Cache in some controllers, and not sure how to make use of skipTotalRecords for that cases.

Code snippet of actually implemented:

Controller:
```
public function index(Request $request)
    {
        $items = cache()->remember('contactsList', now()->addMinutes(config('app.cache_minutes')), function () {
            return Contact::latest('updated_at')->get();
        });

        if ($request->ajax()) {
            return DataTables::of($items)
                ->editColumn('name', function($item){
                    return '<td><a href="'. route(ADMIN . '.contacts.edit', $item->id) . '">' . $item->name . '</a></td>';
                })
                ->rawColumns(['name'])
                ->toJson();
        }

        return view('admin.contacts.index', compact('items'));
    }
```

Blade:
```
<div class="bgc-white bd bdrs-3 p-10 mB-20">
        <table id="dataTable" class="table-hover table table-striped table-bordered contacts-table" cellspacing="0"
               width="100%">
            <thead>
            <tr>
                <th>{{ __('app.Name') }}</th>
                <th>{{ __('app.Phone') }}</th>
                <th>{{ __('app.Address') }}</th>
                <th>{{ __('app.Email') }}</th>
                <th>{{ __('app.ZIP_Code') }}</th>
                <th>{{ __('app.Charge') }}</th>
                <th>{{ __('app.Company') }}</th>
                <th>{{ __('app.Actions') }}</th>
            </tr>
            </thead>

            <tfoot>
            <tr>
                <th>{{ __('app.Name') }}</th>
                <th>{{ __('app.Phone') }}</th>
                <th>{{ __('app.Address') }}</th>
                <th>{{ __('app.Email') }}</th>
                <th>{{ __('app.ZIP_Code') }}</th>
                <th>{{ __('app.Charge') }}</th>
                <th>{{ __('app.Company') }}</th>
                <th>{{ __('app.Actions') }}</th>
            </tr>
            </tfoot>

            <tbody>
            @foreach ($items as $item)
            @endforeach
```

System:
Centos v7
Laravel v6.2
Laravel-datatables v1.5.0
So I have a table full of data. About 3500 records. And I am using serverSide to load the data. But it is giving me `DataTables warning: table id=data-table-all - Ajax error. For more information about this error, please see http://datatables.net/tn/7` error. If I reduce the amount of data on my table to 2000, it works as intended, and there is no error. I am not sure whats wrong here. Is it my query? Here is my query:

```
$array = Reservation::with('restaurantoption')->with('islandhost')->with('mealplan')->with('guest')->with('nationality')->with('restaurant')->with('user')->withCount('guestpaxes')->where('restaurant_id', $auth->restaurant_id)->latest()->get();
return datatables()->of($array)->toJson();
```

Route:

If I open the route in Chrome (Visit the Link) it shows all the data with no problem

```
Route::get('/reports/display-report-data/all-data', 'Reservation\ReportController@getAllReservations')->name('get.all.reservations.report');
```

And here is front page:

```
$('#data-table-all').DataTable({
                responsive: true,
                order:[[0,"dec"]],
                processing: true,
                serverSide: true,
                ajax: '{{ route('get.all.reservations.report') }}',
                columns: [
                    {data: 'id', name: 'id'},
                    {data: 'guest.name', name: 'guest'},
                    {data: 'room_no', name: 'room_no'},
                    {data: 'table_no', name: 'table_no', defaultContent: "null"},
                    {data: 'guestpaxes_count', name: 'guestpaxes_count'},
                    {data: 'status', name: 'status'},
                    {data: 'nationality.name', name: 'nationality'},
                    {data: 'mealplan.name', name: 'mealplan'},
                    {data: 'islandhost.name', name: 'islandhost', defaultContent: ""},
                    {data: 'restaurant.name', name: 'restaurant'},
                    {data: 'restaurantoption.name', name: 'restaurantoption', defaultContent: ""},
                    {data: 'reservation_date', name: 'reservation_date'},
                    {data: 'reservation_time', name: 'reservation_time'},
                    {data: 'free_meal', name: 'free_meal'},
                    {data: 'served_by', name: 'served_by', defaultContent: ""},
                    {data: 'user.name', name: 'user', defaultContent: "null"},
                    {data: 'cancel_reason', name: 'cancel_reason'},
                    {data: 'canceled_by', name: 'canceled_by'},
                    {data: 'created_at', name: 'created_at'},
                ],
                "createdRow": function (row, data) {

                    $('td', row).eq('5').html($('<span>').attr({
                        class:  (data.status == 1) ? 'text-success' : ( (data.status == 2) ? 'text-danger': 'text-warning' )
                    }).html((data.status == 1) ? 'Confirmed' : ( (data.status == 2) ? 'Denied': 'Pending' )));

                    $('td', row).eq('13').html($('<span>').attr({
                        class:  ((data.free_meal == 1) ? 'text-success': 'text-danger' )
                    }).html((( (data.free_meal == 1) ? 'YES': 'NO' ))));

                }
            });
        });
```

I know it's a bit messy sorry. If I remove /comment the serverSide, it works normally but very slow (Obviously because it is loading all data on load).

The error on console is very very long but I will paste it here anyways (Please have mercy sensei):

```
http://test.com/restaurant-reservations/reports/display-report-data/all-data?draw=1&columns%5B0%5D%5Bdata%5D=id&columns%5B0%5D%5Bname%5D=id&columns%5B0%5D%5Bsearchable%5D=true&columns%5B0%5D%5Borderable%5D=true&columns%5B0%5D%5Bsearch%5D%5Bvalue%5D=&columns%5B0%5D%5Bsearch%5D%5Bregex%5D=false&columns%5B1%5D%5Bdata%5D=guest.name&columns%5B1%5D%5Bname%5D=guest&columns%5B1%5D%5Bsearchable%5D=true&columns%5B1%5D%5Borderable%5D=true&columns%5B1%5D%5Bsearch%5D%5Bvalue%5D=&columns%5B1%5D%5Bsearch%5D%5Bregex%5D=false&columns%5B2%5D%5Bdata%5D=room_no&columns%5B2%5D%5Bname%5D=room_no&columns%5B2%5D%5Bsearchable%5D=true&columns%5B2%5D%5Borderable%5D=true&columns%5B2%5D%5Bsearch%5D%5Bvalue%5D=&columns%5B2%5D%5Bsearch%5D%5Bregex%5D=false&columns%5B3%5D%5Bdata%5D=table_no&columns%5B3%5D%5Bname%5D=table_no&columns%5B3%5D%5Bsearchable%5D=true&columns%5B3%5D%5Borderable%5D=true&columns%5B3%5D%5Bsearch%5D%5Bvalue%5D=&columns%5B3%5D%5Bsearch%5D%5Bregex%5D=false&columns%5B4%5D%5Bdata%5D=guestpaxes_count&columns%5B4%5D%5Bname%5D=guestpaxes_count&columns%5B4%5D%5Bsearchable%5D=true&columns%5B4%5D%5Borderable%5D=true&columns%5B4%5D%5Bsearch%5D%5Bvalue%5D=&columns%5B4%5D%5Bsearch%5D%5Bregex%5D=false&columns%5B5%5D%5Bdata%5D=status&columns%5B5%5D%5Bname%5D=status&columns%5B5%5D%5Bsearchable%5D=true&columns%5B5%5D%5Borderable%5D=true&columns%5B5%5D%5Bsearch%5D%5Bvalue%5D=&columns%5B5%5D%5Bsearch%5D%5Bregex%5D=false&columns%5B6%5D%5Bdata%5D=nationality.name&columns%5B6%5D%5Bname%5D=nationality&columns%5B6%5D%5Bsearchable%5D=true&columns%5B6%5D%5Borderable%5D=true&columns%5B6%5D%5Bsearch%5D%5Bvalue%5D=&columns%5B6%5D%5Bsearch%5D%5Bregex%5D=false&columns%5B7%5D%5Bdata%5D=mealplan.name&columns%5B7%5D%5Bname%5D=mealplan&columns%5B7%5D%5Bsearchable%5D=true&columns%5B7%5D%5Borderable%5D=true&columns%5B7%5D%5Bsearch%5D%5Bvalue%5D=&columns%5B7%5D%5Bsearch%5D%5Bregex%5D=false&columns%5B8%5D%5Bdata%5D=islandhost.name&columns%5B8%5D%5Bname%5D=islandhost&columns%5B8%5D%5Bsearchable%5D=true&columns%5B8%5D%5Borderable%5D=true&columns%5B8%5D%5Bsearch%5D%5Bvalue%5D=&columns%5B8%5D%5Bsearch%5D%5Bregex%5D=false&columns%5B9%5D%5Bdata%5D=restaurant.name&columns%5B9%5D%5Bname%5D=restaurant&columns%5B9%5D%5Bsearchable%5D=true&columns%5B9%5D%5Borderable%5D=true&columns%5B9%5D%5Bsearch%5D%5Bvalue%5D=&columns%5B9%5D%5Bsearch%5D%5Bregex%5D=false&columns%5B10%5D%5Bdata%5D=restaurantoption.name&columns%5B10%5D%5Bname%5D=restaurantoption&columns%5B10%5D%5Bsearchable%5D=true&columns%5B10%5D%5Borderable%5D=true&columns%5B10%5D%5Bsearch%5D%5Bvalue%5D=&columns%5B10%5D%5Bsearch%5D%5Bregex%5D=false&columns%5B11%5D%5Bdata%5D=reservation_date&columns%5B11%5D%5Bname%5D=reservation_date&columns%5B11%5D%5Bsearchable%5D=true&columns%5B11%5D%5Borderable%5D=true&columns%5B11%5D%5Bsearch%5D%5Bvalue%5D=&columns%5B11%5D%5Bsearch%5D%5Bregex%5D=false&columns%5B12%5D%5Bdata%5D=reservation_time&columns%5B12%5D%5Bname%5D=reservation_time&columns%5B12%5D%5Bsearchable%5D=true&columns%5B12%5D%5Borderable%5D=true&columns%5B12%5D%5Bsearch%5D%5Bvalue%5D=&columns%5B12%5D%5Bsearch%5D%5Bregex%5D=false&columns%5B13%5D%5Bdata%5D=free_meal&columns%5B13%5D%5Bname%5D=free_meal&columns%5B13%5D%5Bsearchable%5D=true&columns%5B13%5D%5Borderable%5D=true&columns%5B13%5D%5Bsearch%5D%5Bvalue%5D=&columns%5B13%5D%5Bsearch%5D%5Bregex%5D=false&columns%5B14%5D%5Bdata%5D=served_by&columns%5B14%5D%5Bname%5D=served_by&columns%5B14%5D%5Bsearchable%5D=true&columns%5B14%5D%5Borderable%5D=true&columns%5B14%5D%5Bsearch%5D%5Bvalue%5D=&columns%5B14%5D%5Bsearch%5D%5Bregex%5D=false&columns%5B15%5D%5Bdata%5D=user.name&columns%5B15%5D%5Bname%5D=user&columns%5B15%5D%5Bsearchable%5D=true&columns%5B15%5D%5Borderable%5D=true&columns%5B15%5D%5Bsearch%5D%5Bvalue%5D=&columns%5B15%5D%5Bsearch%5D%5Bregex%5D=false&columns%5B16%5D%5Bdata%5D=cancel_reason&columns%5B16%5D%5Bname%5D=cancel_reason&columns%5B16%5D%5Bsearchable%5D=true&columns%5B16%5D%5Borderable%5D=true&columns%5B16%5D%5Bsearch%5D%5Bvalue%5D=&columns%5B16%5D%5Bsearch%5D%5Bregex%5D=false&columns%5B17%5D%5Bdata%5D=canceled_by&columns%5B17%5D%5Bname%5D=canceled_by&columns%5B17%5D%5Bsearchable%5D=true&columns%5B17%5D%5Borderable%5D=true&columns%5B17%5D%5Bsearch%5D%5Bvalue%5D=&columns%5B17%5D%5Bsearch%5D%5Bregex%5D=false&columns%5B18%5D%5Bdata%5D=created_at&columns%5B18%5D%5Bname%5D=created_at&columns%5B18%5D%5Bsearchable%5D=true&columns%5B18%5D%5Borderable%5D=true&columns%5B18%5D%5Bsearch%5D%5Bvalue%5D=&columns%5B18%5D%5Bsearch%5D%5Bregex%5D=false&order%5B0%5D%5Bcolumn%5D=0&order%5B0%5D%5Bdir%5D=dec&start=0&length=10&search%5Bvalue%5D=&search%5Bregex%5D=false&_=1578940884709
```

What could be the problem here? I have searched all over Git issues and Stackoverflow and I could not find anything relating to my issue.
I'm sure I'm just doing something wrong but the following code seems to ignore other filters when search is present. So if you select a user id in the filter it filters by that user id but if you then type something in search it returns all records as if the user id wasn't there.

```
->filter(function ($query) {
    if (request()->has('search') && !empty(request()->search['value'])) {
        $query->where('first_name', 'like', "%" . request('search')['value'] . "%")
            ->orWhere('last_name', 'like', "%" . request('search')['value'] . "%")
            ->orWhere('email', 'like', "%" . request('search')['value'] . "%")
            ->orWhere('id', 'like', "%" . request('search')['value'] . "%")
            ->orWhereHas('user', function ($query) {
                $query->where('users.first_name', 'like', "%" . request('search')['value'] . "%");
                $query->orWhere('users.last_name', 'like', "%" . request('search')['value'] . "%");
            });
    }
    if (request()->has('userFilter') && !empty(request()->userFilter)) {
        $query->whereIn('user_id', request()->userFilter);
    }
})
```

Thanks for any help