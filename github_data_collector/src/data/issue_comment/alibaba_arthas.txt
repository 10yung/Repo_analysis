- [ ] 我已经在 [issues](https://github.com/alibaba/arthas/issues) 里搜索，没有重复的issue。

### 环境信息

* `arthas-boot.jar` 或者 `as.sh` 的版本： xxx
* Arthas 版本: xxx
* 操作系统版本: xxx
* 目标进程的JVM版本: xxx
* 执行`arthas-boot`的版本: xxx

### 重现问题的步骤

1. xxx
2. xxx
3. xxx

### 期望的结果

What do you expected from the above steps？

### 实际运行的结果

实际运行结果，最好有详细的日志，异常栈。尽量贴文本。

```
把异常信息贴到这里
```

- [x] 我已经在 [issues](https://github.com/alibaba/arthas/issues) 里搜索，没有重复的issue。

### 环境信息

* `arthas-boot.jar` 或者 `as.sh` 的版本： v3.1.7
* Arthas 版本: v3.1.7
* 操作系统版本: ubuntu
* 目标进程的JVM版本: :java-1.8.0-openjdk-1.8.0.121
* 执行`arthas-boot`的版本: v3.1.7

### 重现问题的步骤

1. 在glassfish4.1 server中执行 java -jar arthas-boot.jar

### 期望的结果

显示的所有java进程中，所有的进程中之一有包含用sc命令能够查到自己系统的类的进程

### 实际运行的结果

显示的所有java进程中，所有的进程中都没有包含用sc命令能够查到自己系统的类的进程
插件地址： https://plugins.jetbrains.com/plugin/13581-arthas-idea

使用文档： https://www.yuque.com/docs/share/fa77c7b4-c016-4de6-9fa3-58ef25a97948?#

感谢 @WangJi92 的工作。
总结了Arthas中的常用命令、参数以及用例，在使用时可以方便查到需要的功能。

![arthas](https://user-images.githubusercontent.com/1683936/71873638-a697b800-315a-11ea-9862-fbfa8e470064.png)

![ArtHas](https://user-images.githubusercontent.com/31468811/71954111-3010be00-321f-11ea-9900-e88195c2a570.png)

- [ ] 我已经在 [issues](https://github.com/alibaba/arthas/issues) 里搜索，没有重复的issue。

### 环境信息

* `arthas-boot.jar` 
* Arthas 版本: 3.1.7
* 操作系统版本: centos6.7
* 目标进程的JVM版本: jdk1.8
* 执行`arthas-boot`的版本: jdk1.8

### 重现问题的步骤

1. 我的项目使用的logback.xml,项目中的的日志打印都没有问题，而我使用logger后没有显示？
2.部分配置
<configuration scan="true" scanPeriod="60 seconds" debug="false">
	
	<!-- 下面两个属性值用于测试 -->
     <property name="log_path" value="../log" />
     <property name="log_name" value="GameServer" />
     <!-- 文件历史数 -->
	 <property name="maxHistory" value="7" />
	 
	 <property name="maxHistory1" value="48" />
    
    <!--定义日志文件的存储地址 勿在 LogBack 的配置中使用相对路径-->
    <property name="LOG_HOME" value="${log_path}" />
    
    <!-- 控制台输出日志 -->  
    <appender name="Console" class="ch.qos.logback.core.ConsoleAppender">  
        <encoder>
            <pattern>%d [Thread:%thread] %-36logger{36} L%-4line %-5level - %m%n</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>

	<appender name="ServerFile" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">  
            <level>INFO</level>
        </filter>  
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${log_path}/${log_name}_%d{yyyy-MM-dd}.log</fileNamePattern>
            <maxHistory>${maxHistory}</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>%d [Thread:%thread] %-36logger{36} L%-4line %-5level - %m%n</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender> 



### 期望的结果

What do you expected from the above steps？

### 实际运行的结果

实际运行结果，最好有详细的日志，异常栈。尽量贴文本。

[arthas@1544]$ logger 
[arthas@1544]$

把异常信息贴到这里
```

- [ ] 我已经在 [issues](https://github.com/alibaba/arthas/issues) 里搜索，没有重复的issue。

### 环境信息

* `arthas-boot.jar` 或者 `as.sh` 的版本： 3.1.7
* Arthas 版本:  3.1.7
* 操作系统版本: Red Hat Enterprise Linux Server release 6.6 (Santiago)
* 目标进程的JVM版本: java version "1.8.0_91"
* 执行`arthas-boot`的版本: java version "1.8.0_91"

### 重现问题的步骤

1. 在目标进程加入VM参数加入    -javaagent:skywalking-agent.jar
2. 启动目标进程  拿到进程id
3. 使用 /app/jdk/bin/java  -jar arthas-boot.jar  进程ID

### 期望的结果

启动成功

### 实际运行的结果

实际运行结果，最好有详细的日志，异常栈。尽量贴文本。

```
Arthas server agent start...
java.lang.ExceptionInInitializerError
        at com.taobao.middleware.logger.option.Logback918ActivateOption.activateAsync(Logback918ActivateOption.java:234)
        at com.taobao.middleware.logger.option.Logback918ActivateOption.activateAsync(Logback918ActivateOption.java:229)
        at com.taobao.middleware.logger.support.LoggerSupport.activateAsync(LoggerSupport.java:168)
        at com.taobao.arthas.core.util.LogUtil.<clinit>(LogUtil.java:67)
        at com.taobao.arthas.core.server.ArthasBootstrap.<clinit>(ArthasBootstrap.java:42)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
        at java.lang.reflect.Method.invoke(Method.java:498)
        at com.taobao.arthas.agent.AgentBootstrap.bind(AgentBootstrap.java:175)
        at com.taobao.arthas.agent.AgentBootstrap.access$000(AgentBootstrap.java:16)
        at com.taobao.arthas.agent.AgentBootstrap$1.run(AgentBootstrap.java:140)
Caused by: java.lang.reflect.InvocationTargetException
        at sun.reflect.GeneratedMethodAccessor37.invoke(Unknown Source)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
        at java.lang.reflect.Method.invoke(Method.java:498)
        at ch.qos.logback.core.AsyncAppenderBase.<clinit>(AsyncAppenderBase.java)
        ... 12 more
Caused by: java.lang.reflect.InvocationTargetException
        at sun.reflect.GeneratedMethodAccessor38.invoke(Unknown Source)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
        at java.lang.reflect.Method.invoke(Method.java:498)
        at org.apache.skywalking.apm.dependencies.net.bytebuddy.dynamic.Nexus.initialize(Nexus.java:137)
        ... 16 more
Caused by: java.lang.NoClassDefFoundError: Lorg/apache/skywalking/apm/agent/core/plugin/interceptor/enhance/InstMethodsInter;
        at java.lang.Class.getDeclaredFields0(Native Method)
        at java.lang.Class.privateGetDeclaredFields(Class.java:2583)
        at java.lang.Class.getDeclaredField(Class.java:2068)
        at org.apache.skywalking.apm.dependencies.net.bytebuddy.implementation.LoadedTypeInitializer$ForStaticField.onLoad(LoadedTypeInitializer.java:122)
        at org.apache.skywalking.apm.dependencies.net.bytebuddy.implementation.LoadedTypeInitializer$Compound.onLoad(LoadedTypeInitializer.java:192)
        at org.apache.skywalking.apm.dependencies.net.bytebuddy.agent.builder.AgentBuilder$InitializationStrategy$SelfInjection$Dispatcher$InjectingInitializer.onLoad(AgentBuilder.java:3132)
        ... 20 more
Caused by: java.lang.ClassNotFoundException: org.apache.skywalking.apm.agent.core.plugin.interceptor.enhance.InstMethodsInter
        at java.net.URLClassLoader.findClass(URLClassLoader.java:381)
        at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
        at com.taobao.arthas.agent.ArthasClassloader.loadClass(ArthasClassloader.java:34)
        at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
        ... 26 more
Arthas server agent start...
java.lang.NoClassDefFoundError: Could not initialize class com.taobao.arthas.core.server.ArthasBootstrap
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
        at java.lang.reflect.Method.invoke(Method.java:498)
        at com.taobao.arthas.agent.AgentBootstrap.bind(AgentBootstrap.java:175)
        at com.taobao.arthas.agent.AgentBootstrap.access$000(AgentBootstrap.java:16)
        at com.taobao.arthas.agent.AgentBootstrap$1.run(AgentBootstrap.java:140)
Arthas server agent start...
java.lang.NoClassDefFoundError: Could not initialize class com.taobao.arthas.core.server.ArthasBootstrap
java.lang.NoClassDefFoundError: Could not initialize class com.taobao.arthas.core.server.ArthasBootstrap
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
        at java.lang.reflect.Method.invoke(Method.java:498)
        at com.taobao.arthas.agent.AgentBootstrap.bind(AgentBootstrap.java:175)
        at com.taobao.arthas.agent.AgentBootstrap.access$000(AgentBootstrap.java:16)
        at com.taobao.arthas.agent.AgentBootstrap$1.run(AgentBootstrap.java:140)
Arthas server agent start...
java.lang.NoClassDefFoundError: Could not initialize class com.taobao.arthas.core.server.ArthasBootstrap
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
        at java.lang.reflect.Method.invoke(Method.java:498)
        at com.taobao.arthas.agent.AgentBootstrap.bind(AgentBootstrap.java:175)
        at com.taobao.arthas.agent.AgentBootstrap.access$000(AgentBootstrap.java:16)
        at com.taobao.arthas.agent.AgentBootstrap$1.run(AgentBootstrap.java:140)
Arthas server agent start...
java.lang.NoClassDefFoundError: Could not initialize class com.taobao.arthas.core.server.ArthasBootstrap
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
        at java.lang.reflect.Method.invoke(Method.java:498)
        at com.taobao.arthas.agent.AgentBootstrap.bind(AgentBootstrap.java:175)
        at com.taobao.arthas.agent.AgentBootstrap.access$000(AgentBootstrap.java:16)
        at com.taobao.arthas.agent.AgentBootstrap$1.run(AgentBootstrap.java:140)
Arthas server agent start...
java.lang.NoClassDefFoundError: Could not initialize class com.taobao.arthas.core.server.ArthasBootstrap
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
        at java.lang.reflect.Method.invoke(Method.java:498)
        at com.taobao.arthas.agent.AgentBootstrap.bind(AgentBootstrap.java:175)
        at com.taobao.arthas.agent.AgentBootstrap.access$000(AgentBootstrap.java:16)
        at com.taobao.arthas.agent.AgentBootstrap$1.run(AgentBootstrap.java:140)
Arthas server agent start...
java.lang.NoClassDefFoundError: Could not initialize class com.taobao.arthas.core.server.ArthasBootstrap
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
        at java.lang.reflect.Method.invoke(Method.java:498)
        at com.taobao.arthas.agent.AgentBootstrap.bind(AgentBootstrap.java:175)
        at com.taobao.arthas.agent.AgentBootstrap.access$000(AgentBootstrap.java:16)
        at com.taobao.arthas.agent.AgentBootstrap$1.run(AgentBootstrap.java:140)
Arthas server agent start...
java.lang.NoClassDefFoundError: Could not initialize class com.taobao.arthas.core.server.ArthasBootstrap
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
        at java.lang.reflect.Method.invoke(Method.java:498)
        at com.taobao.arthas.agent.AgentBootstrap.bind(AgentBootstrap.java:175)
```

- [ ] 我已经在 [issues](https://github.com/alibaba/arthas/issues) 里搜索，没有重复的issue。

### 环境信息

* `arthas-boot.jar` 或者 `as.sh` 的版本： xxx
* Arthas 版本: xxx
* 操作系统版本: xxx
* 目标进程的JVM版本: xxx
* 执行`arthas-boot`的版本: xxx

### 重现问题的步骤
mc -c 编译自己上传得java文件，而非jad出来得java文件。redefine报错。对比class发现自己上传得少个static{}

使用javap 查看class 发现自己上传得是：
  private com.modules.basecfg.service.StaticCfgService staticCfgService;
  public com.modules.basecfg.controller.StaticConfigController();
  public com.comm.api.vo.Result getNewStartUpConfig(int);

而jad或者本地idea编译后的是：
  private com.modules.basecfg.service.StaticCfgService staticCfgService;
  public com.modules.basecfg.controller.StaticConfigController();
  public com.comm.api.vo.Result getNewStartUpConfig(int);
  static{}

### 期望的结果

上传得java文件不能用mc进行编译嘛？

### 实际运行的结果

实际运行结果，最好有详细的日志，异常栈。尽量贴文本。

```
把异常信息贴到这里
```

在某些情况下，一些其它的字节码修改的agent 可以会拉截到 arthas 里的类，然后插入自己的Agent里的代码，这样子导致出错。

尽管这个逻辑是不对的，但 ArthasClassloader 本身是否应该支持加载 SystemClassLoader里的类？

修改之后，有没有可能影响到 ognl 的执行？
考虑加载因子
#978  