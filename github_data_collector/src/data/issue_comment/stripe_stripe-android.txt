For my app I need to create completely custom interface to fill new credit card number, with two line style and boxed text fields. After that I need some code to interact with those elements and Stripe team (thanks ❤️) have already done a part of that work but the interesting part is tagged as `private`.

So I would like to know if its possible to make `brandChangeCallback` and `completionCallback` of `CardNumberEditText` public to be used directly in my code. (It will be ever more interesting to have a `shouldShowErrorCallback`.) And finally I don't if its a good idea to make strings ressource like `card_number_hint`, `expiry_date_hint`, `valid_digits`, etc. public ?

Basically it's to help us to make beautiful interfaces with the power of Stripe.

## Summary
Make some methods public :
- `brandChangeCallback`
- `completionCallback`

Male some ressource public :
- `card_number_hint`
- `expiry_date_hint`
- `cvc_multiline_helper_amex`
- `cvc_multiline_helper`
- `valid_digits`

If possible create a new callback in `CardNumberEditText` :
- `shouldShowErrorCallback`

##  Summary
Any way to get the default payment method and then set it on UI side? On iOS, it is possible by setting `paymentContext.defaultPaymentMethod = "card_token_id" `
and then by doing that it reflects it on the UI side. Calling
`let card = paymentContext.selectedPaymentOption ` 
gets the correct card along with its information. 

## SDK version
12.8.0

## Other information
On iOS we can do 
`paymentContext.defaultPaymentMethod = "card_token_id"` 
then 
let `card = paymentContext.selectedPaymentOption ` 
is that possible on Android?

<!--
Please only file issues here that you believe represent actual bugs or feature requests for the Stripe Android SDK.

If you're having general trouble with your Stripe integration, please reach out to support using the form at https://support.stripe.com/ (preferred) or via email to support@stripe.com.

Otherwise, to make it easier to diagnose your issue, please fill out the following:
-->

## Summary
We have an issue in production where onActivityResult is received after the calling activity has been destroyed. 

To reproduce this I’ve enabled “Don’t keep activities” through the debug settings, however with this setting enabled we don't always receive a callback to `onActivityResult`.

- on API 29 around 3 in 10 `confirmPayment` calls didn't invoke `onActivityResult` when the user cancels/fails/confirms the payment in the 3DS screen.

- on older API versions this occurs more often - testing on API 21/22 we don't receive any callbacks to  `onActivityResult`

## Code to reproduce

- Enable “Don’t keep activities”
- Call `confirmPayment` with a card that requires 3DS
- Verify `onActivityResult` is called when the user cancels/fails/confirms the payment.

## SDK version
'com.stripe:stripe-android:12.6.1'
## Summary
`CardMultilineWidget` has built-in validation for its fields, but it shows *all* error messages when `getCard()` is invoked. It would be useful to have per-field validation so that we can avoid overwhelming the user with error messages as soon as they start typing.

Example use case: We want to enable/disable other UI elements depends on whether or not a valid card has been entered. To do so, we need to observe all text changes. If we call `getCard()` any time any field changes, we'll display error messages on fields that the user has not typed in yet.

## Code to reproduce
Add a `CardMultilineWidget` to your layout, then set a text watcher on all relevant fields. In each of those text watchers, invoke `getCard()`

## SDK version
12.3.0
## Summary
See Video: https://cl.ly/6115ddc0378b
After inputting a credit card number requiring SCA, you are unable to click on "Complete Authentication" the video shows someone tapping "FAIL AUTHENTICATION" when they are actually attempting to tap on "Complete Authentication".
The application is then restarted after the tap (splash page is shown instead of the payment screen).

## Code to reproduce
This is using `tipsi-stripe` beta.8, which uses `stripe-android` `10.4.5`
SCA is initiated with:
```
 paymentService.authenticatePaymentIntent({ clientSecret: paymentIntentClientSecret })
        .then(onPaymentAuthenticated)
        .catch((error) => {
          displayToast(getPaymentAuthenticationErrorMessage(error));
          onPaymentAuthenticationFailed(error);
        });
```

## Android version
![Screenshot_20191003-103502_Settings](https://user-images.githubusercontent.com/421781/66154849-416c7d80-e5d3-11e9-8343-d0928eccc54e.jpg)


## Impacted devices
Galaxy S8+ `SM-G955W`

## Installation method
Linked in via `tipsi-stripe`.
```
implementation project(':tipsi-stripe')
```

## SDK version
`10.4.5`

## Other information
ADB Logcat output during problems:
https://gist.github.com/bramski/1e0c0daf74bcfa0b8e7f4bf211effa96

## Summary
setTextBoxCustomisation breaks the 3DS TextView. When applying any values here, they don't take effect and the TextView appears broken (hint appears outside of the view bounds, the underline is missing, the colour is still purple).

## Code to reproduce
```
PaymentAuthConfig.Stripe3ds2UiCustomization.Builder()
    .setTextBoxCustomization(
                PaymentAuthConfig.Stripe3ds2TextBoxCustomization.Builder()
                    .setTextColor("#000000")
                    .setBorderColor("#000000")
                    .build()
            )
```

## Android version
Any

## Impacted devices
Any

## Installation method
Gradle

## SDK version
11.0.5

## Other information


We need Stripe-Android ported to Google's [Flutter](https://flutter.io/).

There are 2 ways of doing that: 

1. One is to use platform-channels, so that a Dart layer interfaces with the original Stripe-Android code, in Java or Kotlin (see: https://flutter.io/docs/development/platform-integration/platform-channels). 

2. Another is to port it to native Dart.

Note: Since Flutter is for iOS and Android, please also see: https://github.com/stripe/stripe-ios/issues/1129

Currently there are some individuals trying to start something in that regard (https://pub.dartlang.org/packages/stripe_payment and https://pub.dartlang.org/packages/stripe_api), but that's incipient and I believe the Flutter community actually deserves official support from Stripe.

Flutter reached stable 1.0 and is growing very fast. We need Stripe there too.


This is an issue for some  time  now, but #250 was closed by @mrmcduff-stripe  last year  stating that "new controls" would be released.

@fred-stripe  stated it would be possible to bridge the native stripe widgets for RN, but this is actually _not_ currently possible for Android https://github.com/stripe/react-stripe-elements/issues/21#issuecomment-307163466

Will this ever be addressed?

Related:
https://github.com/tipsi/tipsi-stripe/issues/85

```
09-21 00:07:18.925 5080-5080g W/IInputConnectionWrapper: endBatchEdit on inactive InputConnection
09-21 00:07:18.934 5080-5080 W/IInputConnectionWrapper: getExtractedText on inactive InputConnection
09-21 00:07:18.935 5080-5080 W/IInputConnectionWrapper: getTextBeforeCursor on inactive InputConnection
09-21 00:07:19.828 5080-5080 W/IInputConnectionWrapper: getExtractedText on inactive InputConnection
09-21 00:07:19.836 5080-5080 W/IInputConnectionWrapper: getTextBeforeCursor on inactive InputConnection
09-21 00:07:19.839 5080-5080 W/IInputConnectionWrapper: getExtractedText on inactive InputConnection
09-21 00:07:19.840 5080-5080 W/IInputConnectionWrapper: getTextBeforeCursor on inactive InputConnection
09-21 00:07:19.841 5080-5080 W/IInputConnectionWrapper: getExtractedText on inactive InputConnection
```

When changing text inputs in the Multiline Card Input I'm getting a lot of spam warnings in the logcat. Although I may be incorrect I believe this may be due to how you clear the hints when doing animations in the EditText UI elements.

The code can be found [here](https://github.com/stripe/stripe-android/blob/master/stripe/src/main/java/com/stripe/android/view/CardMultilineWidget.java#L450), [here](https://github.com/stripe/stripe-android/blob/master/stripe/src/main/java/com/stripe/android/view/CardMultilineWidget.java#L465), [here](https://github.com/stripe/stripe-android/blob/master/stripe/src/main/java/com/stripe/android/view/CardMultilineWidget.java#L482) and [here](https://github.com/stripe/stripe-android/blob/master/stripe/src/main/java/com/stripe/android/view/CardMultilineWidget.java#L503) in the `CardMultiLineWidget.java` file (lines 450, 465, 482 and 503). Although perhaps other UI elements of yours may be subject to the same issue.

Suggested solutions are to use `.getHint().clear()` on the hint `CharSequence` to remove the errors instead of setting it to be blank - [as suggested here](https://stackoverflow.com/a/15732554)

I may be incorrect, but I'm afraid I don't have time to explore further yet. I may try update this issue in future.