I am trying to juggle two things in my app related to notifications - 

1. Is the device registered with a push token?  and 
2. Does the device have a onMessageReceivedCallback registered?  

I am fairly certain how to check for a push token (messaging.getCurrentPushToken()) But I am unsure how to check if a callback is currently registered?  I tried console.log(typeof messaging.onMessageReceivedCallback) but that doesn't seem to work.  I am trying to avoid spamming google with constant registrations.  To do this I believe I either need to check the status of the onMessageReceivedCallback OR be able to register only the part of my registerForPushNotifications() function that won't spam google.  OR I need to just not care about constantly phoning home.  

What is the best practice for making sure your app is registered and receiving notifications?  
When I try to run a reauthenticate I am getting an error. Here is my code:

     const firebaseWebApi = require("nativescript-plugin-firebase/app");

     viewModel.reauthenticate = (email,currentPassword,newPassword) => {

        return firebaseWebApi.reauthenticate({
            type: firebaseWebApi.LoginType.PASSWORD, 
            passwordOptions: {
                email: email,
                password: currentPassword
            }
        }).then(
            function (result) {
                return viewModel.updatePassword(newPassword)
            },
            function (error) {
              return error
            }
        );
      }   

everything else works in the firebase plugin. I got the code from the reauthentication section of the docs here: https://github.com/eddyverbruggen/nativescript-plugin-firebase/blob/HEAD/docs/AUTHENTICATION.md

Hi, first of all thank you for the amazing work with this plugin.
I am using fcm for an app in ios and android built with nativescript angular. It works perfectly on android(emulator and device) but in ios only works in simulator.  Here is my code: 

app.component.ts

    constructor() {
        LocalNotifications.LocalNotifications.addOnMessageReceivedCallback(notificationData => {
            console.log("Notification received: " + JSON.stringify(notificationData));
        });
    }

    ngOnInit(): void {
        firebase.init({
            showNotifications: true,
            showNotificationsWhenInForeground: true,
      
            onPushTokenReceivedCallback: (token) => {
                console.log('[Firebase] onPushTokenReceivedCallback:', { token });
                if(token !== applicationSettings.getString('firebaseToken')) {
                    applicationSettings.setString('firebaseToken', token);
                }
            },
      
            onMessageReceivedCallback: (message: firebase.Message) => {
              console.log('[Firebase] onMessageReceivedCallback:', message );
                LocalNotifications.LocalNotifications.schedule(
                    [{
                      thumbnail: true,
                      title: message.title,
                      body: message.body,
                      forceShowWhenInForeground: true,
                    }])
                    .then(() => {
                      console.log('alert');
                    })
                    .catch(error => console.log("doScheduleId5WithInput error: " + error));
            }
        })
            .then(() => {
              console.log('[Firebase] Initialized');
            })
            .catch(error => {
              console.log('[Firebase] Initialize', { error });
            });
    }

As you can see i am using local notifications plugin to display notifications. I think i made all the steps needed to make this work but still no changes. Is there any reason why it works on simulator but not in a real device? simulator iphone 11 pro, real device iphone XS max
I am currently debugging duplicate services in an angular application. It seems as if they are caused by opening a push notification in a suspended android app. This seems to cause a partial reinitialization of the app and a new AppComponent as well as dependend services, which leads to problems with Routing and Navigation as well as state in the services.

I reproduced this behaviour in a demo app: https://github.com/000panther/nativescript-push-error/

In the following logs you can see that 

```Installing on device FA81B1A02641...
Successfully installed on device with identifier 'FA81B1A02641'.
Restarting application on device FA81B1A02641...
Successfully synced application org.nativescript.pushdemo on device FA81B1A02641.
JS: HMR: Hot Module Replacement Enabled. Waiting for signal.
JS: construct firebaseService 1579085694744
JS: construct AppComponent
JS: Angular is running in the development mode. Call enableProdMode() to enable the production mode.
JS: firebase init success
JS: got token1579085694744
JS: fIf-cdi5cQI:APA91bEgWIbxdoHo6JTaeiTZDWm0BvwdIIPf-9HLsowdhsPHfgF_f62t89ks0aS9NQs251PyRv-MXXNXDLXRKca7ZI1YvHyxhFSEg43OS2uH5by630wzbFcFH63BVqjdeqfMN9UCrzTE
```

Push Notification received - constructed again

```
JS: construct firebaseService 1579085748718
JS: construct AppComponent
JS: Angular is running in the development mode. Call enableProdMode() to enable the production mode.
JS: firebase init error:  Firebase already initialized
JS: got message 1579085694744
```

Push notification is handled by old firebaseService - new service is not notified. 
In android, and in particular in some Huawei devices for example:
- Huawei Mate 9 Lite
- pantalla de 5,5 pulgadas
- 1080 x 1920 px
- 400 dpi

We are having some issues with the camera. A black bar is showing at bottom. i'm attaching an image as an example.

![Imagen](https://user-images.githubusercontent.com/4139277/72427289-309edc80-376a-11ea-8aec-67cbb3af5338.jpeg)

Do you have any ideas about what could happend in this case, and why this is only in some devices ?

thanks in advance...
I'm trying to sign in with google account with angular, when I call the firebase.login function and getting following error:

![google_sign_in_issue](https://user-images.githubusercontent.com/6507302/72266670-d5bf9500-3644-11ea-9109-28fab19828c2.PNG)


This is my sign in function:


```
signInWithGoogle() {
        firebase.login({
            type: firebase.LoginType.GOOGLE,
            googleOptions: {
                hostedDomain: "mygsuitedomain.com",
                scopes: ['https://www.googleapis.com/auth/user.birthday.read']
            }
        }).then(
            function (result) {
                JSON.stringify(result);
            },
            function (errorMessage) {
                console.log(errorMessage);
            }
        );
    }

```


This is my _init_ method. (This is called at the top of _app.component_)

```
firebase.init().then(
    (instance) => {
        console.log("[OK] FIREBASE.INIT: DONE", instance);
    },
    (error) => {
        console.log("[ERR] firebase.init error: ", error);
    }
);

```


this is my _firebase.nativescript.json_ file:

```
{
    "using_ios": true,
    "using_android": true,
    "analytics": true,
    "firestore": false,
    "realtimedb": false,
    "authentication": true,
    "remote_config": false,
    "performance_monitoring": false,
    "external_push_client_only": false,
    "messaging": false,
    "in_app_messaging": false,
    "crashlytics": false,
    "storage": false,
    "functions": false,
    "facebook_auth": false,
    "google_auth": true,
    "admob": false,
    "dynamic_links": false,
    "ml_kit": false
}

```

This is my _package.json_ file:

```
{
  "nativescript": {
    "id": "org.nativescript.loginExp6",
    "tns-android": {
      "version": "6.3.1"
    },
    "tns-ios": {
      "version": "6.3.0"
    }
  },
  "description": "NativeScript Application",
  "license": "SEE LICENSE IN <your-license-filename>",
  "repository": "<fill-your-repository-here>",
  "scripts": {
    "lint": "tslint \"src/**/*.ts\""
  },
  "dependencies": {
    "@angular/animations": "~8.2.0",
    "@angular/common": "~8.2.0",
    "@angular/compiler": "~8.2.0",
    "@angular/core": "~8.2.0",
    "@angular/forms": "~8.2.0",
    "@angular/platform-browser": "~8.2.0",
    "@angular/platform-browser-dynamic": "~8.2.0",
    "@angular/router": "~8.2.0",
    "@nativescript/theme": "~2.2.1",
    "nativescript-angular": "~8.20.3",
    "nativescript-plugin-firebase": "^10.3.3",
    "nativescript-ui-sidedrawer": "~8.0.0",
    "reflect-metadata": "~0.1.12",
    "rxjs": "^6.4.0",
    "tns-core-modules": "~6.3.0",
    "zone.js": "~0.9.1"
  },
  "devDependencies": {
    "@angular/compiler-cli": "~8.2.0",
    "@ngtools/webpack": "~8.2.0",
    "codelyzer": "~4.5.0",
    "nativescript-dev-webpack": "~1.4.0",
    "node-sass": "^4.7.1",
    "tslint": "~5.19.0",
    "typescript": "~3.5.3"
  },
  "gitHead": "fa98f785df3fba482e5e2a0c76f4be1fa6dc7a14",
  "readme": "NativeScript Application"
}

```

This functionality worked perfectly in _nativescript-plugin-firebase version 6.0.2_ with _nativescript 4.0.1_
And I have tried with removing android platform. But no luck
Hi there,

I'm using the last native script version but am unable to build for ios due to Firebase Pod error : 
'GoogleUtilities/GULAppEnvironmentUtil.h' file not found

I tried lot of fixes, updating cocoapods, updating all plugins, removing all node_modules, platforms etc. Nothing seems to work.

It seems users using flutter are experiencing the same issue due to deprecated Google Pod.

Nativescript version : 6.3.2

Does anyone have this issue ?

Thanks a lot !
Hello,

We use the latest version of this plugin (10.3.3).
When using Apple Sign-in, the Google Auth user displayName is null, we get only the email.
Tested on iPhone X real device with NS 6.2.1.

`                firebase.login({
                    type: firebase.LoginType.APPLE,
                    // Optional
                    appleOptions: {
                    scopes: ["email", "name"]
                    }
                }).then(
                    function (result) {
                        console.log(result);
                    },
                    function (errorMessage) {
                        console.log(errorMessage);
                    }
                );`
Is there any way I could use `nativescript-local-notifications` for background notifications?

Right now I don't pass notification information in the notification builder but pass my information as data and therefore, with the help of `onMessageReceivedCallback` I can use `nativescript-local-notifications` to show the notifications.

Unfortunately, when the message is received in the background, this doesn't work. The only way so far I could receive notifications in the background is to use the initial way of showing the notification (by passing the title and body in the notification builder).

FYI: I need to use `nativescript-local-notifications` in the first place is because on some devices (e.g. Xiaomi phones) all the notifications from this plugin go to the miscellaneous channel and have low priority. With `nativescript-local-notifications` I can set a custom channel and force a priority if I need to.
I can't seem to find a way to add an image to iOS cloud messaging push notifications. Is this supported?