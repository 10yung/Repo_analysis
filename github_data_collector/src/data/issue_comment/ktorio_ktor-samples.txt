**Problem**
When running `./gradlew :http2-push:run`
an exception occured: 
```
Exception in thread "main" java.lang.NoClassDefFoundError: Could not initialize class io.netty.handler.ssl.OpenSsl
```

**Solution**
Bump version of *io.netty:netty-tcnative* to newest *2.0.28.Final*.

Instead of lastest it should be latest.

Would make a great addition to this repo 😁 @cy6erGn0m 
There were some exceptions when I built the project:
`
A problem occurred evaluating root project 'lzucxm'.
Cannot add task 'run' as a task with that name already exists.
`
So, I'm very gratitude if anyone give me some help.
JDK 12
Kotlin version 1.3.50-release-112

`gradle appengineRun`

>FAILURE: Build failed with an exception.
>
>* Where:
>Build file '/Users/rojepp/dev/steward/build.gradle' line: 11
>
>* What went wrong:
>A problem occurred evaluating root project 'steward'.
> Could not get unknown property 'kotlin_version' for object of type org.gradle.api.internal.artifacts.dsl.dependencies.DefaultDependencyHandler.

These changes make it possible for the code to convert the JSON Body in a request to a Item object, and add it to the list in the `/v1/upload` endpoint. Here is a sample CURL command to test:

```
curl -H        "Content-Type: application/json" \
     --request POST \
     --data    "{\"key\": \"D\", \"value\": \"Debian\"}" \
               http://localhost:8080/v1/upload
```
It would be nice to have some unit tests, e.g. for the sse example, which show how basic ktor mechanisms can be tested on the lowest (unit test) level.
this would help with understanding the whole websocket chain
Hello, I would like an example using cookies with accept all cookies using JS client,  i'm doing request to vertx server with session cookie and I can't see that  cookie in the browser, where are cookies being stored?
this is my initial client setup:

```
HttpClient()
            {
                install(JsonFeature) {
                    serializer = KotlinxSerializer(Json.nonstrict)
                }
                install(HttpCookies) {
                    // Will keep an in-memory map with all the cookies from previous requests.
                    storage = AcceptAllCookiesStorage()


                }

                
            }
```
thanks in advance