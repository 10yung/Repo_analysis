When running "darling shell" as non-root, installing software (even with sudo) is not possible, but results in "Permission denied". Example:

```
Darling [~]$ mkdir /usr/libexec/foo
mkdir: /usr/libexec/foo: Permission denied
Darling [~]$ sudo mkdir /usr/libexec/foo
mkdir: /usr/libexec/foo: Permission denied
```

When running "darling shell" as root, it works.
Several examples on https://wiki.darlinghq.org/what_to_try do not work:

- nm
    ```
    Darling [~]# nm /usr/lib/libobjc.A.dylib
    Invoked with: /Library/Developer/DarlingCLT/usr/bin/xcrun nm /usr/lib/libobjc.A.dylib
    Executing /Library/Developer/DarlingCLT/usr/bin/nm
    Failed to execute program /Library/Developer/DarlingCLT/usr/bin/nm
    ```
- otool
    ```
    Darling [~]# otool -l /bin/bash         
    Invoked with: /Library/Developer/DarlingCLT/usr/bin/xcrun otool -l /bin/bash
    Executing /Library/Developer/DarlingCLT/usr/bin/otool
    Failed to execute program /Library/Developer/DarlingCLT/usr/bin/otool
    ```
- man dyld
    ```
    Darling [~]# man dyld
    No manual entry for dyld
    ```
- curl  (but this is mentioned in the wiki)
    ```
    Darling [~]$ curl -s https://raw.githubusercontent.com/rudix-mac/rpm/2015.10.20/rudix.py
    ...
    curl: (35) Unknown SSL protocol error in connection to raw.githubusercontent.com:32767
    ```
- rudix
    ```
    Darling [~]$ sudo python ./rudix.py install rudix                                                                                                                                              
    No match for 'rudix'
    ```

Used darling-version:
- latest git-version of 2020-01-15
- compiled/used on a qemu/kvm virtual machine running Debian 10
   (`Linux debian 4.19.0-6-amd64 #1 SMP Debian 4.19.67-2+deb10u2 (2019-11-11) x86_64 GNU/Linux`)


https://github.com/darlinghq/darling/blob/20abed887376826a3bff72195ab4e02c84cd38d9/src/startup/darling.c#L161

LaunchD seems to be working now.
Also some stuff on the website (https://github.com/darlinghq/www.darlinghq.org/tree/master/content/developer-zone) and wiki (https://wiki.darlinghq.org/high_priority_stuff, https://wiki.darlinghq.org/roadmap, and https://wiki.darlinghq.org/google_summer_of_code) seems outdated?
Now that Debian packaging is no longer broken, would it be possible to create a PPA for 18.04, and 19.04 (the LTS and the latest)?
When debugging #600, I got this:
```
[234] mprotect (...)
[234]	mprotect () -> 0
[234] getuid (...)
[234]	getuid () -> 1000
[234] mach_msg_trap (...)
[234]	mach_msg_trap () -> KERN_SUCCESS
[234] mach_msg_trap (...)
[234]	mach_msg_trap () -> KERN_SUCCESS
[234] mach_msg_trap (...)
[234]	mach_msg_trap () -> KERN_SUCCESS
[234] mach_msg_trap (...)
[234]	mach_msg_trap () -> KERN_SUCCESS
[234] mach_msg_trap (...)
[234]	mach_msg_trap () -> KERN_SUCCESS
[234] shm_open (...)
[234] open (...)
[234]	open () -> 4
[234] read (...)
[234]	read () -> 64
[234] pread (...)
[234]	pread () -> 672
[234] mmap (...)
[234]	mmap () -> 0x7FFFF5038000
[234] pread (...)
[234]	pread () -> 28
[234] access (...)
[234]	access () -> 0
[234] access (...)
[234]	access () -> 0
[234] open (...)
[234]	open () -> 5
[234] read (...)
[234]	read () -> 64
[234] pread (...)
[234]	pread () -> 616
[234] mmap (...)
[234]	mmap () -> 0x7FFFF5009000
[234] mprotect (...)
[234]	mprotect () -> 0
[234] mmap (...)
[234]	mmap () -> 0x7FFFF5009000
[234] mprotect (...)
[234]	mprotect () -> 0
[234] mprotect (...)
[234]	mprotect () -> 0
[234] mmap (...)
[234]	mmap () -> 0x7FFFF500A000
[234] mprotect (...)
[234]	mprotect () -> 0
[234] mprotect (...)
[234]	mprotect () -> 0
[234] mmap (...)
[234]	mmap () -> 0x7FFFF502C000
[234] mprotect (...)
[234]	mprotect () -> 0
[234] mprotect (...)
[234]	mprotect () -> 0
[234] mmap (...)
[234]	mmap () -> 0x7FFFF5035000
[234] close (...)
[234]	close () -> 0
[234] mprotect (...)
[234]	mprotect () -> 0
[234] mmap (...)
[234]	mmap () -> 0x7FFFF5038000
[234] mprotect (...)
[234]	mprotect () -> 0
[234] mprotect (...)
[234]	mprotect () -> 0
[234] mmap (...)
[234]	mmap () -> 0x7FFFF503A000
[234] mprotect (...)
[234]	mprotect () -> 0
[234] mprotect (...)
[234]	mprotect () -> 0
[234] mmap (...)
[234]	mmap () -> 0x7FFFF503B000
[234] mprotect (...)
[234]	mprotect () -> 0
[234] mprotect (...)
[234]	mprotect () -> 0
[234] mmap (...)
[234]	mmap () -> 0x7FFFF503C000
[234] close (...)
[234]	close () -> 0
[234] mmap (...)
[234]	mmap () -> 0x7FFFF5005000
[234] getentropy (...)
[234]	getentropy () -> 16
[234] sigprocmask (...)
[234]	sigprocmask () -> 0
[234] sigaltstack (...)
[234]	sigaltstack () -> 0
[234] sigprocmask (...)
[234]	sigprocmask () -> 0
[234] sigreturn (...)
[234]	sigreturn () -> 0
[234]	UH��� () -> 0x4

[234] mmap (...)
[234]	mmap () -> 0x7FFFF5004000
[234] close (...)
[234]	close () -> 0
[234] mach_msg_trap (...)
[234]	mach_msg_trap () -> KERN_SUCCESS
[234] mach_msg_trap (...)
[234]	mach_msg_trap () -> KERN_SUCCESS
[234] mach_msg_trap (...)
[234]	mach_msg_trap () -> KERN_SUCCESS
[234] issetugid (...)
[234]	issetugid () -> 0
[234] issetugid (...)
[234]	issetugid () -> 0
[234] geteuid (...)
[234]	geteuid () -> 1000
[234] getrlimit (...)
[234]	getrlimit () -> 0
[234] open_nocancel (...)
[234]	open_nocancel () -> 4
[234] fstat64 (...)
[234]	fstat64 () -> 0
[234] fstat64 (...)
[234]	fstat64 () -> 0
[234] read_nocancel (...)
[234]	read_nocancel () -> 2849
[234] close_nocancel (...)
[234]	close_nocancel () -> 0
[234] issetugid (...)
[234]	issetugid () -> 0
[234] open (...)
[234]	open () -> 4
[234] open (...)
[234]	open () -> ENOENT
[234] close (...)
[234]	close () -> 0
[234] mach_timebase_info_trap (...)
[234]	mach_timebase_info_trap () -> KERN_SUCCESS
[234] issetugid (...)
[234]	issetugid () -> 0
[234] workq_kernreturn (...)
[234]	workq_kernreturn () -> 0
[234] workq_open (...)
[234]	workq_open () -> 0
[234] _kernelrpc_mach_vm_map_trap (...)
[234] task_self_trap ()
[234]	task_self_trap () -> port right 259
[234] mmap (...)
[234]	mmap () -> 0x7FFFF314A000
[234] munmap (...)
[234]	munmap () -> 0
[234] mmap (...)
[234]	mmap () -> 0x7FFFF2F4A000
[234] munmap (...)
[234]	munmap () -> 0
[234] munmap (...)
[234]	munmap () -> 0
[234]	mach -1 () -> 0x0
[234] guarded_kqueue_np (...)
[234] getrlimit (...)
[234]	getrlimit () -> 0
[234] mmap (...)
[234]	mmap () -> 0x7FFFF2800000
[234]	UH��� () -> 0x4

[234] kevent64 (...)
[234] thread_selfid (...)
[234]	thread_selfid () -> 234
[234]	UH��� () -> 0x0

[234] bsdthread_create (...)
[235] thread_self_trap ()
[235]	thread_self_trap () -> port right 2819
[234]	bsdthread_create () -> -6
[235] thread_selfid (...)
[234] kevent64 (...)
[235]	kevent64 () -> 235
[234] thread_selfid (...)
[234]	UH��� () -> 0xEA

[234] write (...)
[234]	write () -> 8
[234]	UH��� () -> 0x1

[235] __pthread_sigmask (...)
[235]	__pthread_sigmask () -> 0
[235] _kernelrpc_mach_vm_allocate_trap (...)
[235] task_self_trap ()
[235]	task_self_trap () -> port right 259
[235] task_self_trap ()
[235]	task_self_trap () -> port right 259
[234] gettid (...)
[235] mmap (...)
[234]	gettid () -> 0
[235]	mmap () -> 0x7FFFF4D84000
[235]	mach -1 () -> 0x0
[234] geteuid (...)
[235] workq_kernreturn (...)
[234]	geteuid () -> 1000
[234] stat64 (...)
[234]	stat64 () -> 0
[234] gethostuuid (...)
[236] thread_self_trap ()
[236]	thread_self_trap () -> port right 3075
[235]	workq_kernreturn () -> 0
[236] thread_selfid (...)
[236]	UH��� () -> 0xEC

[234] kevent64 (...)
[234] thread_selfid (...)
[234]	thread_selfid () -> 234
[236] kevent64 (...)
[236] thread_selfid (...)
[234]	UH��� () -> 0xFFFFFFFFFFFFFFFF

[236]	thread_selfid () -> 236
[236]	UH��� () -> 0x1

[236] _kernelrpc_mach_vm_allocate_trap (...)
[236] task_self_trap ()
[235] gettimeofday (...)
[236]	task_self_trap () -> port right 259
[235]	gettimeofday () -> 0
[236] task_self_trap ()
[235] kevent64 (...)
[236]	task_self_trap () -> port right 259
[236] mmap (...)
[235] thread_selfid (...)
[235]	thread_selfid () -> 235
[236]	mmap () -> 0x7FFFF4FC5000
[236]	mach -1 () -> 0x0
[235] write (...)
[236] socket (...)
[235]	write () -> 8
[235]	UH��� () -> 0x1

[236]	socket () -> 11
[235] kevent64 (...)
[236] fcntl (...)
[235] thread_selfid (...)
[235]	thread_selfid () -> 235
[236]	fcntl () -> 0
[236] connect (...)
[235] gettimeofday (...)
[236]	connect () -> ECONNREFUSED
[235]	gettimeofday () -> 0
[236] close (...)
[235] thread_selfid (...)
[236] kevent64 (...)
[235]	thread_selfid () -> 235
[235] read (...)
[236] psynch_mutexwait (...)
[235]	read () -> 8
[235] psynch_mutexdrop (...)
[236]	psynch_mutexwait () -> 2051
[235]	psynch_mutexdrop () -> 0
[236] thread_selfid (...)
[235] psynch_mutexwait (...)
[236]	thread_selfid () -> 236
[236] psynch_mutexdrop (...)
[236]	psynch_mutexdrop () -> 0
[236]	UH��� () -> 0xFFFFFFFFFFFFFFFF

[235]	psynch_mutexwait () -> 2307
[235] thread_selfid (...)
[235]	thread_selfid () -> 235
[235]	UH��� () -> 0x1

[235] kevent64 (...)
[236]	UH��� () -> 0x0

[236] _kernelrpc_mach_vm_deallocate_trap (...)
[236] task_self_trap ()
[236]	task_self_trap () -> port right 259
[236] munmap (...)
[236]	munmap () -> 0
[236]	mach -1 () -> 0x0
[236] workq_kernreturn (...)
[234]	UH��� () -> 0x0

[234] gettid (...)
[234]	gettid () -> 0
[234] geteuid (...)
[234]	geteuid () -> 1000
[234] stat64 (...)
[234]	stat64 () -> 0
[234] issetugid (...)
[234]	issetugid () -> 0
[234] issetugid (...)
[234]	issetugid () -> 0
[234] open_nocancel (...)
[234]	open_nocancel () -> 11
[234] sysctl (...)
[234]	sysctl () -> 0
[234] fstatfs64 (...)
[234] kevent64 (...)
[234] thread_selfid (...)
[234]	thread_selfid () -> 234
[234]	UH��� () -> 0xFFFFFFFFFFFFFFFF

[234]	UH��� () -> 0x0

[234] getdirentries64 (...)
[234]	getdirentries64 () -> 92
[234] getdirentries64 (...)
[234]	getdirentries64 () -> 0
[234] close_nocancel (...)
[234] kevent64 (...)
[234] thread_selfid (...)
[234]	thread_selfid () -> 234
[234]	UH��� () -> 0xFFFFFFFFFFFFFFFF

[234]	UH��� () -> 0x0

[234] open_nocancel (...)
[234]	open_nocancel () -> 11
[234] fstatfs64 (...)
[234] kevent64 (...)
[234] thread_selfid (...)
[234]	thread_selfid () -> 234
[234]	UH��� () -> 0xFFFFFFFFFFFFFFFF

[234]	UH��� () -> 0x0

[234] getdirentries64 (...)
[234]	getdirentries64 () -> 124
[234] getdirentries64 (...)
[234]	getdirentries64 () -> 0
[234] close_nocancel (...)
[234] kevent64 (...)
[234] thread_selfid (...)
[234]	thread_selfid () -> 234
[234]	UH��� () -> 0xFFFFFFFFFFFFFFFF

[234]	UH��� () -> 0x0

[234] open (...)
[234]	open () -> 11
[234] fstat64 (...)
[234]	fstat64 () -> 0
[234] read (...)
[234]	read () -> 1055
[234] close (...)
[234] kevent64 (...)
[234] thread_selfid (...)
[234]	thread_selfid () -> 234
[234]	UH��� () -> 0xFFFFFFFFFFFFFFFF

[234]	UH��� () -> 0x0

[234] stat64 (...)
[234]	stat64 () -> 0
[234] open (...)
[234]	open () -> 11
[234] read (...)
[234]	read () -> 512
[234] close (...)
[234] kevent64 (...)
[234] thread_selfid (...)
[234]	thread_selfid () -> 234
[234]	UH��� () -> 0xFFFFFFFFFFFFFFFF

[234]	UH��� () -> 0x0

[234] gettid (...)
[234]	gettid () -> 0
[234] geteuid (...)
[234]	geteuid () -> 1000
[234] stat64 (...)
[234]	stat64 () -> 0
[234] gettid (...)
[234]	gettid () -> 0
[234] geteuid (...)
[234]	geteuid () -> 1000
[234] stat64 (...)
[234]	stat64 () -> 0
[234] issetugid (...)
[234]	issetugid () -> 0
[234] issetugid (...)
[234]	issetugid () -> 0
[234] gettid (...)
[234]	gettid () -> 0
[234] geteuid (...)
[234]	geteuid () -> 1000
[234] stat64 (...)
[234]	stat64 () -> 0
[234] gettid (...)
[234]	gettid () -> 0
[234] geteuid (...)
[234]	geteuid () -> 1000
[234] stat64 (...)
[234]	stat64 () -> 0
[234] issetugid (...)
[234]	issetugid () -> 0
[234] issetugid (...)
[234]	issetugid () -> 0
[234] gettid (...)
[234]	gettid () -> 0
[234] geteuid (...)
[234]	geteuid () -> 1000
[234] stat64 (...)
[234]	stat64 () -> 0
[234] gettid (...)
[234]	gettid () -> 0
[234] geteuid (...)
[234]	geteuid () -> 1000
[234] stat64 (...)
[234]	stat64 () -> 0
[234] issetugid (...)
[234]	issetugid () -> 0
[234] issetugid (...)
[234]	issetugid () -> 0
[234] open (...)
[234]	open () -> ENOENT
[234] gettimeofday (...)
[234]	gettimeofday () -> 0
[234] open (...)
[234]	open () -> ENOENT
[234] gettimeofday (...)
[234]	gettimeofday () -> 0
[234] open (...)
[234]	open () -> ENOENT
[234] gettimeofday (...)
[234]	gettimeofday () -> 0
[234] open (...)
[234]	open () -> ENOENT
[234] gettimeofday (...)
[234]	gettimeofday () -> 0
[234] open (...)
[234]	open () -> ENOENT
[234] gettimeofday (...)
[234]	gettimeofday () -> 0
[234] open (...)
[234]	open () -> ENOENT
[234] gettimeofday (...)
[234]	gettimeofday () -> 0
[234] open (...)
[234]	open () -> ENOENT
[234] gettimeofday (...)
[234]	gettimeofday () -> 0
[234] open (...)
[234]	open () -> ENOENT
[234] gettimeofday (...)
[234]	gettimeofday () -> 0
[234] gettid (...)
[234]	gettid () -> 0
[234] geteuid (...)
[234]	geteuid () -> 1000
[234] stat64 (...)
[234]	stat64 () -> 0
[234] workq_kernreturn (...)
[234]	workq_kernreturn () -> 0
[236] thread_self_trap ()
[236]	thread_self_trap () -> port right 3075
[234] gettid (...)
[234]	gettid () -> 0
[234] geteuid (...)
[234]	geteuid () -> 1000
[234] stat64 (...)
[234]	stat64 () -> 0
[234] psynch_rw_unlock (...)
[236] psynch_rw_wrlock (...)
[234]	psynch_rw_unlock () -> 99589
[234] psynch_rw_rdlock (...)
[236]	psynch_rw_wrlock () -> 259
Segmentation fault: 11 (core dumped)
```
[core.txt.xz.zip](https://github.com/darlinghq/darling/files/4023859/core.txt.xz.zip)
```
Darling [~/Documents]$ lldb
dyld: Library not loaded: /usr/lib/libform.5.4.dylib
  Referenced from: /Library/Developer/CommandLineTools/Library/PrivateFrameworks/LLDB.framework/Versions/A/LLDB
  Reason: image not found
Abort trap: 6 (core dumped)
```
This also happens if you call ```swift``` with no arguments.

I found this while trying to debug #600, and noticed no core dumps seem to be generated, even after running ```ulimit -c unlimited```.
I am using Ubuntu 9.10 with the latest commit of Darling.
When I try to run 'Darling shell', I get the following results:
```
Bootstrapping the container with launchd...
Cannot open mnt namespace file: No such file or directory
```
I've uploaded a copy of strace on the darling shell command below.
Could you possibly take a look when you get a chance?

-This is not related to the SELinux issue as selinux is not installed or enabled by default on Ubuntu. It seems to be an issue with a dylib in Darling’s readonly container I believe. I’m not sure how to interpret the trace log. I’ve reopened the Issue by creating new issue request. Sorry about that.


[strace_output.txt](https://github.com/darlinghq/darling/files/4022293/strace_output.txt)
I noticed that Darling fails to execute my program when I use `[[... alloc] init]`. It seems to happen with any Objective C class I use. I used macOS Catalina to compile this software.

```
$ darling shell
Darling [/Volumes/SystemRoot/home/user/Documents]$ ./alloc_test 
dyld: lazy symbol binding failed: Symbol not found: _objc_alloc_init
  Referenced from: /Volumes/SystemRoot/home/user/Documents/alloc_test
  Expected in: /usr/lib/libobjc.A.dylib

dyld: Symbol not found: _objc_alloc_init
  Referenced from: /Volumes/SystemRoot/home/user/Documents/alloc_test
  Expected in: /usr/lib/libobjc.A.dylib

Abort trap: 6 (core dumped)
```