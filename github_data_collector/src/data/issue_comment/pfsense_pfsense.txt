- [ ] Redmine Issue: https://redmine.pfsense.org/issues/9405
- [ ] Ready for review

IPsec IPv6 dynamic FQDN Remote Gateways support by adding IPv6 FQDN resolution ability to resolve_retry() 
- [ ] Redmine Issue: https://redmine.pfsense.org/issues/8555
- [ ] Ready for review

This PR changes filter_delete_states_for_down_gateways() by adding failover group checking -
in this case if, for example Tier 1 is up but Tier 2 is down, it doesn't kill all states

It kill states only if all tiers in failover group are equal (loadbalance configuration)
or if failed Tier == Tier with lower value (high priority)

This avoid state killing in case when primary (Tier 1) link works fine, but secondary (Tier 2) link is flapping
This pull request implement synchronization for connected users when enabling High Availability, and fix multiple bugs related to HA with captive portal in general.


- [x] Main redmine issue : https://redmine.pfsense.org/issues/97 (Captive Portal should sync its database to other members of clusters)
- [x] Also fix : 
  - https://redmine.pfsense.org/issues/8807 (HA sync : files ```voucher_{$cpzone}.cfg``` and ```voucher_{$cpzone}.public``` are not created on secondary node)
  - https://redmine.pfsense.org/issues/8809 (HA sync : changing a voucher roll on master does not reset active tickets on secondary)
  - https://redmine.pfsense.org/issues/9303 (HA sync : disabling captive portal HA sync does remove all zones on secondary)
- [ ] Ready for review
- [x] Forum thread : https://forum.netgate.com/topic/136525/usertransfer-in-ha-modus/3 . **I am looking for testers, even if you are not using High Availability**. Please refer to the forum for more info
- [ ] Redmine Issue: https://redmine.pfsense.org/issues/9726
- [ ] Ready for review

strip ipsec hash algo from swanctl.conf Phase 2 proposals
- [ ] Redmine Issue: https://redmine.pfsense.org/issues/6868
- [ ] Ready for review

If I adjust the MTU of an assigned interface, only link route for IPv6 on the interface has its MTU adjusted, not others.

This PR set correct MTU for static and default IPv6 routes of interface

- [ ] Redmine Issue: https://redmine.pfsense.org/issues/9970
- [ ] Ready for review
## Description:

This pull request resolves issues with the widget refresh system:
- The refresh system uses flawed logic, see below for an in-depth explanation.
- Widgets, despite using ajax callbacks, are not truly async - one widget can lock another if it takes too long to run.
- Session timeouts result in the dashboard continuing to attempt ajax callbacks, despite access being blocked due to the aforementioned session timeout.

**History:** This pull request is a simplified rework of #3879 (from my old Github account), but does not not default to a 1-second refresh interval for the Firewall Logs and Gateways widgets; in fact, it doesn't directly modify those widgets at all.

## Changes:

### /usr/local/www/index.php
- Widget locking:
    - Removed global mutex, preventing one long-running widget from hanging up others and ensuring true asynchronous operation.
    - Added per-widget lock, allowing a widget to execute only if it's not already executing.

- Widget refreshing:
  - Renamed function `executewidget()` to `executewidgets()` for the sake of grammar.
  - Changed execution to a `setInterval()` instead of a self-calling `setTimeout()`, as it is cleaner this way; allows for `clearInterval()` upon session timeout, if desired.
  - Fixed refresh logic, as it is logically flawed in its current implementation:
    - The function `executewidget()` is called every second.
    - `freq` is defined as the desired number of seconds between each execution of the `ajaxidx`th widget.
    - If `ajaxcntr % freq` is equal to 0, the `ajaxidx`th widget will run.
    - At the end of `executewidget()`, `ajaxidx` is increased.
      - If `ajaxidx` is greater than the number of widgets, it is reset to 0 and `ajaxcntr` is also increased. If `ajaxcntr` is greater than 4096, is it reset to 0.  
  - The end result is that each call of `executewidget()` takes `n` seconds to run, where `n` is the number of widgets on the dashboard, and each widget will only execute every `t` times `executewidget()` is run, resulting in an *actual* update time of `n * t`.
  - Example, for further illustration:
    - Suppose that there are **8 widgets** present on the pfSense dashboard, and the Firewall Logs widget is configured to have an "Update interval" of **10 seconds**.
    - A single call of `executewidget()` takes **8 seconds** (1 second per widget * 8 widgets total), and Firewall Logs only refreshes every **10 times** `updatewidget()` is called.
    - Thus Firewall Logs only refreshes every 8 * 10 seconds, or **80 seconds**. This is a bug, and incorrect behavior.
    - This has been fixed through the use of a single `for` loop, each time `executewidget()` is called, that "passes over" all widgets and decides on a per-widget basis if they should be executed (based on `ajaxcntr`).
  - In short, this change allows all widgets to operate independently of each other.

- Session timeouts:
  - Don't try to execute ajax callbacks if session timed out
  - Removed `ajaxtimeout` variable as it was not referenced

## Checklist:
- [X] Redmine Issue: https://redmine.pfsense.org/issues/9917
- [X] Ready for review

- [x] Redmine Issue: https://redmine.pfsense.org/issues/9909
- [x] Ready for review
- [ ] Redmine Issue: https://redmine.pfsense.org/issues/9309
- [ ] Ready for review

default (current) behavior if checkbox disabled
pfSense <-> Cisco IOS tunnel tested