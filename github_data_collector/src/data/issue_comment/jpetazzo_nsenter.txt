1, commands

```
nsenter --target 37155 --mount -- mount -o /var/lib/lxc/lxcfs/proc/meminfo /proc/meminfo
```

If i use docker image of centos:7, it works. But if i use docker ubuntu:16.04, it occurs error 
```
failed to execute mount: No such file or directory
```

2, other information

```
docker version: 17.03.2-ce
kernel: 4.4.111-1.el7.elrepo.x86_64
```
`LC_ALL=cs_CZ.UTF-8 ./nsenter --target 8676 --mount --uts --ipc --net --pid`
nsenter: loadlocale.c:129: _nl_intern_locale_data: Assertion `cnt < (sizeof (_nl_value_type_LC_TIME) / sizeof (_nl_value_type_LC_TIME[0]))' failed.
Neúspěšně ukončen (SIGABRT)

`LC_ALL=C ./nsenter --target 8676 --mount --uts --ipc --net --pid`
ok


this is the entire log when I tried to execute the cmd docker run --rm -v /usr/local/bin:/target jpetazzo/nsenter

Unable to find image 'jpetazzo/nsenter:latest' locally
latest: Pulling from jpetazzo/nsenter
5c90d4a2d1a8: Extracting [==================================================>]  51.35MB/51.35MB
c6c4c486dd77: Download complete 
0ed6ac9f06ed: Download complete 
404416bec766: Download complete 
4bf954ba4ae2: Download complete 
23f698ff1fd0: Download complete 
b39fba43fbdb: Download complete 
7889943d47f6: Download complete 
446df4bc8efe: Download complete 
6074415f722e: Download complete 
72024cea4c47: Download complete 
6c4b4f4219d3: Download complete 
93da7ec1688f: Download complete 
0c4337c5a938: Download complete 
docker: failed to register layer: devmapper: Error activating devmapper device for '05e2cc172ff3381082a9dababfb86ffe1e062e78d7b7badb27bb9e8b45c60cd4': devicemapper: Can't set cookie dm_task_set_cookie failed.
See 'docker run --help'.


You can pass an environment variable with spaces into a container by using quotes, and bash can deal with that correctly inside the container:

```
michiel@laptop:~$ docker run -it -e A="1 2 3" debian:jessie /bin/bash
root@11f0509b89b1:/# echo $A
1 2 3
root@11f0509b89b1:/# 
```

But now try to docker-enter it from a different terminal window. That will fail:

```
michiel@laptop:~$ docker-enter 11f0509b89b1
env: 2: No such file or directory
```

It's obvious that we can't enter a stopped container and docker inspect will return pid as 0. It would be nice to have a friendly warning instead of display the error like below.

```
cat: /proc/0/environ: No such file or directory
nsenter: neither filename nor target pid supplied for ns/ipc
```

For newer versions of docker and for when the container doesn't have `su` in the local `PATH`

regarding the [doc](http://man7.org/linux/man-pages/man1/nsenter.1.html) i thought this would be cool ... and it actually makes sens for me. 

You probably want to update your README.m2 file to tell users to check if they already have nsentry before using this.

There are several problems.   First off Fedora already includes nsentry by default.   It is part of the linux-utils package.  I was told the same is true for RHEL 7, and CentOS 7, but I haven't verified that. The same is probably true of many other distributions, so long as you are using the most recent versions.

The next problem is Fedora, RHEL 7, and CentOS 7 use SELinux settings so you can only mount folder with a special SELinux tag set via chattr as volumes.   As such your container won't work for mounting / as a volume.   Certainly the users could do a chattr on / to override this, but if they do so they are completely overriding a critical part of the security settings to overwrite something they already have installed.

Yet another problem is with your docker-enter script.   Quite frankly it doesn't work.   Well not everywhere.   You see it assumes flags on the env command that are not part of the POSIX standard.   So if for example I try using it on a busybox system or any other OS not using the GNU variant of env, it won't work.    I have an extremely simplified version of the script I use in my Fedora 20 system:
# !/bin/bash

p=$(docker inspect --format '{{.State.Pid}}' "$1")
shift
nsenter --target $p --mount --uts --ipc --net --pid -- "$@"

I'm not sure what probably you were trying to solve with your env command, but admittedly this variation does not solve that problem.   For Fedora 20, RHEL 7, CentOS, ... I just copy the script as docker-enter in my /usr/local/bin folder and I am good to go.

This version does however work on all the docker images I use.   One can also write this as an alias, but since normally it gets called with an sudo in front, it is more restrictive to use as an alias than as a script.

Bill

Changed the Syntax a bit and Added docker-run Command simply usage:

docker-run containerid cmd
