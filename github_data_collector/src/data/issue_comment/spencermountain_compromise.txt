* [Issue #654)Capture `[*]`
* [Issue #654)Capture `[.+]`

Felt a little too easy...not sure I trust it!!
the `.export()` -> `.load()` pathway has a major issue, since v12. 

any sentence with a contraction (`I'm`, `they're`, etc) will be mis-tagged once it's loaded with `.load()`.

It is not recommended to use `.export()` until `v13` is released (ETA next week).

If you are not using `.export()`, you do not have a problem.

Apologies to any early-adopters of `.export()`. Existing documents will need to be re-parsed. ðŸ˜“

I'm happy to help with any mitigations of this issue.
Hi there... I remember there was once an issue about gerunds not being tagged as nouns - #314 . Now, they're sometimes falsely tagged as nouns.

![Screenshot (177)](https://user-images.githubusercontent.com/18144503/71783128-3da02b00-3008-11ea-9927-887457207e2c.png)

As far as I have noticed, if gerunds are followed by either a Copula or modal, they're tagged as nouns. There might be other patterns too. I'll add them later if I find any.
Quick one since we're all ready for the holidays!
Happy to go into more detail when people are free.

Capture groups seem to capture everything BEFORE your target, if using `.+` or `*`. Using OR `(#Noun|#Verb)+` works fine.

Quick console example:

```
> nlp('John always ravenously eats his glue').match('john [.+] eats').tag('test').debug()
=====
  -----
  ï½œ 'John'     - MaleName, FirstName, Person, ProperNoun, Singular, Noun, TitleCase, Test
  ï½œ 'always'   - Adverb, Test
  ï½œ 'ravenously'  - Adverb, Test
  ï½œ 'eats'     - PresentTense, Verb, Test

> nlp('John always ravenously eats his glue').match('john [*] eats').tag('test').debug()
=====
  -----
  ï½œ 'John'     - MaleName, FirstName, Person, ProperNoun, Singular, Noun, TitleCase, Test
  ï½œ 'always'   - Adverb, Test
  ï½œ 'ravenously'  - Adverb, Test
  ï½œ 'eats'     - PresentTense, Verb, Test

> nlp('John always ravenously eats his glue').match('john [#Adverb+] eats').tag('test').debug()
=====
  -----
  ï½œ 'always'   - Adverb, Test
  ï½œ 'ravenously'  - Adverb, Test

> nlp('John always ravenously eats his glue').match('john [(#Noun|#Adverb)+] eats').tag('test').debug()
=====
  -----
  ï½œ 'always'   - Adverb, Test
  ï½œ 'ravenously'  - Adverb, Test
```

Last two examples are correct and expected behaviour of the first 2.
Names don't seem to be recognized as ``ProperNoun`` if they are the first word in the entire sample text. However, the same names are properly tagged as ``ProperNoun`` when in any other position in text - even if they open a sentence, if it's not a first sentence in text.

Example:
```
names = nlp('Viktor ate a sanchwich. I looked at Viktor carefully. Viktor seemed uncomfortable.');
names.debug();
```

![image](https://user-images.githubusercontent.com/12732348/70955433-2a391a00-2071-11ea-9a5d-e0a42881d38a.png)

Hi, saw this in the readme:

> dependency parsing: Proper sentence transformation requires understanding the syntax tree of a sentence, which we don't currently do. We should! Help wanted with this.

I looked for about 10 minutes for an issue related to this and didn't find one. So please excuse me if I missed it and there is a better place to be placing this.

I was curious if anything has been done in with this front, and if not, my thoughts were that this topic can be the beginning of a discussion related to this.
After the final **compromise.min.js** update (v12.1.0) the function nlp.plugin() doesn't work.

E.g.: 
```
let plugin = {	
		tags:{
			Noun:
			{
			isA: 'Entity'
			},
			Verb:
			{
			isA: 'Action'
			},
		}	
	}
	nlp.plugin(plugin);
```
Such simple code - and it doesn't seem to work so far. Had to roll back to 11.14.3 at least to not experience any difficulties.

Any idea?

Btw, you had an awesome project description a month ago. What happened to it?
nlp("I love apples. Yes I do.").match("apples").replaceWith("peaches").all().out("text") returns:

"I love peaches.Yes I do."

It would ideally output:

"I love peaches. Yes I do."

compomise version: 11.14.3
A semicolon ends a complete sentence and should be treated like a period when tagging.

Here's my surprising finding, replicated on Observable:
![Screen Shot 2019-09-09 at 2 36 03 PM](https://user-images.githubusercontent.com/19829843/64535504-58d78400-d30f-11e9-9029-5f939c80565c.png)
The match above is surprising because "mine" starts a new syntactically complete sentence. It is not syntactically involved with the word "his". I expected there to be no matches.

If I change the semicolon to a period, the behavior is exactly as I expect. 
![Screen Shot 2019-09-09 at 2 37 57 PM](https://user-images.githubusercontent.com/19829843/64535600-7a387000-d30f-11e9-8865-4ac6f19b396f.png)

I'm trying to use a match pattern where the verb "is" is incorrectly matched as a noun.

Screenshot from Observable:
![Screen Shot 2019-09-09 at 2 29 23 PM](https://user-images.githubusercontent.com/19829843/64534900-3d1fae00-d30e-11e9-99c1-89dc611f4332.png)

This is related to my other issue, #599.