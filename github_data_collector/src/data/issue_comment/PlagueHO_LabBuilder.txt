- PowerShell 5.1
- PowerShell Console as Administrator
- Windows 10 b18362
- LabBuilder v1.0.4.84

When specyfing dynamicmemoryenabled="N" in the labbuilder config xml the setting isn't applied.
•PowerShell 5.1
•PowerShell Console as Administrator
•Windows 10 b18362
•LabBuilder v1.0.4.84

As LabBuilder goes ahead with duplicates, it will stop later on with the error:
```
Set-VMSecurity : The Operation failed.
'SRV SRV' The SecuritySettingData property cannot be modified because the virtual machine is running.
At C:\Program Files\WindowsPowerShell\Modules\LabBuilder\1.0.4.84\LabBuilder.psm1:8700 char:21
+                     Set-VMSecurity `
+                     ~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (:) [Set-VMSecurity], VirtualizationException
    + FullyQualifiedErrorId : InvalidState,Microsoft.HyperV.PowerShell.Commands.SetVMSecurity
```
Please consider implementing VM CheckPoint handling.
Only checkpoint prefixed with lab-xxx. should be handled (except if trees are involved). The xxx is a number linking the different checkpoint together as a lab checkpoint.

Add-LabCheckPoint - Creates a new Checkpoint from current state, supporting the switch -offline witch will shutdown the lab before crearing the CheckPoint
Revert-LabCheckPoint - Applies the latest CheckPoint asking if current status should be saved first

Get-LabCheckPoint - Gets all available CheckPoints
Apply-LabCheckPoint - Changes the lab to use a specifed CheckPoint
Delete-LabCheckPoint - Deletes the specified CheckPoint
Delete-LabCheckPointTree - Deletes all CheckPoints from the current selection

It might be better using the approved PoSH verbs instead.
•PowerShell 5.1
•PowerShell Console as Administrator
•Windows 10 b18362
•LabBuilder v1.0.4.84

If Install-Lab is run before Hyper-V has been setup, it will fail.

A suggestion is to check for Hyper-V and ask to set it up if it's missing.
LabBuilder v1.0.4.84

Why not just ask to create the folders?
(And then fail as isopath folder is empty).

It's a nice thing to do :)
LabBuilder v1.0.4.84

When setting up _standalone_ machines with the built in admin account locked down (i.e. Windows Server 2012 R2), you are left with a setup that can't be used.

Please consider adding a secondary local admin account in the unattended part of the setup by supporting one or more instance of a property (i.e. `addlocaladmin="name"`) in the xml scheme for lab builder using the same password as builtin admin.
Alternatively support adding localusers 1 -- 10, i.e. 
```
<template user1="name"
          user1group="administrators"
          user1password="password" />
```
This should add the `<LocalAccounts>` tag to the unattend.xml file like
```
<UserAccount>
  <LocalAccounts>
    <LocalAccount wcm:action="add">
      <Password>
        <Value>password</Value>
        <PlainText>true</PlainText>
      </Password>
      <Group>administrators</Group>
      <DisplayName>name</DisplayName>
      <Name>name</Name>
    </LocalAccount>
  </LocalAccounts>
</UserAccounts>
```
-  PowerShell 5.1
- PowerShell Console as Administrator
- Windows 10 b18362
- LabBuilder v1.0.4.84

When running Install-Lab the first time with a new lab, it might stop with 
`cmdlet Get-VMNetworkAdapter at the command pipeline position 1`
`Supply values for the following parameters:`
`MangementOS:`

Retrying the Lab-Install command will succeed the second time around.

![error](https://user-images.githubusercontent.com/43003164/64208280-68ca1080-ce96-11e9-8cd0-ac253b5cd7fa.png)
PSVERSION: 5.1
PSHost: Console
OS: Windows Server 2019
Version: 1.0.3.70

Getting the following error whilst attempting to build a Sample Lab. Ive configured the folders as required and it seems to be detecting the ISO correctly, but having issues extracting the WIM File. 

```
INFO   : Looking for the requested Windows image in the WIM file
ERROR  : Requested windows Image was not found on the WIM file!
INFO   : Log folder is C:\Users\USERNAME\AppData\Local\Temp\Convert-WindowsImage\d82c77b9-fc06-42ff-86de-7d1fad6ce7c6
INFO   : Done.
```
Some potential enhancements for the ROOTCA script. This is more for when a resource is created for the advanced cert config and thoughts to consider when putting it together.

```
            CRLPublicationURLs        = '65:C:\Windows\system32\CertSrv\CertEnroll\%3%8%9.crl\n79:ldap:///CN=%7%8,CN=%2,CN=CDP,CN=Public Key Services,CN=Services,%6%10\n6:http://pki.contoso.com/CertEnroll/%3%8%9.crl'
            CACertPublicationURLs     = '1:C:\Windows\system32\CertSrv\CertEnroll\%1_%3%4.crt\n2:ldap:///CN=%7,CN=AIA,CN=Public Key Services,CN=Services,%6%11\n2:http://pki.contoso.com/CertEnroll/%1_%3%4.crt'
```

Would be nice to break that out into an array instead.

Also, `%3`, may want to make that a little cleaner as well. Something without spaces maybe. For example, instead of 

`CACommonName              = 'My Root Certificate Authority'` which would make 
`C:\Windows\system32\CertSrv\CertEnroll\My Root Certificate Authority%8%9.crl`, it might be good to do something like

`C:\Windows\system32\CertSrv\CertEnroll\My_Root_Certificate_Authority%8%9.crl`

Something to think about.
Recent Version of Hyper-V Create VMs with Automatic Checkpoints Enabled. This is generally not useful for Labs. Add a switch to allow the lab to be created with Checkpoints Enabled if required.