When spinning up a webapp with rollup and importing `lax.js` (in my case: I'm building a [sapper](http://sapper.svelte.dev) app), it complains about laxxx using the eval statement, which supposedly is a security risk and may cause issues with minification. It's only a mild warning, but I'd be happy if you guys could switch out that eval with something else sometime :wink: Thanks.
Hi! In the readme file, I read the following:

- [ ] Implement a tween for scroll wheels to remove reliance on smoothscroll
288

If I understand you correctly, you need to avoid the effect of intermittent animation when using regular mouse-wheels (not Apple-magic-mouse or touchpad).

I think I can help do this in a demo example, and then we can add this to the api as an option



Add easings support for library as option.
Example:
'0 0, vh 1 | speed=2 easing="easeInQuad"'
Using `window.innerWidth` as your basis for `vw` makes sense, but this includes the scrollbar width, which can throw off centering calculations.

To pull an element to center, it may make sense to do something like translating it to `(vw*0.5-elw*0.5)` which won't be exactly centered to any other centered content on the page that doesn't include scrollbar width.

Replacing `window.innerWidth` with `document.body.clientWidth`here: https://github.com/alexfoxy/laxxx/blob/master/src/lax.js#L256 takes care of that.

It may also be useful to replace it for your breakpoint calculation: https://github.com/alexfoxy/laxxx/blob/master/src/lax.js#L328 but I haven't used that and so didn't test....

(Also, I was stuck for a while expecting `vw` to work like it does in CSS, so my `50vw` was netting me crazy large numbers when I needed `(vw*0.5)`. The information is in the readme, but it might be worth a line calling out that it's not used the same?)


First of all, this is by far the best scroll effects library out there! I was looking for a lightweight alternative to the ScrollMagic + GreenSock stack and this is finally something really useful! Great job!

I was just wondering if there are any plans to add support for easings? Im using lax.js to add some decent scroll effects to our website. As some of the animations stop right inside the viewport, it would be nice if we could add some easing effects to have them slow down before the animation ends.