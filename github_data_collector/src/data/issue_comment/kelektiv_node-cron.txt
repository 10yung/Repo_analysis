Resolves #449. A range with a step and no upper limit provided should default to the full range. E.g. `"1/2 * * * * *"` should be the same as `"1-59/2 * * * * *"`.
Hi , I have the following cron object 

```
   const job = new CronJob({
            cronTime: `0 */1 * * * *`,
            onTick() {
                logger.debug('log');
     
            },
            start: true,
            runOnInit: true
        });

 job.start()
```

and I see that its no matter what I set in `runOnInit` and it always executes in  `XX:XX:00`



btw I am using NestJs but define the cron  object from your package


I am building a scheduling application, that schedules tasks as per the user's need and unschedules them as well. I wanted to save the created node-cron to firebase (cloud firestore) so that I can kill the cron job later if the user desires to. I tried turning the cron job object into JSON ( by `JSON.stringify()` ) to do the same. For that, I had to set the `context` property to `null` as the object has cyclic references. This got stored okay, but the information from the entire cron job object is lost. When I turn it back to JS object ( by `JSON.parse()` ), I cannot access the stop method.

Can anyone help me with the same?
Hi, I am trying to run cronjob at 15.01 (3 pm) every day.
I am using it to send sms reminders.
In the begining it was working, but a few days after I did the cronjob I start receiving the reminder at 12 AM. Why?

I am using this code:

var sendConformationSmsJob = new CronJob({
   cronTime: '00 */1 */15 * * *',
    onTick: function () {
        console.log('Performing SendEmail check: ', new Date());
        findBooking();
    },
    //null,
    start: false,
    timeZone: 'Europe/Stockholm'
});

sendConformationSmsJob.start();

Can you please help me?
Hi,
I am trying to run the cron every two seconds but starting with the odd second.
`1/2 * * * * *` expression causes a job to run every minute instead.
The one and only workaround I found is to enumerate all values like `1,3,4,7,9,[...],55,57,59 * * * * *`

Example apps:
```js
const cron = require("cron");
const cronJob = new cron.CronJob("*/2 * * * * *", () => console.log(new Date().toISOString()));
cronJob.start();
// 2019-11-29T14:18:40.006Z
// 2019-11-29T14:18:42.003Z
// 2019-11-29T14:18:44.003Z
// 2019-11-29T14:18:46.003Z
```

```js
const cron = require("cron");
const cronJob = new cron.CronJob("1/2 * * * * *", () => console.log(new Date().toISOString()));
cronJob.start();
// 2019-11-29T14:19:00.015Z
// 2019-11-29T14:20:00.051Z
```
Sorry I'm pretty new to work with cron, I set up 2 cron job like below, the first job run at minute 16 but when i change time to 17:59:55, the first cron will finnish and stop, the second cron doesn't run at all  

                        let scheduleTime = '* 16-17 * * * *';
                        console.log("Duong: insertDatabase -> Cron 1")
                        new CronJob({
                         cronTime: scheduleTime,
                            onTick: function() {
                                // console.log(c++);
                                console.log(moment().format('HH:mm:ss'));
                            },
                            start: true,
                            timeZone: 'UTC'
                        });

                        console.log("Duong: insertDatabase -> End Cron 1")

                        console.log("Duong: insertDatabase -> Cron 2")

                        scheduleTime = '* 18-19 * * * *';

                        new CronJob({
                            cronTime: scheduleTime,
                            onTick: function() {
                                // console.log(c++);
                                console.log('New cron' , moment().format('HH:mm:ss'));
                            },
                            start: true,
                            timeZone: 'UTC'
                        });
                            
                        console.log("Duong: insertDatabase -> End Cron 2")

If you have the time to look into this and point me to the right direction, I will be greatly appreciated. The problem just happen when i change the time on the server (my machine) (both window and linux). if i don't change the server time, it's running just fine
Hello,

I noticed `utcOffset` isn't in the constructor arguments in the docs, making it confusing for someone who wants to use it and wants to know what position it goes in. 

I ended up getting the position from the typescript definitions.

So `constructor(cronTime, onTick, onComplete, start, timezone, context, runOnInit, unrefTimeout)`
should probably change to 
`constructor(cronTime, onTick, onComplete, start, timezone, context, runOnInit, utcOffset, unrefTimeout)`.
The API documentation hasn't changed much since I threw it together with the original module. Clearer documentation has always been a source of irritation for users.
Does this package have any plan to support non-standard cron syntax?
Like, https://en.wikipedia.org/wiki/Cron#Non-standard_characters

I am using this package really well but I needed to use extended syntax for some reasons.
Now I extended the codes myself but it would be great if these syntaxes are supported natively.
