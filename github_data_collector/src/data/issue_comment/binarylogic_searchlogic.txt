I am using ruby2.2 with Rails 4

After installing the gem when I start my rails c, getting below error.

/home/arun/.rvm/gems/ruby-2.2.2@quadra/gems/bundler-1.13.6/lib/bundler/runtime.rb:94:in `rescue in block (2 levels) in require': There was an error while trying to load the gem 'searchlogic'.
Gem Load Error is: undefined method `merge_joins' for class `Class'
Backtrace for gem load error is:
/home/arun/.rvm/gems/ruby-2.2.2@quadra/gems/activesupport-4.2.5/lib/active_support/core_ext/module/aliasing.rb:32:in `alias_method'
/home/arun/.rvm/gems/ruby-2.2.2@quadra/gems/activesupport-4.2.5/lib/active_support/core_ext/module/aliasing.rb:32:in `alias_method_chain'
/home/arun/.rvm/gems/ruby-2.2.2@quadra/gems/searchlogic-2.4.28/lib/searchlogic/active_record/consistency.rb:8:in `block in included'
/home/arun/.rvm/gems/ruby-2.2.2@quadra/gems/searchlogic-2.4.28/lib/searchlogic/active_record/consistency.rb:7:in `class_eval'
/home/arun/.rvm/gems/ruby-2.2.2@quadra/gems/searchlogic-2.4.28/lib/searchlogic/active_record/consistency.rb:7:in `included'
/home/arun/.rvm/gems/ruby-2.2.2@quadra/gems/searchlogic-2.4.28/lib/searchlogic.rb:34:in `include'
/home/arun/.rvm/gems/ruby-2.2.2@quadra/gems/searchlogic-2.4.28/lib/searchlogic.rb:34:in `singleton class'
/home/arun/.rvm/gems/ruby-2.2.2@quadra/gems/searchlogic-2.4.28/lib/searchlogic.rb:34:in `<class:Base>'
/home/arun/.rvm/gems/ruby-2.2.2@quadra/gems/searchlogic-2.4.28/lib/searchlogic.rb:33:in `<module:ActiveRecord>'
/home/arun/.rvm/gems/ruby-2.2.2@quadra/gems/searchlogic-2.4.28/lib/searchlogic.rb:26:in `<top (required)>'
/home/arun/.rvm/gems/ruby-2.2.2@quadra/gems/bundler-1.13.6/lib/bundler/runtime.rb:91:in `require'
/home/arun/.rvm/gems/ruby-2.2.2@quadra/gems/bundler-1.13.6/lib/bundler/runtime.rb:91:in `block (2 levels) in require'
/home/arun/.rvm/gems/ruby-2.2.2@quadra/gems/bundler-1.13.6/lib/bundler/runtime.rb:86:in `each'
/home/arun/.rvm/gems/ruby-2.2.2@quadra/gems/bundler-1.13.6/lib/bundler/runtime.rb:86:in `block in require'
/home/arun/.rvm/gems/ruby-2.2.2@quadra/gems/bundler-1.13.6/lib/bundler/runtime.rb:75:in `each'
/home/arun/.rvm/gems/ruby-2.2.2@quadra/gems/bundler-1.13.6/lib/bundler/runtime.rb:75:in `require'
/home/arun/.rvm/gems/ruby-2.2.2@quadra/gems/bundler-1.13.6/lib/bundler.rb:106:in `require'
/home/arun/Projects/internex/config/application.rb:8:in `<top (required)>'
/home/arun/.rvm/gems/ruby-2.2.2@quadra/gems/spring-1.6.0/lib/spring/application.rb:82:in `require'
/home/arun/.rvm/gems/ruby-2.2.2@quadra/gems/spring-1.6.0/lib/spring/application.rb:82:in `preload'
/home/arun/.rvm/gems/ruby-2.2.2@quadra/gems/spring-1.6.0/lib/spring/application.rb:143:in `serve'
/home/arun/.rvm/gems/ruby-2.2.2@quadra/gems/spring-1.6.0/lib/spring/application.rb:131:in `block in run'
/home/arun/.rvm/gems/ruby-2.2.2@quadra/gems/spring-1.6.0/lib/spring/application.rb:125:in `loop'
/home/arun/.rvm/gems/ruby-2.2.2@quadra/gems/spring-1.6.0/lib/spring/application.rb:125:in `run'
/home/arun/.rvm/gems/ruby-2.2.2@quadra/gems/spring-1.6.0/lib/spring/application/boot.rb:18:in `<top (required)>'
/home/arun/.rvm/rubies/ruby-2.2.2/lib/ruby/site_ruby/2.2.0/rubygems/core_ext/kernel_require.rb:54:in `require'
/home/arun/.rvm/rubies/ruby-2.2.2/lib/ruby/site_ruby/2.2.0/rubygems/core_ext/kernel_require.rb:54:in `require'

undefined method `assert_valid_keys'

  RubyGems.org doesn't report a license for your gem.  This is because it is not specified in the [gemspec](http://docs.rubygems.org/read/chapter/20#license) of your last release.

  via e.g.

```
  spec.license = 'MIT'
  # or
  spec.licenses = ['MIT', 'GPL-2']
```

  Including a license in your gemspec is an easy way for rubygems.org and other tools to check how your gem is licensed.  As you can imagine, scanning your repository for a LICENSE file or parsing the README, and then attempting to identify the license or licenses is much more difficult and more error prone. So, even for projects that already specify a license, including a license in your gemspec is a good practice. See, for example, how [rubygems.org uses the gemspec to  display the rails gem license](https://rubygems.org/gems/rails).

  There is even a [License Finder gem](https://github.com/pivotal/LicenseFinder) to help companies/individuals ensure all gems they use meet their licensing needs. This tool depends on license information being available in the gemspec.  This is an important enough issue that _even Bundler now generates gems with a default 'MIT' license_.

  I hope you'll consider specifying a license in your gemspec. If not, please just close the issue with a nice message. In either case, I'll follow up. Thanks for your time!

  Appendix:

  If you need help choosing a [license](http://opensource.org/licenses) (sorry, I haven't checked your readme or looked for a license file), GitHub has created a [license picker tool](http://choosealicense.com/).  Code without a license specified defaults to 'All rights reserved'-- denying others all rights to use of the code.
  Here's a [list of the license names I've found and their frequencies](https://github.com/bf4/gemproject/blob/master/license_usage.csv)

  p.s. In case you're wondering how I found you and why I made this issue, it's because I'm collecting stats on gems (I was originally looking for download data) and decided to collect license metadata,too, and [make issues for gemspecs not specifying a license as a public service :)](https://github.com/bf4/gemproject/issues/1). See the previous link or my [blog post about this project for more information](http://www.benjaminfleischer.com/2013/07/12/make-the-world-a-better-place-put-a-license-in-your-gemspec/).

In SearchLogic 2.5.9 or greater, HABTM relationship queries fail with "undefined method" errors.

```
undefined method `bar_id_equals_any' for #<Class:0x7febd2642d30>
/home/myapp/shared/bundle/ruby/1.8/gems/searchlogic-2.5.14/
lib/searchlogic/named_scopes/column_conditions.rb:81:in `method_missing'
```

The cause of this is the change from `respond_to?` to `respond_to_missing?` in https://github.com/binarylogic/searchlogic/commit/16e7e2605a605dc39d8db0734f69dd9d1e1f1872.

This may work in Ruby 1.9+, but fails in 1.8.7 (with Rails 2.3.18).

Example

```
class Foo
  has_and_belongs_to_many :bars
end
class Bar
  has_and_belongs_to_many :foos
end

Foo.bars_id_in(2)    # fails
```

I worked around this by monkey patching:

```
module Searchlogic
  module NamedScopes
    module ColumnConditions

      # In SearchLogic 2.5.9+, this was changed to respond_to_missing?
      # which breaks Foo.bar_id_equals_any(...) where Foo habtm Bar
      def respond_to?(*args)
        super || (self != ::ActiveRecord::Base && !self.abstract_class? && !create_condition(args.first).blank?)
      end

    end
  end
end
```

Hi,

I have the following in my controller

```
@search = Company.search(params[:search])
```

and this in my view

```
= order @search, :by => :name
```

The link generates the right query, however the destination page returns an error. Passing in the same options within a console yields the following:

```
>> Company.search(:order => 'ascend_by_name')
NoMethodError: undefined method `to_sym' for nil:NilClass
```

I'm running a rails 2.3.16 app using ruby 1.9.2p318. Is this a problem with my syntax (I'm pretty sure I followed everything in the instructions)

Here's the stack trace from the console .. 

```
>> Company.search(:order => 'ascend_by_name')
NoMethodError: undefined method `to_sym' for nil:NilClass
    from gems/activesupport-2.3.16/lib/active_support/whiny_nil.rb:52:in `method_missing'
    from gems/searchlogic-2.5.8/lib/searchlogic/active_record/named_scope_tools.rb:16:in `named_scope_options'
    from gems/searchlogic-2.5.8/lib/searchlogic/named_scopes/alias_scope.rb:54:in `named_scope_options'
    from gems/searchlogic-2.5.8/lib/searchlogic/named_scopes/or_conditions.rb:14:in `named_scope_options'
    from gems/searchlogic-2.5.8/lib/searchlogic/search/scopes.rb:15:in `scope_options'
    from gems/searchlogic-2.5.8/lib/searchlogic/search/method_missing.rb:80:in `cast_type'
    from gems/searchlogic-2.5.8/lib/searchlogic/search/method_missing.rb:22:in `method_missing'
    from gems/searchlogic-2.5.8/lib/searchlogic/search/conditions.rb:19:in `block in conditions='
    from gems/searchlogic-2.5.8/lib/searchlogic/search/conditions.rb:15:in `each'
    from gems/searchlogic-2.5.8/lib/searchlogic/search/conditions.rb:15:in `conditions='
    from gems/searchlogic-2.5.8/lib/searchlogic/search/date_parts.rb:19:in `conditions='
    from gems/searchlogic-2.5.8/lib/searchlogic/search/base.rb:18:in `initialize'
    from gems/searchlogic-2.5.8/lib/searchlogic/search/implementation.rb:10:in `new'
    from gems/searchlogic-2.5.8/lib/searchlogic/search/implementation.rb:10:in `searchlogic'
    from (irb):1
    from ruby-1.9.2-p318/bin/irb:16:in `<main>'
>> 
```

Am I doing something wrong? Thanks for your help.

When a model has no non-polymorphism associations, but does have polymorphism associations. It may lead to an exception while trying to convert an empty string (`association_name` variable) to symbol in the method `#association_condition_details` (searchlogic/named_scopes/association_conditions.rb#L24) 
Step to reproduce:
1. Create a model A like above
2. Call A.respond_to? :_dump

because of some reason,I have to do like this:

class Fabric < ActiveRecord::Base
  has_many :fabric_material_records
end

class FabricMaterialRecord::Base
  belongs_to :fabric
  belongs_to :material, :class_name => "Fabric"
end

however,as the result:

FabricMaterialRecord.material_number_like("PP");
will give on the console:(It's error)
FabricMaterialRecord Load (0.1ms)  SELECT `fabric_material_records`.\* FROM `fabric_material_records` INNER JOIN `fabrics` ON `fabrics`.`id` IS NULL WHERE (fabrics.number LIKE '%PP%')

FabricMaterialRecord.fabric_number_like("PP")
will give(It's correct!)
FabricMaterialRecord Load (0.1ms)  SELECT `fabric_material_records`.\* FROM `fabric_material_records` INNER JOIN `fabrics` ON `fabrics`.`id` = `fabric_material_records`.`fabric_id` WHERE (fabrics.number LIKE '%PP%')

I'll have see one issue at https://github.com/binarylogic/searchlogic/issues/8, but nobody has given the solution!
Please help me, thanks!

Please help me in searchlogic for rails 3.1.1. my whole application using searchlogic. I dont know what i do now its not working with Rails 3.1.1. can you people help us its work for rails 3.1.1 and above...

Hi,

All is in the title ?

thanks
