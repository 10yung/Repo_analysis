## Environment
- Ionic 4 + Angular 8
- Using v8.0.1
- Prod build

## Description
- I'm currently getting this error when running the app with angular cli's prod settings
<img width="1002" alt="Screen Shot 2020-01-15 at 2 27 53 AM" src="https://user-images.githubusercontent.com/7845870/72371275-fcfa8d00-373e-11ea-809b-b6a1b9fe044f.png">

- Did a little bit of debugging and the `resolver` obj doesn't contain a `container` prop while when running on prod settings, it only has `nativeElement`

Wondering if anyone encountered this issue before?


Is there any way to restore scroll position while navigating back using browser button? 
This changes has been cherry-picked from the PR made for #321 and fixes #329. An ng-6 branch has been created from the 6.0.1 release.

---

There are a few known scenarios where the opencollective postinstall npm script can cause things to break further down the pipeline - a few being 'certain build/CI environments', 'script permission issues' and 'offline installs'....

Arguably, displaying a banner soliciting funding shouldn't disrupt the development or build processes of projects leveraging libraries that are optionally, and non-functionally, using opencollective.

Ultimately, at the heart of the failure, is a non 0 exit code being returned in the cases that opencollective fails to properly execute.

To prevent this non-zero exit code failure so that subsequent npm processes aren't disrupted as a result of non-functional dependency issues, a "|| exit 0" should be added to the postinstall npm script.

There are many discussions about this issue and workaround - here are a few:
opencollective/opencollective-cli#5
nuxt/nuxt.js#1357
opencollective/opencollective-cli#3
opencollective/opencollective-postinstall#2
https://github.com/compodoc/compodoc/commit/99ea09f6ac75fe26001c2fae52facc3be1696a52

(cherry picked from commit c5613d7386cbbe074e5bb62a77bba85e906060fb)

Your issue may already be reported!
- [x] Please search on the [issue track](../) before creating one.

## Expected Behavior
<!--- If you're describing a bug, tell us what should happen -->
<!--- If you're suggesting a change/improvement, tell us how it should work -->
With `immediateCheck` it should trigger directly on load (if there are not enough items)


## Actual Behavior
<!--- If describing a bug, tell us what happens instead of the expected behavior -->
<!--- If suggesting a change/improvement, explain the difference from current behavior -->
It seems that `immediateCheck` isn't even wired up to do anything:
https://github.com/orizens/ngx-infinite-scroll/blob/7dc71e98ab3669090b2e6ec40d717938b9cfa02b/src/modules/infinite-scroll.directive.ts#L33

## Possible Solution
<!--- Not obligatory, but suggest a fix/reason for the bug, -->
<!--- or ideas how to implement the addition or change -->
It should be wired up (again?) and/or there should be a way to trigger it manually

### Steps To Reproduce / Demo (if applicable)
[ ] ~~Please share a [stackblitz](https://stackblitz.com/) or [plunkr](https://plnkr.co/) demo reproducing this issue~~


### Context
<!--- How has this issue affected you? What are you trying to accomplish? -->
<!--- Providing context helps us come up with a solution that is most useful in the real world -->
The list I load it not long enough by default (depending on screen size) and it should be extended once it's loaded

### Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
- [x] Version used: angular `8.2.7` and infinite-scroll `8.0.0`
- [x] Browser Name and version: Firefox `71` and Chromium `76`
- [x] (Optional) Operating System and version (desktop or mobile): N/A
- [x] (Optional) Link to your project: https://github.com/cromefire/jellyfin-angular/blob/master/src/app/common/slider/slider.component.html
The problem is that when I keep scrolling down the more items is added to the scroll element and and the less I have to scroll again to reach the `infiniteScrollDistance` threshold.

For example:

1st set of data -> I have to scroll 20 full wheels.
2nd set of data -> I have to scroll 15 full wheels.
3rd set of data -> I have to scroll 10 full wheels.

And it keeps getting lower and lower, so at the page 10 only a couple of scrolls would be sufficient to trigger the scroller. This is highly inefficient.
<!-- Love ngx-infinite-scroll? Please consider supporting our collective:
ðŸ‘‰  https://opencollective.com/ngx-infinite-scroll/donate -->

I followed the example. 
```
<div
      class="search-results"
      infiniteScroll
      [infiniteScrollDistance]="2"
      [infiniteScrollThrottle]="50"
      (scrolled)="onScroll()"
    ></div>
```
but the scrolled event fires right after the page scrolls, no matter the value of infiniteScrollDistance.
How to make it work?
Thank you very much in advance for your help.

## Expected Behavior
<!--- If you're describing a bug, tell us what should happen -->
<!--- If you're suggesting a change/improvement, tell us how it should work -->

Scrolled to the expected position, then the scrolled event fires.

## Actual Behavior
<!--- If describing a bug, tell us what happens instead of the expected behavior -->
<!--- If suggesting a change/improvement, explain the difference from current behavior -->

the scrolled event fires right after the page scrolls.

## Possible Solution
<!--- Not obligatory, but suggest a fix/reason for the bug, -->
<!--- or ideas how to implement the addition or change -->

### Steps To Reproduce / Demo (if applicable)
[ ] Please share a [stackblitz](https://stackblitz.com/) or [plunkr](https://plnkr.co/) demo reproducing this issue  


### Context
<!--- How has this issue affected you? What are you trying to accomplish? -->
<!--- Providing context helps us come up with a solution that is most useful in the real world -->

### Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
- [ ] Version used: 
- [ ] Browser Name and version:
- [ ] (Optional) Operating System and version (desktop or mobile):
- [ ] (Optional) Link to your project: 
how can i do reverse scrolling , like from last item of scroll to top item like chat app?
I have a component like Ticket List that implements Perfect Scrollbar and Infinite Scroll features using libs **ngx-perfect-scrollbar** and **ngx-infinite-scroll**. 
I combined these libs together according to the example on Stackblitz. 
https://stackblitz.com/edit/ngx-infinite-scroll-plus-ngx-perfect-scrollbar-dgecek 

At first it works fine, I can see the perfect scrollbar and infinite scroll works as well. 
But after page reload perfect scrollbar disappears and the native scrollbar is shown. However infinite scroll still works. 
How can I solve this issue? 

**ticket-list.component.html**
```html 
<div class="ticket-list__content"
  infiniteScroll
  (scrolled)="loadMoreTickets()"
  [scrollWindow]="false"
  [infiniteScrollDistance]="1"
  [infiniteScrollThrottle]="1000"
  [perfectScrollbar]="perfectScrollbarConfig"
>
  <div class="ticket__container" *ngFor="let ticket of tickets">
    <app-list-item
      class="ticket"
      [title]="ticket?.id"
      [description]="ticket?.name"
      [date]="ticket?.creation_time"
    ></app-list-item>
  </div>
</div> 
```

**ticket-list.component.scss**  
```scss
.ticket-list {
  &__content {
    height: 652px;
    overflow-y: auto;
    position: relative;
  }
}
``` 

**ticket-list.component.ts** 
```typescript 
import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';
import { Ticket } from '../../../models/ticket/Ticket';
import { PerfectScrollbarConfigInterface } from 'ngx-perfect-scrollbar';
import { getTicketState } from 'src/app/core/reducers/ticket/ticket.reducer';
import { Store } from '@ngrx/store';
import { AppState } from 'src/app/app.reducer';


@Component({
  selector: 'app-ticket-list',
  templateUrl: './ticket-list.component.html',
  styleUrls: ['./ticket-list.component.scss']
})
export class TicketListComponent implements OnInit {
  @Input() public tickets: Ticket[];
  @Output() private nextPageOfTicketsRequested: EventEmitter<void> = new EventEmitter<void>();

  public perfectScrollbarConfig: PerfectScrollbarConfigInterface = {
    suppressScrollX: false
  };

  constructor(private store: Store<AppState>) {}

  public ngOnInit(): void {
  }

  public loadMoreTickets(): void {
    this.nextPageOfTicketsRequested.emit();
  }
}
``` 

**ticket-list.module.ts**
```typescript 
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';

import { TicketListComponent } from './ticket-list/ticket-list.component';
import { ListItemComponent } from './list-item/list-item.component';
import { ListFilterComponent } from './list-filter/list-filter.component';

import { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';
import { InfiniteScrollModule } from 'ngx-infinite-scroll';


@NgModule({
  declarations: [TicketListComponent, ListItemComponent, ListFilterComponent],
  exports: [TicketListComponent, ListFilterComponent],
  imports: [
    CommonModule,
    PerfectScrollbarModule,
    InfiniteScrollModule
  ],
  providers: []
})
export class TicketListModule {}
``` 
Hello Team,

I'm using two infinite scroll one with scrollWindow=false and one without scrollWindow. 

Without scrollWindow works fine but another one(using scrollWindow=false) is not working.

Please suggest what I'm doing wrong?
Hi

`onScrollUp `event when it trigger if the position of scroll be 0 befror loading data then it jump to position 0 again immediately after data loaded to the container