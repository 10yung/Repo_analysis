![image](https://user-images.githubusercontent.com/914843/72243748-b0705e00-3627-11ea-8677-785d8dc23e8e.png)

the top picture is editor mode

the picture bellow show in running mode
![image](https://user-images.githubusercontent.com/914843/72243913-0c3ae700-3628-11ea-925a-c69578cac4b1.png)


unity version 2019.2.17f  

Can you add support GravityModifier?
Some people have been setting the z scale to 0 in my project for some reason so I found out that makes the particles just completely vanish. I would consider this a bug since other UI elements still render when the z scale is 0 (Image, Text, etc.). Seems like the 2d rendering should just ignore the z scale.
As the BakeMesh API changes the mesh of the canvasRenderer, the canvas contains the UIParticle component will rebuild every frame. 
My experiment: I compare 10000 ParticleSystems and 10000 UIParticles, the FPS are both about 10. But when I create 5000 other Texts and Images in the same canvas, the ParticleSystems remains 10 FPS, the UIParticles decreases to 2 FPS. The reason is the canvas will reorder the 20000+ elements and batch their meshes before rendering.
It seems if the UI is complicated, we need to create specific canvas for the UIParticles component to seperate with other components.
When I try to play a particle system with trails I get this error:
![image](https://user-images.githubusercontent.com/8560641/70392877-6d95e780-19e4-11ea-8e5b-151f99d440b4.png)

It uses a combination of noise and velocity over lifetime to move the particle for which rendering is disabled. Only the trials should get rendered. I'm using a mobile particle material on this element for better performance. I'm fine with the particle not supporting masking.

I am editing the particle system inside a prefab.

![image](https://user-images.githubusercontent.com/8560641/70392868-6078f880-19e4-11ea-9943-13412f955620.png)

Hey, first of all this looks really promising so thanks for sharing it!
This is not an issue, iI would like to know if you did any performance test on devices (mobile perhaps) and see if it's to heavy or not.

Thanks again!
In gamma space,there is no issue.
but when change color space from gamma to Linear.
The UIParticle become darker than normal.

![image](https://user-images.githubusercontent.com/7671107/67396604-753b3180-f5da-11e9-8b99-ec7005c0654d.png)

same params:
![image](https://user-images.githubusercontent.com/7671107/67396828-d82cc880-f5da-11e9-8d95-687aeb9b2caf.png)



Created a particle system in my canvas and attached UIParticle to it. The particles appear perfectly in scene view, but turn completely black in game view. Anyone else facing this too?
Particle not use shape, mode is billboard.
I Rotate the rect to (90, 0 , 0), some paticle the render will no work.

i try this to solveï¼š
if (0 < m_ParticleSystem.particleCount)
  {
   ....
    _mesh.SetVertices(s_Vertices);
   //Recalculate the bounds
   _mesh.RecalculateBounds();
   ....
 }
It is working on editor smoothly but not quite sure how to use it in my builds. When I try this on Android, it crashed with this error log : 

```
10-04 01:26:02.381 22282 22304 E Unity   : NullReferenceException: Object reference not set to an instance of an object.
10-04 01:26:02.381 22282 22304 E Unity   :   at Coffee.UIExtensions.UIParticle.UpdateMesh () [0x00000] in <00000000000000000000000000000000>:0
10-04 01:26:02.381 22282 22304 E Unity   :   at Coffee.UIExtensions.UIParticle.UpdateMeshes () [0x00000] in <00000000000000000000000000000000>:0
10-04 01:26:02.381 22282 22304 E Unity   :   at UnityEngine.Canvas+WillRenderCanvases.Invoke () [0x00000] in <00000000000000000000000000000000>:0
10-04 01:26:02.381 22282 22304 E Unity   : Coffee.UIExtensions.UIParticle:UpdateMesh()
10-04 01:26:02.381 22282 22304 E Unity   : Coffee.UIExtensions.UIParticle:UpdateMeshes()
10-04 01:26:02.381 22282 22304 E Unity   : UnityEngine.WillRenderCanvases:Invoke()
10-04 01:26:02.381 22282 22304 E Unity   :
10-04 01:26:02.381 22282 22304 E Unity   : (Filename: currently not available on il2cpp Line: -1)
```

