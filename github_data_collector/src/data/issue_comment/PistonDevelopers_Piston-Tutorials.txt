I was able to run `cargo run` and it launched the green-backgrounded window with the red square, but it just doesn't move.

Windows 10, rust 1.35.0
```
/// Handles events.
  pub fn event<E: GenericEvent>(&mut self, pos: [f64; 2], size: f64, e: &E) {
      use piston::input::{Button, MouseButton};

      if let Some(pos) = e.mouse_cursor_args() {
______________________________________________________________________________________________________________
          ///////// Did not run here,  SOMEBODY can help me? thank you.///////!!!!!!!!!!!
------------------------------------------------------------------------------------------------------------------
          self.cursor_pos = pos;
      }

      if let Some(Button::Mouse(MouseButton::Left)) = e.press_args() {
          // Find coordinates relative to upper left corner.
          let x = self.cursor_pos[0] - pos[0];
          let y = self.cursor_pos[1] - pos[1];
          // Check that coordinates are inside board boundaries.
          if x >= 0.0 && x < size && y >= 0.0 && y < size {
              // Compute the cell position.
              let cell_x = (x / size * 9.0) as usize;
              let cell_y = (y / size * 9.0) as usize;
              self.selected_cell = Some([cell_x, cell_y]);
          }
      }
  }
```
I get 'unable to get package from source error'

error: unable to get packages from source

Caused by:
  failed to parse manifest at `~/.cargo/registry/src/github.com-1ecc6299db9ec823/stb_truetype-0.2.5/Cargo.toml`

Caused by:
  editions are unstable

Caused by:
  feature `edition` is required

consider adding `cargo-features = ["edition"]` to the manifest

In the getting-started tutorial, glob imports are pervasive. While these are generally not the best practice (the modules maybe should have preludes to make this easier), they also make it difficult to figure out which library/module many types come from. For example, when writing the render function in the `impl App` block, It becomes necessary to use IDE tooling to figure out which module `RenderArgs` comes from. I recomend removing `::*` in as many places as possible to make the tutorial easier to read.
I recently finished a tutorial that covers the square  rotating and it compiles yet I do not see any background nor the square itself. If it help I'm running mac version 10.14
Attempted to follow the sudoku example up to chapter 5 where you are supposed to compile and the game board is displayed.  Instead I get the following error with this backtrace:
```
thread 'main' panicked at 'Could not create window: "Couldn\'t find any pixel format that matches the criterias."', libcore/result.rs:945:5
stack backtrace:
   0: std::sys::unix::backtrace::tracing::imp::unwind_backtrace
             at libstd/sys/unix/backtrace/tracing/gcc_s.rs:49
   1: std::sys_common::backtrace::_print
             at libstd/sys_common/backtrace.rs:71
   2: std::panicking::default_hook::{{closure}}
             at libstd/sys_common/backtrace.rs:59
             at libstd/panicking.rs:380
   3: std::panicking::default_hook
             at libstd/panicking.rs:396
   4: std::panicking::rust_panic_with_hook
             at libstd/panicking.rs:576
   5: std::panicking::begin_panic
             at libstd/panicking.rs:537
   6: std::panicking::begin_panic_fmt
             at libstd/panicking.rs:521
   7: rust_begin_unwind
             at libstd/panicking.rs:497
   8: core::panicking::panic_fmt
             at libcore/panicking.rs:71
   9: core::result::unwrap_failed
             at /checkout/src/libcore/macros.rs:23
  10: <core::result::Result<T, E>>::expect
             at /checkout/src/libcore/result.rs:809
  11: sudoku::main
             at src/main.rs:43
  12: std::rt::lang_start::{{closure}}
             at /checkout/src/libstd/rt.rs:74
  13: std::panicking::try::do_call
             at libstd/rt.rs:59
             at libstd/panicking.rs:479
  14: __rust_maybe_catch_panic
             at libpanic_unwind/lib.rs:102
  15: std::rt::lang_start_internal
             at libstd/panicking.rs:458
             at libstd/panic.rs:358
             at libstd/rt.rs:58
  16: std::rt::lang_start
             at /checkout/src/libstd/rt.rs:74
  17: main
  18: __libc_start_main
  19: _start
```

I went through the code to make sure I did not make an error, and just to be extra sure, I cloned the repository and tried to build the example from the source provided. This is the error and backtrace provided from that:
```
thread 'main' panicked at 'Could not create window: "Couldn\'t find any pixel format that matches the criterias."', libcore/result.rs:945:5
stack backtrace:
   0: std::sys::unix::backtrace::tracing::imp::unwind_backtrace
             at libstd/sys/unix/backtrace/tracing/gcc_s.rs:49
   1: std::sys_common::backtrace::_print
             at libstd/sys_common/backtrace.rs:71
   2: std::panicking::default_hook::{{closure}}
             at libstd/sys_common/backtrace.rs:59
             at libstd/panicking.rs:380
   3: std::panicking::default_hook
             at libstd/panicking.rs:396
   4: std::panicking::rust_panic_with_hook
             at libstd/panicking.rs:576
   5: std::panicking::begin_panic
             at libstd/panicking.rs:537
   6: std::panicking::begin_panic_fmt
             at libstd/panicking.rs:521
   7: rust_begin_unwind
             at libstd/panicking.rs:497
   8: core::panicking::panic_fmt
             at libcore/panicking.rs:71
   9: core::result::unwrap_failed
             at /checkout/src/libcore/macros.rs:23
  10: <core::result::Result<T, E>>::expect
             at /checkout/src/libcore/result.rs:809
  11: sudoku::main
             at src/main.rs:29
  12: std::rt::lang_start::{{closure}}
             at /checkout/src/libstd/rt.rs:74
  13: std::panicking::try::do_call
             at libstd/rt.rs:59
             at libstd/panicking.rs:479
  14: __rust_maybe_catch_panic
             at libpanic_unwind/lib.rs:102
  15: std::rt::lang_start_internal
             at libstd/panicking.rs:458
             at libstd/panic.rs:358
             at libstd/rt.rs:58
  16: std::rt::lang_start
             at /checkout/src/libstd/rt.rs:74
  17: main
  18: __libc_start_main
  19: _start
```

Bellow is my system info:
```
$ uname -r:  
     4.15.13-300.fc27.x86_64
$ cargo --version: 
     cargo 0.26.0 (41480f5cc 2018-02-26)
$ rustup show: 
   Default host: x86_64-unknown-linux-gnu
   stable-x86_64-unknown-linux-gnu (default)
   rustc 1.25.0 (84203cac6 2018-03-25)
```

Please let me know if I need to provide any more information.
NEWBIE ALERT!  I am very new to 'rust'.  I got a few primitive things running and found this demo of a graphics app which I want to try to see if I want to continue with 'rust'.
It builds normally, but when it runs, it aborts with an error message:

- thread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: "GL context creation failed"', libcore/result.rs:945:5
note: Run with `RUST_BACKTRACE=1` for a backtrace.

I tried to figure out the BACKTRACE stuff, but wasn't able to ... It disappears from the environment as soon as it is put in ??? I don't know what I am doing yet.

Here is my system info - I hope it is enough:

Machine:   System: Hewlett-Packard product: HP Compaq dx2400 Microtower
           Mobo: ASUSTeK model: 2A73 v: 1.01
           Bios: American Megatrends v: 5.23 date: 04/21/2008
CPU:       Dual core Intel Core2 Duo E4600 (-MCP-) cache: 2048 KB 
           clock speeds: max: 2400 MHz 1: 1600 MHz 2: 2000 MHz
           CPU Flags: acpi aperfmperf apic arch_perfmon bts clflush cmov constant_tsc
           cx16 cx8 de ds_cpl dtes64 dtherm dts est fpu fxsr ht lahf_lm lm mca mce mmx
           monitor msr mtrr nopl nx pae pat pbe pdcm pebs pge pni pse pse36 rep_good
           sep ss sse sse2 ssse3 syscall tm tm2 tsc vme xtpr
System:    Host: mint Kernel: 4.10.0-38-generic x86_64 (64 bit) Desktop: MATE 1.18.0
           Distro: Linux Mint 18.3 Sylvia
Graphics:  Card: Intel 82G33/G31 Express Integrated Graphics Controller
           Display Server: X.Org 1.18.4 drivers: intel (unloaded: fbdev,vesa)
           Resolution: 1280x1024@60.02hz
           GLX Renderer: Mesa DRI Intel G33 GLX Version: 1.4 Mesa 17.0.7
mint@mint ~ $ lspci
00:00.0 Host bridge: Intel Corporation 82G33/G31/P35/P31 Express DRAM Controller (rev 02)
00:02.0 VGA compatible controller: Intel Corporation 82G33/G31 Express Integrated Graphics Controller (rev 02)
mint@mint ~ $ find /dev -group video
/dev/fb0
/dev/dri/card0
/dev/dri/renderD128
mint@mint ~ $ lspci -k | grep -EA3 'VGA|3D|Display'
00:02.0 VGA compatible controller: Intel Corporation 82G33/G31 Express Integrated Graphics Controller (rev 02)
	Subsystem: Hewlett-Packard Company 82G33/G31 Express Integrated Graphics Controller
	Kernel driver in use: i915
	Kernel Mode Setting driver: i915, version 1.6.0 20161121

I spent several hours googling for a resolution to this problem with NO success.
Thank you for any and all comments, suggestions, and assistance.
Blessings in abundance,
Art in Carlisle, PA USA
```
    Updating registry `https://github.com/rust-lang/crates.io-index`
   Compiling rusttype v0.4.3
   Compiling rayon-core v1.4.0
error[E0507]: cannot move out of captured outer variable in an `FnOnce` closure
   --> /home/martin/.cargo/registry/src/github.com-1ecc6299db9ec823/rusttype-0.4.3/src/lib.rs:314:54
    |
314 |                 .and_then(|offset| tt::FontInfo::new(self.0, offset as usize))
    |                                                      ^^^^ cannot move out of captured outer variable in an `FnOnce` closure

error: aborting due to previous error

error: Could not compile `rusttype`.
warning: build failed, waiting for other jobs to finish...
error: build failed

```
How's this code not working?

```
    let mut window: Window = WindowSettings::new(
            "spinning-square",
            [200, 200]
        )
        .opengl(opengl)
        .exit_on_esc(true)
        .resizable(false)
        .build()
        .unwrap();
```

I added `.resizable(false)` but the window is still resizable...
In the tutorial it says to import `opengl_graphics::glyph_cache::GlyphCache`. This doesn't seem to exist anymore. What exists instead is `opengl_graphics::GlyphCache`.

Also the constructor of GlyphCache takes three arguments instead of two.  There is a factory needed.

How can I compile the code? I cannot find anything about the factory. Also I followed the tutorial step by step.

Maybe problems like these can be solved in the future with adding versions to the dependencies. As piston seems to change very fast, specific library versions can make sure that the tutorial still works, even when newer versions of piston or any dependency came out. :-)

PS: I found `opengl_graphics::graphics::glyph_cache::rusttype::GlyphCache`, but it seems to be the same struct as `opengl_graphics::GlyphCache`.