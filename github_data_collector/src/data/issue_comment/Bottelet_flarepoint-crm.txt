Bumps [symfony/http-foundation](https://github.com/symfony/http-foundation) from 3.4.27 to 3.4.36.
<details>
<summary>Commits</summary>

- [`d2d0cfe`](https://github.com/symfony/http-foundation/commit/d2d0cfe8e319d9df44c4cca570710fcf221d4593) [HttpFoundation] Fixed typo
- [`f7efd0b`](https://github.com/symfony/http-foundation/commit/f7efd0b387b7bdbfe0fd1e38fe6b7d4a812b4e39) Simpler example for Apache basic auth workaround
- [`ef5fed4`](https://github.com/symfony/http-foundation/commit/ef5fed4469fb079c0b188ab0401cd1b28752865b) [HttpFoundation] Allow redirecting to URLs that contain a semicolon
- [`c9425ba`](https://github.com/symfony/http-foundation/commit/c9425bae96ae95449d59f8286529cf144bb228ab) Fix MySQL column type definition.
- [`9e4b3ac`](https://github.com/symfony/http-foundation/commit/9e4b3ac8fa3348b4811674d23de32d201de225ce) [HttpFoundation] fix guessing mime-types of files with leading dash
- [`a5d46a3`](https://github.com/symfony/http-foundation/commit/a5d46a33e8649ba802cebe520d188b04385572a2) Fix MockFileSessionStorageTest::sessionDir being used after it's unset
- [`7b4626a`](https://github.com/symfony/http-foundation/commit/7b4626ab40d8562707e6d1c9a6fab977a86c2037) Remove unused local variables in tests
- [`4db558c`](https://github.com/symfony/http-foundation/commit/4db558c7c6777aac02293efbfe7c7c5d4c1385c3) Add plus character `+` to legal mime subtype
- [`233f40c`](https://github.com/symfony/http-foundation/commit/233f40cbebd595ffd91ddf291355f8a930a13777) [HttpFoundation] Check if data passed to SessionBagProxy::initialize is an array
- [`35ffbbf`](https://github.com/symfony/http-foundation/commit/35ffbbfa73e46e28a9433692cd6c404de70e6c4c) [HttpFoundation] allow additinal characters in not raw cookies
- Additional commits viewable in [compare view](https://github.com/symfony/http-foundation/compare/v3.4.27...v3.4.36)
</details>
<br />

[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=symfony/http-foundation&package-manager=composer&previous-version=3.4.27&new-version=3.4.36)](https://help.github.com/articles/configuring-automated-security-fixes)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot ignore this [patch|minor|major] version` will close this PR and stop Dependabot creating any more for this minor/major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language
- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language
- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language
- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language

You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/Bottelet/flarepoint-crm/network/alerts).

</details>
Correct various grammatical errors in English translation.
Hey, 
global countries wise, there shouldn't be phone validation with max 10 chars.
Accepted format should cover `+phone number` with at least 12 chars.
Without it you should not use `tel:` in `a href="...`
I would suggest using one of available libraries for validation, like for example (laravel-phone)...
Finally phone numbers do not have to be 255 long in database....
Hi, if there was one, that found it helpful, I have added a few lines into:`app/Repositories/Task/TaskRepository.php` file (`updateTime` method):
```php
public function updateTime($id, $request)
{
	$task = Task::findOrFail($id);
	$invoice = $task->invoice;
	if (!$invoice) {
		$invoice = Invoice::create([
		'status' => 'draft',
		'client_id' => $task->client->id,
		]);
	$task->invoice_id = $invoice->id;
	$task->save();
	}

	/**
	* @param $stringTimeFormat
	* @return string
	* The aim is to get hours from string typed by a user,
	* eg: 1h 30m = 1.5
	*/
	
	function convertToHoursMins($stringTimeFormat) {

		if ((strpos($stringTimeFormat,  'h') !== false) || (strpos($stringTimeFormat, 'm') !== false)) {
		
			$hoursTimeFormat = str_replace(array('h', 'm'), array('hours', 'minutes'), $stringTimeFormat);
			$i = \DateInterval::createFromDateString($hoursTimeFormat);
			$hours = $i->h;
			$minutes = $i->i;
			$minutesIntoHours = $minutes / 60;
			$timeOnTask = $hours + $minutesIntoHours;
		
			return (string)$timeOnTask;
		
		} else {
		
			return $stringTimeFormat;
		}
	}


	InvoiceLine::create([
		'title' => $request->title,
		'comment' => $request->comment,
		'quantity' => convertToHoursMins($request->quantity),
		'type' => $request->type,
		'price' => $request->price,
		'invoice_id' => $invoice->id,
	]);
	
	event(new \App\Events\TaskAction($task, self::UPDATED_TIME));
}
```

To obtain the proper result you'd need to change
`database/migrations/2016_01_31_211926_invoice_lines_table.php`
`quantity` format into `decimal`.



This method allows user to write a string like 1h 30m instead of 1.5. 
Hope you'll like it :)