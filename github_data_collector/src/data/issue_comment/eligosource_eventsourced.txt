Is it possible to have MapDB as a journal in the Akka persistence library.

See https://github.com/sbt/sbt/issues/358

Potentially use Typesafe Slick &| ScalikeJDBC.

Migration of
- in-messages
- out-messages
- acknowledgements

Must also preserve original sequence number. Journals that have separate counter keys must be updated after full migration accordingly.

See also https://groups.google.com/d/msg/eventsourced/dflKWRu83sQ/kaNNIs3DPlwJ

Guidelines how to achieve backwards compatibility when the event and domain model changes over time. It must be investigated if this requires further extensions to journals.

- `replay(...)` on all instances and then
- `deliver(...)` on all instances

Imagine the following scenario:
- 2 actors: A, B
- A is eventsourced and 
  - gets message from "outside"
  - updates its internal state
  - computes new messages and sends them to B
- B is not eventsourced 
  - gets message only from A
  - updates its internal state

In this case taking snapshots in a straightforward manner does not lead to consistent recovery as message sent from A to B could be either applied twice or get lost. For consistent recovery the following trick can be applied:
- Send SnapshotRequest to A
- A creates A-snapshot and does not call SnapshotRequest.process, but forwards its snapshot in custom message to B
- B creates B-snapshot and combines it with received A-snapshot to AB-snapshot
- B calls SnapshotRequest.process(AB-snapshot)

Having library support for this kind of consistent snapshots could relieve a developer from implementing the described process and probably saves a couple of process related custom types.

Criteria:
- Load distribution
- Read consistency
- ...

Just for review, not intended to be merged in at this point.

I have done some minor adjustments wrt. backticks and minor format issues that caused a bit of trouble in the conversion.

Doing a

`pandoc -f markdown_github+raw_html README.md -o index.rst`

is more or less doing a perfect transformation - getting warnings about not using local images, but that is not a biggie to solve. I need to add some table css to the sphinx theme to get a similar setup as the on github.
