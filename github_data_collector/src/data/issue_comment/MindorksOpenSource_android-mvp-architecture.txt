for chinese developer to update the jar from aliyun repository
I am Unable to login 
phone Nokia 8.1
android version 10

![device-2019-11-09-184154](https://user-images.githubusercontent.com/47221639/68529078-b2185f80-0320-11ea-94df-608274719e61.png)

Hi all friends
Friends, to better understand this framework, let's do everything by example
Examples help us to master this framework more effectively
Examples can be as follows, such as forms, lists, and even small projects. This can help a great deal.
**Form Submit**
![Forms](https://user-images.githubusercontent.com/25837589/62682241-ec482d00-b9d0-11e9-8081-b0107ca3983c.png)

**Lists**
![Lists](https://user-images.githubusercontent.com/25837589/62682462-7b554500-b9d1-11e9-9fb8-f1b392973ce5.png)

Hi, I find out there're many issues without your responses.
Will you still keep updating this app?
Thanks
Internet error never occured when web service called. How we can manage it with this ?

Currently I have successfully implemented MVP architecture in my android app but When I am loading data inside my fragment, the UI hangs till the loading finishes. When Loading finishes, and data is loaded inside fragment, then only I can interact with click on different buttons.

This is my network api call

`public Single<List<PostsModel>> getFacebookFriendsFeed(String id_user_name, String user_id, String facebookId, String page) {
        return Rx2AndroidNetworking.get(ApiEndPoint.GET_POST_DATA)
                //  .addHeaders(mApiHeader.getProtectedApiHeader())
                .addQueryParameter("id_user_name", id_user_name)
                .addQueryParameter("user_id", user_id)
                .addQueryParameter("facebookId", facebookId)
                .addQueryParameter("page", page)
                .build()
                .getObjectListSingle(PostsModel.class)
                .subscribeOn(Schedulers.io())
                .observeOn(AndroidSchedulers.mainThread());
    }`

This is my presenter implementation of the API

`@Override
    public void getFacebookPostsOnline(String id_user_name, String user_id, String facebookId, String page) {

      //  getMvpView().showLoading();

        getCompositeDisposable().add(getDataManager()
                .getFacebookFriendsFeed(id_user_name, user_id, facebookId, page)
                .subscribeOn(getSchedulerProvider().io())
                .observeOn(getSchedulerProvider().ui())
                .subscribe(new Consumer<List<PostsModel>>() {
                    @Override
                    public void accept(List<PostsModel> response) throws Exception {

                        getMvpView().getFacebookPosts(response);
                        // todo add data and loop to get all friends list
                   /*     getDataManager().updateUserInfo(

                                response.info.getId(),
                                response.info.getUser_token(),
                                DataManager.LoggedInMode.LOGGED_IN_MODE_SERVER
                        );
                        */


                        if (!isViewAttached()) {
                            return;
                        }

                     //   getMvpView().hideLoading();
                      //  getMvpView().openMainActivity();

                    }
                }, new Consumer<Throwable>() {
                    @Override
                    public void accept(Throwable throwable) throws Exception {

                        if (!isViewAttached()) {
                            return;
                        }

                        getMvpView().hideLoading();

                        // handle the login error here
                        if (throwable instanceof ANError) {
                            ANError anError = (ANError) throwable;
                            handleApiError(anError);
                        }
                    }
                }));
    }`

Please let me know where I am going wrong in making the UI more async. and do you need any more details about my code.




https://github.com/MindorksOpenSource/android-mvp-architecture/blob/88ea906d9b1cb0701bf5cf89acd5c44ef279d2cc/app/src/main/java/com/mindorks/framework/mvp/ui/main/MainActivity.java#L169-L174

The drawer shouldn't be unlocked whenever onResumed method is called. 

Steps to reproduce: 
1. Open about from Hamburger menu 
2. Press system "Home" button
3. Open recent apps and choose the App. 
4. The drawer is unlocked. **Expected**: should be **locked**.
hi,

I integrate this architecture in my code, but I have found that it is not a good way to keep the reference of a activity like the following:
```java
   @Override
    public void onAttach(Context context) {
        super.onAttach(context);
        if (context instanceof BaseActivity) {
            BaseActivity activity = (BaseActivity) context;
            mActivity = activity;
            activity.onFragmentAttached();
        }
    }
```
Because the reference may be finished, destroyed, which is not valid for use. In fact, I have to check whether the activity is valid all the time. which I really feel bothered. Can we find a better way? Thank you very much.
The fact that a major part of your `database` package is full of `Helper`s and `Util`s feels wrong to me. I get that this works for a small scale project as here, but as and when this grows the helper nomenclature kills all OO patterns. I do not, however, have a better solution as yet. Thoughts?