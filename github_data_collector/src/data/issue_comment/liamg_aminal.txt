**Describe the bug**
A clear and concise description of what the bug is.
The program crashes with the panic error in the title
https://i.imgur.com/NaQtYRw.png

**To Reproduce**
Steps to reproduce the behavior:
1. use `go get` to install on archlinux
2. launch the program in a terminal 

**Expected behavior**
Some GUI to open, even if broken

**Screenshots**

**Environment (please complete the following information):**
 - OS + Version: Archlinux
 - Go Version: 1.13.6 linux/amd64
 - Shell: Bash

**Additional context**
https://i.imgur.com/NaQtYRw.png

**Logs**
https://i.imgur.com/B9tiye1.png
Update glfw to 3.3


**Describe the bug**
It does not launch WSL as default shell even though it is set in config file

**To Reproduce**
1. Create **.aminal.toml** in %%PROFILES%% directory
2. Set shell to shell = "wsl.exe -d Ubuntu"
3. Open Aminal

**Expected behavior**
It should have launched WSL. But instead opens up cmd.exe in go's bin directory

**Environment (please complete the following information):**
 - OS + Version: Windows 10
 - Go Version [e.g. 1.10.1] - go version go1.13 windows/amd64
 - Shell [e.g. Bash/Zsh] - WSL

**Logs**
```
2019-10-17T11:53:21.332+0530    INFO    aminal/main.go:32       Allocating pty...
2019-10-17T11:53:21.539+0530    INFO    aminal/main.go:58       Creating terminal...
2019-10-17T11:53:21.541+0530    DEBUG   gui/gui.go:301  Creating window...
2019-10-17T11:53:21.685+0530    DEBUG   gui/gui.go:312  Initialising OpenGL and creating program...
2019-10-17T11:53:21.687+0530    INFO    gui/gui.go:686  OpenGL version 4.4.0 - Build 21.20.16.4550
2019-10-17T11:53:21.687+0530    DEBUG   gui/gui.go:694  Compiling shaders...
2019-10-17T11:53:21.690+0530    DEBUG   gui/gui.go:321  Loading font...
2019-10-17T11:53:21.707+0530    INFO    gui/gui.go:678  GL debug message: Error has been generated. GL error GL_INVALID_OPERATION in (null): (ID: 173538523) Generic error
2019-10-17T11:53:21.707+0530    INFO    gui/gui.go:678  GL debug message: Error has been generated. GL error GL_INVALID_OPERATION in (null): (ID: 173538523) Generic error
2019-10-17T11:53:21.721+0530    INFO    gui/gui.go:678  GL debug message: Error has been generated. GL error GL_INVALID_OPERATION in (null): (ID: 173538523) Generic error
2019-10-17T11:53:21.721+0530    INFO    gui/gui.go:678  GL debug message: Error has been generated. GL error GL_INVALID_OPERATION in (null): (ID: 173538523) Generic error
2019-10-17T11:53:21.721+0530    DEBUG   gui/gui.go:251  Initiating GUI resize to 1315x986
2019-10-17T11:53:21.721+0530    DEBUG   gui/gui.go:258  Updating font resolutions...
2019-10-17T11:53:21.733+0530    INFO    gui/gui.go:678  GL debug message: Error has been generated. GL error GL_INVALID_OPERATION in (null): (ID: 173538523) Generic error
2019-10-17T11:53:21.733+0530    INFO    gui/gui.go:678  GL debug message: Error has been generated. GL error GL_INVALID_OPERATION in (null): (ID: 173538523) Generic error
2019-10-17T11:53:21.741+0530    INFO    gui/gui.go:678  GL debug message: Error has been generated. GL error GL_INVALID_OPERATION in (null): (ID: 173538523) Generic error
2019-10-17T11:53:21.742+0530    INFO    gui/gui.go:678  GL debug message: Error has been generated. GL error GL_INVALID_OPERATION in (null): (ID: 173538523) Generic error
2019-10-17T11:53:21.742+0530    DEBUG   gui/gui.go:261  Setting renderer area...
2019-10-17T11:53:21.742+0530    DEBUG   gui/gui.go:267  Calculating size in cols/rows...
2019-10-17T11:53:21.743+0530    DEBUG   gui/gui.go:269  Resizing internal terminal...
2019-10-17T11:53:21.743+0530    DEBUG   gui/gui.go:277  Setting viewport size...
2019-10-17T11:53:21.744+0530    DEBUG   gui/gui.go:282  Resize complete!
2019-10-17T11:53:21.754+0530    DEBUG   gui/gui.go:356  Starting pty read handling...
2019-10-17T11:53:21.754+0530    DEBUG   gui/gui.go:366  Starting render...
2019-10-17T11:53:21.755+0530    DEBUG   terminal/csi.go:106     CSI 0x6C (ESC[25l) Reset Mode (RM) - 0,0 -> 0,0
2019-10-17T11:53:21.757+0530    ERROR   terminal/output.go:117  Error handling escape sequence: Unsupported CSI 25l code
github.com/liamg/aminal/terminal.(*Terminal).processInput
        C:/Users/unifize/go/src/github.com/liamg/aminal/terminal/output.go:117
2019-10-17T11:53:21.760+0530    DEBUG   terminal/csi.go:106     CSI 0x4A (ESC[2J) Erase in Display (ED), VT100 - 0,0 -> 0,0
2019-10-17T11:53:21.762+0530    DEBUG   terminal/csi.go:106     CSI 0x6D (ESC[m) Character Attributes (SGR) - 0,0 -> 0,0
2019-10-17T11:53:21.775+0530    DEBUG   terminal/csi.go:106     CSI 0x48 (ESC[H) Cursor Position [row;column] (default = [1,1]) (CUP) - 0,0 -> 0,0
2019-10-17T11:53:21.781+0530    DEBUG   terminal/csi.go:106     CSI 0x68 (ESC[?25h) Set Mode (SM) - 43,0 -> 43,0
2019-10-17T11:53:21.787+0530    DEBUG   terminal/csi.go:106     CSI 0x58 (ESC[52X) Erase Ps Character(s) (default = 1) (ECH - 0,2 -> 0,2
2019-10-17T11:53:21.788+0530    DEBUG   terminal/csi.go:106     CSI 0x58 (ESC[35X) Erase Ps Character(s) (default = 1) (ECH - 17,3 -> 17,3
2019-10-17T11:53:21.789+0530    DEBUG   terminal/csi.go:106     CSI 0x6C (ESC[25l) Reset Mode (RM) - 17,3 -> 17,3
2019-10-17T11:53:21.792+0530    ERROR   terminal/output.go:117  Error handling escape sequence: Unsupported CSI 25l code
github.com/liamg/aminal/terminal.(*Terminal).processInput
        C:/Users/unifize/go/src/github.com/liamg/aminal/terminal/output.go:117
2019-10-17T11:53:21.793+0530    DEBUG   terminal/csi.go:106     CSI 0x48 (ESC[H) Cursor Position [row;column] (default = [1,1]) (CUP) - 17,3 -> 0,0
2019-10-17T11:53:21.797+0530    DEBUG   terminal/csi.go:106     CSI 0x58 (ESC[88X) Erase Ps Character(s) (default = 1) (ECH - 43,0 -> 43,0
2019-10-17T11:53:21.798+0530    DEBUG   terminal/csi.go:106     CSI 0x58 (ESC[79X) Erase Ps Character(s) (default = 1) (ECH - 52,1 -> 52,1
2019-10-17T11:53:21.800+0530    DEBUG   terminal/csi.go:106     CSI 0x58 (ESC[131X) Erase Ps Character(s) (default = 1) (ECH - 0,2 -> 0,2
2019-10-17T11:53:21.800+0530    DEBUG   terminal/csi.go:106     CSI 0x58 (ESC[114X) Erase Ps Character(s) (default = 1) (ECH - 17,3 -> 17,3
2019-10-17T11:53:21.804+0530    DEBUG   terminal/csi.go:106     CSI 0x58 (ESC[131X) Erase Ps Character(s) (default = 1) (ECH - 0,4 -> 0,4
2019-10-17T11:53:21.804+0530    DEBUG   terminal/csi.go:106     CSI 0x58 (ESC[131X) Erase Ps Character(s) (default = 1) (ECH - 0,5 -> 0,5
2019-10-17T11:53:21.812+0530    DEBUG   terminal/csi.go:106     CSI 0x58 (ESC[131X) Erase Ps Character(s) (default = 1) (ECH - 0,6 -> 0,6
2019-10-17T11:53:21.813+0530    DEBUG   terminal/csi.go:106     CSI 0x58 (ESC[131X) Erase Ps Character(s) (default = 1) (ECH - 0,7 -> 0,7
2019-10-17T11:53:21.816+0530    DEBUG   terminal/csi.go:106     CSI 0x58 (ESC[131X) Erase Ps Character(s) (default = 1) (ECH - 0,8 -> 0,8
2019-10-17T11:53:21.818+0530    DEBUG   terminal/csi.go:106     CSI 0x58 (ESC[131X) Erase Ps Character(s) (default = 1) (ECH - 0,9 -> 0,9
2019-10-17T11:53:21.824+0530    DEBUG   terminal/csi.go:106     CSI 0x58 (ESC[131X) Erase Ps Character(s) (default = 1) (ECH - 0,10 -> 0,10
2019-10-17T11:53:21.824+0530    DEBUG   terminal/csi.go:106     CSI 0x58 (ESC[131X) Erase Ps Character(s) (default = 1) (ECH - 0,11 -> 0,11
2019-10-17T11:53:21.825+0530    DEBUG   terminal/csi.go:106     CSI 0x58 (ESC[131X) Erase Ps Character(s) (default = 1) (ECH - 0,12 -> 0,12
2019-10-17T11:53:21.828+0530    DEBUG   terminal/csi.go:106     CSI 0x58 (ESC[131X) Erase Ps Character(s) (default = 1) (ECH - 0,13 -> 0,13
2019-10-17T11:53:21.837+0530    DEBUG   terminal/csi.go:106     CSI 0x58 (ESC[131X) Erase Ps Character(s) (default = 1) (ECH - 0,14 -> 0,14
2019-10-17T11:53:21.839+0530    DEBUG   terminal/csi.go:106     CSI 0x58 (ESC[131X) Erase Ps Character(s) (default = 1) (ECH - 0,15 -> 0,15
2019-10-17T11:53:21.842+0530    DEBUG   terminal/csi.go:106     CSI 0x58 (ESC[131X) Erase Ps Character(s) (default = 1) (ECH - 0,16 -> 0,16
2019-10-17T11:53:21.843+0530    DEBUG   terminal/csi.go:106     CSI 0x58 (ESC[131X) Erase Ps Character(s) (default = 1) (ECH - 0,17 -> 0,17
2019-10-17T11:53:21.843+0530    DEBUG   terminal/csi.go:106     CSI 0x58 (ESC[131X) Erase Ps Character(s) (default = 1) (ECH - 0,18 -> 0,18
2019-10-17T11:53:21.844+0530    DEBUG   terminal/csi.go:106     CSI 0x58 (ESC[131X) Erase Ps Character(s) (default = 1) (ECH - 0,19 -> 0,19
2019-10-17T11:53:21.844+0530    DEBUG   terminal/csi.go:106     CSI 0x58 (ESC[131X) Erase Ps Character(s) (default = 1) (ECH - 0,20 -> 0,20
2019-10-17T11:53:21.845+0530    DEBUG   terminal/csi.go:106     CSI 0x58 (ESC[131X) Erase Ps Character(s) (default = 1) (ECH - 0,21 -> 0,21
2019-10-17T11:53:21.845+0530    DEBUG   terminal/csi.go:106     CSI 0x58 (ESC[131X) Erase Ps Character(s) (default = 1) (ECH - 0,22 -> 0,22
2019-10-17T11:53:21.846+0530    DEBUG   terminal/csi.go:106     CSI 0x58 (ESC[131X) Erase Ps Character(s) (default = 1) (ECH - 0,23 -> 0,23
2019-10-17T11:53:21.853+0530    DEBUG   terminal/csi.go:106     CSI 0x58 (ESC[131X) Erase Ps Character(s) (default = 1) (ECH - 0,24 -> 0,24
2019-10-17T11:53:21.855+0530    DEBUG   terminal/csi.go:106     CSI 0x58 (ESC[131X) Erase Ps Character(s) (default = 1) (ECH - 0,25 -> 0,25
2019-10-17T11:53:21.856+0530    DEBUG   terminal/csi.go:106     CSI 0x58 (ESC[131X) Erase Ps Character(s) (default = 1) (ECH - 0,26 -> 0,26
2019-10-17T11:53:21.857+0530    DEBUG   terminal/csi.go:106     CSI 0x58 (ESC[131X) Erase Ps Character(s) (default = 1) (ECH - 0,27 -> 0,27
2019-10-17T11:53:21.857+0530    DEBUG   terminal/csi.go:106     CSI 0x58 (ESC[131X) Erase Ps Character(s) (default = 1) (ECH - 0,28 -> 0,28
2019-10-17T11:53:21.858+0530    DEBUG   terminal/csi.go:106     CSI 0x58 (ESC[131X) Erase Ps Character(s) (default = 1) (ECH - 0,29 -> 0,29
2019-10-17T11:53:21.858+0530    DEBUG   terminal/csi.go:106     CSI 0x58 (ESC[131X) Erase Ps Character(s) (default = 1) (ECH - 0,30 -> 0,30
2019-10-17T11:53:21.859+0530    DEBUG   terminal/csi.go:106     CSI 0x58 (ESC[131X) Erase Ps Character(s) (default = 1) (ECH - 0,31 -> 0,31
2019-10-17T11:53:21.860+0530    DEBUG   terminal/csi.go:106     CSI 0x58 (ESC[131X) Erase Ps Character(s) (default = 1) (ECH - 0,32 -> 0,32
2019-10-17T11:53:21.860+0530    DEBUG   terminal/csi.go:106     CSI 0x58 (ESC[131X) Erase Ps Character(s) (default = 1) (ECH - 0,33 -> 0,33
2019-10-17T11:53:21.861+0530    DEBUG   terminal/csi.go:106     CSI 0x58 (ESC[131X) Erase Ps Character(s) (default = 1) (ECH - 0,34 -> 0,34
2019-10-17T11:53:21.870+0530    DEBUG   terminal/csi.go:106     CSI 0x58 (ESC[131X) Erase Ps Character(s) (default = 1) (ECH - 0,35 -> 0,35
2019-10-17T11:53:21.871+0530    DEBUG   terminal/csi.go:106     CSI 0x58 (ESC[131X) Erase Ps Character(s) (default = 1) (ECH - 0,36 -> 0,36
2019-10-17T11:53:21.871+0530    DEBUG   terminal/csi.go:106     CSI 0x58 (ESC[131X) Erase Ps Character(s) (default = 1) (ECH - 0,37 -> 0,37
2019-10-17T11:53:21.872+0530    DEBUG   terminal/csi.go:106     CSI 0x58 (ESC[131X) Erase Ps Character(s) (default = 1) (ECH - 0,38 -> 0,38
2019-10-17T11:53:21.872+0530    DEBUG   terminal/csi.go:106     CSI 0x58 (ESC[131X) Erase Ps Character(s) (default = 1) (ECH - 0,39 -> 0,39
2019-10-17T11:53:21.873+0530    DEBUG   terminal/csi.go:106     CSI 0x58 (ESC[131X) Erase Ps Character(s) (default = 1) (ECH - 0,40 -> 0,40
2019-10-17T11:53:21.874+0530    DEBUG   terminal/csi.go:106     CSI 0x58 (ESC[131X) Erase Ps Character(s) (default = 1) (ECH - 0,41 -> 0,41
2019-10-17T11:53:21.874+0530    DEBUG   terminal/csi.go:106     CSI 0x48 (ESC[4;18H) Cursor Position [row;column] (default = [1,1]) (CUP) - 0,41 -> 17,3
2019-10-17T11:53:21.875+0530    DEBUG   terminal/csi.go:106     CSI 0x68 (ESC[?25h) Set Mode (SM) - 17,3 -> 17,3

```
**Describe the bug**
The latency is pretty high when using VIM.

**To Reproduce**
Steps to reproduce the behavior:
1. Got the terminal through brew
2. Run the command "aminal"
3. Try to edit a file with VIM

**Expected behavior**
It should be as smooth or smoother than the mac built-in terminal  

**Screenshots**
May add an animated gif if necessary, but this is pretty straight forward to reproduce.

**Environment (please complete the following information):**
 - OS + Version: 
![image](https://user-images.githubusercontent.com/6054451/63030165-e1cddd80-be7f-11e9-9cbe-43892987217e.png)

 - Go Version [e.g. 1.10.1] - go version go1.12.8 darwin/amd64

 - Shell [e.g. Bash/Zsh] - bash

**Additional context**
Add any other context about the problem here.

**Logs**

**Is your feature request related to a problem? Please describe.**
Similar to #118, is aminal embeddable? This is a separate issue, because I want to embed the terminal emulation part of aminal within a command-line tool. I do not want to use the windowed GUI (because I want my tool to be run within terminal/cmd).

**Describe the solution you'd like**
My goal is to have a cross-platform command-line tool that uses aminal for terminal emulation (like GNU screen, or tmux) with a custom transport layer.

Question 1, **can I use aminal with a custom transport layer?** Question 2, **can I embed aminal within a command-line tool?**

**Describe alternatives you've considered**
I've looked at using GNU screen, but A) it's not cross plaform and B) I don't know how to make it work with my custom transport, without all kinds of gymnastics.

**Additional context**
I am working on a specialized tool that more or less connects to a console on a remote device via a TCP/IP tunnel. I would like to use aminal as a front-end to this tunneled console. My transport protocol is very non-standard and I can guarantee that I won't be able to find existing tools for this.
**Describe the bug**
It seems `aminal` has pretty awful performance compared to other options out there.

I saw someone else had tried a bunch of terminal emulators, benchmarking them simply by taking the `.txt` representation of the RFC 3261 (http://www.ietf.org/rfc/rfc3261.txt approx. 15k lines) and dumping the file contents on the screen, so I decided to try the same.

On `cmd.exe` I used the `timeit` command from https://www.microsoft.com/en-us/download/details.aspx?id=17657 as per https://stackoverflow.com/a/752307/3989287 to get execution time. On `bash` under Windows Subsystem for Linux I used the `time` command.

 - For `cmd.exe` I specifically executed: `timeit cmd /c type rfc3261.txt`
 - For `bash` on WSL I specifically executed: `time cat rfc3261.txt`

It typically seems that most time is always spent on the first run, likely due to them growing the buffer to the maximum size before becoming more performant, so I ran every test 3 times in a row in the same terminal without reopening it and recorded the range rounded to two decimals.

I compared:

 - `conhost` (the Windows default command prompt)
 - [Alacritty](https://github.com/jwilm/alacritty) 0.3.0
 - [Aminal](https://github.com/liamg/aminal/releases/tag/Nightly-develop-2019-04-22-8f0027d) 2019-04-22 8f0027d
 - [ConEmu](https://conemu.github.io/) 161206 x64
 - [Hyper](https://hyper.is/) 2.1.2

I set each console window to be 128x48 characters in size. I've configured ConEmu to use DejaVu Sans Monospace -font but the others are using whatever is their default.

I believe these were the defaults, but just in case: 

 - `Alacritty` had 10000 line buffer
 - `aminal` I believe defaults to 1000 line buffer
 - `ConEmu` had 10000 line buffer
 - `conhost` had 9001 line buffer
 - `Hyper` had 1000 line buffer

**The results I got**

`cmd.exe`:

 - `Alacritty`: 1.15 - 1.28s
 - `aminal`: 136.81 - 156.31s (2min 16.81s - 2min 36.31s)
 - `ConEmu`: 1.63 - 2.08s
 - `conhost`: 0.90 - 2.95s
 - `Hyper`: 1.14 - 1.30s

`bash`:

 - `Alacritty`: 1.20 - 1.50s
 - `aminal`: 126.61 - 147.89s (2m 6.61s - 2m 27.89s)
 - `ConEmu`: 0.79 - 1.75s
 - `conhost`: 0.94 - 4.13s
 - `Hyper`: 1.19 - 1.46s

The absolute values I got are less relevant (especially because of configuration differences), but the point is the relative difference of everything else being measured in seconds and `aminal` being consistently incredibly slow compared to any other alternative. It seems `aminal` was 35.8x to 134.7x slower than `conhost` (with `bash`, the `cmd.exe` differences fall in the ~75-85x range).


**To Reproduce**
Steps to reproduce the behavior:
1. Download http://www.ietf.org/rfc/rfc3261.txt
2. Launch `aminal`
3. (Optional) Start `bash`
4. Dump the contents of `rfc3261.txt` into the terminal with `type` or `cat`

**Expected behavior**
Printing out the file contents should take a time measured in seconds, not minutes.

**Environment (please complete the following information):**
 - Windows (Win10 1809) 
 - Aminal 2019-04-22 (8f0027d)
 - `cmd.exe` & WSL `bash`

**Additional context**
As additional notes `aminal` was the only one to keep an additional host terminal window open, was the most difficult to size to the desired size, and was the only one with issues with the clipboard (pasting multiple lines of text ended up with extra blank lines in between the lines).

![image](https://user-images.githubusercontent.com/1296558/56924505-bba14f00-6ad5-11e9-9961-1ac5d7f09630.png)

I realize this is software in development and so on, but thought I'd mention these as well.

1.555757467773259e+09	error	terminal/output.go:117	Error handling escape sequence: Unknown OSC control sequence: 1;../liamg/aminal
github.com/liamg/aminal/terminal.(*Terminal).processInput
	/tmp/.gobuild/src/github.com/liamg/aminal/terminal/output.go:117
I downloaded the latest release here:

https://github.com/liamg/aminal/releases/tag/Nightly-develop-2019-03-23-f100fac

then ran it from Finder:


````

x-MacBook-Pro:~ apple$ /bin/aminal-darwin-amd64 ; exit;
1.554379706551231e+09	info	aminal/main.go:54	Allocating pty...
1.5543797066228092e+09	info	aminal/main.go:79	Creating terminal...
1.5543797069357078e+09	info	gui/gui.go:826	OpenGL version 4.1 INTEL-12.8.38
1.554379706976321e+09	error	terminal/output.go:130	Error handling escape sequence: Unsupported CSI ?1034h code
github.com/liamg/aminal/terminal.(*Terminal).processInput
	/Users/travis/gopath/src/github.com/liamg/aminal/terminal/output.go:130
fatal error: unexpected signal during runtime execution
[signal SIGSEGV: segmentation violation code=0x1 addr=0x0 pc=0x0]

runtime stack:
runtime.throw(0x4444b5c, 0x2a)
	/Users/travis/.gimme/versions/go1.11.6.darwin.amd64/src/runtime/panic.go:608 +0x72
runtime.sigpanic()
	/Users/travis/.gimme/versions/go1.11.6.darwin.amd64/src/runtime/signal_unix.go:374 +0x2f2
runtime.asmcgocall(0x7ffeefbff408, 0x4055e72)
	/Users/travis/.gimme/versions/go1.11.6.darwin.amd64/src/runtime/asm_amd64.s:641 +0x70

goroutine 1 [syscall, locked to thread]:
runtime.cgocall(0x43358c0, 0xc0000d74f8, 0x29)
	/Users/travis/.gimme/versions/go1.11.6.darwin.amd64/src/runtime/cgocall.go:128 +0x5e fp=0xc0000d74c0 sp=0xc0000d7488 pc=0x400521e
github.com/liamg/aminal/vendor/github.com/go-gl/gl/all-core/gl._Cfunc_glowNamedBufferSubData(0x0, 0xc000000002, 0x0, 0x60, 0xc000020300)
	_cgo_gotypes.go:17451 +0x45 fp=0xc0000d74f8 sp=0xc0000d74c0 pc=0x42b63b5
github.com/liamg/aminal/vendor/github.com/go-gl/gl/all-core/gl.NamedBufferSubData.func1(0x0, 0xc000000002, 0x0, 0x60, 0xc000020300)
	/Users/travis/gopath/src/github.com/liamg/aminal/vendor/github.com/go-gl/gl/all-core/gl/package.go:13950 +0x7c fp=0xc0000d7530 sp=0xc0000d74f8 pc=0x42d593c
github.com/liamg/aminal/vendor/github.com/go-gl/gl/all-core/gl.NamedBufferSubData(0x2, 0x0, 0x60, 0xc000020300)
	/Users/travis/gopath/src/github.com/liamg/aminal/vendor/github.com/go-gl/gl/all-core/gl/package.go:13950 +0x53 fp=0xc0000d7568 sp=0xc0000d7530 pc=0x42b8953
github.com/liamg/aminal/glfont.(*Font).Print(0xc000062060, 0x4100000000000000, 0xc0000141f0, 0xa, 0x10, 0x3f5fdfe03f68e8e9)
	/Users/travis/gopath/src/github.com/liamg/aminal/glfont/font.go:160 +0x2dd fp=0xc0000d76d0 sp=0xc0000d7568 pc=0x42ebafd
github.com/liamg/aminal/gui.(*OpenGLRenderer).DrawCellText(0xc000112100, 0xc0000141f0, 0xa, 0x0, 0x0, 0x3f68e8e93f800000, 0x3f56d6d73f5fdfe0, 0x0)
	/Users/travis/gopath/src/github.com/liamg/aminal/gui/renderer.go:154 +0x12c fp=0xc0000d7728 sp=0xc0000d76d0 pc=0x4317b0c
github.com/liamg/aminal/gui.(*GUI).renderTerminalData(0xc0000f6dc0, 0x40fe501)
	/Users/travis/gopath/src/github.com/liamg/aminal/gui/gui.go:685 +0x816 fp=0xc0000d7b08 sp=0xc0000d7728 pc=0x4311706
github.com/liamg/aminal/gui.(*GUI).redraw(0xc0000f6dc0, 0xc0000d7b01)
	/Users/travis/gopath/src/github.com/liamg/aminal/gui/gui.go:743 +0x40 fp=0xc0000d7b28 sp=0xc0000d7b08 pc=0x43120b0
github.com/liamg/aminal/gui.(*GUI).Render(0xc0000f6dc0, 0x0, 0x0)
	/Users/travis/gopath/src/github.com/liamg/aminal/gui/gui.go:493 +0xd94 fp=0xc0000d7e28 sp=0xc0000d7b28 pc=0x430ff24
main.initialize(0x0, 0x0)
	/Users/travis/gopath/src/github.com/liamg/aminal/main.go:101 +0x4f4 fp=0xc0000d7f78 sp=0xc0000d7e28 pc=0x431ef24
main.main()
	/Users/travis/gopath/src/github.com/liamg/aminal/main.go:25 +0x29 fp=0xc0000d7f98 sp=0xc0000d7f78 pc=0x431ea19
runtime.main()
	/Users/travis/.gimme/versions/go1.11.6.darwin.amd64/src/runtime/proc.go:201 +0x207 fp=0xc0000d7fe0 sp=0xc0000d7f98 pc=0x402e767
runtime.goexit()
	/Users/travis/.gimme/versions/go1.11.6.darwin.amd64/src/runtime/asm_amd64.s:1333 +0x1 fp=0xc0000d7fe8 sp=0xc0000d7fe0 pc=0x405a4f1

goroutine 52 [chan receive]:
main.initialize.func1(0xc0000b6370, 0xc0000a4090)
	/Users/travis/gopath/src/github.com/liamg/aminal/main.go:39 +0x37
created by main.initialize
	/Users/travis/gopath/src/github.com/liamg/aminal/main.go:37 +0x11c

goroutine 56 [syscall]:
syscall.Syscall(0x3, 0x3, 0xc0009f2000, 0x1000, 0xc00009a000, 0xc000028a00, 0x0)
	/Users/travis/.gimme/versions/go1.11.6.darwin.amd64/src/syscall/asm_darwin_amd64.s:16 +0x5
syscall.read(0x3, 0xc0009f2000, 0x1000, 0x1000, 0xc00009a001, 0x0, 0x0)
	/Users/travis/.gimme/versions/go1.11.6.darwin.amd64/src/syscall/zsyscall_darwin_amd64.go:947 +0x5a
syscall.Read(0x3, 0xc0009f2000, 0x1000, 0x1000, 0x20, 0x0, 0x0)
	/Users/travis/.gimme/versions/go1.11.6.darwin.amd64/src/syscall/syscall_unix.go:172 +0x49
internal/poll.(*FD).Read(0xc0000622a0, 0xc0009f2000, 0x1000, 0x1000, 0x0, 0x0, 0x0)
	/Users/travis/.gimme/versions/go1.11.6.darwin.amd64/src/internal/poll/fd_unix.go:165 +0x117
os.(*File).read(0xc0000a40a0, 0xc0009f2000, 0x1000, 0x1000, 0x20, 0x0, 0x0)
	/Users/travis/.gimme/versions/go1.11.6.darwin.amd64/src/os/file_unix.go:249 +0x4e
os.(*File).Read(0xc0000a40a0, 0xc0009f2000, 0x1000, 0x1000, 0xc000c140dc, 0xc000035e94, 0x0)
	/Users/travis/.gimme/versions/go1.11.6.darwin.amd64/src/os/file.go:108 +0x69
github.com/liamg/aminal/platform.(*unixPty).Read(0xc00000d600, 0xc0009f2000, 0x1000, 0x1000, 0x20, 0xc000c14058, 0x0)
	/Users/travis/gopath/src/github.com/liamg/aminal/platform/unixpty.go:32 +0xbc
bufio.(*Reader).fill(0xc000035f20)
	/Users/travis/.gimme/versions/go1.11.6.darwin.amd64/src/bufio/bufio.go:100 +0x10f
bufio.(*Reader).ReadRune(0xc000035f20, 0xc000035e94, 0x1, 0x0, 0x0)
	/Users/travis/.gimme/versions/go1.11.6.darwin.amd64/src/bufio/bufio.go:273 +0x31
github.com/liamg/aminal/terminal.(*Terminal).Read(0xc000114300, 0xc000035fc0, 0x4173ea9)
	/Users/travis/gopath/src/github.com/liamg/aminal/terminal/terminal.go:356 +0x13c
github.com/liamg/aminal/gui.(*GUI).Render.func3(0xc0000f6dc0)
	/Users/travis/gopath/src/github.com/liamg/aminal/gui/gui.go:453 +0x33
created by github.com/liamg/aminal/gui.(*GUI).Render
	/Users/travis/gopath/src/github.com/liamg/aminal/gui/gui.go:452 +0xa65

goroutine 55 [syscall]:
syscall.Syscall6(0x7, 0x7870, 0xc000037e1c, 0x0, 0xc0001ae000, 0x0, 0x0, 0xc0001ae000, 0x0, 0xc00005e000)
	/Users/travis/.gimme/versions/go1.11.6.darwin.amd64/src/syscall/asm_darwin_amd64.s:41 +0x5
syscall.wait4(0x7870, 0xc000037e1c, 0x0, 0xc0001ae000, 0x90, 0x441efc0, 0x403f201)
	/Users/travis/.gimme/versions/go1.11.6.darwin.amd64/src/syscall/zsyscall_darwin_amd64.go:34 +0x7b
syscall.Wait4(0x7870, 0xc000037e6c, 0x0, 0xc0001ae000, 0x0, 0xc000037e80, 0x403f149)
	/Users/travis/.gimme/versions/go1.11.6.darwin.amd64/src/syscall/syscall_bsd.go:129 +0x51
os.(*Process).wait(0xc0000163c0, 0x4015675, 0xc00000d6d0, 0xc000037fb0)
	/Users/travis/.gimme/versions/go1.11.6.darwin.amd64/src/os/exec_unix.go:38 +0x7b
os.(*Process).Wait(0xc0000163c0, 0xc000037f58, 0x40076ee, 0xc000062598)
	/Users/travis/.gimme/versions/go1.11.6.darwin.amd64/src/os/exec.go:125 +0x2b
os/exec.(*Cmd).Wait(0xc00009e580, 0x0, 0xc000037f90)
	/Users/travis/.gimme/versions/go1.11.6.darwin.amd64/src/os/exec/exec.go:465 +0x5b
github.com/liamg/aminal/platform.(*cmdProc).Wait(0xc0000a4100, 0x1, 0x4173ea9)
	/Users/travis/gopath/src/github.com/liamg/aminal/platform/cmdProc.go:18 +0x2e
main.initialize.func3(0x491c0c0, 0xc0000a4100, 0xc0000a4090, 0xc0000f6dc0)
	/Users/travis/gopath/src/github.com/liamg/aminal/main.go:94 +0x35
created by main.initialize
	/Users/travis/gopath/src/github.com/liamg/aminal/main.go:93 +0x5c0

goroutine 57 [select]:
net/http.(*Transport).getConn(0x4b8e420, 0xc0001921e0, 0x0, 0x44482b9, 0x5, 0xc0000be240, 0x12, 0x0, 0x0, 0x8)
	/Users/travis/.gimme/versions/go1.11.6.darwin.amd64/src/net/http/transport.go:1004 +0x58e
net/http.(*Transport).roundTrip(0x4b8e420, 0xc000114100, 0xc000192120, 0xc00051e040, 0xc00051e034)
	/Users/travis/.gimme/versions/go1.11.6.darwin.amd64/src/net/http/transport.go:451 +0x690
net/http.(*Transport).RoundTrip(0x4b8e420, 0xc000114100, 0x4b8e420, 0xbf219acf3a26a090, 0x96daa7f8)
	/Users/travis/.gimme/versions/go1.11.6.darwin.amd64/src/net/http/roundtrip.go:17 +0x35
net/http.send(0xc000114000, 0x491a200, 0x4b8e420, 0xbf219acf3a26a090, 0x96daa7f8, 0x4b970c0, 0xc00000e020, 0xbf219acf3a26a090, 0xc000047cd0, 0x1)
	/Users/travis/.gimme/versions/go1.11.6.darwin.amd64/src/net/http/client.go:250 +0x14b
net/http.(*Client).send(0xc000192030, 0xc000114000, 0xbf219acf3a26a090, 0x96daa7f8, 0x4b970c0, 0xc00000e020, 0x0, 0x1, 0x0)
	/Users/travis/.gimme/versions/go1.11.6.darwin.amd64/src/net/http/client.go:174 +0xfa
net/http.(*Client).do(0xc000192030, 0xc000114000, 0x0, 0x0, 0x0)
	/Users/travis/.gimme/versions/go1.11.6.darwin.amd64/src/net/http/client.go:641 +0x2a8
net/http.(*Client).Do(0xc000192030, 0xc000114000, 0x44482b9, 0x39, 0x0)
	/Users/travis/.gimme/versions/go1.11.6.darwin.amd64/src/net/http/client.go:509 +0x35
github.com/liamg/aminal/version.downloadFile(0x44482b9, 0x39, 0x0, 0x0, 0x0, 0x0, 0x0)
	/Users/travis/gopath/src/github.com/liamg/aminal/version/version.go:64 +0xc8
github.com/liamg/aminal/version.getLatestRelease(0x0, 0x0, 0x0)
	/Users/travis/gopath/src/github.com/liamg/aminal/version/version.go:26 +0x3a
github.com/liamg/aminal/version.GetNewerRelease(0x0, 0x0, 0x0)
	/Users/travis/gopath/src/github.com/liamg/aminal/version/version.go:41 +0x26
github.com/liamg/aminal/gui.(*GUI).Render.func4(0xc000010110, 0xc0000f6dc0)
	/Users/travis/gopath/src/github.com/liamg/aminal/gui/gui.go:477 +0x22
created by github.com/liamg/aminal/gui.(*GUI).Render
	/Users/travis/gopath/src/github.com/liamg/aminal/gui/gui.go:476 +0xb42

goroutine 58 [runnable]:
github.com/liamg/aminal/gui.(*GUI).waker(0xc0000f6dc0, 0xc000020240, 0xc000014194)
	/Users/travis/gopath/src/github.com/liamg/aminal/gui/gui.go:577 +0x162
created by github.com/liamg/aminal/gui.(*GUI).Render
	/Users/travis/gopath/src/github.com/liamg/aminal/gui/gui.go:490 +0xbfe

goroutine 21 [chan receive]:
github.com/liamg/aminal/terminal.(*Terminal).processInput(0xc000114300, 0xc000c14000)
	/Users/travis/gopath/src/github.com/liamg/aminal/terminal/output.go:121 +0x5c
created by github.com/liamg/aminal/terminal.(*Terminal).Read
	/Users/travis/gopath/src/github.com/liamg/aminal/terminal/terminal.go:354 +0x110

goroutine 5 [select]:
net/http.setRequestCancel.func3(0x0, 0xc000192120, 0xc0009fc000, 0xc00051e040, 0xc000084180)
	/Users/travis/.gimme/versions/go1.11.6.darwin.amd64/src/net/http/client.go:321 +0xcf
created by net/http.setRequestCancel
	/Users/travis/.gimme/versions/go1.11.6.darwin.amd64/src/net/http/client.go:320 +0x24e

goroutine 6 [chan receive]:
net/http.(*persistConn).addTLS(0xc0000c0480, 0xc0000be240, 0xe, 0x0, 0xc0000be24f, 0x3)
	/Users/travis/.gimme/versions/go1.11.6.darwin.amd64/src/net/http/transport.go:1177 +0x1a7
net/http.(*Transport).dialConn(0x4b8e420, 0x491da00, 0xc000098080, 0x0, 0x44482b9, 0x5, 0xc0000be240, 0x12, 0x90c171a1d1e0001, 0x2b140b0514011400, ...)
	/Users/travis/.gimme/versions/go1.11.6.darwin.amd64/src/net/http/transport.go:1250 +0x15ad
net/http.(*Transport).getConn.func4(0x4b8e420, 0x491da00, 0xc000098080, 0xc000192210, 0xc0000841e0)
	/Users/travis/.gimme/versions/go1.11.6.darwin.amd64/src/net/http/transport.go:999 +0x6e
created by net/http.(*Transport).getConn
	/Users/travis/.gimme/versions/go1.11.6.darwin.amd64/src/net/http/transport.go:998 +0x3d7

goroutine 36 [IO wait]:
internal/poll.runtime_pollWait(0x5f10c30, 0x72, 0xc000044940)
	/Users/travis/.gimme/versions/go1.11.6.darwin.amd64/src/runtime/netpoll.go:173 +0x66
internal/poll.(*pollDesc).wait(0xc0009f4198, 0x72, 0xffffffffffffff00, 0x491b3c0, 0x4b5c0f8)
	/Users/travis/.gimme/versions/go1.11.6.darwin.amd64/src/internal/poll/fd_poll_runtime.go:85 +0x9a
internal/poll.(*pollDesc).waitRead(0xc0009f4198, 0xc0000e1400, 0x400, 0x400)
	/Users/travis/.gimme/versions/go1.11.6.darwin.amd64/src/internal/poll/fd_poll_runtime.go:90 +0x3d
internal/poll.(*FD).Read(0xc0009f4180, 0xc0000e1400, 0x400, 0x400, 0x0, 0x0, 0x0)
	/Users/travis/.gimme/versions/go1.11.6.darwin.amd64/src/internal/poll/fd_unix.go:169 +0x1d6
net.(*netFD).Read(0xc0009f4180, 0xc0000e1400, 0x400, 0x400, 0xc0000e1400, 0x0, 0x400)
	/Users/travis/.gimme/versions/go1.11.6.darwin.amd64/src/net/fd_unix.go:202 +0x4f
net.(*conn).Read(0xc0009f8010, 0xc0000e1400, 0x400, 0x400, 0x0, 0x0, 0x0)
	/Users/travis/.gimme/versions/go1.11.6.darwin.amd64/src/net/net.go:177 +0x68
crypto/tls.(*block).readFromUntil(0xc000c760f0, 0x5e71820, 0xc0009f8010, 0x5, 0xc0009f8010, 0x418bf2f)
	/Users/travis/.gimme/versions/go1.11.6.darwin.amd64/src/crypto/tls/conn.go:492 +0x89
crypto/tls.(*Conn).readRecord(0xc000c92000, 0x48ced16, 0xc000044c90, 0x0)
	/Users/travis/.gimme/versions/go1.11.6.darwin.amd64/src/crypto/tls/conn.go:593 +0xdd
crypto/tls.(*Conn).readHandshake(0xc000c92000, 0xc000c94016, 0xc000c94000, 0xb6, 0xb6)
	/Users/travis/.gimme/versions/go1.11.6.darwin.amd64/src/crypto/tls/conn.go:955 +0x9a
crypto/tls.(*clientHandshakeState).handshake(0xc000044e80, 0xc0000f6500, 0x0)
	/Users/travis/.gimme/versions/go1.11.6.darwin.amd64/src/crypto/tls/handshake_client.go:191 +0xaa
crypto/tls.(*Conn).clientHandshake(0xc000c92000, 0x48ceda0, 0xc000c92120)
	/Users/travis/.gimme/versions/go1.11.6.darwin.amd64/src/crypto/tls/handshake_client.go:168 +0x397
crypto/tls.(*Conn).Handshake(0xc000c92000, 0x0, 0x0)
	/Users/travis/.gimme/versions/go1.11.6.darwin.amd64/src/crypto/tls/conn.go:1272 +0xf1
net/http.(*persistConn).addTLS.func2(0x0, 0xc000c92000, 0xc0000b6280, 0xc0000a6780)
	/Users/travis/.gimme/versions/go1.11.6.darwin.amd64/src/net/http/transport.go:1171 +0x42
created by net/http.(*persistConn).addTLS
	/Users/travis/.gimme/versions/go1.11.6.darwin.amd64/src/net/http/transport.go:1167 +0x17e
logout
Saving session...
...copying shared history...
...saving history...truncating history files...
...completed.
Deleting expired sessions...27 completed.

[Process completed]


````

This is a smart approach. Virtualise all the cross platform OS terminal issues by using an opengl canvas !

Would this allow me to program it to have many tiling windows etc.
Basically what tmux does.
Then i can load up a daemon into each view and see the logs streaming through for each daemon.
Or can i also use REPL also to control the daemons respectively.

Hope i am explaining myself ...




