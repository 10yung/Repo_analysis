https://github.com/firebase/quickstart-android/blob/bf928f5b7385637bf14fd91505429322951d3914/auth/app/src/main/java/com/google/firebase/quickstart/auth/java/PhoneAuthActivity.java#L228
### Step 1: Describe your environment

  * Android device: Xiaomi Mi A1
  * Android OS version: Android 8.1.0
  * Google Play Services version: 4.3.3
  * Firebase-core version: 17.2.1
  * Firebase-auth version: 19.2.0
### Step 2: Describe the problem:

When the app in the background is killed while performing Apple sign-in in Chrome, the authentication behaves inconsistently.

#### Steps to reproduce:
  1. Go to `GenericIdpActivity`
  2. Start the Apple sign-in flow
  3. Before finishing the sign-in flow, terminate the app in Android Studio to simulate system killing the app
  4. Finish signing in
  5. Both `auth.currentUser` and `auth.pendingAuthResult` are `null` in `onStart()`

#### Observed Results:
If I then restart the app, I am **suddenly** signed in and the pending result is present. And it doesn't disappear no matter what I do.

#### Expected Results:
The pending result shouldn't be `null` if the app is killed while in the background. That is the whole point of the pending result. **Generally, the current behavior when the app is killed seems really inconsistent and buggy.**

#### Related SO question:
 https://stackoverflow.com/questions/59718353/why-does-firebase-pendingauthresult-return-null

android.content.res.Resources$NotFoundException: 
  at android.content.res.Resources.getText (Resources.java:348)
  at android.content.res.Resources.getString (Resources.java:441)
  at android.content.Context.getString (Context.java:578)
  at com.google.firebase.messaging.zzb.zzb
  at com.google.firebase.messaging.zzb.zza
  at com.google.firebase.messaging.zzd.zza
  at com.google.firebase.messaging.FirebaseMessagingService.zzc
  at com.google.firebase.messaging.zze.run
  at java.util.concurrent.ThreadPoolExecutor.runWorker (ThreadPoolExecutor.java:1167)
  at java.util.concurrent.ThreadPoolExecutor$Worker.run (ThreadPoolExecutor.java:641)
  at com.google.android.gms.common.util.concurrent.zza.run (Unknown Source:2)
  at java.lang.Thread.run (Thread.java:764)

it happened after we updated FCM library to latest version and using Androidx.

    implementation 'com.google.android.gms:play-services-location:17.0.0'
    implementation 'com.google.android.gms:play-services-maps:17.0.0'
    implementation 'com.google.android.gms:play-services-auth-api-phone:17.3.0'
    implementation 'com.google.android.gms:play-services-measurement-api:17.2.1'
    implementation 'com.google.android.gms:play-services-measurement-base:17.2.1'
    implementation 'com.google.firebase:firebase-messaging:20.1.0'
    implementation 'com.google.firebase:firebase-iid:20.0.2'
    implementation 'com.google.firebase:firebase-core:17.2.1'
    implementation 'com.google.firebase:firebase-analytics:17.2.1'


public class MyFirebaseMessagingService extends FirebaseMessagingService {

    private static final String NOTIFICATION_CHANNEL_ID = "...";
    private static final String NOTIFICATION_CHANNEL_NAME = "...";
    private static final String NOTIFICATION_CHANNEL_DESC = "...";

    @Override
    public void onNewToken(String token) {
        try {
            saveToken(token);
        } catch (Exception e) {
            e.printStackTrace();
        }

        FirebaseMessaging.getInstance().subscribeToTopic("...");
        FirebaseMessaging.getInstance().subscribeToTopic("version" + Build.VERSION.RELEASE);
    }

    private void saveToken(String token) throws Exception {
      ...
    }

    @Override
    public void onMessageReceived(RemoteMessage remoteMessage) {
        try {
            showNotification(remoteMessage);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void showNotification(RemoteMessage remoteMessage) throws Exception {
        NotificationManager notificationManager = (NotificationManager) App.getContext().getSystemService(Context.NOTIFICATION_SERVICE);
        if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {
            NotificationChannel channel = new NotificationChannel(NOTIFICATION_CHANNEL_ID,
                    NOTIFICATION_CHANNEL_NAME,
                    NotificationManager.IMPORTANCE_DEFAULT);
            channel.setDescription(NOTIFICATION_CHANNEL_DESC);
            notificationManager.createNotificationChannel(channel);
        }
        NotificationCompat.Builder b = new NotificationCompat.Builder(App.getContext(), NOTIFICATION_CHANNEL_ID);

        if (String.valueOf(remoteMessage.getData().get("targetId")).equals("128")) {
            Logger.e("LastIdddd", "showNotification: " + remoteMessage.getData().get("entityId"));

            if (Dao.getInstance().Preferences.getString(Preferenses.ReceiptNotificationLastID, "").equals("0") ||
                    Dao.getInstance().Preferences.getString(Preferenses.ReceiptNotificationLastID, "").equals("") ||
                    Dao.getInstance().Preferences.getString(Preferenses.ReceiptNotificationLastID, "") == null) {
                Dao.getInstance().Preferences.setString(Preferenses.ReceiptNotificationLastID, remoteMessage.getData().get("entityId"));
                Logger.e("LastId", "showNotification: " + remoteMessage.getData().get("entityId"));
            }

            int notificationCount = Dao.getInstance().Preferences.getInteger(Preferenses.ReceiptNotificationCount, 0);
            notificationCount++;
            Dao.getInstance().Preferences.setInteger(Preferenses.ReceiptNotificationCount, notificationCount);
            b.setContentText("شما " + notificationCount + " پیام خوانده نشده دارید");
            b.setStyle(new NotificationCompat.BigTextStyle(b)
                    .bigText("شما " + notificationCount + " پیام خوانده نشده دارید\n" + remoteMessage.getData().get("body"))
                    .setBigContentTitle(remoteMessage.getData().get("title"))
                    .setSummaryText("You have " + notificationCount + " Notifications")
            );

            b.setContentTitle(remoteMessage.getData().get("title"));
            b.setContentText(remoteMessage.getData().get("body"));

            Intent intent = new Intent(App.getContext(), MainActivity.class);
            intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
            intent.putExtra("isNotif", "true");
            intent.putExtra("targetId", String.valueOf(remoteMessage.getData().get("targetId")));
            intent.putExtra("entityId", String.valueOf(remoteMessage.getData().get("entityId")));
            intent.putExtra("popup", String.valueOf(remoteMessage.getData().get("popup")));
            intent.putExtra("popup_title", String.valueOf(remoteMessage.getData().get("popup_title")));
            intent.putExtra("popup_text", String.valueOf(remoteMessage.getData().get("popup_text")));
            intent.putExtra("url", String.valueOf(remoteMessage.getData().get("url")));

            PendingIntent contentIntent = PendingIntent.getActivity(App.getContext(), 0, intent, PendingIntent.FLAG_UPDATE_CURRENT);
            b.setAutoCancel(true)
                    .setDefaults(Notification.DEFAULT_ALL)
                    .setWhen(System.currentTimeMillis())
                    .setSmallIcon(R.drawable.ic_statusbar)
                    .setColor(ContextCompat.getColor(this, R.color.orange));


            if (remoteMessage.getData() != null) {
                b.setContentIntent(contentIntent);
            }

            notificationManager.notify(2, b.build());

        } else {
            b.setContentTitle(remoteMessage.getNotification().getTitle());
            b.setContentText(remoteMessage.getNotification().getBody());

            Intent intent = new Intent(App.getContext(), MainActivity.class);
            intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
            intent.putExtra("isNotif", "true");
            intent.putExtra("targetId", String.valueOf(remoteMessage.getData().get("targetId")));
            intent.putExtra("entityId", String.valueOf(remoteMessage.getData().get("entityId")));
            intent.putExtra("popup", String.valueOf(remoteMessage.getData().get("popup")));
            intent.putExtra("popup_title", String.valueOf(remoteMessage.getData().get("popup_title")));
            intent.putExtra("popup_text", String.valueOf(remoteMessage.getData().get("popup_text")));
            intent.putExtra("url", String.valueOf(remoteMessage.getData().get("url")));
            intent.putExtra(KEY_ID_INSTITUTE, String.valueOf(remoteMessage.getData().get(KEY_ID_INSTITUTE)));
            intent.putExtra(KEY_PRICE, String.valueOf(remoteMessage.getData().get(KEY_PRICE)));

            PendingIntent contentIntent = PendingIntent.getActivity(App.getContext(), 0, intent, PendingIntent.FLAG_UPDATE_CURRENT);
            b.setAutoCancel(true)
                    .setDefaults(Notification.DEFAULT_ALL)
                    .setWhen(System.currentTimeMillis())
                    .setSmallIcon(R.drawable.ic_statusbar)
                    .setColor(ContextCompat.getColor(this, R.color.orange));

            if (remoteMessage.getData() != null) {
                b.setContentIntent(contentIntent);
            }

            notificationManager.notify(1, b.build());
        }
    }

}

_Originally posted by @mehdi-salehi in https://github.com/firebase/quickstart-android/issues/1037#issuecomment-573282864_


The confidence score when I invoke method `getConfidence()` with all text blocks, text lines, text element is null.
So is `getRecognizedLanguages()`.
I am using the newest version firebase-ml-vision:24.0.1.
thanks for any help!
https://github.com/firebase/quickstart-android/blob/d14bf9cb018892c8eff94b95bd83f0d6a8b363a9/messaging/app/src/main/AndroidManifest.xml#L50-L56
### Step 1: Describe your environment

  * Android device: SAMSUNG
  * Android OS version: 9,8
  * Google Play Services version: _____
  * Firebase/Play Services SDK version: 17.2.1-4.3.3
  
### Step 2: Describe the problem:
Crash on push  notification happens
#### Steps to reproduce:

  1. _____
  2. _____
  3. _____
  
#### Observed Results:
Fatal Exception: android.content.res.Resources$NotFoundException: String resource ID #0x0
       at android.content.res.Resources.getText + 363(Resources.java:363)
       at android.content.res.Resources.getString + 456(Resources.java:456)
       at android.content.Context.getString + 580(Context.java:580)
       at com.google.firebase.messaging.zzb.zzb + 234(zzb.java:234)
       at com.google.firebase.messaging.zzb.zza + 6(zzb.java:6)
       at com.google.firebase.messaging.zzd.zza + 33(zzd.java:33)
       at com.google.firebase.messaging.FirebaseMessagingService.zzc + 69(FirebaseMessagingService.java:69)
       at com.google.firebase.messaging.zze.run + 2(zze.java:2)
       at java.util.concurrent.ThreadPoolExecutor.runWorker + 1167(ThreadPoolExecutor.java:1167)
       at java.util.concurrent.ThreadPoolExecutor$Worker.run + 641(ThreadPoolExecutor.java:641)
       at com.google.android.gms.common.util.concurrent.zza.run + 6(zza.java:6)
       at java.lang.Thread.run + 764(Thread.java:764)
  
#### Expected Results:

  
#### Relevant Code:

Brought to you by your friendly [Repository Gardener](https://github.com/GoogleCloudPlatform/repository-gardener).
I have implemented buttons and functions to delete the posts.

Can you give me a code review?
It actually works very well.