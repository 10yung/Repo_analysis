Would you expect this module to work correctly in an Azure function? In my function I can successfully Open new Word documents and Save them to the function local storage but they do populate with any content I send to them so I just end up with 5KB empty files.
In the "Example-AddCustomProperty.ps1" example, a DocProperty field is added to the document. This example then continues to obtain all the document properties and add them as text to the document.

Is there a way to add a document property to the document as a field that is automatically updated if the document property is changed?

Essentially looking for the same functionality as "Insert Field" that is provided by Word.

```
Import-Module PSWriteWord -Force

$FilePath1 = "$($Env:USERPROFILE)\Desktop\EmptyDocument.docx"
$FilePath2 = "$($Env:USERPROFILE)\Desktop\PSWriteWord-Example-PageOrientation1.docx"
$FileOutput = "$($Env:USERPROFILE)\Desktop\Output.docx"

Merge-WordDocument -FilePath1 $FilePath1 -FilePath2 $FilePath2 -FileOutput $FileOutput -OpenDocument -Supress $true

```
This works - new document

```
Import-Module PSWriteWord -Force

$FilePath = "$Env:USERPROFILE\Desktop\PSWriteWord-Example-TableOfContent3.docx"

$WordDocument = New-WordDocument -FilePath $FilePath
$Toc = Add-WordTOC -WordDocument $WordDocument -Title 'Table of content' -HeaderStyle Heading2
Add-WordSection -WordDocument $WordDocument -PageBreak
Add-WordText -WordDocument $WordDocument -Text 'This is my first title' -HeadingType Heading1
Add-WordSection -WordDocument $WordDocument -PageBreak
Add-WordText -WordDocument $WordDocument -Text 'This is my second title' -HeadingType Heading1 -Color Red -CapsStyle caps
Add-WordSection -WordDocument $WordDocument -PageBreak
Add-WordText  -WordDocument $WordDocument -Text 'This is my third title' -HeadingType Heading2 -Italic $true -Bold $true
Save-WordDocument $WordDocument

### Start Word with file
Invoke-Item $FilePath
```

This doesn't work - Load document
```
Import-Module PSWriteWord -Force

$FilePath = "$Env:USERPROFILE\Desktop\PSWriteWord-Example-TableOfContent7.docx"
$FilePathTemplate = "$PSScriptRoot\Templates\WordTemplate.docx"

$WordDocument = Get-WordDocument -FilePath $FilePathTemplate
$Toc = Add-WordTOC -WordDocument $WordDocument -Title 'Table of content' -HeaderStyle Heading2
Add-WordSection -WordDocument $WordDocument -PageBreak
Add-WordText -WordDocument $WordDocument -Text 'This is my first title' -HeadingType Heading1
Add-WordSection -WordDocument $WordDocument -PageBreak
Add-WordText -WordDocument $WordDocument -Text 'This is my second title' -HeadingType Heading1 -Color Red -CapsStyle caps
Add-WordSection -WordDocument $WordDocument -PageBreak
Add-WordText  -WordDocument $WordDocument -Text 'This is my third title' -HeadingType Heading2 -Italic $true -Bold $true

$WordDocument.Xml
Save-WordDocument $WordDocument -FilePath $FilePath

### Start Word with file
Invoke-Item $FilePath
```

This issue was reported by me - https://github.com/xceedsoftware/DocX/issues/245

Is support for styles on the roadmap?
As in subject
![image](https://user-images.githubusercontent.com/15063294/43073282-46450ec4-8e79-11e8-9d64-9e549920a6dd.png)

This leads to a:

![image](https://user-images.githubusercontent.com/15063294/43073360-8d99254e-8e79-11e8-8d20-a7c44f932419.png)

```
Import-Module PSWriteWord -Force

$FilePath = "$Env:USERPROFILE\Desktop\PSWriteWord-Example-ListItems6.docx"
$ListOfItems = @('Test1', 'Test2')

$WordDocument = New-WordDocument $FilePath
Add-WordParagraph -WordDocument $WordDocument
$List = Add-WordList -WordDocument $WordDocument -ListType Numbered -ListData $ListOfItems -Supress $false
Set-WordList -List $List -FontSize 6 -FontFamily 'Tahoma' -Color Orange -Supress $True

$WordDocument.Paragraphs
$WordDocument.Lists
$WordDocument.ParagraphsDeepSearch


Save-WordDocument $WordDocument -Language 'en-US' -Supress $true
Invoke-Item $FilePath
```

Following code `$WordDocument.Tables[0].AutoFit` always returns ColumnWidth.
```
        $WordDocument = New-WordDocument

        $InvoiceEntry1 = @{}
        $InvoiceEntry1.Description = 'IT Services 1'
        $InvoiceEntry1.Amount = '$200'

        $InvoiceEntry2 = @{}
        $InvoiceEntry2.Description = 'IT Services 2'
        $InvoiceEntry2.Amount = '$300'

        $InvoiceEntry3 = @{}
        $InvoiceEntry3.Description = 'IT Services 3'
        $InvoiceEntry3.Amount = '$288'

        $InvoiceEntry4 = @{}
        $InvoiceEntry4.Description = 'IT Services 4'
        $InvoiceEntry4.Amount = '$301'

        $InvoiceEntry5 = @{}
        $InvoiceEntry5.Description = 'IT Services 5'
        $InvoiceEntry5.Amount = '$299'

        $InvoiceData = @()
        $InvoiceData += $InvoiceEntry1
        $InvoiceData += $InvoiceEntry2
        $InvoiceData += $InvoiceEntry3
        $InvoiceData += $InvoiceEntry4
        $InvoiceData += $InvoiceEntry5

        Add-WordTable -WordDocument $WordDocument -DataTable $InvoiceData -Design MediumShading1 -AutoFit Contents #-Verbose
        $WordDocument.Tables[0].RowCount | Should -Be 6
        $WordDocument.Tables[0].ColumnCount | Should -Be 2
        #$WordDocument.Tables[0].AutoFit | Should -Be 'Contents' # Seems like a bug in Xceed - always returns ColumnWidth
        $WordDocument.Tables[0].Design | Should -Be 'MediumShading1'
```
When I add a table, I'd like to be able to specify the relative widths of each of the columns, such as:  "30:50:20" for 30%, 50%, 20% of the 1st, 2nd, and 3rd columns.  (Implicitly, I'm assuming "-autofit window" is used)

Thank you!