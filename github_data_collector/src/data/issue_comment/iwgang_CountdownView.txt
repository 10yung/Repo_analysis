![image](https://user-images.githubusercontent.com/20295918/68819414-e2fee880-06c2-11ea-9034-fbe80850f16a.png)
像这种的
【预置条件】
```
<cn.iwgang.countdownview.CountdownView
            android:id="@+id/cv_countdownViewTest3"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            app:isShowHour="true"
            app:isShowMinute="true"
            app:isShowSecond="true"
            app:timeTextSize="12sp" />
<!-- 12sp较为明显-->
```
【测试步骤】
打开Demo 观察布局
【测试结果】
秒数展示在5,6,8,9会被clip一部分
【对比测试结果】
在宽度获取使用`getTextBounds`后rect.width()为37, 使用新增方法`getTextWidth`后获取宽度为40
【备注】
无
`DynamicConfig config = new DynamicConfig.Builder()
                                .setConvertDaysToHours(true)
                                .build();`
使用背景的时候，设置把天数转换成小时。控件会显示不全，往右移，秒数被遮挡了一半。怎么解决？
列表里面使用，很多时候onEnd回调方法不走，怎么办
公司UI提出要用其他字体显示，发现控件没有支持修改字体的属性，希望可以支持自定义字体
![QQ图片20190326153119](https://user-images.githubusercontent.com/45984638/54978782-41fcd980-4fdc-11e9-92ef-6d6774d83ef3.png)
RecyclerView列表做倒计时效果，上下滑动后，有的item倒计时结束没有走onEnd这个方法，想做成倒计时结束，刷新item
I want to save remaining milliseconds in shared preference and it should resume from exactly where it was stopped or app terminated. I know we can use OnDestroy method but if user terminates the app, OnDestroy doesn't work. Help!!!!
当我字体设置为10sp时，背景大小设置为10dp没问题，但是当我继续缩小背景大小时，却没有效果了，太小反而会导致背景变大，他们有冲突么？字体完全无法充满背景框，字体差不多只能占背景面积的1/4。我想让字体和背景色的面积差不多大小。
We are seeing a noticeable difference in the timer when compared to an inbuilt countdown timer.
For eg: in one hour time period, we see a 1 sec difference. How can we fix this?
如题, 经过查看我发现这个问题的确是有的
在BackgroundCountdown#initStyleAttr(Context context, TypedArray ta)方法中第 51行和54行有这样的代码
```
mTimeBgBorderSize = ta.getDimension(R.styleable.CountdownView_timeBgBorderSize, Utils.dp2px(context, DEFAULT_TIME_BG_BORDER_SIZE));
isShowTimeBgBorder = ta.getBoolean(R.styleable.CountdownView_isShowTimeBgBorder, false);
```
但是 DEFAULT_TIME_BG_BORDER_SIZE 默认为 1dp
在 onDraw(Canvas canvas) 方法中各个Suffix的处理中,有:
```
if (mSuffixDayTextWidth > 0) {
         // draw day suffix
         canvas.drawText(mSuffixDay, mLeftPaddingSize + mDayTimeBgWidth + mSuffixDayLeftMargin + (mTimeBgBorderSize * 2), mSuffixDayTextBaseline, mSuffixTextPaint);
}
```
这个 mTimeBgBorderSize * 2 造成了 mSuffixDay 右移的情况, 因为此时并不显示TimeBgBorder,但是却计算了 mTimeBgBorderSize 的值,因此建议在 initStyleAttr(Context context, TypedArray ta) 方法中54行的:
```
isShowTimeBgBorder = ta.getBoolean(R.styleable.CountdownView_isShowTimeBgBorder, false);
```
下面添加:
```
if (!isShowTimeBgBorder) {
        mTimeBgBorderSize = 0;
 }
```
来处理,即当不显示背景边框的时候,这个边框的大小为0,不接入计算.

ps: demo中的DynamicShowActivity显示没有问题是因为其在第471行左右对border进行了设置:
```
((CheckBox) findViewById(R.id.cb_bgBorder)).setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
            @Override
            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                btnModBgBorderColor.setEnabled(isChecked);
                btnBgBorderSizePlus.setEnabled(isChecked);
                btnBgBorderSizeSubtract.setEnabled(isChecked);
                btnBgBorderRadiusPlus.setEnabled(isChecked);
                btnBgBorderRadiusSubtract.setEnabled(isChecked);

                DynamicConfig.Builder dynamicConfigBuilder = new DynamicConfig.Builder();
                dynamicConfigBuilder.setBackgroundInfo(new DynamicConfig.BackgroundInfo().setShowTimeBgBorder(isChecked));
                mCvCountdownViewTestHasBg.dynamicShow(dynamicConfigBuilder.build());
            }
        });
((CheckBox) findViewById(R.id.cb_bgBorder)).setChecked(false);
```