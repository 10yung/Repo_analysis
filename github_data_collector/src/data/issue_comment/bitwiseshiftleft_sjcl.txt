Are there any plans to add Argon2 to SJCL?

Thx!
Added support for react-native.

The eval expression was required for the bundler. Could perhaps optimize later.
The link here is out of date:
https://bitwiseshiftleft.github.io/sjcl/

https://stackoverflow.com/questions/55095422/importing-scripts-in-html-sjcl-hash-sha512-is-undefined
InverseMod's parameter is needed to be odd. How to implement sqrt?

Implementing conditional move for constant-time coding.
The constructor takes 6 arguments but the documentation only lists 5 (b is missing).

/**
 * Construct an elliptic curve. Most users will not use this and instead start with one of the NIST curves defined below.
 *
 * @constructor
 * @param {bigInt} p The prime modulus.
 * @param {bigInt} r The prime order of the curve.
 * @param {bigInt} a The constant a in the equation of the curve y^2 = x^3 + ax + b (for NIST curves, a is always -3).
 * @param {bigInt} x The x coordinate of a base point of the curve.
 * @param {bigInt} y The y coordinate of a base point of the curve.
 */
sjcl.ecc.curve = function(Field, r, a, b, x, y) {
I am not sure this is accurate anymore...
https://github.com/bitwiseshiftleft/sjcl/blob/f59e51d0cc42b20900cc5d3c46b4bf39644dd77d/index.html#L28
hello,
this is not an issue but rather a question.
I would like to keep only what I need, i. e. `pbkdf2`, `hmac` and `sha256` : how to rebuild the library with only these components?
regards.
const sjcl=require('sjcl-all')
var keys1 = sjcl.ecc.elGamal.generateKeys(256);
provsionerKey=keys1.pub.I.x.toString().slice(2)+keys1.pub.I.y.toString().slice(2)