I am trying to understand what SharedKernel is for. It is expressed that

> ..types that would likely be shared between multiple projects..

This is what Core project stands for, isn't it? Any other projects in the solution always references the Core project, so what I need to share accross solution can be resided in the Core. Am I wrong?
It was my understanding that with ASP.NET Core 3.x, it was recommended to use IHostBuilder vs IWebHostBuilder

I noticed you were using IWebHostBuilder > was this intentional?  (thanks)
Hi,

As you didn't add any example of this, I want to know what is proper namespace for such a class. e.g: `public void Foo (Bar bar) { ... }`

The `Bar` class is `DTO` here? _btw I'm not talking about any data related situation here, `Foo` is just a method, maybe it just add 2 number._ 
If you try to complete "ToDoItem" the handlers are never registered or handled. I tried to register the Handlers as follows in the container but still does not work. 

var handlers = Assembly.GetAssembly(typeof(IHandle<>));
builder.RegisterAssemblyTypes(handlers).AsImplementedInterfaces();


There is a visual studio template for this repo [here](https://github.com/GregTrevellick/CleanArchitecture) which is on the .NET Core 2.1 version of the code. We should update this to be the latest 3.0 version.

@GregTrevellick would you be able to/interesting in updating it?
I've updated the newest version of the repo to support the template package.  It uses the `nuget pack` flavor of packaging versus the `dotnet pack` flavor.  

Here is some information that should probably go into the readme file (I wasn't sure how to update it since I didn't know if you already have a channel to publish this template to NuGet.org or not, or whether it was something you'd want to do):

Simplest possible usage instructions (without publishing NuGet package to NuGet.org):
* clone the repo into an empty folder
* Make sure you have the nuget CLI installed
* In the root directory, run `nuget pack`.  This will create `CleanArchitecture.Template.1.0.0.nupkg`.
* Make sure you have the dotnet CLI installed
* Run `dotnet new -i CleanArchitecture.Template.1.0.0.nupkg`.  This will install the templates from this package into the dotnet CLI.

Now to create a brand new project using the template:
* Navigate to the directory where you will put the new solution.
* Run `dotnet new clean-arch -o Your.ProjectName` where `Your.ProjectName` is whatever you want to name the project.

The `Your.ProjectName` directory and solution file will be created, and inside that will be all of your new solution 
contents, properly namespaced and ready to run/test.

NOTE: 
This could be published to NuGet.org if you/we/I have an account established there (I don't at this time).

If we did get this published to NuGet.org, then the top list of "simplest steps" would be simply this:

`dotnet new -i CleanArchitecture.Templates`

This command would install the template(s) from this NuGet package from the default NuGet sources and 
use the latest version.
Demonstrate how to use a feature folder / use cases organization for the solution template.

See #21, #37, #66 for background.
So my question is simple:

As an example, if I have a simple create command (DTO containing a List of Product DTOâ€™s) received from the Controller Endpoint and forwarded to a CommandHandler via Mediator) and there are many properties that I have to set in the Aggregate method, would it be ok when I pass the DTO to the method instead of each parameter (see example below) ? 

```
public class Cart {
   
    private readonly List<Products> _products = new List<Products>();
    public IReadOnlyList<Products> Products => _products.AsReadOnly();

    public void AddProducts(List<MyProductDTO> dto){
           foreach(var p in dto){
                 Product newProd = new Product(dto.ProductName, ...)
                 _products.Add(newProd);
           }
    }
}
```

Hi @ardalis 

This is very interesting template for DDD design and it could be great if you could provide a **diagram** and document of the components of your implementation.

Thanks and Regards
Duy
Should helper classes be inside the Core project or the Infrastructure project?