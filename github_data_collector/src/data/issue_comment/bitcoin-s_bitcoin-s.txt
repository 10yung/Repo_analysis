Right now these serializers are exclusive to the bitcoind-rpc project, when in reality we may want to re-use these across different projects. 

https://github.com/bitcoin-s/bitcoin-s/pull/1040#discussion_r368250743

https://github.com/bitcoin-s/bitcoin-s/blob/master/bitcoind-rpc/src/main/scala/org/bitcoins/rpc/serializers/JsonSerializers.scala#L35
This attempts to address #1029 which i believe is happening because mac osx ci is very slow. We double the Thread.sleep() when generating addresses from 250 milliseconds to 500 milliseconds. This won't be a problem when we address #1009 
Needed to add `addScriptWitnessToInput` because there was no way to do native segwit
In response to review from CG/Tibo, I have de-serialized outputs and outpoints, re-serialized change spks as addresses, and added the oracle signature and R value to the test vectors
Introduces support for [Partially Signed Bitcoin Transactions (PSBTs)](https://github.com/bitcoin/bips/blob/master/bip-0174.mediawiki).

Todo:

- [ ] More property based tests

- [ ] Increase coverage

- [ ] PSBT.md documentation
There is a spurious failure on Mac wallet tests in CI with the above error message.

example: https://travis-ci.org/bitcoin-s/bitcoin-s/jobs/637499237#L320

This is built on top of #1010 .

Basically this further integrates `HDAccount` into the wallet. It gives us the ability to 

- Query the balance of a specific `HDAccount`
- Fund a transaction from a specific `HDAccount`
- Generate an address for a specific `HDAccount`

This is needed for multi-user wallets, or wallets that want to segregate funds based on application.

