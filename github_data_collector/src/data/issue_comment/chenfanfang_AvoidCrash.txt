1，对NSMutableAttributedString 的api增加了防崩溃处理
2，对NSString的 - (NSString *)stringByAppendingString:(NSString *)aString; 增加了防崩溃处理
当UIPasteboard调用setString方法时，如果参数值为nil，会造成crash @chenfanfang 

setupNoneSelClassStringPrefixsArr 这个加上前缀后 个别客户安装app 点进去就闪退,其他客户又没问题

CoreFoundation | -[__NSDictionaryM setObject:forKeyedSubscript:] + 452
-- | --
2 UXLive | -[NSMutableDictionary(AvoidCrash) avoidCrashSetObject:forKeyedSubscript:] (NSMutableDictionary+AvoidCrash.m:71)
3 UXLive | -[MJProperty setPorpertyKeys:forClass:] (MJProperty.m:153)
4 UXLive | -[MJProperty setOriginKey:forClass:] (MJProperty.m:133)
5 UXLive | __32+[NSObject(Property) properties]_block_invoke (NSObject+MJProperty.m:169)
6 UXLive | +[NSObject(MJClass) mj_enumerateClasses:] (NSObject+MJClass.m:63)
7 UXLive | +[NSObject(Property) properties] (NSObject+MJProperty.m:178)
8 UXLive | +[NSObject(Property) mj_enumerateProperties:] (NSObject+MJProperty.m:0)
9 UXLive | -[NSObject(MJKeyValue) mj_setKeyValues:context:] (NSObject+MJKeyValue.m:197)
10 UXLive | +[NSObject(MJKeyValue) mj_objectWithKeyValues:context:] (NSObject+MJKeyValue.m:218)
11 UXLive | __48-[NSObject(MJKeyValue) mj_setKeyValues:context:]_block_invoke (NSObject+MJKeyValue.m:0)
12 UXLive | +[NSObject(Property) mj_enumerateProperties:] (NSObject+MJProperty.m:146)
13 UXLive | -[NSObject(MJKeyValue) mj_setKeyValues:context:] (NSObject+MJKeyValue.m:197)
14 UXLive | +[NSObject(MJKeyValue) mj_objectWithKeyValues:context:] (NSObject+MJKeyValue.m:218)
15 UXLive | +[NSObject(MJKeyValue) mj_objectArrayWithKeyValuesArray:context:] (NSObject+MJKeyValue.m:0)



    NSString *str = nil;
    NSString *sstr = [@"dd" stringByAppendingString:str];

0 CoreFoundation | ___NSI0 + 708
1 CoreFoundation | -[NSInvocation getArgument:atIndex:] + 160
2 Foundation | __NSGetValueWithMethod + 200
3 Foundation | -[NSObject(NSKeyValueCoding) valueForKey:] + 264
4 AccessibilityUtilities | ___57-[NSObject(UIAccessibilitySafeCategory) safeValueForKey:]_block_invoke +32
5 AccessibilityUtilities | -[NSObject(UIAccessibilitySafeCategory) _accessibilityPerformSafeValueKeyBlock:withKey:onClass:] + 64
6 AccessibilityUtilities | -[NSObject(UIAccessibilitySafeCategory) safeValueForKey:] + 200
7 UIKit | -[UIKeyboardLayoutStar clearHandwritingStrokesIfNeededAndNotify:] + 28
8 UIKit | -[UIView(Internal) _didMoveFromWindow:toWindow:] + 1572
9 libdispatch.dylib | __dispatch_call_block_and_release + 24
10 libdispatch.dylib | __dispatch_client_callout + 16
11 libdispatch.dylib | _dispatch_main_queue_callback_4CF + 996
12 CoreFoundation | ___CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__ + 12
13 CoreFoundation | ___CFRunLoopRun + 1572
14 CoreFoundation | CFRunLoopRunSpecific + 424
15 GraphicsServices | GSEventRunModal + 100
16 UIKit | UIApplicationMain + 208
17 UXLive | main (main.m:14)
18 libdyld.dylib | _start + 4


针对NSMutableAttributedString中调用replaceCharactersInRange:withString:会崩溃的问题
0 CoreFoundation | ___NSI0 + 704
-- | --
1 CoreFoundation | -[NSInvocation getArgument:atIndex:] + 160
2 Foundation | __NSGetValueWithMethod + 200
3 Foundation | -[NSObject(NSKeyValueCoding) valueForKey:] + 264
4 AccessibilityUtilities | ___57-[NSObject(UIAccessibilitySafeCategory) safeValueForKey:]_block_invoke + 32
5 AccessibilityUtilities | -[NSObject(UIAccessibilitySafeCategory) _accessibilityPerformSafeValueKeyBlock:withKey:onClass:] + 92
6 AccessibilityUtilities | -[NSObject(UIAccessibilitySafeCategory) safeValueForKey:] + 216
7 UIKit | -[UIViewControllerAccessibility _accessibilityLoadAccessibilityInformation] + 156
8 UIAccessibility | -[UIAccessibilityInformationLoader _loadAccessibilityInformationOnMainThread:] + 960
9 Foundation | __NSFireTimer + 88
10 CoreFoundation | ___CFRUNLOOP_IS_CALLING_OUT_TO_A_TIMER_CALLBACK_FUNCTION__ + 28
11 CoreFoundation | ___CFRunLoopDoTimer + 864
12 CoreFoundation | ___CFRunLoopDoTimers + 248
13 CoreFoundation | ___CFRunLoopRun + 2168
14 CoreFoundation | CFRunLoopRunSpecific + 552
15 GraphicsServices | GSEventRunModal + 100
16 UIKit | UIApplicationMain + 236
17 meiju-ios | main (main.m:14)
18 libdyld.dylib | _start + 4


大神您好,项目中集成了框架,发现这个问题不是必现的 请看截图,
[AvoidCrash becomeEffective]; 这个方法我也是放在程序启动的最前端,用的是 pod 'AvoidCrash', '~> 2.5.2'版本,希望能收到您的回复.
<img width="470" alt="9c8197c46d28fe5617c106c3be45d39b" src="https://user-images.githubusercontent.com/18069121/44799240-0cdcf580-ab79-11e8-9c74-6bc048337667.png">

<img width="942" alt="b24244c77c3a5b8da5db83469b0a4f30" src="https://user-images.githubusercontent.com/18069121/44799263-19f9e480-ab79-11e8-9258-41ed378ae9a7.png">

IQKeyboardManager是一个弹出键盘的第三方，当使用AvoidCrash时候，只要点击输入控件，弹出键盘时就会崩溃
<img width="1006" alt="image" src="https://user-images.githubusercontent.com/22926779/43390145-137d25ce-9420-11e8-939f-338f18639fd6.png">
