Would it be possible to add Excel table support?  The ability to identify cell ranges that are part of tables.

I'm guessing it would similar to java/apache/poi
```
XSSFWorkbook wb = new XSSFWorkbook(inp);
for (int iSheet = 0; iSheet < wb.getNumberOfSheets(); iSheet++) {
    XSSFSheet sheet = wb.getSheetAt(iSheet);
    TreeMap<String, XSSFTable> orderTable = new TreeMap<>();
    for (XSSFTable xlTable : wb.getSheetAt(iSheet).getTables()) {
        CellReference endCell = xlTable.getEndCellReference();
        CellReference startCell = xlTable.getStartCellReference();

        for (iRow = startCell.getRow(); iRow <= endCell.getRow(); iRow++) {
            Row row = sheet.getRow(iRow);
            for (iCol = startCell.getCol(); iCol <= endCell.getCol(); iCol++) {
            	... do the things ...
	    }
    }
    ... do the things ...
}
```
RUST Crate google_sheets
https://docs.rs/google-sheets4/1.0.12+20190625/google_sheets4/

Akin to Google Sheets Python API
https://github.com/burnash/gspread
The `RangeDeserialize` and `RangeDeserializeBuilder` functionality is great but it's not immediately clear that these functions are closely integrated with serde. All the examples show the values being deserialized into a tuple but I think it would be good to have at least one example somewhere showing how it can be deserialized into a struct in combination with serde.
[time.xlsx](https://github.com/tafia/calamine/files/3588635/time.xlsx)

time.xlsx is composed of one cell "00:15:00".
This cell recognized as Float(0.0104166666666667).
I expect as String("00:15:00").
Is this the intended behavior?
The test code is below.
```
#[test]
fn time() {
    setup();

    let path = format!("{}/tests/time.xlsx", env!("CARGO_MANIFEST_DIR"));
    let mut excel: Xlsx<_> = open_workbook(&path).unwrap();

    let range = excel.worksheet_range("Sheet1").unwrap().unwrap();
    range_eq!(range, [[String("00:15:00".to_string())]]);
}
```
Hello I was wondering if there was a way to find the name of the author of a sheet in the same way the file command:
`
file.xls: Composite Document File V2 Document, Little Endian, Os: Windows, Version 6.1, Code page: 1252, Author: AUTHOR_NAME, Last Saved By: AUTHOR_NAME, Last Printed: Wed Apr 10 07:55:25 2019, Create Time/Date: Wed Apr 10 07:57:54 2019, Last Saved Time/Date: Wed Apr 10 07:57:54 2019, Security: 0
`

I don't find anything in the documentation :/
I have to read excel sheets with headers where the header row is not the first row.
I currently try to solve this by first using `range.rows().enumerate().find(...)` to get a row that contains the header names I expect and then using the index of that row to get a subrange of my original range.

I introduced a bug by using the index I got from that process as the new start and therefore started at e.g. row 3 instead of 26. I fixed that by adding the found header index to the current range start.
I guess this is kind of hard to use :/ 

It's a non-zipped XML.
Or some maybe somework to be done to do it?
In my excel sheet, I've got a column with dates. Unfortunately, `calamine::DateType` has no variant for dates and when I handle a date as a string I get for `29.08.2012` -> `41181`. 

It would be nice to have built-in date conversion 
This seems like a file format that fits very well with the possible applications for Calamine.

http://justsolve.archiveteam.org/wiki/SAV