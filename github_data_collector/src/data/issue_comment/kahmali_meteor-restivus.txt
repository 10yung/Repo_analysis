We need the corsHeader configurations for CORS, so that we can add more header value for cors. By default, Access-Control-Allow-Headers is fixed.
To close connection we require our customers to explicitly do it via "Connection" header like so:
```
curl -i http://localhost:3000/api/override-default-heade  -H "Connection: close"
```
This is not a standard expected behaviour and creates unnecessary additional load on the servers
Please see https://github.com/kahmali/meteor-restivus/issues/300
this is a pretty urgent fix as it crashes whole Meteor server if `bcrypt` is not set. 
It may be good to wrap the `auth` "stuff" in a try catch. Sorry my `coffeescript` is not that great.
If you create a user by another means (eg Google login `accounts-google`) and a user tries to call rest '/login` route... it crashes the server.

```
20190105-08:52:59.677(11)? loginWithPassword 3 { _id: 'a5d8f6c3281c74b723751f7b',
I20190105-08:52:59.677(11)?   createdAt: 1546636267939,
I20190105-08:52:59.677(11)?   email: '`<some email>``',
I20190105-08:52:59.678(11)?   emails: [ { address: '<some email>', verified: true } ],
I20190105-08:52:59.678(11)?   dateUserInvited: null,
I20190105-08:52:59.678(11)?   invitingResourceID: null,
I20190105-08:52:59.678(11)?   completedSetup: true,
I20190105-08:52:59.679(11)?   profile: { channels: [ [Object] ] },
I20190105-08:52:59.679(11)?   services: { resume: { loginTokens: [] }, password: { reset: [Object] } },
I20190105-08:52:59.679(11)?   acceptedLicense: true,
I20190105-08:52:59.679(11)?   dateLicenseAccepted: 1546636289969,
I20190105-08:52:59.679(11)?   dateInitialSetup: 1546636297839 } test
W20190105-08:52:59.680(11)? (STDERR) /Users/adamginsburg/Documents/development/buzzy7/node_modules/bcrypt/bcrypt.js:150
W20190105-08:52:59.680(11)? (STDERR)             cb(new Error('data and hash must be strings'));
W20190105-08:52:59.680(11)? (STDERR)             ^
W20190105-08:52:59.681(11)? (STDERR) 
W20190105-08:52:59.681(11)? (STDERR) TypeError: cb is not a function
W20190105-08:52:59.681(11)? (STDERR)     at /Users/adamginsburg/Documents/development/buzzy7/node_modules/bcrypt/bcrypt.js:150:13
W20190105-08:52:59.681(11)? (STDERR)     at _combinedTickCallback (internal/process/next_tick.js:131:7)
W20190105-08:52:59.681(11)? (STDERR)     at process._tickDomainCallback (internal/process/next_tick.js:218:9)
``` 

Note user had tried to reset their password... so had `reset` not `bcrypt` ie ` password: { reset:`

To solve this you need to check for the `bycrypt` and not just `authenticatingUser.services?.password` 

https://github.com/kahmali/meteor-restivus/blob/devel/lib/auth.coffee#L55

ie 

```
 if not authenticatingUser.services?.password.bcrypt
    throw new Meteor.Error 401, 'Unauthorized'
```
Using http://apitester.com to test mup deployed and getting 400 Bad Request error.

Works fine when running test version on separate port, but gives error on deployed.

` Api.addRoute('qb/', {authRequired: false}, {
    get: function () {
      console.log(this.urlParams)
      return this.urlParams;
    },
	 post: function (data) {
         
         var body = this.bodyParams;
         if(Meteor.isDevelopment){
           body.eventNotifications = JSON.parse(body.eventNotifications);
        }
		 var params = {
			urlParams: this.urlParams,
			queryParams: this.queryParams,
			bodyParams: body
		 };
         qb_handleHook(body)
        
		 Meteor.call('testcollection.newtest', 
					 {data: params},
							(err, res) => {
						  if (err) {
							alert(err);
						  } else {
							// success!
							//console.log('return from client id array')
							console.log(res)
							
						  }
						});
		 
      return params
    }
  });`
Can onLogInFailure method (or similar) please be added to handle a login failure, if it does not exist aready. If it exists please enlighten. It seems the [issue here](https://github.com/kahmali/meteor-restivus/issues/162) has not been answered!!

Use case: I am looking to keep a tally of the number of times a particular username's login attempts failed. 

Will this be added on simple-rest as well, or does such exist in simple-rest already?
Is mutual or two way certificate authentication like the one used in soap web-services going to be added to REST and made one of the security standards across all modern programming languages, in particular in restivus? I feel basic authentication even when used with tokens is not as secure as mutual or two way certificate authentication that we have in soap web-services. 

In my case I am looking to call the REST api both from the browser client and non-browser client that will do a lot of processing (millions of POSTs in a single thread) and another non-browser client that will do millions of GETs in a single thread.
Is mutual or two way certificate authentication in the pipeline at least in restivus?
For example, if you have enforced email verification, then you need to use validation after login. This patch adds this feature.
#162 
Hello,

I've been searching around on this issue and haven't found a good answer. I hope I'm not doing something silly.

I have a simple program that periodically generates a block of text data and I need to pass that data to a meteor application and parse the weird text format there.

I'm using curl to send the data to my meteor server; something like: `curl -d 'foo\nbar' -H 'Content-Type: text/plain' https://myserver/api/test`. The problem is that in the request handler, `this.bodyParams` is always an empty object.

If other content types are used, restivus tries to parse the data but this doesn't always capture every byte. Notably, if `Content-Type` header is removed, curl defaults to `application/x-www-form-urlencoded` which is reversible for the simple example I provided, but not for other more complicated use cases.

Now, it is possible to get at the raw data with something like this: https://stackoverflow.com/questions/35857250/how-can-i-get-post-raw-body-in-meteor-restivus but that sure seems like a convoluted way to get the raw POST data. This is also not possible in my use case as the meteor app that I'm using doesn't expose the raw `request` object from restivus.

Would it be possible and make sense to add a `text/plain` parser?
Hello,
There is an error in 0.8.12 that shows "TypeError: Restivus is not a constructor"
but works in 0.8.11