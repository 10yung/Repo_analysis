Fix for #700 
As of Android 10, passing just "w" will no longer truncate the file after writing. You must also explicitly pass the truncate option. Previous versions of android treated "w" and "wt" as the same.

Changes:
- send write/truncate option as the mode to openOutputStream on Android when append is false.
Just fixing two typos in [README.md](README.md)
react-native version: 0.60.5
react-native-fs version: 2.13.2

I'm trying to download a file when press a ToucableOpcity
the success message is showing but I can't see the file
example onPress function:

```javascript
import React from 'react'
import { TouchableOpacity } from 'react-native'
import RNFS from 'react-native-fs'

const ExampleButton = () => {
  pressHandler = () => {
      RNFS.downloadFile({
          fromUrl: 'https://i.imgur.com/EyPJbmD.jpg',
          toFile: `${RNFS.DocumentDirectoryPath}/test.jpg`
      }).promise
  }

  return (
      <TouchableOpacity onPress={pressHandler} />
  )

}

```


Given how Android passes around content uris, itâ€™s not
easy to determine the actual path or extension.
But with the content resolver, one can easily query the
mine type. For this purpose, this adds a getType function
for Android only.

This is an alternative and workaround for `stat` as it doesn't handle a variety of content uris that are provided into the app for example via `Share` / `Send` intent or files that are on Google drive. If all one needs to know is the mine type, then `getType` will do the trick for you. 
When installing the newest version of `react-native-fs` in project that runs on React Native 0.61.4 (Expo 36), I was seeing this warning: 
```console
npm WARN react-native-fs@2.16.2 requires a peer of react-native@^0.59.5 but none is installed. You must install peer dependencies yourself.
```
After changing this version of React Native in peer dependencies to `0.61.0`, according to README, this warning is gone.
The following build commands failed:

        CompileC PROJECTDIR/ios/build/Build/Intermediates.noindex/Pods.build/Debug-iphonesimulator/RNFS.build/Objects-normal/x86_64/RNFSManager.o PROJECTDIR/node_modules/react-native-fs/RNFSManager.m normal x86_64 objective-c com.apple.compilers.llvm.clang.1_0.compiler
(1 failure)
The [Background Download Tutorial](https://github.com/itinance/react-native-fs#background-downloads-tutorial-ios) is great, however it doesn't work for uploads if I am reading the source and docs correctly.

Anyone looking into adding background support for uploading files?

I'm also facing the same issue, I'm using react-native-document-picker and it returned me a uri content in response like (file:///Users/ituser/Library/Developer/CoreSimulator/Devices/AAAAAAA-AAAAAAA-4DFC-AAAAAAA-AAAAAAA/data/Containers/Data/Application/AAAAAAA-A2AB-AAAAAAA-AAAAAAA-BBBBBBBBB/Documents/abc.doc),

when I write file RNFS.writeFile(path, uri, 'utf8'), it failed to open or unreadable content.
Anyone who that are there any solution for this issue. 
Thank You

_Originally posted by @saadmutahar in https://github.com/itinance/react-native-fs/issues/730#issuecomment-530663582_
How can we identify if the download has been stopped? Can't see anything stated in the docs / issues here.

```
download = () => {
    const path =
      RNFS.DocumentDirectoryPath +
      '/' +
      'documents/' +
      this.state.id +
      '.' +
      this.state.extension;

    RNFS.downloadFile({
      fromUrl: this.state.url,
      toFile: path,
      //headers
      discretionary: true, // IOS ONLY - Improves performance
      begin: _res => {
        console.log('@download started: ', _res);
        this.setState({
          jobId: _res.jobId,
          downloading: true,
        });
      },
      progress: _res => {
        this.setState({
          progress: parseInt(
            (_res.bytesWritten / _res.contentLength) * 100,
            10,
          ),
        });
      },
    }).promise.then(res => {
      console.log('@download complete: ', res);
      this.setState({
        downloaded: true,
        downloading: false,
        progress: 100,
        uri: path,
      });
    });
  };

  abort = () => {
    RNFS.stopDownload(this.state.jobId);
  };
```
Getting below error whenever I try to `RNFS.downloadFile(...)`. Immediately gives me this cryptic error and I have no idea why or what to do to resolve it.

```
Error: progressInterval
  at createErrorFromErrorData
```

I've tried adding progress related options, changed the URL's multiple times, but no luck.

Anyone with a suggestion on what's causing it and how to get around it?

On Android