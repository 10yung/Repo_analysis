Most people think there's a way to save the column contents via textarea, however the saving does not actually work, and it's confusing. Field copy is available via context menu (right click)
When pgweb is terminated any new request (or a custom query) will never seem to finish, however the backend is gone and we should print out an error message. 
Example query:

```
SELECT n.nspname AS "schema", t.typname, string_agg(e.enumlabel, '|' ORDER BY e.enumsortorder) AS enum_labels
FROM   pg_catalog.pg_type t 
JOIN   pg_catalog.pg_namespace n ON n.oid = t.typnamespace 
JOIN   pg_catalog.pg_enum e ON t.oid = e.enumtypid  
WHERE  t.typname = 'NAME'
GROUP  BY 1,2;
```
Should fix issues with large blobs of data stored as `bytea` or `jsonb`.
Fixes #429 
I have a table with one `bytea` column where I'm storing small images. Unfortunately, if I'm having like more than 10 rows there, `pgweb` totally hangs when I want to see the rows and it's unresponsive.
When I try to export data, the client seems to form an invalid API call to the backend. 

For example, clicking the CSV export button calls the backend with the (improperly formatted) url:
```https://subdomain.mypgweb.io/?pg_host=my.postgres.location.ioapi/query?format=csv&query=c2VsZWN0ICogZnJvbSBkZXZpY2VzOw..&_session_id=a-session-id```

If I modify the call to remove the pg_host parameter like so:
```https://subdomain.mypgweb.io/api/query?format=csv&query=c2VsZWN0ICogZnJvbSBkZXZpY2VzOw..&_session_id=a-session-id```

or fix the url to be properly formatted without removing the pg_host parameter:
```https://subdomain.mypgweb.io/api/query?pg_host=my.postgres.location.io&format=csv&query=c2VsZWN0ICogZnJvbSBkZXZpY2VzOw..&_session_id=a-session-id```

it works as expected.

I am running 0.11.1, and I don't believe this issue was addressed in 0.11.2. 
This question arised from learning this one: 

http://go-database-sql.org/connection-pool.html

I did neither careful code study nor experiments, but there is a feeling that there's no need for files like pkg/api/session_cleanup.go. Instead it should be sufficient to configure an sql's connection pool feature. Am I wrong? 

Identifier quoting is incorrect and fails sometimes. Steps to reproduce:
- run psql
- do the following commands in the psql
```
postgres=# create table "bad ""table" (id int);
CREATE TABLE
postgres=# insert into "bad ""table" (id) values (1);
INSERT 0 1
```
- run pgweb
- try to view data in the "bad ""table"
- see the error message instead of a data

The ability to see a pretty printed, syntax highlighted display of the definition of a given view / materialized view in the Structure tab would be extremely handy. The command `select pg_get_viewdef('{{view_name}}', true);` is easy enough to remember, but I wind up needing to copy and paste the output into a text editor to see everything, especially for views with large definitions. 