Xcode 11 now supports Swift Package Manager, but so far it is not possible to add SwiftWebSocket to project via Xcode 11 SPM without proper repository version tag that follows Semantic Versioning (should be "2.8.0" without "v", but latest tag is "v2.8.0"). Pull request updates SPM package description for SwiftWebSocket.
Sorry, I don't know where to get the HTTP response headers. Maybe this project should add new `WebSocketEvents` for this purpose, such as `WebSocketEvents.httpResponseHeaders` or something else. FYI, the [daltoniam/Starscream](https://github.com/daltoniam/Starscream) has the [`WebSocket.onHttpResponseHeaders`](https://github.com/daltoniam/Starscream/blob/e6b65c6d9077ea48b4a7bdda8994a1d3c6969c8d/Sources/Starscream/WebSocket.swift#L407`).
when I use it  from  the  guide  in  github.  but  it  show  "

func readResponse() throws {
        let end : [UInt8] = [ 0x0D, 0x0A, 0x0D, 0x0A ]
        let ptr = memmem(inputBytes!+inputBytesStart, inputBytesLength, end, 4)
        if ptr == nil {
            throw WebSocketError.needMoreInput
        }
"
            throw WebSocketError.needMoreInput   is  throw
Also automate git tag to point to latest spec version.
Hi, it seems that if I send a large string to a different socket server, after sending the message, the ram is never released. The string is 5MB.

Works fine, but.. even after the message is send, and closed.. ram is not released. 

ws.send (text: self.jpegPhotoData!.base64EncodedString(options: .lineLength64Characters))

Any ideas?
Hello, 

Thanks for making this SDK, I would love to take the responsibility of this project and would love to work on this project. If somebody face any kind of issues.

Please lemme know if you like to give me the opportunity for this project.
Warningï¼š
Hashable.hashValue' is deprecated as a protocol requirement; conform type 'InnerWebSocket' to 'Hashable' by implementing 'hash(into:)' instead
lines 603

Swift 5 deprecated PackageDescription API v3 finally.
So you need to describe Package.swift in v4 manner.
Last merge changed Swift version to 5.0 only for iOS build target. Now should work properly for all platforms.
Allows the project to be used with the latest version of tvOS