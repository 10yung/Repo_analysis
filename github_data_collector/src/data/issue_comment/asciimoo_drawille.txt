vidille is a video player that uses drawille to render video in a terminal.
Github user 'sshbio' apparently changed their username to 'josuah'. Please fix links in README.md
I would like to call `.forward()` or `.fd()` without enabling the brush.
I'm using `.up()` and `.down()` to control the brush but `forward` implicitly enables the brush and I would like to know why this is intended behaviour.

The fix for me would be removing these lines from `drawille.py`.
```
prev_brush_state = self.brush_on
self.brush_on = True
self.brush_on = prev_brush_state
```

I'm currently having a blast using drawille!
```
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⢇⡀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠤⠒⠉⠀⠀⠈⠑⠢⢄
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⠤⠊⢹⠉⠒⠤⣀⢀⡠⠔⠊⢹⠉⠢⢄⡀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⢸⠀⠀⠀⠀⡇⠀⠀⠀⢸⠀⠀⠀⢸
⠀⠀⠀⣀⠤⠢⢄⡀⠀⢸⠀⠀⡠⠜⠀⠀⠀⠀⡇⠀⠀⠀⠘⠤⡀⠀⢸⠀⠀⣀⠤⠢⢄⡀
⠠⣒⠉⠀⠀⠀⠀⠈⢑⣺⣒⠉⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠈⢑⣺⣒⠉⠀⠀⠀⠀⠈⢑⡢
⠀⠀⠉⠒⠤⡠⠔⠊⠁⢸⠀⠉⠢⢄⠀⠀⠀⠀⡇⠀⠀⠀⢀⠤⠊⠁⢸⠀⠉⠒⠤⡠⠔⠊⠁
⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⢸⠀⠀⠀⠀⡇⠀⠀⠀⢸⠀⠀⠀⢸
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠒⠤⡀⢸⠀⣀⠤⠒⠑⠢⢄⡀⢸⠀⡠⠔⠊
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠙⠭⣀⠀⠀⠀⠀⢀⡨⠝⠉
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠒⡔⠊⠁
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠁
```
Unicode has quadrant characters (in http://www.fileformat.info/info/unicode/block/block_elements/utf8test.htm) that can also be used for drawing (with the benefit of being actually designed for that, at the expense of making this library slightly imprecisely named).

Would a patch for adding them as an optional parameter for Canvas.\_\_init\_\_ be considered?
I'd like to use `drawille` on a Windows operating system (Windows 7 or 10). After successfully installing the `drawille` package into my virtual environment, using `pip`, using it by typing

``` python
>>> from drawille import Canvas
```

leads to this error:

``` python
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "C:\Users\nnako\ENV__Python27\lib\site-packages\drawille.py", line 23, in <module>
    import curses
  File "C:\PROGS\Python__v2_7_9\Lib\curses\__init__.py", line 15, in <module>
    from _curses import *
ImportError: No module named _curses
```

So, it seems, there is a dependency on the `curses` package and Windows doesn't provide the package, natively. So I installed `curses` using the instructions from [this StackOverflow post](http://stackoverflow.com/questions/32417379/what-is-needed-for-curses-in-python-3-4-on-windows7). But when I now enter my python installation and enter the following lines:

``` python
>>> from drawille import Canvas
>>> c=Canvas()
>>> c.set(10,10)
>>> print(c.frame())
```

the result on screen is:

```Ôáä```

and not a dot as expected (and as I see when using my Linux computer and the same lines of code).

Any hints?
I'm running OS X, El Capitan, Terminal.app.

``` python
Traceback (most recent call last):
  File "term_display.py", line 108, in <module>
    curses.wrapper(__main__, projection)
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/curses/wrapper.py", line 43, in wrapper
    return func(stdscr, *args, **kwds)
  File "rotating_cube.py", line 94, in __main__
    stdscr.addstr(0, 0, '{0}\n'.format(f))
_curses.error: addstr() returned ERR
```

I changed line 93 to:
f = c.frame(-40, -40, 40, 40)

And it worked.
