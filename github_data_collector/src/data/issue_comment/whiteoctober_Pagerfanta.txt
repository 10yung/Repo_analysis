Sample usecase:
```php
$pager = new Pagerfanta(new DoctrineDbalAdapter($query, function (QueryBuilder $queryBuilder) {
    return $queryBuilder->getConnection()
        ->createQueryBuilder()
        ->select('COUNT(*) AS total')
        ->from('(' . $queryBuilder->getSQL()  . ')', 'QL')
        ->setMaxResults(1)
        ->setParameters($queryBuilder->getParameters());
}));
```
The current MongoAdaptor is based on the Depreciated  php-mongo driver, all post v 7.x drivers are based on the php-mongodb driver that has a different access api


We added this library to our api to pass in the results serialized to our UI, however, it seems like it does not work well with Symfony serializer.  Any idea why?  It’s cause slowness and performance issues.  Seems like it’s not playing well with the serializer.  
Hi,

Sam here, one of the current maintainers of this project.

Given that we no longer use PHP in our active projects, it's becoming harder to give this plugin the time it needs.

Therefore, we're looking for new maintainer(s) for this project.

We'd like any new prospective maintainer to fork this project, and then once that fork has moved forward enough to give us confidence in your ownership, we would link to your fork prominently from the top of the README here, encouraging others to use it instead.

If you're interested, please go ahead and fork (if you haven't already) and start work!  If you've forked and would like others to help you, feel free to reply in this issue with details of your fork.

Please do reply here if you have questions.  Thanks in anticipation.
Currently the `DoctrineODMMongoDBAdapter` only supports the Query Builder:
* https://github.com/doctrine/mongodb-odm/blob/master/lib/Doctrine/ODM/MongoDB/Query/Builder.php

But there is also the Aggregation Builder:
* https://github.com/doctrine/mongodb-odm/blob/master/lib/Doctrine/ODM/MongoDB/Aggregation/Builder.php

Adding an additional adapter based on the existing one is actually easy:

```php
use Doctrine\ODM\MongoDB\Aggregation\Builder;
use Pagerfanta\Adapter\AdapterInterface;

class DoctrineODMMongoDBAggregationAdapter implements AdapterInterface
{
    private $aggregationBuilder;

    /**
     * Constructor.
     *
     * @param Builder $aggregationBuilder A DoctrineMongo aggregation builder.
     */
    public function __construct(Builder $aggregationBuilder)
    {
        $this->aggregationBuilder = $aggregationBuilder;
    }

    /**
     * Returns the query builder.
     *
     * @return Builder The query builder.
     */
    public function getAggregationBuilder()
    {
        return $this->aggregationBuilder;
    }

    /**
     * {@inheritdoc}
     */
    public function getNbResults()
    {
        return $this->aggregationBuilder->execute()->count();
    }

    /**
     * {@inheritdoc}
     */
    public function getSlice($offset, $length)
    {
        return $this->aggregationBuilder
            ->limit($length)
            ->skip($offset)
            ->execute();
    }
}
```

Unfortunately none of the two builders implement a common Interface. But there is another reason why **using a single adapter for both use cases could be problematic**!

The aggregation builder uses a pipeline. Each time a so called "stage" e.g. `limit` oder `sort` is added the return value of the assigned variable changes.

```php
$qb = $this
    ->createAggregationBuilder();
    ->sort(['leavingDate' => 1])
    ->limit($query->limit);

dump($qb); // Instance of Limit extends Stage

$qb = $this
    ->createAggregationBuilder();
$qb
    ->sort(['leavingDate' => 1])
    ->limit($query->limit);

dump($qb); // Instance of Builder
```

As soon as you pass a `Stage` instance you can not retrieve the original builder:
* https://github.com/doctrine/mongodb/blob/master/lib/Doctrine/MongoDB/Aggregation/Stage.php#L19

Also there are plans for ODM version ***2*** which may change this behaviour:
* https://github.com/doctrine/mongodb-odm/pull/1856

Maybe @alcaeus or @malarzm could comment on this too? Thanks in advance!

Possibly related issues:
* https://github.com/doctrine/mongodb-odm/issues/1988#issuecomment-478009400 @ychanan
### Problem
- There was currently no way to have offset for `pagerfanta` :disappointed: 
### Solution
- Offset is now working and I also added simple test :smile: 

    public function getAuthorProducts($uuid)
    {
        $queryBuilder = $this->createQueryBuilder('o')
            ->addSelect('author')
            ->innerJoin('o.author', 'author')
            ->andWhere("author.uuid=:uuid")
            ->andWhere("o.enabled=:enabled")
            ->andWhere("o.isShow=:isShow")
            ->setParameter("isShow", true)
            ->setParameter("enabled", true)
            ->setParameter("uuid", $uuid)
            ->setFirstResult(5)
        ;

        return $this->getPaginator($queryBuilder);
    }
I print the Paginator
![image](https://user-images.githubusercontent.com/16116559/49269414-c95b9580-f49f-11e8-89d3-ba9281ab26d4.png)

Query Builder has FirstResult in it

But FirstResult didn't work in the end

I notice that "Pagerfanta/Pagerfanta, "line 316 is not going to fetch the initial FirstResult

    private function getCurrentPageResultsFromAdapter()
    {
        $offset = $this->calculateOffsetForCurrentPageResults();
        $length = $this->getMaxPerPage();

        return $this->adapter->getSlice($offset, $length);
    }

    private function calculateOffsetForCurrentPageResults()
    {
        return ($this->getCurrentPage() - 1) * $this->getMaxPerPage();
    }

TODO:
- [ ] Add docs
- [ ] Deprecate `$maxResults` of `ElasticaAdapter`?
Hello,

I have code 
```
        $qb = $this->createQueryBuilder('country');
        $adapter = new DoctrineORMAdapter($qb);
        $this->pagerfanta = new Pagerfanta($adapter);
        $this->pagerfanta->setMaxPerPage(10);
        $this->pagerfanta->setCurrentPage(1);

        var_dump($this->pagerfanta->getNbResults());
        var_dump($this->pagerfanta->getCurrentPageResults());
```

the result 

```
int(242)
object(ArrayIterator)#12190 (1) { ["storage":"ArrayIterator":private]=> array(0) { } }
```

But I see following lines in dev.log

```
[2018-10-09 17:37:43] doctrine.DEBUG: SELECT DISTINCT id_0 FROM (SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.iso_code AS iso_code_2, c0_.phone_code AS phone_code_3, c0_.deleted_at AS deleted_at_4 FROM countries c0_) dctrn_result LIMIT 10 [] []
[2018-10-09 17:37:43] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.iso_code AS iso_code_2, c0_.phone_code AS phone_code_3, c0_.deleted_at AS deleted_at_4 FROM countries c0_ WHERE c0_.id IN (?) [["[object] (App\\Domain\\Country\\ValueObject\\CountryId: 0042840f-843e-457d-9250-b1e22d8d6d5e)","[object] (App\\Domain\\Country\\ValueObject\\CountryId: 01c4f446-48a9-413f-9225-7138c0e39f98)","[object] (App\\Domain\\Country\\ValueObject\\CountryId: 029bed5c-35f2-4c7d-812c-7d7d3d886be1)","[object] (App\\Domain\\Country\\ValueObject\\CountryId: 02c0460d-8902-4cf7-a070-e6404f321c25)","[object] (App\\Domain\\Country\\ValueObject\\CountryId: 0315d760-5dea-412e-8242-7eceb7373375)","[object] (App\\Domain\\Country\\ValueObject\\CountryId: 033d07bb-c4ce-4166-991b-a5441bcf2b7e)","[object] (App\\Domain\\Country\\ValueObject\\CountryId: 035ce32a-3b21-40e8-ae58-ee3a15fd6c71)","[object] (App\\Domain\\Country\\ValueObject\\CountryId: 054f444e-c8d2-48ad-a058-5bd94ff8a133)","[object] (App\\Domain\\Country\\ValueObject\\CountryId: 05bafdf7-a31e-4d84-8db7-a03f3bb0d670)","[object] (App\\Domain\\Country\\ValueObject\\CountryId: 0873c562-db8a-4189-af35-82d5d80b7fe9)"]] []
[2018-10-09 17:37:43] doctrine.DEBUG: SELECT COUNT(*) AS dctrn_count FROM (SELECT DISTINCT id_0 FROM (SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.iso_code AS iso_code_2, c0_.phone_code AS phone_code_3, c0_.deleted_at AS deleted_at_4 FROM countries c0_) dctrn_result) dctrn_table [] []
```

So looks like something happens. At least I get right NB count. But empty getCurrentPageResults. May be problem that my Id is CountryID UUID based? 
This error occurred when I upgraded to version 2

![image](https://user-images.githubusercontent.com/3934858/40370174-0bd35b9a-5db6-11e8-91f2-3a9ae9c21815.png)

![image](https://user-images.githubusercontent.com/3934858/40370135-f3c566d8-5db5-11e8-9960-c86eba58ead1.png)
