If a Dockerfile has `EXPOSE 80` set, for example, but `--expose 8000` is provided during the creation of a container, the `--expose` flag is ignored and port 80 is used. This seems counter-intuitive as you'd expect the `--expose` flag to override the Dockerfile "default" if you like.
Rebased #1257 and new feature that removes the incorrect behavior if the service expects deployment on the domain directly and under root (`/`) path.

Without stripping requests fail because the `VIRTUAL_PATH` is propagated into the service and service might not be created with such behavior in mind. Pretty much none of big projects nowadays because everyone wants separate DNS record that gets translated into `Host` for nginx to route :grimacing:.

Example:

    # accessing directly VIRTUAL_PATH with stripping
    GET /service  (nginx uses 302 to bump to the correct location)
    GET /service/ (nginx allows communication with container)
    GET /         (the request as visible within the service container)

    # accessing VIRTUAL_PATH without stripping
    GET /service  (nginx routes traffic directly to container)
    GET /service  (the request as visible within the service container)
    404/500/...   (service rejects request because can't handle path prefix)

Tests such as https://github.com/jwilder/nginx-proxy/blob/e7624687599a44a09b23e79c7fc8c614778eabae/test/test_multiple-hosts.py#L5 were failing, but it seems to be wrong anyway since port should be written with a colon (`:`) because the slash (`/`) is a part of a location/route for nginx.

Testing Alpine image available [on Docker Hub](https://hub.docker.com/repository/docker/keyweeusr/nginx-proxy).

I have a docker container with a websocket inside. I need to have access to different container with websockets from one address. How do I do that? Many thanks
I would like to add the following statement to a custom nginx.conf in conf.d folder.  However, when I do that it gives the error
nginx: [emerg] "load_module" directive is not allowed here in /etc/nginx/conf.d/nginx.conf:1

This works if it were directly added to the nginx.conf in the /etc/nginx folder, but that would require modifying the original file which could cause problems across versions.  Can we support a way to add load_modules to the nginx.conf?
If I am using pure nginx everything works fine. Angular service-worker is there.
But with nginx-proxy angular service-worker is not registered.

Is there any difference then normal proxy?

```
server {  
              listen 80;
              server_name SUBDOMAIN.DOMAIN.TLD;
              location / {  
                           proxy_pass http://PRIVATE_IP:3000;  
                           proxy_http_version 1.1;  
                           proxy_set_header Upgrade $http_upgrade;  
                           proxy_set_header Connection 'upgrade';  
                           proxy_set_header Host $host;  
                           proxy_cache_bypass $http_upgrade;  
               }  
}
```
```
If you need to configure Nginx beyond what is possible using environment variables, you can provide custom configuration files on either a proxy-wide or per-VIRTUAL_HOST basis.
```

What does this mean exactly? I get conf for global stuff i.e. things that apply to all servers but how do I add specific things to specific servers like rate limiting [or gzip] using limit_req etc

Does the conf file need to be in a specific format for it to be included? I read through the nginx tmpl file and can't find how it's being included

Tried going to the google group to ask the question but getting

```
This group either doesn't exist, or you don't have permission to access it. If you're sure this group exists, contact the Owner of the group and ask them to give you access.
```
I have the following files:

* .env
```env
DOMAIN=localhost.com
```

* docker-whoami.yml
```yml
version: '3.7'

networks:
  default:
    name: nginx-proxy

volumes:
  certs:
  dhpar:
  vhost:
  htmls:

services:
  nginx:
    image: jwilder/nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - certs:/etc/nginx/certs
      - dhpar:/etc/nginx/dhparam
      - vhost:/etc/nginx/vhost.d
      - htmls:/usr/share/nginx/html
      - /var/run/docker.sock:/tmp/docker.sock:ro
  whoami:
    environment:
      VIRTUAL_HOST: whoami.${DOMAIN}
    image: jwilder/whoami
    ports:
      - 8000
```

When I run this in compose mode it works

```shell
docker-compose --project-name whoami -f docker-whoami.yml up -d --force-recreate --remove-orphans
```

![image](https://user-images.githubusercontent.com/35376824/71367379-810b8b80-256a-11ea-9dc1-63d4cae3c3ee.png)

But in swarm mode it just says 503

```shell
docker stack deploy -c docker-nginx.yml nginx
```

![image](https://user-images.githubusercontent.com/35376824/71367412-97b1e280-256a-11ea-8e81-33b2307a389e.png)



Hello community,

I try to setup new Docker app using your very nice nginx-proxy. For only 1 services, my proxy work good. But i would like proxy 2 services (or 2 ports). After add new port, all proxy return error 502 with this log :

`nginx.1 | 2019/12/19 06:33:41 [error] 2227#2227: *151845 no live upstreams while connecting to upstream, client: xx.xxx.xxx.xx, server: myapp.mydomain.com, request: "GET /favicon.ico HTTP/2.0", upstream: "http://myapp.mydomain.com/favicon.ico", host: "myapp.mydomain.com", referrer: "https://myapp.mydomain.com/"`

You can see my docker-compose file : 

```
version: '3.4'

x-common-variables: &common-variables #NODE_ENV: production
  LOCAL_USER_ID: $USER_ID
  LOCAL_GROUP_ID: $GROUP_ID
  PGID: 1000
  PUID: 1000
  TZ: Europe/London
  LETSENCRYPT_EMAIL: ${MAILER_DEFAUT_SENDER_ADDRESS}

services:
  app:
    build: ./config/docker
    container_name: app
    environment:
      <<: *common-variables
      VIRTUAL_HOST: app.${SITE_URL}
      VIRTUAL_PORT: 3339
      LETSENCRYPT_HOST: app.${SITE_URL}
    ports:
      - 3339:3000
    command: yarn web:dev
    volumes:
      - .:/app

  api:
    build: ./config/docker
    container_name: api
    environment:
      <<: *common-variables
      VIRTUAL_HOST: api.${SITE_URL}
      VIRTUAL_PORT: 3340
      LETSENCRYPT_HOST: api.${SITE_URL}
    ports:
      - 3340:1337
    command: yarn api:dev
    volumes:
      - .:/app

networks:
  default:
    external:
      name: nginx-proxy
```

I see multiple ports is supported from docs. Maybe i've wrong configuration ? If i use only 1 services, proxy work good !

Anyone have already use multiple ports ?

Thank you community :)
### What happened?
I tried to execute this container on armv7 platform, which unfortunately fails.

### What you expected to happen?
I expected it to work out-of-the box.

### Error log
```
standard_init_linux.go:211: exec user process caused "exec format error"
```

`docker image inspect jwilder/nginx-proxy |grep -i "Arch"`:
```
"Architecture": "amd64"
```

Related: #1262.
