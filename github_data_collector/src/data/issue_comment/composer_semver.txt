Implementation for https://github.com/composer/semver/issues/72 :)

A constraint should provide a way to retrieve its lower and upper boundaries.

For example `^5.1.3` should return `5.1.3.0` as the lower boundary and `5.99999.99999.99999` as the upper boundary. The exact number of 9 digits and number of version digits needs to match what Composer uses.

Need to review how suffixes like -dev1/0 or -pl99999 would need to be treated here.
Instead of directly matching a constraint, implement functions on the constraints to generate code which verifies if a particular version number matches the constraint. In particular the multi constraint should optimize the expression by checking only the minimally necessary boundaries on a conjunctive constraint.

This is useful to generate code in composer install which later gets verified at runtime and needs to be very fast.
Needs documentation. Considering this library is a wee bit larger than [composer/spdx-licenses](/composer/spdx-licenses), I reckon it deserves proper documentation. E.g. not just some basic usage description in the README. Any suggestions / feedback?
