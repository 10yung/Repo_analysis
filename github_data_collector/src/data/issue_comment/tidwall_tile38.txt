Hi,
Thanks for the application, it's really great.
For my use case of tile38, I end up with a large number of unique fields set in the same key, where many of those objects don't have the field set (say, 20% of unique fields are popular, whereas 80% of fields are sparse).
The current tile38 design for field storage is optimized exclusively for the case where all fields are set. Memory is allocated as though all fields will be filled for every object, so effectively there's an immense memory waste in my use case.
Additionally, the default field value of 0 is particularly intuitive for these kinds of queries. It makes querying the set of objects where the field may not be present a pain.
I'd like to inquire about whether or not there's interest in supporting the sparse field use case from a performance perspective. I have an implementation of a different field storage that's far more efficient in the sparse use case, but I think there's an inherent trade off between having performance in the sparse case and the saturated case. You must add overhead for sparse fields that would reduce performance in the saturated case.
From the benchmarks I've run, performance is order/s of magnitude better for sparse fields, and perhaps ~10% slower for saturated fields. Would a pull request with these changes be supported? 
*Note*: the benchmarks I ran were *specifically* for fields (I think `collection.Set` with many fields), and if I were to guess, the limiting performance factor is elsewhere on queries.
Hi @tidwall ,
We are using tile38 geofencing functionality. But in our project some objects get every time 6 tracked positions coming in at the same time(different lat/lon). We have noticed that sometimes when these 6 positions are partly outside and partly inside of the geofence, we often miss the enter event. 

So we would like to know how does tile38 handle when multiple positions of the same object come at the same time? Would this cause confusions for tile38?

Here is an example :
![example](https://user-images.githubusercontent.com/12998173/72154393-d04a1c80-33b0-11ea-8956-a3d5b946f0c8.jpg)


**Describe the bug**
I got this error on the server when trying to use OBJECT type
WITHIN fleet FENCE OBJECT {"type": "Polygon","coordinates": [[[100.0, 0.0],[101.0, 0.0],[101.0, 1.0],[100.0, 1.0],[100.0, 0.0]]]}

**To Reproduce**
Steps to reproduce the behavior:
1. Run tile38-server
2. Connect using tile38-cli
3. Send the command

**Expected behavior**
Should get OK or JSON replies

**Logs**
If applicable, provide logs, panics, system messages to help explain your problem.

**Operating System (please complete the following information):**
 - OS: Ubuntu 16 / OSX Catalina
 - Version: tile38 1.19.3 (Ubuntu), tile38 1.19.2 (OSX Catalina)

**Additional context**
It was stated as resolved in #260 but not stated what resolves it. Sample object was taken from RFC https://tools.ietf.org/html/rfc7946#section-3.1.9

**Is your feature request related to a problem? Please describe.**

These are the problems that we are trying to solve : 

1. We are trying to run Tile38 as a sidecar to an application that has high reads and low writes. We want to sync data between different instances of Tile 38. In order to do this, whenever a write command is issued to tile38, on success, we send a message to a kafka topic with the command details. Each app instance additionally has a consumer with receives this message and applies the changes to the local Tile38 (if it is not published by the same instance). This approach would improve latency and availability of running tile38

2. We are running Tile38 in stateless containers so we are syncing the AOF produced by Tile38 nodes to S3 periodically, on startup, before loadingAOF, we download the latest file. We also replay messages from kafka for the last 'x' minutes to ensure that we don't miss any updates if we are using (1)

We want to solve these problems using Tile38 hooks. The hooks would just trigger this logic and this logic will reside outside the main tile38 codebase 
 
**Describe the solution you'd like**
We would want to add support for the following hooks in Tile38 : 
1. Pre - AOF load hook 
2. Pre-server server start hook (before health check passes)
3. Post-command execution hooks for write commands (in handInputCommand function)

We did a small [POC](https://github.com/Swiggy/tile38/pull/3/files#diff-e31fc1ab892f0031c7fe5abf00d863b7) to validate this. Please look at comments in the diff 

Please note that these hooks would just be called with some context (only is enabled in config) and Tile38 will provide a no-op implementation for these hooks. The user can bind their custom module to this. 

Then user can inject certain functionalities to tile38 through hooks without the overhead of maintaining the fork. 

We can use hooks to achieve some of the things mentioned in [this](https://github.com/tidwall/tile38/issues/149 ) ticket also.  

**Describe alternatives you've considered**

For problem (1) we have considered moving the logic to the application interaction with tile 38 / library connecting to tile38 and tile38. This is the comparison : 


Criteria | App (Using Tile38) | Redis Client | Tile38 - Server
-- | -- | -- | --
Development | Violates DRY. Repeated work. (HIGH) | Should be implemented for all redis clients and languages, if required. (MEDIUM) | Can be implemented centratally and distributed. (LOW)
Maintainability | Will have to be implemented by application and adoption would be low. | Will have to maintain multiple clients in multiple languages. | Will have to fork Tile38 and maintain although changes will be isolated in clustered mode.
Complexity (Replay) | Should implement replay once health check passes | Once Tile38 health check passes, we will have to replay | Health check can pass once AOF reload and replay can is done.
Complexity (Consumer Group Management) | Would be hard to clean unused consumer group | Easily clean unused consumer groups | Easily clean unused consumer groups
Distribution | Left to the application | Sidecar + Custom Client | Clustered Sidecar



For problem (2) we had considered writing a separate script but the drawback was alerting monitoring etc. needs to be done for this separate process. 

**Additional context**

1. We are using the Kafka approach for HA vs sentinal because as a company we have expertise in maintaining a stable Kafka cluster. 

2. We are uploading AOF instead of using persistent disk because of the limitation of the Kubernetes cluster that we are using internally and have expertise in.  

@tidwall / others, please let us know what you think about this.
Hi.
I am using tile38. Works fast, everything suits.
But there is one problem.
I have objects with geo-coordinates, and many layers.
a layer is a geofence (polygon) and a set of filters over the attributes of objects.
I decided to store the coordinates of the objects in tile38 and, as the name of the fields, the identifiers of the layers into which the object belongs, well, in the value 0 or 1.
The calculation is included in the layer or not, another process is calculated that pushes data into tile38.
To which clients subscribe (SETHOOK) with a filter by fields.

on the test with 5 layers everything worked fine. but adding 500 layers for 25,000 objects, tile38 ate 5GB of RAM
should it be so?
Add pytile38 python client.
Hi, I am running Tile38 docker image on a container instance in the Azure Cloud.
While going through the documentation I found that I can use the SETHOOK command of Tile38 to send messages to an Azure Topic.

`SETHOOK warehouse amqp://<shared_access_key_name>:<shared_access_key_value>@<namespace>.servicebus.windows.net/test-geofence â€¦`

But this doesn't seem to send message to my Topic. Maybe a version problem as Azure uses AMQP v1.0 whereas TIle38 supports AMQP v0.9.1. Or is it something I am doing wrong?

1. Can we set TTL on a geofence in tile38? 
2. Can check if a geofence is created already in tile38, and ingest data to tile 38 only if the geofence is present. 
3. How can we check if a geofence is created? 
4. How do we delete a geofence? I think we can drop the collection but will it delete other metadata when the geofence is created. ? 






Hi @tidwall 

We are looking to use this project in production. Expecting there to be multiple indexes in the order of GBs ( > 100 million points in each index). I want to check if there are any benchmarks around how long it takes for a new slave to be ready to serve traffic with this size of the index.

Also, if I were to copy AOF from the leader and then ask the follower to follow the leader, will that reduce the time to scale up? I have noticed that even after copying the AOF, tile38 takes a considerable time to come up.

Are there any other approaches that you recommend for quick scaling up of Tile38?
Hi there:
 
I am maintaining a project and I received a requirement recently in which I need to find points in an annulus, and I search a lot and find tile38 hasn't supported it directly.  So I request all points in the outer circle USING NEARBY command  and reject points in the inner one. 

I don't think it such complex to get the points in the annulus, because NEARBY can find the points in the outer circle and the inner circle separately.  Is the points in the outer circle minus the points in the inner circle a good solution?

What I said above is my superficial opinion and I am looking forward to receiving a response. 

Thanks