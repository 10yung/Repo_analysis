chameleon-runtime@1.0.0 初始化组件时 会直接覆盖掉传入的options对象
建议保留原本的配置项

src\platform\wx\instance\component.js   51行
代码如下----saart
this.options['options'] = {
      multipleSlots: true // 在组件定义时的选项中启用多slot支持
}
runtimeCore.setOptions(this.options)

------end

![20200107150000](https://user-images.githubusercontent.com/20573782/71875166-a4375d00-315e-11ea-81ab-c383f554c13f.png)

由于业务需求，公司要求改变，统一的字体

Bumps [handlebars](https://github.com/wycats/handlebars.js) from 4.0.12 to 4.5.3.
<details>
<summary>Changelog</summary>

*Sourced from [handlebars's changelog](https://github.com/wycats/handlebars.js/blob/master/release-notes.md).*

> ## v4.5.3 - November 18th, 2019
> Bugfixes:
> 
> - fix: add "no-prototype-builtins" eslint-rule and fix all occurences - f7f05d7
> - fix: add more properties required to be enumerable - 1988878
> 
> Chores / Build:
> - fix: use !== 0 instead of != 0 - c02b05f
> - add chai and dirty-chai and sinon, for cleaner test-assertions and spies, 
>   deprecate old assertion-methods  - 93e284e, 886ba86, 0817dad, 93516a0
> 
> Security:
> 
> - The properties `__proto__`, `__defineGetter__`, `__defineSetter__` and `__lookupGetter__` 
>   have been added to the list of "properties that must be enumerable".
>   If a property by that name is found and not enumerable on its parent, 
>   it will silently evaluate to `undefined`. This is done in both the compiled template and the "lookup"-helper. 
>   This will prevent new Remote-Code-Execution exploits that have been
>   published recently.
> 
> Compatibility notes: 
> 
> - Due to the security-fixes. The semantics of the templates using
>   `__proto__`, `__defineGetter__`, `__defineSetter__` and `__lookupGetter__` in the respect that those expression now return 
>   `undefined` rather than their actual value from the proto.
> - The semantics have not changed in cases where the properties are  enumerable, as in:
> 
> ```js
> {
>   __proto__: 'some string'
> }
> ```
> 
> - The change may be breaking in that respect, but we still only 
>   increase the patch-version, because the incompatible use-cases
>   are not intended, undocumented and far less important than fixing
>   Remote-Code-Execution exploits on existing systems.
> 
> 
> 
> [Commits](https://github.com/wycats/handlebars.js/compare/v4.5.2...v4.5.3)
> 
> ## v4.5.2 - November 13th, 2019
> # Bugfixes
> 
> - fix: use String(field) in lookup when checking for "constructor" - d541378
> - test: add fluent API for testing Handlebars - c2ac79c
> 
> Compatibility notes:
> - no incompatibility are to be expected
></tr></table> ... (truncated)
</details>
<details>
<summary>Commits</summary>

- [`c819c8b`](https://github.com/wycats/handlebars.js/commit/c819c8b533934d2ac18001d7eb27a3205b00c2f3) v4.5.3
- [`827c9d0`](https://github.com/wycats/handlebars.js/commit/827c9d0747bef7d7f89829779523b6b2dcf3051d) Update release notes
- [`f7f05d7`](https://github.com/wycats/handlebars.js/commit/f7f05d7558e674856686b62a00cde5758f3b7a08) fix: add "no-prototype-builtins" eslint-rule and fix all occurences
- [`1988878`](https://github.com/wycats/handlebars.js/commit/198887808780bbef9dba67a8af68ece091d5baa7) fix: add more properties required to be enumerable
- [`886ba86`](https://github.com/wycats/handlebars.js/commit/886ba86c2f9cc71b7d99b9018fbe2d72a57085cc) test/chore: add chai/expect and sinon to "runtime"-environment
- [`0817dad`](https://github.com/wycats/handlebars.js/commit/0817dad7e72c51d07f7700547d0c69aa79a4976b) test: add sinon as global variable to eslint in the specs
- [`93516a0`](https://github.com/wycats/handlebars.js/commit/93516a0b07026ebd23c84fddf270a0c8b570bc59) test: add sinon.js for spies, deprecate current assertions
- [`93e284e`](https://github.com/wycats/handlebars.js/commit/93e284ed9be1e38c5e6945f15af1ccd689f2ada6) chore: add chai and dirty-chai for better test assertions
- [`c02b05f`](https://github.com/wycats/handlebars.js/commit/c02b05fa819f46bb66c878bebc6e8006408ebd5c) fix: use !== 0 instead of != 0
- [`8de121d`](https://github.com/wycats/handlebars.js/commit/8de121d21c88a6ab877e3a0eec9daaac483f3bf0) v4.5.2
- Additional commits viewable in [compare view](https://github.com/wycats/handlebars.js/compare/v4.0.12...v4.5.3)
</details>
<br />

[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=handlebars&package-manager=npm_and_yarn&previous-version=4.0.12&new-version=4.5.3)](https://help.github.com/articles/configuring-automated-security-fixes)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot ignore this [patch|minor|major] version` will close this PR and stop Dependabot creating any more for this minor/major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language
- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language
- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language
- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language

You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/didi/chameleon/network/alerts).

</details>
微信小程序和支付宝小程序（通过mini-html-parser2插件转节点数据）目前都是支持以下形式  
```
我是<span style="color: red;">高亮</span>
```
但是chameleon是文字分段描述，
有望支持吗
以下只提供一种用 eslint 校验CML项目的方案，开发者可以根据自己情况选择；

[如何使用eslint校验本次提交](#如何只用eslint校验本次提交)

[如何使用eslint规范CML项目](#如何使用eslint规范CML项目)

[如何用eslint校验js文件](#eslint校验.js文件)

[如何用eslint校验cml文件](#eslint校验.cml文件)

[如何看standard的具体的rules代表的含义](https://eslint.bootcss.com/demo/)

standard 具体的规则参考 `node_modules/eslint-config-standard/eslintrc.json`

[eslint配置详细解释中文文档](https://eslint.bootcss.com/docs/user-guide/configuring/)


## 如何只用eslint校验本次提交

由于项目的历史原因，之前的提交都没有进行代码的eslint，如果贸然的使用eslint对项目进行修复，那么存在一定的风险，那么如何既能规避这部分风险，又能通过渐进式的方案对项目代码进行lint呢？

答案就是 [lint-staged](https://github.com/okonet/lint-staged)

注意 **lint-staged requires at least version 8.12.0 of Node, please upgrade**

lint-staged 要求 Node >= 8.12.0

它可以帮助我们仅仅对本次提交的代码进行校验，而不会对原来的代码进行全盘校验；

```
npm i eslint lint-staged husky -D

```
然后在项目的package.json 中修改

```json
"husky": {
    "hooks": {
      "pre-commit": "lint-staged",
    }
  },
  "lint-staged": {
    "src/**/*.js": "eslint --fix"  
  },

```
注意 `lint-staged` 配置对象的key值是要校验的文件目录路径

此时我们在修改 `.js` 代码，那么就会通过eslint进行校验了;
接下来就需要配置eslint相关的规则

## 如何使用eslint规范CML项目


CML项目对于系统要求
```
node >= 8.10.0
npm >= 5.6.0
```
注意 **lint-staged requires at least version 8.12.0 of Node, please upgrade**

lint-staged 要求 Node >= 8.12.0，所以如果想仅仅对当前提交对校验，那么需要 node版本 >= 8.12.0 

### eslint校验.js文件
我们使用`standard`标准下的eslint规范

```
npm i eslint-config-standard eslint-plugin-import eslint-plugin-node eslint-plugin-promise eslint-plugin-standard -D
```

在项目根目录新建 `.eslintrc.js` 文件,写入以下内容

```javascript
module.exports = {
  root:true,//
  env: {
    browser: true,
    es6: true,
  },
  extends: [
    'standard',
  ],
  globals: {
    Atomics: 'readonly',
    SharedArrayBuffer: 'readonly'
  },
  parserOptions: {
    ecmaVersion: 2018,
    parser:"babel-eslint"
  },
  rules: {
  }
}
```

经过以上步骤就可以对项目中的每次新提交的 `.js` 文件进行校验了；

比如按照 `standard` 的标准某些规则不太喜欢，那么可以在 `rules`中覆盖设置，比如：

```javascript
rules: {
    "semi":"off" //0
}
```


### eslint校验 .cml 文件

```
npm i eslint-plugin-vue  babel-eslint -D
```

然后在项目中`.eslintrc.js`中增加配置

```javascript
//继承 vue/base 的配置，源码可参考 eslint-plugin-vue/lib/configs/base.js
extends: [
  'plugin:vue/base',
  'standard',
],
//关闭 plugin:vue/base 中的这两个规则，因为有时候可能会导致模板中某些校验无法通过；
rules: {
    'vue/comment-directive': 'off',
    'vue/jsx-uses-vars': 'off'
  }
```

`package.json` 中增加在 lint-staged阶段增加对于 `.cml` 文件的校验

```json
"lint-staged": {
    "src/**/*.{js,cml}": "eslint --fix"  
  },
```

eslint 规则的配置开发者可以根据[eslint官方文档](http://eslint.cn/docs/user-guide/configuring)自定义校验规则。


**bug描述**
template errors:
[8 (line), 20 (column)] method: "doSomething" is not defined.
[file]: src/pages/demo/index.cml

**复现bug的步骤**
<view c-bind:tap="demo"></view>
方法demo定义在mixins里，代码可以正常运行，但是出现了上面的报错
所以这个报错是不是得优化下，也要检测定义在mixins里的方法

**编译环境信息**
 - chameleon-tool 版本：[e.g.0.1.0]
 - nodejs版本、npm版本：[node v8.11.4、npm 5.6.0]
 - 电脑操作系统： [e.g. macOS High Sierra 10.13.6]

**运行环境信息**
 - 端版本： [e.g. 微信小程序 7.0.3、weex 2.0、手机Safari浏览器 、PC Chrome浏览器 1.30]
 - 手机机型: [e.g. iPhone6 12.0]

当前端只能判断到web没法再区分是否是微信浏览器

JWT方式下,登录如何设置token？如果用户强刷页面，本地该如何存储？
新版本发布：
## [1.0.4-alpha.1]

  - 解决分包内组件js分包不彻底，优化包体积40%左右
  - 支持原生小程序组件的导入也是函数式的
  - 支持公用样式以文件的形式导入
  - 支持模板多态语法

## 分包优化教程

具体优化步骤参考 [CML项目分包优化教程](https://github.com/chameleon-team/cml-subpage)

## 支持开发者通过自定义配置体验微信小程序云开发

具体使用步骤参考 [CML如何进行微信小程序云开发](https://github.com/chameleon-team/cml-cloud)



**bug描述**
【微信小程序】
  1. A 页面进入 B页面（使用 refresh-view， 监听 onPullUpLoad 事件），返回A，再次进入B， 上拉加载， 会多触发一次  onPullUpLoad 事件
  2. 重复步骤 1 ，重复一次， onPullUpLoad 事件就会累加触发次数

**复现bug的步骤**
参考bug描述

**问题截图**
以下是自己调试时候发现的问题代码
![image](https://user-images.githubusercontent.com/9876388/71048245-a880e380-2179-11ea-92e9-2c416f6a3c43.png)
作如下修改，可以修复bug
![image](https://user-images.githubusercontent.com/9876388/71048258-b0d91e80-2179-11ea-8bda-c3af447e4ca6.png)



**编译环境信息**
 - chameleon-tool 版本：[e.g.0.1.0]
 - nodejs版本、npm版本：[node v8.11.4、npm 5.6.0]
 - 电脑操作系统： [macOS]

**运行环境信息**
 - 端版本： [微信小程序、 微信开发者工具] 


**期望能有官方的解决办法，谢谢！**