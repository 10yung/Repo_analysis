**current implementation :** 

"run and download" streams the results via [DownloadController](https://github.com/wix/quix/blob/26324016dc960feac28bc9c5ffc183fe948aa4d7/quix-backend/quix-webapps/quix-web-spring/src/main/scala/quix/web/controllers/DownloadController.scala#L19)

on query execution start, [Download](https://github.com/wix/quix/blob/master/quix-backend/quix-api/src/main/scala/quix/api/execute/ExecutionProtocol.scala#L33) event is used to send the link to the client. 

Quix-frontend opens a new tab and starts the download while receiving rest of execution events in the note.

**Drawbacks of this approach :** 
* Code is a bit more complex as we need to pause query execution until quix-frontend opens the download link.
* Download link must be sent to the same backend that started the execution, thus complicating horizontal scaling of quix-backend

**proposed improvement :** 
* instead of streaming results to browser, stream them into one of many cloud storage systems (s3 for example) and upon completion send the link to browser via [Download](https://github.com/wix/quix/blob/master/quix-backend/quix-api/src/main/scala/quix/api/execute/ExecutionProtocol.scala#L33) event

**what should be updated :** 
* on [startSubQuery in DownloadBuilder](https://github.com/wix/quix/blob/c25e30b50bbf8c68402fe70f8c67d85463d09016/quix-backend/quix-core/src/main/scala/quix/core/download/DownloadBuilder.scala#L38-L58) we must create a new file that will store the results
* on [addSubQuery in DownloadBuilder](https://github.com/wix/quix/blob/c25e30b50bbf8c68402fe70f8c67d85463d09016/quix-backend/quix-core/src/main/scala/quix/core/download/DownloadBuilder.scala#L60-L83) we will append column names and append bulks of results
* on [endSubQuery in DownloadBuilder](https://github.com/wix/quix/blob/c25e30b50bbf8c68402fe70f8c67d85463d09016/quix-backend/quix-core/src/main/scala/quix/core/download/DownloadBuilder.scala#L85-L90) we will close the file and send Download event to quix-frontend
* [DownloadConfig](https://github.com/wix/quix/blob/3ce90f7c6ab18f41db6d00ba61f5a0825578294a/quix-backend/quix-core/src/main/scala/quix/core/download/DownloadableQueriesImpl.scala#L8) should be updated to include details of cloud storage
* [installation.md](https://github.com/wix/quix/blob/1120f6feb72fde6597a5cf0c0e7911af561f127e/documentation/docs/installation.md) should be updated to include the steps needed to enable cloud storage during "run and download" scenario




1. We dont have a presto installed
when we create a note the only type we have is BQ

2. this is the console:
Deprecation warning: use moment.updateLocale(localeName, config) to change an existing locale. moment.defineLocale(localeName, config) should only be used for creating a new locale See http://momentjs.com/guides/#/warnings/define-locale/ for more info. app.bundle.js:32079:21
window.controllers/Controllers is deprecated. Do not use it for UA detection. app.bundle.js:39626
The Notification permission may only be requested in a secure context. quix.cyco.fun:3000
Requesting Notification permission outside a short running user-generated event handler is deprecated and will not be supported in the future. quix.cyco.fun:3000
TypeError: "scope.vm is undefined"
    conf http://quix.cyco.fun:3000/app.bundle.js:135900
    withOptions http://quix.cyco.fun:3000/app.bundle.js:110682
    $digest http://quix.cyco.fun:3000/app.bundle.js:86812
    safeDigest http://quix.cyco.fun:3000/app.bundle.js:28105
    subscribe http://quix.cyco.fun:3000/app.bundle.js:124964
    controller http://quix.cyco.fun:3000/app.bundle.js:171155
    step http://quix.cyco.fun:3000/app.bundle.js:171113
    verb http://quix.cyco.fun:3000/app.bundle.js:171094
    fulfilled http://quix.cyco.fun:3000/app.bundle.js:171085
app.bundle.js:83239:41
TypeError: plugin is undefined
app.bundle.js:135909:29
TypeError: "scope.vm is undefined"
    conf http://quix.cyco.fun:3000/app.bundle.js:135900
    withOptions http://quix.cyco.fun:3000/app.bundle.js:110682
    $digest http://quix.cyco.fun:3000/app.bundle.js:86812
    $apply http://quix.cyco.fun:3000/app.bundle.js:87172
    onBlur http://quix.cyco.fun:3000/app.bundle.js:28126
    dispatch http://quix.cyco.fun:3000/app.bundle.js:22502
    handle http://quix.cyco.fun:3000/app.bundle.js:22309
app.bundle.js:83239:41
TypeError: plugin is undefined
app.bundle.js:135909:29
TypeError: "scope.vm is undefined"
    conf http://quix.cyco.fun:3000/app.bundle.js:135900
    withOptions http://quix.cyco.fun:3000/app.bundle.js:110682
    $digest http://quix.cyco.fun:3000/app.bundle.js:86812
    safeDigest http://quix.cyco.fun:3000/app.bundle.js:28105
    subscribe http://quix.cyco.fun:3000/app.bundle.js:124964
    controller http://quix.cyco.fun:3000/app.bundle.js:171155
    step http://quix.cyco.fun:3000/app.bundle.js:171113
    verb http://quix.cyco.fun:3000/app.bundle.js:171094
    fulfilled http://quix.cyco.fun:3000/app.bundle.js:171085
app.bundle.js:83239:41
TypeError: plugin is undefined
app.bundle.js:135909:29
Source map error: Error: request failed with status 404
Resource URL: http://quix.cyco.fun:3000/app.bundle.js
Source Map URL: actions.js.map
## Day 1

- Created a History page
- Added History to navbar
- Created mock data for history page
- Added click handlers that run the playground
- Initial research on infinite scrolling

## Day 2

- Connected to the service + proxy to the presto DB
- More UI customizations and tweaks
- Merged last week backend history code
- Added History service and entities.

## Day 3

- Sorting support
- Filtering support

## Day 4

- Pagination support
- Styling
- Better filtering and filter results highlighting

## Day 5

- Polishing styling
- Added initial tests
- Creating final PR
- Wrapping up - Docs & detailed status
<table>
  <tbody>
    <tr>
      <th>Type</th>
      <td>New Feature</th>
    </tr>
    <tr>
      <th>Issue</th>
      <td>Terraform provisioning for QUIX Oss</th>
    </tr>
    <tr>
      <th>Change</th>
      <td>QUIX Demo Setup on AWS via Terraform</th>
    </tr>
  </tbody>
</table>

## Description

This pull request adds provisioning via [Terraform](http://terraform.io) the QUIX with [MySQL on top of AWS RDS](https://aws.amazon.com/rds/) and [Presto](http://prestodb.github.io) on [AWS ECS](https://aws.amazon.com/ecs/) with [AWS FARGATE](https://aws.amazon.com/fargate/). 
Terraform state and lock is saved in [AWS S3](https://aws.amazon.com/s3/) & [AWS DynamoDB](https://aws.amazon.com/dynamodb/)

## Copyright

By making a contribution to this project, I certify that:

(a) The contribution was created in whole or in part by me and I have the right to submit it under the MIT and Apache 2.0 licenses; or

(b) The contribution is based upon previous work that, to the best of my knowledge, is covered under an appropriate open source license and I have the right under that license to submit that work with modifications, whether created in whole or in part by me, under the MIT or Apache 2.0 licenses; or

(c) The contribution was provided directly to me by some other person who certified (a), (b) or (c) and I have not modified it.

(d) I understand and agree that this project and the contribution are public and that a record of the contribution (including all personal information I submit with it) is maintained indefinitely and may be redistributed consistent with this project or the open source license(s) involved.
https://github.com/wix/quix/issues/174
    To use
```
    docker-compose -f docker-compose-es.prebuilt.yml up
```
Elasticsearch will be at `elasticsearch:9200` 
You can use Kibana to query it `http://localhost:5601/`
**example of errors :** 

1) 
![image](https://user-images.githubusercontent.com/2934915/69785165-1dd34700-11c0-11ea-958e-e733c405e1a8.png)

2) 
![image](https://user-images.githubusercontent.com/2934915/69785195-304d8080-11c0-11ea-91c5-fba55385a09b.png)

from `this.showSyntaxErrors = plugin.getConfig().syntaxValidation;`

**how to reproduce :** 
1) create presto note in demo
2) remove presto from modules list
3) restart docker-compose and load the notebook with presto note

- [ ] Sort on header click
- [ ] filter on header
- [ ] pivot table 

- [ ] Consider disabling certain features if result set is too large 
- [ ] Dual axis chart
- [ ] Heatmap