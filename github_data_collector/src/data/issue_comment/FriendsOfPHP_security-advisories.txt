The PHP Excel project released another version which basically archived the project but importantly didn't fix this vulnerability.

Changes in the 1.8.2 release: https://github.com/PHPOffice/PHPExcel/compare/1.8.2...1.8
Using the testfile `drupal/drupal/CVE-2019-6342.yaml`

With content:
```yaml
title: Critical - Access bypass
link: https://www.drupal.org/sa-core-2019-008
cve: CVE-2019-6342
branches:
    8.7.x:
        time:     2019-07-16 16:24:00
        versions: ['8.7.4']
reference: composer://drupal/drupal
```

Results in a failing validation:
Run `php.exe -d memory_limit=-1 C:\Users\marco\projects\security-advisories\validator.php`

Output:
```
...
+----------------------------------+------------------------------------------------------------+
| File                             | Issues                                                     |
+----------------------------------+------------------------------------------------------------+
| drupal\drupal\CVE-2019-6342.yaml | Version constraint "8.7.4" is not in an acceptable format. |
|                                  | "versions" must have an upper bound for branch "8.7.x".    |
+----------------------------------+------------------------------------------------------------+`
...
```

IMHO `$isAcceptableVersionConstraint` should allow this kind of version constraint.

Opinions?
The Package URL (purl) specification defines a "mostly" universal way of describing components regardless of language or ecosystem. Package URL has been adopted by:

- OWASP Dependency-Track
- OWASP Dependency-Check (in progress)
- CycloneDX
- SPDX (in progress)
- SWID (in progress)
- Sonatype OSSIndex

And is being considered by many other vendors as well as NIST.

Package URL support would simply add an additional field to existing advisories. For example:

```yaml
title:     Cross-Site Scripting
link:      https://github.com/erusev/parsedown/pull/495
cve:       CVE-2018-1000162
branches:
    1.x:
        time:     ~
        versions: ['<1.7.0']
reference: composer://erusev/parsedown
purl: pkg:composer/erusev/parsedown
```

Ideally, Package URL would also be supported by security.symfony.com as an alternative to supplying composer.lock. For organizations leveraging BOMs (CycloneDX or SPDX for example) it would be possible for them to simply supply a list of Package URLs and retrieve vulnerability information (similar to OSSIndex). For example, a request containing `pkg:composer/erusev/parsedown@1.6.0` would return the above vulnerability. 

Supporting Package URL in both advisories as well as the Symfony Security service would provide new opportunities for integration - OWASP Dependency-Track for example.