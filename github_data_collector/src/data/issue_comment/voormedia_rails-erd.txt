Hi!
I started updating the website to handle #308 . It appears that using an up to date gem for github-pages solved the issue...

I may continue to update things (rails version / README / etc for instance if find some time #314 , etc ).

Thanks for this gem!
Hi all,

Apologies in advance for the inexperience that may be reflected in this question. I'd really like to get rails-erd to work, but I'm getting a strange output.

### Environment
Ruby 2.4.3; Sinatra 2.6.14; ActiveRecord 4.2.8; MySQL 5.7.
The database is running in a Docker service on my local machine.

### Output
I'm generating a model (erd.pdf) that has one element in it, titled "ActiveRecord::SchemaMigrations," with one property: "version: string *".

Output with bundle exec erd:
```
Loading application in '***'...
Generating entity-relationship diagram for 1 models...
Diagram saved to 'erd.pdf'.
```
 Trace with rake:
```
** Invoke erd (first_time)
** Invoke environment (first_time)
** Execute environment
** Execute erd
```

### Procedure
Added the rails-erd gem and re-ran bundle install.
$ bundle exec erd

I also saw instructions regarding Sinatra and created a rake task that calls "RailsERD::Diagram::Graphviz.create," then ran
$ bundle exec rake erd 

Both methods produce the same single-element model (there are about 50 files in models/ ).

I hope you can tell from the symptoms what could be going wrong--please let me know if there is anything else useful I can share.



> DEPRECATION WARNING: `Module#parent` has been renamed to `module_parent`. `parent` is deprecated and will be removed in Rails 6.1.

Rails 6 deprecated `Module#parent` and friends in rails/rails#34051, replacing them with a `module_*`-prefix naming scheme. This checks to see if `module_parent` is defined, using it if it's available.
Hi, I'm trying to generate my ERD diagram, I have a Rails 6 app. The pdf is generate but the result is not what I expected.

<img width="1294" alt="Captura de Pantalla 2019-09-16 a la(s) 22 42 18" src="https://user-images.githubusercontent.com/13748811/65004598-5f4b9a00-d8d3-11e9-976d-593aacd10c6d.png">

Even though I can generate erd.dot and there is content.

Thank you very much
```
autoprefixer: /home/tim/.rvm/gems/ruby-2.6.3/gems/erd-0.6.3/app/assets/stylesheets/erd/erd.css.scss:58:3: You should write display: flex by final spec instead of display: box
autoprefixer: /home/tim/.rvm/gems/ruby-2.6.3/gems/erd-0.6.3/app/assets/stylesheets/erd/erd.css.scss:196:3: Gradient has outdated direction syntax. New syntax is like `to left` instead of `right`.
autoprefixer: /home/tim/.rvm/gems/ruby-2.6.3/gems/erd-0.6.3/app/assets/stylesheets/erd/erd.css.scss:363:3: Gradient has outdated direction syntax. New syntax is like `to left` instead of `right`.
autoprefixer: /home/tim/.rvm/gems/ruby-2.6.3/gems/erd-0.6.3/app/assets/stylesheets/erd/erd.css.scss:417:3: Gradient has outdated direction syntax. New syntax is like `to left` instead of `right`.
autoprefixer: /home/tim/.rvm/gems/ruby-2.6.3/gems/erd-0.6.3/app/assets/stylesheets/erd/erd.css.scss:432:3: Gradient has outdated direction syntax. New syntax is like `to left` instead of `right`.

```
I went to [rails-erd's API doc on rubydoc.info](http://rubydoc.info/github/voormedia/rails-erd/frames) then clicked `[View on GitHub]` links but the all lead me to 404 on GitHub. 

Unfortunately, as I'm not familiar with yard, I could not find out the root cause, yard, rubydoc.info or usage of yard in this project. 
A model `Foo` has a length validator on field `bar`, with a `Proc` as `maximum` value:
```ruby
class Foo < ApplicationRecord
  validates :bar, length: {
    maximum:  ->(foo) { foo.max_length_allowed }
  }
end
```
Running `bundle exec erd` would fail with message `ArgumentError: bad value for range` pointing to https://github.com/voormedia/rails-erd/blob/master/lib/rails_erd/domain/relationship.rb#L171
```ruby
      def associations_range(associations, absolute_max)
        # The minimum of the range is the maximum value of each association
        # minimum. If there is none, it is zero by definition. The reasoning is
        # that from all associations, if only one has a required minimum, then
        # this side of the relationship has a cardinality of at least one.
        min = associations.map { |assoc| association_minimum(assoc) }.max || 0

        # The maximum of the range is the maximum value of each association
        # maximum. If there is none, it is equal to the absolute maximum. If
        # only one association has a high cardinality on this side, the
        # relationship itself has the same maximum cardinality.
        max = associations.map { |assoc| association_maximum(assoc) }.max || absolute_max

        min..max
      end
```

In this case `max` would equal the `Proc` object representing the line `->(foo) { foo.max_length_allowed }`.

A quick and dirty solution would be to [modify](https://github.com/voormedia/rails-erd/blob/master/lib/rails_erd/domain/relationship.rb#L181) `association_maximum` to something like
```ruby
      def association_maximum(association)
        maximum = association.collection? ? N : 1
        length_validators = association_validators(:length, association)
        result = length_validators.map { |v| v.options[:maximum] }.compact.min or maximum
        result.respond_to?(:call) ? maximum : result
      end
```

The same applies to `minimum` parameter.
# Why
## Related Issue
https://github.com/voormedia/rails-erd/issues/282

## Related PR
https://github.com/voormedia/rails-erd/pull/295

## Cause
When I added require false option in `Gemfile` and added requirement in generated `lib/auto_generate_diagram.rake` file,  I encountered errors as followings.

```
Don't know how to build task 'erd' (See the list of available tasks with `rails --tasks`)
```

I think loading is only `/tasks/**/*.rake` file as followings.

https://github.com/voormedia/rails-erd/blob/0fbb1cdf2c84b06afd12974baace8d512bb798da/lib/rails_erd.rb#L67

It doesn't include `raile_erd/tasks.rake` file.
So, `Rake::Task["erd"]` is not loaded.

# What did I do
- Rename(Replace) `rails_erd/tasks.rake` to `tasks/erd.rake`
- Fix template for adding requirement.
- Fix README for adding require false option.
When dividing reflected associations into relationships there is some incorrect handling in determining the direction of the `Relationship`. Specifically, the code is relying on `belongs_to?` to determine if an `ActiveRecord::AssociationReflection` is a reverse association. But this is incorrect: only a `BelongsToReflection` has `belongs_to? == true`, but a `ThroughReflection` can have a `@source_reflection` which is a `BelongsToReflection` and is therefore a reverse association. 

Thus these can end up incorrectly in the `@forward_associations`. Therefore when the code sets the source and destination based on the first of `@forward_associations` it can get it wrong if it picks up that `ThroughReflection`. `cardinality` and `mutual?` will also be directly affected by this, and `indirect?`should really be based on `associations` not just `@forward_associations`. 

Example: 
```ruby
class A  < ActiveRecord::Base
  has_many :bs
end

class B < ActiveRecord::Base
  belongs_to :a
  has_many :cs
end

class C < ActiveRecord::Base
  belongs_to :b
  has_one :a, through: :b
end
```

The `A/C` relationship will have their sole association in `@forward_associations` and incorrectly identify the orientation of the relationship. 

Relevant source: 

https://github.com/voormedia/rails-erd/blob/0fbb1cdf2c84b06afd12974baace8d512bb798da/lib/rails_erd/domain/relationship.rb#L63-L71

`partition_associations` is generally based on `belongs_to?`

https://github.com/voormedia/rails-erd/blob/0fbb1cdf2c84b06afd12974baace8d512bb798da/lib/rails_erd/domain/relationship.rb#L147-L156
The README provides an example `.erdconfig`, stating that the values given are the defaults. However the [linked documentation](https://voormedia.github.io/rails-erd/customise.html) that explains these properties and values provides different default values for several of the properties (`attributes`, `filename`, and `indirect`, for example) and omits several others (`markup`, `sort`, `prepend_primary`, `cluster`, and `splines`).