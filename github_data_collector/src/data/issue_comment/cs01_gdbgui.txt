When I am using gdbgui to debug Linux kernel remotely, I noticed that gdbgui will cause some exceptions (pasted at the end of this issue) for some reason. And looks like the reason is that those artifact commands are causing the issue.
Hence I am requesting raw mode - when this mode is enabled, no artificial commands will be sent. 

This mode may prevent some features working properly (those need  artificial commands to work) and it is acceptable.



================= Pasted Log ======================
No gdb response received after 10 seconds.

Possible reasons include:

1) gdbgui, gdb, or the debugged process is not running.

2) gdb or the inferior process is busy running and needs to be interrupted (press the pause button up top).

3) Something is just taking a long time to finish and respond back to this browser window, in which case you can just keep waiting.
Bumps [handlebars](https://github.com/wycats/handlebars.js) from 4.1.2 to 4.5.3.
<details>
<summary>Changelog</summary>

*Sourced from [handlebars's changelog](https://github.com/wycats/handlebars.js/blob/master/release-notes.md).*

> ## v4.5.3 - November 18th, 2019
> Bugfixes:
> 
> - fix: add "no-prototype-builtins" eslint-rule and fix all occurences - f7f05d7
> - fix: add more properties required to be enumerable - 1988878
> 
> Chores / Build:
> - fix: use !== 0 instead of != 0 - c02b05f
> - add chai and dirty-chai and sinon, for cleaner test-assertions and spies, 
>   deprecate old assertion-methods  - 93e284e, 886ba86, 0817dad, 93516a0
> 
> Security:
> 
> - The properties `__proto__`, `__defineGetter__`, `__defineSetter__` and `__lookupGetter__` 
>   have been added to the list of "properties that must be enumerable".
>   If a property by that name is found and not enumerable on its parent, 
>   it will silently evaluate to `undefined`. This is done in both the compiled template and the "lookup"-helper. 
>   This will prevent new Remote-Code-Execution exploits that have been
>   published recently.
> 
> Compatibility notes: 
> 
> - Due to the security-fixes. The semantics of the templates using
>   `__proto__`, `__defineGetter__`, `__defineSetter__` and `__lookupGetter__` in the respect that those expression now return 
>   `undefined` rather than their actual value from the proto.
> - The semantics have not changed in cases where the properties are  enumerable, as in:
> 
> ```js
> {
>   __proto__: 'some string'
> }
> ```
> 
> - The change may be breaking in that respect, but we still only 
>   increase the patch-version, because the incompatible use-cases
>   are not intended, undocumented and far less important than fixing
>   Remote-Code-Execution exploits on existing systems.
> 
> 
> 
> [Commits](https://github.com/wycats/handlebars.js/compare/v4.5.2...v4.5.3)
> 
> ## v4.5.2 - November 13th, 2019
> # Bugfixes
> 
> - fix: use String(field) in lookup when checking for "constructor" - d541378
> - test: add fluent API for testing Handlebars - c2ac79c
> 
> Compatibility notes:
> - no incompatibility are to be expected
></tr></table> ... (truncated)
</details>
<details>
<summary>Commits</summary>

- [`c819c8b`](https://github.com/wycats/handlebars.js/commit/c819c8b533934d2ac18001d7eb27a3205b00c2f3) v4.5.3
- [`827c9d0`](https://github.com/wycats/handlebars.js/commit/827c9d0747bef7d7f89829779523b6b2dcf3051d) Update release notes
- [`f7f05d7`](https://github.com/wycats/handlebars.js/commit/f7f05d7558e674856686b62a00cde5758f3b7a08) fix: add "no-prototype-builtins" eslint-rule and fix all occurences
- [`1988878`](https://github.com/wycats/handlebars.js/commit/198887808780bbef9dba67a8af68ece091d5baa7) fix: add more properties required to be enumerable
- [`886ba86`](https://github.com/wycats/handlebars.js/commit/886ba86c2f9cc71b7d99b9018fbe2d72a57085cc) test/chore: add chai/expect and sinon to "runtime"-environment
- [`0817dad`](https://github.com/wycats/handlebars.js/commit/0817dad7e72c51d07f7700547d0c69aa79a4976b) test: add sinon as global variable to eslint in the specs
- [`93516a0`](https://github.com/wycats/handlebars.js/commit/93516a0b07026ebd23c84fddf270a0c8b570bc59) test: add sinon.js for spies, deprecate current assertions
- [`93e284e`](https://github.com/wycats/handlebars.js/commit/93e284ed9be1e38c5e6945f15af1ccd689f2ada6) chore: add chai and dirty-chai for better test assertions
- [`c02b05f`](https://github.com/wycats/handlebars.js/commit/c02b05fa819f46bb66c878bebc6e8006408ebd5c) fix: use !== 0 instead of != 0
- [`8de121d`](https://github.com/wycats/handlebars.js/commit/8de121d21c88a6ab877e3a0eec9daaac483f3bf0) v4.5.2
- Additional commits viewable in [compare view](https://github.com/wycats/handlebars.js/compare/v4.1.2...v4.5.3)
</details>
<br />

[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=handlebars&package-manager=npm_and_yarn&previous-version=4.1.2&new-version=4.5.3)](https://help.github.com/articles/configuring-automated-security-fixes)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot ignore this [patch|minor|major] version` will close this PR and stop Dependabot creating any more for this minor/major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language
- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language
- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language
- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language

You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/cs01/gdbgui/network/alerts).

</details>
Make it easier to connect to a gdbserver on a remote target.  You can not specify to connect to `target_ip:port`.  You always have to use the drop down list.  The command line arguments always look for a local program.

It would be nice to use something like `gdbgui --target target_ip:port`.

I have tried adding the target remote to a gdb script that I use.
```
target remote 192.168.42.225:1323
```
The downside to this is that gdbgui doesn't stop at main but at (for me) `_dlstart`.  It also mandates creating a gdb init script so the command line would be something like:
`gdbgui -g $GDB --gdb-args "-ix gdb_script"`. 

Python error error under cygwin.
`ERROR - Traceback (most recent call last):
  File "/home/Albert/.local/pipx/venvs/gdbgui/lib/python3.6/site-packages/gdbgui/backend.py", line 357, in run_gdb_command
    controller.write(cmd, read_response=False)
  File "/home/Albert/.local/pipx/venvs/gdbgui/lib/python3.6/site-packages/pygdbmi/gdbcontroller.py", line 201, in write
    self.verify_valid_gdb_subprocess()
  File "/home/Albert/.local/pipx/venvs/gdbgui/lib/python3.6/site-packages/pygdbmi/gdbcontroller.py", line 177, in verify_valid_gdb_subprocess
    % str(self.gdb_process.poll())
pygdbmi.gdbcontroller.NoGdbProcessError: gdb process has already finished with return code: -11
`
Error under GDB 8:
`$ gdb
GNU gdb (GDB) (Cygwin 8.1.1-1) 8.1.1
`
Using GDB 7 everything works fine.
When I press fetch disassembly
-data-disassemble: Usage: ( [-f filename -l linenum [-n howmany]] | [-s startaddr -e endaddr]) [--] mode.
it pops out this on my gdbgui
**Describe the bug**
The ordering of --gdb-args="..." and --args ... can be problematic

**To Reproduce**
consider the following bash script:
program=path to the bin file
prefixedDirs="-d dir1_path -d dir2_path"
arguments="$prefixedDirs --args $program -a 1 -b 2 -c 3"
gdb --tui $arguments # this works fine
gdbgui --gdb-args="${arguments}" # error: gdbgui is not able to identify correctly the bin file
gdbgui ${program} --gdb-args="${prefixedDirs}" --args -a 1 -b 2 -c 3 # error: the ordering of the gdb arguments is incorrect
gdbgui ${program} --args -a 1 -b 2 -c 3 --gdb-args="${prefixedDirs}" # error: not permitted by gdbgui, as explained by gdbgui --info
# How can I pass arguments to gdbgui in order to obtain a call to gdb with the correct arguments ordering?

Hello!

I have seen a few tickets related to windows support that have been closed. Since they are closed, I am making the assumption that people have figured out fixes that I may not be realizing. Could someone point me in the right direction?

Related Issue(s)
https://github.com/cs01/gdbgui/issues/18

At the root of this, I am trying to run guincorn on windows 10 using Cygwin

I have successfully upgraded gdbgui (pip install gdbgui --upgrade)
gdbgui==0.13.2.0

```
$ gunicorn
Traceback (most recent call last):
  File "C:\Users\jz\AppData\Local\Programs\Python\Python37\Lib\runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "C:\Users\jz\AppData\Local\Programs\Python\Python37\Lib\runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "C:\Users\jz\.virtualenvs\venv-Z2lewwtS\Scripts\gunicorn.exe\__main__.py", line 5, in <module>
  File "c:\users\jz\.virtualenvs\venv-z2lewwts\lib\site-packages\gunicorn\app\wsgiapp.py", line 9, in <module>
    from gunicorn.app.base import Application
  File "c:\users\jz\.virtualenvs\venv-z2lewwts\lib\site-packages\gunicorn\app\base.py", line 12, in <module>
    from gunicorn import util
  File "c:\users\jz\.virtualenvs\venv-z2lewwts\lib\site-packages\gunicorn\util.py", line 9, in <module>
    import fcntl
ModuleNotFoundError: No module named 'fcntl'

```

Hi,

I'm using Win10 Linux subsystem Ubuntu 18. Before I open gdbgui, the terminal is like:
![image](https://user-images.githubusercontent.com/35322222/67154117-ed3beb80-f2aa-11e9-8b03-5d11ec9bcc71.png)

Once I open gdbgui, the font changes automatically and looks very ugly:
![image](https://user-images.githubusercontent.com/35322222/67154126-22e0d480-f2ab-11e9-875a-0d61439754f7.png)

How can I solve the issue? Thanks!

**Is your feature request related to a problem? Please describe.**
The frontend terminal is not truly interactive. gdb behaves differently when it is connected to a terminal and will prompt and wait for user responses rather than assume things and carry on.

**Describe the solution you'd like**
A fully interactive terminal with gdb in the frontend. xterm.js can be used to render the terminal, and Python pty's can be used on the backend. One will be created for the user to interact with, and another for the UI to send/receive gdb's mi2 messages.

**Describe alternatives you've considered**
A clear and concise description of any alternative solutions or features you've considered.

**Additional context**
https://xtermjs.org/ can be used  to render the terminal in the frontend.

The `new-ui` command can be used to split I/O between the UI for the gui and the terminal for the user. https://sourceware.org/gdb/onlinedocs/gdb/Interpreters.html
**Describe the bug**
In the command prompt of the tool I am debugging (it uses a csh shell as its prompt), every time I run any command, some extra gdb related commands are executed along with it.

**Screenshots**
```
tool_prompt> Error: unknown command '1-thread-info'
tool_prompt> Error: unknown command '1-stack-list-variables'
tool_prompt> Error: unknown command '1-var-update'
tool_prompt> Error: unknown command '1-data-list-register-values'
tool_prompt> Error: unknown option '-break-list'
```

**Please complete the following information:**
* OS:  2.6.32-754.11.1.el6.x86_64 Linux 
* gdbgui version: 0.13.2.0
* gdb version: 8.3
* browser: firefox 60.5.1
* python packages:
alabaster==0.7.12
argcomplete==1.10.0
attrs==19.1.0
Babel==2.7.0
certifi==2019.6.16
chardet==3.0.4
Click==7.0
distro==1.4.0
docutils==0.15.1
docwriter==1.1.1
Flask==0.12.4
Flask-Compress==1.4.0
Flask-SocketIO==2.9.6
gdbgui==0.13.2.0
gevent==1.4.0
greenlet==0.4.15
idna==2.8
imagesize==1.1.0
itsdangerous==1.1.0
Jinja2==2.10.1
livereload==2.6.1
Markdown==3.1.1
MarkupSafe==1.1.1
meson==0.50.1
mistune==0.8.4
mkdocs==1.0.4
mkdocs-material==4.0.2
msgpack==0.6.1
ninja==1.9.0
packaging==19.1
pycscope==1.2.1
pygdbmi==0.9.0.2
Pygments==2.3.1
pymdown-extensions==6.0
pynvim==0.3.2
pyparsing==2.4.2
python-engineio==3.9.3
python-socketio==4.3.1
pytz==2019.2
PyYAML==5.1
requests==2.22.0
six==1.12.0
snowballstemmer==1.9.1
Sphinx==3.0.0.dev20190906
sphinxcontrib-applehelp==1.0.1
sphinxcontrib-devhelp==1.0.1
sphinxcontrib-htmlhelp==1.0.2
sphinxcontrib-jsmath==1.0.1
sphinxcontrib-qthelp==1.0.2
sphinxcontrib-serializinghtml==1.1.3
tornado==6.0.3
urllib3==1.25.3
userpath==1.2.0
Werkzeug==0.15.6
xdot==1.1

