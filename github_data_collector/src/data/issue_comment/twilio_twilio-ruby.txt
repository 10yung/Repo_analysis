In the 5.28.0 version in the [taskrouter workspace task file](https://github.com/twilio/twilio-ruby/blob/master/lib/twilio-ruby/rest/taskrouter/v1/workspace/task.rb) the list function will return a list of all tasks without limit. It will do so by default with a page size of 50, even though it is more efficient on the client and the twilio servers to default to the max, 1000.

To be clear, the documentation for the page_size param on the list function and stream function is 
```
            # @param [Integer] page_size Number of records to fetch per request, when
            #    not set will use the default value of 50 records.  If no page_size is defined
            #    but a limit is defined, stream() will attempt to read the limit with the most
            #    efficient page size, i.e. min(limit, 1000)
```

This makes complete sense for the stream() function where it will return fewer results than the complete task list. However, when the list() function is called **and limit is :unset** then there will always be the same or fewer client/server calls if the page size is as high as possible. This is true if there are 5 tasks, 50, 100, or 5000
### Code Snippet
```ruby
context = execution_instance.execution_context
```

### Exception/Log
"execution_context is not a member of Hash"

I believe it's because 
https://github.com/twilio/twilio-ruby/blob/bd2b0f2a9b43794a5754b61d748319b558e4ab26/lib/twilio-ruby/rest/studio/v1/flow/execution.rb#L361

shadows https://github.com/twilio/twilio-ruby/blob/bd2b0f2a9b43794a5754b61d748319b558e4ab26/lib/twilio-ruby/rest/studio/v1/flow/execution.rb#L322

so https://github.com/twilio/twilio-ruby/blob/bd2b0f2a9b43794a5754b61d748319b558e4ab26/lib/twilio-ruby/rest/studio/v1/flow/execution.rb#L420 is broken
Expected this to work:

**Version:**
* `ruby 2.4.1p111 (2017-03-22 revision 58053) [x86_64-darwin17]`
* `Rails 5.2.0`
* `gem 'twilio-ruby', '~> 5.11.1'`

### Code Snippet
```ruby
> $twilio.api.account.messages.list.to_json
SystemStackError: stack level too deep
	from (irb):6
```
**Version: 5.8**

twilio-ruby is taking too much memory.

### Steps to Reproduce

I audited my project dependencies with the help of `derailed_benchmarks` and I was surprised too find `twilio-ruby` at the top of mem usage even before the rails stack.

Here is an extract of the derailed gem 

```
$  bundle exec derailed bundle:mem

TOP: 89.0391 MiB
  twilio-ruby: 28.1602 MiB
    ~/.rvm/gems/ruby-2.3.1/gems/twilio-ruby-5.8.0/lib/twilio-ruby/rest/ip_messaging/v1/service.rb: 0.3047 MiB
    ~/.rvm/gems/ruby-2.3.1/gems/twilio-ruby-5.8.0/lib/twilio-ruby/rest/api/v2010/account.rb: 0.3008 MiB
  rails/all: 20.332 MiB
    rails: 9.3125 MiB (Also required by: active_record/railtie, active_model/railtie, and 8 others)
...
```