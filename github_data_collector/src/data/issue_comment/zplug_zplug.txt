<!--
**Before Submitting**

Please read this instructions carefully!

1. If it is not reported according to this issue template, it may be closed unconditionally
2. In accordance with "Issue Type", you should uncomment below "EDITING AREA" corresponding the part
3. You checked the [FAQ](https://github.com/zplug/zplug/wiki/FAQ) for common problems.
4. Check your [requirements](https://github.com/zplug/zplug/wiki/FAQ#what-are-the-requirements) are satisfied.
-->

**Describe the bug**
I cannot run zplug after having installed it using CURL
it says command not found for zsh

**Env (please complete the following information):**
 - `zplug version`: can't
 - `zsh --version`: zsh 5.7.1 (x86_64-apple-darwin19.0.0)
 - `uname -a`: Darwin Macbook.local 19.2.0 Darwin Kernel Version 19.2.0: Sat Nov  9 03:47:04 PST 2019; root:xnu-6153.61.1~20/RELEASE_X86_64 x86_64

**Minimal zshrc (with less than 30 lines)**

Create a minimal reproducing set of configurations for this issue. Please remove all unnecessary parts!

```zsh
source ~/.zplug/init.zsh
ZSH_THEME="avit"

```

When git is built from source, the `git version` output contains
non-numeric version components.

```
$ git version
git version 2.24.0.rc2.46.g1d34d425d4
```

zplug cannot detect the git version with this output, and it fails to
start. Change the version pattern to extract a part that starts with a
digit. For the example above, zplug will detect the git version as
"2.24.0.rc2.46.g1d34d425d4". This is good enough for the version check
while there would be no false positives.
<!--
**Before Submitting**

Please read this instructions carefully!

1. If it is not reported according to this issue template, it may be closed unconditionally
2. In accordance with "Issue Type", you should uncomment below "EDITING AREA" corresponding the part
3. You checked the [FAQ](https://github.com/zplug/zplug/wiki/FAQ) for common problems.
4. Check your [requirements](https://github.com/zplug/zplug/wiki/FAQ#what-are-the-requirements) are satisfied.
-->

**Describe the bug**
In prezto, some modules contain dependencies when loading by using `pmodload`, such as [`module/git`](https://github.com/sorin-ionescu/prezto/blob/master/modules/git/init.zsh). For these modules, zlug only load the first one with pmodload and then stop load remaining code in init.zsh. 

~~Of course, this problem can be fixed with `use` tag to load other files by myself, but I think this should be done by zplug automatically.~~ I try to add `use` tag to load scripts by myself, but nothing  happended.

**To Reproduce**
```
source $ZPLUG_HOME/init.zsh
zplug "module/git",  from:prezto
zplug load --verbose
```

I get ` Load "$ZPLUG_HOME/repos/sorin-ionescu/prezto/modules/helper/init.zsh" (module/git)`, but the alias.zsh in `modules/git` is not loaded which run in `modules/git/init.zsh` by `source "${0:h}/alias.zsh"`.

And other modules like spectrum have the same problem.

**Expected behavior**
Load all dependencies and the module. 

**Env (please complete the following information):**
 - `zplug version`: `2.4.2`
 - `zsh --version`: `zsh 5.7.1 (x86_64-pc-linux-gnu)`
 - `uname -a`: `Linux nixos 4.19.78 #1-NixOS SMP Mon Oct 7 16:57:29 UTC 2019 x86_64 GNU/Linux`

**Minimal zshrc (with less than 30 lines)**

See [To Reproduce](#To-Reproduce)

**Describe the bug**
After instaling a plugin for pipenv completions, it doesn't seem to work. However running its content manualy (just a plain `eval "$(pipenv --completion)"`) does work, when ran directly in shell.

**To Reproduce**
Install `zplug "owenstranathan/pipenv.zsh"`
Open new shell and try `pipenv <Tab>`
It will give file completion

**Expected behavior**
I expect pipenv options completion

**Env:**
 - `zplug version`: 2.4.2
 - `zsh --version`: zsh 5.7.1 (x86_64-pc-linux-gnu)
 - `uname -a`: Linux Malus 5.3.1-arch1-1-ARCH #1 SMP PREEMPT Sat Sep 21 11:33:49 UTC 2019 x86_64 GNU/Linux

**Minimal zshrc (with less than 30 lines)**

Create a minimal reproducing set of configurations for this issue. Please remove all unnecessary parts!

```zsh
# Plugin manager
source /usr/share/zsh/scripts/zplug/init.zsh

# Plugins
zplug "owenstranathan/pipenv.zsh"

# Install plugins if there are plugins that have not been installed
if ! zplug check --verbose; then
    printf "Install? [y/N]: "
    if read -q; then
        echo; zplug install
    fi
fi

zplug load
```
<!--
**Before Submitting**

Please read this instructions carefully!

1. If it is not reported according to this issue template, it may be closed unconditionally
2. In accordance with "Issue Type", you should uncomment below "EDITING AREA" corresponding the part
3. You checked the [FAQ](https://github.com/zplug/zplug/wiki/FAQ) for common problems.
4. Check your [requirements](https://github.com/zplug/zplug/wiki/FAQ#what-are-the-requirements) are satisfied.
-->

**Describe the bug**
omz [github](https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/github) plugin

As title. Error Message:
```sh
[zplug] ERROR: git command not found in $PATH
               zplug depends on git 1.7 or later.
```

**To Reproduce**
Steps to reproduce the behavior:
1. install omz
2. enable `plugins(github)`
3. enable zplug
4. reload terminal session

**Expected behavior**
No error.

**Screenshots**
![image](https://user-images.githubusercontent.com/8336744/64117098-d0188f80-cdc6-11e9-855b-44b30fd154b7.png)


**Env (please complete the following information):**
 - `zplug version`: 2.4.2
 - `zsh --version`: zsh 5.7.1 (x86_64-apple-darwin18.2.0)
 - `uname -a`: Darwin Kernel Version 19.0.0: Sun Aug 18 23:37:31 PDT 2019; root:xnu-6153.0.166~17/RELEASE_X86_64

**Minimal zshrc (with less than 30 lines)**
```zsh
export ZSH=$HOME/.oh-my-zsh
export ZSH_CACHE_DIR=$ZSH/cache

plugins(github)

source $ZSH/oh-my-zsh.sh

export ZPLUG_HOME=/usr/local/opt/zplug
source $ZPLUG_HOME/init.zsh
```
**Description**

The domain zplug.sh seems to be for sale. Depending on the used DNS server, there seems to be DNS-Spoofing. My Provider is a big german Company. Their DNS Server seems to redirect zplug.sh to a phishing site. I suggest to remove or update the link. Sorry for not writing more, had an accident.
I have a question. I'm submitting a Zsh .gitignore template to the [github/gitignore](https://github.com/github/gitignore) template database. Currently the entries are:

```
*.zwc
*zcompdump*
._zplugin
```

So the question is: does zplug create any files or directories in the plugin's path? They could be submitted with the template.

Replaces every occurrence of Perl with equivalent awk or sed commands.
Also removes unused `__zplug::utils::shell::unansi` function (which also
used Perl).
This PR removes the Python dependency for logging. In particular, I implemented string escaping directly in Zsh. This increases logging speed and startup time, if $ZPLUG_LOADFILE does not exist (see https://github.com/zplug/zplug/issues/368#issuecomment-282566102).
<!--
**Before Submitting**

Please read this instructions carefully!

1. If it is not reported according to this issue template, it may be closed unconditionally
2. In accordance with "Issue Type", you should uncomment below "EDITING AREA" corresponding the part
3. You checked the [FAQ](https://github.com/zplug/zplug/wiki/FAQ) for common problems.
4. Check your [requirements](https://github.com/zplug/zplug/wiki/FAQ#what-are-the-requirements) are satisfied.
-->

**Describe the bug**
Trying to setup zplug on my new popos machine and running into an error

**To Reproduce**
Steps to reproduce the behavior:
1. Install new pop os
2. Install zsh
3. Run: curl -sL --proto-redir -all,https https://raw.githubusercontent.com/zplug/installer/master/installer.zsh | zsh

**Expected behavior**
zplug should install

**Screenshots**
![image](https://user-images.githubusercontent.com/655716/58993694-3daf2280-87bc-11e9-96cb-01636ddc69e5.png)

**Env (please complete the following information):**
 - `zplug version`: Trying install
 - `zsh --version`: zsh 5.5.1 (x86_64-ubuntu-linux-gnu)
 - `uname -a`: Linux pop-os 5.0.0-15-generic #16pop0-Ubuntu SMP Wed May 15 14:41:25 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux

**Additional context**
I think the issue may be that on pop os, there is no /usr/local/opt directory