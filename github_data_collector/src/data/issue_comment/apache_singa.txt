1. upgrade MKLDNN v0.18 to DNNL v1.1
2. add softmax backed by DNNL
3. add value check tests
Ref. SINGA-476
Hi this is not completely ready for merge, pending to fix a testing error.

https://issues.apache.org/jira/projects/SINGA/issues/SINGA-450?filter=allopenissues
This change captures the exit code from the python unit tests. This now results in a failed build as the tests cannot find the python -> c++ bindings. This appears to be a conda / pyenv issue and seems like the build python module isn't getting loading into the environment when traversing into the test directory. 

`# save the package at given folder, then we can upload using singa-*.tar.bz2
suffix=$TRAVIS_JOB_NUMBER  #`TZ=Asia/Singapore date +%Y-%m-%d-%H-%M-%S`
export CONDA_BLD_PATH=~/conda-bld-$suffix
mkdir $CONDA_BLD_PATH

conda build tool/conda/singa --python 3.6
conda install --use-local singa
cd test/python
$HOME/miniconda/bin/python run.py
echo $?
`

This causes a module import error and the tests fail.

Would like to debug, however need access to the build agent to further investigate the best way of setting this up
Building source as per [](https://singa.incubator.apache.org/en/docs/installation.html) from with the `USE_MODULES=ON` flag pulls in protobuf 3.3.0 and the compilation fails with message `/src/caffe.pb.cc:31115:35: error: ‘MergeFromFail’ is not a member of ‘google::protobuf::internal’
     ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);`

This is caused by the caffe.proto file being built against the proto 2.xx schema end emitting a c++ file with a call to MergeFromFail which was deprecated in the 3.x.x version of 
protobuf. 

This is a temp message to show the compatibility requirements to get a functional build. 

Full solution is to migrate to v3 protobuf or remove dependency entirely 

edit: can remove caffe
new class of pool: SwapPool
important APIs: PoolOpt(), Malloc(), Free()
PoolOpt() takes in M/F seq including those induced by swapping
cross-iteration variables and last iteration case solved.



Add methods to resize images by given width and height, named as
resize_by_hw, resize_by_hw_list, resize_by_hw_range;
Encapsulate original "resize" methods into "scale" methods.