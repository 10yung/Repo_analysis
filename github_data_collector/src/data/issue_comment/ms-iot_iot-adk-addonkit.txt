try-master.zip 
https://codeload.github.com/dotnet/try/zip/master
Hi,
Yesterday, I upgrade tools with last version and I found issue with Add-IoTAppxPackage
I create my Appx package with VisualStudio 2019 and obtain myApplication_1.0.0.0_ARM_Debug.msix and not myApplication_1.0.0.0_ARM_Debug.appx
with commits on Nov 14, 2018 Add-IoTAppxPackage accept *.msix and create component.
With last commits Add-IoTAppxPackage don't accept and generate error.

What do I make wrong?



Hi,
I tried to create an IoT Core image for Apollo Lake platform and ran into a problem when executing importbsp.
It shew **"Unknown argument "useLegacyName"  "foroempkg"** were provided." but the Copy-IoTBSP function was still completed.
I have also noticed that pkggen seems not support above two parameters from [MSFT's website](https://docs.microsoft.com/en-us/windows-hardware/manufacture/iot/create-packages).
Is this the root cause of the error I met?
The IoT build command `IoT-AddFilePackage` found in `https://github.com/ms-iot/iot-adk-addonkit/blob/master/Tools/IoTCoreImaging/IoTAddCommands.ps1` does not expose selection of the partition that the file(s) is/are to be deployed to. The `MainOS` partition is assumed, despite the underlying `New-IoTWMWriter` class providing an optional partition parameter.

It would be good to add an optional, validated partition parameter to `IoT-AddFilePackage`, and have this give effect to selecting the desired partition for the file(s)
Hello,

i am currently try to create a retail image, but all results in an short boot up with Windows logo and then a black screen appears.

I try to write down all the steps i did:

1.
We bought a kernel mode signing certificate.
Certificate:
Issuer: thawte SHA256 Code Signing CA - G2
Subject: Company
Thumbprint: 030375f518e4f6801419f93bc0ef559fa3d67019

The cross certificate i downloaded from [Link](https://docs.microsoft.com/en-us/windows-hardware/drivers/install/cross-certificates-for-kernel-mode-code-signing)
Cross Certificate:
Issuer: Microsoft Code Verification Root
Subject: thawte Primary Root CA - G3
Thumbprint: ba57ca5e78dd2d1d7476aebee9953e396fd05546

Both certificate were exported to certificate manager (MMC)

2.
i downloaded the newest version of iot-adk-addonkit-master, unpack it and then start editing:
 
I edit IoTWorkspace.xml found on ./iot-adk-addonkit-master\Workspace\IoTWorkspace.xml with:
<RetailSignToolParam>/s my /sha1 "030375f518e4f6801419f93bc0ef559fa3d67019" /fd SHA256</RetailSignToolParam>

Cross Certificate copied in: .\iot-adk-addonkit-master\Workspace\Certs\thawte Primary Root CA.cer

I opened .\iot-adk-addonkit-master\IoTCorePShell.cmd and typed in:

Set-IoTRetailSign On
New-IoTCabPackage All

Redo-IoTCabSignature .\iot-adk-addonkit-master\Workspace\Build\arm\pkgs C:\Users\Company\Desktop\Test\cabs 
xcopy C:\Users\Company\Desktop\Test\cabs\*.cab C:\Users\Company\Desktop\Test\iot-adk-addonkit-master\Workspace\Build\arm\pkgs\*.cab

sign.cmd C:\Users\Company\Desktop\Test\RPi_BSP\Rpi2\Packages\RPi.Drivers\*.dll
signtool.exe sign /v /s my /sha1 "030375f518e4f6801419f93bc0ef559fa3d67019" /fd SHA256  /t http://timestamp.verisign.com/scripts/timestamp.dll   "C:\Users\Company\Desktop\Test\RPi_BSP\Rpi2\Packages\RPi.Drivers\*.dll"
The following certificate was selected:
    Issued to: Company
    Issued by: thawte SHA256 Code Signing CA - G2
    Expires:   Thu May 14 01:59:59 2020
    SHA1 hash: 030375F518E4F6801419F93BC0EF559FA3D67019

Done Adding Additional Store
Successfully signed: C:\Users\Company\Desktop\Test\RPi_BSP\Rpi2\Packages\RPi.Drivers\vchiq_arm_kern.dll
Successfully signed: C:\Users\Company\Desktop\Test\RPi_BSP\Rpi2\Packages\RPi.Drivers\vcos_win32_kern.dll

sign.cmd C:\Users\Company\Desktop\Test\RPi_BSP\Rpi2\Packages\RPi.Drivers\*.sys

signtool.exe sign /v /s my /sha1 "030375f518e4f6801419f93bc0ef559fa3d67019" /fd SHA256  /t http://timestamp.verisign.com/scripts/timestamp.dll   "C:\Users\Company\Desktop\Test\RPi_BSP\Rpi2\Packages\RPi.Drivers\*.sys"
The following certificate was selected:
    Issued to: Company
    Issued by: thawte SHA256 Code Signing CA - G2
    Expires:   Thu May 14 01:59:59 2020
    SHA1 hash: 030375F518E4F6801419F93BC0EF559FA3D67019

Done Adding Additional Store
Successfully signed: C:\Users\Company\Desktop\Test\RPi_BSP\Rpi2\Packages\RPi.Drivers\bcm2836pwm.sys
Successfully signed: C:\Users\Company\Desktop\Test\RPi_BSP\Rpi2\Packages\RPi.Drivers\bcm2836sdhc.sys
Successfully signed: C:\Users\Company\Desktop\Test\RPi_BSP\Rpi2\Packages\RPi.Drivers\bcmauxspi.sys
Successfully signed: C:\Users\Company\Desktop\Test\RPi_BSP\Rpi2\Packages\RPi.Drivers\bcmgpio.sys
Successfully signed: C:\Users\Company\Desktop\Test\RPi_BSP\Rpi2\Packages\RPi.Drivers\bcmi2c.sys
Successfully signed: C:\Users\Company\Desktop\Test\RPi_BSP\Rpi2\Packages\RPi.Drivers\bcmspi.sys
Successfully signed: C:\Users\Company\Desktop\Test\RPi_BSP\Rpi2\Packages\RPi.Drivers\pi_miniuart.sys
Successfully signed: C:\Users\Company\Desktop\Test\RPi_BSP\Rpi2\Packages\RPi.Drivers\rpiq.sys
Successfully signed: C:\Users\Company\Desktop\Test\RPi_BSP\Rpi2\Packages\RPi.Drivers\rpisdhc.sys
Successfully signed: C:\Users\Company\Desktop\Test\RPi_BSP\Rpi2\Packages\RPi.Drivers\rpiwav.sys
Successfully signed: C:\Users\Company\Desktop\Test\RPi_BSP\Rpi2\Packages\RPi.Drivers\SerPL011.sys
Successfully signed: C:\Users\Company\Desktop\Test\RPi_BSP\Rpi2\Packages\RPi.Drivers\vchiq.sys

New-IoTWorkspace C:\Users\Company\Desktop\Test Company arm                                                                                
Import-IoTOEMPackage Recovery.*
Import-IoTBSP RPi2 C:\Users\Company\Desktop\Test\RPi_BSP
New-IoTCabPackage All
Add-IoTProduct ProductA RPi2
New-IoTFFUImage ProductA Retail

All steps were sucessfull.
After that i installed the image on a MicroSD Card but only the windows logo appears.

Thanks for the help

















I have installed the application from the factory where i work, on the image .ffu

Then, i have installed the windows PE on the hard drive, and added the .ffu image on the root of it.

At least, i have put the hard drive on the computer, who have launched a cmd console, i have done this command for launch the .ffu file :

dism.exe /apply-image /ImageFile:Flash.ffu /ApplyDrive:\\.\PhysicalDrive0 /skipplatformcheck
Then, i have turn off the computer, and put out the hard drive

I have launched the computer, a Windows 10 IoT page came like this :
![image](https://user-images.githubusercontent.com/43552973/58874759-e761b700-86c9-11e9-8f53-671c76927ba6.png)

And after, i have a black screen.

I'm turning off / on everytime the computer, but i have still the black screen.

Why ? What Am I supposed to do ???

I'm so confused, i can do nothing and i'm at 99 % of my project now ...

I need your help as quick as possible, because the app from the factory has to work with this Windows 10 IoT Core! 



I recently updated AddonKit from a little bit older version, created new WS just like before. Everything seems to be fine, image is being built, BUT it appears to be clean Win10 IoT without any default app, because I removed all sample apps from TestOEMInput.xml. My custom OEM application is added in OEM section, just like it was added with older AddonKit and seems missing (it was fine before). RPi boots normally, but as there is no default app it just shows black screen.

My feature section from TestOEMInput.xml looks like that:

```
<Features>
    <Microsoft>
      <Feature>IOT_EFIESP</Feature>
      <Feature>IOT_EFIESP_BCD_MBR</Feature>
      <Feature>IOT_DMAP_DRIVER</Feature>
      <Feature>IOT_CP210x_MAKERDRIVER</Feature>
      <Feature>IOT_FTSER2K_MAKERDRIVER</Feature>
      <Feature>IOT_GENERIC_POP</Feature>
      <!-- Following two required for Appx Installation -->
      <Feature>IOT_UAP_OOBE</Feature>
      <Feature>IOT_APP_TOOLKIT</Feature>
      <!-- for Connectivity -->
      <Feature>IOT_WEBB_EXTN</Feature>
      <Feature>IOT_POWERSHELL</Feature>
      <Feature>IOT_SSH</Feature>
      <Feature>IOT_SIREP</Feature>
      <!-- Enabling Test images -->
      <Feature>IOT_ENABLE_TESTSIGNING</Feature>
      <Feature>IOT_TOOLKIT</Feature>
      <!-- Debug Features -->
      <Feature>IOT_KDSERIAL_SETTINGS</Feature>
      <Feature>IOT_UMDFDBG_SETTINGS</Feature>
      <Feature>IOT_WDTF</Feature>
      <Feature>IOT_CRT140</Feature>
      <Feature>IOT_DIRECTX_TOOLS</Feature>
    </Microsoft>
    <OEM>
      <!-- Include BSP Features -->
      <Feature>RPI2_DRIVERS</Feature>
      <Feature>RPI3_DRIVERS</Feature>
      <!-- Include OEM features -->
      <Feature>OEM_CustomCmd</Feature>
      <Feature>OEM_ProvAuto</Feature>
      <!-- For recovery, include: RECOVERY_BCD_MBR -->
      <Feature>APPX_OEMPLACEHOLDER</Feature>
    </OEM>
  </Features>
```
We used the Intel N3000 BSP for our Intel Pentium N4200 Quad Core Apollo Lake SBC and everything seems to work except for one major issue for us. If the computer is turned off, and doesn't remain off for more than 25 seconds, then Windows IoT Core doesn't boot when powering back on.
Hi All,

I am working on the retail build and our UWP app talks to an inverter and battery on different comm ports. It talks to battery on COM Port 0 and to inverter on COM Port 2.

By default I think, COM Port 0 is kept open and for this reason the app is able to talk to battery but we need to open COM Port 2 so that it can talk to inverter as well.

I checked that if we add **IoT_ToolKit** feature in the retail image it does open the ports but it open all the ports and it is also a test feature which should not be added in Retail.

Could anyone tell where are the COM Port information is stored and if we can execute a PowerShell script to enable COM Port 2?

Thanks
Hi,
The[ IOT_UPA_OOBE](https://docs.microsoft.com/en-us/windows-hardware/manufacture/iot/iot-core-feature-list#retail-features-defined-by-microsoft) is the required feature in all images. But this feature is a foreground app, I want use this IOT_UAP_OOBE for the APPX installation by use the Windows Device Portal. How do this in a headless mode image? What happend if I not include this feature?
![QQ截图20190311182309](https://user-images.githubusercontent.com/13234209/54117452-c3286e00-442b-11e9-942c-1b8f0c598368.jpg)

Best regards.