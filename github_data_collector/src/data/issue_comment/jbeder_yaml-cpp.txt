Looking at example 5.15 in https://github.com/jbeder/yaml-cpp/blob/master/test/integration/handler_spec_test.cpp:

```C++
      OnScalar(_, "!", 0,
               "Fun with \x5C \x22 \x07 \x08 \x1B \x0C \x0A \x0D \x09 \x0B " +
                   std::string("\x00", 1) +
                   " \x20 \xA0 \x85 \xe2\x80\xa8 \xe2\x80\xa9 A A A"));
```

It appears that `yaml-cpp` encodes `\L` and `\P` in UTF-8, but encodes `\_` (non-breaking space) and `\N` (next line) as single-byte values containing the unicode code point.  Further inspection reveals that `\xYY` and `\uYYYY` also use UTF-8, so the behavior of `\_` and `\N` appears to be a bug.

YAML string | code point | correct UTF-8 encoding | cpp-yaml `std::string` output
--- | --- | --- | ---
`"\xA0"` | U+00A0 | `0xC2 0xA0` | `0xC2 0xA0`
`"\u00A0"` | U+00A0 | `0xC2 0xA0` | `0xC2 0xA0`
`"\_"` | U+00A0 | **`0xC2 0xA0`** | **`0xA0`**
`"\N"` | U+0085 | **`0xC2 0x85`** | **`0x85`**
`"\L"` | U+2028 | `0xE2 0x80 0xA8` | `0xE2 0x80 0xA8`
`"\P"` | U+2029 | `0xE2 0x80 0xA9` | `0xE2 0x80 0xA9`
By running this code:
```c++
#include <yaml-cpp/yaml.h>
#include <iostream>
#include <fstream>

int main() {
    {
        std::ofstream f("hola.yaml");
        YAML::Emitter emitter(f);
        emitter << YAML::Literal << "Hello\nworld" << YAML::Comment("Un comentario");
    }
    {
        std::ifstream f("hola.yaml");
        YAML::Node node = YAML::Load(f);
        std::cout << node.as<std::string>() << std::endl;
    }
    return 0;
}
```
The first part generates the following content:
```yaml
|
  Hello
  world # A comment
```
When the second part reads it back, the comment is read as part of the literal. One of them, reading or writing is wrong. Specs says that no comments can be placed inside an scalar, since a literal is an scalar and it terminates with the indentation back, it sounds like the reading is right and the writing is wrong.

When a scalar is inserted in literal mode comments inserted next should be at the next line. and outside of the indentation. Like this:

```yaml
|
  Hello
  world
# A comment
```

Hiya,

I'm interested in trying out this library for integration into a game engine. However I'm compiling for a platform where C++ exception support is disabled; any `throw` statements cause a fatal error when compiling for that platform. Hence I can't use this library as-is.

I did find #196, but seeing as that discussion is almost 7 years old, I was wondering if you have any plans to reconsider?

Cheers!
Hello,

There is a patch to correct code sample in the tutorial:

````diff
diff --git a/Tutorial.md b/Tutorial.md
index c83369a..a48ebdd 100644
--- a/Tutorial.md
+++ b/Tutorial.md
@@ -74,11 +74,11 @@ If you're not sure what kind of data you're getting, you can query the type of a
 
 ```
 switch (node.Type()) {
-  case Null: // ...
-  case Scalar: // ...
-  case Sequence: // ...
-  case Map: // ...
-  case Undefined: // ...
+  case YAML::NodeType::Null: // ...
+  case YAML::NodeType::Scalar: // ...
+  case YAML::NodeType::Sequence: // ...
+  case YAML::NodeType::Map: // ...
+  case YAML::NodeType::Undefined: // ...
 }
 ```
````

Also I've attached the patch: [tutorial-patch.txt](https://github.com/jbeder/yaml-cpp/files/3991291/tutorial-patch.txt)
```
/home/mangix/devstuff/openwrt/build_dir/target-mips_74kc+dsp2_musl/yaml-cpp-yaml-cpp-0.6.3/include/yaml-cpp/node/iterator.h:24:52:   required from here
/home/mangix/devstuff/openwrt/staging_dir/target-mips_74kc+dsp2_musl/usr/include/c++/v1/utility:372:15: error: incomplete type 'std::__1::is_constructible<YAML::Node, const YAML::Node&>' used in nested name specifier
  371 |           return is_constructible<first_type, _U1>::value
      |                                                     ~~~~~
  372 |               && is_constructible<second_type, _U2>::value
      |               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/mangix/devstuff/openwrt/staging_dir/target-mips_74kc+dsp2_musl/usr/include/c++/v1/utility:372:15: error: incomplete type 'std::__1::is_constructible<YAML::Node, const YAML::Node&>' used in nested name specifier
In file included from /home/mangix/devstuff/openwrt/build_dir/target-mips_74kc+dsp2_musl/yaml-cpp-yaml-cpp-0.6.3/include/yaml-cpp/node/detail/node_data.h:18,
                 from /home/mangix/devstuff/openwrt/build_dir/target-mips_74kc+dsp2_musl/yaml-cpp-yaml-cpp-0.6.3/include/yaml-cpp/node/detail/node_ref.h:13,
                 from /home/mangix/devstuff/openwrt/build_dir/target-mips_74kc+dsp2_musl/yaml-cpp-yaml-cpp-0.6.3/include/yaml-cpp/node/detail/node.h:12,
                 from /home/mangix/devstuff/openwrt/build_dir/target-mips_74kc+dsp2_musl/yaml-cpp-yaml-cpp-0.6.3/include/yaml-cpp/node/impl.h:12,
                 from /home/mangix/devstuff/openwrt/build_dir/target-mips_74kc+dsp2_musl/yaml-cpp-yaml-cpp-0.6.3/include/yaml-cpp/node/convert.h:18,
                 from /home/mangix/devstuff/openwrt/build_dir/target-mips_74kc+dsp2_musl/yaml-cpp-yaml-cpp-0.6.3/src/convert.cpp:3:
/home/mangix/devstuff/openwrt/build_dir/target-mips_74kc+dsp2_musl/yaml-cpp-yaml-cpp-0.6.3/include/yaml-cpp/node/iterator.h: In constructor 'YAML::detail::iterator_value::iterator_value(const YAML::Node&, const YAML::Node&)':
/home/mangix/devstuff/openwrt/build_dir/target-mips_74kc+dsp2_musl/yaml-cpp-yaml-cpp-0.6.3/include/yaml-cpp/node/iterator.h:26:65: error: no matching function for call to 'std::__1::pair<YAML::Node, YAML::Node>::pair(const YAML::Node&, const YAML::Node&)'
   26 |       : Node(Node::ZombieNode), std::pair<Node, Node>(key, value) {}
      |                                                                 ^
In file included from /home/mangix/devstuff/openwrt/staging_dir/target-mips_74kc+dsp2_musl/usr/include/c++/v1/algorithm:642,
                 from /home/mangix/devstuff/openwrt/build_dir/target-mips_74kc+dsp2_musl/yaml-cpp-yaml-cpp-0.6.3/src/convert.cpp:1:
/home/mangix/devstuff/openwrt/staging_dir/target-mips_74kc+dsp2_musl/usr/include/c++/v1/utility:565:9: note: candidate: 'template<class ... _Args1, class ... _Args2, unsigned int ..._I1, unsigned int ..._I2> std::__1::pair<_T1, _T2>::pair(std::__1::piecewise_construct_t, std::__1::tuple<_Args1 ...>&, std::__1::tuple<_Args2 ...>&, std::__1::__tuple_indices<_I1 ...>, std::__1::__tuple_indices<_I2 ...>)'
  565 |         pair(piecewise_construct_t,
      |         ^~~~
/home/mangix/devstuff/openwrt/staging_dir/target-mips_74kc+dsp2_musl/usr/include/c++/v1/utility:565:9: note:   template argument deduction/substitution failed:
In file included from /home/mangix/devstuff/openwrt/build_dir/target-mips_74kc+dsp2_musl/yaml-cpp-yaml-cpp-0.6.3/include/yaml-cpp/node/detail/node_data.h:18,
                 from /home/mangix/devstuff/openwrt/build_dir/target-mips_74kc+dsp2_musl/yaml-cpp-yaml-cpp-0.6.3/include/yaml-cpp/node/detail/node_ref.h:13,
                 from /home/mangix/devstuff/openwrt/build_dir/target-mips_74kc+dsp2_musl/yaml-cpp-yaml-cpp-0.6.3/include/yaml-cpp/node/detail/node.h:12,
                 from /home/mangix/devstuff/openwrt/build_dir/target-mips_74kc+dsp2_musl/yaml-cpp-yaml-cpp-0.6.3/include/yaml-cpp/node/impl.h:12,
                 from /home/mangix/devstuff/openwrt/build_dir/target-mips_74kc+dsp2_musl/yaml-cpp-yaml-cpp-0.6.3/include/yaml-cpp/node/convert.h:18,
                 from /home/mangix/devstuff/openwrt/build_dir/target-mips_74kc+dsp2_musl/yaml-cpp-yaml-cpp-0.6.3/src/convert.cpp:3:
/home/mangix/devstuff/openwrt/build_dir/target-mips_74kc+dsp2_musl/yaml-cpp-yaml-cpp-0.6.3/include/yaml-cpp/node/iterator.h:26:65: note:   types 'std::__1::tuple<_Tp ...>' and 'const YAML::Node' have incompatible cv-qualifiers
   26 |       : Node(Node::ZombieNode), std::pair<Node, Node>(key, value) {}
      |                                                                 ^
In file included from /home/mangix/devstuff/openwrt/staging_dir/target-mips_74kc+dsp2_musl/usr/include/c++/v1/algorithm:642,
                 from /home/mangix/devstuff/openwrt/build_dir/target-mips_74kc+dsp2_musl/yaml-cpp-yaml-cpp-0.6.3/src/convert.cpp:1:
/home/mangix/devstuff/openwrt/staging_dir/target-mips_74kc+dsp2_musl/usr/include/c++/v1/utility:506:5: note: candidate: 'template<class ... _Args1, class ... _Args2> std::__1::pair<_T1, _T2>::pair(std::__1::piecewise_construct_t, std::__1::tuple<_Args1 ...>, std::__1::tuple<_Args2 ...>)'
  506 |     pair(piecewise_construct_t __pc,
      |     ^~~~
/home/mangix/devstuff/openwrt/staging_dir/target-mips_74kc+dsp2_musl/usr/include/c++/v1/utility:506:5: note:   template argument deduction/substitution failed:
In file included from /home/mangix/devstuff/openwrt/build_dir/target-mips_74kc+dsp2_musl/yaml-cpp-yaml-cpp-0.6.3/include/yaml-cpp/node/detail/node_data.h:18,
                 from /home/mangix/devstuff/openwrt/build_dir/target-mips_74kc+dsp2_musl/yaml-cpp-yaml-cpp-0.6.3/include/yaml-cpp/node/detail/node_ref.h:13,
                 from /home/mangix/devstuff/openwrt/build_dir/target-mips_74kc+dsp2_musl/yaml-cpp-yaml-cpp-0.6.3/include/yaml-cpp/node/detail/node.h:12,
                 from /home/mangix/devstuff/openwrt/build_dir/target-mips_74kc+dsp2_musl/yaml-cpp-yaml-cpp-0.6.3/include/yaml-cpp/node/impl.h:12,
                 from /home/mangix/devstuff/openwrt/build_dir/target-mips_74kc+dsp2_musl/yaml-cpp-yaml-cpp-0.6.3/include/yaml-cpp/node/convert.h:18,
                 from /home/mangix/devstuff/openwrt/build_dir/target-mips_74kc+dsp2_musl/yaml-cpp-yaml-cpp-0.6.3/src/convert.cpp:3:
/home/mangix/devstuff/openwrt/build_dir/target-mips_74kc+dsp2_musl/yaml-cpp-yaml-cpp-0.6.3/include/yaml-cpp/node/iterator.h:26:65: note:   'YAML::Node' is not derived from 'std::__1::tuple<_Tp ...>'
   26 |       : Node(Node::ZombieNode), std::pair<Node, Node>(key, value) {}
      |                                                                 ^
In file included from /home/mangix/devstuff/openwrt/staging_dir/target-mips_74kc+dsp2_musl/usr/include/c++/v1/algorithm:642,
                 from /home/mangix/devstuff/openwrt/build_dir/target-mips_74kc+dsp2_musl/yaml-cpp-yaml-cpp-0.6.3/src/convert.cpp:1:
/home/mangix/devstuff/openwrt/staging_dir/target-mips_74kc+dsp2_musl/usr/include/c++/v1/utility:500:5: note: candidate: 'template<class _Tuple, typename std::__1::enable_if<typename std::__1::conditional<(std::__1::__tuple_like_with_size<_Tuple, 2, typename std::__1::__uncvref<_Tp>::type>::value && (! std::__1::is_same<typename std::__1::decay<_Tp>::type, std::__1::pair<YAML::Node, YAML::Node> >::value)), std::__1::pair<YAML::Node, YAML::Node>::_CheckTupleLikeConstructor, std::__1::__check_tuple_constructor_fail>::type::__enable_implicit<_Tuple>(), bool>::type <anonymous> > constexpr std::__1::pair<_T1, _T2>::pair(_Tuple&&)'
  500 |     pair(_Tuple&& __p)
      |     ^~~~
/home/mangix/devstuff/openwrt/staging_dir/target-mips_74kc+dsp2_musl/usr/include/c++/v1/utility:500:5: note:   template argument deduction/substitution failed:
In file included from /home/mangix/devstuff/openwrt/build_dir/target-mips_74kc+dsp2_musl/yaml-cpp-yaml-cpp-0.6.3/include/yaml-cpp/node/detail/node_data.h:18,
                 from /home/mangix/devstuff/openwrt/build_dir/target-mips_74kc+dsp2_musl/yaml-cpp-yaml-cpp-0.6.3/include/yaml-cpp/node/detail/node_ref.h:13,
                 from /home/mangix/devstuff/openwrt/build_dir/target-mips_74kc+dsp2_musl/yaml-cpp-yaml-cpp-0.6.3/include/yaml-cpp/node/detail/node.h:12,
                 from /home/mangix/devstuff/openwrt/build_dir/target-mips_74kc+dsp2_musl/yaml-cpp-yaml-cpp-0.6.3/include/yaml-cpp/node/impl.h:12,
                 from /home/mangix/devstuff/openwrt/build_dir/target-mips_74kc+dsp2_musl/yaml-cpp-yaml-cpp-0.6.3/include/yaml-cpp/node/convert.h:18,
                 from /home/mangix/devstuff/openwrt/build_dir/target-mips_74kc+dsp2_musl/yaml-cpp-yaml-cpp-0.6.3/src/convert.cpp:3:
/home/mangix/devstuff/openwrt/build_dir/target-mips_74kc+dsp2_musl/yaml-cpp-yaml-cpp-0.6.3/include/yaml-cpp/node/iterator.h:26:65: note:   candidate expects 1 argument, 2 provided
   26 |       : Node(Node::ZombieNode), std::pair<Node, Node>(key, value) {}
      |                                                                 ^
In file included from /home/mangix/devstuff/openwrt/staging_dir/target-mips_74kc+dsp2_musl/usr/include/c++/v1/algorithm:642,
                 from /home/mangix/devstuff/openwrt/build_dir/target-mips_74kc+dsp2_musl/yaml-cpp-yaml-cpp-0.6.3/src/convert.cpp:1:
/home/mangix/devstuff/openwrt/staging_dir/target-mips_74kc+dsp2_musl/usr/include/c++/v1/utility:492:14: note: candidate: 'template<class _Tuple, typename std::__1::enable_if<typename std::__1::conditional<(std::__1::__tuple_like_with_size<_Tuple, 2, typename std::__1::__uncvref<_Tp>::type>::value && (! std::__1::is_same<typename std::__1::decay<_Tp>::type, std::__1::pair<YAML::Node, YAML::Node> >::value)), std::__1::pair<YAML::Node, YAML::Node>::_CheckTupleLikeConstructor, std::__1::__check_tuple_constructor_fail>::type::__enable_explicit<_Tuple>(), bool>::type <anonymous> > constexpr std::__1::pair<_T1, _T2>::pair(_Tuple&&)'
  492 |     explicit pair(_Tuple&& __p)
      |              ^~~~
/home/mangix/devstuff/openwrt/staging_dir/target-mips_74kc+dsp2_musl/usr/include/c++/v1/utility:492:14: note:   template argument deduction/substitution failed:
In file included from /home/mangix/devstuff/openwrt/build_dir/target-mips_74kc+dsp2_musl/yaml-cpp-yaml-cpp-0.6.3/include/yaml-cpp/node/detail/node_data.h:18,
                 from /home/mangix/devstuff/openwrt/build_dir/target-mips_74kc+dsp2_musl/yaml-cpp-yaml-cpp-0.6.3/include/yaml-cpp/node/detail/node_ref.h:13,
                 from /home/mangix/devstuff/openwrt/build_dir/target-mips_74kc+dsp2_musl/yaml-cpp-yaml-cpp-0.6.3/include/yaml-cpp/node/detail/node.h:12,
                 from /home/mangix/devstuff/openwrt/build_dir/target-mips_74kc+dsp2_musl/yaml-cpp-yaml-cpp-0.6.3/include/yaml-cpp/node/impl.h:12,
                 from /home/mangix/devstuff/openwrt/build_dir/target-mips_74kc+dsp2_musl/yaml-cpp-yaml-cpp-0.6.3/include/yaml-cpp/node/convert.h:18,
                 from /home/mangix/devstuff/openwrt/build_dir/target-mips_74kc+dsp2_musl/yaml-cpp-yaml-cpp-0.6.3/src/convert.cpp:3:
/home/mangix/devstuff/openwrt/build_dir/target-mips_74kc+dsp2_musl/yaml-cpp-yaml-cpp-0.6.3/include/yaml-cpp/node/iterator.h:26:65: note:   candidate expects 1 argument, 2 provided
   26 |       : Node(Node::ZombieNode), std::pair<Node, Node>(key, value) {}
      |                                                                 ^
In file included from /home/mangix/devstuff/openwrt/staging_dir/target-mips_74kc+dsp2_musl/usr/include/c++/v1/algorithm:642,
                 from /home/mangix/devstuff/openwrt/build_dir/target-mips_74kc+dsp2_musl/yaml-cpp-yaml-cpp-0.6.3/src/convert.cpp:1:
/home/mangix/devstuff/openwrt/staging_dir/target-mips_74kc+dsp2_musl/usr/include/c++/v1/utility:483:5: note: candidate: 'template<class _U1, class _U2, typename std::__1::enable_if<__enable_implicit<_U1, _U2>(), bool>::type <anonymous> > constexpr std::__1::pair<_T1, _T2>::pair(std::__1::pair<_U1, _U2>&&)'
  483 |     pair(pair<_U1, _U2>&& __p)
      |     ^~~~
/home/mangix/devstuff/openwrt/staging_dir/target-mips_74kc+dsp2_musl/usr/include/c++/v1/utility:483:5: note:   template argument deduction/substitution failed:
In file included from /home/mangix/devstuff/openwrt/build_dir/target-mips_74kc+dsp2_musl/yaml-cpp-yaml-cpp-0.6.3/include/yaml-cpp/node/detail/node_data.h:18,
                 from /home/mangix/devstuff/openwrt/build_dir/target-mips_74kc+dsp2_musl/yaml-cpp-yaml-cpp-0.6.3/include/yaml-cpp/node/detail/node_ref.h:13,
                 from /home/mangix/devstuff/openwrt/build_dir/target-mips_74kc+dsp2_musl/yaml-cpp-yaml-cpp-0.6.3/include/yaml-cpp/node/detail/node.h:12,
                 from /home/mangix/devstuff/openwrt/build_dir/target-mips_74kc+dsp2_musl/yaml-cpp-yaml-cpp-0.6.3/include/yaml-cpp/node/impl.h:12,
                 from /home/mangix/devstuff/openwrt/build_dir/target-mips_74kc+dsp2_musl/yaml-cpp-yaml-cpp-0.6.3/include/yaml-cpp/node/convert.h:18,
                 from /home/mangix/devstuff/openwrt/build_dir/target-mips_74kc+dsp2_musl/yaml-cpp-yaml-cpp-0.6.3/src/convert.cpp:3:
/home/mangix/devstuff/openwrt/build_dir/target-mips_74kc+dsp2_musl/yaml-cpp-yaml-cpp-0.6.3/include/yaml-cpp/node/iterator.h:26:65: note:   types 'std::__1::pair<_T1, _T2>' and 'const YAML::Node' have incompatible cv-qualifiers
   26 |       : Node(Node::ZombieNode), std::pair<Node, Node>(key, value) {}
      |                                                                 ^
In file included from /home/mangix/devstuff/openwrt/staging_dir/target-mips_74kc+dsp2_musl/usr/include/c++/v1/algorithm:642,
                 from /home/mangix/devstuff/openwrt/build_dir/target-mips_74kc+dsp2_musl/yaml-cpp-yaml-cpp-0.6.3/src/convert.cpp:1:
/home/mangix/devstuff/openwrt/staging_dir/target-mips_74kc+dsp2_musl/usr/include/c++/v1/utility:474:14: note: candidate: 'template<class _U1, class _U2, typename std::__1::enable_if<__enable_explicit<_U1, _U2>(), bool>::type <anonymous> > constexpr std::__1::pair<_T1, _T2>::pair(std::__1::pair<_U1, _U2>&&)'
  474 |     explicit pair(pair<_U1, _U2>&&__p)
      |              ^~~~
/home/mangix/devstuff/openwrt/staging_dir/target-mips_74kc+dsp2_musl/usr/include/c++/v1/utility:474:14: note:   template argument deduction/substitution failed:
In file included from /home/mangix/devstuff/openwrt/build_dir/target-mips_74kc+dsp2_musl/yaml-cpp-yaml-cpp-0.6.3/include/yaml-cpp/node/detail/node_data.h:18,
                 from /home/mangix/devstuff/openwrt/build_dir/target-mips_74kc+dsp2_musl/yaml-cpp-yaml-cpp-0.6.3/include/yaml-cpp/node/detail/node_ref.h:13,
                 from /home/mangix/devstuff/openwrt/build_dir/target-mips_74kc+dsp2_musl/yaml-cpp-yaml-cpp-0.6.3/include/yaml-cpp/node/detail/node.h:12,
                 from /home/mangix/devstuff/openwrt/build_dir/target-mips_74kc+dsp2_musl/yaml-cpp-yaml-cpp-0.6.3/include/yaml-cpp/node/impl.h:12,
                 from /home/mangix/devstuff/openwrt/build_dir/target-mips_74kc+dsp2_musl/yaml-cpp-yaml-cpp-0.6.3/include/yaml-cpp/node/convert.h:18,
                 from /home/mangix/devstuff/openwrt/build_dir/target-mips_74kc+dsp2_musl/yaml-cpp-yaml-cpp-0.6.3/src/convert.cpp:3:
/home/mangix/devstuff/openwrt/build_dir/target-mips_74kc+dsp2_musl/yaml-cpp-yaml-cpp-0.6.3/include/yaml-cpp/node/iterator.h:26:65: note:   types 'std::__1::pair<_T1, _T2>' and 'const YAML::Node' have incompatible cv-qualifiers
   26 |       : Node(Node::ZombieNode), std::pair<Node, Node>(key, value) {}
      |                                                                 ^
In file included from /home/mangix/devstuff/openwrt/staging_dir/target-mips_74kc+dsp2_musl/usr/include/c++/v1/algorithm:642,
                 from /home/mangix/devstuff/openwrt/build_dir/target-mips_74kc+dsp2_musl/yaml-cpp-yaml-cpp-0.6.3/src/convert.cpp:1:
/home/mangix/devstuff/openwrt/staging_dir/target-mips_74kc+dsp2_musl/usr/include/c++/v1/utility:465:5: note: candidate: 'template<class _U1, class _U2, typename std::__1::enable_if<__enable_implicit<const _U1&, const _U2&>(), bool>::type <anonymous> > constexpr std::__1::pair<_T1, _T2>::pair(const std::__1::pair<_U1, _U2>&)'
  465 |     pair(pair<_U1, _U2> const& __p)
      |     ^~~~
/home/mangix/devstuff/openwrt/staging_dir/target-mips_74kc+dsp2_musl/usr/include/c++/v1/utility:465:5: note:   template argument deduction/substitution failed:
In file included from /home/mangix/devstuff/openwrt/build_dir/target-mips_74kc+dsp2_musl/yaml-cpp-yaml-cpp-0.6.3/include/yaml-cpp/node/detail/node_data.h:18,
                 from /home/mangix/devstuff/openwrt/build_dir/target-mips_74kc+dsp2_musl/yaml-cpp-yaml-cpp-0.6.3/include/yaml-cpp/node/detail/node_ref.h:13,
                 from /home/mangix/devstuff/openwrt/build_dir/target-mips_74kc+dsp2_musl/yaml-cpp-yaml-cpp-0.6.3/include/yaml-cpp/node/detail/node.h:12,
                 from /home/mangix/devstuff/openwrt/build_dir/target-mips_74kc+dsp2_musl/yaml-cpp-yaml-cpp-0.6.3/include/yaml-cpp/node/impl.h:12,
                 from /home/mangix/devstuff/openwrt/build_dir/target-mips_74kc+dsp2_musl/yaml-cpp-yaml-cpp-0.6.3/include/yaml-cpp/node/convert.h:18,
                 from /home/mangix/devstuff/openwrt/build_dir/target-mips_74kc+dsp2_musl/yaml-cpp-yaml-cpp-0.6.3/src/convert.cpp:3:
/home/mangix/devstuff/openwrt/build_dir/target-mips_74kc+dsp2_musl/yaml-cpp-yaml-cpp-0.6.3/include/yaml-cpp/node/iterator.h:26:65: note:   'const YAML::Node' is not derived from 'const std::__1::pair<_T1, _T2>'
   26 |       : Node(Node::ZombieNode), std::pair<Node, Node>(key, value) {}
      |                                                                 ^
In file included from /home/mangix/devstuff/openwrt/staging_dir/target-mips_74kc+dsp2_musl/usr/include/c++/v1/algorithm:642,
                 from /home/mangix/devstuff/openwrt/build_dir/target-mips_74kc+dsp2_musl/yaml-cpp-yaml-cpp-0.6.3/src/convert.cpp:1:
/home/mangix/devstuff/openwrt/staging_dir/target-mips_74kc+dsp2_musl/usr/include/c++/v1/utility:456:14: note: candidate: 'template<class _U1, class _U2, typename std::__1::enable_if<__enable_explicit<const _U1&, const _U2&>(), bool>::type <anonymous> > constexpr std::__1::pair<_T1, _T2>::pair(const std::__1::pair<_U1, _U2>&)'
  456 |     explicit pair(pair<_U1, _U2> const& __p)
      |              ^~~~
/home/mangix/devstuff/openwrt/staging_dir/target-mips_74kc+dsp2_musl/usr/include/c++/v1/utility:456:14: note:   template argument deduction/substitution failed:
In file included from /home/mangix/devstuff/openwrt/build_dir/target-mips_74kc+dsp2_musl/yaml-cpp-yaml-cpp-0.6.3/include/yaml-cpp/node/detail/node_data.h:18,
                 from /home/mangix/devstuff/openwrt/build_dir/target-mips_74kc+dsp2_musl/yaml-cpp-yaml-cpp-0.6.3/include/yaml-cpp/node/detail/node_ref.h:13,
                 from /home/mangix/devstuff/openwrt/build_dir/target-mips_74kc+dsp2_musl/yaml-cpp-yaml-cpp-0.6.3/include/yaml-cpp/node/detail/node.h:12,
                 from /home/mangix/devstuff/openwrt/build_dir/target-mips_74kc+dsp2_musl/yaml-cpp-yaml-cpp-0.6.3/include/yaml-cpp/node/impl.h:12,
                 from /home/mangix/devstuff/openwrt/build_dir/target-mips_74kc+dsp2_musl/yaml-cpp-yaml-cpp-0.6.3/include/yaml-cpp/node/convert.h:18,
                 from /home/mangix/devstuff/openwrt/build_dir/target-mips_74kc+dsp2_musl/yaml-cpp-yaml-cpp-0.6.3/src/convert.cpp:3:
/home/mangix/devstuff/openwrt/build_dir/target-mips_74kc+dsp2_musl/yaml-cpp-yaml-cpp-0.6.3/include/yaml-cpp/node/iterator.h:26:65: note:   'const YAML::Node' is not derived from 'const std::__1::pair<_T1, _T2>'
   26 |       : Node(Node::ZombieNode), std::pair<Node, Node>(key, value) {}
      |                                                                 ^
In file included from /home/mangix/devstuff/openwrt/staging_dir/target-mips_74kc+dsp2_musl/usr/include/c++/v1/algorithm:642,
                 from /home/mangix/devstuff/openwrt/build_dir/target-mips_74kc+dsp2_musl/yaml-cpp-yaml-cpp-0.6.3/src/convert.cpp:1:
/home/mangix/devstuff/openwrt/staging_dir/target-mips_74kc+dsp2_musl/usr/include/c++/v1/utility:447:5: note: candidate: 'template<class _U1, class _U2, typename std::__1::enable_if<__enable_implicit<_U1, _U2>(), bool>::type <anonymous> > constexpr std::__1::pair<_T1, _T2>::pair(_U1&&, _U2&&)'
  447 |     pair(_U1&& __u1, _U2&& __u2)
      |     ^~~~
/home/mangix/devstuff/openwrt/staging_dir/target-mips_74kc+dsp2_musl/usr/include/c++/v1/utility:447:5: note:   template argument deduction/substitution failed:
/home/mangix/devstuff/openwrt/staging_dir/target-mips_74kc+dsp2_musl/usr/include/c++/v1/utility:444:61:   in 'constexpr' expansion of 'std::__1::pair<YAML::Node, YAML::Node>::_CheckArgs::__enable_implicit<const YAML::Node&, const YAML::Node&>()'
/home/mangix/devstuff/openwrt/staging_dir/target-mips_74kc+dsp2_musl/usr/include/c++/v1/utility:445:9: error: 'constexpr' call flows off the end of the function
  445 |     > = false>
      |         ^~~~~
/home/mangix/devstuff/openwrt/staging_dir/target-mips_74kc+dsp2_musl/usr/include/c++/v1/utility:444:61: note: in template argument for type 'bool'
  444 |             _CheckArgs::template __enable_implicit<_U1, _U2>()
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~
/home/mangix/devstuff/openwrt/staging_dir/target-mips_74kc+dsp2_musl/usr/include/c++/v1/utility:438:14: note: candidate: 'template<class _U1, class _U2, typename std::__1::enable_if<__enable_explicit<_U1, _U2>(), bool>::type <anonymous> > constexpr std::__1::pair<_T1, _T2>::pair(_U1&&, _U2&&)'
  438 |     explicit pair(_U1&& __u1, _U2&& __u2)
      |              ^~~~
/home/mangix/devstuff/openwrt/staging_dir/target-mips_74kc+dsp2_musl/usr/include/c++/v1/utility:438:14: note:   template argument deduction/substitution failed:
/home/mangix/devstuff/openwrt/staging_dir/target-mips_74kc+dsp2_musl/usr/include/c++/v1/utility:436:9: error: no type named 'type' in 'struct std::__1::enable_if<false, bool>'
  436 |     > = false>
      |         ^~~~~
/home/mangix/devstuff/openwrt/staging_dir/target-mips_74kc+dsp2_musl/usr/include/c++/v1/utility:429:5: note: candidate: 'template<bool _Dummy, typename std::__1::enable_if<typename std::__1::conditional<_MaybeEnable, std::__1::pair<YAML::Node, YAML::Node>::_CheckArgs, std::__1::__check_tuple_constructor_fail>::type::__enable_implicit<const Node&, const Node&>(), bool>::type <anonymous> > constexpr std::__1::pair<_T1, _T2>::pair(const _T1&, const _T2&)'
  429 |     pair(_T1 const& __t1, _T2 const& __t2)
      |     ^~~~
/home/mangix/devstuff/openwrt/staging_dir/target-mips_74kc+dsp2_musl/usr/include/c++/v1/utility:429:5: note:   template argument deduction/substitution failed:
/home/mangix/devstuff/openwrt/staging_dir/target-mips_74kc+dsp2_musl/usr/include/c++/v1/utility:426:86:   in 'constexpr' expansion of 'std::__1::pair<YAML::Node, YAML::Node>::_CheckArgs::__enable_implicit<const YAML::Node&, const YAML::Node&>()'
/home/mangix/devstuff/openwrt/staging_dir/target-mips_74kc+dsp2_musl/usr/include/c++/v1/utility:427:9: error: 'constexpr' call flows off the end of the function
  427 |     > = false>
      |         ^~~~~
/home/mangix/devstuff/openwrt/staging_dir/target-mips_74kc+dsp2_musl/usr/include/c++/v1/utility:426:86: note: in template argument for type 'bool'
  426 |             _CheckArgsDep<_Dummy>::template __enable_implicit<_T1 const&, _T2 const&>()
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~
/home/mangix/devstuff/openwrt/staging_dir/target-mips_74kc+dsp2_musl/usr/include/c++/v1/utility:420:14: note: candidate: 'template<bool _Dummy, typename std::__1::enable_if<typename std::__1::conditional<_MaybeEnable, std::__1::pair<YAML::Node, YAML::Node>::_CheckArgs, std::__1::__check_tuple_constructor_fail>::type::__enable_explicit<const Node&, const Node&>(), bool>::type <anonymous> > constexpr std::__1::pair<_T1, _T2>::pair(const _T1&, const _T2&)'
  420 |     explicit pair(_T1 const& __t1, _T2 const& __t2)
      |              ^~~~
/home/mangix/devstuff/openwrt/staging_dir/target-mips_74kc+dsp2_musl/usr/include/c++/v1/utility:420:14: note:   template argument deduction/substitution failed:
/home/mangix/devstuff/openwrt/staging_dir/target-mips_74kc+dsp2_musl/usr/include/c++/v1/utility:418:9: error: no type named 'type' in 'struct std::__1::enable_if<false, bool>'
  418 |     > = false>
      |         ^~~~~
/home/mangix/devstuff/openwrt/staging_dir/target-mips_74kc+dsp2_musl/usr/include/c++/v1/utility:412:5: note: candidate: 'template<bool _Dummy, typename std::__1::enable_if<typename std::__1::conditional<_MaybeEnable, std::__1::pair<YAML::Node, YAML::Node>::_CheckArgs, std::__1::__check_tuple_constructor_fail>::type::__enable_default<Node, Node>(), bool>::type <anonymous> > constexpr std::__1::pair<_T1, _T2>::pair()'
  412 |     pair() _NOEXCEPT_(is_nothrow_default_constructible<first_type>::value &&
      |     ^~~~
/home/mangix/devstuff/openwrt/staging_dir/target-mips_74kc+dsp2_musl/usr/include/c++/v1/utility:412:5: note:   template argument deduction/substitution failed:
In file included from /home/mangix/devstuff/openwrt/build_dir/target-mips_74kc+dsp2_musl/yaml-cpp-yaml-cpp-0.6.3/include/yaml-cpp/node/detail/node_data.h:18,
                 from /home/mangix/devstuff/openwrt/build_dir/target-mips_74kc+dsp2_musl/yaml-cpp-yaml-cpp-0.6.3/include/yaml-cpp/node/detail/node_ref.h:13,
                 from /home/mangix/devstuff/openwrt/build_dir/target-mips_74kc+dsp2_musl/yaml-cpp-yaml-cpp-0.6.3/include/yaml-cpp/node/detail/node.h:12,
                 from /home/mangix/devstuff/openwrt/build_dir/target-mips_74kc+dsp2_musl/yaml-cpp-yaml-cpp-0.6.3/include/yaml-cpp/node/impl.h:12,
                 from /home/mangix/devstuff/openwrt/build_dir/target-mips_74kc+dsp2_musl/yaml-cpp-yaml-cpp-0.6.3/include/yaml-cpp/node/convert.h:18,
                 from /home/mangix/devstuff/openwrt/build_dir/target-mips_74kc+dsp2_musl/yaml-cpp-yaml-cpp-0.6.3/src/convert.cpp:3:
/home/mangix/devstuff/openwrt/build_dir/target-mips_74kc+dsp2_musl/yaml-cpp-yaml-cpp-0.6.3/include/yaml-cpp/node/iterator.h:26:65: note:   candidate expects 0 arguments, 2 provided
   26 |       : Node(Node::ZombieNode), std::pair<Node, Node>(key, value) {}
      |                                                                 ^
In file included from /home/mangix/devstuff/openwrt/staging_dir/target-mips_74kc+dsp2_musl/usr/include/c++/v1/algorithm:642,
                 from /home/mangix/devstuff/openwrt/build_dir/target-mips_74kc+dsp2_musl/yaml-cpp-yaml-cpp-0.6.3/src/convert.cpp:1:
/home/mangix/devstuff/openwrt/staging_dir/target-mips_74kc+dsp2_musl/usr/include/c++/v1/utility:328:5: note: candidate: 'std::__1::pair<_T1, _T2>::pair(std::__1::pair<_T1, _T2>&&) [with _T1 = YAML::Node; _T2 = YAML::Node]'
  328 |     pair(pair&&) = default;
      |     ^~~~
/home/mangix/devstuff/openwrt/staging_dir/target-mips_74kc+dsp2_musl/usr/include/c++/v1/utility:328:5: note:   candidate expects 1 argument, 2 provided
/home/mangix/devstuff/openwrt/staging_dir/target-mips_74kc+dsp2_musl/usr/include/c++/v1/utility:327:5: note: candidate: 'std::__1::pair<_T1, _T2>::pair(const std::__1::pair<_T1, _T2>&) [with _T1 = YAML::Node; _T2 = YAML::Node]'
  327 |     pair(pair const&) = default;
      |     ^~~~
/home/mangix/devstuff/openwrt/staging_dir/target-mips_74kc+dsp2_musl/usr/include/c++/v1/utility:327:5: note:   candidate expects 1 argument, 2 provided
In file included from /home/mangix/devstuff/openwrt/build_dir/target-mips_74kc+dsp2_musl/yaml-cpp-yaml-cpp-0.6.3/include/yaml-cpp/node/convert.h:18,
                 from /home/mangix/devstuff/openwrt/build_dir/target-mips_74kc+dsp2_musl/yaml-cpp-yaml-cpp-0.6.3/src/convert.cpp:3:
/home/mangix/devstuff/openwrt/build_dir/target-mips_74kc+dsp2_musl/yaml-cpp-yaml-cpp-0.6.3/include/yaml-cpp/node/impl.h: In member function 'YAML::Node& YAML::Node::operator=(const T&)':
/home/mangix/devstuff/openwrt/build_dir/target-mips_74kc+dsp2_musl/yaml-cpp-yaml-cpp-0.6.3/include/yaml-cpp/node/impl.h:212:11: warning: 'operator=' should return a reference to '*this' [-Weffc++]
  212 |   return *this;
      |           ^~~~

```

No idea what the issue is.
This pull request configures this repository to be run on Repl.it.      It adds a `.replit` configuration file and a Repl.it badge to the `README`.
     You can read more about running repos on Repl.it [here](https://docs.repl.it/repls/dot-replit), or view the Repl [here](https://repl.it/@shiv213/yaml-cpp).
I have a project that includes yaml-cpp as a subdirectory in my project and uses it as a public dependency to one of my libraries. 
After the new CMake changes I get the following error:

`
CMake Error: install(EXPORT "${PROJECT_NAME}Targets" ...) includes target "${TARGET}" which requires target "yaml-cpp" that is not in the export set.`

It worked with the previous version before `yaml-cpp-targets` was exported by CMake. Now is line 129 of the top level CMakeLists.txt file you only export  `yaml-cpp-targets`  if `YAML_CPP_INSTALL=ON`. The problem is that `YAML_CPP_INSTALL` is turned off when yaml-cpp is built as a subdirectory.

I tried `SET(YAML_CPP_INSTALL ON CACHE INTERNAL "")` and it still did not turn `YAML_CPP_INSTALL` on. 

There should be a way to enable generation of the yaml-cpp install targets when it is included as a subdirectory in another project.
# Summary
Hi, I have tried to run `libFuzzer` against `yaml-cpp` and suddenly found an out-of-memory bug

# PoC
> ==3999024== ERROR: libFuzzer: out-of-memory (used: 2062Mb; limit: 2048Mb)

`YAML::Node node = YAML::Load("[[:"); // or "{!\xdb:"` 

Seems like something is wrong if sequence ends with `:` symbol.

# Environment
* uname: 5.3.11-arch1-1 x86_64 GNU/Linux
* clang: 9.0.0
* yampl-cpp: 0.6.3
This commit appears to break Blender on Fedora:

https://github.com/jbeder/yaml-cpp/commit/774f25800e6f19f4b927023c85d1389af322da5e

See:

https://bugzilla.redhat.com/show_bug.cgi?id=1773331

Hi, 

I've encountered a bug from one of our fuzzers in `Scanner::peek()` from an empty tokens assertion. I'm using version 0.6.3, and the case doesn't quite match similar issues. The input to the parser was an incomplete block map with an anchor: `a: [&b`. Here's a stack trace of what happened: when I ran `util/parse file_poc` with `file_poc` containing the input.

#0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007ffff76b88ad in __GI_abort () at abort.c:79
#2  0x00007ffff76b877f in __assert_fail_base (fmt=0x7ffff781abc0 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", 
    assertion=0x44e2a0 "!m_tokens.empty()", file=0x44e2b2 "/usr/local/google/home/asraa/git/yaml-cpp/src/scanner.cpp", line=37, 
    function=<optimized out>) at assert.c:92
#3  0x00007ffff76c6542 in __GI___assert_fail (assertion=0x44e2a0 "!m_tokens.empty()", 
    file=0x44e2b2 "/usr/local/google/home/asraa/git/yaml-cpp/src/scanner.cpp", line=37, 
    function=0x44e2ec "YAML::Token &YAML::Scanner::peek()") at assert.c:101
#4  0x00000000004252da in YAML::Scanner::peek() ()
#5  0x0000000000434a4c in YAML::SingleDocParser::HandleNode(YAML::EventHandler&) ()
#6  0x00000000004359c9 in YAML::SingleDocParser::HandleFlowSequence(YAML::EventHandler&) ()
#7  0x0000000000435396 in YAML::SingleDocParser::HandleSequence(YAML::EventHandler&) ()
#8  0x0000000000434c74 in YAML::SingleDocParser::HandleNode(YAML::EventHandler&) ()
#9  0x000000000043606a in YAML::SingleDocParser::HandleBlockMap(YAML::EventHandler&) ()
#10 0x00000000004350c0 in YAML::SingleDocParser::HandleMap(YAML::EventHandler&) ()
#11 0x0000000000434e06 in YAML::SingleDocParser::HandleNode(YAML::EventHandler&) ()
#12 0x00000000004346ef in YAML::SingleDocParser::HandleDocument(YAML::EventHandler&) ()
#13 0x0000000000420c53 in YAML::Parser::HandleNextDocument(YAML::EventHandler&) ()
#14 0x000000000041ed15 in YAML::Load(std::istream&) ()
#15 0x0000000000406cac in parse(std::istream&) ()
#16 0x0000000000406e0e in main ()

Is there some way to avoid peek without the assertion?