This was causing Oauth to no longer work on shopify_app.
[ New session storage strategies](https://github.com/Shopify/shopify_app/blob/master/lib/shopify_app/session/storage_strategies/shop_storage_strategy.rb) do not take model names other than "Shop" into account. This seems like a breaking change.

Hence session storage does not respond 
`include ShopifyApp::SessionStorage`

The solution is to override the store and retrieve methods in the controller and remove the SessionStorage call. 
 
```
#include ShopifyApp::SessionStorage

#Override Shopify Session Storage
  def self.store(auth_session, *args)
   shop = Integration.find_or_initialize_by(shopify_domain: auth_session.domain)
   shop.shopify_token = auth_session.token
   shop.save!
   shop.id
 end

 def self.retrieve(id)
   return unless id
   if shop = Integration.find_by(id: id)
     ShopifyAPI::Session.new(
       domain: shop.shopify_domain,
       token: shop.shopify_token,
       api_version: shop.api_version
     )
   end
 end
```

A simple fix might be removing "Shop" [here](https://github.com/Shopify/shopify_app/blob/master/lib/shopify_app/session/storage_strategies/shop_storage_strategy.rb) or use "self"

```
shop = find_or_initialize_by(shopify_domain: auth_session.domain)
        shop.shopify_token = auth_session.token
        shop.save!
        shop.id
```
I am consistently getting invalid authenticity token from sessions#create. This is not hugely important considering that this route is only used in begining development and #new can also be used but this should be fixed 
Hey!

So, I'm having a big issue here, I am trying to update my app to 11.6.0 to have the `SameSite=None; Secure`, but I have a session error exactly on this version, I have sure about this because I tried with 11.0.0, 11.4.0 and 11.5.1 and the error just happens on 11.6.0.

The error is this:

> I, [2020-01-16T20:08:24.130599 #38014]  INFO -- omniauth: (shopify) Request phase initiated.
> E, [2020-01-16T20:08:24.131116 #38014] ERROR -- omniauth: (shopify) Authentication failure! invalid_site encountered.
> 
> OmniAuth::Error (invalid_site):
> 
> omniauth (1.9.0) lib/omniauth/failure_endpoint.rb:25:in `raise_out!'
> omniauth (1.9.0) lib/omniauth/failure_endpoint.rb:20:in `call'
> omniauth (1.9.0) lib/omniauth/failure_endpoint.rb:12:in `call'
> omniauth (1.9.0) lib/omniauth/strategy.rb:491:in `fail!'
> omniauth-shopify-oauth2 (2.2.0) lib/omniauth/strategies/shopify.rb:113:in `request_phase'
> omniauth (1.9.0) lib/omniauth/strategy.rb:226:in `request_call'
> omniauth (1.9.0) lib/omniauth/strategy.rb:188:in `call!'
> omniauth (1.9.0) lib/omniauth/strategy.rb:169:in `call'
> newrelic_rpm (6.7.0.359) lib/new_relic/agent/instrumentation/middleware_tracing.rb:99:in `call'
> omniauth (1.9.0) lib/omniauth/builder.rb:64:in `call'
> newrelic_rpm (6.7.0.359) lib/new_relic/agent/instrumentation/middleware_tracing.rb:99:in `call'
> newrelic_rpm (6.7.0.359) lib/new_relic/rack/agent_hooks.rb:30:in `traced_call'
> newrelic_rpm (6.7.0.359) lib/new_relic/agent/instrumentation/middleware_tracing.rb:99:in `call'
> newrelic_rpm (6.7.0.359) lib/new_relic/rack/browser_monitoring.rb:32:in `traced_call'
> newrelic_rpm (6.7.0.359) lib/new_relic/agent/instrumentation/middleware_tracing.rb:99:in `call'
> rack (2.0.7) lib/rack/tempfile_reaper.rb:15:in `call'
> newrelic_rpm (6.7.0.359) lib/new_relic/agent/instrumentation/middleware_tracing.rb:99:in `call'
> rack (2.0.7) lib/rack/etag.rb:25:in `call'
> newrelic_rpm (6.7.0.359) lib/new_relic/agent/instrumentation/middleware_tracing.rb:99:in `call'
> rack (2.0.7) lib/rack/conditional_get.rb:25:in `call'



I did some investigation.. 

For all this versions(11.0.0, 11.4.0, 11.5.1) I have debug the file `config/initializers/omniauth.rb`

This line: `shopify_auth_params = strategy.session['shopify.omniauth_params']&.with_indifferent_access`

Basically for all versions 11.0.0, 11.4.0, 11.5.1 the value of `shopify_auth_params` is getting the shop parameter, the value is:

`{"shop"=>"myshop.myshopify.com"}`

But, for 11.6.0, `shopify_auth_params ` is just `nil`, and that seems to be the cause of the error, why there is the error I don't have idea =/.

Just for the sake of information, I'm using `ShopifyApp::SessionStorage` on the `Shop` model as session storage. But I have tried using `config.session_repository = 'ShopifyApp::InMemorySessionStore'` but don't work either.


Thank you guys for the awesome job on this piece of code and I really hope we can solve this until Chrome make it mandatory to use version 11.6.0(SameSite=None; Secure). 

 
Addresses https://github.com/Shopify/shopify_app/issues/850

We updated the instructions for step 7 in the quickstart.md file. With the release of public apps, we now restrict the usage of copying and pasting installation urls as a way to install apps.

You must now go through the UI to install these apps on dev stores for testing.

cc @lyninx since we paired on this.
Instructions for adding the app to the store from the partners dashboard, install link doesn't work if this is not done first.

cc: @ShayneP @stevehaase 
Maybe related to #734 

@emilybulger and @RyaGershcovich flagged some content and copy issues with the cookie screen. Rya has been delegated to propose some copy improvements, and there’s also a functional problem with the `%{app}` variable not rendering. Emily took a screenshot and I've annotated it below:

<img width="692" alt="Screen Shot 2019-12-13 at 3 18 19 PM" src="https://user-images.githubusercontent.com/547470/71839307-dd9d9900-3088-11ea-9589-82b82e0f12e3.png">

**Note:** I'm just filing this issue to introduce the relevant people! I'm unsubscribing from the thread so you can all take it from here!
With Rails 6, and using App Proxies, I get the following error:

> Blocked host: new-development-store.myshopify.com
> 
> To allow requests to new-development-store.myshopify.com, add the following to your environment configuration:
> 
> config.hosts << "new-development-store.myshopify.com"
> 

[Its a new feauture in Rails: ](https://www.fngtps.com/2019/rails6-blocked-host/)

> Host Authorization, new middleware included in Rails to prevent against DNS rebinding attacks

We can disable the feature with
```
Rails.application.configure do
  config.hosts.clear
end
```
but then the new security feauture is lost?

Is there a way to allow all request from Shopify? Are requests made from myshopify.com-domains (e.g. nike.myshopify.com), or from individual domains (e.g. nike.com)?
# Steps to reproduce:

1. Set up the clean Shopify app on Rails 5.x using the `shopify_app` setup instructions.
2. Run the app, and tunnel using Ngrok.
3. Open it on Chrome - see that the sample works.
4. Open the Safari 13.0.4.
5. Go to Safari `Preferences -> Privacy -> Manage Website Data` and clear all the data related to domains `ngrok` and `myshopify.com`.
6. Make sure that in Safari Privacy preferences it's not blocking cookies and not preventing cross-site tracking:
<img width="886" alt="Screenshot 2019-12-19 at 19 39 15" src="https://user-images.githubusercontent.com/17713131/71195836-66e65a80-2297-11ea-9b62-6ffaea724a69.png">
7. Open the app via Shopify Admin on Safari 13.0.4.
8. See that it shows the full-screen page telling: "Your browser needs to authenticate My Shopify App".
<img width="2115" alt="Screenshot 2019-12-19 at 19 15 56" src="https://user-images.githubusercontent.com/17713131/71195549-d4de5200-2296-11ea-9373-634242e10723.png">
9. Press the blue "Continue" button.

10. See that the browser loops the redirect 3 times, and then Shopify Admin shows the error toast:
_The application can’t be loaded with the current version of Safari, try clearing your cookies or using another browser_.

<img width="2115" alt="Screenshot 2019-12-19 at 19 17 00" src="https://user-images.githubusercontent.com/17713131/71195572-df005080-2296-11ea-82f9-b57fe4fe1e5c.png">

# Expected result:

When opening with Safari, after pressing "Continue" on the page "Your browser needs to authenticate My Shopify App", it should show another page inside the iframe asking to press the button there telling that it needs to accept cookies.
Then Safari should show the ITP cookies confirmation popup.
But that is not happening.

# Alternatives attempted:

* Clearing all cookies and website data - same result.
* Opening Safari in Private Window - same result.
* Tried with Safari Technology Preview `Release 97 (Safari 13.1, WebKit 15609.1.11.4)` - there it just refreshed once, and opened the app. It didn't ask to confirm cookies, even though I set to disable all 3rd party cookies (ITP) under Develop -> Experimental features.

# Proof that others have this issue
During the last 2 days we had at least 4 customers complaining about the same issue.

I maintain an app used privately by a shopify plus customer. Since we have a lot of staff, and some parts of the app are accessed in a non-embedded context, and not all users of the app have shopify accounts, and `shopify_app` is not set up to do _user_ authentication, we use Devise authentication in addition to shopify authentication, and link our devise users to corresponding shopify users when they exist.

After installing this week's Safari upgrade (=> 13.0.4), devise login no longer works in an embedded context (seems the CSRF token is getting reset) AND after logging in in a non-embeddded context, the devise authentication is not working in subsequent embedded pages.

The session is not discarded altogether -- if I go back to a non-embedded page I'm still logged in.

Everything still works correctly in Chrome.

Rails 5.2.4
shopify_app 11.4.0

