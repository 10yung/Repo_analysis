Is there a way I can use this package with node version 6? Node v6 does not support `async/await`. I can see the project is moved from callbacks to `async/await` in `v4.0.0`. [This](https://github.com/bbc/sqs-consumer/pull/127) and [this](https://github.com/bbc/sqs-consumer/pull/132) pull requests talks about adding support for `async/await` but does not mention much about backward compatibility.
Bumps [handlebars](https://github.com/wycats/handlebars.js) from 4.1.2 to 4.5.3.
<details>
<summary>Changelog</summary>

*Sourced from [handlebars's changelog](https://github.com/wycats/handlebars.js/blob/master/release-notes.md).*

> ## v4.5.3 - November 18th, 2019
> Bugfixes:
> 
> - fix: add "no-prototype-builtins" eslint-rule and fix all occurences - f7f05d7
> - fix: add more properties required to be enumerable - 1988878
> 
> Chores / Build:
> - fix: use !== 0 instead of != 0 - c02b05f
> - add chai and dirty-chai and sinon, for cleaner test-assertions and spies, 
>   deprecate old assertion-methods  - 93e284e, 886ba86, 0817dad, 93516a0
> 
> Security:
> 
> - The properties `__proto__`, `__defineGetter__`, `__defineSetter__` and `__lookupGetter__` 
>   have been added to the list of "properties that must be enumerable".
>   If a property by that name is found and not enumerable on its parent, 
>   it will silently evaluate to `undefined`. This is done in both the compiled template and the "lookup"-helper. 
>   This will prevent new Remote-Code-Execution exploits that have been
>   published recently.
> 
> Compatibility notes: 
> 
> - Due to the security-fixes. The semantics of the templates using
>   `__proto__`, `__defineGetter__`, `__defineSetter__` and `__lookupGetter__` in the respect that those expression now return 
>   `undefined` rather than their actual value from the proto.
> - The semantics have not changed in cases where the properties are  enumerable, as in:
> 
> ```js
> {
>   __proto__: 'some string'
> }
> ```
> 
> - The change may be breaking in that respect, but we still only 
>   increase the patch-version, because the incompatible use-cases
>   are not intended, undocumented and far less important than fixing
>   Remote-Code-Execution exploits on existing systems.
> 
> 
> 
> [Commits](https://github.com/wycats/handlebars.js/compare/v4.5.2...v4.5.3)
> 
> ## v4.5.2 - November 13th, 2019
> # Bugfixes
> 
> - fix: use String(field) in lookup when checking for "constructor" - d541378
> - test: add fluent API for testing Handlebars - c2ac79c
> 
> Compatibility notes:
> - no incompatibility are to be expected
></tr></table> ... (truncated)
</details>
<details>
<summary>Commits</summary>

- [`c819c8b`](https://github.com/wycats/handlebars.js/commit/c819c8b533934d2ac18001d7eb27a3205b00c2f3) v4.5.3
- [`827c9d0`](https://github.com/wycats/handlebars.js/commit/827c9d0747bef7d7f89829779523b6b2dcf3051d) Update release notes
- [`f7f05d7`](https://github.com/wycats/handlebars.js/commit/f7f05d7558e674856686b62a00cde5758f3b7a08) fix: add "no-prototype-builtins" eslint-rule and fix all occurences
- [`1988878`](https://github.com/wycats/handlebars.js/commit/198887808780bbef9dba67a8af68ece091d5baa7) fix: add more properties required to be enumerable
- [`886ba86`](https://github.com/wycats/handlebars.js/commit/886ba86c2f9cc71b7d99b9018fbe2d72a57085cc) test/chore: add chai/expect and sinon to "runtime"-environment
- [`0817dad`](https://github.com/wycats/handlebars.js/commit/0817dad7e72c51d07f7700547d0c69aa79a4976b) test: add sinon as global variable to eslint in the specs
- [`93516a0`](https://github.com/wycats/handlebars.js/commit/93516a0b07026ebd23c84fddf270a0c8b570bc59) test: add sinon.js for spies, deprecate current assertions
- [`93e284e`](https://github.com/wycats/handlebars.js/commit/93e284ed9be1e38c5e6945f15af1ccd689f2ada6) chore: add chai and dirty-chai for better test assertions
- [`c02b05f`](https://github.com/wycats/handlebars.js/commit/c02b05fa819f46bb66c878bebc6e8006408ebd5c) fix: use !== 0 instead of != 0
- [`8de121d`](https://github.com/wycats/handlebars.js/commit/8de121d21c88a6ab877e3a0eec9daaac483f3bf0) v4.5.2
- Additional commits viewable in [compare view](https://github.com/wycats/handlebars.js/compare/v4.1.2...v4.5.3)
</details>
<br />

[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=handlebars&package-manager=npm_and_yarn&previous-version=4.1.2&new-version=4.5.3)](https://help.github.com/articles/configuring-automated-security-fixes)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot ignore this [patch|minor|major] version` will close this PR and stop Dependabot creating any more for this minor/major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language
- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language
- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language
- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language

You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/bbc/sqs-consumer/network/alerts).

</details>
### Description

If a consumer is created, started, and stopped, and then another consumer is created and started, then that second consumer no longer emits the `message_received` event.

### Expected behaviour

The second consumer should emit the `message_received` event upon receiving a message.

### Actual behaviour

The second consumer receives the message but does not emit the `message_received` event.

### Steps to reproduce

I set up a small repo to demonstrate the bug. Requirements are Node 8+ and docker-compose.

```bash
git clone git@github.com:TakeScoop/sqs-test.git
git reset 1d5a965369ea83c14c1350262fdd8ce295801705 # specify commit for posterity
cd sqs-test
nvm use # if you use nvm
npm install
docker-compose -f test/docker-compose.yml up -d
DEBUG=sqs-consumer npm run test
```

The second test, `should get message_received event`, fails. The debug output clearly shows that the message was received. If you run it by itself using `.only`, then it passes. Similarly, if you comment out the `consumer.start()` on the preceding line, then it also passes.

### Operating system

I'm running macOS 10.14.6
### Description
In [consumer#deleteMessageBatch](https://github.com/bbc/sqs-consumer/blob/ee31f00af8c2da4637199772fa86fb3d579d01ac/src/consumer.ts#L319) when [batch deleting messages](https://github.com/bbc/sqs-consumer/blob/ee31f00af8c2da4637199772fa86fb3d579d01ac/src/consumer.ts#L331) individual failures are not checked. As per the [AWS docs](https://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/SQS.html#deleteMessageBatch-property) "Because the batch request can result in a combination of successful and unsuccessful actions, you should check for batch errors even when the call returns an HTTP status code of 200"

### Expected behaviour
The return value of `this.sqs.deleteMessageBatch` in the callback specifies a list of failed IDs, which should be validated to be empty. If any IDs fail, they should either be retried or the error should be surfaced

### Actual behaviour
Individual failures are silent

### Steps to reproduce
Have AWS return a non-empty `Failed` array

[comment]: <> (Please use headings for bugs only, else you can delete) 
### Description

I am trying to use: 

```
process.on('SIGINT', function() {
    //some progress....
})
```

for preventing Ctrl + c from closing the node process before the consumer finished his process. What I figured out is that by doing this:

```
process.on('SIGINT', function() {
    var listeners = process.listeners('SIGINT');
    for (var i = 0; i < listeners.length; i++) {
        console.log(listeners[i].toString());
    }
})
```
I can see that I have this method:

`() => {killChrome(); process.exit(130);}`

what causes my node process to close right away when I am doing Ctrl + c

### Expected behaviour

```
process.on('SIGINT', function() {
    //waiting for my work to end and then exit the node process
})
```

Updated `aws-sdk` to latest version and also marked it as a `peer dependency` so that consuming packages are able to supply their own version of `aws-sdk`.
### Description

calling `consumer.isRunning` return true even when configured with an invalid sqs url or invalid credentials.

### Behaviour

Well, this is up for debate I would assume. If the desired behaviour is to return `true` for `isRunning` then I would suggest updating the documentation to be explicit about the behaviour.

### Steps to reproduce

Configure an incorrect queueUrl and you will see that `isRunning` will return true.

Is it possible to only delete some of the messages received in a batch? I understand that using `handleMessage` in combination with a `batchSize` greater than 1 results in them being processed one at a time but `handleMessageBatch` seems to be all or nothing. For example, if I had an API that could save multiple messages at a time and return a list of those that were successfully saved, could I use that to delete only the successfully saved messages from the queue?

Adding http keepAlive note to documentation