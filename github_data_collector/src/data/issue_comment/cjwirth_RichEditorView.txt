i write style.css file below line

#container {
    display: block;
    width: 100%;
    height: 100%;
}

Then get wrong height in this delegate
func richEditor(_ editor: RichEditorView, heightDidChange height: Int) {
    print(height)
}
Hi.

On iPad OS, there are a some of issues that cause many difficulties with text input.

- Cannot set the cursor on middle of text.
- If set a hyperlink to a text in the middle of a sentence, no longer can move the cursor or select any text.

These do NOT occur on iOS 13 but occur on **iPad OS** 13.

Hi.

When input characters using dictation, the dictation is interrupted by the text is confirmed.
That problem does not occur on iOS12 and occurs on iOS13.

When a problem occurs, the input cursor moves to the original position, and further move to the top of the editor view.
Occasionally, some characters may inputed in strange places.


Hi Team,

We are using this pod long years back. Now we need to give support this pod in UIKItforMac also, so we need the WKWebview code. When we can get the update?
Hello  @cjwirth 

Keyboard cursor appears only one time and suddenly disappear when I first tap on editor .
But when I tap second time again on editor, cursor is showing.
For the first time cursor disappear but keyboard exist. And User cannot type as cursor in not there.
Can anyone provide a workaround for the following issue?

https://github.com/nnhubbard/ZSSRichTextEditor/issues/252#issue-542460709

The issue I guess is with the [Java script code](https://github.com/nnhubbard/ZSSRichTextEditor/blob/master/ZSSRichTextEditor/Source/ZSSRichTextEditor.js).
Xcode 11.3, device version ios13.2.3
crash at AppDelegate, log out message before crash:
2019-12-20 14:17:42.285784+0800 RichEditorViewSample[4935:1090592] Metal API Validation Enabled
2019-12-20 14:17:43.351845+0800 RichEditorViewSample[4935:1090370] API error: <_UIKBCompatInputView: 0x1054b5680; frame = (0 0; 0 0); layer = <CALayer: 0x280d44ac0>> returned 0 width, assuming UIViewNoIntrinsicMetric
2019-12-20 14:17:43.352046+0800 RichEditorViewSample[4935:1090370] API error: <_UIKBCompatInputView: 0x1054b5680; frame = (0 0; 0 0); layer = <CALayer: 0x280d44ac0>> returned 0 width, assuming UIViewNoIntrinsicMetric
2019-12-20 14:17:48.156146+0800 RichEditorViewSample[4935:1090594] [general] Connection to daemon was invalidated
2019-12-20 14:17:50.432666+0800 RichEditorViewSample[4935:1090370] -[UIWindow endDisablingInterfaceAutorotationAnimated:] called on <UIRemoteKeyboardWindow: 0x1060ecc00; frame = (0 0; 414 736); opaque = NO; autoresize = W+H; layer = <UIWindowLayer: 0x280d66140>> without matching -beginDisablingInterfaceAutorotation. Ignoring.
2019-12-20 14:17:51.023465+0800 RichEditorViewSample[4935:1090370] -[UIWindow endDisablingInterfaceAutorotationAnimated:] called on <UIRemoteKeyboardWindow: 0x1060ecc00; frame = (0 0; 414 736); opaque = NO; autoresize = W+H; layer = <UIWindowLayer: 0x280d66140>> without matching -beginDisablingInterfaceAutorotation. Ignoring.
(lldb) 

Tested on the demo project. Tap into the editor view. The cursor does not show up. Also writing has no effect.
Important: There could still be some bugs within here. If you have anymore, @YoomamaFTW and I'll look into it. Please post it within THIS thread. This thread is dedicated to Swift 5 and 5.1 for updating RichEditorView.

Hi guys. I'm not sure if cjwirth is going to be updating this ever again. For Swift 5 support, use cbess's (link: https://github.com/cbess/RichEditorView/). I copied all of cbess's code rather than 'pod install' because you will need to change and add a few bits of code. To download, just download the zip and unzip it to find the package's code in RichEditorView. This is as of 11/28/2019 so happy thanksgiving to all the Americans. Anyways...

I recommend you create two groups/folders: Resources and RichEditorView. Afterwards, copy the classes into the RichEditorView folder and copy the "editor" files (i.e. the JS and HTML files) into the Resources folder. For the icons, I IMPORTed those into my Assets.xcassets (keyword is import (by right-clicking in Xcode). 

Next, we need to change the following lines of code. Start with RichEditorView.swift. 

1. The variable DefaultInnerLineHeight should be 28, not 21. This code should fix the VERTICAL scrolling issue. The horizontal scrolling issue is coming up.
2. We should add tap gestures. As a property, put this in the objcMember class:
```
private let tapRecognizer = UITapGestureRecognizer()
@objc private func viewWasTapped() {
    if !webView.isFirstResponder {
        let point = tapRecognizer.location(in: webView)
        focus(at: point)
    }
}
```
In the function `setup`, add this to the bottom:
```
tapRecognizer.addTarget(self, action: #selector(viewWasTapped))
tapRecognizer.delegate = self
addGestureRecognizer(tapRecognizer)
```

Great! Now let's go to your Resources folder.

1. In style.css, replace the code with the following:
```
@charset "UTF-8";

:root {
    color-scheme: light dark;
}

html {
    height: 100%;
}

body {
    min-height: 100%;
    overflow: auto;
    font: -apple-system-body;
}

body, h1, p, ul, ol {
    margin: 0;
}

div {
    display: block;
    position: static;
}

#editor {
    -webkit-user-select: auto !important;
    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
}

#editor:focus {
    outline: 0px solid transparent;
}

@media (prefers-color-scheme: dark) {
    body, #editor {
    }
}

.placeholder[placeholder]:after {
    content: attr(placeholder);
    position: absolute;
    top: 0px;
    color: #cccccc;
}

#editor {
    min-height: 100%;
    height: 100%;
    overflow: auto;
    display: block;
    font-size: 12pt;
}
```
Props to @hansemannn for this code. Additionally, this code fixes the bug with word wrapping or the horizontal scrolling.
2. In rich_editor.js, you'll need to change the most crucial thing: RE
Instead of RE being a const, it should be a var, like this:
`var RE = {};`
This is the reason why none of the JS works properly; the WKWebBridge thing can't find a variable RE because there was no variable RE; it was a constant.

Don't worry about LICENSING. The nature of it is so that you don't redistribute it under your own name. However, if it's just for commercial use, you can just list it under a file giving credits to CJWirth.

Good luck! Again, here's the link to cbess's repo: https://github.com/cbess/RichEditorView/