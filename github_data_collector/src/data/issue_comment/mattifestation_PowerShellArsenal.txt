Bad example command (#9).
`(Get-PEB -Id (ps Regshot).Id).InInitializationOrderModuleList`

> Impossible de convertir la valeur «64 bits» en type «System.Int32». Erreur: «Le format de la chaîne d'entrée est
incorrect.»
Au caractère C:\Program Files\WindowsPowerShell\Modules\PowerShellArsenal\WindowsInternals\Get-PEB.ps1:176 : 9
+         $OSArchitecture = [Int](Get-WmiObject Win32_OperatingSystem). ...
+         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument : (:) [], RuntimeException
    + FullyQualifiedErrorId : InvalidCastFromStringToInteger
On my Windows 10 box I opened a Powershell session and a Cmd session in both of which I changed the current working directory with "cd Desktop". Now I do this:

```
PS C:\Users\XXX\Desktop> (Get-PEB -Id (ps powershell).Id).ProcessParameters.CurrentDirectory
C:\Users\XXX\

PS C:\Users\XXX\Desktop> (Get-PEB -Id (ps cmd).Id).ProcessParameters.CurrentDirectory
C:\Users\XXX\Desktop\
```

As you can see, the output is correct for Cmd, but wrong for Powershell. Is this a known problem?

**Update:** SysInternals Process Explorer shows the same discrepancy, so at least the two of them behave in the same way - but still unexpectedly.

**Update 2:** In the command line help there is a little bug in an example:

```
 C:\PS>$NotepadPEB = Get-PEB -Id (ps notepad)
 C:\PS> $NotepadPEB.InInitializationOrderModuleList
```

You forgot `.Id`. So in the first line it sould be: `Get-PEB -Id (ps notepad).Id`.
I added a Get-PESymbols cmdlet to enable PDB symbols enumeration for PE files. I know it is almost only C# code, but I had problems with the enumeration callback in the `SymEnumSymbols` using PSReflect. The rest of the rules should be fulfilled. I decided to use the `_DBGHELP_PATH` variable to point to a specific dbghelp.dll - maybe you will have a better concept for that... 

Thanks!
In Line 241 of Get-LibSymbols.ps1 the call:
     [COFF.Functions]::UnDecorateSymbolName( ....
should be (?):
     [COFF2.Functions]::UnDecorateSymbolName( ....

(use COFF2 instead of COFF).

Btw, thanks for making the project available.

Hi! I execute command with Administrator privileges, thanks for all!
My PowerShell Version : 5.0.10586.122 in Windows 10 64bits

**PS C:\WINDOWS\system32> $AllPEBs = Get-Process | Get-PEB
Get-PEB : Unable to obtain a handle for PID 10844. You will likely need to run this script elevated.
At line:1 char:26
- $AllPEBs = Get-Process | Get-PEB
-                          ~~~~~~~
  - CategoryInfo          : NotSpecified: (:) [Write-Error], WriteErrorException
  - FullyQualifiedErrorId : Microsoft.PowerShell.Commands.WriteErrorException,Get-PEB**
