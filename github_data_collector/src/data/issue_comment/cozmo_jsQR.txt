It is very misterious, bt...

![image](https://user-images.githubusercontent.com/2232852/70446711-92569180-1aae-11ea-88b7-b4d4adb4e418.png)

My guess its GC. Any idea how to avoid this?

I found it in Chrome 78. It works in Firefox and Safari.
Return the extracted BitMatrix `extracted.matrix` as additional property `matrix` of the result.
(This allows the caller to reproduce an exact copy of the read QR code, e.g. together with the decoded data.)
See #123 
Fixes #118.

`shouldInvert` should also be true if `options.inversionAttempts` equals "onlyInvert".
add code in iframe with allow
```
<iframe allow="accelerometer *; ambient-light-sensor *; autoplay *; camera *; encrypted-media *; fullscreen *; geolocation *; gyroscope *; magnetometer *; microphone *; midi *; payment *; picture-in-picture *; speaker *; usb *; vibrate *; vr *">
```
on pc it's ok but ipad can't detect camera
Pls help
thanks!
With my iPhone I accessed the demo app at https://cozmo.github.io/jsQR/ and successfully scanned a QR code. I then cloned the demo html page, the javascript source jsQR.js and placed them on my IIS site. I changed the source reference in the html page to the correct script source location /Scripts/jsQR.js. Now, when I accessed the demo page on my web server using the same iPhone, the page is loaded with the message to allow camera access but the camera is not open!

I have verified that the page and script loaded correctly. What am I missing?
Thanks!
First of all, congratulations on the scanner and thanks for sharing.

I have created a QR code with colors and the reader does not read it. Can it be configured in any way?

If I try to read the code with the iPhone camera, it does recognize it.

I have done the test at https://www.qrcode-monkey.com. If I create a code in black on a white background, the scanner reads it. If I take, for example, yellow over red background, the scanner is not able to read it.

Thanks!
I try to read DataMatrix but this component doesn't work. Do you have any ideas? Is this development planned?
I'm having a problem with qr-code readings from videostreams.
On your online demo I'm getting the same results as my own implementation.

When I hold a QR-code in front of the camera it doesn't always got a fix to recognize it.
Files are attached.
![oZi8aAM](https://user-images.githubusercontent.com/12353271/67847483-38ec6180-fb03-11e9-9325-2ad733b9f26d.png)

When I move it a little bit, somethimes it recognize it. But it seems very unreliable.
Can I try some things to improve it?
jsQR can't find Qr on this picture, 
![small_screenshot](https://user-images.githubusercontent.com/1270800/66621007-6e9eca00-eb97-11e9-8ee7-2418cb4ea566.jpg)
but when I open this picture above and take screenshot of it on the Macbook - it can find qr and successfully decode it! So this is screenshot of screenshot:
<img width="355" alt="scrneshot_of_screenshot" src="https://user-images.githubusercontent.com/1270800/66621066-a0179580-eb97-11e9-9897-eee59ec357e2.png">
This is how I used the jsQR library:
```typescript
  const handleFileInput = (e: any) => {
    const reader = new FileReader();
    // @ts-ignore
    const canvasCtx = canvasRef.current.getContext('2d');

    reader.onload = readerEvent => {
      setStatusMessage('');
      setStatusMessage('opening file...');
      // eslint-disable-next-line no-undef
      const image = new Image();

      image.onload = () => {
        // @ts-ignore
        canvasRef.current.width = image.width;
        // @ts-ignore
        canvasRef.current.height = image.height;
        canvasCtx.drawImage(image, 0, 0);
        const imageData = canvasCtx.getImageData(
          0,
          0,
          image.width,
          image.height
        );

        const jsqrResponse = jsQR(imageData.data, image.width, image.height);
        if (jsqrResponse) {
          const potentialQrKey = jsqrResponse.data; // find QR!
          tryToRestoreWallet(potentialQrKey);
        } else {
          setStatusMessage('');
          setErrorMessage("Couldn't find  QR-key on the image");
          console.log('QR error!');
        }
      };
      // @ts-ignore
      image.src = readerEvent.target.result;
    };

    reader.readAsDataURL(e.target.files[0]);
  };
```
is there any way to fix it? thanks!


Hi. Thanks for this amazing lib. It's an integral part of a project I'm rolling out, and just on the verge of scaling in production I've noticed the first instance of a QR code not being scanned at all. We use H level (best) precision to generate the QR codes, and the data encoded is a UUID in a text field. In this failing example, the text was `71a08408-7170-4f56-81e7-10b0a4f43444`.

I thought it was odd, because the native iPhone camera is still able to recognise the QR code. What gets stranger is if I drop the precision level to Q (high) or below, it can be scanned by this lib.

H level (best) precision - fail
![best-quality-fail](https://user-images.githubusercontent.com/2844580/61881335-5e5b4500-aeee-11e9-8116-a9421239a1ed.png)

Q level (high) precision - ok
![high-quality-ok](https://user-images.githubusercontent.com/2844580/61881341-63b88f80-aeee-11e9-82e2-ef9e2a592723.png)

It seems to work ok with ZXing.

I'm now concerned as I'm about to be scaling out to 100's of generated QR codes to end users, an 
 unknown percentage of them will be unable to be scanned by this library. I know there's been a few examples already reported, but they don't seem to have made any progress which is worrying.

I would like to help get to the bottom of this, but I'm not sure I currently have the technical know how in this particular field without levelling up. What are my options? Does anyone have any idea? Thanks.