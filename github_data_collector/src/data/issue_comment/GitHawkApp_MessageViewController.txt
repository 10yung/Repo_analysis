Now that we have updated the library to Swift 4.2, we should push a new version to CocoaPods.
Hi,
I couldn't able to find any api to Enable or Disable the Send/Right button. Please let me know if I am missing anything.
<img width="412" alt="51784462-03c77300-216f-11e9-840d-01544822d0d8" src="https://user-images.githubusercontent.com/17508663/51788651-8cadd100-21a6-11e9-8451-660fc57aa5b9.png">

Button get push down as we can see in the image, the button is not centre align with with the textview's  last line
Removing the font descender in buttonYStarter fix the issue. 
I am using this MessageViewController, with IGListKit, and I notice something when the viewController appears there is some kind of animation. is this just me ??
If there are many suggestions in autocomplete when in landscape mode the view can grow to high getting cut off by the navigation bar or another view above it.

<sub>Sent with <a href="http://githawk.com">GitHawk</a></sub>
It looks like this doesn't naturally trigger the `UITextViewDelegate.textViewDidChange()` method. Should we forward changed text to our custom text view listeners if the text is manually set?

From GitHawkApp/GitHawk#2158
## Feature Request
Scroll to the bottom of the scroll view when the keyboard is revealed (e.g. the Messages app)

## Implementation
Add an instance variable to `MessageViewController` - `scrollsToBottomOnKeyboardReveal`, check if value is set inside `keyboardWillShow` block, and scroll to bottom of scroll view if true. Default is set to true.
## Current behavior
The scroll view will jump to the middle when a keystroke is received by the keyboard no matter where the scroll view currently is.

## Fix
Remove calls to `setNeedsLayout` to avoid the scroll view from jumping
Using latest [master branch](https://github.com/GitHawkApp/MessageViewController/commit/97e198895e309bda0b4ea30a5ac50a16fe6ef8ac)

The button(s) of the messageView have their own arbitrary vertical alignment. Is there any way to make them match the `messageView.textViewInset` you set?

Looks like you can only set the right/left insets of buttons using `messageView.setButton(inset: CGFloat, position: MessageView.ButtonPosition)`

Could it be laying out on its own margins because of `sizeToFit()`?

```
internal func buttonLayoutDidChange(button: UIButton) {
        button.sizeToFit()
        setNeedsLayout()
}
```


![img_5416](https://user-images.githubusercontent.com/34896855/45516076-df8a6d00-b75e-11e8-96fe-9cde0b60a74a.PNG)

![img_5413](https://user-images.githubusercontent.com/34896855/45516084-e31df400-b75e-11e8-9d37-7e468c8f1ce6.PNG)

Repost of #70 

Is there any way to make MessageViewController respect the tabBar (if you have one?)

The only way I found for it to adjust for the tab bar is with 
`tabBarController?.tabBar.isHidden = true`

However if you use something like (animatable) 
`tabBarController?.tabBar.frame.origin = CGPoint(x: 0, y: frameHeight - tabBarHeight)`

The `messageView` will still show the extra 49pts of tabbarheight

As shown in the below photo, when I used
`tabBarController?.tabBar.frame.origin = CGPoint(x: 0, y: frameHeight - tabBarHeight)`

The message view is 

135pt (34pt safe area + 49pt tab bar + [52pt messageView.textInputView])
when it should be
86pt (34pt safe area + [52pt messageView.textInputView])


To make it work temporarily I edited `MessageViewController` (which I know I shouldn't!)

```
internal var safeAreaAdditionalHeight: CGFloat {
        switch keyboardState {
            //EDITED
        case .hiding, .resigned: return view.util_safeAreaInsets.bottom - (49) //EDITED TO ACCOUNT FOR TABBAR
        case .showing, .visible: return 0
        }
    }
```


![img_6de3d86531b8-1](https://user-images.githubusercontent.com/20218698/45502266-6710b580-b738-11e8-98f3-901654e7cf93.jpeg)