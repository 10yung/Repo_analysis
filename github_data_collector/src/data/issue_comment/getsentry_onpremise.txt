With #343, we added the `--parallel` flag which only got introduced in `docker-compose` `1.23.0` (source https://medium.com/schkn/parallelize-your-docker-compose-build-8ac653e3e596 as Docker docs themselves don't really mention these) so bumping the minimum required version.

Fixes #351.
A number of images fail to download when running the install script (using a fresh clone of this repo, as of dffd597 on Jan 14):

- snuba-cleanup-onpremise-local:latest
- sentry-onpremise-local:latest
- symbolicator-cleanup-onpremise-local:latest

All of these fail with `404 Client Error: Not Found ("pull access denied for XXXXXXXXXXXX, repository does not exist or may require 'docker login'")`

I did see some mention of a similar problem in #278, but the solutions listed there did not fix this iteration of the issue. (Also, I am not doing an upgrade, this is a fresh installation. Also, also, I am using dffd597 which includes the fix for that issue.)

Here is my log:

```
Checking minimum requirements...
Removing network onpremise_default
Network onpremise_default not found.
Removing network sentryonpremise_default
Network sentryonpremise_default not found.

Creating volumes for persistent storage...
Created sentry-data.
Created sentry-postgres.
Created sentry-redis.
Created sentry-zookeeper.
Created sentry-kafka.
Created sentry-clickhouse.
Created sentry-symbolicator.

Creating sentry/sentry.conf.py...
sentry/config.yml already exists, skipped creation.
Creating sentry/requirements.txt...

Generating secret key...
Secret key written to sentry/config.yml

Building and tagging Docker images...

Pulling redis (redis:5.0-alpine)...
5.0-alpine: Pulling from library/redis
Digest: sha256:a4e0b7bff7ecec0dc0be95d185d6c99323a92a51065d9563a5bafbc1cf6b3497
Status: Downloaded newer image for redis:5.0-alpine
Pulling postgres (postgres:9.6)...
9.6: Pulling from library/postgres
Digest: sha256:b5f6e8a1369ec3ce48c8419c65dffa083c3eb4a507cb8c75b50bdf3480588a07
Status: Downloaded newer image for postgres:9.6
Pulling smtp (tianon/exim4:latest)...
latest: Pulling from tianon/exim4
Digest: sha256:b23482ddb3584af9f14fc207ae167181ee4d2bb44ae328250219e277d4fcc452
Status: Downloaded newer image for tianon/exim4:latest
Pulling zookeeper (confluentinc/cp-zookeeper:5.1.2)...
5.1.2: Pulling from confluentinc/cp-zookeeper
Digest: sha256:c63871c17b038e1685bf708e7bc2d32ae518f40137c86a6148fbdcdd1c78fe83
Status: Downloaded newer image for confluentinc/cp-zookeeper:5.1.2
Pulling kafka (confluentinc/cp-kafka:5.1.2)...
5.1.2: Pulling from confluentinc/cp-kafka
Digest: sha256:c5ff41b494329e9dea0f2d2d942a391a8d5968f597e9ba4a10846f511ba85220
Status: Downloaded newer image for confluentinc/cp-kafka:5.1.2
Pulling memcached (memcached:1.5-alpine)...
1.5-alpine: Pulling from library/memcached
Digest: sha256:3cfb2eee0b618722a62f4cc907fa0ede848efa87d773bb9384044f490926e7ce
Status: Downloaded newer image for memcached:1.5-alpine
Pulling symbolicator (getsentry/symbolicator:latest)...
latest: Pulling from getsentry/symbolicator
Digest: sha256:a60e8262766cd94a1c0d5463c3e02df57271ee5bf1c94e1853c5b6f7254fa98e
Status: Downloaded newer image for getsentry/symbolicator:latest
Pulling clickhouse (yandex/clickhouse-server:19.4)...
19.4: Pulling from yandex/clickhouse-server
Digest: sha256:a83b98bc73ee7ba1b7e5dedcff84990f8d903716cb0ea352fddb8ec51678713d
Status: Downloaded newer image for yandex/clickhouse-server:19.4
Pulling snuba-api (getsentry/snuba:latest)...
latest: Pulling from getsentry/snuba
Digest: sha256:ab8177e8be8bc54e78cfb5d9957684e784d16af53f13e9f6f2f139578035c033
Status: Downloaded newer image for getsentry/snuba:latest
Pulling snuba-replacer (getsentry/snuba:latest)...
latest: Pulling from getsentry/snuba
Digest: sha256:ab8177e8be8bc54e78cfb5d9957684e784d16af53f13e9f6f2f139578035c033
Status: Image is up to date for getsentry/snuba:latest
Pulling snuba-cleanup (snuba-cleanup-onpremise-local:latest)...
404 Client Error: Not Found ("pull access denied for snuba-cleanup-onpremise-local, repository does not exist or may require 'docker login'")
Pulling snuba-consumer (getsentry/snuba:latest)...
latest: Pulling from getsentry/snuba
Digest: sha256:ab8177e8be8bc54e78cfb5d9957684e784d16af53f13e9f6f2f139578035c033
Status: Image is up to date for getsentry/snuba:latest
Pulling post-process-forwarder (sentry-onpremise-local:latest)...
404 Client Error: Not Found ("pull access denied for sentry-onpremise-local, repository does not exist or may require 'docker login'")
Pulling worker (sentry-onpremise-local:latest)...
404 Client Error: Not Found ("pull access denied for sentry-onpremise-local, repository does not exist or may require 'docker login'")
Pulling cron (sentry-onpremise-local:latest)...
404 Client Error: Not Found ("pull access denied for sentry-onpremise-local, repository does not exist or may require 'docker login'")
Pulling sentry-cleanup (sentry-cleanup-onpremise-local:latest)...
404 Client Error: Not Found ("pull access denied for sentry-cleanup-onpremise-local, repository does not exist or may require 'docker login'")
Pulling web (sentry-onpremise-local:latest)...
404 Client Error: Not Found ("pull access denied for sentry-onpremise-local, repository does not exist or may require 'docker login'")
Pulling symbolicator-cleanup (symbolicator-cleanup-onpremise-local:latest)...
404 Client Error: Not Found ("pull access denied for symbolicator-cleanup-onpremise-local, repository does not exist or may require 'docker login'")
latest: Pulling from getsentry/sentry
8d691f585fa8: Pulling fs layer
3fd6980f9df6: Pulling fs layer
c4f890363b98: Pulling fs layer
b8cfb9853b0a: Pulling fs layer
ad50c051941d: Pulling fs layer
d5f911626281: Pulling fs layer
85598e244c1f: Pulling fs layer
ce6ec8873cec: Pulling fs layer
8a1f8f6f2eaa: Pulling fs layer
08cad7172a8d: Pulling fs layer
5c733cc21c91: Pulling fs layer
b8cfb9853b0a: Waiting
ad50c051941d: Waiting
d5f911626281: Waiting
85598e244c1f: Waiting
ce6ec8873cec: Waiting
8a1f8f6f2eaa: Waiting
08cad7172a8d: Waiting
5c733cc21c91: Waiting
3fd6980f9df6: Verifying Checksum
3fd6980f9df6: Download complete
c4f890363b98: Verifying Checksum
c4f890363b98: Download complete
8d691f585fa8: Verifying Checksum
8d691f585fa8: Download complete
ad50c051941d: Verifying Checksum
ad50c051941d: Download complete
d5f911626281: Verifying Checksum
d5f911626281: Download complete
b8cfb9853b0a: Verifying Checksum
b8cfb9853b0a: Download complete
8a1f8f6f2eaa: Verifying Checksum
8a1f8f6f2eaa: Download complete
85598e244c1f: Verifying Checksum
85598e244c1f: Download complete
08cad7172a8d: Verifying Checksum
08cad7172a8d: Download complete
5c733cc21c91: Verifying Checksum
5c733cc21c91: Download complete
8d691f585fa8: Pull complete
3fd6980f9df6: Pull complete
c4f890363b98: Pull complete
b8cfb9853b0a: Pull complete
ad50c051941d: Pull complete
d5f911626281: Pull complete
85598e244c1f: Pull complete
ce6ec8873cec: Verifying Checksum
ce6ec8873cec: Download complete
ce6ec8873cec: Pull complete
8a1f8f6f2eaa: Pull complete
08cad7172a8d: Pull complete
5c733cc21c91: Pull complete
Digest: sha256:f79263c7120df76329c5f12fdab4b45b4c86ca482088ecbc5b6357ade2eeacaf
Status: Downloaded newer image for getsentry/sentry:latest
Building web
Step 1/8 : ARG SENTRY_IMAGE
Step 2/8 : FROM ${SENTRY_IMAGE:-getsentry/sentry:latest}
 ---> 333bef514bd5
Step 3/8 : WORKDIR /usr/src/sentry
Removing intermediate container a1fa3b7161af
 ---> 45ba25037e52
Step 4/8 : ENV PYTHONPATH /usr/src/sentry
 ---> Running in b1955653738b
Removing intermediate container b1955653738b
 ---> e91cdd755596
Step 5/8 : COPY . /usr/src/sentry
 ---> 6384282b4c22
Step 6/8 : RUN if [ -s requirements.txt ]; then pip install -r requirements.txt; fi
 ---> Running in 867e5ef40498
DEPRECATION: Python 2.7 will reach the end of its life on January 1st, 2020. Please upgrade your Python as Python 2.7 won't be maintained after that date. A future version of pip will drop support for Python 2.7. More details about Python 2 support in pip, can be found at https://pip.pypa.io/en/latest/development/release-process/#python-2-support
Removing intermediate container 867e5ef40498
 ---> 1f5dc2109676
Step 7/8 : RUN if [ -s setup.py ]; then pip install -e .; fi
 ---> Running in a15ebaa7ddb2
Removing intermediate container a15ebaa7ddb2
 ---> bf5a4f0f279f
Step 8/8 : RUN if [ -s sentry.conf.py ]; then cp sentry.conf.py $SENTRY_CONF/; fi 	&& if [ -s config.yml ]; then cp config.yml $SENTRY_CONF/; fi
 ---> Running in cb9955096839
Removing intermediate container cb9955096839
 ---> 9f7e41b29ce1

Successfully built 9f7e41b29ce1
Successfully tagged sentry-onpremise-local:latest
Build or rebuild services.

Services are built once and then tagged as `project_service`,
e.g. `composetest_db`. If you change a service's `Dockerfile` or the
contents of its build directory, you can run `docker-compose build` to rebuild it.

Usage: build [options] [--build-arg key=val...] [SERVICE...]

Options:
    --force-rm              Always remove intermediate containers.
    --no-cache              Do not use cache when building the image.
    --pull                  Always attempt to pull a newer version of the image.
    -m, --memory MEM        Sets memory limit for the build container.
    --build-arg key=val     Set build-time variables for one service.
Cleaning up...
```
## Important Details

How are you running Sentry?

* [x] On-Premise docker [Version 10]
* [ ] Saas (sentry.io)
* [ ] Other [briefly describe your environment]

## Description

Plugins like [sentry-auth-oidc](https://github.com/siemens/sentry-auth-oidc) don't seem to work anymore with sentry 10. Is it still possible to install 3rd party plugins?

## Steps to Reproduce

1. Install sentry 10
2. Add sentry auth oidc
3. Notice 500, when trying to login

Good items to include here include:

> sh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.117 Safari/537.36"
web_1                     | Traceback (most recent call last):
web_1                     |   File "/usr/local/lib/python2.7/site-packages/django/core/handlers/exception.py", line 42, in inner
web_1                     |     response = get_response(request)
web_1                     |   File "/usr/local/lib/python2.7/site-packages/django/core/handlers/base.py", line 249, in _legacy_get_response
web_1                     |     response = self._get_response(request)
web_1                     |   File "/usr/local/lib/python2.7/site-packages/django/core/handlers/base.py", line 187, in _get_response
web_1                     |     response = self.process_exception_by_middleware(e, request)
web_1                     |   File "/usr/local/lib/python2.7/site-packages/django/core/handlers/base.py", line 185, in _get_response
web_1                     |     response = wrapped_callback(request, *callback_args, **callback_kwargs)
web_1                     |   File "/usr/local/lib/python2.7/site-packages/django/views/generic/base.py", line 68, in view
web_1                     |     return self.dispatch(request, *args, **kwargs)
web_1                     |   File "/usr/local/lib/python2.7/site-packages/django/views/decorators/csrf.py", line 58, in wrapped_view
web_1                     |     return view_func(*args, **kwargs)
web_1                     |   File "/usr/local/lib/python2.7/site-packages/sentry/web/frontend/base.py", line 227, in dispatch
web_1                     |     return self.handle(request, *args, **kwargs)
web_1                     |   File "/usr/local/lib/python2.7/site-packages/django/views/decorators/cache.py", line 57, in _wrapped_view_func
web_1                     |     response = view_func(request, *args, **kwargs)
web_1                     |   File "/usr/local/lib/python2.7/site-packages/django/utils/decorators.py", line 185, in inner
web_1                     |     return func(*args, **kwargs)
web_1                     |   File "/usr/local/lib/python2.7/site-packages/sentry/web/frontend/auth_organization_login.py", line 72, in handle
web_1                     |     response = self.handle_sso(request, organization, auth_provider)
web_1                     |   File "/usr/local/lib/python2.7/site-packages/sentry/web/frontend/auth_organization_login.py", line 35, in handle_sso
web_1                     |     provider = auth_provider.get_provider()
web_1                     |   File "/usr/local/lib/python2.7/site-packages/sentry/models/authprovider.py", line 51, in get_provider
web_1                     |     return manager.get(self.provider, **self.config)
web_1                     |   File "/usr/local/lib/python2.7/site-packages/sentry/auth/manager.py", line 23, in get
web_1                     |     raise ProviderNotRegistered(key)
web_1                     | ProviderNotRegistered: oidc
web_1                     | 15:24:15 [ERROR] django.request: Internal Server Error: /auth/login/org/ (status_code=500 request=<WSGIRequest: GET u'/auth/login/org/'>)
web_1                     | 172.21.0.21 - - [13/Jan/2020:15:24:13 +0000] "GET /auth/login/org/ HTTP/1.0" 500 5321 "https://someurl/auth/login/org" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.117 Safari/537.36"

### What you expected to happen

Login should work

### Possible Solution

Describe how to create plugins for sentry >= 10
I had problem with this migration before, it was fixed yesterday: https://github.com/getsentry/onpremise/issues/322, but there is a new one now. Log:
```python
Applying sentry.0024_auto_20191230_2052.../usr/local/lib/python2.7/site-packages/django/db/models/fields/__init__.py:1430: RuntimeWarning: DateTimeField Event.datetime received a naive datetime (2019-10-12 14:23:18.998532) while time zone support is active.
  RuntimeWarning)
/usr/local/lib/python2.7/site-packages/django/db/models/fields/__init__.py:1430: RuntimeWarning: DateTimeField Event.datetime received a naive datetime (2020-01-10 14:23:18.998532) while time zone support is active.
  RuntimeWarning)
Events to process: 800

Traceback (most recent call last):
  File "/usr/local/bin/sentry", line 8, in <module>
    sys.exit(main())
  File "/usr/local/lib/python2.7/site-packages/sentry/runner/__init__.py", line 164, in main
    cli(prog_name=get_prog(), obj={}, max_content_width=100)
  File "/usr/local/lib/python2.7/site-packages/click/core.py", line 722, in __call__
    return self.main(*args, **kwargs)
  File "/usr/local/lib/python2.7/site-packages/click/core.py", line 697, in main
    rv = self.invoke(ctx)
  File "/usr/local/lib/python2.7/site-packages/click/core.py", line 1066, in invoke
    return _process_result(sub_ctx.command.invoke(sub_ctx))
  File "/usr/local/lib/python2.7/site-packages/click/core.py", line 895, in invoke
    return ctx.invoke(self.callback, **ctx.params)
  File "/usr/local/lib/python2.7/site-packages/click/core.py", line 535, in invoke
    return callback(*args, **kwargs)
  File "/usr/local/lib/python2.7/site-packages/click/decorators.py", line 17, in new_func
    return f(get_current_context(), *args, **kwargs)
  File "/usr/local/lib/python2.7/site-packages/sentry/runner/decorators.py", line 30, in inner
    return ctx.invoke(f, *args, **kwargs)
  File "/usr/local/lib/python2.7/site-packages/click/core.py", line 535, in invoke
    return callback(*args, **kwargs)
  File "/usr/local/lib/python2.7/site-packages/click/decorators.py", line 17, in new_func
    return f(get_current_context(), *args, **kwargs)
  File "/usr/local/lib/python2.7/site-packages/sentry/runner/commands/upgrade.py", line 168, in upgrade
    _upgrade(not noinput, traceback, verbosity, not no_repair)
  File "/usr/local/lib/python2.7/site-packages/sentry/runner/commands/upgrade.py", line 130, in _upgrade
    ignore_ghost_migrations=True,
  File "/usr/local/lib/python2.7/site-packages/django/core/management/__init__.py", line 130, in call_command
    return command.execute(*args, **defaults)
  File "/usr/local/lib/python2.7/site-packages/django/core/management/base.py", line 345, in execute
    output = self.handle(*args, **options)
  File "/usr/local/lib/python2.7/site-packages/django/core/management/commands/migrate.py", line 204, in handle
    fake_initial=fake_initial,
  File "/usr/local/lib/python2.7/site-packages/django/db/migrations/executor.py", line 115, in migrate
    state = self._migrate_all_forwards(state, plan, full_plan, fake=fake, fake_initial=fake_initial)
  File "/usr/local/lib/python2.7/site-packages/django/db/migrations/executor.py", line 145, in _migrate_all_forwards
    state = self.apply_migration(state, migration, fake=fake, fake_initial=fake_initial)
  File "/usr/local/lib/python2.7/site-packages/sentry/new_migrations/monkey/executor.py", line 26, in apply_migration
    state, migration, fake=fake, fake_initial=fake_initial
  File "/usr/local/lib/python2.7/site-packages/django/db/migrations/executor.py", line 244, in apply_migration
    state = migration.apply(state, schema_editor)
  File "/usr/local/lib/python2.7/site-packages/django/db/migrations/migration.py", line 129, in apply
    operation.database_forwards(self.app_label, schema_editor, old_state, project_state)
  File "/usr/local/lib/python2.7/site-packages/django/db/migrations/operations/special.py", line 189, in database_forwards
    self.code(from_state.apps, schema_editor)
  File "/usr/local/lib/python2.7/site-packages/sentry/migrations/0024_auto_20191230_2052.py", line 71, in backfill_eventstream
    if event.project is None or event.group is None:
  File "/usr/local/lib/python2.7/site-packages/sentry/models/event.py", line 76, in group
    self._group_cache = Group.objects.get(id=self.group_id)
  File "/usr/local/lib/python2.7/site-packages/django/db/models/manager.py", line 85, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "/usr/local/lib/python2.7/site-packages/django/db/models/query.py", line 389, in get
    (self.model._meta.object_name, num)
sentry.models.group.MultipleObjectsReturned: get() returned more than one Group -- it returned 2!
```
and
```
14:23:20 [WARNING] sentry.eventstream.kafka.backend: Could not publish message (error: KafkaError{code=MSG_SIZE_TOO_LARGE,val=10,str="Broker: Message size too large"}): <cimpl.Message object at 0x7fb7e2947950>
```
(repeated 20 times)

After fix I was able to skip this migration with `SENTRY_SKIP_EVENTS_BACKFILL_FOR_10=1`, but I would want to keep my events.

Side note: placing `SENTRY_SKIP_EVENTS_BACKFILL_FOR_10=1` into `.env` did not work, I had to put it into docker-compose file, is is a bug?

We need the `GITHUB_APP_ID` and `GITHUB_API_SECRET` configs in `sentry.conf.py` for GitHub auth whereas we need the `github-app.*` values in `config.yml` for the GitHub integration. The ones in `sentry.conf.py` are redundant but since `config.yml` is loaded _after_ `sentry.conf.py` I added this `__get__` hack so the users only need to set the values in one place.
Code (master branch) downloaded today (2010-01-08).

Running:

```
# docker-compose down
# ./install.sh 
```

Fails with:

```
fixing permissions on existing directory /var/lib/postgresql/9.6/data ... ok
creating subdirectories ... ok
selecting default max_connections ... 100
selecting default shared_buffers ... 128MB
selecting default timezone ... Etc/UTC
selecting dynamic shared memory implementation ... posix
creating configuration files ... ok
running bootstrap script ... ok
performing post-bootstrap initialization ... ok
syncing data to disk ... ok

Success. You can now start the database server using:

    pg_ctl -D /var/lib/postgresql/9.6/data -l logfile start


WARNING: enabling "trust" authentication for local connections
You can change this by editing pg_hba.conf or using the option -A, or
--auth-local and --auth-host, the next time you run initdb.

*failure*
Consult the last few lines of "pg_upgrade_server.log" for
the probable cause of the failure.

There seems to be a postmaster servicing the old cluster.
Please shutdown that postmaster and try again.
Failure, exiting
Cleaning up...
```

Not sure how to proceed.
Add support for an environment variable such as `DOCKER_IMAGE_REPOSITORY` that adds the repository as a prefix to all images if set. This would allow running the install script behind a firewall (that does have access to a private repository which proxies the request to the Docker Hub) without having to manually edit multiple files.
it looks like the example deployment promotes building a docker image containing a config file with potential secret (passwords) in it. This is considered an antipattern and should be avoided. It would be better if it was possible to specify all settings using environment variables or Docker's recommended "/run/secrets" fs dir so that secrets are kept outside the docker image.
I was looking a way to connect RABBITMQ and I found this PR thanks to Google:
https://github.com/getsentry/docker-sentry/pull/60/files

Is not however included in sentry docker docs. Who is able to merge changes in:
https://github.com/docker-library/docs/tree/master/sentry

Should I prepare a PR to this repo?

PS: There is exisitng getsentry/docker-sentry#110 which is I guess connected...