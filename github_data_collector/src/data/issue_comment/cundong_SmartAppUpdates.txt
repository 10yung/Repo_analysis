在6.0以上android手机上，点击start报错。
解决方案：
1、动态申请sd权限、安装app权限
2、使用FileProvider
多渠道有没有好的方案
请问iOS有类似的差量更新方案吗？谢谢，急。
AndroidRuntime: java.lang.UnsatisfiedLinkError:
 dlopen failed: cannot locate symbol "__fwrite_chk" referenced by "/data/app/com
.android.sign.appstore-1/lib/arm64/libApkPatchLibrary.so "... 


如上，使用您的https://github.com/cundong/SmartAppUpdates
github上的库，编译成64位so，。mk如下，

include $(CLEAR_VARS)

LOCAL_MODULE     := libApkPatchLibrary
LOCAL_SRC_FILES  := com_cundong_utils_PatchUtils.c

APP_PLATFORM := android-16
LOCAL_LDLIBS     := -lz -llog

include $(BUILD_SHARED_LIBRARY)

但是使用的时候会直接报错，log是最上方那个，求解答是否有碰到过
![image](https://user-images.githubusercontent.com/17473495/30551393-e12f13f2-9ccc-11e7-95cb-c5ebf50bc5be.png)
bu不知道您有没有遇到过在android系统上这个地方很定=NULL,谢谢
不知道有没有react native的android apk的组件
这个差分包的前提是 混淆文件不改动吗？
如果混淆文件改动了，那么混淆出来的Mapping 文件也会与旧的apk 文件很大不同，这个也可以使用com.cundong.utils.DiffUtils 来找到差分包吗？
原理是什么，可否解释下，谢谢！
Mac 生成diff包出现这个问题，怎么解决呢？

未能打开文稿“diff”。文本编码“Unicode (UTF-8)”不适用。
D:/Users/""/AppData/Local/Android/sdk/ndk-bundle/build//../toolchains/arm-linux-androideabi-4.9/prebuilt/windows-x86_64/lib/gcc/arm-linux-androideabi/4.9.x/../../../../arm-linux-androideabi/bin\ld: error: D:\""\workspace-as\mvp\MyNewUpdatelib\app\build\intermediates\ndk\debug\obj/local/armeabi-v7a/objs/ApkPatchLibrary/D_\""\workspace-as\mvp\MyNewUpdatelib\app\src\main\jni\bzip2\blocksort.o: multiple definition of 'BZ2_blockSort'
D:/Users/""/AppData/Local/Android/sdk/ndk-bundle/build//../toolchains/arm-linux-androideabi-4.9/prebuilt/windows-x86_64/lib/gcc/arm-linux-androideabi/4.9.x/../../../../arm-linux-androideabi/bin\ld: D:\""\workspace-as\mvp\MyNewUpdatelib\app\build\intermediates\ndk\debug\obj/local/armeabi-v7a/objs/ApkPatchLibrary/D_\""\workspace-as\mvp\MyNewUpdatelib\app\src\main\jni\com_cundong_utils_PatchUtils.o: previous definition here
Exception in thread "main" java.lang.UnsatisfiedLinkError: no ApkPatchLibraryServer in java.library.path
