
hi,listview cannot scrolling in scrollview. Any solution?
When I press the button to expand the view, I simply want the view to expand without me being dragged down.

How do I disable the focus down when I expand?
hi, how can i change some attribute of each list item ? for example i want to change background in every odd list item. 

my expandable_button is a image arrow, when i click it , i want to change the it and set another arrow.
like:  <   to   >,
or : ^   to  >   , etc
how can i  do ?

we use it like this below:
list.setItemActionListener(new ActionSlideExpandableListView.OnActionClickListener() {
             .......
}, R.id.xxx, R.id.xxxxx);
The problem is : when i have many click ids, and  the click ids  are added Dynamic。
how can i do ?

My mind is not clear, can you help me to summarize it for me ？Thank you for your help  :)  .

i have try setOnItemClickListener method for doing something when user click listview item like this:

 playListView.setOnItemClickListener(new AdapterView.OnItemClickListener() {
            @Override
            public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
                onStartVideo(position);
            }
        });

but it did not work, why? have some else method to realize this? setItemActionListener seems to work only when click action button.

thands to your help!

This improves the scroll animation which occurs after an item has been expanded a lot, imho. Not only it solves #90, but also manage the special case in which the item is taller than the container ListView. In particular, after the item expands, it makes some computation and then:
1. If the just expanded item is already fully visible, nothing happens.
2. If it is bigger than the container ListView, it is scrolled so its top bound is on top of the list.
3. If its top bound is out if the container ListView, it is scrolled so it's on top of the list.
4. If its bottom bound is out if the container ListView, it is scrolled so it's at bottom of the list.

I made this edit particularly because of case 2: I'm using items that, when expanded, can be really tall. Not sure if other cases were already covered, but I'm quite sure I experienced issues also when items were smaller.

I tested it on the most recent API and on API 8 and 10. It works as expected in all cases. I made the PR on top of your last commit and in a separate brach, so you can merge with no problems.

Further improvement to make it _perfect_ could be starting the scroll animation together with the expand animation (i.e. in the `onAnimationStart` callback instead of `onAnimationEnd`). Unfortunately this requires not only to get the end height in advance (from the `ExpandCollapseAnimation` instance for example), but also to take account of the old expanded item which, in the meantime, could be collapsing. I'll work on it if I'll have some spare time, it's not critical for me atm.

It works well in my activity views.But It have multiple expanded items in my fragment view.That's my code:
 mListView = (ActionSlideExpandableListView) view.findViewById(R.id.file_path_list);
footerView = activity.getLayoutInflater().inflate(R.layout.footer_load_more, null);
mAdapter = new FileBrowserCursorAdapter(activity, list,mCurrentPath);
mListView.setEmptyView(mEmptyView);
mListView.addFooterView(footerView);
footerView.setVisibility(View.GONE);
 mListView.setAdapter(new SlideExpandableListAdapter(mAdapter, R.id.expandable_toggle_button, R.id.expandable));

mListView.setOnScrollListener(this);
 mListView.setOnItemClickListener(this);
