Now that messaging routes through `rlang::inform()`, the function name `cat_line()` is somewhat misleading. This is an internal matter, but it's something anyone developing in usethis might encounter.
So I recently learned that one can include a [DESCRIPTION file outside of packages](https://twitter.com/bradleyboehmke/status/1215703648384225281), it's something I perceive as good practice.

![image](https://user-images.githubusercontent.com/7833796/72242007-95cac480-35e8-11ea-9417-00ed19194fa5.png)

However, to the best of my knowledge, usethis does not currently support that.

```r
r$> usethis::use_description()                                                                                
Error: Path '/my/current/directory/' does not appear to be inside a project or package.
In addition: Warning message:
In path_file(base_path) : restarting interrupted promise evaluation
```

Would additional edit_* functions for configuration files be in scope for `usethis`?

I have in mind:

* `edit_odbc_ini()`

* `edit_bash_profile()`

* `edit_bashrc()`

* `edit_netrc()`

I'm happy to contribute the changes if they are.
Moving the test helpers `scoped_temporary_thing()` and friends to `R/` enables reuse of them by packages which build upon `usethis` to facilitate tests of these packages.
Because of their rather internal nature, they are *not* exported, which does not pose a problem for reuse by other since tests are allowed to use unexported functions.
closes #973

So that if you've accidentally made some changes in the wrong branch (but haven't committed them), you can switch to the correct branch without using the command line.
I am using the `usethis` package as a basis for [another package](https://www.github.com/aaronpeikert/repro) (it is btw a great and remarkably easy to extend `usethis`). However as I started to write tests that involve testing whether files are created etc., I had to copy the test helper from usethis [(tests/testthat/helper.R)](https://github.com/r-lib/usethis/blob/b2e894eb6d1d7f3312a783db3bb03a7cc309ba61/tests/testthat/helper.R) into my package. It would be great if you could export them as functions as they are really useful for extending `usethis`.


fixes #951 


`use_dev_package` can only handle dev packages installed from github remotes. 

A simple change to the `package_remote` function would make `use_dev_package` work with any remote type that has a `Remotes` field of the form `{RemoteType}::{RemoteUsername}/{RemoteRepo}`.

In particular, this would cover package dependencies from `GitLab` and `Bitbucket`.

Something like this:

```R
package_remote <- function(package) {
  desc <- desc::desc(package = package)
  remote_info <- desc$get(c("RemoteType", "RemoteUsername", "RemoteRepo"))
  
  supported_remotes <- c("github", "gitlab", "bitbucket")
  is_valid_remote <- 
    rlang::is_string(remote_info[["RemoteType"]]) && 
    remote_info[["RemoteType"]] %in% supported_remotes
  
  if (!is_valid_remote) {
    ui_stop("{ui_value(package)} was not installed from a supported remote type.")
  }
  
  glue::glue_data(as.list(remote_info), "{RemoteType}::{RemoteUsername}/{RemoteRepo}")
}
```

I don't really see a reason to restrict the remotes to github, gitlab and bitbucket though. I would just check that `RemoteType`, `RemoteUsername` and `RemoteRepo` are not `NA`.

The code above would add an explicit `github::` prefix to github remotes but this could obviously be avoided. IMO `usethis` is github-centric enough as it is, so I would leave the prefix for clarity.

This is related to #293 to the extent that it is about extending the functionalities beyond github, but this is a simpler (and probably more common) use case.

Functions that edit packages' README.Rmd, like `use_lifecycle_badge()` result in garbled Unicode characters.

For example, after running `use_lifecycle_badge()`, a pronunciation guide "/ˌfoʊ.naɪˈif/" in my package description became "/ËŒfoÊŠ.naÉªËˆif/".

fixes #950 

Tested it on a case where the remote branch was already deleted but the local branch was still present -> worked.

