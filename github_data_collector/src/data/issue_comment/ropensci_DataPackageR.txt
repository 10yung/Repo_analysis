
## Description
Update test-ignore.R to handle changes in usethis. 
Bump patch version to .8 
Update `codemeta.json`

## Related Issue
Fixes #73 

I just merged a PR from @jimhester in usethis, where we've finally managed to switch user messaging to `message()` instead of `cat()`, because we now have an attractive way to prevent such messages from being displayed in red.

Jim kindly ran revdeps and it shows you may need to tweak your tests. Jim even suggests a patch here:

https://github.com/r-lib/usethis/pull/928#issuecomment-553091603

A usethis release is probably a 4-6 weeks away.


Hi! We have started build documentation for all ropensci packages, see: https://ropensci.org/technotes/2019/06/07/ropensci-docs/

Your site currently fails to build due to a minor issue with the formatting of the NEWS.md file, see https://dev.ropensci.org/job/DataPackageR/lastBuild/console

Could you try to look into this? Let me know if you need any help!


## Update package_build documentation and source R code before compiling Rmds

### Commit `38779ea`:
It may happen that an .Rmd document runs successfully when run manually using `rmarkdown::render`, but that same document may throw an error when run internally using `package_build`. A note under the Details section of the `package_build` manual has been added to advise users to run `options(error = function(){ sink(); recover})` when seeking to debug such an error. This code enables examination of active function calls at the time of the error, with output printed to the console rather than `knitr`'s default sink. See section "22.5.3 RMarkdown" at https://adv-r.hadley.nz/debugging.html for more details.

### Commit `0e5ebd1`

Previously the functions in R folder were not sourced before compiling data-raw Rmd files using `package_build`.

This meant that if any data-raw Rmd files depended on these functions, they would either throw an error
or the package would have to be installed before running package_build, which is inconvenient.

 The functions in the R folder are now sourced before compiling data-raw Rmd files using `package_build`. Tests were written to ensure that this functionality is both required and that when it is used it runs successfully. These tests and all remaining tests ran without error on my local computer. 


<!-- IF THIS INVOLVES AUTHENTICATION: DO NOT SHARE YOUR USERNAME/PASSWORD, OR API KEYS/TOKENS IN THIS ISSUE - MOST LIKELY THE MAINTAINER WILL HAVE THEIR OWN EQUIVALENT KEY -->

<!-- If this issue relates to usage of the package, whether a question, bug or similar, along with your query, please paste your devtools::session_info() or sessionInfo() into the code block below, AND include a reproducible example (consider using a "reprex" https://cran.rstudio.com/web/packages/reprex/) If not, delete all this and proceed :) -->

<details> <summary><strong>Session Info</strong></summary>

```r
R version 3.5.1 (2018-07-02)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Ubuntu 18.04.2 LTS

Matrix products: default
BLAS: /home/dloewe/miniconda3/envs/promise_db-env/lib/R/lib/libRblas.so
LAPACK: /home/dloewe/miniconda3/envs/promise_db-env/lib/R/lib/libRlapack.so

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C               LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    
 [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8    LC_PAPER=en_US.UTF-8       LC_NAME=C                 
 [9] LC_ADDRESS=C               LC_TELEPHONE=C             LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
 [1] promise_1.3          pkgdown_1.3.0        bindrcpp_0.2.2       furrr_0.1.0          future_1.12.0       
 [6] dplyr_0.7.6          stringr_1.3.1        data.table_1.11.4    purrr_0.2.5          RevoUtils_11.0.1    
[11] RevoUtilsMath_11.0.0

loaded via a namespace (and not attached):
 [1] clisymbols_1.2.0     tidyselect_0.2.4     rematch2_2.0.1       listenv_0.7.0        testthat_2.0.0      
 [6] htmltools_0.3.6      usethis_1.4.0        yaml_2.2.0           utf8_1.1.4           pkgbuild_1.0.0      
[11] rlang_0.2.1          pillar_1.3.0         glue_1.3.0           withr_2.1.2          lambda.r_1.2.3      
[16] bindr_0.1.1          commonmark_1.5       futile.logger_1.4.3  devtools_1.13.6      codetools_0.2-15    
[21] memoise_1.1.0        evaluate_0.11        knitr_1.20           DataPackageR_0.15.7  callr_2.0.4         
[26] curl_3.2             parallel_3.5.1       fansi_0.4.0          markdown_0.8         Rcpp_0.12.18        
[31] backports_1.1.2      formatR_1.5          desc_1.2.0           pkgload_1.0.2        fs_1.2.6            
[36] digest_0.6.15        stringi_1.2.4        processx_3.1.0       rprojroot_1.3-2      cli_1.0.0           
[41] tools_3.5.1          magrittr_1.5         tibble_1.4.2         futile.options_1.0.1 crayon_1.3.4        
[46] pkgconfig_2.0.1      MASS_7.3-50          xml2_1.2.0           httr_1.3.1           assertthat_0.2.0    
[51] rmarkdown_1.10       roxygen2_6.1.0       rstudioapi_0.7       R6_2.2.2             globals_0.12.4      
[56] compiler_3.5.1
```
</details>

As the title says, currently when building package, even though vignettes = FALSE, the vignettes folder is still being populated, with erroneous yaml header on top of that. Causing e.g. pkgdown::build_site() to give error.
<!-- IF THIS INVOLVES AUTHENTICATION: DO NOT SHARE YOUR USERNAME/PASSWORD, OR API KEYS/TOKENS IN THIS ISSUE - MOST LIKELY THE MAINTAINER WILL HAVE THEIR OWN EQUIVALENT KEY -->

<!-- If this issue relates to usage of the package, whether a question, bug or similar, along with your query, please paste your devtools::session_info() or sessionInfo() into the code block below, AND include a reproducible example (consider using a "reprex" https://cran.rstudio.com/web/packages/reprex/) If not, delete all this and proceed :) -->

Expected behavior: When rebuilding a package and a data set changes, the NEWS file is updated to reflect only the changing data set.

Observed behavior: Sometimes the news file indicates that multiple data sets have changed even when only one has changed, despite no changes in the DATADIGEST string.
 
<details> <summary><strong>Session Info</strong></summary>

```r

```
</details>

When a  data object is renamed, rebuilding the package gives an error when checking the datadigest.
To reproduce:
1. change the name of a data object in an Rmd and in the yml.
2. build the package.

To fix:
Correct the logic comparing data digests for an object that exists in the data digest file but not elsewhere. Object needs to be removed correctly from the data digest file.
Here is my situation:

1. Built a data package using `datapackage_skeleton` and `package_build`
2. Manually filled out roxygen docs in `data-raw/documentation.R` and ran `document`

Now, I've made some changes to my base `Rmd` script and want to update the object in `data` using `package_build`. If I do that all of my manually filled roxygen docs have been reset to the template. Is there a way to store these fields in the Rmd or maybe `package_build` can be given an option not to roxygenize?

Consider what can be done to include a Dockerfile that would encapsulate the data, the package, 
a base docker image with R and necessary packages, and build the data package within that image.

The [`containerit`](https://github.com/o2r-project/containerit) package might do what we want.