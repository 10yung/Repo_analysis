## üêõ Bug Report

The `routesPaths` parameter passed to the `postBuild` lifecycle event contains the wrong path to the `404.html` file if you have a `baseUrl` configured in `docusaurus.config.js`.

This results in wrong data generated by plugins that access the `routesPaths` parameter. An example is the sitemap plugin, which generates an invalid sitemap entry.

### Have you read the [Contributing Guidelines on issues](https://github.com/facebook/docusaurus/blob/master/CONTRIBUTING.md#reporting-new-issues)?

Yes :)

## To Reproduce

1. Set the `baseUrl` to something different than just `/` in `docusuaurus.config.json`.
2. Build the documentation and log the `routesPaths` parameter in a plugin's `postBuild` lifecycle callback. You'll see the wrong path to the 404 file.
3. Open the generates sitemap. Again, the path to the 404 file is wrong.


## Expected behavior

I would expect the `routesPaths` to look like this:

```js
[ 
'/base-url/404.html',
'/base-url/',
'/base-url/docs/getting-started',
]
```

and the sitemap to contain:

```xml
<!-- ... -->
<url>
<loc>https://example.com/base-url/404.html</loc>
<changefreq>weekly</changefreq>
<priority>0.5</priority>
</url>
<!-- ... -->
```

## Actual Behavior

Currently, `routesPaths` look like this:

```js
[ 
'404.html',
'/base-url/',
'/base-url/docs/getting-started',
]
```

The `sitemap.xml` file looks like this:

```xml
<!-- ... -->
<url>
<loc>https://example.com/404.html</loc>
<changefreq>weekly</changefreq>
<priority>0.5</priority>
</url>
<!-- ... -->
```

## Reproducible Demo

To reproduce, build the documentation inside the `docs` folder of https://github.com/cmfcmf/OpenWeatherMap-PHP-API.
<!--
Thank you for sending the PR! We appreciate you spending the time to work on these changes.

Help us understand your motivation by explaining why you decided to make this change.

You can learn more about contributing to Docusaurus here: https://github.com/facebook/docusaurus/blob/master/CONTRIBUTING.md

Happy contributing!

-->

## Motivation

Currently, the correct syntax theme is not applied to live code blocks, if you go **not** through client navigation (for example, open a link directly). This PR fixes this.

### Have you read the [Contributing Guidelines on pull requests](https://github.com/facebook/docusaurus/blob/master/CONTRIBUTING.md#pull-requests)?

Yes

## Test Plan

Compare current version (https://v2.docusaurus.io/docs/markdown-features/) with preview one.

<!--
Thank you for sending the PR! We appreciate you spending the time to work on these changes.

Help us understand your motivation by explaining why you decided to make this change.

You can learn more about contributing to Docusaurus here: https://github.com/facebook/docusaurus/blob/master/CONTRIBUTING.md

Happy contributing!

-->

## Motivation

I wrote a remark plugin for admonitions ([`remark-admonitions`](https://github.com/elviswolcott/remark-admonitions)) and mentioned it over in https://github.com/facebook/docusaurus/issues/1238. @yangshun suggested I add it to `@docusaurus/preset-classic` so I did.

### Have you read the [Contributing Guidelines on pull requests](https://github.com/facebook/docusaurus/blob/master/CONTRIBUTING.md#pull-requests)?

Yes

## Test Plan

I tested it in two ways.
1. Creating a new site with the modified version of `@docusaurus/init` using both templates
1. Creating a new site from scratch using the modified version `@docusaurus/preset-classic`

![screenshot](https://user-images.githubusercontent.com/10013769/72639315-f0d32300-392a-11ea-9f3f-e51d6258ee32.png)

## Related PRs

I haven't added anything to the docs yet as I'm not sure where it would fall under. Right now I'm thinking any docs would go in https://v2.docusaurus.io/docs/markdown-features if admonitions need to be mentioned.
## üêõ Bug Report

![image](https://user-images.githubusercontent.com/33021341/72606731-13306500-395a-11ea-8052-299a69de660f.png)

I added a table to the documentÔºåbut the table is too wide. 

Document directory structure should be on the rightÔºåbut now it  ran to the bottom.

Is there any way to solve itÔºü

## üêõ Bug Report

This bug applies to v2. v1 seems to work correctly.

When you click a link in the navbar and the page renders, the navbar item is highlighted so the user has context to what area they are in. That highlight will disappear when you click around the sidebar, unless you click on the first link in the sidebar.

### Have you read the [Contributing Guidelines on issues](https://github.com/facebook/docusaurus/blob/master/CONTRIBUTING.md#reporting-new-issues)?

Yes

## To Reproduce

This happens in my project, but it can be reproduced using Docusaurus's own doc page.

1. Go the Docusaurus website: https://v2.docusaurus.io/

1. Click the *Docs* link in the navbar, which takes you to https://v2.docusaurus.io/docs/introduction

1. Notice that the *Docs* item in the navbar is highlighted in green

1. Click on any other sidebar item. At the time of writing this bug, the second item was *Design Principles*

1. Notice that *Docs* in the navbar is no longer highlighted

1. Click back on the first item in the sidebar, *Introduction*, and *Docs* is once again highlighted in the navbar

If you go the v1 site, this doesn't occur:

1. Go to https://docusaurus.io/en

1. Click *Docs* in the navbar and notice it's highlighted (though subtly)

1. Click on another item in the sidebar and notice *Docs* continues to stay highlighted.

## Expected behavior

While clicking around the sidebar, I expect the navbar item to stay highlighted so the user has context to what section they are in.

## Actual Behavior

The navbar item only highlights if the first item in the sidebar is the current page.

![image](https://user-images.githubusercontent.com/725660/72576018-45bb5e80-3883-11ea-833f-ba68b9ed3106.png)

![image](https://user-images.githubusercontent.com/725660/72576040-57046b00-3883-11ea-8543-c6b0e17d8791.png)

 My guess is that it's coming from `docusaurus.config.js`:

```js
module.exports = {
  themeConfig: {
    navbar: {
      links: [
        {
          to: "introduction",
          label: "Introduction",
          position: "left"
        },
        { ... },
        { ... }
      ]
    }
  }
}
```

i.e. The highlight in the navbar is only occurring if the current sidebar item matches the above setting in your config file.

In my `sidebar.js`, I even specified the `type` as `doc`:

```js
module.exports = {
  someSidebar: {
    Introduction: [
      { type: "doc", id: "doc1" },
      { type: "doc", id: "doc2" }
    ]
  }
};
```

But it had no noticeable effect.

## Reproducible Demo

No demo needs to be included to reproduce this, as it can be reproduced live on Docusaurus's own website. I hope that suffices. But if needed, I can upload a minimal project that reproduces the issue.


<!--
Thank you for sending the PR! We appreciate you spending the time to work on these changes.

Help us understand your motivation by explaining why you decided to make this change.

You can learn more about contributing to Docusaurus here: https://github.com/facebook/docusaurus/blob/master/CONTRIBUTING.md

Happy contributing!

-->

## Motivation

Most of our codebase is in Typescript. We want some dynamic documentation to where we can reference variables in Typescript files. It would be awesome to further support inline Typescript files as well.

This is a very simple change that enables a lot of possibilities.

### Have you read the [Contributing Guidelines on pull requests](https://github.com/facebook/docusaurus/blob/master/CONTRIBUTING.md#pull-requests)?

Yes

## Test Plan

Pretty straight forward!
- Try putting a `.ts` file in the pages folder (and a `.js` file for backwards compatibility) and test it compiles
- Try putting a `.ts` or a `.tsx` file somewhere in the project, then reference it in any `.md` or `.mdx` file and be amazed as it works

## Related PRs

Let me know how we want this documented (a page or a footnote) and I'll add it to the PR.

Fixes #2120 
## üöÄ Feature

The Docusaurus v2 mobile theme does not currently implement a way to view the in-page headings TOC that appears in the right sidebar in the desktop theme.

**I propose altering the v2 mobile button behavior to consolidate all page nav link access from the upper-left hamburger button, and convert the lower-right floating button to showing the page headings TOC instead**.

#### Have you read the [Contributing Guidelines on issues](https://github.com/facebook/docusaurus/blob/master/CONTRIBUTING.md#reporting-new-issues)?

Yes

## Motivation

There are three major navigation sections in a standard Docusaurus page:

- The top nav bar shows a short list of major links, like "Docs", "Tutorials", "Github", etc, and includes the search input
- The left sidebar contains all the actual docs page links, grouped into collapsible categories
- The right sidebar shows the H2/H3 headings for the current page, facilitating navigation within a single page

### v1 Mobile Theme

In DSv1, the mobile theme implemented all three nav areas in basically the same way, as seen in this React-Redux docs screenshot:

![DS v1 - multiple toolbars](https://user-images.githubusercontent.com/1128784/72488714-c58fed00-37df-11ea-9d7d-051f8c50fbc7.png)

The top nav bar is always visible here, but due to space constraints the nav links are on a second row below the site title + search bar.  

In addition, there's a third top toolbar, containing the current page title and two more buttons.  The upper-left out-arrows button triggers showing the left sidebar:

![DS v1 - left sidebar](https://user-images.githubusercontent.com/1128784/72488799-0ab41f00-37e0-11ea-922e-769e54e77314.png)

While the upper-right hamburger button shows the current page headings TOC:

![DS v1 - right sidebar](https://user-images.githubusercontent.com/1128784/72488838-27505700-37e0-11ea-9393-310743587dbb.png)

The flaw in this design is that the multiple top toolbars take up a lot of extra space.

### v2 Mobile Theme

DS v2's mobile simplifies things considerably.  There's now just a single top toolbar with the site title and search button, as well as a hamburger button in the upper-left.  There's also a floating button in the bottom right:

![DS v2 - whole page](https://user-images.githubusercontent.com/1128784/72488964-8dd57500-37e0-11ea-9cc8-d7cddbb8e6cf.png)

The upper-left button now shows the content from the top nav bar links, in a pop-over layer that shows the links stacked vertically:

![DS v2 - top nav bar](https://user-images.githubusercontent.com/1128784/72489019-bf4e4080-37e0-11ea-8cc7-3aee8df37729.png)

The bottom-right button shows the content from the left sidebar:

![DS v2 - left sidebar](https://user-images.githubusercontent.com/1128784/72489050-cecd8980-37e0-11ea-9705-8e760c21f1e7.png)

### v2 Theme Observations

The v2 theme top bar behavior is a major improvement over v1, because there's only one top bar visible at all times.  That saves a lot of vertical space.

However, the v2 theme has no way to show the page TOC.  This is a major deficiency compared to v1.

## Pitch

I would specifically like to see the v2 mobile theme rewritten so that:

- The upper-left hamburger button shows a popup layer that contains _both_ the top nav bar links _and_ the left sidebar categories + pages TOC.  I imagine that the links from the top nav might be added as an extra pseudo-category on top of the others, perhaps labeled "Nav Links".
- The lower-right floating button should be changed to show a popup layer that contains the in-page headings TOC from the right sidebar.

This would be a distinct improvement, because:

- All page navigation UI is now triggered from the same button, in the upper-left
- The page heading TOC is now accessible, when before it wasn't
## üöÄ Feature

Allow irrelevant sections of code to be folded away in code samples.

## Have you read the [Contributing Guidelines on issues](https://github.com/facebook/docusaurus/blob/master/CONTRIBUTING.md#reporting-new-issues)?

Yes

## Motivation

Sometimes it's nice to be able to fold away irrelevant sections in a full code example, so that you can focus on the important parts.

## Pitch

For example, if I wrote a Rust function:

```rust
fn main() {
    // sample:start
    println!("hello!");
    // sample:end
}
```

I'd want it to display as (note the indentation):

```rust
println!("hello!");
```

There would be a button on the code block to allow this to be expanded to the full code:

```rust
fn main() {
    println!("hello!");
}
```

### Example: Kotlin's documentation

For a live example, you can check out the Kotlin docs. They seem to have a nice UI for unfolding examples. For example, [here is their documentation on defining variables](https://kotlinlang.org/docs/reference/basic-syntax.html#defining-variables):

- Folded:

  <img width="739" alt="Screen Shot 2020-01-15 at 1 52 20 pm" src="https://user-images.githubusercontent.com/695077/72400903-b50b5280-379e-11ea-99cb-a33f151bdee6.png">
- Unfolded:

  <img width="735" alt="Screen Shot 2020-01-15 at 1 52 28 pm" src="https://user-images.githubusercontent.com/695077/72400909-b9d00680-379e-11ea-88e9-ed87c1a56470.png">
- Markdown source:

  <img width="774" alt="Screen Shot 2020-01-15 at 1 47 32 pm" src="https://user-images.githubusercontent.com/695077/72400913-bdfc2400-379e-11ea-96b2-cc6603171c08.png">


## Motivation

This PR should fix the issue #2157 : yarn build is failing when there are special characters in markdown files.

## Have you read the [Contributing Guidelines on pull requests](https://github.com/facebook/docusaurus/blob/master/CONTRIBUTING.md#pull-requests)?

Yes üòÑ 

## Test Plan

- I've reproduced the issue by adding "< 8" in `website/versionned_docs/blog.md` title

- After investigation, I have changed the `ssr.html.template.js` file to escape the input HTML (cf EJS feature)[https://github.com/tj/ejs#features]

- I've launched again `yarn build` which has succeeded

- Finally, i've launched the build on a local server to check that the result was fine

![image](https://user-images.githubusercontent.com/20051874/72279088-a9504c80-3635-11ea-9dea-29f31d0ea097.png)

## üêõ Bug Report

When running the command `npm run build`, files in the `node_modules` folder are checked by the engine.

This creates a lot of unnecessary overhead and logs many errors in the console like so:

> [WARN] unresolved links in file 'website/node_modules/mixin-deep/node_modules/is-extendable/README.md' > [ '.verb.md' ]
> [WARN] unresolved links in file 'website/node_modules/mixin-deep/README.md' > [ '.verb.md' ]
> [WARN] unresolved links in file 'website/node_modules/nanomatch/README.md' > [ '.github/contributing.md', '.verb.md' ]

There also are some errors logged from the fixture files for the tests:

> Header field "unlisted" in /home/jeahel/dev/the-hive/documentation/website/node_modules/docusaurus/lib/core/\_\_tests\_\_/\_\_fixtures\_\_/blog-post-with-draft.md is not supported.
> Header field "authorTwitter" in /home/jeahel/dev/the-hive/documentation/website/node_modules/docusaurus/lib/server/\_\_tests\_\_/\_\_fixtures\_\_/2018-08-17-docusaurus.md is not supported.

And some errors with BABEL, still in the node_modules folder:
> [BABEL] Note: The code generator has deoptimised the styling of /home/jeahel/dev/the-hive/documentation/website/node_modules/docusaurus/lib/core/metadata.js as it exceeds the max of 500KB.

### Have you read the [Contributing Guidelines on issues](https://github.com/facebook/docusaurus/blob/master/CONTRIBUTING.md#reporting-new-issues)?

I have.

## To Reproduce

1. Create a new Docusaurus project with `docusaurus-init`
1. Build the website with `cd website && npm run build`
1. Look at the console output

## Expected behavior

I expect the engine not to go through the `node_modules/` folder not to waste time, and no log errors about files I am not supposed/required to know about (errors about the fixtures and BABEL).

## Actual Behavior

The opposite: all files from the dependencies in `node_modules/` are parsed, and errors about unknown files are printed out.

## Reproducible Demo

No need to clone a repo, juste create a new Docusaurus project with `npx docusaurus-init`.
