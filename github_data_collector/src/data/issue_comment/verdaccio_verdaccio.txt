Bumps [typescript](https://github.com/Microsoft/TypeScript) from 3.7.1-rc to 3.7.5.
<details>
<summary>Release notes</summary>
<p><em>Sourced from <a href="https://github.com/Microsoft/TypeScript/releases">typescript's releases</a>.</em></p>
<blockquote>
<h2>TypeScript 3.7.5</h2>
<p>For the complete list of fixed issues, check out the</p>
<ul>
<li><a href="https://github.com/Microsoft/TypeScript/issues?utf8=%E2%9C%93&amp;q=is%3Aissue+milestone%3A%22TypeScript+3.7.0%22+is%3Aclosed+">fixed issues query for Typescript v3.7.0 (Beta)</a>.</li>
<li><a href="https://github.com/Microsoft/TypeScript/issues?utf8=%E2%9C%93&amp;q=is%3Aissue+milestone%3A%22TypeScript+3.7.1%22+is%3Aclosed+">fixed issues query for Typescript v3.7.1 (RC)</a>.</li>
<li><a href="https://github.com/Microsoft/TypeScript/issues?utf8=%E2%9C%93&amp;q=is%3Aissue+milestone%3A%22TypeScript+3.7.2%22+is%3Aclosed+">fixed issues query for Typescript v3.7.2 (Final)</a>.</li>
<li><a href="https://github.com/Microsoft/TypeScript/issues?utf8=%E2%9C%93&amp;q=is%3Aissue+milestone%3A%22TypeScript+3.7.3%22+is%3Aclosed+">fixed issues query for Typescript v3.7.3</a>.</li>
<li><a href="https://github.com/Microsoft/TypeScript/issues?utf8=%E2%9C%93&amp;q=is%3Aissue+milestone%3A%22TypeScript+3.7.4%22+is%3Aclosed+">fixed issues query for Typescript v3.7.4</a>.</li>
<li><a href="https://github.com/Microsoft/TypeScript/issues?utf8=%E2%9C%93&amp;q=is%3Aissue+milestone%3A%22TypeScript+3.7.5%22+is%3Aclosed+">fixed issues query for Typescript v3.7.5</a>.</li>
</ul>
<h2>TypeScript 3.7.4</h2>
<p>For the complete list of fixed issues, check out the</p>
<ul>
<li><a href="https://github.com/Microsoft/TypeScript/issues?utf8=%E2%9C%93&amp;q=is%3Aissue+milestone%3A%22TypeScript+3.7.0%22+is%3Aclosed+">fixed issues query for Typescript v3.7.0 (Beta)</a>.</li>
<li><a href="https://github.com/Microsoft/TypeScript/issues?utf8=%E2%9C%93&amp;q=is%3Aissue+milestone%3A%22TypeScript+3.7.1%22+is%3Aclosed+">fixed issues query for Typescript v3.7.1 (RC)</a>.</li>
<li><a href="https://github.com/Microsoft/TypeScript/issues?utf8=%E2%9C%93&amp;q=is%3Aissue+milestone%3A%22TypeScript+3.7.2%22+is%3Aclosed+">fixed issues query for Typescript v3.7.2 (Final)</a>.</li>
<li><a href="https://github.com/Microsoft/TypeScript/issues?utf8=%E2%9C%93&amp;q=is%3Aissue+milestone%3A%22TypeScript+3.7.3%22+is%3Aclosed+">fixed issues query for Typescript v3.7.3</a>.</li>
<li><a href="https://github.com/Microsoft/TypeScript/issues?utf8=%E2%9C%93&amp;q=is%3Aissue+milestone%3A%22TypeScript+3.7.3%22+is%3Aclosed+">fixed issues query for Typescript v3.7.4</a>.</li>
</ul>
<p>Downloads are available on:</p>
<ul>
<li><a href="https://www.npmjs.com/package/typescript">npm</a></li>
<li><a href="https://marketplace.visualstudio.com/items?itemName=TypeScriptTeam.TypeScript-374">Visual Studio</a> (<a href="https://github.com/Microsoft/TypeScript/wiki/Updating-TypeScript-in-Visual-Studio-2017">Select new version in project options</a>)</li>
<li><a href="https://www.nuget.org/packages/Microsoft.TypeScript.MSBuild/3.7.4">NuGet package</a></li>
</ul>
<h2>TypeScript 3.7.3</h2>
<p>For the complete list of fixed issues, check out the</p>
<ul>
<li><a href="https://github.com/Microsoft/TypeScript/issues?utf8=%E2%9C%93&amp;q=is%3Aissue+milestone%3A%22TypeScript+3.7.0%22+is%3Aclosed+">fixed issues query for Typescript v3.7.0 (Beta)</a>.</li>
<li><a href="https://github.com/Microsoft/TypeScript/issues?utf8=%E2%9C%93&amp;q=is%3Aissue+milestone%3A%22TypeScript+3.7.1%22+is%3Aclosed+">fixed issues query for Typescript v3.7.1 (RC)</a>.</li>
<li><a href="https://github.com/Microsoft/TypeScript/issues?utf8=%E2%9C%93&amp;q=is%3Aissue+milestone%3A%22TypeScript+3.7.2%22+is%3Aclosed+">fixed issues query for Typescript v3.7.2 (Final)</a>.</li>
<li><a href="https://github.com/Microsoft/TypeScript/issues?utf8=%E2%9C%93&amp;q=is%3Aissue+milestone%3A%22TypeScript+3.7.3%22+is%3Aclosed+">fixed issues query for Typescript v3.7.3</a>.</li>
</ul>
<p>Downloads are available on:</p>
<ul>
<li><a href="https://www.npmjs.com/package/typescript">npm</a></li>
<li><a href="https://marketplace.visualstudio.com/items?itemName=TypeScriptTeam.TypeScript-373">Visual Studio</a> (<a href="https://github.com/Microsoft/TypeScript/wiki/Updating-TypeScript-in-Visual-Studio-2017">Select new version in project options</a>)</li>
<li><a href="https://www.nuget.org/packages/Microsoft.TypeScript.MSBuild/3.7.3">NuGet package</a></li>
</ul>
<h2>TypeScript 3.7.2</h2>
<p>For release notes, check out the <a href="https://devblogs.microsoft.com/typescript/announcing-typescript-3-7-beta/">release announcement</a>.</p>
<p>For new features, check out the <a href="https://www.typescriptlang.org/docs/handbook/release-notes/typescript-3-7.html">What's new in TypeScript v3.7.2</a>.</p>
<p>For the complete list of fixed issues, check out the</p>
<ul>
<li><a href="https://github.com/Microsoft/TypeScript/issues?utf8=%E2%9C%93&amp;q=is%3Aissue+milestone%3A%22TypeScript+3.7.0%22+is%3Aclosed+">fixed issues query for Typescript v3.7.0 (Beta)</a>.</li>
<li><a href="https://github.com/Microsoft/TypeScript/issues?utf8=%E2%9C%93&amp;q=is%3Aissue+milestone%3A%22TypeScript+3.7.1%22+is%3Aclosed+">fixed issues query for Typescript v3.7.1 (RC)</a>.</li>
<li><a href="https://github.com/Microsoft/TypeScript/issues?utf8=%E2%9C%93&amp;q=is%3Aissue+milestone%3A%22TypeScript+3.7.2%22+is%3Aclosed+">fixed issues query for Typescript v3.7.2 (Final)</a>.</li>
</ul>
</tr></table> ... (truncated)
</blockquote>
</details>
<details>
<summary>Commits</summary>
<ul>
<li>See full diff in <a href="https://github.com/Microsoft/TypeScript/commits/v3.7.5">compare view</a></li>
</ul>
</details>
<br />


[![Dependabot compatibility score](https://api.dependabot.com/badges/compatibility_score?dependency-name=typescript&package-manager=npm_and_yarn&previous-version=3.7.1-rc&new-version=3.7.5)](https://dependabot.com/compatibility-score.html?dependency-name=typescript&package-manager=npm_and_yarn&previous-version=3.7.1-rc&new-version=3.7.5)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language
- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language
- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language
- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language
- `@dependabot badge me` will comment on this PR with code to add a "Dependabot enabled" badge to your readme

Additionally, you can set the following in your Dependabot [dashboard](https://app.dependabot.com):
- Update frequency (including time of day and day of week)
- Pull request limits (per update run and/or open at any time)
- Out-of-range updates (receive only lockfile updates, if desired)
- Security updates (receive only security updates, if desired)



</details>
Bumps [nock](https://github.com/nock/nock) from 11.7.0 to 11.7.2.
<details>
<summary>Release notes</summary>
<p><em>Sourced from <a href="https://github.com/nock/nock/releases">nock's releases</a>.</em></p>
<blockquote>
<h2>v11.7.2</h2>
<h2><a href="https://github.com/nock/nock/compare/v11.7.1...v11.7.2">11.7.2</a> (2020-01-08)</h2>
<h3>Bug Fixes</h3>
<ul>
<li>Fix a regression due to Jest having different globals (<a href="https://github-redirect.dependabot.com/nock/nock/issues/1850">#1850</a>) (<a href="https://github.com/nock/nock/commit/c7363e5">c7363e5</a>)</li>
</ul>
<h2>v11.7.1</h2>
<h2><a href="https://github.com/nock/nock/compare/v11.7.0...v11.7.1">11.7.1</a> (2020-01-03)</h2>
<h3>Bug Fixes</h3>
<ul>
<li>make interceptors work in any order even when filteringScope (<a href="https://github-redirect.dependabot.com/nock/nock/issues/1819">#1819</a>) (<a href="https://github.com/nock/nock/commit/bd39dff">bd39dff</a>), closes <a href="https://github-redirect.dependabot.com/nock/nock/issues/1818">#1818</a></li>
</ul>
</blockquote>
</details>
<details>
<summary>Commits</summary>
<ul>
<li><a href="https://github.com/nock/nock/commit/c7363e56ee866635514e5aaa0319232b6edd1b61"><code>c7363e5</code></a> fix: Fix a regression due to Jest having different globals (<a href="https://github-redirect.dependabot.com/nock/nock/issues/1850">#1850</a>)</li>
<li><a href="https://github.com/nock/nock/commit/fad405aa39b6dd98ecdc70432170e7b31abcbd95"><code>fad405a</code></a> Update dtslint to the latest version 🚀 (<a href="https://github-redirect.dependabot.com/nock/nock/issues/1813">#1813</a>)</li>
<li><a href="https://github.com/nock/nock/commit/e0d8171d70ff08e2d44be34e77dcff42e6b49f66"><code>e0d8171</code></a> Update sinon to the latest version 🚀 (<a href="https://github-redirect.dependabot.com/nock/nock/issues/1840">#1840</a>)</li>
<li><a href="https://github.com/nock/nock/commit/24700599753d67b3408bf3dace5c5646b7202030"><code>2470059</code></a> Update prettier to the latest version 🚀 (<a href="https://github-redirect.dependabot.com/nock/nock/issues/1815">#1815</a>)</li>
<li><a href="https://github.com/nock/nock/commit/bd39dffe94680c1358ceeedc4a05d165f686f8e7"><code>bd39dff</code></a> fix: make interceptors work in any order even when filteringScope (<a href="https://github-redirect.dependabot.com/nock/nock/issues/1819">#1819</a>)</li>
<li><a href="https://github.com/nock/nock/commit/e86a54259a346add73d71d12697047fc9a994718"><code>e86a542</code></a> Update nyc to the latest version 🚀 (<a href="https://github-redirect.dependabot.com/nock/nock/issues/1841">#1841</a>)</li>
<li><a href="https://github.com/nock/nock/commit/937010ecad7ebd2ab4c6b8f5b3ff552da52695e1"><code>937010e</code></a> minor typo in index.js comment (<a href="https://github-redirect.dependabot.com/nock/nock/issues/1842">#1842</a>)</li>
<li><a href="https://github.com/nock/nock/commit/e7112e94c86de4a1694b3137763cbe05331f1159"><code>e7112e9</code></a> Update eslint-plugin-node to the latest version 🚀 (<a href="https://github-redirect.dependabot.com/nock/nock/issues/1843">#1843</a>)</li>
<li><a href="https://github.com/nock/nock/commit/86bae9885ec1a3e221016f24fbc67517134e62b5"><code>86bae98</code></a> chore(deps): bump handlebars from 4.1.2 to 4.5.3</li>
<li><a href="https://github.com/nock/nock/commit/ad0babdb23af8ba02a71ff3ce220d54c6f7a8f28"><code>ad0babd</code></a> refactor: remove chai as a prod dependency (<a href="https://github-redirect.dependabot.com/nock/nock/issues/1826">#1826</a>)</li>
<li>Additional commits viewable in <a href="https://github.com/nock/nock/compare/v11.7.0...v11.7.2">compare view</a></li>
</ul>
</details>
<br />


[![Dependabot compatibility score](https://api.dependabot.com/badges/compatibility_score?dependency-name=nock&package-manager=npm_and_yarn&previous-version=11.7.0&new-version=11.7.2)](https://dependabot.com/compatibility-score.html?dependency-name=nock&package-manager=npm_and_yarn&previous-version=11.7.0&new-version=11.7.2)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language
- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language
- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language
- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language
- `@dependabot badge me` will comment on this PR with code to add a "Dependabot enabled" badge to your readme

Additionally, you can set the following in your Dependabot [dashboard](https://app.dependabot.com):
- Update frequency (including time of day and day of week)
- Pull request limits (per update run and/or open at any time)
- Out-of-range updates (receive only lockfile updates, if desired)
- Security updates (receive only security updates, if desired)



</details>
**Is your feature request related to a problem?**

I just started using Verdaccio on an AWS Amazon Linux 2 EC2 instance and I have no idea on how to install plugins.

I installed Verdaccio using `npm install -g verdaccio` and it runs fine, I can access the web interface.

Now I want to add the github oauth plugin but I have no idea on how to get this working. I tried

`npm install -g verdaccio-github-oauth-ui`

and modifying the config file for this plugin, but restarting Verdaccio only gives me:

```
Error: verdaccio-github-oauth-ui plugin not found. try "npm install verdaccio-github-oauth-ui"
```

I saw there is a plugins directory in the config file, but I have no idea how to install a plugin there, as running an `npm install` in that directory will just create a `node_modules` subdirectory containing the plugin and all its dependencies. (I tried this too btw and it also didn't work)

**Describe the solution you'd like**
I would like to see a few lines of documentation on how to install plugins, the same way the installation of Verdaccio itself is clearly explained. The only ones I find are about using Docker and extending the image to add plugins.

Thanks a lot!
I use it on macOS and it works well, but when I run verdaccio on centos system, it doesn't work, the error is as follows
```
[root@localhost verdaccio]# docker-compose -f verdaccio.yml logs -f
Attaching to verdaccio
verdaccio    |  warn --- config file  - /verdaccio/conf/config.yaml
verdaccio    |  warn --- ⚠️  experiments are enabled, we recommend do not use experiments in production, comment out this section to disable it
verdaccio    |  warn ---  - support for token is enabled
verdaccio    |  warn --- Verdaccio started
verdaccio    |  warn --- Plugin successfully loaded: verdaccio-htpasswd
verdaccio    |  warn --- Plugin successfully loaded: verdaccio-audit
verdaccio    |  warn --- http address - http://0.0.0.0:4873/ - verdaccio/4.4.1
verdaccio    |  http <-- 404, user: null(192.168.1.128), req: 'POST /-/v1/login', bytes: 37/150
verdaccio    |  http <-- 404, user: null(192.168.1.128), req: 'POST /-/v1/login', bytes: 37/150
verdaccio    |  http <-- 409, user: null(192.168.1.128), req: 'PUT /-/user/org.couchdb.user:admin', error: username is already registered
verdaccio    |  http <-- 409, user: null(192.168.1.128), req: 'PUT /-/user/org.couchdb.user:admin', error: username is already registered
verdaccio    |  http <-- 200, user: null(192.168.1.128), req: 'GET /-/user/org.couchdb.user:admin?write=true', bytes: 0/51
verdaccio    |  http <-- 200, user: null(192.168.1.128), req: 'GET /-/user/org.couchdb.user:admin?write=true', bytes: 0/51
verdaccio    | (node:7) [DEP0005] DeprecationWarning: Buffer() is deprecated due to security and usability issues. Please use the Buffer.alloc(), Buffer.allocUnsafe(), or Buffer.from() methods instead.
verdaccio    |  http <-- 201, user: admin(192.168.1.128), req: 'PUT /-/user/org.couchdb.user:admin/-rev/undefined', bytes: 172/589
verdaccio    |  http <-- 201, user: admin(192.168.1.128), req: 'PUT /-/user/org.couchdb.user:admin/-rev/undefined', bytes: 172/589
verdaccio    | (node:7) UnhandledPromiseRejectionWarning: OpenError: IO error: /verdaccio/storage/data/.token-db/LOCK: No such file or directory
verdaccio    |     at /opt/verdaccio/node_modules/levelup/lib/levelup.js:96:23
verdaccio    |     at /opt/verdaccio/node_modules/abstract-leveldown/abstract-leveldown.js:30:14
verdaccio    |     at /opt/verdaccio/node_modules/deferred-leveldown/deferred-leveldown.js:20:21
verdaccio    |     at /opt/verdaccio/node_modules/encoding-down/node_modules/abstract-leveldown/abstract-leveldown.js:30:14
verdaccio    |     at /opt/verdaccio/node_modules/leveldown/node_modules/abstract-leveldown/abstract-leveldown.js:30:14
verdaccio    | (node:7) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). (rejection id: 1)
verdaccio    | (node:7) [DEP0018] DeprecationWarning: Unhandled promise rejections are deprecated. In the future, promise rejections that are not handled will terminate the Node.js process with a non-zero exit code.
```
My current processing method is to give it root permissions in order to create a .token-db directory. This configuration makes it work, but it is not secure.The docker-compose.yml I use is as follows
```
version: '3'

services:
  verdaccio:
    image: verdaccio/verdaccio:token-feat
    hostname: verdaccio
    container_name: verdaccio
    user: root
    ports:
      - 4873:4873
    volumes:
      - ./storage:/verdaccio/storage
      - ./plugins:/verdaccio/plugins
      - ./conf:/verdaccio/conf
    restart: always
```
The configuration is as follows
```
#
# This is the config file used for the docker images.
# It allows all users to do anything, so don't use it on production systems.
#
# Do not configure host and port under `listen` in this file
# as it will be ignored when using docker.
# see https://verdaccio.org/docs/en/docker#docker-and-custom-port-configuration
#
# Look here for more config file examples:
# https://github.com/verdaccio/verdaccio/tree/master/conf
#

# path to a directory with all packages
storage: /verdaccio/storage/data
# path to a directory with plugins to include
plugins: /verdaccio/plugins

web:
  # WebUI is enabled as default, if you want disable it, just uncomment this line
  #enable: false
  title: Verdaccio
  # comment out to disable gravatar support
  # gravatar: false
  # by default packages are ordercer ascendant (asc|desc)
  # sort_packages: asc

auth:
  htpasswd:
    file: /verdaccio/conf/htpasswd
    # Maximum amount of users allowed to register, defaults to "+infinity".
    # You can set this to -1 to disable registration.
    # max_users: 1000

security:
  api:
    jwt:
      sign:
        expiresIn: 60d
        notBefore: 1
  web:
    sign:
      expiresIn: 7d
      notBefore: 1

# a list of other known repositories we can talk to
uplinks:
  npmjs:
    url: https://registry.npm.taobao.org/

packages:
  '@*/*':
    # scoped packages
    access: $authenticated
    publish: $authenticated
    unpublish: $authenticated
    proxy: npmjs

  '**':
    # allow all users (including non-authenticated users) to read and
    # publish all packages
    #
    # you can specify usernames/groupnames (depending on your auth plugin)
    # and three keywords: "$all", "$anonymous", "$authenticated"
    access: $authenticated

    # allow all known users to publish/publish packages
    # (anyone can register by default, remember?)
    publish: $authenticated
    unpublish: $authenticated

    # if package is not available locally, proxy requests to 'npmjs' registry
    proxy: npmjs

middlewares:
  audit:
    enabled: true

# log settings
logs:
  - { type: stdout, format: pretty, level: http }
  #- {type: file, path: verdaccio.log, level: info}

experiments:
  token: true
```
**Describe the bug**

Once logged in using the latest version available on docker, the user is not redirected to the package list. The same happens when the user  tries to logout. Both approaches require a page refresh (F5) for the redirection to work.

**To Reproduce**
<!-- How to reproduce the issue -->

Steps to reproduce the behavior:
1. Make sure to have docker installed, I used the macos version.
2. pull the image with the command (docker pull verdaccio/verdaccio)
3. start a new container:
```sh
V_PATH=/path/for/verdaccio; docker run -it --rm --name verdaccio \
  -p 4873:4873 \
  -v $V_PATH/conf:/verdaccio/conf \
  -v $V_PATH/storage:/verdaccio/storage \
  -v $V_PATH/plugins:/verdaccio/plugins \
  verdaccio/verdaccio
```
4. Add a new user through the command `npm adduser --registry http://0.0.0.0:4873` - and fill in the required fields
5. Open a new tab on your browser and access the web app - `http://0.0.0.0:4873`
6. Use the credentials from the step 4 to login in the web app

**Expected behavior**
The user should be redirected to the package list, once the login has been made.

**Docker || Kubernetes (please complete the following information):**
 - Docker verdaccio tag: none
 - Docker commands: 
```sh
docker pull verdaccio/verdaccio) && 
V_PATH=/path/for/verdaccio; docker run -it --rm --name verdaccio \
  -p 4873:4873 \
  -v $V_PATH/conf:/verdaccio/conf \
  -v $V_PATH/storage:/verdaccio/storage \
  -v $V_PATH/plugins:/verdaccio/plugins \
  verdaccio/verdaccio
```
 - Docker Version: 2.1.7.0 (41561) edge - Engine: 19.03.5

**Configuration File (cat ~/.config/verdaccio/config.yaml)**

```yaml
storage: ../storage
max_users: -1
auth:
  htpasswd:
    file: ./htpasswd
uplinks:
  npmjs:
    url: https://registry.npmjs.org/
packages:
  '@*/*':
    access: $authenticated
    publish: $authenticated
    proxy: npmjs
  '**':
    access: $authenticated
    publish: $authenticated
    proxy: npmjs
logs:
  - {type: stdout, format: pretty, level: http}
web:
  enable: true
  title: Verdaccio
  primary_color: "#4b5e40"
  scope: "*"
  sort_packages: asc | desc
```

**Environment information**

Docker command executed: `docker exec -it verdaccio bin/verdaccio --info`

```
Environment Info:

  System:
    OS: Linux 4.19 Alpine Linux
    CPU: (4) x64 Intel(R) Core(TM) i5-5257U CPU @ 2.70GHz
  Binaries:
    Node: 12.13.1 - /usr/local/bin/node
    Yarn: 1.19.1 - /usr/local/bin/yarn
    npm: 6.12.1 - /usr/local/bin/npm
```
Now I want to count the number of the package and the number of the developer in my server.
And I can't to login the server because it's not allowed in my company.
So what do I need to do.
## Goals
accept 
```bash
npm deprecate <pkg>[@<versionOrRange>] <message>
yarn deprecate <pkg>[@<versionOrRange>] <message>
```

as i need to reverse engineer that for yarn anyway i can integrate it here fast also.


## Algorythm
offer the same api as npm does and add "deprecated": "msg" filds to the manifest on download
- https://github.com/verdaccio/verdaccio/blob/master/src/api/endpoint/api/publish.ts#L98
  - Will need to check if the puted data is a deprecate reqest some how need examin headers.
  - its a Put request to the HTML escaped version of spec.name   npmjs.org/spec.escapedName
  - needs semver checks for the supplyed version range exprensiv operation
  - need to check how the version range get suppyled by npm 
```js
/** 
npm cli implamentation:
- a list versions
"spec": {
    "type": "version",
    "registry": true,
    "raw": "<name>@<version>",
    "name": "<name>@<version>",
    "escapedName": "<@xxx>%2<name>",
    "scope": "<@scope part of name>",
    "rawSpec": "0.0.17",
    "saveSpec": null,
    "fetchSpec": "0.0.17"
  },
body: {}

//endpoint deprecate
/**
 * Update a package
 */
export function updatePackage(storage: IStorageHandler, config: Config) {
  return function(req: $RequestExtend, res: $ResponseExtend, next: $NextFunctionVer) {
    if (Object.prototype.hasOwnProperty.call(req.body, '_write')) {
      delete req.body._write;
    } else {
      return next();
    }

    const packageName = req.params.package;
    const metadata = validateMetadata(req.body, packageName);

    storage.changePackage(packageName, metadata, 'deprecate', function(err) {
      if (err) {
        return next(err);
      }
      res.status(HTTP_STATUS.OK);
      return next({ ok: API_MESSAGE.PKG_CHANGED, success: true });
    });
  };
}


// this extends if there is no attachment in the afterchange function
     if (isObject(_attachments) === true && !Object.keys(_attachments).length) {
        res.status(HTTP_STATUS.OK);
        return next({
          ok: okMessage,
          success: true,
        });
      }

// this at the end
      } else if (isObject(metadata._attachments) && !Object.keys(metadata._attachments).length) {
        storage.changePackage(packageName, metadata, DEPRECATE, function(error) {
          afterChange(error, API_MESSAGE.PKG_CHANGED, metadata);
        });
``` 
the example code don't handels semver range while npm does that.



```js
    describe('should test deprecate api', () => {
        test('should deprecate a package', (done) => {
          request(app)
            .put('/@scope%2fpk1-test')
            .set(HEADER_TYPE.CONTENT_TYPE, HEADERS.JSON)
            .send(JSON.stringify({
              ...deprecateMetadata,
              versions: {
                '1.0.6': {
                  deprecated: 'true'
                }
              }
            }))
            .expect(HTTP_STATUS.OK).end(function(err) {
              if (err) {
                expect(err).toBeNull();
                return done(err);
              }
              request(app)
                .get('/@scope%2fpk1-test')
                .set(HEADER_TYPE.CONTENT_TYPE, HEADERS.JSON)
                .end(function(err, res) {
                  if (err) {
                    expect(err).toBeNull();
                    return done(err);
                  }
                  expect(res.body.versions['1.0.6'].deprecated).toMatch('true');
                  done();
                });
            });
        });

        test('should undeprecate a package', (done) => {
          request(app)
            .put('/@scope%2fpk1-test')
            .set(HEADER_TYPE.CONTENT_TYPE, HEADERS.JSON)
            .send(JSON.stringify({
              ...deprecateMetadata,
              versions: {
                '1.0.6': {
                  deprecated: ''
                }
              }
            }))
            .expect(HTTP_STATUS.OK).end(function(err) {
              if (err) {
                expect(err).toBeNull();
                return done(err);
              }
              request(app)
                .get('/@scope%2fpk1-test')
                .set(HEADER_TYPE.CONTENT_TYPE, HEADERS.JSON)
                .end(function(err, res) {
                  if (err) {
                    expect(err).toBeNull();
                    return done(err);
                  }
                  expect(res.body.versions['1.0.6'].deprecated).not.toBeDefined();
                  done();
                });
            });
        });
      });
``` 

## Related diffs old implamentation
```diff
From 06a84d4b0bf9aa621cbe6edbb49007d4bdf0674d Mon Sep 17 00:00:00 2001
From: Honza Hommer <honza@hommer.cz>
Date: Tue, 28 May 2019 02:12:42 +0200
Subject: [PATCH] feat: remove _write param from body

---
 src/api/endpoint/api/package.js |  3 ---
 src/api/endpoint/api/publish.js | 45 ++++++++++-----------------------
 2 files changed, 13 insertions(+), 35 deletions(-)

diff --git a/src/api/endpoint/api/package.js b/src/api/endpoint/api/package.js
index 5add27b2d..f4cb360b9 100644
--- a/src/api/endpoint/api/package.js
+++ b/src/api/endpoint/api/package.js
@@ -37,9 +37,6 @@ export default function(route: Router, auth: IAuth, storage: IStorageHandler, co
 
       let queryVersion = req.params.version;
       if (_.isNil(queryVersion)) {
-        if (Object.prototype.hasOwnProperty.call(req.query, '_write')) {
-          metadata._write = true;
-        }
         return next(metadata);
       }
 
diff --git a/src/api/endpoint/api/publish.js b/src/api/endpoint/api/publish.js
index 2559e6b88..5e9df7278 100644
--- a/src/api/endpoint/api/publish.js
+++ b/src/api/endpoint/api/publish.js
@@ -22,14 +22,7 @@ export default function publish(router: Router, auth: IAuth, storage: IStorageHa
   const can = allow(auth);
 
   // publishing a package
-  router.put(
-    '/:package/:_rev?/:revision?',
-    can('publish'),
-    media(mime.getType('json')),
-    expectJson,
-    updatePackage(storage, config),
-    publishPackage(storage, config)
-  );
+  router.put('/:package/:_rev?/:revision?', can('publish'), media(mime.getType('json')), expectJson, publishPackage(storage, config));
 
   // un-publishing an entire package
   router.delete('/:package/-rev/*', can('unpublish'), unPublishPackage(storage));
@@ -98,6 +91,14 @@ export function publishPackage(storage: IStorageHandler, config: Config) {
         });
       }
 
+      if (isObject(_attachments) === true && !Object.keys(_attachments).length) {
+        res.status(HTTP_STATUS.OK);
+        return next({
+          ok: okMessage,
+          success: true,
+        });
+      }
+
       // npm-registry-client 0.3+ embeds tarball into the json upload
       // https://github.com/isaacs/npm-registry-client/commit/e9fbeb8b67f249394f735c74ef11fe4720d46ca0
       // issue https://github.com/rlidwka/sinopia/issues/31, dealing with it here:
@@ -156,6 +157,10 @@ export function publishPackage(storage: IStorageHandler, config: Config) {
         storage.changePackage(packageName, metadata, req.params.revision, function(error) {
           afterChange(error, API_MESSAGE.PKG_CHANGED, metadata);
         });
+      } else if (isObject(metadata._attachments) && !Object.keys(metadata._attachments).length) {
+        storage.changePackage(packageName, metadata, 'deprecate', function(error) {
+          afterChange(error, API_MESSAGE.PKG_CHANGED, metadata);
+        });
       } else {
         storage.addPackage(packageName, metadata, function(error) {
           afterChange(error, API_MESSAGE.PKG_CREATED, metadata);
@@ -251,27 +256,3 @@ export function uploadPackageTarball(storage: IStorageHandler) {
     });
   };
 }
-
-/**
- * Update a package
- */
-export function updatePackage(storage: IStorageHandler, config: Config) {
-  return function(req: $RequestExtend, res: $ResponseExtend, next: $NextFunctionVer) {
-    if (Object.prototype.hasOwnProperty.call(req.body, '_write')) {
-      delete req.body._write;
-    } else {
-      return next();
-    }
-
-    const packageName = req.params.package;
-    const metadata = validateMetadata(req.body, packageName);
-
-    storage.changePackage(packageName, metadata, 'deprecate', function(err) {
-      if (err) {
-        return next(err);
-      }
-      res.status(HTTP_STATUS.OK);
-      return next({ ok: API_MESSAGE.PKG_CHANGED, success: true });
-    });
-  };
-}
```

related tests for old implamentation

```diff
From 750686c91cb18756bb1936e5a6bde8766d3795dc Mon Sep 17 00:00:00 2001
From: Honza Hommer <honza@hommer.cz>
Date: Tue, 28 May 2019 02:13:37 +0200
Subject: [PATCH] feat: add deprecate api tests

---
 test/unit/modules/api/api.spec.js   | 63 +++++++++++++++++++++++++++++
 test/unit/partials/deprecate-api.js |  6 +++
 2 files changed, 69 insertions(+)
 create mode 100644 test/unit/partials/deprecate-api.js

diff --git a/test/unit/modules/api/api.spec.js b/test/unit/modules/api/api.spec.js
index ebb36543c..44441d238 100644
--- a/test/unit/modules/api/api.spec.js
+++ b/test/unit/modules/api/api.spec.js
@@ -6,6 +6,7 @@ import rimraf from 'rimraf';
 import configDefault from '../../partials/config';
 import publishMetadata from '../../partials/publish-api';
 import starMetadata from '../../partials/star-api';
+import deprecateMetadata from '../../partials/deprecate-api';
 import endPointAPI from '../../../../src/api';
 
 import {HEADERS, API_ERROR, HTTP_STATUS, HEADER_TYPE, API_MESSAGE, TOKEN_BEARER} from '../../../../src/lib/constants';
@@ -709,7 +710,69 @@ describe('endpoint unit test', () => {
         });
       });
 
+      describe('should test deprecate api', () => {
+        test('should deprecate a package', (done) => {
+          request(app)
+            .put('/@scope%2fpk1-test')
+            .set(HEADER_TYPE.CONTENT_TYPE, HEADERS.JSON)
+            .send(JSON.stringify({
+              ...deprecateMetadata,
+              versions: {
+                '1.0.6': {
+                  deprecated: 'true'
+                }
+              }
+            }))
+            .expect(HTTP_STATUS.OK).end(function(err) {
+              if (err) {
+                expect(err).toBeNull();
+                return done(err);
+              }
+              request(app)
+                .get('/@scope%2fpk1-test')
+                .set(HEADER_TYPE.CONTENT_TYPE, HEADERS.JSON)
+                .end(function(err, res) {
+                  if (err) {
+                    expect(err).toBeNull();
+                    return done(err);
+                  }
+                  expect(res.body.versions['1.0.6'].deprecated).toMatch('true');
+                  done();
+                });
+            });
+        });
 
+        test('should undeprecate a package', (done) => {
+          request(app)
+            .put('/@scope%2fpk1-test')
+            .set(HEADER_TYPE.CONTENT_TYPE, HEADERS.JSON)
+            .send(JSON.stringify({
+              ...deprecateMetadata,
+              versions: {
+                '1.0.6': {
+                  deprecated: ''
+                }
+              }
+            }))
+            .expect(HTTP_STATUS.OK).end(function(err) {
+              if (err) {
+                expect(err).toBeNull();
+                return done(err);
+              }
+              request(app)
+                .get('/@scope%2fpk1-test')
+                .set(HEADER_TYPE.CONTENT_TYPE, HEADERS.JSON)
+                .end(function(err, res) {
+                  if (err) {
+                    expect(err).toBeNull();
+                    return done(err);
+                  }
+                  expect(res.body.versions['1.0.6'].deprecated).not.toBeDefined();
+                  done();
+                });
+            });
+        });
+      });
 
       test('should unpublish a new package with credentials', async (done) => {
 
diff --git a/test/unit/partials/deprecate-api.js b/test/unit/partials/deprecate-api.js
new file mode 100644
index 000000000..8f028fe1c
--- /dev/null
+++ b/test/unit/partials/deprecate-api.js
@@ -0,0 +1,6 @@
+const json = {
+  ...require('./publish-api'),
+  _attachments: {}
+};
+
+module.exports = json;
```



with spec, body where body represents the packument a package manifest
it looks like a package.json but has a versions arrray with other package jsons
will look inside the yarn project if that is a standard return value of npmjs later

## Related Yarn issue
- https://github.com/yarnpkg/yarn/issues/4943

## Current Development Branch
- https://github.com/direktspeed/verdaccio/tree/feat-deprecate

<!-- 
Hi folk, please read carefully the following points, all this information is what you need to share and make the process efficient
so everybody can understand your issue, please notice if you don't fill any of this points our friendly boot will remind you to do it or
close automatically the issue. Removing the sections you consider are irrelevant for your issue is totally ok. 

If you have questions, you might rather join use over Discord https://chat.verdaccio.org

As reminder, we have code of conduct all of us we must follow https://github.com/verdaccio/verdaccio/blob/master/CODE_OF_CONDUCT.md 
-->

**Describe the bug**
When searching for `jquer` the search API correctly returns `jquery`. If we input `jquery` it returns an empty array and so the search suggestions are also empty in the UI.

**To Reproduce**
Search for `jquery` and `jquery`. See the responses in the network tab.

Steps to reproduce the behavior:
1. Go to verdaccio frontend
1. Input `jquer`
1. Check results
1. Input `jquery`
1. Check results

**Expected behavior**
A direct match should return the packages.

**Screenshots**

<img width="947" alt="Bildschirmfoto 2019-12-25 um 15 39 55" src="https://user-images.githubusercontent.com/827205/71447336-4ef65700-272d-11ea-8230-a8b50fd4c82c.png">

<img width="851" alt="Bildschirmfoto 2019-12-25 um 15 39 46" src="https://user-images.githubusercontent.com/827205/71447335-4d2c9380-272d-11ea-9c0a-ffd1136138c2.png">

In the latest version the `npm unpublish` fails when a custom auth plugin is attached. If I remove `this.plugins.push((0, _authUtils.getDefaultPlugins)());` it works.
**Describe the bug**

Config _must_ be given via a file.  Not all environments in which verdaccio is used allow for file-based configurations.

**To Reproduce**
1. Try to pass `uplinks` configuration via command line, realize that there's no option for _any_ configuration options except `[host:]port` via command line:
```$ verdaccio -V && verdaccio --help
4.3.5
Usage: verdaccio [options]

Options:
  -i, --info                  prints debugging information about the local environment
  -l, --listen <[host:]port>  host:port number to listen on (default: localhost:4873)
  -c, --config <config.yaml>  use this configuration file (default: ./config.yaml)
  -V, --version               output the version number
  -h, --help                  output usage information
```
The only option is `-l, --listen`.  The option `-c, --config` only allows one to specify the path to a config file.

**Expected behavior**
All configuration options available in the config file need to be able to passed via environment variables and/or command-line options, with the latter overriding the former.

**Screenshots**
None.

**Docker || Kubernetes (please complete the following information):**
N/A

**Configuration File (cat ~/.config/verdaccio/config.yaml)**
N/A

**Environment information**

```

Environment Info:

  System:
    OS: macOS 10.15.1
    CPU: (12) x64 Intel(R) Core(TM) i9-8950HK CPU @ 2.90GHz
  Binaries:
    Node: 8.16.2 - ~/.nvm/versions/node/v8.16.2/bin/node
    Yarn: 1.19.1 - ~/.yarn/bin/yarn
    npm: 6.4.1 - ~/.nvm/versions/node/v8.16.2/bin/npm
  Virtualization:
    Docker: 19.03.5 - /usr/local/bin/docker
  Browsers:
    Chrome: 78.0.3904.108
    Safari: 13.0.3
  npmGlobalPackages:
    verdaccio: 4.3.5
```

**Debugging output**
N/A

**Additional context**

* This issue is ultimately motivated by https://gitlab.com/gitlab-org/gitlab/issues/55344.
* This issue is related to the fact that gitlab.com doesn't allow you to mount volumes into service containers:  see https://gitlab.com/gitlab-org/gitlab-runner/issues/3207, https://gitlab.com/gitlab-org/gitlab-foss/issues/21892 & others.
* Could be solved effectively by refactoring verdaccio to use https://www.npmjs.com/package/config to configure it.  That would at least take care of environment variable support via https://github.com/lorenwest/node-config/wiki/Environment-Variables#custom-environment-variables.
