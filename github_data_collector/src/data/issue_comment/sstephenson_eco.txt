If you're going to use Eco, be sure to see this security issue: https://github.com/sstephenson/eco/pull/67

specifying the type and URL is deprecated:

https://docs.npmjs.com/files/package.json#license
http://npm1k.org/

Eco's default `__escape` implementation doesn't escape single quotes, which makes XSS attacks like the following possible:

``` html
<input type='text' value='<%= @value %>'>
```

with a @value of `x'onmouseover='alert(document.domain)`, an XSS occurs.

This fork fixes the issue by using Underscore's escape.

Does not look like there's been any progress here for quite a while.

Would @sstephenson care to comment?

Cheers,
M.

Hi, I'm new to CoffeeScript and Eco. I'm trying to understand how to output a javascript object to the screen for debugging purposes. I tried something like this:

```
<%= document.write {'dog','cat'} %>
```

But it does not seem to recognize the document piece. I'm sure I'm missing something big here, but I can't seem to find any documentation about eco to set me on the write course, and this seems to work in pure CoffeeScript. Any help would be much appreciated.

This is just a simple documentation update for the readme to mention the colon requirement when capturing. This syntax is a little different than normal CoffeeScript, so it's important to mention it.

I am using Backbone and Eco templates in my Rails application. My template has the following code:

```
  <% @collection.each (model)-> %>
    <% console.log model.get('name') %>
    <p><%= model.get('name') %></p>
    <p><%= model.get('description') %></p>
  <% end %>
```

For some reason, the HTML is blank. The name and description are not displayed. However, the `console.log` method outputs the correct data. What am I doing wrong?

is there a way to change the default eco <% %> tag, so I can use erb inside my eco templates, for example to generate image tags using the rails asset pipeline?

I would like to be able to have subdirectories in my template directory based on the resources in my app.  Within each resource directory there would be eco templates such as index.html.eco, show.html.eco, etc.  I made a script that can find all the eco files recursively in the template directory however anything with the same file name gets overwritten in the ecoTemplate object.  Is their a way to change the generation of the key for the object to include some name spacing base on the directory the template is in?

```
Templates -->
  User -> 
    index.html.eco

  Post ->
    index.html.eco

#! /bin/bash

find src/templates -type f -name *.eco -exec eco -o www/js/eco {} \;
cat www/js/eco/* > vendors/templates.js
```

This will cause templates.js to only one ecoTemplates["index.html"] since the index.eco.js is overwritten in www/js/eco.   

The following command fails:

```
node ..\..\..\node_modules\eco\bin\eco ^
    -i views ^
    -o ..\build\views ^
    ..\views\listing.eco
```

with following error

```
C:\[...]\node_modules\eco\lib\command.js:215
          if (err) throw err;
                         ^
Error: Command failed: A subdirectory or file -p already exists.
Error occurred while processing: -p.
A subdirectory or file ..\\build\\views already exists.
Error occurred while processing: ..\\build\\views.

    at ChildProcess.exithandler (child_process.js:536:15)
    at ChildProcess.EventEmitter.emit (events.js:91:17)
    at maybeClose (child_process.js:634:16)
    at Process._handle.onexit (child_process.js:676:5)
```

When using -p it outputs JS code correctly. Windows XP.
