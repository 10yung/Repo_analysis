This PR aims to simplify things by providing an API that can be accessed without using the Scala collection converters
This PR adds a feature to report the name of the test that provides coverage of a specific statement. This is reported in the statement list in the HTML report. I will also submit an accompanying PR for the SBT plugin.

I implemented this in such a way that it shouldn't break anything: if the compiler plugin is used with an older sbt/maven/gradle plugin, the functionality is turned off.

For some reason, the file writer behaves unpredictably on Scala.js which affects this feature. I am planning to look into this in the future, but for now, I disabled the feature on Scala.js.
Closes #196 and https://github.com/scala-js/scala-js/issues/3803 

Quick and dirty.
I am not familiar with Scala macro, so advices are appreciated.


This PR brings compatibility with the upcoming 2.13.1, necessary due to https://github.com/scoverage/scalac-scoverage-plugin/pull/279.
I am not sure whether comments to arbitrary commits are working so great to draw any attention, so I am repeating my [request](https://github.com/scoverage/scalac-scoverage-plugin/commit/ddf856d57f3a85ada733dd95bb588dcbfb811ad7#commitcomment-34829073) here as a new issue:

Currently, release 1.4.0 is broken regarding the usage of any exclusion settings. This has been fixed a while ago in commit ddf856d57f3a.

Can we get a new release with this fix? I just spent some time debugging why my coverageExcludedFiles SBT setting would not be taken into account... ðŸ¥º :pray:

Thanks!

Necessary for #265 :
Currently, at compile time, scoverage stores (as a string) the conical sourcePath (path for the source file) for a statement inside the instrument file `scoverage.coverage`. This string is then again required during report generation to get the source file in `ScoverageHtmlWriter` . This breaks in a distributed environment where report generation is happening on a different machine and is unable to locate the source file due to the absolute path. 

The current fix makes the path relative when storing and turns it back to a conical one (w.r.t cwd) on retrieving. Thanks

â€¦projects

This is in response to issue #271. I have used a xml stream writer instead of creating an xml object in memory. Thanks.
I get the "OutOfMemoryError" while generating scoverage xml reports for large projects (>50 targets/modules). 

In my opinion, this is occurring because `ScoverageXmlWriter.scala` tries to first generate the entire XML tree in memory before writing it out to the file:
https://github.com/scoverage/scalac-scoverage-plugin/blob/9bb6198cb6c4dc6498d034ba4c1810ea2ac8d62c/scalac-scoverage-plugin/src/main/scala/scoverage/report/ScoverageXmlWriter.scala#L21-L32

One way to resolve the issue would be to use a stream writer (e.g `javax.xml.stream.XMLStreamWriter`)to write the output. This would involve passing the writer as an argument to the `xml(coverage: Coverage)` function above. Thanks.