This pull request has the same content as pull request #27 but is from a different branch since I want to use the master branch in my fork for further development. Sorry about the confusion!

Whats this error?

changes to create compatibility with rustc v0.12. @charliesome, could you please review this when you have time?

When trying to build the kernel with v0.12 of the rustc compiler I recieve the error

```
rustc -O --target i386-intel-linux --crate-type lib -o main.o --emit obj main.rs
error: requires `sized` lang_item
error: aborting due to previous error
Makefile:13: recipe for target 'main.o' failed
make: *** [main.o] Error 101
```

I believe this has to do with changes to the language, and I have made changes which allow it to complile
https://github.com/ragingSloth/rustboot/blob/39d3187f0f7e77501f58ae7b271dc27dab3035b8/main.rs

Rust can't compile truly freestanding, position-dependent code. It attempts to access global variables through  `_GLOBAL_OFFSET_TABLE_`. 

Currently it seems the best workaround is to compile emitted LLVM bitcode with `clang -ffreestanding`. However, optimizations made by clang could break things.

When running make, it spits out this error message.

```
rustc -O --target i386-intel-linux --lib -o main.o -c main.rs
error: no item found for `ty_desc`
error: no item found for `opaque`
error: no item found for `ty_visitor`
error: no item found for `freeze`
error: no item found for `send`
error: no item found for `closure_exchange_malloc`
error: aborting due to 6 previous errors
make: *** [main.o] Error 101
```

It seems dependent on some part of the rust runtime? maybe?

I'm running rustc version 0.7

```
rustc 0.7
host: x86_64-apple-darwin
```

any tips you can give?

I followed the steps given on README.md 
After all the prerequisites I cloned the rustboot
exported all the PATH
$~ echo $PATH
/home/sagar.sakre/binutils/i386-elf/bin/:/home/sagar.sakre/binutils/bin/:/home/sagar.sakre/rust-bin/bin/:/opt/qemu/bin/4.4.3/bin/:/opt/qemu/bin/:/home/nithin/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games

I got error while make.. 
sagar.sakre@sagar-vm ~ $ cd rustboot/
sagar.sakre@sagar-vm ~/rustboot $ ls
LICENSE.txt  linker.ld  loader.asm  main.rs  Makefile  README.md  runtime.asm  zero.rs
sagar.sakre@sagar-vm ~/rustboot $ make
nasm -o loader.bin -f bin loader.asm
nasm -f elf32 -o runtime.o runtime.asm
rustc -O --target i386-intel-linux --lib -o main.o -c main.rs
error: no item found for `sized`
error: aborting due to previous error
make: **\* [main.o] Error 101

can you please tel me where I am goin wrong?

``` rust
#[allow(ctypes)];
#[no_std];
#[no_core];

mod zero;

enum Color {
    Black       = 0,
    Blue        = 1,
    Green       = 2,
    Cyan        = 3,
    Red         = 4,
    Pink        = 5,
    Brown       = 6,
    LightGray   = 7,
    DarkGray    = 8,
    LightBlue   = 9,
    LightGreen  = 10,
    LightCyan   = 11,
    LightRed    = 12,
    LightPink   = 13,
    Yellow      = 14,
    White       = 15,
}

fn range(lo: uint, hi: uint, it: &fn(uint)) {
    let mut iter = lo;
    while iter < hi {
        it(iter);
        iter += 1;
    }
}

unsafe fn print_screen(i: uint, ch: u8) {
    *((0xb8000 + i * 2) as *mut u8) = ch;
}

unsafe fn set_color(i: uint, foreground: Color, background: Color) {
    *((0xb8000 + i * 2 + 1) as *mut u8) = ((background as u8) << 4) ^ (foreground as u8);
}

unsafe fn clear_screen(foreground: Color, background: Color) {
    range(0, 80*25, |i| {
        set_color(i, foreground, background);
        print_screen(i, 0)
    });
}

fn is_char(ch: u8) -> bool {
    return (ch >= 97 && ch <= 122) ||
           (ch >= 65 && ch <= 90);
}

fn is_whitespace(ch: u8) -> bool {
    return (ch == 32);
}

pub fn len(s: &str) -> uint {
    let mut i: uint = 0;
    while is_char(s[i]) {
        i += 1;
    }
    return i;
}

unsafe fn print_num(number: uint)
{
    let mut j = 0;
    let mut i = number;
    while i != 0 {
        let sym = i % 10 as u8;
        print_screen(j, sym + 48);
        j += 1;
        i = i / 10;
    }
}

#[no_mangle]
pub unsafe fn main() {
    let string: &str = "Hello World";
    let length = len(string);
    clear_screen(White, Blue);
    range(0, length, |i| {
        print_screen(i, string[i] as u8)
    });
    print_num(length);
}

```

This program should return 5ello, first printing 'Hello' and then printing '5'.
However, it just prints 5, if I change the length variable to 5, it will print out 5ello.
I am confused at what is happening, maybe someone with deeper asm knowledge could explain?
