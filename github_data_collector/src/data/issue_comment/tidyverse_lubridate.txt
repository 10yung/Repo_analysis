I'm often creating intervals using an index timepoint +/- a given duration as the respective endpoints. I was wondering if it would make sense to include something like this:

```r
int_width <- function(mid, num, units){
    pad <- duration(num, units)
    interval(mid - num, mid + num)
}
```

I'm not all to certain about the name. Maybe `time_pad` or something? 
When you have a length 1 `NA` Period object with months or years (and possibly others), addition with Dates and POSIXct objects throw an error. I would expect `NA` here.

``` r
library(lubridate, warn.conflicts = FALSE)

days1 <- days(NA_real_)
days2 <- days(c(NA_real_, 1))

months1 <- months(NA_real_)
months2 <- months(c(NA_real_, 1))

years1 <- years(NA_real_)
years2 <- years(c(NA_real_, 1))

x <- as.Date("2019-01-01")
y <- as.POSIXct("2019-01-01", "UTC")

x + days1
#> [1] NA
y + days1
#> [1] NA

x + days2
#> [1] NA           "2019-01-02"
y + days2
#> [1] NA               "2019-01-02 UTC"

x + months1
#> Error in if (all(mos == 0L)) {: missing value where TRUE/FALSE needed
y + months1
#> Error in if (all(mos == 0L)) {: missing value where TRUE/FALSE needed

x + months2
#> [1] NA           "2019-02-01"
y + months2
#> [1] NA               "2019-02-01 UTC"

x + years1
#> Error in if (all(mos == 0L)) {: missing value where TRUE/FALSE needed
y + years1
#> Error in if (all(mos == 0L)) {: missing value where TRUE/FALSE needed

x + years2
#> [1] NA           "2020-01-01"
y + years2
#> [1] NA               "2020-01-01 UTC"
```

<sup>Created on 2019-12-24 by the [reprex package](https://reprex.tidyverse.org) (v0.3.0.9000)</sup>
In below example, I expect 17/11 to be parsed as "2017-11-01" but it's parsed as "2017-01-01"


``` r
df<-data.frame(date=c("18/08", "17/11", "18/08", "18/05", "18/05", "18/07")); dplyr::mutate(df, date2 = lubridate::ymd(date, truncated = 1))
#>    date      date2
#> 1 18/08 2018-08-01
#> 2 17/11 2017-01-01
#> 3 18/08 2018-08-01
#> 4 18/05 2018-05-01
#> 5 18/05 2018-05-01
#> 6 18/07 2018-07-01
```

<sup>Created on 2019-12-12 by the [reprex package](https://reprex.tidyverse.org) (v0.3.0)</sup>

```r
> sessionInfo()
R version 3.6.0 (2019-04-26)
Platform: x86_64-w64-mingw32/x64 (64-bit)
Running under: Windows >= 8 x64 (build 9200)

Matrix products: default

locale:
[1] LC_COLLATE=Japanese_Japan.932  LC_CTYPE=Japanese_Japan.932   
[3] LC_MONETARY=Japanese_Japan.932 LC_NUMERIC=C                  
[5] LC_TIME=Japanese_Japan.932    

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
[1] reprex_0.3.0 dplyr_0.8.3 

loaded via a namespace (and not attached):
 [1] Rcpp_1.0.2       rstudioapi_0.10  knitr_1.25       whisker_0.4      magrittr_1.5    
 [6] tidyselect_0.2.5 R6_2.4.0         rlang_0.4.0      stringr_1.4.0    tools_3.6.0     
[11] xfun_0.10        clipr_0.7.0      htmltools_0.4.0  yaml_2.2.0       assertthat_0.2.1
[16] digest_0.6.21    tibble_2.1.3     crayon_1.3.4     processx_3.4.1   callr_3.3.2     
[21] purrr_0.3.2      ps_1.3.0         fs_1.3.1         glue_1.3.1       evaluate_0.14   
[26] rmarkdown_1.16   stringi_1.4.3    compiler_3.6.0   pillar_1.4.2     lubridate_1.7.4 
[31] pkgconfig_2.0.3 
> 
```
``` r
library(lubridate, warn.conflicts = F)
fmt <- "%Y%m%d %H:%M:%OS%z"
x <- "20190730 10:00:00+0200"
second(fast_strptime(x, format = fmt))
#> [1] -7200
second(strptime(x, format = fmt, tz = "UTC"))
#> [1] 0
```

<sup>Created on 2019-12-03 by the [reprex package](https://reprex.tidyverse.org) (v0.3.0)</sup>

Originally reported in #786
Functions that return `NA` for invalid input like `2007-13-01` or `2007-02-29`, rather than raising an error, and don't even print a warning, feel dangerous to me. I need to remember to check for `NA`s every time or I could create a hard-to-find bug.
#778, @hadley 



Related #647 
See https://github.com/tidyverse/lubridate/pull/828#discussion_r350776035. 
A non-finite date plus e.g. seconds now yields an object of class Date:
```r
class(as_date(NA) + seconds(1))
#> "Date"
```
It makes more sense if this yields an object of class POSIXct. 

Fixes #831 .
See https://github.com/tidyverse/lubridate/issues/732#issuecomment-558321821.
Changing hour, minute or second of date now yields POSIXlt:
```r
class(as_date(0) + hours(1))
#> "POSIXlt" "POSIXt" 
```
POSIXct is the preferred class for datetimes, though (cf. `as_datetime`). Moreover, POSIXlt does not allow for infinity, leading to bugs like: 
```r
as.numeric(as_date(c(0, Inf)))
#> 0 Inf
as.numeric(as_date(c(0, Inf)) + hours(1))
#> 3600   NA
```
