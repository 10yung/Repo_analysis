![Annotation 2019-11-30 201934](https://user-images.githubusercontent.com/10393214/69904431-fee6d780-13ae-11ea-938a-427fef56813d.png)


as you can see the buttons looks invisible

When Im trying to open the map I get this inflater error. Am I doing something wrong?

E/AndroidRuntime: FATAL EXCEPTION: main
    Process: com.project.socker, PID: 21788
    java.lang.RuntimeException: Unable to start activity ComponentInfo{com.project.socker/com.schibstedspain.leku.LocationPickerActivity}: android.view.InflateException: Binary XML file line #9 in com.project.socker:layout/leku_activity_location_picker: Binary XML file line #9 in com.project.socker:layout/leku_activity_location_picker: Error inflating class fragment
        at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:3270)
        at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:3409)
        at android.app.servertransaction.LaunchActivityItem.execute(LaunchActivityItem.java:83)
        at android.app.servertransaction.TransactionExecutor.executeCallbacks(TransactionExecutor.java:135)
        at android.app.servertransaction.TransactionExecutor.execute(TransactionExecutor.java:95)
        at android.app.ActivityThread$H.handleMessage(ActivityThread.java:2016)
        at android.os.Handler.dispatchMessage(Handler.java:107)
        at android.os.Looper.loop(Looper.java:214)
        at android.app.ActivityThread.main(ActivityThread.java:7356)
        at java.lang.reflect.Method.invoke(Native Method)
        at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:492)
        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:930)
     Caused by: android.view.InflateException: Binary XML file line #9 in com.project.socker:layout/leku_activity_location_picker: Binary XML file line #9 in com.project.socker:layout/leku_activity_location_picker: Error inflating class fragment
     Caused by: android.view.InflateException: Binary XML file line #9 in com.project.socker:layout/leku_activity_location_picker: Error inflating class fragment
     Caused by: java.lang.RuntimeException: The API key can only be specified once. It is recommended that you use the meta-data tag with the name: com.google.android.geo.API_KEY in the <application> element of AndroidManifest.xml
        at com.google.maps.api.android.lib6.drd.q.b(:com.google.android.gms.dynamite_mapsdynamite@19629084@19.6.29 (120700-0):5)
        at com.google.maps.api.android.lib6.auth.f.a(:com.google.android.gms.dynamite_mapsdynamite@19629084@19.6.29 (120700-0):16)
        at com.google.maps.api.android.lib6.impl.g.a(:com.google.android.gms.dynamite_mapsdynamite@19629084@19.6.29 (120700-0):59)
        at com.google.android.gms.maps.internal.CreatorImpl.a(:com.google.android.gms.dynamite_mapsdynamite@19629084@19.6.29 (120700-0):7)
        at com.google.android.gms.maps.internal.CreatorImpl.newMapFragmentDelegate(:com.google.android.gms.dynamite_mapsdynamite@19629084@19.6.29 (120700-0):30)
        at com.google.android.gms.maps.internal.h.a(:com.google.android.gms.dynamite_mapsdynamite@19629084@19.6.29 (120700-0):51)
        at cl.onTransact(:com.google.android.gms.dynamite_mapsdynamite@19629084@19.6.29 (120700-0):5)
        at android.os.Binder.transact(Binder.java:914)
        at com.google.android.gms.internal.maps.zza.zza(Unknown Source:10)
        at com.google.android.gms.maps.internal.zzf.zzc(Unknown Source:5)
        at com.google.android.gms.maps.SupportMapFragment$zzb.zzd(Unknown Source:12)
        at com.google.android.gms.maps.SupportMapFragment$zzb.createDelegate(Unknown Source:6)
        at com.google.android.gms.dynamic.DeferredLifecycleHelper.zaa(com.google.android.gms:play-services-base@@17.1.0:18)
        at com.google.android.gms.dynamic.DeferredLifecycleHelper.onInflate(com.google.android.gms:play-services-base@@17.1.0:20)
        at com.google.android.gms.maps.SupportMapFragment.onInflate(Unknown Source:21)
        at androidx.fragment.app.Fragment.onInflate(Fragment.java:1488)
        at androidx.fragment.app.FragmentManagerImpl.onCreateView(FragmentManagerImpl.java:3204)
        at androidx.fragment.app.FragmentController.onCreateView(FragmentController.java:134)
        at androidx.fragment.app.FragmentActivity.dispatchFragmentsOnCreateView(FragmentActivity.java:357)
        at androidx.fragment.app.FragmentActivity.onCreateView(FragmentActivity.java:336)
        at android.view.LayoutInflater.tryCreateView(LayoutInflater.java:1069)

**Is your feature request related to a problem? Please describe.**
A clear and concise description of what the problem is. Ex. I'm always frustrated when [...]

**Describe the solution you'd like**
A clear and concise description of what you want to happen.

**Describe alternatives you've considered**
A clear and concise description of any alternative solutions or features you've considered.

**Additional context**
Add any other context or screenshots about the feature request here.

![Screenshot_20191030-193838_Taksim](https://user-images.githubusercontent.com/19818531/67879014-4b8b8880-fb4d-11e9-8f32-fba4d8fa875e.jpg)

How do I hide the focus button and white area?
** lateinit property timeZone has not been initialized when returning from maps activity**

**To Reproduce**
Steps to reproduce the behavior:
set the following intent:
            val locationPickerIntent = LocationPickerActivity.Builder()
                .withLocation(32.028320, 34.781879)
                .withGeolocApiKey("GEOLOCKEY")
//                .withSearchZone("es_ES")
//                .withSearchZone(SearchZoneRect(LatLng(26.525467, -18.910366), LatLng(43.906271, 5.394197)))
//                .withDefaultLocaleSearchZone()
                .shouldReturnOkOnBackPressed()
                .withStreetHidden()
//                .withCityHidden()
                .withZipCodeHidden()
                .withSatelliteViewHidden()
                .withGooglePlacesEnabled()
                .withGoogleTimeZoneEnabled()
                .withVoiceSearchHidden()
//                .withUnnamedRoadHidden()
                .build(context!!)

called from fragment

**Should return required info**

**Info Required**
- Which version of the library do you actually use? - 5.0.0

- Do you have the localization permission granted?

- Are you sending parameters to the activity through the bundle?

- Android monitor shows any log related to the library when the error is shown?

- Any other thing that could help me to reproduce the error?

**Screenshots**

**Smartphone:**
 - Device: [e.g. Samsung S8]

**Additional context**

Places suggestion box is not working properly. 

The dropdown shows one place only at a time.

Could you please provide a way of applying "Custom Places Autocomplete Adapter" to your "search box"?
Fatal Exception: io.reactivex.exceptions.UndeliverableException
The exception could not be delivered to the consumer because it has already canceled/disposed the flow or the exception has nowhere to go to begin with. Further reading: https://github.com/ReactiveX/RxJava/wiki/What's-different-in-2.0#error-handling | HTTP error code: 400

**To Reproduce**
Go in an elevator or somewhere there is no enough network. And you will have a crash when opening location Picker.

**Info Required**
- Which version of the library do you actually use?
6.3.0

- Do you have the localization permission granted?
Yes

- Are you sending parameters to the activity through the bundle?
No

- Android monitor shows any log related to the library when the error is shown?

**Fabric stacktrace**

<img width="1241" alt="Capture d’écran 2019-10-09 à 10 33 33" src="https://user-images.githubusercontent.com/7314817/66464978-4a9c9500-ea80-11e9-98b6-6f38aca552d0.png">

Caused by com.schibstedspain.leku.geocoder.api.NetworkExceptionHTTP error code: 400 Raw Text
--
  | com.schibstedspain.leku.geocoder.api.NetworkClient.requestFromLocationName + 30 (NetworkClient.kt:30)
  | com.schibstedspain.leku.geocoder.GoogleGeocoderDataSource$getFromLocationName$1.subscribe + 33 (GoogleGeocoderDataSource.kt:33)
  | io.reactivex.d.e.b.b.b + 40 (ObservableCreate.java:40)
  | io.reactivex.f.a + 12090 (Observable.java:12090)
  | io.reactivex.d.e.b.m$a.onError + 105 (ObservableOnErrorNext.java:105)
  | io.reactivex.d.e.b.p$a.onError + 79 (ObservableRetryPredicate.java:79)
  | io.reactivex.d.e.b.r$a.onError + 63 (ObservableSubscribeOn.java:63)
  | io.reactivex.d.e.b.b$a.b + 84 (ObservableCreate.java:84)
  | com.schibstedspain.leku.geocoder.AndroidGeocoderDataSource$getFromLocationName$1.subscribe + 19 (AndroidGeocoderDataSource.kt:19)
  | io.reactivex.d.e.b.b.b + 40 (ObservableCreate.java:40)
  | io.reactivex.f.a + 12090 (Observable.java:12090)
  | io.reactivex.d.e.b.r$b.run + 96 (ObservableSubscribeOn.java:96)
  | io.reactivex.l$a.run + 578 (Scheduler.java:578)
  | io.reactivex.d.g.h.run + 66 (ScheduledRunnable.java:66)
  | io.reactivex.d.g.h.call + 57 (ScheduledRunnable.java:57)
  | java.util.concurrent.FutureTask.run + 237 (FutureTask.java:237)
  | java.lang.Thread.run + 776 (Thread.java:776)

**Smartphone:**
 - Device: Sony Xperia XZ2 compact, Huawei Mate 8, Lenovo K3 Note, Samsung Galaxy J3(2016)

**Is your feature request related to a problem? Please describe.**
The idea is to pick 2 locations instead of one like an origin and destination but routing is not needed.

**Describe the solution you'd like**
This is somewhat similar to https://github.com/aliumujib/Nibo but routing is not needed.

**Is your feature request related to a problem? Please describe.**
Right now when we open the location picker it already pinned the default lat, long. 

**Describe the solution you'd like**
There are three scenarios: 

1. **Location service is on and we have the user's location:** The pin should be on the user's location by default. 
2. **Location service is on but we don't have the user's location:** In this scenario, we show the default location but we don't pin anywhere on the map. As soon as we get the user's location if users didn't select any location yet we will pin the user's location.
3. **Location service is off and we don't have the user's location:** Like scenario 2 we will show the default location but we don't pin anywhere but when user press the user's location button we will ask the user to turn on the location service and then as soon as we get the user's location we will pin it.
It would be awesome if we get a snapshot after picking a location. As I know Google Map already supports this feature and we only need to return it in the onActivityResult method.

**The solution that I like**
Get a bitmap file in `onActivityResult` method.
