Hi,

I've recently tried to promote my in-app purchases by using the new features available on iOS 11.

However I haven't managed to do that because my app doesn't support the SKPaymentTransactionObserver method https://developer.apple.com/documentation/storekit/skpaymenttransactionobserver/2877502-paymentqueue

Here there are more information about promotions https://developer.apple.com/app-store/promoting-in-app-purchases/

Do you think you can add this feature?

Thanks
As it currently stands, if a dev forgets to set the production boolean to YES upon submitting for the AppStore issues can incur with receipt validation. (app will use Apple's sandbox verification server URL instead of their production verification server URL)

IAPHelper should utilize CLANG macros as a failsafe to automatically force that variable to YES if app is in release mode not debug mode. 

```
#ifdef DEBUG
#define releaseBuild NO
#else
#define releaseBuild YES
#endif
```


______



Then in IAPHelper.m:

`if (_production) {`

Should now read:

`if (_production || releaseBuild) {`
When validating receipt, Apple's `response` can be nil, which causes the app to crash when it tries to convert nil to JSON via `NSDictionary* rec = [IAPShare toJSON:response];`

I propose a modification simply in the read-me doc's example code, to now be as follows:

    [[IAPShare sharedHelper].iap checkReceipt:[NSData dataWithContentsOfURL:[[NSBundle mainBundle] appStoreReceiptURL]] AndSharedSecret:@"your sharesecret" onCompletion:^(NSString *response, NSError *error) {

        if (response)
        {

            //Convert JSON String to NSDictionary
            NSDictionary* rec = [IAPShare toJSON:response];

            if([rec[@"status"] integerValue]==0)
            {
        
              [[IAPShare sharedHelper].iap provideContentWithTransaction:trans];
                NSLog(@"SUCCESS %@",response);
                NSLog(@"Purchases %@",[IAPShare sharedHelper].iap.purchasedProducts);
            }
            else {
                NSLog(@"Fail");
            }

        }
        else {
            NSLog(@"Fail (Apple server malfunction or connection interruption)");
        }

    }];
![image](https://user-images.githubusercontent.com/32602506/35129611-3f04048e-fc71-11e7-950f-38425f599000.png)


That's a screenshot of my iTunesConnect inAppPurchase page. 

    [[IAPShare sharedHelper].iap requestProductsWithCompletion:^(SKProductsRequest* request,SKProductsResponse* response)
     {
         if (response > 0)
         {
             
             NSLog(@"%i", response.products.count);
             
         }
     }];


This always returns 0. It should return 2. Any ideas?
iOS11 support?
Without this, some webview based app can get stuck.
Is it okay if I just set it up?
[IAPShare sharedHelper].iap.production = YES;


Your app crashed on iPadï¿¼ running iOS 10.3.1 connected to an IPv6 network when we:

1. Launch the application 2. Navigate to Purchase/Recharge tab 3. Proceed to purchase one of the IAP products 

This occurred when your app was used:
- On Wi-Fi

We have attached detailed crash logs to help troubleshoot this issue.

Next Steps

To resolve this issue, please revise your app and test it on a device while connected to an IPv6 network (all apps must support IPv6) to ensure that it runs as expected.

Resources

For information on how to symbolicate and read a crash log, please review Tech Note TN2151 Understanding and Analyzing Application Crash Reports.

For information about supporting IPv6 Networks, please review Supporting IPv6 DNS64/NAT64 Networks and About Networking.
Hi,

First of all, let me thank you for the great work. I'm a very happy adopter of your library since almost 2 years now ;)

I would like to implement a simple mechanism to properly handle cancelled subscriptions.
In other words, if a user disables the auto-renewal of the subscription, I would like to be aware of it and thus deactivate the corresponding in-app purchase(s) when the subscription expires.

What's the best way do it?
Will this be enough? **Will this automatically clear subscriptions that are no longer active?**

`[[IAPShare sharedHelper].iap restoreProductsWithCompletion:^(SKPaymentQueue *payment, NSError *error) {
   if (error) {
      // error: do your stuff
   } else {
      // do your stuff
   }
}];`

Or should I clear in-app purchases before doing that?

`[[IAPShare sharedHelper].iap clearSavedPurchasedProducts];`

Thanks
Is this library compatible with iOS 10? Has it been tested with iOS 10? It looks like it has been updated within the past 6 months but there is no mention of recent iOS versions, unfortunately, so I can't tell. Thanks.