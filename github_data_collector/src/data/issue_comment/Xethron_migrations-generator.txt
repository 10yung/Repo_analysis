(The bug is for `xethron/laravel-4-generators`, but that one has no bug tracker and this package here depends on it).

When using composer 1.10-dev to generate the autoloader (`composer dump`) there are deprecation notices shown:

> Deprecation Notice: Class Way\Generators\Templates\Data\Controller located in ./vendor/xethron/laravel-4-generators/src/Way/Generators/templates/Data/Controller.php does not comply with psr-0 autoloading standard. It will not autoload anymore in Composer v1.11+.
> Deprecation Notice: Class Way\Generators\Templates\Data\Migration located in ./vendor/xethron/laravel-4-generators/src/Way/Generators/templates/Data/Migration.php does not comply with psr-0 autoloading standard. It will not autoload anymore in Composer v1.11+.

When I have generate migration from old db the migration is created successfully but the probem is it is convert enum value as string  see below -
<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;

class CreateFdlOrdersTable extends Migration {

	/**
	 * Run the migrations.
	 *
	 * @return void
	 */
	public function up()
	{
		Schema::create('orders', function(Blueprint $table)
		{
			$table->integer('id', true);
			$table->string('order_code');
			$table->integer('user_id');
               #Check status field not coming with enum values
			$table->string('status')->default('PENDING');
			$table->string('cancelled_by');
			$table->string('cancel_reason')->nullable();
			$table->string('payment_mode');
			$table->decimal('sub_total')->default(0.00);
			$table->decimal('tax')->default(0.00);
			$table->decimal('delivery_charge')->default(0.00);
			$table->decimal('discount_amt')->default(0.00);
			$table->decimal('total_amount', 10)->default(0.00);
			$table->decimal('merchant_pay', 10)->default(0.00);
			$table->decimal('comission', 10)->default(0.00)->comment('bikemango comission');
			$table->string('payment_status')->default('PENDING');
			$table->string('payment_id')->nullable();
			$table->integer('discount_id')->default(0);
			$table->text('delivery_note', 65535)->nullable();
			$table->text('order_title', 65535)->nullable();
			$table->dateTime('schedule_at')->nullable();
			$table->timestamps();
		});
	}


	/**
	 * Reverse the migrations.
	 *
	 * @return void
	 */
	public function down()
	{
		Schema::drop('fdl_orders');
	}

}

While using the package for a project, I get this error:

In FieldGenerator.php line 79:                                             
 Undefined property: stdClass::$column_name  
When I dumped the content of $column, I saw it's this:

stdClass Object
(
    [COLUMN_NAME] => status
    [COLUMN_TYPE] => enum('UNSET','SELECTED','PASSED','FAILED','PROFILE_CREATED','PROFILE_EDITED')
)
So, I modified that part of the code to be able to set the $column->column_name as $column->COLUMN_NAME and $column->column_type too.
I have two connections having the same table names say:

connection: mysql has a table called products
connection: inventory has a table called products

when I generate migrations for both connections both of them lies on the same folder database/migrations with the same class name which causes this error:
Cannot declare class CreateProductsTable, because the name is already in use.

Kindly guide me a quick fix.
In my application, it already have some existing migration and some of the table was not.
I wish that if we can run 
```
php artisan migrate:generate --ignore-created-migration 
```
then it generate only the migrations that not yet create.

Please tell me if this suggestion is feasible.

Laravel 6.0 Compatibility ?

`composer require --dev "xethron/migrations-generator"`

```
Using version ^2.0 for xethron/migrations-generator
./composer.json has been updated
Loading composer repositories with package information
Updating dependencies (including require-dev)
Your requirements could not be resolved to an installable set of packages.

  Problem 1
    - xethron/migrations-generator v2.0.0 requires way/generators dev-feature/laravel-five-stable -> no matching package found.
    - Conclusion: remove laravel/framework v6.0.0
    - Conclusion: don't install laravel/framework v6.0.0
    - xethron/migrations-generator v2.0.1 requires xethron/laravel-4-generators ~3.1.0 -> satisfiable by xethron/laravel-4-generators[3.1.0, 3.1.1].
    - xethron/migrations-generator v2.0.2 requires xethron/laravel-4-generators ~3.1.0 -> satisfiable by xethron/laravel-4-generators[3.1.0, 3.1.1].
```
Fixed bug on MySQL 8
![image](https://user-images.githubusercontent.com/4414580/60782316-bff28400-a178-11e9-9572-2ea227d638f0.png)


MariaDB:
![image](https://user-images.githubusercontent.com/4414580/60782348-e4e6f700-a178-11e9-8c7a-64f2bfc74291.png)

In my database I utilise the `hstore` extention. In that database I need to create migration scripts.

But when I generate the migration script via the command:

```
php artisan migrate:generate
```

I get the following error:

```
   Doctrine\DBAL\DBALException  : Unknown database type hstore requested, Doctrine\DBAL\Platforms\PostgreSQL94Platform may not support it.

  at /var/www/html/vendor/doctrine/dbal/lib/Doctrine/DBAL/Platforms/AbstractPlatform.php:434
    430| 
    431|         $dbType = strtolower($dbType);
    432| 
    433|         if (! isset($this->doctrineTypeMapping[$dbType])) {
  > 434|             throw new DBALException('Unknown database type ' . $dbType . ' requested, ' . static::class . ' may not support it.');
    435|         }
    436| 
    437|         return $this->doctrineTypeMapping[$dbType];
    438|     }

  Exception trace:

  1   Doctrine\DBAL\Platforms\AbstractPlatform::getDoctrineTypeMapping("hstore")
      /var/www/html/vendor/doctrine/dbal/lib/Doctrine/DBAL/Schema/PostgreSqlSchemaManager.php:363

  2   Doctrine\DBAL\Schema\PostgreSqlSchemaManager::_getPortableTableColumnDefinition()
      /var/www/html/vendor/doctrine/dbal/lib/Doctrine/DBAL/Schema/AbstractSchemaManager.php:804

```

On the other hand there are plugins to handle the hstore:

* https://github.com/emiliopedrollo/laravel-postgres-extended-schema
* https://github.com/spira/Database

Also there's support for hstore for doctrine as well: https://github.com/opsway/doctrine-dbal-postgresql

Therefore is there a way to allow the generator to let it utilize the 3rd party plugins for `hstore` or natively let it handle?

IMHO I think is good idea for somehow this plugin to load 3rd party plugins in order to be able to handle custom data types or even custom plugins for various databases. 
How to generate migrations when using oracle as a db . Basically I have 3 DB 1 is mysql rest 2 are oracle with different connection names. 
What I am trying to do is to connect and make migrations for oracle DB and the issue is whenever I am trying to connect to oracle its not able to fetch the database tables for second table (out of two oracle db's) , it always shows the first table contents even if I mention the connection .