Avoids
| src/epggrab/module/xmltv.c:204:47: error: '%s' directive output may be truncated writing between 2 and 2147483645 bytes into a region of size 115 [-Werror=format-truncation=]
|   204 |   snprintf(buf, sizeof(buf)-1, "ddprogid://%s/%s", mod->id, s);
|       |                                               ^~

Upstream-Status: Pending
Signed-off-by: Khem Raj <raj.khem@gmail.com>
Hi Jaroslav,
Waiting for your review ...

StÃ©phane Duperron
* Unify css code; spaces, commas...
* Fix multiple paddings for progress bar (SNR/Signal Strength).
* Slightly increase 'TVadapters' width (design collision).
* Slightly increase 'SAT>IP Servers' width (design collision).
* ACCESS: Fix width for spinner arrows (image was repeated).
* ACCESS: Fix transparent line at bottom of not filled progress bar (SNR/Signal Strength).
This patch adds drop-down list to "DVR profile "configuration which is then used by default for newly created "autorec" entry. Can be altered in "Autorec" configuration.
Solves issue [#4182](https://tvheadend.org/issues/4182)
In a mixed network environment (such as DVB-T and DVB-S) it is common
to receive many of the same channels. However, with "auto map to
channels" on a bouquet, you could not merge the channels across the
network bouquets.

Now we create a separate "Tvheadend Network" in the bouquets and allow
"auto map to channels" on it. Any other bouquets that are enabled but
do _not_ have "auto map to channels" enabled will be added to the
enabled "Tvheadend Network".

So, if "DVB-T Network" and "DVB-S Network" in the bouquet tab are both
enabled _and_ their tickbox for "auto map to channels" is deselected,
then their services will be added to the "Tvheadend Network". That can
then be enabled with "merge channels" to produce the merged channels.

We call it "Tvheadend Network" instead of "Tvheaded Virtual Bouquet"
to be consistent with the other auto-generated names.

The new bouquet is lazily updated to ensure the CPU overhead is
minimized. This means that when other bouquets are scanned, we wait
until the system is quiet before updating the new bouquet with
the new channels. We do a full scan for the bouquet to ensure all
the counts are correctly updated in the bouquet tab.

Fixes: #5617
Allow user to specify the name they want for a service that is mapped
by the service mapper. For example, the UK has numerous regional
satellite channels called "ITV" which sometimes show different
programmes such as regional news.  These should really be called "ITV
(London)", "ITV1 (Yorkshire)", etc., to avoid being merged together.

Also we have some channels we do not want mapped at all based on
criteria such as regex. Although we could manually deselect such
channels, it is easier to do it automatically.

So we allow user to do this via an embedded JavaScript function.

We embed the MIT licence duktape 2.3.0 JavaScript
  https://duktape.org/
  https://wiki.duktape.org/Portability.html

The duktape webpage suggests RAM overhead is minimal at less
that 100kb.

We use the default configuration from the release and use it in the
service mapper to allow a user to specify their own script for
performing advanced mapping of services to channels.

For example, they might want to rename channels such as "SE: Fjorton"
to "Fjorton SE", or to capitalize the channel names. These were
examples given in the issue #4715.

Although this could be possible via more tickboxes, it seems sensible
to allow the user to use a script. But should this be JavaScript?

So we pass an object containing the channel name and service id to the
user's script. If they return a name then we use it. If they return
null then we do not map the service at all. This allows the user to
exclude channels in which they are not interested such as shopping.

We also add a JavaScript function "print" to allow the user to log a
single string to our logs. This uses the new log level LS_JS.

The overhead for calling JavaScript only occurs if the user specifies a
script to use.

Currently the script is given at the UI such as:

 ```javascript 
({smMapName : function(svc) { print(svc.name + '/' + svc.sid); return svc.name; }})
```
Or

```javascript
({
  smMapName : function(svc) {
    print(svc.name + '/' + svc.sid); 
    var svcmap = {21000: 'ITV1 HD (London)', 21020: 'ITV1 HD (Meridian, Anglia)'};
    var name = svcmap[svc.sid];
    return typeof name == 'undefined' ? svc.name : name; 
  }
})
```

The service_mapper looks up the function name "smMapName" and then
calls it with the object with a name and sid property.

We currently don't allow the script to be given as a filename on disk,
nor do we attempt to optimize the compilation of such a script to only
evaluate it once per mapping (the overhead seems negligible). However,
we could add a LRU cache of compiled functions in the future if
necessary.

One gotcha from using the duktape API is that if you call
"duk_safe_to_string" to do debug logging of return values then it
appears this coerces the return type on the stack so a subsequent
"get" or "is null" check will return incorrect results.

So, if the JS function returned null then duk_is_null would return
true, but if you do a log of "duk_safe_to_string" afterwards and then
check "duk_is_null" then it would return false.

Fixes: #5599

Add icon mappings for category names used by "tv_grab_eu_epgdata", as given in sample file in bug 5359. 

(This doesn't fix that bug, it just adds icons from the xml file).

Previously we required a one-to-one mapping between xmltv categories and genres. So the xmltv category of "Documentary" is mapped to epg genre of "Documentary".

However, many mappings are not one-to-one. For example, "Opera" should be mapped to "Musical / Opera". So we now perform common mappings for SchedulesDirect and for the comments in the Kazer thread for French and Spanish, and from sample guide.xml for Polish webgrab in bug 4424.

Currently people are running perl scripts to map category names in to English genre names prior to import, and so have categories in a mixture of languages. This change will remove the need for external scripts.

Since we have only had a couple of category mapping contributions submitted in years, and since categories are a mixture of English and native languages, I've taken the easier/more performance route of just having one configuration file with all the mappings and auto-generating a C lookup array at compile time instead of having multiple configuration files per language. Autogenerating should allow us in the future to also auto-generate Javascript for displaying icons for these categories using their original language (instead of falling back to using genre icons).

At present there is no way to view the dvr disk utilisation through the HTTP API. This PR allows the free and used disk space to be queried.