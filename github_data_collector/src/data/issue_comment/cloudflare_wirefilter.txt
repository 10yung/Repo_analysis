Would it be possible to have examples of using wirefilter in Go? It's mentioned in the Cloudflare Blog post regarding wirefilter that Cloudflare has embedded the engine into your Go REST API: https://blog.cloudflare.com/how-we-made-firewall-rules/
Currently many errors return spans that last to the end of the input when they could be refined to a narrower region.

Not providing specific examples, but it would be good to walk through the tests and see what can be improved.
Hello!
It is not issue itself, but more like feature request for future: it would be great to perform recursive check of nested parameters.
For example, you have JSON as POST-arguments like `{"a":{"b":{"c":1}},"d":2}` and it is parsed to `request.post.a.b.c = 1` and `request.post.d = 2`. It would be great to set single rule like `request.post ~ "^[0-9]+$"` to check all nested elements in `request.post` variable, instead of making separate checks, adopting rule to `request.post.a.b.c ~ "^[0-9]+$"` and `request.post.d ~"^[0-9]+$"`.
In context of HTTP protocol, the same might be applicable for GET-arguments, headers, cookies or any parameter that may contain nested structure.
