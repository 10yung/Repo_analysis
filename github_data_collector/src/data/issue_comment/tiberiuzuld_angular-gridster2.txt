I'm using angular gridster2 (8.2.0) with angular 8.
I'm getting overlapping two grid while dragging. (Two grid are placing the same area).
this.options = {
      gridType: 'fixed',
      fixedRowHeight: 1,
      displayGrid: DisplayGrid.None,
      pushItems: true,
      swap: true,
      draggable: {
        enabled: true,
        ignoreContent: true,
        dragHandleClass: 'drag-handle',
      },
      resizable: {
        enabled: false
      },
      margin: 10,
      outerMargin: false,
      maxRows: 100000
}
**after gridster loaded** 
this.options.maxRows = this.gridster.gridRows.length;
this.options.api.optionsChanged();


thanks in advance
Is it possible to prevent the dropping of gridster items to empty cells?
Hi @tiberiuzuld,
At this moment is it possible to add an icon an EmptyCell?  
Hi @tiberiuzuld,

I want to ignore  &lt;a&gt;  links inside the dragHandleClass div, but there is no such functionality in current version(8.2.0). My draggable options is 
 draggable: {
          enabled: true,
          ignoreContent: true,
          ignoreContentClass:"ignore-drag"
 }

By looking at the code, I suggest three ways of doing it
1. check &lt;a&gt; tag in GridsterUtils.checkContentClass method.

2. always check ignoreContentClass before checking dragHandleClass in GridsterUtils.checkContentClassForEvent function.
   
3. export GridsterUtils class as part of the public api to let user overwrite GridsterUtils.checkContentClassForEvent function.

Can you provide a way to do it?
Thanks
Not sure I'm asking this in the right place but I am trying to work out how to get a Material Design Card <mat-card> to fill a gridster-item space, can anyone help?

I've tried various things with no luck.

HTML
```<gridster [options]="options">
<gridster-item [ngClass]="{'custom-gridster-item':true}" [item]="item" *ngFor="let item of dashboard">
    <div>
      <mat-card class="widget-card" [ngClass]="{'custom-card':true}">
      This is some text
      </mat-card>
    </div>
  </gridster-item>
</gridster>
```

CSS
```
.widget-card {
  min-width: 100px;
}

.custom-card {
    background-color: #5c5c5c;
    color: white;
    height: 100%;
    display: flex;
    align-items: stretch;
    min-height: 100%;
}

.custom-gridster-item {
    background-color: #888888;
}
```

Looking at the itemChange() function, there does not seem to have any data regarding the final positions of the swapped elements.

Am I missing something ? How do I find this data ? Thanks
Bumps [handlebars](https://github.com/wycats/handlebars.js) from 4.1.2 to 4.5.3.
<details>
<summary>Changelog</summary>

*Sourced from [handlebars's changelog](https://github.com/wycats/handlebars.js/blob/master/release-notes.md).*

> ## v4.5.3 - November 18th, 2019
> Bugfixes:
> 
> - fix: add "no-prototype-builtins" eslint-rule and fix all occurences - f7f05d7
> - fix: add more properties required to be enumerable - 1988878
> 
> Chores / Build:
> - fix: use !== 0 instead of != 0 - c02b05f
> - add chai and dirty-chai and sinon, for cleaner test-assertions and spies, 
>   deprecate old assertion-methods  - 93e284e, 886ba86, 0817dad, 93516a0
> 
> Security:
> 
> - The properties `__proto__`, `__defineGetter__`, `__defineSetter__` and `__lookupGetter__` 
>   have been added to the list of "properties that must be enumerable".
>   If a property by that name is found and not enumerable on its parent, 
>   it will silently evaluate to `undefined`. This is done in both the compiled template and the "lookup"-helper. 
>   This will prevent new Remote-Code-Execution exploits that have been
>   published recently.
> 
> Compatibility notes: 
> 
> - Due to the security-fixes. The semantics of the templates using
>   `__proto__`, `__defineGetter__`, `__defineSetter__` and `__lookupGetter__` in the respect that those expression now return 
>   `undefined` rather than their actual value from the proto.
> - The semantics have not changed in cases where the properties are  enumerable, as in:
> 
> ```js
> {
>   __proto__: 'some string'
> }
> ```
> 
> - The change may be breaking in that respect, but we still only 
>   increase the patch-version, because the incompatible use-cases
>   are not intended, undocumented and far less important than fixing
>   Remote-Code-Execution exploits on existing systems.
> 
> 
> 
> [Commits](https://github.com/wycats/handlebars.js/compare/v4.5.2...v4.5.3)
> 
> ## v4.5.2 - November 13th, 2019
> # Bugfixes
> 
> - fix: use String(field) in lookup when checking for "constructor" - d541378
> - test: add fluent API for testing Handlebars - c2ac79c
> 
> Compatibility notes:
> - no incompatibility are to be expected
></tr></table> ... (truncated)
</details>
<details>
<summary>Commits</summary>

- [`c819c8b`](https://github.com/wycats/handlebars.js/commit/c819c8b533934d2ac18001d7eb27a3205b00c2f3) v4.5.3
- [`827c9d0`](https://github.com/wycats/handlebars.js/commit/827c9d0747bef7d7f89829779523b6b2dcf3051d) Update release notes
- [`f7f05d7`](https://github.com/wycats/handlebars.js/commit/f7f05d7558e674856686b62a00cde5758f3b7a08) fix: add "no-prototype-builtins" eslint-rule and fix all occurences
- [`1988878`](https://github.com/wycats/handlebars.js/commit/198887808780bbef9dba67a8af68ece091d5baa7) fix: add more properties required to be enumerable
- [`886ba86`](https://github.com/wycats/handlebars.js/commit/886ba86c2f9cc71b7d99b9018fbe2d72a57085cc) test/chore: add chai/expect and sinon to "runtime"-environment
- [`0817dad`](https://github.com/wycats/handlebars.js/commit/0817dad7e72c51d07f7700547d0c69aa79a4976b) test: add sinon as global variable to eslint in the specs
- [`93516a0`](https://github.com/wycats/handlebars.js/commit/93516a0b07026ebd23c84fddf270a0c8b570bc59) test: add sinon.js for spies, deprecate current assertions
- [`93e284e`](https://github.com/wycats/handlebars.js/commit/93e284ed9be1e38c5e6945f15af1ccd689f2ada6) chore: add chai and dirty-chai for better test assertions
- [`c02b05f`](https://github.com/wycats/handlebars.js/commit/c02b05fa819f46bb66c878bebc6e8006408ebd5c) fix: use !== 0 instead of != 0
- [`8de121d`](https://github.com/wycats/handlebars.js/commit/8de121d21c88a6ab877e3a0eec9daaac483f3bf0) v4.5.2
- Additional commits viewable in [compare view](https://github.com/wycats/handlebars.js/compare/v4.1.2...v4.5.3)
</details>
<br />

[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=handlebars&package-manager=npm_and_yarn&previous-version=4.1.2&new-version=4.5.3)](https://help.github.com/articles/configuring-automated-security-fixes)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot ignore this [patch|minor|major] version` will close this PR and stop Dependabot creating any more for this minor/major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language
- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language
- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language
- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language

You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/tiberiuzuld/angular-gridster2/network/alerts).

</details>
GridsterPush do not work in sometimes, if larger card tries to push smaller card.

This is the code that I'm using to push the cards after a card's rows changed

```typescript
 // Create GridsterPush instance in order to move effected items
const push = new GridsterPush(widgetComponent);

if (push.pushItems(push.fromNorth)) { // push items from a direction

    push.checkPushBack(); // check for items can restore to original position
    push.setPushedItems(); // save affected items
    widgetComponent.setSize();
    widgetComponent.checkItemChanges(widgetComponent.$item, widgetComponent.item);
    push.destroy(); // destroy push instance

} else {

    push.restoreItems(); // restore the initial state before push
    push.destroy(); // destroy push instance

 }  
```

![image](https://user-images.githubusercontent.com/10605297/71482990-84558000-27d3-11ea-93ba-ea4abf53b46f.png)

    
Angular CLI: 8.3.20
Node: 10.16.0
OS: win32 x64
Angular: 8.2.14
... animations, common, compiler, compiler-cli, core, forms
... language-service, platform-browser, platform-browser-dynamic
... router

Package                            Version
------------------------------------------------------------
@angular-devkit/architect          0.803.20
@angular-devkit/build-angular      0.803.20
@angular-devkit/build-optimizer    0.803.20
@angular-devkit/build-webpack      0.803.20
@angular-devkit/core               8.3.20
@angular-devkit/schematics         8.3.20
@angular/cdk                       8.2.3
@angular/cli                       8.3.20
@angular/flex-layout               8.0.0-beta.27
@angular/material                  8.2.3
@angular/material-moment-adapter   8.2.3
@ngtools/webpack                   8.3.20
@schematics/angular                8.3.20
@schematics/update                 0.803.20
rxjs                               6.5.3
typescript                         3.5.3
webpack                            4.39.2
Hello,
I am using gridster with nbgtabset. I want to load all tabs at a time, so ngbtabset gives the property [destroyOnHide]="false" to load all tabs at a time. But when i am using this property gridster is not loaded. So gridster is not working with ngbtabset property [destroyOnHide]="false" .
Please help me with this matter.