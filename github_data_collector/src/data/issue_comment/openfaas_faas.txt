

<!--- Provide a general summary of your changes in the Title above -->

## Description
<!--- Describe your changes in detail -->
Error was ignored when creating a new request. When the endpoint url is
not welformed, ending without `/` for example, the `get` request will be
nil and client.Do will segfault.
## Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
error out instead of segfault
<!--- If it fixes an open issue, please link to the issue here. -->
- [ ] I have raised an issue to propose this change ([required](https://github.com/openfaas/faas/blob/master/CONTRIBUTING.md))
- [ ] My issue has received approval from the maintainers or lead with the `design/approved` label


## How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->


## Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (non-breaking change which fixes an issue)
- [ ] New feature (non-breaking change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)


## Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [x] My code follows the code style of this project.
- [ ] My change requires a change to the documentation.
- [ ] I have updated the documentation accordingly.
- [x] I've read the [CONTRIBUTION](https://github.com/openfaas/faas/blob/master/CONTRIBUTING.md) guide
- [ ] I have signed-off my commits with `git commit -s`
- [ ] I have added tests to cover my changes.
- [ ] All new and existing tests passed.

<!-- Due dilligence -->

## My actions before raising this issue
- [x] Followed the [troubleshooting guide](https://docs.openfaas.com/deployment/troubleshooting/)
- [x] Read/searched [the docs](https://docs.openfaas.com/)
- [x] Searched [past issues](/issues)

<!--- Provide a general summary of the issue in the Title above -->


## Expected Behaviour
<!--- If you're describing a bug, tell us what should happen -->
<!--- If you're suggesting a change/improvement, tell us how it should work -->

A library that we use expects configuration files with secrets in them to have permissions '600' or '400'. 

It would be nice for the default permissions for secrets exposed to be that, or make them configurable. 

## Current Behaviour
<!--- If describing a bug, tell us what happens instead of the expected behavior -->
<!--- If suggesting a change/improvement, explain the difference from current behavior -->
The secrets exposed by faas have '640' on a readonly filesystem, so we can't even chmod them before using the in the handler. 

The workaround is to copy them and chmod them at the beginning of the handler. Which is not the right way to do it. 


## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* FaaS-CLI version ( Full output from: `faas-cli version` ):

```
CLI:
 commit:  25cada08609e00bed526790a6bdd19e49ca9aa63
 version: 0.8.14
```

* Docker version `docker version` (e.g. Docker 17.0.05 ):

```
Client: Docker Engine - Community
 Version:           19.03.5
 API version:       1.40
 Go version:        go1.12.12
 Git commit:        633a0ea838
 Built:             Wed Nov 13 07:29:52 2019
 OS/Arch:           linux/amd64
 Experimental:      false

Server: Docker Engine - Community
 Engine:
  Version:          19.03.5
  API version:      1.40 (minimum version 1.12)
  Go version:       go1.12.12
  Git commit:       633a0ea838
  Built:            Wed Nov 13 07:28:22 2019
  OS/Arch:          linux/amd64
  Experimental:     false
 containerd:
  Version:          1.2.10
  GitCommit:        b34a5c8af56e510852c35414db4c1f4fa6172339
 runc:
  Version:          1.0.0-rc8+dev
  GitCommit:        3e425f80a8c931f88e6d94a8c831b9d5aa481657
 docker-init:
  Version:          0.18.0
  GitCommit:        fec3683

```

* Are you using Docker Swarm or Kubernetes (FaaS-netes)? Kubernetes

* Operating System and version (e.g. Linux, Windows, MacOS): Linux Ubuntu


<!-- Due dilligence -->
how can i use this option （-add-host） with faas-cli
 
docker run -it --add-host host1:192.168.1.1

## My actions before raising this issue
- [ ] Followed the [troubleshooting guide](https://docs.openfaas.com/deployment/troubleshooting/)
- [ ] Read/searched [the docs](https://docs.openfaas.com/)
- [x] Searched [past issues](/issues)
- [x] Checked UI output, CLI output, both consistently wrong
- [x] Checked https://github.com/openfaas/faas and https://github.com/openfaas/faas-netes codebase

## Expected Behaviour
I have wordcount function in `openfaas-fn` and in `another-ns` namespaces

I invoke the wordcount function multiple times in both namespaces in my web UI portal. The invocation count in the web UI shows the correct number of invocations in both namespaces. And the CLI also shows same correct count as the web UI portal when function is invoked from web UI portal. When CLI invokes the function using `$ faas invoke wordcount` or using `$ faas invoke wordcount -n <namespace>`, the count is shown correctly in both CLI and web UI portal

## Current Behaviour

I invoked the wordcount function multiple times in both namespaces in my web UI portal. But the invocation count in the web UI doesn't increase, it shows the same count, in both namespaces. And the CLI also shows same count as the web UI portal when invoked from web UI portal. But when CLI invokes the function using `$ faas invoke wordcount` , the count increases in both CLI and web UI portal

## Steps to Reproduce (for bugs)
1. install openfaas in k8s with k3sup. this installs with openfaas-fn as the default namespace for functions. login to the gateway in the cli

2. deploy functions in openfaas-fn using this 

```
$ faas deploy -f https://raw.githubusercontent.com/openfaas/faas/master/stack.yml
```

3. add another namespace in k8s
```
$ kubectl create ns another-ns
$ kubectl annotate namespace/another-ns openfaas="1"
$ # check namespaces list
$ faas namespaces
```
4. deploy wordcount function in the new namespace using the below yaml file

```
# stack.yml
provider:
  name: openfaas
  gateway: http://127.0.0.1:8080  # can be a remote server

functions:
  wordcount:
    lang: dockerfile
    image: functions/alpine:latest
    fprocess: "wc"
    skip_build: true
    namespace: another-ns
```

```
$ faas deploy -f stack.yml
```

5. Go to the web UI portal, invoke the function in `openfaas-fn` namespace and in `another-ns` namespace

You will notice that the count doesn't increase in the UI, and it doesn't increase in the CLI too, when doing `$ faas list` or `$ faas list -n openfaas-fn` or `$ faas list -n another-ns`

6. Invoke the function using the CLI

```
$ faas invoke wordcount
...
$ faas list
...
```

Also check web UI portal. the count shows up now, increases, but is the number of CLI invocations

7. Invoke the function using the CLI but with namespace flag. You will notice count doesn't increase and is wrong

```
$ faas invoke wordcount -n openfaas-fn
...
$ faas invoke wordcount -n another-ns
...
$ faas list
$ faas list -n openfaas-fn
$ faas list -n another-ns
...

```

## Context
I was just trying out openfaas. Noticed that my invocation count shows up wrong

## Your Environment
* FaaS-CLI version ( Full output from: `faas-cli version` ):
```
CLI:
 commit:  73004c23e5a4d3fdb7352f953247473477477a64
 version: 0.11.3

Gateway
 uri:     http://127.0.0.1:8080
 version: 0.18.7
 sha:     59b7839236098820e73ed25301258b722c3d33e4
 commit:  Change how and when we fetch and parse namespace info


Provider
 name:          faas-netes
 orchestration: kubernetes
 version:       0.9.15
 sha:           41c33f9f7c29e8276bd01387f78d6f0cff847890
```

* Docker version `docker version` (e.g. Docker 17.0.05 ):
```
# minikube vm docker
Client: Docker Engine - Community
 Version:           19.03.5
 API version:       1.40
 Go version:        go1.12.12
 Git commit:        633a0ea838
 Built:             Wed Nov 13 07:22:05 2019
 OS/Arch:           linux/amd64
 Experimental:      false

Server: Docker Engine - Community
 Engine:
  Version:          19.03.5
  API version:      1.40 (minimum version 1.12)
  Go version:       go1.12.12
  Git commit:       633a0ea838
  Built:            Wed Nov 13 07:28:45 2019
  OS/Arch:          linux/amd64
  Experimental:     false
 containerd:
  Version:          v1.2.10
  GitCommit:        b34a5c8af56e510852c35414db4c1f4fa6172339
 runc:
  Version:          commit: d736ef14f0288d6993a1845745d6756cfc9ddd5a
  GitCommit:
 docker-init:
  Version:          0.18.0
  GitCommit:        fec3683
```

* Are you using Docker Swarm or Kubernetes (FaaS-netes)?
Kubernetes

* Operating System and version (e.g. Linux, Windows, MacOS):
MacOS Catalina. v 10.15.2

* Code example or link to GitHub repo or gist to reproduce problem:
Provided it all above 😄 

* Other diagnostic information / logs from [troubleshooting guide](https://docs.openfaas.com/deployment/troubleshooting)

Initially I kind of assumed that the invocation count comes from prometheus, later it turned out to be the truth. So, I was seeing Grafana and Prometheus and seeing the metrics for invocation count. This is what Prometheus shows when I try what I have described above:

<img width="1429" alt="prometheus metrics" src="https://user-images.githubusercontent.com/12808424/71312135-81facb00-244d-11ea-8523-8d8e101b6243.png">

You can see below how the CLI shows the number as `6` for `wordcount` function, in both namespaces. My default is `openfaas-fn` when nothing is provided

<img width="734" alt="Screen Shot 2019-12-21 at 9 28 46 PM" src="https://user-images.githubusercontent.com/12808424/71312141-87f0ac00-244d-11ea-9fbd-9f72bcfecba5.png">

In prometheus, the metric which has the value 6 is this:

```
gateway_function_invocation_total{app="gateway",code="200",function_name="wordcount",instance="172.17.0.17:8082",job="kubernetes-pods",kubernetes_namespace="openfaas",kubernetes_pod_name="gateway-6c94b87f84-xhqzb",pod_template_hash="6c94b87f84"}	6
```

If you notice the `function_name` label value, it's `wordcount`. This is the count for the number of invocations from the CLI with `$ faas invoke wordcount`

And there are two other metrics with different values, which relate to `wordcount` function

```
gateway_function_invocation_total{app="gateway",code="200",function_name="wordcount.another-ns",instance="172.17.0.17:8082",job="kubernetes-pods",kubernetes_namespace="openfaas",kubernetes_pod_name="gateway-6c94b87f84-xhqzb",pod_template_hash="6c94b87f84"}	11
gateway_function_invocation_total{app="gateway",code="200",function_name="wordcount.openfaas-fn",instance="172.17.0.17:8082",job="kubernetes-pods",kubernetes_namespace="openfaas",kubernetes_pod_name="gateway-6c94b87f84-xhqzb",pod_template_hash="6c94b87f84"}	22
```

Notice the `function_name` label values, it's `wordcount.another-ns` and `wordcount.openfaas-fn`. This is the count of invocations that happened when I invoked in web UI. 

But it doesn't show up as that though, it shows up as 6

<img width="1440" alt="Screen Shot 2019-12-21 at 9 34 11 PM" src="https://user-images.githubusercontent.com/12808424/71312150-93dc6e00-244d-11ea-93a1-d419e00a6e7e.png">
<img width="1440" alt="Screen Shot 2019-12-21 at 9 34 00 PM" src="https://user-images.githubusercontent.com/12808424/71312152-9939b880-244d-11ea-90ef-00b3e3ed92e2.png">

On checking a bit of code for how the metrics comes, some assumptions and intuitions based on input and output and how it's all related and connecting the dots, this is what I can say:

The key difference is how the request goes to the gateway. When I do a CLI invocation

```
$ faas invoke wordcount
```

gateway log is like

```
gateway-6c94b87f84-xhqzb gateway 2019/12/21 16:08:10 Forwarded [POST] to /function/wordcount - [200] - 0.019437 seconds
```

and for following invocations

```
$ faas invoke wordcount -n openfaas-fn
```

or invoking in web UI portal in `openfaas-fn` namespace

the gateway log is like

```
gateway-6c94b87f84-xhqzb gateway 2019/12/21 16:07:04 Forwarded [POST] to /function/wordcount.openfaas-fn - [200] - 0.033784 seconds
```

for `another-ns`

```
$ faas invoke wordcount -n another-ns
```

or invoking in web UI portal in `another-ns` namespace

the gateway log is like

```
gateway-6c94b87f84-xhqzb gateway 2019/12/21 16:10:22 Forwarded [POST] to /function/wordcount.another-ns - [200] - 0.017615 seconds

```

The invocation count is shown using the response from the gateway for list functions API. Checking the code, gateway uses the following code to find the invocation count using the prometheus metrics data

https://github.com/openfaas/faas/blob/03dc8824d2074d0852fe7123e41ac5baef5709a1/gateway/server.go#L155

https://github.com/openfaas/faas/blob/df97efafae36ce7093ad353e3e6acc0e93d6300e/gateway/metrics/add_metrics.go#L53-L55

https://github.com/openfaas/faas/blob/df97efafae36ce7093ad353e3e6acc0e93d6300e/gateway/metrics/add_metrics.go#L64

https://github.com/openfaas/faas/blob/df97efafae36ce7093ad353e3e6acc0e93d6300e/gateway/metrics/add_metrics.go#L91

You can see how the metric label's function name and the function name from the provider (? not sure about the term 😅) are matched, without considering namespace. So, seeing the above prometheus metrics data, naturally the value `6` will come, no matter what namespace the user is looking at in CLI or web ui portal.

So, that's one issue, reading of the invocations count data. I think to fix it - just adding the namespace along with name like `<name>.<namespace>` should work. And a test for it too!

Next issue is, how did the wrong data even get into prometheus in the first place? There are three sets of invocation counts, but only two namespaces. The metric with label `function_name=wordcount` is not a correct one, there should always be a namespace to be specific about which namespace the count refers to, even though if there's just one. I guess I'm right about this, considering every function Must be in a namespace and it's very clear that multiple namespaces is supported, namespace must be part of the label value. Do correct if I'm missing something 😅

And checking the code, the gateway is what exposes the metrics at port 8082. And prometheus scrapes these metrics.

Looking at the metrics data, the metrics seem to be right for web UI portal invocations and for CLI invocations with namespace flag, except for the one with `function_name=wordcount` label, which got created from CLI invocations without namespace flag. This is how the gateway logs look for such a case

```
gateway-6c94b87f84-xhqzb gateway 2019/12/21 16:08:10 Forwarded [POST] to /function/wordcount - [200] - 0.019437 seconds
```

Now why does this log matter? The url path in this matters, which is `/function/wordcount`

My guess based on the code - when requests are made, they go through these parts of the code

https://github.com/openfaas/faas/blob/03dc8824d2074d0852fe7123e41ac5baef5709a1/gateway/server.go#L204-L206

https://github.com/openfaas/faas/blob/03dc8824d2074d0852fe7123e41ac5baef5709a1/gateway/server.go#L110

`functionNotifiers` is here and has prometheus in it

https://github.com/openfaas/faas/blob/03dc8824d2074d0852fe7123e41ac5baef5709a1/gateway/server.go#L83

And the notify call is made here

https://github.com/openfaas/faas/blob/238ce1be23c327bcb0dc1c1b83e3c623d65850d2/gateway/handlers/forwarding_proxy.go#L69

And for prometheus, the implementation is here

https://github.com/openfaas/faas/blob/238ce1be23c327bcb0dc1c1b83e3c623d65850d2/gateway/handlers/notifiers.go#L49

and this is where the service name is obtained 

https://github.com/openfaas/faas/blob/238ce1be23c327bcb0dc1c1b83e3c623d65850d2/gateway/handlers/notifiers.go#L51

https://github.com/openfaas/faas/blob/238ce1be23c327bcb0dc1c1b83e3c623d65850d2/gateway/handlers/notifiers.go#L76

And here is where the metric is created for prometheus to scrape

https://github.com/openfaas/faas/blob/238ce1be23c327bcb0dc1c1b83e3c623d65850d2/gateway/handlers/notifiers.go#L59-L61

This is all good, but I think the service name will be `wordcount` when url is `/function/wordcount`, but it will be `wordcount.openfaas-fn` when url is `/function/wordcount.openfaas-fn`, and so metric also will be wrong.

The following is speculation - Have to check CLI code for this.

To fix this, I think the CLI has to make calls with namespace in the url path like `/function/wordcount.openfaas-fn` if `openfaas-fn` is the default namespace. I think this is not happening, but it still works because behind the scenes, even with `/function/wordcount`, as the default namespace function is taken up somehow and it all works, but to make the invocation count work, we might have to pull in namespaces and use the first one as the default [according to this idea](https://github.com/openfaas/faas/issues/1407#issuecomment-566583230) and then use that for the request

I'll check CLI code next to understand better 😄 and also check web UI portal code, and then post more here about my findings
I am working on a dynamic template that uses golang task application to create handler's tests and a src folder where to run the function outside openfaas for debugging purpose.
Any idea to generalize this idea on every language template?

Here the link ... still under development.
[https://github.com/advancedlogic/faas-go-template](url)
Thanks
Signed-off-by: Alex Ellis (OpenFaaS Ltd) <alexellis2@gmail.com>

<!--- Provide a general summary of your changes in the Title above -->

## Description
<!--- Describe your changes in detail -->

Record metrics for invocations when they start

## Motivation and Context

* This experimental patch records metrics as invocations start so that the metrics can be used to make better scale to zero decisions in faas-idler.

## How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

Tested with Kubernetes on a single-node cluster, metrics
reported as expected. Existing metrics still report.

## Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (non-breaking change which fixes an issue)
- [x] New feature (non-breaking change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

Join us for the OpenFaaS 3rd birthday with an online Community Meeting.

We'll have demos from #TeamServerless and an update on the year so far.

![QAfn79n- jpg-large](https://user-images.githubusercontent.com/6358735/71088225-de33c580-2195-11ea-802d-0b1268bca410.jpeg)

## Date: 18th Dec 2019 @ 1700 GMT+0

Join the event via Google Calendar

https://calendar.google.com/event?action=TEMPLATE&tmeid=cjBtOHZicmpuaG9kczZ0cXRsOWEwNWI4cHMgb3BlbmZhYXMuY29tX2xvb2g2cW1kNTI1MXJyNGt0bjd0aTgwNHBrQGc&tmsrc=openfaas.com_looh6qmd5251rr4ktn7ti804pk%40group.calendar.google.com

Or on the day, via Zoom - 

https://zoom.us/j/727801872

Meeting ID: 727 801 872

Please +1 👍 if you're attending

And checkout [GitHub Sponsors for OpenFaaS to support Open Source in 2020.](https://insiders.openfaas.io/)
## Description

There is no way to change the name of the nats cluster id used for asynchronous invocation. Currently it expects the cluster id to be `faas-cluster`. 

Note that the queue-worker does allow the cluster id to be overridden https://github.com/openfaas/nats-queue-worker/blob/dea1c90b8cc66dc73597b7531a4fd29a32b5f88c/readconfig.go#L42

## Proposal

Add environment override to `gateway` default it to `faas-cluster` 
<!-- Due dilligence -->

## My actions before raising this issue
- [x] Followed the [troubleshooting guide](https://docs.openfaas.com/deployment/troubleshooting/)
- [x] Read/searched [the docs](https://docs.openfaas.com/)
- [x] Searched [past issues](/issues)

<!--- Provide a general summary of the issue in the Title above -->
I hope to implement a function that can access the files in the host.  

I know this idea may violate the original intention of FaaS, but I think this requirement is very important in the design of single-node microservices.

Does OpenFaas support such a setting? For example, do we need to modify the resource configuration file of k8s? Or modify the source code?

## Expected Behaviour
<!--- If you're describing a bug, tell us what should happen -->
<!--- If you're suggesting a change/improvement, tell us how it should work -->
The host where the function runs has a stable and long-term shared directory, and the function can access it directly in the code to get files. 

## Current Behaviour
<!--- If describing a bug, tell us what happens instead of the expected behavior -->
<!--- If suggesting a change/improvement, explain the difference from current behavior -->
I have used VOLUME instruction in the Dockfile in the language template to 
specify a shared path, for function there is a stable path to access, but for the host the shared directory path changes every time the container starts. 

For application purpose I hope the path on the host does not change.

I took a look at the source code of OpenFaas, but I have no idea how to do.

## Possible Solution
<!--- Not obligatory, but suggest a fix/reason for the bug, -->
<!--- or ideas how to implement the addition or change -->
Maybe I should modify some resource configuration file or some operation of pod in the source code of OpenFaas.

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* FaaS-CLI version ( Full output from: `faas-cli version` ):0.9.2

* Docker version `docker version` (e.g. Docker 17.0.05 ):18.09.7

* Are you using Docker Swarm or Kubernetes (FaaS-netes)?  Kubernetes(kubeadm, kubectl and kubelet are all v1.16.0)

* Operating System and version (e.g. Linux, Windows, MacOS): Linux




Signed-off-by: Burton Rheutan <rheutan7@gmail.com>

<!--- Provide a general summary of your changes in the Title above -->

## Description
<!--- Describe your changes in detail -->
Add video links to Kubecon talks in the community file

Some of the talks were already present with a link to the event, so I've just added an additional link to the existing row for the video so as not to lose the event information.

If you'd rather have duplicated records, one for the event, and one for the video, I'm happy to refactor this change. Perhaps the video link could go into the "writeups" section with some of the other videos.

## Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
<!--- If it fixes an open issue, please link to the issue here. -->
- [ ] I have raised an issue to propose this change ([required](https://github.com/openfaas/faas/blob/master/CONTRIBUTING.md))
- [X] My issue has received approval from the maintainers or lead with the `design/approved` label
Spoke with Alex via Slack

## How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
Verified the links were functional and previewed the markdown rendering with VSCode

## Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [X] Bug fix (non-breaking change which fixes an issue)
- [ ] New feature (non-breaking change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)


## Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [X] My code follows the code style of this project.
- [X] My change requires a change to the documentation.
- [X] I have updated the documentation accordingly.
- [X] I've read the [CONTRIBUTION](https://github.com/openfaas/faas/blob/master/CONTRIBUTING.md) guide
- [X] I have signed-off my commits with `git commit -s`
- [ ] I have added tests to cover my changes.
- [X] All new and existing tests passed.
