Running the benchmark with SwiftyJSON 3.1.4 (currently the latest) shows a 25% perf gain with JASON, on-device with a 5C.

Just wanted to make a note for others who might be searching for on-device benchmarks, feel free to close the issue.

Related: the following test case shows a 15x speed improvement with JASON over SwiftyJSON in what I have found to be the most frequent bottleneck in my projects (large NSDictionary data objects):
https://github.com/delba/JASON/pull/42
The issue comes up if I use JASON+JSONKey.swift included in my project.
From what I gather by reading #25, the recommended practice is to copy-paste source code instead of using a package manager if you want any of the extensions.

Perhaps the extensions could be supplied through [subspecs in CocoaPods](https://guides.cocoapods.org/syntax/podspec.html#group_subspecs)? It is how PromiseKit handles extensions https://github.com/mxcl/PromiseKit#extensions.

Carthage does not support subspecs, but you can emulate the behavior by having a separate repository for the optional dependencies. You can still have keep them in one repository by using git submodules.