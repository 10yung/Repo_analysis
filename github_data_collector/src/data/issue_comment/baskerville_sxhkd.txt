Extra description needed?
Using the following config you can trigger this behaviour by pressing the pattern once. Then with every press of **b** the notification is send. Pressing **Escape** does not help to exit the chord. 

It seems that the order of the patterns has a influence in this. When you switch them the chord does not work at all. 

```
#
# steps to reproduce bug
#

control + super + alt + l; b
	notify-send bug

# expand a window by moving one of its side outward
control + super + alt + l
	notify-send trigger bug
```
Hi there!

I've recently installed sxhkd on a new Arch install, only to discover that the keyboard I was using - a [Cooler Master CK-530-GKGL1-UK](https://www.coolermaster.com/catalog/peripheral/keyboards/ck530/) - doesn't seem to work with sxhkd - and that was the only application I found that it doesn't work with.

To be clear: I can type using this keyboard, and I can use keyboard shortcuts with any application, but sxhkd does not respond to shortcuts. If I unplug this keyboard and use another one (such as the corsair K70 LUX keyboard I'm typing from right now), everything works as expected.

I'm not sure what other information you might need from me to investigate this further, but do let me know because I'd love to get my daily-driver office keyboard back in action!
I want to make keybindings that are only working for different desktop states. Here are some examples below.

1. When VSCode or Chromium is open, Super+Q should play Ctrl+W on the app. 
    Else Super+Q should quit the application. 
2. When the focused desktop is empty C key should open Chromium.
    Else C key should be replayed on the client.

The first can be present all the time in the config. But the second shouldn't add more hassle for example if I write a text, I don't want to run every time a bash script when I press the C key. 

Thanks
Using this tip, you will be able to **simulate some vim digraphs** using **sxhkd** and **xdotool**, meaning it would work in any terminal application (including the shell) and not just in vim. 

Here is an example. When you need to add digraphs you will find symbols in this file: `/usr/include/rfb/keysym.h`, potentially with the help of `:UnicodeTable` (a vim plugin) and or `:he digraphs` in vim.

```
# poor man's vim digraphs w/ sxhkd:

shift + ctrl + k ; {a,e,i,o,u} ; {apostrophe,exclam,greater,colon}
    xdotool key --clearmodifiers {a,e,i,o,u}{acute,grave,circumflex,diaeresis}

# for uppercase, there might be better ways. A difference here 
# with vim is that you will have to keep shift pressed throughout 
# the end of the sequence (notice apostrophe becoming 
# quotedbl, other characters are already using the shift key)

shift + ctrl + k ; shift + {a,e,i,o,u} ; {quotedbl,exclam,greater,colon}
    xdotool key {A,E,I,O,U}{acute,grave,circumflex,diaeresis}

shift + ctrl + k ; c ; comma
    xdotool key ccedilla

shift + ctrl + k ; shift + c ; less
    xdotool key Ccedilla

shift + ctrl + k ; d ; g
    xdotool key degree

shift + ctrl + k ; s ; s
    xdotool key ssharp

shift + ctrl + k ; a ; e
    xdotool key ae

shift + ctrl + k ; o ; e
    xdotool key oe

shift + ctrl + k ; shift + o ; {_, shift + } e
    xdotool key --clearmodifiers OE

```

Remarks:
1. you can not use native `Ctrl+k` as in vim, or you will lose the digraphs ability in vim. The above example therefore used `shift + ctrl + k`.
2. you will have to manually enter all digraphs you need in your `sxhkdrc` file. I only include a few a them here.
3. using a shell to run xdotool each time one of those digraph character is output may seem costly. I recommend it for occasional use only.
4. For uppercase version of Eacute, Agrave, ... you will need to maintain the shift key pressed through the end of the sequence (see comment in above snippet). There might be other ways.
5. The **timing seems important**, sometimes it won't work if you are to fast or too slow, I am not sure how to improve this.

~~Maybe due to the way of sxhkd's way of working with `;` it seems that this **randomly works** or doesn't work. It may also be my mappings. Might also be related to xdotool ( https://github.com/baskerville/sxhkd/issues/86 )~~ (fixed with `xdotool --clearmodifiers`, seemingly the shift in `Shift + Ctrl + k ; a ; exclam (i.e. **Shift** + 1 )` was intercepted by xdotool when typing e.g. egrave, resulting in something like EGRAVE (-> i.e. not working most of the time) or Egrave (-> i.e. working only sometimes) based on your timing).

I will leave this idea open and maybe someone with a better understanding of sxhkd can help us improve this. For my occasional use of this, it works quite well enough.
I'm trying to toggle both "fullscreen" and "floating" in the same binding.

This is the code so far:

```
super + {_,shift + }f
    if bspc query -N -n .focused.{floating,fullscreen}; then \
        bspc node -t pseudo_tiled; \
    else \
        bspc node -t {floating,fullscreen}; \
    fi
```

The "shift" binding doesn't work. Without shift it works though.

If I separate the code in 2 bindings, it works. It's a non issue to me because I made it work with 2 bindings, but it can be a bug, I don't know.

Using bspwm 0.9.9 and sxhkd 0.6.1
I want to use `button12` on my mouse as a modifier key, so I can change the volume by holding it down and scrolling, but it doesn't seem possible.

The straight-forward binding of:
```
button12 + button4
  amixer -D pulse sset Master 5%+
button12 + button5
  amixer -D pulse sset Master 5%-
```
changes the volume on _every_ scroll event and does nothing when `button12` is held.

Trying to get around this I tried sending fake modifier presses instead (I have Ctrl+Super+Shift+Scroll set to change volume), but the release command is never sent so after the first press, every scroll event continues to change the volume:
```
button12
  xte 'keydown Control_L' 'keydown Super_L' 'keydown Shift_L'
@button12
  xte 'keyup Control_L' 'keyup Super_L' 'keyup Shift_L'
```

The first issue seems like a bug, but is there a way to get around this?


![sxhkdIssue](https://user-images.githubusercontent.com/57366179/68143046-9d8e2e80-fefe-11e9-8f97-70b95092a59c.png)

When attempting to run sudo make to install sxhkd, I get an error saying no such file or directory referring to xcb. I have made sure that xcb is installed, so I'm not sure what's going on.
This is not really an issue for me, but I thought it's interesting behaviour and might be worth investigating.
This is the relevant part of my config (I have fish set as my default shell):
```
#######
#Focus#
#######

#Focus node in direction
super + {h,j,k,l}
	{set wdir west;set ddir prev;,set wdir south;,set wdir north;,set wdir east;set ddir next;} \
	if ! bspc node -f $wdir; \
		bspc desktop -f $ddir; \
	end

#Focus next/previous desktop
super + {comma, period}
	bspc desktop -f {prev,next}.local

######
#Move#
######

#Swap current node with node in direction
super + shift + {h,j,k,l}
	set dx 0;set dy 0; \
	{set wdir west;set ddir prev;set dx -20;,set wdir south;set dy 20;,set wdir north;set dy -20;,set wdir east;set ddir next;set dx 20;} \
	bspc node -v $dx $dy; \
	if [ $status -eq 1 ]; \
        	if ! bspc node -s $wdir; \
        	        set id (bspc query --nodes --node); \
			bspc node -d $ddir; \
			bspc node -f $id; \
        	end; \
	end

#Move current node( and focus) to next/previous desktop
super + shift + {comma, period}
	set id (bspc query --nodes --node); \
	bspc node -d {prev,next}; \
	bspc node -f $id
```
To reproduce:
`killall sxhkd`
`setsid -f sxhkd`
and close the terminal emulator (in my case alacritty) window
(Interestingly everything works as normal as long as you don't close the window, which is weird since sxhkd shouldn't be a child of it anymore)

Now for some reason the commands in the move section aren't working anymore, and I can not switch desktops via `super + {h,j,k,l}`, but I can with `super + {comma, period}`.

For further debugging I tried this:
`mkfifo /tmp/sxhkddebug`
`cat /tmp/sxhkddebug`
Then in another terminal emu window:
`setsid -f sxhkd -s /tmp/sxhkddebug`
Then close the window, and watch the cat output.
Unfortunately I couldn't spot anything out of the ordinary there..
