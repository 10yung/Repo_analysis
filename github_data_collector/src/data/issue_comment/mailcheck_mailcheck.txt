Hi, I just wanted you to know that the blog post that relates to Sift3 which you use in Mailcheck has now moved to https://siderite.dev/blog/super-fast-and-accurate-string-distance-sift3.html/.

 Thanks!
Siderite
Hi! I've just released a similar library for PHP: https://github.com/devnix/mailcheck

It uses the Levenshtein algorithm to find suggestions and uses a different strategy for suggesting unknown hostnames by suggesting just the TLDs.

I wrote it because I felt the Javascript version too buggy for my needs. If you are willing to give the project a breeze and try to test and standardize the libraries I would love to get my repo added to the organization. Otherwise, I would prefer to maintain it myself.

I would love to hear your thoughts!
What is the simplest way to highlight the corrected part of the email ?
https://docs.npmjs.com/misc/developers#keeping-files-out-of-your-package

Fixes #169

It's generally good practice IMO to keep only the things consumers need to use your lib in npm. In this case, your specs folder references a vulnerable version of jquery, which is fine since it's not used at runtime, but it causes false positives for vulnerability scanners like retireJS.

Keeping your npm bundle slim is also good for helping fight node_modules cruft and slow installs.
RetireJS is failing with this:

```
/home/circle/wealthsimple/node_modules/mailcheck/spec/lib/jquery.js
 ↳ jquery 3.3.1 has known vulnerabilities: severity: low; CVE: CVE-2019-11358, summary: jQuery before 3.4.0, as used in Drupal, Backdrop CMS, and other products, mishandles jQuery.extend(true, {}, ...) because of Object.prototype pollution; https://blog.jquery.com/2019/04/10/jquery-3-4-0-released/ https://nvd.nist.gov/vuln/detail/CVE-2019-11358 https://github.com/jquery/jquery/commit/753d591aea698e57d6db58c9f722cd0808619b1b
```

Looks like your use of JQuery here is for unit tests only correct? If so how do you feel about excluding the `spec` folder from the files that get shipped to npm?



mailw.com is not close enough to suggest that the user entered the wrong domain name

Are you going to correct maila.com thru mailz.com too?

Are you correcting mail.com which is a valid domain?

You should only be correcting some that looks like the domain. Why wouldn't mailw.com be closer to mail.com? Are you promoting Google?

I own mailw.com

Support can be added for the `pm.me` domain, which is ProtonMail's short email domain name. See https://pm.me/.

### Steps to reproduce
```js
Mailcheck.run({
    email: "joeri@pm.me",
    suggested: (suggestion) => console.log(`Mailcheck doesn't know about pm.me, suggested ${suggestion.full}`),
    empty: () => console.log("Mailcheck knows about the pm.me domain"),
});
```

### What I expect to happen
Mailcheck runs the `empty` callback. The console shows

`Mailcheck knows about the pm.me domain`

### What actually happens
Mailcheck runs the `suggested` callback. The console shows:

`Mailcheck doesn't know about pm.me, suggested joeri@gmx.de`
This make it possible to use the package as a middleware, so, if the email checked is valid, it will return the already valid value
.gouv.fr is a top level domain used by french administration. Examples:
* https://www.economie.gouv.fr/
* https://www.ecologique-solidaire.gouv.fr/
* https://www.impots.gouv.fr
* …

The issue is that without this commit, mailcheck will propose .gov
instead of .gouv.fr. I don't think that members of french administration
will be happy to be suggested to use american domain in case of a typo ;)
Before vs. After
![image](https://user-images.githubusercontent.com/3408480/40275881-f062bfce-5bb0-11e8-86f8-56f8b486cce1.png)
