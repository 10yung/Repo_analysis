Hi, would it be possible to update this template to recent versions of play, scala an sbt?
When I try installing the project from the command line by typing `sbt new vmunier/play-scalajs.g8`, I get following error:

[error] java.io.IOException: Unable to delete file: D:\Users\xxxx\AppData\Local\Temp\giter8-12821319927662\src\main\g8\.gitignore

I have confirmed the file exists and my user account has full access rights to it. I was able to delete it from the explorer without any issues.

The project seems to be create fine.

This is on Windows 10 x64 pro. I have git command line and TortoiseGit installed on my machine.

I define a new Xyz controller, and add some actions, such as all / create / update / save and so on.
The GET route and  samples is work.
However, when I try add an POST action, and add form in the views, the compiler does not recognize routes.XyzController.save?

@helper.form(action = routes.XyzController.save()) {
... ...
}

It show error:  **value XyzController is not a member of object controllers.routes**

Can you advise the solution? Thanks.
To reproduce:

1) Download the project.
1) `mv client/src/main/scala/example/ScalaJSExample.scala client/` (This is totally valid in sbt!)
2) `rm -r client/src/`
3) `sbt run`
4) Open `localhost:9000`. Looks good, right? FastOpJS runs fine.
5) Modify the message in `client/src`.
6) Reload the page.

Expected behavior: It should recompile the Scala.js code and show the new message.

Actual behavior: It shows the old message and doesn't bother to recompile.
Is it possible to include static assets (namely images), served from Play and referenced from Scala.js code? Tricky because—when, for example, using [sbt-digest](https://github.com/sbt/sbt-digest) to fingerprint assets—the final asset name isn't known. Soliciting ideas or guidance here since reverse `Assets` routes and `AssetsFinder` can't be used and little on this topic turned up in my searches. (Reposted from ochrons/scalajs-spa-tutorial#65 to gather a larger audience.)
That would be great if this sample project had a few integration tests. That way it will be easier for people adopting Scalajs + Play + SBT combo. 

There are some caveats (I believe because the way `sbt-web` works: https://github.com/sbt/sbt-web/issues/54). But it would be nice to mention the best workaround here. 
