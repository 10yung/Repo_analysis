I missed an injection point added in #514

People on the internet kept echoing the idea that Ludwig is "drag and drop" but I have not seen any documentation that make this claim, is it true?

For reference here are some "drag and drop" repos
- https://github.com/sony/nnabla
- https://github.com/biolab/orange3
- https://github.com/ICT-BDA/EasyML
- https://github.com/libfann/fann (3-rd party drag and drop)
- https://github.com/rapidminer/rapidminer-studio
- https://github.com/knime/knime-core
- https://github.com/Waikato/weka-trunk
- https://github.com/ibcn-cloudlet/dianne
- https://github.com/acumos/design-studio
**Describe the bug**
Some datasets cause hangup with no progress being made. 

**To Reproduce**
Unfortunately, I don't know if I can provide a reproducer since the data is custom data. However, I am happy to provide log info or any other data that would be helpful. The log shows deadlock on 1st epoch 

1,0]<stdout>:╒══════════╕
[1,0]<stdout>:│ TRAINING │
[1,0]<stdout>:╘══════════╛
[1,0]<stdout>:
[1,0]<stdout>:
[1,0]<stdout>:Epoch   1
Training: 100% 377/377 [01:32<00:00,  4.07it/s][1,0]<stdout>:
Evaluation train: 100% 377/377 [00:25<00:00, 14.82it/s][1,0]<stdout>:

Train set = ~900K rows rows, 900 features
Valid set = ~100K rows

[1,0]<stderr>:[2020-01-10 19:52:29.658590: W horovod/common/stall_inspector.cc:105] One or more tensors were submitted to be reduced, gath
ered or broadcasted by subset of ranks and are waiting for remainder of ranks for more than 60 seconds. This may indicate that different r
anks are trying to submit different tensors or that only subset of ranks is submitting tensors, which will cause deadlock.
[1,0]<stderr>:Stalled ranks:
[1,0]<stderr>:0: [optimizer/DistributedAdamOptimizer_Allreduce/HorovodAllgather_optimizer_gradients_concat_0, optimizer/DistributedAdamOpt
imizer_Allreduce/HorovodAllgather_optimizer_gradients_concat_10_0, optimizer/DistributedAdamOptimizer_Allreduce/HorovodAllgather_optimizer
_gradients_concat_11_0, optimizer/DistributedAdamOptimizer_Allreduce/HorovodAllgather_optimizer_gradients_concat_1_0, optimizer/Distribute
dAdamOptimizer_Allreduce/HorovodAllgather_optimizer_gradients_concat_2_0, optimizer/DistributedAdamOptimizer_Allreduce/HorovodAllgather_op
timizer_gradients_concat_3_0 ...]
[1,0]<stderr>:1: [optimizer/DistributedAdamOptimizer_Allreduce/HorovodAllgather_optimizer_gradients_concat_0, optimizer/DistributedAdamOpt
imizer_Allreduce/HorovodAllgather_optimizer_gradients_concat_10_0, optimizer/DistributedAdamOptimizer_Allreduce/HorovodAllgather_optimizer
_gradients_concat_11_0, optimizer/DistributedAdamOptimizer_Allreduce/HorovodAllgather_optimizer_gradients_concat_1_0, optimizer/Distribute
dAdamOptimizer_Allreduce/HorovodAllgather_optimizer_gradients_concat_2_0, optimizer/DistributedAdamOptimizer_Allreduce/HorovodAllgather_op
timizer_gradients_concat_3_0 ...]




**Expected behavior**
Expect to make training progress.

**Environment (please complete the following information):**
 - OS: Ubuntu 
 - Version 18.04
- Python version 3.6.6
- Ludwig version 0.2.1

horovodrun  -v
0.18.2



Any pointers to overcome this ? 
If split is not "full" (ie: I only want to use training or validation or test data to run a test, for example) and I don't have a .hdf5 file, data is loaded anyway, but without honoring the split request.

Reference: https://github.com/uber/ludwig/blob/master/ludwig/data/preprocessing.py#L804-L840
# Code Pull Requests

Resolves #462.  

#### Summary of changes:
```
Added function kfold_cross_validate() function in train..py that calls full_train() k times. 

Added function generate_kfold_splits() function to utils/data_utils.py

Create `kfold_training_statistics.json` statistics file to hold results from the k-fold cv run

```
A new parameter `--k_fold` is now available for the `ludwig train` command.  This is the help output for the new parameter:
```
 -kf K_FOLD, --k_fold K_FOLD
                        number of folds for a k-fold cross validation run
``` 

#### Work to be completed:
* Add `'aggregate': {...}` node to the `fold_training_statistics.json` file
* Parallel processing for k-fold cv.  Note: I have a working version of parallel processing in a separate branch.  I figure it is easier to debug issues with the serial version.  Once we are comfortable with how k-fold cv processing occurs, I'll add the parallel processing functionality.  Parallel processing is implemented using the `joblib` package.
* add unit test for k-fold cv function
* update documentation


I will start with saying 'sorry' because this is not a feature request but a thank you for what has been developed into Ludwig and a concern about its slow updates(commits) over the last month.

There are scantly any day which I don't refresh Ludwig Github to see if there is any new updates. Hence me noticing the commits had become less and less frequent.

When I found out about Ludwig I was ecstatic. This is exactly what is needed and already being done in other respects with stable baselines for RL and Optuna bayesian optimization libraries.  

Please continue developing this treasure. I am not being able to contribute as such a thing I feel is beyond me at this point technically. Having said that I have no doubt that Ludwig will capture more attention as it progresses. 

Thank you again and best of luck with continued development!

(Feel free to delete this as it is really not about a feature request)

**Describe the bug**
Although `pip install ludwig[viz]` was sucessful, any call of ludwig visualize results in the message `matplotlib or seaborn are not installed. In order to install all visualization dependencies run pip install ludwig[viz]`

**To Reproduce**
Steps to reproduce the behavior:
```
$ pyenv virtualenv 3.7.5 ludwig
$ pyenv global ludwig
$ pip install ludwig
$ pip install ludwig[image]
$ pip install ludwig[viz]
$ ludwig train --data_csv trainingdata.csv --model_definition_file model_definition.yaml
$ ludwig visualize --visualization learning_curves --training_statistics results/experiment_run_1/training_statistics.json
```


**Expected behavior**
Should render graphs and not return an error.

**Environment (please complete the following information):**
- OS: MacOS 10.14.6
- Python version 3.75
- Ludwig version 0.2.1 

**Additional context**
If I start Python from CLI, I can import matplotlib and seaborn with no problem.
Apart, see shell output below:

```
portabel:ludwig user$ pip install ludwig[viz]
Requirement already satisfied: ludwig[viz] in /Users/user/.pyenv/versions/3.7.5/envs/ludwig/lib/python3.7/site-packages (0.2.1)
Requirement already satisfied: absl-py in /Users/user/.pyenv/versions/3.7.5/envs/ludwig/lib/python3.7/site-packages (from ludwig[viz]) (0.8.1)
Requirement already satisfied: numpy>=1.15 in /Users/user/.pyenv/versions/3.7.5/envs/ludwig/lib/python3.7/site-packages (from ludwig[viz]) (1.17.4)
Requirement already satisfied: tqdm in /Users/user/.pyenv/versions/3.7.5/envs/ludwig/lib/python3.7/site-packages (from ludwig[viz]) (4.40.2)
Requirement already satisfied: Cython>=0.25 in /Users/user/.pyenv/versions/3.7.5/envs/ludwig/lib/python3.7/site-packages (from ludwig[viz]) (0.29.14)
Requirement already satisfied: tensorflow==1.14.0 in /Users/user/.pyenv/versions/3.7.5/envs/ludwig/lib/python3.7/site-packages (from ludwig[viz]) (1.14.0)
Requirement already satisfied: PyYAML>=3.12 in /Users/user/.pyenv/versions/3.7.5/envs/ludwig/lib/python3.7/site-packages (from ludwig[viz]) (5.2)
Requirement already satisfied: pandas>=0.19 in /Users/user/.pyenv/versions/3.7.5/envs/ludwig/lib/python3.7/site-packages (from ludwig[viz]) (0.25.3)
Requirement already satisfied: scikit-learn in /Users/user/.pyenv/versions/3.7.5/envs/ludwig/lib/python3.7/site-packages (from ludwig[viz]) (0.22)
Requirement already satisfied: tabulate>=0.7 in /Users/user/.pyenv/versions/3.7.5/envs/ludwig/lib/python3.7/site-packages (from ludwig[viz]) (0.8.6)
Requirement already satisfied: scipy>=0.18 in /Users/user/.pyenv/versions/3.7.5/envs/ludwig/lib/python3.7/site-packages (from ludwig[viz]) (1.3.3)
Requirement already satisfied: h5py>=2.6 in /Users/user/.pyenv/versions/3.7.5/envs/ludwig/lib/python3.7/site-packages (from ludwig[viz]) (2.10.0)
Requirement already satisfied: matplotlib>=3.0; extra == "viz" in /Users/user/.pyenv/versions/3.7.5/envs/ludwig/lib/python3.7/site-packages (from ludwig[viz]) (3.1.2)
Requirement already satisfied: seaborn>=0.7; extra == "viz" in /Users/user/.pyenv/versions/3.7.5/envs/ludwig/lib/python3.7/site-packages (from ludwig[viz]) (0.9.0)
Requirement already satisfied: six in /Users/user/.pyenv/versions/3.7.5/envs/ludwig/lib/python3.7/site-packages (from absl-py->ludwig[viz]) (1.13.0)
Requirement already satisfied: gast>=0.2.0 in /Users/user/.pyenv/versions/3.7.5/envs/ludwig/lib/python3.7/site-packages (from tensorflow==1.14.0->ludwig[viz]) (0.3.2)
Requirement already satisfied: google-pasta>=0.1.6 in /Users/user/.pyenv/versions/3.7.5/envs/ludwig/lib/python3.7/site-packages (from tensorflow==1.14.0->ludwig[viz]) (0.1.8)
Requirement already satisfied: keras-preprocessing>=1.0.5 in /Users/user/.pyenv/versions/3.7.5/envs/ludwig/lib/python3.7/site-packages (from tensorflow==1.14.0->ludwig[viz]) (1.1.0)
Requirement already satisfied: wheel>=0.26 in /Users/user/.pyenv/versions/3.7.5/envs/ludwig/lib/python3.7/site-packages (from tensorflow==1.14.0->ludwig[viz]) (0.33.6)
Requirement already satisfied: protobuf>=3.6.1 in /Users/user/.pyenv/versions/3.7.5/envs/ludwig/lib/python3.7/site-packages (from tensorflow==1.14.0->ludwig[viz]) (3.11.1)
Requirement already satisfied: tensorboard<1.15.0,>=1.14.0 in /Users/user/.pyenv/versions/3.7.5/envs/ludwig/lib/python3.7/site-packages (from tensorflow==1.14.0->ludwig[viz]) (1.14.0)
Requirement already satisfied: wrapt>=1.11.1 in /Users/user/.pyenv/versions/3.7.5/envs/ludwig/lib/python3.7/site-packages (from tensorflow==1.14.0->ludwig[viz]) (1.11.2)
Requirement already satisfied: astor>=0.6.0 in /Users/user/.pyenv/versions/3.7.5/envs/ludwig/lib/python3.7/site-packages (from tensorflow==1.14.0->ludwig[viz]) (0.8.1)
Requirement already satisfied: grpcio>=1.8.6 in /Users/user/.pyenv/versions/3.7.5/envs/ludwig/lib/python3.7/site-packages (from tensorflow==1.14.0->ludwig[viz]) (1.25.0)
Requirement already satisfied: keras-applications>=1.0.6 in /Users/user/.pyenv/versions/3.7.5/envs/ludwig/lib/python3.7/site-packages (from tensorflow==1.14.0->ludwig[viz]) (1.0.8)
Requirement already satisfied: termcolor>=1.1.0 in /Users/user/.pyenv/versions/3.7.5/envs/ludwig/lib/python3.7/site-packages (from tensorflow==1.14.0->ludwig[viz]) (1.1.0)
Requirement already satisfied: tensorflow-estimator<1.15.0rc0,>=1.14.0rc0 in /Users/user/.pyenv/versions/3.7.5/envs/ludwig/lib/python3.7/site-packages (from tensorflow==1.14.0->ludwig[viz]) (1.14.0)
Requirement already satisfied: python-dateutil>=2.6.1 in /Users/user/.pyenv/versions/3.7.5/envs/ludwig/lib/python3.7/site-packages (from pandas>=0.19->ludwig[viz]) (2.8.1)
Requirement already satisfied: pytz>=2017.2 in /Users/user/.pyenv/versions/3.7.5/envs/ludwig/lib/python3.7/site-packages (from pandas>=0.19->ludwig[viz]) (2019.3)
Requirement already satisfied: joblib>=0.11 in /Users/user/.pyenv/versions/3.7.5/envs/ludwig/lib/python3.7/site-packages (from scikit-learn->ludwig[viz]) (0.14.1)
Requirement already satisfied: cycler>=0.10 in /Users/user/.pyenv/versions/3.7.5/envs/ludwig/lib/python3.7/site-packages (from matplotlib>=3.0; extra == "viz"->ludwig[viz]) (0.10.0)
Requirement already satisfied: kiwisolver>=1.0.1 in /Users/user/.pyenv/versions/3.7.5/envs/ludwig/lib/python3.7/site-packages (from matplotlib>=3.0; extra == "viz"->ludwig[viz]) (1.1.0)
Requirement already satisfied: pyparsing!=2.0.4,!=2.1.2,!=2.1.6,>=2.0.1 in /Users/user/.pyenv/versions/3.7.5/envs/ludwig/lib/python3.7/site-packages (from matplotlib>=3.0; extra == "viz"->ludwig[viz]) (2.4.5)
Requirement already satisfied: setuptools in /Users/user/.pyenv/versions/3.7.5/envs/ludwig/lib/python3.7/site-packages (from protobuf>=3.6.1->tensorflow==1.14.0->ludwig[viz]) (41.2.0)
Requirement already satisfied: werkzeug>=0.11.15 in /Users/user/.pyenv/versions/3.7.5/envs/ludwig/lib/python3.7/site-packages (from tensorboard<1.15.0,>=1.14.0->tensorflow==1.14.0->ludwig[viz]) (0.16.0)
Requirement already satisfied: markdown>=2.6.8 in /Users/user/.pyenv/versions/3.7.5/envs/ludwig/lib/python3.7/site-packages (from tensorboard<1.15.0,>=1.14.0->tensorflow==1.14.0->ludwig[viz]) (3.1.1)

portabel:ludwig user$ ludwig visualize --visualization learning_curves --training_statistics results/experiment_run_1/training_statistics.json
 matplotlib or seaborn are not installed. In order to install all visualization dependencies run pip install ludwig[viz]
```


Hi @w4nderlust ,

is there any plan to implement Smith's One Cycle policy in the learning rate scheduler? (https://arxiv.org/pdf/1803.09820.pdf)

I see that currently the default policy is to anneal the LR (or the batch size). The One Cycle scheduler has shown very good results since it was introduced, and it seems much faster to converge than other schedulers.
Hello,
 
In Numerical Input Features and Encoders
"the raw float values coming from the input placeholders are passed through a single neuron for scaling purposes"
Does this model is capable of dealing with training-set that comes from a set of non-linear equations/ single non-linear equation?

Would love to see more information regarding the sigmoid function used in that singe neuron or other relevant information if exists.
Thx!
