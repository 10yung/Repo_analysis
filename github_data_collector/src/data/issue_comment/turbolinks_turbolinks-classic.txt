How to event binding "`page:load`" cache-preview ?
I'm experiencing a weird 'undefined' return value from `Turbolinks.enableProgressBar();` in case when
server renders page without redirection in response to a post request.
Any work around for this issue?

Steps to replicate:
1) Post a form
2) Render action (without redirection; common for a case of form validation error)
3) In JS console try `Turbolinks.enableProgressBar();`

You'll see `undefined`

Rails: 4.2.6
Turbolinks: 2.5.3
Here's the scenario

/page-valid (valid route in the app)
/page-invalid (this route does not exist)

if /page-valid has a link to /page-invalid, and the user clicks on it, we get the standard rails error page as expected, with all the red colors.

Now if the user presses the back button to go back to /page-valid, the styles from the error page are retained.
When a user submits a remote form and the server sends the response to redirect to the same page via turbolinks, the scroll position of the browser window will be reset to 0.

Currently, turbolinks only supports scroll option on client side. This commit adds scroll option for server side.
Using turbolinks 3, current master.

I've this

```
<nav id="m" data-turbolinks-permanent>
   ...
   <span id="notifications_counter" data-turbolinks-temporary>3</span>
</nav>
```

But it does not seems to work, the span content keeps the same. I've tried to write a workaround for this using the differents events of pageload, for example:

```
addEventListener("page:change", function(newBody) {
   counter = $(newBody.data).find('#notification_counter').text();
...
```

But the counter is always the original loaded value, I guess because is inside on permanent, Is there a way to access the real html code that was loaded previous to the permanent modifications? Or this should work?
Documentation says:

Installation
Add gem 'turbolinks' to your Gemfile.

however, adding that will install latest version (5) instead of the latest version of turbolinks-classic.

Also, README says that the `data-turbolinks-permanent` is available since 3.0+ but the latest version is 2.5.3, what is 3.0?
Recently, Safari decided that you can only `pushState` 100 times. After that, `pushState` raises "SecurityError: DOM Exception 18". Here is some more info about this change:

https://forums.developer.apple.com/thread/36650
http://codepen.io/mortenolsendk/post/when-safari-broke-webapps

This patch adds error handling to the `onload` hook when Turbolinks receives a new page. This way, it will catch the pushState error. 

I was able to reproduce the error locally, and this patch "fixed" it for me. 

(Are you still taking patches for 2-5-stable?)

After adding this to my application.js:

``` js
$(function() {
  Turbolinks.ProgressBar.enable();
});
```

Most of my capybara specs failed with this javascript error (although the progress bar worked when I ran the app):

```
 TypeError: 'undefined' is not an object (evaluating 'Turbolinks.ProgressBar.enable')
```

I was able to fix it by using `Turbolinks.enableProgressBar();` instead.

Hello, I'm an intern from [cdnjs](https://github.com/cdnjs/cdnjs). I see that another library called [turbolinks](https://github.com/turbolinks/turbolinks) is already in cdnjs. And I also want to add this library, however, I don't know which files I should pick. Would you please tell me how to add your library or whether it's necessary to add this library? Thank you. :)
cc [cdnjs/#7635](https://github.com/cdnjs/cdnjs/issues/7635)

```
DEPRECATION WARNING: before_filter is deprecated and will be removed in Rails 5.1. Use before_action instead. (called from block (3 levels) in <class:Engine> at /Users/connor/.rvm/gems/ruby-2.3.0/gems/turbolinks-2.5.3/lib/turbolinks.rb:14)
DEPRECATION WARNING: after_filter is deprecated and will be removed in Rails 5.1. Use after_action instead. (called from block (3 levels) in <class:Engine> at /Users/connor/.rvm/gems/ruby-2.3.0/gems/turbolinks-2.5.3/lib/turbolinks.rb:15)
```

`before_filter` and `after_filter` should be updated for turbolinks-classic compatibility with Rails 5 :)
