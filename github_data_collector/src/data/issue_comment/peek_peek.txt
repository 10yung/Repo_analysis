Just wondering if Peek is still targeting compatibility with Rails 4.  The gemspec requires `railties` version 4+ but the [commit located here](https://github.com/peek/peek/commit/b7164ce54b63670f5406f4dc3cb3f5594d71bfaa#diff-2d897183770b62304b14dec143d23898) introduced code that only works in Rails 5+.

That commit adds a reference to the app headers in the ActiveSupport notification payload for getting the request ID.  Those headers were added in [this commit](https://github.com/rails/rails/commit/0c85ff33b1b84ee68cad47f5c294051fecccf115) which targeted Rails 5.0.

I'm not knowledgable enough with Rails internals to come up with a PR to make it work in Rails 4.

(e)
gitlab uses webpack instead of sprockets for assets, this makes adding the js files to vendor/assets/javascripts, which is not a good thing for tracking versions. Having them available via npmjs.com will help in tracking versions easily.

See https://gitlab.com/gitlab-org/gitlab-ce/merge_requests/17819
Installing `peek-git 1.2.2.r7.g0cbdd30-1` on `Kernel: 4.14.16-1-MANJARO x86_64 bits: 64 gcc: 7.2.1 Desktop: Xfce 4.12.4 (Gtk 2.24.31)` I get the following warnings:
```
/tmp/pamac-build-beast/peek-git/src/peek/src/recording/recording-area.vala:43.26-43.41: warning: Gdk.Screen.get_width has been deprecated since 3.22
/tmp/pamac-build-beast/peek-git/src/peek/src/recording/recording-area.vala:44.27-44.43: warning: Gdk.Screen.get_height has been deprecated since 3.22
Compilation succeeded - 2 warning(s)
```

```
/tmp/pamac-build-beast/peek-git/src/peek/tests/../src/recording/recording-area.vala:43.26-43.41: warning: Gdk.Screen.get_width has been deprecated since 3.22
/tmp/pamac-build-beast/peek-git/src/peek/tests/../src/recording/recording-area.vala:44.27-44.43: warning: Gdk.Screen.get_height has been deprecated since 3.22
Compilation succeeded - 2 warning(s)
[ 69%] Generating screen-recorder/test-recording-area.c, ../src/recording/recording-area.c
/tmp/pamac-build-beast/peek-git/src/peek/tests/../src/recording/recording-area.vala:43.26-43.41: warning: Gdk.Screen.get_width has been deprecated since 3.22
/tmp/pamac-build-beast/peek-git/src/peek/tests/../src/recording/recording-area.vala:44.27-44.43: warning: Gdk.Screen.get_height has been deprecated since 3.22
Compilation succeeded - 2 warning(s)
```
On high resolution displays, the GIF is rendered at native resolution by default (which is nice), but often standard definition is sufficient, is rendered faster and uses less memory (one quarter in case of UHD). Therefore it would be nice if an option could be provided for reducing the resolution from whatever resolution is used to the standard resolution.

I thought, maybe it's useful to provide an option to crop the last hundreds of milliseconds (or seconds) at the end of the recording, because they often just contain moving the mouse to the „stop“ button. Or when the user sees, that nothing changed in the last seconds and therefore stops the recording, he/she can crop this superfluous part. This saves space and upload time, especially at higher resolutions like UHD or when big parts of the screen are captured.

Could you please implement showing the file choser for saving the GIF directly after recording is finished? This way rendering can run in the background and we can make the next record without having to wait for the previous rendering to finish. While showing the file choser, rendering can start in a parallel thread for further speed up. :)

Hi @deski -  Following up on our discussion in #78 

This PR adds info from the peek cookie as discussed. It does not save Peek results unless the peek cookie is enabled. Always sets the cookie if peek is enabled.

In the case Peek was not enabled for a request, and is toggled on, `Peek::Views` with a `data-defer-to` are hidden and a refresh message is displayed: 

![screen shot 2015-10-12 at 8 41 31 pm](https://cloud.githubusercontent.com/assets/283496/10442611/22bb6a2e-7122-11e5-8fb3-c3fb5ed333b7.png)

The browser is requesting `/peek/results?request_id=` with no request_id.  How can I track this down?

Original:
I have installed the gem and the views I want, set up routes.rb and the initializer, and added `<%= render 'peek/bar' %>` right after `<body>` in application.html.erb, but the bar does not render.  If I view source I see

```
<body>

  <div class="container">
  ...
```

So it appears to be rendering an empty string/blank line.  Does anyone have any idea what could be going wrong?

As mobile devices and responsive design rises peek would be even better if it wouldn't break on mobile devices aka smaller screens. At the moment the instruments don't wrap when the screen gets smaller, if this would happen, I'd be more than happy! :sparkling_heart:  

Hi!

I'm using modified tipsy library in my project and once enabling Peek creates a mismatch between my "inhouse" version and that bundled with Peek.

Would it be possible to contain it somehow without polluting global namespaces?

Cheers!
