hi,perfare：
I used your tool to export successfully,How to view particle system files in unity3d？
Hi, you can verify, why not works? or is there a way to make it work?
Link [Animator](https://yadi.sk/d/BaJJAa5vzuOevw) Thanks
I even checked on old versions Contra 1.6.47.1653 until 1.13.53.2191 on following versions not wokrs. 
I don't know why and what is the reason?
Is it possible to decompile those? I want to decompile the shaders of a game I used to play but most of them comes into the compiled format. Is there a way around it?

Link for the game files if needed: https://drive.google.com/open?id=1s6nntePCZ4d77OfSXyCMe-B6pZuh1TZl
here 1 mb
https://mega.nz/#!5DpTjQoA!kWJPk_FBfmmI32P3D_Vr1pjgmtHGJQ8x5jpoFfPUi_M 
I was tried to rip ice scream 2's asset and i find rod kid's model in Asset List. but there's problem with rod kid's model, https://imgur.com/a/hnOC5Jd his model looks messup, his legs and arms looks flickering and terrible, he's covered in black glitches, his model looks even horrible. J.'s, Charlie's, Lis' and Mike's models looks all fine but rod kid's not. Perfare needs to fix this
Phoenix Point uses wwise audio and the script dumper will fail on any asset that has a field of certain wwise types. The root issue seems to be that these objects have a "valueGuidInternal" field of type byte[]. The dumper attempts to read this array by re-aligning the stream after each byte, but all the array elements are packed in the asset file with no padding between them.

I am unsure if the packing behavior is specific to these wwise types or would be the case for all arrays of byte (or boolean?). I have made a local change that skips alignment after reading a primitive type if the type is an array element, instead re-aligning after processing the whole array. This seems to work for Phoenix Point but I don't know if it will break other games.
Is it possible to do something about loading all assets to RAM?
AssetStudio can take sometimes more than 12GB of RAM for one game before finalizing reading assets, when it can go down about 40%.
New to this kinda stuff and had this recommended to me, how do I use it/open it?
Currently, when exporting assets from an AssetBundle the files are exported in a directory named after the SerializedFile name, which is definitely a sensible choice.
However, often the assets in the AssetBundle are part of containers that have their own directory structure specified, which allows a more intuitive placement of the exported assets. I think it would be nice to allow the option of recreating the directory structure using a specfied folder as root, with the assets exported at this point in the subdirectory having the name of the container.
 
E.g. CAB-1234 contains the Mesh B-LOD0 and the Texture2D B_alb as part of a container having the internal name and path assets/main/content/models/B.asset, the option would allow to specify a <path>, create the <path>/assets/main/content/models/B.asset directory, and then would export B-LOD0 and B_alb in said directory.
Currently all rigged models on my end always export as unrigged models no matter what i do.