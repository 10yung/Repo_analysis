
Use [CodeLingo](https://codelingo.io) to automatically fix function comments following the
[Code Review Comments guidelines](https://github.com/golang/go/wiki/CodeReviewComments#error-strings).

This patch was generated by running the CodeLingo Rewrite Flow over the "[go-error-fmt](https://github.com/codelingo/codelingo/blob/master/tenets/codelingo/code-review-comments/go-error-fmt/codelingo.yaml)" Tenet. Note: the same Tenet can be used to automate PR reviews and generate contributor docs.

[Install CodeLingo to drive Continuous Higher Standards](https://github.com/apps/codelingo)

[Learn about CodeLingo](https://codelingo.io)



This fixes the build issue in CircleCI due to golint requiring > 1.5 - see [here](https://github.com/golang/lint/issues/198) for details.
I'm trying to do the build of [https://github.com/bfosberry/banano/blob/master/server/main.go](https://github.com/bfosberry/banano/blob/master/server/main.go) code and I am getting the following errors:
- undefined: spdy.NewTransportListener
- undefined: spdy.NoAuthenticator

The code is:

```
listener, err := net.Listen("tcp", fmt.Sprintf(":%s", port))
if err != nil {
    log.Fatal(err)
}

tl, err := spdy.NewTransportListener(listener, spdy.NoAuthenticator)
if err != nil {
    log.Fatal(err)
}
```

This code run with v.0.1.0 of libchain

I haven't found documentation of changes to be made in code when we want to migrate to the current version of libchain.

Adds encoding package to define encoding interface.
Updates spdy package msgpack encoding to using new interface.
Moves msgpack encoding into separate package.

Add in interface to the network transport for creating synchronous and buffered channels.

CBOR should be an option to use for serialization along with msgpack. 

Add support for encoding and decoding Go channels using the channel extended type with the new msgpack library. 

Implement the stream provider interface with an SSH connection
