In a separate commit I cleaned up examples to be a bit more modern, preferring function components, so they are easier to read, then documented that this rule isn't only for `PropTypes`, but that it accepts static types, too.
2010->2020
Previously this would be an error, since the rel wasn't read:

    <a target={"_blank"} href={"//"} rel={"noopener noreferrer"}>

Now this works, so you can enable this rule together with
`jsx-curly-brace-presence`.

Fixes #2508.
Fixes #2467, Fixes #2484, Fixes #1136 
This PR fixes the problem of does not check `jsx-indent` for `JSXText`.

`JSXText` Node is different from other formats.
e.g. The following code.  `JSXText`'s node.value returns `\n    text\n    text\n    `.
```js
const f = () => (
    <div>
        text
        text
    </div>
);
```

<details><summary>changes</summary>

1. add handler for JSXText Node
https://github.com/yannickcr/eslint-plugin-react/blob/0076cb09abfed7a3777102359efb5f39dee2e01e/lib/rules/jsx-indent.js#L406-L412

2. check JSXText Indent
https://github.com/yannickcr/eslint-plugin-react/blob/0076cb09abfed7a3777102359efb5f39dee2e01e/lib/rules/jsx-indent.js#L304-L341

3. add the fix for JSXText
https://github.com/yannickcr/eslint-plugin-react/blob/0076cb09abfed7a3777102359efb5f39dee2e01e/lib/rules/jsx-indent.js#L100-L104

4. add test cases
tests/lib/rules/jsx-indent.js
</details>
This adds a script to auto-generate the list of rules and embeds special tags to README.

Usage:

    $ npm run generate-list-of-rules

Check whether the auto-generated changes are committed:

    $ npm run generate-list-of-rules:check

See also #1742
For SSR apps, there's no DOM variables in node environment. Shall we have an eslint rule to disallow DOM variables in contructor? What about `no-dom-in-contructor`?
```js
constructor(props) {
  super(props)
  this.state = {}
  this.audio = document.createElement('audio') // Error when SSR, document is not defined
}
```
I'm intested in contributing this. Please let me know if it sounds good.
closes #2529 
I think I found the right repo for this.

The image below shows three errors that need to be changed to camel case.
<img width="367" alt="Screen Shot 2019-12-23 at 7 46 54 AM" src="https://user-images.githubusercontent.com/20648924/71361554-ece4f880-2558-11ea-9c29-ada5cc53ed01.png">

Using this `fix all react/no-unknown-property problems` option...
<img width="444" alt="Screen Shot 2019-12-23 at 7 47 47 AM" src="https://user-images.githubusercontent.com/20648924/71361583-05551300-2559-11ea-81e2-47e41162acc1.png">

Fixes all but this one...
![Screen Shot 2019-12-23 at 7 47 35 AM](https://user-images.githubusercontent.com/20648924/71361665-44836400-2559-11ea-8992-5156bb0296bd.png)

It should be auto changed to `xmlnsXlink`
I've found an unexpected(?) change that stems from #2391.

```jsx
<Hello name="John" Number="2" />
``` 

With `{ignoreCase: false}`, which according to the docs [should take case into account](https://github.com/yannickcr/eslint-plugin-react/blob/8671f054191ad5e5cedf91c7c76999bea9b7bf7b/docs/rules/jsx-sort-props.md#ignorecase) when sorting the props, the above example now expects `name` to be sorted before `Number`.

I know _why_ it sorts the way it does: #2391 switched to using `String#localeCompare`, which doesâ€¦

```sh
> 'name'.localeCompare('Number')
-1
```

Looking at the `lib/rules/jsx-sort-props.js` code, I'm not sure what changes would be required to accommodate both this issue and #2381, unfortunately.

So, the crux of this issue is: is this an unexpected change, or should I alter my expectations and update the documentation to reflect this behavior?
**Dependencies:**
- `"eslint": "^6.7.2"`
- `"eslint-plugin-react": "^7.17.0"`

**.eslintrc.json**
```
{
  ...
  "react/jsx-props-no-spreading": [
    "error",
    {
      "exceptions": [
        "AsyncSelect",
        "Select",
        "components.Group",
        "components.ClearIndicator",
        "components.DropdownIndicator"
      ]
    }
  ]
  ...
}
```

**What happens?**

The following patterns are considered warnings regardless they are in the exception list:

```jsx
<components.Group {...groupProps} />
<components.DropdownIndicator {...props} />
<components.ClearIndicator {...props} />
```

The following patterns are **not** considered warnings:

```jsx
<AsyncSelect {...props} />
<Select {...getCustomProps({})} />
```
