Hello, can statik compress and render Vue projects?
 I want to realize the following ideas on your basis.
It seems like there has been a couple of changes, one of which is addition of `-include` flag, since the last release `v0.1.6`. In module-aware set-up, `go get` fetches and installs the latest version found where `-include` is missing for the time being.  Would you mind bumping a release with the latest changes?
Use of this flag can improve determinism of builds. In my employer's environment the use of git across linux/osx hosts can produce different results for the mode (particularity the 'group' and 'other' permission bits).
I accidentally closed #71 
So I created a PR with the same content.
This is a simple replace for statik.go to make the tool vendorable.
With this change one can setup a `gen.go`:

```
package main

import (
	"github.com/rakyll/statik/cmd"
)

func main() {
	cmd.Main()
}
```

and use that in the `go generate` command:

```
//go:generate go run ./gen/gen.go -src=./public -tags !dev

```

This way one can control with gomodules which tag/commit of the tool they want to use.
Is there a way to serve the same files with hash in their name for aggressive caching?
Fix #80

Signed-off-by: Robert-Andr√© Mauchin <zebob.m@gmail.com>
I don't know if some rounding changed but I'm experiencing issues with Golang 1.13:

```
Testing    in: /builddir/build/BUILD/statik-0.1.6/_build/src
         PATH: /builddir/build/BUILD/statik-0.1.6/_build/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/sbin
       GOPATH: /builddir/build/BUILD/statik-0.1.6/_build:/usr/share/gocode
  GO111MODULE: off
      command: go test -buildmode pie -compiler gc -ldflags "-X github.com/rakyll/statik/version=0.1.6 -extldflags '-Wl,-z,relro -Wl,--as-needed  -Wl,-z,now -specs=/usr/lib/rpm/redhat/redhat-hardened-ld '"
      testing: github.com/rakyll/statik
github.com/rakyll/statik/fs
--- FAIL: TestOpen (0.00s)
    --- FAIL: TestOpen/Files_should_retain_their_original_file_mode_and_modified_time (0.00s)
        fs_test.go:195: ModTime(/file.txt) = 2019-03-20 18:56:11 +0000 UTC; want 2019-03-20 18:56:10 +0000 UTC
    --- FAIL: TestOpen/Images_should_successfully_unpack (0.00s)
        fs_test.go:195: ModTime(/pixel.gif) = 2019-03-20 18:56:11 +0000 UTC; want 2019-03-20 18:56:10 +0000 UTC
    --- FAIL: TestOpen/'index.html'_files_should_be_returned_at_their_original_path_and_their_directory_path (0.00s)
        fs_test.go:195: ModTime(/index.html) = 2019-03-20 18:56:11 +0000 UTC; want 2019-03-20 18:56:10 +0000 UTC
        fs_test.go:195: ModTime(/sub_dir/index.html) = 2019-03-20 18:56:11 +0000 UTC; want 2019-03-20 18:56:10 +0000 UTC
    --- FAIL: TestOpen/listed_all_sub_directories_in_deep_directory (0.00s)
        fs_test.go:195: ModTime(/a) = 2019-03-20 18:56:11 +0000 UTC; want 2019-03-20 18:56:10 +0000 UTC
        fs_test.go:195: ModTime(/aa/bb/c) = 2019-03-20 18:56:11 +0000 UTC; want 2019-03-20 18:56:10 +0000 UTC
FAIL
exit status 1
FAIL	github.com/rakyll/statik/fs	0.011s
```
Cannot start Gin and statik as some http port
In the `rename` function the force overwrite flag is tested after a call to `os.Rename`, which succeeds in overwriting a file on OS X but not linux. (incoming PR to fix)