There was an issue with the clear command deleting everything. Image clearing didn't seem to do anything in Shoes 3. Has this problem been fixed in Shoes4?

Otherwise it just keeps stacking images, without the ability to clear the screen.

Does shoes provide a mechanism for detecting HiDPI displays?   I have a project I'd like to create in shoes, however, it needs to be able to detect and display text correctly on 1080p as well as 4k monitors cross platform.
Thanks the great work to create the gem. When i try to package an app, i found if the app include the music, it can not work normally( the music can not play). I have try to package the sample in this project(samples/sounds/simple_sound.rb),  there are no sound but it work normally in the development environment. 

My Steps:
1. git clone 
2. bundle install
3. bin/shoes package --mac samples/sound/simple_sound.rb

So is this a known issue or a bug ? Or just i do the wrong steps? Thanks


Apparently while I've been away Travis CI has started working with Windows. Worth a shot to see if we can simplify our CI down to one spot.

https://docs.travis-ci.com/user/reference/windows/
This PR should fix Lint/HandleExceptions and Lint/RescueWithoutErrorClass rubocop offenses.
Hello

I've installed the shoes gem with 'jruby -S gem install shoes --pre' on my windows machine,
and it succesfully installed 15 gems. But when i try to run 'shoes' with or without any arguments i've tried bareword 'shoes' and to open my app 'shoes src/main/app.rb' and packaging my app 'shoes package --jar src/main/app.rb'  but all of the above commands result in:
ArgumentError: No gems found matching ''
   select_generator at C:/jruby-9.2.0.0/lib/ruby/gems/shared/gems/shoes-core-4.0.0.rc1/lib/shoes/ui/picker.rb:49
  require_generator at C:/jruby-9.2.0.0/lib/ruby/gems/shared/gems/shoes-core-4.0.0.rc1/lib/shoes/ui/picker.rb:99
                run at C:/jruby-9.2.0.0/lib/ruby/gems/shared/gems/shoes-core-4.0.0.rc1/lib/shoes/ui/picker.rb:28
             <main> at C:/jruby-9.2.0.0/lib/ruby/gems/shared/gems/shoes-core-4.0.0.rc1/bin/shoes-picker:12
               load at org/jruby/RubyKernel.java:994
             <main> at c:\jruby-9.2.0.0\bin\shoes-picker:23

prefixing shoes with bin/ gives me 'bin' is not recognized as an internal or external command,
operable program or batch file. - but given the stacktrace is also clear the gem was found without (and as said its a windows PC)

What should i do in order to get shoes running on my pc? If there is anything i need to provide you to help investigate this dont hesitate to ask. Thanks in advance
Hi,
I' started to play around with shoes4 a little bit. It is a nice project, I like your goal to build apps with same sourcecode for windows, mac and linux.
I'm working on a linux-laptop (Ubuntu 16.04), using RVM to install jRuby (Version-Info: jruby 9.1.17.0 (2.3.3) 2018-04-20 d8b1ff9 Java HotSpot(TM) 64-Bit Server VM 25.171-b11 on 1.8.0_171-b11 +jit [linux-x86_64]) and installed shoes via 
`gem install shoes --pre`

My apps are working, but I'm wondering about startup-time: When I start an example app like:
``
Shoes.app width: 300, height: 200 do
  background lime..blue
  stack do
    para "Welcome to the world of Shoes!"
  end
end

``
with this command:
`shoes example.rb `
then it takes around 20 seconds on my laptop until the message appears on screen. Do I miss something in configuration or reading documentation? Any chance to speed up things?
Thanks in advance for any usefull hint
gTom

Opening this for some feedback

For Issue #778

I have it working with most cases I have found. It took a between my schedule, the complexity, and how much of math I have forgotten.

I wanted it to work with samples/simple_arc.rb (if you put a click event on them) and it mostly does. Since those use nofill, but the default is not, I built out the code to handle both cases.

At opening of PR, I think the main code could use some more comments (similar to those added for #center_point). Also, the specs are just what I have been using to get coverage while I refactored. They could use some work to be clearer at what is being tested. However, I wanted to open this early because I am not sure where the code should live. Should it stay in arc.rb or be broken out somewhere else?

Besides just being a large chunk of logic within arc, it could apply to other shapes. Since at its core an arc is an oval, a good part of the methods would be useable in expansions to Oval#in_bounds?

When I try and run the `.bat` script in the package Windows directory, it flashes up then disappears shortly after and the app doesn't run. This is on my machine with Shoes and a JDK already installed. If I double click on the `jar` to run it or write my own `.bat` script with just the run command in it it works fine. Seems like the checking if Java exists is broken.