Hi, 
I am trying to look around in the wiki but couldn't find any guide on how to run the project in debug mode and how to run boost unit tests.

Sorry for this beginner question since I am very new to C++.
Hi all :-)

I've been using OSRM for a while now but I'm facing an issue for which I don't seem to find a way out, therefore here I am asking for help.

My use case is for tracking and routing of ski sessions on ski slopes and lifts. It's working for the most of it but my problem is in some particular cases with the routing.
Let's say that:
- I'm currently standing in a slope
- In the exact same coordinates there's a lift too, it's over my head. I'm not close to neither the starting or ending point of the latter, let's say half way. 
- I request a routing to reach the top/ending point of the lift

Because the engine doesn't now whether I'm standing on the slope or sitting on the lift, it assumes that I'm in the second case and it tells me to stay on the lift and proceed further till the end.

What I'm trying to achieve is **to find a way to tell the engine that it's not possible to enter a way of type "aerialway" but from the starting or ending point**. 
Can you help me in anyway with this?

Thanks for your help,
Alessandro
Dear maintainers,

As you may find in the attached .osm file, all nodes have really big ids > 9999999999.
[loire.osm.zip](https://github.com/Project-OSRM/osrm-backend/files/4041205/loire.osm.zip)

When I process it with osrm-contract and make it available with osrm-routed 5.19.0, a query like

https://.../route/v1/driving/4.484138488769532,45.541510228130996;4.4870996475219735,45.54508696616638?overview=false&alternatives=true&steps=false&annotations=nodes

gives me the following annotations
```
{"code":"Ok","waypoints":[{"hint":"sQAAgNwAAIDlAQAAHQAAAFICAAAVBgAADxBCQjBdOEBL_m1C_bIqQzlEAAANBAAAilMAAB3bAAABAAAAhWpEACHptgIqbEQAhui2AgIAvwEuiaZu","location":[4.483717,45.541665],"name":"126623790"},{"hint":"SQEAgGcBAIA4AQAAmQAAAAAAAADuAAAAZvL5QSLDdEEAAAAA3yk6QtkrAAB6FQAAAAAAAHshAAABAAAArHdEAJH2tgK8d0QAf_a2AgAArwMuiaZu","location":[4.487084,45.545105],"name":"349379862"}],"routes":[{"legs":[{"steps":[],"weight":537.4,"distance":537.4,"annotation":{"nodes":[1604625344,2455888032,6010937664,7256645296,6208998656,4508343296,3635029600,939062000,6278481792,3977370144,5618166736,1851168448,3461536656,5512249904,7342764128,4935365664,1502573568,2345701904,7905357696,1214328448,4647535552,7875718336,4701186976,721583008,7450880000,7671176016,3106836464,7839090624]},"summary":"","duration":19344.7}],"weight_name":"surface","weight":537.4,"distance":537.4,"duration":19344.7}]}
```

Any of returned node don't exists in the input file.
Why?

What should I do to get a consistent answer with existing nodes please?

I have tracked GPS data of few cyclists. More often then not they travel on a path not shown on OSM. Is there an efficient way to find if there is a road actually present on the path taken by them and then add it to OSM ?
Hi
I want to have the wayId of the highway in the osrm response, if I add it to "ref", will it make problem for OSRM? I read somewhere in the issues that changing "name" and "pronunciation" will make problem, is it the same for "ref"?

Thanks
I tried to build osrm-backend with GCC9 (which is shipped with recent version of Ubuntu).
It fails because of these lines:

- https://github.com/Project-OSRM/osrm-backend/blob/5.22/include/updater/csv_file_parser.hpp#L125
- https://github.com/Project-OSRM/osrm-backend/blob/5.22/src/server/api/parameters_parser.cpp#L50

With the error
```
src/updater/csv_source.cpp:43:31:   required from here
include/updater/csv_file_parser.hpp:125:36: error: moving a local object in a return statement prevents copy elision [-Werror=pessimizing-move]
  125 |             return std::move(result);
	  |                                    ^
include/updater/csv_file_parser.hpp:125:36: note: remove ‘std::move’ call
```

I see that the two std::move that create the issue are removed on master. Any plan to release a 5.23 soon ?
I'm starting to write doc for layout of `.osrm.xxx` files since there's only a [toolchain overview](https://github.com/Project-OSRM/osrm-backend/wiki/Toolchain-file-overview) currently which is not detail enough. It's helpful for me, and I also hope it can be helpful for other people to understand the underlying structure layout.      
There're a lot of `.osrm.xxx` files, understand and write details for them will take time. We may work on them one by one.             

Here's the first doc for `.osrm`: https://github.com/Telenav/open-source-spec/blob/master/osrm/doc/osrm-toolchain-files/map.osrm.md  

Also, a command line tool [osrm-files-extractor](https://github.com/Telenav/osrm-backend/tree/master-telenav/integration#osrm-files-extractor) has been created to load/view the contents. It implements by `golang`, you can build it by your self with latest `go 1.13` or get it by docker if you'd like to have a try:     
```bash
docker pull telenavmap/osrm-backend
docker run -it --entrypoint /osrm-build/osrm-files-extractor telenavmap/osrm-backend
```

If anything not correct or any suggestions, please feel free to ask. Thanks! 

_This is a minor documentation fix._

Replaces references to `include/extractor/guidance/road_classification.hpp` with `include/extractor/road_classification.hpp`.

The latter is included in the project. It looks like that file was moved at some point, but documentation references weren't updated.



I was trying to add exclude flag parameter for toll in the request but there does not seem to be any documentation on how to do it while using nodejs bindings.
I'm running OSRM docker (backend and frontend) with MLD and car profile, german dataset, installed 5 weeks ago.
Calculating a route sometimes unnecessarily leaves and reenters the highway at some exits. E.g. calculating a route from Heidelberg to Karlsruhe has this effect at Bruchsal (https://www.openstreetmap.org/#map=17/49.14659/8.55846) and Karlsruhe Durlach ( https://www.openstreetmap.org/#map=18/49.00257/8.44952 ) but not at the other exits

![OSRM1](https://user-images.githubusercontent.com/48556918/71013499-1208df80-20f1-11ea-8a26-aa39fdffa130.PNG)


with text instructions

![OSRM2](https://user-images.githubusercontent.com/48556918/71013511-1634fd00-20f1-11ea-9f6f-22207b2813c5.PNG)


This happens in my system and on official routing.openstreetmap.de instance 
https://routing.openstreetmap.de/?z=11&center=49.200327%2C8.561096&loc=49.409358%2C8.694724&loc=49.006870%2C8.403420&hl=en&alt=0

but not on demo server
http://map.project-osrm.org/?z=11&center=49.200327%2C8.561096&loc=49.409358%2C8.694724&loc=49.006870%2C8.403420&hl=en&alt=0

Is this an error or an effect avoidable e.g. during data calculation ?
