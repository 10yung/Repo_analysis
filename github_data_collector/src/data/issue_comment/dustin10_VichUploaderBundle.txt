I tried to update our composer.json to use `"doctrine/mongodb-odm": "^2.0"` (instead of currently 1.2), but tests are failing:

```
There were 10 errors:

1) Vich\UploaderBundle\Tests\Command\MappingDebugClassCommandTest::testNotUploadableClass
ParseError: syntax error, unexpected '?', expecting function (T_FUNCTION) or const (T_CONST)

2) Vich\UploaderBundle\Tests\Command\MappingDebugClassCommandTest::testUploadableClass
ParseError: syntax error, unexpected '?', expecting function (T_FUNCTION) or const (T_CONST)

3) Vich\UploaderBundle\Tests\Command\MappingDebugCommandTest::testExistantMapping
ParseError: syntax error, unexpected '?', expecting function (T_FUNCTION) or const (T_CONST)

4) Vich\UploaderBundle\Tests\Command\MappingListClassesCommandTest::testListClasses
ParseError: syntax error, unexpected '?', expecting function (T_FUNCTION) or const (T_CONST)

5) Vich\UploaderBundle\Tests\Functional\UploadTest::testFileIsUploadedWithFileType
ParseError: syntax error, unexpected '?', expecting function (T_FUNCTION) or const (T_CONST)

6) Vich\UploaderBundle\Tests\Functional\UploadTest::testFileIsUploadedWithImageType
ParseError: syntax error, unexpected '?', expecting function (T_FUNCTION) or const (T_CONST)

7) Vich\UploaderBundle\Tests\VichUploaderBundleTest::testSimpleKernel
ParseError: syntax error, unexpected '?', expecting function (T_FUNCTION) or const (T_CONST)

8) Vich\UploaderBundle\Tests\VichUploaderBundleTest::testFilesystemKernel
ParseError: syntax error, unexpected '?', expecting function (T_FUNCTION) or const (T_CONST)

9) Vich\UploaderBundle\Tests\VichUploaderBundleTest::testFlysystemOfficialKernel
ParseError: syntax error, unexpected '?', expecting function (T_FUNCTION) or const (T_CONST)

10) Vich\UploaderBundle\Tests\VichUploaderBundleTest::testFlysystemOneUpKernel
ParseError: syntax error, unexpected '?', expecting function (T_FUNCTION) or const (T_CONST)

--

There was 1 failure:

1) Vich\UploaderBundle\Tests\Command\MappingDebugCommandTest::testNotExistantMapping
Failed asserting that exception of type "ParseError" matches expected exception "Vich\UploaderBundle\Exception\MappingNotFoundException". Message was: "syntax error, unexpected '?', expecting function (T_FUNCTION) or const (T_CONST)" at
VichUploaderBundle/vendor/ocramius/proxy-manager/src/ProxyManager/Configuration.php:29


```
Fix https://github.com/dustin10/VichUploaderBundle/issues/1091

This allows back manual wiring of a Flysystem service in case no bundle is used.
In one of my projects that uses this (fantastic) package I have configured the "vich_uploader.storage.flysystem" service manually and am passing into it a hand-wired Flysystem service, so I don't have either of the recommended Flysystem bundles installed.

![vich](https://user-images.githubusercontent.com/1261752/72645326-00f1ff00-3939-11ea-86e7-c9c6c2ccb4a8.png)

After successfully updating to 1.13.0 I am now encountering the new MissingPackageException at run time. Are the bundles absolutely necessary moving forward due to structural changes to Vich Uploader?
<!-- Fill in the relevant information below to help triage your issue. -->

|    Symfony        |   PHP | 
|------------ | -----
| 5.0     | 7.3.12

### Support Question
Hi,

How to import multiple files to the same entity ?

I have Candidate entity which can import one or more (it can be 2, 3, 4....) files and i need to display all of them at the same time.
They are questions about how to import 2 files but, on my case, i do know how many files the candidate will import.

Your documentation explain how to import one file but i do know how to implement it with multiple file for the same entity.

<!-- Describe the issue you are facing here. -->

<!-- Fill in the relevant information below to help triage your issue. -->

|    Q        |   A
|------------ | -----
| Version     |  Lastest

<!--
Before asking question here, please try asking on StackOverflow first.
Keep in mind that GitHub is primarily an issue tracker.
-->

### Support Question

I am trying to generate a link to my file uploaded on S3 with this bundle on a private bucket.

Looking at the doc I am using 

`vich_uploader_asset(user.deck, 'documentFile')`

this generates a link like this:

> https://console.aws.amazon.com/s3/buckets/myprivate-bucket/decks/mydoc.pdf?region=us-east-1

this link doesn't work. It should be :

> https://myprivate-bucket.s3.us-east-1.amazonaws.com/decks/mydock.pdf

Or alternatively:

> https://s3.console.aws.amazon.com/s3/object/myprivate-bucket/decks/mydoc.pdf?region=us-east-1&tab=overview

how do I change this ? Am i doing something wrong? I am using the basic configuration from this repo/doc

Thank you
I am using Symfony 5, I have successfully uploaded the image files and stored the file names into the database using the bundle, but now I have trouble getting the url to display them. I want to get only the uri to the file, not full path, like this `www.abc.com/img` instead of `www.abc.com/img/1.jpg` 

my setting in yaml file:
```
vich_uploader:
    db_driver: orm

    mappings:
        image:
            uri_prefix: /img
            upload_destination: '%kernel.project_dir%/public/images
```

controller:
```
public function index(UploaderHelper $helper)
{
    $image = new Image(); // Image entity
    $path = $helper->asset($image , 'imageFile');

    var_dump($path );
}
```

I followed the instruction from the doc, passing in the image entity and imageFile to the helper function, but var_dump gives me a "NULL" value, no path.
|    Q        |   A
|------------ | -----
| Version     | 1.10.2


### Support Question

I'm trying to set up VichUploaderBundle to attach a fixed number of images to a Doctrine-managed entity in Symfony 4.3.

Each image is an entity and I use in my controller a form with a collection.

```
class PosteType extends AbstractType
{
    public function buildForm(FormBuilderInterface $builder, array $options)
    {
        $builder
            ->add('images', CollectionType::class, [
                'entry_type' => PosteImageType::class,
                'entry_options' => [
                    'label'     => false,
                    'attr' => ['class' => 'item item-file'],
                ],
                'allow_add' => false,
                'allow_delete' => false,
                'by_reference' => false,
                'prototype'    => true,
                'error_bubbling' => false,
                'required'     => true,
                'label' => 'Photos tracteur',
                'attr' => [
                    'class' => "collection collection-file collection-immutable",
                ],
                'mapped' => true,
            ])
        ;
    }

    public function configureOptions(OptionsResolver $resolver)
    {
        $resolver->setDefaults([
            'data_class' => Poste::class,
        ]);
    }
}
```
```
class PosteImageType extends AbstractType
{
    public function buildForm(FormBuilderInterface $builder, array $options)
    {
        $builder
            ->add('file', FileType::class, [
                'label' => false,
                'required' => true,
                'multiple' => false
            ])
        ;
    }

    public function configureOptions(OptionsResolver $resolver)
    {
        $resolver->setDefaults([
            'data_class' => PosteImage::class,
        ]);
    }
}
```

Controller:

```
public function new(Request $request): Response
    {
        $poste = new Poste();

            for($i = 1; $i <= 3; $i++){
                $image = new PosteImage();
                $poste->addImage($image);
            }

        $form = $this->createForm(PosteType::class, $poste);
        $form->handleRequest($request);

        if ($form->isSubmitted() && $form->isValid()) {

            $entityManager = $this->getDoctrine()->getManager();
            $entityManager->persist($poste);

            $entityManager->flush();

            return $this->redirectToRoute('new');
        }
    }
```

But when I validate the form I only have 2 images that are downloaded. if I dump data of images field in my controller I have one of 3 images that remains an UploadFile:

```
ArrayCollection {#1607 ▼
  -elements: array:3 [▼
    0 => PosteImage {#1243 ▼
      -id: null
      -file: File {#2187 ▶}
      -nom: "5db9997bc6f3b172486170.jpg"
      -dateCreation: DateTime @1572444539 {#1727 ▶}
      -poste: Poste {#973 ▶}
    }
    1 => PosteImage {#1245 ▼
      -id: null
      -file: File {#2180 ▶}
      -nom: "5db9997bc78df327681101.jpg"
      -dateCreation: DateTime @1572444539 {#1735 ▶}
      -poste: Poste {#973}
    }
    2 => PosteImage {#1246 ▼
      -id: null
      -file: UploadedFile {#18 ▶}
      -nom: null
      -dateCreation: DateTime @1572444539 {#1744 ▶}
      -poste: Poste {#973}
    }
  ]
}
```
If I download 2 images everything works, if I download 3 or more images only n-1 are downloaded.

thank you for the help
i create yaml 
```     
- { property: 'bannerImage.desktopImageFile', type: 'image', label: 'Desktop', template: 'admin/field_vich_uploader_image.html.twig' }
```
when bannerImage is null i have exception
### BC Break Report

<!-- Fill in the relevant information below to help triage your issue. -->

|    Q        |   A
|------------ | ------
| BC Break    | yes
| Version     | 1.10.2

#### Summary

<!-- Provide a summary describing the problem you are experiencing. -->

Considering this entity mapping

```
    /**
     * @Assert\NotBlank()
     * @Vich\UploadableField(mapping="assets", fileNameProperty="filename")
     */
    private $file;
```
#### Previous behavior

<!-- What was the previous (working) behavior? -->

in version `1.10.1` `$profilePhoto->getFile()->getPathname()` will return a relative path like `photos/123456.jpg`  

#### Current behavior

<!-- What is the current (broken) behavior? -->

in version `1.10.2` `$profilePhoto->getFile()->getPathname()` will return an absolute path like `/var/www/html/example.com/public_html/photos/123456.jpg`

#### How to reproduce

1. dump the contents of a "file", note the path variables
2. update vich uploader bundle
3. dump the contents of a "file", note the path variables
<!--
Provide steps to reproduce the BC break.
If possible, also add a code snippet with relevant configuration, mappings, etc.
Adding a failing Unit or Functional Test would help us a lot - you can submit it in a Pull Request separately, referencing this bug report.
-->


Hi, I'm trying since several month to upload a file on a S3 (AWS), with a Symfony 3.4 API that I've dvelopp.

I've tried to fix it by myself with many tutorials/resources/docs and I'm now facing a wall.. If someone can tell what I'm missing out, I'll be grateful. 

Here's my conf:

composer.json
```JSON
"require": {
        "php": ">=5.5.9",
        "aws/aws-sdk-php": "^3.87",
        "doctrine/doctrine-bundle": "^1.6",
        "doctrine/orm": "^2.5",
        "friendsofsymfony/rest-bundle": "^2.4",
        "incenteev/composer-parameter-handler": "^2.0",
        "knplabs/knp-gaufrette-bundle": "^0.5.3",
        "league/flysystem-aws-s3-v3": "^1.0",
        "nelmio/api-doc-bundle": "^3.3",
        "nelmio/cors-bundle": "^1.5",
        "oneup/flysystem-bundle": "^3.0",
        "sensio/distribution-bundle": "^5.0.19",
        "sensio/framework-extra-bundle": "^5.0.0",
        "symfony/form": "3.4.*",
        "symfony/monolog-bundle": "^3.1.0",
        "symfony/polyfill-apcu": "^1.0",
        "symfony/serializer": "3.4.*",
        "symfony/swiftmailer-bundle": "^2.6.4",
        "symfony/symfony": "3.4.*",
        "twig/twig": "^1.0||^2.0",
        "vich/uploader-bundle": "^1.8",
        "white-october/pagerfanta-bundle": "^1.2"
    }
```

vich / gaufrette
```yaml
knp_gaufrette:
    stream_wrapper: ~
    adapters:
        document_adapter:
            aws_s3:
                service_id: ct_file_store.s3
                bucket_name: '%AWS_BUCKET_NAME%'
                detect_content_type: true
                options:
                    create: true
                    directory: uploads/landingpage
    filesystems:
        document_fs:
            adapter:    document_adapter

vich_uploader:
    db_driver: orm
    storage: gaufrette
    mappings:
        document:
            inject_on_load: true
            uri_prefix: "%AWS_BASE_URL%%AWS_BUCKET_NAME%/document"
            upload_destination: document_fs
            namer: vich_uploader.namer_uniqid
            delete_on_update:   true #should the file be deleted when a new file is uploaded
            delete_on_remove:   true #should the file be deleted when the entity is removed
```
Service.yml
```yaml
ct_file_store.s3:
        class: Aws\S3\S3Client
        factory: [Aws\S3\S3Client, 'factory']
        arguments:
            -
                version: '2006-03-01'
                region: '%AWS_S3_REGION%'
                credentials: { key: '%AWS_KEY%', secret: '%AWS_SECRET_KEY%' }
```
My Entity
```php
use Symfony\Component\HttpFoundation\File\UploadedFile;
use Vich\UploaderBundle\Mapping\Annotation as Vich;

/**
 * LandingPage
 *
 * @ORM\Table(name="landing_page")
 * @ORM\Entity(repositoryClass="AppBundle\Repository\LandingPageRepository")
 * @Vich\Uploadable
 */
class LandingPage
{
    /**
     * @ORM\Column(name="image", type="string", length=190, nullable=true)
     *
     * @var string
     */
    private $image;

    /**
     * @Vich\UploadableField(mapping="document", fileNameProperty="image")
     *
     * @var File
     */
    private $imageFile;

    /**
     * @ORM\Column(name="updated_at", type="datetime", nullable=true)
     */
    private $updatedAt;

    /**
     * @param string $image
     *
     * @return LandingPage
     */
    public function setImage($image)
    {
        $this->image = $image;

        return $this;
    }

    /**
     * @return string|null
     */
    public function getImage()
    {
        return $this->image;
    }

    /**
     * If manually uploading a file (i.e. not using Symfony Form) ensure an instance
     * of 'UploadedFile' is injected into this setter to trigger the  update. If this
     * bundle's configuration parameter 'inject_on_load' is set to 'true' this setter
     * must be able to accept an instance of 'File' as the bundle will inject one here
     * during Doctrine hydration.
     *
     * @param File|\Symfony\Component\HttpFoundation\File\UploadedFile $image
     *
     * @return LandingPage
     */
    public function setImageFile(UploadedFile $image = null)
    {
        $this->imageFile = $image;

        if ($image) {
            $this->updatedAt = new \DateTime();
        }

        return $this;
    }

    /**
     * Returns the image to be uploaded.
     *
     * @return File|null
     */
    public function getImageFile()
    {
        return $this->imageFile;
    }
}

```
My Form
```php
<?php

namespace AppBundle\Form;

use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\OptionsResolver\OptionsResolver;
use Vich\UploaderBundle\Form\Type\VichImageType;

class LandingPageType extends AbstractType
{
    /**
     * {@inheritdoc}
     */
    public function buildForm(FormBuilderInterface $builder, array $options)
    {
        $builder->add('imageFile', VichImageType::class, [
            'required' => true,
            'allow_delete' => true,
            'by_reference' => false,
            'allow_file_upload' => true,
        ]);
    }
}
```


The response from the my API : 
```JSON
{
    "code": 400,
    "message": "Validation Failed",
    "errors": {
        "children": {
            "imageFile": {
                "errors": [
                    "This value is not valid."
                ],
                "children": {
                    "file": []
                }
            }
        }
    }
}
```