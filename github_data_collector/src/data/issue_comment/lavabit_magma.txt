Building dspam fails on debian:

I did this:
apt install autoconf vim net-tools mlocate psmisc gcc g++ gawk gcc-multilib make autoconf automake libtool flex bison gdb valgrind valgrind-dbg libpython2.7 libc6-dev libc++-dev libncurses5-dev libmpfr6 libmpfr-dev patch make cmake libarchive13 libbsd-dev libsubunit-dev libsubunit0 pkg-config lsb-release memcached libevent-dev postfix postfix-cdb libcdb1 ssl-cert git git-man liberror-perl rsync wget sysstat inotify-tools python-crypto python-cryptography haveged mariadb-server default-libmysqlclient-dev

When I do build.lib.sh dspam result is:
Finished dspam-extract at 11:08:52 PM on 01/13/2020
Finished dspam-prep at 11:08:52 PM on 01/13/2020


dspam failed at 11:09:30 PM on 01/13/2020
Log: https://share.riseup.net/#_tHAMJjPklnelbiSNNSBLw

Is it something I did not install or is it dspam?
Hi, I've been trying to install this email server for hours now, i did everything from tweaking the INSTALL script to adding extra files manually so it works. After a couple of hours i got it to successfully compile fully and load a config etc... So i tried to find a way to launch it and couldn't get it working, is there an easy install script or some up to date guide. (BTW i use CentOS7 latest release)

Thanks in advance!
-C4T00
Sorry for the small pull request but this broken link was bothering me.
I changed the link from [hashicorp.com](https://app.terraform.io/lavabit) to [vagrantup.com](https://app.vagrantup.com/lavabit).
This change reflects the link on [magmadaemon.org](https://magmadaemon.org).
@gabrielmongefranco thank you for contacting me. To answer your query regarding webmail, the system built directly into magma is only about 80% complete. When development stalled in 2013 all that was left were the RPC calls needed to retrieve (and sanitize) an email message body (aka content), and the calls needed to send a message. Other problems have probably crept in since then. I don't reccomend exposing the `magma` HTTP server to the public network until it's been reviewed, and improved. What it really needs is someone dedicated to finishing and maintaining it. At the request of a contributor I wrote a [developer guide](https://github.com/lavabit/magma/blob/6b88ccf5c7e9f9b5b6ba1233f3d8c8575e65ba91/web/WORKFLOW.md) awhile back, but the person who volunteered to work on the webmail system never made any progress.

Your welcome to play with what has already been done.. Assuming your running the [vagrant sandbox environment](https://vagrantcloud.com/lavabit/magma/), you should be able to access the webmail system via https://localhost:10500/webmail/ assuming port 10500 in the guest has been properly mapped to your host.

That said, because of the inherent security problem with loading keys/data and the code to use it from a server (i.e. the HushMail incident involving Thomas Drake) we've been more focused on developing Volcano, our forthcoming thick mail client. So it hasn't seen much active development since 2013.

While Lavabit doesn't currently offer webmail access because of this, a number of other companies (ie OnionBit) use f/oss webmail systems which access magma over IMAP. That is in fact how the pre-2013 Lavabit webmail system also worked.
@gabrielmongefranco thank you for contacting me. In terms of contributing, we could certainly use your skills. Several things spring to mind.

We need to automate the process of building binary releases for the various popular distros (aka rpm/deb files), and writing a proper install/setup script. Our Jenkins server could handle the former, as it already does nightly build/test jobs on CentOS/Debian/Ubuntu/Fedora, so adding jobs to create binaries for the different platforms and uploading them to https://magmadaemon.org  wouldn't be hard. Building binaries seems like a somewhat pointless effort without an installer though.

The vagrant VMs you mentioned, which eventually evolved into the [roboxes](https//github.com/lavabit/robox/) project, was to create create turnkey magma appliance VMs. But because they lack an install script, they're only being used for cross platform testing at the moment. 

In terms of status on an installer, our current [`INSTALL`](https://github.com/lavabit/magma/blob/6b88ccf5c7e9f9b5b6ba1233f3d8c8575e65ba91/INSTALL) script was written 4 years ago, and is somewhat out of sync with where things are at... files have moved, steps added/removed, etc. Not sure what needs updating. Either way, it's written in `perl`, and should be redone as a `bash` script. A more current, but more obtuse install script is the [`magmad.install.sh`](https://github.com/lavabit/magma/blob/6b88ccf5c7e9f9b5b6ba1233f3d8c8575e65ba91/dev/install/magmad.install.sh) script. What we need is a solid `bash` script which queries the user, like the `perl` version, and performs all of the steps required to install and configure `magmad`.

Our [`build.lib.sh`](https://github.com/lavabit/magma/blob/6b88ccf5c7e9f9b5b6ba1233f3d8c8575e65ba91/dev/scripts/builders/build.lib.sh) script which compiles the bundled `magmad` dependencies would also benefit greatly from a dependency checker. Basically some `bash` logic that figures out which OS your using and then uses the appropriate tool/commands to ensure all the required dependencies are installed. We get lots of reports regarding failed builds that would disappear if we had this.

You also mentioned documentation. We could also use a lot of help in that department. In terms of magma/libdime/libcore, we have lots of documentation, but it's dispersed and hard to find. Even then, much of the documentation is in varying states of accuracy, as things have evolved, and the docs haven't been kept up to date. If you're interested in compiling and editing it all into a comprehensive guide, it would be extremely helpful as well. We need updated guides/docs for building, installing, and managing magma (and libdime/libcore by extension). We could also use help documenting how to troubleshoot common problems, with guides on showing how to use the bundled scripts/tools. In a perfect world, I'd write all this up, and publish it in book form. 

Our developer documentation could also use a refresh, as it would make it easier for newcomers to understand the repo/code structure, contribution requirements, interface usage, etc, if there was a guide to go with the `doxygen` comments.

If you manage to do all that, I could also use help updating the DIME spec. A couple of years ago I decided to shift my focus away from writing the spec, to writing code. As such there are a few very minor things which need to be updated. But mostly there are a number of important sections that were planned, but never written. I would also like to reformat the spec, and publish it as an RFC series once it stabilises. I said when you get done with the rest, because this task is rather involved. I'm actually hoping to hire someone for the task at some point, if our budget allows.

I've posted this else where ([/r/privacy](https://www.reddit.com/r/privacy/comments/9wv2er/can_somebody_explain_to_me_how_darkmail_works/) and [/r/darkmail](https://www.reddit.com/r/darkmail/comments/8p5m47/how_this_work/)) and nobody seems to be able to explain this in simple terms. How does darkmail work? Is it similar to Bitmessage?
curious why its so difficult to deploy our own based on the README.md when simply installing the right binaries and running
magma-build.sh on a frest CentOs 6/7 host might work with the minor fix

magma.output.file must not be set to false if the system has also been configured to daemonize.
The provided configuration is invalid. Exiting.
magma.init != shutdown {8 != 39}
==> default: HTTP / NETWORK / OPTIONS / SINGLE THREADED:                         PASSED
==> default: HTTP / NETWORK / CAMEL / LOGIN / SINGLE THREADED:                   PASSED
==> default: HTTP / NETWORK / CAMEL / BASIC / SINGLE THREADED:                   PASSED
==> default: REGRESSION / MAPPED / FILE DESCRIPTOR LEAK / MULTI THREADED:        PASSED
==> default: REGRESSION / SMTP / DOT STUFFING / SINGLE THREADED:                 PASSED
==> default: REGRESSION / IMAP / SEARCH RANGE PARSING / SINGLE THREADED:         PASSED
==> default: REGRESSION / HTTP / APPEND STRING / SINGLE THREADED:                PASSED
==> default: --------------------------------------------------------------------------
==> default: TEST DURATION:                                                        229s
==> default: TOTAL DURATION:                                                       334s
==> default: --------------------------------------------------------------------------
==> default: 100%: Checks: 133, Failures: 0, Errors: 0
==> default: --------------------------------------------------------------------------
==> default: Error in my_thread_global_end(): 19 threads didn't exit
==> default: Magma shutdown complete.

Error Message:
```
Finished zlib-build at 07:25:27  on 2017-10-31
Finished openssl-build at 07:30:56  on 2017-10-31


mysql-build failed at 07:33:03  on 2017-10-31




build failed at 07:33:03  on 2017-10-31




all failed at 07:33:03  on 2017-10-31


make: *** [Makefile:444: magmad.so] Fehler 1
```

Output of `yaourt` (package manager):
```
2 extra/libmariadbclient 10.1.28-1 [installed]
    MariaDB client libraries
3 extra/mariadb 10.1.28-1 [installed]
    Fast SQL database server, drop-in replacement for MySQL
4 extra/mariadb-clients 10.1.28-1 [installed]
    MariaDB client tools
```

Version of the Code: 11.10. 2017
OS: Arch Linux (up to date)



Sorry for any newbie type questions. I am not a dev. I have run my own email server since around 2013 (no coincidence) using a VPS running postfix, dovecot, etc. It has worked pretty well over the years but I have been looking for an option that would keep my mail encrypted until my email client logs in. Magma looks like it could be a replacement. Is the code OK for simple users like me yet? I was able to get it built on a centos 7 VPS just more or less as a test. I see its sand boxed with nonstandard ports. Is it meant for testing only? Or did I miss a port forwarding step?
Is there a guide for a simple joe with basic linux knowledge yet?
Thanks! 