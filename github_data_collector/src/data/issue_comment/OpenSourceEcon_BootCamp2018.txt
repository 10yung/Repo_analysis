To get the FRED dataset I used 
`pip install pandas_datareader` which has a bug. [This](https://github.com/pydata/pandas-datareader/issues/545) thread recommended using the dev version. 

It worked well for me but is this the best solution?
I'm wondering if the scaling factor in equation 14.9 in the Numerical integration lab (the section on Simpson's rule) is incorrect? I think equation 14.9 should be multiplied by (b-a)/(3(2N+1)) rather than (b-a)/(3(N+1)).
Has anyone run into the following error by any chance? Thanks! 

 File "OSM_example.py", line 52, in <module>
    grid  = TasmanianSG.TasmanianSparseGrid()
  File "/home/jfan3/Desktop/OSM2018/day1_SparseGrid/SparseGridCode/analytical_examples/TASMANIAN_Python/TasmanianSG.py", line 107, in __init__
    self.pLibTSG = cdll.LoadLibrary("../../TasmanianSparseGrids/libtasmaniansparsegrid.so")
  File "/software/python-2.7-2015q2-el6-x86_64/lib/python2.7/ctypes/__init__.py", line 443, in LoadLibrary
    return self._dlltype(name)
  File "/software/python-2.7-2015q2-el6-x86_64/lib/python2.7/ctypes/__init__.py", line 365, in __init__
    self._handle = _dlopen(self._name, mode)
OSError: /lib64/libm.so.6: version `GLIBC_2.15' not found (required by ../../TasmanianSparseGrids/libtasmaniansparsegrid.so)
Exception AttributeError: "TasmanianSparseGrid instance has no attribute 'pLibTSG'" in <bound method TasmanianSparseGrid.__del__ of <TasmanianSG.TasmanianSparseGrid instance at 0x7f56ac8cc170>> ignored

I get the following error when running py.test in the anaconda prompt (using windows machine). It's telling me I have access denied to this specific folder, but I have admin privileges turned on. Does anyone have any ideas about how to fix this? I'm unable to do any of the unit testing homework with this error.

![pytest_error](https://user-images.githubusercontent.com/39198995/41800442-329d89c4-763b-11e8-8c31-50877c04b34d.png)

@quainialberto asked the following with regard to Problem 1 in the [Object Oriented Programming lab](https://github.com/OpenSourceMacro/BootCamp2018/blob/master/Computation/Wk1_PyIntro/ObjectOriented.pdf):

> I am approaching Problem 1 of OOP and we are required to test our object. Since we leant how to do unit testing, can we create a unit test to test our object or we need to write the test like in the example given inside the problem formulation?
Thanks,
Albi

You should do the testing as is stated in Problem 1 of the [OOP lab](https://github.com/OpenSourceMacro/BootCamp2018/blob/master/Computation/Wk1_PyIntro/ObjectOriented.pdf). The testing requested and shown in Problem 1 of OOP is called validation testing and is different from unit testing. Both are important.
For anyone that wants to use Atom and python scripts there is a really handy package in Atom called hydrogen that lets you run code inline like a notebook. However, as far as I can tell there isn't a way to incorporate markdown/latex like in a traditional jupyter notebook.

https://atom.io/packages/hydrogen