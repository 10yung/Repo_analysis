I recently upgraded to XCode 8,after installing pods correctly i get the following error on trying to build my project-
AQGridView/Classes/AQGridViewCell.m:199:57: 'objc_unretainedObject' is unavailable: use a (__bridge id) cast instead

Similar errors are given at about 10 different lines in the pod.
Please update the Repo for XCode 8.

fixes: Application windows are expected to have a root view controller at the end of application launch


I have an older app that I recently opened with XCode 6.3.2. Did a build on a device running iOS 8.3 and it seemed to run fine. XCode pestered me to 

> Validate Project Settings / Update to recommended settings
> After doing so, I see a crash when I run on a device:
> `AQGridViewUpdateInfo line 775 NSUInteger newIndex = _oldToNewIndexMap[oldIndex];
> gets Thread 1:EXC_BAD_ACCESS (code=1, address=0xfffffffffffffff8)`
> Other than updating to the latest version of AQGridView, I've only made 2 changes:
> 1. Changed GUARD_ITEMS so you can build in debug without crashing.
> https://github.com/AlanQuatermain/AQGridView/issues/208
> 2. Workaround for compiler error: too many arguments
> https://github.com/AlanQuatermain/AQGridView/issues/211

I just started working with AQGridView and it's quite brilliant. I however have an issue that's been bugging me for quite a while now.

I use XCode 6 and I found out that my grid view removes items as I attempt to scroll down the view. Sometimes, the items are removed after I select different cells. I've not been able to isolate the cause.

Once the items/cells are removed, any activity on the view causes the app to crash and it points to this line:

`[removedCells makeObjectsPerformSelector: @selector(removeFromSuperview)];`

![screenshot 2015-05-16 16 27 40](https://cloud.githubusercontent.com/assets/1816083/7665870/e4b1a210-fbe8-11e4-8e6d-b4834d7acf2a.png)

![screenshot 2015-05-16 16 32 37](https://cloud.githubusercontent.com/assets/1816083/7665877/31db32ae-fbe9-11e4-806c-be99d879c1ca.png)

When compiling in the newest version of Xcode (beta), the compiler throws an error in AQGridView.m when performing the hit test using the IMP calls.

I've replaced this code with NSInvocation calls instead; it now compiles and runs OK.

Signed-off-by: Carl Partridge carl.partridge@fatattitude.com

I have a basic gridview setup with a basic custom cell (one image, one label). The didSelect method works fine until I introduce a variable Cell Identifier.

One cell identifier will use a frame of 50% width, and the second identifier will use a width of 100%. The 50% Identifier is used in all cases, except for when the datasource count is odd and it is currently the last grid item (ie, two columns until the last item then one column).

The cells are rendered perfectly fine, but when it comes to clicking.. all the 50% ones work, and the 100% width item does not even recognise it is being clicked - nothing!

Test Code... (cellForItemAtIndex)

```
static NSString *CellIdentifier = @"HalfGridCellIdentifier";
static NSString *CellIdentifier2 = @"FullGridCellIdentifier";
ThumbnailGridCell *cell;

/**
 * Odd number of rows, so the last row should always be full width
 */
if (datasource.count > 0 && datasource.count % 2 && index == datasource.count - 1) {
    cell = [[ThumbnailGridCell alloc] initWithFrame: CGRectMake(0, 0, aGridView.frame.size.width, gridSize.height) reuseIdentifier: CellIdentifier2];
}
/**
 * Even number of rows or not last row, so half width
 */
else {
    cell = (ThumbnailGridCell *)[aGridView dequeueReusableCellWithIdentifier: CellIdentifier];
    if (cell == nil) {
        cell = [[ThumbnailGridCell alloc] initWithFrame: CGRectMake(0, 0, gridSize.width, gridSize.height) reuseIdentifier: CellIdentifier];
    }
}
```

Test Code (didSelectItemAtIndex):

```
NSLog(@"clicked item %d", index);
```

I couldn't get the following AQGridView function to return YES for cells in the second column of the grid when tapped:
- (BOOL) _canSelectItemContainingHitView: (UIView *) hitView

I got it working by replacing:

```
 CGPoint hitCenter = [self convertPoint:[hitView center] fromView:hitView];

for ( AQGridViewCell *aCell in [[self visibleCells] copy])
{

    if ( CGRectContainsPoint( aCell.frame, hitCenter ) )
    return ( YES );

}
```

with:

```
UIView *parent = hitView.superview;
while (parent != nil)
{
    if ([parent isKindOfClass:[AQGridViewCell class]])
    {
        return ( YES );
    }
    parent = parent.superview;
}
```

This could possibly even be a bug with UIView's:
- (CGPoint)convertPoint:(CGPoint)point fromView:(UIView *)view;

(hitCenter was outside the grid view but debugging the views in the hierarchy  suggests this could not be the case.)

Anyone fixed this method (AQGridViewUpdateInfo updateNewGridDataAndCreateMappingTables) for 64 bit builds?

I get assertion on:
NSAssert(_oldToNewIndexMap[_oldGridData.numberOfItems] == 0x55555555, @"Eeek! Scribbling on guards didn't work!");

I m using AQGridView inside my project, and i check my memory leaks with instruments- Leaks.
I notice the in this line
NSMutableIndexSet \* animatingInserted = [insertedIndices mutableCopy];
There is a memory leak.

Any ideas?

10x in advance!
Great project!
