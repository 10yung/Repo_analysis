if(name==="PK"){
x=true;
}
else{
//after this alert is on screen I want execution of to be freezed until I get a response from user
// if she/he will click yes I can assign true to x in callback or else false and then I want to proceed
// this freezing is required because if by default name is PK then no need to display alert
// If I am unable to freeze till response I am forced to repeat the code.
//Please suggest some solution to this
swal("Query","Are you PK",...)
}


if(x){
console.log("Welcome PK!!!");
}
I think 40kb for this library is way too much (only counting the JS files). 

It's half the size of jQuery3, and bootstrap 4 is 60 kb.

Afterall, it's an "alert" library?
**sweetalert not working with [testcafe ](https://devexpress.github.io/testcafe/)automation framework (nodejs) . Why it happened, could you please help me out? ðŸ˜Š**

You can find my testcafe automation code below,

/***************************************************************************************************

import { Selector, ClientFunction } from 'testcafe';
import swal from 'sweetalert';
 
fixture `testcafe with sweetalert `
    .page `https://devexpress.github.io/testcafe/`;

test('Test with message box', async t => {
    swal("Hello world!");
    const showMessageBox = ClientFunction(message => {
        return new Promise(resolve => {
            var msgBox = document.createElement('div');
            msgBox.textContent = message;
            msgBox.style['right'] = '500px';
            msgBox.style['top'] = '500px';
            msgBox.style['position'] = 'center';
            msgBox.style['font-size'] = '22px';
            msgBox.style['padding'] = '20px';
            msgBox.style['background-color'] = '#2196F3';
            msgBox.style['color'] = 'white';
            msgBox.style['margin-left'] = '15px';
            msgBox.style['float'] = 'right';
            msgBox.style['font-weight'] = 'bold';
            msgBox.style['cursor'] = 'pointer';
            msgBox.style['line-height'] = '20px';
            msgBox.style['transition'] = ' 0.3s';
            document.body.appendChild(msgBox);
            setTimeout(() => {
                document.body.removeChild(msgBox);
                resolve();
            }, 4000);            
        });
    });
    await t
        .click(Selector('span').withText('Docs'));
    await showMessageBox('Docs link was clicked!'); 
    await t
        .click(Selector('a').withText('Using TestCafe'));
});

***************************************************************************************************/
(Related issues: https://github.com/t4t5/sweetalert/issues/809 , https://github.com/t4t5/sweetalert/issues/893 )

This seems to be an old promblem, but I think is quite important. This bug makes SweetAlert useless as a replacement for the Window.prompt() method.

Also note that this problem seems to occur even with the official example:
Try the second example under https://sweetalert.js.org/guides/#using-dom-nodes-as-content


Example code:
```
document.getElementById("btn").onclick = function() {
 swal("Test default value", {
   buttons: {
    cancel: true,
    ok: {
     value: "Button value"
    }
   },
   content: {
    element: "input",
    attributes: {
     value: "Default value"
    }
   }
  })
  .then((result) => {
   console.log(result);
  });
}
```

Expected behavior.
- If the input text is changed, the new value should be passed as the result.
- If the input text is unchanged, the default value should be passed as the result.

What happens:
- If input text is changed, and [Enter] button is pressed, the new value is passed as expected. This is ok.
- If the [Enter] button is pressed without making any changes, NULL value is passed.
- If the [Ok] button is pressed/clicked, the BUTTON value gets passed regardless of whether the input text was changed or not.

I have a JQkeyboard jquery plugin in my web application. It works well in other textbox but not the input field in sweetalert2. Any solution for this?
Hi I would like to like to test my sweet alert pop up in Visual Studio with Selenium:
Below is my code:
```
WebDriver.FindElement(By.Id("btn_submit")).Click();
WebDriver.FindElement(By.XPath("//div[@class='sweet-alert showSweetAlert visible']"));
var confirm_button = WebDriver.FindElement(By.XPath("//button[@class='confirm']"));
confirm_button.Click();
```
However, there is exception thrown which is unable to locate my XPath for sweet alert, please let me know on the correction of the syntax/sweet alert class/location.
Hello everyone,

First of all, I want to say thank you to all devs working on it because it's a must have.
There is one small thing I need to do with Sweetalert : redirect to another page (ideally using laravel route) when we click a specific button.

I'm using a switch to make multiple step alert generating one sweetalert at a time. 
By specific button I mean the cancel button and another one with catch.

Can someone help me on this ?

Best regards
It would be great if SweetAalert implements a Loading Alert. Just to show an alert dialog with no buttons and a "loading" image while we perform some background tasks.

I have tried to do it using ajax, but it doesn't work.

This will be an excellent option for this amazing tool.
Hi,

We are using sweetalert in our project. Recently we did a **HP Fortify Scan** and found a vulnerability in the sweetalert.min.js, the 'origin' for pushMessage() is '*' which flags as **Overly Permissive Message Policy** during the scan. Is there a fix for this.

This issue is flagged as **Low Severity**.

Thanks.
I need onClose to run when the user clicks outside the sweet alert or on confirm, but not on cancel.
The cancel button makes an async call, which calls another sweet alert.
I have tried the following setups:
First this:
```
MySwal.fire({
  type: 'success',
  showCancelButton: userId === 'new',
  onClose: () => {
    if (userId === 'new') {
      history.push(`/users`);
    }
  },
})
.then(myswallResult => {
  if (myswallResult.dismiss === MySwal.DismissReason.cancel) {
    return sendWelcomeEmail(result.data.id);
  }
})
.then(emailResult => {
  MySwal.fire({
    type: 'success',
    onClose: () => {
      if (userId === 'new') {
        history.push(`/users`);
      }
    },
  });
})
.catch(err => {
  MySwal.fire({
    type: 'error',
    onClose: () => {
      if (userId === 'new') {
        history.push(`/users`);
      }
    },
  });
});
```
Then this:
```
MySwal.fire({
  type: 'success',
  showCancelButton: userId === 'new',
  onClose: () => {
    if (userId === 'new') {
      history.push(`/users`);
    }
  },
})
.then(myswallResult => {
  if (myswallResult.dismiss === MySwal.DismissReason.cancel) {
    sendWelcomeEmail(result.data.id)
      .then(emailResult => {
        MySwal.fire({
          type: 'success',
          onClose: () => {
            if (userId === 'new') {
              history.push(`/users`);
            }
          },
        });
      })
      .catch(err => {
        MySwal.fire({
          type: 'error',
          onClose: () => {
            if (userId === 'new') {
              history.push(`/users`);
            }
          },
        });
      });
  }
});
```

But instead of waiting the second sweet alert, it pushes to '/users' before.