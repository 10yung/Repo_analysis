
ROS Crystal is now EOL: https://github.com/ros/rosdistro/pull/23486

Closes: https://github.com/phpmyadmin/docker/issues/56

# Checklist for Review
-	[x] associated with or contacted upstream?
-	[x] does it fit into one of the common categories? ("service", "language stack", "base distribution")
-	[x] is it reasonably popular, or does it solve a particular use case well?
-	[x] does a [documentation](https://github.com/docker-library/docs/blob/master/README.md) PR exist? (should be reviewed and merged at roughly the same time so that we don't have an empty image page on the Hub for very long)
-	[x] dockerization review for best practices and cache gotchas/improvements (ala [the official review guidelines](https://github.com/docker-library/official-images/blob/master/README.md#review-guidelines))?
-	[ ] 2+ dockerization review?
-	[x] existing official images have been considered as a base? (ie, if `foobar` needs Node.js, has `FROM node:...` instead of grabbing `node` via other means been considered?)
-	[x] passes current tests? any simple new tests that might be appropriate to add? (https://github.com/docker-library/official-images/tree/master/test)

Maybe I can check more boxes but dit not check is I was not 100% sure

cc @J0WI 


We would like to add the [Monica](https://github.com/monicahq/monica) image to the official image repository.

Our current image [monicahq/monicahq](https://hub.docker.com/r/monicahq/monicahq) has reached 4 Million downloads, and I will be glad if we have some review on the best practice or how to improve this image.

---
# Checklist for Review

**NOTE:** This checklist is intended for the use of the Official Images maintainers both to track the status of your PR and to help inform you and others of where we're at. As such, please leave the "checking" of items to the repository maintainers. If there is a point below for which you would like to provide additional information or note completion, please do so by commenting on the PR. Thanks! (and thanks for staying patient with us :heart:)

-	[ ] associated with or contacted upstream?
-	[ ] does it fit into one of the common categories? ("service", "language stack", "base distribution")
-	[ ] is it reasonably popular, or does it solve a particular use case well?
-	[ ] does a [documentation](https://github.com/docker-library/docs/blob/master/README.md) PR exist? (should be reviewed and merged at roughly the same time so that we don't have an empty image page on the Hub for very long)
-	[ ] dockerization review for best practices and cache gotchas/improvements (ala [the official review guidelines](https://github.com/docker-library/official-images/blob/master/README.md#review-guidelines))?
-	[ ] 2+ dockerization review?
-	[ ] existing official images have been considered as a base? (ie, if `foobar` needs Node.js, has `FROM node:...` instead of grabbing `node` via other means been considered?)
-	[ ] if `FROM scratch`, tarballs only exist in a single commit within the associated history?
-	[ ] passes current tests? any simple new tests that might be appropriate to add? (https://github.com/docker-library/official-images/tree/master/test)
 
These images are based of a new staged Dockerfile and support JDK11, 13 and slim varients. The alpine varients are dropped.

Signed-off-by: Greg Wilkins <gregw@webtide.com>
arm version is in progress
maintainers updated according to this comment: https://github.com/docker-library/official-images/pull/5073#issuecomment-565238540
Not only added new images, but cleaned up the old images, updated the Dockerfile formatting
This is wrt the AdoptOpenJDK image. We currently release build binaries for different architectures sometimes with a gap of several weeks. Is it appropriate to wait for all supported arches to be available before creating a PR or do we let the arches trickle in as and when they become ready. Appreciate any thoughts/comments. Thanks !