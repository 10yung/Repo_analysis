I was ecstatic to find `docker-machine-nfs` when I discovered how slow the `vboxfs` performed for running our development environment within containers. Having done some testing with DfM, I'm finding the exact same issues with their `osxfs`. 

That said, I found a DfM solution very similar to this one, called [d4m-nfs](https://github.com/IFSight/d4m-nfs). If I'm not mistaken, it's pretty much doing the same thing as `docker-machine-nfs` but without most of the bells/whistles/features. 

Is this something you'd be able to do? 

If not, would you be open to a PR that attempts to add in the support? I'm happy to give it a shot, although I'm far from well-versed in NFS and the different use cases I'd need to test and how to troubleshoot them. Of course, there's a first time for everything!

Not every terminal supports all colors, so there should be an option to supress them or you get ugly stuff like:

```
[INFO] Configuration:

\t\033[0;35m- Machine Name: default \033[0m
\t\033[0;35m- Shared Folder: /home/fcarey/docker-share \033[0m
\t\033[0;35m- Mount Options: noacl,async \033[0m
\t\033[0;35m- Force: true \033[0m

[INFO] machine presence ...             \033[0;32mOK \033[0m
[INFO] machine running ...          \033[0;32mOK \033[0m
[INFO] Lookup mandatory properties ... \033[0;32mOK \033[0m

\t\033[0;35m- Machine IP: 192.168.99.102 \033[0m
\t\033[0;35m- Network ID: vboxnet0 \033[0m
\t\033[0;35m- NFSHost IP: 192.168.99.1 \033[0m

```

Hey there,
It would be great if it was possible to use different NFS options for different shared folders.  For example, I want to share /Users with the standard "-alldirs -mapall=\$(id -u):\$(id -g)" setup, but I want to share another directory with "-alldirs -maproot=0".  This isn't currently possible, as all shared folders share the same options.  Any ideas?

Add an option to share folders with boot2docker as NFS server and OSX as client.

This is useful for situations where the underlying filesystem needs to be a Linux filesystem.

So, if we want to uninstall the nfs support, is there an easy way to do that?

The configuration and cleanup of the /etc/exports file should be improved. Using the technique of Vagrant could be a good approach:

```
# VAGRANT-BEGIN: 21171 5b8f0135-9e73-4166-9bfd-ac43d5f14261
"/path/to/vagrantfile" 172.28.128.5(rw,no_subtree_check,all_squash,async,anonuid=21171,anongid=660,fsid=3382034405)
# VAGRANT-END: 21171 5b8f0135-9e73-4166-9bfd-ac43d5f14261
```

We should probably use the docker-machine name and would be something like:

```
# DOCKER-MACHINE-NFS-BEGIN: machine-box
/Users 192.168.99.100 -alldirs -mapall=501:20
# DOCKER-MACHINE-NFS-END: machine-box
```

Things to keep in mind:
- What when ip changes? (docker-machine does not provide fixed ip at this moment of writing)
- ... ?
