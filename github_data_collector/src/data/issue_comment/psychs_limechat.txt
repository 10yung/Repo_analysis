Under Preferences->Advanced, I added an option for the user to manually select a path for their dcc downloads. If the user doesn't specify, it will first try to place in ~/Downloads and if not it will fall back to ~/Desktop.
I LOVE limechat, however when file transfers fail for me -- which is common -- I have to start all over again, which can take forever for some large files.

I have to use Colloquy since it supports XDCC resume, which I really don't like. I want to be able to use Limechat instead :(

Please add resume support to Limechat, thanks ðŸ˜ƒ 
I'd like the ability to inject and extract ASCII text from the client. this would grant me the ability to use add on utilities with the client. 
When I close the lid on my Macbook and Limechat is connected to an irc server it starts repeatedly disconnecting and reconnecting if the wifi connection is available. This spams the irc with connection messages and also depletes the laptop battery if not connected to a power source.
Disabling Handoff stopped this behavior, (but now it says this error when I wake the computer from sleep: "The operation couldnâ€™t be completed. (kCFErrorDomainCFNetwork error 2.)").
Since the 2.43 release, LimeChat has been crashing with the following signature when reconnecting (probably due to the deployment target change):

```
Thread 0 Crashed:: Dispatch queue: com.apple.main-thread
0   libobjc.A.dylib               	0x00007fff57c0be9d objc_msgSend + 29
1   net.limechat.LimeChat-AppStore	0x00000001082694fd 0x1081f0000 + 496893
2   com.apple.WebKitLegacy        	0x00007fff3f4c7386 CallFrameLoadDelegate(void (*)(), WebView*, objc_selector*, objc_object*) + 54
3   com.apple.WebKitLegacy        	0x00007fff3f3fba41 WebFrameLoaderClient::dispatchDidFinishLoad() + 81
4   com.apple.WebCore             	0x00007fff3dd3d6af WebCore::FrameLoader::checkLoadCompleteForThisFrame() + 2367
5   com.apple.WebCore             	0x00007fff3dd3ccbb WebCore::FrameLoader::checkLoadComplete() + 507
6   com.apple.WebCore             	0x00007fff3ec27e4f WebCore::DocumentLoader::finishedLoading() + 607
7   com.apple.WebCore             	0x00007fff3dd747a2 WebCore::DocumentLoader::continueAfterContentPolicy(WebCore::PolicyAction) + 2034
8   com.apple.WebCore             	0x00007fff3ec2862b WebCore::DocumentLoader::responseReceived(WebCore::ResourceResponse const&) + 1883
9   com.apple.WebCore             	0x00007fff3ec277fe WebCore::DocumentLoader::handleSubstituteDataLoadNow() + 366
10  com.apple.JavaScriptCore      	0x00007fff34653b03 WTF::timerFired(__CFRunLoopTimer*, void*) + 35
11  com.apple.CoreFoundation      	0x00007fff309fc014 __CFRUNLOOP_IS_CALLING_OUT_TO_A_TIMER_CALLBACK_FUNCTION__ + 20
12  com.apple.CoreFoundation      	0x00007fff309fbc87 __CFRunLoopDoTimer + 1095
13  com.apple.CoreFoundation      	0x00007fff309fb78a __CFRunLoopDoTimers + 346
14  com.apple.CoreFoundation      	0x00007fff309f2d5b __CFRunLoopRun + 2427
15  com.apple.CoreFoundation      	0x00007fff309f2153 CFRunLoopRunSpecific + 483
16  com.apple.HIToolbox           	0x00007fff2fcdcd96 RunCurrentEventLoopInMode + 286
17  com.apple.HIToolbox           	0x00007fff2fcdcb06 ReceiveNextEventCommon + 613
18  com.apple.HIToolbox           	0x00007fff2fcdc884 _BlockUntilNextEventMatchingListInModeWithFilter + 64
19  com.apple.AppKit              	0x00007fff2df8da73 _DPSNextEvent + 2085
20  com.apple.AppKit              	0x00007fff2e723e34 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:] + 3044
21  com.apple.AppKit              	0x00007fff2df82885 -[NSApplication run] + 764
22  com.apple.AppKit              	0x00007fff2df51a72 NSApplicationMain + 804
23  libdyld.dylib                 	0x00007fff58833015 start + 1
```
can we please have the option of specifying a serial port for the injection and extraction of text from the IRC client. this feature will make interfacing project to the internet much easier. 
A small feature request: Please make it possible to display emojis in a larger font than the text. It is harder to make out what an emoji is than plain characters, so in channels where they are sparingly used, it would make sense to display them much larger, a bit like the preview images for links to images or videos. 
It will stay at the same position and new messages remain hidden. This seems to be happening to me a lot more now than it used to. I'm not sure what causes it.
Apple has weird keyboard layout philosophy (Home/End key in document context instead of line context, dumb EU layouts with replaced tilde, etc). Fortunately macOS allows to do user-scoped rebinding in ~/Library/KeyBindings/DefaultKeyBinding.dict file to fix those annoyances.

**Current behavior:**

LimeChat uses some input method that does not respect user key bindings. For example Home/End keys fix:

```
{
    "\UF729" = "moveToBeginningOfLine:"; 
    "\UF72B" = "moveToEndOfLine:";
}
```

Is ignored and LimeChat still jumps to beginning/end of whole chat history when home/end is pressed.


**Expected behavior:**

~/Library/KeyBindings/DefaultKeyBinding.dict should be respected by LimeChat.


Thanks for your hard work on this project!
this fixes #104 and conforms to apple's behavior on native apps

just did some removals.