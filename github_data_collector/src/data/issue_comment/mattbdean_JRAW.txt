When one creates an OkHttpNetworkAdaptor without specifying their own working OkHttpClient, the default OkHttpClient generated may have a null ProxySelector.

This causes a NullPointerException in my program using JRAW.

I discovered that ``ProxySelector.getDefault()`` returns null for Linux machines, so to circumvient the error I created an OkHttpNetworkAdaptor with a custom OkHttpClient, which has a custom ProxySelector which simply doesn't use a proxy (see https://github.com/square/okhttp/pull/4237/files, the NullProxySelector which was added).

OkHttp has been updated to implement such a NullProxySelector. Please update OkHttp, or implement the above change in https://github.com/mattbdean/JRAW/blob/master/lib/src/main/kotlin/net/dean/jraw/http/OkHttpNetworkAdapter.kt, specifically the line ``private val http: OkHttpClient = OkHttpClient()`` - you must use the OkHttpClient.Builder class and provide the ProxySelector. Such ProxySelector should either be ``ProxySelector.getDefault()``, however if null, the proposed NullProxySelector.

I'd make a PR but this can simply be resolved by updating OkHttp.

Cheers,
omarathon
`SubmitReference.submit` currently has `resubmit` hard-coded to `false`. This prevents submitting links that were previously submitted in the past. It would be helpful to make this a configurable option.

This is identical to the [feature added recently in PRAW](https://github.com/praw-dev/praw/commit/24ac157d369fd9c54615e2f19a1f2f6b92f8f9b4).

I have no experience with Kotlin or the frameworks being used in this project. But if we are in agreement about the feature, I can submit a pull request that attempts to implement it.
I used the code from the github website of JRAW, the login information for credentials is correct as well.
`UserAgent userAgent = new UserAgent("bot", "megabigsad.megabigsad.Megabigsad", "v0.1", 
        "megabigsadd");

        // Create our credentials
        Credentials credentials = Credentials.script("username", "password",
                "id", "id");

        NetworkAdapter adapter = new OkHttpNetworkAdapter(userAgent);

        RedditClient reddit = OAuthHelper.automatic(adapter, credentials);

        DefaultPaginator<Submission> paginator = reddit.frontPage()
                .limit(50) // 50 posts per page
                .sorting(SubredditSort.TOP) // top posts
                .timePeriod(TimePeriod.ALL) // of all time
                .build();

        Listing<Submission> top50MostPopular = paginator.next();

        System.out.println(top50MostPopular.get(0).getAuthor());`

This is the response I get `200 application/json: '{"kind": "Listing", "data": {"modhash": null, "dist": 50, "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "movies", "selftext": "", "autho(...)
serventofgaben`
Oops, I had a typo :) Ignore this
Since Reddit has started to roll out the [Community Awards](https://www.reddit.com/r/changelog/comments/bp18sm/an_update_on_the_community_awards_pilot/), I'd be interested to see if someone is interested in implementing it into this api-wrapper.
Hello,
I am trying to retrieve comments and its replies from a submission.
With the code I have I am only getting comments but no replies. How could I change the in order to obtain the replies as well?

 ` public static List<Comment> executeRedditCommentSearch(RedditClient client, Submission 
 submission, Integer commentMaxDepth,
			Integer commentMaxResults, CommentSort commentSort, Logger log) {
		
		List<Comment> comments = new ArrayList<Comment>();
		
		try {
			Iterator<CommentNode<Comment>> iterator = client.submission(submission.getId()).comments().iterator();
			while(iterator.hasNext()) {
				comments.add(iterator.next().getSubject());
			}
			
		} catch(Exception e) {
			log.error("Problem retrieving comments for submission[" + submission.getUrl() + "].");
			comments = Lists.newArrayList();
		}
		log.info("Reddit Comment Searcher retrieved " + comments.size() + " comments for submission " + submission.getId() + ".");
		return comments;
	}`

Thank you!
Hi @mattbdean, just want to start by saying I really enjoy the library you've written here and it's saved me a lot of work for my own project, a Reddit source connector for Kafka. Thanks man!

So, the issue--like the title mentions, I believe there's a race condition with token refresh. It may or may not be specific to streams, but that's the only place I've noticed it so far.

In the [RedditClient.request(...)](https://github.com/mattbdean/JRAW/blob/fa1efa33729d42c6d2fc52f4cf67eabcb75e3be9/lib/src/main/kotlin/net/dean/jraw/RedditClient.kt#L130-L140) method, a check for token refresh is made based on [AuthManager.needsRenewing()](https://github.com/mattbdean/JRAW/blob/fa1efa33729d42c6d2fc52f4cf67eabcb75e3be9/lib/src/main/kotlin/net/dean/jraw/oauth/AuthManager.kt#L83-L86); if and only if that method returns true, the token is refreshed. However, since the `needsRenewing` method only returns whether or not the token has _already_ expired and not whether it's likely to expire soon, it's possible that in between that check and the actual request to Reddit, the token expires.

I think one easy fix could be to alter the `needsRenewing` method to return whether a given percentage of the token's lifetime has elapsed; this could be anything from 50% to 99%, depending on how expensive it is to fetch a new token and how much time is expected to elapse between calls to that method and requests that then use the possibly-expired token. If you agree, I'd be happy to open a PR up to add this--let me know.
In reddit api i can use params after and before

> after / before - only one should be specified. these indicate the fullname of an item in the listing to use as the anchor point of the slice.

How to use it in JRAW. For example i want to get posts from some subreddit before some post.
In reddit i can use:
https://old.reddit.com/r/androiddev/?limit=5&after=t3_beyj2c

The https://oauth.reddit.com/api/v1/me?raw_json=1 is now forbidden

and currently the JRAW 1.1.0 uses this URL in 

 RedditClient redditClient = helper.onUserChallenge(url);
I'm trying to make a bot for a particular subreddit, and for this purpose I need to be able to grab new posts. As it stands, it seems like `client.subreddit().posts().build()` only grabs the posts currently on that front-page. Is there a way to grab all new posts to the subreddit, and maybe fire an event when a new post is made?