### Describe the bug
There are a lot of issues opened (and closed due to stale) that have errors on Huawei devices. Thus, I decided to open a new one to hopefully get some attention to the issue.

- CameraView version: *2.6.1*
- Camera engine used: *both (But mainly camera1)*
- Reproducible in official demo app: *Do not own a Huawei device*
- Device / Android version: 
*HUAWEI Honor 8X (HWJSN-H)
HUAWEI Y9 2018 (HWFLA-H)
HUAWEI P30 lite (HWMAR)
HUAWEI P30 Pro (HWVOG)
HUAWEI P20 Pro (HWCLT)
HUAWEI Mate 9 (HWMHA)
ALL RUNNING ANDROID 9*

### List of issues:
- #752
- #742 
- #701
- #682
- #667 

I do not have a Huawei device to test with, so I can only provide the log provided in the Play Store (Crashlytics does not catch this):

![Screenshot 2020-01-18 at 13 26 45](https://user-images.githubusercontent.com/35602540/72663015-622bd800-39f6-11ea-92f4-9f4019d48ea2.png)

I wish I could provide more information about this issue, but this is all I have at this moment. 
### Describe the bug
- CameraView version: 2.4.0
- Android version: 6.0

### Logs

Fatal Exception: java.lang.IllegalStateException: Fragment TaskSelectFragment{7b3b326 (1a710908-6986-4af4-b339-54fadbcbf892)} not attached to a context.
       at androidx.fragment.app.Fragment.requireContext(Fragment.java:774)
       at androidx.fragment.app.Fragment.getResources(Fragment.java:838)
       at androidx.fragment.app.Fragment.getString(Fragment.java:860)
       at com.xxx.fragment.main.TaskSelectFragment.setVisibleList(TaskSelectFragment.java:198)
       at com.xxx.fragment.main.TaskSelectFragment.lambda$getTaskUpdate$5$TaskSelectFragment(TaskSelectFragment.java:188)
       at com.xxx.fragment.main.-$$Lambda$TaskSelectFragment$YXeDMfhk7eFjJbx7Kf-j2_CQ3io.run(lambda)
       at android.os.Handler.handleCallback(Handler.java:815)
       at android.os.Handler.dispatchMessage(Handler.java:104)
       at android.os.Looper.loop(Looper.java:207)
       at android.app.ActivityThread.main(ActivityThread.java:5728)
       at java.lang.reflect.Method.invoke(Method.java)
       at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:789)
       at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:679)


Hi everyone! I face a problem please help me. I use this cameraview in a Fragment. When user move from this camera fragment to other fragment, i use:
@Override
    public void onPause() {
        super.onPause();

       camera.destroy();

    }

to destroy the camera. 
But when the user  first time open this fragment i get permission for camera, auto etc These permission box make fragment in onPause state, and when user give permisson and return to camera the camera is destroy because of onPause function.

Both permission and destroy camera is important for me. Please suggest me any possible solution. Thanks.
### Describe the bug
Please add a clear description of what the bug is, **and** fill the list below.
- CameraView version: 2.6.1
- Camera engine used: *camera2*
- Reproducible in official demo app: *don't know*
- Device / Android version: Galaxy Note10+ (d2q) (SM-N975U), Android 2.0.1, OS Version 10

### To Reproduce
Steps to reproduce the behavior, possibly in the demo app:
1. Go to Camera Screen
2. Rotate the device
3. NullPointerException rised

### Expected behavior
Shouldn't crash on rotation

### XML layout
Part of the XML layout with the CameraView declaration, so we can read its attributes.

```xml
                <com.otaliastudios.cameraview.CameraView
                    android:id="@+id/camera"
                    android:keepScreenOn="true"
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    app:layout_constraintTop_toTopOf="parent"
                    app:layout_constraintBottom_toBottomOf="parent"
                    app:layout_constraintEnd_toEndOf="parent"
                    app:layout_constraintStart_toStartOf="parent"
                    app:cameraGrid="draw3x3"
                    app:cameraPlaySounds="false"
                    app:cameraMode="picture"
                    app:cameraHdr="on"
                    app:cameraPictureSnapshotMetering="true"
                    app:cameraWhiteBalance="auto"

                    app:cameraEngine="camera2"
                    app:cameraAutoFocusMarker="@string/cameraview_default_autofocus_marker"
                    app:cameraPreview="texture"/>
```

### Logs
java.lang.NullPointerException: Attempt to invoke virtual method 'com.otaliastudios.cameraview.frame.ByteBufferFrameManager com.otaliastudios.cameraview.engine.Camera1Engine.getFrameManager()' on a null object reference

java.lang.NullPointerException: Attempt to invoke virtual method 'com.otaliastudios.cameraview.frame.ByteBufferFrameManager com.otaliastudios.cameraview.engine.Camera1Engine.getFrameManager()' on a null object reference
	at com.otaliastudios.cameraview.picture.Snapshot1PictureRecorder$1.onPreviewFrame(Snapshot1PictureRecorder.java:84)
	at android.hardware.Camera$EventHandler.handleMessage(Camera.java:1221)
	at android.os.Handler.dispatchMessage(Handler.java:107)
	at android.os.Looper.loop(Looper.java:237)
	at android.os.HandlerThread.run(HandlerThread.java:67)
 

### Before you go
Unless this is a simple fix (typos, bugs with obvious solution), please open an issue first.
If the edited files were covered by tests, updated tests are required for merging. Please look into the tests folders and make sure you cover new code.

- Fixes ... #746 
- Tests: ... yes
- Docs updated: ... yes

### Solution
If applicable, briefly describe how the issue was addressed.

This error still persists :
library version : com.otaliastudios:cameraview:2.6.1'
what happened : I stopped the video
stack trace :

2020-01-16 06:40:16.146 E/MediaMuxer: stop() is called in invalid state 3
2020-01-16 06:40:16.147 E/SnapshotVideoRecorder: Error onEncodingEnd java.lang.IllegalStateException: Failed to stop the muxer
java.lang.IllegalStateException: Failed to stop the muxer
at android.media.MediaMuxer.nativeStop(Native Method)
at android.media.MediaMuxer.stop(MediaMuxer.java:454)
at com.otaliastudios.cameraview.video.encoding.MediaEncoderEngine.end(MediaEncoderEngine.java:224)
at com.otaliastudios.cameraview.video.encoding.MediaEncoderEngine.access$1100(MediaEncoderEngine.java:57)
at com.otaliastudios.cameraview.video.encoding.MediaEncoderEngine$Controller$3.run(MediaEncoderEngine.java:412)
at android.os.Handler.handleCallback(Handler.java:873)
at android.os.Handler.dispatchMessage(Handler.java:99)
at android.os.Looper.loop(Looper.java:207)
at android.os.HandlerThread.run(HandlerThread.java:65)
2020-01-16 06:40:16.149 E/CameraEngine: onVideoResult result is null: something went wrong. java.lang.IllegalStateException: Failed to stop the muxer
java.lang.IllegalStateException: Failed to stop the muxer
at android.media.MediaMuxer.nativeStop(Native Method)
at android.media.MediaMuxer.stop(MediaMuxer.java:454)
at com.otaliastudios.cameraview.video.encoding.MediaEncoderEngine.end(MediaEncoderEngine.java:224)
at com.otaliastudios.cameraview.video.encoding.MediaEncoderEngine.access$1100(MediaEncoderEngine.java:57)
at com.otaliastudios.cameraview.video.encoding.MediaEncoderEngine$Controller$3.run(MediaEncoderEngine.java:412)
at android.os.Handler.handleCallback(Handler.java:873)
at android.os.Handler.dispatchMessage(Handler.java:99)
at android.os.Looper.loop(Looper.java:207)
at android.os.HandlerThread.run(HandlerThread.java:65)
Verisonï¼š2.6.0
Device : Huawei P20 Pro
Android:10.0
Mode :Camera2

Describe :
java.lang.IllegalStateException: Handler (android.os.Handler) {640a3bc} sending message to a Handler on a dead thread
        at android.os.MessageQueue.enqueueMessage(MessageQueue.java:618)
        at android.os.Handler.enqueueMessage(Handler.java:759)
        at android.os.Handler.sendMessageAtTime(Handler.java:708)
        at android.os.Handler.sendMessageDelayed(Handler.java:678)
        at android.os.Handler.post(Handler.java:407)
        at com.otaliastudios.cameraview.internal.utils.WorkerHandler.post(WorkerHandler.java:164)
        at com.otaliastudios.cameraview.video.encoding.MediaEncoder.notify(MediaEncoder.java:239)
        at com.otaliastudios.cameraview.video.encoding.MediaEncoderEngine.notify(MediaEncoderEngine.java:191)
        at com.otaliastudios.cameraview.video.SnapshotVideoRecorder.onRendererFrame(SnapshotVideoRecorder.java:278)
        at com.otaliastudios.cameraview.preview.GlCameraPreview$Renderer.onDrawFrame(GlCameraPreview.java:237)
        at android.opengl.GLSurfaceView$GLThread.guardedRun(GLSurfaceView.java:1582)
        at android.opengl.GLSurfaceView$GLThread.run(GLSurfaceView.java:1281)

- CameraView version: *2.6.1*
- Camera engine used: *both*
- Reproducible in official demo app: *yes*
- Device / Android version: *Samsung A30, API 28*

Flash doesn't work when picture is captured with 'takePictureSnapshot' or video is recorded.

When making a video snapshot with overlay (watermark and some text) audio is not synced with video.
`

        <com.otaliastudios.cameraview.CameraView
            android:id="@+id/camera"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:layout_gravity="center"
            android:keepScreenOn="true"
            app:cameraAudio="on"
            app:cameraGestureScrollVertical="exposureCorrection"
            app:cameraEngine="camera2"
            app:cameraExperimental="true"
            app:cameraFacing="back"
            app:cameraFlash="auto"
            app:cameraGestureLongTap="none"
            app:cameraGesturePinch="zoom"
            app:cameraGestureTap="autoFocus"
            app:cameraGrid="off"
            app:cameraMode="video"
            app:cameraPlaySounds="true"
            app:cameraPreview="glSurface"
            app:cameraVideoMaxDuration="0"
            app:cameraVideoMaxSize="0">
`