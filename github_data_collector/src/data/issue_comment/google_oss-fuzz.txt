Some targets may not process all the corpus in the given time. Prioritizing shorter inputs lets us maximize the number of inputs traced.
//cc @lemzwerg better late than never!
It seems since honggfuzz was turned on by default one of systemd fuzzers has been failing with
```

Accepting input from '[STDIN]'
--
  | Usage for fuzzing: honggfuzz -P [flags] -- /mnt/scratch0/clusterfuzz/bot/builds/clusterfuzz-builds-honggfuzz_systemd_de63b71f16a30e45dc2ea3edcd6a924885950338/revisions/fuzz-udev-rules
  | Failed to call unshare(): Operation not permitted
  | Failed to mount /sys: Operation not permitted
  | Assertion 'mkdir_p("/etc/udev/rules.d", 0755) >= 0' failed at src/fuzz/fuzz-udev-rules.c:95, function int LLVMFuzzerTestOneInput(const uint8_t *, size_t)(). Aborting.
  | AddressSanitizer:DEADLYSIGNAL
```

As far as I can remember, something like this happened (with AFL) when minijail wasn't used (which was discussed in https://github.com/google/clusterfuzz/pull/165#issuecomment-463195121).
Moves dictionary with form <fuzz_target>.dict to /out/, oss-fuzz automatically picks up dictionaries of this form.

@htuch 

Signed-off-by: Asra Ali <asraa@google.com>
Should fix https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=19806
This is what happened when I ran the tests:
```
$ python -m unittest build_specified_commit_test.py
Running: docker build -t gcr.io/oss-fuzz/yara projects/yara
unable to prepare context: path "projects/yara" not found
docker build failed.
Unable to find image 'gcr.io/oss-fuzz/yara:latest' locally
latest: Pulling from oss-fuzz/yara
34667c7e4631: Already exists
d18d76a881a4: Already exists
119c7358fbfc: Already exists
2aaf13f3eff0: Already exists
8013e4d06ba7: Pulling fs layer
e75539d0b0cd: Pulling fs layer
91e12bbacfc4: Pulling fs layer
75331e4a6d45: Pulling fs layer
05bc62b5628f: Pulling fs layer
68466eaea643: Pulling fs layer
df2687c37ed9: Pulling fs layer
e1d1cc8b6ec0: Pulling fs layer
31ca5a000ed1: Pulling fs layer
a55421db8089: Pulling fs layer
c48833aa51b9: Pulling fs layer
024a024774c0: Pulling fs layer
e2159ecbf58a: Pulling fs layer
9e9e76feffc1: Pulling fs layer
75331e4a6d45: Waiting
31ca5a000ed1: Waiting
024a024774c0: Waiting
c48833aa51b9: Waiting
e2159ecbf58a: Waiting
05bc62b5628f: Waiting
9e9e76feffc1: Waiting
68466eaea643: Waiting
e1d1cc8b6ec0: Waiting
df2687c37ed9: Waiting
91e12bbacfc4: Verifying Checksum
91e12bbacfc4: Download complete
e75539d0b0cd: Verifying Checksum
e75539d0b0cd: Download complete
05bc62b5628f: Verifying Checksum
05bc62b5628f: Download complete
8013e4d06ba7: Verifying Checksum
8013e4d06ba7: Download complete
df2687c37ed9: Verifying Checksum
df2687c37ed9: Download complete
e1d1cc8b6ec0: Verifying Checksum
e1d1cc8b6ec0: Download complete
68466eaea643: Verifying Checksum
68466eaea643: Download complete
8013e4d06ba7: Pull complete
e75539d0b0cd: Pull complete
91e12bbacfc4: Pull complete
a55421db8089: Verifying Checksum
a55421db8089: Download complete
c48833aa51b9: Download complete
31ca5a000ed1: Verifying Checksum
31ca5a000ed1: Download complete
e2159ecbf58a: Verifying Checksum
e2159ecbf58a: Download complete
024a024774c0: Verifying Checksum
024a024774c0: Download complete
9e9e76feffc1: Verifying Checksum
9e9e76feffc1: Download complete
75331e4a6d45: Verifying Checksum
75331e4a6d45: Download complete
75331e4a6d45: Pull complete
05bc62b5628f: Pull complete
68466eaea643: Pull complete
df2687c37ed9: Pull complete
e1d1cc8b6ec0: Pull complete
31ca5a000ed1: Pull complete
a55421db8089: Pull complete
c48833aa51b9: Pull complete
024a024774c0: Pull complete
e2159ecbf58a: Pull complete
9e9e76feffc1: Pull complete
Digest: sha256:3d6f09bd1f923572eefa2a8a156e7a86358d562f4a121e540c915ec2ee99e5e7
Status: Downloaded newer image for gcr.io/oss-fuzz/yara:latest
ERunning: docker build -t gcr.io/oss-fuzz/curl projects/curl
unable to prepare context: path "projects/curl" not found
docker build failed.
Unable to find image 'gcr.io/oss-fuzz/curl:latest' locally
latest: Pulling from oss-fuzz/curl
34667c7e4631: Already exists
d18d76a881a4: Already exists
119c7358fbfc: Already exists
2aaf13f3eff0: Already exists
8013e4d06ba7: Already exists
e75539d0b0cd: Already exists
91e12bbacfc4: Already exists
75331e4a6d45: Already exists
05bc62b5628f: Already exists
68466eaea643: Already exists
df2687c37ed9: Already exists
e1d1cc8b6ec0: Already exists
31ca5a000ed1: Already exists
a55421db8089: Already exists
c48833aa51b9: Already exists
d42c6758b23a: Pulling fs layer
648427f22fa0: Pulling fs layer
886ceb447f32: Pulling fs layer
168bae4df421: Pulling fs layer
168bae4df421: Waiting
648427f22fa0: Verifying Checksum
648427f22fa0: Download complete
d42c6758b23a: Verifying Checksum
d42c6758b23a: Download complete
168bae4df421: Download complete
886ceb447f32: Verifying Checksum
886ceb447f32: Download complete
d42c6758b23a: Pull complete
648427f22fa0: Pull complete
886ceb447f32: Pull complete
168bae4df421: Pull complete
Digest: sha256:1ee078e794f081765f6244f3c91a51daf070568f9709d05c17eebc4daaac30f5
Status: Downloaded newer image for gcr.io/oss-fuzz/curl:latest
F
======================================================================
ERROR: test_build_fuzzers_from_commit (build_specified_commit_test.BuildImageIntegrationTests)
Tests if the fuzzers can build at a proper commit.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/user/oss-fuzz/infra/build_specified_commit_test.py", line 47, in test_build_fuzzers_from_commit
      project_name, old_commit, tmp_dir, sanitizer='address')
        File "/home/user/oss-fuzz/infra/build_specified_commit.py", line 55, in build_fuzzer_from_commit
            inferred_url, local_store_path, repo_name=repo_name)
              File "/home/user/oss-fuzz/infra/repo_manager.py", line 57, in __init__
                  self.repo_name = self.repo_url.split('/')[-1].strip('.git')
                  AttributeError: 'NoneType' object has no attribute 'split'

======================================================================
FAIL: test_detect_main_repo (build_specified_commit_test.BuildImageIntegrationTests)
Test the detect main repo functionality of the build specific commit module.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/user/oss-fuzz/infra/build_specified_commit_test.py", line 60, in test_detect_main_repo
      self.assertEqual(repo_origin, 'https://github.com/curl/curl.git')
      AssertionError: None != 'https://github.com/curl/curl.git'

----------------------------------------------------------------------
Ran 2 tests in 54.364s

FAILED (failures=1, errors=1)
```

Then I ran the tests again and encountered another problem:

```
$ python -m unittest build_specified_commit_test.py 
Running: docker build -t gcr.io/oss-fuzz/yara projects/yara
unable to prepare context: path "projects/yara" not found
docker build failed.
ERunning: docker build -t gcr.io/oss-fuzz/curl projects/curl
unable to prepare context: path "projects/curl" not found
docker build failed.
F
======================================================================
ERROR: test_build_fuzzers_from_commit (build_specified_commit_test.BuildImageIntegrationTests)
Tests if the fuzzers can build at a proper commit.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/user/oss-fuzz/infra/build_specified_commit_test.py", line 47, in test_build_fuzzers_from_commit
    project_name, old_commit, tmp_dir, sanitizer='address')
  File "/home/user/oss-fuzz/infra/build_specified_commit.py", line 55, in build_fuzzer_from_commit
    inferred_url, local_store_path, repo_name=repo_name)
  File "/home/user/oss-fuzz/infra/repo_manager.py", line 57, in __init__
    self.repo_name = self.repo_url.split('/')[-1].strip('.git')
AttributeError: 'NoneType' object has no attribute 'split'

======================================================================
FAIL: test_detect_main_repo (build_specified_commit_test.BuildImageIntegrationTests)
Test the detect main repo functionality of the build specific commit module.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/user/oss-fuzz/infra/build_specified_commit_test.py", line 60, in test_detect_main_repo
    self.assertEqual(repo_origin, 'https://github.com/curl/curl.git')
AssertionError: None != 'https://github.com/curl/curl.git'

----------------------------------------------------------------------
Ran 2 tests in 1.991s
```

There are a few problems here. First is that they are failing. Second is that they are nondeterministic, tests should behave exactly the same way every time otherwise they aren't very useful for debugging. Third (and this is related to the second point), if these were unittests where docker was mocked rather than integration tests we wouldn't have this problem. A problem with many of your tests is they rely on "production data" like projects in OSS-Fuzz. This data can change at any time, breaking your tests. While I think these tests are valuable as a sanity check, you definitely want more deterministic unittests that only rely on data you control.

Bumps [rubyzip](https://github.com/rubyzip/rubyzip) from 1.2.3 to 2.0.0.
<details>
<summary>Release notes</summary>

*Sourced from [rubyzip's releases](https://github.com/rubyzip/rubyzip/releases).*

> ## v2.0.0
> Security
> 
> - Default the `validate_entry_sizes` option to `true`, so that callers can trust an entry's reported size when using `extract` [#403](https://github-redirect.dependabot.com/rubyzip/rubyzip/pull/403)
>    - This option defaulted to `false` in 1.3.0 for backward compatibility, but it now defaults to `true`. If you are using an older version of ruby and can't yet upgrade to 2.x, you can still use 1.3.0 and set the option to `true`.
> 
> Tooling / Documentation
> 
> - Remove test files from the gem to avoid problems with antivirus detections on the test files [#405](https://github-redirect.dependabot.com/rubyzip/rubyzip/pull/405) / [#384](https://github-redirect.dependabot.com/rubyzip/rubyzip/issues/384)
> - Drop support for unsupported ruby versions [#406](https://github-redirect.dependabot.com/rubyzip/rubyzip/pull/406)
> 
> ## v1.3.0
> Security
> 
> - Add `validate_entry_sizes` option so that callers can trust an entry's reported size when using `extract` [#403](https://github-redirect.dependabot.com/rubyzip/rubyzip/pull/403)
>    - This option defaults to `false` for backward compatibility in this release, but you are strongly encouraged to set it to `true`. It will default to `true` in rubyzip 2.0.
> 
> New Feature
> 
> - Add `add_stored` method to simplify adding entries without compression [#366](https://github-redirect.dependabot.com/rubyzip/rubyzip/pull/366)
> 
> Tooling / Documentation
> 
> - Add more gem metadata links [#402](https://github-redirect.dependabot.com/rubyzip/rubyzip/pull/402)
> 
> ## v1.2.4
> - Do not rewrite zip files opened with `open_buffer` that have not changed [#360](https://github-redirect.dependabot.com/rubyzip/rubyzip/pull/360)
> 
> Tooling / Documentation
> 
> - Update `example_recursive.rb` in README [#397](https://github-redirect.dependabot.com/rubyzip/rubyzip/pull/397)
> - Hold CI at `trusty` for now, automatically pick the latest ruby patch version, use rbx-4 and hold jruby at 9.1 [#399](https://github-redirect.dependabot.com/rubyzip/rubyzip/pull/399)
</details>
<details>
<summary>Changelog</summary>

*Sourced from [rubyzip's changelog](https://github.com/rubyzip/rubyzip/blob/master/Changelog.md).*

> # 2.0.0 (2019-09-25)
> 
> Security
> 
> - Default the `validate_entry_sizes` option to `true`, so that callers can trust an entry's reported size when using `extract` [#403](https://github-redirect.dependabot.com/rubyzip/rubyzip/pull/403)
>    - This option defaulted to `false` in 1.3.0 for backward compatibility, but it now defaults to `true`. If you are using an older version of ruby and can't yet upgrade to 2.x, you can still use 1.3.0 and set the option to `true`.
> 
> Tooling / Documentation
> 
> - Remove test files from the gem to avoid problems with antivirus detections on the test files [#405](https://github-redirect.dependabot.com/rubyzip/rubyzip/pull/405) / [#384](https://github-redirect.dependabot.com/rubyzip/rubyzip/issues/384)
> - Drop support for unsupported ruby versions [#406](https://github-redirect.dependabot.com/rubyzip/rubyzip/pull/406)
> 
> # 1.3.0 (2019-09-25)
> 
> Security
> 
> - Add `validate_entry_sizes` option so that callers can trust an entry's reported size when using `extract` [#403](https://github-redirect.dependabot.com/rubyzip/rubyzip/pull/403)
>    - This option defaults to `false` for backward compatibility in this release, but you are strongly encouraged to set it to `true`. It will default to `true` in rubyzip 2.0.
> 
> New Feature
> 
> - Add `add_stored` method to simplify adding entries without compression [#366](https://github-redirect.dependabot.com/rubyzip/rubyzip/pull/366)
> 
> Tooling / Documentation
> 
> - Add more gem metadata links [#402](https://github-redirect.dependabot.com/rubyzip/rubyzip/pull/402)
> 
> # 1.2.4 (2019-09-06)
> 
> - Do not rewrite zip files opened with `open_buffer` that have not changed [#360](https://github-redirect.dependabot.com/rubyzip/rubyzip/pull/360)
> 
> Tooling / Documentation
> 
> - Update `example_recursive.rb` in README [#397](https://github-redirect.dependabot.com/rubyzip/rubyzip/pull/397)
> - Hold CI at `trusty` for now, automatically pick the latest ruby patch version, use rbx-4 and hold jruby at 9.1 [#399](https://github-redirect.dependabot.com/rubyzip/rubyzip/pull/399)
</details>
<details>
<summary>Commits</summary>

- [`2825898`](https://github.com/rubyzip/rubyzip/commit/2825898f69fbf1efe4e43452adae6ac5d074ec1c) Merge pull request [#408](https://github-redirect.dependabot.com/rubyzip/rubyzip/issues/408) from rubyzip/v2-0-0
- [`cb407b1`](https://github.com/rubyzip/rubyzip/commit/cb407b106541c345329a017d6eb34026cb372872) Bump version to 2.0.0
- [`e1d9af6`](https://github.com/rubyzip/rubyzip/commit/e1d9af6e46f7eb0d0b728958a57f7e28d60301a4) Merge pull request [#406](https://github-redirect.dependabot.com/rubyzip/rubyzip/issues/406) from rubyzip/bump-supported-ruby
- [`3641a96`](https://github.com/rubyzip/rubyzip/commit/3641a963ea0c34275562250d7e67380c85fc2570) Merge pull request [#405](https://github-redirect.dependabot.com/rubyzip/rubyzip/issues/405) from rubyzip/remove-test-files
- [`e79d9ea`](https://github.com/rubyzip/rubyzip/commit/e79d9ea2922be12db121c20f5dc55bba8a35418a) Merge pull request [#407](https://github-redirect.dependabot.com/rubyzip/rubyzip/issues/407) from rubyzip/v1-3-0
- [`7c65e1e`](https://github.com/rubyzip/rubyzip/commit/7c65e1e3595031392f1050b81fb2b95b0f2ee764) Bump version to 1.3.0
- [`d65fe7b`](https://github.com/rubyzip/rubyzip/commit/d65fe7bd283ec94f9d6dc7605f61a6b0dd00f55e) Merge pull request [#403](https://github-redirect.dependabot.com/rubyzip/rubyzip/issues/403) from rubyzip/check-size
- [`35446f4`](https://github.com/rubyzip/rubyzip/commit/35446f467b739d05790356ab86915de76f0120f1) Drop old ruby and JDK versions from CI
- [`74d4bec`](https://github.com/rubyzip/rubyzip/commit/74d4bec371158c4c2a9fe965302dc9649c941a73) Remove test files from gem
- [`97cb6ae`](https://github.com/rubyzip/rubyzip/commit/97cb6aefe6d12bd2429d7a2e119ccb26f259d71d) Warn when an entry size is invalid
- Additional commits viewable in [compare view](https://github.com/rubyzip/rubyzip/compare/v1.2.3...v2.0.0)
</details>
<br />

[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=rubyzip&package-manager=bundler&previous-version=1.2.3&new-version=2.0.0)](https://help.github.com/articles/configuring-automated-security-fixes)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot ignore this [patch|minor|major] version` will close this PR and stop Dependabot creating any more for this minor/major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language
- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language
- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language
- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language

You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/google/oss-fuzz/network/alerts).

</details>
Solves #2490 

Testing with various projects locally. If nothing breaks, can try landing and testing at scale next week.
…nknown chunk to known chunk.

This is experimental and for research purposes for the moment. Depending on feedback here, it may be upstreamed.

P.S. I found that this line (specifically the `rm` portion) breaks the fuzzer build because `$OUT` may contain directories. Fixed it by passing `-rf` flag to the chained `rm` command 

https://github.com/google/oss-fuzz/blob/65956add1114508bb8b482b6abf9ad2240130c24/projects/libpng-proto/build.sh#L6