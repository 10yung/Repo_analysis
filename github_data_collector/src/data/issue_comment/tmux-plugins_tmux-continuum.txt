My impression from the documentation is that continuum doesn't support multiple tmux sessions?
Can this be added?
What would it take?
The docs show
>Automatic tmux start
Tmux is automatically started after the computer/server is turned on.
See the instructions how to enable this for your system.

and
>Automatic restore
Last saved environment is automatically restored when tmux is started.
Put set -g @continuum-restore 'on' in .tmux.conf to enable this.

I don't understand - are these features enabled as written in the first lines, or should I manually enable them as written in the second lines?
Would be really nice to have a feature to keep saves in `~/.tmux/resurrect/` under control.

Config option could be, e.g., "prune last x saves" or "maximum number of saves" (default 20).

I am not sure if this is a continuum or a [resurrect](https://github.com/tmux-plugins/tmux-resurrect/issues/310) issue)

Am I missing a configuration somewhere?

I have 5 panes set up in my session, and I have the following config:

```
# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/resurrect'
set -g @plugin 'tmux-plugins/continuum'

# Enable autorestore
set -g @continuum-restore 'on'

# Save session every 5 minutes
set -g @continuum-save-interval '1'

# Save shell history (THIS IS BROKEN)
#set -g @resurrect-save-shell-history 'on'

# Save pane contents
set -g @resurrect-capture-pane-contents 'on'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'
```

When I reboot, then run `tmux`, my last session of 5 panes is restored.  I even see the outputs in each pane as they appeared before reboot.  However, when I navigate through each pane and use the up arrow key to re-run the most recently run command in said pane, the command is incorrect.  In fact, they all show the same command (the last command I executed in any terminal session, anywhere, before reboot).  So, if I rebooted from the command line with `sudo reboot`, the last command (hitting up arrow once) in each pane is `sudo reboot`.

I must be missing something, right?  I've tried lots of googling and combing through issues here to no avail. Thanks in advance for the help.
Hi,
the interval specified for the continuous saving  under this url. 
https://github.com/tmux-plugins/tmux-continuum/blob/master/docs/faq.md

is probably incorrect. 
from testing i did it looks like the interval is running based on seconds and not minutes, which means that if save this configuation in your .tmux.conf file: 
```set -g @continuum-save-interval '1'```
it will save every 1 second and not every 1 minute. causing an excessive use of CPU as your tmux sessions grow larger. 

this can easily be identified by running top\htop and seeing that the contniuum_save.sh is running each X seconds that are specified in the configuration file. 

you should either fix the code or fix the documentation. 

this was happening on WSL v1 with debian, but I guess it would make no difference. 

Roy 

It seems like if I `set -g @continuum-save-interval '1'`, that is too frequent, and my tmux sessions hang or crash (I am attached to multiple sessions in different physical terminal windows). I only have one server running. I saw the low interval from another tmux user, so I thought it was OK, but perhaps there is something weird about my usage triggering hangs while saving? It's usually just a hang, not a crash.

```
 ~/c/w/f/d/docroot   *  .ddev  cat ~/.tmux.conf                                                                      20.6s  17:16:42
#set -g default-terminal screen-256color
set -g history-limit 999999999

set -ga update-environment ' SSH_AUTH_SOCK'
#set-environment -g 'SSH_AUTH_SOCK' ~/.ssh/ssh_auth_sock
#set-environment -g 'SSH_AUTH_SOCK' /run/user/1000/keyring/ssh

#set-option -g default-command "reattach-to-user-namespace -l fish"

# # run bash first cuz fish is mean
# set-option -g default-shell /usr/bin/fish
# Just let bash set the environment, then drop to fish.
set-option -g default-command /usr/bin/fish

#bind '"' split-window -c "#{pane_current_path}"
#bind % split-window -h -c "#{pane_current_path}"
#bind c new-window -c "#{pane_current_path}"

set-option -g mouse on
set-option -g prefix C-a

bind -n M-PgDn select-window -n
bind -n M-PgUp select-window -p


# https://gist.github.com/spicycode/1229612
# Use Alt-arrow keys without prefix key to switch panes
#bind -n M-Left select-pane -L
#bind -n M-Right select-pane -R
#bind -n M-Up select-pane -U
#bind -n M-Down select-pane -D

# Use Alt-vim keys without prefix key to switch panes
bind -n M-h select-pane -L
bind -n M-j select-pane -D
bind -n M-k select-pane -U
bind -n M-l select-pane -R


set -g @resurrect-capture-pane-contents 'on'
set -g @resurrect-processes '~sshuttle'
set -g @continuum-boot 'on'
set -g @continuum-restore 'on'
set -g @continuum-save-interval '15'

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'

set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-pain-control'


# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'
```
Am seeing in each pane, there is a message like
`history -r '/Users/abc/.tmux/resurrect/bash_history-work:0.1'`
popping up.

How can I disable this? This is very noisy and annoying. Thanks folks.
Hi,

I try to use this plugin with tmux but auto-save, auto restore or the timer inside the powerline bar never show.
The other plugin work great and tmux-resurrect work great to but i can't use this one.

This is my tmux.conf
```

# Set the prefix to ^A.
unbind C-b
set -g prefix ^A
bind a send-prefix

# reduce escapge time
# Principalement pour pas avoir d'interference avec VIM
set -sg escape-time 0

# Bind appropriate commands similar to screen.
# lockscreen ^X x
unbind ^X
bind ^X lock-server
unbind x
bind x lock-server

# screen ^C c
unbind ^C
bind ^C new-window -c "#{pane_current_path}"
unbind c
bind c new-window -c "#{pane_current_path}"

# detach ^D d
unbind ^D
bind ^D detach

# displays *
unbind *
bind * list-clients

# next ^@ ^N sp n
unbind ^@
bind ^@ next-window
unbind ^N
bind ^N next-window
unbind " "
bind " " next-window
unbind n
bind n next-window

# title A
unbind A
bind A command-prompt "rename-window %%"

# other ^A
unbind ^A
bind ^A last-window

# prev ^H ^P p ^?
unbind ^H
bind ^H previous-window
unbind ^P
bind ^P previous-window
unbind p
bind p previous-window
unbind BSpace
bind BSpace previous-window



# vim copy selection
bind ESCAPE copy-mode -e
#bind-key -t vi-copy 'v' begin-selection
#bind-key -t vi-copy 'y' copy-selection

# paste CTRL+A ]

# Use Alt-arrow keys without prefix key to switch panes
bind -n M-Left previous-window
bind -n M-Right next-window

# scroll buffer (mouse option)
#set -g mouse on
#bind -n WheelUpPane   select-pane -t= \; copy-mode -e \; send-keys -M
#bind -n WheelDownPane select-pane -t= \; send-keys -M

#setw -g mode-mouse off

# windows ^W w
unbind ^W
bind ^W list-windows
unbind w
bind w list-windows

# quit \
unbind '\'
bind K confirm-before "kill-server"

# kill K k
#unbind K
#bind K confirm-before "kill-window"
#unbind k
#bind k confirm-before "kill-window"

# redisplay ^L l
unbind ^L
bind ^L refresh-client
unbind l
bind l refresh-client

# split
bind-key v split-window -h
bind-key s split-window -v
bind S setw synchronize-panes

# :kB: focus up
unbind Tab
bind Tab select-pane -t:.+
unbind BTab
bind BTab select-pane -t:.-

# " windowlist -b
unbind '"'
bind '"' choose-window

# enable mouse
bind m set -g mouse on
bind M set -g mouse off

# reload config file (change file location to your the tmux.conf you want to use)
bind r source-file ~/.tmux.conf

# Automatically set window title
set-window-option -g automatic-rename on
set-option -g set-titles on

set -g @resurrect-capture-pane-contents 'on'
set -g @continuum-restore 'on'
set -g @continuum-save-interval '20'
run-shell ~/.tmux/plugins/tmux-continuum/continuum.tmux

# THEME
set -g status-bg black
set -g status-fg white
set -g window-status-current-bg white
set -g window-status-current-fg black
set -g window-status-current-attr bold
set -g status-interval 60
#set -g status-left-length 30
#set -g status-left '#[fg=green](#S) #(whoami)'
#set -g status-right '#[fg=yellow]#(cut -d " " -f 1-3 /proc/loadavg)#[default] #[fg=white]%H:%M#[default]'

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-battery'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'jimeh/tmux-themepack'
set -g @themepack 'double/green'
#set -g status-right '#{battery_status_bg} Batt: #{battery_icon} #{battery_percentage} #{battery_remain} | %a %h-%d %H:%M '
#set -g status-right-length 60
#set -g status-right "#[fg=yellow] %d %b %Y #[fg=green]:: %l:%M %p "

#
# # Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'
#
# # Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
```

I am on manjaro linux last build.

It would be nice if `capture pane contents` feature stored several checkpoints and not just the last one.   

I am using `tmux-continuum` with  
```
set -g @continuum-restore 'on'  
set -g @continuum-boot 'on'  
```  
and for some reason after booting up my PC tmux server had started with single empty window and no restoration of previous session took place.  
After 15 minutes `tmux-continuum` saved new session (with single empty window) and rewrote all pane contents' saved data.  
I was able to restore my windows from previous checkpoints using [faq](https://github.com/tmux-plugins/tmux-continuum/blob/master/docs/faq.md) but pane contents were lost.

hey, sorry if i did the whole git/origin/merge/pull thing wrong, it's my first time please forgive me.

anyway, i didn't like how it was clobbering my 
.config/systemd/user/tmux.service 
so I fixed it to not do that anymore.

only writes the first time now, then you can edit the unit file as you please, like:
ExecStart=/usr/bin/tmux new-session -A -s hi -d

so it's not always starting a session [n], just the same default session every time.