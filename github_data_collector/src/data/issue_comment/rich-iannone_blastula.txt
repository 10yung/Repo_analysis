
![Captura de Pantalla 2020-01-14 a la(s) 10 55 22 p  m](https://user-images.githubusercontent.com/40868159/72403671-f9580d80-3720-11ea-964d-583234a4b45f.png)


Great package! I wonder if you can provide an option to send emails in plain text.
If I do 
```
library(blastula)
library(keyring)

create_smtp_creds_key(
  id = "my_id",
  user = "my@email.org",
  provider = "office365"
)
```
I get
```
** Message: Remote error from secret service: org.freedesktop.Secret.Error.IsLocked: Cannot create an item in a locked collection
Error in b_ss_set_with_value(self, private, service, username, password,  : 
  Secret service keyring error in 'set': 'Cannot create an item in a locked collection'
```
as in https://github.com/r-lib/keyring/issues/47.
If i add `keyring = ""`, (solution proposed in that issue) to evaluation of `keyring::key_set_with_value` in `create_smtp_creds_key`, then this function seems to work, but later, when I use `smtp_send`, I get
```
Error in stop("There is no blastula key that corresponds to the `key_name` of \"",  : 
  object 'key_name' not found
```

```
─ Session info ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 setting  value                       
 version  R version 3.6.2 (2019-12-12)
 os       Debian GNU/Linux 9 (stretch)
 system   x86_64, linux-gnu           
 ui       RStudio                     
 language (EN)                        
 collate  en_GB.UTF-8                 
 ctype    en_GB.UTF-8                 
 tz       Europe/Madrid               
 date     2020-01-04                  

─ Packages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
 package     * version date       lib source                          
 assertthat    0.2.1   2019-03-21 [2] CRAN (R 3.5.2)                  
 backports     1.1.5   2019-10-02 [2] CRAN (R 3.5.2)                  
 blastula    * 0.3.1   2019-11-27 [1] CRAN (R 3.6.2)                  
 callr         3.4.0   2019-12-09 [2] CRAN (R 3.5.2)                  
 cli           2.0.0   2019-12-09 [2] CRAN (R 3.6.2)                  
 colorspace    1.4-1   2019-03-18 [2] CRAN (R 3.5.2)                  
 commonmark    1.7     2018-12-01 [2] CRAN (R 3.5.2)                  
 crayon        1.3.4   2017-09-16 [2] CRAN (R 3.5.0)                  
 desc          1.2.0   2018-05-01 [2] CRAN (R 3.5.0)                  
 devtools      2.2.1   2019-09-24 [2] CRAN (R 3.6.2)                  
 digest        0.6.23  2019-11-23 [2] CRAN (R 3.6.2)                  
 dplyr         0.8.3   2019-07-04 [2] CRAN (R 3.5.2)                  
 ellipsis      0.3.0   2019-09-20 [2] CRAN (R 3.6.2)                  
 fansi         0.4.0   2018-10-05 [2] CRAN (R 3.5.2)                  
 farver        2.0.1   2019-11-13 [2] CRAN (R 3.6.2)                  
 fs            1.3.1   2019-05-06 [2] CRAN (R 3.5.2)                  
 getPass       0.2-2   2017-07-21 [1] CRAN (R 3.6.2)                  
 ggplot2     * 3.2.1   2019-08-10 [2] CRAN (R 3.5.2)                  
 glue        * 1.3.1   2019-03-12 [2] CRAN (R 3.5.2)                  
 gtable        0.3.0   2019-03-25 [2] CRAN (R 3.5.2)                  
 htmltools     0.4.0   2019-10-04 [2] CRAN (R 3.6.2)                  
 jsonlite      1.6     2018-12-07 [2] CRAN (R 3.5.2)                  
 keyring     * 1.1.0   2018-07-16 [1] CRAN (R 3.6.2)                  
 labeling      0.3     2014-08-23 [2] CRAN (R 3.5.0)                  
 lazyeval      0.2.2   2019-05-22 [2] Github (hadley/lazyeval@c336765)
 lifecycle     0.1.0   2019-08-01 [2] CRAN (R 3.5.2)                  
 magrittr      1.5     2014-11-22 [2] CRAN (R 3.5.0)                  
 memoise       1.1.0   2017-04-21 [2] CRAN (R 3.5.0)                  
 munsell       0.5.0   2018-06-12 [2] CRAN (R 3.5.2)                  
 packrat       0.5.0   2018-11-14 [2] CRAN (R 3.5.2)                  
 pillar        1.4.3   2019-12-20 [2] CRAN (R 3.6.2)                  
 pkgbuild      1.0.6   2019-10-09 [2] CRAN (R 3.6.2)                  
 pkgconfig     2.0.3   2019-09-22 [2] CRAN (R 3.5.2)                  
 pkgload       1.0.2   2018-10-29 [2] CRAN (R 3.5.2)                  
 prettyunits   1.0.2   2015-07-13 [2] CRAN (R 3.5.0)                  
 processx      3.4.1   2019-07-18 [2] CRAN (R 3.5.2)                  
 ps            1.3.0   2018-12-21 [2] CRAN (R 3.5.2)                  
 purrr         0.3.3   2019-10-18 [2] CRAN (R 3.6.2)                  
 R6            2.4.1   2019-11-12 [2] CRAN (R 3.6.2)                  
 Rcpp          1.0.3   2019-11-08 [2] CRAN (R 3.6.2)                  
 remotes       2.1.0   2019-06-24 [2] CRAN (R 3.5.2)                  
 rlang         0.4.2   2019-11-23 [2] CRAN (R 3.6.2)                  
 rprojroot     1.3-2   2018-01-03 [2] CRAN (R 3.5.0)                  
 rstudioapi    0.10    2019-03-19 [2] CRAN (R 3.5.2)                  
 scales        1.1.0   2019-11-18 [2] CRAN (R 3.6.2)                  
 sessioninfo   1.1.1   2018-11-05 [2] CRAN (R 3.5.2)                  
 stringi       1.4.3   2019-03-12 [2] CRAN (R 3.5.2)                  
 stringr       1.4.0   2019-02-10 [2] CRAN (R 3.5.2)                  
 testthat      2.3.1   2019-12-01 [2] CRAN (R 3.6.2)                  
 tibble        2.1.3   2019-06-06 [2] CRAN (R 3.5.2)                  
 tidyselect    0.2.5   2018-10-11 [2] CRAN (R 3.5.2)                  
 usethis       1.5.1   2019-07-04 [2] CRAN (R 3.5.2)                  
 utf8          1.1.4   2018-05-24 [2] CRAN (R 3.5.0)                  
 vctrs         0.2.1   2019-12-17 [2] CRAN (R 3.6.2)                  
 withr         2.1.2   2018-03-15 [2] CRAN (R 3.5.0)                  
 zeallot       0.1.0   2018-01-28 [2] CRAN (R 3.5.0)                  

[1] /home/iago/R/x86_64-pc-linux-gnu-library/3.6
[2] /home/iago/R/x86_64-pc-linux-gnu-library/3.5
[3] /usr/local/lib/R/site-library
[4] /usr/lib/R/site-library
[5] /usr/lib/R/library
```
This issue happens on Windows only.

 When email message is created using compose_email function blastula with a message body that uses emojis (ref: https://github.com/hadley/emo), the emoji is not shown correct 

Run the following example from RStudio IDE. Notice that the pizza emoji is not displayed correctly in the gt table in the title (Check the attached snapshot)
```r
library(gt)
library(blastula)
library(tidyverse)
library(glue)
library(scales)
library(emo)

# Create short labels for months (displays
# better for small plots in email messages)
initial_months <-
  c(" ",
    "J", "F", "M", "A", "M", "J",
    "J", "A", "S", "O", "N", "D",
    " ")

# Get the total pizzaplace sales in the
# 2015 year; format as a currency value
total_sales_2015 <-
  pizzaplace$price %>%
  sum() %>%
  comma_format(
    big.mark = ",",
    prefix = "$"
  )(.)

# Create a plot using the `pizzaplace` dataset
pizza_plot <-
  pizzaplace %>%
  mutate(type = str_to_title(type)) %>%
  mutate(date = as.Date(date)) %>%
  group_by(date, type) %>%
  summarize(Pizzas = n(), Income = sum(price)) %>%
  ungroup() %>%
  ggplot() +
  geom_point(aes(x = date, y = Income), color = "steelblue") +
  facet_wrap(~type) +
  scale_x_date(date_breaks = "1 month", date_labels = initial_months) +
  scale_y_continuous(labels = scales::comma) +
  labs(
    title = "pizzaplace: Daily Pizza Sales in 2015",
    subtitle = "Faceted by the type of pizza",
    x = NULL,
    y = "Number of Pizzas Sold") +
  theme_minimal() +
  theme(
    axis.text = element_text(color = "grey25"),
    axis.text.x = element_text(size = 6),
    axis.text.y = element_text(size = 8),
    strip.text.x = element_text(size = 9),
    axis.title = element_text(color = "grey25"),
    legend.title = element_text(color = "grey25"),
    legend.text = element_text(color = "grey25"),
    panel.grid.major = element_line(color = "grey75"),
    plot.title = element_text(color = "grey25"),
    plot.caption = element_text(color = "grey25"),
    plot.subtitle = element_text(color = "grey25"),
    plot.margin = unit(c(20, 20, 20, 20), "points"),
    legend.box.spacing = unit(2, "points"),
    legend.position = "bottom")

# Make the plot suitable for mailing by
# converting it to an HTML fragment
pizza_plot_email <-
  pizza_plot %>%
  blastula::add_ggplot()

# Create `sizes_order` and `types_order` to
# support the ordering of pizza sizes and types
sizes_order <- c("S", "M", "L", "XL", "XXL")
types_order <- c("Classic", "Chicken", "Supreme", "Veggie")

# Create a gt table that uses the `pizzaplace`
# dataset; ensure that `as_raw_html()` is used
# (that gets us an HTML fragement with inlined
# CSS styles)
pizza_tab_email <-
  pizzaplace %>%
  dplyr::mutate(type = stringr::str_to_title(type)) %>%
  dplyr::mutate(size = factor(size, levels = sizes_order)) %>%
  dplyr::mutate(type = factor(type, levels = types_order)) %>%
  dplyr::group_by(type, size) %>%
  summarize(
    pies = n(),
    income = sum(price)
  ) %>%
  dplyr::arrange(type, size) %>%
  gt(rowname_col = "size") %>%
  fmt_currency(
    columns = vars(income),
    currency = "USD") %>%
  fmt_number(
    columns = vars(pies),
    use_seps = TRUE,
    decimals = 0
  ) %>%
  summary_rows(
    groups = TRUE,
    columns = "pies",
    fns = list(TOTAL = "sum"),
    formatter = fmt_number,
    use_seps = TRUE,
    decimals = 0
  ) %>%
  summary_rows(
    groups = TRUE,
    columns = "income",
    fns = list(TOTAL = "sum"),
    formatter = fmt_currency,
    currency = "USD"
  ) %>%
  tab_options(
    table.width = px(300),
    summary_row.background.color = "#FFFEEE",
    row_group.background.color = "#E6EFFC",
    table.font.size = "small",
    heading.title.font.size = "small",
    heading.subtitle.font.size = "x-small",
    row_group.font.size = "small",
    column_labels.font.size = "small",
    data_row.padding = "5px"
  ) %>%
  cols_label(
    pies = "Pizzas",
    income = "Income"
  ) %>%
  tab_header(
    title = paste0("My ", emo::ji("pizza"), " sales in 2015"),
    subtitle = "Split by the type of pizza and the size"
  ) %>%
  as_raw_html()

message_body <-
  glue::glue(
"Hello,
Just wanted to let you know that pizza
sales were pretty strong in 2015. When
I look back at the numbers, it's **{total_sales_2015}**
in sales. Not too bad. All things considered.
Here's a plot of the daily pizza sales. I
faceted by the type of pizza because I know
that's your preference:
{pizza_plot_email}
Here is a table that shows a breakdown
of the 2015 results by pizza size, split into
*Pizza Type* groups:
{pizza_tab_email}
I also put all the 2015 numbers into an R
dataset called `pizzaplace`. Not sure why
I did that, but I did. It's in the `gt`
package.
Talk to you later,
Alfonso"
)

# Create an email message using the `compose_email()`
# function from the blastula package
email <- blastula::compose_email(body = md(message_body))

email
```
<img width="899" alt="windows_blastula_gt_emo_ji_does not work" src="https://user-images.githubusercontent.com/5369655/71756444-c7070000-2e44-11ea-91b2-6e057532f388.png">

First, thank you for the package. It can be very useful.

I open this issue by what seems to be a bug. I was following the example in the [RStudio blog](https://blog.rstudio.com/2019/12/05/emails-from-r-blastula-0-3/) and I got a weird behaviour (has it to do with issue #93?).
First, I try
```
library(blastula)
library(keyring)

create_smtp_creds_key(
  id = "my_id",
  user = "my@email.org",
  provider = "office365"
)

library(ggplot2)
library(glue)
plot <- qplot(disp, hp, data = mtcars, colour = mpg)
plot_email <- add_ggplot(plot)
email <- compose_email(
  body = md(c(
    "Team, How would you plot the relationship between these 3 variables?",
    plot_email
  ))
)

email %>%
  smtp_send(
    from = "my@email.org",
    to = "email@gmail.com",
    subject = "Testing the `smtp_send()` function",
    credentials = creds_key(id = "my_id")
  )
```
but I get
```
Error in curl::curl_fetch_memory(url, handle = h) : MAIL failed: 530
```
Then, following the suggestion [here](https://stackoverflow.com/a/59359269/997979), I add `use_ssl = TRUE` to `create_smtp_creds_key`, so:
```
create_smtp_creds_key(
  id = "my_id",
  user = "my@email.org",
  provider = "office365",
  use_ssl = TRUE
)
email %>%
  smtp_send(
    from = "my@email.org",
    to = "email@gmail.com",
    subject = "Testing the `smtp_send()` function",
    credentials = creds_key(id = "my_id")
  )
```
Then, the email is sent, but it is shown (both in the sending and in the reception addresses) as in the attached image:
![mail_ex](https://user-images.githubusercontent.com/40892925/71671611-c3f00f00-2d73-11ea-8452-b305873cd57b.png)
Thus, appearing html code, and with the `r` in the email body as an `=`.

Thank you!

Take a look at:

https://github.com/rich-iannone/blastula/blob/9998e41dca776eb4d35199f0f61ec48d8693f306/R/retrieve_credentials.R#L91

If your credentials look like:
```
cred_tbl <- structure(list(service = c("blastula-v1-gmail", "blastula-v1-outlook"
), username = c("xxx@xxx.com", "yyy@yyy.gov")), row.names = c(NA, 
-2L), class = c("tbl_df", "tbl", "data.frame"))
```

This function will return a table with incorrect ids
```
# A tibble: 2 x 3
  id    key_name            username          
  <chr> <chr>               <chr>             
1 gmail blastula-v1-gmail   xxx@xxx.com
2 gmail blastula-v1-outlook yyy@yyy.gov 
```

I think you want to replace this line with
```
creds_tbl <- tibble(
  id = unlist(lapply(creds_tbl$service, function(x) str_split(x, "-")[[1]][3])),
  key_name = creds_tbl$service,
  username = creds_tbl$username
  )
```

There is also an bug where all my keys id stay the same.
I have tried blastula on _Mac Catalina_ using _RStudio_, _R interface_ and _R script command line_. All works as expected.
I have made a daily report _cron_ job. But the `blastula::smtp_send` with _gmail_ gives following error:
`curl::curl_fetch_memory(url, handle = h) : RCPT failed: 553`

Thank you for this package and your help for the cron jobs is appreciated.
In the function `get_smtp_keyring_creds` the object `key_name` is used in an error message before it is assigned. 

So in case there are no keys found, the function would stop, but the error message would be rather confusing:

> Error in stop("There is no blastula key that corresponds to the `key_name` of \"",  : 
>   object 'key_name' not found

Good day! 

I am a Google Code-in participant, wherein we were tasked to find r packages and try to increase the code coverage. I am still a super git newb, but wanted to try it out. I have recently added a test for the smtp-send function. 

So far, from the current <a href="https://codecov.io/gh/rich-iannone/blastula/"><img src="https://codecov.io/gh/rich-iannone/blastula/branch/master/graph/badge.svg"></a>, I was able to raise it to a <a href="https://codecov.io/gh/pilipino/blastula"><img src="https://codecov.io/gh/pilipino/blastula/branch/master/graph/badge.svg"></a>. A link to the coverage that I did could be accessed here : https://codecov.io/gh/pilipino/blastula/branch/master/.

I completely understand that this is far from a drastic improvement, and indeed I wish to increase the code coverage by a couple more points. I've seen the note that `send_mail()` function might be removed so I haven't added tests there yet.

Thank you very much for your time! :)