The documentation for the `backend$set()` method says that the username field is optional.  However, the file backend does not handle situations where the username is not supplied when setting an entry.

``` r
kr <- keyring::backend_file$new()
kr$keyring_unlock(password = "test")
kr$list()
#> [1] service  username
#> <0 rows> (or 0-length row.names)
kr$set_with_value("test",password = "test")
kr$list()
#> Error in vapply(all_items, `[[`, character(1L), "user_name"): values must be length 1,
#>  but FUN(X[[1]]) result is length 0
```

<sup>Created on 2020-01-15 by the [reprex package](https://reprex.tidyverse.org) (v0.3.0)</sup>

```r
sessionInfo()
R version 3.6.0 (2019-04-26)
Platform: x86_64-redhat-linux-gnu (64-bit)
Running under: CentOS Linux 7 (Core)

Matrix products: default
BLAS/LAPACK: /usr/lib64/R/lib/libRblas.so

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C               LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8
 [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8    LC_PAPER=en_US.UTF-8       LC_NAME=C
 [9] LC_ADDRESS=C               LC_TELEPHONE=C             LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C

attached base packages:
 [1] stats     graphics  grDevices utils     datasets  methods   base

loaded via a namespace (and not attached):
 [1] Rcpp_1.0.3       ps_1.3.0         getPass_0.2-2    withr_2.1.2      digest_0.6.23    assertthat_0.2.1
 [7] rappdirs_0.3.1   R6_2.4.1         reprex_0.3.0     evaluate_0.14    rlang_0.4.2      rstudioapi_0.10
[13] fs_1.3.1         callr_3.4.0      whisker_0.4      filelock_1.0.2   keyring_1.1.0    rmarkdown_2.0
[19] tools_3.6.0      processx_3.4.1   xfun_0.12        yaml_2.2.0       compiler_3.6.0   sodium_1.1
[25] clipr_0.7.0      htmltools_0.4.0  knitr_1.26
```

This is a sugestion to add a `keyring_exists` method. Something like this 
```r
keyring_exist <- function(keyring = NULL) {
  keyring <- keyring %||% private$keyring
  keyring %in% self$keyring_list[["keyring"]]
}
```

This would allow to easily test if a keyring exists in a backend supporting multi keyring. 


I encounter this use case while configuring some environment (RStudio Servers) to use file backend instead of default env backend. File backend seems to be the only one that can't use a default keyring without a `keyring_create` call first. 

``` r
library(keyring)
Sys.setenv(R_KEYRING_BACKEND = "file")
kb <- default_backend()
kb$keyring_list()
#> [1] keyring     num_secrets locked     
#> <0 rows> (or 0-length row.names)
kb$set_with_value(service = "new-serv", "user", "pwd")
#> Error in b_file_keyring_is_locked(self, private, keyring): Keyring `system` does not exist
kb$keyring_create()
kb$keyring_list()
#>   keyring num_secrets locked
#> 1  system           0   TRUE
```

<sup>Created on 2019-08-01 by the [reprex package](https://reprex.tidyverse.org) (v0.3.0)</sup>

Si I would like to test if keyring exists and offer to create a default one otherwise for new user. I do that currently with some code in `Rprofile.site` like this one.
``` r
library(keyring)
Sys.setenv(R_KEYRING_BACKEND = "file")
kb <- default_backend()
if (! kb$.__enclos_env__$private$keyring %in% kb$keyring_list()$keyring) {
    message("To use default, keyring please run", 
            '\n   library("keyring")', 
            '\n   kb <- default_keyring()', 
            '\n   kb$keyring_create()', 
            '\nand enter a personal password for this default keyring') 
}
#> To use default, keyring please run
#>    library("keyring")
#>    kb <- default_keyring()
#>    kb$keyring_create()
#> and enter a personal password for this default keyring
```

<sup>Created on 2019-08-01 by the [reprex package](https://reprex.tidyverse.org) (v0.3.0)</sup>

This creation step is required even for the Rstudio feature [describe in Support](https://support.rstudio.com/hc/en-us/articles/360000969634-Using-Keyring) on a RStudio Server because libsecret does not work if no GUI. 

Would you consider a PR to add a `keyring_exists` method ?

I'm using {keyring} in one of my packages and I'm getting this error in some machines:

```
Error in keyring::keyring_unlock() : attempt to apply non-function
In addition: Warning message:
In default_backend_auto() :
  Selecting ‘env’ backend. Secrets are stored in environment variables
```

I resolved it by checking if `default_backend()$name != "env"` before unlocking. Shouldn't `keyring_unlock()` itself check this (or, alternatively, add an "unlock" function to env backend that does nothing)?
Occasionally, I get the following error:

```r
keyring::key_list()
# Error in .Call("keyring_wincred_enumerate", filter) : 
#   "keyring_wincred_enumerate" not resolved from current namespace (keyring)

getNamespaceExports("keyring")
#  [1] "key_list"               "key_get_raw"            "keyring_unlock"         "backend"               
#  [5] "backend_env"            "key_set_with_raw_value" "key_set"                "key_delete"            
#  [9] "backend_macos"          "keyring_delete"         "key_get"                "keyring_is_locked"     
# [13] "keyring_create"         "has_keyring_support"    "backend_file"           "backend_wincred"       
# [17] "default_backend"        "keyring_list"           "key_set_with_value"     "backend_secret_service"
# [21] "backend_keyrings"       "keyring_lock"          
```

The only time I can get it to happen is after I've hibernated the laptop and resumed. It doesn't happen every time. The only fix I've been able to find has been to re-start R. Notably, this does not work:

```r
keyring::key_list()
# Error in .Call("keyring_wincred_enumerate", filter) : 
#   "keyring_wincred_enumerate" not resolved from current namespace (keyring)
dlls <- getLoadedDLLs()
dlls[ "keyring" ]
#                                                           Filename Dynamic.Lookup
# keyring c:/Users/r2/R/win-library/3.5/keyring/libs/x64/keyring.dll          FALSE

library.dynam.unload("keyring", "c:/Users/r2/R/win-library/3.5/keyring", verbose=TRUE)
# now dyn.unload("c:/Users/r2/R/win-library/3.5/keyring/libs/x64/keyring.dll") ...
dlls <- getLoadedDLLs()
dlls[ "keyring" ] # empty

keyring::key_list()
# Error in .Call("keyring_wincred_enumerate", filter) : 
#   "keyring_wincred_enumerate" not resolved from current namespace (keyring)
dlls <- getLoadedDLLs()
dlls[ "keyring" ] # empty

library.dynam("keyring", "keyring", "c:/Users/r2/R/win-library/3.5", verbose=TRUE)
# now dyn.load("c:/Users/r2/R/win-library/3.5/keyring/libs/x64/keyring.dll") ...
dlls <- getLoadedDLLs()
dlls[ "keyring" ]
#                                                           Filename Dynamic.Lookup
# keyring c:/Users/r2/R/win-library/3.5/keyring/libs/x64/keyring.dll          FALSE
keyring::key_list()
# Error in .Call("keyring_wincred_enumerate", filter) : 
#   "keyring_wincred_enumerate" not resolved from current namespace (keyring)
```

<details><summary>session info</summary>

```r
sessionInfo()
# R version 3.5.3 (2019-03-11)
# Platform: x86_64-w64-mingw32/x64 (64-bit)
# Running under: Windows 10 x64 (build 17763)
# Matrix products: default
# locale:
# [1] LC_COLLATE=English_United States.1252  LC_CTYPE=English_United States.1252    LC_MONETARY=English_United States.1252
# [4] LC_NUMERIC=C                           LC_TIME=English_United States.1252    
# attached base packages:
# [1] stats     graphics  grDevices utils     datasets  methods   base     
# other attached packages:
#  [1] keyring_1.1.0             logger_0.1                data.table_1.12.0        ggplot2_3.1.0             
#  [5] tidyr_0.8.2               dplyr_0.8.0.1             purrr_0.2.5              tibble_2.0.1              
#  [9] testthat_2.0.0                      
# loaded via a namespace (and not attached):
#  [1] fs_1.2.6              usethis_1.4.0         bit64_0.9-7           lubridate_1.7.4       devtools_2.0.1       
#  [6] RColorBrewer_1.1-2    rprojroot_1.3-2       tools_3.5.3           backports_1.1.2       rredis_1.7.0         
# [11] utf8_1.1.4            R6_2.4.0              DT_0.5                rpart_4.1-13          Hmisc_4.2-0          
# [16] rgeos_0.3-28          DBI_1.0.0             lazyeval_0.2.1        colorspace_1.3-2      nnet_7.3-12          
# [21] withr_2.1.2           sp_1.3-1              tidyselect_0.2.5      gridExtra_2.3         prettyunits_1.0.2    
# [26] processx_3.1.0        bit_1.1-14            compiler_3.5.3        cli_1.0.1             formatR_1.5          
# [31] htmlTable_1.12        flextable_0.4.5       xml2_1.2.0            officer_0.3.2         desc_1.2.0           
# [36] scales_1.0.0          checkmate_1.9.1       readr_1.1.1           odbc_1.1.6            callr_2.0.4          
# [41] commonmark_1.7        stringr_1.4.0         digest_0.6.18         foreign_0.8-71        rmarkdown_1.11       
# [46] base64enc_0.1-3       pkgconfig_2.0.2       htmltools_0.3.6       sessioninfo_1.1.1     htmlwidgets_1.3      
# [51] rlang_0.3.1           rstudioapi_0.9.0      zoo_1.8-3             jsonlite_1.6          config_0.3           
# [56] zip_1.0.0             acepack_1.4.1         magrittr_1.5          Formula_1.2-3         futile.logger_1.4.3  
# [61] Matrix_1.2-15         fansi_0.4.0           Rcpp_1.0.0            munsell_0.5.0         gdtools_0.1.7        
# [66] yaml_2.2.0            stringi_1.3.1         pkgbuild_1.0.2        plyr_1.8.4            blob_1.1.1           
# [71] grid_3.5.3            pls_2.7-0             crayon_1.3.4          lattice_0.20-38       splines_3.5.3        
# [76] hms_0.4.2             knitr_1.20            pillar_1.3.1          uuid_0.1-2            pkgload_1.0.2        
# [81] futile.options_1.0.1  glue_1.3.0            evaluate_0.11         latticeExtra_0.6-28   lambda.r_1.2.3       
# [86] remotes_2.0.2         gtable_0.2.0          assertthat_0.2.0      roxygen2_6.1.1        violinplot_0.5.2.9000
# [91] survival_2.43-3       memoise_1.1.0         cluster_2.0.7-1       tableHTML_1.1.0       ztable_0.2.0         
```

</details>

I have not been able to define a clear reproducible pathway to get the error: many times, a hibernate/restart does not trigger the error. But every time it triggers, it has been post restart from a hibernation.

When it works, I see:

```r
getDLLRegisteredRoutines(dlls$keyring)
#                       .Call .Call.numParameters
# 1       keyring_wincred_get                   1
# 2    keyring_wincred_exists                   1
# 3       keyring_wincred_set                   4
# 4    keyring_wincred_delete                   1
# 5 keyring_wincred_enumerate                   1
```

(I just restarted R, so now it's working ... I'll get the error again and come back and show what this command does while failing.)
We switched to using our active directory email and password for sql server login.

If I set `key_set("uid")` as `name@mycompanyname.com` Then try to use it in connecting to a database I get an error

> Cannot open server "mycompanyname.com" requested by the login.  The login failed.

but when I return just `key_get("uid")` 
`name@mycompanyname.com`

 I am guessing the `@` is messing up the parsing somewhere.

The code used to connect to the database is

```r
con <- DBI::dbConnect(odbc::odbc(), Driver = "ODBC Driver 17 for SQL Server", 
Server = "myserver.database.windows.net", 
Database = "mydb", UID = key_get("uid"), PWD = key_get("pwd"))
```
Hi, 

I am getting the below error after installing Keyring package and calling the library 
>install.package("Keyring", dependencies = TRUE)
>library("Keyring")
> keyring::key_set(service= "sqldw_pw")
Error in namespaceExport(ns, exports) :    
undefined exports: askpass, ssh_askpass

This may be due this recent change : https://github.com/r-lib/keyring/commit/099006a5360bd490c2a1158f35301add51063f68#diff-9c46cb4f3228981231f7387462e0aeb8

Please suggest how I can resolve this.
Thank You!
Hi, I am trying to use the backend function in Linux (no GENOME)
env <- backend_env$new()
env$set("keyring", username ="GLH")
And the following commands will get me password when I try them
env$get("keyring", username ="GLH")
Sys.getenv("keyring:GLH")
However, I am not able to get to password back when needed. I tried to save the "env" as .RData file and read it. the file looks fine but still can get the password. Please let me know how to use this backend function to store password. Thanks


as spoked in issue #64 : option to change the prompt in keyring_set()
Hi,

Your package is really useful and simple to use. Thank you for that.
Would it be possible to add an option to change the prompt when using keyring_set.

Thanks in advance.
Hello,

Is there a way to use keyring with an r shiny application deployed on shinyapps.io? My goal is encrypt my MySQL password in the code should anyone somehow get access to my code bundle.

Thanks in advance.