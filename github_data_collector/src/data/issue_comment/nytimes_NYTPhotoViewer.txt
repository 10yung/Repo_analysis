Hi, I need help in adding my custom captionView in overlayView can u provide some help in this matter as I cant find documentation or help in this process.

I am using following line to set View but nothing is happening: 
photoViewController.overlayView?.captionView = myView
Fixes the `NYTPhotoViewerCore` build target.

Fixes #283 
Installing from cocoa pods always installs version 2.0 and never installs latest version 3.0.0 or 3.0.1. I even tried specifying version but no success
_carthage update_ gives: 

  Undefined symbols for architecture armv7:
    "_OBJC_CLASS_$_NYTInterstitialViewController", referenced from:
        objc-class-ref in NYTPhotosViewController.o
  ld: symbol(s) not found for architecture armv7
  clang: error: linker command failed with exit code 1 (use -v to see invocation)

Hey all,
Great work! 
How can we pre-load an image before and after the current image? I read in the threads that was not part of designing this library, can we understand why? and it would be great if you can explain in any level how can somebody else implement it and if you would be open to merge it if it looks good?

Thanks!
Fatal Exception: NSInternalInconsistencyException
No view controller managing visible view <UIView: 0x15be36210; frame = (0 0; 414 896); autoresize = W+H; gestureRecognizers = <NSArray: 0x28089e6d0>; layer = <CALayer: 0x280688fc0>>

Fatal Exception: NSInternalInconsistencyException
0  CoreFoundation                 0x1a4259eb8 __exceptionPreprocess
1  libobjc.A.dylib                0x1a3453f18 objc_exception_throw
2  CoreFoundation                 0x1a416bce0 +[_CFXNotificationTokenRegistration keyCallbacks]
3  Foundation                     0x1a4c6d0fc -[NSAssertionHandler handleFailureInMethod:object:file:lineNumber:description:]
4  UIKitCore                      0x1d18c0184 -[UIPageViewController queuingScrollView:didEndManualScroll:toRevealView:direction:animated:didFinish:didComplete:]
5  UIKitCore                      0x1d18caa80 -[_UIQueuingScrollView _notifyDelegateDidEndManualScroll:toRevealView:direction:animated:didFinish:didComplete:]
6  UIKitCore                      0x1d18ccce8 -[_UITransitionState cleanupWithFinishedState:completedState:]
7  UIKitCore                      0x1d18c953c -[_UIQueuingScrollView _cleanUpCompletionState:didFinish:didComplete:]
8  UIKitCore                      0x1d18cb5a4 -[_UIQueuingScrollView _commitGestureDrivenScrollRevealingView:concealingView:inDirection:canComplete:]
9  UIKitCore                      0x1d18cbfc0 __54-[_UIQueuingScrollView _didScrollWithAnimation:force:]_block_invoke
10 UIKitCore                      0x1d18cba80 -[_UIQueuingScrollView _didScrollWithAnimation:force:]
11 UIKitCore                      0x1d18c7630 -[_UIQueuingScrollView layoutSubviews]
12 UIKitCore                      0x1d23ed13c -[UIView(CALayerDelegate) layoutSublayersOfLayer:]
13 libobjc.A.dylib                0x1a344f2a4 -[NSObject performSelector:withObject:]
14 QuartzCore                     0x1a88fe110 -[CALayer layoutSublayers]
15 QuartzCore                     0x1a88fe3f0 CA::Layer::layout_if_needed(CA::Transaction*)
16 QuartzCore                     0x1a8861c18 CA::Context::commit_transaction(CA::Transaction*)
17 QuartzCore                     0x1a8891140 CA::Transaction::commit()
18 QuartzCore                     0x1a87cbc04 CA::Display::DisplayLink::dispatch_items(unsigned long long, unsigned long long, unsigned long long)
19 QuartzCore                     0x1a8898798 display_timer_callback(__CFMachPort*, void*, long, void*)
20 CoreFoundation                 0x1a41c0538 __CFMachPortPerform
21 CoreFoundation                 0x1a41e8bc8 __CFRUNLOOP_IS_CALLING_OUT_TO_A_SOURCE1_PERFORM_FUNCTION__
22 CoreFoundation                 0x1a41e82c0 __CFRunLoopDoSource1
23 CoreFoundation                 0x1a41e2e28 __CFRunLoopRun
24 CoreFoundation                 0x1a41e22e8 CFRunLoopRunSpecific
25 GraphicsServices               0x1a6496be8 GSEventRunModal
26 UIKitCore                      0x1d1f24088 UIApplicationMain
27 photo-safe                     0x102e9f03c main (main.m:14)
28 libdyld.dylib                  0x1a3c95050 start
See screenshot. It is a dismiss animation on pan gesture in progress. Gradient layer of photo caption view leads to this visual bug.
Removing of gradient layer solves the problem.

Should I make PR were gradient layer just removed?

<img width="582" alt="Screenshot 2019-03-13 at 11 24 59" src="https://user-images.githubusercontent.com/1121645/54258038-2e388880-4583-11e9-9a29-e795a700416f.png">

When gif support is enabled and the image being showed is is gif,  and `photosViewController:referenceViewForPhoto:`  is implemented to support translation, methods `newAnimationViewFromView` of `FLAnimatedImageView` is not correct. This will lead to wrong animation.
`NYTPhotoViewerDataSource` has `NS_ASSUME_NONNULL_BEGIN`, and in definition of `indexOfPhoto:(id <NYTPhoto>)photo`, `photo` is assumed to be non null. However, property `currentlyDisplayedPhoto` in `NYTPhotosViewController` is declared as nullable and in `NYTPhotosViewController::setCurrentlyDisplayedViewController` there is the following call `[self.dataSource indexOfPhoto:self.currentlyDisplayedPhoto]`, which sometimes calls `indexOfPhoto` with nil.

The problem is due to `NS_ASSUME_NONNULL_BEGIN`  Swift translates `indexOfPhoto` delegate method to `func index(of photo:NYTPhoto) -> Int`, and there is no way to check for nil. The only workaround is to call some objc method that allows checking for nil.

I'm not sure if the project is still maintained, but hopefully it is and it would be nice if somebody could fix this issue.
<!--
Thanks for contributing!

Please open pull requests against the `develop` branch, and add a relevant note to the `develop` section of the CHANGELOG [0] as part of your pull request.

[0]: https://github.com/NYTimes/NYTPhotoViewer/blob/develop/CHANGELOG.md#develop
-->
