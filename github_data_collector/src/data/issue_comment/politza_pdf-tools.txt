Sometimes (quite often), when I edit an existing annotation, I'm able to open it and edit the text, but when I want to save/commit it (<kbd>C-c C-c</kbd>), I get the following error and nothing is saved:

    pdf-info-query: epdfinfo: No such annotation: annot-4-0

To be able to commit the annotation, I then need to revert the PDFView buffer, and open/edit/commit the annotation again, which is quite annoying.

I tried to find more details about what is causing this error, but it really looks like it happens randomly. I guess, it could be caused by incompatibility with some minor modes I use (see below), but I was not able to determine which. Any help with solving this issue is appreciated.

    Enabled minor modes: Async-Bytecomp-Package Auto-Composition
    Auto-Compression Auto-Encryption Auto-Insert Cua Delete-Selection
    Desktop-Save Diff-Auto-Refine Diff-Hl Direnv Electric-Indent
    File-Name-Shadow Font-Lock Global-Auto-Revert Global-Diff-Hl
    Global-Edit-Server-Edit Global-Eldoc Global-Ethan-Wspace
    Global-Flycheck Global-Font-Lock Global-Git-Commit Global-Magit-File
    Helm Line-Number Magit-Auto-Revert Mouse-Wheel Override-Global
    Pdf-Annot Pdf-Cache-Prefetch Pdf-History Pdf-Isearch Pdf-Links
    Pdf-Misc Pdf-Misc-Context-Menu Pdf-Misc-Menu-Bar
    Pdf-Misc-Size-Indication Pdf-Occur-Global Pdf-Outline Pdf-Sync Recentf
    Save-Place Savehist Shell-Dirtrack Show-Paren Size-Indication Tex-Pdf
    Tex-Source-Correlate Tooltip Transient-Mark Which-Function Which-Key
    Winner
I have just tried to upgrade pdf-tools on my Debian 10 system, with vanilla Emacs. It fails to rebuild the server with the following output:

```
---------------------------
 Configuring and compiling 
---------------------------
autoreconf -i
configure.ac:15: installing './ar-lib'
configure.ac:11: installing './compile'
configure.ac:78: installing './config.guess'
configure.ac:78: installing './config.sub'
configure.ac:6: installing './install-sh'
configure.ac:6: installing './missing'
Makefile.am: installing './depcomp'
./configure -q --bindir=/home/trive/.emacs.d/elpa/pdf-tools-20191228.1005/ && make -s
configure: error: Package requirements (poppler) were not met:

No package 'poppler' found

Consider adjusting the PKG_CONFIG_PATH environment variable if you
installed software in a non-standard prefix.

Alternatively, you may set the environment variables poppler_CFLAGS
and poppler_LIBS to avoid the need to call pkg-config.
See the pkg-config man page for more details.
===========================
     Build failed.  ;o(    
===========================
Note: maybe try the '-d' option.

Comint exited abnormally with code 1 at Mon Dec 30 03:22:02
```

I have the same packages installed that worked fine before.  I have tried building from GitHub too, but here it claims that cask is missing even though I have installed it. 

I hope there's a fix for this, because reverting to DocView really feels like a downgrade! 
I switched my Emacs configuration from Debian to Windows 10. My config for pdf-tools remains unchanged. I noticed however that text rendering in pdf-tools now is fuzzy. The text is blurry and though readable is not clear. Only if I toggle the Window frame to full size (the whole screen), then the text is clear. This issue is unique to Emacs 7 (developmental) and cannot be reproduced in Emacs 26.3.
I recently removed my `.elpa` directory and had `package.el` reinstall all my packages, which includes `pdf-tools`, since I installed it from MELPA. I also use `use-package` and it turned out that my particular `use-package` declaration for `pdf-tools` actually caused a problem.

Since I'm using a `use-package` declaration that is similar to John Wiegley's example [here](https://github.com/jwiegley/use-package#magic-handlers), I've come to wonder what the correct declaration would be, and whether it would be a good idea to add it to the README.

In [this](https://github.com/politza/pdf-tools/issues/482#issuecomment-472597902) Github issue, you suggest the following declaration:

``` emacs-lisp
(use-package pdf-loader
  :config (pdf-loader-install))
```

However, in my case, this doesn't work, because I also bind some keys in `pdf-view-mode-map` in my `use-package` declaration, and just loading `pdf-loader` doesn't seem to define this key map.

The background story:

After blowing away my `.elpa` directory and letting Emacs repopulate it, I ran into the problem that whenever I tried opening a pdf file, I got the following warning:

    `pdf-occur.elc` failed to define function pdf-occur-global-minor-mode

The warning turns up a few times in the issues reported on Github, but there was no solution that solved the issue for me. In particular, the suggestion to reinstall the package didn't work, because that was basically what triggered the error in the first place.

So I started digging into this, and I found that `pdf-occur.el` hadn't been compiled properly: the file `pdf-occur.elc` did not contain any byte code. This turned out to be caused by the fact that `pdf-occur.el` has `(require 'pdf-tools)`, combined with the fact my `use-package` config is for the package `pdf-tools` and has `:config (pdf-tools-install)` in it.

Because of the `require` statement in `pdf-occur.el`, compiling this file caused `pdf-tools.el` to be loaded. Because of the `:config` section in my `use-package` declaration, loading this file also caused the function `pdf-tools-install` to be called. Since I was installing the package in a fresh instance, meaning the server `epdfinfo` didn't exist, `pdf-tools-install` proceeded to compile `epdfinfo`.

That compilation went fine, but it somehow caused the compilation of `pdf-occur.el` to fail. The file `pdf-occur.elc` *is* created (so `pdf-occur.el` is not loaded instead), but it is empty.

I know it's the building of `epdfinfo` that causes the compilation of `pdf-occur.el` to fail, because if I answer `n` to the question whether I want to build `epdfinfo`, `pdf-occur.el` compiles fine. (John Wiegley's `use-package` example for `pdf-tools` passes `:no-query` to the call to `pdf-tools-install`, but I don't.)

So, to (try and) put it in a nut shell: if you have a `use-package` declaration for `pdf-tools` and the `:config` section calls `pdf-tools-install`, and if you then uninstall `pdf-tools`, restart Emacs and reinstall `pdf-tools`, you'll likely run into this problem.


I have a document for which forward and backward search works (with auctex). It's a multi-file doc.

However, neither direction works when a specific source file. When I invoke the auctex view command in this source file, I get `epdfinfo: "Destination not found"`. Equally, when I click on a location in the PDF which corresponds to that source file, I get the same error message.

Here are some (useless?) logs:
```
21:12:07 synctex-backward-search:/redacted/main.pdf:2:0.2033898305084746:0.6039279869067103
21:12:08 ERR
Destination not found
.
21:12:22 synctex-forward-search:/redacted/main.pdf:/redacted/./intro.tex:142:100
21:12:23 ERR
Destination not found
```

Any ideas? How could I debug this further?
When I use `C-c C-a t` to annotate a `pdf`, I get a picture that blocks out part of the text right in the middle of the page, but nothing to indicate where the annotation has been placed on the page. 

A yellow label appears only when the mouse pointer happens to roll over that position, as shown in the picture below (mouse pointer moved away to operate screen capture). 

![圖片](https://user-images.githubusercontent.com/7592695/68487928-fa7f4100-027e-11ea-92f5-3b10326aa23a.png)

The ocr-ed Chinese text has its own issues as plain-text is jumbled up. So markup annotation is out of the question. 

![圖片](https://user-images.githubusercontent.com/7592695/68488256-a032b000-027f-11ea-8ad7-daee865d5fa7.png)

Is there a way to fix this? 
Is there a way to copy the text of a highlighted region (annotation) from the pdf to the kill ring without manually selecting the region’s boundaries again?

I use [org-noter](https://github.com/weirdNox/org-noter) to bulk extract the text of all the highighted regions in the pdf. It works fine. Occasionally, I would like to copy to the kill ring the text of just one highlight. Currently I have to select manually again with the mouse the start/end boundaries of the same region which i already highighted. Is there a smarter way to do this?

[By the way: thanks for pdf-tools, which I find very usefull in my research work.] 
I think that I have to have a similar issue to #439 and #493 as I recently went into the package manager in Emacs and upgraded pdf-tools package. On restarting Emacs, I was asked whether I want to (re)build the epdfinfo program at which I encountered the following error:

```
/home/jkoch/.emacs.d/elpa/pdf-tools-0.90/build/server/
Failed to recognize this system, trying to continue.
---------------------------
 Configuring and compiling 
---------------------------
./configure -q  && make -s
Preparing installation files ...
Installing ...
Finished
configure: error: in `/home/jkoch/.emacs.d/elpa/pdf-tools-0.90/build/server':
configure: error: no acceptable C compiler found in $PATH
See `config.log' for more details
===========================
     Build failed.  ;o(    
===========================
Note: maybe try the '-d' option.

Comint exited abnormally with code 1 at Mon Nov  4 13:39:14
```
I have tried to remove pdf-tools completely and install fresh but this did not work. I am somewhat confused as to what has changed on my system since the last time I upgraded pdf-tools. Any insights would be most appreciated as pdf-tools is a great package.

