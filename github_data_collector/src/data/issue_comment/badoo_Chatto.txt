Trying to get Chatto Demo code working within my own app and getting an assertion failure.


https://stackoverflow.com/questions/59793131/trying-to-get-chatto-demo-code-working-within-my-own-app-and-getting-asserting-f
Hello, I am using CompoundMessage to show my chat in ChatViewController. I am using SlidingDataSource here. Now I want to delete a chat item from ChatViewController and for that want to remove an item from SlidingDataSource. But I can see that the index has some dependencies on some of the property named windowOffset, windowCount, itemsOffset. Can any explain to me about the properties or give me a proper way to delete an Element item from SlidingDataSources array?? I don't see any documentation on SlidingDataSource. Thanks in advance
Fix for https://github.com/badoo/Chatto/issues/550
Will you change the appearance of the message context menu like in iOS 13?
Are there any plans to add it?

Are there any plans to add this way to install?
Fixes issue #613 
When updating heights of multiple items (18 items in my example), I've got a visual bug - flickering effect with new (updated) items are flowing up from the bottom of collection and moving to some top position beyond the screen.
I attached video when you can see it if you will look frame-by-frame.
I also attached a screenshot of the middle state of this animation.

<img width="534" alt="Screenshot 2019-10-02 at 19 03 31" src="https://user-images.githubusercontent.com/1121645/66061045-569bca80-e547-11e9-81c5-fcebaabfe601.png">

Video:
[Screen Recording 2019-10-02 at 18.08.22.mov.zip](https://github.com/badoo/Chatto/files/3682074/Screen.Recording.2019-10-02.at.18.08.22.mov.zip)

Because the ChattoAdditions Podspec file is using the `resources` attribute instead of the `resource_bundles` attribute, an "Assets.car" file is generated that conflicts with the one generated by the host target when using static Pod libraries. You need to change over to `resource_bundles`, which is recommended anyway. From the docs:

> For building the Pod as a static library, we strongly recommend library developers to adopt resource bundles as there can be name collisions using the resources attribute.
private func createPhotoInputItem() -> PhotosChatInputItem {
    let item = PhotosChatInputItem(presentingController: self)
    item.photoInputHandler = { [weak self] image in
      // Your handling logic
    }
    return item
}

-> should be

private func createPhotoInputItem() -> PhotosChatInputItem {
    let item = PhotosChatInputItem(presentingController: self)
    item.photoInputHandler = { [weak self] image, imageInputSource in
      // Your handling logic
    }
    return item
}