### What are the steps to reproduce?
Calling the status update method to update the status of my node.
`node.status({fill: "blue", shape: "dot", text: RED._("mynode.message",{value:"100"}) });`

### What happens?
It doesn't return the localized sentence with a **__value__** parameter. Instead it falls back to the default _en_US_ version.

On the other hand if I pass in a string directly with my localized string it shows the localized version but I'm not able to pass in a specific value. It returns: "\_\_value\_\_ and the localized text"
`node.status({fill: "blue", shape: "dot", text: "mynode.message" });`

### What do you expect to happen?
I expected the localized string with the custom value parameter inside.

### Please tell us about your environment:

- [x] Node-RED version: 1.0.3
- [X] Node.js version: 10.17.0
- [X] npm version: 6.11.3
- [X] Platform/OS: RaspberryPi
- [X] Browser: Safari 13.0.4 (Mac)

I'm using version 1.0.3 via docker on Safari latest. Let's say I want to search for `entity_id`...
![image](https://user-images.githubusercontent.com/1020579/72616298-3b897680-38fc-11ea-9cf8-59b9a78b73b4.png)

I can no longer see the find occurrences :\
![image](https://user-images.githubusercontent.com/1020579/72616314-4217ee00-38fc-11ea-8c3a-de943c659e52.png)

I think the best solution for this would be to have a dedicated content area for search right above the editor surface. Thoughts?

<!--
This issue tracker is for problems with the Node-RED runtime, the editor or the core nodes.

If your issue is:
  - a general 'how-to' type question,
  - a feature request or suggestion for a change,
  - or problems with 3rd party (`node-red-contrib-`) nodes

please use the [Node-RED Forum](https://discourse.nodered.org) or [slack team](https://nodered.org/slack).

You could also consider asking a question on [Stack Overflow](https://stackoverflow.com/questions/tagged/node-red) and tag it `node-red`.

That way the whole Node-RED user community can help, rather than rely on the core development team.

To help us understand the issue, please fill-in as much of the following information as you can:
-->

### What are the steps to reproduce?
Import flows from a JSON-File on my computer. I can click on the file and it puts the content in the text area.

### What happens?
The problem is that all umlauts ( ä,ö,ü) aren't displayed correctly. 

### What do you expect to happen?
All the umlauts should be displayed as they look.

### Please tell us about your environment:

- [x ] Node-RED version: 1.0.3
- [ ] Node.js version:
- [ ] npm version:
- [ x] Platform/OS: Windows
- [ x] Browser: Chrome

Hello,

I'm trying to clone existing project but after pressing the clone button I get Authentication failed. 
I'm using your latest docker image and the application version is v1.0.3.

I tried also latest docker image from "node-red-docker" with application version 0.20.8 where this feature works.

There are no errors in the log.
I've also tried disabling the admin auth which was recommended in previous post with no success.
I've also tried to modify the Dockerfile as recomended in this post, with no change.
https://github.com/node-red/node-red/issues/2120

Any recommendation?

Thank you

<!--
## Before you hit that Submit button....

Please read our [contribution guidelines](https://github.com/node-red/node-red/blob/master/CONTRIBUTING.md)
before submitting a pull-request.

## Types of changes

What types of changes does your code introduce?
Put an `x` in the boxes that apply
-->

- [ ] Bugfix (non-breaking change which fixes an issue)
- [x] New feature (non-breaking change which adds functionality)

<!--
If you want to raise a pull-request with a new feature, or a refactoring
of existing code, it **may well get rejected** if it hasn't been discussed on
the [forum](https://discourse.nodered.org) or
[slack team](https://nodered.org/slack) first.

-->

## Proposed changes

<!-- Describe the nature of this change. What problem does it address? -->
This PR add a feature to admin POST /flows api to make it possible to specify flow credentials in addition to flow specification.

- changes to admin api

POST /flows V2 api changed to accept `credentials` property that points to an object that maps node id to representing credentials key-value object.

## Checklist
<!-- Put an `x` in the boxes that apply -->

- [x] I have read the [contribution guidelines](https://github.com/node-red/node-red/blob/master/CONTRIBUTING.md)
- [x] For non-bugfix PRs, I have discussed this change on the mailing list/slack team.
- [x] I have run `grunt` to verify the unit tests pass
- [x] I have added suitable unit tests to cover the new/changed functionality

The rationale is to collect (via status changes) own list of active sessions for particular tcp-in nodes to allow to pass an external message to those sessions only.
Proposed as a workaround for https://discourse.nodered.org/t/tcp-connection-pool-better-separation/19432.
Please consider applying.

<!--
## Before you hit that Submit button....

Please read our [contribution guidelines](https://github.com/node-red/node-red/blob/master/CONTRIBUTING.md)
before submitting a pull-request.

## Types of changes

What types of changes does your code introduce?
Put an `x` in the boxes that apply
-->

- [ ] Bugfix (non-breaking change which fixes an issue)
- [x] New feature (non-breaking change which adds functionality)

<!--
If you want to raise a pull-request with a new feature, or a refactoring
of existing code, it **may well get rejected** if it hasn't been discussed on
the [forum](https://discourse.nodered.org) or
[slack team](https://nodered.org/slack) first.

-->

## Proposed changes

<!-- Describe the nature of this change. What problem does it address? -->

## Checklist
<!-- Put an `x` in the boxes that apply -->

- [x] I have read the [contribution guidelines](https://github.com/node-red/node-red/blob/master/CONTRIBUTING.md)
- [x] For non-bugfix PRs, I have discussed this change on the mailing list/slack team.
- [ ] I have run `grunt` to verify the unit tests pass
- [ ] I have added suitable unit tests to cover the new/changed functionality

In the "Filter Nodes" filtering search, top of the left nav, I've found a behaviour I'd describe as a bug in that:

Say you have a sub module called, "My Module Foo". The "Foo" will wrap, visually, in the sidebar nav:
```
My Module
Foo
```

But, if you go to search for the specific module in the filtering select and type, "My Module Foo" nothing is found! To find it you have to leave the space out between where it wraps.
Instead, searching by, "My ModuleFoo" finds the item. I think this is bad and therefore filing a bug on the UI.

node-red: ~1.0.3
On Win10, Chrome: 78.0.3904.108 (Official Build) (64-bit) (cohort: Stable)
Hi everyone,

Using node-red v1.0.3 with nodejs v10.

I've started to use the context from localFileSystem, for persistence.
I managed to use it and store items with global.set(...) and flow.set(...) inside function nodes.

I have a contextStore named 'file', and stored a variable a variable with flow.set('count',123,'file'), with a function node. Everything worked well. 

The bug i've found is when i try to retrieve **synchronously** from the 'file' contextStore. Using function node i have this:

```
//ASYNC - working
/*flow.get('count','file',function(err, myCount) {
    if(err){
        node.error(err, msg);
    }else{
        msg.payload=myCount;
        node.send(msg);
    }    
});*/

//SYNC - not working
var a = flow.get('count','file');
msg.payload=a;
return msg;
```

And i get the following error:
12/12/2019, 15:03:10node: c5ed7f86.e463function : (error)
"Error: Callback must be a function"


I've tracked down the error path into the following file from source: @node-red/runtime/lib/nodes/context/localfilesystem.js -> line 248

where it seems that its always expecting a callback function even if its sync:

```
LocalFileSystem.prototype.get = function(scope, key, callback) {
...
    if(typeof callback !== "function"){
        throw new Error("Callback must be a function");
    }
...
```

Hope you guys can fix it shortly,

Cheers,
G.B.


<!--
## Before you hit that Submit button....

Please read our [contribution guidelines](https://github.com/node-red/node-red/blob/master/CONTRIBUTING.md)
before submitting a pull-request.

## Types of changes

What types of changes does your code introduce?
Put an `x` in the boxes that apply
-->

- [x] Bugfix (non-breaking change which fixes an issue)
- [ ] New feature (non-breaking change which adds functionality)

<!--
If you want to raise a pull-request with a new feature, or a refactoring
of existing code, it **may well get rejected** if it hasn't been discussed on
the [forum](https://discourse.nodered.org) or
[slack team](https://nodered.org/slack) first.

-->

## Proposed changes

<!-- Describe the nature of this change. What problem does it address? -->

This PR is a fix of #2399.

In TriggerNode, when the following option is selected, msg object is handled instead of msg.payload.

- the original msg object
- the latest msg object

## Checklist
<!-- Put an `x` in the boxes that apply -->

- [x] I have read the [contribution guidelines](https://github.com/node-red/node-red/blob/master/CONTRIBUTING.md)
- [ ] For non-bugfix PRs, I have discussed this change on the mailing list/slack team.
- [x] I have run `grunt` to verify the unit tests pass
- [ ] I have added suitable unit tests to cover the new/changed functionality

<!--
## Before you hit that Submit button....

Please read our [contribution guidelines](https://github.com/node-red/node-red/blob/master/CONTRIBUTING.md)
before submitting a pull-request.

## Types of changes

What types of changes does your code introduce?
Put an `x` in the boxes that apply
-->

- [ ] Bugfix (non-breaking change which fixes an issue)
- [x] New feature (non-breaking change which adds functionality)

<!--
If you want to raise a pull-request with a new feature, or a refactoring
of existing code, it **may well get rejected** if it hasn't been discussed on
the [forum](https://discourse.nodered.org) or
[slack team](https://nodered.org/slack) first.

-->

## Proposed changes

<!-- Describe the nature of this change. What problem does it address? -->
Update core nodes to support new [Node Messaging API](https://github.com/node-red/designs/blob/master/designs/node-messaging-api.md).

Invocation of done() is deferred until the message has been removed from node's own message buffer/queue, or promise for the message processing has been fulfilled.   For example, in delay node, done() is not called when a message has pushed to its queue.  It is called after the message has been removed from the queue and sent to next nodes.

This PR is a preparation for Graceful Shutdown function, which needs to detect a completion of message processing.

## Checklist
<!-- Put an `x` in the boxes that apply -->

- [x] I have read the [contribution guidelines](https://github.com/node-red/node-red/blob/master/CONTRIBUTING.md)
- [x] For non-bugfix PRs, I have discussed this change on the mailing list/slack team.
- [x] I have run `grunt` to verify the unit tests pass
- [ ] I have added suitable unit tests to cover the new/changed functionality
