Dear visitor,

this repository, issue tracker, etc. is abandoned in favor of https://github.com/Immediate-Mode-UI/Nuklear . Any activity in this issue tracker, any pull requests, etc. **will be ignored**.

Looking forward to hearing from you in https://github.com/Immediate-Mode-UI/Nuklear

*Nuklear community*

-----

Are you a volunteer? Please see TODO in https://github.com/vurtun/nuklear/pull/913#issuecomment-558565788 .

@vurtun, could you please remove the current description of this original repository and instead place the following text there and then **archive** this original repository?
```
Repository moved to https://github.com/Immediate-Mode-UI/Nuklear
```
(btw. you're also an admin in the new organization)

I think that one big differencial in one GUI component be the shadows. Example:

https://www.w3schools.com/cssref/tryit.asp?filename=trycss3_box-shadow2

This example is exagerated, but "small shadows" be nice, the google desgin really like to use the "small shadows", so if you have an android you already have seen it.

how would i do this in Nuklear? Is it possible, if not yet, how difficult it would be to implement something like this?
It would be great if the docs could be centered. Helps a lot while referring to them!
I discussed this issue in #906

Before:
![image](https://user-images.githubusercontent.com/3759175/65353515-a4324200-dbed-11e9-89d3-a0604c9b4ba0.png)

After:
![image](https://user-images.githubusercontent.com/3759175/68528685-5802a480-02f6-11ea-8491-683a9d269a4f.png)

the GDI+ fix make the nk_button_color draw the rectangle with inner black lines, while the original one is ok. I found the PR make change of the GDI+, maybe it's the reason of problem. https://github.com/vurtun/nuklear/pull/527
The GDI+ fix version
![NuklearGdipImage](https://user-images.githubusercontent.com/11863578/68264198-043c5500-0083-11ea-8748-86e7472db198.png)
The Original Version
![NuklearGdipImage2](https://user-images.githubusercontent.com/11863578/68264208-09999f80-0083-11ea-9d49-322cfd66bd38.png)

Hello. Thanks for a great project.
What are the reasons behind using scissor command? For which purposes it's used?
Why can't it be evaded? 
Scissors are stopping one from combining multiple draw calls into instanced one or force to implement them in the shader.

Just adjust UV coords for elements when it's needed.
Thanks.
Previously, backspace characters would be passed directly to nk_input_unicode, resulting in backspace not working and instead simply inserting ASCII backspace '\b' into the text.
This fixes it by filtering out '\b' (ASCII code 8) in the event handler. Now backspace works as expected.
Some of the sentences in the README are pretty long and some terms could
do with hyphens. Tidy this up.

Signed-off-by: Simon Glass <sjg@chromium.org>
Current SDL2 nuklear demos fail to build on Windows (mingw64) :
```
nuklear/demo/sdl_opengl3$ make
rm -f bin/demo.exe
cc main.c -std=c99 -pedantic -O2 -o bin/demo.exe -lmingw32 -lSDL2main -lSDL2 -lopengl32 -lm -lGLU32 -lGLEW32
In file included from C:/msys64/mingw64/include/SDL2/SDL.h:32,
                 from main.c:14:
main.c:73:5: error: conflicting types for 'SDL_main'
   73 | int main(void)
      |     ^~~~
In file included from C:/msys64/mingw64/include/SDL2/SDL.h:32,
                 from main.c:14:
C:/msys64/mingw64/include/SDL2/SDL_main.h:121:29: note: previous declaration of 'SDL_main' was here
  121 | extern SDLMAIN_DECLSPEC int SDL_main(int argc, char *argv[]);
      |                             ^~~~~~~~
make: *** [Makefile:25: demo.exe] Error 1
```
This trivial patch changes ```int main(void)``` into ```int main(int argc, char *argv[])``` which is the correct C main() signature