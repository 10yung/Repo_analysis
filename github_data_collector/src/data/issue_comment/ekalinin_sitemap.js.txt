## unreleased

- removed xmlbuilder as a dependency
- added stronger validity checking on values supplied to sitemap

### unreleased breaking changes

- renamed XMLToISitemapOptions to XMLToSitemapOptions
- various error messages changed.
- removed deprecated Sitemap and SitemapIndex classes
- replaced buildSitemapIndex with SitemapIndexStream
- Typescript: various types renamed or made more specific, removed I prefix
- Typescript: view_count is now exclusively a number
- Typescript: `price:type` and `price:resolution` are now more restrictive types
- sitemap parser now returns a sitemapItem array rather than a config object that could be passed to the now removed Sitemap class

resolves #267 #264 
I don't think this is a good idea to give Google sitemaps with "news" xmlns, while it is not. I don't see any way to remove unnecessary xmlns. I saw old issue but this is not working now - https://github.com/ekalinin/sitemap.js/issues/149
#99 #264 
In the next major release XMLBuilder will be removed for performance, ensure utf8 chars are all valid
I noticed, that if string contains data, like `Some str\u0010ing` then `sitemap` completely freaks out and throws an error

```
Error: Invalid character in string: Some string at index 33
    at XMLStringifier.assertLegalChar (/home/.../node_modules/xmlbuilder/lib/XMLStringifier.js:208:19)
```

Tried to search a way how to sanitize the data (in xmlbuilder issues also) but have no luck. 
Is there any recommendations what to do in such cases? Any dedicated libs? I can't sanitize only a `\u0010` since there could be dozens of other symbols. 
I see huge changes, congrats. Streams everywhere!

But what about createSitemapsAndIndex? I have 20kk pages. ican't load them at once, since they don't even fit in my RAM. I was hoping to use streams to generate sitemaps and index.
If you feed sitemap cli command with huge url list, it should generate index file + sitemaps (each sitemap should have limit of urls based on parameter from cli (default 50000))

new cli args: --limit: 50000 --sitemap-prefix=sitemap- --sitemaps-path=

`echo "{url: 'https://example.com/page-1'}\n{url: 'https://example.com/page-2'}" | npx sitemap --limit=1 --sitemap-prefix=sitemap-example- --sitemaps-path=https://example.com/sitemaps/`

result:
* sitemap-example-index.xml containing:
   * https://example.com/sitemaps/sitemap-example-1.xml with lastmod: actual dateTime
   * https://example.com/sitemaps/sitemap-example-2.xml with lastmod: actual dateTime
This is a question.

I have a bunch of new URLs, needing to be indexed in a sitemap, that are added on a consistent basis. After 50,000 urls, a sitemap index is required. Is there a way I can add an URL whenever I get a new URL and create the resulting sitemap along with sitemap indexes. I could potentially be adding millions of URLs, and so I need an [online](https://en.wikipedia.org/wiki/Online_algorithm) means of adding URLs to create a huge sitemap?

Is it possible to implement such structure?
```xml
...
<url>
  <loc>http://www.example.com/page-1/</loc>
  <xhtml:link
    rel="alternate"
    media="only screen and (max-width: 640px)"
    href="http://m.example.com/page-1" />
</url>
...

```
https://developers.google.com/search/mobile-sites/mobile-seo/separate-urls
I am trying to implement sitemap similar to one from BBC.

http://www.bbc.co.uk/sitemap.xml

Basically they have index sitemap with various `<sitemap></sitemap>` links to actual sitemaps, but they also have `<url></url>` at the top for their homepage. 

I am currently using `buildSitemapIndex` method. 