is it possible to set a default configuration (for example set a header, etc) ?


_HTTY::TempfilePreservingExtname_ handles this incorrectly under Ruby v2.1._x_.

I set an Authorization header with `headers-s`, perform the request, which works fine, but when I `cd` to another path, I need to set the header again, which doesn't feel right.

htty v1.5.0

It would be useful to have a command that is capable of taking the current request uri to the previous one. Like how the back button works in a browser.

Please implement support for HTTP and SOCKS proxies. htty should pick up the HTTP_PROXY environment variable by default, and the user should be able to specify override this setting via the command line (e.g. --proxy http://localhost:8080 or --no-proxy).

When the prompt line has more characters than the terminal has columns, the cursor gets displayed overwriting the previous line. When my terminal is wide enough, here's what it might look like if I hit enter three times:

```
http://graph.facebook.com/v2.2?id=http%3A%2F%2Fmoviepilot.com%2Fposts%2F2587263&scrape=true>
http://graph.facebook.com/v2.2?id=http%3A%2F%2Fmoviepilot.com%2Fposts%2F2587263&scrape=true>
http://graph.facebook.com/v2.2?id=http%3A%2F%2Fmoviepilot.com%2Fposts%2F2587263&scrape=true>_
```

Cursor is at end of the last line and the rest of the line is empty.

However when my terminal is not wide enough:

```
http://graph.facebook.com/v2.2?id=http%3A%2F%2Fmoviepilot.com%2Fposts%2F2587263&263&scrape=true> book.com/v2.2?id=http%3A%2F%2Fmoviepilot.com%2Fposts%2F25872
263&scrape=true> book.com/v2.2?id=http%3A%2F%2Fmoviepilot.com%2Fposts%2F25872
263&scrape=true> book.com/v2.2?id=http%3A%2F%2Fmoviepilot.com%2Fposts%2F25872
263&scrape=true> _book.com/v2.2?id=http%3A%2F%2Fmoviepilot.com%2Fposts%2F25872
```

Cursor is below the first letter `b` of the last line and the rest of the line is munged content from the line above.

Currently `body-set` uses Readline directly to take it’s input from the standard input, since we support multiple input devices, we should also take care of multiline input directly into the InputDevice instance. Every command should have something like `#needs_multiline_input` and every instance of InputDevice should act accordingly

Would be cool to have a command that takes the request’s body straight from a file. Would be even cooler if we could auto complete the file name with the file on the file system. To do that, we should extend the current autocompletion and make it relative to the commands, every command could expose a `#complete(partial)` method.

Otherwise we could extend `body-edit` to take a file parameter

Or both :smile:

