just try it 

[https://github.com/cntrump/SFRefresh](https://github.com/cntrump/SFRefresh)

![](https://raw.githubusercontent.com/cntrump/SFRefresh/master/lottiedemo.gif)

Apparently default infinite scrolling view's activity indicator view does not show when enter trigger state. It only shows when enter loading state. This commit fix the problem by manually set hidden property to NO when updating state of infinite scrolling view.
Why we can't use direction: SVInfiniteScrollingDirectionTop in swift version 4.2?
Can you help to fix error support the problem? 
I really need your library to load more chat.
Can I replace the image that is refreshed by the drop-down?Can I replace the image that is refreshed by the drop-down? Just like text, you can set the substitution
I changed code to remove deprecated code from iOS 7 
Can you use it for a wkwebview?

Thank you

I try this but don't work

```
webview?.scrollView.addPullToRefresh {
                                    self.getRequest(url_view: self.url_view)
}
```
Because infinite scrolling view's height is 60pt, user can scroll to the mid of the infinite scroll view. In this situation, state is triggered all the time and not to be loading, even if user leave his finger from the screen.  I think the reason is that when the last `scrollViewDidScroll` is triggered, `isDragging` is still true, not false. Then when user leaves his finger, `scrollViewDidScroll` will not be called.
```
- (void)scrollViewDidScroll:(CGPoint)contentOffset {
    if(self.state != SVInfiniteScrollingStateLoading && self.enabled) {
        CGFloat scrollViewContentHeight = self.scrollView.contentSize.height;
        CGFloat scrollOffsetThreshold = scrollViewContentHeight-self.scrollView.bounds.size.height;
        
        if(!self.scrollView.isDragging && self.state == SVInfiniteScrollingStateTriggered)
            self.state = SVInfiniteScrollingStateLoading;
        else if(contentOffset.y > scrollOffsetThreshold && self.state == SVInfiniteScrollingStateStopped && self.scrollView.isDragging)
            self.state = SVInfiniteScrollingStateTriggered;
        else if(contentOffset.y < scrollOffsetThreshold  && self.state != SVInfiniteScrollingStateStopped)
            self.state = SVInfiniteScrollingStateStopped;
    }
}
```

`scrollOffsetThreshold` should consider `originalBottomInset`. So I think `scrollOffsetThreshold += self.originalBottomInset;` should be inserted after `CGFloat scrollOffsetThreshold = scrollViewContentHeight-self.scrollView.bounds.size.height;`

Otherwise, when scrollview has bottom inset, supposed it's a positive number, and it currently reaches to the end, state will still be loading even though user scrolls up.
I used SVPullToRefresh long time ago. Now I have a Swift project having pull-to-refresh/infinity-load feature, I remember SVPullToRefresh. But what surprised me is that this useful library isn't ported to Swift.
Why don't you want to port to Swift?
This exposes the originalBottomInset property of SVInfiniteScrollingView.

I used this in a project where I needed to show / hide the keyboard over an infinite scrolling view, and wanted to adjust the bottom scroll inset to make room for the keyboard.