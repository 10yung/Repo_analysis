Fixes https://github.com/certbot/certbot/issues/7563.

I tested this by making the release script fail and doing a dummy release.
If you run a command like
```
sudo certbot certonly -d example.org --standalone --rsa-key-size 4096
```
it will result in a renewal configuration file containing the following renewal parameters:
```
rsa_key_size = 4096
authenticator = standalone
```
If you then run
```
sudo certbot certonly -d example.org --standalone --reuse-key --force-renewal
```
`rsa_key_size` is dropped from the renewal configuration file despite it still being a 4096 bit key.

I think we should preserve this value.
This is probably overkill, but this cherry picks #7684 to the `1.1.x` branch to properly specify the minimum Certbot version in case of a point release.
Python 3.9 is planning on enforcing that abstract base classes in the collections module are imported from `collections.abc`. See https://docs.python.org/3/library/collections.html#module-collections.

We currently are not always doing this in Certbot and are ignoring the deprecation warning about it at https://github.com/certbot/certbot/blob/6e07e8b5c0f3c6da2ae03a2a63adc7ce8e15a202/pytest.ini#L16

Properly testing and finding all occurrences of this problem is a little tricky (see https://github.com/certbot/certbot/issues/7691), but we should fix this and remove the `pytest.ini` entry well before Python 3.9 is released.
Locally if I delete the [line disabling the warnings about `collection.abc`](https://github.com/certbot/certbot/blob/6e07e8b5c0f3c6da2ae03a2a63adc7ce8e15a202/pytest.ini#L16), run `tools/venv3.py` to create a Python 3 developer environment, activate it, and then run `pytest certbot/tests/plugins/disco_test.py`, tests pass despite the collection module raising deprecation warnings. If I upgrade `pytest` to the latest version, tests fail as expected.

What's going on here? I think I remember having similar problems in the past that were fixed by updating pytest to a newer version. Are duplicates of warnings that are raised inside of `pytest` itself not properly reported? This may just be a one time bug, but if it's a general problem with `pytest` that will keep reoccuring, it'd be good to understand the behavior.
The documentation section [Changing the ACME Server](https://certbot.eff.org/docs/using.html#changing-the-acme-server) needs to be updated -- in particular, it still says Certbot uses Let's Encrypt's ACMEv1 API by default.

This was [discovered](https://community.letsencrypt.org/t/certbot-upgrade-to-support-acmev2/110720) by mojoa on the Let's Encrypt forum.
The current mechanisms don't work for a machine with FIPS in enforcing mode. This patch fixes this issue. MD5 is not an allowed hashing mechanism.

## Pull Request Checklist

- [ ] If the change being made is to a [distributed component](https://certbot.eff.org/docs/contributing.html#code-components-and-layout), edit the `master` section of `certbot/CHANGELOG.md` to include a description of the change being made.
- [ ] Include your name in `AUTHORS.md` if you like.

The reuse account functionality, e.g. v2 can reuse v1 accounts, makes full canonical symlinks rather than relative symlinks. This leads to problems when the `letsencrypt/` folder is moved, renamed, migrated, etc. This is in contrast to the relative symlink method already used between `live/` and `archive/`. 

https://github.com/certbot/certbot/blob/9e5bca4bbf3c4fd198382dd9d6e05b54014aca30/certbot/certbot/_internal/account.py#L182-L203

## Setup

* Ubuntu LTS 18.04.3
* Certbot doesn't have to be installed
* `/etc/letsencrypt` that has v1 and v2 account support and therefore has the v2 accounts directory symlinked to the v1 accounts directory

## Repro

1. Verify that the folder `/etc/letsencrypt/accounts/acme-v02.api.letsencrypt.org` contains a working symlink named `directory` -> `/etc/letsencrypt/accounts/acme-v01.api.letsencrypt.org/directory`
2. `mv /etc/letsencrypt /etc/letsencryptnew` 

## Result

`/etc/letsencrypt/accounts/acme-v02.api.letsencrypt.org` now contains a **_failing_** symlink. This is because that symlink was to the full canonical path instead of a relative path

## Expected

`/etc/letsencrypt/accounts/acme-v02.api.letsencrypt.org` contains a working symlink
Adrien has a branch where he had this working using QEMU.
Using the approach described at https://github.com/basak/certbot-snap-build/tree/snap-plugins/doc, we should make snaps for all of our DNS plugins.

We need to resolve https://github.com/certbot/certbot/issues/7667 first. We may also want to resolve https://github.com/basak/certbot-snap-build/issues/19 and https://github.com/basak/certbot-snap-build/issues/20 as well.