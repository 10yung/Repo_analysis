Dear all,

we are using LEAP to track single points in videos of moving animals and have encountered the issue of large jumps of tracked coordinates (using the LEAP standard setup) in nearby time frames, easily spotted by eye.

The trajectory (see attachment for an example, large jumps occur in the left part of the picture) was obtained from a different training video. 

Are there any experiences with such a problem?  We thought about re-training the network for every video or simply training longer.

Thanks a lot for your help.

Best, Wilhelm

![large_jumps](https://user-images.githubusercontent.com/9470183/70543764-3bfb5880-1b6b-11ea-9143-40d608eb9c8e.png)

i tried to convert my own video to hdf5.but i think it's not the same structure as the box.h5.the box.h5 has 3 keys: box, ell and framesIdx. box is the frame, framesIdx is the number of frame, but i wonder what the ell is.
By the way, must i use the hdf5, can i just use the videos?if i must use hdf5, how to convert my videos to the hdf5 which is similar as your hdf5 file? 
Hi Talmo,

We are having trouble initializing the training. See error below:

>> I = h5readframes('tyson.h5','/box',1);
Found 11/250 labeled frames.
Loaded 11 images [0.01s]
Generated confidence maps [0.07s]
9.281 MB
Symmetric channels:
    earL (5) <-> earR (6)
Saved:
/private/var/folders/sq/qflygrvs7bxfmh698b3mntzx6yxtgs/T/tp71e705c4_a342_467a_ad6b_2d4725ad3290.h5 [0.17s]
tp71e705c4_a342_467a_ad6b_2d4725ad3290.h5: 21.7 MB
Finished generating training set. [0.36s]
    session         timestamp                  message         
    _______    ____________________    ________________________

       1       06-Aug-2019 17:05:34    "Fast training (n = 11)"

python "/Users/kacsoh/Desktop/LEAP/leap/leap/training.py" "/private/var/folders/sq/qflygrvs7bxfmh698b3mntzx6yxtgs/T/tp71e705c4_a342_467a_ad6b_2d4725ad3290.h5" --base-output-path="/Users/kacsoh/Desktop/LEAP/models" --run-name="190806_170523-n=11" --net-name="leap_cnn" --filters=32 --rotate-angle=5 --val-size=0.10000 --epochs=15 --batch-size=50 --batches-per-epoch=50 --val-batches-per-epoch=10 --reduce-lr-factor=0.1000000000 --reduce-lr-patience=2 --reduce-lr-cooldown=0 --reduce-lr-min-delta=0.0000100000 --reduce-lr-min-lr=0.0000000001 --upsampling-layers --amsgrad
Traceback (most recent call last):
  File "/Users/kacsoh/Desktop/LEAP/leap/leap/training.py", line 10, in <module>
    import keras
ModuleNotFoundError: No module named 'keras'
Found 11/250 labeled frames.
Loaded 11 images [0.01s]
Generated confidence maps [0.07s]
9.281 MB
Symmetric channels:
    earL (5) <-> earR (6)
Saved:
/private/var/folders/sq/qflygrvs7bxfmh698b3mntzx6yxtgs/T/tp76ab9383_b2f1_4d47_86ea_3739c7447f5f.h5 [0.36s]
tp76ab9383_b2f1_4d47_86ea_3739c7447f5f.h5: 21.7 MB
Finished generating training set. [0.51s]
    session         timestamp                  message         
    _______    ____________________    ________________________

       1       06-Aug-2019 17:06:27    "Fast training (n = 11)"

python "/Users/kacsoh/Desktop/LEAP/leap/leap/training.py" "/private/var/folders/sq/qflygrvs7bxfmh698b3mntzx6yxtgs/T/tp76ab9383_b2f1_4d47_86ea_3739c7447f5f.h5" --base-output-path="/Users/kacsoh/Desktop/LEAP/models" --run-name="190806_170624-n=11" --net-name="leap_cnn" --filters=32 --rotate-angle=5 --val-size=0.10000 --epochs=15 --batch-size=50 --batches-per-epoch=50 --val-batches-per-epoch=10 --reduce-lr-factor=0.1000000000 --reduce-lr-patience=2 --reduce-lr-cooldown=0 --reduce-lr-min-delta=0.0000100000 --reduce-lr-min-lr=0.0000000001 --upsampling-layers --amsgrad
Traceback (most recent call last):
  File "/Users/kacsoh/Desktop/LEAP/leap/leap/training.py", line 10, in <module>
    import keras
ModuleNotFoundError: No module named 'keras'
Found 11/250 labeled frames.
Loaded 11 images [0.01s]
Generated confidence maps [0.07s]
9.281 MB
Symmetric channels:
    earL (5) <-> earR (6)
Saved:
/private/var/folders/sq/qflygrvs7bxfmh698b3mntzx6yxtgs/T/tp7e1beeb5_a952_4c3d_8c71_08b996327b0c.h5 [0.21s]
tp7e1beeb5_a952_4c3d_8c71_08b996327b0c.h5: 21.7 MB
Finished generating training set. [0.40s]
    session         timestamp                  message         
    _______    ____________________    ________________________

       1       06-Aug-2019 17:07:10    "Fast training (n = 11)"

python "/Users/kacsoh/Desktop/LEAP/leap/leap/training.py" "/private/var/folders/sq/qflygrvs7bxfmh698b3mntzx6yxtgs/T/tp7e1beeb5_a952_4c3d_8c71_08b996327b0c.h5" --base-output-path="/Users/kacsoh/Desktop/LEAP/models" --run-name="190806_170708-n=11" --net-name="leap_cnn" --filters=32 --rotate-angle=5 --val-size=0.10000 --epochs=15 --batch-size=50 --batches-per-epoch=50 --val-batches-per-epoch=10 --reduce-lr-factor=0.1000000000 --reduce-lr-patience=2 --reduce-lr-cooldown=0 --reduce-lr-min-delta=0.0000100000 --reduce-lr-min-lr=0.0000000001 --upsampling-layers --amsgrad
Traceback (most recent call last):
  File "/Users/kacsoh/Desktop/LEAP/leap/leap/training.py", line 10, in <module>
    import keras
ModuleNotFoundError: No module named 'keras'


The python path has been set to python 3.7, which is what we though was the most likely culprit, but it does not seem to fix it. We are analyzing the Tyson demo video (just finished labeling and onto training).


Thanks!

Hi Talmo,

Recently my lab is using DLC to obtain trajectory data of mice in the cage in order to investigate the interaction between pregnant mice and pups. All the data are stored in the .csv form so can be imported by matlab. I am just wondering if there is anyway that I can input the data I already got to LEAP module to achieve unsupervised classified behavioural classification, do you have any advice?

Many thanks,
Mingran
Hello,
I need help in using LEAP for COWS, After converting the video to the hdf5 file. I need to visualize the image as RGB but I
![cow](https://user-images.githubusercontent.com/50096409/59564120-410b9f00-9043-11e9-90ad-280b9c8e9b06.jpg)
 am visualizing in yellow color.

Hi Talmo,

I've recently started to encounter a new problem with LEAP. 

When I run label_joints and do fast training, the outcome is the following:

`python "C:\Users\Yinlab\Documents\GitHub\leap\leap\training.py" "C:\Users\Yinlab\AppData\Local\Temp\tp3659dd2a_0acd_4e2e_85e5_e254838f4448.h5" --base-output-path="C:\Data\WT471\May 14 2019\Video 1\PeriLickVid\models" --run-name="190518_141406-n=22" --net-name="leap_cnn" --filters=32 --rotate-angle=5 --val-size=0.10000 --epochs=1 --batch-size=10 --batches-per-epoch=50 --val-batches-per-epoch=10 --reduce-lr-factor=0.1000000000 --reduce-lr-patience=2 --reduce-lr-cooldown=0 --reduce-lr-min-delta=0.0000100000 --reduce-lr-min-lr=0.0000000001 --upsampling-layers --amsgrad
Traceback (most recent call last): 
  File "C:\Users\Yinlab\Documents\GitHub\leap\leap\training.py", line 2, in <module> 
    import h5py 
  File "C:\Users\Yinlab\Anaconda3\lib\site-packages\h5py\__init__.py", line 36, in <module> 
    from ._conv import register_converters as _register_converters 
  File "h5py\h5r.pxd", line 21, in init h5py._conv 
  File "h5py\_objects.pxd", line 12, in init h5py.h5r 
  File "h5py\_objects.pyx", line 1, in init h5py._objects 
ImportError: DLL load failed: The specified procedure could not be found. `

the version of h5py I have (using the conda list h5py command in terminal) is 2.7.1.

I've also noticed that running the test line
`!python -c "import tensorflow as tf; print(tf.test.is_gpu_available())"`

no longer results in any output in matlab. It works when I run it in terminal.

I reinstalled tensorflow-gpu to version 1.12 using that walk through you made, but there was no success.

Thanks and have a great weekend,
Konstantin