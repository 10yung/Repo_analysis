A "Hello, World!" program is traditionally used to introduce novice
programmers to a programming language. : ) I hope that the output looks more good for a novice programmer.
How can I forward declare a function?
related issue: https://github.com/rswier/c4/issues/46
update: pull request https://github.com/rswier/c4/pull/47

missing comma when calling test(1 2), and compile ok

```
int test(int a, int b)
{
  return a + b;  
}

int main()
{
  int result;
  result = test(1 2);
  return 0;
}
```

patch
```
  else if (tk == Id) {
    ...
--  while (tk != ')') { expr(Assign); *++e = PSH; ++t; if (tk == ',') next(); }
++  while (tk != ')') { 
++    expr(Assign); *++e = PSH; ++t;
++    if (tk == ',') { next(); if(tk == ')') { printf("%d: error unexpected comma in function call\n", line); exit(-1); }}
++    else if(tk != ')') { printf("%d: error missing comma in function call\n", line); exit(-1); }
++  }
    ...
}
```

I added comments to make it effortless for someone to swap out the `unistd.h` header in order to compile on Windows. I realized that a preprocessor directive would not work since that is unsupported so the comments should be the best alternative.


Now variables can be declared within functions anywhere, not just
at the beginning, and enums can go into functions too.

The three similar declaration-parsing blocks are unified into one. The
end result is thereby negative code growth (-17 lines).
using void main instead of int main