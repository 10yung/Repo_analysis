Updates [org.eclipse.jetty:jetty-alpn-openjdk8-client](https://github.com/eclipse/jetty.project) from 9.4.25.v20191220 to 9.4.26.v20200117.


I'll automatically update this PR to resolve conflicts as long as you don't change it yourself.

If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below.

Have a fantastic day writing Scala!

<details>
<summary>Ignore future updates</summary>

Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:
```
updates.ignore = [ { groupId = "org.eclipse.jetty", artifactId = "jetty-alpn-openjdk8-client" } ]
```
</details>

labels: library-update
Current disconnect handling implementation in `ChannelHead` relies on matching `IOException.getMessage`. This is problematic - for example, on Windows these messages are localized, which leads to junk log messages:
```
2019-05-31 10:35:21,048  WARN: Channel IOException not known to be a disconnect error //[Thread-12] o.h.blaze.channel.nio2.ByteBufferHead.checkError() L:18
java.io.IOException: Удаленный хост принудительно разорвал существующее подключение
```
Shouldn't there be a better way to detect such situations? What do other libraries do?
When starting blaze (`http4s v0.20.0-M1 on blaze v0.14.0-M9 `) with `withSSLContext` and sending a request with `curl` the request is successfully served but I'm getting this log message. I verified this using MacOS and Alpine.

```
17:13:57.051 [blaze-selector-0-3] ERROR org.http4s.blaze.channel.nio1.NIO1HeadStage - Abnormal NIO1HeadStage termination
java.util.concurrent.ExecutionException: Boxed Error
	at scala.concurrent.impl.Promise$.resolver(Promise.scala:83) ~[org.scala-lang.scala-library-2.12.7.jar:?]
	at scala.concurrent.impl.Promise$.scala$concurrent$impl$Promise$$resolveTry(Promise.scala:75) ~[org.scala-lang.scala-library-2.12.7.jar:?]
	at scala.concurrent.impl.Promise$DefaultPromise.tryComplete(Promise.scala:280) ~[org.scala-lang.scala-library-2.12.7.jar:?]
	at scala.concurrent.Promise.complete(Promise.scala:49) ~[org.scala-lang.scala-library-2.12.7.jar:?]
	at scala.concurrent.Promise.complete$(Promise.scala:48) ~[org.scala-lang.scala-library-2.12.7.jar:?]
	at scala.concurrent.impl.Promise$DefaultPromise.complete(Promise.scala:183) ~[org.scala-lang.scala-library-2.12.7.jar:?]
	at scala.concurrent.Promise.failure(Promise.scala:100) ~[org.scala-lang.scala-library-2.12.7.jar:?]
	at scala.concurrent.Promise.failure$(Promise.scala:100) ~[org.scala-lang.scala-library-2.12.7.jar:?]
	at scala.concurrent.impl.Promise$DefaultPromise.failure(Promise.scala:183) ~[org.scala-lang.scala-library-2.12.7.jar:?]
	at org.http4s.blaze.pipeline.stages.SSLStage.$anonfun$handshakeFailure$1(SSLStage.scala:144) ~[org.http4s.blaze-core_2.12-0.14.0-M9.jar:0.14.0-M9]
	at scala.collection.immutable.List.foreach(List.scala:388) ~[org.scala-lang.scala-library-2.12.7.jar:?]
	at org.http4s.blaze.pipeline.stages.SSLStage.org$http4s$blaze$pipeline$stages$SSLStage$$handshakeFailure(SSLStage.scala:143) ~[org.http4s.blaze-core_2.12-0.14.0-M9.jar:0.14.0-M9]
	at org.http4s.blaze.pipeline.stages.SSLStage.sslHandshakeLoop$1(SSLStage.scala:208) ~[org.http4s.blaze-core_2.12-0.14.0-M9.jar:0.14.0-M9]
	at org.http4s.blaze.pipeline.stages.SSLStage.sslHandshake(SSLStage.scala:212) ~[org.http4s.blaze-core_2.12-0.14.0-M9.jar:0.14.0-M9]
	at org.http4s.blaze.pipeline.stages.SSLStage.$anonfun$sslHandshake$2(SSLStage.scala:192) ~[org.http4s.blaze-core_2.12-0.14.0-M9.jar:0.14.0-M9]
	at org.http4s.blaze.pipeline.stages.SSLStage.$anonfun$sslHandshake$2$adapted(SSLStage.scala:191) ~[org.http4s.blaze-core_2.12-0.14.0-M9.jar:0.14.0-M9]
	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:60) [org.scala-lang.scala-library-2.12.7.jar:?]
	at org.http4s.blaze.util.SerialExecutionContext$$anon$1.act(SerialExecutionContext.scala:22) [org.http4s.blaze-core_2.12-0.14.0-M9.jar:0.14.0-M9]
	at org.http4s.blaze.util.SerialExecutionContext$$anon$1.act(SerialExecutionContext.scala:21) [org.http4s.blaze-core_2.12-0.14.0-M9.jar:0.14.0-M9]
	at org.http4s.blaze.util.Actor$RecycleableRunnable.go$1(Actor.scala:57) [org.http4s.blaze-core_2.12-0.14.0-M9.jar:0.14.0-M9]
	at org.http4s.blaze.util.Actor$RecycleableRunnable.run(Actor.scala:72) [org.http4s.blaze-core_2.12-0.14.0-M9.jar:0.14.0-M9]
	at org.http4s.blaze.util.Execution$$anon$3.execute(Execution.scala:66) [org.http4s.blaze-core_2.12-0.14.0-M9.jar:0.14.0-M9]
	at org.http4s.blaze.util.Actor.$bang(Actor.scala:45) [org.http4s.blaze-core_2.12-0.14.0-M9.jar:0.14.0-M9]
	at org.http4s.blaze.util.SerialExecutionContext.execute(SerialExecutionContext.scala:28) [org.http4s.blaze-core_2.12-0.14.0-M9.jar:0.14.0-M9]
	at scala.concurrent.impl.CallbackRunnable.executeWithValue(Promise.scala:68) [org.scala-lang.scala-library-2.12.7.jar:?]
	at scala.concurrent.impl.Promise$DefaultPromise.$anonfun$tryComplete$1(Promise.scala:284) [org.scala-lang.scala-library-2.12.7.jar:?]
	at scala.concurrent.impl.Promise$DefaultPromise.$anonfun$tryComplete$1$adapted(Promise.scala:284) [org.scala-lang.scala-library-2.12.7.jar:?]
	at scala.concurrent.impl.Promise$DefaultPromise.tryComplete(Promise.scala:284) [org.scala-lang.scala-library-2.12.7.jar:?]
	at scala.concurrent.Promise.complete(Promise.scala:49) [org.scala-lang.scala-library-2.12.7.jar:?]
	at scala.concurrent.Promise.complete$(Promise.scala:48) [org.scala-lang.scala-library-2.12.7.jar:?]
	at scala.concurrent.impl.Promise$DefaultPromise.complete(Promise.scala:183) [org.scala-lang.scala-library-2.12.7.jar:?]
	at scala.concurrent.Promise.success(Promise.scala:82) [org.scala-lang.scala-library-2.12.7.jar:?]
	at scala.concurrent.Promise.success$(Promise.scala:82) [org.scala-lang.scala-library-2.12.7.jar:?]
	at scala.concurrent.impl.Promise$DefaultPromise.success(Promise.scala:183) [org.scala-lang.scala-library-2.12.7.jar:?]
	at org.http4s.blaze.channel.nio1.NIO1HeadStage.readReady(NIO1HeadStage.scala:146) [org.http4s.blaze-core_2.12-0.14.0-M9.jar:0.14.0-M9]
	at org.http4s.blaze.channel.nio1.NIO1HeadStage.opsReady(NIO1HeadStage.scala:130) [org.http4s.blaze-core_2.12-0.14.0-M9.jar:0.14.0-M9]
	at org.http4s.blaze.channel.nio1.SelectorLoop.processKeys(SelectorLoop.scala:198) [org.http4s.blaze-core_2.12-0.14.0-M9.jar:0.14.0-M9]
	at org.http4s.blaze.channel.nio1.SelectorLoop.org$http4s$blaze$channel$nio1$SelectorLoop$$runLoop(SelectorLoop.scala:169) [org.http4s.blaze-core_2.12-0.14.0-M9.jar:0.14.0-M9]
	at org.http4s.blaze.channel.nio1.SelectorLoop$$anon$1.run(SelectorLoop.scala:67) [org.http4s.blaze-core_2.12-0.14.0-M9.jar:0.14.0-M9]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_191]
Caused by: java.lang.AssertionError: This is a bug. Please report to https://github.com/http4s/blaze/issues: Unexpected status: NOT_HANDSHAKING
	at org.http4s.blaze.util.package$.bug(package.scala:11) ~[org.http4s.blaze-core_2.12-0.14.0-M9.jar:0.14.0-M9]
	... 28 more
```
When running any basic server with blaze on http4s 0.19.x the logs are spammed with 
```
[blaze-selector-0-1] WARN  o.h.b.p.s.QuietTimeoutStage - org.http4s.blaze.pipeline.stages.QuietTimeoutStage Stage: 30 seconds received unhandled inbound command: Disconnected
[blaze-selector-0-1] WARN  o.h.s.b.Http1ServerStage$$anon$1 - Http4sServerStage received unhandled inbound command: Disconnected
```
This appears to be because of this block of code in `core/src/main/scala/org/http4s/blaze/pipeline/Stages.scala`

```
  def inboundCommand(cmd: InboundCommand): Unit = cmd match {
    case Connected => stageStartup()
    case _ => logger.warn(s"$name received unhandled inbound command: $cmd")
  }
```

Neither `QuietTimeoutStage` nor `Http1ServerStage` override this to handle `Disconnected`, and the handling for `Disconnected` was removed in this commit: https://github.com/http4s/blaze/commit/b4ef5f59dfeb8bf47dba2008aacf0cb98368ead0#diff-8b9a55120b4e25f24f77063998d50fe6L66
The `run` method in `SelectLoop.scala` catches the Throwable and then just logs.  For OOMs this results in the log being outputted and the OOM error stopping there.  This happens here https://github.com/http4s/blaze/blob/v0.12.13/core/src/main/scala/org/http4s/blaze/channel/nio1/SelectorLoop.scala#L156.  I'd like to fix this once I know the correct direction http4s wants.  

Would the right course of action be to log and then rethrow the Throwable up to kill the process?  
Please review the following changes:
https://github.com/TechEmpower/FrameworkBenchmarks/pull/3788
https://github.com/http4s/blaze/blob/c87ff657dc49fd68267ec70faf0389260f988104/core/src/main/scala/org/http4s/blaze/pipeline/stages/SSLStage.scala#L329

I think this isn't ever hit in practice as the handshake happens almost universally in the `syncWrite` path and the read path.
Currently we can only use NIO2 for clients because we don't have a way to hook client sockets into the `SelectorLoop`.
The current pipeline structure is pull-based with read and write operations returning futures, so in some ways, they are like a version of a socket that return a Future instead of blocking. 

Exception for the `InboundCommand`s: they provide a way for the pipeline to _push_ events, which is a little out of place in the model. That said, they are useful for things like starting up a pipeline in a server where the server itself is the driver.

I think we can do better though, maybe making signaling startup as part of pipeline builders duties or changing what the server uses to bootstrap a pipeline. For example, it seems reasonable to provide a `HeadStage[ByteBuffer]` to a new form:
```scala
type BufferPipelineBuilder = SocketConnection => LeafBuilder[ByteBuffer]
// becomes
type BufferPipelineBuilder = HeadStage[ByteBuffer] => Unit
```
We'd need to do something to incorporate the info in `SocketConnection` into `HeadStage` but that seems like a good idea as well.
Nothing failed, so I suspect this is a racy shutdown:
```
16:14:21.837 [anInnocuousThread] ERROR org.http4s.blaze.util.Execution - Trampoline EC Exception caught
java.lang.IllegalStateException: Promise already completed.
	at scala.concurrent.Promise.complete(Promise.scala:49)
	at scala.concurrent.Promise.complete$(Promise.scala:48)
	at scala.concurrent.impl.Promise$DefaultPromise.complete(Promise.scala:183)
	at scala.concurrent.Promise.failure(Promise.scala:100)
	at scala.concurrent.Promise.failure$(Promise.scala:100)
	at scala.concurrent.impl.Promise$DefaultPromise.failure(Promise.scala:183)
	at scala.concurrent.impl.Promise.$anonfun$transformWith$1(Promise.scala:41)
	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:60)
	at org.http4s.blaze.util.Execution$ThreadLocalTrampoline.run(Execution.scala:108)
	at org.http4s.blaze.util.Execution$ThreadLocalTrampoline.execute(Execution.scala:94)
	at org.http4s.blaze.util.Execution$$anon$2.execute(Execution.scala:53)
	at scala.concurrent.impl.CallbackRunnable.executeWithValue(Promise.scala:68)
	at scala.concurrent.impl.Promise$DefaultPromise.$anonfun$tryComplete$1(Promise.scala:284)
	at scala.concurrent.impl.Promise$DefaultPromise.$anonfun$tryComplete$1$adapted(Promise.scala:284)
	at scala.concurrent.impl.Promise$DefaultPromise.tryComplete(Promise.scala:284)
	at scala.concurrent.impl.Promise$DefaultPromise.link(Promise.scala:337)
	at scala.concurrent.impl.Promise$DefaultPromise.linkRootOf(Promise.scala:322)
	at scala.concurrent.impl.Promise.$anonfun$transformWith$1(Promise.scala:39)
	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:60)
	at org.http4s.blaze.util.Execution$ThreadLocalTrampoline.run(Execution.scala:108)
	at org.http4s.blaze.util.Execution$ThreadLocalTrampoline.execute(Execution.scala:94)
	at org.http4s.blaze.util.Execution$$anon$2.execute(Execution.scala:53)
	at scala.concurrent.impl.CallbackRunnable.executeWithValue(Promise.scala:68)
	at scala.concurrent.impl.Promise$DefaultPromise.$anonfun$tryComplete$1(Promise.scala:284)
	at scala.concurrent.impl.Promise$DefaultPromise.$anonfun$tryComplete$1$adapted(Promise.scala:284)
	at scala.concurrent.impl.Promise$DefaultPromise.tryComplete(Promise.scala:284)
	at scala.concurrent.Promise.trySuccess(Promise.scala:90)
	at scala.concurrent.Promise.trySuccess$(Promise.scala:90)
	at scala.concurrent.impl.Promise$DefaultPromise.trySuccess(Promise.scala:183)
	at org.http4s.blaze.channel.nio2.ByteBufferHead$$anon$3.completed(ByteBufferHead.scala:114)
	at org.http4s.blaze.channel.nio2.ByteBufferHead$$anon$3.completed(ByteBufferHead.scala:100)
	at sun.nio.ch.Invoker.invokeUnchecked(Invoker.java:126)
	at sun.nio.ch.UnixAsynchronousSocketChannelImpl.finishRead(UnixAsynchronousSocketChannelImpl.java:430)
	at sun.nio.ch.UnixAsynchronousSocketChannelImpl.finish(UnixAsynchronousSocketChannelImpl.java:191)
	at sun.nio.ch.UnixAsynchronousSocketChannelImpl.onEvent(UnixAsynchronousSocketChannelImpl.java:213)
	at sun.nio.ch.KQueuePort$EventHandlerTask.run(KQueuePort.java:301)
	at sun.nio.ch.AsynchronousChannelGroupImpl$1.run(AsynchronousChannelGroupImpl.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
	at sun.misc.InnocuousThread.run(InnocuousThread.java:74)
16:14:21.846 [anInnocuousThread] ERROR org.http4s.blaze.util.Execution - Trampoline EC Exception caught
java.lang.IllegalStateException: Promise already completed.
	at scala.concurrent.Promise.complete(Promise.scala:49)
	at scala.concurrent.Promise.complete$(Promise.scala:48)
	at scala.concurrent.impl.Promise$DefaultPromise.complete(Promise.scala:183)
	at scala.concurrent.Promise.failure(Promise.scala:100)
	at scala.concurrent.Promise.failure$(Promise.scala:100)
	at scala.concurrent.impl.Promise$DefaultPromise.failure(Promise.scala:183)
	at scala.concurrent.impl.Promise.$anonfun$transformWith$1(Promise.scala:41)
	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:60)
	at org.http4s.blaze.util.Execution$ThreadLocalTrampoline.run(Execution.scala:108)
	at org.http4s.blaze.util.Execution$ThreadLocalTrampoline.execute(Execution.scala:94)
	at org.http4s.blaze.util.Execution$$anon$2.execute(Execution.scala:53)
	at scala.concurrent.impl.CallbackRunnable.executeWithValue(Promise.scala:68)
	at scala.concurrent.impl.Promise$DefaultPromise.$anonfun$tryComplete$1(Promise.scala:284)
	at scala.concurrent.impl.Promise$DefaultPromise.$anonfun$tryComplete$1$adapted(Promise.scala:284)
	at scala.concurrent.impl.Promise$DefaultPromise.tryComplete(Promise.scala:284)
	at scala.concurrent.impl.Promise$DefaultPromise.link(Promise.scala:337)
	at scala.concurrent.impl.Promise$DefaultPromise.linkRootOf(Promise.scala:322)
	at scala.concurrent.impl.Promise.$anonfun$transformWith$1(Promise.scala:39)
	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:60)
	at org.http4s.blaze.util.Execution$ThreadLocalTrampoline.run(Execution.scala:108)
	at org.http4s.blaze.util.Execution$ThreadLocalTrampoline.execute(Execution.scala:94)
	at org.http4s.blaze.util.Execution$$anon$2.execute(Execution.scala:53)
	at scala.concurrent.impl.CallbackRunnable.executeWithValue(Promise.scala:68)
	at scala.concurrent.impl.Promise$DefaultPromise.$anonfun$tryComplete$1(Promise.scala:284)
	at scala.concurrent.impl.Promise$DefaultPromise.$anonfun$tryComplete$1$adapted(Promise.scala:284)
	at scala.concurrent.impl.Promise$DefaultPromise.tryComplete(Promise.scala:284)
	at scala.concurrent.Promise.trySuccess(Promise.scala:90)
	at scala.concurrent.Promise.trySuccess$(Promise.scala:90)
	at scala.concurrent.impl.Promise$DefaultPromise.trySuccess(Promise.scala:183)
	at org.http4s.blaze.channel.nio2.ByteBufferHead$$anon$3.completed(ByteBufferHead.scala:114)
	at org.http4s.blaze.channel.nio2.ByteBufferHead$$anon$3.completed(ByteBufferHead.scala:100)
	at sun.nio.ch.Invoker.invokeUnchecked(Invoker.java:126)
	at sun.nio.ch.Invoker$2.run(Invoker.java:218)
	at sun.nio.ch.AsynchronousChannelGroupImpl$1.run(AsynchronousChannelGroupImpl.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
	at sun.misc.InnocuousThread.run(InnocuousThread.java:74)
16:14:21.848 [anInnocuousThread] ERROR org.http4s.blaze.util.Execution - Trampoline EC Exception caught
java.lang.IllegalStateException: Promise already completed.
	at scala.concurrent.Promise.complete(Promise.scala:49)
	at scala.concurrent.Promise.complete$(Promise.scala:48)
	at scala.concurrent.impl.Promise$DefaultPromise.complete(Promise.scala:183)
	at scala.concurrent.Promise.failure(Promise.scala:100)
	at scala.concurrent.Promise.failure$(Promise.scala:100)
	at scala.concurrent.impl.Promise$DefaultPromise.failure(Promise.scala:183)
	at scala.concurrent.impl.Promise.$anonfun$transformWith$1(Promise.scala:41)
	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:60)
	at org.http4s.blaze.util.Execution$ThreadLocalTrampoline.run(Execution.scala:108)
	at org.http4s.blaze.util.Execution$ThreadLocalTrampoline.execute(Execution.scala:94)
	at org.http4s.blaze.util.Execution$$anon$2.execute(Execution.scala:53)
	at scala.concurrent.impl.CallbackRunnable.executeWithValue(Promise.scala:68)
	at scala.concurrent.impl.Promise$DefaultPromise.$anonfun$tryComplete$1(Promise.scala:284)
	at scala.concurrent.impl.Promise$DefaultPromise.$anonfun$tryComplete$1$adapted(Promise.scala:284)
	at scala.concurrent.impl.Promise$DefaultPromise.tryComplete(Promise.scala:284)
	at scala.concurrent.impl.Promise$DefaultPromise.link(Promise.scala:337)
	at scala.concurrent.impl.Promise$DefaultPromise.linkRootOf(Promise.scala:322)
	at scala.concurrent.impl.Promise.$anonfun$transformWith$1(Promise.scala:39)
	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:60)
	at org.http4s.blaze.util.Execution$ThreadLocalTrampoline.run(Execution.scala:108)
	at org.http4s.blaze.util.Execution$ThreadLocalTrampoline.execute(Execution.scala:94)
	at org.http4s.blaze.util.Execution$$anon$2.execute(Execution.scala:53)
	at scala.concurrent.impl.CallbackRunnable.executeWithValue(Promise.scala:68)
	at scala.concurrent.impl.Promise$DefaultPromise.$anonfun$tryComplete$1(Promise.scala:284)
	at scala.concurrent.impl.Promise$DefaultPromise.$anonfun$tryComplete$1$adapted(Promise.scala:284)
	at scala.concurrent.impl.Promise$DefaultPromise.tryComplete(Promise.scala:284)
	at scala.concurrent.Promise.trySuccess(Promise.scala:90)
	at scala.concurrent.Promise.trySuccess$(Promise.scala:90)
	at scala.concurrent.impl.Promise$DefaultPromise.trySuccess(Promise.scala:183)
	at org.http4s.blaze.channel.nio2.ByteBufferHead$$anon$3.completed(ByteBufferHead.scala:114)
	at org.http4s.blaze.channel.nio2.ByteBufferHead$$anon$3.completed(ByteBufferHead.scala:100)
	at sun.nio.ch.Invoker.invokeUnchecked(Invoker.java:126)
	at sun.nio.ch.UnixAsynchronousSocketChannelImpl.finishRead(UnixAsynchronousSocketChannelImpl.java:430)
	at sun.nio.ch.UnixAsynchronousSocketChannelImpl.finish(UnixAsynchronousSocketChannelImpl.java:191)
	at sun.nio.ch.UnixAsynchronousSocketChannelImpl.onEvent(UnixAsynchronousSocketChannelImpl.java:213)
	at sun.nio.ch.KQueuePort$EventHandlerTask.run(KQueuePort.java:301)
	at sun.nio.ch.AsynchronousChannelGroupImpl$1.run(AsynchronousChannelGroupImpl.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
	at sun.misc.InnocuousThread.run(InnocuousThread.java:74)
```