On startup/restart of a failed node I randomly get this assertion and then the node will go into a restart loop always failing with this assertion.  I'm going to see if I can put together something reproducible for this issue, but I was first curious if there was any theories as to when/how this could happen?
I've been testing failure scenarios and I have a node that can't start because it gets the following error on startup:

```
raft_start(): io: load closed segment 0000000010000470-0000000010000655: 
```

All I've been doing is randomly killing the server.  ~Let me know if you want the data files.~ I emailed the data files for this node.
I don't know if this makes technical sense, but would it possible to have a sqlite CLI that works off the state on disk?  I find the biggest thing I miss running dqlite over a sqlite setup is that I don't know how to just run the sqlite CLI and run ah hoc queries to troubleshoot.
Is there any plan for having a cross-platform dsqlite?

We knowthat libuv and SQLite is cross/multi platform. Yet, C-raft and libco are Linux only libraries. Is there a future plan to replace them with cross-platform equivalences -existing or newly created?
I have a goland app running on sqlite today using the configuration "./db/state.db?_journal=WAL&cache=shared."  This is essentially a multithreaded app and it runs with no apparent issues.  I've switched it to using dqlite and it immediately gets "database is locked" errors.  Is there something I can do to allow concurrency without getting "database is locked" errors?

The gateway code assumes that calls to ```sqlite3_step()``` are always synchronous, but that might not be the case.
If I need do some query, which not need strict consistency.  will the non-leader node be able to run this kind sql ? (to reduce the leader task load)


One for the FAQ: I think https://bedrockdb.com/ is based on Paxos and dqlite is based on Raft? Any comments on the differences?
Hi. I have a quick question - is there JDBC connector planned for dqlite?
In FAQ at dqlite.io in 'Whoâ€™s using dqlite?' section there's a link to clustering which doesn't work.

It links to ``https://github.com/lxc/lxd/blob/master/doc/clustering`` instead of ``https://github.com/lxc/lxd/blob/master/doc/clustering.md``.