This PR accompanies https://github.com/scoverage/scalac-scoverage-plugin/pull/282

After the PR on the compiler plugin has been merged, the dependency versions need to be changed for the feature to work.
sbt-coverage 1.6.0

![image](https://user-images.githubusercontent.com/7614165/65640452-44e28200-df9f-11e9-94df-f9d94dc804d6.png)

![image](https://user-images.githubusercontent.com/7614165/65640496-57f55200-df9f-11e9-8afb-6d3c4b58a039.png)



Hey there, trying to integrate scoverage with a scala.js project but running into problems, after a `sbt ";clean;coverage;project client;test"` I'm getting:

```
[info] [info] Wrote instrumentation file [/Users/nimaeskandary/Dev/vinyldns/modules/client/target/scala-2.12/scoverage-data/scoverage.coverage.xml]
[info] [info] Will write measurement data to [/Users/nimaeskandary/Dev/vinyldns/modules/client/target/scala-2.12/scoverage-data]
[error] /Users/nimaeskandary/Dev/vinyldns/modules/client/src/main/scala/vinyldns/client/pages/credentials/ApiCredentialsPage.scala:40:9: Found a dangling UndefinedParam at Position(file:/Users/nimaeskandary/Dev/vinyldns/modules/client/src/main/scala/vinyldns/client/pages/credentials/ApiCredentialsPage.scala,118,41). This is likely due to a bad interaction between a macro or a compiler plugin and the Scala.js compiler plugin. If you hit this, please let us know.
[error]   class Backend {
[error]         ^
[error] one error found
[error] (Compile / compileIncremental) Compilation failed
[error] Total time: 63 s, completed May 1, 2019 11:56:14 AM
sbt:client>
```

The exact line its pointing out is this one: https://github.com/nimaeskandary/vinyldns/blob/portalv2-play/modules/client/src/main/scala/vinyldns/client/pages/credentials/ApiCredentialsPage.scala#L40

Any ideas?
Hi Team,
I am new to scala as of now, I want to update my sbt-coverage to 1.5.1. from 1.0.4

When I did so, I am getting error as shown below

**error: value ScoverageKeys is not a member of object scoverage.ScoverageSbtPlugin
    ScoverageSbtPlugin.ScoverageKeys.coverageMinimum := 60,**

These are my plugins in plugins.sbt
addSbtPlugin("io.spray" % "sbt-revolver" % "0.7.2")
addSbtPlugin("com.eed3si9n" % "sbt-assembly" % "0.13.0")
addSbtPlugin("io.gatling" % "gatling-sbt" % "2.1.0")
addSbtPlugin("com.github.gseitz" % "sbt-release" % "0.8.5")

addSbtPlugin("org.scalastyle" %% "scalastyle-sbt-plugin" % "0.6.0")
addSbtPlugin("org.scoverage" % "sbt-scoverage" % "1.5.1")

My Sbt version in build.properties is sbt.version=0.13.12.

Can you please let me know what is the issue?

Also when I navigate from Intelij to the scoverage class its still pointing to sbt-coverage-1.0.4.jar. instead of 1.5.1

somehow I feel the desired jar 1.5.1 is not getting downloaded to dependencies.

Any help is much appreciated



I created a Stackoverflow Question: 

https://stackoverflow.com/questions/54349427/scoverage-combine-coverage-from-test-and-ittest?noredirect=1#comment95514180_54349427

As I got no answer, I wonder if this is maybe something that is not supported by `scoverage` at all?
In the [Monix](https://github.com/monix/monix/) I've had to [disable code coverage](https://github.com/monix/monix/pull/813) via `sbt-scoverage` because:

1. the Travis-ci build had an additional overhead of over 30 minutes, so we are talking 11 minutes for a build versus 43 minutes, see [sample](https://travis-ci.org/monix/monix/builds/479780121)
2. the build would sometimes timeout, possibly depending on Travis's allocated resources, because when they tended to fail, they would fail in a row, [see sample](https://travis-ci.org/monix/monix/builds/480745389) and note that only the build with coverage was timing out

The code being tested is heavy on concurrency and so some tests tend to be heavy because multiple iterations are used. The performance issue happens locally too, but Travis-ci is obviously underpowered.

Is there any configuration I could try for increasing performance?

Versions used:

- sbt-scoverage: `1.5.1`
- Scala: `2.12.8`
I know this exists:
Â  ExcludedPackages: = "<empty>; Reverse. *;. * AuthService. *; Models \\. Data \\ .. *"
But I would like to know if there is any IncludedPackages, that although you add new tests you should not add it in the exclude to avoid evaluating its coverage.
The changes which I requested in issue https://github.com/scoverage/sbt-scoverage/issues/261 

I hope it will be helpful.