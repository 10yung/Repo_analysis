this code dose not work
  organizationalRoles = organizationalRoles.Where("(Parent!=null ? parent.Name:Title)");
how did you handle null ?
i did  

```csharp
ValidateToken(TokenId.Identifier);
            object value;
            if (_keywords.TryGetValue(_token.Text, out value))
            {
                var type = value as Type;
                if (type != null) return ParseTypeAccess(type);
                if (value == NullLiteral)
                {
                    Expression expr = value as Expression;
                    NextToken();
                    return expr;
                }
                if ((string)value == KeywordIt) return ParseIt();
                if ((string)value == KeywordOuterIt) return ParseOuterIt();
                if ((string)value == KeywordIif) return ParseIif();
                if ((string)value == KeywordNew) return ParseNew();
                NextToken();
                return null;
            }
```

in  Expression ParseIdentifier()
 and my query pass
is this Code true? or you handle in another way?
Method Append format does not use entityMap.TableName parameter, so it's better to remove it.
I have some code like:
```
using (var dbContext = new MssqlTestDbEntities())
            {
                dbContext.Database.Log = Console.WriteLine;
                var listtmp = new List<AuditorIdAndType>
                {
                    new AuditorIdAndType{
                        Id = Guid.Parse("8A7A9E45-9498-4647-B073-82502808BB03"),
                        AuditorTypeContract = AuditorType.Message},
                  };
                var listid = listtmp.Where(p => p.AuditorTypeContract == AuditorType.Message).Select(p => p.Id).ToList<Guid>();
                var t =dbContext.testb.Where(p => listid.Any(g => g.Equals(p.Id)) && p.AuditorType == (int) AuditorType.Message);
                t.Delete();
            }
```
then it will go to the **BatchExtensions** class and call:
`public static int Delete<TEntity>(this IQueryable<TEntity> source)`
I use SQL Server,debug and monitor the **_source_** found it create a correct SQL and no parameters, the GUID building to the sql as value; all is OK
but if I use MySQL(now our project using mysql and found some issue), monitor the **_source_** create sql with parameter @gp1 and no parameter passed in.
so I think maybe it not the issue of extensions, because the IQueryable source from Where passed into the delete is different between MYSQL(@gp1 parameter have no value) and SQLSEVER(guid as values in sql).
even monitor the sql in MySQL:
```
SET SESSION TRANSACTION ISOLATION LEVEL REPEATABLE READ
BEGIN
DELETE j0
FROM testdb.testa AS j0 INNER JOIN (
SELECT
1 AS `C1`, 
`Extent1`.`Id`
FROM `testa` AS `Extent1`
 WHERE (EXISTS(SELECT
1 AS `C1`
FROM (SELECT
1 AS `X`) AS `SingleRowTable1`
 WHERE **@gp1** = `Extent1`.`Id`)) AND (0 = `Extent1`.`AuditorType`)
) AS j1 ON (j0.Id = j1.Id);
COMMIT;
```
first, there is no @gp1 values passed in;
second, it commit succeed and no roll back....

anyone have idea or have fixed this issue by yourself?
Hello,
I have found a few bugs using PVS-Studio analyzer. PVS-Studio is a static code analyzer for C, C++ and C#: [https://www.viva64.com/en/pvs-studio/](https://www.viva64.com/en/pvs-studio/)

Analyzer warnings:

- [V3025](https://www.viva64.com/en/w/V3025/) Incorrect format. A different number of format items is expected while calling 'AppendFormat' function. Arguments not used: entityMap.TableName. EntityFramework.Extended.net40 MySqlBatchRunner.cs 233
[A link to the source code.](https://github.com/loresoft/EntityFramework.Extended/blob/afeee3ab66bb5f777253c4c7201239987423be99/Source/EntityFramework.Extended/Batch/MySqlBatchRunner.cs#L233)

In addition, I suggest having a look at the emails, sent from @pvs-studio.com.

Best regards,
Sergey Hrenov,
PVS-Studio Team
Hi admin,

I just made one commit to support interception for BatchExtension functions. Please merge to master.

Thanks.

Signed-off-by: Dat Nguyen <phucdat1d@gmail.com>
This exception occurs with the following example:

```C#
// ids is an array of integer Ids.
db.Table.Where(e => ids.Contains(e.Id)).Delete();
```
Fix update #232  on MySQL when taget field is in where expression
   db.Customers.Where(c => c.Country.Contains("CHINA")).Delete()
Check this case:

db.Messages.Where(x => x.messageType == 1)
                    .Update(x => new BaseMessage() { messageType = 5});

This update failed since MySQL raised: "messageType" field in list is ambiguous

The actual SQL statement is like:

UPDATE system_message AS j0 INNER JOIN (
SELECT
`Extent1`.`messageType`, 
`Extent1`.`messageId`
FROM `system_message` AS `Extent1`
 WHERE (((`Extent1`.`Discriminator` = @gp1) OR (`Extent1`.`Discriminator` = @gp2)) OR (`Extent1`.`Discriminator` = @gp3)) AND (`Extent1`.`messageType` = 0)
) AS j1 ON (j0.messageId = j1.messageId) 
 SET 
_messageType = 5_

The "SET **messageType** = 5" should be "SET **j0.messageType** = 5"

I think in MySqlBatchRunner, line at 313 
sqlBuilder.AppendFormat("**{0}** = @{1}", columnName, parameterName);
should be 
sqlBuilder.AppendFormat("**j0.{0}** = @{1}", columnName, parameterName);

And line at 317
sqlBuilder.AppendFormat("**{0}** = NULL", columnName);
should be
sqlBuilder.AppendFormat("**j0.{0}** = NULL", columnName);
Is there any chance to add support for `CancellationToken` for `*Async()` methods?