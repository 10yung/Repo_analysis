And point to tidyeval/rlang instead
What?

Send pull requests to authors of packages using lazyeval. The goal is to remove the dependency on lazyeval and replace it with tidy eval.

Why?

* This is an opportunity to learn more about tidy eval and NSE.
* This is useful because it would help us to deprecate the lazyeval package in the future.

How?

* I expect a wide range of difficulty. Some packages probably use lazyeval for very simple stuff and updating those to tidy eval should be simple. Others might use it in very creative (= unexpected) ways.

* Compatibility might be a little tricky when the package relies on automatic parsing of strings. `compat-lazyeval.R` in the rlang repo might be useful.

* While lazyeval follows promises, tidy eval doesn't. This should normally not be a problem since the promise following can be replaced with the "quote-and-unquote" idiom.
Typo and subject verb agreement rectifications.
The error message in `find_data.default` gives no clue about where the error occurred or what the unknown data type is. To a user of a `lazyeval` client package it is quite mysterious and hard to debug. 

Something like
```
stop("lazyeval::find_data does not know how to find data associated with an object of class ", class(x), call. = FALSE)
```

would be more helpful.


A call to `lazyeval::lazy(c)` leads to the output below. I was expecting it would simply return `c` for the `expr`. 
```R
lazyeval::lazy(c)
<lazy>
  expr: .Primitive("c")
  env:  <environment: R_GlobalEnv>
```


Add support for r `3.0.0` to allow upstream packages like `tibble` to support `3.0.0` as well.

