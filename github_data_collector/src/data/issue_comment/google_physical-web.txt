The code may throw an exception before the resource is closed，you should use try-catch-finally or try-with-resource to close resource
https://github.com/google/physical-web/blob/12604319e99b6d6dff451fc5a58a13a271f1dc7a/java/libs/src/main/java/org/physical_web/collection/JsonObjectRequest.java#L63-L65
https://github.com/google/physical-web/blob/12604319e99b6d6dff451fc5a58a13a271f1dc7a/android/PhysicalWeb/app/src/main/java/org/physical_web/physicalweb/Utils.java#L1169-L1181
The resource is not closed
https://github.com/google/physical-web/blob/12604319e99b6d6dff451fc5a58a13a271f1dc7a/java/libs/src/main/java/org/physical_web/collection/Request.java#L81-L88

can this still be used?
I run it with the latest gradle but there is an error
I have problems using https://beaufortfrancois.github.io/sandbox/physical-web/url-validator/ to validate some urls from my domain proximoati.info.

I have a big amount of urls already validated using my url shortener
![other_proximoati_url_success](https://user-images.githubusercontent.com/5604180/47261335-7814bb00-d48a-11e8-9d90-c0e260de6286.PNG)

but now I'm getting a "Fetch timeout" trying to validate new urls, for example  https://www.proximoati.info/gp001 
![proximoati_url_fail](https://user-images.githubusercontent.com/5604180/47261199-4bab6f80-d487-11e8-80e0-dc5638e1cc7b.PNG)

The workaround that I found is use another shortener service to encapsulate my short url:
![google_url_success](https://user-images.githubusercontent.com/5604180/47261392-7eeffd80-d48b-11e8-8dd7-b1f8a2ccf98f.PNG)

but I'm unavailable to change all my beacons urls to use the google url shortener service. Seems like my domain is in a blacklist or if I reach some rate limit.

Would really appreciate your thoughts.
After configuring a eddystone beacon I can see the "unregistered" Eddystone-URL in the Android "Beacon Tool" but not as "nearby notification". 
I found the following lines in the logcat of my device:
`2018-10-07 13:08:34.391 530-18111/? D/vendor.qti.bluetooth@1.0-wake_lock: Acquire wakelock is acquired 
2018-10-07 13:08:34.391 530-18111/? I/vendor.qti.bluetooth@1.0-ibs_handler: ProcessIbsCmd: Writing IBS_WAKE_ACK
2018-10-07 13:08:34.434 530-18111/? I/vendor.qti.bluetooth@1.0-ibs_handler: ProcessIbsCmd: Received IBS_SLEEP_IND: 0xFE
2018-10-07 13:08:34.434 530-18111/? I/vendor.qti.bluetooth@1.0-ibs_handler: SerialClockVote: vote for UART CLK OFF
2018-10-07 13:08:34.434 530-18111/? E/vendor.qti.bluetooth@1.0-wake_lock: Release wakelock is released 
2018-10-07 13:08:34.435 9795-20141/? W/NearbyDiscovery: Disabled by server: https://ux5.de/game, https://play.google.com/store/apps/details?id=com.jentsch.smartsquares, URL invalid: https://play.google.com/store/apps/details?id=com.jentsch.smartsquares [CONTEXT service_id=49 ]
2018-10-07 13:08:34.437 9795-7285/? I/BeaconBle: Client requested scan, settings=BleSettings [scanMode=ZERO_POWER, callbackType=ALL_MATCHES, reportDelayMillis=0, 6 filters, 1 clients, callingClientName=Nearby]
2018-10-07 13:08:34.457 9795-7285/? I/BeaconBle: Stopping scan on delegate scanner. BT state: 12
2018-10-07 13:08:34.458 9795-7285/? D/BluetoothAdapter: isLeEnabled(): ON`

I changed the URL and the ID if the beacon but it does not work. During my tests I figured out, there are request comming from the physical Web crawler:

`Every 2.0s: grep PhysicalWeb /var/log/apache2/ux5.de.access.log    Ubuntu-1804-bionic-64-minimal: Sun Oct  7 13:42:42 2018

66.249.69.118 - - [07/Oct/2018:12:10:02 +0200] "GET /app HTTP/1.1" 301 2631 "-" "Mozilla/5.0 (Google-PhysicalWeb)"
66.249.69.116 - - [07/Oct/2018:12:18:39 +0200] "GET /app HTTP/1.1" 301 2631 "-" "Mozilla/5.0 (Google-PhysicalWeb)"
66.249.81.178 - - [07/Oct/2018:13:02:02 +0200] "GET /game HTTP/1.1" 301 2631 "-" "Mozilla/5.0 (Google-PhysicalWeb)"
66.249.69.116 - - [07/Oct/2018:13:07:53 +0200] "GET /game HTTP/1.1" 301 2631 "-" "Mozilla/5.0 (Google-PhysicalWeb)"
66.249.69.116 - - [07/Oct/2018:13:13:04 +0200] "GET /game HTTP/1.1" 301 2631 "-" "Mozilla/5.0 (Google-PhysicalWeb)"
66.249.69.114 - - [07/Oct/2018:13:13:04 +0200] "GET /app HTTP/1.1" 200 4803 "-" "Mozilla/5.0 (Google-PhysicalWeb)"
66.249.69.118 - - [07/Oct/2018:13:19:03 +0200] "GET /game HTTP/1.1" 301 2631 "-" "Mozilla/5.0 (Google-PhysicalWeb)"
66.249.69.118 - - [07/Oct/2018:13:25:11 +0200] "GET /game HTTP/1.1" 301 2631 "-" "Mozilla/5.0 (Google-PhysicalWeb)"
66.249.69.116 - - [07/Oct/2018:13:30:58 +0200] "GET /game HTTP/1.1" 301 2631 "-" "Mozilla/5.0 (Google-PhysicalWeb)"
66.249.69.114 - - [07/Oct/2018:13:36:02 +0200] "GET /game HTTP/1.1" 301 2631 "-" "Mozilla/5.0 (Google-PhysicalWeb)"`

My question is, why does the NearbyDiscovery repeats the message "Disabled by server https://ux5.de/game, https://play.google.com/store/apps/details?id=com.jentsch.smartsquares, URL invalid: https://play.google.com/store/apps/details?id=com.jentsch.smartsquares [CONTEXT service_id=49 ]"?

desperately need a working copy for ios..any help would be appreciated

thanks
SDwebimage/uiimageview+webcache.h' file not found 

on build

using 

X CODE 8 AND 9

please help
In our experiments we found a lot of Nearby notifications without a Favicon, even though the configured URLs use Favicons which are shown by browsers.

Our customers find this “branding” very important, hence I’m opening this report here. Additionally, I've send a bug report as described here: https://github.com/google/physical-web/wiki/Taking-a-Nearby-Bug-Report.

Here’s a list of example URLs:

https://www.facebook.com
https://www.xing.com
https://www.bahn.de
https://www.rainbow-parking.de
https://www.awk.de
https://www.imm-hamburg.de
https://isarfunk.de/

If you try these URLs for yourselves, you will notice that no Favicon will be shown.

We haven’t been able to see a clear pattern why this doesn’t work for some websites.

We don’t know the heuristics used by Nearby Notifications and we cannot ask these website owners to change their implementations. So, there’s not much we can do from our side.

Did you have similar issues and can confirm this problem? 

We have multiple beacons which were sending our notifications previously without an issue.  then all of a sudden they no longer send any notifications via UID.  we have tried new beacons, we have put into debug mode and the notification shows up but when live the notification does not broadcast to our phones.  Does anyone have any idea what could be wrong?  We use the nowsquare platform.
I'm leaving my accumulated (intentionally opinionated, and now slightly edited) comments and questions here, as I couldn't find any better place for them. They mainly concern Eddystone-URL, as that's the only thing I bother with right now (except iBeacon of course), and it's primarily addressed to Google.

I call Nearby / Eddystone / Physical Web together as NEPW below, as the name confusion is an issue in itself, which is very hard to explain to customers. Adding support in Chrome and then removing it shortly after is another confusing thing, but understandable due to integration of Nearby in Google Play Services and considering very few (any?) iOS users have Chrome installed anyway.

It seems Google has moved away from promoting NEPW. It's a viable alternative (and competitor) to iBeacon, both as an analogue via UID/EID and due to the conceptual simplicity of Eddystone-URL. I've found that the only ones still posting any fresh information about NEPW are providers of proximity marketing solutions, that try to promote use of beacons to their customers. Well, I do too.

Setting up UID or EID the Nearby way seems way too complicated and dependent for most (and almost all short-term) scenarios. In my opinion, the whole point of Eddystone is Eddystone-URL without use of Google's central configuration, but rather directly linking to a CMS without further intervention. Analogues: QR codes and NFC tags.

For NEPW to be a viable generic option there's need for a reliable and up-to-date iOS app too, and from Google, so there's a chance users have it installed or care about installing it. The smartphone market is still very much iOS _and_ Android, not only Android. It would be very unwise to run a campaign (or any other use of beacons) for only Android users.

The Physical Web app for iOS is old, but luckily (?) still works, despite now mandatory usage descriptions in plist etc. I've seen a few other providers making analogous applications, like MobStac and Bleesk, and potentially my own company as well (it's working, but barely).

A few questions:

At what distance is NEPW considering being within a beacon's region? My experience when it comes to Eddystone-URL is that it seems to be when the mobile device is at all receiving any "pings", which makes for little possibility to pinpoint in-door locations. iBeacon has the option of far/near/immediate, and for most cases I've found near to be the best option, e.g. within shops.

What method is used to avoid inside/outside region "flickering"? Timers on both entering and exiting a region?

Does NEPW use both TX and RSSI to calculate distance? My app does that (right now just TX - RSSI with moving average) to enable the user to configure when to get notified.

At what intervals does NEPW scan for advertisements? Doing it constantly drains the battery, but on the other hand doing it too seldomly might miss beacons. I currently scan constantly for quick response, well aware that won't do.
