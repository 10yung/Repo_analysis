Hello,

I am trying to register a new Bower package. Once it asks this:

> Registering a package will make it installable via the registry (https://registry.bower.io), continue? 

I agree answering "Y", but I get the following error just after a few seconds:

> EUNKNOWN Unknown error: 500 - Registering bower package names is not supported anymore. You can install any bower package on github with command like "bower install jquery/jquery-dist --save"

Was the register support really dropped or it is an issue?

Thank you very much in advance!

Cheers,
 Joan

<!--

If you are reporting a new issue, make sure that we do not have any duplicates.
You can ensure this by searching the issue list for this repository.

You are welcome to open issues to discuss important general topics concerning Bower.
However for support questions, please consider using http://stackoverflow.com or
asking for help in our Discord channel: https://discordapp.com/invite/0fFM7QF0KpZaDeN9

# BUG REPORT

Use the commands below to provide key information to reproduce:
You do NOT have to include this information if this is a FEATURE REQUEST OR DISCUSSION

For more information about reporting bugs, see:
https://github.com/bower/bower/wiki/Report-a-Bug

-->

**Output of `bower -v && npm -v && node -v`:**

```
$ bower -v && npm -v && node -v
1.8.8
2.15.9
v4.5.0
```

**Additional environment details (proxy, private registry, etc.):**

Nope


**Steps to reproduce the issue:**

1.

```
$ cat bower.json 
{
  "name": "asd",
  "dependencies": {
    "iron-ajax": "PolymerElements/iron-ajax^2.0.0"
  },
  "resolutions": {
    "iron-ajax": "^2.0.0"
  }
}
```

2.

```
$ bower install
bower iron-ajax#*           not-cached https://github.com/PolymerElements/iron-ajax^2.0.0.git#*
bower iron-ajax#*              resolve https://github.com/PolymerElements/iron-ajax^2.0.0.git#*
bower iron-ajax#*              ECMDERR Failed to execute "git ls-remote --tags --heads https://github.com/PolymerElements/iron-ajax^2.0.0.git", exit code of #128 fatal: unable to access 'https://github.com/PolymerElements/iron-ajax^2.0.0.git/': The requested URL returned error: 400

Additional error details:
fatal: unable to access 'https://github.com/PolymerElements/iron-ajax^2.0.0.git/': The requested URL returned error: 400
```

**Describe the results you received:**

This used to work, I believe, but fails when tries to access GitHub.

**Describe the results you expected:**

No errors.

**Additional information:**


I've tried manually requesting that URL and got the following:

```
$ curl -i https://github.com/PolymerElements/paper-icon-button^2.0.0.git/
HTTP/1.1 301 Moved Permanently
Date: Thu, 11 Jul 2019 19:55:41 GMT
Content-Type: text/html
Content-Length: 178
Server: GitHub.com
Location: https://github.com/PolymerElements/paper-icon-button^2.0.0/
Vary: Accept-Encoding
X-Frame-Options: DENY
Vary: Accept-Encoding
X-GitHub-Request-Id: EE63:12AF:1DB9E8:324FDA:5D27943D

<html>
<head><title>301 Moved Permanently</title></head>
<body bgcolor="white">
<center><h1>301 Moved Permanently</h1></center>
<hr><center>nginx</center>
</body>
</html>


$ curl -i https://github.com/PolymerElements/paper-icon-button^2.0.0/
HTTP/1.1 404 Not Found
Date: Thu, 11 Jul 2019 19:56:06 GMT
Content-Type: text/plain; charset=utf-8
Transfer-Encoding: chunked
Server: GitHub.com
Status: 404 Not Found
Vary: X-PJAX
Cache-Control: no-cache
Set-Cookie: has_recent_activity=1; path=/; expires=Thu, 11 Jul 2019 20:56:06 -0000
Set-Cookie: logged_in=no; domain=.github.com; path=/; expires=Mon, 11 Jul 2039 19:56:06 -0000; secure; HttpOnly
Set-Cookie: _gh_sess=K3g2SzhtajVaQjhYMDFzbXhsSWIxTXJJdTdHcUN0WFJVMWhmbElIcXVRSXZBRVk5THRPeHp0RnZqUFplb2hqTjl3NlVMcFR1d0diY1JUT0FkdVArL09UcGlMZ1oxRVBHMWFqS0Zwd1ZOSlNkaXJjMDMyRzZ4Wlc4VkZZMHpqeFYtLU9MbjdDcWNHNDBINmxqK2hvUXAwNXc9PQ%3D%3D--802b5fbb2bab80910ce3778a33e0ead83a75b04b; path=/; secure; HttpOnly
X-Request-Id: f3ec3067-59c9-4197-a2ac-940777a5eaaa
Strict-Transport-Security: max-age=31536000; includeSubdomains; preload
X-Frame-Options: deny
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
Referrer-Policy: origin-when-cross-origin, strict-origin-when-cross-origin
Expect-CT: max-age=2592000, report-uri="https://api.github.com/_private/browser/errors"
Content-Security-Policy: default-src 'none'; base-uri 'self'; connect-src 'self'; form-action 'self'; img-src 'self' data:; script-src 'self'; style-src 'unsafe-inline'
X-GitHub-Request-Id: A711:6F95:2E4CF1:4F63B0:5D279456

Not Found
```

That's why I suspect either bower uses a wrong URL or GitHub returns 404 when it shouldn't.
bower in the snapstore is 1.8.0, please upgrade to 1.8.8 and ideally build the snap direct out of github. (possibly you need to take ownership of the snap too, to achieve that).

Currently that's the status for bower:

```
$ snap info bower
name:      bower
summary:   A package manager for the web
publisher: Joe Borg (joeborg)
contact:   https://github.com/bower/bower/issues
license:   Other Open Source
description: |
  Web sites are made of lots of things — frameworks, libraries, assets, and utilities.
  Bower manages all these things for you.
snap-id: sqteCX7tnM1bxCX34c6Mt9DxxQJkpMS9
channels:
  stable:    1.8.0 2017-05-17 (2) 13MB classic
  candidate: ↑                         
  beta:      ↑                         
  edge:      ↑ 
```
Is it duplicate? hell yes
did i find a solution ? No
did someone is the discord channel managed to help? no

# BUG REPORT

1.8.7
3.5.2
8.10.0


```
cannot bower install see attached 
https://drive.google.com/file/d/1dzrjIxfag3p-zFWVrasmO1OcDaHbYSj2/view?usp=sharing
```

**Additional environment details (proxy, private registry, etc.):**



**Steps to reproduce the issue:**

1.
2.
3.

**Describe the results you received:**

stuck

**Describe the results you expected:**
finish


**Additional information:**
never happened to me before the last 5 years
.bowerrc hooks (preinstall and postinstall) not working when installing repos as dependency

.bowerrc File

```
{
    "cwd": "./",
    "scripts": {
        "preinstall": "npm run replace" ,
        "postinstall": "bower install"
    }
}
```

P.S. I'm on OS 10.9.2 with:

```
node -v
v8.11.1
npm -v
5.6.0
bower -v
1.8.4
```

I run the bower update and initially all is ok but when it seems about to finish - really on the last line - the command line freeze exactly where it says bower status “resolved”. This has happened with different components.

I have installed the latest version of bower. Does any one have any suggestions on what could be causing this issue?

**Output of `bower -v && npm -v && node -v`:**

```
1.8.2
2.15.8
v4.4.7
```

**Additional environment details (proxy, private registry, etc.):**
NA (Not Applicatable)


**Steps to reproduce the issue:**

1. Creating the Project Directory with camel Cased Folder Name
`mkdir "tvekProject"`
2. Installing Required Packages using bower
`bower install angularjs jquery boostrap backbone`
3. Initializing the project using bower
`bower init`
_Output :_
> ? name tvekProject
> ? description
> ? main file
> ? keywords
> ? authors
> ? license MIT
> ? homepage
> ? set currently installed components as dependencies? Yes
> ? add commonly ignored files to ignore list? Yes
> ? would you like to mark this package as private which prevents it from being accidentally published to the registry? No
> 
> {
>   name: 'tvekProject',
>   description: '',
>   main: '',
>   license: 'MIT',
>   homepage: 'index.html',
>   ignore: [
>     '**/.*',
>     'node_modules',
>     'bower_components',
>     'test',
>     'tests'
>   ],
>   dependencies: {
>     angular: 'angularjs#^1.6.6',
>     backbone: '^1.3.3',
>     bootstrap: '^3.3.7'
>   }
> }
4. Show the Bower Home
`bower home`
_Output:_
> bower invalid-meta  for:/home/scrapbook/tutorial/tvekProject/bower.json
> bower invalid-meta  The "name" is recommended to be lowercase, can contain digits, dots, dashes

**_HERE WE CAN SEE THAT THE PROJECT DEFAULT NAMING CONVENTION IN INIT COMMAND TO SUPPORT CAMELCASED HAS CONFLICTED WITH THE HOME COMMAND._**

**Describe the results you received:**

here in the output, it has shown that the bower.json contains an invalid-meta tag for "name" as "tvekProject".
> $>bower home
> bower invalid-meta  for:/home/scrapbook/tutorial/tvekProject/bower.json
> bower invalid-meta  The "name" is recommended to be lowercase, can contain digits, dots, dashes
> $>


**Describe the results you expected:**
> $>` bower home`
>
> $>


**Additional information:**
The Expected Solution for this is change the default project name to lowercase(name of the current foldername.).

ie.,
Currently
 > ? name tvekProject

After Fixing

> ? name tvek-project
```
npm WARN deprecated bower@1.8.0: ..psst! While Bower is maintained, we recommend Yarn 
and Webpack for *new* front-end projects! Yarn's advantage is security and reliability, and 
Webpack's is support for both CommonJS and AMD projects. Currently there's no migration 
path but we hope you'll help us figure out one.
```
I want to take a stab at the deprecation message's invitation to discuss a migration path.

I've tried moving a few projects from Bower to NPM, and the obvious problem that I always get stuck on is "what do I do when a package doesn't exist on npm?" Managing dependencies on both Bower and NPM at the same time isn't feasible, so I'm pretty much hosed.

**So, here's a rough idea for how to allow all interested package/application authors migrate to NPM:**

1. Each package in the Bower registry is automatically re-published to npm under the `@bower/` organization scope, with source code/files untouched.
2. This automatic publisher generates a `package.json` for each Bower package based on the `bower.json,` correctly pointing to the other npm `@bower/X` dependencies.
3. If all Bower packages exist on NPM, application authors could then easily make their move from Bower packages to NPM's `@bower/X` packages without needing to change any/much source. 
    - Because everything would be installed in the `@bower/` `node_modules/` subdirectory, any hardcoded `../` dependency paths would continue to work as written. 
    - Flat installs would be supported by `yarn install --flat`.
4. Once squarely inside the npm ecosystem, applications could start moving away from `@bower/X` dependencies gradually.

If the "mirror Bower on NPM" part of the idea sounds crazy, there's actually already some successful precedent for this. [DefinitelyTyped](https://github.com/DefinitelyTyped/DefinitelyTyped), for example, mirrors their big github repo of type definitions under the [`@types/`](https://www.npmjs.com/~types) scope on npm. Obviously the npm team would need to be looped in to confirm/approve this for us, but it's possible.

Also worth highlighting again that this plan is focused on making the Bower->NPM migration easier. Bower's future would continue to exist outside the scope of this plan. 

What does everyone think? Crazy? Feasible?
# BUG REPORT

bower v1.8.0
node v7.8.0
git v2.7.4


**Additional environment details (proxy, private registry, etc.):**
registry=https://registry.npm.taobao.org

**Steps to reproduce the issue:**

1. npm install --save underscore


**Describe the results you received:**
```
bower underscore#*          not-cached https://github.com/jashkenas/underscore.git#*
bower underscore#*             resolve https://github.com/jashkenas/underscore.git#*
bower underscore#*             ECMDERR Failed to execute "git ls-remote --tags --heads https://github.com/jashkenas/underscore.git", exit code of #128 fatal: transport 'https' not allowed

Additional error details:
fatal: transport 'https' not allowed

```

**Describe the results you expected:**
I hope can install package successfu


**Additional information:**
When Boser install any package ,have same issues