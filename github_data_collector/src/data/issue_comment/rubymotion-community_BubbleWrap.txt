This pr replaces pr #502 

Looks like this got depreciated in iOS 9 and is finally being removed in iOS 13

Terminating app due to uncaught exception 'NSInvalidArgumentException', reason: 'MPMoviePlayerController is no longer available. Use AVPlayerViewController in AVKit.'

https://forums.developer.apple.com/thread/119903
https://github.com/jeremiahlukus/BubbleWrap/commit/b25793dc05c2aad592f5777ad3fc9c5cc72e0ca5 

This solves it the error and allows you use UIAlert. This obviously not good fix but it is unable to read its contestants. 

w/ rubymotion 4.22 and xcode 9 beta 5.

```
   Compile /Users/will/.rvm/gems/ruby-2.3.1/gems/bubble-wrap-1.9.6/motion/motion/magnetometer.rb
2017-08-19 14:35:57.422 ruby[19377:21740120] unrecognized runtime type `{_simd_quatf=}' (TypeError)
2017-08-19 14:35:57.425 ruby[19377:21740120] *** Terminating app due to uncaught exception 'TypeError', reason: 'unrecognized runtime type `{_simd_quatf=}' (TypeError)
'
*** Call stack at first throw:
(
	0   CoreFoundation                      0x9437627b __raiseError + 187
	1   libobjc.A.dylib                     0xa0cc16f2 objc_exception_throw + 273
	2   ruby                                0x00284275 rb_vm_raise_current_exception + 501
	3   ruby                                0x0028431c rb_vm_raise + 92
	4   ruby                                0x001288a1 rb_exc_raise + 17
	5   ruby                                0x00122847 rb_raise + 71
	6   ruby                                0x0025a968 _ZN13RoxorCompiler12convert_typeEPKc + 1800
	7   ruby                                0x002612cc _ZN13RoxorCompiler12compile_stubEPKcbii + 2156
	8   ruby                                0x002a8b7c _ZN16RoxorAOTCompiler25compile_static_objc_stubsEP11objc_objectPKcS3_PN4llvm14GlobalVariableE + 1964
	9   ruby                                0x002a9b8d _ZN16RoxorAOTCompiler20compile_static_stubsEv + 1149
	10  ruby                                0x002b16cf _ZN16RoxorAOTCompiler23compile_static_bs_filesEv + 223
	11  ruby                                0x00255f8a _ZN16RoxorAOTCompiler21compile_init_functionERNSt3__16vectorIPN4llvm8FunctionENS0_9allocatorIS4_EEEE + 6602
	12  ruby                                0x00286424 rb_vm_aot_compile + 452
	13  ruby                                0x001a3f64 ruby_process_options + 1380
	14  ruby                                0x0020a558 main + 136
	15  libdyld.dylib                       0xa1533395 start + 1
	16  ???                                 0x00000065 0x0 + 101
)
    ERROR! File '/Users/will/.rvm/gems/ruby-2.3.1/gems/bubble-wrap-1.9.6/motion/motion/device_motion.rb' failed to compile
```
```
2016-12-15 08:42:51.342 Curb Call[12090:1414214] *** Terminating app due to uncaught exception 'NameError', reason: 'constants.rb:46:in `get:': uninitialized constant Kernel::KCLAuthorizationStatusAuthorized (NameError)
	from location.rb:177:in `authorized?'
	from app_delegate.rb:31:in `on_load:'
	from delegate_module.rb:16:in `application:didFinishLaunchingWithOptions:'
```
The following code returns `[CLLocationManager copyWithZone:]: unrecognized selector sent to instance`:

```
include BW::Location

def get_location
  if BW::Location.enabled? && BW::Location.authorized?
    BW::Location.get_once(desired_accuracy: :nearest_ten_meters) do |user_location|
      if user_location.is_a?(CLLocation)
        mp user_location.coordinate.latitude
      else
        NSLog("Error getting location: %@", user_location[:error])
      end
    end
  end
end
```

I have messing around with it all day but can't get it fixed. Could it be a bug in BW::Location?

here's a fix and could be PR'd until this is resolved by Apple

https://gist.github.com/dam13n/6dbad1b48a95850d2ef08591ba726dae

So I'm doing a 

``` ruby
BW::Camera.any.picture do |result|
  mp result
```

and the result is

```
{
  :"\e[4mOriginalImage\e[0m"   => #<UIImage:0x11c749fb0>,
  :"\e[4mMediaType\e[0m"       => "public.image",
  :"\e[4mReferenceURL\e[0m"    => #<NSURL:0x11c74dbd0, URL="assets-library://asset/asset.JPG?id=5291A6BF-EB16-43A6-9C56-CF80F8E49C17&ext=JPG">
}
```

When I try and access it by `result[:original_image]` like the API describes, it returns `nil`. So any ideas why I can't use it the way it's shown in the readme?

If BubbleWrap provides an options for using weak callbacks, these should also be applied
for Reactor-blocks or clearly state in the docs that this isn't the case :)
