Made requested changes
I run a check of the C codebase with cppcheck as part of one of my University's course projects. Below, the relevant errors that cppcheck found. Each set of similar errors is enclosed in a quote.

> [paparazzi-master/sw/misc/inertial/C/ahrs_quat_fast_ekf_main.c:68]: (error) Array 'afe_P[7][7]' index afe_P[7][1] out of bounds.

I think this might be just a typo? Since I see the matrix is 6 cells for 6 cells.


> [paparazzi-master/sw/logalizer/openlog2tlm.c:63]: (error) Resource leak: in
> [paparazzi-master/sw/logalizer/openlog2tlm.c:158]: (error) Resource leak: in
> [paparazzi-master/sw/logalizer/openlog2tlm.c:158]: (error) Resource leak: out
> [paparazzi-master/sw/tools/gps_ublox_conf/ublox_conf.c:287]: (error) Resource leak: in_file


> [paparazzi-master/sw/airborne/subsystems/datalink/w5100.c:236]: (error) Array 'ip[1]' accessed at index 1, which is out of bounds.
> [paparazzi-master/sw/airborne/subsystems/datalink/w5100.c:237]: (error) Array 'ip[1]' accessed at index 2, which is out of bounds.

Arrays count from zero, so, if the intent was to access that single value stored into ip[], shouldn't it be ip[0] instead of ip[1]?


> [paparazzi-master/sw/airborne/firmwares/rotorcraft/main_ap.c:84]: (error) failed to evaluate #if condition, division/modulo by zero
> [paparazzi-master/sw/airborne/firmwares/rover/main_ap.c:79]: (error) failed to evaluate #if condition, division/modulo by zero


> [paparazzi-master/sw/airborne/arch/lpc21/lpcusb/usbhw_lpc.c:479]: (error) Shifting signed 32-bit value by 31 bits is undefined behaviour
> [paparazzi-master/sw/airborne/arch/lpc21/lpcusb/usbhw_lpc.c:528]: (error) Shifting signed 32-bit value by 31 bits is undefined behaviour
> [paparazzi-master/sw/airborne/peripherals/ms5611.c:95]: (error) Shifting signed 32-bit value by 31 bits is undefined behaviour
> [paparazzi-master/sw/airborne/peripherals/ms5611.c:138]: (error) Shifting signed 32-bit value by 31 bits is undefined behaviour
> [paparazzi-master/sw/ext/tlsf/tlsf.c:676]: (error) Shifting signed 32-bit value by 31 bits is undefined behaviour


I hope to be of help reporting this errors.

I made a cleaned installation of Paparazzi. I have a parrot bebop2 and I tried to use video_rtp_stream for the video streaming. I used RTPviewer for visualization and ffmpeg.
There are many missing packets, I do not understand why. Furthermore, even if I stop all the processes (SERVER, GCS and data link) the bebop keeps me sending data. I do not think this a nice behaviour

After merging the latest master into the tu delft course code, I've noticed that the Bebop 1 front camera image is a lot darker than before. I suspect this has to do with #2364 . I have not found the cause yet as that PR made a lot of changes to the front camera. The default values are way too dark for flights inside the cyberzoo, I've tried increasing the color gains or exposure value but ran into some other issues (low framerates or even loss of video). I will play around with this a bit more, but any hints on what has changed or how to fix this would be most welcome.
In many rotorcraft flight plans, the flare block is structured the following way:
`    <block name="flare">
      <exception cond="NavDetectGround()" deroute="Holding point"/>
      <exception cond="!nav_is_in_flight()" deroute="landed"/>
      <call_once fun="NavStartDetectGround()"/>
      <stay climb="nav_descend_vspeed" vmode="climb" wp="TD"/>
    </block>`

It seems that the flair is often derouted to holding point, this causes the airframe to fall out of the sky. This has been noticed when flying the course2018_orangeavoid_cyberzoo Bebop aircraft. However, also when using different (custom) airframes, based on a default bebop with optitrack with different flight plans (a modified version of rotorcraft_basic) this happens. It has only been tested with bebop airframes.

For course2018_orangeavoid_cyberzoo:
- It  happens very often, except when the takeoff is performed very smoothly by limiting the amount of throttle used.
- It does not happen if THRESHOLD_GROUND_DETECT is set tot a very high value (= 100 m/s^2).

#530 is possibly related.

Adds the rl_obstacle_avoidance module. This module is a proof-of-concept for a new method for obstacle detection and avoidance on quadrotors. One that does not require the addition of any sensors, but relies solely on measurements from the accelerometer and rotor controllers. The detection of obstacles is based on the principle that the airflow around a quadrotor changes when the quadrotor is flying near a surface. A well-known example of this is the ground effect, an increase in lift force close to a ground surface. Similarly, a change in dynamics occurs when a quadrotor is flying close to a wall or ceiling. The proposed method uses a reinforcement learning controller to detect obstacles based on these measurements, and take action to lead the quadrotor back to safety.

Note: This is an initial proof-of-concept, limited to the detection of obstacles underneath a quadrotor.

Documentation can be found here: https://wiki.paparazziuav.org/wiki/Module/rl_obstacle_avoidance
 - TOO_FAR_FROM_HOME with RC (disco) -> NO HOME 
      - (1.5*too far, throttle off works)
      - microjet simulator seems works
 - HOME mode throttle: 100% (disco) after boot (88% in sim) and failsafe-throttle after GPS_ERROR


This is an upgrade for the UBlox driver and also some cleanup of the RTCM support.
# Outcome:

Have still produced Parrot minidrone support in PPRZ master

## Steps
- [x] get minidrones to compile

First in memset the issue:
https://stackoverflow.com/questions/3389464/initializing-a-structure-array-using-memset

##Must haves

- [x] Get best Firmware
- [x] Test with parrot app
- [x] Mambo and Swing in Cyberzoo and film it
- [x] Add Busybox kernel modules fro USB port
- [ ] Add PWM output of Mambo usable (Gripper Cannon and whatnot)
- [ ] Fix sonar fully
- [ ] Add link to Firmware to use
- [ ] Remove the Debug items
- [ ] Add doxygen tags
- [ ] Run Astyle on code
- [ ] Adjust Wikipages to reflect current state

## Optional tasks

- [ ] Make better airframe for Swing so it can transition
- [ ] Upload to TU Channel
- [ ] Test Fly outside

## Maybe
- [ ] Add rolling spider to pprz conf
- [ ] Testfly Roling spider

Since we can use USB but then bottom cam not, defeats the purpose a bit. So PWM port will be (mis)uset for bits out and perferably in