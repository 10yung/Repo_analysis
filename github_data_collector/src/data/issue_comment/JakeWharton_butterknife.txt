![image](https://user-images.githubusercontent.com/41484434/72658815-6f929380-39f1-11ea-9017-51f7f6536826.png)

Hello JakeWharton ，I have been paying attention to you since 16 years, witnessing your growth and achievements. I'm proud of you. I've been doing Andro for more than three years now. With the increase of my work and age, I'm a little confused. Please give me some valuable opinions on the planning of future program career and future technology stack. Thank you.
After succesfully migrating to Androidx, i added below things in my build.gradle file

implementation 'com.jakewharton:butterknife:10.0.0'
annotationProcessor 'com.jakewharton:butterknife-compiler:10.0.0'

but when i run the App, this error coming
**Note: @BindView field with unresolved type (Toolbar) must elsewhere be generated as a View or interface.**

Please help
I'm using com.jakewharton:butterknife-gradle-plugin:9.0.0-rc3 in two project.Both project use support anotation no android.x.anotation. But one project generated R2 file is right but another R2 is base on android.x.anotation which actually can't find in my decency. How could this happen?
I have an issue where I am using Butterknife in a library. The issue is not with using in a library, but rather within the Android test classes that are using Butterknife. 
In the library, everything works fine, but in my testActivities, the R2.java is not generating the constants needed to recognize for binding. 

Package name
     com.test-lib.sso(androidTest)

build.gradle file

    apply plugin: 'com.android.library'
    apply plugin: 'kotlin-android'
    apply plugin: 'kotlin-android-extensions'
    apply plugin: 'maven-publish'
    apply plugin: 'com.jakewharton.butterknife'

    ext {

        MAVEN_URL = System.getenv('MAVEN_URL') ?: System.getProperty("MAVEN_URL")
        MAVEN_USERID = System.getenv('MAVEN_USERID') ?: 
       System.getProperty("MAVEN_USERID")
        MAVEN_PASSWD = System.getenv('MAVEN_PASSWD') ?: 
       System.getProperty("MAVEN_PASSWD")
    }

    buildscript {
        ext.kotlin_version = '1.3.50'
        repositories {
            mavenCentral()
            google()
            jcenter()
        }

    dependencies {
        classpath 'com.android.tools.build:gradle:3.5.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.jakewharton:butterknife-gradle-plugin:10.2.0'
        }

    }
       dependencies {
         implementation 'androidx.legacy:legacy-support-v4:1.0.0'
         implementation 'androidx.appcompat:appcompat:1.0.2'
         implementation 'com.google.code.gson:gson:2.8.0'
         implementation 'com.squareup.okhttp3:okhttp:3.4.1'

         implementation 'com.jakewharton.timber:timber:4.7.1'
         implementation 'com.jakewharton:butterknife:10.1.0'


        api 'androidx.biometric:biometric:1.0.0-beta02'
        androidTestImplementation 'com.android.support.test:runner:1.0.2'
  
        androidTestImplementation 'androidx.test:runner:1.2.0'
        androidTestImplementation 'androidx.test:rules:1.2.0'
        androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
        androidTestImplementation 'androidx.test.espresso:espresso-web:3.2.0'
        androidTestImplementation 'androidx.test.uiautomator:uiautomator:2.2.0'
        androidTestImplementation 'com.squareup.okhttp3:mockwebserver:3.4.1'
        androidTestImplementation 'com.jakewharton:butterknife:10.1.0'
        annotationProcessor 'com.jakewharton:butterknife-compiler:10.1.0'
        androidTestAnnotationProcessor 'com.jakewharton:butterknife-compiler:10.2.0'
        implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

        api 'com.jakewharton:butterknife:10.1.0

In my test class

      import com.lib.sso.test.R;

     import butterknife.BindView;
     import butterknife.ButterKnife;
     import butterknife.OnClick;

     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.test_main_activity);
         ButterKnife.bind(this);
     }
    @BindView(R.id.test_status) EditText txtStatus;
    @BindView(R.id.env_spinner) AppCompatSpinner spinner;

     @OnClick(R2.id.test_login)
     public void startNewActivity(View v){
        startActivityForResult(NewActivity.getLoginIntent(activity), REQUEST_CODE_LOGIN);
      }
XML layout

          <Button
               android:id="@+id/test_login"
               android:layout_width="wrap_content"
               android:layout_height="wrap_content"
               android:textSize="10sp"
               android:text="Sign In"/>

In the @BindView, Android Studio wants the R.id.test_login to be constant which I could do by declaring @BindView(R2.id.test_login) except the constant variable is not generated in R2.java.

When I migrate the butterknife calls to R2, the variable becomes red and is not recognised. When I search within the R2.java, I will not find that variable at all, mainly because it has not been generated.
So, How do I get butterknife to recognize R2 in a library test class?
I have an old project that needs an upgrade recently. I upgraded AndroidX first, then butterknife from 8.5.0 to 10.2.0, and I also installed documentation using @bindview (r2.id.xx).
However, I found that the XXXActivity_ViewBinding was not generated correctly after building the project. I checked all the configuration items and they all seemed to be correct.
So I try to create a new demo to verify whether it is a configuration problem. After the demo verification, the Project is normal. Then I try ReBuild Project and Invalidate Caches/Restart several times...However, the ViewBinding file has not been generated, which causes my project cannot run normally, as long as it runs, it will be a mistake, because the views are all NULL. Finally, I tried to manually clean the cache of Android Studio and the cache of Gradle, but this problem still cannot be solved. I hope someone can help me, thank you!
this is demo build project image:
![image](https://user-images.githubusercontent.com/19906041/66993045-7f05f600-f0fd-11e9-8cbb-76fa4ec1d3f6.png)
this is my project build project image:
![image](https://user-images.githubusercontent.com/19906041/66993118-a2c93c00-f0fd-11e9-8af3-5ffd9fd12d24.png)
This is my configuration dependency:
![image](https://user-images.githubusercontent.com/19906041/66993170-b4aadf00-f0fd-11e9-8fe1-0c40e1aa3ee5.png)
![image](https://user-images.githubusercontent.com/19906041/66993193-ba082980-f0fd-11e9-9a84-8ba9c409f753.png)
![image](https://user-images.githubusercontent.com/19906041/66993216-c1c7ce00-f0fd-11e9-8abd-56ff884543e4.png)
![image](https://user-images.githubusercontent.com/19906041/66993229-c4c2be80-f0fd-11e9-82cc-dc0d1691cb51.png)

> Task :offcnfreind:processDebugAnnotationsWithJavac FAILED
/home/xieyutuo/workspace/android_zgjy/offcnfreind/build/generated/source/r2/debug/com/offcn/offcnfreinds/R2.java:11904: 错误: 已在类 styleable中定义了变量 ActionBarLayout_android_layout_gravity
    public static final int ActionBarLayout_android_layout_gravity = 1;
  
I am getting numerous null pointer exceptions from ButterKnife failing to bind views into Java.
I guess the binding might not be being generated? Please can you help me find steps to fix this issue?

From the Logs:
```
D/ButterKnife: Looking up binding for com.littlesparkshospital.littletrial.activities.MainActivity
D/ButterKnife: Not found. Trying superclass androidx.appcompat.app.AppCompatActivity
```

XML:
```
<RelativeLayout
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_toLeftOf="@+id/family_image"
                android:layout_toRightOf="@+id/setting_image"
                android:id="@+id/map_container">
```
Java:
```
@BindView(R.id.map_container)
RelativeLayout mapContainer;
```

I am using version 10.1.0 of butterknife:
```
implementation 'com.jakewharton:butterknife:10.1.0'
annotationProcessor 'com.jakewharton:butterknife-compiler:10.1.0'
```

It looks like the MainActivity_ViewBinding.java is being generated as I would have expected, so I guess that the library can't find this generated code at runtime? :/ 
```
// Generated code from Butter Knife. Do not modify!
package com.littlesparkshospital.littletrial.activities;

import android.view.View;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import androidx.annotation.CallSuper;
import androidx.annotation.UiThread;
import butterknife.Unbinder;
import butterknife.internal.DebouncingOnClickListener;
import butterknife.internal.Utils;
import com.littlesparkshospital.littletrial.R;
import java.lang.IllegalStateException;
import java.lang.Override;

public class MainActivity_ViewBinding implements Unbinder {
  private MainActivity target;

  private View view7f090184;

  private View view7f090080;

  @UiThread
  public MainActivity_ViewBinding(MainActivity target) {
    this(target, target.getWindow().getDecorView());
  }

  @UiThread
  public MainActivity_ViewBinding(final MainActivity target, View source) {
    this.target = target;

    View view;
    target.mapContainer = Utils.findRequiredViewAsType(source, R.id.map_container, "field 'mapContainer'", RelativeLayout.class);
    view = Utils.findRequiredView(source, R.id.setting_image, "field 'setting_image' and method 'openSettings'");
```
Hello,

Am using the lastest library like an Android X. Then your Butterknife.kt file shows me an errors and I see everything is red. Let me know or send a file which I can use in Android X. 
I am very happy to be involved in this project. If there is a need to change, I am willing to do my utmost.

I solved this problem [Missing resource ID for OnClick annotation #1498](https://github.com/JakeWharton/butterknife/issues/1498)  these days . Next, I will analyze the reasons and solutions.Please take a look ,thanks

Reason:
When using kotlin, for the same resource, if you do not use other annotations (eg: @Bindview) before the event annotation (eg: @Onclick), after generating view_binding.java, the Utils.findRequiredView() uses a raw integer not R reference.

When the merged resource is packaged, the static value of the R file has changed. So it leads "Missing resource ID". 

Analysis:
The annotation processing of kotlin generates a stub java file and processes the annotation according to the java file.But at this time ,Java file already using raw integer

My solution is to solve in the process() method, if it is the first time use a raw integer, go through the R.java, find the corresponding static value in R.java, and use R reference replace it.
If the second time is a raw integer, it will not be processed because the same resource will use the same Id(butterknife.compiler.Id.java).

thanks