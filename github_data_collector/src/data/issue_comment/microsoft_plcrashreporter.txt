I have PLCrashReporter integrated into my app and I have some crashes reported because of the watch dog timeout. But PLCrashReporter does not seem to recognize this as a crash and I dont see a report being generated for this.

Exception Type:  EXC_CRASH (SIGKILL)
Exception Codes: 0x0000000000000000, 0x0000000000000000
Exception Note:  EXC_CORPSE_NOTIFY
Termination Reason: Namespace SPRINGBOARD, Code 0x8badf00d
Termination Description: SPRINGBOARD, process-exit watchdog transgression: application<>:38090 exhausted real (wall clock) time allowance of 5.00 seconds | ProcessVisibility: Background | ProcessState: Running | WatchdogEvent: process-exit | WatchdogVisibility: Background | WatchdogCPUStatistics: ( | "Elapsed total CPU time (seconds): 2.570 (user 2.570, system 0.000), 9% CPU", | "Elapsed applicatn CPU time (seconds): 0.124, 0% CPU" | )
Triggered by Thread:  0
Repro: rename a source file to .mm. Make a device build, run on a device without a debugger.

Have it crash in a standalone (i. e. not a class method) function. Observe the mangled function name in the call stack in the crash report.

Report [Application Specific Information](https://developer.apple.com/library/archive/technotes/tn2151/_index.html#//apple_ref/doc/uid/DTS40008184-CH1-APPINFO) from [Apple's crash reporter info](https://opensource.apple.com/source/Libc/Libc-825.26/include/CrashReporterClient.h).
Hello all.

I have used this fork for some time as it was the only one to build correctly with Carthage. While looking through the official PLCrashReporter repository and working through the build issues, I had seen a post from @ElektrojungeMS citing this fork as an option which provides Carthage compatibility. Up until now I haven't found any problems with its use, however recently I have run into some issues which I've never experienced before. Currently while running a carthage build I get the following message:

`Dependency "plcrashreporter" has no shared framework schemes for any of the platforms: iOS`

It appears that the only valid scheme which Carthage is able to build is the Mac scheme. This is probably unintended, though I can't quite tell why it's happening. Looking at the schemes, there appear to be unique schemes for iOS, although they have suffixes (iOS-Device, iOS-Simulator). Considering those files haven't been touched in years, I don't think it's anything wrong with the repository. I wonder if any recent changes in Xcode (currently at 10.1) are causing this problem.

Is anyone else running into this issue? Any help is appreciated. Thanks very much.
Hi everyone!

I'm very pleased to let everyone know that [my team at Microsoft](https://appcenter.ms) has worked with @chrispcampbell and Plausible Labs and agreed to transfer this repo to the [`microsoft`](https://github.com/microsoft) organization on GitHub and we are taking over maintainership of the project going forward. More details will follow in blogposts that we're going to publish some time later today and that I'll of course add here, too. ðŸ˜Š

Having worked with PLCrashReporter ever since I started at [HockeyApp](https://www.hockeyapp.net/) in 2014, I'm really super happy that we found a way to keep this project healthy and am super looking forward to what's to come ðŸŽ‰

If you have any questions, please feel free to ask them here, @derpixeldan and I are happy to answer.
Problem: https://github.com/CocoaPods/CocoaPods/issues/6036
Solution: https://github.com/CocoaPods/CocoaPods/issues/6070

Make PLCrashMacros public in framework, or compile will failed after drag CrashReport.framework to target project at a15dc44
Added gitigonre at 63f48cb
And added two feature to generate key report and fingerprint of crash report, which are necessary to me but may not be globally useful : (
