Updates [org.scala-sbt:sbt](https://github.com/sbt/sbt) [from 1.3.6 to 1.3.7](https://github.com/sbt/sbt/compare/v1.3.6...v1.3.7).
[Release Notes/Changelog](https://github.com/sbt/sbt/releases/tag/v1.3.7)

I'll automatically update this PR to resolve conflicts as long as you don't change it yourself.

If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below.

Have a fantastic day writing Scala!

<details>
<summary>Ignore future updates</summary>

Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:
```
updates.ignore = [ { groupId = "org.scala-sbt", artifactId = "sbt" } ]
```
</details>

labels: library-update, semver-patch
Updates com.thoughtworks.sbt-best-practice:sbt-best-practice from 7.1.1 to 7.2.0.


I'll automatically update this PR to resolve conflicts as long as you don't change it yourself.

If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below.

Have a fantastic day writing Scala!

<details>
<summary>Ignore future updates</summary>

Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:
```
updates.ignore = [ { groupId = "com.thoughtworks.sbt-best-practice", artifactId = "sbt-best-practice" } ]
```
</details>

labels: sbt-plugin-update, semver-minor
Updates [com.thoughtworks.example:sbt-example](https://github.com/ThoughtWorksInc/sbt-example) [from 6.0.1 to 7.0.0](https://github.com/ThoughtWorksInc/sbt-example/compare/v6.0.1...v7.0.0).
[Release Notes/Changelog](https://github.com/ThoughtWorksInc/sbt-example/releases/tag/v7.0.0)

I'll automatically update this PR to resolve conflicts as long as you don't change it yourself.

If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below.

Have a fantastic day writing Scala!

<details>
<summary>Ignore future updates</summary>

Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:
```
updates.ignore = [ { groupId = "com.thoughtworks.example", artifactId = "sbt-example" } ]
```
</details>

labels: semver-major
Updates [org.scalatest:scalatest](https://github.com/scalatest/scalatest) [from 3.0.8 to 3.1.0](https://github.com/scalatest/scalatest/compare/release-3.0.8...release-3.1.0).
[Release Notes/Changelog](https://github.com/scalatest/scalatest/releases/tag/release-3.1.0)

I'll automatically update this PR to resolve conflicts as long as you don't change it yourself.

If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below.

Have a fantastic day writing Scala!

<details>
<summary>Ignore future updates</summary>

Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:
```
updates.ignore = [ { groupId = "org.scalatest", artifactId = "scalatest" } ]
```
</details>
<details>
<summary>Applied Migrations</summary>

* https://raw.githubusercontent.com/scalatest/autofix/e4de53fa40fac423bd64d165ff36bde38ce52388/3.0.x/rules/src/main/scala/org/scalatest/autofix/v3_0_x/RenameDeprecatedPackage.scala
* https://raw.githubusercontent.com/scalatest/autofix/e4de53fa40fac423bd64d165ff36bde38ce52388/3.1.x/rules/src/main/scala/org/scalatest/autofix/v3_1_x/RewriteDeprecatedNames.scala
</details>

labels: semver-minor, scalafix-migrations
Updates org.spire-math:kind-projector from 0.9.10 to 0.10.0.

I'll automatically update this PR to resolve conflicts as long as you don't change it yourself.

If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention @scala-steward in the comments below.

Have a fantastic day writing Scala!

<details>
<summary>Ignore future updates</summary>

Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:
```
updates.ignore = [ { groupId = "org.spire-math", artifactId = "kind-projector" } ]
```
</details>

labels: semver-minor
Adding CharMemory support in Memory module.

Q: In org.lwjgl.system.MemoryUtil, a "memCharBuffer / memCharBufferSafe" is supported for creating a new direct CharBuffer, however no corresponding "memAllocChar" method founded.

Hey folks:

First of all, I'm kind of dismayed you guys didn't talk to us about your findings. You guys are making some heavy claims. We are about to do a release this week.  We were busy essentially writing our own TF including import.

From an initial  look, you guys didn't do your benchmarks properly.

1. You are missing workspaces in your microbenchmarks which defeats the purpose of
benchmarking nd4j.
2. You don't show any of nd4j's native configuration or any of the memory configurations you guys tried.
I know it's in your guys' interest to have your own framework. That's up to you.

We'll do a blog post to correct a lot of these misconceptions you guys are perpetuating here, but in the mean time, we'll do our best to clarify questions you guys have. We don't mind having competition. It's great to keep us on our toes, but we want to make sure anything representing us is at least somewhat fair (even just handling some of the lower hanging fruit)
The Scaladoc should be similar to [numpy's API reference](https://docs.scipy.org/doc/numpy-1.13.0/reference/)
https://github.com/ThoughtWorksInc/Compute.scala/blob/7e6c25e06967c7c9f37001fafe9bda8eab42312f/Tensors/src/test/scala/com/thoughtworks/compute/TensorsSpec.scala#L330