Coming from https://github.com/slack-ruby/slack-ruby-client/issues/208. The celluloid-io code we have isn't detecting server-side disconnects occasionally. We could really use some professional help, we're likely not using celluloid-io correctly in https://github.com/slack-ruby/slack-ruby-client/blob/master/lib/slack/real_time/concurrency/celluloid.rb#L31
Hi.
I did execute Rspec to use this gem.
But... actor_spec failed because the following error happend.

```
%  bundle exec rspec spec/celluloid/io/actor_spec.rb
```

```
(skip)
 100) Celluloid::IO behaves like a Celluloid Actor raw message sends logs on unhandled messages
       Failure/Error: Thread.current[:celluloid_actor_system] || @actor_system || raise(Error, "Celluloid is not yet started; use Celluloid.boot")
       
       Celluloid::Error:
         Celluloid is not yet started; use Celluloid.boot
       Shared Example Group: "a Celluloid Actor" called from ./spec/celluloid/io/actor_spec.rb:4
```

All error output of above wording.
Before I running the test, I added following to the spec_helper.rb

```
+ require "rspec/retry"
require "celluloid/rspec"
```

What is this error?

Regards.
In my code, I changed code 

from
```ruby
require 'celluloid-io'
require 'celluloid/autostart'
```

to
```ruby
require 'celluloid/current'
require 'celluloid-io'
```

because of following [documentation](https://github.com/celluloid/celluloid/wiki/DEPRECATION-WARNING)

But warning message still poped up.

`Celluloid 0.17.3 is running in BACKPORTED mode. [ http://git.io/vJf3J ]`

How can i fix it?
This debian bug has full log of the test failures https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=836595
Running the following code:

``` ruby
require 'celluloid/current'
require 'celluloid/io'

class Wut
  include Celluloid::IO
  attr_accessor :sock
  def initialize(host, port)
    @sock = Celluloid::IO::TCPSocket.new(host, port)
  end
end

huh = Wut.new("127.0.0.1", 8082)

print huh.sock
```

produces an error:

```
I, [2016-08-19T15:06:02.905490 #25952]  INFO -- : Celluloid 0.17.3 is running in BACKPORTED mode. [ http://git.io/vJf3J ]
E, [2016-08-19T15:06:03.008879 #25952] ERROR -- : Actor crashed!
IO::EINPROGRESSWaitWritable: unknown error - Operation now in progress - connect(2)
        core/errno.rb:15:in `handle'
        /usr/lib/rubinius/gems/gems/rubysl-socket-2.1.2/lib/rubysl/socket/error.rb:27:in `write_nonblock'
        /usr/lib/rubinius/gems/gems/rubysl-socket-2.1.2/lib/rubysl/socket/error.rb:41:in `wrap_write_nonblock'
        /usr/lib/rubinius/gems/gems/rubysl-socket-2.1.2/lib/rubysl/socket/error.rb:27:in `write_nonblock'
        /usr/lib/rubinius/gems/gems/rubysl-socket-2.1.2/lib/socket/socket.rb:307:in `connect_nonblock'
        /usr/lib/rubinius/gems/gems/celluloid-io-0.17.3/lib/celluloid/io/tcp_socket.rb:120:in `create_socket'
        /usr/lib/rubinius/gems/gems/celluloid-io-0.17.3/lib/celluloid/io/tcp_socket.rb:53:in `initialize'
        core/alpha.rb:93:in `new'
        /usr/lib/rubinius/gems/gems/celluloid-io-0.17.3/lib/celluloid/io/socket.rb:39:in `new'
        ./what.rb:8:in `initialize'
        /usr/lib/rubinius/gems/gems/celluloid-0.17.3/lib/celluloid/calls.rb:28:in `dispatch'
        /usr/lib/rubinius/gems/gems/celluloid-0.17.3/lib/celluloid/call/sync.rb:16:in `dispatch'
        /usr/lib/rubinius/gems/gems/celluloid-0.17.3/lib/celluloid/cell.rb:50:in `dispatch'
        /usr/lib/rubinius/gems/gems/celluloid-0.17.3/lib/celluloid/cell.rb:76:in `task'
        /usr/lib/rubinius/gems/gems/celluloid-0.17.3/lib/celluloid/actor.rb:339:in `task'
        /usr/lib/rubinius/gems/gems/celluloid-0.17.3/lib/celluloid/task.rb:44:in `initialize'
        /usr/lib/rubinius/gems/gems/celluloid-0.17.3/lib/celluloid/task/fibered.rb:14:in `create'
        core/proc.rb:20:in `call'
E, [2016-08-19T15:06:03.009950 #25952] ERROR -- : CLEANUP CRASHED!
IO::EINPROGRESSWaitWritable: unknown error - Operation now in progress - connect(2)
        core/errno.rb:15:in `handle'
        /usr/lib/rubinius/gems/gems/rubysl-socket-2.1.2/lib/rubysl/socket/error.rb:27:in `write_nonblock'
        /usr/lib/rubinius/gems/gems/rubysl-socket-2.1.2/lib/rubysl/socket/error.rb:41:in `wrap_write_nonblock'
        /usr/lib/rubinius/gems/gems/rubysl-socket-2.1.2/lib/rubysl/socket/error.rb:27:in `write_nonblock'
        /usr/lib/rubinius/gems/gems/rubysl-socket-2.1.2/lib/socket/socket.rb:307:in `connect_nonblock'
        /usr/lib/rubinius/gems/gems/celluloid-io-0.17.3/lib/celluloid/io/tcp_socket.rb:120:in `create_socket'
        /usr/lib/rubinius/gems/gems/celluloid-io-0.17.3/lib/celluloid/io/tcp_socket.rb:53:in `initialize'
        core/alpha.rb:93:in `new'
        /usr/lib/rubinius/gems/gems/celluloid-io-0.17.3/lib/celluloid/io/socket.rb:39:in `new'
        ./what.rb:8:in `initialize'
        /usr/lib/rubinius/gems/gems/celluloid-0.17.3/lib/celluloid/calls.rb:28:in `dispatch'
        /usr/lib/rubinius/gems/gems/celluloid-0.17.3/lib/celluloid/call/sync.rb:16:in `dispatch'
        /usr/lib/rubinius/gems/gems/celluloid-0.17.3/lib/celluloid/cell.rb:50:in `dispatch'
        /usr/lib/rubinius/gems/gems/celluloid-0.17.3/lib/celluloid/cell.rb:76:in `task'
        /usr/lib/rubinius/gems/gems/celluloid-0.17.3/lib/celluloid/actor.rb:339:in `task'
        /usr/lib/rubinius/gems/gems/celluloid-0.17.3/lib/celluloid/task.rb:44:in `initialize'
        /usr/lib/rubinius/gems/gems/celluloid-0.17.3/lib/celluloid/task/fibered.rb:14:in `create'
        core/proc.rb:20:in `call'
        (celluloid):0:in `remote procedure call'
An exception occurred running ./what.rb

unknown error - Operation now in progress - connect(2) (IO::EINPROGRESSWaitWritable)

Backtrace:

                                                 Errno.handle at core/errno.rb:15
                  { } in RubySL::Socket::Error.write_nonblock at /usr/lib/rubinius/gems/gems/rubysl-socket-2.1.2/lib/rubysl/socket/error.rb:27
                    RubySL::Socket::Error.wrap_write_nonblock at /usr/lib/rubinius/gems/gems/rubysl-socket-2.1.2/lib/rubysl/socket/error.rb:41
                         RubySL::Socket::Error.write_nonblock at /usr/lib/rubinius/gems/gems/rubysl-socket-2.1.2/lib/rubysl/socket/error.rb:27
                                      Socket#connect_nonblock at /usr/lib/rubinius/gems/gems/rubysl-socket-2.1.2/lib/socket/socket.rb:307
                       Celluloid::IO::TCPSocket#create_socket at /usr/lib/rubinius/gems/gems/celluloid-io-0.17.3/lib/celluloid/io/tcp_socket.rb:120
                          Celluloid::IO::TCPSocket#initialize at /usr/lib/rubinius/gems/gems/celluloid-io-0.17.3/lib/celluloid/io/tcp_socket.rb:53
                                                    Class#new at core/alpha.rb:93
                                    Celluloid::IO::Socket.new at /usr/lib/rubinius/gems/gems/celluloid-io-0.17.3/lib/celluloid/io/socket.rb:39
                                               Wut#initialize at what.rb:8
              Celluloid::Call(Celluloid::Call::Sync)#dispatch at /usr/lib/rubinius/gems/gems/celluloid-0.17.3/lib/celluloid/calls.rb:28
                               Celluloid::Call::Sync#dispatch at /usr/lib/rubinius/gems/gems/celluloid-0.17.3/lib/celluloid/call/sync.rb:16
                              { } in Celluloid::Cell.dispatch at /usr/lib/rubinius/gems/gems/celluloid-0.17.3/lib/celluloid/cell.rb:50
                                  { } in Celluloid::Cell#task at /usr/lib/rubinius/gems/gems/celluloid-0.17.3/lib/celluloid/cell.rb:76
                                 { } in Celluloid::Actor#task at /usr/lib/rubinius/gems/gems/celluloid-0.17.3/lib/celluloid/actor.rb:339
  { } in Celluloid::Task(Celluloid::Task::Fibered)#initialize at /usr/lib/rubinius/gems/gems/celluloid-0.17.3/lib/celluloid/task.rb:44
                       { } in Celluloid::Task::Fibered#create at /usr/lib/rubinius/gems/gems/celluloid-0.17.3/lib/celluloid/task/fibered.rb:14
                                                    Proc#call at core/proc.rb:20

Caused by: Operation now in progress - connect(2) (Errno::EINPROGRESS)

                                                 Errno.handle at core/errno.rb:15
                  { } in RubySL::Socket::Error.write_nonblock at /usr/lib/rubinius/gems/gems/rubysl-socket-2.1.2/lib/rubysl/socket/error.rb:27
                    RubySL::Socket::Error.wrap_write_nonblock at /usr/lib/rubinius/gems/gems/rubysl-socket-2.1.2/lib/rubysl/socket/error.rb:41
                         RubySL::Socket::Error.write_nonblock at /usr/lib/rubinius/gems/gems/rubysl-socket-2.1.2/lib/rubysl/socket/error.rb:27
                                      Socket#connect_nonblock at /usr/lib/rubinius/gems/gems/rubysl-socket-2.1.2/lib/socket/socket.rb:307
                       Celluloid::IO::TCPSocket#create_socket at /usr/lib/rubinius/gems/gems/celluloid-io-0.17.3/lib/celluloid/io/tcp_socket.rb:120
                          Celluloid::IO::TCPSocket#initialize at /usr/lib/rubinius/gems/gems/celluloid-io-0.17.3/lib/celluloid/io/tcp_socket.rb:53
                                                    Class#new at core/alpha.rb:93
                                    Celluloid::IO::Socket.new at /usr/lib/rubinius/gems/gems/celluloid-io-0.17.3/lib/celluloid/io/socket.rb:39
                                               Wut#initialize at what.rb:8
              Celluloid::Call(Celluloid::Call::Sync)#dispatch at /usr/lib/rubinius/gems/gems/celluloid-0.17.3/lib/celluloid/calls.rb:28
                               Celluloid::Call::Sync#dispatch at /usr/lib/rubinius/gems/gems/celluloid-0.17.3/lib/celluloid/call/sync.rb:16
                              { } in Celluloid::Cell.dispatch at /usr/lib/rubinius/gems/gems/celluloid-0.17.3/lib/celluloid/cell.rb:50
                                  { } in Celluloid::Cell#task at /usr/lib/rubinius/gems/gems/celluloid-0.17.3/lib/celluloid/cell.rb:76
                                 { } in Celluloid::Actor#task at /usr/lib/rubinius/gems/gems/celluloid-0.17.3/lib/celluloid/actor.rb:339
  { } in Celluloid::Task(Celluloid::Task::Fibered)#initialize at /usr/lib/rubinius/gems/gems/celluloid-0.17.3/lib/celluloid/task.rb:44
                       { } in Celluloid::Task::Fibered#create at /usr/lib/rubinius/gems/gems/celluloid-0.17.3/lib/celluloid/task/fibered.rb:14
                                                    Proc#call at core/proc.rb:20
```

However, removing the `include Celluloid::IO` line results in correct functioning (but obviously disables Celluloid):

``` ruby
require 'celluloid/current'
require 'celluloid/io'

class Wut
  #include Celluloid::IO
  attr_accessor :sock
  def initialize(host, port)
    @sock = Celluloid::IO::TCPSocket.new(host, port)
  end
end

huh = Wut.new("127.0.0.1", 8082)

print huh.sock
```

``` shell
#<Celluloid::IO::TCPSocket:0x830c>
```

rubinius 3.50 (2.3.1 8a6c33ad 2016-07-25 3.8.0) [x86_64-linux-gnu]
celluloid-io-0.17.3

Looking at [here](https://github.com/celluloid/celluloid-io/blob/daf5885fba3006fd9a6ff64d875a97a811e75f5b/lib/celluloid/io/reactor.rb), there is a feature missing to wait on more than one socket, something like `IO.select([ios])`, but tailored to celluloid-io.

I was picturing maybe exposing the #select method from the reactor selector instance (there should be only one per actor, therefore something like `Actor.current.select()`, which doesn't necessarily have to follow the same ruby IO.select API. 
## use case

net-ssh v4 will come with an internal event loop: https://github.com/net-ssh/net-ssh/blob/master/lib/net/ssh/connection/event_loop.rb .

This is supposed to handle the case in which one has to listen to events on the session socket and eventually the forwarding socket, the gateway socket, etc. It would be cool if one could expose the event loop and monitor more than one socket (or maybe what one needs is multi-socket Monitors? nio4r?). 

I'm a bit lost in how this API could look and whether the internals allow this, I just wanted to see if there's some limitation I'm missing. 

I think this is a bug (or a non-feature). Trying to fix https://github.com/dblock/slack-ruby-client/issues/90. In the following code if the connection is forcibly closed server-side, I see the EOF, but no `:close` or `:closed` event.

``` ruby
require 'celluloid/current'
require 'celluloid/io'
require 'http'
require 'websocket/driver'

class Connection
  include Celluloid::IO
  extend Forwardable

  def initialize(url)
    @url = url
    uri = URI.parse(url)
    port = uri.port || (uri.scheme == "ws" ? 80 : 443)
    @socket = Celluloid::IO::TCPSocket.new(uri.host, port)
    @socket = SSLSocket.new(@socket, OpenSSL::SSL::SSLContext.new(:TLSv1_2_client))
    @socket.connect
    @client = ::WebSocket::Driver.client(self)
    async.run
  end
  attr_reader :url

  def run
    @client.on('open') do |event|
      puts "OPEN: #{event}"
    end
    @client.on('message') do |event|
      puts "MESSAGE: #{event}"
    end
    @client.on('close') do |event|
      puts "CLOSE: #{event}"
    end

    @client.start

    loop do
      begin
        @client.parse(@socket.readpartial(1024))
      rescue EOFError
        puts "EOF"
        break
      end
    end
  end

  def_delegators :@client, :text, :binary, :ping, :close, :protocol

  def write(buffer)
    @socket.write buffer
  end
end

fail 'missing token' unless ENV['SLACK_API_TOKEN']

url = JSON.parse(HTTP.get("https://slack.com/api/rtm.start?token=#{ENV['SLACK_API_TOKEN']}"))['url']
puts "connecting to #{URI.parse(url).host} ..."

conn = Connection.new(url)

loop do
  Thread.pass
end

puts "done."
```

```
connecting to mpmulti-wu48.slack-msgs.com ...
OPEN: #<struct WebSocket::Driver::OpenEvent>
MESSAGE: #<struct WebSocket::Driver::MessageEvent data="{\"type\":\"hello\"}">
MESSAGE: #<struct WebSocket::Driver::MessageEvent data="{}">
EOF
```

I am also happy to contribute a more thorough CONTRIBUTING doc to replace this paragraph in the README ala https://github.com/ruby-grape/grape/blob/master/CONTRIBUTING.md, LMK if you would like that?

I must be missing something obvious, this is from a clean checkout of celluloid-io.

```
[!] There was an error parsing `Gemfile`: cannot load such file -- /Users/dblock/source/celluloid/celluloid-io/celluloid/culture/sync. Bundler cannot continue.

 #  from /Users/dblock/source/celluloid/celluloid-io/celluloid/Gemfile:2
 #  -------------------------------------------
 #  puts File.expand_path("../culture/sync", __FILE__)
 >  require File.expand_path("../culture/sync", __FILE__)
 #  
 #  -------------------------------------------
```

In short, what I tried to fix is the following behaviour when trying to resolve a hostname when offline:

```
irb(main):001:0> require 'celluloid/current'
=> true
irb(main):002:0> require 'celluloid/io'
=> true
irb(main):003:0> Celluloid::IO::TCPSocket.new("www.google.com", 80)
NoMethodError: undefined method `"\u0000\u0002\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0003www\u0006google\u0003com\u0000\u0000\u0001\u0000\u0001"' for nil:NilClass
    from /Users/eloy/.gem/ruby/2.3.0/gems/celluloid-io-0.17.3/lib/celluloid/io/dns_resolver.rb:44:in `resolve'
    from /Users/eloy/.gem/ruby/2.3.0/gems/celluloid-io-0.17.3/lib/celluloid/io/tcp_socket.rb:101:in `create_socket'
    from /Users/eloy/.gem/ruby/2.3.0/gems/celluloid-io-0.17.3/lib/celluloid/io/tcp_socket.rb:53:in `initialize'
    from /Users/eloy/.gem/ruby/2.3.0/gems/celluloid-io-0.17.3/lib/celluloid/io/socket.rb:39:in `new'
    from /Users/eloy/.gem/ruby/2.3.0/gems/celluloid-io-0.17.3/lib/celluloid/io/socket.rb:39:in `new'
    from (irb):3
    from /Users/eloy/.rubies/ruby-2.3.0/bin/irb:11:in `<main>'
```

What happens is that `@socket` remains `nil` [here](https://github.com/celluloid/celluloid-io/blob/85cee9da22ef5e94ba0abfd46454a2d56572aff4/lib/celluloid/io/dns_resolver.rb#L32) which means that you end up sending the hostname as a `NilClass#send` message [here](https://github.com/celluloid/celluloid-io/blob/85cee9da22ef5e94ba0abfd46454a2d56572aff4/lib/celluloid/io/dns_resolver.rb#L44).

---

With stdlib it raises the following exception, although that one is actually not raised by the name resolver, but by Socket:

```
irb(main):001:0> require 'socket'
=> false
irb(main):002:0> TCPSocket.new("www.google.com", 80)
SocketError: getaddrinfo: nodename nor servname provided, or not known
    from (irb):2:in `initialize'
    from (irb):2:in `new'
    from (irb):2
    from /Users/eloy/.rubies/ruby-2.3.0/bin/irb:11:in `<main>'
```

The one raised by Resolv is:

```
irb(main):001:0> Resolv.getaddress("www.google.com")
Resolv::ResolvError: no address for www.google.com
    from /Users/eloy/.rubies/ruby-2.3.0/lib/ruby/2.3.0/resolv.rb:95:in `getaddress'
    from /Users/eloy/.rubies/ruby-2.3.0/lib/ruby/2.3.0/resolv.rb:45:in `getaddress'
    from (irb):1
    from /Users/eloy/.rubies/ruby-2.3.0/bin/irb:11:in `<main>'
```

I’m not sure which one I should use, any thoughts?
