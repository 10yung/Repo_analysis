https://github.com/danielgerlag/workflow-core/blob/master/src/WorkflowCore/Services/WorkflowRegistry.cs#L13

It looks we can only add new ones to the registry, but cannot delete any existing ones. In the long-running scenarios where tons of workflow definitions are getting constantly added (mostly the definition will only use once), there is no way to purge the registry. That caused a memory leak.

So is it possible to add methods to delete existing definitions?
I'm implementing a feature that stop/start the workflow host based on some condition (basically a period of time during which the workflow host should not treat any workflows).

For this, I'd like to be able to know the current state of the workflow host. I see that there is already a private variable (https://github.com/danielgerlag/workflow-core/blob/master/src/WorkflowCore/Services/WorkflowHost.cs#L17) used to do this but it's not accessible publicly.

Would it be possible to make this variable public in order to be able to know the state of the host?
for now, parallel mode, will run step one by one via 'do' list items.
is possible run steps in same time?

thanks.
â€¦Framework.Core 3.1.0 and bumped the WorkflowCore.Persistence.MySQL version to 1.2.2
If I use a class that has a field with the name Id, I get a deserialization error, to repro just create a workflow data with a nested class that has an Id:

public class WorkflowData
    {
        public WorkflowData() 
        {
            Test = new Test();
        }
        public Test Test { get; set; }
    }

public class Test
    {
        public Test()
        {
            Id = Guid.NewGuid().ToString();
        }
        public string Id { get; set; }
        public string Value1 { get; set; }
    }

Note: to repro you must initialize the nested class or create a step that sets some data into the nested class, what happens is that when the workflow tries to deserialize the workflow data for subsequent steps, a deserialization error will happen.

This is because the BSON deserializer seems to have hardcoded Id and tried to treat it as BsonId, how I work around the issue is by commenting the line 41 in MongoPersistenceProvider.cs, although not sure if this workaround will have side effects.
Hi ,
   My scope is I want to initiate the workflow and provide list of user options to the client. when publish the user action i want to pass a user data along with that. (similar to event publish). So I'm wondering if i can create a workflow with the combination of useroption and events. Please advice.
Hi Daniel

We wonder how to properly test UserTask step? 

It seems like it's impossible to change AssignedPrincipal, we've got over 100 users that can approve/reject a workflow. Some workflows are not approve-able by certain users. How do we incorporate permission check within the workflow? 

Thanks
Choonyin
Hi,

I would like to congratulate you on the excellent framework created. He is amazing, congratulations! Thank you for sharing with us.

I am trying to load a step from a JSON file, but it is not working.

Maybe you are doing something wrong or this feature has not been implemented yet, see:

![image](https://user-images.githubusercontent.com/3455138/70482354-02bbdd80-1ac4-11ea-8b7f-f107955712f5.png)

Apparently the children of this step type are not loaded because the following error is displayed on the console:

![image](https://user-images.githubusercontent.com/3455138/70482633-c0df6700-1ac4-11ea-9352-de7fab1ac03c.png)

See:

![image](https://user-images.githubusercontent.com/3455138/70482671-e1a7bc80-1ac4-11ea-9cee-e2862989ca72.png)

Am I doing something wrong? Could you help me?

Sorry for the english, I'm using a translator.

Thank you!

This is to be able to write extension methods for IStepBuilder<DynamicData, IStepBody>
Where I don't care about exact type of previous step
Hello,
Could you please point me on how to create an approval workflow in asp.net core with a submission form for vacation request. How we can use a sequential aroval of the employee manager and director.

Thanks in advance for your support.