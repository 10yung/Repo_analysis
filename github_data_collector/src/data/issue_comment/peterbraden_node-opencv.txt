Similar with face detection, some people will have a use case for anime/cartoon face detection. I have added an xml file which greatly helps with it. 

Below is an example of how I use this (be careful with non-static image if you use the below).

```js
const axios = require('axios');
const cv = require('opencv');
const sharp = require('sharp');
const smartcrop = require('smartcrop-sharp');

const faceDetect = (input, userOptions) => new Promise((resolve, reject) => {
  cv.readImage(input, (err, image) => {
    if (err) return reject(err);
    image.detectObject((userOptions.animeFace) ? cv.ANIME_FACE_CASCADE : cv.FACE_CASCADE, {}, (error, faces) => {
      if (error) return reject(error);
      const boost = faces.map((face) => ({
        x: face.x,
        y: face.y,
        width: face.width,
        height: face.height,
        weight: 1.0,
      }));
      resolve(boost);
    });
  });
});

const execute = async (url, width, height, userOptions }) => {
  const { data: buffer } = await axios.get(url, { responseType: 'arraybuffer' });
  const options = await faceDetect(buffer, userOptions).catch(() => null) || { width, height };
  const { topCrop: crop } = await smartcrop.crop(buffer, options);
  return sharp(buffer)
    .extract({ width: crop.width, height: crop.height, left: crop.x, top: crop.y })
    .resize(width, height)
    .toBuffer();
};

module.exports = execute;
```


hi:
    I copy the project code and report an error when running the example
   eg:
internal/modules/cjs/loader.js:730
  return process.dlopen(module, path.toNamespacedPath(filename));
                 ^

Error: The specified module could not be found.
\\?\D:\node-opencv-master\build\Release\opencv.node
    at Object.Module._extensions..node (internal/modules/cjs/loader.js:730:18)
    at Module.load (internal/modules/cjs/loader.js:600:32)
    at tryModuleLoad (internal/modules/cjs/loader.js:539:12)
    at Function.Module._load (internal/modules/cjs/loader.js:531:3)
    at Module.require (internal/modules/cjs/loader.js:637:17)
    at require (internal/modules/cjs/helpers.js:22:18)
    at Object.<anonymous> (D:\node-opencv-master\lib\bindings.js:1:80)
    at Module._compile (internal/modules/cjs/loader.js:701:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:712:10)
    at Module.load (internal/modules/cjs/loader.js:600:32)
```
Error: dlopen(/devevelopment/setbot/node_modules/opencv/build/Release/opencv.node, 1): Library not loaded: /usr/local/opt/ilmbase/lib/libImath-2_2.12.dylib
  Referenced from: /usr/local/opt/opencv/lib/libopencv_highgui.2.4.dylib
  Reason: image not found
    at Object.Module._extensions..node (module.js:664:18)
    at Module.load (module.js:554:32)
    at tryModuleLoad (module.js:497:12)
    at Function.Module._load (module.js:489:3)
    at Module.require (module.js:579:17)
    at require (internal/module.js:11:18)
    at Object.<anonymous> (/devevelopment/setbot/node_modules/opencv/lib/bindings.js:1:18)
    at Module._compile (module.js:635:30)
    at Module._compile (/devevelopment/setbot/node_modules/pirates/lib/index.js:99:24)
    at Module._extensions..js (module.js:646:10)```

**To Reproduce**
Followed the steps in the README for MacOS.

**Expected behavior**
Working import

**OS / Libraries**
- MacOS Mojave 10.14.6
- 2.4.13.7_5

Hello. I want to run Feature Matching with video stream, it is possible with this lib?
This lib work fine with videostream in other examples ..  But what about Natural feature tracking(NFT) in video stream ??

**I want to autocorrect image rotation**
My camera scanner sometimes captures image but while viewing they are angled incorrectly(rotation), is it possible to auto fix the rotation.
I'm trying to build opencv for use in my js project.

For the correct operation of the algorithm, I lack these functions:

 - Point3f
 - solvePnP
 - Rodrigues
 - findHomography

The functions I need are in these packages:

 - Calib3d
 - Features2d

But on the Internet I did not find the pre-compiled library with the functionality I needed. For this reason, I decided to build everything myself.

When assembling I am guided by https://docs.opencv.org/3.4/d5/d10/tutorial_js_root.html.

Compilation of the library was *successful(!)*, but failed to build it.

1. I tried to compile it in the `LLVM` code and got the error:

```
wasm-ld: error: Relocations not in offset order
```

2. Next, I tried to compile it into `*.so` files, but to no avail: This assembly option is prohibited:

```
emscripten / cmake / Modules / Platform / Emscripten.cmake: set_property (GLOBAL PROPERTY TARGET_SUPPORTS_SHARED_LIBS FALSE))
```

3. The build method using static libraries in the `*. ar` archives format also ended with an error:

```
error: undefined symbol: fp $ _ZN2TH11THFile_freeEPNS
```

I know for sure that these packages can be compiled in some way. Can you give me a guide or pin js file with pre-compiled modules? 
I am trying to do blur detection using the Laplacian function in OpenCV but I don't see it as part of node-opencv. Is this something you can add for me, or what should I do to add it and send a pull request?
**Describe the bug**
```
const fs = require('fs');
const path = require('path');

const cv = require("opencv");

const sourcePath = "./test.tiff";
const targetPath = "./test.jpg";

console.log("before image resize");

let content = fs.readFileSync(sourcePath);
console.log(`content type: ${content instanceof Buffer}`);

cv.readImage(content, function(err, mat) {
	mat.resize(640, 360);
	// mat.save(targetPath);
	let buf = mat.toBuffer({ext: ".jpg", jpegQuality: 100});
	var targetFile = fs.openSync(targetPath, "w");
        fs.writeFileSync(targetFile, buf, {encoding: 'binary', flag: 'w'});
        fs.closeSync(targetFile);
	console.log("convert image");
});

console.log("after image resize");

```

```
breeze@breeze-desktop:~/Work/uber-test/xviz/examples/data-server$ nodejs ./opencv-tiff2jpeg.js 
before image resize
content type: true
OpenCV Error: Unspecified error (failed to write image data to temporary file) in imdecode_, file /home/breeze/Work/data/vehicle_data/impl-ros-kinetic/script/tmp/opencv-3.3.0/modules/imgcodecs/src/loadsave.cpp, line 657
/home/breeze/Work/uber-test/xviz/examples/data-server/opencv-tiff2jpeg.js:15
	mat.resize(640, 360);
	    ^

TypeError: Cannot read property 'resize' of null
    at /home/breeze/Work/uber-test/xviz/examples/data-server/opencv-tiff2jpeg.js:15:6
    at Object.<anonymous> (/home/breeze/Work/uber-test/xviz/examples/data-server/opencv-tiff2jpeg.js:14:4)
    at Module._compile (module.js:653:30)
    at Object.Module._extensions..js (module.js:664:10)
    at Module.load (module.js:566:32)
    at tryModuleLoad (module.js:506:12)
    at Function.Module._load (module.js:498:3)
    at Function.Module.runMain (module.js:694:10)
    at startup (bootstrap_node.js:204:16)
    at bootstrap_node.js:625:3
```
**OS / Libraries**
- Ubuntu 16.04


Hello,
last update tags are missing in your repo (6.0.1, 6.0.2). It is not easy for packager to follow your changes. Could you add them ?

Cheers,
Xavier