Preloading screens isn't a trivial thing right now. It would be useful (particularly for multi-screen wizards) to allow the screens to be loaded in advance to make the application feel more responsive from the start.

Particularly `ContentScreen` should be verified as `ScreenManager.load` causes the content to appear in the currently active screen.
Currently, there is no way to force reloading of just one screen. This would be beneficial for more advanced screens that may need to be refreshed.
Support reconnecting on disconnect for WebSocket clients.  This might also be a good time to add "auto-connect" support to avoid the all-too-often forgetting to connect.
- Abstraction for Scala.js and JVM WebSocket communication
- File / byte streaming
Sources:
https://github.com/TechEmpower/FrameworkBenchmarks

Latest run results:
https://www.techempower.com/benchmarks/#section=test&runid=a0d6e357-e8e3-4a5b-9ef0-6175ed824b20&hw=ph&test=json
Create a wrapper around `<select>`
Add a wrapper around `<textarea>`
Add new `Font` implementation to support browser fonts
When messages are sent to a communication instance if the binding isn't exactly right (ex. the package is different) the message is received, but not routed.  This should be changed to throw an error as well as properly support different packages for implementation traits (rely on the shared trait's package).
When a connection is proxied, it adds a custom header specifying the origin IP, but it's a pain to determine the origin IP of a proxied connection now.  Adding a `originalIP` field to `HttpRequest` would help make that much easier to work with.