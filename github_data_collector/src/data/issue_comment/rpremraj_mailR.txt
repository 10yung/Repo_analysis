I really like this package and I have succesfully used it to send emails via an Exchange server using code that looks like this:
```
email <- send.mail(from = me@exchange-server.com,
                   to = you@some-server.com, 
                   subject = 'Important message',
                   body = /path/to/Rmd_output.html, 
                   html=T,
                   inline=T,
                   authenticate = TRUE,
                   smtp = list(host.name = smtp.exchange-server.local, port = 587,
                               user.name = me@exchange-server.com, passwd = absolutely.sec.pwd, tls = T),
                   debug = T,
                   send = F)
email$send()
```
However, if I move the script sending the email to a crontab and try to let it run automatically, I do get the error 
```
Nov 20 20:56:09 myserver sSMTP[27150]: Creating SSL connection to host
Nov 20 20:56:09 myserver sSMTP[27150]: SSL connection using ECDHE_RSA_AES_128_GCM_SHA256
Nov 20 20:56:10 myserver cron[524]: sendmail: 550 5.7.60 SMTP; Client does not have permissions to send as this sender
Nov 20 20:56:10 myserver sSMTP[27150]: 550 5.7.60 SMTP; Client does not have permissions to send as this sender
Nov 20 20:56:10 myserver CRON[27135]: (root) MAIL (mailed 1053 bytes of output but got status 0x0001 from MTA#012)
```
Running the script from the commandline (using either `Rscript` or shebang line from `littler`) works fine. And so does sending from with `R`.

Here is my sessionInfo():
```
> sessionInfo()
R version 3.4.4 (2018-03-15)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Ubuntu 16.04.6 LTS

Matrix products: default
BLAS: /usr/lib/libblas/libblas.so.3.6.0
LAPACK: /usr/lib/lapack/liblapack.so.3.6.0

locale:
 [1] LC_CTYPE=en_US.UTF-8          LC_NUMERIC=C                 
 [3] LC_TIME=en_US.UTF-8           LC_COLLATE=en_US.UTF-8       
 [5] LC_MONETARY=en_US.UTF-8       LC_MESSAGES=en_US.UTF-8      
 [7] LC_PAPER=en_US.UTF-8          LC_NAME=en_US.UTF-8          
 [9] LC_ADDRESS=en_US.UTF-8        LC_TELEPHONE=en_US.UTF-8     
[11] LC_MEASUREMENT=en_US.UTF-8    LC_IDENTIFICATION=en_US.UTF-8

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
[1] xlsx_0.6.1      mailR_0.6       lubridate_1.7.4 rvest_0.3.4    
[5] xml2_1.2.2      httr_1.4.1     

loaded via a namespace (and not attached):
 [1] Rcpp_1.0.3        xlsxjars_0.6.1    R.methodsS3_1.7.1 R6_2.4.0         
 [5] magrittr_1.5      stringi_1.4.3     R.oo_1.23.0       R.utils_2.9.0    
 [9] tools_3.4.4       stringr_1.4.0     compiler_3.4.4    rJava_0.9-11
```
Any idea on how to solve this is highly appreciated!!!
Thank you!
I'm trying to send a table in a body email using R. But it doesn't work. 
The function is "send.mail" and I used body = print(xtable(test_1),print.results=FALSE)

This is how I received the email: 

% latex table generated in R 3.5.1 by xtable 1.8-4 package % Fri Oct 25 18:00:23 2019 \begin{table}[ht] \centering \begin{tabular}{rrrrrrr}
  \hline
 & Nível Atual & Nível Anterior & 08/2019 & 07/2019 & 06/2019 & 05/2019 \\
  \hline
Richmond FED & 8.00 & -9.00 & 1.00 & -12.00 & 2.00 & 7.00 \\
  Shipments & 4.00 & -14.00 & 5.00 & -13.00 & 5.00 & 1.00 \\
  Capacity Utilization & 49.70 & 46.00 & 45.10 & 47.90 & 53.20 & 50.00 \\
  Number of employees & 13.00 & 3.00 & -6.00 & -3.00 & 4.00 & 16.00 \\
  Wages & 15.00 & 24.00 & 22.00 & 20.00 & 25.00 & 36.00 \\
  Average workweek & 10.00 & -10.00 & 4.00 & -9.00 & 1.00 & 5.00 \\ 
   \hline
\end{tabular}
\end{table}

Can someone help me? Maybe with another function? 
Thanks!
It seems that in the `send.mail` function, `to` ends up being a default parameter. This is because `.valid.email` applies on `to` whether or not `to` exists. It's useful for it to not be the case when mails are sent to bcc recipients only.

Perhaps the following amendment should address this issue?

```
== if("to" %in% names(dots))
== {
	if(.valid.email(to))
		sapply(to, email$addTo)
== }
```
First time making a pull request...

As the title suggests, I am just adding the jar files referenced in one solution in issue #77 

Do not assume that src is the first attribute in <img for ImageHtmlEmail.

Currently, if the first attribute is, e.g., alt="xxx", it is not possible to send the email as the code will try to resolve xxx as a file (and fail).
Please Help
I have used the mailR package for many years, but all of the sudden it terminates the session. I've tried to run the code outside Rstudio and reinstall R but still have the problem. Even worse, I can load the package with no errors on other computers using the very same setup (global options in Rstudio) as on my computer.

Anyone keen to help me figure out why I cannot load mailR?

Thank you
Hello, 
I'm trying to use mailr to send automatic emails from within the company that I'm interning. I can make this code work using my school email; however, it fails when I use my company email:

send.mail(from = "me@companydomain.com",
          to = c("coworker@companydomain.com"),
          subject = "Test Email",
          body = "Hi Coworker! Did this email send?",
          authenticate = TRUE,
          smtp = list(host.name = "smtp.office365.com",
                      port = 587,
                      user.name = "me@companydomain.com",
                      passwd = "Password1",
                      sls = TRUE,
                      tls = TRUE),
          debug = TRUE)

Because I was getting errors, I turned on debug. It turns out, my code was able to get on the server, etc, but something is failing with the authentication (and I've checked multiple times--I have the right user name and password). Debug throws these errors:

DEBUG SMTP: Attempt to authenticate using mechanisms: LOGIN PLAIN DIGEST-MD5 NTLM 
DEBUG SMTP: AUTH LOGIN command trace suppressed
DEBUG SMTP: AUTH LOGIN failed

How can I get around this while maintaining security? Again, I know that my code works because I can send emails from my school Outlook email address--its only with my company.

Thanks!
I'm running R version 3.6 on a mac book pro with Rstudio. 
When I try to do (library(mailR) it crashes R. The error message is 
Registered S3 method overwritten by 'R.oo':
  method        from       
  throw.default R.methodsS3

I have installed the development version of R.oo and it seems to load successfully. 

Can you have mailR use the development version of R.oo?
sender <- "michael.t.clare@company.com"
recipients <- c("michael.t.clare@company.com")
send.mail(from = sender,
          to = recipients,
          subject = "mailR example2",
          body = "mailR example2",
          smtp = list(host.name = "smtp.office365.com", port = 587, 
                      user.name = "michael.t.clare@company.com",            
                      passwd = "fakepassword", tls=TRUE),
          authenticate = TRUE)