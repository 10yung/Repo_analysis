This is fairly close to working, but it has visual artifacts (and the font looks a bit blurred to me, but maybe not for everyone?):

![image](https://user-images.githubusercontent.com/46855713/69908666-edec9500-13b3-11ea-9b2c-caf043685344.png)

Interestingly, they disappear after opening the cmdline (so after typing `:`):

![image](https://user-images.githubusercontent.com/46855713/69908668-06f54600-13b4-11ea-9367-84c9c13d9f25.png)

The line that's causing this "reset" of the artifacts is here (see https://github.com/vhakulinen/gnvim/issues/85#issuecomment-560044135): https://github.com/vhakulinen/gnvim/blob/65846f45020b338fedd932b058c9e8036dadd976/src/ui/cmdline.rs#L575

But I have no idea why calling `show_all` on a `gtk::Fixed` removes the artifacts. Any ideas?

The artifacts appear to be coming from a lack of subpixel positioning in GNvim, but I could be wrong. Note that when I `ceil` (or `floor`) the `width` value of the `CellMetrics` the artifacts disappear, but the cursor is no longer positioned correctly. (All this still doesn't explain the "reset" when opening the cmdline though.)

cc: @vhakulinen @last-partizan
This application’s <s>GUI</s>UI doesn’t seem to be translatable yet :)
Built from git with master at `68e3fc8d2e8f6f7bbdd73641b00031c16004e8cc`

I have the FZF plugin enabled, which attempts to preview the file as well. When I attempt to preview a zip file that's 160MB large, it crashes with

```
memory allocation of 18446744073709551615 bytes failedfish: “gnvim” terminated by signal SIGABRT (Abort)
```

Looks like it tries to allocate (uint64)-1 .

Let me know if you need more info.
![Screenshot_20190905_175651](https://user-images.githubusercontent.com/29133776/64386406-05132500-d007-11e9-99dc-78721c28f0c3.png)
I've been seeing more panics lately, which happened once in a while but there is a specific workload that I've been able to get them consistently.

In particular: `thread 'main' panicked at 'attempt to subtract with overflow', src/ui/grid/row.rs:86:47`

Unfortunately I can't share the exact process as it's related to my work, I'll see if I can get a repro soon. This happens when `<C-u>` or `<C-d>` into a region that might have special characters.

This is the backtrace: https://gist.github.com/badosu/c3e3e9bc4b7403b603c20e4fd9eec1fa
On some platforms you can execute
```VimL
:set guifont=*
```
to bring up a font requester dialog and interactively pick your font. Screenshot: 
![image](https://user-images.githubusercontent.com/65244/63281940-9f7f1480-c262-11e9-9eae-1c3bf299600a.png)

Could GNvim implement that font requester option for `set guifont=*`?

Invoking `set columns=whatever` sometimes causes GNvim to crash. I can't determine exactly what factor determines whether or not it crashes.
```
thread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: Error { domain: WebKitJavascriptError, code: 699, message: "SyntaxError: Can\'t create duplicate variable: \'width\'" }', src/libcore/result.rs:999:5
stack backtrace:
   0: std::sys::unix::backtrace::tracing::imp::unwind_backtrace
             at src/libstd/sys/unix/backtrace/tracing/gcc_s.rs:39
   1: std::sys_common::backtrace::_print
             at src/libstd/sys_common/backtrace.rs:71
   2: std::panicking::default_hook::{{closure}}
             at src/libstd/sys_common/backtrace.rs:59
             at src/libstd/panicking.rs:197
   3: std::panicking::default_hook
             at src/libstd/panicking.rs:211
   4: std::panicking::rust_panic_with_hook
             at src/libstd/panicking.rs:474
   5: std::panicking::continue_panic_fmt
             at src/libstd/panicking.rs:381
   6: rust_begin_unwind
             at src/libstd/panicking.rs:308
   7: core::panicking::panic_fmt
             at src/libcore/panicking.rs:85
   8: core::result::unwrap_failed
   9: <alloc::boxed::Box<F> as core::ops::function::FnOnce<A>>::call_once
  10: <O as webkit2gtk::auto::web_view::WebViewExt>::run_javascript::run_javascript_trampoline
  11: <unknown>
  12: <unknown>
  13: g_task_return_new_error
  14: <unknown>
  15: <unknown>
  16: <unknown>
  17: <unknown>
  18: <unknown>
  19: <unknown>
  20: <unknown>
  21: <unknown>
  22: <unknown>
  23: _ZN3WTF7RunLoop11performWorkEv
  24: <unknown>
  25: g_main_context_dispatch
  26: <unknown>
  27: g_main_context_iteration
  28: g_application_run
  29: <O as gio::application::ApplicationExtManual>::run
  30: gnvim::main
  31: std::rt::lang_start::{{closure}}
  32: std::panicking::try::do_call
             at src/libstd/rt.rs:49
             at src/libstd/panicking.rs:293
  33: __rust_maybe_catch_panic
             at src/libpanic_unwind/lib.rs:85
  34: std::rt::lang_start_internal
             at src/libstd/panicking.rs:272
             at src/libstd/panic.rs:394
             at src/libstd/rt.rs:48
  35: main
  36: __libc_start_main
  37: _start
```
After updating to pango-1.44 command menu is invisible (i'm using `--disable-ext-cmdline`, with gnvim's cmdline it's okay)
![Screenshot from 2019-07-28 22-59-39](https://user-images.githubusercontent.com/301015/62012218-16594e00-b18c-11e9-9172-f9098395d762.png)

After scrolling with mouse scroll fonts become blurred:
![Screenshot from 2019-07-28 22-59-01](https://user-images.githubusercontent.com/301015/62012226-2bce7800-b18c-11e9-83bc-7ddd030c13de.png)

neovim-gtk also has similar problems https://github.com/daa84/neovim-gtk/issues/208 (and there is some details about why: pango deprecated Freetype and using Harfbuzz instead)