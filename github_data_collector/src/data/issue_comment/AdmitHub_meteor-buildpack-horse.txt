Enables the node.js runtime metrics for meteor applications:
https://devcenter.heroku.com/articles/language-runtime-metrics-nodejs
##### Type of problem
 - Runtime problem after the build succeeds

##### Summary
<!--- Explain the problem briefly. -->
force-ssl no longer works on Heroku when prodOnly is true. I added force-ssl to my manual meteor `packages/` directory to double check this. When I remove the prodOnly flag, it redirects properly. When I add it back in, my site will stay on the http version.

##### Contents of `.meteor/release`
<!---
Please paste the contents of the .meteor/release file between the quotes below.
Example: "METEOR@1.4.1"
-->

```
METEOR@1.7.0.3
```

##### Buildpack version
<!---
Please paste the output of `heroku buildpacks`, between the quotes below.
Example: https://github.com/AdmitHub/meteor-buildpack-horse.git#beta
-->
```
https://github.com/AdmitHub/meteor-buildpack-horse.git#beta
```

##### Deployment target
<!--
Are you deploying to Heroku, or to an alternative target like Dokku, Flynn,
etc.?  Please specify here.

Please note that only heroku is supported, though we welcome PR's and
issues that help add support for other targets.
-->
Heroku
 - Failure to build
 - Runtime problem after the build succeeds

We have seen that post deploy our changes are not getting reflected properly. We need to deploy twice or so or sometimes never reflect. We are also observing an issue in the build logs related to native metrics.

/app/tmp/cache/meteor/.meteor/packages/meteor-tool/.1.5.1.puot9a++os.linux.x86_64+web.browser+web.cordova/mt-os.linux.x86_64/dev_bundle/bin/node /app/tmp/cache/meteor/.meteor/packages/meteor-tool/.1.5.1.puot9a++os.linux.x86_64+web.browser+web.cordova/mt-os.linux.x86_64/dev_bundle/lib/node_modules/npm/node_modules/node-gyp/bin/node-gyp.js build -j 1 native_metrics
make: Entering directory '/tmp/build_87270ab421ab8230b2783873f3114c75/gh/.meteor/heroku_build/app/programs/server/npm/node_modules/@newrelic/native-metrics/build'
CXX(target) Release/obj.target/native_metrics/src/native_metrics.o
CXX(target) Release/obj.target/native_metrics/src/GCBinder.o
../src/GCBinder.cpp: In static member function ‘static void nr::GCBinder::_doCallback(uv_work_t*, int)’:
../src/GCBinder.cpp:51:5: warning: ‘v8::Localv8::Value Nan::MakeCallback(v8::Localv8::Object, v8::Localv8::String, int, v8::Localv8::Value*)’ is deprecated [-Wdeprecated-declarations]
);
^
In file included from ../src/GCBinder.hpp:3:0,
from ../src/GCBinder.cpp:2:
../../../nan/nan.h:950:46: note: declared here
NAN_DEPRECATED inline v8::Localv8::Value MakeCallback(
^
CXX(target) Release/obj.target/native_metrics/src/LoopChecker.o
CXX(target) Release/obj.target/native_metrics/src/RUsageMeter.o
SOLINK_MODULE(target) Release/obj.target/native_metrics.node
COPY Release/native_metrics.node

Please advise.

Are you deploying to Heroku, or to an alternative target like Dokku, Flynn,
etc.? Heroku

Verions we are using,
Meteor - 1.5.1
New Relic - 2.7.0

Thanks,
Aniket
##### Type of problem
 - Failure to build

##### Summary
<!--- Explain the problem briefly. -->
MONGO_URL missing error - but it IS set.  I have no idea why the buildpack does not see it.
Using instructions from https://maxmalm.se/blog/2015-06-12-digitalocean-dokku-meteor

##### Contents of `.meteor/release`
<!---
Please paste the contents of the .meteor/release file between the quotes below.
Example: "METEOR@1.4.1"
-->

```
METEOR@1.2.1
```

##### Buildpack version
<!---
Please paste the output of `heroku buildpacks`, between the quotes below.
Example: https://github.com/AdmitHub/meteor-buildpack-horse.git#beta
-->
```
root@dokku3:~# dokku buildpacks
 !     `buildpacks` is not a dokku command.
 !     See `dokku help` for a list of available commands.
>cat .env
export BUILDPACK_URL='https://github.com/AdmitHub/meteor-buildpack-horse.git'
((( I wish there WERE a version )))
```

##### Logs
<!---
If this is a failure to build:
1. Use `heroku config:set BUILDPACK_VERBOSE=1` to enable verbose logging
2. Push to heroku again. `git push heroku master`
3. Paste the full output from the console into the quotes below.

If the build was successful and this is a runtime problem, please paste any
relevant logs from `heroku logs`.
-->

```
#dokku config:set trial ROOT_URL=http://trial.apps.example.com
#dokku config:set trial MONGO_URL=mongodb://<myuser>:<mypass>@dsXXXXXX.mon
golab.com:XXXXX/test30?autoReconnect=true
~# dokku config trial
=====> trial env vars
DOKKU_APP_TYPE:  herokuish
MONGO_URL:     mongodb://<myuser>:<mypass>@dsXXXXX.mongolab.com:XXXXX/test30?autoReconnect=true
ROOT_URL:        http://trial.apps.example.com

remote: + echo '       ++ export ROOT_URL=http://trial.apps.example.com'
remote:        ++ export ROOT_URL=http://trial.apps.example.com
remote: + for line in '$(docker logs "$CID" 2>&1)'
remote: + dokku_log_verbose_quiet '++ ROOT_URL=http://trial.apps.example.com'
remote: + declare 'desc=log verbose formatter (with quiet option)'
remote: + [[ -z '' ]]
remote: + echo '       ++ ROOT_URL=http://trial.apps.example.com'
remote:        ++ ROOT_URL=http://trial.apps.example.com
remote: + for line in '$(docker logs "$CID" 2>&1)'
remote: + dokku_log_verbose_quiet '+ for file in '\''$app_path/.profile.d/*.sh'\'''
remote: + declare 'desc=log verbose formatter (with quiet option)'
remote: + [[ -z '' ]]
remote: + echo '       + for file in '\''$app_path/.profile.d/*.sh'\'''
remote:        + for file in '$app_path/.profile.d/*.sh'
remote: + for line in '$(docker logs "$CID" 2>&1)'
remote: + dokku_log_verbose_quiet '+ source /app/.profile.d/mongo_url.sh'
remote: + declare 'desc=log verbose formatter (with quiet option)'
remote: + [[ -z '' ]]
remote: + echo '       + source /app/.profile.d/mongo_url.sh'
remote:        + source /app/.profile.d/mongo_url.sh
remote: + for line in '$(docker logs "$CID" 2>&1)'
remote: + dokku_log_verbose_quiet '++ '\''['\'' -z '\'']'\'''
remote: + declare 'desc=log verbose formatter (with quiet option)'
remote: + [[ -z '' ]]
remote: + echo '       ++ '\''['\'' -z '\'']'\'''
remote:        ++ '[' -z ']'
remote: + for line in '$(docker logs "$CID" 2>&1)'
remote: + dokku_log_verbose_quiet '++ export MONGO_URL='
remote: + declare 'desc=log verbose formatter (with quiet option)'
remote: + [[ -z '' ]]
remote: + echo '       ++ export MONGO_URL='
remote:        ++ export MONGO_URL=
remote: + for line in '$(docker logs "$CID" 2>&1)'
remote: + dokku_log_verbose_quiet '++ MONGO_URL='
remote: + declare 'desc=log verbose formatter (with quiet option)'
remote: + [[ -z '' ]]
remote: + echo '       ++ MONGO_URL='
remote:        ++ MONGO_URL=
remote: + for line in '$(docker logs "$CID" 2>&1)'
remote: + dokku_log_verbose_quiet '++ '\''['\'' -z '\'']'\'''
remote: + declare 'desc=log verbose formatter (with quiet option)'
remote: + [[ -z '' ]]
remote: + echo '       ++ '\''['\'' -z '\'']'\'''
remote:        ++ '[' -z ']'
remote: + for line in '$(docker logs "$CID" 2>&1)'
remote: + dokku_log_verbose_quiet '++ echo '\''meteor-buildpack-horse: MONGO_URL missing, you must define it for meteor to work.'\'''
remote: + declare 'desc=log verbose formatter (with quiet option)'
remote: + [[ -z '' ]]
remote: + echo '       ++ echo '\''meteor-buildpack-horse: MONGO_URL missing, you must define it for meteor to work.'\'''
####### normal output:
remote: -----> Adding PATH environment
remote: -----> Running extras
remote: -----> Adding profile script to resolve MONGO_URL from mongolab addon
remote: -----> Adding profile script to resolve ROOT_URL from heroku app name
remote:        -----> Discovering process types
remote:        Default types for  -> web
remote: -----> Releasing trial (dokku/trial:latest)...
remote: -----> Deploying trial (dokku/trial:latest)...
remote: -----> Attempting to run scripts.dokku.predeploy from app.json (if defined)
remote: -----> App Procfile file found (/home/dokku/trial/DOKKU_PROCFILE)
remote: -----> DOKKU_SCALE file found (/home/dokku/trial/DOKKU_SCALE)
remote: =====> web=1
<snip>
remote: =====> trial web container output:
remote:        meteor-buildpack-horse: MONGO_URL missing, you must  define it for meteor to work.
remote:         /app/.meteor/heroku_build/app/programs/server/node_modules/fibers/future.js:245
remote:                                                 throw(ex);
remote:                                                       ^
remote:        Error: MONGO_URL must be set in environment
remote:            at Object.<anonymous> (packages/mongo/remo.......

```

##### Deployment target
<!--
Are you deploying to Heroku, or to an alternative target like Dokku, Flynn,
etc.?  Please specify here.

Please note that only heroku is supported, though we welcome PR's and
issues that help add support for other targets.
-->
Dokku on Digital Ocean

Simply shows the duration after the build in the format `hh:mm:ss`
I've added caching for development and production `node_modules`. I'm also saving the cache, meteor generates during the build.
Reusing that cache, reduced my build time from ~30 minutes to ~10 minutes (!)
##### Type of problem
 - Build wrong packages
##### Summary
<!--- Explain the problem briefly. -->


##### Contents of `.meteor/release`
<!---
Please paste the contents of the .meteor/release file between the quotes below.
Example: "METEOR@1.4.1"
-->

```
METEOR@1.6.0.1
```

##### Buildpack version
<!---
Please paste the output of `heroku buildpacks`, between the quotes below.
Example: https://github.com/AdmitHub/meteor-buildpack-horse.git#beta
-->
```
https://github.com/AdmitHub/meteor-buildpack-horse.git
```



##### Deployment target
<!--
Are you deploying to Heroku, or to an alternative target like Dokku, Flynn,
etc.?  Please specify here.

Please note that only heroku is supported, though we welcome PR's and
issues that help add support for other targets.
-->
Heroku



Hi,

I can't have `METEOR_PACKAGE_DIRS` to be taken into account during app build/run. It is set to `/app/.submodules/my-repo/packages` and the folder exist, I checked out in the bash.

However, it behaves as if ignored, I guess during build the path is different (e.g I should write `/tmp/.submodules/...` instead of `/app` or simply `./`, could not test yet) but I am not sure and I can't find a solution. Maybe the buildpack is a good place to handle this ?

This uses yarn instead of npm for application installation. At [OK GROW!](https://github.com/okgrow/meteor-buildpack-horse), we are changing our process to pretty much use yarn everywhere, we wanted our buildpack to reflect that as well.

For your consideration 😊  Thanks 🤘
The idea of the buildpack is to install `devDependencies` even if the `NODE_ENV` is set to `production` simply avoiding the flag `--production` on `npm install`.

Unfortunately this doesn't work since npm never installs `devDependencies` if the environment is set to `production`.  Official documentation states: 

> With the --production flag (or when the NODE_ENV environment variable is set to production), npm will not install modules listed in devDependencies. ([link](https://docs.npmjs.com/cli/install))

To fix that we can run npm install as `development`.
##### Type of problem
<!---
Pick one below and delete the others.  Please note that runtime problems are
usually due to bugs in your code, and not bugs with this buildpack.
-->

 - The Node.js team has announced that a high severity remote Denial of Service (DoS) Constant Hashtable Seeds vulnerability in Node.js versions 4.x through 8.x has been patched in the following versions:

##### Summary
<!--- Explain the problem briefly. -->
Need to make sure the build works with Node 4.8.4 and above.

##### Contents of `.meteor/release`
<!---
Please paste the contents of the .meteor/release file between the quotes below.
Example: "METEOR@1.4.1"
-->

```
METEOR@1.5 looks to have Node 4.8.3 
```

##### Buildpack version
<!---
Please paste the output of `heroku buildpacks`, between the quotes below.
Example: https://github.com/AdmitHub/meteor-buildpack-horse.git#beta
-->
```
.
```

##### Logs
<!---
If this is a failure to build:
1. Use `heroku config:set BUILDPACK_VERBOSE=1` to enable verbose logging
2. Push to heroku again. `git push heroku master`
3. Paste the full output from the console into the quotes below.

If the build was successful and this is a runtime problem, please paste any
relevant logs from `heroku logs`.
-->

```
.
```

##### Deployment target
<!--
Are you deploying to Heroku, or to an alternative target like Dokku, Flynn,
etc.?  Please specify here.

Please note that only heroku is supported, though we welcome PR's and
issues that help add support for other targets.
-->
.