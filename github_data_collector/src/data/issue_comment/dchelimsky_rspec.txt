Test case is just:

``` ruby
string = "ip7-ipb-gls-100c1a++++++++++++++++++++++++Result:+%E8%F1%EF%EE%EB%FC%E7%F3%E5%EC+%EF%F0%EE%EA%F1%E8+218.108.168.166:80;+%ED%E5+%ED%E0%F8%EB%EE%F1%FC+%F4%EE%F0%EC%FB+%E4%EB%FF+%EE%F2%EF%F0%E0%E2%EA%E8;"
```

To match

``` ruby
/^([a-z0-9]{3})-([a-z0-9]{3,20})-([a-z0-9]{3})-((\d{3}[a-z]\d[a-z]))$/
```

Would you please take a look, thanks.

I have posted the question to Stack Overflow. Sorry for the cross-linking:

http://stackoverflow.com/questions/25123892/custom-matchers-in-rspec-3-used-with-should-not-produce-the-wrong-messages

I don't know how the gem packaging happens, so not sure if it's an issue or if I did something wrong.

on Ubuntu 10.04, with ruby 
ruby 1.8.7 (2010-01-10 patchlevel 249) [i486-linux]

when I did a `gem install rspec`, it tried to install rspec 2.9.0.
1. This fails, saying it needs rspec-expectations, but not grabbing it on its own, not sure why.
2. it's not a functional install, missing rspec-core, and thus the executable.

I solved the issue by forcing rspec 2.8 to install
`gem install rspec -v 2.8`

some exception raised in before block, 
example#description be changed to nil, 
so failure_output raise "undefined method `strip' for nil:NilClass"

example:
https://gist.github.com/2299693

please toggle the line #4 to comment,  and try again.

I'm trying to set up rake to combine coverage reports with cucumber and the automatic deleting of the coverage directory is complicating things.  It would be nice if this was a configuration option.

Hey people,

I am here lost with this bug trace...
Maybe someone already had it and  can give me a tip for solving it:

1) ApplicationController should use ApplicationController
     Failure/Error: Unable to find matching line from backtrace
     ArgumentError:
       wrong number of arguments (1 for 0)
     # /Users/me/.rvm/gems/ruby-1.8.7-p334@rails3/gems/actionpack-3.1.3/lib/action_controller/test_case.rb:130:in `initialize'
     # /Users/me/.rvm/gems/ruby-1.8.7-p334@rails3/gems/actionpack-3.1.3/lib/action_controller/test_case.rb:130:in`initialize'
     # /Users/me/.rvm/gems/ruby-1.8.7-p334@rails3/gems/actionpack-3.1.3/lib/action_dispatch/http/request.rb:43:in `new'
     # /Users/me/.rvm/gems/ruby-1.8.7-p334@rails3/gems/actionpack-3.1.3/lib/action_dispatch/http/request.rb:43:in`new'
     # /Users/me/.rvm/gems/ruby-1.8.7-p334@rails3/gems/actionpack-3.1.3/lib/action_dispatch/testing/test_request.rb:10:in `new'
     # /Users/me/.rvm/gems/ruby-1.8.7-p334@rails3/gems/actionpack-3.1.3/lib/action_controller/test_case.rb:457:in`setup_controller_request_and_response'
     # /Users/me/.rvm/gems/ruby-1.8.7-p334@rails3/gems/rspec-rails-2.8.1/lib/rspec/rails/adapters.rb:15:in `send'
     # /Users/me/.rvm/gems/ruby-1.8.7-p334@rails3/gems/rspec-rails-2.8.1/lib/rspec/rails/adapters.rb:15:in`setup'
     # /Users/me/.rvm/gems/ruby-1.8.7-p334@rails3/gems/rspec-core-2.8.0/lib/rspec/core/hooks.rb:35:in `instance_eval'
     # /Users/me/.rvm/gems/ruby-1.8.7-p334@rails3/gems/rspec-core-2.8.0/lib/rspec/core/hooks.rb:35:in`run_in'
     # /Users/me/.rvm/gems/ruby-1.8.7-p334@rails3/gems/rspec-core-2.8.0/lib/rspec/core/hooks.rb:70:in `run_all'
     # /Users/me/.rvm/gems/ruby-1.8.7-p334@rails3/gems/rspec-core-2.8.0/lib/rspec/core/hooks.rb:70:in`each'
     # /Users/me/.rvm/gems/ruby-1.8.7-p334@rails3/gems/rspec-core-2.8.0/lib/rspec/core/hooks.rb:70:in `run_all'
     # /Users/me/.rvm/gems/ruby-1.8.7-p334@rails3/gems/rspec-core-2.8.0/lib/rspec/core/hooks.rb:368:in`run_hook'
     # /Users/me/.rvm/gems/ruby-1.8.7-p334@rails3/gems/rspec-core-2.8.0/lib/rspec/core/example_group.rb:292:in `run_before_each_hooks'
     # /Users/me/.rvm/gems/ruby-1.8.7-p334@rails3/gems/rspec-core-2.8.0/lib/rspec/core/example_group.rb:292:in`each'
     # /Users/me/.rvm/gems/ruby-1.8.7-p334@rails3/gems/rspec-core-2.8.0/lib/rspec/core/example_group.rb:292:in `run_before_each_hooks'
     # /Users/me/.rvm/gems/ruby-1.8.7-p334@rails3/gems/rspec-core-2.8.0/lib/rspec/core/example.rb:217:in`run_before_each'
     # /Users/me/.rvm/gems/ruby-1.8.7-p334@rails3/gems/rspec-core-2.8.0/lib/rspec/core/example.rb:79:in `run'
     # /Users/me/.rvm/gems/ruby-1.8.7-p334@rails3/gems/rspec-core-2.8.0/lib/rspec/core/example.rb:173:in`with_around_hooks'
     # /Users/me/.rvm/gems/ruby-1.8.7-p334@rails3/gems/rspec-core-2.8.0/lib/rspec/core/example.rb:77:in `run'
     # /Users/me/.rvm/gems/ruby-1.8.7-p334@rails3/gems/rspec-core-2.8.0/lib/rspec/core/example_group.rb:355:in`run_examples'
     # /Users/me/.rvm/gems/ruby-1.8.7-p334@rails3/gems/rspec-core-2.8.0/lib/rspec/core/example_group.rb:351:in `map'
     # /Users/me/.rvm/gems/ruby-1.8.7-p334@rails3/gems/rspec-core-2.8.0/lib/rspec/core/example_group.rb:351:in`run_examples'
     # /Users/me/.rvm/gems/ruby-1.8.7-p334@rails3/gems/rspec-core-2.8.0/lib/rspec/core/example_group.rb:337:in `run'

It does not even reach the first spec in the file...

Thanks in advance

See this thread:

http://stackoverflow.com/questions/8764460/ruby-re-defined-method-with-a-yield-throws-no-block-given

This issue originated in a respec test, and ended up showing that rspec cant handle the case with stubing methods with same implicit block method signatures it seems.

It gives the same no-block-given exception when trying to rspec it.

From time to time, we see the following error in our specs:

NoMethodError in 'Filters::DeviceFilterList does not raise an error for Sites::BestbuyAndroid'
undefined method `remove_after' for Spec::Example::ExampleGroup:Class

We're running rspec-1.3.2 and rspec-rails-1.3.4

The caller appears to be:

``` ruby
        def unregister_verify_after_each #:nodoc:
          proc = verify_rendered_proc
          Spec::Example::ExampleGroup.remove_after(:each, &proc)
        end
```

Looking at the rspec core code, it looks like remove_after was removed from the code around 1.1.4. Is that correct?

Is there a recommended fix?


This simple example should explain the problem:

class Dog
  scope :some_scope, limit(1)
end

Dog.delete_all
Dog.create!
Dog.some_scope.should =~ [Dog.first]  # <== this fails
Dog.some_scope.all.should =~ [Dog.first]  # <== this passes

Given that .all should be called automatically, this seems like an odd bug?
