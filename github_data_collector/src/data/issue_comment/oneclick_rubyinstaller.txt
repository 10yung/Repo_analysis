**NOTE: This project is for Ruby version 2.3 and older.
For Ruby versions >= 2.4 please file an issue [here]( https://github.com/oneclick/rubyinstaller2/issues/new ).**
------------------------------------------------------------------



The webserver happens to crash alot of times lately and started giving this issue. 
Then it shuts down the server and I have to start it again. I am not sure why this is happening lately. I have started using active storage to upload images and started facing this!
Please let me know whats happening and how to fix it.

**NOTE**: This project is for Ruby version 2.3 and older.
For Ruby versions >= 2.4 please file an issue [here]( https://github.com/oneclick/rubyinstaller2/issues/new ).

## What problems are you experiencing?

TLS1.2 not supported in the Ruby 1.8.7 installer which is compiled with OpenSSL 1.0.0k.  I was wondering if it would be possible to release a 1.8.7 installer which is compiled  with a newer version of OpenSSL libraries.   (I have been trying to compile myself with no success as of yet).

## Steps to reproduce

Try to open a URL which requires TLS1.2

## What's the output from `ruby -v`?

ruby 1.8.7 (2013-06-27 patchlevel 374) [i386-mingw32]
## What problems are you experiencing?
Unable to download the ruby source when the rake task ```rake ruby23 DKVER=mingw64-64-4.7.2``` is ran.

## Steps to reproduce
1. Go to ruby installer path
2. Run ```rake ruby23 DKVER=mingw64-64-4.7.2```

We see this error
```
rake aborted!
URI::NotFoundError: Looking for http://cache.ruby-lang.org/pub/ruby/2.3//ruby-2.3.3.tar.bz2 and all I got was a 404!
```

## What's the output from `ruby -v`?
ruby 2.3.5p376 (2017-09-14 revision 59905) [x64-mingw32]


**NOTE**: This project is for Ruby version 2.3 and older.
For Ruby versions >= 2.4 please file an issue [here]( https://github.com/oneclick/rubyinstaller2/issues/new ).

## What problems are you experiencing?
Unable to download the ruby source when the rake task ```rake ruby23 DKVER=mingw64-64-4.7.2``` is ran.

## Steps to reproduce
1. Go to ruby installer path
2. Run ```rake ruby23 DKVER=mingw64-64-4.7.2```

We see this error
```
rake aborted!
URI::NotFoundError: Looking for http://cache.ruby-lang.org/pub/ruby/2.3//ruby-2.3.3.tar.bz2 and all I got was a 404!
```

## What's the output from `ruby -v`?
ruby 2.3.5p376 (2017-09-14 revision 59905) [x64-mingw32]


**NOTE**: This project is for Ruby version 2.3 and older.
For Ruby versions >= 2.4 please file an issue [here]( https://github.com/oneclick/rubyinstaller2/issues/new ).

## What problems are you experiencing?
Windows Defender AV detected a trojan in the Win32 devkit installer.
rubyinstaller-devkit-2.5.1-2-x64.exe

## Steps to reproduce
Download https://github.com/oneclick/rubyinstaller2/releases/download/rubyinstaller-2.5.1-2/rubyinstaller-devkit-2.5.1-2-x64.exe to a virtual machine running Windows 10.

Install the application. 
Watch the quarantine event occur. 

## What's the output from `ruby -v`?

N/A I terminated the installer. 

At present, RubyInstaller (RI) versions have stopped at 2.3.3.  They also have various issues, from ssl certs to package availability and maintenance.

Lars Kanis has put a lot of time into the RubyInstaller2 (RI2) system (thanks again), and is building 2.4 versions.

I've been using my own MSYS2/MinGW build system for a while, and I include the RI2 runtime.  Although I've mostly concentrated on testing trunk, I added building of 2.3 and 2.4.  I recently uploaded a 2.3.5 build to BinTray.

**I believe it would help the adoption of RI2 if a 2.3 build was available.  I would like to propose adding it to the OneClick web site.**

### BUILD INFO

Since there were a few issues posted in RI2 that involved `gem update / install` problems, it's obvious that many users are updating gems, and also default gems.  Hence, the build has the following:

1. RubyGems updated to 2.6.13.
2. Bundled gems (all?) updated.
3. Default gems - BigDecimal, JSON, OpenSSL, Pysch, and RDoc are updated, *.so files stripped, and all pushed back into the build.
4. Bundler added.
5. Full build & test logs [here](https://dl.bintray.com/msp-greg/ruby_windows/zlogs_v2_3_5_2017-09-14_59905.7z).  Includes prepare, build, package, and several tests.  The file `ruby23_64_2.3.5_info.log` shows test results on the upgraded default gems.
6. Build 7z [here](https://dl.bintray.com/msp-greg/ruby_windows/ruby23-ri2.7z) and [sig file](https://dl.bintray.com/msp-greg/ruby_windows/ruby23-ri2.7z.sig).
7. Built with readline 7.0, but also has `rb-readline` installed.  Default is `rb-readline`.  All standard tests done with the extension/so version.

### BUILD SUMMARY
```
-------------------------------------------  2017-09-16 18:36:09 UTC  Appveyor Ruby 2.3.5
ruby 2.3.5p376 (2017-09-14 revision 59905) [x64-mingw32]

Build Type/Info: RubyInstaller2 vers ruby-loco RI2 2.4.2-2  commit a1b07ad
       gcc info: x86_64-w64-mingw32-gcc.exe (Rev1, Built by MSYS2 project) 7.2.0

Gem::VERSION     2.6.13

BigDecimal.ver   1.1.0
GDBM::VERSION    GDBM version 1.10. 13/11/2011 (built Jul 28 2017 22:23:16)
JSON::VERSION    2.1.0

OpenSSL::VERSION                  2.0.5
    OPENSSL_VERSION               OpenSSL 1.0.2l  25 May 2017
    OPENSSL_LIBRARY_VERSION       OpenSSL 1.0.2l  25 May 2017
    SSLContext::METHODS           SSLv23 SSLv3 TLSv1 TLSv1_1 TLSv1_2
    X509::DEFAULT_CERT_FILE       File Dated 2017-09-16  C:/ruby23-ri2/ssl/cert.pem
    X509::DEFAULT_CERT_DIR        Dir  Exists            C:/ruby23-ri2/ssl/certs
    Config::DEFAULT_CONFIG_FILE   File Dated 2017-05-25  C:\OpenSSL-Win32\bin\openssl.cfg
    ENV['SSL_CERT_FILE']          No ENV key  
    ENV['SSL_CERT_DIR']           No ENV key  
    ENV['OPENSSL_CONF']           File Dated 2017-05-25  C:\OpenSSL-Win32\bin\openssl.cfg

Psych::VERSION            2.2.4         LIBYAML_VERSION  0.1.7
Readline::VERSION (rb)    5.2
Zlib::VERSION             0.6.0         ZLIB_VERSION     1.2.11

-------------------------------------------------------- Load Test
DBM         Ok                    Win32::Registry   Ok
Digest      Ok                    WIN32OLE          Ok
Fiddle      Ok                    Zlib              Ok
Socket      Ok

------------ Default Gems ----              ------------ Bundled Gems ----
       1.3.2 bigdecimal                           1.15.4 bundler
       0.4.5 io-console                            1.0.3 did_you_mean
       2.1.0 json                                 5.10.3 minitest
       2.0.5 openssl                               0.1.1 net-telnet
       2.2.4 psych                                 1.1.0 power_assert
       5.1.0 rdoc                                 12.1.0 rake
                                                   3.2.5 test-unit
```

### Misc

I've been logging my trunk test results [here](https://msp-greg.github.io/file.mingw_test-all.html). First results shown are from Apri-2017, I was building before that, but not logging.

My trunk build is used a few places for testing, RubyGems just found a bug with it.

I have been using MSYS2/MinGW for a while, so, when working with it, I work in its shell.  Hence, I haven't used `ridk` much.
The DevKit only ships with `make.exe`, but e.g. rake-compiler [gives](https://github.com/rake-compiler/rake-compiler/blob/f47e7a57e49bc719b1a87988a70307f8b4340946/tasks/bin/cross-ruby.rake#L43) [precedence](https://github.com/rake-compiler/rake-compiler/blob/5854dfa95f68eaaf27edba7552d40d6825d1e50b/lib/rake/extensiontask.rb#L489) to `gmake`. If other tools like Strawberry Perl that provide `gmake` are in `PATH`, a build of native extensions would fail as that `gmake` likely does not understand MSYS paths.

A way to fix this would be to provide an alias / copy of `make` named `gmake`. At least rake-compiler would also allow to override the make tool by setting the `MAKE` environment variable, but that's probably harder to get right.
From https://github.com/oneclick/rubyinstaller/issues/344#issuecomment-265223104:
> Unfortunately, I don't have the luxury of using RubyInstaller day-to-day anymore. So when there is a new release I have to make time to actually sit down and build it.
> 
> I've tried to pawn off the build process to VMs but there seems to be a problem where hypervisor environments don't get the same results as a regular Windows environment. I spent time on that rabbit hole until it exhausted me.
> 
> So at the moment, it takes about 1.5 hours to build, test, and package a version of Ruby. Then adding the quirks like making sure we have the correct version of Innoinstaller, getting HTMLHelp for the CHM, and the rdoc_chm workaround for building docs for Ruby 2.3. Most of my times is spent away from my PC these days and when something goes wrong the process just gets that much longer.
> 
> So while I sincerely enjoy doing this, but I'm unable to commit the time I used to or the time I want to make the project better because I don't use the project consistently anymore. There are tons of things that anyone can do to make the process better, but not without taking a deep dive into the project to understand the problems.
> 
> I'm getting the releases out when I can, but it's a time consuming process that I have to actually make time for these days.

Expanding on that, I feel like I'm doing an injustice to @luislavena and the rest of the community. But these releases are time consuming and taxing. Most of the time that I'm not building new releases is spent trying to automate this process or make this process easier on myself usually to no avail.

Until this need is met, I'll continue doing what I've been doing but as a result the releases will be on a delayed schedule. Especially the likely Christmas release of 2.4.0.
I added a way to specify the folder to place downloaded files.

You can share a "downloads" folder with multiple windows installer build instances
without copying from one instance to another.

  rake DOWNLOADS="c:\downloads" # specify the folder to place downloaded files, absolute/relative

In addition above, I added the ability to handle dependency files 
more properly in multi-toolchain.

Download a set of dependency files from distinguished URL path
and store them under the "downloads" sub-directory separately.

config/compilers/mingw64.rb is just a sample.
You'll fail in downloading the dependency files, since there aren't such files.

:knap_path value is used for separation.
