To match the other @uirouter packages, as well as fix an issue where the
version was specified strictly causing mismatches.

BREAKING CHANGE: now needs to install peerDependency `@uirouter/core` separately

Closes angular-ui/ui-router#3794
This issue tracker is for Bug Reports and Feature Requests only.

Please direct requests for help to StackOverflow.
See http://bit.ly/UIR-SOF for details.

This is a (check one box):

- [x] Bug Report
- [ ] Feature Request
- [ ] General Query 

My version of UI-Router is: (type version)

> `package.json`
> ```
> "@uirouter/angular": "6.0.1",
> "@uirouter/angular-hybrid": "10.0.1",
> "@uirouter/angularjs": "1.0.24",
> "@uirouter/core": "6.0.4",
> "@uirouter/rx": "0.6.4",
> ```

# Bug Report

#### Current Behavior:

Hard to debug type errors regarding `StateDeclaration` mismatches.

Basically a lot of properties and interfaces do not match which seems weird because no related typing has changed between `@uirouter/core@6.0.3` and `@uirouter/core@6.0.4`.

However looking at the lockfile, we can see that we have a duplication;

```
"@uirouter/angular@^6.0.1":
  version "6.0.1"
  resolved "https://registry.yarnpkg.com/@uirouter/angular/-/angular-6.0.1.tgz#fbd6512d4da82b95d182bc592a101a6606407a82"
  integrity sha512-7UU3rv1rY0oobL3gUpeJ8QpazbgcDxG1JomBvzE7kYyxkVNBZ3rDhPRbzXTniaUXC2J56CEBE9PMtXNPDSxPyQ==
  dependencies:
    tslib "^1.9.0"

"@uirouter/angularjs@^1.0.24":
  version "1.0.24"
  resolved "https://registry.yarnpkg.com/@uirouter/angularjs/-/angularjs-1.0.24.tgz#e8ac7c8b53f68481a070fbed87e9f7768d344942"
  integrity sha512-Q+gR5eskbOwK5DlzSOOXx3MGWbKq5xQrcF0T4csHXOHUBuGO26n6QTPFYsPwg0AfpC5yNou3jrDonI+UR8wDEg==
  dependencies:
    "@uirouter/core" "6.0.3"

"@uirouter/core@6.0.3":
  version "6.0.3"
  resolved "https://registry.yarnpkg.com/@uirouter/core/-/core-6.0.3.tgz#1de7a3451039e1274e7f595de2be92421c26b09c"
  integrity sha512-ftAQw9czKUSgLFC3LwOeJP97PDQ6naHcEK0NrbWw3X/r49oQJBMRFAsz9oEKqPFPD2vUDqkvG18BZXglLp8k+Q==

"@uirouter/core@^6.0.4":
  version "6.0.4"
  resolved "https://registry.yarnpkg.com/@uirouter/core/-/core-6.0.4.tgz#fcdc75ab10f1035176acf87a27d9d27a0101ecf9"
  integrity sha512-TQ9XOzZY+jmWKkU4993MAEBIy7Bs3kijDzj+A6RHR8gq/3UoQm3Q/l1igfao5GZyBjid7eRVeipPK14ovCYQ3g==
```

And my suspicion is that the mismatching of types is because the types I've imported from `@uirouter/angularjs` is not the same as the ones I import from `@uirouter/angular`.

#### Expected Behavior:

`@uirouter/angularjs` should have `@uirouter/core` as a peerDependency, just like the other `uirouter` packages, therefore ensuring that I use the same version of `@uirouter/core`.

#### Link to Plunker or stackblitz that reproduces the issue:

( if you want a response to your issue, provide a way to reproduce it )
( http://bit.ly/UIR-Plunk1 )
( https://stackblitz.com/edit/ui-router-angularjs )

This is a (check one box):
- [ X] Feature Request

# Feature Request

Is there any interest in adding sequential routing as a feature? I.e. most states can be entered at random, but in some cases like long running forms, the UI state tree looks like this:

```
ParentState
  Step1
  Step2
  Step3
```

For any parentState marked as a sequential section, UI-Router would support next and back methods such that the Step components would never need to know what the next step or previous step's UI state name. 

The best argument I can think of against this feature is that it feels like an extension of ui-router. So if there is a way/plugin architecture for extending ui-router let me know and I will look into it.
Hello,
some event that enter when refresh the browser?
Thanks.
Hi,
I am updating state params in my one of the controller like below :
var stateParams = {
						productId : null,
						.
                                                .
						.
                                                .
				};
				stateParams["productId"] 	    = vm.product.id;
						.
                                                .
						.
                                                .
			productService.updateStateParams(stateParams);

the above productService.updateStateParams call the method define in my root controller which assign the params with new params and try to navigate the same state but here the problem happening is that some kind of infinite loop is creating, calling this update method again and again, in my routing definition i tried to use reloadOnSearch : false but still it is not working, any one can please help me on this?
This is a (check one box):

- [ ] Bug Report
- [ ] Feature Request
- [ x] General Query 

My version of UI-Router is: (1.0.0)

- [X ] I have already asked my question on StackOverflow and nobody could answer the question
https://stackoverflow.com/questions/57052468/ui-router-upgraded-from-0-3-2-to-1-0-0-and-get-transition-error-and-no-views-ren

- [X ] I have already reviewed the sample application for examples of common approaches

- [X ] I believe my question can only be answered by the UI-Router maintainers


I am working on a large angular 1.x project and I am upgrading ui-router 0.3.2 to 1.0.0, the   problem i face is that although the states changes but no views are rendered ,also sometimes I get transition errors

@christopherthielen can you please help 

 error TS2583: Cannot find name 'Map'. Do you need to change your target library? Try changing the `lib` compiler option to es2015 or later.

24     headers: Map<string, string>;
                ~~~

node_modules/@types/selenium-webdriver/http.d.ts:48:14 - error TS2583: Cannot find name 'Map'. Do you need to change your target library? Try changing the `lib` compiler option to es2015 or later.

48     headers: Map<string, string>;
                ~~~

node_modules/@types/selenium-webdriver/remote.d.ts:139:29 - error TS2583: Cannot find name 'Map'. Do you need to change your target library? Try changing the `lib` compiler option to es2015 or later.

139         setEnvironment(env: Map<string, string> | {[name: string]: string} | null): this;
                                ~~~


Found 3 errors.
This issue tracker is for Bug Reports and Feature Requests only.


- [ ] Bug Report

angularJS: 1.7
My version of UI-Router is: 1.0.17

# Bug Report

#### Current Behavior:
In my project, there is a sideBar which is implemented by $state.go used for change url, and we use lazyload property to load each module. I found that the view will not be updated to the latest state when I click the siderbar very fast to switch url. Due to analysis the trace log and the code of ui-router, I found it is caused by a wrong transition.

when the error occured, the trace log show that there is a A->c transition after A->B;
```javascript
var activateViews = function (transition) {
    var enteringViews = transition.views('entering');
    var exitingViews = transition.views('exiting');
    if (!enteringViews.length && !exitingViews.length)
        return;
    var $view = transition.router.viewService;
    exitingViews.forEach(function (vc) { return $view.deactivateViewConfig(vc); });
    enteringViews.forEach(function (vc) { return $view.activateViewConfig(vc); });
    $view.sync();
};
```
so when A-> started, it will try to remove the viewConfig of A , and the viewConfig of B will left in the _viewConfigs; 

```javascript
var matchingConfigPair = function (uiView) {
    var matchingConfigs = _this._viewConfigs.filter(ViewService.matches(uiViewsByFqn, uiView));
    if (matchingConfigs.length > 1) {
        // This is OK.  Child states can target a ui-view that the parent state also targets (the child wins)
        // Sort by depth and return the match from the deepest child
        console.log(`Multiple matching view configs for ${uiView.fqn}`, matchingConfigs);
        matchingConfigs.sort(depthCompare(viewConfigDepth, -1)); // descending
    }
    return { uiView: uiView, viewConfig: matchingConfigs[0] };
};
```
Because of the extra config of B, the matchingConfigs will contain B and C, and the viewConfig of B will be returned
#### Expected Behavior:

the transtion's from state will be the last transition's to state.

####

question:
1. how to avoid the transition mentioned above(A->B, A->C)  
2. in what situation ,the length of matchingConfigs will be  greater than 1(normal situation).
3. we try to reverse matchingConfigs first before sort it by depth, and it seem to can get the correct viewConfig, is this solution ok?


This issue tracker is for Bug Reports and Feature Requests only.

Please direct requests for help to StackOverflow.
See http://bit.ly/UIR-SOF for details.

This is a (check one box):

- [1 ] Bug Report
- [ ] Feature Request
- [ ] General Query 

My version of UI-Router is: 1.0.22
Webpack: 4.28.4


# Bug Report

#### Current Behavior:
Dear all,
When  I using the webpack to pack my project,I configure the output as the style as contenthash.
I check all the files of my project,then I found the vendor's(node_modules) hash is different every time. 
Finally i found the ui-router 's version is related  to the difference.
If i use the 1.0.22 version,I test 100 times build, nearly 30% is same. If  I change to the version 1.0.0, 100% is same.
However I can't downgrade to 1.0.0,beacuse I use the higher version's feature future state.
Help me please!
#### Expected Behavior:

when I pack all the scripts, if the content is same then I expect the hash is same.

my webpack config:
output: {
            path: helpers.appBuild,
            filename: '[name].[contenthash:8].js',
            sourceMapFilename: '[file].map',
            chunkFilename: '[name].[contenthash:8].js',
            publicPath: helpers.publicServerBase
        },
const NamedChunksPlugin = require('webpack/lib/NamedChunksPlugin');
use the plugin:
       new NamedChunksPlugin(
                chunk => chunk.name || Array.from(chunk.modulesIterable, m => m.id).join("_")
            ),

#### Link to Plunker or stackblitz that reproduces the issue:

( if you want a response to your issue, provide a way to reproduce it )
( http://bit.ly/UIR-Plunk1 )
( https://stackblitz.com/edit/ui-router-angularjs )




# Feature Request








# General Query

Please direct general implementation questions to StackOverflow: 
http://stackoverflow.com/questions/ask?tags=angularjs,angular-ui-router

Please review the Sample Application which highlights common approaches:
https://github.com/ui-router/sample-app-angularjs

- [ ] I have already asked my question on StackOverflow and nobody could answer the question

- [ ] I have already reviewed the sample application for examples of common approaches

- [ ] I believe my question can only be answered by the UI-Router maintainers


(type general query here)

This is a (check one box):

- [ ] Bug Report
- [x] Feature Request
- [ ] General Query 

My version of UI-Router is: 1.0.15

I'm trying to implement a feature flagging strategy in an enterprise application using ui-router so that we can build new versions of route trees while maintaining existing functionality.  The desired goal is to use a post-build configuration switch (a feature flag) to flip between the old states (v1) and the new states (v2) dynamically, without requiring the inbound links or URL from having to know about any sort of versioning strategy.   There are thousands of inbound deep links to this application spread across multiple external applications, so having to update them to know about any sort of url versioning or flagging strategy is untenable. 

We have tried a few implementations with ui-router and found that they generally seem to converge on the router needing to share two states per URL, which creates a pretty good illusion, but falls apart at runtime if the user ever refreshes a view or if a bookmark is used to access a deep link (it will load the first state defined for the url).

We've also tried a series of transition hooks that redirect from a root node, but that also causes inbound deep links to fail because they all get prefixed with a version in the url. 

Can we get something added to the router to help support this sort of transparent state sharing behavior driven off of a switch? 