Could you please write some tests for the view models and some important parts of the application to demonstrate unit testing in this architecture.
As @serjooo mentioned: 

App crashes still on iOS 12 in the HomeViewController on line 82:

```
outputs.isRefreshing
.execute { [weak self] isRefreshing in
    if isRefreshing {
        self?.collectionView.scrollToItem(at: IndexPath(item: 0, section: 0), at: .top, animated: false)
        self?.collectionView.setContentOffset(CGPoint(x: 0.0, y: -(self?.refreshControl.frame.height ?? 0.0)), animated: true)
    } else {
        self?.collectionView.setContentOffset(.zero, animated: true)
    }
}
.bind(to: refreshControl.rx.isRefreshing)
.disposed(by: disposeBag)
```

Commenting out the `isRefreshing` code solves the problem as the app crashes on scrolling logic.
Closes #93 

Demo:
![download2](https://user-images.githubusercontent.com/1887653/67145116-d7183600-f27e-11e9-9c70-31e226e6c18a.gif)


In addition:
- Made `Photos` framework usage more "rx-ish"
*Open for suggestions how it should look like
On the photo detail, swipe left-right to see the prev-next photo. This means that the `PhotoDetail.swift` should be a `UICollectionViewCell` instead of a `UIViewController`.

Show more info for every photo: 
- Location (... and other meta data).
- Related photos.
- Featured collections.
- Related tags.

Start with  #92 first.
Replace alerts with [JDToaster](https://github.com/jdisho/JDToaster).

Start with #89 first.
I noticed the app on iOS 13 has an issue on scene-coordinator because of the new behavior of iOS 13 modal( ‘pull-to-dismiss‘). I think the coordinator is not getting this event to pop the current view from the navigation stack. Below is the error after trying to present VC once the previous  VC dismissed by "pull-to-dismiss".

Warning: Attempt to present <XX:ViewController: 0x7f96b955f590> on <XX:ViewController: 0x7f96b9621de0> whose view is not in the window hierarchy!