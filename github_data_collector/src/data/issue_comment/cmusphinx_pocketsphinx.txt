while running sphinx code it is taking more time to execute the
LISTENING
RECOGNIZING
functions.
The question is there any way to reduce the time consumption that these function takes?like arguments or parameters?

I'm trying to run this command 
pocketsphinx_continuous -hmm /home/richard/test/PSAudio/en-us-adapt -lm /home/richard/test/PSAudio/en-us.lm.bin -dict /home/richard/test/PSAudio/newmerge01.dict  -infile ./1001.wav > ./result1001.txt 

and I get a segmentation fault. The file ./1001.wav  is ~ 191Mbytes 
I've tried chopping ~10Mbytes off the front of the file, and this seems to have the effect of changing the number of bytes written to the text file. Thus far:  0; 4096; 8192 

The version of pocketsphinx is from Debian|stable: pocketsphinx_0.8+5prealpha-2+b1_amd64.deb

I'm unfamiliar with the working of pocketsphinx, and it's been a while since I ran a debugger, so I'll need some guidance on which files you may need to investigate this. 
I'm looking to get possible guesses for words other then those appearing in the segment list.  These look to be contained in the lattice.  However, I don't see how those get mapped to probabilities.  Shouldn't a probability be contained on the frame line?
Thanks.
There're many default constant values in fe.h which are important for recognition. My question is that can some of them be modified based on actual input speech data. Take DEFAULT_FRAME_RATE and DEFAULT_WINDOW_LENGTH as examples:

1. DEFAULT_FRAME_RATE is defined as 100. However, the speech FPS is 160 in my case, can I just simply change it to 160?
2. DEFAULT_WINDOW_LENGTH is defined as 0.025625, can I change it to 0.01 which means 10ms ?

Memory allocation error on ps_search_step 

while ((nfr = acmod_process_raw(acmod1, &bptr, &nread, TRUE)) > 0) {
while (acmod1->n_feat_frame > 0) {
ps_search_step(ngs1, acmod1->output_frame);
acmod_advance(acmod1);
}
fprintf(stderr, "\nprocessed %d frames\n", nfr);
}

device: iPhone 7plus, iOS11+

Following is the crash log.

Crashed: NSOperationQueue 0x1c4036ee0 (QOS: UNSPECIFIED)
0 libsystem_kernel.dylib 0x1818612e0 pthread_kill + 8
1 libsystem_pthread.dylib 0x181a02288 pthread_kill$VARIANT$mp + 376
2 libsystem_c.dylib 0x1817cfd0c abort + 140
3 libsystem_malloc.dylib 0x1818a77d4 nano_ptr_in_use_enumerator + 330
4 libsystem_malloc.dylib 0x1818a9bd4 nano_malloc_check_clear + 416
5 libsystem_malloc.dylib 0x1818a8a1c nano_calloc + 80
6 libsystem_malloc.dylib 0x18189a02c malloc_zone_calloc + 168
7 libsystem_malloc.dylib 0x181899f60 calloc + 40
8 SpeechDecoding 0x101055314 _ckd_calloc + 1263988
9 SpeechDecoding 0x10105a13c glist_add_ptr + 1283996
10 SpeechDecoding 0x101005aa8 fsg_history_entry_add + 938248
11 SpeechDecoding 0x101007c00 fsg_search_null_prop + 946784
12 SpeechDecoding 0x10100798c fsg_search_step + 946156
13 SpeechDecoding 0x100e44c2c test_decode_ptm (phone_decode.c:76)
14 SpeechDecoding 0x100e450a8 execute_phone_sequence_ptm (phone_decode.c:283)
15 SpeechDecoding 0x100e4774c runPhoneSequence (PocketSphinxProcessor.m:212)
16 SpeechDecoding 0x100df3628 -[PocketSphinxManager runPLDecoderForRecordingFile:allpFile:mlqFlag:oneWordFlag:]
(PocketSphinxManager.m:1199)
17 SpeechDecoding 0x100df3950 -[PocketSphinxManager runPLDecoderForRecordingFile:outFDir:mlqFlag:oneWordFlag:]
(PocketSphinxManager.m:1255)
18 SpeechDecoding 0x100df1fa0 80-[PocketSphinxManager processPronunciationForRecordingFileAsync:phrase:outFDir:]block_invoke.226 (PocketSphinxManager.m:660)
19 Foundation 0x182802e88 _NSBLOCKOPERATION_IS_CALLING_OUT_TO_A_BLOCK + 16
20 Foundation 0x1827448d0 -[NSBlockOperation main] + 72
21 Foundation 0x182743cac -[__NSOperationInternal _start:]
+ 848
22 Foundation 0x18280476c __NSOQSchedule_f + 404
23 libdispatch.dylib 0x1816cca60 _dispatch_client_callout + 16
24 libdispatch.dylib 0x1816d4e94 _dispatch_continuation_pop$VARIANT$mp + 424
25 libdispatch.dylib 0x1816d37cc _dispatch_async_redirect_invoke$VARIANT$mp + 604
26 libdispatch.dylib 0x1816d9cac _dispatch_root_queue_drain + 588
27 libdispatch.dylib 0x1816d99fc _dispatch_worker_thread3 + 120
28 libsystem_pthread.dylib 0x1819fffac _pthread_wqthread + 1176
29 libsystem_pthread.dylib 0x1819ffb08 start_wqthread + 4
Hello,

Running ./configure && make && make install  with today's git results in ./lib/python2.7/site-packages/pocketsphinx being created, but not a pocketsphinx.egg-info file installed. It means that one can't use

    $ python
    >>> from pkg_resources import require
    >>> require("pocketsphinx")

to depend on pocketsphinx, and apparently poses problem to at least some applications (see https://bugs.debian.org/868346).

Samuel
acmod.c: In function ‘acmod_read_scores’:
acmod.c:1037:56: error: macro "E_DEBUG" passed 3 arguments, but takes just 2
             acmod->senscr_frame, acmod->n_senone_active);


Hi Nshmyrev,

I need some assistance regarding this.  Am I supposed to drag both the sphinxbase and pocketsphinx folders directly into the project?  I'm still struggling to get this working, and I'm not familiar with dragging C code directly into a project I'm using Swift as the language.  Can you provide me detailed steps to directly incorporate the pocketsphinx sources properly into an iOS app?

