umi动态路由加载model会导致takeLatest无效，还是按takeEvery发起


1.进入一个动态加载的页面发起请求，请求延迟执行
2.退出页面再重新进入1页面，延迟请求的put操作会执行
## 背景
When i looking in some code base, I see in handleAction of the reducer, so I think using Array.reduce is not performance than just get the handle of an action by key and then just return the handle.
[dva-core/src/handleActions.js](https://github.com/dvajs/dva/blob/master/packages/dva-core/src/handleActions.js)
```js

function handleActions(handlers, defaultState) {
  const reducers = Object.keys(handlers).map(type => handleAction(type, handlers[type]));
  const reducer = reduceReducers(...reducers);
  return (state = defaultState, action) => reducer(state, action);
}

```

> 描述你希望解决的问题的现状，附上相关的 issue 地址

## 思路
my solution is just get the handle and return it;

```js

function handleActions(handlers, defaultState) {
  return (state = defaultState, action) => {
    const { type } = action;
    return type && handlers[type] && handlers[type](state, action) || state;
  }
}

```
> 描述大概的解决思路，可以包含 API 设计和伪代码等

## 跟进

- [ ] some task
- [ ] PR URL

使用的antd库，在state内定义好了下面对象，现在想要当onChange时，执行reducers或effects内的方法，该怎么做呢
 pagination: {
            pageSize: 10,
            current: 1,
            total: 0,
            onChange: (page, pageSize) => {
            }
        }
<!--
Thank you for your pull request. Please review below requirements.
Bug fixes and new features should include tests.
Contributors guide: https://github.com/dvajs/dva/blob/master/CONTRIBUTING.md

感谢您贡献代码。请确认下列 checklist 的完成情况。
Bug 修复和新功能必须包含测试。
Contributors guide: https://github.com/dvajs/dva/blob/master/CONTRIBUTING.md
-->

##### Checklist

<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->

- [x] `npm test` passes
- [ ] tests are included
- [ ] documentation is changed or added
- [ ] commit message follows commit guidelines


##### Description of change

<!-- Provide a description of the change below this comment. -->

- any feature?
- close https://github.com/dvajs/dva/ISSUE_URL

<!--
感谢您向我们反馈问题，为了高效的解决问题，我们期望你能提供以下信息：
-->

## What happens?

请问有多个Model，当dispatch一个action更新了state后，dva会render哪些组件呢？
比如user Model的dispatch更新了currentUser之后，就会render所有connect user Model的组件吗？


<!--
感谢您向我们反馈问题，为了高效的解决问题，我们期望你能提供以下信息：
-->

## What happens?

<!-- 清晰的描述下遇到的问题。-->

## 最小可复现仓库

> 请使用 `yarn create umi` 创建，选择 `app`，然后选上 `dva`，并上传到你的 GitHub 仓库

<!-- https://github.com/YOUR_REPOSITORY_URL -->

## 复现步骤，错误日志以及相关配置

<!-- 请提供复现步骤，错误日志以及相关配置 -->
<!-- 可以尝试不要锁版本，重新安装依赖试试先 -->


## 相关环境信息

- **Umi 版本**：
- **Node 版本**：
- **操作系统**：

如题，在dva配置项中已经配置了extraReducers: { form: formReducer }, 
同时在组件导出的时候。
export default reduxForm({  // 使用reduxForm()方法
  form: 'testReduxForm',  // 表单的名字
})(testForm);
编译报错无法找到store

``` 
export interface EffectsCommandMap {
  put: <A extends AnyAction>(action: A) => any,
  call: Function,
  select: Function,
  take: Function,
  cancel: Function,
  [key: string]: any,
}
```

这几个方法参数没有校验，在编写代码时候很容易因为参数改变出错。
我看了下saga的typing，别人是有完善的定义

```
export function select(): SelectEffect
export function select<Fn extends (state: any, ...args: any[]) => any>(
  selector: Fn,
  ...args: Tail<Parameters<Fn>>
): SelectEffect

export type SelectEffect = SimpleEffect<'SELECT', SelectEffectDescriptor>

export interface SelectEffectDescriptor {
  selector(state: any, ...args: any[]): any
  args: any[]
}


 * @param fn A Generator function, or normal function which either returns a
 *   Promise as result, or any other value.
 * @param args An array of values to be passed as arguments to `fn`
 */
export function call<Fn extends (...args: any[]) => any>(fn: Fn, ...args: Parameters<Fn>): CallEffect
/**
 * Same as `call([context, fn], ...args)` but supports passing a `fn` as string.
 * Useful for invoking object's methods, i.e.
 * `yield call([localStorage, 'getItem'], 'redux-saga')`
 */
export function call<Ctx extends { [P in Name]: (this: Ctx, ...args: any[]) => any }, Name extends string>(
  ctxAndFnName: [Ctx, Name],
  ...args: Parameters<Ctx[Name]>
): CallEffect
/**
 * Same as `call([context, fn], ...args)` but supports passing `context` and
 * `fn` as properties of an object, i.e.
 * `yield call({context: localStorage, fn: localStorage.getItem}, 'redux-saga')`.
 * `fn` can be a string or a function.
 */
export function call<Ctx extends { [P in Name]: (this: Ctx, ...args: any[]) => any }, Name extends string>(
  ctxAndFnName: { context: Ctx; fn: Name },
  ...args: Parameters<Ctx[Name]>
): CallEffect
/**
 * Same as `call(fn, ...args)` but supports passing a `this` context to `fn`.
 * This is useful to invoke object methods.
 */
export function call<Ctx, Fn extends (this: Ctx, ...args: any[]) => any>(
  ctxAndFn: [Ctx, Fn],
  ...args: Parameters<Fn>
): CallEffect
/**
 * Same as `call([context, fn], ...args)` but supports passing `context` and
 * `fn` as properties of an object, i.e.
 * `yield call({context: localStorage, fn: localStorage.getItem}, 'redux-saga')`.
 * `fn` can be a string or a function.
 */
export function call<Ctx, Fn extends (this: Ctx, ...args: any[]) => any>(
  ctxAndFn: { context: Ctx; fn: Fn },
  ...args: Parameters<Fn>
): CallEffect

export type CallEffect = SimpleEffect<'CALL', CallEffectDescriptor>
```

onError的参数err，ts类型校验是什么？在哪里可以找得到呢有文档的话给一份地址多谢
dva脚手架，能否使webpack一样，可以module.export组件出去，提供给别人使用
目前我看到在index.js里面，包括了dva初始化，router, model, statr等功能，如果要做成组件，该部分如何修改了，有知道的大侠没呢，感谢！