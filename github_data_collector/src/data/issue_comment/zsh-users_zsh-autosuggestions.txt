### Describe the bug
Hi
I've noticed that using the completion feature of zsh-autosuggestions under Cygwin, makes the prompt completly unresponsive. 
I'm aware of the slowness of cygwin's fork(), and using the history strategy, there's a small lag when typing , but after adding the completion option, the prompt will stop responding to any character typed.
Only solution I've found is to close the current shell and open a new one.

### To Reproduce
Steps to reproduce the behavior:
```sh
% zsh -df
% source path/to/zsh-autosuggestions.zsh
% ZSH_AUTOSUGGEST_STRATEGY=(completion)
```

### Expected behavior
Typing characters/commands on the prompt, should work normally (little lag is acceptable)

### Desktop
 - OS + distribution: Windows 7 + Cygwin 3.1.2 (Tried both 32bit and 64bit)
 - Zsh version: 5.5.1
 - Plugin version: 0.63

Hi. I've tried to define a custom wiget for my zsh. Basically - it's not working, autocompletion does not work. Config is rather straightforward


```zsh
function autosuggest-partial-accept {
   CURSOR+=1
}
zle -N autosuggest-partial-accept
bindkey -v '^g' autosuggest-partial-accept
```

```zsh
ZSH_AUTOSUGGEST_PARTIAL_ACCEPT_WIDGETS=(
      autosuggest-partial-accept
)
```

What am I supposed to do, in order to get it to work? Thanks in advance

It's not actually a bug report, or a feature request. It's more like a requst for the help

### Describe the bug

When installing `zsh-autosuggestions` for `oh-my-zsh` on **raspberry pi 3B raspbian (jessie)**, it fails to understand the `{ZSHCUSTOM:-` part in the install script, and so fails to correctly install the plugin.

### To Reproduce

On raspberry (jessie) do as follows:
1. Install `zsh-autosuggestions` plugin for `oh-my-zsh` using command bellow:

```shell
git clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions
```

2. add `zsh-autosuggestions` to plugins section in `~/.zshrc` and do `source ~/.zshrc`.

3. restart the terminal and a warning saying `[oh-my-zsh] plugin 'zsh-autosuggestions' not found` is displayed.

4. check the `~/.oh-my-zsh/custom/plugins` and `~/.oh-my-zsh/plugins` directories. 

### Expected behavior

It should have created `zsh-autosuggestions` directory in `~/.oh-my-zsh/custom/plugins` instead of creatign a wrong directory called `{ZSHCUSTOM:-` in `~/.oh-my-zsh/plugins`.

### Screenshots

![Screenshot_2](https://user-images.githubusercontent.com/29674767/70334452-b6219980-185a-11ea-9a63-e39170b3ce05.png)

### Desktop
 - OS + distribution: Raspbian GNU/Linux 8 (jessie)
 - Zsh version: 5.0.7
 - Plugin version: d43c309
### Describe the bug
There are conflicted between `zsh-users/zsh-syntax-highlighting` and `zsh-users/zsh-autosuggestions`. With both plugins activated, if one continuously uses `ZSH_AUTOSUGGEST_PARTIAL_ACCEPT_WIDGETS`, the last word of the suggestion will be duplicated.

### To Reproduce
Steps to reproduce the behavior:
```sh
% zsh -df
% source path/to/zsh-autosuggestions.zsh
% source path/to/zsh-syntax-highlighting.plugin.zsh
% export WORDCHARS='*?_[]~=&;!#$%^(){}'
% cd Test1/Test2
```
Now, input `cd` and continuously use `ZSH_AUTOSUGGEST_PARTIAL_ACCEPT_WIDGETS` until the end of the line. Instead of get the complete `Test1/Test2`, the `Test2` part will be duplicated.

### Expected behavior
```sh
cd Test1/Test2
```

### Actual behavior
```
cd Test1/Test2Test2
```

### Desktop
 - OS + distribution: macOS 10.15.1
 - Zsh version: 5.7.1
 - Plugin version: d43c309f888153d6c46d8b6a3a0186f4148680fd


### Describe the bug

I load this plugin in the background, after `precmd` hook.
This plugin runs `_zsh_autosuggest_start`  after `precmd`.
So, first prompt will be without autosuggestions. 

### To Reproduce
Steps to reproduce the behavior:
```sh
TMOUT=1

TRAPALRM() {
  source $PATH_TO_PLUGIN/zsh-autosuggestions.plugin.zsh
}
```

<!-- If you are not able to reproduce it by running `zsh -df` and sourcing the plugin manually, it means there that the issue is caused by something in your local config file(s). Temporarily comment out or remove sections of your config and restart `zsh` until you narrow down exactly what is causing the issue. -->

### Expected behavior
<!-- A clear and concise description of what you expected to happen. -->

After initialization, the plugin must run `_zsh_autosuggest_bind_widgets` directly

The plugin currently auto-suggests `\[` on blank lines for every whitespace character.  It is just a cosmetic thing, but I don't like it.

My zsh currently auto-inserts a space after every completion, and zsh-autosuggestions will autosuggest in all of these instances as well.  But, in >50% of these cases, I do not want an additional completion, and I just want to open the tab-completed file in vim, for instance.

Maybe this is a little clearer:
1. `vim file1<tab>` autocompletes to `vim file1.txt <space><autosuggestion>file2.txt</autosuggestion>`

Can I disable autosuggestions on whitespace characters (and for a single keystroke after all tab-completions), and re-enable for all other keypresses, or something like that?  Or maybe you have other suggestions to fix my configuration?

I tried ` bindkey " " autosuggest-disable` but it eats up my space. 

Thanks.
### Describe the bug
`
zsh prompt becomes very slow after multiple times of "source ~/.zshrc". I suspect it's the widgets of "_zsh_autosuggest_bound_#n_*" slowing zsh down, because after every time I do "source ~/.zshrc" the number of these widgets increases. For example when a new shell starts only widgets of "_zsh_autosuggest_bound_1_*" are registered, and after a second "source ~/.zshrc" widgets of "_zsh_autosuggest_bound_2_*" are added.
`
I use oh-my-zsh to load this plugin.

### To Reproduce
Do this for 10 to 20 times:
```
$ source ~/.zshrc
```

### Desktop
 - OS + distribution: debian
 - Zsh version: 5.7
 - Plugin version: 43f3bc40

I have frequent cases in my workflow where I never use current suggestions : when I want to revert/cherry-pick a commit I usually put the commit hash in my clipboard first then `git revert` ... it would make sense to suggest here the hash which is in my clipboard.

Feel free to close the issue if it is outside of the scope of the plugin (as _"It suggests commands based on history and completions."_)
Should run ‘make’ and check if zsh-autosuggestions.zsh changes.
Autosuggest suggests me files that don't exist in this directory, e.g.

```
foo$ vim foofile
foo$ cd bar
foo/bar$ vim |
```

at the `|` point autosuggest is suggesting me `foofile` even though it doesn't exist in `foo/bar`.

For commands that work on paths I want to only be shown valid paths (from the current directory).

Can I make the suggestions more intelligent to solve this problem?