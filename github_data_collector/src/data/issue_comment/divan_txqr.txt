The encoders and decoders do base64 encoding of the binary data. The blog post says that this is so that only alphanumeric data is passed to the QR encoder. I assume this is because QR has an alphanumeric mode to more efficiently encode "alphanumeric" data. However, base64 encoding doesn't help for this because the QR "alphanumeric" encoding doesn't encode e.g., lower case letters, only 0-9, A-Z, $%*+-./: and space . I suggest to skip the base64 step to reduce the data size and improve performance.

In https://github.com/google/gofountain there are various fountain codes that you could test to see which is more efficient.
- [ ] Binary
- [ ] Luby
- [x] Mersenne (used by current versions of txqr)
- [ ] Online
- [ ] Raptor (the best according to Wikipedia)

And also there are other newer algorithms to test
- [ ] https://github.com/catid/wirehair
- [ ] https://github.com/catid/fecal
- [ ] https://github.com/cakemanny/fountain-codes
Adding this to https://github.com/hydrusnetwork/hydrus and associated mobile apps would be useful.  
Hydrus is written in Python, BooruNav, AnimeBoxes and Nori are on Android, Mignori is on iOS
you can use FLutter and talk from flutter to golang / gomobile.
Then you eliminate all swift.

Here is one example:
https://github.com/empirefox/flutter_dial_go

there are a few others out there.

Showing a Camera view to scan the QR code with flutter is quite easy.



There are ways to increase the data transmission rate of TxQR by using color.  
Currently both JABCode and HiQ have released sources for such items, and OpenCV is considering to add them to their repo.

JABCode: https://github.com/jabcode/jabcode
HiQ: https://github.com/ouyangzhibo/HiQ-Robust-and-Fast-Decoding-of-High-Capacity-Color-QR-Codes

It would be nice if TxQR generates files that are share-able as a GIF, APNG and/or WebP for image sharing websites like twitter, Imgur and more.