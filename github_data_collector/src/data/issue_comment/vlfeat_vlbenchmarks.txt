Repeatability:
Method name:	Img#02	Img#03	Img#04	Img#05	Img#06
       SIFT:	  0.00	  0.00	  0.00	  0.00	  0.00
 SIFT PT=10:	  0.00	  0.00	  0.00	  0.00	  0.00
       MSER:	  0.00	  0.00	  0.00	  0.00	  0.00

Number of correspondences:
Method name:	Img#02	Img#03	Img#04	Img#05	Img#06
       SIFT:	  0.00	  0.00	  0.00	  0.00	  0.00
 SIFT PT=10:	  0.00	  0.00	  0.00	  0.00	  0.00
       MSER:	  0.00	  0.00	  0.00	  0.00	  0.00
`localFeatures.VlFeatMser` was manually extracting bright on dark and dark
on bright MSER features by calling `vl_mser()` twice. However, `vl_mser()`
extracts both types of features by default, causing
`localFeatures.VlFeatMser.extractFeatures()` to always return two copies
of the same feature.

is it possible to have multithreading when descriptors are matched?

Here is my proposal for a program design that allows VLBenchmarks to support the DTU Robot dataset.

Some notes:
- I have changed the code just enough to get it working. Further refactoring is required for a cleaner interfaces between the dataset and the benchmark classes. Moreover, I have not updated the documentation as I suspect the design is likely to change again. 
- All ground truth related code has been moved to the dataset class. The most notable downside of this refactoring is that it requires some parameters from RepeatabilityBencmark to be moved to the dataset class where they arguably do not belong (e.g. 'warpMethod'). A more elegant approach would be to refactor the ground truth matching code into its own class. However, this will lead to a more complex program design.
- I have changed the dataset class such that it supports multiple images per label per category. This is needed for datasets like DTU Robot where multiple scenes are photographed with identical perturbation scenarios. The evaluation scores are then averaged over the scenes.
