
This will allow to connect to databases that requires unix socket connection like Google Cloud SQL.
Is this config parameter expected to work with the current jasync MySQL driver? I 'm convinced it was running before and it is referenced here MemSQLTest.java in this repo but new I think I was mistaken. I didn't see where in the source it's handled and it seems to go unused in assembleConfiguration().

If not I'd love to implement it for you, but a nudge in the right direction would help, thanks!
I don't want a dependency on JodaTime for my projects, so I decided to start fixing #131 

TODO:
[x] Common library
[x] MySQL
[x] Fix TimestampEncoder
[ ] Fix MySQL tests
[] Postgres
[] Fix Postgres tests

Looking for comments on this before I finish the whole thing (ideally from someone who has in depth knowledge of `java.time`) - I'm not 100% sure I've converted the calls successfully in some cases. Mostly followed this as a guide: https://blog.joda.org/2014/11/converting-from-joda-time-to-javatime.html

Implementation notes:
~TimestampEncoder is definitely broken, probably need to use ZonedDateTime instead of LocalDateTime etc. Will take a look at it later and resolve.~ Even though TimestampEncoder assumes no time zone, it formats times using a 'Z' suffix to represent the UTC timezone. As such, I had to make it use `ZonedDateTime` otherwise a formatting exception would occur at runtime.

Cheers
It would be great if it was possible to support streaming out results from postgresql as it has the potential to reduce memory usage and improve perfomance. libpq supports this as is documented here: https://www.postgresql.org/docs/current/libpq-single-row-mode.html and so do other libraries based on that. 

I am not sure how much effort it would requre but if it being based on `Flow` (https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.flow/-flow/index.html) that would probably be the most natural fit for the kotlin ecosystem.
Looking at https://gist.github.com/valyala/ae3cbfa4104f1a022a2af9b8656b1131 and various other reports it seems that `COPY tableName FROM STDIN` is the fasted when it comes to inserting a lot of data to postgresql, but it requires support from the driver. As far as I can see this is not supported currently. Is there a chance though for this to be implemented?
I think we should use `java.time.*` classes instead of joda-time