Fill property doesn't work on StepLineSeries. There's other way to set a "Background" to the StepLineSeries?

<table>
<tr>
    <td>Live-Charts version</td>
    <td>last</td>
</tr>
<tr>
    <td>.Net Version</td>
    <td>4.7.2</td>
</tr>
<tr>
    <td>Windows</td>
    <td>windows 10</td>
</tr>
</table>

Hi beto! Is possible to implement an absolute MinValue and MaxValue on livecharts "X" axis?

What i need is to avoid the user to scroll over a certain value.

<table>
<tr>
    <td>Live-Charts version</td>
    <td>i got the last</td>
</tr>
<tr>
    <td>.Net Version</td>
    <td>4.7.2</td>
</tr>
<tr>
    <td>Windows</td>
    <td>windows 10 pro</td>
</tr>
</table>

Hi, 

I have similar problem as described in [https://github.com/Live-Charts/Live-Charts/issues/118] .

I am using the latest version (0.9.7) of LiveCharts (with Geared 1.2.8.2) and the chart tooltips do not go away by themselves, they stay indefinitely. I tried using ToolTipTimeout property, but is has no effect.
Any advice how to make the tooltips close automatically?

Thanks,

Yuri
How to use "cartesianChart1.DataTooltip.SelectionMode = LiveCharts.TooltipSelectionMode.OnlySender" in winforms as per https://lvcharts.net/App/examples/v1/wf/Tooltips%20and%20Legends

As get error "SelectionMode" is not a member of "UserControl"
Hi,

I define and bind labels like this: 

```
// code
Labels = new[] { "A1", "A2", "A3" };

// xaml
<lvc:CartesianChart.AxisX>
        <lvc:Axis ShowLabels="True" Labels="{Binding Labels}" FontSize="14">
                <lvc:Axis.Separator>
                        <lvc:Separator Step="1" />
                </lvc:Axis.Separator>
        </lvc:Axis>
</lvc:CartesianChart.AxisX>
```

I need to change these Labels' Foreground and Background Color on runtime. Is it even possible?

Hello can these be made as View Components with Web Hooks so they can we used inside ASP Core 3.1 widgets with tag helpers
Hi
I was trying to use livehcarts in one of my application with xamarin , to make it runnable as an app in all the platforms , does this work ? 
I had issue , when I tried to install livecharts in nuget inside my application , it was complaining that , livecharts does not work with android or ios ?
Best regards

Instructions: replace text surrounded by '*' with your case, please delete this line.

#### How to reproduce?

*Explain how we can get this issue, if you created a repo with the issue, please add the link, blank if you are submitting a suggestion or improvement*

#### Extra notes

*Explain what you expect, feedback, images or anything you consider necessary*

#### I am using

<table>
<tr>
    <td>Live-Charts version</td>
    <td>*your Live-Charts version here*</td>
</tr>
<tr>
    <td>.Net Version</td>
    <td>*your .net version here*</td>
</tr>
<tr>
    <td>Windows</td>
    <td>*your windows version here*</td>
</tr>
</table>

#### How to reproduce?

The ChartLegend.Background property within the CartecianChart object doesn't change the colour of the Legend fill/background (see image)

My task is that I am exporting the chart to a png, and thus I require either a white or transparent background. Below, in the code, I have a variable called `color` which is correctly a `SolidBrushColor`.

When set to transparent by:
```cs var color = new SolidColorBrush(Colors.Transparent);```
The background is correct and transparent, however, the background of the inner chart legend is not, and remains white,

This is how I am assigning the color:
```cs
var chart = new CartesianChart
{
    // Other code,
    Background = color,
    ChartLegend =
    {
        Background = color
    }
};
```

This is the result of a transparent render (note the image may appear white with Github's white background):
![Image with transparent background](https://user-images.githubusercontent.com/35803538/71303118-65886f80-2408-11ea-8e27-2d503e610676.png)


#### I am using

<table>
<tr>
    <td>Live-Charts version</td>
    <td>0.9.7</td>
</tr>
<tr>
    <td>.Net Version</td>
    <td>.NET Framework 4.7.2</td>
</tr>
<tr>
    <td>Windows</td>
    <td>Windows 10 10.0.18362 Build 18362</td>
</tr>
</table>

#### How to reproduce?

I'm using Live-Charts in a WPF application, which monitors a Linux OS via a SSH connection for displaying some dashboard-like data (CPU, RAM, HDD usage). 
After a network reconnect (e.g. network connection of lost for a short time), DataContext is reset with a new instance of my ViewModel and here I get a NullReferenceException as listed below.

The exception looks to be quite deep down in .NET (excuse me if I'm wrong) and it also is not catched for some reason - the application exits afterwards.

UIElement.UpdateLayout() which is called in line 465 for MeasureTextBlock in Gauge.cs `MeasureTextBlock.UpdateLayout();` looks like it's the "origin of the problem" for me. I tried to debug UniformGrid and saw that some children of this panel are indeed null when DataContext is set and UpdateLayout is called. 
Microsoft states on [UpdateLayout ](https://docs.microsoft.com/en-us/dotnet/api/system.windows.uielement.updatelayout?view=netframework-4.8)

> You should only call UpdateLayout if you absolutely need updated sizes and positions, and only after you are certain that all changes to properties that you control and that may affect layout are completed.

I'm not sure if this can be predicted when working with data bindings. 

When debugging Gauge.cs I found, that the MeasureTextBlock's IsVisible property is set to false when the crash occurs, so as a Workaround I replaced:
```
MeasureTextBlock.UpdateLayout();
Canvas.SetTop(MeasureTextBlock, top - MeasureTextBlock.ActualHeight * (Uses360Mode ? .5 : 1));
Canvas.SetLeft(MeasureTextBlock, ActualWidth / 2 - MeasureTextBlock.ActualWidth / 2);
```
by 
```
if (MeasureTextBlock.IsVisible)
{
    MeasureTextBlock.UpdateLayout();
    Canvas.SetTop(MeasureTextBlock, top - MeasureTextBlock.ActualHeight * (Uses360Mode ? .5 : 1));
    Canvas.SetLeft(MeasureTextBlock, ActualWidth / 2 - MeasureTextBlock.ActualWidth / 2);
}
```
and additionally, I added the following line to the constructor of Gauge:

`MeasureTextBlock.IsVisibleChanged += (sender, args) => Update();`

This works for my use-case but I'm curious if you have any thoughts on this. 
To be complete, I guess this would be the same for LeftLabel and RightLabel, but as I'm using the control in 360 mode it's not relevant for my scenario.

Unfortunately, I was not able to replicate this in a small WPF project, so probably it's related to different threads updating the ViewModel or similar. I'm not able to share the full code, but I added parts of the XAML below which may give a better idea of how Live-Charts is used here.

Many thanks in advance.

#### Extra notes

Exception

```
System.NullReferenceException: Referencia a objeto no establecida como instancia de un objeto.
   en System.Windows.Controls.Primitives.UniformGrid.UpdateComputedValues()
   en System.Windows.Controls.Primitives.UniformGrid.MeasureOverride(Size constraint)
   en System.Windows.FrameworkElement.MeasureCore(Size availableSize)
   en System.Windows.UIElement.Measure(Size availableSize)
   en System.Windows.ContextLayoutManager.UpdateLayout()
   en System.Windows.UIElement.UpdateLayout()
   en LiveCharts.Wpf.Gauge.Update() en C:\Project\Live-Charts\WpfView\Gauge.cs:línea 465
   en LiveCharts.Wpf.Gauge.UpdateCallback(DependencyObject dependencyObject, DependencyPropertyChangedEventArgs dependencyPropertyChangedEventArgs) en C:\Project\Live-Charts\WpfView\Gauge.cs:línea 376
   en System.Windows.DependencyObject.OnPropertyChanged(DependencyPropertyChangedEventArgs e)
   en System.Windows.FrameworkElement.OnPropertyChanged(DependencyPropertyChangedEventArgs e)
   en System.Windows.DependencyObject.NotifyPropertyChange(DependencyPropertyChangedEventArgs args)
   en System.Windows.DependencyObject.UpdateEffectiveValue(EntryIndex entryIndex, DependencyProperty dp, PropertyMetadata metadata, EffectiveValueEntry oldEntry, EffectiveValueEntry& newEntry, Boolean coerceWithDeferredReference, Boolean coerceWithCurrentValue, OperationType operationType)
   en System.Windows.DependencyObject.InvalidateProperty(DependencyProperty dp, Boolean preserveCurrentValue)
   en System.Windows.StyleHelper.InvalidateResourceDependentsForChild(DependencyObject container, DependencyObject child, Int32 childIndex, ResourcesChangeInfo info, FrameworkTemplate parentTemplate)
   en System.Windows.TreeWalkHelper.InvalidateStyleAndReferences(DependencyObject d, ResourcesChangeInfo info, Boolean containsTypeOfKey)
   en System.Windows.TreeWalkHelper.OnResourcesChanged(DependencyObject d, ResourcesChangeInfo info, Boolean raiseResourceChangedEvent)
   en System.Windows.FrameworkElement.OnAncestorChangedInternal(TreeChangeInfo parentTreeState)
   en System.Windows.TreeWalkHelper.OnAncestorChanged(DependencyObject d, TreeChangeInfo info, Boolean visitedViaVisualTree)
   en System.Windows.DescendentsWalker`1._VisitNode(DependencyObject d, Boolean visitedViaVisualTree)
   en MS.Internal.PrePostDescendentsWalker`1._VisitNode(DependencyObject d, Boolean visitedViaVisualTree)
   en System.Windows.DescendentsWalker`1.VisitNode(FrameworkElement fe, Boolean visitedViaVisualTree)
   en System.Windows.DescendentsWalker`1.VisitNode(DependencyObject d, Boolean visitedViaVisualTree)
   en System.Windows.DescendentsWalker`1.WalkLogicalChildren(FrameworkElement feParent, FrameworkContentElement fceParent, IEnumerator logicalChildren)
   en System.Windows.DescendentsWalker`1.WalkFrameworkElementLogicalThenVisualChildren(FrameworkElement feParent, Boolean hasLogicalChildren)
   en System.Windows.DescendentsWalker`1.IterateChildren(DependencyObject d)
   en System.Windows.DescendentsWalker`1._VisitNode(DependencyObject d, Boolean visitedViaVisualTree)
   en MS.Internal.PrePostDescendentsWalker`1._VisitNode(DependencyObject d, Boolean visitedViaVisualTree)
   en System.Windows.DescendentsWalker`1.VisitNode(FrameworkElement fe, Boolean visitedViaVisualTree)
   en System.Windows.DescendentsWalker`1.VisitNode(DependencyObject d, Boolean visitedViaVisualTree)
   en System.Windows.DescendentsWalker`1.WalkLogicalChildren(FrameworkElement feParent, FrameworkContentElement fceParent, IEnumerator logicalChildren)
   en System.Windows.DescendentsWalker`1.WalkFrameworkElementLogicalThenVisualChildren(FrameworkElement feParent, Boolean hasLogicalChildren)
   en System.Windows.DescendentsWalker`1.IterateChildren(DependencyObject d)
   en System.Windows.DescendentsWalker`1._VisitNode(DependencyObject d, Boolean visitedViaVisualTree)
   en MS.Internal.PrePostDescendentsWalker`1._VisitNode(DependencyObject d, Boolean visitedViaVisualTree)
   en System.Windows.DescendentsWalker`1.VisitNode(FrameworkElement fe, Boolean visitedViaVisualTree)
   en System.Windows.DescendentsWalker`1.VisitNode(DependencyObject d, Boolean visitedViaVisualTree)
   en System.Windows.DescendentsWalker`1.WalkFrameworkElementLogicalThenVisualChildren(FrameworkElement feParent, Boolean hasLogicalChildren)
   en System.Windows.DescendentsWalker`1.IterateChildren(DependencyObject d)
   en System.Windows.DescendentsWalker`1.StartWalk(DependencyObject startNode, Boolean skipStartNode)
   en MS.Internal.PrePostDescendentsWalker`1.StartWalk(DependencyObject startNode, Boolean skipStartNode)
   en System.Windows.TreeWalkHelper.InvalidateOnTreeChange(FrameworkElement fe, FrameworkContentElement fce, DependencyObject parent, Boolean isAddOperation)
   en System.Windows.FrameworkElement.OnVisualParentChanged(DependencyObject oldParent)
   en System.Windows.Media.Visual.FireOnVisualParentChanged(DependencyObject oldParent)
   en System.Windows.Media.Visual.RemoveVisualChild(Visual child)
   en System.Windows.Media.VisualCollection.DisconnectChild(Int32 index)
   en System.Windows.Media.VisualCollection.RemoveRange(Int32 index, Int32 count)
   en System.Windows.Controls.UIElementCollection.RemoveRangeInternal(Int32 index, Int32 count)
   en System.Windows.Controls.Panel.OnItemsChangedInternal(Object sender, ItemsChangedEventArgs args)
   en System.Windows.Controls.Panel.OnItemsChanged(Object sender, ItemsChangedEventArgs args)
   en System.Windows.Controls.ItemContainerGenerator.OnItemRemoved(Object item, Int32 itemIndex)
   en System.Windows.Controls.ItemContainerGenerator.OnCollectionChanged(Object sender, NotifyCollectionChangedEventArgs args)
   en System.Windows.WeakEventManager.ListenerList`1.DeliverEvent(Object sender, EventArgs e, Type managerType)
   en System.Windows.WeakEventManager.DeliverEvent(Object sender, EventArgs args)
   en System.Collections.Specialized.CollectionChangedEventManager.OnCollectionChanged(Object sender, NotifyCollectionChangedEventArgs args)
   en System.Collections.Specialized.NotifyCollectionChangedEventHandler.Invoke(Object sender, NotifyCollectionChangedEventArgs e)
   en System.Windows.Data.CollectionView.OnCollectionChanged(NotifyCollectionChangedEventArgs args)
   en System.Windows.Controls.ItemCollection.OnViewCollectionChanged(Object sender, NotifyCollectionChangedEventArgs e)
   en System.Windows.WeakEventManager.ListenerList`1.DeliverEvent(Object sender, EventArgs e, Type managerType)
   en System.Windows.WeakEventManager.DeliverEvent(Object sender, EventArgs args)
   en System.Collections.Specialized.CollectionChangedEventManager.OnCollectionChanged(Object sender, NotifyCollectionChangedEventArgs args)
   en System.Windows.Data.CollectionView.OnCollectionChanged(NotifyCollectionChangedEventArgs args)
   en MS.Internal.Data.CompositeCollectionView.OnContainedCollectionChanged(Object sender, NotifyCollectionChangedEventArgs args)
   en System.Windows.Data.CompositeCollection.OnContainedCollectionChanged(Object sender, NotifyCollectionChangedEventArgs e)
   en System.Windows.WeakEventManager.ListenerList`1.DeliverEvent(Object sender, EventArgs e, Type managerType)
   en System.Windows.WeakEventManager.DeliverEvent(Object sender, EventArgs args)
   en System.Collections.Specialized.CollectionChangedEventManager.OnCollectionChanged(Object sender, NotifyCollectionChangedEventArgs args)
   en System.Windows.Data.CollectionContainer.OnContainedCollectionChanged(NotifyCollectionChangedEventArgs args)
   en System.Windows.Data.CollectionContainer.OnCollectionChanged(Object sender, NotifyCollectionChangedEventArgs e)
   en System.Windows.WeakEventManager.ListenerList`1.DeliverEvent(Object sender, EventArgs e, Type managerType)
   en System.Windows.WeakEventManager.DeliverEvent(Object sender, EventArgs args)
   en System.Collections.Specialized.CollectionChangedEventManager.OnCollectionChanged(Object sender, NotifyCollectionChangedEventArgs args)
   en System.Windows.Data.CollectionView.OnCollectionChanged(NotifyCollectionChangedEventArgs args)
   en System.Windows.Data.ListCollectionView.ProcessCollectionChangedWithAdjustedIndex(NotifyCollectionChangedEventArgs args, Int32 adjustedOldIndex, Int32 adjustedNewIndex)
   en System.Windows.Data.ListCollectionView.ProcessCollectionChanged(NotifyCollectionChangedEventArgs args)
   en System.Windows.Data.CollectionView.OnCollectionChanged(Object sender, NotifyCollectionChangedEventArgs args)
   en System.Collections.ObjectModel.ObservableCollection`1.OnCollectionChanged(NotifyCollectionChangedEventArgs e)
   en MyNamespace.Utils.Model.AsyncObservableCollection`1.<>n__0(NotifyCollectionChangedEventArgs e)
   en MyNamespace.Utils.Model.AsyncObservableCollection`1.<>c__DisplayClass8_0.<OnCollectionChanged>b__0() en C:\Project\Utils\Model\AsyncObservableCollection.cs:línea 52
   en MyNamespace.Utils.Model.AsyncObservableCollection`1.<>c__DisplayClass9_0.<ExecuteOnSyncContext>b__0(Object _) en C:\Project\Utils\Model\AsyncObservableCollection.cs:línea 63
   en System.Windows.Threading.ExceptionWrapper.InternalRealCall(Delegate callback, Object args, Int32 numArgs)
   en System.Windows.Threading.ExceptionWrapper.TryCatchWhen(Object source, Delegate callback, Object args, Int32 numArgs, Delegate catchHandler)
   en System.Windows.Threading.Dispatcher.LegacyInvokeImpl(DispatcherPriority priority, TimeSpan timeout, Delegate method, Object args, Int32 numArgs)
   en System.Windows.Threading.DispatcherSynchronizationContext.Send(SendOrPostCallback d, Object state)
   en MyNamespace.Utils.Model.AsyncObservableCollection`1.ExecuteOnSyncContext(Action action) en C:\Project\Utils\Model\AsyncObservableCollection.cs:línea 63
   en MyNamespace.Utils.Model.AsyncObservableCollection`1.OnCollectionChanged(NotifyCollectionChangedEventArgs e) en C:\Project\Utils\Model\AsyncObservableCollection.cs:línea 52
   en System.Collections.ObjectModel.ObservableCollection`1.RemoveItem(Int32 index)
   en MyNamespace.Utils.Model.AsyncObservableCollection`1.<>n__2(Int32 index)
   en MyNamespace.Utils.Model.AsyncObservableCollection`1.<>c__DisplayClass11_0.<RemoveItem>b__0() en C:\Project\Utils\Model\AsyncObservableCollection.cs:línea 74
   en MyNamespace.Utils.Model.AsyncObservableCollection`1.<>c__DisplayClass9_0.<ExecuteOnSyncContext>b__0(Object _) en C:\Project\Utils\Model\AsyncObservableCollection.cs:línea 63
   en System.Windows.Threading.ExceptionWrapper.InternalRealCall(Delegate callback, Object args, Int32 numArgs)
   en System.Windows.Threading.ExceptionWrapper.TryCatchWhen(Object source, Delegate callback, Object args, Int32 numArgs, Delegate catchHandler)
   en System.Windows.Threading.DispatcherOperation.InvokeImpl()
   en System.Windows.Threading.DispatcherOperation.InvokeInSecurityContext(Object state)
   en MS.Internal.CulturePreservingExecutionContext.CallbackWrapper(Object obj)
   en System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)
   en System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)
   en System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state)
   en MS.Internal.CulturePreservingExecutionContext.Run(CulturePreservingExecutionContext executionContext, ContextCallback callback, Object state)
   en System.Windows.Threading.DispatcherOperation.Invoke()
   en System.Windows.Threading.Dispatcher.ProcessQueue()
   en System.Windows.Threading.Dispatcher.WndProcHook(IntPtr hwnd, Int32 msg, IntPtr wParam, IntPtr lParam, Boolean& handled)
   en MS.Win32.HwndWrapper.WndProc(IntPtr hwnd, Int32 msg, IntPtr wParam, IntPtr lParam, Boolean& handled)
   en MS.Win32.HwndSubclass.DispatcherCallbackOperation(Object o)
   en System.Windows.Threading.ExceptionWrapper.InternalRealCall(Delegate callback, Object args, Int32 numArgs)
   en System.Windows.Threading.ExceptionWrapper.TryCatchWhen(Object source, Delegate callback, Object args, Int32 numArgs, Delegate catchHandler)
   en System.Windows.Threading.Dispatcher.LegacyInvokeImpl(DispatcherPriority priority, TimeSpan timeout, Delegate method, Object args, Int32 numArgs)
   en MS.Win32.HwndSubclass.SubclassWndProc(IntPtr hwnd, Int32 msg, IntPtr wParam, IntPtr lParam)
   en MS.Win32.UnsafeNativeMethods.DispatchMessage(MSG& msg)
   en System.Windows.Threading.Dispatcher.PushFrameImpl(DispatcherFrame frame)
   en System.Windows.Threading.Dispatcher.PushFrame(DispatcherFrame frame)
   en System.Windows.Application.RunDispatcher(Object ignore)
   en System.Windows.Application.RunInternal(Window window)
   en System.Windows.Application.Run(Window window)
   en System.Windows.Application.Run()
   en MyNamespace.App.Main(String[] args) en C:\Project\App.xaml.cs:línea 31
```

Sample XAML

```
<UserControl.Resources>
    <CollectionViewSource x:Key="cvsDisks"
                          Source="{Binding Diagnostic.Disks}" />
</UserControl.Resources>

<StackPanel>
    <ItemsControl>
        <ItemsControl.ItemsSource>
            <CompositeCollection>
                <GroupBox Header="CPU">
                    <StackPanel Orientation="Horizontal">
                        <lvc:Gauge Height="70"
                                   Width="70"
                                   Uses360Mode="True"
                                   From="0"
                                   To="100"
                                   AnimationsSpeed="0:0:0.5"
                                   Value="{Binding Diagnostic.CpuUsage}">
                            <lvc:Gauge.GaugeRenderTransform>
                                <TransformGroup>
                                    <RotateTransform Angle="90"></RotateTransform>
                                </TransformGroup>
                            </lvc:Gauge.GaugeRenderTransform>
                        </lvc:Gauge>
                        <TextBlock Text="UTILISATION" />
                    </StackPanel>
                </GroupBox>
                <GroupBox Header="Memory">
                    <StackPanel Orientation="Horizontal"
                                Margin="3">
                        <lvc:Gauge Height="70"
                                   Width="70"
                                   Uses360Mode="True"
                                   From="0"
                                   To="{Binding Diagnostic.Ram.MemTotalInMb}"
                                   AnimationsSpeed="0:0:0.5"
                                   Value="{Binding Diagnostic.Ram.MemUsedInMb}">
                            <lvc:Gauge.GaugeRenderTransform>
                                <TransformGroup>
                                    <RotateTransform Angle="90"></RotateTransform>
                                </TransformGroup>
                            </lvc:Gauge.GaugeRenderTransform>
                        </lvc:Gauge>
                        <StackPanel HorizontalAlignment="Center">
                            <TextBlock Text="IN USE" />
                            <TextBlock Text="TOTAL" />
                        </StackPanel>
                    </StackPanel>
                </GroupBox>
                <CollectionContainer Collection="{Binding Source={StaticResource cvsDisks}}" />
            </CompositeCollection>
        </ItemsControl.ItemsSource>
        <ItemsControl.ItemTemplate>
            <DataTemplate>
                <GroupBox Header="Disk">
                    <StackPanel Orientation="Horizontal"
                                Margin="3">
                        <lvc:Gauge Height="70"
                                   Width="70"
                                   Uses360Mode="True"
                                   HighFontSize="12"
                                   InnerRadius="0"
                                   From="0"
                                   To="{Binding SizeTotalInMb}"
                                   AnimationsSpeed="0:0:0.5"
                                   Value="{Binding SizeUsedInMb}">
                            <lvc:Gauge.GaugeRenderTransform>
                                <TransformGroup>
                                    <RotateTransform Angle="90"></RotateTransform>
                                </TransformGroup>
                            </lvc:Gauge.GaugeRenderTransform>
                        </lvc:Gauge>
                        <StackPanel HorizontalAlignment="Center">
                            <TextBlock Text="USED SPACE"
                                       Margin="25 5" />
                            <TextBlock Text="TOTAL"
                                       Margin="25 5" />
                        </StackPanel>
                    </StackPanel>
                </GroupBox>
            </DataTemplate>
        </ItemsControl.ItemTemplate>
        <ItemsControl.ItemsPanel>
            <ItemsPanelTemplate>
                <UniformGrid Columns="2" />
            </ItemsPanelTemplate>
        </ItemsControl.ItemsPanel>
    </ItemsControl>
</StackPanel>
```

Sample Screenshot
![Captura](https://user-images.githubusercontent.com/58954001/70983562-3f399b80-20b9-11ea-913f-4bd9722f1a5d.PNG)

#### I am using

<table>
<tr>
    <td>Live-Charts version</td>
    <td>0.97</td>
</tr>
<tr>
    <td>.Net Version</td>
    <td>4.6.1</td>
</tr>
<tr>
    <td>Windows</td>
    <td>10 (1903)</td>
</tr>
</table>

Instructions: replace text surrounded by '*' with your case, please delete this line.

#### How to reproduce?

I plan to binding a value to the Minvalue of Y axis, but It shows "LiveChartsException: One axis has an invalid range, it is or it tends to zero, please ensure your axis has a valid range".

But it works finely when building if i set the value to 1 or -1 before InitializeComponent().

The problem is that this exception makes my MainWindow always shows exception.
![image](https://user-images.githubusercontent.com/58968750/70971367-c5ff7000-20db-11ea-8e69-3bd401c2a5ad.png)


#### I am using

<table>
<tr>
    <td>Live-Charts version</td>
    <td>*0.97*</td>
</tr>
<tr>
    <td>.Net Version</td>
    <td>*4.5 WPF*</td>
</tr>
<tr>
    <td>Windows</td>
    <td>*Windows 10*</td>
</tr>
</table>
