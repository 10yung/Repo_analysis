the project would need to be adapted with the `self->` explicit operator.
when pull down to refresh ,ODRefreshControl have some bugs 

let the method 'beginRefreshing' activate the target action.

the method "beginRefreshing" can not activate the target action.

why you implement dealloc like this?
- (void)dealloc
  {
  [self.scrollView removeObserver:self forKeyPath:@"contentOffset"];
  [self.scrollView removeObserver:self forKeyPath:@"contentInset"];
  self.scrollView = nil;
  }
- (void)willMoveToSuperview:(UIView *)newSuperview
  {
  [super willMoveToSuperview:newSuperview];
  if (!newSuperview) {
      [self.scrollView removeObserver:self forKeyPath:@"contentOffset"];
      [self.scrollView removeObserver:self forKeyPath:@"contentInset"];
      self.scrollView = nil;
  }
  }

why not just removeObserver in (void)willMoveToSuperview like this:
- (void)willMoveToSuperview:(UIView *)newSuperview
  {
  [super willMoveToSuperview:newSuperview];
      [self.scrollView removeObserver:self forKeyPath:@"contentOffset"];
      [self.scrollView removeObserver:self forKeyPath:@"contentInset"];
      self.scrollView = nil;
  }

Another question,
when the function dealloc will be called?

Thanks

When I use it in a tableview, it was coverd by the navigation bar, can you tell me how to fix the problem?
I was a beginner so please give me some advice, thanks a lot!
![simulator screen shot 2015 11 30 21 13 21](https://cloud.githubusercontent.com/assets/10706403/11472418/5f6ec456-97a7-11e5-828e-4e3fa77a1ad3.png)

is this control available via cocoapods?

Add finished Label!

When pulling down a table view to refresh, I crash in `tableView:cellForRowAtIndexPath` when I access my datasource. 

As a workaround, I added a try catch block around where I use `[indexPath row]` to access my datasource. 

In this specific crash, I have 2 sections and 2 datasources. The crash happens when `indexPath` has a section of 1 (2nd section). When inspecting `indexPath` in the debugger, it shows that `[indexPath row]` is `<nil>`. This is when the control is stretched far enough to begin refreshing, but crashes before it does
