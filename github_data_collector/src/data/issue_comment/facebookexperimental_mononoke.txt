In the file `common/topo_sort/src/lib.rs`:

The computation following ```for node in dag``` creates a HashSet containing the keys and parents, which extends the list of dag keys with parents not in the dag as keys. I'll call those non-key parents.  Adding the non-key parents doesn't look like it can alter the output.

Non-key parents look like they are already being added to the stack to be processed. See the ```for child in children {``` loop. Note that what are referred to as parents in other files are referred to as children here.

Aside:
1. Cool code. I liked reading through and seeing how it worked.
2. It's not clear to me why non-key parents are part of the output, as there is not enough information to correctly topo-sort them. If there are non-key parents, then they could be
out of order.
Hello guys.

I tried to add a `cargo` workspace and it compiles some of the components but some are failing to compile because it seems like some of the crates that `cargo` can find on `crates.io`, are actually other crates or modified crates.

I get this error:
```
error[E0432]: unresolved import `netstring::NetstringDecoder`
  --> sshrelay/src/lib.rs:16:17
   |
16 | use netstring::{NetstringDecoder, NetstringEncoder};
   |                 ^^^^^^^^^^^^^^^^ no `NetstringDecoder` in the root

error[E0432]: unresolved import `netstring::NetstringEncoder`
  --> sshrelay/src/lib.rs:16:35
   |
16 | use netstring::{NetstringDecoder, NetstringEncoder};
   |                                   ^^^^^^^^^^^^^^^^ no `NetstringEncoder` in the root
```

Because the `netstring` crate never had these(`NetstringEncoder` and `NetstringDecoder`).