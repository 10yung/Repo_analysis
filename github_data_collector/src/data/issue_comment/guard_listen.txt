listener = Listen.to(File.expand_path('../app/apis', __dir__), only: /\.rb$/) do |modified, added, removed|
      modified.each do |path|
           puts path
           load path
      end
end

listener.start


change some files in app/apis dir, it puts the change file path, but the grape return the old code.
how can i make it work with grape??
At least I think it's caused by listen:

```
/Users/pitosalas/.rbenv/versions/2.6.2/lib/ruby/gems/2.6.0/gems/guard-2.15.1/lib/guard/commander.rb:56:in `stop': undefined method `stop' for nil:NilClass (NoMethodError)
	from /Users/pitosalas/.rbenv/versions/2.6.2/lib/ruby/gems/2.6.0/gems/guard-2.15.1/lib/guard/commander.rb:52:in `ensure in start'
	from /Users/pitosalas/.rbenv/versions/2.6.2/lib/ruby/gems/2.6.0/gems/guard-2.15.1/lib/guard/commander.rb:52:in `start'
	from /Users/pitosalas/.rbenv/versions/2.6.2/lib/ruby/gems/2.6.0/gems/guard-2.15.1/lib/guard/cli/environments/valid.rb:16:in `start_guard'
	from /Users/pitosalas/.rbenv/versions/2.6.2/lib/ruby/gems/2.6.0/gems/guard-2.15.1/lib/guard/cli.rb:122:in `start'
	from /Users/pitosalas/.rbenv/versions/2.6.2/lib/ruby/gems/2.6.0/gems/thor-0.20.3/lib/thor/command.rb:27:in `run'
	from /Users/pitosalas/.rbenv/versions/2.6.2/lib/ruby/gems/2.6.0/gems/thor-0.20.3/lib/thor/invocation.rb:126:in `invoke_command'
	from /Users/pitosalas/.rbenv/versions/2.6.2/lib/ruby/gems/2.6.0/gems/thor-0.20.3/lib/thor.rb:387:in `dispatch'
	from /Users/pitosalas/.rbenv/versions/2.6.2/lib/ruby/gems/2.6.0/gems/thor-0.20.3/lib/thor/base.rb:466:in `start'
	from /Users/pitosalas/.rbenv/versions/2.6.2/lib/ruby/gems/2.6.0/gems/guard-2.15.1/lib/guard/aruba_adapter.rb:32:in `execute'
	from /Users/pitosalas/.rbenv/versions/2.6.2/lib/ruby/gems/2.6.0/gems/guard-2.15.1/lib/guard/aruba_adapter.rb:19:in `execute!'
	from /Users/pitosalas/.rbenv/versions/2.6.2/lib/ruby/gems/2.6.0/gems/guard-2.15.1/bin/_guard-core:11:in `<main>'
```
I believe listen on JRuby will fall back on a polling implementation currently, since most of the adapters require C extensions. Specifically, I was looking at the Windows adapter, which needs the "wdm" extension on CRuby.

However, JRuby runs on the JDK, which has a built-in, cross-platform filesystem eventing API:

https://docs.oracle.com/javase/tutorial/essential/io/notification.html

Judging by the other adapters, it seems like we wouldn't need to write much code to support efficient filesystem monitoring for JRuby on all platforms where the JDK exists (which is pretty much all platforms).

Opening this issue in case someone with more time than me wants to give it a shot.
When there is many dir try multi thread handle this will make it more quick, it fix my problem.

when my project has a node_modules dir which have many sub directory auto generate by npm (like  1K npm pkg)

this will make the guard stuck in listen 

https://github.com/guard/listen/blob/8d85b4cd5788592799adea61af14a29bf2895d87/lib/listen/adapter/base.rb#L75

@snapshots.values.each do |snapshot|
              _timed('Record.build()') { snapshot.record.build }
            end

when i debug follow to the code

it stuck go's here
https://github.com/guard/listen/blob/8d85b4cd5788592799adea61af14a29bf2895d87/lib/listen/record.rb#L68 

repeat run _fast_build_dir and not stop.... for over 5 minute.

the time is unacceptable.

add ignore  config to exclude node_modules is not help.

change DEFAULT_IGNORED_DIRECTORIES to add like 
`
DEFAULT_IGNORED_DIRECTORIES = %r{^(?:
      \.git
      | \.svn
      | \.hg
      | \.rbx
      | \.bundle
      | bundle
      | node_modules
      | vendor/bundle
      | log
      | tmp
      |vendor/ruby
    )(/|$)}x
`
is not help to
`exception while processing events: Regexp Interrupted Backtrace:
 -- org/jruby/RubyRegexp.java:1092:in `=~'
 -- D:/git/code_helper/3part/ruby/logstash-6.5.1/vendor/jruby/lib/ruby/stdlib/pathname.rb:41:in `chop_basename'
 -- D:/git/code_helper/3part/ruby/logstash-6.5.1/vendor/jruby/lib/ruby/stdlib/pathname.rb:370:in `plus'
 -- D:/git/code_helper/3part/ruby/logstash-6.5.1/vendor/jruby/lib/ruby/stdlib/pathname.rb:350:in `+'
 -- D:/git/code_helper/3part/ruby/logstash-6.5.1/vendor/jruby/lib/ruby/gems/shared/gems/listen-3.1.5/lib/listen/queue_op                                  timizer.rb:43:in `block in _squash_changes'
 -- org/jruby/RubyArray.java:2486:in `map'
 -- D:/git/code_helper/3part/ruby/logstash-6.5.1/vendor/jruby/lib/ruby/gems/shared/gems/listen-3.1.5/lib/listen/queue_op                                  timizer.rb:43:in `_squash_changes'
 -- D:/git/code_helper/3part/ruby/logstash-6.5.1/vendor/jruby/lib/ruby/gems/shared/gems/listen-3.1.5/lib/listen/queue_op                                  timizer.rb:27:in `smoosh_changes'
 -- D:/git/code_helper/3part/ruby/logstash-6.5.1/vendor/jruby/lib/ruby/gems/shared/gems/listen-3.1.5/lib/listen/event/co                                  nfig.rb:37:in `optimize_changes'
 -- D:/git/code_helper/3part/ruby/logstash-6.5.1/vendor/jruby/lib/ruby/gems/shared/gems/listen-3.1.5/lib/listen/event/pr                                  ocessor.rb:110:in `_process_changes'
 -- D:/git/code_helper/3part/ruby/logstash-6.5.1/vendor/jruby/lib/ruby/gems/shared/gems/listen-3.1.5/lib/listen/event/pr                                  ocessor.rb:19:in `block in loop_for'
 -- org/jruby/RubyKernel.java:1292:in `loop'
 -- D:/git/code_helper/3part/ruby/logstash-6.5.1/vendor/jruby/lib/ruby/gems/shared/gems/listen-3.1.5/lib/listen/event/pr                                  ocessor.rb:15:in `loop_for'
 -- D:/git/code_helper/3part/ruby/logstash-6.5.1/vendor/jruby/lib/ruby/gems/shared/gems/listen-3.1.5/lib/listen/event/lo                                  op.rb:84:in `_wait_for_changes'
 -- D:/git/code_helper/3part/ruby/logstash-6.5.1/vendor/jruby/lib/ruby/gems/shared/gems/listen-3.1.5/lib/listen/event/lo                                  op.rb:42:in `block in setup'
 -- D:/git/code_helper/3part/ruby/logstash-6.5.1/vendor/jruby/lib/ruby/gems/shared/gems/listen-3.1.5/lib/listen/internal                                  s/thread_pool.rb:6:in `block in add'`

Environment:   jruby 9.1.13.0 - p0
using logstash-6.5.1 

guard watch one directory, normally when i change file one by one ,every thing is ok, and when i start to change file by using a script to change very fast , the guard get the exception below up there.


Hello,
When I change the file, the changes are not loaded in the docker.
I change the files to Windows, the mounted folder to the docker.

In Rails 5.2.0 without `gem listen` everything works or when create `rails new app --skip-active-record --api` everything works.

*docker-compose.yml*
```
version: '3.6'
services:
  db:
    image: postgres:10.5-alpine
    ports:
      - $POSTGRES_PORT:$POSTGRES_PORT
    volumes:
      - postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_DB: $POSTGRES_DB
      POSTGRES_PORT: $POSTGRES_PORT

  app:
    build:
      context: ./
    command: >
      bash -c "
      bundle check
      || bundle install --clean
      && rm -f tmp/pids/server.pid
      && bundle exec rails server"
    ports:
      - $PORT:$PORT
    volumes:
      - .:/app
    environment:
      DATABASE_URL: postgresql://$POSTGRES_USER:$POSTGRES_PASSWORD@$POSTGRES_HOST:$POSTGRES_PORT/$POSTGRES_DB?pool=$POSTGRES_POOL
      BUNDLE_PATH: /app/vendor/ruby/gems
    env_file: .env
    depends_on:
      - db
volumes:
  postgres:
```

*Gemfile*
```
source 'https://rubygems.org'
git_source(:github) { |repo| "https://github.com/#{repo}.git" }

ruby '2.5.1'

gem 'rails', '~> 5.2.1'
gem 'pg'
gem 'bootsnap', '1.3.1', require: false
gem 'puma'

group :development, :test do
  gem 'listen', '>= 3.0.5', '< 3.2'
  gem 'byebug', platforms: [:mri, :mingw, :x64_mingw]
end

gem 'tzinfo-data', platforms: [:mingw, :mswin, :x64_mingw, :jruby]
```

If I comment ` gem 'listen'` in Gemfile, then an error occurs:
```
 /app/gems/gems/bootsnap-1.3.0/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:32:in `require': Could not load the 'listen' gem. Add `gem 'listen'` to the development group of your Gemfile (LoadError)
app_1    |      from /app/gems/gems/activesupport-5.2.1/lib/active_support/dependencies.rb:287:in `block in require'
app_1    |      from /app/gems/gems/activesupport-5.2.1/lib/active_support/dependencies.rb:253:in `load_dependency'
app_1    |      from /app/gems/gems/activesupport-5.2.1/lib/active_support/dependencies.rb:287:in `require'
app_1    |      from /app/gems/gems/activesupport-5.2.1/lib/active_support/evented_file_update_checker.rb:61:in `block in initialize'
app_1    |      from /app/gems/gems/activesupport-5.2.1/lib/active_support/core_ext/kernel/reporting.rb:15:in `block in silence_warnings'
app_1    |      from /app/gems/gems/activesupport-5.2.1/lib/active_support/core_ext/kernel/reporting.rb:28:in `with_warnings'
app_1    |      from /app/gems/gems/activesupport-5.2.1/lib/active_support/core_ext/kernel/reporting.rb:15:in `silence_warnings'
app_1    |      from /app/gems/gems/activesupport-5.2.1/lib/active_support/evented_file_update_checker.rb:59:in `initialize'
app_1    |      from /app/gems/gems/activesupport-5.2.1/lib/active_support/i18n_railtie.rb:61:in `new'
app_1    |      from /app/gems/gems/activesupport-5.2.1/lib/active_support/i18n_railtie.rb:61:in `initialize_i18n'
app_1    |      from /app/gems/gems/activesupport-5.2.1/lib/active_support/i18n_railtie.rb:19:in `block in <class:Railtie>'
app_1    |      from /app/gems/gems/activesupport-5.2.1/lib/active_support/lazy_load_hooks.rb:69:in `block in execute_hook'
app_1    |      from /app/gems/gems/activesupport-5.2.1/lib/active_support/lazy_load_hooks.rb:62:in `with_execution_control'
app_1    |      from /app/gems/gems/activesupport-5.2.1/lib/active_support/lazy_load_hooks.rb:67:in `execute_hook'
app_1    |      from /app/gems/gems/activesupport-5.2.1/lib/active_support/lazy_load_hooks.rb:52:in `block in run_load_hooks'
app_1    |      from /app/gems/gems/activesupport-5.2.1/lib/active_support/lazy_load_hooks.rb:51:in `each'
app_1    |      from /app/gems/gems/activesupport-5.2.1/lib/active_support/lazy_load_hooks.rb:51:in `run_load_hooks'
app_1    |      from /app/gems/gems/railties-5.2.1/lib/rails/application/finisher.rb:75:in `block in <module:Finisher>'
app_1    |      from /app/gems/gems/railties-5.2.1/lib/rails/initializable.rb:32:in `instance_exec'
app_1    |      from /app/gems/gems/railties-5.2.1/lib/rails/initializable.rb:32:in `run'
```
How to fix this, so that the docker loads the changes in the files. Thanks
Please review usage of Digest::MD5 and migrate to a different hash algorithm that is not disabled in when FIPS is enabled.

```
$ rails server
=> Booting Puma
=> Rails 5.2.1 application starting in development
=> Run `rails server -h` for more startup options
md5_dgst.c(78): OpenSSL internal error, assertion failed: Digest MD5 forbidden in FIPS mode!
Aborted
```

I'm working on a Rails app and developing on Windows. I got advice to add `wdm` to my Gemfile and did as instructed, but this resulted later in a problem when deploying the same Rails app on a Linux machine, where bundler complained:

```
You are trying to install in deployment mode after changing
your Gemfile. Run `bundle install` elsewhere and add the
updated Gemfile.lock to version control.

If this is a development machine, remove the /usr/src/app/Gemfile freeze 
by running `bundle config --delete frozen`.

You have deleted from the Gemfile:
* wdm (>= 0.1.0)
```

I fixed the issue by changing my Gemfile:

```diff
-gem 'wdm', '>= 0.1.0' if Gem.win_platform?
+gem 'wdm', '>= 0.1.0', platforms: [:x64_mingw]
```

From what I understand, that way bundler knows that the gem is only needed on windows and can be smart about it. Maybe you could update the advice message that you display? However the platform symbol (`:x64_mingw`) may be different for each Ruby-on-Windows install.

In debugging why I no longer get any resonse from Listen when touching files in a Ubuntu docker container, I've discovered that `rb-inotify` sees a `:modify` event, but this is NOT in the list of events that the `Listen::Adapter::Linux` listens to according to [linux.rb#8](https://github.com/guard/listen/blob/master/lib/listen/adapter/linux.rb#L8) and [linux.rb#87](https://github.com/guard/listen/blob/master/lib/listen/adapter/linux.rb#L87).

What is the reasoning behind excluding the `:modify` event? And is this affecting anyone else, or is there something unique to my setup where I am only actually seeing those events generated?