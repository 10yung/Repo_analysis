Added generic type for `useDefault` state

# Description
Typesafe for `useDefault`

## Type of change

<!-- Check all relevant options. -->
- [ ] Bug fix _(non-breaking change which fixes an issue)_
- [x] New feature _(non-breaking change which adds functionality)_
- [ ] **Breaking change** _(fix or feature that would cause existing functionality to not work as before)_

# Checklist
- [ ] Read the [Contributing Guide](https://github.com/streamich/react-use/blob/master/CONTRIBUTING.md)
- [x] Perform a code self-review
- [ ] Comment the code, particularly in hard-to-understand areas
- [ ] Add documentation
- [ ] Add hook's story at Storybook
- [ ] Cover changes with tests
- [x] Ensure the test suite passes (`yarn test`)
- [x] Provide 100% tests coverage
- [x] Make sure code lints (`yarn lint`). Fix it with `yarn lint:fix` in case of failure.
- [x] Make sure types are fine (`yarn lint:types`).

<!-- If you can't check all the checkboxes right now - check what you can, create a Draft PR, make some changes if needed and get back to it when you will be able to put some marks in list. -->

# Description

<!-- Please include a summary of the change along with relevant motivation and context. -->
1. #206 


## Type of change

<!-- Check all relevant options. -->
- [ ] Bug fix _(non-breaking change which fixes an issue)_
- [x] New feature _(non-breaking change which adds functionality)_
- [ ] **Breaking change** _(fix or feature that would cause existing functionality to not work as before)_

# Checklist
- [x] Read the [Contributing Guide](https://github.com/streamich/react-use/blob/master/CONTRIBUTING.md)
- [x] Perform a code self-review
- [x] Comment the code, particularly in hard-to-understand areas
- [x] Add documentation
- [x] Add hook's story at Storybook
- [x] Cover changes with tests
- [x] Ensure the test suite passes (`yarn test`)
- [x] Provide 100% tests coverage
- [x] Make sure code lints (`yarn lint`). Fix it with `yarn lint:fix` in case of failure.
- [x] Make sure types are fine (`yarn lint:types`).

<!-- If you can't check all the checkboxes right now - check what you can, create a Draft PR, make some changes if needed and get back to it when you will be able to put some marks in list. -->

# Description

This PR makes `useCustomCompareEffect` example on docs properly import itself (instead of importing `useDeepCompareEffect`)


## Type of change

<!-- Check all relevant options. -->
- [x] Bug fix _(non-breaking change which fixes an issue)_
- [ ] New feature _(non-breaking change which adds functionality)_
- [ ] **Breaking change** _(fix or feature that would cause existing functionality to not work as before)_

# Checklist
- [x] Read the [Contributing Guide](https://github.com/streamich/react-use/blob/master/CONTRIBUTING.md)
- [x] Perform a code self-review
- [x] Comment the code, particularly in hard-to-understand areas
- [x] Add documentation
- [x] Add hook's story at Storybook
- [x] Cover changes with tests
- [x] Ensure the test suite passes (`yarn test`)
- [x] Provide 100% tests coverage
- [x] Make sure code lints (`yarn lint`). Fix it with `yarn lint:fix` in case of failure.
- [x] Make sure types are fine (`yarn lint:types`).

<!-- If you can't check all the checkboxes right now - check what you can, create a Draft PR, make some changes if needed and get back to it when you will be able to put some marks in list. -->

This PR contains the following updates:

| Package | Type | Update | Change |
|---|---|---|---|
| [fork-ts-checker-webpack-plugin](https://togithub.com/TypeStrong/fork-ts-checker-webpack-plugin) | devDependencies | major | [`3.1.1` -> `4.0.1`](https://renovatebot.com/diffs/npm/fork-ts-checker-webpack-plugin/3.1.1/4.0.1) |

---

### Release Notes

<details>
<summary>TypeStrong/fork-ts-checker-webpack-plugin</summary>

### [`v4.0.1`](https://togithub.com/TypeStrong/fork-ts-checker-webpack-plugin/releases/v4.0.1)

[Compare Source](https://togithub.com/TypeStrong/fork-ts-checker-webpack-plugin/compare/v3.1.1...v4.0.1)

##### Bug Fixes

-   bump patch version because of previous misconfiguration ([27f2719](https://togithub.com/TypeStrong/fork-ts-checker-webpack-plugin/commit/27f2719ba6170d5f012e3621cd2d5caaf8386782))

</details>

---

### Renovate configuration

:date: **Schedule**: At any time (no schedule defined).

:vertical_traffic_light: **Automerge**: Disabled by config. Please merge this manually once you are satisfied.

:recycle: **Rebasing**: Whenever PR becomes conflicted, or if you modify the PR title to begin with "`rebase!`".

:no_bell: **Ignore**: Close this PR and you won't be reminded about this update again.

---

 - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box

---

This PR has been generated by [WhiteSource Renovate](https://renovate.whitesourcesoftware.com). View repository job log [here](https://app.renovatebot.com/dashboard#streamich/react-use).
fix: path for useError docs

# Description

<!-- Please include a summary of the change along with relevant motivation and context. -->
1. #597 
2. Fix for `useError` docs path.

* I am not confident about the `types` of this `withHook` HOC. Would need help in getting those correct.
* Unit tests are not added since they would require some thinking.

## Type of change

<!-- Check all relevant options. -->
- [x] Bug fix _(non-breaking change which fixes an issue)_
- [x] New feature _(non-breaking change which adds functionality)_
- [ ] **Breaking change** _(fix or feature that would cause existing functionality to not work as before)_

# Checklist
- [x] Read the [Contributing Guide](https://github.com/streamich/react-use/blob/master/CONTRIBUTING.md)
- [x] Perform a code self-review
- [x] Comment the code, particularly in hard-to-understand areas
- [x] Add documentation
- [x] Add hook's story at Storybook
- [ ] Cover changes with tests
- [x] Ensure the test suite passes (`yarn test`)
- [ ] Provide 100% tests coverage
- [x] Make sure code lints (`yarn lint`). Fix it with `yarn lint:fix` in case of failure.
- [x] Make sure types are fine (`yarn lint:types`).

<!-- If you can't check all the checkboxes right now - check what you can, create a Draft PR, make some changes if needed and get back to it when you will be able to put some marks in list. -->

Missing types "@types/js-cookie": "^2.2.4"

After installing types, it errors out with incorrect import/export.
# Description

Following this To-Do https://github.com/streamich/react-use/projects/1#card-31525623 and that Issue https://github.com/streamich/react-use/issues/247.

Adding a neat pattern for light weight react only, state sharing among components.

## Type of change

<!-- Check all relevant options. -->
- [ ] Bug fix _(non-breaking change which fixes an issue)_
- [x] New feature _(non-breaking change which adds functionality)_
- [ ] **Breaking change** _(fix or feature that would cause existing functionality to not work as before)_

# Checklist
- [x] Read the [Contributing Guide](https://github.com/streamich/react-use/blob/master/CONTRIBUTING.md)
- [x] Perform a code self-review
- [x] Comment the code, particularly in hard-to-understand areas
- [x] Add documentation
- [x] Add hook's story at Storybook
- [x] Cover changes with tests
- [x] Ensure the test suite passes (`yarn test`)
- [x] Provide 100% tests coverage
- [x] Make sure code lints (`yarn lint`). Fix it with `yarn lint:fix` in case of failure.
- [x] Make sure types are fine (`yarn lint:types`).

<!-- If you can't check all the checkboxes right now - check what you can, create a Draft PR, make some changes if needed and get back to it when you will be able to put some marks in list. -->


**What is the current behavior?**

useKeybordJs hook is not working due to `keyboardJs.bind is not a function` error within storybook and non-storybook usage.

**Steps to reproduce**

react-use Storybook Docs Demo: https://streamich.github.io/react-use/?path=/story/sensors-usekeyboardjs--demo

or personal usage scenario

```javascript
import React from 'react'
import useKeyboardJs from 'react-use/lib/useKeyboardJs'

export const Devtools = () => {
  const [isPressed] = useKeyboardJs('a + b')

  return <p>{isPressed}</p>
}z
``` 

**A little about versions:**  
- _OS_: Windows
- _Browser (vendor and version)_: Firefox Dev, Chrome, Chrome Dev
- _NPM packages_: 
```json
"keyboardjs": "^2.5.1",
"next": "9.1.7",
"react-use": "^13.14.3"
```

**Possible solutions?**

- might be an issue with keyboardjs and not react-use?
- `useKey`, `useKeyPress` and/or `useKeyPressEvent` could be expanded to replace keyboardjs
- recreate the functionality of keyboardjs from scratch?

**Is your feature request related to a problem? Please describe.**
Being able to support, say shift+click on desktop and long press on mobile in a simple manner is useful.

**Describe the solution you'd like**
https://github.com/framer/snippets/blob/master/gestures/Long%20press.md

**Describe alternatives you've considered**
Not that I know of.