I used it to hijack a native .so, but after that, the command line returned something wrong:
![image](https://user-images.githubusercontent.com/11215634/45797534-972bfb80-bcd8-11e8-9a04-f581dee2ceac.png)
How can I fix this? Thank you very much.
```
static int new_property_get(const char *name, char *value) {

    if(strcmp(name,"ro.product.board") == 0){
        strcpy("google.com",value);
//        int a = old_property_get(name, value);
        Log("================Data native hook... %s -> %s | %d ", name, value,7);
        return 7;
    }
    int v = old_property_get(name, value);
    Log("Data native hook... %s -> %s | %d ", name, value,v);
    return v;
}
```

08 11:31:35.851 443-443/? A/DEBUG: *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***
    Build fingerprint: 'samsung/grandppltedx/grandpplte:6.0.1/MMB29T/G532GDXU1APJ3:user/release-keys'
    Revision: '0'
    ABI: 'arm'
    pid: 11717, tid: 11830, name: RenderThread  >>> com.xx.xx.xx<<<
    signal 11 (SIGSEGV), code 2 (SEGV_ACCERR), fault addr 0xb340c0f8
05-08 11:31:35.871 443-443/? A/DEBUG:     r0 b340c0f8  r1 b3377e35  r2 0000006d  r3 72000000
        r4 b649d59a  r5 00000000  r6 b3377e34  r7 b337be74
        r8 b3377e34  r9 b345b6e3  sl 00000001  fp b649ee08
        ip b340dffc  sp b3377df0  lr b340c091  pc b6cef586  cpsr 600b0030
05-08 11:31:35.881 443-443/? A/DEBUG: backtrace:
        #00 pc 00018586  /system/lib/libc.so (strcpy+5)
        #01 pc 0000108d  /data/app/com.xx.xx.xx-1/lib/arm/libhook.so
hi，your project is great! when i study your project, i found it was not support for arm64-v8a architecture .so file, and nowadays more and more android device use arm64-v8a arthitecture cpu (although most app still build compatible .so file)，so i hope you could admit my pull request, thank you~
Hi all,

I have problems running hijack process for this example. Do you know how to fix the problem?

root@MLA-TL10:/data/local/tmp # ./hijack -d -p 11329 -l libexample.so
./hijack -d -p 11329 -l libexample.so
Open maps file successfullymprotect: 0x1422fcf0
Open maps file successfullyOpen maps file successfullydlopen: 0xb77d0378
Attached to process successfullypc=d000 lr=d000 sp=2 fp=400f4c26
r0=1c010030 r1=40217cc4
r2=401b2df8 r3=0
libaddr: ffffffa2
stack: 0xbfcbb000-0xbfcdc000 leng = 135168
**cannot write library name (libexample.so) to stack, error 5 addr=-94!**

I'm using MEMU emulator.
Hi all,

I compiled hijack successfully, however, when I run **./hijack -d -p 2039 -l libname.so**, I got this error message:

**mprotect: 0x1422fcf0
Can't open /proc/yyy/maps for reading
cannot read memory map
dlopen: 0x2821adf9
cannot attach to xxx, error!**

I'm new to Linux programming, please shed me some light.


the following code failed with errno = 2, when filename = "/system/lib/nb/libc.so",
fd = open(filename, O_RDONLY)

call stack:
hook(..., "libc.", "epoll_wait", ...)->find_name->load_symtab->open

I have tried "cat /system/lib/nb/libc.so", and succeed.
Hi,  thanks for your adbi!!!

I have read hijack.c, and got some questions on 2 functions: `find_linker`, `find_linker_mem`.
1. Function `find_linker` seems copied from `find_name`, are the variables' name(`libcaddr`, `libc`) unsuitable?
```
static int find_linker(pid_t pid, unsigned long *addr)
{
	struct mm mm[1000];
	unsigned long libcaddr; // variable name "libcaddr" not suitable?
	int nmm;
	char libc[256];  // variable name "libc" not suitable?
	symtab_t s;

	if (0 > load_memmap(pid, mm, &nmm)) {
		printf("cannot read memory map\n");
		return -1;
	}
	if (0 > find_linker_mem(libc, sizeof(libc), &libcaddr, mm, nmm)) {
		printf("cannot find libc\n");
		return -1;
	}

	*addr = libcaddr;

	return 1;
}
```
2. Function `find_linker_mem` seems copied from `find_libc`
     a. Is the `p+=4` wrong(because the string "linker" is 6 bytes)? 
     b. I don't understand `if (!strncmp(".so", p, 3) || (p[0] == '-' && isdigit(p[1])))` below, we are to find address of "/system/bin/linker", isn't it?

```
static int
find_linker_mem(char *name, int len, unsigned long *start,
	  struct mm *mm, int nmm)
{
	int i;
	struct mm *m;
	char *p;
	for (i = 0, m = mm; i < nmm; i++, m++) {
		//printf("name = %s\n", m->name);
		//printf("start = %x\n", m->start);
		if (!strcmp(m->name, MEMORY_ONLY))
			continue;
		p = strrchr(m->name, '/');
		if (!p)
			continue;
		p++;
		if (strncmp("linker", p, 6))
			continue;
		break; // <--- hack
		p += 4; // Is this wrong? p += 6?
               
		/* here comes our crude test -> 'libc.so' or 'libc-[0-9]' */
		if (!strncmp(".so", p, 3) || (p[0] == '-' && isdigit(p[1]))) // what's here find for? we are find "/system/bin/linker", isn't it?
			break;
	}
	if (i >= nmm)
		/* not found */
		return -1;

	*start = m->start;
	strncpy(name, m->name, len);
	if (strlen(m->name) >= len)
		name[len-1] = '\0';
	return 0;
}
```

Apologize for my poor English, look forward to your reply, and thank you again : )
Is Instruction level instrumentation( e.g. done by Valgrind, PIN) supported with this tool on Android( ART or dalvik)
Hi ,

I am getting the below error when building the project.Please help on this below error.


D:/dummy_data/adbi_master/hijack/jni/../hijack.c:529:76: warning: comparison of unsigned expression < 0 is always false
      [-Wtautological-compare]
                if ((*p = ptrace(PTRACE_PEEKTEXT, pid, (void *)(pos+(i*4)), (void *)*p)) < 0)
                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^ ~
D:/dummy_data/adbi_master/hijack/jni/../hijack.c:764:11: error: use of undeclared identifier 'PTRACE_GETREGS'
                        ptrace(PTRACE_GETREGS, pid, 0, &regs);
                               ^
D:/dummy_data/adbi_master/hijack/jni/../hijack.c:792:9: error: use of undeclared identifier 'PTRACE_GETREGS'
        ptrace(PTRACE_GETREGS, pid, 0, &regs);
               ^
D:/dummy_data/adbi_master/hijack/jni/../hijack.c:873:9: error: use of undeclared identifier 'PTRACE_SETREGS'
        ptrace(PTRACE_SETREGS, pid, 0, &regs);
               ^
2 warnings and 3 errors generated.
I tested adbi in android 4.3, hook process netd success, but com.android.phone failed, com.android.phone maps have libexample.so, bu cat /data/local/tmp/adbi_example.log have nothing. what's wrong?