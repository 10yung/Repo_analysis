No changes to my code or system, but as of last week:

fund.data('NVDA',80,'quarterly')

Returns:

Downloading http://uk.advfn.com/p.php?pid=financials&symbol=NVDA&btn=quarterly_reports No Data Found for NVDA NULL

Any idea on what is happening?
Objetive: I hope to help. I hope to help people look at this repository in a better and well documented way.
When prices are downloaded, they are indexed by Date.  In bt.merge, conversion is done to POSIXct with the local timezone.  Downloaded data converted to POSIXct, with no TZ conversion, has a time of midnight GMT.  For any timezone earlier than that, the conversion results in each date being moved back one day.  In my case, I am in the America/Chicago TZ, which is UTC-6 hours.  The class statement  at the bottom of bt.merge() converted 12-31-18 to 12-30-18 18:00:00:00.

I've used this code for years, but only noticed the problem this weekend, when it appeared that I had a market price for Sunday.

I realize this is an old problem with date conversions in R.  Just curious if it was intentional to leave it unaddressed, or if the idea was to always run with the sysenv(TZ) set to GMT.  My original fix was to do the latter, but I thought I saw that it screwed up my results - haven't gone back to verify that.  My next fix was to add 6 hours to Unique.dates prior to the class statement (not pretty, I know, but effective for now).

Thanks.
This link is referred in the plot.table.r file and it is broken - http://us.ishares.com/content/stream.jsp?url=/content/en_us/repository/resource/single_country_periodic_table.pdf&mimeType=application/pdf
I am having issues I cannot seem to find the solution to in regards to the DCF analysis [here](https://github.com/systematicinvestor/SIT/blob/master/R/fundamental.test.r).

I am running the DCF analysis for a number of firms and for many, the code works as expected.

The problem is that when I run the analysis for some firms I have 'gaps' in the DCF data.

For example when I run the following code for ticker 'LOW' I do not get any gaps.


```
###############################################################################
# Load Systematic Investor Toolbox (SIT)
# http://systematicinvestor.wordpress.com/systematic-investor-toolbox/
###############################################################################
con = gzcon(url('http://www.systematicportfolio.com/sit.gz', 'rb'))
source(con)
close(con)

#*****************************************************************
# Load historical fundamental and pricing data
#****************************************************************** 
load.packages('quantmod') 
tickers = spl('LOW')
tickers.temp = spl('NASDAQ:LOW')

# get fundamental data
data.fund <- new.env()
for(i in 1:len(tickers)) {
  data.fund[[tickers[i]]] = fund.data(tickers.temp[i], 80, 'quarterly') #Put 'annual' for annual data
}

# get pricing data
data <- new.env()
getSymbols(tickers, src = 'yahoo', from = '1970-01-01', env = data, auto.assign = T)
for(i in ls(data)) data[[i]] = adjustOHLC(data[[i]], use.Adjusted=T)            

# prepare data

fund = data.fund[[tickers[1]]]
fund.date = date.fund.data(fund)            
price = Cl(data[[tickers[1]]]['1995::'])

#*****************************************************************
# Extract Inputs for DCF Valuation
#******************************************************************                 
# Free Cash Flows
FCF = get.fund.data('free cash flow', fund, fund.date)

# Invested Capital
IC = get.fund.data('invested capital', fund, fund.date)

# Sales
SALE = get.fund.data('total revenue', fund, fund.date)

# Common Equity
CEQ = get.fund.data('total equity', fund, fund.date)

# Common Shares Outstanding
CSHO = get.fund.data('total common shares out', fund, fund.date)

# Growth Rate
CROIC = FCF/IC

# Average inputs
g = runMean(CROIC, 5)
cash = runMean(FCF, 5)

#*****************************************************************
# Helper function to compute Intrinsic Value
#******************************************************************                 
compute.DCF.IV <- function(cash, eqity, shares, g, R) {
  if( cash <= 0 ) return(NA)
  
  if( len(R) == 1 ) R = rep(R, len(g))
  
  value = eqity + sum(cash * cumprod(1 + g) / cumprod(1 + R))
  return( value / shares )
}

#*****************************************************************
# Compute Intrinsic Value, assumptions:
# Company will grow for the first 3 years at current Growth Rate
# slowed down by 20% for the next 4 years, and slowed down by a further 20% for the next 3 years
# and finally 3% growth for the next 10 years
#
# The Discount Rate is 9%
#
# http://www.oldschoolvalue.com/blog/stock-analysis/apple-aapl-valuation/
#******************************************************************                 
dcf.price = NA * g
i.start = which(!is.na(g))[1] 

for(i in i.start : nrow(g)) {
  # Create Growth Rate scenario:      
  g.scenario = c(rep(g[i],3), rep(g[i],4)*0.8, rep(g[i],3)*0.8*0.8, rep(3/100,10))
  
  # Compute Intrinsic Value
  dcf.price[i] = compute.DCF.IV(cash[i], CEQ[i], CSHO[i], g.scenario, 9/100)
}

#*****************************************************************
# Create Plots
#****************************************************************** 

#Remove last row of dcf.price 

#dcf.price <- dcf.price[-nrow(dcf.price),]

plota(price, type='l', log = 'y', col='blue', main=tickers[1],
      ylim=range(price,dcf.price,na.rm=T))
plota.lines(dcf.price, type='s', col='red', lwd=2)
plota.legend('Close,Intrinsic Value', 'blue,red', list(price, dcf.price))   


# plota(g, type='b', col='blue', pch=0, main='Growth Rate')   
# 
# 
# plota(cash, type='b', col='blue', pch=0, main='Free Cash Flows')
```
Which gives the following output:
![dcflow](https://user-images.githubusercontent.com/28485217/44267013-e8a22000-a22c-11e8-90fd-79fbf2ab9120.jpg)



However when I change the firm to ticker 'MU' I obtain gaps in the DCF analysis and obtain the following graphic.

![dcfmu](https://user-images.githubusercontent.com/28485217/44267099-3c146e00-a22d-11e8-9eb3-6443ebb2d5bb.jpg)

The data for both firms downloads fine from the ADVFN website so I assuming something is not going right in the calculations for 'MU'.

Any help on how I can proceed with this would be great!

An error occurred when the package was installed according to the steps in the README.
`
> curl_download('https://github.com/systematicinvestor/SIT/raw/master/SIT.tar.gz', 'sit',mode = 'wb',quiet=T)
> install.packages('sit', repos = NULL, type='source')
ERROR: dependency ‘SIT.date’ is not available for package ‘SIT’
removing ‘/Library/Frameworks/R.framework/Versions/3.4/Resources/library/SIT’
Warning in install.packages :
  installation of package ‘sit’ had non-zero exit status`
Hello SIT !

I know this dates back several years, but I would have a question on the FTCA algorithm implementation:
https://github.com/systematicinvestor/SIT/blob/6327d4e86b73a690341b490ef229b969e28f90a9/R/strategy.r#L2276

Compared to the pseudo-code of Mr Varadi (https://cssanalytics.wordpress.com/2013/11/26/fast-threshold-clustering-algorithm-ftca/), I can read that if the correlation between HC and LC > threshold, while Mr Varadi pseudo-code is _Add to Cluster all other assets that have yet been assigned to a Cluster and  have an Average Correlation to HC and LC > Threshold_, the FTCA code implemented here seems to assign all remaining assets to the HC/LC cluster.

Would you remember why is that ?

Cheers,

Roman
Hi,

I try to get prices from the combined tickers like the following.
However, I could not load 'data.proxy.raw.Rdata' and find the code in this area.
How can I solve this problem?
Thank you in advance

> library(SIT)
> 
> tickers = '
+ US.STOCKS = VTI 
+ FOREIGN.STOCKS = VEU + FDIVX
+ US.10YR.GOV.BOND = IEF + VFITX
+ REAL.ESTATE = VNQ + VGSIX
+ COMMODITIES = DBC + CRB
+ CASH = BND + VBMFX
+ '
> load('data.proxy.raw.Rdata')
Error in readChar(con, 5L, useBytes = TRUE) : cannot open the connection
In addition: Warning message:
In readChar(con, 5L, useBytes = TRUE) :
  cannot open compressed file 'data.proxy.raw.Rdata', probable reason 'No such file or directory'
