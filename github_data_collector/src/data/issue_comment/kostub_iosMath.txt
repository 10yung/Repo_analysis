I'm using \over command in math latex to produce the fractions, but when 2 \over commands combine for example 1 \over 2 + 3 \over 4. it gives the incorrect math.

\frac{a}{b} + \frac{c}{d} is working fine but I am bound to use \over command.
is there any solution for this? Thanks in advance

MTMathUILabel shows math text in italic but i want it in regular font ..Please provide me the solution.
Is this support the math jx or not i have this equation but its not working in latex 

<math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>f</mi><mo>&#39;</mo><mo>(</mo><mi>x</mi><mo>)</mo><mo>=</mo><mfrac><mi>d</mi><mrow><mi>d</mi><mi>x</mi></mrow></mfrac><mo>(</mo><msup><mi>x</mi><mn mathvariant=\"italic\">2</mn></msup><mi>sec</mi><mfenced><mrow><mn mathvariant=\"italic\">4</mn><mi>x</mi></mrow></mfenced><mo>)</mo><mo>&#xA0;</mo><mspace linebreak=\"newline\"/><mo>=</mo><mo>[</mo><mfrac><mi>d</mi><mrow><mi>d</mi><mi>x</mi></mrow></mfrac><mo>(</mo><msup><mi>x</mi><mn mathvariant=\"italic\">2</mn></msup><mo>)</mo><mo>]</mo><mo>&#xA0;</mo><mo>(</mo><mi>sec</mi><mfenced><mrow><mn mathvariant=\"italic\">4</mn><mi>x</mi></mrow></mfenced><mo>)</mo><mo>&#xA0;</mo><mo>+</mo><mo>&#xA0;</mo><mo>(</mo><msup><mi>x</mi><mn mathvariant=\"italic\">2</mn></msup><mo>)</mo><mo>[</mo><mfrac><mi>d</mi><mrow><mi>d</mi><mi>x</mi></mrow></mfrac><mo>(</mo><mi>sec</mi><mfenced><mrow><mn mathvariant=\"italic\">4</mn><mi>x</mi></mrow></mfenced><mo>)</mo><mo>]</mo></math>
There are 27 warnings about a lack of Nullability specifiers when compiled with Xcode 11. Here is an example of one of them

```
In file included from /Users/mlilback/working/rc2/client/vendor/iosMath/iosMath/render/MTMathListDisplay.m:20:
/Users/mlilback/working/rc2/client/vendor/iosMath/iosMath/render/internal/MTMathListDisplayInternal.h:34:4: warning: pointer is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified) [-Wnullability-completeness]
- (instancetype) initWithDisplays:(NSArray<MTDisplay*>*) displays range:(NSRange) range NS_DESIGNATED_INITIALIZER;
   ^
/Users/mlilback/working/rc2/client/vendor/iosMath/iosMath/render/internal/MTMathListDisplayInternal.h:34:4: note: insert '_Nullable' if the pointer may be null
- (instancetype) initWithDisplays:(NSArray<MTDisplay*>*) displays range:(NSRange) range NS_DESIGNATED_INITIALIZER;
   ^
                _Nullable 
/Users/mlilback/working/rc2/client/vendor/iosMath/iosMath/render/internal/MTMathListDisplayInternal.h:34:4: note: insert '_Nonnull' if the pointer should never be null
- (instancetype) initWithDisplays:(NSArray<MTDisplay*>*) displays range:(NSRange) range NS_DESIGNATED_INITIALIZER;
   ^
                _Nonnull 
```

I know that requirement was added years ago, but maybe the warning wasn't on by default. I'd submit a patch, but I'm not familiar enough to know what is nullable (except `_Null_unspecified`, which is the worst solution).

Hi Kostub, I did some initial work to port this great project to macOS. However, I mistakenly used my own bundle ID prefix in the macOS project. ("AnZhg.MacOSMath") Can you change it to something else? Thank you! Not very urgent, but I'd like it to be consistent with iOS sample project bundle ID or something similar.
eg.
$$(360-90)\\div (20+{{v}_{\\text{乙}}})\\times {{v}_{\\text{乙}}}=270{v}_{\\text{乙}}\\div (20+{{v}_{\\text{乙}}})$$
display for bug that：
the Chinese characters "乙" is missing。

I read your code and find the problem here

+ (MTMathAtom *)atomForCharacter:(unichar)ch
{
    NSString *chStr = [NSString stringWithCharacters:&ch length:1];
    if (ch < 0x21 || ch > 0x7E) {
        // skip non ascii characters and spaces
        return nil;
    } 


first：here should use  fun "iscntrl()" instead of "ch < 0x21 || ch > 0x7E"
2ed：add the  Chinese characters  support after 
else if ((ch >= 'a' && ch <= 'z') || (ch >= 'A' && ch <= 'Z')) {
        return [MTMathAtom atomWithType:kMTMathAtomVariable value:chStr];

I try this code
let label = MTMathUILabel()
label.labelMode = MTMathUILabelMode.text
label.latex = "\\(\\lim_{x \\to 0^+}{{x^n}\\ln x}\\) ,\\(\\displaystyle n>0\\)"
super.view.addSubview(label)

and it show me "Display error \\"
Closes #63
@kostub I prepared the release for you, hoping you can give this a quick merge and tag.
- Updates change log
- Bumps version number in podspec to 0.10.0