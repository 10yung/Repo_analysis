## Expected Behavior
When we open http://admin.apiato.develop/login this should open the login screen of the admin dashboard. Does the dashboard have all the features in the UI?


## Actual Behavior
But I am getting **Page Not found**

## Steps to Reproduce the Problem
<!--- Help us reproduce the issue (if applicable) -->

  1. Install and setup apiato using Vagrant and Homestead
  2. run http://admin.apiato.develop/login in the browser
  3. getting **Sorry, the page you are looking for could not be found**

## Specifications
<!--- What version are you using, and is there any other thing you like to share about your environment? -->

  - Apiato Version:  latest

## Additional Details

1. PHP 7.2.5 (cli) (built: Apr 25 2018 02:39:21) ( ZTS MSVC15 (Visual C++ 2017) x86 )
2. laravel/framework": "5.6.*

<!--- Provide a general summary of your changes in the Title above -->

## Description
<!--- Describe your changes in detail -->

## Motivation and Context
<!--- Why is this change required? What problem does it solve, or what feature does it add? -->
<!--- If it fixes an open issue, please link to the issue here. -->

## How Has This Been Tested?
<!--- Please describe how you tested your changes. (PHPUnit is the highly recommended way) -->

## Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [] Bug fix (non-breaking change which fixes an issue)
- [] New feature (non-breaking change which adds functionality)
- [] Breaking change (fix or feature that would cause existing functionality to not work as expected)

## Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We'd love to help! -->
- [] My code follows the code style and structure of this project.
- [] I have updated the documentation accordingly.

<!--- Provide a general summary of your changes in the Title above -->

## Description
<!--- Describe your changes in detail -->

## Motivation and Context
<!--- Why is this change required? What problem does it solve, or what feature does it add? -->
<!--- If it fixes an open issue, please link to the issue here. -->

## How Has This Been Tested?
<!--- Please describe how you tested your changes. (PHPUnit is the highly recommended way) -->

## Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [] Bug fix (non-breaking change which fixes an issue)
- [] New feature (non-breaking change which adds functionality)
- [] Breaking change (fix or feature that would cause existing functionality to not work as expected)

## Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We'd love to help! -->
- [] My code follows the code style and structure of this project.
- [] I have updated the documentation accordingly.


## Description
Change from default domain extension of .dev to .develop

## Motivation and Context
Moved away from .dev due to ICANN, updated example to prevent end users from missing this.

## How Has This Been Tested?
Spent last half hour trying to get requests in POSTMAN to resolve without this change.

## Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [X] Bug fix (non-breaking change which fixes an issue)
- [] New feature (non-breaking change which adds functionality)
- [] Breaking change (fix or feature that would cause existing functionality to not work as expected)

## Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We'd love to help! -->
- [X] My code follows the code style and structure of this project.
- [X] I have updated the documentation accordingly.

## Description
Added Lithuanian Translation :)

## Motivation and Context
I use apiato myself with Lithuanian language and wanted to share it

## How Has This Been Tested?
Viewing in the browser

## Types of changes
- [] Bug fix (non-breaking change which fixes an issue)
- [x] New feature (non-breaking change which adds functionality)
- [] Breaking change (fix or feature that would cause existing functionality to not work as expected)

## Checklist:
- [x] My code follows the code style and structure of this project.
- [x] I have updated the documentation accordingly.

Hello!
Are any updates planned for the near future? Will laravel upgrade to 5.8 or 6.0? Or is the project already abandoned?
Thanks for any information.
## Expected Behavior
<!--- Describe the expected behavior -->
apiato loads less packages though vendor

## Actual Behavior
<!--- Describe the issue -->
apiato laods a lot of packages though vendor, however most of them are useless, and the packages slow down the speed of apiato

## Steps to Reproduce the Problem
<!--- Help us reproduce the issue (if applicable) -->

  1. install apiato
  2. a lot of useless packages are installed
  3. how to install less packages, but the usefull ones?

## Specifications
<!--- What version are you using, and is there any other thing you like to share about your environment? -->
how can we only install the usefull packages though composer.

  - Apiato Version: 7.4

## Additional Details
<!--- The more info the better, thanks. -->

## Expected Behavior
run getTestingUser() function in unit test case, it will run smoothly.

## Actual Behavior

private function factoryCreateUser($userDetails = null)
    {
        return factory(User::class)->create($this->prepareUserDetails($userDetails));
    }

call this function, it will throw 
`InvalidArgumentException : Unable to locate factory with name [default] App\Containers\User\Models\User`

## Steps to Reproduce the Problem
<!--- Help us reproduce the issue (if applicable) -->

  1. run App\Containers\User\UI\API\Tests\Functional\FindUserTest\testFindUser_() function
  2. it throws `InvalidArgumentException : Unable to locate factory with name [default] App\Containers\User\Models\User` Exception
  3. how to avoid this Exception?

## Specifications
<!--- What version are you using, and is there any other thing you like to share about your environment? -->

  - Apiato Version: 5.6.39

## Additional Details
<!--- The more info the better, thanks. -->

## Expected Behavior
 In my develop environment, the API_URL is http://api.apiato.develop:8080. 
I expected to get the JSON message "Welcome to apiato." when I call it using curl.

## Actual Behavior
I got HTTP 404.

## Steps to Reproduce the Problem
  1. In the .env,  set API_URL=http://api.apiato.develop:8080. 

I am new user of Apiato and laravel. I find the reason after I trace the code about 2 hours.   
When Laravel find the route, it use the HostValidator to verify if the host matched.  It does not support  the host with port. So I  remove the port from APP_URL in .env and everything work well now.
I am not sure whether it is a bug or my poor knowledge about Apiato/Laravel.
Maybe some tips should be in the installation document. 

## Specifications
  - OS: macOS 10.14
  - Apiato Version: 7.4

## Additional Details


## Expected Behavior
`admin.apiato.develop` should show the login page.

## Actual Behavior
Shows the welcome page

## Steps to Reproduce the Problem
<!--- Help us reproduce the issue (if applicable) -->

  1. Install Apiato v7.4.7
  2. Clear/Cache Routes/Config (if desired)
  3. Visit http://admin.apiato.develop/ (or whatever your admin domain is)

## Specifications

  - Apiato Version: 7.4.7
  - Vanilla installation using Laradock

## Additional Details
Cause: I found a Stack Overflow thread that states that "Laravel processes routes on a first-come-first-serve basis", meaning the admin route and welcome route are both a `GET /`, and the admin one is being loaded second and ignored. I commented out the welcome route in `app/Containers/Welcome/UI/WEB/Routes/main.php`, and it solved it.

- SO Thread: https://stackoverflow.com/questions/41703192/laravel-subdomain-routing-is-not-working

Mentioned in #223, but never solved.

I'm not sure what the ideal solution here is, because I don't yet understand the inner workings of Apiato and how it loads it routes. Halp!
