I get the following errors when trying to build the project following the "Getting Started With Azure Spatial Anchors" page https://docs.microsoft.com/en-us/windows/mixed-reality/mrlearning-asa-ch1

Assets\AzureSpatialAnchors.SDK\Scripts\SpatialAnchorManager.cs(325,44): error CS0234: The type or namespace name 'SpatialPerceptionAccessStatus' does not exist in the namespace 'Microsoft.Windows.Perception.Spatial' (are you missing an assembly reference?)

Assets\AzureSpatialAnchors.SDK\Scripts\SpatialAnchorManager.cs(325,95): error CS0234: The type or namespace name 'SpatialAnchorExporter' does not exist in the namespace 'Microsoft.Windows.Perception.Spatial' (are you missing an assembly reference?)

Assets\AzureSpatialAnchors.SDK\Scripts\SpatialAnchorManager.cs(326,50): error CS0234: The type or namespace name 'SpatialPerceptionAccessStatus' does not exist in the namespace 'Microsoft.Windows.Perception.Spatial' (are you missing an assembly reference?)


Furthermore, if I close Unity and open it again, tons of new errors appear, where TextMeshPro and ARFoundation  are not recognized, in addition to errors of the type:
Assets\MixedRealityToolkit\Utilities\Gltf\Serialization\Importers\AssemblyInfo.cs(7,12): error CS0579: Duplicate 'AssemblyFileVersion' attribute
and similar...

I'm using Unity 2019.1.14f1, Visual Studio 2019, Windows 10 SDK 10.0.18362.0.

I would appreciate some help on how to resolve this.
Lesson 6: Exploring Advanced Input Options - Speech Input Handler, Keyword entry: Images show a drop down or other UI that allows one to pick the keyword(s) you have setup in the Speech Input Commands Profile. Currently released MRTK 2.2.0 however does not show any toggle or drop down, just a free form text field with no intellisense or any feedback that the keyword(s) you are entering even match a currently known keyword(s).

Unity: 2019.3.0f2
MRTK: 2.2.0
Windows 10, 1903, 18362.592

After learning from Paul I needed to have UWP Tools for 2015 or 2017 because 2019 is too new and does not satisfy the requirement I've added an additional sentence helping to clarify this for anyone trying to troubleshoot the install. 
@yannisle @scooley
[CI 106596](https://dev.azure.com/ContentIdea/ContentIdea/_queries/edit/106596)




// If we want to use it immediately we can de-serialize the scene ourselves
byte[] newSceneData = new byte[newSceneBuffer.Size];
newSceneBuffer.GetData(newSceneData);
Scene mySceneDeSerialized = Scene.Deserialize(newSceneData);

// Save newSceneBlob for later

In this sample snippet the comment I think should be // Save newSceneData for later

---
#### Document Details

⚠ *Do not edit this section. It is required for docs.microsoft.com ➟ GitHub issue linking.*

* ID: e11ada88-8eb6-0e07-0b90-02b8b87179bf
* Version Independent ID: 9bb41118-53ab-73c6-5908-83f0c2334536
* Content: [Scene understanding SDK - Mixed Reality](https://docs.microsoft.com/en-us/windows/mixed-reality/scene-understanding-sdk#feedback)
* Content Source: [mixed-reality-docs/scene-understanding-SDK.md](https://github.com/MicrosoftDocs/mixed-reality/blob/master/mixed-reality-docs/scene-understanding-SDK.md)
* Product: **mixed-reality**
* Technology: **mr-dev**
* GitHub Login: @SzymonS
* Microsoft Alias: **szymons**
I hit an error after importing the MRTK package in Unity: "All compiler errors have to be fixed before you can enter playmode!", with ArgumentExceptions in the Console.

After creating the project closer to the root directory, I was able to complete the tutorial with no issues. It would be helpful to have a warning that a project saved deep in the directory tree may cause long file path errors.

---
#### Document Details

⚠ *Do not edit this section. It is required for docs.microsoft.com ➟ GitHub issue linking.*

* ID: 62d386bb-3f93-d434-e7b3-28c58ea673e9
* Version Independent ID: a1a9b02f-66a0-feb0-7a08-9a8d2cf398d1
* Content: [Getting started tutorials - 2. Initializing your project and first application - Mixed Reality](https://docs.microsoft.com/en-us/windows/mixed-reality/mrlearning-base-ch1#feedback)
* Content Source: [mixed-reality-docs/mrlearning-base-ch1.md](https://github.com/MicrosoftDocs/mixed-reality/blob/master/mixed-reality-docs/mrlearning-base-ch1.md)
* Product: **mixed-reality**
* Technology: **mr-dev**
* GitHub Login: @jessemcculloch
* Microsoft Alias: **jemccull**
Azure Spatial Anchors link, below [shared experiences link](https://docs.microsoft.com/windows/mixed-reality/shared-experiences-in-mixed-reality?WT.mc_id=docs-twitter-ayyonet) takes the user to Azure Docs. While it is a great to not repeat the same info, it is confusing user experience. It's not clear how to get back from Azure ASA page, to back to Mixed Reality docs. 

We might solve the issue when we move everything to Azure Docs, for now, I wanted to document.

Thanks!
I uploaded a screen shot for further reference:
https://imgur.com/gallery/egsXbAZ

Per-project settings
3. Set SDK to Universal 10 -&gt; "Universal 10" isn't an option. I have the options Latest Installed, 10.0.17134.0, 10.0.17763.0, and 10.0.18362.0.
6. Set UWP SDK to Latest installed -&gt; "UWP SDK" isn't an option. 

...enabling "Virtual Reality Supported":*
4. In the XR Settings section, check the Virtual Reality Supported checkbox to add the Virtual Reality Devices list. -&gt; List name is incorrect, it reads "Virtual Reality SDKs"


---
#### Document Details

⚠ *Do not edit this section. It is required for docs.microsoft.com ➟ GitHub issue linking.*

* ID: 70adc1c8-e346-e91c-679f-411ffbd580f0
* Version Independent ID: 175c112c-ba83-5ba9-9fdd-293808009add
* Content: [Configure a New Unity Project for Windows Mixed Reality - Mixed Reality](https://docs.microsoft.com/en-us/windows/mixed-reality/configure-unity-project)
* Content Source: [mixed-reality-docs/Configure-Unity-Project.md](https://github.com/MicrosoftDocs/mixed-reality/blob/master/mixed-reality-docs/Configure-Unity-Project.md)
* Product: **mixed-reality**
* Technology: **mr-dev**
* GitHub Login: @thetuvix
* Microsoft Alias: **alexturn**
In the Visual Studio section:
"Note about Unity: Unless you're intentionally trying to install a newer (non-LTS) version of Unity for a specific purpose, we recommend not installing the Unity workload as part of Visual Studio installation, and instead install the 2018.4 LTS stream of Unity as noted below."

In the Unity section:
"The current recommendation is to use Unity 2018.4.x, which is the LTS build required for MRTK v2 below."

I'm sure this is accurate for Hololens 2, but only Unity 2017.4.35f1 works for Hololens 1 in my experience. I was blocked from any development for about 6 weeks, trying to get a basic Unity app running (only the camera and a .25 x .25 x .25 cube in front of the camera). I was trying all different versions of Unity 2019 and 2018 LTS, Visual Studio 2017 & 2019, but I would never see the Unity splash screen and would only see blank/black/empty space when the app ran on the Hololens 1.

As soon as I created the basic app in Unity 2017, it worked like a charm.

Today, I tried opening the working 2017 app with Unity 2018 LTS, and saw the same blank/black screen and lack of splash screen. It seems 2018 LTS completely broke the app, because the previously working app now shows the same broken behavior when I open in 2017 LTS.

Please update both sections to clarify:
-Unity 2018 LTS for Hololens 2
-Unity 2017 LTS for Hololens 1

---
#### Document Details

⚠ *Do not edit this section. It is required for docs.microsoft.com ➟ GitHub issue linking.*

* ID: e6144653-f7f3-0ad2-5c8f-24310633144a
* Version Independent ID: a810412b-2ff0-29d3-3004-af58ce8c24be
* Content: [Install the tools - Mixed Reality](https://docs.microsoft.com/en-us/windows/mixed-reality/install-the-tools)
* Content Source: [mixed-reality-docs/install-the-tools.md](https://github.com/MicrosoftDocs/mixed-reality/blob/master/mixed-reality-docs/install-the-tools.md)
* Product: **mixed-reality**
* Technology: **mr-dev**
* GitHub Login: @thetuvix
* Microsoft Alias: **alexturn**
I just tried out the Holographic Remoting Player on HoloLens 2 and it seems that support for fully articulated hand tracking and eye tracking is missing. My Unity app just reverted to GGV-style input. Are there specific packages required? 

---
#### Document Details

⚠ *Do not edit this section. It is required for docs.microsoft.com ➟ GitHub issue linking.*

* ID: e5141cd4-aa05-46fe-9378-a9cc0ef19f76
* Version Independent ID: 1a2e110d-8dae-e52b-f856-34217c6f6e54
* Content: [Holographic Remoting Player - Mixed Reality](https://docs.microsoft.com/en-us/windows/mixed-reality/holographic-remoting-player)
* Content Source: [mixed-reality-docs/holographic-remoting-player.md](https://github.com/MicrosoftDocs/mixed-reality/blob/master/mixed-reality-docs/holographic-remoting-player.md)
* Product: **mixed-reality**
* Technology: **mr-dev**
* GitHub Login: @JonMLyons
* Microsoft Alias: **jlyons**