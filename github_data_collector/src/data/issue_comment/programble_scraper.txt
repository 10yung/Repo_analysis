I haven't been actively using or developing this project for quite a while now and haven't had time to respond to new issues and PRs. I would like to find someone more qualified than me to continue maintenance and/or development of this project which seems to be quite popular. If anyone would like to help out, please comment here or send me an email.
Typical use-case is shown at MDN web docs: https://developer.mozilla.org/en-US/docs/Web/CSS/:scope#Direct_children
The intermediate parsing of the `Selector` itself is a bit annoying. I think it would be neat if it were part of the `select()`.

Current:
```
let fragment = Html::parse_fragment(html);
let selector = Selector::parse("li").unwrap();

for element in fragment.select(&selector) {}
```
Proposed a):
```
let fragment = Html::parse_fragment(html);
for element in fragment.select("li".into()?) {}
```
Proposed b):
```
let fragment = Html::parse_fragment(html);
for element in fragment.select("li")? {}
```
When we have few tags that need to be removed before selecting a tag for example

```
fn main() {
let selector = Selector::parse("body").unwrap();
    let html = r#"
    <!DOCTYPE html>
   <body>
   Hello World
   <script type="application/json" data-selector="settings-json">
   {"test":"json"}
   </script>
   </body>
"#;
    let document = Html::parse_document(html);
    let body = document.select(&selector).next().unwrap();
    let text = body.text().collect::<Vec<_>>();
    println!("{:?}", text);
}
```
Output

`["\n   Hello World\n   ", "\n   {\"test\":\"json\"}\n   ", "\n   \n"]`

The output will have the value from the script tags, Is there any way we can remove those?