
The following code fails with exception:
```
CREATE TABLE table2 (
bigint_col BIGINT,
string_col TEXT ENCODING DICT(32));
SELECT pmod(dayofweek(CAST('2017-01-06' AS DATE)) - 2, 7) AS tmp FROM table2;
```
`Exception: Exception occurred: org.apache.calcite.runtime.CalciteContextException: From line 1, column 8 to line 1, column 59: No match found for function signature pmod(<NUMERIC>, <NUMERIC>)`

I suppose that PMOD can be implemented as an alias to ABS(MOD()) so Ibis could generate this construction instead. Ibis test name that fails is `test_day_of_week_scalar`.
The following code results in exception:
```
CREATE TABLE table4 (
timestamp_col TIMESTAMP(0));
SELECT CAST(from_unixtime(1523613251, 'yyyy-MM-dd HH:mm:ss') AS timestamp) AS tmp FROM table4;
```
`Exception: Exception occurred: org.apache.calcite.runtime.CalciteContextException: From line 1, column 13 to line 1, column 62: No match found for function signature from_unixtime(<NUMERIC>, <CHARACTER>)`

Ibis test `test_to_timestamp` fails because of this.

I tried experimenting with CAST as in #491 but couldn't find an acceptable alternative form.
The following code results in exception:
```
CREATE TABLE table4 (
timestamp_col TIMESTAMP(0));
SELECT unix_timestamp("timestamp_col") - unix_timestamp('2018-01-01 18:18:18') AS tmp FROM table4;
```
`Exception: Exception occurred: org.apache.calcite.runtime.CalciteContextException: From line 1, column 8 to line 1, column 40: No match found for function signature unix_timestamp(<TIMESTAMP>)`

Ibis test `test_temporal_binop` fails because of this.
The following code results in exception:
```
CREATE TABLE table2 (
bigint_col BIGINT,
string_col TEXT ENCODING DICT(32));
SELECT concat_ws('-', 'a', "string_col", 'c') AS tmp FROM table2;
```
`Exception: Exception occurred: org.apache.calcite.runtime.CalciteContextException: From line 1, column 8 to line 1, column 47: No match found for function signature concat_ws(<CHARACTER>, <CHARACTER>, <CHARACTER>, <CHARACTER>)`

Ibis test `test_string` fails because of this.
The following code results in exception:
```
CREATE TABLE table2 (
bigint_col BIGINT,
string_col TEXT ENCODING DICT(32));
SELECT strright("string_col", 2) AS tmp FROM table2;
```
`Exception: Exception occurred: org.apache.calcite.runtime.CalciteContextException: From line 1, column 8 to line 1, column 34: No match found for function signature strright(<CHARACTER>, <NUMERIC>)`

Ibis test `test_string` fails because of this.
The following core results in exception:
```
CREATE TABLE table2 (
bigint_col BIGINT,
string_col TEXT ENCODING DICT(32));
SELECT substr("string_col", 2 + 1, 3) AS tmp FROM table2;
```
`Exception: Exception occurred: org.apache.calcite.runtime.CalciteContextException: From line 1, column 8 to line 1, column 39: No match found for function signature substr(<CHARACTER>, <NUMERIC>, <NUMERIC>)`

Ibis test `test_string` fails because of this.
The following code results in exception:
```
CREATE TABLE table2 (
bigint_col BIGINT,
string_col TEXT ENCODING DICT(32));
SELECT initcap("string_col") AS tmp FROM table2;
```
`Exception: Function INITCAP(TEXT) not supported.`

Ibis test `test_string` fails because of this.
The following code results in exceptions:
```
CREATE TABLE table2 (
bigint_col BIGINT,
string_col TEXT ENCODING DICT(32))
SELECT ltrim("string_col") AS tmp FROM table2;
SELECT rtrim("string_col") AS tmp FROM table2;
```
`Exception: Exception occurred: org.apache.calcite.runtime.CalciteContextException: From line 1, column 8 to line 1, column 28: No match found for function signature ltrim(<CHARACTER>)`
`Exception: Exception occurred: org.apache.calcite.runtime.CalciteContextException: From line 1, column 8 to line 1, column 28: No match found for function signature rtrim(<CHARACTER>)`

Ibis test `test_string` fails because of this.
The following code leads to a crash.

```
CREATE TABLE table2 (
bigint_col BIGINT,
string_col TEXT ENCODING DICT(32));
SELECT trim("string_col") AS tmp FROM table2;
```
Server prints this message:
`2020-01-08T15:00:02.879711 F 53613 RelAlgAbstractInterpreter.cpp:2182 Check failed: !query_ast.HasParseError()`

Using debug build 1dac507f6e1efb70b0addf0b82cef119fcccb94a on Ubuntu 19.10, gcc 9.2.1.

Stack trace looks like this:
```
#0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007f8707033899 in __GI_abort () at abort.c:79
#2  0x0000562de3985d40 in logger::Logger::~Logger (this=0x7f8700e89a00, __in_chrg=<optimized out>)
    at /nfs/site/home/gashiman/work/omniscidb/Shared/Logger.cpp:383
#3  0x0000562de3dc7550 in deserialize_ra_dag (
    query_ra="{\n  \"rels\": [\n    {\n      \"id\": \"0\",\n      \"relOp\": \"EnumerableTableScan\",\n      \"fieldNames\": [\n        \"index\",\n        \"Unnamed__0\",\n        \"id\",\n        \"bool_col\",\n        \"tinyint_col\",\n       "..., cat=..., ra_executor=0x7f8700e8a3a0, render_opts=0x0)
    at /nfs/site/home/gashiman/work/omniscidb/QueryEngine/RelAlgAbstractInterpreter.cpp:2182
#4  0x0000562de3e11d54 in RelAlgExecutor::executeRelAlgQueryNoRetry (this=0x7f8700e8a3a0,
    query_ra="{\n  \"rels\": [\n    {\n      \"id\": \"0\",\n      \"relOp\": \"EnumerableTableScan\",\n      \"fieldNames\": [\n        \"index\",\n        \"Unnamed__0\",\n        \"id\",\n        \"bool_col\",\n        \"tinyint_col\",\n       "..., co=..., eo=..., render_info=0x0) at /nfs/site/home/gashiman/work/omniscidb/QueryEngine/RelAlgExecutor.cpp:100
#5  0x0000562de3e118bf in RelAlgExecutor::executeRelAlgQuery (this=0x7f8700e8a3a0,
    query_ra="{\n  \"rels\": [\n    {\n      \"id\": \"0\",\n      \"relOp\": \"EnumerableTableScan\",\n      \"fieldNames\": [\n        \"index\",\n        \"Unnamed__0\",\n        \"id\",\n        \"bool_col\",\n        \"tinyint_col\",\n       "..., co=..., eo=..., render_info=0x0) at /nfs/site/home/gashiman/work/omniscidb/QueryEngine/RelAlgExecutor.cpp:73
#6  0x0000562de38aced3 in MapDHandler::<lambda()>::operator()(void) const (__closure=0x7f8700e8a110)
    at /nfs/site/home/gashiman/work/omniscidb/ThriftHandler/MapDHandler.cpp:4510
#7  0x0000562de38bb3fb in measure<std::chrono::duration<long, std::ratio<1, 1000> > >::execution<MapDHandler::execute_rel_alg(TQueryResult&, query_state::QueryStateProxy, const string&, bool, ExecutorDeviceType, int32_t, int32_t, bool, bool, bool, bool, bool) const::<lambda()> >(MapDHandler::<lambda()>) (func=...)
    at /nfs/site/home/gashiman/work/omniscidb/QueryEngine/../Shared/measure.h:32
#8  0x0000562de38ad472 in MapDHandler::execute_rel_alg (this=0x562dea189010, _return=..., query_state_proxy=...,
    query_ra="{\n  \"rels\": [\n    {\n      \"id\": \"0\",\n      \"relOp\": \"EnumerableTableScan\",\n      \"fieldNames\": [\n        \"index\",\n        \"Unnamed__0\",\n        \"id\",\n        \"bool_col\",\n        \"tinyint_col\",\n       "..., column_format=true, executor_device_type=ExecutorDeviceType::CPU, first_n=-1, at_most_n=-1,
    just_explain=false, just_validate=false, find_push_down_candidates=false, just_calcite_explain=false,
    explain_optimized_ir=false) at /nfs/site/home/gashiman/work/omniscidb/ThriftHandler/MapDHandler.cpp:4509
#9  0x0000562de38b2018 in MapDHandler::sql_execute_impl (this=0x562dea189010, _return=..., query_state_proxy=...,
    column_format=true, nonce="", executor_device_type=ExecutorDeviceType::CPU, first_n=-1, at_most_n=-1)
    at /nfs/site/home/gashiman/work/omniscidb/ThriftHandler/MapDHandler.cpp:4958
#10 0x0000562de38870f7 in MapDHandler::<lambda()>::operator()(void) const (__closure=0x7f8700e8af70)
    at /nfs/site/home/gashiman/work/omniscidb/ThriftHandler/MapDHandler.cpp:902
#11 0x0000562de38bafe6 in measure<std::chrono::duration<long, std::ratio<1, 1000> > >::execution<MapDHandler::sql_execute(TQueryResult&, const TSessionId&, const string&, bool, const string&, int32_t, int32_t)::<lambda()> >(MapDHandler::<lambda()>) (func=...) at /nfs/site/home/gashiman/work/omniscidb/QueryEngine/../Shared/measure.h:32
#12 0x0000562de3887730 in MapDHandler::sql_execute (this=0x562dea189010, _return=...,
    session="C6xof9BSAFXP7Hm8WGFc1d79MGRb6P4E",
    query_str="SELECT trim(\"string_col\") AS tmp\nFROM functional_alltypes", column_format=true, nonce="", first_n=-1,
    at_most_n=-1) at /nfs/site/home/gashiman/work/omniscidb/ThriftHandler/MapDHandler.cpp:901
#13 0x0000562de379794e in MapDProcessor::process_sql_execute (this=0x562dea19b9c0, seqid=0, iprot=0x7f86f8003ac0,
    oprot=0x7f86f8003b30, callContext=0x0) at /nfs/site/home/gashiman/work/omniscidb/debug/gen-cpp/MapD.cpp:24862
#14 0x0000562de3788d6a in MapDProcessor::dispatchCall (this=0x562dea19b9c0, iprot=0x7f86f8003ac0, oprot=0x7f86f8003b30,
    fname="sql_execute", seqid=0, callContext=0x0)
    at /nfs/site/home/gashiman/work/omniscidb/debug/gen-cpp/MapD.cpp:23310
#15 0x0000562de36feb92 in apache::thrift::TDispatchProcessor::process (this=0x562dea19b9c0,
    in=std::shared_ptr<class apache::thrift::protocol::TProtocol> (use count 2, weak count 0) = {...},
    out=std::shared_ptr<class apache::thrift::protocol::TProtocol> (use count 2, weak count 0) = {...},
    connectionContext=0x0) at /usr/local/mapd-deps/lib/../include/thrift/TDispatchProcessor.h:121
#16 0x00007f87076be98c in apache::thrift::server::TConnectedClient::run() ()
   from /usr/local/mapd-deps/lib/libthrift-0.11.0.so
#17 0x00007f87076c4e1f in apache::thrift::server::TThreadedServer::TConnectedClientRunner::run() ()
   from /usr/local/mapd-deps/lib/libthrift-0.11.0.so
#18 0x00007f87076d798d in apache::thrift::concurrency::PthreadThread::threadMain(void*) ()
   from /usr/local/mapd-deps/lib/libthrift-0.11.0.so
#19 0x00007f8707208669 in start_thread (arg=<optimized out>) at pthread_create.c:479
#20 0x00007f8707130323 in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95
```