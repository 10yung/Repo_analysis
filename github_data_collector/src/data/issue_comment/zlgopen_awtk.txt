您好！
现在AWTK支持显示文字下划线了吗？
因为使用2fb时，循环中移动有text的label， 感觉有点卡顿，试了其他方法还是一样。
所以想到改成3fb，改成3fb后移动时的确不卡顿， 但是 界面有阴影一样，有闪烁（即使不循环移动控件， 即什么都不做），尤其是界面最下行一排字有的都缺几行点的感觉。

不知道咋回事？

平台：嵌入式ARM + LCD(480*272)
您好，AWTK是非常优秀的GUI，不知道如何用类似于qtcreator等IDE来开发，尤其是Linux上？
列表中一个button占满一个scroll_view，打开窗口时克隆button，设置焦点在指定的button上，但此时页面上显示的仍是第一个button，按上下键后显示正常，请问有什么方法能刷新它的显示，我试过在xml里手动写几个button再设置焦点显示就是正常的，代码如下

    <list_view style="nobg" auto_hide_scroll_bar="true" h="160" x="0" y="40" w="100%" item_height="160">
      <scroll_view style="nobg" name="connect_list" x="0" y="0" w="100%" h="160" item_width="100%">
		<button name="call_1" style="black" focusable="true" focus="false">
			<label name="call_name" tr_text="" x="125" y="50" w="150"  h="25" style="black"/>	
			<image draw_type="icon" name="logo" x="20" y="35" w="90" h="90" image="incall" />	
			<image draw_type="icon" name="mute_logo" x="20" y="35" w="90" h="90" image="mute_big" visible="false"/>	
			<view name="call_press_num" x="0" y="bottom:-3" w="320" h="35" style="number_input" visible="false" > 
				<label name="input_number" x="10" y="0" w="308" h="35" style="black_left" />
			</view>
		</button>
	  </scroll_view>
      <scroll_bar name="scroll_bar" x="right" y="0" w="5" h="100%" value="0" focusable="false"/>
    </list_view>

			wd = widget_lookup(win, "call_1", TRUE);
			button_count=widget_count_children (wd->parent);
			if(button_count < all_call){
				for(i=0;i<all_call-button_count;i++){
					widget_clone(wd, wd->parent);
				}
			}
		        cur_button = scroll_view->children->elms[cur_show_call];
                    widget_set_focused (cur_button, TRUE);

awtk的兄弟们，请教个问题:在main函数里面，在初始化GUI后，我创建了一个非GUI的线程A，A线程用来接收MCU的串口消息，例如某个硬按键被按下时，MCU会发个消息出来。在A线程里面怎么把MCU消息发送到GUI，以便刷新UI。（GUI有好几个window，每次显示只显示一个window，而MCU的消息有可能需要window1处理，也有可能需要window2处理）

main函数：
  application_init();
  /*拉起MCU串口通信*/
  uartComHandelCreate();//非GUI线程A，接收处理MCU消息并发到GUI层


我看了下文档，3.5.5如何自定义事件，

我在非GUI线程A里面这样写：

event_queue_req_t req;
req.event.type = EVT_USER_EVT;
### req.event.target = args;//这个参数传什么呢？？？
main_loop_queue_event(main_loop(), &req);


然后，在GUI里面怎么写呢？awtk在讲这里的时候，例子太简单。有没有你们量产的稍微复杂的例子开源看看？

我的情况是：

我的GUI是在飞思卡尔MX6上跑，MX6通过串口跟一颗MCU通信。


LGPL只能使用动态链接库的方式使用，不能使用原来的代码，所以这里应用汇代码里，inculde ***.inc的方式，可能和开源许可有冲突。
建议针对市场上常见的不同屏幕，提供对应的pixel格式设置，用户只需要选择对应的格式设置（比如，16位的RGB565、18位的RGB565、24位的RGB888等等）。对于一些特殊的屏幕，才需要用户去定义pixel的设置，代码可以这么处理：

#ifndef pixel_from_rgb
#  if LCD_FORMAT == LCD_FORMAT_BGR565_W16
#    define pixel_from_rgb    ......
#  elif LCD_FORMAT == LCD_FORMAT_BGR565_W18
#    define pixel_from_rgb    ......
#  else if  LCD_FORMAT == ....
.....
#  else
#    error Please define LCD_FORMAT!!!
#  endif
#endif

这样，大部分情况下，用户设置LCD_FORMAT后，可以直接使用。如果遇到一些特殊的屏幕，那么用户自己实现pixel_from_rgb之后，也可以使用。
基本原则就是，尽可能让客户做选择题，能够让客户一行代码实现的内容，就不用2行代码，如果资源使用一样的情况下。
我们平台上，实际的屏幕驱动都已经封装好了，屏幕驱动可能会支持多种不同的颜色格式。也就是说，不管用户实际使用什么颜色格式，屏幕驱动接口不变（不依赖实际用户使用的颜色），代码类似这样（显示驱动适配层，用户一般不需要修改）：
#ifdef FRAGMENT_FRAME_BUFFER_SIZE
#   include "lcd/lcd_mem_fragment.inc"

static ret_t __lcd_mem_fragment_flush_vsf(lcd_t* lcd)
{
    vk_disp_t *disp = lcd->impl_data;
    lcd_mem_fragment_t* mem = (lcd_mem_fragment_t*)lcd;
    vk_disp_area_t disp_area;

    disp_area.pos.x = mem->x;
    disp_area.pos.y = mem->y;
    disp_area.size.x = mem->fb.w;
    disp_area.size.y = mem->fb.h;
    disp->ui_data = vsf_eda_get_cur();
    vk_disp_refresh(disp, &disp_area, mem->buff);
    vsf_thread_wfe(VSF_EVT_USER);
    return RET_OK;
}

void vsf_awtk_disp_bind(vk_disp_t *disp, lcd_t *lcd)
{
    lcd->impl_data = disp;
    lcd->flush = __lcd_mem_fragment_flush_vsf;
    disp->ui_on_ready = __vsf_awtk_disp_on_ready;
    vk_disp_init(disp);
}
#endif
通过vsf_awtk_disp_bind，把vk_disp_t的驱动，绑定到awtk的lcd_t，使得我们以前开发好的各种屏幕驱动，可以直接使用。然后，用户实际使用的颜色，是在用户层设置的（同一个屏幕驱动，可以支持几种不同的颜色格式）。我们实际这么处理的时候，awtk的编译会有问题，因为awtk里的一些lcd_t（实际测试使用lcd_mem_fragment_t），依赖具体的颜色设置，使得我们的驱动适配层，也必须依赖特定的颜色设置（而这些设置，是用户层里定义的）。
问题描述：在窗口A打开的情况下，再打开窗口B。窗口A比窗口B大，且窗口A中有软按键a，这时点击软按键a，如何能让窗口B接收到按键事件？
我在使用rich_text的过程中，发现text_align_h并没有生效。无论是right还是center。请问是我哪里写错了吗，还是什么其它的原因。 我的目的就是为了实现字符串的居中，并且自动换行后也要居中。下面是我实现的代码。

![图片](https://user-images.githubusercontent.com/57475406/71876940-ebbfe800-3162-11ea-9756-dbbea660a380.png)

![图片](https://user-images.githubusercontent.com/57475406/71876914-d945ae80-3162-11ea-94c0-8c204ef57640.png)
![图片](https://user-images.githubusercontent.com/57475406/71876972-01351200-3163-11ea-90fa-c3d1a7db1e57.png)
