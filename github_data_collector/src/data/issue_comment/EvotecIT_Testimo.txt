![image](https://user-images.githubusercontent.com/15063294/72096121-dc36cf80-3319-11ea-83c5-953b9781f2d1.png)

Both return no results. Needs fixing in tests

```
Get-WinADForestReplication -WarningAction SilentlyContinue 
repadmin /showrepl * /csv | ConvertFrom-Csv 
```
To make it work on non-English speaking windows server
these URLs contain prioritized lists of MS recommended settings:

https://docs.microsoft.com/en-us/windows/security/threat-protection/windows-security-configuration-framework/level-1-enterprise-basic-security
https://docs.microsoft.com/en-us/windows/security/threat-protection/windows-security-configuration-framework/level-2-enterprise-enhanced-security
https://docs.microsoft.com/en-us/windows/security/threat-protection/windows-security-configuration-framework/level-3-enterprise-high-security

yes, I know... ;-)
- https://docs.microsoft.com/en-us/windows/security/threat-protection/security-policy-settings/network-security-minimum-session-security-for-ntlm-ssp-based-including-secure-rpc-servers
- https://www.stigviewer.com/stig/windows_server_2016/2018-03-07/finding/V-73697
- https://www.ultimatewindowssecurity.com/wiki/page.aspx?spid=NSrpcclients
https://blogs.technet.microsoft.com/secguide/2016/10/02/the-mss-settings/
This control determines if Windows will accept source routed packets.

How to Validate
To validate this, go to the registery key (HKLM\System\CurrentControlSet\Services\Tcpip6\Parameters) and look for the value named (DisableIPSourceRouting), check for the modifiers (ErrorNotOk), get the description (The recommended state for this setting is "Highest protection, source routing is completely disabled".), with the priority (Critical),
Acceptable Value(s)
2

Remediation Steps
#Remediation The GPO for this setting is located under **Computer Configuration\Windows Settings\Security Settings\Local Policies\Security Options\MSS: (DisableIPSourceRouting IPv6) IP source routing protection level (protects against packet spoofing)** For all profiles, the recommended state for this setting is *Highest protection, source routing is completely disabled* **NOTE:** For "MSS:"- prefixed settings, if they are not visible in the Group Policy Editor, download the [Microsoft Security Compliance Manager](http://www.microsoft.com/en-us/download/details.aspx?id=16776), run LocalGPO.msi, and then execute the following command to make them available: **cscript.exe LocalGPO.wsf /ConfigureSCE**
The expected value for the PDC is currently AllSync; however, I cannot find anyone making this recommendation. All advice I have come across has been to set the PDC to NTP.

Microsoft's documentation seems to indicate that time drift on 2016+ guests running on 2016+ hosts should no longer be an issue so it may not be necessary to disable it under those conditions.

_Link_
https://docs.microsoft.com/en-us/windows-server/networking/windows-time-service/windows-server-2016-improvements#mixed-os-environments-win2012r2-and-win2008r2

_Relevant Blurb_
> In some scenarios involving guest domain controllers, Hyper-V TimeSync samples can disrupt domain time synchronization. This should no longer be an issue for Server 2016 guests running on Server 2016 Hyper-V hosts.
The test should skip if no trusts are detected.
Hello

I think this is a great script. Really thorough checking.

That being said, I think it should be Nagios compatible (or even fork it, although sync issues might occur). The script should be ran from a domain controller.

You can read the entire documentation here: https://assets.nagios.com/downloads/nagioscore/docs/nagioscore/3/en/pluginapi.html but the TL;DR is that your last line should be:

Write-Host "Whatever you want Nagios to display as text"
exit $variableholdingexitcode  # 0 for OK, 1 for WARNING, 2 for CRITICAL and 3 for UNKNOWN

$variableholdingexitcode should be:

0 - OK
1 - WARNING
2 - CRITICAL
3 - UNKNOWN

OK is obviously that all checks have gone fine.

I think WARNING and CRITICAL should be defined by you and/or the user. You can, for example, decide that if there are six domain controllers and two cannot be reached, it is a WARNING status but if it cannot reach four, it should be a CRITICAL.

Not being able to resolve DNS against DCs should be a CRITICAL automatically with no WARNING state possible.

etc, etc....

And the user should also be able to -IncludeAsWarnings and pass a string array with checks he wants to be warnings if they fail or -ExcludeAsWarnings with again a string array with check he wants to ignore if they fail

Same with -IncludeAsCritical and -ExcludeAsCritical

Also -CompletelyInclude and -CompletelyExclude 

UNKNOWN is mainly if the script fails for some reason out of your control....Running it on a 2003 DC if it isnt supported, should return a UNKNOWN for example.

I hope this gives you some ideas and Im sure plently more with input with even better ideas.

Thanks!


