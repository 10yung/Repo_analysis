Response to preflight request doesn't pass access control check: No 'Access-Control-Allow-Origin' header is present on the requested resource.

How to set 'Access-Control-Allow-Origin' ?
I tested the ng2-file-upload on my vm without any office installed, and I am trying to upload a file with a file type of .doc & .docx and it keeps me going to this condition ->

this.uploader.onWhenAddingFileFailed = (item, filter, options) => { }

is there a workaround on this to work without me having to install office at all?
I don't what's the error, because I tried to use it with my app in ionic, but when I want to upload the files the responsive says succes : false , I have tried send files with postman and it works well. 
When I try ng2-file-upload, the console show this.
![ng2Res](https://user-images.githubusercontent.com/38823101/71646721-f71d9a00-2cb0-11ea-8429-bd6ff34644d8.PNG)
![ng1](https://user-images.githubusercontent.com/38823101/71646722-f71d9a00-2cb0-11ea-925f-42a6c36ff825.PNG)

Hi,

I'm trying to prevent the multiple file drop in `ng2FileDrop`, but I couldn't found any way to achieve this approach.

Is this possible in library?

Regards,

Yougesh
The uploader multiple files in one request so customized file uploads after getting a response using clearQueue() not working get single file only removed


> core.js:3926 ERROR TypeError: Cannot read property 'abort' of undefined at FileUploaderCustom.push../node_modules/ng2-file-upload/file-upload/file-uploader.class.js.FileUploader.cancelItem (file-uploader.class.js:112) at FileItem.push../node_modules/ng2-file-upload/file-upload/file-item.class.js.FileItem.cancel (file-item.class.js:38) at FileUploaderCustom.push../node_modules/ng2-file-upload/file-upload/file-uploader.class.js.FileUploader.removeFromQueue (file-uploader.class.js:85) at FileItem.push../node_modules/ng2-file-upload/file-upload/file-item.class.js.FileItem.remove (file-item.class.js:41) at FileUploaderCustom.push../node_modules/ng2-file-upload/file-upload/file-uploader.class.js.FileUploader.clearQueue (file-uploader.class.js:92) at FileUploaderCustom.uploaderOnward.onSuccessItem (mandate-initial.component.ts:267) at FileUploaderCustom.push../node_modules/ng2-file-upload/file-upload/file-uploader.class.js.FileUploader._onSuccessItem (file-uploader.class.js:396) at XMLHttpRequest.xhr.onload [as __zone_symbol__ON_PROPERTYload] (fileUploader.ts:71) at XMLHttpRequest.wrapFn (zone.js:1255) at ZoneDelegate.invokeTask (zone.js:431)

```
export class FileUploaderCustom extends FileUploader {

    constructor(
        options: FileUploaderOptions
    ) {
        super(options);
    }

    uploadAllFiles(): void {
        // const _this = this;
        const xhr = new XMLHttpRequest();
        const sendable = new FormData();
        const fakeItem: FileItem = null;
        this.onBuildItemForm(fakeItem, sendable);

        for (const item of this.queue) {
            item.headers = [];
            item.withCredentials = true;
            item.formData = [];
            item.isReady = true;
            item.isUploading = true;
            item.isUploaded = false;
            item.isSuccess = false;
            item.isCancel = false;
            item.isError = false;
            item.progress = 0;
            item.index = void 0;
            if (typeof item._file.size !== 'number') {
                throw new TypeError('The file specified is no longer valid');
            }
            sendable.append('file', item._file, item.file.name);
        }

        if (this.options.additionalParameter !== undefined) {
            Object.keys(this.options.additionalParameter).forEach((key) => {
                sendable.append(key, this.options.additionalParameter[key]);
            })
        }

        xhr.onerror = () => {
            this.onErrorItem(fakeItem, null, xhr.status, null);
        }

        xhr.onabort = () => {
            this.onErrorItem(fakeItem, null, xhr.status, null);
        }

        xhr.open('POST', this.options.url, true);
        xhr.withCredentials = true;
        if (this.options.headers) {
            for (let _i = 0, _a = this.options.headers; _i < _a.length; _i++) {
                const header = _a[_i];
                xhr.setRequestHeader(header.name, header.value);
            }
        }
        if (this.authToken) {
            xhr.setRequestHeader(this.authTokenHeader, this.authToken);
        }

        xhr.onload = () => {
            const headers = this._parseHeaders(xhr.getAllResponseHeaders());
            const response = this._transformResponse(xhr.response, headers);
            const gist = this._isSuccessCode(xhr.status) ? 'Success' : 'Error';
            const method = '_on' + gist + 'Item';
            for (const item of this.queue) {
                this[method](item, response, xhr.status, headers);
            }
            this._onCompleteItem(this.queue[0], response, xhr.status, headers);
        }

        xhr.send(sendable);
    }
}
responses

this.uploaderUpdate.onSuccessItem = (item, response, status, headers) => {
      this.uploadResult = JSON.parse(response);
      console.log(this.uploadResult)
      if (this.uploadResult.rescode == "0000") {
        this.uploaderUpdate.clearQueue();
        this.editMyContainer = !this.editMyContainer;
        this.toastyService.success(this.uploadResult.Description);
      } else if (this.uploadResult.rescode == "0001") {
        this.toastyService.error(this.uploadResult.ErrorDescription);

      } else if (this.uploadResult.rescode == "0002") {
        this.toastyService.error(this.uploadResult.ErrorDescription);
      }
    };
```
I'm creating a file upload as below in my component.html
<input type="file" ng2FileSelect [uploader]="uploader"  #file hidden multiple accept=".zip,.DLRLE,.DLARM" />    

and then initializing it in the .ts 

public uploader: FileUploader;
this.uploader = new FileUploader({
            url: this.configuration.Server() + URL,
            autoUpload : false,
            disableMultipart: false,
        });

however its still sending the file to my controller as soon as i hit open on the file selector. am i setting the autoupload incorrectly?
Hello everyone,

my colleague just cloned our repository and encountered the following error message:
Module not found: Error: Can't resolve 'ng2-file-upload/ng2-file-upload' in '...\src\app\modules\shared\components'

After a bit of research, we found out that his installation had version 1.4.0 installed (not working), but I had 1.3.0 installed (working). So it looks like 1.4.0 might have introduced breaking changes and should've been versioned to 2.0.0 according to npm / semver?

We now have fixed our version to 1.3.0, but maybe you could change the publishing version.

Cheers
Marcel
Hi everyone,

**How can I stock multiple files in an array to send them in a request ?**

in the inerface user I can select multiple files :

`<input id="uploadDocument" type="file" name="filename" ng2FileSelect (onFileSelected)="onFileSelected($event)" [uploader]="uploader" multiple  />`

here is my TypeScript : 
```
public uploader:FileUploader;
	public hasBaseDropZoneOver:boolean;
	public response:string;
	public filesToUpload: Array<File>;

	constructor(private dialog: MatDialog) {this.filesToUpload = [];}

	ngOnInit() {
		this.uploader = new FileUploader({
			url: URL,
			disableMultipart: true, // 'DisableMultipart' must be 'true' for formatDataFunction to be called.
			formatDataFunctionIsAsync: true,
			formatDataFunction: async (item) => {
				return new Promise( (resolve, reject) => {
					resolve({
						name: item._file.name,
						length: item._file.size,
						contentType: item._file.type,
						date: new Date()
					});
				});
			}

		});
		this.hasBaseDropZoneOver = false;
		this.response = '';

		this.uploader.response.subscribe( res => this.response = res );
	}

	public onFileSelected(fileInput: any) {
		this.filesToUpload.push(fileInput.target.files)
		for(var i =0; i < this.filesToUpload.length; i++){
			console.log(this.filesToUpload[i]);
			console.log(this.filesToUpload[i].name);
		}
	}

```

Wanted to know if ng2-file-upload works with Angular 6, 7 and 8. 
I've seen an issue dated year ago with a same exact problem with no solution. How to get reference to html ? I do have multiple inputs for different categories

`<input ng2FileSelect id="file_{{category['id']}}" name="file_{{category['id']}}" type="file" accept="*.*" [uploader]="documentUpload"/>`

Could you also update your documentation ?