I think the community has moved from Gitter to Slack a few months ago. This makes it official in the README. Let me know if other places needs to be updated in the documentation.

I made up a badge with shield.io, feedback welcome for the colour and copy in it.
* Cookiecutter version: 1.7.0
* Template project url:
* Python version: 3.7
* Operating System: Windows 7

### Description:

The documentation in step 3 says to use the [project_slug] for the GitHub repo.  Cookiecutter never asked me for a [project_slug].  Should this be replaced with repo_name?
* Cookiecutter version: 1.7.0
* Template project url:
* Python version: 3.7
* Operating System: Windows 7

### Description:

Running cookiecutter from the cmd prompt crashes on Windows because it can't find the 'git' command (which isn't output in an error message, just a traceback).  The documentation should be updated to specify to run it from the git bash instead on windows.

### What I've run:

    cookiecutter gh:audreyr/cookiecutter-pypackage

    ...
    File "c:\users\joe\appdata\local\programs\python\python37-32\lib\subprocess.py", line 395, in check_output
    **kwargs).stdout
    File "c:\users\joe\appdata\local\programs\python\python37-32\lib\subprocess.py", line 487, in run
    output=stdout, stderr=stderr)
    subprocess.CalledProcessError: Command '['git', 'clone', 'https://github.com/audreyr/cookiecutter-pypackage.git']' returned non-zero exit status 128.

This is a first step towards full PEP257 compliance. It includes a
series of excludes in order to keep the change size manageable.

Please raise follow-ups which remove excludes one-by-one.

Related: #1263
* Check first line of provided files for correct format and docstrings
* Docstrings should follow [PEP257](https://www.python.org/dev/peps/pep-0257/).  
* We use [pydocstyle](https://pypi.org/project/pydocstyle/) for validation.

Current validation log:

```
./setup.py:1 at module level:
        D100: Missing docstring in public module
./cookiecutter/zipfile.py:1 at module level:
        D100: Missing docstring in public module
./build/lib/cookiecutter/zipfile.py:1 at module level:
        D100: Missing docstring in public module
./tests/__init__.py:1 at module level:
        D104: Missing docstring in public package
./tests/test-extensions/custom-extension-pre/hooks/pre_gen_project.py:1 at module level:
        D100: Missing docstring in public module
./tests/test-extensions/hello_extension/__init__.py:1 at module level:
        D104: Missing docstring in public package
./tests/test-extensions/custom-extension-post/hooks/post_gen_project.py:1 at module level:
        D100: Missing docstring in public module
./tests/test-pyhooks/hooks/pre_gen_project.py:1 at module level:
        D100: Missing docstring in public module
./tests/test-pyhooks/hooks/post_gen_project.py:1 at module level:
        D100: Missing docstring in public module
./tests/test-output-folder/{{cookiecutter.test_name}}/{{cookiecutter.folder_name}}/{{cookiecutter.filename}}.py:1 at module level:
        D100: Missing docstring in public module
./tests/undefined-variable/dir-name/{{cookiecutter.project_slug}}/{{cookiecutter.foobar}}/helloworld.py:1 at module level:
        D100: Missing docstring in public module
./tests/test-pyshellhooks/hooks/pre_gen_project.py:1 at module level:
        D100: Missing docstring in public module
./tests/test-pyshellhooks/hooks/post_gen_project.py:1 at module level:
        D100: Missing docstring in public module
```

Subtask for #742 
Cover `./tests/test-extensions/hello_extension/hello_extension.py` file with docstrings and follow [PEP257](https://www.python.org/dev/peps/pep-0257/). We use [pydocstyle](https://pypi.org/project/pydocstyle/) for validation.

Current validation log:

```
./tests/test-extensions/hello_extension/hello_extension.py:1 at module level:
        D100: Missing docstring in public module
./tests/test-extensions/hello_extension/hello_extension.py:7 in public class `HelloExtension`:
        D101: Missing docstring in public class
./tests/test-extensions/hello_extension/hello_extension.py:10 in public method `__init__`:
        D107: Missing docstring in __init__
./tests/test-extensions/hello_extension/hello_extension.py:16 in public method `parse`:
        D102: Missing docstring in public method
```

Subtask for #742 
Cover `./docs/ccext.py` file with docstrings and follow [PEP257](https://www.python.org/dev/peps/pep-0257/). We use [pydocstyle](https://pypi.org/project/pydocstyle/) for validation.

Current validation log:
```
./docs/ccext.py:1 at module level:
        D100: Missing docstring in public module
./docs/ccext.py:11 in public class `CcCommandLineOptions`:
        D101: Missing docstring in public class
./docs/ccext.py:22 in public method `process_actions`:
        D102: Missing docstring in public method
./docs/ccext.py:28 in public method `run`:
        D102: Missing docstring in public method
./docs/ccext.py:37 in public function `setup`:
        D103: Missing docstring in public function
```

Subtask for #742 
Cover `./docs/conf.py` file with docstrings and follow [PEP257](https://www.python.org/dev/peps/pep-0257/). We use [pydocstyle](https://pypi.org/project/pydocstyle/) for validation.

Current validation log:

```
./docs/conf.py:1 at module level:
        D100: Missing docstring in public module
./docs/conf.py:28 in public class `Mock`:
        D101: Missing docstring in public class
./docs/conf.py:29 in public method `__init__`:
        D107: Missing docstring in __init__
./docs/conf.py:32 in public method `__call__`:
        D102: Missing docstring in public method
./docs/conf.py:36 in public method `__getattr__`:
        D105: Missing docstring in magic method
```

Subtask for #742 
* PRs with no code change goes to 1.7.0 release project. Documentation/tests changes can be approved.
* PRs with code changes, but for old system goes to 1.8.0 release. 
* Huge code change proposals goes to 2.0.0. for discussion/validation.

* Outdated/Not related issues should be closed.
Two weeks ago I was given full permissions to this repository, as well as to readthedocs and pypy. 
I see that there is a very small interest in this project from developers, so several things will be changed soon. This is an announcement about these changes.

1. At the Sunday version `1.7.0` will be released to pypy. It will be the current master, with maybe some not-code related changes.
2. This will be the last release with full code reviews from several core committers. Just because it delays development.
3. The final release of `1.7.x` expected on December 31. Only bugfixes for  `1.7.0` will be reviews at this time. 

New year plan.

The history of this project shows two things.
1. It is self-full at this moment. I.e. it does the thing that supposes to do at this moment. All problems have some kinds of workarounds.
2. Waiting for a sponsor is non-effective.

So the decision:

Let's make something new. With honor and respect to the past.

1. From January 1st and later master branch will include new changes that can be non-compatible with the old version but should introduce new functions.
2. Fixes for the old version will be included in new releases of `1.7.x`, but only bugfixes for confirmed bugs will be included. All new development should be made in the new version `2.0.x`
3. Contributors list for versions 1.x and 2.x will be separated in the documentation.
4. Templates links will be removed from the main master page, as we cannot control templates live and security. I will try to create issue at every template branch, how to implement correct keywords for GitHub search.
5. Most of the issues and pull requests will be closed or merged to 2.0.0 without waiting for contributors. Only live work should be at issues/pr page.

Feel free to comment on this issue. Every thought will be included in the development plan.