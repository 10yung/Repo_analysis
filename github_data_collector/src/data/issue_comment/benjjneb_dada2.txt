Hello, 
I have variable length barcode and in my case I trimmed all my sequences to the maximum length (from my longest barcode), so I have for smallest barcoded sequences a lost of a few true biological sequences at the beginning and an alignment of trimmed sequences will look like this:

```
AAAGTTATCGGC (for longest barcoded sequence)
--AGTTATCGGC
------ATCGGC (for the shortest barcoded sequence)
```
From version 1.3.3 DADA2 allowed variable length amplicon for the _dada_ aligner  to deal with ITS amplicons: [NEWS](https://github.com/benjjneb/dada2/blob/master/NEWS) and the _collapseNomismatch_  to merge pair with variable length BUT what about _learnErrors_ ? Does it takes into account the variable length/start ? Like performing an alignment of the sub sampled sequences before the error learning ? This would begin the error learning score at position 7 for the **shortest** barcoded sequence instead of a position 1 from my above example.

To make it short: can a variable start of amplicon sequence compromise learn Errors (or other subsequent functions)?
Thanks in advance,
RÃ©mi
Probably derived from iBOL: https://www.gbif.org/dataset/040c5662-da76-4782-a48e-cdea1892d14c

Ideal would be to work out a solution like we did for UNITE where one of the official release files on their end can be sniffed and parsed as is, w/o additional reformatting, but not sure if that is possible here.
Hi, Benjamin:

I have encountered a problem that has been bothering me for days. I am using DADA2 to deal with some SSU data sequenced with Miseq PE300, after **Sample inference** I have dozens of sequence variants per sample (meet my expectations), but after the**Merge paired reads** and **Construct sequence table** the ASVs number increased to thousands and tens of thousands, highly out of my expectations. I have some experience in analyzing 16S and ITS data using DADA2, but I cannot figure out what is wrong with my process, please help me.

Package version: 1.14.0;
Data: paired-end sequencing data of SSU;
Expected ASVs: 100~200
Note: non-overlaping reads using mergePairs(..., justConcatenate = TRUE)

dadaFs:
![dadaFs](https://user-images.githubusercontent.com/46585709/72554047-e5eda380-38d4-11ea-9caa-f1ef738632f1.jpg)
dadaRs:
![dadaRs](https://user-images.githubusercontent.com/46585709/72554056-e84ffd80-38d4-11ea-98f7-ca867e8a713f.jpg)
dim(seqtab)
![dimseqtab](https://user-images.githubusercontent.com/46585709/72554061-ea19c100-38d4-11ea-9751-30c80bdb8ee8.jpg)

All the best wishes,
Wei Fu
Hi,
I encountered this problem with the 'derepFastq' command:
Error in add(bin) : 
  'Calloc' could not allocate memory (33218645 of 1 bytes)

No problems with the forward reads, only with the Reverse ones.

Thanks in advance for the reply.


May be related to #684 and #726.

Currently on dada2 version 1.14. First observed when trying to use the UNITE database, but can also replicate using the standard RDP trainset (rdp_train_set_16.fa.gz).

I tried to update RcppParallel using BiocManager (on version 4.4.4), which appears to be downstream of the fix described in the previous issues.

Output from sessionInfo():
```
> sessionInfo()
R version 3.6.1 (2019-07-05)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Ubuntu 18.04.3 LTS

Matrix products: default
BLAS:   /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.7.1
LAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.7.1

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              
 [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    
 [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   
 [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 
 [9] LC_ADDRESS=C               LC_TELEPHONE=C            
[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
[1] dada2_1.14.0 Rcpp_1.0.3  

loaded via a namespace (and not attached):
 [1] plyr_1.8.5                  RColorBrewer_1.1-2         
 [3] pillar_1.4.3                compiler_3.6.1             
 [5] GenomeInfoDb_1.22.0         XVector_0.26.0             
 [7] bitops_1.0-6                tools_3.6.1                
 [9] zlibbioc_1.32.0             lattice_0.20-38            
[11] lifecycle_0.1.0             tibble_2.1.3               
[13] gtable_0.3.0                png_0.1-7                  
[15] pkgconfig_2.0.3             rlang_0.4.2                
[17] Matrix_1.2-17               DelayedArray_0.12.1        
[19] parallel_3.6.1              GenomeInfoDbData_1.2.2     
[21] stringr_1.4.0               hwriter_1.3.2              
[23] dplyr_0.8.3                 Biostrings_2.54.0          
[25] S4Vectors_0.24.1            IRanges_2.20.1             
[27] stats4_3.6.1                grid_3.6.1                 
[29] tidyselect_0.2.5            glue_1.3.1                 
[31] Biobase_2.46.0              R6_2.4.1                   
[33] jpeg_0.1-8.1                BiocParallel_1.20.1        
[35] latticeExtra_0.6-29         reshape2_1.4.3             
[37] ggplot2_3.2.1               purrr_0.3.3                
[39] magrittr_1.5                Rsamtools_2.2.1            
[41] matrixStats_0.55.0          scales_1.1.0               
[43] BiocGenerics_0.32.0         GenomicRanges_1.38.0       
[45] GenomicAlignments_1.22.1    ShortRead_1.44.1           
[47] assertthat_0.2.1            SummarizedExperiment_1.16.1
[49] colorspace_1.4-1            stringi_1.4.3              
[51] RCurl_1.95-4.12             lazyeval_0.2.2             
[53] RcppParallel_4.4.4          munsell_0.5.0              
[55] crayon_1.3.4               

```
Greetings! I'm hoping to use dada2 as part of a pipeline for analyzing data from an experiment using microbial cells carrying a plasmid with a 20-mer barcode that helps us distinguish cell lineages or strains. We're using Illumina to sequence the barcode and some of the surrounding plasmid sequence, and using the barcode sequences, rather than genomic DNA, to track community dynamics. Since our sequence data include a sizeable segment of the plasmid backbone, which is a known, invariant sequence, it seems that we should be able to use the sequence data covering the backbone segment to calculate error rates directly, rather than using the dada2 algorithm to estimate them... and then apply those error rates in doing sample inference on the barcode segments. Does that make sense? Would it give us any improvement in terms of either accuracy or efficiency? If so, can you recommend a way of doing it within the dada2 package, or should we plan on writing a new script of my own to generate an error rates matrix?
Hello,
I am new in this field and having trouble in analysing my data. Can anyone please suggest me what exactly is wrong in creating tree. As m getting this error after 20th days :
> fitGTR <- optim.pml(fitGTR, model="GTR", optInv=TRUE, optGamma=TRUE,
+         rearrangement = "stochastic", control = pml.control(trace = 0))
Error in optim(par = lbf, fn = fn, gr = NULL, method = "Nelder-Mead",  :
  function cannot be evaluated at initial parameters
In addition: There were 48 warnings (use warnings() to see them)
> warnings()
Warning messages:
1: In optimize(f = fn, interval = c(0.1, 500), lower = 0.1,  ... :
  NA/Inf replaced by maximum positive value
2: In optimize(f = fn, interval = c(0.1, 500), lower = 0.1,  ... :
  NA/Inf replaced by maximum positive value

Please suggest.


Silva 138 was just released. Do you plan to put it centrally on https://benjjneb.github.io/dada2/training.html? Or should users generate the dada versions on their own?
Hi,

We're running a set of (human fecal) samples through DADA2. It's a sequencing run on a MiSeq, V4 region used.
While the quality profiles we get from the MiSeq look ok, the ones from DADA2 are a bit worrysome.
Here the MiSeq (F & R);
![image](https://user-images.githubusercontent.com/20225551/70906015-ae55b800-2005-11ea-8a78-b8247586bb76.png)

Here the DADA2 for a couple of samples (FWD):
![image](https://user-images.githubusercontent.com/20225551/70906030-b6adf300-2005-11ea-9620-dcd9b378d502.png)

And REV
![image](https://user-images.githubusercontent.com/20225551/70906035-ba417a00-2005-11ea-90c3-21ada5e1fead.png)


Any idea why they look so "bad"? We can still use them, as the FWD reads are very good and we don't need much more from the REV, but still, would be good to know why they look like this.

Some additional information on the sequencing run:
We're using V3 chemistry kits, density was 723 (with over 25% PhiX), and Q30 r1=95.4, Q30 r2=82.9. 



Thanks!
Hi 
I am new to dada2, I have demultiplexed 454 sequence contain 20 samples. I am not able to adapt the illumina workflow so any one can send the script. It would be timely help and very helpful.
Please help me in this issue.

Thank you for your valuable time.