Release [1.4.2](https://github.com/doctrine/data-fixtures/milestone/15)



1.4.2
=====

- Total issues resolved: **0**
- Total pull requests resolved: **1**
- Total contributors: **1**

Bug
---

 - [340: Fix doctrine/data-fixtures PR#334](https://github.com/doctrine/data-fixtures/pull/340) thanks to @stephen-lewis



I have this issue today  at `doctrine/data-fixtures    v1.3.2 `, what I did wrong? 



Order.orm.xml
```
<doctrine-mapping xmlns="http://doctrine-project.org/schemas/orm/doctrine-mapping"
                  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                  xmlns:gedmo="http://gediminasm.org/schemas/orm/doctrine-extensions-mapping"
                  xsi:schemaLocation="http://doctrine-project.org/schemas/orm/doctrine-mapping
                                      http://doctrine-project.org/schemas/orm/doctrine-mapping.xsd">

    <entity name="Acme\Bundle\OrderBundle\Entity\Order" table="acme_order">
        <id name="id" column="id" type="integer">
            <generator strategy="AUTO" />
        </id>
        <one-to-one field="review" target-entity="Acme\Bundle\ReviewBundle\Entity\OrderReview" mapped-by="reviewSubject"/>
        <one-to-one field="report" target-entity="Acme\Bundle\ReportBundle\Entity\Report" mapped-by="order"/>
    </entity>
</doctrine-mapping>
```

OrderReview.orm.xmln
```
<doctrine-mapping xmlns="http://doctrine-project.org/schemas/orm/doctrine-mapping">
    <entity name="Acme\Bundle\ReviewBundle\Entity\OrderReview" table="acme_order_review">
     <id name="id" column="id" type="integer">
            <generator strategy="AUTO" />
        </id>
        <one-to-one field="reviewSubject" inversed-by="review" target-entity="Acme\Bundle\OrderBundle\Entity\Order"/>
    </entity>
</doctrine-mapping>

```

Report.orm.xml
```
<doctrine-mapping xmlns="http://doctrine-project.org/schemas/orm/doctrine-mapping"
                  xmlns:gedmo="http://gediminasm.org/schemas/orm/doctrine-extensions-mapping"
                  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                  xsi:schemaLocation="http://doctrine-project.org/schemas/orm/doctrine-mapping
                                      http://doctrine-project.org/schemas/orm/doctrine-mapping.xsd">

    <entity name="Acme\Bundle\ReportBundle\Entity\Report" table="acme_auto_report"  >
        <id name="id" column="id" type="integer">
            <generator strategy="AUTO" />
        </id>

        <one-to-one field="order" inversed-by="report" target-entity="Acme\Bundle\OrderBundle\Entity\Order" />
       
    </entity>

</doctrine-mapping>
```

the the result table orders are following, but `acme_auto_report` table hold foreign key to acme_order,  it must be before the `acme_order` table like `acme_order_review`  table.
``` 
26 => "acme_order_review"
  27 => "acme_order"
  34 => "acme_auto_report"
```

_Originally posted by @videni in https://github.com/doctrine/data-fixtures/issues/230#issuecomment-556507466_
service:
```
<?php

namespace App\Resources\DataFixtures\MongoDB;

use App\Domain\Document\User;
use Doctrine\Common\DataFixtures\AbstractFixture;
use Doctrine\Common\DataFixtures\OrderedFixtureInterface;
use Doctrine\Common\Persistence\ObjectManager;
use Faker\Factory;
use Faker\ORM\Doctrine\Populator;
use FoundersLane\UserBundle\Database\Contract\Activatable;

class UserDataLoader extends AbstractFixture implements OrderedFixtureInterface
{
    public function load(ObjectManager $manager): void
    {
        // stuff here
    }
}
```

service registration is as such:
```
services:
    # ... all other stuff here, including autowiring = true
    App\Resources\DataFixtures\MongoDB\:
        resource: '%kernel.project_dir%/src/Resources/DataFixtures/MongoDB'
        tags: ['doctrine.fixture.odm']
```

```./bin/console debug:autowiring --all -- Fixture```:
```
Autowirable Types
=================

 The following classes & interfaces can be used as type-hints when autowiring:
 (only showing classes/interfaces matching Fixture)
 
 App\Resources\DataFixtures\MongoDB\UserDataLoader
 
 Load data fixtures from bundles.
 Doctrine\Bundle\MongoDBBundle\Command\LoadDataFixturesDoctrineODMCommand
 
 FoundersLane\UserBundle\DataFixtures\Processor\UserProcessor

 Pro-tip: use interfaces in your type-hints instead of classes to benefit from the dependency inversion principle.
```

YET, ```./bin/console doctrine:mongodb:fixtures:load -n -vvv``` tells me:
```[ERROR] Could not find any fixture services to load.```
What am I doing wrong? Thanks.
In case of sequences based auto-increment (for example in PgSQL), fixture loading not clean sequence.
This causes certain difficulties with testing, for example, when we need to link cross project entities.

This PR resolve that issue, by re-creating sequences, if fixtures loading requested with "truncate" flag.
When adding the `excluded` option to the Symfony command in https://github.com/doctrine/DoctrineFixturesBundle/pull/289, a couple of questions came up with respect to how this is supposed to handle duplicate key constraints in fixtures (in case fixtures are loaded that write to tables that weren't purged), and how to handle cascading foreign key constraints that would remove data from tables that aren't supposed to be purged.

Since those are problems with the concept of excluding tables from purging (and not with the integration of this library into Symfony), I suggest discussing the issues around this functionality here.

Given the potentially severe issues, I would suggest deprecating the functionality in the next minor release and removing it in the next major version. Since the library is designed to pre-populate a database with initial data, I'm not sure if this is a use-case we really want to cover.
I add a listener to doctrine like this : https://www.doctrine-project.org/projects/doctrine-orm/en/2.6/cookbook/sql-table-prefixes.html
When I use 'doctrine:fixtures:load' , there is no call to the listener.
the listenert works well with 'doctrine:schema:create'  and work with the application
So im obviously working on my website and for back end trial and error junk i require user logins to get at admin sections for reasons. it would be nice if instead of a database purge, wiping my 3 users of various permission levels, it would only drop/create tables that fixtures will be working on, as at present i am not creating dummy user data and its a pain to recreate the users each time i reload fixtures.
Should be allowed to return an empty array.
In our current project we have an Abstract Fixture which implements the interface, but sometimes children won't have any dependencies.

Could be fixed in Doctrine\Common\DataFixtures\Loader Line 257, instead of throwing an exception when the array is empty set `$sequenceForClasses[$fixtureClass] = 0;`

Should I open a PR for this?
Newer versions od doctrine deprecated doctrine/common package. 

Please remove this dependency and depend on new doctrine packages as needed.
Did a clean clone and ran tests, got bunch of errors:
```
$ php7.1 vendor/bin/phpunit 
PHPUnit 7.2.4 by Sebastian Bergmann and contributors.

  Warning - The configuration file did not pass validation!
  The following problems have been detected:

  Line 12:
  - Element 'phpunit', attribute 'syntaxCheck': The attribute 'syntaxCheck' is not allowed.

  Test results may not be as expected.


...........REEEEE.........S......................                 49 / 49 (100%)

Time: 210 ms, Memory: 20.00MB

There were 5 errors:

1) Doctrine\Tests\Common\DataFixtures\Executor\PHPCRExecutorTest::testExecuteSingleFixtureWithNoPurge
TypeError: Argument 1 passed to Doctrine\Common\DataFixtures\Executor\PHPCRExecutor::__construct() must be an instance of Doctrine\ODM\PHPCR\DocumentManagerInterface, instance of Mock_DocumentManager_f11087ce given, called in /www/doctrine/data-fixtures/tests/Doctrine/Tests/Common/DataFixtures/Executor/PHPCRExecutorTest.php on line 24

/www/doctrine/data-fixtures/lib/Doctrine/Common/DataFixtures/Executor/PHPCRExecutor.php:25
/www/doctrine/data-fixtures/tests/Doctrine/Tests/Common/DataFixtures/Executor/PHPCRExecutorTest.php:24

2) Doctrine\Tests\Common\DataFixtures\Executor\PHPCRExecutorTest::testExecuteMultipleFixturesWithNoPurge
TypeError: Argument 1 passed to Doctrine\Common\DataFixtures\Executor\PHPCRExecutor::__construct() must be an instance of Doctrine\ODM\PHPCR\DocumentManagerInterface, instance of Mock_DocumentManager_f11087ce given, called in /www/doctrine/data-fixtures/tests/Doctrine/Tests/Common/DataFixtures/Executor/PHPCRExecutorTest.php on line 42

/www/doctrine/data-fixtures/lib/Doctrine/Common/DataFixtures/Executor/PHPCRExecutor.php:25
/www/doctrine/data-fixtures/tests/Doctrine/Tests/Common/DataFixtures/Executor/PHPCRExecutorTest.php:42

3) Doctrine\Tests\Common\DataFixtures\Executor\PHPCRExecutorTest::testExecuteFixtureWithPurge
TypeError: Argument 1 passed to Doctrine\Common\DataFixtures\Executor\PHPCRExecutor::__construct() must be an instance of Doctrine\ODM\PHPCR\DocumentManagerInterface, instance of Mock_DocumentManager_f11087ce given, called in /www/doctrine/data-fixtures/tests/Doctrine/Tests/Common/DataFixtures/Executor/PHPCRExecutorTest.php on line 63

/www/doctrine/data-fixtures/lib/Doctrine/Common/DataFixtures/Executor/PHPCRExecutor.php:25
/www/doctrine/data-fixtures/tests/Doctrine/Tests/Common/DataFixtures/Executor/PHPCRExecutorTest.php:63

4) Doctrine\Tests\Common\DataFixtures\Executor\PHPCRExecutorTest::testExecuteFixtureWithoutPurge
TypeError: Argument 1 passed to Doctrine\Common\DataFixtures\Executor\PHPCRExecutor::__construct() must be an instance of Doctrine\ODM\PHPCR\DocumentManagerInterface, instance of Mock_DocumentManager_f11087ce given, called in /www/doctrine/data-fixtures/tests/Doctrine/Tests/Common/DataFixtures/Executor/PHPCRExecutorTest.php on line 83

/www/doctrine/data-fixtures/lib/Doctrine/Common/DataFixtures/Executor/PHPCRExecutor.php:25
/www/doctrine/data-fixtures/tests/Doctrine/Tests/Common/DataFixtures/Executor/PHPCRExecutorTest.php:83

5) Doctrine\Tests\Common\DataFixtures\Executor\PHPCRExecutorTest::testFailedTransactionalStopsPurgingAndFixtureLoading
TypeError: Argument 1 passed to Doctrine\Common\DataFixtures\Executor\PHPCRExecutor::__construct() must be an instance of Doctrine\ODM\PHPCR\DocumentManagerInterface, instance of Mock_DocumentManager_f11087ce given, called in /www/doctrine/data-fixtures/tests/Doctrine/Tests/Common/DataFixtures/Executor/PHPCRExecutorTest.php on line 103

/www/doctrine/data-fixtures/lib/Doctrine/Common/DataFixtures/Executor/PHPCRExecutor.php:25
/www/doctrine/data-fixtures/tests/Doctrine/Tests/Common/DataFixtures/Executor/PHPCRExecutorTest.php:103

--

There was 1 risky test:

1) Doctrine\Tests\Common\DataFixtures\Executor\ORMExecutorTest::testExecuteTransaction
This test did not perform any assertions

ERRORS!
Tests: 49, Assertions: 111, Errors: 5, Skipped: 1, Risky: 1.
```

Deps:
```
$ cm show
doctrine/annotations               v1.6.0 Docblock Annotations Parser
doctrine/cache                     v1.7.1 Caching library offering an object-oriented API for many cache backends
doctrine/collections               v1.5.0 Collections Abstraction library
doctrine/common                    v2.8.1 Common Library for Doctrine projects
doctrine/dbal                      v2.7.1 Database Abstraction Layer
doctrine/inflector                 v1.3.0 Common String Manipulations with regard to casing and singular/plural rules.
doctrine/instantiator              1.1.0  A small, lightweight utility to instantiate objects in PHP without invoking their constructors
doctrine/lexer                     v1.0.1 Base library for a lexer that can be used in Top-Down, Recursive Descent Parsers.
doctrine/orm                       v2.6.1 Object-Relational-Mapper for PHP
myclabs/deep-copy                  1.8.1  Create deep copies (clones) of your objects
phar-io/manifest                   1.0.1  Component for reading phar.io manifest information from a PHP Archive (PHAR)
phar-io/version                    1.0.1  Library for handling version information and constraints
phpdocumentor/reflection-common    1.0.1  Common reflection classes used by phpdocumentor to reflect the code structure
phpdocumentor/reflection-docblock  4.3.0  With this component, a library can provide support for annotations via DocBlocks or otherwise retrieve information that is...
phpdocumentor/type-resolver        0.4.0 
phpspec/prophecy                   1.7.6  Highly opinionated mocking framework for PHP 5.3+
phpunit/php-code-coverage          6.0.7  Library that provides collection, processing, and rendering functionality for PHP code coverage information.
phpunit/php-file-iterator          2.0.1  FilterIterator implementation that filters files based on a list of suffixes.
phpunit/php-text-template          1.2.1  Simple template engine.
phpunit/php-timer                  2.0.0  Utility class for timing
phpunit/php-token-stream           3.0.0  Wrapper around PHP's tokenizer extension.
phpunit/phpunit                    7.2.4  The PHP Unit Testing framework.
sebastian/code-unit-reverse-lookup 1.0.1  Looks up which function or method a line of code belongs to
sebastian/comparator               3.0.1  Provides the functionality to compare PHP values for equality
sebastian/diff                     3.0.1  Diff implementation
sebastian/environment              3.1.0  Provides functionality to handle HHVM/PHP environments
sebastian/exporter                 3.1.0  Provides the functionality to export PHP variables for visualization
sebastian/global-state             2.0.0  Snapshotting of global state
sebastian/object-enumerator        3.0.3  Traverses array structures and object graphs to enumerate all referenced objects
sebastian/object-reflector         1.1.1  Allows reflection of object attributes, including inherited and non-public ones
sebastian/recursion-context        3.0.0  Provides functionality to recursively process PHP variables
sebastian/resource-operations      1.0.0  Provides a list of PHP built-in functions that operate on resources
sebastian/version                  2.0.1  Library that helps with managing the version number of Git-hosted PHP projects
symfony/console                    v4.1.0 Symfony Console Component
symfony/polyfill-mbstring          v1.8.0 Symfony polyfill for the Mbstring extension
theseer/tokenizer                  1.1.0  A small library for converting tokenized PHP source code into XML and potentially other formats
webmozart/assert                   1.3.0  Assertions to validate method input/output with nice error messages.
```

Looking at .travis.yml, some dependencies are missing in require-dev: explicitly running `composer require jackalope/jackalope-doctrine-dbal doctrine/phpcr-odm` fixed the errors, leaving only the risky test.