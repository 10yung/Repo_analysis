<!-- Thanks for contributing to Jetpack!
Pick a clear title ("Sharing: add new Facebook button") and proceed. -->

#### Steps to reproduce the issue

1. Install 2 WordPress Plugins Both of which use Jetpack autoloader to avoid dependency version conflicts. Both require the popular guzzlehttp/guzzle library. 
2. If the first plugin loaded includes on older version of the guzzle V 6.3.3 
3. The second plugin loaded includes a newer version V 6.5.2
4. When either plugin tries to use the guzzle library they will get the error that the function `_idn_uri_convert()` is not defined. 
5. This is because guzzle's `functions.php` file is included as soon as the `autoload_packages.php` file is required by the first plugin which has an older version of guzzle installed and the [autoload files](https://github.com/guzzle/guzzle/blob/master/composer.json#L59) option is used by guzzle

#### What I expected
The latest version of guzzle's functions.php of all dependencies to be loaded. 

#### What happened instead
The first plugin loaded loads its version of the files rather than the latest version.

Jetpack autoloader should wait for all plugins to be loaded before including any files.
After editing (cropping) an image in Calypso an attempt to restore it to its original state fails.
#### Steps to reproduce the issue

1. Go to the media library in Calypso for a Jetpack site.
2. Click on any image (upload one if there's none).
3. Crop it in the editor.
4. Click the "Restore original" button.

#### What I expected
An image to be restored to its original dimensions.

#### What happened instead
The request fails, the spinner never stops spinning, the image is not restored. The UI is locked, only a refresh helps. If you're looking at the logs, you'll see something like this:
```
NOTICE: PHP message: PHP Fatal error:  Uncaught Error: Call to undefined function wpcom_get_private_file() in /var/dev/wordpress/wp-content/plugins/jetpack/json-endpoints/class.wpcom-json-api-edit-media-v1-2-endpoint.php:296
Stack trace:
#0 /var/dev/wordpress/wp-content/plugins/jetpack/json-endpoints/class.wpcom-json-api-edit-media-v1-2-endpoint.php(370): WPCOM_JSON_API_Edit_Media_v1_2_Endpoint->build_file_array_from_url('8051', 'https://lousy.s...')
#1 /var/dev/wordpress/wp-content/plugins/jetpack/class.json-api.php(346): WPCOM_JSON_API_Edit_Media_v1_2_Endpoint->callback('/sites/10281254...', 1, '8051')
#2 /var/dev/wordpress/wp-content/plugins/jetpack/class.json-api.php(330): WPCOM_JSON_API->process_request(Object(WPCOM_JSON_API_Edit_Media_v1_2_Endpoint), Array)
#3 /var/dev/wordpress/wp-content/plugins/jetpack/packages/connection/legacy/class-jetpack-xmlrpc-server.php(914): WPCOM_JSON_API->serve(false)
#4 /var/dev/wordpress/wp-includes/IXR/class-IXR-server.php(127): Jetpack_XMLRPC_Server->json_api(Array)...
```
It was discovered by @jamesozzie that filtering options for rendering Related Posts does not work on AMP pages. For example, in response to a [support forum topic](https://wordpress.org/support/topic/increase-related-post-limit-on-amp-pages/) he was looking to reduce the number of posts displayed from 3 to 2 with code like so:

```php
function jetpackme_more_related_posts( $options ) {
    if ( function_exists('is_amp_endpoint') && is_amp_endpoint()) {
        $options['size'] = 2; //change the number for the amount required
    }
    return $options;
 }
add_filter( 'jetpack_relatedposts_filter_options', 'jetpackme_more_related_posts' );
```

This turned out not to work because AMP pages render the Related Posts using `Jetpack_RelatedPosts::get_server_rendered_html()` and this method was calling `Jetpack_Options::get_option( 'relatedposts', array() )` rather than `Jetpack_RelatedPosts::get_options()`, and only the later method applies the `jetpack_relatedposts_filter_options` filter (as well as apply other normalizations).

This PR updates `\Jetpack_RelatedPosts::get_server_rendered_html()` to use `Jetpack_RelatedPosts::get_options()` rather than the lower-level `Jetpack_Options::get_option( 'relatedposts', array() )`.

Issue introduced in Jetpack 7.6 via #13028 for #9556.

#### Changes proposed in this Pull Request:

* Ensure options for rendering Related Posts are filterable when rendering on AMP pages.

#### Is this a new feature or does it add/remove features to an existing part of Jetpack?
* If you're an Automattician, include a shortlink to the p2 discussion with Jetpack Product here.

#### Testing instructions:
<!-- If you were reviewing this PR, how would you like the instructions to be presented? -->
<!-- Please include detailed testing steps, explaining how to test your change. -->
<!-- Bear in mind that context you working on is not obvious for everyone.  -->
<!-- Adding "simple" configuration steps will help reviewers to get to your PR as quickly as possible. -->
<!-- "Before / After" screenshots can also be very helpful when the change is visual. -->

* Add a `jetpackme_more_related_posts` filter to change the `size` (see above).
* Verify the size change is applied to AMP and non-AMP pages alike.

#### Proposed changelog entry for your changes:

* Ensure options for rendering Related Posts are filterable when rendering on AMP pages. Use `Jetpack_RelatedPosts::get_options()` to get options for server-rendered Related Posts
This is a regression introduced by #14349. cc @mmtr 

#### Steps to reproduce the issue

1. Start with a site with no SSL certificate, running the most recent version of `master`, including #14349 
2. Log out
3. Clear your cookies for that site.
4. Try to log back in; you'll see that auth cookies cannot be created, and you consequently cannot log in.


<!--- Provide a general summary of your changes in the Title above -->
<!-- Would you like this feature to be tested by Beta testers?
Please add testing instructions to to-test.md in a new commit as part of your PR. -->

Fixes an issue where initial sync no longer happens during connection / reconnection.

#### Changes proposed in this Pull Request:
In #14204, we changed the way we initialize the Sync package,
which was a bit too strict and didn't allow for initial syncs
to happen.

Let's make sure we always hook to `jetpack_user_authorized` and
attempt to `do_initial_sync` during connections or reconnections.

There are safeguards in `do_initial_sync` to protect sites that
should sync from doing an initial sync.

#### Is this a new feature or does it add/remove features to an existing part of Jetpack?
* Fixes an issue in Sync package

#### Testing instructions:
- Get this PR running on a testing site
- Disconnect the site from WordPress.com if necessary
- (re)Connect to WordPress.com and ensure an initial sync was performed
- you verify by checking the "Full Sync" section of the debugger 
- or by observing sync data in real time

#### Proposed changelog entry for your changes:
* none

#### Changes proposed in this Pull Request:
<!--- Explain what functional changes your PR includes -->
* OpenTable and Calendly both have a block style selector which does essentially the same thing. Let's extract that to a new shared component.

#### Testing instructions:
<!-- If you were reviewing this PR, how would you like the instructions to be presented? -->
<!-- Please include detailed testing steps, explaining how to test your change. -->
<!-- Bear in mind that context you working on is not obvious for everyone.  -->
<!-- Adding "simple" configuration steps will help reviewers to get to your PR as quickly as possible. -->
<!-- "Before / After" screenshots can also be very helpful when the change is visual. -->

* Add a Calendly block and check that you can still change the styles in the sidebar
* Add an OpenTable block and check that you can still change the styles in the sidebar
<img width="308" alt="Screenshot 2020-01-17 at 13 48 58" src="https://user-images.githubusercontent.com/275961/72617078-23334f00-3930-11ea-853b-fe7569bf695b.png">
<img width="319" alt="Screenshot 2020-01-17 at 13 48 51" src="https://user-images.githubusercontent.com/275961/72617081-23cbe580-3930-11ea-9ca4-cfe9fcfbf07d.png">


#### Proposed changelog entry for your changes:
<!-- Please do not leave this empty. If no changelog entry needed, state as such. -->
* no changelog

When compiling the assets for Jetpack Search one has two run two processes:

- `yarn build-search` for JS.
- `yarn build` in order to include CSS styling, which builds the entire JP.

It would be fantastic if the leaner `yarn build-search` also took take of compiling SCSS files, possibly originating from https://github.com/Automattic/jetpack/blob/instant-search-master/modules/search/instant-search/instant-search.scss
Fixes #14365

#### Changes proposed in this Pull Request:
<!--- Explain what functional changes your PR includes -->
* This adds CSS to the frontend of the site to adjust the close button in the Calendly widget to the height of the master bar

#### Testing instructions:
* Add a Calendly block to a post and set the style to "link"
* Open the post in the front end
* Click on the button to open the widget
* Check you can see the close button:
<img width="1440" alt="Screenshot 2020-01-17 at 11 30 44" src="https://user-images.githubusercontent.com/275961/72609448-d5611b80-391c-11ea-9b58-83c185b287c6.png">

#### Proposed changelog entry for your changes:
<!-- Please do not leave this empty. If no changelog entry needed, state as such. -->
* no changelog entry needed

#### Steps to reproduce the issue

1. Add the Top Posts & Pages Widget to a sidebar area
2. In the "Display As" section, select "Image List"
3. Save and view on the front-end of the site
4. Notice the tiny, low-quality images displayed
5. Contrast to when Display As = Image Grid, images a clear and crisp

#### What I expected
Thumbs that a relatively clear and crisp, especially if source is high quality

#### What happened instead
Thumbs are overly compressed and low quality

**Screenshots**
Here's what it looks like when Display as = Image list

![image](https://user-images.githubusercontent.com/15178758/72606438-4279ae80-3927-11ea-9158-6910a3057900.png)

And here's what it looks like when Display as = Image Grid

![image](https://user-images.githubusercontent.com/15178758/72606525-6b01a880-3927-11ea-8995-13a6529f9214.png)


<!--
#2640119-zd

I also tried the following without success:

✔ Disabled Site Accelerator and Lazy Load in Jetpack settings
✔ Deactivated the `photon-cdn` and `photon` modules from CLI
✔ Tried nuking the several versions of the "january" white sneaker image via Photon cache nuke tool
-->

![image](https://user-images.githubusercontent.com/390760/72631162-c47bce80-394b-11ea-8334-e4971319c99e.png)

#### Changes proposed in this Pull Request:

* Makes main search input as wide as possible.
* Adds screen reader text for the search box.
* Changes date position.
* Update style for comments.
* Tweaks spacings.
* Cleans up a few styles.

#### Is this a new feature or does it add/remove features to an existing part of Jetpack?

* No

#### Testing instructions:

1. Follow the [testing instructions here](https://github.com/Automattic/jetpack/blob/add/instant-search-filter-injection/modules/search/instant-search/README.md#testing-instructions) to set up Jetpack Search.
2. Perform a site search to trigger the Jetpack Search overlay.
3. Ensure that the elements in the overlay look good.

#### Proposed changelog entry for your changes:

* None needed.
