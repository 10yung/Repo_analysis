Hi There,

Is there any way to install dotless in net471.
I am getting below error.

> Could not install package 'Microsoft.Extensions.DependencyInjection.Abstractions 2.1.1'. You are trying to install this package into a project that targets '.NETFramework,Version=v4.7.1', but the package does not contain any assembly references or content files that are compatible with that framework. For more information, contact the package author

I need dotless on Wine/Linux (as a dependency). The latest version in https://github.com/dotless/dotless/downloads is dotless-v1.3.1.0.zip uploaded on Sep 21, 2012.

Versions 1.4, 1.5 and 1.6 versions are missing. Please upload compiled versions.

I cannot use Nuget or compile myself dotless since I'm on Wine/Linux. I require download packages.
Any way to fix the dependencies? It's trying to install like 50+ "System" dependencies. Started in 1.6.5. 1.6.4 doesn't seem to have this issue
![image](https://user-images.githubusercontent.com/10503884/58647502-55267100-82cd-11e9-8172-c3748f60f976.png)

### Description
When `Less.Parse` is called with a `DotLessConfiguration` whose `StrictMath` property is set to `true`, the CSS contains evaluated `calc()` expressions.
### Steps to reproduce
Change the test fixture of `StrictMathNoParenthesesLeavesExpressionUntouched` to a `Less.Parse` call:
`var css = Less.Parse("width: calc(10px + 12px);", new DotLessConfiguration { StrictMath = true });`
### Expected behavior
`css` = `"width: calc(10px + 12px);"`
### Actual behavior
`css` = `"width: calc(22px);"`
### Cause
This change of behavior was introduced in 5db1b5dae5606d61744f1de9e69a6a163e451964 where the new constructor of the `LessEngine` with the `DotLessConfiguration` parameter does not pass the `StrictMath` property to the other constructor overload.

From this page: https://github.com/dotless/dotless/wiki/Using-.less

The examples are inconsistent. One has


> `<add name="less-handler" type="dotless.Core.LessCssHttpHandler,dotless.AspNet" path="*.LESS" verb="*" />`


While the other has

> `<section name="dotless" type="dotless.Core.configuration.DotlessConfigurationSectionHandler,dotless.Core" />`

They should both be either `dotless.Core` or `dotless.AspNet`. For version 1.5.2, its `dotless.Core` but it took me an hour to figure this out. Please specify the correct name to use depending on which version of the package is being installed.

P.S. My nuget package manager only see 1.5.2 as the latest version, I'm using ASP.NET 4.6.2. Is the latest version not published to the nuget repo?
In dotless.SampleWeb Project , Site.less file, I added a Set Variable as follows
`@window-sizes: {
    sm: 300px;
    md: 800px;
    lg: 1200px;
};`
it failed to compile less file and shown this error
`Content after finishing parsing (missing opening bracket?) on line 27 in file '/Content/Site.less':
 [26]:     lg: 1200px;
 [27]: };
       ^
 [28]: /end of file`
We are currently migrating our client-side librairies, including dotless (latest nuget package : 1.6.7) and bootstrap (v4.1.2). 

Our current CSS bundle generator merge LESS files and CSS files in a specific order, including the bootstrap CSS one, and then compile this big LESS-formatted string using the default dotless configurations

```C#
var dotlessConfiguration = new DotlessConfiguration
            {
                Debug = true,
                Logger = typeof(LessLogger)
            };

            string lessCode = Less.Parse(concatenatedFile.ToString(), dotlessConfiguration);
```

`Less.Parse` throws an exception :

```
dotless.Core.Exceptions.ParserException
  HResult=0x80131500
  Message=
Cannot apply operator / to the left hand side: center on line 6963:
[6962]:   padding-right: 3.4375rem;
[6963]:   background: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 4 5'%3e%3cpath fill='%23343a40' d='M2 0L0 2h4zm0 5L0 3h4z'/%3e%3c/svg%3e") no-repeat right 0.75rem center/ 8px 10px, url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3e%3cpath fill='%2328a745' d='M2.3 6.73L.6 4.53c-.4-1.04.46-1.4 1.1-.8l1.1 1.4 3.4-3.8c.6-.63 1.6-.27 1.2.7l-4 4.6c-.43.5-.8.4-1.1.1z'/%3e%3c/svg%3e") no-repeat center right 1.75rem/ 1.125rem 1.125rem;
       ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------^
[6964]: }
  Source=dotless.Core
  Arborescence des appels de procédure :
   à dotless.Core.Parser.Tree.Root.Evaluate(Env env)

Exception interne 1 :
ParsingException : Cannot apply operator / to the left hand side: center

```

The given line is a complex but valid CSS one, and other online less compilers seems to be OK with it. So it seems to be dotless related.

I have attached the whole concatenated "less" file if necessary.

[everything.less.txt](https://github.com/dotless/dotless/files/2831433/everything.less.txt)

Do you think there is a way to handle that ? 

Thank you for your work 
Kind regards
Jean-Christophe Chalté
I have problems with supporting some LESS features, that works perfectly with less.js
```
.box-shadow(@shadow; @rest...) when not (@shadow = false) {
	box-shadow: @arguments;
}
```
when you try to compile the code above using dotlesss 1.6.7, it shows a compilation error:
```
Running transformation:
wrong number of arguments for .box-shadow (1 for 2) on line 121 in file 'my.less':
[120]:
[121]:	.box-shadow(@shadow; @rest...) when not (@shadow = false) {
```
see http://lesscss.org/features/#mixins-feature-mixins-parametric-feature
In following commit:

https://github.com/dotless/dotless/commit/58095fd90ebd0da4e7bea06bbf496fe765caf469#diff-23edb77dc293d7b20cc8efaabd553e9a

Dependency on Microsoft.Extensions.DependencyInjection for net461 was changed from 2.0.0 to 1.1.1
Why???

Well now running app after upgrade dotless from 1.6.5 to 1.6.6+ gives following exception:

> 
> System.MissingMethodException: Method not found: 'System.IServiceProvider Microsoft.Extensions.DependencyInjection.ServiceCollectionContainerBuilderExtensions.BuildServiceProvider
> (Microsoft.Extensions.DependencyInjection.IServiceCollection)'.
>    at dotless.Core.ContainerFactory.GetContainer(DotlessConfiguration configuration)
>    at dotless.Core.EngineFactory.GetEngine(ContainerFactory containerFactory)
>    at dotless.Core.Less.Parse(String less, DotlessConfiguration config)
>    at ...

This happens because return value of this method was changed in following commit https://github.com/aspnet/DependencyInjection/commit/a0467de767febbf86b7d401abe012da8434fa7d7#diff-e2d2f137092a305455ceba873ddd962a and thus downgrade from 2.0.0+ to 1.1.1 ruins compatibility in binary assembly.
Currently there is no way to supply and instance of a logger, you can only pass through the type that you want instantiated and then the DI framework will create a singleton of it. It would be nice if you could pass through an instance so that you can trap errors thrown for a specific instance. This pull request adds that feature.