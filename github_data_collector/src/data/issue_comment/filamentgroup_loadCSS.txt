Bumps [mixin-deep](https://github.com/jonschlinkert/mixin-deep) from 1.3.1 to 1.3.2.
<details>
<summary>Commits</summary>

- [`754f0c2`](https://github.com/jonschlinkert/mixin-deep/commit/754f0c20e1bc13ea5a21a64fbc7d6ba5f7b359b9) 1.3.2
- [`90ee1fa`](https://github.com/jonschlinkert/mixin-deep/commit/90ee1fab375fccfd9b926df718243339b4976d50) ensure keys are valid when mixing in values
- See full diff in [compare view](https://github.com/jonschlinkert/mixin-deep/compare/1.3.1...1.3.2)
</details>
<details>
<summary>Maintainer changes</summary>

This version was pushed to npm by [doowb](https://www.npmjs.com/~doowb), a new releaser for mixin-deep since your current version.
</details>
<br />

[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=mixin-deep&package-manager=npm_and_yarn&previous-version=1.3.1&new-version=1.3.2)](https://help.github.com/articles/configuring-automated-security-fixes)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot ignore this [patch|minor|major] version` will close this PR and stop Dependabot creating any more for this minor/major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language
- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language
- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language
- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language

You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/filamentgroup/loadCSS/network/alerts).

</details>
Bumps [lodash](https://github.com/lodash/lodash) from 4.17.11 to 4.17.15.
<details>
<summary>Commits</summary>

- [`ddfd9b1`](https://github.com/lodash/lodash/commit/ddfd9b11a0126db2302cb70ec9973b66baec0975) Bump to v4.17.15.
- [`b185fce`](https://github.com/lodash/lodash/commit/b185fcee26b2133bd071f4aaca14b455c2ed1008) Rebuild lodash and docs.
- [`be87d30`](https://github.com/lodash/lodash/commit/be87d303941222b97c482755afc0f4a77ce46c30) Bump to v4.17.14.
- [`a6fe6b1`](https://github.com/lodash/lodash/commit/a6fe6b1e174fd02b5e60eb2664405f4c1262c300) Rebuild lodash and docs.
- [`e371828`](https://github.com/lodash/lodash/commit/e37182845f16715a0d1c391c8662d83c55609cee) Bump to v4.17.13.
- [`357e899`](https://github.com/lodash/lodash/commit/357e899e685872b4af5403ecc4b2a928f961ae63) Rebuild lodash and docs.
- [`fd9a062`](https://github.com/lodash/lodash/commit/fd9a062d57646450b61f74029315abd4cc834b08) Bump to v4.17.12.
- [`e77d681`](https://github.com/lodash/lodash/commit/e77d68121ff00ba86b53eed5893d35adfe94c9dd) Rebuild lodash and docs.
- [`629d186`](https://github.com/lodash/lodash/commit/629d1865793182cd967196716f4beff223aa4a91) Update OpenJS references.
- [`2406eac`](https://github.com/lodash/lodash/commit/2406eac542b2a1282be8d812a6d8a45433ade80a) Fix minified build.
- Additional commits viewable in [compare view](https://github.com/lodash/lodash/compare/4.17.11...4.17.15)
</details>
<br />

[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=lodash&package-manager=npm_and_yarn&previous-version=4.17.11&new-version=4.17.15)](https://help.github.com/articles/configuring-automated-security-fixes)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot ignore this [patch|minor|major] version` will close this PR and stop Dependabot creating any more for this minor/major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language
- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language
- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language
- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language

You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/filamentgroup/loadCSS/network/alerts).

</details>
The following line:
https://github.com/filamentgroup/loadCSS/blob/32f6847ca1d506456bf15e4b0e008a4abebcdba4/src/cssrelpreload.js#L42
causes an error in e.g. Firefox when a CSP header banning inline script is in operation: "Content Security Policy: The page's settings blocked the loading of a resource at inline ("script-src")."
Now I'm not sure if this is a bug in Firefox or not - should it throw a CSP violation when an attribute is only being set to null? - but I wondered if `removeAttribute` could be used instead, which does not cause a violation. Not sure if that has any issues, I couldn't see anything in the repo as to why setAttribute was used.
Browser: Firefox `68.0.2`
Behavior: CSS not loading

As specified in [the spec](https://html.spec.whatwg.org/#named-access-on-the-window-object) dom elements are accessible in the `window` object by their `id`. If there is a element (or element collection) with the id `global` the loadCSS script assumes it as the `window` object (`this`): https://github.com/filamentgroup/loadCSS/blob/94cb39b/src/cssrelpreload.js#L111
This leads to a error JS error `ReferenceError: loadCSS is not defined in cssrelpreload.js:14:11`

Small tescode here: 
```html
<link rel="preload" href="https://github.githubassets.com/assets/frameworks-2e9090135c22aad5f56c2f72dcba7880.css" as="style">
<div id="global">Global Element</div>
<script src="https://cdnjs.cloudflare.com/ajax/libs/loadCSS/2.1.0/cssrelpreload.js"></script>
```
Hello, 
i don't know npm and never used it... so you can understand my ignorance in this field.
What i guess is if this plugin can work as standalone plugin or only after install it via npm. 
I used your guide (https://github.com/filamentgroup/loadCSS) with preload, noscript and cssrelpreload.js inlined directly in my html document, but it still doesn't work. Infact, in DevTools > Coverage i see the same css used and unused, and also in Audits it still says to remove unused css. So my question and dubt, is if i need to install it via npm (as said never used).
Thanks

loadCSS is [using](https://github.com/filamentgroup/loadCSS/blob/master/src/loadCSS.js#L35) invlid media attribute values and relies on the fact that browsers currently load them. But loading those resources doesn't make much sense, so we'd love [Chrome to stop doing that](https://bugs.chromium.org/p/chromium/issues/detail?id=977573).

However, that'd create compat concerns with libraries that are relying on that behavior. If loadCSS could stop being one of those libraries, that'd be awesome! :)
I was looking over the [Chrome fetch priorities documentation](https://docs.google.com/document/d/1bCDuq9H1ih9iNjgzyAL0gpwNFiEP4TZS-YLRp_RuMlc/edit#) and saw this:

> * Preload using “as” or fetch using “type” use the priority of the type they are requesting. (e.g. preload as=stylesheet will use Highest priority). With no “as” they will behave like an XHR.

We've had some folks note that `as=style` fetches at a higher priority than they'd prefer. I wonder if the option of omitting `as` and identifying the link for polyfill in a different way would be a good option.
https://github.com/filamentgroup/loadCSS/blob/v2.0.1/src/cssrelpreload.js

I noticed that there are checks to stop doing polyfill if "support()" function returns true.

Yes on chrome this returns true but chrome doesn't automatically turn "preload" stylesheet into loading, and since reactjs, and nextjs rejected attributes injection such as onload, only polyfill can do this, therefore I suggest to create another version for those who can't have onload attribute inserted in SSR (or whatever reasons) another way to loadcss async that way.

All I did is remove the "support" checks in poly and the main execution.
Hi!  I've been optimizing my portfolio site and am confused about some behavior I'm seeing with loadCSS.  See the following link:

http://jasonmevius.com/index_FOUC.html

I've been organizing my information as follows:

<!-- Critical CSS, inline -->
<style>*,::after,::before{box-sizing:border-box }html{font-size:62.5% } .... etc.</style>
<!-- Preload link to full CSS file -->
<link rel="preload" href="/css/combined-04162019.css" as="style" onload="this.onload=null;this.rel='stylesheet'">
<!-- Backup link to full CSS file -->
<noscript><link rel="stylesheet" href="/css/combined-04162019.css"></noscript>
<!-- Inline PolyFill script -->
<script>!function(t){"use strict";t.loadCSS||(t.loadCSS=function ...</script>
</head>

I'm confused, because I'm seeing variability in the results.  I think the CSS is being deferred as desired, but I see the dreaded FOUC sometimes.  

It's been a little hard for me to debug, because it only seems to be happening at non-throttled speeds.  I observe the behavior during normal operation and when I use Firefox's Inspect Element -> Network with 'Disable cache' and 'No throttling'. 

When I try to debug by seeing where exactly in the loading waterfall that the FOUC kicked off by throttling - it won't duplicate.  Any ideas?
Milestones `0.2.0` and `1.0.0` can be closed, right?