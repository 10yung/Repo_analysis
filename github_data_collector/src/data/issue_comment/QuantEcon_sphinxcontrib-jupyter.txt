The treatment of static assets needs a rework as it has real limitations at the moment. In the current re-write of the extension I propose we adopt a new approach to asset management. 

Sphinx make `html`:  [Information Only]

The current sphinx `html` writer produces a `_static` folder with a collection of assets contained in a single folder. This isn't convenient for all notebook cases as it is difficult to find supportive static assets  for individual notebooks. It works well for large websites. 

`notebooks`:  [sphinxcontrib-jupyter]

rather than implement different ways the `static` assets are collected for `ipynb`, `jupyter-html` etc. I propose we adopt a `file/asset` approach to the static folder. If an `rst` file `document.rst` contains a figure `picture.png` then the file would be copied to `_static/document/picture.png`. This allows a unique path without worrying about file collisions between documents. It also helps locate static assets for notebooks. 

For `slide` and `course` notebook cases we can modify this to include the `document` folder in the directory the notebook is written so it would be easy to distribute the notebook and files. 
If math blocks contain `+` or `-` then the `$$` environment is not being respected during the conversion from `ipynb` to `html` and gets interpreted incorrectly. 

Example:

```rst
.. math::
    :label: firm_dynam_ee

    s_{t+1} = e_{t+1} \mathbb{1}\{s_t < \bar s\} 
       +  (a_{t+1} s_t + b_{t+1}) \mathbb{1}\{s_t \geq \bar s\}
```

This is a known issue of `nbconvert`

https://github.com/jupyter/nbconvert/issues/404
The current lecture site: python.quantecon.org implements multi-tocs for various streams such as graduate and undergraduate. It would be nice to develop a better way to specify this information rather than `index` proliferation as this is hard to edit and maintain. 

Ideas:
1. Use `metadata` to build various supporting `index` files such as introducing a `toc` directive for build the necessary objects and the author would label each file in a category
1. Build a more advanced web object (i.e. network of lectures diagram) that has a configuration file

@DrDrij would you have any idea how we could build a nicer object for presenting `toc` for various dimensions. One idea would be a network diagram with clickable nodes showing the flow of various streams. 
The fix here needs to be applied for `linux` systems it seems. 

https://tex.stackexchange.com/questions/224296/spaces-in-font-names?noredirect=1&lq=1
We are merging book pdf support without docs (as a beta feature that is undocumented). 

Rather than documenting an object that is likely to change in the refactor #212 effort this month - we will add a broad documentation update in Nov/Dec 2019. 
A feature that might be useful is to have self contained `html` pages so they could be opened directly. Currently the `make_site` is setup to server the `html` pages via a web server. 
When running a selecting run of `jupinx` it looks like `sphinx` isn't picking up all the index pages as `index_toc` is not being rendered.

```bash
(base) ~/repos-collab/lecture-source-py $ jupinx -cws --file source/rst/pandas.rst source/rst/about_py.rst
Running: make clean
Removing everything under '_build'...
Running: make website
Running Sphinx v1.8.5
making output directory...
building [mo]: targets for 0 po files that are specified
building [jupyter]: 2 source files given on command line
updating environment: 123 added, 0 changed, 0 removed
checking for /home/mmcky/repos-collab/lecture-source-py/source/rst/_static/quant-econ.bib in bibtex cache... not found
parsing bibtex file /home/mmcky/repos-collab/lecture-source-py/source/rst/_static/quant-econ.bib... parsed 172 entries

looking for now-outdated files... none found
pickling environment... done
checking consistency... done
preparing documents... done
writing output... [100%] pandas                                                                                      
copying static files... copying static files to executed folder... 
WARNING: jupyter_static_path entry /home/mmcky/repos-collab/lecture-source-py/_static does not exist
done
Starting notebook execution for website and html conversion(if set in config)...
(1/5)  about_py -- pass -- 4.74s
(2/5)  index_data_and_empirics -- pass -- 2.45s
(3/5)  index -- pass -- 2.35s
(4/5)  index_learning_python -- pass -- 2.34s
(5/5)  pandas -- pass -- 12.36s
```
These `warnings` aren't always helpful as they are not required elements. 

```
WARNING: html folder not present in the themes directory
WARNING: coverage directory not found. Please ensure to run coverage build before running website build
```

and 

```
WARNING: Image folder not present inside the theme folder
```

We should add some passthrough variables that the `minimal` theme can use when writing a website:

1. `site_title`, 
1. `site_author`,
1.  `site_keywords`,
1.  `site_description`

for `jupyter_make_site`



We should ensure to throw an error if an `nbconvert` process is unable to convert a file to `tex`. 

A useful error message (with lecture name) should be issued and exit(1)