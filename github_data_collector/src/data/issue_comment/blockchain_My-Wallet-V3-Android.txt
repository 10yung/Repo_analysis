A wallet application is something very sensitive. A careless maintainer catching a backdoor might be enough to have an APK infected if internally build verification is not routinely exercised. Of course the public scrutiny is the other reason you want your app to be verifiable.

I tried to reproduce the current build but failed. My findings are in [this review](https://walletscrutiny.com/posts/2019/11/blockchainwallet/).

Fixing #1250 would probably help a lot.

With 5 million users I hope you see the urgency in making the app verifiable.

I am noticing that the Blockchain wallet fails when trying to send ETH to an address that begins with leading zero bytes (i.e. two hex 0's ) such as 0x00.. 

Has this issue been discussed previously and is there any plans for a workaround?


# Project Information

* Repository: https://github.com/blockchain/My-Wallet-V3-Android
* Project Name: Blockchain Wallet. Bitcoin, Bitcoin Cash, Ethereum
* My Github Account: https://github.com/friendsmobile
* Download the application: [Here](https://play.google.com/store/apps/details?id=piuk.blockchain.android)


# Expected behavior
When I use the log in option, my account should open in the application and when I click the scan pairing code, the application should not crash.

# Actual behavior

The app gets crashes when I use the login option and click the scan pairing code


# How to reproduce

* open the application
* open the LOG IN option 
* click on the  scan pairing code
* Note the Error

* Browser/App version: 6.25.3
* Operating system: 6.0


# Recording Of The Bug


![20190608_165306](https://user-images.githubusercontent.com/51118734/59146961-ad363500-89a9-11e9-94b8-f4db47159bdf.gif)



# Logcat

<pre><code>E/AndroidRuntime( 2258): FATAL EXCEPTION: main

E/AndroidRuntime( 2258): Process: piuk.blockchain.android, PID: 2258

E/AndroidRuntime( 2258): android.content.res.Resources$NotFoundException: Resource ID #0x7f080195

E/AndroidRuntime( 2258): 	at android.content.res.Resources.getValue(Resources.java:1542)

E/AndroidRuntime( 2258): 	at android.support.v7.widget.AppCompatDrawableManager.loadDrawableFromDelegates(AppCompatDrawableManager.java:328)

E/AndroidRuntime( 2258): 	at android.support.v7.widget.AppCompatDrawableManager.getDrawable(AppCompatDrawableManager.java:193)

E/AndroidRuntime( 2258): 	at android.support.v7.widget.AppCompatDrawableManager.getDrawable(AppCompatDrawableManager.java:186)

E/AndroidRuntime( 2258): 	at android.support.v7.content.res.AppCompatResources.getDrawable(AppCompatResources.java:100)

E/AndroidRuntime( 2258): 	at android.support.v7.view.menu.MenuItemImpl.getIcon(MenuItemImpl.java:491)

E/AndroidRuntime( 2258): 	at android.support.v7.view.menu.ActionMenuItemView.initialize(ActionMenuItemView.java:125)

E/AndroidRuntime( 2258): 	at android.support.v7.widget.ActionMenuPresenter.bindItemView(ActionMenuPresenter.java:210)

E/AndroidRuntime( 2258): 	at android.support.v7.view.menu.BaseMenuPresenter.getItemView(BaseMenuPresenter.java:187)

E/AndroidRuntime( 2258): 	at android.support.v7.widget.ActionMenuPresenter.getItemView(ActionMenuPresenter.java:196)

E/AndroidRuntime( 2258): 	at android.support.v7.widget.ActionMenuPresenter.flagActionItems(ActionMenuPresenter.java:476)

E/AndroidRuntime( 2258): 	at android.support.v7.view.menu.MenuBuilder.flagActionItems(MenuBuilder.java:1164)

E/AndroidRuntime( 2258): 	at android.support.v7.view.menu.BaseMenuPresenter.updateMenuView(BaseMenuPresenter.java:95)

E/AndroidRuntime( 2258): 	at android.support.v7.widget.ActionMenuPresenter.updateMenuView(ActionMenuPresenter.java:229)

E/AndroidRuntime( 2258): 	at android.support.v7.view.menu.MenuBuilder.dispatchPresenterUpdate(MenuBuilder.java:291)

E/AndroidRuntime( 2258): 	at android.support.v7.view.menu.MenuBuilder.onItemsChanged(MenuBuilder.java:1051)

E/AndroidRuntime( 2258): 	at android.support.v7.view.menu.MenuBuilder.startDispatchingItemsChanged(MenuBuilder.java:1078)

E/AndroidRuntime( 2258): 	at android.support.v7.app.ToolbarActionBar.populateOptionsMenu(ToolbarActionBar.java:460)

E/AndroidRuntime( 2258): 	at android.support.v7.app.ToolbarActionBar$1.run(ToolbarActionBar.java:55)

E/AndroidRuntime( 2258): 	at android.os.Handler.handleCallback(Handler.java:739)

E/AndroidRuntime( 2258): 	at android.os.Handler.dispatchMessage(Handler.java:95)

E/AndroidRuntime( 2258): 	at android.os.Looper.loop(Looper.java:135)

E/AndroidRuntime( 2258): 	at android.app.ActivityThread.main(ActivityThread.java:5910)

E/AndroidRuntime( 2258): 	at java.lang.reflect.Method.invoke(Native Method)

E/AndroidRuntime( 2258): 	at java.lang.reflect.Method.invoke(Method.java:372)

E/AndroidRuntime( 2258): 	at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:1405)

E/AndroidRuntime( 2258): 	at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:1200)
</code></pre>



Execution failed for task ':app:processEnvDevDebugGoogleServices'.
> File google-services.json is missing. The Google Services Plugin cannot function without it.
   Searched Location:
  E:\workspace\My-Wallet-V3-Android\app\src\env\dev\debug\google-services.json
  E:\workspace\My-Wallet-V3-Android\app\src\envDev\debug\google-services.json
  E:\workspace\My-Wallet-V3-Android\app\src\debug\envDev\google-services.json
  E:\workspace\My-Wallet-V3-Android\app\src\env\debug\google-services.json
  E:\workspace\My-Wallet-V3-Android\app\src\env\dev\google-services.json
  E:\workspace\My-Wallet-V3-Android\app\src\env\devDebug\google-services.json
  E:\workspace\My-Wallet-V3-Android\app\src\envDev\google-services.json
  E:\workspace\My-Wallet-V3-Android\app\src\debug\google-services.json
  E:\workspace\My-Wallet-V3-Android\app\src\envDevDebug\google-services.json
  E:\workspace\My-Wallet-V3-Android\app\src\env\google-services.json
  E:\workspace\My-Wallet-V3-Android\app\src\envDebug\google-services.json
  E:\workspace\My-Wallet-V3-Android\app\google-services.json

hi, guys am looking if its possible to through an android intent get a new receiving address. The idea is from our app to call a "fetch new address" and return this to our app. we can then deposit btc to that address such that we can give users bitcoins as a reward. Please can you help

thanks 

After sending a bip21 bitcoin URI to the blockchain app for payment, the app does not return transaction hash in the response back to the first app that sends the intent.
It would be great to follow what Mycelium and Bitcoin android app does as follows:
`// Include the transaction hash in the response
      Intent result = new Intent();
      result.putExtra(Constants.TRANSACTION_HASH_INTENT_KEY, _transaction.getHash().toString());
      setResult(RESULT_OK, result);`
