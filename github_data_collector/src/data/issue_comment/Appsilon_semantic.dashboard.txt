
ui <- dashboardPage(
  dashboardHeader(
    headerPanel("Metrics")
),
  dashboardSidebar(
    color = "teal",
    sidebarMenu(
      date_input('startdate',
                label = 'Date input: yyyy-mm-dd',
                value = Sys.Date()
      )
    )
  ),
  ########## BODY
  dashboardBody( ),
  theme = "chubby"
)

User defined styles can usually be added via the `style` argument, but in the case of dashboardSidebar using it will append the defined style but in a broken way:

For example:
```
  semantic.dashboard::dashboardSidebar(
    style = "padding: 10px;",
```

Will result in a broken state:
![Screenshot from 2019-12-09 12-26-45](https://user-images.githubusercontent.com/44022548/70432345-57893500-1a7f-11ea-969f-9d29ab988849.png)
![Screenshot from 2019-12-09 12-26-55](https://user-images.githubusercontent.com/44022548/70432346-5821cb80-1a7f-11ea-9040-4cfeab9de2ad.png)

Looks like a missing `;` should be added to the default styles created to prevent this at: https://github.com/Appsilon/semantic.dashboard/blob/6116687faec9c20a6fe789dd235c83d97f259eeb/R/semantic_dashboard.R#L121
Currently the menu icon label is harcoded into the dashboardHeader function. This can lead to problems with internationalization.

![Screenshot from 2019-12-09 10-43-48](https://user-images.githubusercontent.com/44022548/70425298-489b8600-1a71-11ea-9fad-b89cd8943fde.png)

https://github.com/Appsilon/semantic.dashboard/blob/6116687faec9c20a6fe789dd235c83d97f259eeb/R/semantic_dashboard.R#L55

To be consistent with shinydashboard the label should be removed, or an option to change it should be available.
`shinydashboard::dashboardHeader` title can be used to define text that should in the header and the browser tab name. A second argument titleWidth can also be used to define the title size.

The semantic.dashboard version ignores this argument, expected behavior should be similar.
# Small fix to a bug

If you set sidebar to 'top' the page won't be shown, as it will render the page width (pusher.width) to window_width - sidebar_width = 2px. This bug fix, fixes that issue.
Simple example to reproduce:

```r
library(shiny)
library(shiny.semantic)
library(semantic.dashboard)

ui <- dashboardPage(
  dashboardHeader(color = "blue"),
  dashboardSidebar(side = "top", size = "thin", color = "teal",
                   sidebarMenu(
                     menuItem(tabName = "tab1", "Tab 1"),
                     menuItem(tabName = "tab2", "Tab 2"))),
  dashboardBody(tabItems(
    tabItem(tabName = "tab1", p("Tab 1")),
    tabItem(tabName = "tab2",
            p("Tab 2"))
    )
  )
)


server <- function(input, output) {
}
shinyApp(ui, server)
```

The menu on the top after hiding it remains hidden. Plus it doesn't shift elements down when unveiled. 

![Screenshot 2019-05-10 at 19 48 38](https://user-images.githubusercontent.com/4547289/57568724-3f670f80-73e3-11e9-8607-68cd7fac5d09.png)

See the example:
1. move to `<app-url>animals` (sidebar overlays content) ,
2. click tabset (conent is correctly placed)
3. When app is used not within shiny.router bookmark it displays app correctly.

```
library(shiny)
library(shinyjs)
library(tidyverse)
library(semantic.dashboard)
library(shiny.router)

animals_ui <- dashboardPage(
  dashboardHeader(disable = TRUE),
  dashboardSidebar(side = "left", size = "very wide", color = "teal",
                   sidebarMenu(
                     menuItem(tabName = "births", "Births"),
                     menuItem(tabName = "inthezoo", "In the zoo")
                   )),
  dashboardBody(
    tabItems(
      tabItem(tabName = "births", 
              valueBoxOutput("total_births", width = 8)
      ),
      tabItem(tabName = "inthezoo", 
              valueBoxOutput("total_animals", width = 8)
      )
    )
  )
)

router <- make_router(
  route("/", semanticPage(tags$p("Hello"))),
  route("animals", animals_ui)
)

ui <- shinyUI(
  router_ui()
)

server <- shinyServer(function(input, output, session) {
  
  router(input, output, session)
  
  # animals
  
  output$total_births <- renderValueBox(
    valueBox(
      value = 20,
      subtitle = "Total births",
      icon = icon("birthday cake"),
      color = "purple",
      width = 5)
  )
  
  output$total_animals <- renderValueBox(
    valueBox(
      value = 234,
      subtitle = "Total animals",
      icon = icon("list ol"),
      color = "purple",
      width = 5)
  )

})

shinyApp(ui = ui, server = server)
```
eg with dropdown
It would be useful to add active tab item name into input object.