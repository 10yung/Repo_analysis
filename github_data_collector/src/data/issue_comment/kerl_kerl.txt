`kerl` do not work out of the box on clean linux machine. It requires some tools to compile Erlang. It would be good if README lists these packages.
APPLICATIONS DISABLED (See: /Users/sly/.kerl/builds/17.5/otp_build_17.5.log)
 * odbc           : ODBC library - link check failed

DOCUMENTATION INFORMATION (See: /Users/sly/.kerl/builds/17.5/otp_build_17.5.log)
 * documentation  :
 *                  fop is missing.
 *                  Using fakefop to generate placeholder PDF files.
Based on discussion in https://github.com/asdf-vm/asdf-erlang/issues/116#issuecomment-539915106, do not munge CFLAGS on Catalina.
I use ubuntu and tried to install with asdf I installed all the libraries required for ubuntu but keeps getting this error 

```
Build failed.
make[3]: *** Waiting for unfinished jobs....
make[3]: Leaving directory '/home/mrkaspa/.asdf/plugins/erlang/kerl-home/builds/asdf_21.1/otp_src_21.1/lib/wx/c_src'
/home/mrkaspa/.asdf/plugins/erlang/kerl-home/builds/asdf_21.1/otp_src_21.1/make/otp_subdir.mk:29: recipe for target 'opt' failed
make[2]: *** [opt] Error 2
make[2]: Leaving directory '/home/mrkaspa/.asdf/plugins/erlang/kerl-home/builds/asdf_21.1/otp_src_21.1/lib/wx'
/home/mrkaspa/.asdf/plugins/erlang/kerl-home/builds/asdf_21.1/otp_src_21.1/make/otp_subdir.mk:29: recipe for target 'opt' failed
make[1]: *** [opt] Error 2
make[1]: Leaving directory '/home/mrkaspa/.asdf/plugins/erlang/kerl-home/builds/asdf_21.1/otp_src_21.1/lib'
Makefile:482: recipe for target 'libs' failed
make: *** [libs] Error 2
```
Hey, I'm using `asdf` for managing multiple versions of development software. It uses this project and on `openSUSE` distribution there is one small problem. Luckily it does not stops building process, but still shows a warning which is really confusing:

> WARNING: It appears a required development package 'openssl-devel' is not installed.

I have found that this message comes from:
https://github.com/kerl/kerl/blob/a0f478901d228f1ef773e74bfed1c97c624dcab0/kerl#L371-L389

To understand what is going wrong on `openSUSE` simply let me show you my output:
```
$ rpm -q openssl-devel
pakiet openssl-devel nie jest zainstalowany
# message in Polish that such package is not installed
$ rpm -q libopenssl-devel
libopenssl-devel-1.1.1c-1.1.noarch
```

Finally to confirm that such package just does not exists here is a search result:
```bash
$ zypper search openssl-devel
Wczytywanie danych repozytorium...
# Loading repository data ...
Odczytywanie zainstalowanych pakietÃ³w...
# Reading installed packages ...

S  | Nazwa                 | Podsumowanie                                          | Typ   
---+-----------------------+-------------------------------------------------------+-------
i+ | libopenssl-devel      | Include Files and Libraries mandatory for Development | pakiet
   | xmlsec1-openssl-devel | OpenSSL crypto plugin for XML Security Library        | pakiet

# Nazwa -> Name
# Podsumowanie -> Summary
# Typ -> Type
# pakiet -> package
```

Do you think that you can add a special check for this case? Please look that it's not a distribution which nobody knows about. Following [Distrowatch](https://distrowatch.com) `openSUSE` is 10th of most popular distributions and also 4 of 62 `Independent` distributions.
Along these lines https://rkallos.com/blog/2018/04/22/erlang-debug-vms-what-why-and-how/
An issue was posted on asdf-vm/asdf-erlang/issues/105 about erlang being unable to build on the upcoming version of macOS 10.15. Since asdf-vm uses kerl underneath, it was suggested an issue be created here.

Here is the output from trying to install:

```
Building Erlang/OTP 22.0.7 (asdf_22.0.7), please wait...
Configure options have changed. Reconfiguring...
APPLICATIONS DISABLED (See: /Users/schlenks/.asdf/plugins/erlang/kerl-home/builds/asdf_22.0.7/otp_build_22.0.7.log)
 * crypto         : No usable OpenSSL found
 * ssh            : No usable OpenSSL found
 * ssl            : No usable OpenSSL found

Build failed.
make[3]: *** [../ebin/hipe_tagscheme.beam] Segmentation fault: 11
make[3]: *** [../ebin/hipe_rtl_mk_switch.beam] Segmentation fault: 11
make[3]: *** [../ebin/hipe_rtl_cleanup_const.beam] Segmentation fault: 11
make[3]: *** [../ebin/hipe_rtl_binary.beam] Segmentation fault: 11
make[3]: *** [../ebin/hipe_rtl_binary_match.beam] Segmentation fault: 11
make[3]: *** [../ebin/hipe_icode2rtl.beam] Segmentation fault: 11
make[3]: *** [../ebin/hipe_rtl_liveness.beam] Segmentation fault: 11
make[2]: *** [opt] Error 2
make[1]: *** [opt] Error 2
make: *** [secondary_bootstrap_build] Error 2
```

I've looked at it a bit and tried a few different tactics to get it to recognize the openssl library:
1) installed openssl 1.0.2s via brew
2) installed openssl 1.1.1c via brew
3) compiled openssl 1.0.2.s from source code

`KERL_CONFIGURE_OPTIONS` set in `.zshrc`:
```
export KERL_CONFIGURE_OPTIONS="--disable-debug --disable-silent-rules --without-javac --enable-shared-zlib --enable-dynamic-ssl-lib --enable-sctp --enable-smp-support --enable-threads --enable-kernel-poll --enable-wx --enable-darwin-64bit --with-ssl=/usr/local/opt/openssl@1.0/bin
```



Allow user to install kerl from [python pypi warehouse](https://pypi.org/).

These changes introduce a python packaging system for kerl.
They package kerl into a python package, deploy it to pypi and allow
users to install kerl from pypi by using:

pip install pykerl

The kerl project name is already in use on pypi so I decided to name
it pykerl.

The package version is based on the git tag version, so when you built a
a new version, the version retrieved correspond to your tags that
already existes.

The python package and deployed is built by using travis-ci. Everythings
is automatic, you just need to deploy a new git tag to your github repo
to deploy a new version on pypi.

By example if you create a tag `1.8.6` and after you push it on github
then a new package in version `1.8.6` will be available on pypi.

You don't need to bump the version manually for the python installer part.

/!\ 
**You need to create a pypi account first and to update the password section in the travis yaml file. Read  the following documentations for more informations:**
- https://docs.travis-ci.com/user/encryption-keys
- https://docs.travis-ci.com/user/deployment/pypi/

/!\
Our support policy is the last 4 OTP releases.
I've been installing erlang via `kerl` using `asdf`. It would be nice to have a progress bar or a spinner to indicate that something is happening.