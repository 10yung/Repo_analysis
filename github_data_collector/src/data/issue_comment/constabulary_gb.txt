http://getgb.io/   ERR_CONNECTION_TIMED_OUT
Seem `gb` is no longer able to cross build on OSX (was ok on a previous project).

```
# export GOOS=linux GOARCH=amd64

# gb build

mypkg
errors
internal/race
runtime/internal/sys
runtime/internal/math
unicode/utf8
runtime/internal/atomic
math/bits
sync/atomic
internal/cpu
internal/testlog
internal/bytealg
unicode
math
# runtime
cgo.go:9:3: //go:cgo_export_static main only allowed in cgo-generated code
strconv
FATAL: command "build" failed: exit status 2
```

... whereas on the same minimal Go code: `go build` is working.

```
# go version

go version go1.12.1 darwin/amd64
```
Hi!
Is there a way to integrate gb with IDE? I tried several IDEs from the list: Jetbrains GoLand, Visual Studio Code, LiteIDE. None of them does not find packages with gb proposed folders layout.

fix #733
There haven't been any updates since May 11, 2017.  What's going on?
gb build
the same project
on windows

FATAL: command "build" failed: failed to resolve import path "github.com/matrix-org/dendrite/clientapi": import "golang.org/x/sys/windows": not found: CreateFile c:\code\go\dendrite\src\golang.org\x\sys\windows: The system cannot find the path specified.

gb env 
GB_PROJECT_DIR="c:\code\go\dendrite"
GB_SRC_PATH="c:\code\go\dendrite\src;c:\code\go\dendrite\vendor\src"
GB_PKG_DIR="c:\code\go\dendrite\pkg\windows-amd64"
GB_BIN_SUFFIX="-windows-amd64"
GB_GOROOT="c:\go"

on linux
begin to download the dependency.(and work ok)

Somehow the `repository` field from the manifest isn't used.

With this I can replace packages with forks.
can you add a command copy a package from $GOPATH to vender and add info to manifest if package exists in $GOPATH

I don't want to  fetch package from network every times
On a centos 7 machine running go 1.9. gb build generates the following error after compilation is finished.

```
/usr/lib/golang/pkg/tool/linux_amd64/link: running gcc failed: exit status 1
/tmp/go-link-237740002/000000.o: file not recognized: File format not recognized
collect2: error: ld returned 1 exit status
```
gb build, runs on the same project in windows and mac with not issues. 
On windows setting GOOS and GOARCH to linux results in a binary but on mac the following error is shown missing function body errors for internal package

```
# internal/poll
fd_mutex.go:194:6: missing function body for "runtime_Semacquire"
fd_mutex.go:195:6: missing function body for "runtime_Semrelease"
fd_poll_runtime.go:17:6: missing function body for "runtimeNano"
fd_poll_runtime.go:19:6: missing function body for "runtime_pollServerInit"
fd_poll_runtime.go:20:6: missing function body for "runtime_pollServerDescriptor"
fd_poll_runtime.go:21:6: missing function body for "runtime_pollOpen"
fd_poll_runtime.go:22:6: missing function body for "runtime_pollClose"
fd_poll_runtime.go:23:6: missing function body for "runtime_pollWait"
fd_poll_runtime.go:24:6: missing function body for "runtime_pollWaitCanceled"
fd_poll_runtime.go:25:6: missing function body for "runtime_pollReset"
fd_poll_runtime.go:25:6: too many errors
```
This doesn't happen in  a simple single file project with no dependecies.
This means that explicitly disabling cgo using CGO_ENABLED="0" in
order to get a static binary will work even when the libraries in
GOROOT have been compiled with cgo enabled.

This could be an easy work around for #328