Query for the `TargetFrameworkMonikers` in the project and use that if
available to allow projects that target both .NET Standard and full
framework to use the EF6 cmdlets. 

Fixes #1568
`Add-Migration` (and presumably its friends) fail from 6.3 on in the PMC if the host project for the migrations targets both netstandard and full framework.

`EntityFramework6.psm1` only takes into consideration the `TargetFrameworkMoniker` rather than `TargetFrameworkMonikers` (if available)

```
Exception message: The Entity Framework Package Manager Console Tools don't support this framework
```

### Steps to reproduce
Create a project with `<TargetFrameworks>net461;netstandard2.1</TargetFrameworks>` and attempt to `Add-Migration`

### Further technical details
EF version: 6.4.0
Operating system: Windows 10
IDE: Visual Studio 2019 16.4.3

Using Entity Framework < 6.3 with MySQL, we have been able to dodge most OUTER APPLY that happens in some situations (OUTER/CROSS APPLY is not supported by MySQL). 

In 6.3 and 6.4, Entity Framework seems to be much more eager to emit OUTER APPLY queries, which causes the MySql provider not being able to generate a query. 

### Steps to reproduce
I have included two projects. We use Devart, which is a licensed product, but I provided another version that is using MySql.Data (where the problem appears differently but is having the same limits). Devart fails with `System.NotSupportedException: OUTER APPLY is not supported by MySQL.`

[OuterApplyDevartMySql.zip](https://github.com/dotnet/ef6/files/4070803/OuterApplyDevartMySql.zip)
[OuterApplyMySqlData.zip](https://github.com/dotnet/ef6/files/4070804/OuterApplyMySqlData.zip)

Digging into the commits, I found that the setting MaxNodeCountForTransformations seems to be what's changed (248330348ea7b5d756fa4bab52d5cebc98887fde), which I can change the setting for, back to the previous value it had in 6.2. But I wonder if there's a way to avoid just OUTER/CROSS APPLY without losing the performance benefits of that change for other queries? 

### Further technical details
EF version: 6.3 and 6.4
Database Provider: Devart.MySql (and MySql.Data)
Operating system: Windows 10, Windows Server 2016
IDE: Visual Studio 2019


Followed the steps mentioned below to build the tool.
https://github.com/dotnet/ef6/wiki/Building-the-Tools

However, getting the error while executing the command "BuildEFTools /t:Install". Here is the output of the command execution.

E:\ef6-6.1.3>BuildEFTools /t:Install
Microsoft (R) Build Engine version 12.0.40629.0
[Microsoft .NET Framework, version 4.0.30319.42000]
Copyright (C) Microsoft Corporation. All rights reserved.

  Restoring NuGet packages...
  All packages listed in packages.config are already installed.
  All packages listed in packages.config are already installed.
  EntityFramework -> E:\ef6-6.1.3\bin\Debug\EntityFramework.dll
  EntityFramework.SqlServer -> E:\ef6-6.1.3\bin\Debug\EntityFramework.SqlServer.dll
  Restoring NuGet packages...
  To prevent NuGet from downloading packages during build, open the Visual Studio Options dialog, click on the Package Manager node and uncheck 'Allow NuGet to download missing packages'.
  All packages listed in packages.config are already installed.
  EntityFramework.SqlServerCompact -> E:\ef6-6.1.3\bin\Debug\EntityFramework.SqlServerCompact.dll
  XmlCore -> E:\ef6-6.1.3\bin\Debug\Microsoft.Data.Tools.Design.XmlCore.dll
  Running Code Analysis...
  Code Analysis Complete -- 0 error(s), 0 warning(s)
  DesignXmlCore -> E:\ef6-6.1.3\bin\Debug\Microsoft.VisualStudio.Data.Tools.Design.XmlCore.dll
  Running Code Analysis...
  Code Analysis Complete -- 0 error(s), 0 warning(s)
  EntityDesignerVersioningFacade -> E:\ef6-6.1.3\bin\Debug\Microsoft.Data.Entity.Design.VersioningFacade.dll
  Running Code Analysis...
  Code Analysis Complete -- 0 error(s), 0 warning(s)
  EntityDesignModel -> E:\ef6-6.1.3\bin\Debug\Microsoft.Data.Entity.Design.Model.dll
  Running Code Analysis...
  Code Analysis Complete -- 0 error(s), 0 warning(s)
  EntityDesignExtensibility -> E:\ef6-6.1.3\bin\Debug\Microsoft.Data.Entity.Design.Extensibility.dll
  Running Code Analysis...
  EntityDesignDatabaseGeneration -> E:\ef6-6.1.3\bin\Debug\Microsoft.Data.Entity.Design.DatabaseGeneration.dll
  Running Code Analysis...
  Code Analysis Complete -- 0 error(s), 0 warning(s)
  Code Analysis Complete -- 0 error(s), 0 warning(s)
  EntityDesign -> E:\ef6-6.1.3\bin\Debug\Microsoft.Data.Entity.Design.dll
  Running Code Analysis...
  One or more indirectly-referenced assemblies could not be found. These assemblies are not required for analysis. However, without them, analysis results could be incomplete.
  Code Analysis Complete -- 0 error(s), 0 warning(s)
  EntityDesignBootstrapPackage -> E:\ef6-6.1.3\bin\Debug\Microsoft.Data.Entity.Design.BootstrapPackage.dll
  Running Code Analysis...
  Code Analysis Complete -- 0 error(s), 0 warning(s)
  EntityDesigner -> E:\ef6-6.1.3\bin\Debug\Microsoft.Data.Entity.Design.EntityDesigner.dll
  Running Code Analysis...
  Code Analysis Complete -- 0 error(s), 0 warning(s)
  EntityDesignPackage ->
  EntityDesignPackage ->
  EntityDesignPackage -> E:\ef6-6.1.3\bin\Debug\Microsoft.Data.Entity.Design.Package.dll
  Running Code Analysis...
  Code Analysis Complete -- 0 error(s), 0 warning(s)
  Creating intermediate PkgDef file.
  VsIdeTestHostFramework -> E:\ef6-6.1.3\bin\Debug\Microsoft.VisualStudio.QualityTools.VsIdeTestHostFramework.dll
  TestInfrastructure -> E:\ef6-6.1.3\test\EFTools\TestInfrastructure\bin\Debug\EFDesigner.TestInfrastructure.dll
  InProcTests -> E:\ef6-6.1.3\test\EFTools\InProcTests\bin\Debug\EFDesigner.InProcTests.dll
  Restoring NuGet packages...
  To prevent NuGet from downloading packages during build, open the Visual Studio Options dialog, click on the Package Manager node and uncheck 'Allow NuGet to download missing packages'.
  All packages listed in packages.config are already installed.
  E2ETests -> E:\ef6-6.1.3\test\EFTools\E2ETests\bin\Debug\EFDesigner.E2ETests.dll
  Restoring NuGet packages...
  To prevent NuGet from downloading packages during build, open the Visual Studio Options dialog, click on the Package Manager node and uncheck 'Allow NuGet to download missing packages'.
  All packages listed in packages.config are already installed.
  FunctionalTests -> E:\ef6-6.1.3\test\EFTools\FunctionalTests\bin\Debug\EFDesigner.FunctionalTests.dll
  Restoring NuGet packages...
  To prevent NuGet from downloading packages during build, open the Visual Studio Options dialog, click on the Package Manager node and uncheck 'Allow NuGet to download missing packages'.
  All packages listed in packages.config are already installed.
  UnitTests -> E:\ef6-6.1.3\test\EFTools\UnitTests\bin\Debug\EFDesigner.UnitTests.dll
  VsIdeTestHostAddin -> E:\ef6-6.1.3\bin\Debug\Microsoft.VisualStudio.QualityTools.HostAdapters.VsIdeAddIn.dll
  Installer -> E:\ef6-6.1.3\bin\Debug\VsIdeTestHost.msi
  Restoring NuGet packages...
  All packages listed in packages.config are already installed.
  All packages listed in packages.config are already installed.
  Restoring NuGet packages...
  To prevent NuGet from downloading packages during build, open the Visual Studio Options dialog, click on the Package Manager node and uncheck 'Allow NuGet to download missing packages'.
  All packages listed in packages.config are already installed.
  EntityFramework -> E:\ef6-6.1.3\bin\DebugNet40\EntityFramework.dll
  Restoring NuGet packages...
  To prevent NuGet from downloading packages during build, open the Visual Studio Options dialog, click on the Package Manager node and uncheck 'Allow NuGet to download missing packages'.
  All packages listed in packages.config are already installed.
  EntityFramework.SqlServerCompact -> E:\ef6-6.1.3\bin\DebugNet40\EntityFramework.SqlServerCompact.dll
  Migrate -> E:\ef6-6.1.3\bin\DebugNet40\migrate.exe
  EntityFramework.SqlServer -> E:\ef6-6.1.3\bin\DebugNet40\EntityFramework.SqlServer.dll
  EntityFramework.SqlServerCompact.Legacy -> E:\ef6-6.1.3\bin\DebugNet40\EntityFramework.SqlServerCompact.Legacy.dll
  EntityFramework.PowerShell.Utility -> E:\ef6-6.1.3\bin\DebugNet40\EntityFramework.PowerShell.Utility.dll
  EntityFramework.PowerShell -> E:\ef6-6.1.3\bin\DebugNet40\EntityFramework.PowerShell.dll
  Restoring NuGet packages...
  To prevent NuGet from downloading packages during build, open the Visual Studio Options dialog, click on the Package Manager node and uncheck 'Allow NuGet to download missing packages'.
  All packages listed in packages.config are already installed.
  Restoring NuGet packages...
  To prevent NuGet from downloading packages during build, open the Visual Studio Options dialog, click on the Package Manager node and uncheck 'Allow NuGet to download missing packages'.
  All packages listed in packages.config are already installed.
  EntityFramework -> E:\ef6-6.1.3\bin\Debug\EntityFramework.dll
  EntityFramework.SqlServer -> E:\ef6-6.1.3\bin\Debug\EntityFramework.SqlServer.dll
  EntityFramework.SqlServerCompact -> E:\ef6-6.1.3\bin\Debug\EntityFramework.SqlServerCompact.dll
  EntityFramework.SqlServerCompact.Legacy -> E:\ef6-6.1.3\bin\Debug\EntityFramework.SqlServerCompact.Legacy.dll
  Migrate -> E:\ef6-6.1.3\bin\Debug\migrate.exe
  EntityFramework.PowerShell.Utility -> E:\ef6-6.1.3\bin\Debug\EntityFramework.PowerShell.Utility.dll
  EntityFramework.PowerShell -> E:\ef6-6.1.3\bin\Debug\EntityFramework.PowerShell.dll
  Attempting to build package from 'EntityFramework.CodeTemplates.CSharp.nuspec'.
  Successfully created package 'E:\ef6-6.1.3\bin\Debug\Packages\EntityFramework.CodeTemplates.CSharp.6.1.3.nupkg'.
  Attempting to build package from 'EntityFramework.CodeTemplates.VisualBasic.nuspec'.
  Successfully created package 'E:\ef6-6.1.3\bin\Debug\Packages\EntityFramework.CodeTemplates.VisualBasic.6.1.3.nupkg'.
  Attempting to build package from 'EntityFramework.SqlServerCompact.Legacy.nuspec'.
  Successfully created package 'E:\ef6-6.1.3\bin\Debug\Packages\EntityFramework.SqlServerCompact.Legacy.6.1.3.nupkg'.
  Successfully created package 'E:\ef6-6.1.3\bin\Debug\Packages\EntityFramework.SqlServerCompact.Legacy.6.1.3.symbols.nupkg'.
  Attempting to build package from 'EntityFramework.SqlServerCompact.nuspec'.
  Successfully created package 'E:\ef6-6.1.3\bin\Debug\Packages\EntityFramework.SqlServerCompact.6.1.3.nupkg'.
  Successfully created package 'E:\ef6-6.1.3\bin\Debug\Packages\EntityFramework.SqlServerCompact.6.1.3.symbols.nupkg'.
  Attempting to build package from 'EntityFramework.nuspec'.
  Successfully created package 'E:\ef6-6.1.3\bin\Debug\Packages\EntityFramework.6.1.3.nupkg'.
  Successfully created package 'E:\ef6-6.1.3\bin\Debug\Packages\EntityFramework.6.1.3.symbols.nupkg'.
  Restoring NuGet packages...
  To prevent NuGet from downloading packages during build, open the Visual Studio Options dialog, click on the Package Manager node and uncheck 'Allow NuGet to download missing packages'.
  Installing 'Microsoft.SqlServer.Compact 4.0.8876.1'.
  Successfully installed 'Microsoft.SqlServer.Compact 4.0.8876.1'.
**E:\ef6-6.1.3\.nuget\NuGet.targets(106,9): error : Unable to find version '5.0.0' of package 'EntityFramework'. [E:\ef6-6.1.3\src\EFTools\setup\GenerateMsiInputs\GenerateMsiInputs.msbuild]
E:\ef6-6.1.3\.nuget\NuGet.targets(106,9): error : Unable to find version '5.0.0' of package 'EntityFramework.de'. [E:\ef6-6.1.3\src\EFTools\setup\GenerateMsiInputs\GenerateMsiInputs.msbuild]
E:\ef6-6.1.3\.nuget\NuGet.targets(106,9): error : Unable to find version '5.0.0' of package 'EntityFramework.es'. [E:\ef6-6.1.3\src\EFTools\setup\GenerateMsiInputs\GenerateMsiInputs.msbuild]
E:\ef6-6.1.3\.nuget\NuGet.targets(106,9): error : Unable to find version '5.0.0' of package 'EntityFramework.fr'. [E:\ef6-6.1.3\src\EFTools\setup\GenerateMsiInputs\GenerateMsiInputs.msbuild]
E:\ef6-6.1.3\.nuget\NuGet.targets(106,9): error : Unable to find version '5.0.0' of package 'EntityFramework.it'. [E:\ef6-6.1.3\src\EFTools\setup\GenerateMsiInputs\GenerateMsiInputs.msbuild]
E:\ef6-6.1.3\.nuget\NuGet.targets(106,9): error : Unable to find version '5.0.0' of package 'EntityFramework.ja'. [E:\ef6-6.1.3\src\EFTools\setup\GenerateMsiInputs\GenerateMsiInputs.msbuild]
E:\ef6-6.1.3\.nuget\NuGet.targets(106,9): error : Unable to find version '5.0.0' of package 'EntityFramework.ko'. [E:\ef6-6.1.3\src\EFTools\setup\GenerateMsiInputs\GenerateMsiInputs.msbuild]
E:\ef6-6.1.3\.nuget\NuGet.targets(106,9): error : Unable to find version '5.0.0' of package 'EntityFramework.ru'. [E:\ef6-6.1.3\src\EFTools\setup\GenerateMsiInputs\GenerateMsiInputs.msbuild]
E:\ef6-6.1.3\.nuget\NuGet.targets(106,9): error : Unable to find version '5.0.0' of package 'EntityFramework.zh-Hans'. [E:\ef6-6.1.3\src\EFTools\setup\GenerateMsiInputs\GenerateMsiInputs.msbuild]
E:\ef6-6.1.3\.nuget\NuGet.targets(106,9): error : Unable to find version '5.0.0' of package 'EntityFramework.zh-Hant'. [E:\ef6-6.1.3\src\EFTools\setup\GenerateMsiInputs\GenerateMsiInputs.msbuild]
E:\ef6-6.1.3\.nuget\NuGet.targets(106,9): error MSB3073: The command ""E:\ef6-6.1.3\.nuget\NuGet.exe" install "packages.config" -source "" -NonInteractive -RequireConsent   -solutionDir "E:\ef6-6.1.3\bin\Debug\MsiRuntimeInputs "" exited with code 1.
 [E:\ef6-6.1.3\src\EFTools\setup\GenerateMsiInputs\GenerateMsiInputs.msbuild]**

Thanks,
Tapan


I detected changes in the release/6.4 branch which have not been merged yet to master. I'm a robot and am configured to help you automatically keep master up to date, so I've opened this PR.

This PR merges commits made on release/6.4 by the following committers:

* @JunTaoLuo
* @mmitche
* @dotnet-bot

## Instructions for merging from UI

This PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.

<img alt="merge button instructions" src="https://i.imgur.com/GepcNJV.png" width="300" />

If this repo does not allow creating merge commits from the GitHub UI, use command line instructions.

## Instructions for merging via command line

Run these commands to merge this pull request from the command line.

``` sh
git fetch
git checkout release/6.4
git pull --ff-only
git checkout master
git pull --ff-only
git merge --no-ff release/6.4

# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge
# Pushing the changes to the PR branch will re-trigger PR validation.
git push https://github.com/dotnet-maestro-bot/EntityFramework6 HEAD:merge/release/6.4-to-master
```

<details>
<summary>or if you are using SSH</summary>

```
git push git@github.com:dotnet-maestro-bot/EntityFramework6 HEAD:merge/release/6.4-to-master
```

</details>


After PR checks are complete push the branch
```
git push
```

## Instructions for resolving conflicts

:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].

[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/
[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/

## Instructions for updating this pull request

Contributors to this repo have permission update this pull request by pushing to the branch 'merge/release/6.4-to-master'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.

```
git checkout -b merge/release/6.4-to-master master
git pull https://github.com/dotnet-maestro-bot/EntityFramework6 merge/release/6.4-to-master
(make changes)
git commit -m "Updated PR with my changes"
git push https://github.com/dotnet-maestro-bot/EntityFramework6 HEAD:merge/release/6.4-to-master
```

<details>
    <summary>or if you are using SSH</summary>

```
git checkout -b merge/release/6.4-to-master master
git pull git@github.com:dotnet-maestro-bot/EntityFramework6 merge/release/6.4-to-master
(make changes)
git commit -m "Updated PR with my changes"
git push git@github.com:dotnet-maestro-bot/EntityFramework6 HEAD:merge/release/6.4-to-master
```

</details>

Contact .NET Core Engineering if you have questions or issues.
Also, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.

_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/problem/881863/managing-user-instance-mdf-database-connections.html)._

---
The user instance databases are a pain to manage
The ones auto-created during development to your %userprofile% folder when you're doing work with Entity Framework.

They're easy to create, but also easy to lockup .. due to their 1 process only limitation

Creates all kinds of headaches

---
### Original Comments

#### Visual Studio Feedback System on 1/13/2020, 01:43 AM: 

<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>


---
### Original Solutions
(no solutions)
_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/problem/877364/package-manager-console-add-migration-out-of-memor.html)._

---
Hi, I very often getting Out Of memory Exception when I use “code first commands” on Package Manager Console, like this:

PM> update-database
Specify the '-Verbose' flag to view the SQL statements being applied to the target database.
System.OutOfMemoryException: Exception of type 'System.OutOfMemoryException' was thrown.
   at System.Reflection.RuntimeAssembly._nLoad(AssemblyName fileName, String codeBase, Evidence assemblySecurity, RuntimeAssembly locationHint, StackCrawlMark& stackMark, IntPtr pPrivHostBinder, Boolean throwOnFileNotFound, Boolean forIntrospection, Boolean suppressSecurityChecks)
   at System.Reflection.RuntimeAssembly.nLoad(AssemblyName fileName, String codeBase, Evidence assemblySecurity, RuntimeAssembly locationHint, StackCrawlMark& stackMark, IntPtr pPrivHostBinder, Boolean throwOnFileNotFound, Boolean forIntrospection, Boolean suppressSecurityChecks)
   at System.Reflection.RuntimeAssembly.InternalLoadAssemblyName(AssemblyName assemblyRef, Evidence assemblySecurity, RuntimeAssembly reqAssembly, StackCrawlMark& stackMark, IntPtr pPrivHostBinder, Boolean throwOnFileNotFound, Boolean forIntrospection, Boolean suppressSecurityChecks)
   at System.Reflection.RuntimeAssembly.InternalLoad(String assemblyString, Evidence assemblySecurity, StackCrawlMark& stackMark, IntPtr pPrivHostBinder, Boolean forIntrospection)
   at System.Reflection.RuntimeAssembly.InternalLoad(String assemblyString, Evidence assemblySecurity, StackCrawlMark& stackMark, Boolean forIntrospection)
   at System.Reflection.Assembly.Load(String assemblyString)
   at System.Data.Entity.Migrations.Design.ToolingFacade.BaseRunner.LoadAssembly(String name)
   at System.Data.Entity.Migrations.Design.ToolingFacade.BaseRunner.FindConfiguration()
   at System.Data.Entity.Migrations.Design.ToolingFacade.BaseRunner.GetMigrator()
   at System.Data.Entity.Migrations.Design.ToolingFacade.UpdateRunner.RunCore()
   at System.Data.Entity.Migrations.Design.ToolingFacade.BaseRunner.Run()
**Exception of type 'System.OutOfMemoryException' was thrown.**

After restart  VS, everything works. I don't know if problem begin after upgrade my computer (64 GB RAM from 32) or in new version VS.
Event manager and ActivityLog.xsl don’t have any detailed information’s.
Can you advise me how I can resolve the problem?
Thanks Tom

---
### Original Comments

#### Visual Studio Feedback System on 1/8/2020, 02:09 AM: 

<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>


---
### Original Solutions
(no solutions)
As a first step towards the work describe [here](https://github.com/dotnet/announcements/issues/127), we're planning on migrating the EntityFramework6 repo to the dotnet org, and renaming it to "ef6". We'd like to get this done ASAP.

We don't expect any significant issues for contributors, GitHub is great about adding redirects. However, it may impact our ability to produce nightly builds and flow dependencies for a few days.

Please let us know if you run into any other issues.
I am not sure if this is a bug... but the following behavior is not what I was expecting. 

Here is how my models look like:

A `Branch` belongs to an `Organisation`. An `Organisation` belongs to a `User`:

    [Table("branch")]
    public class Branch
    {
        public long BranchId { get; set; }

        public string BranchName { get; set; }

        public long OrganisationId { get; set; }

        [ForeignKey("OrganisationId")]
        public Organisation Organisation { get; set; }
    }

    [Table("organisation")]
    public class Organisation
    {
        public long OrganisationId { get; set; }

        public string OrganisationName { get; set; }

        public long UserId { get; set; }

        [ForeignKey("UserId")]
        public UserProfile UserProfile { get; set; }
    }

    [Table("userprofileview")] // <-- UserProfile is representing a view 
    public class UserProfile
    {
        public long UserId { get; set; }

        public string Name { get; set; }
    }

`UserProfile` entity is representing a view and is not insertable (because it has a left join). 

I want to add a new `Branch` to an existing `Organisation` (which belongs to an existing `User`), the following code gives me an error:

    public void AddOrUpdateBranchAsAdminUser(Branch branch)
    {
        if (branch.BranchId > 0)
        {
            // code to update branch
        }
        else
        {
            _context.Branch.Add(branch);
            _context.Entry(branch.Organisation).State = EntityState.Unchanged; // <-- Don't update Organisation 
            /*
             * uncommenting this line will fix the problem
             * _context.Entry(branch.Organisation.UserProfile).State = EntityState.Unchanged;  
             */
            _context.SaveChanges();
        }
    }

This is the error that I get:

> The target table userprofileview of the INSERT is not insertable-into

If I uncomment the line that sets the state of `UserProfile` then it works fine... 

I would have expected that changing `Organisation` state (parent entity) should change the state of `UserProfile` too.

   

Fix of memory leak & test reproducing memory leak with WeakReference.