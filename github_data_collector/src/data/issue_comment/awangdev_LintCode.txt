
import static org.junit.Assert.assertEquals;

import java.util.Arrays;

import org.junit.Test;

public class testdonvi {
	 public int twoSum2(int[] nums, int target) {
	        if (nums == null || nums.length == 0) {
	            return 0;
	        }
	        int count = 0;
	        int left = 0;
	        int right = nums.length - 1;
	        Arrays.sort(nums);
	        while (left < right) {
	            if (nums[left] + nums[right] > target) {
	                count += (right - left);
	                right--;
	            } else {
	                left++;
	            }
	        }
	        return count;
	    }

	@Test
	public void test() {
		int[] a= {};
		
		int result;
		
		result=twoSum2(a, 3);
		assertEquals(0,result);
		
	}
	@Test
	public void test2() {
		int[] a= null;
		
		int result;
		
		result=twoSum2(a, 3);
		assertEquals(0,result);
		
	}
	@Test
	public void test3()
	{int[] a= {3,1};
	int result=twoSum2(a, 2);
	assertEquals(1,result);
		
	}
	@Test
	public void test4()
	{int[] a= {3,1};
	int result=twoSum2(a, 5);
	assertEquals(0,result);
		
	}
	@Test
	public void test5()
	{int[] a= {3};
	int result=twoSum2(a, 2);
	assertEquals(0,result);
		
	}
	
	
	

}
 
This code is to delete the nodes which do not lie within the given range in a BST.
//Find the num1,num2 in original array and record the index
这块，应该是
rst[0] = i ;
rst[1] = i;
您好，可不可以讲解下您是如何将 [Wildcard Matching](https://github.com/awangdev/LintCode/blob/master/Java/Wildcard%20Matching.java#L96) 中原本`m * n` 的dp array 利用滚动数列 转化成 `2 * n`的 dp array？

我注意到您用到了两个variable 
```
int curr = 0;
int prev = 1;
```
我不太明白这两个varibale具体的意义何在，以及您是如何应用这两个variable 的
谢谢