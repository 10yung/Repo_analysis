Error while importing sbt project:

[info] Loading settings for project global-plugins from idea.sbt ...
[info] Loading global plugins from C:\Users\Administrator\.sbt\1.0\plugins
[info] Loading settings for project test-build from plugins.sbt ...
[info] Loading project definition from C:\Users\Administrator\IdeaProjects\test\project
[info] Updating ProjectRef(uri("file:/C:/Users/Administrator/IdeaProjects/test/project/"), "test-build")...
[warn] 	module not found: com.github.mpeltonen#sbt-idea;1.7.0-SNAPSHOT
[warn] ==== typesafe-ivy-releases: tried
[warn]   https://repo.typesafe.com/typesafe/ivy-releases/com.github.mpeltonen/sbt-idea/scala_2.12/sbt_1.0/1.7.0-SNAPSHOT/ivys/ivy.xml
[warn] ==== sbt-plugin-releases: tried
[warn]   https://repo.scala-sbt.org/scalasbt/sbt-plugin-releases/com.github.mpeltonen/sbt-idea/scala_2.12/sbt_1.0/1.7.0-SNAPSHOT/ivys/ivy.xml
[warn] ==== local: tried
[warn]   C:\Users\Administrator\.ivy2\local\com.github.mpeltonen\sbt-idea\scala_2.12\sbt_1.0\1.7.0-SNAPSHOT\ivys\ivy.xml
[warn] ==== public: tried
[warn]   https://repo1.maven.org/maven2/com/github/mpeltonen/sbt-idea_2.12_1.0/1.7.0-SNAPSHOT/sbt-idea-1.7.0-SNAPSHOT.pom
[warn] ==== local-preloaded-ivy: tried
:shipit: 
Given a project with a dependency that is packaged as a bundle, eg:

```
  lazy val tikaParser = "org.apache.tika" % "tika-parsers" % "1.0"
```

(tika-parsers is packaged as a bundle, see http://mvnrepository.com/artifact/org.apache.tika/tika-parsers/1.0)

When I resolve a project that contains a dependency on a bundle package, `sbt gen-idea` will trigger a resolve and download the bundles twice - into both the jars and bundles directory of the ivy cache:

```
➜  ~  ls ~/.ivy2/cache/org.apache.tika/tika-parsers/bundles
tika-parsers-1.0.jar
➜  ~  ls ~/.ivy2/cache/org.apache.tika/tika-parsers/jars   
tika-parsers-1.0.jar
```

This is fine, except that when I share the generated libarries files with another user who hasn't run `sbt gen-idea`, and only run `sbt update`, they only have the dependency in the bundles directory and not the jars directory.

For example the sbt-wartremover plugin (added via plugins.sbt with this line: addSbtPlugin("org.brianmckenna"     % "sbt-wartremover"       % "0.11") )
shows as following in all project .iml files:

```
     <option name="pluginPaths">
       <array>
        <option value="/Users/epozniansky/.ivy2/cache/org.brianmckenna/wartremover_2.10/jars/wartremover_2.10-0.11.jar"/>
       </array>
     </option>
```

I think it should be relative to $USER_HOME instead.

Using sbt 0.13.8, OS X 10.10.4 and Java JDK 1.8.0_51, I get this error when running `sbt` in the directory to which this project has been cloned:

```
error: error while loading CharSequence, class file '/Library/Java/JavaVirtualMachines/jdk1.8.0_51.jdk/Contents/Home/jre/lib/rt.jar(java/lang/CharSequence.class)' is broken
(bad constant pool tag 18 at byte 10)
[error] Type error in expression
Project loading failed: (r)etry, (q)uit, (l)ast, or (i)gnore?
```

It would be great and be much appreciated if, for SBT newbies like me, readme.md could clearly spell out the differences between the SBT functionality offered by this plugin where it is extra, compared to what is available through the Scala plugin, and where it overlaps (if it does, in fact).

I see that sbt-idea generates idea 13 project. After conversion to idea 14 project a lot of stuff is messed up. So, for instance, project with sbt-plugins that are opened by idea 13 after gen-idea without any problems are totally broken after conversion to idea 14 format (see screenshot here https://youtrack.jetbrains.com/issue/SCL-7818 ), unfortunately gen-idea is the only way to open sbt plugins as native Idea sbt import is broken for plugins.

See https://youtrack.jetbrains.com/issue/SCL-7798

After I open projects created by gen-idea in idea 14 it tells me that it is old format and conversion is needed

If a project has multiple configurations used in `dependsOn` (for e.g: `.dependsOn(testkit % "test,it")`), they are currently converted to `DependencyProject(testkit,CompileScope)`.

I would like to add the ability to account for multiple configurations (`test,it`) and also take into consideration the new `ideaExtraTestConfigurations` setting, checking if the configuration is a test one, and adding the dependency accordingly.

I have a working example that does this. Would this be of interest? Should I submit a pull request for such a feature?
