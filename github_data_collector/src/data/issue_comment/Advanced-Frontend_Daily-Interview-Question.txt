
script start
async1 start
 async2
promise1
promise2
script end
async1 end
setTimeout
let test = [1, 2, [3, 4, 5,[6,7]]];
Array.prototype.myFlat = function () {
    const result = [];
    this.forEach(item => {
        if ((typeof item) !== 'object') {
            result.push(item);
        } else {
            result.push(...Array.prototype.myFlat.apply(item));
        }
    });
    return result;
};
console.log(test.myFlat());
字符串仅由小写字母和 [] 组成，且字符串不会包含多余的空格。
示例一: `'abc' --> {value: 'abc'}`
示例二：`'[abc[bcd[def]]]' --> {value: 'abc', children: {value: 'bcd', children: {value: 'def'}}}`
![image](https://user-images.githubusercontent.com/16753554/69211590-8192ba00-0b99-11ea-9e5d-f32400363154.png)


![image](https://user-images.githubusercontent.com/16753554/69211742-07166a00-0b9a-11ea-89a5-280527c239af.png)

不使用JS数组API，查找有序数列最先出现的位置和最后出现的位置




性能分析、定位