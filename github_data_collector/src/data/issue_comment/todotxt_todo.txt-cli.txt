**Before submitting a pull request,** please make sure the following is done:

- [x] Fork [the repository](https://github.com/todotxt/todo.txt-cli) and create your branch from `master`.
- [x] Ensure the test suite passes.

So tests don't fail on macOS catalina.

**Before submitting a pull request,** please make sure the following is done:

- [x] Fork [the repository](https://github.com/todotxt/todo.txt-cli) and create your branch from `master`.
- [x] If you've added code that should be tested, add tests!
- [x] Ensure the test suite passes.
- [x] Format your code with [ShellCheck](https://www.shellcheck.net/).
- [x] Include a human-readable description of what the pull request is trying to accomplish.

Feel free to ignore if this has already been discussed (and please close & point to discussion if so).

It allows to simply create a minimal config file like so:

```
export TODO_DIR=.
```
Without explicitly specifying the widely accepted default file names: `$TODO_DIR/todo.txt`, etc...

It would be nice to have an option to set a due time in addition to due date.
This would help scheduling the day better and possibly extend apps with a reminder option.
**Do you want to request a *feature* or report a *bug*?**
No.

**What is the current behavior?**
I successfully run `make`, and `make install`, but on running 'make test' I get the following message:
`*   ok 1: todo2.sh executable
*   ok 2: all todo2 contexts
* FAIL 3: todo2.sh executable not in PATH
todo2.sh 
expected exit code 127, actual 1
*   ok 4: all todo2 contexts
* failed 1 among 4 test(s)
make: *** [Makefile:81: tests/t6080-completion-path.sh] Error 1
`
I'm using the default settings for the location of todo.sh.

**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem.**


**What is the expected behavior?**
My install should pass the tests.

**Which versions todo.sh are you using?**
> Run `todo.sh -V`

> TODO.TXT Command Line Interface v2.11.0.dirty


**Which Operating System are you using?**
Fedora 30

**Which version of bash are you using?**
> Run `bash --version`

> GNU bash, version 5.0.7(1)-release (x86_64-redhat-linux-gnu)

**Do you want to request a *feature* or report a *bug*?**
A feature, I think?

**What is the current behavior?**
Currently Bash completion for projects does not work inside quotes. If you encase your task in quotes (you need this for single quotes to work and parentheses etc) then you can't complete your projects by using `"+mypro<tab>"`. Without quotes this would be completed as `+myproject` (assuming you have this project).

**What is the expected behavior?**
The project inside the quotes should be expanded just as it is without quotes.

**Which versions todo.sh are you using?**
> Run `todo.sh -V`
2.11.0

**Which Operating System are you using?**
Windows 10 with todo.sh in WSL.

**Which version of bash are you using?**
> Run `bash --version`
4.3.48(1)

**Do you want to request a *feature* or report a *bug*?**
Request a feature

**What is the current behavior?**
Tasks only accept a task description

**What is the expected behavior?**
Tasks could have a description added to them using, for example, `t desc <description>`

**Which versions todo.sh are you using?**
2.11.0

**Which Operating System are you using?**
Ubuntu 18.04.2

**Which version of bash are you using?**
4.4.19


**Do you want to request a *feature* or report a *bug*?**

A feature

**What is the current behavior?**

to pri takes only one task as an argument

**What is the expected behavior?**

I would like to prioritize multiple tasks in one command, for example `to pri 1,2,3 C`

I'm not really attached to a given syntax, it could also be like in `to do` where we can do `to do 1 2 3`, then we could to the same for to pri with `to pri 1 2 3 C`

**Which versions todo.sh are you using?**
> Run `todo.sh -V`

TODO.TXT Command Line Interface v2.11.0

**Which Operating System are you using?**

Ubuntu 18.04

**Which version of bash are you using?**
> Run `bash --version`

GNU bash, version 4.4.19(1)-release (x86_64-pc-linux-gnu)
**Do you want to request a *feature* or report a *bug*?**
Bug report

**What is the current behavior?**
Doesn't run

**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem.**
After updating to Ubuntu 19.10 the extension gives error at Gnome Shell Extension site and won't run

**What is the expected behavior?**
To work as in version 18.10

**Which versions todo.sh are you using?**
> Run `todo.sh -V`
Latest

**Which Operating System are you using?**
Ubuntu 19.04

**Which version of bash are you using?**
> Run `bash --version`
5.0.3

**Do you want to request a *feature* or report a *bug*?**
bug

**What is the current behavior?**
If you have a task that starts with an ASCII character before '(' (such as # or double quote),
that task will sort *before* any of the priority tasks. So, what you get are:
1. unprioritized tasks that start with an ASCII character before '('
2. prioritized tasks
3. unprioritized tasks that start ASCII character after '('

**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem.**
Use a todo.txt such as the following:
```
(A) high priority task
(B) medium priority task
"funny" task
Another task
(A) "funny" priority task
```

then do `todo.sh ls` will show:
```
3 "funny" task
5 (A) "funny" priority task
1 (A) high priority task
2 (B) medium priority task
4 Another task
```

**What is the expected behavior?**
The expected behavior is that all unprioritized tasks will sort *after* prioritized tasks.
```
5 (A) "funny" priority task
1 (A) high priority task
2 (B) medium priority task
3 "funny" task
4 Another task
```

**Which versions todo.sh are you using?**
> Run `todo.sh -V`
TODO.TXT Command Line Interface v2.11.0

**Which Operating System are you using?**
MacOS 10.13.6

**Which version of bash are you using?**
> Run `bash --version`
GNU bash, version 3.2.57(1)-release (x86_64-apple-darwin17)


**Before submitting a pull request,** please make sure the following is done:

- [x] Fork [the repository](https://github.com/todotxt/todo.txt-cli) and create your branch from `master`.
- [ ] If you've added code that should be tested, add tests!
- [x] Ensure the test suite passes.
        It does now that the harness correctly processes dates on Mac OS 10.13!
- [ ] Format your code with [ShellCheck](https://www.shellcheck.net/).
- [X] Include a human-readable description of what the pull request is trying to accomplish.
Fix test harness for MacOS 10.13 so that date tests work correctly.
- [X] Steps for the reviewer(s) on how they can manually QA the changes.
Run on MacOS 10.13
- [X] Have a `fixes #XX` reference to the issue that this pull request fixes.
fixes #277
