
right now, there is no way for client integrators to exclude the git enhancements offered by plugin-bash-like. e.g. the new git status stripe widget. we could address this moving the plugin-bash-like/git aspect to a top-level plugin. then client integrators may choose not to include that plugin
Also:
    1. allows client definition plugin to customize tabs in the about window using about.json with MultiModalResponse
    2. includes the en_US translation strings of the default about
    3. allows client definition plugin to customize proxy server by proxy.json
    
Fixes #3501
Fixes #3487

<!--
Hello üëã Thank you for submitting a pull request.

To help us merge your PR, make sure to follow the instructions below:
- Create or update the documentation.
- Create or update the tests.
- Refer to the issue you are closing in the PR description - fix #issue
- Specify if the PR is in WIP (work in progress) state or ready to be merged
-->

#### Description of what you did:

<!--
Replace [ ] by [x] to check these checkboxes!
-->

#### My PR is a:

- [x] üí• Breaking change
- [ ] üêõ Bug fix
- [ ] üíÖ Enhancement
- [ ] üöÄ New feature

#### Please confirm that your PR fulfills these requirements

- [x] Multiple commits are squashed into one commit.
- [x] The commit message follows [Conventional Commits](https://github.com/IBM/kui/blob/master/CONTRIBUTING.md#conventional-commits), which allows us to autogenerate release notes; e.g. `fix(plugins/plugin-k8s): fixed annoying bugs`
- [x] All npm dependencies are pinned.

Currently, a client definition is defined as `kui:client` in a  client's `package.json`. We should use a more conventional strategy here. I propose to use `@kui-shell/client` as the client definition home, and `@kui-shell/client/config.d` as the client configuration directory, containing configuration files such as `name.json`, `config.json`, and etc. A client could specify `@kui-shell/client:[client definition]` as a dependency in `package.json`, and Kui will build the customized client upon that.
We would like the value attribute added to the input element for the bottom command input bar; this will help make writing tests easier for our custom client; seems the text value is hidden in a shadow dom div currently that can't be accessed by E2E test frameworks.



<!--
Hello üëã Thank you for submitting an issue.

Before you start, please make sure your issue is understandable and reproducible.
To make your issue readable make sure you use valid Markdown syntax.

https://guides.github.com/features/mastering-markdown/
-->

**Describe the bug**

Ihave installed  libgdk_pixbuf-2.0.so.0Ôºåbut installed  gdk-pixbuf2-2.36.5-1.h1.i686 versionÔºåKui only  libgdk_pixbuf-2.0.so.0 availableÔºüÔºü

```
yum install -y libgdk_pixbuf-2.0.so.0
Package gdk-pixbuf2-2.36.5-1.h1.i686 already installed and latest version
```

and , i found:
```
ll /lib/libgdk_pixbuf*
lrwxrwxrwx 1 root root     29 Dec 31 10:35 /lib/libgdk_pixbuf-2.0.so.0 -> libgdk_pixbuf-2.0.so.0.3600.5
-rwxr-xr-x 1 root root 173176 Jan  1  2018 /lib/libgdk_pixbuf-2.0.so.0.3600.5
```

But the error keep going...

How can I solve this problem? Thank you.

**Steps to reproduce the behavior**

1. Go to '...'
2. Click on '....'
3. Scroll down to '....'
4. See error

```
Linux versionÔºö  3.10.0-327.62.59.83.h120.x86_64 #1 SMP Mon Jul 9 00:00:00 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux
installation package:   Kui-linux-x64.zip
```


**Expected behavior**
A clear and concise description of what you expected to happen.

**Screenshots**
If applicable, add screenshots to help explain your problem.

**Code snippets**
If applicable, add code samples to help explain your problem.

**System**

- Kui version:
- Operating system:

Fixes #3379

<!--
Hello üëã Thank you for submitting a pull request.

To help us merge your PR, make sure to follow the instructions below:
- Create or update the documentation.
- Create or update the tests.
- Refer to the issue you are closing in the PR description - fix #issue
- Specify if the PR is in WIP (work in progress) state or ready to be merged
-->

#### Description of what you did:

<!--
Replace [ ] by [x] to check these checkboxes!
-->

#### My PR is a:

- [ ] üí• Breaking change
- [ ] üêõ Bug fix
- [x] üíÖ Enhancement
- [ ] üöÄ New feature

#### Please confirm that your PR fulfills these requirements

- [x] Multiple commits are squashed into one commit.
- [x] The commit message follows [Conventional Commits](https://github.com/IBM/kui/blob/master/CONTRIBUTING.md#conventional-commits), which allows us to autogenerate release notes; e.g. `fix(plugins/plugin-k8s): fixed annoying bugs`
- [x] All npm dependencies are pinned.

for now, this seems to be blocked on the chromedriver issue discussed here:
https://groups.google.com/forum/#!searchin/chromedriver-users/unknown$20error$3A$20cannot$20determine$20loading$20status%7Csort:date/chromedriver-users/_pML0970aA4/9teufV2aBQAJ

related spectron issue:
https://github.com/electron-userland/spectron/issues/493
**Describe the bug**
I only recently installed kui at Windows 10 and I noticed that almost all commands hang indefinitely. So far I managed only to find `ls` and `cd`, which do not hang. `ls` gives error that it is not recognized as an internal or external command (looks like a regular response from `cmd`, even though I have git bash installed, kui for some reason uses cmd).

**Steps to reproduce the behavior**

1. Download Kui
2. Unpack `Kui-win32-x64` and run Kui.exe
3. run `cd ..` -> success
4. run ls -> immediate error
5. run `kubectl version` -> stuck indefinitely
6. close window, open Kui.exe again
7. try to enter something completely random -> stuck indefinitely

**Expected behavior**
Command should not hang.

**Screenshots**
![image](https://user-images.githubusercontent.com/25692644/70826453-40cc4080-1de7-11ea-9f06-ed4527a7d1ef.png)

**System**

- Kui version: 6.1.5
- Operating system: Windows 10

<!--
Hello üëã Thank you for submitting an issue.

Before you start, please make sure your issue is understandable and reproducible.
To make your issue readable make sure you use valid Markdown syntax.

https://guides.github.com/features/mastering-markdown/
-->

**Describe the bug**
A clear and concise description of what the bug is.

```
kubectl kui get po --ui
Error: unknown command "kui" for "kubectl"

Did you mean this?
	run

Run 'kubectl --help' for usage.
```

**Steps to reproduce the behavior**

1. Download `Kui.dmg`
2. Install
3. Click Kui from launchpad
4. type `kubectl kui po --ui` at terminal window
5. see error

Similar steps 

1. Download `Kui-darwin-x64.tar.bz2`
2. Unpack
3. Click Kui.app
4. type `kubectl kui po --ui` at terminal window
5. see error


**Expected behavior**
A clear and concise description of what you expected to happen.

**Screenshots**
If applicable, add screenshots to help explain your problem.

**Code snippets**
If applicable, add code samples to help explain your problem.

**System**

- Kui version:
- Operating system:
