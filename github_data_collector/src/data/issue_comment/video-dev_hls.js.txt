### This PR will...

make `computeLivePosition` to have a minimum value of `media.currentTime`. and will prevent seeking in case `liveSyncPosition <= media.currentTime`

### Why is this Pull Request needed?
hls.js seeks backwards during live streaming https://github.com/video-dev/hls.js/issues/2494

### Are there any points in the code the reviewer needs to double check?

we could just add the `liveSyncPosition > media.currentTime` condition without touching `computeLivePosition` function but I think this is more correct that way.

### Resolves issues:

#2494

### Checklist

- [x] changes have been done against master branch, and PR does not conflict
- [x] new unit / functional tests have been added (whenever applicable)
- [ ] API or design changes are documented in API.md

### This PR will...
Convert mpegaudio to TypeScript
### Why is this Pull Request needed?
Progress towards #2070
### Are there any points in the code the reviewer needs to double check?
No
### Resolves issues:
N/A
### Checklist

- [ ] changes have been done against master branch, and PR does not conflict
- [ ] new unit / functional tests have been added (whenever applicable)
- [ ] API or design changes are documented in API.md

### This PR will...
Convert adts.js to TypeScript
### Why is this Pull Request needed?
Progress towards #2070
### Are there any points in the code the reviewer needs to double check?
No
### Resolves issues:
No
### Checklist

- [ ] changes have been done against master branch, and PR does not conflict
- [ ] new unit / functional tests have been added (whenever applicable)
- [ ] API or design changes are documented in API.md

**What do you want to do with Hls.js?**
I have video consists from different urls, my progress bar looks like
 --------------|------------|---------
each pieces represents new url divided by delimiter "|".
So when I try seek to video so far, and video has about 10 video segments (see screenshot) 
<img width="632" alt="segment_issue" src="https://user-images.githubusercontent.com/11407792/72623513-ec6c3180-394d-11ea-83e0-f77c002c7dcf.png">
And It fails, url is attached I've consoled attached event from hls.js but then nothing can happen. 

**What have you tried so far?**
First of all I have created HLS instance for player
```javascript
function createHLS() {
          hls = new HLS({
            maxBufferSize: 200 * 1000 * 1000
          });
          hls.on(Hls.Events.ERROR, function (event, data) {
            console.error('uniqueId ', uniqueId);
            console.error('error ', data);

            switch (data.type) {
              case Hls.ErrorTypes.NETWORK_ERROR:
                playerError.handleError({ type: constants.UNABLE_TO_CONNECT });
                break;
              case Hls.ErrorTypes.MEDIA_ERROR:
                if (!data.details.includes('buffer')) {
                  playerError.handleError({ type: constants.MEDIA_ERROR });
                } else if (data.details.includes('buffer')) {
                  hls.recoverMediaError();
                  recovered = true;
                  console.log('recoverd');
                }
                if (data.details.includes('fragParsingError')) {
                  playerError.hideError();
                }

                break;
              case Hls.ErrorTypes.OTHER_ERROR:
                playerError.handleError({
                  type: constants.DEFAULT_ERROR_MESSAGE
                });
                break;
              default:
                playerError.handleError({
                  type: constants.DEFAULT_ERROR_MESSAGE
                });
                break;
            }
          });
          hls.on(Hls.Events.MEDIA_ATTACHED, function () {
            console.log('attached');
            shouldPlayVideoFlag = true;
            mediaAttached = true;
            recovered = false;
            $timeout(function () {
              if (playerState.shouldPlayVideoFlag) {
                playerState.playVideo(true);
              } else {
                playerState.pauseVideo(true);
              }

              if (videoHasFinished) {
                playerState.pauseVideo(true);
                videoHasFinished = false;
              }
            });
          });
          hls.on(Hls.Events.MANIFEST_PARSED, function (event, data) {
            console.log("manifest loaded, found " + data.levels.length + " quality level");
          });
          playerState.updateProgressBarView();
        }
```
and then if new url arrived I invoke such function 

```javascript
  function HLSNewVideoArrivedHandler(url, scope) {
            if (!playerState.firstStart) {
              hls.destroy();
              createHLS();
            }
            hls.loadSource(url);

            shouldPlayVideoFlag = false;
            mediaAttached = false;
            hls.attachMedia(scope.video);
            playerState.playVideo(true);
        }
```
The question is am I doing something wrong while try to attach new url for HLS instance? 
For some special reasons (need to synchronize with something), can I get PTS in real time? If so, can you give me some advice on how to modify it?
Hi guys! Need help. I tried using this api using the code below. My problem was that the ts segments loaded by this api are the old ts segments. I have ffmpeg running and updating those ts segments. How can I add cache breaker on ts segments?

//---------- Page Code ------------//
        if (Hls.isSupported()) {
                var video = document.getElementById('video');
                var hls = new Hls();
                hls.attachMedia(video);
                hls.on(Hls.Events.MEDIA_ATTACHED, function () {
                        console.log("video and hls.js are now bound together !");
                        hls.loadSource("/images/live/segment.m3u8");
                        hls.on(Hls.Events.MANIFEST_PARSED, function (event, data) {
                                console.log("manifest loaded, found " + data.levels.length + " quality level");
                        });
                });
                //var test = hls.currentLevel();
        }
//--------FFMPEG CODE------------//
#!/bin/bash
VIDSOURCE="rtsp://admin:admin@10.108.3.179:554/axis-media/media.amp"
VIDEO_OPTS="-s 2920x1580 -codec:v libx264 -b:v 800000"
OUTPUT_HLS="-hls_time 4 -hls_list_size 4 -hls_wrap 4 -start_number 0"
ffmpeg -rtsp_transport tcp -i "$VIDSOURCE" -y -vcodec copy $VIDEO_OPTS $OUTPUT_HLS segment.m3u8


//--------- m3u8 file------------//
#EXTM3U
#EXT-X-VERSION:3
#EXT-X-TARGETDURATION:13
#EXT-X-MEDIA-SEQUENCE:30
#EXTINF:12.500000,
segment2.ts
#EXTINF:12.500000,
segment3.ts
#EXTINF:12.500000,
segment0.ts
#EXTINF:12.500000,
segment1.ts




Does anyone have any sample code demonstrating a Google Analytics integration? On the documentation page it says "Built-in Analytics" but I'm not quite sure how to access these metrics. I'm assuming I would need to use Google Events tracking. If anyone has an example, it would be very helpful. I'm looking mainly to tracking the video name (or url) and the amount of video that was matching. Thank you!
### This PR will...
Convert mp4-generator to TypeScript
### Why is this Pull Request needed?
Progress towards #2070
### Are there any points in the code the reviewer needs to double check?
NO
### Resolves issues:
N/A
### Checklist

- [ ] changes have been done against master branch, and PR does not conflict
- [ ] new unit / functional tests have been added (whenever applicable)
- [ ] API or design changes are documented in API.md

### What version of Hls.js are you using?
Latest
### What browser and OS are you using?
Windows IE11 and Edge

### Checklist
<!-- Replace [ ] with [x] to check off the list -->
- [ ] The issue observed is not already reported by searching on Github under https://github.com/video-dev/hls.js/issues
- [ ] The issue occurs in the stable client on https://hls-js.netlify.com/demo and not just on my page
<!-- The stable client is built from the latest release -->
- [ ] The issue occurs in the latest client on https://hls-js-latest.netlify.com/demo and not just on my page
<!-- The latest client is built from the head of the master branch -->
- [x] The stream has correct Access-Control-Allow-Origin headers (CORS)
- [ ] There are no network errors such as 404s in the browser console when trying to play the stream

### Steps to reproduce
Sometimes, when I open the page, video controls appears but instead of the streaming there is a black screen.
When I try to destroy the player and initialize again, it works well.

### Expected behavior
Show the streaming.

### Actual behavior
Black Screen

### Console output
There are no errors
I'm trying to determine the resolution of the currently playing `Level`, but sometimes the level object doesn't contain `width` or `height` fields. Where can I find this information?

````
hls.on(Hls.Events.LEVEL_SWITCHED, (evt: any, data: Hls.levelSwitchedData) => {
	const level = hls.levels[data.level];
	if (level) {
		console.log(`qualityChange ${level.width}x${level.height}`);
	}
});
````

results in `qualityChange undefinedxundefined`.

it depends on the stream, sometimes it's there, other times not.