hey, thanks for you guys' donation.It's great. As raspberry pi 4B is already been come out. So I wonder if there is something for 4B. Thanks very much.BTW, I use the ubuntu server OS.
###pip install tensorflow...

### It runs through the entire process and goes right up to almost 100% and then crashes with multiple red lines and the last line says "Memory Error" - tried different versions, reimaged SD card and same error message

### Raspberry PI WH - 8 GB SD Card/Python 3.5 

Please provide the following information about your Raspberry Pi setup:

* Raspberry Pi model: WH
* Operating System used:  Linux
* Version of Python used: 3.5
* SD card memory size: 8 GB
* Size of USB/other device used as swap (if building from source): 
* TensorFlow git commit hash (if building from source): just install so far 
pip install tensorflow

###Memory Error
### Describe the Issue
I am following this guide (https://gist.github.com/EKami/9869ae6347f68c592c5b5cd181a3b205) to install tensorflow on a raspberry pi for c++. I attempt to build the tensorflow library with this command:
bazel build -c opt --config=monolithic --local_resources 1024,1.0,1.0 --verbose_failures //tensorflow:libtensorflow_cc.so

### Steps to Reproduce
Follow the guide above but skipping the portion where he says to replace:
native.new_http_archive(
      name = "eigen_archive",
      urls = [
          "http://mirror.bazel.build/bitbucket.org/eigen/eigen/get/f3a22f35b044.tar.gz",
          "https://bitbucket.org/eigen/eigen/get/f3a22f35b044.tar.gz",
      ],
      sha256 = "ca7beac153d4059c02c8fc59816c82d54ea47fe58365e8aded4082ded0b820c4",
      strip_prefix = "eigen-eigen-f3a22f35b044",
      build_file = str(Label("//third_party:eigen.BUILD")),
  )
as doing so caused me problems. I also used all of the newest versions of software the tutorial has you download
### Hardware/Software Info

Please provide the following information about your Raspberry Pi setup:

* Raspberry Pi model: 3 B+
* Operating System used: Raspbian Stretch
* Version of Python used: 3.5.3
* SD card memory size: 32 GB
* Size of USB/other device used as swap (if building from source): 16 GB
* TensorFlow git commit hash (if building from source): I cloned the repository October 19 2018

### Relevant Con/home/pi/tf/tensorflow/tensorflow/BUILD:558:1: Linking of rule '//tensorflow:libtensorflow_cc.so' failed (Exit 1): gcc failed: error executing command 
  (cd /home/pi/.cache/bazel/_bazel_pi/4770c5ca1786316d370c900c0b614a6d/execroot/org_tensorflow && \
  exec env - \
    PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/games:/usr/games \
    PWD=/proc/self/cwd \
    PYTHON_BIN_PATH=/usr/bin/python \
    PYTHON_LIB_PATH=/usr/local/lib/python2.7/dist-packages \
    TF_DOWNLOAD_CLANG=0 \
    TF_NEED_CUDA=0 \
    TF_NEED_OPENCL_SYCL=0 \
  /usr/bin/gcc -shared -o bazel-out/arm-opt/bin/tensorflow/libtensorflow_cc.so -z defs -Wl,--version-script tensorflow/tf_version_script.lds '-Wl,-rpath,$ORIGIN/' -Wl,-soname,libtensorflow_cc.so -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread '-fuse-ld=gold' -Wl,-no-as-needed -Wl,-z,relro,-z,now -B/usr/bin -B/usr/bin -pass-exit-codes -Wl,--gc-sections -Wl,@bazel-out/arm-opt/bin/tensorflow/libtensorflow_cc.so-2.params)
bazel-out/arm-opt/bin/tensorflow/core/kernels/_objs/list_kernels/list_kernels.pic.o:list_kernels.cc:function tensorflow::TensorListStack<Eigen::ThreadPoolDevice, tensorflow::bfloat16>::Compute(tensorflow::OpKernelContext*): error: undefined reference to 'void tensorflow::ConcatCPU<tensorflow::bfloat16>(tensorflow::DeviceBase*, std::vector<std::unique_ptr<tensorflow::TTypes<tensorflow::bfloat16, 2, int>::ConstMatrix, std::default_delete<tensorflow::TTypes<tensorflow::bfloat16, 2, int>::ConstMatrix> >, std::allocator<std::unique_ptr<tensorflow::TTypes<tensorflow::bfloat16, 2, int>::ConstMatrix, std::default_delete<tensorflow::TTypes<tensorflow::bfloat16, 2, int>::ConstMatrix> > > > const&, tensorflow::TTypes<tensorflow::bfloat16, 2, int>::Matrix*)'
bazel-out/arm-opt/bin/tensorflow/core/kernels/_objs/list_kernels/list_kernels.pic.o:list_kernels.cc:function tensorflow::TensorListGather<Eigen::ThreadPoolDevice, tensorflow::bfloat16>::Compute(tensorflow::OpKernelContext*): error: undefined reference to 'void tensorflow::ConcatCPU<tensorflow::bfloat16>(tensorflow::DeviceBase*, std::vector<std::unique_ptr<tensorflow::TTypes<tensorflow::bfloat16, 2, int>::ConstMatrix, std::default_delete<tensorflow::TTypes<tensorflow::bfloat16, 2, int>::ConstMatrix> >, std::allocator<std::unique_ptr<tensorflow::TTypes<tensorflow::bfloat16, 2, int>::ConstMatrix, std::default_delete<tensorflow::TTypes<tensorflow::bfloat16, 2, int>::ConstMatrix> > > > const&, tensorflow::TTypes<tensorflow::bfloat16, 2, int>::Matrix*)'
collect2: error: ld returned 1 exit status
Target //tensorflow:libtensorflow_cc.so failed to build
INFO: Elapsed time: 21254.436s, Critical Path: 1956.26s
INFO: 2708 processes: 2708 local.
FAILED: Build did NOT complete successfully
sole Output/Logs


### Describe the Issue
build failed
### Steps to Reproduce
download bazelv0.13.0 and edit files as in this git and perform bash ./compile.sh
### Hardware/Software Info
RPi3B+, Raspbian OS

ERROR: 
![image](https://user-images.githubusercontent.com/24696403/44189689-d659b080-a15e-11e8-96a9-2ef3ee51c5f6.png)
### Describe the Issue
I've installed your TensorFlow version 1.1.0 with pip and keras 2.2 
```python
 x=Dense(4,activation='softmax',kernel_initializer=glorot_uniform(seed=0))(x)
  File "/usr/local/lib/python2.7/dist-packages/keras/engine/topology.py", line 619, in __call__
    output = self.call(inputs, **kwargs)
  File "/usr/local/lib/python2.7/dist-packages/keras/layers/core.py", line 881, in call
    output = self.activation(output)
  File "/usr/local/lib/python2.7/dist-packages/keras/activations.py", line 29, in softmax
    return K.softmax(x)
  File "/usr/local/lib/python2.7/dist-packages/keras/backend/tensorflow_backend.py", line 2963, in softmax
    return tf.nn.softmax(x, axis=axis)
TypeError: softmax() got an unexpected keyword argument 'axis'
```
### Steps to Reproduce

### Hardware/Software Info

Please provide the following information about your Raspberry Pi setup:

* Raspberry Pi model: 3
* Operating System used: Raspberian
* Version of Python used: 2.7
* SD card memory size: 32
* Size of USB/other device used as swap (if building from source): 
* TensorFlow git commit hash (if building from source): 

### Relevant Console Output/Logs
### Describe the Issue
when running the ./configure line it say that is required a newer version on bazel for tensorflow.

so, I upgrade the bazel to 0.14.1 the latest version and when running  ./compile.sh it has a lot of errors.

was wondering if this errors are from trying to run the same commands again, so do i need to delete everything i have done or at least the bazel files on the tf folder

or

use a different bazel version, if so which version is the most recommended? it says it needs to be 0.10.0 or higher.


thank you.


### Steps to Reproduce

### Hardware/Software Info

Please provide the following information about your Raspberry Pi setup:

* Raspberry Pi model: 3 model B+
* Operating System used: latest raspbian stretch
* Version of Python used: 3
* SD card memory size: 8 gb
* Size of USB/other device used as swap (if building from source): 4 gb
* TensorFlow git commit hash (if building from source): 

### Relevant Console Output/Logs
### Describe the Issue
I have installed tensorflow on a Raspberry PI 3 using your instructions and it worked correctly. After installing a number of libraries that I needed for loading a Keras model trained on my PC (numpy, scipy etc) I have observed the following error while importing tensorflow:

Runtime Error: module compiled against API version 0xc but this version of numpy is 0xa
Segmentation fault

I have updated all the necessary libraries, and importing any of them doesn't result in an error in a Python 3 script. Also the error is not keras related, because the statement _import tensorflow_ raises an error no matter what follows after it. Should I uninstall tensorflow and start all over again?
### Steps to Reproduce

### Hardware/Software Info

Please provide the following information about your Raspberry Pi setup:

* Raspberry Pi model: 3B
* Operating System used: Raspbian
* Version of Python used: 3.5
* SD card memory size: 16 GB
* Size of USB/other device used as swap (if building from source): 32GB
* TensorFlow git commit hash (if building from source): 

### Relevant Console Output/Logs
Tensorflow 1.1 installs an runs fine on raspberry pi - thank you!
However. r1.1 does not have some of the useful functions and feature needed for 3d convolutional networks e.g Conv3DTranspose 
Has there been any attempts to build r1.8 for raspberry pi?
I have tried a bunch of stuff but not been successful. For example, latest bazel with tensorflow master - no dice!
when i run grep -Rl 'lib64' | xargs sed -i 's/lib64/lib/g' it returns sed: no input files

### raspbian stretch

* Raspberry Pi model: raspberry pi 3b+
* Operating System used: raspbian stretch
* Version of Python used:  3.5.2
* SD card memory size: 16Gb
* Size of USB/other device used as swap (if building from source):  4Gb

if i skip the step and directly run ./configure it says:
You have bazel 0.4.5- (@non-git) installed.
Please upgrade your bazel installation to version 0.10.0 or higher to build TensorFlow!
Configuration finished