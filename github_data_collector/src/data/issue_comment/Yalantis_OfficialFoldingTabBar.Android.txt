In Relative Layout trying more than four Item not work. ( Just Show Four Item from top in Menu Layout)
In Constraint Layout the Tab Bar Exceeds the View Width and Get  out of View Bounds.

Hi @root1991,

Firstly Thanks for the library.

I have recently discover your library but when i try to import to library through the gradle with the below line

`compile 'com.github.Yalantis:OfficialFoldingTabBar.Android:v0.9'`

and i am getting the following error:

`Failed to resolve: com.github.Yalantis:OfficialFoldingTabBar.Android:v0.9`

Can you know what can cause the following error?
hi 
how to disable rotating circle menu button icon on Click?
Is there any way to change the menu color from green to color of our own choice?
App getting crashed after using the tabbar. Initialization is getting faliled.
E/UncaughtException: kotlin.UninitializedPropertyAccessException: lateinit property mData has not been initialized
                                                                            at client.yalantis.com.foldingtabbar.FoldingTabBar.initExpandAnimators(FoldingTabBar.kt:160)
                                                                            at client.yalantis.com.foldingtabbar.FoldingTabBar.access$initExpandAnimators(FoldingTabBar.kt:25)
                                                                            at client.yalantis.com.foldingtabbar.FoldingTabBar$initViewTreeObserver$1.onPreDraw(FoldingTabBar.kt:105)
                                                                            at android.view.ViewTreeObserver.dispatchOnPreDraw(ViewTreeObserver.java:944)
                                                                            at android.view.ViewRootImpl.performTraversals(ViewRootImpl.java:2213)
                                                                            at android.view.ViewRootImpl.doTraversal(ViewRootImpl.java:1258)
                                                                            at android.view.ViewRootImpl$TraversalRunnable.run(ViewRootImpl.java:6348)
                                                                            at android.view.Choreographer$CallbackRecord.run(Choreographer.java:871)
                                                                            at android.view.Choreographer.doCallbacks(Choreographer.java:683)
                                                                            at android.view.Choreographer.doFrame(Choreographer.java:619)
                                                                            at android.view.Choreographer$FrameDisplayEventReceiver.run(Choreographer.java:857)
                                                                            at android.os.Handler.handleCallback(Handler.java:751)
                                                                            at android.os.Handler.dispatchMessage(Handler.java:95)
                                                                            at android.os.Looper.loop(Looper.java:154)
                                                                            at android.app.ActivityThread.main(ActivityThread.java:6123)
                                                                            at java.lang.reflect.Method.invoke(Native Method)
                                                                            at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:867)
                                                                            at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:757)
I'm curious to know, is there any reasons for this or is just some internal decision? currently 84% of the users are on SDK 19 and above. 12% of that remaining 16% are on SDK 16-18. I know 12% doesn't seem like much, but given the android adoption (~1.6 Billion active devices as per Google) that translates to quite some users (~192 millions) which will not be able to use an app targeting SDK 19 and above...