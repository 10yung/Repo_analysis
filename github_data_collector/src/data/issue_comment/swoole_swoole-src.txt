Please answer these questions before submitting your issue. Thanks!

**1. What did you do? If possible, provide a simple script for reproducing the error.**

- I'm trying to split my application workers in batches, each doing a specific job (ex: rented cached page, wait for api response, process an image).
- Some jobs can take 2 min, other can take 50ms to complete. 
- Some need a few MB of RAM, other need a few GB.

I'm trying to redirect requests to the first free available worker in the batch, but have no way to know which one is free.

**2. What did you expect to see?**

It would be nice if in the Server object we could have a map/array of workers and their status (and maybe a custom variable that can be accessed everywhere).
```
'dispatch_func' => function (Server $server, int $fd, int $type, string $data) {
   # Get first free worker (eventually with some rules based on $data)
   for ($i = 0; $i < (int)$server->setting['worker_num']; $i++) {
       # Some way to tell which worker is free or busy
       if (***$server->workers[$i]->status*** !== ***SWOOLE_WORKER_BUSY***) {
           return $i;
       }
   }

   # All workers busy (not sure what will happen)
   return SWOOLE_DISPATCH_RESULT_USERFUNC_FALLBACK;
},
```


**3. What did you see instead?**

There is no way with the built in system to know if a worker is free or busy, so requests look like this:

```
Two threads ([-]: processing, [space]:idle)
t#1 [-----------][-][-] [-----][-][-]
t#2 [-]          [-----][-]    [--]  

Should see something like this (free one gets the work, no idle time):
t#1 [--------------][----][-][-]
t#2 [-][-----][-][-][-][-]
```

The only way to do this now, is to use the swoole map or some external storage to store the state (ex: redis), and that slows everything down an dis very messy (when to mark worker as `busy`, and when to mark as `free`)


**4. What version of Swoole are you using (show your `php --ri swoole`)?**

```
swoole

Swoole => enabled
Author => Swoole Team <team@swoole.com>
Version => 4.4.13RC2
Built => Jan  1 2020 15:16:27
coroutine => enabled
epoll => enabled
eventfd => enabled
signalfd => enabled
cpu_affinity => enabled
spinlock => enabled
rwlock => enabled
sockets => enabled
openssl => OpenSSL 1.1.1d  10 Sep 2019
http2 => enabled
pcre => enabled
zlib => 1.2.11
mutex_timedlock => enabled
pthread_barrier => enabled
futex => enabled
mysqlnd => enabled
async_redis => enabled

Directive => Local Value => Master Value
swoole.enable_coroutine => On => On
swoole.enable_library => On => On
swoole.enable_preemptive_scheduler => Off => Off
swoole.display_errors => On => On
swoole.use_shortname => On => On
swoole.unixsock_buffer_size => 8388608 => 8388608
```


**5. What is your machine environment used (including version of kernel & php & gcc) ?**

```
Distributor ID:	Ubuntu
Description:	Ubuntu 18.04.3 LTS
Release:	18.04
Codename:	bionic
```

```
PHP 7.4.0 (cli) (built: Nov 28 2019 20:31:53) ( NTS )
Copyright (c) The PHP Group
Zend Engine v3.4.0, Copyright (c) Zend Technologies
    with Zend OPcache v7.4.0, Copyright (c), by Zend Technologies
```

```
Thread model: posix
gcc version 8.3.0 (Debian 8.3.0-6) 
```




[root@txmapp-api01 lib]# php --ri swoole

swoole

Swoole => enabled
Author => Swoole Team <team@swoole.com>
Version => 4.4.12
Built => Jan 15 2020 16:11:00
coroutine => enabled
epoll => enabled
eventfd => enabled
signalfd => enabled
cpu_affinity => enabled
spinlock => enabled
rwlock => enabled
sockets => enabled
openssl => OpenSSL 1.0.2k-fips  26 Jan 2017
http2 => enabled
pcre => enabled
zlib => 1.2.7
mutex_timedlock => enabled
pthread_barrier => enabled
futex => enabled
mysqlnd => enabled
async_redis => enabled

Directive => Local Value => Master Value
swoole.display_errors => On => On
swoole.enable_coroutine => On => On
swoole.enable_library => On => On
swoole.enable_preemptive_scheduler => Off => Off
swoole.unixsock_buffer_size => 8388608 => 8388608
swoole.use_shortname => Off => Off

[root@txmapp-api01 lib]# php -v
PHP 7.3.13 (cli) (built: Jan 15 2020 16:01:11) ( NTS )
Copyright (c) 1997-2018 The PHP Group
Zend Engine v3.3.13, Copyright (c) 1998-2018 Zend Technologies
    with Zend OPcache v7.3.13, Copyright (c) 1999-2018, by Zend Technologies
	
[root@txmapp-api01 lib]# gcc -v
Using built-in specs.
COLLECT_GCC=gcc
COLLECT_LTO_WRAPPER=/usr/libexec/gcc/x86_64-redhat-linux/4.8.5/lto-wrapper
Target: x86_64-redhat-linux
Configured with: ../configure --prefix=/usr --mandir=/usr/share/man --infodir=/usr/share/info --with-bugurl=http://bugzilla.redhat.com/bugzilla --enable-bootstrap --enable-shared --enable-threads=posix --enable-checking=release --with-system-zlib --enable-__cxa_atexit --disable-libunwind-exceptions --enable-gnu-unique-object --enable-linker-build-id --with-linker-hash-style=gnu --enable-languages=c,c++,objc,obj-c++,java,fortran,ada,go,lto --enable-plugin --enable-initfini-array --disable-libgcj --with-isl=/builddir/build/BUILD/gcc-4.8.5-20150702/obj-x86_64-redhat-linux/isl-install --with-cloog=/builddir/build/BUILD/gcc-4.8.5-20150702/obj-x86_64-redhat-linux/cloog-install --enable-gnu-indirect-function --with-tune=generic --with-arch_32=x86-64 --build=x86_64-redhat-linux
Thread model: posix
gcc version 4.8.5 20150623 (Red Hat 4.8.5-16) (GCC) 


[root@txmapp-api01 lib]# uname -a
Linux txmapp-api01 3.10.0-693.11.1.el7.x86_64 #1 SMP Mon Dec 4 23:52:40 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux	

[root@txmapp-api01 API]# gdb php -c core.23978
GNU gdb (GDB) Red Hat Enterprise Linux 7.6.1-115.el7
Copyright (C) 2013 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-redhat-linux-gnu".
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>...
Reading symbols from /usr/local/php7313/bin/php...done.
[New LWP 23978]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib64/libthread_db.so.1".
Core was generated by `tianxin.Master          '.
Program terminated with signal 11, Segmentation fault.
#0  zend_string_hash_val (s=s@entry=0x7fffff0100000000) at /usr/local/src/php-7.3.13/Zend/zend_string.h:99
#1  zend_interned_string_find_permanent (str=str@entry=0x7fffff0100000000) at /usr/local/src/php-7.3.13/Zend/zend_string.c:183
#2  0x00007f243ae6441d in accel_replace_string_by_process_permanent (str=0x7fffff0100000000) at /usr/local/src/php-7.3.13/ext/opcache/ZendAccelerator.c:738
#3  0x00007f243ae63017 in accel_copy_permanent_strings (new_interned_string=0x7f243ae64410 <accel_replace_string_by_process_permanent>) at /usr/local/src/php-7.3.13/ext/opcache/ZendAccelerator.c:601
。。。。
99              return ZSTR_H(s) ? ZSTR_H(s) : zend_string_hash_func(s);
Missing separate debuginfos, use: debuginfo-install cyrus-sasl-lib-2.1.26-21.el7.x86_64 freetype-2.4.11-15.el7.x86_64 glibc-2.17-196.el7_4.2.x86_64 keyutils-libs-1.5.8-3.el7.x86_64 krb5-libs-1.15.1-8.el7.x86_64 libcom_err-1.42.9-10.el7.x86_64 libcurl-7.29.0-42.el7_4.1.x86_64 libgcc-4.8.5-16.el7_4.1.x86_64 libidn-1.28-4.el7.x86_64 libjpeg-turbo-1.2.90-5.el7.x86_64 libpng-1.5.13-7.el7_2.x86_64 libselinux-2.5-11.el7.x86_64 libssh2-1.4.3-10.el7_2.1.x86_64 libstdc++-4.8.5-16.el7_4.1.x86_64 libxml2-2.9.1-6.el7_2.3.x86_64 ncurses-libs-5.9-14.20130511.el7_4.x86_64 nspr-4.13.1-1.0.el7_3.x86_64 nss-3.28.4-15.el7_4.x86_64 nss-softokn-freebl-3.28.3-8.el7_4.x86_64 nss-util-3.28.4-3.el7.x86_64 openldap-2.4.44-5.el7.x86_64 openssl-libs-1.0.2k-8.el7.x86_64 pcre-8.32-17.el7.x86_64 readline-6.2-10.el7.x86_64 xz-libs-5.2.2-1.el7.x86_64 zlib-1.2.7-17.el7.x86_64




Please answer these questions before submitting your issue. Thanks!

1. What did you do? If possible, provide a simple script for reproducing the error.
server.php
```php
$http = new Swoole\Http\Server("127.0.0.1", 9502);
$http->on('request', function ($request, Response $response) {
    if ($request->server['request_method'] == 'HEAD') {
        $response->status(200);
        $response->header('Content-Length', 0);
        $response->end();
        return;
    }
    $response->end("<h1>Hello Swoole. #".rand(1000, 9999)."</h1>");
});
$http->start();
```
client.php
```php
<?php

use Swoole\Coroutine\Http\Client;
use Swoole\Coroutine\Scheduler;

$scheduler = new Scheduler;
$scheduler->add(function () {
    $client = new Client('127.0.0.1', 9502);
    $client->setMethod('head');
    $client->execute('/index/1');
    var_dump($client);
});
$scheduler->start();
```
Execute `server.php` and then execute `client.php`

2. What did you expect to see?
A normal response of http client with http status code 200


3. What did you see instead?
When `$client->setMethod('head')` I got 400 status code response but not 200.
When `$client->setMethod('HEAD')` I got `Protocol Error` response. 

4. What version of Swoole are you using (show your `php --ri swoole`)?
```
swoole

Swoole => enabled
Author => Swoole Team <team@swoole.com>
Version => 4.4.14
Built => Jan 12 2020 15:52:32
coroutine => enabled
kqueue => enabled
rwlock => enabled
sockets => enabled
http2 => enabled
pcre => enabled
zlib => 1.2.11
brotli => E16777223/D16777223
async_redis => enabled

Directive => Local Value => Master Value
swoole.enable_coroutine => On => On
swoole.enable_library => On => On
swoole.enable_preemptive_scheduler => Off => Off
swoole.display_errors => On => On
swoole.use_shortname => Off => Off
swoole.unixsock_buffer_size => 262144 => 262144

```


5. What is your machine environment used (including version of kernel & php & gcc) ?
```
Darwin huangzhaohuideMacBook-Pro.local 19.2.0 Darwin Kernel Version 19.2.0: Sat Nov  9 03:47:04 PST 2019; root:xnu-6153.61.1~20/RELEASE_X86_64 x86_64
```
```
PHP 7.2.20 (cli) (built: Jul  5 2019 12:51:26) ( NTS )
Copyright (c) 1997-2018 The PHP Group
Zend Engine v3.2.0, Copyright (c) 1998-2018 Zend Technologies
    with Zend OPcache v7.2.20, Copyright (c) 1999-2018, by Zend Technologies
```
```
Configured with: --prefix=/Library/Developer/CommandLineTools/usr --with-gxx-include-dir=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/4.2.1
Apple clang version 11.0.0 (clang-1100.0.33.12)
Target: x86_64-apple-darwin19.2.0
Thread model: posix
InstalledDir: /Library/Developer/CommandLineTools/usr/bin
```

Please answer these questions before submitting your issue. Thanks!

1. What did you do? If possible, provide a simple script for reproducing the error.

脚本在独立进程，每秒执行一次            

```
try{
                $context = stream_context_create(array(
                    'http' => array(
                        'timeout' => 1 //超时时间，单位为秒
                    )
                ));
                $res = file_get_contents("https://graph.qq.com/oauth2.0/me?access_token=",0,$context);
                Log::info("success ".$res);
            }catch (\Throwable $e){
                Log::error('%s(code:%d) %s', get_class($e), $e->getCode(), $e->getMessage());
                exec("ping -c 2 graph.qq.com",$array);
                Log::error(json_encode($array));
}
```



2. What did you expect to see?



3. What did you see instead?
报错其中部分，间歇性报错，不是每次都报错，报错集中在固定时间内
```
[05-Jan-2020 02:13:04 CST] [error] trace[TestTask.php:67] ErrorException(code:0) file_get_contents(https://graph.qq.com/oauth2.0/me?access_token=): failed to open stream: DNS Lookup resolve timeout
[05-Jan-2020 02:13:12 CST] [error] trace[TestTask.php:47] ["PING graphqqcom.msf.tencent-cloud.com (223.166.152.195) 56(84) bytes of data.","64 bytes from 223.166.152.195 (223.166.152.195):icmp_seq=1 ttl=52 time=8.91 ms","64 bytes from 223.166.152.195 (223.166.152.195): icmp_seq=2 ttl=52 time=8.91 ms","","--- graphqqcom.msf.tencent-cloud.com ping statistics ---","2 packets transmitted, 2 received, 0% packet loss, time 3334ms","rtt min\/avg\/max\/mdev = 8.918\/8.918\/8.919\/0.094 ms",""]
[05-Jan-2020 02:18:11 CST] [error] trace[TestTask.php:67] ErrorException(code:0) file_get_contents(https://graph.qq.com/oauth2.0/me?access_token=): failed to open stream: DNS Lookup resolve timeout

```

4. What version of Swoole are you using (show your `php --ri swoole`)?
swoole

Swoole => enabled
Author => Swoole Team <team@swoole.com>
Version => 4.4.5
Built => Sep  3 2019 10:38:53
coroutine => enabled
epoll => enabled
eventfd => enabled
signalfd => enabled
cpu_affinity => enabled
spinlock => enabled
rwlock => enabled
sockets => enabled
openssl => OpenSSL 1.0.2k-fips  26 Jan 2017
http2 => enabled
pcre => enabled
zlib => enabled
mutex_timedlock => enabled
pthread_barrier => enabled
futex => enabled
mysqlnd => enabled
async_redis => enabled

Directive => Local Value => Master Value
swoole.enable_coroutine => On => On
swoole.enable_library => On => On
swoole.enable_preemptive_scheduler => Off => Off
swoole.display_errors => On => On
swoole.use_shortname => On => On
swoole.unixsock_buffer_size => 8388608 => 8388608


5. What is your machine environment used (including version of kernel & php & gcc) ?

PHP 7.3.8 (cli) (built: Oct 15 2019 16:24:52) ( NTS )
Copyright (c) 1997-2018 The PHP Group
Zend Engine v3.3.8, Copyright (c) 1998-2018 Zend Technologies



Please answer these questions before submitting your issue. Thanks!

1. What did you do? If possible, provide a simple script for reproducing the error.
首先在onWorkerStart启动事件里面启用了Runtime::enableCoroutine
在onClose事件中调用了thrift协议的远程调用
```php
try {
    $client = new DeviceClient();
    $client->offLine($unique_mark);
} catch (\Exception $e) {
    Log::warning('[Device:onClose:' . __LINE__ . ']msg: soa error . |data:', [
        'fd' => $fd,
        'msg' => $e->getMessage(),
    ]);
}
```
```php
//DeviceClient的构造函数，除此之外其他都和thrfit官方生成的客户端相同，替换也就是替换了TScoket的实现
$socket = new TSocket($serviceConfig['host'], $serviceConfig['port']);
$socket->setRecvTimeout($serviceConfig['recv_timeout']);
$socket->setSendTimeout($serviceConfig['send_timeout']);
$socket->setDebug($serviceConfig['debug'] ?? false);

$this->transport = new TBufferedTransport($socket, 4096, 4096);
$protocol = new TBinaryProtocolAccelerated($this->transport);
$this->input_ = $this->output_ = $protocol;

$this->transport->open();
```

用thrift官方实现的Socket客户端，如果try里发生连接异常，会在这里造成死循环，应该是重复回调onClose事件，主要是通过strace工具观察到woker进程一直在执行connect、epoll_ctl、epoll_wait、read、sendto、recvfrom，除了这些函数需要传入的ID不同，其他都是类似的在一直执行offLine。
后面我用swoole的协程Socket实现了socket客户端，替代了thrift官方的，之后就没有出现死循环造成进程100%占用了。
同时观测到在使用原生socket实现的客户端在执行过程中会有一次madvise调用，而用协程的没有这个调用。

2. What did you expect to see?
正常

3. What did you see instead?
死循环


4. What version of Swoole are you using (show your `php --ri swoole`)?
```
swoole

Swoole => enabled
Author => Swoole Team <team@swoole.com>
Version => 4.4.13
Built => Dec 19 2019 14:18:09
coroutine => enabled
epoll => enabled
eventfd => enabled
signalfd => enabled
cpu_affinity => enabled
spinlock => enabled
rwlock => enabled
sockets => enabled
openssl => OpenSSL 1.0.2k-fips  26 Jan 2017
http2 => enabled
pcre => enabled
zlib => 1.2.7
mutex_timedlock => enabled
pthread_barrier => enabled
futex => enabled
async_redis => enabled

Directive => Local Value => Master Value
swoole.enable_coroutine => On => On
swoole.enable_library => On => On
swoole.enable_preemptive_scheduler => Off => Off
swoole.display_errors => On => On
swoole.use_shortname => On => On
swoole.unixsock_buffer_size => 8388608 => 8388608
```


5. What is your machine environment used (including version of kernel & php & gcc) ?
```
PHP 7.3.13 (cli) (built: Dec 19 2019 14:35:01) ( NTS )
Copyright (c) 1997-2018 The PHP Group
Zend Engine v3.3.13, Copyright (c) 1998-2018 Zend Technologies
    with Zend OPcache v7.3.13, Copyright (c) 1999-2018, by Zend Technologies
```


Please answer these questions before submitting your issue. Thanks!

1. What did you do? If possible, provide a simple script for reproducing the error.

我想要使用swoole_http2_client作为grpc的客户端来使用grpc的双向流通信`BidiStreaming`。

2. What did you expect to see?

recv能够在服务端write后响应。

3. What did you see instead?

现在服务端不end，则recv协程不会被切换。貌似是客户端没有等到fin，要将多个DATA frame自动合并为一个response?

4. What version of Swoole are you using (show your `php --ri swoole`)?

master分支刚编译的。

5. What is your machine environment used (including version of kernel & php & gcc) ?



Hi,
Is there currently a way to track when a coroutine switch occurs? Having this will allow for profiling and stats.
For example profiling code in coroutine context that contains methods that yield to another coroutine can not be done with simple code like:
```php
$start = microtime(true);
Co::readFile('bla.txt');
$end = microtime(true);
print $end - $start;
```
This does not take into account the time which the coroutine waits for the scheduler to give back control to it (even if the file reading is done there will be other coroutines).

I imagine something like:
```php
go(function() {
    onEnter(function($cid, $from_cid = NULL){
        //worker is now executing $cid
    });
    onYield( function($cid, $to_cid = NULL) {
        //worker has now left $cid
    });
});
```
And these can be invoked multiple times during coroutine execution. If possible a second argument can be provided for the previous or next coroutine that is beign executed.
## Problem

Swoole setting `upload_tmp_dir` allows to configure a directory containing uploaded files. Temporary filenames are generated randomly to protect from unauthorized access to files.
However, randomness of filenames prevents tests from comparing against fixture contents.
Tests become more complicated as they have to override random filenames with fixture path:
- [tests/swoole_http_server/upload_file_array_default.phpt](https://github.com/swoole/swoole-src/pull/2773/files#diff-fddc401c9b41a2a551d08a332faa1363R54)
- [tests/swoole_http_server/upload_file_array_parsed.phpt](https://github.com/swoole/swoole-src/pull/2773/files#diff-16e1a2ab23b28eecccf722a8b3def22fR55)

## Solution

Introduce configuration for custom filename generation function, for example:
```php
$server->set([
    'upload_tmp_func' => function ($path) {
        $name = strtr(base64_encode(random_bytes(6)), '+/', '-_');
        return "$path/swoole.upfile.$name";
    }
]);
```

Fixture upload filename in tests:
```php
$count = 0;
$server->set([
    'upload_tmp_func' => function () use (&$count) {
        return '/var/swoole.upfile.fixture' . ++$count;
    }
]);
```
Please answer these questions before submitting your issue. Thanks!

1. What did you do? If possible, provide a simple script for reproducing the error.
Support DTLS (example : connecting with hue entertainment)


2. What did you expect to see?
DTLS support


3. What did you see instead?
no support ?


4. What version of Swoole are you using (show your `php --ri swoole`)?
4.4.4


5. What is your machine environment used (including version of kernel & php & gcc) ?
WSL debian php 7.3

