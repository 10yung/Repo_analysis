AYVibrantButton does not update subviews (both overlays) after device rotation. Thus cached (and oudated) renderings of the overlays are used after changing frame.

One cannot switch quickly between UIButton and AYVibrantButton. Making .text attribute instead of setTitle method doesn't help, just breaks compatibility and adds work if you want switch between implementations.

Hello!  I implemented this library but it looks like certain fill versions of the button come out pixelated.  Any thoughts on why?

<img width="367" alt="screen shot 2016-05-08 at 5 38 47 pm" src="https://cloud.githubusercontent.com/assets/1269987/15100593/d8810cea-1543-11e6-8a31-2eba7c65eedf.png">
<img width="367" alt="screen shot 2016-05-08 at 5 39 05 pm" src="https://cloud.githubusercontent.com/assets/1269987/15100594/d884af1c-1543-11e6-9efd-70e915dc3e13.png">


- Added support to nib initialization for AYVibrantButton.
- Enabled pod support to iOS 6.1

Hi there,
Pretty self-explanatory. But when I try using the invert style for a button, it doesn't work in ios8. Any ideas? 
I tried removing the code for ios8 but unfortunately that also removes the title of the button itself.


Title suffices.

Is this possible? Maybe I'm not seeing it ;)...

AYVibrantButtons are gorgeous, but the non-standard button attributes are a huge drawback. Rather than an AYVibrantButton being a drop-in replacement for a UIButton, users must set the font, title, and title color properties in alternate ways. Worse, because of UIButton's default Auto Layout behavior, I end up having to set these attributes in BOTH the AYVibrantButton ways and the UIButton ways in order to get proper sizing behavior. I end up with code like this: 
![screen shot 2014-08-18 at 3 47 38 pm](https://cloud.githubusercontent.com/assets/398952/3959251/c07430e6-2729-11e4-9e3c-ccdd6d874c60.png)

It would be great if AYVibrantButton pulled these properties from the UIButton's standard implementation rather than providing its own, alternate properties.
