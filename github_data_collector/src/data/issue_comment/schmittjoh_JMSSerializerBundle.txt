Hi guys..

I'm trying to add some excluding groups and i can't make work this configuration.

I'm using symfony 5 and this is my config:
```yaml
#config/packages/jms_serializer.yaml
jms_serializer:
    visitors:
        xml_serialization:
            format_output: '%kernel.debug%'
        json_deserialization:
            options:
                - JSON_HEX_AMP
                - JSON_HEX_APOS
                - JSON_HEX_QUOT
                - JSON_HEX_TAG
    metadata:
        auto_detection: false
        directories:
            InnovatikLabs:
                namespace_prefix: "InnovatikLabs\\Shared\\Domain\\Model"
                path: "%kernel.project_dir%/src/Shared/Infrastructure/Serializer"
```

```yaml
#src/Shared/Infrastructure/Serializer/Address.yml
InnovatikLabs\Shared\Domain\Model\Address:
    exclusion_policy: ALL
    properties:
        id:
            expose: true
            groups: [detail]
        street:
            expose: true
            groups: [detail]
        postalCode:
            expose: true
            groups: [detail]
        phone:
            expose: true
            groups: [detail]
```

My Model is in `InnovatikLabs\Shared\Domain\Model\Address` and the mapping is made using xml.

When i execute a doctrine find in my controller i get an Address object and when i return a JsonResponse like this:

```php
$em = $this->getDoctrine()->getManager();
$address = $em->getRepository(Address::class)->find('298a2773-ab9f-4225-877d-1fe80acf60b5');

return JsonResponse::create(
    $serializer->serialize($address, 'json', SerializationContext::create()->setGroups(['detail']))
);
```

The response is empty.

I think i'm missing something or i guess the bundle is no reading my config in order to get the excluding groups from the yaml's.

**Note: If i use the method addMetadataDir like this:**
```php
$serializer = SerializerBuilder::create()
    ->addMetadataDir('/var/www/html/src/Shared/Infrastructure/Serializer')
    ->build();
```
And renaming the .yml containing the serialization groups, in order to include all the namespace like `InnovatikLabs.Shared.Domain.Model.Address.yml`, it works! but i need an automated way to declare all my config and serialization groups and only stay focus in serializa and deserialize objects.

Can anybody help me please xD

PHP 7.4 is out, via https://www.php.net/supported-versions.php
Hello,

We are stuck actually to use JMS Serializer, because we have metadatas yml files for same namespace placed in several directories.

Exemple:
`My/Name/Space/EntityA` is in `src/MyBundle1/Resources/config/serializer/My.Name.Space.EntityA.yml`
`My/Name/Space/EntityB` is in `src/MyBundle2/Resources/config/serializer/My.Name.Space.EntityB.yml`

Actually with $prefix => $path (see method addMetadataDirs), for a given namespace, we can only have one directory for one namespace.
As we cannot change namespaces for those classes, and only the class name differs, we are blocked to load metadatas from different directories.

It would be nace to be able to set directly the $class => $file for instance, as a workround.
Or a way to redefine location strategy.

Thanks.
Hello,

any help plz;
i need to deserialize entity by id . () ManyToone.
_Invalid data 1 (integer), expected_ 

any idea?
Our system:
**Symfony 4.3.5**

We are getting a fatal error, 
if we use the serializer but the route ends in authentication.

**Fatal Error: Unknown Annotation group**

if the requests hits a controller everything works fine.

Is there any possibility to load the annotations in any context?


I had to troubleshoot weird behavior where different environments with identically configured timezone yielded different results when deserializing dates. Explicitly setting default_timezone in the bundle configuration fixed the issue. According to the documentation this value is supposed to default to PHP's timezone: 

>default_timezone: "UTC" # defaults to whatever timezone set in php.ini or via date_default_timezone_set

It turns out that the configuration class calls date_default_timezone_get() to get a default value which is then injected into the DateHandler, meaning that the timezone defaults to the timezone of the environment where the container was built (in my case one of the build servers had a different timezone) rather than the actual runtime environment. 

This behavior should either be documented much more clearly or - if possible from a backwards compatibility standpoint - changed so that date_default_timezone_get() is called at runtime. 
Hi,

I haven't seen any annotation that does what I describe below unless I missed it. Is there a solution to it or should this be a feature request?

Thanks

**Payload**
```json
{
  "id": 1234,
  "properties": {
    "name": {
      "version": "v1",
      "value": "John"
    }
  }
}
```

**Model**
```php
class Payload
{
    /**
     * @Serializer\Type("string")
     */
    public $id;

    /**
     * @Serializer\Type("<properties.name.value>string") <--- Something like this
     */
    public $name;
}
```
I'm using the JMSSerializerBundle and have a problem. I register my serialization config as YAML with the following config:
```yaml
jms_serializer:
    metadata:
        auto_detection: false
        directories:
            DomainEntity:
                namespace_prefix: ~
                path: "@MyBundle/Resources/config/serializer"
```

As you can see, I have `auto_detection: false` and leave the `namespace_prefix` empty, because I want to register multiple namespaces that don't share a common prefix. This works great!

But now I installed a 3rd-party bundle that does this:
https://github.com/kunicmarko20/jms-messenger-adapter/blob/dd8c1b3282b3effc8f1287035e6ec82912b21402/src/Bridge/Symfony/DependencyInjection/JMSMessengerAdapterExtension.php#L44-L52

It also registers multiple namespaces: https://github.com/kunicmarko20/jms-messenger-adapter/tree/master/src/Resources/config/serializer

The problem is that the Serialization configuration from the `jms-messenger-adapter` gets overwritten by my declaration because we both use an empty prefix. The prefix is then transformed to an empty string key. 

When I look at the internals, I see that the directories array is generated and then passed to the FileLocator:
https://github.com/schmittjoh/JMSSerializerBundle/blob/9b8d64302770183b41c47d3c38c67aa9ae1c970b/DependencyInjection/JMSSerializerExtension.php#L126-L150

An easy fix could be to make the `$this->dirs` array multi dimensional:
https://github.com/schmittjoh/metadata/blob/d2ef520eb331e00bddd1b9306eecca9302c57f16/src/Driver/FileLocator.php#L24-L34

If a duplicate (or empty) prefix is registered, it will be appended to the array. 

@goetas Before I make a PR, I would like to know if you have objections against this and if it's the way to go. 
Hello,
I get below error when i am using jmssymfonybundle

`The directory "/app/applications/transportation/carrier-integration-platform/var/cache/prod/jms_serializer" is not writable. {"exception":"[object] (InvalidArgumentException(code: 0): The directory \"/app/applications/transportation/carrier-integration-platform/var/cache/prod/jms_serializer\" is not writable. at /app/applications/transportation/carrier-integration-platform/vendor/jms/metadata/src/Cache/FileCache.php:44)"}`

Can you please help me in solving this? I saw a similar issue resolved [https://github.com/schmittjoh/JMSSerializerBundle/issues/640](url) here with the code now throws an error for me
improve naming strategy handing by wrapping always custom naming strategies with the custom serialized name strategy 