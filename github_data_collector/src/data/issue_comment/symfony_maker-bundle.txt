Hi,

When i use the command "make:fixtures", it creates files with deprecated interfaces

See: https://github.com/symfony/maker-bundle/blob/master/src/Resources/skeleton/doctrine/Fixtures.tpl.php#L6

"Doctrine\Common\Persistence\ObjectManager" must me replaced by "Doctrine\Persistence\ObjectManager"

See this commit: https://github.com/doctrine/persistence/commit/132709c42a98472eadde6d5df4d0a2cc925f00ee

Cheers,

HanXHX
### System
- Ubuntu 18.04
- PHP 7.2.24
- Composer 1.6.3
- Symfony 4.12.3 

### The problem
I'm trying to install maker-bundle by running `composer require symfony/maker-bundle --dev`, however I get a package requirements error.

### The error message
```
Using version ^1.14 for symfony/maker-bundle
./composer.json has been updated
Loading composer repositories with package information
Updating dependencies (including require-dev)
Restricting packages listed in "symfony/symfony" to "5.0.*"
Your requirements could not be resolved to an installable set of packages.

  Problem 1
    - Conclusion: don't install symfony/maker-bundle v1.14.3
    - Conclusion: don't install symfony/maker-bundle v1.14.2
    - Conclusion: don't install symfony/maker-bundle v1.14.1
    - Conclusion: remove nikic/php-parser v3.1.5
    - Installation request for symfony/maker-bundle ^1.14 -> satisfiable by symfony/maker-bundle[v1.14.0, v1.14.1, v1.14.2, v1.14.3].
    - Conclusion: don't install nikic/php-parser v3.1.5
    - symfony/maker-bundle v1.14.0 requires nikic/php-parser ^4.0 -> satisfiable by nikic/php-parser[v4.0.0, v4.0.1, v4.0.2, v4.0.3, v4.0.4, v4.1.0, v4.1.1, v4.2.0, v4.2.1, v4.2.2, v4.2.3, v4.2.4, v4.2.5, v4.3.0].
    - Can only install one of: nikic/php-parser[v4.0.0, v3.1.5].
    - Can only install one of: nikic/php-parser[v4.0.1, v3.1.5].
    - Can only install one of: nikic/php-parser[v4.0.2, v3.1.5].
    - Can only install one of: nikic/php-parser[v4.0.3, v3.1.5].
    - Can only install one of: nikic/php-parser[v4.0.4, v3.1.5].
    - Can only install one of: nikic/php-parser[v4.1.0, v3.1.5].
    - Can only install one of: nikic/php-parser[v4.1.1, v3.1.5].
    - Can only install one of: nikic/php-parser[v4.2.0, v3.1.5].
    - Can only install one of: nikic/php-parser[v4.2.1, v3.1.5].
    - Can only install one of: nikic/php-parser[v4.2.2, v3.1.5].
    - Can only install one of: nikic/php-parser[v4.2.3, v3.1.5].
    - Can only install one of: nikic/php-parser[v4.2.4, v3.1.5].
    - Can only install one of: nikic/php-parser[v4.2.5, v3.1.5].
    - Can only install one of: nikic/php-parser[v4.3.0, v3.1.5].
    - Installation request for nikic/php-parser (locked at v3.1.5) -> satisfiable by nikic/php-parser[v3.1.5].
Installation failed, reverting ./composer.json to its original content. 
```

### Attempts to solve it

I have tried to install nikic/php-parser but it requires minime/annotations. 
I've installed minime/annotations but nikick/php-parser doesn't recognize it and still complains about minime/annotations being uninstalled.

I haven't found much useful info on the web.
I've always found annoying and frustrating that running `make:entity` the output is 

>  Next: When you're ready, create a migration with `make:migration `

instead of 

>  Next: When you're ready, create a migration with `php bin/console make:migration `

As ` make:migration` does

>  Then: Run the migration with `php bin/console doctrine:migrations:migrate`

Since doctrine itself recommends to use `Doctrine\Persistence\ManagerRegistry`, lets not use `Doctrine\Common\Persistence\ManagerRegistry`. This should be an easy merge as they seem to be signature compatible.
I state that I am relatively new to using Symfony and the MakerBundle.

I can't find a way to use the `make:entity` command to add properties without interactivity.
I will be used to working with the CLI, but I think it is much faster for the user if the possibility of using non-interactive commands is offered to do the same operations that are proposed interactively.

For example, now I am forced to do these operations:

```bash
php bin/console make:entity --no-interaction VictoriousKangaroo
# use awk command to insert first and last name proprieties
# in correct position with correct annotations
php bin/console make:entity --regenerate 'App\Entity\VictoriousKangaroo'
```

While it would be much more convenient not to have to disconnect from the terminal and be able to complete the creation of your Entities in a way similar to this:

```bash
php bin/console make:entity --no-interaction VictoriousKangaroo
php bin/console make:entity:propriety --no-interaction \
  --name name \
  --type string \
  --length 255 \
  --not-nullable \
  VictoriousKangaroo
php bin/console make:entity:propriety --no-interaction \
  --name age \
  --type integer \
  --nullable \
  VictoriousKangaroo
```

It seems to me that this mode is missing from the whole bundle.

Is it a feature already present in the roadmap, or would you be interested in inserting it?
This bundle makes lots of string manipulations. Originally we created some utils (e.g. https://github.com/symfony/maker-bundle/blob/master/src/Util/ClassNameDetails.php) and a `Str` utility class (https://github.com/symfony/maker-bundle/blob/master/src/Str.php).

The only problem for us is that `String` requires using PHP 7.2 (and this project requires *the legacy and unmaintained* PHP 7.0). Can we update the PHP requirement in the next stable version?

For more info:

* [New in Symfony 5.0: String Component](https://symfony.com/blog/new-in-symfony-5-0-string-component) blog post
* [String component docs](https://symfony.com/doc/current/components/string.html)
* [Migration to String component in Symfony Demo app](https://github.com/symfony/demo/pull/1055/files)

Check in authenticator will never pass, because `loadUserByUsername()` never return non-object variable.

Check in template:
https://github.com/symfony/maker-bundle/blob/09fc38cd48aa53fd1322e1f87f89fb29b37a693d/src/Resources/skeleton/authenticator/LoginFormAuthenticator.tpl.php#L68-L76

User provider interface:
https://github.com/symfony/symfony/blob/76c98fda989a812a5265d9d3c97f855430821e29/src/Symfony/Component/Security/Core/User/UserProviderInterface.php#L46

As alternative, we can drop this check for non-doctrine users. Or replace it with catch `UsernameNotFoundException` instead
This is linked to the issue #33 
PHPStorm warns about this situation:
![image](https://user-images.githubusercontent.com/22522883/70850182-c1db1480-1e87-11ea-9107-c762a034cad9.png)
Recently updated.

Best regards.
Hi,

just fixing a deprecation from doctrine`Doctrine\Common\Persistence` to `Doctrine\Persistence`