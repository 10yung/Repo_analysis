in parameters or return values
e.g. containing literal `"` characters.

Replace those with unrepresentable character placeholders.
(that issue and method signature compatibility issues won't be emitted if that is disabled in .phan/config.php)

```php
<?php
// False positive PhanPluginDuplicateSwitchCaseLooseEquality - both are loosely equivalent to 0 but not each other
switch ($x) {
case '00':
case 'aa':
}
```
```php
$x = ' ' . $unknown;  // should be non-empty-string
```
<!-- See https://github.com/phan/phan/wiki/Frequently-Asked-Questions for answers to common questions and bug reports. -->

Expected: Should not infer non-empty-array after conditions that could succeed with empty arrays (e.g. just emitting notices)
Observed: A PhanRedundantCondition is emitted for the below example

```php
<?php
function test_mixed(array $result) {
    if (!empty($result['field'])) {
        return;
    }
    // False positive PhanRedundantCondition Redundant attempt to cast $result of type array{field:null}|non-empty-array<mixed,mixed> to truthy
    if ($result) {
    }
}
// test_mixed([]);
```
Currently, phan infers that `null != $x` or `'' != $x` means that $x is truthy. This is the most important exception to that.

Include `'0'` and `[]` in the resulting type sets (etc.) according to the below table

https://www.php.net/manual/en/types.comparisons.php
Currently, it's emitted on the line of the class.