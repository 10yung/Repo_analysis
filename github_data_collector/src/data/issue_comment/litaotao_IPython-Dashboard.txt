Bumps [flask](https://github.com/pallets/flask) from 0.10.1 to 1.0.
<details>
<summary>Release notes</summary>

*Sourced from [flask's releases](https://github.com/pallets/flask/releases).*

> ## 1.0
> The Pallets team is pleased to release Flask 1.0. [Read the announcement on our blog.](https://www.palletsprojects.com/blog/flask-1-0-released/
> 
> There are over a year's worth of changes in this release. Many features have been improved or changed. [Read the changelog](http://flask.pocoo.org/docs/1.0/changelog/) to understand how your project's code will be affected.
> 
> 
> JSON Security Fix
> ------------------
> 
> Flask previously decoded incoming JSON bytes using the content type of the request. Although JSON should only be encoded as UTF-8, Flask was more lenient. However, Python includes non-text related encodings that could result in unexpected memory use by a request.
> 
> Flask will now detect the encoding of incoming JSON data as one of the supported UTF encodings, and will not allow arbitrary encodings from the request.
> 
> 
> Install or Upgrade
> -------------------
> 
> Install from [PyPI](https://pypi.org/project/Flask/) with pip:
> 
>     pip install -U Flask
> 
> ## 0.12.4
> This is a repackage of [0.12.3](https://github.com/pallets/flask/releases/0.12.3) to fix an issue with how the package was built.
> 
> 
> Upgrade
> --------
> 
> Upgrade from [PyPI](https://pypi.org/project/Flask/0.12.4/) with pip. Use a version identifier if you want to stay at 0.12:
> 
>     pip install -U 'Flask~=0.12.4'
> 
> ## 0.12.3
> This release includes an important security fix for JSON and a minor backport for CLI support in PyCharm. It is provided for projects that cannot update to Flask 1.0 immediately. See the [1.0 announcement](https://github.com/pallets/flask/blob/flask-1-0-released) and update to it instead if possible.
> 
> 
> JSON Security Fix
> ------------------
> 
> Flask previously decoded incoming JSON bytes using the content type of the request. Although JSON should only be encoded as UTF-8, Flask was more lenient. However, Python includes non-text related encodings that could result in unexpected memory use by a request.
> 
> Flask will now detect the encoding of incoming JSON data as one of the supported UTF encodings, and will not allow arbitrary encodings from the request.
> 
> 
> Upgrade
> --------
> 
> Upgrade from [PyPI](https://pypi.org/project/Flask/) with pip. Use a version identifier if you want to stay at 0.12:
> 
>     pip install -U 'Flask~=0.12.3'
></tr></table> ... (truncated)
</details>
<details>
<summary>Changelog</summary>

*Sourced from [flask's changelog](https://github.com/pallets/flask/blob/master/CHANGES.rst).*

> Version 1.0
> -----------
> 
> Released 2018-04-26
> 
> -   Python 2.6 and 3.3 are no longer supported.
> -   Bump minimum dependency versions to the latest stable versions:
>     Werkzeug >= 0.14, Jinja >= 2.10, itsdangerous >= 0.24, Click >= 5.1.
>     :issue:`2586`
> -   Skip :meth:`app.run <Flask.run>` when a Flask application is run
>     from the command line. This avoids some behavior that was confusing
>     to debug.
> -   Change the default for :data:`JSONIFY_PRETTYPRINT_REGULAR` to
>     ``False``. :func:`~json.jsonify` returns a compact format by
>     default, and an indented format in debug mode. :pr:`2193`
> -   :meth:`Flask.__init__ <Flask>` accepts the ``host_matching``
>     argument and sets it on :attr:`~Flask.url_map`. :issue:`1559`
> -   :meth:`Flask.__init__ <Flask>` accepts the ``static_host`` argument
>     and passes it as the ``host`` argument when defining the static
>     route. :issue:`1559`
> -   :func:`send_file` supports Unicode in ``attachment_filename``.
>     :pr:`2223`
> -   Pass ``_scheme`` argument from :func:`url_for` to
>     :meth:`~Flask.handle_url_build_error`. :pr:`2017`
> -   :meth:`~Flask.add_url_rule` accepts the
>     ``provide_automatic_options`` argument to disable adding the
>     ``OPTIONS`` method. :pr:`1489`
> -   :class:`~views.MethodView` subclasses inherit method handlers from
>     base classes. :pr:`1936`
> -   Errors caused while opening the session at the beginning of the
>     request are handled by the app's error handlers. :pr:`2254`
> -   Blueprints gained :attr:`~Blueprint.json_encoder` and
>     :attr:`~Blueprint.json_decoder` attributes to override the app's
>     encoder and decoder. :pr:`1898`
> -   :meth:`Flask.make_response` raises ``TypeError`` instead of
>     ``ValueError`` for bad response types. The error messages have been
>     improved to describe why the type is invalid. :pr:`2256`
> -   Add ``routes`` CLI command to output routes registered on the
>     application. :pr:`2259`
> -   Show warning when session cookie domain is a bare hostname or an IP
>     address, as these may not behave properly in some browsers, such as
>     Chrome. :pr:`2282`
> -   Allow IP address as exact session cookie domain. :pr:`2282`
> -   ``SESSION_COOKIE_DOMAIN`` is set if it is detected through
>     ``SERVER_NAME``. :pr:`2282`
> -   Auto-detect zero-argument app factory called ``create_app`` or
>     ``make_app`` from ``FLASK_APP``. :pr:`2297`
> -   Factory functions are not required to take a ``script_info``
>     parameter to work with the ``flask`` command. If they take a single
>     parameter or a parameter named ``script_info``, the
></tr></table> ... (truncated)
</details>
<details>
<summary>Commits</summary>

- [`291f3c3`](https://github.com/pallets/flask/commit/291f3c338c4d302dbde01ab9153a7817e5a780f5) Bump version number to 1.0
- [`36e68a4`](https://github.com/pallets/flask/commit/36e68a439a073e927b1801704fc7921be58262e1) release 1.0
- [`216151c`](https://github.com/pallets/flask/commit/216151c8a3c02e805fe5d1824708253f7e01e77f) Merge branch '0.12-maintenance'
- [`23047a7`](https://github.com/pallets/flask/commit/23047a71fd7da13be7b545f30807f38f4d9ecb25) Bump version number to 0.12.4.dev
- [`1a9e58e`](https://github.com/pallets/flask/commit/1a9e58e8c97c47c969736d46410f724f4e834f54) Bump version number to 0.12.3
- [`63deee0`](https://github.com/pallets/flask/commit/63deee0a8b0963f1657e2d327773d65632a387d3) release 0.12.3
- [`062745b`](https://github.com/pallets/flask/commit/062745b23f7abaafb144e3d94b6fbdf8ccc456b9) Merge pull request [#2720](https://github-redirect.dependabot.com/pallets/flask/issues/2720) from pallets/setup-link
- [`5c8110d`](https://github.com/pallets/flask/commit/5c8110de25f08bf20e9fda6611403dc5c59ec849) ensure order of project urls
- [`10a77a5`](https://github.com/pallets/flask/commit/10a77a54309876a6aba2e3303d291498c0a9318c) Add project_urls so that PyPI will show GitHub stats.
- [`22992a0`](https://github.com/pallets/flask/commit/22992a0d533f7f68e9fa1845c86dae230d8ff9ba) add donate link
- Additional commits viewable in [compare view](https://github.com/pallets/flask/compare/0.10.1...1.0)
</details>
<br />

[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=flask&package-manager=pip&previous-version=0.10.1&new-version=1.0)](https://help.github.com/articles/configuring-automated-security-fixes)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot ignore this [patch|minor|major] version` will close this PR and stop Dependabot creating any more for this minor/major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language
- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language
- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language
- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language

You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/litaotao/IPython-Dashboard/network/alerts).

</details>
Will this Dashboard support Google OAuth?
Does this dashboard have any updates that allow it to work with Python3 or SQLite?

We really like this layout and love what you have created.

Can we help move this to python 3 if its not now available or integrate SQLite functionality with it?
作为小白，给大神跪了666
For the issues mentioned [here](https://github.com/litaotao/IPython-Dashboard/issues/16), there's a relative path import issues
"并且现在我已经有了更方便快捷好用的，直接能在 ipython notebook 里画动态交互图的方案，所以其实我自己也已经弃用了这个项目了。"
hello, 请问更好的方案是什么？
rt，赞项目
According course vide from imooc, after installing some modules,key in: python run.py,It shows 
```
MacBook-Pro:IPython-Dashboard fuchuang$ python run.py 
Traceback (most recent call last):
  File "run.py", line 4, in <module>
    from dashboard import app
  File "/Users/fuchuang/Documents/GitHub/IPython-Dashboard/dashboard/__init__.py", line 14, in <module>
    from .conf import config
  File "/Users/fuchuang/Documents/GitHub/IPython-Dashboard/dashboard/conf/config.py", line 44, in <module>
    logger = config_log()
  File "/Users/fuchuang/Documents/GitHub/IPython-Dashboard/dashboard/conf/config.py", line 34, in config_log
    from ..server.utils import Map
  File "/Users/fuchuang/Documents/GitHub/IPython-Dashboard/dashboard/server/utils.py", line 11, in <module>
    import MySQLdb
  File "/usr/local/lib/python3.6/site-packages/MySQLdb/__init__.py", line 18, in <module>
    import _mysql
ImportError: dlopen(/usr/local/lib/python3.6/site-packages/_mysql.cpython-36m-darwin.so, 2): Library not loaded: @rpath/libmysqlclient.21.dylib
  Referenced from: /usr/local/lib/python3.6/site-packages/_mysql.cpython-36m-darwin.so
  Reason: image not found
```
While executing the below command with in the "IPython-Dashboard"working directory, getting an error 
saying mysql flavor is not supported. But from the documentation, I see that is the only supported flavor. Can you please tell me, what is the missing piece here?

For your information, I am using the following versions:

> Python 2.7.10
> mysql  Ver 14.14 Distrib 5.6.37, for Linux (x86_64) using  EditLine wrapper
> 

```
[root@ror IPython-Dashboard-master]# nosetests -s dashboard.tests.testCreateData:test_create_mysql_data

###start run fun:  test_create_mysql_data ...
/root/Ipython_Dashboard/IPython-Dashboard-master/dashboard/server/utils.py:135: Warning: Unknown table 'IPD_data.businesses'
  cursor.execute(sql)
E
======================================================================
ERROR: dashboard.tests.testCreateData.test_create_mysql_data
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/usr/local/lib/python2.7/site-packages/nose-1.3.7-py2.7.egg/nose/case.py", line 197, in runTest
    self.test(*self.arg)
  File "/root/Ipython_Dashboard/IPython-Dashboard-master/dashboard/server/utils.py", line 50, in wrapper
    result = func(*args, **kwargs)
  File "/root/Ipython_Dashboard/IPython-Dashboard-master/dashboard/tests/testCreateData.py", line 119, in test_create_mysql_data
    data.to_sql('businesses', conn.conn, if_exists='append', flavor='mysql', index=False)
  File "/usr/local/lib/python2.7/site-packages/pandas-0.22.0-py2.7-linux-x86_64.egg/pandas/core/generic.py", line 1534, in to_sql
    chunksize=chunksize, dtype=dtype)
  File "/usr/local/lib/python2.7/site-packages/pandas-0.22.0-py2.7-linux-x86_64.egg/pandas/io/sql.py", line 463, in to_sql
    pandas_sql = pandasSQL_builder(con, schema=schema, flavor=flavor)
  File "/usr/local/lib/python2.7/site-packages/pandas-0.22.0-py2.7-linux-x86_64.egg/pandas/io/sql.py", line 531, in pandasSQL_builder
    _validate_flavor_parameter(flavor)
  File "/usr/local/lib/python2.7/site-packages/pandas-0.22.0-py2.7-linux-x86_64.egg/pandas/io/sql.py", line 59, in _validate_flavor_parameter
    "supported".format(flavor=flavor))
ValueError: database flavor mysql is not supported

----------------------------------------------------------------------
Ran 1 test in 3.362s

FAILED (errors=1)

[root@ror IPython-Dashboard-master]# nosetests -s dashboard.tests.testCreateData:test_create_mysql_data

###start run fun:  test_create_mysql_data ...
/root/Ipython_Dashboard/IPython-Dashboard-master/dashboard/tests/testCreateData.py:78: Warning: Can't create database 'IPD_data'; database exists
  conn.cursor().execute('CREATE DATABASE IF NOT EXISTS {};'.format(config.sql_db))
E
======================================================================
ERROR: dashboard.tests.testCreateData.test_create_mysql_data
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/usr/local/lib/python2.7/site-packages/nose-1.3.7-py2.7.egg/nose/case.py", line 197, in runTest
    self.test(*self.arg)
  File "/root/Ipython_Dashboard/IPython-Dashboard-master/dashboard/server/utils.py", line 50, in wrapper
    result = func(*args, **kwargs)
  File "/root/Ipython_Dashboard/IPython-Dashboard-master/dashboard/tests/testCreateData.py", line 119, in test_create_mysql_data
    data.to_sql('businesses', conn.conn, if_exists='append', flavor='mysql', index=False)
  File "/usr/local/lib/python2.7/site-packages/pandas-0.22.0-py2.7-linux-x86_64.egg/pandas/core/generic.py", line 1534, in to_sql
    chunksize=chunksize, dtype=dtype)
  File "/usr/local/lib/python2.7/site-packages/pandas-0.22.0-py2.7-linux-x86_64.egg/pandas/io/sql.py", line 463, in to_sql
    pandas_sql = pandasSQL_builder(con, schema=schema, flavor=flavor)
  File "/usr/local/lib/python2.7/site-packages/pandas-0.22.0-py2.7-linux-x86_64.egg/pandas/io/sql.py", line 531, in pandasSQL_builder
    _validate_flavor_parameter(flavor)
  File "/usr/local/lib/python2.7/site-packages/pandas-0.22.0-py2.7-linux-x86_64.egg/pandas/io/sql.py", line 59, in _validate_flavor_parameter
    "supported".format(flavor=flavor))
ValueError: database flavor mysql is not supported

----------------------------------------------------------------------
Ran 1 test in 3.537s

FAILED (errors=1)
```
According course vide from imooc, key in: python run.py, ImportError: No modulle named flask.ext.restful.