這題用 vector 應該比 list 好?
將固定數目的單字 push_back 到 vector 後再對 vector sort 即可達成需求

If the multimap has same elem like that
```cpp
    std::multimap<string, string> authors{
        { "alan", "DMA" },
        { "pezy", "LeetCode" },
        { "alan", "CLRS" },
        { "wang", "FTP" },
        { "pezy", "CP5" },
        { "pezy", "CP5" },
        { "wang", "CPP-Concurrency" }
    };
```
It will just erase the first `{ "pezy", "CP5" },`
I think，After the assignment, the number of references to the object pointed by the left pointer is reduced by one, and the right pointer is increased by one
1)  int *const p2 = &i2 ; 
2)  const int *const p3 = &i2;
3)  const int *p1 = &i2;
these three "i2"  is  not  definition type . and as far as I am concerned , the "const pointer" or "pointer to const"  only can direction corresponding  type. so i think the  answer have some dispute
(b) should be invalid. The type of r2 is double,but r1's type is int.
(d) should be invalid. Same reason like (b)
In ex8_13, the function format() use substr() but not check the string length,this may throw
out of range error.
I think  we should add string length check in substr() function or  in valid() function.
And in valid() function , I think just check string first char is not correct enough. below is my 
improve. I check string length in valid() funciton
```
bool valid(const string& number)
{
    if(number.size() < 7)
        return false;
    for(const auto i : number)
        if(!isdigit(i))
            return false; 
    return true;
}
```

Add consideration of negative numbers and numbers greater than 100.

update readme