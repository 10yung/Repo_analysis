## Description of the issue

* Output of `pyinstaller --version`: ```[0117/164120.680:ERROR:icu_util.cc(133)] Invalid file descriptor to ICU data received.```
- Python version : 3.7
- pywebview version: 3.1
- platform / version: Windows 10 64Bit
* Did you also try this on another platform? No.
  
Try packaging this code using pyInstaller :
```python
import webview

webview.create_window('PyWebView', url='https://www.google.com')
webview.start(gui='cef')
```

I ran `pyinstaller -y  "R:/test.py"`.
Running the `.exe` file gives crashes with : 
`[0117/164120.680:ERROR:icu_util.cc(133)] Invalid file descriptor to ICU data received.`

Requirements : 
- `pip install pywebview`
<!--
Welcome to the PyInstaller issue tracker! Before creating an issue, please heed the following:

1. This tracker should only be used to report bugs and request features / enhancements to PyInstaller
    - For questions and general support, use the mailing list, see
	  <http://www.pyinstaller.org/support.html#mailing-list>
2. Use the search function before creating a new issue. Duplicates will be closed and directed to
   the original discussion.
-->

**Is your feature request related to a problem? Please describe.**

I have two virtual environments. One uses Tensorflow GPU, and another one Tensorflow CPU. I created an exe file for both the environments. The only difference in both the exe files is that "_pywrap_tensorflow_internal.pyd" file is different for both GPU & CPU version. So I either need to keep two exe for gpu & cpu or manually (or via code) copy/paste the gpu/cpu _pywrap_tensorflow_internal.pyd  into the exe folder. 


**Describe the solution you'd like**

Any way to load the GPU/CPU TensorFlow file using a command at runtime? Something like this:
"exename.exe --loadTensorFlowFilePath=abcPathHere". Just used Tensorflow example here, I guess, we can add this feature for all type of files.

**Describe alternatives you've considered**
A clear and concise description of any alternative solutions or features you've considered.

**Additional context**
Add any other context or screenshots about the feature request here.

the "are we bundled?" check code runs in pyinstaller, but not under the python interpreter.   Obviously, the code should run in both configurations.  When my code found this issue, I found someone on StackOverflow had a fix, adding the False default to the getattr function on line 12.  It makes sense to get this fix back into the documentation to prevent this in the future.
E.g. conda-forge builds of qt5 have QT_LIBINFIX set to '_conda', thus
generating library binaries called 'Qt5Core_conda.dll' for example on
Windows. Since lib_name is generated from the library's filename, it
won't be found in the '_qt_dynamic_dependencies_dict', leading to
missing hiddenimports, translations and plugins.

If lib_name was not found in the dependencies dictionary, this matches
the dependencies dictionary's keys as prefix to the lib_name, searching
longest keys first.
Tested on Windows 10 & macOS 10.14 with Python 3.7.5
fix https://github.com/pyinstaller/pyinstaller/issues/4155 & https://github.com/pyinstaller/pyinstaller/issues/3863
simple new hook for jaraco.txt to fix #4576 
On macOS, when building a simple QtWebEngine application ([example](https://github.com/qutebrowser/qutebrowser/blob/master/scripts/testbrowser/testbrowser_webengine.py)) with PyQt 5.14, QtWebEngineProcess crashes:

```
dyld: Library not loaded: @rpath/QtQmlModels.framework/Versions/5/QtQmlModels
  Referenced from: .../testbrowser_webengine.app/Contents/MacOS/PyQt5/Qt/lib/QtWebEngineCore.framework/Helpers/QtWebEngineProcess.app/Contents/MacOS/QtWebEngineProcess
  Reason: image not found
```

The QtQmlModels library was split off from QtQml in Qt 5.14.

Copying `lib/python3.7/site-packages/PyQt5/Qt/lib/QtQmlModels.framework` from a PyQt installation to `Contents/MacOS/PyQt5/Qt/lib/` in the .app seems to fix the issue. I've taken a look at the different Qt hooks, but couldn't find a way to specify additional libraries there.

This happens with both PyInstaller v3.6 and the development branch (4.0.dev0+g555c5e81), both on Python 3.7.

It only seems to happen on macOS, Windows works fine.
<!--
Welcome to the PyInstaller issue tracker! Before creating an issue, please heed the following:

1. This tracker should only be used to report bugs and request features / enhancements to PyInstaller
    - For questions and general support, use the mailing list, see
	  <http://www.pyinstaller.org/support.html#mailing-list>
2. Use the search function before creating a new issue. Duplicates will be closed and directed to
   the original discussion.
3. When making a bug report, make sure you provide all required information. The easier it is for
   maintainers to reproduce, the faster it'll be fixed.
-->

+++ ONLY TEXT +++ DO NOT POST IMAGES +++

## Description of the issue

Apple now requires all apps to get signed by their notary service before they can get run in macOS Catalina. The notary service ensures that every binary in the app has security features enabled, including that they're codesigned and that they have the Hardened Runtime capability enabled. As of January 2020, Apple's notary service won't sign any apps that don't have Hardened Runtime: https://developer.apple.com/news/?id=09032019a

I can successfully build an app bundle with PyInstaller that executes without codesigning it. I can also codesign it (but without enabled Hardened Runtime), and the app runs fine:

```
codesign --deep -s $DEVELOPER_ID_APPLICATION MyApp.app
```

But when I codesign and enable hardened runtime, the app crashes.

```
codesign --deep -s $DEVELOPER_ID_APPLICATION -o runtime MyApp.app
```

This is what happens when I try running the hardened runtime version of the app:

```
Traceback (most recent call last):
  File "site-packages/PyInstaller/loader/pyiboot01_bootstrap.py", line 129, in <module>
  File "<frozen importlib._bootstrap>", line 983, in _find_and_load
  File "<frozen importlib._bootstrap>", line 967, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 677, in _load_unlocked
  File "/Users/user/.local/share/virtualenvs/flock-agent-U4EBHnB6/lib/python3.7/site-packages/PyInstaller/loader/pyimod03_importers.py", line 623, in exec_module
    exec(bytecode, module.__dict__)
  File "ctypes/__init__.py", line 551, in <module>
  File "ctypes/__init__.py", line 273, in _reset_cache
MemoryError
[6159] Failed to execute script pyiboot01_bootstrap
```

After doing some searching, it appears that this project had the exact same issue, and choose to not use hardened runtime: https://github.com/metabrainz/picard/pull/1340#issuecomment-548284432

However, Mac binaries built after January 2020 now require this if they're going to run in macOS Catalina, so not using hardened runtime isn't an option.

## Context information (for bug reports)

* Output of `pyinstaller --version`: 3.6
* Version of Python: 3.7.6
* Platform: macOS 10.14.6 (Mojave)
* Did you also try this on another platform? Does it work there? N/A

### Stacktrace / full error message

As shown above:

```
Traceback (most recent call last):
  File "site-packages/PyInstaller/loader/pyiboot01_bootstrap.py", line 129, in <module>
  File "<frozen importlib._bootstrap>", line 983, in _find_and_load
  File "<frozen importlib._bootstrap>", line 967, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 677, in _load_unlocked
  File "/Users/user/.local/share/virtualenvs/flock-agent-U4EBHnB6/lib/python3.7/site-packages/PyInstaller/loader/pyimod03_importers.py", line 623, in exec_module
    exec(bytecode, module.__dict__)
  File "ctypes/__init__.py", line 551, in <module>
  File "ctypes/__init__.py", line 273, in _reset_cache
MemoryError
[6159] Failed to execute script pyiboot01_bootstrap
```

Please also see <https://github.com/pyinstaller/pyinstaller/wiki/How-to-Report-Bugs>
for more about what would use to solve the issue.

PyInstaller 3.6 has broken onefile compatibility with WINE.

onefile applications built with pyinstaller 3.6 results in applications that run fine under windows, but trying to run the application in WINE reports a "interanl error cannot create temporary directory" error. By the looks of it a temp directory is created but the directory has no write access:

d--------- 2 nikita nikita 4096 Jan 14 00:39 _MEI82

building the same application with pyinstaller 3.5 and it works without issue

# Description of the issue
When running a frozen PyQt5 app, the window will appear completely blank if `NSRequiresAquaSystemAppearance` was set to `false` in the app's `Info.plist`.

# Context Information
Output of pyinstaller --version: `4.0.dev0+g3d331fda`
Version of Python: 3.7.6
Platform: macOS Catalina 10.15.1

# Code to demo the problem

```python3
#!/usr/bin/env python3

import sys
from PyQt5.QtWidgets import *


class MainApp(QApplication):
    def __init__(self, argv):
        super().__init__(argv)

        widget = QPushButton('test')

        window = QMainWindow()
        window.setCentralWidget(widget)

        window.show()

        self.window = window


app = MainApp(sys.argv)
app.exec_()
```

Running from source works just fine.

But after freezing into an app bundle with `pyinstaller --onedir --windowed --noupx --noconfirm --log-level DEBUG ./main.py` and editing `NSRequiresAquaSystemAppearance` to `false` in Info.plist, the window appears without its widgets.

If the frozen app bundle is run from the command line, the blank app window will pop up and the terminal will will display the following error message:

```log
2020-01-12 08:28:55.515 main[15055:252052] It does not make sense to draw an image when [NSGraphicsContext currentContext] is nil.  This is a programming error. Break on void _NSWarnForDrawingImageWithNoCurrentContext(void) to debug.  This will be logged only once.  This may break in the future.
```

Contents of `pyinstaller.log`

```
36 INFO: PyInstaller: 4.0.dev0+g3d331fda
36 INFO: Python: 3.7.6
39 INFO: Platform: Darwin-19.0.0-x86_64-i386-64bit
40 INFO: wrote /Users/bucko/Projects/testapp/main.spec
40 DEBUG: Testing for UPX ...
42 INFO: UPX is available.
43 DEBUG: script: /Users/bucko/Projects/testapp/main.py
44 INFO: Extending PYTHONPATH with paths
['/Users/bucko/Projects/testapp', '/Users/bucko/Projects/testapp']
44 INFO: checking Analysis
49 INFO: checking PYZ
51 INFO: checking PKG
51 INFO: Bootloader /usr/local/lib/python3.7/site-packages/PyInstaller/bootloader/Darwin-64bit/runw
51 INFO: checking EXE
52 INFO: checking COLLECT
52 INFO: Removing dir /Users/bucko/Projects/testapp/dist/main
59 INFO: Building COLLECT COLLECT-00.toc
897 INFO: Building COLLECT COLLECT-00.toc completed successfully.
900 INFO: checking BUNDLE
901 INFO: Removing dir /Users/bucko/Projects/testapp/dist/main.app
909 INFO: Building BUNDLE BUNDLE-00.toc
1811 INFO: moving BUNDLE data files to Resource directory
On your own risk, you can use the option `--noconfirm` to get rid of this question.
On your own risk, you can use the option `--noconfirm` to get rid of this question.
```