Hi,

I am getting an error while installing the package RNeo4j. It pops up that there are other build tools need to be installed. But all the tolls mentioned in the url are installed in my MAC.

Downloading GitHub repo nicolewhite/Rneo4j@master
'/usr/bin/git' clone --depth 1 --no-hardlinks --recurse-submodules https://github.com/neo-technology/neokit.git /var/folders/72/d89g6kdj7sd48kl2wy_dp9600000gp/T//RtmpaLNr8L/remotesca06fdb8ba6/nicolewhite-RNeo4j-eea1ac1/neokit
Cloning into '/var/folders/72/d89g6kdj7sd48kl2wy_dp9600000gp/T//RtmpaLNr8L/remotesca06fdb8ba6/nicolewhite-RNeo4j-eea1ac1/neokit'...
Error: Could not find tools necessary to compile a package

Could you please let me know if I missed any steps ?

Thanks!
In RStudio, I got the error below when connecting R with Neo4j vis HTTPS protocol

> graph = startGraph("https://xx.xxx.xxx.xx:7473/db/data/", username = "xxx", password = "xxx")
Error in curl::curl_fetch_memory(url, handle = handle) :
  schannel: next InitializeSecurityContext failed: SEC_E_UNTRUSTED_ROOT (0x80090325) - The certificate chain was issued by an authority that is not trusted.

Same issue was raised back in 2015 (https://github.com/nicolewhite/RNeo4j/issues/21) and it seems like Nicole addressed it by specifying:  ssl_verifypeer = 0. Basically, Nicole set an option that skips verifying the SSL certificate.

I am wondering if same issue as in 2015 surfaced again or I missed anything?

Thanks
It's great that you can filter the list, but unfortunately you can only filter by complete strings.

Changing the getLabeledNodes code to accept "starts with", "ends with", "contains" would improve usability.

Currently you can do the following
```
getLabeledNodes(graph, "LabelName", attribute = "searchvalue")
```

to improve functionality this could be altered to accept up to 5 parameters, still ensuring only one attribute is filtered on.

```
getLabeledNodes(graph, "LabelName", attribute, "starts with", "sear")
getLabeledNodes(graph, "LabelName", attribute, "ends with", "alue")
getLabeledNodes(graph, "LabelName", attribute, "contains", "chva")
```

a) Functionality: Ask for  user:password 
b) Encode user:password
c) READ ONLY option, blocking creation and updates. 

If for some reason the R script will be shared with other users, would be nice to have an encoded string to provide the authentication and READ ONLY/READ WRITE access to the DB. (Access Key)

The graph connection object could transport the the read/write property to the other functions.

b)
Even it could be very easy to decode the Base64 encoding, for most regular users  those characters won't make any specific sense.

Is it possible to add a functionality equivalent to the one provided by popoto.js, following the API authentication protocol ?
`
popoto.rest.AUTHORIZATION = "Basic dHdlZXQ6cGFzc3dvcmQ=";
`

"Basic " is a prefix.
dHdlZXQ6c**GFzc3dvcmQ=** equivalent to tweet:password
**GFzc3dvcmQ=** dHdlZXQ6c equivalent to \ݝܜ٠ ڙ]

> 5. HTTP API

5.2.1.2. Authenticate to access the server
Authenticate by sending a username and a password to Neo4j using HTTP Basic Auth. Requests should include an Authorization header, with a value of Basic <payload>, where "payload" is a base64 encoded string of "username:password".

instead of:

`
 graph = startGraph("http://localhost:7474/db/data/",
                    username = "neo4j",
                    password = "password")
`

createRel
createRel(alice, "KNOWS", charles, props)

Would be nice to have:
createRel(alice, "KNOWS", charles, props, **duplicates = TRUE** )
or
getOrCreateRel = createRel(alice, "KNOWS", charles, props, **duplicates = FALSE** )

createRel(
In this case **duplicates** with default value **TRUE**, to not modify the actual functionality in previous implementations. 

the code:

before the link creation, is it possible to check if the link exists if duplicates is FALSE.

query = paste0("MATCH (a),(b) WHERE ID(a)={a} AND ID(b)={b} CREATE (a)-[r:`", .relType, "` {props}]->(b) RETURN r")

Country->Region
createRel(lknGcCt_n, 'IS_IN',lknGcS_n)

if the script runs several times creates the same relationship multiple times.

![image](https://user-images.githubusercontent.com/22514626/39511639-6945b052-4dee-11e8-9883-5f2964c55b56.png)


At the moment it is possible to use:

if ( is.null( outgoingRels(lknGcCt_n,'IS_IN') ) ) 

The relationship is One to One, in cases One to many it is not possible.

At the moment I'm using something like:

num_rels <- getRels(graph,"MATCH (:Geo_Code {code:{from_code}})-[r:IS_IN]->(:Geo_Code {code:{to_code}}) RETURN r", from_code = lknGcCt_n$code, to_code = lknGcS_n$code)
				if ( length(num_rels) == 0 ) {
createRel(lknGcCt_n, 'IS_IN',lknGcS_n)


**getOrCreateNode**

lknU_n <- getOrCreateNode(graph,"Contact" ...

Is it possible to have a flag to know if the node was retrieved or created?

I would like to trigger different actions: 

- after-create
- on-exists 

Scenario:
Merging several file transmissions from different countries using the same db.schema with different or same data included.

Code interpretation:
getOrCreateNode = createNode ( using constraints )  + getNode

node = try(createNode(graph, .label, ...), TRUE)
 _constraint validation _  
  if("try-error" %in% class(node)) {
    node = getUniqueNode(graph, .label, props[1])
  }
  
  return(node)


Following one of your examples I tried to create a retweet with two labels, due the retweet is a copy of a tweet I want to have it in two different "categories".
https://nicolewhite.github.io/2014/05/30/demo-of-rneo4j-part1.html

I tested manually the use of multiple labels following:
https://neo4j.com/developer/kb/how-do-i-report-on-nodes-with-multiple-labels/

Then I tried to replicate the same functionality in R.

createNode has the possibility to create multiple labels:
createNode(theGraph,c("Tweet","ReTweet"), ...)


Is it valid getOrCreateNode(theGraph,c("Tweet","ReTweet"), ...)  
and
getUniqueNode(graph, c("Tweet","ReTweet"), name = "Alice") ?

Maybe "I'm confused!" and I have to use two different statements for each label to create the nodes, but which would be the best option to retrieve unique nodes with multiple labels?

In the code I have something like:

      addConstraint(twGraph, "Tweet", "id")
      addConstraint(twGraph, "ReTweet", "id")

      getOrCreateNode(theGraph,c("Tweet","ReTweet"), ...) 

I checked the code on getOrCreate and calls 

      node = try(createNode(graph, .label, ...), TRUE)

createNode has the possibility to create multiple labels:
      
      createNode.graph = function(graph, .label = character(), ...) {
        query = "CREATE (n"
          **if(length(.label) > 0) {
          for(i in 1:length(.label)) {
            query = paste0(query, ":", .label[i])
          }**
        }

but the call failed in getOrCreateNode:

      getOrCreateNode.graph = function(graph, .label, ...) {
        **if(!(names(props)[[1]] %in% getConstraint(graph, .label)$property_keys)) {
          stop("The first key = value pair listed in ... must be uniquely constrained for the given node label.")
        }**

"I'm confused!"
I am trying to install the package from the terminal as root using the devtools and I am getting this error below. Could you please let me know how to fix it. I have already googled and tried the suggestions but still is not working. I know it must be about the gcc lib version but I can not fix it! Thanks!

** building package indices
** testing if installed package can be loaded
Error: package or namespace load failed for ‘RNeo4j’ in dyn.load(file, DLLpath = DLLpath, ...):
 unable to load shared object '/home/master/R/x86_64-redhat-linux-gnu-library/3.4/RNeo4j/libs/RNeo4j.so':
  /lib64/libc.so.6: version `GLIBC_2.18' not found (required by /home/master/R/x86_64-redhat-linux-gnu-library/3.4/RNeo4j/libs/RNeo4j.so)
Error: loading failed
Execution halted
ERROR: loading failed
* removing ‘/home/master/R/x86_64-redhat-linux-gnu-library/3.4/RNeo4j’
Installation failed: Command failed (1)
Warning message:
GitHub repo contains submodules, may not function as expected!



* Some minor fixes that should make the package ready for CRAN again
* main potential issue is if there is still any fallout left from the rust test compilation in #69 
This is from CRAN:
```
Package ‘RNeo4j’ was removed from the CRAN repository.

Formerly available versions can be obtained from the archive.

Archived on 2018-02-10 as check problems were not corrected in time.
```

Is RNeo4j abandonware? 

