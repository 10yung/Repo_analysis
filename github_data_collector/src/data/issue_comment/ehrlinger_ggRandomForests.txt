Hi John,

When trying to produce variable interaction plots with plot.gg_interaction() I cannot get the order of the faceting to match the minimal depth rank order, with the set I am interested in being produced in alphabetical order instead.

I looked at several other plot methods for the package and found that 'variable' is often set to a factor after a gather step.  I tested if this could fix the issue by adding 
`gg_dta$variable <- factor(gg_dta$variable, levels=unique(gg_dta$variable))`
after line 143, which worked.

This doesn't exclude the (high) possibility that I am simply doing something wrong, but I thought I would send through the code. Thanks for the great package!
Hi,
Just a quick question.
What pct stand for in calc_roc.rfsrc?
When using gg_survival with the by= parameter and then plotting using plot.gg_survival the colors and the legends are not correct assigned to the groups.
To be precise, the error seams to be in kaplan.R, line 72ff.
Hi,
The Survival vignette is really looking good with lots of great plots, but I'm having problems reproducing many of the examples.
For example, in the begging you mention that you prefer "years" to "days" in the pbc data set. Yet there is no code how you convert it.
Doing a naive
pbc$years <- pbc$days/365
I fail in the next part using the gg_survival function example.
Next, there is no code for the very nice EDA plots in the vignette.
I also could not get the 3D example in Appendix 1 to work.
This line
partial_time <- do.call(rbind,lapply(partial_pbc_time, gg_partial))
always produces errors.
I always get errors when there is a theme() part in plot.
There were some updates to randomForestSRC and ggplot recently that may
cause a lot of these problems.

I don't have a good minimal working example or anything, but I'm going to try my best to describe what's going on.

After calling gg_survival with either type "kaplan" or type "nelson" and supplying a factor for 'by', survfit with strata on 'by' is called. The default is na.group = FALSE, so it stratifies only on the other levels of the factor.

A little further down in the code, we have this bit:

```
  if(!is.null(by)){
    tm_splits <- which(c(FALSE,sapply(2:nrow(tbl), function(ind){tbl$time[ind] < tbl$time[ind - 1]})))

    lbls <- unique(data[,by])
    tbl$groups <- lbls[1]

    for(ind in 2:(length(tm_splits) + 1)){
      tbl$groups[tm_splits[ind - 1]:nrow(tbl)] <- lbls[ind]
    }
  }
```

Unique also returns 'NA' as an option, but NA was not included as a stratum level, so if you have a situation where NA occurs before at least one of your levels, it will take its place and you'll drop a factor level you potentially cared about.

I solved it myself by editing in na.group = TRUE to the call to strata in the kaplan and nelson functions because I wanted that information anyway, but I guess this might be something encountered by others as well!

Right now it only does a single class, but overlaying multiple classes on each ROC curve is possible
An alternative of multiple panels.

The `package` and the `vignette` codes are working perfectly except `st.labs` involved codes.

> plot(gg_md, lbls=st.labs)
> Error in plot.gg_minimal_depth(gg_md, lbls = st.labs) : 
>   object 'st.labs' not found

Convert S3method functions to use `UseNext` instead of `UseMethod` method dispatch.

This should fix issues with arguments, and prepare the way for extending to random forest packages beyond `randomForestSRC` #3.

Should also tighten up the whole OO design so that functions that look like S3methods really are S3methods.

v1.1.4 release indicates I need to refactor function names to remove dot separators because of clashes with S3method names. 

Example functions:
`combine.gg_partial` does not really extend `combine.default` #20
`plot.gg_minimal_vimp` should be an argument based alternative to `plot.gg_minimal_depth` #21

`plot.gg_minimal_vimp` should be an argument based alternative to `plot.gg_minimal_depth`, thereby avoiding S3method namings when not applicable.
