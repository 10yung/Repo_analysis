I tried to use ggemmeans on a [mira object](https://stefvanbuuren.name/fimd/workflow.html) from the [mice package](https://cran.r-project.org/web/packages/mice/index.html).

According to [this documentation](https://strengejacke.github.io/ggeffects/reference/ggpredict.html) of the ggeffects package "all models supported by emmeans should work". However, in my particular case it did not.

`library(ggeffects)`
`library(emmeans)`
`library(mice)`
`library(carData)`
`library(tidyverse)`

Here I am fitting a logistic regression model and use the emmenas package to calculate predicted marginal means.

`fit <- glm(volunteer ~ sex + extraversion, data = Cowles, family = binomial)`
`pmm_cow <- emmeans(fit, "sex")`

Output

`# Predicted values of volunteer`
`# x = sex`

`x      | Predicted |   SE |       95% CI`
`----------------------------------------`
`female |      0.46 | 0.07 | [0.42, 0.49]`
`male   |      0.40 | 0.08 | [0.36, 0.43]`

`Adjusted for:`
`* extraversion = 13.00`

Now I introduce missing values in the Cowles data...

`Cowles_NA <- Cowles`
`set.seed(42)`

`Cowles_NA[,-4] <- do.call(cbind.data.frame,`
                         ` lapply(Cowles_NA[,-4], function(x) {`
                            `n <- nrow(Cowles_NA)`
                            `x[sample(c(1:n),floor(n/10))]<-NA`
                            `x`
                        `  })`
`)`

... impute the missing values and fit the same regression model with the multiply imputed datasets.

`fit_mi <- Cowles_NA %>%`
  `mice(seed = 123, m = 2, print = FALSE) %>%`
  `with(glm(volunteer ~ sex + extraversion, family = binomial))`

Here emmeans still works...

`emmeans(fit_mi, "sex")`

Output

`sex    emmean     SE  df asymp.LCL asymp.UCL`
` female -0.216 0.0744 Inf    -0.362   -0.0706`
`male   -0.467 0.0824 Inf    -0.629   -0.3058`

`Results are given on the logit (not the response) scale. `
`Confidence level used: 0.95 `

...but ggemmeans does not.

`ggemmeans(fit_mi, "sex")`

Output

`Error in f$conditional[[2L]] : subscript out of bounds`
`In addition: Warning messages:`
`1: Could not access model information. `
`2: In faminfo$is_brms_trial <- is_brms_trial(model) :`
`  Coercing LHS to a list`
`3: Could not get model data.` 
`4: Could not access model information. `
`5: In faminfo$is_brms_trial <- is_brms_trial(model) :`
 ` Coercing LHS to a list`

Am I doing something wrong or is it possible that it does not work because the support of the object.class mira was implemented only recently in [CRAN version (1.3.3) of emmeans](https://github.com/rvlenth/emmeans/issues/80).

This is my my first time opening an issue on github, I hope I did it the correct way.
Thanks for the great package! 
**Describe the solution you'd like**
Currently, some of the functions in **rms** package works. However, the orm() does not seem to work.

Example code, based on CRAN version of package:

```
library(rms)
library(tidyverse)
library(ggeffects)

#example data
x = tibble(
  y = rnorm(100)>0,
  x = rnorm(100)
)

orm(y ~ x, data = x) %>% ggeffect()
orm(y ~ x, data = x) %>% ggemmeans()
orm(y ~ x, data = x) %>% ggpredict()
```

Produces:

```
> orm(y ~ x, data = x) %>% ggeffect(terms = "x")
Error in linv(tmp$predicted) : could not find function "linv"
In addition: Warning messages:
1: Could not access model information. 
2: In faminfo$is_brms_trial <- is_brms_trial(model) :
  Coercing LHS to a list
> orm(y ~ x, data = x) %>% ggemmeans(terms = "x")
Error: Variables of type 'logical' do not work, please coerce to factor and fit the model again.
In addition: Warning messages:
1: Could not access model information. 
2: In faminfo$is_brms_trial <- is_brms_trial(model) :
  Coercing LHS to a list
3: Could not access model information. 
4: In faminfo$is_brms_trial <- is_brms_trial(model) :
  Coercing LHS to a list
> orm(y ~ x, data = x) %>% ggpredict(terms = "x")
Error: Variables of type 'logical' do not work, please coerce to factor and fit the model again.
In addition: Warning messages:
1: Could not access model information. 
2: In faminfo$is_brms_trial <- is_brms_trial(model) :
  Coercing LHS to a list
3: Could not access model information. 
4: In faminfo$is_brms_trial <- is_brms_trial(model) :
  Coercing LHS to a list
```

For the alternative logistic function in **rms**, one of the methods work but not the other two. Probably a related issue.

```
> lrm(y ~ x, data = x) %>% ggeffect(terms = "x")

# Predicted probabilities of y
# x = x

    x | Predicted |   SE |       95% CI
---------------------------------------
-3.00 |      0.54 | 0.65 | [0.24, 0.81]
-2.50 |      0.54 | 0.56 | [0.28, 0.78]
-1.50 |      0.54 | 0.37 | [0.36, 0.71]
-1.00 |      0.54 | 0.29 | [0.40, 0.68]
-0.50 |      0.54 | 0.23 | [0.43, 0.65]
 0.00 |      0.54 | 0.20 | [0.44, 0.64]
 0.50 |      0.54 | 0.22 | [0.43, 0.65]
 2.00 |      0.54 | 0.46 | [0.32, 0.74]

Standard errors are on link-scale (untransformed).
> lrm(y ~ x, data = x) %>% ggemmeans(terms = "x")
Error: Variables of type 'logical' do not work, please coerce to factor and fit the model again.
> lrm(y ~ x, data = x) %>% ggpredict(terms = "x")
Error: Variables of type 'logical' do not work, please coerce to factor and fit the model again.
```
(supplying the `terms` argument does not fix error 2 above)
Hellow,
**Describe the bug**
I have fitted a mixed zero-inflated model with binomial error structure using the package glmmTMB.
The call from the model is found below:
``` r
zib <- glmmTMB(formula = Ps ~ log10(aridity) + weed_control + seededrateL + 
    log10(tsr) * lifeform2 + (1 | projectid/siteid/treatmentid) + 
    (1 | speciesid), data = dc, family = binomial(link = "logit"), 
    ziformula = ~seededrateL, weights = n, dispformula = ~1)

# model summary
summary(zib)
 Family: binomial  ( logit )
Formula:          Ps ~ log10(aridity) + weed_control + seededrateL + log10(tsr) *  
    lifeform2 + (1 | projectid/siteid/treatmentid) + (1 | speciesid)
Zero inflation:      ~seededrateL
Data: dc
Weights: n

     AIC      BIC   logLik deviance df.resid 
 90020.4  90163.9 -44993.2  89986.4    34168 

Random effects:

Conditional model:
 Groups                         Name        Variance Std.Dev.
 treatmentid:(siteid:projectid) (Intercept) 0.6294   0.7933  
 siteid:projectid               (Intercept) 0.6413   0.8008  
 projectid                      (Intercept) 3.1518   1.7753  
 speciesid                      (Intercept) 4.2196   2.0542  
Number of obs: 34185, groups:  
treatmentid:(siteid:projectid), 1259; siteid:projectid, 151; projectid, 81; speciesid, 555

Conditional model:
                               Estimate Std. Error z value Pr(>|z|)    
(Intercept)                     1.37283    0.64545    2.13 0.033426 *  
log10(aridity)                  1.81698    0.82813    2.19 0.028229 *  
weed_controlyes                 0.41462    0.16133    2.57 0.010172 *  
seededrateL                     0.71811    0.01496   48.01  < 2e-16 ***
log10(tsr)                     -2.67908    0.09636  -27.80  < 2e-16 ***
lifeform2per. forb             -3.70573    0.37697   -9.83  < 2e-16 ***
lifeform2per. grass            -2.55808    0.41014   -6.24 4.46e-10 ***
lifeform2woody                 -1.62246    0.43384   -3.74 0.000184 ***
log10(tsr):lifeform2per. forb   2.03250    0.10458   19.43  < 2e-16 ***
log10(tsr):lifeform2per. grass  1.58765    0.10940   14.51  < 2e-16 ***
log10(tsr):lifeform2woody       1.07520    0.10621   10.12  < 2e-16 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Zero-inflation model:
            Estimate Std. Error z value Pr(>|z|)    
(Intercept) -1.03023    0.07819 -13.177   <2e-16 ***
seededrateL -0.02604    0.01460  -1.784   0.0745 .  
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
```

The model seems ok with no convergence problems. But when trying to generate predictions using ggpredict, I got the Error message below:

``` r
pred  <- ggeffects::ggpredict(model = zib, 
                              terms = c("tsr", 
                                        "lifeform2"))

Error in eval(substitute(expr), data, enclos = parent.frame()) : 
  Some variables in newdata needed for predictions contain NAs or NaNs.
           This is currently incompatible with se.fit=TRUE.
In addition: Warning messages:
1: In eval(predvars, data, env) : NaNs produced
2: In eval(predvars, data, env) : NaNs produced
```

Any idea why this is happening? 

**To Reproduce**
Sorrry but the dataset is huge and not public yet (I could send data and code by email it helps).

Many thanks!
**Screenshots**


I am trying to use the ggeffects to find marginal effects of a plm model and I am getting a strange error that makes me think plm changed the way they format their output or I do not understand how I am supposed to be using the package. 

I estimate a plm model
```
> plm_pooling_red <- plm::pldv(reduced_formula, data = panel_data_unbalanced, model = "pooling", lower = 0, upper = 1, sample = "trunc")
```
Which generates resul
```
> summary(plm_pooling_red)
--------------------------------------------
Maximum Likelihood estimation
Newton-Raphson maximisation, 150 iterations
Return code 4: Iteration limit exceeded.
Log-Likelihood: -3571.149 
11  free parameters
Estimates:
                Estimate Std. error t value Pr(> t)
(Intercept)   -8131.3359 10575.1298  -0.769   0.442
Annual_Precip     4.4915     6.0199   0.746   0.456
Winter_Precip    -8.1900    11.0134  -0.744   0.457
maxPrecip        13.7120    17.9146   0.765   0.444
P_Ran           166.7599   216.5252   0.770   0.441
Summer_Precip     0.8391     2.7882   0.301   0.763
P_Wet           218.8668   284.5270   0.769   0.442
A_CV_Ran         -0.4440     0.5954  -0.746   0.456
P_Ag             12.0002    16.6592   0.720   0.471
mi_to_county    -44.0988    57.2715  -0.770   0.441
sd.nu          6712.3989  8714.9670   0.770   0.441
--------------------------------------------
```
Then I attempt to extract marginal effects
```
> ggeffects::ggeffect(plm_pooling_red, terms = c("P_Ag", "mi_to_county"))
`P_Ag` was not found in model terms. Maybe misspelled?
`mi_to_county` was not found in model terms. Maybe misspelled?
Can't compute marginal effects, 'effects::Effect()' returned an error.

Reason: invalid formula
You may try 'ggpredict()' or 'ggemmeans()'.

`P_Ag` was not found in model terms. Maybe misspelled?
`mi_to_county` was not found in model terms. Maybe misspelled?
Can't compute marginal effects, 'effects::Effect()' returned an error.

Reason: invalid formula
You may try 'ggpredict()' or 'ggemmeans()'.

`P_Ag` was not found in model terms. Maybe misspelled?
`mi_to_county` was not found in model terms. Maybe misspelled?
Can't compute marginal effects, 'effects::Effect()' returned an error.

Reason: invalid formula
You may try 'ggpredict()' or 'ggemmeans()'.

`P_Ag` was not found in model terms. Maybe misspelled?
`mi_to_county` was not found in model terms. Maybe misspelled?
Can't compute marginal effects, 'effects::Effect()' returned an error.

Reason: invalid formula
You may try 'ggpredict()' or 'ggemmeans()'.

`P_Ag` was not found in model terms. Maybe misspelled?
`mi_to_county` was not found in model terms. Maybe misspelled?
Can't compute marginal effects, 'effects::Effect()' returned an error.

Reason: invalid formula
You may try 'ggpredict()' or 'ggemmeans()'.

`P_Ag` was not found in model terms. Maybe misspelled?
`mi_to_county` was not found in model terms. Maybe misspelled?
Can't compute marginal effects, 'effects::Effect()' returned an error.

Reason: <text>:1:11: unexpected symbol
1: Iteration limit
              ^
You may try 'ggpredict()' or 'ggemmeans()'.

Can't compute marginal effects, 'effects::Effect()' returned an error.

Reason: missing value where TRUE/FALSE needed
You may try 'ggpredict()' or 'ggemmeans()'.

`P_Ag` was not found in model terms. Maybe misspelled?
`mi_to_county` was not found in model terms. Maybe misspelled?
Can't compute marginal effects, 'effects::Effect()' returned an error.

Reason: invalid formula
You may try 'ggpredict()' or 'ggemmeans()'.

`P_Ag` was not found in model terms. Maybe misspelled?
`mi_to_county` was not found in model terms. Maybe misspelled?
Can't compute marginal effects, 'effects::Effect()' returned an error.

Reason: invalid formula
You may try 'ggpredict()' or 'ggemmeans()'.

`P_Ag` was not found in model terms. Maybe misspelled?
`mi_to_county` was not found in model terms. Maybe misspelled?
Can't compute marginal effects, 'effects::Effect()' returned an error.

Reason: <text>:1:16: unexpected symbol
1: Newton-Raphson maximisation
                   ^
You may try 'ggpredict()' or 'ggemmeans()'.

`P_Ag` was not found in model terms. Maybe misspelled?
`mi_to_county` was not found in model terms. Maybe misspelled?
Can't compute marginal effects, 'effects::Effect()' returned an error.

Reason: invalid formula
You may try 'ggpredict()' or 'ggemmeans()'.

`P_Ag` was not found in model terms. Maybe misspelled?
`mi_to_county` was not found in model terms. Maybe misspelled?
Can't compute marginal effects, 'effects::Effect()' returned an error.

Reason: $ operator not defined for this S4 class
You may try 'ggpredict()' or 'ggemmeans()'.

`P_Ag` was not found in model terms. Maybe misspelled?
`mi_to_county` was not found in model terms. Maybe misspelled?
Can't compute marginal effects, 'effects::Effect()' returned an error.

Reason: object of type 'closure' is not subsettable
You may try 'ggpredict()' or 'ggemmeans()'.

Can't compute marginal effects, 'effects::Effect()' returned an error.

Reason: no applicable method for 'vcov' applied to an object of class "call"
You may try 'ggpredict()' or 'ggemmeans()'.

`P_Ag` was not found in model terms. Maybe misspelled?
`mi_to_county` was not found in model terms. Maybe misspelled?
Error in `colnames<-`(`*tmp*`, value = cvn) : 
  attempt to set 'colnames' on an object with less than two dimensions
In addition: There were 50 or more warnings (use warnings() to see the first 50)
> warnings()
Warning messages:
1: Could not get model data.
2: Could not access model information.
3: In faminfo$is_brms_trial <- is_brms_trial(model) : Coercing LHS to a list
4: In is.na(object) : is.na() applied to non-(list or vector) of type 'NULL'
5: In is.na(object) : is.na() applied to non-(list or vector) of type 'NULL'
6: Could not get model data.
7: Could not access model information.
8: In faminfo$is_brms_trial <- is_brms_trial(model) : Coercing LHS to a list
9: In is.na(object) : is.na() applied to non-(list or vector) of type 'NULL'
10: In is.na(object) : is.na() applied to non-(list or vector) of type 'NULL'
11: Could not get model data.
12: Could not access model information.
13: In faminfo$is_brms_trial <- is_brms_trial(model) : Coercing LHS to a list
14: In is.na(object) : is.na() applied to non-(list or vector) of type 'NULL'
15: In is.na(object) : is.na() applied to non-(list or vector) of type 'NULL'
16: Could not get model data.
17: Could not access model information.
18: In faminfo$is_brms_trial <- is_brms_trial(model) : Coercing LHS to a list
19: In is.na(object) : is.na() applied to non-(list or vector) of type 'NULL'
20: In is.na(object) : is.na() applied to non-(list or vector) of type 'NULL'
21: Could not get model data.
22: Could not access model information.
23: In faminfo$is_brms_trial <- is_brms_trial(model) : Coercing LHS to a list
24: In is.na(object) : is.na() applied to non-(list or vector) of type 'NULL'
25: In is.na(object) : is.na() applied to non-(list or vector) of type 'NULL'
26: Could not get model data.
27: Could not access model information.
28: In faminfo$is_brms_trial <- is_brms_trial(model) : Coercing LHS to a list
29: In is.na(object) : is.na() applied to non-(list or vector) of type 'NULL'
30: In is.na(object) : is.na() applied to non-(list or vector) of type 'NULL'
31: Could not get model data.
32: Could not access model information.
33: In faminfo$is_brms_trial <- is_brms_trial(model) : Coercing LHS to a list
34: In is.na(object) : is.na() applied to non-(list or vector) of type 'NULL'
35: In is.na(object) : is.na() applied to non-(list or vector) of type 'NULL'
36: Could not get model data.
37: Could not access model information.
38: In faminfo$is_brms_trial <- is_brms_trial(model) : Coercing LHS to a list
39: In is.na(object) : is.na() applied to non-(list or vector) of type 'NULL'
40: In is.na(object) : is.na() applied to non-(list or vector) of type 'NULL'
41: Could not get model data.
42: Could not access model information.
43: In faminfo$is_brms_trial <- is_brms_trial(model) : Coercing LHS to a list
44: In is.na(object) : is.na() applied to non-(list or vector) of type 'NULL'
45: In is.na(object) : is.na() applied to non-(list or vector) of type 'NULL'
46: Could not get model data.
47: Could not access model information.
48: In faminfo$is_brms_trial <- is_brms_trial(model) : Coercing LHS to a list
49: In is.na(object) : is.na() applied to non-(list or vector) of type 'NULL'
50: In is.na(object) : is.na() applied to non-(list or vector) of type 'NULL'
```
Am I doing something wrong or is there a problem with plm now?


See here:
https://gist.github.com/jackobailey/0982c89326c36b12d6fa6d6f182189be

https://htmlpreview.github.io/?https://github.com/mjskay/uncertainty-examples/blob/master/marginal-effects_categorical-predictor.html#differences-in-ames

https://htmlpreview.github.io/?https://github.com/mjskay/uncertainty-examples/blob/master/marginal-effects_categorical-predictor.html

https://link.springer.com/article/10.1007%2Fs40273-014-0210-6

http://mjskay.github.io/tidybayes/articles/tidy-brms.html#comparing-levels-of-a-factor
I was wondering if it would be possible to add an optional argument that plots the distribution of the moderator variable in an interaction term in plot_model()? The {interflex} package provides an elegant implementation of this: http://yiqingxu.org/software/interaction/RGuide.html. 

Example: 

```
# Fit model
m <- glm(
  tot_sc_e ~ c161sex + c172code * neg_c_7,
  data = efc,
  family = poisson()
)

# Plot moderator
plot_model(
  m, 
  type = "pred", 
  terms = c("neg_c_7", "c172code"),
  plot.moderator = c("histogram", "density") # Add moderator argument
)
```

Thank you in advance!
Sorry to post another issue.

I get an error when I try to use ggpredict type = "fe.zi" when there is a scale in the model formula

Error in exp(prdat.sim$cond) * (1 - stats::plogis(prdat.sim$zi)) :   non-conformable arrays

```
library(glmmTMB)
library(ggeffects)
data("Salamanders")

fit_scale = glmmTMB(count~spp + poly(cover, 3) + mined + scale(DOP)+(1|site), 
              ziformula=~DOY, 
              dispformula = ~spp,
              data = Salamanders, 
              family=nbinom2)

##produces error
##Error in exp(prdat.sim$cond) * (1 - stats::plogis(prdat.sim$zi)) :   non-conformable arrays
ggpredict(fit_scale, c("cover"), type = "fe.zi") %>% plot()

##works without zi
ggpredict(fit_scale, c("cover"), type = "fe") %>% plot()

##fe.zi works without scale
fit = glmmTMB(count~spp + poly(cover, 3) + mined + scale(DOP)+(1|site), 
              ziformula=~DOY, 
              dispformula = ~spp,
              data = Salamanders, 
              family=nbinom2)

ggpredict(fit, c("cover"), type = "fe.zi") %>% plot()
```
Dear SJ

I was wondering whether you could get your wonderful package to work with `rma.mv` and `rma` objects?  I just recently came across (yesterday) your `sjstats` and this package so wondering how difficult it would be to do this for the `metafor` package (a package for meta-analysis). In a meta-analysis, we often have a lot of categories so it would be good to know marginal effects but currently, this is not possible (at least easily) with `metafor`. Anyway, many thanks for these cool packages!

Thanks!

Shinichi