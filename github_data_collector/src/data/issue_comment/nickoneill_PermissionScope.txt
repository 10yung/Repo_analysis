======
Check the "Known bugs" section (https://github.com/nickoneill/PermissionScope#known-bugs) and past issues before submitting a new report ;)

DELETE THIS TEXT BEFORE SUBMITING A NEW ISSUE.
======
When i run on ios 11 this lib have problem with ** NSLocationAlwaysAndWhenInUseUsageDescription**  xcode hung at "    	assert(hasAlwaysKey, Constants.InfoPlistKeys.locationAlways + " not found in Info.plist.")
"


How can I move the cancel button? If I want to move it to the bottom, is offset the only way? And do I have to keep increasing the width/height until its moved to the center?  I've tried centering it via .center methods, and have not had any luck.
 最重要的一个BUG就是：
有时点击后跳到设置页面，打开通知，返回APP ，会自动启动页广告，然后到了APP首页！

一、first lanuch App -> ADS swift -> on settingViewController swift addPermission  
二、jump to APP settting
三、setting notifications or local and click back to App
四、 do not return viewController 
五、just return to ads.swift 

How to fix this bug,pls Help,Thanks!
 **OnAuthChange**  block is not getting called in case of notification permission

        ` PermissionScope* permissionScope = [PermissionScope new];
         switch ([permissionScope statusNotifications])
         {
                 case PermissionStatusAuthorized:
                   if (authorizedBlock)
                  {
                        authorizedBlock();
                  }
                  return;
            
                 case PermissionStatusUnknown:
                   [permissionScope requestNotifications];
                    break;
        
                  case PermissionStatusUnauthorized:
                 case PermissionStatusDisabled:
                 if (deniedOrDisabledBlock)
                {
                    deniedOrDisabledBlock();
                }
                return;
       }
    
    @weakify(permissionScope);
    [permissionScope setOnAuthChange:^(BOOL authorized, NSArray<PermissionResult *> * _Nonnull results)
     {
         @strongify(permissionScope);
         NSLog(@"status: %ld",[permissionScope statusNotifications]);
         
         if ([permissionScope statusNotifications] == PermissionStatusUnauthorized)
         {
             if (deniedOrDisabledBlock)
             {
                 deniedOrDisabledBlock();
             }
         }
         else if ([permissionScope statusNotifications] == PermissionStatusAuthorized)
         {
             if (authorizedBlock)
             {
                 authorizedBlock();
             }
         }
     }];`
Swift 4 requires explicit `@objc`. Without it `Selector("request\(type)")` will crash
I found a slight problem may cause memory leak,and here are the steps to reproduce:
Firstly,open your example project.Then open the Main.Storyboard and add a storyboard id to the layout of ViewController as shown in the screenshot:
<img width="680" alt="1" src="https://user-images.githubusercontent.com/9284117/26941830-7bf91466-4cb2-11e7-97bd-4184e311d0a2.png">
Secondly,open AppDelegate add source code `UIStoryboard(name:  "Main", bundle: nil).instantiateViewController(withIdentifier: "test")` to the callback method "didFinishLaunchingWithOptions" as shown in the screenshot:
<img width="956" alt="2" src="https://user-images.githubusercontent.com/9284117/26941854-9231863c-4cb2-11e7-8a62-761689406eb9.png">
Finally,run the app,then you can see xcode detects a memory leak form the member variables of PermissionScope as shown in the screenshot:
<img width="1017" alt="3" src="https://user-images.githubusercontent.com/9284117/26941874-a6df96e6-4cb2-11e7-97d5-fb05ed11ec3d.png">

So,I suggest to add a weak mark to the member variable named viewControllerForAlerts of PermissionScope.And hope it could eliminate the risk of memory leaks.

Thanks for your open source library!And hope you have a nice day!

by:Jason (China 2017.6.9)



Users have been confused in some of our apps — when they see the button that says ‘DENIED X’ it wasn’t intuitive to them that they could tap that button to resolve the problem. I added some public vars that provide formats defaulting to the existing messaging. I believe this might be useful to others who wish to customize the text in the permission view further as we needed.