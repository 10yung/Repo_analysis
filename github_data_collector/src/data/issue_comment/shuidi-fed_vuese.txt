解析参数的关键词为什么会选择@arg而不是@param呢，是有什么特殊的考虑吗？
根据js doc来看，它推荐的是@param，[详情查看如下](https://jsdoc.app/tags-param.html)

```js
export default {
  name: 'MyComponent',
  props: {
    // The name of the form, up to 8 characters
    name: {
      type: [String, Number],
      required: true,
      validator () {}
    }
  },
  methods: {
    // @vuese
    // Used to manually clear the form
    clear () {
      // Fire when the form is cleared
      // @arg The argument is a boolean value representing xxx
      this.$emit('onclear', true)
    }
  }
}```





When writing documentation it is considered good practice to write a few examples. I propose a custom block `<examples>` that authors could add to a component. Vuese could read that block and add an _“Examples”_ section to the output.

Ideally this section would render each example (perhaps as a compiled HTML custom component).

## Example ##

```vue
<!-- MyComponent.vue -->
<template>
  <div>...</div>
</template>

<script>
// ...
</script>

<style scoped>
/* ... */
</style>

<examples>
  <section>
    <h2>Some Usecase</h2>
    <MyComponent some-prop="some-usecase" />
  </section>

  <section>
    <h2>Some Other Usecase</h2>
    <MyComponent>Some Other Usecase</MyComponent>
  </section>
</examples>
```
Use `Array.includes()` to check for existence.
**Describe the bug**
If you leave an empty line in an HTML commit (like the once before a slot) it will break the table layout for the slots section.

**To Reproduce**
Create a component with a slot and document it using an empty line:

```vue
<template>
  <div>
    <!--
      Form header

      This is another paragraph.
    -->
    <slot name="header"></slot>
  </div>
</template>
```

**Expected behavior**
Preferably the cell describing the slot should have two paragraphs in it. But trimming of the white space is fine as well.

**Actual behavior**
The second paragraph gets a code indentation, and all the subsequent slots will have weird markup.

**Screenshots**
![image](https://user-images.githubusercontent.com/3984600/68640515-e58ff100-04bc-11ea-910a-5bc36577add1.png)


**Environmental information:**
```
Environment Info:

  System:
    OS: Linux 5.3 Ubuntu 19.10 (Eoan Ermine)
    CPU: (4) x64 Intel(R) Core(TM) i7-7600U CPU @ 2.80GHz
  Binaries:
    Node: 12.12.0 - ~/.nvm/versions/node/v12.12.0/bin/node
    Yarn: 1.19.1 - ~/work/stemson/ui/node_modules/.bin/yarn
    npm: 6.11.3 - ~/.nvm/versions/node/v12.12.0/bin/npm
  Browsers:
    Firefox: 70.0.1
```

**Describe the bug**
Slots that are children of a component that uses scoped slots (i.e. `v-slot`) won’t be generated.

**To Reproduce**
Create a component that has a slot inside a scoped slot from another component.
```vue
<template>
  <FooBar v-slot="{ foo }">
    <!-- Some header -->
    <slot name="header">Title</slot>
  </FooBar>
</template>
```

**Expected behavior**
There should be a section in the generated docs about the `<slot name="header">`.

**Environmental information:**
```
Environment Info:

  System:
    OS: Linux 5.3 Ubuntu 19.10 (Eoan Ermine)
    CPU: (4) x64 Intel(R) Core(TM) i7-7600U CPU @ 2.80GHz
  Binaries:
    Node: 12.12.0 - ~/.nvm/versions/node/v12.12.0/bin/node
    Yarn: 1.19.1 - ~/work/stemson/ui/node_modules/.bin/yarn
    npm: 6.11.3 - ~/.nvm/versions/node/v12.12.0/bin/npm
  Browsers:
    Firefox: 70.0.1
```


How to add Docute configurations based on https://docute.org/guide/customization ?
in example I will add navbar using this configuration:
```
nav: [
    {
      title: 'Home',
      link: '/'
    },
    {
      title: 'GitHub',
      link: 'https://github.com/egoist/docute'
    }
]
```
I have tried to write Docute configurations manually into the index.html file, but it overwritten when I ran `vuese gen`  again
![image](https://user-images.githubusercontent.com/5432828/67062095-f175e500-f194-11e9-8604-9d5f9b6e7653.png)
希望默认不输出input或者update 添加特殊标识时输出
![image](https://user-images.githubusercontent.com/5432828/67062040-c095b000-f194-11e9-81ed-538004c408e2.png)
无输出
![image](https://user-images.githubusercontent.com/5432828/67062057-cee3cc00-f194-11e9-828c-866674e74b01.png)

Hi,

I was wondering if this project had any plans on supporting Vue 3.0 when it is out?

Thanks!