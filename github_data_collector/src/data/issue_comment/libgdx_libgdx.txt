That line was using spaces instead of tab for its alignment.
A rather "OCD"-type PR.
These changes are related to #5700 changes : 

* IDE options in setup dialog (Eclipse and Intellij) are no longer necessary. 
* afterEclipseImport task doesn't exists anymore and was generating errors when Eclipse option was checked.
* Eclipse plugin still necessary for project naming (prevent confliting names in Eclipse workspace)

For the last one there was 2 way to do it, see [Buildship issue](https://github.com/eclipse/buildship/issues/629#issuecomment-354762915) : either by changing projects names in settings.gradle or by using eclipse plugin.

Chaging names in settings.gradle would impact all IDE and is a bit ugly IMO. So i chosed to bring back Eclipse plugin which will only impact Eclipse.
As mentioned in issue #5822 , sounds on Android do not loop when the setLooping method is called after the play method because of a SoundPool bug. This commit adds a notice to the java documentation on the setLooping method of interface Sound.


#### Issue details
All the info is below when it comes to do anything with animating the frames and also the "frames" 
https://www.youtube.com/watch?v=G44YMwBoJXM
Currently following that tutorial word by word but no luck. 


`Frame.add(new TextureRegion(region, i * frameWidth, 0, frameWidth, region.getRegionHeight()));`
Cannot resolve method 

`this.frameCount = frameCount;
        maxFrameTime = cycleTime / frameCount;
        frame = 0;`
Incompatible types. 


`if(Frame >= Frame)`
error: <identifier> expected


libgdx is latest version. 


```Windows


Some Matrix4 native methods give significant improvements when replacing them by java code (probably because of JNI overhead). .

I made few tests on a real scenario, gain is around 16% FPS : 320 FPS before, 373 after. 
Context: 1000 model instance, 4000 Matrix4.mul.

Matrix4.mul is heavily used, especially for 3D node tree 
Matrix4.inv is only used by cameras.
others are not used by framework code.

Thanks @Anuken to brought this up and @tommyettinger for the [Matrix4 Comparative Benchmark](https://github.com/tommyettinger/assorted-benchmarks/blob/master/src/main/java/net/adoptopenjdk/bumblebench/examples/Matrix4Benchmarks.md)

Notes: 
* java code was directly copied from GWT emulation implementation.
* my second commit might be questionnable, i made choice of mouving methods instead of adding a bunch of On/Off formatting tags. Tell me if i should reconsider. 
* few C functions become unused, so i removed it. I thing it's fine.
Lines 60 through 65 fix the Viewport re-sizing issue from 1.9.10 and before, concerning ExtendViewport and OrthographicCamera.  In certain situations where an ExtendViewport object was quickly removed and created anew, it would double the values of the OrthographicCamera reacting to the parent Viewport class variables of worldWidth and worldHeight.  The OrthographicCamera would effectively act as if zoomed in by 200%.

Lines 60 through 65 verify if the Camera type is truly an OrthographicCamera and reacts accordingly with the fix.  This may carry a benefit for future 3D endeavors with non-Orthographic Camera types, such as PerspectiveCamera.

I have tested this with my own code, relying upon my own version of ExtendViewport only.  Thank you for reading.
Useful to invert normals or direction if necessary.
```java
public class Test {
	public static void main(String[] args) {
		String pattern = "{0,choice, 1<hello|5<'{1,choice,1<more than one|4<more than four}'}";
		MessageFormat cf = new MessageFormat(pattern);
		System.out.println(cf.format(new Object[]{7, 5}));
		TextFormatter formatter = new TextFormatter(Locale.getDefault(), true);
		System.out.println(formatter.format(pattern, new Object[]{7, 5}));
	}
}
```
I used I18Bundle for localization. It uses TextFormatter which wraps MessageFormat and replaces escape chars before applies pattern. With nested pattern like above, MessageFormat prints ```more than four``` but TextFormatter throws exception. 


#### Issue details
while clicking on a text field for input in place without symbols

#### Reproduction steps/code
```java
public class InputTest extends ApplicationAdapter {

	Stage stage;
	@Override
	public void create() {		
		FreeTypeFontGenerator generator = new FreeTypeFontGenerator(Gdx.files.internal("arialbd.ttf"));
		FreeTypeFontParameter parameter = new FreeTypeFontParameter();
		parameter.size = 16;
		parameter.hinting = Hinting.None;
		parameter.magFilter = TextureFilter.Linear;
		parameter.minFilter = TextureFilter.Linear;
		BitmapFont font = generator.generateFont(parameter);
		font.getData().markupEnabled = true;
		
		TextFieldStyle style = new TextFieldStyle();
		style.font = font;
		style.fontColor = Color.WHITE;
		
		// variant 1:
		//TextArea tf = new TextArea(String.format("[#%s] test [#%s]\n",Color.GOLD.toString(), Color.WHITE.toString()), style);
		// variant 2:
		TextArea tf = new TextArea(String.format("[#%s] test [#%s]",Color.GOLD.toString(), Color.WHITE.toString()), style);
		tf.setSize(Gdx.graphics.getBackBufferWidth(), Gdx.graphics.getBackBufferHeight());
				
		stage = new Stage();
		stage.addActor(tf);
		Gdx.input.setInputProcessor(stage);
	}

	@Override
	public void render() {
		Gdx.gl.glClearColor(0, 0, 0, 1);
		Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);
		
		stage.act();
		stage.draw();
	}
}
```

#### Version of LibGDX and/or relevant dependencies
1.9.10

#### Stacktrace
```java
//variant 1:
java.lang.ArrayIndexOutOfBoundsException: 28
	at com.badlogic.gdx.scenes.scene2d.ui.TextField.calculateOffsets(TextField.java:235)
	at com.badlogic.gdx.scenes.scene2d.ui.TextArea.calculateOffsets(TextArea.java:268)
	at com.badlogic.gdx.scenes.scene2d.ui.TextField.draw(TextField.java:330)
	at com.badlogic.gdx.scenes.scene2d.Group.drawChildren(Group.java:110)
	at com.badlogic.gdx.scenes.scene2d.Group.draw(Group.java:57)
	at com.badlogic.gdx.scenes.scene2d.Stage.draw(Stage.java:128)
	at com.libgdxemoji.InputTest.render(InputTest.java:48)
	at com.badlogic.gdx.backends.lwjgl.LwjglCanvas$3.run(LwjglCanvas.java:265)
	at java.awt.event.InvocationEvent.dispatch(InvocationEvent.java:311)
	at java.awt.EventQueue.dispatchEventImpl(EventQueue.java:756)
	at java.awt.EventQueue.access$500(EventQueue.java:97)
	at java.awt.EventQueue$3.run(EventQueue.java:709)
	at java.awt.EventQueue$3.run(EventQueue.java:703)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:80)
	at java.awt.EventQueue.dispatchEvent(EventQueue.java:726)
	at java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:201)
	at java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:116)
	at java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:105)
	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:93)
	at java.awt.EventDispatchThread.run(EventDispatchThread.java:82)
//variant 2:
java.lang.RuntimeException: Actor: TextArea
	at com.badlogic.gdx.scenes.scene2d.Actor.notify(Actor.java:202)
	at com.badlogic.gdx.scenes.scene2d.Actor.fire(Actor.java:152)
	at com.badlogic.gdx.scenes.scene2d.Stage.touchDown(Stage.java:281)
	at com.badlogic.gdx.backends.lwjgl.LwjglInput.processEvents(LwjglInput.java:357)
	at com.badlogic.gdx.backends.lwjgl.LwjglCanvas$3.run(LwjglCanvas.java:259)
	at java.awt.event.InvocationEvent.dispatch(InvocationEvent.java:311)
	at java.awt.EventQueue.dispatchEventImpl(EventQueue.java:756)
	at java.awt.EventQueue.access$500(EventQueue.java:97)
	at java.awt.EventQueue$3.run(EventQueue.java:709)
	at java.awt.EventQueue$3.run(EventQueue.java:703)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:80)
	at java.awt.EventQueue.dispatchEvent(EventQueue.java:726)
	at java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:201)
	at java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:116)
	at java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:105)
	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:93)
	at java.awt.EventDispatchThread.run(EventDispatchThread.java:82)
Caused by: java.lang.ArrayIndexOutOfBoundsException: 16
	at com.badlogic.gdx.scenes.scene2d.ui.TextArea.letterUnderCursor(TextArea.java:90)
	at com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldClickListener.setCursorPosition(TextField.java:855)
	at com.badlogic.gdx.scenes.scene2d.ui.TextArea$TextAreaListener.setCursorPosition(TextArea.java:391)
	at com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldClickListener.touchDown(TextField.java:835)
	at com.badlogic.gdx.scenes.scene2d.InputListener.handle(InputListener.java:57)
	at com.badlogic.gdx.scenes.scene2d.Actor.notify(Actor.java:188)
	... 18 more

```

#### Please select the affected platforms
- [ ] Android
- [ ] iOS (robovm)
- [ ] iOS (MOE)
- [ ] HTML/GWT
- [x ] Windows
- [ ] Linux
- [ ] MacOS

Please ensure you have given all the following requested information in your report.

#### Issue details
We see some amount of crash reports from certain devices when loading libgdx games.

#### Reproduction steps/code
Seeing crash reports from firebase.

#### Version of LibGDX and/or relevant dependencies
1.9.10

#### Stacktrace
```java
Caused by com.badlogic.gdx.utils.GdxRuntimeException
Couldn't load shared library 'gdx' for target: Linux, 32-bit
com.badlogic.gdx.utils.SharedLibraryLoader.load (SharedLibraryLoader.java:125)
com.badlogic.gdx.utils.GdxNativesLoader.load (GdxNativesLoader.java:33)
com.badlogic.gdx.backends.android.AndroidApplication.<clinit> (AndroidApplication.java:60)
java.lang.Class.newInstance (Class.java)
android.app.Instrumentation.newActivity (Instrumentation.java:1078)
android.app.ActivityThread.performLaunchActivity (ActivityThread.java:2558)
android.app.ActivityThread.handleLaunchActivity (ActivityThread.java:2727)
android.app.ActivityThread.-wrap12 (ActivityThread.java)
android.app.ActivityThread$H.handleMessage (ActivityThread.java:1478)
android.os.Handler.dispatchMessage (Handler.java:102)
android.os.Looper.loop (Looper.java:154)
android.app.ActivityThread.main (ActivityThread.java:6121)
java.lang.reflect.Method.invoke (Method.java)
com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run (ZygoteInit.java:889)
com.android.internal.os.ZygoteInit.main (ZygoteInit.java:779)
de.robv.android.xposed.XposedBridge.main (XposedBridge.java:107)
Caused by java.lang.UnsatisfiedLinkError
dlopen failed: library "/system/lib64/libgdx.so" needed or dlopened by "/system/lib64/libnativeloader.so" is not accessible for the namespace "classloader-namespace"
```

#### Please select the affected platforms
- [ X] Android
- [ ] iOS (robovm)
- [ ] iOS (MOE)
- [ ] HTML/GWT
- [ ] Windows
- [ ] Linux
- [ ] MacOS
