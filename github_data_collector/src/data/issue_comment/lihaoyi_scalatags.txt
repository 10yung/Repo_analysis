if you use .toString to render the tags (instead of .render) StringFrag doesn't behave as expected.

I.e. StringFrag("hello world").toString shouldBe "hello world" 
but actually
StringFrag("hello world").toString is "StringFrag(hello world)"
I'm wondering if it's possible to use !important from css. If not, please add it.
[ScalaFiddle testing grouping SVG frags and modifiers](https://scalafiddle.io/sf/RuHkVSF/0) fails to compile with:
```
ScalaFiddle.scala:45: error: type mismatch;
 found   : collection.this.Seq[.this.scalatags.JsDom.implicits.Modifier]
    (which expands to)  collection.this.Seq[generic.this.Modifier[raw.this.Element]]
 required: scalatags.this.JsDom.Modifier
    (which expands to)  generic.this.Modifier[raw.this.Element]
        mods
        ^
ScalaFiddle.scala:50: error: type mismatch;
 found   : collection.this.Seq[.this.scalatags.JsDom.implicits.Modifier]
    (which expands to)  collection.this.Seq[generic.this.Modifier[raw.this.Element]]
 required: scalatags.this.JsDom.Modifier
    (which expands to)  generic.this.Modifier[raw.this.Element]
        mods
        ^
ScalaFiddle.scala:55: error: type mismatch;
 found   : collection.this.Seq[.this.scalatags.JsDom.implicits.Frag]
    (which expands to)  collection.this.Seq[generic.this.Frag[raw.this.Element,raw.this.Node]]
 required: scalatags.this.JsDom.Modifier
    (which expands to)  generic.this.Modifier[raw.this.Element]
      frags,
      ^
```

PS:  [I also tried in Scastie](https://scastie.scala-lang.org/DS42nztxTpuucDsEZJYLaw) but got `object JsDom is not a member of package scalatags`
The CSS property description can be found here : https://developer.mozilla.org/fr/docs/Web/CSS/text-justify
```scala
    import scalatags.JsDom.all._
    import scalatags.JsDom.implicits._

    div(height := "800", width := "500")

```

gives error
```
No PixelStyleValue defined for type String; scalatags does not know how to use String as an style
[error]     div(height := "800", width := "500")
[error]                ^
```
Hi!

Despite the extensive title, my question is rather simple.

I happily use ScalaTags to generate HTML on the server.
For type safety, I have introduced a little value class `HtmlId` that identifies an HTML element:

    case class HtmlId(value: String) extends AnyVal {
      override def toString: String = value
    }

Currently, I use it like this:

    import scalatags.Text.all._

    val myId = HtmlId("my-id")
    div(id := myId.value)


I would *like* to use it like this:

    import scalatags.Text.all._
    import my.package.HtmlIdImplicitConversion

    val myId = HtmlId("my-id")
    // HtmlIdImplicitConversion is applied here so I don't need to call `.value`
    div(id := myId)

The obvious thing to do is to have an implicit conversion from `HtmlId` to string:

    implicit def implicitToString(id: HtmlId): String = id.value

I don't want to use that, though, since string is too general; I'd prefer to have a more type-safe conversion.

I'm not sure how to create such a conversion, maybe using ScalaTags' `AttrPair` or `AttrValue`?

Thanks!


works:
```scala
borderRadius := "3px"
```
doesn't work:
```scala
borderRadius := 3
```
Fresh pull of master branch:
> sbt
> +publishLocal

> sbt.ResolveException: unresolved dependency: com.lihaoyi#scalatex-api_2.10;0.3.5: not found

Currently they don't work. You can do weird workarounds by embedding the entire text of a stylesheet into a string:

```scala
tags2.style(s"@media (min-width: 60em) {${styles.Wide.sheet}}"),
tags2.style(s"@media (max-width: 60em) {${styles.Narrow.sheet}}"),
```

But they really should be supported as part of `scalatags.stylesheet`
I want to be able to write something like

```
.myClass input[type="radio"] {
  /* ... */
}
```

There doesn't appear to be any documentation for attribute selectors nor do I see anything for them in the source code.