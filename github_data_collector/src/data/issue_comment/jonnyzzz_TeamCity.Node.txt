When trying to publish NPM components to a repository registry requiring permissions, NPM whoami and  publish commands don't seem to work with 'Node.js NPM' build step.

Installed version of **Node.js build runner** plugin = **2.0.19**

_npm commands_ in 'Node.js NPM' TeamCity build step:
```
config set "registry" "http://myregistry.mydomain.com/api/npm/npm-virtual/" --userconfig ./.npmrc
config set "//myregistry.mydomain.com/api/npm/npm-virtual/:_authToken" "%NPM_TOKEN%" --userconfig ./.npmrc
whoami --userconfig ./.npmrc
publish --userconfig ./.npmrc
```
Where _NPM_TOKEN_ is a TeamCity Configuration parameter whose value is a user token generated locally by _npm login_ command (result is a line in your local ~./.npmrc file, just keep value after __authToken=_ string).

What I got in TeamCity build log:
```
[17:14:56]
[Step 3/4] npm whoami --userconfig ./.npmrc
[17:14:56]
[npm whoami --userconfig ./.npmrc] npm ERR! code ENEEDAUTH
[17:14:56]
[npm whoami --userconfig ./.npmrc] npm ERR! need auth this command requires you to be logged in.
[17:14:56]
[npm whoami --userconfig ./.npmrc] npm ERR! need auth You need to authorize this machine using `npm adduser`
[17:14:56]
[npm whoami --userconfig ./.npmrc] 
[17:14:56]
[npm whoami --userconfig ./.npmrc] npm ERR! A complete log of this run can be found in:
[17:14:56]
[npm whoami --userconfig ./.npmrc] npm ERR!     /home/ubuntu/.npm/_logs/2019-06-19T15_14_56_541Z-debug.log
[17:14:56]
[Step 3/4] Process exited with code 1
```

Same npm commands in a _Command Line_ build step work fine, with same token value.
Maybe issue with _--userconfig_ parameter with **Node.js build runner** plugin.

Thx a lot in advance.
Regards,
Samuel
I upgraded Teamcity to 2019.1 and now the node plugin appears to be stuck in this state;
![image](https://user-images.githubusercontent.com/308572/59104608-e4650180-8929-11e9-8be1-8f3ce888db5d.png)

After restarting I get the same issue.
I have a weird error that I can't resolve.
I have setup an Ubuntu 18.04 server. I have installed the nodejs latest using nvm and the team city agent (latest) and this nodejs tc plugin (latest). I had an older version but it didn't work and so I upgraded to latest and have same error.

This server is also windows domain joined and the tc agent is running under a domain account named teamcityagent.

teamcityagent is in sudo group and I installed nvm and nodejs using this account.

If I log into this account and type `nvm --version`  or `node --version` or `npm --version` or anything else using these commands, it works, but I have a stuck build that is reporting `Please add 'Node.js NVM Installer' build runner` and the log is reporting

> [2019-02-04 20:37:07,613]   INFO - s.node.agent.NodeToolsDetector - Starting process: Execution(program=node, arguments=[--version])
> [2019-02-04 20:37:07,613]   INFO - s.node.agent.NodeToolsDetector - node was not found or failed, exitcode: -1
> [2019-02-04 20:37:07,613]   INFO - s.node.agent.NodeToolsDetector - StdOut:
> [2019-02-04 20:37:07,613]   INFO - s.node.agent.NodeToolsDetector - StdErr:
> [2019-02-04 20:37:07,614]   INFO - .processes.ProcessExecutorImpl - Starting process: Execution(program=npm, arguments=[--version])
> [2019-02-04 20:37:07,615]   INFO - s.node.agent.NodeToolsDetector - npm was not found or failed, exitcode: -1
> [2019-02-04 20:37:07,615]   INFO - s.node.agent.NodeToolsDetector - StdOut:
> [2019-02-04 20:37:07,615]   INFO - s.node.agent.NodeToolsDetector - StdErr:

I can't figure out why the plugin says it can't detect node or nvm when it is detected and works.
I had a hard time to figure out that the agent tool archive was **inside** the teamcity plugin archive. Maybe split up those as artifacts and provide two separate download links for the teamcity plugin and the teamcity agent tool
Hi, do you have any plans in upgrading the NVM version to a later version. The current build runner is running on Version v0.7.0 while the latest version is already on v0.33.11.
Hi All

I am getting following error, could someone advise me what could be the root cause?
Node.js version used: 8.12.0


[14:35:01]Step 1/2: Node.js NVM Installer (2m:06s)
[14:35:01][Step 1/2] Download: Fetching NVM (2m:06s)
[14:35:01][Download] Downloading creatonix/nvm...
[14:35:01][Download] from https://github.com/creationix/nvm/archive/v0.7.0.zip
[14:37:07][Step 1/2] Failed to start build runner 'jonnyzzz.nvm'
[14:37:07]
[Step 1/2] org.apache.http.conn.HttpHostConnectException: Connection to https://github.com refused
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:190)
	at org.apache.http.impl.conn.ManagedClientConnectionImpl.open(ManagedClientConnectionImpl.java:294)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:643)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:479)
	at org.apache.http.impl.client.AbstractHttpClient.execute(AbstractHttpClient.java:906)
	at org.apache.http.impl.client.AbstractHttpClient.execute(AbstractHttpClient.java:805)
	at org.apache.http.impl.client.AbstractHttpClient.execute(AbstractHttpClient.java:784)
	at com.jonnyzzz.teamcity.plugins.node.agent.nvm.HttpClientWrapperImpl.execute(HttpClient.kt:149)
	at com.jonnyzzz.teamcity.plugins.node.agent.nvm.NVMDownloader.downloadNVM(NVM.kt:56)
	at com.jonnyzzz.teamcity.plugins.node.agent.nvm.NVMRunner$createBuildProcess$$inlined$logging$lambda$lambda$1.invoke(NVM.kt:105)
	at com.jonnyzzz.teamcity.plugins.node.agent.nvm.NVMRunner$createBuildProcess$$inlined$logging$lambda$lambda$1.invoke(NVM.kt:90)
	at com.jonnyzzz.teamcity.plugins.node.agent.processes.CompositeProcessBuilderImpl$process$1.waitForImpl(BuildProcessBuilder.kt:91)
	at com.jonnyzzz.teamcity.plugins.node.agent.processes.BuildProcessBase.waitFor(BuildProcess.kt:47)
	at com.jonnyzzz.teamcity.plugins.node.agent.processes.DelegatingBuildProcess.waitForImpl(BuildProcess.kt:80)
	at com.jonnyzzz.teamcity.plugins.node.agent.processes.BuildProcessBase.waitFor(BuildProcess.kt:47)
	at com.jonnyzzz.teamcity.plugins.node.agent.processes.CompositeBuildProcessImpl.waitForImpl(CompositeBuildProcess.kt:58)
	at com.jonnyzzz.teamcity.plugins.node.agent.processes.BuildProcessBase.waitFor(BuildProcess.kt:47)
	at jetbrains.buildServer.agent.impl.buildStages.runnerStages.start.CallRunnerStage.doBuildStage(CallRunnerStage.java:75)
	at jetbrains.buildServer.agent.impl.buildStages.RunnerStagesExecutor$1.callStage(RunnerStagesExecutor.java:25)
	at jetbrains.buildServer.agent.impl.buildStages.RunnerStagesExecutor$1.callStage(RunnerStagesExecutor.java:18)
	at jetbrains.buildServer.agent.impl.buildStages.StagesExecutor.callRunStage(StagesExecutor.java:78)
	at jetbrains.buildServer.agent.impl.buildStages.StagesExecutor.doStages(StagesExecutor.java:37)
	at jetbrains.buildServer.agent.impl.buildStages.RunnerStagesExecutor.doStages(RunnerStagesExecutor.java:18)
	at jetbrains.buildServer.agent.impl.buildStages.startStages.steps.RunnerContextExecutor.callRunnerStages(RunnerContextExecutor.java:43)
	at jetbrains.buildServer.agent.impl.buildStages.startStages.steps.StepExecutor.processNextStep(StepExecutor.java:25)
	at jetbrains.buildServer.agent.impl.buildStages.startStages.steps.ForEachBuildRunnerStage.executeRunnerStep(ForEachBuildRunnerStage.java:138)
	at jetbrains.buildServer.agent.impl.buildStages.startStages.steps.ForEachBuildRunnerStage.runStep(ForEachBuildRunnerStage.java:123)
	at jetbrains.buildServer.agent.impl.buildStages.startStages.steps.ForEachBuildRunnerStage.executeBuildRunners(ForEachBuildRunnerStage.java:83)
	at jetbrains.buildServer.agent.impl.buildStages.startStages.steps.ForEachBuildRunnerStage.doBuildStage(ForEachBuildRunnerStage.java:44)
	at jetbrains.buildServer.agent.impl.buildStages.BuildStagesExecutor$1.callStage(BuildStagesExecutor.java:31)
	at jetbrains.buildServer.agent.impl.buildStages.BuildStagesExecutor$1.callStage(BuildStagesExecutor.java:24)
	at jetbrains.buildServer.agent.impl.buildStages.StagesExecutor.callRunStage(StagesExecutor.java:78)
	at jetbrains.buildServer.agent.impl.buildStages.StagesExecutor.doStages(StagesExecutor.java:37)
	at jetbrains.buildServer.agent.impl.buildStages.BuildStagesExecutor.doStages(BuildStagesExecutor.java:24)
	at jetbrains.buildServer.agent.impl.BuildRunActionImpl.doStages(BuildRunActionImpl.java:75)
	at jetbrains.buildServer.agent.impl.BuildRunActionImpl.runBuild(BuildRunActionImpl.java:55)
	at jetbrains.buildServer.agent.impl.BuildAgentImpl.doActualBuild(BuildAgentImpl.java:295)
	at jetbrains.buildServer.agent.impl.BuildAgentImpl.access$100(BuildAgentImpl.java:53)
	at jetbrains.buildServer.agent.impl.BuildAgentImpl$1.run(BuildAgentImpl.java:259)
	at java.lang.Thread.run(Thread.java:662)
Caused by: java.net.ConnectException: Connection timed out
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.PlainSocketImpl.doConnect(PlainSocketImpl.java:351)
	at java.net.PlainSocketImpl.connectToAddress(PlainSocketImpl.java:213)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:366)
	at java.net.Socket.connect(Socket.java:529)
	at com.sun.net.ssl.internal.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:570)
	at org.apache.http.conn.ssl.SSLSocketFactory.connectSocket(SSLSocketFactory.java:414)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	... 39 more
[14:37:07][Step 1/2] Step Node.js NVM Installer failed with unexpected error
[14:37:07]Step 2/2: integration tests (Node.js NPM)
[14:37:07][Step 2/2] Build step integration tests (Node.js NPM) is skipped because the previous step has failed
We generally use the following command to point NPM against a private repo (we use artifactory):

```
npm config set registry 'https://insert.your.artifactory/npm/repo'
npm login
username: xxxx
password: xxxx
```

How do I configure the addin to use this private repo instead of the default?

JetBrains have a plugins page which they link to directly from TeamCity and I couldn't find this plugin in that list: https://plugins.jetbrains.com/teamcity

It would be a good idea to be in that library list.
Would a "Working directory" like the one for NPM install be possible for gulp runner?
Right now it always expect gulp to be installed in root of checkout dir, which is not always the case.
I've uploaded 1.0.91 ( same version I was using successfully with TeamCity 9.1.6 (build 37459) )

I backed up and restored into TeamCity 2017.1.5, and now my NPM Install  task are failing:

![image](https://user-images.githubusercontent.com/26471190/32345168-c8722dfa-bfdf-11e7-92ae-434476474b3c.png)

I can't find a newer version, or a specific binary version for TeamCity 10.x though I spent a while looking through the teamcity build server, which is linked.

I can't find any mention on TeamCity's plugin web site.

Thanks for your help!