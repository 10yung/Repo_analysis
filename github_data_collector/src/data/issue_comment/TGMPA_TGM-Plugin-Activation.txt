Downloaded theme is using tgmpa version 2.6.1, I want to use same version in my personal plugin and because the theme one is loaded first, the class TGM_Plugin_Activation is declared from there.

I used Custom TGMPA Generator where I specified unique text domain and function prefix (Name was generated from text domain).

My register hook is like this:
 ```
add_action( 'tgmpa_register', 'pd__register_required_plugins' );

function pd__register_required_plugins() {

	$plugins = array(
		array(
			'name'      => 'Hello Dolly',
			'slug'      => 'hello-dolly',
			'required'  => false
		)
	);

	$config = array(
		'id'           => 'plugin-director',
		'default_path' => '',
		'menu'         => 'pd-tgmpa-install-plugins',
		'parent_slug'  => 'plugins.php',
		'capability'   => 'manage_options',
		'has_notices'  => true,
		'dismissable'  => true,
		'dismiss_msg'  => '',
		'is_automatic' => false,
		'message'      => ''
	);

    tgmpa( $plugins, $config );
}
```

And the issue is that the 'Hello Dolly' plugin appeared in the theme plugin list. So the parent_slug in the plugin's $config is ignored and probably whole $config is also ignored.
Hey guys, i noticed in the `activate_single_plugin` function if a plugin requires update, this function will still return `true` even if the plugin hasn't been activated.

Shouldn't this function return false if the plugin hasn't been activated, due to any reason? I would suggest `return false` in the `$this->does_plugin_require_update( $slug )` condition check.
After bulk installing all plugins, I´m redirected to a blank page.
It´s the same with or without 'is_automatic' activation enabled.

The plugins gets installed and actived though. It´s just a wrong redirection.

I´m using version 2.6.1 made with the custom TGMPA Generator.



```
<?php
/**
 * This file represents an example of the code that themes would use to register
 * the required plugins.
 *
 * It is expected that theme authors would copy and paste this code into their
 * functions.php file, and amend to suit.
 *
 * @see http://tgmpluginactivation.com/configuration/ for detailed documentation.
 *
 * @package    TGM-Plugin-Activation
 * @subpackage Example
 * @version    2.6.1 for parent theme Viewsmall
 * @author     Thomas Griffin, Gary Jones, Juliette Reinders Folmer
 * @copyright  Copyright (c) 2011, Thomas Griffin
 * @license    http://opensource.org/licenses/gpl-2.0.php GPL v2 or later
 * @link       https://github.com/TGMPA/TGM-Plugin-Activation
 */

/**
 * Include the TGM_Plugin_Activation class.
 *
 * Depending on your implementation, you may want to change the include call:
 *
 * Parent Theme:
 * require_once get_template_directory() . '/path/to/class-tgm-plugin-activation.php';
 *
 * Child Theme:
 * require_once get_stylesheet_directory() . '/path/to/class-tgm-plugin-activation.php';
 *
 * Plugin:
 * require_once dirname( __FILE__ ) . '/path/to/class-tgm-plugin-activation.php';
 */
require_once get_template_directory() . '/vendor/class-tgm-plugin-activation.php';

add_action( 'tgmpa_register', 'viewsmall_register_required_plugins' );

/**
 * Register the required plugins for this theme.
 *
 * In this example, we register five plugins:
 * - one included with the TGMPA library
 * - two from an external source, one from an arbitrary source, one from a GitHub repository
 * - two from the .org repo, where one demonstrates the use of the `is_callable` argument
 *
 * The variables passed to the `tgmpa()` function should be:
 * - an array of plugin arrays;
 * - optionally a configuration array.
 * If you are not changing anything in the configuration array, you can remove the array and remove the
 * variable from the function call: `tgmpa( $plugins );`.
 * In that case, the TGMPA default settings will be used.
 *
 * This function is hooked into `tgmpa_register`, which is fired on the WP `init` action on priority 10.
 */
function viewsmall_register_required_plugins() {
	/*
	 * Array of plugin arrays. Required keys are name and slug.
	 * If the source is NOT from the .org repo, then source is also required.
	 */
	$plugins = array(
        array(
			'name'        => 'Yoast SEO',
			'slug'        => 'wordpress-seo',
			'is_callable' => 'wpseo_init'
		),
        array(
			'name'        => 'Advanced Custom Fields',
			'slug'        => 'advanced-custom-fields',
            'required'    => true
		),
        array(
			'name'        => 'Really Simple SSL',
			'slug'        => 'really-simple-ssl'
		),
        array(
			'name'        => 'W3 Total Cache',
			'slug'        => 'w3-total-cache'
		),
        array(
			'name'        => 'SVG Support',
			'slug'        => 'svg-support',
            'required'    => true
		),
        array(
			'name'        => 'Classic Editor',
			'slug'        => 'classic-editor',
            'required'    => true
		)
	);

	/*
	 * Array of configuration settings. Amend each line as needed.
	 *
	 * TGMPA will start providing localized text strings soon. If you already have translations of our standard
	 * strings available, please help us make TGMPA even better by giving us access to these translations or by
	 * sending in a pull-request with .po file(s) with the translations.
	 *
	 * Only uncomment the strings in the config array if you want to customize the strings.
	 */
	$config = array(
		'id'           => 'viewsmall',                 // Unique ID for hashing notices for multiple instances of TGMPA.
		'default_path' => '',                      // Default absolute path to bundled plugins.
		'menu'         => 'tgmpa-install-plugins', // Menu slug.
		'parent_slug'  => 'themes.php',            // Parent menu slug.
		'capability'   => 'edit_theme_options',    // Capability needed to view plugin install page, should be a capability associated with the parent menu used.
		'has_notices'  => true,                    // Show admin notices or not.
		'dismissable'  => true,                    // If false, a user cannot dismiss the nag message.
		'dismiss_msg'  => '',                      // If 'dismissable' is false, this message will be output at top of nag.
		'is_automatic' => true,                   // Automatically activate plugins after installation or not.
		'message'      => '',                      // Message to output right before the plugins table.

		/*
		'strings'      => array(
			'page_title'                      => __( 'Install Required Plugins', 'viewsmall' ),
			'menu_title'                      => __( 'Install Plugins', 'viewsmall' ),
			/* translators: %s: plugin name. * /
			'installing'                      => __( 'Installing Plugin: %s', 'viewsmall' ),
			/* translators: %s: plugin name. * /
			'updating'                        => __( 'Updating Plugin: %s', 'viewsmall' ),
			'oops'                            => __( 'Something went wrong with the plugin API.', 'viewsmall' ),
			'notice_can_install_required'     => _n_noop(
				/* translators: 1: plugin name(s). * /
				'This theme requires the following plugin: %1$s.',
				'This theme requires the following plugins: %1$s.',
				'viewsmall'
			),
			'notice_can_install_recommended'  => _n_noop(
				/* translators: 1: plugin name(s). * /
				'This theme recommends the following plugin: %1$s.',
				'This theme recommends the following plugins: %1$s.',
				'viewsmall'
			),
			'notice_ask_to_update'            => _n_noop(
				/* translators: 1: plugin name(s). * /
				'The following plugin needs to be updated to its latest version to ensure maximum compatibility with this theme: %1$s.',
				'The following plugins need to be updated to their latest version to ensure maximum compatibility with this theme: %1$s.',
				'viewsmall'
			),
			'notice_ask_to_update_maybe'      => _n_noop(
				/* translators: 1: plugin name(s). * /
				'There is an update available for: %1$s.',
				'There are updates available for the following plugins: %1$s.',
				'viewsmall'
			),
			'notice_can_activate_required'    => _n_noop(
				/* translators: 1: plugin name(s). * /
				'The following required plugin is currently inactive: %1$s.',
				'The following required plugins are currently inactive: %1$s.',
				'viewsmall'
			),
			'notice_can_activate_recommended' => _n_noop(
				/* translators: 1: plugin name(s). * /
				'The following recommended plugin is currently inactive: %1$s.',
				'The following recommended plugins are currently inactive: %1$s.',
				'viewsmall'
			),
			'install_link'                    => _n_noop(
				'Begin installing plugin',
				'Begin installing plugins',
				'viewsmall'
			),
			'update_link' 					  => _n_noop(
				'Begin updating plugin',
				'Begin updating plugins',
				'viewsmall'
			),
			'activate_link'                   => _n_noop(
				'Begin activating plugin',
				'Begin activating plugins',
				'viewsmall'
			),
			'return'                          => __( 'Return to Required Plugins Installer', 'viewsmall' ),
			'plugin_activated'                => __( 'Plugin activated successfully.', 'viewsmall' ),
			'activated_successfully'          => __( 'The following plugin was activated successfully:', 'viewsmall' ),
			/* translators: 1: plugin name. * /
			'plugin_already_active'           => __( 'No action taken. Plugin %1$s was already active.', 'viewsmall' ),
			/* translators: 1: plugin name. * /
			'plugin_needs_higher_version'     => __( 'Plugin not activated. A higher version of %s is needed for this theme. Please update the plugin.', 'viewsmall' ),
			/* translators: 1: dashboard link. * /
			'complete'                        => __( 'All plugins installed and activated successfully. %1$s', 'viewsmall' ),
			'dismiss'                         => __( 'Dismiss this notice', 'viewsmall' ),
			'notice_cannot_install_activate'  => __( 'There are one or more required or recommended plugins to install, update or activate.', 'viewsmall' ),
			'contact_admin'                   => __( 'Please contact the administrator of this site for help.', 'viewsmall' ),

			'nag_type'                        => '', // Determines admin notice type - can only be one of the typical WP notice classes, such as 'updated', 'update-nag', 'notice-warning', 'notice-info' or 'error'. Some of which may not work as expected in older WP versions.
		),
		*/
	);

	tgmpa( $plugins, $config );
}

```


I've noticed that some changes were made to the `class-tgm-plugin-activation.php` file to address some Sniff issues: https://github.com/TGMPA/TGM-Plugin-Activation/commit/0a9b8c97c5ef0219d5863898a0519ac68caf1dee

I would be great if the generator (http://tgmpluginactivation.com/download/) used the latest version of TGM-Plugin-Activation
I set up TGM in my theme, and added translations directly from the provided languages dir in TGM. Translations I use are french.

<img width="476" alt="Capture d’écran 2019-07-05 à 16 37 53" src="https://user-images.githubusercontent.com/6126439/60729712-ac120c80-9f43-11e9-9e74-8a457c31a64a.png">

As you can see in the capture above, there are two translation issues :

- The notice text isn't translated (This theme require...) 
- On the link, both singular and plural string are concatened together

Here is my sample code (took the default)

```php
$plugins = [

    // This is an example of how to include a plugin bundled with a theme.
    [
        'name'               => 'WooCommerce',
        'slug'               => 'woocommerce',
        'source'             => get_template_directory() . '/lib/plugins/woocommerce.3.6.5.zip',
        'required'           => true,
        'version'            => '',
        'force_activation'   => false,
        'force_deactivation' => false,
        'external_url'       => '',
        'is_callable'        => '',
    ],
];

$config = [
    'id'           => 'mytheme',
    'default_path' => '',
    'menu'         => 'tgmpa-install-plugins',
    'has_notices'  => true,
    'dismissable'  => false,
    'dismiss_msg'  => '',
    'is_automatic' => false,
    'message'      => '',
];
```

Let me know I you need further informations.
Hi,

I believe I am following the right approach here, but please let me know if I am not.

ACF PRO is a required plugin for my plugin which uses TGMPA. I have overwritten version 5.7.12 ZIP (/lib/plugins/advanced-custom-fields-pro.zip) with version 5.8- I am just doing this on a local test environment for now.

Going to the plugins admin page, I have the message as expected:
"The following plugin needs to be updated to its latest version to ensure maximum compatibility with this theme: Advanced Custom Fields PRO.
Begin updating plugin"

I press "Begin updating". I see the "Install Required Plugins" page, and press "Update" for ACF.

But then on the "Updating Plugin: Advanced Custom Fields PRO" page I have the message "Update package not available."...so it doesn't work!

Any ideas?

Hi!

Is there any chance for compatibility with Wordpress 5.1 soon?
I have just finished testing on 30 sites, different servers, different configurations, works perfectly on 5.0.3

Just in case anyone was wondering

Hi, is it possible to pull update from Gitlab via Private Project? How to include the API access token properly? Thanks.