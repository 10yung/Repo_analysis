Propose to correct Misspelling: "CEnter" to "Enter" .
Cheers,
Mike

fix spelling mistake (R3D3)
Should be possible to render an empty `d3` chunk with everything specified in the header.

<img width="1440" alt="Screen Shot 2019-08-09 at 12 54 53 PM" src="https://user-images.githubusercontent.com/3478847/62805482-f9cee700-baa4-11e9-8126-9cdc99f7e51b.png">
Can we add `jsonlite::toJSON(x)` there? or am i missing the point of this function.
I can't successfully load other .js libraries to my r2d3 plots.
Example:
```R
library(r2d3)

sliderD3 <-
  htmltools::htmlDependency(name = "d3-simple-slider", version = "1.5.4",
                            src = c(href = "https://unpkg.com/d3-simple-slider@1.5.4/dist/"),
                            script = "d3-simple-slider.js")

r2d3(
  data = c (0.3, 0.6, 0.8, 0.95, 0.40, 0.20),
  script = "barchart.js",
  dependencies = list(sliderD3)
)
```
barchart.js :
```js
var barHeight = Math.floor(height / data.length);

svg.selectAll('rect')
  .data(data)
  .enter().append('rect')
    .attr('width', function(d) { return d * width; })
    .attr('height', barHeight)
    .attr('y', function(d, i) { return i * barHeight; })
    .attr('fill', 'steelblue');
    
d3.sliderBottom(); // this makes an error
```
I can find them in the sources but can't use the functions. Any ideas?
I am using r2d3 with the RStudio IDE (Version 1.2.1335).  Is there any way to see the contents of data files and arrays created by an r2d3 script?
Would like to have something equivalent to the R studio View capabilities, or something equivalent to the data inspection tools available with observablehq.
TIA

Added new example called Map-with-Latitude-Longitude.
http://bl.ocks.org/lokesh005/7640d9b562bf59b561d6
for the new beginner who is not familiar with d3.js, are there more r2d3 script examples like the basic chart as line, bar, area. etc. Since I still have difficulty to translate d3.js to r2d3 script which can be used in R
I am working on some visualization using the r2d3 package and integrating the d3output on a Shiny Dashboard.

While I completed what I thought would be the difficult chunks of work, I am stuck at a rather trivial stage.

After generating the d3output, I am not able to restrict it inside a box within a dashboardPage - it is covering the complete width of the page (including sidebarPanel) and eclipsing the dashboard, while the box where it is declared to appear is displaying as an empty box.

Please let me know what I might be missing out on here. I have spent a lot of time on this but have not been able to crack this one.

Please find a snip of the dashboard to better understand the issue.
![snip](https://user-images.githubusercontent.com/38259512/55951966-16355100-5c76-11e9-9e80-4626ccc8d487.png)

Here is how I'm writing the code:

```
library(shiny)
library(r2d3)
library(data.tree)


ui <- dashboardPage(
  
  ##========================== Dashboard Header ==========================##  
  
  dashboardHeader(title = 'R2D3 Dashboard',titleWidth = 280
                  # tags$li(class = "dropdown",
                  #         tags$a(tags$img(height = "20px", alt="Logo", src="logo.png", background = "white")))
  ),
  
  ##========================== Side Panel (Filters & Selections) ==========================##
  dashboardSidebar( width=280,
                    
                    sidebarMenu(
                      
                      menuItem(text=strong('Tree'),
                               newtab=FALSE,
                               icon=NULL,
                               tabName="tab_11",
                               startExpanded=TRUE
                      )
                    )
  ),
  
  dashboardBody(
    fluidPage(theme="style.css",
      

      verticalLayout(
        box(width=12,d3Output("d5"),value = TRUE)),
      
      verticalLayout(
        box(width=12,verbatimTextOutput("selected"),value = TRUE))
      
    )

  )
)

# ui <- dashboardPage(
#   titlePanel("R2D3 sample"),
#   sidebarLayout(
#     sidebarPanel(),
#     mainPanel(
#       verbatimTextOutput("selected"),
#       d3Output("d5")
#     )
#   )
# )

server <- function(input, output) {
  output$d5 <- renderD3({
    r2d3(
      NULL,
      script = "examples/tree.js", d3_version = 3,
      dependencies = "style.css"
    )
  })
  
  output$selected <- renderText({
    input$bar_clicked
  })
}

shinyApp(ui = ui, server = server)
```

Due to the confidential nature of the data, I can't share the supporting files. Pardon me for the partial content.


-- 
Thanks & Regards,
Apoorv Mehrotra
JavaScript console output from `r2d3` is rendered directly into the RStudio viewer visualization instead of the javascript console. See [documentation][1].

This also seems to be the behavior when 

`r2d3::r2d3(..., viewer = 'browser')`

I.e., the `console.log()` does not output to the console even in the browser. But sometimes I'd like to inspect objects written to the browser console because they are not text.

Is there a clean way to change this behavior, for `console.log()` information in an `r2d3` D3.js to be sent to the browser console?

  [1]: https://rstudio.github.io/r2d3/articles/development_and_debugging.html