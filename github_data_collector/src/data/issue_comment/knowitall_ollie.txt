Hello,I want to train a model and I run
java -cp ollie-app-latest.jar edu.knowitall.openparse.BuildPatterns data/lemmagrep.txt data/patterns.txt
lemmagrep.txt is downloaded from http://knowitall.cs.washington.edu/ollie/data/lemmagrep.txt.bz2

but I get an error:

15:20:08.685 [main] INFO  e.knowitall.openparse.BuildPatterns$ - chunk size: 100000
15:20:08.689 [main] INFO  e.knowitall.openparse.BuildPatterns$ - pattern length: None
15:20:08.832 [main] ERROR e.knowitall.openparse.BuildPatterns$ - could not deserialize graph: 1
edu.knowitall.tool.parse.graph.DependencyGraph$SerializationException: Could not deserialize graph: 1
	at edu.knowitall.tool.parse.graph.DependencyGraph$.deserialize(DependencyGraph.scala:606) ~[ollie-app-latest.jar:na]
	at edu.knowitall.openparse.BuildPatterns$$anonfun$main$1$$anonfun$3$$anonfun$apply$mcV$sp$1.apply(BuildPatterns.scala:79) [ollie-app-latest.jar:na]
	at edu.knowitall.openparse.BuildPatterns$$anonfun$main$1$$anonfun$3$$anonfun$apply$mcV$sp$1.apply(BuildPatterns.scala:73) [ollie-app-latest.jar:na]
	at scala.collection.LinearSeqOptimized$class.foreach(LinearSeqOptimized.scala:59) [ollie-app-latest.jar:na]
	at scala.collection.immutable.List.foreach(List.scala:76) [ollie-app-latest.jar:na]
	at edu.knowitall.openparse.BuildPatterns$$anonfun$main$1$$anonfun$3.apply$mcV$sp(BuildPatterns.scala:73) [ollie-app-latest.jar:na]
	at edu.knowitall.common.Timing$.time(Timing.scala:59) [ollie-app-latest.jar:na]
	at edu.knowitall.openparse.BuildPatterns$$anonfun$main$1.apply(BuildPatterns.scala:73) [ollie-app-latest.jar:na]
	at edu.knowitall.openparse.BuildPatterns$$anonfun$main$1.apply(BuildPatterns.scala:68) [ollie-app-latest.jar:na]
	at scala.collection.Iterator$class.foreach(Iterator.scala:772) [ollie-app-latest.jar:na]
	at scala.collection.Iterator$GroupedIterator.foreach(Iterator.scala:907) [ollie-app-latest.jar:na]
	at edu.knowitall.openparse.BuildPatterns$.main(BuildPatterns.scala:68) [ollie-app-latest.jar:na]
	at edu.knowitall.openparse.BuildPatterns$.main(BuildPatterns.scala:50) [ollie-app-latest.jar:na]
	at edu.knowitall.openparse.BuildPatterns.main(BuildPatterns.scala) [ollie-app-latest.jar:na]
Caused by: edu.knowitall.tool.parse.graph.Dependency$SerializationException: could not deserialize dependency: 1
	at edu.knowitall.tool.parse.graph.Dependency$.deserialize(Dependency.scala:62) ~[ollie-app-latest.jar:na]
	at edu.knowitall.tool.parse.graph.Dependencies$$anonfun$deserialize$1.apply(Dependency.scala:74) ~[ollie-app-latest.jar:na]
	at edu.knowitall.tool.parse.graph.Dependencies$$anonfun$deserialize$1.apply(Dependency.scala:74) ~[ollie-app-latest.jar:na]
	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:233) ~[ollie-app-latest.jar:na]
	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:233) ~[ollie-app-latest.jar:na]
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:34) ~[ollie-app-latest.jar:na]
	at scala.collection.mutable.ArrayOps.foreach(ArrayOps.scala:38) ~[ollie-app-latest.jar:na]
	at scala.collection.TraversableLike$class.map(TraversableLike.scala:233) ~[ollie-app-latest.jar:na]
	at scala.collection.mutable.ArrayOps.map(ArrayOps.scala:38) ~[ollie-app-latest.jar:na]
	at edu.knowitall.tool.parse.graph.Dependencies$.deserialize(Dependency.scala:74) ~[ollie-app-latest.jar:na]
	at edu.knowitall.tool.parse.graph.DependencyGraph$.rec$1(DependencyGraph.scala:596) ~[ollie-app-latest.jar:na]
	at edu.knowitall.tool.parse.graph.DependencyGraph$.deserialize(DependencyGraph.scala:601) ~[ollie-app-latest.jar:na]
	... 13 common frames omitted
Caused by: scala.MatchError: 1 (of class java.lang.String)
	at edu.knowitall.tool.parse.graph.Dependency$.deserialize(Dependency.scala:55) ~[ollie-app-latest.jar:na]
	... 24 common frames omitted
15:20:08.859 [main] ERROR e.knowitall.openparse.BuildPatterns$ - could not deserialize graph: 1
edu.knowitall.tool.parse.graph.DependencyGraph$SerializationException: Could not deserialize graph: 1
	at edu.knowitall.tool.parse.graph.DependencyGraph$.deserialize(DependencyGraph.scala:606) ~[ollie-app-latest.jar:na]
	at edu.knowitall.openparse.BuildPatterns$$anonfun$main$1$$anonfun$3$$anonfun$apply$mcV$sp$1.apply(BuildPatterns.scala:79) [ollie-app-latest.jar:na]
	at edu.knowitall.openparse.BuildPatterns$$anonfun$main$1$$anonfun$3$$anonfun$apply$mcV$sp$1.apply(BuildPatterns.scala:73) [ollie-app-latest.jar:na]
	at scala.collection.LinearSeqOptimized$class.foreach(LinearSeqOptimized.scala:59) [ollie-app-latest.jar:na]
	at scala.collection.immutable.List.foreach(List.scala:76) [ollie-app-latest.jar:na]
......

Could you tell me what I can do to fix it? thanks!
… cause error : NullPointException

I'm getting this exact error that was posted to PasteBin by someone about a year ago (not sure who though): http://pastebin.com/EPD1zUYa

I'm using the exact JavaOllieWrapper code as provided in the repo and I've put my model in as well.


If a token is "null", Ollie dies.

```
Figure III-2-16. Ideal case of an unstable null point (Walton 1972) . . . . . . . . . . . . . . . . . . . . . . III-2-36
Exception in thread "main" org.maltparser.core.symbol.SymbolException: Symbol table error: empty string cannot be added to the symbol table
    at org.maltparser.core.symbol.trie.TrieSymbolTable.addSymbol(TrieSymbolTable.java:81)
    at org.maltparser.core.syntaxgraph.GraphElement.addLabel(GraphElement.java:31)
    at org.maltparser.core.syntaxgraph.SyntaxGraph.addLabel(SyntaxGraph.java:35)
    at org.maltparser.MaltParserService.parse(MaltParserService.java:149)
    at edu.knowitall.tool.parse.MaltParser.dependencies(MaltParser.scala:96)
    at edu.knowitall.tool.parse.MaltParser.dependencyGraph(MaltParser.scala:122)
    at edu.knowitall.ollie.OllieCli$$anonfun$run$1$$anonfun$12$$anonfun$apply$mcV$sp$1$$anonfun$apply$7$$anonfun$25.apply(OllieCli.scala:249)
    at edu.knowitall.ollie.OllieCli$$anonfun$run$1$$anonfun$12$$anonfun$apply$mcV$sp$1$$anonfun$apply$7$$anonfun$25.apply(OllieCli.scala:249)
    at scala.Option.map(Option.scala:133)
    at edu.knowitall.ollie.OllieCli$$anonfun$run$1$$anonfun$12$$anonfun$apply$mcV$sp$1$$anonfun$apply$7.apply(OllieCli.scala:249)
    at edu.knowitall.ollie.OllieCli$$anonfun$run$1$$anonfun$12$$anonfun$apply$mcV$sp$1$$anonfun$apply$7.apply(OllieCli.scala:241)
    at scala.collection.LinearSeqOptimized$class.foreach(LinearSeqOptimized.scala:59)
    at scala.collection.immutable.List.foreach(List.scala:76)
    at edu.knowitall.ollie.OllieCli$$anonfun$run$1$$anonfun$12$$anonfun$apply$mcV$sp$1.apply(OllieCli.scala:241)
    at edu.knowitall.ollie.OllieCli$$anonfun$run$1$$anonfun$12$$anonfun$apply$mcV$sp$1.apply(OllieCli.scala:237)
    at scala.collection.Iterator$class.foreach(Iterator.scala:772)
    at scala.collection.Iterator$$anon$19.foreach(Iterator.scala:399)
    at edu.knowitall.ollie.OllieCli$$anonfun$run$1$$anonfun$12.apply$mcV$sp(OllieCli.scala:237)
    at edu.knowitall.common.Timing$.time(Timing.scala:59)
    at edu.knowitall.ollie.OllieCli$$anonfun$run$1.processSource$1(OllieCli.scala:226)
    at edu.knowitall.ollie.OllieCli$$anonfun$run$1$$anonfun$apply$12.apply(OllieCli.scala:290)
    at edu.knowitall.ollie.OllieCli$$anonfun$run$1$$anonfun$apply$12.apply(OllieCli.scala:289)
    at edu.knowitall.common.Resource$.using(Resource.scala:14)
    at edu.knowitall.ollie.OllieCli$$anonfun$run$1.apply(OllieCli.scala:289)
    at edu.knowitall.ollie.OllieCli$$anonfun$run$1.apply(OllieCli.scala:216)
    at edu.knowitall.common.Resource$.using(Resource.scala:14)
    at edu.knowitall.ollie.OllieCli$.run(OllieCli.scala:216)
    at edu.knowitall.ollie.OllieCli$.main(OllieCli.scala:174)
    at edu.knowitall.ollie.OllieCli.main(OllieCli.scala)
```

Hi

Having grabbed the latest Ollie JAR which I believe is v1.0.2 I’ve noticed something odd having run a few sentences through it and wondered if you could take a look and confirm whether it’s a bug. I had used an older version before (1.0.0) and ran this sentence through it again to check that version and I don’t see the same oddity.

Here is a simple form of the sentence structure that demonstrates the problem:
               The dog has died due to shock and is being buried at home tomorrow.

With Ollie 1.0.0 we get:
0.793: (The dog; has died due to; shock)
0.698: (The dog; is being buried at; home)

But with 1.0.2 we get:
0.673: (The dog; has died is due to; shock)
0.554: (The dog; has is being buried at; home)

Other than the scores changing, its simply the inclusion of the multiple VBZ nodes across the two relations that doesn’t look right. Could you confirm this is unexpected behavior, I couldn’t think of a reason why you might want this to be the case. Sorry if this has already been fixed I haven’t had time to grab the very latest source and build it to test against.

Thanks

Tony

Antony Scerri
Principal Technology Researcher, Elsevier Labs

This would avoid problems with missing nodes.

Switch to clear parser for superior parses with equal scalability.  Some patterns will need to be changed because clear represents them differently (better).  In particular, there are no `cop` edges.

> "Andy was in the process of building my steps in January."
> (Andy, was in, the process building my steps)

> I heard this argument again and again as well.
> (I, heard again again as well, this argument) 
