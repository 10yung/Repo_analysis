
Adding index on table `sys_dict_type` column `name` might speed up the underlying query issued via `IConstantFactory#getDictsByName`. See #70 
Adding index on table `sys_dict` column `dict_type_id` might speed up the underlying query issued via `IConstantFactory#getDictsByName`. See #69 
Missing index on table `sys_dict_type` column `name` might make the underlying query issued via [IConstantFactory#getDictsByName](https://github.com/stylefeng/Guns/blob/08efe48b4b140cb1157b5d2e89a7a08604ee2ebc/guns-base-support/guns-sys/src/main/java/cn/stylefeng/guns/sys/core/constant/factory/IConstantFactory.java#L110) slow. Since table `sys_dict_type` is mostly read and rarely updated, the performance impact for write operations is acceptable under common cases.
Missing index on table `sys_dict` column `dict_type_id` might make the underlying query issued via [IConstantFactory#getDictsByName](https://github.com/stylefeng/Guns/blob/08efe48b4b140cb1157b5d2e89a7a08604ee2ebc/guns-base-support/guns-sys/src/main/java/cn/stylefeng/guns/sys/core/constant/factory/IConstantFactory.java#L110) slow. Since table `sys_dict` is mostly read and rarely updated, the performance impact for write operations is acceptable under common cases.
Adding index on table `sys_user` column `account` might speed up the underlying query issued via `UserMapper#getByAccount`. See #67  
Missing index on table `sys_user` column `account` might make the underlying query issued via [UserMapper#getByAccount](https://github.com/stylefeng/Guns/blob/08efe48b4b140cb1157b5d2e89a7a08604ee2ebc/guns-base-support/guns-sys/src/main/java/cn/stylefeng/guns/sys/modular/system/mapper/UserMapper.java#L59) slow. Since table `sys_user` is mostly read and seldomly inserted or updated, the performance impact for write operations is acceptable under common cases.
Fix https://github.com/stylefeng/Guns/issues/65.
The following query defined in [MenuMapper.xml](https://github.com/stylefeng/Guns/blob/master/guns-base-support/guns-sys/src/main/java/cn/stylefeng/guns/sys/modular/system/mapper/mapping/MenuMapper.xml#L238) is not optimal:

```xml
    <select id="getMenusByRoleIds" resultType="cn.stylefeng.guns.base.pojo.node.MenuNode">
        SELECT
        m1.menu_id AS id,
        m1.code AS code,
        m1.icon AS icon,
        (
        CASE
        WHEN (m2.menu_id = 0 OR m2.menu_id IS NULL) THEN
        0
        ELSE
        m2.menu_id
        END
        ) AS "parentId",
        m1.name as name,
        m1.url as url,
        m1.levels as levels,
        m1.menu_flag as ismenu,
        m1.system_type as systemType,
        m1.sort as num
        FROM
        sys_menu m1
        LEFT join sys_menu m2 ON m1.pcode = m2.code
        INNER JOIN (
        SELECT
        menu_id
        FROM
        sys_menu
        WHERE
        menu_id IN (
        SELECT
        menu_id
        FROM
        sys_relation rela
        WHERE
        rela.role_id IN
        <foreach collection="list" index="index" item="i" open="(" separator="," close=")">
            #{i}
        </foreach>
        )
        ) m3 ON m1.menu_id = m3.menu_id
        where m1.menu_flag = 'Y'
        order by levels,m1.sort asc
    </select>
```

The **INNER JOIN** for m3 is unnecessary and could be optimized out to the following:
```xml
    <select id="getMenusByRoleIds" resultType="cn.stylefeng.guns.base.pojo.node.MenuNode">
        SELECT
        m1.menu_id AS id,
        m1.code AS code,
        m1.icon AS icon,
        (
        CASE
        WHEN (m2.menu_id = 0 OR m2.menu_id IS NULL) THEN
        0
        ELSE
        m2.menu_id
        END
        ) AS "parentId",
        m1.name as name,
        m1.url as url,
        m1.levels as levels,
        m1.menu_flag as ismenu,
        m1.system_type as systemType,
        m1.sort as num
        FROM
        sys_menu m1
        LEFT join sys_menu m2 ON m1.pcode = m2.code
        where m1.menu_flag = 'Y' and
        m1.menu_id IN (
            SELECT menu_id FROM sys_relation rela WHERE rela.role_id IN
                <foreach collection="list" index="index" item="i" open="(" separator="," close=")">
                    #{i}
                </foreach>
        )
        order by levels,m1.sort asc
    </select>
```
Fix https://github.com/stylefeng/Guns/issues/63.