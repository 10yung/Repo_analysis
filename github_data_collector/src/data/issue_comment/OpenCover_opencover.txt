### My Framework

- [ ] .NET 2
- [ ] .NET 3.5
- [ ] .NET 4
- [ ] .NET 4.5
- [ ] .NET 4.6
- [x] .NET 4.6.1
- [ ] .NET 4.6.2
- [ ] .NET 4.7
- [ ] .NET 4.7.1
- [x] .NET 4.7.2
- [ ] .NET Core 1.0.0
- [x] .NET Core 2.0.0
- [ ] Something else

### My Environment

- [ ] Windows 7 or below (not truly supported due to EOL)
- [ ] Windows 8
- [ ] Windows 8.1
- [x] Windows 10
- [ ] Windows 10 IoT Core
- [ ] Windows Server 2012
- [ ] Windows Server 2012 R2
- [ ] Windows Server 2016

### Actual Behavior

I use OpenCover version 4.7.922 to generate coverage.xml and I use ReportGenerator version 4.4.0 to convert the XML file into a HTML report but something seems odd in the generated report. I initially thought the problem was with ReportGenerator so I raised an issue in their repo but @danielpalme seems to think OpenCover is the culprit.

In short, the situation is that I get "0 of 2 branches" covered when in fact I have unit tests covering the two scenarios. During my investigation of the situation I realized that this problem is most likely due to the fact that my C# library targets multiple frameworks and my unit testing projects also targets multiple frameworks. If I remove the multi-targeting, the report correctly reports that I am covering all branches. You can read more details in this [issue](https://github.com/danielpalme/ReportGenerator/issues/308), including screenshots to demonstrate the problem, C# code sample, sample `coverage.xml` file and also link to a public GitHub repo that will allow you to easily reproduce the situation.



No requirement information is available on the project documentation (README nor wiki). Even if the project has no requirement, this information is important for sysadmins and should be written down.

Could you please add a requirements section in the README file ?
And add info about version numbering being aligned with the runtime support as explained in #878 

Please provide the following information when submitting an issue. 

> Where appropriate replace the `[ ]` with a `[X]`

### My Framework

- [ ] .NET 2
- [ ] .NET 3.5
- [ ] .NET 4
- [ ] .NET 4.5
- [ ] .NET 4.6
- [X] .NET 4.6.1
- [ ] .NET 4.6.2
- [ ] .NET 4.7
- [ ] .NET 4.7.1
- [ ] .NET 4.7.2
- [ ] .NET Core 1.0.0
- [ ] .NET Core 2.0.0
- [ ] Something else

### My Environment

- [ ] Windows 7 or below (not truly supported due to EOL)
- [ ] Windows 8
- [ ] Windows 8.1
- [X] Windows 10
- [ ] Windows 10 IoT Core
- [ ] Windows Server 2012
- [ ] Windows Server 2012 R2
- [ ] Windows Server 2016

### I have already...

- [X] repeated the problem using the latest stable release of OpenCover.
- [X] reviewed the [usage guide](https://github.com/opencover/opencover/wiki/usage) and [usage document](https://github.com/opencover/opencover/blob/master/main/OpenCover.Documentation/Usage.pdf).
- [X] have looked at the opencover output xml file in an attempt to resolve the issue.
- [X] reviewed the [current issues](https://github.com/opencover/opencover/issues) to check that the issue isn't already known.

### My issue is related to (check only those which apply):

- [X] no coverage being recorded
- [ ] 32 or 64 bit support
- [ ] feature request

### Expected Behavior

OpenCover runs tests and generates code coverage output correctly.

### Actual Behavior

When running OpenCover against one of our Test projects I have noticed some odd behavior. This is an example project structure:

ExampleBusinessObjectsLibrary.csproj - 54 MB PDB file
ExampleUtilsLibrary.csproj - 2 MB PDB file
ExampleUnitTests.csproj

ExampleUnitTests.csproj references both ExampleUtilsLibrary.csproj and ExampleBusinessObjectsLibrary.csproj

If I write a unit test in ExampleUnitTest.csproj that calls a function in ExampleUtilsLibrary.csproj, and only hits code in ExampleUtilsLibrary.csproj the code coverage output is generated as expected. 

Now if I take that same unit test and hit any code in ExampleBusinessObjectsLibrary.csproj the code coverage output is not generated as expected. It sets all code coverage output to 0 out of X. 

ExampleUtilsLibrary.csproj is significantly smaller in size. 1/27th in size to be exact. 

Logs for failure: https://gist.github.com/Cjewett/2ff1bb1cc761e8368b47c3e6f02f0e47

### Steps to reproduce the problem:

I can't give reproduce code for this, and the steps are pretty simple. I'm just running the tool against one of our unit test projects.

Same command is always used.

C:\*\*\packages\OpenCover.4.7.922\tools\OpenCover.console.exe -register:user -target:"vstest.console.exe" -targetargs:"ExampleUnitTests.dll" -output:"coverage.xml"

- [X] reviewed the [usage guide](https://github.com/opencover/opencover/wiki/usage) and [usage document](https://github.com/opencover/opencover/blob/master/main/OpenCover.Documentation/Usage.pdf) again because we know you probably didn't do it the first time.
- [ ] sample code or link to repository/gist is available (support is much faster this way) 

Since there is already a [opencover.portable](https://chocolatey.org/packages/opencover.portable) Chocolatey package, the default naming convention would be to rename the [OpenCover](https://chocolatey.org/packages/OpenCover) package to `opencover.install` and let the `OpenCover` package have a dependency on `opencover.install`.
I have website hosted in IIS (Windows 10 Version 10.0.18362.1) with Application Pool Identity as Custom account and trying to attach OpenCover in debug mode to get the code coverage.

**Problem** : After attaching the Opencover.exe to w3wp.exe process, when I tried to launch website with custom account Application Pool Identity from IIS getting the below error.

Note : This works perfect when using Application Pool used as ASP.NET V4.0 Integrated. But with custom account Application Pool Identity

**Error Details:**
From the windows log:

The World Wide Web Publishing Service (WWW Service) did not register the URL prefix http://*:80/rfapi_v10 for site 1. The necessary network binding may already be in use. The site has been disabled. The data field contains the error number.
From the browser:

HTTP Error 403.18 - Forbidden
The specified request cannot be processed in the application pool that is configured for this resource on the Web server.

Steps followed:

Website setup:

1. In IIS, **I created an application pool with Application Pool Identity as Custom account** - Which prompts to enter username and password. **NOT** with Build-in account like ApplicationPoolIdentity which is default.
Example : TestAppPool - Identity as custom account.

2. I added new website under Default Web Site.

Example : Website name : Test
                In the 'Test' Website Settings updated the Application Pool as 'TestAppPool' (Created in step 1.)


Commands:

1. Stopping the w3svc before opencover command : C:\WINDOWS\system32>net stop w3svc

OpeCover commands:

2. Open the command window as administrator.
3. Run the command

C:\..\opencover.4.7.922>OpenCover.Console.exe -target:C:\Windows\System32\inetsrv\w3wp.exe -targetargs:"-debug -s 1"-targetdir:C:\Project\bin\ -register:user -output:"C:\opencover.xml"
Executing: C:\Windows\System32\inetsrv\w3wp.exe
Press 'Q' to shutdown the process:

4. Now start C:\WINDOWS\system32>net start w3svc

5. Browse the website startup page from IIS.

 ![image](https://user-images.githubusercontent.com/1814806/70276816-1cd18500-177f-11ea-8354-60bc6bccec7f.png)
![image](https://user-images.githubusercontent.com/1814806/70276829-265aed00-177f-11ea-8318-eecb228ca7aa.png)

![image](https://user-images.githubusercontent.com/1814806/70276902-4c808d00-177f-11ea-931e-5cde521a6ca7.png)









It would be nice to have a VSTS task readly available to execute tests with OpenCover.

If you agree I can do it and place within this repository, just tell me where would be the best place. Report Generator has a folder in [src/AzureDevopsTask](https://github.com/danielpalme/ReportGenerator/tree/master/src/AzureDevopsTask), for exemple.

### My issue is related to (check only those which apply):

- [ ] no coverage being recorded
- [ ] 32 or 64 bit support
- [x] feature request
<!--
### My Framework

- [ ] .NET 2
- [ ] .NET 3.5
- [ ] .NET 4
- [ ] .NET 4.5
- [ ] .NET 4.6
- [ ] .NET 4.6.1
- [ ] .NET 4.6.2
- [ ] .NET 4.7
- [ ] .NET 4.7.1
- [ ] .NET 4.7.2
- [ ] .NET Core 1.0.0
- [ ] .NET Core 2.0.0
- [x] Something else

### My Environment

- [ ] Windows 7 or below (not truly supported due to EOL)
- [ ] Windows 8
- [ ] Windows 8.1
- [x] Windows 10
- [ ] Windows 10 IoT Core
- [ ] Windows Server 2012
- [ ] Windows Server 2012 R2
- [ ] Windows Server 2016

### I have already...

- [ ] repeated the problem using the latest stable release of OpenCover.
- [x] reviewed the [usage guide](https://github.com/opencover/opencover/wiki/usage) and [usage document](https://github.com/opencover/opencover/blob/master/main/OpenCover.Documentation/Usage.pdf).
- [ ] have looked at the opencover output xml file in an attempt to resolve the issue.
- [x] reviewed the [current issues](https://github.com/opencover/opencover/issues) to check that the issue isn't already known.

### My issue is related to (check only those which apply):

- [ ] no coverage being recorded
- [ ] 32 or 64 bit support
- [x] feature request

### Expected Behavior



### Actual Behavior

Fill me in...

### Steps to reproduce the problem:

- [ ] reviewed the [usage guide](https://github.com/opencover/opencover/wiki/usage) and [usage document](https://github.com/opencover/opencover/blob/master/main/OpenCover.Documentation/Usage.pdf) again because we know you probably didn't do it the first time.
- [ ] sample code or link to repository/gist is available (support is much faster this way) 
-->
Please provide the following information when submitting an issue. 

> Where appropriate replace the `[ ]` with a `[X]`

### My Framework

- [ ] .NET 2
- [ ] .NET 3.5
- [ ] .NET 4
- [X] .NET 4.5
- [ ] .NET 4.6
- [ ] .NET 4.6.1
- [ ] .NET 4.6.2
- [ ] .NET 4.7
- [ ] .NET 4.7.1
- [ ] .NET 4.7.2
- [ ] .NET Core 1.0.0
- [ ] .NET Core 2.0.0
- [ ] Something else

### My Environment

- [ ] Windows 7 or below (not truly supported due to EOL)
- [ ] Windows 8
- [ ] Windows 8.1
- [X] Windows 10
- [ ] Windows 10 IoT Core
- [ ] Windows Server 2012
- [ ] Windows Server 2012 R2
- [ ] Windows Server 2016

### I have already...

- [X] repeated the problem using the latest stable release of OpenCover.
- [X] reviewed the [usage guide](https://github.com/opencover/opencover/wiki/usage) and [usage document](https://github.com/opencover/opencover/blob/master/main/OpenCover.Documentation/Usage.pdf).
- [ ] have looked at the opencover output xml file in an attempt to resolve the issue.
- [ ] reviewed the [current issues](https://github.com/opencover/opencover/issues) to check that the issue isn't already known.

### My issue is related to (check only those which apply):

- [ ] no coverage being recorded
- [ ] 32 or 64 bit support
- [ ] feature request

### Expected Behavior

All test passed

### Actual Behavior

When I run following command in CMD against my NUnit test, I get failures of test cases because of `Could not load file or assembly 'MyReference' or one of its dependencies. The system cannot find the file specified.` exception:
> .\packages\OpenCover.4.7.922\tools\OpenCover.Console.exe -target:.\packages\NUnit.ConsoleRunner.3.10.0\tools\nunit3-console.exe -register:Path64 -targetargs:"MyUnitTests.nunit /config=Debug /result=MyUnitTests.UnitTest.xml" -output:"OOPCollector.OpenCover.xml" -filter:"+[Te*]* -[*Test*]* -[*Demo*]* -[Trace*]*"

But if I run `nunit3-console.exe` successfully(all passed) in CMD directly like:

> .\packages\NUnit.ConsoleRunner.3.10.0\tools\nunit3-console.exe .\UnitTests\bin\Debug\MyUnitTests.dll

I checked `MyReference.dll` after compilered unit test project, the `MyReference.dll` is in the same folder where the `MyUnitTests.dll` is in.

The `MyUnitTests.nunit` file is:
```
<NUnitProject>
  <Settings activeconfig="Debug"/>
  <Config name="Debug">
    <assembly path="UnitTests\bin\Debug\MyUnitTests.dll"/>
  </Config>
  <Config name="Release">
    <assembly path="UnitTests\bin\Release\MyUnitTests.dll"/>
  </Config>
</NUnitProject>
```

### Steps to reproduce the problem:

- [ ] reviewed the [usage guide](https://github.com/opencover/opencover/wiki/usage) and [usage document](https://github.com/opencover/opencover/blob/master/main/OpenCover.Documentation/Usage.pdf) again because we know you probably didn't do it the first time.
- [ ] sample code or link to repository/gist is available (support is much faster this way) 

We have two solutions so we would have to run the separate commands for each of the solution by specifying the solution path in “targetdir:”. Without specifying “targetdir:” we wouldn’t get code coverage is sonarcube. Also, i have to provided output path(Same path as given while initializing sonarqube) in both batch commands. So while executing the batch command for the first solution it will calculate code coverage properly. But while executing the batch command for the second solution it doesn’t consider the previously calculated code coverage as result of this we are seeing only the result of second solution in both CodeCoverage(SonarCube) and TestResults.trx(Jenkins dashboard).

I've used -mergeoutput option but it is not merging the result.

bat """OpenCover.Console.exe "-targetdir:${pwd()}\\Central\\bin" "-output:${pwd()}\\opencover.xml" "-register:user" "-target:vstest.console.exe" "-targetargs:${pwd()}\\Central\\bin\\Central.Test.dll --logger:trx;LogFileName=${pwd()}\\TestResults\\vstest-results.trx" -mergeoutput"""

bat """OpenCover.Console.exe "-targetdir:${pwd()}\\Remote\\bin" "-output:${pwd()}\\opencover.xml" "-register:user" "-target:vstest.console.exe" "-targetargs:${pwd()}\\Remote\\bin\\Remote.Tests.dll --logger:trx;LogFileName=${pwd()}\\TestResults\\vstest-results.trx" -mergeoutput"""


Am i missing anything?
                                                                               



Please provide the following information when submitting an issue. 

> Where appropriate replace the `[ ]` with a `[X]`

### My Framework

- [ ] .NET 2
- [ ] .NET 3.5
- [ ] .NET 4
- [ ] .NET 4.5
- [ ] .NET 4.6
- [ ] .NET 4.6.1
- [ ] .NET 4.6.2
- [ ] .NET 4.7
- [ X] .NET 4.7.1
- [ ] .NET 4.7.2
- [ ] .NET Core 1.0.0
- [ ] .NET Core 2.0.0
- [ ] Something else

### My Environment

- [ ] Windows 7 or below (not truly supported due to EOL)
- [ ] Windows 8
- [ ] Windows 8.1
- [X ] Windows 10
- [ ] Windows 10 IoT Core
- [ ] Windows Server 2012
- [ ] Windows Server 2012 R2
- [ ] Windows Server 2016

### I have already...

- [ X] repeated the problem using the latest stable release of OpenCover.
- [ X] reviewed the [usage guide](https://github.com/opencover/opencover/wiki/usage) and [usage document](https://github.com/opencover/opencover/blob/master/main/OpenCover.Documentation/Usage.pdf).
- [ ] have looked at the opencover output xml file in an attempt to resolve the issue.
- [ ] reviewed the [current issues](https://github.com/opencover/opencover/issues) to check that the issue isn't already known.

### My issue is related to (check only those which apply):

- [X ] no coverage being recorded
- [ ] 32 or 64 bit support
- [ ] feature request

### Expected Behavior

code coverage should not be zero , as it is non zero on other tool. 
it should contain code classes , it showing coverage for test classes. 

### Actual Behavior

code coverage is showing 0% 
not including code classes. 

### Steps to reproduce the problem:

- [ X] reviewed the [usage guide](https://github.com/opencover/opencover/wiki/usage) and [usage document](https://github.com/opencover/opencover/blob/master/main/OpenCover.Documentation/Usage.pdf) again because we know you probably didn't do it the first time.
- [ ] sample code or link to repository/gist is available (support is much faster this way) 

Hello! I’ve looked at the Usage Guide (both the wiki page and the PDF) but neither of them explain how to get started. They both assume that the user already knows how to obtain and run OpenCover. I’ve added the OpenCover nuget package to my solution but I could not figure out how to go from there. The Usage Guide talks about a “console application” but there is no console application anywhere that I could find.

Please provide some step-by-step instructions on how to get code coverage on a project that already has unit tests in it. Do not assume that the user already knows OpenCover. Give clear and precise instructions starting from a project with unit tests but without OpenCover already installed or familiar.

This would be really great so I can try this out! Thank you!