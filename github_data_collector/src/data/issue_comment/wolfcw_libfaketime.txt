date
2019-12-27 10:20
faketime -f '+2,5m i2,0'  /bin/bash -c   'date;/usr/local/tomcat/bin/catalina.sh start &'

first time:2021-10-30 20:21:44
second time: 2021-10-30 21:08:48

M stands for minutesï¼Ÿ
I am working on reproducible builds for openSUSE and there I would like to use libfaketime to make software behave exactly as if date+time were 

- in the future
- deterministic (this is why I use the `i1` param)

e.g. I would like to use `faketime -f '@2020-01-01 01:01:01 i1'`

But one problem with stat is visible when you compare
```bash
cmd='echo $SECONDS;touch /tmp/x ; stat /tmp/x ; echo $SECONDS; sleep 1 ; stat /tmp/x ; echo $SECONDS;echo $SECONDS'
bash -c "$cmd"
faketime -f '+0y i1' bash -c "$cmd"
```

That produces
```
> bash -c "$cmd"
0
  File: /tmp/x
  Size: 7               Blocks: 8          IO Block: 4096   regular file
Device: 803h/2051d      Inode: 531866      Links: 1
Access: (0644/-rw-r--r--)  Uid: (16894/bwiedemann)   Gid: (   50/    suse)
Access: 2019-01-30 15:26:01.572086689 +0100
Modify: 2019-01-30 15:26:01.572086689 +0100
Change: 2019-01-30 15:26:01.572086689 +0100
 Birth: -
0

  File: /tmp/x
  Size: 7               Blocks: 8          IO Block: 4096   regular file
Device: 803h/2051d      Inode: 531866      Links: 1
Access: (0644/-rw-r--r--)  Uid: (16894/bwiedemann)   Gid: (   50/    suse)
Access: 2019-01-30 15:26:01.572086689 +0100
Modify: 2019-01-30 15:26:01.572086689 +0100
Change: 2019-01-30 15:26:01.572086689 +0100
 Birth: -
1
1


> faketime -f '+0y i1' bash -c "$cmd"
32
  File: /tmp/x
  Size: 7               Blocks: 8          IO Block: 4096   regular file
Device: 803h/2051d      Inode: 531866      Links: 1
Access: (0644/-rw-r--r--)  Uid: (16894/bwiedemann)   Gid: (   50/    suse)
Access: 2019-01-30 15:27:02.605862595 +0100
Modify: 2019-01-30 15:27:03.605862595 +0100
Change: 2019-01-30 15:27:01.605862595 +0100
 Birth: -
62
  File: /tmp/x
  Size: 7               Blocks: 8          IO Block: 4096   regular file
Device: 803h/2051d      Inode: 531866      Links: 1
Access: (0644/-rw-r--r--)  Uid: (16894/bwiedemann)   Gid: (   50/    suse)
Access: 2019-01-30 15:27:15.605862595 +0100
Modify: 2019-01-30 15:27:16.605862595 +0100
Change: 2019-01-30 15:27:14.605862595 +0100
 Birth: -
75
76

```

With faketime, the stat results are shifting, when nothing touched the file, which can confuse programs like make.
```sh
$ $(brew --prefix)/bin/faketime
# Works fine

$ $(brew --prefix)/bin/faketime '00:30:00' man
Caught Segmentation fault: 11
# Oh noes!
```

I'm using libfaketime from Homebrew, installed via `brew install libfaketime --build-from-source`.
```sh
$ sw_vers
ProductName:	Mac OS X
ProductVersion:	10.11.6
BuildVersion:	15G17023
```