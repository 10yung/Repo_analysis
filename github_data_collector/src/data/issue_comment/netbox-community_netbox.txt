<!--
    Thank you for your interest in contributing to NetBox! Please note
    that our contribution policy requires that a feature request or bug
    report be opened for approval prior to filing a pull request. This
    helps avoid wasting time and effort on something that we might not
    be able to accept.

    Please indicate the relevant feature request or bug report below.
    IF YOUR PULL REQUEST DOES NOT REFERENCE AN ACCEPTED BUG REPORT OR
    FEATURE REQUEST, IT WILL BE MARKED AS INVALID AND CLOSED.
-->
### Fixes: #3950 "Create and Add Another" does retain device type
<!--
    Please include a summary of the proposed changes below.
-->

Add lines to retrieve manufacture pk while `device_type` is provided.

### Proposed Changes
Create new unit tests for:
1. Create/updating/deleting webhooks
2. Placing webhook events in the queue
3. Transmitting webhooks

### Justification
We have a huge gap in our test coverage around webhooks currently, leading to bugs such as #3951.
### Environment
* Python version: 3.5.2
* NetBox version:  2.7.1

### Steps to Reproduce
1. Add Device
2. Enter Name, Role, Manufacturer, Device Type, Site and Rack (optionally Tags and Comments)
3. Click "Create and Add Another"

### Expected Behavior

Given the new feature in 2.7, I was expecting the fields to be carried forward into the next form.

### Observed Behavior

Manufacturer and Device Type are *not* carried forward (neither are Comments)

However: Role, Site, Rack and Tags *are* carried forward.
### Change Type
[X] Addition
[ ] Correction
[ ] Deprecation
[ ] Cleanup (formatting, typos, etc.)

### Proposed Changes
We should extend the installation instructions to propose the option of installing NetBox in a virtual environment. Although the process is not unique to NetBox, some users may not be aware of the option.
### Environment
* Python version:  3.6
* NetBox version:  2.6.12

### Proposed Functionality
Similar to regions, tenant groups should be nestable, in order to represent organizations with more than two levels.

For example: IT -> Infrastructure -> Network Support

### Use Case
This allows companies of any appreciable size to share one NetBox instance, while tracking organizational and team level ownership accurately, without having to resort to ugly hacks or naming conventions. 

### Database Changes
Add a `parent` attribute to the `TenantGroup` model.

### External Dependencies
None.
<!--
    NOTE: This form is only for reproducible bugs. If you need assistance with
    NetBox installation, or if you have a general question, DO NOT open an
    issue. Instead, post to our mailing list:

        https://groups.google.com/forum/#!forum/netbox-discuss

    Please describe the environment in which you are running NetBox. Be sure
    that you are running an unmodified instance of the latest stable release
    before submitting a bug report.
-->
### Environment
* Python version: 3.5.4
* NetBox version: 2.6.12

### Steps to Reproduce
1. Follow the install steps from the documentation (https://netbox.readthedocs.io/en/stable/installation/) and install from a downloaded release.
2. generate swagger schema (python3 manage.py generate_swagger -f json)

<!-- What did you expect to happen? -->
### Expected Behavior
Schema generated

<!-- What happened instead? -->
### Observed Behavior
```Traceback (most recent call last):
  File "manage.py", line 10, in <module>
    execute_from_command_line(sys.argv)
  File "/usr/local/lib/python3.5/dist-packages/django/core/management/__init__.py", line 381, in execute_from_command_line
    utility.execute()
  File "/usr/local/lib/python3.5/dist-packages/django/core/management/__init__.py", line 375, in execute
    self.fetch_command(subcommand).run_from_argv(self.argv)
  File "/usr/local/lib/python3.5/dist-packages/django/core/management/base.py", line 323, in run_from_argv
    self.execute(*args, **cmd_options)
  File "/usr/local/lib/python3.5/dist-packages/django/core/management/base.py", line 364, in execute
    output = self.handle(*args, **options)
  File "/usr/local/lib/python3.5/dist-packages/drf_yasg/management/commands/generate_swagger.py", line 120, in handle
    'settings.SWAGGER_SETTINGS["DEFAULT_INFO"] should be an '
django.core.exceptions.ImproperlyConfigured: settings.SWAGGER_SETTINGS["DEFAULT_INFO"] should be an import string pointing to an openapi.Info object
```
### Environment
* Python version: 3.6.8
* NetBox version: 2.6.12

### Proposed Functionality
Provide the ability to filter before or after a custom date field value. For example, where a CustomField named `eol_date` exists on the Device model:

`GET /api/dcim/devices/?cf_eol_date__lt=2020-01-15`

### Use Case
This allows a user to find objects based on a minimum/maximum date.

### Database Changes
None

### External Dependencies
None



<!--
    NOTE: This form is only for proposing specific new features or enhancements.
    If you have a general idea or question, please post to our mailing list
    instead of opening an issue:
        https://groups.google.com/forum/#!forum/netbox-discuss
    NOTE: Due to an excessive backlog of feature requests, we are not currently
    accepting any proposals which significantly extend NetBox's feature scope.
    Please describe the environment in which you are running NetBox. Be sure
    that you are running an unmodified instance of the latest stable release
    before submitting a bug report.
-->
### Environment
* Python version:  3.6
* NetBox version:  2.6.12
<!--
    Describe in detail the new functionality you are proposing. Include any
    specific changes to work flows, data models, or the user interface.
-->
### Proposed Functionality
Requesting to have a free-form search box added to the Interface Connections page and Console Connections page. It seems it was removed in 80d1f80.
<!--
    Convey an example use case for your proposed feature. Write from the
    perspective of a NetBox user who would benefit from the proposed
    functionality and describe how.
--->
### Use Case
It's helpful to have when prepping labels for multiple networking devices.
<!--
    Note any changes to the database schema necessary to support the new
    feature. For example, does the proposal require adding a new model or
    field? (Not all new features require database changes.)
--->
### Database Changes
NA
<!--
    List any new dependencies on external libraries or services that this new
    feature would introduce. For example, does the proposal require the
    installation of a new Python package? (Not all new features introduce new
    dependencies.)
-->
### External Dependencies
NA

### Fixes: #3840

The list of VLANs when editing an interface will now only show valid choices (i.e. now matches the form validation).

In order to achieve this, I made it so the `data-additional-query-param-*` is now a JSON-encoded list:
* Allow multiple values by calling `add_addtional_query_param` multiple times over the same key (before, it would overwrite whatever was there).
* It works well with jQuery [`.data`](https://api.jquery.com/data/#data-html5) as it attempts to cast the value to JSON by default

When testing this, do a reload-from-source, else you may get a cached version of `forms.js`.

> This is a follow up to #3589 
<!--
    Thank you for your interest in contributing to NetBox! Please note
    that our contribution policy requires that a feature request or bug
    report be opened for approval prior to filing a pull request. This
    helps avoid wasting time and effort on something that we might not
    be able to accept.

    Please indicate the relevant feature request or bug report below.
    IF YOUR PULL REQUEST DOES NOT REFERENCE AN ACCEPTED BUG REPORT OR
    FEATURE REQUEST, IT WILL BE MARKED AS INVALID AND CLOSED.
-->
### Fixes: #3509

* Added `IPAddressFormField` which `IPAddressVar` uses. Updated documentation and added test.
* Renamed `IPFormField` to `IPNetworkFormField` (it'd otherwise be confusing with the one above).
* Updated the documentation with the `min_prefix_length` and `max_prefix_length` arguments for `IPNetworkVar`.