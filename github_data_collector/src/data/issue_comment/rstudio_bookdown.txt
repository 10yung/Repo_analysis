I have tried to modify the _`output.yml ` file like this

`download: [ ["book.pdf", "PDF"], ["book.epub", "EPUB"], ["book.docx", "Word"], ["book.txt", "TXT"]]
`

However, when I render the gitbook version of the book, I end up losing the new entries, i.e. the docx and txt file in the html format. 

It should create a 
`"download": ["book.pdf", "book.epub", "book.docx", "book.txt"],`

line in the `index.html`, but it becomes

`"download": ["book.pdf", "book.epub"],`

so something appears to be hard-coded here.  Of course, if I manually add the missing elements from the list, the gitbook will look as expected, but I am curious why this is lost in rendering.
Hi! I love Bookdown and use it for basically all my teaching nowadays. One feature that I would love to see (but don't know enough about the R codebase to contribute :frowning:) is a feature recently implemented in JupyterBook, where you can run individual cells in a rendered (HTML) book. It looks like this (from [their demo book](https://jupyterbook.org/01/3/plotting_the_classics)):

![Screenshot_20200114_160209](https://user-images.githubusercontent.com/10644777/72382556-7f576280-36e7-11ea-9113-e723515fac46.png)

When you click the pencil icon, you enter "interactivity" mode where you can run that particular cell and see the output below. It does this by connecting to JupyterHub. 

For a Bookdown implementation, I would imagine that this might be achieved perhaps by using the `holepunch` R package, which allows whole projects to be opened in JupyterHub. This would be a more micro-scale; so instead of rendering the whole book in JupyterHub, I would want to the individual cells within my book to be runnable from the original page (usually I build and host my books with GitLab pages but any CI applies).

---
By filing an issue to this repo, I promise that

- [X] I have fully read the issue guide at https://yihui.org/issue/.
- [X] I have provided the necessary information about my issue.
    - If I'm asking a question, I have already asked it on Stack Overflow or RStudio Community, waited for at least 24 hours, and included a link to my question there.
    - If I'm filing a bug report, I have included a minimal, self-contained, and reproducible example, and have also included `xfun::session_info('bookdown')`. I have upgraded all my packages to their latest versions (e.g., R, RStudio, and R packages), and also tried the development version: `remotes::install_github('rstudio/bookdown')`.
    - If I have posted the same issue elsewhere, I have also mentioned it in this issue.
- [X] I have learned the Github Markdown syntax, and formatted my issue correctly.

I understand that my issue may be closed if I don't fulfill my promises.
One can change the output geometry for PDF via the [pandoc metadata field `geometry`](https://stackoverflow.com/a/13516042/4185785).

While other options such as `fontsize` or `documentclass` can be specified in `output.yml`, the `geometry` option is only picked up when set in `index.Rmd`.

Not sure if this is a bug or intended but I haven't found it document anywhere.

Example of a custom geometry in `index.Rmd`:

```yml
geometry:
  - top=1in
  - left=0.7in
  - right=0.7in
  - bottom=1in
```

---

By filing an issue to this repo, I promise that

- [x] I have fully read the issue guide at https://yihui.org/issue/.
- [x] I have provided the necessary information about my issue.
    - If I'm asking a question, I have already asked it on Stack Overflow or RStudio Community, waited for at least 24 hours, and included a link to my question there.
    - If I'm filing a bug report, I have included a minimal, self-contained, and reproducible example, and have also included `xfun::session_info('bookdown')`. I have upgraded all my packages to their latest versions (e.g., R, RStudio, and R packages), and also tried the development version: `remotes::install_github('rstudio/bookdown')`.
    - If I have posted the same issue elsewhere, I have also mentioned it in this issue.
- [x] I have learned the Github Markdown syntax, and formatted my issue correctly.

I understand that my issue may be closed if I don't fulfill my promises.

In my Bookdown project, I have both a `bookdown::pdf_book` and a `beamer_presentation` specificed in the `_output.yml`. (Why? Here is [an example](https://github.com/tamas-ferenci/FerenciTamas_ValszamEsStatAlapvonalai), and here is [the explanation](https://stackoverflow.com/questions/58885889/embedding-a-beamer-presentation-in-a-regular-document-with-rmarkdown/59013249#59013249).)

The problem is that `pdf_book` seems to respect the `output_dir` specified in `_bookdown.yml`, but not the `beamer_presentation`. Thus, when hitting the `Build Book` button, the presentation won't get into the `docs` directory, it'll appear in the base directory.

Is there any way to make `beamer_presentation` respect the `output_dir` specification?

(Also, it'll mean that something has to be done with the filenames, as by default the the names would be the same.)

(Posted in Stackoverflow [here](https://stackoverflow.com/questions/59644896/having-a-beamer-presentation-and-a-pdf-book-in-the-same-bookdown-project).)

<!--
Please keep the below portion in your issue. Your issue will be closed if any of the boxes is not checked (i.e., replace `[ ]` by `[x]`). In certain (rare) cases, you may be exempted if you give a brief explanation (e.g., you are only making a suggestion for improvement). Thanks!
-->

---

By filing an issue to this repo, I promise that

- [x] I have fully read the issue guide at https://yihui.org/issue/.
- [x] I have provided the necessary information about my issue.
    - If I'm asking a question, I have already asked it on Stack Overflow or RStudio Community, waited for at least 24 hours, and included a link to my question there.
    - If I'm filing a bug report, I have included a minimal, self-contained, and reproducible example, and have also included `xfun::session_info('bookdown')`. I have upgraded all my packages to their latest versions (e.g., R, RStudio, and R packages), and also tried the development version: `remotes::install_github('rstudio/bookdown')`.
    - If I have posted the same issue elsewhere, I have also mentioned it in this issue.
- [x] I have learned the Github Markdown syntax, and formatted my issue correctly.

I understand that my issue may be closed if I don't fulfill my promises.

I know they were changed from links which did nothing to non-links in #34 but I think that it would make sense for part headings in the navigation bar to link to whatever page is first in the part which they delineate.

The non-link behaviour was bugging me in a project I have where a Part had no subdivisions (it was a references section) so you could not navigate to it directly unless I added a redundant H1 heading i.e.

    # (PART\*) References {-}
    # References {-}

By filing an issue to this repo, I promise that

- [x] I have fully read the issue guide at https://yihui.org/issue/.
- [x] I have provided the necessary information about my issue.
    - If I'm asking a question, I have already asked it on Stack Overflow or RStudio Community, waited for at least 24 hours, and included a link to my question there.
    - If I'm filing a bug report, I have included a minimal, self-contained, and reproducible example, and have also included `xfun::session_info('bookdown')`. I have upgraded all my packages to their latest versions (e.g., R, RStudio, and R packages), and also tried the development version: `remotes::install_github('rstudio/bookdown')`.
    - If I have posted the same issue elsewhere, I have also mentioned it in this issue.
- [x] I have learned the Github Markdown syntax, and formatted my issue correctly.

I understand that my issue may be closed if I don't fulfill my promises.

# Request

It would be nice to have an auto-linking of functions used as inline and block code, similar to what {pkgdown} does.

Luckily, @krlmlr found out that one can simply do

```r
    files <- dir("bookdown/_book/", pattern = "[.]html$", full.names = TRUE)
    purrr::walk(files, ~ {
      print(system.time(pkgdown::autolink_html(.x)))
    })
```

to get {pkgdown}-like auto-linking of R code functions.
(This is of course just an example and could be replaced by code with less/zero dependencies.)

Some details to this:
- If there is a {pkgdown} site available for pkg::fun, the link will point to the reference page of the {pkgdown} site
- Otherwise, the link will point to rdocumentation.org

Right now, we achieve this by running the code above during the CI run.
However, I think it would be nice to have this available as a built-in functionality for the `gitbook` format.
Maybe even with a toggable flag somewhere.

# Example

Have a look at the first instance of `data.table()` in https://mlr3book.mlr-org.com/tasks.html.

(Others are also auto-linked but using a non-convenient hack from our side).
Just upgraded to latest bookdown (0.16) and it feels substantially slower in the final step than the previous verison.

[boyasaanuo_(Thesis).zip](https://github.com/rstudio/bookdown/files/3965437/boyasaanuo_.Thesis.zip)

I am try to use my University's _LaTeX_ template with  bookdown. I followed the discussions on stack overflow to compile my project, but I get the error message: **! LaTeX Error: Missing \begin{document}**

Attached is my project file  @yihui Xie

I filled my issue on stack overflow: https://stackoverflow.com/questions/59293577/bookdown-with-a-latex-template; but the suggestions weren't helpful to my issue. 

Would be very much glad if I could be helped **to replace the pandoc template with that of my University's _LaTeX_ template**. Thank you in advance for your aid.


<!--
Please keep the below portion in your issue. Your issue will be closed if any of the boxes is not checked (i.e., replace `[ ]` by `[x]`). In certain (rare) cases, you may be exempted if you give a brief explanation (e.g., you are only making a suggestion for improvement). Thanks!
-->

---

By filing an issue to this repo, I promise that

- [x] I have fully read the issue guide at https://yihui.org/issue/.
- [x] I have provided the necessary information about my issue.
    - If I'm asking a question, I have already asked it on Stack Overflow or RStudio Community, waited for at least 24 hours, and included a link to my question there.
    - If I'm filing a bug report, I have included a minimal, self-contained, and reproducible example, and have also included `xfun::session_info('bookdown')`. I have upgraded all my packages to their latest versions (e.g., R, RStudio, and R packages), and also tried the development version: `remotes::install_github('rstudio/bookdown')`.
    - If I have posted the same issue elsewhere, I have also mentioned it in this issue.
- [x] I have learned the Github Markdown syntax, and formatted my issue correctly.

I understand that my issue may be closed if I don't fulfill my promises.

I ran into this issue with @cderv [over on the Rstudio](https://community.rstudio.com/t/multi-paragraph-footnotes/47076) community site, and he suggested that I should open an issue here. 

If you try to use a pandoc-style multi-line footnote (as shown below) it will not be rendered in the HTML version of the book, and following footnotes in the same chapter will be mis-numbered. (It will render correctly in the PDF and ePub file, though.)

If you add an empty page at the end of your book for citations, then the footnote will incorrectly show up there (unless there are additional footnotes after it in the same chapter, in which case it won't show up anywhere, even in the references/citations page). 

Sample footnote (number 1) that will not show up anywhere, even if you include a references/citations section:
```
Here is some text with a footnote[^1] specified.

Here's another paragraph[^2] with a second footnote[^3].


[^1]: This is my multi-paragraph footnote first paragraph.

    This is a continuation of the footnote.

[^2]: Second footnote text.

[^3]: Third footnote. 
``` 

I'm running the latest code and I've done my best to provide all the necessary information, including reproducible code. But I don't know what an "xfun::session_info('bookdown')" is. Nor have I tested this on the development version. Perhaps @cderv can help me out with those?

---

By filing an issue to this repo, I promise that

- [x] I have fully read the issue guide at https://yihui.org/issue/.
- [x] I have provided the necessary information about my issue.
    - If I'm asking a question, I have already asked it on Stack Overflow or RStudio Community, waited for at least 24 hours, and included a link to my question there.
    - If I'm filing a bug report, I have included a minimal, self-contained, and reproducible example, and have also included `xfun::session_info('bookdown')`. I have upgraded all my packages to their latest versions (e.g., R, RStudio, and R packages), and also tried the development version: `remotes::install_github('rstudio/bookdown')`.
    - If I have posted the same issue elsewhere, I have also mentioned it in this issue.
- [x] I have learned the Github Markdown syntax, and formatted my issue correctly.

I understand that my issue may be closed if I don't fulfill my promises.

Could there be an option to keep the build-up files for a `bookdown::word_document2`? 

I noticed that the `bookdown` used to create `_files` to keep plot files in a `*._files` folder (pdf for Latex and png for Word). I learned from Yihui's response [here](https://github.com/rstudio/rmarkdown/issues/1553#issuecomment-482770550) that the program was designed to do so. I'm not sure since which version, this is no longer the case for the Word output. The `_files` fold will be automatically removed after the .docx file is built. Nevertheless, it could be helpful in some cases if these files could be maintained. For instance, many academic journals (at least in my area) require separate files of figures for publication. I used to send them the files in the `_files`, but now I have to manually save the plots from the output file or add saving codes everytime building up a plot in the rmd file.

Here's an illustrative example:

````rmarkdown
---
title: "title"
output: bookdown::word_document2
---


Can I keep the `*._files`?

```{r pressure, echo=FALSE}
plot(pressure)
```

````

Here's my session info, just in case:

```r
> xfun::session_info('bookdown')
R version 3.6.1 (2019-07-05)
Platform: x86_64-w64-mingw32/x64 (64-bit)
Running under: Windows 10 x64 (build 18363), RStudio 1.3.654

Locale:
  LC_COLLATE=English_United States.1252 
  LC_CTYPE=English_United States.1252   
  LC_MONETARY=English_United States.1252
  LC_NUMERIC=C                          
  LC_TIME=English_United States.1252    

Package version:
  base64enc_0.1.3 bookdown_0.16.5 digest_0.6.23  
  evaluate_0.14   glue_1.3.1.9000 graphics_3.6.1 
  grDevices_3.6.1 highr_0.8       htmltools_0.4.0
  jsonlite_1.6    knitr_1.26      magrittr_1.5   
  markdown_1.1    methods_3.6.1   mime_0.7       
  Rcpp_1.0.3      rlang_0.4.2     rmarkdown_1.18 
  stats_3.6.1     stringi_1.4.3   stringr_1.4.0  
  tinytex_0.18    tools_3.6.1     utils_3.6.1    
  xfun_0.11       yaml_2.2.0   
```
---

By filing an issue to this repo, I promise that

- [x] I have fully read the issue guide at https://yihui.org/issue/.
- [x] I have provided the necessary information about my issue.
    - If I'm asking a question, I have already asked it on Stack Overflow or RStudio Community, waited for at least 24 hours, and included a link to my question there.
    - If I'm filing a bug report, I have included a minimal, self-contained, and reproducible example, and have also included `xfun::session_info('bookdown')`. I have upgraded all my packages to their latest versions (e.g., R, RStudio, and R packages), and also tried the development version: `remotes::install_github('rstudio/bookdown')`.
    - If I have posted the same issue elsewhere, I have also mentioned it in this issue.
- [x] I have learned the Github Markdown syntax, and formatted my issue correctly.

I understand that my issue may be closed if I don't fulfill my promises.
