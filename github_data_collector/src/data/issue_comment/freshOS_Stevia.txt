Is there a way to specify heights as a percentage of superview in visual layout?

For instance, I have the following layout:

```
        layout(
            30,
            phoneImageView,
            36,
            titleLabel,
            28,
            subtitleLabel
        )
```

and I want to swap the spacing between items from a fixed one to a percentage-based one relative to the superview height, e.g. soemthing like:

```
        layout(
            10%,
            phoneImageView,
            12%,
            titleLabel,
            8%,
            subtitleLabel
        )
```

I could do `phoneImageView.top(10%)` separately, but it's not clear how to achieve that between the other views.

Also, I wondering is there is a way to specify the height of an individual view as a percentage of the superview height as well, something like:

```
        layout(
            ...
           phoneImageView ~ 30%,
            ...
```


I would expect this to return the appropriate constraints.

```
myView.Height == theirView.Height
myView.Width == theirView.Width

let h = myView.heightConstraint // nil
let w = myView.widthConstraint // nil
```
Setting the size attribute on the superview is breaking the layout for the specific view that needs that size attribute
Hi there))
```
view.heightConstraint?.constant == 0
```
is not usable, because it is nil if i set it in storyboard of xib file.

hi i have a view
[https://imgur.com/dWNRAgE](https://imgur.com/dWNRAgE)

i created a viewcontroller and i'm adding it as view in scrollview

with 

`trendingPhotoViewController!.view.heightAnchor.constraint(equalTo: scrollViewForPhotos.heightAnchor).isActive = true`

it's fine as in above image but with 

`trendingPhotoViewController.view.Height == scrollViewForPhotos.Height`
 
results in  

[https://imgur.com/I37nm4y](https://imgur.com/I37nm4y)

i'm adding the code if you need to look at it.

`var trendingPhotoViewController: UITrendingPhotoViewController!
        var previousTrendingPhotoViewController: UITrendingPhotoViewController!


        for i in 0..<data.count
        {
            previousTrendingPhotoViewController = trendingPhotoViewController
            trendingPhotoViewController = UITrendingPhotoViewController()
            scrollViewForPhotos.addSubview(trendingPhotoViewController.view)
            arrayTrendingPhotoControllers.append(trendingPhotoViewController)
            
            trendingPhotoViewController.config(data: data[i], rank: i + 1)
            
            trendingPhotoViewController.view.translatesAutoresizingMaskIntoConstraints = false
            
            trendingPhotoViewController.view.Top == scrollViewForPhotos.Top
            trendingPhotoViewController.view.Bottom == scrollViewForPhotos.Bottom
            trendingPhotoViewController.view.Height == scrollViewForPhotos.Height
            
            if i == 0
            {
                trendingPhotoViewController.view.Leading == lblTrendingPhotos.Trailing + 20
            }
            else
            {
                trendingPhotoViewController.view.Leading == previousTrendingPhotoViewController.view.Trailing
            }
            
            if i + 1 == data.count
            {
                trendingPhotoViewController.view.Trailing == scrollViewForPhotos.Trailing
            }
        }`