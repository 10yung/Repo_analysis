Forgive me if this has been asked and answered already, I couldn't find it in issues. It would be great for legibility if we could fetch icons by their class names, so `text=fa-plus` instead of `text=&#xf067;`.

They do exactly this at imgplaceholder.com:
https://imgplaceholder.com/400x400/ddd/fff/fa-plus?font-size=96

https://github.com/imsky/holder/blob/5d03b972f0082c6c640f8e9223ca897ebc24dd50/src/lib/index.js#L844

This code use image dimensions and `App.defaults.scale` which is not configurable for fontSize computing. https://github.com/imsky/holder/blob/5d03b972f0082c6c640f8e9223ca897ebc24dd50/src/lib/index.js#L660

Hence font size could not be lesser then some computed value. It would be great to set any font size.
So now when I want to have a 100% wide 16:9 image (think thumbnail) I have to calculate the height manually, I have to get the width of the (actual rendered) image and then put it through the /16*9 calculation.
One could think that something like this would render an 16:9 auto sizing image.
```
<div class="container">
    <div class="row align-items-stretch">
        <div class="col-md-12">
            <img data-src="holder.js/16x9?auto=yes"/>
        </div>        
    </div>
</div>
```

Right now with would be `holder.js/100px624?auto=yes` for a md-12 column on a large screen, but that second dimension is screen size dependent. Which makes it unusable, outside of my own development machine screen. (624=1110/16*9, with 1110 being the tested rendered width at 100%)

Maybe either and extra flag or another unit. say `100px56r` (With the r referring to ratio and thus the percentage of the actual width (forced and recalculated))

Or maybe `16rx9r?auto=yes` and that making a autoscaling (fill the container until on of the sides "hit" any thing, being height or width.)

Or an extra flag `forceAspect` with the size given in a `100px56p` type of way.

I looked at the source but I'm quite lost. Right now I tried to just wrap the script, but it is not very user friendly.

Maybe something for v3?


Setting the `size` attribute appears to have no effect in v2.9.4 when the width is set to 100%.

e.g. `<img data-src="holder.js/100px77?size=10">`

http://jsfiddle.net/1zst8z1L
follow-up to #213 - would be good to curve outlines if the placeholder has rounded corners
Hi,  I was hoping you could support Turbolinks 5.

I think I've found what code needs to be changed but don't do much Javascript and don't understand how this code is packaged.

I think what needs to be changed is here in index.js:

```javascript
if (typeof global.Turbolinks == 'object') {
  global.document.addEventListener('page:change', function() {
    Holder.run();
  });
}
```

to
```javascript
if (typeof global.Turbolinks.controller == 'object') { // Turbolinks 5
  global.document.addEventListener('turbolinks:load', function() {
    Holder.run();
  });
} else if (typeof global.Turbolinks == 'object') { // Turbolinks Classic
  global.document.addEventListener('page:change', function() {
    Holder.run();
  });
}
```

I hope this makes sense.
When combining the with auto and textmode parameters I'm seeing an incorrect width and height on first load. Once the browser is resized the correct dimensions are shown, they are always 20x20.

`holder.js/800x355?auto=true&textmode=exact`

An example:

![pattern_lab_-_pages-basic-page](https://cloud.githubusercontent.com/assets/76320/22695153/a9545824-ed41-11e6-9ec6-6377b82ce14c.jpg)

Then once browser is resized:

![pattern_lab_-_pages-basic-page](https://cloud.githubusercontent.com/assets/76320/22695179/c2db5b62-ed41-11e6-84b6-92857143da2a.jpg)

Note that this is within the Pattern Lab environment so I'm not sure if it applies on a basic static HTML page.
For example: 
![2017-01-27_08-49-15_01](https://cloud.githubusercontent.com/assets/2330394/22363851/89e73f4c-e46d-11e6-9cd3-ad6702b37a9b.png)

Thanks,
Tomasz
It would be great if we could get support for RGBA.  For example:
```
Holder.addTheme("custom", {
   bg: rgba(13, 97, 145, .1),
   fg: rgba(63, 127, 185, .4)
});
```
and
```
<img data-src="holder.js/300x200?bg=rgba(13, 97, 145, .1)&amp;fg=rgba(63, 127, 185, .4)">
```

Thoughts?
Holder with Material Icons issue [started here](https://github.com/imsky/holder/issues/200), added this new issue to follow the new (extended) issue.

Holder with Material Icons work with external resources in html. Move Material Icons external resources to css and holderjs stops working. To illustrate added jsfiddle https://jsfiddle.net/metalcactus/2uyztnyq/8/

Remove from HTML to see mmaterial icons stop working <link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons" class="holderjs">

Also never working <object data-src="holder.js/200x200?theme=vine&text=&#xE7F2;&size=50&font=Material Icons"></object>

Maybe this is to do with CORS http://stackoverflow.com/questions/39231412/if-i-link-to-an-external-css-on-a-remote-server-with-font-installed-will-it-emb
