Is it possible to instead of render the dragged component in the new position, to instead render a marker?

I'm building a form builder and things are flip flopping all over the place.
It does works correctly, but it would be a lot easier for the user if they could just see a beam marker on the insertion point, vertical/horizontal depending on direction.


Hello,
I am not if this is a question or an issue.
I am using this as a plugin in my Nuxt.js application. Everything is working perfectly, except when I have a long list of items like this:
```

- item 1
- item 2
.
.
.
- item n
```

If I want to drag **item 1** and drop it to **item n**'s position, I have to scroll down, obviously. However this is impossible to do. Am I missing something or is this a feature not available in the current version ?

Thank you for the feedback,
Billal BEGUERADJ
First check https://github.com/SortableJS/Vue.Draggable/blob/master/CONTRIBUTING.md

### version
vuedraggble:'2.15.0'
Sortable.js:'1.10'


### Expected Solution
I found replace ‘’this._sortable = new Sortable(this.rootContainer, options)’ with
‘this._sortable = Sortable.default.create(this.rootContainer, options)’ .It should work fine now.
Can I use this methods?plz give a reply.Thank u.

add typings from https://github.com/SortableJS/Vue.Draggable/issues/379#issuecomment-480109531

Im not sure how you build the npm package so all i could do was provide the file...

but with this file in the root folder of the npm package typescript users can at least import and use this awesome package
First check https://github.com/SortableJS/Vue.Draggable/blob/master/CONTRIBUTING.md
![image](https://user-images.githubusercontent.com/45302169/72201273-242a3380-348d-11ea-84a6-d3681cff5892.png)
![image](https://user-images.githubusercontent.com/45302169/72201279-2d1b0500-348d-11ea-9b9b-20f41237faf1.png)
![image](https://user-images.githubusercontent.com/45302169/72201288-3a37f400-348d-11ea-9f5f-55acd29edd49.png)
![image](https://user-images.githubusercontent.com/45302169/72201292-3d32e480-348d-11ea-99fd-dac7d11544e8.png)

They're not in the right order,I think this is a bug


![QQ图片20200110095015](https://user-images.githubusercontent.com/27262265/72119294-eb0b9980-338e-11ea-95bb-eab9cdb58945.png)

When I drag from the left to the right, the container on the right appears shadow


Hi, I have the following problem.

How can I get my  **@change** **= "log**", since I have an object like this:

```
(12) [{…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, __ob__: Observer]
0: {…}
1: {…}
2: {…}
3: {…}
4: {…}
5:
id: (...)
label: (...)
bay_type_id: (...)
vehicle_type_id: (...)
products_bay: Array(1)
 0:
   - id: 987
   - label: "CRYSTAL PT 5L"
   - address: (...)
   - location: (...)
   - critical: (...)

```


### My  code:
```
<template>
    <div class="row">
      <div v-for="bay in vehicleBays" :key="bay.id" class="flex xs3 lg3">
        <div
          class="grid__container flex-center"
          style="background-color: red; font-weight: bold"
        >{{ $t("lists.bay_label") }} {{ bay.label }}</div>

        <draggable class="list-group" :vehicleBays="vehicleBays" group="bays" @change="log">
          <div
            class="list-group-item"
            v-for="(product, index) in bay.products_bay"
            :name="product.label"
            :key="index"
          >
            <va-item>{{ product.label }}</va-item>
          </div>
        </draggable>
      </div>
  </div>
</template>

<script>
import VehicleBaysAPI from "@/services/VehicleBaysAPI";
import draggable from "vuedraggable";

export default {
  name: "drag-drop-produtcs",
  components: {
    draggable
  },
  data() {
    return {
      loadID: "",
      data: "",
      vehicleBays: ""
    };
  },
  mounted() {
    this.loadID = this.$route.params.loadID;

    VehicleBaysAPI.getVehicleBaysDraggableByLoadID(this.loadID).then(
      response => {
        this.vehicleBays = response.data;
        // console.log(this.vehicleBays);
      }
    );
  },
  methods: {
    log: function(event) {
      console.log(event);
    }
  }
};
</script>

<style lang="scss">
.list-group-item {
  cursor: grab;
  background-color: #f8f8ff;
  margin-top: 5px;
  border-radius: 10px;
}

.list-group-item :hover {
  background-color: #ff4500;
  color: #fff;
  border-radius: 10px;
}

.list-group-item i {
  cursor: grabbing;
}
</style>
``` #
I'm making a proof of concept editor in which I have two levels of drop components: groups and properties

When dragging a property into an empty group, the drop area for the property seems to be very small. 
I can only drop the property on the marked spot in the image.

For non empty groups, this works fine, I can drop the property anywhere on the surface.

Is there something that I am missing here, some setting of some sort?

<img width="688" alt="Skärmavbild 2019-12-28 kl  11 07 28" src="https://user-images.githubusercontent.com/647031/71542096-7d10ac80-2962-11ea-88f4-2803a3f8db8c.png">

I have set the `draggable` width to 100% and also a min height, added background color just to see that the area is there. but I can still only drop at the small spot for empty groups.

Ideas?
Currently `tab` accepts only string. Since render function also accepts VueComponent, it would be great if `tab` also accepts component object. So I can avoid vuetify global component registration and import the vuetify component in `data` like this.
```vue
<script>
import { VList } from "vuetify/lib";
export default {
  data: () => ({ VList })
}
</script>
```
Hi,

I think there is a problème with "ghostClass" - "chosenClass", "ghost" doesn't apply.

I use your "simple.vue" example and add 3 styles:
```
.ghost {
  opacity: 0.5;
  background: red;
}
.chosen {
  opacity: 0.5;
  background: blue;
}
.drag {
  opacity: 0.5;
  background: green;
}
```

Your component:
```
      <draggable
        :list="list"
        :disabled="!enabled"
        class="list-group"
        ghost-class="ghost"
        chosen-class="chosen"
        drag-class="drag"
        :move="checkMove"
        @start="dragging = true"
        @end="dragging = false"
      >
```
