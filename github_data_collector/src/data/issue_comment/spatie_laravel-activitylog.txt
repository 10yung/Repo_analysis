
There seems to be a performance difference between using the model->disableLogging() vs activity()->disableLogging(). This seems to stem from the latter only getting checked after the model has already created the activity and tried to log it. Seems like adding a check to the model level to see if activity logging is enabled would address it and make so that the model level doesn't have to do the work if global logging is disabled in the first place.
So I have been integrating ActivityLog into all our apps and it has worked perfectly for us.  I do have a question about how I can set a causer for console commands.  We have one environment where a great deal of the management orchestration takes place at the CLI, and I would like to track the Linux username of the person executing those commands.  Since the Linux user doesn't exist as a Laravel user, I can't just use ->causedBy().  Currently I am just adding it to the description, but would like to be able to query these in their own column for reporting.

Are there any secrets I am missing, or is adding to to description or properties the best available method?

Thanks!
Hi,

I am trying to log only changed attributes by using ```protected static $logOnlyDirty = true;``` in my model, but this is not working if I'm using [translatable attributes package by Spatie](https://github.com/spatie/laravel-translatable). it logs only English attributes and I think that's because my app locale is English.

I am using Laravel Framework 6.9.0 and spatie/activity-log ^3.9

Thank you.
Hi!
I need to save the value of my id and not the id in the properties field.

```php
<?php

namespace App;

use Illuminate\Contracts\Auth\MustVerifyEmail;
use Illuminate\Foundation\Auth\User as Authenticatable;
use Illuminate\Notifications\Notifiable;
use Spatie\Activitylog\Traits\LogsActivity;

class User extends Authenticatable
{
    use Notifiable, LogsActivity;

    /**
     * The attributes that are mass assignable.
     *
     * @var array
     */
    protected $fillable = [
        'name', 'email', 'password', 'id_rol'
    ];

    protected static $logAttributes = ['name', 'email', 'rol.nombre'];
    //protected static $logFillable = true;
    //protected static $logOnlyDirty = true;

    /**
     * The attributes that should be hidden for arrays.
     *
     * @var array
     */
    protected $hidden = [
        'password', 'remember_token',
    ];

    /**
     * The attributes that should be cast to native types.
     *
     * @var array
     */
    protected $casts = [
        'email_verified_at' => 'datetime',
    ];

    public function rol(){
        return $this->belongsTo('App\Rol');
    }

}
```
Not sure if this would be related to #598 #599, but when I use UUID and `$incrementing = false`, delete events cannot be recorded.

***Migration***

```php
Schema::create('example', function (Blueprint $table) {
    $table->uuid('id')->primary();
    $table->string('name');
    $table->bigInteger('order')->nullable();
    $table->timestamps();
    $table->softDeletes();
});
```

```php
Schema::connection(config('activitylog.database_connection'))->create(config('activitylog.table_name'), function (Blueprint $table) {
    $table->bigIncrements('id');
    $table->string('log_name')->nullable();
    $table->text('description');
    $table->uuid('subject_id')->nullable();      // example id use UUID
    $table->string('subject_type')->nullable();
    $table->uuid('causer_id')->nullable();       // user_id use UUID
    $table->string('causer_type')->nullable();
    $table->json('properties')->nullable();
    $table->timestamps();

    $table->index('log_name');
    $table->index(['subject_id', 'subject_type'], 'subject');
    $table->index(['causer_id', 'causer_type'], 'causer');
});
```

***Model***
```php
<?php

namespace App\Models;

use App\Traits\UsesUuid;
use Spatie\EloquentSortable\Sortable;
use Illuminate\Database\Eloquent\Model;
use Spatie\EloquentSortable\SortableTrait;
use Spatie\Activitylog\Traits\LogsActivity;
use Illuminate\Database\Eloquent\SoftDeletes;

class Example extends Model implements Sortable
{
    use UsesUuid, SoftDeletes, SortableTrait, LogsActivity;

    protected $fillable = [
        'name',
        'order',
    ];

    protected $hidden = [
        'updated_at', 'deleted_at',
    ];

    public $sortable = [
        'order_column_name'  => 'order',
        'sort_when_creating' => true,
    ];

    protected static $logAttributes = ['name'];
    protected static $recordEvents = ['created', 'updated', 'deleted']; // with or without $recordEvents still not work 
}

```

***Trait***
```php
<?php

namespace App\Traits;

use Illuminate\Support\Str;

trait UsesUuid
{
    public $sortable = [
        'order_column_name'  => 'order',
        'sort_when_creating' => true,
    ];

    protected static function bootUsesUuid()
    {
        static::creating(function ($model) {
            if (!$model->getKey()) {
                $model->{$model->getKeyName()} = (string) Str::uuid();
            }
        });
    }

    public function getIncrementing()
    {
        return false;
    }

    public function getKeyType()
    {
        return 'string';
    }
}
```

Any help will be appreciated. Thanks in advance.
At the moment if a causer is soft-deleted you can't see there records. Adding this config allows you to resolve soft-deleted causers as well
I am using the laravel 5.4 version. i configure activity log
but create time, not any data insert in activity log table only insert in the user table.
I attach the error screenshot. please help me.
![error](https://user-images.githubusercontent.com/49232223/69426582-93b85800-0d53-11ea-92c9-d0b17a67b4c0.JPG)

we are using Moloquent jessenqer package instead of elquent package 
so every time we want to update composer package the file Activity.php change the extends from Moloquent to Model
and we have to manually change it back 

so is there any permenent solution that we cant use the activity log with Moloquent not Eloquent
Hello, i'm trying to install but it gives an me error.
![image](https://user-images.githubusercontent.com/36394543/68889167-c4b0e100-06f2-11ea-9af5-85e5935e7d4b.png)