[requirements-django-3.0.txt](https://github.com/jazzband/django-debug-toolbar/files/4055733/requirements-django-3.0.txt)
[requirements-before-django-3.0.txt](https://github.com/jazzband/django-debug-toolbar/files/4055734/requirements-before-django-3.0.txt)

We are using postgres 12 and python 3.8.   

A couple of days ago we updated to Django 3.0 from 2.2.6 and we just noticed that the debugsqlshell is no longer showing us the SQL used for db queries.

The attached files show the before and after of the library upgrade we performed.

Note that
- We aren't seeing any error messages in the shell.   It is just the case that the SQL isn't displaying
- The debug toolbar _does_ show the SQL for db queries
- If we switch from postgres to sqlite, debugsqlshell _does_ show the SQL
   ( This isn't something we can rely on because a significant amount of our code relies on postgres specific features )
- I have attempted to just downgrade psycopg2 however it seems there is some sort of psycopg2 bug that prevents the downgrade from succeeding.

Any help would be appreciated.

Closes #1133

I'm not sure of a good way to dynamically import the postgres members. I'm definitely open to other methods.
Expands the tests for the three latest versions of Django.

* Fixes issues with Django 3.0.0 and postgres.
* Unpins mysqlclient done with https://github.com/jazzband/django-debug-toolbar/commit/995db40a2620210b82e2e5ccde3e2ddbcdeaefcb
In my usage the ProfilingPanel info is not being collected/processed, despite being enabled.

I have run in debug mode and the piece that looks most suspicious (in `generate_stats`) is that:
```
root_func = self.stats.get_root_func()
```
is returning a falsey `root_func`.

python3.6, django 2.2.6, and django debug toolbar 2.0
Hi, I'm making updates for Open Collective. Either you or another core contributor signed this repository up for Open Collective. This pull request adds financial contributors from your Open Collective https://opencollective.com/jazzband ‚ù§Ô∏è

  What it does:
  - adds a badge to show the latest number of financial contributors
  - adds a banner displaying contributors to the project on GitHub -- note: there are too many right now, and it does not show in preview. I did not know this was an issue - haven't seen it before. The image shows at the link.
  - adds a banner displaying all individuals contributing financially on Open Collective
  - adds a section displaying all organizations contributing financially on Open Collective, with their logo and a link to their website

P.S: As with any pull request, feel free to comment or suggest changes.

  Thank you for your great contribution to the Open Source community. You are awesome! üôå
  And welcome to the Open Collective community! üòä

  Come chat with us in the #opensource channel on https://slack.opencollective.com - great place to ask questions and share best practices with other Open Source sustainers!
I remember earlier, that CPU Time showed for each part of code how much time is lost. 
I am working with _Django==2.0.7_ and _django-debug-toolbar==2.0_
Now I get just this:

![image](https://user-images.githubusercontent.com/50719852/64457440-e5592b00-d0f2-11e9-8044-bd6bf69cef88.png)

Is this something that has been change, or I did something wrong?

Thanks
I did all the necessary changes required in settings.py and urls.py and I use `'django.contrib.staticfiles'` with `runserver`.
I don't have `STATIC_ROOT` but I have:
```
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static")
]
```

Still, I don't get the debug tool properly shown.

![image](https://user-images.githubusercontent.com/15799589/62763728-e1150000-baa9-11e9-9caf-55024d39094a.png)
![image](https://user-images.githubusercontent.com/15799589/62763759-f1c57600-baa9-11e9-96d1-9dc352675cf9.png)


I couldn't find an issue that requests this, so forgive me if there is one and I missed it.

Django's version of `callproc` supports a `kparams` keyword argument:

https://docs.djangoproject.com/en/2.2/topics/db/sql/#django.db.models.CursorWrapper.callproc

It would be awesome if `django-debug-toolbar` supported `kparams` as well:

https://github.com/jazzband/django-debug-toolbar/blob/master/debug_toolbar/panels/sql/tracking.py#L188

I might attempt a pull request if I had more time, but I wanted to at least start the conversation.

Thank you so much for an amazing tool! I love the insight `django-debug-toolbar` provides.
I've been trying this for a while now, as when upgrading the toolbar to the latest version (currently 2.0) starts giving `Not found` errors (see image below).

After reviewing that both the README and setup.py state that it's supporting Django 1.11, then I found that after toolbar 1.10 support for Django 1.11 was dropped: https://django-debug-toolbar.readthedocs.io/en/latest/changes.html#id4

Downgrading to `django-debug-toolbar<1.10` fixes the toolbar for Django 1.11 as expected.

Please amend the README and setup.py to reflect the actual Django versions supported.

Thanks!

![not-found](https://user-images.githubusercontent.com/3706329/60967420-8786ad80-a312-11e9-9654-05f75793d128.png)
