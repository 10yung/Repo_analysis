Hi, 

I'm quite new to R and hope somebody can help me. I would like to plot only the top e.g. five species in an RDA figure, as the other species are all overlapping and make the figure messy (see example). 

I tried to use: select = abs(sum_rda$sp) > 0.5
However, it doesn't work but also does not show any error message. 

data(varespec)
data(varechem)
ord <- rda(varespec)
summary(ord)
sum_rda <- summary(ord)

plot(ord, scaling=2, main="Triplot RDA", type="none", xlab=c("RDA1"), ylab=c("RDA2"), xlim=c(-10,20), ylim=c(-10,10))
points(scores(ord, display="sites", choices=c(1,2), scaling=2), 
       pch=21, col="black", cex=1.2)
arrows(0,0, 
       scores(ord, select = abs(sum_rda$sp) > 0.5, display="species", choices=c(1), scaling=2)*2,  
       scores(ord, select = abs(sum_rda$sp) > 0.5, display="species", choices=c(2), scaling=2)*2,
       col="black",length=0, lty = 1)

text(scores(ord, select = abs(sum_rda$sp) > 0.5,  display="species", choices=c(1), scaling=2)*2.1,
     scores(ord, select = abs(sum_rda$sp) > 0.5,  display="species", choices=c(2), scaling=2)*2.1,
     labels=rownames(scores(ord, display="species", scaling=2)),
     col="black", cex=0.8)   

![image](https://user-images.githubusercontent.com/37101233/72667466-6f5bbd80-3a1c-11ea-826b-aab32ddc3328.png)

Thanks for considering my request
Hi,

I'm using permanova tests to evaluate the significance of a given factor in my dataset. Everything runs but I get surprising results, and I'm wondering if it's correct or if there could potentially be an issue with either the package or with the data itself.

Using `adonis`, I was able to test that my factor ("color") was significant. However, I want to have more details about the significance and compare each pair of levels: For example, I want to test whether the sample in the "Red" color group are statistically different from the samples in the "Purple" color group. 

To do that, I extract from my data all samples corresponding to 2 given colors, and I run adonis on the subset:

```
condition1 <- (metadata$color == 'Blue') | (metadata$color == 'Purple')
adonis(otu_table[condition1, ] ~ metadata$color[condition1], perm=50)

condition2 <- (metadata$color == 'Blue') | (metadata$color == 'Red')
adonis(otu_table[condition2, ] ~ metadata$color[condition2], perm=50)

condition3 <- (metadata$color == 'Red') | (metadata$color == 'Purple')
adonis(otu_table[condition3, ] ~ metadata$color[condition3], perm=50)
```

My problem is that for all 3 comparisons, I get exactly the same p-value, `0.01961` (everything else is different: R2, F.model, ...). It looks very suspicious to me since I'm comparing different sample groups. 
Do you have an idea what could cause this issue? 
I also tried the `pairwise.adonis()` package to do these pairwise comparisons but I got the same problem (and exactly the same p-value).

Thank you for your help

Hello, 

I am relatively new to using vegan (and to analyzing microbiome data in general). I apologize if this seems like a silly question. 

I am using adonis2 to test for significance between unifrac measures for two groups over time (treatment and controls). However, I also want to take into account the variance due to cage effects. My model looks like this: 
```r
adonis2(dist_rarefied17_unifrac ~ Time + Group + Cage, data=miceV4, 
    permutations=999, method="unifrac", by="margin")
```
From what I could tell by reading information about adonis2, adding "by=margin", seems to allow for all variables to be taken into account evenly (not sequentially as with "by=terms"). Therefore, I would assume that the output would be similar to that of a standard regression. However, the degrees of freedom for the degrees of freedom and the R-squared value for my 'Group' variable is zero and the F-value is -Inf. Further, the degrees of freedom for my 'Cage' variable is one less than it should be. 

I thought that maybe the zeros for the 'Group' variable simply meant that it does not contribute to or explain any of the observed variance. However, this doesn't explain the discrepancy with the degrees of freedom. I hope this makes sense. Any help in understanding how this function works with the "by=margin" option would be much appreciated!
Suppose I have a distance matrix created by applying the weighted unifrac measure. For instance, using a `phyloseq` object: 

```
weighted_unifrac = UniFrac(
  physeq=ps,
  weighted=T,
  normalized=T,
  parallel=T,
  fast=T
)
```

`weighted_unifrac` is now a distance matrix. Then I perform PERMANOVA using `adonis`, and showing the default `method` parameter:

```
permanova = adonis(
  formula=weighted_unifrac ~ CaseString, 
  data=sample_data,
  permutations=999,
  method='bray'
  )
```

What is `method` doing here? I think of Bray-Curtis as a way to generate the distance matrix itself. How would my choice of another `method` value affect my PERMANOVA analysis?
Hi there,

I am trying to run what is seemingly turning out to be a very large PERMANOVA by calling adonis in vegan in R 3.5.1.  In the script, which I am running off of our institution's large server, I first include a reduced version of the adonis, using the same data. Next, I include the adonis which includes all variables that I am testing, each of which has been meticulously scanned for missing data to remove.

When I read the output file, the first small adonis works great, but the full adonis terminates with the note: 

`Error: protect(): protection stack overflow`

I have tried using both  `--max-ppsize=500000` at startup of R and `options(expressions = 5e5)` from within R before the analysis, to no avail. Always the same error. Has anyone experienced this before? How did you get around it? Unfortunately our research group has decided that it is not statistically sound to analyze the variables in chunks, although that works in the adonis. 

Also, is there a difference between adonis and adonis2 that could be useful?

Thank you so much, I very much appreciate it! I can send you my script and files if requested. 

Cheers,
Katie
I have done beta diversity analysis using phyloseq PCoA on rarefying OTU data with bray distance and now for statistical significance, I want to use adonis function from vegan so should I use the same rarefying table in vegan with below command:

pmv =adonis(werra_sp_rerefy ~ Region, data= werra_env, permutations = 999, method = 'bray')

Is it be Ok or should I do PCoA analysis in vegan itself?

I am not sure how to do PCoA analysis in vegan? could you please suggest the command for it?

thank
color the ordilabel figured below.
![image](https://user-images.githubusercontent.com/1230436/50534649-8bbf5a80-0b7a-11e9-99ec-ec8b694550a8.png)
Updated version for #298

Hi,

I have a question regarding the calculation of fisher alpha when abundance and number of species are 0 (probably a question more conceptual than practical). When I compute fisher alpha with the fisher.alpha function the result is 1:

```R
library(vegan)

# a data.frame of 3 columns with the first row filled with 0 and the second filled with 2. 
# The second row serves as control for my calculation (see below). 
# The third row is filled with 2202 that returns an alpha equal to 1.

ex <- as.data.frame( t( matrix( c( rep( 0 , 10 ), rep( 2 , 10 ), rep( 2202 , 10 ) ), ncol = 3) ) )
ex

# result for the first and third columns is 1
fisher.alpha(ex)

```

The problem is that the first and the third rows have exactly the same result despite the first row consisting of 0's only. Then I came across the book from Magurran (2004) “Ecological Diversity and its measurement”, where she propose to calculate alpha following:

S/N = (1 – x) / x*[ -ln(1 – x)]
alpha = N( 1 – x ) / x

where S is the number of species, N the number of individuals and x the log series distribution parameter.
I tried to calculate alpha according to Magurran 2004 and the results for the first columns is 0, while those for the second and the third columns are nearly the same of fisher.alpha results:

```R
# function for calculating fisher alpha according to Magurran et al. (2004)
fa.mag <- function(z){
  abu <- sum( z )
  ntaxa <- sum(z > 0)
  fn <- function( r , n , x )( abs( ( 1 - x )* n / x * ( -log( 1 - x ) ) - r ) )
  temp <- optimize( f = fn , interval = c( 0 , 1 ) , n = abu , r = ntaxa , tol = 0.0000001)[[1]]
  alpha <- abu * ( 1 - temp ) / temp
}

apply(ex, 1 , fa.mag)

```

Results are more understandable for me now, but I’m not sure if I interpreted the fisher alpha in the right way. The drawback for the Magurran et al. calculation is that when abundance become very high (2*10^8) x approaches 1 and alpha become greater than 1 again (probably is a problem of my bad coding). The behaviour of the 2 functions for large numbers is showed below:

```R
Seq = c(seq(from = 0, to = 9990, by = 10), seq(from = 10000, to = 10000000, by = 100000))
ex2 = as.data.frame(matrix(0, nrow = length(Seq), ncol = 10))
for(i in 1:length(Seq)){
  ex2[i,] = rep(Seq[i], 10)
}


veg.res <- fisher.alpha(ex2)
mag.res <- apply(ex2,1, fa.mag)

par(mfrow = c(1,2))
plot(veg.res, ylim = c(0,3), type = "l")
abline(h = 1, lty = 2, col = "red")
plot(mag.res, ylim = c(0,3), type = "l")
abline(h = 1, lty = 2, col = "red")
```


What the value of fisher alpha should be when both abundance and species richness are 0? This could happen when a user use a subset of a data.frame.

Thank you very much, regards.
Alex


```R
sessionInfo()

R version 3.4.4 (2018-03-15)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Ubuntu 16.04.5 LTS

Matrix products: default
BLAS: /usr/lib/libblas/libblas.so.3.6.0
LAPACK: /usr/lib/lapack/liblapack.so.3.6.0

locale:
 [1] LC_CTYPE=it_IT.UTF-8       LC_NUMERIC=C               LC_TIME=it_IT.UTF-8       
 [4] LC_COLLATE=it_IT.UTF-8     LC_MONETARY=it_IT.UTF-8    LC_MESSAGES=it_IT.UTF-8   
 [7] LC_PAPER=it_IT.UTF-8       LC_NAME=C                  LC_ADDRESS=C              
[10] LC_TELEPHONE=C             LC_MEASUREMENT=it_IT.UTF-8 LC_IDENTIFICATION=C       

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
[1] vegan_2.4-5     lattice_0.20-35 permute_0.9-4  

loaded via a namespace (and not attached):
[1] MASS_7.3-50     compiler_3.4.4  Matrix_1.2-14   parallel_3.4.4  tools_3.4.4    
[6] mgcv_1.8-25     nlme_3.1-137    grid_3.4.4      cluster_2.0.7-1
```




First, I want to thank for making such a great package for multivariate and ecological community analyses! I use vegan a lot in my work. One thing I constantly miss is the possibility to quickly glance the inertia explained by axes in CA and CCA plots. Therefore, I normally have to modify the plots. Something that takes time, if you want to mass produce biplots to look at your data from several different angles. I thought of sharing my solution here in the hope that something similar would appear in the package in the future :)

```r
#' @title Get percent of total inertia explained by principal or constrained axes
#' @param mod cca.object
#' @param axes A numeric vector indicating the axes for which percent explained inertia should be returned for
#' @return Returns a named vector containing explained inertia as percentages. Returns constrained inertia fo CCA and unconstrained for CA

axis.expl <- function(mod, axes = 1:2) {
  
  if(is.null(mod$CCA)) {
    sapply(axes, function(i) {
    100*mod$CA$eig[i]/mod$tot.chi
    })
  } else {
    sapply(axes, function(i) {
    100*mod$CCA$eig[i]/mod$tot.chi
    })
  }
    
}

## Lets try it:

data("dune")

x <- cca(dune)

(labs <- axis.expl(x))

#      CA1      CA2 
# 25.33987 18.91696 

## Add to plot

plot(x, xlab = "", ylab = "")

title(xlab = paste0(names(labs[1]), " (", sprintf("%.1f", labs[1]), "%)"))
title(ylab = paste0(names(labs[2]), " (", sprintf("%.1f", labs[2]), "%)"))
```

If there already is such a feature, please correct me :)
@tpoisot comment on Twitter how verbose the outputs from some `summary` methods are for ordination models. These don't so much as summarise a fit but provide detailed output including lots of axis score data.

I copied vegan when writing `summary()` methods for my cocorresp pkg and am not changing those because the verbosity of output just isn't useful to anyone.

Would anyone freak out too much if I took a look at vegan's `summary` methods for ordination objects and propose changes that would shorten them?
