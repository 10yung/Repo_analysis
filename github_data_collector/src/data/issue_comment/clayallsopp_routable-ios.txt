Please consider merging. This allows routable to be used with custom presentations. 
if I want to use tabBarController as rootVeiwController,What should I do? please
- (id)initWithRouterParams:(NSDictionary *)params {
  if ((self = [self initWithNibName:nil bundle:nil])) {
    self.title = @"Modal";
  }
  return self;
  }

The above code in the Swift how to write


In - (UIViewController *)controllerForRouterParams:(RouterParams *)params method

use performselector to excute will be lead memory leak. viewController will not be excute dealloc method

so, I use nsInvocation replace the performselector.

In - (UIViewController *)controllerForRouterParams:(RouterParams *)params method

use performselector to excute will be lead memory leak. viewController will not be excute dealloc method

so, I use nsInvocation replace the performselector.

hi man ,
      why not add a method just like 'map:(NSString *)format toController:(NSString *)controllerClassName', so that the user don't need to add 'import "ControllerClass.h"'
3ks

All tests pass fine when run in iOS 7, but in iOS 8 the above tests fails on the assert

```
XCTAssertTrue([USER_ID isEqualToString:@" "], @"Should have an empty ID");
```

It looks like USER_ID is coming through as an empty string. I tried poking around, but couldn't see why this would be happening.

I recently had the need to stack multiple modal navigation controller in my app. Therefore I added a shouldDismissPresentedViewController property to the options to enable this functionality in my app.
Maybe someone else finds that functionality useful :)

Hey Clay,

Nice stuff, this is cool code.  Thanks for making it available!

How would you handle thinks like "routing exceptions"?  But that I don't mean thrown exceptions, but rather something "show the /users/:id mapped view controller in a modal EXCEPT if some condition holds, then show it in some other way".  For example, if something in a nav controller already showing in a modal asks to show the users controller in a modal, maybe the users controller should just be pushed on the stack of the nav controller inside the existing modal, instead of dismissing or presenting another modal ...

Thoughts?

I'd be happy to help with a PR, but I'm just curious as to your thoughts on this because this is such a nicely-architected piece of code.

Thanks.
