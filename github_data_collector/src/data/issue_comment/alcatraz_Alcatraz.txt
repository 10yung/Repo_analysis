http://alcatraz.io

does not resolve

![screen shot 2018-03-15 at 22 36 24](https://user-images.githubusercontent.com/49612/37494586-5954b02a-28a1-11e8-9d61-0662dd69a66e.png)

https://github.com/XVimProject/XVim/blob/master/INSTALL_Xcode8.md

looky here! i tried it, and it worked. xvim installed and is working, and alcatraz was built and installed. the problem is that i cannot install plugins, i get an error while compiling or something.
im sure some of you guys can figure this out, since you probably know more than me about how to integrate alcatraz.

As discussed in https://github.com/alcatraz/Alcatraz/issues/454, plugins using git submodules need to run `git submodule update` after a `fetch` to update their dependencies to the right commit.

> [**git submodule update**](https://git-scm.com/docs/git-submodule)
> Update the registered submodules to match what the superproject expects by cloning missing submodules and updating the working tree of the submodules.

This is also related to https://github.com/alcatraz/Alcatraz/pull/465, which fixed the initial clone for plugins using submodules.

Changes:
- Add option `--recurse-submodules=on-demand` to the `fetch` command to recursively fetch submodules commits;
- Add command `git submodule update` after successful `git fetch` and `git reset --hard` to make the submodules checkout the right commits.

Note: Not a big fan of the pyramid-callbacks-style in `+[ATZGit updateLocalProject:revision:completion:]`, if you have a better idea, I'll take it :)

As discussed in https://github.com/alcatraz/Alcatraz/issues/479, we didn't handle errors very well in ATZDownloader.

> My intuition is that we're not handling network errors well. So you probably had an error when Alcatraz downloaded the gif (which is quite large), and we cached it anyway.

This PR fixes that, and should somewhat improve performances (see below):
- Check for the `error` parameter in `URLSession:task:didCompleteWithError:` to handle client side errors;
- Check for the HTTP response status code, and return an NSError for any code other than 200;
- Replace NSURLSessionDownloadTask with NSURLSessionDataTask, so the downloaded files are never written to disk (since we always loaded them in memory anyway);
- Remove strong references to callbacks after task completion.

Hi, I found some memory leak issues by Instruments & static analyzer.

Hope it helps.

All inputs are accepted, and fetching the package list from an invalid URL does nothing. No error is displayed, nothing is logged.

Related to #462.

Some plugins fail to install properly (SublimeShortcuts-ObjC for example) because the `xcodebuild install` command fails.

They are still reported as installed because in the build process the `PluginName.xcplugin` folder is created in `~/Library/Application Support/Developer/Shared/Xcode/Plug-ins` and that's all we are checking to determine if a plugin is installed.

We should use `-[NSTask terminationStatus]` to ensure the build exited with a `0` error code.

Today we only display a blank view, without any info.

Inspired by #458. We should probably show the repo URL if it's not the default one and no package was loaded.

Inspiration:
https://github.com/dzenbot/DZNEmptyDataSet
http://emptystat.es/

It may not need to display the stars number as [issue-422](https://github.com/alcatraz/Alcatraz/issues/422) mentioned.
But I think adding a button to quickly star a plugin can encourage the developer.

Hello!

I'm an author and maintainer of a couple few Xcode plugins (notably [Better Console](https://github.com/cppforlife/betterconsole), [Cedar Shortcuts](https://github.com/cppforlife/cedarshortcuts) and [Better Refactor Tools](https://github.com/tjarratt/xcode-better-refactor-tools)). A few people have asked me to make these installable via Alcatraz, and I was pretty excited to do this.

Unfortunately I learned that my plugins aren't installable because they have dependencies that I track via git submodules. I took a look at a few other plugins and it looks like none of them link against frameworks, so maybe I'm unique in having this problem? 

I believe that my plugins could be installed by Alcatraz if the following changed...
1. issue the  `git submodule update --init --recursive` command after cloning a repo 
   - for projects with submodules, these need to be updated before building
2.  `xcode clean build ...` should be able to take in the scheme name
   - since build settings such as `FRAMEWORK_SEARCH_PATHS` are stored on the scheme, rather than the target, any plugin that wants to link against a framework or have other build settings will need to specify the scheme.

Would a PR adding the optional `uses_submodules` and `scheme_name` flag to the package JSON format, along with some changes to the `ATZPluginInstaller` class to support this be well received? I haven't dug into the code too deeply, perhaps there's a better place where this behavior could be implemented? 

Also, I'm a strong believer in TDD. Are there tests for the Alcatraz plugin that I can refer to? I'd love to be able to contribute tests for these changes.
