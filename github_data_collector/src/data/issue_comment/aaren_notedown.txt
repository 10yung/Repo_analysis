I forked Notedown to [knitty](https://github.com/kiwi0fruit/knitty). And there's neither entry points nor module names conflicts. Fixed docs accordingly.
沐神，我用Ubuntu16.04+Python2.7来配置这个环境，发现装不了notedown，是不是不支持Python2.7啊
I have this .ipymd notebook with a simple one-line, _long_ header:

`# This is an example of a long header, with many, many words. This really is an example of a long header, with many, many words.`

notedown incorrectly produces the following Markdown:

\# # This is an example of a long header, with many, many words. This really
is an example of a long header, with many, many words.

I see two problems:

- Big problem: there should be not _line break_ (after "This really").
- The (say HTML) rendered output should not show "# This is an example…" but "This is an example…", like in the notebook, right?

I could not find where in the code the header is broken.

More generally, the Markdown from Markdown cells should probably be left untouched too, no?
From your Readme.md

```markdown
Editing in the browser (new!)
You can configure IPython / Jupyter to seamlessly use markdown as its storage format. Add the following to your config file:

c.NotebookApp.contents_manager_class = 'notedown.NotedownContentsManager'
Now you can edit your markdown files in the browser, execute code, create plots - all stored in markdown!

For Jupyter, your config file is jupyter_notebook_config.py in ~/.jupyter.
```

For Jupyter lab:

```bash
jupyter-lab --generate-config
```

The method you provided works nicely with jupyter notebook, but is not working like that for Jupyter lab.
Could you please extend the support to Jupyter-lab.

Switched travis CI to Ubuntu Trusty and more recent version of R
This should allow pull request #69 to pass CI
When exporting from Notebook to MD, the lines are wrapped to 80 characters.
When the Notebook contains tables with rows longer than 80 characters, the lines are wrapped but this causes issues with how the table is rendered (Github for example).
Most rendering assumes the wrapped line is a new row in the table, and the table is not rendered correctly.

Could a command line argument be added to allow setting the line wrap? On or off, or width?

## Correct formatting (without line wrap):

```
| H1 | H2 |
|:---  |:---  |
|This is an example | Of what happens with line wrap |
```

| H1 | H2 |
|:---  |:---  |
|This is an example | Of what happens with line wrap |

## Incorrect formatting (with line wrap):

```
| H1 | H2 |
|:---  |:---  |
|This is an example | Of what
happens with line wrap |
```

| H1 | H2 |
|:---  |:---  |
|This is an example | Of what
happens with line wrap |
I've seen that you offer support of Rmd notebooks in Jupyter by modifying the jupyter config file. That is very nice already!

Don't you think it would be nice to have official support by Jupyter for these notebooks?
In this direction I have opened https://github.com/jupyter/notebook/issues/3694

Regards


The `LICENSE` is currently not included in the source tarball. 
When I tried to convert a jupyter notebook which contained Chinese characters, UnicodeEncoderError occurs like this:
I have tried to install `notedown` using the two methods provided in `README`: pre-compiled package and lastest from github. And Python 2.7/3.6 are tested. Tested on Mac OS and Ubuntu16.04.

```
/Users/me/anaconda2/lib/python2.7/site-packages/IPython/html.py:14: ShimWarning: The `IPython.html` package has been deprecated. You should import from `notebook` instead. `IPython.html.widgets` has moved to `ipywidgets`.
  "`IPython.html.widgets` has moved to `ipywidgets`.", ShimWarning)
Traceback (most recent call last):
  File "/Users/me/anaconda2/bin/notedown", line 11, in <module>
    load_entry_point('notedown==1.5.1', 'console_scripts', 'notedown')()
  File "/Users/me/anaconda2/lib/python2.7/site-packages/notedown/main.py", line 312, in app
    main(args, help=parser.format_help())
  File "/Users/me/anaconda2/lib/python2.7/site-packages/notedown/main.py", line 301, in main
    writer.write(notebook, unicode_std_stream('stdout'))
  File "/Users/me/anaconda2/lib/python2.7/site-packages/nbformat/v4/rwbase.py", line 126, in write
    nbs = cast_unicode_py2(self.writes(nb, **kwargs))
  File "/Users/me/anaconda2/lib/python2.7/site-packages/notedown/notedown.py", line 434, in writes
    body, resources = self.exporter.from_notebook_node(notebook)
  File "/Users/me/anaconda2/lib/python2.7/site-packages/nbconvert/exporters/templateexporter.py", line 203, in from_notebook_node
    output = self.template.render(nb=nb_copy, resources=resources)
  File "/Users/me/anaconda2/lib/python2.7/site-packages/jinja2/environment.py", line 1008, in render
    return self.environment.handle_exception(exc_info, True)
  File "/Users/me/anaconda2/lib/python2.7/site-packages/jinja2/environment.py", line 780, in handle_exception
    reraise(exc_type, exc_value, tb)
  File "/Users/me/anaconda2/lib/python2.7/site-packages/notedown/templates/markdown.tpl", line 1, in top-level template code
    {% extends 'display_priority.tpl' %}
  File "/Users/me/anaconda2/lib/python2.7/site-packages/nbconvert/exporters/../templates/skeleton/display_priority.tpl", line 1, in top-level template code
    {%- extends 'null.tpl' -%}
  File "/Users/me/anaconda2/lib/python2.7/site-packages/nbconvert/exporters/../templates/skeleton/null.tpl", line 26, in top-level template code
    {%- block body -%}
  File "/Users/me/anaconda2/lib/python2.7/site-packages/nbconvert/exporters/../templates/skeleton/null.tpl", line 28, in block "body"
    {%- block any_cell scoped -%}
  File "/Users/me/anaconda2/lib/python2.7/site-packages/nbconvert/exporters/../templates/skeleton/null.tpl", line 30, in block "any_cell"
    {%- block codecell scoped -%}
  File "/Users/me/anaconda2/lib/python2.7/site-packages/nbconvert/exporters/../templates/skeleton/null.tpl", line 31, in block "codecell"
    {%- block input_group -%}
  File "/Users/me/anaconda2/lib/python2.7/site-packages/nbconvert/exporters/../templates/skeleton/null.tpl", line 33, in block "input_group"
    {%- block input -%}{%- endblock input -%}
  File "/Users/me/anaconda2/lib/python2.7/site-packages/notedown/templates/markdown.tpl", line 4, in block "input"
    {{ cell | create_input_codeblock }}
  File "/Users/me/anaconda2/lib/python2.7/site-packages/notedown/notedown.py", line 477, in create_input_codeblock
    return codeblock.format(attributes=attrs, fence='```', cell=cell)
UnicodeEncodeError: 'ascii' codec can't encode characters in position 85-86: ordinal not in range(128)
```
With pandoc installed the `setup.py` failed because pandoc seems to introduce non ascii characters. Repeating the commands from `setup.py`
```
>>> import subprocess
>>> pandoc = subprocess.Popen(['pandoc', 'README.md', '--to', 'rst'], stdout=subprocess.PIPE)
>>> readme = pandoc.communicate()[0]
>>> readme.decode()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
UnicodeDecodeError: 'ascii' codec can't decode byte 0xe2 in position 3325: ordinal not in range(128)
>>> readme[3310:3340]
's using Ipython\xe2\x80\x99s ``%%`` `ce'
```

computer: linux, archlinux
pandoc version 2.0.6
tested on python 2.7.14

See also [downstream issue](https://trac.sagemath.org/ticket/24901).