apologies for pedantry!

I saw a link to your repo in the Open Group AAF doco and like the look of this (not tried it yet)
This is a feature request.

Overload template file name and directory file name with arguments.

Use case would be to use `adr` command to manage other type of markdown files, e.g.:

```sh
alias prd='adr --template-file prd_template.md --dir-file .prd-dir'
```

This way we could create PRD files with the very same tool while steel being able to create ADR files:

```sh
adr new Use adr-toolset to manage PRDs as well
prd init doc/architecture/drivers/
prd new Needs to be testable
prd new Needs to be expandable
prd link 1 "Mentioned in" 2 "Can't break"
adr list # lists existing ADR documents
prd list # lists existing PRD documents
```

This fixes the error I get when trying to run the init command on osx using either system's bash 3.2 or homebrew's 5.0.7.

Error message was:
```
$ adr init docs/architecture
/usr/local/Cellar/adr-tools/3.0.0/bin/_adr_dir: line 16: [: too many arguments
doc/adr/0001-record-architecture-decisions.md
```

Probably more things should be quoted in this codebase.
Providing a different perspective on the feature request in #51 

We're looking into using this tool to manage a centralised adr repository for adrs spanning multiple repos and teams.
For organisational purposes we would like to reflect our internal team structure through the usage of (sub-)directories.
Would it be possible to have the `adr new` command accept a relative path to the root (where `adr init` was run/where .adr-dir points to).
I do recognise this would probably create problematic interactions with the link and supersede functionality but I'm open for a discussion on those potentially problematic areas.
I am somewhat confused by this clause in the LICENSE.txt

> Content that this tool adds to your project is under the
> [Creative Commons Attribution 4.0 (CC BY 4.0)](https://creativecommons.org/licenses/by/4.0/) licence.

Does this only apply to the automatically generated phrasing of the ADRs? It surely does not apply to the content that you fill in, does it? It may be helpful to clarify this.
Docker image based on alpine Linux - so it has 10 MB total.
It uses multi-stage build to run tests.
It would be ideal if we could include the status of each ADR in the table of contents.

The intended use is:

```markdown
$ adr generate toc -s
# Architecture Decision Records

* [1. Record architecture decisions](0001-record-architecture-decisions.md): Accepted
* [2. Implement as shell scripts](0002-implement-as-shell-scripts.md): Accepted
* [3. Single command with subcommands](0003-single-command-with-subcommands.md): Accepted
* [4. Markdown format](0004-markdown-format.md): Accepted
* [5. Help comments](0005-help-comments.md): Amended by [9. Help scripts](0009-help-scripts.md)
* [6. Packaging and distribution in other version control repositories](0006-packaging-and-distribution-in-other-version-control-repositories.md): Accepted
* [7. Invoke adr-config executable to get configuration](0007-invoke-adr-config-executable-to-get-configuration.md): Accepted
* [8. Use ISO 8601 Format for Dates](0008-use-iso-8601-format-for-dates.md): Accepted
* [9. Help scripts](0009-help-scripts.md): Amends [5. Help comments](0005-help-comments.md)
```

I made the decision to only keep the last line under the _Status_ section so that amendments are properly printed with their links.
Hi, I am unable to get adr-tools working with cmder on Windows 10. Is it supported?
Hi !

I definitely love this !

But would it be possible to add some i18n support so that

- the `adr generate toc` command outputs a locale aware title
- the `adr init [...]` creates a localized version of the first decision

Thanks in advance !
