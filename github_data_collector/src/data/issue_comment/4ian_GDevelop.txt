## Describe the bug
Is this screen there are two problem.
- Value is depending the zoom on mask preview, and du to this zoom we have float number very long.
- Predefined value are understandable.

Image size 16x16px

![image](https://user-images.githubusercontent.com/1670670/72570905-7076d880-38be-11ea-8419-7bc93c43fad8.png)

## Other details
* B88
## Description
Sometimes, you want to get all the data of an object to save a snapshot of your scenes state (saving data) or in my case get it to synchronize it between users in an online multiplayer game context. It is already possible but tidious and has to be adapted for each object type.

## Solution suggested
Make a serializer and deserializer method to export and restore the pertinent data from an object. Then make an extension with actions to call those serializer on the object and stores them in variables and get such data from variables and restore it to an object.

## Alternatives considered
As I said this is already possible but tidious and not very cross gd version compatible as you might want to store some internal values and do it through Js and if one property changes it's screwed while a serializer would automatically change but would still return old versions compatible serialized data.
+ Add prefix Sprite to typedefs
+ Add periods in typedefs parameters
+ Add dirty typing of the extraInitializationFromInitialInstance method of SpriteRuntimeObject
And add typing to it's properties. 
*And also moved AABB typedef with the others at the top

If it's accepted(merged), I will add an extension to use it inside GDevelop and serialization to every extension's objects
## Description

GDevelop online build feature is great and it will be lovelier if we would have the features below.

1.  As a user I should be able to add/customize/configure parameters on the `AndroidManifest.xml` for online android builds to support special builds described in issue #1355[](https://github.com/4ian/GDevelop/issues/1355)

2.  As a user I should be able to add an **existing** public key certificate `.keystore` for online builds so we can port/migrate existing android mobile games to GDevelop. 

## Solution suggested
It can be configured on the Properties page. 

![image](https://user-images.githubusercontent.com/29979672/72213209-8b93c200-3525-11ea-87e2-23299252f258.png)

## Alternatives considered
Alternatively, the files can just be placed on the root folder and the Online build should be able to pick it up.
![image](https://user-images.githubusercontent.com/29979672/72213243-0eb51800-3526-11ea-9916-d7547b617135.png)

Hope it can be a useful feature for all of us. 

Cheers,
Rozs

=> Please write here a short description of when the error occured and how to reproduce it.
You also may have to create an account on GitHub before posting.

When you're ready, click on "Submit new issue". Don't change the rest of the message. Thanks!

## Error stack (don't write anything here)
```
Error: Failed to execute 'createPattern' on 'CanvasRenderingContext2D': The image argument is a canvas element with a width or height of 0.
    at t._renderCanvas (https://editor.gdevelop-app.com/static/js/0.2de5b38b.chunk.js:1:1131826)
    at t.renderCanvas (https://editor.gdevelop-app.com/static/js/0.2de5b38b.chunk.js:1:244032)
    at t.renderCanvas (https://editor.gdevelop-app.com/static/js/0.2de5b38b.chunk.js:1:244109)
    at t.renderCanvas (https://editor.gdevelop-app.com/static/js/0.2de5b38b.chunk.js:1:244109)
    at t.renderCanvas (https://editor.gdevelop-app.com/static/js/0.2de5b38b.chunk.js:1:244109)
    at t.renderCanvas (https://editor.gdevelop-app.com/static/js/0.2de5b38b.chunk.js:1:244109)
    at t.renderCanvas (https://editor.gdevelop-app.com/static/js/0.2de5b38b.chunk.js:1:244109)
    at t.render (https://editor.gdevelop-app.com/static/js/0.2de5b38b.chunk.js:1:247570)
    at t.n._renderScene (https://editor.gdevelop-app.com/static/js/1.223d8ba7.chunk.js:1:364740)
    at t.value (https://editor.gdevelop-app.com/static/js/1.223d8ba7.chunk.js:1:372079)
    at li (https://editor.gdevelop-app.com/static/js/57.d260f517.chunk.js:1:84762)
    at No (https://editor.gdevelop-app.com/static/js/57.d260f517.chunk.js:1:100841)
    at Do (https://editor.gdevelop-app.com/static/js/57.d260f517.chunk.js:1:105807)
    at Ka (https://editor.gdevelop-app.com/static/js/57.d260f517.chunk.js:1:129936)
    at Xa (https://editor.gdevelop-app.com/static/js/57.d260f517.chunk.js:1:130320)
    at Ou (https://editor.gdevelop-app.com/static/js/57.d260f517.chunk.js:1:137217)
    at Cu (https://editor.gdevelop-app.com/static/js/57.d260f517.chunk.js:1:136597)
    at ku (https://editor.gdevelop-app.com/static/js/57.d260f517.chunk.js:1:135618)
    at Qa (https://editor.gdevelop-app.com/static/js/57.d260f517.chunk.js:1:134492)
    at Object.enqueueSetState (https://editor.gdevelop-app.com/static/js/57.d260f517.chunk.js:1:83747)
    at l._.setState (https://editor.gdevelop-app.com/static/js/57.d260f517.chunk.js:1:34051)
    at Object.onMeasure (https://editor.gdevelop-app.com/static/js/1.223d8ba7.chunk.js:1:300625)
    at https://editor.gdevelop-app.com/static/js/0.2de5b38b.chunk.js:1:1343744
    at Array.some (<anonymous>)
    at t.r.measure (https://editor.gdevelop-app.com/static/js/0.2de5b38b.chunk.js:1:1343681)
    at ResizeObserver.<anonymous> (https://editor.gdevelop-app.com/static/js/0.2de5b38b.chunk.js:1:1344469)
```

## Component stack (don't write anything here)
```

    in t
    in div
    in r
    in n
    in div
    in t
    in l
    in r
    in div
    in div
    in t
    in div
    in t
    in Unknown
    in t
    in a
    in div
    in t
    in t
    in t
    in Unknown
    in div
    in t
    in div
    in t
    in t
    in t
    in t
    in t
    in Unknown
    in t
    in t
    in t
    in t
    in DragDropContext(t)
    in t
    in c
```
        
So I recently added a feature like this to my svete+electron app and this is something that really makes it nice to use it imo. Basically the idea is:
If you are using electron and you closed the app without closing the project before that, next time you start it, electron remembers your last opened project and  utomatically loads it - so you are straight in it without the need to navigate to its folder.

If you close the project and then close the app, when you start it, the next time you start it - you are offered the standard dialog to create/open a project. This also happens if the autoload fails to load the project because it was moved (path changed)

This is kind of something we take for granted in most programming Ides and some other game engines. With vscode or gitkracken for example, when you open it, you are straight back in your project - you dont have to navigate to it.


Additionally nice to have would be a file> recent menu where one can reopen one of the 5 last edited projects

Hi @Wend1go I remember when you have added Tween animations you have made a example for test each types of tweening.

This example is very helpful i think it should be include with the other examples.

## Solution suggested
Use this file somewhere in a **test** folder in the GDevelop repo and move it in **example** folder.
https://github.com/4ian/GDevelop/pull/922#issuecomment-467959740

## Describe the bug
When renaming an object, events loop are not handled. (For each and Repeat)
It's handled in expression from standard event btw.

## To Reproduce

1. Setup a object
2. Add event For each, and Repeat.
3. Setup the expression in these events. ( `Count(NewObject)` for Repeat)
4. Rename the object
5. Nothing as change.

## Other details
B83
## Describe the bug
When i type new instance variable in propertie panel, the input are not saved when i select another instance.
It's only save if i click on background.

## To Reproduce
Steps to reproduce the behavior:
1 Create new variable instance
2 rename it
3 click on another instance
4 go back to previous instance
5 name of instance variable is reset to **Variable**

![drag_n_drop_object](https://user-images.githubusercontent.com/1670670/71589419-1982ac80-2b25-11ea-8783-eea01449908d.gif)


## Other details
* B83
