
Needs **pTarget** in MH_CreateHook point to function (address where code execution appeared after "jump" or "call") or it can be some random address in code/text segment of process memory? 

My guess is that it can not be cause Detour could mess up some registers which are in use. But thanks to my very noobish knowledge of Assembly I can not say if your code handle this or not :D



 Not a breaking problem, but I noticed the MEMORY_BLOCK struct is not even half cache (16 byte) aligned.
If you at minimal align 16 it (make the header size % 16 = 0), then you will guarantee each allocation block (used by trampolines) to be at minimal align 16 as well.

Notice that Window compile/linker tools like MSVC align functions to at least align 16 by default (padding with 0xCC or 0x90 as you know). You can see for your self in a debugger or using a dissembler like IDA Pro.

Maybe less of an performance gain on current generation CPUs but the last time I did profiling (admittedly a long time ago) the difference was just a handful of cycles for aligned vs over a hundred cycles for misaligned branch targets!

Also when it comes to math calculating a block slot address, it's a simple power of 2 for aligned vs the instructions need to multiply or divide the odd sizes of 12 or 18 bytes (for 32bit and 64bit mode respectively).
 
You can either just add adding compile switch padding (4 bytes for 32bit mode to round to 16, or 14 to round up to 32bytes for 64bit mode), or use a compiler specific construct that will automatically pad the structure length for you.

Note also in either case of fixing the alignment you don't even loose a slot. I.E. 4096-16/32 = 127 slots regardless if size(MEMORY_BLOCK) is 12 or 16 bytes (for 32bit mode  example).

I have tried with Asp.net web application hosted in IIS server. After many attempt i couldn't succeed .Is there any way to do that?
Fixes #74
I'm trying to build minhook (8fda4f5481fed5797dc2651cd91e238e9b3928c6) with my project under MSVC compiler, unfortunately the compiler compain that __movsb is undefined.

```
FAILED: content.dll content.dll.lib content.dll.pdb
ninja -t msvc -e environment.x64 -- ../../third_party/llvm-build/Release+Asserts/bin/lld-link.exe /nologo /IMPLIB:./content.dll.lib /DLL /OUT:./content.dll /PDB:./content.dll.pdb @./content.dll.rsp
lld-link: error: undefined symbol: __movsb
>>> referenced by F:\halton_work\redcore_70\src\third_party\minhook\src\trampoline.c:154
>>>               obj/content/common/common/trampoline.obj:(CreateTrampolineFunction)
>>> referenced by F:\halton_work\redcore_70\src\third_party\minhook\src\trampoline.c:279
>>>               obj/content/common/common/trampoline.obj:(CreateTrampolineFunction)
ninja: build stopped: subcommand failed.
```
Hi, I came across this library about couple days ago. It's great, and I thought it could be even better if there are supports for languages other than C/C++. So I just wrote my extremely simple Go (Golang) version of minhook while trying to figure out how to utilize it in Go. I think it might be a good example for how this library can be used in different languages. If anyone's interested, please visit https://github.com/NaniteFactory/gominhook. Any issues or suggestions are welcome. xD
the makefile in build/MinGW is a bit hard to use and needs to be ran with the .bat so I made a simple one.

It also outputs a static library cuz I think that would be more helpful anyway. (it's only 14kb after strip)
For example, this thread:

https://bytes.com/topic/c/answers/584600-casting-function-pointers-void

Is there any way for the API to allow some kind of `void(*funcPtr)()` or something instead, that would be kosher in standard C++.