I'm using 0.26.10, but the [type for `ImagePickerResponse.fileName` in the current version](https://github.com/react-native-community/react-native-image-picker/blob/master/src/internal/types.ts) has not changed:

```
export interface ImagePickerResponse {
  // [other things...]
  fileName?: string;
}
```

At least in the old version I'm using, fileName is sometimes `null`, which goes against `filename?: string;` because it is neither absent, undefined, nor a string.

If I upgrade to the most recent version, will this be fixed by fileName being undefined instead of null? (If so, feel free to close this right away.) Or is this type still incorrect?

The snippet above is TypeScript, but I believe that `index.js.flow` in the npm package is generated from that file.
I noticed there was another ticket on this that was closed a while back. But is there anyway to disable the video compression that happens in iOS? I noticed it runs so slow on longer videos and I need to be handling videos that are 90 seconds or less.
# Bug

After upgrading `react-native-image-picker` from version `1.1.0` to `2.0.0`, the `launchCamera` method returns the error: "Couldn't get file path for photo". This happens only when the `WRITE_EXTERNAL_STORAGE` permission was not yet given by the user. After the user gave permissions for `WRITE_EXTERNAL_STORAGE` and the Photo Library was opened, I can open the camera without any problems.

Since version `2.0.0` introduced splitting the permissions on Android, I expect that the camera still needs `WRITE_EXTERNAL_STORAGE` permissions to open (at least on the Android Simulator).

I've tried using all suggestions given in [other](https://github.com/react-native-community/react-native-image-picker/issues/928#issuecomment-438526153) [issues](https://github.com/react-native-community/react-native-image-picker/issues/803#issuecomment-370572587). These suggestions mainly point at adding `paths` to `app/src/main/res/xml/filePaths.xml`, but all these things don't help.

Be aware that I tested this situation in the Android Simulator (see below for specific version)

## Environment info

React native info output:

```bash
System:
    OS: macOS 10.15.2
    CPU: (8) x64 Intel(R) Core(TM) i7-4770HQ CPU @ 2.20GHz
    Memory: 114.09 MB / 16.00 GB
    Shell: 3.2.57 - /bin/bash
  Binaries:
    Node: 12.13.1 - ~/.nvm/versions/node/v12.13.1/bin/node
    Yarn: 1.19.1 - /usr/local/bin/yarn
    npm: 6.12.1 - ~/.nvm/versions/node/v12.13.1/bin/npm
    Watchman: 4.9.0 - /usr/local/bin/watchman
  SDKs:
    iOS SDK:
      Platforms: iOS 13.2, DriverKit 19.0, macOS 10.15, tvOS 13.2, watchOS 6.1
    Android SDK:
      API Levels: 23, 25, 26, 27, 28, 29
      Build Tools: 27.0.3, 28.0.3, 29.0.1, 29.0.2
      System Images: android-28 | Google APIs Intel x86 Atom, android-28 | Google Play Intel x86 Atom
  IDEs:
    Android Studio: 3.5 AI-191.8026.42.35.5900203
    Xcode: 11.3/11C29 - /usr/bin/xcodebuild
  npmPackages:
    react: 16.12.0 => 16.12.0
    react-native: 0.61.5 => 0.61.5
```

Library version: 2.0.0

Android simulator running on Nexus 6P, API version 28, x86 CPU. 

## Steps To Reproduce
This is only an Android issue:

1. Make sure to revoke all permissions that were previously given.

2. Open the app

3. From your app, invoke `launchCamera` with these options:

```
{
    quality: 1.0,
    allowsEditing: false,
    title: global.i18n._(t`Select a picture`),
    cancelButtonTitle: global.i18n._(t`Cancel`),
    takePhotoButtonTitle: global.i18n._(t`Take a pictureâ€¦`),
    chooseFromLibraryButtonTitle: global.i18n._(t`Choose a pictureâ€¦`),
    permissionDenied: {
      title: global.i18n._(t`Access denied`),
      text: global.i18n._(t`To grant access to your camera and pictures.`),
      reTryTitle: global.i18n._(t`try again`),
      okTitle: global.i18n._(t`I'm sure`),
    },
  }
```

4. See permission popup asking for permission to access your Camera

5. Give permission

6. See "Couldn't get file path for photo" error being reported

Describe what you expected to happen:

I expect the camera to be opened

## Reproducible sample code

See above. I use the following Android configuration in my build configuration:

```
    ext {
        buildToolsVersion = "29.0.2"
        minSdkVersion = 21
        compileSdkVersion = 29
        targetSdkVersion = 29
        androidMapsUtilsVersion = "0.5+"
        supportLibVersion = "29.0.0"
    }
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath('com.android.tools.build:gradle:3.5.1')
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files

        // Firebase Push Notifications
        classpath 'com.google.gms:google-services:4.3.2'
    }
```

## ADB Logcat output

```
01-15 13:46:34.939 21875 22498 W System.err: java.io.IOException: Permission denied
01-15 13:46:34.940 21875 22498 W System.err: 	at java.io.UnixFileSystem.createFileExclusively0(Native Method)
01-15 13:46:34.941 21875 22498 W System.err: 	at java.io.UnixFileSystem.createFileExclusively(UnixFileSystem.java:281)
01-15 13:46:34.941 21875 22498 W System.err: 	at java.io.File.createNewFile(File.java:1008)
01-15 13:46:34.941 21875 22498 W System.err: 	at com.imagepicker.utils.MediaUtils.createNewFile(MediaUtils.java:59)
01-15 13:46:34.941 21875 22498 W System.err: 	at com.imagepicker.ImagePickerModule.launchCamera(ImagePickerModule.java:274)
01-15 13:46:34.941 21875 22498 W System.err: 	at java.lang.reflect.Method.invoke(Native Method)
01-15 13:46:34.941 21875 22498 W System.err: 	at com.facebook.react.bridge.JavaMethodWrapper.invoke(JavaMethodWrapper.java:371)
01-15 13:46:34.941 21875 22498 W System.err: 	at com.facebook.react.bridge.JavaModuleWrapper.invoke(JavaModuleWrapper.java:150)
01-15 13:46:34.941 21875 22498 W System.err: 	at com.facebook.react.bridge.queue.NativeRunnable.run(Native Method)
01-15 13:46:34.941 21875 22498 W System.err: 	at android.os.Handler.handleCallback(Handler.java:873)
01-15 13:46:34.941 21875 22498 W System.err: 	at android.os.Handler.dispatchMessage(Handler.java:99)
01-15 13:46:34.941 21875 22498 W System.err: 	at com.facebook.react.bridge.queue.MessageQueueThreadHandler.dispatchMessage(MessageQueueThreadHandler.java:26)
01-15 13:46:34.941 21875 22498 W System.err: 	at android.os.Looper.loop(Looper.java:193)
01-15 13:46:34.942 21875 22498 W System.err: 	at com.facebook.react.bridge.queue.MessageQueueThreadImpl$4.run(MessageQueueThreadImpl.java:225)
01-15 13:46:34.942 21875 22498 W System.err: 	at java.lang.Thread.run(Thread.java:764)
```
 - Lock device orientation. (Portrait Mode)
 - Open camera with ImagePicker.launchCamera() in Landscape mode
 - Open photo or press cancel. Application still work in Landscape mode but it's should return in Portrait

Expectation:
 - After Library page closing, application return to Portrait mode
First of all thanks for this great library. It is very useful.

# Feature Request
Option to define the not only the path, also the file name to be save on storage. 
<!--
  This issue should serve for you to present or pitch an idea to the maintainers - but remember that it would be better if you were to submit a PR instead ðŸ¤—
-->

## Why it is needed

When it is need to store a profile picture, we can use the user ID. Therefore, it will be easy to find the foto desired among the other photos.
<!--
  Please tell us a bit more of why you want this feature to be added, what's its origin
-->
Regards,
IÃºri

Thanks for submitting a PR! Please read these instructions carefully:

- [x] Explain the **motivation** for making this change.
- [x] Provide a **test plan** demonstrating that the code is solid.
- [x] Match the **code formatting** of the rest of the codebase.
- [x] Target the `master` branch, NOT a "stable" branch.

## Motivation (required)
UIKit complains when  ImagePickerController not being called from main thread. 
To fix this I've added this method recommended in the docs:
http://facebook.github.io/react-native/docs/native-modules-ios.html#threading

What existing problem does the pull request solve?
#1199 (updated)

## Test Plan (required)
Not need, no business logic changed, all test pass.


### Description
I am using React-Native-Image-Picker to Select and Upload Files from my App, The issue i am facing that It is working in Android but in ios react-native-image-picker dialog automically closes after launching, therefore i cannot select files for upload

### How to repeat issue and example

import ImagePicker from 'react-native-image-picker';
import RNFetchBlob from 'react-native-fetch-blob';

var options = {
      title: 'Select Image',
      quality : 0.25,
      storageOptions: {
        skipBackup: true,
        path: 'images',
      },
    };
  ImagePicker.showImagePicker(options, response => {
      console.log('Response = ', response);

      RNFetchBlob.fs.stat(response.path)
      .then((stats) => {
        if (stats.size <= 5000000) {
          let source = response;
          let checkboxStates = {...this.state.checkboxStates}; 
          checkboxStates['image'] = true;

          this.setState({ imagePath: source, imageVisible: true, totalUploadSize: this.state.totalUploadSize + stats.size });   
          this.setState({checkboxStates});
        }
        else{
          toastMessage('Image should be less than 5 MB');
        }
      }).catch((err) => {});

    });



### Additional Information

* React Native version: 0.61.5
* Platform: IOS
* Development Operating System: Mac OS Mojave 10.14.2
* Dev tools: Xcode 10.14.2
* Device : IPad Pro (IOS 9)
# Feature Request

I want to use this library ro upload video or image. I've managed to do it every thing is working fine on iOS and android but there is an issue which is that I can't have access to take photo and record video on Android like iOS. 
I have managed to do this using a custom button like this:
```
   if (response.customButton) {
                ImagePicker.launchCamera(videoOption, response => {})
```

But I know that users don't like to see disabled button so I prefer to have them both on same screen.

 

