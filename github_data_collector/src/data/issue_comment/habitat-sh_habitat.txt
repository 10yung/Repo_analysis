Let's validate the code in the docs, particularly in the "Pattern Library".

Short list of considerations:

- [ ] Literate programming
- [ ] https://github.com/pnkfelix/tango
- [ ] https://github.com/nathantypanski/literate-rust
- [ ] Rust auto-doc crates?


This implements Habitat Builder origin invitation management via the hab CLI

Signed-off-by: Jeremy J. Miller <jm@chef.io>
Explain the distinction between `pkg_exports`  and `pkg_exposes`
Missed two merge conflicts.

Need for: https://github.com/habitat-sh/habitat/pull/7313
This PR introduces a pattern library for Chef Habitat examples. I'm ambivalent about supporting code examples because they can be high-maintenance. I also anticipate the feedback of, "This doesn't work for my situation, how do I make it work?" However, this is something that users have asked for frequently. Ultimately, the benefits to our users may, in the long run, outweigh the burden of collecting, updating, and managing a public pattern library.
MS Windows Server 2008 r2 is EOL. This changes our minimum version to Windows Server 2012 (no revision, because we support both 2012 and 2012r2)
Signed-off-by: kagarmoe <kgarmoe@chef.io>

The `--application` and `--environment` flags on `hab sup run` and `hab svc load` have been deprecated. After a few releases they can be removed.
Feature branch for search, navigation, and content **structure** improvements.
