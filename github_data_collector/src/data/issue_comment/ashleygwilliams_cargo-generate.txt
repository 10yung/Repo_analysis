This allows users to instead of using the entire url to only type the name of the repo/project. I realize this is only partially useful as most people will simply paste the url from the TEMPLATES.md file. That being said if this seems useful cool, otherwise I understand completely.

Fixes #204 
liquid fails to parse some files and if that's the case, cargo-generate shouldn't try to look for template strings.
cargo generate removes `.git` and then makes a blank one - this should be tested
Project Repo: https://github.com/omarabid/rust-starter

The goal of Rust Starter is to have a basic CLI app with the most sane default and most popular Rust crates. Currently, it supports CLI (Clap), Configuration (config-rs), Error Chaining (Failure), etc...

- Documentation is yet to be written for the project.
D:\vscode_projs\rust-station\rust_test>cargo install cargo-generate
    Updating crates.io index
  Installing cargo-generate v0.4.0
warning: spurious network error (2 tries remaining): [28] Timeout was reached (failed to download any data for `cc v1.0.46` within 30s)
  Downloaded cc v1.0.46
   Compiling proc-macro2 v1.0.5
   Compiling unicode-xid v0.2.0
   Compiling syn v1.0.5
   Compiling serde v1.0.101
   Compiling autocfg v0.1.6
   Compiling semver-parser v0.7.0
   Compiling winapi v0.3.8
   Compiling libc v0.2.64
   Compiling cc v1.0.46
   Compiling pkg-config v0.3.16
   Compiling vcpkg v0.2.7
   Compiling proc-macro2 v0.4.30
   Compiling memchr v2.2.1
   Compiling unicode-xid v0.1.0
   Compiling arrayvec v0.4.12
   Compiling getrandom v0.1.12
   Compiling ucd-trie v0.1.2
   Compiling log v0.4.8
   Compiling maplit v1.0.2
   Compiling smallvec v0.6.10
   Compiling nodrop v0.1.14
   Compiling syn v0.15.44
   Compiling either v1.5.3
   Compiling bitflags v1.2.1
   Compiling matches v0.1.8
   Compiling cfg-if v0.1.10
   Compiling lazy_static v1.4.0
   Compiling ppv-lite86 v0.2.5
   Compiling liquid-error v0.19.0
   Compiling regex-syntax v0.6.12
   Compiling ryu v1.0.2
   Compiling unicode-width v0.1.6
   Compiling scopeguard v1.0.0
   Compiling winapi-build v0.1.1
   Compiling unicode-segmentation v1.3.0
   Compiling failure_derive v0.1.6
   Compiling rustc-demangle v0.1.16
   Compiling percent-encoding v1.0.1
   Compiling fnv v1.0.6
   Compiling rayon-core v1.6.0
   Compiling vec_map v0.8.1
   Compiling crc32fast v1.2.0
   Compiling anymap v0.12.1
   Compiling quick-error v1.2.2
   Compiling curl v0.4.25
   Compiling strsim v0.8.0
   Compiling ucd-util v0.1.5
   Compiling winapi v0.2.8
   Compiling regex v0.2.11
   Compiling doc-comment v0.3.1
   Compiling adler32 v1.0.4
   Compiling itoa v0.4.4
   Compiling encode_unicode v0.3.6
   Compiling lazy_static v0.2.11
   Compiling utf8-ranges v1.0.4
   Compiling scopeguard v0.3.3
   Compiling hex v0.3.2
   Compiling lazycell v1.2.1
   Compiling rustc-workspace-hack v1.0.0
   Compiling crossbeam-utils v0.5.0
   Compiling deunicode v1.0.0
   Compiling shell-escape v0.1.4
   Compiling glob v0.2.11
   Compiling num-traits v0.2.8
   Compiling num-integer v0.1.41
   Compiling unicode-normalization v0.1.8
   Compiling itertools v0.8.0
   Compiling pest v2.1.2
   Compiling unicode-bidi v0.3.4
   Compiling crossbeam-utils v0.6.6
   Compiling thread_local v0.3.6
   Compiling c2-chacha v0.2.2
   Compiling textwrap v0.11.0
   Compiling lock_api v0.3.1
   Compiling kernel32-sys v0.2.2
   Compiling libz-sys v1.0.25
   Compiling curl-sys v0.4.23
   Compiling libssh2-sys v0.2.12
   Compiling backtrace-sys v0.1.31
   Compiling libgit2-sys v0.7.11
   Compiling heck v0.3.1
   Compiling humantime v1.3.0
   Compiling regex-syntax v0.5.6
   Compiling miniz_oxide v0.3.3
   Compiling pest_meta v2.1.2
   Compiling crossbeam-channel v0.3.9
   Compiling crossbeam-queue v0.1.2
   Compiling idna v0.1.5
   Compiling num_cpus v1.10.1
   Compiling quote v1.0.2
   Compiling rand_core v0.5.1
   Compiling aho-corasick v0.7.6
   Compiling bstr v0.2.8
   Compiling aho-corasick v0.6.10
   Compiling time v0.1.42
   Compiling winapi-util v0.1.2
   Compiling atty v0.2.13
   Compiling rand v0.4.6
   Compiling socket2 v0.3.11
   Compiling schannel v0.1.16
   Compiling remove_dir_all v0.5.2
   Compiling filetime v0.2.7
   Compiling home v0.3.4
   Compiling crypto-hash v0.3.4
   Compiling fs2 v0.4.3
   Compiling quote v0.6.13
   Compiling jobserver v0.1.17
   Compiling flate2 v1.0.12
   Compiling url v1.7.2
   Compiling rand_chacha v0.2.1
   Compiling same-file v1.0.5
   Compiling wincolor v1.0.2
   Compiling clap v2.33.0
   Compiling clicolors-control v1.0.1
   Compiling miow v0.3.3
   Compiling rand v0.3.23
   Compiling tar v0.4.26
error: failed to run custom build command for `libssh2-sys v0.2.12`

Caused by:
  process didn't exit successfully: `C:\Users\hs\AppData\Local\Temp\cargo-install1b2BWP\release\build\libssh2-sys-9f0cc886ad7ead11\build-script-build` (exit code: 1)
--- stderr
fatal: not a git repository (or any of the parent directories): .git


error occurred: Command "C:\\Program Files (x86)\\Microsoft Visual Studio 11.0\\VC\\bin\\amd64\\cl.exe" "-nologo" "-MD" "-O2" "-Brepro" "-I" "C:\\Users\\hs\\AppData\\Local\\Temp\\cargo-install1b2BWP\\release\\build\\libssh2-sys-3c12d6164934965c\\out\\include" "-I" "libssh2/src" "-I" "libssh2/win32" "-I" "C:\\Users\\hs\\AppData\\Local\\Temp\\cargo-install1b2BWP\\release\\build\\libz-sys-46e3fc1f54041166\\out/include" "-DHAVE_LONGLONG" "-DLIBSSH2_WINCNG" "-DLIBSSH2_DH_GEX_NEW" "-DLIBSSH2_HAVE_ZLIB" "-FoC:\\Users\\hs\\AppData\\Local\\Temp\\cargo-install1b2BWP\\release\\build\\libssh2-sys-3c12d6164934965c\\out\\build\\libssh2/src\\wincng.o" "-c" "libssh2/src/wincng.c" with args "cl.exe" did not execute successfully (status code exit code: 2).



warning: build failed, waiting for other jobs to finish...
error: failed to compile `cargo-generate v0.4.0`, intermediate artifacts can be found at `C:\Users\hs\AppData\Local\Temp\cargo-install1b2BWP`

Caused by:
  build failed

closes #193 
Cargo provides two commands for creating a new Rust project: `cargo new` and `cargo init`. The former creates a new subdirectory for the project and a SCM repo. The latter assumes the user has already created the project directory and maybe even the SCM repo and only adds the rest.

`cargo generate` works like `cargo new`, but sometimes the user has already created a Git repo and cloned it so they don't want to have to jump through extra hoops to get everything squared away.

```shell
git clone git@...:myproject.git
cd myproject.git
cargo generate --git git@...:mytemplate.git
ls
# :scream: Sacrébleu, mise en abyme! (and not Inception as most people say but that's an issue for a metaphysical repo)
mv myproject/* .
ls
ls -a
# :dizzy_face: why doesn't * pick up dot files?
mv myproject/.* .
ls -a
git status
# :skull: I overwrote the local repo
```
using Rust 1.37:
```
> cargo install cargo-generate

…

error: failed to run custom build command for `openssl-sys v0.9.49`

Caused by:
  process didn't exit successfully: `C:\Users\GEOBER~1.QUA\AppData\Local\Temp\cargo-installtZN3dn\release\build\openssl-
sys-947476c6f3d76372\build-script-main` (exit code: 101)
--- stdout
cargo:rustc-cfg=const_fn
running "perl" "./Configure" "--prefix=C:\\Users\\GEOBER~1.QUA\\AppData\\Local\\Temp\\cargo-installtZN3dn\\release\\buil
d\\openssl-sys-f6d269dfd9654d51\\out\\openssl-build\\install" "no-dso" "no-ssl3" "no-unit-test" "no-comp" "no-zlib" "no-
zlib-dynamic" "no-engine" "no-async" "no-asm" "VC-WIN64A"
Configuring OpenSSL version 1.1.1d (0x1010104fL) for VC-WIN64A
Using os-specific seed configuration

--- stderr

******************************************************************************
This perl implementation doesn't produce Windows like paths (with backward
slash directory separators).  Please use an implementation that matches your
building platform.

This Perl version: 5.26.2 for x86_64-msys-thread-multi
******************************************************************************
thread 'main' panicked at '


Error configuring OpenSSL build:
    Command: "perl" "./Configure" "--prefix=C:\\Users\\GEOBER~1.QUA\\AppData\\Local\\Temp\\cargo-installtZN3dn\\release\
\build\\openssl-sys-f6d269dfd9654d51\\out\\openssl-build\\install" "no-dso" "no-ssl3" "no-unit-test" "no-comp" "no-zlib"
 "no-zlib-dynamic" "no-engine" "no-async" "no-asm" "VC-WIN64A"
    Exit status: exit code: 127


    ', C:\Users\Geobert.Quach\.cargo\registry\src\github.com-1ecc6299db9ec823\openssl-src-111.6.0+1.1.1d\src\lib.rs:363:
13
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.

warning: build failed, waiting for other jobs to finish...
error: failed to compile `cargo-generate v0.4.0`, intermediate artifacts can be found at `C:\Users\GEOBER~1.QUA\AppData\
Local\Temp\cargo-installtZN3dn`

Caused by:
  build failed
```