Hi, Library was working find but today i got NPE on Samsung Tab A with os 9.

java.lang.RuntimeException: Unable to start activity ComponentInfo{com.somename.some/com.somename.some.view.ui.activities.LoginActivity}: java.lang.IllegalStateException: c.getSystemService(FingerprintManager::class.java) must not be null
        at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:3139)
        at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:3282)
        at android.app.servertransaction.LaunchActivityItem.execute(LaunchActivityItem.java:78)
        at android.app.servertransaction.TransactionExecutor.executeCallbacks(TransactionExecutor.java:108)
        at android.app.servertransaction.TransactionExecutor.execute(TransactionExecutor.java:68)
        at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1970)
        at android.os.Handler.dispatchMessage(Handler.java:106)
        at android.os.Looper.loop(Looper.java:214)
        at android.app.ActivityThread.main(ActivityThread.java:7156)
        at java.lang.reflect.Method.invoke(Native Method)
        at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:494)
        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:975)
     Caused by: java.lang.IllegalStateException: c.getSystemService(FingerprintManager::class.java) must not be null
        at com.pro100svitlo.fingerprintAuthHelper.FahManager.<init>(FahManager.kt:45)
        at com.pro100svitlo.fingerprintAuthHelper.FingerprintAuthHelper.<init>(FingerprintAuthHelper.kt:38)
        at com.pro100svitlo.fingerprintAuthHelper.FingerprintAuthHelper.<init>(FingerprintAuthHelper.kt:17)
        at com.pro100svitlo.fingerprintAuthHelper.FingerprintAuthHelper$Builder.build(FingerprintAuthHelper.kt:278)
        at com.somename.some.view.ui.activities.LoginActivity.onCreate(LoginActivity.kt:63)
        at android.app.Activity.performCreate(Activity.java:7340)
        at android.app.Activity.performCreate(Activity.java:7331)
        at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1275)
        at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:3119)
        at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:3282) 
        at android.app.servertransaction.LaunchActivityItem.execute(LaunchActivityItem.java:78) 
        at android.app.servertransaction.TransactionExecutor.executeCallbacks(TransactionExecutor.java:108) 
        at android.app.servertransaction.TransactionExecutor.execute(TransactionExecutor.java:68) 
        at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1970) 
        at android.os.Handler.dispatchMessage(Handler.java:106) 
        at android.os.Looper.loop(Looper.java:214) 
        at android.app.ActivityThread.main(ActivityThread.java:7156) 
        at java.lang.reflect.Method.invoke(Native Method) 
        at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:494) 
        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:975) 
 in [FahManager](https://github.com/pro100svitlo/FingerprintAuthHelper/blob/master/fingerprintauthhelper/src/main/kotlin/com/pro100svitlo/fingerprintAuthHelper/FahManager.kt#L45) :

```
private var fingerprintManager: FingerprintManager = c.getSystemService(FingerprintManager::class.java)
````

 Now `c.getSystemService(FingerprintManager::class.java)` is annotated as `Nullable` thus  could return `null` and cause NPE.

SDK sources:

```
public final @Nullable <T> T getSystemService(@NonNull Class<T> serviceClass) {
...
```

Return value **must** be checked for `null`.
For some reason only on S9 and S8 I saw this behavior. Since the listener must be started on UI thread this causes a poor UX. I tested with several other devices whose wave fingerprint scanner and works perfectly.
when I start authonticating the fingerprint and when I put an app in the background the authontication  cancel message is given .


my code is working well with oneplus 3, but when i try debugging in Oppo F1 plus mFAH.isHardwareEnable()  returns false