I believe the cargo build is failing on one particular package, and vscode is unable to show that the error belongs to a single line?

<img width="1132" alt="image" src="https://user-images.githubusercontent.com/129/72633150-15240500-3915-11ea-8f95-c24c6063ee16.png">

This was very confusing, as I thought at first that I had misunderstood how to write TOML. 

I believe the cause of the failed build is that I'm using a particular back-dated version of nightly, and I can't seem to communicate this fact to `rls-vscode`. As a result, one of the crates fails.
I have a `no_std` crate that is returning this single error message.
The code builds fine.

```json
{
	"resource": "/Users/rubberduck/src/stm32f3-discovery/src/lib.rs",
	"owner": "rust",
	"code": "E0463",
	"severity": 8,
	"message": "can't find crate for `test`\n\ncan't find crate",
	"source": "rustc",
	"startLineNumber": 1,
	"startColumn": 1,
	"endLineNumber": 1,
	"endColumn": 1,
	"relatedInformation": [
		{
			"startLineNumber": 1,
			"startColumn": 1,
			"endLineNumber": 1,
			"endColumn": 1,
			"message": "can't find crate",
			"resource": "/Users/rubberduck/src/stm32f3-discovery/src/lib.rs"
		}
	]
}
```

This is the contents of the `lib.rs` file that is causing the error message.

```rust
#![no_std]

pub use stm32f3xx_hal::*;
pub mod leds;
```

I found these possibly related issues (but I'm doubtful they're actually related).

- #579
- https://github.com/rust-lang/rls/issues/1409

closes #566
When I work on [wayland-rs](https://github.com/Smithay/wayland-rs), I often have issues with the extension not displaying errors & warnings on the code I'm working on, while it clearly must have some, and it seems to be due to interaction with the rest of the workspace.

Basically, if I consider the 3 crates `wayland-commons`, `wayland-client` and `wayland-server`, both later crates depend on the first, but there is no other dependency.

If I make a change in `wayland-commons` that needs followups in the two other crates, every time it is run the extension seems to only process & display errors for one of the two crates at random (and so half of the time not for the one I'm currently working on).

It seems as if it stops processing the workspace as soon as it encounters a crate that errors, even if there are other crates in the workspace that do not depend on it.
Steps to reproduce:

- Clone https://github.com/chamons/rust_testbed/tree/shadow_vscode
- Set a breakpoint on the "draw_regions 2" breakpoint on line 26
- Debug on windows
- Compare the y variable the debugger shows (always 2) to the output of println
I installed Rust with several changed options:
* Set up `CARGO_HOME` to `~/dev/sdk/cargo`;
* Set up `RUSTUP_HOME` to `~/dev/sdk/rustup`;
* Didn't add `CARGO_HOME/bin` to `PATH`.
But I can't set up this variables in *rls-vscode* to make Rust available only to VS Code (only when I want to develop).
I am currently switching from github's [atom](https://atom.io/) editor to vscode and one thing, that I immediately noticed, was that, when you type `<` there will no `>` added automatically, like it is done with `{` and `}`. At first, I suspected, that this was a global setting, but after a bit more testing and a post on [`r/vscode`](https://www.reddit.com/r/vscode/comments/ednx1l/is_it_possible_to_automatically_add_a_closing/) I found out, that this seems to be an issue with the language extension.

### Open questions
Should this be a separate setting for the language extension? If so how do I make this a setting? (I never did anything with vscode extensions)

fixes #719 
It would be quite convenient (especially with generics), if vscode would automatically insert `>` if `<` is typed (similar to what is done with `{` and `}`)

https://github.com/rust-lang/rls-vscode/blob/15f14cbcbccf8ea21dee788a013fa9a205bcb231/language-configuration.json#L12

I think adding a new item to the list would be enough? `{ "open": "<", "close": ">" }`

The plugin for atom does this too
https://github.com/rust-lang/atom-ide-rust

Steps to reproduce:

1. `cargo new heavy`
1. `cd heavy && mkdir examples && cd examples`
1. Make a lot of examples
1. Restart VS Code. Check every time you save an example file all the examples are re-build.

This is making my computer's CPU load at 100% every time I press Ctrl + s. It would be very great if It'll re-build only last file saved as It works on `src` folder. 
