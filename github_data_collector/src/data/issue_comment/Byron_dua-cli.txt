@Byron This tool is awesome. Thanks for your brillient work!

Currently we have to install the entire set of rust SDK to compile and install it. This is a bit cumbersome for non-rust users. This also prevents us from using it on some server environment.

So would you consider adding support for binary releases?
Output in interactive mode gets corrupted when scanning a big directory (200 TiB of data).

Like the first entry should be `cbravo`.
A lot of entries are corrupted by a dir called `bvds` (probably because the with of the first 2 columns changed so it didn't overwrite characters that where there.

```
/some/dir/with/lots/of/files_and_dirs (3 10 items)──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┐
└─  7─41─T───────██ ──dwm x ravo                                                                                                                                                                                                          ┘
    2 34 T              bvcbravo
    1 31 T   █          dsvpotier
    1.03 TB |█         |bvdsvet re
  711.71 GB |█         |cfbvds
  309.28 GB |          |  cflerin
  119.21 GB |          |  dkoldere
    1.98 GB |          |  dmauduit
    8.20 KB |          |  .DS_Store
    4.10 KB |          |  ._.DS_Store

Total disk usage: -  Entries: 10247281   -> scanning <-──
```
Hello,

At work, the IS team creates a ~/.snapshot directory in each user's home. That .snapshot directory is a symlink to a remote disk and does not consume my disk space, but it's huge as it has hourly, daily, monthly, etc backups created automatically.

It would be nice to have a `--exclude` flag like `ncdu`.

Thanks for this project.
Please add license files. Maybe they are exist but i cant find a repo. :)
https://crates.io/crates/failure-tools points me there https://github.com/share-secrets-safely/cli
Awesome application! Would be nice to have redraw on terminal resize, not sure how difficult that would be with termion.
I think it would be nice to have the usage bar from interactive mode support the different eighths sections instead of just full or empty. I already have a hacky version that adds this functionality.
I would be really cool to get information on file and directory counts. I'm not sure if anyone else wants this feature, but I'd certainly like to develop it.
Symlinks that point to another disk are still counted for current one, resulting in total disk usage bigger than the disk capacity.
One could probably implement something like it using termions [`async-io`](https://docs.rs/termion/1.5.2/termion/fn.async_stdin.html). 

Something we would have to do as well is to have a stateful window during traversal, thus it won't come so very easily.
Just ran: `dua /`. After a while, it printed:

    141.02 TB /    <3 IO Error(s)>

...my local disk is _not that large_. By, uh, several orders of magnitude.

Going to `/` and running `dua`:

```
   0.00  B lost+found
   0.00  B mnt
   0.00  B root
   0.00  B srv
   2.54 KB dev
   3.52 KB .scripts
  85.26 KB run
   1.54 MB tmp
  30.85 MB etc
  81.55 MB boot
 657.30 MB sys
   1.85 GB bin
   1.85 GB sbin
  10.86 GB lib
  10.86 GB lib64
  18.13 GB opt
  19.76 GB usr
 118.48 GB home <1 IO Error(s)>
 130.30 GB var
 140.74 TB proc <2 IO Error(s)>
 141.05 TB total        <3 IO Error(s)>
```

Seems like `/proc` is reporting very weird sizes.

By the way, the different between `dua /` and `cd /; dua` was surprising, even though correct as per the help message.