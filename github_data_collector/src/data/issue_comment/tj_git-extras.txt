â€¦, '/', and ':', will be replaced with '_'.

example https://github.com/fatso83/dotfiles/tree/master/utils/scripts#git-delete-merged
None
According to
https://discourse.drone.io/t/github-claims-that-merge-refs-are-undocumented-feature/1100

The  /merge refs are created only to check the mergeability. If a branch is already merged, the ref will be deleted. If no one visits the pull request page or uses the API to trigger the mergeability check, the ref will not update.

Although we could manually trigger the ref rebuild via visit the pull request web page, it would be better to find an alternative way. Maybe we could find the branch targeted by the pull request via GitHub API, and do the merge locally?
The version of `git-extras` provided by Debian is `4.6.0`, and the one provided by Ubuntu is `4.5.0`. Both are released a year ago. To provide a deb package which is up to date, it seems we should maintain a PPA repo by ourselves.

FYI, the `git-extras` provided by Fedora is `4.7.0`, which is already the latest release.
Hello, all

1st - great tool, use it each day since like forever :)
2nd thing - the actual unfortunate issue.

I have the git config as in [here](https://github.com/kornicameister/dotfiles/blob/master/gitconfig#L18). That particular line leads you the inclusion of local git configuration that is workstation specific. The point in here is that I would like to to store `git-bulk` configuration in such file though `git-bulk` does not seem to be able to pick it up.

**Actual behavior**

If I do `git-bulk --listall` and the section `bulkworkspaces` is defined not in `~/.gitconfig` the output returns empty list of workspaces

**Expected behavior**

If I do `git-bulk --listall` and the section `bulkworkspaces` is defined in any git configuration included in`~/.gitconfig` the output returns all workspaces


Cheers ;-)
### Added:
* colored output to git-info (can be disabled with the `--no-color` option)
* new `-c <N>` option which allows the user to specify the number of commits to show in the output 
How to get machine-readable output e.g. `git summary --line` ?
Hi. I have a little script that parse `git reflog` to look for recently used branches. 
It's similar to `git checkout @{-n}` but more user-friendly. 

For example, 

```
(nao) mgaitan@morochita:~/nao$ git recent-branches 
1 - feature/PSO-20131-refactor-to-avoid-package-s-interdependency
2 - feature/PSO-20723-include-ut_utils-only-in-development-installations
3 - feature/PSO-20130-move-model-s-related-tests
4 - develop
5 - develop_fixed
6 - master
7 - 48b39f6e31d0181af828fe2b660fc109d4aeb9d4
8 - master_fixed
9 - feature/PSO-20130-move-model-s-related-tests__

(nao) mgaitan@morochita:~/nao$ git recent-branches 2
Switched to branch 'feature/PSO-20723-include-ut_utils-only-in-development-installations'
Your branch is up-to-date with 'origin/feature/PSO-20723-include-ut_utils-only-in-development-installations'.
```

Here is my implementation, in python
https://gist.github.com/mgaitan/ba1e4e252b90a7fd4a4eb9e1742e94fb

Could it be useful in this package? I could rewrite it in bash, if it was needed. 