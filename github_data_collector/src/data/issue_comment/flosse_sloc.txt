The version I used in my package is 0.2.1, which releaseed in 13-12-2018, but I see the dart support commit is committed in 19-12-2018, which I can't find this feature in the latest version on npm. Please release dart support.
`npx sloc --format cli-table --format-option head --exclude "node_modules|.git|.meteor|" . `

this fails, moaning about files in .meteor, which I have told it to exclude(!)

As others have said, the information provided as to how this exclusion string is being processed is very vague, and the lack of good, real-world examples really lets it down.
Adding support for Agda, a dependently typed functional programming language and proof assistant.

Same syntax as Haskell regarding sloc.
Simple tweak to support an --include flag, for scenarios where it's preferable to define a regex for files to include rather than exclude.

(In some cases it can be extremely difficult, if not impossible, to define a negative regexp in order to achieve inclusion via clever exclusion.)

I am using lerna to automatically create virtual subpackages using symbolic links. sloc is unwrapping the symbolic links to the relative path (and recursively walking through the tree which will probably turn my machine into a great heater if I let it run). While it should be possible to work around this, I'm not sure if there is a one-size-fits-all workaround that would still allow for the simplicity of this tool to be preserved. Therefore, my recommendation would be for a command line flag that can treat all symlinks as nonexistant files/folders, for compatibility with lerna.

I don't know how I would implement this in coffee script, having never used it. But if someone else wants to volunteer to answer any stupid questions I have about it, I would be happy to work on this myself.

admin@Admins-MacBook-Pro ~/dev/project/foo $ sloc --exclude node_modules .

---------- Result ------------

            Physical :  29310
              Source :  20498
             Comment :  5779
 Single-line comment :  932
       Block comment :  4847
               Mixed :  90
 Empty block comment :  53
               Empty :  3176
               To Do :  57

Number of files read :  358

----------------------------

admin@Admins-MacBook-Pro ~/dev/project/foo $ mv node_modules ../foo_node_modules
admin@Admins-MacBook-Pro ~/dev/project/foo $ sloc --exclude node_modules .

---------- Result ------------

            Physical :  2583
              Source :  1965
             Comment :  330
 Single-line comment :  51
       Block comment :  279
               Mixed :  4
 Empty block comment :  1
               Empty :  293
               To Do :  0

Number of files read :  16

----------------------------
I ran sloc on Cypress.io 3.1.4 pre-npm-install and got the following results:

---------- Result ------------
            Physical :  181219
              Source :  131887
             Comment :  17028
 Single-line comment :  12828
       Block comment :  4200
               Mixed :  1907
 Empty block comment :  111
               Empty :  34322
               To Do :  180

Number of files read :  1174

----------------------------

Right-click Window10 properties on the folder shows 1422 files and and 327 folders.  That's 248 files less than the results.  Are those all README.md and data files?  

If this is expected, It would be helpful to have an explanation in the README.


I am using sloc with my node.js code. Currently my code takes one file content at a time.

```
const {total, source} = sloc(content, extension);
```
How can I support batch processing to make it faster? I have requirement to process 1000+ files at a time. Batching will help. I am looking for something as below.
```
const [{total, source}] = sloc([content], [extension]);
```

Seems like a simple bug:

```
$ sloc ./*.R
C:\Users\Birke\AppData\Roaming\npm\node_modules\sloc\lib\sloc.js:195
          throw new TypeError("File extension '" + lang + "' is not supported");
          ^

TypeError: File extension 'R' is not supported
    at getCommentExpressions (C:\Users\Birke\AppData\Roaming\npm\node_modules\sloc\lib\sloc.js:195:17)
    at slocModule (C:\Users\Birke\AppData\Roaming\npm\node_modules\sloc\lib\sloc.js:376:31)
    at C:\Users\Birke\AppData\Roaming\npm\node_modules\sloc\lib\cli.js:84:19
    at tryToString (fs.js:456:3)
    at FSReqWrap.readFileAfterClose [as oncomplete] (fs.js:443:12)


$ sloc ./*.R -a R=r

---------- Result ------------
...
```

Due to some deps we get deprecation warnings about coffeescript and the hyphen in between.
Maybe we could also update to the newest coffeescript version :). I am not a coffeescript user 
so I am not sure if the new milestone version breaks anything. 

Thanks in advance 
Oliver
I'm willing to merge PRs, publish new versions and help with some guidance for developers but I can't offer active development.
So if you like to help, please write testcases, create fixes and open pull requests.
Thank you all!