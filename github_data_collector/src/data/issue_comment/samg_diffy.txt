I am comparing to txt files with a context of just 50 lines and like how github's display compares file, I wanted to show "..." when skipping intermediate lines that are not showed by context (the set of lines that are same in both files)
Anyway to generate them whilst still rendering diff in html?
```
@diff = Diffy::Diff.new(report_1_txt,report_2_txt,:include_plus_and_minus_in_html => true, :context=>50).to_s(:html)
```

Trying `.each_chunk.to_a`doesn't help either because at the end diff has to be rendered in html
This allows diffy to work with the Busybox diff command, which returns `diff: invalid number ' 1'` in its current form
Implements `rubocop`
Forking creates a new process with the same memory usage as the parent process. Since ruby doesn't give memory back to the operating system, this can cause the calling process to bloat and consume much more memory than is necessary.

By using spawn, the new process consumes far less memory and returns it to the operating system once it has completed. This is very beneficial for long-running processes such as rails app servers.

Fixes https://github.com/samg/diffy/issues/64
Please v3.2.1 tagging.
![diffy 2018-05-21 10-57-02](https://user-images.githubusercontent.com/1830471/40287023-a71ba642-5ce5-11e8-8502-ca80872e993f.png)

We have strings with a backslash (`\`) followed by the letter `n`, where the diff does not display correctly on our web site.

Apparently the diffy gem when using `to_s(:html)` is splitting a string with a backslash (`\`) character followed by an `n` character into two lines.

```
irb(main):001:0> puts Diffy::Diff.new("A\\nZ", "B\\nZ").to_s(:html)
<div class="diff">
  <ul>
    <li class="del"><del><strong>A</strong></del></li>
    <li class="del"><del>Z</del></li>
    <li class="ins"><ins><strong>B</strong></ins></li>
    <li class="ins"><ins>Z</ins></li>
  </ul>
</div>
=> nil
irb(main):002:0> puts Diffy::Diff.new("A\\\\nZ", "B\\\\nZ").to_s(:html)
<div class="diff">
  <ul>
    <li class="del"><del><strong>A</strong>\</del></li>
    <li class="del"><del>Z</del></li>
    <li class="ins"><ins><strong>B</strong>\</ins></li>
    <li class="ins"><ins>Z</ins></li>
  </ul>
</div>
=> nil
```

When there are two backslashes and an `r`, diffy gets completely confused.

```
irb(main):003:0> puts Diffy::Diff.new("A\\\\r\\\\nZ", "B\\\\r\\\\nZ").to_s(:html)
<div class="diff">
  <ul>
\</del></li>s="del"><del><strong>A</strong>\
    <li class="del"><del>Z</del></li>
\</ins></li>s="ins"><ins><strong>B</strong>\
    <li class="ins"><ins>Z</ins></li>
  </ul>
</div>
=> nil
```

This happens when trying to run Diffy on docker ruby Alpine Linux image:
```
/ # gem install diffy
Fetching: diffy-3.2.0.gem (100%)
Successfully installed diffy-3.2.0
1 gem installed
/ # irb
irb(main):001:0> require 'diffy'
=> true
irb(main):002:0> Diffy::Diff.new("Hello!\n","Hallo!\n").to_s(:text)
=> ""
```

Diffy works well on other Ruby docker images, such as default Ruby.
Hi there, awesome gem - thank you! 

I'd like to store my diffs in a DB as plain text diffs to make them smaller, more portable, etc. This part is easy. 

But then, I'd like to pull them out of the DB and display them as HTML - basically with the same output as

`Diffy::Diff.default_format = :html`

Would give me. I don't want to redo the diff (the info that created the diff is gone at this point). 

Maybe something like 

`Diffy::Diff.convert(stored_diff).to_s(:html)` 

Seems like I might be missing something or someone else might have solved this problem. 

Right now, I am storing the diff as HTML but that wouldn't be as cool b/c later I'd have to strip out the html to display it in a txt environment. 

Much thanks! 