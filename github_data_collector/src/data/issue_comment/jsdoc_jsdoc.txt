hello,the jsdoc can support typescript file? I see it in the better-doc support but can not find in this, the plugin can provide later?
<!--
Before creating a pull request, please read our contributing guidelines and code of conduct:

https://github.com/jsdoc3/jsdoc/blob/master/CONTRIBUTING.md
https://github.com/jsdoc3/jsdoc/blob/master/CODE_OF_CONDUCT.md
-->

| Q                | A
| ---------------- | ---
| Bug fix?         | no
| New feature?     | yes
| Breaking change? |no
| Deprecations?    | no
| Tests added?     | no
| Fixed issues     | 
| License          | Apache-2.0

<!-- Describe your changes below in as much detail as possible. -->

[Support for Node >=13.2](https://github.com/nodejs/modules/blob/master/doc/unflagging-announcement.md).

I would need to tag when a function has side effects, say with:

```
@sideEffects: console.log, fs.writefile
```

### Expected behavior

This is supposed to be an array of strings or links to functions documentation within the same code base or externally, or both.

```
@sideEffects: console.log, fs.writefile
```

or

```
@side_effects: console.log, {@link https://nodejs.org/api/fs.html#fs_fs_writefile_file_data_options_callback|fs.writefile}
```

It could be abbreviated as `@sfx`:

```
@sfx: console.log, fs.writefile
```

Related issues:
 - probably #833
 - [@modifies](#1283) doesn't seem to apply here
When function types contain a signature (e.g. `function(string, boolean): string`), `catharsis` parses them correctly, but the type handling in JSDoc stringified them as `function`, the signature was omitted.

With this change, the signature is added, too.  
 
Fixes #1510 .

<!--
Before creating a pull request, please read our contributing guidelines and code of conduct:

https://github.com/jsdoc3/jsdoc/blob/master/CONTRIBUTING.md
https://github.com/jsdoc3/jsdoc/blob/master/CODE_OF_CONDUCT.md
-->

| Q                | A
| ---------------- | ---
| Bug fix?         | yes
| New feature?     | no
| Breaking change? | maybe, see #1510
| Deprecations?    | no
| Tests added?     | no (sorry)
| Fixed issues     | comma-separated list of issues fixed by the pull request, if any
| License          | Apache-2.0

<!-- Describe your changes below in as much detail as possible. -->


| Q                | A
| ---------------- | ---
| Bug fix?         | yes
| New feature?     | no
| Breaking change? | no
| Deprecations?    | no
| Tests added?     | no
| Fixed issues     | comma-separated list of issues fixed by the pull request, if any
| License          | Apache-2.0

The fix adds addition check to a condition. In this way, we will be saved when the object doesn't exist.

How can I achieve the following:

```
/**
 * @type {HTMLInputElement} 
 */
var minifiedNavCb, fixedHeaderCb, fixedNavCb, mobileNavCb;
```

Currently I only get the correct  intellisense for `minifiedNavCb`
<!-- Provide a general summary of the issue in the title above. -->
I am trying to create a typedef that inherits from another typedef object see below (`EnhancedSearch` that inherits from Search)

### Input code
```js
/**
 * @typedef {Object} Search
 * @property {string} locationId - an ID
 * @property {Array<string>} startDateRange - The range of start dates
 * @property {Array<string>} endDateRange - The range of end dates
 * @property {Array<string>} endDateRange - The range of end dates
 * @property {number=} perPage - Page size
 * @property {number=} page - Sets current page
 * @property {string=} order - The way the sort field will be ordered by
 * @property {string=} sortBy - The field to sort the results by
 */

/**
 * @typedef {Search} EnhancedSearch
 * @property {string} currentDateTime - The range of start dates
 * @property {string} timeZoneId - The range of end dates
 * @property {string} startOfDateTimeSpan - The range of end dates
 */
```

### JSDoc configuration

```js
{
	"source": {
		"include": ["src/search"],
		"includePattern": ".js$",
		"excludePattern": "(node_modules/|docs)"
	},
	"plugins": ["plugins/markdown"],
	"templates": {
		"cleverLinks": false,
		"monospaceLinks": false
	},
	"opts": {
		"recurse": true,
		"destination": "./docs/"
	}
}
```

### Expected behavior
When I type in `enhancedSearch` and then `.` - I should see ALL object property options for the `typedef` - not just for the `Search` typedef but for the `EnhancedSearch` typedef as well

### Current behavior
When I type in `enhancedSearch` and then `.` - I only see object property options for the `typedef` `Search`;  additionally, when I reference a property in `enhancedSearch` (for example `enhancedSearch.timeZoneId`) - I see an error in vscode:
```
Property 'timeZoneId' does not exist on type 'Search'.
```


In case if a js file has an exported class that extends other class and this file has a function import then this class is omitted from the generated docs on recursive generation.

Check the following test bug reproduction repository: https://github.com/speller/jsdoc-bug

- Install dependencies.
- Run command `yarn jsdoc -c jsdoc.json`. See the following console output:
```
$ /mnt/c/develop/projects/jsdoc-bug/node_modules/.bin/jsdoc -c jsdoc.json
Parsing /mnt/c/develop/projects/jsdoc-bug/src/Bar.js ...
Parsing /mnt/c/develop/projects/jsdoc-bug/src/Foo.js ...
Parsing /mnt/c/develop/projects/jsdoc-bug/src/functions.js ...
Generating output files...
Finished running in 0.52 seconds.
Done in 0.66s.
```
All the files are parsed (two classes - `Foo` and `Bar`, and a function).
- Open the `index.html` document.

Expected result:

- Two classes and the function are presented in the docs.

Actual result:

- The `Foo` class is not presented in the docs.

Options to play:
- Remove the function import in the `Foo.js`. Result: The `Foo` class appeared in the docs.
- Remove the `extends Bar` line in the `Foo.js`. Result: The `Foo` class appeared in the docs.

Please fix that.
Hey guys,
I don't know if this is the right place to ask this, but I googled a lot and I didn't find anything. So regarding my question: I am using the tutorial annotation to document a little bit more about my app and it's quite usefull but I don't want to have those generated titles.
So lets say my tutorial-config-file looks like this:
```json
{
	"manifest": {}
}
```
and in my tutorial-file named manifest.md I have some sample text, then jsdoc is generating a big title and a small title. So if I would have another title in my markdown-file there would be three titles. So my question is:
Is there a way to hide those titles ?

![jsdoc_tutorial](https://user-images.githubusercontent.com/9449817/71172721-48656c80-2261-11ea-80d2-b2686d0c4b83.PNG)

### Expected behavior

No extra titles are generated in a tutorial-file. 
A way to manipulate the generation of those titles.

### Current behavior

2 big titles are generated by jsdoc

### Your environment

| Software         | Version
| ---------------- | -------
| JSDoc            | JSDoc 3.5.5 (Thu, 14 Sep 2017 02:51:54 GMT)
| Node.js          | v10.16.0
| npm              | 6.9.0
| Operating system | Windows 10

Thanks a lot.

Best Regards
Domae

<!-- Provide a general summary of the issue in the title above. -->

### Input code

```js
/**
 * Canvas
 *
 * @class Canvas
 */
class Canvas {
    /**
     * Creates an instance of Canvas.
     * @returns {HTMLCanvasElement}
     * @memberof Canvas
     */
    constructor(width, height) {
        const canvas = document.createElement('canvas');
        canvas.width = width;
        canvas.height = height;

        return canvas;
    }
};
```

### Expected behavior
This is the js output, so I know this works.
```js
const canvas = new Canvas(600, 800);
console.log(canvas.width); // 600
```

### Current behavior
This is what happens when using a jsdoc plugin and hover over the width.
I would have expected the width to show that it's a number.
```js
const canvas = new Canvas(600, 800);
console.log(canvas.width); // `undefined`
```