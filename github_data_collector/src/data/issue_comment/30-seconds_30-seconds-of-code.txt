Hey,

Here is an improved (I think) version of this snippet (https://www.30secondsofcode.org/js/s/remove):

```js
const remove = (arr, f) => {
    return arr.reduce((acc, v) => {
        if (f(v)) {
            acc.push(v);    
        }
        return acc;
    }, []);
};
```

**Please let me know if I should move forward with a PR.**

NOTE: The `index` and `array` args to the function seemed superfluous and just incidental to the original implementation, but I might be able to keep them if necessary. Also, I would suggest making this function do the opposite: remove the elements that the predicate returns `true` for. E.g., Clojure's `remove` function behaves that way (https://clojuredocs.org/clojure.core/remove).

Thanks,
Chris
This can stay here until we make a proper version with nice graphics :) wdyt @Chalarangelo ?

<!-- Use a descriptive title, prefix it with [FIX], [FEATURE] or [ENHANCEMENT] if applicable (use only one) -->

## Description
<!-- Write a detailed description of your changes/additions here -->
<!-- If your PR resolves an issue, please state "Resolves #(issue number)" to help maintainers process it faster -->
<!-- If you think your PR will cause breaking changes, require changes in the documentation etc, please be so kind as to explain what, where and how -->

## PR Type
- [ ] Snippets, Tests & Tags (new snippets, updated snippets, re-tagging of snippets, added/updated tests)
- [ ] Tools, Scripts & Automation (anything related to files in the scripts folder, Gatsby, website, Travis CI or Netlify)
- [ ] General, Typos, Misc. & Meta (everything related to content, typos, general stuff and meta files in the repository - e.g. the issue template)
- [x] Other (please specifiy in the description above)

## Guidelines
- [x] I have read the guidelines in the [CONTRIBUTING](https://github.com/30-seconds/30-seconds-of-code/blob/master/CONTRIBUTING.md) document.

<!-- Use a descriptive title, prefix it with [FIX], [FEATURE] or [ENHANCEMENT] if applicable (use only one) -->

## Description
<!-- Write a detailed description of your changes/additions here -->
Added a new snippet that calculates angle between two vectors.
<!-- If your PR resolves an issue, please state "Resolves #(issue number)" to help maintainers process it faster -->
<!-- If you think your PR will cause breaking changes, require changes in the documentation etc, please be so kind as to explain what, where and how -->

## PR Type
- [x] Snippets, Tests & Tags (new snippets, updated snippets, re-tagging of snippets, added/updated tests)
- [ ] Tools, Scripts & Automation (anything related to files in the scripts folder, Gatsby, website, Travis CI or Netlify)
- [ ] General, Typos, Misc. & Meta (everything related to content, typos, general stuff and meta files in the repository - e.g. the issue template)
- [ ] Other (please specifiy in the description above)

## Guidelines
- [x] I have read the guidelines in the [CONTRIBUTING](https://github.com/30-seconds/30-seconds-of-code/blob/master/CONTRIBUTING.md) document.

https://github.com/30-seconds/30-seconds-of-code/blob/master/snippets/objectToPairs.md
saw this one today.
There is a native way of doing the same thing via Object.entries.
## Description
<!-- A clear and concise description of what you want to discuss. -->
So our function `arrayToHtmlList` is in a pretty bad space and could use an update. We already had some discussion over at #675 but I wanted to move the update discussion over to an issue for more visibility.

Current problem:

It uses an awkward query selector instead of the `document.prototype.getElementByID()` function, and it uses an IIFE to declare an intermediate variable closure when we could do with just API chaining the return values.

Another issue is we are just forcing it inside a list item. We could easily allow a formatter to be passed as the last argument with the map footprint and a default that won't change functionality, however the change in footprint because a bit... awkward as it becomes `data`, `binding`, `callback`, but it was an old monster to begin with.

With those two issues in mind we should look at either updating or cleaning up the snippet so it is more maintainable than it's current form or decide to leave as it.