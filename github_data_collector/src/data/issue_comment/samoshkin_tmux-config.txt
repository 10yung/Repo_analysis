The new format for tmux3 has listed two incompatible changes as follow ([source](https://github.com/tmux/tmux/blob/master/CHANGES))

>INCOMPATIBLE: tmux's configuration parsing has changed to use yacc(1). There is one incompatible change: a \ on its own must be escaped or quoted as either \\ or '\' (the latter works on older tmux versions).
>INCOMPATIBLE: Add a new {} syntax to the configuration file. This is a string similar to single quotes but also includes newlines and allows commands that take other commands as string arguments to be expressed more clearly and without additional escaping.

So now ``{``, ``}`` and ``\`` have to be escaped to ``'{'``, ``'}'`` and ``'\'`` (to maintain compatibility with tmux2)
I'm experimenting some errors  with MacOS Catalina and latest Tmux 3.0 

`.tmux.conf:43: syntax error`

that seems to be related with:

```
# Unbind default key bindings, we're going to override
 11 unbind "\$" # rename-session
 10 unbind ,    # rename-window
  9 unbind %    # split-window -h
  8 unbind '"'  # split-window
  7 unbind }    # swap-pane -D
  6 unbind {    # swap-pane -U
  5 unbind [    # paste-buffer
  4 unbind ]
  3 unbind "'"  # select-window...
```

Seems to be a problem with the lack of `''`   , maybe I will try `unbind '{'` in all special characters

Then de next error is with the conditional statement `if` , that may be because is now needed de `if-shell`???

If somebody has a guide on how to migrate this to Tmux 3.0, will be very appreciated



When copying buffer from remote, you can also just save the selected buffer into a text file, which you can just rsync or croc over to wherever you want it.
It seems that when I ssh into a server the status bar does not recognize this.
1. 
- Switch to the copy mode.
- Select text with the mouse.
>>  symbols and characters appear next to the selected text.

2.
- Switch to the copy mode.
- Press Space.
- Select some text.
- Press Enter.
>> symbols and characters appear at the command prompt.

OS: RHEL8
![tmux_copy-mouse_select](https://user-images.githubusercontent.com/20796054/63305351-8010d780-c2b4-11e9-9e5b-999448ead975.png)
![tmux_copy-space_select_enter](https://user-images.githubusercontent.com/20796054/63305357-856e2200-c2b4-11e9-9e3b-495cf9073b2a.png)


Well I think this change is needed so we can use the same key binding to go to the beggining of the line.

```
# Change prefix key to C-a, easier to type, same to "screen" 
set -g prefix C-a   
   unbind C-b                                                              
   bind-key C-a send-prefix
```

That would fix the option to move the cursor to the beginning of line, just by doing C-a C-a



As already some tmux-plugins are used, tmux-yank might be a good option to be included instead of yank.sh.
In my setup for example this has the advantage that tmux-yank supports integration for Windows clipboard (clip.exe) when running in WSL.
After installing powerline patched fonts on OSX with iTerm2 , I see the glyphs seem to be broken.

```
setw -g window-status-current-format "#[fg=$color_dark,bg=$color_main]$separator_powerline_right#[default]#I:#W# #[fg=$color_main,bg=$color_dark]$separator_powerline_right#[default]"
```

![image](https://user-images.githubusercontent.com/947745/57565489-7259d500-73dc-11e9-87a4-a1efbf816fc5.png)


I need to make the adjustment as shown below removing `#[default]` to see the glyph arrows

```
setw -g window-status-current-format "#[fg=$color_dark,bg=$color_main]$separator_powerline_right #I:#W #[fg=$color_main,bg=$color_dark]$separator_powerline_right#[default]"
```

![image](https://user-images.githubusercontent.com/947745/57565504-9e755600-73dc-11e9-98c7-e2004ee758c3.png)

thoughts?

Hello,
thanks a lot for sharing your tmux.conf. However, I need some more precisions with regard to yank. I'd like to select text and copy it from remote session and paste it into my local session. As I prefer keeping my own tmux.conf file I only grabbed the necessary part off your conf. file. So, I have inserted in my **local** tmux.conf the following:
```
yank="~/.tmux/yank.sh"

# Copy selected text
bind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "$yank"
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "$yank"
bind -T copy-mode-vi Y send-keys -X copy-line \;\
    run "tmux save-buffer - | $yank"
bind-key -T copy-mode-vi D send-keys -X copy-end-of-line \;\
    run "tmux save-buffer - | $yank"
bind -T copy-mode-vi C-j send-keys -X copy-pipe-and-cancel "$yank"
bind-key -T copy-mode-vi A send-keys -X append-selection-and-cancel \;\
    run "tmux save-buffer - | $yank"

# Copy selection on drag end event, but do not cancel copy mode and do not clear selection
# clear select on subsequence mouse click
bind -T copy-mode-vi MouseDragEnd1Pane \
    send-keys -X copy-pipe "$yank"
bind -T copy-mode-vi MouseDown1Pane select-pane \;\
   send-keys -X clear-selection
```
I've got several questions:
1. Do I need to copy `yank.sh` on remote machine as well?
2. Do I need to insert the above extracted content to my remote `tmux.conf` as well?
3. Is `set -g @copy_backend_remote_tunnel_port 11988` still necessary (coming from `tmux.remote.conf`)? If so, do I have to copy it onto the remote machine as well?

Thanks for your time.

**Notes**: as a Mac user, I have:
1. Enabled [the *plist* file](https://apple.stackexchange.com/questions/257609/how-do-i-copy-to-the-osx-clipboard-from-a-remote-shell-using-iterm2/258168#258168) for listening on port `9999` 
2. Activated `remoteforward=9997 localhost:9999` (SSH)
3. Of couse, I grabbed both files `yank.sh` and `tmux.remote.conf`, but don't know whether they must be copied on both machines or not.
4. I must mention that I have `tmux-yank` plug-in installed on both machines. Just in caseâ€¦

I tested the following on remote session and it works:
```
date | nc localhost 9997
```

What I'd like to do instead is selecting text on **remote**, press `y` key, and the selected content jumps into my local clipboard.