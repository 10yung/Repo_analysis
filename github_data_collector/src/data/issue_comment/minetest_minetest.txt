Previously the default tabheader height was different when using
real coordinates. This resulted in the height of tabs changing when
switching tabs in sfinv if some tabs used real coordinates.

## To do

This PR is a Ready for Review.
<!-- ^ delete one -->

## How to test

<!-- Example code or instructions -->

Apply the patch below to sfinv. Open sfinv and switch between the crafting tab and other tabs (ignore the messed up contents of the crafting tab).
Before: tabheader height changes when switching between crafting tab and other tabs.
After: tabheader hight unchanged between tabs.
```diff
diff --git a/mods/sfinv/init.lua b/mods/sfinv/init.lua
index 71e9ee7..47424ea 100644
--- a/mods/sfinv/init.lua
+++ b/mods/sfinv/init.lua
@@ -14,6 +14,6 @@ sfinv.register_page("sfinv:crafting", {
                                image[4.75,1.5;1,1;sfinv_crafting_arrow.png]
                                listring[current_player;main]
                                listring[current_player;craft]
-                       ]], true)
+                       ]], true, "formspec_version[3]size[10.5,11.375]")
        end
 })
```
Note: the form width of 10.5 comes from the conversion formula in lua_api.txt, but that formula did not give the correct height (I arrived at 11.375 by guess and check, the formula suggested 11.875). Not sure what's going on there.
## Problem

You're working on an underwater build/transforming a sea floor. Then let's say you want to move forwards a bit: You press W but find you hardly move forwards at all since you're looking downwards towards the floor you're working on, which results in you being 'slowed down' by the floor, something that doesn't make sense considering the fact that you're technically walking on it

I've been annoyed by this to the point of turning pitch move off because it messes me up completely if I step in even a single node of water while I'm building something

## Solutions

* Removing the movement decrease for floors

## Alternatives

* Allowing mods to control this somehow
* Add a limit to how much the movement can decrease by

## Additional context

This is the 'movement decrease' I'm talking about https://youtu.be/sP9E4RTSyW0
(I included a roof example but I guess that may make more sense than the decrease for the floor)
Fixes #7245.

This is a revival of PR #8951, but with 2 changes:

* Profiler screen is no longer touched (it was a huge mistake to add this completely unrelated feature in the PR)
* Added `wireframe` priv because it was requested

## What this PR does

* Hide the position, yaw, pitch, mapseed and pointed thing if player does not have the `debug` priv. In practice, the 2nd line of the debug text at the top will disappear and also the entity info when you point an entity
* Add `wireframe` priv which is required to view the wireframe. This priv acts independently of `debug`

## Justification

The F5 debug screen contains various "spoilers", e.g. info that can give you a gameplay advantage for free: position, pointed node, pointed entity (including health and armor groups). This completely ruins mods like `orienteering` and `compassgps` in which you can craft items that expose your position and more. The mods get ruined because there's no point in crafting a compass if you can get the yaw/position/whatever “for free” with a single key press, and it's unfair to force players to resist the temptation. Players complained, as evidenced by #7245, which also has core dev support.

This PR gets rid of those spoilers unless you have `debug` priv. `orienteering`-style mods can now be created with peace-of-mind.

## To do

There is an annoying minor bug: If the setting `show_debug=true` is set, and you join a server in which you have already the `debug` priv, you will only see the “minimal” debug info (no pos). You have to press the debug key. I have not yet figured out at which point in the code I can check for privs in the initialization phase … Help is appreciated.

I expect this PR to be extremely controversial, so I guess “reacting to the discission” is another TODO.

## How to test

* Join any world
* Press F5 while you have one of the 4 possible combinations of “you have / have not `debug` priv” and “you have / have not `wireframe` priv”.

Expected: The 2nd line of debug as well as pointed entity info will *only* show when you have `debug` priv, otherwise not. The wireframe mode will *only* be available if you have the `wireframe` priv, otherwise, it will be skipped.

## Expected questions and counter-arguments

1. “This PR is pointless because it's the player's fault for pressing F5.” This argument is bad because it's not good to force players to resist the temptation to enable a cheat that is only 1 keypress away. You could also press F5 by accident, and you can't “unsee” the coordinates. This is not good if a key element of a game is to “earn” the privilege to learn your coordinates through gameplay
2. “Why not using HUD flags?”. HUD flags are controlled by mods. This implies that mods can screw around with the debug info at will. All it takes is one poorly-coded mod to strip away the extended debug info from the admin, which is not fun to track down. Privileges, by comparison, are much more reliable and predictable and there are no ugly surprises.
3. “But how do I get the old behavior back?”: Type `/grantme debug`.
4. “My game/mod/server depends on the pos/angle/pointed thing be visible in debug screen, this PR ruins everything!”. It was never a good idea for a mod to depend on anything written in the debug screen. As the name suggests, its for debugging primarily. The fact that it's currently being abused heavily for gameplay as well is just an excuse for bad practice. Instead of depending on the debug screen, add a mod that exposes the desired info itself, there are countless mods that do this which also can do this with a much nicer HUD than the debug screen. “Knowing the coordinates” is a gameplay advantage and should be considered as such. But you don't need to install any mods, `/grantme debug` still works.
5. “Why the `wireframe` priv?” Because it was suggested by core dev in #8951.

## Problem

In the [commoditymarket](https://github.com/FaceDeer/commoditymarket) mod I've set up a formspec table that lists various items that are for sale, and in one of the columns of that table I want to list the item's "description" string. Since other modders can put whatever they like in that string and columns expand their width to fit the content this means I need some method of preventing an arbitrarily long string from breaking the formspec.

Unfortunately, the "description" string is localized. That means I can't truncate the string, as that would break translations. Inserting line breaks also doesn't work because formspec table lines don't stretch vertically to accomodate multi-line text - a multi-line string just overlaps with content of lower table lines, making a mess.

## Solutions

The `tablecolumns[` formspec element has a "width" property that can set the _minimum_ width of a table column. A corresponding maximum width property that causes the displayed contents of the table cell to be clipped to the cell's boundaries would solve this problem, ideally it would intelligently truncate the string with an "..." at the end to indicate that the string had been shortened.

## Alternatives

Some sort of localization-friendly "minetest.truncate_string" mechanism would also solve this problem for me, if that is possible (I expect it would involve adding additional hidden escape sequences to tell the client where to cut the string post-translation and insert a locale-appropriate "..."). This is somewhat sub-optimal though since the width of a line can vary a lot depending on the types of characters it contains, not just the number of characters ("wwwww" is much wider than "iiiii" despite having the same character count).

Multi-line table cells might also work, if the localization engine is able to still recognize localized strings that have had line breaks inserted into them. This is also somewhat sub-optimal since there might not be obvious whitespace to insert line breaks into, the cell could wind up very tall, and because of character width vs. character count issues as mentioned in the other alternative solution.

## Additional context

This is somewhat related to issue #9300, wherein I was running into problems with overly-wide images stretching table columns. 

This PR adds a "compass" HUD element (new HUD feature).

Basically it is like image HUD element but it rotates or translates according to the current heading direction. This allows to build various compass HUD. The display is entirely updated on client side so it is quite smooth.

## To do

This PR is ready for review.

## How to test

Here is a sample code for testing it, using default mod textures :

```lua
minetest.register_on_joinplayer(function(player)
	player:hud_add({
		hud_elem_type = "compass",
		position = { x = 0, y = 0 },
		offset = { x = 10, y = 10 },
		size = { x = 150, y = 150 },
		alignment = { x = 1, y = 1 },
		text = "gui_furnace_arrow_bg.png",
		dir = 1,
	})

	player:hud_add({
		hud_elem_type = "compass",
		position = { x = 0, y = 0 },
		offset = { x = 10, y = 170 },
		size = { x = 100, y = 50 },
		scale = { x = 1, y = 1 }, -- Required or scale would be 0
		alignment = { x= 1, y = 1 },
		text = "default_ladder_steel.png^[transformR90",
		dir = 2,
	})
end)
```

This adds two compass HUD elements in the upper left corner of the screen (better texture would be much more suitable :smile:) :
![screenshot_20200114_164400](https://user-images.githubusercontent.com/49488517/72359049-dfe99e00-36ed-11ea-8074-11f789747474.png)

##### Minetest version
<!--
Paste Minetest version between quotes below
If you are on a devel version, please add git commit hash
You can use `minetest --version` to find it.
-->
```
Minetest 5.0.0
Using Irrlicht 1.8.4
BUILD_TYPE=Release
RUN_IN_PLACE=1
USE_GETTEXT=1
USE_SOUND=1
USE_CURL=1
USE_FREETYPE=1
USE_LUAJIT=1
STATIC_SHAREDIR="."
```

##### OS / Hardware
<!-- General information about your hardware and operating system -->
Operating system: Microsoft Windows 10 Home Build 17134
CPU: Intel Core i5-7200U 2.50GHz  
Brand/Model: Dell Inspiron 13-7378 x64 

##### Summary
While logging into certain Minetest 5.x servers, the client will hang as it begins media loading and then suddenly all connections to HTTP, SSH, etc. will drop system-wide. However, my Wi-Fi indicator will show that I am still connected to the Internet. Likewise, YouTube videos will continue playing in the background. But if I try to navigate to any sites in my Web browser, it will report a timeout connecting to server. Likewise, I can still enter the command prompt and use `ping` and `tracert` and `nslookup`.  So there clearly appears to be limited connectivity just for ICMP and UDP. But higher level protocols TCP/IP protocols seem to be completely non-workable.

[Screenshot of timeout in Chrome browser](https://imgur.com/nW8HYwA)

I have tried manually disabling and re-enabling my WiFi adapter from the device control panel. That just causes the Wi-Fi menu to freeze up. I've also tried running the automated troubleshooter, but it detects no problems with my network configuration. I've even researched ways to manually reset TCP/IP in Windows, including issuing the command `netsh int ip reset`, but that does nothing.

It's very difficult to pin down whether this is a defect with my network adapter, operating system, or router. But it seems very clear that Minetest is in someway related, since no other applications effect my Internet connectivity. I am not an expert at all in networking, so I can't even begin to diagnose the problem on my own. So any suggestions on what type of logs I should post (and where to find them) would be greatly appreciated.

##### Steps to reproduce
Various servers like Must Test and IFS (IhrFussels Server) exhibit this problem. Yet for some reason, other servers like just test and VanessaE's Banananland Survival Server do not.

@nerzhul 
##### Minetest version
<!--
Paste Minetest version between quotes below
If you are on a devel version, please add git commit hash
You can use `minetest --version` to find it.
-->
```
Minetest 5.0.1
```

##### OS / Hardware
<!-- General information about your hardware and operating system -->
Operating system:
CPU: Quad-core Intel i5

<!-- For graphical issues only -->
GPU model:
OpenGL version:

##### Summary
<!-- Describe your problem here -->
The shift-click to bulk move a stack from one inventory to another(i.e. one chest to your inventory) does nothing and acts as a normal click.

##### Steps to reproduce
<!-- For bug reports or build issues, explain how the problem happened -->
On a Mac:
1: Boot up MT
2: Go into a personal world/server(it does not matter)
3: try to move something into/out of your inventory via shift-click

## Problem

Objects have a property called “weight” but from looking around the source code it seems it does not have any effect. So what's the point?

## Solutions

Remove it.