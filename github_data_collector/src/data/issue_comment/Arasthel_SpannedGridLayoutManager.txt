I dont know why i am adding data like 15 items i see that into my Recyclerview i have more.
I tried to use an other LayoutManager and i dont have this bug;

Also when i want to clear data and to add new the scroll position not reinitialize i have to scroll to the top in order to see the new data .

Pleaseeee helppppp.
I just try version 3.0.2 when I scroll down to the bottom I found an empty space like this

![ezgif-1-46ecebc152f2](https://user-images.githubusercontent.com/15921410/50281859-6f893280-0483-11e9-8c5e-8f1857af5670.gif)

I also add items at the start to show that empty space is still at the bottom

What I want to ask is, is this normal or I just did something wrong?

#### Setup layout
```
val layoutManager = SpannedGridLayoutManager(SpannedGridLayoutManager.Orientation.VERTICAL, 4)
        layoutManager.spanSizeLookup = SpannedGridLayoutManager.SpanSizeLookup { position ->
            when (position) {
                0 -> SpanSize(4, 2)
                1, 2 -> SpanSize(2, 2)
                else -> SpanSize(1, 1)
            }
        }
layoutManager.itemOrderIsStable = true
```

#### MainActivity's layout
```
<?xml version="1.0" encoding="utf-8"?>
<android.support.constraint.ConstraintLayout
        xmlns:android="http://schemas.android.com/apk/res/android"
        xmlns:tools="http://schemas.android.com/tools"
        xmlns:app="http://schemas.android.com/apk/res-auto"
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        tools:context=".MainActivity">

    <android.support.v7.widget.RecyclerView
            android:id="@+id/recycler_view"
            android:layout_width="0dp"
            android:layout_height="0dp"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toTopOf="parent"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintBottom_toBottomOf="parent"/>
</android.support.constraint.ConstraintLayout>
```
#### Item's layout
```
<?xml version="1.0" encoding="utf-8"?>
<android.support.constraint.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:layout_width="match_parent"
    android:layout_height="wrap_content"
    xmlns:tools="http://schemas.android.com/tools">

    <android.support.constraint.ConstraintLayout
        android:id="@+id/item_layout_bg"
        android:layout_width="match_parent"
        android:layout_height="0dp"
        app:layout_constraintDimensionRatio="H,1:1">

        <TextView
                android:id="@+id/item_layout_text"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                app:layout_constraintStart_toStartOf="parent"
                app:layout_constraintTop_toTopOf="parent"
                tools:text="TEST"/>

    </android.support.constraint.ConstraintLayout>

</android.support.constraint.ConstraintLayout>
```


Here's the skeleton of my XML for the main activity

```
<CoordinatorLayout>
    <AppBarLayout>
        <Toolbar/>
    </AppBarLayout>

    <FrameLayout/>

    <BottomNavigation/>
</CoordinatorLayout>
```

The FrameLayout holds a fragment and here's how it looks like:
```
<ConstraintLayout>

    <RecyclerView />

    <include layout="@layout/base_list_loading"/>

    <include  layout="@layout/base_list_empty"/>

</ConstraintLayout>
```

The problem is when using your SpannedGridLayoutManager, I'm not able to scroll all the way down. It Can just scroll for like 1/8th of the page.

I also have 3 Item Types:
- Type 1 - SpanSize(2,3)
- Type 2 - SpanSize(4,3)
- Type 3 - SpanSize(4,6)

I can't use (1,1), (2,1), and (2,2) as your library changes the sizes and I need to have the layouts at the ratio for the images. It works when I use these though but then again, I need the sizes to be of that ratio. 

Also, In your `scrollBy` function, the `canScrollForward` flag returns a false even though I'm haven't fully scrolled down the screen yet.

Would there be a way that we can define the size/ratio of 1 cell so as a SpanSize(1,1) can sort of look like a 2:3 square? Thanks!
在滚动后再回滚到列表开始位置，然后调用firstVisiblePosition 获取到的总是1而不是0

I have the following code to collect my items to show in my RV:
```
    // Spanned
    public RecyclerView.LayoutManager getLayoutManager() {
        if (!mMainView || mDataHolder.getViewMode(mActivity).equals("grid")) { // We force the grid view in subset
            final Integer numColumns = UserPreferencesHandler.<Integer>readValue(mActivity, UserPreferencesHandler.PREF_KEY_NUM_COLUMNS);

            SpannedGridLayoutManager layoutManager = new SpannedGridLayoutManager(SpannedGridLayoutManager.Orientation.VERTICAL, numColumns);
            layoutManager.setSpanSizeLookup(new SpannedGridLayoutManager.SpanSizeLookup(position -> {
                try {
                    switch (RVAdapterTimeline.this.getItemViewType(position)) {
                        case RVAdapter.VIEW_TYPE_HEADER:
                            try {
                                return new SpanSize(numColumns, 1);
                            } catch (ClassCastException e) {
                                return new SpanSize(1, 1);
                            }
                        default:
                            LineItem lineitem = mItems.get(position);
                            if (lineitem != null && lineitem.mediaItem != null && lineitem.mediaItem.getRating() != null && lineitem.mediaItem.getRating() == 5) {
                                return new SpanSize(2, 2);
                            }

                            return new SpanSize(1, 1);
                    }
                } catch (IndexOutOfBoundsException e) {
                    MyApplication.toastSomething(mActivity, e); // Seen on firebase
                    return new SpanSize(1, 1);
                }
            }));

            return layoutManager;
        } else {
            return new LinearLayoutManager(mActivity, LinearLayoutManager.VERTICAL, false);
        }
    }
```

There are header items with a full column span:
`return new SpanSize(numColumns, 1);`
Other items are with span width 2 or 2. The number of columns is 5.

After collecting the items, they are used for the RV adapter. The problem is that the order in the rendered RV is not the same as the items. Result:
[Pic](https://i.imgur.com/4wGQR0V.jpg)

Could you please fix that? I can confirm 100% that the default GridLayoutManager is working with these items.
I want to change the number of columns/spans when the user rotates the device - I was doing this using GridLayoutManager#setSpanCount() but don't see a similar method available for SpannedGridLayoutManager. Does one exist and I'm just missing it?

I ended up re-creating the layout manager after device rotates but at least it seems like this would be good to add if it makes sense..
The `SpannedGridLayoutManager.onLayoutChildren` method computes the scroll offset with:

`val offset = view.top - getTopDecorationHeight(view)`

irregardless of the orientation.
Adds a function for the developer to customize the height of each item.
Hello here.

I tried to force the line height in the case of a vertical spanned grid recycler view. On creating the ViewHolder, I set a new SpanLayoutParams with a computed height (here we try to have a specific number of line matching the recycler height).

But items are drawn with a height matching the width of a one-span-sized item.

Is there a way to achieve this with this SpannedGridLayoutManager ?

Thanks by advance.

Edit: just to know, the same methos of forcing items line height works fine with a classic GridLayoutManager.