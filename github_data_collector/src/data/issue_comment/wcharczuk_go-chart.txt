Hi,

Is there any way to Hide auto-generate  X-axsis's tick,
just show the x-axsis whick in my Xvalues[]?
thanks.
add logarithmic axes support, with tests. Supports positive Y-values only.
Hi,

Quite happy with all the functionality so far. I haven't been able to find any support for log-scale Y-axes. Have I misunderstood or is this not supported?
If it's not supported, are there any plans on adding log-scale Y-axes support?
I'm trying to setup grid lines in a BarChart, any ideas how to make this work will be appreciated.

```
graph := chart.BarChart{
		Title: "Population - grid lines",
		Background: chart.Style{
			Padding: chart.Box{
				Top: 40,
			},
		},
		Height:   300,
		Width:    400,
		BarWidth: 40,
		Bars: []chart.Value{
			{Value: 100, Label: "2015"},
			{Value: 130, Label: "2020"},
			{Value: 120, Label: "2025"},
			{Value: 150, Label: "2030"},
			{Value: 160, Label: "2035"},
		},
		YAxis: chart.YAxis{
			GridMajorStyle: chart.Style{
				Hidden:      false,
				StrokeColor: drawing.ColorBlack,
				StrokeWidth: 1.0,
			},
			GridMinorStyle: chart.Style{
				Hidden:      false,
				StrokeColor: drawing.ColorBlue,
				StrokeWidth: 1.0,
			},
		},
	}


```

How to change resolution / DPI of resulting image ? I don't see enough details.
I've been working on some boilerplate to make the `Renderer` interface work on my https://github.com/tdewolff/canvas library. See https://github.com/tdewolff/canvas/blob/master/gochart.go for the implementation and see https://github.com/tdewolff/canvas/tree/master/examples/go-chart for an example of the stock exchange example. Font support is still lacking since `go-chart` uses `truetype.Font` while `canvas` requires the whole font for embedding.

`canvas` has SVG, raster images (PNG, GIF, JPG...), PDF and EPS (in progress), WASM Canvcas (https://tdewolff.github.io/canvas/examples/html-canvas/) output formats, and I'm planning OpenGL / WebGL support too. Let me know what you think and whether we could integrate both libraries if you're interested?

Example output:

![Stock exchange example](https://github.com/tdewolff/canvas/raw/master/examples/go-chart/output.png)

PS: I wanted to contact you privately but I couldn't find an e-mail address of yours nor am I able to send a message through LinkedIn...but perhaps you prefer to keep it hidden, I can understand that!
I found the chart render on Windows 7 is incomplete and weird.
Below is the chart rendered by same code on MacOS and Windows.

The X Axis is missing and transparent background doesn't work on Windows.

I'm using the latest checkout from main branch.

MacOS
![截屏2019-12-10下午5 53 42](https://user-images.githubusercontent.com/18550/70519174-77e7eb00-1b76-11ea-928e-0d32f3b3ac67.png)

Windows
![WechatIMG2672](https://user-images.githubusercontent.com/18550/70519193-80402600-1b76-11ea-9331-76feea625a85.png)

Here is the code I'm using to generate the chart.

 ```
   graph := chart.Chart{
		Width:  width,
		Height: height,
		Font:   f,
		Background: chart.Style{
			Padding: chart.Box{
				Top:  20,
				Left: 20,
			},
			FillColor: drawing.Color{R: 1, G: 1, B: 1, A: 0},
		},
		Canvas: chart.Style{
			FillColor: drawing.Color{R: 1, G: 1, B: 1, A: 0},
		},
		XAxis: chart.XAxis{
			Style: chart.Style{
				StrokeColor: drawing.ColorWhite,
				FontColor:   drawing.ColorWhite,
			},
			ValueFormatter: chart.TimeDateValueFormatter,
		},
		YAxis: chart.YAxis{
			Style: chart.Style{
				StrokeColor: drawing.ColorWhite,
				FontColor:   drawing.ColorWhite,
			},
		},
		Series: []chart.Series{
			chart.TimeSeries{
				Name: "充值金额",
				Style: chart.Style{
					StrokeWidth: 2,
				},
				XValues: weekSeries,
				YValues: paidSeries,
			},
			chart.TimeSeries{
				Name: "消息条数",
				Style: chart.Style{
					StrokeWidth: 2,
				},
				XValues: weekSeries,
				YValues: msgSeries,
			},
		},
	}

	graph.Elements = []chart.Renderable{
		chart.Legend(&graph, chart.Style{
			StrokeColor: drawing.ColorWhite,
			FontColor:   drawing.ColorWhite,
			FillColor:   drawing.Color{R: 1, G: 1, B: 1, A: 0},
		}),
	}

	collector := &chart.ImageWriter{}
	graph.Render(chart.PNG, collector)

	img, _ := collector.Image()
	if r, ok := img.(*image.RGBA); ok {
		return r
	}

	return nil
```



I thought of fixing it myself, but it proved to be not a 15-minute task, so I'll just leave a feature request here:
The label rotation rotates only the text inside it, but the label itself stays horizontal, only changing the height/width to accomodate the rotated text:

```
Style: chart.Style{
				FillColor:   drawing.Color{1, 255, 3, 10},
				StrokeColor: drawing.Color{255, 6, 7, 20},
				StrokeWidth: 0,
				FontSize:    10,
				TextRotationDegrees:-90,
			},
```

![image](https://user-images.githubusercontent.com/72657/70226330-f5fc5a00-1750-11ea-991d-abc77f77c2d8.png)

UPDATE: after I increased the font size another problem popped up: the text seems to be not properly aligned. But for me that is fine as I use font size 5 and there it is almost OK.
hi, I have some question. is this possible to produce `RGB` rather than `RGBA` color into generated `svg` file?
maybe, I have some issue from my svg viewer, it seems doesn't support `RGBA` color format. 

#### this will not work
```<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="1024" height="400">\n<path  d="M 0 0
L 1024 0
L 1024 400
L 0 400
L 0 0" style="stroke-width:0;stroke:rgba(255,255,255,1.0);fill:rgba(255,255,255,1.0)"/><path  d="M 183 26
L 972 26
L 972 373
L 183 373
L 183 26" style="stroke-width:0;stroke:rgba(255,255,255,1.0);fill:rgba(255,255,255,0.0)"/><path  d="M 183 373
L 972 373" style="stroke-width:1;stroke:rgba(51,51,51,1.0);fill:none"/><path  d="M 183 373
L 183 378" style="stroke-width:1;stroke:rgba(51,51,51,1.0);fill:none"/><text x="150" y="395" style="stroke-width:0;stroke:none;fill:rgba(51,51,51,1.0);font-size:12.8px;font-family:'Roboto Medium',sans-serif">2018-01-02</text><path  d="M 296 373
L 296 378" style="stroke-width:1;stroke:rgba(51,51,51,1.0);fill:none"/><text x="263" y="395" style="stroke-width:0;stroke:none;fill:rgba(51,51,51,1.0);font-size:12.8px;font-family:'Roboto Medium',sans-serif">2018-01-06</text><path  d="M 409 373
L 409 378" style="stroke-width:1;stroke:rgba(51,51,51,1.0);fill:none"/><text x="376" y="395" style="stroke-width:0;stroke:none;fill:rgba(51,51,51,1.0);font-size:12.8px;font-family:'Roboto Medium',sans-serif">2018-01-10</text><path  d="M 522 373
L 522 378" style="stroke-width:1;stroke:rgba(51,51,51,1.0);fill:none"/><text x="489" y="395" style="stroke-width:0;stroke:none;fill:rgba(51,51,51,1.0);font-size:12.8px;font-family:'Roboto Medium',sans-serif">2018-01-14</text><path  d="M 634 373
L 634 378" style="stroke-width:1;stroke:rgba(51,51,51,1.0);fill:none"/><text x="601" y="395" style="stroke-width:0;stroke:none;fill:rgba(51,51,51,1.0);font-size:12.8px;font-family:'Roboto Medium',sans-serif">2018-01-19</text><path  d="M 747 373
L 747 378" style="stroke-width:1;stroke:rgba(51,51,51,1.0);fill:none"/><text x="714" y="395" style="stroke-width:0;stroke:none;fill:rgba(51,51,51,1.0);font-size:12.8px;font-family:'Roboto Medium',sans-serif">2018-01-23</text><path  d="M 860 373
...
```

#### this work
```<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="1024" height="400">\n<path  d="M 0 0
L 1024 0
L 1024 400
L 0 400
L 0 0" style="stroke-width:0;stroke:rgb(255,255,255);fill:rgb(255,255,255)"/><path  d="M 183 26
L 972 26
L 972 373
L 183 373
L 183 26" style="stroke-width:0;stroke:rgb(255,255,255);fill:rgb(255,255,255)"/><path  d="M 183 373
L 972 373" style="stroke-width:1;stroke:rgb(51,51,51);fill:none"/><path  d="M 183 373
L 183 378" style="stroke-width:1;stroke:rgb(51,51,51);fill:none"/><text x="150" y="395" style="stroke-width:0;stroke:none;fill:rgb(51,51,51);font-size:12.8px;font-family:'Roboto Medium',sans-serif">2018-01-02</text><path  d="M 296 373
L 296 378" style="stroke-width:1;stroke:rgb(51,51,51);fill:none"/><text x="263" y="395" style="stroke-width:0;stroke:none;fill:rgb(51,51,51);font-size:12.8px;font-family:'Roboto Medium',sans-serif">2018-01-06</text><path  d="M 409 373
L 409 378" style="stroke-width:1;stroke:rgb(51,51,51);fill:none"/><text x="376" y="395" style="stroke-width:0;stroke:none;fill:rgb(51,51,51);font-size:12.8px;font-family:'Roboto Medium',sans-serif">2018-01-10</text><path  d="M 522 373
L 522 378" style="stroke-width:1;stroke:rgb(51,51,51);fill:none"/><text x="489" y="395" style="stroke-width:0;stroke:none;fill:rgb(51,51,51);font-size:12.8px;font-family:'Roboto Medium',sans-serif">2018-01-14</text><path  d="M 634 373
L 634 378" style="stroke-width:1;stroke:rgb(51,51,51);fill:none"/><text x="601" y="395" style="stroke-width:0;stroke:none;fill:rgb(51,51,51);font-size:12.8px;font-family:'Roboto Medium',sans-serif">2018-01-19</text><path  d="M 747 373
L 747 378" style="stroke-width:1;stroke:rgb(51,51,51);fill:none"/><text x="714" y="395" style="stroke-width:0;stroke:none;fill:rgb(51,51,51);font-size:12.8px;font-family:'Roboto Medium',sans-serif">2018-01-23</text><path  d="M 860 373
L 860 378" style="stroke-width:1;stroke:rgb(51,51,51);fill:none"/><text x="827" y="395" style="stroke-width:0;stroke:none;fill:rgb(51,51,51);font-size:12.8px;font-family:'Roboto Medium',sans-serif">2018-01-27</text><path  d="M 972 373
...
```

thank you.
Is there a way to color a line with a provider similar to how DotColorProvider works? I do not see a way to do it currently. 