I'd like to be able to see logs of `rtorrent` which I define in my .rc inside of `journalctl` for the unit that has launched it, thanks to the daemonised option in the config. I'd prefer this option to use instead of logging to a specific file, and have the log rotation etc. handled by the rest of the system. 

It would be great if the config would allow for sending logs to `systemd-cat` or `logger` with the appropriate warn/error/info codes.

SPECS:

OS: Debian 9.11
rTorrent version: 0.9.8
libtorrent: 0.13.8

Hello,

rTorrent keeps crashing randomly, with this error:

```
1579171710 C Caught signal: 'Non-existent physical address.'.
---DUMP---
Caught SIGBUS, dumping stack:
/usr/bin/rtorrent(+0x2277d) [0x55ebc82ee77d]
/lib/x86_64-linux-gnu/libpthread.so.0(+0x110e0) [0x7f678f13d0e0]
/usr/lib/x86_64-linux-gnu/libcrypto.so.1.1(SHA1_Update+0x140) [0x7f678ff50710]
/usr/lib/libtorrent.so.21(+0x8ffc2) [0x7f6790724fc2]
/usr/lib/libtorrent.so.21(+0x90035) [0x7f6790725035]
/usr/lib/libtorrent.so.21(+0x8ef8f) [0x7f6790723f8f]
/usr/lib/libtorrent.so.21(+0x2b18c) [0x7f67906c018c]
/usr/lib/libtorrent.so.21(_ZN7torrent11thread_base10event_loopEPS0_+0x180) [0x7f679071d7e0]
/lib/x86_64-linux-gnu/libpthread.so.0(+0x74a4) [0x7f678f1334a4]
/lib/x86_64-linux-gnu/libc.so.6(clone+0x3f) [0x7f678e5d8d0f]

Error: Success
Signal code '2': Non-existent physical address.
Fault address: 0x7f6773512000
The fault address is not part of any chunk.

---END---
```

**Background:** I use the web interface [Flood](https://github.com/Flood-UI/flood) and it uses a custom field to represent the timestamp for when I originally added a torrent file. This value is only set by Flood when I add a torrent through its interface; if a torrent is added by way of saving it to a WATCH_DIR, this custom field value is never set, and the interface reads "12/31/1969" (basically its way of saying null).

I played around with the pyrocore CLI tool "lstor" and searched Flood's source code to find that it is calling `d.custom.set=addtime,XXXXXXXXXX` where *XXXXXXXXXX* is the Unix/Epoch version of the current system time at that moment.

**I want to accomplish the same thing via rtorrent.rc when a torrent is added from a WATCH_DIR**

Since the built-in *system.time* is apparently static based on when rtorrent is started, the only way I can figure out to capture the system time at any given moment is to execute a shell command, so I have:
~~~
method.insert = system.current_time, simple, "execute.capture=bash, -c, \"echo -n $(date,+%s)\""
~~~
And now I want to invoke `d.custom.set` in my `schedule2` line and pass in the result of that method as a value for a new custom field. Here's my attempt:
~~~
`schedule2 = watch_start, 10, 10, ((load.start_verbose, (cat, (cfg.basedir), "*.torrent"), "d.custom.set=addtime,system.current_time"))
~~~
I have no idea if my syntax is right or if what I want to accomplish is even possible, but this isn't working. The torrent gets added but the Unix timestamp is not being assigned. Instead the Flood interface shows "Invalid Date" which AFAIK is the return string of the ECMASCript standard ToDateString.... the tl;dr is whatever value "system.current_time" resolves to is not recognized as a valid Unix-style datetime value.

1. Is what I want to do - pass in a "dynamic" variable value, such as the current time at a given moment (like when a torrent is added via the schedule2), to d.custom.set - *possible*? If so,
2. What would be the correct syntax? I have spent hours scouring all the rtorrent scripting documentation I can find and have not found a good example of this use-case. 
Hello!

I guess it's not exactly an issue, but I figured it out this is the place where I could get some help and it's pretty non-specific, so it could be useful to others.

I'm using ext4 WD Red NAS HDD network drive through 100 Mbit connection to store seed data and I have lots of torrents (around 30k, using around 9 TB of hdd space). Machine serving NFS is pretty weak, it's Atom 1.7 Ghz with 4 GB of RAM. Machine that is running rtorrent is strong: Core I7 3.5 Ghz, 32 GB RAM, no problems there.

For almost 12 hours now, rtorrent is launching and torrents are in [OPEN] state. I get constant 0.8 to 1 Mbit transfer on ethernet interface. Most of the memory usage on Atom machine is around 80% for cache, 15% for buffers, and tiny amount that is actually used, CPU is pretty chilled there floating around 3%, load average is going from 1.5 to 1.9.

So it's not actually usable because it seems that this state could last for days, but my question is whether 1 Gbit network would help here? It's strange because it seems network here is not the bottleneck, and I don't know if network upgrade makes any sense. Actually I'm just trying this out right now, and it is supposed to be on 1 Gbit network soon.

Edit: torrents are not seeded on tracker yet. rtorrent process is in "disk sleep" state.

Please help!
While idling, rtorrent has 100% cpu usage, stuck in an `epoll_wait` loop identical to #580.

I've tested libcurl/7.67.0 and libcurl/7.68.0 and they both exhibit this issue, but libcurl/7.64.0 is fine.

I'm not sure which curl commit re-regressed this but unfortunately I don't have time to bisect.
I am trying to configure RTorrent to run as a service without screen/xterm/etc
I am using the new `system.daemon = true` flag in the .rc configuration file (as well as in ExecStart= with -o), however it is not making any difference.

*** rTorrent 0.9.8/0.13.8  ***

journalctl -xe   entry:
```
-- Unit rtorrent.service has begun starting up.
Jan 04 01:52:02 alfred rtorrent[30660]: Error opening terminal: unknown.
Jan 04 01:52:02 alfred systemd[1]: rtorrent.service: Control process exited, code=exited status=1
Jan 04 01:52:02 alfred systemd[1]: rtorrent.service: Failed with result 'exit-code'.
Jan 04 01:52:02 alfred systemd[1]: Failed to start rtorrent.
-- Subject: Unit rtorrent.service has failed
-- Defined-By: systemd
-- Support: http://www.ubuntu.com/support
```


Simplified the script and improved portability.
rTorrent refuses to ingest the top torrent link at [the wikipedia dump list](https://meta.wikimedia.org/wiki/Data_dump_torrents#English_Wikipedia) ( [archive.org snapshot for posterity](https://web.archive.org/save/https://meta.wikimedia.org/wiki/Data_dump_torrents#English_Wikipedia) ).

Trying to increase debug logging does not help. All I see is:
```
1577984830 E Could not create download: Invalid magnet URI.
```
Hello,

rtorrent keeps crashing regularly, I've not been able to find why.

OS: Debian 10.2
rtorrent version: 0.9.8
libtorrent: 0.13.8

```
1576725433 C Caught signal: 'Segmentation fault.
---DUMP---
Caught Segmentation fault, dumping stack:
/usr/local/bin/rtorrent(+0x3a896) [0x55a16c33c896]
/lib/x86_64-linux-gnu/libpthread.so.0(+0x12730) [0x7f84afef6730]
/lib/x86_64-linux-gnu/libcurl.so.4(+0x38d1d) [0x7f84b00e1d1d]
/lib/x86_64-linux-gnu/libcurl.so.4(curl_multi_socket_action+0x25) [0x7f84b00e1ff5]
/usr/local/bin/rtorrent(+0x138849) [0x55a16c43a849]
/usr/local/lib/libtorrent.so.21(_ZN7torrent9PollEPoll7performEv+0xca) [0x7f84affc91ea]
/usr/local/lib/libtorrent.so.21(_ZN7torrent9PollEPoll7do_pollEli+0x70) [0x7f84affc9420]
/usr/local/lib/libtorrent.so.21(_ZN7torrent11thread_base10event_loopEPS0_+0x110) [0x7f84b00023d0]
/usr/local/bin/rtorrent(+0x39925) [0x55a16c33b925]
/lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xeb) [0x7f84afa2409b]
/usr/local/bin/rtorrent(+0x3a1ba) [0x55a16c33c1ba]
```

Anyone here ever faced this issue ?