<!-- Thanks for reporting an issue! Please make sure you click the link above to view the issue guidelines, then fill out the blanks below. -->

What are the steps to reproduce this issue?
-------------------------------------------
1. git secret reveal -FPf

What happens?
-------------
stat: cannot read file system information for '%04OLp': No such file or directory

What were you expecting to happen?
----------------------------------
No issues

Any logs, error output, etc?
----------------------------
stat: cannot read file system information for '%04OLp': No such file or directory

Any other comments?
-------------------
Looks like macos 10.15 Catalina version of stat doesn't use -f (--format) anymore, but -c now.
In the function '__get_octal_perms_osx' in src/utils/_git_secret_tools_osx.sh, the command should be
`stat -c "%04a" "$filename"` when on macos 10.15 Catalina

What versions of software are you using?
----------------------------------------
**Operating system:** 
Darwin 19.2.0 Darwin Kernel Version 19.2.0: Sat Nov  9 03:47:04 PST 2019; root:xnu-6153.61.1~20/RELEASE_X86_64 x86_64 i386 MacBookPro16,1 Darwin

**`git-secret` path:** 
/usr/local/bin/git-secret

**`git-secret` version:**
0.3.2

**`git` version:**
git version 2.21.1 (Apple Git-122.3)

**Shell type and version:**
zsh 5.7.1 (x86_64-apple-darwin19.0)

**`gpg` version:**
gpg (GnuPG) 2.2.19
libgcrypt 1.8.5

<!-- Love git-secret? Please consider supporting our collective:
ðŸ‘‰  https://opencollective.com/git-secret/donate -->

See https://travis-ci.com/sobolevn/git-secret/jobs/271949602#L1422

The error message reported is
````
       install: unrecognized option '--gemfile=/tmp/kitchen/Gemfile'
       Try 'install --help' for more information.
````
testing. This PR shows the current build process is broken

See #569 

Builds continue to work on all systems except Alpine. 
Test building rust version
As per https://github.com/bats-core/bats-core/issues/155 , there's a known issue with `bats-core` possibly hanging on subprocesses because of it's use of fd3.

We run lots of subprocesses in the tests for  [git-secret](https://github.com/sobolevn/git-secret/), (very few of them what I would consider 'long running', but some that might take a second), but I can't seem to consistently avoid hitting this issue when I use cntrl-C when using bats-core on git-secret on OSX (IE, when interrupting 'make test')-- no matter what I do with fd 3 and trapping SIGINT as suggested in the docs and the bats-core issue above. 

When the tests hang on ctrl-c, they always appear up in ps output similarly to this this:

`examp            14622  93.4  0.0  4288452   2132 s002  R    11:44AM   1:29.63 bash /Users/examp/gitsrc/git-secret/vendor/bats-core/libexec/bats-core/bats-exec-test -x /Users/examp/gitsrc/git-secret/tests/test_reveal.bats test_run_-27reveal-27_with_password_argument 1`

and that process appears to be waiting on other subprocesses that have already exited.

I would love to resolve this issue, I've been hitting it for quite a while.
It would be useful to have a test to make sure we do the "right thing" if the user has both an active and a revoked key for the same email address.

See #552 
This would help users to understand how git-secret internally operates.

This would also help users and developers debug and fix issues such as expired or revoked keys in their gitsecret keyrings.
<!-- Thanks for reporting an issue! Please make sure you click the link above to view the issue guidelines, then fill out the blanks below. -->

What are the steps to reproduce this issue?
-------------------------------------------
1. Create a new git repository, with a file you'd like to encrypt
2. `git secret tell` a key with multiple identities
3. `git secret hide`

What happens?
-------------
git-secret aborts.

What were you expecting to happen?
---------------------------------
The hide to succeed.

Any logs, error output, etc?
----------------------------
```
$ git secret hide
gpg: error retrieving 'email@example.com' via WKD: No data
gpg: email@example.com: skipped: No data
gpg: /path/to/example/secret.txt: encryption failed: No data
git-secret: abort: problem encrypting file with gpg: exit code 2: secret.txt
```

Any other comments?
-------------------
I verified that another key works just fine.

This is they key I'm trying to `git secret tell` to: [DD2C 4F19 5E70 A0D9 2F86  2D6F 60BA 2A8B FD58 3641](https://keybase.io/cantido/pgp_keys.asc).

There are several revoked identities on that key, and the error message says the error is in retrieving one of the revoked identities. I used one of the valid identities when I added the key via `git secret tell`. All identities, including the revoked ones, are listed by `git secret whoknows`.

What versions of software are you using?
----------------------------------------
**Operating system:** (`uname -a`)
`Darwin hostname 18.7.0 Darwin Kernel Version 18.7.0: Tue Aug 20 16:57:14 PDT 2019; root:xnu-4903.271.2~2/RELEASE_X86_64 x86_64`

**`git-secret` path:** (`which git-secret`)
`/usr/local/bin/git-secret`

**`git-secret` version:** (`git secret --version`)
`0.3.1`

**`git` version:** (`git --version`)
`git version 2.23.0`

**Shell type and version:** (`$SHELL --version`)
`zsh 5.3 (x86_64-apple-darwin18.0)`

**`gpg` version:** (`gpg --version`)
```
gpg (GnuPG) 2.2.17
libgcrypt 1.8.5
Copyright (C) 2019 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Home: /Users/user/.gnupg
Supported algorithms:
Pubkey: RSA, ELG, DSA, ECDH, ECDSA, EDDSA
Cipher: IDEA, 3DES, CAST5, BLOWFISH, AES, AES192, AES256, TWOFISH,
        CAMELLIA128, CAMELLIA192, CAMELLIA256
Hash: SHA1, RIPEMD160, SHA256, SHA384, SHA512, SHA224
Compression: Uncompressed, ZIP, ZLIB, BZIP2
```

<!-- Love git-secret? Please consider supporting our collective:
ðŸ‘‰  https://opencollective.com/git-secret/donate -->

When we cut a new release, new deb files get uploaded to 
https://dl.bintray.com/sobolevn/deb
but the Packages files there get updated to include all but the current release. 

It seems like perhaps the Packages files get generated before the deb packages are created? Not sure.  

 (This issue  is a cleanup of  #460 -- see that PR for more details. 
As noted in #460 this could be related to #312)
Currently, the [gh-pages branch](https://github.com/sobolevn/git-secret/tree/gh-pages), which is what the site https://gitsecret.io comes from, has text and scripts that do not exist in the master branch.

I suggest we unify the contents of the gh-pages branch with the master branch, and arrange that the needed contents for the `gh-pages` branch and https://gitsecret.io website are generated on demand.