In fact, this issue has two different cases

1. Account creation on social login: locale id is not set correctly, it's always the default one. We can easily fix this by overriding `allauth`'s social account adapter (see commit https://github.com/CJWorkbench/cjworkbench/commit/a306b1dc446e07d7eda75dd69feb82352947f8ba).
2. Social login with existing account: locale cookie is never written (because execution does not pass from our login view for normal logins), so the locale shown after login is the one that it was before login, instead of the one saved in user profile. Since we need a response on which to set the cookie and since each social provider has different urls and views, this can't be fixed equally easily.

The hamburger menu is hidden for not logged-in users, hence they do not have access to locale switcher
In lesson [VIII. Make a chart of police stops by race.](https://app.workbenchdata.com/lessons/en/open-policing), the file <https://app.workbenchdata.com/public/moduledata/live/76723.csv> cannot be found: it throws 503 Service Unavailable
Encountered three times (different workflows): create a workflow and try to edit it after several hours. It works as read only, can't edit or create a new tab (tab shows but can't move to it or rename it and disappears when browser is refreshed). Last workflow tested was last edited 15 hours back. Using Chrome on Win 10.  
I can still start a new workflow. Further, I found if I go back to Workflow List (my workflows) and open the read only one, it becomes editable [failed to reproduce later, may be server or connectivity or load issues].
In order to make a new data loader I had to add this to my YAML config:

```yaml
- id_name: version_select
  type: custom
  name: Update
```

This should be in the docs.
It's super-critical anytime anyone is working with ACS data that they understand that the data has inherent error. I see some evidence in the code this was intended to be supported, but just hasn't been fully implemented.
It would be useful if I could add a longer help string for each individual parameter. It would make it much less likely a user has to jump out to separate documentation in order to understand how a module works. (Perhaps this could be displayed as a tooltip alongside the name.)
Currently any Workbench module can only have a single Python module. This makes it difficult to write well-factored and readable code. It would be great if we could have the entrypoint discovered either by magic module name (eg. `main.py`) or by having it documented in the YAML config.
Hi,
when I add from URL a file, workbenchdata does inferencing to map the field types. It's a great feature but sometimes gives wrong results.

In example here (https://app.workbenchdata.com/workflows/17120) I import an XLS file and it maps the field "CODISTAT" as number and it's a problem, because in the source xls file it's a text field. And then in workbenchdata the value "001801" becomes "1801" and it's not so good.

It would be great to have an option in the module to have "no inference", and have all fields as text field.

Thank you