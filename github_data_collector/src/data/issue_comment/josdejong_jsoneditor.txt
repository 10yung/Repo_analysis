Opened this merge request to further improve the imports of SCSS. A couple of changes here:

- Created a root `jsoneditor.scss` which imports all the sub files. So in general, if you would need to import the entire styling of the editor you can import the one file, instead of all separate files 
- Moved all styling to a folder called jsoneditor. It is still possible to import single scss files
- Renamed `styles.scss` to `variables.scss`
- Updated the gulp file accordingly, which is simplified now. 

Upgrading to this will further improve the experience of users of scss. 

The `selectr.scss` is currently in the js folder, therefor mentioned seperatly in the gulp file. This is a bit unfriendly if people want to use the scss files. They would miss out on this styling. Is it an option to move this file also to the `scss/jsoneditor` folder? Perhaps in a subfolder? 

Note: No styling has changed or adjusted.
Hello,

Is there any method to change the header background color?
Hi there,

Is there any option we can Beautify JSON if it has an issue as well. Like https://jsonlint.com

Thanks
Hello,

I have a concern regarding this whether it is free or not?

Can you please help me out?
Discussion: #857

This is a proof concept of `createQuery` and `executeQuery` for custom query language support.
In autocomplete, when the options menu show above the input, the menu is often cut by the boundary of the editor, as shown bellow. How to fix it? Thanks.
<img width="140" alt="截屏2019-12-11下午7 53 41" src="https://user-images.githubusercontent.com/31716017/70619479-0aa88880-1c50-11ea-9ed6-6346d517fa83.png">

There should be an option for explicit strings in the editor. For example say I have a string representing an integer number i.e. '12345', the only way I would be able to represent this in the editor currently without messing up my validation (checks for string) would be '\\'123\\'' which is kind of annoying. 

If there was an option for explicit strings a user would need to have quotes around the string value they are setting and if they wanted a ' or " in their string they would need to put the escape sequence \\' or \\" respectively. If this is already an option please let me know. 
I am getting a warning from webpack using source-map-loader that it cannot find SourceMap 'uri.all.js.map' in 'jsoneditor/dist'. It looks like jsoneditor is not correctly exporting its source maps.

```
WARNING in <path to node modules>/node_modules/jsoneditor/dist/jsoneditor.js
Module Warning (from <path to node modules>/node_modules/source-map-loader/index.js):
(Emitted value instead of an instance of Error) Cannot find SourceMap 'uri.all.js.map': Error: Can't resolve './uri.all.js.map' in '<path to node modules>/node_modules/jsoneditor/dist'
 @ <path to node modules>/node_modules/jsoneditor/index.js 1:17-45
 ...
```
JMESpath vs JQ
-
JMESpath is super easy to understand and I like that.
However, it has some serious limitations. Namely:
- No simple if/else
- The `to_number` function doesn't support boolean values
- can't reference parents when doing iteration
- Key name can't come from an expression
- No basic math operations, add, multiply, divide, mod, etc.
- There's a join, but no split
- No array indexing based on expression
- No ability to group_by an expression.
- No ability to get the index of an element in a list

I think this really prevents JMESpath from being as general purpose as [jq](https://stedolan.github.io/jq/manual/).

I thought that perhaps, by using the [jq-web](https://github.com/fiatjaf/jq-web) library, we could extend the transform feature to allow for jq queries also.

UI wise, I think that we could just add tabs for both JMESpath & jq at the top of the transform overlay.

Considering the limitations I listed above, I think that its fairly easy to say this would solve a lot of use cases where [jsoneditor](https://github.com/josdejong/jsoneditor) wouldn't have been powerful enough to solve the issue at hand.

Interested in hearing the communities' thoughts.
I am getting this error when I do `arc diff develop` from working branch. However, `arc diff develop --create` is working fine. Tried using `arc diff develop --update`, but the same issue is coming with that command.
The issue is, after every review, I am bound to run `arc diff develop --create` which is causing problem in tracking the revisions. 

```
{
  "phabricator.uri": "https://phabricator.noc.tvlk.cloud/",
  "repository.callsign" : "TPXIX",
  "arc.land.onto.default": "develop",
  "load": ["backend-arcanist/src"]
}
```

This is the configuration of my .arcconfig file.