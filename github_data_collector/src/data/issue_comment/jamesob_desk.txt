## Desired behaviour

When I create the following alias inside a desk:

~~~bash
# Tmux shortcut
alias t="tmux"
~~~

And add, to the same desk, the following function:

~~~bash
# Do something cool
function tns() {
   ...
}
~~~

I would to receive the following output when type `desk` (with the desk loaded)

```
global - Common shared configurations

  t     Tmux shortcut
  tns   Do something cool
``` 

## Actual behaviour

When I do that, I receive:
```
global - Common shared configurations

  t     Tmux shortcut
# Do something cool Do something cool
  tns   Do something cool
``` 

## Aditional info

I've noticed that this only happens with aliases that has a high similarity with functions.

For example, I have a `k` alias and a `kl` alias. This won't happen. But if I have a `k` alias and a `kl` function this happens.
Extra instructions for oh-my-zsh
The `_command_offset` function is provided by bash-completion.  I'm not sure if this should assume that environment or offer any alternatives.
Running `strace desk run hello something` leads to desk deciding my shell is `strace`, so it invokes `strace -ic something`.  This actually runs something, but without the requested desk environment and a confusing strace warning and output.


This makes desk unusable in some pipelines (or any pipelines if you don't like guessing).

This is a little complicated to reproduce.  For instance, changing the first command from `ls` to `seq 10` usually succeeds.  I'm not sure what the reason is here, but it is likely related to the fact that `seq` can produce output sooner than `ls`.

```bash
:; desk run hello ls | desk run hello tac
[hangs]^C
[1]+  Stopped                 desk run hello ls | desk run hello tac
:; fg
desk run hello ls | desk run hello tac
[exits]
```

Or, if run with no controlling tty, we get warnings but the pipeline is otherwise functional.
```bash
:; desk run hello ls | desk run hello tac
bash: cannot set terminal process group (6214): Inappropriate ioctl for device
bash: no job control in this shell
bash: cannot set terminal process group (6211): Inappropriate ioctl for device
bash: no job control in this shell
[correct output follows]
```

I think this all has something to do with multiple shells trying to manage the foreground process on the terminal.  This can be avoided if `desk run` stops using the `-i` flag and simply injects `. $DESK_ENV;` in front of the command to run.
With the old url: `git@github.com:jamesob/desk.git` we get a Permission denied error

```
ubuntu@ip-172-31-5-138:~$ git clone git@github.com:jamesob/desk.git
Cloning into 'desk'...
The authenticity of host 'github.com (192.30.253.113)' can't be established.
RSA key fingerprint is SHA256:nThbg6kXUpJWGl7E1IGOCspRomTxdCARLviKw6E5SY8.
Are you sure you want to continue connecting (yes/no)? yes
Warning: Permanently added 'github.com,192.30.253.113' (RSA) to the list of known hosts.
Permission denied (publickey).
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
```
I am getting the following error when trying to open a Deskfile in the terminal window of PhpStorm:

```
/usr/local/bin/desk: line 133: exec: jediterm-bash.in --bash -i: not found
```

Seems to be because the terminal plugin in Phpstorm is opening terminal sessions with additional flags which contain a path. This makes the approach chosen by desk to determine the shell interpreter impossible.

```bash
/bin/bash --rcfile /Users/wesselvdv/Library/Application Support/JetBrains/Toolbox/apps/PhpStorm/ch-0/182.3911.43/PhpStorm.app/Contents/plugins/terminal/jediterm-bash.in --login -i
```
Adds the ability to load a desk into the current shell.  Useful for things like tmux where we've already started a new shell.

Usage: `eval $(desk load <name|dir>)`

Fixes #36 
When I switch to a desk and then create a new terminal window, eg urxvt, I would love to have this use the same desk. This could be similarly accomplished as we do it with resuming on the same path.

I'm just wondering if anyone is doing this already and could point me in the right direction.

What would also be interesting is to start urxvt in a specific desk mode.

thanks!
Hello
Thanks for desk it's really clever and useful
I think it will be nice to add a trigger when we edit a desk from inside (`desk edit`) to exit and reload the desk.

Great script!