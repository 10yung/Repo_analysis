## Describe the bug
Router event not working

## Occurs in next-i18next version
3.0.1

## Steps to reproduce
just normal setup and this event on any page 
`Router.events.on("routeChangeComplete", url => {
    console.log('routeChangeComplete', url);
  });`

## Expected behaviour
event should not break

## OS
 - macOS Catakina
 - Browser: Chrome 79.0.3945.117

## Additional context
- I'm not using `localeSubpaths`
- Also found an issue with the dynamic path. `pages/[zone]/about.js` then URL pattern will be `xyz.com/us/about`. router.push not working properly. current behavior: if we push with `in` then again `us`. `us` will not be updating. actually it breaks default routing behavior. 
- This is a query: how we can archive this URL pattern with `localeSubpaths` `xyz.com/[zone]/en/about`? 

## Describe the bug
Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons: 1. You might have mismatching versions of React and the renderer (such as React DOM) 2. You might be breaking the Rules of Hooks 3. You might have more than one copy of React in the same app See https://fb.me/react-invalid-hook-call for tips about how to debug and fix this problem.

## Occurs in next-i18next version
3.0.1

## Steps to reproduce
Without withTranslation wrapper everything is ok
```typescript
const App = () => <MainLayout>
    <div>asdasd</div>
</MainLayout>;

export default App;
```

As soon as we add withTranslation wrapper, application crashes with React error above
```typescript
const App = () => <MainLayout>
    <div>asdasd</div>
</MainLayout>;

export default I18n.withTranslation()(App);
```
## Expected behaviour
Render without problems

## OS (please complete the following information)
 - Device: Linux Ubuntu 18.04
 - Browser: Chrome 77.0.3865.75

## Describe the bug
Links are not working after changing language using `i18n.changeLanguage()`.
Throws an error that said:

> Your `<Link>`'s `as` value is incompatible with the `href` value. This is invalid.
But it's lying (:

I'm sure that `as` and `href` props are compatible. It's working in **EN** language. Not working after changing language!!!

For example:
```js
<Link href"/blog/[slug]" as="/blog/this-is-a-test-slug">
    <a href="/blog/this-is-a-test-slug">click on me</a>
</Link>
```

## Occurs in next-i18next version
I'm using next-i18next version 1.2.1.
I know it's not updated but I checked out the new versions commit and I don't think so it's the reason for this problem. But I would test it with the new version too.

## Steps to reproduce
Unfortunentlay, I can't.
But if it would help you, I exported `<Link />` from the `next-i18next` instance.
I also passed "as" and 'href' props both.

## Expected behavior
Links should work fine after changing the language!

## OS (please complete the following information)
 - Device: in all devices
 - Browser: in all browsers

## Additional context
I'm using **styled-components** for creating my components.
I have Buttons and other components that linked using the LInk component.
At first, I thought it's because of using styled-components.
But now I have native `<a />` tags that have the same issue.
So, It's not a problem with styled-components.

I used default `<Link />` of `next/link`. And it works fine.
I also find out something else!
This problem is for `<Link/>`s with `as` prop only. If I don't use `as`, the page navigates fine.
## Describe the bug
Hello, I'm trying to mount my component in jest test suite. The component is really simple it just push a new route with the exported `next-i18next` router.

```jsx
const ComponentFilter = ({}) => {
    Router.push(
      {
        pathname: PathMap.components.pathname,
        query: {
          categorySlug: Router.query.categorySlug,
        }
      },
      PathMap.components.as([Router.query.categorySlug])
    );

return HERE YOUR INPUT FIELD;
}
```
test
```jsx
test('Click checkbox', async () => {
  const { getByLabelText } = render(<FilterComponent />);
  const checkbox = getByLabelText('components:compatibleCheckboxLabel');
  fireEvent.click(checkbox);
});
```

I got the error:
```
Render component list with active filter, toggle filter
lca:     TypeError: Cannot read property '0' of undefined
lca:       17 |     setMyrobot(myRobotCompatible);
lca:       18 | 
lca:     > 19 |     Router.push(
lca:          |            ^
lca:       20 |       {
lca:       21 |         pathname: PathMap.components.pathname,
lca:       22 |         query: {
lca:       at Object.Router.<computed> [as push] (../../node_modules/next-i18next/dist/commonjs/router/wrap-router.js:52:63)
```

this occurs because the property `i18n.languages` is undefined.

https://github.com/isaachinman/next-i18next/blob/785c8bcbe35c3e31bc8ae80342542e961e3b07ee/src/router/wrap-router.ts#L38

How should I do it in my tests?

## Occurs in next-i18next version
2.1.0

## Expected behaviour
The i18n instance should be initialized and ready when next-i18next is created.

Related:
https://github.com/i18next/i18next/blob/ca38b449529bb25232590b8054abf5e5026854e3/src/i18next.js#L249

## Describe the bug
In normal `<Link>` from `next/router`, it works when you don't provide href props.
When we use 1-1 replacement from next/router to next-i18next router, it doesn't work anymore

## Occurs in next-i18next version
2.1.3

## Steps to reproduce

Example 1:
```js
<Link>Hello World </Link>
// 'href' type must be either 'string' or 'object', but it is undefined
```

Example 2 from Real Case
```js
let href, as;
let text = 'loading'
setTimeout(() => {
  const id = '5';
  href = `/test/${id}`;
  as = {{ pathname: '/test/test-detail', query: { id }}};
  text = 'Loaded';
}, 1000);
return (
  <Link href={href} as={as}>
    { text }
  </Link>
);

// 'href' type must be either 'string' or 'object', but it is undefined
```

## Expected behaviour
The behavior should be the same with next/router which allow undefined href.
The use case is that when you may not have the href during render. 

## Screenshots
https://github.com/isaachinman/next-i18next/blob/5e5ef787dbfb243ecb7a63bcf0de6dccc32c8b94/src/utils/lng-path-corrector.ts#L26-L40


## OS (please complete the following information)
 - Device: MBP 2013 13"
 - Browser: Google Chrome 79.0.3945.88

## Additional context
This worked on older version of next-i18next `0.44.0`
I get this error after building: You have opted-out of Automatic Static Optimization due to getInitialProps in pages/_app.

My _app.js file:
```
import React from 'react';
import App from 'next/app';
import Head from 'next/head';
import { Provider } from 'react-redux';
import { store } from 'store';

import { appWithTranslation } from '../i18n';

@appWithTranslation
class MyApp extends App {
    render() {
        const { Component, pageProps } = this.props;
        return (
            <Provider store={store}>
                <Component {...pageProps} />
            </Provider>
        );
    }
}

export default MyApp;
```

I know appWithTranslation HOC contains getInitialProps so that warning appears. Is there anyway to use it on each page individually but not the ```pages/_app.js```?
Thanks.
Same issue as this one here: https://github.com/isaachinman/next-i18next/issues/381
Using version 1.2.1

I am not using static files but each page will attempt to load the static defaultNS and fail at loading it.

## Steps to reproduce
I am using the following config
```
const nextI18n = new NextI18Next({
  defaultLanguage: 'de',
  otherLanguages: ['de', 'fr', 'it'],
  defaultNS: 'common',            
```

## Screenshots
If applicable, add screenshots or a GIF to help explain your problem.

## OS (please complete the following information)
 - Device: MBP OSX 10.14.6
 - Browser: Chrome 78.0.3904.108


- [x] `useRouter`
- [x] `withRouter`
- [x] Update example
- [ ] Update README
- [x] ~Eventually update bundle size limits (I hit the error locally)~
- [ ] Add tests

Before updating the README, maybe @isaachinman you can tell me if the rest looks good to you :)
## Describe the bug
I attempted to deploy the example code to now using the existing setup. There were some clear issues that I was able to resolve, but after solving those issues the release was still unsuccessful. The error I received in the now logs after the release is below.

`ENOENT: no such file or directory, scandir '/var/task/static/locales/en'`

## Occurs in next-i18next version
v2.1.1

## Steps to reproduce
- Clone `next-i18next` repository
- Navigate to `examples/simple` directory
- Remove `next-i18next`, `react`, `react-dom` from `package.json`
- Run `npm install`
- Run `npm install next-i18next react react-dom`
- Run `now`

## Expected behaviour
Example solution to deploy to now site.

## OS (please complete the following information)
 - Device: MBP 2019 15"
 - Browser: N/A

## Additional context
After some research I found out that NextJS version 9 prefers the use of build-time configuration over runtime configuration, https://github.com/zeit/next.js/#runtime-configuration.

> Warning: Generally you want to use build-time configuration to provide your configuration. The reason for this is that runtime configuration adds rendering / initialization overhead and is incompatible with automatic static optimization.

I have been reading some other issues and pull requests and following some movement of files to `public` folder. I also have been following your discussions about offering the middleware with NextJS serverless. Some of those may solve this issue as well. If it would be possible to have a working example, perhaps after the pull request moving to use the `public` folder that would be amazing.
## Describe the bug
When I switch the language e.g from `/de/products/1` to `/en/products/1` by `i18n.changeLanguage` and use the browser back button to see the content again in `de` the language is not changed and therefore the content language wasn't requested (getInitialProps) in the correct language.

When I navigate multiple times back no `getInitialProps` is fired at all only the URL is changed.

## Expected behaviour
I would expect that the language is updated so that the content is fetched in the correct language.

## OS (please complete the following information)
 - Browser: [Chrome 70]

## Additional context
Add any other context about the problem here.
