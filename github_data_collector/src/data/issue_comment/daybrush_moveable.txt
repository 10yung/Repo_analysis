Hello,
On angular 8, moveable 0.9.5, I use width and height in the onResize function, but sometimes they got values (especially height when resizing on the bottom of an element) which are not realistic, like -200px when i start to resize, of 1050px, while the resizable element il 500px in fact.

Here is the code :

```
onResize({ target, width, height, drag }, element: Element) {
        `const` temp: Element = Object.values(element)[1];
        target.style.width = `${width}px`;
        target.style.height = `${height}px`;
        element.setPos(drag.beforeTranslate[0], drag.beforeTranslate[1]);
        target.style.left = `${drag.beforeTranslate[0]}px`;
        target.style.top = `${drag.beforeTranslate[1]}px`;
}
```

Thanks
## Environments
* Framework name: Angular
* Framework version: 8.2.14
* Moveable Component version: 0.9.4
* Testable Address(optional): https://codesandbox.io/s/tender-darkness-wef2i?fontsize=14&hidenavigation=1&theme=dark

## Description
Frame 'CSS' values are not getting same, with bounds.

Steps to reproduce issue: In this [demo](https://codesandbox.io/s/tender-darkness-wef2i?fontsize=14&hidenavigation=1&theme=dark)

1. Rotate the control box and drag it to the bottom.
2. Check values of frame CSS
3. Drag and Drop to the bottom repeatedly and check the values. Top value is different, I think it should not change, Right?

#129 
Hi @daybrush 
Please add an option for using with zoom.
![captured (6)](https://user-images.githubusercontent.com/51266596/72417329-3d8ff000-37ab-11ea-9601-f6c2312ca184.gif)
The control points size should keep original size when zoom in/out
thank you!
## Environments
* Framework name: Angular
* Framework version: 8.2.14
* Component name: 
* Component version:
* Testable Address(optional): 

## Description
If we create div tag inside div tag and set contentEditable="true" then draggable doesn't work.

It's not working because we have set this:
if (inputEvent.target.nodeName === "DIV") {
     stop();
}

drag should stop only for the element which is set as contentEditable="true".

[Demo](https://codesandbox.io/s/throbbing-dust-5bkp4)

See attached gif:
![draggable_issue](https://user-images.githubusercontent.com/52629529/72206195-ed661480-34b0-11ea-8d6b-6f6b534a2642.gif)




## Environments
* Framework name:  Angular
* Framework version:  8.2.14
* Component name:  
* Component version:
* Testable Address(optional): [Demo for issue no. 1](https://codesandbox.io/s/competent-meadow-b4kph?fontsize=14&hidenavigation=1&theme=dark)

## Description
There are issues with contenteditable set to true:

1) **Contenteditable is not working on certain tags e.g Heading tags (H1, H2 etc), Div tag.** **Also on left 
    click it is not editable** but on right click it is working but as we know right click is a strange 
    behavior as user always will always try to edit the content with left click. 

    **Note: It is working fine for SPAN tag for both clicks. Comment out span tag and comment h1 tag from demo to see the output**

2) Contenteditable is not working for multiple elements inside Groupable.


[Demo for issue 1](https://codesandbox.io/s/competent-meadow-b4kph?fontsize=14&hidenavigation=1&theme=dark)

@daybrush  and All,

I've made a tool with moveable package, support drag select with 2 options:

- Drag select from Left to Right: Select all elements within drag area:
![Screenshot from 2020-01-11 11-22-14](https://user-images.githubusercontent.com/51266596/72198780-dc8fb180-3464-11ea-8350-0ca47c1c2829.png)

- Drag select from Right to Left: Select all elements that cross drag area
![Screenshot from 2020-01-11 11-22-25](https://user-images.githubusercontent.com/51266596/72198781-f3ce9f00-3464-11ea-9647-160480339850.png)

In my library, I've used Intersection Observer to detect elements available on screen only. Because when we have very amount of elements, if we don't use Intersection Observer, it's very slow to detect elements (I've test with 10,000 elements without using Intersection Observer and it's weird).

My library work very well in Production mode, but in Development mode, the Intersection observer is abit slow to initialization. So if you increase demo elements to > 1000, you should wait until Intersection observer finish detect elements for the first time before use.

Can @daybrush and all of you help me resolve this problem?

This is my library demo and source code:
[https://codesandbox.io/s/react-moveable-with-full-drag-select-9cg81](https://codesandbox.io/s/react-moveable-with-full-drag-select-9cg81)

And this is my demo how to use Intersection observer for js:
[https://codesandbox.io/s/test-intersect-observer-uog2j](https://codesandbox.io/s/test-intersect-observer-uog2j)
@daybrush 
Can you add Rotation at corners feature, this feature will make UX better, because when we have alot of elements in the art board, display rotation control at top, bottom, left, and right is weird. You can see almost drawing tool using rotate at corners, e.g: Photoshop, Illustrator, Adobe XD, corel, .......
And this is demo of Figma:
![captured (2)](https://user-images.githubusercontent.com/51266596/72197486-5d927d00-3454-11ea-9575-fb1c9675617c.gif)

Anyway, your commit for "fix: fix control points rotation #151" is very good. Thank you for your library. And sorry if I opened so much issues.
@daybrush How can use scrollable?
See this demo, scrollable not working as expect.[https://codesandbox.io/s/react-moveable-demo-cudj3](https://codesandbox.io/s/react-moveable-demo-cudj3)
Hi all,
I've made an app with react-moveable, the click drag to select is like this demo:
![ezgif com-crop](https://user-images.githubusercontent.com/51266596/71961458-ee394500-3229-11ea-8faa-e46d5a8e2817.gif)
If you need this feature, please comment bellow this, I'll to publish it if much people need this.