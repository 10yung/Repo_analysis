I would like to solve this issue as this gentleman explains but i don't know how to do it. Any suggestions? Thanks

https://github.com/socketio/socket.io/issues/1942#issuecomment-82352072
Hi, I use https portal in my project. Now, I want to make proxy configuration for backend project.

How can I achive 

location /backend {
proxy_pass http://backend-ip:3000
}
So I believe the problem is with my company's current firewall setup but I would like to get your opinion before dedicating 10+ hours to solve the unsolvable. 

Currently I have several web services behind the same ip address proxied by a firewall: 
- web1.company.net
- web2.company.net
- web3.company.net
- and so on...

Now, I have ssh access to these VMs only when connected to the company's VPN. 

Whenever I'm connected to the VPN the HTTPS works perfectly (I basically see the closed lock next to the link).

Whenever I disconnect the VPN connection and test the same website I get the following:

<img width="691" alt="Screen Shot 2019-10-25 at 4 10 38 PM" src="https://user-images.githubusercontent.com/1474127/67604763-198bb800-f742-11e9-85d6-cc69d08a95ec.png">

I also tried to check the certificate chains.

When under VPN I get the correct certificate chain:
<img width="978" alt="Screen Shot 2019-10-25 at 4 03 45 PM" src="https://user-images.githubusercontent.com/1474127/67604544-72a71c00-f741-11e9-933c-4a2fa7faccf0.png">

When I'm not connected to the VPN  I believe, I don't get the correct certificate:
<img width="972" alt="Screen Shot 2019-10-25 at 4 03 19 PM" src="https://user-images.githubusercontent.com/1474127/67604598-9f5b3380-f741-11e9-9f5c-7df4790f762b.png">

Any clue?
Hi Steve, I'm currently trying to get a nr of docker containers running over https and got nicely signed certificates for the next 90 days and subdomains are mostly directed to the correct containers.
I've setup my subdomains, domain forwarding locally on my router and all works right till the point that I want to bring all in 'offline-mode'. Perhaps my usecase is not what https-portal is intended for but what I would like to do is close port 80 and 433 on my router again so that I can only access my applications from my local LAN.
Should this work with https-portal? Or should I keep looking for a different way to achieve this with a different redirecting service?

the errors I eventually got were:
```
host not found in upstream "[containername]" in /etc/nginx/conf.d/pads.domain.org.ssl.conf
```
which results in constant reboots of the https-portal container
I have:
```
DOMAINS: 'www.howismy.com => https://howismy.com, howismy.com -> http://api:3000'
```
![image](https://user-images.githubusercontent.com/3633090/64552710-a55d9800-d2ec-11e9-9a6f-a403c5b93b4d.png)
![image](https://user-images.githubusercontent.com/3633090/64552726-ae4e6980-d2ec-11e9-922f-7afc2e6a2b0e.png)
but going to `www.howismy.com` redirects to 
![image](https://user-images.githubusercontent.com/3633090/64552792-dccc4480-d2ec-11e9-858a-97b05622be70.png)

here is the redirect:
![image](https://user-images.githubusercontent.com/3633090/64552962-4c423400-d2ed-11e9-921a-77e6bdc40abe.png)


This would be great for a RaspberryPi, but currently *amd64* is hardcoded in several places.  Please at least parameterize the architecture.
We should hide unrelated logs, only print logs that are important. And print better error messages when configuration is incorrect.