Delete for CRUD needs request data in body
Is an official release of this version planned soon?

And added LegacyJsonSerializable for PHP <5.4.0.

Closed mikecao/flight#394.
It will be useful to call json_encode directly for a `Collection` object, without an additional call to `Collection->getData()`.
 ́

**Example 1 - Current way**
```php
json_encode(Flight::request()->data->getData())
```

**Example 2 - New good way**
```php
json_encode(Flight::request()->data)
```
 ́

## Solution - Variant 1
**/flight/util/LegacyJsonSerializable.php**
```php
if (!interface_exists('JsonSerializable')) {
    interface JsonSerializable {
        public function jsonSerialize();
    }
}
```

**/flight/util/Collection.php**
```php
…
if (!interface_exists('JsonSerializable')) {
    require_once dirname(__FILE__) . '/LegacyJsonSerializable.php';
}
…
class Collection implements \ArrayAccess, \Iterator, \Countable, \JsonSerializable {
    …
    /**
     * Gets the collection data which can be serialized to JSON
     *
     * @return array Collection data which can be serialized by <b>json_encode</b>
     */
    public function jsonSerialize() {
        return $this->data;
    }
}
```
 ́

## Solution - Variant 2
Used
https://github.com/packfire/php5.3-compatibility/blob/1.0.0/src/JsonSerializable.php https://packagist.org/packages/packfire/php5.3-compat

**/composer.json**
```json
…
    "require": {
        "php": ">=5.3.0",
        "packfire/php5.3-compat": "1.0.0"
    },
…
```

**/flight/util/Collection.php**
```php
…
class Collection implements \ArrayAccess, \Iterator, \Countable, \JsonSerializable {
    …
    /**
     * Gets the collection data which can be serialized to JSON
     *
     * @return array Collection data which can be serialized by <b>json_encode</b>
     */
    public function jsonSerialize() {
        return $this->data;
    }
}
Fixes #392
Would you consider adding these to the main readme and to the repo?

I did a quick test and added them on a fork: https://github.com/magikstm/flight

Tested PHP:
- 5.5
- 5.6
- 7.0
- 7.1
- 7.2
- 7.3

I think they would give useful info on tests and PHP versions.

There's a related PR here: https://github.com/mikecao/flight/pull/212
Hi @mikecao,

This is a really nice project! Im so glad to integrate it into a big project of mine. One issue though, is that there is no built in easy way to force trailing slash or disable it altogether.

It would be nice to have this feature!

Thanks!
Hey,

I really like using Flight, great stuff, thanks!

Is there a way to sanitize / modify stuff in Flight::request()->data "once for good"?
Was trying to work around dates (input type=date not working with Safari) and was wondering if this is something I could be doing prior to actually process the posted data.

Thank you
In the official definition of Flight's routes, it is allowed to express the class callables as an array consisting of

[string, string] // static class 

or

[object , string] // object instance

In the second case, already in the definition we have to write:

[new MyClass (), 'myMethod']

which immediately causes the class constructor execution, and this can cause problems.

With the code proposed by me, however, the object instance will be created only when the route will actually be invoked.
So, even for non-static classes, we can simply write:

['myClass', 'myMethod']

avoiding the immediate execution of the constructor.