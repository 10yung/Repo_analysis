Rust 1.13
```
error[E0308]: mismatched types
  --> source/language/parser.rs:37:5
   |
37 |     rules::root(input)
   |     ^^^^^^^^^^^^^^^^^^ expected struct `parser::ast::Addition`, found enum `parser::ast::Expression`
   |
   = note: expected type `parser::ast::Addition`
   = note:    found type `parser::ast::Expression<'_>`
```
also upgrades rust & llvm (3.9 is not availlable anymore)

Take a look at https://github.com/huonw/travis-cargo. It brings support for coverage (with coveralls) and documentation upload.

I think this could be a nice have and it could save a lot of time.

It must be applied to `tagua-vm/parser` too.

Toughts?

See tagua-vm/parser#17

https://www.rustup.rs/

> Instead of re-developing our own algorithms to get a better VM, LLVM will be used. It natively provides a typed Intermediate Representation (IR) language, kind of an “opcode” (to match the classical PHP vocabulary). Because this IR language is typed, it forces us to have advanced analysis about PHP types, but this is another topic.

See: http://crystal-lang.org/2015/12/24/the-future-of-crystal.html

This kind of approach has already been done by the Crystal / Ruby community, and the blog post explains why Tagua VM's planned approach may not work.

To my knowledge there are two libraries for that, choose whichever you like, but please use one.

I just fixed some parsing (multiple files) in #19, but there are still things that just aren't as they are supposed to be like that.

I already asked via Twitter if there is a reason why you do not use one of these libraries yet. If there is no reason, I would like to implement the parsing using a library.

Follow https://github.com/rust-lang/crates.io/issues/91.

See https://www.reddit.com/r/PHP/comments/4b8sdp/tagua_vm_an_experimental_php_runtime_based_on/.
