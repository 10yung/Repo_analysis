Hello,

First, thank you for this exceptional package!

Second, I'd like to add to the remarks made in #17 and #179.

`ggfortify` integrates really well with the `broom` package, which became part of a larger effort to work on statistical models with tools like 'tidy data' and `ggplot2`:

https://github.com/tidymodels

How about making `ggfortify` part of that family of packages? Would that give it more visibility and/or help its current developer base with extending/improving it?

Poking @alexpghayes and @dgrtwo in case they might already have thought about this.

Again, many thanks for the package, and apologies if the question has already been answered elsewhere.
The following code:
```
require(xts)
require(ggfortify)
autoplot(as.xts(AirPassengers), ts.colour = 'green')
```
gives the error on master branch (no recent code changes):
```
Error in data.frame(index(model), ...) : 
  arguments imply differing number of rows: 144, 1, 0
```

Looks like some dependency changes. @sinhrks Could you look into it when you get a chance?

Hi ggfortify developer,
 
I noticed that there're two "almost-identical" documentations on for plotting PCA.
One is [here ](https://cran.r-project.org/web/packages/ggfortify/vignettes/plot_pca.html)(from cran.r-project.org), one is from [here](http://rpubs.com/sinhrks/plot_pca)(from rpubs.com). 

However, the axis for PC1 and PC2 are different (for example, if you look at first plot from the documentations linked above), output from:

```
library(ggfortify)
df <- iris[c(1, 2, 3, 4)]
autoplot(prcomp(df))
```

In fact, the PC1 from prcomp(df) should be in a range between -3.2 and 3.7, so, is this a bug in the recent release (v0.4.1)?

Thank you for your time!


Hello,

I often use the option/parameter set.lags in the lag.plot function from R to specify exactly which lags I want to plot. 

The current gglagplot function only allows you to specify a range of lags (1:lags) and plots only those, so I can't do something like this:

`lag.plot(ldeaths, set.lags=c(1, 4, 8, 10), do.lines=FALSE)`

I was wondering if you chose to only allow to plot a specified range or if implementing the set.lags is a planned/wanted thing.

Why
`ggdistribution(ppois, seq(0, 30), lambda = 20)`
gives me continous function?
Great to have this package. If I can ask for enhancement, please add support for `mvr` class object. For example the object from [`pls`](https://cran.r-project.org/web/packages/pls/index.html).
The legend is missing.

    species <- as.numeric(factor(iris[, "Species"]))
    autoplot(prcomp(iris[, 1:4]), colour = species, environment = environment())
    Warning message:
    In if (value %in% columns) { :
      the condition has length > 1 and only the first element will be used

Picking a column from the data frame works without a problem.

    autoplot(prcomp(iris[, 1:4]), data = iris, colour = "Species") # Legend shown.
Hola,

Is it possible to use lda {MASS}? Can you please provide an example?

Thanks

I firstly used the command 

```
survivalPlot <- autoplot(survivalFit, conf.int = FALSE)
```

and got a sensible looking plot.

![normalsurv](https://cloud.githubusercontent.com/assets/631218/16676168/15f6def0-450b-11e6-9f08-028b2daf98a6.png)

Then, I added a line colour and the placement of lines changed

```
autoplot(survivalFit, conf.int = FALSE, surv.colour = "red")
```

![badsurv](https://cloud.githubusercontent.com/assets/631218/16676175/1e5117d2-450b-11e6-8345-8baeb45aac18.png)

The legend also disappeared.

#103

Decide how to handle ggrepel unique kwds.
