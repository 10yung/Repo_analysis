#### Description

A clear and concise description of what the bug is.

#### Steps to Reproduce
add this URL to the parser www.fastcompany.com
check titles and descriptions.
This website's feed has some symbols encoded in the text like for example
```XML
<item>
            <title><![CDATA[Oops! Weight Watchers&#8217; Twitter campaign gets ensnared in WWIII chatter]]></title>
            <description><![CDATA[<p>On Thursday, Weight Watchers debuted its latest social media campaign with a promoted tweet, #thisismyWW. The brand, which <a href="https://www.fastcompany.com/90241019/ww-heres-why-weight-watchers-changed-its-name" target="_blank" rel="noopener">changed its name to WW</a> in 2018, likely thought this was an uplifting message, intended to encourage its members to share their goals for the new year.</p>
<p>But after an American airstrike last night killed&#xA0;Iran&#x2019;s Maj. Gen. Qassim Suleimani&#x2014;a move that further escalated conflict between the two countries and prompted fears that it could lead to World War 3&#x2014;the campaign took on a different tone. Hashtags like #WorldWarIII started trending alongside #thisismyWW, and the Twitterati took note.</p>
<blockquote class="twitter-tweet" data-width="525" data-dnt="true">
<p lang="en" dir="ltr">Weight Watchers might want to pull this trending hashtag campaign <a href="https://t.co/pAp0WMJQJl">pic.twitter.com/pAp0WMJQJl</a></p>
<p>&#x2014; Colin Jones (@colinjones) <a href="https://twitter.com/colinjones/status/1212934126451515392?ref_src=twsrc%5Etfw">January 3, 2020</a></p></blockquote>
<p><script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script></p>
<blockquote class="twitter-tweet" data-width="525" data-dnt="true">
<p lang="en" dir="ltr">Weight Watchers probably regretting their promoted hashtag tonight <a href="https://t.co/9QNNYdFETh">pic.twitter.com/9QNNYdFETh</a></p>
<p>&#x2014; Chelsea Fagan (@Chelsea_Fagan) <a href="https://twitter.com/Chelsea_Fagan/status/1212939398519635971?ref_src=twsrc%5Etfw">January 3, 2020</a></p></blockquote>
<p><script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script></p>
<blockquote class="twitter-tweet" data-width="525" data-dnt="true">
<p lang="en" dir="ltr"><a href="https://twitter.com/hashtag/ThisIsMyWW?src=hash&amp;ref_src=twsrc%5Etfw">#ThisIsMyWW</a> is the Iannucian social media disaster we deserve. Let it be the final nail in this website&#x2019;s coffin.</p>
<p>&#x2014; bobby finger (@bobbyfinger) <a href="https://twitter.com/bobbyfinger/status/1212941949956763648?ref_src=twsrc%5Etfw">January 3, 2020</a></p></blockquote>
<p><script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script></p>
<p>Some people did, indeed, <a href="https://twitter.com/alexia/status/1213112725536043008?s=20" target="_blank" rel="noopener">share their plans</a> for eating healthy in 2020.&#xA0;But others assumed the hashtag was a <a href="https://twitter.com/boringwhitedad/status/1212931102375137280" target="_blank" rel="noopener">reference to World War III</a> or pointed out that &#x201C;WW&#x201D;&#x2014;which, unlike the famous 57-year-old Weight Watchers brand, remains largely unfamiliar&#x2014;<a href="https://twitter.com/AngryBlackLady/status/1212785949957996545?s=20" target="_blank" rel="noopener">could be mistaken</a> for a number of other things. Which is to say: This ill-timed campaign may not be the only thing WW regrets right about now.</p>
]]></description>
            <link>https://www.fastcompany.com/90448607/oops-weight-watchers-twitter-campaign-gets-ensnared-in-wwiii-chatter?partner=rss&amp;utm_source=rss&amp;utm_medium=feed&amp;utm_campaign=rss+fastcompany&amp;utm_content=rss</link>
            <guid isPermaLink="false">https://www.fastcompany.com/90448607/oops-weight-watchers-twitter-campaign-gets-ensnared-in-wwiii-chatter</guid>
            <category><![CDATA[News]]></category>
            <dc:creator><![CDATA[Pavithra Mohan]]></dc:creator>
            <pubDate>Fri, 03 Jan 2020 18:00:50 GMT</pubDate>
            <media:content url="https://images.fastcompany.net/image/upload/w_1280,q_auto,f_auto,fl_lossy/wp-cms/uploads/2020/01/poster-ww-weight-watchers-drone-strike-twitter-hashtag-1.jpg" type="image/jpeg" medium="image" width="1280" height="720"/>
        </item>
```
Although both title and description does it the same way but title is extracted with SiimplePie having the encoded symbols double encoded unlike the way it is for description. you can test this in the demo and you will see that the title is displayed with these symbols encoded while in the description they are displayed decoded. Which is because title was double encoded by the package.

I investigated the issue deeper and found out that simplepie_item::get_title() returns the title double encoded while the simplepie_item::get_description() gets the description decoded and displaying all symbols naturally. I find it weird that you are treating title and description differently while both are coming from the source feed with same symbols encoded in the same way.  


#### Description

When using Redis Cache there is no way to set redis cache expiry. 
Url params are not taken into account

#### Steps to Reproduce

Steps to reproduce the behavior:

```php
$remoteFeed = new SimplePie();
$remoteFeed->set_cache_location('redis://localhost:6379/?timeout=3600&prefix=sp_&dbIndex=0');
$remoteFeed->set_cache_duration(3601);
$remoteFeed->set_feed_url('any url');
$remoteFeed->init();
```
#### Expected Behavior

TTL of redis key not -1

#### Actual Behavior

TTL of redis key is -1

#### Possible Solutions
https://github.com/simplepie/simplepie/blob/11ddaed291ccd1b2628eef433a6bef58a1e4f920/library/SimplePie/Cache/Redis.php#L63
is always null 
also constructor has wrong phpdoc

#### Environment
dev-master
php-redis on linux mint, php 7.3
#### Description

When XML have multiple categories like this

```
<category term="Web Design"/>
<category term="WordPress"/>
<category term="Acne Threatment"/>
```

get_categories() method returns only the last item. 
For this example it will be "Acne Threatment"

#### Steps to Reproduce

Steps to reproduce the behavior:

1. Go to blogspot and create a post contains multiple categories
2. https://your.blogspot.com/feeds/posts/default
3. parse this
4. See error

#### Expected Behavior

All categories should be usable.

#### Actual Behavior

Only the last category returns.

#### Environment

Mac Os X, PHP 7.2.15
RSS specification allows for a source property. Its value is the name of the RSS channel that the item came from, derived from its <title>. It has one required attribute, url.

`<source url="http://static.userland.com/tomalak/links2.xml">Tomalak's Realm</source>`

I think this should be part of the return when you ask for a source object.

Related #333 
It seems the + sign is removed from some image urls when I use get_link(). Any idea why this happens and how to fix it?
[Misc::fix_protocol](https://github.com/simplepie/simplepie/blob/master/library/SimplePie/Misc.php#L194) is returning an invalid encoded URL.
The root issue is probably that [IRI::parse_iri](https://github.com/simplepie/simplepie/blob/master/library/SimplePie/IRI.php#L361) is trying to parse an protocol-less URL, witch is expecting perfectly valid URLs only.

Example: (links to the Simplepie demo)
[https://www.vg.no/rss/feed](http://simplepie.org/demo/?feed=https%3A%2F%2Fwww.vg.no%2Frss%2Ffeed) - Works just fine
[www.vg.no/rss/feed](http://simplepie.org/demo/?feed=www.vg.no%2Frss%2Ffeed) - Returns `cURL error 6: Could not resolve host: www.vg.no%2Frss%2Ffeed`

See also #599
Can't seem to get the image that is here (<itunes:image) :

`<item>
<title>ScienceCast 257: New Horizons Discoveries Keep Coming</title>
<link>http://feedproxy.google.com/~r/NasaSciencecasts/~3/TYKvBnC4_68/257_NewHorizonsDiscoveries.m4v</link>

<pubDate>Fri, 29 Sep 2017 11:00:00 EDT</pubDate>
<itunes:author>NASA Science</itunes:author>
<itunes:subtitle>New Horizons is on its way to new discoveries deep in the Kuiper Belt – a region inhabited by ancient remnants from the dawn of the solar system</itunes:subtitle>
<itunes:summary>New Horizons is on its way to new discoveries deep in the Kuiper Belt – a region inhabited by ancient remnants from the dawn of the solar system</itunes:summary>
<itunes:duration>4:01</itunes:duration>
<itunes:keywords>NASA, ScienceCasts, SMD, Science Mission Directorate, Planetary Science, Solar System, New Horizons, Pluto, Charon, MU69, Kuiper Belt</itunes:keywords>
<itunes:image href="http://s3.amazonaws.com/smd.nasa.gov/episode_thumbs/257_NewHorizonsDiscoveries-poster.jpg" />
<itunes:explicit>no</itunes:explicit>
<itunes:block>no</itunes:block>
<guid isPermaLink="false">http://s3.amazonaws.com/smd.nasa.gov/257_NewHorizonsDiscoveries.m4v</guid>
<author>michael.brody-1@nasa.gov (NASA Science)</author><media:content url="http://feedproxy.google.com/~r/NasaSciencecasts/~5/TYKvBnC4_68/257_NewHorizonsDiscoveries.m4v" fileSize="144851049" type="video/x-m4v" /><description>&lt;img src="http://feeds.feedburner.com/~r/NasaSciencecasts/~4/TYKvBnC4_68" height="1" width="1" alt=""/&gt;</description><feedburner:origLink>http://s3.amazonaws.com/smd.nasa.gov/257_NewHorizonsDiscoveries.m4v</feedburner:origLink><enclosure url="http://feedproxy.google.com/~r/NasaSciencecasts/~5/TYKvBnC4_68/257_NewHorizonsDiscoveries.m4v" length="144851049" type="video/x-m4v" /><feedburner:origEnclosureLink>http://s3.amazonaws.com/smd.nasa.gov/257_NewHorizonsDiscoveries.m4v</feedburner:origEnclosureLink></item>
`

Tried: 

`	   $iTunesImage = $item->get_item_tags(SIMPLEPIE_NAMESPACE_ITUNES, 'image');
 	`

Array is null.

Is there another way?

simplepie throws an exception at SimplePie.php line 1648 if the server does not return a header, and there are those servers:

> Beschreibung:   Illegal string offset 'content-type'
> Fehlernummer:   2
> File:           .../simplepie/simplepie/library/SimplePie.php
> Line:           1648

So maybe a better error handling would be more useful?
Simplepie 1.3.x used to provide the "compiled" monolithic version directly as a download on the website, which was quite convenient.

I saw this in README.markdown in the 1.5 tarball today:

> If you'd like a single monolithic file, you can run `php build/compile.php` to generate `SimplePie.compiled.php`.

...except the build dir doesn't exist in the release tarballs, so I thought it didn't exist at all, until I found it in git master. So I would think either the compiled form should also be available as a download on the website, or the build dir should be present in the released tarballs, or the README.markdown file should explain where to get it exactly.
There's a couple of confusing discrepancies around. http://simplepie.org/downloads/?download auto-downloads version "1.5", but...

* http://simplepie.org/blog/ stops at simplepie 1.3.1 being available in 2012
* On the download page, the "release notes" link points to http://simplepie.org/wiki/misc/release_notes/simplepie_1.2