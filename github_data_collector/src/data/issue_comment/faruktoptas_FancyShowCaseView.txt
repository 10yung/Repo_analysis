Hi!
We experienced the behaviour that one "skipped" showcase that has already been shown blocks the whole queue behind it as it never called `onNext()` to continue with the queue.

The queue could still have elements that were not shown. E.g. if the user stops the showcase tour or switches to another app only a part could have been shown.

In current `master` branch it is a simple call. As with the new Presenter architecture, the `queueListener` in `props` is not set, I had to make it available.

Passing a proxy allowing for the actual listener to be set later (after the constructing call) seemed appropriate. Please comment if you would prefer another approach.

Thanks for the great library! :) 
### How you show/hide FancyShowCaseView (in Activity or Fragment, in which method)

In Fragment onCreateView() method I use the code below to show:
```java
FancyShowCaseQueue queue = new FancyShowCaseQueue()
        .add(showcaseView1)
        .add(showcaseView2);

        queue.show();
```


I got quite a view Crash reports with following title/message:

**Title:** 
signal 11 (SIGSEGV), code 1 (SEGV_MAPERR)
libart-compiler.so

**Stacktrace**
```
backtrace:
  #00  pc 00000000003bce18  /system/lib64/libart-compiler.so
  #01  pc 00000000003bc77c  /system/lib64/libart-compiler.so (_ZN3art11EnhancedGVN15VisitBasicBlockEPNS_11HBasicBlockE+616)
  #02  pc 00000000003bc4a4  /system/lib64/libart-compiler.so (_ZN3art11EnhancedGVN3RunEv+196)
  #03  pc 00000000003bcd0c  /system/lib64/libart-compiler.so (_ZN3art19MTK_GVNOptimization3RunEv+124)
  #04  pc 00000000001df144  /system/lib64/libart-compiler.so (_ZN3art16RunOptimizationsEPPNS_13HOptimizationEmPNS_12PassObserverE+112)
  #05  pc 00000000003b1b54  /system/lib64/libart-compiler.so (_ZN3art16RunOptimizationsEPNS_6HGraphEPNS_13CodeGeneratorEPNS_14CompilerDriverEPNS_23OptimizingCompilerStatsERKNS_18DexCompilationUnitEPNS_12PassObserverEPNS_26StackHandleScopeCollectionE+2516)
  #06  pc 00000000001e1820  /system/lib64/libart-compiler.so (_ZNK3art18OptimizingCompiler10TryCompileEPNS_14ArenaAllocatorEPNS_19CodeVectorAllocatorEPKNS_7DexFile8CodeItemEjNS_10InvokeTypeEtjP8_jobjectRKS5_NS_6HandleINS_6mirror8DexCacheEEEPNS_9ArtMethodEb+3660)
  #07  pc 00000000001e2afc  /system/lib64/libart-compiler.so (_ZN3art18OptimizingCompiler10JitCompileEPNS_6ThreadEPNS_3jit12JitCodeCacheEPNS_9ArtMethodEb+472)
  #08  pc 000000000016f794  /system/lib64/libart-compiler.so (_ZN3art3jit11JitCompiler13CompileMethodEPNS_6ThreadEPNS_9ArtMethodEb+284)
  #09  pc 000000000030f444  /system/lib64/libart.so (_ZN3art3jit3Jit13CompileMethodEPNS_9ArtMethodEPNS_6ThreadEb+492)
  #10  pc 0000000000311358  /system/lib64/libart.so (_ZN3art3jit14JitCompileTask3RunEPNS_6ThreadE+656)
  #11  pc 0000000000469014  /system/lib64/libart.so (_ZN3art16ThreadPoolWorker3RunEv+88)
  #12  pc 000000000046895c  /system/lib64/libart.so (_ZN3art16ThreadPoolWorker8CallbackEPv+116)
  #13  pc 000000000006a31c  /system/lib64/libc.so (_ZL15__pthread_startPv+208)
  #14  pc 000000000001db28  /system/lib64/libc.so (__start_thread+16)
```

**Why am I posting this here?**
At this stackoverflow question [link](https://stackoverflow.com/questions/17840521/android-fatal-signal-11-sigsegv-at-0x636f7d89-code-1-how-can-it-be-tracked/57440988#57440988) I found someone who had the same problem and said that it was gone after he stopped executing the showcase code. I have also written my App in Java but not using the ShowCaseView is not a real solution for me. Do you have an idea why this is happening? Can this be a bug on your side? Is it a bug in the Java/Kotlin compatibility or Kotlin itself?

Unfortunately I can't reproduce it so I am not able to test if it is gone if I remove the FancyShowCaseView as well. If you have also no idea why this is happening and how I can find a solution feel free to close this issue.


Fix issues listed on codacy.
https://app.codacy.com/manual/faruktoptas/FancyShowCaseView/issues
Fixes #161
adding line  - ./gradlew FancyShowCaseViewTest to .travis.yml
All test cases should be run on each push.
FancyShowCaseView.kt contains too many logic to be separated to another small, non-ui related, testable classes.
## FancyShowCaseView not hiding

 I'm using custom View 
 In that  layout on click of one of the button  im calling " fancyShowCaseView?.hide()"
 Still Some times show case view is not hiding.

please find my code below how i'm setting Listener  for that.

Example:
 var fancyShowCaseListener = object : OnViewInflateListener {
        override fun onViewInflated(view: View) {
            view.btnOk?.setOnClickListener {
                fancyShowCaseView?.hide()
              }
        }
    }