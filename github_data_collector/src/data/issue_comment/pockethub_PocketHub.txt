Simplifying the lifecycle of the app to just be a single activity should help to significantly mitigate the prevalence of random crashes due to the entanglement of the fragment and activity lifecycles. The use of a single activity is [recommended by Google](https://www.youtube.com/watch?v=2k8x8V77CrU), and the code should be migrated to use a single activity and multiple fragments.

Obviously, migrating the whole app in one fell swoop to a single activity would be insanely difficult. I'm envisioning that we slowly migrate over until we eventually have migrated to a single activity.
Looks like all the other GH apps are not maintained for a while, so I'm looking for an active one.
PocketHub seems to be the one, but I see it's deep in the development yet, so my question is - what do you folks aim it for currently, just a dev version anyone can compile but that's it, or there are more regulal GPlay releases planned?

Currently GPlay has 0.5.1 (with comments that basic flows don't work reliably) and the GH Releases list has 0.4.0 as the latest, so I wonder which one is it.

I read through the readme and contribution policy that hint at this being very early stage yet, but just want to confirm - and help others to understand and possibly prevent frustration if it's not yet ready for prime time.
## Description

IssueActivity doesn't remember the state of its fragments

### Versions and device
Android 9
PocketHub v0.5.1
HUAWEI MATE 10

## Steps to Reproduce
1. Go to a repository
2. Click “+” to new an issue, and type some things
3. Tap "back"
4. Click “+” to new an issue, nothing saved

### Actual behaviour

Not restore data when re-entering IssueActivity.

### Expected behaviour

The previous state is restored. Prevents the case that quit by mistake.

## Actual behaviour and Steps to Reproduce

Many link redirection handlers have not been implemented.

## Ref links

https://github.com/jonan/ForkHub/issues/65

https://github.com/jonan/ForkHub/issues/93
## Versions and device
- PocketHub  0.5.1
- Android  9
- MI9

## Steps to Reproduce
An Example:  https://github.com/xamarin/Xamarin.Forms/blob/master/README.md
Open the file to view the code

## Actual behaviour
The form and the gray color under the text did not show
![c2](https://user-images.githubusercontent.com/53814215/63309187-77f27f80-c328-11e9-8c9f-d28c1956f6c0.png)


## Expected behaviour
![c1](https://user-images.githubusercontent.com/53814215/63309192-7b860680-c328-11e9-9e01-14bd79a2137a.png)

### Versions and device
- PocketHub  0.5.1
- Android  9
- MI9

## Steps to Reproduce
1.Open a .svg file in PocketHub
For example: https://github.com/Abies-sand/Test/blob/master/filter.svg
### Actual behaviour
The .svg file renders as code
![s1](https://user-images.githubusercontent.com/53814215/63273954-85304f80-c2d1-11e9-9974-0426345163a1.jpg)

### Expected behaviour
The .svg file renders as an image, like the way it shows on the Github webpage
![s2](https://user-images.githubusercontent.com/53814215/63273967-8c575d80-c2d1-11e9-9bd4-1203b0840ce3.png)





### Versions and device
- PocketHub  0.5.1
- Android  9
- MI9

### Steps to Reproduce
1. Log in my account
2. Open one of my repo
3. Go to the issue interface of the repo
4. Click the "+" button to create an issue（or edit an existed issue）
5. Click "milestone" and try to add a milestone

### Actual behaviour
If you never add a milestone for the current repo before, the box is empty and provides no function
![milestone](https://user-images.githubusercontent.com/53814215/63264992-134f0a80-c2bf-11e9-8535-2afe85f5e82d.png)


If you have added milestones for the current repo, you can only choose from the added milestone but you cannot edit
![m2](https://user-images.githubusercontent.com/53814215/63265974-72158380-c2c1-11e9-99af-808689fe878f.jpg)

### Expected behaviour
Can edit and add a milestone

## Description

Issue search option disappear when no opened issues

### Versions and device
* Android 9
* PocketHub v0.5.1
* HUAWEI MATE 10


## Steps to Reproduce
1. Go a repository with no opened issue

<div align=center>
<img src="https://user-images.githubusercontent.com/53738161/62793265-bce60d00-bb03-11e9-9743-5e2699c279fc.png" width="50%" height="50%">
</div>

### Actual behaviour

Issue search option disappear

### Expected behaviour

Issue search option exsist


## Description

Crash when pull-to-refresh at the home page

### Versions and device
* Android 9
* PocketHub v0.5.1
* HUAWEI MATE 10

## Steps to Reproduce
1. Pull-to-refresh at the home page
2. Showing the refresh icon, and click an item in the home page list immediately. **It crashes.**

### Actual behaviour

Crash after a click.

### Expected behaviour

No crash.

## Logs

```
2019-08-09 00:06:00.444 30525-30559/? E/AndroidRuntime: FATAL EXCEPTION: RxCachedThreadScheduler-1
    Process: com.github.pockethub.android, PID: 30525
    io.reactivex.exceptions.UndeliverableException: java.lang.RuntimeException: java.io.InterruptedIOException: interrupted
        at io.reactivex.plugins.RxJavaPlugins.onError(RxJavaPlugins.java:367)
        at io.reactivex.internal.operators.single.SingleFromCallable.subscribeActual(SingleFromCallable.java:50)
        at io.reactivex.Single.subscribe(Single.java:3096)
        at io.reactivex.internal.operators.single.SingleFlatMap.subscribeActual(SingleFlatMap.java:36)
        at io.reactivex.Single.subscribe(Single.java:3096)
        at io.reactivex.internal.operators.single.SingleFlatMap.subscribeActual(SingleFlatMap.java:36)
        at io.reactivex.Single.subscribe(Single.java:3096)
        at io.reactivex.internal.operators.single.SingleSubscribeOn$SubscribeOnObserver.run(SingleSubscribeOn.java:89)
        at io.reactivex.Scheduler$DisposeTask.run(Scheduler.java:571)
        at io.reactivex.internal.schedulers.ScheduledRunnable.run(ScheduledRunnable.java:66)
        at io.reactivex.internal.schedulers.ScheduledRunnable.call(ScheduledRunnable.java:57)
        at java.util.concurrent.FutureTask.run(FutureTask.java:266)
        at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:301)
        at java.util.concurrent.ThreadPoolExecutor.processTask(ThreadPoolExecutor.java:1187)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1152)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)
        at java.lang.Thread.run(Thread.java:784)
     Caused by: java.lang.RuntimeException: java.io.InterruptedIOException: interrupted
        at io.reactivex.internal.util.ExceptionHelper.wrapOrThrow(ExceptionHelper.java:45)
        at io.reactivex.internal.observers.BlockingMultiObserver.blockingGet(BlockingMultiObserver.java:91)
        at io.reactivex.Single.blockingGet(Single.java:2486)
        at com.github.pockethub.android.persistence.OrganizationRepositories.getAllItems(OrganizationRepositories.kt:165)
        at com.github.pockethub.android.persistence.OrganizationRepositories.request(OrganizationRepositories.kt:141)
        at com.github.pockethub.android.persistence.DatabaseCache.requestAndStore(DatabaseCache.kt:57)
        at com.github.pockethub.android.persistence.AccountDataManager.getRepos(AccountDataManager.java:176)
        at com.github.pockethub.android.ui.repo.RepositoryListFragment$loadData$1.call(RepositoryListFragment.kt:300)
        at com.github.pockethub.android.ui.repo.RepositoryListFragment$loadData$1.call(RepositoryListFragment.kt:56)
        at io.reactivex.internal.operators.single.SingleFromCallable.subscribeActual(SingleFromCallable.java:44)
        at io.reactivex.Single.subscribe(Single.java:3096) 
        at io.reactivex.internal.operators.single.SingleFlatMap.subscribeActual(SingleFlatMap.java:36) 
        at io.reactivex.Single.subscribe(Single.java:3096) 
        at io.reactivex.internal.operators.single.SingleFlatMap.subscribeActual(SingleFlatMap.java:36) 
        at io.reactivex.Single.subscribe(Single.java:3096) 
        at io.reactivex.internal.operators.single.SingleSubscribeOn$SubscribeOnObserver.run(SingleSubscribeOn.java:89) 
        at io.reactivex.Scheduler$DisposeTask.run(Scheduler.java:571) 
        at io.reactivex.internal.schedulers.ScheduledRunnable.run(ScheduledRunnable.java:66) 
        at io.reactivex.internal.schedulers.ScheduledRunnable.call(ScheduledRunnable.java:57) 
        at java.util.concurrent.FutureTask.run(FutureTask.java:266) 
        at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:301) 
        at java.util.concurrent.ThreadPoolExecutor.processTask(ThreadPoolExecutor.java:1187) 
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1152) 
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641) 
        at java.lang.Thread.run(Thread.java:784) 
     Caused by: java.io.InterruptedIOException: interrupted
        at okio.Timeout.throwIfReached(Timeout.java:146)
        at okio.Okio$2.read(Okio.java:137)
        at okio.AsyncTimeout$2.read(AsyncTimeout.java:237)
        at okio.RealBufferedSource.read(RealBufferedSource.java:51)
        at okhttp3.internal.http1.Http1Codec$AbstractSource.read(Http1Codec.java:363)
        at okhttp3.internal.http1.Http1Codec$ChunkedSource.read(Http1Codec.java:453)
        at okio.RealBufferedSource.read(RealBufferedSource.java:51)
        at okio.RealBufferedSource.exhausted(RealBufferedSource.java:61)
        at okio.InflaterSource.refill(InflaterSource.java:102)
        at okio.InflaterSource.read(InflaterSource.java:62)
        at okio.GzipSource.read(GzipSource.java:80)
        at okio.RealBufferedSource.request(RealBufferedSource.java:72)
        at okhttp3.Response.peekBody(Response.java:152)
        at com.meisolsson.githubsdk.core.GitHubPaginationInterceptor.intercept(GitHubPaginationInterceptor.java:41)
        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)
        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)
        at okhttp3.logging.HttpLoggingInterceptor.intercept(HttpLoggingInterceptor.java:212)
        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)
        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)
```

## Description

Empty file should show zero line count

### Versions and device
* Android 9
* PocketHub v0.5.1
* HUAWEI MATE 10


## Steps to Reproduce
1. open an empty file -- for example

     https://github.com/arthur-star/Empty-demo/blob/master/zero-line

2. the line count shows one, not zero

<div align=center>
<img src="https://user-images.githubusercontent.com/53738161/62691576-888a2800-ba01-11e9-9a31-66a03730fc80.png" width="50%" height="50%">
</div>

### Actual behaviour

the line count shows one

### Expected behaviour

the line count shows zero

