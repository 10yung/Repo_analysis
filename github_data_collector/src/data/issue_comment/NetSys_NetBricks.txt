When directly building by ./build.sh, it finally shows: 
![image](https://user-images.githubusercontent.com/38483906/58756235-068df800-84c2-11e9-9a41-2895165613df.png)

When building with RUST_STATIC=1, it shows: 
![image](https://user-images.githubusercontent.com/38483906/58756251-8025e600-84c2-11e9-8af1-2e7ff5ba3a45.png)

When building in containers, it shows: 
![image](https://user-images.githubusercontent.com/38483906/58756260-bb281980-84c2-11e9-9e06-0f1d228f38b3.png)

I am new to Rust, so I have not got any idea of how to fix them. Just want to run the NF successfully; any suggestions are highly appreciated! 

on Ubuntu 18.04 LTS, using Rust nightly,

```
error[E0588]: packed type cannot transitively contain a `[repr(align)]` type
  --> framework/src/shared_state/directory.rs:13:1
   |
13 | / pub struct DirectoryHeader {
14 | |     entries: AtomicUsize,
15 | |     // Used to signal that snapshotting is in progress.
16 | |     current_version: AtomicUsize,
17 | |     committed_version: AtomicUsize,
18 | |     length: usize,
19 | | }
   | |_^
```
I am new for rust , when I run netbricks test cases, these cases are just receive and send on the same phy port. But I have tow phy ports, I want to receive packages on one phy port and send these packages out from the other phy port. just like the real router or NAT do. Can NetBricks do this? Can you gave me one example? Thanks！
I use clang 3.9 on Ubuntu,  when compiling e2d2 , there are errors like following:

SCTP library found
~/NetBricks/framework ~/NetBricks
   Compiling e2d2 v0.2.0 (file:///home/luo/NetBricks/framework)
error[E0432]: unresolved import `std::alloc::Alloc`
 --> framework/src/allocators/cache_aligned.rs:1:24
  |
1 | use std::alloc::{self, Alloc, Global, Layout, Opaque};
  |                        ^^^^^ no `Alloc` in `alloc`

error[E0432]: unresolved import `std::alloc::Global`
 --> framework/src/allocators/cache_aligned.rs:1:31
  |
1 | use std::alloc::{self, Alloc, Global, Layout, Opaque};
  |                               ^^^^^^ no `Global` in `alloc`

error[E0432]: unresolved import `std::alloc::Layout`
 --> framework/src/allocators/cache_aligned.rs:1:39
  |
1 | use std::alloc::{self, Alloc, Global, Layout, Opaque};
  |                                       ^^^^^^ no `Layout` in `alloc`

error[E0432]: unresolved import `std::alloc::Opaque`
 --> framework/src/allocators/cache_aligned.rs:1:47
  |
1 | use std::alloc::{self, Alloc, Global, Layout, Opaque};
  |                                               ^^^^^^ no `Opaque` in `alloc`

error[E0603]: module `alloc` is private
 --> framework/src/allocators/cache_aligned.rs:1:18
  |
1 | use std::alloc::{self, Alloc, Global, Layout, Opaque};
  |                  ^^^^

error[E0603]: module `alloc` is private
 --> framework/src/allocators/cache_aligned.rs:1:24
  |
1 | use std::alloc::{self, Alloc, Global, Layout, Opaque};
  |                        ^^^^^

error[E0603]: module `alloc` is private
 --> framework/src/allocators/cache_aligned.rs:1:31
  |
1 | use std::alloc::{self, Alloc, Global, Layout, Opaque};
  |                               ^^^^^^

error[E0603]: module `alloc` is private
 --> framework/src/allocators/cache_aligned.rs:1:39
  |
1 | use std::alloc::{self, Alloc, Global, Layout, Opaque};
  |                                       ^^^^^^

error[E0603]: module `alloc` is private
 --> framework/src/allocators/cache_aligned.rs:1:47
  |
1 | use std::alloc::{self, Alloc, Global, Layout, Opaque};
  |                                               ^^^^^^

error[E0554]: #![feature] may not be used on the stable release channel
 --> framework/src/lib.rs:2:1
  |
2 | #![feature(asm)]
  | ^^^^^^^^^^^^^^^^

error[E0554]: #![feature] may not be used on the stable release channel
 --> framework/src/lib.rs:3:1
  |
3 | #![feature(log_syntax)]
  | ^^^^^^^^^^^^^^^^^^^^^^^

error[E0554]: #![feature] may not be used on the stable release channel
 --> framework/src/lib.rs:4:1
  |
4 | #![feature(box_syntax)]
  | ^^^^^^^^^^^^^^^^^^^^^^^

error[E0554]: #![feature] may not be used on the stable release channel
 --> framework/src/lib.rs:5:1
  |
5 | #![feature(specialization)]
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0554]: #![feature] may not be used on the stable release channel
 --> framework/src/lib.rs:6:1
  |
6 | #![feature(slice_concat_ext)]
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0554]: #![feature] may not be used on the stable release channel
 --> framework/src/lib.rs:7:1
  |
7 | #![feature(fnbox)]
  | ^^^^^^^^^^^^^^^^^^

error[E0554]: #![feature] may not be used on the stable release channel
 --> framework/src/lib.rs:8:1
  |
8 | #![feature(alloc)]
  | ^^^^^^^^^^^^^^^^^^

error[E0554]: #![feature] may not be used on the stable release channel
 --> framework/src/lib.rs:9:1
  |
9 | #![feature(heap_api)]
  | ^^^^^^^^^^^^^^^^^^^^^

error[E0554]: #![feature] may not be used on the stable release channel
  --> framework/src/lib.rs:10:1
   |
10 | #![feature(unique)]
   | ^^^^^^^^^^^^^^^^^^^

error[E0554]: #![feature] may not be used on the stable release channel
  --> framework/src/lib.rs:11:1
   |
11 | #![feature(const_fn)]
   | ^^^^^^^^^^^^^^^^^^^^^

error[E0554]: #![feature] may not be used on the stable release channel
  --> framework/src/lib.rs:13:1
   |
13 | #![feature(ptr_internals)]
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0554]: #![feature] may not be used on the stable release channel
  --> framework/src/lib.rs:15:1
   |
15 | #![feature(allocator_api)]
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0554]: #![feature] may not be used on the stable release channel
  --> framework/src/lib.rs:17:1
   |
17 | #![feature(integer_atomics)]
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: aborting due to 22 previous errors

error: Could not compile `e2d2`.

To learn more, run the command again with --verbose.

According to the rust-lang/rust#51241 and rust-lang/rust@f6ab74b8e7efed01c1045773b6693f23f6ebd93c, `Opaque` struct has been removed from `std::alloc`, and `u8` can be used here for the replacement.
Hi all,

Just a question. I'm trying to understand the inner working of the window stream UDF combined with the packetize abstraction to modify flows on the fly, as suggested in the paper. Is there an example of this? How will the re-packetization will be made regarding, eg. SEQ and ACKs? Will it re-do a 3-way handshake etc?
One example would be rewriting URLs in HTTP flows to use different CDNs.

Thanks for the light,
Tom
Hi

I wanted to know if it is possible to use dpdk's EAL arguments with these functions. For example I want to use `--socket-mem` ,`-b` (blacklist ports), `-n` (memory channels), and` --xen-dom0`. I experimented a little bit but couldn't find anything. I think the -f 'config' command does not allow for these parameters either correct?



 I am looking for alternate to [Seastar](https://github.com/scylladb/seastar) in Rust lang and seems NetBricks can be used for developing high-performance network applications.
Any plans to integrate with [tokia-rs](https://github.com/tokio-rs/tokio)?
