
Shouldn't you be calculating the inverse covariance matrix for the Mahalanobis distance?
my enviroment mac os mojave 10.14

updateCodebook(cv::Vec<unsigned char, 3> const&, CodeBook&, int*, int) + 117 (ex-15.4.cpp:67)

segmentation fault: 11

```cpp
for (n = 0; n<numChannels; n++) {
        high[n] = p[n] + *(cbBounds+n); // segmentation fault 11 point
        if ( high[n] > 255 ) {
            high[n] = 255;
        }

        low[n] = p[n] - *(cbBounds+n);
        if ( low[n] < 0 ) {
            low[n] = 0;
        }
    }
```
What am i supposed to do with `args: [board_w] [board_h]`？
What numbers should i input here？
Python 3.6 opencv3.4.2 ORB feature calculation function detectAndCompute is very time-consuming. PC on win10 system takes 200 milliseconds. Is there any room for optimization of this function?
readme.md shopping links need to be corrected
Change occurences of 
   **http:\*shop.oreilly.com/product/0636920044765.do**
to
   **http://shop.oreilly.com/product/0636920044765.do**

I have the corrected readme.md file and can push it when allowed to do so.
hope pass soon,
https://github.com/oreillymedia/Learning-OpenCV-3_examples/pull/71

> 	/*2. Compact matrix and vector types:
> 	a. Using the  cv::Mat33f and  cv::Vec3f objects (respectively), create a 3 × 3
> 	matrix and 3-row vector.
> 	b. Can you multiply them together directly? If not, why not?        

 chage cv::Mat33f  into cv::Matx33f ?
as we dont have Mat33f in opencv3……
the question of exercise 6.1 is

> Find and open  .../opencv/cxcore/include/cxtypes.h. Read through and find the
> 	many conversion helper functions.
> 	a. Choose a negative floating-point number.
> 	b. Take its absolute value, round it, and then take its ceiling and floor.
> 	c. Generate some random numbers.
> 	d. Create a floating-point cv::Point2f and convert it to an integer cv::Point.
> 	Convert a cv::Point to a cv::Point2f.    

as  cxtypes.h is no longer used in opencv3,please change this question .

Exercises 1-11 at end of Chapter 14
hope pass