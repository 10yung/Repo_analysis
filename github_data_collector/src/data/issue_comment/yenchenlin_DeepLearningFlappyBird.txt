I was wondering if the `tf.reduce_sum` and `y` are 1d and the mse cost term is 1d, however the gradient to be propagated needs to same dimension as network output i.e (1,ACTIONS) = (1,2). Is the final loss grad just replicated in both dimension ? i.e (1,1) -> (1,2) ?
This PR adds a few additions that make it easier to configure parameters for training and logging.

I added `argparse` and moved a few of the parameters to be settable with command line arguments. This makes it easier to run a training run with different settings and compare.

I also added `wandb` conditionally. W&B a free tool that anyone can use anonymously to get hosted TensorBoard and graphs for key metrics like `q_max`. It makes it easy to compare runs too.

Example:
https://app.wandb.ai/gabesmed/flappy/runs/cxll4uss
<img width="1355" alt="Screen Shot 2019-09-27 at 4 46 39 PM" src="https://user-images.githubusercontent.com/83913/65807990-65007580-e146-11e9-8a2a-ef4fb1e2b97c.png">

Cheers!
Why I can't read png file from assets?
Is that a problem from my module?

Appreciate this excellent work. I got a lot of inspiration from this work on pygame.

I have achieved to train an AI for a more difficult version flappy bird: the horizontal distance between adjacent pipes and the gap between up and down pipes are random within a certain range rather than being fixed. Instead of neural networks and reinforcement learning,I use evolutionary strategies and Cartesian genetic programming, which attempts to build the control function (a math expression) directly using only basic arithmetic operators. With a small population of size 10, the bird can learn to fly quite well in **typically less than 50 generations**, which seems to be much more efficient than simple neuron evolution.

I implement this algorithm with Python and pygame. For those who are interested, please check my [GitHub repository](https://github.com/ShuhuaGao/gpFlappyBird). A demo is [here](https://github.com/ShuhuaGao/gpFlappyBird/blob/master/doc/img/flappy_bird_demo.gif).
Hi,

Thanks for your nice code and documentation. 

I saw the report from Kevin Chen where he experimented with three difficulty levels (easy, medium, hard) of the game.  Can you please tell me which difficulty level the game is set in your code ? and How to change the difficulty level if I want to? 

I guess, it's related to value of PIPEGAPSIZE in wrapped_flappy_bird.py.. currently it's set to 100. Is that hard mode? By Increasing or decreasing the PIPEGAPSIZE, can I change the difficulty level? If so, are there any specific value for those modes?

Thanks!

![image](https://user-images.githubusercontent.com/22912347/43002729-6c722d30-8c5c-11e8-88c8-e3f94d8094f7.png)

![image](https://user-images.githubusercontent.com/22912347/43002753-7aa602c8-8c5c-11e8-9880-54bd530977d5.png)

no this two module?
The code works fine but lacks of freezing of the target network.


[root@localhost DeepLearningFlappyBird]# python3.6 deep_q_network.py
ALSA lib pulse.c:243:(pulse_connect) PulseAudio: Unable to connect: Connection refused

libpng warning: iCCP: known incorrect sRGB profile
libpng warning: iCCP: known incorrect sRGB profile
libpng warning: iCCP: known incorrect sRGB profile
libpng warning: iCCP: known incorrect sRGB profile
libpng warning: iCCP: known incorrect sRGB profile
libpng warning: iCCP: known incorrect sRGB profile
libpng warning: iCCP: known incorrect sRGB profile
libpng warning: iCCP: known incorrect sRGB profile
libpng warning: iCCP: known incorrect sRGB profile
libpng warning: iCCP: known incorrect sRGB profile
Traceback (most recent call last):
  File "deep_q_network.py", line 8, in <module>
    import wrapped_flappy_bird as game
  File "game/wrapped_flappy_bird.py", line 19, in <module>
    IMAGES, SOUNDS, HITMASKS = flappy_bird_utils.load()
  File "game/flappy_bird_utils.py", line 42, in load
    SOUNDS['die']    = pygame.mixer.Sound('assets/audio/die' + soundExt)
pygame.error: Unable to open file 'assets/audio/die.ogg'
[root@localhost DeepLearningFlappyBird]#
