Bumps [simple-git](https://github.com/steveukx/git-js) from 1.129.0 to 1.130.0.
<details>
<summary>Commits</summary>
<ul>
<li><a href="https://github.com/steveukx/git-js/commit/7b655700c6be099f4e5ae8a052742e4ea5056157"><code>7b65570</code></a> 1.130.0</li>
<li><a href="https://github.com/steveukx/git-js/commit/c226518073f37fb73fdc69b343e69b6bc6892a03"><code>c226518</code></a> Merge branch 'pr-test/420'</li>
<li><a href="https://github.com/steveukx/git-js/commit/30ec6b2fffef5b55749b19e837ba59847c6fb245"><code>30ec6b2</code></a> Add integration test for conflicted statuses</li>
<li><a href="https://github.com/steveukx/git-js/commit/5c68bf15d202eb4d39156cadac7292da10cf85a2"><code>5c68bf1</code></a> Add comments to file status types</li>
<li><a href="https://github.com/steveukx/git-js/commit/93dcb5f185385f51d94808c90c22e353e4d8f90a"><code>93dcb5f</code></a> Mark modify/delete merge conflicts correctly in status summary</li>
<li><a href="https://github.com/steveukx/git-js/commit/7f715b8b99797751285b450b5b2d6ac5c0cfc099"><code>7f715b8</code></a> Add MergeSummary types</li>
<li><a href="https://github.com/steveukx/git-js/commit/ce5f6f9552e8d351bc27d7226a2eeaf8804f543f"><code>ce5f6f9</code></a> Parse modify/delete merge conflicts properly</li>
<li><a href="https://github.com/steveukx/git-js/commit/fa3c6c5eedb5993e01ca69dc2129f759cb13ae01"><code>fa3c6c5</code></a> Merge pull request <a href="https://github-redirect.dependabot.com/steveukx/git-js/issues/417">#417</a> from janmariu/master</li>
<li><a href="https://github.com/steveukx/git-js/commit/6465b2f7c33720052253171736bdc0323f18ed59"><code>6465b2f</code></a> Adding files with merge status AA to StatusSummary.conflicted</li>
<li><a href="https://github.com/steveukx/git-js/commit/6abaf2270d02cb127b4df0ec9dc7cebbdf8a9e8a"><code>6abaf22</code></a> Added failing test for AA merge status</li>
<li>Additional commits viewable in <a href="https://github.com/steveukx/git-js/compare/v1.129.0...v1.130.0">compare view</a></li>
</ul>
</details>
<br />


[![Dependabot compatibility score](https://api.dependabot.com/badges/compatibility_score?dependency-name=simple-git&package-manager=npm_and_yarn&previous-version=1.129.0&new-version=1.130.0)](https://dependabot.com/compatibility-score.html?dependency-name=simple-git&package-manager=npm_and_yarn&previous-version=1.129.0&new-version=1.130.0)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language
- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language
- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language
- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language
- `@dependabot badge me` will comment on this PR with code to add a "Dependabot enabled" badge to your readme

Additionally, you can set the following in your Dependabot [dashboard](https://app.dependabot.com):
- Update frequency (including time of day and day of week)
- Pull request limits (per update run and/or open at any time)
- Automerge options (never/patch/minor, and dev/runtime dependencies)
- Out-of-range updates (receive only lockfile updates, if desired)
- Security updates (receive only security updates, if desired)



</details>
<!-- Thanks for submitting a pull request! Please provide enough information so that others can review your pull request. -->
<!-- Explain the **motivation** for making this change. What existing problem does the pull request solve? -->
<!-- Try to link to an open issue for more information. -->


<!-- In addition to that please answer these questions: -->

**What kind of change does this PR introduce?**
refactoring
<!-- E.g. a bugfix, feature, refactoring, build related change, etcâ€¦ -->

**Did you add tests for your changes?**
Nope
<!-- Note that we won't merge your changes if you don't add tests -->

**Does this PR introduce a breaking change?**
Nope
<!-- If this PR introduces a breaking change, please describe the impact and a migration path for existing applications. -->

**What needs to be documented once your changes are merged?**
Nothing
<!-- List all the information that needs to be added to the documentation after merge -->
<!-- When your changes are merged you will be asked to contribute this to the documentation -->

<!-- Please don't delete this template because we'll close your issue -->
<!-- Before creating an issue please make sure you are using the latest version of webpack. -->

# Bug report

<!-- Please ask questions on StackOverflow or the webpack Gitter. -->
<!-- https://stackoverflow.com/questions/ask?tags=webpack -->
<!-- https://gitter.im/webpack/webpack -->
<!-- Issues which contain questions or support requests will be closed. -->

**What is the current behavior?**

If you have two entries, one for your worker and another one for your main file, where code is shared between those two, and if you use split chunks so that shared code is split in a different file, the worker hangs undefinetely because simply the common file cannot be loaded, and there is no way for it to be loaded.

Using import() is not a good alternative as you lose the type definitions; which means you are forced to create some null-loader for the type definitions or some custom definition file (which is really not good at all).

Also you need a hack to even make it work https://stackoverflow.com/a/59743427/1199740 which is not optimal.

Not to add it depends on Promises, and code in common, usually includes the promises polyfill, since you are within a worker that shouldn't be an issue, but still, not optimal.

**If the current behavior is a bug, please provide the steps to reproduce.**

Create a project with two entries.

Load a second entry as a worker.

It will hang forever.


<!-- A great way to do this is to provide your configuration via a GitHub repository -->
<!-- The most helpful is a minimal reproduction with instructions on how to reproduce -->
<!-- Repositories with too many files or large `webpack.config.js` files are not suitable -->
<!-- Please only add small code snippets directly into this issue -->
<!-- https://gist.github.com is a good place for longer code snippets -->
<!-- If your issue is caused by a plugin or loader, please create an issue on the loader/plugin repository instead -->

**What is the expected behavior?**

1. You should be able to use of importScripts if you are inside a worker; you should specify if an entry should use importScripts to fullfill its imports.

OR

2. You should be able to inject the code required for initialization, self.importScripts("/dist/build.common.js") just the same that you would do by adding it in the DOM; eg by using an injection file instead that would be bundled but won't hang, that file would execute importScripts just as in the normal DOM available version you would create a <script> with the commons file.

AND

You shouldn't depend on the DOM for dynamic imports, if importScripts is available it should be used instead.

<!-- "It should work" is not a helpful explanation -->
<!-- Explain exactly how it should behave -->

**Other relevant information:**
webpack version:  4.41.4
Node.js version: 12.14.0
Operating System: Ubuntu
Additional tools:

<!-- Please don't delete this template because we'll close your issue -->
<!-- Before creating an issue please make sure you are using the latest version of webpack. -->

# Bug report

<!-- Please ask questions on StackOverflow or the webpack Gitter. -->
<!-- https://stackoverflow.com/questions/ask?tags=webpack -->
<!-- https://gitter.im/webpack/webpack -->
<!-- Issues which contain questions or support requests will be closed. -->

**What is the current behavior?**
I have a win10 and a freebsd as a dev servers, i use win10 to edit code, it mounts the project root folder from freebsd12 via samba. I have to use freebsd because it performs much better for php + postgresql application, but i'm not suitable to edit php / vue files under freebsd terminal. I really can't leave win10 as daily use and editing code.  and kde or gnome are really not good enough. 
Now when i change some vue code in win10 editor and save, i see the change is reflected in freebsd server, and npm noticed there is change, i see it recompiled , but the page in my browser is not reflected of the change.
in chrome dev console, i see the "keep-alive" __webpack_hmr/client request has the output too, but it only has meaningful output for the first change made by win10, further files changes on win10 are not reflected in browser anymore, it has meaningless output for further changes like this: 
{"h":"28ac7a547ebf20ba2bb3","c":{}}

If i hadn't made changes via win10 editor after npm server started, every single change made by vi editor under freebsd are reflected in npm and browser.  But after i change the file in win10, then it only works for the first time change, further change dont work anymore, it dont work even if i go back to freebsd change the file there(npm failed to notice the change made by vi editor) . Refresh the page doesnt help. 

Only restart npm helps

**If the current behavior is a bug, please provide the steps to reproduce.**

create a nuxt app in freebsd , and install the samba server, configure the app root directory to be able for win10 to connect to . 
start npm in freebsd.
change the files in win10 after mounting the samba directory.  

<!-- A great way to do this is to provide your configuration via a GitHub repository -->
<!-- The most helpful is a minimal reproduction with instructions on how to reproduce -->
<!-- Repositories with too many files or large `webpack.config.js` files are not suitable -->
<!-- Please only add small code snippets directly into this issue -->
<!-- https://gist.github.com is a good place for longer code snippets -->
<!-- If your issue is caused by a plugin or loader, please create an issue on the loader/plugin repository instead -->

**What is the expected behavior?**
every change to samba-mounted file made via win10 editor should be reflected in browser without page refresh, not producing meaningless ajax content by HMR

<!-- "It should work" is not a helpful explanation -->
<!-- Explain exactly how it should behave -->

**Other relevant information:**
webpack version:  4.31.0
Node.js version: 6.12.1
Operating System: win10 + freebsd12
Additional tools:

<!-- Thanks for submitting a pull request! Please provide enough information so that others can review your pull request. -->
<!-- Explain the **motivation** for making this change. What existing problem does the pull request solve? -->
<!-- Try to link to an open issue for more information. -->


<!-- In addition to that please answer these questions: -->

**What kind of change does this PR introduce?**
cleanup, code readablility
<!-- E.g. a bugfix, feature, refactoring, build related change, etcâ€¦ -->

**Did you add tests for your changes?**
existing tests
<!-- Note that we won't merge your changes if you don't add tests -->

**Does this PR introduce a breaking change?**
no
<!-- If this PR introduces a breaking change, please describe the impact and a migration path for existing applications. -->

**What needs to be documented once your changes are merged?**
nothing
<!-- List all the information that needs to be added to the documentation after merge -->
<!-- When your changes are merged you will be asked to contribute this to the documentation -->

<!-- Please don't delete this template because we'll close your issue -->
<!-- Before creating an issue please make sure you are using the latest version of webpack. -->

# Bug report

<!-- Please ask questions on StackOverflow or the webpack Gitter. -->
<!-- https://stackoverflow.com/questions/ask?tags=webpack -->
<!-- https://gitter.im/webpack/webpack -->
<!-- Issues which contain questions or support requests will be closed. -->

**What is the current behavior?**
HMR always triggers an update when my plugin create file although i ignored those
![å¾®ä¿¡å›¾ç‰‡_20200116180333](https://user-images.githubusercontent.com/34876408/72515360-bade6200-388a-11ea-8957-2f487e14d54f.png)



**If the current behavior is a bug, please provide the steps to reproduce.**
1, clone  https://github.com/Sihan-Tan/vue-template.git
2, npm install
3, npm run dev

<!-- A great way to do this is to provide your configuration via a GitHub repository -->
<!-- The most helpful is a minimal reproduction with instructions on how to reproduce -->
<!-- Repositories with too many files or large `webpack.config.js` files are not suitable -->
<!-- Please only add small code snippets directly into this issue -->
<!-- https://gist.github.com is a good place for longer code snippets -->
<!-- If your issue is caused by a plugin or loader, please create an issue on the loader/plugin repository instead -->

**What is the expected behavior?**
HMR not triggers an update when my plugin create file

<!-- "It should work" is not a helpful explanation -->
<!-- Explain exactly how it should behave -->

**Other relevant information:**
webpack version:  4.41.5
Node.js version: 10.16.0
Operating System: win10
Additional tools:

<!-- Please don't delete this template because we'll close your issue -->
<!-- Before creating an issue please make sure you are using the latest version of webpack. -->

# Bug report

<!-- Please ask questions on StackOverflow or the webpack Gitter. -->
<!-- https://stackoverflow.com/questions/ask?tags=webpack -->
<!-- https://gitter.im/webpack/webpack -->
<!-- Issues which contain questions or support requests will be closed. -->

**What is the current behavior?**
Bundle codes with eval sourcemap, but reference to a package that ships with standalone sourcemap will not convert standalone sourcemap to eval sourcemap, this will emit a lot of warning in browser console.

**If the current behavior is a bug, please provide the steps to reproduce.**
1. Import a package that ships with standalone sourcemap
2. Set `devtool: 'eval'` in webpack.config.js
3. Start with dev server
4. Check browser console

![image](https://user-images.githubusercontent.com/19658647/72504001-f0c61b00-3877-11ea-8b23-192ebc6cce55.png)

<!-- A great way to do this is to provide your configuration via a GitHub repository -->
<!-- The most helpful is a minimal reproduction with instructions on how to reproduce -->
<!-- Repositories with too many files or large `webpack.config.js` files are not suitable -->
<!-- Please only add small code snippets directly into this issue -->
<!-- https://gist.github.com is a good place for longer code snippets -->
<!-- If your issue is caused by a plugin or loader, please create an issue on the loader/plugin repository instead -->

**What is the expected behavior?**
Standalone sourcemap in package should be converted to eval sourcemap or truncated

<!-- "It should work" is not a helpful explanation -->
<!-- Explain exactly how it should behave -->

**Other relevant information:**
webpack version:  4.39.3 (Not able to tryout latest due typescript types issue)
Node.js version: 12.13.0
Operating System: Ubuntu 18.04.3
Additional tools:

https://github.com/webpack/webpack/pull/10256 needs to be backported to webpack 4.

Send a PR.

cc @sokra
<!-- Please don't delete this template because we'll close your issue -->
<!-- Before creating an issue please make sure you are using the latest version of webpack. -->

# Bug report

<!-- Please ask questions on StackOverflow or the webpack Gitter. -->
<!-- https://stackoverflow.com/questions/ask?tags=webpack -->
<!-- https://gitter.im/webpack/webpack -->
<!-- Issues which contain questions or support requests will be closed. -->

**What is the current behavior?**

**If the current behavior is a bug, please provide the steps to reproduce.**

```jsonc
// package.json
{
  "sideEffects": false,
  "dependencies": {
    "webpack": "^4.39.2",
    "webpack-cli": "^3.3.7"
  }
}
```

```ts
// index.js (entry)
import { identity } from "./test";
console.log(identity);
```

```ts
// test.js
export const identity = x => x;

const myFunction = I => {
  const r = {};
  if (typeof I.map === "function") {
    r.map = () => {};
  }
  return r;
};

const result = myFunction({});
```

```js
// webpack.config.js
const config = {
  mode: "production",
  entry: './src/index.js',
  output: {
    path: './target',
    filename: 'index.js'
  }
};

module.exports = config;
```

Now run `webpack`.

<!-- A great way to do this is to provide your configuration via a GitHub repository -->
<!-- The most helpful is a minimal reproduction with instructions on how to reproduce -->
<!-- Repositories with too many files or large `webpack.config.js` files are not suitable -->
<!-- Please only add small code snippets directly into this issue -->
<!-- https://gist.github.com is a good place for longer code snippets -->
<!-- If your issue is caused by a plugin or loader, please create an issue on the loader/plugin repository instead -->

**What is the expected behavior?**

When I run `webpack`, I expect the `myFunction` call and body to removed (because I have specified `"sideEffects": false`), however they are not. Excerpt below:

```js
})([
  function(e, t, n) {
    "use strict";
    n.r(t);
    (e => {
      const t = {};
      "function" == typeof e.map && (t.map = () => {});
    })({});
    console.log(e => e);
  }
]);
```

For context, I originally discovered this whilst trying to import from an npm module: `import { max } from 'fp-ts/es6/Ord';`.

<!-- "It should work" is not a helpful explanation -->
<!-- Explain exactly how it should behave -->

**Other relevant information:**
webpack version:  4.39.2
Node.js version: 12.8.1
Operating System: N/A
Additional tools:

<!-- Please don't delete this template or we'll close your issue -->

## Feature request

<!-- Issues which contain questions or support requests will be closed. -->
<!-- Before creating an issue please make sure you are using the latest version of webpack. -->
<!-- Check if this feature need to be implemented in a plugin or loader instead -->
<!-- If yes: file the issue on the plugin/loader repo -->
<!-- Features related to the development server should be filed on this repo instead -->

**What is the expected behavior?**
When running wepack - allow for dev to set path to the "webpack-progress" file.

**What is motivation or use case for adding/changing the behavior?**
In our release and build servers we run webpack (`webpack --mode production --progress`) for many different projects. The issue is that all projects are built using their own user (for security reasons). When webpack runs with user foo a file `/tmp/webpack-progress` is created, ownd by foo. When the next project us built by user bar - that user has no permissions for the file and the build  failes with "Error: EACCES: permission denied, open '/tmp/webpack-progress'"

Without knowing exactly what this file does, and Google has not been of much help, there seems to be a need for allowing us to set the file path / name of wepback-progress. Alternatively the file name could be appended with something project specific.

**How should this be implemented in your opinion?**
Some configurable flag

**Are you willing to work on this yourself?**
sadly no :( 
