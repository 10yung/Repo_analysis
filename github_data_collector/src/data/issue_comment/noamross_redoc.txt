Using something like `wdiff`, `git diff --word-diff`, or maybe post-processing of `diffObj` representation, see if we can convert markdown diffs to criticmarkup or pandoc track changes format so file diffs can be converted to Word track changes.
flextable() output appears to only show up in resulting .docx outputs if the chunk option is set to `echo = TRUE`. This is problematic for any sort of writing projects where the code needs to be hidden (e.g., scientific manuscripts). The same code renders acceptably using word_document. The [`flextable`](https://github.com/davidgohel/flextable) package is extremely useful for use with .docx outputs/collaborators and plays nice with the `captioner` package for cross-referencing in lieu of using `bookdown::word_document2`, so would be wonderful if supported (it may be supported already and I am just missing something). 


## Rmarkdown code
```
---
title: "Testing flextable behavior in redoc"
output:
  redoc::redoc: default
  word_document: default
---
```

`​``{r setup​}
library(flextable)
\```

\## Test

The following table won't show up in redoc: 

\```{r echoF, echo=FALSE}
flextable(head(cars))
\```

But the next table will: 

\```{r echoT, echo=TRUE}
flextable(tail(cars))
\```


## Output
[rendered_redoc.docx](https://github.com/noamross/redoc/files/3996507/rendered_redoc.docx)
[rendered_word_document.docx](https://github.com/noamross/redoc/files/3996508/rendered_word_document.docx)



<!-- If this issue relates to usage of the package, pleaseinclude a reproducible example (consider using a "reprex" https://cran.rstudio.com/web/packages/reprex/). Please attach the associated docx file and let me know what version of Word you are using.  Paste your devtools::session_info() or sessionInfo() into the code block below, as well as versions of pandoc and RStudio if applicable. --> 

Please take a moment and consider if the issue is actually in **knitr**,
**rmarkdown**, **officer** or **pandoc**. Thanks! 
-->

---

<details> <summary><strong>Session Info</strong></summary>

```r
R version 3.6.0 (2019-04-26)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Ubuntu 16.04.6 LTS

Matrix products: default
BLAS:   /usr/lib/atlas-base/atlas/libblas.so.3.0
LAPACK: /usr/lib/atlas-base/atlas/liblapack.so.3.0

locale:
 [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C          
 [3] LC_TIME=C.UTF-8        LC_COLLATE=C.UTF-8    
 [5] LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8   
 [7] LC_PAPER=C.UTF-8       LC_NAME=C             
 [9] LC_ADDRESS=C           LC_TELEPHONE=C        
[11] LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C   

attached base packages:
[1] stats     graphics  grDevices utils     datasets 
[6] methods   base     

loaded via a namespace (and not attached):
 [1] zip_2.0.4         Rcpp_1.0.3        compiler_3.6.0   
 [4] base64enc_0.1-3   prettyunits_1.0.2 redoc_0.1.0.9000 
 [7] remotes_2.1.0     tools_3.6.0       uuid_0.1-2       
[10] testthat_2.3.1    digest_0.6.23     pkgbuild_1.0.6   
[13] pkgload_1.0.2     jsonlite_1.6      evaluate_0.14    
[16] memoise_1.1.0     rlang_0.4.2       whoami_1.3.0     
[19] cli_2.0.0         rstudioapi_0.10   diffobj_0.2.3    
[22] curl_4.3          yaml_2.2.0        xfun_0.11        
[25] httr_1.4.1        officer_0.3.6     withr_2.1.2      
[28] knitr_1.26        xml2_1.2.2        desc_1.2.0       
[31] fs_1.3.1          devtools_2.2.1    rprojroot_1.3-2  
[34] glue_1.3.1        R6_2.4.1          processx_3.4.1   
[37] fansi_0.4.0       rmarkdown_2.0     sessioninfo_1.1.1
[40] callr_3.4.0       magrittr_1.5      backports_1.1.5  
[43] ps_1.3.0          ellipsis_0.3.0    htmltools_0.4.0  
[46] usethis_1.5.1     assertthat_0.2.1  mime_0.8         
[49] stringi_1.4.3     crayon_1.3.4  
```

Pandoc version (get with rmarkdown::pandoc_version): 2.3.1

RStudio version (if applicable): Test on RStudio Cloud and on RStudio V 1.2.1335

</details>

Thanks for the amazing package, Noam. I just noticed that the default for the `track_changes` argument in `dedoc` is `"comments_only"` but the documentation for the function states that `"criticmarkup"` is the default.
I, as a MS Word user, appreciate this change tracking function from `redoc` so very much! However, recently, I encountered troubles when writing articles with `redoc` in Chinese. I attached a demo file based on a simplified version of Yihui's ctex template in `rticle`. The file can be compiled by  `word_document` but not `redoc`. 
[test.zip](https://github.com/noamross/redoc/files/3920729/test.zip)

The error message was 

```
processing file: test.preprocessed.Rmd
Quitting from lines 2-19 (test.preprocessed.Rmd) 
Error in nchar(input) : invalid multibyte string, element 1
Calls: <Anonymous> ... process_group.inline -> call_inline -> in_dir -> inline_exec
In addition: Warning messages:
1: In readChar(x, file.info(x)$size) :
  can only read in bytes in a non-UTF-8 MBCS locale
2: In knitr::knit(knit_input, knit_output, envir = envir, quiet = quiet,  :
  The file "test.preprocessed.Rmd" must be encoded in UTF-8. Please see https://yihui.name/en/2018/11/biggest-regret-knitr/ for more info.
Execution halted
```

I'm using MS Word 2019 and here's the session info and, yes, I already set the default encoding as UTF-8 and tried to switch `Sys.setlocale()` to Chinese and English. Nothing helps.

```r
R version 3.6.1 (2019-07-05)
Platform: x86_64-w64-mingw32/x64 (64-bit)
Running under: Windows 10 x64 (build 18363)

Matrix products: default

locale:
[1] LC_COLLATE=Chinese (Simplified)_China.936 
[2] LC_CTYPE=Chinese (Simplified)_China.936   
[3] LC_MONETARY=Chinese (Simplified)_China.936
[4] LC_NUMERIC=C                              
[5] LC_TIME=Chinese (Simplified)_China.936    

attached base packages:
[1] stats     graphics  grDevices utils     datasets 
[6] methods   base     

loaded via a namespace (and not attached):
 [1] Rcpp_1.0.3             whoami_1.3.0          
 [3] digest_0.6.23          crayon_1.3.4          
 [5] mime_0.7               R6_2.4.1              
 [7] jsonlite_1.6           magrittr_1.5          
 [9] evaluate_0.14          httr_1.4.1            
[11] zip_2.0.4              stringi_1.4.3         
[13] rlang_0.4.2            uuid_0.1-2            
[15] diffobj_0.2.3          rstudioapi_0.10.0-9003
[17] xml2_1.2.2             rmarkdown_1.18        
[19] tools_3.6.1            officer_0.3.6         
[21] xfun_0.11              yaml_2.2.0            
[23] compiler_3.6.1         base64enc_0.1-3       
[25] htmltools_0.4.0        knitr_1.26            
[27] redoc_0.1.0.9000      
```

This is my first time trying to use the package, I just installed it from GitHub today. 

I'm calling it with the RStudio Addin "Render and Update" and I get the following error:

```r
redoc:::roundtrip_active_file()
# Error in word_document(...) : unused argument (roundtrip = TRUE)
```

I updated from rmarkdown 1.16 to the latest sources on GitHub and still get the error. 

I'm not sure if this is the right way to first render a document. If not, I'd be grateful for instructions!

---

<details> <summary><strong>Session Info</strong></summary>

```r
R version 3.6.1 (2019-07-05)
Platform: x86_64-w64-mingw32/x64 (64-bit)
Running under: Windows 10 x64 (build 18362)

Matrix products: default

locale:
[1] LC_COLLATE=English_United States.1252  LC_CTYPE=English_United States.1252   
[3] LC_MONETARY=English_United States.1252 LC_NUMERIC=C                          
[5] LC_TIME=English_United States.1252    

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

loaded via a namespace (and not attached):
 [1] Rcpp_1.0.2       rstudioapi_0.10  knitr_1.25       xml2_1.2.2       magrittr_1.5     uuid_0.1-2      
 [7] R6_2.4.0         rlang_0.4.0      httr_1.4.1       tools_3.6.1      packrat_0.4.8-1  xfun_0.10       
[13] htmltools_0.3.6  yaml_2.2.0       digest_0.6.21    crayon_1.3.4     zip_2.0.4        whoami_1.3.0    
[19] officer_0.3.5    base64enc_0.1-3  evaluate_0.14    mime_0.7         rmarkdown_1.16.1 stringi_1.4.3   
[25] compiler_3.6.1   diffobj_0.2.3    redoc_0.1.0.9000 jsonlite_1.6    
```

Pandoc version (get with rmarkdown::pandoc_version): 2.6

RStudio version (if applicable): 1.2.5001

</details>

Cross-reference for Table 1 is broken for the following output. Please address this issue.
 
# Broken Results

> `Table <span class=“redoc” id=“redoc-citation-1”>@ref(tab:iris)`

# Reproducible Code

````
---
output: 
  bookdown::markdown_document2:
    base_format: redoc::redoc
---

Table \@ref(tab:iris)

```{r iris}
knitr::kable(head(iris), caption = "iris")
```

Table \@ref(tab:mtcars)

```{r mtcars}
knitr::kable(head(mtcars), caption = "mtcars")
```

Figure \@ref(fig:histogram)

```{r histogram, fig.cap="Histogram of Ozone."}
hist(airquality$Ozone, col="blue")
```
````

While looking into the package (thanks for your work!) I fixed a few typos in README.Rmd and CONTRIBUTING.md.
@rmflight this relates to your problem in #41 

When rendering a document with R code in YAML with quotes like this, rendering YAML fails with the warning pandoc warning `[WARNING] Could not parse YAML metadata `:

```
---
date: "`r Sys.Date()`"
output: 
  redoc::redoc
---
```

This works if the YAML if placed in _single_ quotes:

```
---
date: '`r Sys.Date()`'
output: 
  redoc::redoc
---
```

This is because, prior to knitting, `redoc` wraps R code in <span> tags that include a quoted class.  If you render the document with `clean=FALSE`, the pre-processed file will look like this:

```
---
date: "<span class="redoc" id="redoc-inlinecode-1">`r Sys.Date()`</span>"
output: 
  redoc::redoc
---
```

Currently working on a solution.  I previously used pandoc-style native spans, which look like this, but switched to HTML style because something was conflicting with those:

    [`r Sys.Date()`]{.redoc #redoc-inlineccode-1}

The `yaml` package always defaults to writing single quotes, so maybe I should always re-write header YAML as single quotes to avoid this?  In any case, using single quotes will temporarily solve the issue.
For a given header, how can one set the option for `highlight_outputs = FALSE` in the YAML itself?

    title: "My Title"
    author: "Robert M Flight, Joshua M Mitchell, Hunter NB Moseley"
    date: "2019-08-21"
    output: 
      redoc::redoc:
        highlight_outputs: FALSE

Doesn't seem to work. 
Per #44, it would be helpful to check the version of Pandoc on package load, at least in interacctive mode. Run `rmarkdown::pandoc_version()`, and give an informative message if version is <2.1.2.  One could also use `rmarkdown::pandoc_exec()` to figure out if the Pandoc version is the one bundled with RStudio, in which case the message can recommend updating RStudio.