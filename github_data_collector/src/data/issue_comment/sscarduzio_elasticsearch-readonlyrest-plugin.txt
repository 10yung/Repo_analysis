I have successfully integrated the ROR plugin with LDAP, below is the settings, but after removing the `bind_dn` and `bind_password`, I cannot log in anymore 

```
readonlyrest:

  response_if_req_forbidden: Forbidden by ReadonlyREST ES plugin
  access_control_rules:

  # - name: "Require HTTP Basic Auth"
  #   type: allow
  #   auth_key: user:password 

  - name: "IT"
    # kibana_access: admin
    ldap_auth:
      name: "ldap1"
      groups: ["IT"]
    type: allow 

  ldaps:
  - name: ldap1
    host: "192.168.0.1"
    port: 389
    # bind_dn: "CN=user,OU=Users,OU=Malaysia,DC=MY,DC=example,DC=local"
    # bind_password: "password"
    ssl_enabled: false
    ssl_trust_all_certs: true
    search_user_base_DN: "OU=Users,OU=Malaysia,DC=MY,DC=example,DC=local"
    search_groups_base_DN: "OU=Malaysia,DC=MY,DC=example,DC=local"
    user_id_attribute: "samAccountName"
    unique_member_attribute: "member"
    connection_pool_size: 10
    connection_timeout_in_sec: 30
    request_timeout_in_sec: 30
    cache_ttl_in_sec: 60
    group_search_filter: "(objectclass=group)"

``` 

Is there anything else to configure for LDAP anonymous authentication? From the examples, it says "skip for anonymous bind" for the `bind_*` fields.
**New** Options in configuration for custom truststore file and password
Installing the readonlyrest plugin and running a default cluster using the official elasticsearch operator (ECK) doesn't work, as requests made by the operator are rejected by ROR.

Asking around in the elastic forums I got to know that the operator uses two users in the file realm, namely "elastic-internal" and "elastic-internal-keystore" [(see here)](https://discuss.elastic.co/t/credentials-for-elastic-operator/212628/2?u=xyphr)

This is a complete blocker for us as I couldn't find any way in ROR to allow requests from particular file realm users. (Also, we love the awesome support for JWT based auth, and would really like to continue using it)

Any help on this would be greatly appreciated
It would be nice to have the ability to configure security access for each Kibana space: 
- none: no access to one Kibana space
- read: read access to one Kibana space
- all: all access to one Kibana space 

All that associated to one role in readonlyrest.yml
Hi, I am using readonlyrest ES and kibana plugins. I have configured it to authenticate ES from my active directory. When trying to delegate access to groups, I am quite unsuccessful. Access is provided to all users in LDAP tree for ES. Also in kibana dashboard, following error shows up
`Could not login: { "username": "XXXXX", "authHeaders": "", "hiddenApps": [], "sid": "051a5ee7-b397-4767-bc20-a2ae83ce4867", "expiresAt": 1565262020863 } {}` when trying to login.

Following is my readonlyrest.yml
  `readonlyrest:
    response_if_req_forbidden: Access Forbidden by readonlyrest

    access_control_rules:
    - name: full access for backend group
      type: allow                                           # Optional, defaults to "allow", will omit from now on.
      ldap_authentication:
        name: "ldap1"                                       # ldap name from below 'ldaps' section
        groups: ["BackendDev"]       # group within 'ou=unixGroups,dc=example,dc=com'
        verbosity: error
      indices: ["*"]
      actions: ["*"]
    - name: kibana access for backend group
      type: allow                                           # Optional, defaults to "allow", will omit from now on.
      ldap_authentication:
        name: "ldap1"                                       # ldap name from below 'ldaps' section
        groups: ["*"]       # group within 'ou=Groups,dc=example,dc=com'
        verbosity: error
      kibana_access: admin
      kibana_index: ".kibana"
      indices: [â€œ*"]
    ldaps:
    - name: ldap1
      host: "******.******.com"
      port: 389                                                     # optional, default 389
      ssl_enabled: false                                            # optional, default true
      ssl_trust_all_certs: true                                     # optional, default false
      bind_dn: "CN=Administrator,CN=Users,DC=******,DC=io"                         # optional, skip for anonymous bind
      bind_password: "***********"                                     # optional, skip for anonymous bind
      search_user_base_DN: "OU=unixUsers,DC=******,DC=io"
      user_id_attribute: "sAMAccountName"                                      # optional, default "uid"
      search_groups_base_DN: "OU=unixGroups,DC=******,DC=io"
      unique_member_attribute: "member"                                # optional, default "uniqueMember"
      connection_pool_size: 200                                      # optional, default 30
      connection_timeout_in_sec: 100                                 # optional, default 1
      request_timeout_in_sec: 200                                    # optional, default 1
      cache_ttl_in_sec: 60                                          # optional, default 0 - cache disabled
      group_search_filter: "(objectClass=group)(CN=*)"   # optional, default (cn=*)
      group_name_attribute: "cn"`

Any help will be greatly appreciated. Thanks in advance!!
Hi, I'm trying to use multi-tenancy in readonlyrest. So I followed this document. [https://github.com/beshu-tech/readonlyrest-docs/blob/master/multitenancy_guide.md](multitenancy_guide). I did exactly the same. But unfortunately, I could only log in as kibana:kibana and not as any other users. 
**Kibana Error**
`  log   [06:35:02.008] [error][readonlyrest_kbn] got an error [403] Forbidden for path /
  log   [06:35:02.024] [info][readonlyrest_kbn] try extract credentials from JSON
  log   [06:35:11.462] [info][readonlyrest_kbn] try extract credentials from JSON
  log   [06:35:11.465] [info][readonlyrest_kbn] try extract credentials from JSON
  log   [06:35:11.472] [error][ror] identity error: undefined
`

**Elasticsearch Error.**
`[2019-03-05T12:09:34,683][INFO ][t.b.r.a.ACL              ] [vEtFfiK] FORBIDDEN by default req={ ID:1102256757-974396710#2593, TYP:RRAdminRequest, CGR:N/A, USR:sales_admin_usr(?), BRS:false, KDX:null, ACT:cluster:admin/rradmin/refreshsettings, OA:127.0.0.1, DA:0.0.0.0, IDX:<N/A>, MET:GET, PTH:/_readonlyrest/metadata/current_user, CNT:<N/A>, HDR:{authorization=<OMITTED>, Connection=close, content-length=0, Host=localhost:9200}, HIS:[::KIBANA-SRV::->[auth_key->false]], [ADMIN_SALES->[auth_key->false]] } 
`

ror version : 1.16.34
es version : 6.6.0
configuration : 3 nodes cluster

I have a three nodes cluster, running in kubernetes. When I run an image with ror installed, a NullPointerException is throwed by nodes, and the cluster is instable.

I tried with a minimal configuration

readonlyrest.yml :
```
      access_control_rules:
      - name: "ALL MONITOR"
        type: allow
        actions: ["cluster:monitor/*", "indices:admin/get"]
```

stack trace :
```
java.util.concurrent.CompletionException: java.lang.NullPointerException
	at java.base/java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:314)
	at java.base/java.util.concurrent.CompletableFuture.uniApplyNow(CompletableFuture.java:683)
	at java.base/java.util.concurrent.CompletableFuture.uniApplyStage(CompletableFuture.java:658)
	at java.base/java.util.concurrent.CompletableFuture.thenApply(CompletableFuture.java:2094)
	at tech.beshu.ror.acl.ACL.check(ACL.java:204)
	at tech.beshu.ror.es.IndexLevelActionFilter.handleRequest(IndexLevelActionFilter.java:159)
	at tech.beshu.ror.es.IndexLevelActionFilter.lambda$apply$1(IndexLevelActionFilter.java:135)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at tech.beshu.ror.es.IndexLevelActionFilter.apply(IndexLevelActionFilter.java:131)
	at org.elasticsearch.action.support.TransportAction$RequestFilterChain.proceed(TransportAction.java:165)
	at org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:139)
	at org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:81)
	at org.elasticsearch.client.node.NodeClient.executeLocally(NodeClient.java:87)
	at org.elasticsearch.client.node.NodeClient.doExecute(NodeClient.java:76)
	at org.elasticsearch.client.support.AbstractClient.execute(AbstractClient.java:403)
	at org.elasticsearch.client.support.AbstractClient$ClusterAdmin.execute(AbstractClient.java:719)
	at org.elasticsearch.client.support.AbstractClient$ClusterAdmin.health(AbstractClient.java:741)
	at org.elasticsearch.rest.action.admin.cluster.RestClusterHealthAction.lambda$prepareRequest$0(RestClusterHealthAction.java:81)
	at org.elasticsearch.rest.BaseRestHandler.handleRequest(BaseRestHandler.java:97)
	at tech.beshu.ror.es.ReadonlyRestPlugin.lambda$null$5(ReadonlyRestPlugin.java:193)
	at org.elasticsearch.rest.RestController.dispatchRequest(RestController.java:240)
	at org.elasticsearch.rest.RestController.tryAllHandlers(RestController.java:336)
	at org.elasticsearch.rest.RestController.dispatchRequest(RestController.java:174)
	at org.elasticsearch.http.netty4.Netty4HttpServerTransport.dispatchRequest(Netty4HttpServerTransport.java:551)
	at org.elasticsearch.http.netty4.Netty4HttpRequestHandler.channelRead0(Netty4HttpRequestHandler.java:137)
	at io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:105)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)
	at org.elasticsearch.http.netty4.pipelining.HttpPipeliningHandler.channelRead(HttpPipeliningHandler.java:68)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:323)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:297)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)
	at io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:286)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1434)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:965)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:163)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:656)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysPlain(NioEventLoop.java:556)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:510)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:470)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:909)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.lang.NullPointerException
	at tech.beshu.ror.es.RequestInfo.extractRemoteAddress(RequestInfo.java:447)
	at tech.beshu.ror.acl.ACL$1.getRemoteAddress(ACL.java:363)
	at tech.beshu.ror.requestcontext.RequestContext.toString(RequestContext.java:453)
	at tech.beshu.ror.requestcontext.RequestContext.toString(RequestContext.java:374)
	at java.base/java.lang.String.valueOf(String.java:2951)
	at java.base/java.lang.StringBuilder.append(StringBuilder.java:168)
	at tech.beshu.ror.acl.ACL.doLog(ACL.java:170)
	at tech.beshu.ror.acl.ACL.lambda$check$4(ACL.java:217)
	at java.base/java.util.concurrent.CompletableFuture.uniApplyNow(CompletableFuture.java:680)
	... 68 more
```

java.util.concurrent.CompletionException: java.lang.NoClassDefFoundError: javax/xml/bind/DatatypeConverter

This seems similar, if not identical to #363. 

I'm using the docker image at https://hub.docker.com/r/natewarr/elasticsearch-oss/ (natewarr/elasticsearch-oss:6.4.1) with the following Dockerfile:

```
FROM docker.elastic.co/elasticsearch/elasticsearch-oss:6.4.1

COPY ./plugins /install/plugins

RUN elasticsearch-plugin install --batch repository-s3
RUN for plugin in $(ls /install/plugins); do \
        elasticsearch-plugin install --batch file:///install/plugins/${plugin}; \
    done \
    && rm -rf /install/plugins
```

readonlyrest-1.16.27_es6.4.1 is the only plugin installed.

This is the official OSS elasticsearch docker image, modified with the readonlyrest plugin. 

This is clearly due to Java 9+. I wonder if there some form of this that could be included herein?
https://github.com/jwtk/jjwt/pull/283/files

Or support for jjwt 0.10+?
Hello,

I'm trying to use this plugin to authorize requests behind an **AWS ALB**. Actually this load-balancer adds an `X-Amzn-Oidc-Data` header containing an JWT token. Unfortunately, I can't make this work. I think it should work because you mention "Google Cloud IAP signed headers" that works exactly the same.

One can not access the JWT secret, or what you call  `signature_key`. The best AWS ALB can provide (as GCP IAP) is **public keys** for the `kid` [(see here).](https://docs.aws.amazon.com/elasticloadbalancing/latest/application/listener-authenticate-users.html#user-claims-encoding) Like:
```
-----BEGIN PUBLIC KEY-----
MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEV2/rLhXWkZ29iaHCXiRNzy8MPN1x
NCrp0UZX4cxhj+A20bvViURRiyOtbBv+ah98xy6npBY5ibt0jg9WDZoKoA==
-----END PUBLIC KEY-----
```

Is this supposed to work? If yes, how ?
Thanks in advance
Hi, below is my readonlyrest.yml. I have a problem that when the user login, and use the Dev tool to query. Every time even it matches documents the return data is 0.
I am sure there are some documents matches, but Dev tool didn't return everything.
![image](https://user-images.githubusercontent.com/19474557/42927264-7ec34f06-8b66-11e8-9685-14ab498c685c.png)
![image](https://user-images.githubusercontent.com/19474557/42927446-2584e368-8b67-11e8-9ea4-087ac268ffbc.png)
 ```
readonlyrest:
  enable: true
  response_if_req_forbidden: Sorry, your request is forbidden.
  access_control_rules:

 - name: Basic Kibana Access
    type: allow
    kibana_access: ro
    indices: [".kibana_@{X-Forwarded-User}"]
    groups: ["basicKibanaAccess"]
    actions: ["*"]

  - name: template filter
    type: allow
    kibana_access: ro_strict
    indices: [".kibana_template"]
    groups: ["template_filter"]

  - name: "Alex login intercept reads and filter"
    groups: ["user1group"]
    filter: "{\"bool\": { \"should\": [ { \"match\":{\"IPV4_DST_ADDR\":\"192.168.0.0/16\"} }, { \"match\":{\"IPV4_SRC_ADDR\":\"192.168.0.0/16\"} }  ], \"minimum_should_match\": 1 }}"

  - name: "test1 login intercept reads and filter"
    groups: ["user2group"]
  - name: "howard login intercept reads and filter"
    groups: ["user3group"]
    filter: "{\"bool\": { \"should\": [ { \"match\":{\"IPV4_DST_ADDR\":\"163.19.0.0/16\"} }, { \"match\":{\"IPV4_SRC_ADDR\":\"163.19.0.0/16\"} }  ], \"minimum_should_match\": 1 }}"

  - name: User1 login (all the rest)
    type: allow
    indices: ["logstash-*",".kibana_@{X-Forwarded-User}"]

  - name: "::KIBANA-SRV::"
    type: allow
    auth_key: kibana:kibana

  users:
  - username: alex
    proxy_auth: "alex"
    groups: ["user1group","basicKibanaAccess","template_filter"]
  - username: test1
    proxy_auth: "test1"
    groups: ["user2group","basicKibanaAccess","template_filter"]

```
thank you in advance!