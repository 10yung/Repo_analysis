Reported by [Cristian](https://github.com/casidiablo): Running import from the web works for a few seconds and then crashes. If I go into the container and manually run `photoprism import` it works for a while and then:

```
...
INFO[2020-01-16T17:28:01Z] exif: taken at 2014-10-20 10:09:16 +0000 UTC 
INFO[2020-01-16T17:28:01Z] import: moving main jpg file "google-takeout/Google Photos/2014-10-20/IMG_20141020_100916895.jpg" to "/assets/photos/originals/2014/10/20141020_100916_34CD65076EBE.jpg" 
panic: runtime error: invalid memory address or nil pointer dereference
[signal SIGSEGV: segmentation violation code=0x1 addr=0x8 pc=0x1d577e6]

goroutine 16 [running]:
github.com/photoprism/photoprism/internal/photoprism.(*MediaFile).Filename(...)
	/go/src/github.com/photoprism/photoprism/internal/photoprism/mediafile.go:307
github.com/photoprism/photoprism/internal/photoprism.(*MediaFile).Basename(0x0, 0xc000130280, 0x40687c0)
	/go/src/github.com/photoprism/photoprism/internal/photoprism/mediafile.go:367 +0x26
github.com/photoprism/photoprism/internal/photoprism.(*Index).MediaFile(0xc004cf29a0, 0x0, 0x101010101010101, 0x101, 0x0, 0x0)
	/go/src/github.com/photoprism/photoprism/internal/photoprism/index_mediafile.go:37 +0x117
github.com/photoprism/photoprism/internal/photoprism.importWorker(0xc00009e960)
	/go/src/github.com/photoprism/photoprism/internal/photoprism/import_worker.go:91 +0xffc
github.com/photoprism/photoprism/internal/photoprism.(*Import).Start.func1(0xc00009e960, 0xc0063fe870)
	/go/src/github.com/photoprism/photoprism/internal/photoprism/import.go:73 +0x2b
created by github.com/photoprism/photoprism/internal/photoprism.(*Import).Start
	/go/src/github.com/photoprism/photoprism/internal/photoprism/import.go:72 +0x209
```
**As a User, I want to use the existing PhotoPrism Web UI to manage my image and sidecar files so that I don't need to use an extra tool like https://filebrowser.xyz/.**

Just an idea for now, waiting for feedback and maybe even a contributor who wants to do this. We might build upon https://github.com/filebrowser/filebrowser as this project needs a new maintainer anyways.

![Screenshot 2020-01-16 at 16 05 02](https://user-images.githubusercontent.com/301686/72536150-ff153680-3879-11ea-994f-144e769cfe80.png)

When zooming in (or easing) to certain locations on the map, ~~the results are not shown (or at the wrong location) and~~ you can see the error "Geometry exceeds allowed extent, reduce your vector tile buffer size" on the JS console, see https://github.com/mapbox/mapbox-gl-js/issues/8639 and https://github.com/mapbox/mapbox-gl-js/issues/8992.

They closed the original issue and limited comments, maybe because they think it's an issue with the tiles and not Mapbox GL itself. Needs further investigation.

San Francisco typically works pretty well to test this:

https://demo.photoprism.org/places/s2:80858741f414
**As a developer, I want to use the latest stable version of TiDB so that my users get the best performance and there are no security issues.**

Sadly, `go get -u -t ./...` doesn't do the trick: 

> go get: upgrading github.com/pingcap/tidb@v2.1.11+incompatible: github.com/pingcap/tidb@v2.1.11+incompatible: invalid version: +incompatible suffix not allowed: module contains a go.mod file, so semantic import versioning is required

Not sure what the issue is here. They have a lot of dependencies and it never was easy to figure out, which versions work together although that might have improved recently.

Once dependencies are upgraded, we might have to change some things in our bootstrap code:

https://github.com/photoprism/photoprism/tree/develop/internal/tidb

Acceptance Criteria:
- [ ] TiDB is upgraded to v3.0.x (latest stable)
- [ ] Everything works like before
See [panic: html/template: pattern matches no files #190](https://github.com/photoprism/photoprism/issues/190)

> Yeah, in general, this and stuff that access the /assets folders have really bad error messages. e.g. I was trying to make the originals folder point to an s3 bucket that I mounted using fuse, but the mount was done in such a way that it prevented non-root users (i.e. the photoprism user) to access the directory.
> 
> In that case, photoprism crashes with "mkdir fail blabla: file exists", which should be more like: Error accessing the /assets/photos/original folder: permission denied
I am using the latest docker container and tried to import some pictures but I always end up with the same error messages:

```
INFO[2020-01-12T16:14:47Z] importing photos from /home/photoprism/Pictures/Import 
INFO[2020-01-12T16:14:47Z] tensorflow: loading image classification model from "nasnet" 
INFO[2020-01-12T16:14:49Z] tensorflow: loading classification labels from labels.txt 
INFO[2020-01-12T16:14:49Z] file: taken at 2020-01-12 16:14:32.253994219 +0000 UTC 
INFO[2020-01-12T16:14:49Z] import: moving main jpg file "160509_Starke-Baumtypen_Eiche-im-Seidengewand_02.jpg" to "/home/photoprism/Pictures/Originals/2020/01/20200112_161432_5D191EC042B5.jpg" 
INFO[2020-01-12T16:14:51Z] tensorflow: loading image classification model from "nsfw" 
INFO[2020-01-12T16:14:51Z] tensorflow: loading classification labels from labels.txt 
INFO[2020-01-12T16:14:51Z] output: [[0.07815167 0.00057457644 0.91859716 0.0017267889 0.00094990333]] 
INFO[2020-01-12T16:14:51Z] nsfw: {Drawing:0.07815167 Hentai:0.00057457644 Neutral:0.91859716 Porn:0.0017267889 Sexy:0.00094990333} 
WARN[2020-01-12T16:14:51Z] file: no latitude and longitude in metadata  
INFO[2020-01-12T16:14:51Z] index: changed empty photo title to "Unknown" 
ERRO[2020-01-12T16:14:51Z] index: Error 1366: Incorrect int value: '' for column 'location_id' at row 1 
INFO[2020-01-12T16:14:51Z] import: failed main jpg file "2020/01/20200112_161432_5D191EC042B5.jpg" 
INFO[2020-01-12T16:14:51Z] import: deleted empty directory "/home/photoprism/Pictures/Import/upload" 
INFO[2020-01-12T16:14:51Z] photo import completed in 7.780556208s       
INFO[2020-01-12T16:14:51Z] closed database connection                 
```

I always the same error regardless of what I try to import. What am I doing wrong?

Regards,

Udo
As shown below in the API's `StartIndex` route, an option can be passed to skip indexing photos that haven't changed and thus reduce indexing time. 
https://github.com/photoprism/photoprism/blob/ba9b3cad72e402f51ee88e77b3c8a5705e117b75/internal/api/index.go#L89-L93

In the CLI's `index` command there seems to be no such option:
https://github.com/photoprism/photoprism/blob/ba9b3cad72e402f51ee88e77b3c8a5705e117b75/internal/commands/index.go#L48-L49 

I am syncing photos from multiple devices to a single directory, so I'd like to be able to create a cronjob to periodically index photos, but currently it takes too many resources to do it hourly. If I was able to skip unchanged files, it should be feasible.
Lovely project!
I currently organized my photo collections with folders like the following:
/[year]/[subject]/[image].jpg
example:
/2019/Berlin Holiday/IMG12412.JPG

It would be nice if I cloud define an regular expression to extract such information like subject from the path and automatically create albums, categories or labels with that subjects while indexing the images.

Maybe someone can point me to right location in the source code to implement that feature?
Thanks,
Timo
As a user I'd like to use PhotoPrism without cloud dependencies such that no private data is leaked.

Right now PhotoPrism depends on cloud services (openstreetmap.org) for displaying the map and for reverse geocoding.
Like that, userdata such as photo coordinates and IP addresses is leaked.

Possible steps to resolve this issue are:
* find out and document which cloud services are used, what data is transferred, how it is processed and stored on servers
  * [x] gecoding: https://github.com/photoprism/photoprism/wiki/Geocoding
  * [ ] map tiles
* [x] make the use of cloud services configurable
* [ ] provide self-hostable alternatives to the cloud services
Apple Live Photos is a sneaky little feature that has gotten under my family's skin and they now do not want to live without it. They expect to be able to see Live Photo animations and toggle them in some way.

Including support for Live Photos would remove a possible friction point in getting Apple customers to embrace photoprism.