Hi,

I'm trying to run the MMM Awesome Alexa install script, which downloads snowboy, and I am getting access denied on the following:

node-pre-gyp ERR! Tried to download(403): https://snowboy-release-node.s3-us-west-2.amazonaws.com/snowboy/v1.3.1/Release/snowboy-v1.3.1-node-v64-linux-arm.tar.gz 
node-pre-gyp ERR! Pre-built binaries not found for snowboy@1.3.1 and node@10.18.1 (node-v64 ABI, glibc) (falling back to source compile with node-gyp) 
node-pre-gyp ERR! Tried to download(undefined): https://snowboy-release-node.s3-us-west-2.amazonaws.com/snowboy/v1.3.1/Release/snowboy-v1.3.1-node-v64-linux-arm.tar.gz 
node-pre-gyp ERR! Pre-built binaries not found for snowboy@1.3.1 and node@10.18.1 (node-v64 ABI, glibc) (falling back to source compile with node-gyp) 

Any ideas what I can do?

Thanks so much for your help!
I set the sensitivity to 1.0. But unfortunately Snowboy often only reacts when I get very close to the microphone of my smartphone. I combine Snowboy with native Speech Recognition. Speech Recognition recognizes faster. I have the feeling it has to do with the Mic input level for Snowboy that despite the high sensitivity the hotword is not recognized. Therefore my question: Is there a way to increase the input level for Snowboy?
this is what the readout states
tried everything i could think of


node-pre-gyp ERR! Tried to download(403): https://snowboy-release-node.s3-us-west-2.amazonaws.com/snowboy/v1.3.1/Release/snowboy-v1.3.1-node-v64-linux-arm.tar.gz 
node-pre-gyp ERR! Pre-built binaries not found for snowboy@1.3.1 and node@10.18.0 (node-v64 ABI, glibc) (falling back to source compile with node-gyp) 
node-pre-gyp ERR! Tried to download(undefined): https://snowboy-release-node.s3-us-west-2.amazonaws.com/snowboy/v1.3.1/Release/snowboy-v1.3.1-node-v64-linux-arm.tar.gz 
node-pre-gyp ERR! Pre-built binaries not found for snowboy@1.3.1 and node@10.18.0 (node-v64 ABI, glibc) (falling back to source compile with node-gyp) 
make: Entering directory '/home/pi/hestia/snowboy/build'
make: Entering directory '/home/pi/hestia/snowboy/build'
  CXX(target) Release/obj.target/snowboy/swig/Node/snowboy.o
  CXX(target) Release/obj.target/snowboy/swig/Node/snowboy.o
In file included from ../swig/Node/snowboy.cc:1:
../node_modules/nan/nan.h: In function ‘void Nan::AsyncQueueWorker(Nan::AsyncWorker*)’:
../node_modules/nan/nan.h:2298:62: warning: cast between incompatible function types from ‘void (*)(uv_work_t*)’ {aka ‘void (*)(uv_work_s*)’} to ‘uv_after_work_cb’ {aka ‘void (*)(uv_work_s*, int)’} [-Wcast-function-type]
     , reinterpret_cast<uv_after_work_cb>(AsyncExecuteComplete)
                                                              ^
In file included from ../swig/Node/snowboy.cc:1:
../node_modules/nan/nan.h: In function ‘void Nan::AsyncQueueWorker(Nan::AsyncWorker*)’:
../node_modules/nan/nan.h:2298:62: warning: cast between incompatible function types from ‘void (*)(uv_work_t*)’ {aka ‘void (*)(uv_work_s*)’} to ‘uv_after_work_cb’ {aka ‘void (*)(uv_work_s*, int)’} [-Wcast-function-type]
     , reinterpret_cast<uv_after_work_cb>(AsyncExecuteComplete)
                                                              ^
../swig/Node/snowboy.cc: In constructor ‘SnowboyDetect::SnowboyDetect(const string&, const string&)’:
../swig/Node/snowboy.cc:38:31: warning: catching polymorphic type ‘class std::runtime_error’ by value [-Wcatch-value=]
   } catch (std::runtime_error e) {
                               ^
../swig/Node/snowboy.cc: In constructor ‘SnowboyDetect::SnowboyDetect(const string&, const string&)’:
../swig/Node/snowboy.cc:38:31: warning: catching polymorphic type ‘class std::runtime_error’ by value [-Wcatch-value=]
   } catch (std::runtime_error e) {
                               ^
In file included from ../node_modules/nan/nan.h:54,
                 from ../swig/Node/snowboy.cc:1:
../swig/Node/snowboy.cc: At global scope:
/home/pi/.cache/node-gyp/10.18.0/include/node/node.h:573:43: warning: cast between incompatible function types from ‘void (*)(Nan::ADDON_REGISTER_FUNCTION_ARGS_TYPE)’ {aka ‘void (*)(v8::Local<v8::Object>)’} to ‘node::addon_register_func’ {aka ‘void (*)(v8::Local<v8::Object>, v8::Local<v8::Value>, void*)’} [-Wcast-function-type]
       (node::addon_register_func) (regfunc),                          \
                                           ^
/home/pi/.cache/node-gyp/10.18.0/include/node/node.h:607:3: note: in expansion of macro ‘NODE_MODULE_X’
   NODE_MODULE_X(modname, regfunc, NULL, 0)  // NOLINT (readability/null_usage)
   ^~~~~~~~~~~~~
../swig/Node/snowboy.cc:183:1: note: in expansion of macro ‘NODE_MODULE’
 NODE_MODULE(SnowboyDetect, SnowboyDetect::Init)
 ^~~~~~~~~~~
In file included from ../node_modules/nan/nan.h:54,
                 from ../swig/Node/snowboy.cc:1:
../swig/Node/snowboy.cc: At global scope:
/home/pi/.cache/node-gyp/10.18.0/include/node/node.h:573:43: warning: cast between incompatible function types from ‘void (*)(Nan::ADDON_REGISTER_FUNCTION_ARGS_TYPE)’ {aka ‘void (*)(v8::Local<v8::Object>)’} to ‘node::addon_register_func’ {aka ‘void (*)(v8::Local<v8::Object>, v8::Local<v8::Value>, void*)’} [-Wcast-function-type]
       (node::addon_register_func) (regfunc),                          \
                                           ^
/home/pi/.cache/node-gyp/10.18.0/include/node/node.h:607:3: note: in expansion of macro ‘NODE_MODULE_X’
   NODE_MODULE_X(modname, regfunc, NULL, 0)  // NOLINT (readability/null_usage)
   ^~~~~~~~~~~~~
../swig/Node/snowboy.cc:183:1: note: in expansion of macro ‘NODE_MODULE’
 NODE_MODULE(SnowboyDetect, SnowboyDetect::Init)
 ^~~~~~~~~~~
In file included from /home/pi/.cache/node-gyp/10.18.0/include/node/node.h:63,
                 from ../node_modules/nan/nan.h:54,
                 from ../swig/Node/snowboy.cc:1:
/home/pi/.cache/node-gyp/10.18.0/include/node/v8.h: In instantiation of ‘void v8::PersistentBase<T>::SetWeak(P*, typename v8::WeakCallbackInfo<P>::Callback, v8::WeakCallbackType) [with P = node::ObjectWrap; T = v8::Object; typename v8::WeakCallbackInfo<P>::Callback = void (*)(const v8::WeakCallbackInfo<node::ObjectWrap>&)]’:
/home/pi/.cache/node-gyp/10.18.0/include/node/node_object_wrap.h:84:78:   required from here
/home/pi/.cache/node-gyp/10.18.0/include/node/v8.h:9502:16: warning: cast between incompatible function types from ‘v8::WeakCallbackInfo<node::ObjectWrap>::Callback’ {aka ‘void (*)(const v8::WeakCallbackInfo<node::ObjectWrap>&)’} to ‘Callback’ {aka ‘void (*)(const v8::WeakCallbackInfo<void>&)’} [-Wcast-function-type]
                reinterpret_cast<Callback>(callback), type);
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/pi/.cache/node-gyp/10.18.0/include/node/node.h:63,
                 from ../node_modules/nan/nan.h:54,
                 from ../swig/Node/snowboy.cc:1:
/home/pi/.cache/node-gyp/10.18.0/include/node/v8.h: In instantiation of ‘void v8::PersistentBase<T>::SetWeak(P*, typename v8::WeakCallbackInfo<P>::Callback, v8::WeakCallbackType) [with P = node::ObjectWrap; T = v8::Object; typename v8::WeakCallbackInfo<P>::Callback = void (*)(const v8::WeakCallbackInfo<node::ObjectWrap>&)]’:
/home/pi/.cache/node-gyp/10.18.0/include/node/node_object_wrap.h:84:78:   required from here
/home/pi/.cache/node-gyp/10.18.0/include/node/v8.h:9502:16: warning: cast between incompatible function types from ‘v8::WeakCallbackInfo<node::ObjectWrap>::Callback’ {aka ‘void (*)(const v8::WeakCallbackInfo<node::ObjectWrap>&)’} to ‘Callback’ {aka ‘void (*)(const v8::WeakCallbackInfo<void>&)’} [-Wcast-function-type]
                reinterpret_cast<Callback>(callback), type);
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/pi/.cache/node-gyp/10.18.0/include/node/v8.h: In instantiation of ‘void v8::PersistentBase<T>::SetWeak(P*, typename v8::WeakCallbackInfo<P>::Callback, v8::WeakCallbackType) [with P = Nan::ObjectWrap; T = v8::Object; typename v8::WeakCallbackInfo<P>::Callback = void (*)(const v8::WeakCallbackInfo<Nan::ObjectWrap>&)]’:
../node_modules/nan/nan_object_wrap.h:65:61:   required from here
/home/pi/.cache/node-gyp/10.18.0/include/node/v8.h:9502:16: warning: cast between incompatible function types from ‘v8::WeakCallbackInfo<Nan::ObjectWrap>::Callback’ {aka ‘void (*)(const v8::WeakCallbackInfo<Nan::ObjectWrap>&)’} to ‘Callback’ {aka ‘void (*)(const v8::WeakCallbackInfo<void>&)’} [-Wcast-function-type]
/home/pi/.cache/node-gyp/10.18.0/include/node/v8.h: In instantiation of ‘void v8::PersistentBase<T>::SetWeak(P*, typename v8::WeakCallbackInfo<P>::Callback, v8::WeakCallbackType) [with P = Nan::ObjectWrap; T = v8::Object; typename v8::WeakCallbackInfo<P>::Callback = void (*)(const v8::WeakCallbackInfo<Nan::ObjectWrap>&)]’:
../node_modules/nan/nan_object_wrap.h:65:61:   required from here
/home/pi/.cache/node-gyp/10.18.0/include/node/v8.h:9502:16: warning: cast between incompatible function types from ‘v8::WeakCallbackInfo<Nan::ObjectWrap>::Callback’ {aka ‘void (*)(const v8::WeakCallbackInfo<Nan::ObjectWrap>&)’} to ‘Callback’ {aka ‘void (*)(const v8::WeakCallbackInfo<void>&)’} [-Wcast-function-type]
rm: cannot remove './Release/.deps/Release/obj.target/snowboy/swig/Node/snowboy.o.d.raw': No such file or directory
make: *** [snowboy.target.mk:109: Release/obj.target/snowboy/swig/Node/snowboy.o] Error 1
make: Leaving directory '/home/pi/hestia/snowboy/build'
  SOLINK_MODULE(target) Release/obj.target/snowboy.node
gyp ERR! build error 
gyp ERR! stack Error: `make` failed with exit code: 2
gyp ERR! stack     at ChildProcess.onExit (/usr/lib/node_modules/npm/node_modules/node-gyp/lib/build.js:191:23)
gyp ERR! stack     at ChildProcess.emit (events.js:198:13)
gyp ERR! stack     at Process.ChildProcess._handle.onexit (internal/child_process.js:248:12)
gyp ERR! System Linux 4.19.75-v7+
gyp ERR! command "/usr/bin/node" "/usr/lib/node_modules/npm/node_modules/node-gyp/bin/node-gyp.js" "build" "--fallback-to-build" "--module=/home/pi/hestia/snowboy/lib/node/binding/Release/node-v64-linux-arm/snowboy.node" "--module_name=snowboy" "--module_path=/home/pi/hestia/snowboy/lib/node/binding/Release/node-v64-linux-arm"
gyp ERR! cwd /home/pi/hestia/snowboy
gyp ERR! node -v v10.18.0
gyp ERR! node-gyp -v v5.0.5
gyp ERR! not ok 
node-pre-gyp ERR! build error 
node-pre-gyp ERR! stack Error: Failed to execute '/usr/bin/node /usr/lib/node_modules/npm/node_modules/node-gyp/bin/node-gyp.js build --fallback-to-build --module=/home/pi/hestia/snowboy/lib/node/binding/Release/node-v64-linux-arm/snowboy.node --module_name=snowboy --module_path=/home/pi/hestia/snowboy/lib/node/binding/Release/node-v64-linux-arm' (1)
node-pre-gyp ERR! stack     at ChildProcess.<anonymous> (/home/pi/hestia/snowboy/node_modules/node-pre-gyp/lib/util/compile.js:83:29)
node-pre-gyp ERR! stack     at ChildProcess.emit (events.js:198:13)
node-pre-gyp ERR! stack     at maybeClose (internal/child_process.js:982:16)
node-pre-gyp ERR! stack     at Process.ChildProcess._handle.onexit (internal/child_process.js:259:5)
node-pre-gyp ERR! System Linux 4.19.75-v7+
node-pre-gyp ERR! command "/usr/bin/node" "/home/pi/hestia/snowboy/node_modules/.bin/node-pre-gyp" "install" "--fallback-to-build"
node-pre-gyp ERR! cwd /home/pi/hestia/snowboy
node-pre-gyp ERR! node -v v10.18.0
node-pre-gyp ERR! node-pre-gyp -v v0.6.39
node-pre-gyp ERR! not ok 
Failed to execute '/usr/bin/node /usr/lib/node_modules/npm/node_modules/node-gyp/bin/node-gyp.js build --fallback-to-build --module=/home/pi/hestia/snowboy/lib/node/binding/Release/node-v64-linux-arm/snowboy.node --module_name=snowboy --module_path=/home/pi/hestia/snowboy/lib/node/binding/Release/node-v64-linux-arm' (1)
npm ERR! code ELIFECYCLE
npm ERR! errno 1
npm ERR! snowboy@1.3.1 install: `node-pre-gyp install --fallback-to-build`
npm ERR! Exit status 1
npm ERR! 
npm ERR! Failed at the snowboy@1.3.1 install script.
npm ERR! This is probably not a problem with npm. There is likely additional logging output above.

npm ERR! A complete log of this run can be found in:
npm ERR!     /home/pi/.npm/_logs/2019-12-30T17_48_51_413Z-debug.log

I integrated snowboy with my app, It was working well on my test device Samsung a30s.

When I tried it on my Xiaomi Redmi 5 I was getting the following error.

```
*** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***
Build fingerprint: 'Xiaomi/rosy/rosy:8.1.0/OPM1.171019.026/V11.0.1.0.ODAMIXM:user/release-keys'
Revision: '0'
ABI: 'arm64'
pid: 32228, tid: 32228, name: owboyalexalevel  >>> com.snowboyalexalevel <<<
signal 6 (SIGABRT), code -6 (SI_TKILL), fault addr --------
    x0   0000000000000000  x1   0000000000007de4  x2   0000000000000006  x3   0000000000000008
    x4   fefefefefefefeff  x5   fefefefefefefeff  x6   fefefefefefefeff  x7   7f7f7f7f7f7f7f7f
    x8   0000000000000083  x9   fcd931cb711d9024  x10  0000000000000000  x11  0000000000000001
    x12  ffffffffffffffff  x13  0000000000000000  x14  ffffffffffffffff  x15  aaaaaaaaaaaaaaab
    x16  0000005c29ff0fa8  x17  000000717cab0598  x18  0000000000000000  x19  0000000000007de4
    x20  0000000000007de4  x21  00000070cde93000  x22  00000070cf4cd260  x23  0000000000000004
    x24  0000000000000000  x25  0000007ff9aea040  x26  0000000000000000  x27  0000000000000000
    x28  0000000000000004  x29  0000007ff9ae87b0  x30  000000717ca65df8
    sp   0000007ff9ae8770  pc   000000717ca65e14  pstate 0000000060000000
backtrace:
    #00 pc 000000000001de14  /system/lib64/libc.so (abort+104)
    #01 pc 00000000000ec904  /data/app/com.snowboyalexalevel-hexF0b4BEQGShuv2uasf1w==/lib/arm64/libsnowboy-detect-android.so (__gnu_cxx::__verbose_terminate_handler()+348)
    #02 pc 000000000009a560  /data/app/com.snowboyalexalevel-hexF0b4BEQGShuv2uasf1w==/lib/arm64/libsnowboy-detect-android.so (__cxxabiv1::__terminate(void (*)())+8)
    #03 pc 00000000000ebb68  /data/app/com.snowboyalexalevel-hexF0b4BEQGShuv2uasf1w==/lib/arm64/libsnowboy-detect-android.so
    #04 pc 0000000000099fc8  /data/app/com.snowboyalexalevel-hexF0b4BEQGShuv2uasf1w==/lib/arm64/libsnowboy-detect-android.so (__gxx_personality_v0+156)
    #05 pc 00000000000fe5c0  /data/app/com.snowboyalexalevel-hexF0b4BEQGShuv2uasf1w==/lib/arm64/libsnowboy-detect-android.so
    #06 pc 00000000000fe8e4  /data/app/com.snowboyalexalevel-hexF0b4BEQGShuv2uasf1w==/lib/arm64/libsnowboy-detect-android.so (_Unwind_RaiseException+252)
    #07 pc 000000000009a6fc  /data/app/com.snowboyalexalevel-hexF0b4BEQGShuv2uasf1w==/lib/arm64/libsnowboy-detect-android.so (__cxa_throw+124)
    #08 pc 000000000004cc14  /data/app/com.snowboyalexalevel-hexF0b4BEQGShuv2uasf1w==/lib/arm64/libsnowboy-detect-android.so (snowboy::SnowboyLogMsg::~SnowboyLogMsg()+776)
    #09 pc 00000000000497c4  /data/app/com.snowboyalexalevel-hexF0b4BEQGShuv2uasf1w==/lib/arm64/libsnowboy-detect-android.so (snowboy::Input::Input(std::string const&)+500)
    #10 pc 000000000007cae4  /data/app/com.snowboyalexalevel-hexF0b4BEQGShuv2uasf1w==/lib/arm64/libsnowboy-detect-android.so (snowboy::UnpackPipelineResource(std::string const&, std::string*)+72)
    #11 pc 00000000000414ac  /data/app/com.snowboyalexalevel-hexF0b4BEQGShuv2uasf1w==/lib/arm64/libsnowboy-detect-android.so (snowboy::PipelineItf::SetResource(std::string const&)+452)
    #12 pc 000000000002b3ec  /data/app/com.snowboyalexalevel-hexF0b4BEQGShuv2uasf1w==/lib/arm64/libsnowboy-detect-android.so (snowboy::SnowboyDetect::SnowboyDetect(std::string const&, std::string const&)+124)
    #13 pc 00000000000260c0  /data/app/com.snowboyalexalevel-hexF0b4BEQGShuv2uasf1w==/lib/arm64/libsnowboy-detect-android.so (Java_ai_kitt_snowboy_snowboyJNI_new_1SnowboyDetect+212)
    #14 pc 0000000000014e28  /data/app/com.snowboyalexalevel-hexF0b4BEQGShuv2uasf1w==/oat/arm64/base.odex (offset 0x12000)

```

Here are the details of my Xiaomi Device:

![WhatsApp Image 2019-12-25 at 3 16 10 PM](https://user-images.githubusercontent.com/22905237/71442004-fb363e80-2729-11ea-8765-3ea9ee9e3d01.jpeg)


Here are the details of my Samsung Device:

![7da8a5ea-a354-4d01-b28a-783b31def117](https://user-images.githubusercontent.com/22905237/71442049-3a648f80-272a-11ea-878f-3040e94296e3.jpg)

I am facing the same error on all Xiaomi devices I have come across.
Previously there is a bug in EZAudio: `Error: Failed to fill complex buffer in float converter ('insz') ` when the audio converter is filled with the source buffer, causing the demo app to crash. 

We add this fix to solve this issue for Obj-C demo in both simulator and real device. The fix is composed of 2 changes:

1. In `./examples/iOS/Obj-c/SnowboyTest/ViewController.mm` we do the `setPreferredSampleRate` before `setActive`;

2. In `examples/iOS/Obj-C/Pods/EZAudio/EZAudio/EZAudioFloatConverter.m`, we reset the Audio Converter if `AudioConverterFillComplexBuffer` fails. (Currently this will continuously reset the AudioConverter in simulator)

I’ve made a [gist](https://gist.github.com/dardo82/8333e6252faf275a8fed58f0a1d25658) to fix some problems I’ve had with the pip package:

1. The demo scripts are missing.
2. The training script is missing.
3. The training script is Python2 code. 
4. The training script is Windows code.
5. They don’t have exec permissions… 

Please fix these and the other issues soon and update the package.
I have a few questions about commercial licenses. Please see the items below.
Sorry. I contacted by email but could not get a reply.

**Commercial License Inquiry**

**Pricing**
- README says that you have tiered pricing depending on volume.
- How much is the total cost you expect regardless of the amount? (We are not certain how many units we will sell.)


**Required voice sample quantity**
- README says that universal models require at least thousands.
- Is it possible to train one with 500 samples?
- Should the samples be from all unique people? Is it okay to use samples spoken by the same person in different pitch or different environment(e.g. with noise)?


**Processing time**
- README says that it takes about a month to get a universal model.
- Can it take less than a month? We hope to deploy one in a week or two.
Error: Failed to fill complex buffer in float converter ('insz')
exit(-1)
Hi,
Sorry if it's a duplicate issue. I haven't found the answer in currently create ones.

I'm looking for a way to compile snowboy for python 3 and get the "_snowboydetect.so" file for armv6/armv7 from a x84_64 machine? 

Maybe there is conversion command, a gcc flag or an update of the makefile that could do the trick?

Many thanks.
The last Travis CI run was two years ago https://travis-ci.org/Kitt-AI/snowboy/builds