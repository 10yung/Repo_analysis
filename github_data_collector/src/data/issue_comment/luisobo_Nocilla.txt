Since `NSURLSession` will execute the requests on a background thread, we can end up in the situation when the `tearDown` of a previous unit test stops Nocilla since it no longer needs it, and `startLoading` gets called while in the middle of another unrelated test case, thus causing an exception and failing the other test.

So, we're early returning from `startLoading` to prevent this kind of failures.
Making sure that the correct implementations are restored to `NSURLSession` and `LSNSURLSessionHook`.

Using `method_exchangeImplementations:` mixes up the `IMP` for both classes to a point where Nocilla no longer responds to stubs.
This PR Adds an LSURLMatcher class, and updates LSStubRequest to use it instead of the regular LSStringMatcher.

The motivation for this is that LSStringMatcher is not content aware, and so creates false negatives when matching URLs that are equivalent but not identical. The most common example is when the query parameter order is different, e.g:

    http://example.com?foo=bar&bar=foo
    http://example.com?bar=foo&foo=bar

Query parameter order can be non-deterministic, as it depends on things like the order of enumeration of an NSDictionary, which is undocumented, and changes between iOS versions, or when using different enumeration methods.
Avoid conflicts with https://github.com/erikdoe/ocmock/blob/5d9028ff40fe2bbe0ddc710b423cfc78fd5a006c/Source/OCMock/OCMStubRecorder.h#L23
The following line parsed and worked fine using Nocilla (0.11.0) in Swift 2:

````
stubRequest("POST", "\(baseURL)/hello")
    .withHeaders([ "content-type": "application/json", "USER_ID": "foo@bar.com" ])
    .withBody(try! JSON(["body"]).serialize())
````
How do I spell this in Swift 3?
Due to issues with bridging Foundation data types and nullability annotation, using `Nocilla` from a Swift 3 has become extremely cumbersome. 
Is there any chance that this library is going to be updated to provide better Swift 3 support in the near future?

This adds annotations necessary for normal usage on Swift 3. Without these, code must deal with null values that Nocilla never actually returns, i.e. lots of `?` interspersed in Nocilla DSL calls.

I haven’t been able to find an Obj-C annotation that gets rid of unused value warnings for the returned function pointers Nocilla uses. In Swift 3, it’s necessary to do this:

```
_ = stubRequest(...)
```

Im trying to stub a request with a specific body, i'm copying it from Charles but im getting always the same error:

```
Use this snippet to stub the request:
stubRequest(@"PUT", @"http://url.com").
withHeaders(@{ @"Accept": @"application/json", @"Accept-Encoding": @"gzip;q=1.0, compress;q=0.5", @"Accept-Language": @"en-US;q=1.0", @"Content-Length": @"108", @"Content-Type": @"application/json", @"User-Agent": @"Unknown/Unknown (Unknown; OS Version 9.3 (Build 13E230))", @"X-deviceToken": @"deviceToken", @"X-platformId": @"3", @"deviceId": @"deviceId", @"languageId": @"3" }).
withBody(@"{
  \"matchIds\" : [
    \"17\",
    \"MatchId_3\",
    \"MatchId_34\"
  ],
  \"values\" : {
    \"viewed\" : true
  }
}");
```

And this in my test:

```
    let urlPut = "http://url.com"
    stubRequest("PUT", urlPut)
        .withBody(fromJsonFile("getMatchesRequestPUTBody"))
        .andReturn(200)
        .withHeaders(["Content-Type": "application/json"])
```

Where getMatchesRequestPUTBody contains:
{
  "matchIds" : [
    "17",
    "MatchId_3",
    "MatchId_34"
  ],
  "values" : {
    "viewed" : true
  }
}
If i remove the line "withBody" it works as expected.
Any ideas?
Notice i'm stubbing 2 request in the same method.

```
    public func fromJsonFile(fileName: String) -> String {
        return fromFile(fileName, fileExtension: "json")
    }

    public func fromTxtFile(fileName: String) -> String {
        return fromFile(fileName, fileExtension: "txt")
    }

    public func fromFile(fileName: String, fileExtension: String) -> String {
        let classBundle = NSBundle(forClass: self.classForCoder)
        let path = classBundle.pathForResource(fileName, ofType: fileExtension)
        let absolutePath =  path ?? ""
        do {
            return try String(contentsOfFile: absolutePath, encoding: NSUTF8StringEncoding)
        } catch _ {
            print("Error trying to read file \(absolutePath). The file does not exist")
            return ""
        }
    }
```

I have a multiple test set, one of them uses nocilla so I execute LSNocilla.sharedInstance().start() when it begin and stop it at the end, but when the other test that needs actual internet runs I keep getting "NocillaUnexpectedRequest', reason: 'An unexpected HTTP request was fired.'" 

I don't know is it still in your list of priorities, but I found out that your library does not want to work with ASIHTTPRequest correctly. My AFNetworking requests finished successfully, but ASIHTTPRequest request that starts synchronously never leaves this loop (ASIHTTPRequest:765, method `-startSynchronous`):

```
if (![self isCancelled] && ![self complete]) {
    [self main];
    while (!complete) {
        [[NSRunLoop currentRunLoop] runMode:[self runLoopMode] beforeDate:[NSDate distantFuture]];
    }
}
```

After Nocilla calls `-requestFinished` this local variable (`complete`) stays the same.
