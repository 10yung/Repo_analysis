This makes it a bit clearer IMO
<!-- Which version of electron-builder are you using? -->
Latest


<!-- What target are you building for? -->
Mac and Windows only

I have a very specific use case and I couldn't see if it was possible to do. In which case, this is a feature request. If it is possible (because I overlooked something in docs), can you please give guidance on the best approach to achieve my aims.


A. After the `app.asar` and `electron.asar` files are generated I need to be able to write a script or something to intercept the electron-builder build process to calculate the **MD5 hash of both files.**

B. After [A] but before completion of electron-builder process, I need to run my own command to generate my own file (an executable file) which is built based on the md5 hash from step [A]

C. I need to copy my executable file so that it sits beside the `electron` executable file (for Win and Mac)

D. **For Mac only**: I need to modify the `plist` file so that the `.app` "bundle" launches my executable file instead of the standard electron application.

E. Electron-builder should continue it's standard process.


**Can this be achieved somehow? If not, what would I need to modify in electron-builder to achieve it. Is it difficult?**

# Feature Request

## Change of Install Location
Installation should be located at “c:\Program Files” or “c:\Program Files (x86)”

## Feature motivation
Installation of Software (Executable) in AppData often been abused to install Scamware or other malicious Software without Admin Privileges.
AntiVirus Software and Intrusion Prevention software often block installations to this Folder.
In addition, most Companys prevent Installation to this location as well.

A Application as nice as Notable shouldn’t use a install locations preferred by Malicious Software.

And yes, I tried Installation with Administrative rights, same result

## Notable asked me to open this request on electron-builder.
https://github.com/notable/notable/issues/978
<!-- Which version of electron-builder are you using? -->
<!-- Please always try to use latest version before report. -->
* **Version**: 21.0.11

<!-- Which version of electron-updater are you using (if applicable)? -->

<!-- What target are you building for? -->
* **Target**: windows x64

<!-- Enter your issue details below this comment. -->
<!-- If you want, you can donate to increase issue priority (https://www.electron.build/donate) -->
I have a piece of nsis code to copy directory from installation folder to desktop as below:

```
!macro preInit 
  ; Previous install path
  Var /GLOBAL OLD_PATH
  ; Previous auto backup path in installation folder
  Var /GLOBAL OLD_BACKUP_PATH

  ; Force use 64 system regview
  SetRegView 64
  ; сheck registry for previous installation path
  ReadRegStr $OLD_PATH HKLM "${INSTALL_REGISTRY_KEY}" InstallLocation

  ; Set old backup folder path
  StrCpy $OLD_BACKUP_PATH "$OLD_PATH\resources\backup"

  ; Check if has old backup folder
  ${if} ${FileExists} "$OLD_BACKUP_PATH\*"
    MessageBox MB_OK "backup exists" 
    ; Automatically copy old backup folder to desktop in case user didn't backup
    SetOutPath "$DESKTOP\backup"
    File /nonfatal /a /r "$OLD_BACKUP_PATH\"
  ${else}
    MessageBox MB_OK "no backup exists" 
  ${endif}
!macroend
```

 now I encountered two issue:
1. This macro is somehow called during build process

~~2. If I run the built `exe` file, the copy action will not copy the actual folder at the time I run `exe`, but the folder when this macro got invoked during build process. Even if I delete the content in the `$OLD_BACKUP_PATH`, it can somehow still copy a folder with files in it, that's weird.~~
<!-- Which version of electron-builder are you using? -->
<!-- Please always try to use latest version before report. -->
* **Version**: 21.2.0

<!-- Which version of electron-updater are you using (if applicable)? -->

<!-- What target are you building for? -->
* **Target**: MSI (building on Windows 10)

<!-- Enter your issue details below this comment. -->
This issue seems to be unresolved: https://github.com/electron-userland/electron-builder/issues/4204.

However, I believe I may have isolated a way to reproduce it. For some reason, when using this npm script to run my build, it fails *only when building on Windows* - it works fine on macOS:

**It is important for the context of the below commands to note that I am using Git-Bash on Windows, so the bash commands are totally legit.**

```js
"build-electron": "npm run build && rm -rf ./build && mkdir ./build && cp icon.ico ./build && electron-builder"
```

Because of my build process, I'm running a webpack build (`npm run build`), then to be sure I've wiped the latest previous build, I remove then recreate the `build` directory, I copy in an icon I'm using for the app, and I simply run `electron-builder`. 

This will fail repeatedly on Windows complaining about the "builder-effective-config.yaml".

**However**, if I simply split the command up like this it works fine:

```js
"build-electron": "npm run build && rm -rf ./build && mkdir ./build && cp icon.ico ./build && npm run builder",
"builder": "electron-builder"
```

**An important note** is that when it fails, it creates a **file** called "build" instead of a directory.  This happens even if I remove the `mkdir` and related commands.

It appears this has something to do with the context of the command; I expect *it* is expecting to be run as a stand-alone command.

This should either be corrected to allow combining in another npm script or clarified in the docs that it's a requirement.
<!-- If you want, you can donate to increase issue priority (https://www.electron.build/donate) -->
<!-- Which version of electron-builder are you using? -->
<!-- Please always try to use latest version before report. -->
* **Version**:  20.44.4

<!-- Which version of electron-updater are you using (if applicable)? -->

<!-- What target are you building for? -->
* **Target**: linux snap

<!-- Enter your issue details below this comment. -->
<!-- If you want, you can donate to increase issue priority (https://www.electron.build/donate) -->
Hello,

I try to make a kiosk app using https://tutorials.ubuntu.com/tutorial/electron-kiosk running under Ubuntu Core.

Questions are : 
1. How to add parts ?
```yaml
    desktop-gtk3:
        source: https://github.com/ubuntu/snapcraft-desktop-helpers.git
        source-subdir: gtk
        plugin: make
        make-parameters: ["FLAVOR=gtk3"]
        build-packages:
            - build-essential
            - libgtk-3-dev
        stage-packages:
            - libxkbcommon0  # XKB_CONFIG_ROOT
            - ttf-ubuntu-font-family
            - dmz-cursor-theme
            - light-themes
            - adwaita-icon-theme
            - gnome-themes-standard
            - shared-mime-info
            - libgtk-3-0
            - libgdk-pixbuf2.0-0
            - libglib2.0-bin
            - libgtk-3-bin
            - unity-gtk3-module
            - libappindicator3-1
            - locales-all
            - xdg-user-dirs
            - ibus-gtk3
            - libibus-1.0-5

    xwayland-kiosk-helper:
        plugin: cmake
        source: https://github.com/MirServer/xwayland-kiosk-helper.git
        build-packages: [ build-essential ]
        stage-packages: [ xwayland, i3, libegl1-mesa, libgl1-mesa-glx ]
```
2. How to change and add "apps" ?
```yaml
apps:
    electron-hello-world-kiosk:
        command: desktop-launch xwayland-kiosk-launch "$SNAP/electron-helloworld/electron-quick-start" "--no-sandbox"

    daemon:
        daemon: simple
        restart-condition: always
        command: desktop-launch xwayland-kiosk-launch "$SNAP/electron-helloworld/electron-quick-start" "--no-sandbox"
```

Maybe i should use snapcraft manually ?
Thanks for your help :)
* **electron-builder**: tried with 22.2.0, 21.2.0, 20.0.0
* **electron-updater**: 4.0.0 (not relevant)
* **node**: 8 or 10 (tried both, same effect)
* **target**: MacOS (on MacOS agent)



Hi, first of all thanks everybody working on this great library.
I've been using it over 2 years without issues in our CI environment (using electron-builder@19.56.0).
I'm building the MacOS variant on a physical Mac agent.

Due to the notarizing and other fixes I updated to the latest electron builder.
Locally everything works fine. However, when I run this build via the CI system (TeamCity) it always fails with EEXIST after building (during cleanup).
When I move to the mac agent and run "npm run dist" from terminal (from that same working directory the build just failed in) it works fine, so it only fails when triggered by the CI environment.
I've also swapped the physical agent for another one without luck, so I'm sure nothing is/was lingering on the agent.

If anyone could point me in any direction as to why this is happening? This doesn't seem to happen on our window variant (which is built by the same system but on a windows agent).
I also have a Jenkins instance available where I'll be testing this on tomorrow, but I'm afraid the results will remain the same.


This is the error in question, it seems to copy a file that already exists.

> Error: EEXIST: file already exists, link '/Users/rend/Documents/buildAgent/work/97a47f0f7948b943/src/app/node_modules/debug/LICENSE' -> '/Users/rend/Documents/buildAgent/work/97a47f0f7948b943/src/dist/mac/Electron.app/Contents/Resources/app/node_modules/debug/LICENSE'

I noticed this is about the "debug" package, this package is not added to the package.json by myself, but rather trough other packages dependecies. I did confirm that some packages rely on 2.6.8 and others rely on 4.0.0 of that same package. Maybe this has something to do with the failure to copy?


I've ran the build with DEBUG=electron-builder which gave me this output:
Note that I omitted the package.json, if that is needed I'll follow up this post with it.


> [17:21:27][npm run dist]   • two package.json structure is used devPackageFile=/Users/rend/Documents/buildAgent/work/97a47f0f7948b943/src/package.json appPackageFile=/Users/rend/Documents/buildAgent/work/97a47f0f7948b943/src/app/package.json
> [17:21:28][npm run dist]   • no native production dependencies
> [17:21:28][npm run dist]   • packaging       platform=darwin arch=x64 electron=6.1.7 appOutDir=dist/mac
> [17:21:28][npm run dist]   • spawning        command=/Users/rend/Documents/buildAgent/work/97a47f0f7948b943/src/node_modules/app-builder-bin/mac/app-builder unpack-electron --configuration [{"platform":"darwin","arch":"x64","version":"6.1.7"}] --output /Users/rend/Documents/buildAgent/work/97a47f0f7948b943/src/dist/mac --distMacOsAppName Electron.app
> [17:21:28][npm run dist]   • map async       taskCount=2
> [17:21:28][npm run dist]   • map async       taskCount=1
> [17:21:28][npm run dist]   • map async       taskCount=334
> [17:21:29][npm run dist]   • exited          command=app-builder code=0 pid=49637
> [17:21:29][npm run dist]   • asar using is disabled — it is strongly not recommended solution=enable asar and use asarUnpack to unpack files that must be externally available
> [17:21:29][npm run dist]   • spawning        command=/Users/rend/Documents/buildAgent/work/97a47f0f7948b943/src/node_modules/app-builder-bin/mac/app-builder node-dep-tree --dir /Users/rend/Documents/buildAgent/work/97a47f0f7948b943/src/app
> [17:21:29][npm run dist]   • unresolved deps  nodeModuleDir=/Users/rend/Documents/buildAgent/work/97a47f0f7948b943/src/node_modules round=0 unresolved=wrappy, once
> [17:21:29][npm run dist]   • unresolved deps  nodeModuleDir=/Users/rend/Documents/buildAgent/work/97a47f0f7948b943/src/app/node_modules round=0 unresolved=@types/semver, builder-util-runtime, fs-extra, js-yaml, lazy-val, lodash.isequal, pako
> [17:21:29][npm run dist]   • unresolved deps  nodeModuleDir=/Users/rend/Documents/buildAgent/work/97a47f0f7948b943/src/app/node_modules round=0 unresolved=sax
> [17:21:29][npm run dist]   • unresolved deps  nodeModuleDir=/Users/rend/Documents/buildAgent/work/97a47f0f7948b943/src/node_modules round=0 unresolved=graceful-fs
> [17:21:29][npm run dist]   • unresolved deps  nodeModuleDir=/Users/rend/Documents/buildAgent/work/97a47f0f7948b943/src/node_modules round=0 unresolved=graceful-fs
> [17:21:29][npm run dist]   • unresolved deps  nodeModuleDir=/Users/rend/Documents/buildAgent/work/97a47f0f7948b943/src/app/node_modules round=0 unresolved=deep-equal, mkdirp
> [17:21:29][npm run dist]   • unresolved deps  nodeModuleDir=/Users/rend/Documents/buildAgent/work/97a47f0f7948b943/src/app/node_modules round=0 unresolved=graceful-fs
> [17:21:29][npm run dist]   • unresolved deps  nodeModuleDir=/Users/rend/Documents/buildAgent/work/97a47f0f7948b943/src/node_modules round=1 unresolved=graceful-fs
> [17:21:29][npm run dist]   • unresolved deps  nodeModuleDir=/Users/rend/Documents/buildAgent/work/97a47f0f7948b943/src/app/node_modules round=0 unresolved=graceful-fs
> [17:21:29][npm run dist]   • unresolved deps  nodeModuleDir=/Users/rend/Documents/buildAgent/work/97a47f0f7948b943/src/node_modules round=1 unresolved=graceful-fs
> [17:21:29][npm run dist]   • unresolved deps  nodeModuleDir=/Users/rend/Documents/buildAgent/work/97a47f0f7948b943/src/node_modules round=0 unresolved=angular
> [17:21:29][npm run dist]   • unresolved deps  nodeModuleDir=/Users/rend/Documents/buildAgent/work/97a47f0f7948b943/src/node_modules round=0 unresolved=native-promise-only
> [17:21:29][npm run dist]   • unresolved deps  nodeModuleDir=/Users/rend/Documents/buildAgent/work/97a47f0f7948b943/src/app/node_modules round=0 unresolved=if-async, stream-slicer, through2
> [17:21:29][npm run dist]   • unresolved deps  nodeModuleDir=/Users/rend/Documents/buildAgent/work/97a47f0f7948b943/src/node_modules round=0 unresolved=inherits
> [17:21:29][npm run dist]   • unresolved deps  nodeModuleDir=/Users/rend/Documents/buildAgent/work/97a47f0f7948b943/src/node_modules round=0 unresolved=lodash
> [17:21:29][npm run dist]   • unresolved deps  nodeModuleDir=/Users/rend/Documents/buildAgent/work/97a47f0f7948b943/src/node_modules round=0 unresolved=angular-translate
> [17:21:29][npm run dist]   • unresolved deps  nodeModuleDir=/Users/rend/Documents/buildAgent/work/97a47f0f7948b943/src/node_modules round=0 unresolved=angular-translate
> [17:21:29][npm run dist]   • unresolved deps  nodeModuleDir=/Users/rend/Documents/buildAgent/work/97a47f0f7948b943/src/app/node_modules round=0 unresolved=electron-localshortcut
> [17:21:29][npm run dist]   • unresolved deps  nodeModuleDir=/Users/rend/Documents/buildAgent/work/97a47f0f7948b943/src/node_modules round=0 unresolved=cookie, debug
> [17:21:29][npm run dist]   • unresolved deps  nodeModuleDir=/Users/rend/Documents/buildAgent/work/97a47f0f7948b943/src/node_modules round=0 unresolved=debug, encodeurl, escape-html, on-finished, parseurl, statuses
> [17:21:29][npm run dist]   • unresolved deps  nodeModuleDir=/Users/rend/Documents/buildAgent/work/97a47f0f7948b943/src/node_modules round=0 unresolved=depd, qs, content-type, debug, on-finished, type-is
> [17:21:29][npm run dist]   • unresolved deps  nodeModuleDir=/Users/rend/Documents/buildAgent/work/97a47f0f7948b943/src/app/node_modules round=0 unresolved=depd, setprototypeof, statuses
> [17:21:29][npm run dist]   • unresolved deps  nodeModuleDir=/Users/rend/Documents/buildAgent/work/97a47f0f7948b943/src/node_modules round=1 unresolved=depd, setprototypeof, statuses
> [17:21:29][npm run dist]   • unresolved deps  nodeModuleDir=/Users/rend/Documents/buildAgent/work/97a47f0f7948b943/src/node_modules round=0 unresolved=unpipe, bytes, http-errors, iconv-lite
> [17:21:29][npm run dist]   • unresolved deps  nodeModuleDir=/Users/rend/Documents/buildAgent/work/97a47f0f7948b943/src/node_modules round=0 unresolved=ms, on-finished, range-parser, debug, depd, escape-html, etag, fresh, statuses, encodeurl, http-errors
> [17:21:29][npm run dist]   • unresolved deps  nodeModuleDir=/Users/rend/Documents/buildAgent/work/97a47f0f7948b943/src/node_modules round=0 unresolved=parseurl, send, encodeurl, escape-html
> [17:21:29][npm run dist]   • unresolved deps  nodeModuleDir=/Users/rend/Documents/buildAgent/work/97a47f0f7948b943/src/node_modules round=0 unresolved=mime-types
> [17:21:29][npm run dist]   • exited          command=app-builder code=0 pid=49638 out=[{"dir":"/Users/rend/Documents/buildAgent/work/97a47f0f7948b943/src/node_modules","deps":["debug","graceful-fs","iconv-lite","inherits","lodash","mime-db","mime-types","ms","once","qs","safer-buffer","wrappy"]},{"dir":"/Users/rend/Documents/buildAgent/work/97a47f0f7948b943/src/app/node_modules","deps":["7zip","@types/semver","accepts","accessibility-developer-tools","angular","angular-translate","angular-translate-loader-static-files","angular-translate-loader-url","argparse","array-flatten","async","balanced-match","body-parser","bootstrap","brace-expansion","builder-util-runtime","bytes","charenc","concat-map","connected-domain","content-disposition","content-type","cookie","cookie-signature","core-util-is","cross-unzip","crypt","debug","deep-equal","depd","destroy","devtron","each-async","ee-first","electron-debug","electron-devtools-installer","electron-is-accelerator","electron-is-dev","electron-localshortcut","electron-log","electron-updater","electron-window-state","encodeurl","escape-html","esprima","etag","express","finalhandler","forwarded","fresh","fs-extra","fs.realpath","glob","graceful-fs","highlight.js","http-errors","humanize-plus","iconv-lite","if-async","inflight","inherits","ipaddr.js","is-buffer","isarray","jquery","js-yaml","jsonfile","keyboardevent-from-electron-accelerator","keyboardevents-areequal","lazy-val","lodash","lodash.isequal","md5","media-typer","merge-descriptors","methods","mime","mime-db","mime-types","minimatch","minimist","mkdirp","moment","ms","native-promise-only","negotiator","netstats","on-finished","once","onetime","pako","parseurl","path-is-absolute","path-to-regexp","proxy-addr","ps-node","qs","range-parser","raven","raw-body","readable-stream","regedit","rimraf","safe-buffer","safer-buffer","sax","selective-whitespace","semver","send","serve-static","set-immediate-shim","setprototypeof","sprintf-js","stack-trace","statuses","stream-slicer","string_decoder","table-parser","through2","timed-out","tokenize-whitespace","type-is","universalify","unpipe","utils-merge","uuid","vary","wrappy","xtend"]},{"dir":"/Users/rend/Documents/buildAgent/work/97a47f0f7948b943/src/app/node_modules/builder-util-runtime/node_modules","deps":["debug","ms"]},{"dir":"/Users/rend/Documents/buildAgent/work/97a47f0f7948b943/src/app/node_modules/electron-debug/node_modules","deps":["electron-is-dev"]},{"dir":"/Users/rend/Documents/buildAgent/work/97a47f0f7948b943/src/app/node_modules/electron-updater/node_modules","deps":["semver"]},{"dir":"/Users/rend/Documents/buildAgent/work/97a47f0f7948b943/src/app/node_modules/electron-window-state/node_modules","deps":["jsonfile"]},{"dir":"/Users/rend/Documents/buildAgent/work/97a47f0f7948b943/src/app/node_modules/http-errors/node_modules","deps":["inherits"]},{"dir":"/Users/rend/Documents/buildAgent/work/97a47f0f7948b943/src/app/node_modules/regedit/node_modules","deps":["debug","ms"]}]
> [17:21:31][npm run dist]   • async task error error=EEXIST: file already exists, link '/Users/rend/Documents/buildAgent/work/97a47f0f7948b943/src/app/node_modules/debug/LICENSE' -> '/Users/rend/Documents/buildAgent/work/97a47f0f7948b943/src/dist/mac/Electron.app/Contents/Resources/app/node_modules/debug/LICENSE'
> [17:21:31][npm run dist]   • async task error error=EEXIST: file already exists, link '/Users/rend/Documents/buildAgent/work/97a47f0f7948b943/src/app/node_modules/debug/LICENSE' -> '/Users/rend/Documents/buildAgent/work/97a47f0f7948b943/src/dist/mac/Electron.app/Contents/Resources/app/node_modules/debug/LICENSE'
> [17:21:31][npm run dist]   • async task error error=EEXIST: file already exists, link '/Users/rend/Documents/buildAgent/work/97a47f0f7948b943/src/app/node_modules/debug/src/browser.js' -> '/Users/rend/Documents/buildAgent/work/97a47f0f7948b943/src/dist/mac/Electron.app/Contents/Resources/app/node_modules/debug/src/browser.js'
> [17:21:31][npm run dist]   • async task error error=EEXIST: file already exists, link '/Users/rend/Documents/buildAgent/work/97a47f0f7948b943/src/app/node_modules/debug/src/index.js' -> '/Users/rend/Documents/buildAgent/work/97a47f0f7948b943/src/dist/mac/Electron.app/Contents/Resources/app/node_modules/debug/src/index.js'
> [17:21:31][npm run dist] Error: EEXIST: file already exists, link '/Users/rend/Documents/buildAgent/work/97a47f0f7948b943/src/app/node_modules/debug/LICENSE' -> '/Users/rend/Documents/buildAgent/work/97a47f0f7948b943/src/dist/mac/Electron.app/Contents/Resources/app/node_modules/debug/LICENSE'
> [17:21:31][npm run dist]     at copyOrLinkFile (/Users/rend/Documents/buildAgent/work/97a47f0f7948b943/src/node_modules/builder-util/src/fs.ts:189:12)
> [17:21:31][npm run dist]     at /Users/rend/Documents/buildAgent/work/97a47f0f7948b943/src/node_modules/builder-util/src/fs.ts:264:11
> [17:21:31][npm run dist]     at Generator.next (<anonymous>)
> [17:21:31][npm run dist] From previous event:
> [17:21:31][npm run dist]     at FileCopier.copy (/Users/rend/Documents/buildAgent/work/97a47f0f7948b943/src/node_modules/builder-util/src/fs.ts:242:64)
> [17:21:31][npm run dist]     at /Users/rend/Documents/buildAgent/work/97a47f0f7948b943/src/node_modules/app-builder-lib/src/util/appFileCopier.ts:74:36
> [17:21:31][npm run dist]     at Generator.next (<anonymous>)
> [17:21:31][npm run dist]     at xfs.stat (/Users/rend/Documents/buildAgent/work/97a47f0f7948b943/src/node_modules/fs-extra-p/node_modules/fs-extra/lib/mkdirs/mkdirs.js:56:16)
> [17:21:31][npm run dist]     at callback (/Users/rend/Documents/buildAgent/work/97a47f0f7948b943/src/node_modules/graceful-fs/polyfills.js:295:20)
> [17:21:31][npm run dist]     at FSReqWrap.oncomplete (fs.js:154:5)
> [17:21:31][npm run dist] From previous event:
> [17:21:31][npm run dist]     at copyAppFiles (/Users/rend/Documents/buildAgent/work/97a47f0f7948b943/src/node_modules/app-builder-lib/out/util/appFileCopier.js:160:24)
> [17:21:31][npm run dist]     at taskManager.addTask._bluebirdLst.default.each.it (/Users/rend/Documents/buildAgent/work/97a47f0f7948b943/src/node_modules/app-builder-lib/src/platformPackager.ts:310:86)
> [17:21:31][npm run dist] From previous event:
> [17:21:31][npm run dist]     at MacPackager.copyAppFiles (/Users/rend/Documents/buildAgent/work/97a47f0f7948b943/src/node_modules/app-builder-lib/src/platformPackager.ts:310:43)
> [17:21:31][npm run dist]     at /Users/rend/Documents/buildAgent/work/97a47f0f7948b943/src/node_modules/app-builder-lib/src/platformPackager.ts:214:10
> [17:21:31][npm run dist]     at Generator.next (<anonymous>)
> [17:21:31][npm run dist]     at runCallback (timers.js:705:18)
> [17:21:31][npm run dist]     at tryOnImmediate (timers.js:676:5)
> [17:21:31][npm run dist]     at processImmediate (timers.js:658:5)
> [17:21:31][npm run dist] From previous event:
> [17:21:31][npm run dist]     at MacPackager.doPack (/Users/rend/Documents/buildAgent/work/97a47f0f7948b943/src/node_modules/app-builder-lib/src/platformPackager.ts:167:165)
> [17:21:31][npm run dist]     at /Users/rend/Documents/buildAgent/work/97a47f0f7948b943/src/node_modules/app-builder-lib/src/macPackager.ts:90:63
> [17:21:31][npm run dist]     at Generator.next (<anonymous>)
> [17:21:31][npm run dist] From previous event:
> [17:21:31][npm run dist]     at MacPackager.pack (/Users/rend/Documents/buildAgent/work/97a47f0f7948b943/src/node_modules/app-builder-lib/src/macPackager.ts:82:95)
> [17:21:31][npm run dist]     at /Users/rend/Documents/buildAgent/work/97a47f0f7948b943/src/node_modules/app-builder-lib/src/packager.ts:430:24
> [17:21:31][npm run dist]     at Generator.next (<anonymous>)
> [17:21:31][npm run dist]     at xfs.mkdir.er (/Users/rend/Documents/buildAgent/work/97a47f0f7948b943/src/node_modules/fs-extra-p/node_modules/fs-extra/lib/mkdirs/mkdirs.js:37:14)
> [17:21:31][npm run dist]     at FSReqWrap.args [as oncomplete] (fs.js:140:20)
> [17:21:31][npm run dist] From previous event:
> [17:21:31][npm run dist]     at Packager.doBuild (/Users/rend/Documents/buildAgent/work/97a47f0f7948b943/src/node_modules/app-builder-lib/src/packager.ts:396:24)
> [17:21:31][npm run dist]     at /Users/rend/Documents/buildAgent/work/97a47f0f7948b943/src/node_modules/app-builder-lib/src/packager.ts:366:57
> [17:21:31][npm run dist] From previous event:
> [17:21:31][npm run dist]     at Packager._build (/Users/rend/Documents/buildAgent/work/97a47f0f7948b943/src/node_modules/app-builder-lib/src/packager.ts:335:133)
> [17:21:31][npm run dist]     at /Users/rend/Documents/buildAgent/work/97a47f0f7948b943/src/node_modules/app-builder-lib/src/packager.ts:331:23
> [17:21:31][npm run dist]     at Generator.next (<anonymous>)
> [17:21:31][npm run dist]     at runCallback (timers.js:705:18)
> [17:21:31][npm run dist]     at tryOnImmediate (timers.js:676:5)
> [17:21:31][npm run dist]     at processImmediate (timers.js:658:5)
> [17:21:31][npm run dist] From previous event:
> [17:21:31][npm run dist]     at Packager.build (/Users/rend/Documents/buildAgent/work/97a47f0f7948b943/src/node_modules/app-builder-lib/src/packager.ts:288:14)
> [17:21:31][npm run dist]     at build (/Users/rend/Documents/buildAgent/work/97a47f0f7948b943/src/node_modules/app-builder-lib/src/index.ts:59:28)
> [17:21:31][npm run dist]     at build (/Users/rend/Documents/buildAgent/work/97a47f0f7948b943/src/node_modules/electron-builder/src/builder.ts:228:10)
> [17:21:31][npm run dist]     at then (/Users/rend/Documents/buildAgent/work/97a47f0f7948b943/src/node_modules/electron-builder/src/cli/cli.ts:49:19)
> [17:21:31][npm run dist] npm ERR! code ELIFECYCLE
> [17:21:31][npm run dist] npm ERR! errno 1
> [17:21:31][npm run dist] npm ERR! niko_smart_config_tool@2.7.21510 dist: `electron-builder --x64 --ia32`
> [17:21:31][npm run dist] npm ERR! Exit status 1
> [17:21:31][npm run dist] npm ERR! 
> [17:21:31][npm run dist] npm ERR! Failed at the niko_smart_config_tool@2.7.21510 dist script.
> [17:21:31][npm run dist] npm ERR! This is probably not a problem with npm. There is likely additional logging output above.
> [17:21:31][npm run dist] 
> [17:21:31][npm run dist] npm ERR! A complete log of this run can be found in:
> [17:21:31][npm run dist] npm ERR!     /Users/rend/.npm/_logs/2020-01-14T16_21_31_648Z-debug.log
> 

Thanks!




<!-- Which version of electron-builder are you using? -->
<!-- Please always try to use latest version before report. -->
* **Version**: 6.0.10

<!-- Which version of electron-updater are you using (if applicable)? -->

<!-- What target are you building for? -->
* **Target**: MAS

<!-- Enter your issue details below this comment. -->
<!-- If you want, you can donate to increase issue priority (https://www.electron.build/donate) -->
I am trying to build for mas using the `vue-cli-plugin-electron-builder` module, which currently only supports Electron 6.0. 

I am able to build and successfully sign a mas pkg, but it has a number of verification issues when loaded into Transporter. Here is a log:

```
ERROR ITMS-90277: "Invalid Bundle Identifier. The application bundle contains a tool or framework Electron Helper (GPU) [com.beadz-drums.beadz.pkg/Payload/Beadz.app/Contents/Frameworks/Beadz Helper (GPU).app] using the bundle identifier 'com.beadz-drums.beadz.helper.(GPU)', which is not a valid bundle identifier."

ERROR ITMS-90277: "Invalid Bundle Identifier. The application bundle contains a tool or framework Electron Helper (Plugin) [com.beadz-drums.beadz.pkg/Payload/Beadz.app/Contents/Frameworks/Beadz Helper (Plugin).app] using the bundle identifier 'com.beadz-drums.beadz.helper.(Plugin)', which is not a valid bundle identifier."

ERROR ITMS-90277: "Invalid Bundle Identifier. The application bundle contains a tool or framework Electron Helper (Renderer) [com.beadz-drums.beadz.pkg/Payload/Beadz.app/Contents/Frameworks/Beadz Helper (Renderer).app] using the bundle identifier 'com.beadz-drums.beadz.helper.(Renderer)', which is not a valid bundle identifier."

ERROR ITMS-90284: "Invalid Code Signing. The executable 'com.beadz-drums.beadz.pkg/Payload/Beadz.app/Contents/Frameworks/Beadz Helper (GPU).app/Contents/MacOS/Beadz Helper (GPU)' must be signed with the certificate that is contained in the provisioning profile."

ERROR ITMS-90284: "Invalid Code Signing. The executable 'com.beadz-drums.beadz.pkg/Payload/Beadz.app/Contents/Frameworks/Beadz Helper (Plugin).app/Contents/MacOS/Beadz Helper (Plugin)' must be signed with the certificate that is contained in the provisioning profile."

ERROR ITMS-90284: "Invalid Code Signing. The executable 'com.beadz-drums.beadz.pkg/Payload/Beadz.app/Contents/Frameworks/Beadz Helper (Renderer).app/Contents/MacOS/Beadz Helper (Renderer)' must be signed with the certificate that is contained in the provisioning profile."

ERROR ITMS-90284: "Invalid Code Signing. The executable 'com.beadz-drums.beadz.pkg/Payload/Beadz.app/Contents/Frameworks/Beadz Helper.app/Contents/MacOS/Beadz Helper' must be signed with the certificate that is contained in the provisioning profile."

ERROR ITMS-90284: "Invalid Code Signing. The executable 'com.beadz-drums.beadz.pkg/Payload/Beadz.app/Contents/Frameworks/Electron Framework.framework/Versions/A/Electron Framework' must be signed with the certificate that is contained in the provisioning profile."

ERROR ITMS-90284: "Invalid Code Signing. The executable 'com.beadz-drums.beadz.pkg/Payload/Beadz.app/Contents/Frameworks/Electron Framework.framework/Versions/A/Libraries/libEGL.dylib' must be signed with the certificate that is contained in the provisioning profile."

ERROR ITMS-90284: "Invalid Code Signing. The executable 'com.beadz-drums.beadz.pkg/Payload/Beadz.app/Contents/Frameworks/Electron Framework.framework/Versions/A/Libraries/libGLESv2.dylib' must be signed with the certificate that is contained in the provisioning profile."

ERROR ITMS-90284: "Invalid Code Signing. The executable 'com.beadz-drums.beadz.pkg/Payload/Beadz.app/Contents/Frameworks/Electron Framework.framework/Versions/A/Libraries/libffmpeg.dylib' must be signed with the certificate that is contained in the provisioning profile."

ERROR ITMS-90284: "Invalid Code Signing. The executable 'com.beadz-drums.beadz.pkg/Payload/Beadz.app/Contents/Frameworks/Electron Framework.framework/Versions/A/Libraries/libswiftshader_libEGL.dylib' must be signed with the certificate that is contained in the provisioning profile."

ERROR ITMS-90284: "Invalid Code Signing. The executable 'com.beadz-drums.beadz.pkg/Payload/Beadz.app/Contents/Frameworks/Electron Framework.framework/Versions/A/Libraries/libswiftshader_libGLESv2.dylib' must be signed with the certificate that is contained in the provisioning profile."

ERROR ITMS-90284: "Invalid Code Signing. The executable 'com.beadz-drums.beadz.pkg/Payload/Beadz.app/Contents/Library/LoginItems/Beadz Login Helper.app/Contents/MacOS/Beadz Login Helper' must be signed with the certificate that is contained in the provisioning profile."

ERROR ITMS-90284: "Invalid Code Signing. The executable 'com.beadz-drums.beadz.pkg/Payload/Beadz.app/Contents/MacOS/Beadz' must be signed with the certificate that is contained in the provisioning profile."

ERROR ITMS-90296: "App sandbox not enabled. The following executables must include the "com.apple.security.app-sandbox" entitlement with a Boolean value of true in the entitlements property list: [( "com.beadz-drums.beadz.pkg/Payload/Beadz.app/Contents/Frameworks/Beadz Helper (GPU).app/Contents/MacOS/Beadz Helper (GPU)", "com.beadz-drums.beadz.pkg/Payload/Beadz.app/Contents/Frameworks/Beadz Helper (Plugin).app/Contents/MacOS/Beadz Helper (Plugin)", "com.beadz-drums.beadz.pkg/Payload/Beadz.app/Contents/Frameworks/Beadz Helper (Renderer).app/Contents/MacOS/Beadz Helper (Renderer)", "com.beadz-drums.beadz.pkg/Payload/Beadz.app/Contents/Frameworks/Beadz Helper.app/Contents/MacOS/Beadz Helper", "com.beadz-drums.beadz.pkg/Payload/Beadz.app/Contents/Library/LoginItems/Beadz Login Helper.app/Contents/MacOS/Beadz Login Helper" )] Refer to App Sandbox page at https://developer.apple.com/devcenter/mac/app-sandbox/ for more information on sandboxing your app."
```

I have addressed these issues by following the instruction at https://david.dev/electron-cannot-build-mas-on-os-x-mojave/ (which references official/accepted workarounds).

Other info:

**App id:** com.beadz-drums.beadz
**Builder config (from `vue.config.js`):**
```
        mac: {
          category: 'public.app-category.music',
          entitlements: 'build/entitlements.mac.plist',
          icon: 'build/icon.icns',
          target: ['mas']
        },
        mas: {
          type: 'distribution',
          category: 'public.app-category.music',
          entitlements: 'build/entitlements.mas.plist',
          icon: 'build/icon.icns',
          target: ['pkg']
        }
```

Thank you.

As far as I can see the updater doesn't expose any method for detecting if it's currently performing a check for updates or not, without one multiple checks for updates may be performed simultaneously, and that as I'm understanding may lead to errors to be thrown like this one: https://github.com/notable/notable/issues/577