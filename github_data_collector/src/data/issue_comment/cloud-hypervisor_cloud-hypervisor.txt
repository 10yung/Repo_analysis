vhost-user-blk has it. It would be nice to make sure that virtio-blk has the same set of features.

CC: @slp 
Using vhost-user gives security improvements over virtio with in-process (with scope of lots more) 

- [ ] Unify vhost-user-net and vhost-user-block binary commandline style so that it does not conflict with cloud-hypervisor
- [ ] Pull "main" functions for vhost-user-block and vhost-user-net into cloud-hypervisor main binary
- [ ] Spawn `/proc/$pid/exe` if no backend specified for vhost-user-net and vhost-user-blk
- [ ] Unify --vhost-user-blk into --disk (might rename to --block)
- [ ] Unify --vhost-user-net into --net
- [ ] Make vhost-user default for net and block
With #409 merged we now support MQ in virtio-net and vhost-user-net (device side) but the backend needs to have MQ multithreading enabled.
Some of the tests in vhost_rs fail and are marked with `#[ignore]" they should be investigated and either fixed or removed.
@sboeuf @rbradford @bjzhjing 

When we enable multiple-thread for multiple-queue in the vhost device and backend, we found we need to change vhost_user_backend crate, which will impact among blk, net and fs backend. What's more, those three virtio devices have different virt-queue definitions. So, if we want to enable MQ in vhost user device and backend, we had better look for a better solution. thanks. 
@sboeuf @sameo 

This patch set is for MQ support in the vhost-user-blk device and backend, please help review, thanks.


TBD
`resources/linux-5.0-config` is (as its name implies) 5.0 based while `resources/linux-virtio-fs-virtio-iommu-config` is 5.3-rc1` based.
5.5-rc1 just got released, so we should at least switch to 5.4 for our kernel configs.
Implement missing DAX support. This means we need to add support for `VHOST_USER_PROTOCOL_F_SLAVE_REQ` to the vhost_user_backend crate, as we need to support some slave driven events.
Currently for reboot we tear down large parts of the VMM: in particular DeviceManager and CpuManager. This design decision was made to avoid issues with resetting the devices (in particular needing to implement VIRTIO device reset.) However as we look towards implementing hotplug of devices it would be better to be able to just destroy the vCPU threads and preserve the rest of the state.