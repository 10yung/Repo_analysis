So far this is only available as a preview:
https://developer.github.com/v3/pulls/#create-a-pull-request
> Note: The Draft Pull Request API is currently available for developers to preview.


I never ran git hub setup before. Today I encounter rate limiting and decide that I want to authenticate.

Just running 'git hub -A pr-list' initiates the process of generating
one. It starts a dialog with me within which it asks me for my github
pw. I copy and paste it into the dialog window and now everything
hangs.

Retrying, but it does not behave better. I mean, it freezes the
window. At least I can unfreeze it with ^C.

In my third try I did start with 'git hub setup'. That went well and
after that everything went well. So the only bug seems to be in the
input-output handling of the -A option.

Let me know if you cannot reproduce or have questions.

Greets,
`--merge-method, --sha, --commit-title, --commit-message`

I had problems with `make doc`:
```
swim --to=man doc/git-hub.swim > man/man1/git-hub.1
.../perls/perl-5.24.1/bin/swim: 65280 - IO::File=IO(0x55d2a3f05988) around line 1: No name given for document
POD document had syntax errors at .../perls/perl-5.24.1/bin/pod2man line 70.
Makefile:90: recipe for target 'man/man1/git-hub.1' failed
make: *** [man/man1/git-hub.1] Error 29
```
Installed git hub is commit `a4b5580678f18a9f91c0783250f2850383be58ec`.

When I redirect stdout for a specific repository `git hub forks` exits with status 1.
For a different repository the status is 0.
When not redirecting stdout the problematic repository is not a problem anymore.

Removing the `--git-dir` option I used and the behaviour is all the same.
(The CWD is outside any git checkout)

As such I am suspecting that `git hub forks` has an issue with the repository itself, and not the local checkout for it. Trying the command on a different machine and I see the same issue.

Something in the intersection of the specific repository (`mattijk/consio`) and stdout a terminal vs redirected to a file for `git hub forks` is trouble.

Here is my session for one the boxes, still all with `--git-dir`.

```
aku@tagetarl:~/Data/My/Mirror> echo $TERM
xterm

aku@tagetarl:~/Data/My/Mirror> 2> E > L git --git-dir /data/Mirror/tcl/store/330/source.git hub forks --raw flightaware/TclProDebug ; echo $?
0

aku@tagetarl:~/Data/My/Mirror> 2> E > L git --git-dir /data/Mirror/tcl/store/733/source.git hub forks --raw mattijk/consio ; echo $?
1

aku@tagetarl:~/Data/My/Mirror> 2> E git --git-dir /data/Mirror/tcl/store/330/source.git hub forks --raw flightaware/TclProDebug ; echo $?
apnadkarni/TclProDebug
h0nza/TclProDebug
0

aku@tagetarl:~/Data/My/Mirror> 2> E git --git-dir /data/Mirror/tcl/store/733/source.git hub forks --raw mattijk/consio ; echo $?
0

```
The `git hub version` command reports `0.1.4`.
According to the tags a version 0.1.5 was made in 2015.

I suspect that `lib/git-hub` (line 20) was not updated at the time.

Hi!

First of all, your [git-subrepo](https://github.com/ingydotnet/git-subrepo) is just great and works like a charm.

I have installed `git-hub` under **Windows Git Bash** by
```
git clone https://github.com/ingydotnet/git-hub ~/bin/git-hub
echo 'source ~/bin/git-hub/.rc' >> ~/.bashrc
```

Now any `git hub` command reports ```/c/Users/oleksiy/bin/git-hub/lib/git-hub.d/bash+.bash: line 1: ../../ext/bashplus/lib/bash+.bash: No such file or directory```

My idea was that default permissions under `~/bin/` might be insufficient, so I placed `git-hub` in a place similar to where `git-subrepo` is installed at (and `git-subrepo` works fine) and changed `source` instruction in `.bashrc` as appropriate.

Now `.bashrc` looks as follows:
```
source "/d/Program Files.portable/git.scripts/git-subrepo/.rc"
source "/d/Program Files.portable/git.scripts/git-hub/.rc"
```

Now **Windows Git Bash** at launch reports:
```
bash: cd: $'/d\nFiles.portable/git.scripts/git-hub': No such file or directory
bash: /c/Users/oleksiy/share/enable-completion.sh: No such file or directory
```
And `git hub <anything>` reports `git: 'hub' is not a git command. See 'git --help'.`

Will appreciate any suggestions on the above.
I realize this may be a major headache, depending on how this project is designed, and the web API's these services offer, so this is more of an inquiry than an outright request.

How viable would it be to decouple the web API schema from this git extension to swap out when hosting on another similar system is detected?

BTW, just saw your talk on git-hub and git-subrepo. Both are quite impressive. Great job, Thanks!

This pull request is a part of #216 
This "thing" renders as \"thing\".

See:
```
git hub issue ingydotnet/git-subrepo  317
...
 I'm trying to \"sell\" subrepos to move from an existing mercurial setup (+
...
```
