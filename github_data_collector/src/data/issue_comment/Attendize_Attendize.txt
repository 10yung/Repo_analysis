Hello!

I work in theatre and often when selling tickets for an event we'll have different ticket prices without knowing the exact number of each type of ticket we'll need but with a maximum total number of tickets to sell. 

For example: If I'm doing a kids show with a 200 seat theatre, I may have 2 price points (adult and kid) but I don't know exactly how many of each ticket type I'll need, just that the total number of tickets sold cannot exceed 200.

I think it would benefit many if there was an option to set a maximum number of tickets when creating an event to automatically limit the number of tickets sold regardless of ticket type (and maybe also an option to exclude certain types of tickets from the overall count). 

Thank you! 

(I would do it myself if I had any coding skills, I'm a huge fan of this project and eternally grateful that I've found it!)
I'm testing the software and It seems wonderful, but QR Scanning doesn¡t work.

I tested on Firefox on Mac and Chrome and Firefox on Android.

I¡m getting the "Couldn't find enough finder patterns" error.

Any ideas?

Thanks.
I created an event and configured everything. But when I try to end the event details and click on the customize link it loads a page with the message **"We'll be back soon
We're currently making improvements to our website."**

How can i fix this issue?

Version 1.0.0
The application can execute remote code (XSS) on the Account settings page at the version check. Attendize uses a http request to `https://attendize.com/version.php` to check for a newer version. Since the response is just inserted onto the html any code can be executed. Here is a POC response `9.0.0 <script>alert(1)</script>`

Or just change the lines:

https://github.com/Attendize/Attendize/blob/7ca897ff72c4aa64c42de55d2c351b95d7b42467/app/Http/Controllers/ManageAccountController.php#L231-L242

```php
        $latestVersion = '9.0.0 <script>alert(1)</script>';

        // try {
        //     $http_client = new Client();
        //     $response = $http_client->get('https://attendize.com/version.php');
        //     // Warn: untrusted content! is not validated but inserted into html (EditAccount.blade.phpL149)!
        //     $latestVersion = (string)$response->getBody();
        // } catch (\Exception $exception) {
        //     return false;
        // }
```

I only came across  this issue when I got an 500 error because I blocked outgoing connections. The return value of the function that is getting the current version could return `false`; While there is nothing wrong with that except that the functions calling it never check for this condition. Alternatively the function could have default values set and always return a valid data structure.
*DO NOT MERGE UNTIL https://github.com/Transportersio/omnipay-square/pull/10 IS MERGED*
_Opening PR for pre-review while dependency gets merged_
_If you want to test, you can [use my fork of omnipay-square](https://github.com/jpverdejo/Attendize/commit/5be58ff23fad567b2dadcdb2b9c536025715ee4e#diff-b5d0ee8c97c7abd7e3fa29b9a27d1780)_

PR adds support for Square gateway. If it gets merged I'd open a new PR to update the docs to point to this PR. After the Payment Gateway refactory in https://github.com/Attendize/Attendize/pull/683 the example on the docs doesn't make much sense anymore.
None
I'm not an expert on how bots scrape websites, but I know they're finding the contact form on our site and sending a bunch of spam.

I see that the Contact form is just a hidden div. The "Contact" button's click event looks like it just gets rid of the dipaly:none; on the contact form.

I'm thinkin if the form wasn't in the DOM to begin with, bots aren't good at javascript and wouldn't be able to fill in/submit the form. Should I rig up that contact button to generate the form HTML?

I'm sure other folks have had the same issue. Any creative solutions out there?

<img width="802" alt="image" src="https://user-images.githubusercontent.com/3982200/71312050-3c59e600-23ec-11ea-9a4b-6cc7e301e40f.png">

1. Allow Pay offline orders to be cancelled.
2. Fixed bug where if the order requires payment the offline payments option is shown if enabled.
3. Upgrade docker images to PHP7.3
4. Changed Cancel/Refund button to just cancel to remove ambiguity.
It's possible to show in a panel a number of users who checked in in real time? 
Version 1.0.0