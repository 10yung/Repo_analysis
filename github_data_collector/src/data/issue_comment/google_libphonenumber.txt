Added new prefixes :
1) "010" Azercell
2) "099" Bakcell
Complemented geo tagging for Åland Islands. Alla according to the description in http://en.wikipedia.org/wiki/+358
Currently, only libphonenumber jar is supported in OSGI environement, not geocoder, carrier and prefixmapper jars that does not have OSGI metadata. 
This pull request update build to allow these jars to be used in OSGI environement as well. 

* In OSGI these jars will be fragment of libphonenumber bundle, it is necessary because they export things in same package than libphonenumber. 

* I have added Eclipse-ExtensibleAPI metadata in libphonenumber, this has no impacts for OSGI runtime at all but improve development experience with eclipse PDE by indicating to eclipse that fragments must be added to the classpath.
This fixes the build error I saw today:
phonenumbermatcher.cc:715:7: error: ‘GetNationalNumberGroupsForPattern’ was not declared in this scope
due to the compiler picking an older installed
phonenumbers/phonenumbermatcher.h header than the one under src.

This problem doesn't usually happen with cmake because normally
this would all be done from src/CMakeLists.txt with
set(CMAKE_INCLUDE_CURRENT_DIR ON), but that would require more
refactoring.
The pull request #2371 added support for lock with c++ 11, but not Singleton.

This PR provide support of both singleton and lock for both C++11 and Windows native Win32 API (like posix does).

Polish phone number ranges taken from the published list by the Office of Electronic Communication: https://numeracja.uke.gov.pl/en/plmn_tables

I also used the wikipedia page: https://pl.wikipedia.org/wiki/Zakresy_numeracji_dla_sieci_ruchomych_w_Polsce
to map some operators name (e.g. P4) to their well recognized brand (Play).


Currently the find_required_program function checks for
"${${NAME}_BIN}-NOTFOUND" which has an extra level of indirection
causing the function to miss when a program isn't found:

[1/127] Generating src/phonenumbers/metadata.cc, src/phonenumbers/metadata.h
FAILED: src/phonenumbers/metadata.cc src/phonenumbers/metadata.h
cd /run/build/libphonenumber/cpp && JAVA_BIN-NOTFOUND -jar /run/build/libphonenumber/cpp/../tools/java/cpp-build/target/cpp-build-1.0-SNAPSHOT-jar-with-dependencies.jar BuildMetadataCppFromXml /run/build/libphonenumber/cpp/../resources/PhoneNumberMetadata.xml /run/build/libphonenumber/cpp/src/phonenumbers metadata
/bin/sh: JAVA_BIN-NOTFOUND: command not found

To fix this, we change the function to check for
"${NAME}_BIN-NOTFOUND" instead, which works.
In phonenumberutil_test, there are compiler warnings:
"comparison of integers of different signs: 'const int' and 'const unsigned long' [-Werror,-Wsign-compare]"

Due to lines such as:
EXPECT_EQ(0, types.size());
EXPECT_NE(0u, test_number.national_number());

Where 0 defaults to a const int and types.size() is a const unsigned long. By changing 0 to 0u, we can compare two unsigned values to not have this compiler warning.

This pull request adds two new build options:

* `USE_PROTOBUF_LITE` - When this is set to `ON` then it links against `protobuf-lite` instead of the full version of `protobuf`. As far as I could see the metadata has `option optimize_for = LITE_RUNTIME;` so it should be safe to use the lite version. This is useful when you want to save some disk space. The default is `OFF`.
* `REGENERATE_METADATA` - When this is set to `OFF` it will skip regenerating the metadata with `BuildMetadataCppFromXml`. Since the metadata is included in the source tree anyway, it is beneficial for packagers to turn this `OFF`: it saves some time, and it also makes it unnecessary to have java in the build environment. The default is `ON`.

Please let me know what you guys think.
Updated Finnish carrier list referring to latest national regulator documentation