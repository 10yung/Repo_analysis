I tried to create this tempalte `AutoScaling/AutoScalingMultiAZWithNotifications.yaml` in this repo, and I always get this issue  in ASG creation ```Received 0 SUCCESS signal(s) out of 1. Unable to satisfy 100% MinSuccessfulInstancesPercent requirement```

Can you take a look on this
I tested in Oregon btw

Thanks
CloudFormation templates in aws-cloudformation-templates have been found to include a [deprecated Lambda function runtime](https://docs.aws.amazon.com/lambda/latest/dg/runtime-support-policy.html) (nodejs4.3). The affected templates have been updated to a supported runtime (nodejs10.x).

Please note, **this pull request has been generated by a bot**; please check the base branch and files changed before merging.

By submitting this pull request, I confirm that you can use, modify, copy, and redistribute this contribution, under the terms of your choice.
CloudFormation templates in aws-cloudformation-templates have been found to include a [deprecated Lambda function runtime](https://docs.aws.amazon.com/lambda/latest/dg/runtime-support-policy.html) (nodejs6.10). The affected templates have been updated to a supported runtime (nodejs10.x).

Please note, **this pull request has been generated by a bot**; please check the base branch and files changed before merging.

By submitting this pull request, I confirm that you can use, modify, copy, and redistribute this contribution, under the terms of your choice.
CloudFormation templates in aws-cloudformation-templates have been found to include a [deprecated Lambda function runtime](https://docs.aws.amazon.com/lambda/latest/dg/runtime-support-policy.html) (nodejs8.10). The affected templates have been updated to a supported runtime (nodejs10.x).

By submitting this pull request, I confirm that you can use, modify, copy, and redistribute this contribution, under the terms of your choice.
This issue is a question on how to use the cloudformation count or [explode macro](https://github.com/awslabs/aws-cloudformation-templates/tree/master/aws/services/CloudFormation/MacrosExamples/Explode).  We are using the explode macro to generate multiple security groups and we want to apply those generated security groups to an EC2 instance in our cloudformation template.  Is there a way to get a reference to the generated (or exploded) resources so that we can apply them as a dependency to another resource? 

Here's an example:
```
AWSTemplateFormatVersion: "2010-09-09"
Transform: Explode
Mappings:
  SecurityGroupMap:
    Web:
      Port: "80"
    SSH:
      Port: "22"
Resources:
  MySecurityGroup:
    ExplodeMap: SecurityGroupMap
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Instance security group"
      SecurityGroupIngress:
        - CidrIp: "0.0.0.0/0"
          FromPort: "!Explode Port"
          ToPort: "!Explode Port"
          IpProtocol: tcp
  MyEc2:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: "ami-00068cd7555f543d5"
      InstanceType: "t3.nano"
      SecurityGroups:
        - <Reference to the generated MySecurityGroup Web Port resource name or ID>
        - <Reference to the generated MySecurityGroup SSH Port resource name or ID>
```

If referencing the generated resource names is not possible then are there any alternatives to solving this use case?
Current examples do not contain the use of server side encryption and KMS with SQS in cloudformation. It would be a useful addition
Referred to the AWS documentation and provided a description.
China AWS documentation for some reason, still accurate:
https://docs.amazonaws.cn/en_us/AmazonCloudFront/latest/DeveloperGuide/ServingCompressedFiles.html
https://docs.amazonaws.cn/en_us/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-defaultcachebehavior.html

*Issue #, if available:*

*Description of changes:*


By submitting this pull request, I confirm that you can use, modify, copy, and redistribute this contribution, under the terms of your choice.

Simple typo in filename, no content change.

By submitting this pull request, I confirm that you can use, modify, copy, and redistribute this contribution, under the terms of your choice.

I need to create a unique name for the string macro by concatenating the stack name. For example, ${AWS::StackName}-MyString

```
  TransformFunctionPermissions:
    Type: AWS::Lambda::Permission
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName: !GetAtt TransformFunction.Arn
      Principal: 'cloudformation.amazonaws.com'
  Transform:
    Type: AWS::CloudFormation::Macro
    Properties:
      Name: !Sub ${AWS::StackName}-MyStringFunctions
      Description: Provides various string processing functions
      FunctionName: !GetAtt TransformFunction.Arn
```

However, when I tried to use !Sub (or !Ref) to call the transform StringFunctions, it doesn't like it:

      RepositoryName:
        'Fn::Transform':
         - Name: !Sub ${AWS::StackName}-MyStringFunctions
           Parameters:
             InputString: 'MyValue'
             Operation: Lower

The `Name` has to be a static name (e.g., MyStringFunctions) and I cannot use !Sub or !Ref
* Create CodePipeline by separating CodeCommit & CodePipeline under its own Account.
* Launch Windows EC2 configured with IIS and FTP server.

By submitting this pull request, I confirm that you can use, modify, copy, and redistribute this contribution, under the terms of your choice.
